movzbw
pop
pushf
push
pushf
pushl
ret
add
inc
jb
popa
je
push
arpl
outsb
dec
outsb
imul
add
jbe
insb
imul
je
add
dec
jne
inc
imul
adc
mov
pushf
pushl
ret
push
call
jns
popf
push
xchg
add
dec
outsl
jbe
push
imul
outsl
insl
fs
xor
cs
insb
add
add
outsl
arpl
jae
xor
jb
je
not
call
add
push
arpl
gs
imul
je
js
add
push
gs
imul
outsl
arpl
jae
addl
push
pushl
lea
jmp
xchg
pusha
dec
call
add
push
gs
gs
inc
outsl
insb
outsl
jb
jmp
add
inc
insb
insb
imul
pop
icebp
push
call
sbb
push
jmp
add
push
gs
dec
push
xor
add
inc
jb
jns
je
imul
inc
imul
outsl
ja
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
mov
adc
jmp
add
push
gs
imul
outsb
add
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
push
gs
imul
gs
add
dec
insb
gs
insb
jne
push
bound
jb
add
adc
test
cmpsl
fimuls
pusha
pusha
lea
jmp
add
inc
push
js
inc
add
add
gs
je
push
outsl
jo
jo
outsb
jne
add
dec
inc
dec
popa
jo
je
imul
inc
insl
jo
jns
insb
imul
add
add
je
jbe
outsb
je
movzbw
dec
btc
mov
cmc
test
and
pusha
lea
jnp
pusha
cmp
add
add
cmc
clc
cmc
add
call
jmp
add
dec
outsb
data16
popa
je
push
arpl
add
inc
gs
popa
insb
jne
add
add
je
jo
outsb
inc
imul
add
add
add
add
je
imul
inc
gs
gs
inc
imul
jb
popa
je
push
outsb
add
add
je
imul
add
inc
gs
je
arpl
bound
arpl
cmpl
and
aam
pusha
lea
jmp
add
push
popa
insb
imul
je
add
inc
gs
jb
arpl
jae
gs
jo
add
inc
gs
imul
arpl
add
push
imul
outsl
outsl
imul
test
test
test
push
jmp
add
inc
gs
gs
dec
bound
arpl
add
je
imul
add
inc
jb
add
add
gs
dec
outsb
jne
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
jb
gs
outsl
outsb
outsb
arpl
add
push
gs
outsl
insb
jns
imul
add
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
add
je
push
dec
outsb
outsw
add
add
je
jb
arpl
jae
gs
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
movb
pushl
push
lea
jmp
adc
fdivs
nop
cli
sbb
shrb
adc
sbb
push
mov
fistpl
in
mov
dec
sub
out
pop
addr16
mov
je
popa
jbe
inc
imul
add
add
imul
dec
jne
add
enter
xchg
or
mov
test
cmc
pushf
pushf
xchg
clc
shl
sbb
bts
mov
clc
sub
movb
push
rep
movsbw
mov
push
pusha
push
pushf
lea
jmp
adc
pushf
movw
pushf
pushl
ret
add
inc
jb
ja
arpl
inc
js
pusha
sub
jmp
add
push
gs
jb
outsl
jb
outsl
fs
add
je
jne
jb
outsb
je
push
dec
add
add
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
jbe
dec
jne
push
jb
je
add
add
push
imul
outsl
arpl
add
inc
outsb
fs
popa
imul
gs
jo
gs
insb
insb
outsl
arpl
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
pusha
call
push
dec
dec
dec
dec
inc
push
cs
insb
add
add
popa
jo
insb
insb
outsl
arpl
call
test
and
cmc
scas
fsubrl
jmp
sub
es
sub
imul
out
hlt
dec
or
repnz
leave
test
jg
or
cli
add
icebp
sbb
jns
scas
sub
into
inc
push
lock
mov
fsubr
push
lods
lods
mov
int3
pop
in
sbb
inc
mov
aaa
sbb
sbb
stos
pop
pop
imul
scas
and
adc
sub
xchg
mov
jmp
ljmp
outsl
lods
daa
call
push
icebp
push
test
dec
ret
in
aaa
sbb
fistpl
cld
fstpl
sub
add
jb
mov
mov
and
add
pop
dec
cmp
stc
fbld
cmpsb
imul
test
enter
gs
xor
stos
pop
xor
iret
stc
adc
mull
jl
jno
xor
dec
cmp
fwait
sti
gs
and
out
mov
lods
add
mov
xchg
imul
add
in
cmp
in
or
mov
ja
jbe
push
sub
push
or
adc
loop
jle
jle
sub
dec
fisttpl
lret
cmpsl
fstl
xchg
leave
imul
lock
jno
add
rorb
sbb
icebp
jge
and
mov
mov
std
pop
imul
push
push
jl
add
adc
daa
out
mov
or
mov
and
stos
xchg
jge
xor
pop
cmc
mov
cmpsl
lahf
in
mov
dec
fmuls
cmc
arpl
je
add
mov
hlt
out
add
jle
mov
dec
out
or
out
and
cmp
adc
sub
movsl
imul
idivb
jmp
lock
jg
out
xor
and
clc
std
push
bound
je
add
popf
jbe
and
push
insl
sub
jae
jbe
imul
and
call
stos
pushf
dec
stos
mov
fsubs
lret
in
fadd
jns
sub
add
fcompl
shrb
in
add
push
adc
sti
repz
add
add
cmp
lock
outsl
in
imul
add
pop
decl
hlt
or
jnp
jno
cmpsb
ljmp
out
lcall
into
imul
sar
testb
or
data16
out
div
in
sbb
add
stos
test
inc
add
in
sbb
jmp
into
jl
add
push
cmp
scas
sbb
rdtsc
insb
jb
loope
pushl
sub
jno
pop
xor
jne
and
add
cmp
fimuls
dec
add
dec
or
movsl
ljmp
sub
xchg
test
in
jae
sbb
cld
mov
popa
rorl
insl
icebp
loopne
jnp
jl
rcrl
and
pusha
dec
jle
and
aam
cmc
dec
dec
and
into
jmp
stos
mov
iret
in
test
in
loopne
jae
cmp
jmp
sbb
push
add
outsb
pop
lods
add
out
ret
inc
mull
jmp
fldl
in
cmp
pop
imul
lcall
lock
jg
mov
std
mov
ja
outsb
push
mov
jmp
out
inc
pushl
cld
fldlg2
sub
insb
add
dec
sbbb
xchg
out
sub
imul
add
adc
out
jmp
stc
gs
xor
mov
jmp
jae
out
out
cmp
shrl
lahf
out
into
aam
mov
gs
enter
imul
je
push
stos
cmp
and
and
int3
and
mov
or
xor
inc
lea
sbb
sbb
inc
add
mov
or
pop
sbb
lahf
sahf
push
movsb
and
out
gs
fisubl
push
movsl
dec
mov
mov
xor
mov
push
scas
xchg
les
push
and
int3
sub
mov
mov
dec
cmp
sub
sub
or
dec
cltd
insb
adc
scas
repz
and
mov
lods
fisttpl
sbb
mov
std
loope
mov
sub
and
jae
std
or
das
gs
repz
scas
mov
lcall
mov
xor
orb
in
gs
aas
pop
push
and
nop
repnz
mov
in
fimuls
stc
sub
xchg
ljmp
push
lods
aad
dec
es
shrb
data16
cli
negl
sbb
sbb
fldl
insb
cmp
fsubr
lock
dec
int3
sbb
lea
mov
jle
scas
pop
sub
jae
or
mov
cmp
dec
jbe
xchg
xchg
mov
test
or
das
push
dec
mov
insb
dec
sub
add
add
in
xchg
clc
icebp
sti
sarl
std
fwait
push
pop
negl
pop
jmp
lods
inc
imul
insb
insb
mulb
pusha
arpl
test
jne
jns
pushf
lea
imul
or
sub
dec
and
sbb
xor
jmp
lea
mov
imul
adc
psubsb
xor
push
adc
test
adc
pop
in
xchg
pushf
lock
lahf
mov
push
pop
inc
insl
dec
andl
and
xchg
nop
xor
cmc
inc
outsl
clc
push
repnz
clc
mov
mov
lret
xchg
xchg
mull
out
js
out
inc
mov
nop
xchg
or
add
out
pop
add
add
std
dec
cmp
add
cs
fldt
aaa
js
test
push
mov
and
add
push
jo
sbb
cmp
int
adc
adc
out
cmp
mov
dec
sub
dec
lods
out
imull
gs
test
loope
sahf
lahf
pop
or
pop
insb
in
iret
bound
xchg
push
pop
pop
mov
iret
repz
pop
jne
imul
test
pop
xor
sbb
jno
mov
in
push
js
in
out
jle
stos
cli
dec
xchg
icebp
out
icebp
iret
push
xchg
lret
mov
gs
sbb
push
or
lods
jg
lock
add
mov
std
cmp
cmp
mov
or
sar
gs
jo
decl
cli
jae
repnz
cwtl
jl
imul
inc
sub
faddl
adc
imul
fimuls
js
repz
add
gs
add
in
and
sub
adc
pop
push
jle
mov
push
fidivs
add
xlat
mov
cmp
pop
seta
insl
push
xchg
or
add
xchg
lahf
call
ds
xchg
sub
add
sbb
cld
or
add
cmp
out
gs
mov
scas
dec
xor
cli
and
in
cmc
xlat
cld
sub
adc
aas
gs
nop
loope
pop
sub
jmp
xor
jle
mov
xor
add
xchg
sub
mov
shrl
pop
sub
lea
in
xor
dec
adc
gs
jp
outsb
cli
gs
cmp
mov
enter
bound
sub
test
cwtl
xchg
ds
mov
inc
and
arpl
bound
rcrb
in
mov
pop
sub
and
dec
test
pop
mov
sbb
jae
cli
jg
push
movsl
inc
dec
sub
jnp
and
jo
xor
jae
or
push
lret
jo
xchg
mov
in
push
mov
imulb
clc
cltd
lahf
pop
push
or
xchg
dec
es
in
mov
sti
xchg
icebp
sbb
lock
pop
ds
inc
mov
and
pop
sub
in
adc
hlt
in
push
mov
jns
movsb
fwait
outsl
cltd
movsb
in
pusha
lds
lret
inc
imul
and
add
jmp
inc
mov
js
pusha
cs
das
add
dec
outsb
aam
xor
jno
dec
cmp
repz
sub
add
clc
scas
testl
cmc
nop
cli
dec
push
cwtl
out
mov
add
or
stc
pop
aas
cmp
insb
mov
add
pop
and
lods
cmp
push
cmp
insl
in
mov
jp
ja
das
shrl
pop
adc
insb
xor
repnz
stc
add
or
mov
shrl
out
movzbl
jmp
pop
add
push
fwait
mov
fcompl
imul
adc
jle
cmp
inc
mov
shll
push
add
sub
lock
shr
push
fwait
pop
imul
ljmp
mov
clc
xor
pop
lcall
and
iret
xchg
pop
iret
aam
pop
into
xlat
xchg
push
xchg
dec
add
hlt
insb
arpl
jb
out
popf
inc
mov
into
jmp
add
mov
adc
mov
out
lods
or
dec
push
insl
gs
xchg
push
test
loope
pop
cmpsb
cmc
sti
vmovaps
incb
xchg
lcall
add
jecxz
call
imul
sub
pop
aaa
jo
in
call
and
dec
sbb
stos
sbb
ss
inc
add
xchg
push
adc
add
mov
xor
stc
lds
leave
scas
dec
jge
std
dec
popf
add
sub
dec
cmp
adc
jg
subb
adc
dec
sub
lods
test
add
pop
push
pop
xor
mov
in
xor
pop
call
and
pop
loope
insb
notl
and
dec
add
and
cmpsb
cld
mov
push
adc
loope
aad
jns
stos
add
testb
ds
stos
sub
dec
outsb
inc
fcomps
bound
or
sub
repz
push
and
mov
rorl
ljmp
jp
jo
push
xchg
cmp
cmovnp
add
shrl
scas
pop
or
inc
outsl
out
stos
fsubrl
shl
sbb
mov
call
in
cmc
dec
cli
and
cmovnp
dec
fdiv
add
fwait
pop
scas
addr16
dec
clc
or
notb
add
orl
pop
into
ljmp
push
adc
out
xchg
mov
cmp
push
int3
jl
sbb
js
pop
pop
and
xchg
sbb
idivb
lahf
push
das
int
mov
xchg
xchg
out
mov
outsl
add
inc
lods
add
jl
fs
jl
or
jg
loope
jnp
and
or
push
aad
aad
sti
cmpsl
sahf
outsb
gs
fwait
push
pop
outsl
jne
out
jo
push
inc
mov
dec
or
int
sbb
xchg
push
or
mov
lock
jecxz
jg
adc
push
dec
adc
xchg
adc
jg
adc
dec
sub
loope
bound
pop
in
dec
rorl
add
lret
inc
add
push
scas
and
cmovge
xor
fisubl
sub
sbb
mov
repz
outsl
jo
sbb
ljmp
call
jmp
dec
cltd
or
into
and
test
incb
clc
test
push
cmp
dec
out
shll
out
testb
in
and
cli
in
nop
jns
les
pop
enter
or
xor
cmp
add
or
xor
push
push
lods
imul
hlt
mov
rorb
out
pop
jb
sbb
imul
sub
lea
movsb
xor
xchg
enter
es
lods
ja
dec
jg
push
xor
add
adc
push
gs
xchg
or
mov
sbb
movsb
imul
sbbb
popa
xor
add
and
jne
mov
mov
lock
outsb
sbb
xor
rorb
pop
sbb
rorb
add
add
divl
add
dec
lcall
jno
jb
in
or
jmp
dec
and
adc
mov
gs
adc
sbb
pop
dec
or
sub
in
xchg
cwtl
inc
cmp
or
xor
mov
lock
ljmp
sub
jbe
es
neg
sub
shrb
imul
aam
mov
inc
imul
add
outsl
adc
aas
adc
xor
data16
enter
out
divl
std
pop
test
hlt
or
cld
fsubrl
pop
ja
cmp
xor
cmpsl
add
pop
jp
sbb
push
or
push
push
dec
andb
idivl
into
mov
out
mov
push
sarb
pop
add
je
fucomip
clc
in
decb
sbb
in
test
das
fimull
dec
data16
in
mov
push
repnz
out
push
in
mov
aas
sub
jnp
in
push
xor
fwait
ds
test
outsl
xchg
cmc
and
jl
dec
add
cmpsb
push
push
xchg
arpl
mov
cmp
mov
ret
gs
call
push
push
and
sub
sahf
rcl
hlt
rolb
add
cltd
xchg
xchg
push
movb
lea
movmskps
sub
xchg
push
inc
push
ljmp
pop
test
out
dec
cmp
out
jns
scas
outsb
incl
in
sub
fs
and
dec
cwtl
pop
mov
in
inc
cs
gs
in
push
cmp
add
push
mov
jbe
das
dec
pop
jo
xor
out
dec
test
sbb
imull
outsl
dec
mov
cmc
sub
or
xor
jp
aas
out
push
lock
xchg
popf
in
jno
jbe
mov
pusha
sub
test
mov
cs
scas
pop
ss
nop
and
std
in
dec
in
xor
add
xor
sub
add
dec
sub
sbb
push
lock
push
mov
jmp
shl
sub
sub
loope
pop
das
jns
imul
cld
dec
addr16
push
inc
pop
or
pop
lahf
mov
cmp
push
jecxz
mov
in
adc
xor
js
jle
fildll
dec
adc
rol
pop
ret
jo
outsb
int3
xchg
xlat
cld
mov
push
sahf
mov
sbb
push
push
testb
jo
out
mov
loopne
pop
jne
mov
sbb
pop
push
sub
dec
jbe
popf
cs
sub
sbb
ljmp
pushf
in
sbbl
mov
push
ja
add
jge
test
addps
mov
ficompl
sbb
xchg
add
out
call
dec
mov
and
pop
sbb
push
add
push
cmp
insl
inc
jbe
dec
addr16
mov
outsl
mov
daa
sub
add
and
mov
popf
divb
dec
fwait
fwait
jne
push
addl
shrb
xor
fstl
jbe
jns
inc
cltd
fwait
hlt
and
imul
sbb
lahf
lods
lds
shll
inc
fwait
sbb
into
xchg
add
dec
pop
cld
add
inc
or
push
inc
fidivrl
out
add
adc
or
rorb
xchg
scas
into
testb
sub
or
out
shrl
nop
in
xor
sti
adc
movsl
mov
out
fdivl
or
out
pusha
xor
imul
imul
and
out
hlt
testb
sub
or
ret
repnz
add
cmp
je
sti
or
cld
cmc
jno
adc
std
mov
in
cli
stos
jl
sbb
cmp
inc
or
stos
inc
adc
lods
push
sub
cld
jbe
shlb
or
inc
ljmp
push
dec
jae
sbb
xchg
adc
sub
repnz
aas
clc
out
das
adc
jno
add
adc
adc
sbb
adc
cmp
add
or
hlt
cmp
icebp
in
mov
pop
test
or
sub
clc
out
cmp
sbb
rorl
call
sbb
in
rolb
add
sbb
les
cmp
inc
adc
out
shll
or
popf
repz
cmp
test
and
or
jo
add
sbb
add
pop
sbb
add
addb
addl
sti
push
mov
push
cld
cmp
addl
mov
sbb
xor
das
push
or
cmp
sub
sbb
adc
mov
movsl
in
leave
out
in
or
pop
sub
xor
setno
out
lahf
adc
or
cmc
pop
std
outsb
or
clc
sub
negl
pop
repz
sbb
inc
adc
add
out
sbb
adc
jnp
jg
mov
or
xor
cmc
clc
add
cld
clc
sti
sub
add
popl
daa
push
leave
or
rcrl
scas
aaa
test
fwait
outsl
mov
sub
in
and
imul
mov
rolb
nop
nop
sbb
or
scas
xchg
sbb
pop
cmpl
movsl
sbb
aam
cld
pop
mov
clc
mov
notb
mov
shrl
sub
stc
gs
jg
sbb
int3
out
in
pop
jmp
imul
andl
and
sub
cmpsb
and
inc
sbb
adc
inc
adc
in
test
sub
gs
sub
adc
lahf
and
add
rorl
add
xor
fmull
in
cmp
or
dec
sub
loopne
mov
stc
int3
cmp
ret
add
js
pop
xlat
xlat
sbbb
pop
aaa
adc
jmp
ret
add
mov
ret
mov
lahf
repnz
xchg
sbb
add
pop
mov
jle
dec
dec
cld
dec
in
jp
aaa
adc
jmp
mov
fwait
insl
aas
inc
inc
jp
dec
into
in
sbb
add
gs
jge
push
xor
xchg
dec
cltd
int3
add
mov
popa
sub
shrb
and
xor
add
gs
popa
aas
into
popf
lcall
imul
imul
pop
stc
imul
pop
loopne,pt
cmpsl
leave
jle
imul
jnp
inc
sub
insb
scas
sbb
jb
sti
adc
and
mov
dec
jo
shll
mov
enter
repz
insb
jne
pusha
movsl
jbe
sub
stos
sbb
icebp
jle
or
push
and
movsb
gs
and
loopne
sbb
lods
mov
dec
out
jbe
loope
jmp
lahf
aad
mov
jmp
add
and
scas
sbb
stos
fwait
sbb
and
mov
movsl
imul
dec
sahf
or
cwtl
loopne
jle
jb
sti
dec
mov
add
clc
push
in
mov
sahf
adc
pop
inc
out
pop
lahf
gs
js
movsl
shll
mov
sahf
dec
clc
dec
test
int3
add
movsl
inc
jo
roll
dec
sar
jo
repnz
and
mov
frstor
mov
mov
xchg
fildl
inc
dec
push
add
roll
aaa
fimuls
pop
add
imul
sbb
jnp
sti
inc
dec
scas
arpl
pop
push
inc
xchg
in
outsl
mov
out
loopne
cmp
adc
hlt
int
fs
lock
mov
push
jb
movsb
clc
gs
clc
sub
or
sbb
pop
sub
adc
sub
mov
cmpsb
outsl
mov
or
mov
lret
inc
adc
out
stos
into
daa
mov
push
sbb
inc
xchg
notb
dec
mov
pop
mov
cmpsl
pop
sbb
orb
test
aam
pop
mov
shlb
cmp
xchg
gs
pop
das
push
in
test
js
in
pop
cmpsl
rol
dec
insb
mulb
es
lret
ret
add
fs
hlt
dec
out
push
jle
mov
jle
pop
pop
jns
insb
cmpsb
jmp
test
dec
fldt
cmpsb
in
movsb
or
jl
cmp
in
xlat
mov
icebp
clc
mull
loopne
pushf
mov
mov
mov
push
mov
orl
pop
fisttpll
imul
es
cmpsl
jne
popa
fwait
cmp
mov
or
adc
scas
js
cmp
pop
and
xchg
and
push
jmp
dec
mov
rorb
mov
push
iret
scas
scas
mov
and
jmp
pop
push
in
imul
and
mov
pop
push
mov
cmp
addr16
mov
clc
mov
pop
sub
pop
jg
in
icebp
mov
aam
inc
inc
cmp
mov
pusha
and
jle
jb
movsl
jo
mov
in
add
cli
add
mov
jp
jl
mov
and
neg
stc
call
sub
in
lods
or
dec
test
shrb
in
dec
push
jge
clc
inc
fiadds
xchg
shr
cli
gs
adc
cld
flds
jnp
dec
ret
mov
and
data16
nop
and
or
dec
into
cmp
sub
sbb
add
inc
and
dec
sub
insl
fldenv
data16
add
push
scas
aaa
mov
lods
stc
fwait
sbbl
add
nop
loop
push
movsl
xlat
sub
popf
pop
mov
lret
les
hlt
and
sbb
shlb
dec
push
stc
or
sub
fldcw
or
dec
pop
sbb
jle
or
dec
sub
gs
mov
aaa
sbb
jbe
in
cmp
jae
std
decb
mov
std
pop
outsl
arpl
rolb
fwait
adc
mov
ja
cmp
sub
roll
loopne
and
mov
sbb
sub
xor
mov
insl
movsb
icebp
imul
jge
jo
in
jmp
dec
mov
movsb
vandps
repz
sbb
loopne
gs
sub
lret
es
adc
push
mov
loope
mov
adc
sub
out
and
push
mov
mov
mov
dec
adc
sahf
test
cs
xchg
pop
or
jecxz
in
icebp
mov
sub
aad
cmp
sbb
stos
pop
dec
fnsave
mov
pusha
iret
out
loop
ja
imull
inc
cwtl
mov
call
gs
pop
cmp
ret
lods
dec
mov
sub
sbb
xor
mov
fdivp
or
or
imul
loopne
test
pop
dec
ja
xchg
pop
sub
imulb
imul
int
pop
xorb
in
and
fnstsw
or
push
out
jo
shrl
scas
int3
jmp
popf
sub
or
test
dec
mulb
std
arpl
cltd
outsl
sahf
lods
out
mov
adc
gs
nop
pop
dec
and
iret
cld
xor
daa
and
into
out
inc
jle
rclb
cmp
and
aas
add
cmp
shll
or
mov
sbb
ds
xchg
add
sbb
mov
popf
jne
push
or
lods
ret
adc
and
clc
or
fsubr
jp
in
add
aad
add
mov
pop
dec
ds
sbb
out
enter
sbb
mov
mov
dec
pop
or
cli
nop
add
movsb
jb
fs
adc
inc
mov
inc
mov
dec
inc
fidivs
out
add
popf
xchg
je
out
hlt
test
inc
mov
xorl
mov
aas
hlt
adc
inc
test
or
xor
in
outsb
fimull
sbb
inc
aam
jbe
pop
and
sub
add
in
mov
cmp
jne
pop
lahf
pop
into
sub
dec
ss
inc
scas
jne
mov
dec
or
mov
adc
scas
push
sub
push
in
rcrl
inc
je
popa
sub
imul
jp
sub
cmp
sti
or
pop
and
xor
xchg
out
fdivs
sahf
xorb
sub
sub
mov
fnstcw
subl
cmp
cmp
mov
rcll
cwtl
test
std
inc
je
out
push
or
jo
lds
adc
push
gs
dec
cld
or
outsb
inc
mov
jp
mov
aas
adc
adc
mov
add
add
or
clc
repnz
nop
or
ljmp
dec
gs
call
and
andl
sub
jo
lock
jp
push
stc
cmpsl
fucomi
gs
mov
call
hlt
daa
in
rorl
lock
scas
lock
out
iret
jns
mov
lods
jle
inc
sbb
inc
xlat
sub
and
jnp
inc
and
cmp
or
icebp
shll
out
adc
rolb
icebp
gs
adc
mov
push
push
ss
clc
push
arpl
sub
add
aam
cmp
pop
test
rorb
xor
repz
jno
mov
inc
fwait
fwait
cmc
sbb
and
sbb
jp
adc
adc
add
adc
lea
int
inc
jb
in
aaa
adc
fcomi
stos
xchg
mov
dec
lahf
test
iret
sarl
jecxz
add
mov
dec
int3
mov
pop
dec
in
ds
loopne
movsb
mov
out
sar
in
pop
push
or
imul
outsl
mov
out
sub
or
fucomp
push
or
jb
movsl
stos
xchg
out
mov
sub
mov
push
imul
in
addr16
dec
mov
arpl
add
or
decb
clc
sti
inc
jbe
pop
out
loop
and
pop
sbb
or
pop
mov
repz
test
or
jmp
scas
push
in
cmp
mov
sub
test
lret
sub
mov
or
adc
adc
sbb
jmp
and
sub
mov
les
les
adc
insb
sbb
daa
out
int3
call
xor
out
push
adc
xchg
or
std
in
out
mov
mov
push
push
imul
mov
jo
ljmp
dec
jmp
dec
sub
xor
dec
jno
cmpsb
adc
lods
jmp
cmp
fwait
stos
push
rorb
orl
mov
insb
xor
mov
push
enter
fbld
add
cmpsl
add
push
out
out
sub
in
mov
push
xchg
imul
xchg
shrl
ret
jbe
mov
adc
push
sub
mov
cmp
xchg
hlt
and
jb
ret
sub
outsl
jmp
loopne
pop
xor
adc
ljmp
fldt
ds
inc
adcl
into
adc
lahf
lods
leave
sbb
test
ljmp
push
test
jp
outsb
mov
pop
dec
sbb
xchg
lods
mov
sub
popa
sbb
push
int
push
inc
xchg
pushf
shlb
imull
mov
test
dec
sub
inc
mov
cmpsb
and
xor
mov
pop
cmp
pop
cltd
inc
int
dec
mov
or
fldt
out
sub
int
jb
adcl
ljmp
scas
sub
inc
xor
out
push
cmpsb
push
arpl
push
imul
test
or
bound
or
daa
sub
add
dec
and
push
les
aaa
scas
or
jmp
mov
xchg
cmp
out
daa
clts
lods
add
inc
iret
cmpsl
stos
mov
loop
aas
fisubrs
inc
aam
repz
mov
push
test
repz
adc
stos
push
lret
add
push
out
sbb
movsl
enter
fildl
mov
inc
cmpsl
repz
in
cmp
sub
fistps
pop
stc
jmp
cmpsb
xchg
adc
and
jmp
fisubs
test
stos
fadds
dec
cmpsb
sub
jl
shlb
stos
pop
inc
ret
or
mov
sub
push
or
imul
movsl
cmpsl
ret
fildll
push
sbb
lods
ret
js
stc
or
das
mov
test
sbbl
ret
outsb
daa
and
dec
add
adc
sub
mov
stc
push
fdiv
adc
out
mov
mov
xor
addr16
mov
adc
mov
jp
inc
mov
popf
daa
xchg
sub
movsb
cmovae
lret
lods
xor
inc
xlat
sub
mov
imul
out
cmp
ja
xor
mov
lds
shl
mov
or
test
movsl
stos
sub
adc
cmpsl
add
shrb
out
leave
mov
jbe
das
inc
jmp
sbb
loope
pop
cltd
xchg
or
mov
sub
mov
inc
shrl
data16
pop
sub
lcall
cli
jno
gs
mov
outsb
mov
sbb
pop
test
mov
mov
and
nop
mov
jecxz
fstl
jne
sbb
aas
fucomip
xor
sarl
repz
add
lods
pop
roll
dec
lods
jmp
sahf
insb
mov
sub
rorl
dec
fldt
and
fisubrl
lea
cmp
cmp
inc
pop
adc
rcl
test
add
xchg
xor
add
sti
test
jle
xchg
pop
in
int3
pop
fucomi
pop
lods
jae
pop
or
lea
sub
mov
mov
out
xor
inc
inc
shr
xor
dec
scas
push
jbe
in
fsubr
xchg
repnz
push
or
adc
jmp
dec
cmp
dec
js
aas
sub
jmp
jae
pop
jmp
mov
pop
jmp
xlat
xor
aas
fldenv
add
sbb
jmp
shll
jmp
jmp
jmp
jo
loop
sbb
cmp
pop
pop
lods
push
scas
add
push
outsl
jecxz
jmp
in
jns
scas
xchg
cli
jno
lods
or
inc
outsb
mov
mov
push
out
and
add
movsl
push
inc
jmp
add
insl
and
sub
xor
jmp
out
mov
mov
mov
push
stc
into
test
ret
ret
lods
mov
jo
jbe
repnz
adc
lret
jmp
jae
adcl
ljmp
fldt
inc
stos
repz
sbb
xchg
mov
cld
mov
push
outsb
pop
mov
push
les
outsl
fmuls
mov
jmp
mov
sub
jl
or
cmp
rsqrtps
fnstsw
jmp
lods
push
fistps
cmp
xor
adc
inc
sub
sub
mov
aas
xchg
push
lea
jmp
mov
mov
jmp
leave
lret
daa
push
test
or
jne
xorl
jae
jnp
sub
sub
xor
dec
ljmp
mov
or
sub
shlb
pop
jl
or
cmpsb
stc
xchg
in
pop
ficoms
jmp
mov
mov
lret
jmp
lods
or
inc
cmp
adc
sub
ja
sbb
mov
adc
int3
jo
inc
push
mov
fsts
addb
push
repnz
mov
sti
in
jmp
mov
and
stc
in
jg
lock
out
push
lret
loop
out
stos
bound
negl
icebp
xor
testb
mov
add
jecxz
cli
lahf
cli
fwait
add
loope
dec
insb
neg
inc
sti
xlat
pop
sti
es
mov
fildl
sub
sub
or
sbb
hlt
fnstenv
xchg
scas
jb
jmp
je
jge
jmp
inc
dec
repz
mov
int
mov
xchg
jns
push
cld
add
sbb
insb
into
and
and
in
test
loop
adc
xchg
pushl
scas
push
je
inc
shr
mov
xchg
pop
gs
dec
sbb
push
mov
lahf
pop
pop
inc
call
dec
addr16
fimull
pop
xor
dec
jns
cmp
popa
shrb
xchg
daa
js
xor
jbe
dec
jecxz
jns
or
jnp
cmp
cmp
lods
push
ret
mov
jl
por
cmpsl
leave
rcrl
lods
lea
jge
out
loop
repnz
mov
xor
mov
idivb
and
lea
xchg
jmp
adc
dec
pop
push
por
sahf
mov
xor
int3
inc
cmp
into
dec
loopne
pop
inc
loopne
rcrl
push
lds
or
add
mov
sub
leave
lods
sahf
mov
and
mov
push
sti
pop
loope
mov
add
sbb
cmc
movsl
scas
scas
imul
mull
inc
roll
outsl
inc
mov
popa
inc
adcb
filds
sub
adc
jmp
std
pusha
vrsqrtss
movsl
imul
ja
ret
xlat
jmp
loope
lock
enter
mov
push
push
ror
clc
adc
lods
jns
lahf
out
mov
lret
shlb
jmp
aaa
lahf
and
push
cli
ficomps
scas
adc
jmp
test
xorb
jo
jmp
fisubrl
jnp
pushf
jmp
out
iret
bound
lock
pop
lods
pusha
fsubrl
fbld
aas
and
jmp
out
sar
into
cmp
adc
add
divl
rorb
inc
lods
fstps
jl
fs
and
xor
jns
xchg
arpl
out
lret
sti
mov
lods
add
popf
push
sub
sarl
xchg
les
jmp
add
xchg
cmp
cmpsl
jmp
fildl
mov
popa
mov
inc
pop
popf
xor
repnz
and
sbb
fucomp
aas
in
fildll
mov
inc
jns
stos
int3
call
insb
ror
jmp
mov
lock
pop
dec
mov
addb
inc
movsb
add
mov
pop
addr16
lret
andl
lret
scas
add
xor
out
cmpsb
sub
xchg
dec
dec
mov
sub
lods
std
inc
enterw
xchg
out
pop
scas
pop
iret
adc
mov
outsl
sub
in
xchg
clc
xchg
or
mov
xor
test
pop
sub
jae
jns
jge
xchg
in
jnp
lret
filds
dec
imul
sbb
jbe
pop
out
arpl
outsb
or
and
sahf
add
or
outsl
sbb
jae
jmp
push
xchg
push
data16
out
in
movsb
sti
adc
xchg
and
push
lret
dec
lods
int3
es
xor
xchg
or
cli
lcall
cli
pop
rcrb
adc
nop
pop
loop
in
mov
or
mov
pop
popf
or
mov
sbb
stc
nop
xor
push
addb
cmp
test
or
sbb
mov
and
cmp
jmp
fadd
shrl
dec
fldcw
fsubr
dec
and
push
jmp
or
daa
jbe
push
out
outsb
fwait
add
jge
mov
inc
sbb
scas
xor
lods
dec
ret
fstps
mov
movsb
xor
stos
hlt
mov
jmp
mov
mov
ljmp
js
lcall
sub
data16
movsb
and
mov
cmpsb
sbb
mov
pop
test
xor
mov
aaa
mov
mov
jecxz
mov
ficoml
aam
pop
lret
daa
xchg
sbb
stos
loope
jae
outsb
in
stos
pop
mov
out
sbb
sti
mov
lods
jne
jl
scas
xchg
sti
pop
test
pop
jmp
mov
dec
pop
jo
arpl
lods
cli
adc
ret
sbb
hlt
movsl
fstl
mov
lahf
add
imul
xorb
sub
ret
sbb
pop
xchg
lods
mov
out
lods
inc
ret
lret
jmp
cmpsl
add
std
fucomi
push
inc
repz
inc
mov
jmp
or
cmp
adc
popa
mov
or
cmc
js
pop
mov
stos
sbb
iret
mov
sub
cmp
mov
aad
xchg
and
stos
mull
jp
scas
lret
jmp
jae
mov
xchg
imul
test
notl
jg
jne
jnp
hlt
lcall
xor
and
dec
mov
pop
lock
out
scas
hlt
cmp
fimuls
xor
or
sbb
mov
add
rclb
lods
sbb
mov
mov
repnz
testl
lods
mov
cli
out
sar
or
dec
jb
mov
ja
cmp
push
repz
shrl
stos
ret
ret
push
test
cmc
mov
cmc
stc
push
rcl
adc
push
mov
xchg
push
jmp
add
inc
gs
jns
je
insl
push
imul
fs
je
pusha
push
call
add
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
movsb
call
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
je
dec
inc
imul
mov
add
push
and
jmp
add
push
popa
jae
popa
outsb
addr16
jo
add
add
je
je
dec
popa
outsb
fs
add
add
outsb
outsl
ja
jb
insl
push
outsl
imul
insb
jae
gs
popa
insb
jne
add
sbb
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
inc
push
add
add
popa
fs
imul
sub
dec
push
mov
dec
shr
inc
pop
sbbb
jg
fdivp
out
sbb
xor
test
loope
mov
xchg
repnz
cmp
mov
stos
or
push
mov
aas
neg
push
int3
or
aad
push
and
mov
test
inc
push
xchg
test
dec
scas
mov
jecxz
adc
lock
jb
and
inc
xchg
or
xchg
in
repz
jle
sti
insl
pop
stos
addr16
adcl
incl
test
xchg
pop
lds
ja
jnp
mov
pop
movsb
jne
repnz
imul
sbb
adc
xorb
loop
hlt
add
ja
or
testb
cmp
fsubrs
cmp
cmp
mov
sub
arpl
sbb
stos
or
pop
stos
imul
out
insb
jp
rorb
inc
cwtl
pop
loopne
mov
xchg
scas
or
sbb
test
frstor
pop
stos
imul
popf
adc
hlt
pop
cmp
sub
inc
bound
sbb
stos
imul
cmp
lret
lret
pop
insl
mov
mov
xchg
mov
jns
and
pop
dec
xor
dec
in
adc
rolb
add
pusha
push
outsl
jbe
push
outsl
inc
js
add
push
gs
imul
dec
jb
inc
js
add
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
fs
jne
pusha
pushf
pushf
pushl
lea
jmp
add
inc
gs
jne
jb
outsb
je
push
add
add
je
outsl
fs
gs
imul
add
add
jo
outsb
fs
outsb
jne
add
add
insb
outsl
arpl
imul
pushf
pushf
jmp
push
call
out
add
inc
imul
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
jb
jne
insb
inc
jb
add
add
outsl
arpl
jae
xor
js
add
sub
inc
xorl
mov
scas
cmc
or
shrb
sarl
xor
mov
jns
sbb
mov
mov
xor
dec
bound
dec
push
cwtl
ret
je
divl
xchg
add
adc
mov
cmpl
push
outsl
push
fisttpl
fimull
setnp
push
adc
imul
push
lock
ss
push
dec
call
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
and
clc
call
add
dec
outsl
popa
fs
imul
add
push
int3
incl
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
je
popa
jo
jne
gs
push
scas
adc
push
incb
add
insb
gs
jae
push
gs
popa
jo
outsl
jb
add
pop
lea
add
add
inc
push
add
inc
gs
gs
arpl
popa
jo
add
add
data16
je
imul
dec
jb
inc
js
push
pusha
stc
clc
mov
add
ror
neg
lea
stc
pushl
mov
jmp
add
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
push
call
add
inc
jb
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
inc
jb
gs
outsb
jne
gs
imul
jae
add
inc
insb
outsl
jae
inc
insb
imul
add
add
je
imul
addr16
js
add
inc
gs
popa
jo
jne
add
daa
add
idivb
inc
bnd
adc
pop
inc
mov
scas
stc
pop
lahf
or
loopne
sub
sub
pop
push
lret
repz
cmc
push
aad
outsl
scas
scas
jo
ror
movsl
jnp
int3
jge
lods
lods
sbb
add
jg
leave
outsb
ljmp
ror
sbb
addb
push
rorl
imul
je
je
lds
cmp
pop
cmp
push
pusha
and
lock
aas
or
cmp
dec
fmulp
pushf
add
pushf
cmp
gs
popa
jae
inc
jb
outsl
jb
pushf
jmp
add
push
popa
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
add
jb
insb
insb
push
imul
add
add
jo
imul
imul
push
gs
outsb
jne
add
push
gs
imul
inc
js
inc
js
call
add
push
push
outsb
outsl
ja
add
inc
gs
gs
je
je
add
adcl
adc
clc
stc
jmp
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
negl
add
add
movl
and
jmp
add
inc
jb
popa
je
push
jb
arpl
jae
add
add
outsb
dec
gs
jo
add
outsb
lahf
call
roll
add
gs
je
push
arpl
outsb
add
add
outsl
bound
inc
fs
je
insl
inc
add
add
je
inc
add
add
je
jne
jae
jb
outsl
jae
add
dec
outsl
arpl
imul
addr16
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
add
jbe
lods
jbe
mov
sub
bound
enter
mov
movsb
sti
dec
pop
mov
imul
ja
repz
jmp
jno
xchg
or
out
xor
pop
into
jl
stc
xchg
fisubl
std
ljmp
aad
or
inc
cmp
jns
rcrl
xlat
popa
xchg
test
fistps
dec
imull
dec
leave
lret
test
adc
jmp
test
es
fs
dec
pop
lds
cmc
pop
fs
test
pop
enter
cwtl
jno
cmc
lahf
es
test
mov
jecxz
xchg
adc
ds
data16
or
pop
shl
xchg
push
xchg
jmp
and
shr
dec
dec
mov
or
test
xor
pop
lret
cltd
ret
sahf
repz
fldenv
and
sbb
pop
data16
mov
clc
mov
and
lahf
add
mov
xor
mov
loope
js
je
fwait
adc
xchg
aam
push
clc
es
jns
or
and
and
or
std
mov
mov
cmpsb
add
push
lahf
xorb
gs
sub
push
cmp
jl
push
dec
sub
push
pusha
xchg
pushf
pushl
popl
movzbw
lea
jmp
add
push
imul
jb
je
arpl
add
insb
push
outsb
ja
outsb
add
daa
and
call
mov
je
imul
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
jle
pushl
test
xor
pop
mov
sub
cmp
and
or
add
jmp
iret
adc
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
insb
arpl
insb
gs
add
add
push
gs
js
gs
imul
gs
lea
jae
pushf
cmp
call
add
inc
jb
popa
je
inc
inc
inc
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
dec
lods
daa
fldl
out
pusha
inc
sub
and
std
add
fsubrs
add
pop
sbb
mov
les
add
inc
in
sbb
xchg
xor
mov
push
lds
add
jne
sub
mov
and
ret
leave
adc
push
rolb
jbe
push
cmpb
add
add
je
je
gs
push
outsl
fs
add
je
outsl
jns
outsb
jne
add
ja
jbe
dec
jne
inc
gs
jne
inc
gs
add
add
fs
imul
add
outsl
bound
inc
insb
popa
addr16
mov
jmp
add
dec
jae
imul
jae
popa
addr16
add
inc
into
test
fmul
lods
dec
stos
dec
outsl
scas
push
cmp
jo
sub
jg
aas
jbe
int3
sbb
cs
fs
fdivrl
dec
stos
test
pop
or
leave
out
leave
dec
mov
enter
dec
cmc
test
sub
push
sbb
mov
arpl
cmp
inc
xor
inc
sbb
sub
inc
add
out
stos
dec
sub
add
pop
or
enter
jb
lock
add
sti
adc
sbb
lds
jne
inc
daa
sarb
and
stos
inc
icebp
and
and
stos
popf
imul
test
call
in
dec
lahf
hlt
dec
sub
or
int
sub
fmull
dec
sub
mov
jl
fwait
lods
shrl
jns
sbb
daa
inc
fildll
mov
xor
cmp
jo
mov
icebp
lods
push
int3
pop
enter
mov
aas
mov
pop
and
mov
lea
push
dec
out
inc
in
cmc
inc
cs
test
and
cld
ficomps
push
imul
jl
cld
repz
cmc
test
jbe
popf
pop
insl
sbb
call
icebp
rolb
xor
ret
jp
lods
std
lret
out
mov
in
xor
sti
xchg
adc
out
dec
inc
jne
add
adc
ret
cmp
or
ljmp
push
add
stos
scas
or
out
repz
std
dec
inc
xchg
inc
addr16
add
mov
std
test
mov
aas
lods
adc
lods
inc
fldl
lret
jb
fbstp
adc
push
ret
mov
lea
lds
dec
stos
xor
mov
stos
mov
test
sbb
and
ret
ret
into
mov
ret
xor
cmp
shl
push
mov
mov
pop
sbb
lock
in
std
sub
lret
stc
push
dec
fadds
test
dec
outsl
sub
insb
add
int
push
mov
adc
sub
test
es
jp
aam
pop
stos
mov
push
or
inc
add
mov
dec
repz
add
xchg
or
mov
jb
inc
sub
std
scas
adc
andl
inc
testl
sti
pusha
and
js
inc
cltd
add
and
cltd
popf
fdivr
sbb
dec
in
imul
pop
xchg
cmpsl
lods
das
icebp
sbbb
lods
hlt
mov
jnp
add
jnp
dec
or
dec
push
loop
adc
jl
popf
mov
jge
inc
gs
sub
mov
shlb
ffreep
jne
sub
fwait
stos
fwait
movsl
mov
or
imul
pop
insb
repz
jg
jle
or
cmc
cwtl
sarb
xchg
inc
push
cmovle
xchg
les
outsb
decb
lret
add
xor
add
push
xchg
cmp
nop
hlt
dec
fsubrl
dec
in
aas
cltd
inc
addl
aam
bound
add
pop
mov
cmp
mov
dec
jno,pn
rclb
xor
mov
add
add
adc
and
or
add
jmp
jle
xor
stc
mov
aas
sarb
imul
outsb
xor
das
sarb
outsl
jnp
dec
in
gs
cmp
repz
ret
pop
or
pushf
pop
and
and
lods
popf
mov
adc
filds
repnz
dec
aam
jle
stc
push
es
push
popa
inc
jb
out
sti
es
int3
sbb
repnz
or
and
icebp
xor
lods
jge
xor
popf
arpl
mov
mov
xchg
ljmp
mov
xor
cmp
int3
jge
insl
mov
daa
pop
test
jne
xor
mov
in
mov
fdivrs
add
add
add
mov
fwait
and
lret
lahf
add
ljmp
add
scas
dec
sub
mov
add
inc
daa
or
sub
ret
pop
fdivl
out
filds
sbb
adc
xchg
sub
and
mov
es
mov
push
divb
in
and
cli
js
stos
xchg
inc
and
daa
and
adc
dec
xor
or
sti
cld
mov
mov
pop
push
lea
sbb
mov
lock
dec
push
call
fistpll
roll
or
subb
cli
in
mov
dec
mov
and
jle
mov
addr16
pusha
insl
mov
sub
sbb
push
adc
pmulhw
imul
jge
testb
push
outsb
sub
sub
jnp
sarl
ljmp
add
insl
or
xorb
es
adc
out
push
cmp
jnp
xchg
push
js
repz
mov
xchg
push
popa
cld
xchg
or
mov
repz
or
frstor
ja
and
jg
fsubrl
clc
call
sub
das
inc
cmp
div
mov
bound
dec
and
pop
stc
scas
jg
adc
cmpsl
lock
in
mov
mov
xor
aad
test
xor
or
jae
in
jg
rorb
out
out
mov
ret
cmpsl
cmp
repz
adc
jp
xchg
in
dec
and
cmp
adcl
sub
mov
std
adc
and
adc
pop
adcl
and
inc
inc
dec
adc
mov
sub
mov
incb
xchg
and
mov
lock
sahf
mov
imul
scas
xor
lock
sahf
mov
in
cmpsl
pop
sub
add
inc
or
cmp
pop
adc
mov
outsb
push
mov
outsl
sbb
push
and
or
lods
adc
sub
jae
or
mov
adc
insb
and
push
mov
lods
and
and
filds
xor
cmp
sbb
inc
test
xor
inc
inc
insl
test
dec
jg
cmpsb
adc
addr16
add
lcall
pop
inc
cli
xchg
add
fisttps
push
scas
push
cmp
cmpsl
jge
out
aad
adc
dec
movsl
fcomps
insl
and
scas
adc
fcompl
pop
out
push
insb
call
clc
insb
sub
in
fadd
cld
es
xchg
stos
add
and
mov
andb
xor
cld
dec
add
ret
imul
shlb
andb
out
push
pushf
in
das
add
add
shll
push
push
cwtl
daa
lock
adc
cmp
mov
sub
jae
shll
lods
mov
es
jae
shlb
adcb
enter
fildl
iret
jnp
xorb
xor
mov
jo
shl
xor
ret
jae
dec
jl
jnp
setae
sbb
js
or
and
mov
insb
mov
xor
sub
sub
jl
outsb
mov
shlb
sti
add
shrb
mov
fwait
inc
pop
jb
pop
mov
cmpb
mov
or
or
dec
leave
jb
xchg
das
mov
insl
xor
cmp
mov
jmp
xchg
mov
add
xchg
add
mov
adc
mov
ficomps
shlb
das
lock
pop
sub
pop
int
add
cli
pop
push
iret
psubw
stos
lods
sub
gs
inc
push
ja
pop
test
lahf
sahf
jno
xchg
imul
cmp
mov
xor
in
and
pushf
jmp
gs
pop
shl
aam
add
mov
cmpsb
mov
jg
out
popa
jg
xor
lret
adc
dec
insl
xor
sbb
int
sub
jg
dec
in
mov
cmp
sti
aas
dec
add
aas
iret
dec
dec
mov
in
sub
pop
xchg
jp
fcoml
mov
insl
and
push
out
jb
je
or
lcall
dec
or
aam
push
sbb
lahf
mov
dec
sarl
jle
jnp
jle
mov
push
ret
stos
jb
cmp
negb
dec
add
lock
sub
or
in
aad
fisubrl
dec
das
add
adc
mov
dec
xchg
and
ja
jae
ds
repnz
test
int
inc
out
push
ds
cmp
push
loop
aam
bnd
sub
mov
iret
in
nop
pop
ret
and
and
scas
mov
xchg
es
push
cmpsb
hlt
cmc
inc
jnp
dec
sub
rclb
imul
out
lock
clc
adc
stos
insb
fs
negb
inc
dec
push
daa
imulb
fimuls
jge
xlat
out
movsb
and
sub
xchg
sub
dec
jb
sbb
adc
adc
sub
ljmp
movsb
xchg
dec
sarb
push
sbb
rorl
outsb
mov
adc
shlb
int3
cmp
scas
mov
cmp
mov
out
jae
xchg
mov
mov
hlt
clc
repz
cmp
popa
jl
sbb
xchg
mov
add
cld
and
movsb
xor
mov
in
inc
cmpl
mov
mov
cmpsl
icebp
mov
jnp
shll
xor
test
jno
stos
shrl
dec
xlat
outsb
pop
mov
jge
movsb
push
mov
mov
jnp
cltd
popa
mov
or
xchg
sub
xor
xor
sbb
in
andl
cmpl
jbe
jnp
data16
clc
jae
adc
jnp
sbb
jl
hlt
into
dec
xorb
cmp
add
iret
adc
dec
adc
pop
jle
mov
je
push
dec
jno
jecxz
jns
push
add
mov
lods
xor
cmp
cmpsb
fcoms
pop
movsl
out
pop
std
push
xchg
mov
aad
iret
in
enter
je
int
dec
xlat
xchg
mov
ficompl
pop
lret
push
pop
dec
jne
ds
or
mov
shrl
dec
les
shll
xchg
mov
pop
fidivrs
std
xchg
xchg
xchg
push
mov
or
xor
mov
ja
sarl
xor
jns
imul
fwait
jb
or
jl
cmp
mov
jl
mov
push
lahf
push
test
push
mov
jb
mov
jns
sbb
mov
call
call
fisubs
out
rorb
cmpsl
add
in
inc
cmc
std
in
int
and
xor
dec
out
mov
nop
pop
xor
cmp
mov
jae
xor
push
dec
sub
popf
push
cmpl
cmp
sub
inc
mov
xchg
xor
cld
push
sub
add
adc
and
cld
sub
decb
cmp
sahf
in
xor
cld
add
div
shrl
popf
scas
in
and
mov
and
not
jge
mov
shll
jnp
inc
mov
xchg
adc
sbb
add
xor
test
cwtl
mov
les
shl
mov
nop
mull
stos
lods
dec
in
sbb
xor
and
aam
sub
in
testb
rclb
into
sbb
sbb
mov
add
mov
or
push
mov
testb
or
dec
cld
mov
lock
out
and
mov
xor
or
jo
sub
lods
adc
jg
ret
ds
insb
out
insl
lock
das
movsb
cmp
pop
sub
repnz
ficoml
dec
jns
cmp
push
loop
bound
inc
or
and
mov
jne
xchg
xor
mov
out
loope,pt
jae
aad
cmpsb
dec
and
outsl
add
das
les
imul
sbb
stos
sti
adc
aam
jno
and
fidivl
dec
lods
in
icebp
out
mov
lods
fisubl
ljmp
jns
ret
lods
cmp
lods
jmp
jmp
imul
or
mov
dec
stc
dec
decb
or
sub
push
sub
xchg
or
mov
cmc
jnp
sti
mov
out
data16
mov
or
push
ds
jbe
adc
or
jmp
or
sbb
dec
addr16
fstpl
pop
pop
int3
daa
and
push
inc
dec
sbb
or
and
je
and
repnz
ret
scas
out
sbb
pop
dec
cmp
out
stos
add
ja
xor
rol
sahf
inc
dec
cli
hlt
aas
add
sub
and
std
into
jb
in
pushf
in
aas
and
sub
jo
dec
gs
dec
mov
dec
bnd
sar
add
ret
cmp
lock
pushf
xchg
xor
pop
inc
push
mov
movsl
stc
push
xchg
cmp
xchg
sub
in
pop
mov
ss
das
sbb
sub
inc
jnp
jp
sub
mov
push
mov
sbb
jo
and
lea
cmp
lods
xchg
das
mov
jg
in
or
int
jp
push
and
clc
inc
int3
push
cmp
cld
jp
ficompl
and
lea
fsubs
daa
mov
adc
enter
shll
jae
and
in
mov
add
mov
adc
add
sbb
shlb
es
insb
mov
mov
out
xchg
pop
dec
loopne
aam
ss
jge
lahf
push
sbb
mull
xor
sbb
mov
sahf
add
dec
mov
sti
jnp
out
daa
loopne
or
push
hlt
jae
bswap
xchg
sub
dec
jae
cmp
xor
ja
std
cmc
and
mov
out
cmp
int3
inc
or
nop
dec
push
rol
sub
sbb
ja
cmp
sub
callw
rcrl
cli
dec
push
push
jne
es
sbb
mov
cli
test
iret
leave
jmp
inc
or
lock
movsb
cmp
gs
cld
cwtl
imul
arpl
mov
cmpsl
xor
outsl
mov
cli
shll
movsl
or
imul
xchg
mov
push
jns
mov
mov
gs
arpl
lods
sub
adc
lock
mov
adc
inc
outsb
loop
out
adc
dec
mov
gs
aaa
pop
sti
lods
sbb
jo
mov
nop
div
add
fistpll
push
outsb
es
jl
mov
das
and
and
int3
pop
hlt
sbb
lea
and
xor
mov
sbb
aam
cld
xchg
push
mov
cmp
and
bound
jge
sub
push
andl
jnp
mov
mov
push
rcr
cmp
push
enter
xor
in
out
popa
mov
push
sub
test
dec
pop
mov
or
data16
and
or
cmp
and
sub
shlb
mov
es
mov
fdivrs
or
jns
dec
and
adc
or
mov
das
test
cmp
loop
jb
nop
dec
jmp
jo
into
or
pop
sahf
scas
ret
adc
lods
shlb
pop
out
pop
mov
in
xor
mov
repnz
xor
xchg
xor
gs
lods
arpl
lods
xor
mull
pop
mov
xchg
jnp
into
and
push
jae
adc
cmp
push
jnp
sbb
loop
mov
xor
add
icebp
sbb
fsubl
mov
pop
add
dec
mov
mov
mov
cmpsl
cltd
out
push
cmp
sub
mov
icebp
lods
and
rorb
aaa
jne
adc
cs
insl
jl
repz
js
xor
and
push
lret
push
in
mov
daa
ror
lds
dec
lock
int3
enter
leave
out
adc
mov
sub
mov
adc
and
or
loopne
call
ficomps
cmp
in
jno
scas
or
mov
idiv
leave
inc
dec
sbb
cmp
cmpl
xchg
js
sbb
cmp
in
stos
mov
movsl
clc
push
pusha
stos
cmp
loop
insl
inc
mov
sub
and
pusha
xor
clc
daa
enter
push
je
push
add
xchg
jns
jnp
jno
cmp
insl
or
mov
cmp
std
das
sbb
add
test
out
or
xor
sbb
inc
stos
mov
cmpsb
or
xor
fidivs
jg
out
dec
or
pop
mov
adc
roll
xchg
mov
or
lock
mov
sub
loopne
js
jmp
ja
xor
mov
fs
dec
or
hlt
out
int3
repz
push
xor
hlt
movsb
or
loope
inc
ljmp
notl
ja
inc
jle
xchg
inc
jne
dec
xor
and
cmp
scas
fcompl
ficompl
xorl
sbb
ja
sbb
aaa
add
xchg
leave
and
pop
dec
das
xorl
mov
sub
bound
mov
sbb
ja
mov
pmaxsw
xchg
mov
cmp
mov
out
xchg
pop
or
adc
xchg
test
sbbb
aaa
push
xor
mov
test
xor
sar
stos
out
and
xor
mov
test
mov
data16
jp
dec
aas
jne
repz
xor
mov
and
lahf
add
or
mov
xor
jge
clc
loop
xlat
mov
sbb
inc
fisubrl
cmp
arpl
jb
xor
and
pop
jae
jle
sbb
pop
clc
out
fwait
testb
cld
loopne
lods
pop
hlt
in
icebp
icebp
lea
or
gs
xor
pusha
xor
jae
mov
hlt
lock
ss
xchg
jae
adc
aaa
icebp
sub
sbb
insb
mov
ss
fldenv
pop
out
or
pop
pushl
inc
gs
mov
sbbb
dec
scas
scas
mov
mov
insb
jbe
mov
fldenv
test
jo
outsb
shr
add
addl
psadbw
test
aad
out
jge
movsb
jg
or
cmc
into
lea
fldl
lock
jbe
repz
and
insl
mov
jle
imul
imulb
out
aaa
cmc
jae
sbb
ss
lahf
or
ja
and
push
loopne
pushf
jnp
imul
test
xor
scas
add
xchg
sub
and
mov
ss
inc
mov
push
fdivr
mov
mov
xor
adc
mov
and
test
das
jbe
pop
fstpl
lock
clc
mov
repnz
imul
cmpsl
dec
imul
out
mov
das
lods
adc
adc
ja
stc
das
in
je
or
mov
xor
insb
dec
outsl
sbb
popa
sti
out
aad
mov
pop
jne
stos
xchg
call
dec
mov
adc
lahf
inc
sahf
in
mov
sbb
jle
sbb
dec
mov
push
and
adc
in
inc
sub
inc
cmp
inc
das
push
addr16
popf
push
inc
ret
dec
mov
testb
into
or
add
mov
fs
pop
xor
cld
hlt
out
loope
inc
shll
or
out
scas
loope
int3
mov
shl
fistpl
lea
scas
lods
dec
jg
mov
test
cmp
jle
sub
rcrl
int3
pushf
push
insb
and
ljmp
pop
gs
aam
cmpsl
jle
or
fistpll
out
jns
mov
movsl
inc
xor
div
mov
ret
mov
and
into
jo
scas
jns
dec
in
sbb
and
ss
arpl
xchg
mov
mov
std
test
dec
sub
inc
sub
incl
addr16
loopne
rorl
idivl
fwait
in
and
mov
sub
jae
iret
mov
cmpl
outsl
lds
pushf
daa
call
pop
rcl
idivb
jge
mov
loopne
lahf
stc
inc
and
adc
ja
das
lods
std
inc
lcall
sbb
loop
mov
dec
and
cmp
mov
int3
and
mov
int3
push
push
mov
xchg
pop
mov
test
dec
cmc
sbb
sbb
enter
pop
lods
mov
push
out
adc
jmp
inc
sbb
shlb
shrl
or
imul
mov
mov
sub
or
xor
cmp
mov
popa
imul
repnz
cmp
fsubs
mov
sbb
pop
pop
and
cmc
push
sub
int
dec
je
cmp
icebp
jle
je
pop
sbb
jne
nop
xor
aas
pop
pop
and
add
out
int
popa
push
mov
dec
insl
std
and
sub
stc
cmpsl
bound
push
mov
add
scas
and
fdivs
and
mov
std
aad
push
lcall
and
pop
dec
or
orb
movsb
dec
sar
cmp
xor
jb
add
pop
xor
xor
mov
cmpsl
and
xor
pop
add
inc
mov
dec
cmp
out
lods
nop
jno
in
les
inc
hlt
scas
mov
in
mov
xor
sub
push
ret
sub
sti
mov
xchg
inc
outsl
sbb
sbb
out
fwait
inc
and
sbb
jp
inc
inc
pop
jl
pop
jp
push
out
sbb
sbb
push
lods
inc
pop
stos
xor
adc
dec
mov
out
sti
or
pop
lahf
sub
frndint
mov
out
insb
in
into
fxtract
out
adc
mov
adc
daa
lahf
jae
imulb
imul
dec
jl
test
dec
jae
push
adc
jge
jae
daa
aas
ficomps
lret
or
and
or
and
das
es
and
popf
xor
push
pushl
inc
loop
out
fisubs
cmc
sbbb
dec
mov
fnstsw
mov
mov
and
adc
popa
int3
stos
cmp
xchg
and
fs
movsl
cld
inc
xor
scas
pop
jnp
stos
jno
pop
addr16
xor
or
icebp
and
test
into
sti
nop
mov
pop
repz
test
adc
inc
xchg
sub
nop
xchg
add
mov
pop
and
ficomps
arpl
sbb
dec
mov
popf
pop
mov
insl
mov
sub
sbb
jb
sbb
sub
mov
or
std
jb
stos
dec
popa
test
jle
out
cmp
cmpsl
bound
inc
lcall
jb
std
and
sarl
jmp
jns
mov
xor
sahf
mov
xor
xor
xchg
mov
adc
loope
mov
mov
or
xor
test
out
sub
mov
mov
inc
jle
out
or
xor
xor
cmp
jne
inc
mov
xchg
lods
cwtl
xor
xor
ret
aam
mov
pmaxsw
or
repnz
lods
dec
jo
sub
xor
scas
iret
pop
sub
cmp
sbb
mov
test
rcl
repz
inc
in
scas
or
xchg
cs
sar
jae
or
jl
mov
fwait
loope
and
repnz
sbb
pop
xchg
jo
ss
sbb
mov
jb
and
add
fs
sub
out
xchg
mov
jnp
iret
dec
daa
pop
gs
or
sti
shll
mov
xor
movsb
sbb
push
pop
push
and
pop
div
sbb
fbld
lea
ja
sub
ret
sub
loop
jl
std
mov
arpl
mov
das
push
sub
pop
repnz
imul
xor
sub
mov
sub
scas
sub
jl
fistps
push
xor
inc
mov
insl
xor
filds
in
addr16
orl
dec
daa
insl
xchg
jno
out
es
icebp
jns
out
push
icebp
cmpsl
sub
sub
adc
addb
stc
xor
cmc
sub
dec
sub
and
int
int3
ds
dec
and
enter
std
adc
cmp
xor
addb
pop
repz
dec
lods
push
pushf
fisttpl
adc
call
lret
pop
mov
sub
cmpsl
or
push
dec
mov
jo
call
mov
aad
lret
aaa
sub
adc
add
fidivrs
sbb
mov
mov
fwait
mov
jb
scas
or
cltd
sub
popa
loopne
inc
and
cmp
sub
jo
xor
jo
sbb
repz
lock
mov
cmp
sahf
test
das
dec
popf
fmuls
add
mov
sbb
jo
in
mov
mov
and
jb
dec
and
jo
xor
jnp
stos
mov
addr16
aad
sti
pop
arpl
xchg
jb
movsb
xchg
jne
xchg
xor
int
xor
add
fs
out
jp
mov
lock
out
push
lods
sbb
iret
adcl
xor
lea
sub
mov
sti
jnp
mov
in
call
mov
in
inc
imul
push
mov
insl
lea
add
or
xor
addr16
sti
or
outsl
jp
fcom
xchg
out
inc
outsl
movsl
hlt
aaa
mov
js
mov
xor
and
xorb
test
or
or
aad
or
dec
xchg
add
mov
mov
test
lret
shlb
pop
or
ret
sub
ret
leave
dec
out
sub
or
sub
and
sbb
mov
std
in
or
mov
out
and
mov
es
pop
push
cld
in
or
icebp
pop
jle
dec
popa
pop
imul
scas
scas
sbb
scas
jns
push
std
jno
arpl
insl
sbb
adc
xor
mov
sbb
mov
jb
je
cmc
cmpl
mov
das
xchg
pop
lock
pop
mov
or
insl
mov
and
xchg
aaa
mov
popa
push
fisubrs
mov
jnp
sbb
mov
insl
sbb
jl
test
jo
mov
cmpsb
inc
mov
in
cmp
pop
das
jno
lahf
push
mov
arpl
xor
inc
push
add
imul
mov
and
jbe
subl
out
or
push
inc
in
imul
sub
push
xor
andb
inc
rorl
jns
push
in
lahf
xor
lock
push
out
push
bound
roll
mov
pop
sub
adc
ret
es
push
xor
jbe
lahf
mov
popf
add
or
bound
mov
test
fwait
bnd
or
insl
out
sub
into
mov
call
jbe
rolb
aam
mov
shl
xor
push
scas
xor
lret
pop
cld
cmovbe
sub
lds
mov
xor
pop
movsl
fildll
xor
xchg
je
aam
dec
aas
mov
ret
push
and
movsb
xor
mov
cmp
and
inc
stc
add
cwtl
xor
hlt
jb
pop
or
jbe
and
ss
mov
push
std
sarl
cmp
xchg
push
popa
adc
in
loop
mov
push
jge
repz
mov
cltd
inc
icebp
and
fimuls
push
mov
push
out
dec
paddsb
dec
jge
inc
push
adcb
sub
jo
and
repnz
add
std
xchg
sub
adc
into
sub
sub
xchg
inc
stos
pushf
fwait
arpl
xchg
and
sub
ss
outsb
test
xor
add
dec
mov
sbb
insb
push
sub
lods
jns
cmpsb
imul
sbb
and
inc
adc
mov
inc
fisttpll
lods
inc
sbb
add
or
mov
out
icebp
xor
shrb
mov
jle
pushf
andl
in
loope
cmpl
dec
jnp
and
jmp
add
push
cmp
or
mov
hlt
add
mov
mov
mov
jo
adc
jp
out
xor
xor
test
and
sub
shll
dec
and
popa
push
pop
sub
xor
incb
add
xor
jge
or
leave
out
imul
aaa
repz
das
inc
adc
dec
out
sti
xchg
es
and
stc
dec
pop
rorl
mov
das
das
arpl
in
jb
negb
hlt
or
in
cmpsb
add
icebp
and
adc
int
mov
push
jnp
mov
js
roll
or
jae
mov
mov
call
add
mov
sbb
xor
sub
inc
leave
lcall
or
and
stc
sbb
lods
adc
jo
ficoml
add
lods
ret
add
lods
outsb
das
std
xchg
sub
mov
popa
subb
dec
pop
fstpl
das
daa
or
lods
sarb
xor
mov
xchg
pop
or
imul
cmpsb
shr
jle
push
push
sbb
rcr
add
scas
mov
sub
push
mov
imul
mov
xchg
xchg
ret
in
xor
loop
mov
adcb
sub
stc
sub
pushl
das
jl
adc
push
add
or
mov
jno
jae
mov
or
jg
jae
adc
out
push
mov
aas
hlt
sub
loop
icebp
in
lock
clc
adc
inc
inc
xchg
sub
mov
add
and
fisubrs
iret
inc
das
adc
adc
mov
sub
imul
xor
fmuls
fwait
popa
mov
out
mov
or
cli
pop
mov
add
cmp
icebp
inc
nop
cmp
loopne
lods
aad
jecxz
xor
addb
imul
jns
sbb
cmp
jb
loop
out
cmp
je
outsl
cmpsb
dec
sti
out
push
sbbl
roll
das
mov
hlt
sti
leave
fsubrl
std
mov
es
xor
out
sbb
and
and
sbb
push
sub
psrld
add
xchg
or
orb
sub
jmp
lret
int3
sub
int
jp
hlt
dec
std
lret
out
sbb
sub
jns
pop
imul
cmpsl
xchg
dec
adc
ret
jmp
imul
mov
dec
std
sub
stos
fdivs
je
cld
in
mov
sbb
push
icebp
dec
cmp
in
frstor
push
lea
mov
stc
sbb
sbb
mov
mov
mov
xor
shll
pop
mov
fwait
outsl
and
out
xor
sub
sub
jne
add
fdivs
mov
out
push
and
repnz
in
or
or
out
lcall
dec
lods
jo
orl
cmc
jne
sub
mov
repz
sub
add
mov
popf
sub
lock
sub
cld
push
je
addb
cld
and
daa
mov
cmp
aam
smsw
mov
out
mov
push
addb
insl
mov
add
dec
leave
out
aas
divl
fmuls
cld
fidivl
icebp
or
divb
cmp
in
fldenv
int
int
mov
or
jne
mov
out
sbb
shrb
xor
outsl
mov
cmp
sub
hlt
lea
or
mov
mov
or
std
or
lret
and
mov
add
sub
arpl
es
sub
ds
outsb
int3
and
dec
mov
add
mov
jbe
cmp
ss
push
mov
dec
or
and
testl
dec
sti
sti
add
jns
push
jne
dec
pop
test
xchg
jg
fcomip
pop
and
mov
dec
fwait
push
inc
aas
jbe
inc
xor
adc
mov
popf
xor
cmp
insl
pmulhw
xor
adc
movsb
pop
dec
mov
inc
jne
aad
or
add
mov
mov
mov
push
out
sub
scas
in
std
mov
mov
scas
in
imul
subb
out
insl
and
inc
icebp
je
add
sbb
repz
and
jg
or
add
pop
das
push
pop
dec
adc
jl
fisttpll
in
mov
sbb
sub
dec
lods
aaa
cmpsl
out
sarl
sti
lret
cs
and
mov
ss
cld
scas
loope
testl
int3
std
mov
std
mov
icebp
lods
jno
dec
repz
outsb
lods
imul
sub
and
mov
dec
das
cmp
mov
cltd
popa
jnp
dec
movsb
outsb
stos
xor
mov
jl
out
fisubrs
stos
add
negl
cmp
out
jae
add
hlt
in
add
adc
cmp
mov
fwait
std
add
jnp
or
add
call
jne
pusha
repz
jmp
pop
lahf
popf
inc
inc
sub
sub
push
mov
mov
imul
sub
jg
repnz
jae
jle
jp
jp
test
push
out
add
push
inc
sub
dec
xor
es
outsl
add
xchg
pusha
cmp
bnd
lret
je
dec
insb
pushf
add
pop
adc
jnp
cld
jno
stc
adc
test
ds
jg
fsts
loopne
shrb
movsl
outsb
add
mov
repz
mov
sbb
jp
xor
mov
push
sub
adc
aas
fmull
aaa
mov
or
and
scas
jo
pop
jl
and
xchg
cmp
adc
insb
dec
ss
jbe
out
stos
lods
push
mov
repnz
das
and
mov
jmp
xchg
cmpsl
or
push
inc
cli
jnp
dec
das
in
in
pop
out
jo
jmp
in
xor
cli
mov
xor
ret
idivl
lods
pop
daa
pop
jo
dec
mov
das
jne
dec
xor
push
int3
inc
lea
shrl
dec
ljmp
push
and
test
add
subb
out
lret
or
xchg
daa
adc
icebp
arpl
ds
xor
jl
add
mov
mov
sub
or
scas
adc
cmpsl
sbb
jae
jno
out
repnz
pop
sti
xor
mov
mov
or
or
mov
xor
ja
fdivl
add
fldt
sarb
xor
xor
mov
sub
dec
js
lods
mov
repz
or
clc
out
adc
je,pt
or
addr16
fildll
imul
hlt
test
mov
cmpsl
add
incb
push
jnp
jg
or
std
or
mov
dec
lahf
mov
dec
cli
imul
sbb
jg
hlt
lods
adc
sti
lock
aas
ret
jg
cmp
lcall
mov
mov
xchg
and
and
sbb
out
push
repnz
jne
lahf
push
dec
stc
movsl
jnp
cmp
push
adc
jge
dec
pop
in
loopne
rorb
cmp
sbb
iret
lods
jnp
mov
or
cmc
mov
hlt
sbb
mov
jbe
jne
pushf
or
jmp
out
mov
lods
aas
and
test
shrl
outsb
pop
mov
cmp
rolb
inc
jae
repnz
mov
lret
mov
cmpb
push
stc
mov
sub
mov
inc
leave
jno
je
jmp
jg
and
jbe
out
dec
jns
lock
daa
bound
mov
out
test
push
push
dec
das
xor
out
cmp
and
fbstp
dec
jle
push
lahf
fisubrl
rorb
stos
xor
sbb
xor
aas
pop
inc
test
stos
outsl
lea
sub
repz
jecxz
add
add
or
shrb
jg
fldcw
sbbb
cmp
and
xor
jge
repz
sub
sbb
mov
cmp
call
mov
cmp
cmc
or
pop
das
adc
scas
insl
mov
lods
cmp
or
std
pop
insl
leave
repz
std
leave
pop
mov
outsl
dec
xor
mov
out
cmc
nop
cmp
cld
sbbl
push
mov
push
mov
out
dec
jl
mov
nop
in
dec
adc
push
loopne
lea
cld
cmp
das
jbe
cmp
and
icebp
inc
sbbb
aam
and
mov
shl
or
or
repz
or
repnz
pop
and
xor
int3
and
aad
pop
out
mov
xor
mov
push
into
js
xor
cmp
scas
xlat
jl
pslld
out
pop
mov
pusha
loop
mov
jge
jo
dec
stos
push
cmp
mov
inc
and
xchg
adc
jne
into
daa
push
xchg
repz
sbb
cmp
cli
orb
ret
cmp
ja
das
sub
shl
sbb
and
jns
cs
sbb
lods
inc
imul
mov
fdivrl
ficomps
lods
bound
in
ja
ret
mov
cld
or
arpl
stos
sub
and
add
insl
sub
cs
xchg
mov
pop
add
icebp
imul
add
dec
dec
imul
push
std
sti
out
sub
cmp
insb
or
outsl
cmc
scas
orb
icebp
bnd
jnp
sti
mov
sub
hlt
stos
sub
xchg
xor
jnp
gs
cmp
and
or
jno
sub
pushf
xor
and
out
lods
cmc
xchg
enter
lods
bound
xorl
testl
insl
or
cmc
or
mov
mov
popa
enter
icebp
mov
jo
loope
add
or
or
adc
or
mov
and
inc
sbbl
sub
sti
xor
and
lds
cmp
lods
ret
int3
sbb
icebp
inc
repz
imul
xor
xor
mov
repnz
cmp
mov
imul
dec
jmp
bound
hlt
shl
xor
xor
out
lock
pop
sti
or
daa
hlt
fdivl
xor
pop
cli
sti
sbb
jb
testl
nop
add
lahf
sbb
icebp
jb
dec
xor
cmp
enter
sbbb
cmp
add
adc
push
dec
mov
dec
pop
int3
push
mov
outsl
and
sar
out
mov
mov
lahf
add
cmp
and
sarl
scas
mov
or
daa
pushf
addr16
or
cmp
shrb
jg
int
or
sbb
and
or
xor
mov
mov
cmp
outsl
mov
std
cld
sub
lret
dec
push
int3
push
or
fwait
mov
lock
xor
test
insl
add
sbb
mov
sub
in
aas
and
pop
pop
je
lahf
or
lret
xchg
je
in
jnp
sbb
sub
or
mov
cwtl
sbb
adc
sub
in
xchg
inc
sbb
xor
scas
dec
add
cmc
sub
pusha
or
fildl
loope
clc
outsl
jmp
mov
testb
out
add
icebp
cmp
sub
dec
lcall
jae
icebp
dec
xor
xor
mov
mov
sbb
and
mov
add
outsb
cmpsl
mov
clc
daa
mov
stos
xchg
test
and
sahf
insb
aad
sub
insl
jbe
fs
sub
jae
out
dec
jp
daa
jge
and
mov
rcrl
lock
pushl
jno
pop
push
out
add
mov
mov
xchg
and
xchg
addb
out
sahf
in
xor
scas
pop
mov
js
imul
add
cld
arpl
sbb
outsl
cmp
inc
cmp
add
dec
into
mov
inc
or
sbb
dec
pop
ret
add
popf
pop
xor
dec
and
push
fsubrl
add
std
dec
sub
adc
or
or
int3
jnp
ds
fnstcw
pushf
lock
daa
xor
sti
out
adcb
imul
mov
mov
arpl
int
addl
pop
mov
aas
incl
push
insl
jl
jecxz
in
sub
jge
jo
cmp
push
jecxz
fimuls
push
jmp
ret
adc
fildl
jo
and
sbb
mov
fisubrs
add
out
pop
incl
inc
adc
pop
sub
push
push
xor
and
cmp
cli
mov
icebp
or
push
dec
imul
adc
xchg
jecxz
fistpll
inc
jo
or
out
outsl
notb
mov
add
jne
lods
push
dec
jmp
mov
jp
in
insl
pop
jg
lcall
orb
pop
add
cltd
outsl
insl
add
cmc
add
sub
sbb
insb
int
mov
sbb
mov
rclb
jge
mov
xchg
add
adc
lahf
shr
pushf
sarb
out
xchg
jmp
pusha
cmp
inc
dec
insb
pusha
stc
clc
cmp
dec
shlb
not
xchg
mov
add
in
adc
fsubl
loop
or
in
push
or
out
cmc
cmp
cmp
cmp
xchg
dec
jl
out
jae
dec
insl
add
out
outsl
out
ret
cmpsb
pop
shrl
ds
add
inc
rorl
mov
add
xor
sub
cmpb
popf
sub
xchg
pop
inc
lods
daa
dec
out
xchg
sti
xchg
insb
std
repnz
outsb
or
jbe
repz
jle
jg
sbb
adc
int3
das
jbe
lahf
add
cmp
stos
pop
pop
outsl
outsl
pop
push
repz
das
into
mov
cmpb
mov
int
mov
or
jl
jg
add
gs
out
inc
add
xchg
fwait
push
repnz
pop
cmc
sbb
stos
adc
cmpsl
es
popf
bnd
rorl
and
ret
popa
lock
sahf
and
icebp
push
xchg
in
jg
into
push
sbb
lock
popa
inc
loop
ds
push
cmpb
sti
cltd
dec
loop
pop
or
push
or
push
notl
addl
mov
lock
incb
jmp
ds
dec
xchg
sub
testl
or
das
mov
mov
sbb
push
mov
or
fdivp
lods
xor
mov
or
orb
pop
push
dec
dec
push
push
or
aas
xchg
std
pop
mov
adc
pusha
fwait
popa
push
test
sbb
out
fcoml
or
jge
cmpsl
push
cmp
ficompl
cwtl
and
in
mov
insb
or
adc
mov
lods
pop
negb
jo
push
and
les
jmp
push
sbb
mov
dec
mov
mov
inc
sti
jo
xor
pop
mov
loopne
lret
inc
in
scas
ss
gs
pushf
shrb
push
or
add
shlb
nop
push
fsubrs
adc
insb
xchg
imull
mov
int3
pop
arpl
cmc
stos
cmp
xchg
jge
jecxz
into
sbb
sub
adc
push
insb
loop
lock
sahf
stc
out
push
int3
sti
in
icebp
add
in
insb
out
or
fcoml
pop
addr16
xchg
rcrb
ret
ljmp
mov
cmc
enter
push
dec
jmp
fmull
dec
stos
arpl
lret
cld
mov
push
stc
add
adc
rorl
gs
adc
jle
sbb
jb
add
jmp
dec
fistps
sub
aaa
sbb
int
aam
ret
stos
cmpsl
or
cmc
shll
xrelease
rcl
scas
dec
sarl
hlt
mov
sahf
or
add
popa
insl
lods
out
inc
push
fistl
push
scas
mov
pop
mov
lods
mov
sbb
cs
stos
and
push
lcall
sti
sub
jbe
xor
mov
pop
movsl
sbb
sub
test
out
mov
stos
repz
insl
dec
mov
popa
mov
out
or
pop
testl
cltd
aas
dec
jne
pop
xor
out
and
gs
psrlq
mov
jne
aas
rol
add
std
ret
mov
pop
mov
fadd
test
lcall
addb
cmpsb
mov
sbb
lock
enter
inc
jns
xchg
jecxz
aad
push
pop
lcall
push
jg
push
idivb
test
add
in
scas
jl
sub
test
nop
mov
int3
and
loop
mov
add
dec
cmp
sub
fs
jmp
aas
jmp
mov
int3
test
lock
dec
arpl
imul
mov
inc
fdivl
inc
jo
sub
sti
in
imul
pop
jnp
aam
pop
xor
jg
sti
mov
lret
mov
or
ret
sub
sub
push
sub
test
and
js
xor
imul
icebp
adc
out
lret
int3
sbb
jne
out
cmp
cvtps2pi
pop
adc
das
hlt
mov
xchg
lods
pop
in
mov
sahf
and
xor
jno
scas
int3
or
imul
in
push
mov
fildll
or
lock
dec
push
sub
pop
xchg
jl
or
stos
pop
psllw
xor
fdiv
mov
sub
adc
xchg
push
jle
ljmp
dec
stos
scas
nop
popf
jmp
and
fisubs
dec
ss
stos
and
ss
adc
cmpps
push
repz
mov
pusha
mov
sub
mov
xor
jg
movsl
insl
fdivrl
and
push
push
sbb
dec
test
ljmp
repnz
stos
or
rcll
jl
jae
sbb
mov
pop
imul
cli
inc
xor
fwait
addr16
repnz
xchg
ss
out
dec
jnp
sbb
iret
add
and
popf
out
jp
clc
test
push
xor
cwtl
enter
pcmpgtb
jge
sbb
call
ja
movsl
and
jmp
pushl
rcrl
jne
or
xor
jl
xor
and
out
inc
jb
popa
hlt
fisttpl
pop
outsl
add
cmp
idivl
out
or
sub
inc
pop
aad
push
cmpsl
cmp
ret
stos
or
lret
in
movsl
sub
sub
in
in
in
pop
dec
js
test
std
mov
mov
hlt
popf
out
negb
cli
jae
adc
xchg
inc
sbb
add
stos
sub
jnp
and
cmp
add
addb
ret
dec
mov
mov
dec
das
jae
inc
inc
cmp
cmc
cltd
dec
repnz
or
test
insb
icebp
icebp
roll
cli
lods
icebp
dec
out
mov
lret
xchg
mov
lods
aas
and
test
cmp
xchg
mov
add
and
xor
xchg
out
dec
out
sub
in
jp
es
imul
sub
or
aas
js
xchg
ret
popa
mov
movb
out
dec
aas
orl
loope
sbb
cmp
loope
dec
mov
xchg
jae
ret
xor
adc
inc
fisttpl
fnsave
outsb
mov
out
shlb
push
lahf
lods
rcl
cmp
xchg
sarl
cltd
mov
std
jb
xor
fdivrl
sub
xchg
out
push
mov
pushf
adc
cmp
mov
subl
mov
push
sub
lods
or
das
lds
sub
testb
add
incl
sub
and
push
icebp
pop
jb
cltd
aaa
ds
test
xor
mov
inc
mov
enter
testb
into
cmp
pop
push
aad
outsl
ds
orb
xchg
leave
mov
cmpsb
cli
aaa
or
xor
pushf
mov
mov
adc
xor
rol
xchg
std
sub
repz
push
mov
clc
out
jbe
lock
idivl
mov
sbb
or
stos
sbbl
subb
jno,pn
cmp
cwtl
sahf
mov
out
and
mov
je
js
daa
push
idivl
or
jne
lods
std
in
addr16
mov
xchg
push
movsl
sub
je
mov
jg
ret
cs
add
test
jmp
mov
outsb
dec
in
scas
sub
cmp
pop
dec
cmp
inc
sti
out
sub
sbb
push
mov
scas
dec
or
add
imul
dec
sub
and
arpl
xor
lret
xor
or
adc
outsb
and
cmpsl
xorb
mov
sub
stos
jg
cmpsl
testl
jle
in
lret
xchg
adc
fldt
pop
sub
stos
xor
and
aaa
imul
or
lods
into
jae
unpckhps
dec
aas
stc
cmp
jg
pop
ljmp
test
xchg
outsl
into
pushf
xor
out
push
icebp
insb
push
shlb
cmc
add
sub
call
test
call
jns
adc
jae
aad
scas
push
inc
sbb
hlt
insb
stos
inc
lock
dec
mov
push
fistl
lret
mov
and
in
mov
out
and
xor
inc
mov
cmp
test
cmpsb
aas
in
scas
cld
and
clc
push
xor
mov
sarl
ja
out
hlt
or
and
push
scas
jo
loopne
push
lock
jge
mov
call
andb
cmpb
ror
in
leave
cmc
lret
stos
mov
adc
mov
inc
jno
bound
adc
lcall
insb
mov
inc
lock
sbb
lret
lret
adc
jae
push
fwait
cmpsl
fmull
mov
sub
enter
ss
cmp
dec
test
push
es
jge
repz
in
ss
sar
sbbl
es
cmp
pop
clc
cltd
cmpsb
insb
push
xor
lcall
push
fimull
std
sbb
call
out
mov
scas
cmc
arpl
out
jne
dec
mov
out
sub
aas
add
dec
cmc
leave
inc
jle
jne
fdivrl
or
adc
mov
js
call
adc
mov
xchg
add
std
out
push
pop
aaa
test
decb
push
jl
sahf
jae
xor
lret
out
cli
dec
cld
mov
mov
mov
ficoml
add
andb
adc
enter
in
cwtl
mov
jp
das
jo
push
sbb
orl
sub
or
arpl
out
test
xor
stos
cld
aaa
std
xor
in
xchg
xchg
cs
mov
mov
sti
in
dec
lret
out
jno
add
idivl
mov
mov
mov
out
dec
sub
stc
jg
mov
push
out
dec
dec
inc
mov
in
mov
outsb
jne
jo
xchg
or
add
add
jmp
or
in
loope
pushf
and
push
mov
int
jns
cmp
jle
sub
xchg
scas
mov
test
pop
inc
jg
addl
add
and
lcall
cmp
lock
push
gs
mov
mov
loopne
jns
jl
cmp
rorb
repnz
leave
sub
dec
sbb
shrl
and
cmp
mov
fldcw
xlat
das
lahf
pop
ret
js
daa
and
jnp,pt
xor
mov
pop
jg
or
call
sbb
cld
lea
inc
rorb
andl
cld
mov
das
in
push
jecxz
into
js
insb
dec
repnz
cmp
notl
or
js
pop
lock
xor
mov
daa
cmpsl
mov
div
insb
idiv
clc
stc
or
test
cld
std
dec
decb
verw
add
add
gs
cltd
mov
imul
add
out
movsbl
mov
jecxz
imul
mov
outsl
mov
and
mov
ficomps
ljmp
pop
mov
mov
out
cmp
xor
imul
repnz
int
cmpsl
ds
insb
fdivrp
shll
and
out
pop
test
imul
add
cmc
jg
out
jecxz
in
int3
pop
cmp
push
mov
sahf
jge
clc
scas
out
shl
jg
xor
jb
jnp
xor
shll
outsb
lret
inc
cld
jg
clc
dec
mov
sahf
xorb
std
iret
faddl
or
jo
cld
push
ja
das
xchg
out
add
roll
push
mov
pop
shr
pop
fisubs
cmp
cmp
mov
imul
ret
out
add
and
adc
mov
mov
adc
mov
or
mov
stc
xor
sbb
loop
inc
clc
lea
scas
mov
xor
clc
out
cltd
sbb
cli
das
adc
daa
inc
test
mov
test
sbb
xchg
bnd
cmp
fmuls
lea
outsb
lock
push
popa
add
push
sub
int
dec
xchg
jl
dec
mov
loopne
cmp
mov
inc
shrb
jns
xor
imul
popa
xor
in
add
sarb
jge
hlt
std
pushl
fldl
adc
xor
stos
repz
lret
adc
fdivrs
es
xchg
cmpb
mov
loopne
addl
sbb
loopne
iret
dec
das
mov
addr16
push
adc
jmp
adc
add
mov
inc
addb
orl
cmp
dec
sti
or
mov
daa
test
dec
add
jnp
outsl
or
ret
jle
and
jns
jb
jo
dec
xchg
sahf
push
outsl
push
fwait
stc
arpl
pop
mov
dec
mov
cmp
pop
add
pop
shrl
sti
fimuls
nop
cmp
insb
push
mov
mov
fstps
mov
sub
out
lock
mov
insb
scas
adc
out
in
repz
in
js
or
in
in
pop
imul
lods
insl
sub
jl
std
das
scas
lock
imul
sbb
in
decb
dec
or
mov
pop
push
dec
mov
and
inc
popf
jnp
pusha
dec
idivl
xlat
subl
jecxz
insl
xor
pop
inc
in
ljmp
inc
ja
cmpsb
stc
nop
shll
jbe
jp
in
push
or
std
lods
jo
mov
enter
cltd
insb
cmc
push
pop
sti
repnz
xchg
gs
jmp
pop
sub
or
popf
outsl
scas
lcall
add
test
xor
push
loopne
ja
cld
mov
mov
mov
sbb
dec
xchg
pop
push
rcrb
rol
or
sbb
scas
or
ss
push
jne
xor
mov
jne
cld
or
stos
arpl
adc
nop
out
bound
loopne
mov
dec
sbb
repnz
and
arpl
and
scas
xor
mov
jo
ret
inc
mov
push
xor
mov
sub
out
adc
xchg
scas
sbb
mov
insb
ljmp
sbb
jg
aaa
add
push
jbe
mov
out
outsl
call
js
lock
mov
addb
lldt
inc
adc
push
imul
sahf
ljmp
sbb
and
rorb
data16
push
jecxz
push
outsl
add
xchg
hlt
inc
in
cli
dec
xor
xor
add
rclb
call
add
inc
insb
testl
out
scas
test
jnp
xorl
adc
adcb
cmp
add
in
std
pop
jns
or
push
in
adc
mov
cmc
and
repnz
repz
test
dec
mov
mov
adc
add
arpl
or
sbb
in
add
and
das
cmp
jg
idivl
rcrb
dec
aas
testl
mov
add
cmc
jbe
sbb
pop
cmp
call
gs
sbb
sub
lock
dec
int
mov
sbb
outsb
fisttpll
dec
mov
in
aas
repz
cmp
mov
jg
int
push
insl
dec
xchg
mov
outsl
mov
pop
inc
pop
lods
pusha
das
pop
inc
mov
in
lds
sub
and
mov
push
mov
call
dec
pop
add
icebp
addr16
popf
in
idivb
inc
cmp
repnz
push
inc
cwtl
cld
cmp
or
incb
lahf
mov
or
and
gs
idivb
add
push
mov
xor
call
pop
das
decl
iret
imul
inc
xor
clc
mov
dec
adc
dec
and
pop
das
out
sbb
pop
jecxz
insl
xor
ret
cmc
jns
insl
ljmp
std
or
pushf
aaa
pushf
sub
out
and
jmp
popa
jae
add
or
mov
mov
out
xchg
aas
out
add
sub
dec
mov
cmp
push
nop
mov
sarb
or
in
push
sti
incb
mov
std
mov
push
push
addl
cmp
test
sbb
in
mov
or
cs
mov
into
adc
js
subl
cmp
mov
sbb
add
lahf
mov
pop
rolb
fisttps
sub
mov
fldenv
xchg
scas
cwtl
imul
pop
push
mov
pop
push
pop
mov
ds
sub
lods
gs
xorl
imul
or
pop
push
int
outsb
dec
jg
jne
dec
mov
out
incb
push
jle
pop
pop
pop
sub
cmp
loopne
push
push
fldlg2
inc
test
daa
out
into
mov
cmp
out
mull
shrb
or
jge
push
and
cmp
pop
add
ds
adc
cmc
hlt
icebp
hlt
cmp
jnp
mov
adc
sbb
std
out
xor
adc
nop
mov
xor
and
nop
clc
cld
aas
lods
gs
insl
dec
pop
mov
jnp
sub
dec
cmp
repz
xchg
sarl
insl
and
mov
pop
lods
loope
push
mov
dec
out
adc
repnz
cmp
xchg
xor
adc
stos
cs
jl
in
aas
and
cld
push
cmp
out
jnp
or
movsb
ret
out
pand
ja
pop
in
mov
push
std
and
out
jne
jae
cld
inc
adc
loope
cmp
fdivr
sub
sbb
std
dec
cltd
mov
outsl
and
es
xchg
mov
sub
sbb
xchg
pop
jp
fsubrl
or
dec
lahf
push
or
sahf
sbb
xchg
cmc
push
lret
jle
icebp
into
dec
insl
cwtl
mov
sub
push
jl
sarl
dec
fwait
mov
jae
aam
dec
sti
int
add
sbb
xor
lds
push
cmp
hlt
jbe
push
mov
je
xor
add
lahf
mov
imul
test
or
xchg
pushf
or
dec
aaa
cmpb
nop
sarl
dec
mov
inc
int3
mov
lahf
cmc
shl
enter
ficompl
insb
pop
scas
inc
or
xlat
aam
inc
push
adcb
loope
pushf
js
pop
mov
fdivl
icebp
mov
cs
popf
or
jns
rcll
decl
lcall
and
cmp
inc
dec
repz
jne
jg
jb
sti
scas
jg
aam
aas
and
out
test
scas
and
push
popf
ret
mov
loope
adc
xor
bswap
pop
pop
push
dec
sub
repnz
cld
xchg
hlt
cmpsb
cld
outsb
fldln2
jbe
jle
inc
cmp
stos
hlt
mov
adc
xor
das
std
mov
lret
loope
pop
xor
adc
aas
push
push
les
cmp
pop
fwait
or
pop
lahf
sbb
cmp
mov
sahf
cld
in
mov
add
xor
paddb
les
sub
or
mov
outsl
scas
jo
cmpsl
and
test
arpl
outsl
sbb
or
test
adc
outsl
stos
jmp
idiv
dec
cs
mov
mov
cmc
push
add
out
mov
aas
rolb
into
daa
ret
popf
xor
and
add
mov
outsb
out
repnz
sub
adc
loope
xchg
das
inc
ss
out
jmp
pop
add
cmp
repz
sbb
or
sub
orl
mov
lds
sub
cs
mov
sub
mov
mov
in
pop
sub
cmpsb
inc
mov
sub
sbb
xchg
sti
imul
mov
xlat
sbb
aaa
insb
out
lcall
push
jmp
cmp
jmp
scas
push
pop
cmp
cltd
hlt
into
push
gs
push
and
sbb
add
or
insb
or
pushf
movsl
leave
inc
xchg
cmp
dec
das
outsb
push
lret
in
out
sub
xor
adc
fidivrs
mov
sbb
push
jb
lcall
mull
push
into
jle
jecxz
leave
dec
gs
out
fs
jge
in
es
stos
or
sti
xor
and
pop
scas
dec
test
das
into
cmpsl
push
cmp
inc
jg
test
adc
cmpsl
sbb
ds
push
mov
sub
lock
cmpsl
cmp
jo
out
sub
mov
jnp
mov
or
out
mov
cmp
mov
sysret
rol
fdivrp
add
jg
xor
and
out
adcl
mov
in
inc
sbb
and
inc
roll
jg
fwait
xchg
xorb
fcmovnbe
in
mov
sub
aaa
mov
pop
mov
push
in
or
xor
pusha
lahf
pop
ds
test
das
jnp
sti
and
xor
std
fstpt
lock
lods
fwait
sbb
push
xor
and
sub
push
mov
sub
mov
ljmp
add
outsl
lret
or
js
sub
aad
add
sbb
dec
emms
mov
lret
nop
out
lgs
notb
xchg
hlt
and
shlb
aas
out
nop
adc
cmp
sub
jns
out
push
mov
out
push
add
cld
adc
imul
xor
or
stc
fsubrp
push
ss
jge
aaa
divl
or
sbb
out
push
lea
cwtl
sbb
adc
ret
inc
mov
jmp
add
jmp
dec
xchg
jo
repz
pop
pop
xor
add
sbb
aaa
fisttpl
comiss
push
mov
in
pop
out
inc
scas
lds
sbb
ljmp
in
and
mov
mov
cltd
hlt
pop
out
add
jno
and
adc
jno
rorb
mov
and
add
dec
sub
outsl
in
adc
cld
pusha
mov
jno
cmp
push
jnp
or
add
jnp
cmc
mov
daa
aad
clc
and
push
leave
dec
jl
daa
jne
jnp
cmp
mov
sti
pop
jns
dec
es
lahf
ret
jo
jne
sbbb
enter
notb
mov
std
and
push
cmpb
push
pop
lea
jge
arpl
test
idivl
stos
dec
pop
xchg
fwait
inc
ja
leave
mov
sub
inc
outsl
push
rclb
or
pop
das
or
dec
mov
ja
rorl
push
sahf
push
cmp
mov
mov
imul
mov
xor
adc
jno
icebp
cmp
and
popa
mov
inc
test
adc
btr
out
cli
mov
in
ret
and
cmc
fwait
inc
sbb
shlb
add
xor
mov
sti
icebp
sbb
ficoms
sub
idiv
pop
sbb
add
dec
mov
jge
mov
pop
sti
add
in
mov
xor
xor
xor
fidivs
adc
pop
dec
out
hlt
sbb
jg
add
pop
mov
std
incb
loope
xchg
pop
mov
and
je
or
dec
lock
adc
fwait
popl
clc
xorb
mov
sbb
daa
test
mov
cmp
fwait
inc
ljmp
cmp
pushf
inc
imulb
out
push
cmpsl
fwait
shll
add
mov
pop
les
loopne
sbb
clc
inc
fildll
jne
mov
lret
test
cmp
mov
cmp
dec
xorl
es
xchg
loope
pop
ret
sub
int
add
jg
lock
jb
cmp
inc
sub
jp
mov
bswap
or
scas
or
fcoms
leave
add
stos
rcrl
repnz
xor
stos
xor
out
int3
mov
cmp
jbe
bound
outsl
cwtl
adcb
sub
test
cld
xor
xor
jae
fists
dec
push
imul
push
cli
dec
into
or
cmp
dec
insl
leave
dec
leave
pop
lea
imul
adc
or
lret
jg
lods
pop
xor
dec
imul
in
ret
sub
aas
cmpb
sbb
lcall
sub
hlt
jecxz
mov
imul
insb
sub
mov
jg
andb
pop
into
mov
in
mov
ja
outsl
imul
xchg
sbb
js
push
ret
cmc
add
sub
sets
sbb
xchg
scas
sub
sub
pop
and
add
push
fwait
inc
addb
and
inc
mov
movsl
push
mov
cmpsb
outsl
and
or
mov
or
inc
push
dec
mov
jg
outsl
sub
mov
andl
jp
push
inc
repnz
cmp
cli
pop
push
dec
dec
push
sarl
pop
jo
ret
out
jb
pop
jmp
dec
jbe
xchg
mul
notb
sar
jb
pop
and
sbb
mov
ss
jg
adc
sub
cld
sbb
push
sub
icebp
cmp
shl
fcoml
fisttpl
or
adc
mov
test
push
and
xchg
test
out
push
hlt
inc
daa
xchg
add
adc
jl
cmp
imul
decl
scas
add
and
shl
pusha
pop
insb
daa
xrelease
cmp
jns
lods
adc
jp
or
in
repz
pop
sub
jb
ss
xor
push
sub
xchg
cmp
mov
mov
sub
mov
aad
sbb
or
mov
mov
push
adc
fsubr
push
mov
aaa
repnz
aas
sub
lea
cmp
outsl
mov
repz
sub
aaa
mov
sbb
repnz
shr
push
push
xor
call
repnz
xchg
hlt
or
mov
ja
lods
out
jnp
pop
ja
out
pop
outsl
ljmp
xor
mov
lahf
lret
aaa
or
leave
cmc
icebp
das
nop
adc
test
mov
cmc
scas
sbb
out
cmc
xor
lret
aaa
mov
jle
xchg
movsl
in
imul
and
inc
aas
hlt
xchg
dec
push
clc
insb
adc
xor
mov
out
mov
jno
sub
sub
push
jo
adc
out
clc
out
or
push
out
xchg
test
jae
mov
clc
inc
roll
aas
cs
jb
dec
jle
or
std
push
outsl
sub
decl
or
repnz
and
cs
in
or
dec
and
shlb
cmp
jle
jmp
jno
leave
mov
in
imul
je
cld
cld
add
lret
xor
pshufw
popf
pop
pop
stc
loopne
testb
in
cmp
and
inc
loopne
cmp
test
add
es
rorb
sbb
out
out
ret
ja
ret
jl
es
pop
clc
aaa
push
lock
lds
repz
or
test
sub
sbb
sarl
lods
push
aam
lcall
into
add
cmpsl
cld
insl
mov
nop
imul
xchg
xchg
and
xor
push
nop
daa
outsl
call
xor
or
and
jb
inc
jo
add
mull
mov
insb
push
outsl
xorb
das
pop
lock
jno
ret
das
popa
sub
jne
xor
xchg
pop
dec
push
inc
jo
aas
js
jmp
mov
sti
repz
push
or
or
or
outsb
subl
xchg
pop
lret
push
in
in
cmp
inc
jo
add
in
cmp
out
loopne
push
add
popf
aas
xor
adc
mov
inc
nop
xor
mov
icebp
sbb
xchg
jne
stos
jae
jle
add
jge
pop
jg
mov
in
outsl
mov
dec
push
mov
jnp
add
push
or
and
pop
cmp
mov
test
adc
or
xchg
mov
lods
push
shl
jp
mov
loope
ss
xchg
or
popf
cmpxchg
test
jmp
mov
jbe
bound
out
or
or
ja
das
adc
adc
repz
push
cmc
lahf
bnd
lea
jl
repz
inc
add
into
orb
xchg
pop
lahf
inc
stos
ror
pop
lcall
cli
sar
dec
jg
and
in
mov
aaa
cmp
sti
sub
sub
mov
push
add
out
xor
insb
movsb
cmpsb
dec
mov
add
pusha
or
int3
dec
or
std
jmp
pop
bound
mov
adc
fdivr
and
or
mov
adcb
in
out
jns
orb
stc
and
es
shl
sahf
idiv
fmuls
cwtl
shrb
jle
out
fists
push
clc
loope
testb
clc
mov
push
mov
repnz
add
cmc
pop
out
das
clc
sbb
push
cli
or
dec
popa
mov
lock
dec
repnz
into
cmpsl
int3
sub
addb
into
das
jge
xor
aad
mov
inc
nop
mov
rsm
adcl
jae
push
fcoml
test
pop
dec
mov
adc
es
push
xchg
repnz
cmc
ret
jle
shrb
psubb
xchg
sahf
cmp
xor
cli
mov
repnz
mov
dec
icebp
lock
xor
mov
ret
stos
jae
cli
fwait
dec
mov
mov
ds
jns
sahf
movq
cld
mov
or
imul
in
leave
jecxz
ds
jbe
shlb
repnz
cld
cli
jno
jne
nop
pop
adc
jbe
dec
jl
lret
mov
addb
jns
ja
add
add
testb
sub
incl
or
aad
cmpsl
sbbl
mov
lock
into
dec
in
shrl
es
xchg
daa
jecxz
cmp
jne
inc
je
int3
out
rcrb
mov
fidivl
lods
popf
add
arpl
das
cmpb
cmp
stos
dec
adc
loope
out
repnz
sub
xchg
mov
out
push
sbb
out
mov
js
dec
je
inc
mov
or
or
fwait
adc
jg
jne
lcall
pop
sbb
pop
cmpsb
pop
popa
or
mov
or
lea
add
sbb
jl
jae
aaa
xor
rcr
xchg
jo
rcr
mov
orb
push
jne
in
mov
pop
push
xchg
scas
push
pop
push
inc
scas
jo
cmpsb
insl
repnz
mov
and
push
ja
inc
das
sub
cmp
sub
pop
xor
xor
imul
dec
adc
loopne
psubw
xchg
dec
sbb
mov
cmp
jge
daa
pop
xor
scas
mov
popf
mov
mov
je
cmp
add
add
mov
add
out
lret
jg
jne
scas
jnp
jne
xor
xor
jp
xorb
cli
push
test
mov
mov
mov
in
mov
shll
xchg
lods
movsl
es
loopne
jg
cmp
jmp
and
dec
mov
not
lock
xchg
inc
inc
enter
addb
cmp
sbb
dec
pxor
es
loopne
jecxz
lcall
xor
mov
sbb
mov
sub
mov
call
jg
xor
insl
jnp
dec
popa
in
jl
sub
ret
sub
aaa
stos
add
xor
inc
mov
scas
and
das
loopne
test
stos
inc
jnp
stos
das
cmp
pop
and
out
loope
sarl
xor
pop
xor
out
cmp
dec
lods
ret
sub
ljmp
stos
adc
lret
in
or
dec
leave
mov
jle
aas
jo
add
bnd
add
lcall
lret
jae
dec
xor
fwait
jge
mov
cmp
push
jl
xor
or
lret
idiv
mov
inc
std
std
mov
push
sbb
fmul
sub
fimuls
mov
dec
pop
popa
icebp
imul
jb
jg
pop
movsb
notl
jno
cmp
cld
repz
loop
dec
data16
inc
cmp
imul
ss
jge
repnz
addl
xor
jbe
xor
mov
data16
sub
imul
lahf
aaa
jb
inc
push
sub
insb
in
scas
lock
enter
icebp
out
je
out
mov
mov
aaa
mov
andl
cld
cmp
imul
std
repnz
xchg
int
xor
mov
hlt
adcb
mov
in
or
mulps
mov
xchg
jb
stos
mov
pusha
xor
movsl
ljmp
adc
adc
movl
unpckhps
dec
pop
rcrb
scas
cld
pop
add
lods
aas
bound
xorb
mov
lods
and
insl
sbb
jae
cld
dec
xchg
dec
fisubrl
aaa
mov
std
out
scas
loop
mov
mov
xchg
dec
sub
test
jo
sub
pop
mov
imul
mov
push
xchg
roll
inc
insl
dec
out
das
mov
std
adc
jae
les
mov
std
push
jns
out
push
xor
stc
push
jnp
mov
lea
andb
stc
or
dec
adc
outsl
mov
lock
popl
inc
add
jno
add
mov
lea
adc
cmpsl
adc
pop
js
orb
stos
pop
nop
mov
pop
sub
sub
sub
in
jo
mov
ret
dec
dec
pop
outsl
pop
hlt
fs
imul
inc
dec
inc
lock
lcall
lret
testb
and
dec
std
dec
mov
mov
sahf
or
bound
adc
inc
repnz
push
in
lock
outsl
adc
out
mov
mov
mov
cld
or
jne
push
mov
fcomi
sbb
out
or
xchg
in
xor
adc
pushf
std
lock
ja
aaa
mov
inc
or
fwait
imul
loope
cwtl
push
and
xor
into
arpl
add
xor
adc
xchg
es
adc
mov
test
push
jae
out
sarl
jnp
jp
xchg
jnp,pn
xor
enter
cwtl
dec
jle
and
add
ret
nop
repz
mov
sub
sub
mov
mov
lahf
shr
and
inc
inc
mov
stc
pop
jns
inc
mov
popf
fcoms
xor
les
cli
pop
push
repz
cld
das
dec
lcall
imul
mov
lods
and
push
insb
repz
mov
push
jns
sub
add
gs
sbb
jp
outsl
ret
jmp
xchg
pop
mov
mov
or
jl
gs
mov
or
dec
decb
xor
pop
jo
out
dec
iret
cmp
aam
popa
leave
cli
hlt
mov
imul
sti
xor
dec
test
test
fdivrs
imul
fmuls
mov
jmp
add
push
push
orb
sub
in
jbe
nopl
dec
and
dec
sub
ficomps
movsb
mov
cmp
je
bound
ret
lods
ficoms
das
icebp
imul
repz
adc
push
lea
popa
xor
sub
in
sti
push
inc
sbb
mov
add
mov
sbb
sub
xchg
fisubrs
daa
xchg
movsl
lods
sub
fwait
insl
in
mov
sub
or
mov
push
std
pop
lahf
out
dec
sbb
nop
push
xor
xchg
sarb
jge
pop
xchg
add
mov
lret
jae
adc
jmp
inc
hlt
pop
push
sbbl
add
mov
cmp
testb
jne
pushl
mov
adc
jl
adcl
jne
sbb
or
shll
test
cmp
push
jne
out
notb
pop
subb
add
pop
cli
sub
hlt
sti
ret
xlat
and
lods
ja
stc
jmp
and
inc
or
imul
cld
loop
or
adcb
sbb
out
mov
mov
dec
add
jae
or
jge
outsb
sub
xor
push
or
dec
cmp
dec
out
in
pop
push
arpl
sub
sub
sub
mov
outsl
jp
mov
jb
or
pop
repz
dec
xor
popf
mov
lret
insb
cmp
out
or
fsubrl
or
icebp
shrb
or
mov
cmp
insb
jno
mov
and
mov
into
dec
clc
push
jno
test
push
pop
jle
loop
lahf
pop
push
push
daa
shll
push
sub
inc
pop
shll
shrb
jle
hlt
in
xchg
loopne
fldt
xchg
in
out
adc
stos
xor
out
mov
jl
mov
mov
in
jmp
ds
push
outsl
jns
xchg
push
lds
pop
dec
mov
stos
cmp
std
jns
dec
add
cs
gs
loopne
sahf
mov
xlat
movsb
mov
sub
lock
ja
test
int
lods
fbstp
or
ljmp
iret
jo
inc
es
jg
dec
maskmovq
notl
shll
cmc
repz
add
rorb
idiv
mov
stc
cmp
cli
std
in
lahf
jno
in
adc
dec
cmp
int
jl
jo
dec
sub
and
or
push
loope
jmp
cmp
dec
pop
pushf
pusha
aas
gs
add
adc
in
addl
testb
popa
fcomps
dec
in
aaa
push
out
jns
movsl
or
sub
inc
std
sub
outsl
loopne
add
add
pop
and
sti
sbb
xorb
xor
push
sub
add
mov
adc
dec
push
loop
scas
cmp
jp
cld
and
sbb
sub
add
jnp
jle
inc
or
jg
pop
insb
icebp
dec
cmpsb
fdivrl
xchg
xor
fs
mov
mov
sub
push
or
mov
sub
sbb
mov
sbb
and
mov
or
repz
loopne
add
xchg
jmp
dec
add
sbb
jg
les
or
movsb
enter
xchg
or
scas
and
dec
jo
dec
fnop
in
push
jmp
push
in
jae
jne
or
roll
mov
enter
jns
out
imul
scas
and
and
in
cmp
lcall
mov
ja
mov
add
lods
xor
cmpsb
mov
icebp
sub
lock
dec
adc
sbb
or
adcl
mov
fstpl
out
outsl
mov
mov
push
xor
jno
cmp
repz
sbb
mull
xchg
cmp
lret
icebp
arpl
mov
add
push
sbb
sarb
mov
fwait
pf2iw
das
mov
adcl
ror
add
ja
add
je
jae
jae
pop
sbbl
in
and
sub
insl
push
mov
xchg
jne
lods
cmp
xor
jge
rol
cmp
subb
xchg
and
cs
pusha
incb
pop
dec
std
mov
bound
addr16
mov
hlt
pop
bnd
mov
insb
xor
sub
xor
sub
or
add
add
inc
aaa
pop
lods
and
shl
jo
gs
xorb
cli
push
mov
push
add
insb
add
cmp
ds
lock
mov
jnp
inc
inc
xor
outsb
ja
jmp
iret
sbb
xor
test
add
ret
add
in
xorl
pop
fcmovnb
sub
loopne
push
and
or
xchg
clc
push
fcomip
ja
xor
out
hlt
out
cmc
js
cmc
cmpsl
insl
add
adc
pop
in
jl
cld
mov
fistl
je
cmp
sub
das
jle
cltd
cmp
stos
jne
mov
xor
jae
gs
push
test
xor
jae
xor
sbb
xor
call
xorl
rcll
repz
mov
pop
test
ds
push
mov
lcall
gs
imul
pop
jg
push
sti
jnp
mov
dec
movsb
pop
pop
int3
push
xlat
and
inc
cld
hlt
push
out
push
enter
sub
and
xor
mov
lods
xor
fstpl
fnstenv
adc
push
sub
dec
sbb
xor
fsubl
out
inc
or
test
jle
mov
stc
cmp
outsb
in
sbbl
jb
std
jo
and
sbb
testb
or
sub
out
or
scas
dec
inc
xchg
mov
push
xchg
or
adc
push
nop
sub
movsl
cltd
or
and
xchg
scas
dec
shl
ret
jl
rolb
loope
cmp
xor
mov
xor
cwtl
imul
sti
sahf
and
roll
push
mov
sub
in
int
bound
shr
out
repz
scas
jecxz
fwait
push
adc
rol
and
add
out
and
push
adc
mov
into
and
mov
mov
or
movsb
int3
jae
dec
lds
mov
mov
addr16
das
repz
lahf
std
cmp
add
jbe
inc
add
or
dec
and
cli
mov
in
cmp
push
pop
les
cmp
jbe
std
add
adc
mov
test
sti
test
or
or
lret
stc
mov
dec
popf
dec
in
es
cli
incl
lea
test
mov
add
les
mov
mov
fldt
xchg
ror
cmp
sub
repz
sub
nop
shll
in
cld
repz
pop
and
insb
sbb
push
push
mov
hlt
mov
mov
adc
lods
ret
shrb
rclb
jge
lahf
push
sub
xlat
or
mov
lods
subb
daa
and
std
cmc
cld
shrl
test
sti
popf
add
xor
mov
rorl
out
in
push
fcompl
sbb
sub
adc
and
scas
sti
sbb
jge
imul
inc
in
cmpl
shrl
dec
xchg
cmpsb
sarb
sti
push
gs
and
lods
cmp
in
rep
in
push
repnz
stos
imul
icebp
aam
mov
cmp
mov
out
or
repz
mov
outsl
loop
sar
xchg
insl
ret
lahf
in
xlat
xor
gs
adc
xor
dec
dec
nop
mov
pop
fsts
repz
mov
jae
dec
cmc
pop
mov
cli
jo
gs
rcll
fdiv
or
sti
int3
stc
sub
lret
movsl
cmp
and
insl
dec
ss
test
pop
push
adcl
dec
mov
jl
lock
out
inc
adc
cmp
push
jbe
or
mov
sub
movsb
jecxz
mul
or
arpl
lods
dec
dec
xcrypt-ofb
sbb
sub
in
sar
dec
mov
push
out
xchg
insb
lods
fucomi
sub
cmp
aaa
mov
and
cmc
or
into
outsl
fwait
jge
mov
xor
ret
push
xlat
maskmovq
notl
xor
and
ja
sub
push
dec
and
aad
scas
dec
lods
inc
cmovp
pop
pop
sbb
aad
sahf
push
push
xor
divl
leave
shrl
mov
inc
mov
dec
divl
into
adc
sti
aam
mov
and
aas
divb
mov
sbb
mov
es
inc
jb
jnp
sbb
aad
clc
or
repnz
divl
push
nop
lock
mov
add
clc
imul
sub
sub
xlat
jne
cmc
or
jno
inc
out
xlat
mov
push
pop
push
repz
cli
testl
jmp
add
xchg
test
popw
dec
out
push
mov
cmp
push
cmc
jbe
mov
xor
cmp
imul
or
pop
enter
mov
xor
cld
lods
dec
lcall
out
add
imul
and
add
add
sub
imul
sbb
popa
mov
das
lods
push
cmp
fsubrs
into
stos
jecxz
sbb
sbb
dec
fnstsw
mov
add
xor
cmpsl
test
fs
repnz
into
ficomps
and
imul
mov
pop
movsl
je
inc
idivl
in
repz
xor
jmp
pop
xor
jnp
imul
nop
in
insl
and
dec
fldcw
and
add
rep
and
aad
imul
and
adc
mov
incb
or
aas
in
das
mov
or
xor
jmp
and
loop
dec
test
or
sbb
popw
xlat
imul
inc
movsb
fstpt
in
jo
and
bound
jge
cmpsl
or
lahf
push
pop
mov
std
out
jns
mov
jmp
sti
pop
xor
imulb
insl
sub
dec
cmp
pop
movsb
repz
sub
repz
in
outsb
mov
lahf
xchg
mov
or
out
dec
in
out
imulb
idiv
jmp
imul
imul
daa
push
push
leave
sbb
imull
in
int3
jbe
push
push
iret
dec
sub
or
sub
xchg
repnz
push
scas
cmp
pop
out
xchg
adc
cld
rolb
mov
data16
lret
push
testl
imul
lds
lods
shlb
mov
int
inc
push
dec
sbb
and
sub
jb
add
adc
out
jo
ja
outsl
push
and
repnz
cmp
test
sub
dec
rcrl
dec
xchg
add
std
flds
std
jl
jbe
xchg
lods
add
jl
mov
xor
jge
int
inc
xlat
fnstenv
int
in
jo
lods
pop
outsl
repz
lea
add
push
lret
enter
xor
sub
pusha
push
xor
loope
test
mov
jl
insb
lret
ss
dec
sub
daa
jae
movsb
ficompl
jl
sub
outsl
punpcklbw
xor
in
aas
gs
aam
ret
into
repnz
repz
pop
add
adc
out
jnp
push
dec
es
adc
rorl
adc
sbbl
fwait
jnp
lea
jo
xchg
jle
dec
mov
mov
or
dec
or
jge
cwtl
push
dec
sbb
rcrl
mov
sbb
rcll
stos
mov
mov
test
sti
mov
push
scas
cli
into
mov
lcall
ja
insb
das
xor
imul
jae
in
lods
std
imul
and
in
into
fnstenv
std
cmc
dec
insl
js
sub
lret
negb
or
cmc
bound
das
divl
xor
cmc
mov
mov
mov
add
jl
cmp
pop
mov
aas
sbb
lock
and
add
les
and
and
repz
aas
mov
lahf
icebp
or
mull
mov
movsb
or
rep
lock
out
insb
inc
sub
sbb
mov
es
sub
pop
jae
sub
and
aam
push
roll
les
xor
daa
arpl
hlt
pop
icebp
dec
leave
cmp
mov
mov
aaa
stos
mov
pop
push
std
ret
lods
jle
dec
clc
mov
pushf
mov
test
inc
sbb
scas
pop
test
out
jecxz
jg
mov
pushf
jno
and
jbe
or
adc
mov
call
in
and
into
sarl
mov
jge
ja
mulb
or
lret
in
xchg
pop
or
aaa
push
sti
push
cmpl
stc
and
mov
pushf
inc
out
dec
imul
mov
cmp
scas
int
mov
xor
push
in
cmp
ljmp
test
inc
xor
add
ljmp
out
pusha
mov
in
mov
movsl
jp
cwtl
sbb
lds
test
mov
pop
out
and
pop
mov
bound
adc
imul
cmpsb
xchg
cmp
xor
mov
add
and
icebp
ret
paddb
cld
out
fistl
mov
call
add
and
dec
clc
cli
xor
jp
cmp
shrb
dec
xchg
test
xchg
loop
jg
std
mov
mov
jp
mov
std
bound
push
hlt
or
lahf
adc
insb
and
ljmp
push
rcll
and
sbb
mov
sbb
adc
jae
imul
dec
in
call
jae
cmp
lret
xchg
mov
in
cmc
test
jbe
in
cmp
xchg
lret
arpl
insb
out
sub
lock
dec
cmp
cltd
or
test
stc
and
scas
ss
push
mov
andl
nop
sub
xlat
mov
out
sbb
fyl2xp1
and
xchg
jo
out
or
or
iret
xchg
mov
in
arpl
pop
mov
pop
inc
addl
mov
xor
fisubrl
rol
popa
fnsave
and
outsb
mov
jae
ds
in
sbb
cmp
xor
subl
ss
pop
sbb
icebp
orb
or
add
sbb
or
incb
jbe
jg
ja
jle
lods
sub
cwtl
lret
push
adc
outsl
push
lods
sbb
push
out
lret
dec
mov
lahf
fwait
dec
push
rcll
idivb
std
jp
mov
push
fdivrl
jle
shr
and
add
sub
pusha
push
jp
lret
and
loope
xchg
mov
xor
sub
dec
insb
rcrb
push
lock
bound
add
mov
sub
stc
sahf
lcall
ret
mov
jle,pn
push
test
push
repnz
jle
loopne
je
das
dec
fildll
rolb
push
adc
ret
outsl
xor
hlt
jl
lcall
pop
stc
js
and
mov
mov
mov
jge
adc
das
jle
fstl
addb
fnstcw
loop
jg
out
adc
jg
cwtl
sub
hlt
xchg
xchg
or
mov
test
or
insl
cmp
add
adc
into
ja
insl
jnp
lret
dec
inc
loop
jnp
sbb
cld
movsl
ljmp
repz
popf
jbe
mov
cmp
sub
add
add
jns
add
call
push
dec
nop
clc
adc
stc
stc
movsl
dec
push
lret
mov
adc
mov
sbb
xor
or
push
clc
push
ljmp
mov
arpl
into
jp
fdivl
movsb
shll
fsubr
in
imull
es
arpl
insl
cmp
jl
jb
movsl
enter
dec
add
mov
rorb
je
jae
pop
lock
push
mov
or
inc
test
or
cmp
outsl
push
pushl
adc
sbb
test
lret
fucomip
push
sbb
or
in
in
pop
or
mov
xor
outsl
sub
int3
cltd
dec
mov
pop
or
jo
dec
mov
jnp
testl
stc
pop
inc
jl
add
add
outsl
cwtl
and
sti
adc
inc
jge
cmp
cwtl
pop
add
imul
lret
xor
hlt
aaa
lcall
mov
test
stos
hlt
adc
inc
sbb
xor
xchg
sub
ret
sub
or
push
dec
test
sbb
pop
jl
jno
dec
push
or
mov
xor
stos
xrelease
mov
add
ljmp
mov
inc
inc
scas
into
int
push
rcll
je
repz
ds
mov
xor
and
mov
push
jb
mov
std
inc
or
fidivrs
mov
sti
sub
cmp
sub
cmp
inc
jns
cmpsl
icebp
mov
cs
scas
loopne
xlat
pop
xchg
pop
mov
ss
xor
shrb
push
or
xor
xlat
iret
btr
pop
aam
cmp
xlat
cmpsb
inc
push
mov
outsl
add
sti
inc
cli
sbb
fbld
jle
adc
lods
ret
call
sub
fistps
xor
ja
sbb
imul
or
in
decl
scas
or
sbb
cmp
fisttpl
and
nop
outsl
inc
inc
shrb
sub
jg
jo
cmp
jbe
jg
into
xor
paddsb
mov
sbb
lcall
push
fldt
jp
mov
sub
mov
gs
fwait
sti
inc
aas
jl
ss
mov
xor
mov
push
mov
xor
loopne
in
nop
stos
mov
aad
inc
lods
xchg
bts
jmp
test
sti
or
dec
fs
add
adc
add
pushf
xor
rclb
test
or
insb
inc
incl
shrl
inc
ret
sahf
push
push
ja
sub
sub
call
mov
out
vmovupd
stc
lock
mov
jo
gs
movsl
ss
adc
subl
adc
pop
enter
mov
mov
jg
popf
rcrb
push
mov
dec
mov
add
sub
int
scas
rclb
sbb
and
nop
fwait
add
sbb
jg
sarb
or
mov
mov
and
out
leave
or
fisttps
jl
repz
in
mov
adc
pop
outsl
shr
adc
mov
fisubrl
jge
inc
cmp
xchg
scas
repz
push
clc
xor
pop
mov
xor
loopne
push
out
shll
add
sbb
movsl
or
add
cmc
or
sbb
sub
loope
and
inc
sbb
ja
push
mov
cmp
xor
out
icebp
addb
mov
mov
fdiv
and
testb
add
jmp
imul
insl
cld
ja
add
cmc
fwait
addb
sub
sub
clc
add
or
or
sub
into
ljmp
sub
out
das
loopne
jecxz
adc
push
and
rclb
aas
in
daa
xor
cmc
or
test
cmc
ss
nopl
jo
push
out
das
in
insl
or
sti
out
cli
adc
push
cs
ss
push
xor
xor
and
popf
cmp
enter
jle
push
jl
mov
les
stc
idivb
es
lret
jae
popaw
push
jg
adc
adc
adc
pop
clc
mov
sti
mov
adc
daa
pop
aas
outsl
mov
repnz
les
or
int
cmp
out
es
mov
or
in
int
jl
ud2
push
imul
dec
or
cmpsl
jecxz
cmc
cld
in
adc
std
mov
push
sub
out
adc
in
add
inc
jno
mov
mov
pop
lahf
dec
jmp
push
repnz
pop
cmp
mov
testl
pusha
pop
jno
mul
sti
sbb
sbb
in
add
dec
and
daa
jle
in
mov
icebp
sub
outsl
cld
repnz
or
sub
jnp
xor
cs
mov
sub
pop
test
xlat
xchg
ljmp
fdivr
roll
dec
xlat
xchg
mov
xlat
scas
xor
lret
icebp
add
lods
leave
imull
jno
inc
push
int
out
int
mov
pop
icebp
lods
push
scas
mov
std
push
insb
insl
sub
into
sahf
sub
cmp
pushf
fimull
lret
and
in
push
les
fcomip
daa
mov
mov
dec
push
repnz
add
mov
and
inc
jmp
dec
fidivl
cmc
sub
std
and
test
xor
cmp
jae
sub
dec
aaa
outsl
das
hlt
xor
test
call
xor
add
mov
sbb
sahf
mov
imul
mov
mov
pop
sbbl
xor
mov
jae
shll
and
add
jl
lret
mov
sbbb
sbb
lcall
into
add
cmp
sub
cli
and
test
cmp
out
mov
pop
out
or
mov
mov
cmp
dec
dec
jbe
jo
add
stc
ret
shlb
mov
fistl
call
or
ret
adc
or
mov
repz
or
xor
push
add
or
mov
adc
mov
jge
xchg
cltd
dec
sbb
out
sub
sub
add
or
jmp
outsl
mov
or
pop
fwait
sbb
aaa
cmc
out
stc
adc
fisttpl
or
nop
pop
pop
lock
mov
outsl
mov
ss
cmovne
stos
adc
or
jge
pop
sbb
add
cli
daa
out
bound
mov
push
outsb
int
lret
and
xor
cmc
sbb
lods
ja
jb
or
jg
adc
sub
loopne
sub
cmc
movsb
adc
inc
or
mov
in
fisttpll
and
aam
fstps
in
mov
adc
icebp
lock
jnp
or
sub
adc
ret
aam
test
jg
sahf
out
sbb
add
shlb
push
movsl
dec
xchg
xchg
inc
pop
sarb
xlat
xchg
decb
xchg
test
jo
pop
cmpsl
mov
pop
fstl
lods
xorl
sbb
mov
aam
or
push
addr16
dec
out
mov
ret
sti
push
and
pop
adc
pop
stos
sub
sarl
popa
pop
scas
loopne
sti
and
adc
cld
or
fnstsw
insl
sti
xchg
imul
dec
mov
jmp
mov
test
sub
pusha
jmp
dec
sub
xor
repnz
divb
pop
xchg
andb
or
sarb
jne
lds
repnz
repz
and
and
add
xchg
mov
add
mov
addb
mov
inc
es
ds
imull
es
add
jbe
gs
dec
cmp
push
inc
sub
popa
jns
pavgb
repz
ljmp
jbe
add
cs
incl
jmp
push
jmp
imul
outsb
xor
insb
out
and
xor
cmp
add
hlt
adc
and
push
jg
cmpsb
jae
outsl
out
dec
dec
or
les
fimuls
mov
mov
inc
mov
jne
out
or
inc
rorl
clc
add
adc
rcr
mulb
jo
roll
mov
and
out
push
push
add
push
popf
loope
int3
lods
mov
push
xchg
push
xchg
adc
inc
mov
out
lahf
mov
inc
ficoml
clc
fwait
das
dec
es
xor
lock
cld
jg
xor
das
xorb
ret
xchg
inc
adc
stc
push
push
sub
mov
xor
in
iret
push
daa
stos
push
xor
sbb
mov
out
int3
add
pop
xor
aas
cld
mov
xchg
testb
imul
jg
dec
sub
imul
rclb
loopne
cmp
les
std
imul
insb
outsb
inc
push
dec
insb
sub
jecxz
lea
and
add
inc
add
lods
and
das
in
sub
push
test
xor
jns
push
jl
repnz
int
xchg
out
adc
xchg
adc
sub
rorl
mov
jp
sti
loopne
xchg
mov
and
push
ds
push
cld
or
in
roll
add
outsb
xchg
mul
dec
xchg
sub
jle
pop
adc
std
cmp
js
incb
and
pop
mov
test
inc
push
repz
decb
mov
jbe
push
std
repz
xor
mov
out
sub
subb
popf
sar
inc
adc
xorb
ja
add
mov
xchg
imul
jle
aas
dec
addb
jg
orb
mov
mov
leave
mov
mov
clc
aaa
cmp
lock
sub
cld
sub
and
adc
out
or
jmp
into
sub
loopne
stc
inc
xor
jg
mov
push
outsl
lods
int3
mov
jae
repnz
inc
dec
cmp
fwait
adc
movsl
aam
orb
jo
jb
adc
push
mov
and
sub
bound
icebp
xor
ljmp
pop
xchg
mov
mov
or
sub
je
mov
hlt
xor
or
push
push
jo
fcomp
outsl
and
add
call
mov
dec
sbb
inc
sti
sahf
pop
xchg
nop
imul
leave
clc
push
outsl
faddl
lahf
pop
pop
sbb
dec
mov
std
pop
fbstp
scas
sarl
cmpsl
stos
mov
sub
push
lock
mov
mov
sub
lcall
cmp
int
outsl
pusha
cmp
cwtl
fdivl
xrelease
scas
not
fucomp
add
loop
lods
sub
clc
jo
fistpll
mov
fxch
mov
rorb
es
orb
leave
add
pop
mov
leave
nop
jbe
mov
lcall
hlt
std
cmp
and
sub
pop
xchg
in
xor
inc
cli
mov
imul
fdivl
dec
insl
xor
sbb
push
outsl
jge
icebp
idivb
and
mov
loope
push
out
pop
or
jle
inc
repz
jge,pt
xchg
imul
adc
sub
push
addr16
lret
add
out
daa
fs
das
test
idiv
lock
arpl
outsb
icebp
hlt
adc
xchg
sbb
add
stos
aas
mov
fldt
xchg
inc
sbb
stos
in
lcall
outsb
pop
out
ret
mov
mov
adc
dec
int
int
imul
xchg
jge
jp
mov
add
adc
add
and
and
rcll
push
dec
jo
cmc
jg
pop
lock
sub
lahf
push
mov
insb
ret
and
inc
mov
hlt
jecxz
add
xchg
xchg
jnp
out
test
ljmp
clc
dec
das
cltd
popf
jae
sbb
sbb
mov
inc
mov
mov
xor
test
mov
and
lods
aas
pop
in
push
test
sub
mov
pop
aas
int3
rcrb
xchg
add
sub
lret
mov
nop
mov
cmp
xor
push
add
int3
cmpsl
cmp
out
repz
scas
sbb
sub
or
pop
jbe
pop
mov
sbb
sbb
cmp
lcall
or
test
not
jmp
jne
call
mov
test
decl
loop
sub
and
mov
dec
sbb
in
push
dec
pop
stos
shlb
rcrb
dec
scas
or
mov
sbb
int
jne
jp
mov
pop
mov
inc
daa
mov
inc
sar
pop
pop
cwtl
jmp
lret
xor
dec
mov
adc
idiv
dec
sub
or
mov
je
aas
addl
addr16
or
call
jl
xchg
mov
dec
adc
je
dec
aaa
aas
mov
jle
inc
xor
in
cmp
repnz
rcll
xchg
push
add
mov
xchg
xor
sub
jb
xor
adcb
sub
xchg
test
push
jns
dec
xor
add
pop
stos
adc
in
arpl
arpl
jecxz
scas
aaa
insb
pop
jnp
cld
dec
lcall
ss
jge
vunpckhps
pop
add
imulb
mov
cmp
pop
shll
aaa
sub
add
dec
std
mov
jae
cmp
lcall
ret
adc
call
rcr
inc
mov
sbb
add
fistpl
jecxz
inc
std
outsl
add
out
mov
pop
repz
pop
mov
add
fwait
std
jg
xchg
mov
lods
lds
add
mov
cmc
lock
mov
jl
ss
lock
dec
pushf
andb
sbb
das
push
and
stc
jnp,pt
xor
aaa
and
data16
out
mov
pop
and
mov
out
mov
arpl
imull
loop
mov
lods
fildl
mov
mov
fisubl
test
andl
xor
lock
inc
mov
xchg
jne
adc
xor
rcrl
jge
push
xor
std
out
xorb
and
cmp
outsl
icebp
in
pop
lds
lea
movq
subl
mov
into
fbld
outsb
mov
adc
jp
sub
dec
jno
mull
outsb
adc
ds
repz
int3
ja
cmp
dec
test
movsb
call
cmp
xlat
mov
dec
repz
mov
push
mov
repz
stc
xorb
lcall
xchg
dec
sbb
popf
push
mov
pop
cmp
es
fildl
in
cmp
fs
jmp
and
cmp
out
cmp
cmpb
js
inc
std
stos
in
push
xchg
sahf
mov
cmpl
in
sbb
movsl
dec
sbb
test
popf
daa
shufps
lock
data16
mov
in
cltd
sbb
jg
shrl
scas
in
xor
aam
repnz
inc
and
or
add
mov
jne
subb
fnstenv
stos
mulb
add
popf
jae
shrb
int3
stos
repz
int
mov
add
or
or
dec
xor
subb
mov
cmp
jbe
mov
call
jne
and
add
inc
js
add
adc
icebp
lea
lods
fimuls
in
mov
mov
daa
jg
and
ret
popf
cltd
jne
push
sub
in
out
pushf
insb
jno
pop
cmp
pushl
xchg
fstpt
push
cmpw
fbstp
out
pop
cmpsl
int
lock
xor
cltd
pop
gs
lock
xor
icebp
imul
fistpl
or
loope
lods
inc
scas
push
adc
loopne
and
add
mov
aas
mov
fsubrs
clc
cli
lret
shll
addb
inc
shrl
jne
sub
and
sub
addb
adc
stos
mov
and
mov
pop
repnz
mov
sti
jg
mov
ror
and
gs
add
rclb
cmpsl
sahf
xchg
jg
test
jle
clc
dec
push
into
mov
sbb
dec
dec
icebp
std
or
cld
icebp
jnp
leave
push
mov
enter
lcall
out
jno
repnz
call
in
ds
xchg
mov
xorb
cli
mov
add
dec
adc
jns
cmp
push
loope
fstpt
inc
stos
push
mov
mov
jno
jge
aam
xchg
dec
xchg
mov
sub
aas
sti
mov
repz
pushf
jge
lods
xor
and
adc
das
and
insl
and
mov
sub
dec
or
fldl
inc
lret
adc
inc
andb
imul
outsb
rorl
hlt
sbb
test
out
push
fwait
jge
in
scas
int3
mov
jne
or
push
fwait
imul
pop
in
push
lret
push
push
out
and
pop
stos
out
xchg
out
and
pop
fwait
xor
pop
repnz
and
mov
inc
out
cmp
icebp
ret
pop
addl
stc
add
aas
mov
cmp
adc
jne
out
push
or
sbb
sbb
adcl
sti
test
arpl
dec
sub
jnp
arpl
mov
xchg
push
out
cmovae
cmp
outsb
jbe
xchg
xor
or
xchg
pop
rorb
sbb
bound
ss
add
lock
jo
dec
fld
fildl
in
and
mov
push
shll
pop
mov
fstl
inc
rclb
push
dec
inc
adc
out
mov
mov
cltd
scas
scas
jge
out
pop
mov
jmp
jle
ret
outsb
jg
pop
inc
ss
stc
mov
xor
or
push
es
mov
and
and
lcall
mov
xchg
xchg
in
sbb
jne
out
jp
or
insb
cmp
insl
cmpl
cmp
insb
mov
std
pop
mov
push
sub
cmc
cmp
xor
sbb
mov
enter
in
cld
cmc
test
adc
ljmp
push
push
test
jo
xor
lock
rolb
mov
lret
xchg
repz
sbb
lret
jne
pop
test
jg
shll
out
mov
mov
sahf
test
les
icebp
xor
lds
and
rolb
jbe
jl
ret
stos
push
cmp
add
adc
mov
sbb
aad
cmpsb
mov
stos
inc
pcmpgtd
clc
mov
fs
movsb
jmp
and
push
stc
jo
adc
das
imulb
add
divl
rcrb
es
xchg
jne
inc
and
out
into
stc
stos
aas
and
popf
scas
or
rcr
or
inc
loope
psllw
lds
mov
aas
jge
lock
mov
and
jo
xor
lret
pop
scas
or
jb
fdiv
adc
call
sahf
fldt
rolb
mov
xchg
icebp
imul
cmc
fistpl
scas
fstpt
aas
mov
aas
int
divb
dec
jne
imull
clc
mov
sbb
lahf
in
fldenv
jno
inc
arpl
mov
xrelease
dec
movsl
cmp
aaa
rcr
or
mov
pop
adc
fldl
inc
xor
jmp
in
cmpsb
sbb
cmp
dec
dec
inc
in
dec
pop
hlt
push
mov
sub
sarl
mov
push
dec
or
js
negl
jb
ja
jo
ret
xchg
xchg
add
add
sti
dec
mov
call
es
sbb
test
cmp
mov
in
push
fidivs
push
pop
out
jg
xor
xchg
jo
pop
in
cmp
xor
in
aam
push
imul
int3
xor
dec
adc
and
push
in
mov
pop
call
loop
popf
push
into
shll
push
sbb
into
mov
push
aas
frstor
fsubs
in
sbb
rcll
lock
adc
in
cld
inc
aas
push
aas
jl
add
insl
ret
lods
iret
fmuls
jo
scas
cltd
inc
and
mov
add
in
sbb
out
pop
cmp
jp
ficomps
sbb
in
jg
add
pushf
ret
lahf
mov
mov
inc
xor
jmp
out
mov
mov
and
rorb
test
into
adc
and
jae
insl
sub
insb
mov
jne
push
cmp
cli
add
imul
or
cmpsb
repnz
dec
lock
decb
dec
mov
sub
fdivs
and
push
push
jb
and
fmull
inc
hlt
and
jnp
repz
out
jge
pop
adc
xchg
add
jnp
repnz
xlat
shlb
and
sub
mov
dec
lcall
and
mov
push
loopne
mov
xlat
sub
pushf
or
aas
insl
fnstsw
push
out
sti
ret
inc
xor
loop
mov
pop
shll
push
sbb
pop
inc
lret
sub
out
jae
emms
add
jb
mov
sbb
std
pop
lock
addr16
ss
jg
mov
arpl
mov
aam
sbb
addr16
test
add
sub
add
and
push
push
xor
xchg
xchg
and
stos
scas
mov
out
xchg
inc
xor
mov
push
ficompl
add
sahf
cld
idiv
xor
add
inc
add
xor
push
push
pop
dec
mov
adc
jno
pop
adc
push
xchg
or
mov
inc
xor
daa
fwait
loope
insb
fs
mov
dec
cmc
cmp
cmpb
lcall
cmp
jne
je
dec
rorb
fnstenv
pop
cld
loop
dec
stos
das
das
imul
jae
cmp
jne
pop
adc
incl
addb
pop
and
mov
and
sti
fwait
pop
cmp
cmpsl
aad
or
and
sbb
or
in
pusha
pop
push
fs
mov
cmp
repnz
or
sarl
lods
mov
add
in
out
and
ds
push
lods
fucomip
pop
and
cmc
cld
mov
jg
cmpsl
and
xor
sbb
and
adc
xor
fwait
and
cmc
out
iret
jae
sub
pushl
cs
out
lods
std
outsb
dec
movb
and
pop
cmp
arpl
std
mov
adc
pop
cmp
scas
fwait
gs
negb
xlat
sti
xor
icebp
out
ja
cmp
repz
pusha
nop
xor
mov
adc
mov
pop
cmpsb
std
jne
adc
mov
dec
xchg
cltd
movsb
sub
lods
into
fimuls
jle
sbb
nopl
push
test
clc
jge
sbb
cwtl
mov
cltd
in
mov
pop
sub
rclb
lret
inc
daa
int
ret
mov
xorb
pop
mov
das
push
scas
adc
fildll
rcrl
jp
jae
sub
xchg
and
into
jecxz
dec
add
in
and
adc
add
inc
add
sub
iret
aad
in
lahf
call
mov
or
repnz
gs
cs
das
inc
cmp
shlb
daa
mov
push
jbe
dec
dec
cmp
arpl
cmpsl
sub
sbb
shll
xor
sbb
les
sbb
rcrb
lcall
cwtl
sahf
shlb
ds
push
arpl
clc
repz
fisubrl
ret
jo
int
imul
ss
ljmp
popf
xor
inc
xchg
aas
and
mov
jecxz
jecxz
cltd
pop
sbb
mov
pusha
out
jge
in
sldt
cmp
std
cmpsl
scas
test
outsl
mov
ss
inc
repz
fxch
mov
out
int
insb
jae
rclb
xor
fmuls
int
mov
sbb
pop
xchg
pop
cmp
aas
sbb
sbb
fwait
jp
loope
push
sbb
mov
iret
sbb
and
rdmsr
sub
sub
or
bound
aaa
sbb
add
jl
nop
fcoms
cmpsl
mov
add
add
sub
popw
or
in
aam
mov
jns
or
push
inc
lods
ds
jae
xor
aam
adc
push
pop
jp
out
xor
addl
js
adc
and
cmp
js
hlt
fbld
xchg
inc
jb
mov
add
and
outsb
loopne
sbb
jp
dec
sti
sbb
push
jnp
nop
pop
xor
lds
jo
aaa
dec
xchg
je
pop
jb
dec
daa
test
dec
fwait
pushf
shl
jne
std
mov
dec
les
scas
mov
fs
pmaddwd
fidivrl
fisubs
addr16
jp
push
lds
push
cmp
push
mov
jno
sub
inc
sub
rcrl
mov
pop
cmpsl
imul
arpl
pop
lret
rcll
mov
mov
out
rcr
sub
jl
and
lcall
mov
js
push
pop
push
mov
jae
xor
xchg
adc
unpcklps
mulb
adc
mov
mov
call
inc
std
dec
sbb
test
sub
inc
or
dec
pop
test
pop
jbe
dec
or
jl
or
pusha
sub
mov
repnz
das
aam
sbb
cld
jne
aaa
mov
lods
cmp
lods
or
xor
push
outsl
data16
add
jl
push
dec
stos
out
xor
les
jns
or
jns
cli
ret
ret
mov
or
sub
xor
hlt
inc
std
lret
dec
dec
jae
cld
pop
fisttpll
lea
bound
arpl
cli
mov
sub
cmc
xlat
sub
pop
xor
aas
lahf
adc
mov
jge
mov
mov
sbb
xor
sti
test
pop
or
push
icebp
sub
shll
and
std
add
mov
aas
add
fstps
js
dec
add
sub
notl
sub
fwait
fwait
xor
sti
and
dec
jnp
inc
mov
sub
ret
rcr
add
lcall
mov
stos
mov
jge
leave
repz
jno
subb
lahf
enter
inc
lock
imul
pop
out
sbb
sub
jge
jp
out
dec
lcall
pop
lahf
std
mov
xchg
adc
xor
lcall
mov
mov
in
rep
in
adc
ja
out
outsl
lcall
mov
mov
add
push
push
mov
sub
loop
imul
repnz
stc
jecxz
or
repz
mov
es
outsl
sahf
jo
adc
rcll
sahf
sbb
cmp
stc
adc
arpl
push
mov
clc
cwtl
or
popa
fsts
add
adc
xchg
shr
loope
mov
jae
mov
jmp
cmpsl
mov
sub
and
daa
mov
das
fsubs
out
imul
mov
pop
dec
mov
cmp
js
adc
repz
adc
mov
pop
mov
and
mov
add
mov
sbb
and
mov
mov
aam
or
pop
jp
in
push
sbb
pop
test
and
outsb
in
jne
imul
or
insb
pushf
sub
or
fisubrs
aaa
push
xlat
mov
mov
mov
sbb
movsl
fdivs
and
add
mov
test
push
ret
aaa
jecxz
rclb
and
fildl
pusha
test
xchg
lock
add
jge
cltd
lret
out
ds
aad
adc
sbb
sbb
call
inc
imul
xchg
or
rcl
pop
imul
stos
out
in
adc
fwait
mov
stc
jb
add
push
xchg
lea
dec
push
daa
add
sbb
faddl
mov
add
mov
dec
stc
js
sbb
stos
popa
sbb
mov
dec
push
popf
cmpsb
hlt
lahf
sub
xchg
sti
adc
repz
jnp
mov
jnp
xchg
adc
jl
out
in
xchg
mov
out
sbb
cmp
jge
repz
repz
jp
sub
jnp
push
sbb
in
insl
int3
inc
adc
movsb
jnp
push
sbb
out
jbe
pop
push
jg
push
pop
loope
mov
sub
pop
jno
add
mov
or
bnd
das
arpl
xchg
pop
xor
and
into
sub
negl
and
or
enter
jne
sbb
imul
cmpsl
loop
jnp
fdivs
ja
std
bound
cmp
add
ja
cmp
push
jnp
pop
cmc
repz
shlb
scas
add
int
or
leave
adc
addps
cwtl
fidivs
pusha
imul
repnz
add
xor
jl
call
fmull
lahf
into
stos
xchg
inc
std
pop
pop
int3
mov
sub
mov
lds
mov
sub
int3
adc
adc
xor
icebp
and
lea
sti
lods
mov
in
pop
cs
sahf
jecxz
jmp
mov
popf
or
sbb
out
insb
xchg
subps
or
in
aas
add
out
dec
jg
rclb
and
push
and
movsl
add
push
push
das
sub
push
xor
push
cmp
rolb
xor
rcrl
mov
xor
mov
fidivs
jg
cli
flds
dec
push
bound
mov
or
mov
xor
push
jo
out
dec
inc
push
aas
sbb
pop
or
push
cmpb
jmp
data16
pop
and
gs
adc
testl
out
movsl
insb
icebp
sbb
add
bound
pushf
sub
sub
ret
sahf
xchg
out
xor
mov
mov
test
inc
add
cld
add
or
insb
sub
movsl
inc
jl
xor
out
loope
aad
inc
data16
add
sbb
dec
or
or
mov
dec
mov
xorl
in
fwait
sub
sub
and
xlat
cmp
lahf
cmp
mov
jecxz
xchg
leave
and
mov
xor
jns
jl
ja
outsb
mov
movsl
out
mov
sub
jl
sub
mov
jae
int
scas
outsb
jo
fwait
lods
push
out
adc
rcr
or
ss
and
xor
push
inc
lods
das
push
jp
push
out
mov
xor
lods
movsl
aaa
mov
mov
jl
mov
das
popf
in
sbb
lds
in
push
jae
pmaddwd
add
add
add
add
sub
scas
cmc
lods
xchg
incl
pop
inc
scas
repz
or
test
or
or
mov
or
adc
adc
adc
pop
aaa
sbb
sbb
sbb
sbb
or
push
out
pop
or
and
ja
or
and
and
sub
jae
dec
mov
ds
jg
cmpsl
adc
sub
sub
sub
jle
xchg
xor
in
in
insb
inc
icebp
in
cs
mov
inc
or
and
movsl
or
or
pushf
sub
inc
sbb
push
pushf
ret
punpckhwd
cmpsb
lea
out
sub
addr16
sarb
lahf
fcmovne
rolb
std
arpl
jo
in
int
pop
push
sbb
ret
std
ljmp
and
dec
xchg
hlt
mov
fisubs
mov
in
ja
out
inc
xor
shrl
cmpsb
mov
rorb
cmp
ja
shlb
fstl
add
pusha
lock
xor
repnz
ret
add
xor
rcrl
adc
jno
cmc
adc
dec
push
xchg
cmc
icebp
fildl
or
xchg
daa
mov
jg
or
and
loopne
xlat
aam
or
mov
adc
cmp
test
out
cli
in
sub
leave
fidivs
imul
cmp
aas
and
lock
add
cld
push
inc
cmp
sti
lods
ret
and
jle
jo
test
outsb
outsb
mov
mov
cmp
sub
in
inc
pop
data16
mov
sub
and
inc
addl
adc
clc
ret
stos
add
jmp
mov
and
inc
inc
pop
add
and
out
mov
adc
outsl
dec
cmpb
pop
cmpsl
jge
lret
lret
or
std
lret
lcall
les
mov
xor
push
mov
icebp
pushl
std
shlb
std
in
lock
mov
cld
call
add
and
xchg
xor
ret
in
outsl
insb
lock
cmp
pop
xor
and
or
and
and
pop
roll
outsl
adc
in
sbb
adc
sarb
out
cmp
movsl
xchg
dec
jge
push
lock
cs
mov
and
and
push
sub
lock
mov
xor
jg
aas
lods
dec
mov
and
decb
aaa
fdiv
mov
loope
jg
or
mov
xor
aas
sarb
or
xor
xchg
xor
std
inc
mov
rolb
fadd
icebp
sbb
or
and
mov
mov
icebp
pop
nop
add
cmp
ljmp
aas
add
xchg
aam
ss
sbb
and
js
incb
add
xor
add
shll
mov
jo
mov
test
mov
addl
jp
pop
lret
xchg
lods
add
and
test
outsb
add
lcall
dec
inc
xchg
xchg
sbb
fwait
push
sbb
cmc
fs
rcrb
ret
push
inc
sub
xor
mov
test
push
mov
sub
jg
pop
sub
fwait
loop
lahf
push
int
int
add
push
jne
xchg
jo
test
mov
sbb
adc
js
test
xchg
xor
lcall
lods
daa
out
scas
into
je
cld
into
pushf
test
in
out
push
idivl
test
es
test
in
add
stos
insb
mov
pop
and
cs
mov
std
hlt
out
adc
inc
stos
pop
xor
cmp
sub
dec
cltd
icebp
add
mov
and
xchg
dec
and
mov
sbb
lock
lret
test
xorl
loope
ss
cmc
jmp
imull
jbe
scas
cmp
hlt
add
lods
mov
mov
in
xchg
out
push
daa
gs
outsl
inc
movsl
xor
push
mov
fcmovu
mov
sbb
push
ljmp
sti
adc
or
repz
jae
and
xor
xor
repz
lahf
or
aas
lret
outsl
sarb
mov
sbb
sub
adc
push
outsb
clc
sbb
into
or
and
fwait
push
and
in
push
mov
outsl
repnz
inc
inc
inc
outsl
cli
insb
xor
sub
loop
hlt
in
sbb
out
fs
cmc
dec
xor
std
lcall
and
pop
mov
mov
adc
xor
lock
pushf
push
addr16
lret
out
jecxz
and
aam
cs
idivb
push
mov
inc
adc
dec
lock
cmp
cmp
sti
decl
and
cmp
xor
sti
in
inc
xchg
add
pop
mov
imull
mov
fcmovnb
fidivl
stc
or
aas
push
das
fnsave
jg
sbb
mov
jle
sub
inc
ret
adc
or
orl
push
and
xor
cmc
jecxz
jecxz
jl
mov
sbb
lock
pop
sub
adc
add
lods
out
and
lods
mull
push
in
xchg
sub
cmp
xor
mov
out
sahf
or
insl
push
ja
mov
es
sub
daa
aam
cmp
xor
fimull
pop
into
out
push
lret
xor
sub
jl
cmp
cwtl
jl
cmc
and
stos
and
adc
sub
daa
into
add
add
int3
and
or
imul
cld
out
jbe
pop
jp
cmp
shlb
push
mul
or
insb
pop
nop
adc
and
mov
mov
mov
dec
or
mov
pop
mov
mov
sub
push
ror
fcomps
xor
sub
es
arpl
or
adc
jge
sbb
push
dec
lcall
add
sub
and
cmpsl
ds
repz
test
mov
cmp
xchg
jns
divb
std
or
rorl
adc
out
fisubrl
fistpl
aaa
cld
xor
out
es
aas
cmp
cld
lods
xor
xor
rcll
in
lea
outsb
cs
out
lock
sub
icebp
lock
sub
divb
mov
js
stc
or
sti
jg
cld
dec
xor
decb
pushl
add
add
jmp
jo
das
aam
jnp
add
je
hlt
push
or
or
or
lahf
or
or
data16
mov
or
rdpmc
adc
sub
movlps
adc
mov
out
pop
or
sbb
sbb
sbb
sbb
icebp
movsl
push
jl
out
je
sbb
xorl
mov
jnp
pop
dec
inc
and
and
and
and
and
and
daa
out
sub
in
adc
sub
in
out
dec
lea
out
lods
or
lock
icebp
in
repnz
repz
bnd
xor
out
testl
cld
or
std
xor
ud0
add
add
add
jnp
xor
das
pop
dec
or
scas
mov
or
or
or
or
or
cld
adc
adc
adc
mov
adc
adc
sbb
ja
das
sbb
sbb
sbb
cmp
test
nop
pusha
out
cmpsl
cli
inc
in
imul
inc
cmpb
add
iret
lcall
scas
dec
dec
xor
mov
scas
sbb
or
cmp
ds
je
in
clc
les
mov
mov
or
rcrl
jo
int3
test
arpl
and
popa
dec
imul
xor
dec
mov
clc
nop
pushl
mov
fsubl
xor
repnz
pop
into
adc
adc
inc
ret
add
pop
add
mov
jne
pop
xorb
jl
sub
std
movsb
aas
mov
xlat
out
xor
push
ljmp
ret
out
dec
add
arpl
cmp
dec
outsb
fwait
and
sbb
or
leave
and
rorb
lahf
ss
clc
pop
rclb
repnz
daa
cmp
outsb
out
mov
or
and
pop
and
mov
movsl
das
or
cwtl
test
pop
jecxz
pop
cmpsb
repnz
out
adc
jno
das
ret
and
add
sbb
lcall
into
mov
jae
outsl
loop
ret
push
sbb
cli
sub
cs
adc
cs
lods
stos
ja
hlt
or
jg
jmp
aaa
js
pop
aas
cmpl
nop
jmp
pop
cmpl
push
insb
adc
push
mov
adc
and
ja
and
jae
add
js
cli
and
out
mov
add
js
or
call
sub
es
rcll
pop
pop
pop
das
cmc
lods
cmp
leave
outsb
mov
and
cld
xchg
mov
jnp
sub
push
fdivrl
jnp
sub
jnp
add
idivb
add
pop
pop
mov
mov
cld
sub
mov
and
or
inc
ret
sub
popf
xor
testb
cmc
mov
mov
into
dec
push
ss
or
dec
push
cmpsb
stos
sahf
popl
rcr
jge
je
std
insb
add
lret
add
push
or
push
out
inc
lret
mov
jae
shlb
ljmp
mov
push
lock
mov
repz
test
mov
dec
push
add
push
orb
mov
insl
rcl
sub
dec
add
in
jb
xor
repz
movswl
xchg
scas
jo
or
add
and
ja
lock
ret
in
xchg
call
cmp
cmp
icebp
lret
daa
cmp
or
xchg
call
stos
lea
jno
add
mov
frstor
repz
jp
fiadds
and
ss
dec
cltd
and
and
icebp
enter
sub
stos
inc
jae
popf
jmp
pop
shr
push
pop
sbb
add
cmpb
out
ljmp
dec
jmp
mulb
pusha
imul
push
sub
sub
inc
loopne
mov
flds
aaa
ljmp
movsb
pop
mov
jne
jmp
jl
jmp
into
fs
in
cmpsb
jge
xchg
js
pop
jg
xchg
sbb
jl
lcall
mov
mov
in
rorl
or
sub
pop
repz
std
xorb
icebp
rol
fsts
pop
adc
das
cmp
push
cmp
outsb
mov
cld
aam
jl
pop
addr16
cmp
in
aaa
int
inc
ret
fadds
mov
pop
lret
ljmp
jle
pop
and
in
arpl
decb
shll
pop
cmpsb
sbb
into
jl
dec
addr16
popa
ret
sub
cmp
add
dec
pusha
mov
xor
or
add
fsts
pop
xor
imul
leave
sbb
sar
btl
push
int
sub
jns
inc
xchg
js
imul
mov
hlt
loopne
mov
push
das
je
mov
adc
movsl
xor
mov
sub
sub
jne
and
test
sahf
adc
aad
addr16
add
out
inc
sbb
in
jle
push
sbb
xlat
or
outsb
orl
sbb
out
movb
pop
sbb
mov
xchg
mov
dec
comiss
scas
imul
flds
push
lcall
xchg
adc
push
into
ret
sarl
in
sub
push
clc
dec
jecxz
dec
sub
into
jmp
add
mov
jno
xor
push
dec
ja
cmc
pop
sbb
push
mov
or
sub
mov
mov
nop
or
mov
cmc
sub
loopne
out
cmp
in
scas
jg
mov
inc
in
inc
rcrb
lock
inc
mov
add
out
fisubs
cld
lret
sub
testl
outsb
adc
into
jg
repnz
test
in
mov
inc
jg
out
rolb
scas
arpl
rcrb
sub
outsl
aas
out
pop
sub
add
loopne
mov
ffree
mov
mov
lcall
psllw
in
icebp
pop
push
mov
push
cld
cmp
push
push
and
jnp
lods
cmp
lret
push
dec
inc
fwait
das
les
orl
cmp
sbb
mov
popf
jns
dec
lods
repnz
or
fdivr
sub
rcrl
fnsave
mov
xchg
in
vpaddw
mov
imul
movsl
mov
push
cltd
lods
adc
pop
cli
pop
pop
sarb
and
or
out
popf
fwait
rcr
enter
aaa
xlat
jecxz
cmpb
cmp
xor
jb
add
lret
aas
jb
subb
lret
out
add
sub
iret
pushf
pusha
aam
decb
adc
mov
repz
xor
push
rorb
xor
adc
lcall
lret
sub
pop
sar
std
sbb
inc
dec
xor
pop
dec
je
xchg
aad
cli
add
mov
mov
add
scas
out
mov
and
pop
jb
out
dec
or
push
das
test
pop
sbb
pop
scas
mov
xor
xor
sub
sbb
popf
sub
xchg
sbb
push
enter
jnp
or
xchg
nop
push
xor
cmp
jp
mov
pop
nop
pop
addb
ret
or
icebp
ucomiss
or
mov
fwait
or
jecxz
divl
sbb
fsubr
pop
scas
jno
dec
sub
setl
fs
mov
inc
lock
sbb
mov
and
inc
in
and
lret
mull
insb
jns
and
gs
add
adc
in
test
sub
add
jmp
into
call
adc
lahf
adcb
lods
ret
std
add
aaa
out
mov
lods
bound
imul
pop
push
sbb
mov
sub
lock
out
aas
mov
mov
and
lods
adcb
cmpsl
dec
ja
cmp
push
cmp
mull
or
sub
in
xchg
ret
inc
scas
rcrb
dec
xchg
xchg
call
dec
jmp
or
cmp
int3
in
mov
xchg
insl
cmp
cmpl
es
lock
stos
push
mov
ret
mov
jle
js
inc
push
bound
mov
jb
loopne
clc
lods
dec
insl
and
fbld
sbb
mov
in
inc
push
or
aas
mov
imul
dec
dec
pop
das
addr16
iret
jge
cmp
imul
ret
sbb
inc
push
xor
in
in
inc
popf
addl
pop
inc
movsl
or
ror
insb
testb
insb
pop
out
mov
dec
insl
repnz
hlt
imul
lods
sbb
outsl
mov
out
jecxz
roll
pop
imul
dec
shll
dec
xor
js
xor
push
add
push
adc
ljmp
mov
push
mov
out
jmp
sub
shll
icebp
lahf
cmp
add
pop
insl
and
cmp
lea
inc
imul
pop
push
mov
jge
adc
lea
jg
outsl
or
mov
faddl
inc
push
insw
xor
inc
mov
xchg
daa
dec
aas
lock
or
push
bound
cmp
in
fstl
mov
pop
push
fdivr
stos
cld
std
lock
fucomp
nop
cmp
sub
jle
pushw
jge
dec
or
add
pushf
pop
cmc
jnp
roll
push
pop
mov
push
mov
mov
inc
push
ss
jp
add
icebp
scas
fsubl
lds
es
sub
pop
adc
jno
mov
in
pop
icebp
pop
cmp
mov
les
fcoml
rorb
test
jo
sbb
ret
sub
cs
movsb
jg
jae
in
ficoms
ret
leave
insl
cmp
in
movsl
push
fsubr
dec
lock
mov
lock
int3
into
xor
or
lock
dec
paddb
daa
inc
inc
mov
mov
dec
out
jbe
pop
outsl
outsl
mov
mov
dec
or
cli
scas
fisubs
int3
faddl
sti
orb
push
xchg
cmp
xor
push
jp
enter
pop
imul
lods
push
in
lds
cmc
jmp
fbstp
jnp
lret
add
call
mov
int3
push
negb
or
sbb
imul
int3
pop
in
jg
xor
jae
movsl
cld
test
aas
in
cli
in
push
icebp
xchg
dec
mov
cltd
push
jge
and
jp
sub
out
pusha
dec
fucomip
lret
sub
sub
movsl
lock
pop
pop
out
xchg
push
cs
cmpsl
xor
fs
lret
rorl
inc
sarl
jg
inc
push
ljmp
lret
frstor
jb
mov
outsl
mov
push
stos
fwait
lret
pop
push
test
aas
shlb
orw
mov
ret
cmpb
add
out
adc
std
sub
inc
out
iret
mov
and
xlat
fimull
aas
and
xor
mov
call
dec
mov
cltd
inc
add
ret
andb
cmp
push
dec
in
orb
std
ficomps
or
sub
mov
cmpsb
sub
shll
adc
dec
ret
in
and
mov
addb
push
fwait
repnz
in
xchg
arpl
xor
pop
lods
mov
lock
lods
pushf
out
int
das
ret
jge
std
test
ror
jmp
mov
or
cmp
dec
shll
repnz
dec
lret
dec
cli
jne
sub
mov
dec
insl
add
push
hlt
xor
stos
sti
xor
fdivl
repnz
lret
cs
xor
mov
in
mov
gs
pushf
cli
jb
subb
push
xlat
popf
push
outsl
mov
std
ja
jge
pop
lods
into
pop
mov
pop
push
fbld
dec
out
stc
add
call
adc
xchg
test
xorl
mov
jo
adc
or
repz
jle
sbb
jmp
insb
dec
xorl
repz
xchg
pushf
flds
loop
stos
cli
and
out
mov
sub
and
sbbl
add
lods
stos
xor
cmp
xchg
or
mov
cmp
xor
xlat
mov
imul
test
add
adc
jno
out
cltd
adcb
or
es
hlt
aad
sbb
lahf
jo
addl
mov
adc
aaa
adc
and
leave
mov
cli
in
sbb
xor
pop
imul
mov
in
cmpb
shrl
push
push
adc
sti
cmp
lret
mov
cmp
das
jg
dec
out
repnz
outsb
int3
dec
fdivrl
mov
insl
sub
fimull
scas
mov
mov
out
push
das
into
ljmp
cmc
out
mov
lret
imul
in
cmp
divb
cmp
out
or
sbb
adc
sub
mov
mov
mov
jae
jmp
jb
in
mov
xor
xchg
ja
pop
cmp
jno
sti
shr
ds
push
iret
mov
pop
pop
xlat
cmpsl
in
repnz
repz
lahf
sub
out
aam
fisubrs
sub
pop
mov
popa
dec
push
lods
cmc
jmp
jae
adc
cmp
push
call
test
pop
stc
mov
mov
cli
sbb
test
or
out
mov
jle
lods
popa
out
and
ds
jae
int
push
add
lcall
sub
scas
sbb
test
js
pop
and
add
clc
int3
or
xor
std
jmp
sarl
sub
fs
les
ja
ret
stc
in
shlb
dec
push
dec
xchg
repz
scas
jae
cmp
shll
stos
in
gs
adc
jmp
cmc
hlt
stos
sub
inc
in
stos
out
sub
mov
cld
mov
pand
cltd
xchg
jg
les
bound
inc
mov
les
lock
dec
pop
movsl
ds
dec
push
inc
pop
je
and
and
hlt
xchg
sbb
imul
mov
cmp
das
pop
cmc
mov
ss
ljmp
insl
sub
stos
jl
loop
insl
lods
out
loopne
mov
xor
in
mov
into
jg
out
ljmp
sahf
lods
cmc
std
add
data16
movsl
fs
pop
push
cmp
imul
ljmp
in
iret
xchg
xor
out
inc
cmp
cld
call
popa
xor
outsl
sarl
sub
testl
mov
into
cli
imull
add
mov
push
pop
fucomp
into
shl
jo
or
add
cmc
dec
xlat
das
dec
cmp
inc
lea
testl
xor
cmp
fldenv
lods
jnp
jecxz
shr
mov
test
dec
sub
push
stc
lods
add
mov
pop
adc
in
in
and
pop
lcall
data16
mov
pushf
push
push
icebp
fdivl
mov
jbe
subb
add
xchg
mov
pop
fmulp
insl
and
pop
cmpsl
int
inc
fs
add
psrlw
dec
pop
fisttpll
push
es
shll
jmp
mov
pusha
sbb
sbb
adc
jle
pop
jnp
and
loop
es
int
xchg
and
lret
xor
pop
les
icebp
mov
push
dec
jl
mov
mov
subb
dec
or
je
mov
jno
test
daa
adc
mov
dec
and
pop
push
ljmp
mov
mov
mov
and
or
in
out
sbb
mov
and
inc
mov
mov
inc
icebp
aaa
mov
nop
add
out
inc
pop
loope
jns
fisubl
adc
lret
cwtl
pop
ret
sub
out
into
faddl
popa
and
mov
sub
fadds
pop
cmc
jle
stos
cmc
mov
ret
aad
pop
addr16
icebp
movsl
cwtl
sub
push
mov
ret
shr
andb
iret
mov
into
xor
rorl
aas
repz
outsl
cwtl
xchg
cmp
inc
mov
cltd
push
lret
test
sti
out
add
and
push
xchg
stos
stos
test
or
and
xor
cli
mov
dec
dec
nop
lods
push
es
out
push
out
xor
mov
dec
adc
dec
rorb
lret
popa
mov
fucom
sbb
mov
mov
jno
xor
ljmp
sub
test
lods
out
dec
mov
lahf
mov
inc
jmp
aas
lods
movsl
out
mov
dec
sbb
loopne
loope
lcall
out
leave
add
cmp
out
inc
shrb
mov
ret
add
mov
dec
and
js
ss
shlb
dec
clc
mov
ds
jae
call
pop
cmpsb
xchg
bound
mov
daa
popf
jecxz
push
mov
daa
ljmp
out
repnz
mov
ret
mov
dec
movsb
or
lock
pop
and
push
idiv
push
stc
cmc
clc
sub
in
cltd
sub
jae
stos
cmovo
dec
aas
dec
fwait
jnp
std
iret
or
inc
wbinvd
cmp
sub
outsb
sbb
ljmp
dec
cmpsl
xchg
repnz
out
add
mov
inc
das
in
dec
test
fsubr
es
pop
negl
stos
out
mov
addr16
lock
push
cs
mov
ret
cmp
popf
pop
bnd
sbb
mov
inc
pop
mov
sub
popa
dec
mov
cld
lods
int3
cmp
ss
imul
mov
ret
shlb
fisubl
aas
xchg
adc
mov
cmp
inc
ret
cld
mov
out
or
cwtl
aas
in
jg
mov
mov
dec
pop
in
icebp
jae
dec
or
in
es
pop
pop
xchg
mov
fmull
sbb
stc
jnp
lock
sbb
mov
dec
mov
pop
mov
or
mov
sbb
cmpsb
and
cmp
add
dec
cmp
sub
in
test
mov
push
repz
pop
mov
jmp
jns
movsl
rcrb
and
and
and
jle
out
and
daa
mov
in
and
gs
out
dec
lcall
cld
xchg
repz
jmp
mov
or
clc
cmpl
cmpsb
pop
or
outsb
int
or
ljmp
mov
out
pusha
and
das
outsb
and
mov
dec
insb
pop
ficomps
or
out
shlb
xchg
out
imul
scas
mov
out
dec
cmpsl
stc
aaa
subl
mov
aas
mov
jo
out
jl
or
mov
out
pop
lea
shll
add
mov
lods
pxor
repz
fimull
adc
pop
xchg
or
or
adc
icebp
adc
and
mov
fwait
inc
sub
inc
sbb
sbb
xor
pop
jmp
push
cmp
cs
cwtl
dec
cmpsl
adc
rep
mov
add
mov
popf
push
arpl
rcrb
inc
push
xor
movups
jge
out
inc
push
lock
xor
pslld
add
ja
push
cli
cmc
jb,pt
loope
int3
add
shlb
divl
rolb
popf
leave
nop
sbb
imull
imul
outsl
int3
pushf
in
stos
dec
dec
pop
mov
movsl
push
hlt
sbb
mov
push
dec
mov
xor
sbb
sarb
sti
aam
sbb
dec
adc
xor
stos
and
dec
arpl
jg
or
arpl
lcall
add
aas
xor
outsl
pop
pop
aas
divl
jl
xchg
mov
cld
or
inc
sti
and
dec
cmp
std
jns
negl
negl
test
jno
mov
mov
subl
and
mov
dec
xor
xor
clc
pop
lock
mov
sub
lds
adc
push
fwait
fs
xor
adc
xor
push
adcl
add
xor
imul
cmp
mov
sbb
xor
xchg
out
stc
mov
repz
out
cmp
add
mov
and
in
ja
jae
adc
scas
and
push
sbb
out
push
cmp
jl
mov
xor
scas
and
ja
cmp
popf
mov
sbb
xchg
xor
repnz
mov
sbb
mov
adc
or
jae
or
sub
add
and
mov
mov
and
jno
stc
jae
mov
xor
add
out
mov
mov
movb
and
adc
sahf
xor
add
decb
maskmovq
testl
jo
inc
lcall
mov
lahf
xchg
addl
pushf
in
sub
mov
and
pop
icebp
into
fdivrl
inc
lock
mov
mov
into
push
mov
pop
pop
jge
mov
fisubl
shl
mov
pushf
movsl
jbe
dec
and
out
xor
das
ss
inc
sub
cmp
mov
inc
pop
push
pop
jne
inc
movsl
push
nopl
out
fldl
cmc
orb
jg
or
out
iret
mov
sbb
mov
int
out
mov
lcall
test
divl
das
dec
std
in
test
repz
mov
repz
push
cmpl
divb
sbb
adc
gs
xor
lock
int3
xor
std
rorl
mov
in
cmp
stc
pushf
sub
gs
xor
movsb
mov
in
cmp
inc
outsl
dec
hlt
insb
cltd
xchg
inc
mov
pop
mov
jae
stc
daa
mull
addb
and
pop
mov
mov
cmp
out
jnp
and
xor
test
mov
jmp
clc
mov
cmc
ljmp
dec
pop
daa
test
mov
mull
and
pushf
arpl
das
jne
jne
xor
adc
sub
gs
icebp
fimull
fcoms
mov
out
sub
repnz
in
or
int3
jge
xchg
cmp
int3
cld
cld
stc
jae
xor
xor
xor
or
lea
inc
inc
in
std
mov
xlat
aaa
sub
cmp
or
cmc
jae
pop
sub
add
rclb
dec
inc
dec
sti
test
mov
mov
and
or
inc
pop
sub
outsl
insb
dec
ffree
ss
or
out
sub
and
mov
mov
push
inc
dec
fstl
mov
dec
ds
divl
pop
sahf
fucomip
addr16
in
push
mov
mov
xchg
jge
scas
adc
xor
adc
mov
mov
pushf
into
mov
ss
sub
cli
dec
cmpl
sub
es
shrl
ja
mov
jle
lds
jp
dec
add
add
mov
and
cld
inc
cli
rorb
mov
push
loope
int3
call
sarl
jecxz
push
xchg
loope
in
dec
mov
push
inc
xor
shll
gs
ds
data16
loope
in
xor
and
imul
sbb
cmp
or
xchg
pusha
shrb
and
push
imul
dec
aad
inc
sbb
xor
xchg
lock
push
aad
add
adc
sbb
push
test
cwtl
mov
jnp
bound
pushf
xor
das
into
icebp
add
or
cmp
lahf
hlt
in
cld
jmp
stc
and
push
xchg
cld
lods
mov
or
shr
adc
xor
mov
outsl
cmp
mov
enter
adc
jnp
rcrl
stc
in
push
das
mov
fcom
cmp
scas
mov
movaps
test
xchg
push
mov
cmpsb
jne
jnp
orl
scas
roll
out
insb
pop
pop
gs
in
mov
outsl
cmpsl
out
es
or
push
inc
push
stc
lea
ljmp
shlb
test
cwtl
insb
inc
fisttpll
jecxz
mov
inc
pushf
mov
xor
sbb
sbb
shll
outsl
repnz
jge
sub
sbb
inc
dec
xor
pop
sar
sbb
push
jp
outsl
rcll
js
jl
xor
adc
or
pop
clc
aas
insb
mov
mov
push
dec
scas
add
xor
adc
mov
subb
clc
and
ljmp
rcrb
dec
addr16
leave
ret
sub
leave
test
int
subl
fldt
xchg
inc
rcll
push
pop
pop
xor
dec
hlt
mov
inc
cmp
dec
pushf
add
out
jle
shll
repnz
out
lret
inc
pop
sub
mov
ds
aaa
mov
jo
test
sbb
jae
mov
lahf
dec
add
or
jns
roll
jnp
test
jg
out
mov
push
gs
cmpsl
cmp
in
outsb
cwtl
add
hlt
lea
sub
and
mov
ds
aaa
bound
pop
mov
stc
outsl
popf
pop
sbb
shl
jle
sub
inc
cmp
sub
jbe
jbe
cld
mov
xlat
insb
daa
into
mov
dec
jmp
in
outsb
fsubrs
xchg
out
mov
push
std
out
gs
popa
lods
pushf
push
jg
add
fwait
and
pop
sub
xor
xlat
std
idiv
sbb
shrb
aas
jg
icebp
in
gs
popf
cmpb
xor
jae
add
jo
lock
std
imul
mov
sti
jae
mov
mov
lcall
testl
rcl
aaa
sub
out
daa
popa
mov
cmp
sub
hlt
aaa
imul
fwait
and
out
push
in
pop
sbb
mul
into
xchg
xor
sbb
sbb
insb
xor
or
cmp
fstpl
rcrl
out
jne
repz
jecxz
out
out
test
repnz
mov
or
jo
cltd
dec
outsl
dec
in
sub
mov
and
mov
jae
das
mov
sbb
cli
mov
mov
jmp
test
stos
decl
gs
imul
in
inc
mov
bound
in
sarb
loope
sub
mov
daa
jle
bswap
in
int3
mov
sub
dec
hlt
stc
add
xchg
dec
gs
or
mov
ds
or
lds
roll
out
jle
lret
dec
insl
mov
push
cmp
addr16
jne
shrl
ret
lods
mov
test
mov
arpl
leave
das
into
cli
lret
ss
mov
jo
lock
push
out
jnp
loope
jmp
orb
mov
rolb
mulb
ret
mov
jo
mov
icebp
add
stc
and
xor
mov
test
cli
and
sbb
push
sub
into
dec
inc
sub
scas
test
imul
mov
call
into
in
aad
stc
test
inc
sbb
repnz
push
cld
incl
and
aam
es
dec
xchg
aas
jae
xor
xor
jnp
hlt
push
in
out
xchg
imul
add
lds
shl
cmp
cli
mov
and
imul
out
imull
es
lods
cmpl
in
dec
dec
push
lret
das
in
sbb
je
cmp
mov
xor
cld
jb
jl
mov
sub
cld
or
or
outsl
add
or
jae
adcl
insb
into
sub
xor
hlt
cmpsl
cld
mov
out
outsb
dec
js
das
cld
sub
adc
jne
sbb
cmp
mov
sti
vprotb
jbe
lds
and
mov
out
pop
mov
and
dec
das
test
push
xchg
mov
insl
xlat
inc
mov
inc
cmp
xchg
aam
cmp
mov
sarb
int
inc
add
xchg
divb
mov
jae
out
idiv
sbb
stc
aas
cmp
add
stos
add
stc
fdivr
mov
mov
sbb
add
movups
push
lcall
fdivrl
xor
repz
test
jge
jmp
loopne
arpl
mov
jle
repz
pop
dec
in
int3
lcall
in
cmpsb
leave
cwtl
push
stos
pop
in
in
pop
repz
jmp
stos
fdivr
jbe
sarb
xor
sbb
mov
mov
cmpsl
movsl
mov
mov
lcall
addl
xchg
and
mov
xlat
jo
xchg
pop
mov
push
insb
or
mov
pop
xor
popa
add
cmp
pop
out
mov
dec
and
cmp
sub
iret
push
pop
adc
leave
sbb
dec
dec
ds
imul
and
jo
movsb
loope
add
outsl
sub
insb
out
xor
pop
pop
test
pop
loop
add
pop
mov
mov
inc
adc
dec
pcmpeqw
cli
push
out
jl
mov
ss
loope
inc
cli
es
aam
gs
std
mov
addl
jae
shll
sbb
sbb
das
shll
int
dec
outsl
xchg
inc
insb
fcomi
jne
sbb
xchg
pop
mov
das
test
sub
jno
test
dec
xor
icebp
cmp
stc
jno
pop
mov
dec
fsts
stos
cmp
adc
popa
pop
stos
jle
dec
int
addr16
aad
scas
dec
dec
clc
push
jl
push
mov
dec
out
call
imulb
cmpsb
mov
paddsw
cli
psrld
loop
out
pop
ja
sbb
loop
add
das
into
out
xchg
ja
std
scas
shll
xlat
xor
ja
shll
shl
sti
or
pop
pop
mov
adc
mov
arpl
lods
scas
mov
iret
and
in
jb
pop
xor
ret
inc
mov
push
pop
jns
outsl
inc
push
mov
inc
je
or
xchg
imul
dec
cmp
mov
lock
out
cmc
pop
add
pop
and
aaa
and
lock
inc
sbb
or
jnp
cmc
sbb
and
out
jg
sarl
sti
adc
add
mov
pop
and
mov
in
or
dec
add
int3
cli
fists
and
mov
jne
sbb
dec
cmp
inc
in
xor
fnsave
or
sub
mov
ljmp
mov
sub
dec
adc
inc
icebp
dec
sti
inc
mov
mov
sub
movsl
xchg
jp
dec
sbb
pushf
xchg
mov
sbb
pop
sbb
add
ja
or
or
add
scas
or
in
jae
repz
lods
ss
mov
xlat
add
xor
and
cmp
sbb
adc
push
les
and
jo
mov
jns
pop
xchg
sbbl
das
inc
or
push
sarb
sbb
es
add
lcall
lret
hlt
and
jae
add
jae
dec
add
enter
xor
jnp
jg
mov
mov
push
dec
mov
sub
mov
rorl
fcoms
cmc
mov
jns
pop
mov
loopne
push
xchg
and
and
add
divb
pop
movsb
jns
cwtl
pop
add
in
pop
outsl
xor
cld
in
and
js
das
cmp
or
hlt
aas
les
jg
scas
sbb
cmp
shll
cmp
stos
adc
lock
and
movsl
cltd
xor
mov
dec
add
bound
addr16
in
mov
mov
xchg
xchg
ljmp
into
outsb
jg
ja
mov
cwtl
jl
sub
dec
push
loope
dec
mov
lahf
inc
es
pop
or
adc
dec
rorb
push
test
pop
jno
add
dec
repnz
in
mov
cmp
and
popf
xor
sub
jge
in
scas
test
lcall
add
lea
jl
adc
adc
sarl
insl
in
ficomps
int
push
negb
push
jmp
xor
cmp
mov
mov
rclb
inc
add
jo
out
sub
cmp
cmp
add
dec
adc
std
jg
pop
stc
jb
push
fs
test
inc
psrld
adcb
adcb
cmp
mull
rorl
cld
idivl
rol
std
jnp
cli
mov
std
shlb
fsubrl
xchg
hlt
jle
push
mov
fs
jo
sub
and
clc
xlat
sbbb
push
xchg
mov
push
nop
dec
dec
cld
sub
jnp
ljmp
fwait
dec
add
leave
mov
ljmp
mov
adc
out
jle
lcall
mov
iret
out
mov
popf
mov
mov
outsl
test
push
push
lea
pop
sub
outsl
mov
loopne
inc
sbb
dec
mov
jecxz
push
pop
lods
mov
pshufw
and
into
les
rorl
xor
sbb
loopne
clc
jb
xor
lcall
and
fnstcw
or
call
stos
cmp
sbb
adc
adc
xor
sbb
and
jno
aas
jmp
xor
inc
xchg
pop
cmpsl
in
xor
adcb
mov
mov
jmp
das
arpl
pop
lcall
ljmp
xchg
add
imul
call
sub
add
int3
cli
xchg
pop
xchg
pushf
push
lods
orb
insl
std
adc
lret
call
xor
ja
lea
repz
cltd
add
arpl
repz
mov
test
mov
and
inc
jecxz
jnp
outsl
cmp
jge
sbb
cli
xadd
out
add
ror
cmpsb
lods
dec
fnstsw
ljmp
dec
subl
or
pop
sbb
aas
xchg
cmp
cmp
icebp
scas
clc
mov
fnstsw
mulb
xchg
outsl
sbb
jnp
jnp
or
stos
icebp
ret
or
add
bound
sbb
call
adc
rcl
insb
jb
and
sbbl
mov
pushf
dec
xor
jl
xor
push
mov
imul
and
insl
or
ret
daa
xor
scas
adc
push
xor
imull
or
repnz
xor
stc
push
cmp
rolb
push
das
push
jnp
push
jo
adc
lods
out
ret
stos
ja
mov
out
or
mov
enter
mov
call
jle
pop
fstl
roll
imul
mov
shlb
in
shl
fdiv
inc
push
pop
lret
mov
int3
dec
xchg
out
xchg
pop
fistpl
jnp
xor
movsl
cmpsl
xor
jo
mov
cmp
cmpsl
pop
dec
inc
in
lea
stos
popf
test
mov
ja
mov
pop
adcb
icebp
mov
push
cld
lods
cld
or
ret
aaa
cmc
fbld
sti
repz
inc
mov
sub
mov
mov
jmp
xchg
inc
mov
push
imul
jl
jae
test
mov
pop
sarb
cmpl
imul
roll
xorb
or
lods
shrl
lea
jnp
mov
das
jg
in
dec
sbbl
js
push
pop
sbb
aas
int
cmp
or
fsub
sbb
test
push
nop
sub
insb
pop
sbb
rorl
cmp
out
es
pop
addb
push
dec
mov
xlat
mov
lcall
jmp
sub
adc
lahf
movsl
sub
cmp
in
cwtl
xchg
dec
sbb
xlat
xchg
xor
aas
out
jo
mov
icebp
je
push
ljmp
cli
aad
inc
adc
inc
ljmp
nop
gs
negl
mov
in
add
sbb
ds
push
cli
in
xchg
xchg
arpl
into
fildll
jg
into
jecxz
pop
into
repnz
adc
push
dec
sbb
xor
pop
icebp
fisttpll
sbb
aaa
xchg
lret
sbb
pushf
cli
dec
ljmp
fadd
dec
jns
push
sti
adc
lcall
addr16
jae
pop
pop
les
xor
popf
addr16
negb
mov
gs
dec
jbe
gs
xor
cmp
jg
jmp
dec
mov
sub
ret
xor
aam
mov
sub
cmp
addr16
cmpsb
adc
push
add
out
jg
das
push
rorb
inc
xor
loopne
out
mov
movd
sub
mov
mov
pop
rolb
pop
outsl
jecxz
pop
push
dec
ds
jb
lahf
jle
pop
mov
mov
mov
add
stos
dec
hlt
mov
add
lea
cmpsb
std
mov
out
rorl
out
std
xchg
leave
shrb
cmp
and
ja
dec
or
dec
pop
ss
push
push
popf
mov
lods
mov
ljmp
data16
and
cmp
popf
xchg
das
lcall
sbb
jge
cmpsl
add
addb
lret
rcl
push
adc
leave
jo
in
outsl
loope
movsb
mov
pop
addr16
add
mov
inc
out
xlat
hlt
push
sbb
mov
fldcw
add
inc
jno
mov
mov
sub
dec
neg
popf
cwtl
pusha
cmc
lret
and
lcall
jb
repz
test
in
std
rcrb
pop
mov
inc
addr16
jg
fidivrl
cmp
sub
ficoms
enter
orb
push
mov
pop
clc
xor
jge
insl
outsb
sbb
xor
pop
jmp
ret
ret
andps
or
ja
fcmovne
fnstenv
inc
bnd
adc
adc
push
xchg
xlat
in
lcall
testl
cli
xor
scas
out
mov
cltd
dec
std
or
sub
testb
aas
jp
iret
xchg
dec
mov
pop
pop
mov
xor
xor
add
or
xor
lock
jl
ja
jle
cmpsb
cmpl
fbstp
mov
stos
jg
fsubr
inc
lret
inc
repnz
cmp
add
lcall
mov
int3
stos
js
insb
mov
clc
outsl
mov
and
loop
jnp
aaa
push
mov
dec
lock
testl
push
adcb
xlat
gs
xor
in
fwait
in
cmc
sti
mov
into
cmp
jns
mov
shr
es
mov
dec
adc
adc
push
je
mov
dec
popl
jne
dec
lods
loope
rolb
pop
fs
xchg
test
rclb
pushf
or
movsl
pop
lock
test
jae
push
xlat
cmp
dec
add
outsl
xchg
clc
ds
subb
dec
nop
cmpb
inc
repnz
push
add
int3
pop
icebp
mov
sbb
jae
or
icebp
call
test
add
subl
sti
inc
push
cmpsl
add
pusha
mov
jae
mov
les
dec
imul
mov
mov
out
sti
sub
jmp
add
enter
out
imul
cmc
mov
cwtl
rorb
mov
xor
add
pop
mov
aam
ret
xchg
outsl
test
pop
test
xor
jmp
shld
jne
push
add
add
in
in
and
cmpsl
add
addr16
rcrb
add
sbb
repnz
lock
sub
mov
jnp
adc
sub
cld
in
gs
adc
cmpsb
sbb
xchg
inc
xor
in
addl
jne
jo
add
adc
mov
ret
mov
or
dec
cltd
out
push
lcall
add
xlat
gs
fisttps
push
mov
mov
iret
mov
mov
cld
in
or
out
sbb
in
scas
sub
lret
iret
add
push
pop
dec
ja
jle
ficoms
enter
out
addb
push
xchg
push
subb
fnstcw
ds
int3
jbe
sub
lret
aas
cwtl
shlb
aaa
nop
pop
add
jnp
xor
adc
mov
dec
scas
shll
xor
mov
mull
add
dec
jg
dec
lock
outsl
daa
cmp
popf
sub
popf
pop
dec
fwait
das
aad
dec
mov
js
xlat
xchg
std
js
hlt
dec
aas
adc
les
mov
andb
addl
lock
sbb
loopne
xor
pop
in
rorl
jecxz
pop
mov
lahf
push
cmp
cltd
mov
inc
or
cmp
sub
lods
icebp
cmp
scas
lock
jbe
inc
sbb
adc
addr16
mov
jle
cmp
push
aaa
in
adc
dec
and
xchg
sbb
pop
and
gs
stc
std
sub
sub
pop
negl
inc
mov
adc
fldenv
mov
mov
js
add
mov
or
mov
dec
subb
xor
mov
imul
mov
pop
inc
mov
or
pop
adc
lods
rclb
xor
lods
les
jle
jne
adcb
and
xor
jle
rclb
in
ja
sti
dec
rcr
mov
movsl
xchg
xchg
xor
imul
dec
in
adc
jae
stc
adc
scas
sti
adc
mov
push
mov
push
sbbb
jnp
fwait
sub
push
mov
test
adcb
aas
fdivl
sub
ja
popa
and
das
dec
int
insb
sbb
stos
push
jbe
sbb
daa
mov
daa
and
test
mov
push
sbb
dec
or
jmp
inc
jp
dec
adc
jl
jg
leave
xchg
hlt
stos
jecxz
cmp
dec
std
cs
and
lods
lea
sbbl
idivl
pushl
xlat
idiv
repnz
insl
std
mov
and
mov
inc
push
lret
hlt
aas
adcb
das
adc
pop
movsl
imul
inc
or
push
out
mov
add
or
lahf
mov
fcoms
cmp
jo
std
cmp
popa
dec
sub
jnp
imul
lock
xadd
and
dec
push
push
or
test
jnp
stos
into
das
pop
inc
fldcw
mov
rorl
shrb
idivb
add
movsl
clc
or
scas
xor
int
data16
outsl
cltd
jg
mov
ret
xchg
ja
aas
test
adc
jae
rcl
aam
shrd
jl
push
aaa
out
int
in
and
or
loope
and
xor
dec
es
pop
pop
clc
push
clc
mov
cmpsb
ror
push
or
add
mov
pop
or
clc
inc
sub
xchg
dec
adc
and
pop
imul
out
scas
or
or
cmc
lcall
arpl
jno
out
pusha
out
out
add
sub
dec
stos
test
lds
pop
mov
int3
adc
add
test
aaa
addl
xchg
mov
shl
mov
sar
xor
add
sbb
in
push
adc
pop
je
mov
mov
push
dec
sub
fisttpll
in
add
arpl
pushl
lock
or
mov
test
sub
arpl
into
pushf
sbb
pop
mov
push
in
mov
clc
std
shl
push
in
mov
out
jbe
movsb
add
jle
popa
mov
xor
incl
dec
cmc
out
push
in
in
popf
xor
imul
sbbl
mov
pop
jmp
sub
pop
stos
out
mov
push
loope
or
sbb
or
mov
sub
adc
sub
jo
dec
leave
fs
out
jg
out
jbe
pop
add
shrl
stos
mov
adcb
stc
repz
xor
pop
sbb
add
int3
inc
push
movsb
scas
je
ret
dec
aad
pop
push
out
push
dec
cs
sub
mov
stos
xchg
ret
dec
testl
xchg
sub
test
mov
mov
or
cmpsl
ret
test
jle
mov
push
mov
and
into
jo
ret
inc
aad
jns
dec
scas
sub
mov
xlat
fnstsw
push
mov
lods
pop
cmpsl
sub
mov
sbb
stos
cli
movsb
dec
gs
jbe
sub
adc
das
arpl
outsb
and
repz
add
xor
inc
xlat
pop
jge
scas
sbb
stos
adc
dec
imul
out
leave
out
pushf
leave
cli
jns
cli
in
out
aas
sub
repz
outsl
sub
cmp
pushf
lcall
out
pop
sbb
in
xlat
test
cmp
push
xor
mov
shll
cmpsb
rcll
out
sub
sti
mov
sub
push
push
cltd
and
repnz
pop
dec
ds
test
sub
mov
mov
jae
jecxz
and
scas
jae
dec
int3
hlt
pop
out
and
insb
or
push
in
cli
lret
imul
int3
xor
div
jge
aam
sbb
and
push
mov
sub
stc
cmpsl
inc
je
inc
and
loopne
xor
and
dec
pop
inc
and
dec
ss
jmp
decb
lret
jae
sbb
movsl
rcr
fimull
jge
xor
nop
add
gs
xchg
ja
or
xchg
cmp
int3
and
pushf
adc
lcall
rorb
daa
or
push
scas
push
sub
xor
test
xor
xchg
xchg
int3
mov
outsb
es
sbb
jg
out
pop
cwtl
enter
sbb
stc
mov
pop
push
sub
and
lret
rcrl
daa
pushf
mov
lret
lds
xor
fwait
js
lods
out
mov
sti
insl
decl
jbe
add
hlt
dec
pop
cmp
adc
aam
movsl
cld
xor
out
stos
cld
jp
mov
or
repz
jl
je
jne
lods
das
push
je
clc
lods
cld
ds
xlat
andl
cltd
adc
dec
mov
sub
je
adc
fidivrs
dec
inc
sbb
dec
rorb
movsb
xor
lahf
mov
dec
cld
mov
and
dec
dec
int
testb
out
out
jg
mov
lock
in
pop
gs
sbb
cmp
xchg
lret
std
xlat
jmp
out
push
outsb
out
cmp
lahf
jo
and
sub
pop
dec
in
imul
jae
mov
lods
pop
pop
push
jo
test
gs
cs
mov
dec
xor
adc
enter
aas
imul
inc
lock
lcall
hlt
sbb
inc
add
fidivrs
aas
out
and
mov
pop
lahf
scas
ret
dec
add
pop
mov
adcb
stos
pop
mov
mov
inc
jne
dec
inc
mov
jp
lods
mov
add
icebp
sub
in
push
lea
outsl
mov
adc
nop
call
or
push
repnz
sub
or
jge
xchg
or
icebp
or
adc
add
dec
outsl
out
and
jno
out
pop
mov
xchg
imul
fisttpll
adc
les
push
ffree
mov
mov
sub
and
mov
stc
lock
inc
adc
cmpsl
andl
out
pop
cwtl
pop
mov
ud2
push
jl
mov
test
movsb
add
jnp
lret
and
dec
pop
pop
xchg
les
lds
scas
xor
adc
fldt
push
insl
add
and
in
pop
das
rcrl
jne
jmp
lret
xchg
ljmp
pop
xchg
adc
mov
dec
add
or
pop
xchg
mov
sub
lods
xor
loopne
mov
and
mov
aam
push
add
dec
jle
xor
sbb
jno
mov
mov
mov
pushf
jmp
out
pop
mov
das
sarl
in
jmp
jnp
pop
mov
es
and
clc
int3
ss
cmp
das
cmp
add
jae
fmull
and
sarl
fsubr
mov
dec
and
xor
pop
jne
dec
out
pop
push
insl
int3
lcall
nop
repnz
scas
mov
add
push
fidivs
sbb
es
jge
call
sar
movsb
dec
shrl
test
shl
and
dec
cmc
or
jnp
jae
pop
or
fcomps
xor
ret
jbe
push
int3
dec
hlt
mov
test
mov
dec
xchg
ret
data16
mov
movsb
adc
in
insl
push
or
and
sti
fidivl
jnp
stos
hlt
mov
push
lock
sarb
dec
outsb
pushl
subb
inc
dec
mov
adc
or
xchg
loopne
xor
popf
ret
mov
adc
mov
and
mov
jg
push
pop
dec
jle
shll
jmp
push
lret
lock
arpl
sbb
in
push
imul
std
int3
sub
stos
mov
cltd
mov
push
scas
lcall
pop
ljmp
mov
pop
add
outsl
add
cmp
cmp
jno
shll
outsb
xor
inc
int3
add
inc
movsb
stc
inc
sbb
xchg
lahf
inc
and
or
decl
test
push
xor
pop
shlb
xor
jp
add
sbb
pop
push
jl
mov
mov
aam
ficomps
movsl
mov
push
cld
pop
mov
push
and
insb
repz
in
subl
std
xchg
mull
insb
imul
mov
lock
sub
xchg
cld
out
cmc
inc
add
sub
repz
ret
inc
mov
mul
jb
fidivs
addb
lret
xlat
adc
scas
sbb
ljmp
mov
sbb
mov
xchg
jb
xor
enter
nop
leave
insb
cvtdq2ps
decl
sub
jae
xor
cmp
andl
mov
pop
and
jmp
sub
jg
pop
mov
dec
mov
rolb
push
out
shrb
es
lea
rolb
in
inc
fcompl
cmpsl
xor
mov
inc
sub
inc
int3
ljmp
outsl
lods
xchg
dec
xchg
or
push
sbb
addl
rcll
sti
enter
push
lock
ljmp
or
sti
divb
mov
fs
jno
in
das
repz
pop
jnp
pop
int
test
or
ljmp
lods
xor
cmpsl
dec
cmc
jno
jae
jns
jl
gs
inc
subb
aad
mov
push
mulb
mov
xchg
negb
cli
jmp
dec
mov
dec
loope
fists
xor
pop
mov
sti
out
sti
es
std
pop
pop
or
xchg
shlb
and
nop
jne
sbb
pop
into
dec
cld
xorb
mov
mov
fidivl
cmc
and
xchg
add
dec
xchg
ja
sti
push
jno
std
inc
ss
mov
stc
mov
daa
xlat
xor
sbb
xor
xor
xor
add
aas
jp
dec
adc
xor
dec
push
stos
int3
mov
out
dec
icebp
dec
insb
xor
pusha
sbb
repz
cmpl
fwait
mov
in
nop
mov
inc
incl
xchg
cmpsb
aad
scas
test
cmp
fsubrl
jbe
jl
rolb
testb
cli
jecxz
jae
icebp
sub
mov
subb
mov
in
scas
aad
js
out
pop
loope
inc
movsb
mov
es
popa
jp
sub
loop
add
fmull
out
shlb
inc
xor
mov
adc
insl
je
dec
pop
call
fistpl
repnz
lods
mov
xor
lock
cmc
pusha
movb
mov
mov
sbbl
daa
or
add
sub
cmpsb
jle
fidivl
jo
clc
lea
push
xchg
nop
adc
ret
outsl
repnz
push
lock
scas
fstpt
xchg
pop
push
mov
rorb
adcb
jno
dec
jno
scas
jp
cmpb
call
cmp
mov
mov
shrb
fdivl
jg
jnp
or
fistl
pusha
mov
sarb
push
dec
jg
aaa
mov
out
xchg
sub
cmc
js
test
out
call
push
std
push
xor
mov
mov
adc
repz
dec
cmc
dec
int
testl
inc
into
pmaddwd
sbb
dec
jno
jl
sti
into
or
loope
jg
inc
fnstenv
cli
aas
arpl
imul
push
out
push
adc
mov
xchg
xchg
insb
cmp
sbb
sub
fwait
jmp
jmp
imul
stc
gs
std
sub
xchg
jmp
mov
mov
gs
sub
push
inc
jle
push
test
pop
movsb
dec
adc
xor
fwait
arpl
jge
add
popf
add
in
outsb
xor
sub
dec
into
xor
mov
sub
cs
add
dec
iret
xor
es
mov
mov
ss
std
pop
or
mov
rcll
int3
cmp
imul
mov
mov
sub
arpl
mov
adc
scas
cmpsb
jle
pop
jne
cmpsl
pop
mov
cmc
jnp
push
fwait
and
imul
imull
rcrb
jo
jmp
stos
add
dec
in
aas
push
sub
fst
mov
inc
push
mov
xlat
popa
mov
in
icebp
or
or
pop
pop
test
out
sbb
xchg
ja
sub
loopne
fwait
icebp
pop
add
or
addr16
dec
das
mov
loopne
lcall
imul
sbb
sub
insb
lods
frstor
icebp
dec
cmp
sti
sbb
jae
cld
push
pop
lea
cld
in
rcrb
fiadds
test
cmp
push
imul
std
cwtl
cmp
dec
add
sarl
pop
test
jne
inc
fdivrp
outsb
pop
pop
push
jp
imul
cmp
add
in
push
mov
cld
dec
mov
cmc
xor
in
add
gs
jmp
das
jg
sub
icebp
mov
outsl
push
out
lods
sbb
sbb
rcl
jp
mov
jmp
scas
incl
xchg
loop
push
and
xor
jg
call
jl
js
mov
adc
in
or
dec
sub
repz
xchg
xor
cs
mov
xchg
sub
sub
or
cli
popa
jno
sub
mov
cmp
push
sti
mov
mov
in
sbb
sub
lret
or
aaa
and
mov
dec
imul
adc
mov
sub
outsb
sub
and
subb
jo
stos
pop
xchg
outsb
xchg
pushf
sahf
icebp
and
jno
test
jle
clc
pop
sbb
jns
sti
pop
or
and
clc
dec
jg
repnz
mov
clc
push
cmpsl
lock
mov
imul
push
jg
adc
xchg
sub
insl
mov
cmp
repnz
out
jbe
inc
std
mov
or
ret
dec
imul
fldl
sarb
add
sub
cmp
sub
push
je
lock
out
sbb
and
xchg
ja
negb
in
stc
adc
sbb
jae
repz
lea
push
jge
pop
lret
int3
andl
iret
xchg
ja
icebp
inc
push
call
and
push
mov
das
add
and
dec
jns
push
leave
push
xchg
jl
dec
in
mov
scas
addr16
jae
call
imul
ret
test
fwait
ror
sub
push
dec
in
push
mov
pushf
into
sti
gs
xor
call
sub
in
cmp
dec
in
dec
mov
and
or
int3
movsb
test
test
lock
sbb
stos
lods
xchg
scas
hlt
imul
lahf
out
dec
lock
cmp
js
add
sbb
sbb
xchg
imul
out
cs
pop
dec
push
sbb
xchg
pop
mov
pop
repz
notl
outsl
jae
jnp
lock
or
pop
addr16
in
mov
outsl
dec
shlb
shll
pop
xor
lods
out
not
ret
sub
in
xor
jb
outsl
add
and
inc
jp
and
cmpsb
push
popf
iret
aaa
mov
jg
test
mov
sbb
ficoms
sbb
mov
stc
gs
sub
adc
das
aam
in
sbbb
fs
or
loop
mov
dec
pop
pop
xchg
pop
jnp
ror
pop
ret
cmp
and
cld
xchg
push
jae
mov
mov
inc
mov
aas
inc
jecxz
fwait
psubq
push
and
pop
fwait
cli
jecxz
mov
add
push
pop
dec
xorb
stc
xor
inc
loope
pop
flds
jno
cwtl
incl
mov
push
and
inc
rcrl
push
dec
or
pop
icebp
sub
outsl
in
push
cli
dec
pop
and
aaa
out
sbb
fstpl
cmp
test
jg
orb
and
mov
or
mov
icebp
imul
mov
inc
in
jecxz
xlat
loope
xor
or
jnp
sbb
jno
jnp
sub
nop
je
roll
lods
repz
mov
mov
aam
gs
cmp
jae
pop
mov
call
mov
adc
call
scas
jne
ret
cmpsb
insb
sbb
loop
push
add
fldenv
hlt
mov
pop
push
imul
add
or
mov
xchg
adc
jae
mov
jle
jo
imul
fmull
xor
clc
pushl
jmp
inc
pop
mov
bnd
xor
out
stos
mov
scas
push
test
mov
das
jae
xor
sti
cmc
sub
call
movq
or
fstp
xor
imul
jo
xchg
repz
xor
dec
les
ret
movsb
ret
cmpsb
xor
imul
sub
aaa
out
and
push
in
push
mov
dec
push
lret
out
pop
scas
out
dec
or
sub
out
pop
lods
lods
out
mov
and
negl
aaa
and
cmp
pushf
mov
lea
cld
mov
cmc
cmp
mov
jg
in
dec
mov
mov
cmp
fstpl
mov
clc
loopne
xor
shl
pushf
add
mov
mov
mov
sub
int3
sbb
arpl
sub
mov
mov
lcall
bound
ficomps
sti
xchg
loopne
shlb
in
divb
shr
std
pop
sub
add
out
add
aaa
jmp
jle
or
stos
dec
jge
and
adc
mov
xor
jge
dec
jb
push
std
idivl
rcl
std
mov
mov
push
mov
adc
mov
mov
cltd
rcll
imul
rorl
adc
test
loop
pop
decb
add
repz
nop
mov
into
adc
pop
int3
jo
int3
push
xor
ds
mov
in
incb
hlt
lret
pop
sub
cmp
outsb
sbb
arpl
dec
in
dec
incb
dec
jg
call
xchg
lds
mov
or
leave
cmp
mov
lahf
adc
insb
mov
xor
add
push
xchg
sub
loopne
or
xor
shlb
test
mov
cmp
icebp
or
mov
stc
xor
rorb
add
or
cli
mov
push
and
cmc
mov
enter
adc
or
push
cmc
mov
add
out
scas
clc
sbb
rol
xor
mov
adc
fcomps
mov
out
sub
push
mov
les
mov
das
inc
dec
xorb
lahf
add
jle
xor
addr16
scas
cmp
hlt
loope
xor
pop
add
cmp
mov
lea
into
sub
xor
inc
mov
inc
jp
fs
mov
loopne
cmp
out
inc
fsub
sbb
call
push
fildl
adc
fcomp
in
call
repnz
out
les
inc
mov
daa
mov
xor
je,pn
and
add
or
ret
arpl
sti
insb
xchg
fsts
addr16
imul
jg
push
inc
xchg
pop
daa
in
pop
sbb
repz
cmp
fadd
in
scas
lods
js
lret
stos
or
jbe
stos
mov
push
jno
or
pop
addb
loop
and
bound
ret
inc
sub
dec
lret
shlb
ja
xor
cmp
enter
xorb
mov
inc
aaa
jnp
dec
push
jnp
arpl
shrb
add
shll
in
add
sbb
and
fcomps
outsl
and
in
push
aas
add
add
inc
xor
gs
lods
arpl
adcl
add
pop
mov
lock
dec
sub
dec
pop
mov
clc
repz
lea
shrd
push
pop
outsb
push
sahf
dec
dec
fbld
jp
out
jbe
xor
jge
ljmp
mov
in
adc
dec
cmc
in
mulb
sbb
test
lcall
cmp
xor
mov
cltd
cmpsl
shl
int
sub
test
call
cmpl
mov
adc
mov
fimull
cld
sti
push
nop
rdpmc
adc
push
sub
or
push
unpcklps
push
cmp
rclb
mov
roll
mov
push
mov
xchg
cmc
lock
xor
pop
incl
mov
mov
outsl
push
cmp
jns
push
xchg
xor
xchg
adc
xorl
gs
push
xor
sub
cmp
mov
icebp
scas
push
dec
mov
push
pop
add
sbb
push
popf
loop
cmp
int3
pushf
in
jl
sub
ficoms
mov
sbb
or
movl
mov
or
sub
push
jnp
push
cmpsl
push
subb
jb
stos
jg
cmpsb
leave
repnz
mov
mov
ret
inc
sub
add
or
cmp
out
lods
sahf
jge
in
xor
cmp
xor
add
cmp
je
mov
or
lods
std
shlb
stc
ja
orb
daa
mov
ljmp
in
test
cltd
outsb
stos
shr
out
xchg
sub
or
je
das
pop
out
imull
icebp
mov
in
add
sbb
add
sbb
fidivrl
cld
out
sub
xor
jae
and
sub
lods
or
xor
int3
fidivl
jae
imul
lods
mov
mov
add
cmp
lea
lods
ja
sbb
scas
das
cmc
jmp
cli
pop
in
and
lahf
mov
fisubrl
jl
jge
mulb
push
jnp
insb
or
add
dec
mov
mov
les
lock
ret
aas
xor
xorl
dec
and
or
jg
xchg
in
adc
xor
scas
bound
dec
sub
dec
jo
stos
outsl
fs
cli
das
dec
adc
or
add
mov
jecxz
pop
testl
xlat
cmp
popf
or
sti
dec
and
add
pusha
cli
negl
mov
roll
add
xchg
mov
or
jmp
popa
or
out
xchg
inc
sub
cmpsb
dec
mov
fcompl
mov
mov
in
sbb
movl
push
add
lock
sti
fbstp
into
mov
sub
into
sbb
hlt
pop
outsb
in
push
int3
mov
pop
sub
cmpsb
iret
dec
jle
push
dec
out
fcmovu
add
js
adc
and
xchg
push
stos
mov
push
shll
mov
mov
cmp
inc
or
mov
insb
push
pop
out
push
mov
loop
cmp
dec
sub
mov
test
sub
jl
sbb
fnstsw
fwait
xor
hlt
insb
out
mov
stos
and
pop
popa
and
insb
notb
imull
stc
and
loopne
add
insb
add
or
mov
mov
or
cmc
or
out
scas
es
insb
or
test
adc
movsb
jmp
and
and
lahf
dec
les
and
stos
iret
or
mov
push
ljmp
xor
jno
jo
mov
xchg
push
fistpl
sti
push
call
mov
mov
out
icebp
jne
jo
clc
xor
add
jae
xor
push
xor
or
xor
xchg
xor
cltd
out
out
lods
xor
dec
int
push
dec
pop
les
iret
cld
rorb
inc
out
cmp
pop
ret
xor
or
mov
sub
xor
jbe
cmp
daa
cmp
jae
psrlq
adc
mov
cmp
xchg
dec
sub
lock
insb
mov
adc
sti
in
jae
stos
imul
mov
jbe
in
ds
sub
ret
and
inc
cmc
imul
mov
dec
sub
testl
jbe
mov
mov
adc
enter
add
xor
pop
dec
fwait
sub
xor
or
add
jbe
xchg
pop
iret
mov
mov
mov
push
es
mov
adc
fcmovbe
shld
aas
jg
adc
jb
push
aas
add
out
mov
or
cli
aam
mov
out
mov
jae
push
lock
fs
mov
mov
jmp
and
arpl
shlb
add
lret
inc
std
mov
int3
and
adc
push
mov
iret
insb
mov
add
mov
test
xor
add
dec
or
imul
shrb
stos
mov
adc
mov
adc
xchg
dec
and
mov
repnz
sub
mov
stos
adc
xor
ljmp
jae
sarb
ja
push
insl
xor
xchg
ja
mov
adc
mov
in
aaa
fdivl
mov
dec
xchg
daa
clc
test
sub
mov
adc
aad
adc
cmp
andl
rolb
lea
xchg
or
test
add
faddl
fidivrl
enter
xorl
dec
std
lret
xchg
jno
or
dec
popf
dec
inc
and
cmpsb
adc
dec
ret
jno
scas
push
jb
xchg
loopne
out
mov
add
jle
push
jp
push
sub
outsl
jl
stos
pop
jae
cld
decl
shrl
push
lods
mov
das
xor
ja
call
mov
out
mov
insb
sub
mov
repz
cmp
and
sbbb
arpl
gs
and
lcall
cli
cmpb
testl
dec
mov
adc
sub
pop
pop
cs
adc
scas
push
pop
fdivp
bound
cltd
mov
mov
add
pushf
js
xlat
mov
pop
inc
adc
cmc
loopne
cs
sub
mull
fwait
imul
xor
neg
jnp
sub
push
sbb
xchg
or
out
out
cwtl
push
xchg
sahf
add
dec
adc
cli
sbb
cmp
pop
imul
mov
fwait
ljmp
sbb
pusha
cltd
push
cmp
sub
addb
xor
int
dec
pop
jb
dec
jo
inc
cld
push
mov
loop
je
sub
dec
insl
out
mov
mov
icebp
lea
dec
sub
clc
in
or
jo
je
in
xor
or
int
mov
imul
subl
pop
cmpsl
adc
add
jge
std
mov
sbb
es
aas
push
jge
cmp
cli
out
adc
and
sub
cmp
xor
cmp
loopne
pop
repz
insb
or
jno
xor
and
lock
das
jo
out
lock
in
mov
pushf
push
adc
pop
mov
daa
cwtl
test
outsl
mov
mov
outsl
ljmp
jbe
cmp
test
add
sbb
std
icebp
mov
leave
mov
lock
inc
cld
addr16
repz
and
std
sub
push
nop
jg
xor
mov
hlt
out
int3
xchg
cld
add
incb
shl
mov
jle
adc
push
mov
fldt
cmp
ss
mov
cltd
cmp
pop
adc
jb
or
jnp
sub
inc
sbb
hlt
mov
lahf
xchg
outsl
lock
dec
add
pop
mov
insl
mov
dec
mov
jno
out
adc
jl
cmp
push
repnz
inc
xchg
mov
test
test
repnz
add
sub
xchg
push
cmp
or
into
jp
in
inc
into
out
daa
bswap
xor
loopne
and
test
pushf
cmpsb
dec
mov
repz
stc
push
adc
mov
mov
in
test
fs
shr
std
push
outsl
cld
pop
daa
jp
pop
mov
outsb
rcll
cmp
outsl
stos
xchg
fistpl
dec
fbstp
cmp
adc
das
push
sub
cmc
out
mov
fiadds
mov
subb
loopne
jmp
jae
repnz
or
lahf
stos
add
cltd
es
repz
insb
addr16
in
cmc
xor
rorb
jnp
scas
cld
addr16
mov
incb
aas
add
mov
shlb
daa
inc
in
add
idiv
push
sbb
cld
or
xchg
icebp
cmp
dec
shrb
int3
imul
jle
sub
mov
cmp
lcall
out
jle
mov
xor
dec
jle
stos
adc
lods
pop
int3
lret
or
lcall
mov
in
sub
or
imul
fs
jno
jno
push
mov
lock
xchg
aad
ret
add
pop
imul
inc
sti
icebp
negl
mov
scas
pop
xchg
jae
mov
sbb
test
stos
mov
xor
dec
dec
push
insl
and
sub
scas
shll
inc
push
and
xchg
add
xor
jae
stos
sub
add
repnz
xchg
fsts
pop
jg
stos
cmc
data16
lods
dec
pop
adc
xlat
mov
xor
andl
sbbl
mov
dec
outsb
imul
sub
lds
notb
sbb
testb
mov
outsl
fistpl
dec
mov
stos
pusha
jp
push
mov
mov
jge
mov
pusha
loopne
mov
fs
lret
add
sbb
dec
xor
bound
sub
dec
sbb
or
add
mov
dec
mov
clc
mov
jns
hlt
dec
cmp
adc
mov
inc
loope
cmpsl
inc
enter
xor
push
scas
aas
cmpl
shrl
out
or
or
dec
mov
mov
lcall
divl
mov
nop
and
inc
in
clc
dec
mov
jle
dec
mov
xor
or
sub
sbb
sbb
mov
dec
xor
or
xlat
aas
jp
and
inc
cmp
mov
imulb
xor
mov
ret
sbb
xchg
mov
adcl
loopne
xchg
xchg
xor
xor
lock
adc
mov
or
pop
lods
cmp
aad
jge
and
imulb
sbb
leave
movsl
lea
sub
jbe
mov
push
repnz
or
xchg
xchg
aam
into
int
push
add
lock
dec
iret
lahf
mov
shll
add
clc
mov
in
adc
mov
or
and
mov
cmp
cld
pop
or
dec
xchg
outsl
pusha
jae
xor
mov
out
xchg
jno
test
cmp
inc
outsl
into
hlt
aam
fimull
out
repz
rep
xor
int
dec
adc
je
push
test
xchg
int
pusha
ret
shrb
sbb
jnp
add
jnp
test
mov
jl
test
aad
add
icebp
push
xchg
xchg
pop
push
jmp
xchg
outsl
iret
jle
inc
add
dec
jb
add
ret
les
adc
add
add
inc
les
or
imul
pmaxub
cmpb
or
mov
or
or
aam
ja
jp
pop
sti
push
insl
mov
out
sbb
xor
sbb
jns
sbb
xlat
xor
inc
and
dec
sub
jae
cld
mov
sbb
popf
std
and
jae
cld
mov
dec
pop
outsl
pop
hlt
mov
repz
xor
cmp
test
out
gs
sbb
xor
jle
roll
add
dec
pop
push
stos
sub
push
enter
adc
insl
xor
jae
or
dec
lock
mov
pop
aad
cmp
out
pop
inc
jne
mov
lods
out
stos
mov
sub
cmp
scas
cmp
dec
jge
mov
mov
fsubrs
push
and
imul
mov
sti
or
jle
rcrb
push
dec
adc
jns
jnp
xor
adc
in
mov
fsts
lods
out
mov
daa
subb
sbb
or
out
add
cmpsl
cmp
jmp
jnp
lock
sub
in
fisubrl
outsb
dec
dec
mov
scas
mov
jb
sub
xor
divl
out
dec
pop
insl
xor
jle
shll
shll
in
insb
cmp
jae
add
or
sub
adc
mov
or
xor
inc
arpl
enter
mov
out
jnp
xor
out
cmp
lods
mov
xor
sub
xchg
aaa
in
inc
bound
popa
enter
dec
in
addr16
mov
jae
pop
sub
lret
and
mov
jno
jno
ljmp
enter
jo
push
stos
xchg
aad
mov
pusha
lock
enter
adc
mov
xor
adc
stos
pop
leave
das
inc
or
inc
mov
jno
loop
or
push
das
or
ret
loopne
clc
repz
mov
imul
shrb
lods
mov
sahf
shr
popf
lret
jp
or
sbb
lock
add
test
mov
adc
rcrl
test
pop
adc
inc
in
or
in
mov
lahf
imul
stos
in
jns
sbb
pop
sub
inc
push
cmpsb
sub
mov
cwtl
xor
das
repnz
inc
or
fldl
pop
push
cmpsb
clc
push
movsl
push
aam
int
subl
jb
jo
mov
lods
das
sbb
test
mov
mov
int
daa
out
popf
push
aas
shl
insl
inc
test
fwait
ljmp
out
js
shr
dec
cmp
push
sbb
mov
mov
dec
jae
test
mov
repz
stos
dec
cmp
push
xchg
lods
test
in
hlt
mov
xorl
cmp
outsl
add
pop
cmp
or
addl
pop
or
mov
testb
adc
mov
lcall
adc
push
lcall
mov
es
das
and
out
sbb
adc
and
and
push
mov
and
cld
sbb
jne
daa
xchg
cmpxchg
or
jnp
stos
mov
add
sub
in
ret
adc
pop
push
ss
mov
repz
ret
inc
sub
cmpsl
insb
sub
lcall
jo
ret
out
cli
rorl
shlb
mov
lods
sbb
or
iret
and
push
lret
pop
hlt
repz
iret
adc
pop
bound
xchg
iret
adc
in
ret
dec
lock
and
test
aad
dec
mov
push
rep
repnz
jnp
or
insb
leave
sbb
ja
mov
into
lcall
popf
jno
ss
icebp
es
jg
sub
and
cmpsl
ret
ljmp
push
dec
xchg
xchg
dec
mov
cmp
jg
sub
aas
cmp
stos
rcll
jg
pop
pop
sub
xor
cmp
jmp
mov
cmp
lahf
dec
inc
jmp
scas
loope
lea
inc
das
mov
add
adcb
lods
mov
jo
fucom
lock
pop
sub
outsl
incl
test
pop
arpl
imul
sti
stos
aaa
pop
out
imul
push
sub
or
dec
sbb
nop
pop
fildl
xchg
xchg
dec
xor
shrl
mov
pushf
adc
fisubrs
add
jno
jo
cmpsb
sbb
lcall
pop
sub
adc
test
push
jbe
jge
test
mov
push
sub
dec
cmp
mov
cmp
dec
lods
outsl
decl
mov
add
ret
xchg
fwait
stc
inc
inc
fisttpll
mov
hlt
inc
add
out
sti
rclb
rep
outsl
sti
clc
mov
sbb
or
pop
cmc
mov
add
sbb
or
jg
call
inc
jge
dec
cmp
mov
cmpsl
es
mov
cmp
outsl
clc
xchg
push
ret
gs
jbe
fwait
mov
jle
icebp
dec
lock
fbstp
add
sbb
fldcw
scas
sbb
mov
inc
sbb
test
outsb
sahf
pushf
imul
leave
int3
jo
xor
pop
outsb
dec
call
push
in
cli
sbb
cltd
inc
cmc
inc
sti
dec
roll
hlt
aaa
and
dec
cmp
adc
negl
clc
stos
lret
pop
sbb
outsl
loopne
xor
rep
shrb
and
add
xchg
mov
in
insb
jp
add
cli
dec
mov
and
sahf
xor
push
and
xchg
add
fadd
sub
push
sub
xor
mov
rclb
and
inc
roll
mov
jae
dec
jae
pop
ret
in
add
lock
jg
insl
outsb
pop
imul
jbe
cmpl
adc
pop
cli
jne
les
call
push
mov
sbb
mov
mov
decl
popf
or
movsl
imul
imul
aam
jge
ljmp
push
dec
imul
cmp
pop
lock
out
lea
sub
fiadds
jne
sarl
movsl
imul
sub
xor
lock
out
jle
cmp
jp
leave
mov
outsl
inc
inc
sahf
adc
mov
sbb
pop
mov
fstpl
mov
rcll
and
pop
sbb
push
addr16
ret
stos
in
pop
bnd
loopne
icebp
mov
xchg
orl
jecxz
add
push
inc
push
add
call
sets
out
addb
cs
and
xlat
movsb
lds
xchg
insb
das
int3
cmp
jne
xchg
int3
clc
std
in
sbb
aad
xor
push
outsl
jne
and
subl
and
sbb
cmpb
insl
adcb
pop
mov
push
add
mov
and
ret
add
dec
xchg
lret
jnp
dec
repz
mov
mov
mov
xchg
xchg
repz
or
sbb
sub
inc
je
xchg
push
jo
mov
inc
lods
cmp
es
fwait
sbb
and
add
xchg
int3
xchg
sti
std
insb
pop
mov
sbb
jae
add
wrmsr
inc
pop
negl
or
lahf
stos
sub
popa
xchg
ljmp
mov
addr16
or
les
sub
add
lods
andl
in
push
mov
mov
push
xchg
loope
lcall
cmp
cmpsl
pop
mov
pushf
jecxz
push
shrb
cld
and
loope
inc
mov
mov
and
dec
icebp
sub
mov
aas
mov
inc
stos
jae
xor
adc
dec
pop
loope
xchg
push
xchg
sti
mov
out
jns
xchg
dec
subb
cltd
aaa
lods
or
sbb
imul
add
imul
dec
es
or
mov
repnz
test
push
pop
jg
xchg
aad
mov
push
add
shll
sub
mov
pop
jmp
mov
mov
mov
pop
jge
adc
loopne
cmc
imul
or
inc
out
pop
stos
xor
lret
insb
divl
mov
loop
mov
sub
cs
bound
adc
repz
or
lods
or
clc
leave
mov
push
and
or
out
pop
fcompl
call
outsl
addr16
jmp
jge
and
mov
mov
mov
jnp
inc
hlt
or
sub
sbb
add
jmp
mov
repnz
rorb
test
push
lock
adc
mov
push
je
in
xchg
cmpl
lods
icebp
std
addb
mov
fistps
aam
dec
or
in
js
stos
aad
lahf
into
cmp
insb
and
jle
lods
and
jge
lock
mov
mov
insb
lds
mov
add
dec
stos
scas
arpl
xchg
dec
enter
fdivl
repz
scas
mov
sarb
loop
adc
sbb
hlt
roll
shr
jl
testb
movsl
cmp
or
std
cwtl
mov
cmp
fistpl
aad
adc
mov
sbb
jns
sbb
inc
jmp
sar
jg
add
xchg
movsb
clc
lahf
cmpsb
push
add
ret
cmp
repnz
cmp
scas
shll
out
lcall
inc
rorl
mov
rorl
mov
add
outsl
mov
sbb
xchg
in
jnp
scas
and
push
ret
or
xchg
and
into
in
lret
mov
cmp
push
mov
pop
sub
xchg
out
imull
in
shll
jne
leave
cmp
lods
inc
into
gs
pop
out
and
jo
pop
mov
sbb
xchg
jmp
xchg
dec
iret
jo
jmp
popa
mov
push
mov
dec
inc
scas
fsubrl
inc
out
int3
pushf
in
sti
xchg
arpl
pop
orb
aas
pop
mov
loope
notl
xchg
popf
imul
jge
push
das
stos
mov
fadds
mov
and
mov
sub
adc
mov
push
sbb
or
outsb
daa
mov
or
imul
add
xor
int
mov
mov
inc
pop
test
inc
sbb
lds
sahf
jle
movsl
mov
push
out
jecxz
sbb
inc
cmpsb
fcomps
js
lret
or
push
push
xor
mov
mov
leave
and
inc
scas
pop
mov
imul
loope
call
daa
rcrl
lds
es
fnsetpm(287
mov
popa
fsubrp
dec
outsl
int3
iret
lock
add
push
inc
dec
cmc
xlat
mov
inc
push
or
mov
aas
fld
call
mov
stos
mov
or
and
adc
aas
push
jmp
push
out
sub
addr16
scas
or
hlt
add
call
push
mov
movsb
cmpsb
mov
aas
ljmp
jg
sbb
sub
pop
inc
rclb
test
stos
add
or
cmp
movsb
add
ljmp
jl
cmp
in
xlat
and
jno
mov
repnz
aaa
mov
cld
bound
add
push
xchg
lahf
roll
stos
test
popa
scas
pop
or
mov
xchg
push
and
pushf
cmp
repnz
in
mov
aas
and
sub
out
mov
arpl
or
jp
int3
pop
cli
push
and
scas
push
dec
mov
popf
test
push
jnp
add
push
add
lods
cmpsl
jb
call
das
cmc
pusha
or
mov
push
ret
adc
and
pop
arpl
test
lds
sub
outsb
sbb
das
push
es
and
push
stos
aas
mov
test
je
cmp
pop
cmp
orb
in
sti
pop
les
and
mov
mov
sahf
fimull
xor
mov
mov
jmp
dec
mov
insb
xchg
into
or
dec
int3
arpl
lahf
les
push
pop
lahf
lock
add
int3
lods
mov
outsb
xor
imul
shr
insl
jl
mov
or
out
sbb
xchg
and
popa
mov
bound
jge
mov
jg
cmp
in
popa
icebp
lock
ss
mov
mov
mov
push
cmp
aas
xchg
pushl
or
dec
sahf
das
das
fcoml
out
out
std
outsl
outsb
ret
xchg
push
std
adc
insl
sbb
stos
movsb
fstpt
jne
adc
cmp
xchg
mov
mov
popf
bsr
jmp
push
lret
popf
repz
inc
ret
jg
adc
cmpsl
or
xchg
cmc
xor
out
sbb
add
pop
in
mov
loope
mov
int
pushl
fadds
pop
inc
cltd
js
in
stos
pop
inc
inc
std
fdivrs
xchg
jo
cld
aas
shlb
add
mov
push
jmp
mov
jge
mov
jl
jae
sti
or
aam
repnz
xor
stos
xor
ja
cmc
inc
lret
loope
mov
in
push
mov
fwait
rcr
clc
mov
pop
xor
addr16
lods
mov
push
mov
movsb
mov
lock
lcall
daa
inc
icebp
mov
mov
mov
dec
push
sarb
loopne
pusha
pop
xor
dec
lcall
movsb
insl
insl
jle
insl
lea
repnz
sbb
fidivrl
and
hlt
xchg
ds
xchg
cmpsb
lret
mov
and
popf
out
call
xchg
pop
cld
loop
and
mov
in
clc
xor
xchg
inc
popf
scas
outsl
xor
mov
push
jle
jae
cmp
push
xor
lods
ret
fmul
or
popa
push
enter
mov
sahf
lea
add
fucomp
dec
pushf
xchg
pop
mov
jg
mov
mov
lock
std
jl
or
cltd
imul
adc
mov
jbe
rcr
ss
outsl
std
or
xlat
stc
dec
out
lods
mov
xor
dec
mov
cmp
stos
and
dec
arpl
xchg
mov
jnp
add
test
and
das
aas
sub
dec
vpsllw
mov
aas
dec
sub
cmp
jae
add
mov
inc
imul
push
mov
les
push
orl
jbe
adc
cmc
cmp
loopne
or
jl
and
movsl
gs
fisttpll
jae
scas
in
pop
dec
das
and
jbe
aaa
ret
hlt
jle
pushf
divl
cmpsb
gs
mov
inc
lods
shll
or
xchg
push
sub
jo
movsb
insb
and
outsl
push
js
adc
xchg
iret
or
cmp
fcoms
inc
or
lods
gs
add
xchg
sub
repnz
add
pop
aaa
or
lds
pop
add
out
cmp
cmp
push
push
call
pop
xor
pop
stc
add
imul
gs
shlb
mov
push
pop
pop
arpl
sbb
pop
and
cmpsl
pop
shlb
mov
sub
fiadds
xor
inc
neg
xor
inc
aaa
mov
inc
in
ret
rorl
push
fwait
std
out
js
mov
scas
jno
scas
inc
out
sbb
stos
xchg
mov
xlat
push
shll
shlb
idiv
testl
out
add
xchg
cmp
mov
sbb
or
mov
call
xor
clc
mov
xor
out
sub
test
stc
iret
sti
fwait
xchg
pminsw
xor
and
dec
out
aas
orb
jl
ret
fsubs
dec
movsl
int
into
or
mov
adc
cld
testb
pop
movsl
dec
inc
je
xchg
roll
adc
push
push
mov
xlat
mov
inc
stos
sub
sar
push
pusha
aad
xchg
push
xlat
add
into
push
sub
inc
outsl
out
sub
cli
inc
jle
jp
out
mov
lock
mov
or
or
xchg
test
mov
mov
add
xor
imul
cmpsl
jl
test
in
or
ret
cli
data16
mov
loopne
out
or
pop
bnd
lock
std
mov
cmc
jae
outsb
jnp
ds
or
xchg
pop
dec
dec
imul
sbb
dec
imul
aaa
jne
push
pop
mov
and
xchg
inc
test
dec
rol
jae
mov
xlat
lcall
xor
dec
in
ds
cs
dec
xchg
fldcw
xor
push
mov
sub
mov
das
test
sub
sub
push
out
xchg
push
lock
roll
xor
add
add
inc
xchg
pop
outsl
in
xchg
jmp
sbbl
inc
xor
test
pop
adc
xor
push
dec
pop
adc
cmc
sbb
jnp
outsl
dec
int3
ficoms
inc
inc
push
xor
inc
lcall
adc
push
push
sub
movsb
and
rolb
sbb
cld
sub
xor
dec
rorl
repz
and
into
iret
popf
add
jae
sub
ljmp
lret
movsb
jno
cmc
add
pop
in
jne
or
hlt
decl
lock
adc
mov
xchg
pop
aas
cwtl
dec
pop
and
sbb
insb
push
lock
cld
add
push
dec
add
ss
and
fwait
and
ss
jns
jmp
es
ret
ret
pop
inc
adc
shl
jg
mov
pusha
jp
mov
add
push
mov
or
push
inc
pop
cmp
enter
sub
mov
sbbb
cmp
sbb
and
jmp
mov
cmp
test
and
sbb
add
pop
sbb
call
add
sub
sub
dec
xchg
sub
ljmp
pop
std
pop
pop
push
and
mov
ja,pt
icebp
xchg
pop
sub
sahf
cmc
dec
sub
std
and
inc
sbb
and
sub
pop
pop
out
fcmovnu
pop
jo
rcrb
adc
gs
in
cmp
or
insl
leave
das
into
lods
cltd
shr
enter
outsb
lock
and
or
lods
xchg
aas
add
lods
scas
aas
and
push
inc
in
data16
in
pushf
gs
mov
jl
sub
into
dec
and
and
inc
mov
rcrl
je
xor
push
hlt
dec
and
dec
sbb
and
xor
cmp
fwait
scas
or
add
shlb
jg
jb
adc
in
mov
add
pop
sar
inc
fsubl
lea
sub
and
mov
mov
dec
adc
in
adc
jo
dec
fsubs
cwtl
xor
test
jge
add
push
sub
hlt
lods
sarl
cld
dec
lcall
sub
fldl
loopne
jns
add
cli
or
inc
inc
lea
push
popf
dec
pop
pusha
repz
imulb
adc
out
xor
ror
pop
shr
lcall
mov
adc
imul
outsb
repnz
sub
ret
jl
das
fisubrs
out
sti
push
shrb
in
and
or
data16
lock
gs
scas
adc
push
in
clc
cmp
iret
dec
sbb
fdivrp
jno
rorl
lret
in
cmp
gs
bound
imul
xchg
inc
jae
sub
jbe
mov
loope
mov
sub
inc
in
lahf
mov
test
ret
rcl
ficomps
pop
je
lret
in
or
ds
ja
aas
ja
fimull
xlat
fs
outsl
icebp
and
inc
cld
insb
sbb
imul
imul
sub
add
sub
insl
mov
mov
adc
xor
ja
insl
xor
pop
adc
cmpsl
cmp
xor
out
lret
cwtl
mov
jae
dec
mov
mov
aas
cltd
ljmp
sub
es
leave
cmc
mov
sbb
add
outsl
cmp
ja
mov
adc
aas
pop
out
ljmp
in
shr
adc
adc
mov
mov
jg
mov
dec
enter
mov
adc
ja
pop
adc
xor
jae
lock
repz
jo
xor
or
ljmp
lods
mov
sub
cmp
mov
xor
xchg
lods
mov
jbe
pop
lods
pop
enter
adc
cmp
mov
jle
sahf
xor
gs
inc
lods
xchg
jno
ljmp
mov
es
mov
aaa
adc
xor
lret
dec
lock
mov
ja
out
cmc
scas
or
push
sub
pushl
out
jecxz
dec
int3
gs
inc
jnp
pop
mov
or
xlat
adc
cmp
mov
and
dec
sub
fcomps
inc
sbb
int3
ljmp
mov
mov
sbb
fimuls
pop
repz
les
out
jl
pushf
cmp
in
test
int3
aad
mov
push
popf
adc
nop
mov
test
jae
push
cmp
or
cmp
stc
mov
push
sub
xor
xor
repnz
fnsave
movsb
mov
rorl
fsubl
dec
mov
mov
imul
dec
mov
js
in
or
into
insb
xchg
in
mov
adc
rcrb
xchg
psubd
dec
out
mov
lea
dec
aas
bound
or
repz
jg
mov
imul
sbb
stos
mov
mov
ja
aaa
mov
out
jecxz
sbb
lret
lock
sub
in
repnz
xor
out
or
sbb
daa
stos
add
mov
hlt
addr16
test
xor
clc
dec
dec
in
mov
push
jmp
add
inc
adc
jbe
push
int3
mov
mov
jb
incl
xor
je
ret
pop
push
scas
mov
xchg
stos
out
pushf
cmp
add
or
mov
dec
push
jp
xor
inc
adcb
rolb
out
in
mov
inc
sub
sub
scas
mov
adc
mov
or
imull
sub
inc
push
es
push
js
mov
imul
loopne
xor
dec
adc
gs
dec
push
jae
mov
sbb
loope
xor
xlat
jo
lods
and
push
mov
mov
ja
pop
subl
mov
mov
hlt
cltd
pop
cmp
lock
enter
adc
dec
mov
lods
das
xor
cld
ja
adc
pop
xchg
sub
cmp
aas
inc
xor
cmc
clc
out
in
pushf
and
stos
cld
sbb
pop
and
mov
xchg
add
inc
nop
test
dec
nop
mov
fsts
xchg
xchg
lahf
push
rcrb
jae
mov
mov
call
lods
lret
push
mov
cmp
mov
jae
push
xchg
bswap
cmc
gs
or
dec
mov
mov
pop
hlt
stos
dec
fcomps
or
mull
movsl
push
and
mov
scas
int
jmp
or
sub
stos
jle
fdivp
mov
les
test
rorl
fistps
pop
adc
mov
lock
arpl
mov
loop
jae
mov
dec
or
mov
push
imul
and
test
ljmp
gs
xchg
xor
call
lods
mov
out
mov
jle
dec
xor
mov
std
and
xchg
test
fcompl
lods
jae
lds
mov
or
push
sub
adc
cmp
lods
fwait
xchg
inc
xlat
clc
or
das
test
les
xor
pop
gs
fwait
out
repz
inc
dec
cmp
into
pop
test
jle
xor
outsl
xchg
in
outsl
jb
xor
pop
dec
orl
arpl
push
xchg
xor
push
jae
in
xchg
shr
or
add
sbb
or
jmp
push
pop
insl
test
stc
sub
adc
or
pop
add
mov
push
push
add
test
xchg
push
aad
xchg
mov
mov
xchg
lea
xchg
mov
xchg
jno
sub
nop
ljmp
or
rcrl
dec
sub
jl
std
pushf
add
mov
repz
xor
mov
rcrb
jae
jno
add
adc
sti
push
inc
pop
jae
pushf
jle
dec
in
addr16
jo
repnz
adc
and
test
call
cmc
mov
hlt
jg
and
mov
decl
jl
sbbb
out
stos
jns
inc
mov
stc
sub
xchg
nop
lcall
std
int3
sub
pop
or
adc
movl
aas
add
cmp
das
into
bnd
jnp
jp
pop
mov
cmc
mov
mov
cmp
mov
pusha
fs
pop
icebp
push
nop
test
mov
in
lods
arpl
or
fidivrl
fisttpll
sub
imul
push
out
in
pop
out
add
sti
fwait
adc
aam
or
imul
das
imul
add
jo
jmp
xchg
push
push
xor
and
popa
ljmp
inc
iret
xchg
cmp
dec
or
negl
faddp
cld
das
jnp
mov
jp
test
cmpsl
adc
push
std
pop
add
in
lds
std
stos
out
les
cli
cmp
pop
test
dec
cmp
inc
adc
xchg
mov
and
shl
sti
and
gs
lods
dec
insl
sti
xor
and
call
add
mov
or
cmp
jae
icebp
pop
scas
notb
clc
lret
inc
and
icebp
hlt
in
fmull
cmp
repnz
mov
leave
dec
in
jge
and
mov
pushf
out
sbb
aam
mov
jg
mov
jmp
adc
jae
dec
adc
popf
sub
jle
or
testl
mov
xor
ds
inc
imul
mov
frstor
roll
fldt
mov
jg
sbb
dec
mov
sub
pop
das
pop
cmc
test
jge
cmp
imul
test
in
cmp
test
and
pop
jnp
mov
jl
push
lahf
repz
loopne
add
outsl
popa
add
test
out
sahf
dec
fcomip
in
jmp
nop
sar
in
and
fs
push
test
and
dec
add
push
mov
jecxz
rcrb
xlat
data16
or
int3
xor
cltd
fcomps
pop
test
push
pop
std
addr16
jo
sahf
jge
mov
gs
outsb
dec
mov
or
inc
mov
or
repnz
jnp
sarl
pop
jge
push
dec
loope
sub
out
inc
icebp
loop
lock
cmpb
out
daa
adc
xor
mov
in
incl
and
nop
cmp
xchg
ret
inc
rolb
jl
cld
pop
repz
leave
sub
imul
pusha
stos
clc
movsb
ljmp
ljmp
test
mov
outsl
adc
int3
je
sub
outsl
imul
aam
jnp
inc
movsb
mov
lahf
decb
ja
adc
mov
in
xor
lods
pop
outsl
outsl
mov
xchg
sub
dec
out
loope
push
xlat
add
xor
push
gs
ljmp
outsb
andl
xchg
xlat
dec
das
sub
mov
and
xchg
aam
and
mov
mov
inc
fcompl
loopne
mov
jle
out
dec
add
lahf
fildll
sub
imull
ds
adc
sbb
mov
pop
jb
dec
jno
lods
add
ja
cltd
outsl
mov
jg
adc
outsl
test
outsb
dec
pop
sbb
jle
mov
in
fisttpll
add
lahf
int3
cmc
pop
push
scas
rorl
icebp
push
daa
adc
mov
pop
pop
dec
mov
test
mov
sbb
jne
ja
sbb
je
repz
mov
iret
mov
mov
sub
mov
inc
and
jbe
mov
xchg
test
nop
xchg
push
in
out
sub
jg
or
icebp
add
jae
jnp
ret
mov
ljmp
fimuls
ds
jo
movsl
in
cmp
dec
fs
in
jg
xor
dec
rclb
sub
cltd
mov
xor
and
out
mov
adc
jo
dec
ljmp
cmp
testl
dec
movsb
out
jecxz
pop
cmovo
sub
and
sahf
push
add
and
xorl
xor
jmp
aas
cmc
sbb
add
cld
lret
iret
add
and
lods
jno
sarb
jnp
dec
mov
lods
gs
scas
push
mov
mov
in
dec
mov
and
je
clc
lds
stc
scas
and
xchg
insb
cs
jno
dec
inc
gs
mov
int
arpl
std
fwait
mov
and
xchg
mov
inc
repnz
inc
or
andb
repz
sbb
pop
leave
xor
ss
dec
mov
xor
das
mov
clc
gs
in
outsb
in
adc
sub
lmsw
xchg
ds
adc
mov
out
adc
movsb
dec
dec
in
int
dec
inc
cmp
ja
or
insb
xor
lods
cmp
cmp
and
sub
cmp
adc
out
repnz
clc
jmp
adc
sbb
sahf
in
sub
in
inc
mov
das
cmp
insb
adc
lods
adc
add
leave
push
insl
mov
jae
push
jp
adc
pop
xchg
dec
jb
in
ja
ds
jne
sub
pop
int3
clc
insb
test
in
subl
sub
enter
lock
cmc
enter
adc
sbb
outsl
repz
out
and
sbb
sahf
push
mov
push
xor
sti
icebp
std
lock
out
xor
outsl
in
adc
push
inc
fnsave
mov
jae
sub
out
test
and
enter
sti
out
ret
xchg
repz
jl
mov
jge
inc
aas
mov
in
xchg
out
andnps
vcvtsi2sdl
mov
mov
and
jnp
rcpps
dec
sub
jns
stos
jnp
jns
popf
lret
push
jmp
lods
das
addb
scas
gs
aaa
popf
aas
mov
notb
ret
cmpsl
or
push
mov
or
out
inc
repz
push
jp
sub
inc
add
jnp
sub
popf
clc
sbb
adc
shrl
mov
je
sub
jbe
or
enter
movsb
scas
inc
aad
std
cmp
hlt
sbb
push
xor
jg
or
test
or
es
test
mov
pop
fdivl
jle
push
jle
cmc
add
repnz
gs
sub
pop
fistpl
sub
or
ss
inc
arpl
xchg
imul
sub
or
shlb
movsl
pop
add
movsl
sub
ret
mov
cltd
inc
scas
es
xchg
and
sarl
cmp
fimull
push
inc
out
adc
out
ja
fisttpll
movsb
adcl
cmpsb
xchg
out
loope
ret
out
pushf
push
sbb
stos
push
xchg
ret
sbb
pop
dec
xor
ret
lcall
popf
jmp
dec
sub
rclb
cmp
scas
pusha
insb
dec
mov
scas
sti
roll
jae
jns
mov
cmp
dec
ret
nop
imul
mov
push
lea
mov
int3
stos
icebp
add
cs
nop
xor
int
mov
repnz
dec
sahf
xor
xor
outsb
xor
dec
outsl
or
das
or
add
lcall
dec
sarb
ss
shll
outsl
insb
jmp
add
mov
scas
inc
mov
mov
insl
iret
mov
sub
mov
into
mov
insb
andb
das
mov
das
or
pop
inc
pushl
mov
mov
xor
xor
lods
mov
in
roll
inc
pop
imul
aas
repz
sar
dec
out
ss
es
js
das
xor
xchg
jmp
sub
int3
sbb
out
repz
sahf
jmp
xchg
stos
stos
fwait
xor
xor
xchg
lods
mov
cmp
mov
and
and
outsl
out
xchg
jg
dec
ja
or
cmp
imul
jns
fdivl
aas
cmc
jnp
icebp
iret
out
sub
insl
orb
out
scas
cmp
fcomps
push
out
adc
popa
bound
adc
imul
roll
cmp
arpl
cmp
cmp
pop
pop
and
lcall
fistps
mov
pushl
into
daa
push
mov
movsb
lods
jb
mov
sub
add
arpl
mov
dec
sub
dec
lods
dec
ds
xor
popa
bound
repz
jl
push
lock
lea
out
cld
sti
insl
xor
sbb
ja
das
insb
dec
out
sbb
sbb
dec
cmp
mov
and
xor
mov
inc
add
subl
xor
adc
aaa
add
mov
fadds
imul
pop
cld
mov
jo
sbb
imul
gs
sbb
mov
adc
and
add
scas
inc
sub
enter
sbbl
fbstp
and
sbb
mov
xor
inc
cmpsl
mov
mov
shr
add
adcb
push
jecxz
lcall
fcomp
outsb
pop
sub
insl
jae
cmp
add
les
gs
xchg
std
enter
out
clc
out
xchg
xchg
push
addr16
test
xlat
push
divb
fdiv
imul
jl
jb
or
jmp
repz
aas
dec
insl
aad
or
adc
fldl
mov
roll
movb
fneni(8087
in
xor
sub
sub
pop
push
add
sub
sbb
cs
aas
cmpsb
lahf
jb
popf
jne,pn
lds
sbb
inc
in
jp
ljmp
xor
push
xchg
icebp
add
inc
mov
xchg
out
je
mov
or
push
mov
sub
out
ljmp
pop
jno
fdiv
cmp
push
loop
jl
mov
jb
ss
jae
cld
fsubl
daa
cld
in
sub
or
fwait
outsl
lea
inc
insl
sbb
repnz
mov
popa
or
sbb
addr16
aas
test
fwait
clc
into
cmpsl
scas
or
push
in
add
ds
or
cli
repz
push
imul
cmp
add
out
and
leave
aas
inc
outsb
mov
cli
push
push
mov
out
cli
out
jbe
or
das
test
xchg
xor
add
jnp
adc
es
dec
pop
sub
outsl
add
mov
or
and
xor
imul
adc
sti
out
cmp
mov
aaa
aaa
jae
mov
movsb
sbb
enter
in
or
shlb
push
xor
insl
cmp
hlt
mov
mov
in
cmp
jnp
fwait
mov
stc
jb
add
jle
jae
insl
ss
jns
lds
test
push
xchg
ljmp
orb
sbb
mov
sbb
sub
aad
pop
ror
add
mov
hlt
adc
jne
sub
das
jno
xor
imul
out
sub
out
jns
js
js
mov
lahf
cmp
mov
std
add
jne
xor
xlat
popf
or
mov
pusha
outsl
sbb
jecxz
xchg
and
cs
add
cmp
push
jnp
pop
popaw
test
xchg
aam
stc
cwtl
push
rol
push
aaa
ret
mov
jge
arpl
inc
push
pop
loopne
test
xchg
jg
jg
out
scas
dec
cltd
ror
cmpsl
push
clc
sbb
lcall
pop
push
xor
icebp
popa
push
pop
mov
mov
sub
sbb
sub
lahf
insl
push
mov
mov
fbstp
dec
shll
addb
xorb
int
dec
jle
jecxz
outsl
rol
rcll
nop
je
add
test
push
add
xchg
in
imul
leave
xor
iret
cli
adc
std
fcoml
and
xchg
push
dec
jbe
pop
jno
inc
inc
sbb
repz
mov
push
aas
ljmp
sub
inc
in
cmp
push
ss
mov
jne
xadd
mov
scas
xor
loopne
mov
inc
dec
stos
out
int3
imul
test
jmp
cmp
ret
pop
cmpsb
cmp
pop
dec
xor
lods
lods
pop
mov
lret
pop
scas
repz
data16
cli
sti
aam
out
outsb
adc
in
int3
and
fdivl
or
mov
repnz
lret
out
xor
call
inc
aas
dec
inc
int3
sbb
adc
ss
mov
fisttpl
dec
cmp
out
mov
push
sbb
or
cmpsl
or
outsl
stos
lea
sbb
cwtl
add
out
or
jp
js
test
and
push
ret
xor
mov
xor
mov
adc
outsb
sub
in
dec
fsubl
pop
test
pop
in
movsb
xchg
in
dec
aam
jmp
mov
repnz
js
mov
push
dec
xlat
mov
in
mov
or
lock
aas
fdivr
andl
inc
es
sbb
scas
mov
xor
into
repnz
mov
test
cs
cmc
andl
mov
pop
or
std
jp
mov
inc
cmp
out
and
mov
add
xor
fisttpl
sbb
fdivl
lcall
les
sub
mov
jl
out
jp
in
in
mov
repnz
clc
or
inc
movsb
or
mov
adc
xchg
outsl
jge
pop
cli
in
pop
fildl
clc
fdivl
mov
ljmp
jae
sub
push
sti
call
adc
divl
ja
divb
sbb
shrb
cltd
scas
dec
push
dec
aas
stos
cmpsl
leave
sbb
shll
movsb
inc
clc
cmpsb
mov
out
repnz
sub
dec
xor
adc
xchg
adc
daa
mov
stc
mov
fistl
push
xor
imull
fldt
xchg
inc
xorb
int3
clc
shl
xor
aas
cmp
dec
and
loope
or
fsubrs
push
lcall
jns
leave
mov
out
inc
and
push
add
rcll
add
mov
out
into
adc
mov
cli
imul
adc
in
xorl
jg
icebp
ret
ljmp
sub
cld
add
mov
ret
sub
push
jns
push
mov
cmc
mov
push
shr
das
mov
clc
hlt
insl
jle
xchg
push
daa
cwtl
dec
mov
pop
fstps
or
or
push
mov
pop
sub
scas
adc
jge
cs
ret
test
pop
add
add
pop
idivb
std
testl
mov
inc
jecxz
cmc
repz
or
bnd
pop
outsl
sub
repnz
insb
and
sub
dec
shll
cmpb
lret
test
out
push
hlt
sbb
pop
sbb
clc
pop
pop
push
pop
fstpl
in
jo
test
add
aaa
adc
testb
adcb
imul
or
lret
scas
lret
insb
into
cld
or
pop
fcoms
jp
in
cld
jne
sbb
cli
or
stos
cld
imul
bound
in
mov
push
inc
sub
data16
jne
imul
push
lcall
mov
add
std
xchg
orb
scas
lahf
mov
pop
movswl
aaa
pop
popf
cmp
or
mov
xchg
fldl
out
nop
clc
or
repz
cmc
out
out
addr16
int3
sbb
mov
stc
insl
mov
imul
push
popl
push
mov
clc
pop
divl
cli
dec
xor
add
jecxz
std
repz
push
ret
adc
shll
aad
mov
mov
pusha
lock
dec
aaa
gs
or
clc
outsl
outsl
ljmp
sbb
hlt
leave
jnp
dec
sub
jno
sub
lret
jno
clc
add
jns
imul
mov
out
lret
jno
in
add
std
sub
sub
mov
or
cld
sbb
mov
jg
jg
outsl
sbb
mov
aas
pop
insl
clc
std
mov
push
xor
arpl
mov
aas
xchg
orl
out
adc
mov
scas
ss
scas
aas
lret
fwait
dec
stos
cmc
and
sub
mov
lcall
pop
scas
lea
and
dec
scas
outsb
add
jnp
xor
fdiv
cli
rep
inc
mov
jmp
mov
ss
or
and
sbb
imul
lea
cmpsb
jae
test
mov
and
push
cmpb
sti
mov
jne
pop
add
sbb
repz
sub
mov
loopne
pop
fstps
out
dec
gs
xor
stos
sar
xchg
imul
add
hlt
and
sbb
and
sahf
aad
cmp
lahf
pop
mov
jmp
mov
mov
movsl
addl
add
pushf
imul
inc
outsl
mov
loope
cwtl
lods
push
and
in
pushf
sti
sub
clc
out
and
in
loope
cld
sub
dec
repz
in
cli
cmpsb
and
fbstp
jnp
std
cmp
sub
xor
mov
out
dec
dec
test
jmp
add
mov
leave
addb
lret
loop
test
inc
out
jne
sti
dec
in
scas
dec
xchg
nop
mov
aam
or
or
add
das
push
pop
imul
cli
ja
cli
sti
mov
sbb
repz
imul
mov
inc
imul
mov
lods
xor
mov
mov
aaa
mov
cld
mov
or
sbb
fcomp
xor
mov
xor
jne
xor
insb
xor
daa
icebp
mov
push
fsubl
es
sbb
xchg
fwait
xchg
scas
insb
or
mov
mov
jmp
loopne
hlt
xchg
cld
pop
fwait
mov
sub
sbb
testl
jmp
test
xchg
pop
in
std
out
stos
dec
xchg
sub
jae
test
hlt
dec
fwait
mov
icebp
mov
test
dec
loop
outsb
or
or
ljmp
movsl
imul
out
xorl
xor
add
jae
fs
test
lcall
hlt
ret
movsb
popf
adcl
xchg
mov
xchg
aad
in
fwait
subb
rorl
aad
jne
push
sarb
ret
sbb
stc
dec
inc
add
lea
jl
cmpsl
push
xchg
mov
xor
testb
orb
jnp
mov
out
and
rolb
mov
fimuls
sbb
outsb
push
mov
rcrb
jb
inc
adc
repnz
ret
std
call
pop
adc
shr
sub
mov
mov
movsb
lcall
sti
aas
scas
push
pop
jbe
adc
mov
adc
in
mov
repnz
out
pop
jg
sub
adc
xchg
pop
xchg
push
sti
mov
or
leave
mov
cmc
mov
jb
mov
mov
mov
lods
popf
nop
pop
cmpsl
shrb
adc
or
mov
decb
mov
xor
es
out
mov
repnz
inc
pop
pop
xchg
inc
lcall
mov
sub
int
mov
mov
cmp
inc
ds
daa
sub
inc
dec
daa
std
pop
fldt
mov
jo
fwait
xor
push
sti
fidivrl
cmp
rcll
int
jnp
pop
js
push
pop
push
divb
pop
dec
push
loop
push
stos
pop
or
in
dec
inc
in
insb
xor
out
out
mov
and
repnz
divl
mov
mov
movsl
test
dec
push
mov
dec
shl
jge
and
mov
loope
aas
cmp
out
daa
push
push
sarb
outsl
cmp
aaa
mov
cld
mov
sub
out
je
mov
f2xm1
inc
scas
mov
pop
ds
popf
push
push
xchg
dec
and
fwait
pop
and
push
inc
push
repz
scas
jle
shrl
dec
mov
pop
ljmp
int3
testl
fsts
push
inc
jne
sub
int
dec
cld
aas
pushf
mov
xor
xchg
mov
cmp
pop
jp
es
jno
lcall
jl
adc
out
aaa
je
jno
mov
sub
into
stc
jo
pop
testb
shrl
dec
out
mov
jbe
inc
mov
push
clc
rcrl
adc
sbb
xchg
jl
mov
jmp
xor
dec
call
jg
call
fdiv
inc
movsb
call
mov
bound
push
inc
push
outsb
shl
popf
cmpsb
jo
aaa
out
mov
std
das
leave
hlt
call
dec
movsl
dec
sub
cli
cmp
push
cmp
adc
lret
outsl
xchg
out
insb
sbb
out
xchg
into
xor
sarl
push
sbb
out
ret
mov
ror
and
dec
icebp
or
adc
add
push
in
out
mov
sti
int3
sub
and
mov
xor
divl
cmp
out
jb
dec
sbb
xchg
test
out
or
cld
xchg
orl
repz
dec
jbe
insl
repnz
mov
pop
in
mov
into
dec
add
mov
dec
add
orb
or
pop
dec
movsl
cld
pop
mov
mov
roll
push
pusha
mov
push
xchg
add
sbb
scas
ret
cmpsl
jle
notb
fistpl
movsl
push
lcall
int3
mov
cli
jg
push
pop
aas
mov
std
rcrl
divb
push
out
je
mov
bound
std
in
sbb
sub
rclb
jle
adc
popa
aad
mov
mov
aad
subl
fistpll
pushf
stos
js
pop
inc
pop
in
dec
in
push
test
adc
outsb
js
push
ss
xchg
repz
hlt
clc
out
dec
adc
jle
cld
mov
fisubs
hlt
and
pop
mov
add
les
inc
clc
js
pop
cmp
sub
popa
sub
mov
mov
and
pusha
lret
mov
mov
stos
cld
jns
gs
inc
jo
clc
xchg
out
mul
jno
cmp
add
cmpsb
fstp
or
mov
pop
xchg
sti
cmc
icebp
hlt
sbb
test
adc
rclb
jnp
lods
ret
ret
mov
ret
repz
icebp
xchg
cmp
fisubrl
jnp
xorb
xchg
mov
mov
sbb
push
and
sarl
int
mov
xchg
mov
ljmp
mov
and
shrb
jecxz
cld
test
sub
incb
adc
imul
mov
in
roll
sti
inc
and
jle
orb
cmpsl
les
mov
std
sti
loopne
lcall
inc
mov
pop
sti
fiadds
push
gs
dec
decb
adc
pop
test
pushf
xlat
inc
out
data16
repnz
scas
incb
mov
mov
jp
cmc
int3
xor
jp
sbb
add
or
mov
sub
xchg
jbe
add
ja
sub
fdivl
cmp
jle
push
and
repnz
sbb
lds
push
fwait
add
dec
inc
adc
jae
clc
xchg
pushf
std
inc
or
mov
stc
dec
subl
mov
xchg
lret
insl
sbb
lods
daa
and
cltd
cmp
pop
mov
push
lahf
hlt
add
add
pushf
arpl
jnp
cmp
into
lea
sbb
pop
mulb
adc
lahf
jae
clc
xor
pop
push
stc
ficompl
jno
jmp
stc
ja
pop
xchg
inc
adc
fmuls
ja
std
icebp
jg
loop
cltd
dec
pop
lret
in
and
push
jb
jl
lock
jg
rcrb
lcall
mov
ljmp
cli
clc
std
dec
mov
xor
cltd
jge
movsl
adc
ss
jg
xor
sub
xor
add
pop
stc
insl
dec
outsb
add
fsts
jle
cmp
push
stc
or
jae
jae
mov
in
in
mov
ljmp
mov
aad
cmpsl
in
add
leave
mov
rcll
lcall
or
add
dec
sarl
xor
cld
adc
or
ljmp
and
jns
mov
dec
sahf
push
ret
ret
cmpsl
jno
in
aas
and
xchg
in
les
outsb
dec
shll
push
les
mov
ljmp
in
and
add
inc
daa
adc
test
int
fwait
pop
sbb
or
ret
test
repz
mov
dec
jg
subl
cmc
iret
icebp
insb
dec
dec
sub
xchg
hlt
xrelease
xor
fldz
dec
sub
and
xchg
in
fwait
xor
imul
sub
mov
mul
jae
repz
push
testl
dec
iret
repnz
rorl
cli
or
aaa
idivb
or
icebp
jg
or
stos
dec
and
negb
adc
std
cmpsl
popf
out
sti
imul
xor
idivl
ret
cmpsl
pop
mov
mov
lret
xor
mov
xor
push
repz
xlat
add
xchg
ret
xor
out
sbb
jnp
sti
mov
dec
std
mov
test
pop
add
cmp
xchg
mov
dec
dec
xchg
dec
sbb
lods
test
test
lea
sti
lods
dec
repz
rclb
push
xor
lahf
lret
js
lods
pop
test
leave
ss
or
repnz
cmp
or
mov
lods
insb
fnstsw
aas
in
dec
pop
xchg
addl
add
lods
cmp
hlt
fdivl
inc
adc
scas
push
divb
mov
das
xor
popf
out
inc
or
mov
out
cmp
ret
rolb
in
cmp
adc
movsb
imul
mov
adc
add
cmp
jge
push
ljmp
out
jecxz
xchg
inc
dec
imul
and
test
hlt
insl
pushf
add
je
imul
shrl
mov
movsl
jmp
fidivrl
and
jb
mov
out
ret
xlat
mov
daa
mov
sub
lods
dec
cltd
push
lods
mov
and
add
push
dec
or
scas
push
dec
cwtl
nop
xor
mov
mov
xor
outsb
xor
dec
lds
ss
repz
dec
test
ss
addb
rcll
pop
hlt
mov
jmp
es
xorb
xchg
movsl
adc
stos
out
shr
push
xor
dec
iret
sbb
and
mov
insl
insl
lret
gs
lods
enter
mov
jge
xchg
in
and
mov
out
adc
scas
add
les
mov
add
rclb
push
sbb
cmpsl
mov
stos
mov
cmc
add
insb
adc
dec
sub
repnz
or
xchg
push
and
int
pop
jb
mov
and
repnz
icebp
repz
sub
dec
into
mov
sbb
sub
insl
scas
dec
xchg
mov
cmovo
stc
cmp
idivb
dec
fdivr
mov
out
dec
ret
test
aaa
lahf
add
lcall
sub
leave
mov
mov
daa
ss
jg
sti
or
fwait
xchg
int3
push
aas
jnp
xchg
jae
aam
sub
and
into
sbbl
jo
ret
les
cmpl
sarl
ret
and
movsl
push
imul
jae
xor
in
push
sbb
adc
loopne
push
outsb
lock
dec
inc
ljmp
sub
mov
dec
repnz
loope
inc
in
js
sub
and
lock
mov
push
sub
test
popf
mov
icebp
and
or
xchg
pop
mov
iret
stc
add
popf
dec
mov
cvtpi2ps
les
imull
or
add
call
add
cld
ja
repnz
sbb
sbb
dec
repnz
jae
jl
leave
push
push
test
and
mov
jg
sbb
mov
hlt
or
inc
add
aam
aas
inc
adc
sarb
jg
or
xor
xor
repz
fisttpl
xor
add
ds
fsubrl
nop
mov
and
sbb
push
fidivrs
je
inc
jle
jo
and
in
sub
icebp
lods
cmp
dec
aas
dec
leave
std
int
mov
gs
stos
cmpl
out
xor
fmuls
sti
sbbb
sub
rcrb
test
jb
fstl
or
adc
je
adc
or
add
xchg
arpl
and
ja
roll
and
xchg
push
jge
cli
rcr
adc
daa
in
sub
fistl
pop
mov
and
and
sbb
push
or
and
lods
dec
inc
adc
jo
mov
insl
xchg
int
push
jae
or
dec
adc
add
icebp
enter
in
imul
nop
out
shrb
in
jb
push
xor
mov
jg
out
popf
mov
xchg
ja
stc
dec
mov
sbb
push
dec
sbb
mov
popa
scas
push
in
mov
fcmovbe
cmp
pop
or
into
int3
repnz
inc
negl
jns
sub
xchg
xorl
pop
lea
testl
clc
scas
mov
andl
sbb
jo
xor
or
and
movsb
sub
sbb
jae
adc
rcl
adc
popa
add
out
mov
into
dec
pop
loopne
fdivr
popf
sbbl
es
mov
into
rcrb
or
xchg
dec
push
cmpb
mov
decl
ja
dec
movsb
jecxz
inc
cmc
adc
leave
lock
ret
test
popa
outsl
sbbb
cmp
push
mov
subl
jle
cmpsb
in
nop
pop
cld
cmc
fcmovbe
xchg
or
pop
fidivrs
lods
mov
jo
push
pushf
sub
data16
jne
hlt
sub
and
pop
sti
lea
xor
sub
adc
je
lock
lock
push
lea
insb
pop
adc
xor
pop
and
comiss
adc
pop
sbb
push
jp,pt
out
push
bound
add
inc
ss
pop
mov
or
dec
mov
ret
push
adc
jnp
in
out
mov
xchg
out
in
imul
pusha
jb
stos
sub
mov
dec
in
cltd
fcomps
int
shrl
mov
dec
imul
and
insb
jle
mov
out
pop
adc
ficoms
or
pusha
cli
outsl
sbb
movsl
ss
mov
xor
xchg
push
sbb
xor
fsubrs
scas
int
popa
addr16
std
jg
ss
or
into
dec
dec
dec
inc
or
scas
gs
out
adc
push
cmpsl
int
popa
outsb
lock
mov
fstpl
outsl
cs
std
add
int
insl
mov
loop
adc
fimuls
mov
loopne
lret
mov
rclb
loope
icebp
xchg
scas
ja
pop
or
js
ret
or
in
or
lret
fwait
mov
lock
inc
or
ja
icebp
pop
fldenv
gs
lret
ja
xorb
jg
mov
xor
iret
out
out
gs
fsubrp
jbe
xor
sbbl
dec
std
out
out
cld
inc
inc
add
lods
fidivrl
or
xor
pop
or
pop
or
and
sahf
jne
bound
xor
test
loopne
xor
xor
imull
dec
jg
inc
add
sti
mov
jp
jno
add
divl
int
repz
dec
repz
dec
ja
adc
jle
shl
imul
in
xor
mov
mov
repz
addb
arpl
mov
ljmp
shll
sub
popf
and
inc
pop
sbb
insb
adcl
pop
mov
fucom
fpatan
mov
xor
inc
push
popl
add
sbb
mov
fsubrl
pusha
dec
or
dec
mov
jbe
push
mov
icebp
shrl
out
stc
loopne
subl
add
adc
xor
lret
roll
push
xchg
inc
jb
mov
or
add
mov
or
xchg
cmpsl
daa
jge
loope
inc
cli
test
cmc
dec
or
jp
das
cltd
mov
stos
and
arpl
cwtl
icebp
add
mov
jge
pop
clc
cltd
mov
cmp
push
and
addl
fnsetpm(287
dec
insb
in
and
test
mov
sbb
cmp
and
pop
cld
mov
jmp
sbb
dec
arpl
stos
arpl
fcoml
shlb
inc
cmpsl
mov
xchg
sbb
jg
sub
orb
das
jae
mov
add
stc
add
mov
aas
hlt
fwait
out
test
inc
or
movsl
adc
mov
jle
aas
mov
mov
or
scas
push
push
lcall
icebp
inc
and
add
adc
rcrb
jae
mov
sub
in
and
int3
out
clc
mov
sub
sub
xor
pop
arpl
repz
inc
dec
xor
outsl
dec
fildl
mov
xchg
ss
orb
shll
addb
xor
inc
cmp
inc
sbb
jg
aad
sbb
out
stos
mov
sbb
inc
push
inc
add
stc
dec
push
movsl
dec
dec
imul
into
pop
push
sbb
push
mov
ret
xchg
les
jo
cmc
push
out
mov
bound
add
or
mov
cmp
jp
ja
mov
repz
or
fsubrl
inc
fisttpll
ds
push
mov
in
sub
out
push
imul
insl
into
push
xchg
inc
shll
inc
sbb
ds
sbb
jns
jns
push
adcl
xchg
iret
inc
sar
sarl
or
xchg
mov
aas
idiv
jne
scas
mov
bound
scas
test
fbstp
sbb
lods
mov
shrl
ret
out
dec
mov
inc
repz
scas
sahf
jbe
outsb
sbb
scas
jnp
pop
mov
ror
cmc
cmpsl
dec
aas
xor
jecxz
bound
rcr
mov
out
dec
les
jle
jge
popl
mov
bound
outsl
jle
testb
push
std
and
add
mov
add
aas
pop
bnd
ja
nop
fadds
adc
out
xlat
cmp
sbb
test
push
in
pusha
lock
sbb
xor
dec
cld
out
sub
fwait
and
adc
dec
push
out
out
cli
sbb
inc
cmp
jecxz
mov
addb
push
pop
push
sub
cmpsl
push
scas
testb
lods
fisttpll
sub
jmp
mov
out
mov
in
inc
es
sbb
insl
fisttps
cmpb
mov
popf
xchg
pop
mov
mov
popf
dec
out
scas
dec
lods
xchg
dec
cmp
out
mov
orb
dec
cmp
popf
push
loop
sbbb
mov
subl
dec
mov
or
mov
scas
or
dec
insb
jno
add
xchg
loop
and
push
cmpsl
pop
push
movsl
clc
cmp
mov
mov
ret
sub
mov
or
aam
xchg
std
mov
outsl
xor
push
cmp
out
sub
out
imul
lcall
ljmp
xchg
xchg
scas
mov
loope
or
or
je
xorl
inc
jbe
dec
push
lcall
mov
cmp
or
test
sub
xlat
push
add
dec
lret
roll
fnsave
mov
mov
bound
adc
push
mov
int3
inc
pop
shrl
xor
movl
sbb
addr16
or
aas
repz
js
sub
jns
mov
fcmovnbe
leave
jne
jo
aas
mov
jne
rcr
fstpl
f2xm1
and
scas
add
dec
adc
mov
push
shll
push
jecxz
test
push
ss
sub
ss
xor
std
lods
adc
mov
in
in
ljmp
fwait
add
pop
xchg
inc
div
mov
shlb
mov
xchg
lret
pop
testl
movsb
fst
add
inc
pop
sub
sbb
in
jo
pop
inc
xchg
int3
push
mov
mov
lods
dec
push
or
sti
jo
out
aaa
sub
out
fidivrl
ficoml
adc
or
aas
jns
enter
xlat
fsubs
dec
adc
mov
xchg
add
fstps
add
cmp
push
loop
mov
push
pop
mov
push
mov
out
sub
pop
mov
mov
arpl
test
sub
sbb
or
jle
mov
jge
mov
mov
mov
pop
sub
and
call
push
sbb
xor
rorl
sub
addb
pushf
push
push
sub
mov
cli
out
pusha
adc
les
add
paddq
jecxz
stos
jnp
xchg
dec
mov
lds
mov
fwait
cmp
xlat
pop
dec
mov
out
out
jne
leave
add
test
xor
ret
cwtl
mov
xchg
out
jl
add
add
mov
or
or
jnp
pop
lods
mov
pop
out
test
in
xchg
jg
gs
dec
mov
xchg
and
and
test
jb
dec
int3
mov
out
ja
lock
and
hlt
sti
insl
jbe
das
or
imul
imul
loop
repz
mov
sub
lods
test
aam
xor
out
jge
push
pop
pop
dec
or
add
lock
aam
jb
or
in
add
adc
repz
jge
inc
sub
push
xchg
mov
or
add
sahf
repnz
adc
cltd
cwtl
pop
repnz
xor
xor
mov
out
pop
scas
not
repnz
push
adc
out
xchg
in
std
out
pop
into
jmp
lret
les
out
xchg
mov
xchg
stos
jns
repnz
cmp
lods
enter
and
repz
stos
xor
xorl
mov
dec
into
shrb
jge
std
pop
xchg
ficomps
pushf
lods
add
and
jle
mov
dec
cmc
mov
or
pushl
cmpsb
lahf
cmpsb
xor
loope
add
sub
push
scas
sub
popf
in
add
das
dec
mov
xor
push
out
dec
and
scas
arpl
dec
add
sub
mov
in
ljmp
push
call
sub
cmp
jp
xchg
aam
cs
repnz
cmp
test
add
and
xor
adc
jl
pop
ljmp
and
cli
lea
adcb
cmp
loop
aam
jbe
pop
pop
clc
aad
ljmp
jg
mov
xchg
mov
ret
push
scas
adc
hlt
push
mov
clc
aas
sub
mov
popf
jnp
mov
mov
test
and
xor
add
jle
jl
out
or
sub
dec
std
mov
push
loope
lock
std
rorb
aas
jg
mov
sub
push
add
mov
stos
mov
test
push
out
jb
mov
mov
nop
and
pop
inc
inc
jne
ss
bound
cmp
push
sbbb
aas
bound
dec
and
jge
lods
or
popf
lods
or
jle
leave
das
mov
pop
cmp
daa
fistpll
cmpsb
outsb
inc
sarb
outsl
mov
dec
sub
popa
pushf
ret
jle
cwtl
adc
cmpsl
push
jnp
cmc
cltd
jae
ret
mov
or
jle
in
xchg
fwait
cld
inc
ds
out
inc
pop
inc
repz
fcomps
jns
jp
xchg
fwait
icebp
dec
fimull
test
subl
fsubl
scas
sub
pop
std
in
cld
fisttps
popl
out
push
dec
push
jo
xchg
les
fwait
or
push
dec
mov
mov
adc
inc
jns
add
adc
icebp
dec
xor
sar
int3
inc
lods
cmp
das
jp
mov
lock
inc
mov
mov
fistpll
cmp
jno
or
loop
mov
mov
outsb
lret
int3
mov
mov
push
imul
into
dec
cld
fsubrl
in
mov
lea
mov
jns
sbb
lods
or
jns
ja
stc
pushf
ss
nop
dec
xor
out
xorl
or
in
das
das
adc
lods
and
dec
icebp
xor
das
xchg
scas
mov
das
test
mov
leave
adc
xchg
mov
jge
inc
cmc
cmp
add
add
mov
stos
jecxz
aam
adc
out
dec
std
jno
or
in
adcl
xor
push
dec
lock
test
mov
jg
adc
lods
int3
pop
lock
xorb
shll
inc
and
jnp
in
test
movsb
dec
lock
pop
gs
mov
daa
sbb
mov
arpl
mov
movsb
pop
or
mov
scas
mov
or
ret
aad
and
andb
out
fmull
xchg
aaa
dec
jns
xchg
mov
and
arpl
sbb
mov
aas
sub
out
lea
imul
or
adc
sub
ljmp
std
and
addb
mov
jo
dec
sahf
roll
or
or
loope
cmp
or
dec
adc
jbe
pop
inc
das
mov
scas
dec
cmp
movsb
stos
adc
hlt
iret
jno
cld
or
inc
sti
sbbb
lock
mov
jp
insl
lea
or
rolb
or
push
shl
push
dec
aaa
mov
test
iret
std
scas
mov
out
aas
rcrl
inc
cld
xor
lret
sti
jg
inc
pop
std
xor
scas
jb
add
xlat
insb
jnp
jb
jae
mov
testl
setns
jno
add
xlat
push
mov
lock
jecxz
enter
jmp
int3
ja
lods
jno
outsl
bound
nop
mov
dec
insl
test
sub
in
jecxz
jp
mov
gs
testl
xchg
test
adc
popf
inc
add
ja
sub
add
add
dec
aam
adc
sbb
inc
cmp
push
popf
sbb
imul
add
and
das
lcall
gs
inc
ret
test
cmp
sub
sub
inc
pop
call
js
insb
mov
sbb
ja
out
xor
jb
sub
dec
ja
fistpll
out
scas
xlat
xchg
pop
pop
xchg
mov
and
mov
push
mov
mov
repz
mov
cmpsl
pop
cmpsb
fnstenv
push
dec
loope
jl
xchg
or
xchg
aaa
xchg
enter
inc
or
sar
cmp
push
cmc
adc
inc
adc
adc
and
mov
push
add
out
cwtl
shll
pop
sub
or
adc
inc
mov
sub
fs
jle
jp
or
jge
xchg
mov
mov
icebp
sbb
das
dec
cmp
inc
dec
dec
inc
add
inc
daa
into
idivb
jle
push
push
xor
sub
add
aas
ss
sub
outsb
loopne
movsb
in
mov
imul
add
jnp
out
pop
jnp
outsb
pusha
sub
cmp
mov
mov
mov
outsb
jmp
pop
fldt
dec
and
idiv
rcrl
inc
push
cli
mov
fsubl
mov
es
add
mov
das
push
jge
jne
neg
sti
subb
push
ficompl
sub
mov
mov
sub
addl
push
pushf
mov
adc
mov
adc
repnz
dec
icebp
jmp
insl
jns
fidivrl
or
test
shlb
shlb
xor
out
dec
jo
and
sub
or
add
push
rol
xchg
jae
cmp
test
sub
xchg
movsb
out
int3
mov
bt
or
fldenv
shlb
jbe
pop
dec
dec
and
out
and
mov
and
push
or
imul
inc
mov
stos
stos
cmpsb
ljmp
dec
popf
dec
mov
pusha
in
xor
or
pop
and
outsb
ljmp
std
pcmpgtw
icebp
or
xchg
xchg
pop
or
sbb
lcall
xor
in
xor
outsl
loope
adc
cld
push
sti
fistpl
sbb
or
div
stos
pusha
mov
clc
and
mov
xor
scas
aad
xor
out
mov
sarb
in
cmp
mov
fsubr
mov
pushf
in
jne
mov
push
dec
divl
aad
add
mov
jmp
clc
ret
or
push
aaa
pusha
sbb
push
inc
pop
ret
bound
out
icebp
jg
and
lods
and
sahf
and
lods
outsb
imul
add
pop
rcrb
add
sub
jae
out
gs
insb
jae
ds
sub
loope
jmp
pop
sbb
testb
std
call
mov
in
lods
and
jo
or
jge
movsl
cli
imul
or
xor
lahf
inc
sbb
and
and
hlt
sbb
mov
pop
mov
sub
dec
mov
and
cld
in
and
and
repnz
sub
sub
sub
mov
add
loopne
mov
insl
nop
dec
cltd
cmp
or
jle
imul
mov
shlb
ficoms
test
shll
clc
ret
andb
es
rorl
enter
or
aam
xor
xor
push
cld
out
outsl
sbb
mulb
sbb
outsl
pop
mull
mov
popf
cltd
in
pop
out
or
out
in
mov
test
rcl
or
cmc
insb
or
or
sub
dec
out
sub
insl
in
mov
mov
test
cs
or
or
jle
jno
movsb
xor
ret
mov
dec
or
fs
adc
cld
andb
add
mov
popa
lcall
in
enter
jle
repz
jns
daa
mov
push
inc
and
mov
lods
push
imul
xor
fwait
icebp
dec
xor
subl
leave
pop
push
jae
int3
jg
cmp
mov
jbe
ficoml
lret
in
mov
icebp
aas
sub
stos
in
dec
stc
repz
cmc
test
or
popa
in
out
cmp
mov
int3
add
test
jmp
sub
js
mov
fbld
je
dec
das
rcll
sub
adc
cmp
push
add
add
cmp
sbb
scas
or
mov
pop
out
insl
hlt
push
popa
xor
or
loope
xor
xchg
mov
fisubs
jle
ja
imul
cli
shlb
clc
aaa
cld
test
fidivl
push
mov
or
mov
mov
xlat
stos
hlt
or
sub
ret
ljmp
push
push
aad
repnz
pop
bound
rorl
pop
je
negb
je
f2xm1
std
dec
adc
or
sbb
hlt
sub
sbb
mov
mov
adc
push
out
xor
iret
add
stc
adc
xchg
mov
scas
xchg
inc
or
jecxz
rorb
lcall
jg
test
and
cmp
dec
dec
sub
or
aas
pop
aas
jmp
in
add
pop
lret
je
or
mov
sub
cmp
mov
xchg
test
or
jae
aaa
xchg
or
ss
cmpsb
jnp
arpl
mov
repz
or
mov
fisubrl
push
or
in
jns
push
sub
xor
inc
outsl
pop
scas
rorb
lret
and
jge
xchg
push
xor
mov
sahf
mov
dec
pop
outsb
outsb
sub
in
mov
out
das
cmp
jo
daa
add
shr
out
popf
push
xchg
test
out
mov
lock
ja
stc
fwait
icebp
xorb
mov
test
insb
test
xor
das
decb
test
sub
idivl
lahf
mov
shlb
cmp
nop
sub
mov
cmp
std
mov
mov
test
outsl
in
testb
fwait
rolb
inc
xchg
jbe
inc
dec
mov
inc
push
cltd
in
cli
decl
movaps
repz
inc
rorb
cmpsb
hlt
addr16
push
fistpl
movsl
adc
inc
lods
std
add
fsubs
add
xor
ffree
aad
testb
push
sub
push
and
push
cld
xor
sbb
clc
jno
mov
mov
into
movsl
das
movsl
cmp
push
imul
and
mov
stc
je
cld
push
jmp
fldl
and
insl
ficomps
gs
xor
mov
lods
popa
mov
sbb
adc
iret
jp
cmp
push
push
lret
xchg
pop
jg
lods
inc
pop
push
pushf
cmpsb
lock
lds
jmp
lods
hlt
add
popa
mov
lods
push
mov
aam
jecxz
sbb
cltd
sti
fwait
loopne
stc
sub
outsb
jp
dec
scas
mov
jge
cmpsl
pop
out
mov
mov
pop
or
push
xor
cs
or
in
call
scas
sar
lods
pop
loope
icebp
ret
mov
sbb
mov
addb
cs
adc
in
adc
loop
xor
sbb
scas
xor
imul
push
and
push
fld
imul
lock
sub
jle
int
pop
imul
orl
hlt
fsubrl
pop
ds
iret
mov
stc
fwait
rclb
mov
imul
int3
pop
in
push
add
lods
sub
pop
sub
push
sub
push
xor
lods
mov
dec
inc
testl
or
sti
jns
sub
xorb
or
adc
das
push
cmp
bound
scas
cwtl
mov
add
in
loopne
gs
aaa
push
idivl
mov
inc
lock
mov
cmc
sbb
mov
sub
dec
mov
and
sbb
or
mov
or
mov
std
aas
pop
push
mov
or
sub
jo
sub
jns
mov
jmp
push
push
sar
arpl
orb
dec
push
cmp
int3
aaa
std
pop
and
lods
imul
xor
adc
stos
imul
inc
sbb
cmp
xor
fistl
adc
clc
into
out
test
cmp
pop
sbb
lahf
js
push
push
push
fwait
lock
jbe
fstpl
mov
xchg
or
jne
stos
stos
cwtl
int3
mov
mov
ja
xor
xchg
pop
sub
and
cmpsl
push
adc
inc
mov
dec
enter
jmp
pop
popa
and
push
mov
sbb
cmp
pop
std
dec
inc
cld
push
sub
imul
sub
dec
mov
js
scas
rolb
imul
lock
test
in
popa
sub
pop
test
je
sarb
mov
or
and
bound
ljmp
mov
sbb
lea
sbb
mov
add
xor
jnp
faddp
jl
hlt
mov
xor
icebp
fstl
and
hlt
jmp
xor
and
sti
xchg
test
shr
lea
dec
mov
mov
mov
jae
sbb
imul
mov
and
jmp
repnz
data16
lea
dec
cmc
ret
imul
sub
or
add
in
add
or
push
and
movzbl
push
inc
hlt
adc
adc
mov
cmc
mov
push
insb
in
notb
dec
xchg
mulb
mov
jg
sbb
fimull
rorl
push
jg
xchg
sbb
xchg
stc
inc
out
push
adc
ret
out
sbb
cmp
ret
mov
jmp
jbe
imul
push
sbb
sub
pop
out
and
jmp
adc
cltd
enter
in
xor
xor
dec
inc
cli
hlt
mov
lret
push
mov
adc
add
repz
push
lret
lock
inc
call
lods
xor
gs
sub
xchg
xor
inc
and
xlat
adc
xchg
push
jl
mov
mov
ret
movsb
pop
push
add
subb
pop
loope
imul
sub
sbb
jns
jbe
rorb
or
push
scas
push
mov
out
mov
inc
cmp
scas
mov
sub
repz
mov
out
push
inc
ds
outsb
in
mov
call
shrb
incl
jns
add
push
cmp
fmull
mov
push
cli
mov
in
inc
sub
and
lods
mov
int3
imul
scas
dec
repnz
mov
cltd
xchg
mov
sbb
inc
xchg
pusha
mov
rcl
xor
lea
jg
adc
cmc
aas
cmc
scas
movsb
push
mov
push
insb
outsl
mov
jg
push
outsl
mov
mov
or
sbb
cmp
adc
jae
movb
mov
lret
sbb
mov
pop
cmp
jecxz
sbb
fbstp
cmc
ljmp
inc
daa
and
inc
add
cmpsb
push
lods
nop
xchg
push
icebp
aas
push
xchg
test
push
cmpsb
and
adc
mov
fsub
cld
in
and
hlt
out
hlt
mov
jecxz,pn
cmp
dec
ja
icebp
ljmp
stc
lods
roll
outsl
scas
add
sbb
mov
aad
mov
push
xchg
or
imul
imull
sbb
lock
out
mov
in
aaa
push
fidivrs
test
cmpsb
fbld
out
jno
cmp
sub
in
jg
out
cmp
out
sbb
dec
mov
xchg
push
aas
lcall
out
add
gs
push
inc
icebp
incb
cmp
pop
inc
cmc
and
out
pop
sub
out
orl
stos
ret
push
cmp
adc
call
aam
mov
hlt
mov
enter
lea
mov
pop
mov
out
cltd
mov
adc
repz
loopne
add
movsb
mov
mov
sahf
sub
and
in
push
call
lcall
stos
mov
mov
dec
out
cld
lock
pop
dec
out
dec
mov
in
jbe
jne
xor
stos
shl
add
ja
cs
or
movb
dec
dec
loop
cmp
dec
cmp
stos
icebp
mul
mov
push
jl
mov
fwait
hlt
sub
test
or
mov
test
in
dec
mov
dec
mov
sub
sbb
pop
dec
in
jp
jnp
icebp
int3
and
mov
out
repnz
imul
incl
and
mov
pop
mov
sbb
sub
or
enter
cmp
cmpsl
sbb
je
sbb
aaa
add
movsl
mov
push
pop
std
xlat
mov
add
xchg
sar
dec
mulb
mov
jmp
hlt
pop
fdivrp
or
cmp
pop
adc
aas
inc
mov
mov
sbb
lock
dec
xchg
sbb
loop
into
mov
adc
daa
mov
cmp
sbb
rorb
aaa
sub
jne
psrlw
inc
and
jmp
pop
dec
sti
dec
or
fidivrs
fiadds
and
cmp
imul
pop
pop
sub
pushf
fdivrs
aam
fyl2xp1
stos
cmp
into
add
cmpl
lret
lcall
mov
jno
sub
nop
cmp
inc
pop
jg
xchg
fcomi
sub
fwait
imul
in
cli
mov
in
jbe
push
add
xchg
aam
dec
push
sub
cmc
int3
stos
sub
stos
mov
cmpsb
pop
popf
lods
add
adc
scas
out
or
mov
dec
inc
adc
cld
adc
jle
mov
cwtl
test
popf
add
xchg
insb
mov
popf
jnp
pushf
xor
outsl
cmc
hlt
out
leave
movsl
call
adc
or
xor
dec
movb
jae
fildll
pop
call
popf
jae
sub
and
das
in
aas
jg
jp
lcall
pop
in
and
inc
jnp
fildll
push
loopne
repz
outsl
shrl
imul
lock
inc
out
sarb
jg
outsb
in
mov
es
ljmp
or
jg
sub
sub
fistpl
insl
sbb
mov
filds
add
into
inc
fsubrl
push
addr16
shl
mov
je
pop
lods
jmp
in
or
add
lods
outsl
jle
daa
sub
aas
aas
mul
and
push
mov
pop
push
test
dec
insl
data16
fcompl
and
lock
xchg
mov
sub
jne
mov
js
cld
sub
sbb
dec
add
out
mov
rorl
cmpsl
ret
mov
das
sub
push
gs
inc
xor
clc
pop
std
mov
fsubl
adc
shr
call
repz
cli
xchg
ja
or
mov
mov
mov
jno
xchg
inc
add
icebp
sbb
jnp
mov
push
dec
xchg
or
cmp
ss
and
stos
fsubs
dec
in
mov
cmc
mov
insb
or
lock
mov
pop
mov
pop
out
sub
in
daa
sub
fistpll
and
and
inc
cmpsl
out
add
cmp
mov
jle
lock
outsl
stos
dec
xchg
and
cmpsl
adc
mov
adc
ficoml
and
inc
xor
out
xor
loope
xchg
adc
out
jmp
es
fldl
pop
mov
cmp
negb
sub
push
xorl
jo
sbb
repnz
cs
rol
push
xchg
jb
mov
bound
movsl
sub
fnsave
negl
push
sbb
mov
hlt
out
sub
xor
xchg
pop
xchg
dec
sub
rcrb
xor
pop
cmp
inc
cmp
cs
cmp
insl
add
testl
rcll
psraw
frstor
out
dec
insl
sbb
sarl
xor
ja
daa
imul
pop
outsl
ret
cmp
std
mov
into
stos
xchg
sbb
sub
and
dec
jmp
dec
ret
sti
mov
ret
cmp
loope
cli
pop
add
jb
aaa
sub
jns
xor
mov
stos
insb
sti
out
lock
in
lods
out
sub
lods
test
test
jle
aaa
shll
jae
sub
sbbl
jb
in
outsl
sbb
sub
push
es
lret
pop
stc
or
int
in
sbb
js
and
or
inc
xor
shrb
adc
scas
and
xor
sti
out
lock
rolb
imul
add
icebp
jle
sub
test
ds
out
mov
sti
xor
push
mov
adc
int3
jmp
outsb
push
outsl
inc
pop
jae
mov
lock
xchg
out
xor
mov
sarb
push
orl
mov
sub
aad
xlat
and
mov
ja
insb
mov
jnp
xor
sbb
inc
sub
sub
sti
inc
test
test
mov
cmp
xchg
mov
loope
mov
jbe
testl
sub
push
mov
sub
cmp
mov
jo
int
mov
jecxz
or
scas
xor
add
add
add
mov
jle
dec
sbb
xchg
push
adc
and
push
out
adc
jmp
repz
daa
loop
sbb
or
lret
jnp
daa
and
scas
pop
insb
mov
mul
adc
jg
mov
andl
stc
orl
in
and
xlat
ja
loopne
mulb
and
add
push
pusha
repnz
add
dec
dec
sbb
std
ret
addr16
sbb
jg
fiaddl
adc
stos
push
sahf
in
stos
popf
mov
aad
and
cmpsb
and
fbld
bound
pop
aad
orl
loope
sbb
mov
xlat
std
out
gs
insl
jg
int3
push
jno
push
mov
xor
repnz
xchg
push
repnz
test
mov
outsl
push
mov
nop
cmp
call
out
push
scas
inc
mov
xlat
js
add
cmp
adc
pop
push
js
jns
out
mov
dec
clc
outsl
pop
cmp
cmp
xor
adc
mov
or
xchg
nop
sub
ljmp
jno
dec
add
rclb
jo
sahf
push
cmp
sub
repnz
out
dec
repz
in
mov
sbb
pop
shrb
repz
or
dec
aas
mov
scas
sbbb
push
lret
int3
imul
fadds
pop
in
sarl
jg
aam
inc
cmpb
inc
mov
add
ds
or
add
test
cli
add
cld
or
mov
or
aad
xor
test
mov
mov
fisubl
inc
ss
xchg
push
jp
out
sbb
xor
cmpsb
orl
cmpsb
and
repz
dec
mov
loop
dec
in
mov
add
inc
jg
outsl
jmp
cmp
add
cmp
jecxz
or
icebp
inc
and
pop
js
add
aaa
ret
sub
pop
cld
pop
idiv
add
xchg
and
xchg
xchg
mov
dec
out
cmc
mov
mov
sbb
pop
mov
sub
add
sub
mov
les
pushl
cwtl
scas
dec
mov
pushf
or
sub
add
jns
mov
ss
pop
dec
or
outsb
cmp
fdivs
push
es
sub
ljmp
lock
out
push
jne
bnd
pop
pop
cmpsl
inc
push
into
mov
stos
into
xchg
dec
mov
or
lea
jl
adc
popa
mov
out
mov
jbe
sbb
add
jecxz
fcmovb
pop
out
rol
push
fstps
jle
idivb
sub
arpl
or
xchg
push
outsl
jne
addr16
push
and
jp
adc
hlt
sub
sub
dec
arpl
push
aaa
and
test
or
test
popa
mov
cmpsl
jmp
xor
add
mov
nop
fstpt
fisubrs
xchg
mov
sar
mov
sbb
fwait
cld
mov
sbb
out
popf
out
fs
cmp
mov
dec
cmc
cmc
add
insb
out
out
out
lock
mov
daa
pop
loopne
push
jl
icebp
rorb
mov
sbb
js
repz
mov
mov
xchg
or
incb
out
lea
mov
scas
jg
dec
jle
call
ret
jle
dec
jo
sti
jge
dec
outsl
jo
sti
outsl
scas
xlat
mov
insb
sar
mov
pushf
dec
lock
push
xchg
sbb
adc
mov
das
push
mov
jge
adc
dec
dec
idiv
dec
adc
repz
adc
push
jne
scas
sbb
inc
cli
inc
jnp
xchg
lret
repnz
popf
rorb
jb
push
add
cs
or
sub
lea
outsl
lret
inc
sub
daa
adc
add
mov
int
cmc
xor
mov
cmp
test
and
insb
dec
out
sti
je
and
push
jge
adc
lahf
add
mov
jg
mov
pop
jg
scas
sub
jg
dec
in
rolb
scas
push
jge
push
or
mov
scas
mov
sbb
cmc
mov
xor
popa
fcmove
out
outsl
and
cmp
imul
out
std
in
mov
jnp
push
cmp
adc
mov
es
fucomp
imul
lods
stc
fdiv
lret
jge
imul
test
mov
sub
lock
inc
inc
add
mov
lods
popa
mov
outsb
mov
jns
inc
ret
and
cmpsl
icebp
sub
das
pop
push
dec
in
repnz
cli
insb
aas
call
shr
mov
xchg
sub
aaa
stos
insb
fs
cmp
adc
mov
cmpsb
add
fdivrp
int
jne
hlt
out
aad
fcmove
sbb
and
dec
and
std
out
sbb
aas
scas
out
pop
call
loope
jge
lahf
mov
push
in
xchg
incl
xor
repz
cld
mov
mov
and
mov
je
jae
lahf
xor
dec
movsl
insl
sub
insl
sti
and
loop
mov
adc
jae
add
push
daa
xor
jns
stc
mov
jle
jno
mov
pop
sbb
fistps
in
out
xor
cmc
mov
cmpb
repz
or
mov
out
or
lea
sbb
cmpsl
mov
insl
popa
std
adc
imul
dec
iret
push
dec
repz
jl
add
mov
es
test
lea
sbb
pushf
push
icebp
test
push
cmpl
subl
pop
subb
lods
stc
mov
push
scas
mov
xchg
jle
dec
push
stos
jle
pop
xor
dec
arpl
jne
mov
xchg
add
mov
out
subl
stos
lret
outsb
out
xchg
xchg
rorl
mov
xor
outsl
xchg
jge
andl
rcl
or
jns
out
std
lret
jle
out
sbb
jo,pn
sub
xchg
dec
jo
outsb
jle
cwtl
and
and
out
sbb
xor
movsb
jae
loop
jg
jmp
jns,pt
jle
ds
mov
or
in
lods
mov
mov
es
xchg
clc
rclb
ds
and
or
dec
inc
in
jo
fcmovu
or
lods
adc
imull
incl
mov
je
aas
mov
out
xlat
lret
adc
mov
sbbb
jno
inc
mov
cld
inc
fbstp
mov
dec
dec
es
dec
xor
cs
and
in
xor
mov
sub
mov
addr16
pop
lret
push
stc
out
loope
in
sub
pop
xchg
mov
cmp
repz
in
add
or
sbb
push
cld
les
out
out
mulb
adc
pop
div
enter
cmc
aad
fst
add
movsb
lock
imul
sub
into
sbb
dec
ds
sub
mov
mov
and
inc
andb
sbb
mov
pop
lahf
dec
mov
incl
and
mov
ss
outsl
pushf
hlt
xor
dec
stos
movaps
fisttpl
jge
inc
out
orl
sarl
pushf
dec
jmp
aas
fstpt
shl
jnp
push
lock
shrb
lods
push
adc
repnz
add
aad
xchg
push
scas
shr
aas
mov
jl
add
ljmp
cmp
ret
das
ret
sbb
repnz
dec
mov
sbb
out
fistps
sub
cltd
mov
add
stc
lea
ja
inc
add
aas
pusha
sbb
push
pop
jge
icebp
lret
pop
cmc
gs
negl
stos
imul
or
pop
xchg
rolb
daa
and
add
add
mov
aad
cmc
xchg
or
lock
push
mov
lret
mov
fsubrl
mov
out
push
xor
lret
inc
in
jp
dec
loop
icebp
imulb
jae
dec
outsb
bnd
lods
and
notb
sbb
stos
aad
lret
fsubrs
clc
test
jb
popf
mov
xor
out
cmpsb
scas
mov
lds
pop
mov
repz
add
int
and
dec
movsl
push
inc
jle
xor
inc
mov
movmskps
sbb
out
dec
mov
icebp
mov
push
insb
lret
adc
in
sbb
pop
xchg
mov
dec
in
stc
cs
aaa
scas
ret
dec
or
mov
clc
dec
or
dec
jns
cmc
cli
jecxz
hlt
aaa
in
pop
scas
mov
mov
mov
ds
repnz
adc
lds
jp
andl
push
out
mov
clc
mov
sbb
hlt
mov
fistpll
jo
pop
aas
jg
xchg
cmp
aam
mov
and
fsubrs
adc
adc
lcall
mov
dec
out
imul
jp
xchg
sub
lret
push
stc
mov
ret
sti
bound
daa
out
mov
mov
jp
icebp
mov
fnstenv
pop
jo
shlb
add
sbb
pop
xchg
jno
test
adc
rcll
inc
pop
outsb
std
xchg
add
and
addr16
dec
and
fidivrl
mov
shlb
push
dec
jb
xor
testl
push
jae
lcall
sbb
int
jbe
gs
dec
push
push
sub
insl
add
out
out
dec
lock
frstor
iret
sub
cld
mov
aam
out
es
push
out
xor
and
in
mov
stc
cmc
test
lods
dec
insl
stos
sub
fistl
rcrl
aas
add
fiaddl
sbb
addr16
jg
mov
ljmp
repz
in
hlt
out
cmp
test
cld
stc
mov
lahf
xchg
call
mov
int
or
fs
mov
pop
ljmp
inc
in
and
addb
jnp
sar
or
and
and
idivl
pop
jl
jae
push
sub
stc
cmpb
add
ret
ljmp
pushf
jnp
mov
adc
hlt
fcoml
mov
test
shrl
adcb
pop
repz
adc
lods
or
scas
dec
dec
mov
in
mov
cmp
iret
lret
fistl
push
insl
mov
and
in
push
mov
and
sti
ret
adc
xchg
mov
lea
rdtsc
jae
out
dec
popa
repnz
fistl
mov
aas
xchg
add
adc
mov
mov
lcall
sub
and
mov
inc
pusha
pop
testl
repnz
in
pop
push
inc
call
jmp
call
subb
or
jne
jne
inc
push
cmc
out
stos
loope
adc
adc
insl
stos
lahf
pop
mov
shll
push
int
dec
sub
dec
pop
insb
sbb
addb
bound
fcomi
mov
outsb
or
repz
fmull
pushf
dec
xor
inc
std
or
sbb
jp
mov
push
inc
das
repnz
dec
mov
push
jno
jecxz
mov
mov
cmp
mov
out
scas
stos
movsl
adc
mov
repz
lret
jp
jae
cli
mov
icebp
cmc
popf
lea
and
gs
insb
fcompl
out
test
imul
bound
movsl
rclb
sti
lods
fwait
out
add
or
outsl
sti
roll
out
push
push
jle
cltd
pop
jmp
insb
repz
xor
sbb
lret
and
scas
ds
fwait
jne
mov
mov
loopne
sub
decb
dec
je
sub
int3
pushf
xor
scas
out
sti
or
jg
sub
insb
ljmp
and
dec
cmc
cmp
mov
lds
pusha
sbb
inc
or
xor
cmp
in
in
dec
adc
add
mov
addr16
cmp
call
mov
das
idiv
rcll
icebp
sub
stos
daa
xor
cmp
jne
stos
adc
sub
outsb
adc
mov
imul
int3
pop
stos
cmp
jno
stc
push
cmp
jp
push
add
testl
or
stc
dec
mov
std
dec
lret
sarb
imul
or
ficoml
dec
aas
out
and
mov
imul
hlt
mov
ljmp
and
sbb
adc
inc
jns
js
sti
pushf
outsl
sti
push
push
mov
lock
cmpsb
lahf
sub
out
daa
lcall
in
or
push
scas
or
sahf
int3
enter
aas
repnz
cmp
cmp
mov
push
xchg
outsl
push
jmp
subl
or
cmp
jo
xor
mov
gs
jne
clc
jb
test
cwtl
icebp
in
sbb
mov
jnp
std
insb
cmp
outsb
imul
loop
out
xchg
insl
test
hlt
lods
scas
jmp
popf
push
mov
mov
leave
or
dec
insl
shrb
mov
or
xor
out
out
pop
cmp
scas
stos
shll
pop
dec
mov
mov
mov
repnz
ret
loope
pushf
mov
or
aas
inc
and
outsl
inc
rcr
inc
push
mov
js
mov
push
xchg
rcr
and
outsl
sub
dec
mov
in
adc
mov
test
cmp
add
inc
jl
sub
scas
jnp
or
addl
or
ret
cmp
in
arpl
into
icebp
imul
int
mov
imul
and
pop
jo
adc
xchg
mov
lret
loop
mov
js
mull
mov
xchg
adc
or
jmp
and
sub
cmp
lock
mov
cli
insl
and
shlb
es
imul
xchg
xlat
mov
add
dec
mov
and
add
add
pop
ret
lock
sbb
idivb
ret
sub
test
and
sahf
sub
and
subb
jp
sbb
repz
hlt
cmc
dec
imul
neg
sti
xor
xchg
stc
insb
cli
scas
popa
repz
cmp
sti
dec
pusha
pop
shrl
sbb
cmpb
or
pop
inc
mov
mov
cmp
daa
inc
in
sti
fwait
add
add
cmc
or
sahf
scas
cmovge
cmpsl
lods
stos
jns
or
std
sub
or
cld
adc
sbb
ret
lldt
adc
insb
or
ja
mov
ja
mov
or
imul
ret
insl
inc
lcall
mov
in
stc
ds
add
mov
rcrl
fimull
hlt
and
sub
dec
mov
inc
mov
jle
pop
mov
std
sbb
ret
jge
cmp
fstpl
popf
sub
dec
pop
movsl
mov
scas
popf
jno
mov
imul
sub
int3
imul
xchg
into
fisttps
push
sub
adc
out
sub
sub
aas
in
test
xchg
sub
push
outsl
mov
sub
xor
hlt
lock
in
dec
jne
shl
jnp
xor
ds
int3
fnstcw
decl
add
les
mov
mov
sub
shlb
push
incl
hlt
divl
in
mov
repnz
xchg
cld
jne
gs
hlt
cmp
shll
inc
push
out
jg
and
iret
or
ja
pushl
out
mov
das
sub
and
xor
jns
aas
xor
pop
mov
lock
jbe
cld
dec
mov
hlt
dec
aam
aas
adc
je
mov
mov
cmpsb
arpl
add
add
add
hlt
pop
mov
cmc
cmpl
filds
mov
lods
imul
out
insb
sub
icebp
dec
repz
out
mov
in
xchg
push
and
mov
mov
adcb
adc
push
sub
aas
imull
aas
push
xchg
dec
push
fwait
xchg
sbb
nop
cmp
sti
dec
mov
mov
es
pushl
fstpl
imul
sbb
inc
lock
out
shll
mov
add
shr
out
mov
popa
push
cwtl
sti
jge
sbb
jae
arpl
mov
inc
inc
outsb
jns
lret
jl
cmp
push
or
inc
jl
jl
mov
sub
adc
xchg
lods
pop
jo
sub
xor
ljmp
dec
pop
cmp
inc
add
icebp
mov
mov
neg
fistpl
icebp
dec
sub
mov
mov
incb
inc
cmp
fcompl
add
sub
add
pushf
ret
outsl
jb
cmp
mov
adc
dec
lods
dec
and
out
xchg
jge
lcall
xlat
jge
mov
cmpsb
dec
mov
std
ljmp
add
dec
std
pop
insb
hlt
dec
out
ret
jg
or
mov
xchg
orl
push
out
jmp
mov
pushf
repnz
cld
in
xor
and
pop
jl
fidivrl
shll
jle
xor
imul
in
jnp
push
cmc
add
out
adcb
add
and
mov
add
dec
xor
insb
push
cwtl
mov
mov
dec
in
ja
mov
aaa
add
jae
lock
cli
icebp
push
push
cmp
pushf
sub
cmc
mov
pop
xchg
sub
rol
sbb
sub
or
dec
nop
adc
shrl
jnp
rep
in
add
jae
mov
stos
jmp
test
je
movsl
xor
js
gs
aam
jno
push
ss
dec
adc
sbb
xchg
popa
jno
daa
cltd
xor
ficompl
pop
cmp
sub
mov
or
lock
jmp
push
ss
push
adc
or
clc
jns
pop
jb
stc
rorl
in
cmp
xchg
adc
cld
sub
sarl
in
fadds
dec
cmp
mov
cmpsl
adc
rcrl
jg
add
icebp
jmp
mov
ret
xor
jmp
push
mov
cmp
push
nop
pop
jbe
jecxz
inc
inc
mov
sub
pop
in
bound
adc
jnp
adc
lods
das
cs
fnsave
aad
icebp
aas
inc
and
jns
jne
xchg
sub
test
js
mov
lock
mov
sub
push
mov
imul
push
or
mov
nop
imul
divb
out
sarb
push
adcb
aaa
mov
push
aad
mov
xor
cmp
insb
in
jmp
lea
ret
insl
ljmp
dec
out
pop
sub
mov
nop
sub
add
lock
pop
push
testl
pop
hlt
leave
daa
lods
mov
fwait
in
imul
stos
js
jecxz
nop
dec
aas
subb
xlat
mov
lods
out
or
sti
dec
cmp
push
outsb
in
call
arpl
and
or
in
sahf
out
sbb
daa
push
pop
out
pop
pop
jo
xor
cmp
jl
outsb
pop
or
sbb
std
shll
dec
pop
ja
mov
push
daa
lods
pop
or
jle
or
dec
mov
xor
or
pop
dec
jae
cmp
or
fisubrl
cmpsb
add
cli
mov
push
mul
sbb
sub
mov
lahf
xchg
pushf
xchg
mov
arpl
fidivrl
sarl
ds
aas
cmp
sarb
and
fisttpll
lret
sub
cmp
je
ds
xor
mov
add
aas
and
mov
cmp
or
or
inc
cld
in
jle
sbb
test
andb
jl
mov
dec
loopne
mov
mov
test
lcall
mov
es
test
or
fistpll
xchg
ja
repnz
or
and
adc
jb
dec
addr16
lock
incl
ja
dec
mov
int
lahf
sarb
inc
sbb
je
dec
imul
dec
cmp
push
jne,pn
mov
divb
mov
imul
scas
ret
dec
in
xchg
nop
adc
fnstsw
ret
mov
sub
cmp
push
insl
pop
cld
mov
cwtl
arpl
enter
ret
testl
aas
jnp
sub
pop
sbb
or
lods
and
cs
cmp
dec
std
push
inc
into
inc
or
decl
daa
enter
dec
imul
lea
enter
sub
repz
lahf
sbb
repz
cli
jbe
pop
push
int
sub
xchg
sti
sub
int3
sbb
xorb
push
gs
add
es
or
cmp
ss
pop
les
inc
dec
outsb
call
add
lock
stc
data16
pop
hlt
cmp
int
adc
mov
fistpl
cmc
xchg
mov
xor
testb
pop
idiv
cmp
lods
paddb
testl
dec
popf
lods
add
or
inc
mov
scas
int3
add
adc
dec
jl
mov
mov
add
mov
and
mov
xor
cmp
add
out
les
dec
loope
ret
cld
add
push
ss
das
inc
mov
test
or
adc
jg
adc
lods
dec
sar
sub
aas
inc
movsl
add
inc
jb
aas
inc
jno
lods
sbb
mull
in
pop
push
das
pop
sub
enter
push
mov
pop
jo
xchg
lds
inc
xor
out
mov
add
pop
imul
mov
popf
stc
inc
push
jp
out
hlt
insb
daa
lock
gs
test
aaa
sbb
in
dec
lds
std
fistpl
mov
pminub
pop
inc
in
mov
xchg
sbb
or
sbb
mov
pusha
push
xor
hlt
dec
in
dec
pop
dec
cmp
mull
jmp
jne
lods
int3
or
mov
cmp
nop
jg
cmc
push
out
or
add
lock
mov
daa
test
mov
test
sti
jbe
scas
ret
dec
ljmp
add
arpl
dec
lcall
add
test
mov
mov
imul
xchg
cmp
orl
test
add
out
sahf
iret
scas
push
mov
divl
xchg
adc
xchg
dec
mov
dec
and
add
xor
jecxz
cltd
dec
add
fstl
mov
int3
frstor
or
addl
ja
push
stc
inc
jmp
shlb
fisubs
stc
aas
lahf
xchg
jno
mov
adc
mov
hlt
movsb
scas
mov
pop
orl
hlt
and
and
add
mov
cli
shlb
dec
mov
xor
add
nop
repz
hlt
mov
lcall
sub
lods
imul
fisttps
mov
xor
out
mov
add
sti
stos
data16
fcompl
dec
mov
mov
paddd
push
ja
std
mov
mov
add
std
adc
orl
arpl
dec
arpl
decb
inc
xchg
xor
int
inc
clc
add
in
inc
jl
mov
and
or
push
stos
and
enter
out
pushf
xor
fsqrt
pop
arpl
mov
out
xor
push
lods
pushf
int3
movsb
push
inc
sub
movsb
out
push
sbb
or
mov
jmp
lods
shrl
insb
dec
out
xchg
arpl
pop
es
mov
mov
mov
jl
stc
scas
dec
shrl
clc
out
scas
pop
or
add
repnz
out
lcall
push
sub
xor
rol
sahf
dec
mov
in
sub
sub
addr16
leave
jge
scas
mov
pop
repz
mov
fwait
lock
sub
bound
xchg
stc
fnsave
jmp
pop
inc
pushf
mov
inc
sub
and
arpl
in
push
sub
and
or
mov
hlt
dec
out
addb
into
jle
xchg
mov
or
es
jg
enter
xchg
jo
cmpsl
arpl
mov
jne
inc
pusha
jo
int3
add
mov
xor
test
push
xor
ja
mov
hlt
push
iret
mov
jno
pop
xchg
aas
imul
int3
and
jnp
insl
stos
pop
mov
repz
shrl
xchg
or
or
push
aam
ja
xor
pop
in
scas
test
call
int3
sbb
test
jns,pn
in
dec
xchg
mov
pop
lret
sbbl
mov
dec
jmp
pop
and
incb
out
mov
mov
push
ss
adc
fcomp
jb
lods
mov
lcall
mov
pushf
cmc
dec
jecxz
xchg
or
repz
add
lock
enter
test
sub
lods
movsl
dec
add
ds
mov
cwtl
push
ja
mov
fwait
repz
lar
mov
dec
repnz
repz
or
sub
push
or
or
xor
popf
std
cmpsl
in
jecxz
jl
xchg
divl
mov
mov
cmp
and
sub
push
adc
pushf
cs
push
aam
or
cmpsb
loop
aad
sbb
push
test
sub
mov
pop
enter
mov
loopne
bound
dec
mov
test
arpl
mov
daa
or
mov
and
jbe
dec
pop
xor
push
or
lea
push
mov
push
mov
adc
pop
getsec
popf
pop
rcr
lcall
or
outsb
adc
sub
pusha
into
out
or
iret
inc
xor
mov
or
and
fwait
mov
int3
repnz
push
push
jle
lret
stc
cmp
sbb
stos
add
lds
repnz
int3
push
pop
cmp
lret
sbb
ljmp
jl
hlt
xor
lahf
adc
add
es
mov
jae
mov
jmp
cltd
add
xchg
arpl
gs
xor
mov
mov
inc
sti
xchg
icebp
inc
jl
pop
push
mov
fmuls
minps
jmp
icebp
roll
adcl
aaa
lret
mov
hlt
ss
stc
ret
fiadds
or
cmp
cmp
xor
xor
lahf
adc
sarb
add
push
out
ljmp
mov
out
decb
mov
xor
or
dec
lea
decb
sti
adc
cmp
sub
add
xchg
inc
or
sub
clc
push
ficoms
cld
or
loopne
mov
dec
in
and
pop
out
adc
out
jp
sub
inc
ret
mov
shll
adc
mov
mov
in
sti
mov
jge
adc
mov
jae
xor
movsb
mov
xchg
and
sub
orl
out
out
rdtsc
jnp
and
push
insb
adc
add
cmp
sbb
xchg
fsubrs
scas
pslld
mov
and
mov
and
inc
scas
xor
mov
or
scas
add
or
xchg
stos
add
test
pushf
xor
shll
or
ja
test
iret
cmpsb
inc
imul
je
push
jmp
push
addb
jno
inc
add
roll
pop
in
cli
pcmpgtd
mov
pop
jl
jmp
ss
xchg
cmp
scas
nop
dec
es
and
repnz
mov
pusha
pop
scas
and
jl
into
cmc
leave
sbb
dec
sti
shll
and
pop
inc
dec
or
test
rcrl
cmc
cmp
inc
pop
test
add
subl
cld
sub
xchg
push
test
out
es
out
cmp
mov
sub
into
mov
cmpsb
inc
push
inc
pop
pushf
mov
add
jecxz
cmp
or
scas
jge
out
iret
lcall
imul
dec
int3
out
xchg
ja
addr16
lret
push
push
xor
call
pop
jp
dec
or
add
lock
out
xchg
mov
shr
inc
cmpsb
inc
xor
lods
dec
es
scas
dec
jno
xchg
mov
mov
lock
mov
xor
rcll
mov
ret
loope
lock
imul
sti
cmp
jl
imul
xor
mov
stc
push
mov
or
xor
sub
push
repz
outsl
notb
and
mov
adc
jle
and
outsl
inc
pop
sbb
pop
xor
orb
cmp
stos
inc
cmp
pop
lods
lock
inc
test
sbb
ret
lcall
jge
push
or
or
cmc
add
sarb
cmp
sti
dec
xor
ret
mov
repz
and
dec
ss
pop
and
pop
test
xor
cmpb
fidivs
into
gs
xchg
cmpsl
repnz
or
in
dec
lea
fisttpll
push
clc
and
in
lods
movsb
xor
jle
or
mov
sbb
lea
out
fs
inc
pop
cld
ljmp
gs
xor
mov
stos
movsb
xchg
addr16
or
and
push
out
mov
test
sbb
imul
and
or
repz
icebp
or
and
fcompl
xor
hlt
pop
mov
inc
mov
sar
jne
xor
cmp
mov
out
mov
lea
loope
scas
psubb
out
sti
cmp
and
lea
stos
movsl
add
test
movsl
test
outsl
stc
addb
jecxz
xor
pop
movsb
fstpl
sbb
bound
ret
mov
add
push
dec
lret
add
cmc
in
ret
ret
push
sbb
repnz
sub
fsubr
mov
rcl
adc
pop
and
pop
nop
outsl
sbb
fistl
pop
test
scas
punpckldq
test
xor
fsubp
xchg
cmc
sub
out
icebp
std
repnz
daa
dec
movsb
sbb
xchg
sub
xor
pop
shl
pushf
add
mov
mov
mov
je
push
ljmp
call
addr16
stos
inc
add
inc
in
mov
push
mov
xor
js
jnp
dec
dec
out
sbb
pop
mov
xor
fidivrs
inc
sbb
rcrl
pop
icebp
dec
dec
imul
fwait
insl
scas
int
xlat
jg
stos
hlt
push
out
mov
out
lahf
popa
jb
jae
fsubrl
xor
das
lods
mov
or
sub
inc
mov
in
add
mov
insl
jp
jne
lods
call
repnz
jno
sbb
adc
rcll
loop
dec
imul
gs
inc
mov
or
shll
dec
mov
arpl
lcall
mov
jae
cld
cmp
dec
dec
outsl
leave
je
cmp
xor
inc
sub
or
sbb
push
dec
pop
popa
lahf
shl
mov
mov
dec
dec
xor
imul
dec
xor
sub
jnp
xor
or
fistpll
sub
loop
decl
nop
clc
out
add
stc
xor
jge
sbb
movb
call
gs
mov
aas
cli
jb
mov
addb
ret
out
out
bound
mov
jmp
and
or
push
push
repnz
xor
cld
into
shr
jae
cmc
and
shll
insl
or
repnz
jl
or
lods
jle
mov
cmp
enter
rorl
sub
pop
mov
lret
into
aas
in
mov
cmp
dec
aaa
mov
inc
sbb
jmp
and
mov
inc
mov
sub
fcoms
out
sub
leave
adc
or
xlat
xor
popf
add
ds
xor
inc
out
jb
sub
pop
sub
push
and
roll
fsubr
dec
stc
or
cld
ror
aaa
shr
or
pop
inc
mov
outsb
int
stos
pop
or
dec
test
inc
sti
mov
jge
ret
decl
push
pop
xor
jle
into
jb
mov
add
int
and
mov
out
out
ret
icebp
and
cmp
fs
lcall
sub
add
leave
scas
mov
sahf
pop
cmpsb
and
dec
pop
jle
sub
out
lcall
mov
lock
jae
fldcw
add
repz
and
loopne
jmp
stc
or
or
out
pslld
icebp
ret
dec
and
jno
test
and
test
ja
mov
hlt
ret
jmp
cmc
inc
dec
gs
push
sti
stc
and
add
sar
fwait
dec
dec
inc
test
cmp
add
idivl
fbstp
xchg
out
sti
pushf
jle
out
sub
fs
cwtl
or
in
in
test
push
xor
adc
cmpsl
sub
orb
jl
inc
fwait
or
cmp
out
popa
neg
ret
jne
add
add
push
jbe
sti
cmpsl
adc
jno
scas
or
or
jno
jle
repz
and
jg
out
fsubrp
js
rorb
ss
dec
cmp
xlat
in
xor
and
hlt
cld
mov
push
lods
jne
sarb
ds
mov
mov
aas
cmc
repnz
xor
xor
pop
in
xchg
adc
icebp
mov
push
cwtl
lret
xor
clc
sub
insl
push
loope
or
into
fstpt
bound
sbb
and
test
or
jg
adc
jo
push
andb
xchg
inc
dec
lock
inc
out
out
mov
jle
cmp
cmovp
and
inc
test
imul
dec
xchg
pop
or
fcmovne
and
out
mov
movsb
dec
xor
js
lret
mov
xor
bound
arpl
xor
scas
daa
stos
cmp
or
pop
pop
lods
push
and
stos
sbb
ljmp
cmp
dec
add
adc
add
cmpsl
in
mov
inc
pop
or
fbld
in
mov
jns
mov
fnstenv
scas
ja
xor
ss
in
sbb
into
out
xor
pop
cld
adc
mov
arpl
xor
mov
sub
dec
pop
shrl
test
lret
push
xor
push
sub
iret
dec
push
icebp
out
sub
mov
inc
cld
jge
jbe
xchg
scas
stos
cmp
sub
out
outsb
call
shrl
lea
pop
mov
mov
imul
fisubrl
lock
mov
in
xor
imul
repnz
cmpl
and
push
shlb
xor
faddl
das
sub
hlt
nop
call
lock
stos
jb
mov
add
dec
cmp
push
mov
sub
in
dec
or
add
out
inc
or
sub
sti
movsl
dec
jg
test
and
std
xchg
icebp
inc
adc
icebp
es
and
out
inc
and
mov
scas
and
sub
jns
mov
icebp
fs
sbb
xor
insb
cmp
insl
jmp
movsb
cs
pop
std
adc
sub
sub
and
mov
shll
testl
sub
inc
imul
roll
rcll
andl
popa
pop
mov
jg
mov
ss
out
sbb
xor
pop
cmpsb
mov
dec
mov
push
sbb
js
lea
dec
jo
pop
mov
mov
dec
xor
xor
sbb
sbb
jmp
push
imul
repnz
call
fdiv
or
add
in
add
cwtl
jnp
jae
xchg
mov
adc
lret
cmp
outsb
in
scas
shlb
push
and
shll
aas
mov
lock
repz
add
jle
ret
out
jecxz
stos
sbbb
mov
rcrl
add
mov
test
sahf
sbb
outsb
inc
jmp
loopne
lods
or
out
scas
mov
hlt
add
push
mov
in
dec
es
insb
sub
inc
push
in
das
sub
notl
add
test
lahf
imul
clc
repnz
mov
inc
and
sbb
or
int3
xchg
addr16
sub
add
xchg
cmp
icebp
ret
dec
or
imul
sti
dec
xor
cmc
call
inc
pushf
repz
and
or
and
repnz
jo
insl
or
xor
and
mov
xor
out
adc
mov
inc
push
mov
scas
lock
repz
das
mov
cmp
and
add
and
adc
push
mov
test
imull
cs
jo
sarb
lock
pop
scas
and
sub
and
lock
sub
mov
mov
cmp
cli
mov
and
repnz
sub
cmp
add
stc
in
cli
and
jnp
lods
and
insl
imul
das
inc
int
sub
je
cmpl
xlat
adc
or
imul
mov
aam
cmp
add
sti
aaa
and
mull
mov
mov
and
ss
mulb
and
jne
sub
dec
xor
and
mov
js
xor
and
xor
outsb
dec
xor
and
and
add
and
and
add
xor
int3
or
and
daa
mov
nop
call
das
int3
insl
dec
xor
repnz
mov
pusha
mov
mov
mov
adc
into
mov
dec
sbb
xor
mov
jno
adc
insb
or
ss
sti
pusha
icebp
rorl
pop
and
rep
mov
jnp
lods
sub
mov
mov
out
mov
mov
or
out
mov
dec
out
mov
mov
mov
out
adc
sub
loope
out
add
imul
xchg
out
pop
test
aas
repz
add
out
add
xor
subb
sti
idivb
out
inc
sbbl
out
sbb
jg
jg
or
jle
jg
cli
xchg
out
sbb
mov
mov
lea
sub
sub
or
push
jp
or
mov
push
jns
jmp
out
push
js
xlat
out
stc
and
jne
out
mov
fisttpll
mov
es
outsb
jnp
sub
pop
dec
jecxz
test
enter
and
mov
mov
icebp
jnp
cltd
fs
push
or
outsl
xchg
loope
hlt
ret
push
lcall
insl
adc
dec
cwtl
dec
aaa
add
insl
dec
cmp
or
xor
pop
mov
sub
aas
andb
xchg
in
sub
mov
jb
mov
fisubrs
inc
repz
out
or
in
xor
lret
push
pop
pop
out
add
xchg
xchg
stos
jle
cmpsb
dec
sbb
lcall
fwait
cmc
pushf
xchg
nop
dec
jae
lods
std
xlat
call
das
cli
jns
add
mov
cs
mov
dec
scas
or
pop
std
notb
adc
rcr
push
or
adcl
mov
movlhps
mov
iret
loope
mov
lret
sbb
inc
addr16
mov
loop
inc
stos
push
sar
and
jo
shll
scas
jbe
mov
xchg
jecxz
ja
sbbb
pop
mov
dec
outsl
dec
add
inc
pusha
popf
dec
in
repz
inc
jne
adc
and
insb
sub
outsb
xchg
repz
repnz
ljmp
and
xchg
imul
jne
out
out
xor
movsl
push
xchg
das
out
jns
test
or
ja
push
jbe
in
add
xchg
pop
cmp
pop
in
xchg
btc
dec
mov
daa
sub
stc
inc
imul
dec
cld
xchg
ja
adc
cs
cld
lods
mov
add
inc
in
loopne
push
sbb
clc
xchg
ret
xor
into
mov
aas
jo
sbb
sbb
subb
jo
and
and
jb
lds
add
loopne
add
cmp
movhps
push
lret
adc
jbe
jno
and
test
loopne
mov
into
repnz
decl
inc
cmpsl
aas
loope
xlat
push
and
std
inc
adc
xchg
pop
adcb
aad
and
gs
or
gs
or
outsl
lods
jne
pushf
push
xor
lock
mov
rclb
xor
cmpsl
adc
and
mov
sub
push
push
je
mov
and
mov
test
push
cmp
sub
jnp
or
push
add
sbb
stos
or
jno
inc
das
mov
test
and
pop
ret
add
mov
insb
push
jmp
push
cmp
push
dec
inc
mov
inc
mov
mov
cmp
in
mov
inc
int3
dec
imull
or
cmp
dec
sti
pop
stos
or
sub
icebp
lret
scas
xlat
out
std
push
cwtl
lock
lret
test
jnp
inc
jg
test
dec
ret
sbb
inc
dec
aam
data16
imul
repnz
fwait
fs
adc
test
inc
ss
xor
icebp
aas
cwtl
ss
rcr
fiadds
mov
icebp
sbb
dec
dec
mov
mov
fisttpl
pop
mov
into
mov
std
or
pop
cli
int3
cmp
cmp
mov
mov
dec
xor
in
push
out
mov
xchg
insl
stc
and
adc
js
repz
idivl
sahf
mov
out
push
outsb
sbb
sbb
stos
dec
sti
cld
xlat
inc
and
inc
jge
jge
in
icebp
dec
repz
mov
test
mov
jb
pop
or
push
out
les
aas
dec
mov
icebp
pop
mov
in
out
xlat
sbb
movsl
shrb
pop
push
movsl
push
int3
pushf
xchg
sbb
fs
daa
test
lcall
push
adc
ds
out
dec
inc
fldln2
xlat
outsl
xor
in
cmp
repz
sub
outsb
repnz
out
and
dec
mov
repz
leave
adc
cmp
stos
hlt
xchg
imul
loop
je
inc
xor
xchg
push
jg
mov
and
mov
gs
jecxz
push
ret
dec
dec
ret
mov
mov
mov
enter
das
into
jge
mov
sub
sub
and
dec
stc
cld
inc
ds
cpuid
add
mov
subb
nop
sub
dec
out
cmp
inc
cmc
outsl
iret
aas
and
pop
into
add
jo
lock
in
add
in
sub
insl
sub
fisttpll
add
sub
test
fistl
cmc
add
popa
adc
mov
stos
stos
pop
push
mov
cmp
fisttps
sbb
test
int
cld
fwait
out
sbb
jmp
mov
mov
movsb
pop
inc
outsl
mov
xor
in
jae
shll
mov
int3
daa
lea
cli
divl
and
lret
lods
outsl
inc
and
fsubr
lahf
outsl
enter
out
inc
sahf
pop
fimuls
jge
sbb
xchg
xor
bndldx
xchg
jmp
jns
dec
repnz
or
lock
xlat
outsb
stos
int
mov
and
dec
andl
jne
cwtl
addr16
icebp
mov
lods
cmp
mov
dec
lock
mov
out
sub
xchg
jbe
ret
outsl
stos
shl
out
mov
mov
test
or
dec
lret
insb
sbb
xor
jl
xor
enter
imul
pop
hlt
aaa
lahf
addr16
add
inc
inc
cmp
inc
mov
addr16
or
cmpsl
lods
movsl
sub
jno
inc
out
pop
cmpsl
jns
into
enter
imul
xchg
shr
pusha
adc
pop
adc
dec
stos
pop
dec
mov
and
cltd
push
insb
pop
js
add
adc
and
imul
or
push
add
push
inc
or
jecxz
ss
xor
xlat
mov
push
jl
mov
stc
sahf
out
repnz
cld
cli
dec
sti
or
sahf
addr16
dec
stc
mov
jmp
scas
rcll
push
xchg
loop
aad
icebp
out
dec
lds
fistl
shlb
push
mov
or
push
call
repnz
push
out
xchg
orb
leave
mov
iret
add
dec
xorb
icebp
sub
and
xor
hlt
bound
outsb
out
stc
and
sti
lock
jae
insb
add
outsb
addb
push
and
outsl
into
cmp
jmp
stos
or
and
insb
sbb
lods
fdivl
loopne
add
pop
sahf
push
jl
insl
jbe
lock
sub
mov
call
test
pop
push
jae
ret
sub
es
loope
xchg
mov
cmp
pushf
jle
enter
push
pop
rcr
jl
sbb
mov
sub
dec
push
repnz
sub
add
in
div
repnz
rcr
add
in
clc
outsb
pop
repz
cmp
sahf
cmc
in
pop
inc
fnstsw
jle
cltd
adc
fldl
jmp
jo
aas
add
xchg
or
and
jl,pn
xchg
sahf
in
add
lahf
ret
sub
fs
fimuls
aad
clc
test
insb
dec
insl
mov
mov
add
mov
pop
imul
sti
pop
aam
stos
or
jo
cmc
icebp
jbe,pn
pop
mov
push
stc
fadd
sub
push
rclb
xchg
pop
outsl
imull
sbb
lods
test
stc
jbe
clc
mov
or
orb
negb
out
hlt
lret
add
or
fsubrl
imul
test
and
popa
adc
sub
adc
push
fmuls
aas
out
shl
xchg
or
dec
fisubrl
adc
lcall
movsl
test
sbb
push
out
das
jbe
lcall
sbb
cmp
outsb
dec
xchg
lret
add
jns
stc
mov
jmp
xchg
stos
cmp
lcall
test
or
or
pop
stc
push
ja
mov
mov
xor
adc
int3
mov
shlb
andb
jmp
daa
push
push
adc
cmp
mov
idivl
mov
mov
in
mov
aas
test
ja
add
inc
fwait
test
lods
out
out
pop
vphaddbq
add
cmp
and
in
lcall
inc
and
sub
xor
sbb
and
aaa
jne
int3
or
ljmp
testl
lahf
pop
push
ret
cmpsb
subl
inc
pop
out
push
dec
inc
and
mov
gs
and
jl
lock
xor
push
ror
cwtl
clc
mov
cmp
dec
scas
shl
jge
xchg
push
xchg
fisttpll
das
orl
push
out
out
dec
lock
jne
cltd
shlb
jecxz
mov
out
mov
sub
xor
adc
push
insl
cmpsb
imul
sub
dec
aas
inc
roll
cmc
jbe
mov
jno
inc
scas
mov
sub
push
lret
sbb
cmpsb
loopne
sarl
xor
jnp
mov
mov
in
out
aad
adc
cwtl
inc
or
mov
in
jns
in
int
inc
xchg
jecxz
ja
std
imul
imul
scas
pop
sarl
lea
inc
lock
pop
mov
cmp
adcl
cmc
aas
pop
hlt
sub
ja
add
cmpl
cld
lock
out
mov
mov
pushf
clc
cmp
push
adcl
adc
pop
rcrb
dec
mov
push
sbb
std
cmpb
push
xor
lret
add
push
js
outsl
bound
enter
push
and
out
mov
fs
push
pop
icebp
push
sbb
out
test
mov
sub
gs
idivl
test
repz
imul
xchg
pop
or
jb
sbb
xchg
dec
mov
imul
cld
mov
adc
lock
out
iret
imul
xchg
pop
mov
outsb
mov
movsl
popf
jmp
dec
clc
insl
mov
mov
or
lods
xor
and
aas
add
adc
jne
mov
mov
inc
jg
dec
in
decl
mov
mov
sbb
pushl
lock
test
sub
xchg
in
test
or
xchg
or
jae
mov
pop
cs
rcr
or
add
imul
subl
mov
sbb
xor
push
inc
push
mov
jmp
outsl
cmp
movsl
sub
rclb
add
mov
or
push
fdivrl
sti
sti
cmp
fwait
pop
xor
cld
in
sub
ret
out
push
add
xor
clc
repz
lcall
pop
mov
pop
cli
jbe
lds
sub
fs
pushf
cltd
push
lds
aam
dec
xor
mov
and
decl
adc
push
jge
and
cli
mov
jbe
das
lahf
mov
mov
in
cmp
adc
cmp
loope
call
dec
insl
dec
push
pop
subb
hlt
jne
mov
outsl
or
pop
cmp
rorb
xchg
cmpsb
xorl
lret
aaa
ffree
les
sub
jg
lods
ret
dec
shr
xchg
jne
mov
out
imul
xor
loope
inc
test
sbb
rcr
add
and
das
adc
mov
xchg
pop
push
std
jno
mov
xlat
leave
gs
fs
or
xor
ss
push
cld
sub
xchg
repz
and
in
in
or
dec
add
daa
in
aas
arpl
repz
sti
int3
cli
jg
std
ss
test
sbb
mulb
add
cmp
movsl
xchg
in
sub
test
jne
aas
mov
rorb
notb
pop
test
lret
in
xor
into
sbb
fdivrs
mov
adcb
enter
pop
in
xchg
xor
dec
jmp
subl
aas
dec
sbb
sub
decl
jo
and
mov
pop
test
cld
imul
into
imull
cmp
shrl
hlt
and
test
sbb
in
insl
das
mov
cmp
test
leave
jo
out
jno
jl
addr16
aas
xor
or
mov
cmp
sbb
sub
fbld
sbb
fs
cmp
pop
shl
or
and
decl
icebp
aas
negb
cmp
and
sbb
pop
scas
lods
cmpsl
decl
fnstsw
xor
ret
ja
xor
inc
sti
mulb
pop
imulb
ss
xor
sub
xlat
add
mov
es
and
repz
jo
jno
cmp
and
repz
mov
lahf
adc
int3
push
out
jle
xchg
bound
in
in
lahf
mov
lahf
jne
mull
outsb
xchg
or
sbb
dec
cld
outsl
mov
adc
cmp
or
xchg
jle
or
lock
lock
test
imull
or
xor
ds
lock
cmc
test
ds
aaa
notl
jle
fwait
into
cmp
push
cmc
xchg
pop
xor
add
xchg
hlt
popf
jbe
cld
rcll
mov
jmp
jmp
mov
dec
lock
adc
mov
gs
pop
push
dec
mov
icebp
and
dec
add
imul
jo
xor
sub
rcl
adc
call
ss
pop
orb
dec
push
mov
imul
fldcw
cmp
rcr
not
mov
mov
cli
out
inc
std
pop
adc
insb
pop
jl
rcrl
stc
ret
daa
jg
sub
inc
mov
popf
push
jge
push
lock
in
lahf
rcll
es
mov
leave
and
push
into
xor
pop
pop
or
push
mov
xor
repz
sti
test
mov
fbstp
push
stos
xor
jle
gs
sub
mov
xor
ret
pusha
adc
rcrl
sbb
mov
icebp
rol
lahf
loopne
shlb
pop
pop
out
std
icebp
lret
subb
call
insl
sbb
adc
xchg
ja
jnp
sbb
enter
cltd
in
push
out
jae
fwait
jb
and
lsl
or
fdivrl
jno
inc
or
mov
dec
repnz
and
push
jecxz
sub
cmp
out
addr16
xor
lods
outsl
pop
inc
cmpsb
rcrb
test
addr16
cmp
xchg
arpl
leave
sbbb
pop
adc
std
dec
push
mov
and
pop
aaa
fwait
and
push
mov
mov
js
push
insb
addr16
mov
push
sbb
sbb
dec
std
loopne
repz
or
push
mov
dec
cmp
das
in
sbb
sahf
push
xor
push
bound
sti
xor
jae
pop
out
adc
std
imul
dec
push
mov
lods
push
jge
cmp
or
jo
pop
sbb
jb
hlt
imul
xchg
adc
repnz
mov
push
movsl
scas
fistpl
pop
mov
or
pop
jnp
callw
jo
push
cmpsb
or
inc
and
or
cmpsl
sub
jne
std
movsb
das
xchg
xor
mov
and
cmp
cmp
jmp
sbb
rclb
and
and
ret
mov
flds
sub
push
or
aas
das
push
in
testb
jge
fs
mov
sbb
lahf
dec
or
sub
or
sbb
jbe
mov
out
mov
imul
pushf
out
cmp
or
push
pop
jle
test
pusha
call
jne
jo
test
cmpl
shrl
or
inc
pusha
ret
inc
and
dec
sbb
cmc
dec
push
pushf
cmpsl
push
add
xchg
lods
cmp
xor
pop
in
das
sbb
je
xor
das
stc
cs
push
xor
lret
push
icebp
popf
dec
jno
or
adc
addr16
adc
sub
in
add
addl
mov
jl
jecxz
xchg
jg
mov
mulb
mov
hlt
std
gs
cmpsl
inc
add
fs
lods
aas
or
jo
je
and
test
jne
jg
cmp
xor
push
inc
cltd
push
mov
sbb
lock
pop
mov
xlat
mov
mov
jb
jmp
das
call
jg
cld
or
adc
and
negb
push
adc
loopne
cmc
mov
into
jnp
in
aas
bound
cmp
in
xchg
jae
loope
jae
ja
nop
stos
pop
cs
jno
jb
and
jge
xchg
mov
or
push
rolb
in
sar
std
dec
ret
push
test
decb
adc
fldl
mov
mov
jae
testl
pushf
cmp
pop
xchg
test
lcall
add
adc
xor
loopne
fimull
pop
dec
mov
and
jl
inc
jge
mov
pop
cmp
xor
and
pop
dec
scas
and
mov
sub
mov
and
pop
into
add
cli
stos
insb
inc
out
adc
xor
lahf
adc
lock
xchg
mov
leave
push
adc
dec
sti
pusha
pop
in
push
mov
call
pusha
or
and
out
and
or
mov
fildll
push
mov
je
and
mov
mov
dec
outsl
inc
adc
pop
stc
scas
jae
mov
sub
fwait
add
adc
push
addl
xor
lea
repnz
or
fistpl
outsb
and
xlat
push
mov
clc
pop
xor
sbb
pop
int3
stos
mov
mov
pop
and
xchg
jb
cmp
ss
and
std
sub
xchg
adc
into
sarl
stos
outsl
int3
cmp
dec
test
xchg
insl
mov
pop
out
aam
mov
and
cmp
mov
sbb
dec
scas
iret
push
fisttpll
cmp
mov
stc
pop
xor
bnd
cmpsb
daa
sub
cmpsl
call
stc
cmpsb
fdivl
and
stos
mov
dec
cmc
setl
sub
adc
add
test
test
loopne
pusha
jae
rcrl
shl
das
sub
fstps
lock
lahf
js
mov
repz
mov
mov
mov
or
mov
add
add
jne
cmc
sbb
mov
add
dec
push
repnz
nop
fildll
fisttpl
ret
pop
cmp
push
mov
add
addl
testb
mov
scas
adc
mov
or
dec
jl
xor
add
push
out
sub
ss
insl
punpcklbw
mov
imul
hlt
test
cld
mov
and
mov
dec
or
sub
add
mov
and
xor
and
cmp
aaa
lahf
lock
jg
xchg
jmp
pop
push
xchg
cmpsl
jge
push
les
pushf
pop
sidtl
lahf
jb
mov
jg
call
aas
add
fistl
mov
decl
in
jg
imul
clc
into
mov
cmp
jb
jnp
std
mov
imul
add
pop
mov
sub
cmpsb
cmp
pop
cli
sub
lahf
stc
sub
sbb
jge
test
sbb
or
jp
mov
push
jns
dec
aas
dec
dec
and
clc
lea
mov
mov
in
out
xorb
inc
ficomps
out
mov
xchg
add
cli
inc
jge
movsl
cmp
push
rolb
ja
in
add
sub
aad
ffree
in
dec
in
mov
lcall
data16
je
cmpl
testl
add
cli
int3
fdivrp
dec
sub
in
jmp
testl
cli
jb
jg
fstpl
out
cld
dec
jg
sbb
jae
xchg
clc
jge
ja
jmp
sti
aas
shrb
outsl
ret
jecxz
mov
inc
dec
orb
sub
rorb
mov
mov
imul
mov
push
fwait
sti
mov
ret
jg
xchg
or
xchg
imul
cmp
xchg
fldl
push
jae
scas
xor
in
xchg
or
dec
cmp
sub
cmpsb
push
bound
dec
or
mov
cli
stos
jle
rorb
add
inc
mov
je
pushf
lea
jmp
add
pop
or
bnd
js
sub
mov
pusha
cmp
mov
pop
sbb
mov
clc
xor
mov
repnz
xor
jl
fsincos
cmp
jae
loopne
jne
push
sti
rorl
xor
stc
mov
mov
std
in
fnstsw
test
mov
imull
jp
nop
std
jns
push
jns
inc
push
loopne
scas
dec
mov
shlb
jg
push
aad
fwait
or
scas
xchg
outsl
shl
iret
mov
shlb
xor
clc
sub
les
mov
nop
lret
call
popa
mov
inc
mov
js,pt
jno
arpl
dec
push
outsl
outsl
fs
jno
gs
int
or
push
sarb
xchg
notb
ret
jae
test
in
mov
push
adc
cmc
pop
mov
es
and
and
cmpl
ljmp
push
sbb
dec
xchg
es
insl
push
cmp
das
fwait
inc
in
inc
divb
push
out
mov
std
xlat
mov
and
xchg
mov
out
jp,pt
sbb
xor
mov
loopne
cwtl
scas
pop
xor
dec
in
inc
in
call
mov
mov
lcall
int
aas
movsl
cwtl
mov
fidivl
mov
fs
hlt
cmc
aas
inc
fs
or
test
adc
pop
stos
stos
jo
or
loop
mov
xchg
pop
fisubrs
push
dec
mov
adc
adc
in
xor
push
jl
bound
inc
cld
add
adc
inc
fcmovnb
movsl
outsl
sbb
dec
inc
je
out
ss
inc
arpl
dec
out
hlt
idiv
push
cmpsb
xchg
mov
and
sub
push
mulb
out
divb
es
mov
pop
test
lods
fwait
das
cmc
dec
inc
add
aaa
std
fisttpll
out
mov
mov
fisubrs
je
icebp
cmc
or
mov
clc
push
push
pop
inc
mov
call
shll
add
popa
cmpsb
xchg
mov
jg
add
mov
fwait
cmp
push
add
pop
mov
shrl
lea
scas
or
xor
push
mov
shrl
dec
adc
repz
lahf
pop
test
gs
test
dec
xchg
inc
sbb
sub
jp
inc
ds
adc
or
and
pop
pop
in
fs
out
push
mov
adcb
dec
xchg
pop
cld
add
push
ljmp
lods
or
inc
jae
roll
mov
lods
cmp
sub
ret
or
dec
push
js
mov
cmp
xor
stos
add
jge
or
test
and
cmp
insb
mov
or
pushf
je
decl
adc
lret
sub
pop
dec
cli
mov
or
imul
xlat
ja
add
dec
fiadds
sub
sar
sti
or
pop
stos
call
xor
add
std
movsb
in
call
cs
mov
cmp
imul
les
sysenter
or
sub
aaa
call
test
xrelease
rorb
jne
jns
jb
mov
das
out
cmp
push
es
int
mov
sbb
test
fldt
lds
ljmp
xor
cld
xor
je
lock
ja
addl
insb
jg
gs
outsl
icebp
jmp
mov
fildll
std
not
imul
addb
fs
cld
inc
popa
or
idiv
imulb
and
sub
inc
mov
into
xchg
das
jnp
ljmp
or
xchg
jg
lret
out
or
scas
mov
mov
mov
daa
imul
aaa
inc
ret
mov
out
pop
outsl
jbe
test
stos
xchg
repnz
aas
push
cli
xor
popl
popf
push
es
adc
or
scas
and
cli
mov
lock
repz
das
or
sub
lcall
aaa
fisubs
sti
fnstcw
mov
mov
and
das
out
push
arpl
mov
daa
and
and
leave
int
jo
xor
push
or
mov
push
mov
mov
mov
clc
les
xor
and
flds
or
xor
insb
js
cmp
jb
test
sub
decb
out
in
mov
xchg
sbb
lds
pop
repnz
adc
xor
and
add
stc
outsl
jl
dec
call
mov
dec
sti
sub
iret
sbb
pop
pop
dec
int
push
xchg
adcb
lret
insb
sub
lock
rcll
add
or
jle
or
popa
sar
jae
sub
sub
cmp
rol
stos
popf
push
cwtl
jbe
xchg
mov
popf
mov
out
lds
cmc
push
sub
lods
add
pop
xor
and
jb
mov
insb
jo
jae
jge
jne
mov
or
insl
mov
icebp
in
stc
and
rcrb
push
jno
mov
sub
dec
cmc
inc
ret
std
or
stos
jmp
add
roll
and
dec
fstl
lcall
or
sbb
std
push
arpl
popf
mov
add
lret
stos
iret
fwait
cmp
out
ret
inc
aam
xor
cmp
cmp
jmp
cltd
xor
add
and
fisttps
push
dec
xor
add
mov
jecxz
rcr
cmpb
add
addr16
jle
cmp
pop
push
xchg
cli
std
pop
mov
mov
xchg
mov
ja
inc
stc
sbbb
test
imull
xor
or
adc
lods
mov
cli
or
sub
pop
movzwl
stos
mov
mov
add
stc
test
shr
cmp
mov
jno
dec
mov
ljmp
sbb
sbb
xchg
jnp
fcmovu
mov
pop
sub
fs
scas
cmc
pop
rcll
xadd
and
sub
mov
jnp
lods
mov
pop
jne
pop
or
cmp
pop
dec
mov
or
push
inc
inc
insl
out
int3
subb
sub
and
jp
fsubp
or
idivl
divl
leave
das
sbb
jae
ret
lret
call
bound
bnd
add
loope
std
out
pop
in
sbb
mov
sbb
dec
pop
jnp
mov
out
pop
jecxz
out
ss
mov
fisubrs
push
jmp
jnp
mov
push
inc
push
cmpsb
in
das
xor
roll
cwtl
clc
rclb
xchg
lret
ss
xchg
ret
leave
repnz
hlt
jecxz
loopew
xchg
dec
divl
cmpsl
sub
push
ror
mov
pop
nop
pop
add
lret
add
shll
mov
loop
add
movsb
sbb
in
xchg
out
jno
mov
sbb
jbe
dec
out
sub
clc
icebp
xchg
jecxz
shrb
xor
ljmp
sub
fstps
mov
xor
clc
push
mov
ret
hlt
push
jbe
add
xchg
inc
push
sbb
mov
and
stc
imul
das
dec
sbb
mov
mov
mov
out
in
mov
fdiv
std
out
mov
cmp
lods
cmp
add
inc
sub
mov
ret
addl
mov
add
stos
aad
movsb
dec
jnp
clc
cld
add
pop
jae
dec
mov
sub
push
fdivs
dec
fidivs
cmp
push
push
or
xchg
cmc
insb
pusha
ret
inc
dec
lahf
adc
inc
cld
aas
inc
mov
dec
pushl
std
sub
adc
lret
jnp
gs
dec
inc
int3
cli
mov
pop
push
add
sbb
loop
in
sub
shrl
xchg
inc
icebp
xchg
pop
ret
cmp
push
fisubrl
jl
jne
inc
outsb
bound
cmpsl
fwait
mov
pushf
jmp
xchg
xor
add
fnstcw
push
jb
add
inc
frstor
outsb
cmp
xchg
cltd
sub
or
and
das
and
lods
addr16
mov
jge
sbb
lock
sub
add
shr
outsl
mov
sub
into
ret
test
into
lock
hlt
mov
jns
add
shr
jle
std
movl
test
dec
lea
pop
xor
aas
fisubrs
stos
rcrl
sti
push
fisubrs
sub
sub
sbb
test
jg
enter
xchg
repz
push
aam
xor
in
push
sarl
loopne
dec
push
xor
and
push
mov
mov
sub
xor
out
pop
lock
bound
cs
and
inc
clc
mov
mov
ret
push
sbb
loope
gs
arpl
push
mov
pop
jge
mov
xor
cld
inc
pop
mov
cmpsb
outsl
das
pop
popf
fwait
in
pop
jl
das
adc
cld
rorb
mov
lock
mov
test
xor
dec
mov
fdivl
xchg
jo
test
push
in
jb
popa
scas
js
outsl
icebp
lods
or
repz
cmc
mov
and
imul
ds
inc
ljmp
xchg
mov
mov
inc
mov
mov
clc
pushl
scas
es
dec
or
pop
push
inc
and
adc
fs
mov
outsl
mov
dec
xor
jecxz
jo
jno
repz
fwait
stos
aas
cvtdq2ps
add
cmc
inc
add
repz
fidivs
push
pop
add
adc
push
std
into
sahf
loope
pop
pop
xchg
hlt
or
test
cmc
xor
in
add
fstps
sbb
pop
cmpsb
sub
cltd
frstor
aaa
stc
dec
cmpsb
fwait
leave
aaa
cmpsb
std
in
icebp
outsl
and
dec
push
push
pushf
inc
sub
cwtl
pop
push
mov
xchg
ja
fldl
stc
dec
je
sahf
or
and
push
and
insl
das
in
je
add
dec
std
inc
mov
adc
scas
mov
pop
pop
xchg
mov
div
and
fdiv
cmpl
test
jbe
inc
xor
daa
mov
jae
scas
scas
mov
push
aas
cmp
in
mov
insb
in
filds
cmp
sub
dec
mov
dec
scas
mov
xor
add
push
jle
pop
and
or
cmc
push
add
adc
jmp
shlb
add
pushf
aas
rcl
in
movsb
fs
adc
in
fstl
adc
testb
adcl
push
orl
mov
cmp
out
cmp
and
shl
shrb
push
repz
pop
mov
leave
repnz
push
ss
insl
mov
icebp
cmp
push
push
inc
or
mov
inc
ja
inc
push
ljmp
jne
or
xor
mov
in
aaa
decl
lods
lods
cmpsl
das
sbb
cld
jg
pop
sub
orl
push
jnp
mov
add
or
sub
js
push
cmc
pop
out
insb
mov
mov
je
add
xlat
push
push
push
popa
cld
ljmp
icebp
sub
and
outsl
divl
idivl
jns
sbb
popa
pop
js
push
clc
push
cmpsl
inc
add
or
xchg
mov
push
jmp
shll
mov
dec
mov
sub
mov
dec
cmc
fdivp
dec
rcl
sub
les
mov
pop
or
stc
and
pop
stc
or
push
jae
xor
add
jb
lds
rol
nop
mov
adc
cld
sti
push
add
hlt
add
mov
or
mov
push
dec
sti
scas
mov
adc
jnp
das
push
addr16
cld
pop
lret
sti
repnz
mov
shrl
bound
cld
sub
jg
sbb
jns
cld
pop
fcoml
mov
sub
popa
add
dec
cmp
adc
orb
and
add
mov
or
mov
roll
loop
jg
cmp
dec
pop
pop
push
mov
outsl
jne
xchg
push
repz
adc
repz
adc
lret
decl
push
ud0
mov
push
sar
lock
mov
lock
adc
in
push
or
shll
ja
lret
popf
jo
lock
stos
cld
adc
sbb
dec
or
aam
or
sub
jnp
and
aad
mov
or
sub
repnz
adc
fwait
in
adc
clc
mov
stos
and
stc
push
sbb
xchg
mov
popf
pop
into
lea
add
pop
div
pop
iret
enter
pop
mov
cmp
cmp
and
push
es
lods
sbb
gs
add
sub
daa
mov
movsl
xchg
imul
fistps
mov
sti
dec
lock
fwait
jo
mov
dec
dec
imul
dec
repnz
sti
lock
das
ficomps
sti
fdivp
jno
sbb
dec
cmp
imul
ljmp
inc
daa
scas
pop
add
inc
data16
jno
popa
dec
dec
sub
or
dec
xor
dec
lods
or
mov
test
inc
imull
scas
leave
ja
out
mov
imul
lods
xchg
into
inc
mov
pop
aad
pop
push
test
sub
sbb
sub
es
repz
cmp
mov
in
jae,pn
xchg
nop
ss
push
pushf
repz
and
mov
xchg
outsl
sbb
and
xchg
dec
xor
jae
push
jns
repnz
and
mov
shll
or
sar
push
lea
jg
in
and
cwtl
jne
or
pop
lods
sbb
fwait
cmp
xor
dec
data16
rcrl
and
push
pop
icebp
add
movsl
cmp
imul
lods
outsl
sbb
cld
jo
ret
testb
fsubr
mov
lcall
mov
sub
push
mov
jae
or
lods
gs
jge
movsb
test
and
dec
pusha
mov
sarl
xchg
lock
push
xchg
or
ljmp
adc
xlat
push
mov
fbld
sbb
dec
mov
out
pop
mov
push
scas
rcll
into
repz
aaa
lds
and
and
adc
aad
jno
jnp
jno
dec
and
shll
call
cmpsl
push
neg
clc
imul
addr16
jne
jb
add
jle
dec
push
cmpsl
dec
ret
lods
xor
test
enter
push
push
popf
mov
push
cltd
mov
push
imul
jl
xor
es
dec
insl
movsl
or
daa
pop
mov
mov
int3
xchg
and
adc
lods
sub
add
ljmp
push
pop
sub
mov
sti
call
pop
scas
lock
das
test
mov
sti
orl
mov
xor
push
jp
and
adc
fildl
or
fwait
mov
fstpl
test
mov
aas
inc
jmp
lods
ljmp
mov
mov
sahf
mov
inc
pop
adc
shrl
mov
jo
cmp
mov
mov
sti
inc
out
mov
insl
lahf
mov
inc
add
push
in
scas
lods
loopne
out
jo
in
sub
outsb
lods
fidivrs
movsl
clc
sub
shrb
lock
leave
mov
out
cmp
fwait
cmc
fdivr
outsb
loopne
cs
mov
mov
jl
hlt
cld
popf
incb
lret
mov
push
arpl
shrl
jge
mov
movsl
push
sarb
ja
add
int3
cltd
add
das
scas
in
and
stos
scas
cmpsb
leave
std
jg
sub
ljmp
out
xchg
shll
aad
adc
pop
and
aad
ja
jo
cli
ret
inc
icebp
xor
daa
push
push
repnz
testb
movsl
mov
insl
cmp
jo
lods
sti
insl
insb
sbb
sbb
dec
out
pop
imul
scas
jae
add
lock
repz
push
and
in
test
addr16
scas
jns
add
mov
fadds
mov
rolb
push
dec
testb
mov
repz
fdivl
test
xchg
xchg
add
xor
in
orl
pop
dec
jp
push
mov
imull
adc
jnp
xor
dec
enter
sub
inc
lea
aas
test
jmp
xor
leave
adc
jb
test
ja
test
lock
adc
push
add
into
push
gs
fistl
adc
jo
in
push
pop
jp
push
add
ficompl
cwtl
xor
jle
xchg
and
rorl
jp
je
and
out
ds
pop
adc
jmp
cmp
jbe
jge
xchg
arpl
sub
sbb
xchg
and
std
jo
xor
mov
clc
xor
xor
sub
push
or
sbb
sub
andb
cmp
fmul
add
cmp
sbb
push
add
pop
push
call
cmc
aam
dec
pop
ret
adc
inc
pushl
outsl
jne
aas
outsl
dec
outsb
cmpsl
fmuls
scas
push
mov
ret
repz
mov
fwait
icebp
push
lods
out
mov
dec
movsl
fwait
jle
sahf
mov
std
ja
mov
je
xor
std
add
ss
or
add
jecxz
not
xchg
sbb
bound
ret
inc
cltd
flds
jge
cwtl
xor
popf
push
pop
into
add
loop
aaa
bound
and
rcll
cmc
lcall
dec
es
and
popa
jno
or
cmp
xchg
cmp
pop
pop
and
scas
icebp
scas
cmp
insl
mov
cmc
mov
or
add
bound
and
pop
das
push
js
jnp
lods
fwait
out
cmp
adc
into
cwtl
fs
decl
mov
jns
sub
ret
mov
enter
sub
cmc
or
out
or
or
xchg
mov
dec
jge
jne
xor
es
decl
cli
mov
jg
call
sub
push
outsl
std
xchg
int3
push
lods
ds
shl
rorl
into
dec
mov
popf
shlb
imul
daa
cmp
rcl
xor
pop
push
push
dec
dec
cmp
aas
lock
frstor
mov
rol
sbb
loopne
xor
and
inc
addr16
aad
or
dec
cs
repz
pop
cmp
sbb
ret
adc
nop
and
pop
pop
pop
stc
push
or
pop
and
scas
into
dec
adc
cltd
push
fidivrs
out
sar
lock
or
xchg
mov
jno
into
sar
dec
jg
stos
inc
cld
lods
sbb
inc
and
xor
cld
repz
push
pop
sub
add
lock
pop
xorl
sbb
imul
xchg
incl
stc
and
pop
icebp
inc
das
dec
adc
add
add
cmc
mov
jecxz
add
lcall
ret
sub
and
cmp
sarb
scas
fisttpll
repnz
dec
dec
repnz
gs
ljmp
decb
dec
cmp
cmp
imull
aad
sub
inc
jmp
inc
push
dec
lcall
dec
out
push
stos
cmc
jge
inc
in
dec
mov
ret
idivb
mov
push
inc
shll
mov
xor
mov
sbb
pop
arpl
and
mov
pop
mov
cltd
mov
ret
imul
lret
sti
int
mov
mov
lods
push
pop
repnz
test
adc
adc
roll
dec
psubd
movsl
cmp
out
popa
rorb
outsl
mov
cmpl
inc
or
repz
dec
xor
xor
push
lea
mov
jae
popf
inc
add
mov
data16
add
adc
mov
mov
imul
negb
jno
and
jp
mul
div
stc
xchg
jp
rcll
push
xchg
jae
clc
imul
inc
sub
fidivs
mov
sbb
jge
mov
lret
push
sarb
pop
aas
mov
pop
jg
inc
and
lock
shll
ret
inc
sbb
bnd
outsl
pop
or
dec
cwtl
jo
in
fdiv
mov
cmp
adcl
aaa
dec
add
xchg
popf
xchg
stos
fbld
in
and
dec
pop
test
sub
mov
pop
push
xchg
test
dec
test
sbb
sbb
dec
dec
lods
out
and
pop
in
insl
out
and
inc
sub
ret
adc
xor
aas
insl
cltd
clc
loopne
xor
out
mov
in
sbb
std
jg
jo
inc
fdivs
std
subl
das
sub
inc
mov
and
repz
cmp
inc
inc
repz
in
les
cmc
popf
push
aaa
pop
in
test
adcl
xchg
call
es
xchg
test
mov
xchg
ljmp
cs
mov
pop
jae
sbb
pop
js
out
push
inc
lcall
roll
lods
sub
mov
or
mov
das
mov
sub
sub
in
xchg
mov
ret
out
out
mov
jns
sub
jne
decl
xchg
and
lcall
xor
or
int3
jae
mov
sub
or
stc
insl
or
scas
out
xchg
fwait
sbb
adc
ret
pop
and
mov
jae
mov
cmc
mov
psllq
lcall
into
mov
jmp
into
and
fwait
test
cs
or
fs
das
sbb
pop
ret
cmp
mov
sbb
into
outsl
imul
cmp
mov
mov
iret
mov
test
shrb
xor
iret
popf
nop
pop
push
xor
pop
loopne
out
jmp
add
push
movsl
pop
or
push
push
mov
lret
ret
ret
inc
aas
adc
xor
idiv
andb
jmp
rcl
dec
mov
les
cmp
dec
pop
mov
ja
fsubl
lock
cmc
dec
out
and
xchg
cmp
dec
pop
mov
lods
cli
movsb
fdivrs
stos
pop
je
sti
loope
add
cltd
push
test
xchg
pushf
push
sahf
clc
addr16
outsl
ret
pop
jecxz
pop
xchg
icebp
in
bound
sub
insl
and
sbbl
lcall
cs
mov
out
fnstenv
icebp
and
subl
out
incl
jmp
mov
lock
loopne
pop
and
test
aas
sysenter
jg
loopne
or
mov
stc
das
mov
xor
push
or
inc
insl
je
ljmp
sub
and
cli
mov
mov
jbe
movsl
inc
testb
sub
dec
sub
scas
dec
fldcw
jb
xlat
jl
mov
adc
push
jb
faddp
rcrb
xchg
mov
in
nop
xor
jle
imul
std
dec
mov
in
jecxz
xchg
add
cli
sub
je
jbe
std
mov
adc
and
rcrl
mov
cmp
sbb
scas
mov
loope
xor
fwait
mov
push
dec
add
add
jne
jne
jo
inc
shl
mov
outsl
sbb
pop
mov
mov
repnz
inc
cmp
dec
outsl
sub
sub
ja
repnz
imul
jae
gs
scas
ja
dec
lods
in
repz
in
xor
stc
mov
mov
adc
ja
cmp
add
mov
cmc
scas
jae
adcl
dec
cs
dec
in
cltd
sbbl
mov
push
mov
lret
mov
shl
adc
xor
xor
stc
adc
test
imul
sbb
sbb
sarl
insl
jmp
std
cmpsl
add
repz
xor
pop
add
das
pop
xor
ljmp
cld
mov
xor
addb
popf
std
stos
out
fcmovnbe
xchg
fidivs
mov
sbb
mov
popa
lock
shrb
mov
leave
dec
cmp
push
repz
or
popa
push
push
sub
in
sub
lods
scas
jle
fucomip
out
daa
push
insl
fisttpl
addr16
inc
jmp
and
and
fidivl
outsl
lock
cli
repnz
nop
or
push
rcll
lret
xor
imul
mov
cmpl
sub
jg
pop
das
jge
xchg
push
pop
iret
cmp
imul
scas
lret
leave
ret
dec
fs
imulb
sbb
shrl
jge
in
lret
lret
jecxz
xchg
sub
fisttps
lock
jns
or
xor
imul
jmp
movsb
xor
sbbb
sub
clc
lret
nopl
adc
cmp
xchg
lcall
add
test
inc
bound
mov
xchg
into
xor
push
aaa
into
mov
inc
out
mov
pop
sarl
pop
sbbb
sbb
adc
sbb
pop
pop
pop
jno
mov
push
inc
rorl
or
adc
std
dec
or
add
in
add
scas
test
fsubrs
pop
sbb
std
or
lcall
mov
hlt
out
outsb
and
adc
cld
inc
frstor
sub
sbb
rcr
ja
std
sar
nop
ret
aam
jne
orl
out
lea
xor
inc
push
cmpsl
das
cmc
mov
into
sbb
or
adc
testl
mov
gs
sbb
dec
out
lea
in
rcrl
iret
or
inc
mov
jae
jae
std
push
fcoml
incb
fisttpll
sub
jae
jge
cltd
and
rorl
pop
dec
push
test
push
ret
out
aam
in
aad
sbb
pop
div
xor
inc
cmp
or
cwtl
lods
add
cmp
xor
dec
jno
adc
cmp
xor
outsl
dec
xor
in
xor
inc
xchg
mov
icebp
push
mov
loopne
icebp
cmp
fdivl
fs
outsl
nop
pusha
add
fs
lahf
xchg
push
sahf
test
mov
lods
popf
shr
nop
std
filds
ficomps
xchg
aad
jns
pop
xchg
ret
xchg
aam
fwait
iret
pop
out
dec
jns
fadds
and
in
or
pop
inc
lea
xchg
std
jecxz
lret
cmp
fcompp
xchg
loop
lock
cmpb
shlb
sub
es
add
pop
jno
pmaddwd
xchg
sub
cmp
imull
cltd
mov
jle
xor
push
push
jns
dec
lock
cld
sbb
cmpsl
cld
test
cld
mov
jecxz
add
cmp
pop
push
les
push
sbb
idiv
xchg
out
push
jo
decb
sbb
repz
icebp
int
sbb
jp
jne
int3
popa
sbb
fdivrs
jle
or
push
repnz
adc
or
mov
insb
cmc
jmp
sub
notl
fisubrs
sbb
push
xchg
sub
push
out
aaa
mulb
mov
ret
das
mov
in
add
fwait
imul
in
pop
dec
maskmovq
negl
sar
rol
popf
pop
mov
adc
fiaddl
and
sbbb
idivb
ja
fs
fadd
sub
mov
pop
fadd
sbb
jo
sbb
push
xor
out
add
or
test
test
push
cmp
and
lcall
sti
jg
in
xor
or
cmp
scas
pop
or
stc
into
loop
mov
lret
mov
mov
push
adc
add
ret
or
xlat
push
jecxz
lods
in
sub
pop
pop
lcall
pop
add
adc
lock
out
push
cmp
outsb
push
add
mov
inc
push
shl
fwait
into
leave
mov
fstpl
xor
cld
xchg
pop
ds
insl
pushf
cmp
sbb
push
pop
pop
pop
push
in
pop
pop
in
divl
xor
fisttpll
jns
xor
shrl
outsb
dec
mov
sbb
out
cli
inc
popf
icebp
das
xor
in
or
push
popa
sbb
lock
jl
ja
or
dec
lcall
stos
cmpb
bound
lahf
mov
jmp
inc
js
pop
jge
cmpsl
jg
outsl
lea
rolb
sbb
jbe
jle
imul
sbb
push
cld
mov
add
dec
movl
stc
adc
sbb
popf
inc
jae
call
cmpsl
cli
out
int
lea
test
jg
popf
das
imulb
mov
cmpsl
jno
enter
lock
test
gs
ljmp
mov
add
cmp
stc
ret
pop
test
mov
or
lods
inc
sbb
push
lock
push
insl
or
aaa
sbb
out
pop
repnz
fs
sbb
push
sbb
jecxz
loope
dec
pslld
push
jg
idivb
movsl
sub
mov
call
mov
dec
sbb
out
push
or
jl
xchg
jns
jb
xchg
push
fbstp
jbe
shrl
mov
inc
mov
jb
out
mov
add
sbb
fnsave
jg
out
cltd
fdivrs
int3
cltd
xchg
lods
mov
stos
sbbb
sbb
jg
and
push
pop
push
inc
inc
mov
jl
jp
jge
jae
sbb
hlt
lods
ja
outsl
out
jo
sub
in
imul
lret
dec
add
aas
mov
jmp
or
bound
mov
fidivl
stc
rcll
stos
jg
and
sub
ss
je
or
icebp
imul
shr
cmp
mov
sbb
in
jle
test
cmp
mov
je
int3
andl
outsb
or
and
sti
aas
adc
xor
adc
scas
test
fistl
in
out
xor
stos
inc
in
ret
cmp
mov
xor
sub
cld
imul
lret
push
xlat
rep
fadd
stc
jae
lock
out
sub
mov
aad
dec
sbb
test
add
lret
popf
push
in
cmpl
movsl
outsl
pushf
jg
movsb
jmp
mov
fisubs
std
push
fadd
pop
add
psubb
push
in
inc
aad
test
into
cmp
testl
xchg
div
or
push
mov
ss
pop
imul
xchg
xor
push
adc
or
jb
sub
mov
or
test
mov
adc
lods
aaa
out
xlat
dec
aas
cmc
jo
orl
jnp
mov
int3
xor
sbb
or
shlb
repnz
push
int
cld
inc
insb
jge
out
aas
gs
cmp
or
lods
sub
or
xchg
xor
sarb
jb
adc
xchg
icebp
pop
and
jnp
xchg
mov
je
or
and
push
mov
adc
lods
gs
sti
adc
es
add
cmpb
or
or
jns
clc
xchg
inc
dec
mov
jbe
in
jnp
in
or
adc
ret
add
mov
mov
jns
sbb
ret
test
ret
xchg
in
jg
nop
cmp
mov
adc
jae
jbe
je
lret
lods
fsubl
sub
inc
jl
or
sbb
std
in
fldenv
mov
andl
push
sub
and
dec
jo
cmc
pop
es
or
in
inc
dec
xor
sar
dec
or
cmp
xchg
push
scas
out
es
shl
call
or
lahf
mov
jmp
test
xor
lods
test
sarb
xor
push
mov
cs
out
mov
and
pop
push
jae
xchg
lahf
cmp
sub
mov
pop
or
aam
aad
cmp
mov
mov
and
add
xchg
mov
out
xchg
jl
lret
mov
adc
inc
repnz
icebp
dec
jne
pop
sti
or
or
or
lahf
dec
mov
ret
lret
ss
xor
rcll
in
test
mov
out
push
js
mov
mov
ss
mov
jmp
clc
or
ret
mov
fstpt
sar
ret
pop
test
psrad
mov
jge
xlat
adc
into
aam
xor
ljmp
pop
out
push
sti
xchg
dec
jl
mov
jo
mov
adcl
mov
jle
mov
push
add
scas
test
sub
push
add
loope
jecxz
pushf
mov
mov
daa
shrb
ret
inc
xchg
jecxz
jge
cli
pop
jb
cld
aas
xchg
sbb
xor
ljmp
jg
test
orb
push
and
adc
dec
xor
xor
add
dec
dec
in
and
xor
sub
pop
out
scas
and
aas
sub
add
push
stos
ja
xchg
add
xlat
jno
cmp
imul
jecxz
rol
lea
lret
and
push
popf
xchg
cmc
jle
mov
dec
sti
sub
inc
pop
stos
shl
or
xchg
and
mov
outsb
pop
ja
out
mov
cmp
imul
sbb
cmp
or
and
in
in
shl
das
xor
repnz
stos
call
mov
fiaddl
inc
mov
aas
subb
jae
mov
stos
sub
add
mov
xor
subb
and
push
ror
adc
aad
mov
rcrl
ds
push
loopne
das
stc
xor
cld
push
pop
fwait
jmp
cli
mov
jo
adc
out
or
jns
sub
adc
hlt
or
mov
push
mov
sahf
mov
push
mov
test
cmpsl
fimull
xchg
pop
or
loope
into
adc
sbb
dec
jl
icebp
rsqrtps
dec
mov
shlb
jb
out
repz
rclb
mov
repnz
out
out
rcrl
data16
cmpsl
jecxz
xor
add
loopne
cld
out
adc
decb
pushl
adc
cmp
cmpsl
jb
lods
incl
jae
orb
rol
cmp
loope
or
aad
into
popa
push
clc
shrb
fcompl
icebp
add
fdivrs
lock
pop
ret
and
cltd
loopne
out
shrl
and
cld
pop
mov
or
aas
inc
ror
sub
fbstp
dec
mov
in
ror
cmc
loop
and
jns
call
jne
pop
mov
subl
push
fcmovb
mov
or
xchg
and
outsb
sar
call
push
ret
dec
xchg
jle
xorb
nop
pusha
addr16
cmc
das
jo
mov
jl
sub
push
cli
mov
cmpsl
mov
add
and
test
je
mov
and
sbb
sub
shr
lcall
lds
dec
push
adc
or
add
dec
mov
icebp
aad
jo
sarl
and
sbb
push
pop
adc
sub
xor
popa
movd
pop
popa
addr16
popa
adc
mov
inc
pop
jne
popa
cld
popa
test
adc
movsl
loope
mov
xor
insb
loopne
mul
enter
jge
popa
sahf
cwtl
xor
sbb
nop
stos
stc
subl
in
push
mov
mov
adc
nop
pop
hlt
testb
out
xor
lods
inc
cmpsb
mov
lods
icebp
or
inc
cld
and
mov
clc
loop
loope
adc
loope
mov
in
lahf
addb
add
xchg
sti
jmp
movsb
push
jle
dec
mov
mov
push
rcl
mov
fnsave
mov
mov
dec
inc
xchg
or
inc
icebp
cmpb
dec
nop
dec
shr
rolb
mov
mov
dec
popf
imul
lcall
push
scas
lret
sub
push
jns
adcb
jle
or
iret
ds
push
xchg
lock
mov
and
adc
or
subb
out
xchg
push
push
mov
cli
cmp
add
movsb
mov
xor
push
lcall
sub
stos
pop
mov
add
out
dec
call
sti
ds
mov
and
addb
push
jge
lret
xchg
or
jo
push
cld
shl
jb
pop
imul
dec
cwtl
mov
ljmp
sti
insl
dec
in
sti
mov
sub
outsl
mov
mov
push
out
push
outsl
add
dec
adc
fildll
ljmp
xor
outsl
or
outsl
sub
in
into
inc
out
sub
iret
sub
sub
jp
push
and
push
imull
pop
push
cmpsl
lret
mov
lcallw
inc
hlt
jns
pushf
jle
ja
imull
sbb
push
sub
or
and
shr
or
mov
push
push
movsl
std
xor
cmpsl
lock
nop
cld
popa
clc
mov
call
aaa
adc
imul
pop
inc
movsl
in
ret
add
mov
inc
push
scas
mov
push
sbb
insb
adc
out
nop
lea
scas
ja
cli
jecxz
imul
mov
aad
cmp
mov
mov
je
push
adc
or
ret
jne
gs
dec
mov
jge
out
fdivrl
inc
lods
dec
cmp
mov
mov
dec
jmp
dec
jge
aad
sub
lret
shrl
std
pushl
inc
int3
push
clc
inc
std
mov
pop
pop
or
jl
and
cmpsl
or
int
dec
stos
out
inc
das
stc
fldcw
inc
inc
std
and
lcall
mov
out
idivl
clc
int3
mov
fwait
imul
inc
stos
repz
push
movsb
adc
sbbb
lock
cmpsb
cmp
pushf
std
mov
dec
aad
gs
xchg
stos
lcall
or
popa
xor
cmc
jne
mov
rclb
xor
push
ficoms
and
fadds
push
cmp
adc
cmp
cltd
aam
dec
xor
lock
push
push
repnz
in
lock
icebp
les
xchg
fwait
mov
cld
and
mov
xor
in
sahf
pop
cmp
dec
cmc
leave
repz
xor
scas
popf
icebp
mov
mov
xor
mov
in
mov
dec
mov
sub
es
pop
pop
lret
xchg
test
sbb
pop
mov
js
test
jle
andl
xchg
int3
scas
jecxz
or
lea
pop
xchg
mov
mov
scas
push
lods
push
lret
in
dec
ret
divl
dec
jbe
cmp
jg
orl
fstp
pushf
mov
lods
cmp
dec
shr
or
pushf
mov
imul
add
dec
sub
xor
cmc
ret
dec
ljmp
pop
add
push
xor
pop
and
jnp
out
push
or
insl
cld
mov
sub
jp
mov
gs
popf
inc
sbbb
add
xchg
inc
int
mov
cwtl
cmp
andb
lret
dec
jp
sbb
sub
std
mov
cld
push
mov
jg
or
insb
out
mov
and
shlb
pop
sbb
cmc
notb
cmp
or
int3
sbb
out
cmp
pop
sub
or
sbb
outsb
fsubrl
into
in
pop
idivb
push
and
shll
jno
mov
test
jb
dec
ljmp
in
dec
ljmp
hlt
imul
sub
dec
push
or
cs
cmpsl
sbb
outsb
cmpsb
inc
pop
bound
and
cli
xadd
sub
xor
adcb
dec
add
in
or
pop
inc
loope
add
mov
psllq
in
lock
out
aam
push
push
inc
cmp
mov
xor
dec
ret
icebp
bound
dec
xor
out
jo
pop
imul
jo
outsl
jmp
call
popf
pop
mov
adc
add
in
pushf
pop
stos
stos
add
jne
repz
xor
mov
jo
xor
fsubp
xchg
cs
xor
push
fcoml
inc
lret
sub
jnp
xchg
fld
in
add
xorb
repnz
or
sbb
fsubp
push
test
std
sbb
push
and
out
adc
aas
sub
scas
xlat
pop
lods
dec
sbb
jno
in
xchg
clc
sbbb
icebp
repz
jo
mov
gs
insl
mov
jb
push
lcall
scas
ds
mov
mull
scas
mov
sub
dec
and
and
mov
test
aad
std
mov
cmp
in
sti
mov
out
cltd
sub
idiv
scas
mov
pop
xor
cli
loopne
mov
fnsave
in
jge
mov
dec
sub
add
mov
std
jae,pn
pop
adc
mov
sub
aas
and
jle
xlat
mull
test
pop
stos
imul
test
adc
inc
sub
sbb
imul
and
es
pushf
inc
repnz
stc
repz
lahf
lods
jg
imul
bnd
xor
jae
jo
jbe
fwait
sub
jno
sub
fidivrl
mov
pop
push
inc
add
mov
mov
cli
xchg
in
out
lods
mov
dec
xchg
das
sahf
dec
xor
add
outsl
mov
pop
les
and
pop
inc
pop
mov
mov
sbb
cs
fidivrs
std
cli
cmc
or
mov
in
xor
jecxz
bound
mov
sub
xor
das
xchg
call
aad
les
out
inc
lock
loope
or
ja
xor
mov
xchg
push
stc
repz
or
daa
lds
cmp
int3
sahf
fcompl
inc
jnp
out
test
lods
jp
inc
pop
dec
je
ljmp
mov
scas
repz
pushl
insb
outsb
int
sti
movsb
jo
leave
out
cmp
cmp
stos
rcrl
insl
xor
sub
mov
cmc
fadd
hlt
dec
and
or
pop
jno
decl
fucomp
mov
les
arpl
pop
pop
mov
mov
mov
loop
call
in
jl
sbb
flds
jg
iret
lret
cld
lods
in
push
sti
ds
pop
ffreep
dec
insl
and
pop
sbb
and
sbb
aad
out
cmp
xchg
jge
stos
xchg
cli
xor
add
ret
sbbb
mov
pop
imul
movsl
bound
xor
add
subb
scas
dec
rcrl
cmovne
subl
or
xor
lods
dec
fucomp
mov
roll
jmp
cmp
daa
jnp
stos
insb
xor
rol
xlat
xor
and
mov
cmp
adc
push
cmpsl
testl
jns
jnp
in
dec
cmp
and
xchg
adc
fstpl
imull
imul
test
pop
push
les
jp
into
popf
fcmovb
icebp
jg
mov
dec
xchg
out
adc
out
pop
je
fmull
scas
dec
in
push
add
arpl
cmpsl
inc
jno
daa
mov
jecxz
or
mov
sbb
mov
test
jnp
add
push
pop
cs
cmc
and
pop
andb
in
xchg
cmc
ja
incl
dec
mov
inc
js
cld
cmc
js
adc
iret
addr16
or
adc
mov
movsl
aad
fmuls
lods
clc
cmc
jns
push
adc
jnp
adc
add
and
popa
xchg
or
or
xchg
in
test
or
and
test
jo
out
mov
out
nop
dec
dec
sbb
inc
push
je
push
jp
rcll
outsb
sbb
mov
ljmp
out
pop
mov
cmpsl
sub
mov
xchg
or
and
cmp
arpl
mov
stos
pop
rclb
sub
mov
adc
sub
pop
mov
inc
sbb
pop
xchg
and
out
pop
jp
pop
or
in
xor
push
rolb
pop
mov
pop
and
test
xchg
inc
sbb
aaa
and
inc
or
or
out
outsl
sbb
mov
dec
bnd
xchg
xor
pop
add
dec
lret
imul
rorb
movsb
sub
lea
in
pop
fsubr
ret
idiv
out
adcb
xchg
push
std
mov
cmp
dec
sub
test
or
adc
ret
dec
push
punpckhdq
xor
filds
push
xor
cmp
or
jl
xchg
add
test
sub
xchg
lods
scas
lea
lcall
orl
adc
popa
and
lea
sub
sbb
mov
pop
push
addr16
jb
bound
jmp
pop
dec
add
inc
cli
mov
and
xchg
das
adc
in
test
jnp
dec
sbb
icebp
inc
std
test
ret
jae
sub
sub
mov
stos
dec
bound
mov
imul
div
mov
or
adc
lahf
xchg
pop
push
mov
mov
mov
in
push
xchg
insb
out
dec
lock
fcoms
pop
or
inc
sbb
push
test
or
leave
sar
incl
or
imul
mov
cmpb
dec
and
imul
fnstsw
dec
insb
rcl
cmp
mov
inc
pop
add
cld
or
aaa
ret
adc
pusha
adc
jae
push
dec
pop
and
mov
xor
dec
push
mov
js
cmp
add
testb
mov
rcrb
add
je
clc
scas
js
outsl
outsl
in
fsubs
sbb
outsl
sub
jg
dec
push
or
and
mov
or
ret
jge
ljmp
rol
test
out
arpl
ja
sbb
dec
jle
and
iret
sbb
fs
dec
std
and
hlt
out
in
in
test
pusha
addr16
sti
and
pop
cli
shll
cs
lret
andb
sarl
scas
inc
xchg
push
sbb
xor
mov
xor
mov
adc
dec
hlt
cmp
scas
movsl
mov
out
push
gs
jecxz
ss
adc
sub
mov
xlat
ret
enter
rorl
int3
dec
mov
pop
add
sbb
mov
lcall
das
fwait
cmp
testl
mov
inc
adc
adc
add
out
mov
cmp
xor
jno
outsl
xchg
push
rol
fisubrl
stos
cs
cmp
out
mov
rcrb
mov
es
aaa
sbb
add
rcrl
icebp
ja
repnz
cmpsl
xchg
ljmp
sti
push
jns
mov
out
out
and
push
and
out
dec
insb
push
jo
lcall
pushf
jne
ret
cld
and
lret
or
push
bound
imul
push
icebp
jo
std
inc
push
fistpl
sub
sbb
in
add
movsl
push
xchg
push
sbb
inc
and
lcall
dec
testb
inc
daa
int3
imul
sbb
pop
or
mov
adc
xor
sub
fwait
adc
push
into
xchg
sti
xor
jmp
stos
lods
dec
mov
hlt
mov
flds
and
jge
bound
xlat
sub
cmc
icebp
outsb
jmp
mov
xor
pushf
xchg
hlt
dec
std
icebp
lods
popa
mov
jecxz
stc
test
daa
nop
xchg
cli
cmp
adc
mov
sub
scas
jns
ret
pop
cmp
mov
imul
scas
sub
in
sub
sbb
dec
adc
push
lods
jns
or
sahf
push
repnz
lods
popa
cmc
and
fisubl
out
and
in
mov
scas
and
mov
sti
ret
xor
xchg
inc
xchg
cmp
inc
lret
inc
add
imul
mov
inc
addl
hlt
dec
push
sti
cmc
daa
lods
cmpsl
push
mov
adc
test
adcb
and
jae
enter
sub
push
mov
fildl
inc
inc
in
mov
cmp
lock
mov
mov
dec
sbb
mov
bound
test
xchg
push
jno
dec
nop
aam
imul
cmp
aas
in
je
sbb
fidivl
mov
dec
outsb
in
out
or
dec
cwtl
in
ds
mov
inc
out
adc
mov
xchg
push
pop
xchg
dec
push
enter
add
pushf
or
dec
adc
adc
imul
mov
shl
lcall
stc
pop
insl
dec
adc
xchg
ja
pushf
outsb
push
xchg
inc
jecxz
out
mov
pop
scas
and
push
into
fnstsw
jmp
dec
and
testl
inc
and
cld
or
fdiv
icebp
aas
cmp
es
idiv
sub
jge
mov
cmp
call
push
dec
jo
ret
ja
jle
aas
jae
stos
stc
or
loope
xor
mov
pop
mov
aam
cwtl
or
insl
rorb
push
cs
loopne
out
pop
jge
dec
lods
int
movsl
inc
xlat
in
pop
cwtl
sub
rol
mov
xor
dec
cmp
xchg
outsb
sub
dec
push
dec
imul
jae
shrb
fcmovbe
jne
inc
push
ss
sub
adc
jge
arpl
fstl
mov
mov
stc
out
stos
fnsave
aaa
mov
call
dec
jns
and
fwait
jge
jecxz
ss
xor
mov
mov
mulb
ja
add
daa
cld
sbb
shrl
inc
std
pop
xor
jns
shlb
scas
iret
mov
mov
mov
or
xchg
sub
cmp
or
mov
mov
lcall
lea
adc
adc
or
hlt
fdivr
jno
ss
shll
call
ja
pop
jmp
mov
mov
ret
mov
dec
jae
dec
mov
cmc
cmpsb
nop
clc
xchg
stos
xlat
dec
mov
lret
or
imull
outsl
inc
jbe
das
mov
jbe
insb
or
mov
and
jg
lcall
aad
and
add
inc
pushf
push
sub
sbb
aam
adc
cmpsl
ret
add
mov
test
sbb
pop
mov
mov
ret
cmp
xor
lret
pop
stc
dec
test
fiaddl
fldl
add
or
lea
shrl
add
scas
dec
enter
loopne
push
dec
clc
aas
cmp
inc
test
mov
stc
cld
nop
gs
in
jae
xlat
inc
in
jns
inc
fcomi
mov
aas
fsubl
inc
stc
jmp
repz
mov
mov
sub
fs
and
call
sub
inc
mov
or
xor
sub
mov
xchg
sub
mov
push
sub
out
and
out
and
aas
mov
xchg
jp
or
arpl
mov
cmp
mov
push
pop
xor
imul
pop
inc
jae
sub
adc
fdivrs
and
mov
pop
inc
lea
jb
sbb
scas
repz
es
aaa
scas
jmp
inc
add
lods
imul
loope
sub
ds
adc
pop
mov
arpl
mov
jl
repz
out
fs
lahf
adc
jne
ret
lcall
lods
int3
sub
insb
xchg
adc
sbb
lahf
pop
ja
outsl
bnd
insl
dec
test
in
dec
shrb
mov
dec
daa
inc
andl
nop
dec
cmpsb
mov
xor
pushf
ss
pop
add
mov
xchg
xor
ret
and
sbb
test
and
out
sbb
popa
pushf
and
mov
clc
test
sub
lds
lods
std
icebp
shl
lds
mov
push
dec
repz
roll
movsl
out
mov
jnp
in
sub
scas
int
pop
mov
sbb
outsb
jns
dec
je
mov
mov
cs
scas
test
lods
push
insb
outsb
adc
jae
enter
bound
ret
lods
cli
dec
xor
out
orb
lret
jbe
mov
jb
jae
cmp
in
ja
push
mov
xor
cld
mov
or
mov
cmp
lods
in
bound
popa
lods
and
fidivrl
scas
or
nop
scas
push
lods
fwait
sub
movsb
sbb
xor
sub
lret
pop
jg
into
adc
xchg
lock
or
mov
cld
stos
in
cs
adc
out
out
or
les
inc
insb
xchg
popa
sbb
xorl
sub
sub
gs
xchg
cmp
aas
scas
cmc
xor
add
adc
leave
xor
xchg
jmp
adc
je
add
movsb
repnz
or
pop
mov
rol
cmp
mov
test
mov
or
or
and
sbb
sub
movsb
outsb
fldt
sbb
call
idiv
inc
dec
jae
cld
loop
lahf
dec
sti
or
into
inc
jge
add
outsl
cmc
fnstsw
jmp
dec
das
test
in
mov
test
fiadds
movsl
dec
sbb
and
jns
popf
mov
ljmp
je
and
or
dec
insb
jmp
shl
adc
inc
jnp
fdivrl
testb
sub
fstps
add
xchg
shlb
lock
std
outsl
cmp
mov
aaa
adc
sbb
cld
mov
push
cld
dec
into
repz
sub
lcall
cmpsb
dec
add
dec
repnz
daa
mov
int3
mov
outsb
shrb
mov
mov
add
or
cli
repz
loop
insb
push
dec
cs
add
inc
mov
cli
inc
jns
insl
imul
jp
jns
stos
fidivs
loope
sub
ja
mov
pusha
and
sbb
and
pop
jo
fsubl
cli
pop
or
push
or
jmp
or
sub
inc
push
test
psubusb
cmp
popa
dec
xor
pop
out
inc
dec
xlat
repnz
mov
or
add
jl
jo
sub
test
or
das
test
sub
das
mov
sbb
dec
jne
in
shlb
push
repnz
pop
or
mov
mov
sub
xchg
out
dec
fcoml
mov
dec
jb
xchg
sub
out
ret
push
fcomip
or
sahf
cmpl
scas
inc
sahf
mov
shlb
dec
test
ss
testb
pop
lahf
mov
test
xor
pusha
xchg
ja
outsl
inc
adc
sbb
lahf
add
rcr
pop
lcall
mov
inc
or
in
sbb
dec
sub
les
xlat
dec
mov
lret
das
push
jmp
dec
adc
repz
stos
xchg
push
loope
fistl
push
stos
mov
in
mov
pop
dec
dec
aaa
arpl
imul
in
scas
fstpt
and
xchg
scas
jl
cmp
dec
push
and
cmp
out
push
addr16
fwait
out
leave
adc
xor
xor
out
je
add
cltd
adc
clc
std
shll
imul
mov
iret
pushf
mov
imul
mov
push
sti
ljmp
jecxz
pop
fwait
dec
sub
jg
repz
stos
out
test
adc
or
fwait
jb
test
std
pop
ss
and
add
ror
add
dec
adc
and
loopne
pop
rcl
clc
jno
movsl
daa
aam
or
cmp
cmp
cwtl
mov
movsl
mov
popa
fdiv
divb
dec
in
xor
aad
xor
inc
cld
test
push
mov
mov
add
std
adc
negl
or
dec
cltd
adc
dec
sub
mov
fidivs
cli
jbe
dec
sub
pop
gs
bnd
sub
and
sub
cmp
out
sub
andb
loope
dec
jl
leave
gs
scas
mov
imul
cmp
shr
out
xchg
xchg
pop
popa
jg
mov
sub
and
or
cmpsb
into
aaa
sbb
pop
sub
stc
out
icebp
fdivrl
rol
push
lea
repnz
dec
jbe
cltd
inc
aas
adc
mov
push
rorl
cmc
mov
repz
lahf
mov
inc
inc
jne
stc
out
jg
cmpsl
adc
into
pushf
out
jbe
jg
ss
xchg
dec
test
jne
inc
xchg
xchg
fnstcw
cmp
dec
sbb
repz
add
rolb
pop
or
repnz
or
push
mov
sbb
inc
enter
or
jae,pt
stc
sti
inc
mov
sbb
xor
push
iret
dec
sti
dec
jmp
lods
cmpsl
mov
cld
or
push
cmp
inc
pop
imul
cmp
in
lret
ds
push
iret
cld
dec
lea
sub
jns
stos
mov
cmpsb
roll
test
mov
xlat
sti
fwait
jne
xor
jno
jne
inc
data16
and
or
or
cmp
repz
push
dec
adc
in
popl
xchg
aam
mov
or
aas
jae
data16
xchg
loope
add
clc
sub
mov
pop
mov
xlat
and
xor
stc
dec
insl
rorl
dec
std
sahf
clc
std
xchg
out
fsubr
dec
jno
xor
mov
ret
jns
and
add
aas
pop
cmp
std
outsb
cmp
cltd
mov
or
imul
lahf
cmp
pushf
dec
aas
hlt
outsl
fwait
pop
lea
outsl
cmp
outsl
outsb
inc
insl
jae
out
shrb
ja
aas
and
jg
inc
and
daa
aam
xor
movsl
dec
push
cmp
pop
negb
dec
mov
sti
cmp
cmp
mov
sti
ja
pop
sbbb
lods
into
jbe
aas
repz
mov
lock
jge
hlt
rolb
lock
dec
imul
sub
cmp
mov
jbe
int3
jnp
jmp
std
call
fbld
dec
dec
or
test
push
leave
pop
and
aas
mov
mov
out
psllw
inc
das
ss
adc
cmp
bound
xchg
add
subb
jge
pop
aad
cmp
and
add
hlt
mov
or
addr16
sub
pop
pop
nop
push
sbb
xor
fcomp
dec
dec
pushf
pop
push
pop
imul
cmp
jg
push
std
push
sbb
xor
add
xchg
jmp
sub
cmpsb
outsl
jge,pt
adc
pop
push
mov
mov
or
sub
dec
cmc
sbb
xchg
stc
cmc
pop
and
sbb
int3
fisubrl
push
mov
xor
cli
cmp
lock
pop
add
std
push
fildll
or
sub
jmp
mov
lock
sbb
or
icebp
lret
push
out
idivl
or
inc
rorl
in
lock
pop
cli
into
mov
test
fs
roll
icebp
repz
cmp
aas
fwait
cmp
push
adc
movsl
dec
pusha
es
es
or
test
bound
dec
push
lret
adc
in
lret
aaa
ljmp
aaa
pop
test
push
int
or
bound
loop
mov
cmp
push
mov
out
repz
adc
iret
dec
pushf
dec
cld
sub
ja
mov
cmp
jle
std
mov
scas
call
stos
dec
adc
mov
mov
xor
pop
jnp
push
sbb
inc
push
ret
dec
ja
cld
ret
pop
ret
subl
jnp
xchg
sbb
out
dec
mov
fmul
jnp
ret
xor
jecxz
mov
adcl
es
rcll
into
test
or
ret
pop
popf
into
incl
mov
cmp
sub
mov
cmp
bound
test
push
test
decl
jmp
mov
jbe
xchg
inc
test
loopne
fcomp
mov
dec
icebp
push
cmp
imul
es
xor
push
in
int3
pushf
cld
or
movsl
mov
jo
cli
xor
out
daa
and
rolb
fists
push
aas
out
mov
clc
mov
pushl
into
aas
prefetchw
out
and
mov
mov
mov
xor
push
jo
or
sbb
inc
stos
subb
in
cmp
push
daa
ljmp
mov
clc
and
jl
enter
clc
insl
dec
mov
sbb
sub
pop
inc
push
scas
push
fsub
xchg
inc
inc
aaa
stc
xor
test
fs
mov
xchg
cmp
fidivl
out
scas
pushf
pop
inc
gs
sub
add
mov
out
jg
pop
mov
rdmsr
jb
push
cld
push
std
and
mov
sti
sub
xchg
stc
outsl
inc
jae
jl
fmul
leave
or
imul
mov
das
cmp
xor
push
dec
sub
or
sbb
rcrl
js
mov
lcall
push
sbb
jl
shrb
pop
xorl
cld
push
mov
ss
mov
push
icebp
out
dec
lret
jo
loopne
cs
mov
dec
rol
xor
push
ret
push
dec
xor
imul
mov
arpl
dec
push
sbb
rclb
dec
cmp
cli
add
rorl
dec
aaa
hlt
test
or
adc
rorl
loopne
stos
or
sbb
and
sub
adc
outsl
nop
in
push
dec
loop
dec
gs
enter
add
push
scas
movsl
scas
mov
dec
jns
gs
pop
xchg
testb
pushf
das
adc
icebp
and
daa
hlt
dec
ficompl
jg
cmp
push
push
into
push
fdivl
cmpsb
or
xor
or
cltd
daa
pop
jne
in
add
cmp
call
push
das
call
fimuls
jnp
in
test
mov
push
aaa
or
pushf
out
dec
mov
in
mov
decl
cmc
clc
in
fdivr
fisubl
into
mov
ret
and
lock
sar
cmp
fwait
out
and
out
dec
mov
mov
dec
test
and
lods
add
jg
imul
and
sub
add
shll
ljmp
test
rcrl
pop
add
mov
ret
in
or
ret
jae
sbb
mov
adc
jae
xchg
mov
and
cmp
sub
das
push
in
push
fidivrs
mov
fcomi
jl
fldt
push
fisttps
fisttpl
xchg
or
xor
xor
mulb
call
imul
bound
add
rorl
insl
dec
pop
ret
out
imul
repz
pop
hlt
hlt
lret
mov
dec
cmpsl
cmpsb
mov
out
ds
and
dec
fisubrl
mov
sbb
mov
pop
add
cmp
test
adcb
leave
cmp
mov
dec
outsl
add
out
nop
push
sti
jle
dec
repz
sbb
lcall
mov
and
and
and
gs
xchg
dec
and
aas
cltd
mov
lcall
testl
jnp
insb
stc
scas
cmp
into
mov
incl
ljmp
or
in
ret
add
cmp
div
lods
mov
adc
ds
or
int3
sti
stc
mov
ret
mov
cmp
add
in
mov
test
ds
or
sbb
mov
imul
adc
sti
sub
mov
add
inc
jne
dec
std
mov
loop
mov
aaa
repnz
nop
jg
div
sti
out
sub
xchg
fcoms
cs
adcl
insb
cmp
aad
add
and
and
fdivp
sbb
adc
ret
pop
cmpsl
enter
cld
mov
push
cvttps2pi
jecxz
mov
stc
and
cmp
add
or
das
or
or
adc
lea
pushf
inc
hlt
pop
shll
test
in
mov
cmp
in
testl
nop
xlat
std
out
addr16
outsl
jl
outsb
xchg
push
cmc
mov
cld
adc
fs
jne
xlat
scas
gs
sub
pop
mov
inc
push
insl
xor
icebp
xorl
mov
outsl
sti
jl
xor
out
and
out
imul
nop
add
inc
cmp
fwait
dec
out
ja
out
xorb
push
sbb
in
movsl
call
in
and
repnz
int
test
lock
jb
adc
mull
movsl
shll
xor
jl
or
mov
divb
cmp
std
in
dec
cmp
dec
push
sub
add
add
lods
dec
pusha
xor
dec
xchg
out
mov
ja
cld
sarl
adc
mov
xor
inc
mov
push
sbb
sub
jl
adc
loop
inc
jb
mov
icebp
shll
mov
sti
mov
gs
loope
adcb
and
shr
dec
jl
scas
xchg
dec
dec
sbb
pushf
push
lret
repnz
incl
testb
gs
xchg
xchg
mov
add
into
pop
pop
ja
imul
js
popf
add
inc
pop
sub
jge
clc
lahf
aaa
movsb
repz
popa
imul
lods
test
sti
dec
std
imul
jbe
clc
outsl
repnz
stos
mov
ret
bnd
bound
fldt
xchg
dec
divl
daa
sar
sub
std
adc
jno
in
leave
xchg
rcrb
cmpl
sub
mov
ja
xchg
ds
in
push
out
mov
cmp
ret
cld
clc
jp
mov
jmp
sbbl
aad
dec
pop
adc
test
or
mov
lahf
mov
pop
popa
or
sub
mov
pop
aad
and
jmp
mov
add
shlb
mov
ds
pop
stc
push
push
jbe
punpckldq
jl
sti
out
mull
cmp
insb
xor
sub
cmpsl
pop
sub
fisubs
pop
push
cld
test
in
or
mov
cld
sahf
mov
mov
scas
lods
addr16
adc
int3
andl
insb
sbb
push
cmc
mov
jle
or
sbb
adc
cld
dec
fidivrl
xor
add
cmc
pop
or
movsb
aas
adc
es
icebp
dec
das
std
jne
pusha
test
movsb
cli
xlat
iret
sti
push
fcompl
arpl
clc
add
fdivp
jmp
pushf
pop
or
pop
inc
shrb
xor
test
repz
cmpb
sarl
scas
mov
cs
andl
imulb
pop
lock
into
ja
rcrb
imul
pop
repz
mov
jne
sbb
sub
inc
pop
sub
and
add
jne
fcompl
pop
pop
push
xchg
sbb
fstl
mov
or
leave
mov
jno
add
lock
xchg
sbb
add
dec
cmpsb
aad
xor
and
xchg
push
pop
dec
les
dec
inc
inc
push
xchg
ret
icebp
dec
std
mov
sahf
adc
sub
sidtl
jecxz
dec
mov
xor
pop
xchg
push
imul
out
out
add
dec
xor
pushf
mov
testb
scas
or
into
movsb
and
fsubrl
mov
or
mov
dec
mov
pushf
out
mov
divl
jp
push
cld
pop
jle
xchg
cmp
test
pmaxub
pop
adc
mov
jmp
push
mov
xchg
dec
push
pusha
ja
pop
and
out
pop
sub
sbb
mov
daa
into
pop
inc
rcrb
sub
aas
mov
scas
pop
sub
mov
movsb
and
std
mov
or
stos
dec
cmp
movsl
jge
jo
popf
sub
or
adc
add
push
inc
xchg
or
mov
lods
incl
cld
jle
push
jns
cld
push
sbb
daa
setae
test
imul
cwtl
add
mov
push
add
out
xor
frstor
paddb
repnz
loop
adc
paddsw
or
outsl
cmp
fimull
sub
xor
inc
mov
repnz
clc
pop
cltd
in
xchg
andb
jne
das
cmp
lahf
xchg
mov
vpshlq
lret
mov
loope
mov
pop
adc
fwait
lcall
sbb
pop
and
and
xchg
adc
aam
dec
pop
mov
xchg
shrb
mov
pop
rcll
scas
or
sbb
cltd
dec
cmp
jge
mov
setnp
push
cmp
mov
push
imul
add
or
push
cmp
pusha
adc
ret
sbb
std
mov
in
shl
cmp
mov
xor
and
dec
das
push
xorl
test
xor
push
mov
idivl
adc
adc
rorb
xchg
aam
ret
clc
mov
and
xor
add
sbb
outsl
roll
pushf
jno
loope
sbb
pop
arpl
push
cmc
faddl
dec
dec
ja
sbb
imul
mov
jbe
xchg
and
std
rep
mov
aam
aaa
and
cmpb
ja
icebp
xor
shll
mov
ljmp
push
add
out
imul
xlat
push
sbb
idivl
fidivl
int3
std
aas
mov
mov
mov
outsl
add
fisubl
rclb
adc
stos
std
jge
outsl
ret
add
out
hlt
inc
xchg
sub
adc
dec
xor
inc
cmp
xor
stos
fildll
cwtl
fistpll
mov
adc
into
imul
cmp
out
push
gs
dec
xlat
add
outsl
push
sahf
leave
pop
movsb
fbstp
loope
or
jo
cmp
xorb
loopne
out
ja
cld
mov
lcall
loopne
push
adc
insb
jl
or
mov
push
repz
pusha
sbb
jno
or
mov
xsha256
cmpsb
push
lret
stos
dec
lahf
add
insb
mov
dec
add
mov
loope
decb
jne
cs
xchg
sbb
test
imul
je
test
out
jnp
lods
jmp
sbb
add
int3
fstl
imul
pop
pop
add
jnp
imul
test
cmpb
or
mov
xchg
or
repz
add
and
and
xor
pushf
inc
jno
lock
sahf
aam
stc
lcall
insl
add
inc
jne
loope
add
out
cmpsb
sub
and
in
imul
in
xchg
mov
inc
sub
or
call
scas
into
pop
xor
xchg
xchg
push
and
cltd
mov
ss
repz
jo
shrb
divl
out
int3
fldt
jae
das
outsl
jg
outsb
aad
mov
xor
lock
inc
jne
out
mov
and
sbb
adc
iret
mov
inc
jnp
cli
mov
lea
push
jnp
or
addb
jo
xor
lahf
mov
and
lock
icebp
fdivp
or
dec
fimull
cmp
shll
sti
popa
mov
push
mov
mov
push
repz
mov
aas
cs
shr
es
icebp
add
cmpl
in
ret
push
je
loope
shlb
repz
or
pop
shl
jecxz
fbstp
jg
loope
clc
add
cld
sbb
data16
cmp
fmuls
mov
fisubl
jbe
jl
xchg
sbb
stc
ljmp
andl
shrb
mov
out
daa
xchg
inc
dec
mov
dec
loope
mov
add
dec
add
push
mov
enter
dec
cli
idivb
xchg
clc
mov
iret
hlt
mov
std
ret
or
shll
aas
pusha
mov
adc
mov
or
pop
adc
popa
idivl
sti
sub
xor
add
dec
inc
rcrl
das
loopne
fstpl
loopne
pop
repnz
scas
pop
popa
fisubrs
fcoms
cld
mov
cli
adc
lock
jo
sub
enter
incb
cli
add
lock
mov
shl
test
cmp
dec
or
add
fwait
lods
sbb
notl
or
sub
xor
push
jmp
mov
xchg
jno
dec
lods
imul
push
push
sub
out
lods
ret
stos
jg
dec
sarb
pusha
out
xchg
jle
mov
aas
jle
sbb
dec
lret
cld
add
mov
xchg
lahf
aaa
add
sbb
or
out
aam
mov
ret
cmpsl
dec
stos
push
inc
xchg
popa
icebp
test
mov
pop
inc
adc
xlat
data16
ds
cmp
bound
shrb
and
lock
loopne
inc
negl
dec
pop
roll
inc
lcall
inc
jp
out
inc
shl
adc
lret
std
sbbb
sub
adc
adc
mov
std
or
stc
out
adc
jb
push
inc
andb
add
inc
and
adc
and
push
or
js
jae
js
cld
ljmp
inc
push
sbb
cmp
mov
dec
jmp
lods
push
in
cld
add
roll
sar
cmp
jbe
ucomiss
notb
mov
sbb
out
pop
divb
push
lods
push
xchg
jle
or
stc
idiv
dec
mov
rol
xchg
sub
stos
mov
cs
jne
sub
sarb
jno
orb
mov
mov
insb
scas
out
out
adc
jb
add
loope
adc
es
push
test
into
testb
sbb
add
fistps
push
xchg
lods
imul
mov
xor
xlat
outsl
inc
roll
push
ljmp
movsl
aas
sbb
inc
int3
pop
mov
cmp
faddl
daa
or
insb
sbb
mov
sbb
pushf
into
xor
out
mov
gs
mov
and
sarb
or
push
repz
in
mov
adc
mov
mov
inc
or
xor
jmp
and
subl
sub
add
jbe
mov
imul
xor
push
ret
insl
lds
mov
add
daa
add
cmpsb
or
push
lods
sub
push
ret
jb
mov
inc
hlt
adc
inc
das
in
inc
and
xchg
mov
repz
test
add
mov
fwait
dec
inc
sahf
hlt
jle
je
pop
mov
or
dec
out
in
adcb
inc
ljmp
mov
mov
jge
outsl
mov
cmp
fimull
add
cltd
inc
pop
xlat
ret
xlat
xchg
xchg
sbb
lret
je
lcall
jae
xor
loop
sti
lret
mov
rolb
movsl
rolb
and
or
scas
xlat
ret
cld
pop
pop
jle
and
mov
lods
mov
adc
adc
shll
pop
push
out
mov
fsubrl
imull
insl
loopne
xor
icebp
and
add
mov
jns
aaa
mov
inc
mov
xor
jns
or
das
sarl
push
cld
cmpsb
arpl
cli
inc
lahf
mov
xchg
psubd
add
pop
mov
popf
lock
or
hlt
out
jo
pop
cmpsl
jne
popf
aad
xor
mov
mov
mov
add
int3
add
call
jl
xchg
sub
jl
jns
cmp
and
aas
lods
ds
pop
ret
xchg
roll
stc
clc
inc
sbb
sbb
pop
mov
loop
jmp
pop
out
aam
dec
sbb
sbb
arpl
inc
xchg
inc
lods
aam
pop
or
mov
cmp
pmaxsw
sbb
and
mov
push
out
add
lcall
pusha
repnz
sti
pop
pop
mov
add
jae
aaa
sub
add
cmpsl
ficomps
xor
pop
sbb
pop
and
add
xor
xor
adc
insb
add
lods
add
dec
push
add
out
adc
xor
out
and
cmp
outsl
or
or
mov
inc
cwtl
adc
push
out
sbb
insb
sbb
sbb
sbb
daa
and
xor
sahf
cmp
repnz
mov
ds
in
loope
lods
mov
xchg
popa
lea
pop
add
fdivs
dec
jle
cld
repz
lea
mov
xor
xchg
dec
shlb
mov
push
imul
adc
nop
xor
addr16
lock
inc
mov
mov
je
jge
lcall
fsubrp
outsl
jmp
outsb
add
mov
or
push
sub
add
scas
mov
loop
xor
cs
mov
ss
and
fists
jbe
imul
jl
mov
mov
add
push
adc
fidivrl
imull
fistpl
ret
cmc
mov
sbb
mov
out
or
push
inc
mov
dec
in
xchg
xor
and
insl
or
inc
jae
xchg
decl
cmp
cld
test
in
cmpb
sbb
sbb
out
sub
dec
divl
decb
pop
jo
sub
jne
sbb
cmp
lcall
sbb
std
repnz
jbe
into
js
sarl
xchg
mov
outsl
stos
sahf
adc
sarb
xchg
mov
std
and
and
push
gs
and
inc
jne
xchg
pop
add
or
push
aaa
push
pop
fcoml
ss
shlb
or
adc
ja
lock
sbb
fimuls
insl
push
insl
cmc
dec
test
mov
out
xor
dec
pmaddwd
jge
mov
ret
imul
pop
gs
xor
nop
sub
movsl
rcl
push
and
xchg
jae
push
fistps
sub
mov
or
push
dec
adc
and
mov
mov
jne
sub
mov
stos
jge
add
lock
xor
bound
add
fdivs
mov
out
outsl
mov
mov
cmc
clc
add
pop
inc
cmp
sub
cmpsb
dec
inc
and
aas
int3
pop
push
inc
in
sub
andb
dec
xor
cltd
sub
dec
push
and
scas
mov
inc
dec
sbb
dec
dec
mov
pusha
fistpl
sub
movsl
aaa
pop
and
in
sub
loope
rcll
add
rcrb
jg
xor
dec
xor
xor
xor
mov
out
lods
dec
jae
pop
sbb
hlt
jne
int3
es
leave
es
shll
fcom
add
dec
bound
or
jno
adc
clc
lahf
in
cmp
pusha
jle
rolb
subb
int3
add
or
push
cli
mov
push
addb
out
jge
mov
popf
jg
add
xchg
xchg
xchg
rorl
test
sahf
push
movsl
shll
pop
or
es
push
sbb
sub
dec
adc
add
cmpsb
sbb
out
cmp
add
xchg
bound
sub
movsb
xor
nop
push
mov
insb
push
push
dec
jae
lock
in
and
xchg
inc
in
mov
add
and
lea
sbb
cmpsb
lea
push
dec
sub
out
pop
rcl
jle
into
mov
icebp
cmp
push
pop
and
push
jmp
cwtl
xchg
cmp
push
ds
xlat
mov
and
adcb
sub
std
dec
imul
std
add
out
jle
pusha
addr16
lock
pmuludq
out
adc
adc
mov
ja
or
ret
xchg
in
aas
fdivs
in
sub
sub
das
sbb
lock
mov
lret
add
add
es
clc
dec
sbb
out
cmp
idivl
pop
dec
push
mov
mov
nop
lahf
imulb
sarb
out
nop
rolb
loop
clc
mov
add
mov
insl
push
pcmpgtw
daa
pusha
fmuls
dec
sub
push
pop
sbb
jae
adc
pop
mov
cmpsb
iret
inc
ret
mov
nop
dec
notl
sbb
sub
aad
xchg
mov
insb
dec
fdiv
push
and
fmuls
xor
lcall
ret
lock
jg
fidivrs
mov
xlat
mov
push
leave
movsb
roll
fnstenv
aad
mov
xlat
popa
jae
dec
mov
push
in
xor
lock
cmp
clc
mov
add
aas
fdivp
lock
push
movups
scas
sub
out
or
stos
mov
mov
cmc
out
je
add
sti
xor
in
dec
push
jbe
cmp
sbb
sbb
push
sbb
aaa
dec
pop
les
mov
inc
and
dec
inc
mov
adc
outsb
add
and
cmp
pusha
sti
out
xchg
sbb
fcoml
and
int3
fs
dec
lds
dec
das
imul
or
jnp
or
into
dec
fcmove
jl
pop
ret
movsl
dec
jbe
stos
cs
outsl
adc
or
lret
scas
mov
stc
fdiv
or
mov
sbb
sub
jl
into
aaa
lods
stc
imul
cmp
cli
idivl
mov
jne
inc
inc
pop
mov
xor
dec
lahf
dec
int3
jae
icebp
ds
loope
and
rolb
daa
insl
test
or
aas
fimuls
or
sub
outsb
fstpt
dec
xchg
out
cwtl
cmp
cmpsl
ja
jb
insb
xchg
and
sbb
sub
or
dec
cs
cmc
adc
cmp
outsb
out
int3
pop
sbb
fdiv
sti
mov
adc
dec
mov
leave
mov
out
sbb
mov
push
mov
pusha
dec
or
out
ficomps
lret
shlb
mov
add
clc
adc
sbb
mov
scas
push
out
ror
xor
mov
lcall
shr
jg
jmp
pop
inc
cld
stc
add
xchg
adc
adc
mov
mov
fadd
ret
and
inc
or
iret
lods
int
dec
pop
sub
push
repnz
sti
into
test
dec
scas
int
ljmp
repnz
dec
in
push
in
adc
xor
adc
sbb
testl
jae
add
mov
mov
jg
dec
cmp
repz
sbb
pop
push
lock
dec
addr16
sub
jbe
and
xor
insl
adc
sub
fmull
sub
jno
mov
xor
sub
dec
ljmp
lods
repnz
popf
daa
dec
xor
sub
stos
cmc
mov
in
outsl
jns
or
jmp
mov
mov
add
adc
out
fwait
cmp
sahf
xor
dec
int
and
adcb
adc
mov
jnp
movsb
cmp
cmovo
clc
out
push
out
outsl
dec
push
adc
cmp
mov
imul
pop
inc
fsubl
pop
mov
stos
pop
imul
jl
in
test
das
out
and
sub
imul
out
in
jns
sub
mov
sub
mov
rcrl
pop
cld
clc
into
andb
mov
mov
sbb
pop
sub
dec
jle
pop
mov
mov
addb
das
pop
fsubrl
add
lods
cmp
jge
dec
ret
push
sti
ljmp
inc
or
adc
scas
xlat
pop
xchg
and
and
cmpb
dec
or
mov
movsl
jo
out
fstpl
mov
jmp
mov
lods
popf
pop
mov
out
jg
lret
test
inc
push
in
xor
mov
dec
call
mov
mov
sub
test
mov
outsb
sbb
add
insb
lock
icebp
xor
push
mov
jle
add
fists
cmp
xchg
cmp
mov
cltd
mov
cli
ss
sbb
mov
cmp
cmp
out
add
mov
hlt
xor
or
lods
pop
mov
scas
mov
push
cmp
ret
insl
or
dec
jnp
out
sub
ljmp
sub
cmp
lods
lea
sti
scas
cmp
imul
out
decl
fwait
scas
inc
mov
jmp
dec
lock
mov
movsl
nop
aas
or
mov
loopne
adc
mov
popf
mov
add
outsl
sub
hlt
mov
and
pop
hlt
in
fld
pop
je
jno
jle
insl
push
jmp
iret
xlat
cld
xchg
cmp
shr
outsb
ljmp
or
or
fwait
lock
cmp
test
jle
cmc
mov
outsb
std
add
add
mov
lea
lahf
in
xor
ret
fimuls
pop
cmp
movsl
mov
mov
mov
or
data16
popf
idiv
and
sub
cld
sbb
test
inc
dec
aas
enter
rolb
jmp
fidivrs
imul
jnp
scas
mov
jecxz
out
imul
cmp
add
in
je
sbb
xchg
aas
aam
mov
sbb
rcrl
scas
jne
dec
loopne
notl
popa
pop
into
sbb
cmp
dec
sti
xchg
sti
mov
fwait
stc
scas
in
gs
xorb
cmc
std
push
dec
das
test
mov
cmp
movsb
das
dec
dec
inc
sub
pop
lcall
mov
popf
pushf
mov
test
pop
pop
mov
jnp
cmp
outsb
and
loopne
jle
or
movsl
dec
in
cmp
ja
and
std
in
pusha
adc
ret
dec
daa
fsts
arpl
test
inc
lods
ja
mov
dec
and
dec
das
ja
lock
fwait
outsl
icebp
xchg
inc
xor
test
mov
aad
stc
ljmp
cmp
ficomps
decl
cli
xchg
out
adc
push
xor
gs
outsl
adc
scas
or
or
mov
lea
outsl
sti
je
mov
rcrb
cmp
testl
jle
insl
pop
int3
test
xchg
dec
mov
popf
mov
in
lods
cmp
dec
insl
and
imul
or
and
mov
adc
sub
sti
movsl
std
lahf
add
inc
sbb
subl
adc
lods
lods
and
inc
lahf
jmp
mov
sti
int3
fucomp
or
add
inc
loopne
inc
jns
mov
mov
pusha
test
sub
in
wbinvd
push
cmp
mov
fnsave
and
in
outsl
jnp
or
mov
imul
out
add
pop
test
cmp
ficoml
jge
aas
fwait
or
or
hlt
mov
jns
pop
dec
outsb
dec
or
xor
jo
sti
or
lods
ds
push
mov
xchg
hlt
sub
pop
cltd
out
adc
xlat
pop
xor
lods
add
pop
lock
push
or
mov
lock
push
jbe
repnz
add
lods
mov
mov
add
std
sahf
imul
dec
push
outsb
imul
movsb
lock
out
mov
loope
outsb
cmp
mov
out
nop
sbb
orb
out
sti
outsb
lock
cmp
mov
gs
mov
lods
popf
jno
lock
mov
dec
sub
test
sbb
in
adc
mov
mov
addl
jno
add
sbb
das
jl
movsb
jno
or
push
sbb
notl
sbb
cmp
sti
cmp
mov
stc
mov
stos
into
icebp
mov
repz
cmc
jg
rorl
je
std
push
push
sti
or
mov
shrb
pop
add
pop
repz
lret
pop
or
and
lock
lods
jp
popa
bound
mov
mov
cmp
mov
js,pt
and
push
cwtl
faddl
test
or
cmp
jnp
sbb
dec
lods
int3
mov
into
outsl
fidivrs
out
insl
out
cli
sbb
popa
mov
xchg
fs
xor
addr16
ss
jae
std
mov
jae
je
pop
repz
add
ja
sbb
ret
mov
xor
adc
aam
cli
rcrl
adc
or
es
cmpsl
jecxz
cs
mov
or
aad
add
add
push
sahf
xor
sbb
add
sbb
je
sub
clc
xlat
or
or
push
fninit
add
and
cmpsb
stc
lcall
mov
sub
call
adc
mov
movsb
inc
in
or
stos
aaa
int
frstor
jne
push
xchg
in
mov
pop
in
lahf
leave
mov
jnp
pop
arpl
cmp
shrb
shll
sbb
push
repz
sbb
dec
repz
inc
sbb
push
pop
arpl
in
dec
lahf
jl
or
andl
scas
mov
inc
add
stos
es
pop
cmp
push
add
inc
insb
das
xorl
inc
sub
jno
pop
jbe
mov
jae
movsb
in
out
xchg
push
fdivrl
lcall
test
jne
out
push
adcb
cmp
adc
inc
or
xchg
mov
pop
insb
mov
shlb
fdivr
xchg
lock
shlb
jbe
xchg
int
out
add
out
mov
mov
jo
mov
outsl
pop
stc
lcall
outsl
std
test
xor
ljmp
jns
or
pop
and
dec
lahf
stc
fcomp
or
jnp
fnstsw
jno
or
mov
in
lahf
mov
xchg
sub
inc
out
stos
faddl
jb
test
pop
mov
sti
push
jo
push
sbb
subl
je
aas
and
lods
xchg
mov
aam
scas
xchg
add
xchg
lret
out
mov
pop
mov
mov
inc
repz
push
cld
xor
pop
sbb
insl
and
add
leave
cwtl
xchg
pop
enter
and
dec
jl
test
sub
or
push
lcall
fbld
jb
arpl
stc
outsl
mov
dec
sub
repz
into
daa
loope
out
xchg
cmp
or
hlt
and
mov
loop
xor
test
movsl
mov
push
jmp
push
aaa
sti
fsubr
test
cmp
dec
hlt
inc
jp
push
fmull
and
xchg
faddl
lds
bnd
push
push
push
sub
push
ja
daa
push
cmc
and
rcrl
dec
orb
cld
jg
jg
pop
imul
lock
dec
popa
jo
fwait
repz
jnp
pop
jl
sahf
mov
and
sbb
jg
mov
orl
jge
aaa
mov
out
jnp
pop
and
mov
jmp
xor
push
jl
pop
sbb
cli
xchg
xchg
mov
repz
call
and
push
insb
sub
mov
scas
push
sub
arpl
mov
repnz
dec
jge
mov
push
sarl
jge
scas
loopne
xchg
mov
push
cmc
push
aaa
aad
dec
xor
pop
fdivl
ss
xor
and
sub
dec
dec
lcall
xchg
sub
dec
and
dec
sub
ret
in
push
cmp
mov
pop
or
and
stos
mov
loop
jecxz
leave
movsb
movsb
nopl
sbb
out
mov
or
jmp
mov
xor
sub
add
lock
out
imul
popf
hlt
inc
das
insb
repz
mov
out
loopne
aam
lahf
insb
pop
pop
test
push
call
test
test
jge
xlat
jae
shll
mov
out
fistpl
push
push
mov
pop
sub
jno
jne
aad
mov
inc
cld
cmc
xor
or
iret
jo
out
popl
dec
lock
div
jbe
add
inc
mov
mov
adcb
scas
inc
mul
mov
in
cmpsl
push
or
imul
pop
xchg
mov
xor
jae
pop
and
pop
repnz
scas
sbb
iret
lahf
or
sbb
pop
popf
mov
inc
loopne
movsb
inc
xchg
ljmp
cmpsl
pop
xor
dec
pop
imul
pand
je
in
sahf
into
cmp
mov
in
mov
dec
lock
shrb
mov
fsubl
testb
sub
and
add
addb
repz
idivb
outsl
pop
pcmpeqw
stos
mov
popa
jg
cmpl
xor
dec
clc
cmc
jns
dec
popf
outsl
lea
gs
daa
pop
mov
movsb
sub
jle
sub
mov
add
nop
sbb
mov
xchg
pop
adc
ficomps
fwait
scas
dec
out
lods
fstpl
es
hlt
cmp
adc
sub
cld
add
repz
pop
mov
fwait
cmp
outsb
lods
push
jmp
cs
shrl
mov
aas
xchg
dec
lods
icebp
shr
inc
mov
pop
clc
mov
cltd
js
sbb
mov
cmc
lahf
push
add
add
andb
les
or
push
ss
jo
lods
out
and
test
out
sub
dec
adc
mov
into
inc
and
lods
out
pop
in
lods
popa
cmpsl
mov
popa
cmp
fwait
jns
push
sbb
lea
mov
cmp
xor
lods
out
adc
add
adc
loop
mov
shl
dec
mov
nop
sbb
outsl
and
jae
xor
not
bswap
dec
out
jl
dec
insl
xchg
das
jo
lock
repz
push
jmp
in
gs
stos
push
or
push
mov
std
mov
pop
std
stos
lock
adc
jae
lock
orl
jp
roll
gs
dec
inc
cmp
or
and
nop
mov
dec
daa
outsb
movsb
out
test
adc
cld
inc
jl
std
aam
ss
stos
shr
or
mov
test
lods
pushf
test
dec
jb
ds
aas
xor
bound
pop
and
push
jo
mov
cwtl
or
mov
mov
testb
gs
aaa
sahf
jg
in
les
stos
xor
testl
mov
mov
hlt
or
popf
mov
pop
sub
mov
inc
out
pop
adc
push
mov
in
push
jnp
aas
cs
repz
mov
imull
jecxz
pop
and
fcmovu
nop
scas
cmpb
jne
push
mov
xchg
inc
dec
mov
add
push
adc
mov
jae
cmp
jle
data16
mov
in
std
cli
lods
mov
mov
pop
jp
pusha
xor
mov
cmp
jge
stos
adc
xchg
loopne
pop
push
in
insb
sub
rorl
sbb
xlat
pop
jae
dec
sbb
dec
or
sbb
out
into
mov
adcl
mov
sar
pop
xor
dec
cmpsb
dec
data16
rorb
aas
pusha
pusha
gs
mov
jo
cmp
jge
sbb
in
dec
clc
push
adc
mov
or
fwait
pop
add
pop
lods
sbb
insl
or
fstl
xchg
fadd
mov
sbb
sbb
dec
out
mov
pop
test
imul
mov
aad
aaa
or
add
loop
aaa
xor
pop
xor
jmp
lods
dec
pop
enter
push
adc
jnp
mov
adc
jmp
cmp
mov
outsl
movsl
jmp
xor
xchg
pop
dec
in
jnp
ds
cmpsl
mov
mov
sbb
adc
pop
inc
jecxz
stos
loop
imul
std
daa
mov
pop
xchg
jl
test
xor
inc
cmpsb
mov
jge
pop
dec
ss
scas
pop
sub
inc
mull
fwait
dec
lock
dec
addr16
fwait
ja
notl
add
fcomp
pop
sub
xchg
xchg
aaa
add
pop
lahf
or
sub
add
movsl
mov
sbb
rcrb
cmp
repz
cmp
and
jae
das
dec
jecxz
or
dec
es
sub
jecxz
out
imul
stc
dec
insl
push
pop
shrl
sbb
xor
inc
out
mov
outsl
dec
sbb
jnp
xchg
rcrb
mov
dec
outsl
rclb
mov
xor
push
scas
sahf
dec
loope
mov
das
stc
dec
pop
lock
outsb
lret
sbb
lock
dec
fcomps
aaa
out
push
xchg
fwait
cmpsl
lods
roll
xor
imul
ljmp
sub
js
rcll
sti
jg
mov
out
sti
insl
or
or
xchg
jno
pxor
dec
and
jae
mov
fisubl
stos
test
shl
dec
incl
lods
adc
sar
xor
xchg
int3
jl
jae
imul
mov
xor
cmp
mov
outsb
jb
mov
insb
xor
sub
xchg
aaa
mov
ss
mov
dec
and
std
outsb
or
dec
mov
xorb
cmp
int
pop
dec
pop
add
mov
xchg
loop
jae
and
mov
fstpl
ja
movsl
call
pushf
push
hlt
add
sti
xor
mov
shlb
scas
dec
or
leave
outsb
and
xchg
jg
pusha
dec
sbbb
cltd
lods
xor
cs
cmc
push
and
xorb
out
roll
ds
pop
movzwl
or
data16
xor
jg
mov
pop
out
adc
adc
sub
das
iret
out
cmp
push
pop
cmp
dec
ds
movsl
jmp
fnstsw
ss
sbb
jne
pusha
lods
jbe
ja
lods
inc
mov
fimuls
push
push
cli
stos
sbb
lods
les
cmp
mov
dec
inc
paddb
stos
imul
scas
aaa
lcall
decl
in
and
adc
xchg
lods
repnz
int3
cmp
dec
mov
imul
and
jnp
gs
sti
mov
in
or
addr16
and
mov
std
stos
xor
icebp
and
dec
or
mov
mov
aad
inc
mov
pop
xchg
icebp
mov
ja
daa
out
jl
dec
or
lock
outsl
push
mov
adc
inc
and
inc
xchg
mov
stc
jo
outsb
subb
in
insb
xchg
or
clc
sub
out
imul
inc
in
push
xchg
pop
adc
test
mov
popa
mov
mov
cmp
mov
jge
fisubl
inc
mov
push
jl
insl
scas
dec
mov
hlt
dec
outsl
dec
sub
in
jnp
xchg
or
inc
lcall
cmpsb
and
jo
adc
std
push
jno
int
mov
mov
add
repnz
outsl
faddl
add
jge
insb
in
popf
dec
pop
lods
lock
mov
pop
das
ficompl
stos
xchg
jmp
pop
movsl
adc
daa
mov
xchg
sub
pop
decl
push
aas
xlat
dec
je
int
and
lea
cmc
outsl
jg
pop
scas
aas
mov
add
out
inc
pop
in
aad
inc
sti
or
sbb
cmpsb
push
sti
push
sbb
cmp
out
jne
xor
fldt
imul
sub
stos
sbb
dec
clc
test
dec
jle
or
push
jne
repz
int3
es
pushf
fidivrl
mov
push
nop
in
add
push
pop
add
sbb
popa
test
stos
mov
sbb
lock
fucomp
and
fidivs
scas
pop
lea
lods
insb
jmp
dec
push
sub
adc
test
push
and
js
lods
fucomp
mov
outsb
jmp
pop
sbb
adc
fscale
fucom
negb
mov
add
dec
jmp
jg
pusha
mov
gs
adc
stos
loopne
pop
enter
das
scas
icebp
lods
jge
mov
jmp
bound
imulb
sahf
pop
daa
enter
jo
out
scas
imul
sub
fs
push
add
out
or
xlat
scas
or
sub
pop
out
cmp
and
or
pop
sar
fwait
or
pushf
xor
mov
mov
add
jno
repz
mov
notl
push
mov
cli
or
jl
shlb
fmull
pop
xchg
xchg
add
popa
pusha
xchg
xchg
lods
sbb
movsl
loope
cmpsl
xchg
out
in
inc
lods
test
das
push
cld
fisttpll
or
imul
test
jg
fdivr
int3
cld
repz
push
stc
ret
repz
std
das
mov
adc
lcall
sti
xchg
jb
and
jg
fists
xchg
ljmp
cmpsl
jae
repz
lods
pop
dec
popa
outsl
pop
adc
xchg
cld
pop
shr
inc
adc
lock
out
add
jmp
cmc
std
movsl
xor
mov
imul
cmp
add
inc
and
xchg
pop
cmp
fucomi
jmp
dec
push
cmc
xor
sbb
stos
adc
xchg
cmp
jbe
fistpll
pop
mov
inc
mov
cmpsb
xor
out
ret
sbb
scas
mov
cmc
and
mov
sbb
in
sub
fidivs
fcmovu
mov
loopne
or
in
fisttpl
das
outsl
imul
repz
mov
push
fisubrl
out
pop
repz
sub
xchg
fstpl
movsb
and
pop
dec
mov
jns
lods
inc
out
mov
and
out
repz
cld
push
stos
in
add
fwait
nop
mov
std
ffree
pop
std
cmp
shl
jnp
repz
sub
fmull
add
das
jle
insl
dec
movsb
push
mov
outsl
outsb
or
push
out
add
sbb
in
and
mov
fdivrl
pop
pushf
out
or
cmpsb
pusha
dec
sub
mov
add
out
xchg
fidivs
jno
ja
push
cmp
test
pop
mov
out
mov
sub
or
or
mov
pop
sub
in
lcall
or
mov
lods
adc
lock
in
xchg
movsl
cli
or
testl
adc
push
xchg
sub
sub
in
pop
in
cs
nop
jne
clc
mov
cmc
push
pop
cmp
out
fldl
sub
out
or
imul
ds
pop
sub
in
mov
cld
outsl
sub
pop
push
ljmp
jne
pop
jbe
ljmp
pushl
sti
fistpll
jl
adc
scas
jnp
test
repnz
adc
add
jecxz
mov
jae
adc
dec
test
int
imul
hlt
scas
push
adc
lods
loopne
pop
mov
dec
das
pop
add
mov
inc
push
inc
inc
lods
or
enter
mov
mov
jne
loope
rolb
adc
out
cmc
stc
fs
add
and
in
hlt
mov
jbe
adc
or
mov
roll
mov
sub
scas
xor
jmp
es
push
mov
repz
jo
mov
ja
in
xor
adc
shrb
pop
sbb
lcall
cmp
mov
stc
scas
pushf
mov
cmc
mov
or
or
adc
push
movsl
xchg
int3
pusha
repz
fs
loope
add
mov
mul
std
and
push
jecxz
lods
fwait
movsl
mov
or
in
xchg
repz
mov
scas
sbb
and
movsl
daa
cmp
call
ljmp
fs
hlt
loop
pusha
cld
xor
scas
sbb
or
xchg
mov
cld
dec
or
ja
hlt
cmc
and
add
sub
test
xor
adcb
adc
int3
mulb
ret
mov
movsl
mov
sub
insb
hlt
repz
sbb
mov
cmc
jmp
mov
stos
jne
das
jo
insl
jne
lock
push
mov
aad
adc
std
xchg
das
dec
scas
sub
dec
pop
in
fcomp
and
cmc
cmp
jns
gs
pop
mov
lcall
add
test
int
repz
imul
out
iret
xor
insl
subb
lahf
add
jg
cmpb
idiv
stos
stc
push
add
stos
test
dec
enter
jle
das
fs
jmp
add
int3
dec
es
xor
negl
add
adc
dec
repz
out
rorb
add
or
movsb
imulb
mov
dec
dec
stc
jbe
call
mov
gs
xchg
je
mov
add
pop
jmp
push
das
in
jle
jecxz
movsb
pushl
mov
imul
mov
jmp
fcmovu
stc
fnstcw
add
pop
adc
repnz
out
packsswb
cmc
pop
sub
loope
jne
popa
fisttpll
out
sbb
cmp
loopne
out
dec
test
cmc
out
jnp
pop
jl
aaa
data16
dec
icebp
lods
mov
fdivl
jae
mov
repz
ret
arpl
aad
lret
movsb
into
push
stos
jb
pop
and
add
mov
cmpsl
cmp
mov
push
xchg
insl
pop
in
and
or
mov
fnstsw
xor
ret
andb
imul
add
mov
add
mov
ffree
imul
call
fildll
dec
sub
cld
pop
out
add
add
fwait
ret
fsubs
cmp
inc
jp
in
xchg
sbb
sub
ret
or
cmpsl
lea
dec
mov
ljmp
into
aas
add
outsb
cli
in
xchg
out
in
data16
sub
mov
mov
mov
ret
jle
rcrl
out
pop
jge
loopne
mov
mov
inc
and
push
xor
lods
out
imul
lods
repnz
and
sub
or
mov
aas
add
dec
inc
push
lcall
aam
lret
sub
inc
pop
aas
sbb
in
ss
xlat
dec
fwait
lods
ljmp
lea
imul
out
sub
and
jnp
scas
push
cs
lock
adc
sbbb
mov
dec
into
cwtl
and
popf
cmpl
fsubr
add
call
call
fimull
cmpsl
cld
adc
pop
andb
adc
rorl
stos
mov
insb
pop
pop
sti
dec
jb
xor
pop
dec
mov
xchg
mov
cltd
lea
sbb
mov
xchg
push
mov
push
sti
sti
sbb
std
pop
add
jecxz
int3
pushf
mov
xchg
out
stos
cld
hlt
or
insl
dec
mov
add
fdivs
push
out
cmpsl
dec
int3
xor
lods
or
or
repnz
adc
neg
xorb
push
test
pop
fadds
inc
and
dec
dec
mull
gs
es
mov
stos
sti
cmc
pop
ja
jecxz
mov
movsb
add
clc
xor
aas
and
lods
xlat
mov
pop
mov
test
jg
cmc
mov
jg
jbe
incl
sub
fcmovne
inc
xchg
cli
inc
lcall
bound
std
dec
out
sti
xor
pop
hlt
or
adc
pop
test
inc
inc
xchg
push
insl
pop
dec
aaa
jp
inc
out
cmp
popf
icebp
push
ds
pop
cli
clc
outsl
call
inc
dec
clc
sub
pop
repz
push
sbb
jg
testl
enter
mov
jl
cwtl
or
add
xor
lea
mov
insb
es
orl
aaa
mov
mov
rorb
mov
sbb
leave
push
cmc
sbb
rol
lea
or
xor
dec
pop
test
jns
call
sub
pushf
and
fmull
test
mov
adc
mov
das
or
icebp
push
push
jbe
aam
push
add
mov
lods
bound
imul
ret
sbb
mov
lahf
jg
in
xor
xor
shr
xchg
pop
jns
or
adc
xor
or
rcrl
cmpsb
sbb
shll
stos
cmp
inc
jge
cs
sbb
movntq
fwait
subb
rcr
and
cld
jmp
push
dec
pop
adcb
pop
jnp
adc
sbb
adc
imul
xchg
lock
sbb
adc
test
popa
push
mov
cmpsb
adc
xor
int3
scas
dec
add
lock
pop
cmc
out
jnp
outsl
dec
dec
ds
idivb
or
push
pop
sub
mov
adc
xchg
test
mov
xchg
mov
mov
dec
pop
sbb
stos
jge
sbb
fsubp
and
cmp
xor
cmpsl
and
cmpsb
sub
imul
psubb
lcall
and
popa
fwait
and
inc
and
push
push
mov
js
dec
icebp
xchg
mov
inc
sti
jno
aas
and
in
sub
ljmp
dec
mov
imul
sub
and
out
clc
clc
hlt
imul
and
cmp
and
cmp
sub
push
popa
cmc
inc
and
jno
xor
pop
mov
mov
jg
mov
sub
call
inc
test
push
out
leave
mov
clc
xor
fnclex
push
xor
and
lds
negl
push
test
lods
xor
sbb
jecxz
jnp
ja
jle
clc
test
testl
pop
insb
scas
push
loopne
pop
faddl
jo
test
fsubs
int3
imul
sub
xor
ret
lea
xor
and
lahf
cmc
loopne
and
push
or
mov
sub
xor
dec
or
mov
pushf
mov
jne
mov
out
out
out
aaa
jo
in
jb
xor
mov
jno
sbb
sub
or
leave
es
push
int3
pushf
lods
mov
in
dec
or
popf
loopne
adc
divb
jle
dec
mov
incb
lock
cld
loopne
pop
jl
nop
sbbb
pushf
xchg
push
inc
jno
push
fadd
sbb
es
jge
ja
add
out
sbb
push
in
and
loop
js
les
inc
pushf
push
int
out
or
test
fwait
lods
or
pop
or
and
test
aas
jg
pop
ljmp
xchg
loop
inc
and
mov
adc
jne
push
cs
dec
scas
mov
sarb
pop
lods
fcoms
jno
das
fcoml
out
scas
push
loopne
test
xor
repz
adc
dec
xchg
int
mov
mov
jmp
add
xorl
adc
movsl
pop
ret
pop
mov
int3
fwait
imul
aas
loope
pusha
sti
sbb
repnz
scas
or
insl
stos
fbstp
push
icebp
jne
imul
fidivrs
mov
adc
mov
aaa
call
inc
push
lret
fsts
adc
add
or
push
test
jl
out
inc
adc
or
sbb
rsqrtps
fstps
popf
in
cmpsb
fwait
aad
cmp
out
daa
xor
and
jbe
adc
xor
das
mov
mov
test
aad
or
lods
cmp
ficompl
pop
lcall
sub
fisubs
pop
pop
pop
frstor
sbb
and
jbe
xlat
mov
aas
dec
dec
jle
cmp
add
fcmovnbe
fldcw
cmovnp
add
sub
push
sub
lods
out
lea
mov
inc
pushf
lock
mov
imul
stos
jae
icebp
out
sub
cld
lods
jecxz
dec
sbb
std
lea
xlat
addl
das
sbb
insb
dec
shrl
hlt
lret
aaa
or
cld
in
lds
or
sbb
insl
outsl
mov
scas
jg
icebp
sbb
lods
sub
lods
cli
add
mov
outsb
std
loope
and
scas
dec
fldt
out
pmullw
lea
icebp
add
std
iret
add
icebp
outsl
xor
div
pop
mov
mov
push
icebp
or
xor
xor
cli
xchg
icebp
cld
jo
int
mov
and
jp
jmp
icebp
and
sbb
jp
sbb
mov
addr16
and
and
adc
sbb
aaa
and
aad
out
arpl
add
push
lahf
mov
sub
in
aas
add
pop
das
nop
and
add
dec
mov
mov
push
cmp
push
sbb
sub
push
outsl
iret
cld
js
sub
xor
sbb
mov
xor
ds
mov
ja
icebp
or
mov
sbb
daa
xor
testb
or
stos
add
sub
outsl
data16
nop
adc
push
mov
and
jnp
outsl
pop
sarb
jae
push
outsl
fnstcw
mov
and
jle
shr
pop
mov
sub
pushl
icebp
std
sub
mov
dec
pushf
in
cmp
mov
sbb
pop
xchg
mov
mov
cld
repnz
dec
push
mov
dec
or
add
movsb
push
movsl
sbb
dec
ds
jl
push
orl
jns
imul
push
stc
and
sti
les
jge
pop
into
and
mov
in
or
pop
cld
fcompl
adc
iret
rol
dec
adc
ds
icebp
into
sub
subl
negl
sub
jle
inc
out
into
jbe
mov
ret
dec
pop
in
xor
cwtl
or
out
stos
divl
imul
cmpsl
imul
shll
jns
push
lock
jo
jo
testb
repnz
lahf
je
mov
adc
jecxz
lcall
and
dec
sti
aas
mov
clc
sub
outsb
roll
aas
clc
mov
out
inc
in
ret
ret
xor
das
push
pop
pop
gs
fwait
je
mov
movsl
push
lods
lods
and
inc
add
push
push
mov
adc
sbb
jle
add
push
and
test
inc
insl
and
inc
add
mov
out
and
adc
adc
inc
loope
mov
adc
je
jbe
out
cmp
mov
push
sub
mov
test
into
xchg
mov
shlb
bound
pop
xchg
cmp
lahf
scas
pop
stc
dec
cld
out
in
push
jb
and
sbb
mov
jo
sub
sbb
push
jb
popa
sub
or
cmp
dec
lahf
scas
xchg
pop
cmp
cmp
daa
cmpsl
aas
jb
roll
sub
je
into
sbb
xchg
in
xor
push
pushl
adc
ret
sbb
shl
out
mov
mov
gs
mov
dec
in
fbstp
out
and
or
and
ljmp
pop
add
adc
pop
or
lret
test
fwait
push
adc
pushf
push
add
add
adc
jno
xor
inc
divb
daa
imul
jne
sbb
and
aas
cli
outsb
cld
daa
adc
sub
jnp
push
or
out
or
shl
mov
icebp
lret
divl
std
push
daa
jle
sub
mov
and
stos
jo
notl
mov
mov
jg
in
sbbb
das
push
inc
xchg
pop
adc
push
sub
out
cld
fiadds
xchg
loop
mov
movsl
pop
inc
xor
and
sub
lcall
ljmp
mov
inc
xchg
push
dec
adc
sbb
jb
sti
repnz
imul
lock
or
dec
or
push
leave
sbb
roll
xchg
cmp
mov
pop
repz
mov
inc
sbb
or
lcall
rol
and
mov
pop
or
in
shr
mov
pop
sub
sarl
pushf
mov
fcomps
push
add
cmp
scas
nop
or
cld
dec
cmp
aas
jnp
pusha
xorl
loopne
add
mov
lods
sub
test
push
cs
ss
sti
push
or
test
bswap
aas
sti
int
into
adc
jle
mov
aas
jbe
xor
cmp
rcrb
out
pop
add
sbb
add
imul
push
dec
out
popf
in
and
cmpsl
mov
nop
pop
cmpl
jg
pushl
and
xor
xor
int3
test
jbe
bound
and
icebp
insb
test
out
and
dec
cmp
adc
lea
cmp
fisttpll
test
mov
outsb
roll
jae
andl
and
rorl
and
or
mov
mov
stc
into
cmc
std
cmpb
sub
jno
repz
jg
scas
test
in
aad
xchg
test
pop
mov
dec
jb
mov
cmp
cltd
add
aas
push
jnp
ret
and
and
mov
je
in
push
stos
and
inc
dec
imul
sbb
lods
sub
mov
daa
xchg
add
jecxz
sbb
push
stos
repnz
sbb
repz
jecxz
lahf
lds
cmpsb
cli
jno
add
int
subb
push
xor
loopne
adcb
mov
mov
adc
in
lock
jno
xor
mov
jno
outsl
imul
inc
cld
xchg
mov
push
pop
adcb
and
in
fdivl
movsb
adc
mov
dec
icebp
cmp
xor
fs
adc
add
sbb
std
mov
hlt
adc
sbb
add
scas
incl
xor
sbb
sbb
ss
sbb
xor
scas
dec
sti
insl
sarl
in
shlb
cld
add
jno
int
cmc
fcmovnbe
inc
loope
daa
shl
push
lods
mov
sbb
test
adc
ret
mov
pop
insl
pop
add
mov
out
imul
sti
mov
rol
ljmp
pop
jg
daa
xor
pop
or
sub
and
repz
scas
rorl
test
jne
jno
sahf
mov
sub
xlat
pop
push
mov
jne
pop
in
and
mull
sub
cs
inc
into
dec
sub
inc
cmp
sub
sbb
cld
in
cmpsb
dec
push
shll
sub
ljmp
mov
leave
push
shll
dec
sbb
push
pop
dec
out
xor
adc
dec
lds
imul
xorl
xchg
in
adc
mov
out
shll
lock
jno
jg
add
fstps
and
cs
gs
push
add
mov
aad
shlb
xor
and
std
sbb
inc
xchg
shll
dec
xor
mov
icebp
insb
push
cli
imul
rol
mov
addl
pop
loope
movsl
sub
xor
and
pop
fisubrl
add
mov
xor
mov
xchg
jno
xlat
push
xor
neg
add
loope
movaps
jl
out
fs
mov
out
fldl
adc
adc
xor
sub
mov
push
movaps
or
dec
xchg
mov
sub
sarb
mov
dec
insl
sbb
inc
add
call
mov
jns
mov
aas
mov
jbe
inc
mov
icebp
mov
pusha
and
scas
adc
test
add
jo
or
repnz
adc
out
xor
cmpsb
xor
jmp
hlt
clc
ja
jl
hlt
fwait
jmp
sbb
mov
dec
mov
and
scas
fcompp
dec
add
xchg
std
dec
sub
nop
loopne
cli
out
push
bound
and
leave
push
mov
push
push
je
sbb
or
cmp
out
mov
cmc
divl
mov
pusha
xchg
xchg
bound
leave
jbe
fsubr
sbb
xchg
sbb
scas
int
rorl
jp
stc
aas
cld
jbe
and
jae
icebp
dec
decb
fwait
repz
fadd
cs
inc
cli
sub
jno
daa
cs
int3
sbb
lar
jne
xor
je
jmp
push
scas
mov
jle
xchg
pop
lock
inc
inc
or
sbb
inc
sbb
clc
ss
adc
add
inc
incl
rorl
fistpll
das
xor
ret
gs
dec
dec
jae
rolb
ja
inc
pop
hlt
fwait
std
adc
icebp
adc
out
sub
out
pcmpeqd
xchg
cld
loope
out
ljmp
scas
and
fdivs
push
inc
addl
lods
out
xchg
xchg
xor
dec
call
das
mov
mov
and
jae
mov
lahf
xor
icebp
adc
xor
xor
jnp
icebp
xor
ja
inc
lock
ja
xor
aad
das
stc
sbb
jns
xor
dec
icebp
stos
stc
test
mov
out
add
repz
mov
iret
std
inc
xor
andl
clc
clc
cmp
insb
rorb
and
adc
cmp
sahf
stos
dec
pop
cmp
cwtl
std
or
jg
lods
and
es
enter
dec
push
sub
pop
sbb
xchg
sbb
dec
insb
dec
inc
rep
or
mov
imul
and
pop
push
scas
sarb
in
sub
shll
sub
rorb
stos
aaa
imul
jp
hlt
lock
dec
out
jmp
ljmp
mov
jns
xor
das
enter
fcomi
insb
ljmp
jo
add
jo
jg
jle
xchg
adc
or
sub
mov
leave
xor
std
xchg
inc
pop
cmp
test
repz
js
flds
mov
out
insl
or
inc
mov
add
test
sbb
mov
sti
pop
push
jno
sarl
dec
xor
lret
mov
lret
ja
lods
sub
popf
cmp
pop
cli
ljmp
jp
ja
sbb
adc
fwait
xchg
jmp
ficoml
sahf
adcb
outsl
fstl
push
pop
mov
std
inc
repz
xchg
in
and
cld
or
or
fdivl
imul
repz
push
push
pop
jbe
repnz
lock
ret
pop
loopne
jle
cmp
sbb
mov
enter
lea
sub
mov
xchg
cmp
pop
imul
inc
mov
mov
mov
imul
daa
inc
cmp
fucom
mov
fldenv
cmp
xchg
aas
mov
ret
insb
adc
incl
mov
adc
push
or
sti
icebp
fisttpll
subb
fs
call
neg
stc
rcll
std
testl
or
cltd
cmpsl
push
xor
int
mov
push
out
repz
repz
bound
and
aas
add
test
cs
pop
and
pushf
adc
or
fisubl
insl
xchg
sbb
divb
dec
cmc
and
lahf
imul
hlt
and
std
pop
mov
orl
and
movsl
add
sub
sub
in
lret
aas
dec
pop
js
imul
call
pop
xor
orl
out
pop
sbb
stos
xchg
pop
fucom
ds
pop
and
loope
test
or
and
das
adc
sti
mov
jne
filds
and
pop
cmp
lcall
imul
idiv
js
psllq
daa
in
cmpb
scas
outsb
mov
frstor
or
loope
sahf
sub
inc
shr
out
scas
or
fdivrs
xchg
test
dec
xchg
out
scas
loope
out
lods
mov
mov
loopne
sbb
sbbb
std
clc
in
mov
scas
popf
scas
lods
adc
add
add
add
fdivl
jle
mov
rcr
add
enter
shll
fdivp
std
mov
or
shlb
adc
push
xchg
pop
pusha
inc
or
rcrl
scas
pop
fsubrl
addb
popf
mov
jnp
jg
dec
loope
loop
sbb
or
add
into
adc
jle
inc
cld
push
jl
xor
inc
ret
pop
cmp
sbb
push
loope
xchg
mov
stc
pop
repz
shll
or
adc
pop
jle
and
fiadds
sub
push
stc
outsl
push
pop
mov
ja
mov
sbb
or
popf
xlat
cmpb
inc
mov
fisubrl
test
sbb
pop
pusha
fwait
in
lret
lcall
xor
pop
das
fwait
push
dec
and
adc
sahf
mov
jbe,pn
lret
inc
icebp
push
cwtl
imul
adc
mov
or
decl
sub
imul
xor
in
fisttpl
push
out
xor
jne
aas
mov
shlb
xor
and
xor
in
nop
push
mov
push
nop
enter
xchg
pop
xchg
mov
enter
mov
push
and
in
or
or
mov
test
push
jmp
adc
xor
sub
push
mov
repz
and
push
jle
aas
push
push
les
loope
adc
adc
dec
daa
ja
ret
test
xor
jbe
lcall
and
jge
xchg
pop
sti
fisubl
daa
jb
jle
das
jl
outsb
int3
cmpsb
pusha
arpl
pushf
sub
mov
sahf
pushf
mov
lock
in
xor
cmp
shrb
inc
jae
add
pop
sub
pushf
xchg
mov
mov
or
sub
insl
data16
jae
test
xor
or
mov
xchg
and
sub
loop
inc
stc
cmp
mov
mov
xchg
out
or
inc
cmp
aaa
xchg
or
sbb
dec
ret
outsl
lcall
fistps
adc
ret
and
xor
nop
add
lods
mov
mov
or
dec
cmpl
and
fimuls
jno
pushf
and
test
outsb
mov
or
push
cmpsl
jae
test
xlat
mov
test
add
aas
rcll
sub
and
adc
and
sub
addb
jmp
and
jnp
pop
arpl
jo
jmp
add
and
push
push
or
xor
or
inc
out
xchg
std
or
popa
test
xor
add
dec
lcall
es
push
in
add
pop
cmp
mov
inc
lea
rep
je
fwait
push
outsb
and
cmpsb
lea
orl
push
test
sbb
cmp
inc
inc
lret
imul
stc
icebp
int3
sbb
testl
mov
ret
into
and
test
mov
push
cmp
jae
mov
icebp
dec
movsb
dec
cmp
jl
mov
mov
cmc
mov
jp
fwait
jne
rcrb
jg
mov
push
fwait
fwait
push
mov
xor
adc
cmp
out
mov
lahf
adc
xor
jne
add
lock
push
push
adc
cmp
pop
mov
push
xchg
inc
xor
sub
xchg
call
push
mov
push
mov
rcll
push
xor
hlt
js
sbb
jp
jg
mov
clc
mov
cs
andb
xchg
xor
dec
jo
ret
daa
xchg
add
enter
gs
loop
fnstcw
inc
mov
fpatan
fs
fsubr
std
xor
xchg
cmc
cmp
and
mov
lret
jno
add
dec
xor
or
jp
cld
ss
ret
fadd
bound
into
ret
xchg
jge
adc
repz
pop
stos
in
stos
clc
dec
and
add
int3
arpl
out
mov
and
out
nop
and
popf
pop
mov
int3
lcall
cltd
mov
loope
push
std
in
xor
fldenv
sarb
aad
sub
ret
mov
addr16
shl
mov
pop
ljmp
adc
jns
stos
cli
rclb
mov
push
jbe
out
clc
sbb
xor
in
and
or
and
ret
mov
mov
jo
mov
push
cs
out
mov
insl
push
mov
std
out
cld
sti
in
lods
gs
adc
mov
jle
nop
jne
jne
mov
inc
into
or
push
dec
ljmp
adc
jnp
addr16
scas
mov
cmp
roll
lds
in
and
add
lret
sbb
and
lods
add
aad
ret
imul
push
push
adc
pop
mov
imul
out
push
pushf
leave
sub
mov
lds
out
cmp
mov
jno
inc
lods
fistpll
pop
jle
adcl
add
cmc
aaa
inc
push
sub
pop
dec
stos
mov
jnp
inc
add
sub
jl
leave
push
data16
jnp
jle
sbb
aas
or
dec
clc
dec
lods
or
shll
mov
repz
xorl
cmp
adc
jbe
pop
mov
lods
in
mov
pop
mov
shr
mov
imul
add
insl
loope
inc
cmpsb
lea
or
gs
dec
jg
ret
mov
stos
mov
aas
jp
aas
cld
out
push
out
sbb
subl
addb
int3
sub
movsb
jg
sub
jmp
jo
cmc
cs
cmc
test
mov
pop
or
fimull
fidivrl
loope
repnz
pop
shl
jmp
adc
jbe
lods
roll
xor
cmpl
and
std
push
sbb
push
add
sahf
call
inc
rolb
sub
aas
sbb
jae
stc
je
ret
rol
hlt
xor
out
dec
pop
popa
mov
shll
sbb
sbb
add
sub
adc
cmpsb
js
xchg
mov
mov
repz
add
xor
jo
sub
mov
sub
icebp
dec
in
sub
fisttpl
push
xchg
stc
out
pop
mov
xor
icebp
ficompl
les
jne
jecxz
jle
fildl
mov
dec
lock
jmp
lods
mov
insl
mov
jmp
mov
aas
in
xor
loopne
lahf
or
sub
mov
fwait
imul
inc
out
ds
lods
or
out
adc
out
fsub
cmp
or
mov
inc
jo
std
lahf
and
ljmp
ljmp
push
cli
cmp
loopne
sub
inc
lahf
jmp
sub
sbb
mov
test
insl
jbe
lock
sub
mov
ficomps
add
jo
mov
pop
movsb
imulb
sahf
scas
mull
jecxz
movsl
clc
mov
or
mov
mov
sbb
jl
insl
mov
pop
sbb
adc
std
mov
addr16
mov
movsb
jb
icebp
pop
xor
mov
pop
dec
negb
mov
xor
dec
divb
movsl
stos
jno
or
daa
mov
sar
imul
mov
pop
mov
adc
mov
ret
pop
cmp
inc
xor
xchg
or
enter
fimuls
pop
out
and
fisubrs
pop
sub
jl
jecxz
movsb
test
out
int
das
fs
subb
xchg
and
fnstsw
scas
pop
push
bound
repz
mov
lahf
rcll
rorl
scas
sahf
mov
push
jg
pop
lods
imulb
das
adc
pusha
mov
sub
or
faddp
xor
mov
call
push
cmpsb
repz
or
mov
dec
insl
inc
adc
loopne
or
rcll
out
aas
incl
adc
testl
dec
inc
sub
cld
ret
sub
fadds
lahf
lods
jecxz
ja
testb
dec
or
jg
dec
es
push
xchg
addb
sub
and
mov
out
dec
shrb
xchg
xor
pop
and
repz
mov
mov
in
pop
add
js
into
repz
das
pop
pop
pushf
icebp
fnstcw
dec
pushf
or
addb
es
jo
or
adc
cmc
dec
dec
sub
fsts
ficompl
ss
out
ja
or
dec
pop
leave
ljmp
add
inc
pop
sub
xchg
xor
inc
icebp
or
push
outsb
aad
es
loopne
cmp
lcall
jno
bound
loop
xchg
repnz
test
ja
adc
push
jp
fstps
jns
rolb
lock
add
xorb
add
add
pop
int3
xor
rclb
add
add
out
push
lret
movb
dec
mov
xchg
xor
jl
add
lock
and
push
mov
aas
loop
outsl
jl
add
lock
clc
and
popf
call
repz
das
insl
or
inc
mov
cmp
fcmovbe
add
jg
push
test
cld
out
or
jnp
xchg
in
pavgb
mov
push
xchg
mov
in
fs
and
mov
je
mov
mov
dec
imul
sub
or
outsl
or
adc
roll
std
movsb
cli
mov
jns
xchg
xor
or
pop
in
icebp
mov
cmp
push
insl
icebp
icebp
repz
sti
test
xor
pop
sahf
push
jnp
outsl
repz
mov
ss
fwait
rolb
lods
dec
cli
fstpt
lcall
sub
cmc
push
jmp
push
rorb
sub
in
pop
mov
mov
idivb
dec
jae
mov
hlt
and
pop
mov
inc
xchg
popl
sbb
or
add
pushf
xchg
outsl
and
rcrb
testb
loopne
dec
cmp
and
stos
dec
pop
insb
jae
arpl
fisttpll
pop
fldt
in
vpsubq
stos
aaa
mov
dec
dec
js
jge
push
mov
loopne
adc
pusha
or
dec
cs
mov
pop
dec
ret
les
or
sbb
popf
imul
cmpsb
cwtl
adc
shr
xor
std
aam
sub
pop
jne
push
scas
xlat
popf
dec
lahf
std
test
mov
imul
rcl
or
xchg
pop
imul
and
stc
sti
sub
dec
sub
adc
test
sbb
cld
jg
cmp
add
mov
cmp
jo
ror
push
fisubl
icebp
mov
lods
mov
aas
inc
mov
mov
push
adc
and
sub
scas
or
imul
test
xor
mov
xor
mov
orl
in
shrb
jns
dec
leave
jle
lock
ljmp
add
mov
outsl
test
fistl
dec
pushf
mov
xor
stc
rcrl
jno
daa
stos
jnp
mov
cld
btsl
nop
sub
sub
and
dec
iret
jp
dec
scas
mov
jg
cmovb
add
sbb
mov
and
or
mov
cmpsb
and
lds
movb
inc
shlb
cmp
xlat
jne
xorl
cmp
cmc
mov
cmp
mov
sarb
out
inc
imul
pop
mov
or
xchg
sbb
inc
add
outsb
jg
rorb
xor
mov
imul
xchg
leave
xor
push
int3
sub
into
sbb
mov
pop
or
push
nop
pop
mov
imul
stc
push
push
dec
cmpsl
fwait
rol
xor
or
ds
pop
scas
jnp
imul
sahf
sar
xchg
mov
bound
cmp
cli
mov
cmp
pop
and
add
das
pop
outsb
sbb
fisubrl
mov
mov
sbb
repz
cmp
or
sbb
cmpsl
add
outsl
test
ret
jb
lret
push
lods
jge
add
or
xchg
dec
mov
inc
dec
les
arpl
not
mov
push
sub
push
icebp
hlt
std
mov
out
out
arpl
fwait
mov
mov
or
les
and
jnp
adc
add
das
push
stc
xor
outsl
inc
sbb
out
jns
mov
loop
repnz
mov
xchg
mov
call
xor
das
or
sub
inc
adc
stc
lret
adc
cwtl
out
lods
sub
insb
or
inc
pop
testb
jns
out
adc
out
mull
push
add
dec
loop
into
jbe
sbb
xor
xlat
cld
push
outsl
mov
pop
and
cmp
cmp
rol
cmp
stos
xchg
or
data16
aad
repnz
es
adc
stos
sub
repz
push
xchg
push
sarb
cld
or
pop
add
push
scas
xchg
lret
in
mov
and
pop
imul
mov
and
jae
int3
test
sub
mov
dec
lods
sti
stc
or
std
ret
addr16
push
sub
add
xor
jbe,pn
ljmp
jecxz
outsl
mov
inc
and
mov
test
lahf
out
aad
lahf
or
mov
cli
push
jl
jo
cmpsb
std
xor
sub
cmc
sub
sbb
fimull
jae
dec
jecxz
dec
mov
sbb
movups
inc
scas
fimull
jnp
pop
sbb
xchg
mov
lcall
pop
test
cmc
dec
xchg
add
and
in
push
xor
repnz
and
push
jo
lods
and
jecxz
sub
imul
and
xor
push
and
lock
movsl
fsubl
jnp
xor
cmpl
push
mov
lahf
mov
sbb
and
imulb
push
or
and
dec
roll
insb
or
stc
ret
xor
xchg
popf
or
sbb
xchg
call
loop
rcrl
jb
ljmp
pusha
imul
icebp
das
add
lods
dec
in
lods
xchg
insl
out
shrb
push
mov
pop
loop
pop
cli
push
jle
jmp
je
xchg
and
out
lret
jge
fstpt
adc
cmp
dec
mov
and
in
sar
and
and
out
jl
cld
jns
lret
push
push
icebp
nop
js
repnz
repz
push
sbb
clc
out
hlt
xor
rcrl
pop
scas
dec
lahf
imul
push
bnd
clc
lret
insl
xlat
jmp
mov
test
stos
je
aas
adc
and
int
dec
test
stos
push
or
decl
ret
xor
pusha
push
jae
dec
mov
push
or
call
cmp
rorb
dec
flds
fcomi
jno
fisubrl
pop
add
jg
or
dec
mov
insb
outsl
xor
add
cli
int3
mov
cmp
sbb
sahf
insl
std
jmp
jge
lods
mov
and
push
inc
cmp
insl
sar
mov
mov
or
loope
enter
lds
out
mov
std
pop
and
jmp
jp
pop
mov
dec
daa
add
push
inc
in
pop
cmp
pop
int3
test
iret
dec
sub
scas
dec
adc
jae
mov
js
ret
xchg
xor
and
gs
sub
daa
cmp
inc
stos
xlat
dec
jg,pt
lods
jbe
sti
jle
jo
push
dec
sub
jg
lock
int3
cmp
shll
jle
ret
xchg
mov
sub
in
xchg
cmpl
fwait
out
push
mov
pop
stos
int
push
mov
add
dec
push
loopne
sahf
add
mov
or
outsl
insl
repz
scas
xor
mov
or
pop
jo
mov
xchg
in
inc
movsb
sti
in
icebp
and
sbb
ljmp
lock
pop
mov
jl
sarl
lret
pop
ficompl
mov
ret
stc
or
repnz
in
dec
or
lret
sub
pop
cmp
les
divl
mov
daa
jle
divb
sbb
mov
inc
outsb
cltd
cmpsl
xchg
mov
sub
add
ja
stos
pop
out
roll
jl
sar
jnp
sub
test
jno
mov
lods
jge
adc
fcoml
pop
or
mov
pop
or
mov
insl
mov
or
mov
mov
int
into
add
xchg
aaa
xchg
xchg
adc
mov
fcomip
xchg
sti
repz
lcall
xor
in
bound
cmpsb
ja
jmp
or
je
repz
stos
insb
cmp
repz
dec
fistl
sub
test
sbb
aas
lock
or
sub
bound
inc
jp
aam
push
jae
jo
xor
lahf
or
repnz
icebp
mov
cli
jnp
mov
xlat
fwait
xlat
in
lods
pushf
in
or
sub
ss
mov
add
sbb
inc
mov
add
data16
push
rol
xchg
icebp
cltd
outsl
mov
shr
cmp
sti
lds
aam
jle
pop
repz
pushl
int
jno
outsb
or
sub
pop
fistpl
pop
int3
filds
or
xchg
xor
std
decl
lahf
or
add
cld
int
lcall
jb
dec
in
dec
xchg
sub
movsb
outsl
jne
lock
stos
pop
dec
xchg
mov
ljmp
mov
xor
out
adc
faddl
inc
mov
pop
in
pop
pushf
xchg
lock
mov
mov
inc
mov
mov
cltd
loopne
and
out
lret
and
lock
pop
jne
dec
sub
fldpi
push
mov
jnp
xchg
mov
xchg
pop
leave
ljmp
inc
dec
cmc
lods
fidivrs
mov
outsb
das
filds
out
push
loopne
in
sub
js
jmp
mov
pop
pop
lcall
roll
dec
outsb
cmc
shrb
xabort
and
nop
jb
inc
pop
add
ret
ss
out
dec
dec
movsb
stos
fdivs
add
mov
and
popf
sbb
sti
pop
jae
inc
xor
and
sbb
mov
add
xor
out
push
or
sub
dec
push
sbb
imul
mov
adc
popa
iret
lods
jle
sbb
xchg
fnstsw
xchg
push
push
sub
cld
in
mov
cmp
pop
adc
call
pop
sarb
lcall
aad
mov
pop
pop
aas
shll
and
shrl
sbb
mov
and
in
cmc
mov
in
sbb
ret
divl
sbb
inc
popa
lods
popf
mov
lods
xor
cmp
cmc
cmp
sub
and
mov
enter
dec
insl
pop
idivl
movq
iret
push
mov
sub
add
in
dec
add
pop
dec
pop
mov
push
stos
push
pusha
cmp
adc
popf
mov
ret
rol
test
movsb
sub
fldt
int3
pop
and
dec
jg
ljmp
mov
and
ret
push
mov
adc
popf
jns
lret
inc
aaa
lods
scas
imul
xlat
xchg
pop
pushf
sti
and
je
outsl
mov
pop
pop
adc
in
jle
xor
and
xchg
out
inc
mov
lahf
lahf
cmp
lock
adc
and
dec
or
aas
movsb
imul
mov
adc
rcl
mov
mov
lods
fisubrl
repz
orb
mov
mov
cs
popf
ret
cmpsl
int
std
jne
push
lcall
pop
out
and
sar
jnp
idivb
in
mov
cmpsl
leave
mov
jg
cmpsb
fwait
stc
insl
ljmp
or
cld
lock
jns
js
push
sub
into
mov
inc
push
aad
imul
and
adc
testb
mov
fisttpll
sub
out
pop
and
and
push
cmp
adc
mov
push
cld
xchg
insl
mov
sub
or
jne
dec
es
shl
cmp
mov
xchg
mov
mov
pop
sti
push
add
cmp
sub
lret
or
aas
cmovno
mov
adc
mov
xchg
mov
adc
shrb
jp
pop
in
push
shrb
xchg
fisttpll
xchg
jle
popf
scas
xor
mov
pop
pop
mov
jg
pop
subl
stos
add
xchg
push
pop
icebp
mov
mov
imul
mov
repz
ficompl
push
cmc
clc
adc
int
rorl
inc
mov
outsl
mov
test
jo
out
clc
fs
adc
stc
or
cmc
shll
clc
aam
cmp
movsb
imul
scas
in
lods
ret
out
mov
inc
pop
ds
lret
loopne
sbb
add
dec
jg
lock
stc
test
stc
dec
jnp
cmp
in
stos
in
fistl
test
fwait
inc
add
xor
mov
or
test
std
xchg
fwait
out
bound
cmp
add
inc
dec
fisubl
xchg
jns
addr16
shrb
or
mov
jo
push
jns
mov
dec
cld
push
mov
sub
pop
es
cmp
testb
mov
add
xor
push
bound
push
mov
dec
das
sbb
jge
bound
in
in
mov
add
xor
pop
xchg
sbb
nop
or
icebp
jle
add
out
shrb
pop
mov
push
ljmp
out
jmp
sbb
jge
out
fistl
pop
loopne
and
negl
and
inc
aas
loope
cmp
pusha
aam
sub
and
xchg
sbb
sub
and
sub
sbb
add
je
pop
ja
mov
subb
les
insl
pop
jp
hlt
mov
dec
jl
jnp
xor
in
aas
jg
lods
es
cmpsl
xchg
jg
inc
and
and
sub
xor
push
cmp
jne
dec
xlat
push
sub
arpl
sar
test
push
adc
test
or
jmp
out
sbb
jb
adc
xchg
pop
jnp
ret
out
fildl
in
sbb
insl
cmp
pop
or
and
lock
add
into
jle
jmp
sti
sti
cmp
cmc
lods
lahf
call
cmc
lods
mov
adc
lods
in
jge
jg
sbb
sub
cmpsb
push
cmpb
add
insl
or
pop
mov
shl
sub
sahf
lods
lods
dec
jmp
and
or
pushf
cmp
popf
ror
aas
jg
out
mov
insb
lods
cmpsb
sbb
push
in
ss
sbb
xor
mov
aad
cli
cld
jl
into
sbb
cltd
cld
sub
sti
ja
dec
dec
dec
shr
sub
scas
iret
push
jo
decl
pushf
push
or
loope
mov
pop
addb
leave
or
dec
fildll
icebp
add
push
roll
sbb
inc
jae
add
and
repnz
add
gs
in
ljmp
or
in
xchg
sub
inc
daa
sbb
fsubrp
pusha
cmpsb
jnp
in
sub
imul
sub
in
fdivrs
cmp
dec
jo
stc
xor
push
cmp
into
int3
adc
loop
int3
sub
dec
sub
in
daa
insb
subb
lahf
lock
sub
sti
outsb
das
into
sbb
pop
push
push
mov
subb
fnsave
out
cvtps2pd
arpl
mov
insb
lock
mov
fcompl
icebp
cld
adc
push
dec
ret
dec
outsb
pop
dec
cli
add
xlat
icebp
add
push
out
jae
mov
jecxz
dec
sbb
movsl
inc
adc
shll
push
popa
cvtdq2ps
cmp
dec
jnp
repnz
pop
mov
xor
or
out
adc
jnp
shl
xchg
lea
imul
lsl
sub
movsl
push
insl
xor
inc
ret
sbb
ja
scas
into
dec
sbb
rcll
xor
in
sbb
mov
das
xchg
fs
mov
cmp
sahf
movsb
add
pushf
into
fnstsw
inc
adc
push
mov
insl
sbb
test
popa
sub
xchg
mov
sub
aam
mov
sbb
pop
decl
iret
repz
scas
mov
push
das
sub
stos
scas
inc
rclb
scas
out
dec
hlt
insb
cmc
mov
sub
xor
cmp
in
xchg
or
mov
sbb
mov
icebp
mov
mov
adc
stos
push
lahf
in
out
hlt
cld
sub
inc
mov
lcall
cmp
xchg
icebp
inc
or
outsb
cmc
imul
adc
hlt
jae
nop
inc
inc
add
aas
and
sarl
fcomi
cmpsb
sti
aad
add
pushl
xlat
test
pop
lock
scas
xor
int3
imul
adc
nop
jb
push
out
push
imul
cmc
adc
add
les
insb
mov
out
jmp
out
negb
mull
mov
mov
insb
std
je
sub
ja
jl
jno
add
add
push
sbb
rolb
xchg
sarl
divps
ret
add
push
push
popa
and
mov
pop
nop
adc
jbe
mov
imul
push
cmp
mov
sub
xlat
jg
mov
fnsave
gs
hlt
dec
aas
push
sti
dec
sbb
stos
rcr
push
pop
dec
dec
mov
add
testl
outsb
stos
fists
xor
test
imul
or
out
mov
clc
jbe
lds
cmp
imul
fdivp
lods
popf
mov
in
lds
and
pop
scas
jae
push
push
adc
push
jbe
imul
add
mulb
cmp
push
fimull
jno
cwtl
sti
mov
jbe
in
inc
inc
mov
xchg
jp
mov
aaa
add
mov
in
rcrb
xchg
hlt
lods
push
sahf
dec
cltd
lea
push
cld
subb
movsl
xor
nop
mov
or
push
loopne
cmp
pop
pop
xor
leave
ds
sub
cmpsl
sbb
lods
fsubrs
ja
rcrb
cld
or
scas
push
or
pop
xchg
insb
aas
lds
iret
fsubl
cld
data16
pop
pop
sbb
and
mov
sbb
jns
or
sbbl
dec
scas
and
lcall
push
or
push
jle
dec
sti
sbbl
cmc
dec
sub
xchg
jle
fistpl
arpl
adc
xchg
daa
mov
seto
subb
xlat
outsb
test
mov
out
testl
cmp
adc
push
lock
js
insb
pop
jle
cltd
daa
and
mov
jno
das
push
leave
aad
and
addb
leave
testb
cmp
scas
jno
test
mov
sub
data16
and
enter
sub
ljmp
pop
cmc
lret
test
mov
jns
daa
and
dec
mov
and
sub
cwtl
inc
dec
lods
sahf
mov
dec
movsb
iret
test
xor
mov
shl
bound
and
das
out
mov
pop
cmp
add
movsl
sti
out
pop
test
or
mov
sbb
nop
jmp
jne
xor
test
out
lock
jmp
fdivs
fincstp
out
add
jns
insl
or
push
ljmp
fistl
ja
movsb
dec
int3
pop
insb
add
push
data16
pop
sbb
in
mov
lods
or
shrl
negl
outsb
stc
stc
jl
mov
cwtl
xchg
push
xchg
jbe
jl
lcall
mov
ret
cld
jmp
xor
imul
hlt
add
mull
scas
out
or
dec
cmp
jo
bswap
jg
dec
imul
dec
sub
in
sub
in
pop
out
cltd
push
imul
push
loop
and
push
js
aas
and
nop
push
ficomps
and
andb
jb
inc
pop
test
inc
xchg
cli
sub
aas
pop
hlt
dec
rcl
mov
pushf
push
xor
rcrl
pop
arpl
xor
call
out
xlat
push
das
lea
cmc
add
mov
pop
std
icebp
pop
xchg
mov
in
add
out
fiaddl
xor
std
cld
lock
out
push
jg
std
into
push
cmp
jnp
add
nop
add
outsl
sub
dec
xor
adc
outsl
repz
ja
clc
insb
stc
in
cli
mov
mov
imul
fistpll
std
fs
add
lahf
mov
add
and
sbb
movsl
cmp
in
mov
add
lods
mov
push
mov
arpl
dec
and
adc
lret
push
mov
aaa
adc
cld
inc
out
and
std
xchg
cld
inc
cltd
sub
and
sarl
cmp
xlat
loope
pushf
push
sti
mov
lea
push
jp
bound
dec
clc
jne
loop
hlt
cwtl
add
inc
push
jnp
sub
push
fcompl
and
mov
add
cld
int3
lret
in
fisubrs
jnp
ljmp
loop
push
rcrb
mov
ret
inc
jo
or
jge
leave
test
fisttps
mov
inc
lret
pop
mov
cld
rorl
clc
dec
jnp
leave
ljmp
dec
or
mov
mov
stos
outsl
or
mov
test
xchg
rep
sbb
add
cmpsl
out
call
out
add
xchg
cmp
out
repz
or
ret
pop
stos
rorb
bound
mov
cmpsl
out
push
pop
getsec
clc
stc
dec
or
lock
ret
sbb
pop
test
ja
shlb
lea
std
or
mov
jge
fnstsw
mov
addb
mov
jge
sbb
fadd
and
or
clc
lret
cmp
push
repnz
les
cmp
pop
rdmsr
shrb
into
and
std
mov
int
jnp
and
aaa
sub
jl
lret
sub
insl
icebp
mov
mov
mov
imul
scas
aad
jle
shlb
popf
clc
out
push
pop
adc
rcr
mov
orb
dec
out
sub
lret
scas
push
test
lods
push
xchg
std
or
cmp
mov
sub
lock
outsb
jl
mov
mov
pop
pop
or
add
stc
cmp
push
mov
movsb
repnz
mov
dec
xor
and
rcrb
and
icebp
daa
dec
lods
ja
repnz
mov
push
test
clc
imul
pop
in
test
repnz
ja
add
out
mov
cwtl
adc
mov
and
add
into
sbb
in
pusha
das
cli
dec
ret
mov
mov
jbe
aad
andb
fsubrl
cmp
push
xchg
clc
shll
mov
mov
jns
mov
repnz
pushl
push
pop
adc
les
testb
aam
stos
inc
sbb
fisttpl
push
push
ret
or
loope
lret
jl
mov
lods
cmc
pop
jo
mov
shrb
mov
or
push
scas
mov
stos
clc
jo
fldt
fdivr
xor
imul
mov
or
outsl
jbe,pn
out
mov
fs
cmpsl
subb
jecxz
dec
punpckhwd
adc
add
mov
jge
scas
and
test
dec
pop
sahf
shr
and
div
nop
jle
lea
or
into
dec
les
dec
in
sarb
das
mov
mov
rorb
push
inc
fwait
movsb
repz
and
mov
fcmovnb
cli
cli
xor
pop
imul
loopne
inc
aad
mov
adc
pmuludq
jb
in
and
rcrb
ljmp
add
fwait
hlt
dec
adc
mov
xor
insb
stc
push
cld
ds
push
out
testl
jnp
or
jnp
xor
cmp
scas
jl
xor
add
sub
insl
or
popf
jl
js
std
and
xchg
and
jae
ret
jge
jge
add
xchg
dec
scas
mov
xor
insl
sub
pop
sub
mov
test
inc
mov
xchg
jo
push
mov
outsl
lods
pop
mov
outsb
dec
ss
dec
mov
pop
mov
in
jnp
dec
or
pop
mov
jle
add
sti
repz
or
inc
out
hlt
int3
int3
scas
outsb
cli
jge
int
pusha
das
lea
xor
jl
sbb
or
push
jo
jo
dec
stc
push
add
cmc
icebp
or
sub
adc
outsl
xor
or
daa
test
int
icebp
fdivrl
outsl
mov
aas
ja
test
cs
mov
jmp
in
or
pop
push
mov
jae
add
jb
dec
divb
rcr
xor
push
or
rcll
pusha
insl
inc
arpl
lods
jnp
call
adc
add
ss
sub
mov
cld
lock
or
push
mov
outsl
js
xor
outsl
dec
add
mov
pop
shl
inc
out
mov
icebp
xor
mov
add
in
mov
fwait
jno
mov
jbe
jne
hlt
aas
xchg
scas
repz
outsl
mov
movsl
in
loop
imul
push
mov
popa
insl
mov
jno
mov
xor
mov
mov
sar
cli
cmp
or
add
cmp
jae
mov
mov
inc
add
inc
inc
push
inc
outsb
roll
xor
push
mov
imul
out
sbb
incl
add
xor
mov
popf
mov
adc
std
lock
cmpl
sbb
jb
stos
jae
cmpb
cwtl
jae
cmpsl
sub
dec
mov
or
sub
scas
lea
bnd
adcl
or
dec
jb
mov
xchg
add
sbb
jo
hlt
dec
mov
cmp
lcall
subb
and
push
xchg
push
or
out
and
outsl
ror
sti
add
insb
std
stos
dec
imul
or
xchg
adc
scas
andb
xor
popf
insb
lods
pop
mov
js
cmp
rorb
gs
adc
mov
add
cmpb
dec
adc
mov
sti
xchg
xacquire
pmuludq
scas
mulb
int
in
sbb
cs
nop
pop
and
dec
cvtpi2ps
adc
xchg
sbb
push
loop
or
repz
or
jo
popl
sub
jg
or
dec
mov
lds
mov
cmp
jo
add
aas
inc
mov
adc
push
in
xor
cmp
cld
xor
push
mov
jae
je
pop
das
push
sub
xor
out
sub
out
in
int
insb
mov
in
insb
sub
sti
subb
jp
scas
mov
gs
in
xor
cmp
or
or
fldpi
mov
xchg
sub
add
pushf
sbb
mov
leave
testb
add
xchg
lock
push
repz
add
scas
icebp
dec
or
test
mov
into
xor
xor
push
cmp
call
jne
jle
sti
jbe
fxch
inc
xchg
lock
dec
int3
mov
cmpsl
nop
sbbb
imul
mov
pop
dec
out
les
pop
ret
subb
test
xor
scas
sub
or
repnz
jae
call
repnz
dec
adc
icebp
loop
jnp
fdivp
xchg
lea
xchg
and
inc
scas
sub
jle
or
repz
sbb
rolb
xor
lods
shl
bnd
outsb
jae
icebp
sti
lods
repz
lret
vmwrite
dec
lock
jg
fwait
nop
mov
inc
hlt
sub
cmc
push
push
lods
repz
fisubrs
and
outsl
or
cmc
and
jg
jge
sahf
stos
out
scas
mov
pop
mov
dec
shlb
sahf
das
fs
adc
sub
mov
and
mov
out
inc
sub
divl
out
xchg
cmpsl
je
dec
imul
mov
mov
xor
repnz
lock
push
std
dec
fimull
arpl
jmp
repnz
mov
xor
mov
orl
fldcw
shl
insl
cmp
sub
lods
jmp
cli
dec
dec
cmc
mov
loopne
cmp
push
mov
aam
pop
xchg
add
mov
xor
pop
dec
sub
jmp
movsb
or
jle
dec
popa
jp
popf
adc
jae
shll
lret
std
sub
aas
sub
dec
mov
repnz
mov
mov
repz
cmp
test
inc
or
dec
int3
mov
jge
pop
sbb
cmp
addr16
in
and
gs
cmp
repz
jecxz
cwtl
cmc
jp
cmp
pop
cmc
in
sbb
push
or
cs
das
sbb
hlt
lea
dec
repz
btr
into
dec
sbb
arpl
or
adc
shl
sar
into
pop
add
mov
mov
mov
lock
pop
sbb
stos
aam
sbb
cltd
lret
cltd
mov
push
adc
sub
mov
pusha
inc
sub
jbe
gs
jno
inc
cmpsl
fwait
mov
jae
fwait
or
gs
popf
repz
mov
out
pop
pop
insl
ret
cmpsl
mov
std
lea
movsl
imul
cmp
xchg
inc
inc
and
iret
push
repz
incl
mov
iret
out
outsl
loopne
jmp
pop
ljmp
mov
icebp
stc
pop
mov
inc
jecxz
pop
mov
call
iret
jnp
addr16
mov
in
out
sbb
and
cmc
cmp
clc
fcomps
ja
stc
xor
pop
pop
icebp
ret
xchg
mov
loop,pt
push
in
mov
pop
xor
adc
ret
jge
xor
xor
jne,pt
mov
ljmp
pop
mov
mov
lea
jnp
mov
cmp
mov
pusha
aam
ret
sahf
jo
inc
repnz
or
xor
xor
or
or
lods
fwait
add
int3
stos
out
mov
sbb
push
adc
rcrb
or
xlat
imull
xor
sub
dec
imul
popa
jb
out
enter
ss
lods
testb
mov
dec
test
lcall
lock
inc
jge
pop
push
stc
cmp
fdivr
scas
repnz
mov
pop
adc
or
xchg
imul
nop
mov
sbb
imul
popa
and
mov
sub
arpl
dec
mov
mov
testb
testl
out
or
add
sti
xlat
imul
push
mov
iret
or
jle
mov
ret
repnz
sbb
cmp
bswap
fcos
adc
inc
cmpsl
add
repz
or
shll
sub
dec
adc
cmpsb
lods
mov
mov
mov
prefetch
leave
out
popa
repz
loop
add
sub
clc
cld
loop
push
clc
out
add
jb
int
jl
sub
testl
in
outsl
in
in
lret
jne
out
enter
outsl
inc
push
adc
adc
pop
dec
jo
and
cmpsb
js
mov
or
icebp
rcrl
adc
xor
add
sbb
addl
fildl
pop
dec
repz
dec
movsb
sub
xchg
in
ret
insb
lods
and
jb
jae
push
fdivrs
movsb
xor
push
stc
inc
cld
mov
jge
push
pop
adc
stc
dec
add
fidivl
lret
inc
mov
test
sub
fidivl
cmp
or
hlt
xorl
outsl
call
es
sub
jecxz
inc
ja
pop
pcmpgtw
daa
fcomip
sbb
pop
adc
icebp
aad
clc
push
push
jns
dec
cmpsb
scas
pop
das
mov
inc
fcoml
dec
xchg
mov
cld
add
add
lret
fstpt
data16
jb
dec
push
inc
mov
mov
add
lods
icebp
out
dec
out
jl
adc
in
or
or
in
dec
push
and
or
icebp
jb
mov
inc
xchg
push
rcr
pop
adc
fisubs
imul
adc
add
aas
pop
dec
notb
mov
mov
dec
into
into
cwtl
cmp
and
dec
inc
outsb
into
jle
decl
mov
mov
pop
or
dec
or
mov
sbb
arpl
sub
lcall
push
push
movsl
loop
and
mov
test
test
mov
fidivrs
stos
fwait
push
dec
cmp
sbb
sbb
xchg
or
in
adc
fsubrs
in
out
pop
inc
out
or
lock
cwtl
cmp
pop
fldln2
repz
pop
in
hlt
or
repz
pop
sbb
jle
dec
daa
cli
pop
imul
add
add
sti
or
outsl
xor
leave
aam
ljmp
lcallw
jg
add
adc
xchg
xor
mov
int3
cli
inc
or
push
ds
xor
out
imul
out
lock
mov
mov
mov
xchg
pop
cmp
cmp
dec
stos
and
push
pop
mov
push
dec
imul
mov
cs
jmp
imul
cmc
xor
das
je
xchg
ljmp
enter
sub
mov
out
bndldx
out
pushf
xchg
test
mov
sbb
imul
lock
jp
or
pop
das
and
mov
andl
imul
sbb
jno
push
mov
or
out
and
jbe
test
dec
jo
and
xlat
lahf
pop
sbb
dec
pop
in
dec
insl
push
addr16
dec
mul
imul
jp
out
xor
mov
mov
fnstcw
pop
xlat
cmp
js
push
testl
add
mov
data16
push
addr16
dec
mov
out
sti
pop
test
dec
scas
mov
movsb
xor
mov
fwait
dec
out
jle
leave
stc
inc
insb
cwtl
cmp
or
mov
out
add
shll
cmp
call
adc
clc
daa
adc
aas
stos
out
hlt
imul
push
sub
push
aas
mov
sub
out
mov
sti
mov
xchg
cmc
xlat
fidivrs
imulb
mov
mov
pop
lods
stos
lods
dec
sub
pop
in
pop
fdivrl
test
mov
repnz
rorl
adc
in
aam
dec
rclb
mov
dec
pop
push
insl
lock
arpl
sbb
repz
or
sub
inc
adc
xchg
mov
sub
push
pusha
ja
cld
neg
jo
and
xor
inc
mov
arpl
cmc
cmc
in
iret
jle
and
std
enter
rcrl
inc
mov
cmc
in
pop
repz
sarl
fidivrl
addr16
xchg
and
mov
out
in
je
scas
sti
divb
cld
cld
xor
jnp
mov
pop
mov
mul
push
loope
das
mov
jbe
cmp
jmp
add
mov
repnz
jmp
outsb
push
jmp
or
pop
mov
test
inc
int3
jp
inc
sbb
push
aam
std
jmp
subb
mov
xor
movl
and
sub
and
jnp
aas
cmp
aas
jg
jle
and
sbb
dec
sbb
lock
repnz
hlt
into
mov
je
shlb
mov
sbb
popa
sub
fisubl
fstl
divl
clc
cmpsb
jl
into
cs
int3
cmp
jo
inc
xor
push
testl
repnz
jbe
mov
fisubrl
xchg
sub
push
outsb
ss
std
out
je
lods
outsb
aaa
movsl
icebp
mov
dec
scas
mov
xor
cmc
inc
pop
sub
push
cld
cmp
dec
shrb
xchg
hlt
or
mov
test
or
dec
pop
pop
dec
inc
imul
test
xchg
test
ljmp
or
lock
mov
or
and
xor
inc
mov
testl
inc
sub
jo
pop
in
cltd
int
push
out
push
xchg
mov
adc
push
nop
insb
mul
mov
mov
mov
xchg
mov
fxtract
mov
xor
dec
xchg
push
aaa
cmp
inc
inc
push
mov
lock
cmpsl
fidivs
push
xchg
out
sbb
ds
mov
mov
lock
repnz
fbstp
and
add
lret
test
cmp
and
divb
jmp
outsb
rorb
adc
pop
push
stos
movsb
mov
std
out
jge
push
out
mov
add
mov
loop
aam
in
dec
imulb
and
gs
add
or
iret
out
xchg
and
shlb
loop
loop
xchg
and
std
loopne
cmpl
cmp
add
loop
add
in
xchg
or
add
inc
sbb
cmc
and
sbb
bound
xor
jbe
repz
popf
add
fs
sbb
cmp
inc
xor
fisubrl
out
adc
leave
add
clc
or
ret
jge
sbb
mov
imul
sar
pusha
lret
idiv
dec
movsb
mov
hlt
xor
das
jg
ficomps
lcall
mov
mov
das
push
sbb
dec
std
xor
frstor
icebp
dec
loop
mov
inc
lcall
or
lahf
xor
popl
stos
inc
clc
imul
dec
call
repnz
add
aad
cwtl
fists
rclb
xchg
dec
sti
xchg
mov
movsl
cmp
out
push
lret
lret
les
pop
psllq
sbb
notl
mov
jge
sbb
add
mov
pop
mov
pop
sbb
outsb
or
lret
repz
sub
inc
out
add
stos
stc
dec
jl
notb
idiv
pop
mov
div
pop
add
leave
mov
xchg
test
ljmp
jo
scas
lods
pop
fisttps
or
mov
dec
lock
xchg
ja
mov
in
mov
add
dec
out
push
bnd
dec
clc
xor
in
mov
hlt
movsl
push
jmp
add
in
shll
rol
arpl
lret
mov
jmp
sub
dec
sub
dec
int
lcall
inc
add
out
and
mov
sbb
xchg
clc
mov
and
lods
mov
sbb
or
cmp
sti
notb
sub
push
bound
and
loop
add
cmc
shll
add
push
cmp
push
mov
push
mov
mov
in
mov
inc
sbb
ret
jae
repz
fistl
adc
cmp
lods
dec
add
mov
jae
adc
dec
ljmp
dec
lods
or
repz
xor
jp
test
dec
sbb
repz
movhps
daa
lcall
push
stos
repnz
psubsb
sub
sub
inc
sub
hlt
sbb
inc
cmp
adc
int3
mov
imul
ds
lea
cmp
cmp
pop
imull
cmp
icebp
ss
out
imul
popa
jae
sbb
jno
into
push
orl
add
in
jg
push
hlt
or
fcmovnb
push
out
mov
jmp
orl
xchg
fstpl
or
and
xchg
mov
das
in
inc
into
xor
mov
xchg
adc
sub
jne
call
out
dec
lret
scas
pop
je
mov
insb
cmp
adc
sub
sbb
add
sti
add
pushf
or
add
cmp
mov
das
out
xchg
xor
lcall
in
lds
mov
insl
jb
shrb
mov
push
sbb
mov
dec
in
add
nop
lock
icebp
in
mov
push
mov
and
out
cltd
aad
cmpsl
pop
xor
stc
jl
xor
push
sti
jbe
clc
repnz
add
loope
repnz
jl
cmpsl
pop
mov
mov
js
jge
lods
and
sub
inc
jb
fildl
out
sub
adcb
adc
pushf
push
push
insl
cmp
cld
xlat
push
or
shll
xchg
xchg
pop
mov
imul
ror
sbb
adc
or
in
and
mov
mov
pushf
ss
sbb
mov
test
mov
add
push
pop
push
std
arpl
adc
sti
out
in
push
xchg
std
or
out
hlt
jge
sbb
mov
in
mov
cltd
hlt
and
or
test
decb
cld
add
jnp
xchg
jnp
popa
push
inc
imul
into
cwtl
std
jp
adc
jae
cmc
lahf
mov
aas
mov
pop
cmp
push
ja
cmc
leave
jg
scas
push
xchg
mov
scas
pop
faddp
icebp
hlt
inc
sbb
cmpsb
inc
dec
dec
jns
jae
hlt
xor
icebp
dec
mov
aas
ja
add
sbb
shl
mov
xchg
inc
pop
cmp
test
and
insb
lret
pop
inc
shlb
sbb
or
cmc
mov
shr
push
jg
shrb
push
insb
mov
fcmovnbe
xchg
add
cmp
mov
jg
mov
aaa
mov
sbb
dec
mov
fists
out
cltd
mov
jne
jne
popf
or
scas
andl
pop
or
loop
adc
xor
adc
inc
mov
lock
or
dec
testl
aas
xorb
in
dec
xchg
add
mov
jno,pt
xor
dec
mov
mov
pause
gs
and
cld
pop
cmpsb
mov
sub
dec
xchg
xor
dec
enter
popl
sub
mov
cmpsl
enter
sub
addl
jae
mov
jmp
fsubr
in
add
pop
idivl
sbb
cmp
dec
pop
wbinvd
test
adc
cld
scas
mov
adc
mov
pushf
cld
fcmovnb
lock
nop
sbb
or
int3
lcall
mov
ja
stc
es
out
or
out
ss
lret
jo
std
data16
out
sub
dec
or
int3
fcoml
and
add
dec
lea
aam
jno
ja
add
lcall
push
repz
jle
jnp
and
out
add
loopne
icebp
roll
sbb
sub
ljmp
repz
stc
jnp
int3
loop
sysexit
repnz
push
add
pop
movsl
adc
bnd
add
hlt
pop
jb
stc
jg
or
cs
aaa
mov
shrl
sbb
mov
xchg
or
aas
stc
xchg
sub
sbb
cmp
sbb
addb
add
adc
mov
mov
or
ret
gs
adc
clc
inc
adc
sub
xor
nop
cmp
or
jnp
sbb
popf
dec
mov
insb
sub
out
idiv
clc
ret
mov
push
repz
mov
imulb
mov
hlt
in
push
pop
add
mov
xchg
jne
and
dec
incl
rorl
mov
lock
cmp
sbb
outsl
imul
dec
repnz
cmp
stos
out
push
or
jno
dec
xchg
jle
xchg
mov
out
and
mov
mov
lea
jne
dec
jmp
mov
pop
jle,pt
icebp
push
and
push
cld
lds
adc
daa
clc
push
cmpsl
cld
fcompl
dec
clc
push
mov
shrl
imulb
int3
pushf
xor
or
sub
mov
mov
int
mov
or
add
jge
cli
jo
dec
cmpsb
lahf
mov
cmp
add
lahf
iret
pop
cmp
gs
dec
xor
lock
scas
push
jns
xchg
ret
ret
xor
rol
js
xchg
popa
and
idiv
popf
pop
xor
xor
jle
jbe
out
cld
mov
sub
notl
xchg
outsl
rcl
cld
inc
imul
repnz
pop
orb
inc
inc
rol
mov
lods
xchg
cs
dec
lea
inc
frndint
sub
sbb
pop
mov
das
cmp
lahf
dec
xor
dec
or
iret
jne
repnz
mov
add
and
pop
dec
push
scas
dec
push
and
xor
fcoms
mov
xchg
std
jg
xor
xchg
insl
jo
nop
stc
xchg
cld
out
mov
std
adc
insl
pop
scas
mov
dec
cmp
lock
int3
shll
or
adc
mov
cli
pop
test
shll
je
ret
ja
mov
addl
xchg
mov
ds
inc
inc
add
js
dec
icebp
xchg
int3
dec
fistl
mov
cltd
bound
into
cmpsl
pop
and
repz
imull
pop
adc
push
mov
sub
cmp
dec
mov
clc
repz
cmp
aaa
adc
fisttpl
out
cli
pop
out
clc
movsl
jge
stos
jg
lcall
push
cmc
pop
icebp
testb
dec
sub
loop
lcall
into
loopne
mov
xchg
add
pop
pop
call
cmp
inc
das
dec
xor
sub
cli
mull
xor
in
aaa
xchg
loope
mov
std
imul
fiaddl
add
sti
fnstcw
les
jbe
inc
clc
push
popl
sub
cmp
fldt
test
and
ret
dec
aas
lret
mov
icebp
xor
out
pop
scas
insb
mov
shll
mov
jle
nop
popf
mov
adc
andb
popa
outsl
dec
jle
repnz
add
jg,pn
sbb
pushf
sti
outsb
hlt
psubw
in
notb
pop
inc
sub
add
jge
push
jmp
inc
repz
adc
dec
in
jg
sub
scas
push
fistps
and
inc
mov
pop
aas
test
and
call
jns
add
mov
pop
sbb
mov
dec
movb
cmp
out
repz
ret
push
mov
testl
lea
lods
scas
fstpt
pop
dec
lcall
shrl
mov
lods
adc
and
jp
mov
inc
lock
outsl
negl
xchg
mov
push
arpl
mov
in
pop
pop
bswap
out
paddb
fdivl
adc
insl
cld
rcrl
push
sub
pop
jnp
call
mov
ss
lcall
sbb
ficoms
push
xchg
dec
jl
jb
lret
jne
dec
cli
out
lock
mov
xor
enter
hlt
and
repnz
lods
popa
clc
icebp
pop
push
aas
call
daa
mov
mov
add
cmpsb
xor
ret
lock
pop
mov
xchg
push
nop
xor
setg
sti
mov
add
int3
xchg
fimull
jg
cmp
cld
sub
push
imul
lock
test
lret
jne
sar
cmp
sti
pushf
repz
leave
movsb
pop
hlt
and
push
rcrb
ss
enter
sbbb
movsl
or
inc
in
stos
add
adc
mov
or
xchg
in
xor
icebp
pop
out
lods
cmc
jle
js
fbstp
sbb
adc
test
cmc
push
leave
into
sahf
repz
out
mov
xlat
pusha
stos
testb
push
mov
dec
divl
mov
cmp
cmp
scas
xlat
negl
dec
cmp
mov
fdivrp
mov
testb
mov
roll
cmpb
mov
sti
and
test
mov
mov
mov
fiaddl
cmpsb
xor
dec
faddl
push
xchg
mov
or
push
movsl
repz
clc
cltd
pop
adc
vfrczss
cmpsl
xor
cmp
xor
and
insb
inc
cmp
cmp
rorb
enter
sbb
mov
push
cmpsl
or
fcomps
mov
out
cmpsl
jl
jg
lock
sub
jne
and
sbb
stc
fadd
sub
push
lret
xor
dec
shr
bnd
out
sti
dec
int3
mull
jg
shll
daa
fstpt
pop
mov
out
dec
mov
push
stc
pop
mov
sub
int3
hlt
imul
arpl
push
shlb
or
repz
dec
push
mov
lock
jnp
add
adc
dec
or
sbb
and
mov
dec
pop
push
or
sub
sarb
in
inc
mov
ljmp
xchg
loope
in
jmp
cmp
clc
jnp
dec
into
pop
sub
inc
adc
in
adc
sarl
fwait
std
inc
cli
nopl
xor
lods
fwait
mov
mov
pop
dec
or
dec
insb
fwait
dec
mov
jge
es
stos
push
cmp
push
push
sti
pushf
shrb
or
arpl
cmc
rcr
mov
ds
push
xor
imul
pop
xor
or
sbb
into
nop
out
int3
dec
mov
clc
ss
fidivl
sbb
dec
cltd
jb
repz
je
sbb
outsl
add
sub
leave
sub
imull
aaa
mov
push
aas
jg
xor
mull
shl
xor
cmc
inc
mov
repnz
ds
nopl
outsl
ja
je
adc
adc
leave
jo
xchg
das
ret
aaa
into
orl
cmp
fdiv
int3
jle
adc
mov
push
dec
adc
fucom
in
push
out
mov
inc
inc
or
push
out
cmp
rol
xor
sbb
dec
insl
cmpsl
and
dec
push
scas
sub
sub
cmp
push
adc
pop
mov
mov
lods
pop
hlt
call
jg
fwait
loopne
mov
test
in
inc
dec
pop
adc
ret
clc
shrl
inc
lahf
filds
pop
or
repnz
pop
or
daa
mov
xchg
leave
cmp
ljmp
mov
bound
out
cmp
es
inc
icebp
fldt
cmp
bound
sub
imul
stos
imul
xor
mov
pushf
xchg
repnz
int
mov
sbb
add
es
loope
and
pop
lcall
and
fdivl
cmp
adc
icebp
arpl
addb
or
or
mov
in
pusha
dec
int
xor
add
pop
cs
jne
testl
dec
push
lods
or
rclb
aas
add
shlb
push
dec
insl
xor
imul
add
scas
repz
sti
outsl
inc
dec
in
jmp
into
iret
adc
push
and
repnz
int3
cmp
imul
cmp
in
pop
sub
lods
cmc
dec
imulb
insl
or
or
inc
dec
jg
push
rol
xor
push
pop
sub
sub
inc
jbe
test
inc
popa
mov
dec
es
aad
js
add
cwtl
jecxz
iret
outsl
adc
je
pop
xlat
adc
jecxz
sbb
rcll
stos
sub
notl
hlt
xlat
decl
das
rorl
adc
xor
and
scas
mov
fdivrl
jo
es
mov
mov
inc
cmpl
add
insl
mov
jge
testl
dec
adcb
ret
pushf
push
xor
pop
dec
xchg
cwtl
subl
js
fsts
out
mov
pop
xor
add
out
test
or
insb
cmc
in
insl
mov
clc
das
sub
test
jmp
mov
sub
push
inc
adc
or
sub
xor
insl
je
mov
sub
xchg
orl
gs
add
aas
dec
hlt
adc
in
mov
std
imul
push
jae
mov
or
outsl
subb
pop
cs
pop
insl
push
xor
add
jae
jno
das
pop
stos
aad
int
inc
repz
std
testl
xchg
push
pop
lds
push
mov
int
popf
push
xchg
testb
icebp
cs
out
mov
fwait
sbb
mov
inc
and
cmc
push
lock
jge
mov
dec
js
repnz
add
sub
pop
rcr
add
test
ret
push
sub
test
push
jae
fstpt
mov
mov
xchg
andb
pop
enterw
pushl
das
js
adc
inc
push
xor
sti
rorl
jge
sub
xchg
add
pop
aas
xchg
add
imul
xchg
scas
loope
add
popa
mov
or
push
test
icebp
in
jmp
sbb
and
out
xor
or
testb
xor
in
call
ret
lds
dec
repz
adc
dec
out
adc
cmp
sbb
inc
call
dec
in
outsl
lret
xor
xchg
repnz
jg
int
hlt
sbb
inc
out
mov
cld
xchg
ja
jae
mov
je
stc
out
mov
pop
add
in
stos
mov
mov
int3
push
imul
cmp
pop
sbb
or
adc
xchg
add
pusha
sub
add
adc
test
notb
mov
jg
incl
adc
xchg
sbb
add
push
xchg
push
out
movsb
aaa
jle
cmp
sbb
adc
stos
das
sar
les
sub
shr
lcall
fnstcw
add
into
aaa
cli
sti
outsl
or
add
pushl
dec
hlt
cmp
fs
inc
int3
imull
jno
add
sub
mov
cmp
out
ljmp
fwait
icebp
xchg
fdiv
insb
pop
adc
test
xchg
cmp
aam
mov
test
sahf
shrb
stc
adc
jo
adc
repnz
and
clc
push
xor
mov
add
push
popa
mov
adc
cmc
sub
rcrl
ja
xchg
mov
test
sbb
addr16
stos
test
shr
hlt
adc
push
ljmp
out
mov
pop
push
int
divb
push
mov
int3
test
out
mov
add
adc
lcall
jne
mov
mov
notb
repz
hlt
in
xor
mov
daa
adc
insb
mov
mov
add
lock
dec
mov
xor
jbe
adc
ja
dec
pop
xchg
scas
lcall
and
xor
lock
lods
ret
mov
test
xchg
jae
xchg
in
adc
fcomps
pop
adc
or
xchg
clc
push
jae
fiaddl
out
das
lock
fimuls
pop
push
in
imul
and
in
call
in
xor
dec
sti
inc
dec
cmc
lea
scas
or
jle
mov
sbb
lock
jl
cld
jl
xchg
les
cmc
mov
mov
imul
scas
add
daa
dec
mov
xchg
out
sti
out
xor
scas
dec
fcoms
push
or
int3
adc
pop
jle
jnp
mov
insb
stos
add
xor
andl
mov
loopne
mov
jne
shlb
mov
in
iret
icebp
cmpsb
movsl
mov
test
push
adc
je
fwait
insb
imul
or
rcrl
dec
imul
push
cmpsb
dec
adc
cld
movsl
out
cld
sub
xchg
mov
jle
shlb
dec
mov
in
stos
mov
out
and
dec
push
in
xlat
inc
fcoml
mov
ret
mov
sbb
cld
fs
sbb
loope
cld
ds
mov
movsb
inc
or
inc
mov
ja
adc
xor
std
mov
mov
repz
xor
jp
lret
sbb
ds
fistl
mov
mov
xchg
scas
jns
push
mov
dec
sbb
mov
xchg
loope
lret
insb
mov
mov
std
pop
sub
jecxz
out
arpl
mov
scas
mov
popf
leave
movsb
jl
faddl
fcomi
outsl
mov
sti
or
xor
adc
mov
in
out
adc
cltd
inc
test
cmp
scas
testl
hlt
icebp
rcrb
jnp
pop
or
int3
add
dec
stos
or
stos
rcrl
in
lcall
ljmp
popf
push
mov
dec
cld
pop
cmc
dec
pop
push
jge
sbb
divl
push
jle
in
jae
ljmp
clc
test
ret
imul
sbb
repnz
lods
test
rep
in
add
lock
push
fwait
xor
fsubr
es
pop
add
xchg
sbb
or
cmpsl
data16
xlat
loope
pushf
je
fsubl
xor
in
xchg
mov
adc
sti
fs
mov
xchg
ljmp
push
sarb
adc
das
ja
test
sub
movsl
sbb
gs
and
subb
add
cmp
push
cmp
adc
mov
icebp
lock
mov
je
arpl
fwait
inc
dec
test
fdivp
sti
repz
and
add
cmp
xchg
adc
lods
aas
subl
loope
mov
shrb
nop
and
and
lea
into
addr16
inc
sub
test
add
jbe
iret
jnp
mov
icebp
ret
repz
sub
pushf
dec
repz
jle
lock
cmc
sbb
sti
loopne
mov
cmp
loopne
int
mov
or
pop
xor
sub
clc
add
xor
jle
cmp
or
sub
rep
add
cmc
or
in
jnp
cmp
aaa
test
ja
sbb
sub
jl
xchg
mov
out
jnp
test
mov
shrb
ljmp
mov
cmp
gs
lock
into
sub
mov
lahf
pop
mov
mov
jmp
jge
out
inc
scas
stc
dec
mov
shll
jnp
sub
movsl
gs
or
outsl
or
imul
out
jge
sbb
scas
sbb
into
xor
insl
out
pusha
lea
pop
cmpl
rol
cmp
movsl
mov
mov
gs
mov
cmpsl
cmc
or
add
jle
rcrl
cmpb
push
decb
imul
rcr
jp
imul
clc
repnz
loope
loop
pop
std
sbb
repnz
mov
out
add
scas
das
ret
out
lcall
mov
adc
sub
jecxz
pop
or
jbe
pop
mov
or
fucomp
sub
lock
in
nop
mov
repz
mov
or
test
jnp
sub
jb
sarl
jmp
test
sub
out
jmp
in
pop
js
in
insb
cs
xor
add
cmp
stos
outsl
jmp
pop
mov
data16
or
sti
in
outsl
into
test
mov
movsb
xchg
testl
push
test
add
stos
mov
fsubl
xchg
jae
or
xchg
xchg
lahf
insl
repz
lods
lret
sub
test
andl
movsb
or
cmp
add
add
mov
cmc
pxor
lret
sub
jae
cld
lret
mov
mov
inc
insb
mov
push
and
or
sahf
add
test
xchg
sbb
rorb
cli
shrl
jne
sub
into
sbb
mov
insl
mov
std
or
mov
hlt
push
sub
clc
mov
add
std
out
cmc
ljmp
dec
jo
jno
or
and
mov
pop
xor
cmpsb
cld
lods
repz
jb
jae
popf
mov
xor
push
es
push
dec
push
sbb
dec
dec
arpl
ss
pop
hlt
test
dec
out
cltd
testb
xor
icebp
adc
push
xchg
cld
xlat
mov
test
dec
xor
int3
dec
cli
addr16
cmp
sbb
mov
xchg
in
lret
lock
std
popa
mov
pushf
rolb
dec
call
dec
dec
mov
mov
cltd
xchg
mov
jnp
sub
mov
and
sub
cmp
and
xchg
xchg
clc
lcall
mov
fldenv
sub
sbb
mov
sub
test
sahf
xchg
es
add
es
push
xor
push
sub
inc
insl
in
lods
push
dec
push
push
cmp
jge
ja
add
sarb
jnp
fistpll
aas
sbb
jp
popa
fcomps
stos
add
xchg
aas
ljmp
shlb
call
cmc
mov
sub
loope
stc
jnp
lahf
out
bound
adc
pop
rep
aaa
xor
loopne
cs
ja
adc
inc
push
mov
mov
adc
ds
stc
dec
leave
mov
cli
jg
dec
push
mov
push
lock
jmp
adc
lock
rcl
lods
enter
icebp
lahf
mov
sbb
test
xchg
or
push
pop
add
add
test
jg
repnz
add
dec
mov
stos
imul
add
cmp
rcl
aam
pop
ret
and
xlat
push
dec
cmc
cwtl
rcrb
jb
xor
outsb
test
repz
mov
lock
scas
iret
mov
sub
js
mulb
scas
mov
sub
js
push
cli
mov
idiv
lock
cmp
xlat
ret
mov
js
std
pop
lods
loopne
jnp
cmp
movsl
daa
notb
decl
sbb
fwait
cmp
repnz
daa
cmpb
out
int3
ljmp
std
inc
jb
mov
mov
in
mov
jnp
out
lcall
sub
dec
je
insl
or
nop
stc
testl
test
movsl
sbb
ret
sub
out
xor
dec
jne
sub
pop
aas
sbb
pop
stc
movd
in
mov
std
sbb
mov
icebp
dec
sub
xchg
sbb
adc
divl
scas
loopne
pop
das
inc
mov
mov
cmc
icebp
sub
cmc
fs
jmp
repnz
sbb
jge
xor
sub
inc
push
mov
aam
jne
xor
hlt
repz
jbe
mov
movsl
cmp
mov
fwait
sub
xor
dec
pop
sub
std
aas
mov
dec
xor
std
xlat
jno
data16
xor
std
xorl
out
std
lock
rcll
pop
jp
push
dec
sti
and
rdtsc
xor
jne
aas
xlat
sub
pop
xor
cmp
mov
cmp
icebp
shll
jl
jae
sub
and
push
lahf
xchg
mov
mov
add
iret
sti
test
outsl
dec
sub
lcall
push
out
sub
push
nop
call
add
lock
test
mov
jne
dec
push
add
add
int3
stos
cltd
lret
repz
sti
sarb
neg
data16
clc
lods
dec
or
push
or
mov
rolb
dec
jle
lcall
or
sub
adc
push
pop
movsl
pop
and
sbb
add
mov
into
push
pop
cld
data16
lahf
imul
jmp
xor
lret
pop
into
std
or
sbb
stos
out
push
mov
push
nop
jge
nop
jo
push
jg
mov
sub
mov
iret
fcomip
icebp
xlat
dec
in
add
shrb
pop
out
mov
jb
jae
stos
jo
lock
into
mov
fisubrs
cli
mov
sarl
es
sub
pop
testb
pop
dec
pop
dec
mov
orb
lods
pop
inc
jge
out
popf
mov
scas
mov
xchg
push
add
jg
xor
jnp
mov
inc
mov
mov
inc
mov
cmp
mov
cmpl
add
xor
ret
xchg
cmp
sbb
sub
push
hlt
popl
gs
shrb
mov
or
mov
aas
adcb
out
adc
pusha
push
popf
fsubl
mov
jp
mov
jg
mov
fstps
pop
mov
das
out
dec
mov
jge
and
hlt
imul
ds
shll
orl
inc
repnz
outsb
or
inc
ljmp
aas
lock
out
mov
cltd
mov
adc
dec
rcr
cli
xor
mov
dec
xor
out
jnp
lret
faddl
or
dec
jo
rcrb
add
dec
lods
sub
push
add
ja
mov
cmp
dec
data16
out
add
adc
pop
sub
pop
fildl
ss
sti
pusha
incl
shll
add
jle
fcomps
jo
xlat
push
jns
call
xchg
test
pop
addr16
mov
rep
or
test
scas
xchg
lahf
pop
push
xchg
adc
fisubs
aad
cltd
inc
cmovg
inc
ljmp
or
mov
sbb
adc
lods
scas
int
mov
daa
andl
push
out
and
cmp
sbb
lock
out
or
mov
xor
or
mov
push
inc
or
mov
add
push
mov
popf
icebp
mov
dec
cmp
push
jae
inc
and
and
push
int
dec
out
outsl
pop
lea
sub
fisttpll
add
repnz
inc
sub
stos
gs
mov
sub
insb
mov
sbb
out
fsubrl
xchg
test
ss
enter
and
cli
and
enter
popa
subl
cmp
aam
mov
bound
sub
outsb
sbb
dec
dec
mov
dec
push
xorl
aad
adc
imul
fmul
dec
mov
xrelease
sub
inc
pop
mov
repz
fwait
std
cltd
bound
inc
dec
inc
sub
or
test
or
add
and
mov
add
xchg
jl
jae
cwtl
out
addl
sub
lcall
jnp
popa
xchg
inc
das
mov
and
pop
add
xchg
cld
lret
or
push
jns
inc
pop
loopne
lcall
or
or
or
jg
push
xchg
inc
popl
ss
jb
cmp
sbb
fwait
cmpl
int
or
pop
cmpsb
jb
cmp
lahf
fucomi
xor
bound
lock
in
push
inc
leave
hlt
jno
stos
outsl
mov
daa
jae
cld
int
std
cmp
test
je
repz
add
out
mov
cmp
dec
cmpsb
push
repz
pop
dec
fisttps
xlat
cmp
jl
or
fnstcw
in
stc
pop
push
jp
push
repnz
jle
ja
ror
incl
add
pop
cmp
mov
cld
test
cmp
lcall
dec
adc
data16
fwait
add
fildl
lcall
inc
clc
mov
cld
xorb
pop
mov
inc
paddb
div
dec
and
pushl
mov
rorl
sarl
push
or
jnp
cmc
mov
mov
iret
sbb
dec
dec
cmp
xchg
jbe
xchg
jns
int
stc
stos
enter
or
mov
outsb
sbb
loope
cltd
mov
sub
pop
std
fidivl
jl
xchg
mov
inc
mov
xchg
or
divb
add
sub
push
add
fildl
fwait
outsb
xchg
rorl
fcomps
push
call
fcomip
cmp
aad
lods
aaa
out
xchg
xor
add
outsl
dec
mov
adcl
push
bound
repz
es
in
add
xchg
jge
pop
sub
pop
push
sub
sbbl
xor
cmp
mov
fadds
hlt
cmc
xorl
cltd
stc
xchg
and
push
jb
test
ret
sub
daa
xor
cmp
inc
inc
repz
lcall
dec
ret
cmp
and
mov
sub
decl
cmc
dec
scas
shl
or
xor
push
sub
scas
lcall
mov
add
outsb
adc
mov
dec
or
mov
popf
loopne
mov
loope
xor
mov
xor
pop
stos
push
or
das
out
shlb
dec
fwait
jle
dec
xlat
aad
incl
imul
cvtpi2ps
fidivs
movsl
or
mov
ds
cltd
decb
mov
stos
clc
les
ret
sub
into
out
pop
addb
rcrl
mov
jle
add
shlb
testl
outsl
add
call
or
and
or
add
into
pushl
xor
iret
hlt
icebp
add
or
xchg
jl
out
arpl
mov
sub
lods
sub
xchg
cs
out
xor
loopne,pt
fildl
sbb
xchg
pushf
jg
call
adc
pop
inc
aad
fxch
cmc
rclb
mov
xchg
push
out
mov
cmp
cltd
mov
jle
inc
sbb
or
mov
ret
fidivl
jge
cltd
pop
movd
lods
jnp
mov
add
mov
sahf
cmpsb
lock
pusha
int
inc
popa
repz
insb
dec
into
stos
add
ss
lcall
mov
imull
mov
push
int3
mov
jne
jge
adc
push
ret
mov
femms
lds
mov
test
sub
sub
sbb
push
cmc
inc
mov
or
xor
js
sub
enter
sub
push
cmpsb
je
xor
testl
cwtl
add
pop
loopne
or
pop
rorl
inc
and
movsb
lret
jmp
cmc
int3
sub
sub
pop
jg
dec
ljmp
push
pushf
jge
cmpsb
xchg
js
add
outsl
jg
iret
add
push
stc
test
and
pop
insb
cmc
cmp
fld
aam
add
test
pop
in
stc
jne
xchg
int3
inc
mov
mov
mov
out
cs
inc
adc
imul
lea
or
jno
call
call
filds
add
nop
cmc
jg
inc
xor
outsb
rorl
lock
dec
jg
pop
testb
mov
es
dec
mov
sub
jp
jg
xchg
mov
js
inc
std
xchg
hlt
imul
push
cs
aaa
or
dec
push
cmp
xchg
jecxz
cmp
fisttpl
inc
out
and
mov
dec
cs
out
jp
sub
add
cmp
xor
add
pop
test
icebp
dec
sti
std
jg
jp
rorl
jbe
adc
les
aas
stos
out
jge
sub
jo
sti
xor
jnp
dec
and
inc
stos
add
les
xchg
pcmpgtw
mov
ss
clc
lret
sub
xchg
ret
xchg
pop
sbb
jbe
push
outsl
xorb
in
ljmp
je
push
sbb
xor
xor
fldenv
pop
inc
repnz
pop
jg
add
out
mov
icebp
neg
orl
mov
out
in
in
push
inc
sbb
addr16
dec
pop
add
pop
mov
scas
sub
movsl
mov
je
sti
or
jno
pop
lcall
ret
xor
cli
out
mov
jo
mov
jb
ret
sub
int3
out
xor
mov
lods
fsts
cmp
repnz
pushf
xorl
dec
imul
mov
mov
imul
out
or
jnp
add
mov
mov
sub
add
pop
int3
sub
mov
lock
and
mov
icebp
dec
mov
dec
ret
xor
ret
repz
inc
sbb
std
pusha
testb
hlt
roll
addr16
xor
popf
mov
sub
jne
out
das
lods
sub
icebp
fbstp
mov
orb
cmc
jle
ss
std
mov
out
jo
mov
dec
in
mov
mov
nop
sbb
adc
cld
hlt
xchg
popa
inc
nop
movsl
sub
push
xchg
cmp
repz
jmp
aam
jno
dec
out
push
cmp
dec
add
mov
dec
jnp
cmp
fisttps
dec
sub
in
decb
pop
sub
or
in
xor
jbe
and
mov
pop
mov
aas
add
mov
push
in
das
testl
or
push
and
xchg
dec
xchg
mov
dec
repnz
outsl
mov
repnz
jo
lret
adcb
cmpsb
push
jae
jge
out
mov
mov
cmp
outsl
lcall
flds
je
or
and
and
lods
xor
pop
dec
dec
idivb
pop
ljmp
jecxz
dec
fwait
test
xor
jne
lock
jno
xchg
pop
je
out
icebp
out
lahf
cwtl
sti
out
imul
mov
and
xchg
loopne
pop
mov
data16
sbb
jne
and
xor
lret
pop
psrld
mov
imul
lret
ss
je
cmc
mov
data16
notb
clc
jne
sbb
fs
mov
subb
mov
and
dec
out
out
inc
cmp
mov
pop
imulb
loop
mov
jle
push
and
xchg
scas
jge
ljmp
cmp
inc
lods
repnz
sbb
call
mov
cli
iret
lods
mov
aas
push
cmpb
ret
mov
jecxz
repz
stos
inc
add
cli
fisubrl
fadds
mov
dec
xchg
xor
stc
mov
std
hlt
pop
dec
test
fdiv
fdivrl
jge
scas
adc
subb
pop
mov
dec
add
std
inc
inc
mov
pop
arpl
jo
sub
push
clc
cmc
test
lahf
mov
inc
sbb
cmp
add
xor
in
mov
or
outsb
lea
cmp
mov
sub
and
dec
pop
movsb
pop
jns
cmp
movsl
notl
cmc
dec
push
adc
js
jge
jae
std
dec
iret
out
cmp
dec
jg
adcb
imul
and
icebp
or
inc
hlt
enter
adc
test
aaa
daa
repnz
or
ret
stc
cld
daa
mov
ja
hlt
sti
pop
test
daa
mov
or
or
and
cli
pop
outsb
jno
daa
cld
lods
aaa
adc
mov
lret
pop
lret
outsb
sub
ljmp
stos
jnp
or
sub
cmpsl
sbb
push
add
dec
stc
push
sub
dec
icebp
in
in
int
in
lock
shlb
adc
das
sub
movsl
pop
insl
mov
sbb
hlt
push
imulb
sub
mov
aam
stc
fdivr
push
sarb
xor
add
stc
pop
mov
dec
adc
outsl
lret
pop
cli
ss
shll
jle
xor
pop
fmull
out
into
test
push
mov
ss
sub
lock
insb
pop
lods
cmp
push
cmc
or
xlat
cmp
mov
cmc
dec
aaa
cmc
hlt
mov
ss
push
add
out
add
jp
decl
js
push
lret
repz
jbe
hlt
ficoms
movsb
shll
in
push
adc
and
inc
pop
sbb
and
jbe
repnz
out
outsb
xor
aas
icebp
mov
dec
test
cld
sbb
cmp
lcall
neg
leave
xchg
psubusw
push
dec
testb
lcall
adc
sub
shlb
mov
sub
aas
and
mov
ret
mov
negb
arpl
lcall
test
fstpt
rorl
mov
insl
das
dec
rcrl
mov
inc
aad
addr16
cmpsb
fsub
cli
out
dec
cld
cld
lcall
sarb
mov
dec
adc
lods
jns
dec
inc
xor
sbb
lock
lods
stos
cmp
mov
outsl
rcrb
mov
lret
mov
and
adc
mov
dec
icebp
pusha
sub
aas
int3
pop
outsb
xor
dec
sub
push
stos
repz
jnp
testb
out
je
outsb
cld
lock
iret
sti
inc
xor
adc
cli
cli
mov
mov
out
adc
outsl
bnd
mov
sbb
and
movsl
scas
or
addb
idivb
sbb
add
mov
jle
nop
cmp
rcll
addr16
pop
mov
lock
push
xchg
or
lods
bound
out
pop
sbb
dec
fidivl
movsl
test
jo
out
sti
xor
inc
cmc
pop
push
outsb
in
sbb
lock
out
pushl
jge
push
inc
cmove
mov
imul
push
shlb
or
push
add
mov
rcl
ja
mov
adc
icebp
adc
insl
or
push
push
insl
ljmp
inc
out
pop
test
mov
xchg
ret
dec
stos
jg
addl
jl
jnp
xchg
call
cmp
outsb
rcll
add
orb
imul
mov
add
std
insl
or
pop
or
xor
in
in
or
inc
or
jge
and
add
enter
stc
mov
fs
je
mov
gs
imul
pop
push
lock
shlb
clc
test
std
mov
and
cmp
add
sub
loopne
xor
aas
mov
push
xor
lock
repnz
addb
test
insl
lods
push
inc
roll
ret
xchg
add
mov
xchg
shrb
out
leave
mov
mov
inc
dec
dec
clc
cmp
mov
dec
je
jo
lret
push
adc
movsl
inc
inc
add
cmp
adc
push
movsl
lahf
push
sub
cmc
imul
lret
popf
outsl
xor
popa
ljmp
push
xchg
mov
jl
mov
fmull
or
repz
scas
inc
div
lods
dec
pop
push
mov
jno
ss
jecxz
rorb
and
inc
outsl
sub
push
lret
push
lods
sub
mov
dec
aas
ljmp
or
repnz
mov
ljmp
add
cmp
aam
rcrb
fisubrs
cltd
lods
cltd
test
pop
cmpsb
push
cmp
addl
sbb
inc
dec
fisttpl
faddl
out
popf
ror
adc
pop
rorl
dec
add
or
push
cmc
fcomip
cmc
xorl
daa
scas
lds
pop
gs
push
push
cmp
dec
pop
sti
adc
sbb
inc
popa
jbe
loop
sbb
fldenv
in
mov
lods
fidivrs
dec
inc
sbb
mov
popa
add
cli
insb
mov
jg
call
xchg
jge
push
and
push
int3
xchg
shlb
sub
ljmp
mov
jno
aas
imull
jnp
rol
gs
ja
add
sbb
inc
lods
mov
xor
cmpsl
xchg
or
xor
mov
push
and
add
repz
shrl
dec
or
xchg
in
fstpt
movsl
pop
xor
in
ret
es
mov
stos
sub
xchg
scas
in
adc
je
das
jnp
jo
cmp
and
in
jnp
mov
dec
mov
pop
adc
lcall
inc
mov
in
lock
scas
dec
mov
mov
push
sbb
imul
movsl
insb
mov
pushf
ds
sub
or
push
out
scas
dec
lahf
leave
iret
jge
dec
mov
sbb
jp
mov
xchg
cmpsb
ret
cld
inc
repnz
inc
into
out
andb
mov
test
mov
incl
pop
scas
in
scas
mov
jbe
stc
dec
shlb
sbb
test
and
sbb
adc
into
jl
inc
or
mov
cltd
test
cwtl
setge
sub
mov
into
adc
enter
jns
cltd
and
scas
sub
pop
cmp
call
das
xor
loopne
adc
dec
xor
dec
pushf
cwtl
jnp
pop
dec
es
mov
adc
ret
rcll
mov
xlat
jae
adc
and
push
insb
stos
xor
jno
push
pop
in
sub
popa
movsb
mov
imul
ffreep
roll
je
outsl
jle
jg
in
aas
pop
lcall
shrb
iret
clc
pop
orl
ret
lock
and
sub
or
adc
test
xchg
leave
mov
adc
sbb
sahf
fucomi
xchg
mov
lcall
mov
fucom
in
sub
data16
in
arpl
mov
pop
outsl
pop
or
jae
mov
test
aam
test
std
call
xchg
dec
stos
add
dec
repnz
dec
dec
cld
jnp
add
cld
jo
test
idiv
cmp
sub
and
dec
loop
push
sbb
pop
jnp
or
xor
lmsw
in
pop
jbe
out
inc
xlat
enter
clc
std
lahf
in
jno
mov
pop
mov
or
lahf
mov
xor
cmp
jb
and
mov
into
addr16
mov
repz
lods
loopne
pop
out
add
inc
cltd
fisubrl
sbb
mov
out
mov
mov
fistps
jbe
repz
sbbl
adc
int3
mov
inc
call
lock
push
lods
sti
dec
sahf
xor
mov
lret
pop
out
dec
sti
enter
testb
push
dec
ret
out
mov
lret
fdivs
imul
negl
andb
dec
jmp
inc
fsubl
xchg
lret
imul
stos
sub
out
xor
cmp
jne
out
sbb
adc
fimuls
cmp
nop
out
dec
repz
sti
imul
pop
cmp
inc
mov
mov
scas
stc
imul
ja
out
cmp
jne
test
add
std
hlt
push
fs
mov
jg
and
or
scas
push
mov
cmp
or
cld
imul
repnz
lret
jno
mov
lock
adc
xor
iret
lods
ljmp
mov
outsl
push
dec
ss
dec
mov
repz
mov
dec
push
ja
testb
pop
xor
mov
in
xor
push
outsl
mov
or
pop
clc
sbb
js
repz
mov
sbb
cmp
and
pop
mov
sub
imul
decb
adc
pop
cmp
lock
jae
inc
repz
add
add
mov
popa
jl
lock
repnz
pop
in
sbb
sub
inc
pop
xor
add
inc
xchg
dec
push
inc
ficompl
imul
test
sti
pop
jecxz
out
dec
inc
imul
sbb
cmp
or
movsl
cmp
push
or
dec
jge
int3
xor
pusha
xor
scas
sub
mov
icebp
pop
jo
lods
sbb
mov
int
repz
nop
int
idivl
cmpsl
dec
mov
push
dec
and
into
test
mov
aaa
ds
repz
mov
inc
subb
orl
nopl
ret
push
push
or
and
dec
aaa
popf
mov
aaa
mov
cmc
imul
push
out
outsl
cli
iret
ja
test
stos
inc
add
jo
in
and
imul
add
enter
pushf
pop
inc
jecxz
mov
push
xchg
repz
or
push
jns
mov
mov
mov
mov
out
loopne
mov
dec
mov
lea
in
cltd
and
mov
jnp
pop
std
or
push
jno
mov
ja
scas
add
out
dec
xor
js
mov
adc
fsubr
test
or
sub
xor
sahf
jnp
stos
fs
sbb
fldl
loope
sbb
out
mov
lock
pop
xchg
in
mov
pop
jle
arpl
push
cmc
aad
mov
mov
pop
aas
hlt
xor
push
cmp
cmp
lods
mov
xchg
mov
scas
dec
mov
aad
nop
dec
in
test
add
icebp
mov
in
repnz
in
lret
arpl
mov
push
xor
xor
jle
push
popl
or
dec
cmp
test
in
mov
pop
and
mov
aas
sbb
or
roll
add
mov
jle
push
dec
inc
inc
dec
or
jae
sbb
mov
mov
push
or
sub
dec
mov
mov
xor
xlat
push
fwait
mov
aad
pop
cld
imul
add
icebp
adc
mov
icebp
hlt
xor
or
test
lea
lock
xor
pop
cmpsb
or
imul
jmp
dec
mov
pop
mov
mov
sbb
pop
xchg
mov
or
imul
dec
lock
into
adc
lret
sbb
cmc
add
push
into
sti
pop
push
daa
adc
icebp
or
jle
cwtl
jnp
lock
fsts
shr
push
notb
imul
mov
out
iret
stc
and
add
lgs
lock
dec
nop
hlt
popf
xchg
jno
outsb
mov
inc
cmpb
lods
jmp
decl
jp
dec
sbb
std
stos
imul
dec
push
or
ja
cmp
int3
mov
or
or
lods
push
and
lock
jmp
mov
or
gs
lods
pushf
dec
outsl
lret
out
sub
pop
dec
sub
mov
mov
jb
ss
lret
or
pushf
fisubl
int
lock
out
dec
sbb
pop
jb
dec
cmp
jge
lods
mov
jmp
xchg
insl
gs
pop
cmp
add
jns
pop
clc
sub
cmpsb
xchg
out
icebp
cmc
out
lahf
push
insb
daa
xor
lds
lret
pop
or
or
jl
xor
jae
pop
mov
mov
ffree
pop
insb
insb
ret
cmpsl
xor
outsb
mov
cmp
sti
int
cmpsl
bswap
xor
push
xchg
push
sub
push
jae
cmp
adc
adc
inc
sub
xor
mov
dec
inc
mov
mov
std
data16
loope
aam
movsb
std
or
out
dec
dec
addl
mov
loope
icebp
lds
imul
jne
dec
lret
pop
cmpsb
sbb
addr16
in
pop
call
outsb
mov
push
fldl
test
mov
cmpb
popl
out
cmp
xchg
das
notb
inc
test
aaa
cmp
dec
and
pop
xchg
add
mov
mov
or
cmp
lock
jge
std
je
mov
call
and
dec
push
ret
stos
mov
sbb
pop
fs
scas
test
dec
lock
ja
inc
shrl
xor
call
and
shr
hlt
shl
xchg
or
or
cltd
data16
or
mov
lods
and
lahf
out
sbb
andl
subb
sub
leave
jo
lock
adc
das
sub
shl
sub
popa
addb
dec
pop
jo
push
inc
sub
pusha
pusha
xchg
lock
dec
push
push
fwait
std
add
mov
jge
sbb
mov
sub
loope
sub
jbe
ds
xchg
xor
roll
lock
pop
out
test
out
imul
aam
jo
sbb
jbe
outsl
mov
out
or
imul
and
shrb
mov
imul
ret
dec
dec
out
idivl
fdivrl
inc
iret
add
mov
ljmp
or
jg
mov
xchg
and
adc
repnz
loop
das
mov
inc
sub
and
cmpsl
inc
test
dec
and
add
sbb
mov
gs
cmpsb
in
xor
iret
jmp
shlb
outsl
std
icebp
lcall
out
ret
add
pushl
jge
inc
stos
xchg
inc
clc
push
sub
lea
mov
mov
sbb
cmp
lock
add
mov
std
push
jo
imul
mov
add
push
add
lret
inc
jge
cmp
cmp
mov
lods
jge
inc
cld
mov
stc
or
pop
push
sar
lock
mov
out
mov
rorb
mov
shll
mov
add
in
mov
repnz
sub
dec
push
jbe
mov
add
inc
xchg
or
or
add
pop
divb
push
xchg
gs
add
sub
xor
jp
push
add
adc
shlb
dec
dec
push
pop
jge
lock
xor
outsl
sub
ss
push
add
pushf
and
sbb
cmp
xchg
and
add
pop
rorb
outsl
sbb
movsl
mov
test
insb
clc
call
cmp
call
sub
push
and
imul
pop
aad
push
sub
lcall
sti
jg
cmpsl
fidivrl
push
sub
repz
lcall
mov
or
mov
inc
mov
incl
inc
sbb
push
push
pop
lock
cs
imul
outsb
mov
mov
sbb
in
movsl
mov
cmp
mov
xchg
mov
dec
pop
fimuls
sbb
cmp
or
pusha
aas
push
push
sub
int3
push
or
ret
lret
sti
aas
fs
stos
jge
xor
push
and
mov
ja
mov
lea
jns
add
inc
stos
lea
test
and
mov
test
out
fidivl
mov
roll
jb
add
mov
fmull
stos
popa
or
and
ljmp
pop
push
test
add
sahf
add
mov
out
jo
and
xlat
mov
hlt
inc
mov
adc
das
mov
inc
dec
dec
call
pop
ds
adc
dec
mov
xlat
pop
into
mov
jno
cmp
imul
bound
shll
push
out
loope
dec
dec
dec
push
lret
push
lret
out
jns
or
out
clc
nopl
sbbb
pushf
sbbb
es
or
scas
mov
xchg
add
dec
mov
cld
cs
stos
xor
mov
mov
stos
mov
adc
mov
sarb
jbe
clc
lock
imul
pop
lret
jl
je
mov
dec
mov
faddl
mov
push
cld
push
sahf
inc
push
out
pushf
int3
imul
sbb
lea
stos
and
jo
pop
test
jle
pop
pop
push
push
lahf
mov
sbb
dec
cmc
mov
xchg
pop
out
mov
gs
cld
imul
inc
jo
dec
stos
adc
fists
cmpsb
dec
mov
stos
ljmp
jns
jo
dec
mov
adc
sub
jle
std
mulb
into
std
movsl
arpl
sbb
add
push
cmp
mov
stos
pop
outsb
aam
adc
mov
cmp
pop
sti
sar
movsb
jle
stos
negl
push
sub
data16
shlb
roll
mov
mov
movsb
stos
rorl
ret
sbb
mov
and
movsb
aaa
call
mov
cld
movsl
jo
or
and
adcb
mov
pop
pop
imul
sub
add
jge
or
stc
add
mov
mov
dec
arpl
shrl
jl
lock
cmp
divl
mov
sti
lcall
xbegin
push
test
mov
mov
loop
fdivl
or
sahf
jmp
cld
push
sbb
rorl
jmp
jle
mov
stos
lcall
or
jae
pushf
mov
dec
cmp
push
jbe
sbb
xchg
mov
dec
lods
ror
jl
mov
or
rcrl
jle
ss
mov
adc
out
imul
pop
mov
pop
add
scas
and
sbb
fwait
repz
push
jnp
add
mov
jno
pop
inc
insb
stos
andl
fisttps
sbb
into
sar
push
add
aas
dec
cwtl
lock
in
pusha
mov
mov
push
xchg
rorb
pop
mov
shlb
sbb
clc
mov
pop
push
jp
mov
div
sub
adc
adc
xor
leave
mov
in
sti
mov
push
dec
pushf
jne
ja
test
out
cmc
in
std
call
or
ret
cltd
fwait
mov
dec
xchg
pop
push
fisttpl
mov
pop
inc
je
sti
mov
xchg
shlb
push
xor
outsl
cli
pop
xchg
mov
loop
imul
mov
ret
mov
push
jp
shll
pop
scas
mov
stc
mov
and
xor
sti
mov
or
mov
movsbl
sti
fldt
pop
out
push
xor
or
mov
cltd
pop
cmp
cmp
aam
jmp
sbb
push
sbb
mov
pop
fldln2
jl
mov
mov
fistpl
call
dec
mov
jb
xor
mov
jnp
sbb
scas
xlat
sub
dec
stos
leave
adc
test
lret
into
arpl
addl
dec
mov
je
xchg
ss
jno
lret
lcall
insb
lods
xor
sub
stos
jecxz
cmp
inc
stc
loopne
or
repnz
in
hlt
lods
mov
imul
or
lods
fdivrl
imul
jge
je
and
mov
sub
sti
or
int
dec
or
mov
repnz
pop
adc
repnz
out
xor
fwait
xor
divl
pop
push
in
addb
repz
testl
fmuls
adcl
orb
xor
jns
ja
cli
pusha
mov
mov
test
mov
cs
add
xchg
pop
arpl
insb
lods
addr16
adc
jl
mov
and
jno
divb
ja
mov
pop
out
mov
test
cmc
jp
inc
repnz
nop
xor
xchg
idivl
jnp
mov
jge
in
mov
aas
add
jne
xlat
scas
xchg
outsb
and
cli
cmpl
emms
cmp
jns
leave
out
and
clc
stc
cld
hlt
adc
les
or
std
push
adc
rclb
repz
xor
cli
dec
imulb
dec
shrb
dec
and
das
push
inc
push
cltd
je
test
xchg
and
test
pushf
jbe
xor
cld
mov
flds
or
inc
fcomi
sbb
std
and
lods
pop
arpl
pusha
fildll
int3
mov
outsl
xchg
or
out
out
inc
jnp
out
rclb
stc
xchg
lock
adc
mov
sub
add
icebp
scas
mov
or
mov
lock
pop
rorl
imul
mov
lods
sbb
jne,pt
aaa
out
pop
fildl
imul
insl
mov
std
mov
push
out
lret
shll
lcall
push
inc
jbe
in
jne
xor
cwtl
cmp
mov
or
jns
stc
sub
mov
cmc
mov
jns
scas
push
popa
push
out
rolb
popl
cmp
mov
sub
loope
mov
jne
dec
jmp
mov
ret
daa
dec
es
jnp
xor
andb
std
into
sub
incl
adc
call
ds
test
adcl
into
enter
lret
cmp
sti
mov
or
mov
scas
stos
outsl
sbb
insb
pop
mov
mov
inc
sub
mov
hlt
lods
jmp
or
add
sti
in
add
gs
lea
insb
bndstx
shll
xor
inc
dec
cmpsb
or
xchg
jae
jno
add
and
xor
lods
mov
push
out
mov
jo
jmp
idiv
fldl
push
scas
sub
mov
adc
out
sub
pop
js
cmpsb
icebp
js
fldl
sub
mov
or
or
icebp
sahf
sbb
push
fwait
adc
xchg
adc
fdivp
jp
and
pop
clc
dec
cmc
popf
adc
mov
and
cmp
sub
jmp
mov
lahf
insl
push
ret
shll
out
adc
out
fsubl
sbbl
shl
xchg
jb
jecxz
repnz
scas
sti
out
insb
fdivl
test
xchg
shlb
stos
popa
fsubr
or
mov
cmc
jg
lods
inc
sbb
jo
ja
fcompl
loopne
lods
or
in
pop
stos
pop
in
sti
into
out
sub
and
imul
stos
cmc
les
fdivrs
fwait
inc
xchg
inc
in
popf
or
jge
test
outsb
ret
mov
sub
xchg
mov
mov
insl
shr
imulb
lock
loop
sbbl
pop
bound
xchg
mov
icebp
ret
ja
sub
aaa
lock
sti
lods
cmp
ja
adc
jbe
inc
scas
inc
into
cmp
popa
jecxz
hlt
lock
scas
inc
adc
cli
mov
hlt
jnp
or
dec
adc
repz
popa
xor
dec
dec
inc
sti
std
mov
fistps
dec
sbb
std
ds
inc
xor
stos
scas
jnp
dec
inc
lret
hlt
test
or
imul
sbbb
cmc
arpl
or
in
fiaddl
sub
jl
popa
outsb
out
test
roll
push
mov
cltd
in
inc
xor
in
dec
xor
scas
pop
pop
outsb
or
xor
jne
insb
cmp
imul
mov
adc
sub
lods
pop
push
bnd
sub
lods
imul
daa
repz
insb
lods
xor
add
mov
lods
fnsave
lock
mov
pop
pop
pshufw
push
insl
movsl
cmp
insb
sahf
sbb
shl
pop
push
in
jmp
ds
fmul
xchg
jb
mov
scas
push
out
dec
cmp
lock
dec
and
dec
outsb
mov
or
popa
xchg
mov
xchg
mov
das
pop
imul
push
or
jge
ds
push
mov
push
jge
and
push
pop
hlt
push
hlt
rcrb
psubd
jb
or
cmp
cmp
repnz
shl
xchg
ja
push
xchg
icebp
cmp
sti
jnp
and
es
inc
arpl
inc
addr16
bound
or
aas
fwait
scas
popa
in
popf
jmp
outsl
outsl
repnz
mov
repz
repnz
dec
adc
dec
fstl
mov
pop
in
mulb
test
test
sbb
sub
std
fmull
push
stc
ds
jne
ret
cli
in
insb
add
jae
nop
add
stos
mov
jns
jbe
jge
jge
lret
push
imul
pop
mov
push
cmpsb
movsb
xor
sub
outsl
negl
add
push
cmp
imul
fs
nop
inc
sbb
stc
imul
out
mov
jae
cwtl
mov
mov
or
idiv
sti
cld
repz
idivl
sbb
icebp
scas
ja
pop
outsl
xor
insb
mov
out
pop
shl
mov
xlat
cmp
or
mov
adc
mov
adc
sub
fmulp
inc
sti
jg
sti
repz
test
test
das
outsl
sysret
mov
bound
dec
mov
loope
cmc
dec
mov
cwtl
insb
out
xchg
xchg
out
mov
pop
movsb
ret
hlt
pop
outsl
jmp
push
repz
jo
mov
cltd
cmp
into
aas
repz
repnz
fs
dec
xor
int
stos
adcl
inc
call
jp
cmc
jno
mov
sub
add
dec
lock
insb
mov
mov
cmp
sub
sbb
mov
loopne
jmp
xorb
xor
insb
cmpsb
lods
loopne
enter
mov
in
fldcw
sbb
ret
mov
jg
scas
shr
sub
xor
pop
lea
and
divb
or
sbb
cmc
add
jne
add
jne
mov
incl
mov
or
repnz
jge
outsb
pop
inc
mov
das
in
inc
jae
push
mov
repz
in
aas
lcall
sbb
out
push
inc
xor
repnz
lock
outsb
jecxz
dec
inc
dec
sahf
jp
sahf
push
sub
test
add
lret
out
movsl
fimuls
out
jg
lock
dec
jne
das
aas
enter
or
add
insb
lods
in
in
out
sub
insb
mov
gs
scas
sub
popf
out
jg
lock
lcall
insb
pop
in
iret
int
pop
pop
arpl
sysexit
or
cltd
pop
mov
ds
imul
mov
das
cmp
xor
rolb
jno
add
ss
jno
cmpsl
jno
popa
jecxz
inc
cmp
dec
insb
out
pusha
icebp
jecxz
pop
cmp
into
add
in
out
mov
xor
jmp
nop
mov
pop
mov
int3
lock
adc
xchg
jne
fiaddl
inc
sub
nop
sub
mov
les
mov
lods
lcall
mov
add
out
mov
mov
imul
cmp
arpl
out
fidivs
mov
movsl
lock
jecxz
xor
std
xchg
test
test
jecxz
fwait
add
dec
fsubs
test
mov
hlt
icebp
cmc
push
jl
xor
adc
rorl
push
xchg
adc
repz
mov
sti
xor
xchg
insl
jne
insb
cmp
imul
loop
or
sub
rep
sti
lods
add
adc
ficompl
mov
pop
or
pushf
jo
repz
das
dec
mov
stos
popa
fisubs
push
lss
repz
push
jl
xchg
cmp
sbb
fwait
jae
notl
mov
arpl
dec
bound
mov
gs
jmp
outsb
pusha
cmp
test
inc
xchg
push
add
ja
sub
daa
testl
ljmp
push
icebp
and
hlt
jge
outsb
sarb
das
pusha
ret
xor
pslld
push
inc
jne
int
cs
push
push
dec
pop
xor
cmc
cmp
icebp
out
fsubl
idivb
pop
sub
cld
loopne,pt
dec
jg
lahf
ret
repnz
add
testb
add
pushf
sbb
sub
sbb
mov
inc
mov
or
and
adc
add
cld
inc
pop
loopne
push
pop
jle
lahf
xor
int3
ficoms
push
nop
cld
push
js
inc
fstp
in
outsb
js
sahf
and
out
fists
ja
jae
lret
lods
xchg
mov
in
clc
out
rcrb
jno
adc
cmp
mov
aam
or
push
in
insb
test
lret
jp
sub
outsb
repz
jl
js
pop
enter
out
jns
sbbl
andb
aas
and
lea
in
mov
cmp
icebp
or
mov
mov
and
test
inc
out
jmp
sub
fs
rol
insb
and
shl
mov
adc
jb
ss
and
lock
or
sbb
test
xor
or
in
std
popa
sbb
popf
add
adc
lds
rclb
sbb
sub
sbb
and
mov
cltd
ja
and
mov
dec
out
call
xor
test
in
jno
or
leave
sbb
pop
shll
xor
sub
or
and
cld
jnp
jbe
pusha
insl
js
out
icebp
repz
sub
dec
jno
or
xlat
mov
mov
das
insl
inc
rep
sti
gs
std
xchg
iret
xchg
sahf
inc
pop
sub
sti
out
adc
cmp
das
lods
rep
lock
mov
test
sbb
mov
imul
in
add
xor
pop
into
std
xbegin
fiadds
pop
mov
pushf
into
fstps
stos
lds
adc
out
pop
xor
popf
in
outsb
lock
jg
pop
pushf
imul
push
jbe
or
movsl
mov
inc
data16
cmp
fwait
lahf
pop
repnz
sub
mov
jae
cmp
xchg
push
dec
jno
jnp
insw
sarb
cli
icebp
pop
es
mov
ss
sbb
stos
xor
pusha
add
movsl
pmaxsw
or
pop
mov
out
cmp
adc
dec
cmp
pop
out
out
out
dec
adc
adc
lret
pop
test
cmc
mov
dec
out
in
stos
sub
mov
ss
lahf
jecxz
sbb
stos
add
mov
mov
cld
mov
or
add
add
sub
push
lods
sahf
add
repz
fwait
icebp
in
scas
cmpsl
mov
fbld
jae
call
dec
dec
xor
mov
das
cmp
sahf
outsb
lahf
sub
add
or
push
in
das
cmp
insl
mov
pusha
fiadds
mov
jnp
stos
movsb
setg
mull
je
xchg
ds
xchg
out
jecxz
repz
adc
xor
stos
mov
xor
arpl
aad
lret
lea
mov
lahf
dec
jle
xchg
dec
ds
imul
sti
sub
in
mov
mov
mov
mov
outsl
xor
push
lahf
jb
xor
mov
add
mov
es
pop
mov
add
shrl
fidivs
mov
jle
in
repz
out
rcr
or
jp
jmp
sub
rcl
xchg
add
jno
inc
int3
in
sbbb
out
dec
sbb
mov
fs
add
int3
sub
cs
in
in
loopne
imul
xchg
fdivl
or
mov
cmp
insl
dec
stos
mov
outsb
add
sub
cs
xor
loope
adc
xor
lods
lods
insl
and
insb
adcb
ret
dec
mov
lahf
stc
popl
scas
enter
movsl
into
inc
add
xorb
push
adc
cmc
pop
cmpsb
repz
shll
xor
hlt
outsl
xchg
push
icebp
in
das
lock
test
pop
imul
fwait
dec
ljmp
sub
insl
dec
clc
jns
andl
adc
std
cmpsb
dec
scas
test
lods
push
dec
inc
dec
nop
add
jmp
imul
or
iret
inc
in
cmp
add
scas
fcompl
ret
ss
das
inc
xchg
in
in
jecxz
lods
out
out
nop
aas
test
pop
aas
mov
clc
push
lea
inc
ja
in
xchg
adc
mov
push
call
into
mov
test
xchg
icebp
cmpb
mov
jp
push
push
cmp
mov
mov
adcb
mov
ja
sbb
shll
sbb
ret
std
xchg
mov
push
pop
outsl
mov
test
mov
popf
lods
add
push
imul
in
insl
add
pusha
das
scas
xor
dec
mov
jg
stos
pop
aam
cmp
sub
int3
sub
xchg
dec
movsl
and
jle
sbb
sbb
jl
ficoml
or
out
je
dec
leave
mov
stos
dec
xlat
jecxz
out
mov
js
sub
lea
loop
and
jle
sbb
mov
mov
adc
cmp
or
jecxz
enter
dec
jg
sbb
add
xchg
repz
stos
dec
xchg
mov
fiadds
add
subb
push
cmp
lods
out
and
int3
xor
dec
ror
aam
ret
adc
push
cld
into
jo
stc
push
ret
das
cs
pop
mov
roll
and
dec
in
xor
into
sub
sbb
stos
lock
jg
jp
aaa
shll
shrb
adc
aas
push
mov
push
add
adc
inc
stos
lods
and
pushf
ret
out
jecxz
push
lahf
movsl
call
pushf
push
daa
mov
shlb
roll
pusha
inc
and
xchg
adc
out
jl
into
push
rcrl
insb
daa
mov
xchg
dec
mov
data16
mov
push
cld
mov
sub
roll
icebp
push
dec
cmp
sarl
xlat
cmp
and
mov
cmp
ss
push
inc
lea
fisttpll
or
lock
push
jl
push
inc
or
pop
mov
inc
cmp
mov
and
sub
add
ljmp
mov
or
jl
jmp
sub
sub
jns
rorb
jne
dec
sub
pop
mov
notb
sub
inc
lds
les
sarl
mov
out
subl
cmc
mov
mov
mov
push
jnp
mov
cmpsl
mov
movsb
stc
repnz
mov
les
arpl
fdivr
out
into
fnstcw
adc
sbb
jle
mov
or
sub
lahf
adc
add
movsl
repz
repz
sti
cmpsl
jl
aad
pusha
movsb
fildl
data16
clc
subb
out
fcomps
mov
push
dec
xor
pop
ret
and
int
ss
cmp
mov
add
insb
stc
mov
or
out
in
bound
out
arpl
jno
stc
out
jno
add
je
sbb
cld
lds
sub
sub
lahf
push
xchg
out
sub
sub
push
jp
shrd
or
test
in
xor
sub
push
sub
sub
or
out
dec
mov
mov
nop
jae
jg
loop
xlat
and
pop
nop
sub
push
push
aad
and
fidivrl
out
jle
mov
dec
mov
jo
jg
mov
clc
pop
sub
stos
push
sahf
test
loop
pop
dec
ljmp
popf
push
and
mov
or
gs
shlb
xor
jnp
dec
outsl
fld1
repz
out
add
aad
popf
loope
jmp
cli
sarb
pusha
insl
scas
stc
aad
or
push
mov
fcomip
daa
xor
in
fisttpl
scas
in
test
dec
pop
out
pop
imul
sub
and
mov
cmp
gs
sbb
mov
repnz
xor
sub
int3
fbld
outsl
lret
xchg
sub
shll
mov
imul
cld
pop
jno
add
das
add
dec
mov
mov
jns
movb
jne
mov
inc
jb
jnp
pop
out
pusha
dec
add
lret
mov
jg
mov
mov
fstl
sub
adc
inc
repnz
andl
out
ljmp
icebp
scas
jbe
cmp
push
icebp
push
shll
nopl
pop
push
popa
int
xor
cltd
mov
dec
or
jg
imul
test
or
jne
inc
faddl
cwtl
inc
std
mov
in
lods
or
add
or
mov
and
testb
add
cmp
mov
add
xor
xchg
movups
into
jp
aas
xor
cmp
out
testb
out
add
mov
int3
or
dec
lods
pop
cmpsb
repz
jg
xor
jne
les
push
or
das
and
ret
pop
sti
hlt
push
cmc
fmulp
add
mov
add
aas
fistpl
jge
sbb
mov
and
or
das
in
sar
aas
fcoml
xorl
mov
scas
xor
idivl
sarl
addl
sub
clc
out
lret
pop
add
sti
push
and
in
sbb
pop
daa
or
jnp
in
ret
lock
aas
pop
mov
cltd
mov
mov
pop
ljmp
xchg
push
dec
fistps
sbb
jg
inc
pop
incl
test
push
adc
ljmp
xor
jg
add
cld
sahf
stos
pop
push
stos
sbb
adc
icebp
xor
in
mov
pop
out
fwait
mov
ja
cmpsl
stc
das
inc
aaa
outsb
nop
es
repz
and
test
test
sbb
or
shr
dec
cmpb
add
cmp
outsb
jbe
push
push
dec
mull
lods
ss
mov
sahf
or
and
mov
pop
sbb
imul
and
jg
push
outsl
out
jg
jmp
test
cmp
std
imul
and
add
cmp
sub
sbb
fldlg2
nop
outsb
pop
inc
lock
mov
cmp
sti
insl
icebp
stos
lcall
push
sar
pop
mov
mov
sub
xchg
jae
out
mov
and
xor
and
and
sti
jmp
fwait
repnz
and
pusha
popa
push
insl
or
and
fdivrp
xor
cmp
cmp
add
imul
jbe
in
cmc
xor
in
dec
insl
leave
jae
ss
push
stos
test
mov
clc
dec
push
dec
and
xchg
cmpsl
add
testb
xchg
add
sub
pusha
pop
das
pop
mov
and
cmp
pop
es
xor
cmc
mov
or
in
add
sbb
subl
imul
lahf
insl
jp
xchg
dec
pop
imul
lock
mov
clc
and
jns
cmp
push
shl
scas
add
insb
add
jl
sub
sub
leave
fmuls
repnz
shll
mov
inc
inc
jbe
popa
xchg
inc
dec
mov
sbb
and
xor
dec
xchg
sub
leave
ja
sub
pop
aas
in
insl
or
out
add
aas
ret
fistpl
fwait
add
repnz
stos
loope
mov
divl
clc
out
and
mov
cmpsb
inc
mov
dec
icebp
cmpsb
mov
clc
fst
mov
mov
scas
bound
mov
push
mov
fbstp
xchg
xchg
loop
ror
pop
mov
adc
sbb
xchg
xchg
cld
xor
or
fdivp
stc
dec
cmp
in
shl
pusha
pop
in
sbb
shlb
ljmp
cld
xchg
lcall
fdivl
nop
or
movsl
dec
push
imul
dec
push
je
sbb
icebp
insb
push
in
repnz
clc
xor
and
es
xchg
xor
hlt
sub
dec
in
sub
mov
mov
fisubl
mov
fnstsw
add
int3
jmp
stos
daa
mov
divl
testb
xchg
and
daa
push
imul
outsl
dec
stc
ds
divb
js
mov
scas
stc
dec
push
pop
push
sbb
mov
push
mov
sahf
jmp
out
jae
xor
in
sbb
iret
jo
int
pusha
or
mov
add
cmp
jne
dec
mov
aam
je
jno
sahf
mov
out
jo
fldcw
insl
push
add
inc
inc
ret
jg
jmp
xor
dec
mov
mov
mov
cld
jle
xchg
xor
hlt
mov
sub
add
pop
dec
icebp
scas
mov
add
testl
add
loopne
push
mov
inc
ret
ljmp
sbb
inc
xchg
fcoml
idivl
xlat
shll
xor
dec
gs
push
imul
insb
movl
cmp
inc
out
repz
and
daa
out
imul
or
cmp
call
sbbl
xor
cmpb
bound
inc
stc
mov
es
add
pop
add
jle
xor
std
jns
add
lahf
js
add
test
jne
pop
xor
aam
jl
jns
xor
stos
or
das
mov
adc
stos
and
addr16
out
sti
pop
add
xlat
aam
aaa
insl
mov
sub
imul
xchg
repnz
rcrl
movsb
imul
sub
and
popf
cltd
cmpsl
sarb
mov
scas
sub
cmp
add
adc
mov
ss
push
mov
subl
popa
dec
xor
xchg
and
jmp
add
cmp
or
rcrl
or
dec
rolb
jnp
sahf
imul
or
jg
sbb
jp
fwait
rolb
jg
xchg
outsb
repz
dec
add
imul
daa
mov
mov
sub
imull
jae
xchg
jmp
xor
cmp
pmuludq
shrl
dec
jle
adc
mov
cmp
hlt
xchg
inc
incl
inc
mov
outsl
repz
push
and
ret
adc
testb
popf
mov
gs
jl
mov
cld
aas
imul
cmp
jno
pop
ds
dec
mov
lret
cmp
pop
xchg
and
xor
sub
sub
ret
std
in
sahf
scas
std
daa
bound
mov
ljmp
and
fsubl
push
outsb
dec
or
pop
cs
test
addb
sub
xor
add
or
mov
add
clc
push
xchg
push
or
sub
addb
clc
int
aad
add
mov
incb
push
das
sub
into
push
popf
dec
jge
mov
adc
mov
out
loopne
xchg
out
push
push
or
clc
push
add
dec
imul
and
sub
dec
jge
push
pop
dec
lock
sbbb
fucom
mov
push
fidivrs
icebp
in
nop
repz
or
jmp
in
sbb
jmp
sub
cmp
pop
xor
mov
mov
push
sub
cmp
jmp
pop
sub
out
xchg
sbb
sub
dec
into
mov
adc
push
sub
and
sbb
mov
and
or
iret
dec
daa
cmpsl
pop
jp
sub
inc
int
xlat
mov
int3
mov
jecxz
adcb
icebp
jle
or
stc
pop
sbb
dec
shlb
add
add
outsl
and
cwtl
in
rep
dec
xlat
mov
repz
or
fnclex
push
int
in
cmp
lods
jmp
leave
orb
mov
xchg
clc
lods
or
cmc
pop
ja
fstl
or
mov
out
dec
das
bnd
aaa
aas
repnz
adc
add
cmc
dec
push
sub
cld
outsb
insb
xor
push
ds
or
repnz
shll
enter
test
mov
fcompl
and
xchg
in
and
add
dec
in
dec
lods
sbb
xchg
adc
negl
mov
icebp
rcll
das
shll
sahf
mov
adc
dec
in
adc
mov
lcall
pop
sub
out
insb
pop
imul
xorb
and
aad
push
loope
add
pushf
inc
pop
nop
sbb
ds
mov
and
cld
aad
in
ret
mov
pop
mov
paddd
fcomi
add
sub
gs
sbb
adcb
sti
add
jl
repz
cld
out
pop
clc
std
dec
mov
mulb
out
jg
lock
sub
mov
mov
mov
and
stos
ja
das
dec
mov
in
daa
cld
xor
loop
push
icebp
in
mov
cld
jno
out
jmp
aas
sub
sub
call
bnd
fldenv
push
test
mov
repnz
fisubl
or
and
das
sbb
jb
push
pushf
or
and
stc
movd
jae
stos
and
lcall
dec
sub
jecxz
sub
fsubrs
or
outsb
mov
ss
aam
adc
xor
lret
mov
or
inc
add
pop
pop
insl
jnp
mov
and
testb
or
sbb
or
das
arpl
adc
decl
inc
sbb
arpl
cmp
addr16
ret
inc
push
pop
imul
or
pop
inc
or
cmp
push
ficoml
sub
call
pop
dec
jg
or
sub
repnz
adc
sub
pop
add
mov
pop
mov
stc
mov
scas
or
lock
cmp
hlt
inc
push
jb
shll
lret
jo
cmc
sbb
sbb
mov
imulb
in
mov
cmp
iret
dec
enter
and
mov
jae
outsl
nop
mov
jp
inc
xor
arpl
negl
call
repnz
or
cli
mov
outsl
arpl
sub
adc
aas
sahf
out
and
mov
sbb
dec
lock
in
jo
movsl
sahf
lret
pop
or
imul
arpl
jl
adc
mov
dec
mov
in
pop
push
xlat
into
push
or
in
fdivrl
cmp
aad
pop
int3
mov
outsb
pop
jae
les
push
or
jae
nop
dec
lahf
sbb
out
in
adc
xor
mov
push
int3
mov
dec
xor
jle
fwait
pop
inc
adc
into
mov
jp
dec
jg
push
ret
xchg
orb
aas
repz
sub
push
lret
div
sbb
repz
lahf
sahf
sbb
imul
pop
sub
mov
into
out
lret
add
hlt
sbb
outsl
jl
addb
stos
sub
mov
jae
pop
dec
or
mov
rclb
pop
sub
mov
adc
pop
cld
imul
in
std
in
mov
out
mov
pop
inc
push
hlt
or
jnp
push
cwtl
or
jle
dec
fsubl
std
in
pop
and
das
sbb
out
lcall
inc
mov
xor
xlat
cli
mov
mov
repz
aas
int3
and
xor
or
sbb
lods
dec
insb
into
outsb
cmp
cmc
mov
insb
cmp
mov
scas
stos
clc
cmp
cmp
pop
jg
orb
out
rcr
sarl
mov
cmp
sub
outsl
mov
out
pop
and
pop
or
mov
pop
xorb
out
test
push
je
ja
loope
in
push
jnp
sbb
mov
cmp
mov
ret
xor
mov
pop
jl
out
call
xchg
mov
pop
xor
jbe
push
cmp
mov
jmp
cmp
out
scas
or
jg
or
dec
ds
insb
push
in
sbb
xchg
push
jo
lret
cmp
insb
in
in
and
xor
es
cmpsl
sub
mov
sub
xor
aas
repz
mov
cltd
das
inc
ljmp
jg
cmp
repz
iret
into
out
es
push
aam
or
inc
jne
push
ljmp
scas
jl
dec
outsb
repnz
hlt
sub
or
pop
nop
stos
push
jae
adcb
rcrb
in
out
iret
sbb
stc
out
jae
or
leave
jae
addr16
lock
sbb
mov
mov
ss
and
push
sbb
cld
jno
mov
xchg
sub
out
or
daa
mov
mov
sbb
pop
stc
imul
fldt
sbb
adcb
xor
decl
call
in
ret
inc
clc
xchg
int
rcrl
xchg
cmc
popf
push
call
mov
mov
pop
sbb
in
sbb
sbb
mov
lods
and
repnz
fldl
sbb
sti
and
cli
cld
or
int3
mov
xor
adc
jbe
cmc
ja
aas
add
arpl
push
int
bound
fstpl
inc
pop
cmpsl
repnz
lcall
jp
and
or
rorb
and
push
sub
jmp
dec
pop
mov
cmp
dec
mov
fmul
dec
dec
outsl
ljmp
adc
jno
jnp
in
out
xor
decl
int3
outsb
mov
or
dec
and
pop
cld
hlt
cli
icebp
int
out
jmp
fsubrp
cmp
sub
inc
pop
sub
push
out
popa
and
pop
push
jecxz
inc
mov
dec
fcomi
dec
dec
imul
stc
and
and
sbb
jp
fdivr
pop
jg
or
pop
mov
sbb
repz
or
sarb
pusha
push
cmp
add
xor
sub
jecxz
cmp
or
aam
int3
or
std
sbb
sub
out
push
lock
stos
xchg
das
lock
lds
repz
insl
xor
inc
repz
je
and
mov
pop
xchg
dec
stc
dec
stos
fmulp
cld
jmp
in
int3
stc
add
test
xchg
xlat
adc
jle
pop
in
or
pop
das
jnp
sahf
roll
out
and
cld
mov
ret
sub
pop
add
mov
dec
cld
mov
add
mov
xchg
jne
inc
dec
mov
inc
push
fistl
stos
call
xchg
sti
xor
popa
dec
cs
inc
lcall
outsb
sti
mov
stos
sub
mov
mov
leave
pop
inc
sbb
enter
cltd
mov
out
mov
std
stos
add
mov
rcll
jl
pop
xchg
inc
xchg
std
cltd
aas
dec
xchg
js
xchg
adc
dec
or
shrb
mov
sub
add
std
ret
aam
push
xor
mov
fmul
shl
pop
xor
jg
jmp
insl
dec
enter
inc
push
lock
add
sub
cmpsb
call
add
or
xlat
or
sub
sub
scas
test
cmpsb
sub
pushf
int3
fwait
inc
push
lret
or
fwait
pop
sub
dec
or
outsl
subb
adc
aas
sarb
movq
out
imul
jp
xchg
jge
inc
sub
sub
sub
jecxz
rorl
lock
js
mov
cwtl
jo
out
movsl
dec
cmpsl
xchg
mov
push
push
xchg
dec
or
mov
jnp
mov
push
mov
jno
fldcw
pusha
test
subb
movsb
mov
push
jg
push
mov
dec
shl
push
or
aas
and
in
mov
jb
in
daa
out
jns
ja
lods
add
sar
aas
mov
es
dec
in
sub
ret
mov
out
gs
xor
imulb
or
in
out
adc
cmp
push
sahf
fcompl
fists
pop
mov
sbb
out
fsubrl
psrlw
xor
mov
imul
test
cmp
sti
cmpsb
xor
or
repnz
mov
cmpl
fldcw
jno
and
cmc
std
inc
adc
lods
daa
roll
inc
ljmp
mov
jbe
in
jb
jae
and
xor
xor
jae
lahf
aam
sub
pop
sub
dec
and
sub
cli
dec
push
xchg
mov
stos
aaa
dec
add
push
cwtl
or
shrl
xorl
leave
or
outsl
mov
outsl
stos
mov
test
dec
jg
add
push
mov
int3
es
movsb
lods
mov
add
sub
in
pop
sbb
jo
xor
imul
testl
clc
cmp
in
cmp
test
out
sbb
cmc
dec
lods
arpl
adc
lock
int
outsb
or
and
daa
std
jnp
mov
arpl
inc
xor
push
insb
lock
sbb
fstpl
imull
mov
mov
xchg
adc
ljmp
and
repnz
mov
into
mulb
lods
scas
cmp
fldt
cld
ja
or
insb
popa
shl
and
in
icebp
adc
mov
sbb
fstp
outsl
xor
xchg
adc
in
jne
mov
jb
je
int3
daa
sub
das
mov
sbb
popf
lret
inc
add
dec
add
out
add
or
pop
pop
xor
int3
movsl
and
inc
push
xor
mov
xor
out
int3
pop
cmp
lret
lock
lods
lock
dec
pop
dec
and
pusha
rdmsr
and
clc
mov
test
dec
scas
clc
jge
sub
lea
stos
push
xor
fwait
mov
pushf
in
jg
and
lea
push
pop
lock
insl
repz
mov
mov
outsl
inc
add
dec
insl
daa
xchg
xor
into
out
bnd
rcrl
lret
sub
scas
addl
pop
orb
xchg
ds
lret
mov
ljmp
out
cmp
mov
add
call
xchg
mov
mov
insl
pop
jg
dec
sbb
xor
mov
or
out
push
pop
pop
and
out
pop
in
ret
in
fldpi
sbb
jb
sub
lea
lock
dec
jle
mov
pop
dec
add
fs
jmp
dec
jae
xlat
xor
pushf
mov
sbb
xchg
jbe
ja
fnsave
xlat
or
pop
loopne
shrl
xchg
pop
mov
scas
orb
popf
fstps
mov
fsub
cmp
xor
and
ljmp
test
jns
add
mov
lea
icebp
xchg
mov
and
dec
push
popf
add
sub
fwait
sbb
push
mov
pop
xor
pop
add
dec
pop
movsl
packssdw
xchg
aas
jl
rcll
into
enter
pop
add
add
mov
mov
xchg
enter
ja
and
push
push
add
xor
sti
repnz
testb
cmc
ja
jb
in
clc
in
sti
out
cli
repz
sti
cld
std
dec
add
sub
insb
rolb
or
stos
hlt
and
loop,pn
xor
push
sbb
xor
mov
pop
pop
pop
inc
lret
mov
mov
and
cltd
pop
lea
dec
test
jns
negl
sub
dec
mov
sbb
into
ret
push
jae
dec
loop
and
adc
sbb
scas
add
aam
fdivl
mov
jge
aam
sbb
mov
insl
cld
pop
in
lahf
aas
pop
fwait
js
add
repnz
mov
xor
lock
mov
adc
jle
fistpll
adc
out
cs
test
pop
test
jmp
inc
repz
cmp
arpl
add
icebp
movsl
iret
ss
sub
clc
push
sub
push
scas
js
and
pop
and
push
and
inc
push
les
cld
ret
push
jnp
jmp
push
mov
movsl
cmp
xchg
xchg
test
push
nop
xor
repnz
subb
jp
xor
cld
sbb
or
and
data16
inc
lcall
in
adc
and
mov
mov
cmp
sub
addr16
mov
int
dec
sub
cmpl
inc
aad
mov
cmpl
pop
fdivl
mov
push
in
pop
mov
mov
pop
jge
add
outsl
jge
xlat
cmpsb
mov
into
cmp
push
push
popa
stc
jg
hlt
loope
add
hlt
adc
rcrb
jnp
and
cmp
or
stos
mov
and
or
enter
sub
xor
test
pop
sarb
std
xor
scas
push
mov
cmp
mov
xor
lods
and
mov
stos
mov
div
jg
cld
test
cli
cmp
iret
sub
ljmp
into
xchg
push
lret
xchg
scas
cmp
cmp
repz
cmc
mov
cmpsl
jno
mov
jge
stos
aas
xor
stos
push
popa
or
mov
unpckhps
jno
clc
lods
mov
sahf
testb
mov
pop
cmp
sahf
mov
test
repz
mov
popf
rorl
decl
sub
leave
dec
arpl
mov
jmp
lods
jge
hlt
mov
or
out
jb
sbb
leave
lods
and
test
mov
sti
jg
gs
pop
stos
popf
cmp
stc
add
subb
ja
cmc
daa
popa
add
jnp
sti
add
mov
and
divl
xchg
sub
ret
inc
idiv
psubb
adc
xchg
mov
out
fisttpl
or
insb
and
xor
rcll
jecxz
cmp
sub
cltd
andl
cmp
jle
mov
stos
outsb
clc
add
push
repnz
cmc
clc
sbb
repnz
mov
mov
mov
mov
push
pop
inc
repnz
mov
mov
inc
cmp
fldcw
jp
andl
in
sub
enter
adc
repz
push
mov
std
call
mov
lret
sub
xchg
rorb
adc
ret
std
cwtl
fsubrs
xchg
rcr
test
jl
lds
clc
cmp
out
enter
add
aas
jg
movsl
dec
pop
imul
cli
mov
cwtl
les
sbb
repnz
decb
mov
cld
mov
in
cmp
cmp
push
in
dec
jmp
scas
and
fwait
and
jle
push
xchg
jge
cmpsb
lea
test
cltd
lock
xchg
jg
jnp
in
int3
or
add
cmp
push
out
das
and
leave
sbb
out
into
inc
repz
push
aas
pop
push
cmp
xor
inc
movsb
ret
add
out
sbb
outsb
inc
ror
adc
mov
add
ss
add
lds
inc
jae
sbb
pusha
mov
adcl
jg
daa
jne
insl
aas
adc
inc
icebp
cmp
insl
jecxz
das
cld
lock
div
outsl
mov
jb
mulb
fidivs
aam
jae
pop
das
dec
por
aam
sbb
das
call
push
sub
icebp
sbb
dec
sbb
roll
xadd
cmc
add
xchg
dec
mov
mov
repz
dec
or
ja
sub
jl
push
xchg
addr16
xor
pop
scas
ret
roll
popa
jl
daa
into
lods
test
pop
mov
mov
in
cmpsb
outsb
hlt
inc
or
add
xchg
mov
pop
mov
push
cld
dec
popa
xchg
daa
fidivrs
fistl
mov
mov
sbb
mov
test
mov
mov
int
jno
and
bound
xor
lods
daa
ret
test
in
test
lods
out
aas
mov
cmp
xor
outsl
scas
ljmp
shr
sub
pop
mov
mov
mov
lock
punpckhbw
iret
jne
rolb
shrl
pop
jno
leave
push
adc
orl
pop
pop
cmc
mov
fimull
adc
rep
nop
imull
mov
adc
stos
ja
imulb
addr16
in
imul
dec
cs
and
mov
imul
add
jne
int3
inc
xor
out
inc
daa
stos
out
push
or
mov
scas
out
dec
adc
push
dec
stos
icebp
cmp
and
aaa
negb
std
int
nop
pop
pushf
cmp
jecxz
outsl
mov
add
lret
xchg
push
icebp
out
test
jbe
pop
push
or
icebp
sti
cmp
lods
dec
imul
sub
daa
xchg
jp
les
out
mov
mov
repz
movsb
push
adc
lock
xor
xchg
jl
push
mov
xchg
pop
mov
insl
out
mov
and
cli
mov
divl
arpl
push
outsl
cld
das
lods
imul
adc
fs
jne
fwait
outsl
roll
int
cmp
push
jb
xchg
lret
add
dec
addr16
cmpsl
adc
cmp
dec
mov
test
mov
clc
mov
in
into
pop
or
mov
cltd
pop
data16
mov
or
std
jo
push
jbe
cmp
pop
sbb
outsb
sub
insb
inc
and
cmp
movsb
or
mov
imul
sti
testb
push
movsl
cmc
add
jmp
out
lea
mov
test
test
jb
cmp
mov
lea
jae
mov
dec
mov
jle
fwait
iret
enter
outsb
je
dec
cld
fwait
lock
mov
jle
pop
nop
fstpt
aaa
adc
jecxz
cmc
xor
sahf
jge
test
mov
adc
imul
adcb
or
xchg
aam
mov
scas
rcll
icebp
xchg
lea
and
push
xchg
clc
mov
adc
lock
inc
sub
pop
xchg
dec
repz
outsl
dec
out
xor
cmpsb
mov
inc
das
cmp
sub
lahf
cld
int
rolb
sbb
inc
mov
std
lret
sbb
jmp
mov
sbb
test
cld
xchg
das
pop
dec
sub
loopne
ss
roll
lock
cmp
dec
lock
shll
inc
inc
push
jb
dec
testl
in
rcrl
xchg
xchg
test
inc
xor
inc
xor
in
jle
xchg
movsl
cmpl
adc
cmc
sub
dec
repnz
repnz
fnsave
and
mov
add
ret
mov
inc
mov
xchg
xchg
fldcw
incl
clc
dec
jmp
or
sbb
lods
push
cmp
imul
icebp
push
add
cmpb
rcrb
mov
cmp
xor
add
cmpl
xchg
out
insb
in
cmc
gs
inc
mov
pop
jns
nop
push
cmp
dec
sub
sub
and
and
movsl
dec
enter
lret
mov
dec
jo
dec
das
negl
insl
or
mov
std
pushf
repz
mov
cmp
pop
jb
lock
mov
in
cmpl
adc
mov
pusha
out
mov
lcall
sbbb
mov
out
cmp
pop
addl
in
in
adc
or
jbe
inc
jmp
hlt
pusha
pop
andl
in
sub
add
mov
das
jp
ret
mov
mov
add
cmc
push
cltd
inc
ret
movsl
xchg
adc
xchg
xchg
jb
pop
xchg
adc
lret
ret
pop
test
sub
jno
fdiv
dec
jg
rorb
fsts
push
push
xor
jo
jnp
fdivrs
sbb
cmp
sub
xchg
ljmp
repz
fstpl
mov
out
xor
jl
repz
clc
repz
sbb
cld
xor
dec
jb
ficoml
cmp
adc
lret
decl
or
clc
dec
cli
push
jmp
shll
filds
mov
movb
fnstenv
scas
hlt
lret
jno
and
dec
or
sti
add
nop
shlb
sub
and
ficompl
arpl
icebp
addr16
adc
jns
mov
popf
stos
movq
daa
cmp
pop
es
mov
xor
dec
out
sahf
or
cmp
jle
insl
jae
and
cmc
pop
sbb
ljmp
iret
dec
and
push
iret
cli
test
pop
push
jnp
pop
stos
sub
mov
fnstcw
sub
or
or
xor
sub
pop
andw
xchg
aas
call
movsb
jnp
and
dec
addr16
xor
nop
les
ljmp
jbe
loope
icebp
cmp
push
mov
je
mov
jb
jl
out
mov
adc
cmc
mov
icebp
mov
cmpl
in
in
mov
fwait
sub
out
out
inc
jmp
nop
xchg
inc
int
xchg
outsl
jb
sub
test
fwait
jle
pop
rorl
sub
add
mov
mov
aas
mov
out
out
repnz
mov
hlt
andl
das
es
out
mov
hlt
jne
insb
cmp
push
add
lock
lods
or
and
cmc
insb
daa
mov
cmp
les
xlat
loop
xor
into
jns
or
mov
imul
call
outsb
orb
push
arpl
dec
dec
sbb
mov
push
jl
cmpb
lods
scas
hlt
sub
and
decl
daa
jge
inc
aas
mov
push
mov
addl
in
dec
sub
and
inc
sub
fwait
popa
rorl
icebp
pop
dec
mov
insl
in
pop
imul
add
stc
out
outsb
std
cmpsb
stos
cmpsb
outsb
push
pop
jno
imul
dec
jae
inc
push
in
adc
inc
lods
aaa
in
xorb
scas
inc
xor
in
add
scas
mov
cmpsb
sbb
cmp
cli
mov
ret
das
xchg
in
sarl
sbb
leave
ss
inc
jp
stc
iret
jnp
int
out
xor
xor
or
mov
dec
sub
jns
int
cltd
hlt
lea
sbb
out
out
int3
stos
out
clc
lods
or
lods
dec
ja
fsts
add
ret
xchg
shrb
clc
pop
ficoml
jb
xor
sub
ret
aas
scas
pushf
out
mov
sub
inc
sarl
pop
lds
in
testl
ja
xorb
pushl
pop
xchg
fdivl
icebp
lods
sub
arpl
mov
mov
xor
icebp
mov
test
mov
leave
ljmp
lods
sbb
inc
sti
xor
jmp
ds
out
imul
sti
out
mov
aaa
sub
out
sbb
sbb
nop
insl
mov
adcb
loop
add
xor
adc
dec
lods
dec
imul
jb
pop
mov
add
and
imul
lahf
pop
fwait
bnd
andl
and
cmc
jne
and
data16
cld
outsl
repz
mov
cld
idivl
jmp
mov
clc
sub
xor
sub
test
loope
jl
int3
popa
sbb
and
pushf
add
dec
pushf
ror
and
in
mov
mov
inc
sbb
adc
ret
out
or
imul
xchg
hlt
into
jecxz
hlt
cmp
aas
icebp
mov
jp
mov
sub
push
dec
mov
fs
daa
lock
into
cs
lcall
mov
rcr
lcall
cmp
mov
push
fsubrp
dec
jg
and
repz
cmpsl
inc
insb
and
jae
sub
mov
lods
faddl
repnz
ja
dec
ljmp
mov
loope
imul
cld
xor
add
adc
push
jb
mov
pop
adc
and
out
lods
nop
fs
push
mov
jl
push
pop
sub
rcrl
out
pop
clc
dec
dec
stc
mov
adc
into
insb
out
pop
scas
mov
cmpsl
xor
out
pop
daa
rorb
lods
in
insb
in
out
mov
das
jecxz
jbe
jmp
sbbb
mov
jge
mov
push
jmp
push
cmc
mov
sub
in
or
rorb
jle
mov
hlt
cmp
ljmp
jo
jae
bound
imull
enter
xor
stc
pop
insb
mov
sub
mov
imul
push
cld
fcomip
sub
xchg
dec
outsb
inc
sbb
pop
fcoms
sub
xchg
bound
sti
xor
jle
sbb
stos
ds
xchg
pop
in
or
or
aaa
sub
xor
xor
das
and
hlt
and
jne
adcb
popa
lahf
stos
jbe
mov
lret
sub
test
xchg
sbb
xor
sub
sub
daa
pop
faddl
repz
insl
jp
xor
es
xor
movl
sub
sub
and
xchg
mov
lcall
xlat
shrb
cmpb
insl
lret
int3
sub
jae
das
out
iret
in
sti
lock
cmp
mov
dec
test
mov
insb
push
lods
outsl
cmp
sub
jnp
push
in
icebp
inc
sub
xchg
and
sbb
ds
cmp
dec
xor
lds
mov
icebp
lock
out
imul
fildll
imul
icebp
xor
xor
jnp
mov
pop
cmpsl
cwtl
outsl
decl
sub
popa
xor
mov
andb
sub
sub
ficoml
dec
jecxz
and
out
and
test
jns
xchg
xchg
lock
dec
scas
xlat
add
pop
dec
and
add
lahf
fsubr
popl
test
jb
addr16
fisttpll
mov
inc
cmpsb
sub
mov
sbb
push
mov
and
fidivrl
out
cmpsb
lock
rcrl
mov
adc
mov
dec
fisttps
jp
sbbb
lcall
inc
std
adc
adc
mov
jmp
mov
fdivrl
in
in
icebp
xor
dec
stos
test
adc
sbb
enter
adc
cmp
sub
sub
int3
test
in
dec
sub
adc
xchg
pop
stc
mov
mov
lock
imul
jnp,pt
mov
std
sbb
dec
das
std
xchg
shlb
jl
or
or
jl
and
xchg
inc
in
or
dec
roll
arpl
out
in
sub
repnz
cmp
repz
std
hlt
notb
hlt
cmc
orb
sti
orb
pop
pop
and
cmp
in
add
cmp
jns
out
cld
adcb
pop
lods
rorl
mov
lea
or
test
mov
fnstcw
out
repnz
les
sarb
mov
inc
out
sti
icebp
movsl
mov
outsl
xor
jno
add
xor
adc
loopne
mov
icebp
cmp
xor
cli
mov
sub
or
add
out
jle
jnp
sbb
sub
cli
jnp
testb
xor
insl
xlat
adc
push
dec
out
dec
xor
mov
add
shll
adc
outsl
and
jle
cmc
xor
sub
mov
insb
test
and
jo
hlt
add
insb
dec
sub
jl
or
cs
outsl
xchg
neg
lahf
fldt
and
outsb
and
xor
mov
jge
sub
ss
or
jne
ljmp
repz
daa
ja
mov
lock
mov
shr
sub
and
or
xchg
sbb
dec
into
inc
jmp
test
mov
xor
xchg
addb
jae
insb
mov
insb
push
arpl
add
push
cld
int
dec
lret
dec
daa
push
fsubrs
std
or
jne
mov
ret
xchg
lods
push
cmc
add
xor
incb
sub
fildll
add
add
cwtl
mov
hlt
daa
in
andb
and
xchg
mov
dec
push
add
enter
sbb
dec
imul
std
repz
cmp
xchg
jns
in
pop
and
arpl
push
mov
repnz
sbb
stc
or
sbb
ds
daa
and
cltd
lods
pop
out
and
mov
mov
add
cmp
cmpsb
hlt
scas
dec
or
jl
int3
cmpsb
pop
lods
scas
addb
leave
aam
in
enter
push
dec
sbb
jae
jo
mov
or
and
rcrb
mulb
std
xor
fdiv
cmc
mov
and
in
inc
je
aad
stos
xchg
jl
js
push
clc
lret
es
sub
mov
repnz
mov
mov
fcoml
hlt
mov
cmp
in
sub
clc
sub
mov
mov
inc
push
shlb
js
dec
scas
push
pushf
daa
pop
ret
push
mov
jle
mov
sar
or
adc
push
dec
mov
sbb
stc
out
mov
in
sti
ja
das
cwtl
leave
stc
imul
adc
ret
stos
aaa
or
mov
idivb
ficoml
mov
mov
mov
inc
sub
imul
push
and
jl
add
icebp
mov
or
dec
push
xor
cmp
notb
xchg
outsb
fcompl
xor
or
pop
lret
add
or
int3
jge
lock
cmp
pop
dec
test
maskmovq
testl
cmc
int3
test
nop
mov
cld
fwait
scas
adc
fnstsw
push
mov
cs
and
cmp
mov
push
ror
outsb
cmc
jmp
push
clc
rcrl
mulb
push
push
mov
lcall
or
std
and
or
mov
dec
push
and
lret
ss
stos
pop
push
mov
out
in
int3
dec
daa
cli
fcompl
jle
jne
lock
and
lock
jle
add
inc
repnz
sar
repz
popa
ss
icebp
jb
negb
xor
add
xchg
inc
sbb
in
jns
pop
xchg
das
out
lods
xchg
mov
enter
or
es
incb
es
inc
mov
outsl
mov
push
and
xor
lea
jnp
aas
aaa
sub
sbb
rclb
out
xor
imul
stos
hlt
or
cmp
mov
into
dec
testl
outsl
out
addr16
mov
sbb
inc
negb
hlt
orb
inc
repz
adc
sub
sub
fisttps
sub
pop
mov
aam
dec
mov
and
out
hlt
sbb
sub
sbb
push
scas
sbb
addr16
int
imul
ficoml
das
test
enter
mov
dec
push
ja
mov
nop
outsl
cld
hlt
out
movsl
mov
cmp
sub
add
mov
bound
mov
repz
sub
mov
and
test
pop
mov
mov
dec
cmp
or
sahf
cmpsb
xchg
xchg
not
sti
sub
dec
orb
adc
daa
fdivr
jle
test
test
sti
jl
out
or
stos
cmp
movsl
sub
mov
sti
dec
pop
and
arpl
imul
mov
sub
sub
cmpsb
outsl
mov
pop
mov
or
adc
test
pop
aam
inc
outsl
and
stc
gs
add
cmp
jmp
and
mov
inc
cmp
or
fcoms
test
ds
ret
cmp
and
loop
lock
out
add
fcoms
fwait
loop
jno
xor
stc
sahf
cld
int
out
pop
mov
jle
inc
testb
outsl
or
insl
xchg
add
cmpl
in
lock
adc
out
or
mov
or
out
sbb
push
in
in
sbb
cmp
sub
inc
loop
cmp
fildl
adc
sti
inc
push
sbbl
jge
cmp
in
dec
lret
cmp
test
stos
loope
or
dec
lret
cs
jns
adc
mov
and
push
das
mull
hlt
cli
test
push
out
int3
jne
sbb
sbb
andb
fwait
sbb
cmp
push
orb
test
pop
inc
rorb
xorl
mov
or
scas
cwtl
fmul
mov
ja
push
outsb
sbb
jle
or
xchg
cli
sub
sbb
and
andl
scas
into
sbb
or
mov
pushf
imull
ljmp
mov
sbb
in
inc
add
xor
cld
lahf
out
dec
imul
or
lret
push
into
mov
jp
cmpsb
mov
or
inc
xor
mov
ficoms
fs
or
mov
fdivrp
sahf
repz
push
pop
and
cmp
sub
jnp
jnp
sbb
push
mov
pop
adc
inc
inc
dec
cmp
int3
pop
mov
leave
cmpsl
jmp
fdiv
in
and
out
mov
push
popf
repz
cmpsb
mov
into
int3
inc
and
mov
sub
sub
pop
ffreep
ss
stc
xchg
insb
xor
aas
mov
out
stos
push
clc
mov
adc
mov
xor
lods
mov
daa
push
into
mov
outsb
sub
xor
stos
xchg
divl
lock
adc
out
inc
add
jl
fs
out
mov
mov
pop
jg
xchg
cwtl
mov
mov
cmp
inc
stc
jne
mov
pop
dec
das
in
add
sub
outsl
adc
aas
inc
xchg
mov
rolb
jmp
dec
shrl
xchg
jge
add
or
push
js
repz
int
scas
lcall
ret
insb
and
cmp
loop
jo
mov
outsl
scas
jno
jge
inc
mov
mov
lea
cli
mov
in
and
xor
repz
mov
or
int3
mov
movsl
xchg
pop
js
add
or
jge
cmpsb
cld
cwtl
jge
sbb
rolb
test
cld
insb
cltd
dec
xor
xlat
xor
call
fbld
mov
jb
xor
dec
mov
aas
andl
jns
sbbl
fildll
ljmp
ss
roll
jle
cld
jle
daa
push
mov
pop
xor
jl
jp
add
xor
negb
aas
sar
fwait
sbb
cmp
lods
push
in
cld
and
addl
pop
mov
sub
std
sbb
fidivs
imul
sbb
jg
xchg
adc
scas
shr
enter
cmp
aad
icebp
mov
dec
or
dec
push
lock
jne
insb
push
in
mov
arpl
add
outsl
in
cltd
outsl
stos
sub
sbb
pop
xor
push
jns
lds
dec
daa
repz
dec
shl
lods
xlat
sub
sub
test
hlt
mov
pusha
lods
les
xlat
je
cmc
ss
imul
das
mov
lock
lahf
push
xlat
xor
xchg
scas
dec
or
adc
cmp
sbb
or
pop
out
and
scas
scas
mov
in
push
sbb
lods
sbb
sti
lods
or
outsl
adc
repnz
push
push
ret
loop
or
sbb
and
imul
sub
and
insl
push
jge
add
sub
outsl
ds
imul
aam
jno
inc
jl
jp
dec
sbb
pop
ljmp
test
and
hlt
push
dec
addr16
aad
sti
push
int3
fbstp
cmp
icebp
and
out
test
clc
and
inc
sti
jmp
mov
or
es
push
in
and
inc
out
jo
es
scas
dec
cmpsl
sub
icebp
adc
fmuls
cmp
xchg
or
fstpl
inc
repnz
xchg
xchg
xor
ljmp
jns
mov
je
and
cld
cmp
sub
fsubs
arpl
cli
daa
cmc
gs
into
hlt
mov
dec
fdivrp
icebp
das
add
jl
and
pop
sub
into
outsb
dec
pop
add
bound
sub
test
imul
fidivl
dec
cmp
lods
fisubrs
jmp
clc
test
and
adcb
pop
dec
je
jo
sbb
out
lods
pushf
test
ss
mov
test
fdivr
or
sbb
mov
mov
jnp
in
call
or
mov
stos
rorl
mov
add
orl
scas
fsts
cld
sub
mov
mov
arpl
inc
cmp
lods
and
dec
sbb
ds
mov
add
sbbb
cmpsl
lahf
push
jg
mov
cmp
jae
cmc
push
mov
and
outsb
movsb
sub
or
lret
sti
add
mov
insl
in
sbb
std
outsb
cmp
movsl
add
mov
xchg
sub
push
mov
rol
je
icebp
xor
push
lock
jg
push
push
mov
push
jae
repz
test
add
sub
xchg
xchg
lock
jae
jbe
add
jl
or
mov
out
mov
pop
out
jl
iret
mov
cmp
mov
or
inc
push
push
data16
icebp
push
mov
lret
push
sub
lods
movntps
mov
sub
rorl
jle
fisubrs
mov
ja
insl
lock
xchg
mov
insl
xor
xchg
pop
pop
pop
cltd
or
lret
jge
lods
call
std
lock
cltd
repz
push
ja
cmp
and
js
xor
push
cmp
lods
cwtl
mov
ja
xor
push
loop
mov
sub
push
add
out
in
jge
xchg
inc
sub
adc
and
addl
push
hlt
xlat
add
aaa
and
pop
out
nop
xor
or
sti
jg
and
mov
cld
outsl
repz
es
sub
icebp
push
aam
gs
xchg
mov
bound
movsl
inc
pop
cmpsl
sub
mov
jae
cmp
jno
insb
jo
lahf
int3
sub
cli
inc
outsl
push
out
aaa
shrb
or
pop
hlt
sub
xor
fmull
add
xchg
dec
sub
out
mov
sbb
dec
stos
lods
insl
jbe
mov
cli
cmp
or
xchg
outsl
mov
ja
out
leave
in
out
in
lret
jp
insl
scas
dec
mov
inc
imul
dec
jnp
dec
add
ja
dec
repnz
xor
push
inc
outsl
test
add
pop
lahf
imul
xor
add
fnstsw
cmp
in
shl
cmpb
idiv
das
lret
mov
pop
sub
inc
pop
addr16
mov
cmp
aaa
in
fwait
in
lcall
adc
call
test
or
adc
fnsave
insb
sub
mov
pop
fwait
lods
and
test
lahf
push
cli
dec
jg
clc
test
adc
ss
nop
lahf
pop
hlt
pop
inc
sti
add
clc
dec
bts
iret
mov
movsb
and
in
pop
push
leave
push
cmc
jns
adc
sahf
and
mov
into
hlt
out
mov
and
subb
cmp
or
daa
out
fwait
sbb
mov
das
mov
push
xor
pop
lock
jl
sub
push
cmc
dec
mov
mov
stc
or
jmp
jg
addb
add
sbb
xchg
xor
and
cmp
cmp
ret
enter
xor
mov
jmp
rorb
out
jo
outsl
push
and
rcrl
repz
push
outsl
in
out
adc
es
ja
adc
outsb
xor
xor
xchg
xor
mov
mov
dec
je
adc
int3
scas
fcmovnb
insl
out
in
mov
out
fwait
subb
in
stc
push
das
shrl
shrl
cmpl
daa
in
push
add
adc
aam
xchg
fdivl
inc
jge
outsl
out
mov
outsl
rcrb
mov
and
inc
or
xor
add
xlat
sub
icebp
sub
and
data16
out
lock
sbb
adc
insb
pmaxsw
and
sub
testb
adc
sbb
stos
leave
cmp
jl
and
cmp
aaa
xor
dec
idivl
in
imul
mov
andb
hlt
mov
test
inc
and
or
sbb
dec
mov
testb
outsl
ja
pop
outsl
mov
insb
jmp
es
aad
sar
in
dec
repnz
leave
dec
and
xor
icebp
je
stos
aaa
jl
and
fsts
std
xor
das
rorb
inc
lods
daa
test
cs
lahf
lods
fldenv
icebp
cltd
dec
fildll
cmpsb
fcoml
imul
test
push
lock
jnp
imul
aad
jno,pt
jl
std
lret
ljmp
int
mov
in
or
imull
sti
rcr
mov
pop
in
pop
stos
mov
cltd
std
clc
pop
cmc
data16
ja
les
mov
inc
shrb
hlt
cmp
aad
jge
jl
push
ss
xor
pushw
sub
add
sub
push
xchg
mulb
dec
adc
out
and
lock
cmp
rol
mov
xchg
sub
imull
and
push
rorl
inc
adc
inc
fadd
xchg
mov
mov
inc
lsl
add
stos
ss
dec
cmc
aas
insb
lods
lea
and
push
inc
mov
jo
sub
lock
stos
repnz
lcall
jecxz
fcmovnb
addr16
push
in
dec
insb
pop
mov
xor
add
xchg
sbb
out
gs
lock
outsb
xor
adc
jl
inc
sub
inc
inc
ret
lcall
sbb
orl
and
out
push
cli
int3
les
js
movsb
std
pop
cli
push
mov
lcall
cmp
xorl
mov
outsb
cmp
adcb
insb
test
sub
add
fstpl
dec
sbb
sbb
and
jle
shll
sar
into
jecxz
push
dec
xchg
mov
ret
dec
les
cmp
or
cli
cmp
push
dec
push
sahf
push
in
aam
aad
adc
movsb
fimuls
sarl
ljmp
fldl
pop
ret
int3
add
in
out
shlb
nop
pop
pop
push
shrb
insb
mov
aas
sbb
adc
mov
repz
push
jl
rcll
pop
cli
or
inc
sub
ret
lret
cmc
stos
mov
clc
mov
mov
test
add
int
imul
pop
fs
insb
mov
adc
mov
push
das
adc
insb
adc
fisttpll
xor
or
outsl
adc
sbb
or
sbb
outsl
cli
xor
outsl
cmc
xor
adc
hlt
and
sub
ja
jo
hlt
and
scas
jo
mov
inc
mov
mov
xor
cli
xor
int
or
cmpsl
lret
sbb
add
push
scas
and
jo
sti
mov
outsb
sub
mov
xchg
insl
das
add
jo
not
adc
scas
std
cwtl
cmp
xor
xchg
dec
dec
xor
outsl
movsl
sbb
mov
xchg
dec
sub
add
test
std
jb
shlb
add
cmp
fld
stos
cmp
jo
jo
pop
xor
popf
fistpl
ror
das
dec
mov
cld
or
subb
mov
xchg
adc
test
mov
imul
das
xchg
cwtl
lahf
xchg
sbbb
or
sub
dec
add
pop
repz
neg
xchg
mull
stc
push
pushl
nop
in
insb
and
jmp
mov
jg
test
inc
test
cld
mov
inc
xor
add
push
xor
icebp
lods
jne
cltd
xchg
pop
testl
or
mov
pushf
scas
cld
adc
mov
xor
call
lods
pushf
dec
enter
xchg
mov
add
pop
push
xchg
add
cmp
mov
sub
sahf
outsl
gs
cmpsb
dec
and
nop
and
and
int3
mov
scas
push
mov
push
xchg
repz
push
out
repnz
dec
cmc
inc
adc
sbb
adc
pop
mov
jecxz
cmpsl
icebp
in
cli
adc
neg
dec
and
out
jno
mov
fcompl
push
push
cmpsb
sub
push
imul
aaa
adc
cld
js
push
add
pop
inc
or
dec
lret
cmpsl
inc
inc
and
fcomip
test
frstor
add
sub
xor
mov
in
fs
dec
mov
out
add
int3
dec
stos
repz
xor
lock
mov
cli
push
mov
pushf
cmpsl
add
pop
and
add
jo
insl
and
lods
into
gs
int3
ja
jge
lds
sub
lret
add
pop
das
dec
inc
add
or
mov
scas
into
lods
addb
pop
mov
subb
xor
or
push
push
andl
push
xor
push
inc
ss
mov
aas
scas
in
ljmp
mov
std
scas
rcrb
and
out
repz
push
dec
or
jne
add
inc
insb
rorb
xchg
gs
fcomps
insb
sti
lahf
dec
mov
outsl
mov
jl
mov
decb
jbe
repz
repz
or
mov
jecxz
in
in
subb
je
or
aad
sbb
enter
mov
lahf
int3
pop
imul
pop
pop
arpl
xchg
addr16
mov
inc
arpl
xchg
sbb
aas
push
out
addr16
bnd
stc
mov
into
out
sbb
xchg
pop
inc
ljmp
or
sub
cld
push
sbb
xchg
out
mov
out
pop
sub
xchg
imul
lock
in
sub
stos
push
xor
std
icebp
sbb
push
inc
in
xchg
mov
and
sub
insb
jg
add
xchg
fidivs
bound
sub
dec
xchg
lods
hlt
rcll
outsl
bsf
mov
inc
and
and
adc
push
sbb
in
sbb
bound
jo
or
add
xchg
loopne
test
fisttps
movups
movsb
or
imul
dec
ljmp
xor
mov
dec
sub
xor
mov
dec
insl
scas
sarl
out
pop
lea
jno
inc
adc
scas
div
inc
outsb
movsl
in
sub
add
cmp
insb
sbb
in
aas
or
mov
imul
push
xor
sbb
mov
pop
jno
pop
out
add
and
movsb
out
outsl
adc
adc
test
popa
or
iret
xchg
das
idivb
out
das
dec
dec
add
mov
push
mul
add
push
jae
outsl
test
fldcw
push
lock
adc
faddl
popf
sub
xlat
or
jnp
jg
dec
jbe
ret
pop
aas
test
and
jl
imul
jno
dec
pushf
jae
xor
rcrb
call
inc
scas
dec
pop
cmp
push
add
push
or
ss
enter
and
aas
in
out
push
cmp
sbb
cmpb
mov
adc
sbb
test
out
daa
out
adc
mov
dec
outsb
cmp
icebp
repz
out
mov
sbb
pusha
mov
xlat
test
cmpsl
vpunpckhbw
ja
pushf
es
bswap
and
gs
push
pop
imul
dec
addr16
aaa
bound
out
add
add
imul
cmp
dec
xor
into
or
out
clc
jo
in
lock
xchg
dec
sar
sar
push
notl
sbb
lahf
xor
xlat
outsb
inc
jo
lret
jg
clc
imul
insl
inc
fstpl
inc
shr
and
inc
mov
gs
mov
xchg
dec
or
fwait
sub
and
rorl
sbb
xor
and
jle
mov
or
cmp
inc
test
insl
sub
je
cmp
pop
repz
pushf
daa
jg
dec
push
mov
xor
repnz
mov
and
out
add
sbb
mov
fsubl
in
sahf
out
stos
mov
and
mov
test
mov
divb
out
shl
inc
mov
and
dec
shrl
mov
hlt
sub
or
jns
int3
xor
jge
mov
jg
imul
sub
sub
dec
xor
dec
pop
lods
xor
inc
dec
mov
sbb
adc
fiadds
adc
jmp
add
or
lahf
pop
aad
push
pop
orl
cmp
dec
outsl
cli
or
js
loope
mov
stc
xor
cmc
sub
push
repz
cmp
subl
aas
fnstcw
inc
std
dec
add
or
inc
xor
rclb
jb
repz
stc
stos
cld
popa
call
inc
adc
dec
dec
or
xchg
sti
mov
pusha
fsubl
stos
mov
int3
test
and
sbb
lahf
test
fcmovnb
cmp
cmp
push
sbb
sub
jg
adc
aaa
push
sbb
sahf
jae
mov
test
cmp
imull
insl
and
cmpb
ret
daa
int3
and
cli
sti
jl
fsincos
jge
push
jmp
jne
and
sub
inc
cld
xor
hlt
push
add
cmp
dec
imull
nop
or
inc
scas
jbe
mov
outsl
mov
mov
daa
xor
dec
outsl
es
sub
out
test
outsb
push
test
push
sti
nop
sub
dec
leave
or
and
pop
js
inc
adc
je
popl
mov
dec
xchg
xchg
pop
fcoml
push
xchg
mov
testb
cmp
call
fs
lods
or
sub
hlt
std
cmpsb
adc
mov
repz
icebp
inc
movb
movsb
sub
jl
jle
fists
xchg
dec
stos
insb
sbb
push
add
in
xor
sbb
push
mov
dec
insl
popf
inc
imul
sub
stos
sub
int3
pop
insb
cmp
lods
jecxz
aam
and
jno
inc
ret
lret
adc
test
inc
sti
adc
insb
stos
movlhps
dec
push
mov
add
in
out
out
dec
aam
jp
cmp
icebp
sbb
push
dec
jl
jo
add
cmp
xorb
sub
pop
stos
jae
lods
mov
jge
repz
stc
xor
int3
stc
test
lds
int
aaa
fwait
jne
loop
jno
aas
or
cs
test
and
in
call
int3
add
stc
rolb
pop
jl
es
bswap
xor
sbb
or
cmpsl
std
pop
outsl
stos
jle
mov
push
sbb
dec
inc
push
dec
jne
pop
dec
cmp
and
aas
out
lret
idiv
sub
stos
dec
loopne
inc
je
sahf
rcrb
mov
sbb
ds
cmc
xchg
jmp
sbb
or
out
test
orl
shrl
add
jae
imul
mov
mov
int3
mov
sbbb
into
aaa
or
dec
xchg
jg
scas
pop
pop
push
subb
ret
cmp
repz
jg
int3
mov
add
add
sbb
sub
cmp
lock
fdivr
add
dec
push
push
das
in
push
lret
adc
dec
incl
fcompl
stc
inc
jbe
in
sbb
xchg
sbb
push
sub
mov
jg
sbb
fisttpll
xchg
mov
mov
js
mov
cld
in
rorb
cld
in
xchg
addr16
test
jle
dec
mov
mov
in
into
out
scas
mov
fisubrl
add
sahf
inc
jmp
cmpsl
add
lcall
xor
and
fstpl
loopne
pop
nop
cmp
rorl
test
jg
mov
ret
outsb
or
cmpsb
mov
jb
add
dec
jae
mov
decl
cwtl
mov
mov
add
mov
add
add
cmp
pushf
mov
js
test
sbb
mov
push
scas
fnsave
add
mov
dec
and
pusha
add
sub
cmp
addb
push
fldenv
lret
repnz
les
sub
lods
mov
rcll
and
mov
jo
test
dec
jle
outsb
dec
jl
or
inc
adc
clc
pushl
int
adc
call
dec
add
pop
in
xchg
icebp
and
cmp
or
cmp
ret
dec
test
std
dec
or
dec
inc
and
cs
bound
add
xchg
mov
ret
mov
les
sbb
je
jle
iret
jecxz
adc
daa
jle
sub
add
cmpsl
prefetch
or
push
cmp
sub
rorl
dec
nop
ret
inc
in
fwait
or
ret
nop
aas
mov
imul
and
fsub
mov
aas
cmp
std
notb
jle
jnp
rorl
dec
pop
sub
lods
pop
jnp
aas
arpl
mov
jb
and
inc
lods
fs
mov
in
iret
repz
cmp
jge
hlt
sbb
xor
mov
jns
xchg
repnz
sub
ljmp
popa
sti
inc
mov
fwait
cwtl
insl
add
test
movsl
pop
repnz
add
inc
pop
mov
data16
push
dec
out
jo
xor
ja
shrb
sbb
and
mov
fistps
adc
dec
push
jmp
loope
out
int3
in
pop
cltd
ljmp
insb
outsl
orl
mov
and
dec
and
fisubrs
cwtl
dec
fimuls
mov
scas
xor
mov
adc
xchg
push
movsb
lock
testl
out
test
add
loope
xor
xchg
ja
pxor
mov
sub
shrl
test
adc
sahf
out
in
inc
je
cld
mov
int
jle
fmull
xchg
push
aas
aas
fstpt
xchg
sar
sbb
mov
push
aas
jg
cmp
inc
adc
push
cmpsl
pop
sbb
das
mov
inc
jle
scas
or
ljmp
popl
in
subb
xor
xchg
call
fs
sbb
arpl
testl
fdecstp
xor
mov
sti
sub
dec
sbb
and
and
inc
stos
popf
pop
mov
adcb
or
fistl
xchg
das
inc
icebp
or
fsqrt
inc
xor
aas
dec
lds
cmp
or
sbb
mov
shr
add
ret
and
push
inc
pop
jg
out
in
pushf
xor
pop
xor
or
sbb
mov
and
testb
arpl
mov
das
xor
adc
ss
out
add
xchg
andb
int3
xor
ret
dec
popf
sbb
inc
push
jl
jle
scas
in
out
cwtl
call
imul
pop
lret
mov
sub
push
pop
imul
push
sti
stc
mov
push
daa
pop
mov
dec
add
inc
jle
xchg
jg
mov
cmc
sub
xchg
fstpt
push
rcrb
cmp
xchg
pop
dec
dec
sub
dec
jbe
push
popa
sub
stos
imul
imul
sub
mov
jno
cmp
test
in
sub
ss
push
mov
adc
mov
sarb
xor
lret
shr
scas
pop
jno
push
sub
or
mov
sti
aad
jle
mov
xor
scas
fldt
mov
sub
cmp
and
inc
add
aas
fnstenv
gs
sub
dec
fldcw
add
mov
push
imul
cli
or
fldl
mov
push
repnz
icebp
jecxz
xor
push
mov
test
push
pop
mov
dec
mov
in
popa
sbb
xor
jae
pop
cmpsb
fstpl
sbb
push
fidivrl
in
fnstcw
cmp
mov
xchg
adc
xchg
nop
sub
insl
jo
adc
inc
mov
sub
aas
mov
movsl
adc
in
lods
in
pop
jno
stc
sahf
cmpsl
ss
outsl
dec
test
xchg
xor
jbe
pop
xchg
scas
mov
xor
out
push
test
icebp
lea
jbe
test
fsubr
out
daa
or
xchg
ljmp
out
sbb
fnstcw
xchg
jp
hlt
sahf
push
or
shlb
cld
cmp
out
jl
popa
icebp
out
inc
out
int3
or
push
sub
xorb
jg
add
insb
and
jae
pop
sub
data16
add
mov
les
fwait
sbb
dec
in
dec
pop
sub
mov
ret
xchg
in
sub
es
cmp
xor
adc
test
pop
out
clc
in
push
lea
xor
ss
mov
in
jl
jne
cld
pop
inc
repnz
ss
call
shrl
xor
in
lods
mov
in
imul
sbb
add
xchg
inc
jp
jb
not
repnz
out
imul
in
call
add
and
pop
mov
dec
sbb
cmp
sbb
data16
or
mov
ret
dec
sub
push
test
mov
xor
insb
and
in
and
and
and
std
pop
xor
roll
adc
fcomi
out
stos
push
ss
add
or
dec
fadd
fimull
push
push
mov
and
popa
jae
fcmovbe
cmpsl
sub
sub
aas
iret
mov
es
addb
jg
cmp
cs
xor
fdiv
inc
or
loopne
aas
and
das
and
je
mov
insl
fstpl
out
lea
pop
testl
or
dec
cs
je
std
adc
repz
cmc
loopne
pop
push
sub
sub
lods
sub
addr16
mov
inc
pop
xor
fwait
daa
and
in
les
das
mov
push
lea
mov
cmc
stc
push
jnp
pusha
lahf
fisubrs
stos
lcall
pusha
dec
stc
pop
push
pushf
jnp
lahf
inc
jbe
popf
xlat
add
add
out
and
push
dec
mov
clc
mov
inc
int
in
inc
daa
cmc
out
mov
rcl
adc
pop
popf
imul
adc
cmp
ljmp
repz
stc
lock
out
clc
rep
stc
jge
adc
push
pop
shl
insb
add
insb
cli
cmc
nop
sbbl
pushf
xor
mov
int
xor
mov
addb
fnstcw
fadds
bound
movsb
push
leave
in
pop
jo
call
adc
add
fucompp
and
sub
aam
xor
hlt
and
repnz
rolb
scas
stos
leave
mov
sub
xchg
bound
lcall
sti
jnp
sub
jno
fsubrl
daa
sbb
jg
push
leave
testl
and
mov
and
fnstsw
jno
cmp
insl
and
sbb
stc
and
sub
ss
lea
into
jmp
decb
and
mov
mov
fiadds
jle
es
jo
cmc
sbb
jl
ja
fldcw
lock
shr
clc
pop
shrl
add
stos
mull
jae
or
das
mov
iret
xchg
or
mov
sahf
fsubr
or
ret
mov
sub
jae
jno
xor
xchg
push
sub
cmp
cmp
jmp
sub
mov
mov
or
inc
cmpsb
cmp
lcall
test
sbb
rorb
adc
mov
xchg
push
js
stc
and
aad
aaa
inc
jb
mov
std
lds
jp
jg
es
cltd
andl
jnp
or
js
gs
inc
lahf
sti
lock
jae
imull
int3
je
jae
push
in
xor
sbb
das
or
sub
dec
inc
out
mov
jp
enter
fdivrp
orb
dec
jp
lods
test
cmp
out
stos
xchg
lock
jg
and
fistl
jne
sarb
daa
sar
repz
lret
jmp
fistpl
mov
test
ret
or
pop
je
add
jl
cmp
stc
ret
dec
es
leave
xchg
cs
mov
pop
mov
sbb
movsl
pop
mov
adc
push
out
mov
nop
je
out
fsubp
dec
sub
roll
push
shlb
add
jbe
xchg
lock
aaa
test
mov
fs
les
push
aad
or
add
nop
nop
in
and
ds
and
mov
cs
insb
mov
fcomip
shlb
aaa
mov
je
ret
add
fsubl
push
and
adcb
lea
sbb
adc
scas
and
xchg
nop
push
jb
adc
or
pop
test
cmp
mov
jnp
push
stos
daa
push
push
and
cmc
lahf
xchg
sub
or
enter
push
daa
lods
ret
call
test
dec
dec
imull
popf
sub
push
jp
xchg
sub
xchg
leave
adc
lret
sub
test
les
adc
sar
cld
cmp
or
out
and
fistpl
push
or
pop
mov
jnp
sbb
inc
sbb
xchg
das
repz
addb
pop
in
mov
fwait
and
imul
sarl
jl
loop
dec
sub
out
sub
rcrb
push
movb
inc
jne
sub
lods
or
repnz
push
inc
or
inc
or
dec
in
lods
out
rep
out
aas
lock
rolb
stos
aaa
pop
push
aas
inc
pop
mov
jbe
or
jmp
pop
sub
mov
pop
mov
dec
mull
insl
and
iret
mov
scas
jne
mov
pop
in
cmpsb
pop
jnp
pop
cmp
cmp
outsl
and
or
loopne
cli
mov
dec
add
jno
adc
insb
or
dec
xchg
mov
sub
push
add
dec
pop
or
out
or
pop
sub
icebp
cmp
icebp
dec
or
or
movb
mov
push
stos
insl
jbe
mov
adc
bnd
or
repz
insl
sbb
sbb
push
inc
test
imul
daa
dec
data16
dec
js
fsubl
sub
jge
dec
inc
sbb
pop
out
mov
sbb
sub
jo
int
mov
jb
test
outsb
sbb
pop
push
jnp
sbb
pop
incl
pop
rcr
rcrl
sbb
clc
xor
xchg
jp
loop
push
sahf
cld
dec
pop
sbb
mov
std
and
test
or
shlb
leave
xor
xchg
dec
cld
scas
hlt
push
and
xchg
sbb
imul
or
mov
pop
movsl
dec
stos
xchg
pop
mov
in
dec
loopne
aad
test
pop
in
push
xor
mov
cs
mov
or
repz
cmpsb
jo,pt
dec
fisttpl
xchg
cmp
mov
daa
das
mov
jmp
mov
daa
jle
sub
xchg
incl
sbb
and
and
daa
in
shl
shll
test
fmul
ds
ret
or
lods
imul
inc
sub
imulb
jl
add
iret
lea
add
imul
push
sarl
stos
inc
lds
lock
jl
dec
lods
mov
cwtl
mov
mov
nop
jle
cli
mov
insl
sub
push
adc
dec
xor
scas
pop
in
outsl
cmp
lcall
rorl
pop
subb
movsb
shr
lea
add
call
and
dec
mov
add
jp
cmp
lret
xorl
cmp
and
add
add
ds
out
sbb
mov
adc
mulb
imul
out
push
into
pop
iret
outsb
dec
inc
adc
and
mov
dec
jge
pop
adc
dec
jno
leave
pop
adc
pop
sub
imul
mov
test
sar
jg
out
pop
shll
xor
icebp
fwait
enter
or
in
pushf
mov
jp
push
sbb
jnp
fisubrl
out
sbb
incl
xchg
inc
jle
push
jnp
rorl
ret
lods
mov
and
enter
lods
out
fmuls
clc
mov
xor
leave
add
test
mov
mov
rcrl
and
and
pop
out
out
sbb
inc
or
and
or
sub
mov
in
mov
or
lods
into
pop
push
inc
pop
test
cld
notl
xchg
inc
bound
and
dec
out
movsl
repnz
adc
xor
ss
sti
out
pop
cmp
mov
jecxz
cmovb
dec
in
sarl
jg
std
mov
in
jp
jo
jns
jle
loopne
outsl
jg
xchg
cltd
js
pop
adc
test
out
adc
jecxz
cmp
lods
jmp
int
mov
scas
jl
int3
mov
cmpsb
fisubs
push
cmp
popa
sub
mov
es
in
shrl
cld
xor
pop
stc
cld
inc
shl
inc
sbb
pushl
jns
or
add
dec
pop
out
lret
loop
out
push
imul
and
push
ret
inc
das
push
sbb
adc
dec
popa
add
insl
or
shll
pop
std
das
and
insb
xchg
cmp
push
push
adc
sub
lret
subb
add
into
jne
ds
and
jl
hlt
test
filds
pop
lods
repnz
ljmp
mov
into
and
dec
js
and
imul
inc
dec
cmpsl
ret
mov
xchg
dec
gs
xchg
inc
pop
pop
repz
test
std
mov
repz
lods
dec
std
fstpl
mov
fs
jno
or
dec
hlt
fsubs
mov
cli
mov
out
cmc
in
pop
bnd
mov
stos
outsl
lods
jmp
adc
sti
repnz
je
dec
inc
idivb
mov
in
repnz
inc
pop
and
rorl
cmpl
dec
sub
jno
jnp
into
call
fcomps
inc
out
mov
sbb
jle
mov
adc
cmp
inc
jno
and
lds
sub
xor
cmp
push
subb
sub
setno
cmp
lods
out
mov
into
pop
add
mov
push
in
in
insb
and
ljmp
push
mov
stc
push
repz
int3
sub
add
sub
cmp
lret
pop
push
jg
ret
cmp
sti
mov
loop
jno
mov
fsubl
sub
lods
sub
jo
int3
adc
sti
push
dec
outsl
movsl
xchg
or
bound
shl
xchg
test
and
jne
or
sti
mov
jae
dec
mov
sti
ljmp
sbb
jle
mov
fbld
sti
mov
hlt
xchg
mov
jge
push
mov
adc
sub
adc
cmp
pop
pop
ds
or
dec
rorb
pushf
jae
shl
dec
or
icebp
imul
fmull
sub
adc
cmp
mov
cmp
out
fs
mov
idivl
sbb
xor
dec
jns
mov
xor
or
mov
mov
bound
das
sbb
fwait
gs
sub
xchg
test
or
jnp
outsb
fildll
icebp
and
xor
repz
icebp
addr16
xorl
cmc
pop
out
adc
aam
adc
jns
sahf
out
js
or
divb
sti
rorb
out
stc
fwait
mov
in
cmpb
sbb
mov
cli
in
push
cmp
aam
mov
adc
sub
into
jle
jmp
mov
push
int3
sbb
cmpsb
jmp
out
sub
and
js
mov
outsl
adc
aaa
mov
cmp
sub
and
sub
adcl
bound
mov
sub
or
pop
push
sti
in
mov
out
or
ss
mov
and
out
jle
insb
pop
dec
cld
cmp
aaa
sbb
int3
add
repnz
mov
mov
sub
cld
fs
stos
popf
jg
leave
pop
stc
fdivrl
mov
lods
jo
sub
jmp
xor
bound
incl
xor
dec
jne
push
push
lcall
cs
loope
movsl
xor
mov
lret
test
mov
sbb
iret
xchg
hlt
lods
rolb
xchg
out
arpl
pop
ret
popf
xchg
jmp
mov
pop
jmp
cmp
push
fcomip
out
adc
jmp
icebp
stc
dec
in
movsl
cmp
cmp
sti
add
test
dec
inc
sbb
jg
mov
adc
pop
in
cmp
mov
mov
mov
xlat
dec
pusha
std
mov
mov
dec
xor
xchg
popa
aad
movsl
and
cld
lods
sbb
shll
xor
inc
pushf
cwtl
xchg
sub
jbe
mov
dec
pop
jle
sub
or
addr16
xchg
cmpsl
xchg
aaa
push
movsb
test
fdiv
mov
dec
add
sbbl
add
das
or
les
cwtl
sub
test
std
sbb
aaa
imul
loopne
mov
arpl
shll
icebp
mov
cmc
or
mov
jle
push
cld
in
mov
xor
mov
push
mov
stc
sahf
gs
and
mov
jo
push
push
lods
jecxz
push
pop
dec
jne
outsb
adc
test
sbb
xchg
xchg
out
mov
repnz
push
mov
or
inc
andl
sbb
arpl
pop
or
add
cs
gs
ljmp
push
hlt
sub
or
pop
arpl
pop
push
insl
xor
xor
mov
lock
or
addb
xchg
insl
xor
das
jl
std
scas
push
lock
sub
mov
pop
fwait
cmc
sub
sub
loop
outsl
outsl
or
insl
std
mov
das
in
and
filds
xor
mull
call
repz
and
out
or
imul
shll
cwtl
daa
stos
sub
lods
lcall
mov
hlt
mov
lea
adc
mov
int3
or
stc
insb
mov
add
mov
sub
fdivrs
out
in
fsubrs
movsl
lock
pop
mov
add
mov
jae
and
shrl
jb
shll
sbb
fsubr
xor
adcb
dec
lods
inc
sbb
in
repnz
nop
loopne
xchg
gs
mov
testl
ja
mov
outsl
dec
mov
mov
sub
dec
imul
rorl
ret
andl
cmp
in
repz
repz
sahf
jp
push
aaa
fstpt
aas
dec
ss
jg
sbb
in
push
rep
lods
and
bound
pusha
neg
xor
clc
jecxz
sbb
and
idiv
frstor
test
adc
out
bound
mov
xor
cmpsb
xchg
arpl
push
jg
test
and
xor
lods
adc
jb
out
add
sub
cmp
adc
mov
and
mov
lds
sbb
sub
shlb
daa
shl
push
mov
fstpt
aas
dec
or
aad
int3
and
adc
scas
das
int3
mov
gs
cld
mov
das
fs
pusha
out
xchg
cmp
sbb
adc
inc
fdivp
lea
or
mov
popa
sbb
bound
out
or
popf
mov
and
pop
and
pop
push
in
test
sub
or
stos
jp
subl
idivb
sub
dec
sub
adc
sbb
js
xor
rcll
in
enter
and
push
mov
lods
rcr
adc
lods
nop
pop
int3
mov
pop
lock
pop
adc
jge
cwtl
cmc
or
pop
mov
std
jl
mov
int3
es
mov
fnstsw
ds
xor
and
sar
insb
mov
lock
fwait
pop
pop
jge
sbb
jo
mov
es
jns
or
pop
jecxz
lahf
or
and
mov
movsl
inc
mov
dec
movsl
insl
inc
push
daa
push
cld
test
jle
sbb
sti
clc
adc
stc
jbe
push
addl
push
dec
daa
push
mov
sti
lods
shlb
or
push
sbb
in
sbb
sbb
dec
sub
jl
push
mov
into
and
imul
or
sub
xchg
in
insl
lret
xor
cwtl
lret
rcr
cld
mov
insl
int3
xchg
jg
lods
fmull
scas
cmpsl
bnd
test
ud1
ja
bound
imul
mov
and
out
hlt
cmp
push
pop
xor
cld
push
jle
pop
das
lret
stos
ds
es
xor
mov
lret
outsb
or
mov
in
lods
andb
xchg
rorl
and
fwait
mov
popa
mov
inc
mov
loopne
fnsave
adc
mov
cmp
mov
sbb
test
cmp
dec
fcos
int
cld
dec
dec
adc
jnp
and
inc
leave
pop
test
std
insb
add
ja
xor
out
add
add
push
dec
sub
xor
xchg
pop
test
adc
cli
in
rolb
stos
cs
or
cli
pushf
dec
push
nop
in
cmc
mov
cmpsl
jo
dec
out
sti
out
es
incl
incb
nop
std
mov
cmpsl
mov
sti
out
aas
or
sbb
mov
repnz
cmc
and
xchg
das
lock
fbld
mov
inc
lock
dec
jbe
nop
pop
push
inc
xchg
out
push
lods
mov
push
aaa
or
icebp
aas
push
lock
pop
loope
jnp
icebp
or
lock
push
fwait
mov
test
mov
add
js
mov
leave
cli
push
icebp
gs
or
xor
and
cmp
xor
sub
pop
rorb
nopl
lods
or
sub
push
sbb
xor
fwait
adc
lods
das
cmp
or
js
or
mov
push
cmp
int3
and
dec
idivl
jbe
out
pop
nop
jo
xor
out
mov
xchg
xchg
jne
std
inc
dec
push
jg
jle
gs
imul
outsl
cld
inc
mov
lods
dec
pop
push
test
ja
mov
das
in
je
sbbl
aaa
inc
scas
jg
aam
cmp
out
or
or
push
sub
or
dec
mov
or
or
rclb
aaa
repnz
dec
pop
push
pop
cmpsl
stc
or
jg
mov
aas
jg
pop
jl
push
lock
out
std
push
mov
push
fimuls
stos
dec
inc
in
in
outsl
mov
adc
shl
test
add
orl
jb
xchg
repz
jmp
sub
and
sub
outsl
gs
leave
sti
shrl
mov
call
test
test
scas
pop
outsl
dec
jg
mov
das
xchg
outsl
xchg
hlt
adc
pop
dec
xchg
jae
cld
adc
dec
xchg
inc
pop
popl
leave
adc
push
pop
mov
and
or
jle
or
or
adc
push
mov
inc
je
shrl
mov
mov
xor
mov
iret
jge
jbe
rcr
jbe
mov
sbb
ret
xor
in
lcall
ljmp
gs
add
mov
les
in
in
and
jl
fcomps
icebp
mov
cmp
and
cld
mov
out
sub
mov
mov
shll
pusha
clc
mov
and
lahf
xor
outsl
hlt
cmp
dec
lock
jg
mov
pushf
out
cmp
stc
daa
out
dec
pop
adc
cmp
adc
mov
scas
orb
dec
repnz
sbb
push
xchg
jbe
adc
adc
ret
out
fnstcw
dec
enter
repz
stos
inc
rcll
lahf
sbb
arpl
jg
mov
mov
mov
in
or
out
and
push
or
cmp
pop
sahf
repz
lahf
scas
sub
jge
mov
pop
push
popa
or
mov
rclb
or
xchg
stos
or
jp
xor
adcb
push
into
jle
mov
sbb
adc
adc
cmp
negl
sbb
push
jae
repz
jle
adc
mov
stos
mov
repnz
cltd
mulb
xchg
out
insb
inc
push
pushf
jbe
mov
pusha
ss
cmp
mov
mov
mov
cld
jns
mov
or
aad
stos
clc
xchg
xor
je
mov
push
outsl
out
and
sbb
push
mov
adc
jne
mov
and
gs
pop
xor
mov
repz
mov
rcr
sub
aas
fwait
stc
lahf
or
sub
mov
sbb
in
sub
jns
sbb
xlat
jg
clc
pop
add
shll
adc
adc
arpl
outsl
lret
mov
or
mov
dec
and
inc
or
cmp
lea
mov
icebp
mov
mov
lock
stos
clc
shl
sti
push
sbb
call
out
mov
jnp
add
repnz
fwait
mov
jnp
ds
sbbb
mov
xchg
icebp
jg
imul
repz
cli
dec
out
movsb
sbb
adc
jae
mov
hlt
int3
stos
push
test
out
lcall
dec
dec
or
jbe
mov
jno
inc
movsb
mov
lock
movsl
orb
int3
fsub
aaa
loope
popa
jnp
das
mov
add
insl
out
or
lock
sbb
gs
and
add
outsl
pop
cmp
fimull
lock
repnz
lods
nop
lock
icebp
dec
fcomp
movsl
sub
sarl
cmp
or
insl
mov
lods
test
test
fsubl
lea
mov
mov
push
or
pop
shl
test
sbb
cs
hlt
dec
sub
dec
jg
decl
cmpsl
in
and
cmp
mov
lcall
mov
jmp
imul
jle
test
or
dec
cltd
sub
xchg
push
lock
sar
or
push
add
jg
out
dec
fisubs
mov
add
mov
test
push
pop
test
ds
jne
cmpsl
sub
dec
popf
out
fs
cld
sub
roll
testl
outsl
arpl
pop
cld
jno
cmp
test
out
xor
pop
mov
sbb
mov
xchg
sbb
cld
jns
pop
dec
lock
pop
mov
imul
push
out
stos
jb
jbe
imul
test
insl
jno
sub
jns
lock
mov
lock
cld
into
lock
sbbl
adc
mov
mov
xor
cmpsb
jnp
mov
xor
push
sub
mov
and
repz
inc
jno
xor
xor
stos
daa
into
leave
sbb
mov
dec
mov
mov
cmp
mov
mov
mov
xor
mov
inc
and
movb
xor
inc
ds
mov
mov
cmc
adc
test
inc
lock
popf
xor
clc
and
mov
dec
jne
push
ret
mov
mov
std
in
jp
rorl
mov
mov
mov
std
adc
scas
cwtl
or
mov
xchg
or
mov
pop
cld
enter
xor
jo
lea
jb
outsb
mov
lock
ljmp
sahf
cmp
lock
fwait
cmpsb
fildll
dec
sub
inc
push
mov
dec
pop
push
call
sub
jmp
and
pop
call
fisubrl
mov
sub
in
sub
sub
daa
cmp
adc
cmp
shrb
sbb
sbb
fmull
cmp
xchg
jae
mov
lock
dec
xchg
stos
test
sub
dec
ret
xchg
jg
stos
insb
ljmp
cmp
xchg
push
mov
movsb
and
gs
or
sub
and
sub
repz
xor
dec
pop
rorb
insb
lcall
or
lock
xchg
cli
sub
mov
pop
repnz
pop
adc
mov
cmp
dec
inc
dec
jbe
jae
pop
or
jmp
mov
inc
or
or
outsl
sub
sub
into
popa
out
sub
imul
in
and
adc
mov
bound
adc
jge
jecxz
lahf
jo
out
cs
scas
out
lcall
aaa
shlb
jle,pt
adc
dec
and
fs
dec
sahf
add
ja
roll
adc
lock
mov
pusha
and
jo
mov
dec
mov
scas
bound
imul
pop
lahf
addr16
mov
add
inc
sbb
jno
mov
and
sub
clc
mov
out
mov
je
cwtl
mov
rcll
pop
out
cli
jns
shll
mulb
mov
pop
push
dec
ret
popa
adc
xor
out
out
imul
mov
int3
std
sahf
dec
stos
in
mov
add
repnz
sub
lcall
mov
add
and
popf
loopne
jne
xchg
outsb
shlb
mov
cmpsl
push
push
sbb
fwait
or
cli
dec
icebp
sbb
leave
cmp
dec
insl
imul
stos
adc
inc
in
and
rorb
xor
hlt
pop
xchg
inc
jns
sub
scas
mov
bound
shrl
cmp
insb
js
std
les
es
push
sub
leave
repz
leave
adc
imul
mov
scas
push
out
and
mov
pop
xorb
pop
cmp
gs
call
xlat
add
fidivrs
mov
into
sub
dec
dec
cmpsb
sub
fs
cmpsl
dec
mov
insb
cmp
sti
cmpl
nop
fsubrs
scas
idivl
sbb
aas
into
mov
cli
sub
jnp
lods
out
sub
dec
cld
in
daa
xchg
pop
mov
shlb
out
and
pop
out
mov
orl
xchg
inc
sbb
pop
pop
and
out
stos
outsl
mov
orl
push
mov
sub
jo
imul
fmull
sahf
outsb
pop
das
ret
add
subl
mov
dec
and
jnp
icebp
jge
inc
sbb
sbb
adc
cli
xor
lcall
int
in
or
into
inc
sub
jnp
xor
icebp
btcl
dec
mov
inc
adc
daa
mov
in
or
add
out
repz
inc
ret
adc
leave
in
fbstp
cmc
mov
outsl
mov
inc
cwtl
add
inc
out
push
xor
lahf
imul
ret
aas
scas
jae
mov
mov
int
sub
lret
test
cmc
pusha
xchg
adc
add
add
loopne
xchg
aam
cmc
shlb
shll
cmp
insb
xor
sbb
scas
sti
dec
mov
mov
into
ret
xor
stc
xor
cs
push
lea
inc
jno
xor
rcrl
cltd
cmp
adc
mov
mov
subb
mov
cmpsb
xrelease
pop
dec
js
pop
orl
les
xor
lock
rorb
je
dec
jge
jecxz
pop
cs
xor
push
jecxz
cmp
mov
imul
stos
call
push
scas
sar
push
es
outsl
out
shlb
rorb
test
pop
xchg
mov
orl
fwait
sbb
cwtl
inc
mov
ss
in
xchg
jmp
adc
sbb
adc
in
sarl
mov
int3
ljmp
movsb
adc
jo
adc
rcll
sub
jo
popa
or
add
and
mov
add
mov
scas
scas
test
sti
inc
repz
adcb
enter
mov
sub
xchg
cmp
xor
lock
test
add
xor
pop
clc
adc
js
and
pushf
imul
cmp
sub
add
adc
push
decb
jle
mov
clc
call
bound
add
rcrb
xor
xor
data16
and
out
pop
test
test
cmp
mov
incl
lea
loopne
xchg
mov
jbe
and
aaa
icebp
repz
mov
enter
jne
daa
stos
xor
and
cmp
lods
test
pop
and
inc
add
int3
das
dec
rolb
cwtl
mov
cld
nop
fcmovb
jno
jle
jne
jmp
push
pop
cld
fstpt
mov
xchg
cli
and
cmp
mov
mov
mov
and
scas
jge
sbb
std
and
or
ljmp
blcs
movlps
push
cmp
sbb
add
addr16
sub
push
rclb
and
ja
out
das
jb
adc
xor
inc
out
pop
test
mov
loop
xchg
loop
adc
stos
sub
cmp
push
xchg
in
sub
ret
mov
xchg
xchg
xchg
leave
pop
popa
popa
sbb
sbb
adc
mov
scas
fnstcw
jg
fstpt
push
mov
xchg
stc
push
hlt
enter
sbbb
jge
repz
adc
in
fisubrs
inc
sbb
adc
pop
lock
xchg
and
movsl
movb
stc
push
adc
ja
into
clc
sahf
icebp
push
xor
xor
scas
sti
xor
dec
dec
insl
loop
xchg
jne
arpl
aad
dec
add
out
popf
jae
mov
or
sti
repz
cmp
sbb
aaa
xchg
jbe
xor
sti
cli
add
icebp
ret
xchg
xor
cmc
mov
jns
xor
and
ds
subl
cmp
inc
stos
addr16
xchg
jo
das
mov
lgs
scas
mov
lock
stos
pop
shll
or
jo
hlt
lock
rol
ret
je
and
out
sbb
xchg
out
xor
ja
scas
popa
hlt
jb
fidivrl
add
jge
cmp
subl
aaa
mov
dec
mov
dec
mov
ja
scas
idivb
in
out
cmp
imull
iret
sub
scas
jb
dec
out
icebp
imul
out
pop
jbe
adc
mov
test
mov
jns
xor
and
outsl
int3
and
dec
cmp
mov
test
test
mov
fwait
in
xchg
mov
mov
lahf
inc
cmp
mov
cmc
in
xchg
sub
adc
xchg
adc
in
adc
repz
int3
imul
add
addr16
nop
sub
mov
mov
pop
sub
push
jle
xor
insb
push
cmp
mov
sub
sbb
jb,pn
insl
hlt
cmp
adc
outsl
cs
test
xor
add
in
push
mov
sub
or
out
fsts
jge
clc
mov
aaa
pavgb
xchg
cli
add
inc
aas
and
lock
mov
sahf
or
sub
jne
outsl
adc
sub
fwait
mov
adc
or
nop
pushf
sub
repnz
scas
jnp
divl
pushf
aaa
pavgw
leave
jmp
mov
xor
mov
mov
xchg
outsl
cmc
outsl
mov
sub
aaa
test
ljmp
add
orl
push
fidivrl
cmc
mov
scas
jmp
lcall
flds
gs
aad
mov
jae
push
push
faddl
imul
inc
popa
xchg
ret
pop
in
jno
fs
lret
dec
hlt
mov
gs
stos
mov
out
and
ss
cs
xor
test
ret
test
adc
orb
cmp
cltd
cmp
mov
ja
xor
mov
testl
dec
mov
lea
scas
cltd
cli
adc
fsubrl
lcall
sub
insb
push
popa
dec
icebp
cmpsb
mov
out
andb
add
stos
jno
stos
jmp
pop
adc
add
add
cmpsl
or
or
push
xchg
cltd
test
dec
dec
sub
movsl
icebp
lods
aaa
pop
sbb
jno
add
push
cli
pop
inc
or
mov
outsb
ds
cmc
and
lea
sbbl
insb
aam
ret
outsl
sub
adc
inc
xor
dec
iret
jb
sbb
shlb
sub
adc
mov
les
lea
add
mov
imul
sbb
hlt
add
pop
add
sub
add
aas
dec
push
insb
cld
gs
leave
jns
pop
sbb
js
sbb
and
fstpl
sub
mov
pop
testl
cmp
lea
imul
or
aaa
lahf
movsl
jne
cmpsl
pop
insb
lock
dec
sub
ss
or
sub
icebp
loopne
push
or
sub
add
xchg
scas
cmp
add
xor
xchg
in
jb
inc
add
rorb
test
int3
addb
imul
fsubrl
sbb
rep
or
subb
js
pop
mov
cld
or
test
or
jo
cld
or
xor
fcompl
lods
ljmp
enter
icebp
rcrb
adc
out
xchg
or
ja
call
popa
cli
test
in
lret
out
out
mov
in
mov
fistpll
ss
lar
lods
xor
scas
hlt
mov
arpl
or
and
imul
test
insl
dec
cs
xor
gs
leave
or
adcl
mov
aad
adc
out
mov
scas
negb
dec
daa
rdpmc
lods
into
pop
mov
push
jo
xor
outsb
pop
out
scas
js
jg
cmp
pushf
dec
mov
jnp
xor
xchg
or
scas
cs
insb
scas
mov
hlt
fidivl
imul
push
aas
jge
dec
xor
lods
rcr
inc
outsl
mov
in
in
sub
or
dec
pop
shr
or
jnp
jae
out
push
inc
in
jnp
jmp
pop
mov
icebp
jno
cmp
or
add
lods
jmp
inc
sub
push
or
and
xor
push
cs
test
cmpsb
xchg
hlt
sbb
div
gs
pop
adc
and
inc
mov
cmpsb
cmp
imul
or
xor
mov
icebp
push
push
push
aas
sbb
ljmp
mov
adc
jo
mov
repnz
sarl
xchg
insb
lcall
cmp
ffreep
and
outsb
hlt
insl
test
xor
pop
cmp
call
pop
sub
jns
in
lret
mov
cmp
cmp
mov
xchg
aaa
inc
mov
jae
dec
cmp
sarb
enter
add
out
adc
lock
jl
sub
mov
scas
adc
mov
push
or
jb
cmp
jnp
inc
xchg
fadds
ret
mov
mov
es
push
cmp
lea
and
cmp
aas
repnz
leave
adc
cmpsl
jb
sti
outsl
cltd
pop
cld
sub
dec
sub
aaa
aas
repz
or
fcos
gs
jle
xchg
mov
bound
add
rcll
push
popa
cltd
mov
fidivrs
jmp
call
adc
jns
mov
cmp
into
pop
ret
out
stos
rorb
pop
aaa
das
sub
js
inc
mov
aas
mov
inc
outsl
push
repz
dec
inc
and
sbb
mov
adc
or
xchg
mov
js
aad
xsaveopt
sub
mov
and
decl
outsb
dec
xchg
fdiv
dec
xor
mov
ret
xchg
sub
inc
jns
stos
jge
out
and
push
leave
out
nop
push
jecxz
sub
stos
bound
inc
sub
and
dec
dec
push
scas
lock
lret
out
jmp
xor
pop
push
mov
test
dec
mov
neg
out
lds
or
movsl
sbb
out
pop
or
push
jb
je
dec
test
test
jb
loopne
hlt
lds
mov
loope
negb
push
lods
hlt
cvttps2pi
insl
jne
std
xor
scas
xor
pop
sti
xchg
js
rorl
imul
inc
dec
popa
add
add
outsl
inc
pop
push
mov
outsb
xchg
je
aaa
decb
fnstenv
faddl
mov
inc
out
pusha
repz
jne
sbb
fwait
pushf
sbb
add
dec
cmp
push
inc
rorl
push
data16
cmp
sbb
loopne
mov
mov
dec
add
daa
jp
shl
lret
xor
sbb
shll
mov
jae
cli
stc
cmp
aaa
rol
pusha
or
enter
pushf
cmp
loopne
stc
dec
cld
stc
sub
in
ret
rcll
in
or
xor
cmpsl
aam
test
and
add
scas
stos
and
int
add
lock
add
sbb
xor
jl
stc
pop
jecxz
jae
in
lret
xor
sti
rolb
cmp
sub
and
xor
lock
jl
ja
push
sub
and
loopne
xlat
add
pop
mov
lds
inc
jle
rcl
repz
or
sti
push
sbb
es
dec
cmp
icebp
inc
aas
fldenv
jle
jns
rcrb
mov
lret
pop
enter
pop
add
add
dec
push
lds
repz
mov
test
ret
das
lcall
lret
inc
or
je
ret
jae
roll
cmc
xchg
and
adc
dec
cld
push
sub
pop
push
out
and
outsl
packuswb
and
sub
push
outsl
xchg
das
hlt
mov
subl
mov
xor
and
cmpl
call
int3
and
mov
add
ds
sti
mov
lock
insb
out
cs
imul
sub
inc
mov
and
hlt
pop
add
xor
outsl
arpl
repz
icebp
push
mov
push
push
leave
cld
ret
loope
sbb
cld
and
out
or
int3
stos
or
xor
jle
dec
in
cwtl
cmp
int3
xchg
outsb
sbb
mov
scas
push
push
aam
ds
xchg
outsb
std
popf
or
dec
aaa
adc
sub
mov
dec
inc
dec
daa
xchg
dec
loope
inc
call
out
psllw
sti
jecxz
roll
imul
adc
push
lea
dec
out
imul
mov
mov
subb
stos
cmp
arpl
imul
xchg
jno
xchg
or
push
stc
test
cmc
cltd
sbb
dec
jge
xchg
in
int3
or
add
mov
stos
add
fdiv
add
sub
ds
rorb
cs
dec
in
xor
jge
push
jg
cmp
in
test
xchg
adc
into
popa
divb
lock
sub
jp
mov
inc
ret
ljmp
or
repnz
test
xor
jle
add
cmp
js
je
cmp
in
in
lods
jl
lahf
or
cmc
loopne
inc
push
lret
rorl
sti
out
or
lock
outsl
call
inc
sbb
lock
insl
or
sbb
jo
into
cmpsb
push
std
or
mov
inc
ja
and
scas
push
adc
cmp
lahf
mov
repnz
pop
sub
out
int3
push
mov
dec
imul
mov
ret
test
aas
shll
jne
orl
xorl
push
fnstenv
push
shlb
int
xor
jo
pop
mov
inc
dec
mov
mov
sbb
sbb
cmpsb
ja
fsubrs
or
sbb
imul
push
xchg
mov
cld
push
es
push
adc
loopne
fsubr
out
out
scas
sbb
sub
clc
mov
mov
lods
insl
iret
arpl
loopne
xchg
add
cmp
and
int3
and
fwait
adc
cmpsl
mov
dec
stc
xchg
je
lea
pop
jne
mov
mov
or
jmp
in
or
lods
or
adc
sub
mov
pop
pop
mov
cmovo
fdivrl
mov
insb
mov
mov
ljmp
push
sub
test
inc
inc
aad
pop
decb
jbe
test
dec
js
xchg
xor
test
or
pushl
or
inc
xor
push
adc
push
lret
mov
sub
sub
push
icebp
jo
mov
adc
pop
in
or
stc
or
add
adc
mov
add
mov
insb
icebp
sbb
shlb
or
mov
insb
iret
dec
sub
icebp
icebp
shrl
out
out
scas
cmp
push
int3
popf
sub
sbb
out
sub
lock
out
pop
imul
inc
pop
movsl
in
into
insb
or
jl
sbbl
jnp
mov
lret
xchg
jae
sub
imul
out
out
int
lea
std
jb
cli
dec
cmp
pushf
outsl
int
stos
loope
popa
pop
pop
std
and
lods
mov
jecxz
ja
sti
aad
sub
sbb
fwait
mov
adc
dec
jnp
dec
pop
nop
int3
sbb
cmp
sub
scas
sbb
mov
repz
gs
inc
test
push
cmp
dec
out
icebp
mov
dec
lahf
ret
and
iret
std
push
push
out
das
loopne
out
icebp
std
jno
repz
jns
mov
loop
scas
cmp
xchg
pusha
mov
cmp
or
mov
int
push
inc
mov
sub
into
pushf
mov
mov
aas
xor
icebp
pop
rol
xlat
lret
dec
out
out
mov
icebp
aas
mov
insl
mov
icebp
lea
inc
ucomiss
fwait
icebp
lods
mov
push
out
push
imul
out
addr16
out
mov
jg
mov
outsb
mov
dec
out
push
adc
ret
dec
xchg
or
pop
pop
out
adc
pop
sbb
lods
pushf
mov
and
or
outsl
dec
lock
imul
enter
xor
hlt
push
or
and
cltd
adc
int3
gs
xchg
sub
adc
dec
btr
outsb
dec
or
out
das
adc
push
sub
add
movsl
mov
xlat
add
sbb
push
dec
cmp
mov
jnp
popf
pmuludq
jno
adc
test
scas
add
cld
outsl
cli
hlt
clc
std
notb
dec
xor
ja
and
outsl
daa
jbe
jae
outsl
sub
jae
and
shrb
lock
addr16
sub
mov
leave
pmuludq
outsl
xor
outsb
add
aaa
fstpl
or
cmp
lock
aaa
sub
jae
jmp
sbb
daa
and
xchg
imul
xor
out
jae
cmc
xor
jae
pop
pop
and
adc
mov
adc
repz
ja
insb
out
mov
jne
pmaddwd
sarb
out
scas
jl
adc
rorb
jae
and
and
lods
jae
adc
lahf
hlt
icebp
inc
jae
lock
hlt
out
inc
jae
out
lahf
hlt
in
inc
jae
in
lahf
cli
push
repz
cs
sub
nop
push
mov
jne
or
cmpsl
repnz
sbb
push
out
ds
scas
adc
cmp
mov
imul
shl
mov
sub
or
sarl
testl
xor
lea
imul
and
out
insl
mov
mov
inc
mov
or
test
addr16
and
cmpsb
adc
icebp
cmp
dec
scas
sub
lret
and
sub
push
enter
outsb
cwtl
xchg
adc
lahf
jge
mov
mov
outsl
mov
mov
jl
loop
pop
loope
jecxz
out
xor
dec
sbb
mov
adc
sub
or
icebp
out
mov
and
test
out
push
jmp
insb
jl
stos
leave
mov
loop
sbb
je
jle
lea
pop
or
sti
fldcw
es
rorb
imul
repz
pop
loopne
fdivrl
gs
mov
sar
cltd
js
inc
arpl
sbb
imul
fdiv
xchg
das
aas
xorb
arpl
fwait
lock
jmp
aas
cmp
xchg
adc
sub
dec
gs
out
ss
dec
sub
into
enter
into
sbb
jno
arpl
mov
sub
cmp
add
test
cli
imul
fdivs
icebp
push
dec
mov
insb
dec
addr16
lock
repz
out
jnp
lock
ss
mov
repnz
pusha
sub
repnz
xor
pop
cmp
std
gs
in
adc
inc
sbb
fstpl
mov
insb
shll
mov
dec
out
pushf
lods
mov
mov
out
shrb
cmp
xor
pop
add
aas
int3
in
or
je
cmp
mov
stc
jnp
fsubl
mov
es
cmpsb
mov
subb
dec
lret
push
dec
sbb
or
lods
pop
pop
daa
jb
fwait
jg
daa
dec
push
and
mov
or
mov
shrb
jb
fwait
mov
in
pushf
outsl
dec
pushf
or
out
jge
mov
arpl
jnp
lahf
adc
insl
or
lods
add
sub
dec
jge
adcl
jl
subb
adc
xor
sbb
push
cld
jecxz
arpl
cmc
mov
push
push
cli
stos
mov
popa
push
dec
push
mov
push
inc
sbb
push
jl
js
mov
pop
es
aas
inc
mov
lahf
mov
xor
jp
sub
push
push
outsl
nop
push
mov
cmp
and
shrb
xor
pop
popf
adc
roll
rclb
movsl
lret
mov
or
dec
xor
lods
mov
and
jae
in
jno
mov
jae
jo
std
into
or
adc
jns
mov
and
mov
mov
scas
int
mov
cmp
or
inc
out
pop
xchg
std
mov
mov
jg
hlt
pop
orl
pop
scas
movsb
daa
sbb
insl
out
orb
sbb
sub
jbe
pushf
std
inc
cmp
sub
jns
xchg
lods
mov
dec
xorb
add
call
sarl
hlt
daa
jns
or
cmpsl
clc
inc
lock
push
das
mov
xor
insb
mov
aam
jno
out
in
sub
mov
je
dec
cmp
and
dec
bnd
mov
sbb
dec
outsl
pop
sbb
and
xor
jno
in
push
jnp
stos
cmp
cmc
or
dec
addr16
imulb
dec
clc
pop
add
clc
mov
mov
fwait
repz
pop
sbb
or
fsubl
or
push
cmp
push
mov
sub
mov
inc
adc
out
mov
xchg
sub
sbb
fldcw
add
push
test
cmp
dec
fwait
lock
scas
std
mov
push
xor
jg
adc
dec
lock
lock
jb
cmp
jg
sti
scas
inc
cmpsb
test
scas
lods
sub
out
cmp
and
cmp
mov
sub
cmp
mov
mov
insl
repnz
in
pop
imul
out
sub
sub
out
in
adc
push
ss
lods
dec
xor
insl
std
faddl
push
dec
and
inc
std
dec
test
icebp
out
and
push
xchg
push
pusha
or
xor
push
jbe
adc
adc
mov
fsubrl
inc
or
jb
lret
add
repz
push
shl
mov
jg
pop
xor
out
mov
jne
test
loope
sub
sbb
xchg
dec
loop
push
mov
inc
pop
out
pop
stc
pop
int3
cmp
pop
mov
in
movsl
cmp
inc
scas
push
xlat
sbb
sub
call
xor
mov
fisttpll
cmc
fimuls
imul
popa
pop
lret
add
imul
pop
arpl
lock
pop
in
mov
enter
sub
aam
push
inc
insl
pop
or
sub
repnz
ds
mov
cmp
push
in
jo
xor
in
xchg
adc
cld
mov
jae
imul
orb
sbb
aad
cs
cs
int3
push
pop
and
scas
adc
mov
xlat
push
mov
mov
adc
jmp
lods
jl
pop
push
scas
adc
dec
std
push
adc
dec
daa
scas
out
mov
and
cmp
or
stc
and
sarb
lods
mov
mov
pop
mov
jecxz
push
and
lea
dec
mov
jno
cs
movsb
add
mov
out
jae
into
ret
subb
stos
jb
sub
xor
addr16
stc
jb
or
mov
dec
sub
jns
mov
sbb
repnz
out
out
icebp
jb
jp
cmc
std
sahf
add
cld
inc
and
stos
push
movsl
adc
add
add
jnp
lea
je
bound
mov
lea
stc
popa
inc
pop
or
data16
std
mov
sub
xor
in
sbbb
mov
fisttpl
test
or
imul
sti
pushf
dec
je
dec
arpl
cmp
std
aas
loopne
stos
sub
xor
add
movd
jnp
sub
cmc
stc
fnstenv
outsl
mov
jmp
or
and
and
add
push
stos
pop
imul
or
addr16
idivb
jmp
repz
mov
adc
imul
subb
subl
xor
rorl
test
hlt
xor
mov
test
int
out
jb
aas
je
cmp
push
outsl
cmc
test
jmp
dec
out
dec
inc
stos
pop
jbe
sub
lods
outsb
test
dec
lods
add
stos
push
mov
jmp
sub
insb
dec
lahf
mov
cmp
mov
mov
pop
js
mov
jbe
dec
dec
and
mov
xor
and
lahf
in
cld
ljmp
icebp
inc
jl
fs
inc
adc
adc
test
aas
daa
sahf
ret
jmp
pop
cmpsb
lods
cmp
std
or
mov
jnp
pop
into
mov
hlt
push
cmpb
loopne
je
cmc
dec
jae
or
pop
push
fidivrl
dec
adc
mov
inc
mov
mov
jo
sarb
pop
lea
lahf
jb
mov
dec
push
std
gs
ja
cmpsb
sub
mov
imul
lods
jecxz
lods
out
jmp
mov
int3
sbb
add
jbe
jp
dec
test
pop
sub
sub
jle
mov
insb
lcall
out
xor
dec
mov
add
je
repnz
xor
jne
subl
out
fldl
addr16
fstpl
repz
mov
fnstcw
repz
sub
lods
out
pop
xor
scas
insl
test
addr16
mov
mov
scas
mov
or
repz
mov
lahf
mov
call
sbb
sub
jecxz
test
enter
inc
or
push
and
in
movsb
stos
sbb
testl
cwtl
ja
scas
push
cs
jno
hlt
loope
xchg
hlt
mov
pop
cld
add
sbb
adc
sbb
xchg
mov
loopne
mov
add
push
stos
sub
pop
stos
add
bound
pop
cmp
inc
fstpt
outsl
lods
outsb
adc
and
daa
sarl
stos
xchg
into
lock
out
pop
clc
push
sub
pmuludq
jnp
outsb
mov
xor
cmp
or
std
xorl
jmp
pop
and
push
in
mov
out
mov
jg
sbb
or
pop
xchg
in
dec
sub
adc
mov
insl
sub
xchg
mov
push
and
cli
jno
pop
or
imul
xor
int
lahf
and
dec
cmpsb
scas
lcall
sub
js
cmp
lret
in
pushf
test
cs
sub
in
es
into
sbb
maxps
jle
lcall
mov
stc
outsl
fmull
mov
push
xchg
add
shl
sub
inc
fwait
ret
dec
add
std
in
hlt
push
aam
jle
jp
mov
sub
icebp
push
cmp
orl
cld
jbe
movsb
jl
xor
jnp
out
lods
push
or
dec
clc
inc
adc
aas
mov
cmpsl
outsl
lcall
sahf
scas
sbb
lods
ljmp
and
fisttpl
aam
xor
incl
xor
cld
cmpsl
hlt
in
sbb
sbb
or
push
fstpl
cmp
mov
fucomp
imul
push
das
test
in
subl
ret
scas
dec
cmp
xorl
mov
in
das
jne
test
sub
shlb
jne
enter
push
mov
clc
subl
and
stc
sub
rol
ret
jbe
testb
add
sub
xlat
xlat
les
pusha
jecxz
pop
shrl
xchg
je
lds
adc
test
insb
add
push
ja
sub
fsubs
pop
rorl
cld
add
xor
dec
jae
lods
dec
xorb
rcrl
in
jae
xor
cmp
insb
out
xor
dec
jmp
and
rorb
or
pusha
hlt
mov
inc
popa
out
jp
cmp
mov
mov
rcrl
call
fistpll
and
sbb
adc
add
pop
dec
stos
sub
xchg
inc
loope
jne
add
insl
mov
push
dec
and
and
fimull
jne
jo
mov
enter
es
sub
cmp
push
pushl
add
icebp
add
js
outsl
dec
add
incb
or
mov
and
dec
dec
test
rorl
pop
and
dec
in
out
inc
std
xor
jge
mov
jl
cmp
xchg
test
addr16
adc
dec
pushf
or
test
ja
add
adc
jnp
pop
ja
sub
push
in
stc
jmp
sub
inc
add
sub
ja
cld
enter
inc
mov
inc
dec
loopne
sbb
iret
in
fcompl
out
stos
les
icebp
inc
cmpb
cmpb
push
mov
int3
push
movsl
mov
dec
fcmove
mov
sbb
push
out
dec
stos
lahf
lret
jnp
push
sbb
push
cltd
repnz
push
jecxz
cld
inc
pushf
popa
or
xchg
sbb
xchg
notb
adc
sbb
push
cmp
in
icebp
push
in
dec
xor
and
adc
sar
inc
lcall
call
xor
clc
sub
dec
and
cld
dec
xor
push
lods
mov
jmp
rorl
mov
adc
in
hlt
xor
call
stos
lea
jl
aam
enter
pop
mov
fildl
adc
imul
sarl
or
and
mov
insl
ret
fidivrl
fldenv
or
mov
insb
mov
add
rcl
jnp
or
mov
xor
test
in
push
pop
stos
roll
aas
and
jne
insb
repz
gs
pop
cmpb
cmpl
addr16
inc
jb
int3
ret
sbb
in
xchg
ja
in
push
jae
in
push
sbb
and
dec
lock
cmp
mov
jne
pop
insl
lock
pushf
pop
mov
jbe
push
lahf
add
pop
aaa
xchg
cmp
or
ret
xchg
roll
fwait
add
lock
andb
and
jns
sub
or
xor
scas
cli
dec
sub
push
and
jns
psubq
jecxz
push
sbb
jae
cld
push
adc
adc
and
jns
xor
mov
lea
pop
pusha
orl
jo
testl
cli
dec
adc
sbb
adc
or
out
add
mov
hlt
std
add
jae
cmp
mov
emms
adc
xchg
pop
cltd
mov
cmp
inc
mov
sbb
pop
pop
sub
xchg
ret
stos
call
dec
sub
jo
dec
sub
rcll
xor
out
mov
jbe
mov
adc
jb
loop
jge
out
fmul
ret
push
jno
xchg
dec
add
fidivs
test
ds
or
out
xor
jle
bnd
pushf
dec
into
pop
jge
in
pushf
xor
jnp
jge
mov
icebp
dec
mov
jge
jbe
int3
mov
cld
das
and
jo
push
popa
xlat
jae
or
or
or
test
add
or
mov
mov
sub
inc
sbbl
popf
test
call
cmp
ja
in
adc
lea
stc
jecxz
sti
adc
movsl
fcoml
push
mov
das
test
sub
scas
mov
movswl
jns
inc
int
stc
mov
iret
cmpsb
or
sub
pop
jbe
out
icebp
jns
outsb
dec
sbb
sub
fbld
mov
add
dec
loope
arpl
mov
sti
mov
xorl
subb
sub
stc
jb
sub
push
pop
inc
pushf
inc
ss
pusha
xchg
fisubl
add
push
clc
sti
push
cld
stc
stc
pop
lods
sti
or
lock
loope
dec
movsl
sti
scas
cmp
sub
cs
sub
das
mov
pop
cs
add
sub
or
hlt
push
pop
scas
mov
scas
jge
fwait
mov
or
add
lock
imulb
dec
sub
jnp
cmpsl
in
xor
in
out
sub
mov
sbb
subb
scas
loope
adc
adcl
jns
dec
sub
dec
pop
jo
mov
dec
pop
or
push
test
in
xor
and
adc
push
jl
jns
aad
mov
jle
enter
out
into
push
shlb
cli
mov
add
popa
test
daa
iret
scas
out
stc
popf
dec
in
icebp
cmpsb
cmpsb
cmpsb
and
outsb
das
andb
insb
mov
ret
xlat
push
addr16
add
dec
cmp
lahf
outsb
pusha
hlt
inc
inc
mov
dec
push
lret
adc
mov
mov
mov
rcll
stos
push
out
xor
ror
clc
push
sar
xor
out
or
scas
mov
add
andl
mov
mov
out
cmpb
jo
or
stos
divl
and
mov
in
out
clc
or
dec
jns
add
or
dec
mov
cmp
xchg
jae
xor
lcall
mov
and
insb
fwait
inc
sub
std
mov
cmpsb
lret
cmp
mov
and
jns
pop
jle
bound
cmp
mov
aad
and
sub
call
push
cmpsl
cmp
ljmp
inc
fnstsw
sbb
push
mov
xorb
hlt
push
dec
repz
and
popa
cmp
int3
cli
mov
inc
push
sub
jmp
jo
push
lods
pop
out
xor
ds
jne
jl
test
insb
dec
sub
or
repz
mov
movl
mov
inc
adc
in
dec
pop
dec
repz
fwait
pop
inc
movl
add
insb
repnz
jmp
inc
fmull
xchg
xor
xchg
push
inc
mov
insb
fidivl
lret
mov
jle
sub
repnz
sub
mov
adc
xchg
outsl
dec
movsl
cmp
sub
and
mov
stos
fstpt
xor
movsb
addr16
into
xor
repnz
fsubl
jbe
imul
jge
inc
movsb
mov
pop
sub
mov
icebp
dec
add
lock
or
stos
sub
or
leave
adcb
xchg
or
jl
sbb
aas
outsl
mov
out
or
loopne
cli
jns
dec
stos
sbb
addb
out
int3
ss
xchg
ljmp
repz
jecxz
shl
sbbb
mov
mov
sbb
leave
push
out
sub
cmp
sbb
mov
dec
or
inc
and
in
cld
test
push
int3
sub
adc
cmp
sub
aam
lds
jb
in
mov
xor
into
mov
repnz
imull
fucomip
insb
sub
push
inc
jg
push
std
fbstp
fimull
imul
inc
xor
jg
inc
pop
dec
xor
ss
shlb
xor
xlat
mov
sbb
xor
lods
icebp
in
or
gs
jne
jb
filds
cwtl
xor
inc
sub
out
jg
rclb
std
pushf
fcomps
insb
mov
xor
cmp
add
test
push
arpl
dec
xor
repz
loop
test
lods
cmpsl
sub
pusha
imul
imul
mov
out
mov
push
cwtl
xchg
ret
icebp
sub
test
xchg
sub
mov
icebp
jnp
repnz
push
mov
scas
lods
push
ret
cs
out
sub
mov
ror
gs
fists
sub
ret
inc
pop
repz
xor
sub
addr16
insb
xchg
or
or
hlt
cmc
sahf
adc
daa
sti
bnd
lods
insl
jmp
inc
mov
pop
shll
test
jmp
or
inc
fwait
add
dec
cmp
shrl
adc
cmpsl
mov
adc
push
stc
jp
push
rcrl
mov
int3
repz
out
outsb
adc
mov
stc
xor
or
test
xor
mov
lods
out
adc
xor
and
cmp
inc
repz
fsubr
scas
sbb
and
repnz
xor
popl
gs
push
mov
hlt
fbstp
sub
stos
out
push
cmp
out
mov
gs
dec
out
lock
insl
scas
or
jnp
ja
out
adc
in
loope
aas
pop
add
shrl
xor
xor
lea
mov
stc
mov
mov
jnp
sub
repz
inc
add
lock
mov
mov
mov
scas
enter
jae
dec
cmp
imul
pop
shrb
dec
mov
sub
fwait
testl
cmp
xchg
jl
mov
xor
dec
inc
ret
cltd
test
subb
mov
jl
outsl
mov
xor
loope
lret
les
sbb
xor
or
test
cmpsl
xchg
inc
loope
jnp
rorl
leave
mov
xchg
sbb
in
inc
test
xor
lea
mov
and
mov
stos
sbb
daa
adc
int3
in
pop
mov
add
pop
sahf
mov
mov
push
rcll
pusha
cmp
leave
movsb
pop
pop
jl
pop
mov
or
shrl
mov
scas
jo
lea
in
pop
lock
pop
mov
mov
pop
std
cltd
dec
lcall
jne
cs
cmpsl
xor
xor
outsb
lock
mov
iret
xor
std
gs
and
push
int3
sub
fcoml
out
add
dec
out
insb
insb
lods
dec
inc
out
inc
das
pop
fiaddl
lods
popa
jnp
leave
cmpunordps
jg
cli
mov
ss
hlt
xchg
imul
cmp
sbb
gs
ficoml
sbb
scas
jae
mov
je
inc
out
inc
and
gs
xchg
inc
cmpsl
mov
add
idiv
sysenter
add
sti
sub
arpl
insb
dec
sbb
xchg
cmc
xor
stos
add
das
pop
mov
lock
cmpsb
mov
dec
jno
add
push
mov
mov
jp
or
sbb
adc
clc
xor
divl
jo
insl
jae
outsb
icebp
cmp
pop
cmp
jp
pusha
add
mov
out
sbb
scas
out
cld
outsb
cmp
movsl
mov
jmp
xor
out
xchg
push
xor
xorb
pop
and
cmp
les
cmc
mov
push
dec
dec
jb
and
jmp
outsl
adc
and
dec
inc
push
maskmovq
fistps
popf
imul
inc
xor
sub
insl
and
sub
stos
dec
sub
mov
push
adc
xor
das
mov
rcl
xor
ret
cmp
and
xor
pop
stos
stos
pop
lret
xor
lock
idivl
pop
mov
xor
outsl
dec
jae
icebp
scas
orb
sub
inc
add
cmpsb
in
stos
cmp
mov
data16
jae
int3
fisubs
jae
icebp
dec
loop
ret
icebp
xor
ret
fcoml
rorb
adc
jno,pn
jnp
mov
ja
mov
cltd
inc
jmp
xchg
mov
cltd
stos
and
aad
aas
cmp
sbb
jnp
arpl
cmp
xor
jae
and
andb
outsl
and
bound
notl
push
test
mov
js
push
jnp
ret
push
bound
popa
cmp
sub
dec
and
push
push
adc
dec
push
cld
xchg
hlt
jno
cmpl
and
push
dec
cmc
sub
dec
fldt
mov
sbb
out
add
mov
adc
xlat
mov
ss
pop
jno
dec
pop
add
jl
dec
jp
inc
lcall
pop
adc
outsl
sub
addr16
loopne
mov
popf
push
inc
xor
push
or
add
dec
mov
jge
jmp
imulb
out
movsl
shll
imul
lods
xchg
out
test
iret
mov
loopne
jb
in
sahf
add
test
shrb
gs
lods
lea
movsb
sub
and
xor
fsubl
and
sub
jb
insb
out
or
ss
sbb
lock
mov
jo
mov
jmp
movsl
inc
bound
or
hlt
and
leave
dec
test
cmp
sbb
fnstsw
jg
lods
ja
insb
cli
or
cs
std
mov
cmp
dec
insb
dec
mov
pusha
outsl
jg
in
sub
sub
pop
call
lods
push
push
daa
push
mov
xchg
call
mov
lcall
cmc
es
add
adcb
mov
repz
sub
hlt
gs
mov
js
xor
cmpsb
sbb
mov
out
or
pop
popf
mov
add
lods
add
cld
sub
push
lea
gs
xchg
dec
lock
cs
out
adc
subb
sub
dec
out
adc
lret
dec
mov
sub
rep
dec
push
dec
imull
dec
leave
fxch
adc
cmp
mov
and
int3
jae
xor
bound
daa
mov
test
subl
call
ucomiss
sub
mov
lea
ret
dec
imul
popa
inc
aaa
jns
repnz
cmpsb
jg
xor
scas
outsb
mov
les
in
mov
jge
fmul
mov
or
out
jl
idivl
xchg
addr16
mov
repz
hlt
leave
xor
loop
rorl
cmp
inc
fwait
or
dec
imul
push
movsl
jl,pn
out
or
fsubrl
mov
es
jg
mov
je
cmp
das
pop
push
pop
std
aas
jae
sub
mov
or
ret
scas
scas
mov
imul
out
lahf
mov
push
lock
mov
jo
out
dec
lods
int3
jno
out
cmp
cli
lret
imull
push
sbb
shrb
dec
aas
stos
inc
pop
lds
pop
imul
gs
sbb
jl
clc
xor
or
pop
mov
cmpsb
jae
mov
adc
daa
dec
push
pop
pop
sbb
or
adc
jae
ljmp
dec
loop
sar
in
enter
pop
cmp
or
and
into
sahf
pop
cli
cmp
test
in
mov
xchg
add
jne
dec
or
dec
inc
push
insl
notb
lahf
daa
add
cwtl
loope
adcb
dec
imul
shrb
xchg
daa
mov
data16
ja
cmp
lock
or
in
sub
jae
and
inc
subl
jnp
cmc
fwait
inc
sbb
hlt
cld
call
movsl
jo
xchg
sub
sti
and
mov
out
aas
test
sub
push
adc
int3
lret
sti
fucomi
outsb
test
and
dec
mov
and
cltd
shrb
or
adc
pop
inc
lret
and
lods
cmpsl
insb
pop
dec
jl
mov
jmp
arpl
mov
and
icebp
sbb
sub
jno
daa
int
mov
lock
push
mov
jmp
dec
cmp
inc
sbb
xchg
mov
in
dec
sub
sbb
repnz
sahf
jmp
in
cmp
add
movsl
mov
sub
lods
mov
int
aas
jae
lds
out
sahf
mov
push
test
push
aaa
sub
outsb
fdiv
aaa
icebp
jo
add
cwtl
daa
dec
addr16
loope
negl
in
sbb
sti
int3
inc
repz
jl
scas
xchg
call
push
add
lods
stc
mov
push
cmp
inc
mov
sub
inc
jl
mov
clc
gs
ss
fidivl
das
mov
stc
sbb
or
cmpsl
idivl
cmc
mov
in
push
rcrb
xor
pop
inc
pop
pop
xor
into
adc
repz
pop
into
enter
call
subb
dec
cmpsb
dec
in
lods
dec
ds
das
loopne
jae
xlat
es
clc
cmp
lock
je
cmpsl
dec
in
in
sti
out
fs
xchg
push
iret
jno
adc
pushf
dec
xchg
jne
std
push
sbb
into
fimuls
test
push
punpckldq
sbb
lock
inc
sub
in
pmaxsw
sti
cmc
mov
push
and
mov
in
in
xchg
jnp
sub
and
call
push
jnp
sahf
setno
pop
xor
xor
push
jg
dec
stos
xchg
xchg
in
sti
mov
and
out
hlt
sarb
xor
dec
cmp
out
icebp
xor
in
test
imul
int3
cmp
add
push
add
gs
rcll
mul
js
inc
test
xor
jbe
inc
stos
dec
aas
out
push
call
hlt
push
in
out
sub
push
push
and
dec
jno
jge
ss
data16
fldl
imul
fcompl
bound
insb
or
jp
cld
rorl
fcmovnbe
pop
push
repz
lahf
loopne
movsb
cld
pop
ret
push
jl
xor
sub
nop
cmp
sarb
dec
jo
or
or
andb
lods
xchg
lea
xchg
dec
or
repz
sub
call
insb
cltd
sub
leave
xor
mov
sbb
pop
lods
into
popa
xlat
call
lea
stos
test
pop
ret
ret
prefetch
roll
movsl
hlt
jnp
sti
jb
xchg
mov
std
cmp
cvtpi2ps
popa
jg
cmc
popa
mov
mov
test
das
test
mov
or
in
out
lea
aas
sub
sub
or
imul
aaa
repz
or
dec
xor
or
out
push
jo
mov
push
xor
aaa
fdiv
sbb
imul
inc
xchg
outsb
mov
out
inc
ds
rcrl
push
or
dec
outsl
test
add
bound
push
mov
cmp
sbb
imul
out
xchg
mov
mov
mov
jl
out
orb
fsubp
inc
test
ret
cmc
fs
sti
ret
pushf
mov
cmp
leave
outsb
lret
jge
cltd
sub
mov
test
push
or
add
sbb
rorl
push
pop
mov
dec
fnstcw
sti
notl
imul
clc
mov
add
jno
mov
out
mov
mov
scas
sub
xor
pusha
lods
imul
jb
out
mull
jge
jo
jge
fdivl
mov
mov
mov
hlt
and
mov
enter
inc
rcrb
cltd
jle
out
sbb
int3
test
dec
xchg
mov
das
pop
cld
pop
adc
xor
lods
clc
jns
repnz
sbb
pop
in
mov
int3
mov
das
or
ja
cs
jl
out
jo
sub
pop
mov
lods
sar
push
ret
push
ret
push
dec
scas
push
xchg
adc
xchg
add
sti
and
jo
xlat
lods
aam
lcall
xorb
dec
mov
rolb
jo
imul
sbb
add
mov
or
cli
cltd
roll
push
sub
inc
outsb
ret
adc
push
lds
mov
fisubrs
cmpsl
dec
insb
roll
mov
jb
inc
ds
push
fisubrs
and
test
inc
cmp
sub
or
jnp
into
in
pop
inc
lock
repz
out
mov
mov
cmp
xor
loop
adc
out
test
pop
ja
xchg
push
mov
and
or
or
mov
sbb
clc
cld
fdivl
mov
sub
dec
push
scas
xchg
jnp
clc
add
adc
add
or
adc
icebp
dec
lock
pop
leave
fs
imul
fildll
stos
fisttpll
mov
mov
loop
sbb
movsb
popf
xor
mov
jge
push
gs
xor
popl
lret
shrl
pop
incl
jl
or
dec
test
in
inc
jg
fcomi
scas
and
dec
or
dec
je
sub
xor
stc
aas
repnz
mov
add
imul
mov
mov
out
inc
outsl
jnp
in
inc
jae
dec
sbb
test
add
lods
popf
sarl
out
jg
arpl
stos
mov
leave
int3
sbb
add
push
mov
xor
jnp
jecxz
loopne
mov
hlt
fmull
ret
mov
int3
shl
xor
dec
cmp
dec
insl
xor
jp
shl
dec
or
jbe
dec
xchg
mov
jb
jnp
or
in
lods
dec
lea
xor
or
loopne
dec
cmpsl
and
gs
aas
mov
ja
add
rcl
sbb
dec
std
jecxz
push
xchg
cwtl
adc
cmp
pop
or
cmp
imul
cmp
dec
push
lea
jnp
or
pop
pop
mov
je
sbb
xlat
dec
fdivl
xor
imul
cwtl
jo
lret
movsb
jl
or
out
insl
cli
xrelease
es
subb
gs
xchg
push
pushf
cltd
mov
mov
test
sub
adc
xor
cmp
push
xchg
shr
loope
push
pop
ljmp
daa
inc
outsl
mov
and
xor
xchg
mov
jmp
cmp
and
add
or
call
mov
mov
add
hlt
and
pop
xor
push
dec
lock
inc
stos
dec
fsubl
dec
xor
mov
jb
sub
and
cwtl
aas
jl
sbb
imul
inc
in
cmp
imul
int3
aam
cmp
stos
stc
icebp
add
sub
or
shlb
cmpsl
mov
sub
stos
jnp
or
outsl
dec
in
xor
jae
mov
pushf
xchg
imul
jge
mov
js
push
std
sbb
clc
aam
scas
sbb
mov
lock
jne
mov
push
ja
mov
cltd
fwait
xor
jne
stc
repz
scas
ljmp
sti
xor
aam
dec
roll
or
mov
push
xor
xor
out
cs
sub
or
cmp
jns
mov
push
insl
sti
lea
clc
icebp
or
repz
dec
push
outsb
or
std
sbb
cmp
test
faddl
sbb
xor
cmc
pop
pop
into
inc
mov
subl
jl
dec
in
sti
sbb
jg
shlb
shll
lods
or
fwait
jae
dec
and
or
jle
iret
in
lret
jg
rdtsc
scas
icebp
scas
adc
mov
loopne
dec
shrl
std
dec
pushf
lock
add
push
pop
in
dec
jl
jge
or
insl
std
into
mov
cld
jmp
jbe
xor
in
shl
mov
outsl
scas
cli
cmp
jmp
jecxz
and
mov
mov
lea
faddl
jge
in
cwtl
cmp
sub
ss
outsl
arpl
lods
test
loopne
dec
je
pusha
scas
hlt
out
cmc
jge
or
dec
inc
daa
xlat
fdivrs
mov
repnz
test
cld
jg
sti
add
fwait
jnp
cmp
or
icebp
xor
cmpsl
mov
dec
neg
pop
cmpsl
pop
sub
iret
sti
lahf
insb
jno
in
roll
js
out
ja
mov
mov
incl
popf
cmp
cld
test
cmp
add
into
sub
sarl
fsub
sarb
xchg
repz
xchg
scas
or
scas
inc
outsb
fstp
insl
sti
dec
sub
jmp
sbb
or
inc
and
pop
cmp
xor
sub
ret
adc
sar
mov
and
or
iret
cld
cmp
fstl
inc
mov
jne
daa
cli
enter
mov
pop
cmp
pandn
jl
insl
push
mov
dec
cmp
push
out
mov
xor
es
movsl
jge
sub
pushf
in
stc
mov
add
hlt
jle
mov
nop
sub
cmp
cmp
sub
aam
adc
cli
int3
or
imul
or
or
cld
add
int3
sbb
sti
scas
into
outsb
push
sbb
dec
pop
decb
cltd
int
jle
or
mov
mov
ret
push
mov
sub
sub
scas
aas
arpl
stos
sub
imul
dec
inc
insb
dec
pusha
adc
or
fs
jl
sub
mov
cs
sbb
stos
or
jb
ds
and
clc
add
out
rcr
std
dec
adc
cmp
imul
mov
sbb
xor
inc
enter
fs
or
dec
cmp
mov
jecxz
cs
int3
in
ljmp
mov
sub
and
and
ja
add
cli
outsl
aam
sbb
faddl
iret
shll
sbb
xchg
enter
inc
icebp
pop
lahf
add
jae
rol
sbb
into
add
mov
cmpsb
paddw
xor
int3
xchg
xchg
testl
sti
cmp
xchg
xor
inc
mov
lods
push
out
daa
test
pop
xchg
roll
cmp
inc
pop
or
test
jl
pusha
icebp
and
adcl
sub
lods
pop
lea
or
mov
jl
sbb
outsl
xor
dec
add
fucomp
mov
lret
or
std
lret
jno
int3
pop
or
inc
das
sbb
xchg
pop
imul
add
fdiv
roll
out
and
xlat
dec
inc
mov
xor
push
mov
sbb
sub
inc
or
adc
repz
out
jnp
test
arpl
and
xchg
pop
adc
jno
out
out
aaa
add
pop
in
sub
xchg
fldl
out
int
and
push
pop
and
add
or
jp
div
repnz
fidivrs
negl
sbb
or
mov
out
cli
cmpsl
test
pop
std
xor
or
cmp
and
sub
push
mov
inc
ja
je
mov
xor
cwtl
aad
mov
ret
sub
lcall
aam
jge
js
and
xchg
lock
mov
fstp
dec
icebp
lahf
mov
scas
fnstcw
or
pop
lret
push
push
jmp
or
dec
cs
xor
lahf
call
movl
cwtl
lcall
pop
ret
mov
and
mov
sbb
cmp
pop
mov
pop
movsb
lock
mov
dec
repnz
jnp
and
push
popa
dec
dec
dec
test
jnp
add
adc
mov
xchg
xchg
add
push
mov
stos
dec
pop
scas
in
and
inc
dec
push
cli
mov
mov
int3
arpl
add
or
and
add
lahf
js
dec
jle
push
jnp
sbb
adc
add
sub
mov
hlt
adc
cmc
sbb
jne
xor
test
je
jp
push
aaa
test
jbe
lret
pushaw
mov
mov
sub
push
fbstp
bound
add
out
les
dec
test
repz
out
mov
sub
and
dec
movsb
ds
insb
inc
icebp
push
pop
jb
jle
fs
pop
faddl
cld
xchg
add
shlb
adc
and
stc
pop
fdivrl
push
test
cld
lahf
bound
sbb
sbb
pop
lods
mov
inc
jb
adc
and
nop
insb
scas
sub
jmp
jnp
pop
dec
call
xchg
jb
xor
jns
lahf
lret
je
sti
cmp
hlt
scas
push
pushl
or
inc
clc
insl
cmp
pop
mov
mov
testl
sub
sti
stos
out
es
bound
xchg
stc
fistpll
in
xchg
mov
dec
scas
int3
mov
jnp
jle
mov
mov
std
push
stos
lret
and
mov
push
jp
or
and
jle
int
dec
xor
mov
jo
jmp
mov
dec
fs
sub
rcrl
pop
sbb
mov
lahf
lock
xchg
xchg
sbb
inc
addb
scas
stc
inc
icebp
pusha
jns
cs
mov
and
or
aas
jp
ljmp
dec
cmpl
pushf
leave
lods
icebp
dec
mov
cwtl
fnstenv
into
pop
rolb
inc
inc
adcl
mov
sbb
dec
sub
je
sub
hlt
sbb
cmp
push
hlt
cmp
jb
sub
loop
ss
ljmp
movsl
cmp
mov
lock
outsb
stos
mov
pop
sbb
dec
lock
pop
and
jno
daa
adc
cmp
and
mov
test
jge
mov
or
in
dec
call
jno
mov
and
loop
fisubrs
or
ljmp
les
pusha
inc
dec
out
sbb
jne
inc
outsb
mov
mov
mov
icebp
das
mov
adc
cmp
cltd
imul
in
mov
mov
imul
or
add
icebp
mov
negl
pop
stos
mov
sub
xchg
outsl
stos
shll
pop
enter
fwait
mov
pop
stos
sbb
and
repz
pop
xchg
repnz
mov
mov
push
fmull
clc
push
jg
dec
imul
push
ljmp
aas
jg
xor
push
push
lods
push
mov
loopne
out
ja
test
out
xor
lret
rorl
das
xchg
mov
imul
lahf
jg
cwtl
mov
cld
sub
hlt
sti
fsubr
lods
jmp
hlt
addb
dec
pop
jmp
stos
insl
dec
mov
xor
ja
mov
adcb
test
inc
ss
aad
test
jmp
or
outsb
mov
out
and
aam
and
sbb
push
test
fisubl
out
gs
mov
or
out
imul
cmp
shlb
xchg
lret
sub
cmp
dec
adc
clc
jae
aaa
xchg
into
fsubrl
pop
rolb
adc
push
leave
fistps
outsb
popa
cmpsb
inc
push
ja
ja
outsl
enter
std
gs
add
imul
int3
push
add
pop
in
gs
mov
cmp
add
insl
push
sbb
mov
push
mov
jnp
mov
lock
and
mov
cs
fwait
shrb
mov
lds
and
addb
loopne
stos
dec
insb
push
xchg
mov
mov
jle
mov
hlt
insb
out
xor
adc
faddl
or
das
test
push
add
dec
jle
imul
stos
fdivrs
fiaddl
sub
push
xorb
dec
insb
cmp
or
fs
lods
stc
fimuls
cmp
arpl
add
hlt
scas
loope
scas
mov
mov
lods
imul
fsubr
stos
mov
lds
cli
jge
inc
jae
jle
fs
iret
pop
adc
pop
push
and
insl
sbb
push
or
pop
nop
cmp
adc
hlt
out
pusha
cmp
mov
adc
push
cmp
in
sbb
sti
or
orl
sub
cmp
sbb
dec
or
clc
jbe
mov
mov
orl
jl
or
std
lret
cmp
push
and
lds
daa
inc
sub
sub
ret
and
dec
lock
cmp
or
aas
jg
mov
cmpsl
mov
sub
andl
mov
and
shlb
jo
xor
int3
lods
bound
out
ret
lret
popf
std
lret
pop
inc
repnz
popa
push
dec
in
fcoml
jbe
or
xchg
sub
lcall
lock
push
bound
outsl
lods
sbb
outsl
rep
lret
and
insb
and
sbb
dec
xor
mulb
push
popf
jnp
jae
in
nop
cld
inc
sub
mov
sbb
addl
jb
int3
and
nop
xor
sti
sub
into
and
jge
jne
mov
cmp
mov
out
jne
lock
push
ret
inc
and
xor
insl
xor
pop
mov
xor
cmpsb
inc
push
inc
in
bound
shrl
sbb
ja
cmc
and
or
rorl
ficompl
enter
adc
or
or
lods
mov
sbb
adc
xchg
jns
sbb
and
pop
aas
enter
cmp
mov
pop
sub
dec
clc
and
movsl
rorl
inc
aad
scas
xchg
xchg
lods
jnp
stos
push
jp
push
or
cmp
xchg
lahf
lods
cltd
out
in
fwait
out
dec
aaa
cmp
out
xor
in
sub
xor
jo
enter
out
inc
sbb
mov
xchg
int3
add
mov
das
xor
int3
ret
xchg
mov
cmp
out
jmp
xor
icebp
jns
mov
cmpsb
xchg
lock
mov
data16
rorl
adc
xchg
mov
sti
flds
idivb
mov
xchg
and
mov
shlb
xor
mov
jge
addr16
cmp
inc
mov
in
dec
xor
out
and
inc
mov
scas
xor
add
mov
data16
pop
mov
and
frstor
xor
rep
and
push
sub
and
add
pop
lcall
lods
imul
and
decl
popa
cmp
pushl
aaa
addr16
ja
mov
push
in
adc
xor
rcrb
pop
test
dec
lret
fucomp
cmp
clc
adc
icebp
mov
add
andb
xor
scas
fidivrl
fdivs
lea
movsb
or
pop
iret
sub
sub
movq
sub
or
subl
or
jmp
xor
and
jae
cli
pop
jmp
int3
mov
scas
popf
ret
jne
test
cmp
leave
je
lcall
gs
jbe
or
lods
mov
out
push
sub
add
insb
push
int3
or
push
cmp
in
scas
shrl
dec
jb
and
sub
xor
cmp
aam
pop
int
sub
mov
pop
or
fndisi(8087
test
out
out
mov
int3
test
das
cltd
cwtl
fsubs
fbld
iret
fimuls
movsl
cmp
out
repz
imul
dec
repz
jno
in
pop
dec
in
shrb
mov
inc
and
stos
scas
jecxz
outsl
out
scas
jne
lds
loopne
mov
xchg
mov
std
push
and
sub
mov
add
jg
pushl
repnz
cld
das
bound
jp
and
repz
rcrb
push
add
sti
ljmp
ljmp
dec
imul
jne
add
jecxz
cltd
ss
call
jmp
xor
cmp
or
add
pop
cli
outsb
jb
ljmp
sti
jmp
dec
cmp
jo
stos
cmp
arpl
test
adc
std
aad
lods
sub
inc
sti
movsb
mov
imul
shrl
je
mov
cmc
sbb
mov
adc
pop
repz
in
gs
nop
cltd
jne
je
test
mov
and
gs
mov
leave
das
cmc
out
mov
pop
sbb
mov
and
testl
aaa
gs
mov
pop
jl
bound
adc
pushf
and
push
cmpsb
movaps
xor
xchg
andb
repnz
jl
sahf
add
jb
jb
sbb
cmp
xor
mov
xor
fsubs
sub
hlt
fimuls
into
call
jg
mov
xorl
mov
out
inc
std
dec
in
sbbb
push
daa
push
jbe
sub
xor
enter
and
sub
imul
sub
mov
pop
or
adc
or
inc
dec
repnz
sub
icebp
and
dec
ret
jno
push
lock
js
out
add
ja
xor
push
dec
pop
adc
cmp
adc
lock
mov
out
adc
stos
ret
ret
mov
shll
cmp
jne
add
or
lock
sarb
cs
adc
cld
mov
out
sub
fidivl
adc
mov
push
push
insb
repz
sub
test
inc
roll
in
mov
mov
sub
lret
mov
cmp
into
rcr
xor
out
xor
mov
cmp
dec
mov
outsb
mov
or
sbb
mov
rclb
sbb
xchg
fucomip
sub
mov
insb
imul
cwtl
test
out
sti
adc
nop
pop
scas
sub
push
les
and
cmp
arpl
dec
dec
out
cmp
mov
sub
fdivr
outsl
das
stos
pinsrw
push
sbb
lret
cltd
xchg
hlt
sbb
int3
and
mov
sbb
sti
lods
sub
inc
adc
mov
inc
outsb
prefetcht1
repnz
shr
outsl
clc
das
or
ret
xlat
push
ss
inc
and
mov
dec
roll
lcall
test
pop
inc
out
outsl
scas
or
int3
add
jno
jle
in
dec
xchg
inc
les
jle
and
mov
cmp
fstps
mov
jo
and
nop
jno
iret
outsb
mov
lcall
stos
inc
fcoml
jp
dec
sarb
dec
stos
stc
out
imulb
mov
mov
jnp
and
inc
sarl
scas
ljmp
mov
loopne
std
pop
insl
loop
ss
mov
push
push
outsl
sub
mov
add
clc
outsl
pop
clc
cmp
push
mov
push
or
cmp
cwtl
lahf
adc
dec
sbb
mull
xchg
inc
mov
pop
xor
lock
and
dec
lods
sbb
ljmp
mov
mov
mov
jl
in
mov
aam
cmc
sub
and
jnp
cmp
add
mov
imul
in
mov
inc
mov
inc
sbb
pushl
ret
mov
inc
or
adc
inc
jge
or
xchg
cli
mov
xor
insb
dec
dec
xchg
test
adc
ret
xor
jne
fnsave
add
cmp
mov
dec
lock
inc
js
jecxz
mov
xchg
add
idiv
in
bound
cwtl
das
add
fsubrl
or
jbe
lods
add
or
mov
mov
mov
add
mov
test
icebp
mov
dec
and
push
hlt
or
sbb
xor
jae
push
dec
mov
repnz
lea
test
decl
cmp
add
ret
subb
or
jb
rolb
out
ret
jns
sbb
sarb
ljmp
dec
add
icebp
fisubrs
add
pop
lahf
outsl
adc
scas
mov
mov
loop
cltd
mov
jg
movsl
cmc
int3
loop
daa
cs
sub
lods
sbb
cmp
or
imul
sbb
jns
testl
lds
lods
lods
add
hlt
repnz
out
cs
outsl
adc
repz
mov
push
ss
inc
negb
ja
and
test
dec
inc
mov
mov
jb
mov
dec
pusha
cmp
jno
mov
xchg
or
xor
or
adc
inc
xchg
pop
add
add
adc
dec
jmp
cmc
rorb
mov
mov
es
or
xor
and
shrl
pop
sub
adc
outsl
test
sbb
cli
data16
mov
out
mov
and
sbb
jp
mov
lock
mov
ss
push
adc
sbb
jnp
insl
and
pop
test
iret
jl
sbb
xor
jnp
mov
rcl
cmp
add
out
test
adc
popf
out
mov
add
ss
adc
mov
xor
insl
sub
rcrb
lock
pushf
jno
ficoms
push
xchg
fidivs
aad
mov
jb
jo
mov
xor
adc
push
add
xor
jae
push
mov
pop
cwtl
adc
push
mov
mov
fsubl
and
std
adc
mov
movsl
ljmp
pop
divb
add
out
mov
adc
sbb
fdivs
jl
stc
ss
adc
mov
xor
mov
dec
sub
xor
jno
sahf
adc
fists
mov
jb
jo
mov
xor
femms
lea
incl
inc
roll
test
ja
decl
push
sbb
mov
insb
mov
stc
jo
cs
mov
xor
int
jl
mov
lock
xor
ret
and
out
in
mov
frstor
cld
bound
mov
mulb
jl
popa
jns
sar
mov
sbb
jecxz
jno
dec
clc
out
loop
ljmp
iret
jmp
popf
stos
dec
mov
or
mov
addr16
stos
mov
or
jnp
dec
mov
outsb
and
cli
mov
mov
hlt
xor
xor
aas
and
jo
jle
jns
dec
sub
dec
int3
pop
cmpsb
and
or
add
cmp
sub
std
lods
stos
ds
dec
cmc
add
lea
jno
icebp
notb
out
cld
lock
ja
icebp
sub
out
cmc
dec
in
insl
mov
leave
xorb
jno
scas
or
mov
bound
jno
stc
int3
jle
dec
mov
sbb
repz
mov
std
filds
das
jge
cltd
sub
cmc
bound
out
jmp
dec
in
cli
test
cmc
repnz
jae
gs
stc
int
jge
cmp
je
fsubrl
mov
xchg
and
dec
popa
arpl
hlt
and
std
out
dec
imul
sub
and
sub
sub
das
cmp
adc
sub
cmc
push
dec
clc
inc
pushf
or
scas
jb
adc
sub
aad
bound
or
icebp
sub
mov
and
and
or
shlb
out
iret
mov
and
add
in
stos
sbb
stos
push
sbb
inc
inc
insb
clc
jg
jae
icebp
add
dec
insb
push
or
and
testl
scas
mov
or
imul
into
lea
cmc
outsl
repz
cmp
ljmp
push
or
mov
sbb
and
repz
cmp
cmp
xor
mov
insb
dec
shlb
mov
push
mov
mov
pop
jo
jnp
cltd
or
sbb
out
sti
push
jl
call
out
cmp
add
es
mov
and
nop
adcb
dec
adc
xor
cld
in
dec
ss
or
in
mov
inc
dec
mov
pop
or
call
cltd
int
push
rorl
push
jmp
test
jbe
jb
test
sbb
ss
lods
push
subb
push
add
mov
pop
sahf
in
mov
fxch
fs
dec
stc
and
cld
repnz
out
lret
andl
xchg
inc
sbbb
insb
test
mov
loopne
push
lret
loopne
xlat
xor
or
in
mov
mov
inc
jnp
shll
xchg
or
pop
lret
xor
or
mov
sbb
mov
pop
push
aam
in
or
cmp
ljmp
mov
cmp
push
loope
imul
sub
sub
mov
stos
sub
jl
sbb
dec
add
cmp
ja
xchg
clc
jp
cltd
xor
mov
lea
or
pop
rcrl
add
dec
stc
psubb
sbb
push
sbb
mov
sub
cmp
mov
jmp
pop
mov
inc
pop
or
push
loop
mov
cli
outsl
and
xor
jl
ror
out
mov
mov
outsl
and
vcvtdq2pd
pop
jb
in
fyl2x
ja
dec
mov
mov
cmp
andl
std
leave
shll
int3
add
in
fwait
xchg
push
push
bound
rorl
insb
ss
shlb
sbb
aaa
add
sti
push
or
sbb
stos
sub
adc
mov
pop
or
std
inc
push
fimuls
ret
data16
cltd
jae
ss
out
mov
xlat
push
mov
in
outsl
stc
cli
cmp
loope
jl
rcrb
mov
lock
mov
cli
mov
sub
jae
fcoml
push
shrl
sbb
cmc
jnp
fdivrl
mull
stos
loopne
lcall
in
xorl
dec
ret
sbb
push
dec
or
mov
dec
fsubr
adc
lods
inc
gs
je
and
push
mov
into
out
ret
fadds
rcll
das
scas
or
or
std
jno
outsb
stc
dec
stos
pusha
cs
insl
stos
paddsw
sub
out
testl
lahf
and
dec
cmpsb
out
fisttpl
jo
mov
xchg
push
lds
clc
mov
adc
push
pop
loope
xchg
sub
insl
cs
or
repz
in
xchg
sub
pop
call
flds
in
pop
adc
in
test
mov
int3
mov
xchg
movl
ret
push
stos
and
lahf
mov
decl
enter
sbb
out
or
sbb
daa
loopne
xor
push
insl
jo
fcmovu
mov
out
fisttpl
mov
pop
insl
push
add
lret
xchg
lahf
adcb
icebp
or
or
test
jo
pop
es
jmp
icebp
mov
xchg
cs
inc
lcall
jb
push
mov
lods
dec
andl
lock
or
or
je
push
iret
mov
pop
stos
cmc
pandn
sti
jns
and
xor
pop
jb
hlt
sub
dec
sbb
cmp
leave
stc
cld
scas
js
mov
lock
ss
call
daa
push
jb
sub
shl
icebp
rolb
or
or
sub
mov
gs
leave
sub
inc
mov
out
sub
dec
jno
or
imul
cmp
repz
cmp
lret
jno
sub
arpl
mov
mov
cmp
mov
push
cmp
inc
cmp
aam
shl
fldenv
imul
push
xor
mov
jge
jae
inc
stos
jnp
dec
das
pop
fdivrl
fisttpl
mov
pusha
gs
or
inc
mov
or
push
add
fsubrp
fsubl
test
ret
enter
xor
icebp
daa
mov
sub
mov
push
int
lret
lret
dec
jle
bound
insb
or
xchg
sub
daa
hlt
cmpsb
and
repz
es
lock
push
imul
mov
aaa
or
lea
loopne
cmp
mov
into
jle
or
shlb
out
in
test
imul
lods
ss
xchg
xor
insl
adc
sub
inc
ret
and
dec
ficoml
fwait
paddq
out
fisttps
out
sub
add
xlat
or
and
mov
iret
ja
rolb
mov
push
cmp
add
scas
stos
test
sbb
and
cs
adc
int3
inc
sti
adc
clc
les
xchg
xchg
pushf
rol
je
sub
sbb
xchg
mov
and
out
popa
fwait
mov
mov
insl
aas
imul
dec
mov
shl
mov
lods
sarl
and
xchg
or
xor
xchg
inc
jl
push
jp
jae
sti
dec
mov
out
cmp
xchg
lods
pop
jb
inc
mov
dec
adc
pop
imul
and
sti
push
jo
and
mov
jnp
hlt
dec
xorl
sbb
pop
mov
aaa
or
add
dec
sbb
mov
lock
and
repz
dec
inc
xchg
lret
xor
sub
fists
dec
adc
adc
mov
push
std
scas
and
pop
dec
mov
int3
lret
aad
mov
fdivp
xchg
sbbl
out
adc
inc
push
add
addr16
imul
xor
sarb
insl
jb
push
stos
fldl
or
loopne
lcall
jae
cmp
cmp
xor
lret
aam
or
adc
scas
test
mul
cld
or
rcl
adc
dec
mov
lock
jge
push
outsl
and
add
call
ficomps
icebp
sarl
jae
gs
mov
jecxz
sti
int
jg
inc
in
dec
out
rcr
or
inc
jo
lahf
xor
lock
mov
out
stos
in
icebp
scas
dec
lcall
lock
in
and
sar
icebp
insl
sbbb
jns
ljmp
dec
sub
or
lret
test
push
add
out
jge
jns
or
outsb
std
dec
test
test
faddl
in
in
mov
add
or
out
mov
xor
div
pop
loopne
sub
fisttpl
cmp
in
push
push
fmull
das
add
xchg
icebp
aas
stos
pop
movsl
fmul
pop
lahf
adcl
stc
mov
out
mov
pop
mov
sub
pushf
movsl
scas
sub
mov
out
outsb
jmp
pusha
popw
xor
in
idivl
jmp
adc
or
repz
mov
nop
aam
mov
cmpb
lock
imul
pop
cmp
inc
inc
jmp
and
roll
fwait
cmp
add
or
mov
aaa
add
out
mov
push
sbb
gs
jge
sti
das
daa
imul
push
inc
iret
mov
cmc
outsl
pop
xor
cmp
and
lods
xlat
and
sub
cld
dec
pop
notl
or
test
pop
mov
fistpl
clc
ss
mov
hlt
in
loopne
xor
imul
insl
fisttpl
ret
fsts
sub
out
outsl
dec
fildll
mov
les
xchg
ret
or
and
clc
mov
or
imul
cmp
pop
jg
or
sti
scas
pop
subl
sub
subb
stos
insb
xchg
movsb
cmp
push
push
bound
mov
push
pop
or
sub
add
movsb
imul
adc
movsl
inc
repnz
mov
add
mov
es
cli
cmc
imul
jbe
fidivs
fildll
mov
mov
loope
in
lea
sbb
in
addr16
add
mov
stos
pop
xchg
lss
pop
and
sti
lahf
icebp
movsb
outsb
insb
lock
into
ja
cmp
and
xchg
insb
adc
add
jnp
jae
add
push
inc
loope
adc
repz
jo
pop
fstpt
insb
sub
rolb
mov
and
sbb
dec
xor
in
out
mov
mov
jae
fistpl
jae
cmp
mov
xchg
inc
out
dec
mov
adc
jge
cltd
popf
push
pop
cmp
inc
popf
loopne
xchg
repz
and
mov
mov
mov
sbb
and
sti
or
ret
rep
negl
and
jecxz
dec
mov
in
mov
sub
or
sbb
sub
addr16
outsl
pop
xchg
jo
test
mov
add
cmpsl
or
push
xchg
cmp
mov
jmp
xor
in
sbb
pop
adc
loop
mov
iret
mov
sbb
mov
xchg
dec
sbb
sbb
rcr
insb
push
or
sbb
and
pop
or
decl
sbb
dec
in
in
out
push
dec
fwait
jg
repz
xor
jg
cmpsl
mov
inc
mov
mov
gs
xor
rcll
pop
add
add
gs
loop
pop
out
call
cmp
mov
ret
jge
jae
addb
pop
shr
pop
aas
cmp
out
in
sbb
out
dec
out
outsl
in
jp
sbb
out
ja
out
inc
dec
fstp
mov
test
dec
add
add
sbbb
pop
stc
dec
dec
sub
out
xor
divl
cmp
aam
adc
cs
arpl
mov
sbb
dec
stc
mov
xor
fmull
mov
lock
cli
ret
mov
xor
shlw
int3
add
out
arpl
inc
pop
in
jns
test
sub
xchg
xchg
pusha
daa
sbb
cmp
sub
repnz
dec
repnz
xchg
inc
sub
subb
sub
cli
lret
pop
push
mov
int3
sti
mov
adcl
dec
sub
repz
xchg
or
popf
sti
push
dec
xor
jmp
cld
stos
sub
test
mov
xor
and
mov
sbb
insb
int
in
inc
loope
or
lods
push
in
shlb
sub
jbe
inc
out
push
stos
jbe
jg
ja
pop
cwtl
or
pop
shrl
mov
sarb
pop
ljmp
mov
imul
test
negb
or
mov
mov
lock
mov
ljmp
cmpsb
jmp
cltd
imul
in
dec
je
xchg
aaa
cli
hlt
xor
sbb
sbb
cltd
or
sbb
dec
jle
out
call
dec
dec
filds
stos
andl
pop
test
add
cvtps2pd
sbbb
js
out
inc
mov
xor
aas
or
pop
and
enter
jmp
add
sub
cld
xchg
push
bound
aam
xor
cltd
xchg
movsl
adc
fisubrs
insb
dec
cld
mull
xor
stos
rorl
cltd
ja
push
test
xchg
mov
cmc
xor
and
pop
xor
lods
xchg
out
xchg
add
pop
add
aas
stos
mov
icebp
add
out
jns
cs
int3
adc
mov
stos
std
mov
or
adc
in
stos
shrl
push
in
inc
mov
cwtl
inc
mov
out
lret
movsb
ljmp
sub
mov
int
xor
das
es
push
std
lock
and
test
push
sbb
cs
mov
sti
mov
mov
js
cmp
dec
cmp
jb
ret
xchg
add
xor
pop
rcrl
mov
mov
int3
arpl
cmp
adc
dec
outsb
shrl
ret
push
mov
cmp
leave
add
and
push
add
in
enter
in
mov
in
sbb
sbb
inc
sub
dec
dec
into
mov
xor
movsb
clc
nop
inc
mov
xchg
or
xor
stc
xor
aas
repnz
jo
and
leave
out
je
lock
decl
mov
sbb
stos
sub
stos
push
or
adc
xchg
and
jbe
int3
sbb
hlt
push
nop/reserved
or
test
mov
pmuludq
mov
push
icebp
jns
xchg
dec
or
adcb
arpl
ret
and
scas
jb
or
xchg
dec
adc
out
cmp
dec
lds
test
faddp
push
pop
adc
sub
arpl
mov
inc
mov
clc
addr16
stos
gs
pop
mov
cmp
cs
into
add
enter
std
stos
dec
divb
scas
cmp
or
dec
shr
es
mov
stos
scas
dec
stc
shl
inc
ds
mov
nop
hlt
rol
je
xor
and
push
mov
xchg
push
lahf
insb
mov
adc
dec
leave
dec
popa
data16
pop
outsl
mov
dec
or
sbb
es
aam
dec
out
xchg
xchg
add
rep
cld
stos
scas
testb
je
mov
pushf
fistl
push
sahf
loopne
out
mov
decl
xlat
out
mov
pop
cs
jle
xorb
jge
cmp
dec
sbb
jbe
mov
dec
cmp
pop
sub
xor
leave
daa
inc
pop
jl
in
mov
sub
adc
cld
mov
and
xor
cli
mov
xchg
jnp
rolb
xor
in
dec
idivb
sub
hlt
lea
add
inc
jo
call
mov
or
clc
rclb
scas
add
fists
pop
int3
adc
push
add
or
sbb
push
inc
adc
jno
sbb
mov
rcll
dec
jle
jae
pushf
ret
cmp
les
adc
daa
leave
cmp
je
jo
outsl
fdivr
jmp
mov
inc
popa
dec
mov
int3
push
jmp
mov
cmp
pop
in
bound
out
add
mov
xchg
dec
pop
sar
pop
mov
push
mov
pop
or
mov
sti
add
inc
mov
cmp
cs
fisttpll
and
dec
ror
enter
sub
or
out
sub
mov
js
test
repz
add
cld
mov
mov
jl
loopne
sub
or
pop
lret
daa
dec
lods
sub
push
xchg
in
movsl
jmp
test
in
xor
push
push
mov
jmp
dec
pop
mov
aas
adc
push
movsl
scas
fwait
dec
inc
int3
add
inc
adc
add
pop
aas
cli
hlt
ljmp
arpl
and
mov
cltd
pop
jg
cmp
test
cld
mov
mov
into
ret
repnz
inc
std
div
enter
pop
sub
sub
cmpsl
or
hlt
push
iret
jae
adc
fildll
mov
sub
div
out
mov
sub
stos
std
popa
mov
jne
out
pop
stos
in
mov
mov
ljmp
mov
ret
outsl
out
or
icebp
sbb
sbb
pop
jb
add
cmp
in
xor
fwait
sbb
pop
mov
sub
out
mov
std
lock
mov
mov
inc
out
sbb
idiv
ja
xchg
or
hlt
int
pop
js
jnp
jae
sub
push
mov
aad
insb
jecxz
pop
xchg
adc
mov
push
push
jg
lds
lcall
jb
push
ja
jne
jae
mov
repz
push
aas
sahf
das
or
into
outsb
cmp
movd
cmpsb
std
mov
dec
inc
movsb
scas
idiv
iret
lods
mov
mov
cmpsb
or
lret
inc
inc
aaa
ljmp
adc
jb
push
sti
cmp
xor
movsb
sti
jae
dec
addl
repz
lods
outsl
icebp
sub
dec
ja
sub
adc
jp
daa
rolb
add
lcall
repz
ret
xchg
dec
and
push
ss
pop
les
sti
jne
pusha
dec
sahf
xchg
xchg
or
dec
lods
mov
lods
xlat
outsl
sbb
add
and
mov
ja
adc
repnz
dec
insb
aas
push
sub
cmp
dec
int
data16
sbb
jl
imul
ret
ret
insb
pop
roll
pusha
lret
push
scas
push
fwait
jge
pop
push
cmp
shll
xor
dec
push
pop
in
in
scas
in
shll
add
lods
sub
mov
iret
loope
inc
mov
mov
xchg
in
daa
mov
dec
adc
xor
and
cli
mov
js
inc
mov
stos
push
outsb
or
pop
lret
jbe
pusha
mov
mov
xorb
pop
clc
aam
les
dec
dec
clc
ret
xchg
xchg
mov
cli
jno,pn
leave
rcrb
insb
rol
adc
stos
adc
inc
sbb
mov
daa
mov
scas
dec
cmp
pop
cld
ds
lods
jecxz
mov
push
dec
push
push
std
scas
outsb
imul
out
adc
add
in
push
xlat
imul
dec
out
test
dec
xchg
pop
mov
pushl
es
lock
icebp
stos
pop
inc
lods
dec
cmp
sbbl
jg
mov
in
std
aaa
repnz
and
push
aaa
push
or
mov
iret
pop
sub
inc
xchg
cltd
popf
mov
sub
lock
mov
scas
dec
aaa
or
cltd
pop
push
mov
movsb
push
stos
in
mov
jge
popa
outsb
dec
int3
jo
and
xchg
int
addb
arpl
pushf
inc
fs
add
out
jbe
orb
jmp
cwtl
das
sub
or
pop
adc
out
das
in
mov
dec
mov
sub
ljmp
gs
xor
stos
dec
insl
mov
jge
pusha
popa
push
mov
in
insb
test
repz
fst
push
test
movsb
and
out
outsl
fwait
mov
jns
mov
fimuls
jno
ret
in
mov
xor
mov
dec
push
fnstsw
outsl
push
jae
xchg
idivb
out
mov
je
adc
scas
enter
lock
adc
lock
roll
rorb
add
lahf
jl
js
fldlg2
or
gs
cs
gs
sub
dec
inc
stos
pushf
fsubrp
jge
arpl
mov
out
mov
gs
lahf
cmpsb
or
stos
in
movsb
outsl
leave
out
imul
mov
into
mov
inc
xor
loopne
lock
cmp
aad
ret
dec
arpl
fwait
jbe
push
sub
pop
testb
dec
lahf
and
mov
fcoms
or
pushl
jg
hlt
push
pop
adc
fnstsw
push
xchg
jb
dec
xor
mov
gs
insl
mov
cmp
sub
mov
je
mov
sub
sti
lock
sbb
or
jp
int3
mov
and
lock
out
or
xor
sbb
push
add
jae
xor
dec
clc
mov
addr16
fidivrl
rep
cmp
push
xor
jnp
cmpsl
add
or
lods
sub
inc
xor
lret
sbb
mov
cmpsb
cmp
gs
ret
jmp
test
out
mov
icebp
or
dec
notl
orb
daa
adc
enter
ds
sub
jae
nop
fnstcw
sarb
inc
in
pop
mov
iret
insl
fsub
sub
insl
call
and
sbb
enter
jo
stos
fwait
mov
push
clc
add
xor
test
push
repnz
xchg
lock
xchg
xor
or
adc
xor
clc
dec
daa
out
int
sbb
jo
fwait
cmpb
dec
or
pop
scas
sub
jne
adc
orb
std
sti
idivb
mov
or
icebp
mov
jmp
mov
or
std
mov
enter
loopne
imul
add
leave
xlat
sub
enter
push
sbb
mov
js
lea
into
test
aaa
leave
mov
mov
lock
dec
ja
insb
and
ret
adc
call
es
xchg
test
outsb
test
repz
push
lret
push
mov
pop
pop
lret
mov
fisttpl
imul
pop
out
mov
mov
lock
adc
mov
loopne
in
repz
scas
fldt
outsl
adc
div
sbb
xor
fwait
int3
dec
and
push
mov
mov
mov
insl
or
fisubrl
in
adc
lods
and
dec
jbe
repz
cmc
mov
xchg
dec
pop
lods
test
repz
hlt
dec
pop
mov
arpl
in
and
and
pop
cmp
or
ss
cmpsb
repnz
clc
outsl
xor
test
push
dec
sub
sub
mov
imul
repz
dec
jnp
out
mov
ret
jp
jmp
aaa
xor
mov
fimuls
add
sub
cmp
out
xchg
ror
inc
cmp
jb
imul
mov
inc
jo
movsb
repnz
mov
cmp
push
sbb
sub
dec
leave
cmp
sub
sub
pop
mov
sub
shrb
sub
outsb
inc
jl
pop
push
std
or
inc
sbb
loopne
mov
lds
dec
bound
jge
movb
cmp
rolb
or
inc
mov
lds
ficomps
nop
into
fiadds
clc
hlt
es
shrb
and
repz
enter
push
jae
outsb
dec
jb
in
test
jmp
cmpsb
lea
push
ljmp
and
cmp
pop
aas
mov
push
adc
repz
and
pop
jae
jle
jmp
int3
stc
push
call
imul
sub
hlt
jo
lahf
pop
lods
jecxz
sbb
pop
dec
adc
pop
cmp
cmp
hlt
dec
hlt
or
rorl
shll
add
and
sbb
in
dec
ja
mov
orl
pop
std
popf
sub
mov
lods
insl
aaa
and
jo,pn
mov
gs
test
or
std
imul
daa
mov
pop
icebp
jne
and
pushf
movsl
xchg
xchg
push
mov
mov
std
sbb
xchg
ljmp
cmp
pusha
jp
aad
jbe
sar
nop
mov
aam
mov
hlt
inc
dec
sub
cmp
mov
xor
sbbb
lahf
stc
aam
out
sub
sbb
sub
adc
sbb
sti
xchg
sbb
seta
shll
addr16
lods
popa
dec
movsb
or
or
inc
or
daa
loopne
popf
mov
dec
test
das
or
mov
dec
sub
mov
push
repz
mov
lret
push
sub
call
aas
xchg
mov
push
xor
fsubs
push
mov
out
stos
paddq
sub
cld
sbb
mov
lahf
and
outsb
stos
sbb
add
push
jp
xor
sbb
sar
out
or
and
hlt
and
or
ja
in
out
jns
dec
inc
lldt
std
repz
in
out
das
cmp
cmp
or
rolb
or
std
mov
cmp
xor
sti
inc
fsubr
and
loope
sbb
xor
gs
test
and
out
and
push
in
mov
pushl
in
xor
or
xchg
enter
and
insl
and
push
xor
sub
dec
in
push
xor
jb
sub
dec
cmp
mov
mov
and
and
gs
cltd
sub
lret
in
xor
or
iret
test
inc
and
jb
inc
in
inc
mov
fdiv
in
outsl
loop
jb
ljmp
push
dec
sub
mov
inc
mov
insb
outsl
nop
imul
mov
sbb
adc
add
sbb
imul
fmul
data16
xchg
insb
std
adc
out
lock
mov
imul
outsl
outsb
imul
outsl
cltd
and
xchg
fwait
lods
jne
xchg
inc
out
outsl
in
movsl
push
or
cmp
mov
insl
in
push
ja
mull
stc
jl
out
add
jnp
mov
or
int3
sub
mov
cmp
ja
daa
adc
icebp
lock
fnstsw
xor
inc
lcall
jb
xorb
cmp
orl
insb
cs
es
das
xor
js
out
push
pop
xchg
sub
repnz
jl
rcll
xor
or
out
sbb
fdivr
int3
stos
cmp
das
lea
sub
push
and
loope
sub
out
and
push
int
stos
jl
mov
mov
or
icebp
mov
fsubrl
cltd
mov
lods
xor
pop
out
stos
fidivrl
lret
inc
loope
dec
insb
sarl
in
dec
mov
faddp
mov
mov
xor
aas
jg
xor
test
adc
push
and
cmc
dec
lods
jge
fucomi
dec
lock
ljmp
add
adc
lods
into
dec
and
cmp
mov
leave
or
inc
jg
fstl
cmp
ja
scas
adc
mov
adcb
fisttpl
js
loopne
dec
dec
iret
cmp
test
aaa
cmp
aam
lock
idiv
decb
lret
and
mov
lcall
cltd
xchg
pusha
cmc
and
movsl
std
stc
mov
push
test
icebp
adc
jb
repz
dec
dec
in
dec
lahf
mov
rolb
and
lods
push
and
sbb
shll
jmp
in
mov
sbb
ljmp
push
roll
sub
shlb
repz
test
pop
ret
insb
and
stos
mov
mov
push
andb
push
xchg
pop
pusha
sbb
or
nop
daa
sti
push
fcmovu
cld
in
sbb
insl
out
repz
lods
mov
mov
test
lock
in
push
jbe
sub
mov
out
and
xlat
ret
push
test
test
andb
mov
imul
out
rorl
mov
pop
sbb
arpl
add
iret
dec
adc
pop
jecxz
lea
arpl
arpl
mov
adc
add
xchg
mov
into
clc
outsb
std
loope
aaa
sub
jecxz
sbb
cmp
arpl
sub
cmp
pop
mov
lcall
gs
dec
aad
movsl
push
dec
nop
shr
jle
cmp
sbbl
and
lods
or
and
stc
sub
leave
imul
sub
and
cs
pop
outsl
adc
rcrb
stos
lods
test
popa
inc
xor
add
inc
into
popa
lret
adc
mov
pop
add
pop
ss
fimuls
lea
pop
scas
mov
mov
mov
sahf
push
pop
daa
aas
inc
mov
cmpsl
mov
lcall
mov
sub
outsl
or
mov
pop
dec
outsb
roll
cwtl
les
push
test
jg
hlt
cmc
adc
xor
addr16
or
add
fsubrp
mov
cmpl
adc
push
add
jmp
cltd
sbb
adc
out
mov
sar
pop
xchg
or
insl
push
in
mulb
lock
mov
js
dec
mov
push
or
sbb
aaa
sarl
in
jge
xor
aas
cli
js
das
jl
pop
ret
out
add
inc
test
outsb
outsl
test
cmpsb
je
xor
insl
popa
in
fisubrs
cmpsl
outsl
addr16
out
and
xchg
add
pushf
cmp
call
lea
in
lods
push
and
outsl
cmp
jmp
lcall
lret
jp
push
fisubrs
les
in
loopne
mov
add
cs
daa
jmp
test
pop
out
imul
jl
fidivs
and
out
push
jl
xorl
incl
mov
xor
insb
out
insb
xlat
ds
or
inc
mov
loopne
mov
mov
dec
out
cwtl
jb
and
movsl
dec
ljmp
cltd
xchg
mov
daa
cmp
mov
and
popf
mov
stos
xchg
dec
les
insl
lret
lret
shl
outsl
ss
inc
jmp
mov
mov
xchg
es
jno
insl
daa
imul
lods
filds
test
popa
mov
stos
das
add
sub
lea
mov
stc
insl
jno
or
imul
push
fsubrl
pushf
iret
xor
adc
es
ss
call
mov
cli
stos
sub
or
cmp
fisttpl
sub
aad
and
xor
cmc
es
xlat
mov
and
sub
lea
dec
push
push
out
sbb
xchg
jmp
and
xor
xor
xchg
dec
addb
insb
xor
mov
test
mov
adc
or
aad
psrad
imul
sub
dec
cmpsl
inc
jl
insl
std
cmp
ret
cmp
pushf
insb
inc
std
mov
ss
cmc
dec
sub
cmp
negb
cmc
xor
xchg
push
pop
inc
aad
leave
popa
outsb
or
in
adc
xchg
addb
adc
cmp
js
xor
dec
push
pop
je
dec
dec
sbb
ljmp
jmp
std
notb
or
addb
xor
sbb
std
cwtl
dec
mov
xchg
movsl
pop
ret
push
gs
mov
stos
lret
mov
ror
mov
jl
adcb
mov
hlt
loope
mov
shrb
in
dec
repz
sbb
pop
sti
scas
mov
mov
cld
fnsave
dec
outsl
push
cmp
insl
ja
xchg
xor
sti
jecxz
sub
out
outsb
mov
push
ljmp
jno
push
rorl
mov
out
add
jne
call
adc
test
lock
and
inc
js
test
ret
sub
cmp
dec
inc
pop
push
dec
test
out
fucomip
cmpsl
pop
xor
jecxz
mov
dec
sbb
xor
push
mov
stos
outsb
lea
lds
mov
mov
cmp
or
repz
jns
enter
fwait
mov
int3
mov
mov
jl
popf
pop
fwait
mov
pop
fdivrs
adc
jnp
dec
push
sbb
sbb
xlat
mov
out
es
push
sub
in
dec
lods
jle
movsl
jo
movsb
outsl
jno
pop
es
daa
cmp
std
shrb
mov
or
jno
subl
mov
sbb
xor
mov
lods
jo
jmp
adc
add
out
dec
jg
movsl
pop
adc
jl
outsl
or
sbb
test
xchg
fneni(8087
mov
cmp
sub
push
adc
loope
inc
dec
lock
lods
adc
xchg
and
mov
cli
xchg
cmc
add
mov
lods
jae
or
movsb
sahf
dec
imul
je
adc
pop
dec
int3
repz
add
popf
jbe
insb
pushf
cmp
dec
jno
lock
add
dec
in
dec
hlt
jp
dec
mov
push
iret
imul
lea
xor
enter
and
sub
and
cmpsl
or
jb
dec
imul
into
pusha
outsb
push
inc
daa
cmc
dec
xor
lock
dec
sar
lods
das
jb
cmp
or
out
movsl
add
pop
push
sub
push
sub
dec
shl
mov
mov
mov
add
imul
sti
gs
and
cli
fimuls
xor
jno
sbb
cmp
das
xchg
mov
mov
jns
sbb
and
mov
insl
or
pop
in
out
mov
mov
dec
and
push
lock
jmp
dec
dec
or
add
xchg
add
ret
or
jecxz
push
jl
dec
test
and
lahf
push
inc
mov
test
out
jp
push
sbbl
stc
xchg
mov
or
out
push
inc
xor
movsl
stc
arpl
aaa
jmp
pop
mov
scas
inc
cli
adc
mov
fxch
ja
outsb
lcall
shll
xor
fisubs
or
jmp
andb
dec
jnp
subb
mov
neg
je
pop
push
sub
in
mov
aaa
je
push
xor
outsl
enter
push
das
xchg
mov
dec
push
sub
pop
mov
xchg
je
mov
out
dec
lret
sbb
loopne
ret
mov
cltd
movsb
sti
mull
dec
cld
cmp
shrl
and
jg
and
aaa
or
or
and
inc
lret
movsb
mov
insb
and
sub
fcoms
cmpsb
mov
outsl
out
adc
in
xor
mov
out
out
mull
in
hlt
stos
dec
outsb
adc
fldl
hlt
out
imul
jae
stos
add
pop
mov
cld
or
scas
lock
repz
sbb
dec
xor
in
sub
or
pop
ret
dec
std
or
xchg
icebp
cmp
in
cmp
rorl
mov
scas
test
jmp
adc
fwait
xor
pushf
fsubl
cltd
add
sbb
jns
fdivs
sub
imul
fdivrl
mov
lcall
sbb
mov
ret
fldt
or
xlat
pop
aad
sbb
sbb
hlt
inc
or
jecxz
jl
scas
push
aam
stos
nop
lea
sub
cmp
jbe
aaa
clc
lock
sbb
or
daa
stos
test
fsubrl
stos
imul
jl
loop
in
fmull
push
stos
and
mov
leave
into
testl
fwait
fwait
jl
jecxz
jp
sbb
lods
ds
insb
mov
mov
dec
rep
lock
jl
lods
push
das
or
or
or
mov
fwait
insb
roll
xlat
mov
jle
and
cli
ds
or
pop
jnp
add
pop
insb
lcall
or
add
pop
xor
xor
shrw
xchg
mov
das
fiadds
jl
je
daa
push
aam
lret
pushf
das
scas
mov
add
add
push
sbb
push
in
cltd
jp
adc
hlt
adc
adc
mov
xor
addb
shlb
add
sbb
ss
sub
push
fidivl
adc
clc
rcrl
int
adc
inc
icebp
sbb
mov
ja
repz
adc
jl
sti
sub
xchg
dec
cli
or
loope
ss
and
and
std
pop
jo
inc
sub
pop
lea
rdpmc
call
and
andb
in
push
cmpsb
adc
outsl
dec
inc
push
test
mov
lahf
out
mov
fsubr
dec
pop
jg
out
neg
fadds
ror
inc
loope
jmp
int3
imul
lea
or
stos
inc
cmp
adc
xchg
in
or
lock
test
pushf
xchg
out
les
sub
scas
cmp
outsl
inc
lret
imul
lock
jo
or
in
dec
hlt
xor
xchg
push
sbb
lock
adc
jo
sti
mov
fnstenv
sbb
std
xor
xor
cmc
push
lock
cs
sbb
test
cmc
xor
jo
adc
jnp
or
call
xorb
sbb
mov
pop
add
pop
lcall
nop
dec
aam
cmp
arpl
xor
push
adc
pop
or
mov
repz
in
inc
push
fdiv
test
bnd
sbbl
push
int
or
and
jae
repz
pop
repz
inc
sar
sti
lret
pop
mov
mov
enter
xor
jnp
or
das
idivl
andb
mov
and
fwait
mov
or
add
adc
aam
in
icebp
xorb
mov
test
push
outsl
push
xchg
int3
pushf
lods
pop
test
sub
ret
icebp
push
adc
jl
ret
jecxz
test
sub
mov
bound
jns
or
lods
adc
dec
jle
cmp
inc
decb
cmp
lods
sbb
call
lea
or
jmp
out
fldcw
hlt
aam
mov
push
mov
or
sbb
das
cmp
lods
insb
out
lcall
dec
push
pop
repnz
sub
pop
std
xchg
push
sahf
sub
jl
mov
jecxz
out
or
std
addl
push
sub
test
test
jne
cmp
jb
push
das
test
add
xor
shrl
mov
xor
mov
lock
rcll
outsb
sub
add
lea
pop
cld
out
lcall
jo
lock
dec
cmc
sbb
mov
outsl
mov
outsb
rcrl
out
subl
jge
sarl
out
pushf
imul
sub
sub
xor
insl
cld
or
mov
push
lret
jle
mov
popf
scas
sub
stos
roll
fldln2
popf
mov
or
jno
mov
lock
imul
sbb
push
mov
out
insb
scas
insb
inc
enter
stc
dec
scas
shrl
xor
pop
mov
adc
jno
lret
or
xor
mov
int3
enter
mov
cmp
scas
sbb
shl
pop
inc
inc
lahf
cmp
add
imul
adc
mov
stos
mov
mov
outsb
into
lods
mov
fwait
lods
pop
mov
out
outsb
hlt
adc
movsl
icebp
sub
jge
sub
dec
in
into
cwtl
adc
sub
lods
push
add
scas
sub
dec
ja
mov
mov
lods
sti
dec
in
sub
je
hlt
pop
cmc
mov
cmc
arpl
or
out
notb
push
outsl
not
xor
inc
jg
push
jo
insb
inc
xchg
mov
test
dec
cs
add
cs
imul
cs
std
xor
mov
jl
mov
in
mov
orb
sti
push
out
push
or
or
int
incb
inc
sbb
adc
aam
and
adc
xchg
add
aaa
xor
outsl
shrl
or
jmp
dec
sti
clc
in
push
inc
cli
lods
mov
xchg
inc
adc
inc
ret
mov
insl
pop
jo
ds
std
or
shrb
adc
mov
dec
lods
and
jg
clc
leave
divl
xor
sub
inc
cmp
adc
leave
lock
test
or
sub
cmp
cli
insb
jge
ja
cltd
mov
imul
mov
cli
enter
imul
xchg
stos
xchg
push
mov
or
mov
sbb
ljmp
jns
add
lock
xor
fiadds
adc
xchg
into
sbb
or
icebp
cmc
gs
mov
cmp
sbb
icebp
fdivrl
or
icebp
insb
int3
outsl
imul
sbbb
push
fsubp
inc
outsl
xlat
push
sub
and
xchg
insl
mov
pop
mov
push
pushl
mov
mov
into
scas
jmp
or
xor
insl
aas
or
sbb
icebp
adc
adc
repz
or
or
mov
stos
jb
cmp
xor
fs
or
pop
std
into
xchg
jp
mov
dec
addr16
scas
cmp
sahf
dec
cmp
shlb
out
dec
push
sub
sar
test
lret
sbb
repnz
loope
ljmp
repz
xchg
in
out
mov
out
fstpl
mov
aam
xchg
sub
in
scas
mov
es
into
aas
sub
mov
mov
sti
in
cmpsb
imul
pushf
insl
cs
or
dec
push
sub
mov
xchg
push
add
aas
push
pop
in
cli
mov
je
jnp
cli
roll
or
in
mov
or
mov
xchg
mov
cmp
lock
xchg
jo
lret
push
cmp
scas
cwtl
in
add
dec
ds
ret
stos
cmc
inc
scas
lea
lahf
cld
jnp
aad
ss
adc
mov
xor
addr16
jl
xchg
stos
js
and
xor
push
daa
cmp
cmp
xor
int3
out
mov
cmpsb
repnz
inc
dec
dec
ret
mov
lea
jmp
ss
pop
test
rcrb
repz
movsb
push
mov
std
lahf
je
in
jbe
pop
out
rcrl
in
xlat
push
pop
or
push
adc
sbb
and
add
enter
inc
nop
hlt
imul
inc
adc
jae
xor
psadbw
xchg
pop
into
daa
push
iret
test
push
and
and
push
and
pop
pop
lcall
push
dec
xor
stc
dec
sbb
mov
stc
les
ret
mov
aas
fldenv
leave
rcr
pop
mov
in
add
fdivrp
pusha
jl
subl
cmp
inc
sti
mov
mov
or
jae
clc
or
mov
push
or
out
jns
mov
dec
call
mov
cmp
jb
push
pop
orl
loope
pop
nopl
call
insb
pop
dec
jl
test
out
jmp
mov
in
insb
in
or
mov
cli
stos
scas
sbbb
or
mov
pop
pop
push
mov
mov
inc
sub
inc
ret
and
idivl
std
lcall
cmp
pop
add
cli
push
mov
or
add
icebp
int3
in
aam
xchg
push
xchg
out
std
test
mov
outsb
push
or
shrb
std
in
ja
xor
jle
and
mov
sub
push
add
xor
inc
inc
daa
jmp
in
pop
lock
stos
cmp
sub
jnp
inc
mov
push
and
jmp
shll
sbb
adc
jl
lods
test
add
outsl
in
outsb
imul
push
out
pop
jae
call
mov
push
push
sub
in
pop
mov
pop
lcall
cwtl
mov
ss
and
ja
das
in
xor
scas
sbb
out
lods
or
or
sub
add
dec
cwtl
out
lds
add
jne
ret
or
dec
cmc
insl
lea
out
das
sub
xor
aaa
or
push
inc
movsb
sbb
sub
sub
out
insl
in
mov
mov
ret
cs
mov
scas
int3
jp
push
fwait
cmp
out
int3
into
add
out
dec
aaa
jbe
xchg
fisubl
popa
mov
daa
shll
mov
mov
int3
xor
dec
je
pop
stc
mov
imul
jecxz
stc
nop
lds
sbb
mov
aas
cmpsl
sbb
lahf
insl
repz
mov
mov
jbe
inc
inc
dec
adc
and
push
mov
push
mov
repnz
sub
out
sub
sub
and
lahf
cltd
fndisi(8087
inc
aam
sub
faddl
cmpsb
dec
jl
lock
or
sub
mov
addl
xorb
flds
adc
outsb
nop
and
scas
or
movsb
cmp
test
scas
sub
mov
stos
lock
fisubrs
cmpl
xor
pop
stc
lcall
insl
jge
push
push
imul
mov
pop
jae
out
cmp
or
rclb
xor
loop
push
outsl
push
stos
fsubrs
cmp
mov
xchg
out
xchg
and
je
and
movsb
mov
jo
or
loop
mov
scas
jp
lods
push
xchg
test
popf
cld
jle
cmp
cmpsb
dec
inc
and
sub
dec
ret
push
in
inc
cmc
or
jecxz
scas
ret
fwait
push
mov
lods
add
dec
mov
or
gs
dec
and
sbbb
lods
movsl
std
insl
test
mov
push
fmulp
fsubrs
negl
out
jo
out
mov
jg
ljmp
sub
test
fwait
ret
mov
sub
inc
xor
jle
pop
or
mov
arpl
in
jae
mov
xor
sub
mov
inc
mov
xor
inc
out
in
mov
or
lcall
mov
adc
mov
mov
sti
adc
add
inc
repz
gs
mov
jge
xorb
out
fstpt
int3
out
jae
mov
leave
lock
enter
xchg
gs
push
mov
or
inc
jmp
call
xor
aaa
stc
lret
out
xor
jp
jp
sbb
pop
cmpb
scas
addr16
push
xchg
stos
sti
cs
add
repz
insl
fwait
hlt
repz
sub
gs
xor
add
dec
lret
mov
jecxz
div
clc
mov
aam
jge
cmp
mov
scas
xchg
sub
fs
shll
imul
gs
push
jge
add
mov
pushf
insb
testl
and
cmpsl
ret
das
or
cmp
cld
imul
int3
stos
dec
gs
mov
cmp
cs
js
outsb
repz
out
stos
mov
sub
icebp
stos
jp
in
imul
dec
orb
push
mov
jp
loop
or
add
add
push
fnstsw
and
outsl
jo
jae
sub
dec
mov
fs
fcomi
in
dec
lock
out
dec
fildl
in
push
lcall
cmp
and
or
incl
stos
lods
lret
sbb
pop
gs
ffreep
bnd
clc
outsl
pop
sbb
or
adc
outsl
frstor
int
cmp
cli
jbe
out
xchg
outsb
jae
dec
add
popf
icebp
test
jle
lea
gs
ja
xor
scas
pop
sbb
adc
add
fcompl
jns
pop
jmp
pop
out
scas
popa
dec
lock
outsl
dec
sti
jo
fucom
punpcklbw
out
xchg
scas
aaa
scas
fists
jle
stc
jnp
imul
stos
test
out
xchg
test
sar
int3
cwtl
mov
pushf
mov
sti
xor
pusha
mov
lods
pop
dec
xchg
mov
mov
lock
or
add
je
jo
sub
and
cmp
insl
jo
scas
jo
arpl
arpl
adc
dec
push
bound
mov
mov
lods
and
jle
adc
fisttpl
dec
and
shrb
insb
out
and
jp
inc
mov
lock
in
jg
outsl
lret
popa
and
test
push
negw
mov
xchg
mov
push
dec
sti
roll
inc
mov
lods
push
cltd
adc
mov
pop
mov
nop
stos
clc
mov
aaa
lock
adcb
or
int3
lock
jge
sub
pop
and
scas
add
sbbl
or
sbb
xchg
push
jae
inc
adc
or
sub
clc
sbb
decl
mov
loopne
sbb
or
push
mov
dec
cmp
movsl
aaa
push
cmc
jg
xlat
aas
xchg
xor
sbb
xchg
jp
stc
inc
push
or
daa
jns
loopne
mov
inc
gs
in
sub
inc
arpl
push
adc
inc
aaa
aaa
cmpsb
cmp
nop
dec
icebp
cs
imul
cmp
xor
pop
outsl
test
stos
cmp
stc
sbb
sbb
xor
decb
adc
hlt
rcl
or
cmp
cmpsl
sbb
dec
and
cmp
mov
sub
push
imul
jne
and
fsub
shll
push
add
mov
push
and
pop
jo
jbe
ljmp
iret
fnclex
movsl
hlt
cmpsb
pop
and
or
sub
addr16
mov
sbb
fwait
ror
loop
gs
popf
xchg
adc
cwtl
mov
jns
int
aad
mov
mov
mov
lods
popl
outsl
add
imul
mov
jae
and
xchg
insb
pop
sti
and
dec
es
jge
sub
repz
scas
sub
repz
cs
lods
mov
orb
sub
leave
imul
stc
insb
sti
movsl
or
ljmp
lret
lods
test
xor
popa
jb
push
xor
repz
jle
outsb
mov
xlat
dec
and
sbb
clc
add
jle
push
add
xor
sti
rcll
push
mov
out
jae
lea
insl
ss
imulb
mov
adc
cmp
sti
outsl
les
ror
xchg
shr
mov
out
fwait
xchg
sbb
adc
push
adc
mov
xor
cmp
or
popl
daa
mov
pop
mov
pop
adc
aas
mov
pop
vmptrld
adcb
pop
cmp
sub
jne
flds
gs
shrl
insb
and
push
out
push
dec
cmc
call
sbb
repnz
into
sti
and
dec
and
ss
pusha
out
adc
inc
das
pop
jp
mov
dec
mov
je
push
cld
jle
in
add
rcll
test
out
popf
xchg
and
sub
int3
test
lds
dec
gs
mov
insl
xor
lret
sub
outsl
sbb
dec
dec
cld
out
pop
fbstp
mov
lock
sbb
push
jbe
movsl
jno
xor
dec
xor
movsb
les
push
in
push
push
dec
gs
xor
jecxz
or
je
mov
out
mov
repnz
add
dec
stos
push
mov
xchg
faddl
inc
aas
xor
jo
cld
stc
pop
enter
push
add
mov
bound
sub
in
adc
fisubrl
or
or
std
loopne
out
mov
outsl
insb
scas
mov
and
jge
pop
add
cmpsl
fistpl
iret
dec
adc
int3
pop
daa
mov
test
dec
and
sub
mov
std
div
and
out
icebp
in
and
xor
lahf
inc
mov
insb
inc
loope
mov
pop
call
mov
in
das
jle
imul
loope
test
pop
jnp
or
lods
sub
mov
fwait
in
pushf
out
popf
ljmp
les
in
dec
xor
mov
int
imul
scas
in
ret
dec
inc
insb
adc
test
xorb
imul
movsb
sbb
jae
repz
in
aad
dec
pop
xor
lea
adc
xchg
outsb
out
lea
pop
cmc
sti
or
inc
push
mov
jecxz
andb
dec
jo
push
aam
dec
loop
cmpsb
sbb
mov
dec
cmp
incl
mov
xchg
outsl
test
adcl
or
in
add
js
sub
leave
lods
lds
stos
mov
sahf
pusha
mov
add
std
mov
adc
mov
outsb
and
lods
jne
and
mov
fwait
and
aad
or
sbb
xchg
dec
out
out
aaa
fstpl
das
mov
in
dec
xor
loope
gs
dec
sub
sbb
xchg
xor
mov
xchg
or
insl
dec
xchg
int
out
adc
add
pop
xchg
cmp
daa
cmpsl
scas
dec
inc
mov
imul
sub
xor
in
xor
ds
or
stc
sub
add
jg
adc
jle
dec
divb
out
jne
push
or
mov
add
fstps
add
pop
adc
ss
push
into
inc
xchg
scas
cmc
mov
iret
mov
mov
mov
sub
out
pop
push
mov
out
fwait
loopne
cmp
or
rorl
sub
or
lahf
int
ja
imul
push
and
aaa
std
add
push
add
mov
stos
ja
cmc
in
sub
sti
dec
test
das
stos
outsb
idiv
icebp
pop
repnz
mov
fmuls
icebp
shr
adc
hlt
out
sbb
test
andb
adc
inc
hlt
std
test
fisubs
pop
xchg
cld
or
out
jne
insb
fdiv
jbe
outsl
aam
jl
sbb
sub
add
fldt
out
jno
mov
jae
outsb
in
mov
and
roll
push
and
adc
push
xchg
out
pop
cltd
out
mov
xor
sub
mov
pusha
in
adc
les
jge
push
push
or
out
shlb
sub
test
cltd
hlt
or
lea
dec
sub
sub
pop
insl
sahf
insl
scas
adc
mov
addb
xor
and
jle
imul
push
hlt
sub
dec
mov
push
adcl
pop
stos
into
jo
sub
stos
gs
outsb
loop
add
sub
loopne
cmp
cmp
insl
out
dec
scas
sar
or
add
pop
sub
outsl
push
sbb
jp
scas
and
in
or
sub
imul
dec
pop
add
xchg
fmull
dec
inc
pop
sub
pop
or
out
sub
lret
jge
mov
mov
mov
loope
pusha
loopne
fisubrl
ss
mov
pop
out
pop
mov
insb
adc
add
lock
cltd
leave
add
rorl
jbe
mov
xor
jno
or
or
leave
or
or
jmp
mov
mov
std
and
stos
mov
pop
arpl
cmpsb
mov
js
andb
jns
scas
sahf
dec
xor
in
in
fbld
sti
andl
sbb
fwait
sbbb
sti
sub
sbb
in
mov
rol
popf
call
push
stos
in
push
leave
test
push
imul
adcl
scas
lcall
mov
dec
repnz
cli
fldt
ret
cmp
shll
mov
lea
adc
cmpsb
push
lahf
lahf
outsb
int3
dec
test
scas
lods
out
lcall
out
nop
sub
cmp
test
insl
push
pop
mov
in
pop
iret
leave
or
or
mov
sbb
and
in
fs
movsb
outsl
in
and
jae
cld
es
or
mov
pop
and
imul
in
cs
lahf
mov
jb
into
sbbb
cmpsl
xor
int3
pop
mov
xor
in
lods
sub
gs
movb
xchg
lret
fnsave
fs
test
mov
pop
roll
jl
rorl
xor
repz
fwait
push
scas
jae
leave
add
lds
mov
xor
sbb
and
pop
sub
sbb
gs
add
sbb
insb
mov
arpl
aas
lods
gs
inc
sbb
ds
incb
daa
xchg
push
jle
lods
inc
test
dec
test
sbb
stos
mov
ljmp
scas
fistpl
scas
and
test
dec
test
add
xor
add
lret
icebp
fwait
or
or
ja
lods
inc
add
mov
addr16
stos
dec
lods
sbb
fcmovnu
out
ret
sub
dec
test
cs
shl
and
mov
addr16
mov
jmp
in
mov
push
xor
xor
mov
add
incl
or
dec
sbb
lcall
out
sub
xchg
inc
mov
xor
jo
push
xchg
lea
ljmp
test
in
scas
aas
wbinvd
add
sub
or
cmp
scas
or
imul
insb
scas
std
out
repz
lods
stos
outsb
jne
negb
sub
fdivs
in
and
repz
out
xor
dec
lods
subl
pop
lods
testl
insl
loopne
popf
pop
jle
mov
push
mov
mov
andl
insl
pop
xchg
cltd
ja
lods
mov
popf
dec
in
pop
icebp
test
hlt
dec
lock
in
pop
stos
sbb
mov
int
jo
push
scas
test
xchg
lds
mov
std
jns
lea
testb
lcall
in
ljmp
pop
ret
lahf
mov
mov
lods
jo
mov
lods
dec
movsb
in
insb
mov
push
dec
adc
sub
in
out
sub
into
outsl
lods
sbb
rcl
cmp
in
mov
sub
outsl
sub
lds
xlat
pop
xor
sub
dec
xchg
aas
sbb
and
jbe
outsl
sub
mov
or
inc
sub
sbb
pop
cmc
icebp
out
inc
test
pop
in
in
imul
test
data16
inc
cmc
in
pop
push
and
imulb
movsl
cld
in
clc
cmp
lret
mov
jo
outsb
inc
mov
sahf
stos
neg
sub
and
push
cmp
jg
mov
jle
mov
popa
sbb
rcr
xorb
scas
into
jp
or
jno
insl
dec
cmp
ljmp
xchg
push
mov
xor
movsb
push
jl
test
aaa
fsub
mov
popf
out
fldcw
loope
sbb
mov
into
enter
gs
fldl
outsb
outsb
and
mov
and
insb
pushl
out
js
jecxz
stos
stos
jg
test
frstor
in
add
je
add
test
sti
dec
in
and
cmp
sub
les
mov
jge
gs
push
mov
ss
mov
cmp
add
ror
je
lods
int3
in
or
cli
jmp
adc
cmc
cmp
popf
cmp
test
daa
xchg
mov
pop
mov
inc
fmull
sub
xor
std
jmp
mov
mov
dec
lahf
jno
jno
mov
xor
mov
and
es
and
outsl
or
adc
dec
sbb
pop
mov
stos
addr16
mov
mov
adcl
inc
adc
add
adc
bound
jl
and
adc
jae
out
lret
insb
std
out
int3
xchg
insb
inc
cltd
insl
push
or
and
out
cmp
mov
sbb
ret
jg
inc
loopne
adc
rcr
cmp
repz
mov
or
mov
lea
jecxz
test
sbb
or
add
jne
adc
sub
add
jl
or
mov
in
int
sub
in
fwait
ja
cwtl
xor
push
les
xor
or
ljmp
bnd
out
add
xor
lar
aam
and
fwait
pushf
or
sti
pop
or
imul
inc
imul
out
push
cld
imul
dec
jle
arpl
cmp
clc
sub
data16
jae
lock
ret
fsubl
out
cmp
jl
lods
loope
es
icebp
in
mov
adc
into
mov
sbb
mov
shrb
jno
cld
out
xchg
mov
clc
aaa
dec
sub
popa
out
xchg
sti
or
adc
sub
lds
leave
and
sbb
mov
out
pop
ja
outsl
testb
mov
jge
add
cli
dec
insb
xlat
xor
mov
mov
sbb
ds
js
and
lahf
xlat
movsb
pop
mov
jne
dec
mov
ja
mov
shlb
decb
jns
mov
mov
sbb
mov
mov
pushf
mov
int
dec
aaa
iret
jle
scas
ret
push
enter
arpl
or
xchg
jle
orb
jg
jl
imul
cmp
ret
and
ljmp
xlat
cmpsl
dec
jle
fimuls
or
jnp
sub
mov
aas
or
pop
leave
pop
out
adcb
jmp
or
bswap
addr16
xor
xor
or
leave
andb
test
jnp
out
stos
cmp
jp
das
mov
cmp
dec
inc
inc
sub
push
cmpb
cltd
mov
mov
loopne
addr16
outsl
xchg
and
sahf
dec
push
repnz
sub
test
cmpsl
add
xchg
fsubs
and
cmc
lret
outsl
jno
lods
pop
mov
jp
add
insb
lcall
sub
dec
je
xor
ljmp
mov
fldcw
jecxz
je
fnstsw
imul
and
movaps
sub
insb
pushf
lock
in
aad
sbb
movsb
out
out
cli
ss
push
or
xchg
mov
jp
pushf
cmp
mov
cmp
cmpsl
xor
or
lret
cmpsl
fisubrs
mov
sbb
adc
add
dec
jbe
inc
xor
mov
sbb
sub
test
insl
cmovbe
pop
into
push
mov
and
sahf
pop
out
adc
dec
xchg
cld
or
mov
jns
repz
ja
mov
outsl
jl
mov
push
jae
jno
mov
sti
imul
movsl
sti
js
inc
scas
jno
pop
les
or
cld
xchg
arpl
cs
inc
mov
data16
in
in
nop
and
jnp
pop
stos
dec
mov
clc
mov
cmp
sub
out
sub
cmp
mov
das
insl
mov
nop
out
push
push
lahf
xlat
xchg
cmp
jge
mov
xor
js
leave
lds
pop
insl
in
sub
dec
dec
adc
sbb
push
addr16
cmp
push
idivb
repz
jecxz
cmp
daa
popa
fldcw
cmp
loop
adc
jbe
or
dec
fsts
mov
and
jp
imul
cmp
fucomi
into
sub
inc
aas
test
imulb
cmp
repnz
pop
xor
hlt
add
and
sarb
inc
out
cmp
or
adc
or
cmc
adc
insb
out
jo
test
push
xor
jo
hlt
sbb
movl
daa
inc
push
test
paddsb
movsb
aam
mov
xlat
mov
sti
pop
loop
int3
jecxz
push
inc
lock
aam
sub
gs
mov
xchg
xorb
mov
icebp
or
jg
jge
mov
or
fcoml
out
dec
jl
enter
inc
mov
cs
pop
adc
lcall
adc
add
imul
sub
cmp
adc
stos
mov
hlt
rorl
int3
cmpsb
and
jp
pop
repnz
push
jmp
icebp
sub
pop
mov
shl
lsl
js
mov
mov
ror
push
mov
xchg
mov
push
negl
shl
jns
insb
pop
ja
add
adc
or
or
lcall
pop
xor
pop
lock
or
xchg
mov
cmp
repz
add
in
dec
xchg
sub
xor
cwtl
cmp
mov
or
or
sub
mov
cmp
cmp
dec
andb
push
xor
mov
out
shl
imul
in
and
sti
and
xor
mov
out
shrb
jnp
add
sarb
icebp
mov
jb
jnp
push
repz
fbld
shrb
inc
je
test
test
test
repz
jmp
add
xor
out
out
out
cmp
fwait
lock
mov
jae
or
mov
lods
jl
jne
ds
test
inc
mov
cmpsb
dec
xchg
in
dec
mov
jb
xor
ljmp
inc
mov
jg
scas
ret
ret
mov
push
add
pusha
sub
pop
ljmp
fsubrp
or
push
dec
inc
int
int3
lcall
adc
xor
ss
int3
aam
jb
lock
loop
ja
adc
sub
adc
inc
cld
jecxz
mov
aaa
int
ret
cld
jbe
inc
test
cmpsb
in
xor
cli
sbb
pushf
xchg
lock
and
jnp
leave
push
call
ds
stos
call
stos
pop
push
and
stc
lcall
and
jecxz
xorb
enter
repz
ret
push
dec
insl
mov
push
push
or
dec
enter
flds
aaa
xchg
outsl
xchg
insl
pop
repnz
das
sar
cmpb
sbb
or
jnp
xor
bnd
js
mov
mov
mov
inc
or
cmpsl
call
mov
hlt
mov
xor
cld
ljmp
xchg
ror
nop
stos
in
jo
jns
popa
into
sbb
outsl
faddl
mov
lcall
mov
repnz
push
jge
or
push
jnp
ret
movsb
sub
in
aam
or
adc
lods
out
push
mov
cmpsl
xchg
das
mov
aad
jbe
repnz
les
jae
aaa
and
aas
mov
in
scas
pop
aad
enter
repz
sub
add
inc
das
or
adc
jne
lods
aaa
out
out
std
mov
out
jae
roll
inc
jmp
mov
fucomi
inc
inc
push
sbb
push
add
fwait
ret
adc
jle
push
fmul
dec
push
repz
loop
out
cltd
cmp
dec
sbbb
mov
jbe
mov
dec
hlt
jbe
rorl
cmp
sbb
lods
cmp
jecxz
hlt
jne
je
inc
push
loope
jo
out
mov
int3
cmp
repnz
cmp
cmp
in
int3
jle
in
nop
mov
xchg
hlt
test
pop
lds
add
arpl
into
jns
jbe
adc
subl
sahf
pop
push
push
mov
xor
sub
out
hlt
clc
adc
inc
and
testl
mov
pop
cmpb
shl
lcall
lock
aaa
out
std
xor
stos
or
or
adc
cmpsb
mov
int3
sub
adc
push
seta
bnd
pop
pop
xchg
add
sub
sti
push
lods
enter
lret
out
scas
fnstcw
jg
insl
push
sub
in
insb
fucomp
sti
imul
out
pop
dec
clc
test
cwtl
jge
xchg
nop
push
inc
bound
mov
shrb
movsl
xor
dec
js
lret
outsl
leave
xor
or
jnp
jne
inc
inc
lock
adc
push
mov
push
stos
pop
or
mov
or
add
movsb
pushf
repnz
inc
mov
pop
and
adc
push
xchg
mov
mov
xor
jns
repnz
clc
push
push
int3
sbb
dec
test
xchg
shlb
movntps
mov
mov
daa
mov
mov
shll
mov
dec
subl
jle
or
inc
nop
dec
sbb
ficompl
dec
orl
jo
add
idiv
scas
aam
mov
das
icebp
icebp
repnz
lock
das
out
or
dec
std
out
push
pushf
lock
xchg
insl
and
repz
cmc
stc
arpl
scas
xor
xor
in
rcll
out
outsb
in
mov
in
adc
sbb
mov
cmp
add
shlb
sub
inc
adc
into
fwait
scas
fisubs
movsb
arpl
mov
scas
xorw
mov
int3
xchg
out
sbb
int
into
push
or
mov
gs
sbb
sub
mov
add
cmc
jecxz
inc
je
xor
sbb
xchg
ss
lcall
out
je
jno
and
das
cltd
inc
clc
in
pop
jno
jg
scas
clc
ds
push
or
les
xor
idiv
add
xor
push
sbb
popa
push
dec
sbb
mov
jne
mov
pop
mulb
ret
cmc
inc
int3
dec
out
das
xor
out
repnz
dec
in
and
dec
dec
jle
pop
cmpsl
fidivs
push
jb
jmp
mov
inc
dec
daa
xchg
into
lret
xor
jno
stos
xchg
das
movsb
cmc
mov
frstor
jae
enter
dec
insl
stos
inc
pop
add
popf
int3
daa
dec
das
lret
sub
jle
mov
push
out
dec
and
jnp
xlat
in
aas
cmp
leave
mov
enter
or
andl
mov
icebp
mov
inc
psllq
aas
cs
bound
xchg
movsb
sbb
aam
addl
js
sub
mov
mov
sub
repnz
sub
sub
xor
cmpsb
inc
sbb
push
std
mov
sub
or
cmp
mov
faddl
xor
out
sub
rcll
aam
fistpl
inc
insl
inc
ja
outsl
sbb
push
add
dec
in
cmc
mov
test
out
and
pop
add
or
ja
lods
fdiv
jne
ja
add
mov
aaa
aam
aam
sub
daa
int3
mov
mov
std
test
sti
jnp
add
jp
or
arpl
cld
in
movsl
sbb
in
pop
test
and
stc
rol
dec
insb
jl
and
ret
icebp
cmp
and
push
imul
sbb
sbb
and
push
sbb
hlt
stos
movsl
pop
leave
push
mov
negb
jne
es
sbb
dec
std
in
ss
test
inc
dec
outsl
dec
jbe
lcall
lods
and
push
insb
jae
push
std
push
int3
sbbl
out
push
and
or
cwtl
divl
jecxz
sbb
test
test
mov
lea
xor
adc
and
mov
shl
sbb
aaa
lds
xlat
dec
and
test
mov
hlt
mov
lock
imul
icebp
push
cmp
ficoms
out
sti
cmp
add
enter
clc
lock
xchg
or
inc
sbb
or
push
ja
hlt
pop
sarl
rcl
insl
mov
leave
or
adcb
and
dec
and
push
sbb
mov
or
mov
mov
push
movsb
enter
sub
xor
adcb
mov
jnp
pushl
into
mov
aas
aam
outsb
repz
add
movlps
ss
sub
xor
jle
jmp
pop
movsl
mov
sub
fcoms
scas
or
inc
mov
inc
add
and
test
sub
xchg
mov
mov
movb
and
ljmp
jo
mul
testb
and
stc
dec
dec
call
mov
test
ror
cmc
or
mov
jno
sbb
sub
sbb
push
jge
in
add
ret
add
sub
mov
shl
xchg
insb
mov
jp
pusha
mov
xor
jo
pop
hlt
fisttpll
mov
dec
out
out
push
push
jle
int
cmp
leave
in
add
xor
inc
sbb
adc
mov
mov
lcall
test
mov
out
js
insl
jge
push
mov
je
mov
sbb
aam
inc
or
enter
insb
out
pop
decb
into
lock
and
and
mov
es
sbb
scas
mov
jg
cwtl
dec
push
out
stc
sub
cli
outsb
dec
pop
xchg
sbbl
xchg
dec
hlt
cmp
sbb
notl
and
cli
ss
arpl
ljmp
cli
push
push
outsl
repnz
arpl
fldenv
add
mov
sub
stc
and
pop
mov
fdivl
cmc
sub
add
pop
add
in
and
scas
pop
lock
enter
ss
std
pop
pop
out
pop
or
dec
in
cmc
mov
or
cmp
out
divb
clc
negb
shll
jnp
adc
js
pop
mov
add
sti
test
outsb
in
leave
pop
lahf
or
call
push
pop
xlat
rclb
sbb
imul
nop
das
lods
int3
in
aaa
in
jle
out
in
jle
pop
testl
cld
push
mov
inc
or
adc
mov
outsb
inc
je
subb
shrl
mov
push
jecxz
jnp
inc
sahf
mov
andl
push
sub
xor
and
mov
or
and
pop
repz
mov
decl
lret
cmpsl
add
popf
push
in
or
or
pop
mov
in
xor
jb
mov
fwait
data16
mov
loope
fs
lcall
push
jle
fbstp
mov
xchg
pusha
dec
mov
jp
mov
sbb
mov
add
or
je
jge
in
fs
pop
dec
xor
leave
int3
or
sub
mov
out
lret
pop
jmp
ja
loope
fidivl
inc
imul
xchg
lods
repnz
or
pop
insb
and
je
repz
imul
out
mov
xorl
mov
lret
mov
xchg
mov
pop
test
outsl
je
fisttpll
in
and
stos
arpl
pop
sbb
xor
cmc
mov
data16
mov
and
movsb
rorl
not
dec
sbb
xchg
and
hlt
jnp
adc
daa
stc
cld
in
cmc
hlt
mov
dec
je
cmpsl
mov
daa
aas
jb
mov
or
and
imul
and
push
iret
mov
xor
xor
add
repz
mov
lahf
sti
lret
loope
mov
and
dec
out
fcmovne
fwait
scas
xor
dec
hlt
pop
ret
or
add
cmovs
or
je
scas
nop
and
jne
test
ds
or
dec
in
cmc
mov
shl
mov
mov
push
repnz
xchg
nop
and
mov
ret
dec
roll
shll
push
xchg
mov
add
cmp
imul
mov
mov
iret
jno
dec
mov
adc
push
rdmsr
push
dec
arpl
ss
jae
or
xorl
hlt
dec
jg
ret
adc
add
insl
push
jb
outsb
enter
je
xor
mov
pushf
sub
mov
repnz
sub
jno
xlat
add
cli
cmp
inc
sbb
je
pop
cmp
jmp
in
add
and
sarb
or
arpl
or
in
mov
sbb
jns
inc
and
cltd
dec
mov
xlat
std
mov
push
or
pushf
or
add
mov
xor
setnp
in
mov
mov
add
divb
lods
jno
shlb
jo
mov
dec
aad
pop
mov
inc
jl
mov
or
dec
ret
fsubrs
repz
dec
test
orl
lods
int
xor
cmpsl
jg
inc
mov
gs
lret
ss
mov
jle
mov
adc
xlat
pop
or
xor
lock
xchg
sbb
jae
add
andl
insb
orl
dec
mov
stos
and
lock
cld
cli
push
push
push
cltd
add
lahf
pop
mov
mov
pop
fsubrs
icebp
cmp
push
sub
or
movaps
scas
cmp
sbbb
fcmove
jg
push
xchg
jle
out
pop
fistl
stos
jl
push
divl
ss
add
cmp
push
or
add
and
pop
std
imul
pop
ds
and
std
jae
cmp
lahf
jecxz
xlat
lret
insb
std
xor
out
inc
pop
sbb
dec
inc
push
mov
imul
cs
out
mov
imull
ja
je
dec
xor
cmc
cmp
aas
cmp
lock
xchg
jg
push
outsl
fldl
xor
mov
loopne
xlat
movsb
roll
pop
mov
mov
or
cmp
fwait
out
mov
cmp
aaa
aas
aaa
pushf
lods
mov
test
mov
jae
push
loopne
adc
xor
sti
push
nop
mov
sahf
in
clc
push
ret
dec
mov
shll
and
test
out
xor
out
dec
stc
xchg
outsl
lock
xor
fs
lea
sbb
fs
shlb
fsubl
jo
mov
jmp
sti
out
xchg
pop
fisubrl
dec
jge
lret
aad
insb
sahf
lods
out
mov
add
test
or
fnsave
jns
nop
mov
mov
sub
subl
add
test
sub
fidivs
jmp
inc
cmpsl
or
push
mov
dec
or
out
dec
imul
iret
addb
int3
xchg
ja
movsl
nop
inc
dec
mov
fdivs
or
pop
pop
jnp
mull
sbb
inc
sub
jge
ds
testl
shrl
mov
mov
je
in
mov
jns
xor
sti
cmc
mov
in
adc
call
enter
dec
mov
cmp
in
jnp
ss
ret
add
ret
pushl
std
test
add
cmpsl
clc
xor
lds
andb
mov
repnz
mov
scas
cmp
enter
ja
jmp
jmp
outsl
cmp
mov
jb
movsb
cli
jo
mov
mov
dec
mov
or
xchg
push
imul
ret
sbb
out
and
jecxz
sub
cli
jae
jb
mov
rorb
dec
sbb
push
loopne
aaa
test
push
cmp
pop
pop
mov
daa
js
sub
lahf
lods
add
loope
xchg
jno
or
sub
cmpsb
mov
mov
or
cmp
xor
add
scas
lods
fwait
sbb
cvtdq2ps
mov
xchg
mov
or
icebp
xchg
rcll
outsl
iret
lods
into
js
sub
mov
xchg
ss
cmp
add
jae
dec
mov
test
mov
xor
mov
stos
leave
sub
mov
and
sbb
cmpb
dec
insb
scas
xchg
jb
lahf
dec
and
imul
and
jne
cs
insb
clc
ss
sub
mov
jne
xor
out
add
mov
jl
repz
inc
shll
stc
or
jno
outsb
mov
call
sbb
pop
in
lods
bound
jp
jmp
or
xor
negl
popf
scas
faddl
cmc
or
hlt
lea
mov
out
add
in
int
arpl
jnp
xor
jl
in
out
cmpsl
bswap
or
xchg
mov
lock
aas
xor
inc
imul
dec
out
or
mov
mov
shrb
sub
out
rorl
jne
cmp
mov
xor
imulb
aaa
lods
xchg
aam
out
fcomi
sub
pop
dec
int3
out
fisttpl
in
pushf
pop
sub
pop
xchg
dec
pop
in
aas
fnsave
sbb
add
imul
pushf
out
outsb
out
lahf
add
sti
push
or
cmp
cmp
insl
out
aas
inc
sub
scas
jae
lret
and
dec
xchg
lds
lock
sub
dec
std
sub
pop
sbb
add
lret
inc
or
xchg
lds
pop
jbe
outsl
loope
orb
sub
scas
dec
xor
sub
gs
outsl
add
dec
mov
imul
add
sub
sub
and
pop
xlat
mov
sahf
or
push
add
lret
sub
sub
scas
popa
cld
je
das
movb
cld
icebp
jns
ffree
pop
adc
lock
fldt
cmpsb
and
sbb
xlat
inc
mov
push
jb
cli
aad
mov
shrb
pop
rolb
xchg
scas
add
add
lods
jno
js
fsub
insb
add
and
scas
loopne
pop
loope
jbe
xchg
jnp
push
out
rcl
mov
pop
mov
sub
xor
mov
int
insl
jnp
lret
jne
mov
jmp
xor
ret
dec
pop
nop
ficoms
mov
xchg
out
shrl
out
or
hlt
stc
jge
xchg
outsb
imul
jnp
jmp
jge
dec
dec
jae,pt
mov
push
xchg
into
andl
mov
mov
imul
int3
and
inc
add
data16
movsl
insb
dec
jae
pop
jg
jae
push
xor
faddp
xchg
cmpsl
aaa
jg
nop
sbb
in
mov
mov
or
icebp
or
xor
imulb
icebp
dec
jp
clc
jae
ja
xlat
mov
mov
es
pop
out
sbb
test
adc
xor
mov
cltd
inc
lret
xchg
icebp
cli
es
pop
push
js
jnp
ret
adc
add
cmp
ret
xlat
cmp
fmull
out
xchg
test
or
xor
add
xor
scas
sbb
add
lea
push
stos
or
xor
push
fcoml
popf
pop
nop
incb
dec
add
lret
mov
std
sbb
sub
sbb
in
mov
cmp
lea
cmp
inc
cmp
jg
sub
pop
insl
hlt
shrb
and
test
pushf
lock
mov
push
pusha
cli
mov
arpl
outsb
xchg
add
repz
add
mov
dec
imul
pop
mov
stos
dec
mov
mov
sbb
sar
movsb
addr16
mov
jae
outsl
adc
inc
outsb
dec
ja
sub
movsb
inc
rorb
push
ret
sbb
movsb
cld
sbb
sahf
lods
pop
scas
inc
cwtl
repnz
add
jo
shll
movsl
push
test
xor
call
shr
repnz
stos
repz
fmull
neg
xchg
jae
cmp
and
cmp
xor
lcall
push
rcr
cmp
push
fcompl
mov
sub
loope
dec
aad
fwait
xchg
mov
adc
aad
sbb
mov
dec
push
sub
into
jo
inc
in
in
leave
sub
leave
xorb
repz
mov
push
loope
jmp
leave
shll
in
fnsave
xor
add
inc
push
fstps
mov
jmp
in
xchg
incl
or
cmp
out
add
bound
jns
stos
nop
mov
pop
sub
cld
je
clc
lods
cmp
out
int3
xchg
and
mov
fnsave
xchg
pusha
das
mov
push
or
js
outsb
insl
js
icebp
scas
sbb
mov
int3
mov
movsl
push
aaa
lret
adc
push
pop
daa
outsb
js
stos
mov
outsl
shrb
test
xor
cs
or
add
mov
and
insl
pop
fmull
insb
mov
or
dec
mov
lret
sub
shll
fwait
stc
adc
ds
into
push
test
out
mov
rcr
in
out
sub
movsb
pop
adc
test
pop
mov
dec
in
lret
push
sub
pusha
dec
movsb
ja
sub
adc
jmp
add
and
out
insl
xor
cmc
out
lods
leave
sti
jnp
clc
or
icebp
sar
pop
ret
xor
repz
imull
gs
decl
lods
cmp
out
and
dec
insl
inc
sub
loope
lahf
pop
movsl
lods
ss
jmp
out
dec
lahf
xchg
and
xchg
adc
xchg
int3
repz
out
lods
mov
or
sarl
rcrl
inc
stc
imul
and
cmp
cs
or
shlb
and
pop
xor
ret
jno
inc
ja
jge
pushf
lea
sarl
loope
inc
in
push
incl
sub
mov
pop
or
cmp
jno
out
mov
orb
xor
and
mov
sub
lret
push
stos
adc
bound
sbb
cltd
mov
fmull
cmpsl
ret
icebp
push
addr16
inc
rcl
cmp
jl
jle
imul
mov
jl
repz
dec
insl
fisttpl
inc
inc
cmpl
mov
xchg
lds
clc
orb
or
mov
and
xor
and
arpl
mov
negb
or
out
inc
cmp
push
jbe
shr
loope
adc
add
into
sbb
out
test
lock
mov
sub
rcl
sbb
bound
stos
aaa
mov
fwait
pusha
cmp
cmp
inc
sarb
aam
mov
jle
pop
xchg
pop
sub
adc
test
ja
dec
dec
imul
insb
mov
in
add
leave
jae
add
test
fldenv
aad
mov
sbb
icebp
es
pop
add
in
rol
xor
mov
shlb
fs
fisttpll
jp
popa
push
hlt
lret
inc
pop
lea
fimuls
jae
imul
repz
cmc
std
sub
cmp
jbe
or
in
out
inc
lods
fnstcw
mov
sbb
xorb
jnp
in
out
in
lods
jno
clc
jbe
cmp
sub
pop
cmc
imul
lret
or
and
mov
outsb
cs
adc
pop
iret
out
cli
adc
jmp
jge
pop
stc
out
test
lret
sar
sbb
ret
enter
xchg
mov
fstpl
pop
sti
ljmp
jmp
mov
xlat
pushf
mov
fs
mov
mov
daa
rcr
xchg
sbb
dec
lods
push
xchg
cld
je
fsubl
es
lds
scas
mov
or
or
fsubrs
dec
arpl
xchg
outsl
mov
mov
test
stos
mov
adc
cmpsb
dec
inc
jae
scas
inc
jg
aaa
adc
cmovns
add
nop
scas
push
push
xchg
mov
imul
xchg
in
shr
lcall
lret
inc
lahf
jne
scas
add
outsb
into
rolb
call
or
lods
add
dec
ljmp
jecxz
out
adc
mov
mov
jg
pop
dec
repnz
icebp
xor
adc
dec
adc
pop
pop
shl
stos
in
das
clc
pop
jle
stc
mov
cmp
xacquire
lock
fwait
scas
push
push
add
rcl
xchg
iret
inc
daa
ficoms
and
lods
fstpt
push
mov
sti
sub
and
pop
jno
dec
rorl
insb
and
subb
sbb
dec
rep
insb
dec
ds
sar
adc
sbb
mov
xchg
lea
testb
dec
mov
fsubs
lahf
fistl
xchg
fwait
ret
mov
and
mov
push
shl
jne
outsl
hlt
aaa
sahf
scas
or
scas
pop
add
and
mov
gs
dec
lock
add
adc
xchg
mov
and
cmpsb
lods
adc
or
mov
data16
or
fmull
jmp
sarl
sbb
pop
icebp
mov
pop
int3
jle
stos
sub
scas
inc
loope
xchg
shll
and
sti
repnz
mov
ljmp
insb
xchg
sti
and
cmp
daa
push
mov
fisubrs
pop
shlb
int3
std
fcoml
sbb
sbb
push
xor
jecxz
jne
shll
and
add
mov
mov
adc
mov
test
jl
ss
lret
xchg
xchg
or
mov
sub
inc
inc
dec
sub
out
je
sub
add
add
xchg
sub
dec
mov
test
push
sub
and
decl
inc
pushl
loope
daa
sbb
popa
dec
pushf
enter
or
dec
jp,pt
cmp
movb
leave
aas
add
dec
jle
and
push
mov
jns
popa
ss
dec
cs
mov
fidivl
xor
test
addb
mov
mov
or
mov
and
or
hlt
mov
int
sbb
inc
fdivl
sti
lods
or
out
or
inc
icebp
jl
test
cltd
sti
in
adc
insb
dec
das
cld
mov
in
data16
xor
in
pusha
xlat
mov
aam
pop
mov
cmc
mov
dec
lcall
mov
dec
jge
xchg
sbb
push
incl
std
insb
lods
jge
and
rol
sahf
shl
ret
sub
mov
pop
jno
in
fwait
je
and
sbb
sub
lods
shrl
dec
cmp
or
pop
rcrl
fisttpl
ja
out
int3
push
and
call
or
xlat
clc
adc
lock
mov
repnz
sub
aaa
sar
rcl
pop
xchg
lea
cmpsl
xchg
hlt
xchg
icebp
or
mov
inc
lods
lahf
in
add
or
insb
jp
push
addl
movsl
insb
jle
xchg
les
push
out
aaa
and
pop
inc
mov
adc
les
cmp
lahf
mov
jg
stos
xor
repnz
das
movsl
mov
repz
test
shl
cmp
je
xor
ja
xlat
pop
push
or
lret
insl
lods
adcb
sub
or
std
int
pop
or
push
sbb
inc
stos
xor
lcall
out
imul
aas
jnp
in
pop
sbb
and
cmp
push
std
mov
stos
push
fnstsw
jl
shlb
adc
mov
xchg
cltd
mov
cs
pushf
mov
stos
outsl
inc
sub
xor
call
inc
ret
movsb
fdiv
int3
and
adc
mull
in
js
out
pop
dec
loopne
or
cld
es
xchg
loopne
out
xor
orl
lahf
gs
add
mov
shlb
leave
xchg
ret
fadds
add
in
mov
lahf
sub
mov
jle
sbb
imull
mov
out
in
xor
hlt
jmp
dec
scas
cmpsl
es
andl
pop
pop
fsubl
dec
fwait
sub
popl
dec
es
cli
cmc
dec
pop
fildl
mov
adc
pop
and
push
std
jge
pop
popf
aam
aas
stos
std
cmp
push
fwait
push
inc
push
into
decb
sub
cld
mov
dec
cs
mov
sub
cmpsl
jge
sbb
in
mov
xchg
mov
xor
aad
push
jbe
pusha
adc
xor
xchg
pop
addr16
call
ret
stos
pop
or
mov
cmp
sub
jp
stos
pop
std
jae
xor
sub
xchg
test
push
jg
aaa
xchg
mov
lahf
or
sub
jno
iret
in
xchg
mov
jnp
loope
sbb
jbe
dec
add
sbb
test
xlat
pushf
sbb
mov
pop
mov
leave
scas
jo
mov
aas
add
icebp
jmp
pop
or
out
lock
aas
sub
jno
sbb
inc
fwait
lock
pop
mov
cld
xchg
fwait
ljmp
out
and
es
jno
mov
sub
gs
add
xchg
or
testl
inc
inc
push
cli
mov
mov
xchg
dec
addr16
out
xor
xor
ja
scas
and
pop
mov
mov
or
andb
hlt
jbe
aaa
or
aas
icebp
in
out
xchg
and
insb
out
xor
sbb
cmc
xlat
mov
jmp
xor
out
xchg
mov
cmp
add
xchg
cld
cwtl
lret
loope
inc
dec
nop
sub
mov
cld
sub
jge
xchg
in
adc
stos
pop
dec
int3
add
cmpsb
inc
add
hlt
add
out
jmp
daa
or
xor
outsb
xchg
sub
popf
or
inc
sbb
orl
mov
addl
cmp
and
sbb
pop
push
sahf
imul
test
push
inc
push
int
imul
enter
xor
mov
fwait
insb
add
pop
lahf
dec
stos
cmpsl
inc
mov
stos
in
inc
push
ss
mov
filds
repnz
mov
mov
mov
and
out
dec
inc
stos
mov
es
add
clc
aas
sbb
jle
jg
inc
mov
nop/reserved
sbb
pop
mov
adc
dec
lret
sbb
xchg
sbb
and
xchg
mov
jmp
jl
sbb
add
scas
fistpl
sub
fidivs
sub
clc
dec
pop
scas
mov
sti
into
ret
jnp
jbe
stc
in
adc
inc
pop
mov
add
fdivrs
aad
in
pop
and
movb
sbb
in
repnz
cmp
ret
lcall
dec
adc
mov
jecxz
nop
lcall
into
add
cmc
push
mov
je
adc
xor
icebp
sub
mov
lods
fcomip
cmp
jne
cmc
adc
adc
add
pop
sub
jno
pop
stos
inc
loopne
pslld
jle
int3
lret
in
stc
bound
repz
repz
push
rorb
cmp
loop
outsl
leave
pop
adc
lods
fs
inc
mov
sbb
cmp
adc
jno
cmp
sti
lock
sub
mov
xor
cmpsb
js
movsl
imul
or
xlat
mov
jno
shrl
lods
orl
ss
scas
jmp
aad
mov
nop
fucomip
or
xchg
xchg
leave
mov
and
add
adc
outsl
or
rol
std
es
inc
push
pop
ret
rcll
add
fsubrp
add
push
scas
out
mov
lock
fisttpl
xor
loop
ss
aaa
out
push
das
push
mov
ss
orb
inc
mov
cmp
push
xchg
sbb
sub
ffreep
sbb
mov
dec
sbb
add
sbb
jg
jo
data16
sub
lods
sbb
jp
scas
jecxz
lcall
sbb
daa
inc
icebp
dec
mov
sub
add
out
js
icebp
in
stc
jae
in
mov
cld
dec
mov
lock
cmp
cwtl
jnp
scas
and
sub
shl
scas
xor
stos
sub
sarl
sub
aas
sub
ss
testb
inc
loope
add
pop
lock
cmp
cwtl
sti
in
inc
cmp
outsl
push
mov
inc
pusha
aas
inc
or
inc
das
int3
cmp
and
pop
incb
or
fistpl
popf
cld
ds
stos
je
imul
ds
scas
adc
mov
cmp
dec
mov
repz
roll
sub
mov
movsb
rcl
pop
insl
fmul
inc
nop
lds
rcrl
fidivrl
and
loope
pavgb
jl
int3
lret
repz
mov
lods
pop
dec
subb
daa
or
aaa
fidivrl
das
repz
ljmp
into
shlb
pop
jl
xor
jg
cmc
mov
mov
pop
and
scas
inc
mov
pushf
xor
jbe
mov
push
daa
mov
sbbb
mov
sub
cmp
mov
push
jno
xor
divl
jle
dec
hlt
sbb
add
data16
jo
cmc
in
dec
dec
mov
jbe
cmp
inc
pop
mov
test
addr16
or
cs
or
test
insl
cmpsl
or
dec
adc
aad
add
mov
or
jae
stos
adc
sub
insl
xor
sbbb
and
arpl
lret
clc
cwtl
idivb
mov
or
pop
inc
ljmp
jbe
adc
xor
mov
divl
test
subl
es
faddl
out
cmc
push
mov
jne
inc
and
into
incb
mov
dec
out
mov
add
sbb
out
sub
sub
jae
mov
mov
andl
and
popa
stos
es
sub
insb
sub
push
mov
fs
dec
scas
push
jp
in
pop
add
mov
insb
loope
jb
jp
jl
or
outsl
lret
xchg
popf
inc
orb
xor
in
out
mov
sti
jbe
loopne
test
adc
jbe
and
andb
adc
stc
jmp
imul
dec
stos
ficoms
fdivl
das
out
sbb
or
lcall
ret
clc
mov
mov
adc
adc
int3
add
sahf
mov
push
cmc
inc
jo
jb
aam
push
scas
add
ja
ss
sub
aad
or
cmp
repnz
out
je
jb
hlt
stc
cmp
lock
or
mov
jbe
xchg
insb
rcrb
add
ret
add
xor
dec
or
or
idivl
pop
fucomp
andb
add
rclb
or
add
inc
out
and
shll
in
repnz
mov
and
hlt
fwait
and
mov
push
pop
mov
insb
lock
push
bound
in
in
mov
cmp
xchg
mov
mov
out
jmp
fadd
adc
push
push
mov
sub
rorb
dec
xchg
mov
out
dec
fdivrs
cmpsb
repnz
and
mov
cmpsl
mov
aaa
rol
mov
sahf
mov
mov
sub
or
lods
push
cmp
and
add
out
xchg
addr16
inc
mov
cli
cmc
sub
adc
cmp
push
mov
and
mov
lock
lcall
add
cmc
imul
hlt
clc
out
adc
ss
mov
ljmp
enter
push
push
pop
mov
into
nop
sub
and
mov
xor
push
xor
stc
xor
dec
or
shrb
push
jnp
or
repnz
adc
adc
or
cs
fstps
xchg
adc
jmp
ja
jp
xchg
pop
push
sub
hlt
stos
xchg
mov
sarb
imul
test
sbb
rorl
mov
mov
pop
sbb
xor
notb
aas
xchg
sub
lcall
in
cs
sub
sbb
or
cmp
and
and
pop
into
out
rcll
and
xor
das
icebp
jne
lret
repnz
out
sub
dec
ret
cmp
mov
push
jae
dec
mov
subb
orb
push
mov
call
ds
clc
or
sub
and
add
mov
pop
cmp
xor
and
cmp
sub
or
lock
fisubrl
sub
out
jae
es
cs
pusha
lret
cmp
daa
clc
xor
cld
mov
decl
pop
imul
in
aas
jge
add
cltd
sbb
push
adc
or
clc
push
and
lods
mov
cmp
mov
call
outsl
xor
cwtl
aam
neg
jge
out
sbb
fdiv
mov
xchg
push
stc
jo
add
jl
dec
or
mov
sub
or
push
enter
mov
add
clc
repz
pushf
xchg
insl
pushf
insb
and
inc
scas
leave
add
sbb
add
stos
pushf
in
xor
inc
stc
shrb
rcr
sub
pop
shrl
pushf
add
scas
pop
addr16
sub
in
lcall
jno
insl
lock
xor
sub
add
mov
jl
add
repnz
dec
outsl
repnz
sub
push
mov
aaa
div
notb
mov
or
cld
and
pop
out
mov
xchg
ja
repz
xor
push
cmc
ret
xor
shll
push
repz
and
stc
orl
ja
data16
cmp
imulb
xorl
inc
sub
jnp
and
shl
mov
les
enter
cmp
xchg
push
insb
stos
mov
sahf
jnp
stos
movhps
add
inc
in
incb
repnz
push
cs
cld
sub
in
scas
shrb
add
stc
mov
inc
jbe
fsubl
jo
jnp
push
mov
and
lret
push
jl
mov
add
dec
incb
xor
sbb
hlt
cmpsb
sbb
cmp
sbb
cmp
lahf
xchg
lahf
out
mov
cmp
mov
fdiv
ljmp
test
mov
out
leave
lret
dec
out
mov
mov
add
into
sbb
scas
mov
mov
sub
movsl
jo
xor
adc
or
push
jo
addr16
add
sbb
pop
sbb
mov
ljmp
push
mov
or
jae
push
push
ror
ljmp
jmp
lock
mov
aas
and
jnp
jg
ret
in
outsl
mov
repnz
add
and
mov
cmpsb
lock
jne
sbb
jp
mov
push
ja
dec
cmc
jns
fisubrl
mov
in
mov
and
movsb
ror
mov
sbb
popa
or
or
push
pusha
in
jbe
mov
jmp
and
in
xorb
cmp
and
mov
xchg
out
dec
dec
in
dec
xor
gs
push
pop
and
fdivrp
add
shl
insb
dec
cmc
aad
xor
test
or
pop
dec
fwait
add
xchg
cmp
jmp
or
xlat
loope
mov
std
insb
inc
xor
cmp
and
xor
int3
sbb
add
pop
mov
out
repz
jo
int3
les
rcrb
fstpt
adc
sbb
ret
mov
in
jno
cmp
outsl
or
aas
and
lods
cli
in
mov
hlt
daa
mov
pop
scas
ss
and
mov
mov
aaa
mov
xchg
outsb
addr16
lock
xchg
repz
mov
outsb
out
std
dec
lods
dec
mov
js
mov
jbe
cs
stos
movsl
cmpsl
push
add
andb
jp
adc
idivb
hlt
sbb
std
repz
xor
and
adc
cmp
mov
inc
xchg
pop
or
negl
add
jecxz
inc
xor
and
jbe
mov
fimuls
and
clc
and
or
push
sbb
sti
loop
sti
enter
and
push
ret
outsl
out
and
inc
or
xchg
scas
ja
gs
rolb
xchg
insl
jb
push
sub
pushl
xor
sub
or
testb
fldcw
js
in
cmp
mov
repnz
adc
add
xor
loop
pop
outsb
add
daa
dec
cld
ja
sti
dec
lock
sub
push
popf
dec
rcr
lret
call
sahf
aas
adc
test
mov
ret
divb
or
in
xchg
or
je
mov
pop
pop
xor
aaa
push
xor
inc
adc
jecxz
sti
add
jae
out
fidivrs
in
addb
jnp
dec
out
xor
dec
subb
sar
jmp
decb
fldenv
rcrl
add
ja
fistpll
xchg
jnp
insl
shlb
in
xchg
or
and
dec
mov
adc
adc
bound
idivl
push
loope
pop
sub
add
in
adc
sti
lock
pop
push
arpl
lods
cmpsl
jae
in
pop
in
out
push
outsl
sub
std
hlt
add
inc
dec
or
cld
rcll
dec
xlat
repnz
add
sub
lock
xchg
inc
in
in
or
testb
and
or
outsl
lea
repz
jb
add
jg
adc
ret
sti
scas
dec
cmpsb
cmc
xchg
outsl
xor
and
mul
push
or
mov
mov
push
mov
sub
test
xor
sarb
mov
dec
and
jmp
sub
jp
js
shl
jmp
inc
shll
fwait
mov
ret
dec
xchg
or
mov
jbe
pop
xlat
xchg
pop
sub
loopne
sub
imul
push
inc
jge
jl
in
and
mov
push
rcll
jbe
mov
pop
adc
jle
sub
mov
xchg
sub
xchg
shll
cmp
inc
loope
decl
mov
movsl
ret
jl
fnstenv
notb
cs
cltd
scas
jl
push
outsl
punpckhwd
movsl
nop
inc
out
pop
out
test
jl
scas
ret
mov
iret
out
test
adcb
stos
or
or
out
test
mov
xchg
ret
xchg
fstpt
mov
jo
and
loopne
out
mulb
inc
jne
insb
into
xlat
jl
push
sub
xchg
pop
inc
das
mov
jae
insb
in
shrl
inc
stos
je
test
adc
xchg
add
pop
add
jle
cmp
pop
outsb
testb
xor
outsb
cli
add
xorb
repz
loope
push
xchg
fadd
mov
xor
mov
in
and
aaa
fimull
mov
mov
das
xchg
mov
test
outsb
xchg
or
fs
hlt
pop
clc
cmp
jns
fdivrl
add
jnp
repnz
fdivs
pop
lcall
popf
add
stos
movsb
imul
lock
dec
mov
xchg
pushf
sub
add
push
js
pop
xor
insb
xchg
push
xchg
pop
in
ss
xor
push
add
iret
add
lock
out
ret
or
addr16
outsb
std
fiaddl
roll
ljmp
and
ljmp
bound
xor
mov
cmpsb
cmp
in
shrb
into
out
jbe
sub
das
mov
mov
sbbb
xor
cmpsl
inc
cmc
call
sti
adc
out
lds
or
dec
in
outsb
cli
lahf
sub
inc
faddl
movsb
enter
test
in
gs
push
das
andb
mov
mov
pusha
sarl
mov
pushf
enter
jb
sbb
repz
xor
fistpl
push
jb
and
push
sbb
and
fwait
cwtl
outsb
outsb
dec
insl
inc
clc
push
mov
dec
js
int
dec
stc
and
mov
sbb
mov
fildll
xchg
sbb
sbb
jae
das
ret
or
fistl
sbb
push
or
int3
sub
fsubrl
mov
insl
cmp
imull
dec
dec
sbb
or
rorb
pop
pop
add
insb
lea
outsl
aas
cmp
flds
popa
mov
pop
adc
jb
sahf
add
add
cmp
cwtl
mov
xor
test
adc
and
movsb
push
jo
sub
cmp
mov
and
sahf
dec
dec
lock
sub
les
inc
sbb
icebp
and
mov
dec
movsl
lds
ss
cmp
or
scas
jns
imul
bound
xor
mov
xchg
and
ss
dec
xor
jnp
test
jecxz
test
test
xchg
fists
inc
xlat
xchg
insl
pop
adc
dec
sub
mov
jg
inc
and
dec
jecxz
divb
mov
sti
mov
icebp
mov
mov
jge
insl
mov
stc
jne
dec
xor
shlb
sbbb
xor
pop
sti
sub
inc
cmp
add
les
push
decl
insl
sbb
or
sti
or
inc
mov
add
jbe
mov
outsl
sub
fstps
jnp
imulb
dec
mov
mov
aas
jno
cmp
sarb
pop
cltd
mov
jae
arpl
shlb
jne
inc
stos
icebp
mov
adc
test
mov
notb
mov
mov
outsl
ja
cltd
mov
aam
leave
adc
bound
out
adc
sub
lcall
xor
jno
shll
aas
sbb
into
les
jle
icebp
out
iret
mov
pop
out
aas
scas
and
cmp
aaa
xor
std
stos
cmp
cli
fs
and
and
push
popa
push
movsl
dec
jo
movl
xchg
bound
pop
mov
xchg
jbe
xor
xchg
inc
rorl
inc
inc
popa
xor
inc
cmp
ss
pmuludq
dec
jge
inc
sarb
jo
aas
gs
insb
dec
push
pop
nop
dec
mov
out
leave
inc
adc
out
sbb
lock
inc
sbb
inc
fistpll
outsl
dec
sub
insl
dec
mov
adc
ja
jns
push
incl
xor
push
push
xchg
in
hlt
jnp
icebp
int3
mov
xor
sbb
ds
mov
test
scas
dec
movsb
arpl
xor
into
hlt
inc
jbe
sub
mov
pop
ret
pop
xor
movsb
sarl
push
iret
jae
dec
int
insb
and
and
push
je
and
push
lcall
push
popf
fwait
add
notl
fsubrp
dec
inc
int
in
js
push
or
loopne
mov
cmp
sahf
pop
jecxz
cmp
out
xor
sub
in
jl
adc
fildll
mov
adc
rorl
add
aad
leave
movsb
imul
xor
cmp
push
dec
mov
sti
mov
icebp
and
test
daa
shll
out
or
sub
cmc
or
movsb
stos
push
adc
ds
adc
mov
add
mov
mov
add
ret
sbb
sbb
or
outsl
mov
adc
cmp
repnz
adc
out
push
mov
lock
clc
rclb
cld
repz
and
fstps
jo
jmp
dec
and
inc
mov
test
and
fnsave
and
cmp
cli
sub
cmp
lods
test
fsubrl
sbb
mov
shl
das
jp
lods
imul
mov
mov
or
sbb
and
sahf
test
stos
in
addb
dec
pushf
clc
sub
jg
fistpl
cmp
popa
or
and
mov
stc
xchg
mov
inc
mov
lcall
mov
mov
dec
sbb
rcll
call
inc
ret
fs
push
xchg
mov
nop
dec
je
add
and
jl
clc
repnz
insl
fistpl
mov
clc
outsl
pop
sbb
lds
sub
int3
lds
or
dec
stc
add
lods
scas
sub
mov
int3
and
cltd
jnp
inc
and
js
mov
add
xorl
jle
test
or
outsl
movsb
dec
outsl
in
cmpsb
or
stos
and
xchg
mov
sub
and
sub
je
shlb
mov
sub
lods
test
mov
ljmp
leave
in
jg
les
mov
inc
fwait
sub
inc
xlat
mov
ljmp
sbb
arpl
pop
or
inc
cmp
cmp
pop
ss
jp
int3
jle
mov
jecxz
ja
sub
sub
hlt
pop
not
int3
icebp
or
jg
and
lds
push
jnp
lods
inc
cmp
loopne
xchg
stos
ja
mov
lock
std
sub
fdivp
loopne
cmp
or
out
mov
push
sub
lods
cmp
icebp
out
or
add
nop
push
test
add
inc
leave
mov
xor
jae
push
or
push
leave
pop
dec
inc
cli
and
cmp
add
out
frstor
loope
pcmpgtw
pusha
or
ss
lods
xchg
test
in
into
ss
cs
cmpsb
iret
int
hlt
shll
push
inc
jl
dec
popa
divb
adc
out
icebp
dec
pop
push
das
xor
lock
popa
cltd
mov
add
or
cltd
add
outsb
cmp
and
in
out
inc
dec
add
inc
adc
stc
lods
mov
add
stos
sub
andb
sub
lcall
stos
mov
xchg
fsubrs
jge
lods
cwtl
rolb
test
ja
mov
fcomi
mov
mov
dec
mov
js
push
imul
xor
push
xchg
dec
or
stos
push
movsb
repnz
test
adcl
pand
leave
ds
clc
and
imul
jmp
xor
mov
shrb
mov
movsl
cmc
pop
sub
arpl
dec
stos
and
push
lahf
shll
pop
ret
addr16
test
test
push
and
movsl
inc
mov
inc
push
inc
inc
and
or
push
lods
sbb
mov
ds
into
pop
aas
xor
sbb
fstps
imul
repz
push
outsb
bound
xchg
lgs
mov
rorl
js
ljmp
test
sbbb
push
outsl
mov
bound
cmp
int3
imul
sbb
sub
push
les
and
daa
sub
mov
or
jle
sub
mov
cmp
cmp
or
mov
add
imul
repnz
sbb
scas
call
lods
xor
inc
jnp
out
movsb
push
in
xchg
pop
inc
mov
shr
sub
pop
mov
dec
add
sti
in
push
mov
in
iret
xchg
xor
xchg
dec
inc
xchg
xor
fcoml
bound
mov
xor
mov
sub
cltd
test
sub
int3
insb
sub
out
out
xor
inc
ficoml
jno
xchg
xchg
mov
insl
test
xor
sub
loope
mov
scas
rorl
mov
and
xor
adc
pop
inc
push
cmp
cmpb
imul
add
movsl
mov
lock
jbe
jmp
mov
add
int3
mov
scas
and
lcall
test
shll
cmp
sbb
add
xchg
dec
cmp
jecxz
sub
sti
in
addr16
adc
xor
or
inc
test
out
jmp
scas
cltd
cmp
or
jne
movsl
outsl
sub
mov
push
fwait
popa
or
sub
xchg
cmp
cmpsl
pop
mov
jecxz
das
add
repz
scas
jecxz
ljmp
inc
jno
loope
mov
movsl
mov
sbb
aaa
and
and
out
mov
gs
mov
movsb
lock
test
xchg
loopne
neg
adc
addl
jno
es
or
mov
sub
pop
pusha
pop
pusha
mov
mov
orb
clc
jbe
xor
pop
or
jl
idiv
out
into
test
mov
jns
rorb
xor
outsl
outsl
push
aas
or
mov
daa
cmc
pop
sbb
and
stc
xchg
jno
sub
cmpsl
in
ss
push
push
dec
jb
inc
cli
mov
ret
jo
sbb
out
jecxz
xchg
fmull
out
mov
incb
mov
in
inc
iret
das
adc
lahf
out
inc
scas
jae
iret
jnp
push
cmpsl
adc
cld
push
repz
push
jno
lahf
mov
mov
repz
dec
inc
fmull
dec
adc
xor
pop
mov
aaa
imul
aas
test
jle
daa
jne
daa
ja
xorl
adc
cli
add
sub
popa
jp
scas
sbb
rorb
ret
mov
jo
bound
call
repz
xor
cmp
cmp
arpl
iret
mov
cli
popf
pop
hlt
ds
sbb
dec
outsl
jmp
mov
dec
bound
push
sti
mov
hlt
or
push
andb
lcall
pop
sub
ret
stos
outsb
popl
out
jae
ret
jae
sbb
mov
ljmp
in
mov
int
jl
mov
cmpsb
pop
arpl
cwtl
mov
add
jg
sub
jle
jo
adc
scas
or
sbb
add
sbb
and
rorl
outsl
sub
incl
mov
mov
mov
and
sub
xlat
and
test
in
jb
into
jge
push
scas
xor
add
in
or
insb
or
fwait
xor
sub
cmp
rol
pop
das
mov
aas
call
jl
sub
outsl
mov
cwtl
je
push
mov
sbb
dec
ja
movsb
sub
dec
xor
add
mov
arpl
mov
sbb
enter
lahf
jge
das
cmp
or
and
insb
add
in
mov
push
ret
movsl
lds
push
jle
or
int3
cmpsb
outsb
add
xlat
int
cld
cmp
xor
pop
test
push
adc
and
inc
add
fsubrp
divl
out
xor
inc
jno
js
dec
jb
test
add
and
jg
out
dec
fwait
daa
fildl
test
mov
sbb
stos
hlt
ret
pop
mov
icebp
mov
test
jno
bound
js
or
dec
arpl
cs
sub
add
insb
mov
stos
mov
bound
jno
aas
rclb
mov
cwtl
sub
and
cld
lret
loopne
flds
bound
sbb
ljmp
and
mov
xor
adc
sbb
mov
jbe
enter
insb
jle
lret
mov
mov
xor
push
push
enter
cmp
mov
int3
das
pusha
testl
cmc
inc
mov
dec
into
pop
sub
sbb
add
insb
out
out
out
icebp
lock
fdivl
fucomi
pop
stos
lahf
push
inc
jle
xor
sub
mov
cs
nop
jns
lcall
mov
and
outsl
cmc
leave
inc
sub
or
add
out
jp
jo
add
dec
inc
adc
stos
not
xor
lock
shll
sub
neg
out
out
adc
daa
lret
push
cs
add
sbb
jp
and
insb
outsl
mov
sbb
mov
jmp
mov
outsl
cmp
mov
mov
cmpsl
and
lret
lret
mov
fisubrl
mov
and
mov
mov
fstpt
xor
loope
ljmp
lret
xor
mulb
mov
inc
push
push
das
and
mov
and
cmp
fcomi
std
xlat
jle
jnp
into
cli
cmp
ja
push
imulb
out
push
imul
fbld
or
fsubl
mov
jne
out
clc
adc
stos
xchg
adc
jbe
test
in
into
sub
sub
and
and
add
imul
fs
es
ss
loop
in
std
dec
mov
sub
pop
enter
sub
adc
pop
push
and
cmp
ja
out
pop
adc
ja
stos
jb
sbb
or
mov
xchg
outsb
cs
test
rclb
mov
and
mov
add
addb
adc
fs
out
fistpl
and
dec
xchg
hlt
pop
sbb
insb
icebp
fstpt
out
je
pop
in
jo
and
arpl
sub
pop
lods
scas
lods
or
sub
mov
jbe
xor
adc
inc
sar
xchg
jle
pop
ja
xor
pop
loope
bound
and
mov
lods
bound
dec
or
cmp
jmp
mov
fnstsw
push
add
ja
mov
in
mov
in
mov
add
dec
jns
leave
xchg
loopne
xchg
test
cmp
rcl
addr16
addr16
repnz
adc
insb
addr16
jnp,pt
mov
or
fsubrl
dec
negl
and
test
shr
sub
cmp
or
cmc
jecxz
aas
sbb
movsl
lea
adc
jne
aas
push
xor
test
mov
scas
fnstsw
inc
inc
icebp
jl
or
xor
cwtl
jae
outsl
and
outsl
ret
int
aaa
outsl
adc
dec
sub
imul
sbb
or
sub
pop
dec
jl
jo
daa
aas
push
fisttpll
scas
lahf
pushf
mov
sbb
movsb
pop
jae
push
cmp
daa
hlt
mov
aas
mov
pop
add
ret
pop
xchg
mov
leave
testb
test
jno
sub
dec
jo
cs
dec
mov
aad
in
mov
loope,pt
or
cmc
enter
add
icebp
jl
lock
push
jge
pop
out
jae
add
mov
stos
dec
inc
popf
xor
out
adc
das
int3
jp
sbb
jno
cmp
mov
lock
nop
fwait
mov
and
insl
testb
sub
sti
xor
icebp
dec
int3
shll
out
jl
add
lods
ret
fsubrl
mov
or
scas
iret
sbb
push
into
dec
repnz
adc
mov
and
sbb
sub
out
sub
sbb
outsb
dec
mov
xchg
xchg
sub
dec
aam
gs
ret
push
xchg
or
fs
cmp
and
or
test
jne
xor
aas
mov
clc
cltd
mov
dec
into
xchg
xor
push
mov
sbb
int3
aas
mov
ja
add
iret
mov
cmp
cmp
out
or
repz
or
xor
adc
sub
dec
and
xor
cltd
sub
movsl
in
mov
sbbb
mov
inc
shrl
cs
loope
imul
cmp
js
jge
and
clc
mov
sbb
icebp
or
push
pop
cs
push
loopne
push
in
in
out
stos
enter
lock
int
inc
adcb
hlt
int3
mov
mov
push
xchg
or
mov
inc
out
jbe
mov
ret
mov
sbb
mov
inc
insb
adc
js
lock
mov
lret
push
sbb
xchg
lock
pop
pop
xor
or
cmc
add
mov
aas
dec
mov
lcall
mov
movsl
sub
outsb
dec
in
in
sbb
out
inc
rcrl
aaa
jns
test
loopne
cmp
test
popa
aaa
aaa
mov
lret
je
cmp
in
out
mov
dec
outsb
jl
xor
add
fidivs
mov
sub
push
sub
and
ss
mov
cs
jns
mov
jp
add
or
push
push
mov
cmpsb
pop
cld
cmp
jmp
sub
popl
xchg
ja
fldlg2
fnsetpm(287
clc
cs
sahf
imul
xor
sub
sbb
mull
es
sti
mov
ja
jb
jno
mov
out
cmp
jne
outsl
sbb
inc
scas
orb
repz
xor
add
out
and
ficompl
xchg
pop
jg
test
cmc
scas
and
scas
call
pop
add
or
inc
xorb
add
cmp
lock
push
sbb
repz
jp
fcomps
xor
or
inc
imul
pushf
push
sbb
mov
push
and
out
fs
mov
cmp
dec
xchg
push
add
out
dec
fmull
sbb
cwtl
cwtl
jle
fwait
pop
cmc
lods
xor
jl
xchg
mov
inc
das
movsl
adc
in
das
add
insb
pop
icebp
and
mov
xchg
sahf
int
sbb
roll
jno
inc
push
roll
cmp
lcall
push
stos
sub
jae
inc
push
sbb
mov
mov
mov
insl
cld
mov
aam
mov
clc
stos
jnp
sbb
scas
sub
nop
enter
adc
jno
fisttps
and
aas
dec
sub
and
loopne
gs
jle
mov
insb
es
sti
jno
push
ret
lahf
dec
out
ffree
inc
outsb
scas
adc
sbb
fldenv
jge
pop
mov
jmp
loop
shll
jno
xor
clc
xorb
jg
adc
addb
daa
mov
or
mov
stos
jnp
sub
cmp
lret
scas
jl
xlat
xchg
xchg
sub
loope
mov
cwtl
scas
cmp
decl
adc
push
sub
out
mov
sbb
scas
mov
pop
ret
das
push
mov
out
or
jb
arpl
adc
jg
test
negb
roll
fdivl
gs
lods
imul
adc
sub
scas
repz
mov
mov
ja
pop
add
in
add
dec
add
rolb
scas
and
in
insb
sub
mov
icebp
push
mov
outsb
out
or
push
in
sbb
jg
data16
xor
icebp
mov
jl
mov
int
mov
lea
sti
test
mov
insb
sti
ret
and
sub
xchg
clc
pop
mov
lahf
mov
daa
das
mov
jbe
pop
sub
sub
push
ljmp
xor
or
and
push
pop
mov
jae
xor
out
pop
cs
fcoml
lret
bound
ret
add
xor
clc
pop
jg
subl
sti
sub
lods
mov
ja
or
dec
andb
test
cmpsb
add
faddl
inc
outsl
scas
fnstenv
adcb
or
les
outsl
stos
inc
out
dec
je
pop
mov
in
aam
or
dec
lods
icebp
sub
test
gs
scas
mov
cld
cmp
das
out
sub
xor
icebp
stc
in
jg
bnd
sti
mull
or
push
stc
in
xchg
sbb
add
sbb
sti
add
mov
setae
sub
iret
or
xchg
mov
add
push
pop
into
jno
adc
sbb
or
push
and
fdiv
sarl
pop
fisttpl
and
mov
mov
push
fisubl
push
adc
xor
jecxz
roll
aaa
je
scas
ret
popf
and
mov
mov
sbb
ret
lahf
js
push
hlt
out
push
ja
addl
pop
cmc
cmp
sbb
xor
fstpl
leave
jge
fwait
xchg
sub
inc
sbb
out
stc
ror
mov
mov
lods
cmp
scas
jp
int3
fs
das
dec
mov
daa
sbb
xchg
cmp
dec
ret
pop
sti
jle
ja
into
xor
push
int3
xor
imul
insb
jmp
je
mov
out
push
jmp
lock
pushf
test
dec
repnz
pop
outsl
cmp
jg
sbb
or
scas
adc
add
pop
inc
mov
popa
or
repnz
icebp
daa
pop
mov
hlt
das
push
dec
aaa
stos
mov
js
dec
cmp
and
scas
sub
mov
inc
enter
dec
sub
dec
das
mov
cmp
sbb
popf
inc
mov
sub
aam
cmp
ret
adc
pop
xchg
das
jbe
lea
and
mov
mov
mov
scas
push
xchg
scas
jo
jae
cmp
sbb
shr
in
xor
cwtl
push
loopne
repz
xor
pop
jge
or
dec
out
xchg
rcrl
jp
sti
lret
rcrl
adc
xor
stc
popf
sbb
pop
cmp
and
jo
sub
adc
bound
push
ja
icebp
repz
pop
add
adc
dec
cli
sub
imul
mov
out
inc
rorb
cli
inc
movsb
xchg
dec
es
ret
mov
pusha
lcall
aam
cmp
dec
sub
lea
adc
jb
jl
add
fdivrl
leave
js
ds
cmp
adc
sbbl
sbb
and
xchg
icebp
mov
negb
sub
xlat
scas
scas
fbld
jp
mov
ret
int3
pop
repz
add
cmp
mov
jge,pt
push
aas
xor
push
lods
cmp
lret
and
mov
dec
insb
bound
out
stos
loop
dec
jmp
push
cmp
push
cs
ds
sbb
incl
nop
shrb
mov
add
inc
fwait
mov
test
imul
imul
mov
push
sub
jmp
int3
and
mov
pop
test
or
into
mov
xor
loopne
or
js
jno
out
insl
inc
sbb
in
test
orl
std
mov
out
sbbb
addr16
out
sub
pop
scas
scas
mov
test
push
cmc
rolb
jo
orb
sub
lea
movsbl
test
sti
add
call
dec
or
fidivl
iret
cld
mov
xchg
xchg
mov
push
in
pop
mov
pop
sbb
imul
fwait
in
nop
push
dec
xchg
push
jb
imul
gs
in
push
ja
lods
mov
and
mov
push
shlb
jl
jo
adc
sub
rep
pop
lods
lock
std
lret
insl
dec
insl
mov
xor
shrl
cmp
cmc
popf
add
outsl
insb
xchg
push
jne
inc
cmpb
jl
fidivs
push
and
jp
decl
mov
movsl
mov
mov
gs
cltd
sbb
cmp
jg
sub
mov
push
outsl
and
hlt
mov
cltd
sub
movsb
imul
dec
subl
sti
cmp
lcall
jbe
lret
jl
scas
dec
in
jl
das
aas
imul
ljmp
outsb
pop
ja
mov
aaa
jl
inc
in
repz
pop
test
and
les
xor
fidivrl
icebp
imul
fwait
pop
jmp
mov
lods
inc
outsl
in
sar
inc
adc
jle
and
divb
cli
lods
sahf
dec
aas
and
cmp
sub
in
rclb
cld
hlt
push
jge
mov
fcomi
dec
sti
std
jo
fsubrl
push
movsl
push
adcb
or
mov
lcall
pusha
popa
mov
jmp
sbb
xor
mov
and
xor
adc
sub
adc
jo
and
sbb
sbbl
add
lahf
sti
sbb
addr16
pop
das
cmc
sbb
rep
cld
imull
insb
push
adc
popa
jno
std
lock
int3
clc
insl
repz
cmp
add
xchg
lret
add
and
out
jecxz
adc
xor
xchg
test
fdivrl
xchg
jg
icebp
out
lret
xchg
repnz
pop
cmc
roll
and
inc
andb
pop
dec
cmp
mov
jl
scas
and
mov
fwait
push
outsb
and
cmp
jge
movsb
in
pop
clc
mov
xchg
insl
out
sub
jno
push
add
add
ss
out
stos
nop
fwait
adc
xchg
or
sub
arpl
mov
andl
psubsw
repnz
dec
add
cld
adc
mov
xor
sarb
imul
jae
xorl
pop
orl
mull
jle
bound
cli
xor
rorl
pop
sbb
jae
aas
hlt
sbb
sub
fldcw
adc
or
and
movsb
es
in
inc
fsubs
lock
jecxz
cmp
int3
push
gs
ret
outsl
jl
mov
mov
loope
loopne
in
mov
push
and
xchg
hlt
xchg
sbb
movsb
or
jbe
xchg
mov
push
push
mov
cmc
or
mov
add
test
aas
push
jnp
out
sbb
push
pop
fidivl
popa
insl
xor
jo
fdivs
pop
pushf
xor
ja
pop
or
jo
xchg
movsb
in
dec
inc
push
add
xchg
stc
or
scas
dec
jle
sbb
mov
dec
jo
jl
dec
inc
pop
orl
mov
inc
lahf
sbb
mov
lahf
gs
pop
sbbl
inc
dec
jp
jle
dec
cmp
loope
cli
jle
cmpsl
sti
mov
cld
jp
adc
in
std
jp
inc
mov
dec
inc
xor
ljmp
adcl
mov
mov
add
inc
sub
out
incb
scas
sbb
mov
pop
or
xor
jnp
cmpsl
lock
jg
adc
xor
or
lcall
or
ss
stos
std
jp
or
scas
shl
in
push
jnp
jo
mov
daa
lds
push
jns
xor
pop
push
imul
push
and
loopne
lret
mov
jae
shr
sbb
jne
iret
pop
push
pusha
das
mov
stos
test
xchg
and
decl
mov
add
inc
outsb
leave
fsts
test
inc
shrb
push
mov
in
mov
scas
dec
scas
fldenv
das
cli
sub
jb
cmp
xlat
pop
dec
or
outsl
ficoml
sub
pop
mov
cmpsl
add
packuswb
dec
add
xor
cs
shl
fists
daa
gs
xor
cmpl
pop
nop
jbe
cld
insb
and
lods
cmp
push
xchg
arpl
insl
inc
mov
and
or
jnp
iret
pop
ljmp
adc
lcall
or
lcall
inc
jno
or
lods
sbb
insb
xrelease
or
mov
pushl
add
enter
ret
imull
in
jle
pop
sub
jecxz
out
clc
mov
xchg
jo
add
pop
dec
xor
push
out
popa
inc
push
sub
pushf
mov
jnp
pop
or
ret
cmp
in
push
sbb
arpl
xor
mov
cltd
out
or
sbb
push
int
adc
test
and
test
and
push
sbb
cmp
dec
jle
jge
aas
sbb
inc
sbb
repnz
int
es
push
pop
pop
out
xchg
push
cli
pop
ficoms
cmpsb
xor
imul
cmpsl
push
sbb
jnp
push
jno
repnz
jns
das
or
outsb
and
mull
repz
mov
scas
cmpsb
sbb
cmpb
je
mull
dec
jns
jo
push
test
call
lock
stos
jae
pop
testl
lea
rcl
mov
aam
ret
or
cmc
pushl
xchg
aas
in
icebp
adc
mov
das
mov
in
cmpsb
adc
negl
in
push
push
stos
mov
push
js
sub
sub
mov
in
jo
fwait
in
jb
push
dec
cmp
dec
test
jo
and
outsl
test
jae
mov
lcall
mov
jecxz
push
jle
sti
imul
in
or
mov
nop
mov
mov
dec
mov
insb
scas
cwtl
pop
repz
std
icebp
sub
iret
xchg
ljmp
imul
mov
insb
outsl
out
scas
flds
dec
gs
icebp
xchg
in
and
testb
jge
ret
dec
les
dec
enter
stos
xorb
lds
push
lds
push
mov
jb
xchg
lods
test
fisttps
mov
dec
cwtl
loopne
sub
jno
xor
dec
mov
dec
incl
fmuls
scas
push
dec
insb
pop
sub
dec
stos
mov
xlat
push
jns
sbb
mov
jg
hlt
xor
shll
pusha
aas
dec
fisubrs
icebp
mov
dec
cmp
sbb
pop
or
outsb
int3
xchg
gs
aad
fildll
jp
lret
fnstsw
out
loope
fstps
sti
jno
andb
icebp
test
mov
sbb
mov
idiv
pop
aaa
mov
test
mov
mov
jo
jg
inc
mov
imul
repnz
ds
xchg
mov
repz
in
sub
std
mov
out
inc
dec
out
cmp
test
push
cmc
lret
pop
and
std
test
sbb
and
lods
hlt
aad
loope
jb
lods
scas
je
imul
orl
dec
scas
lods
sub
push
popa
add
adc
sahf
ret
les
xor
cmp
movsb
jle
mov
out
xor
push
add
push
sub
test
test
fsubs
xlat
hlt
add
push
or
hlt
and
cmc
mov
gs
sub
sub
insb
sub
in
ja
in
movsb
mov
lcall
dec
vpsllw
mov
fstps
daa
repz
add
insb
sub
xor
mov
leave
jecxz
jb
sub
dec
shrl
aaa
xchg
sub
int3
inc
sub
es
mov
pop
cld
cmp
xchg
jne
xchg
dec
out
stc
jno
push
mov
push
sbb
jg
jo
cmp
fimuls
nop
lcall
scas
ds
sahf
mov
dec
add
addr16
insb
add
fiaddl
hlt
sub
sub
sub
stc
sbb
jge
hlt
enter
sub
outsb
testb
push
sub
je
roll
cmc
mov
or
cmp
mov
or
in
dec
out
xchg
scas
xor
aam
sub
pop
dec
outsl
mov
jne
jg
xor
mov
das
dec
inc
call
fstpt
fsub
xchg
inc
rclb
xor
je
dec
push
ret
ja
shlb
mov
pop
popa
xor
xor
imul
or
mov
jo
jp
fiaddl
fwait
xchg
nop
mov
adc
push
rorb
dec
ficoms
popf
out
mov
imul
xchg
mov
mov
insl
repnz
sbb
jmp
push
sub
ror
in
inc
ret
inc
imul
push
testl
nop
cltd
mov
pop
inc
loope
test
mov
frstor
push
out
sbb
push
pop
dec
outsl
addr16
sbb
cmp
cmpsl
or
mov
sbb
or
cli
outsl
out
lcall
into
incb
sub
push
js
push
pop
mov
pop
sbb
mov
arpl
loop
das
jb
push
loope
iret
fimuls
sub
cld
stc
nop
jl
addl
mov
jnp
sbb
fwait
test
into
push
pop
or
xchg
das
cmp
sub
sbb
sub
test
lea
xchg
out
stos
jae
mov
xchg
imulb
xchg
mov
add
rorl
mov
das
fxch
fldenv
test
ss
mov
mov
mov
sub
test
or
cmp
flds
mov
sbb
add
add
dec
add
es
mov
xor
mov
adc
nop
sub
ja
out
into
pushf
fldenv
push
out
fs
push
andb
pop
movsl
mov
xor
pop
imul
clc
push
ret
dec
fadd
xor
mov
inc
cmp
roll
int3
je
inc
es
sarl
inc
jle
andl
sub
mov
cmc
xor
loopne
mov
pop
pushf
pop
inc
mov
cltd
pop
sti
or
hlt
adc
addr16
lahf
push
adc
out
mov
jne
clc
pop
xorl
scas
or
rorl
jle
dec
test
out
dec
push
ret
inc
cmpsl
dec
pop
repz
xchg
jge
aam
repz
jbe
jle
sbb
dec
mov
xchg
jnp
and
test
mov
push
mov
call
xor
and
cld
jg
xchg
dec
mov
in
std
push
mov
js
ja
nop
jecxz
mov
addr16
mov
fistl
push
pop
scas
dec
scas
sti
repnz
add
out
fisubrs
push
dec
aas
pop
jb
daa
pop
mov
pop
lock
pop
mov
rorb
add
aaa
cmp
shll
fwait
and
dec
mov
push
lahf
repz
mov
mov
aas
repnz
lock
mov
jge
xchg
pop
jge,pt
add
mov
sbb
jecxz
imul
or
cltd
xchg
xlat
ret
es
fwait
jmp
sbb
and
mov
jecxz
sub
loope
mov
push
pusha
in
jae
movsl
sub
jae
mov
dec
repz
mov
fs
cmpsb
mov
sbb
dec
push
data16
mov
enter
iret
sub
outsl
xchg
ss
jo
sub
loopne
fiaddl
mov
ret
mov
jae
insb
adc
shrb
out
in
or
xchg
pop
xchg
outsl
or
loopne
movsl
mov
jo
xor
int3
or
push
fildll
incl
sub
fsubrs
cmp
aaa
or
xor
jo
mov
add
rolb
pop
push
roll
movsb
sahf
sarb
cmp
repnz
insl
jp
insl
adcl
leave
lock
outsl
xor
cmp
sub
leave
mov
fwait
scas
shlb
adc
and
inc
es
xlat
ss
lock
fwait
adc
cmp
dec
or
dec
pushf
add
pop
xor
and
inc
arpl
adc
daa
push
loopne
int3
or
lods
ret
in
ss
xlat
icebp
sub
xor
push
movsl
jl
lahf
push
repz
out
ljmp
in
jne
jl
xor
inc
addps
into
ja
dec
or
dec
out
out
fidivrs
pop
aaa
mov
cmc
int3
sub
insb
push
jl
dec
jne
jmp
movsl
mov
and
push
jl
jb
jb
sub
fiadds
mov
andb
lock
outsl
or
aad
pusha
adc
sub
inc
cmp
daa
push
or
icebp
mov
jl
push
lea
or
iret
pop
out
sub
fsts
pop
pop
scas
call
mov
shll
pop
mov
stos
insb
sbb
in
dec
dec
sub
outsb
mov
insl
in
or
aaa
testl
dec
mov
mov
pop
outsb
mov
mov
mov
fistpl
in
mov
sahf
dec
add
fstps
sbb
out
repnz
mov
and
arpl
xor
or
jmp
adc
mov
mov
sbb
rcll
adc
push
jns
add
pop
movsb
pop
and
xlat
mov
out
in
stos
popa
or
adc
lods
xor
inc
jae
shl
pop
adc
hlt
loopne
sub
inc
hlt
and
inc
or
test
fwait
mov
shll
and
call
jmp
lahf
insl
ret
or
arpl
cmp
mov
out
mov
stos
test
push
pop
test
pop
add
inc
xlat
movsl
xchg
push
rorl
shl
fs
mov
jb
inc
ret
cld
jno
or
sbb
test
lahf
mov
xchg
jne
sub
pop
notl
cmp
loope
fwait
mov
iret
mov
or
jg
sub
mov
mov
cwtl
in
lock
xchg
mov
cmc
add
xlat
jg
into
pop
dec
jg
fistl
scas
add
shrl
hlt
std
push
xchg
in
outsb
dec
xor
push
jl
cmc
mov
mov
aaa
out
out
clc
in
aad
xor
add
dec
push
int
roll
jb
push
das
xchg
testb
adc
or
and
ror
call
add
mov
and
inc
mov
sub
mov
mov
rorl
lock
dec
inc
dec
mov
dec
hlt
inc
cwtl
push
test
fs
stos
cmc
mov
pop
ss
jg
cmp
cmp
pop
sar
sub
cmpsl
xor
mov
jmp
movsl
js
adc
or
ss
dec
push
mov
cmpsl
sar
arpl
mov
lock
cmp
out
aam
scas
add
dec
cmpsb
mov
adc
call
jno
cmp
add
andl
lock
loope
sbb
or
leave
jge
sub
test
cmp
mov
or
pop
pop
mov
and
in
scas
lcall
insb
in
mov
mov
dec
hlt
sarl
ja
dec
fbstp
lods
and
push
scas
cwtl
pop
jp
inc
insl
imul
aam
sarb
leave
jo
int3
push
out
fisubrl
xor
mov
sbb
or
mov
scas
in
shrl
pop
testl
jp
int
jl
insb
test
mov
sub
cmp
xor
addr16
mov
fistl
cmp
cltd
mov
cmp
adc
fwait
out
dec
mull
iret
out
cmp
adc
jno
sbb
jnp
push
push
add
mov
sub
push
clc
xchg
loop
outsl
nopl
aaa
adc
cmp
cld
cmp
call
lea
hlt
leave
scas
mov
and
addl
add
orl
push
or
or
xchg
dec
mov
cmc
and
popf
mov
out
fisubl
xchg
mov
out
ja
sbb
xchg
icebp
cs
jae
shl
divb
push
cmc
add
icebp
ja
sbb
adc
xor
mov
adc
sbb
or
cltd
shrb
rcrl
orl
sub
outsb
pop
ljmp
icebp
and
or
add
xchg
sub
lock
scas
daa
cmp
and
push
dec
jo
mov
pop
cltd
rcrl
lods
jbe
fildl
stos
adc
xchg
cld
mov
or
mov
mov
lcall
je
jnp
sub
scas
lods
aas
ret
hlt
mov
daa
out
into
sbb
outsl
rcrl
jbe
pop
push
sahf
add
rcrl
jbe
and
cs
inc
cld
jle
out
fnsave
jnp
decl
xchg
mov
xor
es
mov
mov
add
or
pushf
mov
sub
gs
lods
call
xor
push
in
decb
aaa
mov
mov
shll
and
mov
dec
roll
sbb
and
pop
or
push
sbb
mov
cltd
daa
ljmp
icebp
adc
daa
adc
cli
mov
das
outsl
lret
sub
push
jp
shl
adc
lret
out
std
mov
xchg
fmuls
das
mov
sub
or
movsl
fildll
bound
imul
sub
sub
fistpl
sbb
sahf
mov
and
xor
adc
rorb
out
dec
lcall
inc
xor
loope
out
and
push
stos
das
scas
scas
xlat
shrl
xor
sahf
dec
iret
mov
mov
mov
mov
sbb
out
jmp
sub
daa
cmp
dec
sub
decl
dec
scas
cmp
dec
mov
dec
lahf
movsb
pop
loope
mov
in
frstor
add
pop
dec
cwtl
movsb
ds
add
jg
imul
out
xor
sub
movsl
xchg
gs
jae
nop
ja
mov
sub
mov
sti
in
xorb
mov
xchg
push
push
gs
sub
jmp
fucomp
jle
dec
scas
mov
daa
fisttpl
and
cmp
and
and
shlb
jg
adc
pushf
imul
fcomps
jle
sub
push
sub
aam
pop
ljmp
ljmp
pop
sbb
sub
fisttpl
sub
jno
mov
jmp
rorb
and
arpl
popa
scas
in
fidivl
aaa
test
or
xor
shll
xchg
inc
pop
adc
mov
in
xor
xor
rclb
adcl
jnp
ret
adc
enter
shr
pop
cs
ret
adc
fstl
cmp
stc
test
aas
add
shl
pop
dec
inc
mov
push
lods
mov
roll
insl
lock
push
add
aas
das
add
subb
mov
cs
or
inc
movsl
and
hlt
push
inc
imul
pop
fwait
dec
out
or
std
lret
pop
xchg
push
and
xchg
out
adc
repz
mov
pop
mov
inc
je
ja
jmp
dec
rolb
and
push
sahf
xchg
movsl
aam
and
popa
mov
outsl
test
mov
sbb
das
xor
test
or
mov
sbb
mov
scas
sbb
mov
xchg
sbb
aas
mov
xor
mov
adc
adc
xchg
jmp
iret
popf
push
mov
in
stos
or
aad
and
xor
add
stc
and
mov
aas
std
popa
jle
add
add
xlat
hlt
ret
and
shrl
push
jns
jp
push
xchg
dec
popa
imul
icebp
in
add
out
pusha
test
mov
cmp
fiaddl
xor
or
push
sub
push
and
out
mov
addb
rcr
std
jnp
xchg
jno
ss
lea
lods
cmpsb
ja
in
jl
xchg
add
dec
mov
mov
push
call
cwtl
cmpl
out
jo
sbb
cwtl
xchg
push
repnz
subl
cmp
dec
jle
rcr
xchg
sar
xlat
xchg
dec
cmc
ds
cmpsl
jecxz
and
xor
and
lock
and
insb
xchg
gs
pop
and
mov
inc
and
xlat
xchg
or
mov
xor
jmp
pop
cmp
mov
jl
mov
adcb
adc
add
and
fcompl
sbb
push
pop
mov
daa
mov
popf
fdivrs
idivb
das
jge
lock
sub
xor
pop
mov
andl
clc
out
mov
test
jns
loope
and
jo
pop
pop
pop
push
sbb
or
rcr
mov
add
push
aad
or
addl
or
add
stc
loopne
sub
xor
repz
push
rorl
aas
loope
mov
mov
cmp
jns
js
ds
imul
jo
dec
mov
inc
fiadds
inc
dec
shl
jle
xor
adc
out
fcompl
lods
fwait
xlat
or
cmpsl
push
cmp
cwtl
sbb
or
xor
aas
inc
mov
mov
pop
xor
mulb
js
fnsave
pop
int
std
xor
data16
data16
inc
stc
cld
stc
mov
add
repz
sub
outsb
ret
out
push
repnz
and
cmc
flds
flds
sbb
mov
rcr
mov
xor
xor
pop
push
andb
out
or
repnz
fsubrl
jnp
mov
mov
or
cmp
jbe
cwtl
mov
and
shlb
or
xor
xchg
not
xchg
mov
imul
mov
adc
or
jg
std
movb
dec
jl
mov
ja
jp
icebp
lahf
inc
jbe
adc
and
lods
fnstsw
jae
mov
aam
cli
cltd
pop
or
jns
pop
xchg
fstps
sbb
push
mov
lret
mov
insl
nop
dec
mov
ljmp
sarb
shll
jp
adc
xchg
stc
loopne
sbb
jbe
or
insb
dec
fisttpll
push
into
shrb
daa
cltd
es
mov
or
insb
es
stc
out
jne
repnz
outsb
pushf
rorl
jnp
jne
stc
jnp
jne
scas
jnp
xor
scas
or
sbb
sub
ret
loopne
mov
pop
dec
jne
jne
lods
cmp
lea
cli
cmp
sbb
jp
lods
and
jnp,pt
jns
mov
add
cmp
fidivs
pop
call
aaa
xor
int3
pushf
lock
or
cmp
and
mov
push
repz
lods
es
hlt
repnz
mov
and
push
jmp
inc
sar
xor
cmp
call
or
mov
sub
test
mov
inc
pop
rorb
stc
and
sbb
dec
aad
pushf
inc
adcb
rcll
sbb
cmp
xchg
test
xor
test
jl
add
stos
dec
lods
dec
addr16
inc
inc
cwtl
inc
gs
fisubl
out
mov
aam
out
scas
or
add
addr16
add
mov
xor
stc
xor
out
adc
mov
sub
add
pop
mov
stc
in
test
loope
scas
outsb
cmp
xchg
sbb
lods
leave
call
xchg
popa
jne
insb
mov
inc
or
jae
negl
outsl
pusha
adc
out
icebp
idiv
sbb
or
stc
sbb
hlt
movsl
ja
das
sub
xor
add
cmpl
jae
testl
pop
dec
test
aaa
mov
fstpl
out
dec
ja
shll
pushl
idiv
add
jp
cmp
addr16
daa
adc
jo
test
cmp
mov
insb
mov
fs
hlt
hlt
inc
scas
cmp
dec
cmc
lea
adc
sbb
out
sbb
adc
call
std
notb
mov
cmp
adc
cmc
push
enter
lds
stos
xchg
xchg
mov
mov
cmpsl
out
pop
adc
sub
sbb
sub
ficoml
dec
add
gs
orl
sti
movsb
jae
jb
imul
cmc
add
mov
std
jp
int3
mov
iret
stos
lods
clc
vcvtsd2si
les
adc
out
dec
and
dec
cmpsb
lret
or
xor
mov
or
xor
aam
jae,pt
hlt
cmp
add
dec
xor
xor
loop
jp
sbb
jl
outsl
icebp
pop
or
gs
sbb
in
cmp
pop
cmp
inc
insl
cli
je
divl
clc
ds
ja
stos
sti
or
pop
mov
orb
or
xchg
pop
insb
xor
ud2
nop
xchg
sahf
pop
xor
cltd
push
out
pop
cmpsl
push
mov
pusha
adc
sbb
js
mov
mov
rcrb
cmp
dec
out
into
pop
int3
mov
das
outsb
in
sub
sbb
jbe
insb
inc
repz
cmc
incl
jmp
clc
jp
mov
mov
jp
lcall
fcmovu
scas
jmp
arpl
lods
xchg
jl
insl
xor
sarl
or
test
in
adc
fcmove
cltd
xchg
or
mov
mov
or
push
insb
repz
cmc
mov
out
idiv
std
or
aas
in
inc
in
repz
es
repnz
repz
push
icebp
sbb
jno
leave
cmpsb
or
inc
icebp
out
mov
cmc
out
sub
xchg
fisttps
dec
out
sbb
push
cld
push
jno
insb
push
out
jbe
xor
mov
sub
fdivs
mov
and
push
fistpll
out
xchg
mov
mov
adc
repz
rcrb
sahf
adc
fildl
cvttps2pi
jno
icebp
jno
out
repnz
xor
and
cli
stc
or
nop
popa
das
testl
les
gs
insl
imull
out
sub
cs
int
or
mov
sub
push
add
xor
dec
sub
jmp
xor
imul
gs
decb
jl
fcmovnu
pop
mov
jae
cmpsl
imul
lret
xor
jns
fiaddl
xor
inc
cld
push
jae
enter
add
arpl
cld
test
jnp
mov
addb
aaa
gs
inc
test
rcrb
inc
into
mov
mov
sbbb
adc
dec
arpl
dec
clc
flds
loop
cmpl
into
dec
cmp
mov
call
div
jnp
repz
mov
lods
popa
shll
das
mov
loope
call
sub
mov
das
ret
out
aad
xchg
pop
add
dec
jb
xchg
jmp
insl
or
mov
adc
insb
mov
push
in
sub
cwtd
jle
push
pop
push
dec
push
mov
incl
or
ss
jno
xchg
inc
sbb
jo
in
test
xor
push
pop
add
cltd
and
mov
sub
sbb
pushf
repnz
test
xchg
pop
add
scas
imul
std
xchg
sub
rcll
mov
pop
stos
pop
lret
ret
mov
xor
test
adc
or
fwait
in
scas
push
shll
push
js
xor
rorb
sub
and
add
aas
stc
out
xadd
mov
cmc
rolb
inc
jecxz
repnz
nop
mov
mov
inc
xchg
lcall
mov
stos
gs
xorb
push
mov
rep
pop
xor
pop
arpl
leave
jae
mov
dec
jge
adc
ret
mov
leave
popf
nop
mov
sbb
sti
sbb
add
mov
enter
jns
lock
adc
inc
push
outsb
mov
and
mov
push
pop
adc
fldenv
repz
hlt
adcl
mov
inc
bound
test
popa
sub
xchg
fldenv
ljmp
mov
and
std
lods
jl
xchg
roll
cld
out
pop
pop
mov
icebp
add
fidivrs
add
ljmp
inc
xchg
fcmovb
dec
aad
push
xchg
jae
push
adc
and
in
out
xchg
test
cwtl
jbe
iret
shr
shrb
nop
aas
add
arpl
add
lret
cmp
jle
stos
mov
dec
hlt
ljmp
mov
cmpsb
jge
adc
pop
inc
mov
adc
punpckhbw
cmc
mov
fs
sub
jne
jmp
lods
popa
jge
push
test
cmp
xchg
test
cmp
imul
mov
mov
decb
stos
mov
sbb
sbb
repz
dec
lret
shrl
outsb
in
shrb
adc
dec
jne
jle
imul
inc
pop
inc
pop
mov
dec
mov
dec
das
adc
dec
adc
call
orl
int
das
xor
dec
fwait
out
rorb
imul
or
lods
pop
push
repnz
or
mov
pop
int3
sub
xor
repz
lods
push
out
cmp
mov
cs
xchg
dec
into
clc
pop
lret
shll
sub
lret
hlt
adc
pop
into
pop
sbb
stos
dec
gs
fimuls
mov
out
leave
mov
mov
push
dec
fcompl
adc
outsl
clc
dec
movsl
or
jbe
cmp
fdiv
mov
inc
dec
xor
scas
loop
insb
push
adc
jbe
cs
xchg
push
rcll
shl
mov
jo
int3
cmp
mov
mov
aam
jecxz
and
fwait
pop
fcoml
sub
int3
js
or
add
dec
jo
and
and
xor
scas
push
ljmp
leave
loopne
and
cld
mov
lahf
mov
pop
in
adc
sbb
dec
cmp
mov
outsb
and
adc
or
mov
mov
xor
sub
stc
mov
dec
mov
test
push
rorl
and
stc
push
sub
in
subl
test
sub
mov
add
or
xor
mov
pop
mov
adc
mov
mov
in
fisttpll
cwtl
aam
mov
sbb
loopw
scas
mov
xor
cmp
dec
ret
int3
pop
cmp
dec
lods
push
jmp
mov
sbb
lock
mov
adc
outsb
fmull
jge
in
leave
jb
jae
int3
aas
mov
and
pop
in
mov
push
das
adc
repz
jmp
jbe
sahf
sbb
mov
xor
add
sbb
sbb
repz
and
out
cld
xor
or
jg
ret
std
ss
lock
in
mov
adc
iret
and
and
std
out
mov
inc
add
or
outsl
mov
test
int
dec
xchg
mov
jae
xor
in
aas
lea
fildl
xor
mov
xor
rolb
scas
cltd
mov
sbb
shrl
push
adc
jecxz
hlt
arpl
or
out
sub
or
rcl
jo
fimull
cld
sbb
stc
jae
in
int3
add
xchg
orl
pop
or
ljmp
add
xchg
dec
xor
and
arpl
mov
sub
cmp
cmp
lds
add
or
adc
mov
gs
jmp
sbb
sub
loope
mov
ja
das
push
cld
mov
push
cld
insb
sub
dec
psrlw
add
sbb
subb
test
dec
imul
in
shrl
jmp
ljmp
ret
std
add
cltd
adc
dec
push
dec
xlat
cli
dec
clc
mov
inc
mov
ja
in
sbb
addr16
sub
test
pop
cmp
push
add
scas
cwtl
mov
and
jo
pop
jmp
or
lods
mov
xor
xchg
mov
and
pop
lock
mov
mov
mov
cs
div
inc
lock
ror
enter
iret
fucomip
out
rcll
cld
loopne
enter
aam
popf
dec
shl
sub
dec
mov
insb
pop
adc
sarl
inc
test
in
dec
jl
mov
mov
cmc
xchg
dec
ja
insb
add
or
add
insb
pop
push
dec
push
lahf
sbb
aaa
cmp
outsl
xchg
fsubrp
or
scas
outsb
push
stos
aaa
cld
inc
testl
jp
fwait
aam
and
sub
pop
divb
xchg
sub
mov
xchg
repz
push
call
dec
ds
in
mov
sub
pop
cld
loope
xchg
mov
or
inc
inc
fwait
and
stc
adc
cmc
push
into
xor
stc
mov
outsb
lret
ljmp
ret
cld
insb
pop
mov
testl
or
mul
repz
sub
jmp
mov
stc
insb
sbb
cwtl
mov
pop
xor
mov
or
das
dec
in
out
mov
insl
jne
mov
rdpmc
js
insl
lock
pushl
xor
outsl
jo
xor
repz
mov
jg
dec
sar
sub
ljmp
hlt
ret
addr16
push
int3
test
pop
mov
scas
ret
sti
adc
repnz
add
out
mov
or
mov
fs
xor
push
out
sbbb
sub
imul
dec
mov
sub
jl
jmp
mov
bound
sub
add
ss
testb
cltd
scas
or
jecxz
mov
xchg
mov
jb
stc
sbb
in
xchg
nop
lea
jb
test
lret
jge
mov
sub
orb
ja
inc
sub
popa
out
and
and
adc
insb
ret
cmp
jl
push
enter
pop
push
mov
xor
into
inc
sub
jbe
nop
push
sbb
lods
or
inc
add
or
dec
arpl
insl
xchg
out
pusha
mov
cmc
ret
movsl
xor
out
jmp
add
in
sbb
sub
push
jmp
out
daa
ss
adc
insl
rcll
sbb
movsl
mov
movsl
test
mov
add
sub
arpl
or
test
movl
jecxz
pop
push
pop
insl
lock
xor
je
add
cmp
sti
add
fwait
outsl
icebp
ret
pusha
mov
in
sub
jae
sahf
xor
jmp
out
sbb
xlat
movsb
std
fbld
xor
mov
jo
mov
or
hlt
cld
add
sbb
lods
aam
xor
fisttpll
rcl
adc
sbb
sbb
int3
xor
mov
inc
and
je
pop
fisubrs
lea
scas
cwtl
pop
pop
insb
jmp
mov
jle
add
lods
fbstp
add
or
sbb
xchg
repz
or
add
repz
cmp
out
std
sti
fidivs
stos
adc
sbb
and
dec
xor
sbb
mov
in
xor
cli
jne
in
sbb
xchg
lock
scas
push
sti
cmp
insb
cltd
mov
lahf
ret
add
dec
into
xor
jbe
ljmp
cmc
scas
mov
mov
aam
pusha
fdivl
repz
mov
incb
push
and
fmul
scas
add
inc
or
insl
adc
and
xor
push
insl
testl
cld
jb
dec
jle
xchg
xlat
mov
loope
lcall
lahf
jmp
sub
pop
outsb
and
mov
dec
ljmp
lret
push
dec
cmp
add
inc
push
pop
jno
ret
xchg
test
lea
clc
cs
xor
jno
loopne
add
insb
pop
add
insb
jge
push
jecxz
aad
xor
mov
mov
jge
cmp
mov
or
inc
rcl
add
lahf
mov
sbb
mov
dec
add
insb
sub
sub
int
flds
jns
sub
subl
clc
out
cmp
xchg
mov
sub
int
es
pop
xor
stos
jl
loopne
adc
mov
ret
mov
adc
sub
int3
xor
sub
mov
fidivs
sub
sub
sub
mov
aaa
dec
addb
inc
repz
mov
push
cli
or
sahf
clc
and
pop
out
dec
xchg
jno
sub
subl
and
iret
loope
dec
cwtl
fdivl
add
repz
mov
test
xor
push
int
sti
sbb
sar
pop
sti
adcl
iret
pop
mov
jnp
add
rcll
dec
insb
sbb
in
or
mov
in
cld
mov
out
stc
mov
out
hlt
mov
lock
mov
fwait
xor
das
sub
out
hlt
dec
sbb
cmc
push
mov
sbb
sti
sarl
cld
inc
rcrb
cmp
into
add
in
movsl
push
sub
sub
or
add
jo
insl
dec
insl
fldenv
lock
fisttpll
aas
push
mov
fnstsw
and
fisttpll
test
loop
xlat
xchg
fidivrs
and
out
xor
shl
mov
popf
std
and
xor
imul
xchg
or
sbb
roll
std
in
popf
sbb
adc
adc
push
jo
cmp
jbe
dec
cmpsl
clc
mov
cmpsb
adc
cmp
sub
jg
push
pop
andl
mov
mov
in
imulb
cs
aas
inc
mov
cmc
mov
jb
incb
mov
push
cmp
and
aaa
jle
ja
imul
mov
in
stc
sti
mov
div
insb
repnz
adc
iret
mov
cs
mov
pop
jge
movsb
movsb
xor
sbb
repnz
es
sbb
stc
gs
pushf
jno
sub
lret
inc
pusha
jae
add
add
push
push
cmpsb
test
jge
and
mov
mov
jge
scas
push
mov
mov
arpl
and
in
movsb
decb
push
xor
andl
add
push
and
sbb
jge
outsl
xor
hlt
imul
icebp
sbb
and
out
jae
das
xor
pushf
sub
inc
inc
mov
cmpsb
or
in
cmp
fs
lock
movsl
pop
out
mov
stos
scas
fsts
je
ljmp
aaa
lods
faddl
xor
lcall
mov
es
adc
dec
cmpsb
adc
sarl
push
xor
notb
repnz
popa
ljmp
jle
jp
xchg
dec
test
mov
mov
cmp
push
add
movsb
sbb
mov
dec
in
imul
jne
out
in
sbb
mov
mov
das
or
sahf
cli
lods
fmull
lods
in
out
fs
fdivr
pop
shr
insl
clc
mov
dec
jae
mov
adc
sub
outsl
out
int3
push
sbb
cmp
stos
push
or
pop
sbb
loope
lds
dec
icebp
sub
mov
out
out
test
inc
pop
jno
mov
add
clc
popf
es
mov
mov
jg
es
adc
scas
repz
pop
xchg
lea
imul
sbb
push
fbld
insb
repz
enter
sbb
jo
sub
sbb
test
xchg
xchg
das
out
adc
shlb
out
lret
jge
sub
sar
popf
repz
insl
out
sbb
mov
xor
pop
fsubr
les
xchg
lock
jae
ret
jne
mov
jl
insl
nop
enter
add
xchg
mov
dec
cmp
mov
daa
pop
sarl
fists
xor
gs
popl
mov
test
xchg
cld
cmp
adc
inc
stos
das
repz
negb
outsl
add
scas
mov
pop
sub
mov
cmpsb
out
mov
mov
insl
gs
add
cmpsb
xchg
mov
insb
jnp
lds
mov
hlt
mov
xchg
int3
adc
add
ljmp
add
sbb
daa
inc
jae
sbb
fwait
icebp
out
jae
or
leave
xorl
outsb
rcrl
stos
insl
dec
lock
cmp
or
inc
and
addl
xchg
xchg
out
inc
mov
mov
je
outsb
outsl
lock
test
mov
jl
sbb
mov
repnz
shl
pop
mov
push
sbb
push
sub
test
jle
ds
lcall
add
xchg
shlb
or
ljmp
nop
mov
add
cld
fldcw
jl
cmc
push
test
into
out
aas
idivb
mov
repz
add
or
fwait
cmp
xchg
scas
outsl
pop
mov
cmpsb
fdiv
loope
jg
ljmp
pop
dec
je
push
sbb
ljmp
pop
testb
and
push
xchg
popf
pop
lret
inc
push
leave
bswap
dec
or
ljmp
fmuls
inc
xchg
lock
add
fnstsw
xchg
push
inc
xor
add
aad
mov
lods
stos
scas
add
sub
movsb
and
pop
std
sbb
adc
cmp
push
dec
cmp
les
mov
push
mov
and
mov
pop
mov
inc
roll
and
push
mov
pop
movsl
in
fdivrp
lcall
xchg
inc
arpl
add
cli
mov
fldcw
adc
movsl
adc
fildl
sarl
frstor
add
xor
repz
dec
mov
leave
mov
data16
test
fnstsw
cmpb
outsl
aam
out
mov
and
sbb
testl
mov
pop
andb
xor
xor
imul
jg
sbb
pop
insl
sbb
les
add
mov
mov
call
or
scas
in
std
dec
xchg
icebp
inc
loopne
mov
lcall
in
pop
rcrb
mov
jge
sbb
mov
push
push
add
dec
loopne
pushw
je
gs
or
dec
dec
and
sub
dec
aaa
cmp
xchg
xor
stos
and
push
inc
adc
test
testl
adcl
test
ret
dec
lea
pushl
mov
pop
jge
mov
sub
xor
sub
dec
xchg
stc
add
add
push
das
in
jbe
and
jge
sbb
jbe
popf
ror
and
add
cmp
xchg
test
xchg
lods
in
aas
mov
and
sbb
pop
add
push
test
jl
ds
movsb
jbe
lock
lcall
xor
and
xor
jbe
xorb
scas
in
sub
jge
fildl
adc
add
ljmp
or
cmp
aas
insl
stc
mov
sub
sbb
sbb
mov
mov
int3
dec
mov
xlat
pushf
orb
addb
rol
insl
imul
push
push
aam
push
nop
jae
sbb
mov
dec
sbb
leave
imulb
xchg
sbb
push
div
jge
rcrb
ficompl
ss
pushf
cmp
testb
or
repz
mov
xor
mov
mov
xor
lods
jbe
into
or
add
ljmp
cmpsl
addb
push
or
xchg
pop
lret
add
mov
repz
das
sbb
fmul
in
jnp
insb
inc
push
shr
dec
pop
sub
mov
inc
cmp
jae
add
insb
shll
adc
lods
and
or
insl
int3
sbb
mov
into
dec
leave
sub
push
jno
cmp
inc
xchg
insl
test
out
xchg
and
addb
cs
fisttpl
add
pop
add
and
or
add
addb
sbb
adc
out
mov
mov
dec
or
push
ficomps
stc
xor
jae
and
sub
and
jo
daa
pop
aaa
xor
mov
xor
stos
or
cmp
scas
fldcw
add
jae
and
ret
stos
adc
daa
int
flds
or
dec
repnz
in
mov
insb
push
xchg
imul
dec
jae
cmp
pop
outsb
xor
dec
or
bound
jb
mov
mov
sub
hlt
mov
frstor
gs
cmp
pop
sub
mov
outsl
sahf
mov
hlt
push
xor
insl
gs
test
fstpt
or
push
jae
push
inc
pop
xor
jnp
jne
sbb
and
xchg
jae
and
push
stos
aam
add
xor
jns
jae
test
sub
mov
inc
add
outsl
jge
xor
in
into
enter
daa
popa
cli
fsts
xchg
sti
inc
ret
out
icebp
sub
fstpt
sub
leave
xor
mov
cli
jge
dec
xchg
inc
jge
add
inc
daa
out
and
push
xchg
push
xchg
aam
stc
sti
mov
aaa
adc
hlt
mov
mov
xchg
mov
test
sub
lods
dec
and
sbb
sbb
inc
and
lods
inc
sbb
in
aaa
lock
hlt
sbb
sbb
pminub
icebp
aam
adc
cmp
sbb
popa
cmp
gs
jo
or
push
mov
fistpl
out
jl
lods
xlat
dec
movsb
std
or
scas
cmp
sub
jb
inc
icebp
into
dec
push
xor
mov
push
adc
cmpb
mov
push
xchg
lods
push
inc
clc
xchg
jp
xlat
cli
leave
xor
shrl
cltd
adc
sbb
cli
lahf
push
mov
add
pop
push
xor
aaa
dec
jle
and
insb
mov
loope
js
xor
out
xor
adc
lock
mov
jne
mov
out
repnz
lock
movl
mov
add
int3
or
sbb
cmp
jae
or
popa
and
inc
jo
test
cmp
lea
push
or
xor
js
xor
jp
mov
jmp
push
scas
xor
out
hlt
cli
lock
sbbl
test
dec
push
dec
jp
xor
dec
inc
or
pop
icebp
aaa
mov
fldenv
xchg
adc
icebp
add
dec
out
push
sub
pop
lock
in
hlt
xorl
or
or
pushf
in
or
adc
icebp
xchg
xchg
xor
ja
sahf
nop
in
cld
xchg
add
adc
fwait
cmp
out
and
ljmp
out
loope
push
repnz
das
shrb
shlb
adc
inc
je
scas
cmp
jecxz
push
into
ja
in
roll
pop
add
jmp
pop
or
test
dec
lods
cmp
out
and
fmul
arpl
lods
lods
in
mov
decb
sub
out
bound
dec
scas
lods
ljmp
lods
lods
xor
add
fidivl
inc
icebp
stos
popl
jnp
fistl
pop
jo
xor
or
cmc
les
les
cwtl
or
add
sbb
js
dec
test
out
sub
sub
sbb
scas
push
inc
pushf
mov
cmp
dec
sub
aaa
daa
test
ljmp
or
push
and
xor
inc
and
outsb
mov
mov
push
icebp
loope
in
imul
pop
pop
das
push
aas
in
adc
mov
or
xor
je
fwait
in
mov
loop
or
xchg
mov
mov
and
dec
outsb
dec
jne
ret
inc
pop
mull
es
adc
or
ljmp
stos
out
cmp
pop
jne
pushf
hlt
dec
mov
push
and
add
lcall
cmpsl
cmp
sbb
stc
or
sti
das
in
cltd
je
lcall
mov
das
jl
insl
xchg
rolb
xor
xchg
xorl
jb
mov
sub
cld
mov
das
inc
and
out
shrb
insb
gs
stos
cmp
ficompl
jae
sbb
fcompl
dec
jb
out
adc
orl
lea
iret
sub
cmpl
in
nop
cmpsb
in
dec
push
xor
in
xchg
sbb
scas
in
mov
sbb
mov
add
testb
mov
scas
loop
sub
imul
sbb
adc
inc
popf
hlt
add
mov
stos
mov
out
and
lods
nop
mov
test
scas
or
push
jo
out
sub
arpl
dec
dec
adc
mov
in
or
add
aad
jp
repnz
pop
outsl
in
pop
movsb
insl
ljmp
and
imulb
mov
inc
mov
dec
fstps
mov
out
or
jns
dec
in
insl
lods
or
inc
add
clc
and
fcomps
push
das
push
and
ja
mov
mov
sbb
mov
jle
mov
xor
xchg
jge
dec
dec
or
mov
mov
cmp
roll
ret
lock
and
scas
or
mov
inc
and
xor
aad
jo
jl
pop
icebp
out
and
xchg
mov
lcall
or
das
cmp
pop
adc
repz
cs
or
push
inc
jge
sbb
cwtl
jb
mov
shll
out
sti
pushf
decb
dec
add
push
cmp
add
or
aas
bound
cmp
inc
cmp
dec
dec
outsl
push
into
sub
mov
mov
xchg
sub
loope
fs
cwtl
or
mov
cmpsl
incl
inc
fisttps
sbb
sub
xor
shlb
mov
xchg
out
sub
sbb
jg
mov
aas
mov
xor
adc
pushf
daa
mov
push
mov
jne
cmp
xor
les
and
enter
push
cmc
bound
scas
pop
clc
jecxz
push
rcll
repz
cld
fwait
pop
cmpb
fidivrl
cmp
push
dec
or
lcall
test
jb
loope
shr
stos
icebp
inc
idivb
fcomip
out
repnz
stc
lock
cmp
inc
sub
mov
jle
mov
lock
mov
xchg
xor
daa
xor
subb
pop
repz
xor
dec
cmp
jnp
sti
pop
cld
cmpsl
cmp
mov
decl
and
out
xchg
out
mov
pop
xchg
mov
jb
lock
xor
mov
jb
outsl
add
cwtl
jb
cmp
mov
pop
movsb
sbb
add
imul
int
repnz
and
mul
pushf
pop
ret
and
fdivrl
push
xchg
mov
icebp
insl
out
or
les
ret
xlat
rsm
insl
mov
cld
push
ja
sarb
flds
push
outsl
push
and
out
lret
cmp
dec
test
cltd
ss
sub
mov
inc
dec
dec
sub
es
ret
sub
insb
adc
mov
mov
dec
sub
adc
sbb
js
sub
jecxz
and
lret
dec
in
mov
insl
or
jbe
push
neg
or
cmp
xchg
push
movsb
xchg
sahf
cmp
aad
lods
add
mov
insl
into
arpl
pop
fcompl
push
std
pop
cmp
or
push
mov
out
es
imul
and
or
pop
mov
mov
js
repz
push
and
daa
push
div
mov
and
cmc
mov
xlat
cmp
xlat
aaa
hlt
sbb
cmp
in
add
sub
fadd
repz
pop
sti
xor
call
add
mov
lods
push
mov
fildll
dec
push
pop
outsl
imull
out
push
or
in
jb
dec
iret
test
sahf
xlat
test
dec
or
call
and
outsb
sbb
pop
ret
test
stos
negl
hlt
lret
push
hlt
push
sub
lock
clc
cmp
je
cli
jnp
or
xor
mov
inc
sbb
hlt
cwtl
dec
call
int3
push
rcl
sti
jo
pop
mov
and
mov
pushf
insb
push
sbb
ret
out
repnz
fcompl
adc
xor
jbe
mov
xor
mov
in
clc
cs
adc
mov
xlat
cmp
push
xchg
or
or
int
in
ja
xchg
das
cmc
sti
xor
rcll
jnp
lahf
lret
or
sbb
pop
shll
ret
or
jnp
jo
xor
adc
push
or
sti
xor
jno
jecxz
push
mov
daa
and
out
fwait
ljmp
or
cmp
push
sub
into
mov
int3
pop
clc
iret
cli
dec
push
mov
sub
add
movsb
or
pop
into
pop
stos
lods
or
leave
sub
mov
nop
dec
push
pop
fmulp
mov
inc
test
aaa
scas
sub
jae
sub
test
aas
loopne
and
outsb
mov
jne
adc
dec
sbb
loop
repz
popa
push
int3
insb
dec
test
imulb
lahf
out
and
lcall
sub
insl
mov
sub
add
push
shr
and
mov
dec
cmc
cwtl
scas
mov
xchg
sti
sbb
icebp
mov
sti
and
inc
out
mov
and
gs
add
int3
and
and
fidivrl
in
push
mov
ret
and
sbb
or
jnp
xor
out
jo
xor
mov
cwtl
mov
adc
out
call
fcoms
das
in
pop
mov
xor
dec
add
sbb
icebp
xor
add
pop
mov
jnp
adc
sbb
xchg
push
sbb
mov
add
out
gs
add
cld
and
or
sti
clc
adc
icebp
sahf
dec
jp
sti
sbb
gs
dec
adc
sar
pop
or
sub
inc
sti
or
clc
mov
lock
aaa
add
jnp
or
pusha
xor
mov
das
lcall
mov
pushf
out
dec
jmp
ret
ficoms
adc
xor
in
mov
and
jae
or
and
cli
or
or
neg
jg
or
repnz
xor
pop
jecxz
outsb
pop
or
clc
outsb
mov
outsb
aaa
or
fsubl
xchg
mov
mov
cwtl
ss
mov
scas
das
adc
das
add
lock
repz
daa
or
push
jge
repnz
mov
inc
repz
adc
das
xchg
sbb
pop
sbb
push
hlt
jnp
std
das
jbe
fwait
sbb
das
pop
in
outsb
dec
and
gs
push
push
cmc
cmc
and
test
je
mov
xchg
sbb
daa
out
roll
cld
push
mov
js
cmp
sub
or
dec
test
adc
fs
out
or
or
shr
inc
notb
cmp
idivb
repz
adc
cmpb
add
cmp
in
jne
pop
mov
cmove
rorb
hlt
idivl
jo
cs
and
enter
testb
mov
in
lahf
or
adc
xor
out
xchg
and
repz
movups
or
sbb
ja
push
out
pop
lock
in
stc
test
icebp
sbb
jle
call
or
add
pushf
roll
cmc
adc
mov
das
mov
addr16
mov
sbb
int
sbb
clc
pop
mov
jo
cmp
sbb
les
jae
pop
xchg
cmp
push
jle
inc
repz
stc
inc
das
add
es
cmc
sbb
or
pop
stos
or
pop
repz
xor
in
jbe
xor
notl
out
gs
cmp
test
mov
adc
ret
sub
repz
mov
ljmp
or
repnz
mov
popa
es
jb
xor
das
and
inc
or
xchg
pop
and
std
cld
pusha
mov
mov
outsl
imul
cs
and
add
mov
jae
repnz
test
mov
pop
pushl
testl
xor
sub
in
ret
sbb
sahf
push
test
xor
repz
push
daa
out
imul
addl
mov
test
pop
adc
push
outsl
pop
dec
dec
sbb
test
aam
scas
cmc
mov
jnp
jae
dec
pop
adcl
xor
sub
stos
jno
pop
repz
int
cli
jae
sub
jge
insl
and
pop
add
sub
add
or
xchg
jno
adc
fisttpl
mov
pop
jae
or
xor
adc
imul
jo
cltd
mov
jae
xchg
inc
lods
or
and
xor
and
xor
dec
stos
cmc
sub
pop
jnp
je
pop
push
and
sti
and
xchg
in
inc
or
fstl
sahf
xor
enter
mov
sbb
cmc
inc
dec
and
adc
xorl
push
xor
pop
add
push
sar
xor
rcrb
pop
js
js
cmp
js
push
lea
out
fsubr
xor
les
out
sub
xchg
jmp
jl
inc
push
popa
xor
stc
sahf
jmp
and
call
cmp
push
in
jae
mov
pop
xor
dec
push
sub
push
xor
out
mov
push
les
mov
sbb
xor
pop
out
sbb
rorl
xor
mov
push
fldl
pop
loop
repnz
jae
inc
sub
int
call
outsl
stos
mov
pop
cmc
or
push
mov
lds
pop
out
sbb
jnp
mov
and
hlt
shl
cmc
incb
pop
sbb
hlt
jge
jp
mov
les
cmp
jo
test
lea
and
jns
cmp
addr16
push
scas
mov
ljmp
add
adc
add
out
mov
and
ljmp
push
lea
imul
adc
int
scas
dec
jnp
sbb
mov
adc
jo
notl
out
hlt
orb
and
inc
stc
push
repz
and
sbb
ret
or
repnz
cmp
adc
pop
jmp
packsswb
or
xor
nopl
mov
cwtl
aam
sub
jne
jnp
adc
mov
fcomi
jae
add
or
dec
or
cmp
cmc
mov
xchg
out
cld
xor
or
jle
xchg
jmp
repz
push
mov
out
sbb
repz
sti
fmuls
lahf
in
repz
lock
stc
in
repz
sahf
es
or
std
xor
in
or
inc
pop
in
out
sbb
pop
dec
nop
sti
test
xor
or
xchg
out
iret
movsb
mov
ss
in
push
cmc
mov
sti
inc
in
jno
push
mov
shlb
je
ss
pop
xor
adc
and
inc
repz
in
sub
popf
xor
sub
xor
testl
int
inc
cmp
add
std
pushf
mov
decl
add
pop
push
repz
pop
addb
and
andb
daa
loope
testb
ss
daa
and
add
in
push
dec
lret
sub
or
mov
ja
inc
das
pop
in
ljmp
gs
mov
out
or
fdivrs
sti
js
dec
repz
jp
fwait
inc
rorl
outsb
and
or
mov
and
xchg
mov
push
nop
or
pop
popf
rep
in
cwtl
mov
cmp
adc
xchg
xchg
add
push
insl
xor
jp
or
adc
orl
or
jge
xor
insl
sbb
cwtl
jg
push
aaa
outsb
sub
repnz
stc
jae
imul
jnp
stc
jnp
dec
cmp
in
and
out
add
sbb
cltd
aas
pop
in
push
mov
test
xchg
shr
orl
out
jae
lea
outsb
out
imul
jne
pop
mov
scas
out
sbb
and
jo
repz
cmpsb
out
push
sti
sub
jae
dec
movsb
mov
lock
das
cmc
in
out
popf
sbb
sbb
adc
mov
xor
and
add
insl
xor
in
mov
lock
repz
push
xchg
aaa
inc
repz
outsb
nop
or
push
jnp
xor
lock
xor
cld
pop
jae
lock
xor
cld
adc
lock
xor
cld
sbb
and
cwtl
sti
outsb
adc
repnz
out
nop
xchg
sub
sub
out
mov
mov
outsb
out
repz
lahf
dec
out
decb
cwtl
dec
out
or
xchg
dec
out
pop
mov
in
ja
repz
daa
push
or
push
repz
lock
pop
mov
sbb
sbb
and
je
adc
add
or
out
dec
pop
sub
jle
jo
icebp
xchg
jg
mov
sub
and
or
test
push
sbb
sbb
test
or
fs
adc
repz
hlt
push
or
repz
and
or
xor
bound
jno
aaa
sbb
or
jno
ljmp
push
mov
and
cmp
and
das
adc
in
cmc
cld
movsb
xchg
push
incl
adc
sub
cmp
cld
mov
or
xor
out
jle
jmp
sbb
jae
xor
cmp
imul
inc
je
xor
dec
pushf
js
jnp
sub
sub
test
popa
sbb
push
sub
popf
xchg
mov
push
mov
rcll
pop
lret
xor
bound
les
sbbl
outsb
xor
xchg
cmp
repnz
or
in
ss
dec
cmp
or
xor
es
xchg
ret
push
scas
incl
icebp
scas
or
icebp
jnp
and
cmpps
lcall
daa
outsl
pop
out
fcoms
test
stc
addr16
dec
push
in
pop
xor
mov
and
jae
mov
das
pop
jmp
scas
insl
dec
es
jne
sbb
jg
and
out
xor
push
cmc
not
pop
add
jp
std
repnz
sti
add
jl
sti
dec
mov
das
scas
add
xor
sub
jnp
jo
bound
es
inc
cmc
and
jg
dec
sbb
mov
movsl
jmp
pop
push
add
test
imul
add
dec
mov
setge
out
fsubr
or
loope
or
adc
cli
mov
inc
cmpsb
divl
int3
cmpsl
cmc
dec
or
xor
outsl
int
mov
and
jo
icebp
jnp
lcall
rcrb
mov
nop/reserved
out
in
cmp
in
das
out
pop
mov
xchg
mov
add
xorl
or
add
add
pop
or
test
xchg
cmc
dec
add
out
out
jl
repz
jmp
stc
sti
mov
jbe
popa
or
jnp
add
and
std
cmpsb
in
in
cmp
repnz
sahf
repz
repz
xor
adc
lahf
or
cld
nop
mov
mov
sbb
es
in
cmpsl
jmp
dec
jae
xor
mov
mov
int
subb
or
jecxz
sahf
leave
out
out
test
inc
jnp
std
aam
int3
inc
icebp
adc
mov
lods
jle
or
or
repz
mov
jb
jp
xchg
lock
xlat
cmpl
sbb
pop
das
sub
hlt
mov
and
or
std
add
cmc
int
and
adc
ljmp
insl
mov
repz
enter
ljmp
lds
and
pop
dec
test
xor
std
adc
mov
adc
sbb
scas
pop
nop
stos
mov
mov
add
lods
mov
in
shlb
enter
arpl
lock
das
mull
fisubrs
into
adc
dec
jb
mov
pop
mov
cmp
in
orb
outsl
stc
xor
pop
sub
mov
xchg
jnp
xor
jg
add
push
adc
and
jae
mov
sub
jmp
sbb
jmp
or
std
out
sub
lock
sub
scas
xchg
aaa
imul
outsb
adc
imul
pop
in
leave
pop
jnp
sub
adc
inc
xor
in
repz
lock
gs
pop
cld
daa
jb
movsl
add
aaa
dec
adc
repz
in
into
jmp
or
imul
add
stos
or
test
xor
mov
pop
sbb
jmp
in
add
jmp
sti
add
icebp
das
out
addr16
gs
adc
jmp
pop
pop
sub
or
out
or
sbb
insl
stc
js
xchg
sti
dec
pop
ret
or
mov
xchg
je
std
jae
cmc
sbb
inc
add
dec
repz
cmc
std
or
pop
mov
jle
cld
in
and
sub
icebp
mov
adc
incl
cmp
jae
mov
and
push
pop
cld
call
idivl
lret
es
out
xor
ljmp
movups
push
outsb
repz
in
or
mov
jnp
icebp
sub
lcall
in
cmp
test
les
into
repz
maskmovq
negl
or
out
or
inc
shlb
xchg
sub
imul
fisttps
out
or
xchg
repz
mov
sidtl
and
add
fs
cld
sub
sbb
sub
repnz
xchg
push
sti
fsincos
cmc
cld
pop
jae
xor
adc
sti
adc
test
jle
cmpsl
lods
das
std
in
jbe
movsl
testl
loopne
aas
pop
das
insb
scas
daa
lea
sub
xor
repnz
xor
std
pusha
out
cld
aam
scas
adc
jae
iret
das
add
mov
jnp
out
and
js
jecxz
arpl
std
or
or
inc
out
sbb
dec
jnp
push
scas
mov
std
movl
pop
lea
or
hlt
in
ja
mov
jge
adc
cmp
aaa
or
stos
outsl
mov
jo
insl
scas
add
jge
or
push
pop
div
cld
scas
jnp
jge
sbb
push
or
scas
out
jo
fsubrs
scas
cmp
fbld
scas
cmp
sbb
mov
mov
iret
sbb
mov
xor
fildll
fsubrs
fbld
fsubs
scas
out
lods
mov
lcall
cmp
scas
cmp
sbb
mov
push
jmp
std
dec
jmp
fimull
pop
cmpl
pop
sub
das
movsb
test
add
cld
sub
sbb
or
xor
das
aad
imul
dec
xchg
das
push
jae
sbb
popa
insl
enter
or
lods
std
pop
aas
add
adc
push
aas
and
rorb
in
or
jae
lock
cmp
fnsave
pop
out
movsl
push
out
sub
and
jnp
mov
add
or
xor
cld
sbb
mov
xchg
inc
or
std
or
adc
out
lea
scas
in
cmp
stos
jge
xor
jbe
xor
out
mov
idivl
inc
dec
adc
imul
imull
pop
sbb
sub
repz
pop
adc
orb
fmuls
in
dec
dec
xor
cmovae
xor
add
pop
jmp
outsl
and
loope
repz
jns
cld
jbe
repz
mov
cld
outsb
mov
iret
cmpsb
negl
out
sub
jg
or
das
arpl
xor
out
xchg
es
or
and
mov
sub
xor
dec
or
inc
add
xchg
or
or
out
cltd
mov
ljmp
sub
and
xor
and
outsb
bndstx
jae
adc
es
pop
jnp
xor
mov
inc
out
or
sub
push
popf
and
push
add
jge
scas
out
xchg
lahf
cmpsl
sub
fidivl
ljmp
mov
jae
push
pop
clc
test
les
xlat
jl
clc
adc
les
and
insl
push
clc
int3
jo
fimull
pop
jo
aam
jnp
in
xorl
cmp
add
mov
pop
jo
xchg
cmp
cld
shll
imul
pop
sub
xor
out
cmp
sbb
add
lcall
sbb
repz
int
push
rcrl
jb
or
mov
xchg
add
mov
cld
out
out
movsl
xor
jl
in
pmuludq
and
stos
xor
ss
jmp
inc
ljmp
pop
in
scas
jns
cld
push
stc
mov
sub
fcos
sbb
xor
popf
sahf
xor
ljmp
push
sub
in
test
jl
das
negl
mov
hlt
cmpsl
jmp
mov
icebp
arpl
mov
sub
jge
sti
cmc
lock
cwtl
sti
mov
sbb
mov
inc
cmp
adc
mov
or
pop
or
jmp
repz
movsb
sub
in
pop
inc
out
jno
add
pop
inc
sub
jae
ljmp
adc
jg
add
out
or
jmp
les
pop
cmp
scas
add
bnd
out
sub
roll
into
sub
inc
or
orb
in
out
iret
push
and
jl
push
je
cld
sub
outsl
add
icebp
sahf
sbb
or
mov
aas
scas
jo
das
xchg
pop
or
or
push
das
repz
aas
add
jae
jnp
jo
adc
popa
movsl
xor
cmp
push
xor
jno
mov
add
imul
xor
lock
xor
cmp
mov
add
in
cmc
subl
adc
jmp
xor
out
cwtl
pop
es
fnstcw
in
ljmp
icebp
cmp
insl
jno
add
sbb
mov
and
inc
jae
and
add
hlt
js
imul
das
pop
jnp
jb
and
adc
cmp
paddsb
sti
sub
test
xchg
out
cmp
pop
or
in
icebp
mov
cmc
repz
insb
lcall
xchg
outsb
sbb
add
pop
cld
mov
or
sbb
testl
sti
or
push
add
cmc
jae
lods
hlt
test
jmp
outsb
icebp
pop
or
mov
jnp
xor
das
cwtl
xchg
in
shl
or
adc
nop
scas
std
sti
mov
inc
sbb
push
pop
jge
xor
jp
pop
sub
inc
call
dec
repnz
jmp
loopne
in
lcall
mov
jg
jnp
lods
ja
add
stc
das
or
mov
cmpsl
out
es
adc
in
push
iret
push
and
mov
outsl
daa
cmp
add
mov
add
mov
js
dec
push
paddsw
sub
sti
dec
lods
in
repz
xorb
cmp
das
jp
loopne
repz
mov
and
add
decl
imull
arpl
gs
mov
dec
sub
cmpsb
mov
mov
loop
sub
in
repz
cmp
int
icebp
jmp
aaa
push
pop
packsswb
jae
out
add
fsts
pop
shlb
ficompl
out
bound
in
scas
insl
adc
ret
xchg
add
xor
idiv
push
push
repz
ficomps
dec
jmp
jns
adc
scas
pshufw
lahf
scas
cmc
pop
push
add
jno
cmpb
mov
pop
aam
sub
stos
jl
xchg
lret
add
lret
add
mov
add
das
jl
mov
add
add
jno
jl
xlat
lret
add
cmp
and
out
sbb
das
adc
stos
add
pop
sti
add
ja
out
mov
rorl
stos
dec
mov
adc
out
test
stos
push
iret
subb
aaa
inc
xor
cmp
mov
dec
mov
adc
jnp
xor
test
mov
fadds
pop
jle
aaa
and
mov
stos
cmpsb
xor
push
lock
repz
or
mov
sub
sbb
adc
pop
insl
std
decl
sub
pop
in
aam
lcall
inc
imul
das
xchg
lds
or
sbb
out
push
into
pusha
in
jae
adc
dec
in
push
push
sub
or
lods
cmp
daa
lea
repz
sbb
pop
pop
sub
stos
lock
xor
das
cmc
scas
xor
in
negb
cmp
in
shll
jle
insb
sub
test
mov
add
ljmp
jo
lret
add
out
jne
mov
das
clc
xor
pop
fnsave
add
xchg
inc
imul
les
insb
mov
xchg
in
pop
out
mov
divl
lds
or
push
imul
fnsave
or
mov
mov
jl
xchg
lea
sbb
push
cmp
pop
repz
sbb
sub
repz
jle
repz
cmp
imul
mov
insb
jmp
cmp
xor
xor
sub
cmpsb
out
pop
adc
xchg
xchg
jae
das
sbb
shlb
adc
daa
js
sbb
adc
jmp
icebp
aaa
pop
das
sbb
jnp
mov
jmp
insb
idivb
xrelease
repz
jnp
cmpsl
or
fmul
pop
pushf
fdivs
add
xchg
sti
add
in
adc
jnp
das
rep
mov
or
es
mov
push
push
sahf
jmp
fsubrl
mov
pop
imul
movsl
pop
add
sar
ss
or
in
fdiv
std
mov
cmovle
std
jne
decl
and
hlt
outsb
sbb
hlt
mov
or
sub
or
adc
adc
mov
adc
add
lea
psllq
lcall
add
or
dec
add
jg
lock
repnz
sti
testl
orb
and
popf
and
repz
mov
lock
xchg
cld
mov
aam
adc
in
jo
jle
dec
stos
and
or
push
shll
cmpl
frstor
xor
out
xor
sbb
cli
stc
in
mov
cmpsl
cld
sti
out
icebp
jg
push
dec
std
lds
add
mov
mov
out
xor
lcall
lcall
out
xor
imull
in
dec
xlat
or
mov
in
stc
xor
in
decl
sbb
in
push
pop
jmp
in
adc
inc
std
das
in
jo
xchg
in
add
xchg
dec
jnp
adc
mov
ud0
sbb
cmc
pop
clc
jnp
jge
add
xor
mov
mov
and
pop
std
gs
ret
out
mov
sbb
jnp
ja
cmp
add
repnz
rolb
mov
add
repz
sbb
lock
or
aaa
lds
cld
lcall
cld
mov
repz
icebp
lock
adc
repz
cli
cmc
jnp
xor
and
and
outsl
lock
out
out
in
cmp
mov
jae
mov
mov
push
xchg
pusha
mov
lea
lahf
imul
lock
xor
jno
and
push
cmp
jnp
sar
jo
xchg
pop
add
icebp
xor
push
imul
jle
mov
mov
xor
cmc
scas
mov
lock
add
sti
pop
mov
daa
and
sbb
push
xor
icebp
mov
and
sbb
mov
push
ja
in
jae
xor
mov
mov
push
loopne
sbb
inc
pop
cmp
and
jg
test
ljmp
jae
cmc
sbb
ss
out
or
jno
in
jl
adc
jno
jbe
icebp
xabort
inc
roll
sbb
pop
popf
test
stc
mov
lods
cmp
out
jns
sahf
syscall
or
in
sbb
add
ja
das
xor
xchg
std
jnp
mov
mov
sti
test
cld
jg
cmp
sarb
insl
xor
in
cmc
mov
mov
pop
and
pushf
repnz
das
sub
jbe
fstps
call
adc
in
xor
cld
mov
inc
adc
mov
data16
inc
or
sbb
mov
cli
fnstsw
jg
lock
xor
das
mov
or
dec
and
jg
pcmpgtb
das
jb
jp
pop
jae
das
jne
adc
mov
popf
pushl
lock
or
imul
adc
cmpsb
arpl
jg
sbb
mov
jae
mov
pushf
arpl
cmpsb
aaa
in
sahf
mov
xchg
mov
or
xchg
push
inc
repz
cs
adc
jo
or
sub
xchg
sub
rolb
or
sub
insb
inc
inc
or
jp
sbb
pop
call
outsb
mov
sti
pop
hlt
jno
push
xlat
adc
insb
cs
test
testb
adc
jb
mov
push
lock
jae
or
pop
dec
push
add
pop
mov
icebp
sbb
mov
adc
mov
and
in
mov
nop
xchg
mov
imul
mov
or
lods
or
or
add
or
mov
or
adc
ret
sbb
add
jae
nop
and
sub
das
in
hlt
xor
mov
lds
jne
cmp
fs
ja
pop
or
add
cmc
or
rol
cmc
arpl
int
std
jae
out
ja
dec
push
or
adc
repz
mov
sub
popl
sbb
xor
mov
clc
in
or
push
add
xor
lock
idivb
jae
ja
or
xor
jae
nop
push
cli
add
out
cld
je
andb
or
sbb
sbb
xor
mov
xor
xchg
sti
jae
out
jnp
mov
add
mov
in
mov
das
or
cmc
push
or
addl
xchg
cmp
loopne
mov
mov
add
xor
das
mov
sbb
sbb
jae
adc
es
push
jae
mov
and
vmovapd
jbe
jmp
xor
bound
pop
outsl
adc
sub
push
adc
lock
call
ja
clc
dec
pop
das
lea
sub
mov
in
fwait
in
repz
adc
std
dec
outsl
jle
cli
or
lock
jae
jo
in
adc
je
add
sbb
adc
and
jnp
jne
cmc
and
je
mov
jb
xchg
incl
mov
or
clc
mov
jae
scas
cmc
call
or
pop
xor
or
xchg
lock
or
cwtl
sbb
sub
enter
or
in
xor
out
jg
in
mov
mov
and
cltd
ja
cli
mov
push
push
mov
mov
outsl
loopne
jmp
and
mov
in
test
fisubrs
sbb
xor
mov
push
out
lock
cli
repz
xor
shl
or
mov
das
and
sti
xor
push
push
xor
lock
in
jbe
dec
cld
icebp
ja
das
inc
sub
adc
fs
out
pop
mov
cmc
cmp
adc
scas
jns
or
pop
je
and
das
mov
xchg
shlb
das
jmp
outsb
mov
cmc
push
mov
loopne
int3
das
mov
bound
inc
std
sti
mov
or
sub
repz
lret
xorb
out
xchg
lahf
xor
sti
repz
in
sub
imul
daa
push
ja
jecxz
push
xor
lock
lods
out
jle
jle
hlt
and
clc
add
jge
xor
mov
scas
jbe
notb
push
out
jae
in
cld
ja
imul
sbb
mov
insb
sbb
xchg
shl
jnp
xor
or
hlt
cwtl
xor
sti
das
xchg
scas
das
and
xor
das
paddsw
testl
aad
push
outsl
cmp
xchg
stc
lcall
xor
mov
or
icebp
clc
std
je
xchg
cmp
sti
or
outsl
hlt
and
jb
xchg
or
stos
and
mov
mov
cmp
push
or
jae
cmp
adc
pushf
or
adc
jae
fs
js
xchg
lock
lea
repz
jnp
mov
cmp
jbe
jmp
incl
sub
jnp
and
xchg
sub
inc
and
sti
jb
fwait
aam
push
mov
mov
lock
sti
repz
loope
xchg
lea
sti
jnp
xor
insl
fucom
or
sbb
or
adc
jg
mov
mov
rcll
vandpd
push
push
mov
adc
or
out
iret
dec
inc
orl
aad
cmp
fisubs
test
fnstcw
push
mov
subl
mov
fildl
add
mov
or
das
xchg
sbb
jecxz
stos
lcall
pop
xor
mov
movsl
and
bnd
jns
fwait
cmp
xor
mov
mov
fimull
mov
and
icebp
pushl
sbb
sti
mov
jmp
das
add
lock
mov
nop
decl
xor
or
cmpsl
int
jl
push
adc
outsl
jns
out
add
sbb
jo
sbb
xor
std
or
xchg
notb
adc
pusha
mov
loope
icebp
out
mov
jp
fistpl
aas
cmc
or
push
fldt
pusha
or
jmp
add
je
imul
je
js
add
inc
gs
imul
je
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
lea
jae
pushf
test
mov
movw
cmp
jmp
call
add
dec
insb
gs
outsb
imul
add
stos
or
cmc
test
push
pushl
lea
je
test
stc
mov
sbb
or
rcl
mov
pushf
mov
cmp
clc
test
mov
call
add
dec
je
jo
jne
jb
dec
outsb
outsw
inc
add
add
arpl
jae
bound
add
inc
gs
inc
dec
inc
push
add
stc
inc
xor
sub
mov
sub
insb
or
std
out
add
push
out
xchg
outsl
in
repnz
cmc
dec
clc
jae
cld
incl
dec
xchg
je
aas
add
sub
push
sbb
jae
cld
test
sub
sbb
sub
sbb
xchg
dec
xchg
jae
cld
mov
hlt
idiv
repz
outsb
jae
test
dec
and
cld
dec
push
adc
cvtps2pi
dec
pushl
cld
ja
dec
insb
das
test
mov
jae
cld
push
adc
outsl
mov
add
jae
cld
ja
dec
jno
out
jae
inc
in
daa
std
and
mov
pop
dec
adc
cmc
sub
lea
out
xchg
sbb
jae
cld
es
xchg
outsl
sbb
pushf
cld
adc
in
cmovg
jae
cld
add
stc
outsl
jno
insl
cld
test
mov
adc
nop
outsl
or
push
std
orl
sub
inc
and
outsl
cltd
hlt
pop
std
adc
jae
cld
xchg
cli
std
cmc
dec
icebp
jae
repz
cld
and
sbb
xchg
std
xchg
dec
nop
jae
cld
or
jbe
jae
out
pop
or
outsl
lahf
hlt
sbb
sbb
jae
cld
or
mov
insl
jge
icebp
decb
or
xor
cld
add
hlt
paddw
dec
lcall
ds
hlt
cmc
std
icebp
dec
in
out
sub
jae
cld
sbb
pmuludq
dec
sti
outsl
div
repz
out
or
jae
cld
sbb
mov
mov
pop
dec
add
add
cld
stc
dec
jne
icebp
hlt
out
jge
adc
je
pop
scas
rorb
cltd
jae
aam
push
adc
sub
mov
lock
imul
sub
hlt
outsl
std
in
dec
lods
jae
cld
mov
dec
icebp
lock
jb
add
and
repz
mov
sub
dec
lea
hlt
pop
std
sbb
jae
cld
jns
dec
out
mov
or
jae
cld
sbb
dec
adc
hlt
xchg
add
pushl
cld
hlt
in
or
outsl
sahf
hlt
sbb
xchg
dec
adc
repz
sbb
sbb
xchg
std
mov
jae
cld
jge
dec
imulb
hlt
insb
cld
daa
inc
in
mov
cld
xchg
dec
mov
sub
testl
movsl
sti
jg
dec
sbb
xchg
hlt
xchg
std
nop
dec
or
add
sub
jnp
js
jne
icebp
out
or
outsl
lahf
hlt
sbb
xchg
dec
xchg
jae
cld
or
dec
add
std
jns
cmc
jae
repz
repz
cld
cmpsb
mov
hlt
cwtl
std
adc
adc
cld
xchg
dec
jg
sti
hlt
idiv
jae
jo
outsb
cld
imul
mov
pop
hlt
cltd
std
xchg
dec
xchg
jae
cld
mov
dec
add
hlt
cld
std
clc
dec
hlt
jae
cld
out
sub
jle
dec
and
mov
ret
add
sub
sub
sub
dec
subb
mov
adc
jae
cld
mov
out
inc
xchg
pop
sub
jge
add
or
outsb
ret
xorl
sbb
adc
mov
jae
mov
std
lods
popf
jae
cltd
cld
xchg
xchg
dec
lea
hlt
add
jae
cld
outsb
stos
sti
mov
popf
hlt
cwtl
ljmp
divb
out
sub
xchg
stc
inc
sub
out
adc
dec
enter
inc
cld
lods
sub
or
add
push
sub
sub
sub
and
test
insl
test
add
sti
dec
sub
out
mov
sub
add
scas
dec
jle
imul
sti
mull
mov
or
shl
imul
mov
jne
das
and
out
push
add
clc
sti
inc
cmp
outsl
mov
dec
jns
mov
jp
mov
dec
jnp
mov
jl
mov
cld
jge
dec
outsl
ds
jle
mov
cld
jg
dec
add
hlt
cmp
dec
add
dec
subl
dec
xorb
mov
hlt
cltd
std
fisttpll
jae
cld
sub
outsl
jns
jl
mov
cld
or
dec
adc
push
hlt
cwtl
std
fimuls
jae
cmp
xor
in
repz
cld
mov
inc
hlt
push
std
dec
dec
push
jae
cld
xchg
pop
dec
fdiv
jns
dec
mov
push
add
sbb
add
mov
rolb
inc
jns
xchg
hlt
jl
loope
jb
lret
push
ljmp
mov
jle
or
shl
add
sub
cmp
dec
xchg
or
add
add
pop
out
test
jecxz
lds
fdivr
mov
stos
lock
mov
or
cli
aad
addl
lret
leave
pushl
rolb
and
add
jo
stos
iret
fbstp
mov
sbb
cltd
sbb
xchg
pop
out
xchg
ret
add
push
xor
xchg
das
mov
bound
dec
push
jl
stc
push
lahf
add
jl
adc
lds
roll
push
dec
mov
fists
dec
dec
xchg
sub
lcall
push
sub
xor
lcall
jb
push
outsb
cmp
pop
dec
push
mov
jmp
out
inc
sarl
and
push
xor
sarb
cmp
test
xlat
sub
adc
pusha
and
in
xor
cmp
int3
adc
clc
repnz
andl
cmp
sub
ret
sub
inc
lods
adc
sub
hlt
adc
sub
nop
sti
cmpsb
std
jg
in
push
cmp
sub
mov
adc
out
inc
mov
add
lock
movsl
cmp
cli
push
psubw
idiv
lods
fisubl
movsb
xor
add
test
sti
negb
xor
sub
clc
adc
and
push
stc
decl
inc
add
aad
imul
addr16
inc
mov
pop
jb
arpl
sub
push
inc
repz
jmp
idivl
test
clc
es
xchg
enter
loope
js
jle
cmp
mov
jmp
pop
pop
fsubrs
aad
ja
mov
mov
push
insb
cmovle
sti
dec
repz
dec
out
ljmp
and
push
icebp
int3
push
cmp
xor
jae
pop
shrb
pushl
mov
jnp
popa
xor
adc
push
js
push
aaa
les
push
out
les
sub
jne
repz
rorb
jae
adc
cmp
aaa
clc
cld
stc
jl
dec
js
mov
mov
mov
jnp
fcoms
sahf
sbb
lcall
cmpsl
and
pop
std
jl
sbb
mov
fstpt
idivl
insb
jo
and
cld
and
xchg
mov
sub
cmpb
xor
popf
mov
aaa
cmpsb
test
sub
add
ficoml
pop
sub
jnp
cmp
sbb
inc
nop
or
fmull
or
xor
fsubrs
out
sub
mov
popa
sti
ret
and
rep
pop
out
adc
sti
push
mov
mov
mov
clc
cld
scas
inc
fwait
cmp
and
dec
enter
cli
mov
sti
adc
enter
notb
or
xchg
cmp
sub
and
and
jge
popa
in
mov
or
pop
jo
pop
in
out
or
mov
fs
add
lea
sbb
fstpl
mov
pop
cmp
sub
push
add
push
outsl
dec
into
cmp
pop
fimuls
cltd
stc
gs
adc
jae
lds
xor
ror
lea
stc
sarl
mov
add
cmp
adc
mov
lods
and
test
mov
out
shr
xchg
or
lock
lock
imul
inc
sub
sub
mov
lock
cmc
fidivrl
sub
push
push
movsl
sbb
sub
push
jmp
and
push
inc
or
or
shrb
mov
and
xchg
shrl
mov
mov
sub
mov
or
pop
push
xor
inc
test
pop
sbb
inc
les
push
les
xor
mov
imul
loope
xor
sbb
pop
mov
outsb
push
movsl
fstl
incb
inc
push
shrb
cmp
mov
pop
push
out
cmpsb
mov
sbb
je
sub
sbb
jnp
or
xchg
lds
rorb
cmc
cmc
pop
mov
and
int
add
pusha
jo
lock
mulb
loopne
dec
push
and
push
xor
add
inc
movl
cwtl
pop
sbb
push
sub
inc
xchg
inc
xchg
push
out
mov
xor
adcb
daa
popf
push
mov
ss
enter
jp
xchg
ss
repz
or
push
cmpsl
sbb
push
lret
xchg
shll
cli
pop
lock
xor
mov
in
lock
out
ret
jnp
cmpps
adc
dec
notl
ljmp
in
repz
out
sti
das
or
cmp
enter
mov
std
mov
pop
scas
pop
scas
mov
cmp
ror
dec
invd
inc
inc
cli
mov
divl
push
fmul
jb
or
cmp
mov
std
sub
sbb
cmp
cmc
inc
jmp
cmp
das
sarl
cmp
daa
or
in
jae
out
cld
push
cmc
in
imul
shll
sub
shr
stos
call
std
imul
addr16
add
in
test
inc
cmpsb
pop
inc
jg
pop
std
jne
jo
jo
mov
sub
scas
cmp
das
pop
lock
ss
jns
insl
sub
imul
jp
subl
lods
jl
dec
lods
jg
add
enter
stos
mov
push
rcrb
aam
daa
dec
sub
cmp
stos
repnz
out
test
movups
imul
divl
pop
imul
ljmp
push
lods
pop
adc
sub
mov
lahf
stos
fwait
loop
fdivrs
pop
xor
ja
sub
lods
jle
bound
scas
cmp
imul
inc
and
sub
ljmp
push
hlt
stos
xchg
sub
or
ljmp
mov
daa
sub
sbb
dec
xor
cltd
test
leave
sub
cwtl
sub
repnz
fsubrp
sub
mov
jae
push
repz
outsl
lods
enter
hlt
movsb
outsb
dec
stc
push
sub
call
adc
sub
sub
xchg
xor
imul
mov
pop
sub
imul
stos
enter
sub
lods
daa
xor
imul
stos
add
stos
clc
push
pop
xchg
sbb
imul
int3
dec
or
out
jns
ss
stos
sti
subl
loopne
lods
mov
inc
mov
or
mov
sub
sbb
mov
cmpsb
mov
push
inc
mov
int
sub
sub
imul
in
jl
outsl
pop
add
inc
mov
or
or
std
add
mov
movsb
sub
stos
and
imul
cltd
sub
sub
test
or
sub
mov
push
dec
add
add
lret
lods
sub
lret
mov
imull
add
push
in
std
and
sub
cmp
scas
sbb
jmp
in
adc
jmp
sub
test
mov
lods
addr16
mov
sbb
xor
pop
test
pop
inc
push
imul
push
jmp
xchg
stos
pop
sub
std
test
cmp
add
mov
out
sarl
xor
push
in
mov
insb
xor
lods
sahf
imul
inc
es
mov
mov
jp
sub
and
jne
or
sub
test
sub
loop
out
push
jp
jmp
mov
popf
out
mov
lods
call
insb
fnsave
fisttpll
lret
int
jo
and
adc
femms
jmp
imul
sbb
pop
outsl
pop
sub
test
jno
sbb
sub
and
pusha
push
popa
push
and
in
dec
addr16
sub
test
stos
imul
hlt
sub
sub
outsb
adc
in
shr
jmp
out
ja
sub
xor
or
fucomip
jg
sub
int
push
mov
outsb
dec
insl
scas
jnp
out
stos
sti
test
mov
push
jmp
daa
movsl
out
es
movsb
shlb
daa
lahf
stc
arpl
or
xor
adc
pop
lods
jb
sub
jns
sub
scas
push
xor
icebp
stos
sbb
xor
mov
mov
jb
andl
jmp
outsb
ja
add
mov
inc
cmp
lods
sub
sbb
cmpsb
shll
out
mov
xor
bound
and
pop
sub
das
pop
mov
out
and
jns,pn
scas
xor
cmp
dec
pusha
and
and
jb
or
sub
sbb
sub
in
rclb
pop
jae
shrl
jmp
jecxz
adc
xor
pop
jmp
pop
in
movsb
add
and
call
xchg
scas
nop
mov
xor
dec
lock
jb
cmp
mov
int
adc
jno
pop
mov
xchg
outsb
jmp
in
fucomp
mov
cld
test
stos
arpl
flds
jle
repnz
outsb
cmp
call
movsl
lods
sti
cmpsb
iret
inc
or
sub
xlat
arpl
rorl
sub
mov
out
in
sahf
pop
daa
xor
inc
mov
jp
and
outsb
or
sbb
push
sub
sub
sarb
test
and
daa
ret
sub
jmp
outsb
sub
jmp
add
pop
outsb
loop
popa
xchg
and
cmpsb
jb
or
in
push
sti
xor
jmp
sbb
xor
xchg
call
mov
lods
scas
scas
insb
ss
add
dec
test
lods
out
jmp
imul
test
cli
cmpsl
fwait
outsb
mov
mov
lcall
mov
mov
lods
sub
sbb
daa
pop
mov
lock
pop
sbb
adc
push
popf
jmp
dec
out
cmp
das
ljmp
sbb
pop
jmp
mov
test
icebp
sub
in
xchg
sti
cmpsl
and
and
and
in
lock
imul
scas
in
inc
scas
mov
movsb
jo
mov
and
cmpsl
inc
sub
dec
cmp
imul
out
adc
or
push
sub
repz
sub
stos
scas
ljmp
jb
stos
loope
test
jmp
sub
movsl
mov
insl
fs
cmpsl
loope
and
sti
imul
xor
fadds
push
gs
and
pop
insl
sub
ljmp
out
jmp
in
sub
lods
pop
push
cltd
pop
xchg
adc
mov
and
push
cmp
and
fs
xchg
dec
jmp
bound
loopne
fdivrp
push
leave
jbe
adc
mov
sbb
mov
lods
jnp
jns
mov
add
test
das
xor
inc
out
nop
adc
cmp
push
lods
imul
in
xchg
sub
lahf
and
ljmp
jmp
data16
mov
sbb
jo
scas
cmp
dec
loope
daa
sbb
sbb
mov
mov
sbb
mov
lock
jecxz
xchg
and
xchg
mov
mov
xor
dec
out
mov
insb
lods
add
lods
clc
jge
scas
xor
jnp
out
and
ds
repnz
sub
mov
xor
push
data16
in
movsb
fldenv
ss
jmp
pop
rcrl
repnz
cmpsb
rep
inc
lods
test
out
repnz
xor
xorb
xor
outsl
fucomi
stos
sti
add
cld
mov
jp
pop
jmp
lods
or
mov
sub
dec
mov
sub
and
jmp
sbb
divl
fldl
ss
std
and
jp
mov
jp
pop
icebp
mov
mov
subl
stos
mov
jmp
loope
fisubrs
xor
pop
adc
out
and
cmp
sub
jae
sahf
hlt
adc
insb
xchg
aad
mov
imul
arpl
into
pop
pop
lods
mov
out
sub
in
jmp
in
call
xor
mov
mov
dec
dec
icebp
sub
xchg
scas
cltd
das
adc
add
mov
inc
out
aas
sub
scas
xchg
in
sbb
loopne
jbe
mov
and
and
or
fsubrp
mov
repz
xchg
dec
jmp
cs
scas
insb
insl
out
mov
mov
js
lock
pop
in
popf
sub
xor
adc
in
or
pop
outsb
add
sti
repnz
and
lods
mov
pop
mov
fwait
addr16
cmpsb
or
jbe
inc
popa
jmp
pop
ds
sahf
xchg
out
jno
sbb
xor
or
imul
or
stos
loopne
cmp
lock
xchg
pop
jg
mov
loope
sub
out
xor
xor
xchg
mov
std
xor
lods
imul
mov
in
and
mov
mov
xor
mov
jb
mov
add
das
popf
sub
insb
lods
nop
repz
push
push
stos
shr
inc
lods
push
imul
stos
push
and
lods
sub
dec
outsb
push
mov
or
jle
cmp
jns
lods
sub
loop
fs
popa
mov
fcmovnu
and
xchg
or
pushf
mov
cmp
jmp
icebp
and
sub
or
cmp
sub
nop
jmp
imul
push
jmp
mov
cwtl
outsb
into
out
xchg
adc
scas
subb
in
cmc
and
sahf
mov
jmp
mov
cs
inc
mov
xor
mov
jne
ss
out
pop
sub
test
pop
out
out
es
call
in
inc
insl
mov
jle
or
sbb
outsb
outsb
insb
in
insl
sbb
int3
out
jne
cs
movsb
stos
stos
lret
sub
ljmp
bound
push
insb
pop
add
pusha
jmp
add
not
jbe
mov
repz
sub
push
jmp
mov
pop
lods
in
lea
xor
jne
inc
sub
sbb
imul
mov
mov
sub
sahf
jecxz
popa
xchg
pop
and
sbb
sbb
dec
mov
test
mov
js
cmp
push
sub
sub
push
insb
mov
bound
aas
daa
shrb
stos
hlt
sub
and
outsb
imul
jle
adc
aam
out
dec
and
data16
sbb
jmp
lods
repnz
jecxz
loope
lahf
imul
sbb
ljmp
xchg
jmp
xor
xor
lahf
mov
aas
xor
and
arpl
cmp
insb
js
lods
lods
sub
imul
or
jmp
out
mov
mov
push
jmp
pop
imul
pop
lcall
call
adc
cld
jmp
dec
hlt
arpl
shrb
sub
dec
or
in
or
imul
jb
sbb
lods
xor
jo
daa
pop
outsb
out
cli
sub
mov
repz
jmp
sbb
fnstsw
cs
push
sub
lahf
mull
mov
ss
xor
scas
fsubl
int3
push
and
cmpxchg
sub
push
sub
lock
mov
or
jmp
sbb
jo
jmp
and
out
jmp
addr16
mov
rorb
scas
xchg
out
pop
dec
imul
and
je
ja
sub
idivl
jbe
jmp
shrb
inc
gs
jmp
movsb
mov
push
imul
and
mul
add
jmp
and
shl
dec
repz
or
xor
outsb
loopne
cs
jmp
dec
in
loop
mov
fimull
push
sahf
inc
jmp
aaa
in
add
mov
jmp
and
dec
cmp
ja
jmp
cli
repz
jmp
sti
movsb
jae
pop
and
or
scas
loope
mov
test
imulb
mov
xor
jne
mov
fbstp
push
inc
mov
and
mov
jmp
ret
test
hlt
sti
mov
cmp
clc
mov
mov
jmp
popa
loop
bound
pop
iret
mov
jbe
inc
and
lods
pop
jno
arpl
cmp
mov
and
shr
xchg
jmp
fsubs
pop
pop
pop
pop
sub
mov
fstl
and
push
outsl
add
cld
imull
jp
jge
mov
out
mov
mov
sub
loop
sub
pop
jmp
lahf
or
lods
cltd
jmp
mov
ja
js
sub
push
jb
or
jmp
push
movsl
cmp
add
in
popf
cmpsb
fsubrl
cltd
lret
outsb
sahf
daa
out
adc
das
fidivl
jmp
mov
mov
jne
xor
push
inc
sub
scas
cmpsl
jno
mov
loop
loopne
pop
or
popf
pop
sahf
mov
xor
mov
negl
je
repnz
out
push
jmp
mov
mov
dec
pop
xor
push
pop
cmp
dec
jmp
jne
xchg
repnz
xor
mov
jp
mov
jl
and
stos
fwait
lods
dec
out
movsl
lock
popf
jmp
inc
ffreep
pop
mov
mov
int3
xor
out
jp
shrw
or
mov
jmp
dec
push
mov
sub
and
jmp
lret
imul
mov
cmp
cmp
fwait
icebp
pop
in
test
fucomi
daa
cmpsb
in
movsl
jne
stos
outsb
loope
loop
mov
sbb
jmp
subb
lods
mov
js
sti
and
data16
pop
pop
dec
jmp
cld
pop
xchg
push
lret
sbb
mov
jo
je
jbe
stc
jp
cltd
add
xor
scas
or
jmp
lcall
mov
mov
dec
out
cmp
lds
cli
nop
mov
lret
mov
imul
pop
fdivrl
scas
int3
pop
mov
xchg
jmp
cmpsl
mov
xchg
imul
jle
aam
sbb
stc
jmp
ja
je
mov
outsb
jmp
sub
pop
out
and
pusha
data16
out
jbe
fildll
loope
xchg
sub
jmp
xor
cli
jmp
cmp
imull
lods
cmpsl
daa
cmp
push
and
add
lcall
pop
imull
repz
cmc
leave
jb
loope
adc
sub
and
adc
inc
pop
sub
jecxz
sub
jmp
mov
test
pop
cli
push
mov
daa
ljmp
bound
push
out
mov
outsb
mov
xchg
lods
mov
rcrl
mov
xor
push
pop
addr16
pop
jns
push
or
and
mov
and
mov
imul
dec
mov
jmp
cmc
pop
xor
lods
cmp
xor
pop
push
jmp
push
pop
sbb
fs
jmp
iret
mov
xor
mov
jmp
push
push
mov
cmc
mov
je
outsb
sub
add
int3
and
and
loop
loope
or
std
in
jmp
scas
push
in
mov
sar
mov
das
jge
inc
movsb
in
popa
push
sub
jmp
pop
fwait
lcall
xor
xor
cli
adc
or
ja
xor
scas
or
xchg
dec
and
mov
fidivrs
or
shll
cltd
sub
jne
sbb
dec
mov
mov
jmp
addr16
lds
fcomip
sbb
pop
lret
jmp
dec
xlat
repz
int3
mov
icebp
stc
jbe
aaa
sub
popa
mov
out
jae
outsl
fucomip
js
stos
movsb
mov
stc
pop
push
cltd
add
pop
loop
push
pop
ja
fisubrl
stos
dec
icebp
cs
stc
or
cmpb
mov
outsl
jmp
push
add
sub
cwtl
mov
repz
xor
ss
imul
sub
adc
aam
pop
stc
sub
or
mov
aad
shl
loope
and
orl
sahf
sti
pusha
pop
in
sub
jne
mov
jmp
js
mov
repnz
sub
sti
cmp
das
sbb
fldpi
add
lcall
scas
aam
add
mov
push
xor
out
xchg
jmp
test
call
push
popa
sub
xchg
jmp
sub
ds
fnstcw
cmp
or
push
movsb
out
mov
fwait
nop
pop
push
or
adc
shr
dec
cmc
mov
jo
jmp
call
imul
js
shll
scas
add
mov
jmp
arpl
sbb
in
loope
sub
bound
ss
mov
mov
jb
ret
xor
and
xor
insl
imull
cs
push
rcll
lods
pop
fsubrs
lret
ss
cli
fucomp
jge
sub
push
aas
push
jmp
dec
jbe
outsl
aam
shr
fs
add
insb
pushf
cmpsl
jmp
push
sbb
pop
insl
popf
sahf
scas
pusha
mov
ficoml
adc
or
je
das
std
xchg
cmp
ja
jmp
mov
repz
pop
dec
pop
adc
mov
lahf
jmp
sbb
pop
pop
add
add
xor
add
inc
fnstcw
cltd
scas
cmpsl
sub
filds
fdivl
jmp
push
pop
rcr
add
add
fidivrs
test
sub
sti
lods
jp
jl
mov
repz
sub
sub
movsb
cmp
cmp
repnz
xchg
test
ljmp
xchg
mov
dec
sbb
cmpsl
push
jmp
mov
pop
xor
insb
pop
jnp
dec
jecxz
xchg
jmp
test
cmc
jmp
cmp
cmpsl
jbe
jmp
push
scas
mov
rep
xchg
sub
sahf
and
fcomps
pop
loope
inc
and
mov
bound
mov
je
loopne
mov
lods
jg
movsl
mov
fucomip
std
push
lcall
loopne
movsl
scas
test
repz
or
inc
mov
lods
push
cmc
cmpsl
lock
or
jb
shlb
repz
mov
jecxz
jmp
pushl
inc
jbe
mov
jg
orb
xor
jmp
cmpsb
stc
pusha
cmp
pop
lds
lcall
loop
sub
insl
bnd
jmp
xchg
cmp
push
cmp
aaa
sti
cmc
push
out
ss
sub
cmp
pop
pop
addr16
xchg
fcoml
repz
and
jmp
out
pop
mov
cli
xchg
push
adc
cmp
jmp
fsubrl
jmp
fcmovu
fwait
xchg
push
xlat
mov
xchg
dec
pop
popf
pop
mov
repz
cmp
jmp
fistpll
mov
repnz
mov
int3
mov
scas
pushf
data16
pop
xchg
pop
fstpl
inc
cvtps2pi
jmp
repnz
mov
ja
out
cmp
ds
and
sbb
popf
hlt
push
insb
lods
gs
pop
in
mov
and
stos
aam
std
pop
fdivl
test
gs
ja
cmp
jge
outsb
ds
sti
push
js
xor
sub
loope
xchg
pop
ret
sbb
andb
aam
outsl
adc
jl
xlat
repnz
pop
sbb
jp
mov
mov
pop
cltd
sbb
add
sub
mov
cmc
fidivrl
ja
push
jmp
stc
adc
lock
repz
daa
and
imul
loope
pop
sbb
sahf
bnd
dec
out
mov
jae
jle
les
mov
in
mov
stos
jmp
lods
pushf
ret
sub
xor
stos
push
jmp
xchg
jb
repz
mov
mov
cmp
xor
int3
sub
sub
mulb
pop
popa
or
fidivs
xor
je
jmp
mov
mov
mov
mov
fcoms
pop
push
pop
mov
xorb
sub
or
outsb
outsl
aaa
insb
in
jmp
cmpsl
loop
xchg
jmp
xor
pop
bound
in
arpl
mov
pop
popa
scas
jmp
loop
fdivp
sahf
mov
cmp
mov
push
jmp
lahf
push
adc
pop
stc
xchg
inc
fiaddl
push
data16
fisubrs
out
imul
xor
sbb
jmp
adc
insl
in
ss
adc
mov
lods
mov
pavgw
stos
sub
outsl
mov
cmp
outsb
mov
mov
jmp
mov
cmp
or
sub
sub
lods
scas
add
mov
fsubl
stos
lods
cmc
pop
mov
scas
pop
lods
or
aaa
sub
lods
in
and
jmp
mov
sahf
push
and
stc
out
lods
test
ss
mov
je
mov
in
add
pop
sbb
fwait
mov
jmp
add
and
lds
xor
mov
or
jmp
jge
and
xchg
jb
sub
jmp
or
jecxz
cmp
movsl
loopne
fildll
sub
xchg
mov
hlt
mov
and
jbe
dec
xchg
jmp
lea
shrb
mov
and
adc
sub
dec
mov
mov
mov
mov
sub
mov
jo
jmp
mov
cs
out
lods
cmp
stos
inc
sbb
mov
xor
mov
jmp
sbb
aam
hlt
xchg
jmp
ss
mov
jns
fdivs
icebp
add
jmp
loop
jecxz
fs
xchg
sub
sub
stos
xor
repnz
lock
repnz
mov
filds
scas
shrl
in
mov
imul
fbld
fdivrp
xchg
and
jo
sbb
jne
sub
ja
xor
lods
jmp
out
in
movsl
fisubl
test
imul
sub
xor
ja
pop
pusha
mov
cmp
in
mov
lock
jae
fsubrl
push
and
mov
loop
pusha
pop
pop
rcrb
and
push
outsb
mov
xor
jne
mov
sub
test
or
out
call
or
sbb
sub
aad
cwtl
repnz
xchg
jns
test
fucomip
push
sub
outsl
push
jnp
sub
in
xor
les
jmp
int
adc
imul
out
sub
xor
xor
scas
repz
outsl
loopne
lods
lds
push
repz
addr16
pop
sub
lods
and
fldt
mov
outsl
or
jmp
in
and
das
jmp
inc
lods
in
fldl2t
mov
jmp
in
and
clc
mov
loope
pop
inc
mov
test
insb
out
daa
xor
add
jle
pop
ss
pop
mov
out
repnz
or
movsb
xchg
fs
ljmp
scas
fildll
mov
inc
mov
into
in
out
sub
imul
jmp
sbb
jmp
jle
sbb
dec
and
cmpsb
xchg
test
jo
cmc
lods
inc
das
aas
or
mov
fucomip
subl
pusha
rcrb
cmpsb
repnz
in
lods
mov
jb
mov
adc
jno
cmpsl
pop
test
outsb
outsb
xchg
insl
pop
jmp
stos
loope
jae
and
jecxz
and
mov
pop
jmp
fwait
adc
fistpll
es
lods
stc
sbb
add
inc
mov
add
mov
jns
jne
pop
imul
fcmovnu
pop
icebp
fdivrl
mov
jmp
shll
out
ret
je
movsl
or
jmp
xor
cmp
sbb
xchg
jmp
loopne
push
sbb
pop
stos
cmp
popf
mov
jb
cli
lods
jg
sbbl
sti
or
pop
inc
add
clc
insl
out
adc
pushf
and
mov
movsb
lcall
cmp
sbb
es
stos
subb
ss
mov
and
daa
cli
lods
repnz
ds
sti
test
arpl
in
loopne
pop
xor
sbb
xchg
inc
aad
mov
mov
jb
mov
lret
shrl
jg
fsubp
sub
clc
xchg
loope
dec
jmp
into
loopne
gs
push
sub
push
xor
xor
ja
xchg
cmpb
jle
mov
lret
jmp
subl
movsl
sbb
mov
imul
fstl
test
sbb
subb
adc
rcrb
pop
inc
add
cmp
scas
cmc
out
mov
xchg
adc
cwtl
jmp
or
out
sub
push
sub
bound
js
inc
ja
xor
and
jmp
mov
outsb
sbb
aam
jg
pop
and
fs
call
sti
in
jle
mov
testl
and
xor
push
pushf
pop
ficompl
mov
arpl
addr16
xor
pusha
sub
add
dec
lock
jb
out
sbb
lahf
adc
and
shlb
and
gs
call
in
jnp
lods
mov
jmp
xor
jmp
mov
div
testl
pushf
in
int3
sub
and
push
fsubl
mov
mov
pop
imul
sub
dec
mov
icebp
push
pop
push
mov
jne
out
scas
adc
or
sbbl
test
outsb
xchg
push
pop
cmpsb
mov
scas
fsubl
jmp
dec
sub
mov
cmc
add
adc
inc
push
jg
jmp
in
fsubr
adc
outsb
fisttpll
mov
push
adc
loope
or
ljmp
xor
xor
mov
jmp
push
cmp
xor
outsb
sub
fs
pop
dec
popf
std
fwait
jge
imulb
pop
xchg
sbb
mov
jl
inc
dec
cmp
lret
sti
shrb
outsb
xor
xchg
fcompl
rcrb
sbb
fisttps
insl
hlt
inc
stc
lods
xor
jb
gs
jle
sti
mov
or
jmp
and
fwait
add
in
jmp
xchg
jno
xor
lods
fucomip
out
and
pop
out
lock
clc
push
xor
cmp
xchg
add
add
mov
adc
jbe
out
jmp
in
sbb
aam
nop
jmp
push
mov
inc
push
mov
xchg
out
scas
pop
mov
inc
mov
dec
and
lods
inc
movsb
mov
jp
jmp
jecxz
push
cvtps2pd
enter
leave
sbb
and
popf
out
stos
push
fnsave
mov
test
movsl
jbe
sbb
ss
testl
and
movsl
push
lods
jl
adc
lods
and
hlt
stos
repnz
ja
mov
inc
loope
jno
jmp
aaa
data16
outsb
std
sub
movsl
mov
pop
adc
and
jmp
test
in
dec
das
stos
repz
jo
out
add
mov
sub
jp
outsb
inc
outsl
xor
jbe
jmp
cmp
mov
es
popa
int3
sbb
sbb
roll
xor
inc
je
sub
mov
xor
outsl
imul
and
in
mov
subb
pop
es
xchg
gs
fs
or
stos
imulb
sub
test
pop
fisttps
movsb
and
jmp
sbb
push
xor
je
sub
cli
lds
out
pop
push
mov
lea
pusha
outsb
mov
jl
stos
lods
in
push
scas
enter
icebp
int3
cmp
xor
jb
shrb
daa
insb
out
ds
mov
sub
and
push
movsb
push
jmp
imul
inc
and
jmp
dec
pop
shlb
lods
jmp
sbb
push
sub
jo
sub
jg
inc
std
incl
push
push
sub
and
mov
rcrl
mov
mov
jmp
sub
mov
mov
aaa
sub
mov
xor
test
jae
lods
mov
push
imul
outsl
push
sbb
popa
and
sub
or
scas
pop
jmp
sbb
sbb
mov
mov
testl
mov
jmp
mov
stos
pop
pop
xlat
add
notl
int
out
shrl
je
jns
mov
mov
sub
mov
sbb
stos
or
mov
mov
mov
jge
pavgw
mov
pop
movsl
cltd
dec
fstpl
ret
add
xchg
inc
addl
adc
fldl
or
out
std
gs
add
jmp
mov
adc
pop
lcall
std
push
pop
lods
cmp
sbb
mov
pusha
cli
jae
imul
mov
jmp
pop
dec
push
jne
stos
push
popf
jp
push
out
sub
int
push
repz
scas
jmp
xor
mov
jmp
inc
roll
xor
add
jmp
pop
loopne
xchg
xchg
repnz
adc
xchg
push
repz
add
rep
jmp
repnz
cmp
push
jl
cmp
cmc
scas
fptan
sbb
jmp
pop
data16
mov
loopne
pop
xor
scas
adc
mov
int
pop
sub
sbb
stos
outsl
sub
test
out
push
and
xor
nop
clc
pop
cli
rorl
cmp
emms
js
xchg
imul
inc
push
movsb
cwtl
jne
aam
jmp
pop
sub
xchg
in
stos
scas
jo
cmp
ret
mov
sbb
mov
jo
scas
mov
sub
imul
arpl
sub
loopne
std
loop
xchg
or
stos
add
icebp
lods
cmpsl
sub
xorb
sub
fidivl
xor
mov
jo
stos
jmp
and
dec
sbb
jmp
loopne
arpl
int
jmp
cltd
xor
jmp
mulb
lock
scas
jmp
ljmp
movsb
cmp
lods
loop
lahf
add
mov
add
jmp
bound
lock
dec
lods
imul
call
push
jmp
pop
mov
les
or
mov
push
cld
pop
shrl
and
out
in
xchg
jne
mulb
mov
icebp
sub
std
stc
sub
pusha
ljmp
xor
out
arpl
pop
lods
pop
mov
and
and
sbb
add
in
subb
jmp
jp
enter
jne
mov
and
jns
mov
mov
in
jle
dec
in
outsb
jecxz
and
pop
pop
daa
es
lods
and
jmp
add
js
sub
sub
lods
ljmp
dec
out
mov
jmp
out
loop
jmp
push
mov
sbb
test
xor
jns
jne
mov
stos
and
sub
sbb
subb
jb
xchg
cmp
jmp
mov
jmp
sahf
lods
jno
cmc
jmp
mov
in
jmp
inc
stos
cmpsl
lods
mov
ret
pop
insb
data16
xchg
mov
fcomip
stc
xor
and
push
out
out
push
in
bound
arpl
dec
daa
mov
jno
cmp
adc
js
or
pop
int
int3
aad
lcall
cs
add
std
xor
lahf
add
ret
cld
mov
sub
jmp
pushf
dec
fwait
mov
mov
and
mov
inc
lods
jmp
scas
out
xchg
xor
fxtract
std
je
mov
mov
mov
and
lods
add
insb
out
sub
xchg
lods
and
cmp
lock
sbb
sub
stos
sub
mov
jmp
xor
sbb
outsb
add
inc
jns
mov
cwtl
test
and
jmp
fbld
push
movsl
repnz
aaa
scas
icebp
js
xor
sub
cmc
in
jmp
repz
mov
in
pop
fldt
mov
stc
test
sub
pop
imull
and
cmp
and
bound
jmp
inc
das
sbb
fidivs
xor
dec
jge
push
add
testb
out
pop
movsl
and
loopne
fwait
jle
lret
lcall
jecxz
cmpsb
fildll
or
jno
xor
cmpsl
icebp
test
adc
xchg
cmp
mov
ljmp
or
gs
and
loop
push
and
mov
pop
jmp
lahf
inc
pusha
imul
lods
jmp
mov
xor
mov
jg
and
std
mov
outsl
or
or
test
jmp
push
dec
sbb
sbb
sub
out
mov
repz
repnz
popf
in
adc
add
xor
inc
mulb
cmp
lock
das
es
cmp
jmp
pop
inc
sbb
jmp
lahf
cmp
or
in
xchg
jmp
stos
clc
mov
cmc
repnz
sarb
into
stc
inc
mov
lds
das
icebp
pop
sub
fsubl
sbb
jmp
push
push
sbb
mov
scas
add
in
insb
xor
cli
lods
lods
mov
sbb
jno
je
test
and
cmp
jg
mov
mov
test
fsts
aas
fstpl
cmpsl
jmp
out
int
fbld
cmp
jae
sar
jmp
or
scas
jb
mov
movsl
sahf
loope
jmp
and
lods
fnstenv
cltd
lock
sbb
popf
cmpsb
add
xchg
in
push
mov
hlt
in
add
sbb
std
xchg
jle
ja
pusha
jp
addr16
and
mov
xchg
sub
pop
cmpsb
sbb
bound
pushf
sub
lods
add
invd
ljmp
repnz
mov
jmp
pop
ja
mov
cmp
subb
pop
pop
jnp
and
rorb
lds
shr
outsb
insl
adc
sahf
aaa
jle
jp
sti
fistpll
xor
mov
jmp
or
adc
std
fisubs
push
lahf
das
jmp
repnz
inc
push
imul
sub
sbb
scas
test
push
pop
imul
ja
jnp
mov
outsl
jle
jo
shll
xor
xor
pop
call
out
and
cli
frndint
jnp
es
stc
divb
jmp
add
and
jmp
mov
mov
adc
cmpsb
pop
out
push
imul
outsb
cmp
sti
jns
push
in
mov
je
shrl
repnz
adc
cmc
adc
mov
pop
insl
xchg
sub
outsb
mov
pop
pop
add
test
and
out
jno
aaa
jmp
jp
mov
push
jnp
sub
or
repnz
jge
in
repnz
mov
popa
lods
addr16
loop
jmp
push
in
mov
and
push
in
jbe
sub
das
push
mov
aam
pop
cmp
test
sub
icebp
addr16
pop
jmp
sbb
and
and
shrb
inc
mov
pmuludq
sub
out
sbb
test
jl
jmp
lock
sub
into
sub
mov
cmpsb
ljmp
stos
out
sub
scas
jmp
insl
jbe
push
stos
cmp
sub
cmp
jmp
es
jecxz
jmp
das
xchg
cmc
mov
mov
jmp
daa
dec
mov
jp
pushf
push
mov
imul
mov
cmp
push
sbb
subl
push
lods
fildll
jmp
call
inc
scas
jmp
mov
xor
outsl
add
movsl
jmp
shr
xchg
out
sub
ret
in
in
xor
ljmp
fsubrp
rcrl
bound
push
mov
xor
jmp
jge
ss
shrl
and
and
mov
call
sub
adc
lods
or
cmpsl
aad
or
mov
ljmp
mov
or
mov
xor
lcall
pop
cmpsl
pop
sbb
daa
xchg
movsl
iret
repz
and
adc
scas
add
cli
out
mov
imul
sub
fsubr
mov
outsb
xor
loop
mov
es
imul
inc
test
jmp
sub
icebp
jmp
mov
je
mov
mov
sub
lret
jmp
mov
insb
test
and
lea
jecxz
scas
lods
cli
out
out
xor
call
jmp
and
mov
jmp
cs
mov
jo
xor
mov
aaa
jp
insl
jns
jle
pop
jmp
test
cmpsb
add
jmp
mov
mov
xchg
movsl
andb
imul
dec
out
lock
testb
jmp
mov
jae
mov
jno
fldt
out
fisubrl
push
lods
cld
and
arpl
out
daa
shlb
or
or
movsb
icebp
loope
pop
movsl
and
lods
push
decl
jo
and
inc
cmp
jmp
jbe
mov
jno
sub
xor
loope
push
in
jmp
pushf
add
aas
dec
arpl
sub
je
xor
mov
negl
je
and
cltd
pop
push
dec
sub
cmp
insb
push
movsl
push
in
and
in
push
movsb
scas
mov
test
sbb
xlat
cmpsl
adc
enter
add
cmp
mov
push
fldcw
inc
sbb
push
popf
lods
inc
xchg
sub
out
sub
lock
fidivs
out
xor
push
cs
sbb
repnz
je
hlt
cld
or
mov
outsb
xor
push
test
movsb
jo
les
jmp
sahf
fistpl
jmp
arpl
mov
bnd
cmpsb
or
xor
xorb
jge
add
les
jl
jbe
mov
or
fisubs
xchg
lods
pop
aad
fcomp
fisubl
pop
pop
es
lds
or
js
push
mov
scas
push
scas
std
and
scas
jno
xor
sbb
mov
mov
sbb
arpl
push
loope
sahf
fcomps
lock
sub
cmpsb
ret
repz
and
and
stos
jmp
xor
jns
and
dec
xchg
and
xlat
lahf
fistpl
adc
push
fimuls
jge
cmpsl
mov
insl
lahf
mov
xor
adc
fs
push
mov
je
xor
jae
gs
pop
push
mov
xor
lcall
ret
loope
and
or
in
mov
inc
out
sbb
hlt
daa
add
xor
mov
bnd
xor
sti
fs
push
cld
adc
jo
push
mov
out
jae
sbb
mov
adc
sbb
push
mov
jmp
call
in
xor
repz
mov
jno
es
outsl
jmp
outsb
mov
shrl
stos
mulb
in
mov
cli
and
fbld
and
and
stos
mov
dec
sub
test
jmp
repz
xor
jmp
je
ss
dec
in
jmp
stc
out
popa
int3
push
sub
pop
xchg
sti
mov
in
stc
lock
jo
je
jb
jmp
outsl
out
pop
scas
jmp
add
lods
sbb
lods
or
leave
sub
daa
inc
push
cmpsb
arpl
and
and
mov
pop
in
in
popf
out
rorb
outsb
cmp
ret
push
push
outsl
dec
lods
out
test
jne
mov
pop
scas
dec
fbstp
push
xor
cmp
fs
dec
addr16
or
ret
jb
repz
bnd
out
xchg
out
jnp
add
outsl
das
mov
xchg
mov
in
jmp
sub
movsl
inc
scas
bound
pop
lods
and
push
outsl
ret
mov
mov
xor
insb
dec
es
in
and
outsb
and
arpl
mov
xchg
insb
fnsave
sub
or
je
xor
jmp
fsubl
jge
sahf
stos
pop
test
pop
es
sbb
outsl
jae
hlt
jmp
popf
icebp
mov
cmc
sub
daa
xlat
cmpsl
pop
jmp
sbb
insl
mov
or
cmp
sub
jmp
ljmp
jmp
cld
out
sub
sbb
jmp
outsl
or
pop
pusha
sbb
pop
arpl
mov
in
ss
mov
dec
imul
daa
outsb
sub
ljmp
shll
out
lret
pop
adc
and
outsb
jo
sub
push
sub
fs
out
sub
sub
insl
iret
lods
lock
mov
mov
adc
xor
or
out
cmpsb
xchg
lock
inc
jo
repnz
cmp
out
sub
inc
cmpsl
leave
in
sub
jl
sub
lods
sbb
jne
jmp
into
mov
add
loopne
jns
push
call
fisubl
loope
arpl
dec
repnz
aad
stos
repnz
ljmp
test
mov
jmp
mov
inc
repz
icebp
clc
lods
outsl
mov
sub
ljmp
call
sub
stos
mov
addr16
movsl
mov
pop
and
filds
lods
stos
adc
xor
jbe
jmp
cmpl
stc
mov
jmp
in
insl
pop
ljmp
jmp
loope
mov
and
xchg
sahf
mov
adc
lods
fisubrs
call
test
lods
mov
dec
xlat
or
pop
jb
outsl
adc
adc
push
lods
jae
jmp
test
push
lods
add
lret
cmpl
mov
scas
clc
cmpsb
std
es
mov
nop
sub
or
lods
popf
mov
cmp
shl
shr
dec
in
sub
cwtl
mov
pop
arpl
sub
lods
test
shrb
ljmp
test
xchg
and
xchg
push
lods
jmp
icebp
cmp
mov
jbe
jb
out
lods
mov
jecxz
loopne
lahf
jb
popa
jmp
and
lods
inc
imul
xchg
notw
loopne
pop
pop
daa
and
imul
adc
jmp
ret
add
mov
aaa
daa
pop
lahf
push
sbb
sbb
stos
jmp
out
insl
mov
jo
insb
jmp
ljmp
lods
xor
jmp
out
lret
xor
cld
js
mov
idivb
jp
jmp
scas
sbb
popf
stos
pop
add
pop
fsubr
adc
push
mov
xor
das
aas
jmp
insl
sub
jmp
in
bound
sub
and
inc
mov
mov
mov
in
lcall
push
pop
add
clc
mov
repz
loopne
jmp
stos
shrb
jge
cwtl
lods
xor
ss
jmp
insl
and
jmp
aaa
in
cmp
fldt
dec
pop
xor
lock
pop
repnz
sbb
cld
popa
adc
pop
jp
dec
sub
in
outsb
outsl
and
sub
or
pop
cmpsl
mov
sbb
sub
mov
xor
cmc
jmp
jbe
mov
icebp
mov
jmp
push
call
int
shl
sbb
daa
and
dec
jg
lods
mov
mov
jo
fnstenv
adc
jg
ds
cmp
xor
lods
pop
ljmp
cmpsl
xor
test
or
int
mov
aad
add
jb
or
pop
scas
cltd
je
clc
imul
sbb
in
xor
es
mov
daa
push
vmread
insb
test
push
lods
ss
leave
jmp
pusha
mov
icebp
data16
lods
jmp
adc
mov
jecxz
data16
stos
pop
jmp
popf
xor
and
scas
or
cmp
enter
xchg
jmp
jmp
in
jo
jmp
scas
addr16
in
mov
stos
sub
pusha
push
inc
jmp
push
push
sub
cs
cmp
insl
mov
data16
cmpsl
stc
daa
ffreep
fsubr
inc
fnsave
sub
in
jmp
fptan
movsb
divl
cmp
fistpll
daa
mov
or
cmpsl
call
or
mov
test
out
shlb
gs
cmpsb
pop
add
push
call
repz
daa
sub
out
xor
mov
stos
and
sub
imul
sub
xlat
int
jmp
sub
lods
mov
sti
es
movsb
pop
jecxz
sbb
loope
cwtl
loopne
arpl
sub
xchg
leave
out
stc
lock
push
mov
repz
mov
or
mov
subl
divps
jo
mov
or
jmp
stos
and
xor
lods
lahf
cmpsl
jb
sub
scas
jmp
out
add
mov
xchg
jb
push
jo
stos
sub
xor
pop
lods
push
sub
or
adc
repnz
lods
jbe
push
mov
cmpsb
sbb
scas
setle
xor
mov
push
hlt
jmp
out
add
jnp
mov
ja
mov
xor
xor
outsb
dec
or
pushf
movsb
pop
lods
jecxz
loope
pusha
mov
cmpsl
pop
in
movsb
out
jbe
dec
add
sub
into
xchg
movsl
mov
lock
xor
mov
bnd
mov
mov
xor
sub
ljmp
es
jmp
gs
nop
push
stos
sbb
sar
sbb
test
gs
cmp
pop
pop
data16
jecxz
sub
adc
icebp
shl
pop
idivl
xchg
sti
or
fldt
or
xchg
popa
and
xchg
ljmp
jp
adc
jp
xchg
jmp
sub
cltd
test
in
js
sub
jno
or
and
daa
ljmp
sub
lds
dec
sub
and
add
imul
into
in
pop
stos
imul
jmp
push
and
arpl
in
stos
mov
jnp
out
jbe
and
cmp
or
scas
jg
dec
addr16
pop
add
adc
lods
imul
fisubrl
pop
push
popf
movsb
xor
pop
lods
andl
imul
outsl
sbb
mov
inc
mov
es
shrb
shrl
lods
ljmp
in
jmp
leave
sub
lods
aaa
cmpsb
sbb
frstor
inc
out
pop
test
jp
int3
sti
push
outsb
push
sub
mov
sub
lods
int
test
outsl
jmp
jb
jae
mov
icebp
mov
mov
andb
enter
fcomps
call
or
repnz
enter
aas
sub
xchg
test
mov
lods
jnp
and
mov
mov
outsb
add
shr
cmpsb
in
imul
jmp
xchg
or
jl
fisubl
cmpsl
xchg
hlt
stos
sbbl
div
shlb
sti
in
xor
pop
sub
mov
and
loop
and
stos
fsubrl
movsl
xor
jg
repz
sub
daa
call
lods
dec
cmpsb
inc
imul
adc
test
jmp
xor
out
andb
dec
imul
add
jmp
jo
jno
repnz
mov
cli
scas
mov
push
sub
jp
xchg
or
and
fs
cmpsb
cmc
test
in
jo
sub
arpl
xchg
cmpsb
dec
mov
repnz
imul
or
jb
or
fs
jmp
jecxz
mov
movsb
aaa
sub
jmp
scas
subb
mov
hlt
mov
jmp
inc
jo
mov
std
stos
fwait
notl
mov
pop
push
in
arpl
gs
mov
cmpsl
xchg
daa
sub
sub
in
lods
sub
mov
xor
jmp
insw
or
cwtl
cmpsb
lock
push
cmpsl
fucomip
jmp
shrb
mov
or
sub
push
cmpsl
and
mov
movsb
dec
mov
jmp
mov
pop
sub
jmp
out
cmp
jmp
int3
jno
jo
les
xchg
sub
test
out
cmpsb
sub
addr16
sbb
je
inc
sub
lods
andl
das
jmp
sub
in
in
out
push
imul
adc
test
jle
lcall
mov
out
add
or
insb
cmpsb
fcoml
movsl
es
ljmp
or
ljmp
stos
repnz
das
push
lcall
movsb
push
and
decl
mov
jmp
outsl
adc
mov
cmp
jmp
jns
ret
in
jmp
push
push
repnz
mov
subb
sub
jmp
mov
je
sub
jae
push
push
sbb
pop
scas
xor
sbb
mov
lock
xor
cmc
push
repnz
in
fistpll
dec
push
fwait
cmpsl
xchg
out
xchg
fistl
stos
nop
test
sub
lods
inc
push
and
insl
out
or
push
xor
scas
daa
imull
jnp
shll
out
dec
sub
test
es
movsl
test
dec
int3
in
ucomisd
inc
lods
sub
stos
lret
pmaxub
jns
scas
mov
sbb
cmpsl
pop
jmp
push
jmp
shlb
xorb
xor
mov
xor
mov
cs
or
insb
out
and
and
in
mov
stos
sub
jb
in
je
adc
sub
and
push
adc
pop
lods
cmp
sub
scas
xor
pop
scas
mov
in
pop
jmp
or
mov
repnz
or
sti
cmpsb
inc
movsl
mov
sub
out
inc
dec
xchg
and
fmull
push
test
jmp
data16
repz
sbb
outsb
sbb
arpl
scas
sbb
sbb
sub
inc
sub
out
test
add
adc
insb
sub
sub
mov
fwait
test
push
dec
leave
imul
lock
insb
vmovq
and
in
mov
xchg
callw
sub
push
ljmp
jbe
outsb
rcl
repnz
mov
sub
or
imul
lods
mov
prefetch
sub
xor
sub
imul
lods
insl
shr
das
jg
scas
outsl
out
popa
sbb
cmpsb
xor
cs
pusha
insb
dec
insl
push
divb
mov
add
sub
ret
cmp
jbe
lods
cmpsl
push
daa
fsubr
pop
or
mov
ljmp
imul
in
push
lods
mov
and
cli
out
jae
pop
jmp
scas
mov
push
sub
test
dec
in
gs
daa
jbe
dec
test
sub
stos
push
repnz
aaa
outsl
inc
cs
sub
and
test
clc
inc
jb
mov
imul
dec
stos
in
in
adc
outsb
je
sub
fnsave
push
out
pop
sub
ljmp
daa
and
ljmp
lods
and
push
outsb
out
outsl
mov
lods
in
stos
lods
imul
mov
in
iret
in
cld
frstor
lods
xchg
dec
jle
fisubrl
imul
lahf
cmp
ret
mov
mull
sub
cmp
loop
out
xor
jmp
dec
stos
clc
sub
mov
mov
imul
outsb
insl
ds
shrb
fiadds
test
shll
cmc
jns
loopne
sti
push
loope
jmp
out
inc
outsl
clc
jo
pop
xor
mov
mov
insl
adc
stos
aas
sub
xor
addr16
imul
shrl
push
cmpsl
repnz
cmpsb
addr16
sti
jmp
call
outsl
aaa
in
loope
stc
into
lds
jp
test
and
out
sub
repz
scas
psadbw
insb
mov
push
orl
adc
xchg
stos
dec
filds
push
pop
jbe
or
mov
andl
stos
cmp
cld
cmp
jmp
inc
jp
sbb
je
lods
data16
das
pop
mov
repnz
lahf
xor
sub
outsl
outsb
shr
adc
call
cmpsb
dec
data16
or
jl,pn
fucompp
adc
sub
jmp
push
stos
cli
sub
cmp
scas
xor
subl
lretw
fs
jmp
nop
jmp
sub
scas
mov
xor
imul
es
add
push
jmp
int3
movsl
pop
in
mulb
stos
pop
outsb
es
fucomp
popf
sub
in
pop
jmp
pushf
in
fldt
jo
iret
jmp
inc
stos
sub
icebp
or
repz
jmp
jl
and
mov
mov
cmpsb
cmp
out
call
jns
jmp
imul
and
test
jmp
loopne
lods
in
push
insb
fldcw
das
push
sub
or
cmpsl
pop
movsl
mov
xchg
mov
in
or
mov
jno
cmp
pop
lods
mov
mov
movsl
xchg
jmp
cmpsl
in
inc
ljmp
das
jmp
add
sub
sub
cltd
test
out
sbb
or
repz
insl
int
lret
repnz
xor
sbb
jo
lods
jle
sub
dec
push
jmp
int
call
sub
push
inc
mov
arpl
pop
sub
addr16
movsl
push
or
cs
scas
xor
outsb
imul
data16
cmpsb
ret
cli
call
outsb
jmp
outsl
mov
cmpsl
jo
lock
das
inc
in
stc
sub
out
in
mov
movsl
cmp
scas
test
mov
out
mov
lret
int3
pop
in
jb
push
jmp
push
imul
sub
cmp
mov
fldl
mov
mov
jmp
xchg
scas
test
cmpsb
insl
ljmpw
pop
sbb
jmp
adc
imul
lock
or
aad
repnz
lods
jo
xchg
xor
and
lods
mov
imul
adc
mov
jg
mov
out
test
jb
xor
jno
xor
mov
sub
sub
jmp
push
imul
imul
in
xor
dec
jg
scas
adc
jmp
cmp
add
add
and
sub
push
in
adc
pop
outsl
int
pop
xor
xor
lods
pop
sub
stos
out
imul
add
mov
mov
ret
imul
cmp
repz
imul
sub
cs
das
shll
and
leave
es
jmp
movsl
stos
jg
mov
mulb
mov
in
jmp
mov
imul
adc
jmp
jo
das
sbbb
mov
stos
fistps
adc
lods
xchg
in
xchg
insb
push
div
test
pusha
jb
mov
in
jmp
in
repnz
xchg
jmp
add
mov
adc
cmp
mov
adc
out
jmp
jae
test
outsb
sbb
mov
lock
icebp
lods
daa
stos
adc
xor
stc
mov
pop
push
jmp
cmp
lea
pusha
scas
cmpsl
xor
pop
sub
dec
xchg
les
and
mov
bound
imul
pop
jb
je
ret
or
xor
outsl
lock
mov
and
daa
imul
dec
out
subb
pop
subb
cmpsl
nop
out
add
arpl
inc
icebp
and
lods
jmp
outsb
hlt
jo
jno
repnz
jnp
inc
das
nop
scas
xchg
sub
stos
je
cli
sub
imul
pop
pop
jmp
push
sub
arpl
cmp
cmpsb
push
adc
or
test
lods
jge
sbb
lahf
scas
in
xlat
sub
imul
jmp
loop
mov
jmp
es
sub
insb
jb
sub
pop
xor
and
mov
aas
lock
cs
cmp
stc
mov
test
sub
ljmp
std
movsb
orb
test
daa
or
mov
out
jmp
sub
push
jmp
imul
push
das
jo
mov
sub
nop
xor
sbb
sub
jmp
fildll
test
cmpsl
cs
out
data16
push
mov
sbb
add
stos
inc
lods
stos
jmp
insl
inc
cs
out
xor
sbb
mov
movsl
sbb
sbb
pop
imul
dec
jg
jmp
cmpsb
adc
sti
ljmp
out
push
out
std
lock
scas
xchg
adc
in
mov
pop
pusha
jmp
sub
test
sub
insl
imul
stos
fs
sub
in
loop
pusha
repnz
mov
cmpsb
jmp
ljmp
xor
mov
sbb
pop
xor
jb
jo
stos
cs
insb
cmp
mov
jno
or
insb
movsb
ljmp
stos
jmp
mov
ret
xor
es
cmp
push
jmp
inc
in
dec
das
add
cmp
nop
mov
hlt
or
xor
scas
shr
in
cwtl
sub
adc
mov
xor
data16
jmp
imul
outsl
out
fadd
shlb
pop
mov
mov
in
cmp
sub
sti
dec
lods
and
sub
cmp
xchg
jmp
movsb
fwait
and
es
and
out
sub
jmp
stos
icebp
fwait
repnz
jb
jmp
push
jno
jo
das
mov
cs
lret
sub
outsb
add
xchg
lods
add
and
outsb
stos
insl
sub
pop
sub
data16
movsl
shlb
out
lods
jmp
stc
lods
outsl
xlat
xor
hlt
or
mov
and
sub
in
and
jecxz
rorl
dec
mov
insl
sub
cmp
in
sub
sub
outsl
jo
pslld
mov
xchg
jnp
and
pop
insl
arpl
push
sbb
out
jge
outsb
int
movsl
lcall
daa
mov
test
sbb
out
jbe
fistps
lods
push
lods
insl
jo
mov
fsubl
paddsw
subb
popf
pop
adcl
test
out
out
sub
dec
stos
pop
aaa
mov
adc
push
fwait
sbb
sub
outsl
pop
outsb
mov
mov
and
arpl
insl
jecxz
and
daa
jno
aam
int
inc
lods
dec
outsb
lods
or
jo
xor
mov
mov
push
fucomip
inc
inc
sbbb
sub
or
jmp
jmp
test
push
stos
pop
or
lret
jmp
ljmp
xchg
xor
and
adc
mov
sbb
add
das
mov
pop
repnz
mov
cmpsl
jo
sub
sub
insb
push
int3
sbb
call
jl
mov
push
fisubrs
cmp
lds
lods
test
lea
insb
enter
mov
ret
rclb
int3
scas
jmp
paddsb
stos
pusha
jmp
es
gs
in
cmp
jmp
data16
sub
or
hlt
sub
shrl
outsb
sub
push
jg
jbe
scas
sbb
insl
push
outsb
scas
lods
out
push
scas
and
in
pop
lods
jns
mov
int3
and
gs
pop
mov
cli
pusha
xor
imul
sub
outsb
jno
push
scas
fstl
lods
rcrb
dec
add
aas
jmp
out
in
outsb
jns
out
mov
mov
repnz
sub
jmp
test
les
push
addr16
outsb
test
ljmp
lods
imul
div
sub
cltd
push
ljmp
add
movsb
sbb
movsl
aas
imul
sub
mov
daa
cmp
xor
and
int3
mov
sbb
mov
lods
and
lods
pop
push
jmp
addr16
out
es
movsl
andl
rorb
fmuls
into
daa
imul
sub
movsl
outsl
sub
jmp
mov
mov
jb
in
xor
repz
lcall
pop
scas
xchg
lods
jmp
push
call
daa
dec
out
cmpsb
add
inc
sbb
in
and
test
sub
jmp
outsl
mov
sub
aas
jae
outsl
loopne
call
fisttpll
inc
in
push
sbb
add
mov
in
call
in
mov
push
mov
mov
cmp
cld
jae
sti
mov
adc
das
xor
ficomps
idivl
pop
daa
jmp
ss
js
shlb
imul
mov
fisubs
call
and
adc
xor
mov
outsb
xor
je
iret
dec
jmp
mov
xor
outsl
pop
ja
in
in
stos
jp
sub
jle
jae
ret
popa
mov
movsb
popf
push
cmp
push
es
out
sub
mov
sbb
subl
shl
xor
mov
call
sbb
iret
ja
xor
cwtl
in
lods
aad
sbb
pop
loopne
adc
es
call
add
sbb
jo
movsl
subl
loopne
cmpsb
daa
dec
xor
jmp
daa
in
pop
imul
movsb
pop
jecxz
loop
popa
pop
cmp
jmp
and
mov
addr16
imul
cs
das
add
adc
ljmp
xlat
mov
mov
rcrb
lods
mov
scas
sbb
xlat
adc
test
cmc
adc
or
fisubrs
jmp
xchg
mov
lods
inc
scas
mov
inc
xor
lret
out
mov
adc
pop
imul
and
out
lods
gs
les
imul
andl
addr16
nop
jmp
fldt
dec
lods
cs
scas
stos
out
mov
icebp
in
xor
jno
out
mov
push
inc
scas
test
dec
push
jmp
imul
out
mov
xor
andb
lock
sub
subl
ljmp
in
xchg
sub
pop
insb
or
int3
stc
adc
cwtl
cs
sub
lods
scas
pop
insl
les
lods
in
xchg
imul
xchg
pop
push
popa
inc
and
push
ljmp
psllq
sub
jmp
cmpsl
jp
repnz
sub
push
insb
sub
fwait
imul
repnz
xor
mov
cmp
in
mull
pop
outsb
add
pop
stos
sti
ljmp
sub
call
imul
jb
out
sub
sub
sub
and
ljmp
pop
ret
das
xchg
pop
in
pop
pop
mov
jbe
add
decl
loope
adc
mov
stos
dec
pop
int
and
hlt
mov
mul
xchg
jns
ss
sub
test
sub
sub
insb
dec
adc
sarb
xor
add
jo
repnz
outsb
sub
xchg
jmp
cmpsl
andb
sbb
dec
fs
inc
mov
hlt
cli
and
jmp
push
sub
cmp
mov
sbb
mov
insl
inc
sti
loop
test
daa
lds
das
adc
and
in
arpl
sti
jge
lcall
sbb
sti
jmp
pop
jae
xor
mov
and
and
jb
icebp
push
out
jo
sub
movsb
mov
outsb
movsl
sub
scas
and
jle
filds
or
jmp
xchg
inc
sub
stos
push
insb
and
out
jg
xor
adc
loop
dec
xor
or
mov
cs
in
xor
sub
sbb
in
imul
jecxz
arpl
or
movsb
cwtl
gs
jmp
out
xchg
test
test
imul
out
sbb
movsl
lock
xor
nop
adc
ds
out
int
out
sub
sub
daa
into
gs
xor
jecxz
and
mov
fldenv
inc
adc
lret
or
icebp
outsb
loopne
ljmp
or
sub
xor
add
stc
lods
sub
mov
lock
and
in
mov
and
and
cmp
clc
test
sub
jbe
push
imulb
sub
scas
ja
sbb
mov
xor
jmp
repnz
xlat
mov
jmp
pop
sub
push
test
jmp
lret
in
jecxz
jns
cld
jmp
mov
fldpi
out
test
push
lods
xchg
scas
in
xchg
scas
xchg
lods
push
out
or
mov
and
lock
xor
sbb
jmp
int3
in
icebp
imul
nop
jmp
mov
test
pusha
loop
jge
int3
cmp
mov
out
jmp
scas
cmpsl
clc
jmp
lods
and
cmp
or
and
fcomi
xchg
je
adc
mov
jno
outsl
scas
add
test
lods
push
in
and
mov
pop
data16
imull
push
mov
in
dec
xor
sub
push
xchg
mov
jbe
out
cmp
scas
jecxz
lock
mov
insl
ret
stos
shrl
jmp
xchg
cmc
lods
gs
movsl
and
arpl
sub
ljmp
sub
insb
cs
or
and
jp
sub
jl
cld
mov
jae
lods
in
mov
ljmp
addr16
es
and
push
mov
test
and
cmpsl
int3
inc
imul
mov
cltd
insb
es
insb
leave
das
movsl
imul
xor
jno
in
pop
repz
lods
jmp
lret
cs
in
cld
lods
cmp
sub
test
mov
lods
daa
mov
pop
jmp
mov
mov
addr16
sub
clc
cmpsl
popf
test
ljmp
sub
jmp
jo
mov
xor
es
outsb
inc
sub
sub
imul
iret
sub
aas
mov
mov
outsb
aad
fnsave
mov
adc
jmp
sub
stos
xor
inc
in
sub
in
cmp
cmp
lods
aaa
mov
shrl
adc
lret
pushf
jmp
imul
jmp
push
pop
daa
jns
out
lods
out
fsubs
mov
sbb
sbb
lock
adc
cmp
mov
jb
sbb
or
xor
scas
jae
daa
das
pop
adc
jmp
mov
xor
cmp
in
pop
xor
out
es
cmpsb
cmp
jne
call
xor
push
cmp
add
in
imul
sub
cmp
pop
pop
repnz
mov
scas
pop
in
les
push
in
lods
mov
add
xor
cwtl
jmp
add
inc
icebp
lods
or
loop
lods
dec
out
inc
scas
outsw
daa
xor
xor
imul
inc
mov
outsb
sbb
jmp
lods
mov
cmpsl
std
dec
add
movsl
enter
loop
xchg
sub
in
jmp
es
mov
inc
stos
jmp
insb
mov
jb
jmp
das
hlt
ds
jmp
xor
xor
into
lods
mov
inc
fs
bound
shl
popa
jnp
dec
sub
es
daa
mov
test
fcoml
loop
jmp
inc
mov
mov
repnz
out
xorl
mov
insl
mov
lods
lret
out
xor
mov
push
lods
mov
add
jmp
aaa
test
mov
and
cs
scas
jmp
out
lcall
cltd
mov
xor
jb
pop
lret
and
jno
push
jo
outsl
push
out
mov
mov
add
in
int
pop
mov
mov
in
out
xor
call
jmp
mov
sub
dec
lods
sti
sub
rorl
loop
jge
lods
mov
xor
jo
add
jno
and
xchg
and
jecxz
popa
dec
xchg
lret
jne
push
and
cli
jmp
insb
xor
xor
out
sti
jb
jmp
lock
outsb
or
mov
imul
cs
out
fucomp
sbb
in
sub
push
cli
jmp
arpl
bound
loop
jmp
mov
push
in
out
jmp
das
stos
pop
insb
imull
outsl
jo
xor
jae
repz
push
out
jno
mov
adc
jmp
imul
push
xchg
ljmp
stc
cmpsl
dec
cmpsb
inc
es
movsl
ljmp
mulb
test
sub
sub
xor
out
xchg
xchg
movsl
scas
or
xchg
stos
fsubr
sub
mov
pop
mov
sbb
sbb
lea
cmp
in
or
sub
cmpsl
inc
daa
inc
dec
jl
sub
arpl
or
outsl
cmp
dec
mov
mov
lock
or
test
stc
lods
jb
sub
sub
jcxz
cmp
fs
and
pxor
shrb
sub
fldcw
mov
repz
out
push
out
jmp
sub
test
outsb
cmp
outsl
sub
dec
and
sub
add
insb
lods
jne
xor
fdivs
js
and
lods
push
xchg
scas
out
addr16
cmp
add
jo
call
imul
pop
sbb
mov
stos
sub
ljmp
scas
test
jg
sbb
sbb
cmpsl
push
push
cmpsb
aaa
out
out
mulb
popa
mov
adc
cmpsl
xor
sub
repnz
stos
lds
sbb
icebp
repnz
imul
sub
es
gs
dec
jae
mov
stos
add
mov
sub
sub
test
popa
insl
stos
jbe
jp
jns
shrb
pop
das
mov
cmp
outsl
repz
cli
mov
cs
movsb
sub
cmpxchg
repnz
adc
xlat
or
insb
mov
sub
inc
mulb
jb
add
stc
sub
sub
scas
std
imul
xlat
jo
adcl
scas
inc
insb
pop
jmp
imul
repnz
and
andb
shr
test
imul
test
xchg
and
and
shrb
in
pop
outsb
jo
stos
lods
xor
inc
mov
mov
lods
das
cmp
in
outsl
and
out
out
and
jp
movsl
clc
test
mov
jmp
xchg
or
inc
sub
and
and
test
mov
stos
mov
and
dec
jmp
in
cmp
out
arpl
imul
shrl
dec
sti
add
sbb
shlb
adc
push
jmp
dec
push
cltd
scas
imul
jmp
pop
outsb
std
out
jbe
mov
outsb
scas
sub
xchg
pop
lods
and
insl
setnp
sbb
push
stc
stos
lret
sub
imul
xchg
in
aam
jbe
sub
jmp
test
cmpsl
push
out
sbb
es
call
sub
sub
scas
stos
das
inc
mov
pop
into
out
jmp
lods
sub
push
test
mov
sub
adc
in
arpl
nop
sub
loopne
jmp
das
mov
xchg
je
mov
test
jnp
subl
xchg
xor
pop
call
jmp
insb
pop
cmp
mov
jl
into
or
scas
hlt
out
icebp
lods
pop
xor
mov
out
gs
inc
imul
jo
add
or
mov
cmp
mov
or
in
xorl
xchg
psubw
fs
into
imul
scas
cmp
les
shrd
jmp
stos
enter
pop
lods
push
out
cmpsb
jl
ret
daa
pop
cmpsl
aaa
push
sub
sub
fnsave
xchg
jo
ljmp
scas
add
push
xor
cli
lods
cmp
mov
mov
mov
sbb
in
sbb
mov
sub
cmp
jnp
cmp
add
andb
pop
and
roll
cmpsb
and
jmp
in
out
scas
lret
out
sbb
inc
xor
mov
xchg
mov
pop
jo
push
sub
subb
sub
call
pop
roll
mov
and
xchg
cmpsl
in
clc
push
fsubr
rorb
test
stos
aas
imul
cmpsl
insb
aad
sub
xchg
lock
outsb
jo
icebp
mov
xchg
mov
fsubr
and
scas
js
insl
mov
cmp
test
lods
sub
xor
outsl
rclb
and
in
or
lods
pop
movsl
push
cmpsb
cmp
add
popa
jmp
les
cmpsl
jns
jge
push
ljmp
and
int3
xor
jno
cmp
pop
lock
das
sub
test
stos
mov
dec
out
es
jle
shll
daa
pop
sub
aaa
push
sbb
repnz
imul
sub
std
jmp
das
mov
loopne
shll
subb
adc
in
push
and
and
mov
sub
data16
insb
adc
stos
push
lods
push
sub
test
inc
ljmp
gs
mov
pop
stos
outsb
or
xor
jle
pop
fistpll
adc
xchg
sub
pop
push
repnz
pop
or
lods
lods
outsl
insl
subb
int
aad
sbb
shr
xchg
jmp
stos
fsubrl
pop
ljmp
fdivrs
jmp
mov
sub
jns
lret
es
js
dec
add
mov
push
scas
pop
xlat
xor
outsl
daa
xlat
sub
jmp
loop
loope
and
dec
outsb
imul
mov
nop
or
and
and
push
sub
ljmp
sub
shr
sahf
test
iret
flds
sbb
subl
in
pop
mov
sahf
sub
mov
psubb
sub
cmpsl
xor
int3
or
dec
test
jmp
lcall
call
sub
int
or
scas
push
in
lods
push
sub
sub
ljmp
lods
stos
pop
sub
lods
and
hlt
insb
mov
pop
or
sbb
push
ss
inc
dec
sub
add
sub
rep
fildll
shrb
cwtl
in
pop
scas
aam
or
cmpsb
mov
stos
imul
and
addr16
daa
or
mov
cmp
mov
insb
mov
psubd
daa
ja
add
data16
jbe
imul
xor
dec
aam
faddl
fldt
push
cltd
jl
loopne
orl
std
mov
mov
lcall
test
movsl
sub
cwtl
lods
sub
insb
stos
arpl
inc
lods
cmp
sub
mov
in
mov
sub
out
test
add
out
cmpsb
cs
stc
popa
loop
pusha
addr16
sub
sub
sub
sbb
lods
jmp
sub
lods
mov
aam
repnz
scas
int3
fisttpl
add
repnz
xchg
push
push
jb
jb
shrl
mov
sarl
jmp
push
sub
in
xchg
sub
pop
sub
std
inc
cmpsl
dec
daa
repnz
sbb
push
outsb
mov
jmp
push
imul
sbb
mov
sti
repz
lods
repnz
xchg
push
iret
mov
adc
lods
outsl
imul
stos
and
mov
outsb
jne
inc
jmp
sub
and
std
stos
pushf
cmp
ljmp
mov
jmp
push
sub
pop
insb
cmp
mov
push
lods
das
mov
sub
sub
std
imulb
lock
xchg
sbb
imul
in
gs
mov
pop
aad
in
xor
mov
sbb
xchg
pop
lret
pop
jo
and
fldcw
sahf
cs
sub
lods
fildll
sub
in
mov
or
pop
imul
mov
mov
pop
out
mov
pushf
and
mov
test
xchg
insl
in
lods
mov
or
push
ljmp
jmp
bound
ffreep
mov
xchg
sbb
adc
cld
pop
frstor
ljmp
stos
mov
insb
ss
pop
in
outsb
loope
out
fcmovu
xchg
or
out
repz
imul
jl
scas
imul
outsl
push
mov
imul
es
ljmp
ror
lahf
lods
cld
sub
rcrb
lahf
cmp
sub
aad
imul
mov
adc
das
out
fildl
insl
cmp
mov
sbb
outsl
push
pusha
xor
sti
cmp
ljmp
mov
stos
push
inc
pop
xchg
lods
jp
mov
int
jmp
stos
mov
dec
in
sbb
and
cmp
adc
shll
outsl
lods
jmp
sub
cs
dec
and
sti
jmp
shrb
jno
pop
stc
sub
outsb
movsb
stos
cltd
jle
int3
loop
sbb
mov
push
sub
pusha
jmp
insb
test
push
cmpsl
add
sub
jnp
rcrb
add
fldt
cmp
scas
mov
mov
hlt
lea
add
insb
mov
or
sub
and
jb
jmp
pop
jg
jle
daa
iret
push
or
jmp
test
pop
push
imul
sti
and
lret
pushf
insb
in
mov
add
scas
pusha
jns
mov
imull
sub
hlt
lods
or
stos
jle
jno
jns
jbe
test
sbb
sub
cltd
cltd
lods
cvtpi2ps
push
mov
mov
lret
aad
ffree
in
in
in
in
and
or
dec
mov
stos
xor
inc
aam
fsubrs
repnz
subl
repz
imul
xchg
bnd
sub
push
dec
xor
xchg
xor
pop
imul
je
and
test
gs
and
cmp
int3
jns
outsb
or
lea
ret
sub
imul
sub
stos
sbb
or
int
xchg
insb
pop
sbb
and
mov
idivb
jmp
sbb
lds
jmp
and
cmp
ja
repnz
adc
lods
imul
les
push
cmp
mov
stc
stos
aaa
imul
repnz
sub
adc
mov
imull
daa
mov
dec
lods
in
into
insb
sbb
xor
stos
ljmp
inc
jns
mov
xor
stos
cmp
and
stos
jns
add
outsb
out
sub
fcmovnu
xchg
fcoms
in
call
push
mov
push
sub
je
push
sub
jns
mov
out
mov
jmp
and
stos
add
sub
imul
insb
aam
dec
cli
fs
sbb
stos
imul
pop
xor
pop
stos
ss
ljmp
sub
pushf
loop
aad
and
pminsw
or
stc
stos
cld
daa
sub
fstpl
lods
test
add
mov
int
imul
pop
popf
jbe
add
shrl
cs
lods
idivl
mov
jns
popf
lea
or
stos
adc
outsb
sub
jle
mov
in
push
lods
stos
pushf
sbb
popf
imul
adc
pop
aam
fadds
icebp
mov
lods
add
in
mov
subl
int
out
sahf
das
imul
ss
cmp
sbb
and
lret
push
xorl
sbb
outsb
sub
jmp
sub
imul
cmp
jp
mov
cmp
sub
mov
jmp
sub
add
stc
es
daa
aad
and
add
div
sti
repnz
lods
rorl
mov
jnp
test
mov
ljmp
test
rcr
aam
fdivs
outsl
ret
pop
orb
std
mov
or
xor
andb
cmp
xchg
or
sub
push
testb
frstor
imul
sbb
jae
add
stos
int
sub
sub
pop
movsl
lods
bnd
sbb
ds
jns
cmp
pushf
imul
add
add
pop
pusha
stos
data16
sub
sarl
das
in
xchg
or
mov
mov
mov
add
lcall
jbe
cmpsb
frstor
cmp
jns
mov
into
mov
jmp
mov
jns
push
adc
pop
and
stc
bound
xorb
jbe
mov
push
mov
add
stc
cmp
stc
xchg
stc
or
test
bound
push
cmovns
push
jmp
pop
test
andb
sub
jns
mov
popa
jmp
sub
jno
xor
sub
dec
stos
arpl
add
cmp
xchg
inc
adc
daa
sub
in
inc
lods
dec
imul
punpckhdq
ljmp
or
test
popf
mov
repz
cs
fstpt
aam
mov
repnz
xor
or
imul
xorl
sub
popf
rorl
mov
in
push
lret
or
push
sub
mov
aad
add
pop
add
sbb
stos
jb
sub
scas
imul
inc
in
or
push
sub
sub
lret
sub
push
test
adc
pavgw
mov
mov
add
insb
je
push
dec
xchg
or
arpl
outsl
and
and
push
and
and
sub
mov
stos
icebp
scas
push
sub
add
and
xchg
and
and
cmp
dec
and
and
jne
mov
push
arpl
adc
je
mov
cli
insb
lods
into
in
repnz
sub
dec
xchg
push
shll
sub
in
jmp
imul
stos
sbb
and
and
and
pop
xchg
arpl
mov
sub
xchg
adc
xchg
sub
sub
inc
imul
pop
jns
outsb
rep
cmp
iret
dec
fsub
in
scas
dec
mov
push
pop
cmc
add
sbb
test
cmc
enter
cmp
push
inc
jo
jmp
and
pop
imul
sub
shlb
sub
insb
iret
lcall
pop
cltd
and
mov
repnz
xchg
imul
or
fs
fwait
pop
adc
cmp
stos
lret
pop
cli
popa
mov
sbb
mov
jg
sub
xchg
sbb
jbe
mov
adc
notl
push
push
sbb
repnz
pop
xchg
imul
xchg
jo
push
jo
mov
jle
int
jg
shll
lods
movsl
and
in
mov
aam
fcoms
add
mov
sub
imul
stos
outsb
add
stos
lods
dec
push
sub
scas
cmp
mov
mov
push
sub
repnz
mov
mov
repnz
leave
xor
jae
xchg
ficoms
daa
mov
pop
inc
shlb
stos
add
pop
mov
popa
scas
arpl
les
inc
ja
push
adcl
adc
sbb
xor
outsb
addl
mov
cmp
or
shll
mov
sar
shll
daa
sbb
ret
and
cmp
pop
hlt
push
je
adc
in
repnz
mov
repnz
repnz
testb
bound
stos
andl
and
and
add
pop
sub
sub
or
mov
xchg
out
lcall
std
mov
cmp
lahf
es
pop
jns
nop
in
out
adc
inc
icebp
pop
cli
jno
clc
sbb
cmpsl
outsl
xchg
sub
sti
mov
and
outsb
sub
cmp
arpl
pop
adc
scas
in
push
mov
jns
mov
clc
lods
fldcw
sbb
daa
shrb
sub
cmp
xor
jle
or
xchg
cld
sub
mov
jg
sub
mov
or
pop
sbb
outsb
xchg
scas
fwait
dec
jle
outsl
out
pop
ss
cmp
pop
add
cmpsl
stc
aam
ret
cmc
lods
sub
inc
push
pop
lds
push
jg
shl
and
lahf
jnp
stc
sub
xchg
dec
and
xchg
sub
rol
aam
fsubs
adc
push
outsl
or
pop
push
mov
cmp
sub
pop
push
pop
stc
jne
fdivs
pop
movsl
push
hlt
imul
inc
pop
mov
inc
push
push
pop
movsl
popa
xor
clc
nop
mov
cmpsb
jbe
lock
cmc
repnz
sub
fidivrl
test
nop
stos
mov
cli
stc
sub
pushf
inc
mov
pop
mov
popa
sub
mov
in
lret
sbb
pop
jbe
sbb
pop
adc
aam
and
movsb
jp
ror
int3
mov
int3
int3
xchg
aas
int3
lock
cmpsb
dec
sarb
scas
xchg
jmp
aam
fdivs
cmp
cmp
js
push
mov
cmp
inc
xchg
pop
test
pop
gs
jae
adc
hlt
or
jbe
mov
mov
push
xchg
xchg
std
sti
std
jl
sub
cli
add
stos
mov
cli
stc
into
stc
psadbw
cmp
or
sub
inc
jbe
shlb
arpl
movsl
pop
sbb
pop
imul
add
stc
js
and
ja
cld
out
lahf
jg
in
rcll
pop
sub
jl
fstl
xchg
and
xor
or
icebp
fisubl
sub
ds
cmpsl
jp
mov
sti
jo
stos
scas
and
push
push
sub
in
cmp
cmp
push
and
cmp
jns
mov
nop
jge
sti
jne
sub
je
mov
jle
add
mov
mov
pop
outsb
jge
sub
xor
daa
mov
push
lahf
sub
hlt
push
push
scas
sbb
mov
stos
in
inc
es
xchg
and
and
mov
or
aaa
mov
dec
cmp
dec
and
xchg
mov
mov
cmc
add
sub
mov
adc
sbb
stc
cltd
and
dec
xor
dec
xorl
orl
in
lcall
pop
mov
dec
stos
ds
insb
dec
pop
sub
and
cmp
popa
xor
int
pusha
int
aad
in
xor
mov
movd
sbb
out
pop
mov
ja
sub
clc
sbb
and
repnz
fwait
stos
std
xor
test
cli
mov
mov
iret
daa
push
arpl
sub
xchg
stos
adc
cmc
mov
lods
sub
mov
js
pop
imul
adc
mov
insb
push
lea
pop
inc
push
add
out
outsb
pop
stos
leave
mov
or
es
daa
lods
sub
shl
jg
adc
or
imul
and
jns
mov
cli
dec
sub
nop
adc
jg
mov
pop
stos
push
ror
mov
pop
fstpl
data16
add
mov
nop
int
iret
lods
xchg
sub
lahf
sbb
jae
lcall
pop
xchg
cmpsl
mov
sbb
dec
adc
out
and
xchg
ret
xchg
test
adc
push
xchg
mov
imul
or
mov
mov
in
sbb
xor
adc
xor
addr16
pop
ljmp
sbb
pop
push
mov
cmp
sbb
mov
mov
addr16
testl
xchg
mov
or
xchg
add
hlt
test
xorb
lods
adc
xor
fwait
cmp
jge
cld
fdiv
stos
lea
and
and
push
loopw
and
cltd
sbb
nop
dec
mov
cmp
adc
fwait
add
sbb
adcb
adc
add
fstl
pop
pop
hlt
movsl
div
lock
shrb
mov
hlt
aad
add
loope
call
jge
lock
adcb
pop
hlt
sti
popf
int
stos
aad
mov
add
push
sub
and
jnp
sub
and
in
and
lahf
and
add
inc
cli
inc
cmp
sub
lahf
add
stos
ss
pop
repnz
push
mov
jns
sub
cmc
loopne
es
lock
addr16
stos
cmp
int
inc
lods
pop
lods
sub
dec
vcvtsd2si
icebp
call
loopne
sahf
xor
in
sbb
test
cmpsb
xor
pop
jbe
movsl
push
mov
hlt
dec
adc
nop
daa
xchg
sub
push
and
jbe
sti
push
dec
and
and
in
push
hlt
insl
sbb
sub
add
popa
hlt
jg
cltd
xchg
inc
loope
cli
cmpsl
jno
adc
adc
sub
stos
pushf
pop
jns
hlt
ja
xchg
pop
or
and
es
je
fwait
add
bnd
pop
int3
insb
notb
mov
mov
or
inc
das
sub
lcall
jecxz
fdivrs
es
loopne
mov
pop
movsl
das
add
or
inc
test
sub
sbb
pop
lcall
mov
daa
adc
cmp
movsb
xchg
out
cltd
repz
pop
push
xor
lcall
adc
jnp
mov
push
in
adc
sbb
dec
movsb
cwtl
sbb
sub
ss
testl
stc
sarb
loopne
push
in
xchg
cmpsb
mov
js
mov
sahf
out
stc
sub
and
aaa
sub
adc
outsl
fwait
int3
divl
daa
add
btc
jbe
sub
cs
cmp
inc
pop
xchg
mov
sub
push
dec
pop
and
push
mov
mov
and
and
or
mov
out
test
inc
xor
int
mov
mov
insl
arpl
stos
mov
fcoms
lea
push
or
push
adc
aad
xchg
ficomps
jle
sub
or
imul
je
nop
mov
or
clc
add
lcall
mov
lods
movsb
ja
les
lea
jno
push
es
cmp
add
xor
test
outsb
pop
loope
data16
pop
std
movsb
sbb
sub
fistpll
sub
and
adc
mov
adc
pop
jge
or
lods
or
lahf
test
stos
gs
out
add
cmp
cwtl
pop
movsb
xchg
pop
push
dec
lea
in
cld
push
shlb
xchg
cmp
adc
bound
mov
xchg
in
aad
cwtl
xchg
and
push
in
fcomp
xor
mov
fdivrl
push
lock
fstps
inc
cli
add
xor
add
int
mov
imul
and
push
imul
jae
jae
ja
pop
popf
sub
arpl
jg
jg
sbb
shl
sub
mov
int3
mov
lock
leave
clc
cmc
cmpsb
daa
mov
icebp
cmp
fwait
ret
push
outsl
mov
dec
jl
mov
cmp
imul
sbb
loopne
and
pop
push
stos
xchg
hlt
nop
mov
mov
inc
std
add
movsb
adc
outsl
pop
js
in
add
pop
pop
lret
sub
nop
add
cltd
adc
cmp
popf
test
cmp
pop
aam
decl
dec
push
mov
cltd
cmp
pop
lea
or
push
outsl
sub
cmpsl
jb
shl
mov
ja
jge
and
xor
lods
test
jmp
lods
pop
sbb
lods
lcall
add
nop
into
popf
hlt
icebp
cmc
loopne
cmp
in
movsb
add
mov
scas
cwtl
sub
xor
test
xchg
sbb
outsl
in
scas
andb
or
lahf
pop
ja
sbb
cmp
add
loopne
mov
pop
jle
loop
in
push
idivb
push
repnz
nop
test
ds
sub
stc
std
mov
inc
inc
sub
adc
xchg
sub
xor
xchg
adc
push
mov
lahf
ja
movsl
jp
lock
or
cmp
out
stos
daa
outsl
adc
pop
adc
mov
jmp
sbb
jmp
call
and
fstl
sub
push
xchg
mov
dec
pop
pop
cmp
mov
test
and
adc
nop
adc
mov
pop
cmpsl
imul
mov
inc
inc
or
pop
cmp
adc
dec
sub
movsb
sub
xchg
xor
pop
cli
testb
sub
jge
sub
push
and
hlt
inc
adc
inc
hlt
es
pushf
jne
push
adc
inc
mov
stc
xor
std
jne
cmp
or
xchg
cmp
inc
loopne
pushl
jle
sar
mov
push
adc
mov
sub
ljmp
jg
popf
sub
jae
pop
in
stc
adc
aaa
shl
sti
int3
jge
arpl
addr16
testb
jle
imull
cmpsl
mov
and
and
adc
stc
ds
or
es
mov
jnp
inc
xchg
jns
insb
mov
repnz
aas
imul
mov
jp
jl
lret
pop
sub
mov
lock
test
out
lea
stos
push
repnz
add
sbb
fiaddl
test
xor
jle
sub
insl
test
lahf
ja
push
popa
push
movsl
repz
fwait
popl
movsl
inc
jg
clc
in
adc
lahf
cmp
adcl
inc
rcrl
hlt
cmc
movsl
loopne
sub
in
and
and
ss
pop
push
mov
lds
and
nop
in
std
fs
in
jle
popl
push
xor
push
sub
imulb
push
cmc
popl
bnd
insl
incl
cltd
xor
sub
hlt
in
or
or
jg
inc
cmc
xor
cmp
divl
adc
scas
mov
sbb
insl
and
adc
or
sub
xchg
movsl
inc
lock
jbe
xchg
jno
loope
add
push
test
sbb
push
jg
sub
std
jg
add
ds
jnp
inc
scas
je
pop
nop
es
out
mov
leave
push
sub
lret
lahf
xchg
dec
cmp
add
popl
sub
add
in
movb
push
sub
cmp
pop
int
inc
in
dec
xor
lahf
xchg
cmpb
mov
movsb
jge
jns
ds
cmp
ja
xor
shll
testb
call
icebp
jge
sub
sub
sub
jae
cmpsl
jne
popl
jge
imul
int3
cmp
fstps
fadds
adc
xor
add
imul
std
adc
shlb
xchg
pop
mulb
in
pop
sub
pop
xor
push
cli
scas
sarb
mov
cmp
pop
jmp
push
jecxz
and
popf
cmp
sbb
je
mov
dec
lcall
scas
hlt
movsb
jo
sub
aaa
jge
sub
xchg
cmpsb
jns
dec
cmpsl
js
sub
clc
sti
xor
stc
push
mov
sti
aaa
ja
repnz
insl
aad
stos
xor
jne
sub
mov
imul
adc
xchg
and
xor
jae
xor
std
inc
cmpsb
mulb
nop
pop
mov
add
cmc
inc
icebp
xchg
jae
add
adc
inc
or
sbb
mov
fs
mov
call
and
lahf
cmc
out
mov
jg
outsb
cmp
push
push
fwait
dec
fisubl
popl
mov
cmp
sub
or
jne
adc
jo
outsl
xchg
cmp
inc
negl
test
fwait
daa
mov
sub
mov
and
adc
add
dec
adc
insl
xor
ds
sbb
and
shlb
dec
loope
out
pop
scas
jle
mov
clc
dec
jno
in
pop
pop
movsb
pop
cmpsl
xor
cmp
rcrl
shrb
nop
dec
add
inc
insb
loopne
addr16
out
out
mov
push
xchg
das
jg
in
xchg
and
aaa
xchg
outsb
xchg
popf
xor
cmp
push
cmc
jle
cmp
fs
rcrb
mov
ja
inc
sub
jecxz
xchg
xor
pop
jmp
cmp
push
and
pop
mov
inc
test
xor
outsl
jne
jo
inc
lods
pop
jmp
movsl
daa
cmpsb
mov
sub
push
cmp
lcall
cmp
dec
mov
cmp
dec
jae
sub
out
int3
lods
mov
xor
cmpsl
das
movsb
insb
hlt
sbb
repz
adc
imul
jl
popf
add
or
ss
js
out
icebp
add
in
imul
scas
push
mov
sub
jne
sub
mov
jae
stos
jl
pop
imul
lods
xchg
add
sub
mov
js
mov
cwtl
out
adc
xchg
push
out
sub
repnz
cmp
adc
xor
stc
outsl
jne
addl
jb
gs
hlt
sub
dec
stos
scas
les
imul
push
insl
adc
cmp
ja
icebp
pop
sub
aas
sub
in
cmp
hlt
lock
adc
mov
in
mov
sub
insb
shrb
adc
mov
cmpsl
pop
sbb
add
call
lock
std
cld
sub
test
out
sub
fcmove
sbb
out
std
out
test
adc
sub
add
jns
testb
movsb
mov
dec
jle
adc
xor
mov
jo
push
push
out
inc
std
lods
addb
xchg
xchg
outsl
xchg
scas
adc
lahf
aas
imul
sub
pusha
cmp
cmp
sub
outsb
push
repz
mov
cld
ljmp
shlb
dec
jae
cmp
sub
or
repz
test
mov
sub
sub
adc
movsl
push
notl
scas
paddsb
xchg
and
testl
sbb
repnz
or
dec
in
or
mov
dec
cli
ljmp
aas
xor
imul
cmp
mov
jl
das
repnz
sar
mov
or
in
mov
jmp
mov
add
dec
add
int3
mov
or
decl
or
imul
dec
dec
lods
pop
jle
imul
pop
cmp
or
in
fmuls
xchg
mov
mov
xchg
fwait
or
ss
in
je
pmaxub
mov
ljmp
jne
fs
imul
xor
adc
xchg
int
int
jbe
outsb
leave
lock
dec
xchg
ret
test
dec
xchg
adc
adc
mov
loope
or
jmp
leave
mov
shlb
push
mov
les
sub
test
sbb
aam
push
xchg
lret
mov
jl
cmp
js
mov
cwtl
fistpl
adc
sarb
iret
push
fsubrs
sbb
adc
mov
dec
push
sbb
pop
jmp
mov
mov
testl
xchg
sub
movb
int3
sbb
xchg
xchg
push
push
mov
dec
inc
pop
jg,pt
dec
iret
or
fstps
mov
jp
jl
mov
push
jmp
adc
jg
inc
dec
dec
repnz
pop
sbb
mov
ds
add
rcl
shll
mov
sbb
xchg
and
dec
ror
lods
jg
jnp
std
aas
sbb
adc
mov
addb
xchg
pop
xchg
push
ljmp
jge
mov
int3
rcr
jmp
push
or
ret
xchg
push
sbb
lret
jmp
jnp
jl
orl
dec
movb
dec
mov
mov
imul
jmp
cmp
notl
test
adc
cwtl
sti
loop
push
nop
insb
iret
inc
mov
rorl
push
adc
mov
or
inc
sub
jno
inc
mov
cli
cli
mov
or
aam
mov
lods
lret
unpcklps
pop
push
addr16
adc
fiaddl
cli
cmp
push
push
aad
lock
leave
add
cmpsl
sub
xchg
cltd
lods
jmp
int3
jg
std
mov
dec
aam
into
xchg
lods
repnz
add
rcrl
rclb
lcall
cmpb
dec
cwtl
mov
xchg
int3
test
or
addb
enter
jmp
rcll
into
xchg
cli
lods
std
cmp
or
xchg
or
mov
inc
and
push
or
xchg
iret
icebp
or
cmp
jl
insl
test
dec
inc
add
inc
jmp
push
xchg
xlat
push
push
xchg
xchg
sub
adc
inc
cld
cmp
xchg
jmp
push
xchg
xchg
push
mov
ret
inc
mov
nop
push
fcomps
push
test
add
jmp
add
test
aas
dec
pop
adc
insb
jbe
adc
adc
push
mov
ret
add
mov
push
adc
adc
cli
jge
xchg
rcll
jmp
into
rcl
adc
mov
mov
or
push
xchg
lods
fimull
test
aam
push
and
enter
cmp
mov
adc
push
nop
cwtl
inc
sub
rcl
jnp
xchg
sti
lea
lret
stos
jmp
rolb
int3
push
adc
enter
push
mov
into
push
aam
jmp
dec
or
sub
addb
adc
je
or
adc
mov
repz
addl
dec
dec
test
mov
movb
sar
push
jecxz
rclb
lea
hlt
cmp
add
adc
inc
push
adc
adc
lea
sti
mov
xchg
aam
fwait
nop
mov
lret
lret
inc
aaa
add
je
iret
push
imul
or
lods
aad
cmpsl
into
int
add
add
xchg
outsb
mov
mov
mov
rclb
push
nop
mov
es
lret
jp
xor
mov
into
mov
add
or
dec
add
andl
test
outsb
sub
int
or
inc
dec
int3
or
dec
or
cli
es
enter
sahf
es
mov
cmpsl
dec
push
adc
add
out
dec
dec
enter
inc
xchg
iret
out
dec
mov
outsl
sub
rol
cmc
jo
ljmp
push
enter
in
adc
cwtl
outsb
xchg
or
dec
or
mov
int
cli
xchg
cwtl
push
mov
je
xchg
pop
mov
jl
sbb
cltd
and
xchg
dec
mov
sahf
sub
inc
dec
sbb
inc
movsl
int
or
imul
pop
popa
pop
pop
dec
sti
mov
push
mov
adc
rclb
or
or
out
lea
xchg
xchg
mov
dec
setge
int
inc
mov
add
psadbw
push
xchg
leave
or
femms
mov
lock
dec
xor
jno
mov
mov
mov
das
int
or
mov
outsb
cli
xchg
stc
mov
and
scas
bswap
push
aas
dec
cmp
jp
inc
mov
repz
dec
shl
into
mov
xor
xchg
sti
adc
arpl
test
imul
aas
bound
dec
in
fs
ljmp
in
xchg
mov
dec
inc
cli
sti
lret
pop
orl
cld
push
add
insb
or
xchg
lret
stos
mov
jg
into
jp
mov
inc
add
gs
sub
mov
mov
repz
lret
dec
pusha
fs
xchg
mov
std
bound
nop
xchg
add
cmc
scas
mov
mov
mov
outsb
mov
inc
and
outsl
jg
xchg
xorl
xor
sahf
dec
mov
or
lahf
adc
aam
and
int3
mov
jo
ss
ja
idivb
push
icebp
xor
push
push
jno
popf
dec
or
pop
lret
rcrb
mov
popf
test
test
in
and
xchg
orb
js
xchg
std
lret
mov
mov
cli
inc
pop
repz
mov
lret
shrb
gs
jge
test
and
mov
repz
ret
out
jle
insl
cmp
gs
cmpsl
cli
lret
stc
jl
adc
mov
test
jmp
lods
mov
test
jae
sbb
push
mov
rorl
jb
pop
dec
lret
sbb
popa
mov
push
cmpb
mov
sub
inc
xor
and
sbb
lret
pop
push
outsl
and
js
dec
negb
in
ucomiss
jae
ficoms
ds
cwtl
in
dec
mov
sub
jne
jb
mov
testb
mov
int
jp
push
pop
mov
or
or
lret
dec
jo
insb
mov
mov
push
mov
mov
nop
int
gs
mov
clc
push
dec
adc
dec
jae
dec
mov
dec
pop
movsb
lods
int
clc
lods
cmp
sub
cmp
outsb
ja
mov
sbb
mov
mov
lock
mov
pop
xor
sbb
in
pop
add
push
jle
xor
aad
mov
pusha
jno
lock
pop
push
sarb
divb
jae
add
xorl
sub
daa
xor
mov
push
pushl
dec
shlb
in
aam
mov
inc
dec
lret
ss
aam
out
lea
dec
or
jbe
les
mov
mov
dec
dec
mov
dec
inc
jnp
and
mov
icebp
inc
push
imul
jbe
mov
mov
inc
shlb
pop
aaa
add
imul
push
sub
leave
mov
int
adc
mov
iret
mov
mov
test
imul
xchg
enter
push
dec
aaa
cmovg
mov
jg
or
inc
scas
cld
les
mov
pushf
adc
jle
xchg
inc
or
mov
push
rcll
fiaddl
in
dec
pop
les
inc
jb
lds
or
pop
push
test
stos
and
push
jle
dec
xlat
or
mov
int3
icebp
adc
insl
pop
inc
inc
dec
mov
adc
add
out
inc
add
add
seto
rcrb
dec
enter
or
inc
and
jle
or
push
std
mov
or
dec
lret
ret
outsb
ret
inc
les
push
mov
into
and
test
aam
jp
dec
lods
adc
aad
repz
lret
icebp
or
mov
add
addl
rorl
outsl
cmc
mov
fdivp
ret
cmpb
mov
iret
jmp
xlat
xchg
pop
xchg
nop
dec
or
add
inc
cmpb
sub
pop
fcoms
add
sub
or
lret
nop
lods
adc
xlat
push
xchg
push
push
or
xchg
test
idivl
ret
orl
sbb
sbb
or
inc
jmp
test
lret
rcll
xchg
sub
xchg
cli
mov
sarb
push
insb
cwtl
pop
pop
xchg
xchg
xchg
sub
inc
ret
repz
sti
pop
fsts
ret
mov
jns
xchg
ficompl
popf
sbb
dec
or
incl
add
or
push
aad
xchg
pop
ficoml
pop
mov
mov
push
jmp
fwait
pop
adc
cmp
aas
ret
or
sbb
nop
rclb
mov
fcmovu
pusha
sub
jge
sbb
jnp
jg
or
cwtl
pop
jmp
lcall
jmp
dec
jae
divl
hlt
cmp
and
cwtl
ror
add
sti
ss
cld
inc
test
inc
xchg
outsb
sbb
sbb
mov
out
lods
repz
jb
ret
adc
mov
aad
les
imul
mov
push
cwtl
lcall
adc
aam
por
inc
shr
pop
and
and
mov
std
addb
sbb
aam
or
mov
das
sbb
jecxz
pop
push
into
inc
jl
mov
imul
ret
or
xchg
std
repz
adc
push
jmp
push
dec
imulb
xor
xchg
pop
mov
int3
or
mov
mov
rcl
pop
sbb
fstpl
jge
scas
lock
jb
jnp
sbb
mov
jmp
aas
mov
shrl
dec
pop
lcall
hlt
jmp
xor
xor
push
fucomi
loope
mov
sti
stc
mov
or
cld
add
push
fisttps
sbb
push
dec
jmp
scas
jno
in
scas
cmp
in
and
pop
jmp
aaa
repz
mov
xlat
fwait
push
pop
pop
sahf
fdivl
mov
sarb
outsl
mov
in
jmp
cmp
fs
xchg
or
mov
mov
ficompl
sbb
rolb
in
lods
xor
rcr
mov
pop
mov
jnp
jo
jbe
jl
dec
rcrl
sahf
int3
sbb
xor
jge
jb
pcmpgtw
in
ficompl
test
cmp
inc
insl
dec
rcrb
fstl
loopne
sbb
fcom
vpsllq
lods
sub
inc
mov
negl
jge
mov
cmp
mov
fsubl
arpl
lds
xor
ret
push
popf
and
cwtl
iret
push
mov
clc
mov
idivl
fstpl
fistpl
add
mov
sub
aaa
lds
push
pcmpeqw
and
push
dec
add
push
cmp
xchg
sbb
aaa
mov
adc
add
mov
sub
push
sbb
or
jae
mov
adc
adc
push
jmp
jle
cmc
xor
xchg
popf
loop
pop
push
or
mov
jns
lret
jmp
xchg
sbb
ficomps
ficompl
mov
jge
inc
lea
push
adc
jmp
mov
inc
or
pop
pop
fnstsw
mov
cli
pusha
loope
push
dec
lods
inc
jg
ja
cmp
push
sbb
pop
repz
push
pushl
clc
sub
in
sub
sub
and
pop
xchg
jo
inc
cmp
jnp
sti
pop
pmullw
out
nop
sbb
rol
mov
insl
clc
add
cwtl
jmp
and
push
xchg
mov
mov
xlat
repz
jmp
fstpl
ficoml
add
sti
jbe
inc
mov
jmp
pop
pop
aam
sti
jmp
cli
cld
aas
test
xlat
hlt
ficompl
mull
cmp
inc
jo
dec
xchg
jmp
pushf
fcom
mov
jmp
jmp
or
sysexit
jmp
pop
fmuls
sub
lock
inc
int
or
sbb
push
mov
lret
sbb
pusha
pop
add
lea
incl
jmp
push
mov
push
jmp
adc
ret
jl
cmp
mov
pop
sbb
enter
jne
rcrl
ss
jno
jg
or
pop
sub
xchg
aad
or
sub
jl
add
adc
jge
cmp
pop
pop
dec
andb
mov
sub
mov
push
stos
sbb
add
cld
or
add
xchg
xlat
pop
aas
ficomps
sti
sub
push
mov
mov
adc
jp
push
push
sbb
mov
add
or
pop
push
jge
pop
sbb
fcoms
hlt
bnd
mov
xchg
fisubrl
fcoms
aam
leave
inc
shrb
mov
or
sbb
ficomps
icebp
push
or
jae
jno
mov
add
cwtl
xlat
adc
cmpl
sbb
or
cltd
jmp
nop
inc
cmp
cmp
xor
mov
nop
cwtl
test
ror
dec
add
jno
jge
nop
in
fcmovu
pop
sub
push
mov
sub
ja
cmc
sti
jg
mov
pop
fcoms
push
sub
jle
fimull
std
sbb
leave
push
lds
mov
pop
add
pop
inc
inc
sub
ror
test
mov
dec
sbb
pop
pop
xchg
and
add
sbbb
mov
dec
push
sub
add
mov
jmp
ds
test
dec
aam
pop
lods
nop
add
jg
idivb
jae
cld
add
dec
aam
xlat
xchg
sbb
ds
addb
fisubs
out
sbb
dec
aas
sbb
insl
inc
dec
push
mov
or
jmp
ret
inc
inc
dec
dec
adc
fldcw
ds
jmp
push
inc
mov
stos
lods
inc
push
mov
jmp
dec
xchg
inc
add
add
inc
mov
negb
out
hlt
outsb
inc
add
cmp
lods
addl
dec
enter
sub
inc
inc
int3
jae
lods
lcall
inc
inc
fucomp
cmc
cli
int3
dec
push
push
or
mov
add
xchg
fcmove
lahf
repz
imul
jne
jge
or
scas
adc
adc
inc
inc
stos
jne
sub
mov
fsts
sbb
fwait
add
and
rcll
or
test
inc
xorl
sti
push
rorl
hlt
jbe
cmovnp
int
push
xchg
sbb
nop
mov
mov
addb
adc
xchg
cltd
fcompl
cwtl
jp
nop
jmp
sarl
subl
dec
xchg
fimuls
add
jmp
fistpl
inc
jmp
add
cmp
inc
les
rcll
push
shll
into
or
xchg
inc
or
insb
rclb
lcall
add
add
xchg
pop
or
lret
lods
rclb
sbb
cli
push
or
rcll
sbb
fistpl
cmp
xchg
pop
push
cmp
mov
lods
imul
cmc
ret
add
dec
push
adc
jmp
sbb
aad
out
inc
cmpb
jmp
dec
rclb
cmp
dec
or
add
les
jmp
rcl
sbb
lcall
sub
cld
js
mov
lea
std
sub
mov
inc
or
push
fcomps
adc
mov
or
aas
insb
jp
cmp
shll
adc
lds
leave
pop
adc
fdiv
sbb
jmp
adc
mov
lds
adc
lods
movsl
inc
out
test
lret
into
stos
push
mov
sbb
mov
push
jmp
inc
inc
mov
sub
add
xchg
dec
ds
mov
xchg
jmp
dec
or
push
mov
mov
sub
jnp
mov
or
adc
scas
or
push
jmp
aam
pop
pop
imul
arpl
jnp
lcall
lcall
sbb
push
dec
xchg
xlat
pop
std
sbb
scas
xchg
dec
popa
cmp
inc
ret
sub
push
rclb
dec
lret
decl
xchg
mov
test
sbb
pop
inc
sub
mov
stc
or
aas
add
mov
xchg
adc
movl
and
pop
mov
insl
sbb
mov
push
enter
or
or
jb
pop
or
aad
cmp
fsts
stc
cmp
data16
mov
adc
notl
incb
inc
mov
and
pop
push
inc
outsb
add
adc
mov
adc
dec
lret
movb
scas
push
push
fcomps
mov
ret
std
outsb
mov
dec
push
aas
rcll
pop
dec
or
incb
inc
rorb
sbb
xchg
adc
fcmovnu
xchg
fsubl
sub
or
or
mov
dec
mov
xchg
mov
push
xchg
lcall
jmp
mov
mov
xchg
jo
and
rclb
xchg
mov
add
ret
subl
mov
or
ja
adc
fadd
mov
lds
test
out
dec
and
jmp
lds
arpl
sbb
sbb
rcrb
and
cmp
ret
xchg
int
and
dec
dec
sbb
rclb
jmp
cwtl
ficompl
push
or
adc
hlt
cmp
imull
addb
leave
dec
push
popf
std
test
into
mov
jle
cmpsb
in
rcll
push
push
dec
mov
mov
mov
adc
pop
add
jne
aam
mov
scas
xchg
sbb
or
insb
add
sti
jnp
movsb
insl
add
or
dec
pop
inc
dec
push
aas
push
inc
mov
aam
adc
sbb
or
sti
jge
add
enter
dec
ja
or
jbe
jb
stos
jmp
xlat
cwtl
cltd
fsts
imul
inc
add
inc
inc
add
inc
dec
dec
cli
movsb
aaa
pop
adc
ja
dec
or
pop
scas
push
adc
call
sub
add
repz
stos
sti
enter
lea
cmp
adc
outsl
xchg
pop
fisubrl
xchg
mov
sbb
pop
adc
adc
hlt
cmp
ficoms
sub
sub
mov
outsl
inc
inc
lret
push
push
xchg
movsl
lea
xor
mov
lea
sbb
pop
xor
jno
cmp
xchg
jnp
daa
test
push
shl
adc
inc
enter
push
call
nop
or
add
cmp
ret
sti
in
psrlw
adc
push
sbb
lods
adc
cwtl
jbe
adc
inc
cld
nop
jle
in
cmp
adc
in
cs
xor
sar
xchg
jno
fsubrs
push
mov
pop
ret
aas
mov
and
push
clc
adc
outsl
pop
inc
sub
xchg
dec
sub
adc
outsl
xchg
adc
out
ret
jnp
incl
adc
iret
psubb
dec
outsl
mov
push
aad
xor
pop
pop
or
iret
leave
add
ja
jl
add
cmp
sub
adc
dec
mov
mov
mov
pop
setle
shlb
cmp
or
pop
and
int
xor
push
adc
jmp
addl
rcrb
or
push
aaa
or
push
clc
psubusb
je
dec
add
cmp
xchg
fwait
int3
adc
into
pop
cmp
or
dec
div
aam
jmp
xchg
xchg
adc
test
std
mov
lods
mov
lods
cmovl
test
jle
icebp
paddd
cmc
sbb
add
jmp
mov
ret
push
or
dec
or
xchg
pop
repnz
push
dec
xchg
adc
mov
rolb
sti
cmp
dec
pop
jne
enter
mov
repz
pop
adc
fwait
sti
and
add
pop
and
inc
push
adc
jb
mov
clc
dec
in
push
push
iret
enter
jg
and
pop
leave
jo
push
outsl
push
lods
mov
cmp
mov
and
cwtl
gs
xchg
mov
std
jnp
pop
or
movsl
push
sub
adc
xchg
cwtl
mov
aam
mov
add
jnp
inc
xchg
sub
or
pushl
xchg
fwait
cmp
ret
js
inc
hlt
cmp
rcll
push
fcomp
xor
pop
ja
cld
jle
add
dec
cmp
push
jle
dec
repz
lret
xchg
adc
or
pop
xchg
jb
mov
sti
jle
mov
xor
jnp
test
pop
push
jmp
push
int3
movl
shrb
pop
adc
rcll
xchg
pushf
mov
sub
lret
add
gs
leave
aaa
push
mov
dec
cmp
ret
inc
imul
shl
mov
adc
mov
repz
dec
dec
push
xor
neg
mov
adc
nop
fs
xchg
scas
repz
inc
into
dec
insl
lds
cmp
outsl
ljmp
or
push
sbb
push
mov
or
xchg
push
xchg
sub
xchg
fcoms
rorl
jnp
cmp
ljmp
add
dec
push
mov
aaa
popf
adc
push
aad
or
inc
sarl
jg
fwait
jo
cmp
cmp
mov
add
pop
xchg
mov
add
cmp
jl
les
jae
cmp
mov
xchg
inc
addr16
mov
inc
jl
in
mov
push
push
outsb
out
icebp
adc
mov
push
xchg
pop
cwtl
sub
xlat
push
push
dec
or
mov
dec
mov
xchg
pop
in
push
push
adc
dec
pop
xchg
jle
insb
fcoms
push
push
iret
jl
les
jle
add
mov
or
insl
adc
push
push
movsl
lods
aam
pop
xchg
aam
dec
shrl
adc
sbb
pop
mov
rolb
jecxz
test
mov
jle
dec
jg
mov
xchg
or
push
cwtl
shrl
mov
out
or
rcrb
dec
or
jle
adc
pop
push
xchg
adc
push
xchg
sub
mov
add
mov
cltd
xchg
int3
mov
aad
jmp
xchg
xchg
int
lods
inc
add
std
cmp
xchg
mov
mov
movsl
adcb
xchg
xchg
adc
or
jge
cmp
jnp
or
enter
sbb
push
cmp
aam
or
mov
repz
outsl
rclb
xchg
pop
mov
insb
sbb
sbb
repnz
xlat
add
leave
inc
rclb
inc
fidivrs
fwait
or
mov
adc
xchg
pop
xlat
scas
aad
dec
lret
xchg
add
mov
or
add
inc
adc
repz
xor
xchg
push
imul
or
inc
sbb
jae
adc
adc
or
int
and
xchg
mov
lret
sarl
cli
pushf
cmp
inc
cmc
imul
dec
repz
aam
mov
mov
mov
jg
cmp
test
nop
loopne
gs
jle
rorl
push
xchg
or
pop
inc
mov
nop
test
sbb
repz
or
or
push
fisubrl
add
jge
in
add
shll
sub
mov
cmp
sub
and
enter
jle
and
or
adc
pop
bswap
jle
popf
out
mov
dec
lods
nop
rcll
mov
lds
call
fcoms
ds
or
dec
mov
adc
out
inc
sar
rolb
icebp
cmp
jle
outsb
sbb
pop
mov
scas
xchg
aad
xchg
fwait
popf
jmp
inc
inc
jg
dec
pop
insl
les
and
sub
dec
ds
leave
call
adc
mov
or
and
aas
add
ret
xchg
inc
nop
mov
pop
dec
pop
xchg
in
mov
adc
push
add
in
int3
std
decb
mov
aas
outsl
dec
cmp
leave
lret
mov
outsb
adc
int
xor
inc
jnp
daa
sbb
dec
pop
dec
ror
dec
or
and
jle
adc
add
push
mov
dec
xor
jnp
mov
dec
rol
cmp
adc
jecxz
add
xor
mov
mov
int
lret
sub
lret
jo
out
into
xchg
mov
sub
ret
dec
insb
dec
xchg
outsl
push
mov
jo
adc
mov
or
mov
inc
addl
mov
inc
xchg
fidivrs
mov
fwait
or
push
and
iret
lret
inc
jmp
jl
std
bswap
sub
or
push
nop
sbb
scas
mov
in
xchg
mov
xchg
sarb
xchg
push
mov
add
lock
nop
mov
pop
inc
xchg
jb
dec
jle
jae
imul
mov
dec
jle
rorl
mov
daa
jnp
or
push
push
xchg
fdivrl
adc
and
addl
jge
addr16
sub
lods
push
push
adc
adc
lret
dec
xorl
fisubl
lahf
jo
push
mov
fiadds
lods
daa
jnp
and
xchg
aam
adc
pop
outsb
lret
cmp
adc
or
xor
or
lds
or
aas
inc
cltd
daa
jmp
push
aad
push
push
jl
pop
mov
dec
fsubrs
or
ds
mov
add
std
xchg
gs
outsb
pushl
push
aad
mov
sub
jmp
mov
inc
dec
inc
dec
insb
notb
outsl
aam
sub
cmp
xchg
xchg
pop
adcb
inc
jge
sti
mov
std
shr
dec
cmovnp
xchg
push
dec
scas
or
push
inc
jp
push
mov
push
xlat
mov
mov
icebp
xchg
repnz
cld
cmp
test
popf
or
pop
or
jne
ja
scas
cmpsl
fsubrs
jge
sbb
ret
dec
or
sub
lods
jbe
or
mov
xchg
repz
outsb
je
addl
add
jnp
int3
mov
adc
iret
jae
add
xor
mov
sub
cltd
mov
add
leave
pop
sub
adc
insl
cmp
out
or
mov
push
adc
inc
and
inc
add
ret
cli
add
aad
xchg
adc
xchg
adc
mov
scas
inc
int
jmp
enter
in
push
std
add
iret
mov
mov
mov
mov
lret
or
adc
shl
rcl
pop
dec
sbb
shrl
outsl
mov
decl
flds
dec
jnp
jg
mov
inc
aam
dec
adc
iret
jo
ret
iret
cmp
and
fldt
popa
cmp
add
mov
mov
pop
pushf
decl
dec
and
stos
sbb
mov
int
into
push
cli
and
or
idivb
cmp
int
or
test
mov
clc
sub
lds
cmp
adc
call
loope
into
lret
lret
push
jmp
enter
pop
push
jbe
std
jne
loopne
js
inc
roll
mov
fistl
sbb
cmp
xlat
mov
add
ror
and
jle
mov
mov
fsubs
pop
jg
xor
sbbb
rclb
jne
fs
test
jo
cmp
add
sbb
sti
daa
or
cltd
pop
out
sub
sbb
xchg
insl
das
jo
sub
enter
mov
pop
dec
or
addl
xchg
roll
lods
ja
insl
hlt
mov
cmp
in
sub
or
cmpb
lock
and
mov
sub
pop
js
mov
insl
lock
cli
jnp
out
xchg
aaa
mov
inc
out
add
in
pop
pop
adc
sub
imul
out
clc
mov
insb
adc
das
sbb
cmp
out
adc
pop
insb
xor
sbb
xor
clc
dec
popf
js
lahf
mov
cld
cmp
jne
lock
sub
outsl
mov
jns
std
jecxz
sbb
jno
adc
xor
leave
daa
sbb
pop
test
or
push
sti
jbe
push
enter
dec
adc
decl
xor
out
and
cmc
push
lcall
outsl
xchg
je
das
sarl
and
inc
push
mov
mov
xor
insl
aas
js
and
or
ds
popf
jns
int
dec
or
stos
sub
xchg
sti
repz
mov
jae
add
cli
lock
add
rep
add
les
stos
xor
setl
into
sbb
mov
adc
in
push
sbb
or
or
or
dec
push
sbb
sbb
pop
repnz
bnd
and
testl
lods
imul
ror
push
jnp
int3
and
push
jno
mov
sub
mov
jmp
ret
call
cli
scas
dec
sbb
insl
je
sti
mov
fcoml
push
gs
je
icebp
mov
imul
into
in
dec
pop
or
ja
lahf
out
icebp
decl
jnp
dec
inc
rorl
test
cmp
gs
aam
jns
out
jae
sbb
loope
ja
mov
cmpsb
add
xor
mov
dec
in
pop
fcmovb
or
sti
fimuls
in
xor
cmp
aam
aam
call
test
or
loop
cs
into
adc
fsubp
scas
or
ljmp
fsubl
add
add
iret
cmpsb
ret
xchg
push
gs
fs
imul
sarl
or
jb
sub
int
cmp
push
adc
add
mov
leave
repz
arpl
dec
pop
sub
pop
sbb
dec
fucomp
push
sub
or
ja
ret
add
cltd
jb
in
mov
lock
xrelease
scas
push
lret
out
sub
fsubrl
movsb
outsb
mov
mov
add
mov
push
pop
mov
loopne
movsl
cli
popa
cld
and
icebp
jns
hlt
std
mov
loop
lcall
and
jecxz
jp
test
test
inc
stc
jg
xchg
mov
mov
lea
mov
add
or
mov
pop
jbe
outsb
push
pop
push
repz
std
ret
add
insl
dec
sbb
pop
mov
outsl
and
test
jb
sub
movq
hlt
scas
sahf
test
push
in
cmp
sbb
lods
mov
outsl
xchg
or
lret
sahf
cmp
out
add
lods
mov
out
xchg
mov
ljmp
sub
js
fidivrs
adc
pop
mov
out
test
mov
outsl
push
fcmovbe
xchg
ret
jmp
loop
shlb
ds
xchg
outsb
sbbl
imul
xchg
sub
jge
xor
rol
jae
mov
jne
int3
sbb
adc
push
sbb
jne
lock
fbstp
scas
test
add
iret
sub
out
imul
inc
fsubr
iret
ja
sub
jnp
cli
les
stos
aas
sub
xor
add
aaa
sbb
pop
lock
cmp
negb
sbb
ret
loop
adc
mov
jb
cmp
mov
sbb
out
hlt
je
sub
out
lock
clc
lods
repz
in
or
js
jmp
mov
mov
pop
outsl
dec
and
dec
gs
icebp
nop
out
cmp
or
scas
aas
int3
sub
inc
out
mov
iret
fsubrl
sub
sub
ss
sbb
das
push
adc
ja
sub
dec
stos
mov
int
ljmp
sub
or
in
in
daa
sti
daa
jg
rclb
or
or
hlt
out
add
jno
dec
das
sub
fnstsw
in
pop
cmc
ret
or
insl
ret
fsubl
jae
std
xor
notb
or
mov
and
imul
jg
sub
adc
cs
ret
ror
scas
clc
jmp
outsl
out
and
mov
data16
mov
out
enter
jecxz
data16
inc
mov
int3
std
mov
xorl
test
and
lcall
in
aas
add
and
clc
les
lods
pop
shlb
cmp
xor
cmp
or
cmp
out
insl
out
and
and
xchg
adc
clc
xor
data16
andb
inc
inc
sbb
repnz
jmp
mov
dec
mov
mov
stc
mov
icebp
add
lock
xchg
mov
pusha
scas
mov
outsl
xor
lock
into
add
or
add
mov
sahf
test
mov
sub
add
xor
dec
mov
imul
or
shr
lret
out
out
inc
scas
sub
push
mov
in
mov
cmp
in
imul
mov
outsl
or
add
aam
adc
into
or
shrb
and
lods
into
in
test
sbb
shlb
rorl
mov
icebp
xchg
into
or
dec
paddsw
mov
sbb
dec
dec
daa
cs
mov
mov
repz
pop
enter
jae
and
pop
shrl
add
in
test
subb
xchg
jnp
int3
add
in
push
pop
push
bnd
cmp
aaa
aam
in
lock
mov
subl
adc
jmp
inc
adc
je
in
ficoml
jb
aas
lea
add
icebp
lock
imul
andl
es
lock
daa
sbb
push
push
mov
scas
cli
adc
or
mov
mov
ss
aam
inc
imul
nop
je
repnz
or
pushf
inc
sti
outsb
out
in
test
pop
xchg
inc
push
cli
dec
mov
pop
add
mov
adc
add
lock
call
idivl
dec
xor
pop
aas
jnp
repnz
pushf
sub
cs
or
test
dec
jmp
push
gs
shrb
jp
rep
mov
call
fwait
out
sub
fidivl
cmc
xor
lret
dec
jo
mov
into
mov
mov
je
mov
dec
out
lahf
call
imul
insl
int3
jp
sub
adc
add
div
add
push
sub
or
mov
div
test
xor
negb
push
lret
test
xor
dec
sub
shl
dec
insb
shll
out
dec
mov
lock
sbb
lods
sbbb
gs
inc
add
frstor
iret
sub
mov
cs
adc
or
cmp
out
cmc
jp
xor
push
fbld
xor
lods
add
jae
or
xlat
shrl
sbb
aas
mov
cmp
jno
nop
jnp
call
psllw
jno
jmp
add
mov
mov
sbb
mov
dec
out
cld
and
stos
mov
outsl
imul
ljmp
sub
or
or
pop
jne
sbb
test
xorl
bound
and
icebp
xor
je
ret
xchg
das
sub
aas
mov
imul
sbb
adc
stos
mov
std
mov
int3
or
cmpsl
fwait
scas
sub
pop
push
jecxz
cmp
sub
jo
mov
cmp
call
imul
push
stos
adc
xchg
outsb
ja
ja
sub
in
xchg
xor
rorl
sub
dec
jo
outsl
aas
jg
outsb
pop
cmp
ja
and
jmp
pop
rorb
not
insl
sbb
jl
in
sub
sub
and
pushf
in
mov
leave
mov
or
outsb
aaa
lahf
lea
sub
insl
or
scas
pop
jp
out
arpl
addr16
scas
dec
orl
jg
sub
pop
aam
rorb
pusha
out
int
xor
in
xchg
aas
fwait
repz
out
or
cmc
or
xchg
sub
arpl
ret
inc
dec
sbb
add
imulb
push
add
pusha
leave
jns
inc
out
cmp
jo
jo
insl
mov
lods
in
and
jb
cli
das
xor
dec
addr16
mov
bound
imul
or
lea
sub
std
in
mov
sub
adc
in
in
xor
xor
mov
stos
inc
fs
outsl
sub
insb
out
aaa
insl
push
cmp
insl
scas
jno
insl
mov
pop
insl
das
sub
das
imul
gs
mov
lret
adc
in
or
xor
jnp
dec
xor
adc
out
das
ret
push
pop
stos
repz
imul
decb
inc
xchg
mov
add
imul
pop
adc
mov
jae
ret
dec
das
ret
sti
mov
pop
aad
pop
jmp
fucomp
ds
dec
push
stos
xor
ja
mov
dec
out
fsubrp
push
jb
daa
ds
lods
shrl
push
hlt
lock
out
jg
inc
cld
dec
ja
lock
cld
int
mov
adc
cmp
ds
cmpsb
gs
cmp
js
push
out
or
or
scas
cmc
sahf
das
test
mov
xchg
xor
in
jns
mov
mov
mov
cmp
je
in
and
lea
mov
stc
imul
nop
jns
das
dec
test
push
test
xor
les
fwait
fs
sbb
sbb
jae
cmpsl
stc
test
enter
imul
ss
out
cltd
add
add
fucomp
mov
outsl
sti
int3
sub
push
mov
push
xor
stos
xorb
movsl
dec
sti
push
pop
das
cmc
gs
add
sahf
insl
and
in
gs
sub
imul
shrb
inc
sbb
cmp
sbb
push
or
xor
inc
inc
insb
mov
fsubr
movsl
stc
inc
pop
in
dec
lods
pop
int
push
ror
fidivrs
mov
lahf
dec
dec
cmp
or
mov
lea
lret
pushf
pop
in
ljmp
insb
ds
cli
ja
sub
jmp
pop
mov
jb
mov
repz
addr16
hlt
in
rorb
sub
mov
inc
and
dec
daa
xor
clc
mov
into
faddl
jl
scas
xlat
nop
jp
fwait
dec
ds
mov
std
dec
mov
call
daa
adcb
scas
push
push
lock
push
es
insl
iret
jne
andb
daa
jae
call
jbe
pop
outsl
jae
sahf
arpl
stos
sub
jo
sbb
int3
fwait
in
shl
int
ss
dec
mov
inc
daa
add
mov
outsb
icebp
mov
cmpsl
or
dec
insl
sub
mov
scas
in
in
sub
or
cmc
xchg
and
mov
faddl
mov
dec
icebp
scas
fwait
fs
push
jns
int3
hlt
hlt
mov
test
subb
rorb
mov
mov
std
das
orb
sahf
jbe
lods
aad
pop
test
pop
out
push
pop
ror
push
cmp
loope
push
mov
mov
jg
cli
mov
addl
cmp
xor
cmc
scas
lds
dec
aas
sbb
xor
xchg
mov
out
lcall
mov
icebp
dec
sub
mov
in
inc
repnz
and
jae
add
pop
iret
jae
ror
loop
mov
xor
pop
xchg
scas
mov
sbb
ss
lahf
call
mov
jae
jb
stos
idivl
idiv
pop
dec
sub
cmpsb
inc
int3
sub
mov
addl
inc
outsl
fsubl
sbb
cmp
jmp
sub
mov
xchg
add
jne
gs
repnz
sbb
dec
push
xor
idiv
test
and
scas
sbb
test
outsl
shlb
insb
js
stos
lock
dec
xor
sbb
and
fsubl
out
jae
stc
mov
fwait
call
jne
xchg
mov
mov
mov
rep
je
add
mov
fisttpll
jnp
rsqrtps
sbb
fisubrl
subl
daa
stos
es
repnz
sub
pop
dec
outsb
ficoml
lods
das
or
add
das
mov
push
sbb
add
inc
mov
jnp
call
ss
push
out
stc
xor
pop
div
or
lcall
imul
sub
and
and
sbb
pop
cmp
repnz
mov
data16
out
adc
mov
and
adc
das
add
dec
ret
xor
xor
test
paddsw
in
jge
lock
cmp
xor
xchg
mov
shlb
sub
pop
mov
cmp
lods
xor
sub
mov
add
xchg
aas
nop
clc
outsb
std
cli
lods
sbb
inc
jo
fadd
stc
lret
sub
je
hlt
lret
mov
cmp
icebp
lods
scas
fnstcw
lock
daa
sub
dec
faddl
or
dec
into
push
add
scas
lock
jp
in
mov
inc
testb
sub
lock
into
mov
subl
sbb
shlb
xor
ja
out
in
fdiv
jg
pop
and
sti
fadds
dec
xchg
cs
jo
pop
add
lea
daa
sbb
and
cmc
jb
cmp
dec
xchg
imul
mov
xchg
mov
mov
mov
mov
mov
sbb
and
insl
stc
mov
imul
cmovs
subb
push
or
jnp
xchg
leave
xor
push
sbb
out
mov
iret
leave
jns
stc
mov
inc
push
out
cmp
cmp
jp
cmp
aad
xor
sbb
xor
adc
dec
icebp
push
push
lock
out
xor
mov
sahf
or
mov
xchg
and
dec
aam
popa
and
add
cmp
leave
adc
std
ds
and
test
in
out
sub
cmp
jns
add
int3
test
add
cmp
jg
clc
pop
jb
ds
mov
push
and
inc
sbb
mov
jnp
sub
sbb
aaa
out
mov
fidivrs
cmc
sti
xchg
inc
sbb
and
cmpsb
mov
cltd
dec
inc
outsb
lcall
data16
or
add
stos
cmpsb
mov
fstps
or
addr16
lret
and
and
and
cmc
mov
adc
lods
add
imul
inc
inc
inc
sbb
dec
and
xor
shl
and
cli
jl
xor
mov
inc
stos
outsl
sbb
or
jne
pushf
add
cld
lock
shll
push
sbb
add
das
rolb
push
pop
mov
sub
jecxz
icebp
xchg
sbb
and
outsb
mov
pop
stos
dec
inc
out
insb
in
sbb
mov
rolb
jg
cmp
mov
imul
clc
or
jno
or
icebp
mov
mov
hlt
fucom
movsb
dec
pop
mov
dec
mov
mov
out
or
push
lret
mov
in
out
shr
xor
xchg
pop
dec
mov
sar
jmp
and
addb
and
ljmp
or
dec
les
and
insb
jmp
data16
scas
pop
dec
aaa
insl
repnz
dec
and
lds
mov
and
aaa
adc
jnp
lea
sbb
inc
arpl
cmc
mov
addr16
jne
xor
pushl
fimuls
aad
mov
lock
aam
popf
inc
mov
aaa
mov
and
in
sbb
mov
jo
out
fcompl
hlt
aam
aam
and
jmp
mov
sub
lods
sub
sub
enter
dec
pushf
add
sub
stos
pop
dec
insl
out
xchg
or
insb
lods
ds
mov
out
push
add
mov
psllq
or
sysenter
or
mov
push
pusha
in
ret
sbb
adc
sub
fbstp
aas
dec
lock
cmp
repnz
xchg
mov
hlt
clc
por
or
ds
mov
pop
mov
lods
jmp
imul
cmp
int3
jns
dec
in
insl
mov
out
outsb
dec
pop
stos
mov
cmpsb
adc
and
sub
cmp
out
cs
cld
inc
cld
adc
mov
or
add
dec
push
lahf
mov
imul
sub
jo
decl
jae
mov
scas
loopne
pop
or
mov
sub
idivb
insl
mov
pop
or
outsl
jmp
pop
or
or
push
ficomps
lea
and
icebp
pushf
cmp
push
sub
bound
inc
clc
jno
and
or
movsl
stc
clc
mov
rcrb
add
lods
pop
xor
rolb
xor
pop
xchg
cmp
xor
out
dec
lcall
in
imul
dec
mov
adc
and
mov
cmpl
repz
fiadds
mov
call
adc
out
or
cmc
stos
cs
jge
pop
test
adc
inc
xor
testl
jo
fwait
or
stos
xor
jno
lods
loopne
cmp
pop
pop
setl
inc
in
loopne
and
mov
inc
lea
xor
cmpb
add
push
std
loopne
negb
or
add
test
sub
jb
mov
adc
dec
call
mov
icebp
mov
frstor
int3
stc
cld
inc
fwait
sti
out
out
fimuls
cmpb
inc
sub
sbb
sbb
xorb
movsb
lods
inc
ja
xchg
lret
out
push
ror
sub
dec
mov
mov
sbb
aam
dec
cmp
cmp
rorb
out
gs
inc
cmpb
mov
sbb
ja
cmpsb
jl
adc
pop
lcall
dec
aaa
sbb
pop
aas
les
js
adcb
xor
mov
add
jne
xchg
xor
mov
fistl
pop
push
xlat
insb
shll
shrb
or
inc
in
in
movsl
in
aas
out
sti
xor
inc
cmpsb
pop
stos
adc
jns
pop
push
add
pop
movsl
lock
scas
push
in
arpl
mov
shll
std
sub
or
xor
jb
or
or
insl
or
movzwl
jne
sbb
dec
jne
repz
es
jb
pop
adc
lock
dec
iret
or
dec
cmpsl
jg
jle
int
sub
mov
mov
push
pushf
add
xor
jnp
repz
and
and
frstor
mov
cmpsb
into
cmp
test
out
add
and
loop
push
dec
movsl
mov
jnp
or
lods
testl
outsb
push
out
add
lods
test
fimull
aam
push
push
sub
push
inc
jo
ds
stos
xor
lods
xchg
or
push
aaa
repnz
dec
jl
hlt
cmp
add
cmc
cmp
lods
fimull
xor
xor
daa
cmpsl
pusha
adc
dec
lahf
lods
or
stc
and
sbb
add
dec
test
push
mov
mov
stos
pop
cmpsb
sbb
jo
stos
lods
lock
les
insb
insb
negb
pop
and
lea
mov
dec
scas
mov
in
mov
sub
out
mov
sbb
loopne
mov
mov
dec
jae
imul
call
jle
mov
or
out
dec
out
lret
inc
mov
mov
mov
daa
bound
cltd
iret
das
out
scas
and
xlat
mov
sbb
inc
pop
decl
xor
add
pushf
jae
ja
mov
and
jg
lahf
les
dec
lods
fwait
dec
stos
lock
xor
xor
sti
jns
bnd
mov
loope
gs
sub
out
test
sbb
and
mov
lods
int3
ljmp
shr
or
cmp
scas
add
dec
pop
dec
rcrl
insb
and
lret
cld
adc
mov
and
jae
pop
iret
xor
xor
sbb
push
mov
mov
repz
jnp
mov
or
jl
jnp
cmp
jbe
gs
outsl
push
ljmp
decl
ds
cwtl
ja
je
and
and
scas
in
adc
pop
test
push
mov
xorl
or
mov
cltd
in
mov
outsb
add
lock
xchg
in
jle
out
stos
sti
ljmp
mov
lods
cmp
icebp
adc
aas
or
test
lock
std
rclb
lds
inc
enter
xchg
add
lea
xor
fidivs
pop
add
leave
mov
jmp
jns
sbb
and
out
adc
scas
ljmp
and
add
lods
in
insb
sahf
loop
pop
jo
cmpsl
pop
mov
ljmp
dec
ja
dec
sahf
insb
add
leave
outsb
cmp
add
and
push
add
je
and
or
adc
pop
mov
dec
pop
dec
mov
jo
out
in
dec
sbb
loop
sub
call
sub
out
push
in
lea
sti
js
cli
mov
or
adc
aaa
pop
mov
out
sbb
sub
inc
jecxz
lods
mov
mov
push
std
aas
cmpsl
inc
add
daa
or
inc
mov
std
lock
stos
insl
movsl
push
cs
push
out
add
or
mov
jne
mov
jl
das
test
dec
ljmp
add
das
fnstenv
cmpsl
xor
xor
adc
xor
or
pop
lea
std
out
hlt
in
mov
cmp
aaa
mov
sub
add
or
repnz
shll
mov
data16
mov
clc
aam
imul
xchg
das
dec
cmp
das
mov
mov
xor
lock
dec
subl
aam
lret
jle
call
add
imul
jae
inc
mov
das
stos
loop
xor
sbb
or
popa
lock
push
pop
lea
jo
pusha
rcrb
std
das
jae
outsl
sbb
jns
icebp
pop
out
loope
xchg
mov
adc
push
lea
and
cld
jge
or
ljmp
or
xor
or
je
test
imul
or
xor
cld
xor
add
lods
mov
jnp
sub
sub
cmp
shrb
stos
outsl
xchg
add
mov
jae
sti
add
scas
fnsave
pop
movsb
add
and
nop
andl
inc
dec
adc
dec
cmp
stc
dec
in
or
bnd
jo
jne
cmp
mov
or
pop
mov
in
or
out
imul
jp
pop
lock
pop
movsl
icebp
push
and
lcall
mov
and
icebp
xor
pop
mov
pop
into
fwait
add
orl
cmp
sbb
mov
mov
mov
jmp
pop
in
lods
or
jp
lea
sub
xchg
scas
cwtl
dec
test
adc
mov
mov
jo
out
mov
lock
and
andl
movsb
mov
xor
and
shl
jno
cmp
adc
jb
sub
mov
sbb
pop
dec
mov
notl
outsb
mov
mov
vmread
mov
stos
cmp
aam
lods
and
jp
xor
lahf
clc
pushf
jae
xor
cmpsl
cmp
pop
cli
mov
aas
sub
iret
stos
insl
loope
test
inc
incl
call
add
lods
sbb
and
sub
dec
push
mov
cld
cs
dec
sbb
mov
xor
in
xlat
ficoms
mov
pushf
aaa
adc
int3
pop
out
lea
inc
sub
xor
dec
fdivp
fdivrl
stc
int3
dec
sbb
hlt
aad
mov
adc
dec
test
and
pop
adc
sti
lock
lcall
dec
pop
or
push
ss
cs
aam
pop
mov
cs
pop
lods
sub
jbe
pop
ss
jge
mov
jp
fnsave
shll
sub
lods
daa
popa
scas
testl
pop
adcl
int3
dec
daa
sub
mov
cmp
mov
jb
sti
out
jnp
mov
loopne,pn
jp
lods
mov
jp
popa
mov
adc
inc
insb
xor
sbb
btr
mov
push
cld
outsb
sub
and
mov
lods
call
mov
dec
shr
imul
or
or
jg
ljmp
lock
mov
dec
lods
dec
add
push
mov
inc
in
int3
cmp
in
std
repz
dec
test
and
sti
dec
popl
mov
popa
jae
insl
loope
daa
pop
or
aas
pop
popf
sub
cli
lds
cmc
dec
xor
mov
inc
mov
add
lock
pop
dec
jle
loop
push
xchg
cmpb
jae
xchg
mov
sbb
adc
dec
cmp
adc
or
andl
mov
das
imul
sahf
stos
imul
mov
cmpl
loop
andb
out
cmp
leave
es
mov
in
push
or
out
clc
hlt
jae
repz
xor
lock
cmc
sbb
and
push
cmp
hlt
daa
std
sbb
dec
add
das
push
add
jns
idivl
mov
test
and
add
jmp
mov
or
jecxz
shlb
mov
mov
out
dec
ds
xor
cmp
cmpsl
pop
sti
or
xor
in
adc
cmc
in
push
icebp
rorl
loopne
arpl
popf
divl
pop
notl
adcb
sub
xchg
sub
xor
jg
outsb
cld
adc
or
xor
lret
adc
out
jo
shl
push
cld
push
call
mov
psubw
jno
je
aas
or
push
movsl
bound
je
dec
aam
cli
mov
xor
pop
fwait
adc
or
into
leave
out
mov
cmc
cltd
insl
jnp
out
repnz
loop
jbe
out
icebp
cld
std
js
mov
and
xor
cmp
inc
cmp
mov
dec
arpl
inc
sbb
fucomip
incl
mov
jle
mov
sub
sar
pop
push
sub
xorl
or
add
sbb
xor
mov
jge
inc
push
mov
mov
ficomps
sbb
jmp
sahf
loop
popf
popa
mov
jecxz
fnsetpm(287
lods
and
push
add
or
or
loopne
aam
jbe
jmp
mov
enter
stc
jmp
adc
aaa
shll
in
dec
push
jle
movsb
xor
cmc
cmp
mov
stc
filds
gs
fnstenv
decl
pop
pop
pusha
or
xor
jmp
mov
dec
dec
lods
xchg
scas
aaa
pop
push
and
adc
xchg
push
fstps
jno
data16
arpl
jmp
mov
cltd
lods
push
lret
mulb
call
jmp
mov
sub
les
jle
inc
jmp
stos
add
cmp
sub
mov
pop
into
inc
jmp
jge
mov
adc
lret
inc
sbbl
jne
pop
pop
pop
sbb
cmc
jmp
dec
cmp
stos
and
jns
into
cmp
sub
jmp
loope
mov
outsb
xlat
or
add
adc
cmpsb
xchg
jmp
adc
sar
and
popf
sti
cwtl
out
jne
add
cmp
xlat
mov
push
scas
shlb
or
lock
fdivs
jmp
les
push
mov
aaa
jmp
or
add
sarb
fcomip
push
jmp
shlb
mov
sbb
mov
fistpl
sti
lock
lods
sub
pminsw
push
or
or
inc
imul
out
dec
dec
imul
out
jp
dec
jmp
push
nop
loopne
movl
int3
mov
scas
jbe
in
repz
jge
sbb
mov
jnp
pushf
xor
xchg
push
gs
adc
or
aas
test
add
aad
nop
jp
mov
out
and
outsb
mov
adc
mov
xor
mov
xlat
cmp
jp
popf
test
xor
cmp
fcoml
lcall
jmp
enter
sar
scas
jno
xchg
test
addb
leave
mov
mov
cmp
jnp
loope
mov
mov
daa
sbb
jmp
xchg
lods
lret
or
and
xor
mov
ljmp
cwtl
pop
and
in
sbb
sbb
sar
fwait
xchg
add
xor
ljmp
out
cmp
jmp
aas
sub
push
not
outsl
cld
cmp
jmp
pop
adc
pop
jmp
lcall
jmp
test
mov
cmp
sbb
or
lahf
lods
loop
loopne
pop
and
insl
ja
add
scas
push
mov
stos
xor
rol
push
aam
ljmp
jae
loop
jo
cli
jmp
movb
jb
mov
jg
push
test
int
push
lret
rorb
add
popf
jbe
int
loop
inc
mov
test
jnp
fsubr
stos
mov
pushf
ja
push
enter
push
pop
mov
inc
sbb
inc
push
daa
sbb
cmp
push
pop
jmp
jge
loopne
ss
and
rclb
cmp
shr
mov
arpl
mov
sub
pushf
and
mov
sub
leave
js
xchg
mov
jmp
mov
mov
mov
dec
setbe
shlb
pop
pop
dec
or
xor
xlat
mov
cli
cmpsl
fnstcw
dec
or
mov
outsl
xchg
repnz
movlps
fmul
add
and
icebp
jae
repz
mov
lcall
mov
into
scas
jmp
adc
pop
mov
push
mov
adc
mov
dec
mov
push
jmp
test
push
lods
or
enter
adc
inc
repz
hlt
movsb
mov
or
add
fistpll
push
jmp
out
xlat
pop
out
dec
jp
lret
cmp
xchg
outsb
xor
sbb
repz
add
sbb
sarb
jmp
jb
sub
adc
xchg
jecxz
dec
mov
rolb
pop
jmp
imul
fists
add
sub
jle
ss
ret
lret
sub
repnz
and
rcrb
mov
mov
or
movsb
dec
pop
cltd
in
mov
jmp
rol
nop
cmpsl
xor
jne,pn
stc
les
jbe
clc
stos
jmp
orb
pop
sarb
mov
dec
xchg
mov
pop
jbe
dec
loop
lods
xor
pop
xchg
xchg
jecxz
cmp
adc
push
xchg
es
mov
inc
testl
push
sub
xor
mov
adc
jmp
and
adc
mov
ret
iret
mov
jmp
push
push
movsb
stc
ss
inc
jmp
daa
mov
je
jmp
or
gs
sbbb
jb
mov
out
cltd
jp
icebp
sar
push
pop
mov
add
jns
jmp
fnstcw
or
add
es
dec
mov
cmpsl
jmp
sarl
pop
jle
in
mov
outsb
stos
fsubrs
xchg
or
pop
cli
add
jmp
and
dec
pop
test
sub
enter
sub
push
or
mov
jmp
sbb
jl
jmp
push
outsb
lods
pop
scas
jp
stos
es
jb
adc
pop
stc
mov
mov
scas
aaa
fdivrs
sbb
add
pop
jmp
mov
fucomi
mov
test
jmp
testb
hlt
mov
xlat
dec
sti
sbb
out
in
shlb
xchg
into
fsubrs
xchg
inc
hlt
inc
lret
movsb
bound
shl
mov
scas
in
or
xchg
or
push
dec
mov
sbb
loop
mov
jmp
sbb
icebp
repnz
popa
jmp
ja
mov
mov
push
outsl
aas
sbb
jne
imul
jmp
jns
xchg
sub
jecxz
inc
jle
out
mov
shlb
das
ret
addr16
in
fst
loope
icebp
sub
jmp
push
hlt
inc
data16
iret
cmpsl
jmp
ljmp
add
cmp
mov
lods
movsl
insl
subb
jne
xor
test
and
scas
xor
push
mov
sbb
pop
jbe
fsubr
adc
or
jmp
push
sub
insl
jb
jle
jmp
js
je
cmp
add
sti
in
aad
jg
cwtl
outsl
mov
xchg
mov
movsl
push
cmp
in
int3
sbb
lret
push
sub
stos
push
sub
bound
sub
add
mov
add
mov
xor
out
or
xchg
cmc
cwtl
xor
jmp
inc
lods
xor
mov
mov
lods
notl
sbb
jb
outsb
clc
lods
ffreep
add
lods
cmp
or
fsubrp
sbb
add
add
adc
jb
into
add
daa
pop
xor
sub
ja
add
jne
pusha
gs
aaa
jmp
sbb
sbb
scas
add
lods
push
adc
int
ret
sbb
dec
cmp
sub
ss
jmp
shlb
dec
outsl
add
cmp
mov
fucomp
push
jecxz
nop
push
cltd
add
jmp
or
rol
jae
fistpl
xchg
nop
jmp
fwait
jno
insl
fcomps
jmp
jbe
and
popa
iret
cmc
jmp
sbb
cmpsl
out
movsl
lods
stos
pushf
clc
inc
and
cmpsb
popa
lock
in
add
and
loope
jp
cwtl
mov
xchg
aam
mov
fdivp
test
pop
fiaddl
jmp
sub
pop
cmp
fnstsw
dec
mov
incl
and
jl
je
ret
or
fstpl
hlt
xor
jmp
fiadds
lea
sub
ret
std
xor
repnz
xor
outsb
mov
push
sub
inc
pop
mov
xchg
dec
addr16
mov
push
inc
mov
cmpsb
jmp
aad
dec
sti
xchg
jmp
or
lods
xchg
xchg
ljmp
jmp
inc
and
and
inc
xchg
aad
push
fwait
insb
out
jmp
sub
in
andl
jbe
cld
xchg
or
cmp
fsubrl
jb
loopne
loop
jmp
or
ret
repnz
sbb
inc
clc
sbb
and
add
inc
mov
in
scas
xor
pop
iret
mov
in
movsb
jmp
subl
adc
je
test
xor
xor
cmp
and
lods
jbe
sub
add
hlt
in
sub
flds
xlat
jmp
test
jb
cmp
hlt
rorl
mov
jmp
sub
xlat
dec
in
pop
nop
loopne
sub
shlb
sub
pop
add
in
sbb
les
jmp
inc
movsb
mov
mov
push
sub
mov
sub
insb
jo
sahf
lods
inc
std
loope
sbb
cmpsb
dec
push
jmp
xchg
stos
mov
xor
cwtl
mov
jb
dec
jmp
mov
cmpsl
jnp
jne
sti
cmp
dec
call
cmpsb
into
jmp
outsl
mov
sub
inc
mov
xchg
jmp
in
or
mov
cmp
popf
jle
sahf
jmp
fsubrs
cmp
mov
std
cltd
jns
rolb
jmp
repz
stos
mov
sbb
adc
xor
xor
jmp
push
cmpb
imul
sub
ret
imul
pop
mov
in
add
xor
lods
in
cmc
sub
sbb
jae
inc
pushf
and
mov
add
mov
imul
sti
mov
or
jmp
pop
sbb
pusha
iret
pop
sbb
cmpsl
add
das
cmp
or
outsb
xor
adc
aam
jecxz
mov
les
jmp
ja
imul
xlat
mov
and
daa
jp
outsl
subl
cmpsb
outsb
xchg
jmp
dec
push
cs
movsb
push
out
scas
xchg
cmp
outsl
pop
jmp
adc
push
sub
add
daa
push
cmp
jmp
mov
push
fdivl
jmp
call
or
xchg
jns
push
sub
add
outsl
adc
icebp
arpl
loop
inc
lret
test
inc
mov
and
xor
jmp
scas
cmp
dec
data16
ljmp
or
aam
xor
jmp
mov
hlt
push
ret
sub
lret
mov
lret
inc
das
push
shll
aaa
jmp
aad
jnp
mov
push
decb
bnd
or
aas
fldenv
ljmp
jmp
popf
das
and
cmp
fsubl
inc
jo
cld
mov
mov
insl
xchg
out
popa
jne
inc
jmp
jle
xlat
add
adc
fistpl
shll
jmp
cmp
jns,pt
jmp
int3
push
pop
mov
jmp
in
xchg
cmp
push
sub
loope
jnp
inc
jb
daa
int
or
ret
sbbb
lcall
and
jl
inc
jbe
fcmovne
or
jmp
xchg
push
cmpsl
stc
out
sub
fsubrl
shlb
cmpsl
dec
sbb
sub
jl
je
mov
xor
dec
outsb
test
mov
sub
jl
rcrl
and
pusha
jmp
mov
scas
jmp
pop
sub
adcl
dec
cwtl
xor
jb
sub
adc
test
imul
sub
adc
out
stos
xchg
sbb
pop
jmp
jecxz
push
scas
scas
cmpsl
mov
push
inc
addr16
jmp
stos
insb
cmp
rcrb
lret
pop
mov
ljmp
pop
imul
sti
push
sub
leave
insb
incb
fcompl
adc
mov
and
add
orl
loope
xchg
movsb
das
les
bound
sub
fisubl
push
dec
sub
mov
inc
jmp
sub
sub
lods
mov
hlt
fimull
mov
push
or
ret
sub
xchg
sub
or
pop
push
gs
and
cmp
and
push
ds
sub
sub
xchg
cli
jmp
aas
push
in
pusha
sbb
jle
sbbb
sbb
xchg
loope
jmp
les
and
add
sti
mov
push
fwait
jmp
mov
pop
adcl
sti
mov
loopne
jmp
sbb
mov
pusha
xor
enter
repnz
ffree
mov
fnstcw
xchg
xor
sbb
js
mov
std
rorl
jmp
lahf
mov
pushf
sbb
cmpsb
sub
jmp
xor
pusha
pushf
ds
lods
loop
cmp
and
in
in
sti
jge
test
test
jae
mov
sbb
jbe
mov
adc
pop
cmpsl
adc
test
sar
xor
ret
imul
push
push
add
loopne
mov
mov
jmp
in
mov
xor
push
and
sub
sub
mov
gs
clc
xchg
popa
jmp
daa
idivb
into
mov
jns
push
pusha
nop
dec
xchg
repz
cmc
ss
or
xor
mov
sbb
mov
adc
xor
xor
push
pop
mov
dec
sbb
and
cmc
xor
jbe
dec
dec
hlt
sub
jmp
dec
data16
outsb
nop
jmp
push
and
and
jns
cltd
jmp
or
pop
mull
add
xchg
out
jmp
rorl
es
shr
jne
jns
rolb
mov
push
int
inc
xor
and
pop
popa
mov
push
jmp
clc
subb
leave
aas
cmc
sub
fwait
leave
lds
push
ret
pop
mov
ds
lods
stc
jmp
add
dec
imul
mov
dec
add
xor
ja
mov
cwtl
adc
inc
shr
std
or
xchg
xchg
hlt
xchg
inc
bound
jmp
inc
test
lods
sub
fmuls
sbb
fbld
sbb
lcall
lret
sub
jmp
test
jns
cld
insl
cmp
pop
sbb
jmp
sahf
movsl
xchg
or
test
dec
mov
les
lahf
xchg
inc
mov
mov
mov
pop
sti
jle
dec
outsb
or
shll
sub
inc
dec
rcl
fdivrp
sbb
mov
jl
clc
or
xchg
sub
cmc
in
pop
arpl
jns
push
jmp
rcrl
insb
std
adc
mov
cmp
sub
xor
and
jns
sbb
or
aas
outsb
fstps
mov
cltd
mov
mov
pop
fstpl
fsubrl
sub
es
jmp
push
cmp
pop
sub
pop
stc
push
insl
pusha
jmp
fdivrl
lods
lds
pushf
jmp
aaa
imul
flds
jmp
stos
xor
xor
mov
je
rcrl
inc
adc
xor
adc
rolb
jmp
out
cwtl
sahf
inc
outsb
add
fwait
pop
add
test
in
lcall
lods
fisubrs
dec
and
lcall
ja
push
mov
shl
loopne
mov
adc
dec
cmp
insl
les
test
jmp
and
fmull
cmp
jecxz
mov
rorb
repnz
movsb
xor
addr16
add
and
jb
dec
sbbl
test
jo
xor
jmp
pop
lahf
iret
or
jae
lods
test
call
ja
aaa
jmp
adc
addb
out
adc
or
lahf
or
mov
mov
ljmp
lock
cmpsl
mov
ja
pop
arpl
lret
fsubrl
xchg
pop
jmp
adc
xor
test
pop
cmp
inc
outsl
inc
jae
in
xchg
notl
jmp
mov
mov
jp
inc
mov
sti
jo
pop
stc
daa
lods
push
mov
cltd
mov
push
xlat
leave
add
adc
jle
fsubrp
dec
and
lea
imul
std
xor
daa
ljmp
or
mov
movlps
sub
in
fwait
ja
jle
fld
mov
iret
lret
shrl
dec
push
mov
jmp
add
or
in
adc
jp
add
xor
cmc
dec
sub
addb
mov
hlt
xchg
std
push
dec
sbb
cld
and
dec
stos
das
insl
std
cld
cmc
xchg
in
cld
jnp
xchg
out
cld
mov
dec
xchg
cmp
jae
cld
and
dec
icebp
outsl
cmc
hlt
stc
std
jl
add
cld
mov
xchg
ja
ja
inc
test
addr16
or
push
lret
rcr
sub
shll
pop
or
fcmovnu
xchg
lret
sahf
lret
jg
sarl
and
inc
and
inc
xchg
hlt
push
subb
in
dec
jl
cmp
push
enter
pop
xor
dec
adc
mov
shl
cmp
outsb
dec
jne
jne
mov
lock
inc
jo
add
adcl
jnp
pop
mov
out
fistpll
rorb
jl
add
jo
dec
aam
sub
sub
lret
xchg
or
addr16
insl
rorb
ss
dec
pop
lds
mov
ljmp
xchg
jbe
xchg
add
lods
orb
mov
dec
daa
adc
mov
inc
lds
add
inc
sub
pop
lods
adc
dec
imul
inc
cmpsl
push
jge
cmp
sbb
std
stc
out
mov
jl
jmp
jne
xor
add
cmc
repz
aad
xchg
add
repnz
add
bound
cmp
cmp
add
sub
pop
or
lret
sub
jne
insb
pop
lods
fs
xor
das
sti
outsl
outsb
hlt
add
cmc
push
sub
insb
jo
xor
sub
mov
cli
sub
scas
add
aaa
scas
testl
and
adc
pop
pop
in
add
int
sub
out
fsubrs
dec
int3
inc
ror
lds
insb
lods
ds
int
cmp
sub
lds
in
repz
push
lret
out
jbe
mov
sub
stos
push
mov
sbb
inc
dec
scas
add
inc
xor
dec
add
cli
push
sub
jp
jnp
push
imul
shrl
mov
les
sbb
jnp
les
mov
push
mov
mov
pushf
mov
inc
test
add
dec
les
add
and
fnstcw
gs
jne
jnp
push
repz
les
or
pop
add
sbbl
fs
jnp
pop
mov
add
sti
enter
pop
cmpl
cvtps2pd
push
fcompl
sbb
or
sarl
ljmp
cmc
jmp
jnp
sub
jle
es
mov
cwtl
lods
adc
push
xor
xor
pop
js
sub
movsl
mov
add
add
test
or
lret
xor
cmp
sahf
das
stos
sbb
jmp
and
xchg
imul
sub
rorl
in
nop
add
ret
jmp
js
inc
cli
divb
imul
and
mov
mov
pop
cltd
aam
inc
cli
jl
inc
mov
int3
mov
daa
bound
jmp
and
dec
outsb
mov
fwait
ds
jmp
lret
xor
inc
push
icebp
add
and
jmp
ror
mov
cmp
jmp
rcrb
out
inc
add
jmp
mov
pusha
faddl
js
adc
cmp
mov
and
or
mov
ds
fsubl
push
jmp
jl
push
cs
int
ret
out
and
pop
jmp
dec
xor
ja
or
push
loop
outsb
xor
repnz
and
cmp
jmp
pop
push
xorl
add
leave
mov
mov
and
inc
in
jge
arpl
mov
sub
sbbb
aaa
pop
jmp
sub
scas
insl
jmp
mov
test
cltd
push
xor
mov
outsb
iret
js
mov
enter
jg
jmp
push
mov
jo
inc
inc
mov
call
subb
dec
ds
sbb
scas
push
xlat
stos
sub
notb
sub
jb
insb
push
or
mov
jmp
cmc
inc
mull
es
lret
jae
fisubs
outsb
jnp
xchg
xor
adc
cwtl
mov
inc
test
out
xchg
por
enter
pop
aaa
and
jmp
or
mov
jmp
push
adc
and
add
cmpsb
in
adc
xor
out
test
movl
mov
dec
or
jbe
mov
das
sbb
ja
mov
shlb
cli
divl
dec
sti
jae
lock
mov
call
add
or
mov
addr16
ret
fimull
icebp
mov
xor
int
add
arpl
fldl
jbe
shl
lahf
jmp
jno
push
rcr
push
jb
test
xlat
inc
aas
jmp
pop
push
mov
bsf
leave
xor
aam
sahf
mov
mov
pop
pusha
stos
sub
ds
bound
sti
adc
mov
pop
pop
and
iret
jmp
ficoml
mov
xor
jne
and
and
or
lret
add
pop
pop
push
jg
jnp
add
outsb
push
sub
js
jbe
push
ja
mov
lds
movl
setl
jns
and
in
jmp
enter
leave
sbb
cmp
sbb
ljmp
into
pusha
dec
cmp
int
jo
lea
sub
inc
cld
and
xchg
cs
outsb
mov
inc
bound
lods
xchg
fisubrl
mov
sub
xchg
in
xor
xor
jb
inc
jmp
cmpsb
aad
cld
andl
jmp
and
push
jmp
subb
cvttps2pi
in
out
lods
fs
push
inc
out
jns
sub
test
sbb
dec
jmp
stc
add
xor
xor
mov
dec
jmp
xor
jno
jmp
aam
call
lods
cli
pop
pusha
xor
cltd
and
lock
jb
lret
lcall
jmp
jne
orb
inc
xor
in
xor
aas
cmp
test
ja
mov
jl
adc
push
js
packuswb
scas
pop
inc
dec
outsl
mov
movsl
jmp
add
push
mov
ret
add
push
fdivrl
mov
decl
sti
jmp
adc
loope
nop
push
dec
sub
dec
and
orl
lods
jmp
dec
sti
pop
sbb
enter
jns
stc
insl
fisubrs
dec
cmp
jmp
mov
push
and
add
nop
jmp
cli
mov
xor
dec
jae
jp
ljmp
and
dec
mov
push
in
fcoml
or
jmp
sahf
and
xor
aam
scas
pop
add
inc
or
lods
stos
jg
inc
jb
aad
jns
jmp
popa
aam
mov
inc
stos
jmp
inc
dec
xor
orl
or
dec
adc
ljmp
out
xchg
and
pop
test
aas
jmp
das
hlt
jae
mov
pusha
mov
push
mov
or
scas
bound
out
sub
jns
jg
ss
xlat
das
pop
push
test
jmp
sbb
xchg
mov
pop
hlt
fiaddl
jmp
stos
aaa
fs
adc
pop
cmpsl
cltd
frstor
inc
dec
sub
jmp
inc
jnp
cmpb
scas
imul
or
sub
pop
push
sbb
adc
inc
mov
stos
xchg
cmp
mov
mov
and
dec
mov
int3
je
cmc
adc
inc
loope
cltd
mov
iret
inc
jecxz
inc
adc
pop
ss
push
jmp
cmp
icebp
sahf
lods
pop
imul
in
xchg
in
pop
rcll
mov
fists
sbb
cmp
sub
adc
std
shrb
xchg
jecxz
jnp
test
sahf
mov
inc
aam
mov
idivb
xchg
nop
push
add
mov
jae
ljmp
or
dec
jge
jmp
jnp
test
push
sub
fwait
lock
mov
jmp
or
gs
mov
sbb
sbb
jg
movsb
lcall
repnz
stc
mov
int
mov
rol
cmp
xchg
sub
mov
xor
jmp
xchg
add
lret
int
jmp
mov
test
cltd
loopne
push
inc
sti
or
int3
jmp
pusha
rolb
fdivs
lds
lahf
lret
lock
jmp
iret
shl
xor
jno
pushf
pop
lods
jo
fldl
lret
jg
into
xor
ficoml
jno
push
lea
fsqrt
pusha
imul
arpl
mov
mov
adc
dec
xchg
mov
jmp
scas
test
xor
or
sbb
push
mov
jp
inc
icebp
out
adcl
add
cmpsl
xor
push
pop
cltd
je
cmpl
inc
ja
leave
std
jmp
mov
jmp
je
cmp
in
fsubrp
ret
fs
or
mov
lea
cli
and
pop
jmp
lods
push
jl
cmpsb
cmp
mov
mov
sub
xchg
test
adc
dec
xlat
outsb
mov
lock
mov
ja
push
inc
add
jmp
sub
movsl
xchg
out
xchg
std
xor
fistps
sub
dec
scas
xchg
mull
jmp
inc
mov
test
push
inc
out
imul
mov
cmpsl
mov
push
outsl
sbb
daa
dec
sub
dec
pop
cmp
and
sub
add
mov
dec
fidivrs
in
jmp
add
popa
shl
or
stc
das
push
sbb
fnstcw
lds
jmp
hlt
pop
les
dec
pop
rorb
jmp
jno
sub
jmp
push
mov
outsb
add
fldt
ret
jmp
xchg
add
das
es
xchg
pop
mov
out
jmp
pop
xor
rep
rclb
jge
push
arpl
jmp
popa
dec
cs
negb
pop
mov
ret
mov
jb
gs
jmp
mov
xchg
adc
test
aas
repnz
xchg
inc
mov
dec
lock
mov
pop
lret
jge
inc
subl
jmp
in
push
in
outsb
add
dec
push
sub
in
aas
add
jmp
adc
push
in
js
mov
push
ss
mov
add
stos
pop
lock
arpl
out
movsb
jmp
in
sahf
or
shr
popa
daa
cwtl
mov
je
pop
jmp
loop
mov
jmp
lret
shrb
je
mov
pop
xor
or
jmp
int
dec
fsubs
loopne
repnz
imul
and
and
dec
in
pop
ss
push
pop
fistl
insb
dec
jmp
ja
int
out
aaa
or
xor
int3
into
add
mov
jge
pop
sbb
jmp
daa
into
imul
test
jmp
stc
add
in
jmp
cli
mov
add
ficoml
mov
test
jmp
push
xor
call
leave
das
ja
movsb
aaa
jnp
setl
and
xchg
xor
in
pop
sarl
dec
jl
aam
inc
mov
dec
xor
mov
test
outsb
mov
push
sub
push
mov
in
sub
sbb
xlat
push
das
adc
pop
cmp
insl
jp
rcll
jmp
xchg
ret
test
mov
adc
jmp
ret
push
fadds
adc
out
iret
jmp
mov
shll
and
push
mov
stc
jmp
pop
or
or
out
call
ss
sub
jns
ja
cli
dec
jmp
lea
lods
mov
and
pop
sub
jnp
mov
iret
jmp
mov
sti
call
imulb
pop
pop
into
xlat
pop
jmp
leave
fadd
je
shrl
insl
test
fsubrl
stos
std
jp
adc
in
inc
aam
xor
pop
lods
inc
dec
dec
xchg
and
stc
lea
and
outsl
lods
cmp
pop
adc
iret
jmp
xor
mov
push
and
outsb
call
stos
push
mov
cmpsb
ljmp
js
ja
mov
lcall
jmp
daa
push
int
aaa
jmp
xlat
hlt
popf
sub
cli
cmpsb
icebp
ret
out
test
stos
dec
pop
sub
dec
push
mov
roll
cli
clc
cmc
sbb
xchg
sub
imul
jmp
adc
xor
pop
mov
imul
ret
xchg
jmp
mov
inc
adc
cli
and
push
jmp
inc
divl
fmul
and
insb
push
dec
lods
andb
fs
iret
mov
repz
xchg
mov
and
inc
jbe
loopne
fldpi
cmp
outsb
dec
mov
fsubrp
push
imul
jno
cltd
lock
jmp
in
dec
flds
leave
jbe
pop
test
sbb
adc
xchg
jmp
mov
or
mov
stos
sub
fsubs
jmp
xchg
int3
mov
enter
and
les
js
cmpsl
test
sbb
pop
lods
push
pop
cmp
mov
cmp
dec
shll
sub
stos
movsb
scas
imul
sti
std
iret
es
movsb
lods
cli
dec
and
shl
sbb
mov
or
adc
jmp
xchg
shrl
jmp
cld
and
mov
int3
into
jecxz
mov
fisubrs
mov
jo
sub
cmc
mov
call
push
lods
jns
lret
pop
mov
sub
into
pop
xchg
insl
jmp
mov
test
mov
jmp
dec
mov
cwtl
pop
inc
lods
jmp
dec
sarb
jmp
and
lods
decl
lahf
fstp
jae
mov
jns
or
into
mov
pop
push
jbe
ds
pop
shl
dec
mov
mov
fcomi
mov
sub
and
inc
mov
or
fsubrs
repnz
popf
inc
sbb
or
push
add
ljmp
push
jmp
pusha
repnz
cmpsb
jmp
inc
rclb
das
lock
sub
or
sbb
cmpsl
popa
repnz
insl
sbb
cmp
push
and
inc
sbb
jno
xchg
push
aam
and
inc
mov
push
sbb
jne
cltd
fs
dec
xchg
aaa
push
fwait
lods
into
test
int3
pop
xchg
jmp
mov
sbb
or
mov
sbb
jge
lock
call
jne
sbb
idivb
out
jae
jmp
push
push
test
out
mov
into
dec
iret
dec
faddp
and
sub
sti
mov
pusha
jnp
das
scas
iret
idivb
add
sbb
jp
pop
sbb
hlt
sbb
sub
sbbb
cmpsb
inc
rolb
inc
jmp
or
or
dec
lods
jmp
xchg
push
mov
cmp
jle
jne
out
jae
arpl
pop
jmp
mov
push
push
or
adc
sub
push
push
jl
jp
push
test
lods
xchg
into
sbb
jb
sbb
or
jo
push
add
inc
jmp
aad
scas
movsb
cmp
lods
pusha
sbb
psubusb
push
shlb
addb
pop
sub
fs
sbb
scas
add
cmp
xchg
stos
sub
lods
cld
adc
mov
shl
test
xor
sub
jmp
jnp
icebp
ja
sbb
jb
pushf
dec
jmp
mov
add
jmp
add
inc
jmp
adc
jbe
cli
xchg
lods
mov
push
mov
mov
test
stos
sti
fmulp
scas
pop
xor
sub
jp
jecxz
add
fs
cltd
repz
adc
sahf
and
add
push
ljmp
das
adc
xchg
test
sti
add
and
fldt
inc
out
dec
pop
lret
mov
fisubl
in
mov
sbb
jmp
test
sub
repnz
mov
lds
cltd
fimuls
jecxz
dec
lret
sbb
rol
push
jmp
pop
lea
ret
out
jge
pop
enter
jns
inc
aaa
xchg
call
sub
cs
rcrl
pop
add
mov
lret
inc
and
jae
testb
xor
loope
mov
sub
inc
xchg
js
movsb
push
jmp
shlb
lahf
std
aas
jmp
mov
cmp
mov
mov
or
push
pop
inc
xor
cmp
orb
xchg
dec
incb
xor
sbb
outsb
inc
int3
mov
pop
dec
push
jb
insl
out
jmp
inc
pop
imul
out
stos
popf
or
xor
jmp
loopne
fdivrl
testb
imul
fs
or
cmp
jle
stos
sbb
push
push
decb
movb
push
add
aaa
outsb
adc
jmp
popa
loop
in
pusha
pop
call
mov
mov
add
repnz
cli
jbe
sub
xor
cmp
xor
test
sub
shlb
inc
fadd
pop
and
dec
stc
jmp
cli
scas
push
loope
bound
cwtl
repz
in
sub
in
cmp
aad
jmp
shrl
push
dec
or
mov
jmp
stos
add
pop
int3
shrb
mov
pusha
adc
mov
mov
sub
cmp
icebp
lods
xchg
mov
outsl
jne
and
test
adc
and
push
leave
subb
sub
test
mov
jl
push
repz
mov
gs
inc
imul
push
adc
mov
rcrl
and
push
cmp
mov
bound
xchg
push
popa
jns
sbb
add
sbb
in
jecxz
jmp
mov
sub
sbb
xor
jo
insl
sub
adc
xchg
mov
mov
and
rcll
imul
mov
enter
in
or
sub
inc
cmp
loop
imul
sti
pop
pop
imul
adc
sbb
mov
ret
sub
cmpb
lds
cmp
sar
adc
in
xchg
pop
or
movsb
lret
add
leave
xor
pusha
sub
or
outsb
xchg
aas
loopne
loopne
mov
loop
mov
int
sbb
shll
rorb
testl
dec
lret
mov
cmovb
xor
jmp
mov
cmp
jo
ds
lds
addr16
mov
scas
adc
jae
imul
in
shll
scas
pop
and
xchg
in
or
aas
test
pop
jmp
call
fcoms
sbbb
daa
leave
jmp
or
out
inc
pop
sbb
iret
pop
mov
arpl
gs
divl
dec
adc
jmp
out
and
pop
lods
xchg
sbb
test
jmp
xchg
jns
and
das
repz
in
fcompl
lds
push
test
jge
jmp
pop
cmpsb
fildll
pop
cmp
int
shrl
fistpl
mov
mov
loopne
and
scas
xlat
divb
cwtl
shll
jmp
mov
in
pop
jmp
mov
fstl
mov
sbb
cmc
mov
sub
sbb
cmpsb
and
dec
loop
xchg
pushf
daa
jmp
fld
add
jmp
and
jno
or
jge
pop
jae
hlt
popa
xchg
cmp
fiadds
shlb
pop
jl
je
sbb
sahf
fisttpl
std
jo
jmp
jmp
popf
jmp
and
cmc
aaa
jbe
sbb
and
test
mov
jb
mov
inc
xchg
mov
sbb
xchg
or
aaa
out
mov
in
das
scas
lcall
jle
mov
and
pop
jns
fucomip
inc
sbb
jmp
into
cli
cmc
mov
in
cli
scas
push
aas
sbb
mov
stc
mov
or
sbb
push
and
repnz
mov
sub
or
add
jmp
lcall
jmp
enter
test
test
push
sbb
mov
rol
mov
sbb
and
out
aaa
dec
inc
cmp
jmp
fucomi
aad
mov
int3
jmp
stc
push
xor
into
dec
gs
pop
arpl
mov
jmp
fsubr
paddusw
cld
lds
adc
dec
inc
pop
adc
sbb
and
addr16
mov
lods
aas
cmp
scas
ret
or
je
jle
in
mov
inc
outsl
mov
inc
rol
daa
jmp
repz
test
or
js
add
push
cmp
fnstenv
loope
lret
mov
incl
sti
and
push
lods
lods
push
call
jb
jmp
cmp
push
jmp
test
addr16
dec
cwtd
scas
shrl
sbb
lods
jecxz
jmp
ficoml
call
lods
jmp
or
nop
pop
repz
fadds
sbb
dec
shlb
sub
in
or
clc
and
jbe
int
jae
mov
cltd
fsubrs
das
jp
call
insl
lods
cld
jb
adc
dec
ds
mov
push
or
out
and
adc
ss
and
cmpsb
int
mov
leave
jb,pn
movl
jp
fidivrl
pop
inc
jmp
cmpsb
xor
mov
rorl
mov
mov
push
enter
inc
jmp
cli
movsl
adcl
shll
jae
pop
lods
xchg
mov
inc
add
jecxz
push
lods
add
test
push
mov
mov
iret
call
jmp
loope
jo
pop
fcmovne
jmp
frstor
leave
xchg
dec
pop
stos
test
cmp
and
cli
mov
jmp
ljmp
xor
shll
aad
add
add
xchg
add
in
movsb
fisubrs
lods
push
push
cmp
cmpsb
mov
mov
pop
and
or
lea
popf
addr16
sahf
jmp
jae
mov
lret
cmp
cmp
out
inc
repz
cmpsl
popa
or
int3
jmp
push
jecxz
add
cmc
jmp
cmp
movsl
jmp
jo
xchg
aad
xchg
adc
or
add
inc
test
imul
jmp
mov
push
lods
pop
sbb
subl
cld
sbb
imul
add
es
mov
mov
xchg
mov
xor
mov
jmp
hlt
movsb
dec
mov
daa
cmp
jge
push
loopne
sbb
adc
movsb
push
inc
sub
cmpsb
imul
sub
add
icebp
shlb
sbbb
enter
jmp
int
adc
decl
mov
jge
sahf
ljmp
mov
jmp
sub
push
in
push
xchg
xchg
inc
or
lds
and
lods
jmp
imul
jmp
das
xchg
je
icebp
add
scas
and
aam
dec
rclb
jmp
push
adc
clc
dec
int
jmp
xor
insl
jbe
hlt
inc
jb
pop
xchg
ljmp
lcall
outsl
loop
jno
aam
cmpsb
shlb
sub
aas
in
adc
and
xchg
lock
add
loope
add
jmp
repz
mov
xchg
jb
cmpsl
mov
aad
leave
jmp
jns
imul
enter
dec
xchg
xor
mov
xor
test
mov
out
lret
lahf
repnz
jmp
mov
dec
add
dec
xor
ja
fs
push
inc
xlat
pop
iret
jmp
cmp
inc
jmp
cld
lock
repz
shr
ret
xor
xor
arpl
cmp
sub
jmp
ljmp
scas
pop
sti
xchg
and
imul
xor
jae
ljmp
jb
jg
mov
sbb
cltd
inc
fimull
lret
dec
lret
cmpsl
in
mov
test
push
mov
fucomip
pusha
ret
push
fisubrs
pop
call
dec
jl
out
pop
inc
inc
mov
lods
cmc
jg
xor
shrb
adc
rcrl
adc
gs
ja
idivb
mov
sub
ljmp
and
rclb
or
cli
mov
aad
pop
push
in
out
jmp
ret
xor
jmp
lods
xchg
xor
jmp
icebp
sub
cli
sub
push
mov
and
push
jmp
movsl
mov
testl
and
lahf
and
jmp
mov
mov
or
cmpsl
push
js,pn
testb
dec
jmp
pop
insl
aad
and
fwait
movsl
daa
loop
std
ret
jmp
rcl
bound
mov
lods
lea
pop
xorb
jmp
bound
test
das
pop
push
lret
mov
cmc
xor
orl
add
or
ss
push
out
dec
mov
es
scas
scas
mov
and
inc
shll
mov
lods
jmp
mov
sub
xor
sti
jmp
add
xchg
jge
icebp
or
jmp
lret
mov
cs
inc
adc
sub
repnz
pop
sbb
add
jmp
pop
mov
add
pop
stos
imul
sbb
sbb
dec
scas
dec
insb
push
lret
frstor
mov
adc
xchg
jmp
arpl
xchg
imul
sbb
inc
dec
notl
test
negb
bnd
popf
sbb
subb
sahf
sub
jmp
orb
pop
jb,pn
cmp
fwait
pop
insb
pop
cmp
shll
ret
fldt
test
scas
pop
mov
adc
mov
fwait
sub
xor
jmp
add
in
sub
cltd
jp
push
xchg
push
inc
fcmovu
xchg
roll
jae
xchg
and
sub
cmp
int
decl
jmp
sub
es
jmp
aaa
jnp
sarl
pop
enter
imul
mov
mov
sub
mov
xor
pop
loopne
jo
dec
shr
add
jp
pop
jmp
and
pop
fs
mov
jmp
or
jns
sbb
lods
jp
add
cmp
or
push
lret
inc
xor
pop
adc
mov
pop
jmp
lret
xlat
dec
push
shlb
jmp
call
and
pop
xor
inc
outsb
stc
hlt
or
lock
sahf
sub
sbb
cmp
xchg
pop
nop
or
enter
jae
xchg
push
stc
cmp
dec
fidivl
rcr
xlat
jg
les
dec
fs
or
pop
jmp
jmp
adc
mov
pusha
xchg
jmp
je
ficoml
adc
lods
dec
mov
faddl
stos
push
inc
xchg
outsb
sbb
cld
int
orb
inc
test
sbb
daa
stc
mov
or
push
fs
jne
pop
test
jmp
fdivrl
popa
lods
push
int
imul
and
mov
leave
iret
daa
shr
and
jg
push
push
jns
icebp
or
push
pop
scas
xchg
popf
repnz
hlt
jnp
pop
sub
add
jmp
test
ds
test
sub
aad
sahf
inc
lods
mov
mov
jmp
mov
or
ror
push
cmp
repz
lret
mov
ret
jmp
in
faddl
addr16
adc
xor
fwait
jmp
mov
clc
jmp
pop
pushf
jp
cmc
mov
imull
jge
nop
jae
outsb
adc
adc
mov
mov
enter
push
jmp
stos
std
dec
roll
adc
sub
mov
mov
push
lds
pop
inc
out
sub
jmp
adc
out
cs
jecxz
adc
testl
jmp
aaa
push
rcrl
push
jmp
stc
hlt
mov
jmp
inc
mov
addr16
mov
lahf
and
cld
xor
or
movsl
sbb
xor
sbb
push
jmp
lds
adc
mov
jmp
mov
sbb
pop
fcoml
or
int
and
pop
add
aaa
push
jmp
xchg
rcrb
jmp
shlb
sub
or
call
fsubrp
cmp
cmp
pop
jmp
adc
fdivrs
sbb
out
add
mov
sub
rorl
adc
jp
mov
pop
xlat
or
pop
cmpsb
lods
cwtl
cmp
sti
outsb
ucomiss
test
jb
out
jmp
icebp
inc
aas
stos
cmc
lea
jmp
xchg
cltd
pop
mov
jmp
js
or
in
xchg
fs
sub
shl
in
sbb
mov
cmpsl
and
and
out
adc
aad
jmp
pcmpgtb
scas
adc
cmp
fcompl
jmp
push
addr16
sub
loop
jno
sbb
call
pop
jmp
mov
scas
mov
push
in
cmp
add
pushf
xchg
inc
icebp
cmp
jmp
push
xchg
aaa
in
push
mov
dec
lods
imull
sub
test
sbb
add
xchg
scas
jmp
xor
movsl
or
push
sub
ljmp
rorl
aad
push
jmp
jnp
cli
push
out
jmp
adc
js
imul
jmp
cmpsb
sti
fidivs
and
jmp
add
stos
pop
in
cmovns
xor
cmpsl
jge
mov
jns
fwait
xchg
das
mov
adc
xor
scas
pop
lret
add
in
sarb
sahf
lods
pop
lds
lahf
mov
adc
mov
xchg
ficoml
add
pusha
xorl
jl
jne
and
and
cmp
fimull
jb
jmp
push
arpl
fadd
pushf
dec
jmp
mov
frstor
jmp
imul
dec
jmp
sub
jmp
push
mov
jns
idiv
jg
jo
aaa
jmp
gs
ss
jmp
cwtl
dec
dec
ret
mov
mov
adc
pop
jmp
fildl
stos
mov
sub
inc
xchg
clc
xchg
push
push
sub
ljmp
push
leave
pop
pop
adc
jmp
inc
and
dec
int3
jne
or
inc
gs
mov
add
sarb
mov
jmp
fsubrl
shr
dec
into
addl
dec
push
cmp
sbb
jmp
test
pop
sub
or
push
sub
sahf
mov
cmp
lods
fwait
jg
jbe
adcl
test
pop
outsl
sub
clc
cmp
dec
out
sub
and
jmp
into
sub
stos
dec
inc
or
mov
dec
lods
lea
and
lcall
mov
stos
or
rcrl
mov
mov
jmp
outsl
scas
das
push
mov
and
lret
arpl
inc
jg
insl
int3
leave
lcall
jbe
int
daa
stos
jmp
into
adc
fidivl
jmp
and
push
fsubs
jb
test
das
push
imul
testl
mov
int
pop
aas
mov
adc
jno
insb
or
movsl
imul
push
loopne
test
push
lods
add
dec
repz
ljmp
pop
scas
mov
pop
jmp
in
mov
mov
outsl
pop
cmpl
jmp
out
and
daa
lods
mov
sbb
mov
adc
loope
dec
imul
push
mov
push
bound
pop
sbb
push
jp
jns
les
and
sbb
xchg
jmp
mov
jae
jns
cmp
sub
repnz
stc
in
or
or
add
lods
mov
jp
sar
sti
andb
mov
setge
repz
outsl
mov
pop
repnz
cmp
rcrb
and
ret
leave
aad
mov
sbb
jmp
and
int
jg
add
dec
push
sub
jmp
mov
jmp
jmp
rorl
in
cltd
pop
mov
negl
jnp
dec
and
call
push
jmp
loop
mov
fidivrs
sub
ret
aaa
dec
and
jmp
push
sbb
jl
in
outsb
das
add
iret
jmp
sbb
pop
sub
dec
mov
push
jle
add
pop
aaa
jmp
push
inc
adc
mov
mov
clc
popa
bound
lret
sub
and
dec
push
push
pop
pop
push
movsl
loop
sbb
pop
gs
pushl
jmp
inc
movsb
rcrl
or
pop
mov
mov
jmp
lcall
jmp
jnp
cmc
test
popl
into
lods
nop
cli
inc
lret
jmp
mov
mov
add
inc
mov
xlat
sti
jmp
repz
pop
xchg
jo
jmp
mov
sbb
int
iret
sbb
out
sbb
jmp
clc
fstl
dec
pop
mov
xchg
testb
dec
fisttps
add
jns
lea
jmp
pop
out
enter
jmp
push
dec
cld
or
inc
lea
sbb
jmp
out
popf
in
lods
cmp
movsb
adc
fcomip
mov
add
addr16
xlat
sbb
jmp
mov
out
jmp
nop
mov
mov
cmpb
sub
inc
loopne
adc
das
xlat
xchg
or
lret
jmp
popa
rcl
les
or
cmp
mov
in
clc
mov
mov
mov
jmp
xchg
ret
fyl2x
and
jns
inc
loop
or
cli
imull
adc
popf
xlat
jae
jl
inc
push
ret
aad
das
sub
aas
sbb
and
or
arpl
sub
jno
jmp
inc
lcall
popa
pop
stos
lods
not
pop
mov
jmp
lret
sub
jmp
pop
fs
es
fldpi
movsb
xor
adc
arpl
pop
dec
repz
push
nop
xchg
sub
cmp
in
sbb
push
xor
cmp
jb
ud0
sub
mov
jmp
lret
fdivrs
repz
mov
jne
and
lret
push
aas
jg
mov
lods
in
out
cld
orl
inc
jb
sbb
pop
dec
data16
fs
and
push
shr
cmp
rolb
lods
fdivl
or
popf
enter
sarb
mov
cli
stc
jle
jns
jmp
ret
ret
cmpb
rorl
mov
cmpsb
enter
pop
and
lahf
push
sub
roll
dec
lea
inc
fcompl
mov
call
repnz
jmp
int
xor
adc
pop
sbb
inc
sbb
jmp
fnstcw
dec
add
pop
aam
jp
out
stc
dec
jmp
jmp
push
shr
sbb
push
jbe
pop
jmp
mov
inc
push
xor
jmp
adc
and
scas
jmp
and
add
fsubrs
adc
hlt
jmp
test
sbb
xchg
or
ja
xchg
cwtl
xor
jl
test
into
cli
jmp
mov
push
popf
sub
lods
test
jnp
pop
shrl
lods
out
xor
jmp
mov
fisubrs
int
cmp
jmp
sub
dec
dec
notl
cmp
inc
fisubs
push
add
cmpsl
shl
xlat
outsb
inc
iret
clc
pop
and
out
or
push
jmp
repz
lahf
fisubrl
es
aaa
mov
jmp
jmp
popl
mov
lods
sub
call
mov
jmp
mov
xchg
mov
pop
mov
and
lods
loope
ss
wrmsr
or
into
js
add
mov
inc
ficompl
out
je
and
scas
adc
insb
sti
push
dec
lahf
imull
cld
dec
pop
mov
pop
xchg
jmp
cs
ljmp
in
adc
je
popf
xchg
jmp
xchg
data16
cmp
or
and
jmp
xchg
mov
mov
cmp
xor
sarb
mov
fisubrs
repz
sbb
das
xor
rorb
push
jmp
lds
mov
cmp
pop
in
mov
or
das
push
imul
jmp
fstps
pop
lds
ficoml
lods
enter
add
cmp
mov
lods
push
sbb
or
jmp
cli
sbb
jns
insl
jg
pop
es
daa
push
ret
sub
inc
sbb
and
xchg
jmp
lods
andl
xor
pop
sbb
dec
sub
mov
jmp
cmc
je
gs
mov
rcll
sti
adcb
xor
mov
inc
dec
jmp
stos
mov
ds
scas
enter
adc
jmp
mov
call
jl
out
push
xor
cmp
fs
jmp
icebp
sub
jmp
mov
pushf
in
sub
sbb
pop
loop
outsb
enter
lods
adc
jle
fs
repnz
insl
jmp
aaa
ljmp
and
add
fs
ds
lods
adc
xchg
dec
lret
cli
ljmp
or
push
add
aaa
cld
jmp
pop
ret
pop
and
jmp
je
pop
pop
fidivrl
stc
xchg
jmp
pusha
cvttps2pi
adc
idivb
ljmp
jmp
stos
sbb
dec
xlat
or
adc
pop
outsb
movsb
in
push
pop
jmp
push
and
dec
pusha
dec
or
dec
cmpsb
cmp
cmp
mov
push
add
nop
jmp
test
pop
mov
adcb
lock
mov
in
jmp
addr16
dec
jb
inc
jo
sbb
repz
pop
and
xor
xor
repnz
loop
std
xchg
mov
fwait
into
aam
jbe
inc
sbb
and
cltd
jmp
mov
mov
pop
pop
jmp
cmp
andb
mov
push
adc
jmp
sbb
xor
mov
mov
pop
out
mov
shr
popa
leave
test
jnp
ljmp
sbbb
cmpsb
shr
mov
dec
mov
notl
jecxz
push
dec
bound
es
movsb
pop
jmp
sub
jb
sub
out
xor
bound
repz
sub
pop
fwait
xchg
sub
jmp
cmpsl
imul
jmp
jb
adc
jle
jmp
and
sub
inc
fbstp
adc
testb
insb
jecxz
bsr
in
outsb
lret
stos
or
mov
mov
sbb
jmp
fsubl
pusha
jo
je
jmp
shll
xchg
pop
cmc
daa
bound
out
adc
fstpt
jmp
addr16
adc
fdivrs
inc
xchg
or
sub
fcomi
mov
add
mov
pop
imul
jecxz
stos
and
data16
loop
stc
dec
jmp
pusha
cmp
xchg
test
cmp
lret
mov
jmp
xlat
ss
jge
mov
cs
lret
and
push
mov
adc
inc
outsb
ret
mov
xorb
add
lods
jns
pusha
jnp
jmp
or
inc
movsb
addr16
adc
mov
jne
test
ss
xor
fs
fsubr
mov
notl
popf
lea
jmp
pop
xor
stc
aas
dec
cmpsb
lods
xchg
inc
jge
jg
pusha
fisubs
mov
mov
or
jbe
mov
pop
inc
inc
stos
test
mov
scas
jp
gs
das
push
lods
inc
mov
orl
xlat
stos
jae
and
jmp
fbstp
xchg
jnp
jmp
push
mov
inc
sti
cltd
arpl
mov
sub
jmp
dec
or
cli
xchg
sahf
sub
inc
jg
out
fcomi
clc
xchg
pop
pop
adc
mov
lret
stos
push
sub
mov
mov
pusha
cmpsb
jmp
arpl
inc
sub
pop
into
outsb
add
fldt
push
adc
cmpsl
cmp
cltd
mov
insl
addr16
mov
jmp
pushf
das
lret
outsb
mov
xchg
jecxz
jmp
jo
push
sub
mov
pop
jnp
lds
repz
cmp
out
repz
mov
ret
lods
sub
dec
add
jnp
pusha
push
sbb
xchg
cmp
stc
jmp
inc
aas
ljmp
jl
jae
cmp
js
fmuls
sub
fimull
lcall
sub
jmp
jne
cli
xor
push
sub
bound
cmc
adc
mov
sarl
pop
imul
push
and
cmpsl
jae
lods
sbb
stc
push
sub
and
or
push
inc
shr
pop
mov
jo
sub
lods
stos
push
adc
and
repz
add
pop
outsb
xor
sti
mov
jmp
adc
xchg
mov
inc
in
mov
xchg
in
jmp
rorb
aam
jmp
jno
pop
push
pop
pop
mov
cmp
jmp
shrb
mov
mov
sub
nop
jmp
or
test
imul
faddl
sbb
xor
mov
jo
or
and
push
es
arpl
jmp
mov
push
test
ds
add
in
jmp
and
fs
xchg
xchg
dec
jmp
loope
aas
mov
mov
movsl
adc
push
mov
jl
mov
add
pop
and
sbb
fstps
jg
cvtdq2ps
cmp
insb
push
ret
jmp
add
sbb
in
jne
iret
and
fidivl
cs
inc
mov
arpl
repnz
sti
aaa
cli
insb
cmp
mov
shrl
add
insb
xchg
dec
pop
jmp
dec
popa
stos
out
int3
scas
jb
fsubrp
and
jmp
into
xchg
fdivs
mov
mov
enter
negl
jge
jmp
stos
call
pop
jmp
sbbb
jmp
arpl
mov
adcb
xor
xor
or
enter
mov
je
jnp
jle
jmp
xor
push
lret
jp
cmp
inc
and
adc
ja
jmp
stos
sub
mov
test
push
jmp
lea
mov
add
jnp
jmp
aaa
out
pop
push
ret
pop
jmp
mov
push
cmp
pushf
jp
in
clc
outsl
push
jg
adc
enter
xor
add
jmp
xor
ret
jmp
xchg
xchg
nop
adc
inc
jno
in
ret
shr
push
imul
push
dec
dec
sbb
clc
sub
jmp
inc
aad
jecxz
sbb
ret
mov
pusha
pop
or
pop
in
jmp
sub
jb
insb
pop
inc
mov
push
cwtl
push
ret
mov
data16
pop
sbb
es
xchg
or
sub
jmp
adc
jl
out
mov
idivl
mov
lahf
jne
bound
mov
int
mov
and
cltd
rorl
and
dec
incl
pop
cmp
mov
outsl
jns
jae
xchg
jmp
imul
add
outsb
sub
sbb
stos
xchg
jmp
cmp
and
push
inc
xchg
ljmp
orl
jmp
add
out
add
test
cmp
data16
xchg
and
sub
out
bound
mull
lret
push
or
push
pop
adc
stos
xlat
mov
mov
push
push
repz
dec
sub
push
jl
das
repz
jmp
cmpb
and
ficomps
mov
xchg
jmp
das
sub
cs
sub
mov
jmp
mov
push
sub
jmp
ret
repnz
idivb
cmp
jmp
loope
out
pop
adc
sub
cmp
jmp
rcll
lods
outsb
dec
sub
dec
sbb
mov
and
adc
xor
daa
enter
hlt
or
rorl
inc
add
dec
jmp
cli
mov
stos
loopne
push
cs
fsubrl
out
or
sub
add
push
sbb
pop
icebp
enter
jmp
leave
dec
cmp
jp
sbb
jle
jne
jmp
movsb
clc
nop
sub
sub
iret
jo
ja
cmp
push
fdivrs
and
dec
dec
negb
sub
push
fwait
sbb
jmp
and
call
jmp
mov
int
adc
jmp
negb
daa
jmp
mov
sub
jmp
push
stos
pop
aaa
movsl
and
das
mov
mov
in
or
push
int3
lret
loop
add
push
lods
push
sbb
xor
aad
insl
pop
add
sbb
ret
xchg
call
test
cmp
jmp
push
pop
pop
bound
into
push
lcall
ficoml
leave
lret
xor
std
add
pop
sbbb
pop
mov
test
lret
adc
add
mov
lods
or
in
inc
xlat
or
push
inc
jmp
jae
nopl
lods
jmp
rcrl
push
or
mov
sub
add
fisubrl
or
sub
adc
ret
int
mov
dec
fdivr
pop
and
jmp
xor
ficompl
dec
loopne
aaa
sub
ret
pusha
imul
gs
pushf
mov
cmp
sti
push
or
fldl
and
and
push
lods
sub
cmc
jno
xor
xlat
cmp
lds
inc
mov
es
repz
out
ret
xlat
addr16
ljmp
daa
jmp
inc
or
sbb
sti
outsb
ja
add
sub
xchg
repz
int3
in
mov
shrb
push
ss
pushf
xchg
cmc
pusha
dec
dec
mov
pop
in
cltd
dec
lea
and
dec
sbb
pop
or
sbb
xchg
mov
popa
mov
clc
cs
roll
cmpsl
in
je
or
mov
adc
lret
inc
fst
pop
dec
sub
push
je
repnz
jmp
imul
fidivs
jbe
mov
jmp
mov
sub
cli
gs
cltd
shlb
shl
sub
pop
mov
clc
jmp
sub
lret
je
test
stos
and
insb
and
sahf
jmp
lcall
jmp
jl
cmp
sbb
cs
dec
imul
inc
stc
mov
add
sarl
or
jmp
ret
addr16
mov
pop
sbb
leave
cwtl
dec
jmp
sub
cmpsb
mov
jmp
cmc
adc
sbb
addl
inc
add
dec
aaa
cmp
ss
and
jmp
adc
sub
xchg
repnz
gs
pop
add
sahf
xor
popf
out
test
jp
mov
pop
mov
shl
aam
jmp
inc
push
loop
notb
je
push
sub
xchg
jb
mov
dec
enter
pop
jmp
lds
outsl
loope
repz
stc
jmp
xchg
jg
xor
inc
aaa
pusha
jno
mov
xchg
and
enter
ljmp
aad
sbb
movsb
jmp
rcrl
fwait
scas
popa
lods
sub
cmp
mov
outsl
les
xor
js
mov
leave
add
xchg
test
fistps
jb
jmp
sarb
inc
mov
clc
mov
add
cmovno
mov
scas
dec
mov
sub
daa
clc
ljmp
and
mov
jne
stos
cwtl
mov
aad
jmp
dec
mov
sbb
aam
rcr
loopne
and
cmpb
inc
test
or
leave
jmp
subb
in
mov
mov
jno
pop
xchg
fsubl
sti
adc
lods
icebp
ret
jmp
cld
ljmp
fcoml
sbb
loop
in
js
aad
lahf
dec
jmp
push
mov
out
add
jns
sub
enter
fucomp
orb
decl
pop
cmc
jmp
shrl
je
jp
inc
or
xor
sub
int3
xchg
and
or
shlb
cltd
loopne
dec
lock
or
sub
scas
leave
call
daa
lods
pushf
pop
clc
pop
adc
or
inc
cmp
das
adc
movsl
xor
dec
push
lcall
sub
sub
jne
mov
jb
mov
push
mov
loope
sahf
jmp
push
pop
sbb
jmp
cmp
gs
movd
jno
mov
mov
out
psraw
addr16
pop
int3
dec
add
call
mov
jb
xchg
push
fldl
inc
pop
popa
clc
jmp
inc
inc
sbb
sub
sbb
inc
sahf
inc
dec
or
arpl
mov
scas
jle
jmp
cld
and
jmp
mov
pushf
xor
pop
jmp
pop
push
mov
jmp
das
scas
sbbl
loope
pop
cwtl
cmc
insb
sub
xchg
dec
push
jl
popa
adc
repnz
pop
insb
repnz
gs
push
bound
pop
or
jge
pop
ret
adc
mov
fsubp
and
fwait
jmp
mov
mov
jb
test
fsubp
pop
sub
scas
std
mov
sbb
aam
out
fadds
mov
lods
pusha
sbb
jae
add
jmp
pop
xchg
sar
push
or
mov
jmp
cmp
sub
icebp
mov
loopne
jmp
inc
arpl
add
xor
ljmp
sti
stc
jmp
xor
pop
cmp
pop
pop
icebp
xchg
mov
mov
jmp
rep
mov
jmp
in
or
xchg
into
xchg
fstpt
insl
add
cwtl
push
pop
sbb
enter
and
sahf
jmp
outsl
gs
pop
mov
cmp
es
sub
push
jno,pn
sub
mov
mov
rclb
push
jmp
call
jp
jmp
inc
mov
sub
sub
adc
jmp
scas
clc
repnz
aad
dec
jo
jmp
int3
movsl
xchg
push
xor
jmp
push
ficoml
hlt
shll
fsubr
ljmp
pushf
jmp
push
lcall
fisubrs
ja
add
mov
push
pop
dec
xor
jmp
sub
orl
aam
movb
leave
push
sub
adc
lea
fstps
jmp
inc
arpl
inc
xchg
cmp
jnp
cmp
sti
js
xchg
sub
sub
mov
loope
and
ljmp
push
clc
jo
pop
jmp
test
mov
jb
jge
jmp
cmp
addr16
fs
add
push
movb
xor
and
fwait
sbb
and
mov
push
jmp
sub
lahf
adc
inc
dec
es
pop
jmp
pop
adc
push
jmp
testl
hlt
orb
push
je
and
jmp
dec
test
inc
add
pop
dec
subl
ret
lea
mov
dec
and
push
and
mov
sbb
jne
adc
vpaddsw
or
jmp
ret
dec
adc
dec
sbb
jmp
into
add
es
cli
jns
rcrl
push
jmp
int3
or
scas
sbb
jg
mov
mov
jmp
inc
push
insl
jmp
adc
jecxz
repz
jmp
loopne
jne
add
inc
mov
int3
sbb
daa
test
aad
ss
scas
repz
mul
movsb
jmp
push
pop
cmc
fucomi
das
sbb
sub
dec
fcom
fsubl
fs
pop
xchg
push
mov
pop
adc
mov
jmp
fs
in
arpl
repz
jmp
xor
stos
das
outsb
push
scas
arpl
sti
ret
push
pop
jmp
xor
sahf
rclb
hlt
or
test
inc
jmp
push
into
sub
movb
sub
scas
testl
mov
jns
gs
test
jp,pt
iret
xor
out
daa
sub
mov
in
rep
test
popf
xor
enter
pushf
dec
jmp
sub
mov
push
mov
js
popf
jmp
pop
enter
shl
jmp
bswap
arpl
jge
dec
jmp
mov
lret
pusha
mov
or
xlat
cwtl
idivl
lods
in
or
ficoml
divl
test
addl
jmp
push
aas
rcr
mov
jmp
sub
jmp
jmp
mov
out
cmp
pop
sbb
sub
loope
int
sbb
pop
sub
pop
sub
fimuls
aam
out
jmp
pop
nop
ja
popf
shlb
or
sahf
and
jmp
iret
es
icebp
imul
jmp
mov
inc
sub
lds
mov
push
add
movsl
rsqrtps
fsubr
lods
jbe
adc
cmp
mov
into
jmp
pop
loope
xchg
xchg
das
fsubr
cmp
jg
sub
dec
inc
xchg
inc
xchg
icebp
jmp
pushf
outsl
mov
jmp
ljmp
imul
stos
adc
pop
lret
jmp
jmp
test
or
mov
fiadds
in
iret
push
adc
frstor
mov
sub
mov
sub
xor
outsl
pop
cmp
lods
gs
mov
mov
sbb
subl
jnp
cmp
adc
sub
inc
insl
or
sub
scas
and
or
mov
je
jmp
jns
shr
outsl
dec
stos
out
jmp
pop
mov
jge
bnd
mov
xor
lods
pop
adc
xor
out
pop
jno
imul
jl
dec
jmp
sbbl
inc
and
and
cmpsl
mov
inc
fisttpll
movsl
out
neg
dec
ret
mov
xchg
cmp
jmp
xlat
sub
mov
mov
pop
popa
test
iret
sub
jmp
mov
lret
lret
out
xor
outsb
lcall
out
lock
ret
test
cmp
or
inc
int3
lea
and
outsb
cmp
lret
or
push
adc
sub
jmp
dec
cmp
test
push
jmp
sbb
arpl
push
scas
sub
sbb
dec
lods
cmpsl
mov
mov
jmp
push
sbb
rol
sub
pop
les
mov
sbb
mov
mov
sub
inc
add
or
fidivrs
and
cli
jo
xchg
mov
cmp
sbbl
jmp
mov
dec
inc
leave
lahf
js
ljmp
ja
in
out
sub
jmp
add
push
nop
mov
lret
pop
sti
out
cmpsl
xchg
divl
dec
sub
imul
leave
mov
mov
sbb
jmp
push
xchg
pop
shrl
in
lcall
xlat
fidivrl
cli
scas
add
iret
int
mov
test
hlt
lods
sti
mov
imul
mov
sbb
insl
inc
inc
sbb
inc
and
mov
jmp
cmp
xchg
pop
imul
icebp
lcall
jmp
inc
outsb
push
movsb
adc
and
lret
call
loope
jmp
rorb
scas
lods
stc
jmp
into
cmc
popf
xchg
xorb
fisttps
cmp
nop
mov
inc
test
mov
cwtl
mov
push
and
jmp
adc
sub
sahf
in
adc
int
inc
mov
iret
not
lods
cmpsl
adc
inc
pop
sti
stos
mov
daa
push
and
dec
sub
out
test
adc
insl
adc
sbb
imul
ret
add
imul
push
cmp
mov
push
cmp
add
sub
or
icebp
arpl
pop
pop
in
cmpb
popa
jmp
jge
clc
push
lea
push
ds
push
mov
pop
imul
test
jno
enter
dec
shr
or
stos
mov
jo
cld
enter
jmp
pop
and
cmpsl
imul
mov
mov
adc
pop
push
sub
je
mov
jmp
lea
pop
sub
imul
adc
inc
imul
and
adc
and
inc
imul
inc
and
add
lahf
dec
and
dec
flds
dec
inc
jmp
sub
test
test
ds
and
add
or
jb
bnd
or
pusha
scas
sbb
and
ficoml
add
sbb
pushf
cmpsl
data16
mov
xor
xor
lahf
cwtl
mov
cs
mov
mov
jmp
je
xchg
and
push
dec
stos
lahf
jne
xchg
push
outsb
push
outsb
xchg
xor
shrl
pop
clc
imul
jo
shr
syscall
cmp
pop
inc
push
jmp
lods
mov
lret
dec
mov
rorl
adc
add
lods
or
popf
sub
cmpb
fldt
jb
push
jns
adc
lahf
xorb
mov
push
push
into
cmp
inc
mov
repnz
fwait
mov
push
mov
scas
xchg
cltd
ss
aad
cwtl
pop
ret
data16
notb
add
sub
test
jp
adc
nop
jo
xor
push
mov
push
mov
or
ljmp
sti
scas
enter
scas
in
ds
mov
cli
pop
jmp
lea
fimull
fcmovnbe
xor
test
push
xor
pop
mov
test
adc
outsl
gs
jns
pop
or
pop
mov
jb
push
xor
jne
repz
pop
dec
jmp
mov
mov
push
add
in
sbb
jl,pt
jns
stc
lret
jmp
cmc
jbe
cmpl
test
jmp
iret
cmp
aad
pop
cmpsl
mov
and
out
xor
mov
jmp
cmp
stos
insl
jmp
in
mov
js
and
std
add
pusha
dec
lods
fmuls
loopne
popa
sub
or
and
cmp
push
inc
jmp
arpl
subb
cmp
test
xchg
fs
maskmovq
cmpb
stos
xchg
pop
sub
jbe
sub
dec
mov
icebp
pop
call
cmp
and
sar
hlt
jmp
inc
jecxz
imul
fsubrs
outsl
xor
adc
ljmp
incl
insl
fldcw
movsl
jbe
jmp
mov
stc
stos
jmp
fwait
add
in
jb
aaa
jmp
insb
jg
inc
sub
js
pop
orb
movsb
sub
decb
jmp
push
lahf
xchg
cs
arpl
loop
setno
cmp
dec
mov
clc
shr
in
repnz
add
mov
vmread
xor
dec
mov
cmp
je
jle
loop
mov
and
ja
sub
out
inc
xchg
lret
sbb
mov
push
sbb
or
jmp
add
ja
jg
insl
jmp
sbb
cmpsl
daa
sub
push
jmp
ret
xor
jmp
inc
cmp
cmpsl
rclb
xchg
dec
mov
mov
cmp
lret
lret
xor
sahf
cld
mov
jnp
xchg
call
test
repnz
sub
and
test
push
dec
jbe
jmp
xor
mov
jmp
adc
les
jae
cmpsl
lods
and
aas
jmp
adc
in
lods
cmp
and
in
mov
sbb
pop
dec
subb
sbb
xchg
and
out
jmp
mov
mov
jmp
push
hlt
mov
stos
jp
push
outsb
clc
xchg
out
les
mov
or
sub
and
pop
push
jmp
ret
lea
pop
test
lcall
out
pop
ret
jns
stc
jmp
mov
adc
enter
aaa
jns
jle
lods
push
inc
inc
mov
cmp
cmp
mov
push
jne
cvtps2pd
nop
xchg
lods
cmpb
sbb
mov
insl
add
push
jge
mov
lahf
pop
sbb
repnz
imul
scas
push
sub
mov
xchg
adc
repnz
jmp
scas
mov
fisubrs
mov
push
lahf
into
adc
add
adc
jbe
mov
mov
movsl
xor
sub
fimull
xchg
int3
inc
cltd
out
popa
arpl
or
outsb
and
nop
pop
sti
cmpsl
sti
ret
aas
and
std
out
jmp
in
push
ljmp
jb
or
in
jmp
mov
xor
mov
jmp
inc
pusha
ret
idivl
test
sub
add
bound
push
shlb
jmp
xchg
mov
jmp
dec
cmp
loope
and
xchg
or
jmp
sbb
push
ss
xchg
sub
mov
or
xor
test
lret
imul
push
mov
dec
sub
jae
sbb
in
lret
and
mov
cmp
adc
dec
add
daa
repz
enter
mul
mov
movsl
jmp
ljmp
jmp
jnp
out
add
dec
jmp
pop
push
aas
inc
mov
mov
dec
jno
popf
sbb
fstpl
jmp
lock
out
adc
lahf
pop
lods
data16
cmp
xchg
lret
enter
daa
add
pop
cmc
mov
lret
inc
scas
repnz
xor
shll
jmp
int3
adc
pop
sbbl
into
pop
dec
in
fisubs
push
or
cmp
enter
xchg
push
xor
cwtl
pop
sub
scas
jp
push
xor
mov
jnp
mov
mov
lods
leave
xchg
cmpsl
fdivrs
jg
test
jge
mov
add
repz
cmp
pop
jbe
and
ss
jl
mov
rorl
int3
sbb
or
mov
and
jmp
jmp
lret
push
nop
out
sbb
fists
mov
fstpt
jmp
test
inc
mov
pop
dec
lods
xchg
xchg
cmp
popf
jmp
mov
mov
jbe
xchg
jmp
orb
jmp
sub
rcll
rcll
into
jmp
out
pop
lahf
sub
lods
mov
cmp
mov
stos
gs
jmp
faddl
xchg
push
es
insl
mov
jmp
scas
sub
cmp
or
cltd
mov
repnz
lods
mov
push
jmp
les
daa
dec
subl
sbb
and
mov
lods
and
mov
je
xchg
xchg
sbb
movsl
pop
mov
jmp
arpl
push
fsubrl
ja
sbb
cmp
cmpb
outsl
and
mov
ret
dec
ss
sarl
and
jmp
std
xchg
pop
sub
mov
data16
aad
push
inc
popf
jmp
jne
lret
loop
lods
inc
push
cld
mov
mov
test
or
and
ja
adc
sbb
jmp
inc
pop
sub
mov
insb
adc
adc
pushl
idivl
imul
xor
pop
mov
sbb
lods
outsl
push
iret
lods
push
cmp
out
stos
sbb
push
jmp
movl
lret
shll
std
jmp
sbb
mov
jns
fsubr
push
jne
xchg
sbb
test
in
call
adc
push
xchg
cmp
jge
push
inc
add
lcall
frstor
mov
and
xlat
or
push
clc
adc
fisttps
mov
xor
mov
add
lock
jmp
dec
push
outsb
in
sbb
outsl
jmp
inc
imul
jmp
pop
mov
shl
jmp
adcb
into
gs
sbb
pop
stc
or
repnz
outsb
scas
clc
push
pop
and
aad
xchg
loope
pop
je
jb
mov
movsl
test
or
sub
icebp
jmp
cwtl
sub
dec
callw
movsb
jmp
pop
ss
xor
scas
daa
repnz
push
mov
and
or
loope
nop
dec
stos
xchg
je
dec
sub
sub
mov
push
jge
popf
ret
lret
cmp
cmpb
sub
push
jmp
push
fildl
sarb
ljmp
mov
leave
nop
es
xor
xchg
or
push
mov
mov
jmp
cli
xchg
mov
das
jmp
neg
hlt
or
popf
jb
sbb
sbb
lock
pop
sti
je
mov
scas
lods
out
lahf
adc
xlat
pop
jns
ljmp
shr
lret
sub
loope
inc
idiv
cmpb
lahf
pop
out
bound
mov
add
mov
cmpsl
aaa
test
and
jmp
nop
push
or
xor
lods
xlat
adc
and
or
or
int3
and
push
icebp
xchg
fldenv
loop
into
push
in
sbb
adc
jmp
mov
mov
loopne
test
xor
sbb
xor
jb
mov
fstpl
add
and
push
pop
pop
insb
push
fs
jmp
mov
pusha
fimuls
ror
test
jmp
dec
xchg
sub
sub
jno
dec
inc
mov
adc
daa
ret
enter
jmp
mov
loop
in
bound
jmp
pop
adc
jmp
mov
movsb
mov
lds
pop
pop
in
push
jmp
add
jns
scas
popl
xchg
mov
adc
inc
xchg
out
mov
jo
jmp
in
lahf
das
inc
jno
xchg
jmp
enter
fldl
add
cmp
jmp
insb
dec
sti
lea
hlt
fwait
jmp
js
mov
jmp
repnz
lods
mov
gs
adc
loope
adc
lret
push
xlat
cld
stos
sub
jecxz
and
adc
fldcw
stc
lods
dec
lods
adc
add
mov
adc
out
arpl
inc
shlb
fcmovne
outsb
or
xchg
sbb
adcb
xchg
mov
mov
cld
jmp
jns
jmp
imul
xor
daa
jno
xchg
shll
test
sbb
dec
xchg
cltd
stos
or
mov
push
push
and
inc
cwtl
jmp
cld
push
aas
sbb
or
mov
lods
leave
xor
xchg
add
repnz
mov
inc
mov
mov
or
cld
add
xor
sbb
jnp
jnp
pop
sbb
dec
sub
aad
push
bound
xchg
repz
jmp
aas
cld
insb
jecxz
loop
sub
dec
mov
enter
fs
xchg
mov
ja
jp
js
or
fucomp
cmpsb
repz
adc
mov
jp
out
aam
push
pop
jmp
jge
xor
lret
lahf
pusha
pushf
dec
mov
iret
sub
movsl
test
mov
mov
or
movsb
jmp
cli
dec
jbe
xor
jl
cmp
daa
int3
pop
imul
or
jp
cmc
sub
or
out
push
sub
mov
psllq
ds
stos
test
jmp
pop
add
jle
add
je
arpl
outsb
and
cmp
add
repnz
pop
add
out
or
pop
mov
mov
ret
icebp
dec
jmp
pop
int
and
ss
jmp
pop
jnp
adc
push
jmp
xchg
pop
and
ja
test
or
sub
jmp
adc
mov
jmp
pop
popa
ss
icebp
sahf
cwtl
jmp
es
stos
pop
push
fucomi
lock
fadd
fidivrl
jmp
loope
in
push
and
sub
add
je
sub
repnz
dec
sub
push
xor
pop
dec
data16
sub
mov
ds
sub
jg
push
or
vdivsd
testb
xchg
push
jmp
das
fxch
and
fimull
out
outsl
push
mov
sub
sub
cmpsl
xchg
fmull
sbb
jecxz
jne
jmp
and
mov
sbb
push
lods
out
imul
repz
jge
scas
mov
aad
rcll
xchg
loop
and
jmp
push
pop
cmp
ret
lcall
add
xlat
fwait
xor
jmp
fadds
insb
jmp
leave
push
jg
stc
mov
jmp
mov
sub
jmp
in
dec
jns
inc
int
push
sub
jmp
bound
cld
lods
popf
dec
add
inc
das
or
mov
push
jle
and
and
add
rorl
jmp
insb
mov
and
mov
jle
jmp
cmpsl
dec
int3
xchg
dec
pop
inc
jmp
mov
pop
sub
inc
mov
mov
ds
sbb
inc
shrl
divb
xchg
in
nop
mov
inc
jmp
arpl
push
ds
push
mov
jle
jbe
add
sti
pop
lock
std
cmpsb
push
jne
cmp
or
lds
sbb
add
jb
and
fidivl
aas
add
cmp
pop
paddb
lds
add
adc
rol
call
inc
mov
and
and
or
add
scas
mull
movsb
mov
push
mov
push
push
xchg
dec
pop
int
mov
and
popf
inc
sbb
jmp
mov
cmp
fldt
int
in
mov
enter
mov
xchg
lods
mov
and
cmp
jbe
bound
dec
and
jns
les
push
or
or
and
jmp
jnp
xchg
dec
in
jmp
outsl
or
mov
fsts
insb
mov
adc
sbb
inc
fldl
inc
ret
jmp
imul
jbe
jmp
mov
push
push
adc
sbb
test
sbb
pop
jmp
add
jmp
idiv
scas
cmp
pop
sti
sbb
add
and
fucomp
jmp
lret
lcall
xchg
repz
jmp
jno
push
inc
movl
mov
mov
lret
xor
fimuls
push
add
imul
lods
out
sarl
xchg
mov
ror
push
mov
int
pop
lds
lods
jne,pn
es
pusha
cmp
fisubs
xor
ret
xor
sub
jl
dec
adc
and
mov
mov
or
pop
mov
lret
mov
dec
lock
ljmp
jno
adc
jmp
clc
out
lret
adc
cmp
xor
jg
pop
loope
jl
jmp
add
sbb
gs
sbb
xor
mov
mov
addr16
fst
xchg
jo
outsb
jge
mov
sbb
popa
lcall
pop
xor
push
pop
push
mov
fsubrp
mov
jg
ljmp
sarb
jmp
rcr
lcall
mov
jae
mov
cmp
cmp
rcr
int
jmp
in
pop
movsl
adcb
pop
gs
div
and
xchg
sti
jmp
scas
jg
jecxz
jmp
mov
or
es
das
push
cmp
jno
and
xchg
jp
mov
lods
add
pop
jbe
pusha
loope
sbb
jmp
xchg
xchg
and
negl
movsb
push
pop
pusha
lret
xchg
adc
mov
mov
mov
cltd
and
push
shrl
sbb
shrb
dec
in
pop
sub
xchg
pop
repnz
into
or
mov
jmp
pop
push
sub
mov
mov
fs
sub
sbb
cltd
orb
and
bound
xor
mov
or
jp
popa
sub
and
push
jmp
jl
cwtl
mov
shrb
sub
xchg
loope
lock
insb
jmp
shll
lea
jns
jmp
adc
out
add
lods
sbb
orl
push
mov
mov
test
mov
push
outsb
lret
dec
nop
jb
mov
jmp
cmpsb
sub
mov
jmp
sub
cmc
jg
je
jmp
and
test
cmp
cs
mov
clc
cmpb
imul
mov
repnz
jmp
mov
or
and
jmp
cmp
xchg
popa
les
in
faddl
pop
mov
jbe
negl
and
scas
jo
cld
or
stos
dec
xor
sbb
stos
cli
mov
push
imul
pop
ret
jmp
sahf
jnp
push
mov
pop
jmp
incl
sbb
sbb
adc
add
jmp
push
sbb
fsubrs
cmp
shrl
xchg
es
sub
outsl
sbb
pmullw
sbb
or
pop
pop
imul
mov
or
movsl
stos
sti
add
push
pop
add
cmp
sub
xchg
sar
pushf
and
cli
inc
std
jmp
mov
add
scas
dec
cs
movlhps
stos
sti
loopne
pop
cmpsb
add
jmp
daa
hlt
out
mov
pusha
jmp
or
stos
insb
std
push
lods
pop
xchg
cmpsl
arpl
jb
add
push
sub
movsb
inc
jg
xlat
rcll
and
fcompl
repnz
pop
fimull
sub
sub
push
jmp
or
aas
pop
mov
aad
add
or
ficoms
xchg
mov
mov
jb
inc
sti
fs
in
push
xchg
jmp
popa
cmpsb
or
jmp
or
mov
lods
in
pop
and
jmp
aaa
mov
subb
out
icebp
add
cmp
pop
movsb
and
gs
outsb
ss
mov
xchg
lret
xlat
cs
icebp
lods
push
adc
add
ret
pop
push
cmc
pop
add
xchg
lods
dec
and
mov
push
jp
push
push
jns
rclb
jno
add
mov
mov
and
pop
sub
in
mov
scas
aas
iret
sbb
dec
fwait
mov
int
and
pop
xor
lcall
push
sbb
pop
lods
sub
in
mov
mov
hlt
inc
jmp
jae
dec
mov
pop
or
loop
fnstsw
sti
fdivs
jecxz
popa
xchg
stc
daa
sbb
sub
hlt
fcomps
int3
add
outsb
jmp
and
sub
push
jmp
stc
push
inc
dec
dec
cmp
xor
jns
mov
jmp
lcall
sub
or
jmp
mov
push
shr
clc
add
jmp
cs
inc
dec
fdivl
imul
les
fwait
lods
movsl
add
dec
lock
inc
adc
rcrl
cs
sbb
ret
lahf
jmp
sbb
out
popf
aaa
dec
mov
pop
popa
enter
lods
into
das
xchg
imull
jne
add
lret
sub
mov
xor
jmp
jle
push
inc
and
leave
cmc
push
xor
mov
xchg
inc
out
jo
adc
dec
cwtl
decl
jmp
xchg
jp
adc
jnp
imul
fs
nop
rolb
jns
xchg
clc
test
jecxz
and
inc
add
jmp
fdivrs
mull
test
repz
out
sbb
loopne
add
out
outsb
inc
sub
scas
lcall
sbb
out
mov
mov
push
add
stos
in
fsubr
cmp
push
pop
dec
lods
mov
pop
sub
loopne
ffreep
fidivs
lahf
iret
or
cltd
jbe
repz
and
jns
rorl
es
cltd
out
dec
pop
xor
jl
stc
clc
ss
mov
test
imul
sub
and
adc
loop
repnz
hlt
jmp
sub
out
xchg
scas
mov
fnsave
adc
sub
jne
sub
fs
or
insl
pushf
data16
cmc
add
jo
mov
mov
lds
in
aas
rcll
in
popa
adcb
jns
cld
xor
stc
lods
fwait
jg
inc
arpl
pop
popf
push
sub
adc
mov
shl
test
enter
jp
xorb
not
push
and
jmp
aad
cli
test
jb
jmp
xor
and
jmp
push
pop
imul
adc
xchg
les
sub
loopne
push
inc
insb
jmp
fisubl
scas
sub
add
pop
push
nop
jmp
stos
out
fidivs
and
or
shll
jg
add
es
out
je
cmc
xchg
lods
sub
pop
jo
shl
inc
es
imul
in
loop
mov
pop
jmp
push
push
out
and
cmp
mov
out
movsl
mov
daa
pop
imulb
iret
in
stos
iret
gs
jmp
hlt
sub
jae
cltd
outsl
mov
or
test
jns
test
push
mov
aam
stos
outsb
mov
pop
das
into
jno
push
pop
mov
jp
lret
jmp
mov
sbb
in
jne
movsl
jmp
or
mov
fs
bnd
cmpsl
scas
jge
lock
in
jmp
nop
xchg
adc
loopne
fnstcw
cli
sti
jmp
mov
mov
cmpsb
push
lret
sahf
fists
fisubrs
or
sbb
lret
jmp
je
mov
scas
hlt
insb
movsl
sti
jmp
push
sbb
mov
mov
addr16
jmp
repz
mov
jo
cmpsb
into
sbb
lret
mov
in
push
ret
sbb
mov
clc
adc
jmp
mov
lea
scas
test
int3
add
add
pop
push
lock
rcr
jns
outsb
out
sbb
inc
test
mov
lcall
adc
mov
stos
ds
jns
jbe
pop
jmp
sub
push
pop
xchg
les
jmp
lods
clc
lahf
enter
xchg
mov
popf
mov
and
lock
pop
into
mov
push
jmp
rorb
push
xchg
stos
jmp
insl
jno
push
jb
popf
repz
loopne
out
jmp
inc
or
mov
scas
jmp
xor
jno
jp
xchg
outsb
add
or
insl
sarb
jmp
aaa
lcall
lods
ret
xchg
pop
cli
mov
jmp
cltd
lret
push
and
int3
pop
jns
push
xor
jge
mov
sbb
test
jmp
or
mov
sub
or
jmp
out
cmp
stos
jmp
gs
mov
sti
push
sarb
mov
jmp
jl
inc
lds
xchg
lods
mov
out
sub
ret
inc
addr16
pop
jmp
sub
subb
fcmovnu
or
dec
fstpl
lret
sub
xor
push
testl
mov
jg
xchg
jae
dec
and
mov
sub
xor
sub
lods
lea
pop
mov
xor
ja
stc
jns
int
test
movsb
add
jae
outsb
scas
push
fsub
add
aaa
sbb
insb
jmp
mov
mov
xor
lret
in
sbb
cmp
xchg
cli
rolb
dec
icebp
or
push
jmp
jns
sub
jmp
loopne
inc
outsl
adc
adc
fwait
mov
ret
cltd
sub
jge
test
pop
clc
fidivrl
rcrb
mov
jbe
pop
stos
mov
movsb
cmp
sub
or
or
sbb
pop
sbb
out
mov
daa
imulb
mov
jmp
aas
cmpsb
sbb
dec
popf
mov
cmp
sbb
and
pop
mov
insl
mov
loop
int
mov
ss
pop
dec
int3
sub
aad
fcmovnbe
adcl
jno
or
xchg
dec
jle
jmp
aam
sahf
xchg
add
add
and
fidivl
scas
cmpsb
or
out
xchg
jmp
icebp
cmpsl
sbb
and
sub
out
and
addl
adc
pop
clc
arpl
fstpl
jmp
aam
pusha
push
enter
lahf
pop
push
pop
int3
pushf
mov
ret
fs
jmp
pop
xor
ja
loopne
insb
jle
and
cld
and
cmp
jae
insb
push
and
dec
jmp
das
roll
scas
mov
xor
push
arpl
pusha
dec
dec
cmp
push
orl
pop
daa
dec
push
mov
sub
jmp
hlt
pop
scas
adc
cmpsw
jmp
iret
das
outsl
push
cld
jbe
dec
stos
mov
fwait
xor
sub
or
xor
imul
mov
jmp
mov
xchg
lds
movd
xor
fwait
cltd
jmp
sarl
jmp
leave
mov
aam
and
test
jmp
mov
or
shr
jmp
mov
test
scas
pop
dec
xor
inc
jmp
loop
adc
gs
jmp
sbb
mov
push
and
push
mov
sub
sub
pop
repz
and
jmp
xor
adc
lret
fs
fdivs
cwtl
and
sub
cmp
and
add
sarl
mov
jmp
cmp
sbb
mov
lods
loop
jbe
std
xchg
xchg
icebp
jmp
cmc
pop
fisubrl
xchg
mov
outsb
out
jmp
sub
jmp
insl
sbb
daa
mov
sub
xor
and
jl
push
and
pop
pop
outsb
adc
add
jns
push
mov
outsb
aad
sbb
loopne
jmp
cwtl
or
cmpsl
es
sub
dec
ret
push
and
nop
sbb
push
jge
xorb
and
adc
push
mov
jmp
out
adc
ret
push
mov
in
ds
shr
mov
sub
jmp
dec
inc
or
orl
iret
xor
dec
movsl
and
xor
loope
or
jb
push
imul
and
inc
aaa
out
jmp
xor
movsb
lock
xlat
push
xchg
leave
push
jbe
scas
arpl
jmp
movsl
repnz
fisubs
mov
fistps
aaa
adc
jmp
fstpt
cmpsl
push
shlb
stos
subl
movl
adc
test
mov
fstps
andb
pop
sbb
fldt
sbb
push
popa
sub
repnz
inc
xor
jle
dec
add
pushf
jmp
ret
lock
pop
test
xchg
mov
push
ret
and
jmp
inc
cwtl
lahf
sub
scas
mov
lret
jne
int3
imul
xchg
cmp
mov
out
stos
sbb
outsb
mov
loopne
xor
out
dec
daa
sbb
out
dec
push
in
inc
in
cltd
or
sti
cmp
hlt
xor
jo
sti
outsb
dec
sub
dec
and
icebp
jmp
mov
pop
ficomps
outsb
stos
mov
push
dec
mov
jmp
xchg
pushf
repnz
icebp
xchg
jmp
or
adc
and
and
sub
das
cltd
jle
push
jbe
mov
sub
shlb
pop
dec
xor
fldenv
jmp
test
sbb
mov
insl
jmp
xchg
mov
mov
jmp
mov
jmp
xor
arpl
jl
inc
add
mov
in
adc
mov
shlb
xchg
daa
inc
jecxz
pop
jl
je
xor
lret
adc
loop
sbb
sub
orl
push
les
jmp
leave
xchg
lahf
pop
jb
shl
cmp
pop
xchg
stos
cwtl
jmp
sbb
inc
cmp
adcb
adcb
pop
cmp
hlt
lret
mov
sub
sbb
or
stc
cs
jmp
add
add
sub
pop
daa
push
roll
jmp
dec
jno
insb
cld
bound
lods
sahf
orb
xchg
loope
jmp
data16
dec
mov
or
addb
dec
sub
or
in
pop
test
jmp
jle
xchg
jg
push
lret
jmp
inc
daa
ret
test
cmp
outsb
inc
cmc
push
fwait
gs
xor
jl
jmp
pop
cltd
jno
test
mov
push
lods
pop
test
jmp
fistl
jb
out
cli
imul
imul
add
ja
fadd
cmpsb
dec
ljmp
and
push
adc
and
test
push
enter
insl
xlat
fs
std
int
out
add
push
das
pop
data16
cmp
lods
or
sbb
add
pop
cli
jns
inc
fwait
movsb
data16
pushf
add
pop
dec
xor
icebp
out
lods
jmp
mov
xchg
jb
mov
jmp
das
fsubl
add
pop
sti
sub
or
les
imul
outsb
sub
or
inc
iret
xchg
jmp
repnz
add
fsubrp
sbb
sub
adc
mov
cmp
arpl
jmp
fistl
sbb
shr
test
hlt
sbb
aad
sub
jmp
in
dec
in
and
adc
fdivrp
movsl
fsubr
stos
out
enter
mov
mov
jmp
inc
pop
sbb
cmp
mov
xchg
add
lods
test
pop
and
mov
mov
daa
or
mov
fldpi
leave
aaa
je
mov
jmp
push
in
add
xlat
sub
sbb
sbb
dec
jmp
dec
stos
xchg
sub
scas
ds
rolb
fstl
outsl
mov
jp
hlt
scas
mov
sahf
xchg
inc
dec
ljmp
mov
fwait
mov
adc
sti
lret
rclb
jmp
ds
push
into
mov
and
stos
pop
add
jl
mov
bound
stc
lret
repz
push
push
fists
add
adc
push
mov
mov
enter
jb
push
pop
inc
sbb
shr
mov
cmpsl
into
jne
xor
inc
ss
add
lods
add
shll
shrb
pushf
mov
jno
mov
mov
arpl
movsl
pop
int
andl
test
aas
fcmove
jmp
ffreep
cmp
popf
stc
add
jo
sub
negl
or
and
call
sub
or
fwait
ljmp
enter
aad
dec
sbb
int
sti
push
pop
mov
lods
cmp
fs
jmp
icebp
iret
pop
stc
fsubrl
loope
pop
daa
mov
dec
pop
push
shrb
sub
mov
dec
push
jmp
sarl
mov
xor
inc
mov
mov
or
mov
nop
or
int
mov
jp
addb
repnz
jo
outsl
rdmsr
sbbl
or
call
jo
lcall
mov
test
pushf
mov
sbb
xlat
ret
jmp
les
in
and
mov
cltd
or
jg
loopne
sub
jo
mov
dec
clc
cmp
mov
lods
shr
jmp
xchg
ficompl
add
xchg
sub
sub
sbb
icebp
jmp
inc
je
mov
or
mov
jmp
lcall
jmp
inc
jb
mov
adc
push
shll
das
inc
or
fiaddl
jmp
test
dec
lds
or
out
inc
mov
and
bound
cli
and
subb
sub
cmpsb
fsubrp
push
mov
movsb
gs
cmp
add
jo
stc
out
jmp
shrl
jno
inc
inc
add
dec
mov
dec
es
adc
das
mov
add
pop
xor
sub
in
mov
pushf
xor
add
mov
lcall
mov
cmp
ss
or
mov
adc
jmp
cli
enter
xor
ret
xor
hlt
or
dec
jb
sub
or
fwait
jno
jb
icebp
fimuls
sub
xor
push
and
shr
mov
mov
mov
xchg
jle
in
mov
xchg
xchg
int
popa
adcl
cli
sbb
mov
test
sbb
inc
repnz
or
iret
push
mov
or
pop
and
lods
fldenv
pop
cmpsl
pop
pop
jmp
hlt
roll
or
jmp
cltd
frstor
adc
scas
fsub
cmp
push
jmp
cmp
roll
inc
lods
in
sbb
in
fidivrs
es
cli
mov
imul
lea
sbb
jmp
popa
adc
jmp
mov
inc
mov
dec
mov
shrl
adcl
mov
cmc
pop
mov
in
jmp
mov
mov
xchg
daa
or
jl
jmp
iret
fcompl
jmp
adc
sarl
jp
rclb
pop
ret
mov
stc
gs
push
adc
jmp
sbb
cmp
mov
or
jae
jb
jno
hlt
pusha
jmp
add
push
lock
sub
jne
lahf
cmp
mov
sbb
cmp
fdivrl
shrl
sbb
push
iret
sub
pop
fisubrl
jne
xchg
and
add
push
push
sbb
mov
mov
imul
movsl
iret
jmp
imul
aam
insl
cli
or
dec
jmp
adc
ds
leave
fistps
cmc
rcl
sub
shrl
test
jmp
repz
repnz
lcall
lcall
fsubr
adc
scas
aad
mov
jmp
fstps
mov
mov
cli
outsl
pop
fisubrs
dec
int3
mov
mov
push
push
aaa
jmp
out
dec
scas
adc
jns
jmp
mov
addr16
testl
mov
xchg
ljmp
jmp
insb
es
lods
jae
and
mov
cmp
fadds
mov
pop
int
sbb
pusha
jno
jmp
push
cwtl
mov
mov
xor
adc
insl
push
aas
sub
dec
dec
repz
jmp
mov
dec
rorl
lret
jmp
nop
mov
pop
int3
popa
jb
push
aad
jo
imul
add
fprem
test
lcall
xlat
sahf
cltd
hlt
mov
iret
mov
sub
imul
inc
inc
sub
lock
sub
aad
outsb
mov
dec
push
int3
and
lods
jecxz
or
stos
jbe
repnz
lock
sub
lret
jno
lods
cmc
mov
or
jg
cmp
and
stos
dec
lods
mov
jb
int3
cmp
adc
insl
adc
pop
lea
clc
nop
xor
je
cmp
and
mov
inc
mov
fsubl
and
cmp
mov
pop
jmp
repnz
rcll
sbb
ret
sbb
mov
test
sub
jmp
jae
jecxz
push
dec
lret
xor
xor
mov
jo
pop
addl
push
test
hlt
cli
add
push
jmp
pop
dec
into
bound
push
sbb
daa
std
ret
inc
jmp
lods
outsl
mov
pop
cwtl
xchg
cwtd
mov
mov
loope
sahf
sahf
sbb
and
jmp
in
or
scas
popf
inc
aad
jecxz
pop
mov
cmpsb
sub
or
outsb
insl
sti
outsl
jge
imull
jae
jl
test
jmp
or
aas
ja
lods
sbb
idivl
jae
mov
mov
sub
nop
jmp
and
sub
mov
dec
data16
and
jmp
repnz
sub
sbbb
stos
dec
lods
orl
out
loop
rcrb
jmp
dec
ret
imul
out
lods
rcll
jmp
xchg
dec
pop
add
inc
std
xchg
and
jmp
ret
movsl
shll
mov
call
in
stos
out
adc
mov
mov
adcb
adc
pop
mov
add
out
lods
mov
sahf
in
daa
movsb
jnp
inc
jmp
mov
outsb
in
xor
mov
sbb
fmull
into
es
lret
add
arpl
stos
js
mov
jmp
mov
pop
in
sub
mov
scas
loopne
mov
addl
sub
iret
std
add
jle
mov
and
pop
mov
push
out
inc
outsl
xchg
xchg
lods
or
bound
rorl
fists
adc
out
push
inc
jmp
mov
mov
jg
fidivs
sbb
outsb
and
jo
cmp
hlt
movsb
push
ja
daa
out
adc
mov
es
xchg
por
cmpsb
sar
mov
xchg
test
mov
jmp
test
cmp
stos
jmp
inc
fs
iret
fcmove
sub
or
daa
out
push
jmp
jne
imul
adcb
cmp
out
adc
or
stc
ret
sbb
shll
lea
stos
cmp
jmp
shll
xor
xchg
jge
add
jmp
subb
jmp
ja
xor
jmp
jp
push
inc
pushf
ljmp
dec
xor
jmp
movsl
cmp
add
nop
or
xor
mov
add
lcall
xchg
sbb
mov
jmp
mov
or
pop
fs
push
popa
jo
shl
push
and
sub
out
pop
pop
sbb
orl
ljmp
mov
fisubrl
jg
adc
mov
pop
jae
test
popa
test
lcall
jg
mov
xchg
mov
mov
jmp
pop
shll
daa
loopne
and
mov
mov
loope
outsl
icebp
insl
jmp
adc
mov
lea
mov
mov
cmp
lods
sub
lods
pusha
rorb
inc
and
xchg
mov
or
jmp
hlt
mov
cmp
mov
cmp
cmpl
xchg
outsb
out
test
ret
push
out
insl
movsl
push
int3
or
int
push
dec
sbb
mov
lods
and
roll
sti
cwtl
xor
jmp
js
mov
sub
fwait
orl
pop
test
jnp
pop
bnd
mov
mov
pop
and
xchg
lods
test
shrl
adc
ds
jle
loop
push
push
jnp
sti
clc
sub
mov
push
jmp
stos
push
adc
dec
mov
mov
fstpt
jmp
fisttpll
cmpsb
int3
mov
sub
adc
outsb
jb
int
je
jmp
das
lret
into
mov
pop
push
or
scas
pop
dec
jmp
outsb
nop
shlb
xor
pop
mov
jbe
or
inc
or
ss
in
sbb
rorl
cmp
ret
jns
je
mov
js
jae
sub
push
mov
dec
sub
inc
aad
inc
mov
sub
clc
test
jmp
pusha
aaa
mov
add
mov
adc
mov
out
mov
pop
add
clc
ss
in
sbb
in
cmpsb
xchg
fdivrs
and
inc
stc
or
leave
jmp
or
sub
and
mov
scas
js
mov
add
js
pop
dec
rorl
fwait
arpl
sti
xchg
daa
int
outsb
mov
mov
jmp
clc
insl
or
jp
adc
stos
xchg
lods
js
xchg
cmpsb
pop
movsl
ficomps
mov
lock
popa
jmp
rorl
lods
push
or
stos
xor
sbb
std
lret
inc
xchg
lods
lcall
adc
js
xor
pop
cmp
add
mov
pushf
mov
jle
lahf
fistps
and
jmp
lods
imul
mov
or
xlat
loopne
push
ret
fs
sub
movsb
in
jmp
mov
lret
lcall
aaa
jp
cmpsb
jmp
mov
inc
pop
test
jmp
movsb
arpl
lods
int3
loop
jecxz
lods
daa
xchg
push
repnz
push
push
jmp
push
in
add
dec
jmp
mov
cs
cltd
outsb
mov
outsl
je
jmp
add
push
jmp
insb
mov
repnz
dec
push
sbb
int3
faddl
sbb
jmp
ja
scas
outsb
mov
jmp
fcmovne
cwtl
pop
jne
pop
dec
xchg
lds
sbb
sbb
imul
jmp
jbe
mov
add
in
stos
lock
lcall
adc
mov
or
jmp
bound
jmp
jp
minps
call
pop
cmp
and
jmp
daa
dec
iret
xchg
pop
jb
jmp
dec
js
icebp
inc
mov
push
mov
ja
jmp
jle
loop
sub
mov
js
sub
inc
and
faddl
xchg
xchg
scas
push
aam
xlat
repz
lahf
into
adc
mov
enter
jnp
jl
mov
das
cs
jb
ret
pop
rol
std
pop
mov
jmp
lea
sub
inc
jbe
data16
fsubl
in
sbb
xchg
cmp
pop
sti
mov
call
lods
popf
loop
adc
pop
and
cmp
xlat
mov
jno
jmp
test
lock
xchg
aaa
jp
and
mov
sbb
insl
jmp
or
add
int3
lock
outsl
nop
lods
inc
xor
jg
inc
out
add
std
jo
mov
jmp
cmpsl
cmpl
sbb
jmp
out
fsubrl
lods
jl
push
in
pop
lock
or
in
jp
ss
jns
mov
in
cmp
jmp
mov
jmp
fsubrl
sbb
loopne
mov
jge
sbb
stc
std
push
jmp
xchg
mov
lahf
xor
mov
cltd
jne
test
sub
js
sbb
pop
lods
fs
jno
inc
or
mov
dec
or
lods
fdiv
xor
clc
inc
out
jmp
mov
fstl
movsb
dec
jmp
xor
lds
jae
stc
lods
cld
dec
nop
dec
sub
sbb
cli
shr
or
lock
test
pop
cmp
jns
mov
ja
je
jmp
mov
adc
mov
mov
in
cmp
sub
popa
inc
pop
es
stos
popf
test
jmp
repz
pop
mov
xchg
jmp
mov
shrb
es
dec
push
outsl
jmp
dec
cs
jmp
lret
dec
inc
and
movsl
test
cs
jp
scas
jmp
mov
mov
push
lods
jo
jmp
icebp
xorl
fwait
adc
add
je
fbld
popa
sbb
mov
mov
jo
fbld
mov
or
pop
fsubs
mov
inc
outsl
vmptrst
sbb
fucomp
test
sub
cli
loope
dec
sub
mov
adc
jmp
repz
cld
ds
mov
icebp
push
inc
ljmp
lock
lcall
ret
fwait
int3
stos
add
mov
adc
sbb
sub
or
jns
mov
out
bound
shlb
jmp
push
sub
push
jns
fwait
sbb
out
add
adc
or
jmp
aad
out
push
and
in
sub
out
fstpt
sub
cmc
stos
imull
push
jmp
push
leave
mov
fs
add
add
jo
mov
stos
sub
ret
lea
fdivl
fcoms
ret
jnp
jmp
push
leave
xchg
les
nop
repnz
je
xchg
insl
cmc
pop
cmp
imul
dec
pop
inc
xchg
push
icebp
jmp
add
cmp
xchg
outsb
lods
adc
add
cmpb
and
rclb
mov
mov
leave
scas
jmp
or
pushf
int
pop
imul
xchg
stos
das
js
sbb
out
out
push
sbbb
test
neg
daa
push
mov
ja
jmp
and
mov
jmp
in
xchg
stos
fs
imul
lds
mov
cmpsb
addb
iret
mov
divb
mov
outsb
lock
sbb
pop
das
sbb
jp
or
cmp
mov
jae
xchg
into
mov
jmp
jns
hlt
inc
movsl
cmp
push
insl
iret
dec
xor
lea
push
ljmp
dec
sub
into
pop
repz
inc
jmp
out
out
mov
imulb
outsl
dec
add
pop
mov
mov
in
mov
mov
cltd
jmp
test
je
mov
loop
xchg
in
and
xchg
mov
add
mov
cmp
test
aam
jp
jmp
push
movsl
add
pop
inc
xchg
cltd
lock
loop
and
dec
out
add
and
cmp
cmp
push
inc
in
lds
fucomi
sbb
adc
pop
cmc
insb
jmp
sbb
mov
daa
add
cwtl
subb
test
sbb
stos
mov
iret
rcrl
insl
call
jmp
fldt
push
sub
loope
sbb
lahf
xchg
and
inc
sbb
icebp
fisubrs
mov
xor
test
and
inc
cltd
rcll
popf
je
fwait
dec
jmp
mov
jmp
jnp
jb
je
fwait
cmp
loope
lods
scas
jbe
std
cld
and
das
jmp
pushf
xor
cmc
dec
ret
insl
and
sub
pop
mov
out
jmp
popa
enter
or
push
sub
jmp
aas
jno
pop
adc
jmp
xchg
cmpl
fmull
sub
outsb
shrl
mov
xchg
mov
sbb
dec
jmp
test
lods
pop
rolb
sahf
insb
dec
lock
pusha
std
pop
adc
in
lods
jmp
aas
xchg
call
pushf
sub
lret
imul
stos
mov
push
mov
lret
inc
jmp
mov
dec
cmpsb
outsb
sub
xor
sbb
fcomip
lods
add
mov
sti
cmp
dec
stos
sbb
out
aam
test
insl
xor
xorl
adc
orb
aad
loope
and
jmp
xchg
in
or
adc
std
mov
pop
cli
inc
sub
cmp
inc
jge
jmp
fisttps
mov
fstl
nop
jmp
dec
test
jmp
pusha
mov
jmp
xchg
mov
cs
xchg
je
lret
add
jns
cmp
fiadds
jmp
adc
and
push
or
ds
ljmp
lahf
inc
jmp
jns
cmpsb
js
out
stc
in
adc
cmp
stos
lods
test
jmp
arpl
popa
jmp
inc
push
adc
lcall
in
lods
and
bound
cmpsb
mov
sbb
jmp
pop
repz
jmp
push
stos
aas
xchg
push
mov
sar
orl
data16
jno
push
sbb
loope
cmp
mov
ljmp
xor
repnz
jecxz
mov
xor
imul
ja
push
cs
in
xchg
fdivs
inc
rclb
in
popf
jmp
movsb
lods
int
jo
movsl
sub
jmp
in
shrb
mov
bound
jmp
mov
xchg
adcb
icebp
pushl
jb
and
jge
pop
dec
jmp
fildl
cmpsl
es
jb
fimuls
xor
test
jns
dec
xor
sahf
jmp
xor
mov
lods
xchg
jo
mov
jbe
icebp
insb
or
jmp
jnp
mov
pop
mov
jmp
sbb
lret
es
pop
test
shll
repnz
dec
sti
mov
repz
stc
mov
cmp
in
adc
add
outsb
popf
movsb
jl
int
jno
push
pop
pushf
bnd
jns
push
mov
out
jmp
aam
popf
xor
dec
lcall
jge
subl
mov
xor
imul
ja
mov
lret
inc
hlt
mov
jmp
jl
rcll
adc
jno
negl
jmp
movsl
add
pop
imul
aad
ret
xchg
xchg
pop
mov
mov
and
xor
fbstp
clc
dec
std
xchg
jp
dec
cld
mov
fsubp
leave
push
ret
scas
sub
dec
jmp
add
add
mov
dec
out
xchg
shr
push
mov
or
popf
jmp
add
orl
inc
jmp
pusha
repz
jmp
lea
inc
rcrl
test
xor
pop
shlb
lcall
cmp
fadd
or
pop
or
fs
xorl
lea
add
push
cwtl
pop
mov
mov
dec
fstpt
sub
call
lods
and
js
es
and
rolb
xor
xchg
gs
loopne
push
cmp
and
and
jmp
out
clc
pop
or
and
or
or
xor
je
inc
loopne
jmp
scas
dec
sbb
cmp
sub
js
testl
sub
test
cli
dec
mov
pushf
mov
aas
jmp
add
hlt
mul
or
jb
or
push
mov
test
test
lods
sbb
jmp
sbb
cld
sarl
mov
and
cmp
cs
or
aad
mov
mov
pop
jmp
adc
pop
sub
jmp
jo
push
movsl
test
mov
jmp
inc
cmp
mov
sub
out
repz
jmp
ret
sti
sahf
xchg
scas
mov
jmp
in
int
ret
mov
xor
loope
add
bound
jp
mov
push
mov
scas
incl
dec
sbb
stos
mov
scas
mov
mov
addr16
cli
imul
in
sub
iret
add
stc
aas
sbb
jle
inc
add
mov
lods
es
adc
xchg
sbb
je
in
mov
or
sub
mov
stc
insl
mov
pop
sub
add
or
jmp
jl
jmp
test
sbb
xchg
pop
out
inc
cmpsb
insb
mov
sbb
sti
add
lods
ja
lods
fsubrl
jg
or
dec
jnp
fcompl
icebp
and
and
adc
jmp
and
jecxz
ret
jmp
pop
rclb
je
outsl
in
mov
pop
in
daa
inc
jmp
add
dec
dec
adc
out
dec
inc
out
jne
shll
mov
lahf
aad
sbb
sub
mov
out
icebp
xlat
sbb
sti
and
cmp
push
xchg
jmp
dec
sarb
xchg
jmp
push
imul
push
sar
scas
lahf
loope
in
inc
jmp
shll
mov
pop
dec
jmp
pop
outsl
mov
sub
xorb
and
mov
pop
add
lods
add
repz
repz
pop
fisttpl
pushf
sbb
ret
jl
or
js
imul
jmp
fsubrl
movsb
push
xchg
out
jmp
sahf
ss
jmp
push
add
sti
xchg
sub
xchg
push
fcmovnu
push
enter
fdivrs
aas
xor
out
ja
dec
mov
and
sub
xor
dec
jmp
ror
xor
add
data16
mov
cmpl
arpl
jmp
adc
or
lahf
adc
sub
jge
mov
ljmp
movsl
pop
dec
adc
std
cmc
in
cltd
stc
push
push
jmp
and
add
fists
cmc
mov
je
cmp
xchg
jbe
mov
jmp
mov
test
stc
pusha
and
in
roll
and
add
in
mov
bound
adc
aad
je
gs
xlat
xchg
jmp
clc
shl
aaa
mov
rorb
fdivs
and
jl
jmp
imul
dec
mov
mov
mov
dec
ret
xor
mov
jmp
push
hlt
xor
outsb
cmp
stos
push
addr16
icebp
daa
push
add
imul
aam
cmc
pushf
ret
jmp
inc
adc
stos
cmp
in
cmp
jb
inc
icebp
mov
sub
mov
add
fdivs
rol
cmp
daa
jb
test
iret
cmp
das
dec
imul
push
and
int3
jmp
nop
push
pop
jp
xor
sub
test
jmp
call
outsb
push
dec
imull
movsb
mov
mov
shlb
cli
adc
push
pop
lcall
arpl
or
sbb
xchg
jmp
fadds
mov
aas
xor
fwait
xor
pop
sarb
or
lea
mov
leave
add
mov
jmp
cmp
pop
mov
mov
sbb
data16
outsl
mov
xchg
sar
fucomp
es
repz
mov
jmp
lods
shl
push
xchg
mov
xorb
rcr
out
dec
and
sbb
sti
dec
pusha
andb
or
jmp
or
cmp
sub
adc
mov
int
lock
je
dec
push
rcrb
jmp
pop
andb
jle
jmp
insb
cmp
aaa
xor
xchg
stos
or
das
fimuls
jo
repnz
xor
bound
insb
mov
pop
jb
enter
call
in
or
mov
ficoml
ja
cmp
or
xchg
lock
sbb
pop
sub
in
popa
jmp
les
mov
out
testl
mov
stos
lods
cmp
icebp
or
cmpl
loope
xchg
mov
cmp
push
and
pop
mov
dec
jmp
fistps
push
cmp
add
mov
xchg
jmp
sbb
inc
jmp
outsl
iret
andl
xchg
jmp
das
fs
xor
pop
outsb
int3
aad
in
dec
iret
mov
pop
je
scas
adc
std
pop
or
in
jmp
stc
pusha
cmc
mov
es
lods
cmp
les
lods
shlb
shlb
sbb
por
call
je
lea
fwait
pop
jmp
mov
dec
inc
xchg
jno
xchg
jmp
pop
or
fisttpll
add
jo
repz
lods
push
sbb
pop
je
mov
lock
in
jecxz
or
rclb
mov
fisttpll
test
sti
push
das
xchg
jmp
imul
xor
sub
pop
enter
jg
pop
shl
jp
movsb
or
xor
or
lods
stc
ss
movsl
loope
dec
int
es
sub
ja
cmp
daa
je
sub
adc
lds
or
or
push
insl
hlt
cmc
ja
pop
jmp
out
stc
mov
ds
out
jb
sbb
mov
mov
and
add
mov
xchg
xor
push
or
insl
lods
push
lcall
movsl
jle
push
fisubrs
lret
outsl
xchg
jle
sub
xor
aam
or
pop
mov
mov
fimull
pop
mov
adc
and
repnz
jmp
add
pusha
movsl
jmp
into
fildll
rcrl
pop
sbb
insl
mov
sub
cmpsl
pop
lock
add
sub
popa
jmp
pop
in
js
xchg
jmp
lea
cmp
jge
mov
andl
outsl
xchg
ss
int
data16
dec
xor
mov
jmp
idivl
jo
mov
and
and
dec
jmp
push
das
sub
xor
sub
stos
cmp
mov
adc
jmp
out
int3
pushf
popa
push
stos
jmp
shlb
pop
lods
daa
movsl
mov
in
sti
std
arpl
mov
and
pop
inc
sahf
movsb
insl
jmp
mov
or
lods
fwait
xchg
inc
pop
in
cwtl
cmp
into
outsb
jle
popa
movsb
into
and
xchg
inc
loopne
jae
decl
dec
or
jmp
sub
fisubrl
addr16
add
adc
mov
mov
inc
add
testb
mov
and
leave
jns
call
int3
jmp
jne
adc
jmp
xor
or
out
jmp
insb
pop
or
sbb
aaa
add
idivl
call
xchg
ret
fcom
sub
pop
sub
outsb
iret
ljmp
mov
aam
mov
mov
mov
fsts
sub
loope
gs
jmp
jge
stos
and
repz
roll
xor
ja
inc
sub
loope
int3
and
cmp
lods
jno
and
inc
push
push
jmp
dec
xor
data16
and
mov
cmp
iret
test
mov
mov
mov
jge
dec
shll
jmp
sub
lock
or
stc
in
dec
pop
rorl
jmp
popf
mov
cmp
jmp
xorb
jge
movsl
in
les
in
push
xchg
pop
mov
aas
shlb
lahf
inc
or
movsb
icebp
int3
and
xchg
xchg
enter
mov
mov
push
xor
lahf
xchg
inc
mov
shrl
add
jmp
daa
test
pop
inc
js
jmp
mov
inc
std
test
outsb
arpl
push
jno
jmp
imul
jmp
inc
daa
inc
xor
push
dec
xor
and
pop
test
jmp
add
xchg
mov
out
xchg
lods
push
nop
in
fsubr
lods
mov
shlb
cmp
test
and
add
push
push
xor
sub
add
call
movsl
mov
movsb
inc
jmp
inc
bound
sbb
inc
xchg
mov
cmpsl
mov
jae
adc
mov
clc
ss
orl
add
cmp
inc
fcomps
lods
adc
iret
nop
shrl
cmc
push
in
lret
lret
jg
or
pop
cmp
dec
out
sub
jmp
mov
rep
mov
push
xchg
lock
jmp
cmpsl
fcmovbe
hlt
cmp
jmp
jge
fcoml
cmc
in
insb
sub
pop
cmp
jl
and
jg
bound
or
dec
mov
xchg
mov
mov
mov
lahf
push
dec
insb
mov
adc
add
jmp
stc
or
jl
cs
outsb
push
sub
jmp
clc
repz
cli
push
lcall
sbb
nop
inc
lods
jmp
dec
out
sar
into
and
and
cmp
rclb
cmp
xor
stos
mov
in
jge
adc
fildll
xchg
leave
jne
sbb
hlt
fs
cld
daa
jmp
addb
inc
fiaddl
cli
cli
pop
push
jmp
scas
and
inc
movsb
cmpsl
cmc
movsl
lock
push
cbtw
js
ds
stos
int3
xlat
fninit
xchg
mov
hlt
mov
cmp
scas
push
mov
fdivl
fldt
mov
rcll
jmp
stos
loop
push
cmc
mov
dec
adc
pushaw
dec
sub
or
mov
mov
sub
pop
and
jmp
sbb
push
je
inc
mov
out
dec
addl
not
jmp
fisubs
lods
popa
lods
fcompl
add
pop
and
xor
aam
in
mov
inc
mov
lahf
adc
fldenv
pushf
mov
inc
adc
test
in
or
mov
shlb
mov
pop
jb
jmp
pop
mov
jl
adc
jmp
fisttpll
jno
push
nop
jg
dec
jmp
xor
push
jo
aam
pop
call
clc
in
xchg
pop
js
cld
sbb
addl
cmpsb
adc
leave
scas
jmp
loope
jno
fisubl
test
mov
jmp
lahf
movsb
xchg
in
mov
lods
xlat
xor
lret
sti
sbb
dec
xchg
stos
cmp
push
shrb
mov
jmp
cmp
js
or
outsl
jb
pusha
mov
add
jo
or
xchg
mov
out
inc
mov
jmp
fucomi
pop
add
stos
adc
out
jge
mov
jbe
mov
pop
mov
repz
frstor
aas
mov
cmp
add
cmpsb
test
pop
cwtl
mov
pop
std
scas
in
mov
cltd
in
aaa
in
push
daa
inc
jae
sub
or
andl
outsb
xor
imul
add
add
jmp
iret
insb
inc
lret
es
pop
jmp
cmp
popa
outsb
aam
lods
push
stos
leave
jb
ja
add
and
fimull
and
push
imul
std
jmp
leave
sub
pop
jmp
fistpl
sub
mov
in
jmp
push
jns
call
mov
in
cmpsl
push
data16
xchg
fs
ja
ds
and
xchg
add
cltd
xchg
dec
in
sbb
jnp
outsl
mov
adcl
xchg
push
jmp
xor
je
inc
sahf
xchg
and
dec
sbbb
jg
sbb
cmc
adc
jp
lods
dec
push
mov
or
outsb
shll
inc
jmp
sti
pop
mov
jmp
popf
fstpt
xlat
dec
jmp
aam
pusha
jbe
fdiv
jmp
jg
stos
xor
decl
cmp
ret
std
mov
fldl
popf
push
jmp
cs
dec
xchg
mov
popa
movsb
jne
jmp
mov
iret
cwtl
stc
add
xorb
pushf
and
mov
ds
arpl
or
pop
jle
fldpi
push
sti
pop
jg
jbe
cli
mov
stos
repnz
add
push
or
xchg
jle
shr
fs
pop
hlt
iret
mov
mov
sahf
jmp
je
jae
popa
mov
imul
lods
scas
je
xor
sbb
pop
jmp
in
adc
lahf
sbb
call
jp
lret
mov
jbe
jns
and
jmp
jg
outsl
popl
enter
dec
test
inc
out
add
ja
cld
mov
and
jmp
loope
jns
sbb
dec
test
sub
call
pmulhw
mov
lods
pop
push
mov
sub
xor
jo
dec
push
insl
int
leave
jmp
sbb
cmp
cwtl
cld
sti
pusha
push
pop
sbb
mov
push
jmp
loope
aaa
movsb
mov
jmp
dec
inc
iret
loop
ret
pushf
jmp
enter
push
xor
jmp
fisubrl
adc
adc
or
outsl
stos
nop
test
scas
pop
inc
push
xchg
mov
imul
xchg
insl
call
jmp
mov
jecxz
in
out
sub
and
sti
mov
std
mov
loope
sbb
in
jmp
adc
adc
sub
aad
sbb
add
inc
mov
jl
fisubs
cmpsl
mov
daa
test
in
or
hlt
adc
cld
inc
fisubs
push
jmp
pushf
or
mov
mov
jb
and
out
xor
outsb
dec
mov
outsb
cli
add
mov
repz
jmp
mov
test
lods
int3
inc
pushf
sbb
repnz
loopne
aaa
out
jnp
jecxz
in
scas
dec
popl
and
shlb
xchg
mov
jmp
cs
les
leave
jmp
jb
mov
in
jmp
mov
mov
mov
test
cmpsl
jae
jmp
inc
mov
push
jmp
mov
fs
shr
adc
push
lcall
push
pusha
add
jmp
out
out
inc
jmp
dec
imul
xchg
xchg
arpl
or
push
lods
pop
xchg
cld
jb
or
xchg
into
mov
xor
aas
mov
push
test
ljmp
insb
repnz
or
sbb
xchg
push
add
popl
movsb
test
mov
sub
jge
ljmp
ret
cmc
xchg
pop
das
jmp
dec
inc
loop
fiaddl
mov
adc
add
aaa
and
sub
mov
ret
and
jmp
cmpsb
jno
lret
mov
jb
pop
cmpb
std
sahf
xlat
rolb
xor
inc
sbb
inc
pusha
movsl
adc
popa
sbb
jecxz
jmp
push
je
push
xor
addr16
in
mov
les
dec
out
sbb
jb
jmp
push
mov
movsl
cwtl
mov
idiv
in
std
push
add
or
adc
hlt
sub
sub
fldl
pop
mov
scas
jmp
or
pusha
rorb
add
fisttpl
xchg
adc
out
adc
sub
pop
jmp
int3
push
je
cmp
adc
rcr
stos
jne
lods
adc
mov
lods
jge
jmp
mov
dec
outsb
add
jmp
repnz
or
push
seta
sti
push
mov
sbb
pop
mov
lea
jmp
xor
push
jg
stos
scas
movsb
fmull
lods
addr16
cmpsb
add
pop
xchg
inc
xor
mov
cltd
sub
mov
push
loop
sarl
ljmp
stos
xchg
cmp
cmp
add
jge
out
mov
mov
insb
or
jns
mov
mov
nop
xor
std
lcall
push
push
sbb
xchg
jmp
out
jle
inc
ljmp
push
pop
sti
or
lods
ret
das
jp
loop
sbb
xor
sub
ret
adc
rorl
jl
sbb
cmp
sub
ret
and
sbb
jmp
jecxz
mov
cwtl
decl
pop
aam
outsl
cmp
in
add
push
outsb
mov
mov
outsl
test
aam
je
lods
stos
adcb
arpl
icebp
shrd
insb
movsl
jne
and
data16
movsb
pushf
call
loop
sbb
mov
mov
lods
fbld
mov
out
jmp
inc
std
in
pop
aad
mov
aam
mov
sbbl
mov
int
mov
lahf
decb
popf
sub
insb
and
cmpsb
arpl
jmp
aam
inc
out
mov
iret
adc
or
ljmp
jl
pop
or
xor
mov
jmp
jle
xchg
cmp
ljmp
imul
stos
or
xor
dec
stos
ret
adc
jg
int3
pop
and
pop
loopne
shrb
adc
jmp
gs
push
mov
jmp
dec
sub
xlat
add
pop
out
xchg
dec
in
lret
lods
mov
jmp
add
repz
mov
mov
aam
push
stos
sub
xor
adc
push
loop
leave
shr
sub
dec
lds
or
jmp
cmp
dec
imul
mov
jmp
fld
jle
push
faddl
scas
mov
pop
shr
shl
mov
cld
mov
xchg
iret
add
js
xchg
mov
xlat
fwait
outsb
sbb
call
jnp
sbb
mov
lods
add
ret
mov
fldl
ret
xor
jmp
sub
in
sub
repnz
cltd
daa
jle
jmp
andb
jecxz
inc
dec
jns
push
out
sti
or
cli
ret
jmp
jb
mov
jmp
xor
xchg
retw
testl
pusha
mov
hlt
lods
imul
shrl
cmp
int
fiaddl
idiv
add
cmpsb
shrl
cmp
rep
sbb
mov
call
stos
mov
adc
js
daa
cmp
mov
jbe
out
int3
lea
push
jmp
inc
cmp
mov
dec
sbbb
jmp
out
jno
stos
jne
jmp
std
sbb
push
xorb
bnd
sbb
bound
pop
clc
jge
cmpsb
lods
shrl
mov
addr16
mov
jmp
dec
insl
sbb
jmp
xchg
gs
insb
pop
mov
push
dec
pop
jmp
nop
inc
int
add
adc
xchg
push
dec
sbb
cmp
jle
and
and
mov
in
data16
std
imul
push
sti
pop
arpl
pop
outsl
mov
dec
gs
pop
pop
dec
cmp
pop
imull
push
jmp
dec
leave
jl
xor
imul
jmp
callw
mov
cmp
xchg
pop
inc
push
or
std
pop
push
ljmp
xchg
out
call
iret
sub
mov
gs
sbb
or
sar
lds
and
xor
xor
add
fldenv
popa
ret
mov
fs
iret
cmc
jmp
mov
sub
mov
mov
mov
mov
mov
loop
jmp
imul
aaa
stos
mov
mov
pop
or
ja
pushf
cmpsb
loopne
hlt
test
mov
mov
adc
into
or
jns
scas
jmp
lock
repnz
jmp
loop
mov
mov
test
sub
dec
into
jmp
gs
out
loopne
and
xchg
jmp
adc
adc
jmp
xlat
jl
std
jle
scas
xor
fstl
jb
cs
sub
dec
pop
push
notb
idivl
loop
and
sub
and
mov
add
and
sub
push
int3
and
repnz
dec
lods
loop
movsl
adc
pop
pop
sub
jl
les
cld
sub
xor
clc
sub
and
jmp
push
pop
mov
mov
loope
or
iret
cmp
jmp
adcb
ror
fsts
dec
arpl
imull
mov
pusha
out
mov
leave
lods
jmp
jae
jp
mov
jb
mov
lods
push
scas
in
adc
sbb
outsl
adc
dec
or
jmp
jmp
cli
popa
jmp
jo
roll
mov
fcom
jp
ret
bnd
es
cmp
or
lahf
mov
adc
pop
test
jo
or
and
pop
push
add
jmp
out
ret
inc
shr
mov
jno
jmp
mov
aaa
sar
xor
xchg
mov
pop
lods
ret
or
fdivs
hlt
push
xor
dec
adc
adc
jmp
out
cmp
sbb
sbb
inc
jmp
in
int3
add
test
jp
cmp
jmp
lea
add
int
fadds
lcall
aas
outsb
test
movsb
mov
andl
push
repnz
cmpsb
into
jmp
push
pop
loop
out
sbb
xchg
scas
insb
into
cmp
dec
xchg
xchg
add
jmp
push
dec
cmpsl
pop
pusha
mov
sub
and
cmc
and
pop
lods
popw
std
add
or
lret
loope
loop
sub
gs
and
sbb
insl
repnz
xchg
fcomi
and
and
icebp
jmp
sbb
sub
jg
lods
shl
fcoms
or
stc
xor
lods
les
js
sbb
loop
and
cli
mov
xor
jmp
dec
outsb
pop
or
shr
cmp
gs
mov
test
imul
jbe
dec
sbb
stos
jmp
mov
pop
inc
cmp
push
or
cli
iret
jb
xor
mov
jbe
adc
dec
aad
push
cmp
mov
stos
loopne
sbb
sub
aas
and
and
or
cmpsb
and
and
adc
imul
mov
jmp
jle
stc
jecxz
cmp
jmp
int
xchg
push
fidivrs
repnz
nop
mov
adc
or
lds
mov
in
adc
gs
fistl
mov
jmp
adc
jle
nop
push
ljmp
fidivrs
stc
lods
aaa
jo
fists
out
dec
out
jmp
lret
xchg
loopne
movsl
sub
mov
jmp
in
fsubrl
leave
mov
subb
xor
sub
jmp
push
dec
push
insb
ljmp
push
xchg
xor
xchg
dec
in
jne
mov
inc
jmp
cmp
sahf
outsb
test
jne
sbb
adc
add
jmp
push
movb
cmp
lcall
subl
or
insl
push
jp
data16
dec
mov
sahf
xchg
int
sub
xchg
leave
lock
ror
push
push
fisttpl
mov
push
and
lods
jne
imull
sub
lret
mov
xor
sub
pop
jno
loope
jmp
and
pop
pop
scas
fnstcw
cwtl
mov
outsb
arpl
shll
add
in
dec
dec
add
sbb
pusha
lods
xor
xor
lods
sbb
jmp
inc
shll
push
mov
jle
imul
cmpsl
stc
push
jmp
cmp
test
popa
pop
ss
mov
mov
mov
lods
sbb
test
pop
sbb
mov
dec
lods
or
fmull
into
std
add
lcall
addb
inc
mov
jmp
xorb
scas
xchg
stos
in
jmp
push
mov
int
cmpsb
imul
enterw
sbb
sbb
mov
add
enter
xor
or
adc
inc
das
and
cltd
jmp
lds
xchg
mov
scas
dec
sbbb
rcrl
icebp
jmp
jp
inc
cmc
cli
fwait
lock
push
jmp
sbb
sbb
and
cltd
fdivs
mov
int
jbe
sbb
jne
mov
pop
stos
gs
test
adc
mov
aam
nop
int
js
lahf
sub
pop
add
test
inc
mov
mov
mov
movsb
sbb
cltd
pop
jmp
out
fldenv
jp
sbb
and
push
inc
jmp
mov
lods
fnstenv
and
iret
dec
or
loopne
in
nop
fmull
jmp
add
mov
add
in
jmp
shlb
sbb
repnz
les
out
mov
movsb
sbb
cmp
push
repnz
or
gs
lods
cmp
sbb
inc
sbb
icebp
cmpsl
subb
std
mov
popa
int
jns
jmp
inc
daa
inc
leave
and
aaa
add
jmp
xchg
jo
das
ss
outsb
and
gs
and
dec
xor
xchg
dec
xchg
repz
lret
outsl
adc
sbb
xor
lods
lods
fsubrl
xor
daa
icebp
xor
iret
jmp
pop
cmp
jmp
jl
push
add
xlat
sub
add
jmp
imul
adc
jmp
subl
aas
fmul
mov
xor
sbb
cmp
inc
jmp
jae
in
jg
jbe
jmp
push
std
imul
cld
dec
jmp
movsl
out
mov
enter
inc
jmp
xchg
aas
jmp
cwtl
mov
outsl
cmpb
sub
dec
xor
imulb
jmp
idivl
sub
cltd
adc
add
pop
jmp
les
sub
popf
mov
mov
xor
jmp
cltd
nop
out
adc
jmp
lcall
cmpsl
jmp
inc
ja
mov
jge
pusha
push
data16
cmp
outsl
pop
jl
xchg
cwtl
aad
inc
adc
sub
mov
jne
jo
jmp
push
jg
loopne
loop
jmp
sbb
xlat
inc
xchg
ljmp
test
cmp
mov
bound
scas
push
mov
lea
dec
outsb
xchg
out
lods
pop
inc
daa
dec
pushf
pop
dec
les
pop
cmp
or
out
cli
outsb
jmp
leave
push
stc
addr16
jmp
les
sub
jecxz
daa
dec
mov
pushf
addr16
push
sahf
or
insb
inc
mov
xchg
mov
sti
fcoml
js
call
mov
jo
out
aas
test
inc
divb
in
pop
imul
out
out
push
and
lret
jmp
jo
sub
mov
xchg
aam
jo
pop
jle
sub
sbb
cmp
call
and
iret
jmp
insb
and
cmp
stc
mov
jmp
jne
and
sub
jmp
and
fs
in
test
mov
es
fdivrs
jmp
pusha
loope
inc
into
push
std
add
mov
mov
sbb
daa
fsubr
in
lcall
insb
add
jl
jnp
divps
inc
test
inc
arpl
lcall
jp
jmp
xchg
je
xchg
or
arpl
jo
mov
push
sahf
and
out
in
je
dec
daa
mov
xor
orb
je
leave
ds
popf
sub
shl
sbb
push
scas
test
xor
jo
or
jge
shlb
cmp
or
mov
jbe
jne
mov
jmp
les
mov
adc
xor
cs
inc
hlt
jge
mov
add
cmpl
dec
push
bound
repnz
leave
inc
xor
insb
jmp
cmp
imul
xor
mov
fwait
dec
push
jmp
sub
and
fists
dec
jmp
mov
mov
sub
out
clc
scas
lcall
lods
test
inc
and
cs
jmp
sbb
mov
nop
push
scas
cmp
test
repz
stos
jmp
aad
rcrl
hlt
or
in
inc
insl
cpuid
lods
mov
pop
cmp
adc
sbb
or
sub
bound
jmp
mull
mov
xchg
inc
test
jno
inc
sbb
cmp
mov
es
aas
iret
mov
jecxz
adc
pop
repnz
pop
daa
xor
dec
jp
hlt
mov
or
mov
pop
and
xchg
js
adc
xor
dec
jmp
es
fs
jp
sub
lret
daa
adc
je
pop
adc
xchg
xchg
stos
aas
shll
inc
jmp
cmp
loope
cmp
pop
lods
mov
int
outsb
in
in
pop
xchg
jno
repz
cmp
int3
mov
sbb
xor
lea
mov
loope
imul
cmc
adc
out
sti
sub
xor
mov
sarl
dec
jae
jmp
xchg
push
aad
idivb
mov
adc
jmp
lret
adc
loopne
sub
and
sbb
sahf
xchg
loope
add
dec
sub
sub
sub
stc
gs
xchg
dec
and
subb
push
add
adc
xchg
and
jmp
jns
pop
mov
jmp
out
xor
sub
aaa
jmp
arpl
jge
aam
cmpsb
jmp
mov
fnstenv
lods
mov
jmp
rcrl
mov
fcmovne
leave
cmc
xchg
jmp
stos
push
icebp
push
pop
xor
fwait
addr16
mov
push
js
mov
cmpsl
mov
xchg
popf
test
mov
and
pop
mov
lret
dec
cwtl
or
daa
or
not
int3
insl
cltd
aaa
sub
outsb
out
mov
mov
jmp
lret
ret
enter
mov
arpl
bound
mov
out
pop
loopne
lods
inc
dec
enter
or
out
in
or
push
mov
loop
jmp
fldl2e
pop
mov
scas
cmc
sti
sti
add
sub
push
xchg
in
hlt
mov
es
or
fstps
mov
pop
call
jmp
aad
lea
push
adc
out
movsl
xor
xchg
pop
jmp
les
rorb
jnp
stc
jmp
adc
in
jmp
test
pop
dec
jmp
push
pop
xlat
xor
ret
jmp
jb
sahf
mov
cmp
nop
and
shlb
inc
push
dec
adc
popf
lods
dec
mov
cmp
add
inc
aam
jmp
and
mov
sub
jmp
jmp
mov
dec
clc
sub
cmp
test
xchg
mov
jecxz
and
ja
adc
jmp
mov
negb
jmp
pop
test
nop
jp
mov
cmp
mov
push
pop
test
mov
dec
fistps
kmovd
adc
push
mov
xor
lahf
nop
dec
mov
xchg
test
imul
xrelease
jge
adc
fsubl
jmp
lret
adc
sbb
add
cmp
loope
stc
negl
adc
mov
mov
jmp
pop
push
xor
pushl
mov
arpl
xor
loopne
les
mov
xchg
jmp
cwtl
int
cmp
jmp
movsl
jbe
mov
loopne
xor
add
sub
cmp
icebp
cwtl
jns
dec
clc
or
sub
mov
leave
sbb
mov
mov
jmp
push
xor
das
dec
xchg
jmp
xchg
cmpsb
movsl
xchg
jmp
mov
mov
mov
cmp
inc
sbb
mov
mov
push
mov
jb
xchg
mov
mov
mov
mov
mov
seto
out
sbb
stc
jecxz
add
inc
es
cmpsb
inc
sub
and
xorb
mov
hlt
popa
mov
mov
add
test
lret
jmp
inc
loop
fisubrl
jmp
shrl
stc
adc
xor
push
pop
pop
test
cs
mov
shrl
lock
movsl
icebp
fisubl
inc
out
imul
or
test
mov
dec
addr16
repz
cmpsl
fimull
inc
and
mov
mov
ret
pop
xchg
lods
in
sub
popf
mov
sbb
inc
jmp
and
roll
push
ss
jns
call
sarl
jno
addr16
std
inc
popf
lock
dec
sub
sub
sub
add
jmp
sub
xchg
jmp
and
mov
push
scas
pop
mov
or
push
mov
and
arpl
mov
outsb
rolb
filds
je
xor
mov
cltd
jmp
cld
inc
dec
lods
out
pop
imul
push
ja
fsubr
sub
cmp
mov
sub
cmp
popa
or
fistpll
xchg
pop
stc
mov
sarb
loope
jmp
ret
and
add
xlat
jmp
jmp
xor
jmp
xor
or
jl
jmp
ret
popl
jbe
mov
push
inc
daa
sbb
dec
lock
or
jae
xor
jmp
leave
jp
cli
ds
shll
mov
int3
add
push
jmp
gs
lods
pop
push
add
movsl
punpcklwd
pop
sub
pop
jb
or
fyl2xp1
sub
fidivrl
mov
in
adc
inc
and
jmp
dec
add
push
xor
shrb
xlat
sbb
mov
pushf
adc
daa
sub
mov
sub
jp
adc
pop
mov
loopne
add
pop
shrb
fnstcw
inc
adc
sti
pop
dec
xlat
test
jmp
enter
xchg
movsb
test
dec
das
cli
out
add
arpl
test
inc
icebp
nop
aad
outsl
sub
jmp
aaa
andl
xchg
in
shrl
int
outsb
add
inc
sub
jmp
xchg
mov
test
pop
loop,pt
inc
bound
mov
mov
hlt
lods
pop
test
xchg
loopne
jmp
or
addr16
xor
mov
jns
cmp
xchg
mov
outsb
pop
sub
jmp
dec
into
mov
cmpsb
pop
mov
and
or
std
jle
sbb
adc
mov
out
mov
mov
and
out
push
sbb
lods
movsb
cmp
xor
sub
int3
inc
mov
sbb
mov
fmul
jmp
sbb
pop
in
jl
pushf
int
es
shrl
adc
loope
fwait
lods
dec
dec
movsl
rorb
popf
leave
or
xchg
sub
jmp
push
fidivl
dec
std
dec
lret
scas
add
inc
push
or
sbb
hlt
mov
xor
dec
ds
stos
cli
outsb
std
iret
sbb
int3
inc
mov
jns
loope
sarl
jmp
or
jmp
jg
fbld
inc
ucomiss
jne
add
cltd
add
sbb
add
mov
test
dec
adcb
sbb
aad
test
add
jb
jecxz
jmp
shrl
test
push
adcl
jmp
dec
je
stos
fnstenv
aad
bound
mov
adc
insl
and
pop
xchg
add
lds
leave
shrl
fmull
inc
cmp
cmp
cmc
cmpsl
das
cwtl
push
out
adc
test
sbb
jnp
jmp
out
jo
aad
outsb
xor
mulb
dec
iret
cmpsl
inc
cld
pop
jmp
fiadds
xchg
icebp
sub
rcll
adc
adcl
xlat
jmp
sarl
bound
ret
daa
in
jmp
push
iret
sbb
push
sbb
scas
mov
mov
xor
xor
jno
pop
jbe
popa
sbb
lock
in
jbe
add
lea
xlat
and
and
int3
mov
cmp
fcmovnb
shr
mov
jbe
jmp
testb
pusha
mov
lret
jb
stos
repz
daa
mov
push
ljmp
adc
mov
push
push
in
test
insl
push
scas
sbb
dec
adc
jmp
leave
pop
xor
mov
addl
pop
mov
mov
pusha
test
jg
inc
jb
jo
mov
jmp
fcoml
cmp
imul
fsubrl
je
in
sub
pop
push
xor
fisubrs
outsb
stc
mov
push
mov
cld
scas
out
inc
push
loopne
lds
jnp
add
xchg
cmp
jmp
mov
xor
jne
sti
call
sub
and
xchg
mov
into
jmp
sbb
jmp
or
adc
lds
test
add
push
dec
scas
push
xor
mov
jp
xor
negb
bound
scas
mov
or
dec
or
mov
xchg
push
pusha
lods
jb
sub
and
and
jae
in
stc
sbb
cmpsb
in
jo
jmp
ret
mov
movsl
es
jl
stos
lods
cmp
adc
dec
push
xchg
cmpl
ljmp
shr
xor
scas
pushf
push
jae
aaa
pop
mov
sub
jge
les
stos
sub
pop
sub
call
jmp
mov
dec
addr16
pop
jmp
cld
jle
sub
cmp
dec
sahf
sti
adcb
ja
testl
push
xchg
pusha
xor
pop
jmp
xor
or
inc
mov
xchg
sbb
push
push
sbbb
outsl
test
sub
xchg
sbb
and
in
je
pop
incb
or
jmp
mov
fcmove
sbb
je
dec
fldcw
mov
cltd
or
jmp
dec
in
lods
fcoml
ret
pop
int3
imul
jo
xor
pop
imull
mull
xchg
mov
cli
fisubrl
push
jns
dec
hlt
mov
lock
cmpsb
div
test
dec
jmp
mov
adc
push
or
add
dec
lods
addr16
add
gs
sbb
aaa
shr
inc
mov
bound
push
movsl
fucomi
aaa
sbb
std
repnz
adc
push
inc
jg
cli
cmp
jmp
xchg
and
sti
xor
xchg
outsb
iret
jle
cmp
in
mov
inc
cltd
test
mov
scas
or
jne
jnp
xchg
idivb
sub
or
stos
push
xor
xchg
notl
lods
lret
inc
stc
paddb
out
jmp
sub
adc
mov
test
jmp
inc
cmp
add
stc
outsb
call
aaa
mov
aad
imul
fs
inc
sub
clc
push
push
mov
je
sysenter
lds
push
incb
in
cld
or
cmp
imul
gs
jmp
insb
cmp
ja
sub
mov
fbld
add
xor
pop
negb
inc
scas
ret
or
mov
dec
xchg
popf
push
repz
or
ss
fldt
cli
cmpsb
mov
daa
loope
sarl
adc
and
or
xchg
ficoml
int3
pop
jno
mov
dec
lods
push
les
psubsb
mov
jae
dec
jb
decb
jbe
sbb
xlat
jmp
stos
mov
lock
mov
dec
jmp
fstl
dec
dec
inc
jmp
cmp
imul
cli
xchg
fmull
sbb
mov
lods
mov
inc
mov
movsb
lods
mov
mov
mov
jmp
nop
mov
ret
std
std
xor
cs
jo
and
pop
stos
adc
mov
lods
mov
push
pop
jne
cs
inc
outsb
jg
mov
mov
xlat
add
adc
out
xor
lods
push
or
movsl
scas
aaa
pop
cmpsl
hlt
popa
cs
cmp
test
aad
sub
popa
adc
push
lods
push
in
outsb
pop
or
and
enter
test
xchg
cwtl
lret
mov
sbb
jae
mov
mov
sbb
fsubl
xor
cmp
imul
or
or
mov
jmp
ror
sbb
jmp
add
mov
xchg
mov
scas
push
or
lock
subl
pop
scas
jmp
ret
xchg
sahf
and
inc
cli
or
inc
jmp
insb
loope
lcall
or
sbb
mov
pop
dec
jmp
scas
add
mov
shl
inc
repnz
stc
inc
jmp
movsl
xchg
sahf
jmp
cmpsb
insb
mov
repnz
mov
jmp
int
xor
or
rorb
scas
add
jbe
testb
dec
inc
outsl
scas
and
push
enter
push
mov
ljmp
popa
pop
imul
mov
jmp
out
push
sub
shll
pop
daa
sub
pop
mov
mull
stc
repz
jmp
mov
jmp
stos
sbb
jmp
out
nop
imul
jmp
jp
add
mov
xchg
sbbb
and
arpl
jmp
sbb
and
sbb
mov
dec
jmp
mov
in
push
dec
jns
daa
lods
jmp
or
push
fwait
cmp
ret
ret
adc
repnz
cli
lret
or
jne
aam
jmp
push
out
jmp
aad
mov
ljmp
fwait
scas
pop
ret
push
sub
xor
add
jmp
sbb
sarl
jmp
cwtl
loope
sub
cmp
cmp
fistpl
pop
fsubrs
and
dec
shrl
int
jmp
inc
repnz
icebp
mov
mov
adc
popf
or
sbb
dec
test
inc
loope
push
lds
dec
imul
bound
ja
imul
imul
ljmp
lods
out
out
sub
mov
in
inc
je
inc
push
cmp
outsl
aas
fdiv
cmpsb
jg
psubw
or
and
inc
aad
es
in
sub
shlb
insb
adc
lahf
xlat
jmp
out
push
adc
call
pop
imul
cmp
adc
or
andl
dec
leave
hlt
sub
push
bnd
andl
xor
pop
aaa
sarl
das
xor
loopne
adc
sub
dec
ljmp
jp
pop
mov
xchg
movsl
sub
jge
push
or
scas
adc
repnz
jbe
sar
xchg
jmp
or
sbb
mov
clc
imul
fisttpl
ljmp
cwtl
pop
jo
mov
fildll
push
or
mov
or
jmp
daa
cli
pop
push
stc
std
pop
lods
insb
or
inc
out
pushf
adc
lods
xchg
out
sbb
clc
rep
xchg
push
pushf
jno
jmp
and
xchg
xor
imul
mov
mov
je
fildll
stos
fcomps
jmp
sub
outsb
jmp
lods
inc
movsl
aam
mov
jmp
push
or
sub
in
out
fs
pop
xchg
push
dec
jmp
daa
add
repz
outsb
adc
addr16
sbb
outsb
sub
jmp
pop
cmp
xor
or
jmp
repnz
pop
xor
cmc
cmp
shr
outsb
test
xlat
jecxz
xchg
mov
sbb
push
sbb
jb
sub
nop
and
jmp
outsb
dec
and
lods
cmc
sbb
push
fs
aas
imul
neg
sbb
imul
mov
mov
jl
add
aad
outsb
xchg
lret
sbb
cmp
jnp
or
inc
pop
jmp
jp
repnz
jge
imul
sub
and
int3
scas
sbb
sub
or
push
cmc
jp
add
aam
adc
mov
xchg
dec
idivl
mov
icebp
mov
mov
mov
out
xor
jb
adc
sub
xchg
push
es
jmp
mov
mov
mov
mov
lret
fsubrp
or
sub
jmp
push
stos
mov
pop
push
pop
push
jbe
sbb
jmp
rorb
orl
icebp
jmp
xor
ficompl
mov
jns
xlat
imul
sub
or
lock
out
jmp
sub
or
adc
xor
push
xor
push
sub
push
xchg
pop
jmp
inc
jnp
or
push
rcrl
inc
jne
lahf
movl
adc
adc
into
in
sub
dec
jmp
movsl
orl
push
pusha
xor
testl
inc
or
mov
jmp
jp
and
mov
jmp
mov
aam
fsubs
jmp
mov
test
daa
ret
lods
addr16
rorl
lods
jg
mov
in
imul
and
sbb
cmp
or
jmp
test
sub
cmp
ds
xor
lret
adcb
loopne
clc
dec
enter
add
cmpb
hlt
pop
arpl
lar
int
pop
jmp
nop
test
scas
jmp
sub
call
jmp
mov
mov
icebp
xchg
orl
fnsave
jmp
inc
cli
push
xchg
ds
jnp
fwait
sbb
add
aas
insb
jmp
inc
add
das
dec
jge
adcb
and
stc
outsb
xor
fsts
lods
xlat
xor
test
ret
jmp
push
int
hlt
push
insl
lret
jmp
stc
pop
or
sbb
rclb
dec
xchg
arpl
add
shr
and
xchg
and
stos
rorb
jp
add
dec
inc
jmp
in
adc
test
cmp
sti
push
sbb
and
pop
pushf
repz
xor
xchg
cmp
mov
hlt
inc
lods
ficoms
push
or
dec
ret
cs
test
or
out
mov
jbe
fcoms
sbb
in
jmp
imul
shr
mov
popl
vstmxcsr
mov
jmp
aad
cmc
insl
xchg
je
ret
inc
jmp
sub
xlat
add
or
push
cmp
insl
jmp
leave
test
cs
ss
lods
mov
shr
faddl
mov
movsl
xchg
fadds
imulb
in
xor
sub
add
pop
jmp
jae
cltd
popa
fwait
fs
push
lods
push
pop
push
out
sub
pop
sub
or
out
loop
mov
sub
mov
xor
fsubp
cmpsl
rolb
jmp
sbbl
pop
xlat
scas
xor
xchg
pusha
fmulp
adc
out
xchg
in
sbb
imul
xchg
sbbb
inc
std
leave
jno
testb
popa
jb
dec
movsb
nop
es
add
xor
mov
repnz
ss
jmp
scas
sbb
jl
xchg
mov
movsb
stc
adc
push
sub
pop
test
dec
fsubrl
loope
mov
sub
aad
xor
nop
cmc
or
fbld
jp
fninit
imul
aam
psubq
hlt
jmp
cmp
dec
jmp
jge
in
sub
aam
cmpsb
cmp
jmp
and
jmp
and
ljmp
or
iret
pop
lods
mov
pop
pop
scas
paddb
mov
sub
sti
out
arpl
cltd
jmp
xlat
adc
popa
or
sub
fs
les
addr16
pusha
cwtl
clc
mov
jmp
mov
mov
ja
fsubr
sti
lahf
mov
enter
lods
push
jmp
inc
sarl
mov
and
push
pinsrw
push
mov
fwait
xor
jns
or
je
add
dec
push
lods
xchg
cmc
pop
push
and
int3
pop
or
jge
jbe
rcr
add
lods
and
sbb
shlb
in
xchg
out
pop
data16
sahf
or
jmp
pushf
cltd
fwait
insl
call
lea
iret
jmp
outsb
mov
test
sbb
cmp
xchg
je
add
mov
mov
shr
xor
xlat
test
inc
arpl
xchg
or
cs
pop
shlb
jno
jmp
cltd
idiv
fisubrs
mov
mov
cs
and
adc
jmp
test
movd
adc
sub
jb
loope
jmp
xor
xchg
mov
and
push
stos
add
mov
inc
popf
or
add
mov
sbb
jmp
lea
sbb
lret
cmp
fucomp
and
adc
pop
jb
sbb
test
xchg
filds
nop
jmp
scas
inc
js
lds
jb
dec
sti
add
and
mov
mov
lods
jb
int3
add
cwtl
cmp
into
fs
and
hlt
xchg
int
cs
cmp
or
mov
fisubs
dec
into
jmp
cs
mov
mov
popa
hlt
repnz
movsl
mov
lods
cmp
sbb
clc
jp
mov
xchg
and
mov
arpl
and
xchg
jmp
sbb
fwait
jmp
push
test
xchg
cmpsl
out
mov
dec
cli
iret
and
dec
pop
xchg
je
sub
jmp
loop
aas
pushf
jb
aad
sti
clc
negb
lahf
push
jmp
lret
insb
jl
fstl
or
lds
mov
jle
jmp
mov
sbb
jmp
aam
pop
inc
mov
add
outsb
adc
ja
xor
xor
mov
jmp
popf
movsl
or
cmc
fcoml
stos
outsl
mov
out
pushf
push
pop
jbe
mov
and
sbb
sbbb
xor
sub
lock
pop
lods
shlb
xor
ja
mov
pop
jnp
out
dec
cmp
add
jmp
lods
das
pusha
pop
xor
imulb
adc
xor
sub
pop
std
mov
mov
fists
xchg
jmp
je
xchg
xor
inc
cmpsb
jmp
sbb
clc
movl
xchg
lret
jmp
push
inc
rcrl
out
fisubrl
inc
or
push
addr16
ret
xchg
cmpsb
jmp
xor
sbb
ja
fildll
and
movsb
and
adc
std
mov
xlat
scas
pop
cmpsl
out
lahf
jmp
add
test
add
mov
xchg
jo
push
mov
les
push
inc
cmp
outsl
test
inc
mov
shr
lcall
and
shll
ret
jmp
push
pop
mov
lods
xchg
cld
addr16
shrb
repz
sub
adc
push
insb
dec
mov
jp
adc
inc
loop
or
xor
mov
push
divb
out
sti
jge
shl
mov
lds
jl
sub
adc
sbb
ljmp
emms
lods
mov
or
imul
add
cmp
clc
push
jmp
push
ja
jmp
loop
push
inc
shrl
push
xor
insb
imul
hlt
loopne
jmp
pop
xor
popf
add
das
shlb
neg
stc
imul
or
push
jle
bound
out
sbb
iret
jmp
icebp
or
in
pop
lcall
shll
js
push
cmpsl
ret
mov
xchg
iret
or
sub
in
xor
sub
pop
jmp
fbstp
mov
mov
jmp
lret
dec
push
jmp
inc
add
cltd
jmp
mov
test
and
or
orb
mov
jmp
inc
jl
dec
sub
jmp
push
xchg
lret
daa
and
iret
mov
jb
movsl
mov
xchg
pop
popa
movsb
cmp
dec
cmp
jecxz
xor
mov
add
cli
xor
mov
adc
or
gs
popf
int3
test
xchg
aad
cmp
fdivrl
or
pusha
popf
lods
jge
std
xor
xchg
adc
mov
lret
jmp
and
pop
dec
inc
pop
sub
xor
mov
daa
jmp
fstpt
mov
icebp
jmp
mov
insl
sbb
shl
fs
das
jmp
psubusb
and
jg
je
daa
movl
jne
mov
push
lods
adc
jno
test
mov
xorb
mov
cltd
mov
dec
sbb
push
jmp
mov
loope
pop
dec
ljmp
in
outsb
or
fs
pop
test
dec
lods
daa
test
test
mov
push
jmp
sbb
out
daa
popa
mov
mov
mov
pop
and
and
lea
sbb
xchg
mov
mov
pop
rolb
fs
add
jmp
push
mov
adc
mov
mov
inc
cmp
jmp
dec
inc
mov
lods
cmpsl
sub
xor
sti
das
pop
cltd
ss
repz
popa
dec
xchg
adc
sahf
mov
clc
repnz
mov
pushf
cmpsl
fdivp
push
cmc
int
mulb
cltd
xchg
mov
pop
jmp
cmp
jecxz
fnsave
jmp
jo
and
mov
fwait
pop
stos
in
add
loopne
cmp
dec
pop
into
mov
das
leave
scas
daa
pop
cmp
or
loop
jb
push
les
xchg
das
shr
lcall
sbb
adc
es
dec
pop
add
outsb
jns
popa
or
imul
scas
testl
cwtl
pop
imul
and
notl
fstpt
orb
loopne
push
das
add
fsubrl
mov
jg
jo
adc
enter
jmp
dec
inc
aad
fisubs
cmp
add
sar
lret
lods
mov
mov
sub
jp
push
mov
int
pop
loop
jmp
pop
enter
inc
dec
imul
sbb
or
adc
int
sti
cld
imul
pop
add
push
mov
xchg
or
stos
dec
sub
idivb
cmpsl
jmp
cmp
fidivs
jmp
loop
out
jmp
cmp
test
sbb
mov
sbb
or
test
or
fs
mov
stos
or
push
pushl
addr16
pop
xchg
fsts
outsl
sbb
movsl
push
lahf
inc
xchg
jmp
es
adc
mov
testl
push
push
pop
jmp
jns
cmp
dec
jmp
push
mov
ds
in
lods
xchg
dec
fucom
push
xor
or
outsb
icebp
sbb
add
mov
pop
push
xchg
arpl
jmp
in
loopne
add
test
jnp
icebp
lahf
clc
sub
fstp
adc
jle
or
ljmp
stos
insb
jge
pop
cmp
jmp
aam
xchg
loop
sub
add
and
inc
adc
dec
lods
push
lcall
mov
push
jbe
sub
push
jmp
call
or
fsubrp
aas
pop
fwait
jbe
shr
dec
cmp
adc
cwtl
push
sbb
int3
push
push
mov
movsl
popa
rcll
scas
xor
jo
push
jmp
das
pushf
lahf
fildl
mov
xchg
stos
lods
jae
mov
hlt
jl
out
mov
jmp
test
insb
or
sub
inc
fcoml
add
or
xchg
cwtl
dec
adc
outsb
repz
int3
clc
cmpsl
xchg
cmp
pop
dec
fistpll
jmp
adc
inc
enter
fisubs
fs
mov
ret
out
repz
sub
outsl
mov
or
mov
mov
jmp
inc
xchg
sbb
fistps
lods
jns
mov
nop
pop
fld
ljmp
push
lock
cmp
dec
jmp
xchg
ljmp
test
inc
scas
push
or
inc
xchg
xor
mov
loope
jmp
shll
gs
or
mov
jmp
push
pop
cmp
jmp
scas
shlb
lcall
ss
faddl
push
sub
push
ljmp
jmp
adc
jo
inc
iret
mov
xor
jmp
push
test
xchg
mov
fisubrl
fcompl
adc
pop
bound
lret
jmp
icebp
fs
xchg
adc
mov
clc
fdivrl
mov
jmp
daa
dec
popf
mov
lret
push
mov
ja
lcall
or
scas
or
mov
enter
sbb
push
mov
pop
mov
loop
daa
popa
imul
adc
mov
xchg
sbb
jp
adc
sub
adc
and
pop
jmp
out
ja
jge
pop
adc
xchg
scas
mov
jns
movsb
and
cmp
jmp
mov
xor
inc
and
cmp
aam
jmp
add
and
outsl
jnp
dec
loopne
ss
pop
sub
lret
call
xor
push
out
inc
or
mov
or
outsb
mov
and
cmp
mov
jmp
rorb
out
sub
mov
mov
sbb
out
mov
test
sti
xlat
in
call
sbb
add
daa
jle
outsb
jmp
movsb
lret
and
lods
jno
and
mov
push
mov
pop
sub
and
jno
scas
push
jmp
mov
lahf
xor
pop
test
fs
and
sbb
adc
jge
sbb
out
loope
orb
movsb
test
addr16
xor
jmp
rcrl
jp
sub
jmp
push
lea
mov
popf
jmp
sbb
inc
js
pop
xchg
jmp
mov
sbb
sub
test
and
adc
and
push
hlt
gs
imulb
mov
and
and
or
pop
insl
call
jmp
les
and
xchg
jmp
and
dec
inc
sub
je
arpl
test
mov
jmp
mov
pop
or
pop
ficoml
or
es
cmp
out
add
dec
movsb
repnz
out
jmp
call
inc
sub
aaa
aad
js
repnz
sti
int
xor
push
test
decl
pinsrw
and
ret
xchg
gs
fiaddl
mov
mov
stc
cmp
inc
mov
into
sbb
outsb
adc
sti
add
mov
out
add
fdivs
push
pop
rolb
mov
jb
cmpsl
scas
test
mov
ja
jno
inc
add
xchg
aad
rorb
jg
jmp
jae
les
cwtl
stos
and
mov
mov
or
fwait
push
add
jp
jmp
xchg
inc
cmpb
aaa
imul
stc
cmc
jle
fcoml
cmpsb
xor
or
jmp
scas
inc
outsl
pop
sbb
add
jmp
mov
insb
add
andb
mov
hlt
pop
std
ret
jp
lods
sbb
push
cmp
lcall
and
jmp
pop
xor
leave
jmp
xchg
aad
inc
mulb
jmp
ret
ljmp
cmp
lahf
inc
out
fmuls
shr
xchg
hlt
mov
das
jmp
mov
dec
sub
lds
in
movsl
jmp
loopne
rcll
inc
iret
loop
cwtl
pusha
push
cld
pushf
sub
mov
int
test
xchg
imul
int
add
ljmp
call
int
js
sbb
lods
mov
dec
or
and
xchg
xor
pop
sti
xchg
and
cmp
jmp
std
pop
iret
outsb
inc
xor
outsl
jmp
mov
xchg
and
mov
cli
mov
fucomi
and
sub
call
popf
dec
jmp
jo
mov
jmp
ja
sbb
jmp
ret
cmpb
jmp
sahf
andb
sbb
mov
bound
mov
adc
lods
arpl
or
into
xorb
scas
repz
inc
jp
lcall
xor
outsl
jmp
push
les
cmp
out
cmp
int3
inc
mov
sub
pusha
jmp
ret
out
and
xchg
cli
cld
dec
jb
popa
lcall
lahf
dec
jmp
mov
push
push
fcompl
test
sub
cli
stc
imul
movsb
jmp
ss
jb,pt
jmp
mov
dec
mov
xchg
ljmp
ljmp
dec
mov
punpckhbw
pushf
shr
mov
std
or
mov
js
jbe
test
jmp
int3
or
enter
and
mov
jae
stos
xor
sbb
jmp
sbb
jmp
div
or
jmp
and
mov
cwtl
cmp
jmp
in
pop
mov
mull
dec
mov
cmc
pop
xor
lahf
push
cmp
push
in
push
or
lods
xchg
xor
int
or
in
sbb
adcl
adc
sbb
jmp
adc
je
inc
repnz
pop
out
out
sbb
xchg
push
mov
js
lods
adc
cmp
cmp
dec
pop
daa
adc
jmp
fsubr
mov
add
outsb
jp
dec
jmp
and
jmp
mov
je
ljmp
out
inc
shrd
push
out
mov
adc
lcall
xor
lds
sub
add
inc
push
sub
repz
adc
pop
out
or
sbb
cmpsb
mov
dec
rol
mov
jmp
out
fdivrl
pop
data16
lods
hlt
ljmp
mov
push
jge
jl,pt
jo
fnsave
es
xor
outsb
sarb
adc
lock
aas
mov
mov
cmp
jmp
sbb
and
sti
xor
ret
fists
js
sub
jl
jmp
jbe
jns
cmp
mov
cmp
fsubrs
mov
jns
cld
rol
ljmp
and
icebp
pop
inc
add
jmp
fimuls
lods
push
cmp
cwtl
andl
les
inc
adc
pop
daa
repz
inc
aaa
adc
xor
jp
in
mull
sbb
stos
xchg
popa
xchg
jmp
cwtl
dec
push
mov
dec
icebp
jae
mov
push
jo
jecxz
outsb
xchg
mov
jmp
loop
je
lods
pop
shrb
data16
push
and
add
push
lret
or
fwait
sub
xorb
push
pop
pop
sub
mov
inc
jmp
push
pop
inc
out
stos
fucomp
scas
xchg
fiadds
jle
int3
dec
jmp
cmovs
jmp
iret
aaa
mov
jmp
imul
orl
jmp
jns
cmp
jmp
push
mov
jbe
mov
fcmovnu
cmp
cmpsl
xchg
adc
pop
push
in
mov
xchg
test
xor
mov
shll
inc
xor
rorb
pop
dec
sub
fs
push
daa
add
mov
jbe
lock
ljmp
popa
inc
xchg
jmp
ja
inc
and
pop
arpl
jmp
idiv
jl
xlat
jmp
cwtl
inc
pop
jno
popa
data16
and
sbb
icebp
fdivrp
mov
inc
pop
bound
jmp
xor
mov
cmp
test
popf
into
dec
test
and
shll
cmp
push
mov
push
pop
jmp
daa
popa
ljmp
cmp
pop
jns
call
imul
lds
jl
cltd
fnsave
int
mov
pop
inc
mov
inc
cmpsl
lahf
bound
mov
cmp
push
pop
outsl
pusha
push
in
adc
andl
sbb
jmp
jae
add
xchg
aam
fucomi
mov
mov
daa
jmp
inc
cmp
xchg
pop
mov
mov
lahf
jbe
cmp
jmp
jae
dec
adc
data16
faddp
into
pusha
shrb
cwtl
mov
adc
inc
scas
je
fidivrs
and
xchg
nop
lods
cs
ret
lret
addr16
jp
movsl
cmp
mov
jae
shlb
popf
jmp
insb
pop
das
dec
cmp
lret
sbb
andl
outsl
das
adc
and
jmp
inc
cmp
mov
imul
cld
outsl
xchg
push
mov
push
jmp
stos
cmpsb
aad
stc
or
cmp
dec
dec
add
lret
xor
adc
stos
in
jmp
es
sbb
hlt
jmp
mov
dec
or
push
xchg
jmp
mov
xor
lods
pop
sbb
mov
and
ds
in
mov
data16
add
enter
jle
stos
arpl
and
shrb
pop
cltd
dec
movsb
jb
das
and
lods
leave
lea
loope
and
cwtl
les
shll
add
in
mov
dec
mov
in
mov
lcall
lret
shr
add
test
loope
insl
jmp
xlat
out
call
jmp
cwtl
imul
jmp
or
outsl
jp
sbb
jmp
neg
movsb
es
jmp
pop
lods
movsl
jle
addr16
jb
and
mov
test
mov
add
stos
movsb
aam
std
mov
jmp
and
lods
mov
dec
xor
pushl
repz
movsl
push
push
rep
jmp
loope
ficoms
ss
cmp
ja
mov
shll
das
jmp
mov
mov
fdivrl
jle
ja
inc
lock
in
cmp
clc
xchg
data16
int
xchg
es
mov
gs
cmpsl
insb
test
sub
or
je
mov
add
stc
cs
jp
psubusb
icebp
pop
jmp
push
rcll
or
stc
popf
xchg
fists
jns
fsubrp
pop
in
sub
pop
addr16
rolb
mov
jge
xor
in
sbb
inc
mov
lods
mov
stos
jnp
pushf
and
int
cmp
adc
cmp
sbb
add
in
test
or
sub
jmp
xlat
pop
repnz
ss
jmp
cmp
imul
mov
add
jmp
push
test
cmpl
jmp
aaa
sti
and
and
insl
lods
push
xlat
sbb
imul
or
jno
sub
jb
test
sbb
xchg
or
or
popa
sub
in
lea
mov
pop
test
out
pop
imul
scas
xorl
ljmp
add
nop
cmp
jmp
enter
mov
sbb
or
call
add
mov
jbe
jno
data16
and
stos
sub
lea
mov
js
out
arpl
or
mov
nop
outsl
pop
shrb
adc
les
mov
mov
xorb
incl
call
imul
mov
dec
das
jmp
in
pop
cmp
mov
and
in
das
les
push
scas
xor
insb
and
dec
shr
es
adc
jp
repnz
xchg
xor
sub
iret
mov
out
jo
jmp
or
xchg
push
inc
cmc
jnp
movsl
jmp
sbb
and
jmp
or
mov
adc
and
cmc
add
lods
cmpsb
ret
xchg
sti
jmp
sbb
sub
push
les
std
mov
and
jmp
leave
rcr
ficomps
dec
ljmp
xchg
pop
dec
sub
dec
adc
out
sub
cmp
pop
jle
cmp
inc
movsb
mull
ja
jmp
aam
jmp
sbb
sbb
jmp
pop
jl
mulb
fldt
adc
arpl
ficomps
loopne
sub
shll
out
ss
test
fldenv
dec
imul
or
and
jmp
mov
adc
mov
sti
and
out
add
or
test
inc
lods
ret
ficoml
sbb
push
adc
lock
add
leave
fimuls
mov
sub
and
std
jmp
clc
push
lock
orb
jmp
ljmp
or
xor
or
cmpsl
cmc
jmp
add
lods
dec
pop
jmp
push
fcomps
sub
loope
in
xchg
and
bswap
jmp
iret
or
fs
je
jmp
in
jnp
and
sub
jo
pop
enter
sub
sbb
inc
mov
xchg
jmp
bound
or
and
cmpb
lcall
push
adc
loop
out
cmpl
into
jmp
iret
mov
loopne
jmp
scas
fimuls
or
sub
sub
mov
cmpsb
icebp
scas
sbb
xchg
lahf
sub
cmpsb
rcrl
inc
call
push
or
mov
sub
push
repz
and
mulb
jbe
imul
pop
andb
jmp
dec
shrl
or
sub
xor
adc
int3
mov
leave
jp
and
push
jmp
pop
or
push
insl
push
jmp
cmc
sub
arpl
lret
sahf
aam
es
adc
mov
stc
pushf
dec
jmp
lahf
push
push
xor
jmp
jecxz
mov
negl
mov
mov
mov
andl
loop
dec
fwait
jmp
mov
repnz
push
and
sub
jmp
inc
mov
addr16
add
seta
pop
out
dec
push
or
dec
mov
push
mov
pop
repz
jmp
adc
dec
lahf
push
mov
fidivrs
cmc
jmp
add
pop
or
push
jge
fldenv
into
stos
or
popf
in
dec
inc
and
popl
adc
xchg
and
sub
shlb
and
xchg
rcrb
popa
jl
cltd
or
lret
push
jno
sub
subb
addl
cmpsl
and
jmp
inc
hlt
insl
jge
or
mov
adc
pop
dec
arpl
cmpsb
fwait
xor
sbb
inc
mov
jmp
and
mov
jbe
scas
jmp
or
lret
jmp
jle
pop
lods
pusha
ljmp
push
sub
and
inc
pop
or
nop
jmp
out
repz
push
jmp
bound
and
cld
xchg
add
ss
adc
jmp
sbb
popf
insb
add
inc
out
bound
cwtl
pusha
or
gs
sti
std
xchg
fisubrl
aam
pop
scas
lcall
shrb
xor
stc
xchg
fistpl
jmp
loopne
das
imul
mov
rorb
mov
sbb
inc
fwait
or
xchg
jbe
jns
rcrl
movsb
mov
dec
ds
in
adc
jmp
test
jmp
stos
or
sub
lock
cmp
add
jnp
mov
fistpll
lahf
mov
mov
inc
jmp
sub
and
inc
mov
or
lods
dec
test
xchg
ficompl
sbb
test
repnz
testb
lods
daa
data16
mov
jmp
ret
mov
cmp
sub
daa
push
dec
scas
dec
imul
xor
mov
sbb
subb
pop
sahf
xchg
cwtl
fmull
add
xchg
sti
jo
dec
sub
jmp
xchg
stc
outsb
sbb
movsl
mov
ja
or
sahf
mov
dec
mov
inc
fists
or
in
mov
sbb
jmp
test
adcb
fidivrs
inc
and
sub
clc
test
mov
jmp
out
cmp
mov
dec
rolb
add
and
and
jmp
cld
pop
mov
and
or
cmp
xor
or
or
jmp
adc
sub
lods
flds
sbb
jmp
cmpsl
addr16
testb
jmp
xchg
pop
xor
out
jge
cmp
mov
jmp
push
push
xchg
outsb
outsb
mov
shlb
and
subl
mov
pop
outsb
jmp
pushf
int
adc
imul
mov
les
pop
jb
call
cmp
jmp
out
pop
mov
jle
stc
xchg
and
insl
adc
adc
fcompl
ja
idivb
dec
cwtl
jmp
rorl
int3
jmp
push
push
jno
inc
jae
scas
ds
or
sub
incb
push
xor
and
jmp
xchg
xor
scas
mov
cmpsb
cmp
jmp
movsb
add
sub
jmp
xlat
pop
pusha
and
std
dec
lods
inc
aam
jmp
das
jp
gs
xchg
mov
cmp
movsb
mov
into
pop
dec
lret
loopne
jmp
scas
jle
xor
mov
in
jmp
jl
xchg
into
sub
xor
and
sub
and
clc
frstor
and
imul
test
lahf
mov
add
adc
int3
push
mov
cmp
jmp
xchg
and
daa
add
nop
sub
mov
pop
pop
dec
sub
mov
lret
repz
pusha
push
mov
into
add
xor
mov
stos
xlat
loopne
dec
jmp
push
mov
xchg
or
imul
ds
mov
jb
mov
aam
jmp
adc
cmp
ljmp
in
mov
lods
jmp
cmc
pop
test
mov
mov
cmp
popf
enter
push
sbb
push
aaa
ljmp
mov
test
dec
and
stos
femms
scas
and
mov
jle
and
es
push
ljmp
mov
lahf
jecxz
mov
popa
hlt
xchg
pop
jmp
imul
test
xor
push
inc
mov
mov
repz
adc
aas
or
add
jmp
xchg
shrl
or
jmp
xchg
das
popa
adc
mov
call
jle
scas
in
xlat
enter
in
dec
or
rolb
lcall
aaa
mov
into
fwait
cmc
jecxz
add
pusha
mov
fnstsw
out
jmp
xor
jl
push
ret
mov
dec
mov
jmp
xchg
shlb
cmp
push
dec
push
aam
pop
jmp
inc
and
add
cltd
xor
inc
dec
adc
sub
jle
dec
and
cld
jmp
push
pop
sub
jp
cltd
aam
add
out
fisubl
or
sahf
fwait
scas
jno
sub
and
sub
inc
jnp
pop
outsb
cmp
or
repz
dec
jecxz
sbb
mov
dec
jb
push
out
jmp
pop
dec
stos
out
xor
es
divps
sub
sub
adc
mov
mov
in
dec
sub
in
movsb
and
push
xchg
jnp
mov
in
nop
mov
decb
mov
push
add
shr
int3
mov
jb
pop
lret
in
pop
lret
out
sbb
jae
jmp
push
or
xchg
ss
jle
jmp
add
jmp
cmp
aad
adc
pushf
fwait
test
push
lret
xchg
lods
push
fldl
and
mov
incb
mov
fisubrs
jmp
cmp
out
cwtl
jmp
pop
shll
jmp
inc
cmc
inc
mov
push
dec
jmp
fmulp
cmp
sub
mov
notl
jns
dec
scas
int
cmp
stos
les
adc
inc
jmp
fwait
pop
js
insl
sub
ret
add
and
add
lea
and
dec
adc
push
or
arpl
jg
jmp
push
mov
xchg
mov
fs
jmp
pusha
and
and
inc
outsl
xchg
add
pop
add
xchg
sub
cmp
scas
cmp
jmp
xchg
jne
lds
add
aam
dec
mov
mov
push
dec
jb
cmp
or
sub
xor
enter
jmp
fsubrs
and
jae
inc
lds
mov
mov
mov
jmp
aam
or
jne
sbb
cmp
cmp
jmp
push
sub
sbb
inc
inc
pop
popa
into
xlat
and
pusha
mov
sbb
lods
jp
not
int
sbb
rorb
jbe
and
popf
inc
movsl
mov
pop
xchg
fwait
mov
js
lahf
test
and
daa
fsubrs
sti
repz
mov
push
jmp
add
out
in
or
mov
jno
in
mov
fsubrs
repz
mov
mov
mov
jg
loope
stos
mov
mov
mov
mov
mov
movsl
jmp
pop
insl
inc
loopne
movsb
xor
cmp
cmp
mov
lds
mov
jmp
aad
cmc
jne
movsl
and
scas
and
add
mov
test
sub
sbb
repnz
inc
dec
cmp
sti
pop
inc
xchg
pop
in
sub
cli
or
repnz
lock
dec
mov
jmp
test
jo
popf
lock
je
lods
inc
int
mov
adc
dec
inc
sti
loop
add
sbb
movsb
dec
jns
cltd
add
mov
pop
out
nop
scas
push
mov
jae
add
and
pop
adc
adc
fmull
sbb
xorl
cwtl
js
adc
add
out
daa
pop
std
addr16
pop
adc
daa
inc
jne
and
aam
jmp
ds
stos
add
or
mov
pop
stos
scas
sub
pop
outsl
sbb
popa
push
sub
or
insl
sub
lret
sub
adc
sub
pop
adc
sub
inc
jmp
idivb
mov
sar
xor
out
jo
imul
pop
fisubrs
int
sbb
push
jp
jmp
push
mov
mov
mov
mov
es
mov
mov
fldl
mov
lods
ja
iret
push
or
scas
or
sub
jmp
jp
push
je
gs
mov
aam
adc
getsec
sub
cld
and
mov
mov
insb
jp
pop
pop
out
xor
test
push
sarl
popf
sti
and
dec
dec
cmpb
sub
and
inc
scas
in
lods
inc
mov
push
sub
mov
lret
insb
xor
jmp
adc
mov
or
xor
xchg
popf
push
mov
daa
jmp
push
stc
aad
fwait
jmp
inc
loope
push
inc
or
pop
lea
popa
leave
aam
cmc
fildll
ljmp
in
addr16
jmp
xchg
out
or
sbb
or
sbb
pop
jo
pop
xchg
mov
aaa
popf
push
push
ds
loop
lcall
push
bound
xor
mov
push
mov
rolb
stos
jmp
jno
cs
pop
push
aad
pop
jo
and
and
jmp
dec
outsb
neg
xor
scas
ds
pcmpeqd
and
mov
or
xchg
cmpl
es
scas
mov
fwait
int3
push
shlb
inc
sub
sub
cmpsl
fcmovbe
or
scas
and
push
xchg
pop
pop
mov
std
sbb
xchg
mov
inc
mov
dec
sub
add
outsb
jmp
sbb
popf
test
addr16
lret
xor
lea
lods
dec
ret
cmpsb
cmp
insb
mov
sub
jle
xchg
cmp
push
in
jno
xchg
or
fldcw
jmp
in
sub
mov
jmp
xchg
push
arpl
lods
imul
inc
cmp
pop
pop
leave
jmp
movsb
mov
mov
imul
out
out
jmp
add
es
mov
and
cmp
or
jge
jle
add
daa
popf
cmp
stos
jo
mov
push
dec
and
arpl
mov
mov
mov
je
xor
out
cmp
jmp
cld
dec
xor
outsl
shrl
popf
int
adc
pop
jno
jb
test
or
xchg
movsl
nop
in
ds
xor
pop
test
sub
out
out
lea
imul
sub
or
icebp
sbb
jmp
fadds
xchg
jmp
adc
sahf
add
addr16
mov
lret
add
mov
ljmp
jmp
push
imulb
push
cwtl
lods
lcall
and
scas
aas
add
dec
mov
and
mov
push
adc
jmp
push
fdiv
sti
fwait
add
outsb
into
insb
aas
and
jmp
rcr
push
push
adc
lods
repz
xchg
and
ud2
pop
test
pop
out
popf
call
scas
add
loope
mov
ret
and
jmp
push
andl
mov
insb
mov
mov
scas
inc
pushf
jp
push
or
mov
inc
fs
jmp
mov
push
xchg
in
jo
sbb
mov
lods
xlat
scas
inc
das
sub
imul
xor
xor
add
imul
rcrb
adc
jge
test
das
je
adc
out
mov
mov
pop
mov
mov
add
sahf
pop
adc
in
mov
adc
xchg
out
orb
fdivrs
out
push
xchg
dec
push
scas
in
jp
ficoms
aam
movsb
sub
sahf
jmp
mov
cmp
stc
xadd
jp
loopne
pop
push
mov
add
pop
sbb
leave
std
hlt
jb
mov
pop
faddl
rclb
inc
or
pusha
xor
lods
or
jmp
sub
sub
inc
mov
jmp
aad
mov
cmpsb
jb
shll
mov
push
inc
mov
mov
pop
jmp
xchg
xchg
add
aad
les
cmp
nop
lods
push
or
aas
mov
jmp
ud1
cmpsb
adc
pop
cwtl
lods
jmp
pop
add
push
or
cmp
and
jo
adcb
jp
mov
daa
enter
push
popa
mov
repnz
inc
lods
lahf
out
xchg
sbb
inc
scas
cmp
jmp
addr16
pop
loopne
repz
fsubr
xor
sbb
rcll
es
adc
cmpsl
in
xor
xor
shl
mov
dec
adc
sti
test
imul
addb
imul
daa
ret
scas
cmpsl
hlt
out
or
jmp
pop
inc
adc
cs
ja
xor
mov
push
int3
loope
stc
jmp
jb
mov
scas
pusha
cltd
cmp
add
jle
scas
mov
xchg
cmp
push
pop
jmp
pop
ret
cli
jmp
shll
jmp
int
les
pop
outsb
or
push
mov
sbb
xchg
scas
jmp
cli
add
mov
jg
cmp
jmp
push
fldl
jmp
jbe
xchg
std
ljmp
mov
loope
jl
jmp
pop
jb
addr16
repnz
xor
inc
ja
add
cmp
test
jmp
cmp
add
lea
call
inc
or
jmp
in
adc
jno
jmp
rorl
push
jmp
adc
adc
jbe
shrl
int3
mov
mov
rclb
xchg
jmp
add
jmp
les
add
mov
xor
clc
jnp
jmp
stos
sbb
push
jmp
cwtl
dec
aaa
xchg
int3
xor
mov
jae
jne
or
bound
xchg
or
imul
mov
out
fdivs
adc
sti
push
out
cmp
mov
push
or
mov
mov
adc
divl
jmp
mov
push
fmull
inc
jmp
hlt
jbe
nop
mov
les
mov
int3
mov
or
sub
aas
sahf
jmp
xchg
lahf
mov
jne
mov
cli
xchg
adc
inc
inc
stos
pop
outsb
into
cmp
or
in
fnstsw
jne
rdmsr
stc
test
and
sbb
shr
fcompl
push
mov
in
mov
jo
cs
stc
aas
xlat
clc
sbb
sahf
scas
or
push
jmp
jae
jb
shlb
data16
les
cmp
je
xor
add
sub
xor
jmp
adcl
aas
xor
or
and
sbb
and
mov
out
jmp
std
jmpw
mov
jmp
movsb
mov
jmp
pop
jle
jnp
adc
mov
mov
mov
adc
int
mov
shlb
jo
inc
jmp
js
push
cmpsl
push
cmp
into
inc
cmp
fs
lret
std
int
sbb
sub
repz
pop
or
jmp
shll
push
or
imull
inc
js
cmp
cmpsl
xchg
imul
sbb
mov
std
cli
push
lods
outsb
sbb
lahf
inc
sbb
pop
pushf
es
jmp
push
test
sbb
es
das
adc
fsubr
push
bnd
mov
js
jmp
fcoml
mov
or
cld
pop
jns
into
jo
mov
pushf
dec
int
sbb
outsl
jae
mov
or
aaa
mov
dec
shlb
ficoml
and
mov
divl
push
rorl
cmp
roll
lret
pop
idiv
fcomi
mov
sbb
mov
and
jns
jmp
xlat
dec
rolb
adc
and
jmp
push
dec
lret
loopne
jmp
out
pop
xlat
movsb
xchg
imul
inc
cli
jmp
aad
lea
scas
rcrb
jmp
cmc
mov
in
jecxz
jmp
adc
adc
jge
mov
fwait
lods
sbb
mov
lret
movsb
shr
pop
std
push
jge
xor
adc
pushf
jle
cwtl
jmp
cmp
cmp
jmp
jnp
push
outsb
push
jns
jmp
jo
movhps
pop
out
or
dec
mov
push
lea
cmp
aas
mov
out
cmpsl
xchg
jmp
mov
mov
dec
subl
loope
cmpsl
out
xchg
jp
jb
es
sbb
xor
dec
jmp
orl
leave
into
pop
xchg
test
lods
clc
repnz
in
inc
out
push
push
jns
lahf
or
mov
or
push
lods
jns
or
and
and
mov
mov
jmp
popf
movsl
mov
jmp
and
dec
jmp
mov
push
jo
jge
jmp
inc
aam
dec
sub
and
push
mov
adcl
pop
adc
mov
pop
mov
mov
lret
push
data16
pop
fucomip
push
xor
stos
jbe
jae
outsb
push
hlt
cmp
mov
out
cmp
shr
and
sbb
cwtl
cmc
fld
dec
jge
iret
jmp
jp
cmpsb
inc
xorl
cs
mov
imul
sbb
jnp
pop
or
loope
rep
imul
ljmp
jmp
or
cmpsb
repz
pushf
or
sub
jmp
arpl
pusha
jmp
bound
outsl
jmp
or
divb
movsb
iret
mov
mov
or
pop
stos
shrb
jmp
daa
es
pop
popf
clc
hlt
test
jmp
mov
and
jmp
jb
cmp
inc
adc
jmp
lahf
sbb
ficomps
cmp
aad
dec
xor
sub
in
sbb
pop
cmpsb
adc
xorl
enter
inc
mov
pop
imul
sbb
insl
xchg
jge
je
fsubrl
sub
fdivrs
mov
adc
ljmp
push
pushf
out
pop
fwait
stc
sub
incl
cmp
sbb
aaa
test
push
add
jmp
push
sbb
jmp
out
insl
dec
daa
add
hlt
cmpsl
lods
repnz
mov
lea
int3
popa
enter
or
jmp
sub
repnz
movsb
jmp
inc
and
adc
jmp
push
sti
sub
or
jmp
lods
pop
sub
jmp
adc
wrmsr
sub
cli
lods
jmp
notl
outsl
in
scas
push
arpl
fimull
jmp
pushf
pop
dec
mov
mov
or
jbe
jmp
mov
hlt
push
sub
jns
cli
mov
js
xor
push
jmp
dec
push
lret
clc
jb
sub
jmp
test
xchg
mov
mov
sbb
pop
scas
mov
in
sbb
sub
cmp
out
xchg
pop
addr16
jl
xchg
pop
mov
in
mov
test
sub
outsb
jmp
jns
sbb
mov
or
adc
inc
imul
sti
jb
repz
ljmp
inc
imul
or
push
test
dec
add
push
adcb
lret
dec
adc
ud1
jns
and
insb
stc
shll
ret
xor
js
repnz
add
lods
mov
xchg
jmp
out
mov
imul
jmp
push
add
clc
ret
jmp
dec
push
xchg
outsl
pop
outsb
jmp
jne
xor
jmp
add
jecxz
ss
outsb
jns
imul
jmp
or
pop
mov
jmp
sub
and
cwtl
xchg
xchg
dec
icebp
or
push
sbb
and
jno
sbb
dec
ret
xor
dec
movsb
dec
pop
out
push
in
dec
std
and
frstor
cltd
pop
iret
sti
mov
repz
and
jae
or
jmp
stos
push
mov
jge
or
xchg
shll
in
push
iret
lea
adc
mov
mov
sub
ficompl
fiadds
mov
mov
cmp
adc
cmp
add
pop
mov
inc
jo
jmp
xor
dec
fidivrs
mov
pop
or
jo
mov
mov
fistl
xchg
push
mov
lods
dec
jnp
push
mov
jmp
imul
lea
mov
cs
add
testb
out
into
cmp
jns
call
push
sbb
jmp
push
sti
fiaddl
stos
jmp
xor
lahf
jmp
inc
cmp
pop
sub
jmp
pop
adc
loope
cld
sub
mov
aaa
inc
xchg
dec
dec
setae
dec
sbb
push
jmp
xchg
xor
imul
mov
sub
arpl
sti
aam
andb
mov
xor
fdivs
xor
mov
shr
ja
daa
pop
add
jmp
loop
das
adc
shlb
mov
shrl
sti
imul
lcall
push
sbb
xor
push
aam
jne
sub
outsb
cmc
jmp
testl
and
inc
fwait
into
and
lods
iret
insb
xchg
in
mov
out
xor
mov
pop
int3
jmp
in
cwtl
sbb
push
cs
inc
ret
daa
mov
outsl
icebp
xchg
mov
cmp
mov
jno
jbe
and
xchg
jmp
xor
cwtl
adc
fwait
sbb
fs
and
lea
addr16
iret
sbb
mov
push
jmp
shl
mov
in
jmp
arpl
dec
jge
mov
jmp
mov
jmp
xor
movsb
push
stos
sahf
xchg
stos
test
cmp
fbstp
mov
scas
imull
mov
mov
pop
hlt
sbb
jg
mov
insl
les
jmp
imul
jmp
mov
leave
jo
jmp
jl
fistl
movsl
jbe
int
decl
jmp
insw
pop
or
lret
jp
push
cmp
cmp
js
pop
lods
daa
sbb
pop
or
jo
sbb
movsb
add
xor
push
lods
js
insb
mov
cmp
ret
loope
jmp
fsubr
sbbb
jns
jmp
out
push
scas
xchg
cmpb
fidivs
test
xor
lret
iret
stc
test
mov
rol
jmp
mov
les
cmp
adc
or
loopne
inc
dec
mov
push
repnz
ret
adc
fistl
addr16
data16
mov
jmp
or
lods
cmp
cmpsl
and
sub
xor
pop
insl
fisubs
cmc
mov
rorl
push
sbb
inc
cmp
lods
and
mov
outsl
mov
repz
push
push
faddl
clc
jb
push
je
jmp
ljmp
cmp
or
sbb
lock
jb
das
sti
frstor
jmp
je
shll
loop
mov
in
adc
jmp
push
mov
pop
push
shll
pop
xor
ret
sarb
mov
pop
dec
mov
lahf
jmp
ret
movsb
adc
mov
mov
lcall
leave
inc
push
sub
mov
lea
jmp
nop
test
lods
scas
lock
mov
xchg
push
aas
pop
pop
mov
jmp
out
add
shr
adc
in
test
cwtl
jmp
mov
mov
pushf
push
lret
jmp
and
cmp
jmp
pxor
int
ret
mov
push
test
jle
lea
xor
jge
sub
stos
sbb
cmp
cltd
jle
pop
mov
mov
fistl
lock
mov
hlt
mov
imul
pop
cmpsb
std
sub
outsb
out
fstps
sbb
adc
dec
xor
mov
mov
sub
push
hlt
and
arpl
je
push
inc
adc
fnstenv
or
sub
sbb
sub
cmp
xchg
mov
shlb
pop
daa
cwtl
jge
sub
mov
push
mov
icebp
int
fsts
sub
dec
cmp
sub
lahf
sub
mov
pop
mov
sbb
jmp
addr16
cmp
sti
push
cmpsb
in
add
mov
jbe
push
jmp
and
inc
mov
inc
jmp
popa
push
pop
mov
loope
jmp
fmul
mov
jmp
inc
cs
fildll
test
lods
adc
popa
ret
sbb
push
xchg
sbb
test
xor
out
repz
or
push
jge
add
jmp
mov
inc
test
insl
add
jmp
adc
or
jmp
ds
sub
cmpsb
iret
pop
inc
dec
aas
shrb
mov
movl
push
mov
outsb
xchg
sbb
pop
push
in
into
jmp
sbb
bound
or
push
and
daa
pop
jmp
sub
stc
shr
rolb
stos
sub
nop
jmp
cld
sub
jmp
mov
or
pop
add
mov
push
and
jmp
dec
cs
xor
test
stos
push
xchg
outsb
xlat
xchg
sbb
call
repnz
shll
mull
stos
imul
pop
outsb
xchg
sbb
mov
mov
and
push
dec
jne
xchg
daa
push
xor
add
mov
mov
or
mov
sbb
test
aaa
pop
or
out
xor
jl
jns
mov
hlt
stos
jle
xchg
jnp
outsb
scas
mov
cwtl
and
jmp
jle
pop
pusha
sahf
mov
dec
dec
lret
and
stc
jmp
daa
cltd
ljmp
jle
dec
pop
into
rolb
out
cmp
sub
outsb
inc
sbb
lahf
adc
in
sub
push
test
fldl2e
sub
or
cmp
shll
inc
movsb
or
mov
mov
mov
push
sub
inc
sub
and
mov
out
xchg
pop
sub
lea
sub
outsb
jmp
inc
pop
insl
mul
mov
pop
stos
pushf
out
mov
inc
jmp
jmp
arpl
cmp
pop
out
adc
cli
stos
iret
mov
sub
sti
jmp
push
ret
jmp
mov
aad
daa
int
jg
dec
adc
test
xchg
out
jmp
ret
call
repz
jl
scas
insb
fucomip
xor
add
mov
ja
mov
scas
rclb
jge
sbb
pop
jns
icebp
pop
aas
push
and
cmp
ljmp
int
xchg
popa
sbb
jg
inc
add
xchg
mov
dec
xchg
enter
and
xchg
fsubr
addb
mov
lods
push
mov
shll
bound
cld
std
jbe
xchg
sbb
adc
adc
mov
xlat
fildll
stos
and
inc
scas
push
sahf
ljmp
lahf
jmp
pop
aaa
imul
enter
arpl
sbb
scas
addl
dec
mov
fucomi
iret
push
sub
cld
xor
std
or
cltd
pop
jmp
fstl
push
lods
mov
sti
xchg
lcall
fs
cmp
fimull
dec
and
cld
jmp
jecxz
mov
repnz
imul
mov
sub
gs
mov
xchg
icebp
stos
jge,pn
mov
push
jb
xchg
imul
push
mov
sti
cld
inc
mov
mov
sub
adc
lds
mov
faddl
sub
pop
cli
bound
sub
inc
imul
outsb
gs
pop
leave
cmp
or
in
lods
add
adc
jmp
xor
outsl
pop
call
mov
ljmp
or
mov
clc
lods
mov
xchg
sbb
fimull
vmread
ret
int
add
lea
ss
inc
movb
jmp
push
negb
movsb
in
sub
hlt
jno
adc
push
inc
or
lods
rcl
jmp
adc
inc
mov
jmp
lret
ret
cld
in
mov
xchg
int
adc
pop
arpl
imul
jge
test
sub
lock
in
or
out
xchg
fildll
xor
adc
or
mov
adc
dec
sahf
jmp
dec
cmp
leave
cs
lcall
std
call
jmp
push
xorb
ja
fwait
or
push
out
les
sbb
xor
js
cmpsb
shrl
sbb
in
jmp
imul
sub
mov
mov
stos
rolb
ljmp
jo
sbb
jmp
lahf
fwait
xlat
cld
orb
pop
mov
sti
shlb
mov
jmp
shrl
setns
jmp
cmp
sub
mov
jmp
or
add
std
dec
pop
adc
pop
adc
pop
clc
jmp
mov
xchg
and
gs
inc
adc
shll
jmp
mov
mov
repnz
and
cmp
mov
mov
jmp
pusha
insl
mov
jmp
les
and
sbb
lods
jnp
cli
loope
nop
scas
add
inc
mov
lcall
cmp
push
mov
idivb
hlt
xor
jbe
add
pop
pushf
repnz
out
lods
mov
and
mov
ss
adc
pushf
ljmp
mov
test
push
leave
mov
add
sar
jo
push
fidivrl
in
xor
aad
and
push
je
jmp
loopne
std
cli
pushf
inc
xlat
jmp
xchg
dec
pop
and
imul
push
inc
repnz
hlt
cld
sub
sbb
mov
xchg
adc
out
loope
pop
cltd
sbb
dec
push
push
and
insl
mov
xor
or
xchg
sub
xchg
push
pop
ret
and
leave
jmp
clc
mov
cmp
jmp
mov
and
fisttpll
ror
fsubp
loopne
shr
sbb
addl
arpl
pop
mov
adc
xchg
jae
stc
std
cmp
and
push
adc
jo
sbb
and
inc
pmaxub
addr16
lret
pop
dec
add
sub
frstor
int
in
push
jp
jmp
push
lods
push
out
jmp
push
sti
shl
pusha
fs
mov
push
or
mov
idivl
sub
xchg
dec
push
iret
jmp
call
dec
cltd
jmp
ror
lahf
inc
sbb
cwtl
cli
loop
mov
cli
fnsave
jo
cld
lock
rclb
jmp
push
inc
dec
fwait
adcl
jns
dec
xchg
out
adc
or
pop
out
gs
test
aas
loopew
mov
adc
jle
mov
and
jno
jmp
scas
and
jp
or
stc
and
test
xchg
lods
jbe
mov
add
out
out
or
jae
xchg
lock
scas
and
sbb
inc
mov
inc
cs
push
sbb
imull
and
push
and
scas
repnz
or
adc
jle
inc
xchg
xchg
xchg
ret
adc
jmp
pop
dec
sub
xor
jmp
sub
arpl
dec
fs
xor
pop
inc
jp
dec
sbb
adc
pop
test
loop
sub
call
lods
jecxz
mov
lock
jmp
push
or
insb
cmp
in
ds
pusha
mov
fnstsw
enter
pop
xor
sbb
sbb
hlt
jp
jmp
stos
imul
sbb
xchg
fbld
lods
int
xchg
repnz
sbb
loop
adc
or
adc
clc
outsb
mov
adc
jnp
dec
mov
stc
sub
sub
dec
je
and
push
test
ja
sub
stos
xor
dec
sbb
hlt
ret
jmp
xchg
xlat
in
imul
xor
enter
or
sbb
dec
imul
shlw
and
mov
xchg
sub
or
aas
mov
addb
out
or
inc
inc
jmp
pop
push
cli
mov
jge
cmp
imul
pop
fmuls
lea
fildll
scas
call
jg
fstl
test
sub
sti
sbb
sub
xor
jmp
or
push
jg
arpl
in
lahf
mov
inc
jmp
inc
into
lods
push
mov
jmp
adcl
jmp
and
mov
sub
jmp
xchg
in
int
movsb
jg
and
and
adc
ds
add
nop
mov
scas
lods
pop
test
push
xlat
and
and
xchg
es
sbb
je
cmc
sub
add
pop
mov
pop
jmp
sahf
vmovaps
gs
push
rolb
loop
jmp
outsl
sarb
sbb
js
jmp
imul
xlat
pop
push
jmp
jl
dec
or
enter
fdivrs
push
cld
jo
adc
mov
xor
cwtl
clc
sbb
outsb
pop
shrd
and
jmp
cmp
cmp
insb
repnz
adc
sti
call
push
xor
or
sub
iret
mov
pop
push
rcll
aas
jo
js
mov
jmp
push
flds
jmp
rolb
mov
adc
xchg
sbb
aaa
ds
lahf
cmp
stos
test
jl
add
xor
aam
inc
sub
out
jp
popf
jmp
arpl
aaa
pop
repz
jmp
imul
aam
mov
inc
ss
push
loopne
sbb
inc
js
sub
fwait
ret
xchg
repz
jmp
mov
shll
push
mov
loop
jecxz
push
ja
jmp
rol
add
sub
loope
mov
hlt
pop
jbe
cmp
jmp
pop
cmpb
xlat
loopne
jecxz
jmp
ljmp
stc
sub
xchg
cmp
jmp
in
mov
dec
jmp
xor
outsb
nop
mov
inc
sti
mov
jmp
cltd
mov
sbb
xchg
jmp
and
mov
shlb
inc
mov
xor
or
sti
into
xor
adc
cli
cltd
sub
jmp
pushf
inc
dec
fucomp
xor
cwtl
mov
test
pop
pop
mov
adc
pop
push
add
cmp
xchg
jmp
mov
sbb
pop
jmp
jecxz
arpl
loop
jmp
mov
divl
repnz
jmp
pop
sbb
lods
cwtl
js
out
xlat
sti
imul
mov
cs
outsb
pop
inc
es
sub
add
and
loopne
inc
mov
cmpsl
add
cmp
mov
push
jns
outsb
lods
sti
or
mov
and
fbld
xchg
jmp
test
lods
add
lret
repz
xchg
ss
add
or
shlb
mov
jecxz
jmp
mov
jmp
sub
mov
sub
jl
pop
bound
xchg
hlt
pushf
das
clc
lods
loopne
cmp
mov
mov
aam
lahf
in
or
shlb
xchg
mov
out
dec
icebp
mov
or
xchg
adc
xchg
popa
cmp
rclb
cwtl
mov
xor
mov
mov
jns
lcall
xchg
icebp
jmp
loope
bound
and
adc
pop
jno
lret
int
xchg
sub
aad
sbb
sub
cmp
add
mov
popa
js
jge
mov
stos
jmp
lods
mov
scas
insl
mov
cmpsl
sub
and
mov
mov
pop
call
hlt
stc
aaa
push
xchg
out
mov
jo
adc
mov
outsb
jge
mov
jmp
sahf
xlat
daa
into
lods
jecxz
aam
cs
andl
adc
jmp
jnp
jne
mov
hlt
in
xor
or
mov
mov
test
sub
fcmovnbe
inc
adc
mov
mov
lods
scas
jmp
jnp
mov
jl
push
scas
dec
push
pushf
loope
pop
push
push
inc
es
and
arpl
dec
fadd
test
int
pop
add
shr
pusha
mov
aaa
adc
pop
mov
test
pop
ljmp
cmpsb
imulb
test
out
sub
sub
jmp
pop
jle
xor
xchg
std
dec
out
jmp
movhps
jmp
addl
lahf
aam
cmp
or
inc
push
clc
js
mov
cs
and
jne
lods
sub
or
dec
lret
lods
mov
sbb
jmp
pop
jmp
jge
cltd
lods
push
adc
sti
mov
cmp
xchg
add
dec
popa
sub
fsubrs
ret
aaa
jmp
pop
fcmovu
in
jbe
add
sub
hlt
mov
dec
jmp
and
sbb
add
pop
sub
or
insb
cld
mov
and
sbb
jmp
sahf
jb
lods
sub
sub
push
inc
scas
lods
xchg
adc
ja
loope
fwait
mov
mov
mov
lods
xor
nop
jl
jmp
mov
jb
xor
icebp
sbb
push
aam
fsubr
rorb
aad
jp
xor
xchg
data16
repz
js
or
mov
and
test
jmp
sbb
xor
jmp
push
ret
adc
jb
cmp
push
mov
cmp
xchg
cld
std
icebp
enter
cmpb
xor
mov
adc
dec
cmp
jne
insl
jmp
pop
jge
sbbb
push
jmp
fnstcw
sub
testw
adc
out
sub
add
jmp
es
jmp
inc
mov
in
fildll
mov
sub
lods
dec
adc
lea
inc
into
or
inc
cmp
jmp
fistpll
int3
add
jmp
adc
xor
cmpb
faddl
cmpsb
and
push
inc
fstl
lret
adc
insl
jle
lods
iret
fneni(8087
cmc
addb
pop
popf
scas
jmp
dec
dec
inc
jp
roll
stos
nop
pop
or
repnz
stc
cmp
xlat
pop
jmp
in
xor
lahf
jl
testl
and
fmuls
outsb
cmp
mov
fs
je
mov
push
movsl
push
sub
and
pop
arpl
cmp
enter
jecxz
jo
sub
cmp
or
cmp
jmp
fdivl
lcall
pop
movsb
cmp
and
imul
into
fisubrs
mov
cli
cmp
test
notl
sub
sahf
inc
fists
outsl
test
jmp
stc
sub
decl
mov
jns
adc
enter
sbb
sub
and
jmp
adc
jge
lods
jbe
mov
dec
into
daa
cmc
adc
xchg
sub
jg
mov
sbb
and
jl
mov
jg
jbe
jle
fwait
mov
scas
xor
test
mov
ljmp
pop
sub
pop
cmc
cmp
add
std
loope
dec
mov
jmp
adc
ja
or
test
mov
repnz
jb
xor
leave
jmp
jnp
pushf
mov
xchg
cld
daa
inc
sub
incb
adc
jmp
push
inc
sub
or
lret
mov
cmp
gs
fisubrs
iret
and
push
pop
je
jl
leave
int
imul
cmp
push
fists
arpl
cwtl
xchg
or
mov
adc
adc
les
cmp
jmp
inc
lcall
das
mov
pop
mov
inc
jne
mov
stos
loopne
cmp
inc
jns
int
inc
jmp
shlb
push
add
mov
ficompl
dec
xchg
call
jmp
dec
insb
movsb
mov
in
dec
and
inc
test
sub
push
ljmp
xlat
cmp
mov
jp
test
popf
xor
or
push
push
imul
icebp
inc
mov
xchg
sbb
push
lret
dec
push
push
test
ds
inc
mov
stc
mov
int
fsubl
sub
mov
aaa
mov
test
add
mov
popa
ds
jecxz
cmp
sti
mov
ljmp
push
jmp
shrl
aad
xor
xlat
xor
insl
mov
jmp
je
ss
hlt
pop
jmp
test
mov
cltd
inc
std
jnp
mov
jmp
repnz
xchg
jmp
movsl
imul
xchg
sbbb
jo
jmp
mov
or
dec
lods
xchg
or
jp
fimull
add
dec
jmp
int
xchg
arpl
sti
rorb
loopne
lret
sbb
das
popa
mov
xor
cmp
or
loop
cli
cmp
movsl
or
ret
clc
cmp
or
dec
or
jmp
stos
testb
sbb
sub
jmp
mov
ljmp
imul
repnz
scas
xor
cmp
and
gs
push
test
or
sbb
imul
sbb
repnz
int3
or
out
inc
rcl
and
sbb
lock
mov
in
test
cmc
or
xchg
sub
cmp
xor
lret
jecxz
into
in
decb
add
pop
popf
repnz
and
jmp
xchg
sahf
mov
dec
mov
arpl
pop
lock
bnd
jmp
and
pop
les
add
cmp
lcall
ds
mov
add
sbb
in
mov
fadds
jmp
ja
movsl
das
insb
push
je
xchg
sub
add
mov
jmp
mov
insl
jmp
test
mov
daa
jne
sar
add
lods
into
jmp
inc
sbb
jp
aaa
jmp
fcompl
jmp
nop
fldenv
lods
push
test
adc
adc
xchg
es
in
lods
fsubrl
mov
jo
shl
loopne
or
jmp
sbb
shlb
jmp
mov
sahf
dec
lret
mov
outsb
xor
add
in
or
adc
negl
es
sti
sub
pop
dec
lods
sub
subb
sti
enter
in
xor
push
sbb
aad
ss
jo
std
in
cli
jmp
aas
jp
je
mov
xor
icebp
fs
jne
jmp
je
daa
cmp
or
mov
arpl
hlt
into
jg
jmp
out
mov
inc
pop
movsb
jecxz
test
mov
out
mov
push
test
adc
pushf
sbb
mov
jmp
fs
lds
out
jle
fwait
cmpsb
insb
cmc
jmp
jno
dec
mov
sbb
aaa
in
mov
jb
std
ret
or
test
dec
cmp
cltd
push
mov
nop
jmp
lds
jge
jbe
jmp
std
xchg
outsb
imul
mov
xor
xchg
aaa
sbb
popa
lods
inc
hlt
icebp
dec
sahf
adc
or
iret
pop
mov
xchg
jmp
enter
pop
imul
inc
loop
add
adc
adc
and
sti
jge
stos
sti
jbe
es
incb
das
jmp
aad
sub
mov
pop
lcall
ror
cwtl
outsb
scas
or
sub
or
mov
pop
or
sbb
xchg
cmp
lods
repnz
sbb
sti
pop
mov
push
lods
pop
pop
or
shlb
stos
aad
push
pop
fdivs
adc
xchg
data16
xchg
mov
sub
push
push
loopne
das
pop
fcomps
jmp
fldenv
shr
lds
mov
daa
insb
add
test
out
xchg
dec
push
sub
jmp
xchg
mov
fildl
xchg
push
outsb
les
arpl
ja
mov
insl
mov
ficoml
pusha
jmp
lea
fucomi
mov
cwtl
divl
jmp
aaa
xor
aad
ja
cmpsl
dec
jmp
add
sub
xchg
roll
repnz
mov
push
xchg
pop
lods
jne
int3
cmp
dec
loope
loop
push
loopne
xor
imul
jno
enter
daa
cmp
js
xlat
cmp
jae
outsb
mov
lods
sbb
xor
sbb
fsubr
je
neg
bound
pop
leave
mov
js
jmp
movsl
repz
mov
cmpsb
shlb
ljmp
sub
inc
xchg
jmp
rcrl
repz
jmp
mov
mov
cmp
scas
mov
mov
and
jle,pt
sub
xlat
mov
cmp
sub
inc
dec
add
insl
sbb
and
jne
sub
push
xchg
fbstp
jecxz
das
adc
ja
inc
add
popa
jmp
cmp
fsubs
mov
jle
loop
scas
jmp
sbb
mov
inc
inc
and
lcall
pop
jl
mov
jmp
aaa
sbb
lods
mov
mov
fs
jmp
pop
xchg
lret
sahf
ss
jmp
stos
lret
ljmp
xor
scas
test
sub
jle
xor
shll
push
jmp
fistps
and
stos
mov
jmp
xchg
cmp
sbb
lds
pop
iret
js
mov
push
repnz
cmp
in
mov
lahf
or
push
std
mov
pop
jmp
mov
pop
dec
cmc
dec
and
call
repnz
jo
pop
sbb
clc
add
movsl
jmp
pop
xor
in
sahf
sub
jmp
jg
xchg
xlat
push
test
pop
mov
or
mov
sbb
movsl
xor
jmp
pop
lea
and
mov
pop
xchg
lods
mov
pop
pop
mov
add
push
mov
xchg
mulb
mov
insb
sbb
jmp
push
icebp
lret
cmpsb
shr
out
cmc
and
mov
jns
fwait
jae
sub
daa
and
jg
push
jo
leave
lds
push
mov
or
push
mov
pop
sub
xlat
jmp
movsl
sbb
jmp
setb
adc
repnz
adc
jle
aam
bnd
aaa
sbb
push
repz
sub
jmp
outsl
iret
sti
outsb
cmp
and
scas
das
pushf
adc
imul
sub
sub
and
pop
mov
jmp
jae
and
bound
fsubr
std
sub
aam
popf
jnp
sub
xchg
or
sbb
data16
call
push
test
repz
sub
mov
lods
cmp
popa
push
mov
sbb
dec
fisubrs
or
and
sub
int3
subl
and
jmp
popf
jno
lahf
sub
aam
cmpsl
xor
pop
mov
rdpmc
jmp
dec
jecxz
push
xor
out
outsl
ljmp
arpl
adc
popa
jmp
cwtl
or
mov
outsl
and
sti
jae
jnp
push
sub
pop
insb
sub
in
in
and
sbb
xor
sarb
outsb
out
fcoml
mov
jmp
test
lods
jmp
sbb
inc
add
loope
dec
fcoml
jecxz
dec
lods
lds
jp
pop
push
cmc
adc
jmp
mov
outsb
jmp
add
stos
push
lret
outsb
sub
sub
pop
call
call
out
rcr
popa
mov
sub
cmovnp
int
mov
insl
dec
cs
lret
adc
shl
movl
sbb
jg
dec
addl
addr16
out
mov
in
jmp
cmp
add
outsb
inc
mov
jle
sub
cmc
pop
mov
nop
push
push
mov
cmpsl
in
sbb
jb
adc
xchg
or
jmp
sbb
xchg
ljmp
dec
or
icebp
subl
add
outsl
sbb
out
mov
jmp
or
inc
jmp
shrl
jmp
jp
ror
out
inc
xchg
jmp
mov
inc
mov
pop
mov
jmp
cld
jbe
pop
mov
dec
add
jge
mov
jmp
pop
adc
mov
cmp
in
notb
sbb
push
out
mov
jmp
adc
jno
jmp
ja
sbb
inc
mov
xchg
clc
lods
loop
xor
aas
dec
lcall
lds
test
sub
lret
adc
xchg
sub
pop
pusha
outsb
jae
sti
push
add
mov
fs
pop
mov
cli
jmp
jo
xor
jmp
inc
pop
push
push
out
jbe
lock
cmp
or
std
jb
add
jb
repnz
cmpsb
in
and
jmp
lea
ljmp
in
leave
outsl
pop
push
jmp
adc
aaa
rcrb
xchg
in
mov
jmp
or
pop
stc
outsl
jmp
mov
filds
push
sub
push
push
cltd
pop
mov
rolb
scas
jle
sbb
xor
jns
or
adc
push
mov
pusha
push
jmp
and
popf
es
or
pop
inc
xchg
ja
rorb
adc
enter
es
icebp
pushf
int
test
jmp
ror
sub
pop
add
adc
out
fbstp
add
ds
test
sub
hlt
mov
xor
pop
push
jecxz
jmp
lret
jne
cmc
mov
jmp
mov
stos
inc
mov
in
jmp
mov
add
cmp
xor
jnp
mov
xchg
jmp
xor
mov
mov
das
jns
dec
jnp
test
push
jmp
push
xchg
add
cmc
add
fsubp
stc
mov
aaa
sbbl
insl
xorb
adc
push
scas
std
jmp
add
inc
lods
js
push
cmpsl
xchg
stos
sub
mov
and
or
and
int
jb
aas
or
sub
mov
inc
lret
testl
pop
dec
lcall
aad
jl
repnz
pushf
mov
jecxz
ret
and
xchg
cmpl
xchg
xor
add
or
jmp
int3
dec
mov
fwait
cli
jmp
gs
add
call
pop
add
pavgb
jmp
pop
sub
add
mov
jmp
jp
out
mov
test
jle
insl
clc
stc
mov
push
jmp
sbb
lods
inc
insb
pop
repz
xor
jmp
dec
xor
enter
in
push
imul
pop
xor
into
shr
fildll
push
sbb
insl
iret
and
xor
jp
fwait
jmp
mov
xchg
cwtl
push
mov
std
mov
int3
add
mov
sub
sub
xchg
cmpsb
and
mov
out
in
push
mov
pop
ja
adc
and
outsb
cli
and
fsubr
rcll
push
jmp
in
loop
ljmp
ss
nop
jae
rorb
sub
cmp
lret
add
ja
aas
imulb
xor
jns
dec
jmp
lds
mov
sub
push
lods
jl
cld
sub
bnd
scas
insl
rcll
cmp
stc
xor
sub
loopne
les
pushf
fstp
pop
mov
aaa
ud0
jmp
xchg
stos
mov
mov
cmpsb
ror
mov
add
test
cltd
jb
xor
addb
ret
nop
out
cmpsl
and
jmp
xchg
jo
cmp
aaa
jmp
push
adc
xor
mov
cwtl
pop
clc
jb
sub
int
cmp
out
or
and
lods
in
lret
sub
push
sbb
repz
adc
imul
add
or
jae
loop
mov
jmp
rcll
lea
es
add
or
stos
xchg
sbb
mov
int3
fdivrs
push
xlat
or
fsts
jmp
cmpsl
fiaddl
lods
leave
lds
and
aad
repnz
add
sti
jg
xor
mov
inc
push
jmp
mov
jg
stos
in
aad
ja
and
and
sbb
mov
sub
inc
or
aam
or
inc
movsl
inc
sbb
enter
shrb
jmp
dec
ret
and
adc
cmpl
lds
lea
jge
cmc
xor
or
pop
pop
leave
fdivl
add
jmp
lret
jmp
stc
jmp
repz
sub
mov
jmp
nop
cmp
add
jmp
xchg
push
jnp
loopne
popf
xchg
xlat
xchg
or
or
jbe
push
scas
fwait
andb
push
lods
pop
dec
pop
sub
sahf
shrb
xor
call
mov
adc
push
loopne
jmp
sbb
testb
or
mov
mov
shll
mov
test
sbb
jmp
dec
mov
adc
stos
pmaxub
aam
jo
leave
and
jmp
or
jmp
push
xor
dec
call
inc
das
mov
jmp
inc
inc
mov
hlt
outsb
data16
cmp
mov
jmp
rorl
mov
jmp
insl
stc
sub
push
jo
jmp
sbb
push
cli
dec
in
es
loope
sbb
clc
jmp
cmp
push
mov
xor
inc
cmp
adc
int3
jmp
ret
in
inc
mov
out
dec
or
or
push
dec
add
jb
pop
rorl
push
insl
je
adc
in
sub
lock
inc
sti
mov
popa
sub
or
into
mov
es
mov
clc
lods
mull
sbb
outsb
test
sbb
jecxz
sahf
lahf
lods
inc
ret
add
inc
mov
pop
das
mov
stc
ja
aaa
push
enter
mov
ljmp
and
and
or
jmp
movsb
into
pop
ret
push
pop
paddsb
pop
inc
cmpsb
sbb
and
xchg
mov
cwtl
gs
ds
mov
dec
loopne
loope
xor
cmp
sub
push
lea
jmp
mov
jb
mov
inc
xor
xor
or
sti
pop
insl
mov
mov
jmp
fistps
adc
fisubs
sub
cmp
jmp
pop
aaa
cwtl
jmp
div
dec
sbb
mov
mov
jmp
in
adc
cmpsb
fcmovbe
jb
cmpl
sbb
lret
sbb
jmp
jo
inc
cmpsl
lock
sub
push
jbe
addr16
arpl
es
dec
sub
or
xor
mov
insl
pushf
pop
jmp
add
sub
jbe
mov
das
decb
ljmp
or
cltd
cmpsb
jae
push
cwtl
or
sbb
les
shr
loop
mov
sbb
jne
jmp
sbb
sub
out
or
jmp
jp
mov
jmp
out
enter
xor
sbb
sbb
adc
pop
jb
push
xchg
sti
enter
dec
or
inc
and
sarb
cmp
movsb
cmp
mov
dec
inc
aad
ljmp
or
xchg
jo
std
lods
push
dec
add
repz
xchg
inc
ret
inc
sub
outsb
xchg
or
fidivrl
mov
fimuls
fsubl
insl
sbb
repnz
fsubrs
in
idivb
in
xor
jmp
jne
clc
or
sub
aaa
xor
mov
lods
mov
inc
mov
and
std
cmp
jbe
and
jmp
fstpt
or
lea
ljmp
adcb
pusha
test
jmp
push
jmp
xor
shl
loop
orl
cmp
imul
and
xor
pop
fmull
and
jmp
out
insl
jl
hlt
jno
push
add
and
cmpsl
mov
push
clc
fstpl
dec
or
mov
scas
movsl
je
xor
sahf
shlb
shll
jmp
xor
fnstcw
imul
aad
jmp
out
mov
in
movsl
shlb
inc
imul
jge
jmp
pop
cli
and
or
mov
in
mov
add
dec
or
xchg
and
pop
xlat
pop
mov
inc
bound
int3
icebp
jno
pop
in
popf
js
loop
imulb
sub
incb
mov
sbb
aad
sub
mov
sub
lock
fcompl
sbb
jmp
or
loope
mov
lods
nop
jmp
inc
jbe
push
fsubrs
jns
pop
leave
or
mov
pop
push
mov
sti
pushf
into
femms
pop
jmp
addr16
mov
mov
es
into
cmpsl
jge
pop
out
dec
lcall
xor
std
lods
jmp
mov
dec
bswap
push
lods
mov
push
sub
outsl
pop
jecxz
xchg
ret
int
or
adc
pop
shlb
aad
xor
out
add
sub
out
sbb
out
jno
adc
mov
rcl
mov
gs
dec
fsubrl
fsubrl
mov
jmp
add
xor
sbb
sub
fsub
add
sbb
into
int3
xlat
mull
popa
jmp
inc
test
jmp
cwtl
addl
xor
sbb
mov
arpl
jmp
lds
lahf
fistl
xchg
cmpsb
pop
mov
ds
popf
xchg
jmp
loopne
jle
out
and
push
stos
out
fwait
insb
sbb
push
cmp
imul
leave
dec
ret
cmp
push
mov
sub
or
pop
and
fs
jo
sarl
xor
and
pop
and
cmp
mov
dec
or
insb
mov
lods
test
xchg
xor
mov
in
or
insb
cmp
pop
ds
xchg
pusha
out
or
mov
pushl
stc
enter
pop
ljmp
dec
nop
mov
mov
lods
sbb
dec
or
push
movsl
ret
xchg
jmp
jge
addr16
ss
icebp
push
in
loopne
leave
repnz
pop
cli
mov
aad
mov
test
or
test
cli
sub
das
push
pop
test
adc
adc
out
lock
movntq
out
lea
mov
jecxz,pn
scas
cmp
mov
jmp
popf
mov
or
xor
adc
dec
jg
sbb
cld
fwait
insl
jmp
push
jns
push
mov
lods
cmc
mov
jge
pop
gs
and
je
repnz
pop
jmp
orl
cmp
xchg
mov
stos
sbb
dec
jmp
aas
ret
push
ljmp
pushf
sub
mov
popf
nop
mov
stos
mov
jmp
xlat
rolb
sbb
jmp
loopne
test
lret
xchg
jmp
out
call
adc
dec
addl
movsl
aaa
cli
jnp
test
mov
jecxz
mov
jno
sti
pushf
sub
loope
jmp
stos
int
std
fmull
inc
in
lcall
mov
add
jmp
sbbb
jmp
clc
shrb
lods
fsubrp
popa
xchg
je
scas
cwtl
inc
aas
sub
scas
mov
pop
pop
sub
dec
jge
cwtl
fnsave
not
clc
jle
cmc
push
or
lds
mov
lods
mov
out
test
stc
jl
call
add
daa
not
imul
dec
popa
mov
sub
fildll
lcall
xchg
call
adc
and
pushf
jae
or
adc
in
dec
imulb
push
pop
xor
js
outsl
push
mov
inc
outsb
and
ljmp
ss
into
mov
lds
jae
sub
adc
push
jnp
stos
lcall
add
adc
xchg
sbb
mov
lods
jno
sub
xor
das
jmp
push
cmp
ret
add
cmc
mov
fldz
sub
mov
and
jecxz
sub
rcll
jnp
mov
push
adc
sbb
jmp
push
cmp
mov
std
cmp
iret
ret
repz
rep
push
xchg
adc
jmp
or
insb
outsl
fsubrl
movsl
jmp
dec
jp
lock
xchg
mov
nop
stc
fisttpl
xchg
mov
adc
enter
out
sar
lahf
leave
push
test
mov
or
inc
jmp
xchg
add
imul
sbb
lds
mov
sub
dec
fimuls
je
mov
jmp
mov
jmp
lock
loope
lods
xor
ja
xor
mov
pop
cmp
xor
xchg
les
jl
in
adc
jle
mov
or
mov
bound
jmp
faddl
sbb
push
jmp
shlb
xor
cli
testb
int
jle
mov
bound
jbe
jmp
inc
adc
pop
jmp
arpl
aad
mov
cltd
jmp
mov
ljmp
std
popa
cmp
jl
inc
xor
fldenv
iret
xchg
mov
jecxz
lcall
leave
jmp
sbb
jmp
pop
popl
mov
pop
shlb
cmc
jmp
mov
adc
push
or
xchg
dec
movsl
or
repnz
sub
cli
test
hlt
sub
shll
adc
jp
aaa
mov
mov
adc
and
jmp
mov
adc
lods
fistpll
inc
push
jmp
test
cmp
repz
pop
imul
add
pop
rcr
dec
jmp
push
inc
sbb
das
adc
push
xchg
mov
jg
cmp
xor
imul
pop
fsubrl
adc
adc
sub
imul
jmp
rorl
add
das
xor
in
cmc
gs
pop
adc
iret
insb
and
lock
cld
popf
add
xchg
push
je
pop
test
jmp
std
adc
sbb
int3
mov
push
jmp
mov
shlb
sub
and
adc
mov
push
test
mov
add
lahf
mov
call
testb
mov
cli
sarb
xor
xchg
lods
jmp
lret
push
in
loope
mov
jmp
jmp
fsubrp
je
pop
into
in
push
dec
icebp
jmp
lods
fdivs
jmp
pop
cmp
rcrb
outsb
bound
inc
aam
xor
cmp
jl
lret
sub
and
orb
jmp
inc
adc
cmp
icebp
lea
push
aam
xchg
outsb
or
xor
test
jne
das
mov
mov
add
les
push
jmp
pusha
pop
ficoms
or
shll
mov
std
cli
pop
jg
xor
test
inc
mov
jmp
fildl
sbb
sbb
mov
jmp
push
insl
mov
jmp
test
dec
pop
imul
shll
sti
add
js
add
sbb
movsl
xchg
inc
mov
or
mov
std
jp
sub
adc
clc
xchg
xchg
push
imul
imul
lods
jp
inc
xchg
fdivrl
int
aaa
enter
jo
jmp
and
dec
sbb
stos
cmp
and
sti
aad
int
jmp
or
cmpb
cmp
ret
adc
lcall
jmp
jl,pt
pop
sti
mov
jecxz
rol
in
sbb
push
mov
hlt
scas
sti
dec
enter
aam
jmp
push
loopne
pop
popf
ret
lods
jmp
lret
lock
divb
icebp
jns
jmp
add
cmpsb
xchg
fcmovnu
jg
out
sbb
dec
lods
xor
jge
loopne
jb
movq
sub
sub
and
arpl
sub
jmp
mov
sub
outsl
mov
aaa
and
pop
fwait
icebp
cmp
mov
arpl
xchg
mov
sbb
xor
mov
sbb
daa
jmp
rolb
fdivrp
lods
inc
in
mov
pusha
and
jmp
das
popf
or
push
jmp
hlt
dec
shlb
and
xchg
push
int3
pop
adc
mov
into
jmp
sbb
idivl
inc
sbb
daa
add
in
and
push
ja
shr
int3
and
mov
testb
movb
movsb
adc
call
sbb
lret
inc
imul
sbb
sub
scas
xchg
mov
jo
insb
sub
inc
mov
jmp
jb
lcall
rol
sub
or
xor
scas
sbb
arpl
adc
imul
lret
jmp
jecxz
jne
loop
mov
test
mov
sbb
mov
jmp
jecxz
lea
sahf
add
dec
jnp
adc
fucomip
loope
shlb
jmp
xchg
jae
and
cmp
add
cmc
fidivs
and
lods
hlt
mov
movsl
jb
lods
pop
leave
push
xor
int
pop
jg
decb
loop
push
and
imul
mov
sbb
mov
jp
mov
push
sub
and
push
addr16
pop
add
mov
sub
jmp
sub
inc
stos
lea
cmp
subps
lods
xchg
rcrl
xchg
lods
in
call
stc
add
stos
and
mov
xlat
push
inc
adc
pop
xor
rorl
test
iret
mov
ret
lcall
mov
xchg
test
xchg
mov
inc
iret
xchg
lods
pop
mov
pop
gs
call
test
dec
inc
xor
jmp
mov
in
jmp
inc
lods
imul
dec
jb
out
xchg
or
push
cltd
cli
rcrl
and
jg
jmp
cmpsb
sub
lods
xor
mov
push
jmp
jg
sbb
adc
jmp
repnz
mov
mov
push
or
or
incb
dec
adc
lret
cmp
xor
jmp
add
or
add
ds
and
and
jge
mov
arpl
inc
add
inc
scas
push
cwtl
enter
push
xchg
data16
mov
lods
outsb
pop
cmpsl
mov
mov
jmp
jmp
jmp
dec
dec
add
jns
mov
add
mov
push
cmc
mov
push
or
mov
or
ret
cltd
fnstcw
daa
jne
cmc
mov
stc
movsl
jmp
incb
xorb
jmp
xchg
mov
cmpsb
jmp
push
adc
jmp
add
pop
pop
push
jbe
mov
aad
or
and
xor
mov
mov
xor
pusha
jmp
scas
mov
fucomp
repz
push
jmp
push
rol
dec
mov
arpl
pop
push
sub
fistpl
xchg
rol
jecxz
jmp
sbb
fstl
sti
or
repz
aam
cwtl
outsb
xor
xchg
out
push
lods
push
loop
je
mov
jno
sti
push
cmpsl
sbb
sahf
xor
jmp
mov
out
scas
sub
and
push
jmp
adc
popf
outsl
out
adc
pop
inc
cmp
movsl
std
mov
jbe
dec
cld
jmp
pop
lret
enter
pop
test
pop
das
nop
or
push
insl
and
mov
js
xchg
or
adcl
mov
lea
mov
push
jo
scas
fdivrl
cmp
adc
pop
mov
fiadds
enter
loope
and
fisubrl
out
out
adc
mov
or
popl
sub
dec
es
es
sub
sbb
cli
inc
pop
aas
jmp
repz
jno
push
imul
fs
sub
stos
mov
or
sbb
adc
jbe
sti
stos
scas
lods
inc
in
movsl
mov
push
inc
lods
jmp
fmuls
mov
sbb
xchg
lods
gs
stos
or
pop
fs
mov
je
xor
shl
mov
jmp
add
mov
xor
mov
sti
dec
mov
test
jbe
mov
mov
mov
pop
hlt
out
cmpsl
dec
stc
sbb
gs
lds
frstor
or
pop
scas
fcmovnb
gs
or
push
fsubr
aam
sub
xchg
loopne
pop
in
sbb
jle
xor
cmpb
into
lods
pop
sbb
lods
or
or
jecxz
cwtl
xor
pop
cmp
xchg
xchg
jmp
aam
sahf
jg
xchg
xor
adc
ljmp
lret
or
fbstp
jmp
cld
cmpsl
in
pop
mov
jbe
insl
ss
push
bnd
and
jg
fisubrs
in
push
out
out
cmp
jno
mov
int
pop
outsb
mov
loope
jmp
dec
pop
push
dec
push
push
repnz
rorb
jl
mov
sahf
imul
lock
push
jbe
push
push
test
repnz
pop
pop
sbb
add
cmp
or
sbb
ficoml
xchg
sub
sub
xor
movb
in
fildll
xor
adc
add
repnz
push
fmull
sub
call
sub
sbb
mov
and
jmp
cld
sbb
xor
pop
sub
mov
sbb
imul
mov
repnz
enter
test
mov
lret
jmp
push
ss
inc
sti
and
pop
aaa
inc
testb
dec
jl
jmp
and
xor
dec
loopne
addr16
lret
outsb
fildll
inc
pop
xchg
jmp
xor
vcvtps2dq
es
stos
inc
inc
inc
rol
mov
aas
inc
cmp
es
pop
lods
mov
jmp
pop
or
fnstenv
cmpsb
jo
xor
test
jnp
cmpsl
mov
outsb
sub
mov
jmp
xchg
adc
fsubl
scas
inc
stos
mov
sub
mov
sbb
sti
test
adc
data16
fucomp
jmp
incl
shrb
fs
cmpsl
adc
rorl
jmp
clc
pop
imul
or
negl
pushl
mov
ss
dec
je
ffree
jmp
dec
rcll
xor
mov
jbe
paddb
pop
jle
jmp
leave
cli
repnz
xchg
xor
push
fldcw
pop
sub
enter
int
or
ljmp
cli
testl
push
xchg
pusha
clc
lret
cmpsb
ja
push
pushf
stos
jl
outsl
and
sub
pop
cwtl
or
dec
in
and
jmp
adc
stc
icebp
iret
shr
gs
and
dec
adc
imulb
ja
loopne
jnp
repnz
notl
sti
repz
xchg
mov
adc
push
nop
rorl
and
out
sub
and
iret
cld
clc
jmp
cmp
jmp
xchg
popa
arpl
lcall
pop
pop
mov
decb
lret
sub
sbb
cmp
jmp
dec
daa
in
sub
lods
ds
mov
or
push
mov
or
push
jmp
inc
pop
test
rcrb
mov
dec
mov
cltd
lret
outsb
leave
fistpll
shr
ficoms
xchg
and
pop
mov
in
xchg
adc
and
flds
addr16
jmp
mov
jmp
shll
lods
in
outsb
js
pop
sbbl
fisubs
cmp
pop
hlt
xchg
and
cmc
push
dec
mov
jmp
pop
movsb
inc
stc
fcmovnbe
in
xchg
pop
push
sbb
push
sub
sbb
dec
push
push
dec
lods
pop
ljmp
rcrb
jmp
cli
mov
jo
pop
jmp
or
and
mov
test
fxch
adc
dec
dec
lods
dec
cmp
and
sbb
outsb
repnz
jle
and
push
leave
xor
int
mov
mov
jmp
mov
dec
mov
mov
frstor
fsubl
loopne
cmp
data16
outsl
andl
shl
inc
mov
ret
das
sbb
jmp
je
and
cmpb
adcl
cwtd
or
jmp
pop
push
lret
jbe
adc
std
outsl
stos
jmp
imul
mov
test
dec
popa
outsb
xor
ret
or
bound
add
jmp
stos
inc
ret
mov
push
mov
shlb
rcrb
mov
jmp
adc
mov
icebp
dec
iret
jmp
hlt
mov
pop
jmp
jb
fidivrl
dec
or
cld
movsl
cli
nop
lret
lods
push
out
sub
jmp
dec
and
xorb
jmp
jl
scas
add
jmp
shrl
jmp
arpl
mov
ja
imul
imul
add
push
ljmp
and
jmp
std
mov
jl
push
lods
xchg
push
and
daa
mov
ficomps
stos
push
in
pop
jmp
lods
ror
sub
jle
ja
lret
mov
or
ss
sbb
ret
sub
mov
scas
sbb
std
jmp
pop
pop
shrl
xchg
andl
fsubl
fs
jmp
js
dec
and
gs
xchg
stos
stc
and
jmp
mov
pusha
das
scas
mov
cli
jmp
stc
add
inc
jmp
xchg
fidivrl
sbb
and
jmp
arpl
mov
sbb
mov
mov
cmp
jmp
das
jmp
jmp
outsl
lods
test
jmp
test
aas
lods
cmp
push
pop
jae
dec
jmp
xor
lahf
jecxz
adc
adc
add
pop
or
add
js
pusha
ss
xchg
sbb
mov
pop
test
movsb
fs
subb
insl
lods
push
clc
push
bnd
inc
sbb
adc
sbb
nop
pop
lcall
pop
mov
inc
fucomi
dec
cmc
jne
scas
xchg
popf
mov
inc
xor
imul
push
jmp
lahf
sbb
dec
sbb
jb
fldl
popf
fmull
adc
mov
scas
pop
and
repnz
lods
sub
jbe
aas
adc
mov
rclb
in
and
por
call
sahf
pop
repnz
lret
je
mov
sub
int
outsb
ljmp
fnsave
repnz
lret
enter
mov
ja
pushf
push
jmp
pop
mov
rol
repz
bound
lock
jmp
lahf
jle
movsl
mov
stos
xor
adc
sub
push
xor
sbb
jmp
jp
out
sarl
test
add
jge
jmp
enter
pop
int
jmp
nop
push
jecxz
push
jnp
jmp
jne
lcall
into
jmp
mov
and
jmp
lahf
pop
adc
sbb
repnz
mov
ret
in
dec
in
out
dec
icebp
repz
and
lds
inc
test
mov
xchg
dec
sarl
lods
sbb
lcall
sbb
shr
and
xlat
and
sbb
or
or
sub
lcall
jmp
aas
fistpl
jae
cmp
fs
sub
movsb
xor
movsb
aaa
jmp
inc
daa
mov
jmp
or
xchg
mov
pop
xchg
jnp
icebp
scas
mov
pop
je
cmpl
cmp
gs
and
rcrl
jmp
iret
leave
mov
cs
das
jmp
nop
fwait
xor
mov
or
ljmp
in
incb
xchg
scas
in
lock
popa
jmp
gs
test
test
mov
sub
out
pop
mov
push
addr16
sub
insb
cmpsl
data16
or
mov
ret
lods
fs
dec
jmp
mov
mov
movsb
test
lret
mov
jae
jmp
or
out
push
add
pop
cmp
jns
dec
push
ss
push
fisubl
mov
add
cmp
imul
sub
fistps
jo
and
cld
mov
testl
jmp
cmpsb
and
push
sub
in
pop
ret
jmp
je
mov
cmp
out
rorl
addb
lret
lret
shr
push
clc
icebp
and
pop
mov
in
jmp
loopne
xor
movl
test
xchg
push
xor
daa
jmp
popf
ds
and
mov
ret
test
shrb
cwtl
jo
pop
push
xchg
jmp
pop
cli
shll
punpcklbw
std
sub
mov
lods
jmp
aam
xor
fldt
jg
jp
lret
in
jmp
push
int
dec
psubusb
pop
xchg
jo
les
push
push
ret
jns
jns
xor
lds
adc
imul
push
push
push
stos
add
sbb
bound
xchg
daa
outsb
pop
pop
mov
test
and
jmp
jb
xchg
loop
ss
leave
in
or
push
in
pop
jno
int
or
sbbb
xchg
mov
mov
xchg
xor
add
mov
and
in
xor
outsb
push
pushf
mov
jmp
jg
ret
lods
mov
pusha
dec
xchg
inc
add
out
sub
mov
lods
and
xor
mov
pop
nop
arpl
sbb
inc
sbb
and
loopne
insl
call
pop
xchg
xorl
push
roll
mov
sbb
push
mov
mov
mov
add
cmp
mov
sbb
jbe
lods
pusha
add
dec
add
push
adc
in
mov
sbb
aaa
push
or
xchg
jnp
sub
sbb
outsl
dec
jmp
scas
sub
dec
jmp
and
sub
adc
jmp
xor
mov
addl
jmp
mov
cmp
push
ret
mov
jmp
fiadds
cmp
cli
ret
adc
or
xchg
inc
aas
sbb
push
jle
jmp
pop
or
dec
sar
sub
lret
or
je
repz
jmp
cwtl
jb
sub
cmp
mov
fildl
jno
sti
and
scas
pop
rol
or
pop
push
and
cli
xor
adc
outsl
lods
lods
js
int3
xor
jmp
call
sub
pmaxub
dec
cmpsb
scas
mov
nop
insb
add
repz
testb
push
xchg
aas
pavgw
push
or
cmp
mov
mov
sub
es
jp
stc
shrb
mov
sub
fucom
xchg
and
cmp
pop
stos
or
hlt
out
int3
lea
lahf
sti
in
mov
add
int3
or
scas
push
imul
in
rcl
mov
inc
sub
xor
pop
dec
jmp
add
ja
mov
int3
jmp
sbb
xor
test
mov
arpl
xor
outsb
int3
pop
test
mov
jne
cmpb
mov
push
ror
das
jmp
jge
add
pop
lods
sahf
mov
xor
cmp
enter
mov
loop
cmpsl
push
cs
cmp
enter
cwtl
jmp
jge
int
add
shl
push
mov
out
ss
and
stos
mov
test
jb
outsb
jmp
jne
fistpl
ret
cmp
cmp
fsubrl
test
es
jmp
dec
fwait
dec
push
outsb
aas
mov
or
cmp
inc
movsb
lcall
xchg
das
cmc
mov
jb
adc
jne
jmp
or
data16
dec
ds
xchg
dec
mov
lock
fwait
scas
push
cmp
push
push
repnz
mov
jl
pop
stc
jne
fldcw
ja
adc
scas
jmp
mov
cmp
mov
and
sti
cmpsb
jecxz
cltd
arpl
insl
nop
pusha
jae
add
cmp
sahf
movsb
ror
xor
sti
xor
out
jl
shll
sahf
jg
movsl
sti
ret
idivb
dec
cmpsl
jmp
add
xor
or
cmpsb
js
push
mov
jl
cmp
jmp
iret
pop
and
sbb
mov
in
clc
test
jg
fs
lcall
ja
jecxz
sub
mov
sbb
or
sub
shll
iret
dec
pop
lret
jmp
fidivrs
fs
mov
rorb
jb
sub
dec
pop
jecxz
xchg
gs
xor
mov
or
pusha
fsubrs
push
adc
inc
lock
cli
mov
in
dec
xchg
adc
xchg
dec
xchg
scas
scas
and
lds
data16
pop
in
lods
jmp
dec
push
popa
push
ret
or
jmp
repnz
or
loope
in
cmc
jle
dec
enter
outsl
pop
inc
in
mov
adc
testl
int3
jnp
cmp
sbb
push
and
fnsave
cwtl
jbe
jmp
fdivrp
sbb
cltd
jmp
pop
in
fstl
mov
sbb
jmp
jno
xchg
push
jmp
mov
in
rcll
push
jmp
xchg
ret
scas
mov
adc
outsl
test
push
pop
rcll
jecxz
and
sub
xchg
inc
imul
repz
imul
add
gs
jae
rcrb
cmp
dec
mov
stc
push
lods
xchg
adc
jmp
mov
adcl
repz
icebp
and
enter
or
jb
or
jle
mov
mov
test
dec
sbb
mov
lods
mov
xchg
cmp
and
xchg
jmp
ficompl
and
in
and
mov
mov
pop
enter
jmp
xor
iret
mov
mov
in
mov
sbb
push
jmp
mov
jmp
xchg
aas
ss
frstor
out
or
push
lods
mov
mov
jmp
xlat
fstpl
nop
je
jns
repz
and
lahf
and
aaa
inc
rclb
fcoms
repz
or
mov
imul
sub
outsl
xlat
sub
jg
pop
dec
mov
jmp
mov
mov
inc
jo
imul
nop
stc
dec
test
or
pop
dec
fidivs
mov
cmp
sub
lcall
ret
cs
movsb
jmp
pop
movsl
outsb
scas
fdiv
jo
fstp
lret
lock
stos
jmp
ss
adc
data16
pop
nop
icebp
adc
je
cmp
and
outsb
xchg
pop
inc
sbb
and
fucomi
testl
pop
sub
sub
add
or
in
je
or
jmp
sbb
mov
call
sub
ret
add
aaa
jmp
stos
mov
decb
adc
jg
sub
sar
push
rep
stos
dec
data16
popa
scas
in
fstps
sub
add
jmp
adc
pop
arpl
and
xor
aad
pop
stc
dec
jmp
adc
jecxz
lret
jmp
xchg
dec
jmp
imul
sub
inc
cmp
jmp
mov
fsts
fcompl
call
popa
aam
dec
xchg
enter
and
popf
or
inc
xchg
les
dec
leave
sarl
xlat
lret
jmp
mov
pushl
jp
pop
out
sub
push
push
cmp
inc
lret
in
adc
lock
lods
add
cmp
outsb
mov
jae
out
lret
mov
add
cmpsb
pop
sbb
cmp
call
lods
je
fimuls
mov
sub
jmp
clc
push
test
stos
xor
jnp,pt
into
cmp
sub
mov
pop
pop
jmp
mov
adcb
mov
sub
addr16
xor
es
mov
pop
mov
jmp
out
xor
icebp
jmp
push
mov
add
or
divl
push
sub
sbb
lret
ds
lods
rcrl
roll
fs
mov
fcoms
sub
xor
lods
adc
icebp
test
push
and
sub
and
imul
je
jmp
out
sub
imul
sbb
xchg
out
push
outsl
cmp
cmp
xor
mov
jmp
stos
push
sti
cmpsb
outsb
cld
sub
arpl
cmp
insb
dec
sbb
dec
inc
pop
xor
movsb
sbb
insl
sarb
jmp
dec
mov
mov
lea
dec
outsb
xchg
cli
es
sbb
adc
imul
sub
jmp
sbb
loopne
movsl
imul
aas
jp
jge
je
ret
sbb
psllw
mov
adc
test
iret
sub
sbb
mov
inc
mov
jg
push
in
jnp
jmp
inc
jb
mov
sbb
std
and
xchg
pop
lods
xor
pusha
popl
cmp
inc
jmp
xchg
in
imul
jo
or
sarb
dec
test
imul
pop
lret
sbb
pushf
mov
jmp
out
rorb
mov
dec
scas
jmp
sub
dec
inc
jnp
fsubr
xor
xor
jmp
push
jge
push
add
aaa
outsb
or
sti
stos
lods
or
mov
mov
inc
sbb
jmp
dec
adc
gs
pop
jns
pop
or
cmp
insb
mov
cmpsb
je
fwait
sub
in
fnstcw
popa
and
sub
push
pusha
and
sbb
loope
sbb
pop
mov
jle
sub
sbb
movsb
stc
inc
rorb
lret
std
popa
sbb
dec
not
add
sahf
addr16
lea
jge
scas
adc
shll
xor
ds
mov
jl
or
mov
jp
cwtl
or
aam
lods
adc
dec
xor
or
sti
inc
adc
jmp
sbb
mov
mov
xchg
jmp
aas
in
xchg
cmpsl
sub
sub
sbb
xchg
adc
xchg
out
push
push
xor
test
cmc
stos
sarl
jmp
adc
jne
clc
pop
jmp
lsl
popf
insb
xchg
shr
jo
fisubrs
test
jp
out
xchg
mov
jmp
shrl
imul
jg
sbb
or
jae
or
test
icebp
imulb
jmp
pop
and
xor
xlat
scas
sub
bnd
data16
lods
xor
ja
xchg
xor
mov
jle
or
mov
aad
rcrl
fldt
add
jmp
testb
jb
stos
mov
mov
aad
addb
push
mov
imul
xchg
mulb
jmp
jge
jne
inc
shll
pushf
cltd
add
sub
insb
sub
mov
cltd
ja
adc
lods
adc
addr16
push
push
jge
push
inc
scas
jmp
sbb
mov
pop
sub
clc
pop
or
js
inc
cmc
pushf
adc
adc
and
pop
shrb
push
jmp
cmp
or
mov
sbb
sti
pop
rcrb
cld
inc
inc
jno
inc
xchg
lods
roll
fs
movsb
jp
sub
jmp
mov
dec
dec
jmp
test
imul
mov
pop
lcall
hlt
push
sti
aad
mov
lods
sti
daa
add
lods
adc
pop
mov
and
jmp
stos
cmp
ds
daa
test
mov
ret
movsb
arpl
sbb
add
jmp
sbb
pop
jmp
loopne
or
dec
dec
lods
pop
movsb
sahf
negb
push
jmp
sub
jno
jmp
scas
fsubrl
dec
call
push
outsl
and
sbb
dec
xor
push
daa
push
std
xchg
xchg
outsb
adc
lea
jmp
int3
ret
in
cli
jmp
xor
ss
dec
mov
loope
fnsave
dec
rcrb
and
out
and
jb
das
sub
xor
xlat
or
cwtl
notb
leave
into
mov
in
sti
outsb
jmp
out
dec
stos
fwait
stos
mull
test
jbe
fs
int
or
adc
pop
push
fdivs
shl
mov
jp
fidivrl
cmp
dec
jmp
in
mov
mov
js
stos
repnz
push
pop
add
jmp
xchg
pop
dec
mov
mov
add
stc
mov
sbb
sub
mov
scas
leave
and
jp
insb
adc
mov
in
std
xor
inc
testb
orb
jecxz
cltd
mov
sarb
fs
jbe
push
xor
sub
mov
or
jmp
jge
and
mov
jle
push
cmp
mov
aam
cld
jmp
cmp
adc
jmp
pop
sub
mov
imul
cmp
cld
call
pop
mov
jmp
sub
in
dec
scas
mov
mov
jae
sub
insl
cs
cmp
fsubr
lock
sub
sub
push
adc
icebp
rcrb
jmp
push
jae
sbb
lock
adc
cmp
mov
sub
outsl
sub
test
dec
sub
jnp
push
mov
fimull
jmp
fucom
push
sarl
lods
imul
out
cmpsl
fucomi
or
xchg
jg
or
pop
push
sti
xchg
and
fidivrl
repz
pop
out
inc
dec
iret
jg
aaa
aam
loope
insb
adc
cmp
mov
mov
push
das
aad
jb
cs
xchg
in
and
ljmp
jmp
lret
data16
xchg
mov
jmp
adc
mov
loopne
in
test
jae
int3
popf
jmp
ljmp
scas
mov
mov
repz
pop
jmp
stos
dec
xchg
xor
test
jmp
jl
mov
fistps
out
mov
pop
push
inc
inc
push
jmp
cmp
outsb
in
sub
cld
lods
xor
sarl
mov
or
lea
cmp
or
pop
int
aas
jmp
loop
ljmp
jg
push
sahf
daa
and
mov
dec
shll
popf
pop
jmp
add
imul
xor
lret
add
mov
push
mov
jecxz
icebp
sti
or
or
mov
hlt
and
mov
imul
sbb
das
enter
jbe
push
fndisi(8087
cli
pop
loop
aad
pop
clc
sub
inc
cmp
stos
or
jl
cmp
scas
or
sbb
mov
sbb
pop
jl
pop
add
sub
jmp
sbb
jmp
lods
movsl
jge
add
jmp
inc
push
stos
jne
adc
jmp
pop
add
loope
movsl
add
lods
jle
unpcklps
jns,pt
mov
imul
aas
aam
pop
jmp
push
cmpsb
jo
jnp
lods
jmp
sub
cli
aad
push
jae
sahf
push
xor
lds
xor
out
inc
sub
jb
mov
les
inc
or
mov
or
bsf
or
jmp
loop
dec
popa
fildll
jmp
stos
xchg
loopne
and
out
adc
leave
aaa
sub
addr16
mov
inc
sarl
scas
adc
lea
push
bound
and
xchg
sub
xlat
mov
outsl
mov
add
outsb
pop
out
movsb
or
fildl
mov
lret
mov
jbe
xor
jmp
xor
add
ret
add
shr
imul
dec
cmp
xchg
repz
aam
jnp
mov
cmpsl
sub
sub
and
xchg
lods
push
push
add
scas
sti
in
xchg
ja
pop
fmull
mov
xchg
jmp
xchg
imul
scas
jg
in
repz
inc
sub
lods
arpl
and
pop
sbb
lret
scas
jmp
repnz
or
imul
mov
shl
daa
push
push
lods
loop
cli
inc
subb
test
in
xor
adc
dec
cmc
add
or
jmp
mov
jecxz
mov
inc
outsl
mov
jmp
adc
ljmp
add
fs
aaa
or
jns
mov
jmp
push
jmp
mov
in
es
outsb
cltd
sbb
push
cmp
adc
jmp
xor
dec
scas
iret
cmp
jg
mov
or
lods
inc
sbb
lods
ljmp
pop
cmp
jmp
lcall
lods
ja
lock
shlb
mov
fstpl
dec
outsb
mov
cwtl
test
pop
pop
cltd
push
fistps
or
mov
addr16
stos
xor
push
jge
in
imul
fnsave
sti
rcr
jmp
clc
jne
pushl
cli
daa
out
add
movb
add
jmp
mov
and
pop
add
test
fcoml
imul
mov
or
out
sbb
xchg
sub
mov
inc
push
rcl
lahf
jne
lods
mov
daa
stos
pop
dec
aam
add
or
xchg
lods
mov
test
xchg
jmp
std
dec
cmp
sub
mov
push
pop
adc
pop
jo
sub
bound
add
xchg
testl
dec
sub
jp
out
test
sbbb
pushf
imul
push
and
add
arpl
int
mov
jmp
inc
shll
pop
leave
jmp
push
xchg
push
scas
popa
xchg
jmp
push
cmp
mov
ds
cmp
xchg
bound
out
xor
push
fstps
and
push
stos
add
jno
xchg
xor
mov
cmp
into
aaa
xor
fisttps
add
sbb
inc
add
jmp
jnp
xlat
push
sbb
cltd
lcall
repnz
push
push
adc
fimull
mov
cmp
xlat
sub
shrb
sub
jp
jns
dec
out
or
mov
sub
add
jne
lods
sbb
inc
cmp
dec
loopne
push
testl
dec
pop
flds
lock
or
add
icebp
lret
sbb
jmp
aam
ja
mov
scas
int3
push
out
mov
sbb
dec
push
push
jmp
cld
adc
and
jmp
cs
mov
dec
push
jmp
pop
push
mov
lods
cwtl
int
daa
idiv
pop
frstor
jmp
cli
je
jbe
lret
jmp
cmp
pop
or
repnz
nop
xor
mov
add
dec
jbe
dec
mov
sbb
and
das
adc
pusha
ljmp
jo
dec
xor
jle
sub
subl
jmp
test
imul
addr16
daa
in
and
jmp
xchg
dec
lret
add
jmp
pop
cwtl
inc
fdivp
fsubrl
dec
or
and
pop
dec
adc
lea
ficoml
jmp
push
fs
xor
push
dec
sub
fistps
push
jmp
and
stos
scas
loope
or
xor
jmp
js
pop
push
dec
mov
pushf
dec
pop
leave
cmp
lds
xchg
pop
fidivrs
je
jmp
aad
and
outsb
fildll
orl
pop
sub
pop
pusha
mov
sub
std
lret
and
sbb
daa
cmp
pusha
and
jbe
jmp
insb
fists
test
mov
jo
mov
out
sub
xchg
xchg
movsl
shl
mov
adc
jmp
dec
cmpl
pop
cmc
xor
js
std
or
adc
adc
cs
ds
sbb
scas
dec
ret
pop
insb
push
jmp
pop
enter
mov
clc
jg
addr16
and
jo
add
and
shlb
leave
cmpsl
sub
fnsave
xor
add
or
jl
das
sbbb
pop
es
ret
jmp
push
mov
or
cld
movsl
push
or
dec
adc
fldl
divb
jo
cmp
xchg
ljmp
cmp
adcl
stos
sbb
arpl
ret
dec
sub
and
out
inc
sbb
daa
jmp
sbb
mov
mov
jp
in
add
lcall
out
sbbl
ret
push
and
pop
aas
add
or
clc
dec
or
dec
xor
jno
adc
push
pushf
dec
add
imul
ficomps
scas
fwait
cmp
pop
shrb
mov
push
jmp
mov
es
jmp
sub
mov
jmp
push
add
aam
rcrl
fcmove
push
cmpsl
pop
mov
or
jmp
sbb
cmc
iret
enter
ja
or
ds
mov
cld
jmp
jns
lea
pop
sti
aaa
mov
arpl
in
incl
pop
or
and
mov
pop
push
hlt
bound
das
xorb
mov
inc
push
cwtl
jb
sub
and
mov
jmp
mov
addr16
pop
jns
out
fnsave
mov
adc
mov
jae
cs
xor
pusha
sub
sbb
and
mov
xchg
fisttpll
xchg
js
mov
dec
jno
sbb
or
addr16
sbb
add
cli
aas
jmp
xchg
and
pop
adc
jno
sbb
add
icebp
jmp
hlt
xchg
insb
xor
loope
in
roll
jne
pop
inc
scas
lret
add
repnz
test
dec
sahf
mov
or
sbbb
jmp
jge
jne
sub
repnz
sub
xlat
subb
adc
jmp
cmp
lcall
dec
pop
push
hlt
fdiv
std
icebp
xchg
dec
mov
lahf
test
sbb
pop
cmpsb
sub
inc
or
jp
mov
insl
mov
andb
jg
outsb
outsb
sbb
cmp
int
movsb
call
mov
std
or
rcrb
int
pop
fadd
mov
jmp
dec
mov
push
dec
das
jmp
shl
mov
jmp
mov
jmp
lods
idivb
cmp
or
arpl
jmp
sbb
shl
jmp
lret
stos
mov
psrad
aas
mov
outsl
inc
or
rol
mov
int
lret
sub
hlt
add
push
jle
sbb
or
push
in
outsb
out
andl
sub
test
jmp
jp
ja
cmp
fnsave
arpl
call
lods
scas
cli
sbb
sbb
adc
mov
ret
push
dec
ss
or
xor
mov
hlt
aad
jmp
inc
mov
imulb
and
sub
lret
and
adc
outsl
or
cli
sub
data16
and
pop
xchg
lahf
jl
gs
inc
mov
stos
imull
scas
pop
mov
xchg
aad
jne
push
fwait
cmp
js
fdivr
xor
lock
inc
sbb
nop
xchg
imul
fistpll
ret
dec
add
mov
jmp
mov
pop
rcl
imul
xor
mov
mov
mov
mov
popa
add
pop
test
and
cmp
mov
mov
pop
icebp
mov
inc
add
jecxz
or
movb
fstps
sbb
shr
mov
pop
add
mov
stos
cmp
jmp
mov
cs
and
or
sbb
inc
jno
enter
xor
add
insb
out
sub
pop
mov
mov
push
stos
movsl
subl
test
cmc
jno
addr16
adc
jp
dec
loop
mov
mov
mov
sbb
jmp
dec
jle
xchg
lea
mov
mov
dec
xor
in
cmp
lret
pusha
or
jl
test
ret
push
cmp
mov
dec
dec
jmp
dec
out
mov
xor
daa
lods
cmp
pop
push
adc
bound
jecxz
leave
xchg
sbb
repz
mov
and
jmp
test
je
pop
push
xor
enterw
inc
out
xor
xchg
lods
jno
cmpsb
xchg
jmp
or
mov
outsb
pop
shlb
mov
loope
push
fdivs
cmc
pushf
stc
mov
jmp
std
sub
imul
mov
pop
inc
lods
sbb
add
inc
gs
lds
addb
outsb
xchg
les
jae
repz
bound
dec
jb
add
sbb
jle
mov
das
out
aad
enter
fwait
push
std
mov
sub
stc
int3
sub
in
inc
cmp
jmp
popa
pop
mov
jmp
inc
mov
push
jmp
sub
xchg
repnz
and
jl
inc
ret
popf
jmp
mov
std
sub
orb
xchg
scas
dec
imul
add
dec
cmp
mov
sti
jmp
movsl
inc
push
aad
std
shr
mov
test
inc
jo
scas
jmp
das
fwait
cmp
xlat
jmp
sbbb
mov
push
test
loopne
sub
adc
in
xor
pusha
dec
repnz
movsl
sti
mov
cmp
das
sub
leave
and
test
jbe
push
shrb
das
lcall
jns
ljmp
add
fldl
lret
push
roll
popa
jmp
mov
aas
daa
jmp
or
lcall
mov
lods
sbb
imul
mov
add
mov
jnp
pushl
stos
sub
ficomps
inc
or
cwtl
div
and
push
jmp
and
push
jmp
or
js
std
je
jmp
jns
in
sbb
decb
sub
or
outsb
call
in
and
mov
arpl
or
lods
out
aam
push
inc
loop
movsl
jmp
jl
sbb
movsb
jmp
inc
repnz
mov
andl
or
push
imul
add
imul
xchg
inc
xchg
xor
jl
jmp
jle
ret
fsin
jmp
sbb
adc
xor
outsl
mov
jo
push
and
jb
jecxz
lods
dec
jo
jae
scas
test
jmp
movsl
add
xor
mov
aam
jmp
shrb
pop
sbb
shll
aad
mov
shrb
sub
xchg
frstor
test
sub
push
movsl
dec
and
jmp
leave
adc
movsb
ljmp
fsubrl
lret
scas
int
test
jmp
mov
pop
cwtl
sub
jmp
add
data16
jb
lods
mov
pop
and
mov
jl
icebp
pop
sub
bound
es
aad
cmp
int3
std
jno
dec
push
inc
jo
fstps
jb
arpl
jmp
rcll
jno
mov
cwtl
inc
cli
push
cs
into
popf
jmp
jp
xor
popa
imul
jb
jmp
hlt
xchg
xor
cmp
lods
sbb
jecxz
mov
int
leave
push
je
xchg
lods
pop
popa
mov
mov
cld
cmp
jp
fs
push
lret
jmp
rclb
subb
pusha
xor
mov
add
stos
into
push
enter
inc
jmp
ror
sbb
cmp
in
insb
cmp
mov
rorl
cmp
or
dec
push
repz
stos
jb
sub
cmc
imul
daa
outsb
mov
repnz
pop
inc
mov
adc
mov
push
jne
enter
xlat
add
sete
push
cltd
scas
stos
adc
ljmp
cmp
iret
test
jmp
loope
test
or
jmp
sub
fucomi
iret
lea
mov
cmp
jb
aas
cmp
or
in
pop
inc
call
loopne
inc
xor
in
aam
sbb
js
scas
jb
lahf
clc
jae
mov
ret
jno
xor
pop
js
rclb
sahf
sub
or
test
xchg
data16
daa
push
cmp
enter
mov
or
rcrl
jmp
lcall
push
and
mov
xlat
jmp
rolb
outsl
out
scas
jmp
aas
enter
jmp
loopne
adc
sub
lea
dec
inc
je
pop
mov
sub
inc
sahf
or
jmp
mov
test
xor
sbb
jmp
cmpsb
and
jmp
popf
pushf
scas
outsl
ror
int
sub
push
repz
inc
inc
into
ret
jo
inc
push
inc
adc
insb
mov
cmc
inc
jmp
lret
dec
fmull
sub
pop
lods
daa
jbe
rcrb
repz
nop
lock
rol
fldpi
lcall
pop
jmp
mov
in
movsl
jmp
stos
mov
cmp
std
mov
add
dec
lahf
outsl
pop
ret
sbb
mov
and
mov
lret
inc
pop
jmp
lret
mov
lcall
mov
lock
in
mov
jmp
pop
mov
test
shrl
jmp
stos
inc
test
push
lahf
or
and
lods
shl
imul
addr16
jmp
lcall
jmp
lea
mov
and
sti
inc
jbe
add
jl
mov
sbb
por
push
mov
or
adc
fsubl
mov
inc
push
push
test
or
hlt
int
push
test
sub
and
xor
sub
and
xor
stos
push
rcrl
jmp
push
cmc
inc
jmp
sub
cli
xchg
xchg
test
inc
int
jmp
divb
sahf
pop
jmp
jmp
dec
outsb
sub
add
dec
aam
rdpmc
in
pop
stc
or
and
pop
andb
jmp
daa
notb
mov
push
mov
mov
je,pt
int3
jmp
bound
jge
pop
and
sbb
dec
jns
test
push
test
sub
jecxz
adc
lods
rep
pop
jmp
int3
xor
pushf
adc
or
dec
loope
dec
adc
repnz
push
or
inc
dec
dec
and
in
insb
fmull
out
add
outsl
jmp
dec
pop
sahf
push
shlb
dec
jmp
jg
cmp
jp
xchg
push
leave
jns
inc
je
pop
cmp
enter
push
push
or
dec
push
add
pop
pop
inc
adc
out
out
lcall
lds
fwait
mov
xlat
adc
xor
addr16
scas
sub
adc
cwtl
loope
bndstx
clc
pop
xchg
jmp
cs
sbb
outsb
cli
movmskps
div
shr
or
gs
sub
mov
jne
push
or
scas
pop
dec
cmp
shr
scas
pop
lods
mov
daa
sub
stos
daa
xchg
jmp
sbbb
outsb
int
enter
lods
sahf
pop
fisubrl
jmp
hlt
fadd
ret
push
test
mov
mov
sbb
lret
les
fdivrl
pop
dec
scas
inc
add
fldt
inc
outsb
xchg
cmp
mov
dec
aad
pushf
sbbl
das
sub
pop
pop
mov
mov
jmp
orl
jmp
push
scas
jnp
xchg
jge
lret
aam
mov
xlat
mov
test
jmp
mov
into
pop
mov
pop
cmpsb
andl
rcrl
adc
jmp
xor
lods
sub
cmp
and
inc
lods
mov
inc
adc
into
inc
or
or
xchg
in
jmp
fucomp
xor
adc
jmp
test
icebp
ror
popf
jmp
adc
push
jmp
xchg
out
scas
or
cmp
mov
jmp
jle
ja
push
enter
add
or
sbb
add
pop
jmp
xchg
jmp
sahf
sub
push
insl
or
mov
or
stos
dec
fstpl
or
jp
push
sbb
add
mov
jmp
inc
xor
xlat
fdivp
lods
repnz
cwtl
aad
lds
sbb
or
jge
mov
sub
subb
pop
push
inc
add
jmp
add
outsb
xlat
jmp
sbb
jmp
jb
and
test
jmp
push
andl
jmp
hlt
or
ret
movsb
pop
dec
sbb
dec
inc
jmp
je
xchg
es
shlb
sahf
movsl
lods
stos
cmp
icebp
sbb
or
or
outsb
lods
mull
xchg
sub
daa
gs
loopne
cmp
into
mov
pop
or
jmp
cs
inc
hlt
movsb
decb
test
add
lods
push
cmc
call
rcll
xorl
xchg
sahf
pusha
enter
or
jmp
js
mov
jmp
pop
pop
and
jmp
pop
sbb
mov
xchg
mov
insl
mov
inc
idivl
cmp
jmp
fcomps
jle
push
aaa
cmpsl
jmp
shll
outsb
mov
jmp
or
in
inc
int
push
xchg
inc
stos
je
sbbl
notb
jmp
aad
out
shll
loopne
sub
cwtl
std
push
jne
stos
cmp
dec
sbb
push
pop
pusha
sub
jae
scas
and
mov
and
pop
imul
or
pop
nop
jmp
stc
push
into
and
fcmovnu
inc
inc
rcl
fs
jmp
lret
push
lcall
jne
dec
sub
cmpsl
jmp
jb
in
daa
in
enter
push
pop
les
mov
imul
shl
dec
fldl
jmp
sbb
adc
and
ljmp
hlt
fs
int
cmp
call
pushf
popf
jmp
insb
lea
lods
xchg
repz
pop
int
xchg
jmp
adc
lcall
es
fstps
sub
bound
sbb
pusha
push
cmpsl
pop
sbb
in
mov
and
lods
adc
jp
out
in
cmc
inc
test
jmp
mov
adc
and
int3
mov
cmpsb
mov
jge
rcrl
aaa
push
sbb
pusha
scas
and
sub
out
mov
dec
repz
sub
dec
or
sub
adc
xchg
dec
pop
jmp
mov
outsb
movsl
sub
mov
outsb
leave
fs
iret
jo
add
dec
dec
lea
fsubr
insb
fstpl
cmp
adc
jmp
fisttps
sarb
ss
outsl
and
aam
jmp
addr16
mov
pop
jmp
inc
mov
lcall
out
sbb
xchg
sbb
loop
cmc
sub
jb
mov
sub
inc
sub
cmp
inc
add
cs
jmp
dec
mov
adc
mov
mov
and
pop
stc
jp
or
push
out
stos
mov
adc
fsubs
add
mov
sub
cld
shrb
divb
es
push
stos
jmp
pop
xor
les
pop
mov
out
jge
jmp
es
movsb
inc
in
cwtl
and
adc
jae
and
ret
mov
jmp
cmpsb
mov
clc
and
pop
jmp
mov
movsb
into
mov
mov
cwtl
loopne
xchg
mov
cmpsl
pop
push
jg
mov
inc
imul
sub
bnd
cmp
insl
jg
jmp
scas
or
jmp
inc
decb
sub
scas
fwait
data16
push
mov
cmp
push
jmp
or
fnstcw
out
daa
lods
out
mov
fdiv
and
xchg
outsl
jmp
dec
cmp
push
loop
int
lock
mov
jg
cli
in
jmp
out
xchg
cmc
mov
adc
aad
add
outsb
mov
lret
jmp
insb
sbb
lds
lret
jmp
jl
cmp
jmp
mov
adc
jmp
out
rolb
sub
sbb
vminsd
inc
jl
mov
loop
cmp
jb
add
or
xchg
jmp
lret
jne
mov
jmp
and
xorb
fidivs
pushf
cli
jmp
sub
jp
jne
mov
gs
int
out
sarl
cld
adc
jmp
inc
adc
xor
in
mov
jmp
adc
pop
add
adc
mov
cmp
sbb
hlt
ja
and
xchg
jmp
inc
or
dec
pop
inc
sub
or
sahf
test
por
dec
xchg
mov
lock
sub
jmp
outsl
ljmp
jb
ret
test
outsl
rcll
cli
lods
mov
por
in
out
jmp
repz
shll
gs
sub
xchg
clc
fs
jno
out
pop
mov
jmp
loopne
popa
mov
jge
lcall
xor
popf
sbb
fsts
push
rorb
cmp
les
testl
mov
ljmp
gs
in
dec
mov
mov
insb
cwtl
pop
nop
incl
add
mov
adc
mov
xor
lods
dec
sbb
inc
inc
outsb
cli
and
xchg
and
sbb
cmp
xor
fdivs
leave
mov
pop
push
jmp
xchg
sbb
jbe
stc
xchg
jmp
mov
mov
rcll
pop
cmp
jne
daa
dec
mull
ret
repz
add
les
loopne
stos
push
jmp
scas
and
addl
jmp
jge
pop
cmp
scas
out
stos
rorb
loope
sbb
lahf
std
push
in
in
aam
push
popa
add
and
lods
or
es
iret
mov
stc
lods
jmp
filds
mul
lret
add
jmp
ret
mov
adc
sub
add
push
jne
pop
jmp
stos
sarb
mov
inc
sahf
jmp
loopne
cmpb
insb
divb
cmpsl
fadds
out
nop
adc
scas
add
xor
in
sub
and
mov
adc
arpl
rolb
mov
push
lods
and
jb
sub
xchg
xor
mov
jmp
fdivr
push
ret
repnz
cwtl
jo
adc
jns
or
jmp
mov
pop
ss
pop
xchg
jmp
rorb
jmp
mov
cmp
sti
shll
lcall
pusha
jmp
lods
negb
xchg
sbb
mov
inc
sub
sub
lods
lds
std
lret
or
movsb
jmp
cmp
add
dec
inc
addr16
jl
jmp
lods
lock
mov
sbb
mov
add
enter
or
lods
adc
js
pop
adc
stos
and
add
leave
je
mov
and
or
sbbl
jmp
aad
adc
pop
scas
jmp
mov
jb
mov
es
pop
cmp
jl
out
cmc
mov
mov
stos
mov
lock
xchg
ret
nop
cmp
jb
push
das
sti
in
mov
dec
or
xchg
mov
aam
test
jmp
stc
dec
arpl
push
or
insl
xchg
xchg
test
push
and
jno
or
sub
mov
test
xor
mov
jp
pusha
nop
fcomip
mov
dec
inc
and
arpl
dec
dec
popa
outsb
pushf
mov
jmp
mov
mull
inc
hlt
or
sti
popf
mov
test
add
adc
xchg
sub
jo
imul
test
dec
add
cld
jmp
cltd
aam
cmp
push
popa
sbb
mov
jmp
lea
sbb
sbb
out
es
ret
and
mov
popf
movsl
mov
in
js
cmp
push
jmp
sub
out
or
push
jmp
jp
pop
repnz
dec
ror
nop
pop
lahf
packsswb
and
dec
pop
adc
add
xchg
jmp
xor
cld
ret
lret
jmp
jnp
std
pop
and
ret
loop
and
jmp
inc
es
jmp
mov
push
xlat
mov
push
xchg
push
test
dec
div
jb
sbb
scas
aas
fwait
adc
lods
mov
pop
lret
rcl
mov
lret
cmpsl
cltd
jg
sbb
ja
mov
scas
enter
inc
sbb
or
pop
push
fidivrl
dec
test
jae
jmp
cmpsb
loopne
les
repz
repnz
shl
jbe
stos
in
pop
inc
mov
or
paddusb
or
add
jecxz
jmp
fs
adc
sbb
lahf
sub
mov
and
jmp
imul
out
sub
cmp
jecxz
rolb
rorb
mov
and
sub
jbe
cmp
fisttps
xchg
xchg
fst
add
sahf
mov
flds
lods
jl
jmp
movsl
ja
insb
shl
sub
pop
cs
in
sbb
dec
insl
out
jnp
fstl
mov
lods
jne
pop
sub
push
or
mov
sbb
add
or
dec
loop
loopne
dec
jmp
xor
call
cld
jmp
testb
jo
sub
ficoml
jge
xlat
inc
push
mov
fwait
mov
sbb
or
or
jmp
sbb
sarb
xchg
lods
shll
outsb
and
xchg
jmp
pop
stos
into
sub
call
data16
mov
xchg
fwait
or
jno
cli
fs
inc
xchg
js
inc
rcll
adc
xor
rol
loop
outsl
and
or
ds
add
shll
sub
daa
data16
inc
mov
test
je
repz
dec
mov
adc
lods
jmp
xchg
xor
rcrb
jnp
pusha
jp
pop
mov
stos
fwait
mov
jmp
and
divb
sub
jmp
mov
xlat
jae
jmp
mov
call
repnz
or
les
rcrl
or
mov
jae
int
cmp
xchg
lods
mov
adc
repz
push
hlt
lahf
inc
jmp
mov
adc
dec
loope
inc
ret
negl
lods
and
jl
inc
lcall
jae
pcmpgtd
mov
add
es
mov
dec
mov
jl
cli
pop
or
aas
push
jns
and
sub
xchg
mov
pop
clc
jno
and
leave
mov
scas
xor
out
sti
and
mov
mov
int
aas
inc
adc
in
cli
test
inc
clc
loopne
mov
and
inc
inc
pop
inc
xchg
or
popa
add
add
enter
dec
pushf
cs
fs
push
cmp
sub
jmp
les
shr
and
sbb
xor
test
pop
jno
daa
es
test
sbb
and
sbb
sub
divb
and
add
pop
sub
push
pop
popa
pop
rcll
sti
movsb
addr16
lods
adc
movsl
lods
mov
sti
scas
xor
daa
mov
lods
in
hlt
cmp
mov
xor
jge
or
in
movsb
lcall
icebp
mov
stos
jmp
push
or
jmp
mov
cld
adc
xchg
jmp
test
sub
jmp
jp
mov
jmp
loope
ret
push
dec
ss
and
ja
cli
pop
aaa
cmp
sti
repz
lods
fwait
cmp
bextr
iret
push
sbb
stc
inc
add
or
add
adc
js
cmp
arpl
mov
lcall
xor
dec
rolb
jmp
jp
rorl
jmp
cs
clc
sbb
pop
jmp
pop
test
pop
cwtl
push
shr
push
xchg
lods
pop
push
leave
adc
or
repnz
enter
cmpsb
leave
mov
dec
dec
fiadds
mov
pop
scas
dec
push
mov
nop
sub
and
movsb
cli
or
push
cld
cmp
mov
ret
cltd
test
or
jno
jbe
mov
jmp
push
xchg
shrb
dec
pop
into
inc
lcall
adc
in
cmp
cmp
or
cli
movsb
je
mov
cmc
inc
xor
add
jmp
push
stc
sbb
mov
jne
fs
in
sub
in
mov
rorb
jmp
xchg
fstl
ljmp
or
or
push
or
jmp
xor
mov
jmp
inc
movb
lock
lods
jl
sti
aas
jb
mov
push
jmp
adc
adc
enter
lcall
dec
or
jmp
pop
jg
jno
fsubl
test
cmp
push
lds
lods
rorb
je
push
sahf
jmp
push
loop
inc
xlat
lret
lahf
jmp
jae
flds
pop
cmpsb
cs
out
sbb
jp
fisubrl
lret
add
dec
xchg
jg
and
fwait
xlat
sbb
sub
stos
pushf
mov
arpl
or
sub
pop
or
cmp
addr16
hlt
aas
in
scas
or
dec
xor
sub
jp
ljmp
push
sbb
mov
inc
add
inc
sub
in
lcall
push
mov
cmp
adc
sub
lods
sbb
adc
jg
sub
scas
popl
cmp
popf
int
test
mov
fsub
add
jb
dec
xchg
mov
aad
daa
iret
hlt
jmp
push
popl
jmp
test
jle
sahf
xor
adc
sub
cltd
xchg
inc
sub
add
mov
jmp
and
dec
xchg
jmp
mov
and
fldenv
jmp
js
xor
sub
cmp
fsubrs
mov
push
or
outsl
pop
push
movsl
sub
shl
xchg
mov
leave
mov
cltd
push
jmp
ret
pop
aam
add
outsl
fidivs
sahf
lods
std
test
jmp
dec
ds
dec
xchg
jmp
and
push
xchg
nop
mov
divl
popf
adcl
das
xchg
test
mov
cmp
cmp
sub
cld
sti
stc
jmp
dec
cltd
mov
loope
test
idiv
outsl
ret
ds
shrl
and
imul
fsts
fiaddl
mov
add
dec
lods
cmp
inc
jb
and
xor
shl
pop
inc
mov
jmp
sahf
ret
xor
shrb
dec
jecxz
adc
or
filds
repz
jmp
sbb
jmp
sub
sub
pusha
sbb
cmpsb
jmp
fnstenv
fucomi
xorb
add
scas
jnp
or
jmp
ret
repnz
lods
xchg
adc
leave
push
sbb
mov
in
xor
roll
fcoms
pop
fcmovb
jmp
lret
test
inc
jmp
jecxz
hlt
mov
cwtl
leave
pop
sub
and
dec
cmc
sbb
mov
aad
pop
xorb
das
sub
mov
and
xor
imul
decl
sbb
lods
pop
lcall
dec
pop
pop
sub
push
cs
loope
mov
jl
jnp
aad
dec
mov
repz
outsb
js
loope
jmp
sbb
dec
xor
mov
loopne
jmp
add
out
les
adc
lods
fs
cmpsl
xor
pop
dec
fstl
iret
sar
mov
setge
jecxz
push
sbb
scas
mov
rorb
xor
sbb
jp
pop
movl
inc
jmp
test
fs
or
ret
and
in
jg
daa
jbe
xchg
int
pusha
push
test
in
add
andl
int
or
cmpsb
jecxz
jmp
lcall
lods
pop
ss
hlt
jb
sbb
stos
push
mov
jmp
mov
iret
outsb
shll
out
rorl
pop
or
imul
add
xchg
jnp
scas
jge
mov
xor
push
adc
mov
popf
shlb
cmp
stc
ret
pusha
jmp
arpl
cmp
into
pop
mov
and
lods
push
pop
pop
mov
popa
xchg
sub
loopne
push
decl
push
mov
jmp
jmp
lret
mov
mov
pop
lods
stos
loopne
cltd
dec
ret
sbb
jp
cmc
or
inc
movsw
fwait
movsl
lahf
in
cmpsb
js
roll
sbb
cs
cmp
mov
mov
pusha
push
iret
inc
jmp
or
ljmp
mov
pop
push
mov
scas
lcall
pop
sub
ret
aaa
fmuls
fidivs
jmp
sub
jg
jge
dec
sub
test
orb
pop
jne
xchg
jmp
sti
xor
sbb
insb
dec
adc
repnz
jns
mov
dec
mov
sarl
push
jbe
cltd
jecxz
hlt
mov
push
jmp
clc
or
ret
add
cmp
jmp
and
leave
jns
jle
jmp
popa
add
lods
lods
add
inc
cmp
mov
sub
repz
cli
sub
push
lret
jo
xor
jle
std
imul
lds
pop
dec
jl
or
dec
fstl
stc
mov
fisubrs
cmp
jmp
xor
push
sbb
dec
xor
xchg
cmp
jmp
pop
fs
jmp
sub
std
xchg
out
repnz
jb
mov
enter
insb
xor
push
outsl
lock
xor
mov
aam
and
add
jp
push
sub
sub
test
cmpsl
jbe
jmp
mov
push
lods
dec
repnz
loop
repz
lret
cltd
and
test
lods
and
jmp
aam
pusha
cmp
xchg
sub
lahf
sub
jge
sar
jg
sub
fildl
ss
push
jmp
sub
out
pop
jne
scas
imul
jmp
or
cmp
dec
xchg
fwait
jecxz
sub
jl
sbb
xchg
inc
pop
daa
nop
xor
jmp
popa
ss
aam
cltd
jmp
xchg
cli
fidivrs
shr
daa
fmul
mov
repnz
out
data16
je
jg
mov
or
cwtl
xor
push
hlt
mov
cmp
loop
mov
ljmp
mov
sub
dec
push
enter
lods
pop
pop
psubw
sbb
lds
fbstp
clc
sub
push
stos
stos
jmp
or
jmp
sub
jecxz
in
fnstenv
je
pushf
jno
and
cmp
jmp
pusha
jg
jmp
ljmp
lods
lds
rcrb
sbb
out
inc
gs
scas
imull
addr16
push
xor
push
inc
dec
lods
cwtl
movsb
fimuls
and
sbb
ret
lods
shr
sub
mov
mov
xchg
or
xor
or
or
outsb
xchg
movsl
mov
loopne
int3
arpl
pushf
pop
mov
das
loop
loope
lods
lods
add
adc
pusha
push
jmp
inc
stos
cs
call
pop
insl
out
pop
cmp
in
mov
pop
jae
imul
mov
sbb
pop
test
inc
or
and
ret
imul
sti
ret
dec
dec
jmp
bnd
cmp
cmp
jmp
cmp
push
sub
or
and
shlb
push
mulb
xchg
jge
es
mov
movsl
jno
insl
lahf
pop
out
mov
hlt
fcompl
jmp
mov
testl
jge
jmp
lret
or
test
insb
add
adc
push
scas
inc
ficomps
clc
add
or
daa
or
or
jmp
jg
mov
or
sub
inc
dec
jmp
or
mov
pop
jmp
lods
adc
fnstcw
das
loopne
pop
sbb
icebp
mov
leave
mov
inc
shrb
cmpsb
invd
data16
fmull
imul
add
pop
push
dec
scas
inc
adc
fisttpl
jmp
enter
lcall
mov
add
push
pop
xchg
outsl
xlat
jmp
cli
and
pop
scas
lods
inc
adc
sti
cwtl
push
adc
mov
dec
movsb
mov
jmp
jmp
inc
push
jl
push
mov
adc
and
lods
lods
daa
mov
add
jmp
mov
pop
jmp
push
ss
push
in
push
jmp
dec
js
push
sahf
mov
jbe
or
inc
pushl
jmp
cmp
jmp
pushw
inc
dec
movsb
pushf
mov
in
sub
aam
xchg
mov
push
clc
out
lock
xorl
jmp
scas
sbb
outsl
inc
jp
and
in
sbb
pop
subl
inc
sbb
and
loop
sub
pop
pop
mov
and
xor
insl
cld
pop
xchg
jmp
mull
add
or
cmpsb
jmp
add
mov
std
lahf
sbb
sbb
jmp
jmp
fldcw
aaa
ljmp
jl
jmp
aas
lds
jns
stc
sub
jle
loop
inc
xchg
and
imul
imul
iret
sub
sub
jo
outsb
loopne
aad
jmp
dec
adc
push
jmp
ret
out
xlat
jge
mov
sub
jb
es
sub
pop
je
inc
and
sub
push
jmp
sub
div
adc
push
cmp
jne
pop
int3
jecxz
jmp
jmp
mov
insb
adc
pop
dec
jecxz
test
mov
std
lcall
xchg
sbb
outsb
jge
test
jmp
mov
fbld
jmp
pushf
out
dec
push
iret
fldpi
push
in
shlb
push
or
outsb
jecxz
dec
sub
sbb
inc
pop
out
xlat
sbb
movsl
adc
adc
cs
mov
jp
in
mov
bound
in
scas
cltd
and
adc
jmp
movsl
fsubrs
pop
mov
lock
clc
jno
or
xchg
and
out
jb
fwait
jae
push
jg
xchg
cs
lahf
xchg
clc
mov
xchg
cmp
mov
mov
test
jmp
sub
add
test
scas
mov
xchg
adc
xchg
in
shll
sbb
sar
jmp
add
shlb
sub
push
sti
fildll
loop
mov
dec
cltd
insb
ret
fldcw
sbb
inc
fstp
es
lods
fmull
int3
pop
and
xor
sub
fs
jmp
pop
and
cs
mov
clc
test
mov
inc
add
idiv
inc
scas
testb
pop
inc
xchg
push
std
mov
data16
cmp
inc
dec
scas
sbb
aas
or
push
in
cmp
mov
xor
add
jmp
jg
add
xchg
lods
sub
mov
and
jmp
imul
or
into
push
adc
sbb
inc
push
sub
push
jp
mov
cmp
lcall
imul
jmp
negb
dec
jo
dec
mov
std
jb
in
cwtl
popa
aad
es
outsb
test
mov
sub
sahf
inc
sbb
jle
repz
scas
or
addl
lcall
clc
loopne
icebp
push
jmp
mov
in
iret
outsb
add
jmp
test
bound
mov
xchg
scas
dec
repnz
xchg
ja
jo
outsl
jmp
test
jae
nop
jmp
or
mov
jmp
fs
popa
js
add
mov
inc
sahf
scas
push
frstor
sbb
popa
sub
stc
cmp
ss
mov
and
mov
adc
ds
out
popa
xor
lods
dec
sti
add
push
iret
das
sbb
or
pop
bound
and
loop
mov
mov
sbb
adc
das
lock
stc
dec
stos
push
xchg
push
sbb
fnstcw
adc
push
or
or
mov
xchg
jmp
shrb
or
lods
inc
lahf
aam
pop
pop
push
cwtl
cld
lods
lods
adc
and
adcl
push
outsl
mov
push
cmovne
fimull
lods
push
lahf
scas
in
test
sbb
sub
jmp
fnsave
jmp
jmp
fadds
jmp
mull
test
sub
mov
or
sub
inc
inc
jle
jmp
sahf
or
mov
push
repnz
sti
or
xor
mov
imul
cmp
jmp
jnp
stos
mov
mov
outsb
loopne
test
adc
lods
imul
dec
mov
cld
dec
sarb
iret
repz
jmp
xor
sub
insl
fisubl
aad
mov
sbb
cli
and
jg
daa
sub
subb
fsubr
hlt
mov
mov
jmp
popa
call
ja
jge
js
adcl
fadds
sti
xchg
jmp
push
out
pop
inc
outsb
fs
xchg
xor
sub
jle
jmp
mov
sti
sbb
stos
xor
pop
iret
lods
cmp
cli
inc
data16
cmpsl
fistpl
std
sub
ret
pop
mov
sub
ss
mov
adc
std
push
ja
addr16
sbb
xchg
pop
mov
xor
aad
mov
repnz
into
mull
idivb
popa
pusha
and
sub
xchg
movsb
sbb
gs
ja
jmp
mov
scas
test
xchg
cmpsb
enter
ret
mov
jmp
jbe
jge
jb
jmp
add
ror
lcall
out
xchg
jmp
arpl
enter
jmp
mov
jne
out
sbb
cmp
xchg
movsl
in
lret
sbb
test
jbe
sbb
jle
mov
pusha
dec
in
pop
lods
in
xor
mov
fsubrp
push
shlb
push
mov
lcall
and
cmc
mov
scas
sti
sarb
outsb
not
icebp
sub
test
in
and
jmp
movsb
add
jmp
mov
mov
cwtl
and
push
or
dec
mov
cmp
xchg
cmp
movsl
in
inc
pop
pop
adc
xor
sarb
mov
sbb
and
sub
imul
sub
pmuludq
fsubrp
out
adc
cld
sbb
pop
adc
shr
mov
pop
cmovp
add
xchg
adc
pop
mov
notb
hlt
mov
jle
jge
or
lods
repnz
mov
or
mov
jl
shl
mov
aad
hlt
cmp
jmp
aaa
jle
data16
dec
pop
jmp
or
inc
push
cwtl
lret
mov
inc
imul
andl
sbb
imul
sbb
mov
mov
nop
das
cwtl
xchg
jno
test
xlat
in
jb
mov
sub
ds
jg
insb
adc
sub
shll
xchg
es
mov
mov
pop
or
add
scas
sub
push
std
mov
lcall
int3
stc
cmp
sub
mov
and
in
cli
pop
lods
fiaddl
add
adc
xor
adc
dec
cmp
rcl
mov
or
inc
xchg
lret
test
aad
pop
arpl
xchg
jmp
data16
mov
add
add
pop
adc
or
call
adc
sub
jae
subb
adc
call
xlat
sub
push
mov
test
icebp
cmp
jmp
scas
mov
cmpsl
outsl
in
jmp
rcrb
dec
jl
jb
jmp
add
out
sub
in
inc
pushf
inc
insl
lods
adc
mov
jmp
xor
push
imulb
jg
icebp
jmp
mov
jle
stos
sbb
dec
add
jp,pn
and
dec
jp
mov
push
into
out
ret
sbb
and
or
and
xchg
test
imul
out
jnp
lods
lret
sti
loopne
adc
jp
add
dec
jmp
ljmp
jmp
ret
imul
fidivrl
ss
jmp
stc
xchg
std
adc
jmp
out
insl
rol
mov
call
and
mov
jne
daa
pop
xchg
call
push
pushf
imul
and
push
sub
inc
sub
pop
pop
cmp
outsl
repz
jle
jmp
fildl
xor
add
outsb
insb
adc
aaa
jmp
and
ds
fs
jmp
mov
mov
pop
inc
cmp
sub
add
jmp
push
mov
repnz
daa
je
push
xor
lods
pop
aam
or
mov
or
out
push
imul
cmpsl
sub
shl
sti
adc
cmpsb
outsb
or
and
cmpsl
fisubrl
stos
mov
daa
repz
add
rcll
inc
in
jmp
push
hlt
and
es
popf
push
scas
jb
or
data16
mov
jmp
sub
fcomps
add
sbb
add
ljmp
imul
and
in
repz
rcrb
push
pop
or
jmp
int
push
fstps
jo
jmp
xchg
lret
lcall
fmulp
arpl
ds
add
sub
imul
cmp
andl
jmp
in
dec
testl
mov
inc
mov
shr
adc
sbb
lahf
fsubl
mov
jmp
bound
jmp
jae
roll
fldenv
movsb
mov
shr
iret
or
jmp
jecxz
sbb
adc
dec
ret
push
pop
lret
add
imul
inc
call
test
fwait
cmp
adc
xchg
dec
cmc
in
jmp
lcall
addr16
xor
and
sub
or
jmp
pop
mov
jno
push
lahf
xor
fldl2e
or
jge
lar
cmpsb
inc
pop
lea
roll
lock
test
or
mov
or
ds
mov
lret
jmp
mov
rcr
inc
inc
adc
popf
inc
pop
jg
fwait
pop
and
insl
into
fbstp
pop
jmp
add
out
lods
sub
add
jne
scas
jbe
cmp
xlat
das
inc
loop
xchg
mov
mov
mov
into
sti
inc
adc
cmpsl
fadds
xor
test
add
dec
cld
lret
andl
jmp
daa
call
sub
jmp
imul
push
add
sbb
and
push
pop
mov
out
and
or
push
decb
xor
jmp
adc
adc
ljmp
mov
jmp
inc
andb
mov
out
or
ds
jb
mov
cwtl
or
mov
xchg
popa
int3
jo
xchg
lret
jmp
iret
ss
jmp
inc
push
test
sub
clc
ror
je
pop
lods
imul
add
ret
je
sub
int
push
pop
cmp
daa
add
insl
or
ret
lds
mov
cmp
cmp
push
test
outsl
pop
test
int
sub
xor
nop
ficoml
int3
fsubrp
outsb
push
fstl
inc
add
mov
jmp
push
jecxz
lock
jmp
mov
lds
xor
cmp
aad
bnd
pushf
rcr
daa
inc
lret
sbb
sti
lds
or
loop
nop
cs
xchg
xlat
sbb
es
xchg
shlb
xor
cltd
jmp
cltd
lods
out
xchg
xor
imul
aaa
jmp
and
testl
jle
mov
outsb
fprem
nop
jne
stos
sti
pushf
fs
enter
in
mov
leave
jmp
test
jb
sub
and
je
das
fsubr
mov
mov
test
aam
lret
adc
jmp
sti
sbb
jmp
mov
andb
sbb
jmp
mov
mov
je
mov
sub
or
lds
lods
cwtl
ja
sahf
pop
push
adc
xchg
add
and
out
rorl
inc
push
lret
xchg
movl
lods
hlt
orb
stos
std
mov
sbb
addr16
gs
push
adc
aaa
sahf
lret
pop
pop
lahf
pop
xchg
push
jmp
call
sbb
cli
jmp
addb
jmp
js
cmp
jbe
cmp
pusha
pop
gs
xlat
daa
mov
mov
adc
mov
fnstsw
dec
lods
in
xchg
add
sub
pop
fimuls
and
jbe
out
ffreep
outsl
mov
jmp
cmc
dec
dec
leave
cmpsl
lahf
mov
out
xor
jne
jbe
int
fdivs
out
mov
lods
subl
repz
jmp
insl
jp
cmc
into
in
jmp
mov
push
mov
cltd
xor
movsb
js
pop
jno
scas
movsb
xlat
loopne
sub
aad
std
adc
mov
jmp
inc
jo
scas
icebp
je
fdiv
jmp
push
loopne
jbe
leave
push
jmp
mov
inc
test
inc
mov
arpl
leave
jmp
frndint
outsb
add
add
dec
inc
scas
inc
mov
cmp
gs
pop
adc
cmpsb
cmp
push
dec
jge
imul
shlb
sbb
sbb
lahf
sub
sbb
push
cmp
lods
cmp
loop
out
aad
or
push
jmp
cld
add
mov
or
fiaddl
std
leave
dec
cltd
add
scas
repz
movsl
push
jns
repz
jp,pt
lret
lods
jmp
pop
dec
ljmp
clc
mov
and
iret
jmp
fstpl
jne
push
pop
lds
jns
test
test
jecxz
mov
inc
mov
imul
jg
in
fsubr
pop
test
bound
fcomp
adc
mov
icebp
jmp
or
sbb
jmp
pop
push
jmp
aam
bnd
adc
nop
jmp
hlt
dec
xchg
cmp
repnz
and
mov
rcrb
inc
mov
popf
adc
mov
das
lret
std
and
inc
loope
ret
fucomi
fdivs
test
popf
jno
jl
xor
cmp
jmp
pop
stos
out
movl
push
jmp
out
lods
sbb
xor
jne
mov
repnz
jmp
movntps
aam
push
insb
in
and
xor
cmpsl
mov
adc
int3
outsb
ret
fiadds
cmpb
pop
sub
stos
aam
ret
xchg
jmp
lahf
mov
sub
movd
cmpsl
push
stc
lods
push
adc
out
adc
imul
sub
outsb
mov
mov
out
inc
pop
jge
adc
or
lock
mov
mov
loope
cmp
retw
jmp
xor
addl
inc
outsl
push
sbb
mov
xor
push
pop
rol
push
mov
push
into
pop
pop
fs
cmp
hlt
gs
movsl
sbb
dec
mov
push
sub
clc
inc
jmp
es
ret
lcall
mov
in
adc
mov
xor
xlat
movntps
out
call
push
push
adc
jl
xchg
sti
cmc
sahf
push
inc
mov
outsl
sbb
xor
call
in
cmp
aad
cli
or
mov
int
pop
loopne
adc
cmp
or
stos
jmp
mov
stc
and
push
in
adc
pop
out
mov
mov
nop
aaa
mov
stc
into
add
int3
iret
push
push
sub
or
xchg
sub
mov
setle
cmp
adc
sbb
xchg
jno
dec
jmp
mov
shlb
leave
daa
jecxz,pn
cmc
lcall
cltd
mov
cmp
xchg
and
sbb
jp
inc
cli
mov
loopne
push
mov
mov
mov
xor
jmp
sbb
mov
pop
xchg
add
inc
dec
repz
push
outsl
sahf
sbb
fwait
popf
sbb
pop
and
andl
fisubs
mov
das
mov
jbe
adc
mov
hlt
sub
add
aas
lret
inc
ficoml
add
movsl
jae
kxnorb
inc
imul
imulb
arpl
jns
and
outsb
gs
es
sub
repz
fs
cmp
or
jecxz
cli
cmpsb
inc
ret
fisttpll
faddl
ss
jmp
out
loopne
popa
and
adc
popf
jmp
icebp
pop
sub
jmp
xchg
jae
inc
scas
jmp
push
sbb
push
pop
mov
insl
cld
inc
aad
je
jmp
test
fstpt
outsb
dec
mov
in
dec
stos
mov
mov
je
out
jmp
jge
andl
jmp
aad
sub
mov
out
cmp
repz
push
insb
jge
jle
mov
jmp
rcll
push
lret
jb
xor
rorb
jno
or
repnz
loope
add
cli
and
push
mov
mov
jecxz
mov
cmc
fisubl
das
sbb
jmp
cmp
shlb
lods
js
pusha
fadd
std
outsb
jmp
lret
test
scas
icebp
sarl
mov
andl
jbe
clc
ret
loopne
dec
mov
cmpsl
inc
push
andb
mov
int3
mov
insl
mov
clc
cmp
or
mov
mull
lods
jecxz
cmp
mov
iret
jb
and
hlt
or
in
push
sub
cmp
lods
mov
xchg
arpl
jmp
mov
sbb
cmc
sub
jmp
dec
jne
push
or
outsb
jns
push
jp
les
or
mov
sub
push
jno
jecxz
cli
lcall
ja
sahf
jmp
popf
icebp
cli
sub
jmp
aad
nop
addr16
movsl
jmp
pop
sbb
daa
imul
inc
lods
lahf
or
or
or
add
sbb
push
or
jg
push
adc
mov
add
fisubrl
clc
dec
lods
mov
movl
out
fsubr
pushf
push
lahf
sbb
adc
jo
cmc
das
jmp
push
pop
mov
add
enter
jmp
or
jae
addr16
andl
jmp
popf
mov
iret
fsubrl
dec
push
cmpsl
mov
aad
inc
sbb
dec
mov
lret
notb
mov
cmp
and
ret
in
or
stos
bound
adc
inc
push
xchg
rorl
push
sub
dec
mov
or
push
cmp
jmp
std
call
outsb
mov
mov
mov
test
cltd
sbb
xchg
adc
or
dec
mov
fstpl
outsl
pop
mov
jmp
inc
ficomps
int
push
je
or
xchg
or
outsl
mov
rcrb
jmp
sbb
push
sbb
push
lods
sub
aad
mov
push
outsb
arpl
jmp
loop
pop
pop
and
xor
pop
jns
js
fsubr
mov
ljmp
filds
sub
pushf
lods
xor
jno
jmp
shll
mov
jo
jmp
dec
fs
add
jle
outsb
test
cmp
cwtl
or
jmp
ljmp
jmp
jnp
xchg
les
jns
sbbb
pop
adc
sub
sub
scas
xchg
aad
imul
jg
and
xor
shrl
mov
jle
call
imul
rcrl
pop
jmp
jecxz
insl
xor
inc
sbb
mov
xlat
jmp
inc
in
mov
dec
or
lahf
mov
xor
add
gs
mov
mov
pusha
jecxz
adc
rcrl
ret
dec
fsubr
push
dec
sbb
jp
jmp
adc
fmuls
push
xchg
and
jmp
inc
mov
jmp
pop
iret
cmp
mov
jmp
gs
add
data16
jbe
adc
jmp
push
push
fadd
inc
test
mov
xchg
sti
into
or
test
add
or
lods
or
adc
push
cmp
int
jmp
cmp
das
mov
cwtl
pop
jmp
push
pop
jbe
pop
cld
leave
jmp
sbb
jne
xlat
jmp
fidivrl
jo
int
jmp
ds
imull
adc
jmp
add
cmp
or
ja
shlb
cmp
lahf
adc
loop
inc
jmp
push
jmp
mov
andl
dec
pop
jno
xchg
dec
sbb
loop
jp
sbb
and
cmp
imul
dec
sti
sub
add
lods
stos
stos
and
jmp
sbb
les
mov
jbe
add
jmp
xchg
std
ror
cmpsl
pop
jns
pop
or
xor
mov
or
add
and
and
adc
jmp
movsl
adcb
mov
test
mov
inc
xchg
mov
xlat
out
sti
cmp
daa
jo
movsb
jmp
je
mov
movsl
mov
fldenv
jmp
es
clc
sti
sub
or
lcall
lods
into
pop
sub
hlt
popa
xchg
dec
or
es
dec
pop
dec
fwait
mov
and
sbb
jmp
out
sub
push
cmpsb
jmp
je
data16
cmp
dec
mov
jmp
inc
icebp
pop
outsl
out
pop
into
cli
jle
mov
mov
push
jbe
js
or
scas
mov
fs
test
imulb
cmp
add
mov
gs
lods
shlb
dec
test
outsb
mov
jae
jmp
scas
shlb
push
sub
or
lock
arpl
cmpsb
bnd
cmp
mov
movsl
mov
cmp
mov
inc
lods
loopne
cltd
jmp
call
out
push
decb
je
cmp
dec
jmp
lds
test
jg
jmp
mov
scas
xchg
jmp
lock
jmp
xor
and
dec
popf
xor
daa
mov
scas
shlb
popa
loop
xor
int3
sarl
sub
movsl
call
lret
inc
jmp
inc
loope
mov
and
xor
testl
jns
mov
into
imul
mov
cmp
mov
pusha
push
push
mov
jmp
push
sbb
mov
test
lea
jp
scas
push
pop
lds
add
cld
sub
jmp
xchg
cmp
jmp
cltd
pop
sbb
cmp
push
jmp
stos
push
and
mov
lock
stos
out
sahf
fistpll
sub
jo
pushf
in
cmp
shl
lods
mov
lods
int3
dec
lret
and
or
fnsave
mov
mov
push
pop
cmpsl
push
cmp
shll
gs
int
test
dec
sub
xchg
sub
cltd
shl
insl
dec
int3
cmp
es
jmp
je
and
loop
jmp
cmp
idivb
nop
std
aaa
push
sub
jb
sub
sbb
push
or
iret
pop
roll
test
mov
outsl
mov
mov
and
shrb
mov
sub
das
jmp
ja
fldcw
cmp
ljmp
movsl
fs
xlat
cltd
jmp
sti
popf
inc
inc
into
popa
sahf
jmp
fmull
add
push
sub
or
stc
and
sahf
cli
in
jecxz
das
imul
jle
xchg
add
lods
mov
jp
stc
cs
aaa
jno
jl
mov
push
roll
fisttpl
pop
dec
cmp
repz
hlt
push
add
cmc
test
jmp
add
scas
jmp
dec
lcall
in
cltd
and
std
mov
in
in
push
test
cld
push
repz
daa
rcll
ret
xor
cltd
test
pop
and
add
xchg
or
jne
dec
lods
fsubrl
or
add
push
jmp
ja
jae
mov
sarb
sub
jno
pop
jmp
pop
out
lret
xchg
cmc
fs
faddp
jmp
neg
xor
xchg
push
sub
adc
mov
push
ffreep
cmp
sub
dec
or
call
jmp
mov
aas
sub
xor
es
push
fnstsw
jmp
xor
jmp
ret
pop
jns
orb
add
hlt
mov
neg
push
cmp
sub
xor
fs
mov
and
dec
jle
mov
or
jo
jbe
dec
std
ja
imul
out
sbb
insl
jmp
shll
jmp
sti
push
int3
outsl
xor
outsb
adc
shl
adc
jmp
pop
lods
sub
pop
scas
aas
jl
xchg
addr16
enter
jmp
sub
inc
adc
imul
push
sbb
jmp
pop
push
push
fwait
les
mov
xlat
fcomi
mov
mov
shl
push
in
and
addl
push
pop
mov
jmp
nop
lahf
xor
mov
cmpl
and
xchg
mov
icebp
lods
nop
mov
add
push
mov
pop
sub
push
mov
imul
and
test
pushw
enter
sub
cmp
dec
inc
jmp
dec
fildll
pop
in
insl
loop
aas
in
jecxz
xchg
pop
scas
das
cmp
sub
mov
loop
mov
sti
and
and
mov
lds
jmp
mov
js
mov
cmp
and
inc
adc
inc
sbb
dec
cmpsb
mov
or
ror
xchg
insl
add
dec
jmp
fistps
adc
xchg
jmp
jp
es
movb
push
jmp
popf
mov
jmp
xlat
leave
mov
nop
cwtl
push
xor
repz
das
ja
jmp
dec
cmpsl
sub
xchg
sarb
mov
jmp
dec
clc
lods
out
movsl
lahf
jmp
mov
xlat
leave
push
jmp
jo
jp
arpl
cmp
jge
jmp
sbb
sbb
ss
jmp
sub
pushf
jmp
lahf
xor
xor
jo
mov
cmpsl
sub
pop
imul
or
mov
inc
lods
adc
icebp
push
jb
lret
jmp
xchg
hlt
and
mov
jmp
subb
lods
jg
jmp
mov
push
outsb
addr16
lock
mov
mov
bound
in
arpl
into
sti
jmp
xchg
cli
dec
scas
je
aas
mov
hlt
cmp
popa
dec
cmpsb
into
scas
shll
inc
scas
loopne
add
pop
mov
jecxz
cmp
or
imul
sbb
add
cs
fcos
sub
or
add
jmp
shrl
outsl
and
mov
push
in
xor
es
mov
std
jmp
cmp
lcall
inc
dec
adc
jnp
insb
inc
add
jmp
sbb
popa
sub
mov
in
mov
pop
repz
lcall
lret
add
push
push
ds
mov
lods
leave
out
fcoml
jmp
xor
shrl
das
sub
xor
inc
pop
xchg
jmp
fbld
or
jns
xchg
mov
pop
jnp
leave
xchg
nop
pop
fisubs
dec
inc
outsb
insb
mov
adc
jmp
pop
inc
sbb
jns
lcall
inc
orl
and
lods
jns
std
arpl
xor
test
mov
test
jge
jb
fldpi
dec
sub
sbb
shr
scas
call
xchg
jo
xor
jmp
sub
and
jmp
int
roll
inc
insl
jmp
je
jnp
aad
pop
lods
fstl
and
sub
jmp
jg
xlat
ljmp
pop
jmp
push
aaa
push
hlt
ljmp
movsl
sbb
sbb
push
insl
sub
pop
daa
maskmovq
testl
test
inc
sub
outsl
jbe
sub
mov
lahf
mov
test
cmp
xor
imul
inc
roll
in
outsb
push
leave
xor
sub
jmp
cli
jne
push
test
jmp
or
sbb
xchg
int3
fucomi
xchg
loopne
es
jmp
pushf
mov
inc
outsb
sbb
cmp
popa
pop
rolb
mov
imul
jmp
dec
popf
fldpi
adc
movsb
xchg
in
in
jb
imul
inc
cmp
cld
jns
out
mov
xchg
lds
leave
lock
stos
mov
pop
or
imul
add
sbb
ds
scas
rorl
aas
dec
sbb
push
adc
lods
cmc
pop
and
xchg
jmp
lret
or
inc
sti
mov
jmp
pop
es
mov
add
cmp
xchg
dec
out
push
mov
jmp
push
pop
fwait
pop
es
jmp
mov
pop
aas
into
xor
mov
shll
jmp
mov
inc
adc
jle
pop
addr16
push
sbb
mov
outsb
in
mov
lods
cs
pop
fadd
or
jmp
jmp
dec
in
lret
shl
add
inc
pop
jmp
jb
xlat
xchg
lods
fildll
enter
pop
mov
sub
dec
test
jmp
and
inc
push
xor
sub
lds
jge
adc
pop
imul
jmp
dec
jae
inc
outsb
mov
sahf
or
xorl
mov
mov
cltd
mov
jmp
mov
sbb
setl
shlb
repz
jmp
shll
pop
js
push
cmc
xchg
xchg
pop
lods
xor
push
bound
int
lcall
or
lods
jecxz
and
clc
dec
ret
adc
arpl
xchg
mov
cmp
dec
dec
loope
pop
or
pop
rcl
ja
dec
scas
outsb
out
cs
and
jmp
dec
mov
mov
inc
imul
dec
mov
jmp
in
mov
xor
ja
mov
dec
adc
jmp
mov
sbb
jmp
dec
adc
jb
push
inc
aas
ffree
pop
dec
mov
lea
cmp
repnz
push
jmp
dec
insl
xor
jbe
shll
out
or
popf
inc
sub
xlat
mov
and
out
mov
sbb
insl
shll
lods
xlat
or
call
inc
jmp
cld
ffree
repz
lods
dec
mov
mov
push
mov
lods
mov
out
and
sub
ss
and
xor
mov
push
popl
mov
orl
sarl
sahf
stc
mov
mov
or
jnp
jne
or
movsl
sbb
mov
jbe
jmp
mov
in
sub
je
cmp
jmp
dec
push
add
dec
push
lret
sbb
lret
cmp
inc
xor
xchg
mov
mov
add
data16
lock
aad
lret
sub
mov
xchg
sti
test
sub
mov
repz
sub
out
lea
xlat
jmp
movsl
lret
negb
into
mov
loopne
and
stos
loope
je
sub
repz
fcmovnu
pop
hlt
jmp
or
or
imul
ret
pop
ss
in
xor
clc
adc
inc
lcall
pmullw
inc
jecxz
push
dec
pop
aas
ds
xor
outsb
jl
jmp
movsb
test
mov
in
mov
in
jmp
mov
jmp
iret
loope
sub
jp
inc
scas
es
fnstsw
into
outsb
and
xchg
clc
sbb
imull
nop
jle
jmp
push
mov
inc
lods
js
xlat
scas
inc
fldenv
lret
or
mov
mov
pop
sahf
call
das
fsubl
sub
sbb
cmp
scas
and
sbb
sub
mov
sti
add
add
inc
jo
cmpb
and
cltd
cmpsb
push
das
mov
es
sub
faddl
mov
sub
lods
jne
sub
cld
in
rclb
fstl
jmp
stc
adc
xor
xchg
dec
or
sub
test
pop
call
pop
jmp
outsl
sub
jmp
jne
and
dec
iret
cli
in
jmp
jmp
push
nop
lods
shlb
jmp
or
leave
sti
mov
mov
mov
jmp
notl
outsl
jmp
jge
test
clc
xchg
stc
dec
sbb
xchg
jmp
lods
out
mov
cmp
jmp
jne
and
mov
jmp
or
lock
push
jge
adc
in
add
sti
xchg
in
jb
test
iret
aam
cmp
pop
push
jmp
nop
lahf
inc
pushl
repnz
movsl
lods
jbe
shrl
call
stos
lods
and
outsb
inc
dec
into
adc
mov
push
insb
jbe
and
ret
pop
pushl
in
repnz
xor
jmp
mov
ljmp
out
dec
mov
arpl
xchg
sub
fnsave
aad
sahf
pop
outsl
add
ljmp
shll
xchg
movsl
fldcw
push
push
loop
stos
pop
fcoms
stos
jl
jle
cmpsb
mov
jmp
ficomps
cld
rcll
fs
pop
or
jmp
ljmp
and
push
dec
jmp
inc
jnp
sub
inc
push
sub
push
leave
xor
in
or
mov
jmp
xor
push
mov
sti
mov
cmp
lock
hlt
fdivr
pop
lea
andl
mov
dec
sub
mov
adc
inc
cmp
jns
sbb
xchg
scas
sbb
inc
aaa
xchg
and
test
mov
xchg
adc
add
dec
jmp
add
and
out
fldcw
or
jmp
sbbl
push
sub
scas
and
outsb
popa
fstpt
add
jmp
and
inc
std
loop
sub
xchg
int
push
jmp
xor
fdiv
mov
popw
push
cltd
jp
jmp
pop
lahf
in
pusha
imul
jmp
testl
jmp
and
rcll
sub
js
adc
jmp
lods
mov
push
mov
jmp
dec
mov
jge
aaa
stos
jmp
cmc
or
aad
inc
sahf
lods
iret
or
mov
jmp
sti
cmpsb
dec
jno
or
arpl
pop
lea
sub
je
subl
adc
outsb
push
es
shll
repz
adc
mov
popa
xchg
js
xchg
jmp
repnz
pushf
add
outsb
clc
je
ficompl
or
jnp
sar
mov
mov
add
jmp
push
sbb
sbb
inc
jmp
or
sahf
jmp
pop
push
ret
pop
pop
jmp
xor
lea
addr16
mov
cmc
push
test
je,pn
mov
mov
fldt
xchg
into
cmp
out
movsl
xor
xchg
mov
jg
dec
jns
jmp
inc
mov
fiaddl
push
jmp
and
insl
xlat
jg
scas
inc
sbb
aam
xor
mov
out
loop
mov
cmp
cld
js
sub
xchg
xor
cmp
pop
inc
and
dec
xor
jmp
mov
mov
push
testb
aaa
scas
or
cltd
enter
es
ret
test
mov
addr16
daa
sub
jmp
pop
outsl
mov
adc
dec
hlt
jae
push
jmp
jns
test
jmp
and
jnp
js
sbb
jno
xchg
cli
popa
mov
adc
dec
sbb
gs
cmpb
jmp
rcrb
push
jmp
lahf
mov
xor
fsubs
sbb
clc
push
dec
scas
repz
cwtl
sub
subb
sub
jmp
rorb
or
mov
and
xchg
outsb
sbb
out
shrl
jmp
inc
fisubrl
pop
mov
fst
cmp
sbb
cmpsb
jns
aas
jmp
dec
arpl
pop
inc
shlb
lds
sbb
xchg
outsl
repnz
mov
loope
incl
fistl
pop
iret
leave
ret
movsl
or
mov
icebp
daa
hlt
mov
pop
lahf
dec
sub
lods
jmp
push
ljmp
mov
pop
imul
pop
xchg
incb
pushf
sub
dec
adc
jmp
pop
lahf
xor
psrlw
call
lods
sub
mov
push
sbb
xor
and
lods
cwtl
insb
outsb
jmp
cltd
fimuls
add
xor
int3
movsl
fwait
inc
mov
sbb
inc
pop
mov
sbb
int3
jmp
aaa
adc
sub
add
cmp
jle
jmp
or
adc
sbb
or
mov
pop
sub
mov
jmp
ljmp
jmp
ret
scas
iret
inc
mov
negb
inc
in
jmp
arpl
add
lret
lahf
pop
mov
mov
cld
lods
pop
std
or
push
jns
out
sub
icebp
adc
mov
arpl
push
rcll
sub
jnp
je
insl
and
mov
or
xlat
lods
ss
jmp
clc
ret
xor
sarl
movsb
lcall
jp
fisubrs
ret
cmpsb
sbb
add
lods
jmp
retw
stos
sti
jo
bound
inc
push
aam
rcrb
push
lds
sub
push
mov
mov
lods
sub
and
stos
xchg
xchg
cmc
jns
mov
fistl
inc
outsb
mov
xchg
add
ret
ret
enter
lods
push
mov
out
inc
fmuls
dec
jmp
sub
sbb
mov
push
pusha
out
aam
test
and
insb
jmp
inc
jmp
mov
ss
pop
iret
jmp
orb
or
jecxz
mov
sub
pop
stc
mov
jmp
jp
push
enter
jmp
pusha
pop
pushl
sub
jmp
push
adc
adc
outsb
add
out
jmp
xchg
scas
mov
addr16
pop
push
adc
lock
fsubrp
mov
or
inc
leave
sub
leave
add
outsb
mov
sub
adc
inc
jns
pusha
je
imul
mov
fisttpl
or
jmp
xchg
cmp
push
dec
adc
jmp
jecxz
leave
dec
jg
in
lods
push
lea
sub
fsubr
lods
in
pushf
mov
cmc
cmp
jmp
mov
inc
xor
fs
jmp
into
xorb
loop
cmp
lahf
scas
mov
icebp
cmp
mov
lds
mov
shll
cli
push
mov
scas
stos
das
lock
sub
pop
pop
pop
xchg
and
jp
push
das
lea
loope
push
sbb
mov
lods
out
add
cmp
lock
sub
int3
lcall
lods
data16
scas
insl
inc
into
js
cmc
dec
ds
arpl
pop
jmp
sbbl
jmp
call
int
jmp
adc
jbe
and
cmp
push
daa
cmp
addr16
sub
lcall
inc
roll
or
cmp
mov
jb
push
or
jmp
jmp
ja
lods
jo
dec
cmp
mov
paddb
jmp
pop
cli
push
daa
lahf
jmp
dec
test
test
jmp
aas
cli
dec
push
lods
sub
push
sbb
fstp
aam
add
or
lods
aas
or
imul
or
ret
pop
sub
loop
inc
mov
or
pop
sti
arpl
repnz
rcl
or
and
push
test
adc
addr16
sahf
add
sbb
sub
cwtl
jge
pusha
or
in
jmp
movsl
xchg
enter
jnp
pop
pop
cmp
inc
or
daa
mov
insl
xchg
hlt
cmp
clc
aam
cltd
add
es
jmp
xor
orl
bound
imul
mov
mov
mov
addb
fmul
and
test
dec
mov
cltd
or
mov
in
int3
mov
xor
xor
ret
loopne
jmp
ja
cmp
cs
mov
mov
iret
jle
imul
cmpsb
sar
and
push
and
add
push
popa
out
iret
sbb
mov
jmp
lods
mov
mov
and
lea
sub
cmp
inc
test
mov
clc
pop
dec
aam
fmul
sub
inc
add
into
dec
sub
mov
pop
inc
sub
pop
mov
sbb
movsb
pop
lods
jnp
out
sub
ja
dec
leave
pop
cmc
xchg
and
inc
xchg
cmpsl
imul
sub
xor
ss
adcb
lods
daa
cs
pop
or
jb
or
std
push
lods
out
lret
mov
mov
mov
pop
pop
jnp
sub
sbb
hlt
into
jb
cmp
xchg
outsl
or
sbb
lcall
push
or
mov
inc
pop
jb
add
movsb
dec
int
xlat
or
inc
divb
clc
test
pop
inc
fdivrp
push
push
int
inc
shll
push
add
adc
jmp
aaa
lods
pusha
pop
push
cmc
jmp
filds
add
fwait
outsb
jp
ss
repnz
jmp
pause
jne
add
pusha
mov
pop
int3
lods
ret
les
dec
insl
and
andb
push
xlat
mov
dec
mov
dec
sbb
int3
xor
cmpsb
sub
ror
stc
aas
mov
popa
lods
scas
xchg
push
or
jb
stos
fwait
mov
lock
xor
jmp
shll
dec
add
sub
int
push
cmp
or
pop
jb
scas
or
mov
popa
pop
xchg
out
and
xor
dec
les
pop
roll
xchg
inc
mov
daa
mov
add
mov
push
jmp
std
jne
mov
mov
sub
cmp
jbe
ret
cwtl
aam
push
stos
jle
aad
fdivr
push
stc
pop
mov
cmpl
movsb
ja
fistpl
cmp
push
mov
mov
mov
xchg
sbb
xlat
xchg
jmp
aam
iret
loopne
sbb
shrl
sub
jmp
loopne
push
dec
lahf
xorb
fcompl
pop
inc
add
add
sbb
push
iret
fs
imul
jmp
mov
repz
int
je
xchg
cli
lods
mov
adc
and
mov
out
jecxz
jmp
mov
mov
jmp
pop
add
sar
out
jmp
fistpl
fldcw
enter
dec
test
cli
movl
adc
fcoms
js
mov
mov
add
xchg
mov
or
mov
sub
lods
fwait
and
inc
sahf
jmp
loopne
mov
lods
outsb
test
pop
sub
lret
jmp
out
jns
jg
jno
sub
insb
dec
jmp
lret
movsb
insl
cltd
int3
es
fimuls
and
pop
ffreep
cmp
mov
pop
insb
sub
jmp
mov
push
gs
sti
jmp
pop
adcb
jb
jmp
adc
out
leave
inc
push
jmp
je
mov
cltd
shrl
sub
mov
mov
movsl
cmp
jmp
cmpsb
mov
test
adc
xor
cld
pop
cltd
mov
lods
imul
loop
lahf
icebp
outsl
pop
jb
or
sti
mov
in
test
lcall
ljmp
xor
in
dec
movsl
outsb
add
push
push
negl
test
call
mov
jo
xor
or
push
and
sub
lds
jmp
subb
sarb
std
inc
mov
dec
push
and
mov
bound
jg
sbb
bnd
inc
out
mov
enter
sbb
ret
mov
mov
mov
fimuls
push
jno
xchg
lods
repnz
cmp
das
sti
or
pop
inc
fdivl
pusha
shrb
push
push
push
scas
daa
mov
in
adc
jo
push
and
pop
fwait
leave
decb
popf
inc
mov
fists
int
imul
or
pop
push
sub
pop
mov
cmp
sub
in
jo
pop
sub
ret
imul
push
inc
xorl
add
xchg
out
ss
jmp
call
imul
inc
hlt
and
jge
mov
xor
stos
mov
aas
shr
std
mov
xor
outsl
jmp
insl
loop
cltd
fbstp
sub
jno
mov
jmp
jl
shrb
push
jmp
sub
or
scas
inc
addr16
push
sahf
test
mull
dec
and
cmpsb
in
cwtl
ret
pop
push
add
jb
cmp
fmul
dec
sbb
ret
jmp
mov
je
dec
fbld
insl
add
ficompl
mov
sub
mov
and
mov
hlt
test
jmp
sub
aam
std
shrl
jmp
inc
outsl
repnz
loope
jmp
push
xor
outsb
and
out
adc
push
xchg
mov
jmp
add
pop
mov
icebp
out
push
sub
adc
je
out
sbb
xchg
mov
jmp
push
and
jle
scas
in
sbb
shlb
jmp
pusha
jb
or
popa
outsl
add
jmp
adc
jmp
loopne
mov
inc
das
movsb
cmc
jmp
je
jl
jo
hlt
outsb
inc
fldl
stos
repz
iret
pop
adc
mov
sub
in
ds
adc
jmp
leave
aad
adc
jmp
add
fcoml
push
add
enter
cmpsl
jmp
lcall
jmp
jg
inc
or
jmp
pusha
dec
push
jecxz
lahf
cmc
lods
ret
jae
xchg
dec
les
jmp
orb
jl
out
jmp
leave
mov
mov
mov
insb
sub
mov
mov
push
dec
jmp
inc
gs
sub
sbb
in
sub
xchg
mov
dec
sub
scas
lods
lods
sub
mov
xlat
data16
loope
mov
loop
and
into
ret
xor
lods
pop
rcrb
daa
dec
stc
imul
or
jbe
jmp
xor
icebp
fcompl
dec
dec
sub
sub
jb
movsl
mov
push
xor
add
jmp
gs
lds
imull
xor
and
sti
jno
stos
pop
jmp
cltd
sub
adc
mov
testl
subb
jmp
pop
int3
push
add
outsb
push
adc
jmp
inc
jmp
jp
xchg
daa
push
adc
pop
jmp
cli
mov
dec
cmpsb
outsb
xchg
js
push
pop
adcb
jmp
or
in
jmp
xor
dec
mov
inc
jo
mov
int3
xchg
test
sar
add
int
pop
outsb
stos
cmpsb
outsb
jnp
and
dec
add
out
loope
jmp
push
sti
inc
pop
cmc
dec
xchg
mov
es
jmp
xchg
xchg
lcall
shlb
std
xchg
jmp
mov
mov
mov
dec
jmp
dec
das
or
lret
sti
dec
cmp
lods
out
jmp
inc
fmuls
fstps
cltd
ret
clc
and
sti
jge
and
sbb
xor
inc
aas
lcall
or
jmp
mov
insl
cmp
inc
in
arpl
jg
in
jmp
or
lods
dec
std
pusha
scas
jb
lds
cmc
loop
jmp
xchg
mov
jns
cmp
pusha
andl
jmp
hlt
int
mov
inc
or
rcr
mov
cld
lods
push
dec
pop
aas
insl
or
sub
push
scas
adc
push
xor
stc
hlt
je
xor
out
aam
or
ja
lock
aam
mov
push
test
inc
mov
or
push
or
ficoms
ret
sub
mov
out
sbb
lock
por
fadd
xchg
jno
jmp
jg
push
adc
notb
xchg
sub
lret
loop
mov
push
xchg
jb
ss
jno
add
fidivrl
or
jne
jmp
sbbb
jmp
mov
xchg
jl
add
and
repnz
lret
jmp
imulb
jl
jp
jmp
iret
adc
mov
inc
dec
jo
sub
add
jmp
pusha
out
repnz
xchg
fsubrp
in
stos
mov
inc
iret
jmp
cmpsb
sbb
pushf
sub
push
jmp
das
push
mov
dec
inc
add
push
mov
pusha
rorb
rorb
push
jmp
imul
sub
pop
in
jmp
jle
or
push
adc
cmp
and
shll
xor
pushw
loopne
repnz
loope
jae
inc
and
scas
jb
or
mov
int3
gs
sbb
or
movsl
xlat
sub
outsb
pop
arpl
into
sti
xchg
jns
loope
inc
jmp
mov
fs
jmp
cmp
outsb
sub
sub
and
nop
dec
jmp
shll
out
xorb
fs
jno
lods
pop
sub
enter
jmp
ds
xchg
jmp
int3
or
aad
movsl
mov
adc
in
dec
orb
inc
sbb
pop
inc
lods
inc
xchg
fistpll
xor
loop
cmp
sbbb
inc
nop
out
das
dec
sub
fs
jmp
mov
imul
push
test
outsb
xchg
fidivl
ret
fsubr
imul
outsl
cmc
jmp
and
dec
dec
dec
movhps
hlt
mov
rclb
outsl
into
mov
popa
jmp
scas
xchg
adc
adcl
xchg
mov
gs
add
divb
cwtl
popa
sub
push
xchg
int3
daa
je
cmp
mov
jmp
jb
sub
or
lea
int
lcall
loop,pt
imul
sbb
jmp
pushf
cmpl
imul
lock
jns
adc
jb
insl
int
fdivrl
push
out
or
xor
xlat
mov
cli
andb
jle
stc
jmp
or
cld
sbb
lcall
sbb
jp
and
ret
outsl
dec
ja
scas
mov
jmp
xor
subl
pusha
cmp
insb
jmp
cltd
movsl
sub
shll
loope
ficomps
in
jbe
xchg
cltd
mov
inc
in
push
lret
test
or
fucomi
xor
jb
imul
mov
outsb
add
jo
mov
lods
pop
mov
je
cmpb
jbe
stos
outsb
leave
push
dec
add
push
lret
mov
sub
push
sbb
mov
sbb
and
inc
jmp
mov
es
xlat
std
flds
xor
adc
je
lea
lods
sub
int
push
cmovs
sbbl
dec
ljmp
xor
mov
mov
test
insl
jae
adc
or
stc
xor
ds
jmp
inc
jp
and
mov
es
lea
stos
dec
jmp
rcll
mov
sub
cltd
add
lock
pop
daa
pop
jbe
cmp
ror
div
lahf
cmpsl
lcall
mov
movsl
jmp
jnp
gs
imul
insb
sub
mov
adc
test
xchg
add
push
pop
jmp
fistps
push
mov
adc
or
test
pop
adc
jecxz
nop
cwtl
sbb
std
mov
pop
scas
mov
call
loope
sbb
mov
and
sbb
popa
in
movsb
lret
jmp
out
mov
out
js
lahf
mov
and
cmp
or
sub
or
push
dec
jnp
inc
xchg
imul
or
lods
inc
adc
imul
iret
sbb
mov
push
adc
jmp
adc
mov
inc
scas
cwtl
testb
dec
sub
jge
and
and
xor
incb
iret
insb
push
pusha
ret
fisubrl
notb
jmp
test
mov
icebp
xor
sti
sahf
pop
aas
and
popa
lret
stos
pop
imul
inc
orb
lock
stc
dec
shrl
jmp
adc
lods
mov
or
cmpsl
jmp
frstor
dec
jg
jmp
icebp
addl
pop
movsb
loop
mov
inc
jmp
and
jl
jmp
xchg
xchg
popl
jle
les
jno
mov
loope
lcall
and
call
scas
ljmp
xchg
pop
sub
or
push
fildl
add
mov
fs
cmpsl
cmpsb
pusha
jno
cmp
outsb
sub
int
or
stc
jo
ds
jg
adc
mov
icebp
jmp
mov
mov
jmp
in
cmp
sub
lods
fnstcw
stos
sbb
jae
adc
push
jmp
les
testl
cmpsl
xor
push
aam
push
pop
pop
jo
mov
jmp
cmp
jge
outsb
ja
jl
mov
mov
shrb
stos
sbb
or
sub
je
insb
scas
and
cld
orb
or
leave
shr
jmp
in
mov
stos
pop
aas
push
jmp
out
add
dec
enter
inc
imul
mov
sbb
fimuls
sub
scas
sbb
into
mov
push
jmp
cmpsl
sub
add
or
pop
cwtl
fadd
mov
imulb
movsl
jmp
adc
jmp
mov
push
jmp
dec
pushf
pop
push
scas
repz
jmp
adc
or
popa
dec
xor
loop
sbb
outsl
xor
pushf
mov
lods
fadds
ds
adc
icebp
xchg
add
pop
sub
mov
mov
insl
mov
outsb
icebp
arpl
jb
fsubrs
dec
idiv
inc
test
xchg
test
mov
out
stos
pop
add
lock
jae
iret
scas
mov
lret
dec
jmp
dec
push
outsl
add
jmp
pop
icebp
jmp
sub
ljmp
jg
mov
xchg
enter
std
sub
cmp
popa
push
jle
lods
xchg
or
mov
imul
jmp
insb
ret
icebp
cmp
add
movl
or
shr
lds
loope
inc
or
fnstcw
loop
sub
std
jmp
cmpsb
popf
or
shr
mov
xor
pop
cmc
mov
jmp
out
mov
sbbb
jmp
mov
enter
lret
or
mov
sub
shl
bound
lods
sub
push
dec
sub
in
mov
loopne
mov
mov
movsb
cmp
cmp
mov
or
adc
ret
jmp
dec
xor
mov
mov
mov
clc
mov
mov
or
mov
iret
std
sub
xorb
imul
test
pop
outsl
fnsave
dec
cs
jmp
and
loope
jg
jmp
mov
cmc
pop
sbb
pop
jmp
hlt
or
mov
mov
and
cltd
pop
jmp
fadds
lahf
icebp
sbb
cmp
adc
or
loopne
ret
xlat
jmp
je
icebp
dec
xchg
mov
jmp
and
cwtl
jle
cld
jmp
outsl
loope
xchg
ja
fsubr
mov
push
push
sbb
stos
pop
jl
movsl
sbb
mov
jmp
jo
push
or
cmp
jmp
outsb
leave
jnp
inc
mov
dec
lods
gs
fwait
cmovnp
fisttps
shrl
imul
xchg
hlt
push
add
mov
inc
jmp
imul
imul
fwait
idivb
shll
adc
cwtl
sub
test
hlt
pop
repz
jmp
int
int3
mov
jmp
scas
stos
pop
push
orl
push
lock
sbb
rclb
daa
pop
xchg
jmp
or
lret
sarl
addb
push
stc
and
or
xlat
es
sarl
jmp
jns
icebp
int3
jecxz
pop
mov
add
dec
push
dec
sbb
data16
xor
xchg
or
scas
fwait
ja
mov
popf
xor
jmp
fists
subl
sbb
jb
xor
cs
popl
mov
cmp
bound
sahf
xor
jmp
pop
daa
mov
xorl
out
adc
mov
jmp
sub
mov
mov
fmull
stos
dec
jbe
push
sub
fnstcw
lods
jmp
or
xor
pop
das
mov
mov
jbe
aam
dec
lods
clc
fsub
leave
cmp
xor
dec
sti
mov
outsb
pop
lock
in
ljmp
adc
xor
js
fs
cmp
decb
push
fmul
outsl
repnz
iret
int3
or
dec
pop
xor
mov
aaa
fnstsw
and
outsl
mov
rclb
hlt
push
scas
mov
pop
js
ror
dec
in
mov
cmp
xlat
inc
test
sarb
andb
sbb
mov
ret
sbb
xchg
in
loop
icebp
jle
jecxz
add
mov
mov
adc
adc
mov
arpl
or
mov
movsb
add
pop
arpl
mov
in
dec
loope
xchg
dec
xchg
lods
divl
scas
rcrb
pop
stos
es
mov
lcall
out
movsl
lret
aad
test
push
xor
sbb
adc
sbb
cmp
cmp
dec
sub
inc
testl
mov
jne
jmp
sahf
aam
ss
data16
adc
xchg
dec
loopne
or
lret
sbb
int
aad
dec
push
cmpsb
outsb
sbb
adc
test
adc
pop
jae
xor
mov
dec
push
push
jmp
and
hlt
popa
aad
jmp
cmp
ss
pushf
and
or
mov
iret
sti
sbb
jmp
jmp
and
ljmp
jmp
xchg
and
mov
lret
fisubrs
sub
shr
daa
popf
orl
xchg
push
adc
mov
cmpsl
stc
test
hlt
xchg
inc
cltd
scas
subb
xor
or
mov
fs
cmp
jbe
inc
std
sbb
or
mov
mov
jmp
cmp
fisubrl
add
test
movsl
pop
xor
out
pop
add
pop
inc
fisttpll
xchg
adc
repnz
adc
repnz
pop
int3
insb
int
pop
jae
shr
push
enter
jns
jne
sub
aas
int3
dec
pop
jmp
rclb
sub
mov
cmovge
lods
bound
sahf
daa
ret
stos
jmp
and
sub
jmp
xor
cmp
mov
sub
and
xor
cmp
pushf
sbb
es
pop
jmp
xor
adc
push
xchg
fisubl
jp
jmp
adc
xchg
push
dec
dec
shrb
fsubrs
call
jmp
fs
xor
aad
xchg
jmp
aaa
out
lds
mov
sbb
lods
pop
fidivrl
aaa
lods
sbb
mov
or
cmpsb
lahf
sbb
sub
mov
jno
sub
scas
lods
sbb
outsl
pop
jmp
or
arpl
mov
lods
js
and
mov
jno
jmp
or
add
jmp
gs
int
pop
push
jmp
inc
test
fwait
aaa
in
lods
dec
sbb
mov
lcall
cmc
xlat
pop
xor
das
iret
lods
jmp
xchg
std
outsl
sti
jmp
xchg
and
or
push
xor
scas
push
jp
xchg
sti
addb
jmp
add
sbb
sub
push
pop
sti
loopne
mov
jmp
pop
push
sti
fidivrl
imul
add
sbb
mov
push
jbe
push
pop
jnp
jmp
pop
dec
push
rcl
xchg
jmp
mov
mov
jmp
xchg
enter
xor
jp
aas
lods
sbb
mov
adc
shll
pause
scas
cmpsb
inc
sub
dec
xchg
or
loopne
and
mov
je
pop
aad
sti
insb
jle
jmp
mov
adc
mov
jmp
mov
or
jne
ret
js
xor
xor
pop
hlt
scas
ja
rorl
mov
mov
sub
jmp
mov
lods
cmpxchg
inc
out
imul
or
push
dec
lahf
xor
inc
lea
movsl
loopne
adc
sub
jmp
insw
ret
xchg
or
das
pop
insb
cmpsl
sub
sbb
adc
mov
xor
and
jmp
or
push
adc
and
outsb
icebp
jmp
stos
fistpl
shll
push
jo
mov
jg
adc
jmp
outsl
pusha
lcall
mov
ficoml
jle
xchg
pop
hlt
jecxz
lods
cmp
sbb
fmul
into
jmp
sbb
pop
adc
scas
add
push
or
clc
cmpsl
icebp
adc
add
test
jbe
stos
mov
cmp
push
mov
mov
push
lcall
or
fistpl
push
mov
outsb
out
jmp
and
jmp
or
xlat
jmp
subb
mov
test
inc
jno
push
in
push
mov
pop
mov
in
xchg
jns
sub
add
sub
xor
popa
ds
jecxz
in
jmp
pop
insl
lret
or
push
xorl
jmp
lret
jmp
pop
jp
outsb
int3
test
out
dec
dec
jmp
sbbb
aaa
push
outsl
jmp
adc
mull
into
les
push
adc
sbb
mov
test
xchg
movsb
movsl
outsb
jmp
lods
sti
sub
adc
jp
shr
push
xchg
or
pop
jmp
push
or
add
outsb
call
aad
dec
in
lods
adc
dec
popa
pop
aad
pop
pop
scas
xor
jmp
leave
xlat
rolb
aam
add
jmp
dec
dec
stos
push
jnp
repz
cltd
stc
lods
xchg
ja
imull
jmp
and
aad
xchg
adc
repz
mov
mov
imul
mov
nop
setae
mov
lods
pushf
aas
stc
rolb
sbb
mov
out
jmp
adc
xor
sbb
ss
mov
or
cli
adc
and
jp
mov
pop
jmp
stos
jb
inc
data16
stc
or
mov
insl
aam
jmp
adc
sarl
inc
inc
mov
nop
dec
push
inc
addb
repnz
add
enter
jl
jmp
mov
inc
stos
mov
hlt
movb
xchg
cmpsl
out
leave
stos
iret
mov
mov
push
roll
sbb
or
xchg
cmp
jmp
jnp
lea
sub
jmp
jge
sub
jmp
xlat
xor
orb
jg
xorl
xor
cmpsb
and
cmp
adc
jmp
mov
adcb
sahf
into
lods
pop
imulb
inc
hlt
sbb
sbb
lods
jge
push
enter
js
sbb
mov
jmp
cld
pop
ds
rolb
dec
and
jmp
sub
fxch
mov
jmp
inc
aam
cmp
mov
mov
fwait
dec
pop
jmp
mov
pop
add
sub
mov
mov
sub
inc
lahf
xchg
aam
int3
xchg
add
or
sbb
fiadds
inc
add
je
imul
push
scas
popf
test
daa
fucomip
push
mov
xor
mov
jne
pop
or
push
imull
or
push
sbb
jmp
and
cld
rcrl
pop
daa
popf
cmp
adc
jmp
test
inc
push
push
xor
in
daa
cmp
outsl
pop
or
je
lods
lods
dec
or
mov
int3
jmp
shl
mov
lods
pop
ds
push
cmp
inc
adc
add
and
mov
fdivrs
js
in
xchg
pop
outsl
xor
loop
lret
add
inc
popa
test
sub
adc
jmp
lds
mov
jb
insl
cmp
xchg
cli
stos
xchg
test
int3
call
pop
outsb
cmp
cmp
push
mov
dec
sbb
repnz
jle
mov
pop
inc
insl
iret
jmp
mov
loopne
stc
mov
pushf
inc
les
adcl
es
fwait
and
inc
mov
jnp
xorb
push
in
clc
cmp
jmp
inc
int3
ret
jmp
js
jge
sbb
cmp
movsb
or
xlat
repnz
jl
or
and
lahf
pop
jmp
jge
mov
push
pop
jle
lods
xchg
push
test
fwait
jp
jmp
cmp
jne
mov
lds
cmpsb
sub
and
mov
outsb
clc
sar
jbe
sbb
jmp
call
fbstp
push
mul
sub
mov
mov
daa
loope
lods
xchg
jmp
dec
pop
test
push
jmp
inc
nop
push
pop
adc
jo
arpl
rolb
daa
in
push
push
ljmp
stos
or
jmp
out
insb
leave
cmp
push
sbb
pop
arpl
push
jmp
dec
sub
xchg
jmp
dec
jb
loop
adc
cmp
mov
cmc
sub
mov
xor
jmp
pop
adc
dec
leave
mov
cltd
adc
int3
adc
std
mov
push
xor
xor
sub
movsl
shll
pop
pop
dec
xchg
xlat
arpl
sub
daa
jmp
es
xchg
mov
add
loop
rolb
xor
dec
fcmovnu
outsl
dec
repnz
stos
jmp
pop
lcall
sub
cmp
jmp
or
and
insl
jmp
int
icebp
sarb
enter
clc
mov
xchg
mov
or
out
push
mov
sbb
leave
pusha
gs
cmp
cld
or
push
fstps
jmp
push
call
repz
lahf
sar
mov
lret
xchg
dec
clc
jb
and
sub
add
insb
jns
sbb
mov
mov
xor
outsl
ja
sbb
or
push
inc
push
sbb
stos
out
and
loope
or
mov
inc
mov
sti
dec
inc
fidivrl
mov
pop
jae
mov
add
loopne
ss
dec
testb
fisttpll
cmpsb
js
fisubrs
or
jmp
addr16
cwtl
lods
fcmovne
add
pop
sub
mov
lcall
push
pop
pushl
add
push
cltd
jmp
mov
and
pop
jno
sub
sub
mov
pop
adc
jb
cld
lods
xchg
xchg
popf
lods
outsb
sar
notb
sbb
fstpt
mov
sbb
lods
cmp
flds
inc
jmp
pop
cmpsb
pop
pushl
sub
scas
orb
mov
aas
outsb
xchg
push
xchg
cli
dec
sbb
xchg
jnp
mov
mov
jmp
aad
and
and
or
test
sbb
xlat
jl
cmpsb
scas
sti
add
jmp
popa
sbb
loopne
aad
pop
push
lea
jmp
cmpsl
inc
pop
adc
push
es
popa
addb
sub
cwtl
jmp
mov
repnz
dec
dec
sub
test
sbb
mov
popf
and
call
pop
adc
lock
popa
sub
in
lods
js
jbe
loope
cmpsl
xchg
outsb
sarl
pmullw
sub
mov
sbb
xlat
mov
shrb
cwtl
push
aad
sub
pop
jmp
test
sub
cmp
push
mov
scas
orb
daa
cmp
ja
mov
fs
or
fsubs
jmp
mov
mov
jmp
cmpsb
mov
dec
lods
hlt
roll
xchg
inc
ss
jmp
in
lods
popa
ja
cmp
xchg
stos
mov
test
mov
jg
fs
mov
aad
test
cmpsl
inc
dec
and
jmp
jnp
jle
xor
addr16
jmp
movsb
and
cltd
cmp
cld
mov
mov
adc
sub
jmp
test
sub
shr
cmpsl
repz
insb
aaa
xchg
lods
lss
inc
or
xor
jmp
xor
sub
loopne
push
mov
ja
push
push
lods
bound
cltd
jle
dec
dec
mov
pop
rorb
jmp
push
sbb
or
lods
sbb
dec
daa
test
loop
or
xchg
das
cli
rorl
ffreep
mov
mov
jecxz
inc
fdivrs
inc
sahf
add
mov
dec
dec
lods
sbb
in
dec
outsb
mov
sub
sub
arpl
mov
fnstenv
push
sub
jg
pop
por
add
mov
cmp
outsb
pop
sbb
in
jp
je
add
push
dec
idiv
fimuls
xchg
je
fwait
mov
push
rcr
sub
jmp
test
fstp
cwtl
jmp
imul
orb
jmp
movsb
mov
test
and
add
sub
notb
out
and
jmp
cwtl
push
jmp
sbb
shrb
fst
dec
hlt
sub
pushf
movsb
daa
dec
shr
jbe
adc
sbb
xchg
xor
scas
xor
and
or
jb
jmp
xchg
std
inc
fisttps
xchg
stc
inc
es
dec
ja
pop
fisttpl
stos
pop
lods
add
adc
addr16
sub
scas
sub
sub
adc
sub
adcl
shlb
enter
loope
enter
cwtl
fmuls
xchg
push
cmp
rorl
test
xchg
push
imul
jb
addl
icebp
push
jmp
lds
sub
bound
shr
jns
in
mov
cmp
shlb
in
divl
lret
mov
lret
push
jmp
push
jns
das
pop
pop
mov
pop
iret
js
repnz
cmp
cs
sub
dec
mov
or
jl
clc
add
or
push
out
cli
jmp
sahf
addl
fwait
cmp
jnp
inc
ja
loope
ljmp
and
adc
mov
fucomip
sahf
fwait
add
imul
mov
aam
lods
fs
andl
inc
adc
leave
push
jmp
lods
adc
push
jae
xor
push
out
int3
and
das
jmp
not
lahf
sbb
es
or
xor
xchg
sub
jmp
cmp
aam
outsl
arpl
das
fcoms
enter
push
out
testl
bound
fucomi
ss
cmp
scas
xchg
lods
mov
out
adc
jmp
mov
popa
pop
xchg
jmp
in
dec
inc
stos
jmp
jge
shl
mov
push
imul
lock
inc
inc
fs
or
xchg
jmp
fnstcw
jmp
sbbl
pop
jmp
or
xor
jle
loope
leave
cmp
xor
jmp
test
push
xchg
aad
mov
dec
or
movsl
sub
inc
in
push
or
mov
mov
movsb
mov
in
das
sarl
push
aas
sbb
push
jb
pop
jge
jmp
mov
into
arpl
xor
pop
int
out
daa
push
pushf
sti
rcrb
mov
testl
sbb
fs
test
fistl
sub
push
mov
sbb
insl
hlt
jmp
daa
add
jne
aas
jmp
stos
sbb
cwtl
pusha
fsubr
leave
out
popa
inc
sbb
mov
cmp
movsl
or
lret
or
std
mov
cmp
sub
nop
lcall
mov
jg
mov
cs
add
adc
xor
stc
pop
stos
or
sbbl
scas
jb
dec
add
mov
push
pop
loope
scas
cmpsb
jecxz
push
add
or
sahf
shrb
or
jbe
pop
jmp
jmp
je
jmp
xor
or
lahf
adc
pop
sub
push
dec
mov
pop
out
punpckhbw
jmp
pushf
fldcw
movsb
mov
fisttpl
jmp
out
stc
mov
add
inc
test
mov
cmp
inc
enter
sub
adc
ljmp
mov
dec
xor
mov
sbb
cld
je
and
dec
inc
pop
xor
mov
lcall
cld
mov
jl
ret
and
dec
mov
mov
jge
ds
sub
leave
mov
xchg
dec
push
cmpsb
xchg
mov
xchg
rorl
dec
inc
scas
sti
pop
inc
js
into
dec
test
leave
mov
jns
and
subb
jbe
xchg
sbb
push
popf
in
mov
jl
sub
test
adc
mov
test
inc
int3
pop
lods
xlat
cmp
xchg
out
add
cld
pop
xchg
stc
scas
xchg
pusha
or
sub
and
xor
les
push
clc
jmp
rorl
jg
cmpsl
push
aas
sbb
outsb
scas
movsl
push
sub
add
leave
popf
pusha
pop
imul
imul
xchg
mov
inc
cmp
aas
into
and
je
sarl
pop
cmpsl
sub
aam
and
jmp
in
push
loop
sub
dec
jmp
adc
dec
aam
ss
mov
cmp
jmp
inc
outsb
inc
mov
or
or
sti
adc
mov
jle
jmp
lods
pop
test
les
jmp
mov
rcll
dec
fwait
sub
sub
sti
pop
jmp
mov
cli
dec
adc
in
int
test
pop
cld
out
mov
pop
movsl
jmp
mov
push
repnz
rcrb
dec
push
add
inc
nop
jmp
pop
add
jp
and
cli
xor
sub
mov
les
push
and
fucomi
loopne
mov
mov
sub
hlt
dec
jmp
push
jge
dec
sbb
or
push
iret
mov
insb
cmpsb
das
pusha
fiaddl
mov
in
sbbb
add
gs
loopne
and
mov
cmpsb
sub
push
rclb
mov
jmp
and
jb
pusha
xor
stos
jecxz
shrl
push
pop
adc
aas
cmp
jmp
out
add
ret
fdivr
mov
daa
lcall
mov
stos
add
addr16
insl
outsb
pop
jmp
xchg
pop
popa
mov
js
xchg
inc
lea
pop
or
and
mov
std
pop
pop
and
int3
stos
and
jmp
aad
xchg
test
ss
lea
mov
or
mov
push
dec
insb
sub
xchg
jmp
pusha
mov
fsubr
push
dec
popa
jb
inc
jmp
addr16
repnz
jmp
add
xchg
outsb
aas
xchg
test
lret
dec
and
jno
fs
gs
outsb
mov
subl
sarl
nop
cmp
scas
negl
jmp
add
and
add
jmp
or
ret
jmp
cli
je
mov
sti
cmc
lret
clc
inc
out
xchg
in
cmp
out
jns
jmp
enter
in
add
insl
pop
jns
jp
and
leave
imul
test
mov
in
sbb
mov
jmp
into
stos
lods
ss
insl
ret
icebp
lods
loope
or
adc
out
int3
cmp
dec
jmp
mov
clc
sub
movsl
jae
add
pop
adc
or
movsb
add
lcall
sub
push
pop
xor
jno
xor
loopne
sti
arpl
xchg
mov
lods
aaa
outsl
mov
mov
jmp
js
mov
jmp
push
les
jmp
fiaddl
ja
rclb
add
dec
out
add
jbe
xlat
ja
jmp
std
in
mov
in
jmp
jecxz
sbb
je
sahf
jmp
xchg
popf
mov
arpl
and
dec
je
push
mov
shl
ja
xor
push
movsb
mov
pop
mov
aas
loope
cld
pop
shl
cmp
or
push
aam
test
and
into
pop
aad
jne
sub
cmp
ja
jmp
aas
jmp
mov
lahf
pop
jmp
or
fldpi
push
adc
ja
push
mov
lds
addr16
add
sbb
jmp
or
mov
outsb
xchg
cli
jns
hlt
scas
adc
mov
cmp
jg
fwait
dec
mov
mov
subb
loopne
xchg
inc
pop
sbb
dec
mov
daa
adc
aam
mov
adc
gs
add
imul
add
imul
sub
pop
adc
push
mov
push
jmp
sub
add
cmp
int3
add
cltd
testl
push
xchg
dec
push
enter
sub
testl
testl
in
xchg
mov
xor
push
fildl
and
sub
jmp
cwtl
push
fstp
add
popa
mov
dec
inc
lods
pop
fs
mov
cli
scas
mov
cmpsb
push
in
or
push
jg
andb
cld
jmp
leave
push
dec
fldcw
pusha
cmp
jmp
out
clc
lds
fsubrp
adc
and
aad
push
imul
jl
push
or
mov
jmp
iret
adc
sub
xorl
in
inc
cld
jmp
out
push
inc
mov
jmp
xchg
add
lods
dec
mov
cmovg
mov
jmp
push
cmp
jmp
pushf
testl
loope
or
xchg
fsubr
and
jge
sti
add
lods
leave
dec
lret
add
adc
jmp
les
add
cmpsl
jmp
cli
inc
nop
cmp
int
jmp
xrelease
dec
in
inc
dec
lcall
stc
and
jp
outsl
inc
dec
push
sbb
mov
lcall
sub
add
adc
jmp
mov
xchg
cmp
test
lret
fldcw
fsubr
jmp
aam
repz
lret
addr16
sub
inc
stos
or
notb
pop
cli
push
inc
repnz
les
aas
jmp
mov
imul
in
xor
bnd
xchg
loope
jmp
push
ja
jnp
inc
std
jmp
ror
mov
inc
popf
aad
and
push
jnp
mov
call
loop
icebp
or
xchg
mov
sbb
sub
fimuls
out
in
or
mov
les
aad
dec
jmp
jge
and
jl
sbb
loopne
xor
mov
cltd
xor
neg
sub
mov
insb
jns
fiaddl
jb
ret
pop
lahf
jae
cmp
stc
repz
repz
mov
adc
mov
inc
pop
mov
arpl
aaa
aam
add
jmp
ja
xor
adc
xor
lods
les
sub
insb
jno
xchg
jb
lcall
rorb
push
scas
mov
aaa
ret
mov
ljmp
lea
cmpsl
jmp
orl
lods
popf
pop
add
repz
jmp
lods
das
and
xor
loopne
cs
mov
inc
and
nop
add
loop
lods
mov
adc
pusha
jp
aaa
cmpl
inc
jmp
pop
movsb
xchg
into
add
addr16
dec
roll
ret
jg
pop
sbb
push
lods
ficoml
ret
push
lods
push
shlb
sbb
add
scas
jo
mov
and
xor
outsl
repnz
call
sbb
enter
pop
sbb
addr16
aam
jmp
out
lds
mov
rorb
xchg
lea
mov
sbbb
jmp
idivb
leave
ds
lahf
jmp
mov
ljmp
dec
xchg
inc
lods
mov
dec
adc
pop
dec
push
pusha
sub
lret
repz
xchg
ja
jmp
sarl
dec
lret
aaa
sub
add
jmp
mov
mov
stos
outsl
lea
in
out
jmp
nop
call
iret
jmp
lahf
xor
les
cmp
testb
shr
adcb
lods
dec
repz
mov
loop
jmp
adc
adc
and
or
lahf
popf
lea
jb
in
addr16
xor
jbe
jmp
sahf
or
cmp
es
stc
aam
mov
adc
jmp
bound
inc
xor
shrb
mov
dec
ficomps
sbb
jne
adc
pushl
mov
popf
mov
cmp
in
xchg
mov
xchg
das
loope
adc
xchg
scas
int3
dec
ljmp
push
jmp
sub
mov
jge
imul
hlt
jmp
xchg
not
mov
mov
pushf
xor
jmp
cmp
cmp
dec
xor
adc
das
in
pusha
test
lods
add
mov
nop
dec
jne
inc
fists
aad
jmp
mov
lret
push
cwtl
icebp
ljmp
add
xor
push
ljmp
les
jb
mov
push
jae
jmp
in
inc
mov
lea
jbe
mov
xchg
mov
jmp
lods
sbb
add
movsb
mov
data16
repnz
sti
fists
jmp
mov
pop
jmp
inc
adc
pushf
sub
jmp
fists
push
lret
lods
movb
rclb
in
jbe
pop
jmp
or
pop
cmp
jge
out
mov
dec
pop
aad
jmp
aam
mov
out
and
sbb
push
enter
jae
lods
pusha
cmp
dec
arpl
and
lcall
addb
outsl
sub
incl
fisubrl
sub
mov
mov
push
enter
jmp
pop
insl
sbb
negb
pop
push
xor
mov
xchg
mov
or
shlb
pop
and
jmp
in
mov
adc
pop
mov
fisttpl
push
rol
jno
lock
inc
push
xor
sbb
in
scas
stos
pop
or
jmp
push
or
sub
movsl
in
xchg
aam
dec
sti
popf
scas
or
xor
or
dec
or
mov
pop
mov
lret
inc
xchg
arpl
lods
clc
mov
push
inc
or
add
lret
leave
xor
lods
cmp
mull
add
inc
iret
outsl
jmp
addr16
push
adc
mov
in
dec
shrb
jmp
arpl
into
je
push
imul
push
mov
jmp
push
in
and
orl
ja
mov
and
add
jmp
imul
sub
fsubrs
fstpt
arpl
fisubs
pop
pop
xor
cmp
push
add
cmp
mov
ret
scas
lds
push
and
or
daa
xchg
nop
push
adc
pop
or
push
sbb
jo
jmp
dec
mov
aad
add
sbb
icebp
sahf
jg
jmp
sbbl
mov
and
dec
shlb
aaa
cli
lock
jecxz
xchg
bound
xchg
mov
repnz
pusha
cmp
pop
bound
or
adc
sar
add
mov
and
pop
add
jbe
mov
adcl
imul
cmp
pop
jmp
or
adc
es
iret
mov
leave
arpl
pop
cmp
push
aam
pop
jmp
daa
iret
push
aad
mov
add
cmpsl
fsubr
dec
stos
mov
cli
lods
inc
xchg
jae
mov
jne
mov
pop
mov
push
movsl
lret
xchg
sahf
jns
sti
testb
sbb
dec
pop
std
dec
xchg
mov
add
lock
mov
or
cmc
inc
loopne
xorl
push
in
xchg
add
cmpsb
mov
aaa
test
int
inc
jl
or
mov
jmp
lods
mov
jmp
fwait
jbe
jp
add
dec
sbb
lods
dec
push
scas
pop
ja
adc
lds
fisttpll
lods
jmp
ret
jge
nop
out
dec
and
xorb
jle
cld
cmp
out
mov
test
or
icebp
nop
mov
sub
push
mov
movsb
xor
lea
cmp
arpl
out
sahf
or
rorl
test
sbb
fistps
mov
dec
jmp
push
cmp
fs
call
jmp
movb
mov
inc
fs
mov
mov
cmpsl
dec
sbb
cmpsb
and
ja
lds
orb
inc
das
mov
lods
mov
cld
xchg
std
adc
mov
ret
adc
clc
jmp
xchg
out
sbb
mov
cmpsb
sub
cmpsl
daa
arpl
jmp
iret
test
push
xchg
stc
leave
or
xchg
enter
push
cmpsl
and
daa
or
xchg
lret
jmp
push
cli
mov
popa
push
jmp
inc
bound
jmp
ret
jno
cmpl
enter
pop
stc
adc
in
pop
push
or
mov
dec
outsb
popf
stos
cs
sbb
jmp
test
jo
ss
movsb
jmp
adc
and
jmp
rclb
test
lods
sub
mov
movsl
sbb
int3
fsubl
jge
nop/reserved
rcrl
xor
xor
sub
jmp
inc
divl
jmp
mov
dec
sub
xchg
iret
or
or
push
sbb
push
sub
jmp
cld
idiv
fmulp
dec
repnz
jmp
or
mov
jmp
mov
aaa
mov
dec
jmp
jg
movsb
add
in
xchg
repnz
je
stc
mov
jb
rcrl
loop
fsubr
dec
xchg
incb
jne
rolb
jmp
fsubl
xor
adc
das
push
or
sub
mov
add
mov
inc
jecxz
mov
daa
insl
fwait
mov
roll
sbb
shr
mov
fldcw
adc
jmp
cmp
mov
or
out
shll
sub
push
jmp
xchg
idiv
mov
push
cwtl
mov
mov
push
enter
clc
jmp
cmc
cmp
mov
mov
test
lods
mov
int
adc
xchg
outsl
cmp
jmp
push
add
out
sub
jne
adc
xchg
int
jb
lock
popf
mov
jmp
icebp
lock
stc
jecxz
ljmp
mov
push
movsb
js
sub
int3
dec
pop
call
ficomps
popa
jns
adc
dec
daa
fldpi
xchg
adc
mulb
jmp
out
and
arpl
jmp
pushf
leave
xor
pop
jnp
sti
shll
cmpl
inc
mov
xlat
jmp
aas
sbb
cwtl
shlb
and
data16
pop
jmp
and
loope
ret
addr16
hlt
insb
and
imul
inc
add
cmp
jno
mov
mov
cmpsl
js
jg
and
jmp
push
mov
nop
aaa
stos
or
lret
insb
loope
xchg
and
fcom
mov
dec
cmp
cmp
outsb
inc
scas
idiv
and
sbbl
sahf
xor
cmp
adc
mov
jmp
xor
jle
repz
lods
roll
pop
and
outsb
xchg
adc
xor
pop
mov
sarb
sbb
loop
jmp
sub
fldcw
fisttpl
aam
repz
fwait
mov
mov
cmp
sub
push
cmp
cwtl
pop
daa
push
adc
arpl
pop
mov
std
imul
movsb
dec
fisubrl
jmp
insl
and
call
lods
push
loope
xor
jmp
fnstsw
jg
lcall
pop
in
cmp
jmp
bound
test
addr16
xor
and
jmp
jecxz
cmpsl
rcl
jg
jmp
lods
jns
and
les
cmp
mov
xchg
aam
or
xchg
add
jge
jmp
inc
cmp
pop
repnz
icebp
adc
loop
cmp
push
pushf
sti
jo
out
movsb
stos
jbe
push
mov
cmpsl
lds
inc
adc
or
jmp
adc
push
xchg
hlt
sti
popf
inc
pushf
sbb
add
pop
mov
fsts
jmp
jg
sarl
xchg
jcxz
scas
movsb
jl
xchg
or
mov
sub
lods
cmp
xchg
data16
sub
ret
mov
ljmp
cli
cwtl
sub
repz
push
outsb
fucom
insl
mov
and
das
enter
out
push
fistl
sbb
imul
iret
or
cmp
dec
push
jmp
shll
lods
lods
xor
pusha
sti
fsub
imul
xor
pop
scas
jno
xchg
enter
xchg
pusha
iret
pop
adc
out
mov
jmp
sub
pushf
sub
adc
sti
arpl
je
gs
insl
jmp
push
popa
xchg
enter
sub
mov
aam
test
sub
dec
jle,pn
xchg
jns
xor
or
push
enter
aam
jmp
pushf
mov
test
inc
test
mov
mov
push
or
setbe
mov
cmp
and
ss
add
push
arpl
mov
jg
es
in
fxch
pop
cmp
daa
int
div
xchg
repz
jns
pop
imul
xchg
loope
jp
or
mov
subl
xor
add
pop
insl
fstl
mov
sbb
scas
adc
or
cmpsl
repnz
imull
sbb
call
jmp
int3
dec
jae
inc
jp
jmp
out
ljmp
je
cmp
test
ret
hlt
sbb
jp
repz
jmp
dec
and
inc
mov
loop
test
sub
jno
jmp
int3
clc
or
ja
shr
mov
iret
aad
adc
jmp
jno
or
in
push
movsl
jl
xor
xor
subb
repnz
mov
dec
mov
jmp
and
adc
popa
push
in
orb
int3
or
ret
pop
and
movsb
jmp
decb
push
sub
xorb
loopne
add
mov
scas
jmp
std
cs
xor
inc
jmp
sbb
mov
adc
test
in
and
xor
jne
mov
inc
popa
sbb
fildl
in
pop
jmp
repz
mov
cld
jmp
mov
sbb
sbb
jmp
lds
stc
loopne
push
test
lods
mov
cmpl
push
jmp
xor
mov
jmp
xlat
cmp
sub
les
mov
pop
andl
mov
jne
jmp
or
ror
out
mov
sbb
aas
fsts
out
mov
insl
inc
cmpsl
xor
adc
cmpsl
cmovb
adc
stc
dec
mull
cmp
xor
ljmp
hlt
cli
jae
aad
pop
adc
ss
jp
mov
push
rolb
xchg
lock
orl
aaa
scas
mov
xchg
iret
xlat
pop
lods
adc
jmp
daa
enter
push
int
stc
inc
sbb
and
sub
adc
addr16
mov
pop
xor
arpl
jecxz
sub
mov
mov
inc
push
loop
adc
pop
and
push
iret
mov
jmp
insb
es
jmp
xchg
out
vpmadcsswd
lods
mov
addr16
imul
and
jns
cmp
popf
fs
adc
jmp
push
rcrb
add
test
cmp
mov
pop
test
popa
enter
fstps
outsb
cmp
imull
xchg
add
jmp
cmp
scas
ljmp
idivl
shll
lcall
stos
sbb
subl
push
and
xchg
push
adc
cld
stos
gs
sbb
mov
in
add
mov
push
jmp
es
sub
mov
stc
push
xorb
sbb
idivb
sahf
sarb
mov
inc
xor
xchg
out
sbb
sbb
repz
ljmp
jmp
cmpsb
adc
xchg
jmp
dec
shrb
sbb
cs
jmp
imul
jl
push
bound
dec
testl
out
sahf
outsl
ljmp
stos
mov
and
jmp
xchg
sub
jmp
push
sbb
in
cld
xor
push
or
mov
adc
cltd
sub
xor
lods
mov
cli
sbb
movsl
add
popa
and
jmp
xchg
xor
jmp
push
cmp
inc
jmp
lret
les
aaa
mov
sbbl
xor
cmc
insb
jmp
pushf
jnp
adc
mov
xchg
filds
xchg
sbb
pop
pop
lods
mov
sbb
jge
push
std
in
and
jmp
cmpsl
xchg
xchg
rol
jmp
out
push
sbb
sub
cltd
pop
sub
outsb
repnz
imul
xor
and
xchg
mov
call
sub
js
scas
dec
push
jecxz
inc
jmp
sub
data16
movsl
xchg
mov
lahf
sub
pop
or
jg
cld
cli
pop
aaa
jmp
lret
sub
or
sub
or
pushf
sbbb
mov
cmpsb
fsubrs
out
out
sbb
pop
and
jg
pop
push
sbb
lods
dec
xor
ds
pop
push
and
repnz
push
sbb
and
mov
cli
subl
mov
mov
out
dec
inc
inc
push
xor
out
xor
scas
notl
lcall
lret
pop
js
in
pushw
sub
ja
popf
shrb
jle
ljmp
int
pop
scas
mov
xchg
jmp
das
push
adc
cmp
notl
leave
pop
mov
imul
inc
push
into
add
aaa
pop
stc
inc
pop
iret
jno
mov
decb
and
jmp
mov
pop
and
jns
ret
or
dec
jmp
push
fwait
ljmp
insb
mov
jbe
inc
xchg
inc
into
push
jmp
es
mov
sbb
loope
outsl
movsb
jmp
aam
pop
or
mov
sbb
clc
dec
pop
insl
jne
push
inc
addr16
push
add
incb
jecxz
imul
push
xchg
lock
mov
mov
aam
movsb
mov
clc
jmp
mov
cmpsl
jo
inc
rorl
mov
imul
sbb
fdiv
or
push
inc
sbb
dec
into
aas
cmp
jmp
pop
mov
mov
and
xchg
dec
sub
cmp
xchg
dec
out
je
sub
mov
push
nop
cmp
sbb
ficoms
ljmp
and
or
lods
mov
shrb
sti
sbb
jmp
fldenv
push
daa
jns
jmp
loopne
dec
inc
pop
lahf
pop
jmp
cltd
sti
test
mov
sbb
or
push
sub
loop
scas
cld
dec
mov
sbb
int3
ret
pushf
das
and
test
mov
inc
aaa
add
cs
shrd
iret
push
xchg
repnz
subb
or
mov
orb
cmp
push
insl
popf
jmp
push
out
adc
in
xor
shll
repnz
pop
pop
jmp
jo
in
pop
mov
jecxz
orl
fsubrs
lods
cwtl
jb
mov
sbb
pop
testb
xorb
xchg
in
loop
cmp
sub
cmp
dec
or
push
push
sub
sub
pusha
mov
jmp
mov
mov
mov
inc
ljmp
je
push
jmp
in
xor
xchg
cmp
repz
push
push
andb
jne
jno
xchg
mov
dec
into
pop
or
and
xor
jmp
imul
jmp
clc
cmpsb
fstpl
mov
cli
lds
outsl
outsb
divl
jmp
aam
cmp
mov
cmp
pop
push
sub
mov
popa
mov
jmp
in
daa
shlb
fwait
xor
inc
xchg
mov
aaa
push
mov
add
shll
repnz
pop
sti
pop
sbb
jmp
mov
ds
in
xchg
push
sub
inc
cmp
xchg
jmp
xchg
cmp
movsl
sub
cli
or
add
mov
xchg
mov
jmp
lea
cli
dec
jnp
or
jmp
fwait
sub
push
jmp
push
imul
or
iret
jns
enter
xchg
jo
adcl
xchg
ja
std
jle
test
mov
add
scas
pop
pop
sub
sti
xor
icebp
push
jmp
mov
mov
cmpsb
xchg
jmp
pop
push
fcom
dec
push
daa
xlat
jmp
pop
and
mov
add
cmp
xor
imul
icebp
rorl
popf
std
sbb
sbb
mov
jmp
dec
inc
pop
push
xor
mov
sahf
movups
sub
adc
sub
and
lret
bound
mov
push
jmp
in
adc
cmp
scas
pop
fdivrs
test
call
fisubl
fs
xchg
ljmp
cltd
dec
dec
stos
sub
insl
xchg
gs
int
es
movsb
and
mov
inc
sahf
stos
or
lods
mov
or
pop
popa
jmp
loopne
movsl
dec
in
lods
fdivl
push
imul
push
mov
sub
jns
outsb
inc
xor
clc
scas
aas
jne
sbbb
pop
stc
sub
jl
ja
loope
jmp
adc
pop
cmpsl
sahf
mov
aam
push
repz
cld
sub
xchg
aaa
mov
and
iret
jmp
idivb
mov
jge
jno
jmp
jo
fwait
ljmp
inc
jmp
fdivl
mov
lods
ja
sub
sbb
enter
cmp
mov
int3
jmp
mov
clc
ds
add
dec
movsl
daa
fucomip
jns
adc
mov
or
jmp
testb
push
cmpsl
jp
scas
push
enter
dec
cmp
add
out
or
xor
sub
jmp
scas
pop
int
lahf
xchg
xchg
jmp
lea
iret
xchg
lret
xchg
sub
sbb
jle
dec
arpl
cltd
leave
inc
daa
shr
dec
xlat
divl
jmp
adc
add
jmp
fisttpl
adc
mov
cmpsb
lods
iret
fsubrp
mov
in
in
add
sbb
arpl
adc
loop
movntps
insl
cmp
imul
imul
push
pop
mov
iret
mov
testb
mov
fidivl
sub
cmc
sbb
addr16
mov
xchg
mov
test
dec
lods
popa
in
rorb
mov
pop
jbe
xchg
xor
enter
rcrl
xchg
adc
shr
or
jmp
sub
mov
outsl
or
inc
imul
cwtl
jmp
out
mov
repz
jmp
jmp
cmp
inc
aaa
pushf
or
or
sti
jg
and
addr16
mov
aad
repz
lods
sbb
daa
or
out
sbb
adc
mov
jmp
pop
mov
bnd
mov
fbstp
sbb
js
shrl
adc
fcmovnb
mov
lret
jmp
pop
jne
mov
sub
mov
jmp
pop
mov
jmp
rcl
inc
pop
jns,pn
dec
stos
xchg
sarl
mov
divb
jmp
and
icebp
and
test
sub
shlb
clc
push
icebp
pop
scas
sti
pop
sbbb
mov
jmp
xchg
inc
push
aas
outsb
pop
lret
cmpsl
call
jge
jmp
jno
mov
xchg
pop
mov
stos
mov
sub
notl
mov
lods
mov
sbb
cmp
jmp
add
fildl
sbb
xorb
cli
adc
dec
outsl
jne
cmpsl
in
test
jmp
inc
pusha
pop
lods
into
scas
cltd
in
fdivrl
jns
pushf
fldt
bound
xchg
jg
xchg
mov
mov
popf
xchg
jmp
or
hlt
mov
scas
push
jmp
jne
cmpsl
movsb
lahf
js
jmp
je
leave
les
jmp
xlat
or
and
push
divb
lahf
sub
push
jnp
or
shl
nop
jmp
cmp
sub
test
or
push
lcall
jmp
xor
fisubrs
and
dec
mov
or
loope
lods
mov
out
inc
mov
pop
jmp
push
add
aas
bnd
sahf
test
push
sub
idivb
dec
inc
jmp
push
mov
push
loop
in
mov
inc
pop
sti
sbb
pop
xor
sbb
push
sub
or
xlat
jne
sti
imul
cmpsb
cld
xchg
push
lods
jp
cwtl
int3
push
jnp
jo
or
dec
popa
jge
dec
or
push
lods
jmp
jae
popf
and
clc
lds
loope
roll
fnsave
fisttpl
aam
push
xchg
mov
inc
pop
jo
pusha
fnstsw
pop
mov
jb
inc
ja
cltd
adc
jnp
cwtl
lcall
cmp
scas
jmp
jecxz
xchg
stc
cld
push
aad
mov
jecxz
jmp
xchg
pushf
mov
and
mov
sub
pop
shlb
xchg
and
cmp
jle
pop
push
pop
push
aas
mov
jmp
subl
sub
iret
jne
pushf
mov
ret
jbe
sbb
ja
mov
lret
dec
bound
jmp
arpl
pop
pushf
xlat
loopne
inc
and
ljmp
ret
clc
mov
mov
mov
notb
clc
cltd
out
jmp
sbb
fists
jge
lods
dec
mov
sub
and
lods
xlat
jbe
icebp
nop
adc
or
adc
xchg
ficoms
arpl
and
jne
pop
jle
cmp
pop
outsl
enter
test
xchg
repz
lret
mov
sbb
pop
lock
and
sub
mov
test
adc
push
jecxz
fidivrl
dec
and
mov
test
gs
and
jmp
iret
add
xchg
jne
jmp
push
mov
push
cmp
mov
cmc
shrb
fwait
sub
jmp
sub
push
pop
fidivrl
mov
loopne
sbb
shrl
imul
loopne
mov
lahf
cmp
out
mov
out
push
daa
mov
and
mov
jno
fcom
mov
scas
addr16
sub
or
sti
jmp
leave
stos
xor
inc
fistpl
test
ljmp
or
ja
cwtl
aam
je
popf
mov
or
or
cmpsb
adc
scas
pushf
push
das
jae
enter
lcall
push
mov
inc
test
shr
jle
les
jmp
add
lods
por
push
pusha
clc
lods
dec
flds
jmp
xchg
cmp
lods
xchg
stc
add
cld
or
pop
pop
xchg
stos
clc
jge
and
pop
pop
mov
pusha
stos
ja
push
jmp
or
lret
insb
cli
or
push
stos
xchg
jmp
ret
xchg
sbb
lret
repnz
push
sti
mov
adc
test
in
jle,pt
stc
repnz
sbb
jmp
divl
sahf
jmp
mov
fwait
shr
mov
lret
or
pop
sub
sub
jmp
mov
pop
jbe
dec
scas
dec
pop
lret
sbb
aas
repz
ss
mov
push
std
lret
into
mov
cmp
frstor
mov
lcall
push
jae
and
jnp
pop
push
inc
sub
mov
je
xor
scas
cmp
es
jmp
mov
and
jns
add
cli
fimuls
outsb
xor
pushf
adcb
adc
mov
aaa
inc
pop
or
inc
cmp
or
xchg
adc
push
xor
inc
push
dec
cltd
dec
cli
cli
mov
stos
in
sub
rep
add
pop
aad
sahf
push
dec
mov
dec
sub
and
cmc
inc
insb
cmp
cltd
scas
or
xlat
and
mov
add
fsubrl
or
mov
jns
icebp
xor
fisubrs
jmp
xor
outsb
mov
mov
icebp
add
std
lods
xchg
jmp
out
das
xchg
and
jmp
mov
mov
lods
cli
out
sbb
lret
adc
push
cwtl
repnz
addr16
imul
jne
repnz
inc
push
pop
cmpsb
sub
mov
xor
cmpsl
cmp
push
aam
xchg
dec
out
jno
jnp
inc
adc
pop
jmp
cmp
repz
roll
mov
test
mov
addb
adc
notl
js
hlt
jo
outsl
mov
fsubrp
mov
das
jmp
sub
mov
cmc
sbb
enter
ljmp
pop
push
mov
jmp
insl
stc
aas
out
inc
jmp
call
shlb
push
test
insl
lods
cs
bt
fmuls
scas
mov
jl
outsb
push
xorb
mov
jl
jne
cmp
sbb
mov
jmp
lods
dec
adc
int
mov
sahf
repz
into
das
inc
jmp
out
jecxz
frstor
jmp
xchg
insb
rcl
in
lods
dec
dec
push
inc
std
cmpsl
mov
add
popf
scas
data16
fistl
add
cmpsl
and
jbe
pop
mov
stc
daa
ljmp
push
lds
and
outsl
pop
fcmovnu
or
pusha
jecxz
push
jmp
dec
daa
dec
int
lds
imul
lcall
sbb
xchg
add
out
in
pop
jmp
mov
lret
jle
fstp
push
test
lock
jmp
push
sub
mov
sub
mov
or
inc
sbb
sub
pusha
scas
sti
andb
test
jmp
or
fdivrl
xchg
jmp
add
add
loopne,pn
sbbl
lock
vpxor
comiss
or
push
cmp
push
lods
popf
shlb
call
lods
aam
lods
pop
ret
jmp
mov
mov
cltd
inc
xchg
insl
adc
inc
leave
mov
mov
push
mov
jnp
lods
std
adc
cs
daa
jecxz
inc
or
inc
mov
sar
jmp
cmp
imul
push
jmp
lret
leave
shl
enter
pop
inc
pop
push
int3
adc
sub
pop
cmp
and
cltd
stos
pop
clc
adc
jae
sub
dec
lret
out
imul
lcall
es
xor
and
mov
out
fwait
pop
cmp
jmp
scas
or
xchg
xor
mov
adcl
xchg
cltd
mov
jmp
inc
std
inc
jge
push
cmp
or
ja
ret
sbb
mov
in
push
sub
jb
xor
xchg
shrb
ret
sbb
push
jmp
xchg
add
jmp
les
shr
cmpsl
adc
push
loope
xchg
ljmp
inc
fs
fnstsw
imul
out
mov
inc
and
mov
xchg
jmp
retw
mov
leave
aam
icebp
in
cmp
xchg
into
int
xor
adcl
bts
out
mov
loope
dec
sub
shlb
and
mov
movsb
mov
jecxz
jo
out
loopne
xchg
sub
or
xchg
mov
push
sbb
inc
jmp
cs
aam
adc
jnp
mov
bound
push
fstps
fucomp
mov
xchg
inc
movsb
jmp
rclb
cli
jmp
add
pop
or
sti
jo
movsb
add
jmp
int
pop
out
pop
ja
mov
sbb
mov
je
jmp
shl
out
xor
enter
sub
mov
cmp
sub
sbb
test
cmpsl
fstpl
jb
mov
sub
or
pop
test
mov
shll
adc
and
jbe
cld
jae
rcrl
mov
sub
popa
pop
and
lock
hlt
pusha
pop
in
or
jmp
xchg
lea
pop
and
pop
jmp
mov
jno
mov
inc
or
in
nop
fsubl
popf
repz
or
lds
cs
xchg
js
sbbl
stc
pop
insb
ljmp
jmp
jg
aaa
sar
mov
sbb
sub
sbb
ds
sub
cwtl
sahf
ljmp
aas
pop
mov
mov
jno
cmpsl
push
xchg
pop
test
jmp
xor
cld
addr16
jbe
push
outsl
add
cmp
jae
rorl
bndstx
sahf
mov
out
jmp
ljmp
jmp
sbb
es
dec
sub
and
ret
gs
insb
push
je
dec
ror
xor
push
mov
inc
sti
imul
jmp
fisubl
in
fs
jmp
out
call
and
cmp
stc
add
mov
push
xchg
mov
push
xchg
xchg
sti
adc
jno
fbld
dec
add
xor
jmp
aad
lock
cmp
xlat
and
xchg
movsl
mov
add
jle
shlb
xchg
mov
lret
pop
addr16
lods
jg
aad
pop
push
pop
idivb
imul
mov
mov
jmp
cli
lods
adc
in
mov
bound
lods
xchg
es
ret
dec
cmpsl
mov
cmp
insb
and
sbb
mov
ret
out
in
ljmp
sbb
adc
stos
scas
sub
mov
pop
xchg
xchg
add
jmp
js
iret
dec
pop
shlb
jmp
push
movntq
jp
jmp
mov
mov
fcmovnu
fucomip
pop
aam
sbb
sub
jno
pop
sbb
jmp
fisubrs
ljmp
into
push
lret
jb
jmp
arpl
dec
cmp
ret
jmp
ret
mov
lock
add
xor
bound
adc
mov
jbe
sahf
outsb
addb
push
sbb
cmpsb
orl
jbe
je
mov
lret
lods
lret
daa
push
adc
jmp
cmp
adc
insl
lods
mov
sbb
scas
pop
xchg
lds
ljmp
jp
icebp
lods
mov
dec
psllq
push
dec
int
mov
cli
inc
cltd
adc
sub
arpl
jmp
hlt
or
in
add
in
imul
mov
add
pop
jmp
jbe
ret
push
inc
cli
mov
loop
lcall
je
push
sub
cmp
cmp
sbbl
fwait
mov
iret
mov
mov
int
popf
imul
pusha
scas
ljmp
sub
decb
adc
fcomip
imul
sbb
xchg
sub
mov
test
test
jmp
fnstenv
movsl
stos
lret
jmp
scas
sub
bound
pop
jmp
repz
gs
pop
je
lods
or
stc
cmp
or
daa
cli
jo
xor
jmp
popf
inc
jne
icebp
movsb
jae
xchg
fcmove
or
cmp
push
fsubrs
loopne
and
mov
xchg
pushf
fistps
adc
sub
loop
pop
and
movsl
das
mov
adc
arpl
cmp
aaa
es
xorb
stc
mov
aad
pop
cmp
xorb
ficoml
dec
outsb
jmp
test
in
sub
xchg
aam
push
fdivl
sub
cld
stc
push
lret
daa
ljmp
sub
jmp
out
xor
pop
andl
out
hlt
push
jecxz
out
pop
pushf
jmp
shrb
pop
lods
xchg
push
shll
sti
das
lret
je
dec
inc
jmp
int
jno
adc
lods
flds
xchg
pop
loopne
ja
les
sbb
lods
pop
jno
cmp
mov
mov
mov
clc
pop
js
outsb
outsl
in
xchg
lret
mov
enter
fwait
insb
sub
sub
sti
xlat
lods
repz
inc
jmp
adc
std
daa
cmp
fldl
push
adc
loope
stos
xor
pop
mov
fcmovbe
sbb
inc
mov
mov
inc
nop
jmp
clc
movsb
xor
sub
sbb
add
imul
js
ljmp
xor
jp
pop
or
add
pop
in
xor
jp
out
repz
inc
sub
stos
mov
mov
jmp
xchg
mov
jb
push
cmpsl
mov
mov
int
jns
insl
push
dec
jmp
jb
adc
cs
jmp
sar
pop
dec
sahf
fsubrp
outsl
xchg
in
in
push
lods
inc
sub
xor
xor
fldln2
test
lcall
loop
push
imul
mov
fisubs
pop
int
sub
out
sub
bnd
lret
jecxz
in
fdivrs
sub
movsl
sahf
inc
xor
xor
mov
jb
sarb
mov
movsb
jmp
mov
sbbl
fucomi
or
movsl
out
jmp
push
test
xlat
or
lds
xchg
jno
sbb
cmpsl
xor
push
inc
adcb
mov
fnstsw
push
pop
clc
jo
popf
add
xchg
xor
jmp
out
repnz
loopne
jmp
adc
ss
or
sub
lods
sbb
in
mov
ljmp
xor
or
or
cmp
in
cmpsl
stc
cli
lahf
push
inc
sbb
jmp
cmp
mov
aam
adc
sub
inc
rol
ret
int3
jmp
leave
in
lds
icebp
pop
or
pop
cmc
nop
hlt
dec
pop
or
insb
dec
mov
jnp
outsb
push
pop
js
repz
jmp
je
nop
cmp
inc
jmp
call
jl
stos
or
shl
cmc
mov
pop
sbb
cli
cld
fmuls
or
dec
xor
popf
stos
and
sarl
mov
xchg
in
inc
mov
cmc
inc
hlt
enter
fldt
xchg
cli
ja
mov
and
add
mov
invd
test
pop
outsl
jmp
push
jo
insl
cmp
js
mov
test
and
sbb
stos
sub
push
jmp
mov
adc
outsl
cmp
jmp
add
lret
push
jmp
mov
repz
mov
and
jb
bound
pop
sbb
adc
scas
cli
dec
push
xor
popf
out
sub
jbe
push
enter
call
shll
xor
insl
mov
je
adc
jmp
imull
fdiv
jge
cmp
mov
or
jmp
adc
leave
sub
mov
stc
xchg
lods
cltd
jmp
pop
inc
mov
outsb
decb
pop
repz
loope
add
lods
jno
add
pop
dec
mov
xchg
add
roll
jns
in
mov
inc
clc
jmp
gs
icebp
adc
xchg
and
ljmp
test
aaa
mov
mov
jmp
int3
push
cmp
xchg
cmpsb
jmp
adc
or
inc
testl
xchg
add
test
cmp
out
add
cmp
lret
jmp
mov
fwait
xor
add
add
mov
inc
lods
es
lcall
lods
pop
cwtl
ret
incl
xchg
jbe
xchg
or
test
add
lods
jbe
sbb
adc
sarb
or
sub
push
loopne
cmp
mov
jmp
mov
mov
jmp
mov
or
cmp
jmp
jne
xchg
or
add
sub
sbb
repz
test
mov
addl
in
inc
jmp
mov
pop
mov
pushf
imul
mov
xor
mov
jmp
cwtl
pop
lods
dec
cmp
adc
xchg
mov
ss
jmp
sbb
scas
aam
ljmp
or
nopl
sub
push
dec
and
cmp
xchg
and
jl
ret
sub
leave
cmpsb
jmp
mov
addl
dec
lods
dec
or
imul
jmp
fisubrs
pop
insl
scas
iret
popa
jmp
data16
dec
leave
addr16
lods
das
push
repz
sti
xchg
xchg
shr
or
icebp
and
sub
subb
jge
jmp
les
pop
jmp
faddl
and
aaa
fsubrp
pop
rorl
sbb
or
addb
pop
mov
sbb
cmpsb
jecxz
xor
mov
xchg
sbb
clc
sbb
or
add
jmp
and
inc
jmp
sbb
mov
or
dec
jmp
xchg
sub
js
fldl2e
shl
mov
enter
sub
xchg
and
pusha
daa
decb
daa
xchg
mov
jne
out
test
mov
test
ret
xchg
xchg
scas
hlt
mov
ret
fwait
ss
xchg
sahf
sbb
ret
add
jge
pop
jne
cmp
repnz
ficompl
adc
ds
imul
jns
outsb
jmp
mov
in
jmp
push
inc
sbb
xor
or
nop
lods
sub
out
fisttps
aam
mov
xchg
inc
xlat
xor
ret
in
xor
jle
sbb
hlt
xchg
or
add
lds
lods
int3
and
sbb
push
jmp
cwtl
icebp
xchg
sbb
in
pop
and
outsl
sbbb
mov
jmp
sub
shl
xchg
lcall
sbb
jne
pop
xlat
rolb
cmp
jmp
fscale
dec
iret
pop
adc
or
out
test
mov
xor
jbe
or
aam
dec
outsb
aaa
inc
fimuls
and
jmp
scas
in
cli
push
cmp
dec
out
ja
add
adc
mov
mov
addr16
int3
cmp
xchg
sarb
clc
mov
mov
inc
xorb
mov
addr16
sub
push
push
jmp
mov
sarb
arpl
adc
outsb
dec
pop
sbb
test
dec
int
lret
fimull
lods
sub
sti
imul
and
cltd
insb
jmp
lea
outsl
jmp
sahf
std
cmp
aas
mov
cmpsb
fildll
aad
pop
or
addr16
lods
or
sbb
jp
mov
or
fists
les
test
push
xchg
push
shlb
cmp
clc
aad
in
add
pop
inc
pop
inc
xchg
jmp
dec
xor
dec
mov
nop
movl
jb
ds
sti
in
cltd
daa
hlt
imul
scas
push
mov
mov
jo
std
pop
dec
push
jmp
dec
inc
sbb
ror
mov
or
pop
aad
lds
js
add
icebp
gs
jp
popa
jmp
push
je
stos
xor
into
rcll
add
enter
lods
mov
mov
or
and
jno
test
adc
std
push
cmp
jmp
cmp
mov
aad
orl
adc
pop
int3
test
pushf
lahf
and
add
xchg
shlb
jp
fldpi
xchg
cmpsb
xor
jmp
push
dec
in
kaddb
outsb
cmc
mov
sahf
jb
xchg
scas
imul
bound
mov
jg
hlt
lods
in
ss
insl
icebp
fs
sbb
jmp
cld
sbb
mov
nop
leave
fwait
lock
test
jmp
adc
pop
mov
cld
jmp
lods
pop
add
or
mov
fiadds
in
mov
int
or
fsubr
loope
and
add
xchg
ret
jmp
shr
insb
pop
imul
stos
and
sahf
clc
pop
gs
jmp
xchg
cmp
jmp
sbb
adc
xor
cmpsb
jmp
pop
mov
xchg
jmp
fsubs
and
cld
dec
jmp
roll
jmp
dec
mov
lods
cmp
dec
xor
int3
sbb
jp
lahf
jmp
pop
loopne
xchg
jmp
fldt
gs
test
inc
push
ret
xor
mov
push
mov
jecxz
jmp
jo
fsubrs
stos
stos
in
repnz
jp
std
je
scas
enter
mov
jmp
imul
outsb
inc
mov
add
arpl
clc
pop
mov
aad
mov
jmp
mov
mov
cs
leave
and
aas
jbe
bound
sahf
ds
or
into
or
add
sub
or
lods
aaa
add
mov
mov
jmp
cmp
ss
jmp
cld
sbb
gs
add
add
icebp
mov
sbb
push
fsubs
mov
icebp
add
dec
sub
rcr
jne
cwtl
inc
mov
ret
out
sub
icebp
push
add
add
cltd
pop
cld
lods
push
lret
xor
mov
mov
daa
cmp
sti
jmp
pop
call
aad
sbb
jmp
fisttpll
cmovl
loop,pt
dec
push
lds
xlat
pop
sbb
or
jb
mov
fsubs
add
jmp
dec
add
inc
jmp
add
insl
aam
mov
xchg
xor
cld
lcall
inc
push
jns
mov
adc
add
fmuls
xor
sub
pop
nop
sbb
jmp
mov
test
cld
ljmp
jnp
xchg
push
adc
dec
jmp
insb
or
cmp
fistpll
add
repnz
jmp
inc
fadds
xchg
fimuls
dec
jl
hlt
pop
xlat
ds
push
sbb
lods
dec
aaa
fwait
pusha
rolb
push
imul
jmp
sbb
stos
loopne
mov
xchg
in
push
ficompl
jmp
data16
ljmp
sub
push
jb
pop
or
pushf
jmp
aas
imul
cmpsl
ja
mov
scas
iret
jo
sbb
or
popa
imul
jmp
scas
push
fwait
and
movsl
inc
jmp
xor
jp
sbb
push
aam
mov
rolb
or
xchg
adc
repnz
mov
add
sub
aam
es
add
push
jnp
fs
jmp
adc
dec
mov
jbe
fdivrl
lock
adc
mov
mov
lods
inc
pop
lcall
and
sub
inc
adc
bound
test
push
lock
jae
push
repnz
aad
add
push
fucomip
pop
shrb
xchg
jmp
out
inc
pushf
cmp
addr16
cmc
or
mov
jmp
sub
mov
pop
xchg
dec
add
repnz
mov
je
in
adc
jmp
mov
pop
fs
mov
push
scas
xchg
sti
pop
aaa
rorb
cmpb
mov
loope
pop
inc
mov
mov
mov
push
mov
aaa
in
cs
inc
push
cmp
lods
fsubrs
psubsb
adc
jecxz
in
in
or
outsl
xchg
scas
mov
insb
and
mov
sub
push
push
or
add
mov
and
into
pop
loope
cmpsl
aaa
or
mov
fwait
inc
adc
and
ljmp
add
popf
in
cs
icebp
sbb
cmpsl
push
adc
pop
enter
jge
jmp
lret
xor
pop
dec
jl
adc
jecxz
jmp
test
push
cmp
pop
jb
je
mov
sbb
mov
mov
ret
jmp
sbb
pop
push
pop
cmpb
sahf
repnz
push
movsl
negl
jmp
mov
insb
or
call
or
jb
push
mov
lea
mov
lods
rclb
arpl
mov
cmp
mov
dec
fistpl
jo
xor
jmp
mov
cli
imulb
and
push
mov
inc
sti
int
jmp
pop
int3
push
scas
inc
das
bound
xlat
xchg
adc
aad
outsb
rorb
insb
cmp
cmp
mov
scas
ret
pop
cmp
cli
xchg
push
jl
dec
out
pop
fstps
lock
jmp
fsubl
push
lret
jmp
mov
push
pop
jmp
dec
mov
divl
sub
sub
dec
xor
xchg
dec
jmp
scas
adc
and
imul
mov
push
call
jl
mov
and
jae
cld
test
movsl
add
jmp
les
jmp
in
jb
inc
or
jmp
std
divl
out
adc
sub
push
xchg
xchg
out
mov
aas
loope
enter
jmp
lahf
imul
pop
rorl
add
sub
sbb
sub
mov
push
jo
out
and
lea
push
addb
sub
mov
adc
add
cmp
and
js
enter
subl
outsb
lods
lret
xor
popa
in
mov
and
mov
arpl
push
or
ss
pop
xor
lahf
int
std
aam
pop
and
push
or
dec
jmp
mov
add
xor
mov
pop
aam
adc
cltd
xchg
jmp
push
negb
xor
imul
cli
or
incb
movsb
les
dec
or
popa
mov
dec
or
test
dec
arpl
mov
xor
inc
es
xchg
push
aaa
cmpsb
jmp
xchg
hlt
and
jmp
sbb
mov
jmp
xor
in
and
out
stos
push
lea
lods
xchg
mov
popa
cmp
mov
jmp
stc
sahf
ds
mov
jg
dec
dec
mov
sbb
fsubr
mov
xchg
jnp
and
cmp
shr
xadd
outsl
fiadds
push
fcomp
cmp
jmp
dec
or
jmp
or
es
scas
mov
push
inc
lret
jmp
popa
jp
aas
call
mov
ret
jmp
push
or
outsb
sub
sub
in
dec
pop
jmp
jnp
call
sub
clc
fisubrs
nop
or
adc
out
add
data16
jmp
lret
repnz
mov
push
cmp
jmp
dec
jmp
imul
iret
jmp
loopne
dec
test
push
mov
jbe
and
test
cmp
aad
hlt
movsl
sub
mov
xchg
in
lods
jnp
cld
cmc
cwtl
lods
out
ret
sub
daa
and
jbe
cli
pop
ret
leave
enter
jmp
dec
push
ret
mov
pushf
sti
hlt
push
test
sub
cmpsl
or
icebp
pop
lock
mov
inc
add
scas
mov
and
roll
fmulp
cmpsl
js
fbstp
jecxz
imul
inc
enter
idivl
bound
loope
jmp
fidivrl
inc
cmc
nop
fnstenv
jmp
enter
jb
sbb
sub
andnps
jg
xchg
jmp
cmp
in
add
and
cli
out
mov
fistl
imul
push
and
add
sub
dec
mov
lods
rcl
and
mov
mov
movsb
cmp
fsubrs
xchg
jbe
push
or
rcr
push
adc
cmp
sar
mov
sub
cwtl
out
and
jmp
in
es
and
jle
jb
cmc
pop
insl
sub
inc
std
push
shrb
inc
in
add
aam
sti
dec
or
or
imul
data16
dec
sbb
fcompl
adc
sbb
mov
lods
lret
jmp
aam
shrl
pop
shlb
sbb
sub
outsb
mov
shll
out
sub
mov
das
jge
sub
and
jmp
fmull
lahf
mov
xlat
sbb
pushf
mov
dec
pop
pop
jmp
xchg
or
sbb
shlb
mov
call
jmp
xor
inc
mov
repz
sbb
fwait
sarl
cmp
add
mov
sbb
jg
lock
and
mov
cmp
dec
xchg
jo
add
pop
in
and
leave
in
js
shrb
test
lods
cmpsl
sbb
mov
sub
mov
push
xorl
dec
scas
lret
daa
pusha
hlt
lods
or
sahf
adc
sub
pop
jmp
popa
mov
xchg
jmp
mov
xchg
lds
mov
cmpsl
cmp
in
cld
push
das
push
jmp
jns
stos
adcl
pop
dec
push
pusha
je
jmp
popl
sub
sbb
jbe
jp
and
inc
jmp
arpl
dec
mov
cwtl
sahf
xchg
and
add
jle
push
lret
push
pop
loop
in
and
pop
inc
lret
or
ja
sbb
or
lock
pop
les
gs
dec
push
sub
push
cld
pop
imul
cli
sahf
mov
push
cwtl
adc
adc
mov
pop
mov
test
mov
call
sahf
jmp
std
subb
or
add
sbb
jns
jmp
rol
jne
popf
fsubrl
push
dec
xor
or
pop
pop
cmpsb
inc
inc
jmp
lret
fcomip
scas
sahf
jmp
and
mov
out
into
test
lock
mov
cmpsl
sbb
outsb
jmp
push
add
mov
xchg
arpl
repz
lcall
aas
sti
idivb
scas
lret
imul
xor
aaa
jb
jmp
jp
aas
sub
and
push
pop
sbb
adc
subl
and
cmp
xor
mov
dec
mov
rcll
and
pop
lods
mov
and
dec
cmp
ret
scas
dec
jmp
mov
jmp
or
rorb
imul
in
xchg
cltd
lret
add
outsl
jmp
int3
jne
adc
xor
add
pop
arpl
dec
inc
xchg
xor
jmp
test
lods
mov
fnstenv
mov
mov
jnp
leave
mov
lcall
mov
movsl
into
sub
fs
leave
les
adc
ds
aaa
xchg
sub
or
mov
jno
mov
add
dec
bound
repz
xchg
xchg
cmp
fildll
mov
pop
jmp
loop
mulb
hlt
sti
sub
fcoml
push
repz
sub
scas
adc
das
lods
cmp
mov
cmp
sub
jmp
lahf
fwait
jbe
icebp
aad
jmp
sub
mov
sub
shll
imul
xchg
jmp
push
add
idivb
and
lock
bound
fldcw
addr16
lds
cs
dec
insl
add
in
test
mov
push
mov
cmpsl
push
mov
lds
fwait
int
sub
repz
and
je
pop
rol
js
or
sbb
imul
mov
jle
jmp
mov
aam
sub
stos
dec
mul
out
dec
mov
xchg
mov
sub
sub
adc
shr
mov
inc
psubd
adc
popf
int
call
jae
sarb
mov
imul
pop
lcall
jmp
sub
gs
repz
hlt
movsl
or
jg
mov
fs
lods
sidtl
xor
jbe
sti
insl
push
jmp
inc
jne
fwait
or
dec
aas
sbb
out
inc
pop
pop
cmp
mov
mov
loopne
mov
sbb
mov
sbb
repnz
imul
sahf
popa
jnp
sbb
or
inc
jp
jmp
dec
add
cmp
push
xchg
jne
pop
dec
pop
mov
pop
movsb
test
jmp
mov
lods
das
ss
ret
stos
aam
or
fmull
into
je
ror
jmp
xor
daa
neg
ret
je
sahf
or
leave
std
jmp
jae
pop
mov
xchg
xor
mov
out
mov
push
dec
cmpb
and
in
adc
and
xor
xlat
aaa
dec
jmp
and
xchg
test
ror
cmp
pop
test
inc
fwait
jne
shrd
pop
dec
dec
mov
jbe
subb
in
adc
mov
pop
cs
ret
or
dec
imul
lods
inc
jmp
xchg
ljmp
push
xchg
xchg
xor
adc
cli
stos
loop
cmc
hlt
sub
and
inc
xchg
inc
xor
mov
shlb
into
pop
outsb
mov
std
dec
sti
filds
xor
sbb
dec
jl
out
jle
push
lods
mov
pop
mov
lcall
in
lods
jo
mov
mov
insb
jmp
mov
gs
mov
mov
inc
scas
rcll
jmp
add
mov
xor
shll
xor
xchg
out
movsb
fisubl
lods
cmp
outsl
pop
adc
xchg
jmp
je
test
push
mov
jmp
mov
nop
std
adc
fisttpll
dec
adc
testl
ds
and
pop
bswap
call
insb
movsb
int
push
dec
inc
sub
xor
add
in
dec
ja
fnstsw
jmp
cmc
lret
adc
cli
push
xor
sub
add
decb
push
and
xchg
imul
mov
mov
pop
fs
mov
jmp
mov
push
mov
inc
je
nop
add
ja
lods
repz
jecxz
pop
xchg
sbb
enter
shlb
or
cmp
es
mov
sahf
mov
inc
jmp
ds
sbbl
pop
popa
sbb
test
rorl
mov
out
dec
int3
dec
jbe
and
add
jmp
pop
in
sbb
push
jmp
mov
test
dec
pushf
cli
outsb
pusha
xor
scas
add
out
inc
mov
aas
shrl
shrl
add
sbbb
enter
test
fwait
mov
inc
out
mov
scas
stos
push
mov
aam
or
mov
lea
arpl
and
xchg
jp
xchg
inc
aam
mov
iret
sbb
mov
push
and
xchg
add
icebp
ss
sarb
std
push
jmp
and
loope
mov
rolb
sub
test
and
jmp
loope
lods
dec
mov
cmp
int3
sub
mov
jmp
mov
jle
jmp
pop
xchg
or
inc
lds
mov
or
test
je
loop
fcmovbe
cmpsl
repnz
cmp
stc
mov
aaa
shr
je
ficompl
push
mov
outsb
adc
in
hlt
int
scas
jle
pop
out
cld
dec
jnp
xor
xchg
jge
leave
mov
icebp
in
js
add
adc
pusha
lods
subw
pop
or
jmp
insb
fs
jmp
mov
sbb
and
scas
and
out
dec
and
adc
in
lods
pop
mov
mov
push
daa
jb
in
xchg
out
sub
mov
and
sti
jmp
les
data16
gs
cmpxchg
push
mov
add
call
sarl
or
stos
mov
loopne
jmp
mov
mov
lods
fwait
jb
test
daa
out
jecxz
jmp
xchg
add
or
es
rcrl
loopne
sbb
sbb
adc
gs
jne
adc
add
sub
lods
xor
jge
shrl
or
sub
notl
shll
mov
repnz
sbb
mov
sahf
sub
gs
cld
pusha
dec
add
jb
shrl
jmp
push
repnz
sbb
or
cmp
mov
bound
jmp
cmpsb
dec
lcall
xchg
lods
popa
pop
jle
xchg
lods
push
inc
test
movsb
pop
dec
jb
sub
mov
aad
xchg
jb
inc
lcall
aam
xchg
pop
and
fs
insb
or
sbb
sub
dec
leave
inc
test
jp
mov
div
rorl
out
and
inc
pop
cmp
cmp
fisttps
mov
inc
fsubr
in
sbb
xchg
push
jmp
dec
lret
dec
cmc
cmp
push
or
push
loopne
loop
jmp
fcmove
insl
fsubrl
ret
daa
dec
jle
add
inc
jmp
xchg
pusha
inc
sbb
sub
out
test
or
cmpsl
jne
xor
jmp
outsb
ret
addr16
push
adcb
add
xchg
mov
insb
cltd
inc
or
lods
loope
vmulsd
aam
push
inc
add
fisubs
jmp
std
out
pop
mov
adcb
pushf
fwait
mov
inc
dec
or
repnz
mov
jle
xchg
lods
or
and
ss
jg
leave
fsubp
mov
sti
rcl
jmp
cmp
iret
ret
rcrb
mov
outsb
jo
push
adc
pop
movsl
das
cmpsb
push
jmp
and
dec
pop
ljmp
jp
add
xor
jmp
pop
pushf
shll
adc
sub
cs
jmp
iret
and
jmp
fbstp
lahf
je
push
jmp
lret
adc
mov
out
decl
sbb
lahf
in
addl
lret
test
lcall
push
lods
sub
inc
insb
fdivr
nop
or
jmp
iret
push
inc
xor
or
syscall
jmp
testb
pop
jmp
adcl
repnz
pop
daa
sbb
cmpsb
add
ss
es
mov
pop
jmp
sbb
test
mov
mov
rolb
xchg
les
sub
adcl
cmpsb
insb
pop
jg
out
jmp
or
imull
into
movsb
in
xchg
cmpsb
es
or
and
mov
ret
aaa
scas
push
xchg
lods
sub
mov
cmp
sbb
sub
push
fsubrl
add
jmp
cmpb
ss
test
fnstenv
shrb
loope
xchg
mov
cmpsb
pop
sub
pusha
and
sub
push
sti
clc
pop
xor
sbb
inc
data16
or
push
mov
mov
inc
xchg
sub
mov
aaa
rep
or
push
movb
jmp
xchg
iret
pop
adc
call
dec
fsubr
mov
mov
cs
xchg
jmp
aas
lods
dec
mov
iret
pop
in
hlt
scas
pop
mov
mov
push
mov
push
fstpt
out
fwait
mov
jmp
lahf
mov
add
fildll
jbe
mov
jecxz
int3
xor
adc
xor
jp
aam
pop
mov
or
jmp
mov
pop
roll
push
loopne
mov
repz
pusha
dec
and
ljmp
pop
pop
mov
dec
jle
addb
out
adc
jmp
sbb
stos
lahf
pop
je
jmp
movsb
call
inc
sub
cmp
arpl
int3
jmp
push
rol
lea
insb
lods
stos
div
lret
push
adc
pop
and
dec
jmp
imul
push
lods
mov
stos
mov
bndstx
mov
ret
push
into
mov
xor
loope
inc
mov
lahf
jmp
push
jns
add
push
jmp
daa
cld
aaa
in
in
push
jmp
inc
sub
leave
stos
and
xchg
dec
loop
movsb
imul
pushf
mov
jmp
push
rclb
ds
pusha
sub
out
inc
test
mov
mov
leave
mov
mov
outsb
xchg
lahf
cmpsb
imul
xchg
mov
pop
fsubr
xor
popf
jmp
sar
test
jns
push
cmc
jmp
add
jmp
mov
enter
jge
mov
cmc
pop
inc
mov
or
jae
or
inc
dec
xor
xor
in
cmp
pop
jmp
lcall
jmp
imul
dec
stos
jmp
scas
cmpb
fldt
call
jmp
inc
shl
jne
sbb
mov
aaa
sbb
test
lds
cmp
int3
insl
loop
xchg
push
sub
mov
push
sbb
mov
jge
sub
push
aam
jp
int
ret
and
pop
push
call
shll
stos
sbb
dec
jmp
in
pop
or
fcmovb
sub
call
jmp
push
fs
les
ljmp
in
pop
sbb
push
push
cmp
mov
add
sub
movsb
cmp
dec
pop
fstl
pop
mov
xor
testl
in
xchg
pushl
cmp
lods
negl
pop
sub
xchg
cli
sbb
enter
adc
mov
std
rcll
mov
jmp
and
mov
sub
rcrb
adc
jnp
dec
push
jmp
sub
and
lret
add
jae
xchg
fsubrs
aad
rcrb
mov
test
lock
push
inc
adc
pop
or
stos
imul
pop
push
pushf
jmp
enter
subl
mov
pop
mov
ficomps
jmp
loop
cli
in
cld
jmp
cmp
flds
mov
sbb
bound
jbe
rcl
iret
outsl
insl
mov
js
mov
jmp
arpl
and
fstpl
adc
jp
sub
lcall
subb
xchg
sbb
stos
jl
mov
push
sbb
jle
mov
aam
mov
xor
jmp
inc
cmp
push
jae
adc
testl
jmp
push
dec
push
mov
jno
pop
xor
jmp
xlat
mov
outsb
lea
xor
out
or
push
add
pop
push
and
jmp
repnz
sub
cmc
pop
jl
pop
and
mov
roll
lret
jmp
lahf
cmp
jo
es
orb
scas
inc
cltd
mov
fmul
push
inc
inc
xchg
sub
sub
fbstp
sbb
xchg
mov
jae
mov
mov
sub
jmp
js
mov
cltd
mov
fbld
ljmp
lahf
inc
push
cmp
stos
divl
push
xchg
movsb
std
jmp
adc
pusha
mov
jmp
add
jmp
jmp
ljmp
jmp
jb
std
js
sub
fdivs
or
mov
cmpsb
jmp
mov
pop
add
or
psubw
repz
jmp
or
inc
jle
or
das
dec
aas
fbld
and
outsl
mov
ljmp
cmp
in
daa
or
movsb
inc
jmp
mov
mov
into
jl
and
shrb
sub
roll
sub
jl
jecxz
adc
push
jmp
addb
jmp
sahf
xor
loop
mov
outsl
and
dec
test
adc
scas
repz
mov
cmp
pop
mov
cmc
sar
jbe
lods
adc
jns
and
addr16
dec
inc
pop
inc
xchg
test
cmpb
les
sti
sti
out
js
adc
into
pop
lret
nop
inc
mov
adc
orl
sbb
sbb
rolb
xchg
and
rcrl
jmp
andb
movsl
popa
jnp
jmp
repz
mov
push
daa
bound
xchg
stos
sbb
xlat
xchg
insb
insl
adc
inc
int
and
es
shrb
pushf
dec
repnz
cmp
mov
jo
xor
sbb
jns
outsb
adc
sub
pop
dec
je
push
loopne
sbb
push
mov
or
jmp
movsl
cmc
std
fldl
jmp
dec
xlat
aam
or
por
cmp
xor
pop
xor
pop
cmp
dec
cmpsb
cld
inc
and
test
jmp
subb
or
mov
and
fsubr
inc
dec
jmp
out
or
jmp
pop
sub
popa
lods
or
jl
jmp
sbb
sbb
out
sub
sbb
inc
imulb
jmp
xor
sbbb
or
je
into
scas
ficompl
mov
push
jae
jb
mov
sbb
lods
imul
or
adc
and
mov
fcoms
ficoml
mov
push
xor
inc
insb
ret
inc
je
not
mov
jge
outsb
std
fisttpl
inc
fiaddl
hlt
sar
jmp
mov
mov
xlat
lods
imul
iret
sub
add
popf
in
jmp
rcrb
daa
data16
shr
push
mov
cmp
sub
sti
imul
insb
pop
inc
adc
subl
xchg
and
fcmovbe
jmp
cmp
and
outsb
pop
dec
gs
xor
mov
jmp
cmc
rolb
mov
cmpsb
jmp
std
push
mov
bnd
cmp
les
jmp
sub
push
xlat
mov
dec
ret
in
popf
or
cmpb
add
sub
scas
jmp
mov
push
pop
or
inc
sub
jmp
aam
mov
jne
sti
pusha
movsl
rorb
or
jbe
mov
lods
sbb
sti
pop
pop
inc
and
test
mov
sbb
fisubrs
iret
add
test
sbb
in
loope
cmpsl
dec
pop
push
jmp
xchg
or
les
sti
dec
dec
pop
xor
add
sub
sbb
pop
sub
test
aaa
rcll
or
mov
inc
lcall
sub
into
movsl
jne
and
cmp
sbb
pop
movsl
mov
nop
test
pop
mov
mov
dec
push
lods
outsl
jns
pop
sbb
addr16
lock
fs
inc
lret
inc
jae
stos
out
test
cmp
std
dec
aaa
jmp
popa
fwait
mov
sub
push
stc
repz
sub
add
ficompl
ss
or
jmp
xchg
mov
sbb
fiadds
add
clc
pop
pop
arpl
cmpsl
cmpsb
cmp
icebp
mov
into
stos
sbb
fstp
mov
pop
std
mov
jmp
inc
nop
das
adc
jb
repz
and
sbb
icebp
xchg
jmp
test
pop
pop
xlat
jge
jmp
aaa
ja
adcb
mov
jbe
fidivl
lock
inc
adc
mov
cli
lret
sub
xchg
lods
decb
dec
sbb
xchg
lods
jle
popl
inc
inc
push
hlt
cmp
inc
fwait
jmp
xor
mov
jmp
xor
push
and
sbb
pusha
jno
adc
test
or
mov
jmp
lahf
bound
adc
std
cmp
or
xchg
push
inc
in
sub
addb
jb
in
jmp
js,pt
in
jmp
arpl
data16
scas
ret
xchg
hlt
jno
and
jmp
and
std
inc
mov
fs
mov
clc
push
lods
iret
pop
sarb
mov
inc
int
lods
dec
daa
mov
aam
jo
xchg
cmp
jmp
or
or
sbb
xchg
je
jg
jmp
mov
xor
fstl
xchg
ljmp
stos
mov
pusha
pop
mov
testl
fbld
lret
outsb
jmp
mov
jmp
out
xchg
pop
push
jle
repz
add
or
fcoms
dec
pushf
insb
fisttpl
les
adc
jmp
or
and
popf
cmpsb
fimull
outsl
movsb
fucom
lods
sahf
xlat
cli
sub
sub
out
push
int
sub
mov
and
into
xchg
popa
push
sbb
jmp
inc
fldenv
pop
mov
dec
cli
cltd
mov
jmp
mov
jmp
inc
mov
dec
sub
xchg
push
shl
sub
fdivs
subb
and
add
jne
pushf
inc
sarl
mov
js
int
scas
pop
push
add
or
xor
scas
push
jns
or
sub
fsubr
aam
roll
inc
jo
jno
xor
ret
add
push
sub
adc
sub
push
repnz
mov
stos
fwait
sahf
movsb
push
jns
mov
xor
push
jne
or
sbb
ja
and
sub
mov
and
mov
jecxz
jmp
in
and
xchg
push
inc
out
xchg
fbstp
jmp
mov
pop
int
push
jmp
pop
and
lods
xlat
das
dec
mov
imul
icebp
cmp
xor
jmp
ljmp
imul
inc
notb
jmp
jno
jp
int3
xor
lods
or
pop
pcmpeqd
mov
iret
sarb
nop
xor
jmp
cmpsl
out
stos
push
mov
std
dec
inc
and
sti
fcoms
jmp
inc
stc
inc
insb
movsl
sarl
xor
or
and
xchg
jmp
xor
dec
push
and
fwait
mov
stc
in
out
mov
scas
std
pusha
lock
pop
test
push
pop
test
and
in
or
movsl
push
cmp
outsb
aas
int3
jnp
bound
movsb
negl
ljmp
fwait
xor
repz
cmp
sub
stos
out
jae
add
cmp
jecxz
ja
loope
sbb
cmpsl
sub
pop
push
jne
mov
dec
mov
test
rcll
out
loopne
enter
lahf
fucomi
add
unpckhps
add
jmp
inc
and
lret
mov
lret
pop
ret
and
es
dec
jl
nop
repnz
xchg
mov
and
xor
sbb
push
bound
lds
lret
jmp
mov
into
in
mov
outsl
inc
add
jbe
cmp
idiv
xor
scas
iret
gs
fidivs
pop
lods
fnstenv
cmp
dec
cli
sbb
sbb
xchg
jmp
cmpsl
mov
pop
add
jmp
stos
or
addb
ficoml
lods
shlb
sti
xchg
xchg
lret
lea
dec
jmp
push
ret
adc
add
adc
shrl
or
dec
ss
mov
mov
push
mov
popf
mov
xchg
std
daa
movsl
aam
inc
movsb
fs
dec
cmpsl
inc
fdivl
std
adc
sub
roll
addr16
pushf
push
lcall
mov
les
inc
cmp
inc
push
push
cli
dec
xor
pcmpgtw
jo
pop
jmp
shrb
mov
adc
andl
arpl
mov
ret
into
adc
out
lock
por
and
sbb
adc
in
iret
add
scas
andb
jb
in
aam
jmp
inc
sbb
sub
lret
lods
add
xlat
loope
scas
cmp
or
cmp
iret
jmp
mov
mov
sub
cld
jmp
mov
sahf
pop
lret
insb
ja
xor
mov
jmp
cmp
scas
mov
pop
add
je
or
data16
cld
push
and
hlt
xchg
xlat
sub
cmp
and
imul
jb
push
xchg
mov
out
xchg
std
dec
out
jmp
xchg
xor
iret
icebp
jmp
push
pop
loopne,pn
in
popa
cmc
pop
popf
pusha
jmp
jl
rol
push
mov
sbb
scas
or
or
push
movsb
and
jmp
clc
pop
pop
bnd
inc
lcall
stos
pop
loope
dec
jmp
and
lds
lcall
sub
pop
iret
jb
fucomip
sarl
arpl
xor
mov
push
in
jmp
xchg
mov
add
push
pop
lods
outsl
loope
inc
in
punpckhdq
int
andl
sub
test
pop
sub
insl
fs
jne
mov
lods
stc
xchg
test
insl
mov
adc
out
mov
pop
test
sub
sbb
jg
cmc
or
cmp
sub
es
sbb
jnp
sti
jns
sbb
jp
dec
fldenv
inc
xor
es
push
shrl
jb
mov
jmp
xchg
hlt
les
push
jmp
xchg
lods
aad
or
subb
dec
mov
and
sub
insb
jle
test
fmuls
andb
out
mov
jno
push
push
jb
cs
sub
sub
cli
mov
jmp
jle
pop
fst
inc
loopne
dec
bound
iret
sub
add
pushf
in
lcall
pop
sbb
das
iret
adc
push
daa
shr
into
mov
pop
jp
push
lods
mov
outsb
xchg
add
pusha
pop
add
push
cmc
or
xor
mov
mov
ss
and
pop
sub
mov
pusha
adcl
sbb
inc
pop
pop
adc
mov
jmp
cmp
data16
rep
mov
sbb
and
je
in
ja
outsb
repz
mov
xor
cwtl
or
add
bnd
imul
inc
out
int
daa
das
test
mov
out
add
cmc
xor
push
test
jp
and
jnp
sbb
pusha
scas
jl
xchg
inc
jmp
shl
inc
pop
mov
or
xchg
xor
std
jmp
add
cs
jo
pop
lods
outsb
js
push
in
loop
dec
and
je
stc
lods
jnp
fidivs
mov
scas
and
sti
lret
adc
int3
fsubrl
push
sahf
pop
lods
test
mov
inc
sti
jle
cmp
lods
sbb
js
ja
jnp
sub
mov
rorl
pop
push
jns
xchg
rcrb
sbb
jae
ror
addr16
cwtl
jmp
iret
pop
std
insb
repz
jmp
js
int
xor
xor
mov
adc
out
jmp
movsb
test
sub
ljmp
sti
mov
outsl
inc
pop
das
lock
fwait
sub
sbb
inc
call
jmp
xchg
enter
mov
and
jae
cmp
adc
mov
xchg
in
xchg
mov
jmp
add
pop
add
lods
pop
push
jge
dec
daa
add
bound
jo
ja
inc
jmp
mov
mov
mov
stc
test
jmp
xchg
jle
sbb
jo
in
xchg
or
lods
test
xchg
fidivs
mov
cmp
jmp
mov
xchg
cmpsb
enter
and
inc
fs
in
pop
lret
int3
cmp
icebp
mov
sub
jp
sub
cmp
jmp
jo
out
push
fldt
cmp
cmp
dec
jmp
in
and
sbb
pop
sti
sub
inc
lret
lahf
shlb
add
sub
mov
lcall
sbb
lret
leave
and
pop
push
mov
inc
add
mov
jmp
lret
sub
jl
divb
and
jmp
mov
inc
or
and
mov
sub
push
mov
xchg
jno
jmp
dec
loopne
jmp
int
cmp
jmp
pop
sahf
stos
inc
jne
pusha
outsb
mov
inc
and
inc
jmp
adc
mov
xchg
dec
or
inc
lcall
mov
iret
push
xchg
xor
sbb
dec
jmp
ss
das
lret
jmp
jnp
mov
jmp
scas
mov
shlb
mov
into
lock
loopne
sub
mov
stos
xor
test
shlb
jno
mov
jmp
enter
shrl
insl
mov
stos
add
test
sbb
sub
outsl
lock
xchg
cmpb
out
push
outsb
jl
xchg
push
jmp
pop
int
xor
rolb
out
out
dec
lods
stos
jne
mov
movsl
imul
sti
adcl
lret
out
push
out
dec
rol
jmp
clc
lods
and
lahf
gs
or
and
push
and
dec
jmp
sub
iret
xchg
jecxz
or
dec
outsb
or
std
outsb
or
mov
sbb
test
adc
loope
jmp
sub
xchg
xor
inc
dec
paddb
imul
sahf
lock
and
pop
nop
jl
or
mov
push
sub
push
jmp
cs
iret
es
sub
and
jmp
arpl
out
cmp
pop
xor
sub
fistpl
stc
ret
pop
mov
and
mov
jecxz
mov
jmp
bound
sub
pop
mov
adcl
popa
xlat
xchg
pop
jp
fdivrs
lods
dec
push
mov
enter
and
cltd
pop
push
and
sub
and
sti
cmp
or
enter
lahf
fldenv
push
and
cli
jbe
pushf
mov
in
jmp
sbb
pop
sti
jmp
int3
insb
addb
sub
imul
push
jb
or
das
jae
cmovg
push
mov
aas
mov
jg
in
pushf
jmp
mov
cmp
cmp
pushl
mov
dec
sub
cmp
leave
jl
and
pop
sub
xchg
fdivl
imul
popa
xchg
pop
sub
repz
inc
ret
pop
and
adc
add
movsl
rcrb
sti
jnp
xchg
clc
hlt
xchg
jmp
inc
sub
pop
jge
cld
jmp
sbb
cmovle
cmp
out
xor
je
mov
adc
ljmp
sub
cltd
xchg
divb
adc
add
jp
jmp
push
daa
popa
dec
push
dec
cmp
cltd
mov
xchg
insb
psraw
xchg
mov
mov
pop
inc
or
adc
in
sub
mov
xchg
and
lods
mov
jmp
pusha
cmp
mov
insl
push
sbb
push
aad
adc
aaa
jmp
divl
test
xchg
cli
cmpsl
sbb
fwait
dec
rcrb
fs
aam
dec
and
mov
ret
les
and
enter
inc
out
pushf
pop
xchg
in
out
add
xchg
pop
mov
or
jp
stc
lods
out
adc
inc
add
daa
mov
popf
lods
mov
ss
mov
jmp
scas
xor
sti
sub
xchg
addr16
jg
dec
add
clc
push
jbe
push
nop
cmp
mov
cmp
jb,pn
sub
or
mov
lret
mov
push
or
aad
jmp
adc
pop
lods
fs
dec
sub
sub
gs
aas
dec
lea
imul
xchg
leave
sbb
clc
push
push
sub
dec
mov
scas
jecxz
bound
sbb
pop
xchg
cmpsb
pop
mov
sub
and
mov
iret
dec
out
add
jmp
je
mov
imul
xchg
sahf
cwtl
sti
js
cmp
pop
int3
inc
sbb
insb
imul
jmp
ljmp
jmp
add
scas
push
push
jg
jmp
test
sbb
fmull
push
xchg
cmp
ja
jmp
mov
je
mov
jmp
mov
mov
outsl
sar
sti
xchg
pop
std
push
and
insb
xor
jbe
xchg
jmp
push
pop
jle
mov
out
test
jmp
movsb
ss
movsl
mov
pop
or
insb
jnp
mov
sub
insb
pushf
lcall
dec
or
or
jmp
cwtl
loopne
jb
clc
in
outsb
mov
nop
cmp
add
add
sahf
and
sub
je
mov
mov
add
inc
jmp
aas
xlat
movsl
add
cwtl
pop
outsb
push
dec
ljmp
les
xchg
bswap
ss
jmp
loopne
push
dec
scas
fucomi
push
sar
mov
ret
std
notl
das
jmp
ss
dec
jmp
push
jne
jmp
repnz
icebp
movsl
hlt
mov
push
add
inc
jmp
jb
or
cld
cwtl
cs
das
je
jl
inc
out
test
in
lcall
lods
clc
jg
dec
xor
push
xchg
cmc
shrl
mov
sub
iret
mul
adc
mov
adc
fucomip
mov
mov
sub
dec
pop
xor
sbb
jae
cmpsb
repnz
cmp
xchg
push
mov
push
pop
rclb
jmp
mov
add
push
cmp
ret
adc
testb
inc
sub
add
and
jg
pop
dec
jp
sarb
cld
rcll
into
jge
ja
jmp
jns
push
addl
jmp
in
push
mov
and
dec
dec
jmp
cmp
nop
fdivrl
mov
jmp
into
xchg
out
rorb
outsl
enter
imul
pop
push
shr
xchg
pop
repz
push
xchg
rorb
push
dec
and
mov
mov
push
mov
outsl
test
sub
fwait
sti
ljmp
push
sarb
and
or
add
ja
in
pop
mov
mov
adc
and
mov
jmp
pop
jne
dec
pop
lods
daa
outsb
push
add
icebp
or
ret
push
packuswb
and
jecxz
movsl
jmp
test
and
mov
dec
insl
ljmp
jmp
and
repz
call
pop
mov
out
xchg
xor
mov
outsb
and
jae
ss
xor
fwait
cmc
pop
push
sbb
jmp
jl
cmp
das
dec
or
fsub
sbbl
insl
mov
jp
clc
dec
mov
mov
xchg
or
lods
adc
add
xchg
aas
jmp
pop
leave
std
ljmp
add
adc
inc
push
jno
repnz
xor
lret
jle
sbb
scas
push
pop
or
orl
dec
mov
mov
aas
push
mov
jmp
mov
shrb
mov
sbb
sahf
faddp
insl
mov
into
adc
loopne
pop
js
inc
cmpl
add
mov
lds
push
jo
imul
shrb
fucomp
loopne
int3
adc
jp
enter
or
cmp
test
std
sub
lret
in
and
pushf
xchg
mov
mov
jmp
add
xor
cmpsb
fs
push
xchg
jmp
add
ss
pop
mov
loope
sbb
mov
xor
sub
pop
mov
dec
rcrb
inc
push
add
cwtl
or
sbb
scas
adc
test
jmp
enter
sub
xchg
stos
ficomps
xor
jmp
or
cmp
andb
stc
xlat
lods
cmpsl
mov
push
shl
mov
shlb
out
lock
std
je
mov
icebp
inc
jmp
and
cmpsl
mov
cli
pop
pop
push
loopne
icebp
jmp
add
outsb
push
aas
xchg
int3
jmp
adcl
lret
cmp
adc
arpl
imul
xor
cmpsl
sub
imul
insl
es
stos
inc
outsb
test
mov
scas
mov
aas
scas
cmp
stc
jmp
decb
mov
ret
or
std
jecxz
das
cmp
and
lods
sub
pushf
jmp
push
xorl
outsb
ret
aas
xchg
jmp
jmp
scas
mov
xor
or
jmp
add
xor
cmpsb
lods
daa
outsb
sub
pop
jg
jno
repz
nop
loope
je
add
pop
jnp
inc
push
xchg
sbb
adc
or
mov
lret
jmp
fmull
and
jo
mov
inc
aam
lcall
pop
mov
out
test
xchg
cmp
push
push
shr
xchg
jno
daa
int
shr
push
sub
pop
mov
shrl
pop
aas
add
jecxz
cmp
call
aaa
push
shrb
out
mov
add
insl
add
enter
jmp
mull
cmp
fists
scas
loope
sbb
mov
jg
mov
dec
dec
push
jmp
sbb
and
push
cmp
into
cmp
ficoms
and
jmp
pusha
sahf
dec
in
out
cli
lret
pop
cs
lods
out
and
mov
imul
jmp
mov
pusha
in
leave
lret
les
mov
xchg
jmp
icebp
or
jo
dec
mov
adc
mov
mov
mov
xor
inc
jmp
test
movsl
pop
scas
lret
mov
std
pop
iret
and
aas
ss
xor
fcoms
fsubrp
jmp
mov
and
jmp
add
ret
dec
stc
jmp
out
in
xor
sub
jmp
addr16
jmp
push
xchg
lods
ret
idiv
push
adc
rorl
scas
push
or
in
jmp
or
pop
out
ss
jmp
jno
or
pop
inc
enter
mov
popf
jb
ss
cs
lods
icebp
xchg
pop
nop
cld
arpl
mov
sbb
shll
in
outsb
aad
push
mov
jmp
out
cmpsb
aas
cwtl
scas
inc
sti
push
in
je
ret
jmp
inc
int3
and
xlat
jge
enter
lods
cwtl
dec
lret
xor
adc
xor
push
jmp
cmpsl
out
dec
add
scas
xchg
add
push
imul
int3
arpl
bnd
pop
push
filds
pop
mov
sub
es
add
daa
xchg
aam
in
dec
dec
jmp
dec
lret
jne
leave
jmp
adc
int
add
mov
js
mov
ret
adc
clc
add
orl
lods
shr
jg
mov
dec
mov
loope
jmp
pop
add
jl
pop
mov
in
push
add
jnp
sub
cmp
jmp
xchg
iret
push
shlb
mov
imul
mov
loopne
insl
mov
loop
adc
jmp
push
pop
mov
adcl
ljmp
fdiv
decb
jmp
sarl
mov
enter
mov
jmp
pop
and
sbb
repz
jp
or
mov
notb
pop
inc
bnd
mov
daa
cmc
sub
or
xor
out
jecxz
fucom
ret
mov
test
sbb
out
jbe
sub
fwait
or
loopne
pop
lods
pop
xor
xchg
xchg
ljmp
or
scas
mov
insl
outsl
in
adc
outsb
cmpsl
fmull
jmp
cmp
dec
cmpsb
std
scas
jmp
mov
fldcw
mov
push
jmp
out
inc
mov
sub
mov
jmp
jb
test
push
dec
inc
jmp
out
sbb
jmp
je
mov
dec
inc
mov
mov
inc
jns
mov
out
push
dec
pop
popa
pushf
and
jmp
repz
mov
scas
mov
xor
lcall
outsl
inc
cmp
pushf
pslld
jno
ret
jmp
les
jbe
hlt
gs
jmp
clc
cmp
dec
out
push
int3
and
insb
fucomp
pop
test
leave
mov
subb
mov
sub
mov
in
imul
push
or
sub
mov
out
push
jmp
cmp
mov
jmp
pop
shrl
lods
adc
inc
enter
mov
and
iret
jmp
ja
idiv
cmp
in
mov
mov
outsb
test
lret
xchg
mov
repnz
scas
and
dec
in
aam
mov
xchg
mov
outsb
ja
mov
lahf
jle
lods
push
push
in
cmp
inc
or
inc
and
xlat
scas
lret
lahf
lds
pop
mov
adc
shr
icebp
test
in
jl
pusha
jmp
mov
sbb
dec
xor
fsubrl
fs
lods
lret
lcall
pop
add
jmp
scas
sbb
mov
lea
jb
sbb
inc
sbb
lods
mov
jmp
dec
or
jmp
js
push
jmp
mov
dec
push
jmp
int
push
jae
add
mov
mov
sbb
jmp
aaa
jne
push
jo
inc
pop
push
adc
jmp
xchg
sub
xor
test
fsubrs
out
sbb
leave
repz
xor
loop
adc
addr16
fsubl
fisubrl
loopne
and
in
dec
inc
mov
imul
mov
cmp
jno
test
xchg
scas
pop
repnz
add
dec
xor
cmpsb
jnp
inc
xor
push
push
jmp
sbb
xchg
jmp
insb
push
ss
mov
fisubrs
scas
and
mov
imul
mov
sbb
sub
and
xchg
pushf
or
out
sub
jmp
insb
mov
lods
ljmp
and
bound
arpl
nop
dec
fimuls
sub
pusha
testl
jmp
bound
sbb
jnp
jae
lock
mov
sub
mov
jl
fldenv
ror
or
enter
push
push
mov
mov
jmp
xchg
hlt
xor
dec
jae
add
dec
jmp
mov
xor
mov
imul
stos
lods
leave
adc
iret
jg
mov
cmp
cmp
push
dec
jmp
shlb
adc
push
stos
mov
out
shll
jle
lods
xchg
lods
add
insl
jno
loop
int
imul
add
outsl
in
sti
lods
pop
cmpsb
push
scas
jmp
pushf
int
ret
imul
jns
and
jmp
sub
cmc
les
jmp
cmpsb
mov
push
mov
int
mov
jmp
add
outsl
lcall
mov
jmp
sbb
fstpt
mov
sbb
fistps
sub
jmp
jo
xor
mov
andps
into
lar
adc
mov
and
lods
inc
mov
jnp
insl
or
es
jmp
inc
add
and
repnz
adc
inc
scas
lret
dec
push
jmp
jne
cmp
push
lods
insb
jbe
sub
pop
add
jmp
paddb
std
data16
lods
sahf
mov
mov
xchg
xchg
stos
cmpl
movsl
subb
and
dec
lret
jo
push
cmp
clc
pop
sbb
and
pop
aam
shr
or
inc
cmp
int
popf
shrl
push
mov
jmp
cmp
jmp
repnz
pop
mov
std
or
xchg
push
and
mov
jbe
subb
movsb
aaa
xchg
fdivl
ja
sbb
adc
mov
loop
cli
sbb
cmp
mov
in
and
xor
mov
sub
popl
shlb
cs
inc
or
add
out
cmc
addr16
mov
jmp
jb
out
xchg
and
jmp
inc
mov
xorl
cmp
sub
ficoml
push
jmp
mov
pop
add
adc
adc
in
sub
dec
fs
xlat
fidivrs
popa
mov
addr16
rclb
inc
aaa
adc
or
sbb
push
adc
xchg
jmp
cmp
das
lock
dec
mov
imul
mov
arpl
mov
or
xor
jno
push
lock
jmp
ja
push
lods
xchg
pop
mov
loope
jle
leave
jb
cltd
sub
pop
and
xchg
jmp
test
pop
jmp
cmp
push
dec
push
loop
outsb
sub
ljmp
test
popf
push
cmp
jo
pop
sub
dec
inc
jl
mov
jmp
jmp
xlat
clc
mov
sbb
movsl
jmp
stc
cmp
sti
imul
inc
xor
cli
pop
jl
mov
mov
into
xchg
dec
cmc
lock
or
xor
imul
pop
mov
xchg
fnstcw
in
push
sbb
cmp
jnp,pt
adc
movsb
add
jmp
sub
ljmp
loop
mov
jmp
aam
mov
adc
in
sbb
xchg
clc
lds
jp
push
push
ja
idiv
pop
mov
jl
insb
por
inc
dec
lods
jns
inc
inc
les
sub
nop
jmp
adc
shrl
mov
int3
das
inc
and
jae
push
xchg
mov
xchg
jl
or
inc
test
lods
jmp
mov
in
jl
gs
into
icebp
jmp
push
test
aam
bound
repnz
and
insb
xchg
dec
jbe
sub
dec
pop
sub
data16
dec
and
test
lds
mov
pop
mov
xor
pop
rsm
jmp
sub
adc
sbb
filds
mov
jae
insl
jp
sahf
outsb
sub
jmp
mov
pop
std
dec
pop
mov
push
jmp
je
mov
jmp
scas
bound
std
xchg
mov
and
imul
scas
cmp
jbe
sbb
dec
hlt
scas
mov
sbbb
loope
fsts
xor
push
adc
arpl
jne
jmp
push
push
cmp
insb
and
mov
cmpsb
jmp
mov
lret
xchg
mov
add
and
mov
jne,pt
mov
in
jb
pop
fcompl
sti
imul
jmp
in
popa
lods
sbb
jmp
scas
int
leave
ja
jmp
or
js
scas
fistps
adc
cltd
test
xor
cmc
jle
push
sahf
movsb
lods
add
lods
mov
fists
sub
lods
movsl
ja
mov
stos
arpl
xor
jge
jmp
aam
mov
fs
dec
jmp
rorb
add
and
mov
in
ret
scas
mov
push
out
push
and
jmp
ds
subb
xchg
nop
mov
and
lock
lods
mov
inc
adc
lock
clc
cmpsl
sarl
fucomip
aad
cwtl
inc
or
insb
xlat
cs
xchg
sbb
and
jmp
cmpsb
je
stc
popf
jp
sub
test
jns
lock
push
ds
rorl
ljmp
inc
push
jmp
dec
jae
ljmp
lods
mov
repnz
xchg
add
pop
leave
jmp
cltd
fisubl
sub
movsl
xchg
mov
sub
int
ja
pop
test
jmp
mov
aam
jmp
mov
clc
out
adc
jmp
or
pop
inc
imul
mov
xchg
leave
adc
jmp
mov
loope
pop
movsl
outsl
mov
sub
hlt
dec
imul
jmp
xchg
mov
add
xchg
pop
inc
or
mov
pop
in
push
jge
mov
adc
dec
scas
es
orl
adc
and
add
sbb
in
cltd
cli
and
lret
outsb
popl
in
mov
jmp
cmp
out
lcall
cltd
faddl
movl
ret
xchg
cmpb
cmp
pusha
push
or
jl
jmp
and
pop
cmpsl
rcrb
jns
fst
in
lods
jno
sbb
loope
movsl
lods
inc
mov
and
jp
push
sbb
pop
rolb
adc
daa
mov
mov
sub
sbb
insl
jmp
jecxz
add
loope
xchg
andl
add
stos
jmp
int
cltd
ret
mov
loop
and
clc
mov
jecxz
and
and
adc
int3
jmp
cmpsb
inc
xchg
pop
aaa
aad
jmp
aas
fimull
fldt
or
js
adc
imul
testl
pop
sub
scas
aad
iret
push
push
mov
sbb
inc
cwtl
les
adc
push
gs
or
into
xor
aad
mov
jmp
stos
loope
push
pusha
push
xor
push
xor
ret
cmp
imul
adc
stc
push
mov
jl
sbb
mov
nop
mov
or
in
hlt
rcrl
subb
outsb
stos
pop
cmp
jmp
push
movsl
clc
jmp
push
ja
cmpsl
movsb
cmp
sbb
inc
push
stc
fsubrp
push
fisttpll
jge
or
in
sub
xor
sub
das
push
sbb
mov
jmp
mov
sub
hlt
loopne
inc
int
dec
pop
cli
lods
aam
rorl
or
xchg
mov
cmp
sub
adc
int
dec
scas
mov
fistl
mov
cwtl
or
and
sub
scas
add
jo
jp
cmp
in
and
lods
adc
or
out
pop
inc
sbb
sti
pop
jnp
push
jmp
or
gs
test
lods
jmp
stc
jne
jmp
lret
dec
pop
and
jmp
mov
sbb
jmp
ja
test
or
xlat
jmp
pop
dec
adc
jbe
mov
xorl
jmp
out
out
add
ljmp
sub
or
lods
insb
mov
movsb
sub
nop
mov
push
xchg
lods
out
push
imul
loopne
stos
inc
fwait
repz
jmp
cli
xlat
es
jb
notl
inc
cmp
jmp
aaa
je,pn
mov
sub
inc
jg
movsb
adc
mov
push
xor
sub
adc
jge
stos
adc
pop
dec
push
sti
test
jmp
jb
inc
icebp
lock
jns
add
mov
mov
and
jp
sub
lods
stos
jle
xor
sbb
fisubs
stc
in
mov
inc
inc
cmpsl
push
pop
push
push
jmp
jge
repz
jg
sub
sahf
fsubrs
ds
pop
push
mov
je
pop
cmp
outsb
aam
enter
sti
and
aaa
mov
mov
push
dec
pop
pop
cmp
and
mov
push
arpl
or
lods
je
pop
mov
daa
sahf
sub
imul
pushl
xlat
push
add
scas
das
inc
jae
daa
cltd
dec
lods
and
or
jmp
pop
inc
out
or
or
jmp
jae
dec
fbld
mov
cmp
jecxz
mov
xor
add
ljmp
fsubrl
xchg
and
jmp
mov
in
jb
test
jmp
push
and
subw
cmpl
adc
or
mov
insl
push
clc
xchg
in
imul
pop
aas
inc
gs
sub
pushf
mov
loopne
jmp
jmp
or
addr16
faddl
and
or
jmp
xchg
push
sbb
jb
push
or
hlt
or
and
or
out
xchg
pop
mov
mov
sub
jns
dec
in
mov
pop
inc
xor
test
insl
cmp
push
or
sub
jge
jo
pop
and
jmp
cmp
mov
pop
inc
fistpl
jp
aas
rol
call
jbe
add
jp
and
test
xchg
ret
fidivrs
jmp
test
jbe
inc
jo
jmp
add
jmp
or
mov
add
sub
loopne
cmp
sti
mov
dec
and
repnz
popf
mov
ret
sbb
shrl
dec
pop
pusha
imul
xor
pusha
lods
or
jecxz
xor
arpl
rcr
push
push
lds
and
cmp
push
adc
inc
inc
sub
jmp
iret
insl
dec
lods
imul
dec
cli
lds
sbb
sahf
sbb
inc
pusha
jmp
movsb
in
adc
adc
repnz
stos
dec
and
jecxz
dec
dec
int3
or
push
movsb
pop
or
pop
insl
int
xor
push
cli
jno
adc
add
jmp
repz
daa
pop
jmp
mov
movl
mov
jl
mov
xor
mov
jb
lock
jmp
adc
jne
aaa
xchg
jmp
sbb
popf
mov
cs
jp
jmp
insl
rol
dec
push
or
ljmp
call
sbb
dec
jg
jge
subb
push
dec
fsts
out
mov
ret
sbb
push
xor
and
popa
jmp
push
pop
fwait
add
mov
sub
bsf
mov
adc
jge
shll
out
push
xchg
es
and
add
leave
das
stos
addr16
sbb
inc
lods
add
ss
sbb
and
jns
sbb
xor
pusha
js
pop
xor
stos
shll
fdivs
sbb
push
add
jge
xchg
call
or
aad
ljmp
cmp
jmp
sbb
inc
negl
frstor
out
mov
adc
dec
rcll
sarb
inc
fnstcw
pop
xor
sub
add
je
test
mov
push
inc
jl
call
or
sbb
outsl
xchg
sbb
iret
push
imul
push
jmp
stos
in
popa
jmp
xchg
inc
xor
push
jmp
sbb
mov
pop
aad
out
mov
ja
mov
mov
jno
lret
or
insl
adc
xchg
pop
cld
jmp
loope
adc
jge
rorb
arpl
jb
pop
cmp
jmp
mov
sbb
lcall
test
pop
mov
rorb
mov
lods
mov
cmp
jbe
cmpsl
data16
lods
int3
scas
outsb
add
cmovs
rcll
jae
stos
inc
lcall
or
hlt
inc
push
jns
add
xor
and
cld
xor
test
jnp
mov
mov
rclb
inc
mov
add
add
call
imul
out
push
mov
scas
add
inc
cwtl
jmp
sub
mov
cmc
aad
shlb
loopne
stos
jmp
inc
mov
add
out
sub
enter
mov
adc
cmp
xchg
js
lods
outsl
notb
jb
sub
addr16
fildll
sahf
subb
sbb
aaa
fstps
imul
cmp
jmp
mov
adc
jmp
push
cmc
mov
std
push
repnz
dec
addr16
stos
jno
jp
jmp
imull
mov
cs
dec
clc
sahf
std
jmp
pop
pop
dec
push
mov
cmp
push
jp
fldpi
cmp
jmp
scas
addr16
mov
sahf
mov
div
mov
arpl
dec
inc
int3
daa
pop
js
jo
adc
add
cmp
cmp
fcompl
jmp
dec
jne
or
gs
andb
cmp
inc
mov
mov
loope
and
out
scas
outsl
inc
cmpsb
clc
adc
adc
fs
jmp
mov
les
jnp
sub
fnstcw
and
jmp
dec
daa
rcll
inc
cmp
dec
dec
mov
inc
cmp
stos
jmp
jecxz
out
enter
lret
gs
repnz
sti
loope
dec
jmp
cmpsb
mov
add
cmp
adc
loop
cld
cltd
jmp
pop
and
sbb
xchg
add
dec
lods
shrb
push
lock
jb
in
push
repz
lea
sub
arpl
mov
lods
out
adc
cmp
lcall
jnp
movsl
xor
jl
fs
incb
stc
sub
movsl
sub
lcallw
dec
jmp
jb
lret
popa
cmp
inc
xchg
loopne
jmp
push
dec
loop
jmp
in
mov
push
inc
jmp
dec
or
xchg
push
roll
adc
aad
mov
mov
lret
and
mov
fisubrl
insl
iret
stos
out
xchg
and
in
adc
cld
sbb
and
cmp
fimull
aam
xchg
cmp
xchg
jmp
loop
data16
cmpsb
sub
jnp
jg
jne
shlb
sub
dec
push
jmp
add
mov
inc
mov
in
arpl
inc
mov
push
mov
adc
int
and
popf
jmp
bound
addl
jmp
dec
sbb
inc
popa
mov
movsb
or
fs
jmp
stc
mov
repz
or
pop
sub
lods
fdivs
aaa
push
and
jbe
lahf
jecxz
repnz
push
or
lods
sbb
xor
mov
mov
popa
cmpsb
xor
in
dec
mov
pusha
jmp
xchg
cmpsb
jmp
pushf
pop
insb
in
outsb
fdivr
scas
leave
or
enter
or
cli
sbb
aaa
cmp
push
jmp
add
pop
push
rcpps
in
jae
les
push
mov
jl
jp
adc
push
pop
or
lret
lret
fs
leave
push
jmp
jae
and
mov
jmp
popa
or
fcoms
adc
in
mov
mov
fwait
lods
outsl
out
scas
imul
mov
loope
popf
es
cmp
fdivrs
jmp
and
adc
enter
add
jl
jmp
movsb
pop
daa
jnp
fcomi
scas
pop
das
fsub
lods
js
xchg
and
shld
bound
iret
cmp
jmp
cmp
pop
sub
clc
aaa
cmp
dec
mov
lret
hlt
cmp
or
push
rolb
lret
cmpl
stos
rcl
sti
sahf
jo
imul
negl
inc
dec
fidivs
sbb
imul
repz
repnz
fwait
sarl
jmp
xor
lock
push
jmp
and
push
xchg
adc
int3
and
add
iret
jb
into
push
sub
xchg
mov
adc
cmp
sbb
por
in
cmp
ljmp
stc
adc
push
dec
fs
sub
fprem
xlat
cmp
xchg
jmp
sbb
loop
dec
aad
jns
pop
xchg
pop
leave
or
add
inc
lret
sub
movsl
lods
andb
add
aad
inc
xchg
jle
jmp
mov
idivb
int
mov
sub
xchg
jmp
or
lods
adcb
in
sbb
rorb
push
and
daa
inc
ret
inc
jae
sbb
mov
mov
xor
aas
dec
xor
push
jmp
cli
cmp
pusha
jo
push
test
call
jmp
pop
dec
hlt
sbb
icebp
sub
or
enter
or
outsb
out
leave
jbe
cmp
jmp
daa
mov
mov
pop
cld
sbb
repz
leave
rcrb
lods
push
icebp
aad
mov
ss
ret
or
push
das
xor
scas
mov
imul
mov
jmp
push
je
mov
push
rorb
lods
inc
mov
shr
out
movsb
pop
or
xor
cli
sub
es
lock
and
mov
fldl
push
pop
sbb
jmp
cs
insl
mov
ss
sub
add
fdivrl
mov
lods
fcomps
hlt
cli
sub
jne
rorb
mov
loope
lods
fiadds
fwait
adc
xor
btsl
jecxz
cmc
ds
jmp
stc
xor
jmp
inc
or
jmp
int3
daa
adc
jnp
fidivs
dec
in
sbb
pop
movsl
sbb
push
popf
pop
fwait
jae
ds
insl
mov
pop
jl
out
jmp
sub
sub
jns
jmp
jo
sub
lods
inc
sbb
into
fbstp
jns
jne
push
pop
imul
mov
sti
iret
push
mov
mov
cmpsb
and
jmp
xchg
cld
xor
sub
cmp
inc
sub
in
arpl
movsl
sbb
stos
lods
aam
movsb
jecxz
push
mov
push
lahf
jmp
cs
popa
mov
cmc
xor
fsubr
jg
movsl
nop
add
xchg
lods
inc
push
sbb
push
jle
lret
stos
inc
jmp
cli
cmc
insb
into
cmp
mov
aam
lods
fcoms
xchg
jmp
bound
or
sbb
xor
stc
mov
jge
cs
stc
jmp
stos
jle
fcompl
jmp
test
sub
lods
mov
int
sub
add
jmp
xchg
or
cmp
mov
inc
cwtl
lahf
jmp
in
mov
ret
pop
jecxz
ss
scas
in
jmp
xchg
cld
xchg
cltd
and
sub
sub
pop
jne
dec
dec
lahf
pushf
hlt
sub
add
sbbb
sub
sub
outsb
sbb
cmp
fsubr
adc
lahf
jmp
pop
inc
push
push
and
and
lods
sub
cwtl
or
stos
lcall
lods
jmp
and
out
in
cmpsl
test
outsb
pushl
mov
mov
or
jmp
in
sbb
mov
jecxz
clc
idivl
inc
stc
jno
inc
sbb
into
cmp
adc
pop
test
jbe
jmp
add
pop
lods
jae
dec
push
cmp
mov
push
jle
fwait
sbb
ret
xlat
out
sahf
jmp
pusha
into
pop
mov
decl
push
loope
xchg
mov
loopne
pushf
jae
push
mov
sub
mov
jmp
push
or
ja
int
jmp
cmp
stc
jmp
dec
add
shr
cs
outsl
fcoml
mov
jae
clc
stc
mov
sbb
lret
and
stos
pop
sbb
pop
shll
add
or
add
xor
jmp
pop
dec
cwtl
imul
shll
and
cmpsb
lods
pop
sbb
xchg
scas
mov
popa
jmp
adc
pop
subb
jmp
rorl
subb
mov
lods
push
or
mov
fwait
jbe
lret
sbb
imul
mov
sub
pop
lods
inc
in
xchg
adc
out
out
sbb
push
inc
mov
out
xor
inc
cmp
call
jmp
lds
scas
test
mov
addl
in
jno
inc
xor
or
and
sahf
sbb
out
repz
xor
in
jne
jle
lock
jecxz
lcall
jg
xchg
or
jle
por
xor
loopne
scas
xor
fucomp
ljmp
popf
test
fwait
mov
ret
mov
xor
cmp
jo
inc
sub
sbb
mov
shrb
jae
mov
adc
mov
add
add
adc
lcall
push
les
rol
add
jo
mov
sahf
ret
inc
frstor
test
notb
sub
push
dec
sbb
jne
outsb
ret
rcrb
cmp
sub
icebp
hlt
frstor
add
pop
sub
xchg
dec
pop
es
in
lods
sti
js
stc
loope
jp
sbb
sub
stos
daa
jmp
add
dec
fcomi
out
enter
das
xchg
mov
jmp
pop
fcoms
cmp
jmp
int
pop
loop
and
int3
roll
jmp
jecxz
cmpsl
mov
adc
jmp
sbb
je
lods
mov
loop
sbb
out
jmp
lahf
mov
mov
push
int3
jmp
jle
mull
jl
or
jmp
add
fldl2e
out
jno
inc
pop
mov
loop
pop
lcall
jmp
mov
jno
popf
enter
std
out
repnz
cmp
push
out
fs
pop
outsl
adc
daa
jmp
or
jecxz
inc
cmp
jbe
sbbl
inc
pop
mov
data16
cli
mov
into
jmp
stos
or
lea
fstpl
bound
mov
adc
jmp
sbb
cmpsb
or
gs
sub
data16
sbb
dec
push
mov
mov
sub
iret
lods
cmp
clc
add
scas
sub
jb
sbb
dec
mov
test
and
adc
nop
push
xchg
andb
jmp
inc
sub
jle
mov
jmp
in
mov
jmp
mov
shr
pop
loop
aad
hlt
jge
das
adc
orl
clc
scas
repz
jmp
push
sbb
jl
shll
out
and
out
jns
sub
nop
ja
lods
inc
repz
jmp
pusha
xchg
stc
xlat
test
cltd
jmp
cmp
les
mov
imul
scas
jmp
pop
test
andl
mov
scas
adc
in
jmp
push
imul
ja
aam
jmp
dec
test
mov
jmp
test
xor
jmp
stos
adc
imul
and
xor
sbb
xchg
or
stos
jmp
adc
xor
iret
mov
push
mov
pop
out
xchg
add
popf
ds
sub
push
jl
fcmovnu
mov
es
nop
shlb
xlat
stos
jmp
test
push
lods
add
sahf
adc
shl
sub
lods
cmp
and
add
pop
sub
cvtps2pi
icebp
repnz
add
mov
rcll
jmp
cmc
mov
aam
sbb
jmp
rorl
adcb
inc
pop
fdivrl
xchg
shr
loope
fisttps
pop
push
jmp
sbb
lret
cld
mov
fwait
xchg
jmp
icebp
sub
and
mov
push
cmp
shll
jns
inc
adc
jmp
sub
push
fstpl
mov
lods
push
push
jnp
sti
adc
jae
scas
mov
pushf
jmp
lods
mov
cld
jmp
xor
cmpsb
ret
stos
xor
fistpll
and
jmp
add
loop
scas
icebp
cli
xor
xchg
jne
lods
shrl
dec
jmp
or
jb
push
push
inc
sub
lods
push
loope
xchg
pop
dec
jmp
push
push
jbe
add
cmp
adc
push
aaa
pop
dec
lahf
pusha
jmp
mov
scas
jmp
cli
adc
add
jl
out
xchg
mov
ds
aaa
jmp
xchg
push
fnstcw
lods
fucomp
pop
jmp
dec
sbb
mov
push
add
xor
and
inc
clc
cmpsl
cmpsb
pusha
sahf
jmp
jle
idivb
in
and
lahf
or
stc
repnz
test
add
sub
or
push
add
or
dec
cmp
sub
mov
sub
lods
repz
xchg
cltd
pop
xor
cli
jmp
dec
repz
shll
dec
sbb
mov
pop
setg
lods
mov
sub
ret
or
loopne
mov
xrelease
imul
fisttpll
jg
push
mov
lea
or
stos
mov
imull
lods
test
adc
adc
aas
jmp
dec
xchg
push
out
sbb
inc
outsl
jne
push
lods
pusha
add
lret
pop
or
push
or
cli
sub
sahf
jmp
adc
or
mov
inc
lods
mov
ret
stc
inc
mov
insb
icebp
mov
mov
sub
adc
loop
jmp
popf
je
or
pusha
jmp
or
dec
jmp
aam
pop
cli
jnp
or
pop
cmpsb
jae
fsubr
pop
and
mov
notl
xor
lods
sub
push
pop
fistpl
dec
cmp
sti
mov
mov
push
andl
mov
loop
xchg
jb
mov
sbb
cltd
jmp
add
aas
sbb
push
adc
inc
xchg
or
pop
in
xchg
mov
ret
mov
xchg
das
push
or
inc
mov
call
mov
aad
cmpxchg
insl
mov
inc
cmpsl
out
jmp
xor
pop
cs
xor
adc
jmp
fs
xchg
mov
jecxz
jne
or
mov
pushf
mov
inc
in
icebp
dec
sub
dec
jle
pop
adc
xchg
inc
lods
cli
mov
imul
sub
sbb
int
jmp
in
xchg
push
lods
fucomi
lahf
movsl
gs
repnz
divb
incl
xor
enter
popf
pop
mov
jmp
xchg
and
mov
mov
rolb
jbe
sbb
stc
fwait
jmp
adc
xchg
jae
mov
into
xor
push
nop
and
shr
add
add
out
iret
ds
test
lods
jno
push
sti
jbe
jmp
in
lock
mov
pop
jmp
test
sub
in
fst
into
out
adc
and
mov
in
cltd
or
nopl
cmp
fs
out
jmp
lods
add
bound
jns
inc
mov
xor
sbb
sbb
test
mov
xor
sbb
clc
mov
imul
add
movsl
test
cli
add
push
rcrl
push
jno
pop
cs
ret
jns
jg
sbb
aaa
sub
cli
push
movsb
pop
mov
xchg
xchg
inc
cmp
imul
sbb
push
cmp
xlat
add
inc
add
pop
xorl
push
dec
jb
mulb
inc
jmp
jbe
sahf
push
loope
je
jae
cwtl
stos
mov
cmp
jno
pop
dec
hlt
sbb
mov
cmc
repnz
outsl
mov
mov
int3
insl
lds
sub
cmp
dec
sbb
js
jmp
inc
scas
push
dec
mov
sub
ds
scas
xchg
arpl
cmp
cwtl
repz
aaa
pop
mov
ja
scas
stos
inc
push
imul
and
xlat
es
adc
sub
dec
jns
adc
mov
scas
lds
add
xchg
pop
pusha
jo
mov
stc
repz
popa
mov
scas
xchg
lea
sbb
addr16
and
cmp
aas
add
xchg
mov
je
out
push
sub
or
jmp
xor
in
inc
jns
orl
jmp
jo
aam
xor
xchg
jmp
xorl
and
fbld
sub
mov
popf
cmp
add
or
mov
mov
dec
jge
adc
data16
sub
stos
repnz
jp
jmp
enter
cmp
dec
xor
adc
sti
in
mov
mov
xor
repnz
and
cmp
icebp
mov
lea
std
stos
xchg
sbb
adc
pop
pop
jmp
repz
jo
xchg
mov
daa
pop
xchg
lods
dec
sbb
int3
nop
out
lods
rcr
sub
pop
xor
movsb
push
xor
icebp
jp
mov
jmp
popf
lret
mov
jmp
lea
test
out
hlt
jg
in
mov
rorl
push
iret
ss
push
std
lods
and
cltd
cmp
and
xorl
xor
xchg
pop
pop
fsubr
jb
cltd
push
nop
movsb
mov
add
push
loope
fldcw
xlat
mov
adc
push
pop
inc
pushf
pop
mov
call
jmp
push
sub
xor
push
iret
mov
jae
or
sub
negb
fwait
jmp
cmpb
imul
sub
int
stc
lds
sbb
cmp
lret
and
jmp
dec
pop
and
add
xlat
adcb
shr
sub
jge
xchg
or
xchg
js
jmp
xchg
out
mov
push
insb
pop
enter
int3
xor
xchg
outsb
sti
fstpl
pop
xchg
pop
lock
je
shrl
adc
cmp
jmp
dec
xor
pop
sub
mov
in
pop
scas
pop
pusha
inc
lret
sub
inc
cmp
add
stc
pop
push
packssdw
mov
pop
push
jge
je
pushf
adc
mov
inc
jmp
cltd
pop
das
js
jp
dec
xchg
lods
mov
jg
xor
imul
xor
es
dec
jmp
sbb
lods
and
gs
ret
lock
add
xchg
addb
dec
mov
out
dec
jmp
out
dec
pop
or
xchg
push
rcll
sti
and
mov
into
je
jne
sub
insb
bound
mov
xlat
xchg
mov
repz
jmp
movsb
xor
sub
pushf
inc
mov
xchg
xchg
jmp
push
xor
les
mov
das
adc
mull
jmp
mov
or
jmp
sahf
xchg
in
mov
icebp
mov
cmp
pop
les
jmp
sbb
lock
mov
dec
int3
or
and
outsb
fiaddl
cmp
inc
repz
or
jne
daa
sub
lods
or
hlt
shlb
lock
sub
inc
inc
cmp
ret
push
cmp
push
jge
fucomi
push
hlt
inc
pop
push
dec
adc
jns
or
fs
shlb
notl
fucomp
xchg
jl
jmp
mov
in
sub
out
cmp
jg
sub
jmp
test
cmp
jae
jmp
test
ljmp
mov
jmp
mov
scas
sub
cwtl
repz
or
das
dec
cmp
dec
or
push
movsl
pushf
jmp
cli
hlt
xchg
addb
andb
jmp
loope
push
aas
stc
mov
and
adc
sbb
push
jmp
loopne
test
dec
mov
mov
and
idivb
fsubrl
jmp
mov
cmp
lods
sub
xor
jne
clc
lods
jmp
and
inc
je
mov
dec
and
cmp
cwtl
push
call
jb
push
mov
jmp
scas
lcall
movsl
xor
mov
push
jb
sbb
xchg
mov
cmp
inc
loopne
testb
mov
mov
stc
jb
or
sbb
sbb
pop
repnz
pop
sahf
or
push
scas
fnsave
mov
sub
jmp
sti
fmull
mov
xchg
int
sarl
xlat
pop
pop
pushf
sub
addr16
jmp
mov
movl
sub
stos
mov
dec
sbb
xlat
mov
bound
int
push
jmp
sbb
fiaddl
mov
sub
jmp
insl
cltd
sbb
jmp
ds
pusha
push
or
mov
dec
sub
mov
mov
les
lock
cmovne
push
mov
adc
pop
rclb
lahf
and
test
fucomi
sbb
outsl
xchg
mov
sarb
push
dec
and
addb
or
iret
pop
jmp
loop
punpckhdq
and
imul
cld
push
sahf
cmc
jmp
inc
shrl
sub
adc
xor
stos
or
cld
lods
cwtl
jo
or
stos
lods
in
repnz
inc
xsavec
mov
mov
fsubrs
add
sub
xorl
sbb
cmp
sbb
cld
xor
xchg
es
hlt
adc
jns
pop
or
mov
xchg
in
enter
fildl
arpl
call
jnp
cwtl
andb
stos
scas
outsb
fisubl
sub
stc
imul
jo
xorl
incb
jl
paddq
cmc
fadds
andl
lret
mov
cmc
outsb
test
fistl
lods
jb
loopne
push
popa
test
adc
out
test
mov
or
enter
sbb
xor
jns
ja
dec
data16
call
xchg
fsubs
xchg
in
cwtl
mov
jmp
xchg
inc
mov
js
enter
push
fwait
imul
sarb
sti
or
stos
jmp
daa
iret
in
out
sub
mov
pop
xor
dec
aam
imul
add
jmp
dec
or
add
lret
icebp
add
cs
cwtl
sbb
push
push
ret
jmp
pop
neg
shll
xor
sahf
shrb
cmp
add
dec
xchg
fwait
out
in
jmp
imul
jp
gs
jl
repnz
or
rcl
jae
sub
pop
and
jmp
insb
xor
nop
lret
sub
jmp
ret
pop
pop
xchg
sbb
inc
lods
mov
out
ljmp
shl
and
cs
daa
dec
fld
out
mov
mov
pop
add
and
shrb
jmp
jb
iret
mov
aad
mov
adc
mov
jmp
out
cwtl
cld
adc
shrl
inc
fwait
cmp
clc
pop
daa
pop
adc
mov
or
inc
sbb
sub
lcall
xchg
adc
cld
lock
fs
push
mov
inc
outsb
jmp
test
aaa
in
jmp
inc
dec
pop
jns
jo
jmp
fbld
je
adc
jmp
jge
and
insl
call
push
es
or
fdivr
sbb
mov
aad
pop
mov
pop
xchg
cmc
jmp
sti
popf
lea
or
testl
mov
adc
icebp
imul
pop
sub
xchg
sub
ret
mov
push
jmp
rcll
jl
data16
adcl
lcall
lods
pop
cmpsl
sub
lds
adc
sbb
fimuls
jbe
mov
mov
subb
sbb
mov
lods
mov
out
sbb
xor
mov
por
fwait
push
add
jge
fsubr
inc
sbb
jmp
ja
test
jmp
pop
sbb
cmp
aas
jmp
and
jmp
lret
shlb
pusha
cmp
pop
mov
cmp
leave
jmp
adc
dec
es
pop
cmp
aaa
das
cltd
jmp
and
enter
dec
aam
lea
loope
lods
subl
mov
jno
std
lods
fadds
sbb
mov
pop
daa
dec
repz
sub
or
jmp
jbe
jp
mov
and
mov
scas
cmpsb
inc
mov
jmp
pop
imul
pusha
adc
inc
inc
dec
jmp
push
inc
repnz
add
int3
jmp
out
jbe
adc
sbb
cmc
pop
jae
test
push
add
in
or
dec
sbb
jecxz
xchg
aas
sub
or
jmp
shrl
lods
fcmovnu
cli
sub
sti
or
xor
dec
adc
jmp
std
xchg
fstl
mov
xchg
inc
fucomip
int
stos
push
mov
popf
scas
inc
out
cmp
out
arpl
jmp
lcall
sub
pop
jmp
popa
pusha
fistps
lret
roll
mov
and
stc
xor
fmuls
add
dec
adc
repnz
add
jnp
subb
popf
fmull
or
arpl
xchg
cmpsb
pop
jmp
insl
out
ds
pop
xor
jmp
adc
mov
fisubl
lahf
lret
ja
cs
movsl
push
add
inc
add
mov
pop
adc
jb
test
sti
lahf
cmp
mov
test
daa
lods
jmp
push
sbb
mov
outsb
sahf
ds
sub
lret
hlt
icebp
movsb
jmp
aam
imul
aad
jmp
out
mov
ret
cltd
repz
outsb
adc
jno
loop
push
cs
ret
push
mov
dec
sub
push
mov
daa
insb
push
sbb
xlat
into
cmpsb
lcall
fwait
inc
lock
cmpsl
pop
jmp
add
push
pop
jmp
mov
inc
push
jb
or
sti
mov
pop
das
loopne
inc
jmp
mov
fldenv
mov
sub
movsb
test
insb
xor
xchg
inc
ret
xor
fdivrl
addr16
nop
push
mov
in
in
jne
inc
jmp
ret
or
xor
mov
cmp
bound
sub
pop
outsb
fistl
ret
fidivs
pop
mov
mov
test
or
mov
ret
lcall
jmp
mov
call
jmp
xchg
lods
fs
insl
fldcw
cmp
stos
mov
sbb
outsl
jmp
sub
and
jle
xor
add
adc
ret
repz
jmp
lods
int
cmpsl
popa
cmpl
jb
and
and
mov
imul
sarb
cs
test
and
xor
xchg
cmpb
and
sub
nop
ret
or
loop
xchg
dec
movl
mov
ret
pop
jl
xchg
mov
pop
loopne
dec
jmp
cmp
fucomi
add
inc
xchg
sub
das
out
arpl
int
ljmp
inc
adc
or
loop
jmp
ret
in
push
mov
rolb
imul
fistpl
stos
mov
stos
jmp
and
add
sahf
orl
call
shrb
daa
jmp
xlat
lods
icebp
xchg
jmp
jecxz
mov
cld
jmp
pop
rolb
inc
xchg
mov
jl
adc
push
mov
stc
lods
push
jge
sarl
or
ss
mov
mov
js
mov
xor
shr
push
outsb
int
mov
les
lods
movsl
xor
xor
cmp
test
aam
ja
test
ljmp
lcall
lods
mov
and
sub
xor
sbb
daa
ret
ja
jmp
or
aam
xchg
sub
sbb
push
dec
jae
cmpsl
and
cmp
or
sti
clc
inc
int
jg
jmp
test
cwtl
sti
jmp
lahf
push
jbe
arpl
in
lea
pop
jno
mov
dec
call
jmp
cwtl
bound
and
dec
test
jo
pop
or
lods
insl
pop
dec
push
mov
loope
cmp
je
insb
or
dec
daa
pop
jmp
pop
adc
lods
fdivrl
sub
and
xor
inc
ja
mov
xchg
add
mov
jae
stos
add
decl
jmp
movsb
and
and
hlt
pop
inc
or
lods
sbb
pop
mov
ds
mov
ja
sub
gs
out
movsl
cmpsl
xchg
sub
add
jne
jmp
xlat
je
cmpsl
pop
int
jmp
or
cmp
jmp
test
ret
adcb
arpl
xchg
push
scas
jmp
or
add
pop
adc
cmc
std
jmp
mov
jmp
icebp
or
jmp
in
xor
lcall
pop
xor
xor
addr16
pop
test
fsubrp
icebp
incl
ret
lahf
sub
add
fwait
cmpsl
jbe
in
mov
adc
es
xor
jl
jb
out
fistl
pusha
sbb
jmp
lret
or
mov
test
hlt
add
add
mov
mov
jle
pop
xor
push
mov
jmp
iret
enter
addr16
sbb
jnp
jecxz
sub
dec
and
jmp
pop
jb
rorb
loope
push
xchg
sbb
test
xor
jmp
jo
jns
xchg
push
jmp
sti
xchg
inc
cwtl
mov
lret
sub
or
jmp
dec
jp
outsb
pusha
popa
jne
xor
jbe
jl
mov
or
mov
fistps
jecxz
push
jg
out
iret
sub
movsl
into
mov
stos
pop
push
loope
pop
jns
mov
sub
fsubrl
and
add
sub
add
leave
cmp
push
inc
mov
mov
jmp
mov
inc
les
xchg
jmp
stos
xor
jmp
xchg
test
or
ss
jo
or
inc
cli
jbe
inc
jmp
rcrl
sbb
mov
pop
insl
pop
sarl
xor
jmp
into
cmp
in
lret
out
sub
cmp
and
pop
jmp
sub
jmp
add
cmp
jle
sbb
dec
out
sub
flds
dec
push
outsb
xchg
and
fcom
scas
shll
jmp
je
mov
lods
popf
mov
enter
lahf
dec
jecxz
ljmp
mov
sub
or
jnp
dec
outsl
adc
insb
lods
jg
and
stos
stc
adc
ss
orb
cmp
xchg
in
mov
and
popf
add
adc
fsubs
lods
dec
cs
xchg
dec
xchg
xor
cmp
xchg
fwait
xor
add
add
jecxz
mov
mov
lds
lret
hlt
pop
adc
dec
sub
add
cmp
mov
data16
sbb
scas
inc
sahf
dec
stc
mov
or
jne
iret
sub
fcomps
sarl
add
mov
insl
imulb
push
jmp
int
call
sti
enter
push
pop
jge
daa
clc
sub
pop
mov
xchg
pop
fbld
mov
in
sbb
fsubl
nop
or
cmpsb
xchg
cs
out
ja
dec
or
push
adc
dec
pop
insl
ja
sti
jmp
push
xor
jmp
jle
les
add
cmp
adc
and
imul
lods
inc
xchg
ja
cs
and
jmp
add
mov
jmp
std
int3
sub
lods
cmpsl
xchg
out
mov
pop
jmp
out
cmpsb
jo
addr16
cmc
mov
popf
mov
xchg
out
sbb
mov
jmp
add
lret
sub
dec
jle
ds
dec
lods
shrl
aaa
cmp
push
test
or
xorb
add
jmp
push
ljmp
pop
jmp
mov
roll
stos
mov
mov
lret
pop
into
movsb
xor
dec
xor
icebp
int
notl
and
mov
fidivrs
and
xchg
stc
jecxz
jmp
mov
movsb
xchg
lret
jbe
mov
subl
xor
sub
into
cmp
stos
jmp
out
push
ljmp
lock
push
jmp
mov
in
cmp
scas
jo
cltd
xor
scas
xchg
mov
pusha
jmp
inc
push
sbb
push
aas
fldpi
mov
dec
out
enter
jmp
cs
jmp
and
xchg
out
cwtl
fidivl
les
lods
mov
das
fcomi
imul
xchg
jns
or
inc
sbb
adc
out
jmp
ret
stos
push
mov
arpl
fwait
jmp
out
mov
mov
enter
cmpsb
ljmp
jnp
xor
dec
movsb
ljmp
cltd
ret
shll
in
das
sti
in
pusha
shll
jmp
mov
xor
jmp
int3
cmp
ja
aad
xchg
push
shl
sahf
pop
test
arpl
jno
jmp
pop
filds
aad
stc
cli
push
mov
lcall
and
push
pop
or
mov
or
push
add
xchg
orb
outsb
pop
mov
hlt
pushl
add
js
mov
push
scas
push
test
ja
fs
in
xlat
jmp
mov
fstpl
scas
icebp
push
sahf
or
in
int3
shrb
sbb
mov
mov
scas
adc
jmp
test
pop
es
dec
lock
push
dec
cmp
movsl
clc
jmp
and
sub
into
cltd
shlb
pop
cmp
mov
jmp
pop
and
jb
sbb
sbb
mov
adc
and
int3
mov
jg
mov
pop
add
repnz
dec
sti
jne
out
notb
and
fsub
sbb
daa
add
movsb
mov
mov
jmp
fmull
inc
sahf
pop
das
lods
mov
movsl
fisubrs
lods
mov
sbb
ja
into
cs
jae
jmp
pop
lret
xchg
add
or
cmpsb
or
jmp
cmp
sbb
jne
push
imul
gs
sub
mov
and
push
imul
test
shlb
push
pop
lods
adcb
test
sbb
lds
ret
jmp
out
rcrl
xchg
inc
fnstenv
sub
xchg
shlb
pop
dec
ret
jmp
push
xlat
or
sbb
jmp
lods
sti
adc
lods
fisubrl
adc
jno
jmp
mov
push
dec
jmp
mov
sbb
jmp
ja
cli
sahf
test
shrb
adc
jbe
fisubs
pop
mov
and
push
xacquire
xchg
xchg
andb
add
push
sub
insl
icebp
and
cmpsb
lret
repnz
popa
pop
push
jmp
fldt
push
iret
xor
scas
jne
popf
call
push
jge
mov
inc
sub
jmp
into
jp
push
out
sbb
fnsave
add
sub
imul
test
aam
sbb
inc
and
scas
std
or
pop
das
jle
jmp
test
mov
imul
pop
push
pop
or
fistpll
jmp
add
xchg
jle
push
cwtl
scas
aas
int
daa
and
enter
adc
jmp
adc
outsb
inc
or
lcall
sahf
outsb
jp
fwait
cmp
lret
or
mov
inc
sbb
cmp
fimuls
sbb
xor
mov
outsb
test
mov
test
jmp
sbb
lods
bound
adc
add
fsubs
xchg
add
les
jmp
mov
push
dec
or
roll
jecxz
hlt
faddl
aaa
cli
outsl
out
ds
mov
sti
stc
sub
outsl
sub
dec
jmp
cmp
sub
mov
mov
icebp
repnz
jmp
pusha
sub
add
push
into
sub
repnz
dec
scas
mov
pop
scas
sub
sub
mov
dec
lahf
sahf
faddl
jmpw
mov
jmp
sti
out
jnp
xor
scas
cwtl
add
scas
add
cmp
pop
jmp
and
jp
xchg
jns
adc
scas
fimull
jmp
inc
negb
lods
or
push
in
or
mov
int3
mov
sbb
sti
cmp
scas
xchg
lahf
outsb
sub
jbe
mov
cltd
or
fisttpl
dec
jecxz
jae
mov
addr16
repz
iret
leave
aaa
push
loope
and
mov
loope
pop
lods
sub
adc
test
in
ret
mov
shlb
jmp
mov
loope
push
jecxz
jmp
push
mov
ficoms
fs
cmpsl
and
jle
xchg
push
outsb
popf
lods
dec
arpl
or
stos
and
jge
lods
xor
aaa
cmpsl
mov
sub
jmp
xchg
xorb
jl
lods
testb
das
mov
lods
push
icebp
cmp
push
andb
int
scas
sub
pop
or
daa
and
jmp
adc
das
fcmove
test
lock
lahf
loope
jmp
out
cs
push
cmp
stc
rcrb
scas
movsl
mov
and
in
jmp
mov
or
jp
jl
or
push
pop
sahf
xchg
cmp
outsl
es
dec
jmp
inc
push
inc
jmp
xchg
or
jmp
iret
fnstsw
mov
cld
add
mov
sub
sahf
jae
xchg
fpatan
push
les
mov
out
int3
mov
sub
fisubs
jmp
sbb
jmp
cmp
add
ret
lods
inc
push
sbb
bound
std
lods
insb
mov
scas
pop
daa
xor
sbb
mov
ret
in
add
sub
rcrl
incl
dec
mov
call
sub
inc
add
in
adc
jns
fisubl
jmp
es
pop
je
inc
and
cmpsl
fstpt
push
sub
jbe
call
jecxz
filds
jmp
outsl
cli
stos
pop
aas
aaa
lods
jmp
push
xlat
sub
loop
jmp
mov
sahf
imul
stos
fdivrl
jae
pop
in
sbb
mov
push
and
es
psllq
push
movsl
shr
cmp
enter
mov
sbb
repnz
pop
test
movsb
scas
sbb
in
movsl
shrl
adc
pop
mov
sub
or
mov
and
mov
jno
fdivrs
jne
adc
shr
andl
cmp
push
imul
cmp
scas
or
mov
mov
add
jbe
and
add
repz
stos
adc
dec
adc
mov
mov
jle
jg
add
jns
bswap
cmpsl
pop
pop
jmp
lods
push
pop
cmp
dec
lds
push
mov
cmpl
xor
xor
gs
sub
clc
test
push
and
cli
jmp
and
cmp
dec
xchg
xor
sbb
mov
mov
popf
add
std
daa
dec
fs
adc
add
int
xchg
lea
push
jmp
out
insl
loope
test
push
outsb
roll
and
mov
xor
enter
jl
sub
sub
mov
and
xchg
jg
pushf
mov
xor
ret
loopne
jno
ds
and
je
es
adc
sbb
dec
lea
arpl
mov
cmp
lock
inc
rorb
sbb
pop
pushl
jge
jno
pop
mov
out
push
dec
roll
xor
adc
push
jmp
sbb
ja
jmp
mov
pop
pop
aas
cmc
jle
dec
pop
in
idiv
outsl
mov
out
sbb
divl
xchg
inc
push
in
and
or
lahf
gs
sbb
push
jmp
loope
mov
pop
sub
add
lods
xor
adc
add
aaa
jmp
push
arpl
loope
or
in
jle
test
or
push
jl
stc
ret
jb
jmp
mov
loop
jmp
out
into
popa
test
sbb
push
or
fistps
lcall
jmp
xor
scas
jns
mov
xchg
adcb
into
lcall
mov
es
dec
aam
outsb
push
scas
popf
adcl
fwait
cmp
int
cs
and
lahf
setl
aam
jmp
shl
ror
arpl
lods
int
xchg
orl
sbb
adc
scas
inc
xchg
sbb
pusha
loopne
out
dec
jmp
shll
dec
jmp
push
mov
jmp
in
mov
cmp
insb
xchg
sbb
in
popf
inc
leave
push
sbb
enter
lret
jg
ljmp
sub
or
sbb
fadd
pop
je
jmp
loope
pop
cwtl
jno
mov
adc
jmp
rep
push
xchg
mov
push
cmp
nop
fs
rclb
sahf
sub
mov
add
jecxz
sbb
xlat
jmp
pop
pop
out
scas
xchg
popa
inc
jmp
or
leave
jmp
jmp
lret
stos
xor
mov
mov
mov
test
xchg
jmp
je
in
stos
mov
lods
mov
xchg
or
adc
cli
dec
scas
daa
push
jmp
mov
sbb
aad
cmp
movsb
dec
out
ljmp
lock
push
adc
cmc
sub
ds
sbb
test
ret
and
jmp
xchg
or
cwtl
mov
xorl
subb
popf
jne
lret
xchg
jmp
cs
xor
jmp
sub
insl
jmp
cmpsb
xlat
fucomi
cld
imul
inc
std
movsl
jmp
sub
mov
xchg
mov
lock
fs
jmp
pop
test
jg
in
pop
fwait
ja
pusha
jl
push
adc
adc
aaa
jmp
jge
rorb
hlt
lods
push
scas
pop
cwtl
cld
sbb
movsb
sbb
sub
rclb
es
je
jmp
rcll
xor
scas
mov
js
jg
popa
mov
das
mov
fisubrl
int3
push
xor
jbe
aam
add
dec
loop
jmp
pop
dec
pop
cwtl
adc
jo
call
sub
cmp
mov
and
sti
es
pop
imul
jl
sbb
hlt
push
xchg
rorl
push
out
mov
cs
fucomp
jle
fs
pop
jmp
mov
inc
push
mov
cs
pop
rcrb
jmp
push
xor
test
or
jmp
out
xorl
sbb
lea
add
or
mul
outsb
mov
insb
mov
shll
xchg
mov
arpl
es
and
cmpsl
mov
sbb
pop
aad
fmull
or
cwtl
enter
outsb
jmp
add
and
stos
aas
jbe
iret
sbb
or
or
jmp
xchg
jge
inc
test
add
jmp
lcall
xchg
ss
lods
imul
cld
shr
push
jmp
cmp
nop
insb
cmp
cwtl
jbe
int3
dec
aas
stos
jns
icebp
or
loop
cmpsb
iret
das
jmp
mov
lds
imul
movsb
fs
sbb
jmp
fistpll
scas
xchg
adc
mov
push
push
jne
mov
or
outsb
imul
inc
gs
jle
xchg
jmp
dec
or
test
jmp
adc
push
sbb
nop
jno
adc
xor
pop
inc
and
fwait
adc
jo
jmp
mov
or
xor
movsl
push
pop
jmp
dec
adc
jmp
mov
insb
mov
mov
adc
dec
jge
pop
sub
leave
jmp
push
xchg
fwait
sub
arpl
inc
xor
xchg
ret
or
push
ljmp
mov
jmp
loop
cltd
dec
push
pop
jle
jbe
lret
lcall
outsb
mov
into
aad
mov
pop
add
push
xchg
jmp
lcall
mov
mov
aam
push
mov
jmp
cmpsb
mov
jmp
cmc
ljmp
pop
jmp
iret
sarl
shrd
sti
jb
hlt
xchg
cmp
or
cltd
in
xchg
out
sbb
leave
aas
jmp
mov
sbb
pop
imul
mov
and
push
cmpsl
jp
insl
lods
hlt
or
test
jmp
add
or
pushl
inc
sub
imul
insl
lret
xchg
data16
pusha
out
mov
lock
xchg
scas
ljmp
in
sub
mov
psubb
sbb
push
or
loop
orl
xor
icebp
cwtl
pop
mov
jmp
mov
cmpsl
mov
pop
in
fpatan
jmp
xor
mov
cmp
xor
jae
ror
dec
sub
pop
lods
out
in
mov
sti
out
insl
movsl
jmp
addb
mov
jmp
gs
push
ljmp
jmp
mov
jmp
shll
pop
add
pop
pop
scas
inc
fdivrs
xlat
jmp
xor
mov
shrl
or
jmp
bound
imulb
mov
addr16
cld
out
xchg
jmp
adc
push
dec
popa
dec
int3
mov
xlat
ljmp
xchg
mov
mov
mov
mov
into
jb
push
jmp
imul
jmp
jle
xchg
loop
xchg
fnstenv
subb
lock
and
loope
in
je
outsb
popa
shrl
dec
pop
sub
mov
int
shll
outsl
inc
jmp
jno
dec
ja
ret
test
push
cmp
sbb
adc
lea
lods
jecxz
or
and
and
adc
cmp
xor
enter
dec
adc
lret
lods
adc
ret
mov
imul
xor
adc
lock
jmp
or
xorl
lods
scas
xchg
mov
aas
out
scas
stos
sbb
loope
and
das
std
jmp
add
aad
jmp
cmp
mov
stos
push
push
add
xor
adc
pushf
or
and
scas
and
jbe
dec
mov
outsb
test
mov
movsl
out
jne
mov
jmp
jmp
pop
jmp
cli
cmp
pop
lods
xor
sub
pop
inc
xchg
jmp
movsl
mov
jmp
push
aaa
icebp
xor
and
out
loope
xchg
mov
inc
rorb
and
sti
push
mov
add
mov
mov
test
repnz
into
aas
pop
les
mov
insb
adc
push
push
pop
jmp
in
sub
mov
add
popa
sbb
adc
dec
mov
inc
xor
mov
push
outsl
jmp
dec
jb
lods
sub
jecxz
ffree
call
into
jmp
mov
mov
insl
in
jno
sub
sub
push
in
pop
fwait
sbb
lods
mov
jne
adc
push
mov
pop
and
push
mov
or
jle
or
jmp
out
pop
in
pop
jmp
jmp
inc
mov
movq
imul
mov
sub
jmp
add
sti
push
adc
jmp
pusha
cmp
xor
add
orb
xchg
jmp
mov
adcb
push
add
leave
icebp
push
sbb
and
sbb
push
cmp
push
sbb
int
cmp
popf
mov
ret
or
jmp
jmp
or
inc
daa
rcrl
and
jnp
lods
sbb
ds
sbb
scas
out
push
stos
jmp
subl
dec
mov
inc
dec
dec
sti
mov
cmp
add
stos
jmp
in
xor
and
jp
dec
adc
jl
lods
test
xor
shll
adc
jmp
int
inc
jne
inc
movsl
mov
imul
xchg
jmp
out
cmp
push
jb
nop
cld
repnz
scas
and
jmp
push
mov
push
jle
gs
add
jmp
sub
es
jmp
aaa
cli
stc
and
or
repnz
aam
dec
cmc
jmp
add
pop
or
inc
cmp
mov
dec
gs
adc
pop
dec
push
sbb
jle
pop
movsb
cmp
pop
fs
jmp
and
push
mov
decl
dec
leave
lock
repz
inc
cmp
xchg
push
mov
faddl
xor
jmp
jns
lods
cmpsb
fdivs
mov
ficompl
jmp
add
stc
popa
cmp
jmp
scas
loope
jg
dec
cmp
push
enter
lahf
sbb
jmp
jno
outsb
movsb
push
adc
xor
mov
inc
or
xlat
loop
iret
jmp
add
jae
mov
push
jo
sahf
jne
pop
dec
pusha
in
dec
leave
int
icebp
and
sub
jle
dec
jae
or
sbb
jo
mov
jp
test
outsb
clc
jmp
pop
loope
or
mov
lods
mov
scas
and
sbb
push
mov
je
inc
movsl
jp
fucomp
daa
dec
mov
cmpsl
test
shrl
cmc
or
dec
cmp
push
jmp
add
pop
mov
push
stos
adc
insb
scas
dec
insl
push
cmp
mov
ret
and
test
clc
sbb
inc
jmp
cmp
out
mov
out
push
pop
std
loope
push
adc
cs
jne
fnstcw
hlt
js
sbb
xor
lods
fiadds
in
fists
int
cltd
mov
lods
mov
mov
loopne
mov
cmp
pop
jmp
into
aam
and
test
imul
pop
cmc
scas
xchg
clc
or
xchg
push
repz
lahf
sub
inc
push
andb
je
pop
lret
ljmp
popa
jl
dec
outsb
or
xorb
xchg
mov
and
mov
inc
pop
fadds
movsl
sub
jo
fwait
cmc
inc
push
fst
daa
xor
pusha
jmp
fs
add
and
dec
xchg
jmp
mov
inc
jmp
and
sbbl
jnp
pop
loop
test
push
pop
mov
mov
dec
clc
inc
sbb
pop
pushl
lea
cli
inc
sub
sahf
enter
jnp
lret
mov
dec
mov
lods
data16
roll
add
push
es
jmp
aam
xor
cmp
cs
mov
repz
aad
pusha
fistps
jmp
cld
add
pop
outsb
jecxz
ret
inc
add
xor
ljmp
sbb
call
hlt
mov
push
mov
jbe
subl
mov
jmp
insl
outsl
mov
lods
movsl
shrb
mov
scas
stos
pop
or
sti
in
cmc
imul
in
sahf
std
jmp
mov
mov
adc
rcrl
and
push
adc
mov
xchg
xor
inc
stc
xchg
jmp
lea
push
mov
and
int
jns
mov
popa
pop
lret
cmpsl
rorl
popf
sub
jmp
mov
xor
jo
lret
sub
cmc
jg
sbb
cmpsb
lcall
mov
sub
lret
jae
cltd
out
or
pop
lods
dec
jge
jp
mov
xor
push
sub
mov
mov
outsl
jmp
jae
popa
push
dec
push
and
mov
pcmpgtb
lods
pop
mov
sti
adc
inc
xor
fldt
or
mov
jmp
xorb
mov
push
jmp
in
or
push
push
pop
jmp
cmp
in
pusha
out
jecxz
and
cmp
and
aaa
int3
pop
jb
push
sbb
lea
or
add
sub
sbbb
sbb
jmp
fnstcw
jbe
lods
cld
and
jmp
hlt
push
out
inc
bound
adc
dec
aam
xorb
ror
cwtl
dec
loopne
fmuls
es
xorb
outsl
cs
cli
mov
jmp
mov
jmp
ljmp
ja
sub
mov
and
mov
loopne
jmp
dec
addr16
jmp
enter
and
jmp
mulb
pop
mov
out
jmp
stos
mov
xor
cmp
clc
ja
add
sub
xor
lds
mov
sbb
mov
je
scas
pop
jp
jmp
arpl
ss
or
outsb
xor
pop
mov
xchg
dec
lods
inc
hlt
add
sub
shlb
inc
daa
jb
jg
lods
cmp
push
dec
ja
lods
addl
xorb
sub
into
and
jmp
insb
sub
mov
lret
cmp
jmp
in
xor
jmp
pop
jmp
mov
pop
sub
add
jl
jb
cmp
xchg
rclb
lret
iret
ja
in
mov
outsl
jecxz
pop
bnd
adc
inc
aaa
add
jmp
push
pushf
sub
or
and
cmp
movsb
aas
fnsetpm(287
scas
insb
adc
dec
pop
jmp
xchg
jmp
add
stc
mov
jbe
dec
mov
pop
fnsave
jne
mov
fsubrs
jb
xchg
jmp
or
jmp
sub
jle
pop
mov
cmc
lods
mov
push
cld
in
adc
ljmp
xor
pop
sahf
lret
enter
and
or
adc
popa
mov
fisttps
lods
push
bound
in
mov
btc
mov
cld
pop
ja
jns
pop
add
jmp
jge
imul
scas
or
movsb
imul
mov
lds
sbb
inc
or
mov
in
test
xorl
subb
int3
xor
nop
cmc
pushf
dec
shl
pop
clc
sub
es
xchg
in
push
pop
pop
faddl
scas
jnp
add
fnstsw
or
and
push
mov
inc
jmp
inc
rcrl
lods
setge
jmp
fcmove
cmp
lock
in
jno
mull
movsl
in
js
lahf
test
sub
imul
inc
test
int3
ret
fsubrl
sbb
mov
adc
out
mov
js
rorb
pop
mov
dec
jmp
dec
pop
mov
pop
fwait
push
scas
mov
fiaddl
mov
xor
rcrb
or
dec
lea
decl
in
xor
sbb
in
sub
jnp
or
adc
subl
jmp
mov
mov
fnstcw
push
ficompl
aaa
jo
imul
int
sbbb
mov
fadd
mov
dec
jnp
imul
xor
sub
or
arpl
pop
xchg
fs
ljmp
rorl
dec
stos
sub
cmpsb
or
sbb
fnstenv
lret
jmp
add
cmp
imul
or
iretw
push
cltd
mov
or
jo
insb
push
mov
sbb
in
sub
sti
test
jnp
cmp
test
js
std
lahf
arpl
test
cmpl
aad
mov
stos
insl
pop
ds
insb
sbb
mov
loope
out
xor
cmp
in
and
mov
jmp
lock
adc
sub
ret
lods
mov
daa
xlat
addr16
push
cli
call
mov
sbb
pushf
or
ja
imul
rcrl
popf
pop
dec
mov
jp
or
into
mov
scas
ret
aad
in
nop
sbb
push
ficoml
jg
jno
jb
or
jmp
add
xor
pop
jmp
mov
stc
adc
imul
or
enter
inc
xlat
cmpsl
dec
xor
pop
add
sbb
int3
push
sti
call
add
in
mov
mov
faddl
loop
jmp
inc
dec
cmpsl
pop
sbb
jmp
call
cmp
sti
or
and
cmpsb
iret
int
leave
jmp
neg
pop
sbb
adc
call
or
sbb
adc
stos
jmp
or
push
cmpsl
pop
outsl
or
push
sbbl
jmp
mov
dec
mov
cld
add
cs
adc
daa
xlat
je
jmp
or
pop
test
inc
xchg
scas
xor
in
and
mov
jmp
sub
lods
jmp
movsb
xchg
ficoms
jmp
fucomp
add
nop
adc
sub
dec
movsl
mov
sbb
out
fldt
jnp
xlat
out
ja
inc
inc
test
dec
xor
rcrb
adc
lcall
std
outsb
add
push
shl
jno
cltd
pop
jne
fsubrl
fisttpll
or
jns
mov
push
push
fadds
mov
add
ss
mov
push
mov
mov
jmp
pop
gs
add
jno
jmp
mov
jae
in
stos
sbb
jns,pt
mov
mov
push
les
sti
inc
or
call
faddl
jo
leave
insl
xchg
jmp
stos
xchg
sbb
call
loopne
jne
fisttpll
loope
js
es
lcall
jp
adc
jnp
pop
scas
stc
movl
and
into
add
xchg
ja
push
pop
mov
dec
cmp
iret
jmp
movsl
inc
jp
stc
cmpsb
push
jmp
mov
and
dec
lock
cltd
addr16
loopne
popf
jge
mov
pop
jmp
mov
hlt
cli
sbb
daa
loopne
mov
sub
cmp
lret
xchg
mov
add
cmpl
pop
pop
xor
jmp
xor
cmc
cmp
lret
xchg
lods
int3
cmpsb
cmp
rcl
je
scas
ret
dec
and
xchg
aas
imul
insl
mov
fmull
sbb
sbb
sbb
xor
push
pop
push
dec
subl
pop
jecxz
dec
addr16
repnz
in
xor
mov
int
sti
aaa
mov
inc
aas
sti
jmp
xchg
aam
mov
movsl
jae
mov
lds
rclb
sbb
jmp
jge
push
popf
rolb
dec
xor
jno
jmp
mov
movsl
inc
addr16
test
cltd
sbb
stos
pusha
jmp
ret
add
jg
int
jmp
xor
out
cmpsl
xchg
mov
fiadds
jmp
mulb
cmpsl
jmp
sbb
movsl
jo
loop
jmp
push
inc
nop
cs
out
movsb
das
clc
lea
mov
stc
xchg
roll
adcl
mov
xchg
push
sbb
enter
adc
or
fdivrl
in
xchg
lock
jp
test
mov
enter
int
cmpsb
jmp
push
xchg
mov
jmp
or
cltd
jmp
nop
fwait
call
lods
stos
sbb
daa
pop
and
in
inc
mov
xor
icebp
mov
test
xchg
dec
data16
outsb
or
fsubl
dec
in
lods
dec
int
pop
fwait
push
or
pop
jmp
push
push
mov
lret
sub
pop
fabs
vpsubusw
mov
dec
dec
inc
fmuls
loopne
jmp
lods
insb
rcrl
std
daa
out
test
pop
iret
sbb
sub
xchg
push
inc
sub
xchg
ret
push
push
rolb
sub
fucomip
lea
imul
add
push
pop
lods
jecxz
cmpsl
push
pop
out
xchg
jmp
mov
xchg
sub
inc
jmp
jmp
add
into
pop
xor
lods
sbb
push
adc
xor
outsl
push
test
inc
imul
jle
in
out
sti
mov
push
lods
out
xchg
mov
aas
xor
mov
mov
sub
inc
ljmp
sub
and
jmp
insb
in
add
jp
push
push
jne
subl
jns
rclb
xor
jge
and
add
lret
xchg
mov
movsl
mov
fcoms
xchg
fists
jmp
pop
add
dec
cmp
jmp
out
in
and
sub
sub
movsl
mov
adc
jmp
push
out
adc
mov
jmp
add
jnp
and
sbb
cmpsb
sahf
lods
mov
dec
mov
sub
mov
int
mov
jp
mov
inc
push
mov
aad
inc
loopne
and
mov
mov
insl
mov
and
jge
jmp
leave
decb
es
lret
fwait
pop
dec
jmp
jo
je
mov
mov
inc
xchg
sbb
outsl
idiv
mov
lock
addl
inc
mov
cmp
outsl
xchg
repz
xchg
cmc
jmp
mov
mov
jmp
cmp
dec
mov
ret
mov
sub
negl
leave
fildll
in
lock
testb
ss
mov
mov
lret
out
aam
lahf
mov
mov
jmp
sub
shr
xor
sub
out
jmp
xor
incl
add
sbb
jmp
fs
rclb
lods
inc
std
or
mov
test
jl
push
and
cld
jmp
jmp
jmp
fnsave
stos
je
or
or
dec
pop
aam
push
sub
xor
pusha
adc
mov
or
xchg
mov
test
jecxz
test
jle
jmp
imul
jb
adc
stos
fldl
aaa
xor
cwtl
imul
cli
dec
insl
sbb
sub
jns
inc
cld
jl
jle
cmp
std
push
pop
fucomi
jo
out
sbbb
jmp
push
xchg
sbb
mov
dec
jmp
idiv
or
cmc
or
jno
xor
xor
stc
inc
lahf
jmp
subb
rclb
out
iret
loopne
sub
xor
jae
jge
or
stos
push
jecxz
in
hlt
adc
pop
cmpsl
ret
jmp
ss
scas
xchg
mov
inc
int
or
lea
gs
mov
in
jmp
push
dec
mov
inc
or
in
cmp
jmp
sti
adc
std
movsb
enter
jl
mov
mov
add
out
mov
cmc
jmp
mov
push
cmpsl
inc
fwait
nop
jmp
mov
inc
shrb
jmp
mov
xor
cmp
jmp
icebp
rorl
cmp
testl
cltd
jmp
test
xorb
scas
jmp
sarl
scas
mov
adc
or
sarl
mov
aad
sbb
mov
out
push
jmp
adc
ficomps
inc
ds
cwtl
add
mov
mov
repz
fldcw
packuswb
adc
scas
scas
or
jb
movsl
fxch
int
or
jns
std
xchg
cmp
jp
xor
cwtl
cmp
push
cmp
popa
cld
sub
or
add
adc
jmp
data16
lea
jp
mov
or
clc
cmp
daa
ret
scas
or
imul
dec
cmp
mov
and
jmp
idivb
xchg
mov
gs
movsb
pusha
daa
and
rep
push
mov
jnp
add
jnp
jo
mov
insb
sub
or
jle
cmp
les
mov
jns
std
push
lcall
ja
pop
lods
pop
jle
push
pop
mov
cmp
and
push
xchg
or
xchg
jmp
sub
jb
inc
jmp
pop
push
ret
jmp
jnp
rcll
inc
xor
pop
fstps
lret
xchg
push
lods
repz
jb
enter
aas
push
ljmp
xchg
xlat
stos
aam
add
pop
mov
imul
dec
jmp
rol
or
or
jmp
fs
jno
lods
ret
jecxz
fwait
sbb
pop
lcall
jmp
loope
jno
pop
ss
sbb
push
sbb
pushf
xchg
inc
cmp
or
xor
inc
mov
jmp
test
lds
nop
dec
outsb
sahf
stos
js
ljmp
adc
fwait
cmpsb
insl
pop
mov
aam
xor
cmpsb
notl
imul
jmp
pop
int
xchg
xchg
mov
rcl
push
xor
lods
dec
push
mov
sbb
add
clc
jno
mov
paddd
jmp
xchg
scas
xor
loope
or
mov
push
or
sub
mov
jl
adcl
mov
addl
dec
sub
mov
leave
test
stos
adc
sub
cs
std
jmp
mov
mov
out
or
cmp
xor
leave
jns
ss
aad
fildl
jmp
mov
mov
jno
mov
jb
fisttpl
dec
and
lret
orl
jle
or
lret
push
pop
jne
sbb
sub
lret
and
lahf
stos
out
cmp
pop
out
jmp
sub
mov
test
mov
popf
clc
adc
and
dec
add
imul
dec
out
mov
add
ud0
or
lods
jg
push
jns
mov
loop
aad
lock
sub
mov
and
inc
sbb
push
dec
xchg
jmp
mov
xchg
daa
es
pop
jns
cwtl
jmp
push
mov
jmp
in
sbb
outsl
pusha
pop
jmp
cwtl
adcl
sar
inc
scas
push
mov
repz
adc
jmp
test
inc
scas
idivl
xor
mov
jmp
xchg
pop
pusha
les
inc
in
adc
cmp
sti
sbb
inc
jmp
iret
or
push
inc
test
cmp
shll
fiadds
mov
inc
mov
sbb
sub
lods
pop
jmp
loopne
lret
ja
xor
in
scas
mov
mov
imul
jmp
out
jmp
cli
roll
pushf
cs
and
jle
push
jmp
scas
daa
jbe
and
pop
repnz
aad
jmp
sbb
mov
xchg
rcrl
push
mov
mov
lret
jo
mov
jmp
int3
shll
push
testl
cmp
xor
lahf
data16
stc
shlb
push
dec
in
dec
aam
xchg
sbb
mov
data16
sbb
and
fs
loope
mov
push
jmp
pop
xor
cmpsb
push
add
int3
sbb
call
std
cltd
mov
fsubr
push
xchg
and
fwait
pushf
rorl
jb
std
sbb
mov
xchg
test
sbb
dec
aaa
jmp
jge
bound
cld
test
pop
xchg
ss
mov
int
dec
dec
jmp
fwait
test
loop
nop
jmp
lods
popf
and
mov
in
in
loope
jmp
rcrl
mov
jecxz
or
jmp
sbb
lods
test
push
sbb
or
pusha
add
push
iret
mov
push
dec
push
repnz
or
sahf
cmpsb
cwtl
mov
xor
inc
lahf
jmp
dec
jnp
cmp
cld
stc
jmp
xchg
outsb
xchg
sbb
xchg
add
cmp
sub
adc
xor
pop
inc
fdivs
or
std
sbb
cwtl
mulb
lahf
mov
push
repnz
icebp
dec
std
jp
jmp
sub
enter
mov
mov
lahf
mov
mov
pop
call
cli
cltd
dec
movsb
out
lods
lahf
adcb
repnz
xchg
mov
scas
lcall
adc
loop
jmp
das
in
pop
rorb
flds
ret
lret
or
xlat
pop
mov
in
ficoms
jno
pop
hlt
mov
or
fidivrl
aaa
icebp
jmp
sub
insb
gs
mov
mov
xlat
jmp
mov
cmp
movsl
data16
pop
pop
std
xchg
push
int
dec
popf
lods
shll
addb
jbe
mov
loope
sbb
xor
imul
imul
jmp
imulb
or
lock
out
adc
dec
hlt
pop
cmpsb
jbe
das
jmp
int
sub
push
cmp
mov
daa
mov
fcoml
repz
mov
dec
or
sub
scas
jae
push
aas
arpl
mov
mov
cmpsb
or
xor
mov
push
and
push
sti
es
movsb
jmp
insb
pop
ss
xchg
outsb
pop
mov
lret
jmp
js
dec
lock
insb
test
loop
jmp
jmp
cmpb
into
sbb
aam
sbb
mov
sub
nop
sysexit
inc
lods
xchg
inc
outsl
icebp
dec
push
jmp
mov
and
jo
add
jns
xor
jmp
insl
inc
jne
rol
dec
lods
rorl
jb
rclb
cmp
push
adc
pop
pop
jmp
repz
cmp
mov
jne
in
dec
dec
push
scas
and
inc
dec
shrd
popf
xor
bnd
aam
jg
jmp
sbbl
jmp
hlt
fsubl
mov
mov
lret
cmpsl
fs
push
mov
push
mov
jae
lret
sub
xlat
cli
pop
sub
mov
outsb
dec
lcall
jle
jmp
mov
fwait
rcr
mov
push
cld
fprem
js
lods
ljmp
and
adc
inc
cmp
test
dec
mov
pop
xor
xor
sub
dec
std
jmp
jle
push
xor
fsubs
cmp
adc
push
ret
mov
ds
decb
sbb
inc
mov
test
imul
repz
jge
dec
lret
repnz
or
inc
imul
cli
movsb
dec
ljmp
aaa
addr16
sub
sub
lahf
test
outsb
add
stc
clc
xlat
sub
pop
mov
sarl
sub
xor
sti
xchg
fcom
mov
fldenv
jmp
in
in
push
jle
rorl
mov
jge
or
mulb
sub
cwtl
outsl
aam
mov
jecxz
sbbb
jle
cmp
aam
imul
lods
add
dec
cli
fimull
add
push
cs
lret
out
sbb
jge
dec
push
push
gs
fdivs
cmp
jmp
adc
jns
lahf
sbb
sti
aam
and
jb
stc
mov
divb
pop
cmp
jmp
cmp
push
or
in
subl
mov
pop
inc
scas
jmp
stc
cmp
mov
mov
movsl
int
mov
cwtl
jge
push
dec
pop
lods
repnz
in
cwtl
negl
orb
ss
addr16
lods
cmpsb
stos
scas
fnstenv
mov
ss
lods
inc
jmp
insb
scas
fs
jb
sub
mov
push
push
xchg
sub
fiadds
sub
cmc
repz
push
dec
in
dec
inc
icebp
dec
fcmove
push
out
mov
adc
and
add
je
jae
or
jmp
jbe
mov
lods
adc
push
outsb
sub
jmp
mov
repnz
mov
fsubrl
mov
scas
adc
push
mov
jmp
roll
sbb
add
aam
adcl
sub
int
mov
aas
pop
mov
or
inc
lea
cmp
fistl
mov
std
dec
fadds
jns
and
push
scas
inc
or
sub
jb
jecxz
rcll
xor
cwtl
nop
push
std
jns
cli
rorl
dec
scas
sub
aam
mov
xor
stos
pop
xor
fucomi
and
imul
fnstsw
add
sub
call
mov
push
popf
jmp
jo
fdivs
mov
lds
add
iret
fwait
dec
test
inc
inc
test
stos
jmp
repz
out
sub
xor
xchg
push
sbb
dec
adc
xor
mov
fs
push
int3
jmp
outsl
addr16
movsl
inc
movsb
mov
scas
outsb
pop
xchg
fs
adc
and
push
shl
inc
mov
add
sti
in
mov
xor
jmp
adc
test
sbb
clc
mov
in
pop
mov
cli
or
mov
add
pop
cmp
leave
ss
xchg
subl
out
frstor
xchg
outsb
cmp
dec
and
insl
daa
mov
in
sub
inc
fdivl
scas
adc
inc
or
mov
and
mov
in
push
test
lods
sbb
push
adc
movsb
xor
pop
or
lods
adc
or
jp
out
jmp
outsb
adc
lods
ljmp
repz
outsb
xlat
and
lods
outsl
test
dec
and
mov
mov
aad
xor
push
dec
sub
push
pop
mov
sub
aaa
rolb
loopne
cmpsl
pop
lods
push
cmp
and
dec
daa
mov
movsb
xor
mov
jae
xor
add
and
jmp
jle
push
push
jns
jmp
inc
adc
mov
jg
mov
dec
mov
jnp
mov
jge
shl
cmp
add
inc
loopne
jmp
xchg
push
lret
xlat
lods
int
stc
pop
loop
sub
jmp
bound
fbld
jo
mov
pop
test
cli
outsl
daa
mov
add
pushf
aas
jb
lret
jle
addr16
sub
mov
push
and
mov
fsubr
mov
jecxz
cltd
popa
xor
sbb
shl
inc
aad
out
or
jmp
loope
faddp
jmp
unpckhps
push
test
jmp
cmp
out
push
ljmp
in
dec
inc
dec
sbb
je
adc
idiv
popl
scas
fildl
xorl
mov
adc
fcmovnb
aam
or
inc
cld
mov
ds
pop
xchg
aaa
jb
jmp
dec
and
lods
test
icebp
inc
loop
push
repnz
repz
jmp
shll
jge
pop
inc
jmp
leave
outsb
sahf
int
sbb
jmp
clc
lds
divl
test
jle
movsb
sub
in
inc
fcompl
sbb
jmp
lds
xor
xor
mov
dec
sub
shl
arpl
movsl
cmp
int3
cmpsb
popf
dec
rolb
jge
cmp
daa
jl
adc
sbb
push
jmp
adc
hlt
cmp
xchg
add
insl
push
imul
sbb
lods
in
xchg
mov
pusha
or
cmc
pop
testl
lahf
sbb
bound
aaa
out
outsl
lods
mov
pop
out
fnstcw
cmp
and
add
dec
xchg
mov
jmp
mov
subb
jo
cld
mov
inc
pop
jmp
jp
aad
imul
pushf
jmp
jmp
pop
negb
push
xchg
leave
adc
jmp
les
mov
jl
xchg
jmp
mov
movsb
cmp
testb
negl
pop
pushf
jmp
sbb
fcmovnu
and
jmp
mov
jmp
insl
iret
mov
lods
jecxz
inc
in
cmp
fnstenv
jne
test
scas
ret
fs
jmp
rcr
xchg
subl
push
lods
test
adc
dec
jmp
xchg
icebp
cmpl
push
xchg
repnz
loop
sti
scas
push
pop
es
repnz
sub
mov
and
jmp
push
pop
jmp
or
xchg
push
cmp
cltd
jmp
inc
cmpsb
pop
aad
movsb
sub
movl
mov
cmpsb
add
fwait
jg
pushf
push
or
das
xchg
push
jmp
pop
push
dec
into
or
gs
fisubs
push
mov
cs
mov
hlt
mov
test
pop
in
in
xchg
fildll
push
repnz
jmp
in
movsl
inc
repz
aaa
inc
fnstsw
cmc
and
vphsubwd
negl
mov
pushf
repnz
add
jmp
sub
push
sbb
insl
dec
adcb
mov
and
lods
out
lods
xor
add
and
mov
sbb
mov
or
mov
addr16
sbb
lahf
push
jbe
movsb
loopne
jmp
inc
and
int3
pop
outsl
out
pop
das
pop
loope
pop
xchg
add
push
sahf
or
hlt
sub
push
or
jmp
data16
jmp
shll
scas
sbb
movl
lret
stc
xor
scas
cmp
xor
clc
movsb
mov
lods
rcrl
fs
jmp
fldl
cs
imul
jnp
stos
les
repz
dec
std
mov
or
cmp
repz
sbb
shll
lods
insb
or
and
aad
dec
push
mov
sbb
push
outsb
fmull
fnstsw
or
pop
push
lock
adc
sahf
nop
or
jmp
stc
mov
push
add
sbb
lret
shl
mov
jmp
arpl
imul
lcall
sub
outsl
lret
add
loopne
fdiv
mov
pushl
jae
jmp
lcall
ljmp
stos
xlat
sub
cs
addr16
add
test
xor
push
js
and
sti
cmp
pop
or
aas
stos
jmp
repnz
idivb
or
sbb
jmp
pop
push
nop
mov
fwait
adc
fsincos
jns
mov
leave
imul
dec
dec
outsb
fisttps
sti
mov
sub
mov
adc
jmp
mov
fwait
fsubr
dec
ja
sbb
mov
out
and
bound
push
cmp
fcmovnu
mov
cld
in
dec
sub
mov
lret
or
jmp
ret
pusha
sbb
test
mov
fs
fistpll
dec
add
dec
addl
nop
lret
mov
es
test
push
arpl
mov
aaa
sub
and
and
jmp
jns
cwtl
dec
xchg
sbbb
outsl
shlb
mov
repz
mov
xor
pop
sahf
lcall
and
jno
inc
mov
inc
mov
aas
leave
xchg
sub
ret
push
jle
dec
addl
call
ret
mov
iret
push
cmp
repz
mov
repnz
xchg
fucomi
mov
cmpsb
lds
push
jmp
jbe
loop
imul
mov
je
sub
cwtl
out
lods
test
xchg
mov
inc
int3
pop
daa
jge
mov
inc
sbb
fs
out
test
idivl
ret
jb
push
fldcw
sub
test
jl
std
mov
sub
dec
lods
enter
dec
movsb
inc
je
cmp
xchg
stc
sahf
loop
fsubr
add
fwait
shlb
add
fistpll
mov
jnp
or
pop
pusha
push
jmp
subl
pushf
pop
xchg
adc
inc
and
int3
xchg
js
and
xchg
imul
cmc
bound
sub
shll
jmp
sub
mov
jae
xor
rorl
pop
jmp
stos
xor
mov
lods
int3
push
cwtl
jmp
mov
inc
pop
pusha
in
lods
mov
lret
pop
mov
or
cmpsb
push
jae
xchg
movsl
jmp
popf
sahf
imul
jmp
push
jb
mov
pop
test
jns
cmp
or
cmpsl
fs
xlat
lret
jmp
mov
or
xchg
sub
ret
fsubs
jo
jg
and
fcoml
outsb
fwait
or
inc
add
icebp
push
jmp
xchg
xchg
std
nop
jmp
call
out
outsb
dec
xchg
into
leave
and
jb
shlb
mov
sbb
cmp
and
xor
imul
dec
jmp
fildll
andl
xlat
jmp
aam
adc
std
or
or
add
jne
mov
jmp
lds
or
addr16
pop
jmp
mov
sub
rclb
mov
pandn
into
push
jmp
sahf
sbb
jne
movsb
out
pop
ror
call
push
inc
dec
xor
lret
movsb
int
mov
inc
je
movsb
fucomip
cmpsb
hlt
shlb
pop
add
jbe
jno
jmp
xor
jne
push
pushl
and
and
or
or
adc
inc
adc
mov
nop
push
mov
mov
push
sub
int
and
enter
cmpl
sub
sub
test
and
icebp
leave
xor
jnp
inc
inc
in
xchg
enter
dec
pop
fsubl
jne
cmp
sub
jmp
adc
bound
or
jmp
jp
mov
jmp
push
inc
xchg
and
jmp
fildl
jmp
addr16
rep
test
cmp
jne
es
cmpsb
lcall
outsb
inc
movsl
cmp
pop
cld
scas
mov
sub
test
lods
mov
xor
sti
or
out
sub
jmp
gs
shr
push
mov
lods
xadd
inc
mov
jg
ror
xor
or
xchg
mov
pop
pop
pop
add
daa
aam
mov
movsl
cmp
iret
jmp
test
repz
add
pop
test
fldt
dec
cmp
jmp
ljmp
testb
lds
sub
sub
aad
daa
fldt
and
loopne
or
ljmp
sbb
push
inc
adc
dec
enter
std
cltd
cmp
or
push
cmpsl
and
mov
jp
jg
pop
fcomp
lods
xlat
testl
jnp
sahf
sub
int3
dec
loop
sbb
push
sub
adc
pop
dec
push
pop
aas
outsb
and
adc
iret
mov
and
add
gs
and
jmp
mov
jmp
push
xchg
in
dec
popa
hlt
sahf
daa
xchg
lods
loop
jecxz
push
sub
jmp
or
xchg
jmp
adc
mov
iret
sbbl
sbb
arpl
pop
pushf
push
fimull
jmp
jns
mov
add
jb
ss
sbb
lods
dec
dec
mov
shr
or
jmp
adc
sti
daa
dec
dec
jmp
fdivs
in
xadd
das
xchg
popa
scas
ret
stos
jge
jmp
dec
fisttpll
pop
mov
out
xor
in
xor
mov
jb
cmp
sub
pop
sub
shlb
scas
xor
bnd
fmuls
data16
cmp
push
js
jmp
nop
mov
subl
test
lods
and
and
popa
iret
sbb
push
out
mov
cwtl
adc
leave
jno
pop
dec
push
lahf
pop
jmp
testl
adc
loop
cld
sub
imul
outsb
sbb
inc
test
jmp
aaa
mov
add
jmp
and
neg
push
mov
sub
ljmp
sbb
sbb
push
mov
add
pop
push
ds
pop
cmpps
mov
lock
pop
sub
push
and
jne
aaa
push
test
popa
xor
rcrb
iret
fld
jl
cmc
jmp
mov
pop
mov
sub
jmp
lret
pop
lods
push
imul
ljmp
insb
lock
rcrb
xor
sbb
cli
pop
and
int3
or
in
or
jmp
pop
loop
push
fsts
mov
loope
daa
cmp
jmp
jle
loop
xchg
pop
pop
adc
xor
out
push
clc
fistpl
mov
mov
sbb
jmp
sub
jae
stc
lret
sti
rol
fsubrs
rcrb
xchg
loope
nop
push
sub
jmp
sub
or
lods
jae
mov
cmp
cmp
sti
pusha
test
jmp
test
xor
push
lods
mov
ret
xor
lret
jmp
outsl
sub
lods
cmp
add
mov
insb
js
dec
or
push
popa
fsubs
jmp
inc
outsb
pop
mov
xor
in
mov
clc
mov
jmp
femms
sbb
sbb
jmp
repz
sub
gs
push
jmp
adc
add
cmpsb
xor
ror
sahf
lea
pop
repz
push
test
addr16
mov
js
jnp
adcl
sti
clc
pop
push
xchg
or
inc
loopne
cmpsb
js
icebp
mov
sub
mov
mov
jg
jmp
sarl
xor
in
outsl
cld
lahf
sbb
jmp
lods
push
add
adc
inc
and
fstpl
cmpsl
push
cmp
fwait
lods
rclb
mov
adc
das
ret
movsl
cmp
cltd
test
or
jmp
js
dec
scas
mov
xchg
lods
in
test
cmpsl
or
mov
inc
add
cwtl
jmp
scas
testb
cmp
jmp
mov
lock
add
jmp
testl
jmp
movsb
pop
ds
test
jno
mov
jge
aam
lods
inc
ljmp
clc
popa
in
mov
sbb
enter
pop
cli
imul
popf
xchg
pushl
mov
loopew
inc
in
lret
into
daa
jnp
in
push
sahf
add
mov
jmp
outsl
insl
add
repz
or
scas
pusha
repnz
push
aam
mov
int3
add
jmp
add
lret
arpl
pop
sbb
mov
mov
movsl
out
mov
ficoml
jmp
int
shrl
out
orl
arpl
fs
cmp
fisubrs
cmpsl
xor
lods
clc
iret
hlt
insl
cmp
adc
data16
push
pop
sub
mov
cmpsl
jmp
mov
popf
mov
js
mov
jmp
dec
test
lods
jns
mov
pop
mov
cwtl
mov
imul
mov
fwait
jmp
sbbb
mov
pushf
jmp
mov
push
or
jmp
cs
int3
mov
adc
or
lret
xor
daa
adc
dec
jmp
xchg
inc
push
sbb
and
scas
int3
arpl
stos
adc
lods
aas
push
mov
flds
inc
paddq
jmp
cmpsb
add
les
and
test
inc
push
add
inc
or
jmp
jmp
icebp
push
lret
pop
jmp
sar
jno
sbb
jmp
insb
lods
daa
imul
cmp
jecxz
jb
gs
sahf
pop
lods
push
push
cmp
out
jnp
adc
add
daa
and
mov
jmp
cmpl
jmp
fistpl
mov
xchg
pop
inc
xor
jg
jl
jge
hlt
test
pop
or
loope
xchg
sub
mov
testl
test
loope
subb
push
fistl
sub
mov
sbb
insb
leave
mov
mov
sub
shld
fsubrs
hlt
jmp
aaa
dec
in
push
pop
fstl
jle
cmp
jmp
mov
je
jmp
adc
push
mov
dec
mov
fldcw
test
sub
ljmp
leave
jbe
dec
test
or
sub
and
sbb
push
mov
int
leave
cmp
xchg
cmp
xor
outsl
sub
add
sub
cmpsl
rorb
stos
rorl
cmp
repz
mov
pushf
dec
sahf
jmp
out
das
imul
or
cmpsb
xor
jmp
repnz
pop
lcall
sbb
dec
mov
jmp
ljmp
jmp
cltd
addl
sub
jmp
ds
lock
cmp
sbb
fstl
shrl
int
cmpsl
enter
scas
fwait
jmp
fistps
cmp
mov
loope
adc
iret
cmp
lods
inc
sub
cmp
mov
jmp
mov
inc
ret
insb
jns
fs
lret
imul
fldl
pop
addr16
xor
dec
fstl
adc
jo
or
lods
xchg
jg
subb
in
shrl
push
add
fsubr
lret
or
dec
push
mov
pop
mov
stos
sti
dec
add
lods
push
sarl
mov
ja
or
push
or
cmpsl
jmp
jns
sarb
addr16
xchg
repnz
inc
scas
inc
mov
flds
and
jmp
jns
mov
sti
out
sub
dec
movsb
mov
sbb
imull
pop
sbb
and
out
and
mov
sbbl
pop
mov
or
out
les
mov
or
lret
jae
jp
shr
cmpb
xor
jae
xchg
into
faddl
pushf
or
cmc
sub
scas
dec
fidivl
mov
imul
sti
outsb
hlt
dec
or
pop
fldenv
scas
leave
arpl
dec
shrb
adc
push
inc
jmp
mov
subb
inc
fbld
popf
out
in
sbb
inc
leave
jmp
call
addb
xchg
dec
jmp
adc
pop
out
jmp
dec
loop
sub
jmp
daa
inc
mov
xchg
ljmp
cli
lea
or
data16
pop
push
pop
push
push
aam
lods
jbe
sbb
sub
jmp
scas
shll
fs
or
dec
or
mov
mov
fs
lods
push
xchg
shll
xor
sub
ret
jno
imul
mov
es
icebp
cmpsl
loopne
xor
loop
or
push
adc
hlt
jns
ljmp
lods
out
pop
mov
inc
mov
mov
jmp
test
jle
cmp
adc
sub
push
and
cmc
pop
or
mov
movsl
inc
cmpsl
jmp
loopne
pop
es
jns
jmp
aas
cmp
push
jmp
popf
jb
jno
jp
jmp
inc
jns
outsb
xlat
sub
pmullw
xor
jmp
mov
repz
test
jmp
fmuls
daa
in
xchg
cmp
aad
or
adc
jmp
imul
xor
inc
push
jmp
lds
repz
mov
aam
jmp
pusha
xchg
and
mov
bound
fwait
jg
into
in
cld
lcall
jmp
mov
fstps
mov
pop
fimull
sub
data16
ffreep
sbbb
arpl
jg
push
jmp
aas
inc
add
insl
jmp
jecxz,pn
lods
adc
jp
fs
sahf
test
lock
dec
cmp
into
jmp
xlat
and
adc
adc
lods
insb
mov
push
push
sub
loope
out
push
in
lods
cmp
mov
push
fadds
jmp
pop
jmp
shl
lds
and
cmp
adc
fisttpl
xchg
pop
popf
js
jo
cli
or
mov
psllw
inc
sarb
rcrl
mov
test
push
push
loope
or
test
jge
jmp
pop
mov
pop
outsl
sahf
xor
and
jmp
andl
mov
enter
sub
and
xor
addl
sub
daa
mov
cs
sti
rcrl
jmp
popa
cmp
and
pusha
jmp
clc
xor
ret
cmp
enter
jmp
repz
inc
sarl
jmp
fisttpll
push
pop
shrl
dec
jns
mov
imul
push
and
mov
in
xchg
push
insl
lds
xchg
jmp
mov
daa
inc
cmp
mov
insb
ja
cli
jno
or
dec
jae
sbb
mov
fisubrl
inc
mov
xor
clc
mov
je
fstl
fcmovu
cmp
ds
dec
jmp
shrl
ss
stc
cs
xchg
mov
adc
stos
shlb
push
jge
push
xor
adc
out
and
push
movsb
mov
mov
mov
in
or
into
mov
scas
dec
jmp
mov
in
jmp
dec
fcmove
mov
leave
mov
sub
pop
push
movsl
mov
dec
mov
loope
jmp
push
sub
jmp
lods
roll
repnz
dec
xor
jnp
cmp
sbb
dec
xchg
mov
adc
in
cld
mov
push
jg
sti
jle
and
or
jmp
dec
in
xchg
mov
popa
mov
das
test
sub
dec
and
and
stos
jmp
ds
out
movsl
xchg
lcall
aaa
cltd
sbb
fwait
add
in
jb
sbb
mov
jmp
mov
rcl
adc
out
test
sbb
jmp
fists
mov
jmp
push
push
lret
sub
add
mov
sub
mov
out
lock
jmp
out
lods
call
jmp
shll
jnp
shlb
sti
add
mov
pop
clc
dec
jecxz
jmp
cmpsl
mov
xorl
sub
lds
lret
jmp
pop
movsl
pop
jmp
mov
pop
outsl
mov
scas
mov
lods
fisttps
movsl
out
mov
push
jmp
jp
pusha
clc
movsb
addb
ret
xchg
jmp
mov
inc
js
cmp
sbb
push
gs
jbe
xor
and
popf
sub
xchg
push
jno
in
repz
pop
lcall
orl
scas
dec
cmp
mov
mov
adc
or
jmp
fldt
xor
aas
jo
jmp
xchg
push
scas
mov
or
jmp
or
das
mov
negb
or
xchg
or
push
xor
jmp
sbb
jmp
and
sub
inc
jmp
leave
fstps
pop
mov
or
dec
xlat
add
sbb
je
jmp
mov
sti
push
lahf
jmp
int3
clc
loop
lret
in
outsl
outsl
add
jmp
or
or
jne
loopne
cmp
inc
lods
lret
xor
sub
test
xlat
pushl
xor
xor
gs
lcall
jmp
sbb
mov
lods
adc
dec
nop
shr
mov
lahf
sub
sub
mov
iret
jmp
mov
loopne
adc
dec
add
or
mov
sub
adc
push
nop
xchg
and
push
lret
movsb
push
divb
inc
cmp
cwtl
stc
pop
xchg
lods
sbb
mov
loopne
jmp
pusha
mov
mov
mov
daa
ficomps
cwtl
and
and
lods
cmpb
std
test
and
ficoml
ret
out
pop
pop
mov
xor
rcr
jmp
push
loopne
insl
cs
mov
mov
jmp
cmp
std
xor
pusha
fiadds
sbb
xor
jae
mov
imul
jnp
jmp
lret
lea
jmp
inc
mov
push
into
fdivl
jmp
cmp
fsubrp
jge
aam
repnz
pop
arpl
jp
clc
jmp
jg
leave
sub
and
and
std
and
jmp
or
je
sbbb
jno
pop
or
in
jmp
leave
and
xor
cmpsb
mov
xchg
xchg
sub
jmp
and
push
xor
add
jmp
scas
jle
sub
imull
xor
shlb
mov
mov
mov
sahf
sub
int3
sub
imul
fucomi
sub
jmp
mov
or
testb
jmp
outsl
mov
movsb
sub
mov
sbb
inc
mull
cltd
out
in
sub
xlat
mov
scas
scas
cmpsl
or
test
jmp
nop
cmp
jmp
inc
andl
outsb
pop
decb
xchg
mov
inc
dec
jmp
push
iret
incl
mov
je
jmp
mov
mov
sub
outsl
pop
lret
shrl
dec
popa
pop
test
inc
adc
sub
gs
leave
aaa
mov
jmp
xorl
jbe
cmpsb
dec
jmp
adc
mov
pop
dec
xchg
or
fadds
cmp
and
cli
imul
je
imul
adc
jmp
mov
add
nop
dec
lret
sbb
lret
aam
orl
mov
sub
repnz
int
jmp
rol
xchg
sbb
push
push
sub
sub
push
int
adc
adc
scas
or
jge
in
xor
xchg
mov
sub
and
push
jecxz
cmp
pop
jmp
push
sbb
sbb
push
push
aas
in
shlb
lods
xor
inc
in
testb
inc
repnz
lea
shrd
xchg
fidivl
lcall
repz
sarl
scas
shlb
push
or
sbb
xchg
ret
lods
imull
aam
push
adc
xchg
jmp
idivb
xor
xor
ret
ljmp
cmc
and
jmp
les
xchg
push
daa
adc
lods
jmp
jmp
mov
out
inc
xor
inc
aas
sub
ret
shrb
push
sti
test
and
cwtl
lods
repnz
das
adcb
sub
mov
jmp
repz
nop
stos
fdivrl
call
or
cltd
sti
sbb
sbb
lea
jmp
push
xor
cmp
aaa
jmp
inc
clc
xchg
and
inc
pop
push
xor
jmp
adc
fisubs
jmp
mov
sbb
dec
adc
cmpsl
jmp
notb
mov
in
stc
xor
jmp
jae
ljmp
cmp
decl
adc
out
xchg
test
call
xchg
mov
jecxz
xor
and
movsl
je
mov
mov
sub
leave
push
mov
dec
iret
jmp
dec
mov
or
stc
mov
adc
insl
ds
hlt
pop
mov
xchg
out
xor
outsb
xor
clc
jmp
jle
jno
mov
je
and
mov
pop
jecxz
sti
mov
mov
or
or
mov
pop
loope
mov
add
jmp
test
lret
nop
jmp
inc
dec
mov
sbb
inc
push
add
cld
pop
shrl
das
dec
mov
add
dec
fisttps
xchg
dec
fsubr
inc
mov
push
pusha
repnz
cmc
jnp
push
es
sub
xchg
fs
mov
sub
pop
in
ja
lret
jmp
and
les
jmp
in
iret
inc
aas
inc
ja
jmp
imul
push
jmp
cltd
push
mov
jmp
repnz
cmp
jl
cmp
std
or
aas
xor
sti
loop
mov
scas
sub
pop
js
cwtl
push
mov
dec
jnp
outsb
jno
jbe
add
pop
jmp
rol
pop
ljmp
push
std
mov
mov
add
jmp
jne
outsl
or
in
cmp
adc
adc
sbb
lret
lods
out
inc
xchg
mov
mov
jmp
adc
push
int3
jmp
loope
int
inc
adc
mov
xchg
sub
fcmovnb
sub
xchg
lcall
enter
fcmovnbe
xorl
sbb
dec
cmp
pop
jmp
test
push
push
xchg
xchg
andl
adc
and
mov
movsl
fnsave
enter
inc
fucomi
jo
cltd
idivl
jno
outsb
xchg
lock
jmp
mov
fldt
xchg
in
jmp
push
lahf
daa
xchg
or
hlt
pop
aad
loop
jmp
inc
lret
enter
cmp
stos
int
ret
fmuls
ja
cmp
jge
mov
jmp
adc
inc
and
sub
call
movsl
out
jmp
push
jl
iret
lret
imul
or
popf
push
lods
in
test
mov
jmp
add
adc
or
sub
sti
pushf
lock
cld
jmp
sbb
dec
mov
jmp
sbb
xor
push
jg
xchg
cli
jmp
in
fadds
cmp
mov
adc
lcall
fisubl
jmp
gs
adc
mov
sub
xor
jmp
add
cmp
push
sarl
mov
pop
mov
loopne
mull
das
xchg
sbb
mov
jmp
je
xlat
nop
les
jmp
lea
inc
jne
sbb
es
das
mov
pop
jmp
cwtl
imul
out
push
loopne
push
jle
mov
jnp
sub
xor
inc
push
mov
cli
clc
jp
cmp
hlt
cmpsl
inc
push
fs
xor
js
or
dec
movsl
sbb
nop
mov
lret
test
hlt
je
iret
rorl
inc
das
ljmp
xor
sarl
sbb
dec
xchg
push
stos
lods
push
or
outsb
aaa
call
inc
fldenv
and
addr16
mov
cmc
dec
add
outsl
jmp
leave
repnz
jnp
mov
lods
shrl
int3
int
add
imul
mov
movsl
cmp
and
jmp
and
jmp
cmp
xor
xlat
pop
pop
pop
adc
cmpsl
jmp
popf
mov
repnz
dec
xchg
sbb
push
gs
jmp
jmpw
psrad
sub
xchg
es
out
ds
outsl
push
jmp
pop
sub
fwait
and
insb
js
shr
outsl
mov
jp
mov
mov
stc
roll
and
lods
stos
add
daa
lcall
jmp
or
add
xchg
jmp
out
shrb
push
scas
les
xor
jae
imul
pushf
ss
aas
xorl
psubusb
pop
push
jmp
out
sti
and
out
sub
scas
and
and
and
mov
push
sbb
out
leave
daa
jmp
push
and
mov
mov
sub
popa
decl
xchg
bound
loopne
inc
lock
sub
bound
jns
sub
repnz
fnsaves
shr
sahf
xorb
jmp
pop
mov
cmp
or
orl
sbb
push
pop
shlb
sbb
int3
sbb
xadd
mov
out
inc
and
xor
es
mov
sub
xchg
xor
add
pop
scas
popf
cmp
mov
in
mull
jmp
lret
adc
das
lods
mov
xchg
mov
pop
mull
push
lock
jp
or
cmp
repz
and
call
add
outsl
push
fs
jno
lods
or
pop
scas
insl
loope
cli
dec
xchg
sahf
enter
dec
lods
lock
cld
stos
movsl
cmp
dec
add
pop
jmp
xor
orb
lods
shlb
loope
sbb
faddl
cmp
fwait
lods
test
and
mov
push
push
js
jmp
shl
jl
lds
nop
and
cmp
testl
mov
mov
jle
aam
dec
sub
sbb
jmp
popa
fcmovne
arpl
aas
jmp
ljmp
jmp
es
sub
popf
mov
hlt
lret
mov
jg
sub
lock
adc
dec
mov
into
jo
pusha
fucomi
lret
xor
or
jmp
lods
pop
dec
sahf
push
movsl
jmp
push
inc
loope
int3
add
xchg
mov
push
lods
mov
shll
push
in
add
sbb
xor
sbb
adc
outsl
out
pusha
inc
in
repz
sarb
jno
jmp
ss
jle
xor
stc
push
lods
add
jo
daa
jae
push
adc
sub
sbb
imul
jmp
xor
xor
pop
subps
shl
xchg
lock
in
mov
mov
push
and
ljmp
pop
mov
mov
mov
ds
std
lods
jle
mov
mov
stos
jmp
mov
ljmp
and
out
jno
and
fdivrs
dec
fwait
bound
cmpps
mov
sti
pop
icebp
mov
cmp
xor
aad
fldpi
stc
xchg
xchg
push
test
dec
cld
add
pop
mov
clc
mov
outsb
mov
mov
and
mov
cmp
repnz
jmp
jnp
icebp
pop
dec
xchg
fwait
sub
leave
lret
and
jmp
and
inc
jle
pop
jmp
int
mov
mov
pop
push
mov
jmp
cmp
sarl
mov
adc
or
xchg
enter
sti
push
add
jmp
xor
jb
xor
leave
stc
pop
mov
stos
jmp
inc
scas
out
out
mov
mov
sub
daa
dec
jmp
mov
pop
pop
mov
out
ret
bound
inc
sub
adc
lret
shrl
aas
das
fdivp
mov
add
rorb
jmp
cmp
hlt
sti
mov
sbb
and
std
loopne
imul
in
and
pop
test
jmp
ret
push
mov
movsb
xchg
sub
push
xlat
pop
inc
data16
in
sbb
lods
lahf
add
pop
decb
ljmp
movsl
cmc
xchg
xor
cltd
adc
and
inc
out
mov
push
or
fwait
sub
sbb
scas
push
insl
inc
adc
sub
adc
add
jae
and
fsubr
mov
jnp
lods
xchg
mov
movsl
insl
cmp
pop
pusha
sub
lods
mov
jmp
sub
cmp
push
xlat
aas
push
jmp
push
gs
adc
dec
pushf
das
mov
sub
test
mov
es
jmp
int
mov
sub
jmp
testl
jmp
inc
and
imul
test
inc
sbb
das
cmpsl
repz
int
cmp
jne
add
pop
outsb
push
mov
jo
xlat
jmp
lds
pop
in
in
arpl
push
and
fwait
push
loopne
push
stc
sbb
mov
or
lahf
jmp
fistpl
jmp
or
movsl
out
adc
or
fsts
jmp
cld
icebp
mov
lods
arpl
lock
jb
pop
jmp
push
lcall
test
imul
orl
std
or
jmp
xor
cmp
call
gs
dec
mov
std
push
sahf
push
cmp
adc
test
add
scas
or
fsubrs
sub
jmp
push
lock
push
fcmovnb
inc
xor
fldpi
xchg
jns
lea
jmp
dec
ljmp
mov
lret
inc
mov
push
imul
sub
inc
dec
mov
in
in
cli
sti
jle
jmp
lret
xchg
js
testl
jne
jns
sbb
out
dec
sub
nop
sbb
andb
fmuls
dec
jmp
and
jae
cmp
lods
mov
push
cmp
and
xorb
sbb
imul
sarl
add
mov
in
test
mov
cmpsl
fcoml
out
test
adcl
repnz
jbe
ret
popf
add
sub
jmp
sbb
mov
out
fsubrs
cmpsl
jp
fiaddl
fstps
and
mov
fmull
fucomp
lods
daa
or
jmp
cmpsb
mov
inc
push
test
cli
jge
sub
test
mov
jmp
fnsave
mov
scas
push
adc
lods
dec
sarb
and
jb
sbb
xchg
push
dec
jmp
cmc
pop
add
jmp
imulb
xor
ds
sbbb
sbb
ss
jmp
xchg
das
les
filds
pop
jmp
jns
nop
jbe
jmp
loop
lret
sbbl
iret
ret
push
scas
inc
sub
fsubl
dec
cmp
imul
add
xchg
sub
sbb
jno
lods
or
outsb
mov
dec
insb
jmp
push
xchg
dec
and
jmp
mov
aam
rcll
cli
in
sahf
xor
dec
sti
push
cmp
and
jg
sbb
int
arpl
xchg
jecxz
int3
sub
or
mov
and
xchg
loop
fwait
ret
mov
jecxz
cmpsl
adc
xchg
sahf
mov
jns
sub
adc
pusha
scas
sbb
pop
add
xorb
addr16
sbb
loope
leave
stc
mov
sahf
jmp
scas
sbb
push
jmp
rorl
add
dec
lods
pop
clc
push
sub
cli
pop
mov
mov
sbb
repz
xchg
jmp
hlt
loop
sbb
lahf
stos
repnz
lret
jmp
pushf
jne
ffree
les
scas
pop
pop
push
jo
xchg
and
inc
mov
mov
popf
dec
ja
ret
inc
fwait
mov
cwtl
jmp
iret
lods
leave
sub
jmp
inc
nop
scas
or
aad
outsl
sahf
dec
add
int3
outsb
mov
cmpsb
or
pop
jmp
xrelease
insl
clc
jp
jmp
xor
shlb
jmp
jne
in
cmp
xlat
cmp
popf
rorl
sbb
rol
divb
mov
mov
xor
fsubl
sbb
sub
dec
fcoms
daa
adcb
xor
jmp
cmpsb
pop
and
in
test
cmpsl
jmp
es
sub
sarl
adc
fsubs
or
jmp
daa
notb
insb
xchg
cmp
sub
jmp
or
test
icebp
aas
test
cmp
inc
or
ljmp
jle
sti
pop
adc
xchg
lods
xlat
jmp
mov
loope
fistps
or
lret
imul
cmp
add
dec
and
aas
or
lea
loop
arpl
xchg
enter
stos
push
jmp
gs
jns
or
aad
popa
jmp
cmp
push
and
fsubl
aas
pop
xchg
mov
movsb
mov
jmp
jb
dec
gs
cmpsb
cli
jp
or
mov
out
rclb
imul
test
dec
sbb
add
aad
jl
std
lods
pop
pop
pop
sub
push
xor
and
add
inc
lods
xor
pop
cmpsl
ds
dec
fdivl
lods
jmp
mov
jbe
test
pop
xchg
pusha
jmp
bound
mov
rcrl
mov
jle
xor
daa
or
insb
mov
pop
xlat
jmp
fwait
pop
stos
and
sub
sbb
leave
int3
mov
push
mov
jns
adc
fs
and
push
mov
es
add
sbb
xor
mov
jmp
in
xchg
cmc
jo
pop
jmp
loop
jno
cmp
shrl
adc
push
ds
scas
jns
xor
cmp
xor
adc
xchg
dec
bound
push
dec
and
sbb
sbb
orl
sub
dec
daa
jmp
sub
inc
incb
push
jmp
adc
jmp
add
aad
xor
mov
arpl
mov
lods
push
and
jg
add
sub
jge
dec
test
fsubl
lds
jmp
js
and
shll
hlt
jmp
and
dec
jmp
sub
jmpw
jo
xchg
aas
sub
subb
pusha
mov
popl
xlat
jo
pop
pop
jmp
inc
mov
ficoms
fucomp
scas
jnp
shrl
mov
es
cmp
repnz
les
rorl
icebp
push
pop
jmp
mulb
or
pop
dec
in
cltd
scas
movsl
xlat
mov
jmp
mov
inc
jmp
cmpsb
mov
fs
loope
push
into
lds
out
test
cmp
inc
mov
pop
sub
insb
pop
lahf
out
imul
mov
adc
inc
jmp
or
popf
pop
js
mov
lret
push
cmpl
jno
frstor
xor
push
pop
imul
xor
dec
xchg
inc
sub
inc
jmp
loope
rcrb
xchg
sbb
xchg
cld
or
ss
jmp
leave
insb
push
jecxz
jge
jmp
jle
add
lods
and
scas
dec
adc
aaa
loope
lods
and
mov
xor
aad
scas
popl
sub
inc
mov
ljmp
cmpsl
xchg
push
sub
jbe
repz
lods
call
mov
lods
je
out
outsl
jmp
cmp
pushf
jmp
rcr
outsl
adc
jne
cmp
fiaddl
ja
movsb
arpl
xor
or
mov
cmp
test
mov
outsl
jmp
pop
cmp
ret
cmp
jnp
sub
subl
pop
mov
mov
jp
mov
and
out
jmp
in
into
mov
cmp
jmp
cmp
cmc
js
push
jmp
movsb
scas
aam
fisttpl
mov
pop
sbb
adc
sub
es
xchg
mov
lods
mov
dec
sbb
leave
jmp
sahf
iret
aaa
mov
and
pcmpgtd
jmp
scas
int
clc
and
adc
jmp
pop
xor
daa
cmp
add
cs
xchg
mov
pop
fwait
sub
clc
gs
in
mov
push
stos
ss
pop
lcall
or
sbb
loopne
push
scas
and
test
push
ss
shl
outsb
sbb
push
cmp
mov
jb
rclb
and
arpl
xor
xchg
mov
popf
sub
sub
push
filds
leave
cmpb
jns
sub
pop
pusha
pop
lahf
sub
pop
adc
add
into
insl
and
cmp
scas
add
xchg
mov
jmp
mov
or
dec
sahf
pushf
out
or
sub
cmc
lods
sub
enter
in
pop
push
ret
cmp
xchg
dec
cmp
xchg
jge
adc
adc
pushf
push
xor
repnz
xchg
stos
movsl
loopne
mov
jmp
xor
jmp
push
push
push
xor
xchg
les
jmp
popf
jg
call
adc
cmp
jmp
aam
lods
xchg
mov
and
ljmp
fucomip
ficoms
icebp
jmp
xlat
xor
inc
jp
js
imul
xchg
mov
jg
xchg
cmpl
in
bound
roll
jmp
adcb
cmp
xlat
or
fnstenv
xchg
lcall
scas
pushf
sbb
and
out
lea
pop
jmp
ds
xchg
xor
push
cmpsb
and
jmp
test
jae
cmpsl
cmc
repz
mov
jmp
pop
leave
jmp
ss
push
xor
dec
inc
push
test
sbb
mov
stc
imul
jmp
aam
arpl
push
jmp
mov
out
aaa
fucomip
inc
nop
jbe
inc
lock
or
lret
pop
fisubs
mov
jnp
jmp
xchg
data16
xor
mov
cmp
sbbl
sbb
xchg
add
lods
push
sub
mov
es
add
aad
ficoms
je
and
jmp
sbb
cmp
mov
loope
xlat
push
mov
scas
inc
jmp
insb
xor
add
sbb
jae
loope
push
mov
dec
mov
subl
in
lcall
iret
jmp
mov
or
mov
pop
sub
jge
add
ret
push
jmp
loope
push
jmp
pop
bnd
rorb
mov
pop
jb
push
sti
cmpsb
jmp
pop
scas
ss
jmp
inc
xor
outsb
pop
leave
fs
or
push
fcoms
out
aas
loop
mov
adc
push
out
not
leave
aaa
outsb
ss
stos
dec
pop
ret
je
mov
xor
sub
les
mov
jmp
push
insl
fdivr
add
pop
adc
mov
adc
lret
add
outsb
mov
adc
jmp
adc
xchg
test
rol
shr
or
fidivrl
data16
mov
jmp
fldl
and
jmp
cmp
xor
sbb
nop
pop
lcall
inc
jmp
adc
jno
movsl
out
jmp
fadds
cltd
xchg
test
and
jmp
or
fidivrs
cld
cmp
popf
sbb
cmpsb
pusha
jmp
xor
and
test
xor
sub
sub
jmp
arpl
jo
jl
sub
jmp
cmp
mov
sub
mov
movsb
rep
and
pop
orb
fcmovnu
ja
jmp
mov
add
jmp
mov
arpl
xor
stos
jmp
and
xchg
dec
jmp
xor
pop
mov
shlb
nop
push
or
andb
add
or
and
xchg
sub
jns
int
lods
mov
pop
xchg
push
sbb
jmp
xlat
and
sbb
lds
add
scas
in
jno
test
mov
jo
in
jmp
or
cld
pop
jmp
stc
inc
sbb
mov
xchg
sub
scas
sbb
sbb
pop
stos
inc
jmp
and
out
mov
mov
xchg
push
and
and
addl
add
das
repnz
cltd
xor
jmp
push
mov
clc
lahf
pop
jmp
sbb
in
fwait
cwtl
sbb
or
fidivrs
xchg
xchg
je
outsl
sub
push
ss
pop
aaa
jo
fldcw
fsubl
pop
adc
cwtl
jmp
pushf
daa
adc
mov
mov
push
in
adc
ss
mov
stos
pop
sbb
inc
jae
cmpsb
add
jae
jne
or
cmp
pop
mov
addr16
fwait
adc
mov
jne
aaa
addb
imul
or
jmp
insb
or
cmpsl
and
mov
cmc
mov
out
shr
push
cmp
aaa
jmp
add
sarb
jmp
cmp
lods
or
fidivl
leave
rorb
repz
lods
sbb
loope
or
iret
decb
mov
test
xchg
aaa
cltd
andl
sub
or
jg
int3
lods
fildl
push
dec
xchg
out
dec
jno
add
jp
je
dec
sub
add
xor
lods
push
adc
lret
cld
lret
adc
inc
imul
xchg
andl
jo
pop
jmp
mov
jp
in
stc
and
lock
loop
adc
ja
rcrl
mov
push
sbb
lret
sub
sbb
daa
cli
mov
xor
divb
mov
aaa
add
mov
into
lds
out
lock
clc
xor
shll
jmp
sbb
fnstcw
jo
lods
xlat
sbb
and
cli
push
in
mov
push
mov
xor
lret
out
inc
push
sbb
sub
scas
and
xor
je
icebp
mov
pushf
pop
shrl
movsb
std
jbe
dec
push
pop
jne
jmp
sub
lea
fucomi
jo
mov
sub
xchg
mov
push
icebp
scas
stc
shr
inc
push
jns
mov
push
jmp
pop
push
popa
insb
xlat
stos
jmp
xchg
jns
mov
lods
hlt
stos
lods
jl
and
pop
or
jmp
jge
ret
mov
lock
mov
cmp
fwait
arpl
jl
out
push
in
aaa
sub
pushf
into
stos
loopne
imul
sub
sub
lock
and
call
push
je
jmp
outsl
xor
test
mov
pop
push
mov
jmp
cmpsb
clc
movsl
lret
mov
inc
xchg
and
loope
sti
movsb
insl
addr16
ljmp
adc
mov
test
repnz
popa
cli
push
stos
outsb
mov
lcall
fsubrl
jb
mov
rep
testb
sub
out
push
jnp
enter
mov
push
inc
jmp
loopne
scas
jns
jb
jmp
push
jae
dec
shrb
aam
mov
scas
mov
mov
cmp
mov
cltd
inc
fsubrp
ljmp
lcall
mov
loop
ret
aad
sub
push
rcl
mov
or
jmp
imul
ljmp
fmull
cwtl
outsb
xchg
jmp
adc
mov
jnp
mov
stos
ljmp
or
in
sub
sub
sbb
test
mov
cmpsl
inc
jmp
mov
push
dec
scas
and
push
ja
in
mov
add
pop
sub
test
jg
sbb
adc
jmp
lds
fsts
aad
add
mov
enter
jne
inc
fwait
idiv
loopne
scas
or
mov
jns
xor
lods
rolb
mov
scas
in
xor
test
mov
push
daa
fcomps
mov
pop
cli
jmp
out
test
pop
out
jmp
lods
or
stc
hlt
decl
movsl
jnp
ficoml
add
inc
jmp
mov
testl
sub
loopne
shll
jns
ss
dec
shlb
jb
push
or
jbe
sub
roll
sub
sahf
jmp
inc
gs
mov
cmp
sbb
pop
inc
in
jmp
or
sbb
jmp
pop
push
sarb
rclb
testb
sbb
cmp
loope
lret
dec
add
mov
cmp
filds
sub
mov
push
out
dec
sti
dec
jmp
mov
out
loop
xor
pushf
xchg
into
mov
mov
mov
fsubl
and
push
xor
xchg
add
je
outsb
lahf
xchg
movsb
lods
add
in
jmp
sub
sbb
cmp
jmp
mov
push
into
imul
jno
pop
and
jle
jmp
out
jbe
imul
xor
cli
mov
pusha
push
mov
xlat
insb
dec
scas
mov
ljmp
sbb
dec
adc
subl
adc
test
out
sub
adc
setb
or
popf
fstpt
in
mov
jecxz
insb
push
xchg
sub
push
sbb
sbb
mov
jmp
inc
or
mov
lods
pop
and
cmp
mov
sub
mov
cmp
and
lods
imul
add
and
or
jmp
fadd
push
filds
mov
test
insl
mov
jmp
das
mov
out
ss
and
or
daa
and
pop
cmpsl
or
loopne
xchg
dec
jmp
icebp
mov
mov
gs
jmp
lods
mov
int3
lods
out
jb
addr16
daa
jnp
lods
jp
mov
mov
add
lret
outsl
sub
shr
loopne
cmp
pop
dec
pop
sub
aam
daa
add
rcrb
or
or
jmp
sbb
adc
jmp
mov
shrl
and
cli
push
lcall
cmc
popf
fsubl
dec
and
testl
lds
lret
mov
daa
xchg
out
stos
rorb
xlat
mov
mov
outsl
jmp
adc
cmpsb
leave
dec
out
jmp
add
pop
mov
out
xchg
xlat
or
mov
jmp
lea
inc
imul
jmp
outsl
cmp
fsubp
jge
jmp
or
movsb
xor
popa
shrb
push
cltd
cmp
jmp
imul
and
das
or
jb
push
jmp
sahf
xor
sbb
jo
and
or
lock
pop
jmp
or
mov
xor
mov
pop
inc
fsubr
mov
test
pusha
jmp
mov
lds
jmp
jg
adc
lods
sub
pop
shlb
cltd
repnz
cmc
int3
lods
loopne
push
scas
pop
lods
jmp
sub
sub
subb
out
pop
out
fwait
cli
ljmp
adc
mov
jp
push
cmp
in
les
fsts
mov
test
es
add
jmp
vmaxps
int
sub
mov
fsubs
ss
lods
xor
fisubrl
inc
aam
jmp
cltd
enter
daa
out
xchg
jle
mov
stos
leave
dec
or
in
nop
xchg
jp
mov
adc
inc
loop
xor
iret
jmp
jns
xchg
jo
sbb
jmp
cmp
fdivl
stc
repz
sub
pop
cmp
sarb
push
mov
shlb
outsb
fimuls
cltd
sahf
aam
sub
jmp
cld
comiss
rcrb
dec
xlat
aas
xor
into
cmp
jmp
loop
jecxz
aam
fucomip
cmp
xchg
cmp
repnz
fucomi
stos
into
dec
jmp
dec
sbb
mov
jecxz
push
adc
jo
int3
lods
test
divl
out
dec
lea
pop
in
enter
mov
or
mov
push
sti
adc
dec
les
jge
int3
fcmove
mov
leave
inc
sub
jmp
in
cmp
pop
mov
sub
leave
jmp
inc
imul
in
push
jge
or
jmp
dec
pop
cmpsb
shlb
jmp
popf
aad
inc
mov
sub
pop
xchg
xchg
lods
mov
arpl
into
stos
and
cmp
je
inc
imul
aad
pop
in
scas
loop
jns
test
ret
bound
inc
jmp
mov
lret
jl
cmp
add
add
fidivrs
js
dec
jmp
inc
sub
fcmovnbe
or
jmp
pop
rcll
lods
push
mov
adc
jle
pop
xor
jmp
lahf
xchg
aad
scas
cli
outsb
or
stos
lret
and
mov
push
jmp
rcll
outsl
add
xor
popl
xlat
and
pop
das
scas
pop
fimull
push
xlat
jmp
dec
ja
mov
mov
cltd
movsl
mov
sbb
pusha
mov
dec
sti
popa
iret
clc
por
rcll
loop,pt
inc
jns
cs
pop
or
inc
mov
cmpsb
ret
jmp
std
call
cmp
mov
mov
jmp
pop
sbb
cmp
in
stos
negl
jmp
pop
pop
dec
pop
imul
int3
and
scas
fdivs
sbb
dec
jae
cwtl
jmp
clc
loopne
adc
dec
dec
fs
addl
push
rcll
fsubp
call
popf
sub
mov
mov
or
stos
add
fcmovne
sbb
mov
popf
jmp
xchg
xor
sub
xchg
adc
xchg
aaa
and
dec
mov
mov
in
and
pop
inc
push
adc
lock
jmp
mov
lods
ja
pusha
aad
out
inc
fidivl
cmpsl
xchg
cmc
lret
test
mov
xchg
sbb
xor
dec
mov
jbe
pop
shlb
sti
inc
sbb
mov
cmpsb
testb
xor
gs
cmc
dec
add
jmp
adc
or
daa
jmp
xchg
or
ret
fidivrs
adc
and
cmc
inc
aas
push
mov
pop
lods
sub
outsb
dec
popf
sbb
or
sbb
push
pop
sti
cmp
sbb
sub
mov
sbb
jmp
adc
xchg
xchg
sub
xor
shr
add
scas
out
popf
fstps
xchg
fldl
test
aad
rolb
and
scas
dec
imul
or
movsl
scas
adc
xchg
sub
sub
ret
push
xchg
lods
into
jnp
gs
jmp
mov
push
lret
jg
insb
mov
pop
ror
cli
test
add
outsb
or
mov
sub
push
xor
pop
mov
mov
cmp
pop
adc
dec
xchg
dec
sub
push
lcall
in
cwtl
hlt
sub
and
dec
lcall
push
frstor
mov
jl
jb
clc
fdivl
fistpl
subb
mov
fnstenv
sti
popf
mov
mov
sti
mov
or
in
fs
mov
repnz
xchg
sub
mov
jns
push
inc
xchg
sti
adc
outsl
lea
jg
cmpsl
cmp
mov
aaa
outsb
jle
shlb
pop
and
xchg
stos
es
mov
add
cmp
scas
sub
lea
add
mov
jmp
push
into
add
xor
jmp
push
adc
nop
jmp
arpl
fwait
js
mov
mov
ret
cmpsl
push
mov
jmp
lret
cltd
mov
jmp
out
in
cwtl
fsts
aam
cmpsl
xchg
sbb
jmp
add
push
mov
stc
sub
mov
xor
xchg
sub
insl
lahf
or
js
jb
cmpsb
mov
push
adc
popa
lock
sbbl
iret
ljmp
sbb
dec
or
mov
xchg
inc
inc
cs
mov
out
jp
push
jmp
xor
mov
and
mov
bswap
jmp
mov
pop
repnz
lods
outsl
loop
mov
push
sub
lods
jns
sbb
test
stos
cmp
aaa
push
mov
inc
cmp
pop
jmp
sub
inc
stos
or
sub
jecxz
ds
mov
sahf
dec
inc
push
inc
mov
xchg
add
dec
push
mov
mov
or
call
test
sbb
pushf
pop
pop
inc
fdivrs
in
mov
fdivrp
push
ds
jmp
jl
dec
nopl
cmp
test
mov
cmp
add
push
out
adc
xchg
lods
cmpsl
sti
push
loopne
add
sbb
xor
jp
orl
pop
inc
jge
push
jmp
loopne
mov
fsubl
scas
dec
or
in
inc
jmp
inc
ja
notb
push
jmp
call
and
adc
add
lods
aas
leave
test
sti
pop
aad
mov
test
insl
sbb
insb
jl
sbb
lock
int
jmp
xor
shlb
nop
jnp
xchg
cmp
clc
or
xchg
loope
add
pop
lahf
mov
cmp
or
or
icebp
jmp
daa
fisttpll
pushf
mov
sbb
jmp
mov
add
jmp
scas
rcr
dec
jb
mov
cs
fistpll
dec
inc
decl
cli
jmp
adc
insb
mov
push
sub
into
push
pop
int
leave
jg
xchg
pop
sbb
mov
jmp
xor
int3
jmp
and
cli
imul
arpl
xchg
mov
mov
jmp
jnp
mov
shr
jg
ljmp
or
pop
lods
leave
addr16
jmp
fwait
imul
iret
int
fs
dec
out
xchg
ret
outsb
xchg
add
aam
jp
sub
aad
xor
fadd
shrl
subb
jl
and
mov
dec
stos
jmp
loope
aad
call
pop
push
fldcw
pop
jae
and
scas
xor
rcrl
jmp
into
jbe
test
shrl
mov
xchg
fldl2t
dec
xchg
pop
and
jle
push
jns
add
and
pop
fisttps
inc
xchg
rorl
cld
call
cmp
aas
sub
mov
jecxz
das
repz
dec
iret
xchg
add
cmpsb
shr
push
es
mov
fldl
ljmp
sub
scas
xor
push
repz
and
mov
bound
repz
ret
push
jmp
jmp
jl
sub
imul
shlb
and
cmp
jno
in
daa
ret
xor
and
ljmp
mov
adc
sbb
cmpsl
jmp
ja
popa
mov
out
mov
mov
in
jmp
mov
adc
cmp
fwait
mov
add
push
and
sub
scas
ret
stc
iret
leave
in
outsl
push
adc
rcl
push
adc
jmp
gs
std
je
stos
pop
jmp
mov
push
or
jo
mov
outsb
mov
mov
stos
jae
ljmp
ja
mov
push
pop
jmp
cmp
xlat
aam
xchg
cmpsb
jmp
jl
jb
xchg
fbstp
or
sub
inc
or
adc
es
mov
fnstsw
pop
cmp
pop
lcall
rcr
push
mov
icebp
xchg
and
jns
xchg
mov
jmp
lea
xchg
cltd
repnz
jmp
loop,pt
cmp
cmp
ljmp
mov
dec
push
aad
pop
int3
mov
repz
and
adc
mov
jmp
testl
inc
xorb
clc
mov
pop
jnp
push
call
jmp
xchg
jecxz
ss
outsb
mov
lcall
pop
or
inc
mov
mov
insb
lods
aad
mov
imul
bound
in
pop
mov
das
imul
jmp
scas
xor
add
inc
testb
xor
pop
mov
pop
xor
mov
dec
clc
es
sub
mov
testb
ds
leave
insb
outsb
into
mov
inc
and
mov
pop
ret
lods
imul
out
fisubl
sub
outsb
sub
stos
icebp
mov
nop
lods
jmp
lahf
mov
dec
int
mov
or
adc
jmp
jmp
ja
add
movsl
repnz
orb
pop
sub
xor
push
lea
jmp
rorl
pushf
or
jp
xchg
push
sub
inc
outsb
repz
fwait
pop
pop
mov
add
std
pop
jmp
loop
out
imul
ficoml
sub
fucomi
or
mov
sbb
cmpsb
jae
jmp
jmp
stos
sub
lods
outsl
adc
es
out
sub
or
mov
sahf
and
enter
lahf
or
incb
adc
add
or
int3
jmp
push
pusha
adc
out
or
inc
jns
inc
sbb
jmp
cmp
ds
pop
and
xchg
mov
outsb
adc
jp
cltd
test
pop
xchg
insb
push
lods
test
daa
in
outsb
jmp
fdivrs
fwait
jmp
aad
cmp
outsb
push
mov
cmpsl
pusha
int
lods
shrl
aam
call
push
xor
in
imul
aad
pushf
leave
or
jmp
xchg
lock
and
jmp
lret
mov
mov
adc
mov
jmp
out
mov
movsb
outsb
pop
cmp
add
int3
fbstp
pop
jmp
mov
js
das
xor
sqrtps
jmp
bound
lret
jmp
jno
pop
sub
iret
adc
inc
or
mov
push
or
mov
fimuls
sub
aas
pop
cmp
inc
jmp
sub
xchg
push
pop
inc
jmp
cmp
push
shr
shrl
jbe
jmp
jle
lcall
into
lea
out
nop
inc
cltd
lods
jp
andb
out
or
push
adc
adc
mov
mov
adc
push
test
and
dec
test
xchg
add
cld
dec
xor
shrb
mov
mov
or
jecxz
jmp
fidivl
sub
inc
jmp
jno
cltd
cmpsl
pop
adc
sub
xchg
pushf
dec
push
sbb
insb
jmp
cwtl
ja
ret
gs
mov
imul
fs
fmul
mov
pusha
pop
imul
cltd
shll
jmp
gs
outsl
jmp
mov
popf
or
rcrb
dec
sub
cmp
xor
xor
sbb
adc
outsl
mull
jmp
xor
mov
jmp
cmp
jp
pop
arpl
notb
ja
and
scas
sub
sub
lret
pop
inc
xchg
jmp
out
pop
dec
mov
sbb
mov
or
aaa
arpl
xor
xchg
mov
and
cmpb
dec
sbb
pusha
xchg
fs
in
mov
fstp
sbb
mov
lods
jmp
and
mov
sub
and
dec
js
push
sbb
pushf
mov
dec
lods
inc
jmp
cmp
jns
imul
lcall
test
jle
aam
xchg
lods
mov
mov
insl
mov
pop
fisubrl
rcl
jbe
loopne
fwait
out
jmp
cmpsl
xchg
jp
test
std
in
mov
leave
jmp
cwtl
nop
mov
test
and
xor
leave
dec
jmp
jno
shll
out
sbb
nop
jmp
mov
or
aad
sti
push
into
jne
jmp
adc
arpl
adc
fdivr
lods
cmp
xchg
sub
out
add
mov
pop
scas
fistl
rep
add
xchg
outsb
lds
sbb
mov
jno
mov
ficompl
xchg
cld
sbb
cli
jae
or
scas
in
push
sbb
cli
call
dec
push
movsl
sub
pop
fwait
int3
and
xchg
insb
mov
sub
mov
sub
lcall
ret
adc
mov
addr16
and
es
out
ss
ret
lret
jo
and
popf
xor
jns
jbe
dec
inc
negl
sbb
sysret
xchg
lret
cmp
int3
jmp
test
dec
rcrb
and
outsl
or
dec
loop
je
cmp
jb
mov
fcmovnbe
xor
rolb
test
jmp
dec
inc
xlat
adc
push
pop
sub
pushf
das
repz
adc
pop
imul
mov
sub
sbb
scas
stos
jg
movsb
pop
test
aam
xchg
fnstsw
jmp
scas
outsb
push
push
stos
dec
add
pop
lahf
sti
sub
jmp
sub
divl
orb
xlat
mov
pop
jmp
cmc
out
repnz
jmp
bound
xchg
jbe
fucomip
in
ret
sbb
call
in
mov
jmp
out
addr16
pop
or
dec
movsl
jmp
sbb
mov
jmp
adc
lods
out
fimuls
dec
lret
dec
add
push
test
fchs
jmp
push
andl
enter
lods
or
and
xor
and
jmp
jle
mov
dec
arpl
sub
test
jae
scas
cltd
or
data16
or
jmp
mov
outsl
bound
push
xchg
pop
call
jmp
cltd
test
and
pop
or
sub
jmp
sub
or
cmp
cmpsb
sti
data16
add
jmp
jg
mov
jmp
and
hlt
pop
orl
mov
inc
movsb
or
stos
jmp
adc
or
pop
fisubrl
xchg
outsb
pop
sub
out
popa
sbb
lods
jmp
in
adc
jmp
mov
in
cltd
in
jmp
jg
lcall
jnp
jb
push
push
sbb
or
push
iret
jp
data16
fsubrs
test
leave
and
sub
es
std
cmp
add
loope
sub
mov
popf
mov
jmp
mov
aaa
leave
jp
bound
in
pop
scas
cmp
sbb
outsl
and
testb
mov
icebp
push
sti
sub
sbb
push
add
push
aas
pop
mov
les
pushf
mull
xor
stc
sub
jnp
dec
ds
cltd
xchg
scas
cmp
ret
es
imul
test
ret
subb
mov
push
test
jmp
popf
add
sbb
rcll
xchg
jmp
dec
inc
push
js
jge
pop
or
cld
dec
mov
pop
arpl
adc
shrl
call
jmp
pop
int3
out
pop
mov
inc
push
clc
or
cmp
sub
sub
xchg
dec
pop
dec
or
dec
mov
ret
cld
hlt
out
shrd
cli
xchg
xor
inc
dec
and
out
fimuls
jmp
mov
pop
jmp
out
xlat
jo
and
mov
outsb
cld
shll
stos
ret
subb
jp
mov
mov
dec
or
fucomi
pop
add
inc
rolb
jb
int3
aam
adc
ret
int3
jmp
rep
test
lahf
jmp
js
xor
and
jmp
xchg
int
jp
outsb
call
jns
shrb
lods
pop
mov
cmp
adcb
repz
bound
inc
rcl
sti
stos
add
jo
jmpw
in
xchg
outsb
popa
xchg
and
movsl
adc
movsb
xchg
int
and
shll
jae
insb
sbb
lds
nop
cld
lods
notl
fwait
ret
jmp
loopne
pop
rcrb
das
outsb
leave
pop
jecxz
repz
aaa
sti
outsb
inc
inc
sarb
repz
stc
das
mov
jbe
nop
push
sub
jmp
mov
decl
jmp
insb
fucomi
repz
gs
and
mov
pop
xchg
lods
std
sbbb
test
cwtl
fsub
fmulp
mov
mov
fldcw
jne
xchg
xlat
and
xor
inc
dec
pop
pop
dec
ror
daa
in
rcrb
inc
out
aam
sub
xor
daa
pushf
or
lock
mov
xor
inc
repz
movsl
insb
sub
stos
outsb
mov
jge
fmulp
jmp
repnz
in
lods
jg,pt
jmp
or
into
cltd
lds
mov
iret
sub
jmp
and
pop
cli
in
lods
addr16
add
sbb
dec
mov
stos
sub
push
repnz
je
or
push
cmp
leave
xchg
fistpl
jp
sub
push
xor
das
push
pop
lods
push
mov
pop
nop
cmc
adc
jl
or
loop
jmp
push
push
push
mov
jb
jmp
sbb
xor
pop
cwtl
or
or
sub
imul
sub
push
or
mov
cwtl
subl
or
or
movsb
es
std
jg
push
sub
js
or
jmp
mov
mov
sbb
adc
fisubrl
fldcw
imul
sbb
jno
lods
out
mov
mov
sti
iret
inc
lcall
jno
add
pop
fstl
jl
sahf
push
pop
adc
pop
repnz
inc
jmp
dec
and
mov
in
and
sub
jmp
xlat
js
inc
andl
repz
mov
mov
pop
lods
or
jl
in
sbb
movsb
sub
push
out
mov
jge
xor
js
add
jmp
push
pop
sub
pop
shlb
cmp
push
imul
sti
inc
aad
sub
insb
or
iret
push
lods
pop
pop
jns
mov
es
jbe
stc
push
sahf
hlt
jmp
jno
mov
cmp
aad
xor
pusha
scas
lods
pushf
add
cmp
andb
sub
jae
sub
sahf
psubd
jmp
add
inc
sub
loopne
mov
sbb
or
lds
lret
jmp
pop
xchg
push
mov
add
outsl
jne
adc
ficomps
scas
inc
push
std
es
adc
negl
loope
rcl
pop
jmp
rorb
out
lret
loope
shr
jo
sub
inc
jmp
popa
cmp
jl
sbb
lret
add
repz
mov
xorl
je
movsb
mov
adc
jecxz
jmp
shll
cmpsb
dec
sbb
add
jmp
ret
mov
jnp
imul
mov
jg
lods
ffreep
fstl
pop
dec
or
les
lock
imul
sbb
jb
pusha
dec
sti
pop
lcall
jecxz
shufps
aaa
ficomps
test
jmp
vcmpsd
jp
lcall
xchg
jae
or
sub
adc
out
xchg
lret
inc
sub
imul
fldpi
enter
fidivs
jmp
subb
jmp
mov
jns
jmp
aad
fwait
movsl
hlt
adc
cmp
pop
adc
aas
jmp
mov
mov
jmp
mov
flds
movl
jp
push
mov
sbb
xchg
sub
mov
jmp
jg
sbb
dec
dec
out
xor
andl
xchg
jmp
outsb
add
jnp
lret
fsubr
mov
test
add
push
or
xchg
ds
adc
push
icebp
xchg
pushf
out
cmc
ficompl
scas
add
imul
add
movsb
jmp
inc
leave
insb
lea
adc
scas
fisubrs
cltd
jns
shr
inc
xchg
lods
mov
stos
imul
jns
jne
pushf
outsb
mov
pop
sti
dec
out
pop
push
outsb
jns
call
aaa
inc
inc
inc
int
xor
fwait
adc
push
and
mov
jmp
std
loop
mov
cld
jmp
and
mov
stos
cmp
xchg
mov
jb
mov
mov
jo
je
mov
sub
adc
xor
repz
shl
je
daa
imul
out
stos
add
or
nop
dec
fistps
jmp
lods
xlat
clc
ficomps
movsb
mov
pusha
jmp
imul
jmp
mov
add
mov
adc
jmp
movsb
cmp
xchg
dec
jmp
sub
lret
add
shr
pop
sbb
push
mov
and
mov
stos
icebp
out
inc
jmp
xor
jle
jb
fucomip
sti
leave
cmp
in
dec
test
cmpsb
call
cmp
jmp
subl
into
jmp
sbb
leave
lods
jns
mov
add
jmp
icebp
cld
insl
pushl
jmp
mov
je
mov
push
int3
bound
mov
push
jmp
or
sbbb
repnz
jp
push
mov
sti
mov
aas
or
pushf
test
fneni(8087
outsb
add
jecxz
test
and
jmp
ja
aas
dec
sbb
xchg
jbe
sbb
call
jmp
or
aas
push
inc
inc
xchg
sub
aam
mov
jmp
jo
inc
jp
ss
enter
das
dec
lods
pop
pop
je
sbb
lahf
adc
mov
jns
or
lret
inc
dec
add
in
xchg
jl
ljmp
jg
sbb
popa
jmp
ds
jge
aas
xchg
and
xor
outsl
out
sbb
arpl
pop
in
jmp
mov
loope
test
xchg
sub
test
pshufw
lcall
jno
xchg
mov
push
mov
cmpsl
sbb
dec
xor
stos
lahf
imul
pop
sbb
fmulp
sbb
inc
fs
insb
push
or
lret
push
or
jl
dec
jge
jmp
jbe
mov
mov
mov
jmp
inc
repz
pop
imul
dec
adc
sbb
mov
jne
mov
xor
dec
scas
lcall
sbb
lock
mov
pop
lods
jns
cwtl
imul
out
pushl
pop
in
adc
out
je
add
arpl
add
scas
jmp
cwtl
imull
xor
pop
lods
pop
jge
mov
out
sbb
in
sub
mov
int3
sbb
mov
rcll
mov
test
mov
or
add
mul
pop
js
stc
cltd
lods
outsb
cmp
cli
adc
mov
ret
lods
add
mov
cld
jmp
cmp
mov
mov
sbb
xchg
cmp
or
int
inc
mov
xor
pop
adc
ja
insl
into
jmp
push
lcall
push
add
and
scas
sub
pop
and
pop
popa
cmpsl
int3
xor
push
gs
mov
inc
clc
adc
or
cli
pop
or
mov
lods
xor
cmpsl
cli
jmp
lahf
xchg
stos
and
outsb
push
call
lods
fistpl
lods
cmp
jmp
cmp
test
push
sub
test
pop
nop
movsb
lds
icebp
mov
push
push
add
jmp
pop
les
loope
shrb
movsb
shr
and
push
push
je
repnz
in
outsb
popf
stos
inc
mov
fs
mov
shrl
cli
inc
and
out
dec
xorl
ss
mov
and
jbe
inc
int3
pop
stc
cli
mov
negb
fsubr
cmp
jno
add
adc
mov
dec
leave
pop
sub
jmp
mov
jp
or
mov
mov
repz
mov
adc
xchg
outsl
or
idivl
mov
sub
sub
sub
mov
pop
xor
sub
por
rcrl
fs
push
xor
jmp
mov
add
jmp
lock
sub
scas
ficompl
scas
or
push
sbb
mov
pusha
test
ret
jmp
jns
aaa
mov
add
fwait
inc
out
mov
add
mov
push
mov
rorl
pop
cmp
loopne
or
movsl
cwtl
jo
gs
in
std
test
jbe
dec
fsub
out
jne
xchg
rorb
mov
ret
jne
mov
fildl
lret
repz
out
insl
pop
shll
sbb
in
add
xor
jecxz
sbb
subb
jle
sub
pop
loopne
repnz
xor
es
xor
xorl
cmp
cld
xor
mov
aad
hlt
pop
jl
or
xor
rorb
jmp
int
cwtl
jp
cltd
ja
jbe
in
mov
testl
push
sub
jecxz
pop
int
xchg
pop
out
addr16
cmp
in
pop
push
ret
jmp
movsl
fldl
cmp
sbb
loop
shr
adc
stc
mov
pushf
or
sub
cmpsl
inc
jmp
ficoms
or
jns
fwait
or
sysenter
dec
mov
inc
es
jmp
push
cmp
sbb
add
xchg
test
outsl
jmp
add
or
sub
mov
cli
test
sbb
sub
in
jmp
outsl
push
std
jns
inc
das
fldenv
jmp
dec
mov
leave
jmp
repnz
iret
sub
sbb
stos
sub
sub
and
cli
mov
loopne
jmp
cmp
jns
mov
into
stos
inc
jp
orl
sbbb
push
and
lea
cmp
jmp
xchg
xor
cmp
shll
scas
adc
lea
test
aad
cmpl
sbb
pop
add
sbb
pusha
jmp
hlt
fcmovbe
outsb
mov
nop
jmp
xchg
pushf
jne
xchg
lock
mov
call
mov
xchg
xor
sbb
cmpsb
inc
movsl
cli
test
in
dec
jmp
das
fsubrl
insb
hlt
adc
enter
mov
js
jns
jno
mov
clc
loop
out
pop
pop
loope
pop
mov
cmp
shrb
fisttps
clc
ss
jb
mov
inc
repz
test
xchg
inc
hlt
jmp
test
and
pop
into
jmp
xchg
sahf
das
lds
mov
jmp
xchg
add
mov
or
pop
sahf
sbb
xchg
or
cmp
jmp
dec
imul
jmp
inc
push
jns
cs
iret
lods
icebp
push
sub
cmp
push
sub
fisubrs
fs
xchg
jmp
pop
mov
xor
ja
or
xor
jmp
cld
ds
test
sti
sub
stos
pop
push
push
lret
jmp
sarb
push
jmp
xor
loopne
jecxz
jmp
mov
shlb
ret
adc
or
xchg
adc
pop
jb
fisubs
vpslld
and
rcr
aaa
add
fsubl
cmp
in
aad
mov
jb
inc
es
scas
das
add
jo
imul
xchg
mov
push
pushf
lcall
and
jmp
mov
ljmp
or
mov
dec
dec
sbb
jge
jmp
aad
mov
mov
das
rorb
add
popa
jmp
in
adc
rclb
sub
xchg
mov
testb
mov
xchg
lods
jmp
adc
mov
xchg
mov
or
and
negl
jno
mov
jmp
out
repnz
por
outsb
push
sub
jnp
shr
dec
pop
or
hlt
lods
data16
push
je
xorb
test
mov
or
lods
mov
pop
inc
in
pushf
jmp
and
jnp
nop
mov
mov
dec
rclb
sub
jmp
xchg
xor
jmp
add
es
cmp
scas
adc
and
sub
mov
jo
lret
dec
xor
sub
loope
cmpsb
jg
xchg
pusha
aas
mov
dec
lret
in
orl
or
call
and
cmp
out
pop
scas
fwait
sub
add
mov
sbb
push
andl
jmp
ficompl
lcall
test
leave
ja
pop
aam
push
sub
jne
jmp
pop
mov
es
pusha
mov
ljmp
in
jbe
pop
adc
aam
aad
jmp
jo
sahf
adc
xor
add
fistl
mov
gs
das
push
decb
loope
jmp
push
jg
or
es
mov
mov
inc
orl
icebp
mov
repnz
jmp
or
or
xchg
mov
mov
pop
jmp
sbb
jmp
xchg
sub
clc
pop
std
repz
ja
dec
sbb
outsl
ss
jmp
dec
out
clc
rep
shr
sub
lea
mov
adc
cmp
push
xorl
pusha
jno
test
stos
push
repnz
shl
pop
mov
add
or
int3
outsb
sbb
lods
iret
mov
cmp
ret
packuswb
mov
stos
push
not
sbb
mov
inc
push
in
xchg
es
outsb
icebp
jmp
inc
sbb
adc
or
inc
loope
loop
mov
push
call
outsl
pop
mov
fisttps
pop
add
sub
sti
mov
jmp
in
sarl
add
mov
gs
ficoml
sbb
subl
xor
push
fcmovu
xor
hlt
sub
or
in
sbb
outsb
lods
pushf
inc
into
clc
pxor
mulb
sub
push
add
aam
jae
ljmp
ret
dec
cwtl
or
loope
stos
lret
sub
in
inc
sbb
add
scas
hlt
imul
pushf
sbb
xchg
sbb
jp
iret
pop
pop
or
jbe
inc
std
imul
push
sub
pusha
jmp
test
ja
lea
mov
xchg
push
jmp
jbe
pusha
mov
subl
and
sbb
js
jecxz
rclb
test
jmp
push
jb
lods
adc
dec
pusha
jge
rorb
jmp
mov
push
mov
lds
scas
jg
shll
sub
daa
mov
jmp
icebp
and
das
pop
mov
xor
and
out
jo
push
sub
aas
push
jmp
mov
cs
jbe
popf
jmp
pop
les
jno
fildll
movsl
rclb
imul
ds
dec
pop
jns
aam
daa
mov
sub
ret
lds
movsb
mov
jae
jno
loopne
jmp
in
aam
movsl
sub
jmp
xchg
inc
jmp
jno
int
aaa
or
jmp
repnz
fnstenv
pop
out
fisubl
jmp
jmp
rorl
mov
daa
inc
jge
jno
sub
jmp
mov
test
sbb
lret
sbb
leave
adc
dec
lods
inc
insl
js
test
push
jge
jmp
pusha
lcall
and
add
adc
mov
movsl
iret
jmp
shrl
jns
fimull
mov
mov
jmp
insl
das
mov
repz
mov
cmpsl
or
push
jbe
jge
shr
in
out
out
push
test
lods
cwtl
shl
enter
jecxz
mov
pushf
xor
sub
mov
mov
sub
xchg
mov
orl
pop
leave
xor
mov
pop
cmpb
sbb
jb
lahf
cltd
jg
scas
mov
push
jmp
push
daa
movsl
jmp
repz
xchg
leave
das
shrl
fidivrl
push
and
inc
lods
jmp
mov
mov
lahf
out
out
pop
xor
movsb
outsl
xchg
sub
or
pop
push
test
out
pop
jmp
mov
cli
scas
jmp
xor
pop
jo
xorb
xchg
jl
jmp
cld
outsl
sbb
sti
mov
and
outsb
cmovle
clc
sub
cmp
inc
es
stos
xchg
or
ret
ss
pop
stc
fstp
add
adc
std
inc
dec
js
sbb
dec
mov
cmp
xchg
sti
lcall
divl
sbb
ret
fs
lods
rcll
insb
out
dec
shrd
cmp
sub
mov
aad
gs
mov
inc
add
arpl
xorps
fstpl
popa
dec
cmpsb
dec
or
pop
stos
and
adc
xchg
sti
lret
add
adc
in
fs
xchg
pusha
cmp
daa
jg
lods
cs
ss
pop
inc
xor
negl
jne
addb
mov
adc
jle
cmc
xor
jmp
mov
sbb
inc
js
pop
movsb
in
repz
push
xlat
les
outsb
into
mov
xchg
fistpl
inc
pop
adc
pop
lods
pusha
cmp
mov
lret
mov
int3
shr
push
inc
call
cmp
dec
dec
shl
sbb
push
jmp
pop
movsb
aad
loopne
inc
jmp
ja
lcall
add
dec
push
pop
repz
mov
movsl
imul
jno
orb
jmp
jl
fs
and
insb
pusha
arpl
daa
daa
in
pop
ret
orl
stos
inc
jmp
and
fimuls
push
cmp
pop
push
sahf
imull
lods
cltd
xlat
mov
cmp
cmpsb
sub
mov
int3
je
jo
ljmp
inc
cmp
pop
xor
negl
orb
and
shll
data16
adc
or
enter
shrl
add
test
ret
outsl
fstpl
mov
inc
adc
mov
sahf
mov
cmp
jae
inc
pop
or
sti
sub
and
movsb
inc
cld
add
jmp
inc
lock
cltd
and
ds
fnstenv
push
jmp
mov
inc
sahf
jmp
jo
inc
jnp
pop
add
push
sbb
imull
add
fld
stc
test
pop
cltd
jmp
call
lahf
cmp
fisttps
jbe
fldt
xchg
psraw
mov
enter
sbb
jae
xchg
es
negl
insl
pushf
das
ffreep
lods
jmp
daa
push
shl
push
sub
movsb
jmp
sub
jno
fsubr
inc
sub
inc
push
call
jp
jmp
clc
push
inc
adc
jmp
jmp
push
imul
std
sbb
jmp
lea
sbb
out
jmp
mov
jp
jmp
out
rorl
dec
ret
cmp
call
js
bnd
xchg
mov
lods
cmp
inc
out
and
loope
push
adc
cmc
movsl
pop
cltd
jp
mov
std
hlt
xor
sbb
test
and
mov
add
scas
mov
aam
or
mov
in
into
clc
sub
ja
cmp
inc
scas
sub
mov
iret
jl
test
push
cmp
in
test
bound
pop
cmp
jmp
lret
add
push
rcl
push
jmp
ljmp
jmp
shl
lret
dec
cltd
mov
clc
xor
xor
jmp
add
push
sbb
or
or
dec
movsb
xor
sbb
shrb
aam
jne
lret
call
and
cmpsl
xor
fsubl
lret
popf
mov
and
sbb
stos
test
aaa
aam
iret
xchg
xchg
mov
es
out
jp
push
jle
xor
stos
dec
adc
or
sbb
or
lock
stos
outsb
xchg
jo
mov
fistl
cmp
icebp
jnp
orl
ret
sti
dec
bound
mov
mov
mov
mov
filds
test
xor
mov
sbb
mov
shr
jecxz
xchg
rorl
adc
lea
adcl
lods
adc
enter
movsb
call
out
adc
test
sbb
aam
xchg
mov
pusha
outsl
mov
cld
outsb
cmp
dec
cwtl
mov
or
sub
inc
dec
jmp
mov
sbb
fists
into
jns
mov
bnd
pop
and
push
outsl
scas
jns
xor
sub
jmp
cli
push
mov
jmp
cmp
aam
lods
xchg
insb
scas
sti
pop
jns
add
movsl
lods
inc
sub
mov
leave
lret
jmp
test
xor
jge
out
xor
sar
cmp
add
mov
fisubrl
push
fcomps
shll
sub
jmp
or
insb
jmp
or
pop
movq
push
movsb
fsubrs
sub
jmp
aaa
jnp
mov
repz
shll
stc
cmp
mov
jecxz
mull
test
pop
jmp
pop
adc
add
jmp
and
mov
sub
repnz
ds
lret
not
and
lea
push
jmp
loopne
mov
add
push
idivl
add
push
dec
aam
hlt
mov
adc
inc
or
fstps
jbe
and
sti
xor
dec
ret
or
jmp
mov
mov
sub
je
push
xor
jge
aas
clc
arpl
xor
jmp
leave
pop
dec
dec
aas
xchg
jmp
cltd
sbb
repnz
pushf
adc
je
mov
sub
inc
addr16
pop
sub
idivl
mov
and
fnsave
sbb
dec
sti
jecxz
or
test
mov
cld
fs
jns
out
sub
xor
push
pop
sub
outsb
xchg
out
or
dec
cwtl
in
adc
mov
dec
ljmp
lods
repz
sub
icebp
adc
pop
xor
cmpsb
push
pop
mov
jns
outsb
jmp
jo
mov
xor
fisubrl
and
pop
or
stc
dec
inc
pop
ds
cmp
scas
xchg
push
mov
add
ret
xor
cltd
jmp
inc
frstor
inc
jmp
push
loopne
inc
add
adc
aas
mov
mov
mov
pop
mov
ss
and
push
push
loop
movsl
mov
int3
cli
repz
mov
and
cmp
cmpsl
shrb
in
adc
fnstenv
jmp
xchg
jg
mov
add
push
cmp
mov
or
and
jno
push
decl
dec
sbb
imul
xchg
jne
jns
add
xchg
jmp
jbe
dec
data16
in
jmp
add
cld
leave
cli
in
fcom
dec
mov
cwtl
sub
cmp
cmp
xchg
inc
stc
or
popa
adc
jge
inc
cmc
and
das
mov
ja
jbe
dec
ror
sub
mov
in
sub
in
icebp
add
stos
or
cld
scas
xchg
jbe
pop
cmp
jmp
jb
adc
in
jmp
mov
adc
out
aaa
push
jmp
push
sbbl
and
jnp
movsl
stc
ljmp
fnstsw
shll
sub
sbb
daa
pop
xlat
bnd
ret
and
daa
inc
and
xchg
mov
sbb
pop
arpl
jmp
movsl
sub
in
in
xchg
add
mov
sbb
inc
shrl
inc
jmp
testl
cmc
cltd
mov
jle
adc
mov
popa
pop
jbe
fs
jno
lods
iret
mov
jecxz
les
add
adc
add
xor
lods
push
xor
pushf
and
jnp
xchg
xchg
and
or
adcl
or
sbbl
inc
sti
call
stc
lods
lods
mov
pop
aas
sbb
or
das
std
fs
adc
lahf
pop
push
jae
mov
shrb
jno
mov
sbb
fucomp
inc
push
jne
jmp
iret
inc
push
rcrl
xor
xor
testl
push
jmp
mov
sbb
xlat
pop
jmp
pop
push
mov
and
stc
cltd
xchg
jmp
dec
adc
cmp
sbb
std
adc
jmp
shlb
mov
lods
lock
push
mov
lret
imul
lods
and
jmp
sub
sub
xor
shrl
cmp
pop
or
pop
add
jmp
out
mov
xchg
mov
mov
mov
sbb
nop
icebp
mov
adc
lods
adc
push
shrl
sbb
fisubrs
out
clc
hlt
ret
sub
sbb
in
aam
or
mov
repnz
ret
xchg
cwtl
cld
rcll
mov
out
pop
sub
cmp
addb
dec
and
mov
add
xchg
jbe
scas
jp
test
mov
scas
das
cli
subb
cmpsb
lahf
mov
loope
jmp
mov
addb
sbb
dec
or
ret
dec
push
loope
js
jmp
sbbb
jmp
xor
ljmp
mov
imul
rcrb
out
jmp
push
inc
push
push
add
or
clc
sti
or
jl
lahf
mov
xchg
pop
int3
mov
push
jmp
pop
jp
fisubrs
jmp
shll
jmp
inc
or
inc
push
jp
scas
ftst
lret
cltd
push
rclb
dec
test
sbb
movsl
mov
jmp
nop
mov
gs
dec
or
mov
dec
aaa
sub
jmp
and
lahf
xorb
sub
jmp
incb
fisubl
dec
jmp
nop
lods
lret
pop
xor
jmp
cmp
cmp
and
dec
pop
fwait
pop
cmp
jmp
xchg
leave
test
and
test
std
out
inc
mov
cld
mov
in
sub
jmp
xor
lods
out
and
adc
popa
jmp
fcoms
fidivs
push
mov
outsb
adc
rcr
and
xor
dec
mov
xlat
out
jae
fbld
inc
jg
push
add
andl
enter
jmp
ss
mov
in
add
ret
jmp
in
sbb
outsl
and
paddq
enter
ror
data16
js
lods
scas
jge
or
stos
sub
and
pop
out
push
add
xchg
inc
rol
sbb
adc
jmp
scas
lods
mov
jmp
add
jecxz
test
cld
incb
scas
and
aas
mov
faddl
jmp
mov
jmp
mov
das
in
add
jmp
pop
xchg
push
cltd
orl
cmp
sbb
mov
lock
outsb
xorl
in
ror
out
inc
jmp
or
mov
lds
pop
sbb
ficoml
jo
call
xchg
jmp
and
pop
xchg
cwtl
adc
lods
cmpsl
sbb
loopne
pop
sarl
adc
push
jmp
mov
movsb
jmp
jb
ja
fimull
outsb
push
lahf
adc
pop
or
jbe
js
scas
mov
out
sbb
or
jmp
and
mov
into
cs
jmp
add
cmpsb
inc
lock
jo
xchg
imul
divb
push
jmp
test
repz
adc
jmp
push
xor
mov
icebp
fsub
adc
imul
sti
sbb
pop
jnp
cwtl
cmp
jmp
lret
mov
fmull
mov
movsl
lock
mov
movq
rcrb
fld
jnp
rcll
adc
es
or
and
cmpsb
jmp
lea
xchg
sbb
lret
xor
sbb
imull
movsl
mov
sbb
jo
jne
jl
testb
dec
xor
imul
popa
enter
jno
jmp
adc
loopne
jmp
xor
and
sbb
fmul
pop
mov
add
lahf
jmp
roll
lock
mov
sbb
daa
fs
loopne
jp
adc
daa
pop
inc
scas
jb
sti
mov
fisttpll
xor
imul
iret
sbb
pop
pop
ljmp
aad
pause
idiv
xchg
sub
scas
or
fs
fcompl
clc
shl
pop
stc
jne
jmp
imul
ljmp
pop
pop
outsb
out
bnd
xor
fcoms
testb
lods
and
jecxz
imul
sbb
hlt
mov
xchg
jmp
xchg
xlat
push
and
cmpsl
xchg
adc
in
lods
in
bound
dec
xchg
sbb
cmp
jmp
sbb
and
jmp
jmp
daa
adc
sub
rcrb
mov
mov
jl
jmp
jno
dec
push
loopne
repnz
inc
inc
jmp
iret
out
imull
in
pop
jle
daa
icebp
ret
pop
dec
mov
test
pusha
pop
dec
repz
cmpsb
or
xor
pop
arpl
repnz
ss
es
jmp
out
cltd
ret
sub
and
lods
pop
aas
sub
add
dec
lahf
xor
sub
jnp
mov
or
outsb
mov
enter
mov
adc
jb
dec
imul
mov
xchg
shl
out
fucom
dec
jmp
mov
rcrl
inc
mov
mov
jns
and
jl
scas
leave
pop
jge
dec
xor
subl
nop
pop
loopne
arpl
scas
mov
dec
sub
mulb
mov
xor
jp
jb
cmp
aas
lock
pop
movsb
leave
mov
jo
test
inc
loope
in
lods
cli
pusha
and
jmp
pop
cmp
bound
jl
ret
mov
push
sub
clc
jmp
out
addr16
mov
lods
jmp
fmul
push
pop
or
and
sub
sarb
mov
cmovge
xor
out
fidivs
movsb
cmpsb
jbe
je
sbb
push
cli
fadds
call
adcl
mov
sbb
inc
addr16
jmp
adc
xor
mov
int3
jns
cmp
jmp
pop
mov
adc
rorb
sub
bound
sbb
add
ror
mov
ds
lock
pushf
fwait
bnd
and
orb
ret
mov
mov
jmp
fiaddl
inc
push
out
jmp
outsl
sub
aam
inc
or
and
jmp
jno
adc
xchg
adc
jbe
mov
shr
rolb
jmp
ds
mov
jmp
cmp
imul
add
in
aam
xor
aaa
and
movsl
test
scas
push
divl
fucomip
leave
jmp
or
test
jno
pop
cmp
inc
aam
jae
jmp
cmp
dec
inc
andl
mov
mov
sub
fwait
adc
push
lret
imul
push
jle
jmp
popf
cmp
and
fdivs
data16
cmp
and
je
shl
lods
shrl
pop
sarb
jg
or
add
inc
xchg
mov
mov
ss
pop
lahf
or
push
rcr
stc
mov
xchg
jns
mov
out
jmp
mov
sbb
sub
dec
sbb
xchg
and
push
mov
popa
xor
inc
sbb
in
push
inc
jmp
mov
mov
repz
cmp
stos
aas
pop
mov
rcll
sub
jmp
dec
lods
dec
ret
cmp
pop
cmp
or
fistps
in
push
pop
push
out
and
or
jmp
mov
shl
in
mov
in
sbb
jmp
mov
push
in
xor
xor
mov
es
mov
or
data16
mull
call
out
shr
bound
jmp
fcompl
cmp
aad
push
sub
nop
jp
or
inc
out
cmp
jae
push
out
push
pop
popa
jmp
dec
ss
lret
mov
jb
pop
call
sub
stc
xchg
sbb
mov
lahf
sti
orb
jp
mov
pop
cmc
aam
jmp
mov
sub
jbe
mov
shl
xchg
add
pop
sub
jae
jle
in
lret
cmp
jmp
push
sbb
mov
lret
xor
repz
std
movsb
mov
add
enter
mov
inc
mov
cltd
sti
jmp
mov
push
daa
or
dec
xor
test
test
sti
pop
jmp
mov
cmpsl
call
sub
repnz
mov
aad
cmp
cwtl
sub
ficoml
sub
jle
mov
and
shr
aas
jp
pop
ficoms
invd
mov
pop
call
jns
cmp
fmuls
mov
in
adc
xchg
jmp
lea
inc
xchg
ds
insb
mov
mov
jmp
leave
imul
shlb
lods
xorb
scas
adc
andl
lods
repnz
rcll
mov
pop
or
xor
xlat
jae
out
out
aad
fldpi
shll
jo
jg
add
ja
ss
bnd
cltd
push
das
or
popa
outsb
shrl
add
mov
js
loope
xchg
into
imul
inc
inc
lods
dec
stos
lcall
dec
sbb
shrb
jecxz
iret
imul
and
jmp
les
int
cwtl
adc
sub
jns
xor
pusha
or
jl
pop
fmul
imul
sbb
dec
xlat
outsb
cli
mov
sbb
mov
cmc
mov
sbb
or
imul
aad
in
mov
bnd
imul
jae
lret
hlt
ss
add
mov
sub
int
subb
and
out
pop
dec
sub
cmp
lea
stc
jmp
or
pop
dec
cmp
xor
scas
adc
pushf
jmp
mov
repnz
sub
cmp
adcl
or
bound
mov
jmp
nop
in
sbb
push
mov
movsl
fucomip
aam
xor
lret
push
outsb
popf
jmp
ljmp
lret
out
sbb
xchg
pop
imull
pop
arpl
xchg
cltd
cwtl
and
or
jb
mov
test
pop
aad
shll
popa
lret
bound
lock
lock
arpl
cs
xor
lcall
push
mov
aaa
insl
shrl
cmp
out
imul
pop
xor
fisubl
enter
outsl
jo
aaa
fs
lahf
mov
scas
in
add
jmp
dec
jl
iret
add
push
out
mov
jmp
mov
rclb
sti
out
sub
lret
jmp
jne
xchg
lret
xchg
jmp
jg
cmp
insb
sarb
nop
lea
xor
xchg
lods
mov
adc
add
jmp
out
sbbb
xor
repnz
outsb
sbb
inc
iret
push
movsb
mov
in
or
bnd
jmp
xor
mov
jmp
xchg
and
adc
mov
fwait
jecxz
jmp
push
sub
lods
mov
insl
nop
mov
mov
pusha
jmp
jbe
adc
jo
sbb
out
jle
jmp
sub
mull
cli
in
xchg
cmpb
stc
into
xchg
or
jo
loope
scas
jmp
ds
mov
pop
roll
aam
cmc
and
lods
xor
test
adc
sub
jmp
pop
sbb
jmp
fxch
ljmp
jmp
jb
mov
loope
dec
mov
push
addr16
test
es
or
fucomip
xchg
and
popa
adc
xor
dec
xor
push
sti
mov
dec
lods
cmp
or
insl
fistl
mov
add
or
lret
leave
insb
jmp
xorb
mov
xchg
cmpsb
jmp
cli
fistpl
int
lods
out
sub
jmp
sbb
jnp
mov
scas
sub
dec
xlat
adc
sbb
jne
and
mov
push
loop
or
sub
xchg
pusha
jmp
ss
outsb
inc
and
push
jge
jmp
inc
ret
pop
fs
inc
pop
test
push
call
sarl
jmp
cmp
jge
jmp
pop
imul
inc
ljmp
lret
imull
mov
cmp
mov
shl
sbb
xchg
push
imul
and
out
xor
fucomi
mov
subb
test
loopne
lods
adc
push
fdiv
and
jbe
cmp
xchg
add
jp
sbb
pop
mov
adc
std
inc
push
push
out
xor
xchg
sahf
jno
gs
outsb
push
xchg
je
push
mov
clc
mov
lods
ror
inc
inc
jmp
add
iret
jmp
jg
ret
andl
dec
mulb
add
cli
subb
jmp
sub
mov
jmp
inc
in
and
adc
jmp
xor
jns
and
cwtl
jmp
ficoml
jecxz
enter
lds
mov
imul
sub
shrl
mov
call
fcoms
sub
mov
imul
movsb
xchg
mov
outsl
jmp
leave
mov
insl
jo
push
mov
shlb
sbb
jmp
jl
pop
test
cmp
lret
mov
cli
outsb
jno
ds
sti
subb
xlat
scas
add
nop
jg
sub
scas
push
adc
xrelease
xor
sub
lods
icebp
loopne
push
jmp
incb
jb
aaa
jns
jmp
push
inc
mov
jg
std
jmp
or
ret
shr
pop
fcmovb
repnz
sbb
jmp
push
fimuls
jge
jbe
pop
dec
loop
scas
and
mov
push
aad
and
lahf
fxch
jmp
es
or
xor
pop
xchg
popa
mov
xchg
in
sbb
xchg
std
rorb
mov
sub
stc
js
or
jb
xchg
inc
push
imulb
in
out
jl
jnp
or
mov
jmp
adc
lods
inc
sti
push
dec
xchg
jmp
mov
das
jmp
std
int
inc
aas
xor
add
jg
in
popf
idivl
fimull
or
fmulp
std
dec
ljmp
cmp
xor
sub
lods
fwait
gs
xchg
mov
mov
mov
jle
mov
mov
jmp
loop
aad
mov
xor
data16
lret
test
enter
jbe
xchg
je
int
dec
jnp
mov
rcl
adc
xor
call
outsl
int3
sarl
push
xor
jnp
out
pop
hlt
enterw
push
jo
mov
sbb
push
sub
xor
dec
or
pop
lcall
fdivp
xorl
sub
scas
js
adc
pop
cwtl
insb
sbbb
cs
pop
out
iret
fnstenv
jmp
fstpl
test
popf
and
push
jae
mov
icebp
scas
mov
lret
or
es
lods
mov
lcall
adc
lahf
call
add
jge
mov
or
dec
imul
sbb
movsl
jns
je
inc
lods
lahf
mov
enter
adc
mov
pop
jmp
clc
ds
nop
dec
cmp
jmp
popf
pop
pop
push
dec
fcomps
sub
mov
mov
pusha
lock
dec
insl
dec
stos
jmp
fidivrl
mov
add
push
test
in
sbb
xchg
sahf
or
popa
std
add
mov
mov
push
push
jmp
arpl
mov
jns
fcoms
out
testl
jle
scas
add
and
cmpsl
int
sbb
jns
sub
mov
stc
pop
in
pusha
stos
jp
cmp
outsb
loope
rclb
jl
mov
sub
xor
mov
jmp
cmpsb
cld
or
sti
push
xor
lock
inc
adc
xor
lret
lcall
xchg
imul
fst
mov
movsl
inc
movsb
inc
xor
addr16
mov
cwtl
jmp
cltd
cmp
shrl
cmp
pop
sub
inc
inc
movsb
imul
inc
jo
or
out
pop
or
mov
js
jmp
pushf
jne
jp
idivl
in
fadds
sbb
mov
insl
jmp
jle
inc
repz
mov
pop
pop
fldcw
lods
add
xchg
jg
add
in
dec
fwait
push
mov
insb
popf
push
stc
dec
pop
loop
lods
mov
xadd
ret
xor
mov
lods
fistl
inc
pop
xor
addl
jmp
adcb
inc
iret
jp
xchg
jbe
adc
inc
into
out
mov
jmp
mov
fs
xor
jbe
jge
adc
jmp
fisttps
pop
mov
das
jbe
movsb
push
sbb
sub
push
sub
cwtl
mov
cmc
nop
stos
adc
in
mov
cli
movsl
xchg
jno
mov
xchg
mov
pop
lods
iret
mov
daa
xor
xor
inc
out
push
repz
lahf
stos
mov
jmp
pop
repnz
enter
je
jmp
fidivrs
sub
jmp
mov
mov
mov
push
sbbb
negl
cmp
push
out
mov
sahf
je
or
aaa
push
push
mov
sbbb
sub
xchg
lods
jne
jmp
adc
es
pop
or
push
mov
push
sbb
nop
and
jmp
push
mov
mov
js
jmp
push
lods
lret
fisttps
xchg
scas
out
and
and
xor
add
test
xlat
pop
das
aad
cmp
and
shrb
pop
int3
jmp
xorl
push
dec
sbb
daa
movsb
jmp
loope
inc
fcomi
fsubl
cmp
sub
cmp
sbb
lods
cmpl
pusha
xchg
popf
insl
mov
jmp
jno
ret
push
int3
mov
pop
rcrb
les
hlt
in
adc
xor
roll
push
out
mov
into
or
mov
and
adc
jmp
stos
arpl
mov
sub
jmp
adc
notl
leave
jo
push
cmp
pusha
cli
les
cmpsb
xor
stc
sti
adc
roll
leave
sub
mov
push
frstor
mov
sub
push
jmp
sub
jmp
scas
mov
or
sub
cmpsl
arpl
cwtl
sti
xchg
jl
mov
xor
lea
mov
sbb
rcr
out
cli
pop
fs
test
push
cmp
inc
test
shrl
lds
dec
outsb
mov
push
sti
push
fisttpl
outsb
out
or
les
sbb
jmp
push
inc
sahf
lcall
mulps
or
add
mov
adcb
shr
je
fsubr
mov
mov
test
ljmp
std
jbe
call
lods
inc
or
and
lods
sub
hlt
in
lock
insb
jecxz
ljmp
ljmp
mov
rclb
cmpsb
fisubl
sub
pop
je
sbb
fsts
dec
imul
sti
sub
testl
mov
sub
sbb
sti
int3
popf
scas
adc
lret
cmpsb
jg
xor
jge
enter
test
pop
and
aam
mov
jmp
push
jno
sub
daa
stos
outsb
enter
movsb
jmp
test
mov
scas
icebp
xchg
or
inc
mov
data16
adc
scas
imul
sti
cmc
clc
hlt
jmp
and
push
inc
jmp
aam
jno
push
or
fildl
aas
jmp
sub
mov
xor
icebp
movsl
jmp
or
jge
jecxz
jnp
xchg
sbb
scas
and
adc
mov
es
xchg
push
mov
jg
inc
push
mov
lods
test
adc
outsb
jns
push
pop
push
jmp
les
xor
mov
xchg
fsubr
push
adc
ljmp
iret
fistps
ret
testl
jmp
in
out
jmp
mov
adcb
jl
lods
popf
iret
and
pop
js
push
jo
xchg
outsl
insl
jecxz
lock
add
mov
mov
fsubrl
pop
test
lods
mov
xchg
es
pop
inc
xchg
mov
loope
xchg
or
pop
add
das
fwait
sbb
xchg
dec
lret
xchg
mov
cmc
jo
push
test
pop
ja
sbb
dec
ss
mov
imul
xchg
and
imul
das
daa
mov
mov
xor
mov
xchg
xor
movsb
hlt
jns
jl
fcompl
daa
jp
add
sti
inc
sbb
push
adc
or
pusha
test
ret
xchg
into
popl
jp
lods
pop
ds
mov
xchg
and
jmp
add
fs
xor
mov
fcmovbe
lret
outsb
inc
es
mov
fcmovnb
loop
xor
inc
sub
imulb
andl
insl
insb
lods
popa
and
mov
scas
xor
or
jp
xor
mov
orl
mov
mov
ljmp
xchg
ja
fcompl
idivb
sub
outsb
sbb
shrb
lods
mov
ss
cld
clc
cmc
add
sbb
fildl
sbb
jo
int3
jmp
cmp
icebp
into
mov
lods
testl
dec
mov
xor
jmp
inc
std
and
packuswb
jmp
cmp
into
dec
and
aaa
pop
mov
loopne
lods
add
inc
pop
cmp
jb
xlat
sbb
and
lahf
and
inc
mull
push
imul
int3
push
movsl
cmp
dec
scas
push
adc
loope
cmpsb
clc
jmp
lock
inc
pop
inc
push
fs
loop
aas
dec
mov
jp
xor
xchg
lahf
lods
pop
stos
sbb
mov
rcll
cmp
in
dec
push
sbb
push
jmp
mov
mov
mov
inc
lret
ret
or
test
test
dec
int3
lods
mov
or
arpl
jmp
insb
hlt
mov
jmp
or
mov
dec
pop
sti
mov
sbb
cmc
out
lods
cmp
inc
adc
jp
jmp
and
ret
divl
ljmp
cmp
out
fisubrl
ds
xlat
push
or
test
jmp
cmpsl
subb
aad
mov
outsl
mov
fwait
jle
test
scas
out
mov
cmc
leave
dec
jo
adc
xchg
daa
cmpsb
xchg
jns
jo
ja
jmp
loope
arpl
jg
test
sbb
sbb
scas
mov
xor
movsl
push
sbb
pop
and
inc
push
imul
arpl
cmpsl
scas
fmul
pop
stos
js
mov
push
mov
out
jmp
jne
rcrb
xor
leave
jge
cmpsb
pushf
jbe
sub
jecxz
xchg
jmp
mov
lcall
jecxz
nop
sbb
lea
fidivrl
icebp
roll
add
sbb
inc
jne
mov
adc
jle
fstl
imul
insl
jmp
sub
mov
outsb
jp
dec
fcom
or
jmp
js
je
push
xor
cmp
sub
scas
outsb
mov
add
cmpsb
mov
push
and
nop
imul
mov
scas
fimull
cmc
sub
xlat
sbb
test
lcall
adc
int3
jmp
or
jle
xor
push
or
dec
inc
mov
movsb
pop
or
cli
jecxz
add
mov
stos
cltd
lods
jl
aad
inc
fwait
xchg
xchg
jmp
pop
jp
or
push
xchg
cwtl
xor
test
adc
mov
je
cmc
jmp
dec
int3
push
xchg
test
fs
push
pop
dec
scas
xor
imulb
rcrl
stos
or
inc
leave
mov
and
push
imul
sub
push
add
fstp
loop
shrb
push
adc
test
jmp
push
rcrl
scas
dec
cld
cmp
jmp
inc
jmp
sbb
jmp
jns
outsb
xorb
lods
sbb
mov
ret
mov
fcmovnu
jmp
in
inc
mov
adc
testb
jmp
push
inc
xchg
jmp
xor
ja
ds
cld
cmp
fiaddl
nop
pop
jmp
push
inc
mov
adc
cltd
jns
lods
jmp
mov
ja
inc
test
in
cmc
dec
and
jmp
sub
jecxz
dec
jmp
loope
aam
push
out
jmp
mov
rolb
sti
jae
out
dec
pop
jmp
subb
xlat
outsb
jmp
mov
daa
vmovss
push
push
jp
fs
lret
shrb
nop
jo
std
movl
fs
aas
cmp
test
adc
shr
mov
pop
or
int3
cmp
dec
xchg
mov
cwtl
scas
notl
sbb
push
or
and
sub
fimull
mov
scas
jmp
mov
mov
or
jmp
pop
leave
add
lret
dec
mov
xchg
stos
push
addr16
pop
mov
test
int3
mov
scas
in
inc
and
addr16
inc
jmp
pop
jo
push
addb
mov
sbb
sub
icebp
sub
scas
scas
push
sub
int
repz
testl
fisubrl
xor
wbinvd
inc
mov
jo
cmp
jae
cmpsb
inc
dec
cmp
add
nop
sub
cmp
dec
mov
mov
mov
pop
ljmp
fistl
push
stos
lods
arpl
movsl
outsb
sti
add
stc
sti
lea
aas
sub
lock
add
push
dec
cmpsl
mov
out
lcall
jmp
cmp
and
and
mov
sub
orl
sbb
pop
pop
push
jmp
popl
add
push
shr
pop
dec
imul
pop
cmp
cli
clc
outsl
jmp
pusha
push
jmp
cmpsb
jmp
push
xor
out
jmp
push
mov
mov
add
sbb
push
mov
cmc
push
sar
popf
inc
sub
std
pop
push
adc
jmp
xchg
pop
push
ficomps
int
js
and
repz
sub
sbb
jg
jmp
fcmovne
dec
pop
ja
push
dec
jl
aaa
add
mov
int3
or
jmp
cltd
jle
outsl
fdivl
adc
jns
out
lods
and
dec
enter
push
adc
jle
mov
lcall
pop
repnz
cmp
pop
mov
cmp
fisubrl
xchg
bound
sub
lcall
addr16
and
mov
xchg
repnz
fldpi
test
jnp
and
xor
daa
dec
push
repnz
xor
inc
rolb
xor
mov
int
in
or
or
imul
adc
je
or
xlat
insb
jbe
jecxz
mov
dec
jmp
int
cmp
xchg
scas
cmp
repnz
and
addr16
or
push
push
jmp
fimull
fisubs
jmp
enter
push
adc
jmp
clc
rcr
inc
pop
adc
inc
mov
and
jmp
lea
cmpsb
dec
or
lods
lods
fcomp
inc
add
cmp
loope
arpl
popf
mov
jle
sbb
jmp
mov
fwait
pusha
lods
jne
and
fsubr
push
adc
mov
mov
push
jmp
bound
jo
aam
push
in
jbe
mov
int
adcb
fwait
pop
repz
movsl
mov
cli
mov
lock
xchg
int3
arpl
mov
fdivrs
mov
push
sub
and
in
dec
jno
jmp
stos
lods
dec
inc
clc
jge
adc
xor
test
inc
jmp
sub
mov
ljmp
call
rcl
sbb
xchg
jno
mov
sbb
xor
jle
iret
dec
jne
push
fs
jecxz
es
in
push
push
sbb
mov
sub
lret
sub
imul
dec
leave
scas
push
nop
sub
int
daa
xchg
add
jmp
or
cmpsb
in
fucomip
out
lds
adc
cli
pusha
sub
das
xchg
into
inc
aas
and
data16
and
mov
ljmp
shrl
outsb
xor
mov
jmp
movb
lcall
push
cmp
subb
add
pop
jmp
jmp
jmp
mov
pop
outsb
xor
fs
cvtpi2ps
bound
mov
insl
jns
jmp
mov
jmp
push
cmp
jmp
xchg
outsl
inc
clc
jae
pop
jmp
sub
xchg
stos
test
or
dec
ret
push
jge
jmp
cmp
pop
sbb
mov
mov
aas
subb
in
insb
cmpsl
push
jmp
pop
sbbl
out
aam
cmp
xchg
jmp
imul
dec
jmp
lret
and
fisttpll
sti
hlt
shll
imul
shrl
inc
mov
pop
cld
sahf
or
cmp
out
push
fidivl
sbb
xlat
js
mov
and
fwait
jmp
into
in
ss
jmp
inc
mov
mov
or
sahf
jne
push
add
aaa
add
jbe
xchg
jns
jmp
movsl
fsubs
mov
cs
jnp
xor
mov
nop
jmp
xchg
dec
pusha
popf
jl
xchg
cmp
movsl
or
xchg
mov
jmp
cmp
mov
jb
push
jmp
pushf
test
xlat
outsb
sub
popf
mov
sub
or
sub
cld
ds
or
add
adc
neg
add
mov
cmc
xor
mov
sbb
and
lcall
dec
and
sub
push
cli
notb
je
jmp
inc
mov
lea
jl
inc
clc
inc
cs
mov
imul
mov
jmp
or
jno
in
outsb
clc
jmp
inc
pop
lock
and
movsb
dec
imul
fstl
xchg
and
pop
aad
mov
cmp
hlt
add
dec
outsl
pushf
lods
idivl
cld
xchg
ret
xchg
xchg
adc
adc
add
mov
cmp
mov
pop
pop
loop
jle
cmp
or
jmp
adc
push
jmp
sub
scas
ja
lahf
jmp
cmp
sub
fdiv
in
inc
cmc
mov
xor
in
lods
imul
sbb
xchg
and
idivl
rolb
cltd
dec
inc
lods
mov
pop
xchg
or
ljmp
push
ja
fsubr
insl
test
jmp
sbb
ret
mov
mov
or
jle
lock
repz
sbb
jmp
loop
push
fdivp
push
xchg
jmp
test
ja
lods
out
daa
test
push
daa
sub
adc
or
push
into
outsl
adc
ss
push
std
pop
adc
cld
dec
movsl
jae
push
mov
lcall
rolb
jmp
loop
flds
cmp
jmp
inc
xor
lcall
lods
insl
xchg
idivl
movsl
iret
jmp
mov
pop
das
xchg
sub
mov
in
rcl
and
adc
cmp
mov
dec
cltd
jmp
arpl
push
jmp
mov
das
movsb
xchg
mov
daa
pop
push
sbb
xor
mov
jbe
jb
jmp
pop
ljmp
dec
icebp
fsubrl
dec
subb
out
fwait
xor
cli
or
insl
lret
sbb
inc
xchg
lods
iret
add
outsb
fs
sbb
aaa
or
jmp
fdivrp
lock
adc
mov
xlat
rep
fs
pop
jmp
je
dec
in
cmp
lods
push
pop
xchg
dec
mov
or
pop
push
into
fld
cmp
jmp
dec
pusha
pushf
popf
cmp
jae
and
xchg
mov
je
sar
lods
dec
jns
mov
sub
or
sub
and
sbb
in
shr
test
cmp
mov
clc
not
lods
xchg
repz
sahf
dec
mov
and
outsb
dec
cli
or
lods
or
push
pusha
mov
push
push
repz
mov
sbb
and
int3
inc
mov
xor
and
jmp
mov
sub
dec
stos
sub
fisubl
movsb
dec
mov
mov
movsl
xor
cmp
imul
pop
out
sub
cld
movsb
push
xchg
jmp
sub
and
cmp
lcall
add
fildl
int
inc
loopne
shll
lret
push
and
lds
adc
push
aad
jmp
outsb
xor
rorl
lret
lods
jg
xor
inc
or
xchg
push
pop
mov
jmp
adc
and
cmc
hlt
lcall
and
push
jmp
push
aam
mov
sub
jg
es
loope
outsl
jb
int3
jnp
jmp
xchg
in
stos
xor
sete
test
mov
push
and
into
hlt
mov
gs
sbb
outsl
mov
pop
cmp
sbb
xchg
mov
inc
jmp
add
jbe
lods
bnd
jns
or
stos
movsl
jmp
jb
outsl
lock
nop
movsl
lahf
add
jno
jle
stos
loope
arpl
movsl
out
xor
sbb
sbb
and
inc
sub
into
repz
add
fsubrl
jmp
pusha
hlt
das
insl
cli
pop
xchg
sub
sub
push
pop
or
lock
dec
mov
xchg
cmp
adc
and
sahf
xlat
cmc
repz
jns
sbb
data16
orl
scas
roll
lret
lcall
sti
inc
popa
imulb
sbb
pushf
jmp
cmp
int
jns
lods
add
pavgw
pop
pop
cltd
repnz
jmp
clc
cs
jmp
ret
sbb
sub
fisubs
mov
lods
jnp
push
hlt
or
mov
shrb
jecxz
enter
inc
xor
jmp
sbb
and
mov
fidivrs
icebp
movsb
insl
xchg
in
dec
xchg
mov
fucomp
rclb
ficompl
leave
in
loope
mov
arpl
inc
adc
xor
xor
jmp
sub
jne
pop
fldt
mov
xchg
push
cwtl
and
and
das
mov
mov
cmpsb
or
lods
cmp
in
inc
ja
cmove
popa
loopne
sbb
jmp
jge
fbstp
cmp
out
pop
test
jb
jmp
xor
add
fisubl
mov
int3
pop
sarl
gs
add
je
xchg
sub
jle
gs
data16
and
fsubrl
pop
push
push
fists
xor
jp
inc
fst
sub
call
and
imul
sub
xor
inc
sbb
or
add
pop
cmpsl
ret
add
in
clc
outsl
push
jbe
add
jmp
js
mov
stc
sbb
sub
out
pushf
and
push
jmp
pop
sbb
jmp
scas
addr16
idivb
or
cwtl
fwait
call
rorl
mov
cltd
jmp
push
popf
cmc
jmp
fwait
push
repz
lea
add
push
xor
stos
lock
jns
hlt
dec
popf
out
adc
xor
es
or
jmp
jno
inc
sub
aam
mov
dec
nop
addr16
pop
daa
shlb
jmp
leave
cld
push
out
push
test
xorl
in
sub
or
adc
sbb
iret
jmp
inc
push
lcall
shl
sahf
lods
and
jmp
cs
movsl
ret
jmp
outsl
dec
fcmovbe
sbb
xor
pop
sbb
jo
xor
adc
ret
and
movsb
sub
fistpll
or
jne
xor
lods
orl
scas
insb
mov
jmp
cmpsb
push
adc
divb
xchg
enter
rorl
and
xor
jmp
dec
sub
mov
scas
jge
addr16
push
lahf
test
clc
adc
fisubrs
out
cmc
push
mov
xlat
add
sti
fldt
mov
or
lods
jnp
xchg
cmp
xor
jle
add
mov
punpckhdq
idiv
mov
insl
jmp
jl
mov
jmp
in
ss
neg
fmull
jmp
pushf
test
sub
or
pop
add
jmp
call
add
scas
xor
mov
in
in
xor
call
jmp
or
aaa
jg
cmp
fcoms
add
fsubl
mov
push
js
hlt
cli
jmp
shl
fwait
icebp
test
jmp
mov
imul
push
and
mov
lods
fcoms
lahf
mov
adc
test
iretw
je
mov
xchg
jmp
add
nop
sub
lcall
sbb
and
xchg
std
mov
mov
adc
pop
icebp
push
add
inc
imul
push
mov
xor
pushf
cmp
add
lods
sub
ljmp
jmp
jg
push
and
jns
repnz
pop
bound
add
into
inc
mov
daa
sbb
repz
insb
or
cwtl
scas
pop
dec
push
pop
sbb
in
jns
add
loop
jmp
leave
xchg
sbb
xchg
lods
push
jl
mov
jle
lock
sub
lds
ss
mov
fwait
lods
jmp
scas
push
loope
dec
lcall
insb
jmp
icebp
jo
out
sub
aas
cltd
push
sar
jmp
std
inc
push
out
test
sti
fisubrs
jmp
sub
mov
jmp
and
lcall
mov
jmp
call
jmp
adc
add
dec
add
push
cmp
jl
inc
xchg
jmp
and
jg
std
cwtl
adc
cmp
push
jmp
test
push
out
push
in
cmp
mov
jmp
test
inc
js
cmp
jae
sbb
in
push
rsm
call
jmp
and
mov
insb
adc
and
cmp
sbb
add
cli
das
mov
roll
aad
jmp
lret
sbb
lods
mov
mov
arpl
jmp
gs
popa
and
jmp
out
aaa
lods
dec
out
jmp
movsl
add
popf
jmp
mov
adcl
inc
cltd
adc
ds
xchg
adc
push
xchg
movsl
psubd
aas
data16
std
movsb
js
mov
mov
lds
loopne
dec
jmp
clc
aas
xchg
cmp
cmpsb
roll
dec
stos
jmp
and
sbb
jmp
push
je
pushf
sahf
jb
jb
fcmovnb
sbb
xchg
cwtl
mov
pop
frstor
xchg
btc
adc
jg
sbb
jns
stc
xchg
stc
sub
in
push
inc
xchg
rorb
pusha
jmp
jno
fldt
lcall
lds
jmp
iret
or
xor
add
and
aad
in
mov
push
sbb
pushf
outsl
imul
sbb
addl
inc
insb
jmp
sti
xchg
fldl
pop
xchg
mov
hlt
mov
je
popa
icebp
mov
lods
cltd
stos
jae
sub
sbb
cli
xchg
sub
xchg
pop
stc
mov
arpl
call
out
mov
xchg
movsb
mov
jmp
pop
fmul
mov
sub
push
psubsw
push
scas
jmp
lock
mov
pop
pop
lods
out
in
xchg
not
lods
outsl
imul
mov
cmp
push
inc
addr16
jg
sti
ja
inc
sub
pop
notl
or
adc
lret
repz
sub
out
dec
jg
jne
xchg
fcmovnb
and
inc
sub
sub
loop
lret
jmp
test
pop
xchg
push
mov
jmp
pushl
lods
inc
xor
mov
jmp
fidivrs
test
mov
push
sub
test
scas
xlat
jns
jmp
xor
imul
pop
xchg
pushf
inc
sbb
inc
stos
cli
push
push
sbb
addr16
jmp
in
or
adc
pop
int3
jno
jnp
lret
scas
fs
push
out
clc
outsb
and
in
jmp
sub
adc
jmp
push
pop
test
shlb
dec
bound
scas
sti
out
jmp
inc
repz
sahf
push
fucomi
cs
xor
cmp
sbb
mov
pusha
lcall
jmp
mov
inc
jb
add
roll
xchg
push
sti
gs
pop
jmp
mov
icebp
mov
lret
loope
lcall
lods
cltd
shl
pop
xchg
or
rorl
pop
sti
es
sti
jmp
clc
cmp
jbe
es
xor
gs
jmp
cs
cli
pop
icebp
add
jo
adc
add
cltd
or
daa
jmp
push
js
mov
dec
mov
add
fidivl
cmp
cmp
and
mov
std
imul
jmp
or
xchg
out
in
push
scas
test
jb
fstl
fldpi
test
mov
fstl
lods
shll
stos
pop
idivb
movaps
clc
shr
jl
sub
into
hlt
adc
mov
pop
aas
sbb
mov
inc
shll
or
dec
adc
imul
pop
rep
ja
mov
and
add
inc
xchg
dec
mov
das
or
in
jbe
test
bound
mov
repz
push
jo
add
add
orl
dec
in
sub
push
dec
pushf
sti
stos
adc
jmp
fsubrs
ret
aam
jmp
imul
jno
xchg
add
fsubr
je
sub
cmp
testl
jmp
mov
movsl
mov
jns
jle
mov
sub
popf
pop
jmp
gs
jmp
ss
frstor
jmp
lea
jno
mov
fdivl
repnz
ror
cs
jns
int3
or
out
loopne
sbb
pop
xchg
mov
xchg
sbb
and
or
lods
es
sub
cs
push
repz
mov
or
pushf
jp
bound
pop
push
sbb
sub
std
sbbl
imul
std
and
fisubs
rorb
mov
pop
in
pop
mov
mov
adc
jb
mov
pop
sub
xor
or
sbb
jle
aad
xlat
es
fbstp
jno
pusha
outsb
negb
sub
mov
mov
sti
and
stc
lea
or
push
jmp
mov
adc
sub
mov
mov
jecxz
cmpsl
ret
cli
cmc
outsl
iret
test
fistpl
sub
pop
int
dec
ljmp
idivb
lahf
jmp
xor
fs
cmp
or
idivl
test
or
pop
aaa
pushf
imul
inc
rcr
dec
mull
jne
add
aam
lods
sbb
ljmp
jmp
mov
inc
scas
jmp
mov
pop
jns
loopne
rclb
pop
xor
dec
and
sub
in
xor
mov
scas
jmp
fisubs
dec
es
icebp
aaa
jmp
lods
add
xchg
jmp
aas
mov
inc
mov
pop
dec
pop
dec
lods
mov
pop
test
cltd
push
xor
push
jmp
testb
xor
sbb
cmp
sbb
jbe
scas
sub
js
sbbl
sub
cs
sbb
and
mov
add
add
out
dec
adc
js
mov
cmp
pop
pop
jbe
das
jns
pop
xchg
cli
or
hlt
mov
mov
dec
and
jnp
aad
adc
xor
add
xor
sub
jae
je
fsubrl
mov
dec
dec
jmp
xlat
adcb
dec
popa
jmp
pop
cmpsl
cmpsb
add
in
inc
pop
lret
pop
cmp
xchg
jmp
imul
jmp
xchg
sbb
jmp
and
xor
inc
xchg
sahf
jbe
les
mov
loopne
or
cmpsb
adc
push
xchg
fdivrs
adc
repnz
push
pushf
je
pop
movsl
lods
insl
stos
jge
pop
rorl
adc
jg
xchg
fimull
outsb
xor
cmpsb
pop
jmp
test
and
mov
push
roll
cmpsb
xchg
lods
mov
notb
arpl
sub
sub
cs
mov
mov
pop
push
lret
std
inc
mov
xchg
sub
in
clc
fsubr
repz
subl
sti
lret
imulb
or
inc
lret
xchg
mov
dec
sub
test
sub
mov
popf
dec
dec
and
or
stos
push
and
out
cmp
out
xchg
je
or
subl
mov
jno
xor
fs
dec
jmp
rorl
lock
imul
mov
mov
sbb
insb
or
lods
inc
jae
inc
sub
daa
dec
jmp
ss
xchg
mov
inc
jmp
rcll
or
mov
cmp
jmp
divb
sarl
test
jmp
mov
add
movb
and
mov
divl
pushf
jecxz
mov
mov
repnz
lret
mov
out
cmp
int3
data16
jmp
dec
pop
jg
addb
jp
daa
sbb
inc
jmp
add
aad
jmp
lods
mov
lcall
stos
sbb
add
sbb
ja
push
jmp
sub
test
and
mov
call
mov
scas
fldenv
push
jmp
dec
inc
stos
xchg
pop
adc
std
pavgb
sub
cwtl
int3
movsl
fmull
push
jno
imul
das
icebp
sub
rcrl
test
and
add
push
enter
fmul
movsb
outsb
xchg
mov
repz
lahf
sub
jmp
nop
in
lcall
stc
int
or
jne
outsl
clc
subl
push
aaa
sahf
adc
push
scas
dec
outsl
fisubrl
adc
jmp
inc
adc
xchg
mov
arpl
push
into
inc
pop
iret
leave
aas
add
sti
jmp
cli
ret
lods
add
adc
inc
cmp
cwtl
inc
daa
push
push
xor
pop
jmp
lcall
jmp
jecxz
imul
lea
vmovsd
adc
push
cmp
push
jle
loop
add
push
rolb
sub
sbb
dec
aaa
jecxz
dec
out
xor
inc
jmp
call
jmp
pushf
nop
mov
or
jmp
mov
aad
fwait
les
jmp
fucom
xor
mov
scas
nop
leave
adc
test
jmp
add
repz
mov
mov
inc
dec
jb
sbb
push
clc
repz
fwait
xor
push
lods
mov
sub
jmp
mov
cmpsb
lods
sarl
dec
leave
cltd
stc
sbb
call
pop
loop
faddl
or
jmp
int3
mov
jmp
sub
adc
repnz
cmp
add
add
jno
sub
rcrl
lret
lods
fiadds
sti
sub
jge
adc
loop
add
push
mov
mov
sub
mov
xchg
mov
lods
mov
xor
pop
lods
cmp
and
rorb
mov
xchg
out
dec
and
jmp
popf
iret
push
test
and
push
leave
or
add
jmp
in
fidivrs
sub
fwait
imul
push
lahf
out
cmp
dec
mov
insl
pop
jb
or
mov
xlat
call
jmp
xor
mov
jmp
jg
out
movsl
xchg
dec
popf
jmp
cmp
pop
inc
shr
sbb
mov
lea
lods
jbe
mov
rorw
clc
jmp
leave
jnp
adc
mov
mov
jmp
les
push
test
jae
or
cwtl
out
mov
jmp
insl
or
ja
mov
scas
mull
stc
sub
ret
and
adc
std
imul
jl
subb
adc
pushf
jmp
out
jle
or
mov
imul
mov
aam
xchg
fst
and
mov
pop
or
or
sub
clc
mov
jbe
jmp
stc
shl
push
popa
stos
mov
imul
jmp
add
sub
xchg
movsl
pop
mov
sub
pop
mov
out
pop
sub
ret
cmp
aad
arpl
and
inc
out
xchg
add
push
jge
push
xor
or
inc
imul
mov
into
jmp
mov
in
loopne
aas
dec
jmp
xchg
mov
scas
adc
cwtl
aam
jg
dec
scas
mov
mov
jmp
mov
outsl
sub
xor
ds
push
and
xchg
xchg
mov
jmp
pop
push
add
jne
jmp
dec
outsl
das
shll
pushf
pop
push
sub
cmp
xchg
or
cli
in
adc
fnstsw
mov
inc
push
sub
arpl
imul
inc
jl
jmp
adc
mov
lret
aas
pop
out
movsb
pusha
xorb
lods
int3
xor
jge
jmp
inc
out
adc
sti
xor
shll
mov
jo
in
sub
mov
mov
push
rolb
les
and
and
push
shl
jmp
jmp
mov
xchg
pcmpeqb
or
dec
inc
dec
sub
clc
push
sub
mov
push
push
lock
mov
jp
mov
mov
lret
out
jae
pop
dec
jge
dec
lret
mov
cmp
or
fdivp
jmp
jbe
mov
nop
pop
das
add
jb
movsb
in
and
ds
jmp
dec
or
cmp
mov
lret
or
xchg
push
adc
cwtl
jns
jmp
push
xchg
cld
dec
inc
sbb
sub
xor
sbb
fwait
cmp
mov
jle
mov
imul
add
mov
cmpsb
and
push
aad
add
xchg
add
movsl
jmp
cld
test
or
pop
push
jmp
jae
sub
adc
lret
cmp
xor
jmp
lods
stc
mov
scas
fcomps
into
scas
xchg
fistpl
les
sbb
sub
dec
xchg
or
clc
sub
xlat
mov
xor
jmp
pop
jg
pop
nop
pop
mov
fsubp
cmp
shrb
pop
scas
jnp
arpl
sbb
mov
xor
pop
add
sub
repz
or
out
loopne
mov
xor
inc
rorl
idiv
test
out
lea
jmp
shlb
nop
pushf
mov
sti
jmp
add
xchg
push
lret
outsb
mov
insb
lea
popf
shrl
jmp
push
out
rclb
xor
jmp
fs
sub
and
arpl
and
inc
out
aas
lcall
inc
adc
cmpsb
in
push
jmp
dec
lods
pop
inc
lods
out
push
sti
je
pusha
in
mov
jns
push
add
sub
ss
jmp
call
out
sub
xlat
push
stos
pop
jno
in
xor
xor
out
rol
mov
dec
mov
inc
push
fisubrl
jb
insl
dec
sbb
test
nop
cmp
jecxz
and
imull
test
cmp
jmp
add
jns
mov
sbb
jp
add
mov
jmp
push
popa
or
jmp
cwtl
in
adc
inc
movsbl
jnp
or
mov
add
or
nop
stc
cld
xchg
stos
jmp
in
rorl
adc
lods
mov
pop
push
and
das
in
movsl
repz
or
inc
xor
data16
jmp
jl
sub
push
jb
or
sbb
jmp
mov
pop
mov
xchg
out
jg
shl
mov
cwtl
dec
shr
jmp
sub
jmp
push
mov
stos
icebp
shrb
idivl
xor
jg
ljmp
and
outsl
jmp
add
jmp
mov
stc
outsl
jmp
xor
fbld
and
stos
jmp
xor
orps
daa
mov
popl
and
jmp
mov
pusha
or
test
add
int
jmp
sahf
enter
addr16
adc
hlt
loop
push
sub
lock
add
test
pop
and
push
cmpl
jmp
cmpsl
mov
xor
cwtl
sub
or
lock
jmp
inc
pop
repnz
xor
bound
xchg
mov
add
leave
pop
push
jmp
stc
in
out
cmp
adc
hlt
or
sbb
insb
out
fcmovnb
jmp
rclb
repnz
cli
std
mov
lods
jnp
cmp
testl
mov
fsts
lods
jmp
mov
sbb
jno
enter
jmp
mov
mov
mov
negb
pop
jnp
ja
or
or
cwtl
cmpl
add
jno
mov
and
addr16
arpl
fcoms
fsub
aas
jg
fwait
mov
cmpsb
or
fmulp
sub
cs
out
pop
xchg
mov
jmp
jbe
xchg
pop
pushf
mov
push
mov
sub
and
jmp
andb
xchg
cld
push
aam
xor
stos
outsb
inc
inc
pop
xor
ja
repnz
mov
sub
xchg
push
in
sbb
andl
mov
incl
mov
loop
xchg
mov
mov
push
cmp
mov
inc
xor
push
out
jp
bnd
dec
mov
sub
popf
in
jb
cmp
int
mov
rcrl
pop
ljmp
int3
jg
rcl
push
in
imul
dec
scas
pushl
lods
or
in
lcall
int
clc
scas
stc
dec
push
inc
jae
ss
xor
fucomi
ljmp
daa
adc
cli
fldcw
fstpl
and
scas
mov
fwait
shlb
xchg
clc
xchg
aam
movsb
sbb
push
jmp
mov
repz
jmp
mov
scas
fs
mov
jmp
fdivl
mov
or
sub
das
jmp
icebp
or
push
clc
sub
jmp
shll
les
adc
sub
xchg
jg
mov
pop
and
jae
int3
mov
sti
jmp
inc
mov
add
and
dec
outsl
xchg
outsb
or
mov
pop
into
divl
test
jmp
or
pop
and
jmp
loopne
or
daa
mov
jmp
jae
outsl
xlat
sub
jmp
rcrl
or
fmulp
and
jmp
push
mov
test
jle
addb
insb
and
std
dec
lret
cmp
or
jbe
jmp
mov
jmp
sub
mov
cmpb
iret
gs
xor
outsb
cmp
fucom
outsl
lock
fs
cmp
and
dec
pop
or
dec
jmp
xor
sub
xor
or
out
lea
mov
xchg
hlt
push
jmp
cmpsl
ficomps
push
mov
mov
loop
jnp
scas
and
sbb
and
cmp
pushf
dec
jge
mov
es
rclb
mov
pop
cmp
out
aas
scas
ss
and
mov
lret
fadds
xorl
cli
or
or
xorb
lcall
or
xchg
fldt
dec
nop
jns
out
fstps
cmc
adc
push
das
mov
sbb
test
test
stos
xchg
rcll
shrl
add
add
xor
and
sbb
outsb
imul
jmp
mov
call
jmp
loop
aaa
inc
cmp
enter
testl
inc
mov
or
lods
jmp
std
fisubrl
xlat
nop
jmp
cmp
jnp
sub
mov
jns
or
aad
aam
rep
test
outsb
inc
mov
adc
shl
pop
sahf
dec
mov
or
dec
stc
jmp
mov
push
add
test
out
cltd
cmp
push
jmp
cmpsl
jl
or
inc
pop
lods
adc
mov
cltd
mov
adc
outsb
movsb
jp
adc
out
add
push
jmp
pushf
jge
xor
js
jmp
fwait
mov
test
enter
sub
out
dec
cltd
subb
test
jmp
push
frstor
jnp
in
cltd
inc
mov
push
jmp
in
mov
imul
into
pusha
push
cs
hlt
outsb
mov
sub
aaa
sub
inc
pop
push
fwait
xlat
push
sub
mov
fstps
pop
jmp
mov
insb
xchg
jmp
sub
cmp
xchg
mov
cli
jge
mov
sub
dec
jmp
add
movsb
mov
aad
sti
adc
dec
mov
les
outsl
mov
push
cltd
or
sahf
aas
jb
cmp
cld
cmpsb
data16
jmp
and
mov
cltd
pusha
ss
push
jge
inc
sub
push
jmp
inc
xor
jmp
xchg
xor
adc
mov
lea
jb
jmp
lret
add
or
data16
lods
ljmp
and
stos
lret
xchg
loope
hlt
cmc
inc
inc
push
rdmsr
adc
pop
scas
sub
jbe
sub
sbb
bound
sarb
xor
gs
mov
and
subl
iret
pushf
pop
sub
lahf
mov
xchg
or
dec
push
cltd
jmp
dec
add
ljmp
in
sub
sub
ret
jecxz
lcall
gs
repnz
xor
ljmp
mov
stos
mov
fisubrs
outsb
stos
out
imul
pop
insl
and
shrl
repz
test
jmp
mov
jmp
xor
push
adc
sahf
jmp
insb
sbb
mov
cmp
pop
inc
xchg
dec
lahf
rep
ficoml
lea
int3
outsb
or
movl
mov
out
pop
adc
xchg
shrl
insl
stos
sub
imul
or
push
jmp
cmp
dec
stc
pop
sub
pusha
or
dec
inc
mov
pop
and
jmp
test
inc
add
sub
jmp
in
shrl
lods
sbb
insb
mov
testl
pop
mov
popf
imul
and
sbb
jmp
pop
or
inc
dec
and
popf
scas
fdivp
pop
jmp
and
mov
xchg
mov
and
xor
and
mov
push
popf
mov
pop
lods
inc
arpl
push
or
es
xchg
jmp
pop
out
cmpsl
cld
test
cmp
data16
sbb
mov
shrb
jmp
dec
test
cld
daa
mov
inc
lods
lret
push
loope
pop
xor
add
out
daa
pop
imul
and
pop
sub
cmp
jmp
adc
cmpsb
lods
push
orb
jge
jb
hlt
jmp
cs
xor
popa
or
icebp
inc
and
inc
xorl
adc
orb
sub
sub
jae
lahf
in
add
cmp
sbb
xchg
mov
jmp
clc
popf
test
jmp
in
mov
es
ret
jg
lods
xchg
inc
jle
xor
bound
adc
inc
sbb
and
mov
into
fs
xor
pop
js
dec
adc
aam
xchg
jno
mov
mov
imul
movsl
sbb
or
jmp
push
xor
or
mov
imul
out
jb
xchg
lods
push
insb
sbb
jl
dec
jo
stos
bound
dec
xchg
gs
jmp
insb
inc
negb
mov
outsb
pop
inc
gs
ljmp
or
js
jmp
mov
mov
in
and
sub
popa
cmpb
stos
pop
push
negb
cs
and
jmp
xchg
inc
cmpl
add
jmp
andl
sub
push
call
andl
scas
fwait
sub
nop
adc
insb
in
pop
jmp
add
mov
xor
enter
inc
or
sbb
lods
jns
fsubr
aaa
dec
fwait
xor
cmp
cltd
sahf
stc
insb
mov
movsb
pop
imul
mov
lods
ja
jno
enter
sub
cmpsl
ret
jge
sbb
testb
mov
pop
lahf
jmp
sbb
cmp
jmp
inc
lock
cmp
push
in
jmp
lret
sub
popf
stos
data16
dec
dec
mov
loopne
sti
jb
sub
in
addr16
jle
ljmp
popf
inc
out
mov
sahf
out
and
insb
roll
inc
jmp
rcrb
sub
jmp
out
mov
lret
incb
jmp
sub
cltd
push
cmp
mov
xchg
jmp
ret
shll
call
mov
test
jae
jns
add
lods
sahf
std
or
popf
adcb
jmp
cmpsb
cmpsl
pop
cli
out
jmp
dec
outsl
das
jp
xlat
stc
mov
int
hlt
mov
lahf
jnp
add
addr16
icebp
jns
rclb
or
arpl
test
in
lds
aaa
fwait
cmpsl
test
jmp
add
test
mov
xor
sbb
mov
bound
jmp
inc
xchg
ja
repz
push
aaa
jp
shll
mov
sub
adc
or
insl
filds
cwtl
inc
jl
mull
rcll
xor
popf
jmp
inc
fs
add
sar
sub
mov
xchg
sub
lret
fwait
lods
xorl
mov
or
mov
imul
mov
mulb
jmp
lds
ffree
xor
lods
add
adc
pop
push
out
mov
jmp
cmp
bound
out
ja
cltd
test
test
rorl
cmp
sub
repnz
pop
xor
lods
lock
jle
fstl
xor
test
dec
ljmp
sub
jle
bound
and
sti
out
lret
fsubrp
jbe
jmp
add
and
push
xchg
mov
in
fdivrs
and
jb
insb
adc
or
mov
fstpl
lods
into
sub
inc
ds
dec
jg
pop
xchg
adc
or
sub
pop
mov
jmp
jo
lret
scas
out
mov
mov
roll
arpl
jmp
and
xchg
cmp
aaa
aad
cmpb
pop
lret
adc
push
lock
mov
pop
jge
aas
and
jp
lock
sti
in
push
js
imul
inc
jo
jl
push
mov
mov
jmp
adc
and
testb
jmp
nop
scas
sbb
push
jmp
aaa
lods
into
mov
movsb
or
ret
sti
insb
xor
add
push
imul
test
sbb
and
jmp
sbb
add
mov
xchg
pusha
sbb
jmp
adcb
aad
push
jb
mov
cmp
or
fistps
cli
pop
idivl
pop
jmp
mov
imul
inc
jmp
into
movsb
cld
xchg
inc
sbb
jnp
pop
scas
xchg
imul
ja
jmp
lahf
cmp
jne
xor
jbe
jmp
jg
lcall
arpl
sahf
mov
das
js
je
cltd
bound
in
xchg
jle
pop
cmp
rorl
sub
je
xor
pusha
shlb
mov
pop
bound
mov
push
ljmp
xor
jle
fcoms
pop
cld
mov
or
jmp
xchg
dec
pop
in
add
cli
icebp
push
hlt
scas
inc
jmp
sub
js
xchg
mov
push
clc
std
pop
popf
or
mov
sti
out
fwait
or
cli
xchg
xchg
or
sbb
out
icebp
and
jmp
mov
dec
jmp
pop
clc
mov
jmp
js
push
testl
and
iret
jp
test
mov
cld
mov
pop
shll
sbb
clc
sub
sbb
lods
jmp
test
addr16
pop
sub
xchg
jmp
mov
xor
jmp
popf
jnp
inc
mov
out
jmp
adc
jmp
cmp
jae
jmp
outsl
scas
lea
push
add
mov
pop
inc
jno
lret
scas
dec
mov
mov
lock
sub
scas
or
mov
lock
mov
jmp
mov
sar
inc
xchg
leave
xor
adc
or
test
cli
stc
or
jmp
out
in
dec
and
push
fwait
in
shlb
aad
fisttpll
imul
cs
push
in
lods
cmpl
movsb
js
in
sub
out
cmc
sbb
hlt
outsb
mov
sahf
mov
jecxz
lods
fs
sub
or
jmp
imul
pop
jmp
mov
lret
mov
in
fs
fadd
imul
sub
sbb
xchg
cmp
lock
jmp
sub
movsb
add
or
push
push
daa
sbb
inc
pop
xchg
jmp
dec
inc
rcrb
inc
sub
and
jg
in
push
jmp
push
pushf
mov
push
pop
or
scas
stc
inc
ds
stos
add
scas
jnp
nop
lods
mov
aad
pop
std
dec
lahf
fldl
dec
repz
scas
xchg
xchg
scas
rol
sub
pop
push
fsubr
int
or
repz
fimull
xor
loop
and
incl
inc
insl
cmp
mov
or
out
jb
lds
popf
jb
outsb
testl
sbbb
jmp
sbb
je
inc
jbe
repnz
fnstsw
mov
lahf
or
or
or
outsb
popa
aas
shll
inc
jo
mov
jmp
addr16
cld
add
mov
xor
xchg
or
imul
adc
aas
imul
mov
popf
scas
lods
dec
lcall
and
jge
mull
jg
lods
xchg
sti
mov
jmp
add
jmp
sbb
mov
fwait
repz
popaw
inc
inc
bound
mov
sbb
mov
or
out
or
inc
andl
les
mov
jmp
inc
or
push
xlat
or
je
mov
jmp
push
jle
ret
jbe
jmp
mov
shrl
dec
push
pop
dec
sub
lea
xor
jmp
jnp
inc
or
jmp
loope
out
lods
sahf
ret
imul
xlat
or
pop
inc
sti
mov
movsb
sahf
mov
out
add
push
jmp
and
andb
xor
std
cmp
sub
in
add
jp
daa
xchg
cmp
jmp
pop
mov
in
adc
jnp
add
lods
lods
lods
loope
fsubrs
gs
and
inc
jmp
mov
mov
jmp
arpl
and
jmp
cwtl
mov
adc
or
mov
mov
fcmovnb
sub
mov
enter
jmp
lods
xor
outsb
int3
xchg
scas
fmull
pop
stos
mov
test
jo
jle
ds
lods
mov
xchg
test
aad
lret
pop
xor
bound
dec
mov
orb
and
sub
outsl
inc
scas
das
jmp
cltd
inc
mov
insl
jmp
mov
imul
out
jmp
xor
adc
pop
or
pop
add
cltd
jmp
lods
in
test
mov
mov
cmp
and
scas
jnp
jb
insl
lods
and
push
pop
mov
adc
popf
cmp
jl
sti
mull
lea
fcmove
sbb
cmp
pop
rcrb
jae
cmp
jmp
test
ja
popf
int
push
dec
push
nop
test
add
stos
and
into
pop
jo
fsubrl
repz
lods
push
sbb
mov
sti
sbb
or
jmp
cmp
sbb
jmp
dec
cmp
add
adcb
cs
into
pop
ja
jmp
cld
scas
sub
mov
jmp
ss
pusha
jmp
mov
repnz
fdiv
mov
pop
pushf
rorl
jge
inc
xor
and
xchg
cmp
jecxz
jle
fsubs
jbe
fnstcw
lods
arpl
dec
insl
xchg
pop
xor
jmp
jbe
jns
leave
or
jmp
outsl
scas
lret
jecxz
sarl
jmp
and
lock
call
outsb
sub
imul
xor
cmp
outsl
repnz
sbb
jbe
jmp
xchg
cltd
popa
push
lds
mov
xchg
bswap
lods
int
push
pop
mov
mov
es
adc
sub
nop
jne
gs
fs
lods
ret
mov
inc
jmp
fdivrl
cmp
xor
das
sub
insb
sub
push
sub
xchg
add
lea
mov
pop
dec
in
inc
lock
hlt
int3
daa
mov
lahf
jmp
iret
cmpsb
push
test
adc
inc
out
jmp
dec
lock
dec
ds
jmp
rorl
xor
inc
sbb
jmp
add
jmp
shr
pop
or
lock
adc
jmp
hlt
std
leave
mov
push
or
add
adc
ror
add
add
lahf
jp
or
push
hlt
cmp
xchg
rolb
in
insb
out
jmp
sbb
negl
xchg
mov
jmp
ret
rorb
jbe
dec
jmp
mov
mov
lods
out
cmp
xor
test
dec
jmp
or
decb
jmp
mov
push
mov
je
pop
mov
adc
inc
push
fisubs
cmpsb
arpl
stc
or
dec
jmp
mull
dec
lea
add
jns
or
pop
xor
outsb
fsubrl
mov
jmp
sahf
jge
movsb
lods
xor
popa
pop
and
scas
cmp
push
shl
dec
loope
popf
lods
pop
sbb
and
inc
pop
jp
push
cli
fnstenv
cltd
test
jmp
test
pop
sub
cmp
jmp
stos
jmp
and
lcall
xor
stc
fcomps
sub
push
mov
jmp
pop
xor
arpl
popa
dec
test
sbb
lea
and
jo
cld
xchg
xchg
adc
jmp
sub
inc
orb
pop
mov
dec
mov
adc
jmp
ficompl
loopne
out
ja
sbb
push
sub
xchg
je,pt
mov
insl
mov
inc
stos
sub
shlb
cmp
shrb
push
scas
test
pop
sbb
ds
sub
clc
scas
dec
movsb
insb
jmp
shll
mov
pop
and
mov
in
mov
test
mov
clc
out
cli
rcll
push
fldt
lods
mov
jge
xchg
pop
sub
stc
pop
jmp
push
mov
xchg
sbb
xchg
and
sub
or
mov
stc
mov
outsb
enter
or
nop
pop
jo
sub
bound
iret
push
mov
sub
lods
in
mov
xor
cmpb
mov
jo
jmp
popa
mov
imul
arpl
sti
xor
icebp
fildll
jmp
cmp
stos
push
jle
shr
or
cli
fldcw
xchg
pop
or
scas
ficoml
decl
jmp
loope
xor
jmp
mov
pop
scas
jmp
mov
add
sub
shlb
insl
outsl
sbb
sub
mov
xor
jle
scas
and
add
into
notb
cwtl
jmp
pop
arpl
mov
bound
jmp
adc
xor
mov
adc
pusha
pop
dec
jmp
push
jno
into
xor
cmp
mov
iret
lock
outsl
in
out
in
jns
sbb
ljmp
nop
pop
stos
leave
insb
xchg
or
insl
aam
cmpsl
adc
mov
decl
nop
scas
adc
sub
subb
push
sbb
enter
test
insl
push
lods
leave
sbb
jns
pop
cmp
cs
test
adc
cmp
jmp
in
dec
jg
out
lret
outsb
mov
leave
jb
in
cmpb
cmp
divb
in
sbb
mov
mov
and
es
jb
jns
outsl
fimuls
add
jmp
mov
xchg
xchg
jmp
andb
insb
test
lods
sub
mov
sbb
mov
xchg
jbe
insl
arpl
repnz
loopne
scas
xlat
adc
into
pop
jmp
test
fsubl
daa
xor
call
lahf
pop
out
mov
sbb
icebp
sti
jmp
inc
dec
out
jnp
out
add
cmpsb
cs
adc
into
sub
add
test
sti
push
cli
popf
insb
sahf
fucomp
dec
inc
aam
push
cmp
lods
or
dec
jbe
jecxz
jl
jmp
lock
daa
sbb
and
or
dec
mov
lcall
push
and
xor
xchg
jmp
mov
pop
xchg
cmpsl
inc
sub
push
push
fcmovu
rcl
jg
and
call
jmp
test
sahf
clc
adc
lahf
push
cmp
and
mov
add
jcxz
jmp
mov
push
sbb
mov
cltd
imul
lods
pop
mov
in
adc
int3
aad
pop
add
aaa
daa
and
mov
mov
in
push
or
sub
inc
insl
cld
ds
jo
jg
dec
pop
mov
adc
or
jnp
pushl
pop
sub
in
lods
sbb
je
iret
or
popa
fmull
inc
jnp
sub
inc
andb
cmpsl
leave
jo
aaa
mov
push
mov
jns
scas
push
clc
fildl
mov
out
dec
iret
mov
mov
adc
je
xchg
pop
testl
es
mov
xchg
or
xchg
lods
sbb
cmc
xchg
shrb
adc
enter
ss
fisubrl
mov
aad
and
and
mov
adc
shll
lds
stos
mov
push
dec
stos
mov
dec
jmp
cmpsb
popf
test
dec
call
enter
test
and
xchg
aas
pop
jno
and
pop
cs
std
repz
or
sub
popa
push
push
add
addb
enter
jmp
xor
pop
inc
jmp
inc
es
jmp
adc
in
pushf
mov
test
outsb
cmp
sub
aaa
mov
mov
xchg
xor
jbe
cwtl
adc
or
popa
mov
rcl
push
sbb
int3
js
pop
into
iret
and
mov
mov
mov
jmp
cmc
sahf
test
or
jmp
orb
push
sbb
jns
or
and
inc
test
or
add
dec
add
repnz
push
sub
call
inc
lods
mov
in
cltd
or
xchg
jl
xchg
clc
das
movsb
loop
into
jns
mov
mov
jbe
jp
push
in
inc
dec
into
sbb
jg
cmp
arpl
pop
jb
sub
mov
push
pushf
xor
push
cli
mov
mov
or
inc
cmp
sub
lock
mov
mov
mov
leave
jmp
push
push
call
sahf
ljmp
xchg
test
add
jmp
out
jb
nop
subl
ret
xchg
out
jmp
cli
outsl
xor
dec
jb
xor
mov
or
mov
jb
dec
sub
sub
loopne
rolb
add
add
lods
lret
icebp
in
ss
push
mov
mulb
imul
and
sahf
jmp
sub
imul
push
ret
or
addr16
inc
xor
xchg
daa
loopne
sbb
mov
sahf
out
lock
or
adc
dec
daa
nop
sub
jmp
sub
sub
das
popa
orb
lret
jmp
adc
add
xchg
aaa
cmp
xchg
push
jb
ja
lods
clc
hlt
pop
jo
nop
jmp
fs
and
not
push
mov
stos
repnz
jae
sub
fnstenv
mov
mov
sahf
lock
adc
jmp
daa
inc
xor
push
jo
aas
mov
pushf
and
xor
sbb
call
inc
stc
arpl
fisubs
push
outsl
loope
sbbl
jp
xchg
negb
jmp
xlat
notl
popf
lods
cwtl
mov
ja
stc
mov
popa
fbstp
imul
mov
jmp
cmp
dec
or
mov
jp
std
add
cmp
jmp
lahf
bound
xor
inc
lods
adcb
mov
data16
push
sub
jbe
daa
stos
test
adc
negb
ljmp
add
cmpsb
jmp
xchg
xor
or
jb
add
sbb
negl
adc
jmp
adc
xchg
push
pop
xor
dec
cli
cwtl
in
xor
rolb
adc
ja
jmp
popf
mov
jecxz
mov
xchg
sbb
loope
cmpsb
out
pop
jmp
std
or
pusha
xor
test
mov
sub
rcll
jmp
dec
sub
xor
cmpsb
sti
jmp
icebp
popf
lds
mov
or
mov
ljmp
aaa
adc
sub
adc
and
pop
and
subl
lret
push
loopne
add
fs
pop
sub
and
lods
push
xchg
mov
dec
and
dec
jmp
xchg
or
movsl
jmp
out
cs
jg
dec
jmp
dec
inc
movsb
cltd
cmp
jmp
pop
mov
jmp
jae
inc
sbb
cmp
lods
mov
cld
mov
shr
divl
inc
jmp
mov
test
sub
js
sbb
sbb
pop
inc
push
cmp
pop
scas
xchg
jmp
xor
xor
sub
icebp
sbb
sbb
inc
pop
aas
xchg
and
jmp
mov
push
push
cli
imul
mov
mov
xchg
lcall
sbb
call
jp
and
xchg
mov
pop
xchg
xchg
sahf
cli
mov
or
int
pop
dec
in
jmp
add
sbb
lcall
lods
jo
mov
cmp
fdivl
outsl
mov
sub
mov
lret
inc
add
jne
jmp
pushf
or
cmp
loopne
cmp
ja
fmuls
fwait
sbb
aam
or
pop
and
cmp
jmp
or
aaa
mov
lods
sbb
hlt
iret
mov
cmp
sbbb
out
aas
lods
xchg
lahf
fsubrs
addr16
cld
pop
jmp
sbb
jb
cmpsb
shll
aad
push
fcoms
or
bndstx
fsubr
fs
inc
cmpsl
leave
push
lret
scas
fisubrs
mov
and
jmp
push
xchg
jp
imul
in
xchg
filds
mov
jmp
addr16
fisttpll
pop
scas
adc
int3
add
jmp
call
insb
mov
xor
in
jmp
jle
jne
rclb
dec
jecxz
jp
push
ret
cli
mov
and
mov
mov
test
in
sti
arpl
sub
sbb
sub
xor
add
pop
repz
btc
in
cmp
pop
dec
and
add
jmp
frstor
jmp
mov
mov
lock
pop
ret
popf
shl
mov
add
call
lods
in
lret
int
jmp
mov
cmp
mov
add
push
or
add
shr
test
push
in
mov
dec
push
jmp
mov
push
leave
xchg
or
jmp
sbb
loopne
not
fs
test
sbb
jmp
mov
lahf
dec
inc
enter
push
jmp
ficoms
jmp
and
jle
mov
mov
arpl
and
jnp
in
ret
pop
fwait
enter
cli
jl
adc
repz
pusha
and
mov
xchg
mov
pusha
jmp
adc
add
lcall
cmp
lret
insb
adc
fisttps
int3
jmp
jle
cmpsl
into
ss
add
dec
jp
mov
scas
insl
jge
outsb
bound
shlb
jbe
in
sbb
xchg
pop
push
or
jle
clc
jmp
ljmp
jne
sbb
loop
add
sahf
dec
xor
cmp
push
jbe
pop
dec
mov
pop
sti
push
mov
sub
or
and
adc
lds
xchg
mov
jno
push
pop
pop
xchg
jmp
xlat
cmc
mov
jmp
sbb
or
jmp
shlb
mov
mov
nop
adc
dec
xor
mov
call
pop
xor
pop
xchg
add
aas
fbstp
inc
test
mov
jmp
lea
cmp
cltd
sahf
add
add
in
xor
jmp
insb
fimull
lcall
fistps
out
sti
lods
sub
mov
or
dec
pop
sub
jmp
jno
mov
xor
jmp
sbb
cs
sbb
loope
decb
jg
repz
mov
or
jecxz
iret
inc
lret
mov
scas
jmp
aad
shll
jbe
jmp
xchg
scas
jp
into
aaa
jmp
add
inc
jae
adc
sahf
je
push
subl
jb
arpl
sbb
jnp
add
mov
movsb
sti
jge
mov
fistpll
hlt
jns
add
pop
and
inc
sub
lret
mov
insb
mov
imul
jmp
lods
leave
testl
dec
pop
xor
push
jmp
xlat
cmpsl
in
mov
dec
push
sbb
add
enter
jmp
cmp
mov
jns
xor
xchg
mov
ljmp
fnstenv
scas
outsl
push
testl
mov
or
pusha
jp
setle
fwait
jmp
xchg
fisubl
inc
idivb
lahf
pop
jle
add
dec
jmp
icebp
mov
inc
inc
es
nop
push
xchg
leave
pushf
sub
mov
movsb
pop
jg
cltd
pop
push
jmp
in
sbb
les
sub
cmp
dec
xchg
sbb
hlt
sbb
nop
sti
inc
into
fsubr
cltd
test
outsb
or
hlt
pop
fcomps
mov
cwtl
in
and
jmp
loopne
fisubrl
cmp
cmpsl
add
jmp
enter
dec
inc
jmp
xchg
mov
lock
xor
jmp
sti
cwtl
jmp
fcmovnb
ja
pop
xor
jp
mov
and
push
pop
mov
sub
xchg
inc
sbb
movsl
ss
mov
call
sub
mov
adc
fidivrs
ljmp
call
fs
inc
je
or
mov
add
rolb
pop
mov
dec
sub
cmp
cmpsl
loope
icebp
repz
and
xchg
mov
pusha
sbb
orps
pop
mov
fstps
add
dec
lods
imul
xor
add
adc
mov
push
jmp
ljmp
jmp
lret
sbb
jbe
sub
dec
loopne
mov
daa
pop
jp
sbb
cld
in
scas
je
add
jmp
dec
inc
xor
lods
jmp
rcll
outsb
lret
xor
jmp
daa
test
jmp
aam
hlt
cmc
stos
push
sbb
jbe
out
or
push
dec
sahf
jmp
ljmp
mov
mov
pop
icebp
out
jmp
enter
decb
int3
pushf
dec
loope
jmp
scas
loop
pop
ret
mov
add
in
and
bnd
xchg
jmp
out
push
jmp
and
add
or
sub
xchg
nop
lods
repnz
out
cld
mov
push
dec
mov
mov
leave
imul
add
sti
int
shr
in
loop
push
mov
mov
and
jmp
in
rclb
call
jmp
sbb
lret
int
mov
jmp
sub
xor
push
test
jmp
jo
cs
outsl
adc
das
js
out
int
mov
jbe
and
xchg
inc
lcall
mov
loop
jmp
imul
mov
or
xchg
push
test
push
outsl
xor
jmp
ffreep
mov
jno
call
jmp
mov
and
push
movsb
fbstp
push
sub
hlt
or
lods
cltd
mov
and
aas
and
nop
pop
sub
xor
ja
and
cmc
jmp
iret
adc
sub
out
ret
and
inc
jmp
mov
adc
jnp
push
sub
test
sar
jmp
sbb
xchg
js
lret
jmp
cmp
push
jl
lods
outsl
jmp
pusha
cmpsb
mov
pop
jns
or
sub
insb
jmp
in
or
inc
in
pop
add
inc
shrb
mov
bound
test
xchg
jmp
fildl
sti
jmp
push
addl
adc
fcmovnu
enter
xchg
xchg
inc
or
nop
cli
jmp
push
mov
cmc
cld
pop
mov
add
jmp
cwtl
push
jo
fs
jb
mov
cmp
add
int
mov
out
push
ss
push
jmp
aas
push
popf
adc
push
fldt
jb
pop
stos
es
jmp
in
push
shl
push
imul
push
add
es
inc
ja
jae
bound
lods
mov
test
cmp
dec
dec
xchg
inc
repnz
xor
pop
nop
and
and
shl
fsubrs
jmp
mov
mov
adc
pusha
stos
jmp
hlt
add
movsl
jmp
cmc
fwait
sub
in
jns
data16
fsubl
movsl
or
cwtl
frstor
mov
mov
mov
bound
lods
xlat
dec
pop
insl
add
pusha
sub
jmp
xor
jmp
mov
cltd
and
mov
jmp
into
inc
in
push
dec
jmp
mov
lahf
mov
clc
mov
scas
xor
js
mov
mov
inc
push
pop
sbb
jmp
rcrb
jb
in
ja
jae
xchg
sarl
movl
mov
addr16
pop
sub
test
rcll
repz
cmp
aaa
xchg
jg
fs
icebp
repnz
inc
mov
das
pop
out
jmp
adc
mov
inc
imul
jp
jmp
std
mov
mov
cmpsl
jmp
lcall
sub
push
sbb
jl
fisttpll
clc
jmp
int3
lret
lock
bound
push
aas
mov
out
fistl
sub
cs
fdivrl
jmp
mov
adc
in
mov
addb
or
or
and
mov
pop
rolb
mov
je
pop
jg
cmp
movsl
imul
mov
inc
addr16
fsubr
jno
cltd
mov
jp
clc
cmp
fdivrl
or
loop
scas
adc
popa
sarl
std
fwait
sub
cs
into
int
lahf
mov
lret
mov
xchg
jmp
jo
mulb
or
cmpsb
and
lods
ret
pop
sub
fiaddl
xor
cld
mov
cmp
lods
pop
jmp
mov
std
into
imul
or
imul
xchg
fcompl
out
sub
mov
sti
adc
test
repz
jmp
sbb
insb
and
adc
lret
or
pop
outsl
dec
test
imul
add
jmp
js
push
je
sub
jmp
and
pop
mov
ret
js
stos
and
xchg
test
cwtl
and
leave
lods
jecxz
pop
pop
jge
push
fnclex
sbb
xor
jno
mov
fsub
std
pushf
or
sub
repz
dec
mov
inc
scas
sub
dec
push
xchg
imul
out
inc
sbb
jmp
push
insl
rorb
xor
shr
jmp
test
out
pop
pusha
leave
jo
ja
in
xchg
add
ds
sahf
movsl
and
fldenv
jecxz
mov
inc
pop
mov
sti
scas
shl
push
inc
or
cmp
mov
jg
jecxz
inc
jle
adc
mov
jmp
mov
mov
jmp
shrb
imul
add
inc
pop
jmp
mov
cmp
pop
lods
dec
jno
or
add
sub
mov
ljmp
es
test
cmp
mov
jmp
ss
scas
cmpsb
sahf
icebp
pop
jmp
cld
and
cltd
ret
sub
mov
lea
jecxz
fwait
push
movsb
dec
cmp
or
lods
jmp
cltd
mov
sbb
push
cmp
xchg
mov
mov
fisubs
add
cltd
pop
out
sahf
jmp
sub
dec
imul
and
jle
jmp
inc
add
ret
cmp
or
insb
or
sahf
imul
cmpsl
jo
and
jmp
iret
mov
and
pusha
dec
jmp
jo
mov
jmp
nop
popf
pop
push
xor
js
mov
and
dec
or
imul
outsl
mov
daa
or
aad
fadd
mov
mov
or
sub
ret
div
sbb
sub
jmp
push
xchg
addl
inc
scas
mov
cmc
push
fimuls
lds
or
jmp
jp
cmpsl
repz
mov
mov
fmull
dec
jmp
xor
sbb
icebp
enter
inc
jmp
add
sbb
mov
imul
mov
cmp
sbb
int3
cmpsl
lods
push
mov
mov
in
lods
ja,pn
push
out
daa
mov
dec
imul
jae
jmp
jmp
lock
sub
out
jmp
and
add
pop
dec
jmp
aad
sbb
mov
mov
jmp
cmpsb
lock
push
shll
sbb
negb
push
jmp
ret
dec
jo
xor
or
sbb
subb
push
ficoms
sbb
and
leave
jmp
or
cmpsl
fisttpl
cs
mov
into
or
lods
add
fmul
jg
adc
inc
cmp
insb
daa
jbe
in
insl
adc
scas
mov
push
mov
jp
xchg
lods
loop
insl
in
mov
dec
in
outsb
scas
mov
pop
jecxz
cmpl
mov
xchg
and
loop
scas
or
lods
jno
subl
bnd
adc
pop
add
xchg
sbb
js
sub
fs
adc
xchg
hlt
ret
jmp
lods
push
rcrl
sub
pop
movsl
repz
loopne
cmp
xor
pusha
pop
jp
cld
push
rorl
sub
sub
negl
sub
lods
insb
jle
sbb
inc
xor
flds
gs
jmp
setae
rorl
add
jnp
insb
in
pop
mov
and
mov
jmp
cmp
outsb
jmp
or
or
popfw
jmp
mov
add
loopne
jmp
test
xchg
fucomip
insl
lods
cmp
into
mov
xor
test
and
aam
in
js
aad
dec
push
jmp
cmp
lods
loope
jp
or
add
dec
jb
and
sahf
pop
lods
jmp
add
test
call
fwait
jle
mov
adc
orl
enter
or
xchg
popa
dec
jmp
inc
pusha
xorl
adc
fs
xor
jmp
add
lret
cmp
je
jmp
lcall
jmp
inc
imul
cli
sti
icebp
jmp
add
sub
addl
sarb
pop
jmp
rorl
dec
rcrl
dec
lods
aas
gs
jb
mov
or
and
filds
xchg
outsb
adc
es
sti
ret
inc
sbb
jmp
jle
stos
imul
sahf
les
imul
dec
cs
jmp
stos
rorl
movsl
mov
push
inc
or
sbb
aad
mov
xor
call
loope
sub
lods
push
jmp
pop
dec
and
cld
add
cmp
jo
mov
mov
sbb
lahf
or
push
mov
test
outsl
adc
xor
jecxz
insl
xor
sub
sbb
or
xor
mov
push
call
or
cmc
jmp
mov
fmull
fnstenv
mov
lds
loope
adc
test
add
jo
adc
push
inc
fdivrp
lods
arpl
fmuls
dec
es
lcall
mov
insl
jmp
pop
fbstp
cli
sub
and
mov
ds
rorb
jmp
xchg
int
lock
jmp
xor
mov
jmp
loop
xchg
fldenv
mov
jo
cld
jns
fwait
mov
test
sahf
decb
and
xchg
aad
icebp
sub
dec
jmp
ss
lret
mov
xchg
aam
cmpsl
fsts
adc
enter
out
jno
push
jmp
jmp
xor
sahf
push
pusha
xchg
in
jmp
and
or
jmp
leave
lock
into
push
lahf
add
and
add
daa
jmp
cltd
pop
sub
cs
push
mov
and
js
add
into
std
push
jmp
pop
cmp
out
xchg
xchg
les
out
jb
add
or
mov
sub
and
pop
lods
xchg
lods
mov
ret
lcall
pop
fsubl
adc
iret
cmp
or
sub
jmp
mov
nop
xchg
in
dec
push
and
jb
outsb
pop
mov
mov
push
repz
xchg
jmp
into
lock
das
mov
sti
and
int3
icebp
xor
jmp
fnstsw
rcll
subl
cmpsb
jmp
jne
push
loopne
aas
cmp
stos
ret
addr16
sub
fs
mov
sbb
jbe
cmpsl
pop
stos
add
mov
sbb
lods
jmp
mov
popf
div
inc
xchg
jmp
dec
inc
movsl
lcall
xor
dec
mov
pop
inc
sub
outsl
inc
cmpsl
lcall
add
cli
push
mov
sbb
enter
imul
jmp
add
es
std
jle
mov
sbb
adcl
or
icebp
std
push
sub
sub
cltd
stos
mov
xchg
dec
div
mov
pushf
sub
inc
sub
jb
arpl
sbb
xchg
sub
cltd
aam
inc
inc
fisubs
aas
xor
mov
jmp
push
pop
xchg
pop
notb
pop
jmp
or
das
fdivrs
jmp
daa
ja
sbb
jmp
lea
outsl
xchg
and
cltd
lods
stos
out
cmpsl
push
or
in
or
jb
jmp
inc
pop
out
scas
or
jecxz
sub
lock
hlt
ret
pusha
test
jmp
mov
add
mov
jmp
leave
cmc
stc
or
dec
jmp
or
cltd
sbb
addr16
rolb
ss
adcb
jmp
movsb
dec
xlat
cmp
je
cwtl
jmp
inc
xchg
mov
jmp
sub
fldcw
mov
into
daa
stc
jmp
fmull
inc
jmp
push
mov
clc
stos
addb
mov
sbb
aaa
or
imul
inc
cmp
xchg
add
pop
adc
add
data16
pop
test
or
cwtl
or
movl
in
imul
mov
inc
push
mov
cmpsl
neg
repnz
rorb
insb
pop
sub
jno
jmp
daa
clc
stos
rcrl
and
jbe
mov
jmp
loope
inc
dec
data16
jb
mov
mov
adc
lods
mov
adc
test
cs
dec
je
lods
sbb
jns
insb
xlat
sbb
jmp
adc
ret
popa
leave
je
pop
mov
push
in
push
adc
push
jle
jp
jmp
in
pop
xchg
lods
leave
jmp
lock
fxam
sbb
sti
andb
test
cmp
jmp
xchg
cli
add
jmp
movsl
sub
pop
sti
stc
cmp
daa
loope
mov
test
mov
dec
sub
adc
sub
mov
cmpb
jmp
shll
push
jmp
mov
pop
ljmp
cmpsb
and
mov
pushf
outsb
push
aad
cmpsb
push
mov
mov
and
mov
scas
dec
push
test
outsl
stos
pop
fdivp
or
push
je
fldpi
dec
fcomps
cmp
dec
scas
xchg
cmp
test
push
and
insl
lods
push
icebp
sbb
fildll
add
fs
aas
jnp
ret
mov
jmp
js
mov
dec
iret
insb
repnz
mov
cmp
fs
iret
ljmp
aad
test
mov
mov
dec
jmp
lds
lock
ljmp
xchg
out
scas
les
jns
or
ret
add
dec
dec
test
out
mov
dec
mov
and
lods
movsl
xchg
add
mov
leave
repz
icebp
imul
inc
nop
add
jno
orl
shr
adc
xlat
ljmp
inc
jmp
push
stos
test
add
sbb
imull
jmp
adc
add
mov
jmp
pop
adc
jns
lret
jle
or
in
xor
cmp
sahf
je
sti
rcr
push
test
das
dec
adc
fdivrs
jmp
incl
test
orb
adc
fs
xor
js
inc
in
lods
pop
and
sbb
dec
push
pop
or
add
cltd
mov
and
cmp
pop
sub
and
inc
lretw
scas
and
addr16
mov
dec
scas
iret
loope
jmp
leave
jo
push
jle
push
jmp
and
adc
inc
insb
sub
out
mov
xchg
daa
or
inc
fldt
mov
stos
push
inc
push
cwtl
or
mov
push
cmp
push
jmp
je
push
insb
lods
jb
and
lods
test
jne
loope
outsb
mulb
scas
imul
cmc
aaa
add
cmpsb
outsl
jne
scas
and
jbe
sub
rcll
cwtl
jmp
pop
dec
mov
push
mov
or
cmp
jle
enter
lods
xlat
jp
sarl
sbb
cwtl
lods
ret
gs
adc
and
dec
rclb
out
nop
push
in
imul
imul
adc
xchg
xor
cmp
jle
cmp
jmp
or
inc
pop
cmpsl
movsb
insl
jmp
mov
gs
dec
push
scas
out
lds
lcall
das
and
test
cmovp
cs
or
sti
sub
and
lcall
test
pop
scas
rep
push
and
pop
out
pop
test
jo
jmp
loop
lods
imulb
movsl
inc
pop
adc
jnp
inc
int
or
sahf
push
mov
xor
jge
jmp
mov
clc
out
jmp
adc
lock
push
inc
out
jnp
movsb
sbb
push
fcomi
out
jmp
jecxz
subb
dec
jmp
js
mov
lahf
aas
push
cmpsl
std
outsl
add
jmp
fcmovnb
es
lods
jl
dec
pop
mov
subb
pop
jp
dec
popf
fidivl
sahf
icebp
or
jmp
and
sub
imul
call
in
jae
divl
and
pop
outsb
cmp
dec
push
jmp
dec
sub
stos
shr
mov
test
jmp
insb
jp
mov
add
aaa
sbb
jmp
lret
pop
rcll
ss
dec
lret
jl
and
jmp
inc
mov
add
jmp
mov
rcr
sub
add
jmp
ror
lds
jle
lods
ret
push
jns
inc
popf
pop
fisubrl
bound
push
jge
adcl
int3
dec
or
dec
xchg
sub
and
inc
in
mov
xor
addr16
lock
ds
test
mov
sbb
loop
add
sub
mov
jecxz
int3
mov
imul
outsl
clc
adc
and
insb
mov
jmp
inc
adc
inc
movsb
mov
fsubrl
cli
sbb
aaa
jmp
xlat
mov
xchg
mov
push
xchg
in
por
outsl
bound
sbb
ss
orb
sub
outsl
out
and
dec
pop
ds
adc
insb
nop
jmp
adc
dec
ljmp
add
xor
jnp
ss
adc
add
inc
in
stos
in
dec
sbb
je
sbb
fnstcw
pop
or
out
inc
jmp
and
sub
lcall
jmp
js
jg
mov
int3
jmp
mov
dec
fwait
add
lcall
loope
arpl
adc
or
push
mov
imul
sub
fistpll
xchg
pop
adc
push
dec
es
in
cmc
xchg
sub
jae
mov
lret
mov
lods
mov
rcrl
add
test
xchg
push
pop
xchg
test
or
push
jmp
jno
stc
dec
out
in
xor
fidivrl
cli
inc
repnz
jo
cld
sub
xchg
inc
out
std
jnp
and
or
cwtl
cmp
or
jmp
cmp
jp
sub
xchg
jmp
jle
cld
loopne
pushf
or
lcall
pop
sub
and
lahf
pop
jmp
je
xchg
test
fstps
jmp
mov
lcall
adc
jmp
inc
adc
arpl
push
or
jns
hlt
or
jmp
push
jmp
mov
push
ret
jmp
flds
stos
jbe
pop
jmp
lret
cld
mov
mov
and
cmp
cmpsb
jmp
push
mov
js
pop
or
loop
pop
call
inc
and
or
xchg
movsb
jmp
outsl
push
jo
ja
out
shufps
jmp
fldenv
add
lods
leave
push
out
dec
sti
pop
sbb
subl
sbb
das
shrl
imul
insb
push
ret
xor
sub
xor
das
inc
pushf
movsl
push
hlt
push
mov
enter
aaa
cltd
ss
test
mov
stos
jmp
xor
shl
add
xor
adc
mov
and
add
cltd
or
jmp
lds
or
or
xchg
pop
test
inc
mov
mov
xchg
sbb
jmp
inc
adcb
and
loope
hlt
nop
adc
adc
jbe
ret
sbb
mov
std
rcl
jae
mov
jmp
lods
mov
enter
jmp
mov
pusha
mov
mov
jmp
sbb
test
cltd
sub
adc
sbb
addb
jmp
arpl
gs
aad
jmp
xor
sbb
sahf
push
int
or
cmpsb
lods
test
mov
mov
enter
jmp
icebp
aam
pop
test
aad
popa
xchg
dec
sbb
jmp
and
cmpsb
jmp
repnz
pop
mov
pop
jmp
jns
bound
sbbb
shl
jl
inc
das
cmp
sti
aam
mov
sub
rcrl
jmp
xor
or
scas
lahf
js
adc
dec
rcr
cld
jmp
btc
sbb
insl
aas
jmp
lock
push
mov
and
dec
add
pop
xor
jns
fldpi
inc
cmpb
in
jmp
push
lcall
and
lea
push
jmp
stos
mov
mov
int3
sub
or
jns
or
or
cmp
cmpsl
icebp
jo
outsb
repz
jmp
test
rorb
jmp
add
mov
popa
lods
stos
jmp
daa
mov
sub
lods
push
inc
sbb
ret
sub
loope
mov
and
xchg
std
mov
sub
mov
scas
lds
sub
pop
or
xchg
sub
jmp
shl
dec
adcb
xchg
filds
dec
pop
inc
std
add
and
stos
add
pushf
sbb
jge
pop
decl
mov
sub
ljmp
out
adcl
and
sti
push
dec
in
aaa
xor
lods
lods
pop
mov
lods
or
mov
sbb
stc
insb
cmp
cld
icebp
adc
mov
xor
inc
je
adc
pop
imulb
inc
cmp
dec
mov
jmp
add
ss
mov
jmp
leave
es
addr16
push
and
and
pop
out
jmp
push
mov
stc
jmp
xchg
sub
jp
adc
xlat
stos
jnp
mov
call
mov
loope
jbe
repz
xchg
fisttps
adc
out
jmp
jo
in
shlb
fldl2e
addb
int
jg
jmp
push
mov
fucomip
test
je
movsl
loope
lret
shrl
push
mov
mov
ss
cwtl
ret
adc
icebp
faddl
stc
subb
lods
dec
jecxz
int3
or
stos
ljmp
test
gs
inc
add
cs
dec
inc
or
in
in
xor
outsl
inc
inc
lods
jo
sub
mov
or
in
loopne
ret
shrb
jl
into
inc
test
mov
xchg
pop
lock
xchg
jp
mov
and
mov
addr16
push
bnd
cmp
inc
das
adc
outsb
jae
jnp
sub
lock
jmp
jge
std
or
decb
bound
negb
outsb
sahf
or
jmp
and
push
scas
and
add
adc
aaa
xor
push
fwait
mov
sbb
or
test
pop
mov
sahf
int3
leave
dec
lret
pop
jbe
mov
lods
jecxz
jnp
and
and
cmp
out
add
mov
jmp
mov
xchg
sub
sbb
daa
cli
fcoms
je
call
lock
pop
and
test
jmp
mov
movsl
add
and
clc
cmp
addr16
jmp
xchg
jl
lahf
xchg
push
pop
jmp
push
popa
pop
lds
mov
inc
add
adc
in
dec
jmp
stos
mov
mov
or
jmp
addb
adc
mov
mov
inc
dec
adc
fcoms
sbb
icebp
sub
sarb
push
add
jle
and
fcomi
mov
imull
mov
ffree
inc
pop
jmp
cmc
push
push
jmp
aad
xchg
sbb
cs
jmp
jo
pop
fwait
jge
outsl
pop
std
xor
push
jecxz
xchg
mov
decl
mov
mov
je
push
jmp
sub
cld
and
xor
sbb
dec
rcrl
lods
mov
leave
mov
and
sbb
imul
rorl
mov
jns
mov
dec
rcll
add
push
inc
cmp
xor
jmp
add
andb
sbb
mov
xor
insl
fnstsw
adc
or
adc
and
adc
jmp
sub
out
test
push
jmp
in
inc
lret
or
push
pop
popf
xor
xchg
or
mov
dec
and
test
or
jns
jl
xchg
xchg
int
sbb
inc
leave
ret
adcl
jl
fistpll
lret
sub
repz
popf
xor
loopne
pop
outsb
mov
and
out
mov
push
insb
mov
push
jo
mov
mov
mov
mov
adc
iret
jmp
adc
subb
aam
mov
mov
adc
and
test
and
jmp
xorl
dec
jmp
outsl
roll
xchg
das
jmp
jbe
mov
cmpsb
sbb
add
adc
aad
cmp
repz
les
inc
mov
outsb
sbb
stc
pop
jmp
fwait
lock
dec
movsb
mov
pushl
sub
and
cwtl
fnstcw
jmp
fsubs
jmp
lock
rclb
mov
add
repz
into
mov
jp
aam
inc
rorb
pop
icebp
dec
or
es
jge
daa
fdiv
push
rol
scas
or
jmp
sbb
cmc
stos
sahf
adc
shll
arpl
sti
or
mov
sub
je
sub
loopne
mov
jmp
loop
add
mov
xor
jno
mov
js
jmp
iret
adc
arpl
sbb
jno
sbb
push
push
test
sbb
jmp
scas
roll
cs
lahf
xor
dec
fistps
sub
stos
add
push
xlat
faddl
jmp
or
add
pop
jmp
pop
popf
jle
add
xor
orl
lret
and
xchg
cmp
dec
adc
imul
test
jl
jmp
aaa
push
repnz
adc
pop
inc
shll
mov
fildll
xor
adc
sub
in
sub
test
in
mov
and
pop
jmp
lcall
sub
pop
add
jbe
mov
mov
jp
call
inc
rcrb
jmp
ja
loope
push
and
test
mov
cld
jmp
push
cmp
push
push
xor
imul
jp
call
adc
dec
les
jmp
push
in
pop
add
fsubrp
imul
dec
subb
sysret
cs
rcl
or
xchg
in
mov
or
loop
add
adc
inc
out
ret
jle
jmp
int3
mov
pop
jns
cmp
aaa
xor
les
jne
and
jmp
js
dec
pop
test
add
adc
push
adc
pop
mov
rol
cmpsb
sbb
jb
push
sbb
mov
push
add
lds
cmc
scas
ret
insb
roll
cli
pop
into
or
sub
cld
imull
jns
jmp
shlb
movsl
adc
mov
ds
in
mov
pop
cltd
sbb
icebp
xor
mov
mov
std
pop
sbb
jno
movsb
jmp
pop
and
sub
mov
ss
jbe
out
fsubp
hlt
scas
lods
or
das
daa
aam
xchg
jmp
jl
pop
pop
pop
out
sub
cwtl
mov
jo
insl
hlt
push
jmp
dec
dec
fbstp
pop
std
lcall
jmp
pop
adc
and
push
mov
enter
lods
aam
bound
jae
jmp
sub
mov
xchg
push
repnz
xchg
daa
insb
adc
inc
push
or
sub
lods
icebp
jnp
pop
and
repz
cmp
cltd
dec
jne
pop
xchg
cwtl
sar
movsb
xor
nop
repz
inc
outsb
jmp
fidivrs
mov
adc
or
jmp
in
js
and
jmp
out
and
icebp
xlat
push
jmp
mov
subl
popf
fstl
sub
daa
aad
stc
jbe
call
out
fldenv
subl
mul
jmp
outsl
fwait
mov
jb
mov
pop
inc
repz
lods
mov
out
jmp
push
inc
mov
fwait
add
jmp
mov
jecxz
cmc
push
push
mov
ret
int3
imul
push
pop
jbe
lods
movsb
dec
jns
xor
hlt
mull
cs
mov
lds
ljmp
jg
add
pop
mov
jb
stos
and
pop
jmp
lea
cwtl
mov
js
xchg
movsl
fwait
and
icebp
iret
jmp
das
aad
pop
into
sti
ds
sbb
ret
sub
loopne
pop
push
cmp
es
dec
stos
jo
aaa
dec
int
or
jmp
jp
out
mov
in
sub
adc
les
adc
sub
jmp
pop
and
lahf
push
adc
pop
xor
xlat
sub
es
ror
aam
not
mov
push
aaa
sti
sub
decl
cmp
cmpsb
data16
jmp
fistpl
add
imul
fwait
xor
mov
movsl
fisttps
repz
in
mov
mov
sbb
sti
bound
or
dec
jmp
add
jmp
xor
and
sbb
data16
or
xchg
shll
pop
stc
or
mov
inc
mov
jge
mov
cmp
arpl
lcall
rolb
lret
cs
and
cmp
sbb
adc
lret
aaa
sar
jno
xchg
inc
shrb
test
sbb
addl
lcall
lods
cli
xchg
xor
sbb
and
jmp
cmp
out
jmp
and
mov
lret
cld
xchg
mov
dec
fistl
push
lcall
inc
int3
in
push
fsubl
mov
dec
adc
aam
in
orb
jmp
pop
sbb
jmp
lock
jmp
pop
xor
sbb
jmp
xlat
jp
dec
cltd
in
in
xor
sbb
xchg
lods
test
or
insb
cvttps2pi
jb
into
scas
sub
sbb
cld
test
jmp
sub
es
outsb
out
mov
dec
mov
adc
xchg
push
add
icebp
cmp
mov
adc
loope
inc
fucomip
mov
outsb
inc
jecxz
jle
inc
mov
xchg
adc
in
add
jg
jmp
add
enter
fidivrs
or
jmp
inc
aad
adc
jmp
call
pop
or
sbb
scas
jmp
fwait
loopne
mov
jne
sbb
push
pop
gs
pop
jmp
andb
xchg
dec
jp
add
jmp
and
pop
jmp
mov
mov
push
cmc
inc
dec
pop
pop
jmp
sahf
sarb
jmp
scas
add
sub
inc
hlt
add
call
jmp
mov
cs
xor
dec
fdivs
lods
mov
mov
call
and
aam
push
sbb
fidivs
lods
insl
add
in
lea
cs
pop
cmc
dec
imul
and
and
push
xchg
scas
lcall
inc
jmp
jb
shrb
imul
shll
jecxz
jb
les
cltd
bound
jmp
xlat
lahf
xor
repz
jmp
lcall
lock
cmp
jmp
jl
ret
mov
mov
mov
dec
scas
lods
and
xor
in
fcmovb
jmp
xor
adc
outsb
sbb
outsl
aaa
pop
and
shrb
mov
sub
dec
mov
push
and
jns
repz
andb
jmp
rcrl
ret
dec
ss
pop
add
or
int3
pushf
sub
fucomi
push
lret
aad
divl
loope
jae
and
jmp
int3
inc
xor
insl
jbe
pop
add
cmp
imul
xchg
adc
pushf
mov
sahf
testb
jmp
inc
and
add
dec
xlat
jmp
push
cld
ljmp
xor
mov
lcall
out
shr
ss
aad
icebp
xor
fists
xor
loopne
mov
movl
xor
out
repz
sbb
movsb
add
arpl
pop
jae
cmp
push
test
xchg
sbb
test
dec
jp
xchg
add
lods
xor
je
pop
je
jmp
adc
jmp
lahf
mov
pop
pop
divb
out
aas
fstpt
scas
cwtl
mov
adc
ficoms
jmp
mov
and
jo
mov
sub
fstpl
stos
stc
repz
je
js
aaa
push
es
inc
xlat
and
xchg
jmp
push
cmc
mov
arpl
adc
xor
dec
mov
jmp
jbe
out
dec
sbb
jmp
dec
je
mov
movsl
or
sub
jmp
imul
mov
pop
out
mov
jb
mov
sub
lods
repz
sub
and
mov
push
dec
sti
outsl
pop
clc
or
es
bound
je
lods
dec
insl
push
and
pop
push
ret
popa
jle
movsb
std
jmp
ret
dec
lods
push
ret
cmp
lods
mov
imul
lock
std
fstpt
lods
scas
cmp
les
sub
ja
movsl
push
xchg
sahf
mov
adc
or
sbb
out
add
xor
push
cmp
outsb
aaa
xchg
aad
adc
stc
jle
int
icebp
je
repz
aas
jmp
into
mov
xor
cs
xchg
jnp
jne
lret
es
mov
and
popf
loop
dec
cwtl
into
fisttpll
jl
jmp
cmp
sub
lds
scas
imul
cmc
in
lods
iret
das
out
mov
sbb
jge
fwait
inc
shr
aaa
clc
or
inc
and
insb
fyl2xp1
lds
add
jp
movsl
add
jno
das
fcoms
sarl
repz
push
xor
mov
mov
out
xchg
repz
adc
jbe
or
mov
test
cmp
xchg
mov
mov
test
dec
lods
rorb
iret
dec
addr16
data16
adc
imul
mov
rcll
adc
and
cmp
sub
leave
test
sti
jle
ds
and
negl
jmp
mov
ja
adc
pop
jmp
mov
jae
sub
dec
scas
jbe
push
lods
daa
jns
test
sub
in
imul
call
arpl
push
xchg
jmp
mov
xor
fbstp
movsl
jbe
lds
sub
out
fsubrl
xor
pop
cmp
inc
sub
or
jmp
adc
mov
or
dec
push
clc
inc
mov
jmp
ret
mov
fildll
xchg
icebp
lea
dec
les
xor
mov
adc
test
jge
lods
in
js
insb
jmp
mov
push
daa
iret
cli
sub
repz
xchg
fwait
cmp
hlt
dec
and
das
neg
mov
incl
fdivs
pop
mov
ja
cmp
dec
jmp
stos
and
pop
push
dec
mov
cmc
cmp
int
loopne
mov
sbb
aaa
imul
repnz
shrb
repnz
pop
or
fdivrl
mov
out
inc
jmp
nop
loopne
ret
test
notl
jle
mov
fisubl
cmp
mov
dec
sbb
mov
hlt
movsb
jg
fcomps
jecxz
or
insl
popa
jmp
pop
es
dec
sub
sub
lods
cwtl
jle
rol
sbb
out
dec
mov
pop
cmpsl
dec
jmp
lret
lds
lea
shl
cmp
adc
sub
jb
sub
hlt
imul
inc
jmp
jle
sub
sub
ljmp
adc
jmp
pushf
pop
pop
xchg
into
push
shr
add
fimuls
xchg
and
lods
pusha
mov
inc
call
aad
icebp
mov
xchg
fdivr
sub
sub
repz
push
sbb
add
lret
lcall
cmpsb
ret
cmp
inc
stc
call
push
and
repz
mov
scas
push
push
fs
sti
dec
jae
push
gs
rorl
lcall
cwtl
inc
cli
int
or
dec
jb
shll
sti
scas
mov
xorb
inc
or
push
shl
jmp
lcall
jmp
jg
pop
pop
mov
push
sti
cmp
std
out
in
jmp
push
imul
or
mov
adc
inc
jmp
aaa
jnp
or
push
lods
jmp
or
pop
jo
into
ret
stos
add
popf
insl
jmp
rcrb
mov
outsb
scas
sbb
fdivrl
popf
into
pusha
jns
cltd
xor
lahf
jmp
mov
mov
cmpl
and
shlb
push
pop
aam
cmp
imul
sbb
and
pop
and
test
xlat
jo
into
jmp
lret
shlb
xor
jmp
stos
and
adc
in
nop
jmp
lods
int
fildl
outsb
fs
xchg
jnp
adc
xor
incl
or
jmp
dec
aaa
xchg
inc
fldpi
cmp
nop
insb
adc
imul
gs
xchg
lods
jle
cmovp
lods
pop
pop
idivb
out
outsb
pop
or
adc
sub
and
jmp
push
add
addl
mov
ret
push
inc
xor
out
xor
pop
push
psubusb
jmp
or
pop
mov
scas
mov
shrl
movsl
cmp
mov
aam
leave
jmp
mov
and
call
mov
movsb
lods
pop
lods
and
dec
mov
sbb
mov
mov
pop
pushf
jmp
add
out
add
mov
inc
cmp
and
fldcw
cs
jmp
lret
pop
ficoms
fisubrl
rorb
mov
push
jmp
addb
jmp
out
push
mov
inc
mov
int3
shll
or
lds
pusha
pop
push
inc
dec
jmp
adc
aas
int
inc
sbb
push
push
lahf
pop
loope
adc
pop
or
jb
mov
scas
test
xchg
pop
scas
jmp
out
adc
clc
data16
lods
jmp
pop
mov
sub
aas
and
inc
or
test
or
inc
into
sub
testb
jmp
pop
xor
jg
xor
sbb
lcall
addr16
mov
aaa
outsl
xchg
jmp
xchg
or
sub
mov
xor
fimuls
adc
sub
jb
shrl
pop
mov
daa
out
jmp
push
xchg
iret
js
inc
cmp
clc
out
lret
mov
cmp
in
inc
in
dec
adc
enter
into
addr16
shll
inc
sbb
fbld
pop
movsb
int3
jb
lods
or
sbb
pxor
arpl
scas
mov
insl
jne
shrl
push
jp
outsb
inc
mov
jmp
icebp
negb
pop
jae
cmpsb
lock
pop
cmp
dec
xchg
dec
and
adc
cld
adc
stos
sub
mov
sub
sbb
push
xchg
jecxz
xchg
push
testl
cltd
cmp
mov
lock
scas
mov
xchg
jno
lods
pushf
hlt
stc
jbe
int3
adc
push
jmp
cmpsl
sub
fs
into
cli
scas
shr
or
stc
pop
mov
inc
gs
xor
push
lahf
dec
lea
les
mov
or
pop
cmp
jno
mov
daa
lods
and
test
jmp
ret
mov
cs
jmp
mov
in
and
mov
nop
loope
movsb
inc
jmp
mov
call
xchg
sbb
test
rep
xchg
sub
cwtl
pop
jp
jo
xor
push
mov
std
sbb
out
les
mov
jge
in
enter
std
add
int
inc
jno
loope
inc
mov
adc
pop
sbb
shrl
and
ret
test
mov
imul
out
ficomps
sti
mov
test
sbb
ja
push
std
ret
imul
pusha
call
outsb
jmp
dec
jnp
jmp
stc
lret
iret
sahf
lock
adc
scas
dec
icebp
outsb
mov
adc
movsl
sub
aas
loope
adc
enter
xchg
jmp
cwtl
jp
pop
xor
jmp
rolb
mov
iret
add
xlat
fs
aaa
and
out
jmp
adc
jb
jg
sahf
jmp
filds
popa
and
popf
int
hlt
sti
stos
sti
mov
pushf
mov
or
and
dec
jp
int
mov
xor
adc
test
sbb
ljmp
jne
dec
pushf
xchg
xor
or
cmp
sub
mov
out
lahf
mov
mov
add
sub
js
cmp
lret
jmp
pop
jle
adc
xor
dec
sub
xor
mov
lea
sbb
mov
fists
sbb
or
out
jmp
stos
cmp
dec
sbb
jmp
sub
dec
cmp
add
std
push
repnz
push
fisubrl
or
cmpsb
inc
mov
jmp
scas
pop
xor
xor
sbb
fucomip
mov
sub
outsb
scas
data16
xchg
stos
call
dec
push
push
push
iret
mov
lahf
cwtl
dec
ss
in
lock
mov
int
jmp
cli
mov
sbb
jmp
jo
mov
les
xchg
jmp
xchg
mov
mov
push
jnp
ds
jl
ret
sbb
add
nop
scas
push
jmp
cmp
in
jnp
in
lea
aad
shll
sub
jmp
jl
pop
jg
push
jmp
out
fwait
add
insl
iret
gs
clc
outsb
jb
jbe
mov
jmp
cmpsb
fstpt
mov
scas
push
hlt
pop
pop
repz
cmp
jb
fs
mov
lcall
jnp
mov
test
aas
jmp
inc
cmpsb
incb
enter
sbb
xor
loop
mov
xchg
jmp
ret
rcrb
jns
lock
bound
mov
int3
jecxz
shlb
and
add
mov
xchg
lods
mov
rclb
push
and
outsl
sarl
scas
jmp
jle
or
negb
lea
jo
fdivrs
mov
mov
cmpsl
jmp
mov
xchg
add
out
nop
sub
xchg
ljmp
aad
repz
mov
mov
out
sbb
iret
jmp
stc
hlt
enter
fdiv
cmp
cmpsb
dec
cmpl
adc
sub
sub
xor
shr
push
mov
flds
das
push
cmp
cmc
movsl
popa
dec
sub
fiaddl
xor
lods
rclb
call
adc
pop
xor
sub
jmp
sbb
cld
hlt
sarb
pop
add
stc
xor
imulb
and
cmpsb
aam
scas
out
outsl
in
jmp
repz
inc
out
lods
movsl
lcall
aad
sbb
jae
fldcw
sbb
jns
daa
jmp
cmp
jmp
push
cli
cmp
lret
sahf
mov
pop
jmp
mov
jmp
mov
and
out
pop
jmp
sarb
mov
test
xor
lcall
cltd
sub
test
dec
mov
stc
push
adc
mov
jp
inc
jmp
pop
sbb
pop
cli
ds
andl
jmp
push
es
jmp
cli
leave
xor
sub
lods
cmp
and
push
jmp
jmp
call
dec
sbb
and
lcall
xor
loope
xchg
pop
dec
xor
test
test
das
jmp
hlt
test
xchg
jmp
pop
mov
insl
popf
push
out
scas
rcrb
inc
in
inc
sbbl
mov
cli
inc
and
sbb
sbb
add
loopne
mov
jge
sbb
sbb
lods
and
sbb
scas
add
pop
xchg
dec
scas
add
jg
pop
std
in
stc
or
fisubs
mov
test
jmp
rorl
cltd
jmp
or
in
and
dec
jmp
xchg
shr
dec
sub
mov
jl
xchg
movsb
fucomi
out
lods
mov
jmp
pop
in
pop
pushf
fldenv
dec
cs
mov
jbe
add
inc
test
pop
ljmp
or
filds
adc
cwtl
in
jmp
xchg
repz
fistpl
xchg
in
es
xor
loop
fdiv
sbb
mov
or
xchg
mov
jmp
xlat
mov
cmp
jns
aam
cmp
outsb
scas
xchg
and
loopne
xchg
sub
bnd
sub
xchg
stos
mov
push
push
stos
push
inc
pop
sbb
cmc
cmpsl
inc
jmp
push
adc
test
sbb
mov
inc
sbb
or
outsb
je
sarb
sub
adc
push
cltd
push
push
jmp
push
lods
mov
jmp
or
mov
jb
ret
std
cwtl
adcl
jmp
out
dec
fidivrs
cli
lods
outsb
and
icebp
stos
sub
jno
push
jns
xor
popf
cltd
add
pusha
repz
dec
jmp
lods
inc
sub
lret
mov
jmp
nop
dec
xor
ror
insl
scas
push
xchg
test
jmp
gs
sahf
jmp
stc
inc
push
inc
iret
jmp
xchg
daa
sub
xor
ja
out
sbb
and
add
mov
mov
push
nop
es
mov
inc
nop
jmp
mov
ja
jmp
and
lods
cltd
movsl
shrl
ss
iret
push
daa
loope
shrb
jmp
adc
enter
lods
out
push
mov
idiv
add
cmp
int
sarb
adc
dec
adc
clc
or
sub
inc
subl
mov
mov
mov
mov
add
leave
ja
arpl
jmp
push
shrb
pop
fwait
dec
lods
test
outsb
adc
cmp
jmp
out
sub
int3
adc
nop
add
les
mov
xchg
add
repz
bound
jl
push
aaa
fcmovne
ja
jb
pop
jecxz
jmp
int3
jmp
jo
ds
scas
in
push
sbb
jb
fildl
inc
jle
mov
mov
lret
jmp
xchg
insl
jae
lcall
adc
mov
leave
xor
mov
xor
pop
jecxz
xchg
push
or
sarl
iret
jmp
dec
adc
cwtl
movsl
jmp
test
scas
out
insb
loop
jmp
lods
mov
rclb
cltd
mov
in
mov
notb
push
pop
test
add
jmp
rcll
sbb
fs
sbb
icebp
addr16
popf
cltd
imul
mov
mov
sbb
push
icebp
inc
je
and
in
mov
push
inc
and
sbb
push
fldl
popl
addr16
or
xchg
dec
shr
dec
dec
les
push
xchg
pop
out
flds
dec
outsl
adc
int
jle
pop
pop
adc
insl
mov
stc
pop
sub
inc
cmpsl
stos
or
dec
std
add
pop
mov
xchg
loop
int
mov
in
aas
add
xchg
stc
lods
xchg
iret
idivl
adc
push
jmp
cmp
sub
mov
rorb
dec
incl
mov
pop
in
sub
add
jmp
mov
mov
mov
or
ret
or
sbb
ret
lods
pop
scas
dec
jno
jle
jb
inc
movsl
xchg
jmp
add
mov
mov
cs
jmp
sbb
jmp
in
ds
clc
popa
jmp
dec
loopne
cmp
xchg
sub
subb
iret
in
push
adc
mov
insb
out
cmpsb
std
pop
outsl
daa
add
mov
jmp
nop
xorl
sbb
sarb
add
jle
dec
mov
fimuls
jmp
movsb
sahf
sti
jns
fdivrl
jmp
rorb
testl
mov
jmp
jns
mov
pop
ljmp
pushf
push
and
cmp
ret
std
cmp
jmp
xchg
rcrl
dec
sub
inc
cmp
and
faddl
std
mov
rcl
out
jmp
enter
ljmp
frstor
jle
dec
jecxz
mov
and
aad
sub
in
pop
xchg
insb
cltd
into
or
sub
or
mov
fisttps
cli
sahf
lahf
jo
aad
lods
ds
sti
stos
dec
sub
gs
xchg
mov
and
push
leave
cli
adc
jmp
cmpsl
movsb
into
in
mov
sbb
insl
push
lods
push
cmp
test
jnp
xchg
sub
popl
fsubrp
sarb
xchg
movsl
cwtl
lock
hlt
add
xor
and
fcoms
sti
in
ss
dec
ret
xchg
pop
es
jg
push
lods
xlat
aaa
shrb
and
jmp
xor
movsl
dec
mov
push
jmp
mov
outsl
das
jmp
adc
push
or
adc
ljmp
jge
push
shlb
xchg
xchg
add
imul
adc
enter
jmp
mov
les
adc
popf
sub
mov
jle
pop
jo
mov
mov
and
sub
mov
popl
xlat
outsb
test
jmp
stos
mov
mov
adc
mov
mov
jmp
jge
cld
filds
dec
xor
xchg
repz
and
int3
mov
inc
sub
pop
dec
dec
enter
ja
aas
lcall
cmp
mov
pop
jb
sbb
or
dec
shll
out
push
xlat
sbb
outsb
mov
data16
dec
xchg
lret
repz
inc
shll
adc
jmp
mov
mov
dec
xorb
jbe
loop
jmp
mov
out
mov
add
add
jmp
loopne
cli
aam
sbb
rclb
fdivl
lods
test
mov
into
jmp
imul
push
mov
or
inc
call
fucomi
sub
fs
fwait
sub
inc
int
pop
adc
je
and
jno
clc
sbb
imul
cmp
dec
divb
jmp
cmpsb
fwait
out
sub
mov
jmp
test
push
lcall
jmp
mov
xchg
xchg
lods
sub
ret
dec
psraw
push
jg
fsubs
mov
mov
cmp
das
loopne
adc
sub
jae
jmp
pushf
jno
rcr
xor
hlt
pop
xchg
in
jmp
sbb
add
les
jae
push
cltd
sub
sub
xchg
out
adc
sub
cmc
jmp
test
sbb
sub
std
mov
lock
shr
js
inc
ficoml
mov
dec
push
sbb
and
lods
jmp
xor
stos
pop
pop
cmpsb
jmp
outsb
sahf
or
enter
dec
dec
mov
cmp
sti
cli
dec
xlat
jmp
rorl
lods
je
jecxz
mov
jmp
ret
pop
pop
pop
mov
jmp
out
out
pop
fisubl
pop
pop
andl
cmpsl
imul
and
imul
movsb
clc
test
xchg
jmp
jbe
shlb
push
cmc
sbb
inc
sbb
movq
pop
sub
outsb
cmp
adc
push
adc
xchg
je
rcl
out
lock
ljmp
rcll
int3
cmp
jmp
xchg
mov
inc
scas
mov
jmp
pop
in
adc
jmp
xorb
xchg
pop
imulb
add
jnp
repz
lods
pop
push
xor
jp
push
sub
push
cmp
and
rcll
jnp
mov
push
sarb
or
mov
int3
push
push
je
leave
cwtl
das
mov
mov
loop
fs
jae
jmp
pop
and
stos
icebp
pop
scas
mov
push
push
or
test
xor
push
fcoms
xor
pop
imul
daa
hlt
cmp
das
aas
push
jp
ss
and
movsl
xchg
pushf
sarl
mov
or
cwtl
mov
fisubrs
jmp
aaa
imul
xor
div
sti
pop
cwtl
add
jg
jmp
ficomps
xchg
jge
pop
jne
mov
inc
in
sarb
mov
jge
push
mov
aaa
pop
loope
fnstenv
enter
cmpsb
jmp
insb
cmpsl
ja
push
inc
add
mov
add
jns
or
push
lods
mov
fidivs
rcll
int
jg
inc
mov
sbb
lahf
add
sti
or
jbe
cmp
inc
push
and
mov
in
fbstp
adc
sub
das
xchg
and
sbb
imul
pop
adc
add
jecxz
mov
sbb
rcrl
inc
and
and
roll
jmp
fnstenv
push
jmp
push
in
rcrl
or
inc
jmp
jmp
mov
mov
lods
mov
mov
push
jmp
mov
sbb
sbb
test
push
out
jmp
xor
mov
pop
mov
cmp
incl
jo
imul
mov
jecxz
jle
pusha
jbe
loopne
jmp
mov
fcoml
jmp
or
xor
scas
mov
das
ret
movsl
sbb
jno
jb
mov
inc
data16
mov
cli
mov
enter
loop
push
jo
fcomip
lods
lods
out
shrb
dec
push
adc
fucomp
aam
fsubrs
aas
pop
lods
dec
je
xchg
gs
inc
and
cmp
in
fsubr
retw
enter
jmp
outsb
pusha
or
stos
fstps
sub
mov
repnz
ret
cli
bound
lods
insb
mov
pop
pop
movsb
and
fucomp
lret
das
and
pop
push
mov
jne
pop
shll
jnp
inc
jns
mov
jns
xor
mov
jne
jmp
xor
and
mov
or
pop
cmpsb
sbb
jmp
and
xor
nop
cmp
hlt
js
sub
pop
mov
jmp
pop
test
dec
sub
std
sti
aad
jmp
add
jbe
push
sub
fwait
lea
fisubrs
adc
pushf
stos
lods
test
adc
and
mov
testb
adc
pop
xor
rol
imul
adc
add
xor
mov
rclb
or
nop
mov
xor
hlt
xchg
jne
sbbl
xor
dec
fisttpl
popa
push
jmp
jp
out
push
insl
lods
cmp
jb
outsb
cmpsb
sti
add
jecxz
in
insl
jmp
push
sub
lods
data16
pop
inc
ret
int3
push
jp
xchg
stos
cmp
jnp
and
orb
in
push
jp
jmp
pusha
xchg
add
inc
lret
lods
movsl
mov
cltd
out
std
mov
fildl
cli
int
mov
addr16
mov
pushf
jmp
sbb
das
cmpsb
std
cmp
xor
mov
mov
or
daa
add
jmp
outsl
pop
sub
push
mov
sti
push
xchg
jmp
lret
adc
xor
inc
mov
jb
push
mov
add
dec
jbe
or
jmp
dec
xor
adc
jnp
mov
movsb
jmp
cltd
loope
adc
mov
and
call
jmp
ljmp
repnz
dec
or
jne
scas
je
in
cmpsb
dec
jmp
testl
movsl
test
dec
aam
sub
jne
jae
mov
jmp
xchg
out
jbe
xchg
mov
in
lods
add
das
cmp
pop
and
inc
jmp
adc
lcall
adc
jl
add
push
jmp
call
stos
mov
test
or
cmp
shrb
dec
pop
faddl
and
les
fisubs
ret
sub
cmc
cmp
push
or
inc
mov
pop
push
sub
int3
cmp
jne
add
movsb
inc
mov
add
jnp
or
jo
imul
xchg
sti
repnz
dec
push
jmp
add
adc
ds
adc
adc
cmp
outsb
mov
icebp
adc
and
jmp
je
sbb
xchg
jmp
cmp
out
cmp
push
xor
dec
cli
out
lock
ret
sbb
subl
jmp
aad
ffree
push
in
lret
xchg
sahf
sti
sub
insb
sub
test
pushf
cmp
and
repnz
sub
in
fs
add
sub
outsb
aam
or
mov
pop
jmp
out
mov
gs
sti
jg
ja
shlb
mov
cmpl
xor
repnz
aaa
mov
add
icebp
push
imul
ret
add
fbld
lods
and
sub
test
lock
cmp
inc
mov
movsb
divl
cwtl
jmp
ljmp
mov
jmp
add
add
sub
or
pop
std
pop
add
jmp
and
popf
ss
jmp
insl
mov
cs
add
fidivs
push
sub
fwait
std
dec
mov
inc
add
sbb
and
rolb
dec
andl
or
int
mov
repz
fnstenv
xor
loope
out
push
jno
mov
mov
sub
jecxz
xchg
pop
daa
mov
mov
shr
dec
jo
jbe
mov
pop
cmpsl
fidivs
iret
or
test
mov
shrb
adc
cmp
leave
int
sahf
loop
cmc
pop
inc
std
and
leave
jmp
call
out
sub
addb
lcall
test
mov
cltd
jmp
sub
mull
pop
movsl
jmp
aas
pop
and
sub
cmp
mov
pop
sti
push
out
xor
in
add
cwtl
add
jg
call
lahf
mov
sbb
jmp
test
push
sub
adc
sub
jmp
mov
lcall
pushf
sub
out
jg
xor
sub
mov
jb
mov
dec
cwtl
push
aas
std
movsb
mov
add
cli
jmp
icebp
mov
sub
data16
jmp
pop
adcl
shl
cs
fs
fimull
in
test
dec
arpl
rcll
dec
dec
sub
mov
aaa
es
sbb
jmp
inc
out
aam
push
jle
push
add
js
fcomps
stos
push
lods
cmp
pop
lahf
jns
outsb
inc
sti
mov
xor
or
cmp
or
adc
jle
pop
popf
push
inc
nop
cltd
out
scas
fsub
xor
ret
and
jae
sbb
jmp
add
pushf
cmp
imul
imul
or
jno
add
push
shll
push
clc
adc
push
cmp
mov
out
xchg
or
jge
cwtl
xchg
enter
push
int3
sub
adc
es
insb
jmp
daa
and
pop
in
pop
sbb
jle
mov
imul
jmp
fs
mov
sti
cmp
jmp
sub
cmp
jmp
cmp
lret
mov
sub
or
repz
arpl
psubd
inc
pop
and
call
and
iret
pop
xor
sbb
mov
and
inc
or
pop
int3
jge
and
jmp
outsb
sbb
lock
mov
jmp
adc
and
es
loop
mov
ljmp
mov
mov
and
ret
loope
mov
jge
inc
push
ret
inc
mov
and
xchg
pop
sti
cmp
jne,pt
jmp
cmp
in
jmp
mov
mov
jmp
leave
shl
xchg
xor
jmp
push
scas
push
mov
dec
cli
mov
dec
stos
arpl
shlb
jge
inc
xchg
mov
xchg
jmp
clc
repz
stos
movsb
push
or
or
xor
outsb
inc
jmp
inc
dec
out
mov
imul
jl
and
int3
xchg
outsb
data16
leave
jmp
or
push
rcr
mov
pusha
insl
xor
popf
mov
xchg
filds
sub
mov
jmp
movsb
lahf
xor
sub
das
cmp
sbb
shrl
dec
daa
es
adc
out
cmp
bound
pop
xor
insl
mov
sub
jecxz
mov
dec
xor
loope
and
pop
inc
sbb
push
stos
outsl
into
enter
das
stos
mov
mov
je
insb
dec
jecxz
icebp
shlb
jmp
xor
sub
stos
inc
and
pop
mov
fistpll
adc
sbb
fiaddl
aad
into
mov
sbb
or
and
xchg
jmp
ror
mov
in
insb
lret
lahf
add
inc
es
sub
daa
pop
dec
outsb
pop
push
es
shrb
or
xor
aas
ljmp
pop
sub
in
mov
iret
hlt
mov
xor
jmp
and
test
mov
jmp
adc
ficoml
jmp
cli
mov
mov
aas
xchg
adc
iret
dec
sub
repnz
jmp
add
push
sbb
jne
inc
mov
pop
jbe
insl
lret
jmp
mov
xorl
sub
repz
push
xchg
cmp
inc
sub
add
incl
pushf
scas
cmp
out
cmp
push
loopne
dec
inc
fs
divb
pop
jmp
inc
dec
dec
insb
xchg
jmp
jno
and
shll
push
ret
lcall
cmpsb
scas
and
inc
dec
cli
jmp
leave
mov
movsb
out
mulps
lods
pop
lret
lock
add
aas
sbb
lret
jmp
loopne
sub
inc
popa
ret
stos
mov
or
icebp
loop
jmp
fnsave
cmp
xchg
sub
adc
out
pop
cmp
dec
inc
mov
pop
outsl
sub
inc
std
add
mov
jbe
icebp
jmp
cwtl
push
push
jmp
adc
filds
mov
in
inc
jp
sbb
jle
fadd
cmp
testb
dec
daa
jmp
xor
lods
out
cmp
repnz
add
jae
dec
and
cli
mov
pop
scas
test
inc
push
push
loope
iret
jne
insl
jmp
mov
xchg
aad
or
jge
cmc
sub
sub
xor
sqrtps
mov
jmp
in
and
rcl
jge
push
ja
sti
or
xor
add
lock
mov
repz
mov
mov
adc
sub
adc
xchg
adc
mov
push
mov
ss
arpl
sti
dec
or
cmp
or
into
insl
cmp
in
pop
jmp
pop
inc
lret
xchg
scas
jne
xchg
loopne
jmp
lea
jmp
rolb
out
pop
jns
push
lods
mov
mov
pop
daa
test
sti
imul
lcall
mov
fnop
cmc
popf
mov
jb
mov
pop
sbb
nop
push
pop
stos
mov
out
or
test
addr16
cmp
xor
pop
sub
daa
mov
movsb
clc
jmp
imul
aad
pop
mov
mov
outsl
inc
sbb
idivb
pop
fisubs
xor
adc
in
jbe
sbb
jmp
pusha
loopne
divps
mov
jmp
jmp
clc
sub
xlat
imull
push
adc
xchg
jmp
lea
jmp
ret
cmpsl
sub
shrl
push
hlt
cmpsb
sbb
add
daa
and
adc
fldcw
jmp
das
jle
scas
pop
xchg
jg
out
xor
adc
jmp
shll
std
and
repnz
mov
add
cltd
idiv
jmp
mov
jmp
sub
inc
js
shll
mov
repz
sub
or
xor
dec
cmp
shll
jmp
cmc
adc
or
and
mov
mov
sub
or
pop
jmp
push
rcr
and
sahf
and
push
pop
outsb
xor
out
jmp
mov
lea
aam
jmp
sbb
jmp
sarb
push
push
push
mov
test
jmp
push
xlat
sbb
ljmp
push
sbb
dec
sub
or
fisttpll
stc
and
cmpsb
mov
imul
test
ja
lret
scas
sub
xchg
add
lahf
xor
pop
sub
xchg
add
sub
xchg
jmp
adc
dec
sub
pop
add
hlt
bnd
aam
mov
jmp
aas
cmp
nop
outsb
dec
and
cmpsl
sti
mov
cmp
sbb
cmp
data16
lods
out
aas
inc
pop
pop
ljmp
call
jl
mov
ret
loope
jle
xor
jmp
sbb
push
pop
sub
fcom
cmp
mov
daa
jmp
or
sbb
adc
loope
jmp
das
or
outsl
repz
shlb
mov
jmp
adc
xlat
jmp
lock
dec
xor
stos
in
and
cli
xlat
jmp
mov
add
jmp
daa
sub
jmp
sub
xchg
and
add
push
jecxz
mov
pop
es
cmp
pop
jmp
ljmp
pop
insl
sub
test
addr16
jl
or
mov
rcll
cli
sbb
mov
mov
dec
sbb
xor
imul
mov
jb
adc
aam
iret
mov
jmp
icebp
lock
shll
es
mov
fidivrl
xchg
cmc
pushf
add
jb
xor
ss
xor
xchg
jmp
and
das
insb
pop
or
sbb
enter
bound
daa
xor
jmp
inc
xchg
jecxz
push
and
popa
cvtps2pd
loop
test
mov
mov
cmp
insl
push
imul
scas
jmp
cli
je
in
pop
adc
jno
or
cs
lahf
daa
loope
adc
out
lods
outsb
and
fwait
sub
push
or
xchg
jmp
call
test
inc
inc
push
jmp
jne
hlt
dec
xchg
cmp
jmp
shl
xchg
out
dec
jmp
push
xchg
repz
pop
lods
imul
cmpsb
jmp
cwtl
rcl
decb
ret
gs
mov
jmp
xchg
dec
sub
inc
scas
addb
repz
mov
jg
lock
dec
in
in
lods
cmp
mov
rol
mov
ljmp
stos
or
cmp
ds
orb
aad
out
jmp
cmp
lahf
mov
mov
lods
or
scas
out
mov
jmp
movl
mov
aaa
jnp
ljmp
ss
jmp
push
mov
jge
fwait
mov
out
aad
fisubrs
mov
inc
scas
inc
and
jae
sub
pop
cmp
sub
data16
out
pop
cmpsb
jmp
das
aaa
push
xor
lods
rcrl
sub
ret
out
xlat
sahf
xor
fsubs
adc
add
pop
or
orl
fwait
xchg
dec
lods
movsl
nop
xchg
mov
sub
loope
sub
push
pop
sub
lods
pop
and
jmp
jns
xchg
xor
call
orl
inc
xchg
sti
jne
mov
fs
pop
add
sbb
out
test
subb
pop
sbb
and
insb
jecxz
push
ror
movd
xor
sub
frstor
shll
lods
mov
add
or
jmp
xor
mov
mov
jmp
jb
test
add
ds
rol
out
sbb
das
jmp
mov
iret
push
pop
pop
jmp
mov
pop
and
ljmp
movsl
inc
scas
jmp
mov
iret
sub
pop
loop
stc
inc
fcmovu
test
je
dec
sub
or
fistpl
pop
cmp
jmp
sub
xchg
mov
test
por
jns
ljmp
lods
outsl
sti
jle
pop
in
adc
cmp
mov
cmp
jbe
out
sbb
xor
lock
nop
imull
jmp
pop
add
jmp
mov
xor
mov
adc
adc
sbb
jmp
call
mov
pop
jecxz
pop
test
enter
jnp
xor
insb
adc
jmp
xlat
cmpsb
pop
mov
xchg
jnp
inc
jg
fmull
adc
cmp
push
jbe
xchg
lret
cs
lods
in
mov
daa
push
pop
jmp
das
movsl
loope
sbb
or
mov
outsb
call
cmp
sub
movsb
stos
stc
jmp
test
sub
daa
cwtl
jmp
rcl
jp
or
mov
jmp
test
cld
popf
mov
xor
es
rolb
add
jmp
scas
ljmp
add
cmpsb
cmp
stos
or
mov
add
outsl
test
jmp
pop
mov
test
or
jbe
mov
dec
insb
xchg
jmp
add
pop
fmul
xorb
jmp
imul
mov
pop
jmp
fnstcw
jmp
insl
scas
aad
add
insb
jmp
cvtpi2ps
xor
pop
enter
push
inc
test
jmp
faddl
xchg
mov
mov
pop
push
lods
pushf
jno
fistpll
aad
push
mov
xchg
dec
cmc
cmp
xchg
and
hlt
mov
pusha
jo
rcll
or
cmp
jle
sub
sbb
es
jmp
sbb
orb
or
cmp
xchg
xchg
and
ds
add
cltd
push
pop
sbb
mov
fcmovnb
jg
mov
push
insb
lods
sbb
mov
pop
or
mov
mov
xor
cmp
repnz
fwait
sahf
add
popa
push
jmp
jg
es
mov
jmp
jmp
outsb
mov
sarl
out
rclb
stc
mov
push
cs
pop
inc
and
push
in
scas
xor
loope
mov
xchg
pop
jl
push
and
mov
add
sarb
mov
mov
sub
hlt
jmp
and
outsl
orb
repnz
jae
icebp
daa
jmp
sahf
push
je
fistl
inc
sub
in
popf
std
int
or
pop
pop
sub
lahf
or
sahf
mov
lods
in
subb
mov
inc
sub
cmp
roll
mov
pop
js
ja
fildl
mov
inc
jmp
stos
jbe
sbb
sub
hlt
jmp
loope
outsl
mov
outsb
or
shlb
adc
push
clc
add
mov
cmp
ljmp
cmc
icebp
and
and
imul
inc
or
pop
xchg
jmp
sbb
leave
jmp
out
push
inc
jecxz
in
jmp
scas
mov
out
enter
mov
and
mov
push
xlat
adc
mov
test
imul
xor
jmp
xchg
imull
or
mov
cmc
in
sub
mov
adc
lods
ljmp
and
push
lods
gs
mov
fwait
int3
mov
jmp
cmp
in
jge
cmc
or
pop
dec
adc
push
pop
or
aaa
pop
xchg
jbe
jmp
out
mov
inc
jmp
lods
lret
mov
adc
adc
add
jecxz
shr
dec
mov
testl
out
add
aaa
sub
push
adc
mov
jmp
xor
mov
dec
add
push
cmpsl
sbb
imul
sahf
in
fidivl
popf
ret
rolb
or
cs
mov
adc
sti
xchg
xor
sbb
jmp
mov
jno
adc
dec
test
cmp
or
test
adc
shrl
xchg
sbb
push
cmp
mov
adc
jmp
inc
stos
out
mov
pusha
pushf
fistps
or
sar
jmp
pop
cmp
not
pop
sub
mov
in
and
jecxz
rcrl
sbb
jl
dec
insb
hlt
and
sti
cmp
cmp
les
push
inc
cs
ds
add
imul
shrl
push
xchg
sub
dec
hlt
js
nop
sbb
int
pop
and
jp
ljmp
xor
cld
jmp
fcmove
leave
fdivrs
lret
sti
scas
add
movsb
push
xor
icebp
addr16
scas
daa
fnstcw
test
sti
lret
mov
xchg
orb
mov
jle
lds
rorl
pop
call
std
repz
test
sbb
jg
jle
js
jae
fdivs
pop
adc
jb
movsl
jbe
mov
hlt
pushf
xchg
gs
outsb
mov
or
sbb
lods
push
push
pop
mov
jns
lcall
pushl
jmp
sub
mov
jg
xchg
into
jbe
stc
repz
in
lea
cmp
dec
xchg
subb
jl
dec
jmp
iret
or
fnstsw
xchg
cmp
icebp
je
insb
mov
sti
xchg
popf
cld
mov
inc
aas
ds
adc
or
cmpsb
dec
cmpsl
jmp
lahf
inc
mov
popf
fsubr
pop
mov
fisubrl
mov
scas
call
xchg
outsb
sub
mov
add
les
jp
push
xor
sbb
push
fldpi
fs
aaa
mov
lods
pop
or
mov
pusha
mov
ss
mov
sub
mov
daa
orl
dec
loopne
cs
cmp
add
nop
jp
outsb
clc
insl
out
xor
jmp
jmp
push
mov
data16
jmp
ret
arpl
lods
xchg
lods
std
lds
mov
push
jmp
sub
ret
jl
lret
test
data16
insb
inc
popf
sub
nop
xor
sub
jmp
lock
cmpsl
mov
inc
test
and
je
jmp
test
mov
ja
jmp
jb
das
add
outsb
mov
sbb
lret
in
dec
test
aaa
sub
pop
adc
add
loope
xchg
shrl
mov
cmp
push
lret
or
push
cmp
int3
cmc
sub
jb
pop
sub
mov
lods
addr16
dec
jne
imul
add
lea
jmp
ja
fsts
call
pop
not
cmpsl
jmp
enter
inc
push
out
inc
jb
pusha
mov
lcall
test
outsl
mov
sbb
or
dec
and
rcrb
addr16
lret
popa
jo
pop
popf
jmp
loop
jle
sbb
ret
dec
lods
mov
sub
jo
out
inc
sub
add
or
xor
out
push
xchg
shr
or
mov
inc
xchg
ficomps
jmp
pop
je
in
sbb
lret
icebp
mov
lods
add
mov
iret
mov
jmp
test
addl
ficomps
gs
aam
lods
cmp
mov
lcall
or
fnstenv
add
pop
loopne
add
repnz
mov
sti
pop
xor
int3
or
cs
cmp
test
imul
and
decl
ret
mov
jge
push
stc
sbb
jb
pop
shlb
push
sti
int3
dec
push
or
js
jle
lea
test
cmp
jge
jno
in
jmp
outsb
inc
enter
mov
shll
cltd
jp
aam
pop
lds
adc
jmp
push
jo
in
daa
jbe
dec
cs
in
out
or
sar
out
add
jg
push
inc
sbb
jmp
fdivl
imul
pop
sub
xor
int3
je
in
and
adc
or
push
fwait
jne
mov
fstpt
and
or
outsb
dec
rorb
add
cmp
movl
js
inc
into
jmp
jbe
sbb
xlat
lret
sub
add
ret
and
jmp
mov
loopne
xchg
adc
scas
mov
cld
add
sbb
out
and
jmp
pop
pop
cmp
mov
pop
lods
subb
sbb
imul
jns
lods
mov
aam
push
cmp
jmp
sub
pop
loop
jmp
clc
ljmp
xchg
stc
inc
outsb
test
aad
pop
mov
push
inc
push
call
rclb
idiv
pushf
nop
xor
dec
sarb
xor
jmp
sub
test
inc
test
sbb
cwtl
jbe
push
mov
movsb
add
sbb
mov
and
shrl
sub
js
imul
push
int
pop
sbb
push
jmp
pop
mov
shl
xchg
in
or
enter
push
ss
jl
or
and
xchg
fsubrl
and
cmpsl
adc
mov
push
cmp
outsl
xor
mov
mov
inc
push
aaa
add
dec
inc
imul
out
ret
das
fdivr
aam
push
sub
push
scas
xchg
sbb
sbb
inc
sti
cli
jmp
jle
mov
decl
fwait
lea
mov
cmp
xor
pop
adc
inc
xchg
imul
add
ja
jp
pop
jmp
test
sti
pop
or
bound
rorl
rcll
inc
xchg
imull
mov
seto
add
dec
jmp
mov
jb
xchg
or
jmp
dec
cwtl
cmp
mov
push
xor
mov
ret
push
dec
ljmp
or
jae
stc
mov
fldt
cmp
mov
cld
sarb
jmp
push
in
pop
mov
mov
std
pop
sub
mov
dec
jmp
xor
cmp
mov
xlat
xor
movsb
fnstenv
sub
in
cmpsb
mov
mov
xor
push
pop
mov
adc
icebp
lret
call
jmp
pop
test
pop
lret
outsb
pop
in
xor
imul
jle
jmp
gs
add
inc
pop
fstpl
jmp
in
dec
mov
lods
jecxz
jp
in
jl
sub
loopne
aaa
sbb
loop
pusha
outsb
cltd
adc
mov
repnz
xchg
jmp
fistpl
add
mov
and
stc
jmp
sbbl
add
idivb
shlb
push
fisttpll
or
mov
cmpl
andl
pop
sbb
jmp
divl
les
movsb
lcall
or
icebp
test
cmp
test
js
jmp
ds
repz
loopne,pn
rclb
push
out
fwait
mov
and
ja
repz
or
or
dec
ljmp
cmp
sub
movsl
sub
push
notl
mov
dec
in
jmp
xor
push
pop
mov
mov
in
and
imul
add
icebp
inc
lods
repnz
aad
daa
cmp
jnp
add
inc
fucomp
repnz
mov
jmp
xchg
loop
dec
ds
lods
aad
hlt
in
sub
pop
fstps
add
adc
mov
jp
jmp
imul
rcrl
mov
out
outsb
push
jns
lcall
mov
popf
jae
subl
inc
sbb
and
jne
shlb
shlb
pop
xor
cmp
lods
push
fdivr
mov
sar
push
test
push
aam
ja
push
mov
jmp
add
sbb
in
cltd
jmp
pcmpgtb
push
push
aaa
test
add
mov
sub
ds
int
xrelease
aad
fwait
push
cmp
inc
or
add
lds
mov
in
mov
imul
mov
and
dec
pop
aas
ja
in
cmpsl
out
lods
addb
jnp
mov
scas
jg
call
test
cli
jne
xchg
jmp
inc
mov
cmp
sub
repnz
push
mov
jmp
inc
popf
mov
cmpsl
insb
aad
in
push
xchg
jmp
and
and
mov
jmp
addr16
inc
scas
aam
enter
mov
sbb
call
sub
jmp
sub
and
sub
bnd
xchg
movsb
fisubl
push
nop
cld
add
aad
mov
repz
rcrl
lret
ret
adc
icebp
jmp
es
out
fstpt
xchg
lods
aad
fs
lcall
pop
add
mov
cmc
cltd
dec
jmp
and
out
inc
lcall
inc
in
adc
sub
or
fidivrs
lods
dec
dec
add
pop
adc
mov
test
lods
pop
mov
pop
inc
lahf
imul
push
scas
sub
orb
adc
in
jge
jmp
xchg
frstor
out
cmpsl
add
in
jnp
repnz
sti
nop
pop
js
rcr
jmp
cli
test
add
sahf
and
xchg
xchg
js
int3
jmp
cmpsb
dec
psubusb
mov
push
cmp
imul
inc
sbb
cmpsb
imul
movsl
gs
decb
cmp
xchg
pop
es
rclb
dec
jmp
xor
cmp
inc
hlt
jmp
push
xchg
mov
scas
sbb
push
jne
fucomp
jb
imul
lods
jnp
in
movsl
idiv
mov
push
jmp
push
shlb
pop
mov
int
cmpsb
xchg
dec
hlt
ss
sub
sarl
imul
bound
leave
dec
lods
daa
arpl
mov
out
jmp
xlat
out
xchg
loop
repnz
call
js
mov
roll
and
fistl
jae
stos
sbb
pushl
outsl
sbb
sbb
mov
dec
sub
xchg
jmp
les
or
dec
adc
sbb
pop
mov
jb
out
or
std
lods
lds
gs
mov
jns
mov
jo
sub
pop
adc
stos
or
rorb
xor
adc
jmp
dec
and
enter
mov
loopne
cmpsb
pop
test
out
and
push
add
and
cmpsl
dec
mov
loope
jl
sti
aam
lds
jmp
adc
jmp
mov
pop
xor
inc
jmp
fisubl
mov
sahf
scas
data16
sub
call
sbb
out
mov
jbe
test
inc
lret
push
pop
mov
inc
jmp
bound
imul
mov
cli
lds
and
rcrb
jg
cmp
cmpsb
cmpsb
lods
sahf
or
xor
in
xor
jae
sbb
rep
adc
shr
scas
fcmovnb
push
out
cli
jmp
out
test
jmp
int3
testb
out
hlt
cmpsb
adc
pusha
or
dec
jmp
xor
push
mov
js
movsb
dec
sbb
mov
jne
jmp
add
cwtl
lock
add
jne
sub
jl
push
mov
scas
insb
mov
xchg
jmp
push
or
mov
sub
sub
aad
imull
add
fstpl
daa
loop
mov
sub
sub
test
fcoml
rorl
mov
leave
mov
inc
aaa
xchg
jbe
hlt
mov
push
sti
xchg
mov
dec
sbb
fdivl
mov
mov
cli
and
push
mov
jo
or
cmc
xrelease
jmp
add
fldl
hlt
sub
int
call
cmp
sub
daa
gs
jmp
and
and
xor
jmp
inc
inc
mov
lods
sarb
leave
icebp
mov
or
add
call
fsubrl
xchg
mov
mov
idivl
jb
mov
pop
or
xchg
lret
nop
sbb
sbb
cli
stos
test
je
push
and
clc
scas
sub
mov
sub
adc
popf
fs
jb
or
mov
cmp
popa
pop
cmp
lock
mov
fcoml
cld
pop
jnp
mov
mov
sbb
sub
popf
lods
cli
setbe
and
repz
mov
xor
pop
ja
sub
pop
nop
sbb
jmp
adc
je
inc
outsb
std
subl
lahf
xchg
movsb
jo
stc
lret
sahf
xor
cmp
pop
add
ret
fcomps
dec
push
xor
push
mov
rcrl
mov
test
shll
cmp
jmp
gs
and
cli
fsubp
mov
or
sbb
cmp
inc
daa
jns
pop
jmp
or
arpl
movsb
in
ljmp
rep
push
push
xchg
jnp
xchg
daa
imul
stos
jmp
xor
dec
ficompl
out
enter
pushl
out
insb
loopne
jle
sbb
inc
pop
push
fsubr
dec
rolb
loope
bnd
or
jo
jmp
loopne
push
sbb
repz
jne
cmc
xchg
xor
test
inc
por
mov
fildl
push
jmp
mov
mov
dec
cwtl
testl
or
jne
out
sub
mov
mov
scas
pop
and
int
sbb
daa
outsb
jmp
mov
jmp
das
jp
mov
lods
push
cmpsb
into
stos
icebp
pop
jl
rcrl
mov
or
mov
push
jmp
loope
cmp
es
jmp
pop
mov
sbb
mov
xlat
push
sub
jnp
stos
test
jmp
pushf
outsl
addr16
xor
call
jmp
pop
fsts
lods
push
add
ficompl
filds
loopne,pn
xchg
push
shrb
add
push
jmp
js
jl
or
mov
cmp
insb
or
subb
lret
lret
jmp
das
in
cmp
scas
xor
call
add
popf
clc
pushf
jmp
flds
xor
cli
lret
cmp
leave
mov
invd
pop
push
daa
jb
jmp
stos
sub
push
pop
push
jmp
shrl
popa
loopne
jae
repz
push
mov
rclb
lcall
cmpsl
jmp
sbb
sbb
jmp
fcompl
dec
cmp
add
cmc
jecxz
xor
or
jmp
das
xchg
add
sub
jns
inc
xlat
xchg
sub
xchg
mov
das
ljmp
jmp
bound
adc
adc
outsb
adc
sub
shl
sahf
sub
std
popa
jbe
daa
sbb
ds
cmpsb
lods
aam
test
sbb
lea
pop
mov
jmp
call
sub
jb
shll
lret
mov
notl
loop
jg
cmpsb
cmc
fsubrs
sub
cmp
out
test
sub
jno
leave
and
jmp
cmpsl
int3
data16
fwait
pop
std
cmp
subl
pop
xlat
cmp
lret
mov
cmp
cwtl
ss
mov
in
xor
xlat
xor
pop
jmp
lret
adc
sub
or
mov
addl
shr
insl
das
mov
jmp
mov
andl
hlt
rclb
mov
outsb
inc
dec
lds
xor
mov
jmp
data16
pop
fdiv
popf
inc
mov
incb
push
push
and
rolb
or
adc
jmp
or
adc
sub
pop
sub
icebp
and
sub
push
jle
clc
or
fildl
ds
xchg
jmp
jmp
ret
pop
imul
dec
jmp
sbb
adc
add
mov
sub
mov
sarl
mov
push
data16
jmp
jl
xor
push
int
stc
outsb
bound
stos
ljmp
and
mov
cmp
mov
rolb
lcall
ror
mov
stos
icebp
sbb
sub
mov
push
iret
mov
insl
fidivl
add
imul
lods
scas
adc
and
int
in
push
push
mov
pop
inc
jmp
enter
xchg
lods
cmp
daa
dec
test
jmp
fldenv
xchg
icebp
lods
sub
push
xchg
and
fs
jmp
lcall
add
and
repnz
cwtl
adc
dec
adc
in
mov
imul
jmp
mov
sub
jecxz
jmp
clc
scas
xchg
popa
cwtl
mov
pop
aaa
xchg
test
mov
imul
int
fcomip
mov
and
fucomi
jecxz
add
xor
or
sub
xchg
xchg
push
mov
sub
sbb
jo
shlb
xchg
sub
sbb
pop
sbb
jmp
cld
adcl
out
fsubs
jmp
imul
cmpb
addl
mov
out
mov
adc
jmp
movsb
cmpsl
dec
je
dec
and
sti
push
aad
xchg
mov
jmp
mov
cmp
test
mov
sbb
push
push
mov
cltd
lods
xor
std
cwtl
sub
add
push
xlat
mov
iret
mov
xchg
ret
jmp
scas
xor
xchg
jmp
das
fiaddl
sub
jo
pusha
lret
xchg
mull
mov
je
cmpsl
rorb
inc
mov
pop
push
nop
decb
mov
cmp
mov
cmpsb
jmp
sub
test
pop
dec
inc
jmp
or
pop
pop
repnz
add
int3
adc
adc
mov
jmp
sbb
sbb
jmp
in
add
or
mov
andb
sub
jmp
mov
or
or
scas
idiv
add
jmp
mov
mov
jmp
or
insb
loop
xor
jmp
js
loopne
dec
cmc
or
cmp
sbb
fists
pop
mov
sub
mov
sub
addl
xor
es
xor
in
and
pop
inc
les
jg
jmp
std
out
jp
dec
mov
xchg
popa
cmp
inc
xchg
xor
add
scas
inc
filds
ret
fwait
sbbl
add
cmpsb
push
dec
es
loopne
sahf
je
jmp
sbb
sbb
push
sti
mov
pusha
scas
inc
jb
jp
mov
and
inc
xchg
lds
sub
jno
or
outsl
adc
adc
sbb
mov
je
ret
imul
cs
dec
fucom
sub
jmp
adc
fldcw
ficoms
daa
xchg
shrl
jge
ret
mov
jmp
lahf
in
sbb
cltd
es
imul
or
fs
mov
pop
inc
sbb
in
xor
sbb
adc
xorb
adc
jmp
cwtl
pop
lret
mov
sbb
jb
clc
cmp
jo
mov
pop
fsubr
insb
mov
sub
jmp
or
fbld
add
and
xchg
scas
jmp
fcmovb
daa
mov
pop
dec
lods
inc
out
aam
stos
or
inc
mov
fwait
shrl
add
push
jmp
shrl
dec
add
jmp
out
xlat
stos
lds
inc
sbb
mov
pusha
pop
push
jmp
test
outsb
lods
rclb
sbb
daa
xlat
xchg
loope
jmp
sbbl
fsubrs
shll
xchg
shlb
cmp
ficomps
add
xor
out
push
push
mov
jmp
ret
sub
fmuls
pop
sub
lret
cmp
daa
pop
pop
pop
adc
push
mov
inc
fsubr
xor
push
push
repnz
adc
mov
in
and
sub
jo
push
push
lret
add
and
push
jmp
lcall
and
sub
dec
mov
imul
imul
add
jmp
adc
jae
add
into
jmp
dec
enter
mov
pop
jmp
jae
test
mov
xor
nop
pop
sub
jmp
js,pn
push
leave
pop
jge
lcall
ret
outsb
mov
add
or
sub
es
jmp
fdivp
add
sti
mov
jmp
int
adc
repz
loope
xor
xchg
and
jmp
out
jecxz
rorb
mov
jmp
push
pop
mov
adc
je
loop
sbb
add
js
lea
jmp
pop
scas
jmp
dec
andb
pop
loopne
lods
cs
sub
fstl
out
sub
jmp
mov
push
push
loope
lods
jle
pop
ljmp
add
cmpb
inc
mov
popa
pop
or
pop
les
mov
cli
cwtl
xor
jmp
xchg
loopne
stos
or
in
sahf
add
outsl
into
or
sti
in
lods
or
mov
ljmp
cmp
pop
jmp
cmpb
mov
fsubs
lret
sbb
ja
sti
pusha
xchg
add
xchg
dec
adc
clc
mov
sbb
lods
and
inc
scas
movsb
repz
dec
subb
and
jmp
shll
stc
inc
add
mov
mov
jmp
dec
test
ss
jmp
inc
sbb
leave
jmp
lock
xor
pop
inc
xchg
lods
push
sbb
xor
pusha
pop
fwait
shrl
addr16
cmp
sbb
xchg
xchg
mov
jmp
mov
add
sbb
pop
xchg
xor
imul
mov
stc
jbe
fdivs
dec
and
lods
andb
mov
sub
repnz
stos
sbb
and
inc
stc
or
cmpsl
jbe
dec
mov
cmpsb
jle
sbb
jmp
fsubrs
mov
jmp
dec
mov
in
out
adc
shrb
mov
xchg
lret
sti
and
sbb
jmp
decb
sbb
movsb
inc
mov
push
adc
mov
or
test
mov
lods
jns
pop
out
jmp
cmp
pop
xor
jle
cmp
sub
pop
add
adc
imull
fs
xor
jmp
loope
jmp
outsb
fcompl
jmp
inc
jne
cmp
inc
sub
adc
mov
cmove
mov
leave
cld
mov
mov
test
add
out
jmp
pushf
and
and
push
sbb
sbb
rcll
test
jge
mov
ljmp
addl
and
pop
lret
imul
dec
popa
or
xor
xchg
adc
stos
mov
inc
outsl
jge
jmp
lods
lahf
out
jg
inc
outsb
imul
outsb
inc
adc
add
in
mov
jp
dec
adc
bnd
ss
sub
loop
jnp
push
jmp
add
jmp
jae
inc
cli
mov
add
mov
jns
jp
ljmp
movsb
xchg
rorl
push
adc
jne
in
out
imul
scas
fildl
sub
or
fidivrl
nop
fsub
adc
push
pop
sub
mov
mov
sbb
dec
repnz
adc
or
pop
jmp
out
lds
sar
insl
push
jmp
fimull
sub
lds
and
movsl
lods
push
out
xor
inc
push
xchg
aas
subl
insl
inc
xchg
xchg
shrd
adc
jle
push
fsubrp
movhps
push
jnp
scas
fisttpll
mov
mov
out
jp
enter
fwait
mov
shrl
lcall
push
fildl
jmp
scas
mov
mov
xchg
cmpsl
lcall
push
adc
sarb
or
sbb
mov
dec
sub
cli
jns
test
out
bsr
sub
jmp
dec
lods
les
stos
int3
loope
sub
push
mov
inc
mov
mov
inc
addb
xor
pop
push
jge
dec
add
adc
gs
pop
movsb
das
push
movsb
insb
jmp
push
sarl
es
mov
jg
xor
jb
pop
xchg
scas
mov
out
aaa
jo
xor
in
cltd
sti
shlb
sub
add
lahf
scas
mov
int3
adc
xchg
jge
arpl
sbb
lods
xor
paddusb
or
and
repnz
jmp
xlat
daa
cmp
dec
sbb
popf
adcl
inc
jecxz
and
inc
scas
popa
rcrb
adc
dec
ds
imul
pop
mov
ja
push
xchg
loopne
outsb
mov
or
or
daa
shr
jge
fnstcw
insb
inc
std
mov
pop
push
outsl
iret
cmp
repnz
xor
pop
add
ds
shr
mov
movb
mov
sbb
add
icebp
push
jmp
or
add
cmpsb
jns,pt
sbb
lret
clc
mov
pop
mov
xchg
bnd
xor
movsb
push
or
mov
sbb
int3
imul
rcrb
jmp
test
push
sbb
movsb
cli
add
jmp
nop
out
lret
les
shr
sub
cmpsb
lods
adc
inc
cwtl
bound
addl
cmpsb
pop
andl
jmp
mov
clc
mov
mov
mov
loop
and
jmp
test
daa
push
fdiv
sarb
outsb
stos
cwtl
and
jb
or
sti
push
loope
mov
fisttpll
fildl
movsb
sti
bound
cmp
xchg
hlt
add
mov
cmp
daa
pop
mov
imul
movsl
mov
imul
fldenv
push
lret
mov
lods
enter
out
sahf
adc
xlat
test
pop
cmp
or
sub
or
mov
ds
lret
dec
mov
dec
jns
fldt
aaa
lods
dec
mov
mov
cmp
push
fildl
xchg
leave
jmp
fimuls
mov
cli
sbb
and
aas
jb
inc
or
adc
mov
sbb
or
lea
std
cmp
insl
pop
xchg
pop
mov
cmp
je
jg
dec
dec
pop
xchg
and
aad
push
push
pop
stos
jge
jmp
jg
xchg
sbb
hlt
pop
jmp
pop
jno
scas
mov
add
add
scas
dec
inc
and
jmp
mov
shlb
rcll
lods
jb
or
cmp
cmp
shrb
xchg
fcomps
sbb
and
aas
fwait
test
scas
sub
jmp
loope
sbb
out
mov
lret
in
nop
sbb
movsl
sbb
xchg
ret
jmp
out
mov
sub
jmp
cld
inc
scas
mov
gs
mov
lods
xchg
push
sbb
movsb
mov
popf
jmp
mov
ja
dec
xor
and
orl
xchg
lods
jl
or
int
aas
mov
outsb
insl
mov
xor
sbb
mov
or
fwait
into
jmp
jo
mov
in
jmp
pop
fbstp
loope
popa
jnp
ds
je
ficompl
sbb
jmp
xchg
cltd
test
jmp
jecxz
imul
xchg
rcr
lods
jns
dec
push
cmp
jmp
nop
mov
sub
xor
imul
cmp
ss
jmp
sbb
sbb
shll
jns
popf
test
call
std
xor
inc
outsl
fs
js
fbstp
mov
shlb
pop
add
cmp
insb
sbb
and
push
push
mov
adc
add
lea
xchg
shlb
adc
pop
push
adc
jnp
pushf
cli
popa
stos
cs
or
cltd
sub
or
jmp
adc
pop
jae
out
mov
xchg
push
daa
movsb
mov
jmp
jp
jmp
jmp
dec
dec
nop
push
daa
clc
das
jmp
inc
bound
push
mov
adcl
jmp
in
mov
in
jmp
pop
pop
scas
add
mov
jmp
testb
jmp
inc
jae
xchg
push
dec
cmc
jmp
sub
sub
cmp
push
lods
fs
sbb
test
shrl
or
outsb
cs
mov
jmp
pushl
cmp
mov
jecxz
ss
xor
xchg
lods
jmp
mov
cs
mov
xchg
push
clc
out
dec
je
xor
shll
out
das
xor
push
jmp
imul
pop
cmp
cmp
jmp
nop
mov
cld
sub
fmull
repz
fs
sub
fwait
loop
dec
sbb
mov
sbb
enter
add
sbb
ljmp
cmp
or
sbb
xchg
movsb
jmp
mov
imul
rcl
es
loope
dec
enter
jns
sub
addr16
ficompl
mov
repnz
hlt
js
pusha
sbb
aam
iret
jmp
rcll
sub
out
arpl
mov
test
mov
cli
jmp
jb
aam
dec
cmp
mov
cs
mov
add
xchg
and
pop
pop
xchg
imul
mov
mov
push
mov
xchg
testl
aam
subl
std
mov
mov
pop
cmpb
jecxz
dec
jmp
mov
pop
xchg
jmp
xlat
xor
mov
jmp
pop
cmp
je
lods
inc
or
pop
and
jmp
sbb
arpl
mov
sub
jl
out
ds
test
and
and
into
ja
sbb
data16
rcll
addr16
jecxz
incb
incl
jmp
dec
ds
jp
pusha
or
xor
leave
mov
inc
lods
sub
ret
stos
mov
adc
pop
sbb
add
insl
jmp
or
decl
jmp
mov
and
sbb
jmp
fsub
nop
inc
cmp
jmp
test
mov
mov
enter
jmp
stos
mov
xchg
in
add
int3
fiadds
mov
mov
loope
or
insb
testb
inc
ds
or
sbb
div
jbe
jge
fwait
dec
dec
jmp
jmp
mov
jno
mov
std
jmp
lods
jl
pushf
add
scas
pop
clc
inc
push
ss
iret
hlt
stos
mov
hlt
gs
sub
insb
jg
std
sub
sub
sti
sbb
mov
and
lods
fldpi
pop
clc
enter
pop
sub
add
sub
and
dec
sub
xor
in
pop
push
cmp
mov
xchg
push
jmp
dec
jno
mov
icebp
clc
dec
sbb
ds
jl
jmp
xor
inc
jecxz
push
insl
inc
or
nop
inc
jmp
in
sub
outsl
ret
outsb
in
mov
sti
pop
and
jmp
push
jmp
ljmp
adc
sarb
stos
xor
in
mov
lods
and
imul
sti
negl
scas
mov
lods
mov
aas
aad
sbb
into
lahf
jmp
add
inc
lock
inc
ss
xchg
push
inc
jmp
cmp
aad
movsb
aas
into
jmp
in
pop
push
pop
jmp
mov
lahf
cmpsb
hlt
or
jmp
ljmp
jmp
add
pop
jmp
adc
pop
xchg
mov
mov
mov
in
ds
pop
mov
clc
jmp
push
sbb
scas
ret
or
aaa
jmp
jmp
aas
add
jne
xor
push
adc
rcll
out
adc
jmp
cmc
test
fs
add
outsb
rcr
nop
mov
sub
stos
adc
inc
popa
or
int
cmpl
js
and
lods
xor
pop
xor
mov
or
and
jmp
out
push
insl
mov
fwait
or
loope
jmp
sub
cmc
mov
test
mov
mov
mov
mov
jo
mov
shrl
repnz
rorl
insb
popa
xchg
fildl
jmp
ret
repz
mov
jno
adc
adc
sub
cmp
xchg
aad
or
jmp
mov
lods
add
xchg
jmp
shl
int3
aaa
pop
lret
loope
mov
out
lods
sbb
xor
inc
loopne
idivb
pop
jmp
outsb
adc
lcall
aam
fsubs
pop
unpcklps
stos
stc
pop
icebp
mov
sbb
pop
sbb
scas
jl
inc
or
jmp
jo
mov
and
leave
loope
test
outsb
mov
adc
sub
cmp
jmp
cmpsb
jmp
lock
sbb
cmc
ljmp
jmp
insb
sub
dec
sub
mov
mov
aam
xchg
jmp
lods
push
mov
jae
scas
fldenv
or
cld
sbb
inc
lods
mov
adc
add
sbb
sub
pop
mov
hlt
outsl
sub
adc
xorb
sbb
lret
jmp
out
xchg
ret
jmp
ja
fdivp
and
push
int3
popa
xor
mov
fadds
adc
leave
cmpsb
xchg
test
push
clc
out
sbb
push
popa
int
cmp
aaa
or
lds
inc
cmp
ja
pop
add
jmp
les
cltd
sbb
jo
push
addr16
inc
movsl
xchg
sbb
sub
es
lock
sub
dec
pop
xor
dec
mov
dec
jp,pt
sbb
pop
insb
test
add
ss
fsubr
jbe
or
jae
cld
mov
dec
add
and
pop
pop
aad
jmp
adc
dec
jmp
bnd
pop
or
lock
aaa
imul
sbb
jno
and
inc
jmp
sbb
sub
fisttpl
jmp
stc
test
fistps
cmpsl
mov
jg
mov
push
or
mov
or
movsl
or
daa
add
jb
aam
shl
push
inc
jmp
test
enter
shr
and
inc
add
test
clc
jmp
aas
add
lds
push
mov
xchg
cmp
jmp
or
push
jmp
mov
dec
xor
add
fmul
pop
push
and
sub
jecxz
dec
scas
hlt
movsl
stc
xor
rcl
ss
fs
int3
lods
pop
or
adc
mov
dec
aas
dec
mov
jmp
sub
mov
sbb
or
sub
jmp
mov
dec
pushf
arpl
int
outsb
lods
movsl
ss
and
pop
notl
repz
idivb
clc
jp
scas
jmp
lea
jo
shr
shlb
adc
stos
lods
xchg
jnp
jmp
jb
popa
bnd
call
mov
jmp
xchg
std
mov
lock
sbb
cwtl
cmc
cmp
and
jle
adc
mov
into
test
ljmp
outsl
sbb
add
jmp
mov
test
pusha
stos
enter
or
jmp
out
int3
mov
cs
sub
int
cld
out
addb
inc
scas
xor
mov
test
cmp
sub
cltd
mov
pusha
mov
mov
pop
pop
xchg
movb
cmp
jmp
fmuls
cltd
jmp
cmpl
das
or
pop
push
sub
add
sub
scas
jmp
pop
lods
sahf
push
adc
cmc
movsb
imul
dec
clc
sbb
dec
daa
sti
pop
and
dec
jmp
cli
das
or
and
pcmpeqw
loop
jmp
push
mov
or
jmp
jnp
aas
sbb
cmp
pop
push
xor
out
std
stos
imul
xor
sbb
sub
jmp
in
xchg
fsubrl
jmp
and
adc
push
pop
add
ret
xor
add
jnp
mov
stos
xchg
or
sbbb
sbb
xchg
jmp
clc
out
divl
xchg
lds
insb
cmp
push
jo
sub
jmp
leave
call
loopne
sti
int
cld
cltd
jmp
cmpsb
sub
leave
jmp
xchg
dec
rcll
inc
sub
cmp
sub
cmp
ja
test
jmp
jnp
pop
and
inc
loopne
or
lock
sub
jmp
mov
divb
aam
jp
mov
movsb
fstps
xchg
adc
jnp
add
test
lea
addl
inc
mov
stc
andl
test
adc
or
adc
and
popf
xlat
push
sub
mov
push
js
sub
sub
jmp
or
loopne
cmpsb
je
xchg
xor
fsts
xchg
mov
mov
mov
pop
cmp
cli
mov
mov
pop
adc
dec
sbb
xlat
loopne
in
ret
subl
arpl
pop
sub
and
jmp
stos
scas
mov
push
jge
shlb
jl
stc
cmc
mov
sub
lahf
push
and
test
and
test
xor
mov
or
or
sarb
lods
subl
stos
inc
hlt
mov
int
les
mov
pushf
cmp
jb
testb
dec
repnz
sub
add
lret
cmpsb
mov
inc
rclb
jns
xor
jno
cmpsl
jb
sbb
add
jmp
mov
or
mov
jl
or
movsl
insb
leave
imul
cmp
jns
fs
jo
mov
jmp
or
pop
es
sbb
jmp
insb
loopne
jp
cltd
adc
mov
mov
lods
lock
push
adc
aam
lahf
scas
sbb
dec
jmp
xchg
or
or
in
and
pop
cld
sub
xchg
orb
add
into
aad
sbb
pop
pushf
xchg
stos
scas
xor
imul
enter
lods
push
ficoms
adc
lods
outsb
stc
jmp
rcr
xchg
xchg
sahf
xor
jmp
int
mov
jle
jmp
lcall
jmp
mov
scas
popa
jmp
insb
iret
push
or
fstl
lds
pop
cmp
jl
adc
test
pusha
xchg
sbb
cmc
sbb
adc
fadds
movsl
jmp
pop
mov
jmp
lds
jae
test
cmp
psubsb
mov
adcb
lock
xchg
jns
loope
daa
icebp
jmp
mov
push
push
bound
mov
sub
jmp
jecxz
les
or
jno
pop
je
lods
fst
sahf
into
sbb
pop
scas
and
jmp
jg
sbb
xor
adc
cld
adc
jmp
hlt
push
or
and
addl
sbb
fisubrs
push
adc
or
jmp
and
mov
aam
add
test
push
pop
gs
sahf
shr
in
push
pop
cs
testb
cmp
adc
rcll
out
gs
mov
jmp
adc
sbb
push
lods
lods
push
mov
mov
jecxz
push
jg
sub
adc
jp
mov
jmp
xor
and
mov
cmpsl
int3
push
mov
cmp
inc
andl
into
dec
cmpsb
sub
dec
dec
lahf
pop
push
daa
sbb
divl
ss
paddsb
jmp
jns
fisttpl
jnp
or
arpl
jmp
shlb
movsb
xchg
add
divb
aad
pop
jmp
pop
mov
push
xchg
push
lods
scas
mov
ret
inc
iret
sarl
push
fsubs
test
cmp
and
sbb
xchg
ljmp
test
mov
rcrb
jmp
fisttps
andb
lahf
aaa
into
movl
rcll
adc
xchg
test
sbb
xor
cli
js
rol
mov
and
xor
mov
adcl
fucomp
pusha
mov
add
cmpsl
xchg
mov
jmp
xchg
and
jp
mov
inc
push
test
jnp
in
cmp
xor
xor
mov
or
mov
je
lea
xor
mov
cmp
loopne
les
cmc
mov
jmp
or
out
pop
lds
das
xor
adc
mov
jmp
sar
jg
subb
or
pop
test
jmp
sti
sbb
mov
mov
xorb
jb
xchg
stos
test
xchg
mov
into
jmp
pushf
call
jmp
gs
aaa
fbld
pop
jmp
mov
push
push
cmpsl
jmp
imul
xor
cmp
sub
mov
lret
mov
in
and
pushw
scas
dec
aam
and
mov
test
push
andl
push
jmp
push
imul
inc
cmpsb
adc
xor
es
jmp
insb
fsubr
inc
push
push
jmp
mov
xor
pop
lret
mov
rol
sub
paddusb
jmp
loopne
bound
mov
mov
cmp
loopne
test
add
hlt
arpl
and
inc
subb
daa
jno
mov
mov
testb
mov
or
sub
in
push
movsb
inc
inc
sub
jecxz
jge
sbb
push
inc
out
sub
loopne
lods
jmp
in
sbb
pop
xor
jmp
inc
outsl
mov
jmp
mov
sti
cmp
js
pop
push
adc
or
in
cmp
add
mov
push
bswap
xchg
xor
idivl
inc
aaa
add
cmp
jmp
dec
sbb
inc
out
mov
fadd
or
jb
cmpsl
dec
sti
add
stc
les
jmp
jo
cmp
push
adcl
es
aas
mov
sub
adc
sbb
stos
insb
xor
gs
lret
daa
mov
jbe
mov
pop
dec
dec
and
lods
dec
fsubs
pop
pop
lcall
xlat
in
int3
enter
sub
mov
fmull
add
rolb
popl
in
inc
lods
jo
mov
mov
call
jmp
or
in
lahf
cmpl
sahf
add
cmp
xor
fucomp
inc
push
cmp
sub
into
dec
pushf
push
mov
rclb
mov
pop
pop
and
push
inc
scas
lock
addr16
adc
jmp
jp
ret
pavgb
jmp
xchg
and
xchg
negb
mov
cmpsl
pop
and
jmp
mov
jbe
sbb
dec
jmp
lret
adc
dec
dec
jae
sub
jg
push
jmp
scas
loop
fsubrp
mov
xchg
sbb
pop
mov
push
cli
xor
dec
or
das
subb
jle
ss
lret
dec
sub
jl
fcoml
inc
inc
jmp
sbb
inc
ja
mov
jne
sbb
and
aad
xorl
sarb
xchg
and
jmp
sbb
dec
test
xor
inc
lods
mov
add
push
jmp
mov
jae
xchg
sub
jb
sbb
adc
rorb
mov
or
stos
pxor
mov
jmp
and
dec
in
push
repnz
je,pn
jmp
sahf
sub
jmp
sbb
jmp
and
loopne
jmp
sub
pop
inc
call
repnz
shll
pushf
inc
sub
dec
push
sahf
jmp
imul
mov
imulb
xchg
jle
mov
jmp
or
jecxz
cltd
jg
push
push
movsl
ret
jmp
cmp
jp
or
mov
rorb
sub
add
test
adc
rcr
jg
iret
jmp
mov
les
dec
out
fnstsw
push
leave
jmp
push
jbe
push
pop
cwtl
mov
inc
test
push
jmp
shrl
cmp
sub
lods
push
pop
scas
mov
in
daa
hlt
movsb
add
push
icebp
add
scas
dec
adc
scas
push
pushf
repnz
add
shll
ljmp
dec
mov
inc
lods
jmp
dec
inc
mov
or
in
dec
cmp
pop
mov
stc
jmp
or
outsl
das
shll
jno
inc
ljmp
in
addr16
lods
imul
jb
xor
shl
ljmp
je
sbb
cltd
or
out
dec
xchg
jmp
mov
or
in
adc
push
insb
cmc
mov
jmp
les
pop
push
jmp
ret
add
jo
xor
xchg
sahf
cs
std
dec
int
mov
lret
dec
call
pusha
mov
jmp
lock
cmpsl
sub
or
sub
jmp
push
cli
xor
jmp
js
xor
rclb
enter
push
jno
sbb
lret
push
js
add
int
jmp
lock
inc
cmp
jmp
imul
shll
je
or
data16
popa
cmp
sub
cmp
mov
lock
jns
pop
dec
mov
sbb
sub
cli
sub
aas
aad
xchg
push
cmpsb
aaa
testb
test
push
lcall
mov
lock
out
sahf
sub
or
mov
lods
or
inc
sbb
insl
and
notl
mov
mulb
inc
jno
dec
and
popf
sub
cwtl
inc
into
xchg
ret
cmp
imul
jne
sbb
mov
clc
sbb
mov
jmp
jb
or
std
subb
aam
pop
loopne
jecxz
pop
adc
adc
loop
out
repnz
sahf
sbb
mov
jp
xlat
cmp
ret
sub
sbb
xorl
shr
scas
push
xchg
adc
inc
imul
daa
mov
and
stc
in
jg
cmp
lret
mov
and
filds
icebp
inc
jmp
cmp
adc
popf
and
inc
mov
lret
fldt
add
pop
shlb
and
adc
sbb
imul
in
or
jmp
push
insb
xchg
mov
mov
push
pop
mov
out
or
or
dec
cld
dec
lret
int
scas
or
bound
or
dec
sbb
sub
mov
pop
and
fdivrp
jmp
lahf
push
mov
outsb
int
push
jle
add
xor
jmp
movsl
setne
mov
lcall
out
out
ret
mov
and
imul
or
sbb
fbstp
mov
jmp
sub
subb
dec
sub
loope
pop
inc
jle
cmpsl
sbb
push
jmp
sub
lods
adc
je
lock
outsb
lret
repz
repnz
cmp
jmp
inc
repz
sub
jmp
ret
addr16
jmp
sub
lahf
mov
jmp
std
xchg
jmp
dec
jns
inc
cmp
pop
dec
jmp
aam
jp
clc
fldt
xor
pushf
pop
and
cli
adc
sub
sahf
xor
or
mov
inc
and
std
test
cmp
ljmp
out
cmpsl
xchg
movsb
cmp
push
adcb
sbb
test
test
mov
add
push
jp
leave
int3
jmp
dec
or
inc
sub
mov
daa
nop
adc
insb
mov
leave
pop
int3
mov
cwtl
sub
adc
and
sub
adc
jmp
xchg
xchg
or
jmp
or
adc
dec
pop
jmp
icebp
mov
int
dec
pop
or
sbb
jmp
pushf
cltd
dec
fbld
and
arpl
sub
jmp
jmp
mov
ja
dec
repnz
add
out
rcl
nop
sub
into
test
pop
sbb
and
andl
xlat
mov
mov
sbb
push
jmp
es
in
mov
ss
push
push
test
lock
jns
mov
sub
add
neg
dec
test
xor
in
outsb
mov
sbb
inc
dec
xor
fsubr
test
je
loopne
inc
jmp
xchg
jmp
sub
aad
movsl
je
xchg
sub
jmp
test
aam
sarl
push
loope
pop
loop
mov
test
out
jae
cli
lret
lcall
xchg
popa
notb
fistps
pop
dec
jmp
stos
mov
ror
outsb
push
jmp
mov
jns
lods
xor
mov
in
ds
jmp
mov
jecxz
xchg
gs
inc
lret
insb
dec
push
leave
jp
mov
mov
ss
pop
cmp
sub
and
pop
imul
dec
int
sti
jge
lods
lds
xor
cltd
xchg
sbb
sbb
mov
shlb
dec
js
mov
xor
or
loop
aaa
xor
pop
es
call
jmp
inc
arpl
scas
sahf
gs
jo
dec
test
movsb
pop
or
imul
popf
push
and
inc
icebp
inc
lahf
fcomip
mov
aad
lods
cld
push
cmp
sarb
stc
cltd
or
jp
data16
mov
or
jmp
je
xor
lcall
out
fimuls
inc
jmp
ja
stos
ret
cld
or
cmp
fs
cmpsl
addr16
mov
int
and
push
inc
mov
jmp
pop
in
sub
adc
jns
and
adc
and
and
aad
jle
xor
mov
xchg
mov
fsubrl
adc
lods
or
inc
lods
pop
xor
int
pop
push
mov
mov
pop
jmp
scas
xchg
shrl
out
stc
jb
dec
ljmp
dec
cwtl
or
cmp
or
push
pop
jmp
popa
ret
loope
xchg
jbe
jmp
mov
adc
jmp
in
fwait
dec
imul
jp
mov
jo
popf
test
jmp
mov
add
mov
sbb
cmp
ja
popf
frstor
mov
ret
jmp
push
push
jnp
xor
jmp
add
lea
or
mov
push
mov
jmp
aas
cld
div
mov
or
sbb
jl
jmp
arpl
addb
jmp
xchg
test
mov
sbb
ret
mov
sub
push
aas
shlb
popf
movsl
xchg
ficompl
fildl
or
stc
mov
push
jmp
hlt
or
out
lods
js
mov
pop
rorl
cltd
jmp
pop
and
mov
js
pop
and
xor
sbb
mov
pop
je
cmc
inc
jmp
cmp
in
orl
cmpsl
mov
push
fisubl
jmp
rcrl
jmp
mov
adc
mov
sbb
stos
stc
lods
enter
mov
jmp
imul
mov
sub
lods
mov
jmp
sahf
iret
inc
jb
dec
mov
mov
aam
pop
cmp
and
push
sub
pop
adc
imul
movsl
adc
lods
pop
xlat
push
mull
or
enter
sub
inc
sub
jmp
sub
fmul
or
jbe
repnz
jp
cmp
jmp
je
aad
cmpsl
jmp
add
dec
push
jmp
sbbl
lods
xor
hlt
mov
lret
ja
sbb
cmpsb
cmp
int3
pop
mov
lock
call
arpl
in
sbb
repz
push
jle
push
imul
dec
adc
add
lods
orb
lock
mov
pop
pop
jmp
pusha
xor
or
imul
and
cmc
sbb
movsl
loope
dec
inc
jmp
shrl
lea
mov
sti
xor
ja
jmp
mov
int3
loopne
inc
xor
adc
js
repz
daa
pop
jmp
push
pop
sbb
fwait
hlt
iret
cs
repnz
fldcw
sub
popf
sub
cmc
xchg
lods
stos
testl
dec
es
int
sbb
push
inc
push
lods
fsubr
mov
push
js
sub
jb
popf
mov
inc
iret
inc
ja
dec
sub
andb
jg
loop
les
push
jmp
addr16
push
jns
out
sub
add
jge
jns
sbb
mov
fildll
sbb
jmp
repnz
xchg
sub
jmp
mov
jns
jmp
sbb
cli
mov
notb
scas
push
jmp
jne
cs
xor
subb
jge
les
mov
add
shl
repz
test
jns
shrb
ret
mov
call
enter
mov
sbb
cld
movsl
cwtl
sbb
sti
mov
jmp
icebp
cmpsb
fidivrl
test
adc
sub
dec
jmp
leave
cmp
mov
addr16
ljmp
add
movsl
cmpsl
sbb
dec
jae
dec
in
add
and
jmp
das
pop
adc
jecxz
clc
cmc
add
cltd
pop
pop
mov
inc
jne
fsubrs
out
mov
add
mov
stc
fnstenv
clc
adc
jmp
push
mov
nop
test
push
lcall
gs
jmp
lahf
xchg
pop
push
sub
nopl
enter
loope
stos
mov
das
sbb
mov
dec
xor
sub
lods
push
lods
or
push
call
shr
int
jbe
sbb
jmp
ret
cmpsb
sub
sbb
movsb
dec
sbb
push
push
jmp
adc
mov
mov
fucomp
scas
dec
or
mov
pop
sub
cmpsb
mov
shr
mov
adc
inc
or
insl
leave
in
in
jmp
sbbb
jmp
ljmp
lods
push
mov
mov
mov
aad
jmp
aaa
ds
test
jmp
ret
or
xchg
sbb
out
xchg
xor
cli
pushw
movsb
in
jmp
fcmovb
in
nop
movsb
aad
les
lret
pop
ds
lods
call
jae
popl
jmp
shll
and
sub
mov
adc
lcall
std
lret
fstl
test
outsb
insb
ljmp
shr
je
mov
lods
lods
sbb
imull
dec
rorb
and
pop
jmp
cmp
jl
and
int3
fwait
inc
jmp
loope
cmp
repz
iret
stos
pop
jle
mov
or
add
pop
jmp
push
push
cmpsb
sub
js
imul
lods
jmp
xor
in
fsubr
push
cmpsl
dec
push
xchg
incb
mov
mov
stos
jmp
nop
fldt
jmp
cmp
and
inc
mov
pop
jnp
adc
pop
cmp
mov
or
iret
jge
faddl
add
js
lock
push
dec
adc
push
xor
mov
or
sbb
mov
dec
or
mov
xor
sub
jnp
push
imul
lahf
cmp
sbb
out
sub
jmp
filds
mov
push
ret
sub
xor
pop
mov
mov
dec
sub
addr16
cmp
out
in
sub
fmull
call
lods
xor
mov
or
mov
shlb
jmp
lret
and
sahf
jmp
add
mov
in
dec
jmp
mov
xorl
inc
and
jmp
bound
test
jb
in
fstl
lcall
jmp
add
stc
inc
jmp
scas
xor
sub
iret
mov
dec
test
jmp
push
cmp
mov
jmp
int
jns
pusha
add
or
dec
xchg
lods
popw
xchg
and
sub
nop
cltd
dec
xor
loopne
jmp
mov
out
and
jmp
sti
iret
hlt
pop
popf
mov
scas
rclb
mov
aam
jmp
xor
insl
and
inc
pusha
jmp
jae
lcall
inc
cmp
xchg
mov
mov
fimuls
sahf
jmp
jg
lods
aad
jb
jmp
add
jno
lock
movsl
jmp
cli
cmc
adc
mov
pop
pop
imull
movsl
mov
fadd
mov
or
jnp
jecxz
sar
repz
push
std
sbb
cmpb
lods
shrb
mov
jmp
mov
mov
data16
cmpsl
jae
aas
scas
sub
jmp
ret
or
in
mov
outsb
mov
in
orb
push
and
inc
pop
xor
sub
push
ret
adc
sbb
add
cmp
call
cs
subl
insb
sub
les
es
cmpsl
jmp
mov
mov
cld
jmp
push
out
push
jae
ror
outsb
add
ret
dec
xor
sub
lods
loop
cmp
fs
jmp
jge
test
add
jmp
daa
nop
insl
push
cmc
call
and
dec
int3
sti
stos
jg
jns
push
arpl
ret
xlat
jmp
imul
int
adc
dec
rclb
mov
jmp
in
jbe
add
xchg
in
sub
fbld
adc
mov
in
loopne
mov
xlat
lret
cs
hlt
adc
mov
test
cmc
repnz
sub
pop
das
inc
out
or
sbb
scas
nop
fwait
cmp
mov
lea
test
jge
cld
outsb
pop
mov
xor
aas
cltd
jl
xor
or
cmp
mov
iret
imul
xchg
xor
sti
inc
cmpsb
enter
data16
add
jmp
add
sahf
fidivrl
fucomp
movsb
sub
and
jmp
adc
jmp
mov
imul
ds
inc
pushf
arpl
adc
cwtl
es
xchg
add
out
std
jmp
outsl
mov
pop
in
mov
adc
test
sbb
push
push
int
hlt
pop
cltd
jmp
fistps
mov
outsb
testl
cld
sbb
std
scas
ljmp
repnz
out
mov
movsb
mov
aas
fmull
lods
jp
gs
fucomip
xchg
outsl
shll
loopne
pop
repnz
out
or
hlt
xor
inc
out
gs
insb
imul
pop
or
mov
imul
jl
cmp
sbb
jmp
je
pop
shlb
jmp
outsb
pushf
sub
and
fidivl
mov
jmp
cmpsb
popa
mov
sub
xor
sub
outsb
jns
repnz
fwait
imul
divl
dec
jmp
into
lcall
cld
pop
mov
dec
jp
in
add
jmp
dec
pop
or
inc
or
jmp
in
rep
xchg
dec
jmp
imul
jb
ret
icebp
sbb
mov
push
lods
clc
out
testb
cmp
dec
jmp
in
movsl
bound
cmp
jmp
insl
or
out
xchg
ror
jmp
cmpsl
lahf
clc
add
mov
and
pcmpgtw
outsb
scas
pop
and
and
sub
mov
aad
jmp
xor
mov
pop
fs
adc
push
sbb
cltd
bound
mov
repnz
sbb
fists
add
xor
jmp
cmp
or
or
push
add
fsubrp
loope
iret
rcrl
stos
imul
sti
popa
push
cmp
pop
xlat
add
add
clc
jmp
pusha
call
cmpsb
data16
mov
leave
mov
fs
push
xchg
lock
xor
dec
lods
push
stc
scas
add
mov
imul
lods
pop
sbb
or
push
fdivrs
cld
pop
sub
stc
sub
and
scas
xchg
cmpsb
adc
mov
hlt
jmp
adc
leave
scas
sub
jmp
and
mov
push
iret
add
jb
rolb
xchg
out
add
pop
jmp
cld
dec
bnd
push
xchg
jmp
mov
in
mov
aaa
jge
mov
jp
arpl
xlat
nop
jmp
pop
sahf
cmp
or
fstps
jmp
adc
repz
into
cmpsl
jmp
pop
jo
aaa
sub
jmp
adc
es
dec
xor
jmp
mov
pop
xchg
ficoml
jmp
lret
and
jb
dec
mov
sbb
pop
pop
std
jg
int3
push
repnz
in
sbb
iret
mov
xor
mov
test
nop
fdivp
push
pop
jmp
lock
pop
pushf
xor
jmp
arpl
pusha
mov
dec
lea
jmp
and
jmp
imul
jmp
inc
ret
aaa
bound
cs
pop
pop
adc
into
adc
and
sbb
pop
insl
mov
hlt
jmp
pop
push
pusha
xchg
sub
or
push
mov
std
jmp
out
mov
jmp
push
xchg
xchg
shlb
int3
fwait
imul
lods
push
frstor
add
and
scas
jne
sahf
out
or
cmp
lahf
inc
jmp
mov
xchg
xor
fisttpl
jmp
imul
fistps
cs
aam
sub
push
cltd
and
jmp
dec
loopne
daa
mov
sbb
int
shl
cltd
subb
or
mov
data16
jmp
mov
mov
jmp
sbb
or
jmp
mov
xchg
inc
sub
lods
xchg
int3
mov
cld
das
jnp
pop
push
rorl
cmpsl
sub
sahf
daa
fwait
ja
dec
mov
and
rclb
lea
or
push
lods
rclb
std
pop
and
mov
jmp
adc
or
or
inc
adc
dec
jle
por
out
cmpb
cmpsb
pop
jo
sbb
test
add
and
xor
push
sbb
arpl
stos
imul
push
sbb
ret
jno
or
pusha
ds
mov
add
jmp
subb
jmp
dec
scas
cld
dec
xchg
sbb
cli
sbb
cmp
mov
mov
adc
movd
sbb
jmp
dec
fstps
cwtl
lods
adc
jb
sti
xchg
jg
xor
adc
sub
adc
cmpsl
fcomip
les
lret
ret
lods
gs
xlat
sahf
add
mov
aam
outsl
jnp
add
jne
jmp
xor
iret
lods
idivb
jle
int3
and
adcb
sub
enter
jmp
cs
dec
dec
fcoms
es
or
shrl
push
loop
ljmp
xchg
addb
mov
loopne
or
mov
cwtl
push
loop
push
int3
mov
and
mov
in
and
shrl
jmp
sub
cmp
jmp
sbb
inc
pop
pop
das
or
call
jmp
jp
sahf
adc
push
dec
pop
jmp
xchg
cmp
sub
adc
mov
mov
scas
out
je
jl
adc
ja
clc
sti
cmp
cmp
aam
inc
loope
and
xor
jge
cmpsl
ss
dec
test
andl
jb
jae
cwtl
push
mov
cmc
sub
iret
xor
out
sub
lds
cmp
or
push
nop
jmp
mov
mov
jmp
sbb
or
fs
data16
xchg
jecxz
xchg
dec
inc
shr
stc
mov
cli
gs
and
jb
in
pop
sbb
imul
push
and
lods
mov
mov
add
repz
push
jmp
or
and
dec
sub
push
and
sub
jmp
sbb
test
jmp
rcll
shrb
test
pop
mov
mov
or
xchg
pop
lods
cmp
mov
sbb
mov
cmp
add
mov
mov
leave
scas
in
mov
mov
int3
dec
inc
mov
xchg
and
cmpsb
cmp
sub
stc
jmp
or
pop
lcall
cmp
dec
and
lods
pusha
xchg
lret
dec
mov
jmp
or
repnz
outsb
and
mov
subb
mov
inc
xchg
sub
jmp
mov
nop
bound
pop
jmp
stc
movsb
sub
dec
test
push
insl
pop
xchg
or
adc
sahf
ret
inc
ljmp
js
push
icebp
mov
push
aam
jmp
pavgb
aaa
sahf
nop
shrl
movsl
scas
and
cwtl
aas
sbb
dec
jmp
mov
jmp
jge
in
sub
xlat
lds
cmpsl
xchg
xchg
ljmp
mov
fwait
mov
orl
in
jmp
xchg
pop
arpl
pop
sub
push
ret
cs
adc
outsl
jns
dec
sub
mov
jb
adc
push
jmp
imul
leave
or
cmpsl
and
mov
cmp
int3
out
cmp
sub
jnp
xor
mov
xchg
loope
jle
shlb
insb
ja
ret
sbb
sub
jl
arpl
int
cmp
push
mov
fucomip
jno
or
xchg
jmp
lock
clc
jecxz
sbb
jmp
ds
int
add
fcmove
adc
xor
mov
mov
dec
iret
rcrl
mov
push
adc
in
push
xchg
cmpsl
dec
test
jmp
pop
dec
rcrl
lahf
inc
fsts
and
lods
mov
mov
jmp
mov
xchg
jmp
jge
popa
repz
jno
lods
mov
daa
loope
sub
cwtl
lcall
jnp
out
add
xor
mov
xchg
cli
or
mov
in
pop
cmp
push
sbb
xor
inc
cmpxchg
sarb
mov
mov
ljmp
insb
mov
cmp
cmp
mov
ja
mov
fwait
nop
push
jmp
and
jp
jmp
bswap
int
shll
xor
cld
sub
xchg
or
push
rclb
pop
jb
lcall
xchg
or
mov
loope
xchg
negl
and
inc
jno
mov
int3
leave
jne
pop
rorb
xor
in
jp
stos
jae
or
xchg
xchg
or
jge
xchg
daa
xchg
add
pop
and
jmp
mov
add
sbb
jmp
xchg
sbb
lock
sub
jo
cld
and
sub
jmp
mov
out
es
mov
lods
pop
lret
int3
and
fists
test
pop
xchg
inc
in
mov
sbb
test
adc
mov
gs
cmp
repnz
sbb
sub
xor
xchg
incl
mov
adc
ret
pop
jmp
in
int
and
pop
repnz
sub
clc
sbb
not
outsb
nop
mov
test
shll
sbb
shl
and
or
and
pop
movsb
fnstcw
leave
arpl
xor
dec
jnp
jmp
out
shll
jp
jmp
push
stc
xchg
test
fsts
pop
dec
sub
ret
loop
aaa
sub
sbb
lea
andb
shr
pop
and
cmpsb
lcall
mov
das
scas
movsl
les
jmp
mov
jmp
jge
gs
mov
or
in
aas
mov
mov
xor
jp
outsl
jmp
bound
pop
divl
int3
lods
sahf
mov
daa
sub
loope
lock
adc
jmp
mov
pushf
pop
popf
stos
jmp
dec
mov
cmp
je
cld
xchg
frstor
push
iret
stos
or
adc
jecxz
hlt
ja
jbe
cmp
ret
inc
popf
lods
adc
insl
mov
incb
in
orb
repnz
mov
stc
adc
jae
sub
xchg
fs
mov
jmp
and
enter
sub
pop
jo
lods
xchg
call
sbb
rcr
jmp
ret
lods
test
jmp
dec
movsb
or
lods
pop
out
test
notl
jl
mov
gs
mov
outsb
dec
xor
leave
cmp
push
sub
or
xlat
pop
and
repz
mov
lea
sbb
shlb
jb
push
mov
sub
cmp
arpl
add
outsl
push
gs
jmp
sahf
add
dec
sub
ret
inc
insl
sbb
std
jne
fcmovbe
xchg
mov
jmp
lods
jnp
cmp
cltd
and
pop
mov
daa
jmp
xchg
xor
sub
out
out
aaa
xchg
jbe
ss
idivb
jmp
arpl
mov
mov
push
pop
pop
lods
mov
jmp
stc
test
mov
and
lods
loop
adc
jg
jl
mov
pop
mov
xor
loope
cltd
mov
imul
repz
ds
nop
jmp
data16
jae
xor
and
imul
xlat
sahf
leave
mov
adc
jmp
loope
mov
aam
xor
dec
or
lret
dec
jmp
or
pop
in
jns
ja
cmp
xchg
pushl
xchg
fsubrs
test
add
lret
or
rorb
sbb
jge
jae
aaa
arpl
mov
jmp
jnp
push
addr16
mov
cmpsl
lods
jmp
ret
fmul
mov
inc
dec
cmp
push
or
mov
daa
dec
sbb
add
jecxz
mov
fisttps
lock
clc
repnz
push
push
mov
fiadds
addr16
xchg
sub
cltd
jne
dec
int3
dec
push
lods
mov
cmp
aam
mov
btr
mov
and
scas
and
movsb
or
aas
mov
into
fs
js
rcrl
stc
push
lret
sub
rclb
es
sbb
jmp
inc
adc
cmpsl
ret
cli
jmp
adc
imull
mov
bound
sbb
lcall
call
in
pusha
add
pop
xchg
push
neg
in
sub
fcomip
push
jmp
in
xchg
jo
jmp
cmovg
sub
les
xor
jmp
sub
sarb
lods
test
push
pop
push
and
mov
ja
std
shlb
lods
sbb
and
and
jmp
popf
mov
cwtl
dec
icebp
shll
popa
pop
xchg
cmp
dec
or
mov
fwait
aas
add
nop
aad
dec
or
sub
jmp
out
pop
mov
or
stos
jmp
sub
push
mov
xchg
movsl
jmp
sub
or
jmp
aas
test
bnd
sbb
mov
sub
add
add
lea
lods
iret
fisttps
daa
outsb
mov
cwtl
shll
fldt
jmp
jae
pop
es
mov
or
mov
inc
jmp
out
je
jmp
mov
out
loope
or
enter
test
lret
mov
cmp
repz
pop
nop
in
push
jmp
push
mov
sarl
insl
repnz
push
push
xlat
mov
mov
add
data16
jp
lods
out
ret
fs
sbb
lret
int
lock
rclb
sbb
hlt
jmp
fldcw
pushl
enter
add
xorb
sbb
loope
xchg
out
push
out
jmp
fmuls
mov
iret
mov
adc
push
dec
push
jb
inc
jmp
adc
and
rorl
int
sub
outsb
popf
jg
mov
pop
sub
hlt
and
loopne
cmp
or
sub
arpl
pop
lea
adc
mov
inc
enter
adc
jmp
sub
xor
inc
cmp
add
lods
lret
inc
insb
jb
daa
shlb
cmp
xor
js
and
stc
pop
mov
mov
fsubp
or
mov
xchg
leave
mov
fwait
rorl
js
pop
sub
jmp
xchg
nop
and
lds
test
scas
sbb
mov
push
jg
sub
out
xor
sbb
in
hlt
sbb
inc
int
add
lcall
daa
in
sbbb
jmp
mov
cld
gs
fwait
xchg
jmp
pop
dec
cltd
dec
cs
lods
insl
not
pushf
sub
mul
xor
and
pop
pop
int
shrb
scas
add
cmc
cmpsl
jmp
jns
sub
mov
mov
sti
adc
pop
movsb
lods
fisubrl
adc
or
stc
mov
or
int
fchs
test
xor
mov
rclb
or
leave
xchg
jmp
mov
cmp
mov
rorl
sbb
dec
cmp
lds
jnp,pt
or
flds
or
arpl
cmp
jmp
jle
mov
jmp
and
jmp
push
mov
or
jmp
sub
es
mov
outsw
jmp
mov
les
movsl
push
pop
insl
xor
das
or
sub
push
jmp
push
add
xor
mov
lods
or
jmp
in
fstp
jle
sub
shl
mov
scas
stos
cmp
and
cmp
or
lret
lahf
mov
mov
pop
jl
popa
xchg
pop
inc
mov
daa
jnp
add
adc
repnz
rcrl
push
xor
and
popf
sbb
mov
lret
aaa
jmp
test
mov
inc
and
xor
add
jmp
scas
dec
pushf
xchg
add
sahf
sbb
mov
pop
fmull
pop
mov
lods
sbbl
je
jg
lods
mov
icebp
sti
lods
arpl
popf
jmp
mov
mov
and
push
xlat
daa
imul
mov
adc
sub
xchg
leave
enter
das
sub
mov
jns
mov
mov
imulb
xor
mov
inc
ss
xchg
aas
sub
jmp
enter
fldl
jmp
fs
jmp
xor
movsl
dec
pop
std
jmp
mov
mov
inc
and
pop
push
pop
fsubrl
lods
dec
adc
inc
fldt
mov
inc
jmp
in
adc
push
push
outsl
adc
cmp
scas
jno
jmp
sbb
push
dec
int3
and
jo
scas
or
mov
jbe,pt
pop
sbb
mov
or
mov
imul
adc
ljmp
dec
jno
scas
sbb
adc
inc
mov
pushf
pop
push
push
jmp
sbb
lret
sub
cmp
in
stc
idivl
jo
hlt
jge
aad
jmp
or
xchg
stc
roll
ss
and
add
repz
in
jbe
add
sub
add
mov
cli
jb
lahf
sbb
int
andl
psllq
repnz
fdivl
adc
out
notb
int3
inc
int
lock
sub
leave
and
sub
scas
jmp
sbb
js
adc
pop
sahf
xorl
xchg
roll
xchg
sbb
add
jo
imul
dec
mov
into
negb
and
scas
adc
add
int
mov
sub
inc
sbb
insb
jmp
jp
pop
orl
outsb
jmp
aas
and
js
nop
cltd
jecxz
lods
mov
int
jns
pop
scas
jb
or
imul
jmp
add
sub
jmp
lods
lds
mov
scas
idiv
mov
jnp
out
cmp
xchg
bnd
jmp
imul
fnsave
popf
jnp
mov
mov
daa
xchg
sbb
xchg
dec
jl
popf
insl
jmp
loopne
pop
gs
cs
int3
push
jecxz
xchg
xchg
scas
imul
jle
negl
into
test
les
inc
dec
sahf
sub
test
xchg
mov
aad
je
pop
addps
mov
inc
repz
mov
xor
jl
dec
cmpsb
outsb
sub
mov
repnz
sbb
push
sahf
add
sbb
repnz
pop
jns
test
inc
and
outsl
cmp
les
cpuid
adc
jmp
push
push
or
lods
mulb
jmp
sbb
add
addr16
mov
es
add
jbe
cmpsb
jmp
fwait
sbb
outsb
or
hlt
je
cmpsb
jmp
mov
push
stc
xor
or
sbb
pop
xchg
ja
scas
cmp
or
mov
sub
mov
setnp
mov
insb
dec
push
loop
pop
icebp
jmp
push
jle
call
push
rorl
popf
mov
cmp
jmp
aad
fs
jmp
xor
xchg
pop
mov
pop
jb
cmp
test
mov
pop
ja
jmp
movsb
outsb
in
jmp
inc
inc
shrb
arpl
cmp
cmp
shr
movsb
pop
dec
push
mov
ljmp
shlb
push
gs
mov
loopne
sahf
fstl
push
scas
or
xlat
pop
jmp
dec
mov
jmp
pushf
sti
sbb
mov
add
sti
push
mov
aaa
out
test
inc
in
jmp
xor
dec
cmp
inc
lods
data16
mov
and
ja
dec
sbb
aas
cwtl
fstpt
add
push
int3
jmp
cmp
sbb
in
mov
lret
pop
fidivl
jg
jmp
push
inc
vaddss
in
shl
mov
bound
xor
sbb
mov
pushf
and
arpl
movl
inc
cmc
jmp
cmpsl
cli
loop
xchg
sub
aad
dec
dec
push
dec
repnz
aas
and
mov
shrl
lahf
jmp
inc
sub
lock
or
jmp
push
aam
jmp
xor
jecxz
jne
cld
jmp
scas
cmp
scas
test
jmp
push
xchg
jp
push
push
sub
sub
or
mov
ja
dec
rcll
jp
aaa
out
cmp
das
sub
arpl
lods
mov
lods
cmp
mov
cmc
xchg
lods
xchg
or
xor
jmp
push
push
out
nop
cmp
lods
lret
ss
outsb
or
mov
cmp
and
sbb
jb
mov
sbb
or
test
mov
stos
outsl
scas
push
fadd
sub
or
jmp
mov
mov
and
outsb
in
repnz
add
movsl
lock
subb
pop
jbe
mov
test
mov
push
fisttpl
testb
lods
cld
push
cmc
cmpsl
dec
jge
pop
or
adc
jmp
dec
outsb
arpl
icebp
xor
or
mov
dec
xchg
jmp
rcr
insb
in
mov
test
cli
push
testb
ljmp
ret
pop
add
mov
adc
jmp
pop
cmpsw
movsb
mov
add
sub
jmp
lahf
push
insb
xchg
xrelease
cmp
inc
cmpsb
and
adc
sub
sub
or
not
dec
sub
pushf
mov
push
fwait
icebp
dec
sub
fstps
jecxz
jmp
clc
movsl
mov
outsb
mov
cmpb
jle
jmp
cs
mov
mov
sbb
imul
jbe
push
sub
sub
lock
pop
cld
jmp
and
add
or
loope
ja
fldenv
and
jmp
mov
pop
sub
sbb
and
mov
loop
add
jmp
dec
insb
sbb
out
pushw
lcall
lods
mov
and
pop
hlt
mov
pushf
sub
jb
push
into
daa
out
out
stos
or
ds
jbe
push
dec
mov
or
sub
push
sbb
sub
clc
and
jbe
mov
xchg
dec
jno
jnp
or
fimull
outsl
cli
pop
dec
jmp
into
cltd
mov
add
mov
jmp
pavgw
sub
push
dec
jmp
jg
adc
jmp
pop
inc
cmp
cltd
daa
ret
jle
or
push
rorl
ret
cmpsl
inc
sub
push
fisubl
xlat
sti
out
rclb
cld
sbb
jmp
lods
adc
dec
lods
lret
jl
sbb
clc
jmp
sub
lcall
sbb
lods
push
jl
sbb
sahf
jmp
jp
and
mov
jmp
xchg
popf
push
jmp
sbb
and
jns
mov
and
xor
pop
jmp
insl
call
jmp
lret
stc
cmp
hlt
sub
push
xor
jge
mov
leave
sub
mov
xor
daa
mov
add
jge
push
cwtl
mov
jmp
mov
sub
mov
pop
dec
mov
stc
sbb
ja
loop
cmc
inc
stos
stos
jmp
imul
lods
add
fdivrs
sbb
mov
scas
adc
dec
or
das
and
inc
repnz
shrb
adc
or
loope
xchg
and
dec
cmpsb
test
lret
push
pop
xchg
imulb
xchg
cltd
cmpsl
jmp
fs
outsb
aas
sbb
push
add
in
je
mov
pop
mov
jg
jnp
pop
jmp
outsb
int3
inc
xor
cmp
lods
cmpsl
mov
int3
xchg
jmp
mov
roll
dec
mov
fbld
xchg
insl
jecxz
lods
decl
or
xchg
adc
or
bound
push
and
pop
xor
add
mov
jmp
iret
cld
push
dec
cmpl
sub
adc
movsb
add
push
cmc
rcl
fisubrl
sub
dec
pop
mov
push
lds
pop
xor
and
sbb
or
imul
add
xchg
outsb
xchg
jno
sbb
gs
test
pop
test
jmp
setl
mov
movsl
xchg
jmp
and
shr
and
ja
movsw
pcmpeqw
pop
jmp
lret
sarb
xor
gs
ds
mov
hlt
es
jmp
and
into
xchg
sbb
add
mov
adc
lahf
mov
sbb
subl
dec
orl
pop
xchg
push
outsb
cmp
arpl
inc
pop
imul
mov
sub
testl
imul
ds
clc
arpl
adc
fucomi
cmp
jmp
xor
add
daa
sub
fstp
movsb
dec
cmp
xchg
out
mov
scas
arpl
jp
lea
add
in
jmp
and
insl
xchg
lods
mov
mov
push
test
lcall
adc
sub
inc
imul
add
gs
sbb
jmp
mov
mov
xchg
jnp
xor
inc
cmpb
dec
adc
add
xor
jmp
xchg
and
push
ja
add
xchg
xchg
adc
jl
jmp
mov
mov
fistpl
mov
inc
shr
fcomp
daa
cmp
mov
sti
jnp
leave
icebp
or
adc
out
push
push
cltd
testb
jmp
lds
orb
jge
or
cld
ror
mov
jmp
inc
or
and
daa
xor
push
inc
pop
addr16
mov
repz
sub
enter
jmp
mov
jne
mov
movb
pop
sub
mov
fsubs
jmp
push
inc
test
sub
orl
xor
jle
jmp
scas
repnz
sub
inc
negb
sub
sarl
dec
repz
imul
add
push
outsb
lods
add
fimuls
int
add
or
or
enter
int3
rol
fcomi
pop
popf
sub
cmp
out
mov
sub
test
loopne
xchg
push
fbstp
rcrl
pop
cmc
xchg
aas
xlat
lcall
pmuludq
fucomip
je
ds
push
jns
shr
cmp
mov
jmp
pop
subb
iret
cli
push
call
sub
jmp
imul
por
jo
in
jmp
xor
pop
jb
shrb
xchg
pop
inc
int
jne
lods
sbb
xchg
xor
mov
shll
add
mov
cmp
pop
scas
jmp
sti
insb
mov
gs
aaa
xor
movsb
inc
jmp
repz
aas
lds
jno
adc
sbb
adc
repnz
inc
scas
jmp
out
xlat
pop
mov
lock
mov
test
lods
and
movsb
inc
pusha
enter
jmp
xor
jmp
pop
push
pop
cltd
out
sbb
and
int
jmp
roll
mov
inc
xlat
inc
lods
sub
or
and
and
lods
add
jbe
lret
fs
mov
mov
iret
pop
loopne
sti
adc
inc
mul
jmp
jae
xchg
push
popf
push
jmp
ret
stos
loop
mov
pop
dec
xor
into
shrl
test
mov
lahf
add
push
in
jmp
nop
cmp
jae
bnd
pop
flds
jmp
mov
and
fdivp
sub
pop
push
add
mov
push
mov
cmp
out
and
push
cmpsl
jmp
mov
dec
push
ficompl
cmp
lret
mov
jmp
mov
jno
jb
inc
mov
or
pop
repz
add
aaa
jmp
cmpsb
cltd
lea
mov
rcl
jns
std
mov
jb
jne
cmc
or
ljmp
inc
fs
mov
and
pop
mov
pop
and
dec
outsb
push
add
mov
and
jmp
arpl
add
sub
jmp
jmp
sub
mov
cmp
push
lods
sub
mov
shrb
pushf
add
jmp
or
and
mov
orb
push
sbb
jae
scas
hlt
lahf
mov
push
jno
or
fucomip
inc
movsl
les
subl
jo
xor
inc
sbb
out
mov
adc
pop
sbb
mov
jnp
jmp
adc
sub
cmp
mov
mov
pop
pop
dec
mov
les
addb
ret
aaa
sbb
jmp
repnz
mov
pushf
pop
outsb
inc
push
lds
adc
lret
scas
jmp
das
cmp
movsl
cltd
jmp
xor
dec
cmp
rcll
jmp
xor
or
jmp
pop
and
shlb
addl
jp
sti
fidivl
into
xor
push
mov
cs
or
test
imul
push
push
lds
dec
mov
xor
pop
sub
fimull
mov
push
inc
dec
jmp
mov
sbb
sub
push
dec
js
jns
mov
dec
scas
or
cmp
adc
xchg
add
push
mov
lods
xchg
mov
jecxz
in
ja
sbb
push
sub
fcmove
jmp
scas
adc
or
je
xor
xchg
push
enter
add
xchg
scas
and
inc
adc
mov
addr16
lret
daa
out
pop
jmp
sub
push
sbb
jnp
xchg
cmp
dec
test
std
out
add
dec
in
mov
push
int
xchg
call
jne
jb
fdivrl
cwtl
sbb
jb
dec
push
sbb
pop
mov
pop
push
pusha
jmp
aam
ss
lret
mov
dec
cmp
mov
movsb
mov
outsl
mov
xor
xchg
pop
jmp
shll
jmp
adc
push
xchg
int3
ret
or
or
xorb
pop
lods
imul
sub
push
push
sub
stos
sahf
repz
jl
push
cmp
mov
cmp
ficompl
fstl
jmp
nop
outsb
test
jo
jp
jns
sar
sub
cmc
and
pop
or
mov
jae
loope
fisttpl
and
lret
test
lock
imul
lods
xor
xor
iret
fstl
jmp
push
mov
imull
out
mov
dec
push
in
test
cmpsl
xchg
ret
jmp
jb
je
dec
inc
dec
mov
cli
sbbl
push
jno
jmp
cmc
adc
call
pop
inc
andl
sub
inc
ret
repz
lods
and
lock
add
jmp
mov
xchg
jmp
data16
insb
mov
and
or
divl
add
fnstenv
ljmp
xor
xchg
fisubrs
sbbl
outsb
pop
enter
adc
gs
cwtl
mov
lds
sbb
test
push
and
push
pop
ja
insb
outsl
mov
xchg
lock
jno
mov
inc
cmpsl
cmp
pop
fadds
sbb
ss
in
sti
jl
fwait
sbbl
xchg
pop
hlt
adc
add
and
mov
add
or
push
pop
xchg
loop
sbb
jmp
pop
xlat
icebp
inc
call
and
dec
mov
test
adc
mov
mov
daa
rcrb
mov
xlat
or
hlt
jmp
sub
cltd
shlb
enter
inc
fisubrl
mov
out
sub
push
rcl
pop
xchg
sub
jmp
pop
push
mov
sub
sets
idivl
lods
lea
test
jmp
dec
mov
mov
arpl
and
out
lods
jle
lods
jo
pop
add
xor
jnp
jp
ss
jb
aam
or
add
cwtl
add
mov
adc
nop
hlt
cmp
cwtl
jmp
xchg
xchg
jne
jmp
and
mov
mov
por
movsl
shl
push
lods
dec
cmpl
adc
daa
enter
shrl
mov
mov
push
pop
jmp
into
sub
rorb
fimuls
jno
cmpsb
fwait
jmp
in
xchg
repnz
cmc
sub
sub
and
xlat
jmp
mov
fsubs
inc
repz
jmp
dec
xacquire
inc
jmp
std
sub
push
outsb
shl
cmpsl
in
xchg
inc
cwtl
xchg
jle
arpl
bound
rcrb
inc
adc
push
aaa
xchg
stos
fucomp
mov
fs
mov
sbb
into
jmp
popa
push
sbb
shll
push
shrb
xor
jmp
add
and
sarb
in
xchg
or
ss
sbb
ja
xchg
shrl
mov
cltd
iret
push
mov
jmp
insb
adc
jmp
jae
in
push
arpl
adc
mov
xchg
inc
stos
scas
push
outsl
pop
sub
and
push
add
in
jecxz
jae
mov
mov
lds
dec
mov
xchg
mov
and
int
pushf
out
and
aam
pop
mov
mov
pop
cmp
ja
jp
dec
popf
ret
ret
jns
nop
ss
jmp
cld
add
daa
inc
sub
fisttpll
and
jo
enter
insl
jnp
or
sti
and
divb
push
inc
xor
and
jmp
mov
cmc
rolb
dec
movsl
in
add
cmp
mov
es
jmp
popf
sub
jo
out
decb
jmp
xchg
mov
cmp
mulb
scas
insb
jbe
ljmp
ds
xchg
popa
test
lods
adc
out
mov
sbb
insl
or
into
gs
jmp
mov
add
mov
test
push
cmp
pop
or
sub
ret
popa
jmp
cmpsl
loopne
incl
pushf
stos
jmp
mov
mov
sub
jmp
aad
mov
jmp
arpl
jo
mov
mov
test
fsubr
mov
jge
push
jb
xchg
or
inc
scas
mov
or
lcall
xchg
jmp
jl
loopne
mov
sub
sahf
jmp
les
xchg
mov
sar
sbb
fsubl
int3
push
fildl
jne
add
movsb
jmp
or
loope
xchg
or
leave
das
lods
inc
cltd
mov
shl
xchg
ljmp
mov
in
sub
jg
jmp
ds
inc
imul
mov
popa
or
in
out
jle
sti
push
dec
and
inc
andl
push
scas
mov
inc
pop
dec
dec
inc
jmp
loope
add
and
jmp
mov
xchg
mov
fsubrl
jmp
cmp
scas
jbe
shrl
jmp
adc
nop
dec
jle
aam
stc
out
movsb
movb
jnp
pop
add
in
mov
inc
jecxz
pop
jp
hlt
or
testb
sub
and
mov
jle
mov
mov
dec
adc
push
repnz
jmp
out
cli
push
mov
int3
jmp
fbstp
jmp
loope
add
lods
les
lods
mov
sqrtps
out
pop
pop
push
enter
fnstenv
add
repz
fdivs
sub
xchg
jmp
jg
sub
fsts
or
jmp
mov
xchg
pop
cmp
jmp
decb
stos
mov
mov
stc
ja
js
xor
jnp
add
sub
in
into
xchg
es
xor
sti
pop
icebp
xchg
outsb
pop
sub
sub
mov
addr16
push
imul
jmp
push
test
mov
mov
aad
int3
xchg
shrl
push
adc
sbb
pop
mov
sti
std
mov
xchg
dec
pushf
mov
in
into
int3
push
mov
scas
notb
stos
int
cmp
and
cmc
gs
cld
shlb
adc
mov
sub
mov
or
and
pop
shl
jmp
dec
dec
dec
cltd
aam
sbb
sbb
inc
sub
xchg
cld
outsb
jle
insl
inc
xchg
jmp
mov
push
out
jmp
aas
mov
jg
lret
cmpb
out
jmp
jle
shll
xchg
into
sub
popf
push
inc
dec
sbb
cmp
rorl
bound
ss
lret
out
outsl
sub
mov
clc
icebp
fwait
pop
dec
push
imull
sub
xorl
sbb
inc
push
hlt
and
sub
pop
loope
sub
pop
jmp
add
arpl
mov
xchg
xchg
std
stos
cwtl
lahf
mov
and
pop
out
adc
inc
lcall
or
fsubrs
jge
addr16
arpl
sbbl
pusha
and
enterw
pop
jmp
jbe
adc
loop
inc
outsb
mov
imul
mov
test
iret
sbb
int3
jmp
inc
jns
rorb
and
rorb
xchg
sbb
xlat
outsl
imul
cmpsb
iret
pop
pusha
mov
inc
loope
out
jmp
cld
xchg
popl
in
dec
pop
jmp
mov
sbb
or
xor
pop
or
pop
dec
lods
bound
xchg
imul
mov
push
add
shl
fwait
cmc
cltd
lods
push
xor
imul
mov
popf
push
push
ret
loop
les
in
jmp
push
dec
out
xor
pop
fldt
jmp
mov
adc
sbb
shlb
mov
insl
pop
jp
mov
paddsb
inc
inc
fs
nop
lods
int3
cmp
mov
sub
inc
jmp
xlat
cmp
push
mov
jmp
fcmovnu
ja
mov
call
imul
and
test
sbb
mov
adc
fistpll
lods
shlb
mov
stc
or
daa
push
fldcw
loop
sub
inc
movsl
mov
jmp
dec
ficomps
push
cmp
arpl
stos
and
adc
push
sbb
daa
inc
in
out
jmp
lret
shll
faddl
xor
xor
sbb
pop
and
pop
fldl
int
rcrb
sub
fisttpl
inc
outsb
fwait
mov
stos
sbb
add
cmpsl
fimuls
push
loop
arpl
and
fdivrs
and
fisubrl
lods
sti
jl
sbb
dec
inc
cmpsl
iret
push
imul
jno
dec
mov
sbb
push
sub
push
cli
or
xor
sti
add
or
cmp
cmpb
out
fcomps
add
sub
jmp
jb
pop
add
dec
in
cmpsb
mov
jmp
push
fisubrl
lods
mov
jp
mov
enter
mov
lods
scas
push
pop
mov
call
int3
jmp
adc
mov
lahf
mov
scas
in
fstp
jmp
dec
xchg
dec
das
jmp
aad
js
in
outsl
jmp
incl
sub
popa
sub
push
dec
sbb
sbb
into
stc
jmp
mov
jg
xchg
xor
test
mov
ds
mov
repz
pop
mov
push
cmpsl
popf
mov
scas
mov
fsubs
and
test
xor
xor
repnz
mov
mov
push
jmp
outsl
jae
aaa
mov
cli
outsb
push
imul
mov
fstpl
rcr
das
addl
and
push
adc
sbb
mov
sub
icebp
jns
mov
mov
ds
pop
pusha
out
fwait
gs
dec
insb
jle
and
sbb
jmp
icebp
xchg
outsb
lcall
or
cmp
jg
test
adc
cmc
repz
int3
jmp
adc
push
sub
push
mov
int
jmp
jns
icebp
loopne
pop
mull
sub
arpl
and
xchg
jmp
rorb
add
jmp
stc
insl
jne
imul
js
mov
jl
dec
jge
idiv
and
in
cwtl
stc
cltd
ret
jmp
fdivs
sbb
jmp
xchg
mov
jmp
test
insb
push
mov
xlat
imul
jmp
lds
fwait
clc
dec
push
cltd
inc
xchg
jno
lea
mov
stos
jnp
xor
add
adc
loope
ljmp
cs
jmp
in
xlat
enter
and
push
movsl
jg
fwait
and
jmp
loopne
pop
cs
dec
jmp
out
shlb
xor
bound
out
jmp
push
sahf
inc
es
xchg
popf
sbb
pushf
dec
bound
jmp
push
sub
ret
inc
sbb
sub
xor
inc
xchg
sbb
outsb
sbb
insl
aad
mov
inc
lods
bound
mov
add
out
insb
push
adc
sbb
sbb
in
add
or
out
nop
out
call
or
gs
and
sub
std
scas
sub
mov
aad
push
sub
jmp
mov
je
cmp
mov
jp
cmpsb
xchg
repnz
adc
sti
shll
pop
pop
jmp
out
mov
icebp
push
daa
xchg
pop
inc
jmp
lods
lcall
add
inc
stc
fisubs
sbbb
jmp
daa
jge
test
test
xor
test
popf
idiv
xchg
sub
outsb
jmp
inc
sub
sti
int3
popf
add
lds
pop
add
sarb
mov
out
dec
jmp
xchg
jp
pop
fnsave
jmp
outsl
jecxz
or
pop
jmp
sbb
xchg
pop
xlat
jb
jmp
adc
xor
add
jmp
test
ss
push
ds
icebp
in
ret
mov
mov
push
xchg
insl
test
inc
das
pop
mov
mov
jge
clc
leave
dec
push
fmull
xor
cld
es
xorl
test
inc
and
jbe
push
bound
outsl
pop
mov
sub
dec
mov
jl
mov
jns
fisubrs
jbe
sarl
fisttpll
sbb
adc
pop
sub
mov
xor
jmp
lods
mov
dec
rcl
add
jmp
loope
cmpl
sti
imul
lret
lcall
jl
add
jmp
loopne
dec
fstl
lods
lock
adc
and
mov
int3
dec
mov
loopne
or
add
or
mov
out
repz
sbb
scas
adc
mov
shr
fs
pop
and
in
loope
push
fsubr
pop
jae
dec
xchg
gs
jmp
xor
leave
data16
lock
sub
xchg
divl
lods
dec
add
sbb
stos
ret
jmp
test
pop
cltd
xor
jge
test
and
std
clc
sti
mov
mov
stos
das
gs
mov
clc
mov
stc
inc
es
inc
jmp
in
rcl
pop
lcall
pop
fisubrl
pusha
ss
jmp
cmp
jge
fiadds
adc
fchs
jmp
xchg
dec
pop
cmpsb
jae
pop
rorb
ljmp
dec
mov
pop
pop
fisubs
das
jno
jmp
xor
xlat
jmp
inc
stc
adc
jnp
xchg
insl
or
mov
lods
sti
jg
hlt
incl
aad
clc
sub
jmp
mov
push
in
sub
pusha
sub
scas
loop
inc
jmp
popf
jo
cmp
pop
xchg
out
aam
mov
test
jge
sub
lahf
es
mov
adc
mov
imull
pushf
sub
add
add
out
loop
imul
daa
pop
dec
sbb
test
mov
or
adc
repz
push
into
adc
or
mov
adc
sbb
cmp
fisttpll
icebp
jnp
push
add
arpl
mov
xchg
cmp
pop
add
mov
and
mov
inc
sbb
mov
adc
push
and
mov
mov
add
test
outsb
jl
sub
and
cmp
mov
inc
out
or
sub
mov
add
test
ja
jmp
pop
shl
jmp
jge
or
jmp
mov
aad
jmp
iret
lds
nop
mov
sub
mov
repnz
dec
sub
push
jmp
mov
subl
and
push
jmp
pop
xor
push
ds
add
gs
cmp
test
lock
ljmp
xchg
push
jmp
aaa
xchg
cwtl
ss
or
rorl
jg
test
pop
orb
push
mov
sub
and
pop
stos
sbb
dec
jmp
xor
cmp
shr
out
adc
lods
pop
inc
in
outsl
mov
push
and
mov
jmp
ret
sub
and
call
jmp
enter
jnp
push
scas
mov
pop
mov
pop
and
inc
jns
mov
dec
push
or
test
jmp
or
and
jmp
fldcw
sahf
or
inc
sub
ss
into
loopne
mov
jl
outsl
ja
lock
sbb
cmp
or
xor
aaa
pop
jmp
lcall
jmp
cmpsl
mov
cli
add
inc
xchg
aam
jnp
push
add
lea
inc
outsb
inc
test
orb
out
loopne
popf
sub
test
and
inc
sbb
call
sbb
in
adc
pop
cmp
jmp
inc
pop
mov
jbe
jmp
je
test
or
ljmp
cmpl
sbb
lods
ficomps
lcall
jg
push
imul
rcl
aam
or
ficoms
xchg
sbb
adcl
sbb
and
jmp
push
cmpsb
or
lods
xlat
mov
cltd
mov
adc
adc
xchg
mov
and
mov
ficompl
int
mov
scas
inc
shr
out
inc
mov
lods
cmpsl
jl
cmp
cmp
and
lcall
cmp
push
pop
into
out
push
out
jmp
xchg
inc
out
andl
cmp
dec
cwtl
sahf
jmp
bound
fucomi
hlt
or
jns
cltd
pop
mov
cmc
dec
pop
add
fs
or
mov
loopne
mov
lret
in
fsubr
loope
shrb
inc
mov
jmp
movsl
cmp
adc
leave
jmp
aas
and
lods
xchg
andl
fsubrs
rorb
je
inc
jb
jmp
daa
push
dec
lcall
nop
lods
jg
adc
dec
and
out
lock
dec
xchg
call
jmp
into
fnsave
jmp
in
popf
outsl
sbb
lods
ss
jns
std
sbb
mov
sbb
arpl
jnp
insb
xchg
ja
rcrb
pop
mov
mov
in
stos
or
sbb
jae
cmp
mov
mov
xchg
sub
cmc
jmp
jae
sbb
mov
jecxz
ss
dec
imul
add
data16
jbe
das
jmp
xor
mov
push
sahf
in
movnti
mov
out
xchg
scas
iret
jmp
sub
shrb
fwait
adc
call
cltd
push
les
int3
jmp
sbb
cld
fcom
cmc
addr16
test
inc
sahf
pop
mov
jns
orl
sbb
mov
in
xlat
adc
adc
mov
fstpt
mov
mov
jp
je
pusha
sbb
mov
jmp
dec
addr16
push
add
test
or
sbb
lret
xchg
aam
push
stc
popf
sub
mov
aaa
fwait
sti
xor
xor
sub
mov
std
jmp
in
shlb
sbb
test
cli
xchg
push
jmp
jns
adc
adc
aas
or
jecxz
test
cs
ljmp
jmp
jl
out
mov
out
fdivrs
inc
jne
push
cmp
jmp
frstor
cmp
or
inc
jmp
mov
aad
lods
cmpsb
mov
xchg
xor
sub
or
sub
sub
and
push
mov
and
cmp
inc
dec
movsb
adc
cli
jbe
or
pushf
mov
scas
xchg
fldcw
mov
cmp
or
loope
shrl
imul
or
xchg
cltd
adc
rorb
iret
cmp
test
lret
sbb
jle
mov
or
out
aam
in
mov
sbb
xchg
mov
jmp
inc
sti
xor
bound
sbb
sub
and
mov
sub
mov
lods
icebp
xchg
and
jl
jbe
cltd
imul
int3
and
ret
jmp
add
ja
cmp
adc
stc
scas
fmuls
add
fbstp
push
sub
cmp
jmp
bound
xorl
lds
sbb
fs
jmp
inc
ljmp
mov
jb
or
testb
clc
aad
jmp
and
lods
xchg
hlt
loopne
jmp
jg
mov
push
mov
idivl
push
jmp
lock
out
dec
pop
mov
lock
cmp
adc
jmp
push
es
cli
pushf
fistl
push
cld
inc
add
or
and
stc
outsl
jle
mov
mov
xchg
xchg
out
jp
stos
jnp
xor
in
push
fadds
lahf
jmp
roll
xchg
jmp
add
pop
add
lret
paddusb
jmp
mov
mov
mov
sti
dec
and
subb
pop
pop
add
sbb
push
into
sbb
mov
cmp
push
or
sahf
sub
out
push
mov
sub
jae
sub
mov
and
cmp
repnz
movsb
scas
inc
mov
sahf
test
push
loopne
fdiv
rol
mov
lods
ficoms
jno
or
lret
dec
fcmove
adc
adc
pop
jnp
stos
mov
outsb
leave
sub
jge
in
mov
sub
pop
xlat
stos
or
jmp
outsb
mov
iret
sbb
jne
sbb
insl
mov
stos
in
outsb
mov
dec
sub
dec
outsb
mov
pop
bnd
out
jp
add
outsl
imul
xchg
lods
and
sub
jbe
jno
pop
aam
jmp
mov
enter
jmp
cmpsb
push
mov
pop
inc
jmp
dec
in
movsb
shr
dec
and
xchg
testb
fs
lret
sarl
stos
jmp
ret
fucomp
sbb
loop
out
jb
por
push
jp
fbstp
inc
mov
mov
mov
xchg
jmp
add
mov
jns
mov
mov
dec
ret
xor
std
pop
xor
lea
or
mov
adc
jmp
shrl
mov
pop
lods
sub
xchg
sub
idivl
insl
mov
mov
lock
adcl
je
or
fwait
lock
mov
xchg
jmp
hlt
and
cmp
por
mov
sub
adc
scas
xchg
dec
jmp
sub
pop
pusha
xchg
jmp
insl
ret
or
pushf
test
outsb
push
les
loopne
adc
xchg
sbb
mov
sub
jge
lods
mov
jmp
xchg
pop
jo
test
sub
or
std
push
scas
les
sbb
stos
daa
mov
js
fsubs
jg
jmp
stos
das
xchg
in
pop
jb
sbb
xchg
mov
insb
lods
shlb
cmpsb
call
mov
clc
aaa
or
dec
ds
sub
inc
scas
std
ja
push
in
jg
das
mov
jmp
punpcklwd
jmp
aas
lahf
pop
inc
ret
cld
and
lret
mov
das
push
jmp
jnp
xchg
and
jo
xor
test
xchg
jmp
sarb
push
ds
or
mov
and
push
leave
movsb
fcoms
xchg
push
mov
cwtl
or
iret
jmp
call
notb
sti
rclb
cmp
stos
jmp
bound
inc
fadds
mov
sub
shrl
xor
jb
sub
mov
imulb
sti
inc
sbbl
and
cmp
inc
sti
xchg
sub
dec
inc
pop
xchg
pop
dec
xchg
inc
mov
jmp
cwtl
sarb
adc
xor
and
ljmp
jle
and
andl
sbb
dec
push
mov
iret
mov
test
sub
jmp
ret
pinsrw
pushf
jmp
xchg
sub
jmp
inc
hlt
cwtl
add
mov
outsb
mov
pop
aaa
mov
xchg
fwait
adc
sti
int
mov
jge
push
sti
ljmp
cmp
push
inc
add
daa
in
adc
or
sub
dec
jp
sub
jno
mov
pusha
bnd
cmpsl
movb
add
mov
push
jle
sbb
jg
and
and
xlat
and
dec
fmuls
cltd
cmc
push
xor
adc
inc
pop
mov
xchg
aam
aas
jp
sbb
stos
push
jmp
jne
dec
xchg
push
xor
out
cmpsb
xchg
and
lods
dec
shll
dec
jmp
sbb
mov
lock
mov
mov
cmp
test
jno
xor
fs
inc
cltd
or
pop
jb
nop
push
out
mov
dec
add
sbb
dec
cmp
mov
push
jp,pt
jmp
scas
sub
in
cltd
mov
cmp
add
lods
mov
adc
ja
jb
mov
cs
lods
test
pop
mov
fcomps
xor
jmp
sub
lret
fldenv
or
jo
nop
int
adc
jmp
or
pop
sar
or
sti
jle
jmp
push
pushf
sub
jmp
add
nop
dec
sbb
ds
jno
or
scas
jmp
fwait
mov
lret
cmp
dec
or
in
pop
xchg
sub
repnz
add
cmp
int3
or
mov
mov
jmp
xor
outsl
add
or
in
sub
lcall
stc
fisttps
adc
test
jmp
les
stos
jmp
cmpsb
mov
mov
in
imul
mov
push
fs
push
lret
fwait
pop
jecxz
push
popa
cltd
movups
adc
out
repz
mov
adc
pop
cwtl
mov
icebp
adc
call
jp
sti
std
cmp
inc
add
push
mov
ljmp
jbe
int3
xchg
pop
mov
pop
jo
mov
push
sbb
sub
clc
inc
fisubl
jmp
mov
jo
pushf
cmpsl
xor
adc
jg
cmp
jmp
add
xor
jmp
mov
std
or
movsl
jle
push
xchg
sub
enter
lods
iret
lcall
cli
xor
dec
mov
sub
movsl
sub
and
jmp
sub
jle
fs
mov
dec
and
cmp
ja
jo
test
adcb
icebp
sub
int
lods
or
mov
loope
add
mov
std
push
adc
mov
repz
xchg
aad
add
cltd
sti
test
adc
or
dec
pop
cmc
fprem
outsb
popf
movsb
push
jno
fistpll
jp
push
jmp
repz
mov
jno
sbb
lods
aaa
mov
cwtl
push
jmp
mov
orb
andb
sbb
mov
mov
jo
jmp
sbbl
subb
out
xor
cmc
cwtl
stos
fsubrs
shrb
imul
and
imul
jle
and
add
sbb
lods
aad
maskmovq
divl
or
sarl
pop
jmp
mov
adc
pop
lods
xchg
push
cmp
and
pop
push
ret
int3
jbe
push
daa
add
in
adc
cmp
xor
xchg
out
imul
sti
and
xlat
xchg
jmp
pop
movsl
sub
in
aam
mov
je
xor
and
add
hlt
jmp
repnz
push
pmulhuw
lock
xchg
add
and
repz
jmp
stos
push
jo
mov
scas
gs
cmpb
pop
jmp
push
ljmp
xor
cwtl
dec
xchg
mov
sub
orb
daa
js
mov
das
not
or
fistpll
mov
cmp
add
outsb
jmp
mov
xor
jns
jo
jbe
fadds
xorl
mov
out
pop
xchg
lods
and
jno
add
out
ljmp
jmp
jl
arpl
movsl
insl
jne
xor
mov
add
mov
jmp
mov
add
cld
sbb
lods
mov
outsb
mov
mov
jle
sarl
scas
out
in
cmpsl
add
or
inc
sbb
cli
cmpsb
mov
mov
repnz
xor
jecxz
jl
inc
adc
enter
jb
mov
sbb
adc
push
and
adc
inc
popa
jp
ds
jmp
out
pop
mov
cwtl
loope
pushf
mov
or
mov
push
jmp
lcall
cmp
or
in
sti
cmc
in
jmp
push
push
xor
or
popa
movsb
or
arpl
jmp
inc
jl
jge
lea
stc
dec
pop
jmp
clc
xchg
cmp
xchg
outsb
xchg
or
add
stos
mov
cmpl
shr
jl
push
imull
or
imul
xchg
pop
jmp
inc
jmp
xchg
ljmp
mov
pop
mov
aad
jmp
pusha
adc
inc
scas
aas
insl
inc
cmpsl
jmp
dec
cmp
inc
mov
xchg
pushf
inc
and
mov
outsl
adc
dec
lods
out
stos
shr
incl
lods
pop
addr16
xor
pop
repz
shr
jmp
sbb
mov
cwtl
aad
or
inc
push
mov
jmp
fdivrp
xchg
loop
in
hlt
jmp
add
outsb
or
jp
les
pop
mov
int
adc
or
shl
mov
outsb
xor
enter
sti
xchg
jmp
push
int
sbb
inc
lock
insb
ror
or
scas
inc
jl
xor
out
loopne
sub
pop
and
pop
mov
sub
roll
daa
jbe
cli
xchg
inc
int3
mov
sbb
cltd
aad
sti
je
and
sub
in
pushf
mov
and
lods
rorl
lods
jb
cmpb
repz
daa
fisubs
dec
xchg
xchg
mov
and
mov
sbb
roll
scas
movsl
outsl
sbb
leave
test
cs
sub
mov
adc
mov
mov
push
mov
mov
in
xor
and
imul
ret
push
jmp
mov
inc
cltd
jmp
enter
ja
iret
or
icebp
jl
push
and
lcall
rep
mov
out
push
add
lods
cmpsl
xlat
mov
pop
sbb
lods
dec
adc
js
pushl
inc
inc
lods
push
mov
aam
lods
imul
add
mov
sti
popf
por
in
cs
fstpt
jmp
push
adc
lods
std
push
popa
into
mov
xor
addl
xor
and
sub
scas
inc
fcmovnu
das
adc
jmp
and
arpl
mov
int
repz
jecxz
outsb
imul
int
xchg
pop
jne
pop
test
stos
outsb
mov
loope
ret
xor
clc
mov
jmp
das
mov
cmp
mov
jmp
push
pop
popf
mov
loop
push
nop
and
mov
out
dec
inc
pop
and
gs
and
sbb
es
adc
mov
jmp
jae
sub
mov
incl
dec
mov
cmpsl
pop
add
pop
push
flds
push
sub
jmp
push
push
sahf
xchg
fsubs
jno
pop
outsl
dec
jne
outsb
mov
mov
pop
aam
mov
push
cwtl
jmp
popa
jb
jbe
lahf
cmp
mov
loopne
pop
push
sbb
lock
adc
adc
imul
out
jne
sbb
jmp
inc
or
xchg
jo
adc
push
pushf
jbe
ret
mov
xchg
sbb
sbb
adc
or
div
mov
or
pusha
push
cmpl
mov
push
jbe
push
xchg
lods
insl
xorb
loop
add
test
mov
xchg
push
sub
jge
pop
jmp
xor
jg
jnp
cmc
jmp
dec
ffreep
jecxz
das
inc
jmp
mov
movsb
mov
xchg
add
cs
cli
sbb
test
jle
insb
xchg
sub
lods
mov
mov
aad
popa
sbb
fidivrs
lods
into
adc
push
in
push
sbb
stos
inc
dec
dec
sahf
add
out
repz
cmpsl
jmp
test
sahf
push
jnp
xchg
xor
mov
or
pop
pop
pop
lock
movsl
fcmovb
int3
das
aaa
sbb
daa
test
mov
stc
pop
and
mov
inc
jmp
gs
mov
xrstor
test
or
jp
aaa
or
loopne
lods
push
push
sbb
and
repz
mov
adc
ret
push
xchg
jmp
cmp
jmp
inc
dec
jmp
jmp
sbb
in
addb
add
lods
mov
scas
xlat
push
shll
dec
pop
les
cmp
inc
cltd
jb
jno
mov
push
mov
mov
jg
and
in
add
mov
adc
cmc
xchg
jmp
adc
push
scas
cmpsl
cmp
pop
ljmp
mov
gs
jl
je
lcall
fildll
jmp
inc
aas
loop
jl
mov
mov
jmp
ficoml
and
pop
aad
push
xchg
lcall
and
mov
and
jmp
xlat
fcomps
movsb
pop
jmp
xchg
lea
pop
jns
stc
fldenv
or
hlt
sbb
jnp
push
repnz
jo
pop
lret
loop
dec
aaa
pop
mov
sub
jmp
ret
nop
dec
scas
sub
ret
jecxz
ljmp
mov
cld
mov
fstpt
lods
repz
popa
jmp
clc
xchg
or
xchg
mov
mov
jmp
jns
loopne
testb
outsl
ret
dec
cli
mov
fldt
out
jmp
push
icebp
pop
ljmp
cmp
lret
testb
test
loopne
mov
pop
jmp
and
int3
dec
out
push
les
je
test
sub
cs
ret
shlb
cld
cmp
sbb
pusha
scas
cmp
insl
push
cmp
lods
stc
push
in
addr16
ljmp
imul
mov
stos
int3
cmp
dec
or
lock
sahf
insb
das
lds
push
mov
les
aad
jmp
xchg
and
and
insl
sub
inc
sub
or
jl
repz
das
add
xor
cmp
enter
in
icebp
scas
adc
xor
ret
inc
sub
jmp
movsl
int3
adc
leave
mov
xchg
jmp
and
or
or
or
dec
or
jmp
inc
imul
inc
scas
shrb
aas
xor
roll
repnz
or
nop
dec
cltd
hlt
mov
mov
or
pop
inc
mov
mov
xchg
outsb
inc
jnp
or
ret
xchg
outsl
push
lret
sti
outsb
xchg
fsubl
jmp
repnz
jp
adc
les
push
sbb
and
xor
pop
aaa
inc
cmc
test
mov
mov
push
ljmp
pop
jae
shrb
lea
jne
in
dec
jmp
push
sbb
mov
negl
mov
jmp
dec
test
inc
int
nop
outsb
std
mov
jnp
jp
outsb
fmull
lahf
adc
jns
pushf
or
divl
xor
test
insb
push
insl
ret
jo
cmp
mov
mov
pop
in
cmpsl
add
and
and
jl
jmp
push
mov
pop
jno
push
and
sub
lock
or
inc
cmc
xchg
pop
add
jl
jmp
cmp
addl
xchg
std
xor
rolb
push
loopne
lods
pop
jmp
rcl
dec
push
adc
adc
or
fs
push
mov
repnz
pop
push
sbb
jmp
xor
sbb
jmp
jmp
fldenv
mov
dec
cmp
adc
sbb
push
daa
sbb
jno
xchg
and
dec
ss
lret
roll
jno
jge
aad
adc
xchg
aam
jmp
pop
cmp
xorb
mov
sbb
sbb
lret
jb
mov
mov
sbb
lea
push
cmp
sbb
sub
xor
jmp
jo
fdivs
jmp
sbb
outsb
bound
cwtl
jmp
je
pop
lret
repz
call
jmp
push
cmp
movsl
das
int
enter
loop
pop
hlt
cltd
movsb
jmp
lahf
xor
addr16
add
loope
cwtl
inc
mov
xchg
jg
dec
in
sbb
xor
cmp
cmc
pop
jmp
mov
fisttps
dec
pushf
daa
shr
jmp
mov
xchg
jmp
fiadds
mov
jmp
mov
scas
cli
jmp
sbb
js
adc
sub
cmp
sbb
push
and
and
xor
jmp
into
fs
in
jmp
push
push
hlt
pop
inc
icebp
lods
iret
shrb
mov
adc
dec
mov
xchg
sbb
or
lods
ss
jmp
xchg
aas
mov
sub
dec
xor
lods
in
bound
fdivl
scas
xchg
push
push
xchg
subb
cs
mov
popa
in
or
js
jno
dec
lret
push
fisubs
pop
jmp
jbe
inc
or
mov
or
nop
loop
test
xchg
mov
xor
jecxz
pop
pop
mov
sub
cmp
jne
sub
out
and
mov
or
leave
jmp
mov
sub
inc
jmp
or
dec
icebp
ds
mov
int3
add
lods
loop
rep
push
rorl
adc
jae
and
pop
push
mov
sbb
push
mov
adc
inc
inc
cmp
jmp
addb
sub
testl
push
jns
push
ds
imul
mov
stc
and
lret
mov
sahf
or
lods
or
or
mov
lods
je
inc
xchg
mov
adc
aas
lods
loop
sbb
jge
cmp
shl
dec
loopne
pop
adc
pop
loop
sbbb
and
mov
movsl
icebp
es
test
loopne
les
adc
inc
mov
fs
data16
std
jl
jmp
bnd
sbb
insl
jmp
iret
xchg
data16
pop
inc
jmp
dec
adc
cmp
ror
xor
xor
insl
imul
ret
stos
push
pop
popa
jmp
xchg
imul
dec
cmpsb
lds
arpl
or
dec
cmp
pop
movsl
xor
fwait
shlb
xor
xchg
fcoml
fimull
jmp
mov
xchg
cmp
stos
insl
jle
and
cmp
sbb
cli
lahf
cmp
ficompl
mov
arpl
repz
mov
mov
repz
push
scas
stos
in
jmp
lea
outsl
call
add
imul
add
iret
out
lods
lret
pop
adc
push
mov
inc
decl
jmp
pop
add
test
int
push
iret
pop
inc
lea
and
jns
int
mov
fcoml
lret
int3
jmp
xchg
mov
je
inc
sbb
jmp
lods
mov
loopne
jb
add
clc
and
pop
jmp
sub
les
sub
mov
adc
stos
sub
jmp
mov
jp
push
pop
push
mov
dec
movsb
sub
jmp
insl
cmp
pop
ss
scas
mov
stos
push
movsb
cld
or
add
cli
pop
outsb
jae
xor
lock
cmp
aaa
push
aad
jmp
lahf
xor
xchg
sub
arpl
les
idivb
mov
jmp
mov
pop
cwtl
cltd
jmp
ja
mov
call
addb
xlat
mov
loop
dec
imul
xor
mov
and
fdivrs
fldcw
jns
stc
jmp
adc
std
aam
jmp
imul
icebp
shlb
jmp
movsl
and
pop
jns
jmp
adc
out
cs
cld
and
jb
hlt
jne
shrb
push
shl
pop
test
dec
ljmp
jmp
mov
mov
fdivs
adc
imul
bswap
dec
popf
pushf
inc
jbe
mov
mov
in
inc
pop
mov
repz
fdivrs
pop
fdivl
bound
out
cmp
rolb
adc
pop
sbb
dec
pop
jmp
insb
jle
and
out
arpl
aas
dec
addr16
es
jl
je
add
mov
shr
xchg
ljmp
jo
or
mov
xorl
mov
into
stos
adcb
jmp
shlb
sti
add
shr
movsb
loopne
jge
sahf
mov
inc
jmp
mov
mov
fisttpll
adc
in
lret
jp
jbe
jb
outsb
adc
sub
nop
jmp
shrl
xor
cmp
insb
mov
sbb
xchg
or
stos
test
jmp
rclb
mov
dec
int
add
mov
fsubr
or
mov
sub
lret
mov
jmp
imul
cmp
fstpl
pop
dec
mov
into
stos
push
imul
cmc
ljmp
imul
daa
scas
fiaddl
inc
ficoms
push
add
mov
xchg
jmp
cld
pop
ljmp
cmp
es
jecxz
lcall
inc
dec
adc
cmc
add
push
jmp
scas
les
mov
xor
mov
jb
movsl
xchg
and
lds
pushl
mov
mov
push
rorb
jl
adc
push
cmp
fiadds
call
mov
add
fldt
push
xor
and
addb
sbbb
mov
mov
aaa
mov
xchg
scas
lret
jg
inc
lds
int3
adc
jmp
rcll
sti
xchg
jnp
repnz
movsl
or
jmp
fcmovnbe
popa
add
repnz
enter
out
xchg
mov
jle
stos
mov
pop
adc
inc
adcl
mov
ds
test
repnz
xchg
mov
lcall
das
subl
pop
mov
lcall
in
mov
daa
push
lods
clc
je
jbe
sbb
ret
inc
xor
and
xor
test
push
cmp
push
loopne
mov
jmp
and
daa
scas
push
fstl
cli
sbb
fcomi
int3
out
fsubrp
inc
sbb
jmp
inc
mov
lret
mov
lret
mov
mov
xchg
mov
push
bound
sbb
or
inc
mov
xchg
inc
lret
mov
sub
mov
in
pusha
ljmp
xchg
out
pop
inc
jmp
and
in
sbb
std
jmp
in
fmull
rcrb
sub
or
in
jp
and
or
jmp
and
std
jbe
xchg
icebp
jmp
and
outsb
iret
dec
xor
imul
push
bound
lods
and
fldcw
push
loop
xchg
lods
int
divl
jmp
add
and
shr
jnp
call
cmp
sbb
cmpsl
adc
mov
in
lahf
mov
imul
std
xor
fldt
stc
lret
jmp
and
mov
xchg
xchg
inc
scas
cmpsb
push
pop
lods
int3
insb
mov
jmp
sbb
dec
leave
and
cmp
sub
lret
in
stc
movswl
daa
lcall
mov
mov
jmp
push
jge
or
repnz
in
call
or
add
cmp
jno
jns
mov
or
cmp
sbb
test
jmp
sub
in
popa
repnz
sbb
jae
mov
or
insb
loop
fcompl
sarl
aam
inc
mov
push
les
xchg
int3
push
and
push
prefetch
shrb
push
lock
push
mov
inc
fucom
addr16
sar
or
imul
pushf
cmp
sti
into
mov
mov
sub
mov
add
es
xchg
xchg
jb
imul
push
jmp
int3
mov
inc
lods
pusha
lock
xchg
and
test
dec
push
lahf
cwtl
icebp
popa
jmp
clc
mov
data16
aaa
and
std
mov
jmp
scas
pop
push
or
aam
or
pop
mov
andnps
jmp
mov
sub
dec
movsb
jo
dec
or
or
cs
push
pop
test
and
mov
adc
andb
scas
and
gs
or
add
jmp
xor
sub
repz
sub
xchg
ja
xchg
fld1
jne
sahf
push
and
int
xchg
or
fwait
aam
sbb
jmp
jbe
data16
jmp
or
inc
ljmp
jmp
jmp
aas
scas
es
arpl
cmp
adc
xchg
mov
pop
int3
adc
adc
out
jp
jecxz
jmp
aad
pop
add
cmp
leave
cmc
xor
out
jmp
test
js
in
jmp
bound
cmpsb
jmp
call
lods
pop
jmp
or
sbb
cmp
and
push
pop
lods
ja
rcll
xor
jmp
lods
pop
movsl
mov
inc
jb
sub
shrb
cmp
popa
in
jbe
jge
mov
xchg
loope
das
icebp
jmp
and
or
jle
jns
sub
sub
jmp
mov
jmp
rcrl
out
std
push
test
sub
leave
hlt
xor
xchg
stc
std
xchg
add
push
xor
cmp
ds
mov
lea
sub
je
pushl
or
jmp
adc
pop
lret
mov
clc
push
add
imul
xchg
popf
aam
fimuls
sub
jae
iret
out
or
lret
inc
mov
jl
es
insb
inc
nop
pop
jae
and
dec
inc
jge
fst
mov
pop
rclb
jmp
cmpsb
adc
dec
bnd
mov
inc
addl
fsubr
xchg
jbe
call
jmp
loopne
testb
xchg
mov
cwtl
out
mov
add
mov
pop
imul
jmp
in
pop
rcll
or
out
jmp
imul
insl
add
inc
je
jmp
cwtl
jo
fadds
mov
adc
jmp
repnz
int3
and
adc
not
pop
jmp
cmpsb
push
sbb
popf
repnz
fidivl
adc
into
shr
adc
int
xor
pop
pop
mov
rorl
sub
cld
lock
push
pop
cli
test
sub
sbb
adc
fwait
pop
jmp
jp
lock
push
daa
jmp
xlat
out
jno
sbb
adc
cmpsl
sub
ss
pop
or
lret
scas
push
inc
lods
ret
mov
outsl
add
sub
mov
mov
adc
aad
xor
lock
add
shrl
mov
loope
mov
outsl
adc
add
xlat
dec
aaa
ljmp
push
cmp
roll
inc
mov
imul
jle
fstps
inc
dec
pushf
mov
fdivl
dec
cs
lock
popf
jmp
loopne
hlt
xchg
mov
ljmp
insb
outsl
jg
sbb
xor
jnp
daa
cmp
pop
xchg
roll
enter
rclb
or
mov
dec
inc
or
jg
jmp
push
mov
jne
das
repz
push
mov
sbb
es
sub
or
dec
rcll
push
or
dec
out
outsl
jmp
dec
pop
inc
repz
sbb
loop
jmp
add
jmp
cmp
jmp
in
inc
jg
adc
lods
add
or
subl
hlt
scas
in
mov
loop
cld
pusha
sub
adc
arpl
arpl
sbb
push
mov
or
xchg
jmp
jb
mov
insl
scas
mov
andb
jg
adc
loopne
insl
mov
mov
mov
fdivs
es
nop
and
jmp
dec
or
lods
imul
mov
lods
aam
jno
out
call
sub
push
mov
sbb
fisttpll
repnz
and
inc
shl
pop
mov
jecxz,pt
andb
sti
jno
addr16
xor
fcoms
cmp
fbstp
lahf
push
out
popa
jmp
movsl
mov
pop
cltd
shll
fcmovb
xchg
jecxz
sbb
popf
sbb
divb
push
jmp
into
push
and
lret
adc
sub
out
and
movsb
dec
and
ja
es
ljmp
mov
jnp
stos
outsb
aad
scas
cld
mov
jmp
adc
or
push
jne
add
dec
mov
add
scas
cmp
sbb
stc
jnp
sub
mov
jbe
shl
scas
jne
insb
sbb
test
lock
int3
and
sbb
inc
subb
movsb
pop
sub
and
arpl
jmp
sbb
add
mov
pusha
xchg
push
pop
cld
insb
bound
mov
lods
mov
push
dec
js
sets
sub
dec
sbb
pop
mov
sub
sbb
xchg
sahf
and
xorb
adc
pop
jmp
test
lret
push
jmp
std
mov
cmp
scas
ds
es
cli
push
jmp
movsb
pushf
mov
ss
dec
or
int
xchg
jne
lcall
jmp
fwait
inc
int
mov
pop
xchg
sarb
jp
iret
dec
sti
ss
adc
push
adc
mov
mov
scas
jmp
sbb
into
gs
and
and
popf
test
mov
add
ret
mov
xlat
lods
shl
repz
jp
jmp
xor
test
jmp
or
xor
jmp
test
jne
loopne
lods
cmp
mov
or
fnstenv
ret
adc
mov
jmp
jns
pop
dec
jle
mov
lds
call
mov
sti
or
movsl
dec
mov
and
mov
sbb
jmp
fucomi
push
jo
scas
enter
sbb
ds
jmp
mov
sbb
sub
jmp
or
xor
adc
mov
in
cld
fidivl
jmp
dec
stos
add
punpckhbw
sbb
not
es
lret
rcrl
mov
int3
subb
and
jmp
xor
test
jmp
popf
cltd
in
icebp
push
pop
jmp
and
xor
cmovl
jmp
in
imul
enter
jmp
push
add
fnstsw
out
sbb
push
and
pop
outsl
lret
or
leave
mov
push
in
cltd
mov
sub
repz
push
and
mov
and
test
jmp
in
or
lods
inc
mov
test
adc
lods
loope
test
addr16
adcb
mov
sbb
push
mov
sub
cltd
jmp
test
jmp
aas
shr
or
add
inc
jmp
xchg
inc
in
pop
cmp
fprem
cs
fsubs
pop
in
inc
popa
clc
jg
jmp
add
push
adcl
in
xchg
cmp
jmp
adc
pop
and
pop
adc
pushf
xchg
dec
lcall
gs
push
push
jmp
lock
lcall
sub
fistps
dec
scas
in
rclb
daa
push
out
arpl
mov
push
pop
jmp
jl
and
inc
jmp
stc
aaa
rorl
fistps
jmp
mov
sub
test
or
jmp
adc
por
xchg
sub
xor
jmp
into
mov
mov
addb
jmp
ljmp
mov
je
push
fs
push
cmp
popa
imul
and
lock
mov
stc
jp
jno
jmp
out
int3
insb
add
and
jle
hlt
mov
mov
repnz
les
std
je,pn
jnp
jmp
or
dec
in
jle
jg
inc
cmc
aam
les
or
imul
mov
sti
cs
cmp
xlat
cli
call
repz
push
sub
lods
push
inc
lea
xlat
and
out
das
and
lret
cwtl
or
lds
leave
jl
cmp
ss
cmpsb
call
pop
ja
mov
push
mov
jecxz
nop
ljmp
jmp
xor
and
mov
inc
sbb
movsl
sub
shlb
xlat
jp
outsl
outsb
es
jmp
lcall
int3
scas
sub
sub
dec
es
mov
adc
dec
scas
and
inc
sti
jno
mov
clc
xchg
sub
push
jmp
or
call
lea
sub
ljmp
cmc
test
push
lcall
jmp
push
pop
or
cmp
add
mov
test
cmp
or
mov
xchg
outsb
jmp
fiadds
xlat
jb
mov
mov
cmc
jmp
xchg
xor
pop
jno
jecxz
adc
fisubrl
fsubr
inc
or
jecxz
push
imul
outsl
fdivrl
jne
sbb
int3
cli
ret
inc
addr16
repz
mov
pushf
fsts
pop
ja
insl
jmp
xchg
adc
dec
and
jmp
inc
add
out
rorb
jmp
ret
xor
aad
jmp
mov
js
jmp
mov
sbb
ds
imul
and
sub
pop
jb
or
push
sbb
or
call
or
pop
add
push
gs
push
cmp
adc
sub
jl
scas
add
and
bswap
das
xor
cs
scas
push
cmc
and
inc
cwtl
cmp
mov
pop
xor
cmp
aaa
dec
jnp
pop
sbb
mov
push
and
push
push
in
sti
adc
cmp
mov
imul
adc
dec
or
sub
sbb
jmp
lods
sti
mov
lret
stos
pop
jmp
movsl
imul
mov
mov
aaa
mov
mov
inc
jp
hlt
imul
xchg
lods
xchg
push
inc
sbb
dec
ja
pushf
sahf
mov
push
sbb
jmp
jl
cmp
loop
aas
jmp
jecxz
jno
mov
or
std
repnz
and
jle
xor
je
loop
xor
das
inc
xchg
jo
xchg
jno
jmp
sub
loope
push
pop
fucomip
mov
scas
pushf
lds
paddsb
dec
jmp
xchg
inc
test
or
add
cmp
push
adc
pop
aaa
out
push
inc
ret
inc
jmp
imul
mov
ja
hlt
jno
out
call
cli
jmp
lds
jne
and
cmp
das
fnsave
sahf
lods
xchg
loope
mov
sti
sar
int
jmp
iret
cmp
jmp
lret
testb
scas
hlt
or
sbb
int
mov
outsl
movsl
mov
imul
pop
push
dec
sbb
or
xchg
test
xchg
repnz
add
sub
sub
pop
dec
xor
jmp
adc
or
dec
xchg
cmp
push
dec
and
lret
dec
movsb
sub
mov
mov
outsl
gs
inc
mov
jmp
ror
mov
imul
mov
inc
inc
es
jmp
cmp
push
and
cmp
sbb
aas
jmp
shl
fcomip
sbb
sbb
mov
fadd
leave
jmp
mul
bound
decb
lods
movsb
pop
push
adc
les
pop
inc
sub
pusha
sub
ss
or
sub
pop
pop
add
jmp
and
outsb
out
daa
ret
mov
pushf
mov
jno
push
iret
cmp
and
cltd
fsubrs
mov
push
and
pop
sub
jge
dec
xchg
lahf
shl
jmp
rcrl
test
popa
hlt
jl
pop
jmp
jle
je
and
sbb
cltd
loopne
subl
lahf
inc
daa
fcoms
fimull
pop
ror
das
jmp
push
push
nop
cli
rcll
cmp
dec
outsl
insb
loop
jmp
out
andl
pop
and
pop
adc
ret
int
sbbb
jmp
and
mov
mov
jecxz
dec
std
iret
in
clc
jp
jb
fnstsw
lods
je
inc
jle
jmp
xlat
xor
jmp
push
inc
pop
mov
arpl
push
or
hlt
mov
adc
idivb
sbb
xchg
repnz
or
fsubrs
decl
jns
scas
sub
sti
mov
iret
mov
push
jmp
mov
push
jmp
je
adc
pop
imul
imul
cs
clc
jmp
cmp
mov
jmp
iret
xor
and
test
xchg
sbb
or
cmpsb
sub
in
cmp
and
dec
jmp
repz
sub
and
or
push
adc
sbbb
cltd
dec
cmpsl
push
add
fmul
fcomi
add
or
mov
inc
and
sbb
jmp
inc
pusha
jo
aaa
jmp
dec
cs
lods
pushf
mov
sub
movsb
or
movsl
sbb
pop
sbb
loop
and
fucomi
cmpsb
ret
lahf
mov
insb
add
xor
sbb
sub
mov
xor
neg
in
jmp
jb
push
arpl
jmp
mov
pop
sub
cmp
and
and
pop
adc
jmp
push
mov
push
xchg
adc
fldl
pop
jmp
test
fsubr
xchg
ja
int3
sarl
xchg
push
imul
std
in
lcall
call
sub
push
jmp
pop
je
add
pop
push
or
mov
jp
hlt
jmp
jecxz
cmp
jmp
xchg
popf
push
scas
inc
push
mov
xor
add
out
loopne
decl
mov
jmp
push
or
jmp
sub
jno
shl
inc
ret
dec
cmp
cmp
and
in
or
aad
js
leave
sub
jecxz
enter
pop
inc
stos
stos
in
cmc
jp
or
fucomip
pop
sbb
adc
and
fstp
rcr
call
int3
dec
push
add
cmp
adcl
push
or
ljmp
inc
jns
push
jmp
mov
outsb
xor
jle
mov
arpl
test
insl
mov
jmp
ret
add
push
jmp
push
cli
mov
notl
ja
jmp
scas
mov
movsl
test
shr
aaa
icebp
aam
mov
inc
shrl
repnz
jmp
imul
jmp
pop
pop
dec
cmp
cmp
call
xlat
arpl
add
cltd
jmp
fwait
add
jmp
jns
sbb
lea
xchg
pop
imul
xor
ss
jne
inc
adc
fisttpll
or
mov
movsl
jmp
nop
xlat
add
mov
xor
loope
inc
jae
push
mov
lods
mov
push
shrb
aaa
jmp
dec
dec
xor
mov
xchg
xchg
adc
fldl
push
pop
inc
add
into
jmp
rorb
or
insb
push
push
cmpsl
push
int3
loop,pn
dec
jmp
mov
pop
jl
mov
push
jne
call
jmp
jecxz
mov
mov
jmp
stos
jbe
xor
mov
inc
sbb
xchg
hlt
outsb
cmp
fisubl
push
loopne
std
pop
sub
es
dec
dec
insl
dec
mov
fdivs
pop
mov
andl
inc
and
adc
cmp
out
cmpsl
movl
jmp
movsb
cmc
ljmp
imul
jo
xor
mov
fmull
and
jle
sbb
pop
pop
sbb
or
and
mov
jmp
mov
xor
aad
enter
stc
push
inc
jmp
mov
es
outsb
mov
sub
psraw
cmpsb
add
jmp
arpl
jae
inc
sahf
jg
jge
popf
mov
dec
adc
inc
test
xchg
outsl
or
add
inc
pop
iret
pop
jl
adc
jmp
stos
cmp
fisttps
out
pushw
jmp
lret
xor
pop
mov
cmp
flds
ret
mov
push
mov
mov
jmp
int3
push
xchg
int
mov
js
out
mov
mov
cwtl
xchg
clc
xchg
xchg
cmp
cmp
ds
outsl
sub
mov
jns
pop
nop
push
ficompl
leave
adc
mov
inc
jmp
outsb
adc
sti
pop
jmp
push
outsl
sub
hlt
aad
mov
rcrb
mov
pop
xchg
das
cmp
add
lods
and
punpckhdq
incl
sbb
cmp
cmp
mov
fs
pusha
mov
into
and
jns
inc
stos
jmp
lock
push
jmp
and
es
and
push
fldt
jmp
and
jecxz
pop
and
add
adc
leave
mov
add
push
push
dec
test
cvtpi2ps
mov
fcoml
outsb
mov
sub
je
jmp
cmpsb
out
fsubrs
inc
xchg
xchg
add
inc
fstps
mov
mov
jmp
insl
loopne
fsubl
repnz
jne
sbb
cmpb
lret
push
jecxz
les
idivb
mov
jb
cltd
mov
jo
jmp
pushf
jecxz
stos
add
out
or
cmpsb
iret
sub
lock
jmp
xchg
push
cwtl
popa
mov
jmp
mov
sbb
dec
mov
jb
out
loopne
pop
xor
jo
imul
xor
push
jmp
and
and
push
fmull
call
add
xchg
outsb
xor
xchg
sub
xor
ret
lods
cld
jecxz
popa
or
dec
cmpsl
cmp
pop
idivl
xchg
nop
and
mov
mov
lea
adc
adc
lret
pop
jmp
cmp
addr16
fwait
leave
popf
and
jmp
and
mov
test
jmp
dec
test
stos
sbb
cli
data16
sub
jle
sub
jmp
in
lods
in
mov
sti
xchg
rolb
xor
inc
nop
and
cmpsb
enter
push
data16
fsts
jmp
fnsave
negb
aaa
insl
jmp
pushl
rorb
inc
inc
scas
xlat
sbb
scas
cli
imul
mov
mov
xor
push
and
je
jmp
and
imul
scas
ficoms
js
xchg
and
cmp
int3
or
lods
push
lcall
mov
dec
cmc
xchg
sub
jmp
aaa
test
xchg
jl
push
jmp
push
xorb
aaa
jmp
aam
adc
sub
ja
sbb
aas
repz
lods
cli
cmp
mov
mov
sahf
sbb
in
clc
lock
rol
pop
lods
call
push
jo
sub
stc
jmp
jl
pop
lods
mov
mov
rorl
fiadds
mov
test
jmp
je
js
cmpsb
call
cwtl
in
lret
scas
mov
or
mov
or
aas
dec
cli
cmp
mov
pop
and
negl
push
add
pusha
push
mov
divb
dec
push
fwait
bnd
push
lcall
out
jmp
adc
pop
ljmp
or
push
imul
loope
scas
jg
jb
or
jl
pop
jmp
cs
lret
jmp
jb
ret
aad
sub
push
adc
insl
sub
es
jmp
mov
cmp
loopne
jmp
mov
pop
sbb
add
imul
popf
sub
daa
fistps
or
out
xchg
add
ja
aas
push
insl
lds
push
mov
sbb
sbb
inc
jmp
cli
popf
jns
sbb
aas
sub
mov
xor
outsb
mov
push
jmp
or
sbb
fnstcw
stos
fwait
sub
sub
and
jecxz
lods
jmp
gs
jno
cld
test
jmp
nop
cmpsl
mov
and
por
cmpsb
push
push
lods
sbb
jmp
cmp
shrb
movsb
adcl
cwtl
out
jmp
push
xor
imul
aaa
mov
outsl
jbe
dec
and
jmp
push
dec
mov
fstpl
cmpsb
jecxz
jmp
mov
jae
jmp
sub
lret
ret
out
cmp
or
cli
cmp
jmp
jno
sbb
xchg
xchg
jmp
jne
call
jmp
dec
mov
nop
add
or
in
mov
jg
push
jmp
arpl
adc
pushf
lods
and
das
sub
addb
cwtl
stc
je
sub
jmp
mov
cmpsb
ljmp
mov
dec
lods
and
jmp
mov
sub
cwtl
test
jp
fwait
scas
mov
iret
cmc
scas
out
inc
mov
leave
pop
xor
nop
xchg
sub
lcall
stc
insb
daa
cmpb
mov
into
push
lods
fnstsw
sbb
mov
cwtl
repnz
lods
xor
xorb
jmp
ja
mov
jle
pop
push
fsubrs
pop
adc
pop
lock
pop
movsb
int
cltd
xlat
and
leave
std
inc
cli
popf
push
xchg
imul
call
or
enter
xchg
sub
jmp
stos
mov
test
jmp
push
in
jge
loopne
movsb
xacquire
xor
cmp
jmp
mov
std
add
out
push
cmp
js
daa
mov
xlat
jmp
cmp
push
cmp
pop
or
add
mov
je
popf
push
into
jmp
cmp
fisubrs
sbb
repnz
js
icebp
or
clc
movsl
dec
lods
mov
jmp
push
or
sti
sub
lret
cld
xor
in
scas
cmpl
lods
jb
mov
jno
pop
cmpsb
xchg
add
stc
pop
pop
cli
into
rorl
cmpsb
enter
int3
adc
mul
hlt
and
xor
mov
mov
mov
sub
and
add
jl
dec
sub
mov
mov
mov
lock
dec
push
jmp
and
jnp
jns
jmp
sub
cwtl
daa
arpl
out
in
sbb
push
das
cmp
iret
cli
sub
mov
pop
mov
xor
sbb
pop
xchg
outsl
iret
jo
jmp
das
xchg
pop
mov
in
add
and
sub
ret
mov
jae
daa
inc
jmp
cmp
xlat
pop
add
jmp
dec
and
add
mov
and
pushf
das
mov
add
jmp
test
fsubr
jmp
push
lock
je
xor
out
jmp
dec
cmp
push
addb
ret
outsl
idivl
in
aam
jmp
xchg
nop
mov
jmp
push
mov
mov
mov
jg
jmp
lea
iret
fists
outsb
scas
pop
inc
out
pop
or
int3
sbb
mov
inc
sub
mov
icebp
mov
mov
sub
xchg
jmp
xchg
pop
outsl
xor
or
addr16
outsb
arpl
dec
clc
lcall
aaa
xchg
out
add
jge
add
pop
aad
scas
jmp
shrb
or
nop
int3
daa
fldpi
or
shll
jbe
test
mov
icebp
jle
pop
lds
subb
pop
testb
scas
xor
fwait
and
xchg
jmp
mov
cmp
lods
mov
sbb
daa
mov
popf
pop
pusha
mov
or
jmp
test
lea
xchg
push
test
mov
movsl
cld
jmp
sbbl
pop
and
jbe
scas
adc
sub
jmp
rcll
imul
lcall
sub
clc
sbb
inc
dec
mul
bound
insl
jbe
jmp
cmpsl
pop
mov
imul
add
repz
adc
xor
pop
fisubrl
xlat
lret
sub
inc
das
or
int3
jle
mov
icebp
or
imulb
push
andl
dec
push
loope
push
test
lret
dec
loopne
pop
mov
sbb
push
ljmp
xlat
imul
mov
cmp
mov
adc
adc
xchg
add
ret
mov
cli
jle
jmp
sub
mov
jg
int
mov
adc
sub
sbb
outsb
outsb
daa
out
or
push
std
fcmove
mov
adc
xchg
inc
jnp
movsl
jmp
jl
jge
lods
clc
jmp
xor
adc
jmp
cmpsl
dec
adc
mov
adc
sub
mov
mov
push
adc
lods
xchg
dec
cli
cld
mov
scas
jmp
mov
push
incb
loope
add
cmp
jmp
out
imul
sbb
xorb
lods
in
test
jne
cmp
nopl
xlat
sbb
ds
pop
or
mov
daa
data16
lods
jmp
mov
add
pop
push
lods
and
add
or
stc
rcl
jmp
out
int
popf
cli
xor
cltd
add
sub
hlt
xchg
incb
adc
das
xchg
pop
test
cmp
sub
js
bound
ss
jmp
or
mov
sbb
sub
adc
imul
ret
popf
jmp
ss
aam
adc
insb
addr16
popf
stc
int
idiv
out
jmp
into
outsb
cli
shlb
adc
inc
and
jmp
sti
dec
sub
and
push
mov
clc
and
xor
and
mov
cmp
nop
lods
pop
lahf
popf
mov
fcoml
fbld
arpl
xchg
mov
mov
pop
inc
jae
pushl
adc
push
cmp
test
xchg
testb
jmp
out
jb
fs
mov
or
xchg
xchg
sub
jmp
and
jmp
sbb
std
pop
fstl
dec
lods
mov
fcomps
inc
sbb
sbb
int
imul
jno
xor
jmp
je
xchg
jbe
xchg
sbb
pop
lods
inc
jns
dec
out
lods
xchg
addr16
xchg
or
sbb
and
xor
mov
mov
inc
inc
es
ja
nop
xchg
or
xor
rep
xchg
adc
jmp
fdivrs
lret
cmp
xchg
or
xor
pop
lcall
jmp
outsb
pop
std
clc
dec
arpl
daa
es
mov
stos
lods
cltd
jmp
fldt
sbb
sbb
pusha
movsl
or
jecxz
cmp
ret
fsubrl
int
mov
jne
scas
xor
mov
outsl
jmp
lret
dec
out
inc
stc
cmp
sub
and
jmp
xor
data16
pushf
cmc
daa
cmpsb
push
jmp
sbb
xchg
mov
dec
add
cs
pop
insb
pushfw
inc
sub
jmp
lahf
mov
inc
jmp
and
ret
insb
pop
mov
jmp
fmul
jnp
add
mov
inc
rcrl
pushf
or
js
jmp
push
sub
sbb
es
inc
sub
jle
dec
hlt
loopne
xor
pop
loope
adc
out
sub
je
jmp
lcall
cmp
push
sub
or
push
mov
xor
adc
push
fdivrs
jle
mov
icebp
add
lret
mov
adcb
sbb
ret
push
inc
push
test
jmp
ret
pop
repnz
pop
jb
scas
or
lock
jmp
jp
out
xchg
cli
fldt
mov
js
out
sub
adc
outsb
push
icebp
xchg
repz
cwtl
shr
mov
jmp
test
int3
out
fucomip
xchg
ror
xchg
loop
fld
dec
subl
pop
lea
dec
jl
daa
adc
popa
rorl
inc
sar
mov
jno
addr16
sub
fdivrl
inc
or
pop
lds
jae
repnz
mov
test
dec
jmp
mov
sti
inc
or
in
data16
rcrl
xor
pop
jb
cmpsb
sbb
cmp
mov
std
mov
xor
jg
or
pop
jmp
call
stc
jmp
lcall
jmp
out
sbb
in
jecxz
aad
cwtl
sbb
pop
hlt
sub
jmp
test
mov
jmp
push
mov
in
push
xor
mul
mov
lret
jmp
aad
icebp
outsb
sbb
cmp
stos
jmp
mov
cmpl
sub
sbb
mov
mov
stos
jmp
xchg
and
icebp
jmp
add
rol
inc
sub
sarl
arpl
cwtl
sub
outsl
jae
xor
and
inc
mov
lods
repz
jmp
sbb
pop
andb
jmp
jbe
fadds
jmp
aam
pop
lahf
sbb
jmp
js
mov
negl
cli
rorl
sub
pop
je
pop
cld
leave
add
xlat
jmp
mov
popa
add
cmpsb
mov
pop
sub
lret
mov
sahf
jns
sti
mov
gs
adc
pop
jmp
stos
pop
xorl
push
outsl
jmp
sub
lea
fisttpll
dec
loopne
mov
scas
xchg
and
out
adc
push
aas
or
lret
jmp
subb
add
test
sbb
pop
xchg
inc
cmp
push
ljmp
jo
xor
rcll
cmpsb
daa
xor
dec
lret
sub
or
in
ret
or
ret
lods
nop
imul
jnp
jmp
push
fildl
jmp
or
xchg
enter
jl
and
arpl
jae
es
stc
jb
fstpt
xorl
leave
test
jmp
arpl
cmpsb
nop
sub
mov
xlat
mov
mov
loopne
sbb
lcall
mov
and
aas
lods
mov
mov
mull
jne
sbb
dec
sbb
divb
in
imul
inc
into
lds
std
push
jmp
aas
push
jl
pop
xlat
jp
test
or
xchg
jnp
mov
mov
mov
pop
xchg
pop
sbb
or
pop
ja
cmp
enter
cmp
jbe
xlat
fcmovne
pandn
jns
mov
cmpsl
pop
jmp
call
mov
movl
pop
jnp
sbb
or
push
adc
jle
adc
sub
sub
dec
popa
jmp
inc
jmp
es
dec
js
pop
fs
mov
inc
jb
loop
bound
adc
jmp
popa
pop
cld
lds
adc
lods
dec
cmpb
out
divl
hlt
je
or
imul
dec
neg
cld
sbb
fistpll
push
jmp
cmpsb
jg
rcrb
add
ljmp
aas
pop
in
cmp
pop
jmp
jb
lret
xor
int3
decl
repnz
icebp
mov
data16
out
test
das
clc
in
dec
mov
sub
int
jmp
add
xor
es
pop
aaa
add
sub
gs
xor
sub
adc
sbb
lahf
jmp
cld
shll
mov
ret
test
pop
add
int
mov
ret
mov
lods
and
add
push
cltd
xor
mov
inc
pushf
sbb
pop
int3
mov
sbb
js
jmp
cltd
jg
fwait
movsl
dec
xlat
sub
jno
sbb
popa
pop
push
loopne
mov
add
jmp
ss
xchg
out
cltd
adc
and
aas
sub
mov
je
xchg
or
subl
add
dec
cli
sbb
fcoms
inc
xchg
xor
test
aam
das
arpl
scas
shrb
fsubr
dec
pop
outsl
dec
mov
jmp
repz
pop
mov
les
in
jbe
sti
imulb
subb
cs
jmp
psrlq
mov
sub
dec
mov
lods
mov
cmp
scas
out
inc
mov
testl
fsubp
add
int
aas
jl
enter
xor
sbb
mov
adc
stos
lret
int3
ljmp
ds
dec
shr
add
sub
push
nop
push
sub
sub
jmp
hlt
test
xor
in
mov
or
add
fs
xchg
fldt
mov
shlb
imul
fwait
mov
das
sbb
cmp
lods
out
lock
std
fsubrs
and
push
icebp
jmp
sub
adc
pop
fsubs
insl
lea
icebp
inc
or
pop
inc
outsl
cmpsl
mov
jmp
sbb
mul
insb
lods
rclb
aad
repz
subl
jmp
adc
iret
ret
fwait
xchg
xchg
outsb
cmp
and
test
cmp
stc
mov
lahf
jo
xchg
jmp
push
cmp
mov
loopne
and
aam
fs
adc
jbe
push
jmp
and
sub
pop
insl
sbb
lods
mov
imul
xor
sbb
inc
add
jmp
sub
clc
sub
and
std
sub
push
pop
nop
repz
insl
xchg
stos
dec
sub
cmp
test
mov
mov
into
jmp
arpl
leave
xor
sub
jl
mov
add
lret
jae
jns
fs
mov
jg
shlb
movsb
adc
mov
inc
push
or
adc
ds
bound
ja
lea
inc
inc
jmp
in
popa
imul
and
mov
dec
std
sbb
rolb
inc
jp
mov
jb
xchg
or
mov
sub
and
and
mov
and
sub
mov
in
or
repz
jl
fwait
and
jge
addl
jnp
scas
sub
loope
pop
push
pushf
and
xlat
movsl
and
jmp
pop
insb
int3
push
jmp
inc
mov
lds
pusha
jmp
stos
shl
xor
mov
jmp
int3
fsub
sbb
fildl
dec
jmp
lahf
jl
or
ljmp
sbb
jmp
jl
and
je
ficoml
daa
inc
and
add
jle
sub
sbbl
fs
call
in
xchg
and
mov
lcall
mov
xchg
jmp
pop
sbb
cld
jmp
sub
mov
jle
cmp
mov
xor
pop
scas
lea
loope
xchg
pop
jl
lret
jmp
mov
pop
jns
jmp
std
ret
in
aas
test
and
xchg
pop
push
sti
ret
or
jmp
mov
pop
icebp
jmp
inc
sbbl
jmp
fisubl
movntps
loopne
pop
xor
in
xor
pop
pusha
jmp
mov
stos
sahf
jmp
iret
shrl
sub
addb
xchg
jmp
lods
adc
jae
jmp
inc
mov
dec
fadd
dec
jmp
mov
loop
popa
jns
lods
xchg
and
inc
mov
inc
into
jmp
addr16
cmp
outsl
sbb
mov
push
cs
pop
jmp
add
ret
and
cmp
push
bnd
mov
sbb
mov
insl
add
jmp
or
push
jnp
xor
test
fiadds
sub
enter
ret
jmp
into
nop
jl
punpcklwd
fmuls
cmpl
xor
rorb
push
lods
or
push
mov
js
mov
add
add
hlt
pop
nop
mov
or
or
pop
adc
jmp
pusha
pop
sarb
adc
xchg
xor
inc
fwait
dec
lret
and
adcb
jbe
or
adc
scas
jns
jmp
adc
repnz
ffreep
insl
repz
add
jns
pop
pop
lcall
in
cmp
mov
sub
and
adc
out
sbb
lods
insl
xchg
dec
mov
outsl
in
scas
sub
shlb
lret
inc
jmp
insb
jge
and
xchg
jmp
push
pop
push
loop
int3
scas
fldenv
in
stc
test
in
sahf
fcompl
bnd
mov
sub
jmp
add
xor
dec
adc
cmp
addr16
faddl
mov
aam
sbb
movsb
inc
xor
cmp
jmp
sbb
ja
ljmp
in
adc
movsb
mov
arpl
jl
xchg
jo
sbb
or
inc
aam
cmpsl
push
sbb
jmp
lret
inc
lock
ss
mov
pop
ljmp
fldt
cld
xchg
or
std
arpl
imul
or
stos
in
fadds
inc
lods
ja
xor
adc
jmp
and
movsl
adcb
shlb
mov
aas
outsb
push
pop
out
das
add
inc
lcall
icebp
dec
jg
jmp
xchg
pop
sub
or
jmp
xchg
jp
sub
cli
jmp
cmpsl
test
jg
das
xor
push
cmp
dec
in
imul
inc
ljmp
subb
ret
cli
jp
in
js
sub
xchg
add
mull
and
lods
push
cmpb
ficoml
xchg
stos
jmp
xor
pop
push
insb
lcall
jns,pt
jmp
and
cmpb
pop
ret
je
arpl
sbb
aam
cwtl
mov
inc
imul
je
jp
mov
insb
pop
mov
sub
dec
int
ret
mov
pop
mov
jmp
push
std
shlb
pop
jmp
nop
outsl
jle
out
fldt
push
dec
pop
inc
jmp
add
adc
jmp
cmp
dec
add
xchg
mov
mov
sub
int3
and
pop
js
jmp
xchg
testb
push
lods
push
mov
test
jmp
lods
pop
jmp
rolb
pop
imul
mov
sbb
es
inc
jmp
fdiv
out
xlat
lret
mov
adc
pop
or
cmp
mov
test
lods
inc
loopne
aaa
test
aam
mov
test
mov
push
sub
pop
bound
mov
jl,pn
jp
sub
mov
jg
mov
jne
push
fldpi
jae
dec
push
repnz
sar
mov
shl
jmp
lret
call
out
in
xchg
stc
xor
jmp
mov
jmp
mov
adc
aaa
cmp
mov
fistpll
ret
pop
test
sub
dec
pop
jmp
mov
dec
jmp
push
shll
add
fdivrl
pop
xchg
jmp
mov
push
icebp
cmp
sbb
cmc
push
bound
lods
dec
mov
inc
mov
inc
push
jmp
jp
xor
push
sub
jl
cmp
jmp
or
xor
aad
jmp
lods
in
les
addr16
jmp
leave
pop
push
aam
pop
jmp
fldt
xchg
push
imul
cwtl
into
shlb
popf
jae
sub
xchg
lcall
mov
inc
scas
shr
mov
mov
dec
adc
popf
sbb
mov
jmp
adcl
out
and
jmp
mov
outsl
mov
imul
out
sbb
xchg
and
jnp
lods
lds
pop
cs
sub
cli
sub
inc
pop
cmc
push
or
pop
and
mov
push
fldenv
imul
jo
test
clc
sbb
jmp
sub
xchg
cld
jmp
sub
xchg
inc
push
cvttps2pi
xor
lea
testl
mov
repnz
shr
push
es
insl
nop
fwait
jmp
push
sbb
dec
shr
inc
pop
repnz
fs
fidivrl
push
jle
addl
int3
xor
mov
sahf
push
lock
leave
mov
lds
pop
sti
lret
jge
xor
scas
hlt
sbb
cltd
jmp
fistpl
fstl
lock
dec
inc
inc
xor
sub
mov
adc
dec
sbb
jmp
sbb
and
and
fnstenv
nop
jmp
aad
mov
jmp
insb
xchg
mov
adc
mov
sub
clc
or
je
add
or
scas
mov
jmp
push
aad
adc
ja
leave
xchg
outsb
cs
mov
cld
popf
push
add
jmp
test
jmp
mov
daa
and
in
dec
popf
mov
iret
cmp
js
lods
lret
insb
icebp
sbb
pop
xor
xor
dec
push
outsl
lods
ss
icebp
es
jle
and
lret
dec
jge
lret
dec
adc
dec
and
rorb
dec
stc
sub
push
jecxz
popa
or
mov
arpl
sbb
push
inc
jo
or
jmp
jge
or
jmp
cmp
inc
push
movsl
in
jmp
fnstenv
hlt
xchg
xchg
xor
rorb
int
inc
jae
jmp
mov
ret
das
jne
in
add
outsl
cs
jmp
ja
dec
sbb
and
aas
sub
push
jmp
test
push
jns
mov
jmp
mov
jb
test
jmp
mov
cmp
cmpsb
xchg
xchg
dec
or
fsubrp
xchg
inc
mov
or
das
dec
testl
popf
repnz
sub
sti
mov
add
pop
jmp
push
leave
mov
jmp
add
callw
cmpsb
dec
mov
mov
push
test
jns
loopne
push
push
outsb
pop
aas
sbb
sub
adc
add
jg
lahf
xchg
jp
leave
mov
in
jge
or
jl
orb
out
inc
fisttpl
mov
jmp
cltd
inc
pop
mov
inc
cmpsl
xor
dec
xchg
cwtl
pop
or
sbb
stos
xor
out
rcll
cli
cld
test
test
add
in
icebp
and
push
sub
inc
cmp
cmpsb
jmp
dec
jp
ret
push
aas
out
jmp
fadd
lock
aam
and
inc
inc
or
xor
nop
out
jmp
pop
mov
imul
fimull
dec
push
jl
jecxz
arpl
push
cmp
jae
pushf
jmp
stc
fbld
bound
jl
sub
arpl
sbb
pop
sub
mov
jl
add
adc
xor
jmp
std
xchg
push
jge
in
jmp
movsb
or
jmp
imul
fs
into
iret
popa
movsl
scas
rolb
fsubr
clc
ret
pop
sbb
jp,pt
xor
sbb
rcrl
fsubrs
jl
bound
repz
adc
inc
daa
add
lods
sbb
fdivs
and
js
add
jbe
hlt
jmp
and
in
jg
stc
or
sbbb
cmp
or
inc
or
ret
sarb
mov
js
cli
test
loopne
in
sti
jmp
pop
sub
mov
ficoml
and
mov
fbstp
sbb
lock
jmp
pop
dec
sbb
lea
xor
mov
mov
repnz
push
push
mov
xor
imul
push
pushf
sub
and
and
jmp
mov
rcrb
jle
or
lret
call
repnz
and
mov
sub
adc
add
sbb
leave
scas
jmp
mov
stc
sahf
inc
lods
lods
jmp
mull
xchg
xchg
movsb
push
ja
dec
xchg
je
push
cmc
es
lods
xor
cli
in
test
sub
lods
push
aas
push
ljmp
mov
sbb
jmp
movsl
push
xor
lock
cmpsb
xlat
jmp
bound
jecxz
lock
daa
les
adc
xchg
ss
sbb
cwtl
addr16
dec
test
lea
cmp
or
inc
pop
int3
cmp
jmp
jecxz
addr16
jmp
scas
mov
mov
out
dec
dec
jmp
lods
inc
jae
pop
inc
or
and
ja
lret
nop
and
movsb
cli
push
mov
out
pop
pop
inc
jmp
out
int
nop
hlt
or
pop
push
aas
int3
pop
scas
jg
es
and
popa
mov
test
adc
lret
xor
jecxz
mov
addr16
fcmovne
ret
xor
jmp
sub
inc
mov
enter
push
lea
or
cmp
dec
sbb
cmp
rcrb
lret
int3
syscall
adc
icebp
jl
je
pop
dec
jmp
dec
sub
push
mov
popa
loop
pusha
or
pop
adc
outsl
dec
repz
movsl
fiadds
jp
jne
inc
ss
mov
jno
cmp
lahf
jmp
aaa
sub
sub
adc
lods
jne
jmp
cmpsl
jae
pop
push
test
mov
mov
or
pop
dec
jmp
test
pop
imull
jmp
adc
mov
xor
dec
inc
jmp
mov
push
loope
sub
dec
jo
orl
jmp
pop
inc
divb
sub
or
lods
mov
lea
mov
jp
pusha
mov
adc
push
xor
aaa
and
imul
loop
cmp
adc
xchg
mov
test
in
mov
push
mov
loope
insl
mov
sbb
inc
loopne
jmp
mov
adc
jmp
movsl
xor
mov
and
dec
cltd
aad
mov
cmp
lret
fdivs
mov
sbb
stos
pop
cmpsl
clc
stc
jmp
jb
imul
cmp
push
and
cmp
cli
xorb
pop
aam
mov
jecxz
and
test
sub
and
push
test
and
adc
jmp
lret
add
push
xchg
call
jmp
sub
xor
add
inc
stos
jnp
xchg
iret
fistps
or
mov
sub
mov
in
push
mov
mov
scas
pop
scas
icebp
mov
sahf
jmp
stc
mov
sbb
xchg
pop
add
jmp
fcmovnu
lock
push
push
sub
cli
test
mov
lret
mov
repz
push
insl
in
sub
daa
mov
xor
sti
lods
xchg
in
loop
and
sub
nop
iret
lods
sbb
and
and
mov
sub
mov
mov
and
movsl
fimull
imul
repnz
and
xchg
or
sti
jmp
xchg
stos
dec
inc
sub
lcall
add
push
pop
push
sbb
jmp
jmp
ds
in
sbb
clc
es
cs
pop
or
lock
jns
mov
inc
das
and
push
dec
out
aas
sub
into
mov
mov
pop
fdivp
dec
jae,pt
jmp
insl
jecxz
cmc
mov
add
cld
sbb
daa
call
in
lahf
clc
xchg
scas
add
sub
adc
shlb
das
sti
std
mov
cmpsb
mov
in
cld
outsb
mov
add
out
sub
or
fwait
hlt
jmp
add
mov
adcb
pushf
shlb
scas
ljmp
mov
fnstcw
out
or
jmp
rorb
push
jmp
mov
idiv
add
out
jmp
pop
fidivrs
jmp
mov
pusha
data16
cmc
fsubr
or
sub
rcrb
pop
xor
and
pushf
test
cs
mov
mov
stos
cmp
addr16
aad
or
adc
adc
subl
int3
push
jmp
sbb
faddl
sbb
jmp
inc
pop
adc
loope
push
and
cmpsb
aas
sub
mov
mov
or
pop
jmp
scas
rolb
jmp
cmpsl
inc
and
inc
mov
enter
mov
or
movsl
call
jmp
ds
stc
push
inc
popa
sub
or
jo
rcrl
cmp
adcb
rcl
push
clc
sub
pop
jns
jmp
inc
cs
pandn
pop
inc
enter
rcll
xor
add
xchg
xchg
pop
fdivl
mov
dec
adc
lret
and
inc
das
push
adc
lcall
jmp
jmp
add
pop
mov
rclb
push
lods
stos
sub
sahf
dec
sub
jmp
pop
dec
hlt
movsb
scas
subps
fsubs
and
stos
ds
jmp
ror
mov
jmp
dec
push
or
cwtl
adc
adc
jp
cmp
jnp
jecxz
mov
mov
jmp
test
xchg
mov
das
mov
mov
cmp
in
mov
mov
lock
mov
sub
adc
sbb
rcrb
jmp
inc
adc
jmp
movsl
inc
adc
mov
mov
ja
cmp
pop
jbe
adc
adc
lea
and
mov
mov
sbb
and
mov
or
mov
inc
int3
jmp
std
mov
popf
dec
nop
daa
in
mov
outsb
cmp
cmp
mov
xor
stc
lods
daa
xor
mov
xor
lods
or
or
fstps
sub
lret
jo
fwait
cmc
outsb
mov
sbbb
dec
popfw
rorb
insb
cmp
mov
outsl
fs
jmp
xchg
stc
decb
xchg
cmp
jmp
fdivrl
jns
stos
and
jmp
lea
xchg
inc
outsl
jmp
mov
aaa
xchg
or
jmp
pop
decb
xchg
decl
or
jmp
xor
dec
fcmovbe
mov
aad
cltd
jne
mov
fisttpl
inc
sarl
lods
push
test
popa
pop
repz
int
jmp
cmp
pop
jmp
mov
push
mov
movsb
lock
jp
pusha
scas
testb
psubsw
arpl
pop
push
ds
cmp
push
fs
inc
jmp
pop
je
xchg
nop
out
jmp
dec
mov
fs
aaa
inc
icebp
dec
cmp
pop
lcall
pop
popf
fstpl
jmp
enter
sub
pop
add
hlt
in
adc
xor
out
pop
insl
mov
testb
sub
cmpsb
or
jb
mov
inc
xlat
add
mov
sub
ret
outsb
loope
sbb
repz
adc
subb
xor
mov
jmp
sub
nop
dec
and
jmp
popf
sarl
jmp
rorl
add
popf
and
jbe
or
movsl
or
sub
push
sahf
inc
iret
jecxz
lods
push
push
std
add
and
inc
mov
jmp
mov
enter
pop
push
pop
addr16
xchg
mov
fisubl
and
test
adc
jge
add
into
push
outsl
outsb
sub
aaa
lcall
push
sbb
sub
sub
jmp
xor
stc
mov
jne
ret
sbb
test
push
xor
into
mov
add
bound
sbb
xchg
and
js
imul
lods
orl
data16
cld
sbb
jmp
xor
sbbb
cli
in
pop
push
popa
push
pop
test
faddl
cmp
sub
push
adc
mov
mov
or
mov
xchg
pop
xchg
je
add
inc
jmp
xchg
ss
fcmovu
outsb
adc
push
scas
jle
repz
les
jmp
xchg
pop
aas
idivb
lock
or
sbb
lods
jmp
mov
mov
call
pop
pop
and
icebp
cmp
push
cli
cltd
addb
jmp
jbe
inc
sub
jge
jae
jo
call
pop
mov
xchg
jmp
mov
insl
repz
inc
in
cmp
inc
lods
lods
push
or
add
lret
cld
jmp
xchg
lods
rcll
xor
adc
movsb
cmp
jmp
mov
jmp
mov
sbb
jmp
xchg
pop
jmp
andl
adc
mov
std
xchg
cmp
xor
jne
add
push
sbb
pusha
jmp
and
lahf
mov
sti
stos
inc
repz
adc
jmp
ret
mov
dec
into
sbb
xchg
lret
or
dec
aad
jnp
inc
mov
test
xchg
pushf
ret
jno
and
mov
jmp
test
pop
jmp
push
in
xor
imul
jp
sub
pop
mov
js
inc
push
aam
inc
insl
stos
rcrl
and
sbb
arpl
mov
or
iret
sub
push
xrelease
dec
sbb
mov
sub
add
sti
mov
jmp
jbe
test
jmp
xchg
adcl
sbb
dec
lods
jmp
jp
mov
shrl
mov
cwtl
sub
rolb
ds
fadds
cmp
sbb
mov
into
jmp
rcrl
pop
inc
jmp
dec
mov
adc
test
mov
lock
lret
inc
stc
jno
jmp
dec
into
push
cmp
sub
popa
and
ret
outsb
dec
mov
or
xor
xchg
dec
std
movsl
lahf
jmp
push
add
fnsave
mov
aad
lods
mov
jno
jmp
xchg
dec
push
loopne
sub
cmp
icebp
mov
jmp
push
call
jle
pop
jmp
mov
mov
xchg
add
sbb
mov
sbb
xor
enter
test
jmp
fsubrl
cmp
cmpsb
movsl
movsl
outsb
mov
int3
scas
dec
and
sbb
pop
js
and
les
and
mov
sub
in
and
lcall
pop
pusha
cmpsb
push
mov
fnsave
fdivrs
repz
sti
and
in
jbe
setne
sub
daa
fnsave
scas
stos
test
or
cld
outsl
xchg
pop
or
jmp
xor
bnd
dec
jmp
sub
xor
lret
dec
jmp
sub
inc
xchg
jle
das
sti
ss
test
orb
loope
es
repnz
insb
sub
push
movsl
jmp
pop
inc
mov
shl
jmp
mov
mov
scas
or
push
aam
scas
pop
mov
jge
mov
jns
inc
or
add
shr
inc
div
ljmp
mov
gs
jmp
lret
push
pop
lods
push
call
bound
mov
movsl
jmp
xchg
add
in
jmp
adc
jecxz
and
or
jbe
movsb
push
jmp
aam
fiaddl
mov
xchg
les
push
pop
jmp
insb
and
sub
test
sbb
sbb
sub
xor
jne
cltd
add
pop
je
movsb
mov
aad
jmp
lcall
outsb
scas
mov
inc
hlt
add
sbb
jmp
into
adcl
sub
repnz
das
jmp
ds
shlb
lods
mov
lods
or
incl
daa
dec
loopne
jecxz
or
jge
rcr
mov
jmp
jbe
insl
xor
cmp
sub
imul
jmp
cmp
pusha
cli
aam
jmp
xchg
and
jmp
sub
xor
mov
xchg
dec
jmp
dec
mov
inc
cmp
rorl
jmp
jle
xchg
mov
cmp
insb
jmp
mov
jmp
lock
aad
out
dec
jmp
pop
clc
inc
push
mov
ja
pushl
scas
push
sub
aas
fwait
sbb
mov
add
lods
outsl
pop
mov
sub
rcrb
jmp
je
push
cvttps2pi
test
aaa
push
sbb
cmp
add
or
call
xchg
mov
and
push
imul
sub
stos
jbe
push
xor
inc
lods
push
roll
mov
pop
push
adc
jb
jbe
mov
adc
scas
inc
jmp
or
popf
mov
std
pop
adc
xor
jmp
loope
sahf
ljmp
pusha
pop
cmp
inc
xor
pop
jmp
lcall
enter
popa
add
std
xor
fldpi
xchg
jg
mov
iret
or
rol
popa
scas
roll
lea
sti
or
mov
rolb
xchg
stos
jmp
jecxz
daa
or
jmp
js
test
jmp
jo
sbb
push
mov
insl
stc
dec
and
jg
mov
cwtl
inc
mov
pop
pop
fmull
leave
daa
and
lods
jbe
pop
lods
and
add
cmp
sbb
mov
and
fadd
sub
inc
mov
divb
repz
inc
outsb
nop
add
add
leave
or
lods
sbbb
cs
movsl
jmp
rorl
xor
rorb
push
in
jmp
xchg
xor
ret
out
xor
pop
or
mov
sbb
add
scas
mov
cmpl
pop
cmp
ljmp
movsb
jmp
adc
enter
iret
xor
rclb
shrl
scas
jmp
add
mov
or
nop
mov
jl
jle
movsb
add
and
lods
jmp
push
fistpll
lret
sub
pop
test
pop
es
push
jmp
stos
popa
ret
lahf
fwait
jmp
cmp
dec
adc
sarb
fmuls
sub
sbb
insl
shrb
pushl
sbb
pop
inc
dec
pop
pop
in
repz
push
cli
jnp
dec
inc
jmp
push
scas
mov
jmp
sub
pusha
loope
or
aaa
out
push
repz
push
in
pop
sub
jmp
lods
ss
loope
mov
ds
sbb
xchg
jbe
cmp
mov
xchg
jmp
push
xor
pop
fldt
sub
mov
hlt
jmp
scas
in
dec
or
push
jmp
movsb
adc
in
inc
add
or
inc
mov
xchg
minps
jbe
daa
xchg
aad
lock
lods
cmp
inc
or
mov
in
xlat
les
outsb
jb
lock
jmp
adc
dec
jne
pop
sbb
lcall
xchg
or
into
lods
out
mov
pop
dec
and
leave
sti
pop
and
xchg
mov
jne
inc
and
cltd
pop
enter
jmp
sbb
sbb
jmp
mov
and
dec
cltd
push
cmc
out
push
push
mov
andl
inc
jmp
and
das
jmp
mov
mov
mov
xchg
mov
pop
jl
jmp
loope
pop
jecxz
inc
xchg
jmp
setno
cmp
add
repnz
addb
inc
test
jmp
add
gs
mov
jmp
idivb
pop
mov
rorb
push
lahf
lods
shr
inc
shlb
lcall
jmp
lods
sbbb
mov
sti
clc
es
xchg
mov
dec
mov
sbb
daa
jl
sbb
jmp
cmpsb
lock
pop
mov
mov
vminpd
lahf
or
hlt
adc
mov
cmp
mov
sub
push
pushf
cli
jns
or
xor
insb
lods
aaa
lcall
loop
jmp
xchg
jmp
inc
pop
mov
jmp
and
xchg
mov
jmp
mov
outsl
dec
jmp
mov
xor
jmp
sbb
push
cmp
inc
inc
cli
je
dec
nop
mov
aad
and
jl
test
addb
add
fs
dec
lret
xor
xchg
and
sbb
push
xchg
pop
sbb
iret
sahf
lahf
add
jo
fnsave
add
or
in
inc
jg
repnz
xchg
jbe
sbb
fdivl
rorl
les
mov
jmp
jbe
lcall
rcrl
rolb
cmp
je
rorb
sub
out
scas
sub
xchg
arpl
clc
jg
mov
cli
ljmp
call
xor
lea
mov
jns
push
cli
nop
jmp
jl
jne
pop
mov
ror
pop
cwtl
outsw
pop
fwait
jmp
or
push
fldpi
cld
jno
jns
xor
sti
xchg
inc
mov
scas
addr16
mov
jo
inc
mov
popf
jmp
adc
pop
ss
jmp
mov
sub
jmp
lret
int
sbb
jmp
pop
loope
fcoml
jmp
pop
das
aad
mov
sub
jmp
add
insb
scas
sub
or
xchg
sbb
jmp
cmp
cmp
xlat
icebp
and
add
imul
sti
push
out
lcall
and
cld
rorl
outsl
push
jmp
iret
mov
or
in
sub
or
fwait
out
enter
lret
pop
sub
and
lods
lret
ret
hlt
sub
sub
inc
xor
jno
sub
fs
mov
lods
out
cmp
das
jl
sub
lahf
popa
in
xchg
pop
fcmovbe
push
mov
or
inc
inc
mov
xor
fnstenv
and
test
inc
mov
cld
jmp
les
pop
xlat
xchg
push
jmp
dec
pop
jge
std
adc
ror
dec
dec
jmp
lock
xchg
push
jae
lods
add
ret
adc
mov
imul
mov
jnp
jns
pop
lods
aaa
sbb
dec
leave
out
stos
jo
xor
add
push
jmp
jecxz
jl
pop
jmp
pop
icebp
test
mov
inc
xchg
std
dec
or
clc
fistpl
ret
in
sub
jnp
push
les
outsb
jmp
aas
imul
insl
pop
scas
jmp
adc
push
jmp
add
in
mov
sbb
fst
aad
push
push
lahf
mov
cmp
cwtl
push
mov
or
aad
jmp
das
add
test
adc
jecxz
or
jmp
mov
mov
mull
mov
imul
popa
or
ss
jmp
int
mov
lods
lret
pusha
popa
bound
sub
adcb
adc
insb
fs
mov
outsb
jmp
sub
jg
aaa
sbb
mov
imul
and
jb
adc
mov
sarb
arpl
mov
sar
jmp
xchg
sbb
cmc
mov
jmp
sub
mov
cmp
xchg
xlat
test
jne
insb
xor
int3
stos
jmp
push
out
les
daa
jmp
add
xor
ljmp
or
sbb
and
int
mov
repnz
cli
jl
dec
fiaddl
mov
dec
jmp
cmpsl
or
mov
fdivl
xchg
rorl
aas
repz
push
ljmp
jmp
enter
mov
cmp
sahf
sbb
cltd
jmp
pop
lods
pop
jmp
xor
data16
mov
inc
nop
mov
cli
jmp
sti
dec
aad
xor
dec
mov
adc
repnz
aam
adcb
mov
jmp
out
rclb
mov
sub
mov
insl
int3
shr
inc
and
pop
imul
jns
inc
sbb
aas
test
bound
jmp
or
fbstp
icebp
mov
dec
inc
insb
jmp
testb
and
pop
jmp
pop
test
fwait
jle
ss
xchg
jmp
int
ja
lea
mov
jmp
pop
mov
xchg
mov
mov
ja
sti
mov
mov
xchg
cli
or
or
sub
jmp
dec
in
outsb
cmp
mov
push
push
jmp
insl
mov
pop
add
es
push
lret
ja
mov
arpl
jl
sub
jmp
dec
adc
cmpsl
xchg
jmp
and
mov
push
sub
es
jmp
ret
inc
std
mov
rcrb
sub
or
je
stos
shr
pop
sbb
adc
mov
jmp
stos
lret
sbb
enter
in
ss
shlb
cmp
roll
insl
aaa
cmpsl
sbb
lods
arpl
loop
stos
repz
adc
test
and
sub
mov
inc
clc
dec
jmp
or
ljmp
cmp
shrb
mov
pusha
jmp
cmp
mov
push
mov
add
jmp
sub
dec
loop
es
and
jmp
arpl
icebp
jmp
pop
jecxz
pop
jle
jp
mov
xor
inc
leave
push
pop
scas
test
or
sbb
out
fildll
pop
cmp
jmp
andl
popf
pusha
jecxz
cld
or
jmp
xchg
ss
repnz
daa
arpl
ja
or
bound
sub
pop
rcl
ret
les
mov
enter
jl
aam
or
int3
xor
mov
add
xor
popf
daa
fisttpll
sub
xchg
hlt
jmp
cwtl
mov
mov
fisttps
imul
xchg
cmpsl
xchg
popf
mov
lock
inc
subb
shr
sbb
and
mov
jno
pop
push
clc
adc
int3
mov
dec
sub
or
imul
fwait
xchg
mov
jmp
repz
out
das
test
test
insl
mov
aaa
sub
dec
cld
pop
aam
xchg
pop
jmp
test
in
lods
push
in
jnp
sti
mov
sbb
mov
push
push
adc
out
adc
push
jmp
xchg
and
daa
jmp
fisubrs
jnp
lahf
ja
cmpsl
inc
push
fsubrs
jmp
adc
push
mov
jae
ror
cmp
cmp
or
mov
fisubs
adc
scas
pop
jmp
mov
cmp
pop
lahf
pop
xchg
inc
cmp
insl
hlt
jns
xchg
jmp
mov
aas
je
outsb
mov
leave
add
adcl
add
gs
lret
sub
adc
imul
pop
and
add
nop
mov
cld
sub
outsl
mov
insl
push
fnstcw
jmp
cmp
bound
xor
cwtl
or
jnp
jmp
mov
test
jmp
sarl
xchg
pusha
push
xchg
enter
jmp
and
mov
pop
pushfw
dec
mov
add
mov
jns
arpl
jmp
push
xchg
inc
ror
mov
inc
lcall
mov
leave
push
lods
lret
nop
push
cltd
cld
jmp
xor
lret
les
inc
mov
call
lods
and
dec
call
lock
rcr
adc
divb
arpl
lds
stos
movsl
mov
into
inc
mov
nop
cmpsl
jno
and
jb
jns
cli
or
pop
iret
jmp
xor
or
mov
pop
ret
scas
aas
notb
iret
rcrl
outsl
scas
jmp
cmp
pop
mov
notb
xlat
jb
and
bound
xchg
pop
xchg
leave
mov
scas
fwait
mov
and
adc
lods
ss
sti
scas
xor
sbb
mov
cmp
pop
jp
xor
sub
pop
inc
jmp
mov
mov
das
xor
imul
lock
enter
or
add
mov
in
cli
sub
pop
pop
jmp
inc
xchg
rolb
and
sahf
inc
and
cmp
repnz
dec
roll
push
stos
outsb
faddl
mov
mov
jmp
out
mov
jp
cmp
lret
es
in
adc
jmp
fstpl
and
shlb
enter
pop
ret
rcll
mov
xor
scas
jg
cltd
jbe
int
loope
cmp
jle
andl
and
pop
jmp
mov
cld
addl
jo
lock
xchg
pop
movsl
mov
call
daa
cli
add
shr
sub
xlat
dec
jmp
test
inc
mov
es
push
push
and
hlt
mov
adc
or
mov
fisttps
mov
mov
push
nop
jns
xor
lret
inc
cmpsl
shrl
sahf
mov
test
jp
cmp
mov
cs
sbb
je
cmp
sbb
icebp
lcall
inc
cltd
std
push
mov
push
xor
add
dec
test
adc
jmp
mov
je
jmp
adc
add
imul
xchg
or
and
push
xchg
in
cs
push
and
dec
jb
stos
repz
pop
movsb
mov
pop
mov
cs
sahf
adcb
lahf
nop
iret
aam
mov
jmp
stos
push
loop
adc
jmp
cmp
sub
mov
fs
push
and
movsb
fimuls
test
and
and
imul
in
mov
jecxz
xchg
jmp
lds
adc
aaa
aad
daa
mov
mov
or
mov
dec
cltd
cmpb
push
jb
imul
jle
xlat
popa
sti
loop
pusha
daa
data16
mov
dec
mov
pushf
rcll
and
mov
int3
cwtl
or
xchg
adc
bnd
rcr
hlt
sbb
push
jns
test
out
jmp
repnz
jb
and
jmp
pop
push
lcall
int
pop
sti
cmpsl
dec
push
add
sub
sub
mov
xchg
in
xor
xor
ret
sub
push
cmp
pop
test
jno
and
mov
xchg
jecxz
inc
outsl
add
andb
inc
sarl
push
je
and
cmc
call
jmp
pop
aad
pop
xchg
mov
dec
cmp
jmp
xchg
in
not
into
jmp
sub
inc
jp
mov
int
mov
loop
xlat
test
jne
in
repz
hlt
mov
jmp
cmp
adc
mov
and
loope
push
dec
mov
fnstenv
mov
add
jmp
popl
dec
or
mov
hlt
sub
push
jmp
movsl
icebp
lock
incl
jmp
data16
ljmp
add
mov
and
pop
jmp
mov
mov
jmp
test
shr
adc
aad
out
cmp
imul
or
push
pop
scas
inc
aam
cmp
add
fwait
or
pop
cli
jmp
sbb
jmp
fs
sbb
fdivrl
test
jmp
popf
xchg
jg
mov
fucomi
lea
or
cltd
mov
inc
ljmp
push
xchg
aad
and
jmp
cmp
dec
in
fstpt
push
xchg
jmp
int3
dec
jae
and
jmp
cli
fwait
inc
rcr
push
jmp
je
ja
adc
sub
int3
cmpsl
fwait
leave
jl
outsb
xor
mov
inc
test
mov
xor
sbb
test
fldcw
pop
mov
sub
push
lret
pusha
fdivp
lods
in
push
mov
aas
insl
or
fwait
loop
jge
mov
repnz
lods
jb
cmp
sti
add
push
jmp
inc
or
jo
or
jmp
js
cmpsb
xchg
scas
call
mov
jmp
fnstenv
mov
sbb
ljmp
pop
or
add
subl
loope
push
sub
mov
push
stos
jg
bound
lods
and
jno
sti
fistpll
mov
mov
mov
insb
pop
aad
out
scas
imul
xchg
sbb
decb
mov
push
and
pop
jmp
sbbb
int3
fcomps
xchg
jmp
ds
out
das
xor
jmp
movsb
aad
sar
jp
jnp
dec
cmp
pop
cmp
scas
sbb
jmp
rcll
dec
or
inc
mov
and
jbe
rorl
sbb
lods
clc
cmp
push
in
call
lds
jmp
in
jne
stos
hlt
mov
sub
jbe
cmp
pop
pop
and
adc
in
leave
sbb
sub
in
xchg
jmp
pop
push
jg
shll
outsb
out
ja
sub
insb
jmp
dec
jo
mov
in
ss
repz
ljmp
jmp
pop
test
add
loop
mov
pop
add
mov
test
scas
lods
das
jmp
hlt
xchg
repnz
sahf
jmp
adc
addr16
lods
jmp
icebp
pop
mov
adc
movsl
lcall
and
jl
mov
xchg
repnz
jmp
imulb
dec
mov
sbb
das
daa
cmp
jmp
and
inc
sub
push
mov
mov
stc
pop
ljmp
and
sahf
mov
pop
in
jmp
push
mov
aaa
pop
lods
add
lds
sbb
dec
mov
xlat
add
mov
mov
scas
and
les
dec
jmp
jmp
mov
enter
add
popf
ret
aad
push
outsb
shr
push
mov
mov
mov
jmp
ficompl
loope
ljmp
lcall
push
dec
cli
shll
pop
pop
cwtl
dec
dec
jmp
loopne
lea
jno
jmp
test
inc
add
clc
rorl
pop
mov
js
xor
in
mov
add
insl
dec
movsl
jo
into
out
dec
cs
pop
pop
mov
mov
jmp
pusha
movb
fsubr
xchg
mov
in
lret
inc
jmp
add
jno
lret
mov
enter
subl
ja
adc
and
xchg
pop
sbb
jp
movsb
mov
cmpsl
mov
outsb
push
cmp
jmp
mov
inc
test
jp
push
cmp
scas
pop
push
mov
subl
mulb
inc
pop
jmp
and
hlt
jno
jmp
std
lret
jp
cmp
rcll
adc
addr16
and
jmp
lret
dec
pop
loopne
sbb
jmp
cmp
fxam
xor
clc
cmpl
jmp
sub
cld
xchg
daa
adc
stos
jecxz
cmp
cmp
dec
ret
or
sub
stos
gs
mov
sub
push
or
lods
pop
jmp
inc
fimull
cmpsl
out
movsl
sti
jmp
xchg
dec
and
dec
sub
inc
adc
push
jmp
jmp
mov
add
mov
pushf
incl
jmp
mov
add
fildl
jb
fwait
add
into
scas
xchg
pusha
inc
lahf
frstor
jmp
pop
jge
daa
ret
jo
xchg
xchg
repnz
loope
stos
outsl
cmpsb
jmp
fcompl
cmp
test
sahf
ret
clc
xchg
jmp
push
out
aas
cltd
adc
ljmp
inc
adc
sti
daa
mov
jmp
dec
pusha
mov
jbe
stos
ds
cmp
aaa
and
xor
cwtl
dec
or
sub
mov
push
divl
jmp
mov
jle
jmp
push
cmp
xchg
or
in
cmp
ficomps
dec
and
aam
pop
addr16
sbb
xor
je
or
fadd
jnp
lahf
mov
scas
inc
mov
movntps
cwtl
repz
mov
cli
dec
aaa
pusha
fs
jbe
test
int3
shr
ja
aas
stc
rol
and
out
sbb
call
add
xor
sahf
push
and
jmp
cltd
maskmovq
testl
pushf
shlb
mov
pop
jmp
xlat
push
adc
mov
add
sbb
shlb
enter
xchg
pop
cmp
or
call
dec
xchg
adc
test
jmp
mov
in
push
jmp
fmuls
es
sahf
bound
inc
imul
mov
imul
imul
fmuls
loopne
fidivs
std
hlt
in
jmp
push
lret
and
add
push
jmp
cmc
shrb
movsb
pop
jmp
cld
xor
imul
repz
add
bswap
and
jmp
mov
js
jmp
cmp
xchg
push
test
jmp
pusha
inc
sarb
int
push
lods
iret
and
dec
jmp
push
sbb
and
jl
jmp
fwait
mov
fldt
cmpl
in
mov
sbb
adc
mov
pop
or
aad
dec
movsb
leave
bnd
pop
jmp
lcall
dec
jae
push
in
sub
testl
push
shr
dec
fsubrl
repz
sbb
cmp
in
sbb
mov
aad
adc
fstpl
xor
jmp
inc
test
stos
test
mov
in
loopne
rcrb
out
lret
stos
outsl
bound
daa
shll
scas
dec
pop
nop
sub
bound
scas
push
rcrb
cmp
push
xorl
cs
out
or
arpl
enter
jg
jge
std
aad
out
xor
mov
or
mov
gs
lret
in
repnz
je
sbb
dec
jnp
jmp
nop
ret
sti
clc
fs
push
jmp
out
mov
mov
bound
push
fwait
sub
dec
sub
idivl
and
mov
cmp
dec
dec
add
pop
adc
xor
push
push
scas
pop
xor
jbe
pop
std
aam
in
mov
cmp
es
lcall
pop
lret
cmp
ror
push
dec
add
sub
cmc
sub
popf
repz
test
rcll
and
cmpsb
jp
mov
mov
cmpsl
dec
lock
out
das
sbb
xchg
loope
or
sub
fstpl
and
jp
xchg
jne
push
push
sarl
mov
sahf
mov
cmpsb
fadds
ja
shr
sub
jae
subl
cltd
push
fistl
jmp
fnsave
jg
mov
pop
jno
push
xor
push
lods
push
dec
fs
sbb
dec
lahf
cmp
dec
test
fnstenv
outsb
movsl
sbb
push
cmp
iret
adc
cltd
or
mov
imul
icebp
lahf
pop
fsubrp
pushf
inc
lea
jbe
sahf
jno
add
and
push
xchg
xor
roll
cmp
mov
stos
addl
push
and
movsb
fucomi
and
fs
int3
outsb
arpl
mov
repz
sbb
jmp
incb
fadd
icebp
add
dec
or
and
jmp
add
notl
xchg
into
pop
out
adc
sub
mov
in
popf
inc
xchg
sub
jmp
aam
lahf
rcl
dec
jmp
fisttps
stc
or
lods
fcmovbe
out
subb
lods
cmp
push
or
xchg
clc
cwtl
sub
out
mov
push
push
push
in
lcall
out
push
jb
mov
jmp
xchg
jns
es
xor
adc
notl
jmp
sbb
lea
test
xlat
jmp
and
out
jo
sub
in
mov
jbe
lods
xor
shl
das
sbb
ret
adc
fmull
adc
stos
fisttpll
sti
inc
jnp
in
jg
jns
cli
daa
orb
mov
xorl
pop
and
add
or
cmp
xor
cmpsb
addr16
not
imul
push
push
into
pop
mov
fisubrs
addr16
or
add
dec
jmp
cwtl
nop
xchg
adc
outsl
xchg
jmp
loope
inc
sarb
fidivl
jae
add
testl
mov
cmpsl
mov
in
mov
cwtl
push
xor
pop
cli
sbb
jb
aad
jmp
imul
jmp
js
cmp
mov
lods
adc
push
or
xchg
jo
adc
fpatan
pusha
sub
or
ds
pop
inc
or
cmpsl
cli
mov
push
sti
bound
jmp
dec
ret
lret
xchg
push
dec
cs
push
imul
mov
stos
mov
movsb
cld
mov
mov
jmp
jae
loop
es
in
jo
daa
aam
add
mov
in
xchg
mov
insl
std
xor
jmp
pop
lea
jmp
inc
aas
das
adc
lods
rorl
inc
or
pop
mov
dec
pop
stc
call
jmp
jns
adc
xor
xor
cmpsb
dec
jo
fdivr
dec
enter
lods
int
lcall
xor
push
sarb
dec
inc
imulb
jne
fmul
jbe
rolb
and
lcall
aad
fisubrl
jmp
aaa
ds
outsl
mov
sub
enter
ss
fisttpll
mov
pop
sub
push
dec
jle
sbb
jmp
arpl
cwtl
add
fsts
shrl
add
int3
outsb
or
es
xor
pop
push
ret
jl
sub
and
pop
scas
sub
mov
imul
and
not
jmp
jo
inc
mov
lret
iret
and
cs
mov
cwtl
sti
cmp
jo
dec
mov
hlt
stos
jmp
lahf
test
sti
adc
shrl
add
sub
cmp
dec
xor
pop
sub
clc
jmp
jne
xchg
jb
sbb
sub
lds
cmp
mov
inc
mov
scas
mov
add
in
mov
jmp
mov
negb
repnz
fwait
outsb
sub
scas
mov
subb
andb
fmuls
repnz
dec
push
scas
mov
pushf
xlat
in
std
loopne
sub
dec
jmp
out
lods
imul
outsb
jmp
out
adc
scas
jmp
cmp
xchg
push
hlt
sub
repnz
es
in
rclb
push
sahf
je
stos
ret
cld
loopne
popf
test
jmp
mov
and
hlt
mov
shrl
add
jmp
les
jno
test
jae
mov
inc
stos
xor
iret
je
addr16
mov
outsb
add
add
ljmp
hlt
mov
ds
addl
por
loop
movsl
cmp
test
xor
insb
add
lret
out
rorl
cmp
insl
mov
clc
jmp
sbb
sub
loope
jmp
je
les
add
mov
cmp
in
jmp
insl
test
dec
inc
mov
mov
adc
sub
sub
push
and
push
sub
pop
cmp
sbb
outsb
cmp
test
cmpsb
decl
mov
lods
bound
lds
jmp
aaa
jns
sub
xor
shrl
test
jmp
mov
xor
jae
push
jmp
pop
sbb
enter
lret
mov
js
ds
addb
or
jg
enter
test
and
test
jnp
sub
nop
mov
push
bound
and
mov
jmp
int
push
movsl
test
lods
xchg
or
gs
inc
lret
xchg
sbb
ret
daa
cmp
sbb
lods
mov
and
jmp
sti
mulps
rcl
stos
ljmp
and
lahf
lods
mov
pop
dec
mov
popf
jmp
mov
inc
jmp
lret
sbb
xchg
std
call
sub
dec
movsl
mov
out
lret
pusha
xchg
cmp
add
xlat
cwtl
mov
jns
ds
inc
mov
rclb
push
lods
enter
loope
pop
sbb
lahf
lods
outsb
or
and
add
enter
jmp
lods
fdivl
add
push
sub
mov
jmp
xlat
js
loop
loope
jbe
inc
clc
jmp
jnp
push
stos
jb
adc
test
jmp
shlb
int3
addl
adc
fstpt
sbb
adc
adc
fwait
jmp
shll
sarb
pop
pop
or
pushf
mov
sti
jge
ds
movsb
mov
leave
lret
cwtl
or
das
pop
aas
mov
scas
push
std
jl
mov
lock
mov
push
nop
xorl
or
or
push
sbb
les
sub
repnz
mov
and
test
or
test
or
aaa
popa
pop
pop
scas
sub
fbld
xchg
lods
adc
mov
ret
addr16
or
mov
rcl
lods
decb
pop
in
xchg
xor
pop
mov
mov
xchg
es
dec
and
jmp
pusha
icebp
out
addb
push
mov
jl
aad
scas
test
and
xchg
negb
mov
inc
pusha
test
lods
imul
outsb
cli
dec
mulb
repnz
jno
gs
jge
and
bound
dec
xor
dec
pop
repnz
outsl
pop
or
es
push
jmp
cmp
data16
mov
and
es
stc
mov
je
insb
pop
fnstsw
adc
inc
or
jmp
std
out
popa
pop
hlt
cltd
jmp
pop
cmp
sub
jmp
test
push
sbb
fsubr
and
popa
adc
lret
gs
ss
jbe
jmp
iret
scas
cmpsb
aam
adc
jmp
push
imul
mov
stos
jo
sub
lock
bndstx
cli
mov
jmp
repnz
adc
add
shrb
sti
daa
mov
in
add
mov
xor
cltd
jg
ja
lcall
pushf
lea
cmpsb
lock
xchg
jo
loop
xor
les
or
pop
mov
xlat
sti
mov
ficoms
lea
jmp
push
mov
pusha
fcmovbe
jle
lods
xor
sbb
out
jbe
mov
sbb
imul
lods
inc
pushf
test
jg
daa
mov
bnd
pop
or
aad
jno
sub
in
push
aas
sti
jmp
lock
sub
xchg
icebp
jp
jge
mov
push
mov
jbe
lahf
rolb
cmp
push
test
adc
jmp
mov
scas
insl
cli
scas
aam
pop
lcall
sub
icebp
ds
and
pop
stos
fcoml
and
mov
fidivrl
xchg
outsb
add
test
subb
xchg
lret
psubd
in
mov
movl
and
jmp
aaa
shrl
add
outsb
stos
add
jmp
aas
add
lods
pop
ljmp
adc
add
arpl
xchg
xchg
pop
and
inc
jmp
cmc
out
int
dec
sub
xchg
scas
loopne
rcl
sarb
dec
cmc
jb
fnstcw
aas
jmp
add
and
push
mov
popa
shrl
sbb
mov
imul
cwtl
cmpsl
jb
test
push
add
repnz
or
stos
bound
pop
jae
add
fisubrs
mov
adc
mov
ret
das
xlat
xchg
push
or
push
scas
sub
cmp
xor
jecxz
inc
mov
hlt
mov
dec
sbbb
jmp
sbb
mov
pop
xchg
jmp
loopne
adc
cmpsb
sub
cmp
sub
in
push
dec
and
xor
lea
sub
dec
xorb
mov
cld
test
cmpb
jmp
mov
out
sub
inc
ret
cli
orl
in
dec
xchg
or
lret
mov
mov
sbb
bound
and
jmp
pop
mov
jmp
fldenv
sbb
pop
adc
sub
int
sub
je
pop
int3
xchg
jmp
lcall
sbb
hlt
bswap
in
sti
hlt
inc
xchg
mov
outsl
and
stc
pop
jecxz
or
inc
sub
lret
xorb
sub
mov
popa
mul
sbbb
mov
xor
jo
aam
dec
stos
xchg
fldpi
mov
cmc
inc
push
cmp
xchg
inc
jmp
push
push
mov
or
call
sub
loop
shl
movsl
push
add
ret
dec
sbb
push
ds
inc
jmp
sti
cmpsb
shr
aad
loope
notb
mov
pop
adc
mov
pop
sbb
jp
xchg
icebp
dec
jo
xchg
xor
push
cmp
mov
pop
out
jmp
hlt
mov
sti
pop
sub
ljmp
sub
cmp
inc
mov
shrl
jmp
xor
dec
pop
sbb
mov
fisttpl
sbb
in
aam
or
jp
jle
fisubs
popw
sti
pop
inc
xor
jmp
je
outsb
sub
mov
push
scas
push
insl
cwtl
sbb
outsl
cli
adc
and
xor
pop
sti
xorl
shl
mul
sbb
mov
jmp
adc
push
sub
dec
mov
jmp
pop
adc
jmp
in
jns
inc
fst
jmp
gs
adc
mov
inc
xlat
mov
cwtl
xor
jno
int
inc
pop
xchg
mov
popf
lock
rolb
inc
mov
int3
push
jnp
push
jmp
pushl
pop
loopne
nop
cmc
inc
push
xchg
aam
jnp
push
test
jmp
and
fisttpl
cmp
xorl
aam
leave
outsb
mov
xchg
into
cld
jmp
testl
scas
push
jae
int3
or
dec
nop
enter
pop
mov
cmp
adc
test
adc
dec
sub
xor
mov
push
xchg
jmp
fsubl
mov
jmp
enter
push
ljmp
out
leave
dec
std
inc
adc
and
nop
adc
fs
pop
cmpsl
lea
out
jmp
call
in
mov
lods
shlb
enter
orb
lret
shlb
jmp
inc
pop
adc
cmpb
cmp
arpl
fldenv
mov
adc
jmp
das
repz
sub
rol
xchg
lea
xchg
jb
js
or
xchg
and
jae
push
jmp
fisubl
decb
fistl
mov
sti
pop
push
mov
ds
out
call
jmp
push
ss
aas
pushf
cmp
jmp
jg
pop
xor
mov
xchg
add
bound
jmp
lock
push
sarl
dec
sbb
sti
addr16
jae
jmp
shlb
sbb
jmp
xlat
cltd
lret
sbb
jmp
fisubl
test
sub
mov
jge
push
and
lret
jmp
scas
js
cmp
add
mov
sbb
pop
negb
inc
xchg
jp
push
es
fwait
xlat
jbe
repz
call
xchg
stc
ror
dec
mov
dec
andl
es
mov
dec
js
cmpsl
lods
sub
jmp
sub
mov
sbb
sub
sbb
add
jmp
mov
pop
cli
or
jmp
imull
mov
mov
pop
pop
cltd
xor
jmp
aam
test
popa
cmp
mov
nop
pop
and
mov
sub
mov
jmp
cmpsb
cli
stc
test
sub
hlt
push
or
pushf
xchg
in
mov
jmp
jbe
mov
jmp
mov
ret
fsincos
jmp
xor
popf
insl
xchg
mov
loope
pop
mov
rorb
adc
mov
push
xor
imul
adc
push
lea
sbb
jmp
out
loopne
ja
sub
fs
stc
inc
jmp
shll
dec
and
jl
sbb
repz
mov
lods
lock
ljmp
mov
sub
ljmp
sub
xchg
jo
iret
mov
rcl
pop
mov
cmc
cmp
repz
loope
sub
in
out
cli
testb
addr16
lret
xlat
sbb
or
cmp
lods
sub
dec
out
add
and
testl
mov
jmp
jecxz
jo
int3
sbb
lods
cmp
mov
iret
in
int
pop
inc
aas
popa
rep
subb
or
shr
ficoms
pop
inc
insb
out
loop
and
mov
jmp
pushf
mov
mov
cld
hlt
cmp
lods
rclb
adc
fs
mov
scas
ja
stc
rcrl
jmp
lahf
push
adc
mov
pop
dec
jmp
mov
pop
test
iret
cmpsb
stos
ret
mov
jl
push
sbb
addr16
sub
stos
cwtl
mov
btr
fwait
inc
xor
jge
test
add
adc
int3
les
jmp
or
sbb
movups
add
in
test
movb
add
push
cli
jae
int3
jle
cmpsb
jecxz
adc
icebp
jmp
push
xor
mov
fwait
mov
pop
jmp
divb
add
arpl
add
pop
jmp
cld
jnp
popf
inc
jbe
repnz
xchg
sti
mov
pop
cmpsb
or
pop
xor
aaa
call
and
inc
pop
xchg
dec
push
push
out
cmp
and
adc
fldt
and
icebp
xchg
jne
jmp
shrb
xor
jmp
add
mulb
push
jmp
adc
or
jne
cs
shr
sub
inc
loope
cmpsb
cld
out
jmp
dec
hlt
and
por
pusha
cs
xor
dec
mov
popa
adc
jmp
add
int3
jmp
pop
push
icebp
jae,pt
lods
xlat
fistl
inc
test
sbb
adc
stc
popl
jmp
negb
xchg
jmp
xor
shr
jmp
adc
mov
or
fdivr
cmp
pop
jmp
out
add
mov
or
repz
int
imul
out
jmp
jecxz
roll
adc
sub
push
hlt
in
movsb
fs
daa
test
hlt
add
mov
mov
jmp
jne
adc
sar
lods
mov
jmp
mov
fs
imul
hlt
dec
mov
mov
jmp
dec
or
and
xchg
cmp
aaa
mov
add
test
es
js
ret
icebp
mov
mov
add
ljmp
and
or
sbb
jmp
mov
enter
xor
aam
or
jmp
bnd
loopne
adc
out
jnp
ljmp
hlt
enter
or
jmp
adc
pop
loopne
jns
jmp
push
pop
push
jmp
bound
jb
xor
pop
mov
push
lret
gs
jmp
jnp
std
test
repz
ds
push
jmp
push
pushf
sub
mov
xchg
inc
push
inc
sub
test
rclb
dec
pusha
jb
jmp
imul
push
insl
testb
push
adc
rorl
or
sbb
aas
jmp
mov
f2xm1
jmp
jo
dec
xor
outsb
daa
outsb
and
aam
lahf
nop
clc
ret
xchg
inc
xchg
ja
outsb
mov
cmp
add
pop
adc
xchg
ret
loope,pt
mov
sub
sub
or
jmp
repz
xor
lods
in
stc
shrb
xor
repz
pop
in
jae
imul
pusha
int3
mov
and
psrad
flds
or
xlat
fisubrs
inc
jne
jmp
pop
subb
dec
aad
jmp
leave
gs
bound
push
into
ret
sbb
jmp
icebp
adc
dec
movsb
mov
mov
xor
xchg
lods
push
subl
push
xlat
sbb
lods
adc
fs
or
or
jmp
push
popa
or
pop
out
add
ja
xchg
mov
inc
xor
outsl
jmp
mov
mov
cmp
es
sbb
xchg
jp
cmp
fwait
and
jmp
dec
adc
xchg
mov
dec
neg
out
push
dec
fildll
scas
lods
ja
out
jae
mov
ss
mov
add
int
pop
jae
adc
das
inc
mov
jne
lea
pop
sub
xchg
jmp
cltd
adcb
fistps
scas
movsl
add
adc
dec
cmp
cmp
jmp
loop
xchg
push
push
add
xor
sbb
movsl
mov
pop
es
adc
dec
cmp
add
jmp
or
xor
pop
mov
pop
insb
dec
mov
mov
adc
jmp
jge
pop
shr
or
lods
mov
sbb
inc
das
jmp
mov
jns
out
pop
data16
lods
mov
or
mov
sub
xor
fnsave
and
out
mov
push
cmp
cld
pop
jl
and
push
vpshufhw
inc
push
jp
fisttpll
int
pop
sub
mov
jp
jne
sahf
jmp
jo
outsb
lahf
push
jbe
jmp
or
dec
dec
jmp
test
xor
sub
lea
xchg
out
xchg
add
stc
push
fs
add
cmp
out
and
jmp
enter
push
fcmovu
jmp
je
btc
dec
test
jmp
out
mov
lods
int3
pop
xor
add
xchg
cmp
push
cmp
push
repnz
sub
repz
daa
push
mov
sarb
fsubrl
mov
push
inc
addr16
hlt
jnp
bound
into
sub
add
sub
popa
lret
out
and
mov
lods
adc
ret
verw
aad
in
in
jno
sub
or
and
cmovg
lcall
or
mov
pusha
adc
jmp
cmc
cwtl
pop
cltd
ficomps
xchg
push
xchg
mov
jne
jl
lock
mov
stc
mov
or
out
fisubl
jmp
ret
in
push
jo
sub
mov
mov
add
add
dec
or
scas
call
repz
sbb
js
cmpsb
stos
push
ret
fstpl
pop
shlb
or
fisttps
inc
sub
adc
and
pop
mov
sbb
cltd
push
adc
gs
aas
mov
cmp
mov
jmp
add
xchg
js
push
int
pop
ret
sub
and
daa
pop
sub
aad
sbb
sub
sbb
cmp
or
jmp
mov
and
sub
cli
js
cmp
outsl
sarb
jns
jb
loopne
aam
ss
test
sub
jmp
hlt
dec
ret
inc
cld
mov
loopne
lret
andl
add
sbb
ret
pop
dec
inc
jl
xor
sub
iret
mov
jns
mov
and
call
lret
inc
mov
jp
mov
pop
push
mov
stos
mov
jle
pop
out
push
jmp
sub
xchg
jmp
dec
ja
test
xor
jl
aaa
outsb
jno
stos
xor
fucomip
xor
add
push
mov
sbb
aas
clc
int
lods
into
pop
pop
fisubrl
jmp
mov
je
jmp
xlat
push
jecxz
mov
movzbl
iret
sub
sub
sbb
outsl
adc
divb
mov
sub
leave
mov
cmp
jmp
mov
out
sub
je
push
mov
mov
fiaddl
push
popf
stos
push
jmp
ds
dec
dec
jmp
dec
lret
mov
pop
imul
mov
test
sbb
clc
sbb
stc
sub
mov
push
or
lock
dec
push
in
inc
or
ds
jns
lods
les
inc
daa
test
outsl
lods
mov
or
jno
sbb
jmp
push
imul
pop
dec
sub
cwtl
mov
sub
dec
jmp
adc
and
jmp
sti
nop
mov
jbe
push
sub
or
inc
popf
cmp
imul
mov
mov
rolb
imul
cmc
aad
adc
dec
jge
or
sbb
mov
hlt
int
loop
fiaddl
jns
push
cmc
iret
xlat
sub
add
inc
lods
out
sti
inc
mov
jmp
mov
jle
cwtl
mov
add
mov
jmp
call
xchg
mov
pop
frstor
mov
aas
xorl
mov
ror
pop
in
cmpsl
and
sahf
rcl
jmp
imul
inc
fldl
sbb
pop
mov
nop
pop
in
sub
ret
pop
mov
in
icebp
test
lods
bound
out
mov
dec
ret
inc
jmp
adc
xchg
scas
in
mov
call
inc
cmp
pushf
xor
push
adc
mov
adc
cli
fisttpl
jo
push
mov
outsb
mov
push
pop
mov
loopne
call
mov
loop
jne
js
push
add
and
adc
leave
or
xchg
inc
cmpsl
and
mov
pop
in
push
jmp
leave
bnd
jmp
cmp
lea
xchg
arpl
je
mov
mov
jae
or
testb
mov
mov
mov
decb
and
mov
fisttpl
mov
mov
dec
cltd
jmp
in
jo
mov
sub
xchg
or
jns
inc
inc
xchg
pop
testl
lea
aam
or
mov
pop
add
gs
jmp
sub
inc
rcrl
cmp
shll
mov
xor
inc
and
or
sbb
sub
leave
pcmpeqd
sbb
sbb
dec
popf
jmp
scas
lahf
pop
pop
out
data16
xor
sbb
dec
sbb
inc
mov
mov
imull
jecxz
sbb
or
add
sti
jmp
cmpsb
outsl
cmc
repnz
adc
insb
pop
fs
xor
sbb
jmp
push
fnstenv
jmp
mov
insl
in
jmp
mov
mov
enter
mov
push
push
dec
nop
daa
aas
stos
daa
ds
mov
lahf
jb
mov
push
shll
fs
lret
sub
add
and
cli
loopne
lret
mov
lods
mov
add
add
mov
inc
and
outsb
bound
xchg
or
adc
mov
push
std
out
pop
xor
mov
and
mov
xlat
mov
cmp
jmp
cmp
fwait
mov
aad
mov
icebp
jo
push
fsts
xchg
cld
push
pop
repz
mov
pushf
or
sbb
jg
adc
imul
add
mov
jmp
hlt
pop
aas
jge
jg
dec
les
andl
sti
sub
stos
fdivp
xor
and
xchg
or
sub
jmp
inc
test
loope
mov
jns
mov
adc
adcb
stos
in
ja
scas
and
inc
arpl
sub
outsb
add
jmp
push
test
dec
jmp
mov
stos
jp
pusha
jmp
out
imul
jmp
mov
cs
daa
int
scas
sub
icebp
roll
xchg
xchg
icebp
hlt
cmp
jmp
push
test
add
push
cmpsb
shrb
xor
pop
and
jns
ljmp
add
push
xor
fsubrp
sbb
pop
inc
push
fnstcw
cmp
pop
dec
lods
jmp
xor
add
sub
add
daa
jbe
add
jmp
push
sbb
addr16
sub
fmuls
sub
sub
or
movsb
jmp
sbb
add
push
out
jmp
xchg
inc
xchg
fistps
lret
xor
out
jle
cmp
jmp
lret
ja
xchg
pop
jg
jmp
pop
push
ret
cmpsl
pop
lds
lods
xchg
cmpsb
inc
inc
jp
inc
stos
jmp
pusha
adc
addr16
jmp
call
add
inc
cltd
and
and
cs
gs
into
nop
js
jmp
imul
xchg
push
cmp
push
pop
insl
div
jmp
sti
cs
pop
dec
cmp
cmp
xor
inc
call
ret
outsb
fwait
leave
imul
fcoms
jmp
xlat
inc
xchg
int
xor
pop
jo
pop
cld
add
jmp
add
lret
mov
jmp
inc
jb
jmp
push
fs
scas
ficoms
sub
and
clc
test
adc
cmp
add
shl
push
sub
cmc
outsl
cwtl
push
sbb
bndstx
fisttpll
pop
std
mov
jmp
push
outsb
adc
jmp
out
fmull
andb
rorb
fnstcw
pop
sbb
cmp
mov
in
mov
pop
push
fldt
aaa
ljmp
jle
jmp
mov
nopl
stos
jmp
fstpt
mov
out
fimuls
mov
xchg
js
jp
jmp
lods
jge
subl
insl
les
jge
pop
pop
scas
lret
push
jmp
mov
xchg
enter
iret
out
add
mov
leave
test
pusha
out
int
or
jnp
jmp
sbb
jmp
lods
idivb
mov
and
cmpb
movsb
loope
clc
daa
pop
jmp
jne
sub
lcall
jge
sub
push
jmp
aas
pop
adc
jb
xchg
add
jmp
or
lret
push
dec
jmp
add
loopne
mov
mov
int
mov
dec
fisubs
mov
mov
jmp
jns
push
add
sub
stos
in
popa
negb
and
jmp
and
xlat
xchg
pop
mov
add
mov
cmpsb
xor
ret
leave
stos
out
jmp
xchg
mov
cmp
xchg
lods
ljmp
imul
shll
fucomip
stc
or
inc
cmp
mov
adc
jmp
sbbl
sbb
out
and
or
cmp
jmp
inc
mov
out
sahf
or
repnz
insb
push
jmp
icebp
ficomps
dec
jmp
cwtl
jb
adcl
xchg
jmp
sbb
pop
add
jo
jb
push
xor
call
insb
mov
adc
inc
daa
lret
sbb
sti
cmpl
in
adc
xchg
cmp
xchg
repz
faddl
hlt
adc
fldcw
mov
addb
aam
jg
les
cmp
mov
jmp
arpl
ficoms
mov
sub
orl
test
mov
shrb
in
or
gs
jmp
sub
dec
mov
lods
push
cmp
push
mov
lea
ja
sub
sbb
ss
loopne
push
stos
sbb
sti
jo
xchg
gs
sub
jge
mov
inc
jmp
in
xchg
jmp
pushf
xor
jp
mov
adc
out
outsl
sbb
push
lods
jmp
jnp
lcall
adc
xor
adc
stos
repz
int
jle
sub
fs
adc
test
scas
gs
push
notl
sarl
xchg
mov
negb
jmp
lcall
jmp
push
hlt
icebp
jle
pop
jmp
add
xor
in
clc
mov
test
cwtl
jmp
adc
push
xchg
scas
mov
lods
and
movsb
xor
xchg
jmp
mov
mov
xor
ds
cmpb
jno
push
xchg
jmp
call
imul
push
xchg
subl
mov
jl
shr
ds
xchg
xor
sbb
pop
fcmovnu
lods
jno
cmpsl
adc
mov
pop
outsb
dec
dec
stos
leave
fs
sub
inc
sbb
in
int
and
lret
lret
mov
test
jle
push
or
nop
push
jbe
mov
add
mov
jecxz,pt
mov
dec
dec
jmp
jge
mov
repz
mov
sbb
outsb
push
mov
push
andl
lods
xor
leave
cmpsl
lods
loop
popf
or
mov
in
roll
mov
adc
jmp
inc
cld
mov
lods
add
sub
fs
lods
pop
fdivrl
daa
dec
mov
pop
jmp
mov
add
jmp
in
fsubs
jnp
lock
mov
mov
jmp
add
dec
jle
xor
shll
add
sub
lcall
lret
cmp
pop
in
arpl
mov
mov
jmp
loop
inc
stos
call
imul
sub
out
jmp
fndisi(8087
jle
cmp
sub
sbbl
mov
pop
lret
sub
mulb
in
cld
jmp
test
pop
add
lcall
out
mov
push
imulb
dec
lahf
mov
shr
test
cmp
popa
push
cmp
jo
push
add
mov
and
jmp
xchg
es
cmp
jmp
int
sub
dec
sub
daa
lret
clc
inc
sbb
mov
lods
stos
mov
ror
mov
ss
insb
stc
pop
mov
and
add
pop
and
mov
jp
inc
jo
mov
dec
imul
or
stos
or
xchg
jmp
push
popa
repnz
rolb
test
mov
loop
jmp
xchg
cs
xor
data16
shrl
shl
pop
jmp
cli
add
mov
adc
lret
cmp
jmp
loop
leave
bnd
jmp
or
xchg
stos
movsb
es
js
push
imul
dec
enter
and
sbb
lret
jmp
ss
jl
insl
scas
jno
into
fwait
repz
sar
das
inc
jmp
mul
gs
mov
movsl
add
jmp
es
out
daa
insb
jmp
push
aad
jmp
jbe
add
pop
outsb
movsb
jecxz
test
cmpsb
out
in
mov
pop
jp
in
push
lods
cmp
dec
inc
fnstsw
jmp
mov
jle
jmp
les
jmp
repz
xchg
xor
jmp
sbb
mov
outsb
adc
pop
mov
mov
xchg
stos
mov
stos
out
mov
icebp
pushf
xchg
daa
and
or
and
jns
imul
mov
test
sbb
xchg
stos
cld
xor
jmp
fcoml
jne
nop
push
jmp
jmp
sahf
inc
jmp
pop
push
pop
mov
mov
or
xchg
mov
jmp
push
inc
iret
shr
cli
movsl
decb
sub
push
out
xchg
jmp
out
sub
pop
stos
jmp
xor
stc
xlat
repnz
stos
xchg
sti
add
cwtl
add
lods
movsb
jmp
pop
cmp
inc
popaw
xchg
outsb
in
xchg
subl
mov
ljmp
cmp
push
in
adc
pop
mov
lds
cli
jmp
adc
xchg
mov
mov
in
repnz
mov
ljmp
or
arpl
out
inc
out
ret
xor
jmp
mov
fwait
mull
sbb
out
sbb
aad
jmp
jp
pop
insl
pop
jno
lods
dec
bound
jle
out
sti
jnp
sub
iret
adc
push
or
mov
lcall
and
xor
fists
mov
adc
and
push
jmp
daa
mov
gs
pop
nop
adc
mov
js
jge
insl
test
arpl
dec
in
sub
stos
push
insb
ss
sbb
xor
test
aad
cwtl
ret
sbb
jmp
daa
xchg
ss
out
jmp
ret
inc
inc
mov
arpl
and
inc
adc
cli
cmc
adc
cmp
lods
xlat
mov
push
test
pop
mov
inc
sbb
mov
mov
jmp
mov
push
jmp
push
fnstcw
jmp
sbb
mov
in
scas
cwtl
sti
in
stos
jns
cmpsl
dec
and
insl
sbb
jmp
cwtl
and
popa
pop
cmp
jmp
push
push
pop
or
mov
or
sub
add
push
faddl
sub
mov
push
fstpt
pushf
jmp
inc
and
xor
jp
xor
in
or
xor
pop
test
pop
mov
jmp
loope
jnp
cmp
lods
rorb
cwtl
fnstenv
adc
xlat
imul
mov
xorl
dec
jmp
sbb
sbb
mov
sti
lahf
inc
push
movsl
loope
jmp
cmp
das
pop
dec
jne
cmp
mov
dec
sub
xchg
add
and
jmp
fs
pushf
test
clc
enter
cmp
mov
ret
por
dec
or
xchg
aas
cmpsl
movsl
mov
imul
testb
sbb
cld
push
pop
mov
sbb
cmpb
lods
test
pop
cmp
pop
ljmp
add
notb
inc
cltd
and
mov
and
push
or
rcrb
lods
wrmsr
jmp
dec
iret
fildl
js
jmp
pusha
out
hlt
jp
aaa
ljmp
sbb
leave
incl
mov
push
outsb
ret
loope
jmp
jmp
xlat
or
incl
nop
or
cld
sub
outsb
cmc
pop
insl
repz
ret
push
fildll
fxch
xchg
jmp
and
pop
xor
xor
into
sbb
mov
jecxz
push
cmp
jmp
push
icebp
repnz
xor
dec
std
lods
sub
daa
adc
xchg
out
mov
cli
mov
test
add
rorl
cld
jmp
data16
call
jo
pop
xchg
cwtl
out
cmc
call
jnp
lea
lds
jmp
int3
xchg
mov
sub
fmull
xchg
mov
mov
ja
jmp
pop
push
into
xchg
xchg
lods
lods
outsl
cmp
adc
jmp
pop
jo
jg
aaa
sbb
in
mov
push
movsl
cli
loop
adc
dec
addr16
popa
jae
push
jmp
sbb
cmpsl
ss
lods
inc
stos
out
movsl
addb
dec
enter
dec
dec
mov
mov
push
push
lods
shl
fsubr
and
int3
mov
and
add
icebp
cmpsb
jmp
sub
and
in
out
test
and
mov
or
repnz
adcl
jno
out
or
and
cmp
or
pop
leave
cld
mov
int
sbb
scas
mov
dec
adc
jno
adc
jmp
jbe
rcrl
leave
lods
cmc
cmp
or
outsl
js
push
sub
jmp
dec
sub
mov
aam
lahf
mov
inc
sub
mov
divb
daa
aaa
jmp
jnp
push
jmp
fcompl
lds
push
testl
lds
mov
adc
dec
jne
add
jmp
sbb
jmp
mov
mov
sub
test
add
jmp
mov
scas
xchg
scas
or
bound
mov
lods
pop
pop
and
xchg
sub
int
dec
sbb
push
and
cmpl
fldcw
cmp
aam
and
mov
mov
mov
in
push
cmp
je
xor
or
jmp
fcomps
shlb
in
jmp
pop
scas
mov
jmp
sub
insl
sbb
and
clc
test
push
lret
jnp
sub
in
mov
mov
aas
pop
frstor
pop
jmp
in
push
adc
pop
sub
xchg
mov
and
jmp
lahf
mov
mov
loop
cmp
mov
lds
cs
xorb
lcall
jmp
jle
adc
xor
shl
int3
inc
std
cmp
mov
fsubr
push
and
cmpsl
xchg
jmp
mov
aad
xor
mov
aas
pop
cld
out
in
mov
or
mov
mov
addr16
cltd
jp
or
aaa
mov
insl
repnz
lods
mov
test
pop
jmp
cs
jo
xchg
pusha
add
pop
jg
das
push
bound
enter
daa
cmp
loope
scas
mov
jbe
jb
iret
jmp
mov
rclb
lds
or
enter
jmp
xchg
push
xor
sbbb
or
push
fstpl
mov
add
test
aad
ret
mov
pop
pop
adc
daa
adc
fucomip
rol
xchg
insb
ljmp
sbb
xor
jo
addr16
pushf
mov
rolb
fistpl
loop
jae
bound
jmp
adc
pushf
jmp
pop
xchg
and
xchg
mov
es
scas
push
cli
xchg
and
pusha
imul
sub
ret
lds
arpl
push
test
mov
sbb
cs
imul
sbb
in
cmp
or
adc
dec
mov
adc
inc
sub
js
cmc
xchg
push
hlt
mov
jmp
data16
inc
aaa
out
dec
in
fistps
cmp
jmp
sub
jmp
pop
pusha
jl
dec
dec
xchg
lods
test
cwtl
pop
bound
push
repnz
jg
sbb
imulb
dec
call
frstor
gs
lret
lahf
loope,pt
syscall
mov
jmp
mov
xor
arpl
repnz
jmp
add
lea
jmp
iret
xchg
pop
jle
scas
jg
cltd
sbb
outsl
jmp
add
subl
sub
test
jmp
adc
dec
dec
jmp
aas
pop
mov
jmp
xchg
ret
mov
jmp
fistps
sbb
xchg
jmp
aam
sub
cmpsb
xor
scas
pushf
pop
pop
mulps
fdivrl
rcrl
std
shr
testl
clc
jmp
pop
mov
cmp
imul
test
scas
xor
cmp
pop
jns
loopne
sbb
push
or
outsl
ljmp
in
pop
jmp
fsubrl
lds
loopne
dec
dec
sub
pop
imul
cld
mov
pushf
in
lods
jns
lahf
pop
cs
stos
dec
jmp
repz
jp
test
mov
jmp
sahf
cmpsb
jg
es
xor
push
lods
sbb
xorl
or
sub
daa
lods
scas
scas
in
mov
or
jmp
cmc
ror
rcll
mov
addr16
mov
loop
imul
sub
pop
jo
adc
jmp
mov
and
scas
pushf
jmp
xchg
test
mov
pop
mov
mov
jmp
ficompl
popf
fldcw
xor
cltd
jl
clc
sub
and
mov
and
por
mov
fsubrp
lods
xor
imul
fldcw
cmpsb
cwtl
cmp
leave
or
dec
jae
push
add
jmp
bound
and
orl
dec
jl
xchg
jmp
jge
cmp
mov
jp
push
stos
sti
adc
cltd
mov
aad
sbb
cmp
and
inc
add
adc
jmp
pop
cli
std
ljmp
sti
dec
xor
outsb
je
mov
sub
mov
jmp
sub
out
test
push
sarb
mov
add
fldl
mov
xchg
mov
xor
ja
jnp
imul
pop
sbb
cmp
jp
movsl
mov
mov
jmp
cmpsb
js
enter
jb
iret
xchg
fisubrs
sbb
stos
and
outsb
push
daa
fwait
jno
aam
testl
in
lahf
xor
pushf
jmp
daa
jbe
mov
jmp
cwtl
int
dec
mov
fnstcw
outsb
cs
xor
test
mov
jmp
jle
fisubrl
ja
adc
add
or
cmpsb
aaa
adc
imul
jbe
mov
sbb
das
movsl
imul
or
mov
jmp
mov
push
pop
or
pop
xlat
leave
sub
mov
fidivrl
push
cs
popa
pop
lcall
dec
sub
xchg
jge
sar
test
outsb
hlt
adc
sahf
addr16
jbe
jno
jmp
xchg
push
dec
pop
pop
mov
sub
jmp
in
aam
ja
or
add
mov
mov
dec
adc
jmp
pusha
sarb
popf
imul
mov
in
jmp
test
adc
movsb
scas
lods
pop
adc
mov
sub
stos
mov
repnz
or
xchg
scas
and
roll
filds
mov
fsubs
mov
push
rorb
dec
pop
cmp
push
mov
jp
fisubrl
fcomip
les
clc
scas
add
call
cmp
cmp
daa
cmp
cmp
pop
enter
out
bound
fstpt
add
outsb
jmp
add
inc
jmp
movsb
ffreep
sahf
adc
cmpsl
or
or
xchg
jnp
out
pop
mov
xchg
pop
test
stos
cmpsb
std
es
push
bound
push
call
push
xchg
pop
inc
faddl
loope
xor
jmp
inc
test
sub
jae
scas
jmp
mov
sub
test
jnp
push
vpmulhuw
sbb
cmc
pop
inc
adc
mov
stos
inc
mov
aaa
push
jmp
std
mov
xchg
fstpl
or
testl
movsb
hlt
sub
sti
cmp
stos
stos
jmp
push
xchg
mov
jo
aas
mov
fdivrl
xchg
push
sub
jmp
xchg
addr16
adc
jg
scas
fucomp
fsubrl
imul
fsubrp
jno
or
mov
inc
outsb
test
inc
aam
mov
lods
mov
push
mov
jg
cmp
ret
shrl
mov
lods
inc
adc
lcall
sub
adc
xchg
sbb
jb
bound
push
pop
aas
cmp
mov
cmp
cld
int
cmp
scas
pop
cs
jmp
xchg
jmp
ja
pop
enter
pop
pop
movsb
xchg
test
and
mov
mov
mov
mov
lret
fdivrs
out
insb
shll
sub
xchg
sti
test
or
push
sub
lea
jns
pop
mov
and
arpl
inc
sub
xor
dec
fwait
sti
mov
xchg
xor
dec
mov
and
jmp
push
dec
lea
lcall
mov
inc
das
jmp
mov
pop
add
lret
add
and
cs
mov
adcb
xchg
mov
push
push
shrb
dec
inc
ss
jmp
add
int
fsubrs
and
in
jo
data16
push
out
stos
das
or
sub
mov
mov
call
or
xchg
jmp
sbbl
jp
sub
sub
rcr
sub
pushf
pop
stc
enter
roll
pop
xchg
add
push
data16
stc
pushf
mov
aaa
xchg
or
jno
inc
test
or
inc
in
ret
lods
jns
push
fistps
add
movsl
into
jmp
xor
adc
pop
xor
adcb
mov
test
and
subl
insb
sahf
lods
jp
xor
jge
mov
jecxz
pop
shr
pop
mov
sbb
mov
push
call
movsl
pop
mov
ja
and
pop
mov
outsb
xchg
sub
aam
inc
lods
fstps
in
and
ss
sti
adc
cmp
cmp
cs
jns
and
insl
sub
das
mov
lods
sbb
test
sub
cmpsb
aas
push
sub
jmp
and
jle
sbbl
and
sbb
movsl
adc
leave
sahf
pop
std
rorl
lods
shr
cmp
mov
mov
xchg
iret
mov
or
add
daa
pop
pop
les
das
cmpsl
or
inc
mov
iret
lods
mov
stc
test
sbb
mov
jmp
jnp
cld
lea
fucomp
and
jb
dec
fsubrl
jmp
out
adc
pop
pusha
jae
sub
jecxz
ljmp
cltd
xchg
and
cmc
push
into
imul
repnz
mov
add
arpl
lods
mov
inc
mov
or
dec
lock
bound
and
cmp
jmp
xchg
adc
mov
in
add
xor
shll
dec
lods
lock
jmp
sbb
data16
mov
sub
out
mov
mov
aas
repz
orb
pop
and
jmp
hlt
rcll
jmp
mov
mov
sbb
pop
lock
and
sub
jmp
rcll
outsl
mov
icebp
lcall
inc
xchg
jmp
into
mov
lods
int
mov
leave
mov
dec
adc
jmp
dec
add
push
inc
test
pop
sub
dec
push
sub
push
inc
xor
adc
jmp
jmp
mov
jmp
xchg
into
jns,pn
ds
jmp
dec
faddp
push
push
std
adc
stc
ljmp
jle
lods
loope
mov
cmp
add
imul
fsubrp
push
jge
pop
sub
jmp
loope
sbb
int
jmp
adc
test
xor
cltd
inc
cli
sbbb
xor
ficoml
pushf
mov
push
push
jmp
mov
daa
dec
fsubs
test
push
jns
out
mov
xchg
jmp
insl
sub
push
mov
decb
cmc
neg
int3
stos
push
scas
lods
nopl
mov
mov
jmp
inc
std
pop
push
mov
inc
push
stc
or
repnz
pop
loop
sbb
es
enter
push
int3
mov
in
adc
int
jmp
dec
mov
sbb
xchg
adc
jp
dec
cmpsl
xchg
sub
scas
pushf
and
test
cmp
aas
repnz
add
jmp
outsl
pushf
ss
xor
jmp
daa
jmp
sbb
sbb
sbb
push
xor
mov
or
or
jmp
inc
jmp
sbb
pop
jmp
movsl
hlt
popf
pop
pop
notb
sbbl
imul
push
push
ror
sub
mov
leave
mov
jb
pusha
jmp
pop
jge
pop
cld
mov
xchg
sti
outsb
jbe
lock
dec
iret
and
and
jmp
jo
xor
xor
mov
sub
or
lods
mov
add
aam
push
or
dec
jmp
out
lods
add
insb
xchg
adc
rcrb
insl
mov
in
ficoms
jge
sbb
je
mov
inc
jmp
nop
jnp
mov
in
adc
mov
add
rcll
jmp
insb
and
int3
pop
mov
lock
js
jmp
sub
pusha
dec
sahf
lcall
pop
roll
jmp
sub
xchg
loop
mov
jmp
leave
or
je
ljmp
shll
xchg
sub
nop
fucomp
mov
aam
lods
jae
xchg
add
test
or
pop
popa
call
dec
push
push
sub
outsb
pop
stos
inc
and
dec
xorl
fmull
jmp
dec
push
sub
and
jmp
cs
adcl
push
push
inc
test
lods
xchg
dec
push
clc
lods
mov
mull
sub
inc
jmp
ds
mov
gs
xor
push
psubq
das
jmp
jecxz
sbb
jmp
jns
or
xchg
movsb
cmp
fisubrl
fbld
inc
fs
repnz
push
jmp
daa
in
jle
jmp
mov
sbb
dec
add
jecxz
mov
out
jmp
subb
mov
jmp
and
fcoml
pop
in
fnstsw
sub
cltd
fs
lods
sub
mov
loop
push
mov
push
jo
fldt
cmc
jno
not
out
dec
jmp
imull
mov
enter
in
scas
fsubrs
cs
mov
scas
lret
xchg
scas
loopne
cmp
jmp
repnz
lock
arpl
xchg
jl
mov
sub
sbb
cs
scas
xchg
mov
mov
fwait
add
add
mov
ss
mov
mov
out
lcall
xor
pop
xchg
push
jmp
movsl
popf
shr
adc
jp
je
out
sub
mov
adc
dec
xchg
jmp
mov
mov
jmp
aad
in
mov
jmp
insb
sbb
jno
dec
push
jmp
cmpb
out
cmpsb
sub
test
pop
inc
jmp
dec
pop
add
inc
adc
movsb
mov
jnp
xchg
les
jbe
aam
fistl
mov
lret
pop
sub
jp
xor
sub
daa
jmp
fisttpll
imul
xchg
mov
int3
repz
mov
pop
add
int
push
cwtl
fiaddl
bnd
inc
xor
jb
jle
sti
mov
std
movups
fnstenv
leave
cmpsb
cs
dec
and
int
je
aad
and
sbb
cmp
push
les
cs
loop
jmp
sbb
fcompl
jmp
cmpsl
js
pop
sub
add
add
shlb
outsb
cmp
loop
frstor
jmp
mov
jmp
pop
fsqrt
idivl
and
pop
mov
xor
imul
and
js
aas
mov
or
mov
ds
in
dec
xchg
popa
sbb
jne
push
sub
hlt
or
pop
jmp
inc
mov
andl
jmp
pop
mov
inc
push
icebp
int3
es
add
sarb
loop
jge
cli
mov
cmp
push
sbb
jmp
mov
dec
out
mov
sub
pop
mov
sub
shrb
cmpsl
dec
mov
aad
cltd
sarl
sbb
out
fstl
xchg
push
lcall
mov
add
xor
jmp
notl
cmpsl
inc
sub
jmp
test
inc
xor
mov
ja
dec
xchg
daa
push
fsubrp
repnz
fildll
sub
mov
xor
int3
stc
fwait
xchg
jmp
ds
mov
fisubrl
dec
jmp
es
test
dec
into
lods
jmp
inc
sbb
mov
dec
fsubrs
xchg
jb
sub
jmp
cmc
mov
jmp
mov
sbb
out
sbb
je
xchg
mov
out
jmp
ljmp
sub
ret
jmp
adc
mov
and
add
jecxz
jmp
dec
jmp
in
pop
sub
sub
into
jmp
xor
test
adc
in
or
xchg
ret
sub
cld
lods
cmp
jns
ds
adc
leave
sbb
hlt
dec
mov
pop
mov
scas
jge
jmp
xorl
jmp
cmc
in
xchg
or
jmp
mov
daa
outsb
arpl
jo
aaa
jmp
scas
inc
ja
xchg
sub
xlat
popf
sbb
shrl
or
aas
mov
push
inc
and
cmp
jmp
mov
shl
sbbb
cmpsl
pop
popf
clc
jmp
jmp
in
lods
push
and
fwait
mov
testl
xchg
aas
sbb
loop
gs
movsb
lods
call
rcrl
jmp
icebp
sbb
and
jp
pop
push
hlt
fiaddl
aaa
sub
sbb
cmp
cli
cmp
mov
mov
insb
xchg
test
fdivs
sub
jmp
repnz
std
or
pushf
adc
xor
mov
sbbb
jmp
cmovnp
dec
sbb
imul
pop
bound
sub
jmp
icebp
rol
outsl
xor
jo
and
and
stc
aas
jmp
xchg
jo
mov
jns
xchg
push
mov
lods
mov
cli
fsubr
cmc
mov
adc
xchg
scas
sub
mov
fs
mov
dec
pop
lods
not
inc
jg
xor
and
jmp
addb
inc
sti
inc
xor
xor
jno
test
jae
jns
xor
leave
mov
cmpl
stos
daa
jne
mov
je
inc
inc
jae
in
push
fbstp
shrl
aaa
jmp
mov
popf
lea
mov
sub
mov
cmp
sub
sbb
sbb
aas
int3
jmp
push
push
add
repnz
stos
cli
sbb
add
and
mov
push
jmp
mov
movsl
repnz
xchg
inc
popa
ljmp
jmp
jl
cmpsl
cmp
xchg
fldpi
mov
test
mov
das
and
les
inc
jmp
fwait
sbb
pop
xchg
mov
fadd
mov
pop
lret
jns
push
sahf
test
mov
lods
jmp
cmp
jae
test
aad
and
xlat
out
aam
or
xor
cmp
shrl
xchg
insl
pop
jmp
fistpll
pop
jecxz
jmp
and
jmp
sti
pusha
jne
xor
movsb
jmp
loopne
lahf
leave
xlat
dec
dec
jmp
cmp
jb
lea
lret
lods
and
sbb
or
jmp
adc
mov
sub
pusha
ss
mov
enter
ret
mov
jae
aad
hlt
int
or
ljmp
je
aam
popf
mov
into
push
jmp
cmpl
add
addr16
data16
ja
jb
lea
jmp
outsl
or
test
dec
jmp
xchg
add
lock
jp
push
std
stc
push
jmp
jle
and
or
pop
pop
ret
pop
test
into
jmp
cmpsb
das
imul
idivb
xor
test
and
out
enter
xchg
ret
mov
lret
xchg
jmp
mov
pop
dec
jmp
or
dec
inc
or
jmp
push
int
jge
mov
add
bound
mov
inc
mov
into
test
mov
xor
jae
jb
test
or
test
jp
out
adc
ss
push
jmp
insb
lods
sub
notl
jmp
or
cmp
out
jmp
jae
sub
jmp
xor
sbb
sub
incb
sahf
sub
rclb
imul
and
jmp
and
sub
mov
dec
push
hlt
scas
popa
jnp
sub
cld
xchg
cwtl
out
out
jmp
push
and
sub
rorl
mov
fucomp
jmp
mov
stc
jmp
loope
fiaddl
cltd
mov
sub
cmp
mov
jns
shl
lods
stos
and
ljmp
dec
pop
xor
xor
xor
jmp
outsl
insl
iret
into
shrb
mov
insl
pusha
pushl
pop
jmp
or
lods
adc
and
loop
sub
in
push
ret
bound
sti
cmp
lods
inc
idiv
clc
je
repz
jmp
jno
sbb
mov
lods
dec
mov
mov
lret
fsubr
lods
scas
fcom
out
hlt
cld
xchg
jmp
jp
fimuls
inc
cmpsb
and
sub
loopne
or
outsb
stc
sub
ret
out
xchg
jle
js
stos
in
lret
mov
pop
lods
out
scas
mov
push
xor
dec
dec
nop
ss
data16
sub
rcr
stc
and
pushf
int
roll
out
mov
enter
or
and
jmp
inc
loopne
pop
dec
ja
jmp
and
mov
jmp
mov
mov
inc
and
ret
in
lods
xlat
repz
loop
pop
add
jo
jmp
sbbb
shr
subl
stos
pushl
add
bound
xchg
add
push
outsb
push
js
xor
push
aad
and
push
std
sbb
jmp
add
adc
test
stos
push
lods
inc
fsubr
popf
cld
mov
jmp
pop
mov
sahf
jmp
inc
loope
out
popf
hlt
outsb
aad
mov
inc
mov
xchg
dec
xchg
xchg
mov
mov
pusha
sub
leave
scas
nop
mov
mov
repz
std
adc
jmp
add
adc
sbb
testl
bnd
out
jmp
dec
jmp
inc
sarb
push
mov
fdivp
fldenv
xor
xchg
inc
loop
imul
mov
dec
jmp
mov
xchg
fldpi
in
jno
dec
jnp
notb
scas
stc
or
cwtl
cmp
dec
scas
aam
mov
in
and
lods
sti
sub
mov
das
and
popf
jmp
lret
imul
and
pushf
sub
adc
xorl
jmp
sbb
and
jmp
mov
xor
xor
jmp
test
bound
pushf
js
nop
inc
lcall
sti
jmp
lods
adc
jmp
test
repz
ret
adc
jmp
or
outsb
bound
pop
jmp
add
dec
testb
ja
in
pop
xchg
loope
push
movsb
jmp
pop
inc
push
mov
pop
shrb
fs
push
not
or
aam
jmp
loopne
lods
mov
dec
sub
mov
cld
or
dec
daa
dec
out
std
mov
ss
xchg
lods
adc
ffree
movntps
jmp
cmp
xchg
jmp
cmpsl
inc
lods
setle
ja
xor
adc
movsl
jmp
repz
fcompl
adc
and
jbe
xchg
fisttpl
adc
jmp
sbb
mov
mov
adc
nop
inc
repnz
pop
sbb
mov
or
jmp
mov
xor
jmp
dec
addr16
or
lds
xlat
and
es
fwait
mov
stos
stos
sub
or
and
das
lods
or
and
in
pop
fwait
mov
sub
jmp
fnstenv
mov
bound
enter
mov
lds
xchg
wrmsr
mov
daa
xchg
sub
or
lods
pop
push
fsubl
call
loope
imul
jmp
pop
push
stos
fsubr
xor
jmp
rcrb
and
pop
popa
xchg
outsl
add
adc
sub
add
dec
sbb
mov
stos
ja
jl
sub
adc
pop
iret
shlb
pop
imul
dec
daa
std
sbb
das
jl
sbb
sub
lods
outsb
js
jle
aad
dec
xchg
add
andb
inc
sub
push
jp
mov
outsl
movsb
cmpsb
cld
icebp
inc
imul
mov
cmpsl
cmp
add
jmp
insl
adc
cmp
xchg
pop
pop
lds
sbb
add
mov
or
pop
sbb
js
sbb
dec
jmp
mov
push
sub
and
add
into
in
sbb
adc
push
nop
xor
inc
xchg
dec
mov
orb
adc
aas
sub
jo
into
jmp
xor
push
dec
sub
jmpw
fmull
adc
jo
xchg
mov
sti
push
imul
mov
sbb
xchg
jmp
mov
lods
test
cmp
jo
jmp
lahf
jbe
xlat
lret
jmp
and
add
or
sub
test
sub
push
sub
repnz
rcr
int3
fs
popf
jmp
xor
je
push
mov
test
xor
not
leave
sbb
mov
jb
repz
fiaddl
xchg
jns
jge
xlat
add
test
push
scas
into
call
mov
dec
shll
imull
psllw
das
jecxz
outsl
sbb
pop
inc
fs
pop
pushf
sbb
jge
aam
bound
mov
or
mov
jns
pop
in
ja
xlat
sub
or
subl
daa
jl
lods
les
or
sub
lods
das
daa
xlat
loop
pop
ds
cld
mov
or
fwait
inc
loope
adc
or
sub
xlat
and
dec
mov
outsb
gs
sahf
jo
js
mov
ret
jmp
fwait
mov
sti
leave
xor
cltd
mov
xchg
ret
pop
loopne
adc
jno
lea
addb
mov
repz
mov
jmp
pop
ret
aaa
enter
and
jae
cmp
push
cli
or
lods
inc
jns
cmp
sbb
dec
imulb
pushf
sub
sub
movsb
or
cltd
xchg
outsl
out
sbb
in
mov
jmp
jg
fimull
outsb
rclb
es
mov
mov
or
jb
int3
loopne
sahf
sbb
xchg
lods
mov
ss
lods
out
xor
push
mov
xor
imul
int3
jb
mov
jmp
data16
test
dec
test
cmc
push
push
lods
aad
ss
maxps
lods
cli
mov
cmc
rcll
mov
jmp
hlt
cwtl
xor
jmp
insb
cli
test
adc
sub
mov
mov
sti
es
jmp
sbb
into
pop
ja
jmp
cmpsb
push
xchg
xchg
testl
jns
inc
adc
mov
push
jmp
push
pushf
ds
jmp
fstl
mov
subb
jo
jp
push
sti
jb
jl
outsb
dec
lods
aad
fpatan
xor
push
add
stos
in
or
adc
dec
jno
mov
cmp
cmp
xlat
pop
or
mov
sub
or
sbb
adc
pop
and
jge
mov
inc
jmp
icebp
add
cmpsl
faddl
or
outsb
dec
shr
fdivr
imul
xor
push
in
shlb
outsb
clc
mov
ret
jg
push
mov
sbb
pop
out
sub
popa
ljmp
pusha
fistpll
lret
mov
lahf
pop
cmc
dec
insl
nop
clc
js
or
fistpl
jmp
mov
add
xor
test
jmp
dec
xorps
mov
sbb
lds
imul
push
jno
jbe
enter
pushf
out
dec
jo
pop
sub
inc
push
mov
jne
xor
sub
ja
inc
lods
insl
mov
jns
mov
scas
cmpsb
xor
arpl
gs
mov
jmp
xor
mov
lods
into
repz
filds
lods
jnp
clc
out
mov
xchg
imul
cmpsl
repz
jae
xchg
enter
jmp
divl
adc
sub
xor
lea
mov
sub
int3
mov
add
inc
bound
pop
pop
lods
jmp
call
sub
and
sar
arpl
dec
push
sarb
jmp
push
imul
add
adc
js
jecxz
lods
es
popa
fsubrl
repz
and
mov
sbb
pop
jmp
cmp
add
xlat
pop
xchg
mov
outsb
cmpsb
in
rcl
jmp
daa
or
subl
pushl
xor
fwait
cli
imul
mov
int
cmp
iret
push
sub
cli
stos
shr
jle
leave
or
subl
push
or
loopne
popa
jmp
push
bound
mov
mov
ljmp
adc
stc
out
xchg
sarb
add
or
and
jno
mov
subl
icebp
cmp
jb
stc
jmp
pop
ss
add
lods
mov
daa
sub
jmp
xor
dec
jmp
leave
stos
int
rcr
sub
inc
adc
push
mov
jle
sub
sahf
por
bound
xchg
lods
mov
mov
pop
mov
outsl
pop
jnp
lods
or
pop
nop
into
hlt
dec
or
sub
movsb
arpl
jb
cmp
sbb
dec
cmc
xchg
or
test
push
lahf
dec
js
clc
test
jmp
mov
adc
int
cmpsb
mov
jecxz
push
mov
ljmp
in
pop
mov
rcl
mov
cmp
xchg
cmpsl
cmc
stos
sub
xchg
cwtl
cmp
adc
sbb
xchg
lock
scas
sbb
push
lret
dec
sub
jmp
push
inc
mov
mov
jnp
or
pusha
fistpl
jecxz
jo
sbb
push
out
lret
test
mov
jne
ficoml
jnp
jb
aad
sub
test
mov
xchg
dec
jmp
aad
test
jg
jmp
loope
xlat
pop
loopne
push
mov
xchg
lods
or
out
sbb
subb
or
push
test
and
inc
jmp
imul
out
pop
or
je
out
mov
mov
bound
dec
jo
jmp
pop
aad
jle
push
lcall
repz
lret
mov
jmp
fsts
jb
dec
ljmp
scas
cld
sub
outsb
enter
test
xor
in
scas
sbb
add
sub
icebp
shlb
sub
cmp
subl
shll
fildll
inc
pop
cmp
movsb
adc
dec
pop
mov
std
xchg
fistps
or
push
jmp
sub
jmp
pop
cs
sub
xchg
jmp
dec
mov
jmp
adc
xchg
rcll
jle
enter
jge
test
jno
ss
jmp
jae
pop
or
add
lods
push
or
sbb
pop
xchg
sbb
and
mov
cltd
inc
inc
sub
xor
mov
lods
imul
and
dec
adc
jbe
outsb
jmp
not
push
int
lds
inc
mov
mov
out
mov
in
test
mov
push
jmp
gs
push
adc
xor
loopne
cmpsb
enter
mov
mov
cmc
jmp
std
mov
cld
lods
lods
addr16
lock
stos
or
enter
clc
mov
bnd
movb
mov
pop
jmp
or
cltd
rol
int
bound
mov
sbb
jne
and
and
sbb
ror
dec
pop
jmp
dec
dec
das
dec
out
aas
scas
xor
inc
lods
fdivl
outsl
mov
and
and
xor
xlat
jp
js
imul
adc
pop
sti
pop
cli
sbb
sub
jmp
out
jecxz
dec
xor
test
and
fsubr
xchg
mov
mov
mov
mov
cmp
dec
jmp
test
mov
dec
fsts
jmp
xor
and
rolb
jp
sbb
outsb
ret
jmp
fidivl
sahf
mov
pop
lea
jmp
cli
insl
dec
mov
outsl
ficoml
test
test
xor
fdivrs
ror
jmp
sbb
adc
jl
fadds
imul
outsb
sub
push
xor
xchg
push
cmp
daa
pop
xor
cltd
jb
and
xor
jae
fldt
imul
or
pop
jmp
or
xlat
movsl
xchg
sub
jmp
dec
aaa
xor
neg
sbb
lods
aam
pop
loop
xchg
leave
jmp
test
hlt
mov
jmp
inc
into
or
pop
inc
push
inc
testl
jmp
mov
paddd
rolb
add
and
shrl
sub
adc
sbb
xor
shll
jmp
dec
cmp
jmp
fmuls
push
sub
popf
adc
inc
or
ds
mov
scas
mov
subl
cmp
lods
pop
aaa
arpl
lret
into
xor
out
and
ljmp
scas
xchg
mov
int
aas
dec
imul
push
dec
xor
cmp
or
outsl
je
push
lods
jmp
push
out
add
and
or
in
adc
into
test
adc
mov
lods
add
cmpsl
cmc
int
sbb
shr
int3
sahf
mov
jmp
cli
add
add
cwtl
mov
and
fidivrs
mov
pop
jmp
in
sbb
mov
sbb
les
cmp
insl
jmp
add
daa
fstps
nop
jmp
movsb
mov
mov
scas
cld
insl
mov
cltd
pop
ss
xor
movsl
or
pusha
jmp
addr16
mov
jmp
jne
jnp
push
xor
adc
push
xchg
or
lds
adc
xor
sub
push
mov
inc
scas
mov
imul
jmp
scas
or
add
sbb
xor
adc
jmp
push
cmc
in
lret
lods
mov
xor
xor
cmp
or
mov
in
mov
pop
pop
pop
jmp
inc
dec
hlt
pop
sarl
mov
cmp
test
jae
xor
repnz
lret
repz
ss
mov
push
ljmp
aam
ja
or
lods
subb
cmc
sbb
pop
mov
xchg
lods
mov
shlb
mov
in
daa
cltd
sbb
add
pop
mov
cmpsl
fucomp
lock
loop
push
mov
sub
or
adc
ljmp
xchg
sub
scas
dec
or
js
adc
idivl
sbb
dec
push
jmp
out
pop
bound
mov
push
jle
cmc
sbb
sub
inc
stc
lods
mov
cli
and
dec
jg
jo
xchg
outsb
push
add
mov
stos
jmp
dec
rcrb
adc
ror
jg
jmp
dec
gs
andb
pop
test
jns
or
orl
out
pop
jmp
mov
test
subl
aas
push
insl
or
shrb
push
inc
repz
jmp
mov
test
mov
push
mov
dec
call
jmp
cmc
cld
insb
call
xchg
loope
lods
jge
cmp
and
loop
inc
dec
mov
mov
add
lcall
mov
jp
jne
gs
ficomps
inc
popf
or
sub
ljmp
movsl
cld
fsubr
inc
sbb
ror
push
xchg
xor
cld
das
push
stos
jmp
push
scas
insl
xchg
and
sub
jmp
aam
int3
push
adc
cmc
jmp
xchg
mov
sbb
mov
pop
mov
jmp
and
and
add
xchg
test
popa
repz
int3
dec
jge
push
mov
jmp
stos
inc
inc
sub
mov
movsb
push
cmp
xor
sub
push
fstpt
scas
xchg
or
imul
enter
pop
push
pop
jmp
cmp
push
add
xchg
push
lahf
xor
and
std
je
mov
jmp
sub
mov
stos
push
dec
mov
in
pop
sbb
mov
mov
cmp
mov
inc
jecxz
subl
xchg
lods
or
xlat
movsb
jmp
jae
jb
lods
insb
jmp
mov
shrb
push
out
popa
jmp
testl
fadd
fists
xor
imul
pop
xchg
addl
dec
aaa
insb
dec
mov
sub
ja
out
stos
jo
jmp
repnz
lcall
adc
mov
mov
push
icebp
push
cmp
fcoml
jno
adc
xchg
inc
loop
repz
repnz
jns,pt
or
jmp
mov
and
jmp
adc
xchg
jb
cmpsl
insb
sub
je
loope
jmp
hlt
dec
mov
cli
push
sbb
in
jmp
popa
lcall
enter
xchg
jmp
inc
mov
cmp
jmp
sub
mov
xchg
lahf
or
das
mov
xor
or
and
push
and
xchg
jmp
fsubs
mov
jle
mov
jmp
jnp
sub
das
insb
out
xchg
jmp
repnz
out
lods
dec
movsb
mov
add
dec
jo
xor
lea
outsl
enter
sub
inc
jg
mov
adc
mov
mov
pop
cmp
movb
mov
scas
push
xchg
pushf
call
jp
mov
jg
mov
jmp
andb
sub
gs
mov
sub
popa
sub
sub
and
aas
int3
and
or
and
add
xlat
push
jmp
cltd
mov
push
cld
xor
jb
jp
daa
cmp
jne
sbb
xchg
sbb
add
inc
jmp
mov
jecxz
in
pop
bnd
ja
rcrl
insl
les
test
dec
pop
jmp
mov
pop
xor
adc
or
movsb
push
jmp
fcmovnu
or
xor
mov
push
add
cmp
push
lods
sbb
xchg
adcl
push
inc
repz
dec
jmp
mov
push
mov
fistpll
sub
jl
adc
ds
mov
js
jmp
lods
roll
pop
add
jmp
or
sub
jge
mov
inc
lds
cmc
lods
cld
add
mov
jmp
stos
fs
sub
je
int
jmp
mov
jmp
pop
mov
mov
rol
inc
data16
mov
xorb
jne
scas
imull
or
outsl
jmp
adc
lods
out
and
daa
xor
shrb
and
shlb
mov
lods
inc
sbb
adc
push
jmp
mov
jmp
pop
into
cli
fldt
jmp
inc
lcall
push
dec
xlat
shll
daa
mov
adc
sub
arpl
stos
hlt
mov
mov
jmp
lock
mov
lods
mov
clc
scas
decb
jle
jmp
sub
call
pop
pusha
aaa
mov
jmp
push
leave
push
fs
lods
arpl
jae
or
jmp
push
fnstenv
jmp
mov
scas
ss
scas
lods
dec
outsb
cld
or
cmp
sahf
jmp
fisubl
jmp
jg
test
negl
adc
cs
jmp
lds
push
jmp
rcl
out
jmp
int3
das
mov
adc
scas
jmp
push
mov
scas
cmp
mov
cmpsl
jmp
add
sar
rol
jmp
outsl
inc
imul
mov
pusha
cld
fst
adc
push
dec
mov
pop
lret
or
inc
push
sbb
sub
xor
out
mov
push
ret
mov
or
dec
pop
pop
mov
jmp
inc
add
insb
jmp
clc
and
inc
xchg
fisttpll
cli
xchg
add
pop
push
dec
inc
xchg
movsb
imul
mov
cmp
jno
clc
lahf
jmp
jmp
sbb
fisubs
gs
pop
scas
push
pop
inc
cli
fstp
mov
mov
xor
fdivrs
repnz
mov
mov
mov
push
pusha
push
mov
outsl
xor
stos
jmp
pop
add
adc
lea
in
and
pop
lods
sbb
jnp
cmpsb
push
lret
sub
xchg
push
shll
popf
add
xor
jnp
sti
fsubr
cltd
mov
or
fildll
jge
psubq
in
fcmovu
call
lcall
xor
mov
adc
pop
push
sarl
jmp
pusha
pop
repz
scas
mov
scas
fdiv
and
pop
insl
or
in
popa
clc
fs
int3
ficomps
adc
add
pop
insb
mov
or
mov
fsubrl
stos
mov
xchg
jmp
mov
das
jmp
and
mov
lods
ds
ljmp
nop
cmp
es
pop
movsb
jge
and
std
in
int3
adc
dec
scas
xor
test
xor
jmp
cmp
fwait
call
cmp
and
mov
and
mov
out
js
shll
cld
test
adc
cwtl
idivl
mov
cmp
xchg
data16
scas
ret
outsb
test
lcall
icebp
scas
mov
fs
loop
mov
and
out
push
imul
jmp
adc
xchg
outsb
sbb
dec
jp
lock
aas
or
cbtw
xor
fistpl
scas
imul
lret
mov
or
jnp
mov
sub
iret
sbb
sti
cmp
inc
mov
test
dec
outsb
fldcw
jmp
fstpt
dec
testl
int3
lcall
sub
push
stc
push
addl
jmp
cmp
xchg
gs
and
into
das
mov
xchg
les
and
mov
mov
or
ss
shrb
adc
es
jnp
push
jl
mov
out
aad
repz
dec
ljmp
stos
jg
sbb
mov
sbb
test
bound
xor
mov
mov
mov
test
js
das
flds
jg
mull
shlb
pop
cmp
imul
out
sub
in
jnp
orl
test
cmpsb
pop
lods
mov
pop
xchg
sub
cld
data16
dec
insb
cltd
mov
jmp
das
test
pop
sub
cmpb
fmull
jmp
out
loopne
jmp
jb
pusha
push
popa
sub
sub
jl
pop
push
sbb
mov
mov
notb
bound
test
dec
or
xor
data16
stos
inc
jmp
movsl
cmc
mov
icebp
mov
sbb
xchg
jmp
shlb
lods
and
in
jae
adc
dec
jmp
clc
daa
xor
xchg
mov
imul
mov
mov
mov
mov
add
in
fisttpll
icebp
add
and
sub
or
sub
cmp
fwait
jmp
xchg
pop
cs
jge
push
daa
adc
add
shll
xor
jnp
fwait
ja
loopne
hlt
bound
jmp
fstp
push
xor
and
inc
in
leave
and
sbb
jmp
lret
rcll
mov
aas
push
and
shr
cmp
xor
adc
or
adc
cld
movsb
outsb
scas
lods
pop
pop
jmp
fcompl
mov
lods
repz
aad
sbb
outsl
shr
lods
mov
dec
stc
mov
out
fisttpll
stos
pop
xor
mov
out
xchg
test
fwait
inc
ds
xor
lret
je
sub
jmp
push
jmp
shl
icebp
bound
jmp
jae
xchg
movsl
dec
mov
sub
lods
cli
out
stos
lahf
sub
adc
mov
cmc
outsl
xchg
mov
nop
inc
xchg
jmp
lods
arpl
sbb
adc
xor
subl
outsb
aam
ret
repz
pop
pop
jmp
sub
pop
imul
pop
sub
sti
and
adc
or
mov
xor
daa
leave
jecxz
fs
or
aas
xchg
adc
and
imul
mov
ja
mov
sub
jmp
lods
nop
sbb
mov
std
jno
mov
add
in
repnz
sahf
shrb
or
enter
adc
inc
adc
cmpsb
rcr
sub
subb
sti
pusha
loopne
idivb
mov
mov
dec
jmp
pop
add
pop
movsb
sub
jmp
pusha
xchg
fwait
imull
jmp
test
xchg
adc
imul
sbb
pop
and
ss
adc
popa
pop
jp
cmpsl
jmp
fildl
inc
jge
test
outsb
cmp
popf
mov
ljmp
pushl
sbb
arpl
mov
arpl
sbb
xchg
lods
sub
push
push
pop
and
dec
test
std
push
imul
inc
jns
mov
cmp
and
jmp
or
cld
jne
cmp
or
sub
nop
or
fucomi
test
or
lods
xchg
jmp
or
gs
por
into
dec
mov
imul
xchg
xor
fs
test
or
xlat
jecxz
scas
jmp
in
test
add
or
jmp
jle
call
scas
mov
arpl
xchg
pusha
jmp
cmpsl
dec
out
enter
and
pop
inc
jmp
pop
adc
repnz
mov
cmc
sbb
ja
mov
jns
inc
lods
add
mov
fs
xor
and
or
sbbb
jmp
dec
sahf
and
jmp
push
jbe
insb
int3
push
jnp
mov
lock
jmp
mov
pop
add
xor
fs
test
movsb
or
and
in
ret
arpl
and
insb
loop
xor
movsb
jmp
push
push
nop
jbe
movsl
add
cmp
js
movsb
pusha
and
ss
jmp
cmpsb
xchg
adc
fmull
pop
push
jmp
sub
push
int
arpl
add
rcrl
mov
lods
add
jno
test
cmp
mov
sahf
xchg
lods
lahf
test
je
and
lea
imul
pop
imul
cmp
adc
lods
addl
jmp
and
jae
sub
push
imull
or
out
dec
or
sub
in
rorb
xchg
cli
mov
fsubp
jmp
adc
fdivrl
push
and
inc
ja
icebp
xchg
xor
adc
mov
xchg
sbb
push
ljmp
fsubrs
mov
mov
dec
jp
cltd
loope
sub
aam
jmp
sub
push
lods
arpl
dec
xchg
aas
popa
and
pop
lahf
loopne
test
push
movsb
inc
fmulp
mov
rcl
dec
and
jge
dec
jbe
pusha
hlt
lcall
fs
push
sbb
cmp
rorl
add
lods
js
pushf
mov
sub
xor
or
bound
push
mov
aad
push
popfw
cmc
test
sbb
mov
xchg
mov
jb
and
popa
jl
add
xchg
mov
lods
mov
cs
jmp
lcall
scas
mov
mov
vmovaps
jb
test
and
pusha
ret
xor
jmp
mov
jmp
lods
in
sbb
and
jmp
imul
sub
lahf
je
pmulhuw
lret
sbb
icebp
xchg
push
lea
sti
adc
lret
mov
addb
sbb
sti
imulb
fstpt
mov
movsl
xlat
es
fbstp
and
jge
jo
dec
and
jmp
mov
js
popf
dec
jmp
push
mov
ss
sub
out
sub
jmp
int3
push
movsb
adc
or
into
pop
lock
sti
test
jle
sbb
mov
mov
hlt
lea
sub
lret
fwait
dec
lods
daa
out
add
jmp
hlt
lret
cmp
jo
xchg
sub
dec
cmp
notl
hlt
dec
mov
out
cmpsl
sub
jmp
xor
fidivrl
icebp
jmp
scas
add
cmp
or
inc
sub
mov
dec
mov
adc
xchg
fwait
push
add
pusha
and
sub
push
jle
xchg
ret
outsl
je
mov
aas
cmpsb
push
and
xchg
xor
mov
push
xor
sbb
cmpsl
cmp
pop
stos
lods
cmp
dec
stos
or
or
push
push
xchg
jmp
ljmp
scas
and
and
sbb
xor
jne
jmp
pop
jecxz
mov
lods
hlt
enter
jg
pop
cmpsl
mov
into
mov
add
stos
xchg
mov
xor
scas
inc
mulb
lods
aaa
mov
repz
repnz
hlt
fxam
pop
pop
jmp
mov
cmpsl
mull
cli
aas
leave
sub
mov
lcall
xchg
scas
jmp
cmpsb
xchg
ret
jg
pop
test
cli
mov
aam
test
movsb
jmp
jl
mov
xchg
lret
daa
jmp
cmpsl
add
inc
incb
aam
xchg
xchg
ss
out
jne
jbe
ja
push
sub
mov
stc
cmp
es
or
shr
ja
sub
les
xchg
jmp
fimuls
push
adc
insl
xor
mov
hlt
popf
pop
adc
xor
jl
fadd
pop
sub
fsts
jg
and
fcoms
call
dec
mov
add
add
or
dec
mov
or
arpl
dec
inc
cwtl
shl
add
mov
fsubs
cmp
fbld
pushf
sbb
sbb
test
imul
mov
leave
push
jnp
jmp
inc
in
add
jp
fildll
sbbb
dec
mov
aam
jmp
push
push
sub
int3
shrl
push
pop
popa
rcrl
and
cmc
mov
out
outsb
arpl
out
repz
inc
jp
sub
subb
jmp
cmp
mov
and
adcl
lea
pop
mov
mov
test
mov
or
lods
insb
push
sbbl
add
jno
jb
jle
xchg
jmp
addr16
fwait
loopne
mov
pusha
jo
and
adc
sub
pop
mov
or
in
pop
or
push
jmp
or
sbb
mov
xchg
sbb
mov
jmp
arpl
testb
xor
sarb
clc
mov
outsb
inc
sbb
cld
lods
pusha
jmp
fcompl
adc
cmp
or
test
xchg
dec
adc
xor
in
mov
ss
sub
cmp
xchg
jmp
dec
jge
add
inc
pop
jmp
popf
ret
fidivrs
jmp
aaa
stos
roll
sub
dec
arpl
or
fidivrs
add
insl
jmp
lret
mov
and
sub
in
adcb
push
and
jmp
sbb
push
lahf
mov
std
push
andl
mov
outsb
xor
or
mov
stos
jmp
sbbb
addr16
lret
sub
and
adc
jmp
push
xchg
cmp
mov
inc
sahf
out
sub
imul
pop
xor
pop
jmp
pop
sub
popf
lret
nop
inc
cli
mov
cltd
fs
sub
cmp
js
push
sti
popa
dec
in
movsb
jmp
std
clc
pop
sub
inc
jmp
lds
stos
stos
cmp
shr
or
in
and
popa
xor
leave
arpl
aam
adc
and
sub
pushl
movsb
test
adc
and
xchg
imul
jmp
lods
jle
dec
push
dec
arpl
enter
scas
xchg
inc
adc
test
push
mov
outsl
sub
addb
sbb
out
mov
pop
jno
push
mov
pop
or
mov
push
stos
leave
nopl
jmp
orl
imul
shll
xchg
jno
enter
or
xor
daa
test
push
xor
call
add
cmp
mov
shl
or
pop
jmp
adc
insb
jmp
leave
mov
or
cltd
or
mov
scas
xor
les
popf
in
sub
mov
insb
rcr
sbb
inc
std
jmp
jp
lds
xor
repz
xchg
jmp
push
adc
movsb
into
std
jmp
ror
inc
lahf
jg
repz
sub
repnz
and
xor
fimull
lcall
mov
lds
arpl
iret
ja
jge
xchg
test
xor
sub
mov
inc
daa
push
pop
mov
pop
test
lea
clc
inc
push
and
insl
jmp
jae
loope
lret
add
int3
adc
sbb
xor
xchg
jmp
cmp
fisttpll
ret
shr
js
adc
xchg
push
dec
sub
xor
xorb
xor
andl
fsubrl
or
jmp
mov
or
and
out
push
add
int
xor
test
sub
lcall
dec
popf
push
cmp
mov
mov
aas
outsl
jg
lea
adc
negb
lret
in
aad
sub
rcrb
adc
movsb
loope
cmp
ret
mov
fstps
in
shll
in
sub
sbb
loopne
pop
loop
mov
cld
adc
mov
sbb
xor
mov
inc
mov
cwtl
dec
daa
testb
jecxz
repnz
fimull
mov
inc
sub
into
outsb
xor
mov
jmp
jmp
lds
sub
iret
test
mov
pop
test
in
mov
jno
mov
cltd
data16
lods
jle
dec
out
pop
ret
daa
repnz
jb
inc
int3
mov
cld
sub
aaa
lock
xor
sub
or
lods
mov
jo
jmp
scas
jle
push
jmp
push
add
mov
mov
xchg
jmp
jae
call
sbb
jno
out
xchg
shrb
cmp
test
test
icebp
ljmp
sub
xrelease
and
xor
cli
or
lea
call
mov
pop
sbb
cmp
mov
or
xchg
mov
outsb
inc
rcll
mov
hlt
lods
xor
stc
das
lds
push
cltd
xlat
jmp
jecxz
subb
jns
jmp
sub
add
pop
mov
in
jmp
mov
push
out
lods
in
psrlq
ror
mov
or
mov
push
jmp
sbb
testl
pusha
push
and
insl
sub
hlt
adc
and
xor
loop
and
jmp
test
fidivs
aad
jmp
mov
fldcw
sbb
pop
das
dec
sti
cmp
adc
pop
xor
fists
iret
pop
push
and
xor
xchg
inc
nop
ss
adc
jmp
in
push
gs
jl
scas
adc
xor
pop
fwait
ret
aam
lods
and
ja
cs
pop
mov
xchg
mov
andl
in
lret
jbe
movsb
cwtl
add
sbbl
dec
js
inc
pop
jbe
mov
or
mov
aad
ds
out
dec
out
pop
sbb
lods
sub
into
mov
jae
jp
je
xor
lock
lods
mov
aam
pop
sbbl
pushf
mov
mov
call
cmc
cs
push
mov
jmp
clc
pop
mov
jmp
adc
or
shll
fnstsw
fsubrp
daa
inc
xor
dec
xor
mov
test
out
add
arpl
pop
test
sub
jecxz
push
and
out
sarb
jmp
jno
dec
outsb
xchg
es
jmp
sub
xor
sub
in
xchg
add
add
imul
inc
push
add
cs
fsubr
ret
cmpsb
push
bound
adc
stos
or
pop
mov
arpl
xchg
js
or
bound
addr16
in
cmp
jno
orl
fists
pop
inc
icebp
test
lods
repnz
jmp
cmp
out
sub
push
pop
mov
jle
mov
jmp
loop
cltd
out
push
int
inc
and
mov
je
daa
imul
fsubr
shr
int3
sub
daa
xchg
cmp
test
ss
mov
cltd
inc
loop
and
int3
sbb
push
out
mov
pop
into
push
cwtl
push
cmp
mov
adc
jne
sbb
dec
movsl
scas
jb
je
in
sub
adc
fnsetpm(287
hlt
in
xlat
sbb
movsb
les
call
jno
ds
nop
lods
inc
jecxz
inc
and
dec
pmulhw
push
jnp
jmp
ljmp
add
daa
insl
int
std
jmp
push
in
sub
jg
pop
js
sbb
mov
lods
mov
jmp
sub
cmpb
shrl
out
and
pop
enter
dec
in
js
xor
mov
cmpsl
jmp
inc
push
ret
and
jle
stc
jmp
xchg
pop
jmp
sbb
lods
inc
test
sub
cmpsb
test
mov
jne
or
pop
repz
ret
or
cmp
mov
daa
movsb
add
shlb
clc
jle
pop
pop
rorl
push
jmp
dec
mov
pushf
lods
and
hlt
mov
pop
sub
xlat
jmp
in
jmp
sbb
test
jmp
add
jae
mov
mov
fistpll
add
add
es
and
mov
lea
mov
ret
jmp
push
imul
pop
inc
jns
fisubrl
sub
pop
repnz
cmp
pop
adc
jmp
xchg
fldenv
mov
ret
sbb
push
or
cli
or
adc
cli
rolb
sub
fildll
addr16
cmp
ljmp
jmp
ret
out
pop
adc
xlat
pop
ds
pop
outsb
shr
pop
repz
sub
jmp
pop
scas
icebp
lea
loopne
cmp
and
sbb
jmp
loopne
xchg
mov
adc
mov
mov
test
int3
lret
cltd
jmp
dec
rcl
mov
or
sub
mov
jmp
aaa
inc
push
lcall
int
cld
cmc
adc
push
push
jb
in
pop
cmp
popf
fisubs
dec
pop
and
pop
mov
jmp
insl
pop
dec
lds
xchg
lods
outsb
mov
mov
sub
fsub
std
pop
dec
sub
test
clc
jbe
push
xlat
jmp
pop
mov
lods
lret
jmp
add
mov
in
push
sub
xchg
dec
stc
cmc
jmp
xchg
cmp
mov
fs
scas
scas
jmp
xor
add
imul
shll
dec
mov
outsl
mov
enter
mov
xor
popf
cmp
fstpt
out
lds
lahf
pop
sub
fnstcw
int3
cmpsb
sbb
cs
inc
add
mov
or
frstpm(287
fildll
jmp
push
or
fwait
movsl
mov
test
xchg
lea
sbb
aam
or
sti
in
jecxz
ret
add
cmc
sub
pop
jmp
push
fstps
lret
adc
sarl
xor
fisubrs
push
test
jmp
les
rol
jge
mov
out
ja
insb
mov
adc
cwtl
jmp
addb
jmp
loop
jle
mov
aaa
nop
xlat
cmp
push
jmp
mov
adc
shl
scas
sub
push
and
push
ret
scas
call
in
inc
lcall
les
nop
or
sub
ret
mov
cld
fistpll
mov
fst
inc
mov
pop
or
int3
or
jmp
push
jge
ret
repz
jmp
pop
mov
jo
shr
imul
repz
pop
daa
icebp
jmp
pop
add
out
mov
pop
jmp
push
cmp
inc
push
cmp
shlb
sti
jmp
jns
popf
call
pop
repnz
jmp
je
cmp
lods
or
or
aad
call
imul
shr
xor
aaa
mov
mov
jmp
mov
mov
and
dec
inc
or
jae
inc
push
sub
cmpb
jmp
push
sbb
xor
jmp
xchg
jns
cld
not
lret
jmp
dec
mov
hlt
popf
sub
push
leave
jns
aas
jb
sbb
sbb
mov
lods
mov
rorb
xchg
sbb
xor
xchg
jl
sub
lahf
sub
or
cmp
fldcw
test
cmp
int3
xorl
and
loopne
mov
mov
lods
mov
jns
fimull
mov
in
adc
jo
mov
lret
mov
mov
push
popf
jmp
lea
jmp
mov
or
flds
lret
jmp
or
xchg
dec
jne
or
add
lods
insl
call
outsb
repz
shl
jmp
scas
sub
cs
add
xor
sub
push
jecxz
and
lock
pop
bound
jmp
sbb
test
outsl
jo
or
imul
das
std
test
sbb
cltd
pop
xchg
dec
mov
cmp
jns
xchg
sub
mov
push
data16
sahf
into
add
and
or
jmp
fstl
xor
jge
lods
scas
mov
and
adc
data16
std
mov
adcl
rcr
xchg
push
out
jmp
arpl
clc
mov
mov
push
add
and
or
int
and
lods
add
jb
out
int3
repnz
cs
in
or
jecxz
inc
jmp
test
pop
or
mov
mov
sub
cmp
pop
push
jmp
cmp
cld
daa
jmp
aaa
subl
stc
lea
iret
popf
es
mov
out
xlat
jmp
arpl
add
fdivs
jmp
nop
mov
pop
je
inc
mov
pop
mov
aad
or
jmp
out
jge
xchg
xlat
dec
lods
insl
scas
es
mov
pop
mov
pusha
and
xchg
xchg
cmpsb
movsb
xchg
test
jmp
rclb
out
jo
stc
sti
ret
hlt
mov
dec
jb
cmpsl
stc
jmp
jae
ret
pop
push
pop
sub
std
jns
jnp
sub
mov
lds
xor
or
jmp
mov
sub
sub
sbb
pop
in
or
iret
adc
call
out
sbb
add
inc
cld
push
pushl
push
jmp
lods
mov
xchg
sbb
jmp
faddl
mov
jmp
in
cli
push
loopne
fbstp
pop
add
mov
mov
loop
push
xchg
xchg
inc
sub
negb
lea
or
push
adc
subb
lods
arpl
jmp
popa
repnz
loopne
sbb
sahf
sarb
popf
fucomp
adc
or
or
and
jecxz
dec
jmp
addr16
push
in
imul
sub
call
in
cmp
test
ss
addb
icebp
daa
mov
lods
fcomps
mov
call
jae
jmp
jle
lock
add
repnz
push
ljmp
fdivrl
movsl
nop
sbb
xchg
movsb
adc
push
sahf
jo
adc
sub
jp
jb
mov
jmp
repnz
fdivl
inc
jmp
pushf
sub
jmp
adc
jbe
jmp
lea
push
lahf
nop
jg
jmp
in
push
mov
cld
xor
dec
mov
jns
add
push
push
lods
lods
sub
mov
sti
push
test
jmp
int
das
xor
pmuludq
addl
sahf
push
sbb
test
call
xor
sbb
les
fmuls
iret
mov
jmp
or
mov
sub
shll
push
jecxz
lods
lea
cmp
push
inc
repnz
or
fs
xor
mov
cmp
es
jp
mov
lret
ja
imull
and
mov
je
pop
or
xor
jmp
xchg
mov
jns
rorl
shll
pop
ret
sahf
notb
cmp
adc
inc
jl
jns
jne
movsb
and
push
pop
jmp
inc
jb
push
int3
stc
jo
fists
imul
or
rcrb
jmp
or
push
xchg
jge
dec
cli
adc
mov
jp
mov
int
int3
sbb
inc
adc
es
movsl
push
or
daa
loope
dec
orl
mov
add
jmp
inc
fisubrl
test
dec
jmp
pop
pushf
adc
mov
ficompl
mov
jno
popf
mov
popa
sbb
pop
mov
mov
or
rcll
loopne
lahf
jmp
ret
or
mov
mov
jmp
dec
addr16
lods
mov
push
adc
mov
adc
lcall
or
in
mov
arpl
clc
mov
js
jmp
aas
jle
fidivl
xor
sti
dec
push
in
inc
jne
push
mov
in
jmp
sub
lods
iret
test
enter
outsb
jmp
add
push
jmp
test
mov
andl
pop
pop
cmpsl
mov
repz
push
xchg
add
mov
jge
xchg
dec
and
mov
cs
jg
adc
iret
mov
pop
not
fadd
cvtpi2ps
sub
sub
sub
xor
sbb
adc
jle
insl
out
stc
pop
loop
or
jmp
insb
sbb
test
dec
jo
xchg
cmpsl
or
ja
test
outsb
sub
sub
cmp
test
stc
hlt
ljmp
movsl
fiadds
inc
outsb
call
das
and
xchg
sub
and
and
mov
and
scas
xor
pop
cli
lcall
pop
mov
lahf
std
pop
adc
pushf
push
sbb
mov
sub
sub
dec
ljmp
jmp
pop
rcl
out
xchg
xor
pop
jmp
iret
dec
pop
xchg
fmul
lock
shrw
inc
dec
xor
lods
into
xorl
mov
adc
rolb
jmp
jmp
ds
daa
lods
cmpsl
jle
fidivs
in
xchg
sbb
pop
push
scas
adc
sub
out
stos
repnz
shrl
cmp
push
adc
sub
lcall
fldpi
rcl
jno
sub
je
aam
pushf
and
in
lcall
jmp
leave
or
jmp
roll
bound
cltd
cwtl
cmpsb
int
movsb
mov
clc
test
or
call
addl
xchg
fs
insb
jmp
and
push
pop
xchg
jmp
ret
inc
push
mov
pop
or
mov
movsb
sub
mov
notl
jmp
rol
adc
das
jnp
pop
or
gs
dec
imul
fsubl
xor
mov
imul
lret
insb
cmp
mov
jmp
sub
xchg
jo
pop
inc
jmp
dec
jne
xchg
sahf
mov
xor
outsl
iret
xchg
inc
mov
add
sub
into
cwtl
jmp
or
xor
lods
test
jmp
out
pop
out
xor
push
lcall
fcomi
jmp
sub
pop
inc
or
pushf
mov
shll
lret
fwait
scas
dec
out
mov
cmp
rorl
lahf
xchg
rcrb
xchg
dec
jmp
in
into
pop
xchg
js
jb
inc
mov
mov
adc
sub
ds
outsb
mov
aaa
jb
jno
jmp
adc
pop
mov
pop
fwait
enter
xor
mov
inc
sbb
daa
out
fimull
das
lea
dec
fdivs
and
enter
pop
loopne
repnz
jmp
pop
insl
jg
push
aad
jmp
test
in
lcall
es
inc
ds
xchg
jmp
fwait
sub
hlt
fnstenv
lods
and
scas
jno
sbb
inc
xor
scas
ret
inc
sbb
mov
sbb
mov
loop
popf
pop
cmp
jmp
orl
jmp
stos
test
and
mov
popa
jne
inc
and
aam
jmp
fsubp
push
xor
cmp
ss
arpl
xchg
jge
or
mov
cmp
and
add
pop
and
lock
push
in
ljmp
add
xchg
jbe
push
and
into
andl
push
inc
fbld
mov
out
jl
inc
pop
add
jmp
pop
fs
sub
and
pop
leave
lahf
jb
setns
les
jmp
dec
adc
in
loop
das
jmp
pop
loopne
out
cmc
jmp
in
scas
jbe
cmpsl
test
and
int3
mov
add
int
test
sub
mov
cwtl
lcall
les
shlb
sbb
sbb
dec
stos
xchg
add
jge
clc
mov
jmp
pusha
push
fstl
rdmsr
xchg
fisubs
pop
jp
std
jno
mov
das
js
and
jbe
sub
dec
jmp
movsl
popa
js
fstpt
inc
xor
fidivl
add
fs
sbb
loop
add
add
nop
repnz
and
cmp
mov
push
mov
add
xor
jmp
jg
in
repz
test
aaa
mov
jmp
xchg
adc
jge
pusha
or
stc
ret
mov
sbb
lods
add
lods
adc
pop
cmp
mov
jmp
stos
gs
hlt
cwtl
jecxz
sub
or
and
fs
fistpll
dec
aaa
out
gs
lret
cmp
sbb
enter
jmp
dec
aam
xlat
mov
scas
sti
mov
push
jmp
lods
std
xor
scas
lret
mov
push
insl
mov
sbb
aaa
pop
fadds
xchg
insb
scas
mov
or
sub
rol
daa
scas
or
push
and
subb
jmp
jnp
mov
movsl
outsb
lret
push
mov
or
cli
rcll
mov
loop
in
mov
clc
lret
xchg
ljmp
mov
int3
mov
xchg
adc
cmp
jmp
mov
in
scas
or
test
rcr
push
sub
jae
loope
pop
sbb
sbb
dec
jo
add
cmpsl
pop
or
pop
or
shll
lret
loop
inc
clc
adc
shlb
lods
mov
aad
testb
mov
mov
sub
add
addr16
inc
cmpsb
sbb
cmp
inc
call
outsl
jmp
cmpsb
jg
test
fcomp
jmp
sbbb
jmp
out
cld
xor
push
sub
mov
filds
jmp
mov
lret
dec
mov
inc
mov
jle
and
mov
push
pop
push
movb
outsb
xorb
mov
jmp
lods
pushf
xchg
mov
call
and
or
loop
movsl
out
jo
sub
cltd
add
jmp
dec
adc
and
add
movsl
inc
lahf
cld
out
sbb
dec
rcll
adc
loopne
jmp
xor
lahf
lock
push
lret
lret
xor
sti
sahf
andb
in
mov
and
sbb
repz
mov
pop
aad
outsb
mov
and
fldl
jmp
adc
stos
lds
test
rclb
push
adc
sahf
jmp
mov
imul
sub
add
test
andl
jns
idivb
xlat
call
jmp
cmp
add
ds
jmp
sub
cmpsb
jne
orb
pop
inc
mov
mov
sbb
in
jmp
push
outsl
mov
jg
dec
lods
and
adc
adc
lret
push
cmp
mov
imul
lret
inc
icebp
pop
push
xor
jge
aaa
mov
adc
push
add
or
mov
sub
push
pop
outsb
lret
jmp
cmpsl
pop
push
add
mov
pusha
xor
dec
inc
sub
or
cs
jbe
adc
and
fwait
xor
in
int
sti
add
sub
fcom
out
lock
insb
cmp
sub
pop
push
jmp
xchg
mov
cmp
and
cmp
in
jp
lret
sbb
xlat
push
jo
dec
cmp
mov
fs
sub
fistl
jg
mov
lods
lods
xor
jp
pop
test
shl
xlat
sahf
insl
jge
jmp
sub
popf
xchg
xor
mov
lods
pop
out
xor
add
adcb
mov
dec
lods
gs
jmp
inc
inc
sub
add
sub
jmp
test
iret
dec
push
jmp
jl
push
xor
cli
lahf
arpl
leave
or
inc
jmp
idivb
popa
xchg
nop
add
push
push
and
or
in
mov
int3
jmp
sub
sbb
jmp
mov
imul
int3
inc
stos
loop
daa
xchg
out
pop
lret
jb
lods
enter
pop
cmp
pusha
shlb
sub
push
sbb
jmp
stos
pop
jbe
dec
movsl
imull
addr16
push
iret
push
jmp
xchg
xchg
and
cmp
sub
dec
pop
pop
mov
adc
xchg
jmp
inc
aad
cli
push
pop
mov
xchg
push
jmp
and
mov
xor
xchg
aaa
sahf
sub
fdivl
bnd
and
jge
bound
sbb
scas
pop
roll
jmp
mov
pushf
sbb
scas
sti
outsl
stos
mov
jmp
xor
popa
sub
pusha
push
shrl
sbb
je
fisubl
dec
sub
jmp
mov
add
mov
std
xchg
dec
insb
jmp
sub
rclb
mov
xchg
aad
addr16
sub
js
test
mov
std
cmp
lods
jno
leave
shlb
movl
push
insl
jb
xchg
push
and
inc
inc
ret
fstpl
imul
cmc
sub
sti
test
jmp
cmp
psubsb
push
dec
fstpt
jmp
mov
orl
inc
shl
xchg
movsb
jb
std
int3
sti
sbb
inc
pop
mov
mov
repz
ret
sub
fsubrl
flds
outsb
lock
push
call
icebp
mov
rol
jmp
pushf
inc
jmp
test
addr16
jmp
daa
stos
jmp
mov
repnz
sbb
sub
stc
push
cmp
jecxz
push
add
lods
push
in
movsl
mov
xor
orb
outsb
pop
jmp
loopne
jmp
lods
insb
mov
adc
xor
fildll
push
and
adc
movsb
sub
jmp
dec
sub
jmp
in
jp
jb
rcr
ljmp
test
mov
ficoml
sbb
and
lret
jno
sub
int
xchg
loop
mov
test
dec
pop
adc
jmp
pop
leave
add
mov
sahf
mov
push
std
pop
in
adc
sub
adcb
jmp
popa
sub
mov
sbb
mov
fildl
mov
jmp
adc
push
iret
add
xchg
int3
je
xchg
push
hlt
div
sbb
jmp
adc
jmp
inc
fldenv
stc
sbb
in
xor
nopl
jl
shrl
mov
push
ljmp
jmp
and
mov
jns
mov
psubq
xchg
sub
out
sbb
add
in
lods
popa
push
jns
cmp
out
or
orb
jmp
rcll
jmp
popf
mov
pop
test
std
inc
iret
jmp
outsb
in
dec
jo
jmp
in
pop
sbb
roll
aam
shlb
mov
or
aad
add
cmp
jmp
ret
mov
addr16
shr
lock
mov
add
pop
xor
test
add
jmp
cmpsl
aaa
out
push
sti
jmp
scas
idivb
stos
rol
movsb
jmp
popf
push
in
mov
mov
iret
cmpsl
mov
mov
pop
push
add
push
int3
push
inc
fsubrp
pop
hlt
jmp
fnstsw
inc
leave
mov
out
mov
and
out
lea
xor
and
mov
pop
es
and
sahf
jmp
xor
and
fcoml
fucomip
mov
sub
notb
mov
cmp
fcomps
les
pop
pop
out
push
and
sbb
and
push
jne
cli
repz
outsb
xchg
mov
inc
sbb
add
pop
add
idivb
xor
bound
repnz
cld
jmp
aad
fwait
add
mov
sbbb
popa
cmp
or
lods
div
fdiv
jbe
mov
sbb
or
sub
inc
lret
repnz
add
shrb
in
dec
sub
sbb
jl
fwait
push
test
repz
ret
pop
push
mov
or
jmp
jno
inc
jb
lds
mov
mov
adc
leave
adc
jmp
repz
dec
outsb
mov
mov
repz
nop
ret
jmp
ds
add
lret
lods
ss
cs
sbb
dec
lods
jmp
push
shll
xchg
pop
pop
xlat
push
jle
push
xchg
xor
ljmp
aam
add
into
pop
sti
subb
add
loope
or
cmp
in
sbb
jp
mov
and
jmp
rcll
es
shr
mov
fstps
add
lods
clc
push
aad
cld
jmp
and
jmp
push
je
dec
sarb
jmp
roll
jmp
and
jmp
movsb
mov
ret
int3
sub
and
fistpl
iret
roll
sub
out
inc
shlb
and
stc
lods
mov
pop
adc
cmp
jmp
test
in
push
sbb
jmp
xchg
pop
test
jmp
movsl
dec
cli
xorb
jmp
pop
push
dec
and
jo
jmp
fmuls
push
jge
out
jmp
aaa
and
sbb
loopne
jecxz
and
outsl
or
xchg
enter
into
adc
jns
sbb
aas
es
int3
and
ss
dec
xchg
sahf
stos
cmp
lods
sbb
sub
cmc
or
fimull
in
jl
movsb
imul
scas
loope
lods
adc
sbbl
xchg
scas
outsb
sub
push
adc
adc
adc
jmp
xor
lea
pop
in
in
pop
mov
jge
and
xor
fs
jmp
or
fsts
insb
xorps
fwait
aad
xchg
lds
pop
cmp
or
jmp
push
lcall
cmp
jge
pop
jo
or
cmp
jle
jmp
icebp
sub
dec
ret
mov
test
pop
cmpsb
mov
in
movsb
cmp
sbb
leave
jno
pop
sbb
lods
iret
jmp
pop
dec
and
cmc
xor
and
sti
stos
xor
jl
lcall
cli
sub
notl
stc
xchg
rcrb
mov
add
cmp
cmpsl
jno
lods
scas
test
xchg
mov
stos
fcomip
aas
jmp
mov
in
lods
add
inc
push
nop
daa
mov
cltd
mov
or
fwait
sbb
mov
std
popa
jmp
sub
addr16
mov
xor
in
dec
outsb
test
loopne
test
inc
push
inc
jmp
add
cmp
or
jmp
aas
sbb
mov
cltd
lods
pop
stos
lret
sub
shll
dec
xchg
loop
ret
lret
imul
iret
jae
in
lds
insb
stc
cmpsb
lods
adc
test
fistl
out
lods
imul
dec
or
imul
cmp
cmpsb
les
and
xor
or
inc
add
ja
ja
mov
push
xchg
lret
jmp
mov
mov
jmp
xor
out
dec
in
jg
lods
lret
in
jmp
and
es
dec
mov
mov
lods
push
pop
mov
pop
lock
jmp
add
out
neg
shrl
inc
dec
push
incb
ret
sub
xchg
pop
dec
or
lods
idiv
fldpi
cmp
and
jmp
mov
out
cltd
pop
jmp
sbb
fidivl
loop
xor
sub
push
ds
clc
push
fsubl
lods
dec
out
inc
xchg
testl
sbb
dec
jne
pop
mov
in
loope
mov
pop
jle
xchg
imul
sub
or
and
cmp
scas
jge
sub
push
mov
dec
jmp
adc
loop
aaa
jp
cli
cmp
inc
or
sbb
pop
jae,pn
push
mov
jmp
ja
xor
jmp
mov
js
lret
inc
jmp
mov
push
aas
stc
sub
flds
sbb
push
hlt
sub
addb
jae
out
jmp
lds
and
cmpsb
xchg
jmp
pop
jp
pushf
rcll
jns
jb
cld
test
pop
int3
jmp
in
sahf
movsl
js
subb
dec
pop
or
inc
dec
xchg
in
mov
push
cmp
out
jns
dec
or
sub
scas
lods
lods
pop
xchg
mov
lahf
or
jne
xchg
push
xchg
dec
repnz
inc
movsl
sahf
ret
adc
in
push
popa
jno
cmp
push
fcompl
jmp
mov
add
outsl
add
xor
jmp
jmp
xchg
push
enter
rcll
or
pop
stc
xchg
xchg
mov
lock
or
xchg
push
scas
out
mov
xor
int
les
jmp
jae
lcall
add
jmp
sbb
sarb
nop
or
lock
jnp
cmpsl
push
aas
notb
mov
sub
stc
es
popf
and
fnstsw
out
and
sbb
cmc
push
rcrb
lahf
dec
outsb
push
push
jmp
fs
pop
out
mul
jmp
jns
std
es
mov
jmp
sahf
mov
sub
or
jp
gs
jmp
rorl
and
out
mov
inc
mov
aad
lods
jo
loope
or
xor
rorb
mov
xchg
jmp
in
aad
repnz
fbstp
insl
js
imul
and
je
jmp
mov
aas
jmp
cmp
push
xchg
mov
scas
push
test
cltd
dec
mov
aas
sbb
mov
jle
xchg
psrlw
outsb
mov
mov
and
negb
sbb
pop
or
and
imulb
aam
out
and
fidivs
jmp
je
mov
pop
sub
cwtl
aam
clc
push
and
std
jae
jmp
xor
test
push
and
push
jmp
les
out
nop
repz
cmc
jmp
ds
outsl
adc
xor
jl
sbb
cmp
rorb
test
jmp
aam
lcall
stc
out
pop
pop
jg
out
or
hlt
enter
ret
jecxz
inc
out
movsl
push
jmp
mov
inc
fidivl
lea
lods
sub
mov
adc
push
cmp
movsb
mov
sbb
xor
and
outsb
lds
arpl
adc
sbb
jmp
mov
xor
xor
bnd
inc
pop
dec
ret
mov
mov
jmp
repnz
mov
sbb
or
xor
jle
repz
jmp
flds
jmp
in
push
mov
out
cmp
cwtl
push
aam
mov
push
or
inc
jmp
xor
mov
jmp
fnstenv
sub
cmpb
dec
adc
and
call
int
ret
pop
mov
adc
adc
testl
pop
cmc
loope
inc
mov
mov
inc
xor
stos
sub
mov
or
dec
mov
es
mov
and
push
inc
scas
cs
aaa
pop
or
push
jp
and
aam
fisubrs
mov
jge
jmp
jne
stos
jmp
jg
ret
insb
pushf
sbb
jns
cmpsb
jb
sbb
outsb
adc
or
fimull
jmp
jmp
push
mov
jmp
push
and
push
inc
sub
xchg
fcompl
pop
arpl
popa
lods
xor
lea
test
cmp
mov
ja
sti
sbb
add
daa
cmp
cmp
xor
shrb
sub
lcall
mov
jb
cmp
mov
jmp
sbb
pop
mov
add
outsb
sub
lods
cmp
ljmp
xchg
sub
je
fsubrp
lcall
sbb
mov
pop
cltd
jmp
std
subl
pusha
fadds
jmp
xchg
dec
mov
shl
add
subl
or
es
movq
jg
push
mov
jmp
or
sub
imulb
sbb
mov
and
jmp
test
or
pop
add
cli
jmp
hlt
pusha
inc
insb
pop
pushf
jmp
pop
sbb
cmp
sub
jae
xchg
jo
add
pusha
mov
hlt
xor
mov
sahf
add
or
pop
inc
jmp
mov
movsb
sub
mov
and
jne
loope
aas
por
rolb
aad
and
mov
jno
fdiv
test
add
sub
popa
pop
fnsetpm(287
jmp
lret
loope
adc
lods
aaa
jns
mov
call
dec
sbb
mov
popf
sti
negl
in
cmp
int
seto
xor
pop
dec
or
test
jmp
xlat
insl
sub
inc
xchg
lods
lods
gs
push
es
popf
or
test
cmp
loopne
jmp
or
hlt
iret
inc
jmp
jecxz
out
push
lea
pop
mov
fucomp
dec
push
movsl
jmp
sbb
lds
call
je
mov
out
inc
addr16
popf
mov
lods
xor
sbb
pop
jnp
fistpl
mov
and
stos
or
push
cmp
jg
jmp
out
addr16
es
popa
pop
ss
push
rcr
mov
jmp
xchg
and
mov
jmp
push
jmp
scas
enter
or
xor
int3
test
push
inc
mov
dec
fdivs
or
es
loopne
sarb
insl
fidivs
inc
and
mov
mov
inc
shrl
aad
cmp
dec
push
jp
je
sbb
jmp
or
adc
nop
push
cmp
imulb
cltd
dec
fisubrs
mov
data16
cli
inc
dec
jmp
sbb
or
repnz
scas
lds
push
or
jmp
sub
mov
mov
cmp
mov
mov
dec
jmp
out
mov
jmp
cmp
xor
jo
js
jmp
and
inc
push
inc
jae
lea
xchg
xchg
out
aas
enter
adc
mov
repz
call
pop
jno
jmp
data16
adc
test
jmp
leave
hlt
sar
int3
lods
out
cmc
pop
or
jecxz
push
leave
clc
jmp
int3
jle
mov
add
jmp
or
pop
lods
pop
les
ljmp
jmp
sbb
or
inc
sub
dec
adcb
mov
jge
leave
std
sub
iret
repz
inc
mov
sbb
imul
xchg
cmp
cmp
mov
jle
jae
repz
mov
pop
cmp
adc
test
pop
cmp
cld
mov
inc
movl
inc
nop
cmp
icebp
xchg
fldpi
rclb
xor
test
addr16
jno
xlat
adc
fmuls
xor
sub
pop
mov
cld
js
cmpsl
xchg
mov
cmp
adc
insl
lret
jmp
inc
popa
push
mov
lock
jmp
cmpsb
add
enter
adc
push
sub
pop
pop
shrb
icebp
dec
fmul
ret
and
jmp
testl
push
mov
scas
add
add
xlat
arpl
jmp
orl
insl
push
sbb
push
in
cmp
test
push
out
stos
cmp
pop
dec
jmp
lret
lods
popa
icebp
faddl
pop
sahf
idivl
jmp
or
test
iret
ljmp
loop
ret
js
fs
jnp
or
pop
subl
mov
and
cs
push
shll
push
sbb
jp
jne
push
mov
jge
into
pop
or
mov
pop
push
jmp
lock
outsl
scas
loopne
jmp
mov
push
outsb
movsb
mov
jo
pushf
push
jmp
je
leave
sbb
scas
icebp
pop
mov
add
iret
outsb
sbb
add
inc
or
into
or
mov
mov
jge
out
pop
dec
ret
and
sub
cmpsl
aam
mov
xchg
push
inc
mov
sbb
sub
jns
mov
add
mov
test
jle
shll
sub
sbb
cmp
stos
adc
jmp
das
mov
mov
cmp
iret
sub
das
jmp
add
arpl
inc
jmp
je
pop
mov
xor
xor
sbb
cmp
bound
pusha
jmp
scas
or
scas
pop
loope
stc
fcmove
jmp
jns
rclb
dec
clc
popa
and
cmp
sub
fsts
mov
dec
out
jmp
xchg
mov
pop
test
pop
xchg
pop
and
aaa
stos
pop
cmp
mov
bound
mov
mov
or
insl
sbb
or
inc
pushf
lods
mov
and
cwtl
sbb
out
jmp
push
dec
mov
shll
jmp
mov
testb
ret
pop
inc
lods
cs
por
dec
sbb
jmp
fildl
push
sub
fbld
sbb
pop
and
add
lret
out
mov
or
dec
cmpsb
xchg
jbe
aaa
fsubrs
test
jmp
push
pop
inc
push
inc
cmpl
push
ss
jmp
push
inc
inc
sub
into
add
fidivrs
jns
fcmovne
lret
scas
jmp
cmp
mov
jmp
jle
push
mov
repz
bound
outsb
xchg
sub
jmp
in
sub
jmp
aas
push
push
ret
and
dec
jmp
shlb
daa
imul
xchg
in
adc
mov
jno
xlat
jmp
stos
lods
mov
jmp
add
stc
ds
inc
scas
jmp
pushf
jmp
sub
mov
subb
adc
xor
stc
lods
push
fs
or
xor
cmp
loop
js
xchg
mov
cmp
or
fs
bnd
xor
out
mov
lods
jmp
xlat
inc
xor
cwtl
out
dec
sub
in
fstl
mov
inc
xor
sub
jg
mov
lods
insl
and
into
mov
adc
mov
ror
pop
sahf
iret
push
jmp
add
enter
jmp
sbbb
or
cli
jmp
stos
push
test
dec
push
jmp
popa
mov
mov
cmp
adc
add
mov
xor
adc
jae
jmp
jmp
sbb
pop
add
imul
adc
fsts
mov
cmp
jns
lea
xchg
jmp
data16
pop
testb
movsb
fadds
test
adc
jmp
pop
inc
imul
lods
vpminsw
stos
leave
in
sbb
jmp
insb
fnsave
sub
mov
daa
inc
mov
shl
sti
and
adc
xor
shll
pop
mov
pushl
sub
jg
dec
ljmp
cmpsl
jmp
ret
cmpl
mov
mov
jae
xor
push
add
sbb
xchg
ss
int3
iret
into
mov
icebp
std
movl
jmp
or
ljmp
jns
xor
cwtl
push
cs
jp
pop
jmp
ret
adc
leave
jmp
push
inc
int3
push
cmp
jo
mov
in
es
mov
cmp
adc
inc
or
jmp
add
mov
scas
pop
pop
aas
cltd
test
and
jo
hlt
pushl
sti
jl
imul
loope
sub
adc
inc
out
fadds
lret
jle
aam
pop
dec
std
mov
jne
and
ret
jmp
stc
fists
sbb
jl
jp
dec
rcr
push
inc
jmp
mov
add
jmp
inc
or
leave
add
mov
cmp
mov
filds
cmp
clc
add
or
inc
fnstcw
adc
jmp
mov
and
jmp
xor
cmpsl
lock
fs
dec
rolb
xchg
pop
or
negl
mov
stc
sub
ret
pop
int3
cwtd
pop
fcoml
push
mov
jmp
rcll
lret
jmp
js
and
and
inc
xchg
arpl
jmp
es
sub
jb
rol
bound
cmp
add
sub
imul
fadd
and
sbb
sbb
out
jecxz
mov
xlat
scas
in
mov
mov
inc
cmp
and
dec
fmull
lcall
adc
or
push
xor
jmp
ret
shl
into
mov
mov
or
pushf
lds
pop
cs
jmp
fiadds
add
ljmp
jmp
in
sti
adc
mov
movsb
jno
adc
bound
inc
ret
push
jne
xorb
sbb
inc
adc
and
mov
and
inc
in
fidivl
pop
push
push
fsubr
aam
inc
imul
xor
pop
daa
je
into
add
mov
sub
cmc
adc
sub
push
lret
push
sub
test
pop
or
add
in
jecxz
push
adc
push
push
push
jmp
lcall
xchg
jg
test
jmp
xor
mov
divb
ret
lods
out
mull
mov
xchg
dec
jmp
test
mov
mov
cwtl
psllq
lods
out
fidivs
mov
xchg
jmp
xchg
dec
lods
mov
or
stos
je
fwait
outsb
gs
add
xchg
cmp
cmp
int3
stos
fldl
andl
add
add
mov
fildl
ds
movsl
and
mov
dec
dec
pusha
or
daa
mov
fiaddl
out
mov
test
enter
mov
pop
or
xchg
ret
jae
lock
fsubr
cwtl
adc
mov
jmp
hlt
pop
mov
lods
xchg
inc
push
icebp
jmp
es
test
fcompl
aad
subb
jmp
dec
xchg
into
movsb
xchg
sub
jmp
jg
inc
faddl
adc
divb
pop
xchg
aas
mov
add
popf
mov
sub
or
in
sarb
lcall
mov
jmp
push
mov
ret
das
cli
jns
vpcomd
or
cmp
aaa
jle
in
cld
sub
sub
mov
sub
xor
jae
mov
jmp
add
mov
pop
in
das
test
lds
jmp
xor
xchg
jmp
mov
stc
scas
jmp
jbe
inc
sub
mov
mov
pop
jmp
mov
out
movsb
adc
jmp
inc
in
pop
test
jns
cmc
or
movsb
jmp
nop
mov
pop
jnp
xchg
jmp
xor
clc
pop
add
movsb
sti
mov
sbb
mov
jmp
cmp
dec
mov
stos
outsb
mov
aad
test
and
leave
lds
lods
xchg
or
shl
xor
cld
lret
aas
rorb
daa
mov
mov
ds
aaa
shr
je
pop
sub
push
mov
dec
jmp
pop
fnstsw
inc
mov
stos
cltd
lods
jle
lahf
add
sub
cmp
jmp
jmp
jp
incl
sbb
jmp
mov
sub
cmpsl
jp
mov
jmp
scas
loope
out
ja
aam
mov
pop
adc
jmp
pop
fdivp
int3
dec
lds
xor
inc
out
scas
cld
sub
pop
mov
mov
adc
test
testl
dec
decl
mov
xor
test
lcall
mov
sub
ja
lods
divb
pop
or
in
pop
sub
mov
mov
mov
cli
xchg
je
dec
aaa
pop
mov
movsl
jmp
iret
jb
clc
idivb
into
repnz
imul
jmp
cmpsb
sub
sbb
cltd
outsb
xchg
cmp
push
pop
pop
repz
jbe
fildl
mov
or
scas
dec
xchg
popf
jne
and
fwait
push
cli
sub
jb
dec
stos
sbb
pop
or
div
jp
orl
clc
cmpsb
out
pop
outsb
outsl
xor
fbld
lods
xchg
pop
jmp
push
xlat
mov
repnz
leave
cld
imulb
ret
cmp
push
leave
in
or
sti
adc
inc
add
fmul
mov
shrb
push
sbb
pop
xor
jmp
dec
and
mov
shrb
test
cmpsb
jmp
arpl
pusha
sbb
lods
jnp
inc
pop
outsb
into
testl
daa
repz
inc
call
test
jp
sbb
ljmp
sbb
aas
mov
mov
push
imul
outsb
rolb
mov
and
lea
sti
into
je
fbstp
sub
xchg
repnz
xchg
and
push
and
add
push
scas
shrd
dec
add
sbbl
in
imul
jmp
xchg
rorl
insb
jae
loope
test
jmp
push
sub
mov
in
sub
inc
inc
loope
mov
sbb
xchg
jmp
arpl
enter
pop
lods
iret
icebp
lret
popa
or
sbb
jmp
mov
jns
or
je
xchg
jge
sti
addr16
scas
add
data16
xor
shl
outsb
mov
scas
or
or
movsl
pop
jmp
cmp
sbb
mov
roll
fs
jb
push
push
pmulhw
jmp
mov
gs
sbb
sar
lods
xor
xchg
mov
jmp
mov
imul
test
push
popa
subb
push
mov
pop
fucomip
mov
fs
jmp
aas
pop
incl
outsl
and
sarl
jo
xchg
in
js
and
or
push
hlt
pop
adc
cmpsl
outsb
add
and
fldcw
xchg
aam
xchg
in
jmp
xlat
test
sub
or
mov
or
jmp
add
and
jmp
loop
jo
hlt
ss
jmp
add
or
xchg
insl
pop
inc
sbb
jg
add
cmp
inc
aaa
jmp
or
or
jmp
adc
lods
inc
xor
fimuls
bswap
mov
sbb
jmp
loop
rorb
dec
jmp
pop
sbb
pop
sub
dec
shrl
in
adc
adc
jae
pop
jmp
leave
in
mov
loope
lock
scas
dec
das
fstpl
lret
pop
mov
mov
gs
lret
daa
mov
out
fbld
dec
pop
cs
jno
stc
and
lea
jmp
xor
stos
dec
cld
icebp
outsb
jmp
jmp
inc
xor
dec
iret
jmp
jnp
sahf
ja
inc
add
nop
cltd
fldl
mov
jecxz
scas
sub
outsl
mov
xorb
fwait
add
mov
insb
int3
cmp
fwait
jmp
rolb
push
outsb
and
adc
sbb
mov
repnz
aaa
push
add
lods
dec
mov
addr16
push
outsb
mov
add
pop
push
pushf
add
add
lret
add
shl
fisttpl
xchg
ss
sub
xor
in
unpckhps
add
jmp
ret
and
adc
add
stos
loopne
lods
cmp
jmp
enter
xchg
pop
xchg
lcall
negb
xchg
mov
gs
jb
and
sbb
jle
out
dec
stc
push
jno
cwtl
and
mov
or
inc
dec
jmp
stos
xchg
arpl
test
add
and
scas
jmp
lods
jl
ss
jmp
shl
push
push
repz
adc
icebp
xor
adc
push
mov
jmp
int3
or
dec
repz
stos
mov
aas
push
adc
inc
jns
jbe
dec
jmp
cld
out
test
and
jl
sub
sub
jmp
pusha
in
xchg
dec
in
jp
popf
add
inc
cmc
out
fists
lahf
xchg
adc
jmp
mov
mov
sub
and
jns
lea
sbb
int3
jmp
adc
mov
jmp
jbe,pn
aad
insl
lahf
jmp
cmp
stos
pop
outsb
xchg
add
push
movsl
jmp
cmpb
inc
leave
inc
jmp
into
sbb
inc
addl
cmpsl
je
pop
lods
xor
mov
cmp
jmp
test
cli
mov
imul
jecxz
in
xchg
daa
jb
shr
shll
arpl
stos
pop
xchg
lods
push
mov
inc
jl
fldt
lods
adc
xor
movsb
pop
dec
push
jb
pop
cltd
or
ret
inc
sbb
jmp
mov
jge
push
cmp
call
mov
sti
push
sti
mov
and
lods
sbb
dec
add
insl
notl
pop
add
popa
pop
cmpsb
fwait
lret
daa
inc
jmp
sbb
nop
jmp
rorb
stc
rcrl
in
outsl
int
inc
and
leave
por
cwtl
fwait
cli
jmp
mov
mov
popa
es
dec
lock
scas
pusha
xor
clc
fs
mov
out
and
adc
cmp
cmpsl
fidivl
ret
ds
shrb
nop
cmc
and
sbb
jmp
iret
lods
pop
mov
das
mov
aam
push
popa
scas
icebp
call
mov
out
je
ss
pop
aaa
cmp
jmp
out
movsl
xchg
or
adc
es
jmp
sub
loop
and
lods
cmp
fisubs
xor
adc
gs
call
stos
mov
lcall
xchg
popl
stos
push
sahf
daa
dec
sbb
sbb
aam
andl
and
mov
js
lods
sbb
sub
sahf
testb
leave
fnsave
and
setno
mov
sbb
data16
std
mov
scas
dec
nop
mov
ret
sbb
push
movsl
jle
insl
rol
cmc
xlat
inc
lcall
sahf
cs
jmp
movsl
int3
pop
inc
aas
clc
test
jmp
mull
mov
and
jmp
jae
sub
in
ds
push
jnp
lea
cld
xchg
jmp
fcompl
add
repnz
inc
mov
or
stc
jo
das
hlt
repnz
jbe
sbb
mov
std
stos
test
mov
push
sti
cmc
mov
daa
jmp
push
push
mov
mov
pop
xor
push
sub
shr
and
aad
jno
scas
xor
mov
sbb
imul
mov
test
xor
jmp
xor
dec
std
fcoms
lods
cltd
inc
mov
popf
out
pop
sub
jmp
repz
push
shrb
stos
je
popf
add
and
shr
in
movsb
cmp
sub
or
int
xchg
fbstp
sub
sbb
add
stos
pop
outsb
or
or
lods
into
loopne
jnp
test
lock
mov
jo
jmp
sbb
insl
jmp
cmpsl
pop
inc
xor
in
clc
shrb
je
mov
mov
rcrl
mov
and
inc
push
mov
aas
arpl
add
pop
jmp
js
cmpb
pushf
imul
lcall
add
leave
cld
or
mov
mov
lds
inc
mov
ret
or
jae,pt
push
jb
lods
sbbb
push
dec
jmp
jmp
sub
movsb
pop
sub
and
ret
mov
mov
outsb
dec
sub
xlat
lods
lods
cmc
inc
push
loop
mov
jmp
std
dec
and
jmp
sub
and
xchg
add
iret
dec
xor
movsl
pop
lods
push
jae
notb
and
cmc
lds
jle
fisubrs
pop
addr16
cli
dec
lcall
lds
mov
cwtl
ret
popa
mov
rorb
jg
andl
sbb
add
pop
out
jb
iret
sar
cmp
jmp
fimuls
jmp
fldl
lods
call
out
punpckhbw
mov
movsb
add
mov
popf
stos
std
jmp
cmp
fiaddl
sar
xor
int
pop
ljmp
cmpsl
add
sub
addb
outsb
cwtl
loop
adc
dec
dec
sub
sub
test
lds
in
jmp
jbe
adc
insb
jecxz
lods
test
jmp
fcmovu
cltd
iret
test
repz
mov
jmp
frstor
jmp
mov
pusha
jge
lret
sub
int
sbb
inc
fmuls
jecxz
sbb
pop
cmp
pop
leave
mov
cmp
push
movsb
divb
out
jp
lret
cltd
mov
fdivrs
jnp
andb
js
xchg
jmp
rorl
xchg
rolb
lock
jmp
into
inc
pop
sbb
xchg
jle
pop
frstor
jae
xchg
das
adc
in
inc
jmp
inc
loop
out
mov
xchg
sbb
sbb
shrl
jmp
and
int
pop
xchg
xor
or
dec
mov
push
lods
mov
and
mov
xchg
jmp
or
and
lods
stc
cmpb
jp
mov
lahf
and
xor
sub
enter
int3
mov
mov
push
in
ljmp
mov
mov
in
ret
jmp
mov
dec
cmp
xchg
or
pop
mov
sbb
test
adc
stos
dec
jmp
cmpsb
sarl
out
aas
push
hlt
mov
mov
addr16
xor
cli
mov
out
or
or
sbb
jge
in
jb
loope
sti
jne
add
or
dec
jmp
insl
imul
adc
ja
rclb
lods
mov
data16
sti
cmpsb
pop
outsl
add
into
sahf
popa
sbb
mov
icebp
shlb
shlb
jmp
pushf
sub
sti
jmp
jecxz
int3
mov
sbb
inc
mov
jns
movsl
ret
lods
mov
cmpsb
scas
data16
mov
mov
and
imul
push
jmp
out
mov
cmc
jmp
jns
das
and
ror
pop
call
sbb
xor
mov
push
dec
gs
and
leave
mov
jge
push
pop
mov
and
in
pop
cmp
push
dec
jmp
mov
push
adc
jmp
repnz
or
push
lods
mov
out
mov
fdivrl
adc
aad
shlb
into
andb
jmp
mov
push
fidivl
or
dec
out
enter
subl
movsl
or
jmp
jns
outsl
sbb
test
mov
jnp
icebp
pushf
pop
jns
cs
cmp
push
mov
out
add
jmp
sbb
lahf
vpor
test
test
jmp
push
xchg
lcall
out
and
inc
sub
clc
fnstenv
ret
and
xlat
or
inc
cmc
jmp
sti
push
jno
scas
mov
cmp
mov
faddl
xchg
xor
dec
popa
jmp
xor
adc
shl
lods
mov
popa
and
or
push
mov
mov
lret
sbb
ret
loop
push
inc
sbb
or
pop
inc
xor
rorb
mov
jmp
push
xchg
fst
movsl
dec
jmp
popf
cmp
jp
mov
cmp
in
jmp
cmpl
bts
mov
dec
sub
das
cld
pop
push
add
jmp
jno
jg
jae
sbb
lods
test
jmp
int3
mov
repnz
jp
lods
or
cmp
or
scas
jnp
mov
mov
jmp
cmp
insb
scas
aam
mov
jmp
ja
mov
repnz
add
das
int3
scas
sbb
or
into
dec
lods
insl
push
jno
sbb
and
gs
sbb
jmp
and
and
push
adc
imul
js
clc
sti
and
jae
push
rolb
push
test
adc
adc
lret
xor
aad
pop
fucomi
lahf
in
inc
jg
or
cs
mov
loope
jbe
push
jmp
lock
in
adc
jp
loopne
out
ret
jnp
imul
sub
mov
movsl
test
fstl
or
jno
cli
arpl
dec
popa
cmp
fldt
jmp
cmpsl
ficompl
add
fcoms
ljmp
jo
lock
sub
pop
scas
inc
mov
add
repnz
arpl
in
cmp
js
sbb
or
jmp
pop
jne
fisubs
mov
stos
fxtract
in
pop
push
inc
jmp
pushf
xchg
jb
dec
jmp
cmpsb
in
rcrb
cs
mov
daa
push
cli
test
mov
cmp
cmc
inc
sbb
fldz
xor
dec
and
aaa
lods
inc
push
daa
sbb
repnz
xor
adc
inc
cmpsl
mov
sub
sub
and
testb
faddl
sbb
leave
pop
mov
test
cmp
movaps
scas
in
es
in
call
push
rcrl
cmp
cmp
xchg
pop
jmp
pop
loopew
jbe
das
push
add
jnp
call
mov
and
stos
je
add
jmp
inc
mov
jmp
or
jns
clc
jmp
and
jmp
lahf
hlt
jae
outsb
push
pop
jmp
rolb
dec
jmp
shlb
sbb
cmp
jmp
ret
mov
jmp
mov
mov
scas
lods
jg
mov
inc
xorb
in
sahf
stc
xchg
sbbb
mov
jmp
pop
scas
test
and
jmp
pusha
cwtl
push
outsb
jl
pushl
into
xlat
repnz
ret
ficomps
and
pop
sbb
cmp
pop
in
ret
nop
add
or
lods
sti
jmp
push
adcb
pop
movsb
scas
jmp
into
mov
stc
add
jns
sbbl
loope
adc
lahf
and
les
pop
pop
mov
jle
out
cmp
js
fcoms
hlt
add
pop
xchg
jne
add
test
imul
inc
pop
cmp
imul
and
mov
int
repz
or
dec
lret
inc
fldl
inc
mov
ds
mov
scas
fmul
popf
jnp
fs
pop
jle
cwtl
push
fwait
or
pop
arpl
jae
jmp
mov
inc
sar
sti
fdivl
test
outsl
xor
dec
lods
inc
addr16
pop
out
pop
out
push
pop
aas
mov
fcmovbe
jmp
add
or
and
insb
or
cltd
xchg
jl
sbb
inc
dec
daa
filds
in
xchg
daa
popa
movb
push
jmp
add
cltd
pop
test
rcrl
adc
les
mov
pop
adc
jbe
int
scas
xor
ss
mov
mov
cli
mov
dec
pop
jmp
movmskps
aas
sub
roll
pushf
subb
repnz
daa
mov
or
aas
pop
add
xlat
jmp
add
test
dec
jmp
pop
fisubrl
mov
rcrl
rcrb
outsl
mov
loope
jnp
pop
aam
imul
mov
cmpsl
iret
pushf
call
jo
xor
insl
sub
push
cmp
sub
rcr
movsbl
jmp
repz
adc
lcall
push
pop
pop
or
mov
lods
out
mov
aad
cmp
add
push
mov
mov
sub
mov
ret
gs
add
call
shl
aaa
jmp
mov
jmp
shlb
mov
adc
or
dec
pop
jmp
sub
cmc
cmpb
ret
push
data16
jmp
sub
cli
iret
mov
jmp
push
push
cwtl
rcll
push
mov
mov
jae
jno
insb
loope
jmp
out
lahf
jecxz
xor
lods
sub
xor
cs
sbb
inc
sbb
dec
mov
pushf
pop
add
cltd
jbe
mov
cmp
add
je
movsl
jo
sub
mov
imull
rep
rolb
sarl
push
jmp
add
xchg
xchg
fsubrl
inc
lcall
cmpsl
and
sbb
vmwrite
mov
inc
lock
bound
sahf
jo
jmp
mov
jl
and
adc
stc
xchg
or
dec
shrl
add
fcompl
in
out
scas
jmp
add
jle
hlt
push
mov
mov
lret
idivl
jmp
lods
nop
sub
adc
imul
sti
and
cmpsl
add
xchg
enter
jmp
cld
or
jl
mov
in
cmp
xchg
rcr
xor
bound
sti
pop
push
lods
jno
ret
pcmpgtw
jmp
lea
push
jmp
push
sub
sub
jb
push
jo
mov
neg
jmp
jno
cwtl
ret
mov
pop
fldenv
sub
or
cs
ljmp
ffreep
fs
push
stos
jmp
outsl
inc
mov
jp
sbb
mov
sub
xchg
jmp
push
out
dec
lock
mov
js
xchg
outsb
mov
and
stc
ret
inc
or
mov
repnz
sarb
cld
jmp
adc
push
mov
jmp
dec
mov
aad
dec
sti
jl
jbe
jnp
jb
cmp
mov
imul
fstpl
add
xor
adc
and
push
jmp
adc
jbe
cmp
add
pop
daa
and
push
call
push
jmp
jae
xchg
mov
es
shll
js
sub
dec
cmp
rorl
subb
push
outsb
mov
stos
mov
ret
pop
jmp
dec
fnstenv
sbb
in
lret
mov
push
les
jmp
and
inc
sti
jp
adc
movsl
jmp
leave
mov
inc
inc
loopne
ret
fstpt
xor
cltd
fimuls
lock
popa
les
jmp
lods
cmp
inc
cltd
jmp
adc
insb
mov
ljmp
shrb
pusha
clc
jmp
lds
sub
mov
jmp
shrb
lret
mov
aam
jmp
mov
add
fnstenv
push
mov
cltd
pop
cmp
cmpsl
sti
in
sbb
pop
cmp
stos
inc
shr
jo
out
arpl
fadds
ljmp
jmp
aad
xchg
or
fwait
orl
xor
inc
ds
or
pop
jmp
or
or
icebp
loope
insb
sub
inc
ss
dec
add
iret
dec
repz
push
mov
sub
or
and
lods
fisubs
cmp
stos
daa
lret
jecxz
mov
insl
xchg
sahf
xor
rcl
icebp
andb
xor
cmp
call
xchg
cmp
xor
lods
jmp
nop
pop
adc
test
sub
xchg
push
ret
scas
jmp
icebp
test
je
and
pop
dec
pop
shlw
mov
subb
jmp
add
fucomi
xadd
jl
movsb
and
les
daa
or
cwtl
add
jmp
xchg
sub
pop
mov
cmp
sbb
jg
push
hlt
stc
jp
add
lret
rorb
pop
pushf
int
adc
mov
sbbb
inc
mov
jno
or
dec
inc
push
pop
daa
mov
adc
or
lret
jmp
cmc
xor
push
or
jmp
sbb
lret
aaa
shrb
cmp
pop
jmp
dec
or
adc
sub
jmp
or
test
call
pop
loop
sub
stc
push
aas
jae
lods
out
jmp
fwait
stos
add
movsb
fisubrs
lret
adc
mov
nop
jmp
imul
test
jle
sbb
jmp
xchg
loopne
cmp
sbb
mov
call
repnz
sub
mov
sbb
scas
test
push
mov
add
das
mov
inc
mov
mov
or
cmc
fsubs
mov
cld
rorb
lods
jnp
test
cmpsl
push
xchg
cmpl
pushf
add
lods
pop
imul
out
inc
subb
sahf
mov
jecxz
pushf
icebp
jmp
pop
inc
adc
enter
fadd
data16
outsb
out
jmp
xor
nop
jg
das
lahf
mov
jl
jmp
loope
aaa
test
outsl
jmp
mov
cmp
inc
xor
sub
jmp
xchg
jne
ficomps
push
jmp
popa
sub
stc
les
out
sarb
sbb
mov
movsl
lret
adc
mov
cmp
popa
pop
adc
fucomi
js
movsl
xchg
and
push
jmp
lcall
scas
dec
jne
jno
test
aaa
cmp
in
adc
pushf
mov
fs
xchg
popf
jmp
cwtl
xor
clc
cmpsl
mov
mov
and
scas
mov
lret
xorl
mov
cmp
sub
lods
jge
mov
lods
out
xchg
jmp
neg
sbbb
test
cmp
mov
or
mov
daa
cmp
test
je
ret
ss
lods
sub
flds
jmp
adc
pop
push
in
jmp
mov
addr16
scas
cmpsb
push
and
outsb
test
jmp
les
dec
stc
sarb
inc
popa
fcomps
shr
push
loop
ss
pop
jae
fs
cmp
mov
andb
mov
out
testl
js
popf
xor
mov
ljmp
add
or
lods
les
cmp
dec
fwait
or
in
sub
mov
inc
lods
mov
dec
orb
xor
std
les
mov
mov
ds
imul
repz
cli
es
jmp
stos
xchg
cs
sbb
popf
lods
sahf
xor
rcll
sub
and
mov
repnz
int3
inc
jmp
and
xor
xchg
jmp
push
inc
stc
pop
insb
lods
mov
in
or
out
outsb
jecxz
sbb
cli
sbb
pop
xchg
ret
leave
and
lods
cmp
popa
dec
or
jmp
aaa
xchg
stos
daa
jmp
movsl
nopl
lods
push
xchg
sub
push
push
pusha
mov
jmp
fldenv
jo
jle
sbb
insb
je
mov
jnp
sub
popf
stc
push
out
imulb
mov
out
add
dec
aad
jmp
mov
in
cltd
mov
jb
cld
adc
dec
insb
clc
stc
aaa
loop
sahf
jmp
inc
ljmp
cmc
mov
fcompl
dec
jmp
sbb
pop
mov
imul
cmp
stos
mov
lods
push
sub
jmp
je
loopne
insb
jne
insb
xor
lcall
push
test
xor
jns
pop
or
lahf
jg
movsb
push
fs
adc
pop
mov
imul
pushf
or
sub
pop
fildl
loope
push
push
nop
jmp
into
or
repz
jmp
dec
rcrb
dec
pop
xchg
pushf
cmpsl
xchg
fcom
cs
sbb
nop
loope
in
push
mov
inc
or
mov
inc
cmpsb
mov
mov
jmp
adc
mov
mov
decb
loop
ss
enter
sbb
pop
rep
mov
insb
mov
xlat
sahf
arpl
mov
sub
movsb
scas
lcall
push
inc
mov
mov
jo
gs
ror
lret
sub
cmp
xor
fdivr
cltd
or
jmp
dec
outsl
adc
dec
pop
insl
jmp
daa
cmp
scas
xor
fistl
adc
pop
jmp
xor
pop
negl
int3
out
cmp
arpl
test
mov
xor
cmp
sarb
jmp
test
lods
aad
cmc
or
ss
mov
push
gs
sub
dec
mov
and
not
outsb
cmpsb
or
jae
lahf
lods
std
rorl
add
or
pop
or
dec
jmp
popa
and
lret
push
stc
cld
jmp
xchg
jmp
into
bound
adc
sbb
outsb
jmp
pop
mov
pop
jmp
fucom
pop
pop
mov
ss
add
pop
mov
movsl
jno
fsubp
push
xor
jmp
mov
xor
int3
jge
jmp
push
popf
inc
das
ljmp
testl
push
xor
push
adc
jmp
mov
jbe
repnz
dec
int
enter
mov
sbb
outsb
fisttpl
sub
fldenv
pop
outsb
and
mov
jmp
fistps
push
sub
ljmp
repnz
mov
icebp
cmp
jmp
hlt
orb
jae
jmp
inc
sub
pop
jp
into
jns
nop
push
jle
dec
test
in
mov
pop
jmp
mov
jnp
mov
cmp
inc
addr16
out
jmp
xchg
lods
push
push
lods
fcom
and
or
or
mov
les
sub
je
and
stos
jmp
ficoms
stos
adc
pusha
iret
leave
js
test
icebp
leave
int
add
aaa
pushf
lahf
mov
fdivs
out
xchg
mov
pop
jns
inc
es
mov
pop
pusha
cwtl
gs
dec
xchg
dec
cltd
les
jecxz
and
mov
or
jmp
add
xor
jmp
pop
mov
pop
mov
rcr
repnz
xor
sub
arpl
mov
jge
add
test
jmp
fxch
subl
sti
push
stc
xlat
in
or
jle
adc
cli
sub
jmp
jmp
subps
adc
hlt
jb
stos
mov
xor
sahf
bound
inc
sbb
mov
repnz
sbb
jmp
pop
pop
xchg
sub
mov
pop
push
or
dec
movsb
add
mov
xchg
and
mov
mov
jg
dec
sub
outsb
orb
cltd
enter
jmp
mov
cmpl
add
test
or
cli
stc
lods
xor
dec
and
sbb
test
dec
mov
sbb
stos
sbb
movsl
jnp
xor
aam
lods
jmp
push
ss
xchg
addb
jmp
out
mov
outsl
ret
popf
aaa
jmp
push
lret
mov
push
pop
sbb
mov
push
or
outsl
and
int
shrb
stos
jmp
in
test
xchg
push
and
jecxz
adc
jmp
xor
xor
pop
repnz
jmp
das
inc
and
jge
stc
cmp
or
imul
sbb
lods
mov
sahf
adc
mov
dec
push
jmp
or
mov
jp
mov
in
cmp
jmp
pop
ret
aas
cmpsl
vunpcklps
shll
mov
jbe
subl
scas
nop
mov
out
jmp
mov
push
stos
mov
lret
call
sbb
xor
cmp
int
jmp
mov
sub
test
adc
inc
movsb
sbb
es
popf
outsb
mov
jns
xor
push
insl
cs
jmp
pushl
fneni(8087
jmp
iret
adc
jp
jmp
ret
xchg
xchg
xchg
out
mov
sti
xchg
adc
popf
aam
jns
sbb
mov
cmp
mov
repz
jg
mov
clc
das
or
dec
mov
jb
mov
jmp
int3
fxch
mov
jmp
jmp
pop
out
jmp
out
dec
cmp
mov
jmp
cmp
movsl
xor
dec
fisubs
lcall
push
aam
cmp
les
test
imul
or
sbb
fiaddl
jno
xor
sub
into
jmp
enter
mov
sahf
jmp
lea
fwait
jmp
clc
fimull
xchg
mov
add
lods
lods
adcl
adc
imul
and
scas
mov
jb
jmp
enter
jmp
cmp
imul
xchg
inc
arpl
and
mov
outsl
mov
jbe
jmp
jns
inc
int3
pusha
adc
mov
xor
lock
adc
mov
cmc
aad
or
mov
repz
xchg
mov
aam
and
subl
pop
dec
sbb
xor
cmp
mov
xor
mov
enter
iret
sti
shl
lcall
arpl
es
jmp
sub
pop
and
sbb
sti
sub
xchg
inc
adc
dec
mov
sub
add
jmp
aaa
add
inc
scas
xchg
jmp
sub
loop
jecxz
shll
jmp
lahf
sub
xchg
mov
push
repnz
and
repz
jmp
cmp
call
lods
js
lock
test
push
sbb
mov
lret
cmc
jmp
fsubs
enter
jmp
inc
add
sub
movsb
dec
mov
stos
sub
or
dec
or
jmp
fistpl
lds
pop
xchg
es
loopne
nop
mov
sbb
test
filds
in
test
call
out
jns
cwtl
jle
ja
xor
test
jecxz
in
xchg
sbb
out
push
pop
and
pop
xchg
enter
or
push
pop
lods
out
pop
push
les
rorb
dec
mov
in
xchg
ja
testb
mov
out
sbb
inc
add
jo
cmp
pusha
push
push
sub
fbld
xchg
mov
mov
movsl
scas
pop
enter
mov
daa
cmp
stos
adc
adc
popa
into
lods
add
push
cmp
lods
push
in
in
cwtl
add
mov
cmp
sbb
sbb
sub
adc
push
pushl
fmuls
push
jmp
outsb
sub
lods
mov
jmp
inc
xor
into
js
add
lcall
adc
pop
dec
jbe
jmp
mov
mov
jmp
and
mov
add
fwait
lret
or
cmp
or
pop
jo
add
xor
inc
into
sub
cmpsb
jmp
sahf
int3
in
dec
xor
jmp
fs
pop
and
sub
xor
jp
push
sbb
ljmp
hlt
test
sub
or
into
mov
pop
jmp
push
iret
ljmp
or
mov
jge
stos
enter
cmpsb
add
xorb
inc
xor
or
sub
mov
js
insb
sti
jmp
test
and
push
cmp
dec
sbb
xor
jbe
lods
or
ljmp
jb
test
fsubrl
dec
xchg
int
or
outsb
jmp
adc
and
lods
cs
test
xchg
pop
imul
lret
cmp
cwtl
jmp
pop
sbb
lahf
bound
imul
mov
pop
mov
out
push
push
lock
sub
shrb
sub
push
sbb
or
repz
lods
lods
scas
pop
outsb
xchg
or
enter
sub
inc
mov
push
cs
mov
cli
insl
ljmp
pop
xchg
add
scas
fnstcw
fwait
and
aad
icebp
jmp
inc
out
xor
push
arpl
dec
xlat
push
pop
mov
cmp
pusha
add
xchg
sbb
arpl
xchg
jmp
imul
adc
push
lods
mov
jmp
ljmp
jmp
fsubrs
mov
lret
repz
data16
aad
icebp
ret
jp
lahf
adc
repnz
cs
test
aam
jmp
in
jg
lods
outsl
outsb
jo
mov
fucomp
lods
std
dec
mov
popa
sahf
pushf
movsl
out
jmp
aaa
xchg
jmp
popf
xchg
jge
je
dec
jmp
or
xor
pop
fldpi
lods
jmp
jmp
popa
add
fwait
mov
daa
inc
into
in
cmc
scas
jecxz
mov
and
add
dec
int
out
lahf
sub
jae
ja
repnz
mov
insb
cmpb
sbb
mov
jmp
lret
ret
insb
mov
add
jb
lods
outsb
push
je
sub
push
jb
jmp
inc
sbb
add
lods
hlt
lcall
shr
push
stos
mov
lods
ja
jae
push
cmp
sbb
data16
in
pop
cwtl
inc
pop
or
sahf
daa
mov
out
dec
or
in
loop
sub
xchg
and
and
mov
leave
jle
int
adc
jmp
xlat
push
pop
imul
xor
shrb
pop
fucomip
cs
arpl
xor
push
ss
adc
jp
or
imul
popa
add
add
xchg
dec
sub
xchg
lods
imul
out
xchg
cli
jmp
and
es
jo
pop
jmp
sbb
fcompl
aas
add
mov
das
cmc
sub
js
fists
lahf
cli
iret
out
test
ret
cmpsb
loope
xor
push
xlat
sti
jne
inc
movsb
mov
jmp
xor
ret
jb
shl
xor
shrl
out
mov
insb
int3
mov
jns
mov
repz
popa
jmp
sbb
mov
icebp
push
ffree
and
sarb
add
push
and
mov
or
test
cmp
popa
inc
stc
and
dec
fmuls
stos
jg
fadd
or
jmp
xor
daa
cmc
das
popf
jmp
mov
enter
lret
sub
dec
sti
test
or
and
scas
mov
arpl
inc
inc
pop
movsb
idiv
fwait
sarb
leave
xchg
mov
call
in
adc
enter
or
cmp
std
cltd
dec
lods
lret
mov
pop
sub
mov
or
xchg
push
pop
xor
mov
sub
or
in
dec
pop
or
test
mov
sbb
bound
sub
lret
mov
jg
in
out
out
into
jp
lret
push
cmp
ret
jbe
popa
loop
jmp
insl
repz
daa
inc
pop
je
data16
stos
es
mov
mov
rorb
jmp
pop
stc
fcoml
sti
xchg
pop
dec
sbb
imul
and
out
jmp
xor
dec
lea
sub
mov
and
cmp
xchg
incb
lods
adc
sub
and
or
ficomps
add
bound
pop
jmp
mov
adc
mov
push
lcall
mov
adc
cmp
or
jecxz
or
insb
or
mov
sub
dec
test
mov
fs
mov
push
or
in
sub
data16
ss
scas
xchg
mov
xor
out
shl
mov
jmp
adc
mov
jmp
repz
xor
out
lds
enter
lods
stos
xchg
sub
mov
fiaddl
sbb
and
inc
mov
loope
cmpl
btr
testb
xor
sbb
cli
jbe
jns
add
xorb
jae
sbb
dec
outsl
cs
mov
sub
sti
out
stos
jns
ljmp
and
imull
dec
jmp
jl
in
xlat
lods
in
jmp
cld
call
cmp
mov
xchg
mulb
aam
in
les
sub
jle
inc
sti
or
pop
pop
push
and
ljmp
dec
cs
es
aas
scas
pushf
jbe
sti
jmp
or
lods
data16
inc
mov
jmp
enter
cmpsl
sbb
sub
dec
mov
or
ret
jb
gs
mov
sub
stos
sbb
pop
jmp
repnz
sti
fs
cmp
sbb
dec
pop
mov
xchg
and
add
loope
out
sub
ds
jmp
sub
jns
jmp
popa
ja
inc
push
xchg
imul
add
cmp
popa
test
mov
push
jmp
test
cmp
outsb
add
mov
jno
dec
cmp
and
jle
into
jecxz
xor
sub
data16
test
fnstcw
pusha
xchg
popa
out
movsb
adc
cmp
lods
and
sub
sti
das
jmp
out
xor
movsb
test
adc
or
add
addl
fisubrs
jp
js
mov
pop
sub
cmp
pop
cli
bound
add
sub
jmp
sub
and
movsb
xchg
jmp
cmp
ret
aam
adc
arpl
jo
imul
or
push
arpl
and
mov
cmp
fdivl
pop
addr16
pop
movsl
mov
aas
ja
or
jmp
int
mov
into
pop
ret
jmp
pop
sub
xchg
testl
push
hlt
jmp
pushf
leave
and
lcall
mov
daa
testl
ja
lahf
cmp
rorb
repnz
imul
and
sti
in
mov
out
xor
xlat
jp
mov
jmp
outsl
jbe
push
gs
xchg
dec
or
into
cs
loope
xchg
sub
jmp
ss
xchg
jmp
xchg
inc
mov
jmp
scas
rorl
js
add
stos
or
xchg
sbb
mov
mov
mov
mov
or
jp
je
scas
lea
adc
or
and
mov
inc
cmp
jmp
jns
push
cmp
push
add
out
adc
sti
sbb
push
and
sbb
or
cwtl
jmp
mov
cld
lods
sub
imul
sbb
orl
je
dec
mov
inc
or
sbb
fdivrs
mov
dec
popa
roll
repz
adc
adc
xor
add
adc
cld
vmulsd
xchg
in
inc
xchg
out
mov
mov
mov
jmp
jnp
mov
out
fs
jne
adc
jmp
push
jp
xorb
xchg
adc
jb
stos
mov
cmc
mov
xor
xchg
lods
push
xor
or
adc
jmp
pop
or
sbb
lock
ss
in
movsb
jmp
stos
dec
int
or
and
jmp
das
lcall
or
out
add
xchg
mov
das
test
dec
loopne
mov
scas
cld
in
cwtl
sbb
pop
cmpsl
lods
cmp
popf
or
or
and
rep
mov
outsb
std
and
aam
jmp
rolb
sbb
test
mov
imul
jmp
push
mov
push
jmp
int
lock
outsb
xlat
es
cmp
insb
aam
call
insl
lods
sub
into
inc
icebp
jo
fstpl
jmp
mov
mov
jmp
xchg
mov
in
sbb
xor
call
or
movsb
insl
leave
xchg
and
jmp
mov
fisubrs
dec
jmp
or
lds
mov
shr
push
adc
loop
inc
mov
sti
mov
push
adc
xchg
ja
push
aaa
mov
imull
bound
mov
inc
jmp
jns
push
jnp
pop
mov
arpl
iret
sub
pop
mov
in
jmp
pop
push
sarl
mov
mov
pushf
int
cmp
jns
daa
sub
sti
xlat
mov
out
test
pop
int3
outsb
in
adcb
sarl
jmp
inc
dec
xchg
movups
and
jo
mov
cltd
xorl
or
std
lock
push
fisttps
inc
outsl
jmp
fs
xchg
or
popf
or
adc
jmp
xchg
enter
inc
in
jp
rclb
xlat
scas
ljmp
push
jmp
sbb
call
jmp
jge
jbe
stos
cmp
jmp
push
mov
jmp
jl
xor
lea
daa
std
imul
outsb
xchg
xchg
jmp
inc
pop
ret
stos
in
sub
or
jnp
mov
mov
popf
sub
stc
and
stos
add
sbb
in
mov
mov
lods
sbb
add
test
sbb
loop
jmp
pop
dec
js
jns
sub
hlt
lret
scas
out
mov
lds
jmp
imul
jmp
inc
imul
push
xchg
jmp
xchg
test
jmp
sarl
jmp
addr16
sbb
mov
mov
mov
push
cmp
sub
negl
iret
jmp
or
xchg
jns
outsb
scas
mulb
rolb
popf
inc
dec
aaa
subb
fmull
es
rol
cmp
ds
and
pop
clc
mov
xor
xchg
out
dec
dec
in
xor
jmp
sub
or
push
or
sub
cmp
dec
icebp
roll
repnz
sbb
mov
dec
cmc
jmp
inc
mov
pop
mov
aam
imul
adc
cmpsb
or
adc
das
jb
mov
xor
cwtl
inc
lods
push
mov
jl
shlb
add
shr
sarb
add
jnp
jmp
push
movsb
ds
call
push
sbb
jb
pushf
cmp
sub
add
add
mov
pop
or
imull
pop
nop
sub
jp
sbb
movsl
inc
es
shll
inc
add
sbb
mov
jp
jle
shll
ljmp
push
and
lea
inc
mov
aaa
sbbl
lahf
add
cs
loope
test
dec
jmp
mov
push
jmp
push
mov
jmp
mov
lea
std
mov
inc
pushf
mov
inc
jmp
or
cmp
in
pushf
sub
xor
jmp
insb
dec
mov
fucomp
rclb
jp
cltd
lock
stos
cmp
or
pop
jmp
mov
call
cmp
sub
aad
jmp
or
je
adc
pop
sub
jmp
daa
mov
sub
inc
xchg
add
repz
mov
dec
adc
sbb
sbb
sti
mov
jmp
mov
add
sub
add
push
sub
jmp
and
cmp
loopne
or
ljmp
sbb
lods
test
lods
dec
out
sbb
fstl
jnp
fstpt
lret
push
jmp
sub
pop
sarb
jmp
add
xor
jmp
pop
aam
add
or
into
jmp
icebp
out
mov
mov
and
std
push
outsb
xchg
adc
jmp
jb
aas
dec
in
lods
or
cmp
jmp
and
mov
enter
repz
mov
leave
out
pop
mov
scas
jle
bound
test
leave
xchg
xchg
lcall
repz
enter
ret
dec
sti
and
add
enter
inc
repnz
adc
pop
push
add
div
outsl
andb
mov
jmp
pop
es
jo
outsb
xor
push
jmp
cmp
shr
cmpsl
fwait
movsb
cmp
out
scas
jmp
pop
fildl
add
in
jmp
movsl
cmp
mov
xchg
out
repnz
cmpsb
int
mov
subl
shl
scas
jmp
xchg
movsb
stos
icebp
push
pushf
pop
jmp
mov
and
jb
or
xchg
in
imul
mov
sti
jmp
stos
test
sbb
mov
dec
enter
pop
push
mov
cmpsl
pop
fisubl
sub
push
fstpt
gs
cld
sub
xor
and
lret
or
mov
pop
lods
aaa
push
pop
lods
aas
cmp
xchg
and
mov
sahf
cli
jne
sub
imul
xchg
and
shl
repz
sub
sbb
iret
sbb
scas
jmp
jo
cmpb
mov
jmp
pop
jge
repz
lret
or
fisubl
imul
and
xor
jmp
ja
xorl
enter
gs
sbb
fsubr
jl
add
adc
sub
push
cmp
out
mov
cli
int3
inc
jnp
daa
pcmpeqd
cmp
mov
xchg
sti
jno
sub
loop
sub
inc
add
push
fldcw
pop
jmp
cltd
pop
stc
dec
gs
pushf
jmp
jae
xor
adc
adc
xorb
std
ret
mov
adc
cmp
pop
pop
int3
inc
pop
pushl
sbb
lods
daa
insl
xor
jmp
xchg
push
outsb
sub
sbb
rol
test
mov
sbbb
dec
and
push
or
cmp
dec
mov
pop
mov
jmp
xor
rorl
fsubr
int3
push
push
insl
inc
leave
mov
sub
adc
jns
rcrl
pop
push
repnz
imul
pop
pop
jmp
mov
and
jmp
inc
ljmp
add
mov
addr16
adc
cmc
push
mov
jmp
pop
xlat
and
pop
xchg
cmp
sbb
lods
xor
fxch
lods
sahf
movl
lods
push
jp
int
xchg
mov
push
ja
sbb
jmp
xor
mov
add
pop
jmp
adc
and
shll
aas
push
divb
sub
out
cmp
push
jg
test
jmp
cmp
dec
mov
insl
rcrb
lret
gs
rolb
imul
or
arpl
rcll
adc
andb
pop
dec
sub
lret
mov
jbe
jnp
jmp
cld
adc
xor
imul
pop
dec
mov
xor
jmp
lcall
call
test
nop
sbb
add
lods
fmuls
cmp
leave
ret
sti
stos
das
cmpsb
xlat
out
jmp
pop
out
sbb
mov
pop
lret
cmp
jmp
test
push
mov
push
jmp
js
sub
jmp
xchg
xorb
or
pop
setbe
mov
jmp
xchg
push
fnstsw
inc
sbb
and
into
inc
dec
xchg
dec
push
iret
jmp
or
add
out
imulb
and
lods
outsl
fistps
popa
leave
push
pop
in
ds
int
xor
xchg
adc
push
push
xchg
outsl
xor
sbb
aas
jp
mov
xor
sub
jmp
call
outsb
cmpsb
push
movsb
jmp
sub
lock
jmp
mov
xor
xor
in
mov
shrl
xor
xlat
movsb
jge
jbe
push
xor
add
push
add
mov
aaa
out
mov
iret
add
jmp
xor
lods
stos
and
test
lods
dec
push
fdivrs
cwtl
dec
jmp
mov
push
sub
mov
adc
jg
iret
outsl
inc
or
jns
add
jmp
mov
andl
mov
xchg
rolb
insb
mov
mov
int
xor
ljmp
sbb
mov
jge
jmp
out
adc
cmc
test
jmp
inc
loope
cld
add
jecxz
sub
popa
xchg
jmp
xor
aam
sub
lods
lds
and
outsl
mov
xchg
mov
jmp
add
adc
mov
or
ljmp
xor
mov
stos
pop
jo
lahf
sub
push
mov
pusha
adc
ret
sahf
sub
add
ljmp
sub
mov
das
push
jmp
stos
sub
jmp
and
nop
xor
pop
jmp
inc
mov
or
aad
mov
jp
scas
cld
int3
dec
dec
stos
cmp
shlb
xchg
cmpsl
imul
or
rcl
cld
jmp
out
push
je
jecxz
insl
jmp
sbb
rcrb
jle
aas
es
jge
movsb
dec
xchg
loope
cmpsb
jnp
outsb
cmp
js
adc
mov
inc
pop
pop
insl
xchg
jmp
test
xchg
ret
jmp
mov
aas
inc
cmpsb
in
mov
ret
dec
bnd
and
xchg
cmp
mov
dec
les
dec
push
imul
int3
mov
add
dec
mov
jecxz
mov
aam
sbb
arpl
adc
or
loope
ss
aaa
pop
or
in
stc
push
jmp
add
out
imul
cltd
inc
test
lods
into
jo
mov
lods
fldcw
jp
jmp
lods
pop
scas
loopne
mov
adc
jmp
popa
mov
add
cmp
out
mov
mov
cmp
jmp
sbb
bound
jmp
fidivrs
sub
jo
jecxz
pop
jp
jmp
addb
test
sub
scas
mov
shr
mov
pop
pop
sub
shl
popa
aad
test
or
test
lods
roll
cmp
push
jmp
fsubrl
loope
mov
mov
js
cmp
pop
fimuls
aaa
push
jmp
xor
sub
lcall
stos
pusha
sub
pop
in
mov
mov
fsubl
div
jmp
outsl
adc
adc
mov
scas
mov
inc
stc
mov
add
jmp
rclb
movsb
jp
jmp
mov
sbb
xor
fsub
test
call
jns
pop
jmp
sub
in
jmp
and
pop
lods
jmp
sub
mov
inc
add
clc
in
pop
aaa
pushf
out
jmp
std
addb
test
into
sbb
inc
mov
jmp
loopne
lods
add
jmp
jmp
jg
pop
xchg
push
mov
nop
pop
jmp
ret
mov
ds
or
xor
jne
jg
andl
mov
jmp
repz
or
shl
mov
jae
or
orl
xchg
scas
sbb
xchg
mov
mov
xchg
jmp
or
mov
into
or
jmp
fmul
nop
jecxz
add
jmp
pop
jl
jmp
pop
mov
test
pop
xor
mov
mov
jmp
sub
and
push
jb
jmp
mov
sbb
sub
fs
sub
jnp
repz
imul
rcrl
cwtl
dec
pop
movsl
inc
cmc
fidivl
jecxz
popf
lock
mov
sbb
xchg
xchg
or
xor
cmp
jmp
push
idivl
lods
jge
push
outsl
push
repz
mov
clc
xchg
addr16
jne
sub
pop
iret
in
pop
sbb
das
pushf
dec
mov
jmp
lods
and
dec
adc
jmp
push
mov
push
jp
jne
fs
rorl
int
ret
mov
jmp
xor
or
lods
or
xlat
fcoml
lret
iret
lods
aas
shlb
push
mov
cltd
mov
jmp
mov
stos
std
jmp
pop
leave
cli
xchg
fisttps
mov
jbe
into
dec
and
sub
mov
mov
jmp
xchg
sti
std
xor
inc
push
jmp
inc
sbb
jmp
xor
xor
mov
fmull
rcll
pop
inc
sahf
pop
or
pushf
cmpsl
lods
xchg
or
mov
or
dec
arpl
aaa
mov
cmp
imul
mov
ret
sbb
lret
mov
xchg
pop
sbb
leave
adc
call
and
jmp
add
mov
jmp
rcrb
pop
mov
sub
jno
and
cs
and
enter
sub
aad
outsb
xchg
sbb
ljmp
testb
jl
pusha
xchg
and
fwait
clc
jmp
insb
addr16
and
lods
add
sbb
or
push
dec
inc
fsubrl
movsl
xor
gs
adc
jmp
mov
push
sbb
je
ja
in
movsl
dec
push
adc
inc
mov
pop
fsubrl
iret
or
mov
jns
sti
inc
or
sub
mov
mov
sti
inc
shrl
outsb
in
xchg
mov
sub
jmp
sbb
imull
aas
xchg
mov
sub
xchg
push
xchg
and
or
push
cmp
enter
stos
daa
sub
jno
xor
and
test
or
jge
jecxz
sub
lods
mov
sub
jmp
or
loop
jmp
or
mov
popa
add
add
jae
out
sub
adc
nop
arpl
jmp
push
and
sub
mov
popa
insb
lods
lods
or
sub
lret
cmp
flds
mov
jb
mov
les
xchg
mov
and
sub
mov
sub
insb
jmp
jns
and
sbb
ja
pop
adc
in
iret
mov
mov
and
xor
mov
cmpsl
add
out
scas
xchg
add
cli
add
sub
mov
cmp
ret
jle
xor
jmp
cmp
test
jmp
sbb
insb
loope
xor
scas
scas
repz
int
lods
jmp
rclb
lods
dec
scas
in
mov
or
mov
js
jmp
aaa
or
hlt
jae
push
jmp
add
mov
jns
mov
rcl
jmp
xchg
addb
sbb
pusha
xor
cmp
xchg
loop
jmp
dec
cmpl
inc
rol
rorb
sub
sbb
add
or
cmc
test
xchg
sub
xchg
in
ficomps
sbb
sub
sar
imul
xchg
dec
sub
cwtl
mov
jmp
ljmp
lods
lods
adc
cs
mov
fsubr
cmc
inc
xchg
test
jne
mov
inc
gs
jmp
pcmpeqd
stos
jmp
or
xor
pop
in
mov
mov
mov
sub
add
stos
test
push
inc
xchg
int
push
jmp
xor
cmp
sub
fistps
inc
out
and
jmp
js
stos
dec
add
xor
jg
inc
or
sbb
imul
mov
mov
bound
adc
pushf
sbb
imul
sub
jbe
mov
gs
loop
xorl
aas
cli
or
js
fsubp
imul
xor
shr
hlt
xchg
in
or
fmull
push
jns
fwait
cmp
or
jle
or
std
lock
push
lods
jnp
jno
sti
add
mov
subb
dec
sub
idiv
xchg
xchg
iret
jmp
pop
mov
lods
sub
cmp
lcall
jmp
rcrl
cmp
mov
shrl
loope
cmp
sti
mov
xchg
mov
lds
das
sub
mov
add
sub
add
lods
cmp
movsb
pop
push
aad
sti
or
cwtl
dec
jmp
jp
cmp
jmp
ret
jg
mov
or
pop
xor
add
sub
hlt
jmp
rcrl
into
push
orb
mov
xor
add
lods
sti
test
sbb
shrb
mov
add
jns
sub
int
mov
mov
imul
movsl
push
jo
test
jns
enter
jo
imul
cmpsb
mov
jge
pushf
cltd
add
sbb
add
and
cmp
jle
sbb
jnp
jp
sbb
lods
cmp
out
loope
push
jmp
push
psubq
and
jp
stc
in
xchg
scas
jb
push
jne
loop
sti
fimuls
movsl
push
ss
mov
dec
stos
mov
pop
jmp
sub
ficoml
fildl
mov
test
lds
jge
jb
or
jmp
mov
setg
add
xchg
jmp
adc
sub
mov
stc
jnp
test
jecxz
clc
aam
adc
int3
scas
pop
push
dec
or
jmp
arpl
aad
pop
or
jmp
popf
mov
mul
jmp
imul
dec
push
insl
add
dec
sbb
adc
xor
jl
xchg
lods
lods
daa
fnstenv
xorb
dec
push
jmp
cli
or
mov
push
push
scas
leave
pop
xchg
sub
sbb
mov
ffree
sub
fildll
inc
mov
out
and
ja
dec
icebp
cmp
push
push
les
cmp
enter
jge
repnz
mov
sub
inc
and
xchg
sub
jmp
js
cmc
xchg
movsl
xchg
mov
fs
popf
adc
out
loop
sub
adc
xchg
std
and
fsubrp
faddl
pop
jmp
jne
sub
pop
push
in
je
cmc
sub
jmp
popf
roll
movsb
pop
lods
lret
test
jae
sti
jmp
pop
cmp
mov
test
sti
xchg
mov
stos
nop
lret
dec
movsb
sbb
int
add
lcall
mov
call
jmp
dec
push
js
jmp
jo,pt
xlat
xchg
pop
jmp
test
loopw
pusha
jb
int
or
cmpsb
jmp
jle
popa
push
bound
cmp
jmp
cmp
push
mov
xlat
jmp
xchg
xor
in
jmp
ret
outsl
xchg
movsl
pop
andl
div
mov
mov
ret
repnz
int3
inc
jno
and
cmc
sbb
fcompl
aad
sub
xlat
pop
and
pop
ja
sbb
fsubl
mov
dec
jecxz
mov
xor
lods
mov
ror
push
cmp
adc
test
jns
stc
int
adc
dec
jl
push
mov
loopne
fnstsw
les
sub
sbb
jbe
jmp
lcall
scas
icebp
shrb
scas
filds
mov
jmp
jmp
sbb
cmp
cmpsb
jmp
jns
push
adc
pop
loopne
and
jb
jmp
mov
sub
mov
dec
xlat
jmp
out
sbb
mov
jmp
xor
push
jmp
inc
test
hlt
movsb
addb
jnp
xchg
or
sub
pop
shlb
loop,pn
or
mov
je
push
lret
sub
call
inc
jg
sub
in
sbb
or
fisubl
cmpsb
adc
jmp
gs
pop
sti
lret
mov
lret
fstp
and
xchg
fiadds
leave
jmp
xor
push
scas
lock
adc
mov
pop
mov
jmp
addr16
int
push
stos
in
inc
mov
lea
mov
insl
or
and
call
jbe
mov
adc
inc
sub
sub
jnp
cltd
popl
int3
popf
scas
movsb
sti
loopne
popa
in
lods
mov
push
or
xchg
inc
jne
test
adcl
scas
fs
aad
mov
mov
mov
xchg
sub
in
mov
cmp
push
pop
cmp
pop
pop
push
data16
pop
sub
pop
js
or
sbb
jmp
lcall
mov
mov
test
xor
scas
add
adc
jb
jmp
inc
pop
clc
les
xor
adc
cmp
orl
jmp
je
cmp
add
sub
jmp
dec
cltd
adc
jp
scas
push
lret
outsl
sub
int
in
daa
jmp
ret
popa
or
lcall
aas
push
leave
je
das
sahf
leave
and
test
pop
inc
mov
push
jbe
arpl
aad
or
or
pop
and
divl
mov
loop
sti
push
jmp
mov
dec
les
aam
jo
mov
imul
and
loope
cmp
call
sti
add
ds
mov
jmp
lahf
pushf
add
mov
jb
mov
jmp
dec
ret
push
jmp
gs
test
cmp
jnp
out
es
cld
inc
or
scas
sub
xorl
mov
pop
cwtl
jmp
inc
dec
xor
ss
inc
outsb
arpl
cs
jbe
push
sub
pop
icebp
pop
pop
dec
pop
jmp
test
jle
lods
add
fidivrl
pop
mov
dec
sbb
popa
jmp
leave
decl
lods
xorw
sub
repnz
sub
das
or
sub
push
lds
ret
xchg
outsb
mov
lcall
or
je
xor
mov
mov
test
jb
dec
adc
inc
les
and
mov
sub
sub
push
ret
fwait
cltd
fmuls
dec
or
xor
aas
insl
je
enter
push
btr
inc
xchg
and
dec
pop
jns
repz
lds
lods
popf
push
cltd
fbld
pmulhuw
xchg
cmp
mov
pop
fs
xchg
es
pop
inc
repnz
nop
jmp
mov
fcmovnb
xor
sbb
jns
push
test
rorl
push
pop
sub
cmp
dec
lret
or
imul
in
mov
call
loop
test
push
add
nopl
aad
ficomps
adc
xor
or
mov
fsubs
push
xor
inc
mov
jmp
push
rorb
cld
add
push
jbe
addr16
cli
loopne
scas
pushf
repnz
ljmp
cmpsl
ds
andl
stc
adc
fstpt
xchg
inc
enter
dec
mov
sti
pop
mov
outsb
call
sub
jno
push
les
mov
jmp
outsb
shrl
jmp
inc
jmp
mov
dec
sub
push
mov
mov
popf
fcompl
ret
pop
and
cmpb
push
jb
sub
cld
imull
lods
pop
int3
xlat
shl
sbb
xor
fcmovu
ret
cld
lahf
fs
jmp
lcall
ljmp
cltd
pop
out
faddl
dec
inc
enter
sub
adc
or
jmp
pop
add
pop
shr
clc
mov
aaa
jp
sahf
inc
fsubrp
lods
pop
inc
out
push
mov
dec
pop
jmp
sbb
repz
pop
ret
mov
rolb
popa
mov
mov
cltd
leave
movsb
jmp
imul
or
and
iret
push
js
in
stc
in
mov
pop
cmp
test
mov
cmpl
stc
bnd
sub
popf
stos
jmp
lds
mov
test
mov
daa
jge
jmp
mov
push
xor
in
aam
pop
lods
and
jo
repnz
mov
outsl
mov
jmp
sub
pushw
icebp
jmp
fcmovnu
test
dec
test
mov
mov
jae
ret
test
jns
or
addr16
inc
test
lods
iret
dec
dec
out
push
repz
sahf
cmpsl
and
sbb
sub
pop
decl
aas
pop
mov
jg
int
push
fstpt
cmpsb
mov
mov
adc
sbb
sub
push
jmp
subps
pushf
movsb
shll
jmp
lret
mov
mov
stos
pusha
sbb
sub
jmp
stc
in
xchg
sub
cmpsb
add
int
cltd
sub
sbb
mov
sbb
sbb
out
jmp
xor
addb
mov
dec
sbb
cmp
pop
pop
subl
ss
or
mov
sub
jne
add
inc
sbb
dec
xchg
jno
cmpsb
lock
fildl
out
or
les
movsb
add
sbb
lods
std
insb
fabs
inc
lods
adc
addr16
gs
sub
dec
test
mov
lock
stos
jmp
das
es
mov
fs
pop
push
rorl
add
sbb
test
and
sub
ret
jnp
lods
cmpsl
or
cmp
cmp
mov
sub
jmp
sub
dec
scas
xchg
loop
les
int3
mov
jmp
push
sub
sub
out
pop
ljmp
fs
add
jmp
xchg
in
rcll
jmp
loope
sub
xor
repnz
jmp
mov
enter
call
sbb
jmp
dec
repnz
stc
ljmp
das
mov
dec
and
shl
inc
ret
ljmp
jmp
out
mov
mov
nop
fsubs
ds
jb
jmp
aas
xchg
sub
sahf
loopne
adc
cmp
push
jmp
pop
mov
jmp
dec
cld
mov
push
or
inc
and
jmp
arpl
sub
mov
enter
lea
shll
faddl
leave
fadds
fstps
xchg
movsb
jne
mov
dec
shrb
or
or
add
lock
das
jmp
imul
jmp
jne
test
sbb
int
push
mov
cmpsl
xor
sbb
jle
inc
jge
cs
adc
mov
pop
xor
ficoml
fninit
hlt
je
sub
pop
stos
and
add
sbb
and
icebp
fisttpl
iret
add
and
outsl
in
push
jmp
jb
and
jmp
pusha
call
and
das
push
pop
sub
dec
fmuls
ds
loope
pop
pop
imul
movsb
sub
cli
imul
xchg
scas
jnp
jmp
pop
push
fs
mov
sbb
mov
insb
adc
pusha
mov
loop
stos
add
jno
pop
xchg
outsb
das
inc
scas
pop
mov
jmp
addr16
and
jmp
bound
xor
pushf
sub
add
push
mov
lock
bound
jle
mov
push
jmp
enter
pop
adc
mov
lret
loop
aaa
sbb
sub
or
pop
cmp
test
jbe
and
mov
sbb
adc
loope
inc
pop
jmp
mov
mov
mov
aaa
fdiv
jns
dec
lods
pop
sbb
pop
in
sti
ret
daa
add
in
add
push
jmp
mov
pop
mov
mov
jmp
xor
imul
sub
out
and
out
push
sti
cmc
fs
dec
dec
jmp
subb
repz
push
sbb
shll
cmp
jle
and
xchg
sub
lahf
adc
jg
jp
jae
jl
jp
mov
rolb
sub
sahf
lret
fsubr
sti
rcl
add
je
push
cmpsb
jmp
inc
or
mov
jo
xchg
and
in
cmp
and
test
and
shll
jmp
and
je
jmp
and
push
inc
imul
fcompl
pushf
addr16
aas
xor
xlat
popf
imul
dec
jmp
cmp
imul
mov
lahf
out
scas
add
push
pop
jb
add
dec
out
shll
orb
sbb
mov
jmp
rcrb
xor
inc
push
sbb
call
push
repnz
loope
sti
adc
insl
push
aaa
test
cmc
adc
jmp
mov
xor
push
pop
dec
cmpsl
jp
jmp
cmc
xlat
rcrb
pushf
cmp
cwtl
xchg
xchg
fisubrl
jmp
mov
or
cmpsl
lret
shlb
out
pop
ljmp
inc
cmc
scas
dec
outsb
jbe
cwtl
fbstp
ja
inc
push
leave
ljmp
mov
jp
hlt
out
mov
or
notl
and
lret
dec
mov
xchg
mov
and
adc
jecxz
xchg
jmp
and
add
jge
xor
into
imul
xor
daa
sti
jae
mov
aam
lods
xchg
cmp
sti
inc
add
idivl
mov
cmpsl
jb
int
ret
or
insl
jno
mov
js
sbb
jmp
cmpsl
add
ret
mov
inc
mov
out
push
dec
mov
and
mov
out
jmp
xor
jmp
jbe
xchg
pop
jae
cltd
jmp
jecxz
test
pop
push
dec
movsl
scas
popf
jp
mov
jl
cmc
jle
test
jns
ljmp
pop
sbb
enter
and
fxch
xor
lea
dec
mov
jmp
mov
sub
push
jmp
out
loopne
push
pop
pop
sti
mov
sub
and
jmp
cmpsb
mov
jmp
xchg
leave
lahf
adc
orb
sbb
xchg
outsb
cwtl
mov
pop
push
sub
jb
pop
sysexit
pop
sub
inc
sub
divb
jmp
imul
jmp
sub
mov
in
lods
cmp
hlt
pushf
xchg
adc
mov
lea
pop
aas
mov
les
pop
sub
leave
or
jmp
mov
fsubp
shll
jmp
xchg
and
dec
xorb
call
fwait
mov
xor
sbb
shrb
out
jl
ljmp
mov
lock
jmp
or
cmpsb
cs
daa
outsb
xlat
adc
adc
mov
xchg
out
mov
jo
adcb
mov
in
lods
movsb
xchg
adc
mov
add
adc
add
repnz
and
jmp
adc
fcompl
cltd
inc
or
stc
loop
nop
loopne
arpl
push
bound
pop
dec
stos
testb
jmp
or
dec
cmp
jmp
pop
xchg
in
sbb
fs
out
inc
or
int
mov
mov
loop
pop
sub
imul
xchg
iret
or
jnp
jmp
leave
in
sbb
pop
fldpi
ret
mov
xor
jb
sub
int3
mov
andl
adc
jge
jb
push
mov
rolb
push
ja
push
cltd
push
mov
inc
cli
das
and
mov
jle
into
mov
sbb
ret
sub
jge
sub
rcrb
ret
push
adc
jmp
pusha
sub
fdivrl
jo
xchg
stos
mov
cmpsb
lea
jb
test
inc
sub
lock
cmp
push
fs
mov
daa
lahf
and
jbe
stos
fwait
subl
lods
popf
push
mov
adc
call
ret
lods
mov
add
push
pop
imul
out
push
data16
cmc
shrl
in
sahf
fcom
xchg
jp,pt
mov
mov
repnz
push
arpl
fmull
inc
scas
xchg
dec
pop
movsl
int3
cs
daa
xlat
nop
scas
mov
std
subl
divl
jmp
in
add
fdiv
repnz
jmp
push
push
iret
mov
push
ss
insl
dec
push
inc
cmp
and
jmp
fnstcw
xor
mov
pop
dec
lcall
xor
repz
jmp
negb
aam
and
pop
or
repnz
jg
popa
lods
in
scas
push
adc
adc
jmp
stos
add
lods
cmp
push
aas
mov
adc
pop
rclb
jne
daa
repnz
fs
xchg
lret
xor
jmp
aam
xchg
or
push
lods
cmp
test
sbb
fs
notb
shlb
cmp
stos
xchg
push
pop
daa
and
xlat
and
xor
shr
pop
sub
jmp
lods
push
test
outsl
pop
scas
push
and
dec
jl
out
sub
jmp
mov
jle
scas
xchg
movsbl
lret
mov
cmp
mov
enter
mov
std
arpl
fimull
xchg
out
dec
jae
es
test
mov
out
sbb
scas
movsb
jmp
push
or
and
btr
xchg
and
fnstsw
jmp
dec
in
jne
stc
mov
jmp
mov
sbb
jmp
out
fisubs
or
jmp
ja
mov
jmp
stc
daa
call
jmp
push
jns
adc
dec
lods
jmp
test
mov
xchg
mov
jmp
or
sub
mov
shrl
addr16
and
dec
dec
sub
jmp
jns
or
inc
fcoms
or
adc
push
pop
xor
dec
xor
dec
add
test
fs
jmp
out
pop
mov
ret
jmp
jge
std
not
mov
sbb
jb
pushf
in
push
in
stos
pop
popf
dec
inc
jo
xor
pop
and
jmp
loopne
idivb
out
aas
jmp
in
mov
sub
xlat
and
xchg
js
testl
pop
inc
sub
or
dec
dec
xchg
inc
aam
repnz
jmp
test
xor
push
in
xrelease
mov
lods
inc
add
mov
add
pop
pop
clc
xchg
enter
cli
in
xchg
imull
push
jae
jmp
ljmp
mov
test
and
xchg
sub
pusha
call
stos
xor
in
pop
imul
test
popf
pop
cld
mov
subb
jmp
loopne
mov
adc
cltd
mov
stos
cmp
add
pusha
es
sub
mov
sub
or
pop
scas
fbld
fcoms
daa
lret
lcall
sbb
ljmp
in
loop
jp
mov
pop
call
daa
lock
push
jmp
xor
and
push
jmp
sub
pop
test
bound
fistpll
or
xchg
je
sub
sahf
clc
outsb
bound
adc
cwtl
lock
stc
mov
es
loop
dec
pop
out
cmp
dec
xor
mov
enter
ss
nop
sti
inc
loopne
mov
push
lods
fcomi
cwtl
jecxz
and
sub
scas
sbb
stc
pop
jmp
xchg
and
ret
test
out
in
cmovns
jmp
icebp
pop
and
mov
adc
flds
mov
jmp
adc
or
sbbl
push
mov
jmp
jp
mov
fnstsw
xor
jmp
cltd
in
cs
jb
sub
sbb
aad
dec
jmp
fnsave
lcall
es
inc
pop
hlt
and
jl
js
in
movsb
dec
jmp
xor
nop
or
cmp
lcall
push
pop
ja
push
fldt
mov
and
enter
out
xor
scas
cmp
push
jl
cmp
sub
mov
fdivl
sarb
insb
movsb
cmpsb
dec
xchg
jmp
rcll
dec
push
or
sbb
lahf
lret
xor
ret
mov
push
inc
jp
mov
inc
cmp
cmpsl
xor
scas
push
and
jno
ja
inc
lock
add
sbb
out
and
mov
lret
aam
mov
in
xchg
mov
clc
xchg
rcrl
fwait
out
or
cmp
testb
jmp
sahf
xchg
inc
fsubr
mov
adc
dec
inc
lods
xlat
mov
push
lcall
daa
daa
cmpsb
jmp
ljmp
jmp
xchg
loope
push
cld
xchg
test
je
add
daa
mov
fs
lret
cmp
pop
pop
add
adc
xlat
rorl
mov
mov
ljmp
lods
jns
xchg
xor
cli
stos
or
jmp
sbb
inc
add
sub
sbb
nop
pop
add
jmp
out
test
jl
insl
mov
into
and
ret
xor
fmuls
adc
cmp
jns
and
push
jmp
mov
mov
lods
clc
pop
xor
add
xchg
xor
inc
cmp
inc
jmp
jo
cmp
dec
jmp
push
dec
cmp
or
xlat
jmp
push
hlt
mov
lods
jno
stos
movsl
ja
pop
jae
push
lods
lods
adc
adc
cmpsl
enter
inc
lods
negl
sbb
test
mov
or
in
and
stos
jp
jmp
jg
jns
mov
shll
add
sub
sub
mov
ret
cltd
xchg
xchg
and
sbb
iret
xchg
xchg
imul
sbb
cmp
xor
mov
adc
cmp
cs
std
xchg
jmp
dec
mov
dec
pushf
pop
mov
mov
cltd
or
mov
jecxz
cmp
sbb
and
jnp
scas
sti
cmp
or
xchg
bnd
push
cmc
mov
jmp
push
fbstp
call
lods
adc
test
xchg
popf
add
mov
out
mov
mov
inc
loopne
sti
or
jmp
cmp
mov
fcoml
jmp
push
subb
push
sbb
data16
adc
mov
scas
cld
popf
sarl
shrb
mov
int
out
push
ret
dec
imul
jmp
cmp
jns
out
jmp
adc
jmp
adc
test
xchg
data16
imul
int
in
notl
add
imul
repnz
dec
mov
ja
nop
mov
icebp
jmp
lcall
lods
or
sti
sahf
push
dec
push
xor
and
or
movsl
jno
jmp
sbb
neg
test
loop
fmull
push
jne
adc
sub
hlt
jmp
jbe
xchg
mov
or
and
ret
lock
jecxz
push
cmpsb
sbb
mov
lcall
add
jnp
push
push
stc
jmp
lock
xchg
push
ja
jmp
sub
out
or
ss
movb
lods
mov
cltd
sbb
cmp
fcompl
shlb
jmp
arpl
xor
add
push
jmp
dec
jae
daa
mov
roll
inc
mov
scas
jne
cltd
fsubr
outsl
jmp
jge
out
gs
pop
cmp
pop
sti
leave
cmp
xchg
jns
xor
lods
sub
dec
out
cmpsb
negl
cmp
shrl
sub
mov
and
out
and
lret
stc
dec
test
sbb
or
jmp
jp
cmp
mov
or
cmp
inc
out
fwait
jp
add
inc
dec
pop
lods
add
lock
data16
sub
xchg
mov
jmp
lock
sti
jmp
mov
pop
sbb
jmp
jno
icebp
fstpl
popf
scas
insb
pop
leave
jae
js
pop
adc
lods
mov
push
fdivr
pop
daa
jp
jmp
cli
jae
loop
sbbl
lahf
push
mov
mov
arpl
pop
jle
dec
adc
inc
jmp
imul
push
inc
pop
jmp
push
cmp
push
or
notrack
and
mov
sub
inc
xor
outsl
lods
lcall
sub
and
jmp
and
vdivpd
add
ss
dec
xchg
arpl
add
pop
and
xchg
lret
mov
call
scas
out
adc
pushf
or
jmp
insl
pop
push
xchg
lret
adc
outsl
sti
mov
pusha
jmp
pop
xchg
or
jp
sub
addr16
dec
push
or
loope
lcall
inc
cmpsb
jmp
outsl
add
in
imul
mov
enter
jne
cmp
push
dec
and
sbb
lods
ja
sarb
cmp
pop
iret
ror
sbb
jns
out
mov
addb
xchg
xchg
push
jbe
test
arpl
loop
int
or
mov
or
push
jmp
jp
mov
jmp
in
cld
jo
outsl
jge
jmp
mov
inc
repnz
pop
jmp
popa
out
aaa
push
mov
xchg
pop
cmp
sbb
or
sub
sbb
jl
mov
inc
mov
xchg
cmp
and
or
ja
lds
adc
xchg
rcrb
jmp
pop
mov
rcrl
push
xor
fs
inc
ja
jns
repz
and
scas
addr16
cmp
push
adc
jl
push
add
and
mov
pusha
adc
pop
xchg
stos
hlt
test
nop
jp
into
repz
movsl
std
xchg
jmp
and
mov
test
jns
mov
push
xchg
divb
pop
ret
lret
mov
mov
dec
xchg
jb
jne
mov
adc
sbbb
scas
push
mov
pop
hlt
adc
icebp
sub
mov
popl
jmp
fcomps
insb
jmp
jge
andl
push
loope
push
sbb
fdivp
jle
sub
sbb
adc
or
cmp
push
jmp
aas
or
add
add
xor
imull
or
pop
push
and
mov
aam
add
movq
jmp
sub
pop
leave
and
pop
mov
fwait
adcl
jge
and
test
mov
fwait
xor
fcom
dec
call
imul
aas
cs
pop
frndint
mov
lret
or
mov
pop
push
xorb
push
std
insl
sub
dec
jae
or
fistl
insl
mov
cltd
mov
psllq
mov
jmp
scas
cmc
or
mov
sbb
inc
cwtl
or
fldt
xor
jne
mov
lret
inc
jmp
nop
inc
adc
scas
sbb
jmp
rorl
inc
mov
out
pushf
sbb
cmpsl
jmp
aas
ss
xor
jne
mov
dec
jmp
xchg
icebp
pop
dec
test
add
into
push
insl
stc
lret
mov
int
ret
sahf
jmp
sbb
leave
xchg
fisubrs
or
adc
xor
jne
mov
lret
jmp
push
jns
cltd
mov
nop
mov
adc
mov
sbb
mov
ret
and
inc
lods
sbb
add
mov
iret
fisubrl
lea
es
lock
mov
outsb
dec
or
jge
shrb
dec
add
mov
push
dec
lcall
xor
jge
jmp
sbb
inc
int
cmc
and
subb
das
jp
add
xchg
lret
jecxz
pop
addl
in
scas
test
cmpsb
loope
insl
pop
enter
ss
mov
nop
jmp
in
adc
cs
xor
pop
xchg
mov
pop
jmp
imul
das
dec
cmpsl
push
mov
mov
stc
add
jno
xor
dec
lods
mov
push
jecxz
pop
jmp
mov
pop
dec
std
sbb
jmp
data16
aas
fsubr
xchg
or
jno
mov
int3
and
push
scas
repnz
repz
ds
jns
loopne
cld
lret
pop
hlt
popw
and
stc
lods
pop
mov
push
lcall
js
out
jl
outsl
lea
mov
jmp
ja
cmp
mov
enter
gs
push
cmc
lods
or
loope
pop
mov
and
test
cmp
aam
loop
daa
inc
push
sbb
sub
or
sti
dec
out
scas
push
out
ret
roll
arpl
jmp
test
inc
lods
cltd
xchg
jae
and
lcall
pushf
sub
mov
pop
cmpsb
sbb
shr
sub
enter
push
lret
addr16
xchg
push
cmpsb
clc
dec
js,pt
outsl
mov
mov
lods
aam
jns
and
popf
mov
dec
cld
xchg
push
sub
mov
cmp
addb
push
aas
and
lods
ljmp
inc
dec
cmp
int3
sub
jp
add
hlt
jmp
push
lods
push
xchg
lock
or
push
shr
sub
sub
sbb
xchg
jmp
lret
std
sbb
les
rcll
adc
lcall
inc
jmp
mov
daa
jbe
xchg
leave
pop
pop
push
loopne
clc
int
sti
ss
mov
push
dec
cmp
dec
std
pop
ret
icebp
pop
and
stos
into
cmpsl
in
push
mov
mull
out
mov
xchg
fsts
mov
pop
adc
outsb
jmp
push
jmp
xor
xor
push
inc
inc
pop
scas
enter
push
outsl
mov
jmp
jno
bound
cmpsl
into
icebp
mov
lods
mov
imul
mov
enter
mov
adc
cmp
push
sub
test
jecxz
jns
out
xchg
push
shll
mov
mov
sbb
sbb
or
jmp
push
adc
fsubs
jp
lods
in
sbb
test
mov
ret
pop
xchg
popa
inc
std
notb
inc
stc
shll
cmp
fldl
push
mov
cmp
mov
lods
mov
dec
stos
push
sub
mov
sub
repnz
divl
dec
leave
and
cltd
adc
cmp
sti
jmp
call
mov
jmp
out
push
or
jmp
jo
xor
adc
stc
shll
adc
enter
sub
lahf
sbb
fucomi
cmp
mov
mov
jo
mov
cs
jmp
mov
sbb
add
andb
dec
sub
mov
jmp
loopne
jge
int3
or
mov
adc
and
lahf
test
test
pop
xor
out
jmp
sub
push
ret
jmp
or
imul
fbld
lods
jmp
push
mov
test
xor
mov
lcall
rolb
test
cmp
loopne
mov
jbe
outsl
jmp
icebp
jg
loope
xchg
test
lock
mov
push
scas
jmp
mov
frstor
push
fwait
add
xchg
xor
jmp
inc
ja
jmp
aas
pop
rclb
xchg
stos
mov
fsubr
lret
out
sbb
ss
loope
inc
and
subb
xor
cmp
and
xor
test
add
mov
rcrl
cwtl
rep
xchg
sbb
out
enter
dec
pop
cmp
jmp
dec
inc
in
movsb
jmp
cmc
jmp
pusha
cmovge
out
in
mov
xlat
subb
and
jbe
daa
js
add
xor
sub
aas
mov
fisubl
jp
cli
mov
sub
movl
add
jge
jmp
bound
pusha
or
mov
jmp
icebp
mov
insb
mov
and
clc
push
daa
cmp
push
ljmp
lods
dec
push
test
and
add
repnz
cld
push
jmp
inc
or
jo
sub
xlat
jno
sti
pop
jbe
xchg
push
push
jmp
sub
cmp
xchg
fnstsw
jmp
push
inc
xor
cltd
scas
pop
mov
in
fisubl
mov
dec
jmp
inc
rolb
mov
repnz
addr16
cs
jge
jg
xchg
mov
jl
outsb
movsl
inc
mov
jmp
push
es
dec
and
mov
inc
inc
dec
lods
mov
pop
in
sub
and
jo
jmp
xor
mov
and
dec
sub
cmpsl
repz
movsl
push
jmp
add
push
scas
addl
xchg
imul
mov
pusha
imull
jno
xchg
sub
mov
in
push
sti
cwtl
push
mov
adc
fwait
stos
jne
pop
testb
adc
mov
jmp
into
clc
repz
fs
xor
lea
jmp
or
cltd
imul
adc
stos
jmp
repz
bound
add
pop
and
or
jle
fxch
dec
xchg
mov
mov
das
pop
outsb
fucomip
xchg
push
pop
mov
popa
xchg
mov
jmp
jb
xchg
or
jmp
out
push
pop
push
sarl
arpl
sub
and
lods
leave
sbb
cmpsl
imull
or
lods
ljmp
cwtl
cmc
popa
jmp
pop
sub
mov
mov
jno
orb
xor
fs
lahf
mov
cmp
lea
and
test
mov
and
data16
test
jmp
and
xor
jmp
add
xor
data16
sbb
dec
jmp
push
pop
mov
jmp
cmp
cmp
cltd
fstl
stos
mov
jmp
movsl
inc
test
scas
in
inc
aam
jmp
std
stc
bnd
xchg
cmc
repz
dec
adc
dec
fwait
data16
popa
jns
and
aas
fsts
adc
jmp
pop
add
jmp
jno
mov
pop
inc
mov
dec
lods
and
shlb
jmp
mov
cs
xlat
and
pop
push
ror
adc
jmp
aaa
fptan
jnp
xor
jmp
mov
pop
cli
out
lcall
inc
aas
daa
jle
sub
pop
fwait
mov
imul
loopne
loopne
rcll
test
fimuls
arpl
nop
insl
inc
rcll
mov
popf
add
sbb
and
xchg
dec
out
xor
inc
jmp
sub
dec
xchg
jmp
pop
add
popa
and
pop
jmp
in
push
xchg
mov
or
bound
jmp
add
sub
rcll
push
or
leave
ljmp
mov
dec
lods
loope
scas
pop
or
adc
test
out
jecxz
ljmp
and
sbb
imul
pusha
push
add
bnd
leave
sub
xchg
add
jmp
sahf
in
js
push
xor
divb
repz
popf
outsb
xchg
daa
push
sub
clc
lods
xor
ss
ljmp
rorb
add
pop
cwtl
xchg
test
xor
pop
push
xor
inc
sub
fistpl
mov
sahf
ds
mov
or
fnstenv
dec
and
jo
mov
fsubrs
sub
sti
xchg
jmp
stc
jmp
popa
mov
jmp
scas
xchg
pop
int
xchg
jb
lods
sub
lds
dec
or
jmp
shrl
icebp
dec
push
inc
jo
adc
push
sub
or
adcl
adc
pushf
jmp
sub
mov
aad
sbb
mov
xchg
int3
ret
pop
sub
addr16
fcomps
mov
fldt
test
lret
xchg
sbb
lods
adc
ret
paddw
popa
push
mov
mov
dec
into
scas
inc
xchg
ror
jmp
lret
clc
jmp
jnp
fistpl
add
sbb
xchg
ror
mov
dec
sbb
sti
cwtl
test
sbb
mov
lods
and
scas
aaa
iret
pop
jecxz
lods
cmp
pop
push
mov
sub
or
shl
test
sbb
inc
lods
cmp
imul
add
es
mov
mov
pop
xchg
aad
je
or
or
push
adc
scas
xchg
movsb
addr16
and
sti
cwtl
call
cmpsl
mov
out
pop
mov
enter
lret
sub
ret
es
nop
inc
cmc
cmp
lcall
sahf
sbb
jmp
pop
xchg
in
dec
inc
jmp
cltd
adc
inc
jo
xchg
divb
adc
jmp
cmp
lods
jmp
ss
add
mov
in
std
into
add
push
pop
jmp
inc
stos
aam
cltd
jl
jmp
xchg
cwtl
mov
jmp
inc
jbe
mov
clc
jns
scas
cs
mov
cli
or
or
mov
dec
dec
out
jl
das
out
je
add
jmp
pop
cmp
repnz
jb
pusha
test
fildll
ss
mov
in
jge
mov
pushf
ret
xchg
int
in
sub
or
add
xchg
adc
push
mov
inc
pop
dec
jg
adc
seta
xchg
lods
push
insl
mov
adc
jns
scas
out
sbb
pop
sbb
push
stos
mov
jmp
mov
iret
dec
fs
addr16
adc
rcrl
or
outsb
dec
jmp
and
jbe
jnp
scas
sbb
loopne
mov
bnd
nop
pop
mov
mov
add
mov
xchg
jmp
test
inc
hlt
movsl
add
sub
movsl
popf
jmp
insb
inc
rcr
sbb
call
sub
rorb
xchg
mov
jmp
pop
xor
jmp
push
mov
dec
jmp
out
or
ret
sub
fmuls
fwait
mov
je
hlt
sti
pop
pusha
andl
mov
fwait
or
mov
xchg
or
mov
or
jp
lret
sbb
ja
sub
rcll
sub
movsl
cmp
sub
or
mov
jl
out
push
jmp
imul
insl
pop
fsubp
nop
adc
cmpsb
mov
stos
imul
push
dec
push
push
insb
push
add
adc
popf
sub
and
or
mov
fsubl
xor
cld
nop
add
out
add
clc
mov
sub
jmp
push
call
hlt
jmp
xchg
mov
mov
mov
insb
xchg
jmp
aad
cmpsb
lods
repnz
pop
jmp
pop
clc
cmp
and
rcrb
jmp
and
push
jmp
popa
cmp
jb
bound
inc
sbb
jmp
sbb
mov
dec
cmp
loopne
or
cli
mov
repnz
or
leave
iret
jl
neg
in
jmp
xsha256
cmpsb
push
dec
lcall
jl
mov
jmp
and
leave
dec
jmp
stos
sarb
sbb
pop
jmp
jle
mov
jmp
std
stc
fwait
mov
in
mov
dec
lds
ljmp
add
fstpl
imul
pop
cmp
push
jmp
aad
scas
shll
jno
xor
push
xchg
lret
push
arpl
sti
inc
add
cmp
mov
fdivr
dec
mov
lods
sbbb
cmpsl
xor
popa
incl
mov
jmp
lret
mov
rcll
loope
icebp
aad
mull
and
loopne
pushf
in
cmp
push
cmpsl
fwait
mov
jmp
rcll
xchg
icebp
scas
and
pop
xchg
mov
jmp
sub
nop
push
pusha
movsb
xlat
jmp
sbb
jge
pop
pop
jle
movsl
sbb
aas
call
pop
or
enter
sub
add
push
cmpl
dec
loop
pop
xchg
lret
jmp
push
ret
mov
sub
push
mov
sbb
rclb
fstpl
lods
push
aaa
pop
outsl
into
cmpsb
sbb
mov
inc
stos
xorb
xor
xchg
xor
sbb
sub
out
add
mov
pop
xlat
call
add
jmp
cmc
adc
nop
sub
xchg
xchg
jo
sub
mov
adc
inc
or
aaa
enter
cld
sbb
jge
in
mov
adc
test
fisttpll
add
lods
xchg
std
push
sub
aad
push
adc
sbb
jle
pop
mov
ds
cs
and
pushf
int
ja
mov
sub
in
inc
jmp
hlt
lock
push
inc
jmp
mov
mov
and
lods
lods
imul
xchg
mul
je
aaa
test
add
das
jmp
fwait
cld
addb
shr
ds
lods
pop
sub
jb
mov
sbb
xchg
popa
xor
mov
xor
push
jmp
push
jb
mov
jno
inc
shll
rep
push
adc
sub
dec
jmp
xchg
data16
fists
dec
xor
mov
scas
sub
sbb
cmp
lds
push
out
adc
or
sbb
daa
push
sbb
jmp
mov
and
cmc
xor
ret
xchg
jg
loop
shll
lret
pop
insb
in
jl
dec
in
jnp
xchg
insl
or
pop
sub
lods
fbstp
int3
pop
pop
hlt
mov
addr16
jecxz
lock
cmc
mov
ret
xor
out
jo
adc
xchg
sbb
sbb
add
ja
in
push
push
jmp
sub
test
jmp
add
and
movsl
and
loope
xor
sub
notb
nop
pop
jmp
imul
scas
jg
stos
cli
mov
mov
cmp
enter
lahf
loop
jecxz
shl
inc
jmp
test
fucomp
into
mov
sub
dec
jne
out
lods
dec
dec
fistpl
inc
xchg
adc
or
fbld
in
dec
mov
jg
sbb
pop
xor
in
mov
jmp
flds
dec
adc
cmc
imul
jmp
int3
pop
setp
jmp
nop
add
adc
jge
notl
cmpsb
jmp
stc
shlb
outsb
pop
stos
and
jmp
or
mov
outsb
mov
mov
clc
push
pop
xor
mov
inc
shr
push
lcall
jmp
xor
or
ret
jnp
lods
ficoms
mov
sbb
add
push
insb
mov
jle
mov
jbe
std
adc
xchg
and
pop
mov
lret
mov
mov
inc
lea
mov
div
fiadds
mov
sub
repnz
stos
cmp
mov
or
mov
xor
mov
xchg
add
loope
or
test
and
mov
insl
test
scas
repnz
mov
push
fmuls
add
aam
cld
sub
sub
dec
jnp
lcall
shll
mov
mov
icebp
mov
jmp
pushf
xor
fcoms
jmp
cmp
mov
mov
notb
test
dec
push
pushf
jmp
jmp
adc
aas
pop
cmp
dec
mov
jmp
mov
push
jne
fildll
ficompl
xor
jmp
ss
outsl
fildl
sub
lret
rcll
hlt
jmp
jge
test
ror
jmp
and
mov
jns
push
cmp
scas
es
sub
or
jmp
and
jmp
lret
mov
cmp
das
repnz
aad
jne
push
add
jle
mov
xchg
jmp
add
sub
stos
adc
and
or
outsb
ss
cmpsb
adc
mov
hlt
pop
pop
lock
test
push
stos
test
shr
mov
in
outsl
ljmp
aad
and
cmp
cmp
sub
xchg
sub
dec
push
and
outsl
inc
dec
push
jmp
mov
popa
adc
lret
and
lahf
inc
testb
in
push
push
adc
add
jmp
cli
dec
scas
sub
and
movsl
sub
push
idivb
pop
pop
xchg
xchg
lods
xchg
addl
cmp
jne
jge
and
cwtl
sub
test
xchg
jmp
pushf
dec
sbb
mov
imulb
jmp
fadds
test
or
xor
das
fucomi
mov
dec
shrl
jmp
orb
stos
xor
and
xchg
scas
push
paddusw
insb
daa
mov
int3
mov
mov
fdivrl
daa
rolb
fnsave
fwait
movsb
push
push
or
push
jmp
pusha
test
push
or
mov
dec
icebp
push
and
daa
dec
imul
xchg
repz
mov
imul
xchg
sti
cmp
or
loope
out
inc
movsl
pushf
mov
in
mov
mov
int3
shll
dec
jmp
lahf
lret
pop
inc
jns
outsl
fwait
dec
sub
add
inc
jb
mov
fmuls
push
push
mov
lods
lods
sbb
hlt
pmovmskb
dec
and
lret
lcall
lar
jmp
mov
call
jl
or
lods
inc
iret
ds
jmp
ja
call
std
daa
hlt
jmp
std
dec
jnp
inc
cwtl
jmp
pusha
sub
jo
aad
jmp
cmc
rcrl
loopne
adc
scas
insl
inc
je
sub
jmp
xorl
test
enter
inc
jae
mov
out
mov
jno
call
dec
inc
ret
jmp
adc
push
jmp
push
adc
and
push
and
sbb
jmp
scas
pop
fcmove
cmp
outsb
ja
shl
sti
pop
adc
jmp
sub
jecxz
cmp
mov
cmp
pop
js
mov
xchg
fiadds
jno
jbe
dec
lods
jmp
mov
stc
push
fwait
mov
cltd
jmp
insl
xor
cmp
dec
aas
lret
loope
data16
mov
xlat
jmp
mov
and
cmp
incl
pop
rcl
leave
add
push
sbbl
cmp
fdiv
jmp
outsl
inc
mov
out
mov
jmp
in
stos
push
ss
lods
daa
jp
sub
into
std
popf
and
loop
sbb
enter
lods
or
mov
dec
sub
insl
sub
shrl
out
fdivp
and
aas
jmp
pop
sbb
mov
jmp
ret
jb
mov
jp
lods
les
jne
add
or
test
and
in
push
into
scas
pop
jmp
dec
cmp
in
push
or
mov
xchg
sbb
dec
mull
add
repnz
add
push
insb
push
jmp
lret
xchg
aaa
insl
scas
lods
fdivrl
iret
ljmp
inc
int3
xor
insl
jmp
push
stos
mov
cmp
dec
add
mov
adc
sbb
test
jmp
jb
outsl
mov
dec
jl
decl
into
cmpsb
and
fistps
dec
iret
movsl
jmp
lcall
ret
jns
jne
cmc
inc
push
dec
jmp
mov
push
fsubrl
mov
inc
into
leave
lea
jmp
mov
xor
or
je
outsb
dec
lock
mov
dec
outsl
cmc
leave
push
inc
mov
xor
int3
ljmp
xor
imulb
mov
push
pop
jmp
sbb
cmpsl
popa
jmp
stos
xor
shll
int3
jmp
out
ficoms
scas
cmpsl
dec
mov
aas
mov
jmp
cltd
dec
das
stos
jb
and
jmp
push
scas
int3
daa
popf
adc
dec
cmp
imul
jmp
movsb
add
xchg
or
dec
repz
ret
lods
dec
cmc
gs
xor
mov
sub
cmp
cmp
pop
push
rcll
cmpsb
test
lcall
addr16
lret
xcrypt-cfb
cmpsl
pusha
cmp
inc
pop
jns
shlb
jne
es
push
dec
test
dec
push
add
adc
jmp
and
je
xor
jg
mov
mov
xchg
inc
mov
jmp
adc
mov
push
faddp
cmpsl
sub
loope
mov
into
test
popa
jo
loop
jns
mov
scas
sub
pop
mov
lods
add
or
mov
iret
and
adc
fchs
negl
xchg
dec
lock
mov
push
in
add
lods
adc
fbld
sub
cmpsb
adc
sarl
sub
push
xchg
jecxz
mov
js
pop
dec
push
or
jnp
dec
stc
adc
popf
xorb
mov
mov
daa
jmp
mov
or
adc
jmp
ss
imul
jmp
or
or
scas
shlb
outsb
cmp
xchg
out
sub
cmpsl
add
test
insb
sbb
adc
int
sti
mov
pop
xchg
ror
sub
dec
movsb
adc
and
adc
fstpl
int
pop
mov
xchg
and
cs
sbb
inc
jmp
lret
mov
pop
pop
mov
dec
push
push
ljmp
sub
jp
dec
push
dec
fbstp
mov
outsb
jmp
in
and
mov
call
enter
lods
shll
lock
and
jo
shll
jns
cli
inc
test
into
mov
mov
hlt
pop
sti
cmp
cmp
test
clc
cmpsl
dec
in
or
jmp
sarb
jecxz
enter
lahf
stos
leave
fistps
sub
cmp
sahf
sub
scas
or
cs
cmp
jmp
int
mov
jmp
mov
sti
fucomi
sbb
imul
cmpsl
adc
jge
stc
push
sbb
enter
pop
mov
jmp
and
jns
adc
scas
dec
sti
popa
jp
lds
mov
out
inc
xorb
lea
int3
adc
jmp
ja
shr
test
sub
insb
push
or
jmp
aam
pop
fldt
repz
mov
or
ja
cmp
push
loop
ss
shll
jmp
dec
cmp
test
jmp
movmskps
or
test
push
sahf
xchg
lcall
xor
jmp
nop
outsb
xchg
ret
fucomi
out
xor
mov
push
iret
pop
imul
jnp
and
add
and
repnz
fcmovbe
scas
cmp
add
cmp
nop
stos
cmp
stos
lods
jno
test
lss
fldt
into
pop
add
mov
push
lods
pushf
out
mov
push
xchg
orb
ret
or
or
outsb
orl
dec
jmp
adc
mov
stos
adc
xlat
shl
faddl
xchg
mov
fstl
popa
xchg
jl
xchg
sbb
shl
loopne
fwait
mov
incl
xor
add
cmp
cld
mov
jp
jmp
xorl
repnz
or
ljmp
jmp
jbe
fimull
lods
mov
xchg
sub
jmp
push
mov
ret
leave
and
mov
fldenv
pop
and
push
pop
and
inc
fwait
xchg
movsl
pop
sub
add
xor
das
sub
out
mov
insl
stc
inc
aam
test
fcomi
xchg
or
adc
sbb
mov
inc
mov
and
lret
jne
mov
pop
push
popf
xor
fsubrl
jmp
rolb
test
loopne
std
iret
divb
mov
clc
pop
xor
sbb
jnp
jecxz
or
push
sub
test
jmp
lds
out
lods
inc
jmp
dec
sub
push
cmp
test
jmp
mov
lock
and
sbb
jnp
mov
dec
xchg
dec
sahf
push
add
call
push
sub
jle
cmp
jns
inc
or
es
xchg
imul
pop
mov
cltd
jmp
in
lahf
push
inc
sub
jmp
movsl
mov
xlat
mov
rcll
cltd
inc
lea
jecxz
cmp
imul
push
sbb
sub
pop
inc
xchg
or
pop
sub
sub
or
mov
sub
sti
mov
arpl
xor
repz
adc
push
mov
clc
jbe
push
fimull
mov
xchg
in
inc
fimuls
pop
mov
jno,pn
test
mov
inc
jmp
call
lods
jmp
mov
pop
jmp
mov
lahf
jmp
or
fwait
lods
movsl
push
xchg
icebp
push
test
jmp
pop
pop
bound
sub
and
mov
sahf
mov
sar
jmp
mov
adc
jmp
sbb
lret
mov
sub
and
es
push
or
lods
jmp
out
cmpl
iret
mov
gs
stos
xor
and
bound
cmp
aam
imul
inc
push
dec
repnz
mov
lahf
jmp
pop
fdivl
sbb
xchg
xchg
lods
fstl
popf
pop
insb
imul
cmpl
xor
out
popf
stc
jbe
outsl
xchg
insl
js
jle
jmp
lds
pusha
xcrypt-ofb
cmpsl
jmp
push
adcb
adc
and
ds
std
push
pop
imul
loope
test
mov
lods
cmc
pop
cld
test
push
scas
jmp
iret
movsl
je
inc
loop
push
fimuls
lods
jge
popa
in
mov
jb
push
add
lret
das
enter
pop
push
jmp
scas
jne
sub
idivl
clc
lret
sbb
imul
add
sbb
cmp
jmp
loope
leave
sub
int3
jmp
jle
dec
insb
pop
inc
mov
jl
into
push
cmc
push
loope
sub
jge
lea
jmp
out
int3
clc
inc
add
push
scas
repz
in
js
xor
fcomps
inc
xchg
push
jl
jmp
ret
mov
sub
outsb
jmp
and
rcrb
out
stos
jmp
mov
inc
lods
bnd
cmp
push
insl
dec
xchg
xlat
pop
jnp
mov
mov
jb
loope
fpatan
imul
dec
sbbl
lahf
dec
xlat
lods
sbb
or
jmp
or
in
and
cmp
pop
mov
jmp
stos
xchg
sub
jns
dec
xor
push
les
jmp
push
movsl
jb
test
shrl
sub
jge
into
iret
jb
dec
jle
out
outsl
das
lods
sahf
add
imull
fs
jmp
push
xchg
mov
adc
fldpi
ss
xor
mov
fsubr
mov
int3
loopne
lock
ljmp
decl
jmp
fidivrl
pop
loopne
mov
daa
xchg
mov
and
sbb
sarl
cli
jmp
lods
push
shlb
mov
adc
lods
pause
mov
lods
pop
adc
cwtl
or
cmp
imul
jmp
int3
cmpsb
dec
out
jecxz
dec
pop
pop
mov
jmp
shlb
mov
sti
sub
sahf
jmp
mov
cmp
cli
es
int3
cmpsb
jmp
lret
inc
dec
mov
pushf
int3
or
in
test
sub
jle
pop
icebp
stc
fstpl
jecxz
jp
sub
mov
dec
jmp
dec
wrmsr
dec
adc
mov
call
sub
push
enter
cmc
cmpsl
cmp
out
jmp
xchg
pusha
mov
ja
fdivs
xchg
lods
call
fisubrs
mov
or
pavgb
xchg
cmp
adc
mov
mov
in
and
push
mov
in
lods
bound
sahf
std
mov
jmp
loopne
pand
jmp
add
orb
imull
pop
std
jae
inc
stos
mov
ds
out
popf
push
jmp
lock
or
inc
mov
mov
and
or
je
jmp
js
shlb
test
lods
fcmovnbe
inc
or
jbe
bound
jmp
shlb
dec
loop
jmp
imul
imul
dec
fbstp
adc
cmpsb
sub
jg
in
rcrb
out
sbb
xor
outsl
push
pop
cmc
mov
lret
sbb
rolb
mov
xchg
movsb
jmp
int3
sub
jmp
call
cmp
jmp
sahf
sbb
sbb
movsl
jno
add
lret
movsb
subb
xchg
dec
jmp
add
mov
imul
jne
es
push
cmp
or
pop
mov
hlt
nop
pop
cmpsb
adc
sahf
icebp
movsb
daa
add
pop
jmp
xchg
adc
stc
push
sub
cld
jnp
ja
and
push
and
aas
rol
inc
or
jns
popa
aaa
imul
push
cwtl
xchg
arpl
les
loop
jmp
pop
sub
push
cli
cmc
lret
cs
or
cltd
mov
cmpsb
jmp
cli
call
xchg
sub
inc
xor
or
sub
mov
jbe
jmp
imul
enter
lods
xchg
jl
test
gs
loope
and
adc
dec
or
lods
cmpb
jmp
shrb
cltd
or
into
inc
inc
mov
mov
ljmp
addb
adc
dec
dec
jg
pusha
and
xchg
lods
pushf
push
adc
sbb
stos
push
jmp
ds
adc
mov
dec
push
adc
scas
jg
jmp
test
xchg
nop
fldpi
sub
sub
pop
jae
jmp
xchg
test
mov
xchg
mov
lock
xchg
jmp
cmpsl
or
lret
jmp
pushf
xchg
sbb
mov
std
jmp
aam
mov
jmp
pushf
testb
jp
jmp
mov
sub
inc
lods
ja
or
or
jmp
jecxz
lods
sbb
es
test
add
dec
imul
std
sbb
or
scas
inc
and
or
sub
loop
sbb
mov
jbe
mov
out
mov
stos
lods
mov
mov
pop
es
ss
push
inc
and
add
mov
mov
jmp
cli
mov
imul
ret
out
cmp
dec
inc
pushf
arpl
jmp
mov
lea
xchg
loop
xor
push
or
int
adc
jmp
and
pushf
lods
ljmp
pop
cmp
push
push
arpl
into
xchg
shll
mov
inc
adc
cmp
mov
cld
stos
sbb
add
jmp
sub
movsl
ljmp
cmp
pop
shrb
adc
daa
jmp
rol
fisttps
jne
xor
mov
sti
mov
fistl
xchg
jmp
addl
outsl
test
rcrl
and
cmp
jmp
testb
inc
pop
jmp
gs
stos
push
shrl
mov
cmpsl
or
or
data16
push
call
imul
sysenter
rorl
jecxz
fmuls
dec
xor
or
and
mov
jmp
add
inc
push
es
fnsave
test
mov
pop
dec
fistpll
cwtl
je
push
and
xchg
adc
sub
add
jmp
inc
movsb
or
mov
loopne
push
xor
stos
cmp
push
mov
sbb
ljmp
xchg
aas
add
mov
daa
or
mov
jb
nop
sbbl
mov
jmp
pop
pop
outsl
and
xchg
js
pusha
jmp
adc
iret
xchg
into
ret
outsl
sub
jmp
loope
lret
jmp
popf
push
push
outsb
bound
cltd
mov
imul
mov
mov
mov
and
test
jmp
dec
mov
enter
jmp
test
sub
add
jns
int3
or
mov
dec
sbb
pop
jmp
popf
adc
pop
adc
dec
push
push
jmp
fnstcw
mov
stos
or
jns
or
sti
mov
testb
test
mov
ja
insb
jmp
inc
ror
or
push
dec
pop
add
sti
ja
cmpb
mov
outsb
enter
xor
inc
xor
aam
push
gs
push
cmp
adc
repnz
jmp
in
imulb
jmp
xor
mov
cmpsl
inc
pushw
mov
cli
lods
mov
decl
sbb
dec
mov
mov
in
cmpsb
jno
lods
dec
ss
xchg
pop
notl
int
cmp
cmpsl
pop
notl
jnp
jmp
inc
push
lcall
scas
xchg
mov
bnd
outsb
sbb
adc
fldt
aaa
pop
hlt
jns
pop
mov
negl
popf
dec
xlat
xor
cmp
into
jb
aad
ret
mov
xlat
test
lods
adc
and
or
mov
pop
ja
sub
add
aas
jmp
sub
rcll
daa
xlat
arpl
shrl
loopne
sub
sub
or
mov
imulb
jmp
jne
xchg
out
push
jge
scas
push
mov
push
and
imul
in
arpl
jecxz
push
mov
push
jmp
add
and
jmp
pop
adc
jo
mov
jmp
loope
jae
movsb
xchg
jmp
xchg
mov
pusha
mov
jmp
xlat
out
jb
jl
leave
jmp
cwtl
xor
push
jno
sbb
enter
adc
pop
jmp
mov
addr16
mov
and
dec
stc
inc
mov
adc
andb
lods
div
aas
and
shrb
int3
and
jmp
je
dec
jns
fldcw
jmp
push
test
fs
mov
cmp
and
and
and
sbb
loope
out
xor
sbb
push
jo
inc
jle
push
stos
imul
and
xchg
jecxz
cmpsl
sbb
add
test
cmpsb
scas
jns
adc
ss
push
cmp
jl
push
in
fstps
in
outsb
jnp
xor
dec
mov
lock
test
ret
inc
push
jns
mov
popf
mov
and
inc
sbb
sub
add
stos
sub
inc
or
sub
xor
jmp
cmp
imul
insl
sbb
add
cmp
push
scas
std
test
add
rorl
jle
and
and
mov
enter
mov
sbb
lods
push
ljmp
adc
aam
hlt
jmp
mov
xorb
sbb
inc
lret
dec
jmp
pop
dec
shll
adc
jmp
push
loopne
cltd
dec
xlat
pop
push
daa
out
lods
in
mov
imul
xlat
jg
int3
and
arpl
or
xor
into
jne
repnz
rclb
mov
daa
pop
aam
sbb
xor
jmp
or
mov
mov
adc
and
mov
mov
sub
bnd
adc
or
movsl
cmc
and
cmp
out
std
into
cmp
or
cmpsl
mov
jmp
jbe
fists
lret
out
scas
adc
push
cltd
adc
mov
ret
xchg
cld
xchg
mov
xor
jmp
sub
push
jge
into
das
scas
adc
dec
jb
push
daa
pop
arpl
sbb
adc
fmull
jmp
push
jno
xchg
sbb
xor
adc
dec
adc
jmp
xchg
inc
lahf
mov
das
rorb
pop
sahf
add
sar
popa
rorl
jmp
and
mov
jmp
cmp
leave
repnz
mov
xchg
sub
mov
xor
cmp
inc
mov
out
xor
mov
lds
into
loopne
push
push
daa
sbb
scas
roll
adc
pop
inc
jmp
out
shrb
je
aas
clc
push
sti
inc
adc
cmp
jne
lods
mov
dec
lods
sbb
jmp
xor
outsl
adc
imul
mov
xchg
lods
sbb
push
clc
mov
and
outsb
jp
xchg
cmp
inc
adc
or
gs
out
mov
xchg
jmp
and
hlt
daa
adc
outsb
sub
addb
cmp
jmp
jae
cmp
adc
add
sub
stc
push
sbb
nop
push
add
jmp
popf
mov
jmp
fbstp
cwtl
jmp
lret
and
mov
mov
jbe
xchg
movsl
sub
push
ljmp
jmp
call
sub
subb
lods
imul
cmp
jmp
les
lret
xchg
shr
jmp
and
add
imul
mov
jmp
mov
jbe
lods
add
int
add
mov
imul
sbb
dec
adc
jbe
cwtl
scas
sahf
and
adc
cli
insb
pop
cld
inc
clc
fucomi
sbb
pop
mov
push
lret
mov
fisubrl
pushf
mov
adc
xor
sub
push
jb
loope
ja
jmp
xor
loope
jge
pop
jmp
ds
and
push
add
int3
adc
push
jmp
and
lret
in
aaa
repz
pop
sbb
jecxz
xchg
mov
xor
push
jmp
push
pop
mov
loope
jmp
dec
cld
sub
jae
outsb
lods
outsl
fdivs
scas
pop
popf
pop
hlt
stos
pop
sbb
cmp
in
ja
xor
lds
sub
movsb
mov
adc
dec
js
cmpsb
repnz
push
fistpl
outsl
insb
mov
jmp
push
lods
pop
xchg
sub
mov
jmp
ret
cmp
in
lods
sub
aad
int3
or
lds
jmp
and
out
aam
mov
xchg
dec
mov
arpl
dec
adc
sarb
insl
mov
outsl
mov
mov
fcmove
cmc
mov
and
jmp
or
mov
cs
inc
aas
push
jmp
shrb
std
imul
xor
outsl
or
push
lret
adc
xchg
mov
cli
cmp
lcall
lods
adc
gs
mov
cmpsl
dec
jmp
bound
shll
insb
scas
dec
leave
shrl
jb
test
mov
stc
pop
or
jmp
stos
push
cmc
inc
or
xor
and
out
lods
and
dec
xchg
push
inc
sbb
negl
mov
bnd
mov
push
lock
and
in
rcrb
bound
and
leave
aaa
inc
xchg
sub
insl
fisubl
or
pop
push
pusha
sbb
mov
or
scas
mov
jo
xchg
jmp
scas
out
cmc
sub
clc
outsl
mov
dec
jmp
shr
mov
and
jbe
mov
jo
xchg
subl
inc
jmp
xor
and
sbb
daa
lock
divb
lock
push
sbb
jmp
mov
xor
push
jmp
push
mov
inc
test
sub
xor
jge
jne
sbb
add
sbb
stc
lcall
je
push
push
cmc
scas
jmp
add
insl
jmp
sti
std
ss
pop
shlb
loopne
dec
xchg
sub
adc
aas
orb
scas
sub
add
fidivl
dec
popa
repz
mov
sti
mov
xchg
std
sub
orb
and
pop
add
xchg
xchg
push
and
add
pushf
sub
fucom
pop
and
pop
and
or
mov
fsubp
clc
jnp
xor
lods
jmp
pop
stc
mov
shr
es
std
xchg
jnp
jmp
add
loop
jmp
jecxz
xchg
ljmp
mov
jo
mov
cmp
pop
sub
mov
pop
pop
or
loope
or
sti
sub
cmp
iret
jmp
jo
daa
roll
dec
sbb
sbb
xor
les
push
push
roll
inc
add
xor
aam
sub
test
cmp
cmp
je
sbb
or
in
xor
shll
or
dec
xor
iret
add
jmp
cmc
mov
sbb
jmp
sbb
push
mov
pop
and
inc
cli
out
jno
mov
push
mov
pop
test
cmpb
push
adc
int3
or
sub
mov
lods
or
lcall
jb
outsb
roll
sub
jmp
adc
jnp
orb
xor
mov
sarl
das
push
inc
mov
repz
dec
cmpsl
jmp
inc
push
shlb
xor
adc
mov
sub
aaa
add
fidivs
movsb
mov
push
insb
mov
sbb
adc
pop
xor
in
pop
in
cmp
scas
jbe
cmc
sbb
cmp
imul
mov
mov
mov
push
mov
lods
jmp
fidivrs
dec
outsb
cmp
lret
jmp
and
mov
hlt
jo
outsb
xlat
test
inc
popf
mov
and
mov
sbb
repz
fucomip
xchg
mov
or
jg
int
inc
xchg
jns
fmuls
cmp
pop
cmp
cltd
xchg
push
lods
dec
ret
pop
jle
and
add
sbbl
sub
in
or
roll
popa
dec
jmp
adc
and
test
and
int
loope
mov
je
cmp
jb
jmp
outsb
inc
xchg
repnz
test
dec
jl
xor
jo
or
cmp
cmp
jb
lret
data16
loop
mov
stos
jmp
push
popa
sbb
jecxz
ss
xor
push
xlat
jecxz
lcall
stos
cmp
testl
push
inc
lods
mov
ss
test
gs
inc
fisubrs
les
jmp
mov
scas
gs
outsb
daa
imul
pop
inc
cmp
sbb
jmp
loop
mov
and
aad
rcr
jo
aam
jmp
leave
sti
addr16
mov
lods
jmp
adc
por
in
subl
xchg
jmp
push
in
add
sbb
dec
pop
test
ss
add
in
es
cmp
push
cmp
outsl
inc
sbb
sub
mov
cmp
mov
cmp
outsl
test
pop
test
lock
pop
mov
mov
inc
iret
add
pop
sub
fsubl
sbb
inc
inc
jmp
stos
cltd
popa
dec
xor
or
and
jmp
das
jmp
sbbb
jmp
jle
mov
cmp
xchg
jmp
xor
and
rcr
mov
mov
cmp
jmp
jge
dec
mov
ret
aad
mov
sub
je
mov
sahf
cmp
jmp
cmp
orb
add
push
push
fcomip
push
stc
into
jecxz
jmp
mov
inc
push
adc
mov
lret
xchg
jbe
jmp
bnd
inc
push
jmp
aam
xlat
push
xchg
adcb
lods
je
lret
repz
or
mov
arpl
pusha
pop
push
jg
dec
jmp
lahf
pop
fwait
outsl
shll
fsubs
pop
and
and
xchg
mov
jmp
sti
fnstsw
inc
sbb
jmp
ja
jo
popa
or
jl
xchg
push
movsl
dec
imul
in
adc
xchg
push
scas
dec
xchg
sarl
push
push
cmp
dec
lods
cmp
cs
andb
jmp
add
repnz
fisubl
xchg
add
inc
seta
xchg
cmp
andl
bound
xor
xchg
sub
stos
loop
or
shr
outsb
xchg
xor
mov
xchg
loope
mov
push
or
dec
vunpckhps
sbb
cmpsl
adc
fs
rcl
iret
imul
jp
jl
jecxz
and
mov
mov
dec
pusha
jmp
jne
rcrb
hlt
xchg
jmp
adc
stc
mov
or
lcall
pop
jmp
test
outsb
sub
adc
test
cmp
jmp
xchg
pop
xor
scas
jmp
add
xor
jns
sahf
lcall
jmp
in
and
scas
insl
cmp
jge
pop
xchg
or
movsb
jmp
cmpsb
fptan
mov
jmp
pop
and
imul
jmp
xchg
popa
sbb
mov
pop
scas
cmp
inc
and
subl
stos
xor
repz
cmp
gs
sub
pop
mov
inc
push
inc
fucomi
dec
jb
int
push
jne
dec
xor
cmc
sbb
jmp
sub
imul
xchg
dec
adcl
inc
fmuls
std
das
jmp
ffree
test
ficoms
negl
fcomi
xchg
mov
dec
jmp
in
and
cmpsl
enter
cmpsb
sub
shr
mov
mov
jge
xchg
in
cmp
bound
mov
sub
jo
mov
jmp
mulb
xor
pop
or
dec
or
add
jmp
cmpsl
daa
adc
sbb
push
das
mov
or
cmp
mov
or
xor
leave
lcall
push
nop
shl
pop
jmp
xor
ret
std
jmp
sub
dec
jmp
fcmovbe
inc
adc
lcall
movsb
or
dec
mov
fwait
in
dec
ds
roll
daa
add
pop
xchg
adc
bound
jg
push
inc
ret
push
out
jl
or
jmp
push
sub
out
cltd
pop
jmp
shlb
or
dec
cmp
imul
and
cmp
mov
das
dec
sbb
ret
incl
mov
leave
imull
cmpsb
inc
xchg
sbb
jmp
mov
test
test
or
xor
push
mov
in
outsb
dec
loop
clc
pop
xchg
add
jmp
xor
push
pop
cmpb
ret
inc
lret
mov
pop
cwtl
and
jmp
sbb
add
ljmp
xchg
cmp
jmp
arpl
sahf
add
jmp
das
or
and
mul
sbb
mov
jmp
sbb
dec
inc
inc
push
jmp
enter
push
popa
sti
jmp
or
rcrl
jmp
outsl
jno
mov
xchg
fxtract
jne
icebp
jmp
lods
pushl
fisttps
mov
testl
out
or
xchg
mov
jmp
fists
imul
pop
add
cli
test
mov
pushf
push
push
inc
pop
add
jle
test
sub
push
popf
aam
xchg
sub
sub
xchg
loope
repz
outsl
fdivr
popl
aas
jmp
and
add
out
scas
inc
cmp
jmp
repz
movsb
cmc
ja
lods
jne
js
gs
and
sarl
and
push
test
cmpsl
fisubrs
push
sar
inc
jnp
dec
or
sbb
pop
jmp
popa
pusha
push
xchg
pop
push
popf
xor
dec
decb
mov
lds
int
mov
and
dec
sti
and
ja
out
jmp
dec
ljmp
xor
push
and
into
mov
cmp
inc
and
daa
sub
jns
lds
repnz
jmp
pop
push
insb
inc
sbb
xor
sub
pop
scas
mulb
jmp
xchg
xlat
adc
add
test
and
lret
jmp
xchg
add
andl
push
js
lret
xor
mov
sbb
scas
xchg
mov
push
inc
inc
inc
movsl
add
cmpsb
dec
lods
pop
jecxz
sbb
cli
gs
shlb
fsub
imull
jmp
in
aas
mov
jno
add
fprem
in
dec
stos
add
fildll
rolb
fmull
and
dec
sub
jl
push
xchg
sbb
add
sub
fcompl
dec
adc
jmp
push
jge
fists
jmp
pop
fdivp
xorl
jmp
sub
lret
out
mov
push
dec
test
ss
cmp
aam
repz
dec
adc
jge
sahf
test
out
rcrl
jmp
in
mov
cmp
xchg
ds
cmp
pop
out
and
loope
test
scas
mov
cmpsl
imul
jle
adc
mov
iret
sub
daa
mov
aaa
jbe
fistl
or
movsb
pushf
outsb
nop
insl
pop
imulb
push
aaa
or
lods
cmc
pop
pop
cld
push
clts
mov
pop
mov
movaps
data16
lods
daa
mov
xchg
cmovge
jmp
xchg
ss
adc
mov
jmp
pop
push
adc
loope
push
fs
test
loop
and
or
mov
ss
cmp
cld
cmp
cli
xor
sub
jmp
xchg
mov
pop
jmp
int
sbb
popf
sahf
mov
jmp
fnstcw
pop
idivb
pop
jb
loop
mov
iret
adc
jl
out
in
data16
fstpl
stos
jmp
jo
dec
cld
cli
mov
cmpsb
jb
mov
fwait
pop
mov
cmpl
fisubrl
sbb
stos
lods
pop
sub
sbb
test
xchg
sub
sub
repz
in
adc
jp
and
out
pushf
scas
cltd
mov
in
dec
xor
or
jmp
ja
repnz
and
mov
cwtl
pop
jmp
sub
mov
cs
out
dec
jbe
inc
inc
cmp
repz
push
aam
add
add
jns
test
and
push
jmp
xor
xchg
test
ret
jmp
pop
in
lds
insb
mov
repnz
inc
dec
int
jne
pop
add
cltd
movsb
ja
push
movsb
mov
or
call
jge
jmp
das
std
and
adc
fdivs
mov
sub
lahf
setp
push
sub
cmp
adc
ds
sbb
mov
dec
xchg
jmp
inc
pop
xchg
mov
mov
and
stc
lret
sbb
inc
mov
and
add
xor
jmp
adc
pop
clc
loop
and
js
sub
addb
pop
imul
add
lret
daa
shr
jb
inc
sub
mov
jmp
sti
in
insb
jae
sub
mov
insl
int3
push
mov
popf
xchg
adc
xor
jmp
and
mov
lods
stc
push
jp
push
jmp
shll
enter
mov
and
out
ret
cld
jnp
sub
xchg
inc
jno
push
add
pop
lock
lods
into
movsb
fsubrp
xor
cmp
jmp
mov
mov
sub
jae
nop
pushf
sbb
lret
dec
imul
sti
xor
popf
leave
jmp
mov
test
sub
jp
jmp
adc
movsl
mov
call
jg
mov
in
lods
pop
jecxz
push
or
xchg
adc
or
fsubrs
sar
shll
pop
push
sub
scas
xchg
loopw
inc
imul
sbb
lods
pop
stos
mov
mov
mov
pop
jmp
and
test
pop
in
outsb
insb
lock
push
out
sbb
jmp
out
nop
pop
scas
pop
loop
jmp
test
cmp
xchg
repz
movlps
jp
cmp
call
push
sahf
das
add
inc
adc
mov
push
or
inc
cli
jmp
imul
in
cmp
mov
jmp
and
nop
dec
dec
test
mov
cld
hlt
outsb
lret
clc
sub
push
mov
mov
into
adc
sub
push
in
and
mov
mov
cld
fucomp
xchg
out
xchg
sahf
jmp
arpl
mov
adc
lods
push
outsl
jb
jge
mov
pop
mov
inc
lret
mov
mov
js
sub
dec
int3
xor
mov
push
sub
pop
sahf
jmp
sbb
mov
and
and
sub
and
das
fnstcw
add
lret
dec
add
jnp
adc
jns
mov
add
mov
fcmovb
fwait
inc
subl
idivb
jmp
leave
stos
xor
lock
imul
cmpsb
jp
fldpi
inc
mov
mov
jmp
hlt
lcall
gs
scas
jmp
fmuls
stos
xchg
pop
inc
mulb
adc
pusha
push
outsb
in
adc
push
push
jae
xchg
mov
sbb
push
in
mov
inc
sbb
pop
sbb
out
sbb
mov
subb
je
js
test
call
daa
mov
fsubl
pop
lea
jo
xchg
stc
cmp
pusha
outsb
push
jns
sti
mov
test
fnstenv
in
cmp
in
pop
adc
popa
loopne
xor
hlt
fcompl
movsl
lods
adc
or
push
mov
ds
add
sub
adc
dec
pop
xor
jmp
ret
bound
jbe
divb
xchg
or
jp
js
mov
xor
push
jnp
sub
roll
and
or
mov
add
xchg
das
sbb
inc
cmp
addl
xchg
sarl
and
sahf
jmp
nop
imul
add
bound
cmc
cmp
sbb
add
lahf
fnstsw
std
shrb
push
pop
dec
leave
sbb
ret
adc
decb
insl
add
mov
add
std
jmp
cmpl
jno
mov
xor
mov
out
pop
xchg
sbb
iret
jo
cld
es
das
sbb
test
rclb
push
pop
imul
sub
sub
loop
pop
lcall
arpl
xor
lods
mov
dec
pop
jb
stos
jmp
mov
dec
sub
sub
push
cli
jecxz
ja
sub
adc
pop
or
test
jmp
lret
cmpsb
aas
insl
fcomip
add
lock
jecxz
sbb
stc
and
les
lods
rolw
test
sahf
jmp
test
movsl
mov
jle
mov
loop
pushf
fucomip
rcll
rcr
jg
test
les
jp
sbb
scas
xor
pushf
or
or
outsb
sahf
into
push
andl
adc
insl
pop
stos
imul
inc
jmp
xchg
adc
mov
popa
stos
jmp
dec
enter
loop
sub
mov
and
jns
cmp
nop
test
jmp
pop
and
sub
test
or
scas
or
stos
mov
push
pop
pop
or
test
dec
jbe
pop
dec
jmp
or
mov
inc
jmp
loopne
push
popf
inc
js
jp
mov
cwtl
push
jmp
repnz
add
jge
mov
in
lahf
sub
dec
gs
das
cmc
repnz
or
and
jp
insl
mov
adc
jns
fidivl
mull
pop
push
or
cmp
xchg
leave
or
and
and
mov
mov
push
fdivrl
nop
sarb
jecxz
and
or
xor
aam
dec
xchg
push
dec
in
jmp
and
add
jmp
push
pusha
jb
iret
sub
mov
pop
jmp
cmp
andb
push
rcrl
cmc
lods
xor
sbb
jae
xor
jne
sub
addr16
insb
adc
sub
xor
sbb
mov
test
push
mov
fdivs
test
ds
icebp
cs
jmp
lret
dec
test
mov
inc
mov
mov
divl
cmp
sub
pop
jbe
jmp
cltd
popa
cmp
push
sti
jmp
mov
jae
cmpb
pop
sub
lods
pushf
jmp
cmp
bnd
xchg
pop
lods
mov
icebp
divl
push
jg
mov
sahf
jb
push
enter
pop
out
sub
test
sub
xor
cltd
xchg
stos
and
add
mov
sahf
jmp
sub
daa
jp
dec
or
mov
dec
adc
jmp
popa
rcrb
lds
out
jmp
or
lock
js
adc
sti
into
cmp
jo
and
mov
add
add
jbe
sbb
cli
int3
lahf
mov
mov
addr16
adc
jmp
push
push
repz
dec
lock
addb
movl
inc
rcr
sti
scas
repnz
push
cli
jmp
nop
daa
inc
push
jo
jno
pushf
mov
jmp
push
inc
insb
inc
dec
lods
jmp
push
rclb
int3
sub
xchg
pop
sahf
cli
popa
push
test
aas
out
icebp
and
pop
push
sub
jmp
mov
stos
data16
sbb
imull
push
add
bound
lock
roll
adc
jecxz
icebp
inc
jmp
loope
cmp
pop
pop
inc
jmp
or
dec
xchg
sub
jmp
cltd
and
cmpsl
xor
popl
and
jmp
pop
adc
loope
jne
or
mov
push
test
adc
sub
adc
xlat
incl
es
mov
and
dec
ljmp
xor
mov
das
adc
xor
cmpsl
pop
fsubrs
pusha
xchg
adc
jb
sbb
or
push
xor
les
lahf
jmp
fs
cs
aas
jmp
jns
cmc
icebp
clc
jg
lods
dec
out
adc
enter
loop
xchg
jae
fcmovnu
js
dec
scas
imul
sbb
popf
outsb
jno
xchg
loop
jge
add
in
xchg
or
iret
mov
inc
pop
jmp
sub
enter
repnz
fucomip
cmpsl
mov
jmp
fucomi
push
int3
adc
andb
pop
jmp
sbb
jmp
dec
jne
icebp
pop
jmp
xor
bound
addr16
in
test
or
xchg
jmp
sub
imul
cmp
rclb
stos
ds
ucomiss
pop
dec
jmp
add
mov
mov
addr16
scas
mov
dec
hlt
sub
push
std
test
mov
mov
loop
jp
das
ljmp
in
out
add
jmp
push
shlb
lock
push
enter
xchg
lahf
mov
test
and
rolb
ret
adc
lret
in
or
out
cli
dec
dec
scas
jbe
repz
shll
and
jmp
movsb
fdivs
mov
iret
in
adc
hlt
mov
xchg
cmp
jmp
aaa
mov
imul
mov
nop
stos
call
imul
icebp
and
sbb
out
loopne
cld
cmp
mov
dec
jmp
sub
inc
nop
fldt
xchg
adc
xchg
sbb
adc
pop
stos
or
imul
mov
jmp
subb
es
scas
dec
inc
push
inc
sub
aas
pop
jmp
aaa
mov
pop
rcll
sbb
mov
js
mov
movsb
mov
ss
arpl
dec
test
pop
in
cmp
jl
mov
and
pop
jecxz
xor
push
outsb
and
fbld
stc
test
jmp
lods
xchg
mov
jle
or
or
mov
lds
jl
shr
inc
fs
pop
sbb
jmp
addb
pop
cmp
pusha
or
sub
test
hlt
dec
popa
or
imul
lret
rolb
inc
pop
loop
aad
mov
pop
xchg
xor
mov
cmpsl
sahf
mov
in
jmp
mov
fistpll
imul
or
xchg
gs
ret
mov
jnp
mov
jmp
and
jmp
jo
fdivl
xchg
pop
xor
sub
iret
cmp
dec
jmp
in
jb
cmp
ds
addr16
and
jo
xchg
inc
xchg
div
mov
adc
or
sub
push
pop
sub
adc
cmp
jno
es
adc
sti
add
dec
jmp
shlb
movsl
sub
stos
xchg
loopne
ret
leave
jmp
jbe
cmp
clc
ds
xor
push
cmpsl
jmp
dec
and
scas
sub
gs
ja
cmp
xchg
fisubrs
cmc
cmp
mov
and
fs
inc
les
jne
jmp
adc
mov
add
jg
pop
jle
sub
hlt
xchg
push
loop
imull
lret
rcll
scas
fsubrl
cmp
lret
xor
jb
adc
jmp
into
dec
dec
jmp
sahf
push
repnz
int
jmp
ja
loope
mov
mov
das
push
std
repnz
loope
xchg
fcmovnb
call
adc
mov
stc
or
test
negb
jmp
lods
adc
jmp
clc
leave
pop
inc
push
mov
aam
mov
push
jmp
int
pop
iret
addb
fistpll
repz
add
mov
adc
xor
int3
aaa
jmp
jg
mov
sub
insb
mov
xchg
iret
push
mov
push
adc
out
mov
mov
bound
sti
push
ss
nop
jnp
jo
push
inc
jmp
fs
cmp
mov
mov
xor
jge
push
sub
and
out
lret
stc
out
in
add
sbb
xchg
fcompl
jmp
cmp
jg
mov
shlb
in
xor
imul
test
xor
fsubr
add
adc
push
daa
push
jmp
dec
jl
mov
fs
bound
mov
out
mov
xor
int3
mov
push
and
xor
popf
jne
dec
push
sub
lea
aad
or
cltd
dec
gs
movsl
adc
je
rclb
jecxz
mov
cltd
cli
sub
pop
cmp
daa
jbe
jmp
jcxz
fldl
push
mov
cmp
or
mov
and
stos
lahf
loope
testl
lods
aad
dec
mov
fiadds
push
insb
adc
xchg
adc
jmp
fadd
sahf
adc
mov
pop
cmp
cld
jmp
sbb
loope
cmp
cmp
lcall
sub
mov
sub
jmp
fwait
mov
jmp
call
adcl
xchg
and
add
lret
sub
movsb
lods
notl
loopne
pushf
push
psrad
sahf
mov
std
or
jmp
pop
mov
fucomi
inc
jne
ss
push
lods
sbb
dec
scas
xchg
pop
sbb
inc
jbe
insl
lods
test
pop
daa
mov
daa
in
jns
jmp
pushf
clc
out
popf
xor
in
or
or
jo
and
sahf
loope
xor
lea
and
fnstsw
sti
sub
jl
das
cmpb
cmpsb
fmuls
xlat
push
pop
pushf
pop
inc
xchg
call
jmp
movsb
and
je
xchg
jmp
scas
add
sub
pop
in
repz
ja
mov
je
or
push
fwait
jmp
orl
into
jp
add
and
jo
aaa
or
jmp
jle
mov
fwait
dec
xor
inc
mov
scas
jb
imul
popa
jl
dec
xchg
sarb
push
push
adc
lcall
push
and
idivl
jg
push
in
add
push
rcrb
loopne
xchg
aas
std
cmp
lods
sub
add
cwtl
push
pop
jmp
mov
jbe
cmpsb
sbb
mov
inc
mov
xor
jl
xchg
pop
cli
jmp
lret
fsubrs
rolb
jmp
js
enter
out
adc
ret
jmp
add
stos
mov
jmp
jp
jg
int3
or
and
pop
clc
aad
push
sbb
xor
jmp
jae
and
jmp
jno
shll
jmp
inc
hlt
mov
inc
and
push
loop
xchg
rclb
inc
or
jmp
lret
adc
cmpsl
add
adc
pop
add
sbb
xor
mov
jp
push
lods
sub
ljmp
xchg
outsb
or
daa
into
add
mov
ja
mov
sub
das
in
lds
xor
out
adc
hlt
xlat
ss
mov
sub
jmp
rcrl
repnz
incb
lods
mov
into
xor
adc
repz
sbb
cs
sub
movsl
test
test
jmp
mov
enter
xchg
movsl
aaa
scas
iret
jmp
mov
lds
mov
mov
ljmp
pop
lods
hlt
jmp
mov
stc
fnstenv
mov
xor
in
sti
shrb
jmp
push
lcall
inc
rorl
sub
mov
fucomip
in
fwait
dec
xchg
mov
jmp
rorl
jmp
mov
out
adc
inc
imul
iret
sbbl
insb
add
in
xor
gs
jae
jecxz
pop
add
std
jg
add
sbb
sbb
int3
pop
jmp
imul
fs
jmp
cmpsb
add
xchg
jmp
sti
or
lret
dec
movsb
in
int3
xor
mov
adc
cmp
or
es
mov
fucomip
mov
les
add
push
jns
das
add
push
jae
lods
daa
xchg
jmp
clc
stos
sbb
inc
inc
mov
cli
sub
add
cmc
inc
enter
and
add
int3
mov
nop
js
push
jno
push
and
jmp
fwait
push
adc
pop
movsb
aad
movsl
js
xchg
jmp
jns
rcrl
mov
jmp
push
inc
inc
in
in
inc
es
jmp
insl
es
cs
pop
xchg
jmp
shl
imul
push
mov
popf
loopne
sahf
icebp
jl
jmp
push
mov
jmp
sbb
jmp
cli
jle,pn
push
aas
outsb
ret
cmpsl
and
nop
inc
jmp
xchg
dec
mov
jmp
or
or
sbb
fcoms
cmpsb
jmp
fists
test
add
lods
scas
ljmp
mov
loopne
push
jmp
test
and
rorb
and
lret
out
lods
sbb
pop
mov
dec
push
adc
jmp
movsl
dec
lods
mov
fimull
add
mov
sbb
sub
mov
mov
add
or
inc
notl
sbb
or
lods
bound
pop
jae
sbb
or
aas
push
inc
jmp
pushf
lahf
loop
jge
lods
jmp
out
push
filds
jl
xchg
jmp
jne
mov
jmp
cmp
xor
dec
pop
push
pop
dec
mov
mov
into
adc
leave
pop
pop
or
jns
mov
adc
fcom
sub
xlat
inc
aad
aaa
lock
lahf
jmp
xor
jmp
mov
fists
imul
mov
xor
lret
leave
sti
mov
jmp
xchg
add
dec
or
outsb
cmp
push
test
xlat
mov
fbld
fdivs
outsb
mov
es
jnp
aam
fldt
cmp
jmp
pusha
cs
cmc
push
push
jp
nop
or
cmp
cmp
int
jg
or
inc
xchg
dec
dec
jmp
outsl
xor
sbb
dec
cmc
lods
and
add
sub
pop
movsl
dec
daa
fildll
andb
mov
lcall
ret
jae
sbb
pop
jmp
and
xchg
mov
popa
push
add
push
xchg
cvttps2pi
movsb
imul
add
inc
mov
arpl
bnd
fstpl
push
daa
jmp
jmp
loope
mov
cli
or
jno
gs
mov
addl
sub
jmp
fisubrl
inc
jmp
xor
jmp
sbb
test
sbb
outsb
scas
pop
xchg
xchg
loopne
and
sub
mov
insl
pop
add
push
xchg
arpl
jmp
mov
test
in
lds
bound
repz
pop
mov
in
sbb
cmp
jae
inc
mov
push
cmpsb
fnstcw
add
fnstsw
mov
loope
sub
cmp
and
outsb
test
mov
ja
sub
imul
lods
sahf
sbb
xor
imul
jmp
dec
adc
inc
jl
lcall
in
imul
aam
mov
lods
or
mov
or
or
test
sub
lods
add
fidivl
sahf
xor
push
jmp
pop
inc
mov
je
mov
movsl
lret
mov
lea
mov
add
movsb
ret
dec
ret
mov
icebp
xchg
xor
sub
test
rcrb
mov
fidivl
sub
inc
into
mov
push
es
xchg
repnz
xchg
popf
inc
or
stos
pop
jmp
icebp
sbb
cmc
addr16
sbb
jno
sub
gs
jmp
jl
push
and
jne
mov
or
jmp
xor
sub
xchg
stos
jmp
imul
jmp
pushf
sbb
pop
jns
jmp
lods
aaa
fs
lahf
pusha
in
cld
jo
jge
sbb
mov
jle
ja
cmp
sub
jge
stos
mov
test
data16
sub
add
sarl
mov
decl
add
hlt
gs
jmp
retw
sub
sbb
jb
xchg
shll
push
sbb
sbb
cmp
jp
cmp
mov
cli
mov
ljmp
jmp
out
push
out
jae
adc
add
mov
jmp
popf
psadbw
jecxz
outsb
leave
mov
sti
mov
jmp
mov
insb
add
xchg
mov
cwtl
sub
arpl
dec
aaa
scas
repnz
in
sbb
cmp
xchg
lds
jg
push
jge
jmp
lret
dec
dec
pop
cwtl
add
scas
addr16
rolb
dec
jnp
inc
push
jmp
mov
decl
lcall
xchg
jmp
nop
or
movsb
sub
adc
out
jmp
lret
stos
xor
aas
jb
jmp
jp
popa
jge
pop
mov
test
xchg
dec
fmul
lahf
imul
mov
and
test
pop
mov
mov
mov
fnstenv
iret
and
jmp
scas
pushf
stc
push
ja
lods
sub
jmp
fidivl
in
xchg
andb
ds
dec
pop
movsl
repnz
gs
cmp
test
test
mov
andb
mov
in
push
and
dec
mov
cli
xor
adc
lods
movsb
pop
or
xor
addr16
jmp
cmp
and
jbe
mov
faddl
add
or
pop
mov
adc
dec
cli
push
jmp
mov
sub
cmp
xlat
data16
mov
leave
jb
call
subb
jmp
xor
xor
loopne
das
sbb
mov
dec
jge
in
mov
mov
pop
in
jmp
mov
stos
pop
or
jns
jmp
inc
out
cs
sub
or
sub
adc
scas
cmp
in
call
outsb
lret
xchg
pop
cwtl
jmp
jecxz
mov
inc
test
mov
jbe
fistpll
add
mov
sar
call
xchg
cs
jecxz
sub
push
push
sub
movsl
aam
xchg
dec
pop
push
mov
lea
fmuls
adc
inc
dec
rorb
jmp
pop
andb
std
push
lret
pop
mov
xchg
pusha
in
add
fs
stc
das
out
sub
jmp
scas
lret
movl
andl
or
and
repz
int3
xchg
adc
lods
repnz
mov
xchg
and
cmpsl
pop
gs
adc
xor
mov
das
cmp
int
outsb
iret
shll
movsl
jmp
xchg
popf
mov
and
addr16
mov
push
test
jnp
sub
xchg
jmp
adc
pop
into
call
pop
in
aad
sbb
rorl
mov
popa
xchg
jmp
cltd
xorl
aas
push
jge
pop
das
movl
jmp
insl
jne
outsb
in
fs
push
out
mov
jmp
jns
push
imul
addb
push
mov
mov
mov
shr
insb
loopne
inc
mov
outsl
jmp
or
shll
add
ljmp
jmp
sbb
mov
pop
cwtl
arpl
mov
mov
jmp
in
std
mov
scas
js
es
xor
hlt
xchg
pop
fsubrp
test
xlat
out
imul
push
sub
es
xor
scas
arpl
or
sub
out
int
out
add
push
popf
cli
jmp
pop
cmp
mov
sti
mov
call
ja
or
and
lods
push
jg
pusha
adc
ret
mov
adc
fists
aad
mov
out
hlt
add
das
mov
xrelease
lret
push
dec
movb
adc
and
outsl
movsl
jmp
fcomps
mov
jne
dec
in
pop
jmp
and
mul
fnsave
mov
dec
add
sub
lret
cmp
dec
sbb
and
es
xchg
dec
pushf
mov
subb
jb
jmp
mov
xchg
jmp
lock
sub
das
jmp
pop
mov
lods
or
es
pop
decb
stc
repnz
test
cmpsb
in
mov
push
stos
sbb
cmp
out
xchg
sub
lret
repz
in
mov
jmp
lea
shrb
sbb
dec
jge
shll
push
mov
mov
imull
jle
xchg
jb
rcl
cmp
jmp
fsts
cmp
sti
gs
lods
test
sbb
pop
test
lea
sbb
mov
fdiv
les
inc
add
cmp
jmp
jo
cwtl
lret
cltd
jmp
ds
xchg
fmul
je
jo
stos
aas
lcall
pop
stos
outsb
cmpsb
jecxz
jmp
jnp
mov
dec
or
lahf
push
lods
cld
aas
ljmp
aad
inc
nop
ja
sub
scas
pop
ljmp
mov
mov
add
call
cmp
jns
xchg
xor
testl
ja
lret
shrd
orb
inc
shlb
mov
stc
jne
lcall
pop
test
mov
inc
les
pop
mov
add
pop
inc
lret
sbb
testl
jmp
add
add
cld
ret
cltd
push
jmp
push
das
jno
adc
mov
shll
mov
lods
xor
jns
add
adc
xchg
jmp
out
sbb
adc
nop
shr
aas
sub
push
data16
inc
jmp
aad
xchg
xor
xchg
and
pop
cmp
jae
mov
and
sbb
adc
or
xlat
xor
stc
icebp
ss
dec
mov
data16
cli
cld
dec
lahf
sub
jp
andb
inc
arpl
sbb
inc
jmp
ficoms
lret
outsb
icebp
jmp
inc
sub
xor
sbb
sbb
sarl
out
jecxz
out
std
sub
lea
jmp
jno
pop
pushf
push
or
jmp
loop
mov
lods
and
lret
xor
sbb
pop
popa
lods
lds
arpl
adc
xor
inc
jmp
lret
rclb
jmp
sub
mov
mov
pop
adc
dec
loope
push
lcall
iret
mov
jno
xlat
pop
hlt
or
mov
inc
xor
lock
out
psrld
sbb
mov
mov
lret
mov
mov
jmp
push
sti
ret
shll
dec
js
adc
jmp
inc
aad
pop
cmp
cltd
mov
sbb
jno
cmc
sub
xor
int3
cmp
test
rclb
xchg
fwait
mov
stos
lock
jle
or
lods
pop
push
dec
ja
daa
mov
add
nop
dec
jmp
ret
push
int3
mov
shr
jl
sub
repz
jno
push
rcr
jmp
push
mov
mov
lods
add
das
xchg
sbb
adc
jmp
mov
jmp
aas
cmp
push
xor
into
ljmp
adc
mov
movsl
jmp
push
adc
aas
jmp
ret
pop
jno
add
xchg
or
and
jmp
xchg
mov
jge
enter
inc
sub
adc
pusha
lods
sub
test
aam
sbb
xor
inc
std
jmp
xlat
cwtl
mov
jmp
cmp
out
mov
jno
lret
test
sti
mov
pop
jmp
js
add
imul
and
icebp
jmp
cmp
dec
jmp
add
push
sarl
xchg
pop
insb
sbb
ja
dec
stos
js
jns
push
sub
xor
test
jmp
fstpt
stos
adc
pop
out
mov
dec
or
pop
jmp
xor
push
sub
aaa
dec
sub
and
xchg
lods
aad
push
inc
sahf
sub
jp
xchg
jmp
enter
push
ljmp
inc
fbstp
lods
cltd
cs
ret
pop
and
aad
lods
or
mov
xchg
or
cmpb
jmp
fsubs
lcall
movsl
bound
jmp
lahf
iret
daa
pop
sbb
int
adc
xor
pop
sub
imul
mov
sub
push
fistpl
rolb
outsl
adc
das
rcrl
lods
sub
syscall
xchg
in
daa
cld
mov
adc
jecxz
xor
je
sbb
jmp
adc
add
pop
jmp
mov
jns
lret
sbb
andl
mov
lds
sti
xor
andl
pusha
add
jmp
test
mov
lods
repnz
call
push
adc
sub
sti
invd
mov
std
loop
jmp
les
jmp
inc
out
cmpsl
icebp
out
divl
mov
jno
mov
mov
push
les
jmp
xor
xchg
xchg
pusha
jbe
adc
lods
inc
es
shll
and
data16
pop
push
insb
dec
mov
push
jnp
insl
pop
jmp
jg
push
jmp
mov
sahf
pop
inc
test
addr16
xchg
xlat
add
add
mov
pop
in
mov
jmp
sub
jnp
mov
in
pop
testb
daa
mov
mov
int
outsl
adc
les
jmp
pop
in
test
repnz
jmp
rcrb
jmp
dec
andb
cli
shr
sub
xchg
outsl
xor
sbb
into
divb
jmp
pop
call
cmc
jmp
enter
dec
insb
hlt
jmp
inc
push
add
xor
jmp
jp
iret
push
orb
and
or
movsl
ljmp
fwait
icebp
fbld
sbb
stos
mov
pop
mov
jb
jnp
jl
push
stos
cli
jle
or
lcall
inc
test
add
clc
sbb
mov
imul
fcomps
neg
adc
and
dec
mov
cs
jmp
jle
pop
aam
pop
out
cli
loopne
push
cltd
les
jmp
ret
jae
shlb
mov
js
sti
inc
jge
pop
fwait
jmp
xchg
push
aam
mov
popf
fisttpll
les
lret
inc
fistpl
int3
arpl
push
cmp
out
std
jmp
mov
dec
push
lods
xor
pop
fwait
pushf
cmp
jp
mov
lods
push
mov
out
jb
xchg
repnz
jg
stos
addl
bound
test
jmp
loope
mov
and
cmp
iret
sub
sbb
out
pop
pop
sub
xor
add
dec
lods
fdivs
push
mov
repz
cmpsb
lods
adc
sbb
sub
pop
insl
cmpsb
dec
dec
xor
or
std
jbe
cmp
jmp
mov
cmp
stc
add
cmp
and
lcall
jge
test
or
jns
enter
dec
xor
loopne
jmp
fiadds
pop
mov
cmc
lods
add
jns
xor
pop
jmp
push
mov
nop
cwtl
add
gs
mov
mov
inc
aas
mov
fwait
jle
insl
sbb
sarb
sbb
add
adc
push
sahf
or
jb
clc
xchg
jmp
ret
push
dec
jmp
mov
movsb
fs
or
push
es
sbb
dec
mull
xlat
jmp
and
xor
dec
sub
in
leave
lods
call
in
adc
push
jmp
pop
lock
jbe
test
sub
xchg
pop
mov
cmpsl
aas
jmp
add
mov
fisubs
lods
mov
in
lea
mov
fldpi
and
pop
push
jg
fsubrl
xchg
mov
or
jmp
addb
adc
jmp
in
adc
enter
jmp
jp
push
cmc
jo
or
and
test
jmp
mov
or
xor
out
lods
std
and
dec
xor
xchg
outsb
mov
jno
fildl
xor
mov
out
repnz
push
xor
aaa
and
or
sub
es
std
mov
hlt
sub
rol
xor
fcompl
jmp
jle
ss
pop
mov
ficompl
mov
leave
repnz
sub
lods
arpl
and
in
daa
cs
cmpsl
inc
jnp
movsb
sbb
into
xchg
jmp
divb
call
mov
int3
push
xchg
scas
pop
mov
adc
fucomi
xor
dec
adc
repz
jmp
cltd
addr16
rdtsc
lods
mov
inc
shll
insb
lret
sub
jne
adc
xchg
or
pand
pop
jmp
mov
inc
ret
jmp
mov
jns
hlt
test
scas
mov
or
sub
jns
and
xor
jmp
adc
cmpsb
cmc
test
mov
test
mov
cwtl
mov
jo
cmp
in
and
or
addl
inc
pop
sub
xor
stos
sub
sub
fiadds
pop
repnz
cwtl
gs
pop
adc
jecxz
or
outsb
sbb
jmp
adc
push
pop
jmp
fbstp
push
and
pop
sbb
cld
pop
sub
sub
daa
or
rorb
test
movsb
lcall
mov
repz
adc
cmpsl
jmp
mov
push
pop
sbb
fucomip
inc
faddl
ret
mov
adc
daa
lods
inc
setle
cmc
lods
mov
or
addr16
dec
adc
je
lods
nop
decl
out
ljmp
inc
sbb
xchg
pop
xor
sbb
dec
push
jle
and
testb
adc
aad
outsb
mov
inc
push
inc
jmp
xchg
std
hlt
jns
push
or
cmc
pop
pushl
xor
jmp
add
xlat
std
inc
lods
idivb
xchg
or
daa
mov
es
mov
mov
adcb
hlt
cmpsb
mulb
mov
popa
cs
mov
cmp
push
cmp
stc
mov
xor
divb
mov
jmp
lahf
daa
add
test
iret
cli
jb
jns
mov
insb
ljmp
push
jb
outsl
mov
xchg
xchg
jl
push
cmp
inc
out
cmpsb
call
cld
icebp
xchg
insl
sub
jmp
or
push
lahf
and
or
add
or
lods
sub
stc
jb
lods
scas
and
popa
cltd
mov
push
js
jmp
pop
and
mov
cmp
jl
jb
push
pop
test
adc
jne
andb
push
mov
mov
pop
scas
sub
cmp
ljmp
jb
xchg
jmp
sub
xor
je
andb
sbb
mov
sub
or
jb
pop
dec
cmp
es
aad
adc
loop
pop
jmp
gs
sbb
jmp
xlat
mov
insl
popf
hlt
jae
xchg
jmp
gs
and
jmp
or
out
jne
jmp
popa
jle
movsl
xchg
xlat
and
push
lret
ret
mov
ja
and
xlat
or
dec
jmp
add
adc
loopne
pushf
xor
jmp
mov
stos
and
jns
rorb
dec
sbb
popf
xor
mov
pop
loopne
int3
inc
bound
loope
dec
adc
or
ja
or
push
jae
cs
pop
lahf
jle
jmp
fstpt
js
push
mov
shl
jb
jmp
rolb
pmulhw
test
mov
sbb
xor
loop
sbb
pop
lods
test
jbe
xor
inc
jns
in
data16
ret
aas
lods
push
jbe
cmp
jno
sub
imul
jns
fcmovu
jmp
lret
jbe
mov
mov
adc
jmp
fldz
mov
fistpl
imul
out
out
pushl
imul
xor
and
cmc
clc
stos
push
sbb
std
leave
jp
xchg
push
inc
sti
push
and
or
cmc
push
das
mov
icebp
jmp
arpl
scas
xor
ja
stc
cs
ljmp
ds
jae
mov
push
jmp
push
sub
xchg
pop
in
sbb
push
scas
push
dec
repz
ret
pop
ficompl
loope,pt
jmp
adc
jno
sub
inc
cmp
pop
mov
jmp
lret
adc
cmpsb
stos
in
hlt
push
jp
pop
dec
test
ja
js
fwait
clc
pop
lahf
lods
jmp
les
push
lret
add
mov
push
sub
sub
jmp
dec
push
stos
push
or
pop
je
lods
jae
sti
push
or
shlb
std
insl
test
sub
in
cmc
push
or
scas
mov
xchg
xchg
sarb
jmp
xlat
mov
jge
inc
inc
push
jmp
fisubl
pop
lods
ljmp
cmp
xor
mov
rolb
or
outsb
jbe
leave
daa
bound
jmp
and
sub
imul
stos
xchg
sbb
xchg
rcrb
jmp
push
or
sbb
lods
or
enter
outsl
shl
sub
insb
jmp
dec
jb
add
js
inc
stos
xlat
and
mov
es
int3
mov
pushl
jb
ja
insb
sub
cmpsl
shrd
xchg
loopne
sbbl
jmp
dec
stos
mov
cwtl
adc
mov
fs
jmp
pop
fucomip
inc
dec
sbb
scas
sbb
test
daa
das
cmp
jbe
or
jmp
repnz
mov
cmp
fidivs
dec
xchg
jmp
int
pushf
jno
jmp
add
push
sbb
jbe
orb
sub
add
dec
or
jmp
cmp
negb
jmp
xor
add
sub
sbb
push
jmp
xor
cmp
sbb
mov
jmp
pop
mov
lret
icebp
push
int
shll
daa
adc
adc
inc
jge
mov
dec
push
adc
cld
jo
test
dec
push
pop
jp
adcb
inc
adc
cvttps2pi
mov
inc
in
rcl
jmp
cmp
in
adc
jmp
loopne
fimull
fcmovnbe
jmp
lret
inc
andb
jmp
divb
push
sub
ljmp
adc
lret
lods
and
jnp
adc
pop
push
mov
sub
xchg
out
in
mov
adc
and
push
mov
test
test
pop
push
mull
aaa
out
pusha
add
shrb
cli
repnz
aam
sub
test
jg
push
xor
pop
jmp
fstpt
cld
subl
adc
mov
xor
jmp
fwait
ror
cwtl
mov
mov
mov
sti
ss
sub
ret
push
dec
jmp
loop
push
adc
es
lcall
xchg
push
cmp
jmp
cmpsl
pop
jge
dec
mov
jmp
push
push
mov
jmp
mov
and
push
pop
mov
insl
jle
je
movsl
jns
mov
les
inc
into
jnp
adc
push
testl
xor
pop
inc
pop
add
mov
movsl
cmp
insb
and
xor
jmp
arpl
ljmp
out
jbe
jmp
je
lds
jmp
pop
xor
outsb
aas
scas
jmp
fdivl
jmp
pusha
mov
adc
pop
add
jmp
jg
insl
dec
jecxz
pop
daa
jno
sub
xchg
insb
cmpsl
pop
daa
aad
sbb
cld
xchg
sub
iret
repz
outsl
xor
sub
cmpsl
imul
xor
rep
add
fucomip
xchg
sub
jmp
ljmp
jmp
fiadds
dec
jmp
adc
add
mov
ret
cmpxchg
jmp
add
aas
jl
scas
outsl
jmp
pop
sub
push
or
pop
adc
lods
loopne
xchg
in
pushl
mov
jmp
jge
xchg
jp
push
test
lret
add
out
lds
xchg
push
rclb
gs
rorl
aas
lods
stos
adc
icebp
insl
lret
out
fldl
push
jmp
test
es
lods
cmp
stos
sub
cli
les
inc
lock
mov
or
pop
jl
push
xchg
pop
roll
sbb
sub
and
ds
xchg
cmpsl
out
sub
jmp
sti
loope
in
ss
add
cmp
dec
lods
cld
jmp
shr
or
jle
jmp
push
or
lcall
inc
sbb
push
pop
sbb
jecxz
inc
jne
jmp
ljmp
jmp
idivb
inc
lds
pop
pop
sbb
sbb
adc
sub
and
and
lahf
lods
outsl
lret
popf
mov
adc
fcompl
adc
out
lods
out
leave
sti
dec
sbb
lods
pop
xor
inc
movsb
stos
jmp
add
in
js
mov
dec
jl
movsl
cmp
and
lods
jp
push
repnz
jmp
cltd
xor
mov
cmpsl
cmp
mul
dec
xchg
pop
adc
jmp
sub
daa
add
shll
incl
sbb
dec
jmp
jnp
loop
or
fidivs
xor
push
js
shr
in
incl
mov
xchg
cmp
dec
sub
mov
jmp
or
mov
gs
int3
jmp
sub
addl
push
or
xor
pop
ret
call
pusha
cwtl
jmp
scas
leave
std
out
push
inc
jmp
dec
xor
xchg
and
aaa
jmp
lods
lods
ficompl
jmp
mov
sub
enter
jmp
xchg
mov
xchg
fmul
gs
and
xor
mov
stos
push
in
lods
inc
out
cli
ret
pushf
pcmpgtb
js
sub
orb
cmp
aad
jmp
xor
aas
gs
arpl
xor
inc
sbb
es
push
jmp
mov
push
popf
jmp
mov
mov
popa
pop
jmp
mov
pop
loopne
inc
xchg
pushf
outsb
shrl
xlat
jmp
add
xor
cmp
jmp
xchg
popa
shlb
cmp
sub
add
cmp
lret
movsb
movsl
sub
cmp
dec
or
hlt
into
repnz
pop
lods
or
shlb
vpcomub
jmp
xor
push
bnd
xor
shl
or
jmp
xor
sbb
es
in
stos
sti
jmp
int
jg
add
push
jmp
das
dec
jo
pushf
add
cmpb
jmp
and
cmpsb
mulb
or
sbb
jmp
ja
jnp
sbb
xchg
xor
mov
jmp
xchg
pop
push
xor
jmp
inc
outsb
ss
punpckhdq
bound
adc
jmp
xchg
inc
and
jmp
add
je
mov
lods
sub
insl
jmp
not
push
jmp
aad
js
sub
sbb
loope
mov
inc
jmp
bound
dec
pushf
mov
repnz
fistps
cs
fldl
jmp
cmpsb
sarl
cmp
jmp
pop
mov
mov
mov
sbb
jne
pop
mov
sbb
movsb
pop
cmp
mov
and
jae
dec
fxch
dec
movsb
mov
adc
adc
cmpsl
jl
inc
rclb
dec
xor
adc
in
dec
mov
lds
dec
fwait
test
in
jmp
test
cmpsb
clc
lods
es
int
add
es
stc
jmp
sbb
sbb
test
lods
es
int3
xor
sub
push
mov
scas
int
cmp
push
scas
leave
shrl
lahf
and
jge
lds
in
movq
jmp
enter
daa
pop
add
sub
push
sub
outsb
cmp
and
daa
push
ss
outsb
sub
movsl
sub
mov
dec
mov
aaa
lds
fnsave
jmp
push
push
stc
sahf
aam
jmp
lret
fildl
push
call
sub
dec
dec
inc
jo
mov
jmp
stos
add
push
test
pusha
or
cmpsb
int3
out
sbb
add
movsl
mov
or
xchg
pop
jmp
sbb
push
cli
push
fldenv
mov
xor
pusha
jp
testl
lods
mov
stos
shrl
pop
rcrl
out
test
jbe
jmp
mov
movsl
inc
jmp
insb
mov
xchg
jmp
jns
pusha
lret
pop
jmp
xor
sub
aad
sti
movsl
or
fwait
dec
mov
mov
lret
and
lods
push
push
or
jmp
pop
xchg
sub
push
leave
lods
iret
les
int
sub
add
fstl
repnz
test
ja
ljmp
dec
cwtl
pop
add
jb
xor
sbb
jbe
mov
bound
fstps
test
lock
nop
aad
jmp
out
adc
mov
jmp
cld
bound
lods
pop
popa
add
sbb
add
inc
test
jmp
jbe
push
mov
adc
std
mov
push
jmp
jb
jbe
ljmp
test
loopne
addr16
sbbb
scas
loope
push
push
stos
mov
mov
xor
test
dec
xchg
push
xor
xor
push
out
mov
or
fucomp
jmp
dec
dec
mov
mov
in
cmp
or
in
test
std
sbb
pop
lods
lods
int
mov
out
jmp
jmp
jb
imul
mov
pop
inc
in
mov
cltd
in
sbb
inc
pop
icebp
repz
jne
push
mov
stos
cmpsb
bound
push
cmpsl
pusha
cmp
repnz
lret
gs
xchg
cld
das
ret
cmc
jmp
or
and
pop
mov
testb
enter
cmp
insl
call
lcall
xchg
add
jmp
sahf
pusha
popa
fsubr
imul
scas
fwait
stos
add
push
shll
dec
aas
insl
mov
cmp
test
fs
mov
addl
cmp
jmp
cli
out
push
fld
mov
push
inc
iret
dec
jmp
jno
aad
add
dec
fcmovu
push
cmc
jmp
lea
sub
iret
push
or
jo
lods
les
inc
inc
sub
mov
aas
jmp
cmc
or
xlat
mov
jmp
jae
xor
leave
cmp
pushf
in
js
jle
mov
insb
sbb
add
cmp
sub
xor
sti
mov
pop
iret
pop
adc
int3
add
comiss
out
cwtl
dec
lret
stos
jmp
arpl
jnp
in
mov
pop
fsubl
cmpsl
pop
enter
dec
daa
out
insb
cmc
cmp
js
call
arpl
mov
pop
xchg
cwtl
lret
jecxz
pop
and
sub
maxps
xor
ds
jmp
fistl
or
sub
add
jecxz
in
add
and
sub
into
sbb
sbb
fwait
cmp
push
mov
mov
jmp
ret
into
jo
cmpsb
jl
jmp
and
repnz
movsl
mov
dec
xor
lock
lcall
mov
push
lods
mov
sbb
int3
aaa
jmp
std
mov
outsl
iret
xchg
mov
xor
adc
jmp
imul
outsb
jge
bound
ljmp
add
mov
mov
sbb
fsubs
xor
push
adc
adc
fmuls
mov
cmc
cmpsb
cwtl
sbb
mov
push
pop
sub
rcrb
or
ficoms
add
sub
jmp
cmpsl
in
jno
add
jmp
addr16
add
fmuls
inc
xor
daa
sbb
sub
jbe
out
outsb
xchg
mov
jmp
iret
mov
std
jmp
adc
mov
or
data16
out
jno
mov
in
nop
out
stos
adc
dec
sub
jmp
scas
imul
jmp
and
jmp
xchg
int3
daa
fsubrp
nop
in
mov
add
rcrl
jne
jge
sbb
mov
inc
jmp
out
push
lods
lea
push
push
ja
insl
stc
jmp
jecxz
adc
mov
pop
pusha
hlt
pusha
jmp
dec
mov
out
aam
mov
call
repz
ds
in
or
lods
jno
cld
push
daa
add
push
pusha
cltd
sbb
jmp
outsb
test
mov
fsubrl
push
fs
cmp
pop
icebp
sbb
aaa
add
fsubrl
jno,pt
into
mov
xor
sti
rcrb
cs
mov
push
out
xchg
inc
mov
xchg
pop
jmp
pop
lods
arpl
sub
movsl
ja
inc
jmp
dec
pop
inc
push
mov
xor
sarb
mov
lret
xor
mov
in
jmp
xchg
xchg
insb
das
push
imull
mov
fwait
int
xchg
in
cmp
or
mov
div
mov
data16
and
sbb
pop
mov
or
jle
jl
aam
sahf
icebp
sub
ret
add
adc
add
cmpsb
fisttpl
push
mov
movsl
std
xor
xchg
jmp
and
jb
inc
dec
cmp
sub
outsb
push
jno
add
sbb
aaa
jmp
xchg
push
sub
lods
shlb
fwait
mov
xorl
fidivrl
and
popl
aaa
or
jle
lods
je
add
pop
sub
xor
test
sbb
pusha
aas
fldcw
mull
jmp
dec
mov
inc
jmp
push
rclb
and
xor
mov
mov
push
sarb
jmp
sub
xor
jbe
jmp
cmp
adcb
and
repz
icebp
cmc
cmpsl
cmp
jge
inc
jne
pop
lret
sbb
test
jmp
push
cmp
mov
jp
add
mov
out
repz
xor
add
ficompl
jle
mov
addr16
test
in
adc
xor
leave
repnz
xchg
jmp
mov
mov
xor
dec
fstenv
cmpsb
add
fcomip
lods
sbb
aas
stos
pusha
shlb
or
lods
jmp
or
jo
xor
and
scas
out
imul
and
push
outsb
jmp
pop
lret
scas
mov
leave
push
jmp
sub
pop
in
icebp
aam
in
mov
lods
repnz
fwait
cli
jo
or
sub
jno
mov
cmp
jo
fisubrs
lods
out
insl
jcxz
idivl
movsl
cs
inc
jmp
divl
and
subb
pop
xchg
xor
jmp
call
jmp
push
lahf
sahf
xchg
clc
lret
int3
cs
or
mov
mov
cli
sti
dec
lods
jo
fdivrs
repz
and
jmp
scas
xor
mov
mov
sub
ror
jmp
scas
cmp
jmp
ds
inc
lods
dec
dec
jbe
stc
push
dec
mov
scas
jmp
xor
sub
jl,pn
js
xor
jmp
mov
nop
jle
xor
clc
adc
je
repnz
test
adc
repnz
flds
cmpsb
adc
int
sbb
cmp
pop
jmp
dec
cltd
adc
fmul
jmp
fistps
stc
mov
pushl
jnp
inc
das
gs
and
mov
mov
pop
push
xor
cmc
fildll
sbb
stc
mov
in
jmp
outsb
fs
mov
mov
sub
xchg
imul
jns
jae
scas
mov
lret
rorl
arpl
cmc
daa
add
data16
fsubp
mov
iret
sbb
mov
and
dec
out
sub
test
cmp
mov
cld
test
adc
imul
adcl
popa
lods
dec
jmp
jp
test
clc
int
add
ljmp
in
loop
inc
mov
inc
scas
inc
mov
jmp
sbb
sub
mov
fucomip
mov
xchg
shlb
pop
sti
cmp
inc
push
sbb
dec
jb
ljmp
js
fwait
jmp
fadds
lret
iret
sub
mov
clc
mov
jnp
ja
pop
enter
jmp
jecxz
adc
andb
mov
data16
and
and
sbb
jmp
pop
adc
daa
push
repnz
jmp
mov
mov
cli
mov
sub
sbb
mov
ret
in
push
mov
ljmp
mov
inc
sub
dec
adc
adcb
push
dec
jae
mov
mull
dec
in
xchg
jmp
jmp
jg
pop
ds
xor
xor
ror
jmp
mov
cmp
and
mov
jo
arpl
adc
xchg
xchg
cmp
lret
adc
add
cmpsl
mov
jmp
cli
sbb
lds
mov
jbe
pop
cmpsb
movaps
add
stc
ljmp
test
lret
out
mov
mov
adc
xlat
cld
js
or
scas
imul
addr16
icebp
sub
jecxz
das
ret
stc
jmp
or
inc
fdivs
stos
mov
mov
jno
jmp
pushf
adc
xor
mov
mov
in
cmpsb
dec
lods
scas
inc
add
fisubrl
sahf
jo
mov
jae
orb
inc
ds
dec
fsub
jb
push
cld
cmp
mov
fldcw
cmp
outsb
ret
test
adc
sub
mov
imul
jb
adc
or
gs
jmp
lret
or
bound
test
repnz
add
cld
fcmovb
and
and
lods
outsb
jo
ja
in
fisttps
sbb
jmp
in
sub
add
imul
cli
aad
sbb
fwait
mov
imul
adc
fwait
cmp
xor
test
shl
pop
adc
xchg
jmp
mov
ja
jmp
test
sahf
pop
jo
sub
add
movsb
stc
loope
dec
or
ja
dec
shlb
jmp
clc
idivb
jmp
inc
adc
mov
repz
push
inc
fistpll
mov
cmpsl
jmp
and
or
loop
outsb
and
jecxz
rcrl
icebp
push
mov
loopne
je
jmp
dec
repz
mov
ficompl
and
lods
cmpsl
loopne
push
fwait
dec
aas
jmp
insb
dec
mov
mov
mov
jo
int3
jmp
or
lret
std
hlt
mov
sbb
fildll
or
test
or
sar
jmp
jp
cmpsb
inc
outsl
bound
pop
out
push
push
loop
fisttps
lods
cmp
sahf
jle
bound
inc
adc
daa
cmp
jmp
popf
call
aas
cmp
addr16
pop
or
mov
es
inc
test
les
and
push
add
cmp
pmulhw
and
xchg
mov
mov
mov
jmp
outsl
lea
sbbb
popl
mov
pushf
aas
orl
inc
test
or
fnsave
jmp
aas
mov
out
mov
popf
arpl
mov
lahf
mov
mov
or
dec
lods
cmpsb
data16
inc
je
xchg
xlat
fldcw
dec
push
inc
incl
cs
mov
dec
jmp
icebp
mov
mov
and
inc
xchg
in
push
dec
jmp
loopew
lea
xor
adc
es
and
sub
mul
mov
repz
fcoml
jo
cmp
jne
std
mov
int
push
cmp
mov
hlt
test
pop
loope
add
sub
jmp
mov
dec
insb
jmp
out
mov
outsb
mov
mov
stos
sahf
mov
add
cmpsb
and
and
xor
jg
jp
div
mov
xor
jmp
or
sub
mov
mov
jb
jge
or
xor
movsb
jns
movsb
imul
icebp
push
addr16
jmp
popf
repz
inc
inc
test
add
sub
cmovle
scas
and
addr16
dec
out
repz
and
and
xchg
fbstp
popf
xor
inc
gs
repnz
ljmp
add
add
adc
dec
xor
mov
mov
in
arpl
in
sbb
in
outsb
pop
lahf
jmp
in
push
mov
lds
or
mov
inc
push
scas
jmp
movb
xor
gs
sbb
cmp
mov
or
cmpsl
jmp
dec
pop
or
je
adc
icebp
lods
aas
or
jmp
mov
outsb
imul
ss
adc
das
sub
pop
push
mov
out
fidivrl
outsb
decl
in
loope
push
add
or
push
je
test
ja
or
jmp
cwtl
jae
fstpt
clc
jmp
into
stos
add
divl
in
sti
sub
sub
ljmp
negl
outsb
scas
dec
in
and
and
jmp
push
mov
cld
jmp
fimull
xchg
jmp
jg
mov
outsl
inc
mov
lods
cltd
outsl
pop
mov
cwtl
and
lock
xor
std
jmp
rorb
or
and
add
sub
jmp
popf
push
stos
fnstenv
imul
dec
imul
mov
jmp
push
cwtl
xchg
shlb
mov
lock
jp
bound
or
pop
sub
cmp
sub
sbb
mov
std
pop
mov
test
and
je
mov
stos
xchg
sbb
xor
sub
dec
adc
xchg
jp
popf
jb
sub
je
jmp
xor
fnsave
outsb
inc
jne
and
inc
inc
daa
adc
pop
call
scas
xchg
repnz
add
fisubl
loope
hlt
sbb
ficomps
shlb
jmp
cmc
bound
sahf
ret
sbb
out
jmp
inc
adc
int3
jmp
je
orb
xchg
mov
push
jmp
out
ror
and
dec
sub
inc
cmc
scas
movsl
push
add
insb
in
jbe
mov
adc
or
imulb
sbb
mov
mov
testl
js
stc
aad
cwtl
and
jmp
dec
dec
fdivrs
jmp
cmp
iret
enter
jno
push
sbb
and
imul
sti
jae
mov
dec
xor
mov
or
cmp
enter
repz
dec
dec
xor
jle
push
mov
add
cmp
sbb
jmp
paddw
pop
mov
lock
out
jmp
and
inc
loopne
es
pop
fidivrl
inc
mov
insl
inc
jmp
bnd
cmp
adc
cmpsl
xchg
or
in
pop
xchg
lea
or
cvtps2pi
sub
leave
das
adc
inc
mov
jp
mov
daa
lea
dec
sbb
fisubl
das
aas
dec
sahf
jp
pop
or
add
jmp
mov
add
fwait
insl
jmp
xor
mov
and
repz
push
and
xor
sub
mov
mov
mov
sti
push
pop
subl
mov
and
adc
pusha
lods
mov
cmpl
mov
jmp
sbb
das
sub
mov
and
ret
adc
cmpsl
and
xchg
popa
jmp
pop
loopne
ss
jmp
mov
jo
add
cli
pcmpeqb
dec
jge
xchg
jle
fucomip
dec
xchg
and
cmp
jmp
add
repz
repnz
mov
inc
loop
push
jmp
sahf
lods
test
jmp
adc
push
xchg
inc
stc
scas
xchg
cmp
js
imul
pop
mov
push
iret
mov
stc
and
jmp
jns
lcall
push
inc
inc
jg
cmp
inc
and
fimull
sub
aaa
test
les
jne
add
mov
fsubr
adc
filds
cmpsb
sbb
pop
xor
test
lods
repz
sub
iret
out
les
sbb
sbb
movsb
cmpsb
bound
push
js
ss
jmp
add
sbb
dec
xchg
lods
out
scas
scas
fcompl
jmp
cmp
jmp
in
in
sub
add
nop
inc
lret
push
cmp
out
pop
loop
lcall
jns
pop
jge
or
jmp
daa
jae
inc
les
cmp
pop
xlat
out
insl
jmp
iret
push
test
jmp
jae
pop
ret
xchg
mov
jle
and
xlat
in
dec
pushf
cli
or
xchg
cwtl
mov
sub
dec
jmp
adc
xchg
inc
inc
orl
mov
imul
or
or
jmp
outsb
inc
std
push
popl
jmp
into
mov
pop
lods
and
mov
mov
mov
jnp
or
cld
mov
frstor
movsb
xchg
sub
cmc
add
pop
inc
sbb
jmp
pop
cmp
and
mov
lcall
cmp
sbb
rorl
pusha
fisubs
test
sub
or
mov
inc
subb
push
int3
xchg
xor
and
push
mov
aas
insb
imul
inc
sub
mov
iret
push
mov
int3
js
push
mov
iret
lahf
lods
jno
push
dec
arpl
or
scas
sbb
cld
cmp
pusha
test
add
add
mov
imul
inc
fstpt
sub
cmp
lods
sbb
dec
inc
lds
pop
jne
pop
cmp
xor
pop
fcmovne
loopne
or
xor
cli
je
out
mov
push
pop
sub
lahf
inc
cmp
ret
mul
jmp
shlb
mov
pop
leave
mov
adc
outsb
lods
push
data16
jmp
sbb
sbb
fdivrs
pop
ja
aaa
push
cs
ljmp
imul
lahf
mov
ljmp
dec
sub
aad
sub
in
ret
sbb
out
jmp
push
stc
cwtl
mov
jmp
fidivl
mov
jp
imul
jmp
negl
pop
jmp
cmp
fisubrl
popf
dec
jno
xchg
or
and
aam
stos
push
mov
or
jge
fmull
push
gs
in
sbb
sahf
pusha
clc
push
mov
mov
outsb
sbb
jp
cwtl
xchg
push
and
hlt
lods
ja
mov
xor
insb
sub
out
mov
adc
sarl
cmp
mov
lea
nop
jmp
int3
xlat
ret
in
mov
and
call
adc
leave
jmp
sub
push
cltd
bound
jmp
stos
add
jmp
sbb
movzwl
outsb
sub
pop
clc
sbb
jle
jmp
fsubrs
mov
adc
jmp
and
sbb
sbb
mov
pushf
arpl
or
push
imul
lahf
lods
test
push
lea
pusha
rorl
ja
xchg
sbb
inc
aad
loope
add
xor
sbb
xchg
nop
dec
aaa
jns
das
or
shl
mov
cmpsb
sub
jb
icebp
in
shlb
rcrb
push
sub
xchg
jle
xchg
out
test
imul
mov
and
loope
out
jmp
iret
mov
cli
jmp
in
xchg
sti
inc
inc
dec
xor
rorb
mov
lret
push
std
fdivp
daa
in
jmp
fistpll
push
pop
jle
push
jmp
mov
loopne
sub
insb
in
adc
jmp
test
dec
shr
call
addl
fistpll
mov
orl
lret
mov
sahf
hlt
ds
pop
add
jno
mov
push
aam
stos
add
push
std
call
push
mov
inc
jmp
roll
sub
or
shl
stos
scas
dec
or
ja
push
aam
or
enter
out
sub
adc
adc
out
je
jno
scas
lods
rdpmc
adc
fwait
and
jmp
and
movsb
icebp
mov
mov
adc
sti
stc
sub
fsubr
pop
sub
add
scas
out
cmpsb
std
lods
fst
cmp
les
lods
xchg
cs
add
stc
jb
scas
sub
xor
mov
pop
jmp
jmp
xor
and
lods
sarb
sbb
jmp
lahf
fs
fisubrl
push
dec
push
jnp
dec
jmp
cmp
leave
dec
insl
mov
in
mov
cmc
push
push
dec
and
insl
outsb
mov
fwait
mov
je
jmp
xchg
mov
shlb
mov
mov
aas
repnz
aam
and
cld
ret
xor
test
mov
pop
ss
and
pop
jmp
sub
sub
adc
adc
pop
loope
sbb
aaa
xchg
pusha
sub
mov
mov
jo
jmp
imul
add
xchg
add
in
mov
outsl
sub
dec
pop
stos
js
xor
xor
inc
sbb
lods
aas
dec
xlat
les
jbe
fs
fsubrs
xor
push
lcall
lret
sub
and
pop
stos
and
push
jp
nop
xor
sub
hlt
jle,pn
dec
mov
sbb
out
stos
lret
push
mov
sbbl
imulb
pushf
in
pop
xchg
imul
shll
lods
andb
xchg
jmp
test
ljmp
lds
gs
fdivs
pop
addb
mov
sbb
fstps
xlat
add
and
mov
or
and
jmp
test
push
pop
ficoms
and
and
repnz
sbb
nop
dec
insl
xlat
jmp
sarl
jns
sub
jmp
cmp
jmp
mov
inc
shr
adc
push
pop
lcall
aas
lret
test
jmp
stos
inc
repz
cmpsb
imul
mov
shlb
daa
iret
mov
ss
stos
inc
jmp
in
ds
dec
push
add
in
jo
xor
or
xchg
sub
inc
jmp
gs
fcomps
insb
cmpsl
push
outsb
pop
jne
xchg
or
jmp
rcrl
inc
es
sub
dec
push
add
sub
and
in
bound
push
sbb
out
je
dec
jmp
movsb
push
sbb
leave
dec
enter
jmp
xor
movsb
imul
or
jmp
rolb
jp
icebp
inc
push
lret
xchg
ja
push
repz
xchg
scas
fiadds
out
and
das
mov
imul
sub
je
pop
xchg
fldenv
test
mov
dec
mov
sub
sub
mov
test
mov
sub
cmpsb
jmp
notl
or
cmp
jge
add
imul
push
out
loop
jmp
mov
insb
jbe
and
jmp
inc
dec
mov
xchg
sub
push
rcl
daa
sbb
in
int
test
and
shrl
sub
jbe
ljmp
scas
mov
lock
pop
dec
adc
lea
sbbl
push
out
sbb
out
in
call
jno
adc
jle
xor
imul
xchg
lea
cmp
push
push
into
divl
inc
lods
repz
jne
mov
and
xor
mov
jmp
jmp
into
out
in
jmp
push
repnz
inc
mov
adc
jp
push
xor
shl
or
in
stc
int3
je
pop
cmp
daa
cmp
and
jmp
fcoms
sbb
movb
and
sub
aaa
cli
and
xorps
xor
ret
shr
dec
loop
les
mov
sbb
cmp
imul
fwait
out
daa
xchg
test
loopne
push
add
mov
cmc
or
aaa
adc
sbb
add
cld
sub
sub
dec
add
addr16
iret
or
add
pop
jmp
popl
and
movsb
jmp
jae
test
inc
sbb
jmp
imul
inc
scas
into
jmp
jecxz
dec
and
arpl
xchg
aaa
rclb
hlt
leave
jmp
sbb
roll
call
and
scas
cmp
jmp
or
adc
pop
out
jmp
stos
adc
lods
das
sbb
repz
sub
adc
sub
neg
cli
imul
xchg
push
sbb
ret
fucomi
dec
pop
loop
dec
mov
lret
scas
inc
add
adc
pop
cmp
and
rorl
dec
daa
jb
cmpsl
andl
loop
sbb
jb
inc
jmp
xor
push
pop
enter
mov
mov
cmpsb
xchg
incl
leave
aad
mov
std
and
xor
jmp
dec
jno
cmp
push
loopne
sbb
loope
fcmovnbe
insb
popa
jmp
cmp
das
mov
lahf
pop
jmp
int
mov
test
lret
adc
cwtl
sub
adc
repnz
mov
imul
mov
pop
pop
dec
mov
mov
sbb
test
das
js
mov
sub
loopne
data16
cmpsb
into
sbb
jmp
xor
jnp
pop
inc
push
add
mov
mov
inc
or
test
fadd
adc
mov
leave
and
jne
jmp
inc
xchg
subb
dec
and
nop
sarl
pop
jb
push
push
jl
lret
dec
jmp
cmp
sub
push
icebp
popf
jb
movsb
xor
xchg
lods
mov
jmp
push
in
jmp
iret
xchg
jnp
xchg
imul
sti
jae
insb
inc
ljmp
mov
xor
je
mov
xchg
jne
lds
icebp
lahf
jmp
sahf
and
clc
cli
cmp
and
xorb
std
call
arpl
out
push
pop
imul
pop
fsubs
dec
pop
mov
mov
fidivs
push
push
adc
gs
xrelease
dec
sub
xchg
js
das
aad
jmp
cmp
insb
push
jmp
stos
sbb
mov
or
xor
mov
inc
mov
jmp
imul
repz
pop
jecxz
outsb
mov
lret
inc
mov
sub
dec
jae
xchg
cmpsb
stos
jmp
dec
lret
ljmp
jb
repnz
sti
dec
cld
sbb
xchg
jmp
ror
shll
xchg
lds
leave
push
xlat
mov
data16
jmp
xor
dec
jmp
or
jne
sbb
or
mov
sub
pop
mov
jmp
movsl
mov
imul
mov
jecxz
dec
push
xor
hlt
jg
fucomp
adc
add
test
jnp
shr
fnstcw
or
jno,pn
push
adc
in
mov
popf
mov
mov
mov
mov
lret
and
adc
sbb
cmpsb
clc
jnp
popa
sbb
cltd
rorl
sbb
subb
push
mov
movsl
lahf
jmp
repnz
in
sub
mov
xlat
mov
mov
mov
and
mov
cmp
idivb
or
out
jmp
sbb
add
outsb
out
mov
xchg
pop
and
push
stos
xchg
enter
mov
jecxz
fs
inc
adc
push
arpl
or
add
xlat
push
lahf
mov
sub
lds
xchg
aas
lcall
pop
scas
cmpsb
mov
popl
cmovae
adc
in
rcrb
cmp
js
dec
jmp
cli
lock
aas
mov
jmp
mov
add
test
nop
je
jp
out
int
leave
or
dec
or
sub
dec
add
hlt
daa
cwtl
or
dec
dec
arpl
divb
jl
ret
imull
sub
jmp
scas
leave
sub
test
jmp
cmovl
jmp
iret
adc
sarb
xor
mov
push
jmp
out
addr16
mov
push
mov
nop
mov
add
aam
cmp
jno
sbb
adc
repz
loope
jmp
and
jmp
lds
add
jg
imul
adc
inc
outsb
add
outsl
adc
int
jmp
and
imul
ret
add
push
fs
in
mov
or
xchg
outsb
xchg
test
mov
jmp
popl
sub
add
ss
jmp
jns
jo
mov
imul
jmp
xchg
fstp
jo
jno
pusha
mov
int
stc
dec
sbb
je
pop
popa
jp
xor
inc
push
jmp
jg
cmp
nop
jb
adc
fsubrs
scas
mov
lods
or
jmp
mov
mov
jp
cs
lea
inc
jmp
lcall
into
cmp
clc
pop
scas
adc
int3
sub
jmp
ss
out
and
scas
inc
lret
jbe
sti
push
int
out
test
stos
pop
cmove
cmp
bound
aam
popa
outsb
jg
int
dec
pop
sub
jmp
insb
jne
dec
xor
inc
lods
lea
fnstenv
jl
adc
andb
scas
sbb
hlt
xchg
adc
sub
aad
pop
sti
fsubl
movsb
scas
mov
sti
mov
jg
movsl
push
jmp
ret
mov
testl
add
iret
jmp
lret
dec
or
add
out
adc
mov
and
test
sbb
sub
stos
movsb
push
nop
xor
pop
xchg
shlb
in
jne
jmp
sub
sub
xchg
push
stc
mov
fstl
pop
and
cmc
lret
jae
fcompl
mov
mov
sahf
vmread
repnz
sub
les
std
adc
sbb
mov
push
jmp
mov
dec
pop
je
jns
pop
dec
push
sbb
adc
iret
movsl
mov
add
cmp
jmp
js
xchg
add
mov
icebp
push
xor
mov
inc
add
and
bound
jne
ja
idivb
bound
testl
adc
cmpsb
std
cwtl
js
or
ficomps
xchg
psubq
and
mov
testb
pop
sarl
pop
or
shrd
sbb
daa
pusha
dec
lahf
inc
mov
xchg
jb
mov
or
cmp
sbb
adc
lods
mov
shrb
sbb
xor
sbb
sbb
loopne
sti
int3
testb
jmp
jecxz
jo
sub
incl
cmp
in
jle
mov
das
or
stc
pushf
add
fsubr
outsl
scas
lds
sub
jmp
data16
xlat
pop
gs
ret
test
cli
xchg
lret
lods
jmp
xchg
fidivrl
arpl
sti
mov
cltd
mov
out
push
jne
hlt
stos
fldcw
mov
mov
testb
mov
jmp
mov
fsubr
sti
push
and
cmp
scas
nop
sub
mov
out
jmp
xchg
or
aam
mov
pushf
movsb
mov
push
pop
div
mov
dec
or
testl
aad
and
sbb
jb
cltd
jmp
subb
popa
in
pop
and
imul
mov
push
cmpl
inc
into
or
test
jns
sbb
jns
imul
inc
pop
rolb
pop
push
scas
clc
dec
add
mov
jmp
repnz
sub
stos
pop
add
xchg
jmp
cmpl
pop
or
push
dec
mov
dec
and
pop
xchg
stc
cltd
lret
test
inc
xchg
daa
push
jmp
push
je
adc
and
pop
xchg
push
jmp
lret
mov
lock
enter
sbb
and
xor
or
arpl
pop
add
dec
sahf
jmp
jbe
jl
dec
fwait
push
fidivrl
aaa
mov
xchg
data16
fistpll
adc
scas
ljmp
xchg
shll
int3
shl
jo
jmp
jp
jb,pn
xchg
inc
int
push
imul
loope
and
lock
xchg
bound
fidivrl
mov
pop
jmp
ja
incb
pop
mov
cmpsb
push
mov
jmp
push
mov
addr16
xchg
jmp
stc
cmp
xor
imul
iret
outsb
testl
push
es
xchg
aas
mov
std
in
bound
stc
popf
lahf
or
and
or
mov
test
push
sub
adc
push
insl
es
mov
mov
or
lods
inc
imul
std
popf
data16
jbe
jmp
xchg
int3
cmc
push
aam
jns
ficoml
test
je
ja,pt
pop
mov
lcall
cwtl
in
push
imul
and
sbb
jno
aad
verw
sarb
addr16
jne
jmp
ds
mov
push
mov
xor
mov
dec
repz
and
push
in
adc
pusha
xor
shl
xor
int
xchg
mov
repz
cmp
hlt
scas
lret
outsl
loop
or
jmp
testl
sbb
movsb
mov
or
add
adc
or
nop
mov
js
shrl
inc
cmpsb
jmp
aas
popf
lcall
mov
mov
nop
jl
xor
sub
adc
pop
add
cmp
mov
pop
lods
imul
out
pop
push
fs
aas
cmp
cmp
and
jmp
push
out
mov
stos
push
mov
jmp
pop
jo
or
push
xchg
js
sar
shll
aas
inc
xor
jmp
pushf
push
leave
cmp
adc
xor
sbb
adc
inc
push
jb
inc
mov
rcrb
jo
enter
leave
aam
push
jl
bswap
icebp
sbb
stc
popf
push
adc
jmp
es
fdivrs
mov
jp,pt
imul
mov
cs
jmp
hlt
sti
clc
stc
stos
data16
stos
xchg
mov
sarb
imul
int3
jge
fisttps
ds
add
je
dec
pop
outsb
std
pop
mov
cmp
sbb
jmp
adc
aam
adc
imul
mov
dec
test
fwait
mov
cmp
lods
inc
outsl
jae
xor
cld
push
lret
inc
jmp
int
jmp
add
or
and
out
ja
jmp
inc
shrb
into
xchg
sbb
mov
inc
imul
call
mov
fistpll
fldpi
pop
scas
inc
jmp
outsl
xlat
mov
loop
cmc
adc
sub
dec
and
jp
les
movsb
fisttpll
xor
push
mov
es
jmp
and
xchg
dec
add
repz
imul
dec
mov
mov
outsl
daa
lock
push
fwait
jmp
enter
jnp
lret
lods
fidivrl
mov
bnd
pop
and
mov
sub
xor
es
sub
dec
outsb
stc
add
je
outsb
and
xor
pop
ret
loope
cli
ja
jecxz
fwait
push
xchg
cmp
nop
cld
xor
xor
jmp
scas
and
dec
leave
clc
and
imull
outsb
jge
mov
ret
movsl
add
jmp
sbb
pop
and
testl
pop
div
dec
iret
ja
movsb
jmp
add
xor
test
dec
jb
sub
push
or
sbb
xor
mov
lods
nop
scas
lock
add
pusha
popl
jae
pop
into
and
inc
or
mov
je
lahf
rep
nop
push
lret
push
xchg
jge
or
mov
push
pusha
lods
jmp
push
mov
shr
jno
into
push
daa
dec
push
outsb
pop
inc
js
adc
je
dec
jmp
loopne
cmp
imul
and
jnp
push
jp
and
leave
jl
cld
pushf
fidivrl
popf
jnp
enter
idivb
cmpsl
jmp
sub
mov
jmp
sar
int
push
movsb
mov
shr
cli
inc
pop
ret
jmp
and
xchg
cmpl
cli
mov
cwtl
cmp
pop
and
pop
pop
imul
sbb
mov
inc
hlt
sub
rcl
out
add
loope
mov
outsl
or
scas
hlt
repz
pushf
sahf
push
scas
ljmp
sub
and
cld
test
pusha
sub
pop
ds
cmpsb
jg
test
das
jle
xor
out
jmp
xchg
xor
xor
icebp
cmpsb
adcl
jmp
test
lods
leave
xor
in
mov
adc
sub
adc
ud1
add
out
lods
adc
mov
movsl
insb
or
cli
pop
jno
jmp
mov
jmp
jmp
adc
imul
shlb
jmp
dec
xchg
jge
xor
outsl
pop
outsl
mov
lods
mov
sub
or
jnp
sbb
sub
lods
iret
call
jp
inc
xchg
jmp
pusha
leave
pushf
mov
bnd
por
mov
inc
jmp
push
mov
clc
jmp
movsb
cmpsl
or
fs
lods
andl
pop
push
scas
jmp
loopne
sub
insl
fisttps
sbb
adc
push
jmp
inc
lock
sub
jmp
or
sbb
sti
sbb
incl
sub
jl
mov
adc
aaa
repz
and
jmp
push
or
jmp
loope
out
addr16
add
jmp
xchg
aam
subl
inc
into
push
add
movb
lods
mov
inc
and
jnp
jb
mov
sti
sar
and
or
aad
push
push
movsl
lahf
shrb
xor
movl
addr16
movsl
or
lret
adc
aas
in
stc
loop
jns
lods
loopne
push
and
ret
fisubs
jnp
fstpt
je
and
fsub
jg
stos
and
mov
mov
lea
jp
daa
sub
das
add
sub
ds
add
mov
lret
sub
sbb
es
int3
sub
pop
inc
or
pop
scas
subb
int3
sub
shrb
cmp
fdiv
outsb
mov
inc
inc
bound
jmp
popa
and
cmp
mov
push
adc
or
sub
cli
scas
stos
insb
outsb
std
xchg
aas
imul
xorb
leave
inc
cmp
or
cmpsb
sbb
lea
gs
les
jmp
xchg
sbb
xor
lahf
or
ret
sarl
cmp
repnz
xor
in
xlat
sbb
or
sbb
ret
or
jmp
daa
stos
or
jl
jmp
jle
aaa
mov
cmp
pop
add
scas
pop
push
jmp
or
mov
mov
and
dec
gs
or
std
pop
aad
lea
inc
stos
loopne
mov
icebp
and
iret
jg
mov
push
and
pop
jmp
sbb
adc
jge
imul
xchg
sub
push
cmp
insl
out
pop
shl
sti
leave
sbb
ds
ja
mov
aaa
xchg
out
nop
cmp
imul
jbe
enter
mov
inc
lcall
cmp
ret
xchg
xor
repnz
push
mov
jge
inc
jmp
ret
jecxz
and
hlt
jbe
out
int3
in
and
daa
scas
mov
or
scas
cld
mov
push
or
sub
cmpsb
jmp
psubd
cmpl
or
push
faddl
fnstenv
ret
imul
dec
dec
bswap
test
idiv
cltd
mov
jge
clc
xchg
int3
gs
mov
pop
push
mov
sub
outsl
hlt
loopne
lea
ds
pop
mov
fistl
out
jmp
mov
xlat
xor
cmp
sahf
xchg
fistpll
lcall
daa
mov
push
mov
mov
sbb
inc
cs
sbb
divb
shr
out
or
push
mov
inc
dec
jmp
adc
mov
adcl
hlt
lods
and
jp
cmpsl
jg
sbb
stos
lods
fsubrs
pop
push
jae
insl
mov
jmp
add
cmpsb
sub
js
mov
loopne
repnz
outsb
xor
mov
popf
stos
push
pushf
mov
in
and
xor
jmp
xchg
rcrb
cmp
lods
mov
sub
subl
sub
lret
or
cmc
sahf
push
nop
mov
pop
sub
mov
rol
sbb
and
in
ds
imul
cld
adc
xchg
mov
out
call
sub
cmp
cmpsl
sub
test
mov
push
jns
dec
iret
or
out
jmp
or
xor
enter
mov
shll
test
mov
and
ficoms
pop
or
aas
sub
mov
adc
insl
cmpsl
mov
jl
or
aam
dec
imul
inc
and
or
push
push
loop
imul
jecxz
jmp
xor
xchg
leave
jmp
lods
sub
stos
jmp
cmpsb
mov
ss
push
dec
xor
xlat
icebp
jmp
bound
mov
fldcw
popf
push
jecxz
inc
sub
xlat
fucomip
push
outsl
rorl
in
gs
jo
xor
jmp
das
mov
movsb
cmp
sub
bound
andb
outsl
mov
jmp
test
sbb
dec
mov
pushl
icebp
or
or
push
in
mov
xchg
push
out
lret
data16
sub
jne
cltd
mov
adc
xchg
wbinvd
leave
inc
jmp
fcomip
sub
and
sbb
jl
inc
or
outsb
dec
mov
iret
movsb
ja
jl
pop
pop
cmc
div
fucomp
xchg
mov
imul
mov
mov
sub
dec
fsubr
fldl
xor
sbb
aad
scas
je
mov
jo
mov
outsb
repz
popf
shl
sub
out
push
clc
or
iret
mov
jl
insl
lret
stc
sub
cmp
lods
mov
adc
jmp
das
inc
movsb
call
jbe
lcall
xlat
xchg
jg
push
mov
scas
pop
dec
jb
and
mov
xor
sub
jp
jg
jns
fwait
jmp
out
jmp
mov
xor
shr
xchg
in
jecxz
sub
jmp
lret
aam
faddl
pop
in
sti
cmpsb
imul
jo
xchg
and
jmp
inc
and
psrlq
mov
inc
shlb
loopne
xlat
jge
mov
lock
mov
pop
pop
inc
add
xor
lods
add
xchg
mov
ds
fdiv
jne
aad
sub
test
scas
xchg
out
movsl
hlt
dec
sub
sub
testl
mov
push
push
fldenv
inc
mov
push
jmp
sub
call
jmp
or
scas
mov
cmc
xor
jo
sub
pop
xchg
adc
mov
jmp
rcrl
push
aam
sbb
cmp
out
add
xlat
je
fistl
das
lods
inc
fsubr
adc
out
mov
and
hlt
dec
imul
or
popa
out
jne
jmp
lret
xchg
imul
stos
repnz
jmp
mov
outsb
cmc
push
mov
lds
lock
xor
jb
dec
nop
adc
int
xchg
pop
cli
lret
mov
xor
lods
sub
fistl
test
jmp
xchg
and
inc
dec
call
rorb
hlt
mov
mov
xor
lods
fs
and
or
mov
jmp
js
inc
hlt
dec
outsl
and
pop
clc
sarl
aas
jmp
add
xchg
jmp
shl
xor
ds
dec
jmp
js
jne
lret
test
cmp
call
inc
push
outsl
test
mov
repnz
lods
or
incl
xchg
arpl
jbe
stc
aas
aad
out
jmp
and
pop
sub
xchg
mov
outsl
push
into
sbb
inc
lock
push
jmp
test
out
xchg
add
cmp
cmpsb
sbb
push
xor
int
aaa
pop
pop
mov
jmp
test
jno
or
mov
scas
flds
int3
xchg
mov
mov
ljmp
and
dec
mov
xchg
ficomps
sub
jns
adc
jb
sub
mov
shlb
arpl
sub
or
movsl
nop
sub
xor
adc
push
lods
cmp
push
jecxz
sub
cwtl
mov
jno
test
add
stc
jmp
fstl
cli
mov
mov
push
cmp
nop
and
and
cwtl
jmp
cmp
sub
dec
xchg
out
aas
and
dec
iret
popa
movsb
mov
jp
int3
jnp
inc
xchg
xor
push
push
add
sub
aaa
js
stc
jl
fdiv
pop
push
jmp
inc
mov
pop
mov
cmpsb
ljmp
adc
jmp
mull
test
jmp
std
stos
jl
mov
int
jecxz
fdivrs
lods
fs
or
cwtl
sub
cmpsb
jo
sub
lods
mov
add
cltd
and
push
loop
xor
es
ret
lret
jmp
inc
aas
jno
dec
and
and
jmp
test
push
mov
jnp
test
sbbl
fs
out
in
push
sub
aas
hlt
mov
inc
or
cltd
mov
or
lods
push
cmp
and
push
xor
ss
fcompl
mov
mov
jmp
shlb
inc
add
sub
sub
adcl
leave
das
push
bound
inc
cmp
pop
stc
fidivrl
test
push
lods
int3
ds
jns
or
loopne
add
jae
mov
add
xchg
jne
aad
inc
xchg
and
scas
pop
ret
or
jmp
mov
loope
lods
testb
cmpsl
xchg
icebp
mov
jmp
jns
mov
push
loop
lock
mov
jmp
mov
mov
stos
xor
int
jno
cld
stc
push
jmp
push
jo
cwtl
std
mov
sub
xchg
or
mov
cmp
lahf
aam
aad
add
xor
dec
jmp
ss
subb
popf
add
mov
mov
out
shr
into
iret
jb
repz
cmpsb
jmp
icebp
clc
mov
imul
fsubrp
dec
idivb
jns
and
in
fwait
lcall
ljmp
push
pop
xchg
repnz
adc
sub
sarl
mov
pop
imul
push
sbb
adc
andb
imul
pop
xchg
or
mov
pop
and
or
fld
mov
add
lret
addb
cld
xchg
sub
mov
jmp
fdivp
pushf
in
mov
jmp
sub
or
rcll
test
test
mov
sti
leave
inc
enter
stos
dec
in
outsb
iret
jle
sub
insb
push
cld
push
and
push
jmp
shrb
cmp
repz
push
jp
fmulp
sbb
fnstcw
lcall
stc
les
jmp
aaa
inc
mov
jmp
xor
xor
mov
jmp
mov
xchg
cld
and
mov
cmp
jmp
andb
jno
mov
ljmp
sub
mov
adc
es
jle
cmp
ret
pop
push
jl
push
mov
testl
sahf
icebp
jge
push
add
mov
das
jecxz
cld
dec
jmp
mov
or
in
ret
mov
sti
adc
jmp
bound
cld
push
into
movsl
stos
jmp
sub
aaa
cmp
sub
jne
test
or
push
fs
cmpl
mov
fwait
jo
mov
pop
mov
pop
daa
insl
push
pop
push
in
and
add
xchg
lret
imul
outsb
cmp
mov
fwait
or
outsl
jno
mov
ficoms
cmpsl
jmp
sahf
std
mov
sbb
fdivrl
mov
imul
lods
hlt
push
clc
mov
cwtl
mov
xchg
jmp
xor
jmp
out
and
mov
js
sti
dec
jbe
xchg
mov
lcall
jmp
pushl
or
mov
lods
movsl
inc
sar
inc
nop
orps
jmp
or
ret
inc
ss
imul
inc
movsl
outsb
push
movsb
scas
jl
jmp
xchg
test
mov
sbb
jmp
jo
fs
inc
lods
mov
and
xchg
shrl
stc
pop
mov
and
push
xchg
jmp
in
shll
jmp
test
pop
loope
xor
stos
mov
hlt
jge
std
push
stos
jmp
xor
leave
adc
jmp
ljmp
jmp
arpl
push
xor
or
sbb
mov
sub
jmp
lods
xchg
adc
push
xor
loope
pop
insb
push
jmp
insl
adc
mov
das
daa
mov
dec
shlb
push
lods
lea
fnstsw
add
adc
mov
popf
jg
test
mov
mov
and
push
cmp
imul
dec
out
sbb
popa
nop
mov
jmp
inc
and
pop
cmp
xchg
push
mov
faddp
in
shl
je
scas
repnz
in
xchg
jmp
and
sub
mov
push
notl
pop
jns
mov
xchg
daa
jmp
and
adc
js
jmp
cmp
adcl
loop
xor
push
or
aam
pop
ljmp
mov
jmp
movsl
and
gs
outsb
mov
sub
mov
shll
and
fidivrs
mov
cmpsl
jmp
mov
in
rorb
push
enter
jmp
sub
mov
test
pop
jmp
or
cmp
dec
dec
mov
div
stc
mov
or
and
xchg
loop
mov
mov
xor
lods
repz
daa
in
pop
push
sbb
mov
mov
stc
sub
pop
aas
mov
imull
push
pushf
mov
cmp
add
inc
xchg
jmp
mov
sub
xchg
cmpsb
jmp
pusha
mov
add
shld
stc
jmp
mov
xchg
add
cmp
sub
mov
scas
jno
jmp
adc
int
mov
dec
arpl
stos
test
fsts
pop
repz
mov
dec
xor
cld
xor
rorl
jmp
inc
into
cmp
mov
sbb
lret
or
rol
stos
sbb
aas
inc
bnd
gs
pushw
arpl
mov
stos
std
pop
jb
daa
int3
mov
out
jno
cmp
xor
hlt
nop
out
add
dec
add
lods
cmc
xchg
mov
imul
add
adc
cmpsl
cwtl
stos
neg
mov
fsubrs
in
dec
pop
jmp
and
stos
jno
ror
mov
popa
mov
xchg
sbb
mov
adc
sub
dec
incl
arpl
inc
jmp
xchg
push
push
subl
jmp
cmpsl
scas
xor
por
sub
jmp
or
mov
rolb
in
xchg
mov
jno
lret
mov
arpl
cmpsb
mov
inc
mov
addr16
int3
cld
adc
scas
rcl
imul
sub
mov
add
dec
jmp
cmpsb
or
add
jmp
jp
adcb
ss
std
cmp
adc
loop
xchg
lret
push
sub
out
roll
stos
inc
sbb
push
dec
sub
clc
cmc
mov
add
cmp
imul
mov
das
pop
outsb
mov
sbb
add
sub
adc
jecxz
push
sti
and
fdivl
jmp
sub
scas
pop
adc
and
push
cmpsl
dec
mov
data16
sbb
int
push
scas
arpl
add
jmp
stos
lret
adc
shr
clc
ljmp
pop
stc
and
jmp
sub
cwtl
sahf
outsb
aaa
sub
lods
cmpsb
push
pop
jno
daa
sbb
jmp
mov
pop
xor
icebp
orl
ds
jmp
das
addr16
jno
scas
enter
xchg
cmp
mov
iret
sub
cmpsb
add
jmp
ficomps
shll
jmp
mov
leave
fldpi
cmp
cmpsl
mov
jmp
push
xchg
jbe
pushf
adc
or
and
repz
std
lods
fdivl
out
test
dec
jmp
mov
xchg
mov
or
fwait
pop
jmp
vcvtsd2si
and
out
repnz
divl
aas
clc
int
sbb
rep
jbe
xchg
loop
insb
mov
add
mov
out
fdivl
mov
in
ja
fwait
jmp
sub
repnz
jmp
aad
shl
clc
and
leave
push
add
daa
xchg
test
mov
jecxz
call
stos
mov
jns
or
adc
xchg
rolb
jmp
out
in
push
fnstcw
jmp
push
and
clc
xor
loop
sti
pop
dec
cmp
or
jmp
add
mov
lcall
ss
testb
test
mov
aas
cmp
cmpl
in
jmp
xor
repnz
sub
test
rcrl
jae
and
jmp
aad
cld
inc
outsb
into
dec
jmp
or
xchg
test
adc
int
sbb
jmp
rolb
lret
and
scas
loop
ja
mov
mov
out
jmp
jnp
jmp
sub
hlt
cltd
repz
lods
call
mov
fwait
xchg
xchg
and
scas
cmp
roll
add
out
dec
hlt
sbb
or
dec
jmp
cmp
shll
cltd
mov
sub
jmp
fwait
aad
and
push
test
js
sbb
fdivrs
jmp
push
adc
sub
shll
call
xor
les
daa
mov
or
or
cs
movl
jae
sbbb
scas
lret
rcl
popl
jmp
and
aaa
dec
jle
mov
jbe
aam
repnz
push
lods
add
and
lods
sub
mov
fcoml
jno
clc
xor
scas
push
outsl
xor
inc
or
cmc
ljmp
lret
jl
and
fsubrl
and
push
rcl
shll
sbb
and
xor
fwait
jmp
and
xlat
jmp
stos
ret
fcomp
pusha
jmp
daa
add
jmp
lods
ds
lea
lret
call
sahf
mov
cs
imul
test
sbb
loop
popf
sbb
push
jmp
aam
cwtl
test
jle
and
mov
cmp
and
loopne
dec
adc
pusha
mov
lahf
and
repz
add
mov
sub
and
mov
sub
ds
andl
mov
xchg
test
jmp
negl
dec
and
sub
add
sub
enter
jmp
add
dec
dec
je
cwtl
xlat
pop
cld
inc
scas
pop
sbb
pop
cmp
pop
mov
mov
push
ret
enter
jmp
lret
and
das
fnstsw
push
repnz
or
jo
xchg
sbb
imul
pusha
call
sahf
jp
adc
mov
push
ds
dec
adc
mov
pusha
inc
fdivrl
adc
xor
in
repnz
adc
sbb
shrb
mul
cwtl
or
scas
push
ret
push
aam
or
cld
mov
jmp
add
in
jmp
inc
popf
adc
movsl
xor
loop
or
add
adc
dec
test
jbe
scas
mov
add
push
mov
cltd
clc
lcall
cmp
xchg
outsb
jmp
mov
lret
dec
adc
mov
jb
sub
and
shlb
out
dec
xor
sbb
xchg
jmp
insb
or
push
leave
dec
jmp
add
mov
mov
rol
inc
mov
jmp
das
cmp
inc
or
jns
call
repz
cld
jmp
je
inc
lea
sub
in
aam
into
jbe
inc
es
bound
mov
cmc
jge
jmp
shl
test
iret
es
pop
adc
and
add
pushf
popa
jmp
in
ss
and
xor
out
sub
mov
inc
adc
cmp
cltd
cmp
jmp
jl
push
xchg
jmp
out
jbe
imul
push
xor
mov
pop
jmp
mov
jl
jmp
pop
mov
daa
or
loop
gs
adc
subps
repz
shr
pop
mov
add
pop
jb
xor
push
jo
cmpsb
add
adc
pop
popf
cwtl
outsl
cli
pop
pop
fwait
outsl
scas
cld
sti
jb
mov
daa
dec
arpl
stos
pop
sub
mov
nop
push
js
sbb
pop
scas
mov
pop
push
out
add
fldenv
imul
and
cltd
or
cmc
aaa
mov
stos
clc
pop
in
xchg
dec
sbb
mov
in
loopne
dec
lret
lods
test
add
mov
push
mov
xor
push
pop
mov
scas
jmp
or
mov
orl
jne
insl
lods
test
and
fisubrl
bnd
pushf
outsb
cld
ds
and
shrb
add
in
sub
mov
lahf
xor
jmp
data16
les
jmp
cwtl
in
jno
nop
imul
sub
out
sbb
aaa
setge
jmp
push
jmp
pop
repnz
mov
orl
clc
sub
mov
jmp
lods
adcl
mov
jmp
xchg
in
pop
imul
fcomps
aas
cmp
rorl
ljmp
xorl
adc
or
push
mov
lods
pusha
jmp
pop
scas
adc
inc
jmp
fsubrs
mov
sub
loopne
fimull
pop
jnp
repnz
sbb
movsb
lock
std
lods
or
imul
and
mov
popf
test
out
loopne
dec
pop
mov
sub
mov
je
js
out
jmp
mov
mov
mul
pop
dec
adc
and
ffree
lock
mov
jae
cmp
pop
cltd
jg
flds
ss
shr
shlb
in
arpl
jmp
xchg
mov
cmpsb
dec
jmp
int3
add
test
adc
test
out
jmp
imul
outsb
aam
push
lods
inc
sub
xchg
push
and
in
sub
jmp
out
jecxz
jmp
outsb
stos
data16
push
jle
push
test
leave
add
cmpsb
jmp
or
mov
or
test
jmp
inc
pop
push
or
cmp
shrb
fisubrl
xlat
mov
sbb
leave
cmpsb
cli
mov
xchg
add
inc
push
adc
xchg
ret
cs
jmp
nop
cld
sbb
add
out
or
scas
mov
pop
and
ds
xchg
pop
dec
xchg
ja
jmp
rsm
sbb
loop
imul
aas
pop
xchg
push
push
stos
jmp
or
pusha
outsl
les
cltd
aad
inc
xor
sub
jo
popa
clc
sbb
push
icebp
mov
jg
push
cmp
aaa
imul
mov
xlat
ror
and
fisubs
aaa
jo
jae
jmp
cli
lret
vpcmpgtw
xor
adc
push
jmp
add
shlb
cmpsl
jno
cmpsb
leavew
movl
ds
xchg
loop
add
jb
cwtl
mov
lahf
push
sti
daa
and
dec
jmp
ljmp
jmp
mov
sub
or
add
lcall
aad
or
xor
sarl
imul
add
mov
jmp
and
jle
xchg
jmp
xchg
mov
pop
cmp
std
jmp
fisttpll
lock
movsl
lods
mov
push
inc
test
repnz
sahf
jmp
jo
insb
add
out
jmp
test
pop
jmp
lock
mov
aaa
lods
xor
xchg
gs
jmp
mov
sbb
shll
jmp
mov
stc
clc
jmp
mov
adc
xchg
or
inc
xor
enter
inc
or
negb
xor
dec
jo
dec
idivl
inc
fcmovne
and
jne
cmpsb
xchg
xor
mov
sarb
push
cmp
jp
cs
stos
or
pop
or
mov
lahf
mov
mov
repnz
ret
sbb
sub
inc
adc
imul
and
mov
notl
fsubr
movsl
inc
pop
in
jp
popa
test
fisubrs
push
in
stc
jmp
add
push
or
jg
mov
cmc
pusha
adc
pop
xchg
jbe
mov
lret
mov
mov
jg
clc
stc
leave
jmp
in
aam
inc
jle
lods
inc
movsb
popf
mov
or
xchg
addr16
mov
mov
pop
jmp
ljmp
leave
int
ja
push
and
ds
xor
push
fsubs
and
cmp
dec
icebp
jmp
jo
jb
mov
mov
je
mov
jmp
addl
mov
scas
cmpsl
lcall
pop
jmp
xor
fadd
mov
sti
test
arpl
negl
jmp
inc
push
mov
lods
pushf
insl
rorl
push
push
push
sbb
lea
out
shrb
in
mov
sub
jmp
fildll
xor
rcll
mov
pop
insb
inc
scas
in
jmp
movsb
gs
pushf
mov
imul
inc
dec
js
push
and
pop
jmp
jle
cmp
xchg
sub
pop
xor
dec
xchg
jmp
int3
movsb
fidivrs
jne
and
repnz
jmp
and
ret
or
jmp
or
dec
add
popf
fidivrl
push
outsb
loope
imul
inc
add
lret
jb
in
jmp
repz
stc
mov
sbb
mov
jo
int3
addr16
sub
mov
lods
cltd
xor
repz
out
mulb
xchg
xchg
xchg
sbb
aad
movsl
popf
popa
call
push
lods
jne
jge
add
outsl
outsl
pop
fsub
scas
mov
mov
psubsb
movsb
add
rcrb
add
mov
jb
subb
pop
mov
pop
cmp
inc
mov
add
mul
leave
fldpi
and
mov
test
or
fistpll
jmp
cmp
in
pop
sub
lcall
mov
imul
sub
addr16
clc
loop
sbb
push
dec
or
cwtl
orl
lods
out
std
fidivs
inc
fistl
jmp
jo
pop
scas
cs
jmp
add
mov
lods
orb
push
lret
sbb
stos
insb
pushf
push
ss
jmp
push
mov
cmp
add
dec
mov
stos
aam
cli
xor
cmpsl
sub
ss
lahf
cs
dec
test
int3
int
lea
inc
aam
pop
mov
inc
test
mov
push
xor
lea
inc
cmp
jmp
or
sub
jl
cli
loope
dec
or
jmp
scas
sbbb
add
repz
out
aad
movsb
add
inc
clc
cltd
sbb
bound
pop
inc
outsb
es
in
xor
xor
aad
jg
pop
mov
xor
ljmp
jl
jo
jmp
shlb
in
push
je
cwtl
xchg
pushf
cmp
adc
cli
ds
hlt
scas
int
xor
adc
jbe
pop
iret
inc
pop
scas
fs
cmp
pop
test
sahf
jp
cmp
loope
add
add
mov
cmp
shll
jo
cmp
add
xchg
sub
or
xchg
jbe
subl
mov
pushf
in
or
or
mov
sub
xor
adc
out
add
jmp
xor
push
jb
adc
mov
jmp
cmp
jmp
push
add
inc
lods
enter
sbb
and
push
insb
jmp
das
mov
adc
jp
fcoms
jmp
sbb
sub
jbe
jmp
popa
sbb
sub
fdivl
inc
sbb
sub
pop
add
sbb
and
leave
mov
dec
cmp
fsubrl
sbb
push
cmp
inc
lahf
xor
sub
add
sbb
in
aaa
jmp
sbb
push
scas
mov
sub
repz
jmp
jo
add
pusha
sub
cmp
out
testb
mov
or
iret
jb
gs
or
mov
add
mov
sub
adc
leave
or
out
jmp
mov
rclb
sti
jbe
int3
in
insl
mov
dec
aad
jne
int3
stos
xor
inc
pushf
out
jmp
movsb
lahf
pop
fldt
out
lock
jmp
es
push
int3
lods
xchg
and
out
orb
jmp
clc
sub
daa
sub
mov
jg
sbb
fdivl
negl
sub
xor
and
mov
sub
and
xchg
sub
sarl
pop
rolb
mov
mov
mov
fs
dec
mov
in
jmp
mov
add
mov
popa
stc
and
loope
movl
sub
jnp
or
cli
jecxz
sbb
and
fimuls
push
mov
add
pop
xor
fwait
pop
insl
and
rcll
xor
in
jmp
cmp
jg
jns
push
cmp
lcall
ret
shl
and
fsts
jmp
mov
cwtl
movl
lret
push
push
repnz
in
sti
test
out
movl
pop
xchg
ljmp
rorb
cmp
dec
push
fs
pop
cmpb
lock
lds
dec
jo
pop
outsb
mov
dec
push
cmpsl
adc
outsl
fsubrs
jmp
mov
jmp
mov
cwtl
push
jmp
stos
imul
add
jae
lods
push
pusha
sub
sbb
dec
xchg
rorb
sbb
jmp
stc
xchg
repnz
mov
dec
lret
sub
add
pusha
mov
cmpl
and
out
lods
iret
cmp
mov
jb
jmp
int3
push
push
sbb
or
mov
sbb
pop
inc
fnstcw
push
mov
inc
sbb
ret
pop
add
or
jne
nop
jns
jg
lods
pop
mov
or
shll
outsl
and
sub
adc
jle
xor
inc
mov
mov
jmp
in
cld
clc
js
lret
cltd
xchg
add
jmp
mov
lret
sbb
xor
cmp
int
pop
pop
or
xchg
sti
mov
fdivr
int
jmp
mov
jmp
imul
sbb
jbe
fldcw
jb
cmp
add
fwait
pop
inc
inc
jmp
orl
out
jmp
sti
pop
sbb
or
mov
out
test
mov
pop
or
lods
mov
adc
xchg
in
jmp
imul
jmp
outsl
mov
pop
outsb
push
arpl
std
sbb
jns
mov
pop
jmp
cmpsl
mov
adc
lock
dec
inc
mov
fsubr
fiadds
call
int3
outsb
stos
iret
in
cld
and
mov
push
and
clc
sbb
std
adc
pushf
inc
inc
sbb
sub
lock
xor
outsl
enter
aas
jmp
jg
xchg
and
rcrb
and
hlt
mov
add
jb
add
sub
insl
loope
jne
and
cmp
cwtl
mov
or
cld
in
jmp
push
pop
sub
add
insl
enter
push
inc
mov
daa
push
call
jmp
or
hlt
jbe
and
inc
cs
xchg
xlat
bnd
shl
push
mov
dec
and
sahf
cmpsl
dec
out
jmp
inc
jl
lahf
out
add
pop
jmp
movsb
cwtl
or
xchg
jmp
pop
pop
das
fdecstp
fwait
inc
jmp
sbb
push
inc
repnz
pop
push
mov
mov
mov
insl
hlt
jmp
ja
jbe
lds
imul
in
jmp
popf
jmp
repz
inc
xor
jmp
fnsave
cmc
cld
fcoml
lods
lods
sbb
inc
and
mov
jmp
sbb
push
lods
lods
and
sbb
scas
divb
shrl
in
or
iret
sarb
faddl
jmp
adc
push
les
and
jmp
loope
iret
push
push
xchg
xchg
sti
sbb
pop
les
xchg
sub
fisubs
xchg
adc
gs
loope
sub
pop
fisttps
shll
jo
test
sbb
add
iret
adc
sub
jmp
cltd
jne
enter
push
iret
sar
pop
outsl
loop
cmc
aam
xchg
cmp
cmpsb
push
add
mov
add
xor
xchg
jmp
mov
mov
xor
fs
pop
push
sbb
mov
add
xchg
mov
or
sbb
lahf
or
jmp
out
adc
rclb
mov
pop
inc
jae
push
jmp
jns
sub
dec
clc
inc
jmp
repz
jge
aas
lea
jmp
int
cmp
sbb
lock
push
jbe
push
daa
push
mov
pop
mov
cmp
mov
in
sahf
inc
jmp
inc
push
out
sub
cltd
stc
sbb
in
sub
adc
jbe
imul
jge
inc
in
push
aas
shr
xor
pop
jmp
test
xchg
jmp
scas
rorl
and
adc
push
je
jns
push
or
adc
ret
nop
call
jmp
adc
xchg
sbb
jmp
mov
hlt
fildl
pop
int3
jmp
xor
jae
add
cmp
xchg
add
sbb
cmp
repnz
sub
mov
repz
stc
jmp
aaa
and
sub
sub
fisubs
lods
sbb
inc
xchg
inc
cmp
sub
fucomi
mov
jb
mov
adc
push
push
addb
test
sub
int3
mov
out
pop
and
mov
scas
push
dec
cmp
sbb
in
push
jmp
pop
lods
scas
pop
aam
add
dec
leave
xor
repnz
lods
sub
lods
push
int3
mov
out
sbb
inc
jge
jmp
add
fdivs
or
jmp
mov
pop
cmp
dec
shrb
dec
pop
or
adc
jmp
addr16
dec
sbb
movhlps
loopne
cmp
inc
ljmp
jmp
in
fiaddl
mov
pop
push
add
daa
call
dec
mov
or
mov
sti
out
sti
loop
mov
pushf
jl
test
lods
xor
dec
leave
sbb
nop
scas
inc
adc
cmp
xlat
lret
test
fldcw
out
fwait
hlt
dec
mov
jb
dec
and
das
inc
xor
jg
lods
cmp
push
jl
repz
inc
sub
popa
inc
sbb
mov
sub
add
lds
mov
push
outsb
iret
jp
scas
add
jmp
fdivr
jnp
lock
sbb
jne
test
adc
push
adc
and
fucomi
sti
cs
stos
adc
jmp
rcrb
fdivl
stos
mov
orl
xor
mov
jmp
dec
lret
mov
lret
sub
and
dec
dec
xchg
out
push
or
push
xor
sti
jmp
lds
cs
add
mov
mov
jge
test
or
cmp
pop
adc
ret
mov
xchg
cmp
mov
in
outsb
stc
aam
jmp
fadds
insl
fsubl
mov
mov
xor
test
shl
popf
mov
ds
sti
aas
out
imul
nop
jmp
stos
movsb
dec
add
das
cmp
icebp
push
mov
gs
fisttpl
sbb
fmull
cmpsl
fs
push
sbb
cmp
lods
mov
out
pop
push
xor
mov
adc
xchg
dec
xchg
out
jbe
inc
mov
lahf
dec
jl
jmp
and
icebp
mov
add
in
cwtl
iret
and
movsb
and
mov
push
lcall
fbld
movsb
pop
add
icebp
fisubs
inc
stc
in
popf
clc
inc
dec
sbb
lcall
pushf
xchg
jne
inc
pop
and
fwait
scas
cmc
jge
add
jmp
fmuls
test
sbb
pusha
inc
inc
jecxz
sbb
mov
push
jmp
pop
stc
je
mov
pop
orb
sbb
pop
loopne
js
adc
push
cmp
idivb
xchg
bound
mov
cmp
leave
inc
test
jmp
aad
nop
iret
sub
xchg
dec
mov
sub
xor
std
xor
dec
jmp
push
inc
leave
xchg
je
jmp
and
mov
negl
lods
hlt
dec
dec
push
stc
inc
insl
lahf
sub
test
std
daa
mov
sub
je
cmc
push
jmp
in
xor
pusha
out
fisubrl
and
jecxz
mov
push
and
jp
add
lods
jbe
lcall
test
mov
inc
popf
and
mov
jo
pushl
jne
scas
mov
xchg
in
ror
repnz
add
sbb
adc
inc
xchg
xchg
mov
jmp
in
sbb
iret
or
adc
ljmp
xchg
or
lds
jl
mov
das
dec
mov
jmp
icebp
adc
jg
sbb
lods
inc
xor
pop
out
mov
cwtl
cmpsl
sub
fisttpll
cmp
sub
fsub
push
frstor
jo
movsb
scas
xor
adc
pusha
ja
pop
hlt
das
daa
cli
jmp
cmpsb
adc
divl
cmp
addr16
xor
cmc
sbb
jne
xchg
and
sbbl
aam
ss
add
sbb
notl
movsb
cmpsb
jmp
les
pusha
push
fucomp
shr
je
shll
jmp
xchg
sbb
pop
dec
cld
jmp
add
aas
mov
lret
cmp
scas
push
sub
fwait
xor
fstpl
push
and
je
lods
popf
stc
imul
imul
lods
hlt
leave
sub
sbbl
sub
jmp
sub
lret
jmp
mov
jbe
jmp
jns
jp
stc
test
jb
adc
xor
hlt
pop
daa
cmp
push
jmp
outsl
sbb
aad
jp
mov
jle
mov
les
add
push
call
mov
lret
loope
push
adc
lods
pop
cmp
imull
push
sbb
leave
push
daa
pop
jmp
popf
jl
push
add
mov
push
jge
daa
popa
pop
fadd
and
test
mov
mov
int3
cltd
xor
test
jne
dec
push
ds
lcall
loope
cmpl
imul
or
in
ss
mov
imul
insl
sub
xor
mov
test
xchg
or
jmp
mov
mov
lods
sahf
icebp
sub
mov
mov
call
inc
sbb
sub
aaa
addr16
sahf
int
jnp
mov
movsl
data16
cmpsb
das
into
movsl
pop
ficoms
inc
lods
lds
out
imull
adc
mov
or
sub
cmp
mov
add
inc
jbe
mov
sub
mov
test
sub
daa
stos
cmpsl
cli
xchg
jb
jmp
push
cld
push
hlt
jbe
lahf
cmp
cs
aas
xor
fcomps
or
sub
push
cmp
adc
fmuls
mov
les
mov
jge
xchg
aas
sub
lods
inc
rclb
nop
and
out
test
in
sub
sub
adc
es
push
adc
hlt
loop
shrb
enter
imul
cmp
fld
inc
insl
icebp
sbb
add
adc
fsub
pop
sti
hlt
pop
jo
sub
out
pop
mov
push
cli
fwait
pop
xchg
xlat
cltd
xchg
jmp
inc
in
xor
sti
add
aaa
lahf
mov
pcmpgtd
cmp
gs
aad
jmp
xlat
inc
leave
pop
aad
cwtl
jmp
pop
decb
lods
lock
into
dec
sbb
popa
jmp
in
fisubrs
mov
push
add
or
jmp
push
adc
jnp
cmp
data16
sub
cli
std
pop
jmp
add
mov
adc
cmp
xchg
lods
addl
test
xchg
push
cmpsb
sub
inc
gs
subl
adc
lahf
mov
mov
add
lods
loop
mov
fwait
mov
mov
lods
fucomi
pop
pop
cmp
mov
cmpsb
mov
aam
pop
sub
pop
dec
mov
or
adc
adcl
adc
loop
fcomi
dec
pop
jecxz
jmp
ljmp
jmp
or
jmp
inc
push
ror
mov
add
jmp
xor
test
cmp
jnp
outsb
lods
add
jl
loopne
and
movsb
ds
sub
cmp
test
and
fsubrp
inc
shrb
sub
scas
es
pop
cmpl
push
mov
cmpsl
or
pop
add
xchg
jmp
inc
mov
mov
or
aaa
pop
push
lods
stc
and
mov
leave
stos
jmp
push
rorl
out
inc
mov
cld
adc
jg
and
jmp
dec
ficomps
lcall
repz
imul
int
lods
aas
pop
mov
jmp
aad
inc
fdivrs
inc
aaa
cmp
sbb
clc
jmp
testb
inc
pop
jno
add
cltd
shr
or
pop
jmp
sbb
dec
jmp
push
jo
lock
dec
aas
aam
mov
sahf
shl
or
jl
jle
jmp
popa
stos
data16
mov
cmp
es
mov
mov
pop
icebp
scas
and
nop
pop
or
push
adc
movsl
jmp
sbb
loop
push
cmpl
sub
mov
filds
shlb
jmp
push
or
add
jmp
fisttpll
scas
mov
pop
jmp
cmpsb
sbb
sbb
mov
jmp
data16
mov
and
jmp
icebp
fiadds
neg
sub
or
xchg
xor
icebp
mov
inc
ret
jmp
mov
xchg
push
sub
cmp
mov
adc
adc
xor
inc
aas
or
add
sbb
sub
int3
div
xor
fistps
jp
lods
cmpsl
cmp
call
loop
out
jae
mov
jo
daa
push
jmp
shl
fmull
mov
add
pop
ss
adc
sahf
in
cmp
outsb
xchg
jge
call
pop
cmp
mov
jo
sti
jmp
adc
mov
jmp
inc
pop
push
or
add
jmp
sub
xchg
add
lods
das
inc
or
mov
mov
out
loope
xor
loop
mov
and
ljmp
sub
pop
insl
fdivl
or
sbb
mov
or
rolb
sub
pop
dec
lock
test
adc
movsl
insl
out
inc
test
shrb
jb
sbb
in
cmc
mov
sbb
dec
adc
and
sub
dec
sbb
lds
jae
push
shll
ficompl
cmpb
jmp
and
leave
xchg
dec
add
mov
mov
cmp
mov
fidivrs
mov
jmp
in
les
add
scas
sysret
jmp
push
out
std
orb
cmpsl
bound
add
pop
or
push
cmpsb
je
jge
xor
jl
inc
lea
lret
xchg
sar
jmp
sub
jp
cmc
lock
inc
addr16
cmp
push
jo
out
mov
outsl
dec
aas
test
scas
xor
out
jmp
movsl
mov
in
or
shll
incl
jmp
clc
pop
test
mov
pop
icebp
lods
lock
in
jmp
aad
mov
pop
aaa
ficompl
adc
jmp
inc
mov
js
jle
mov
test
mov
das
xchg
add
getsec
adc
jmp
sbbb
jmp
sbb
push
and
stos
jmp
or
mov
loopne
mov
popf
loop
outsb
jg
insl
inc
jmp
mov
test
mov
stc
and
xlat
jns
jmp
outsb
lods
dec
jo
add
jmp
clc
je
lret
fists
jmp
lods
test
or
cmpb
push
jp
pop
jmp
jns
les
mov
pop
std
adc
rcl
mov
pop
cmc
ficoms
test
stc
mov
mov
or
shl
mov
pop
mov
push
or
or
scas
jo
cld
add
xchg
push
arpl
add
dec
sbb
je
inc
mov
pop
jp
leave
jmp
stos
outsb
call
fnstsw
lods
and
in
inc
sbb
jp
outsl
mov
or
leave
cmpsb
imul
add
jmp
pop
sub
stos
sub
iret
adc
lods
jo
jmp
lcall
jmp
shl
pop
test
dec
jmp
loop
push
fldt
add
adc
repz
ljmp
xchg
mov
notl
out
pusha
sbb
movsl
add
or
cmp
repz
or
push
and
idiv
fwait
cwtl
ss
xchg
lret
jge
fucomi
jmp
add
and
cmp
mov
and
cmp
insl
clc
jmp
pop
stos
sub
test
sbb
xchg
mov
xchg
sub
push
sub
push
add
mov
push
mov
aam
pusha
das
adc
mov
jmp
or
adc
sbb
fucomi
cmpl
rclb
mov
lock
xor
mov
sub
in
lods
movsb
sbb
popf
inc
stos
jmp
mov
xchg
xor
jno,pn
mov
cltd
sbb
ficoms
inc
lods
fidivrl
jecxz
outsb
xor
xchg
in
mov
jmp
cltd
sarl
into
fisubl
pop
jmp
xchg
cmpsl
dec
rclb
cmpsb
adc
pop
lret
mov
cmp
in
cltd
jmp
sbb
inc
imul
xor
pop
out
je
jmp
insb
mov
fsubr
imul
sahf
jmp
lock
lret
xlat
ljmp
lods
push
subl
jnp
ret
sub
ret
xor
pop
fimull
jg
enter
insl
dec
into
jmp
fucomp
push
loope
xchg
mov
add
movsb
push
xchg
cld
sub
js
lods
sub
ret
lods
xchg
divl
mov
jmp
dec
mov
call
pop
and
mov
lods
rorl
pop
fs
loopne
addr16
pop
add
mov
sub
pop
xor
shrl
fstpl
and
push
outsb
mov
dec
movsl
jmp
jecxz
inc
sbb
push
out
jmp
je
rol
lret
mov
mov
ret
jb
add
inc
pop
pop
test
sahf
and
inc
jnp
aaa
mov
inc
sbb
pop
jmp
cmpsb
cmp
mov
es
movl
mov
xor
jae
rcr
mov
sti
cld
dec
popf
or
das
jmp
and
jb
ljmp
push
aaa
sub
notl
mov
sbb
jmp
push
push
pop
mov
repz
lea
xchg
mov
cwtl
lds
call
inc
and
nop
mov
insb
lahf
mov
mov
add
dec
push
jmp
call
iret
or
adc
ret
adc
inc
add
dec
jecxz
orb
pushf
stc
fsub
pop
and
add
test
or
jmp
rcrb
in
and
push
int3
add
lgdtl
jmp
mov
inc
fists
pop
imull
sbb
inc
jmp
xchg
push
and
lods
aas
add
and
dec
mov
data16
push
cmp
sub
cli
sub
push
jno
in
fidivrs
shl
pop
ljmp
cwtl
loop
lret
subl
lret
sti
pop
mov
xor
or
adc
ds
imul
dec
pop
jo
jmp
into
pop
mov
add
mov
xor
std
jmp
mov
lds
jmp
je
push
rsqrtps
xchg
sbb
dec
jmp
lods
inc
movl
cs
xchg
lahf
outsl
sti
jge
fldcw
sbb
xor
and
repnz
stc
mulb
repnz
fmuls
push
sub
fwait
push
inc
and
and
loopne
jg
or
stos
jmp
or
xchg
jmp
insb
mov
ss
adc
jmp
aas
push
stc
adc
jmp
lea
movsb
dec
sbbl
in
enter
adc
nop
pop
out
lret
scas
sub
lea
in
ds
lods
xchg
jmp
out
mov
loope
sbb
mov
repz
pop
mov
pop
jmp
adc
fs
int3
in
fstpt
idivb
sti
inc
push
les
dec
loope
adc
shl
clc
dec
adc
xchg
and
inc
imul
fcmovnbe
push
sbb
jle
movsb
jmp
in
in
mov
jmp
scas
xchg
xchg
call
jo
push
xchg
mov
inc
leave
repz
arpl
fdivr
jne
add
jmp
cmp
mov
mov
jmp
sub
fs
std
jecxz
fsubrp
andb
mov
icebp
sub
jmp
push
in
in
iret
sub
mov
addr16
xchg
es
stos
jae
xor
xor
jne
jmp
and
mov
jmp
rcll
in
bound
sti
lcall
std
movb
cmp
arpl
push
adc
pushf
jmp
lock
sbb
fucomp
bound
out
divl
push
jmp
pushf
cld
cmpsl
xlat
xor
dec
sti
pop
dec
jp
add
lret
jmp
scas
imul
loop
push
or
inc
repz
mov
jg
and
add
sti
adc
pop
inc
jmp
dec
cli
pop
sub
push
shl
mov
jno
popf
jmp
push
pop
ret
cld
mov
sub
scas
test
rol
and
mov
adc
jmp
cmp
scas
sahf
push
les
push
dec
call
in
mov
adc
cltd
xchg
or
dec
push
push
test
pop
jnp
sub
jmp
les
xchg
pop
jne
outsb
pop
jmp
inc
sbb
test
and
mov
ljmp
aad
stos
inc
shlb
fldcw
jae
fldt
and
shlb
mov
scas
jno
rolb
push
mov
sbb
data16
jmp
xchg
add
jmp
in
mov
cmc
push
int3
dec
sub
jne
add
fcoml
xchg
movsl
es
jbe
or
add
or
mov
loop
imul
or
pop
push
cmpsb
pop
and
pop
outsb
addb
ja
push
outsb
leave
repz
test
sbb
cld
lock
jl
mov
adc
in
push
ljmp
push
int3
jmp
fistps
mov
pop
cmp
shr
ret
xchg
mov
test
jmp
mov
add
fcomps
test
mov
gs
sub
jo
clc
sub
arpl
jg
sub
push
add
aas
jmp
xor
cmpl
jecxz
aam
dec
fisttps
mov
adc
or
xchg
xorl
or
jmp
insl
ret
outsb
jmp
mov
les
jb
cmpsl
cltd
or
sarb
outsb
xor
loop
in
dec
mov
cmp
cltd
jnp
jmp
test
sbb
sbb
cmp
mov
mov
add
sbb
jmp
sub
dec
sub
movsb
xchg
jmp
dec
pop
mov
fcmovu
pop
dec
xor
icebp
jns
pop
push
add
sub
lock
and
js
dec
jmp
jp
call
jmp
jns
adc
lock
sub
clc
stos
jnp
int3
add
test
fists
jmp
dec
add
jmp
iret
adc
cmpsb
lock
mov
fsubr
mov
test
cmc
jmp
mov
xor
xchg
jnp
xchg
inc
stc
dec
sbb
lods
mov
inc
mov
lcall
sahf
add
mov
sub
fdivs
out
lcall
sahf
mov
xchg
pop
cmpsl
sbb
les
in
dec
adc
jo
push
add
je
sti
test
and
lcall
leave
es
jecxz
pushl
dec
jb
roll
push
jae
jmp
cltd
out
ljmp
jge
lock
sub
sar
xchg
out
cmpsb
mov
pop
and
pop
mov
mov
lods
mov
adc
cmp
jle
inc
push
mov
lcall
cli
xor
fisubrl
lea
jne
jb
fadd
or
xchg
movsb
lods
jmp
out
push
push
dec
mov
fmulp
movlps
mov
out
clc
pop
fucomp
je
sub
mov
adc
inc
sbb
xchg
sub
mov
hlt
mov
jno
pop
or
mov
mov
jmp
jge
aas
loope
jae
jmp
push
xchg
xlat
sub
mov
into
xchg
pop
pop
push
inc
iret
cmpsb
vorps
sti
cld
nop
outsl
mov
jp
nop
jmp
jb
pop
pop
in
movsb
jmp
sarb
outsb
testb
xlat
sbb
stc
das
rolb
inc
mov
jecxz
in
push
jp
andb
loopne
inc
push
fisubrl
and
das
jge
jmp
rcrl
lea
mov
cmpsl
jmp
add
jne
cmp
lret
rcrl
std
push
xchg
push
sub
cmc
testb
shrb
xchg
pop
iret
or
mov
jp
popa
or
xchg
aam
jg
add
dec
jle
jmp
mov
push
cmc
sbb
dec
jmp
lods
pop
cmp
dec
stc
mov
or
pusha
fildl
movsl
lds
and
test
mov
dec
jmp
cmp
pop
lods
jmp
or
adc
add
cltd
jmp
pop
push
test
jne
jmp
inc
fisubl
enter
jmp
jb
mov
sub
xchg
or
test
mov
push
in
mov
iret
lods
cmp
xchg
and
dec
das
movsl
cmp
mov
movsb
mov
lds
or
xorl
icebp
insb
pop
es
inc
jmp
cld
mov
in
jmp
push
ds
mov
mov
pop
out
movsb
jmp
in
into
pop
sub
sub
rorb
and
xchg
insb
inc
imul
jmp
push
repnz
dec
dec
xchg
lods
hlt
movsl
fisubs
dec
jmp
cmp
into
adc
jecxz
sub
icebp
sbb
addb
jno
push
jmp
shlb
pop
mov
sbb
shll
lods
sbb
and
add
jmp
sub
xchg
jmp
pop
cwtl
xchg
imul
jmp
or
xor
jmp
xchg
inc
xchg
arpl
add
pop
sub
loopne
xchg
mov
inc
lahf
pop
add
push
lret
or
mov
and
lods
inc
mov
fnstsw
pop
cmp
movsl
lds
push
adc
aas
adc
jb
imul
call
fdiv
jb
adc
push
sub
mov
mov
imul
sub
andb
aas
cli
daa
stc
dec
pop
xchg
pop
ja
push
sahf
jmp
add
sbb
shrl
jmp
mov
xchg
sub
inc
xor
cmp
sub
mov
aam
int3
mov
sub
jae
lods
sbb
mov
pop
rcr
outsb
mov
adc
popf
pop
push
hlt
jmp
pop
mov
into
jmp
inc
pop
mov
xor
std
and
dec
es
fs
cmpsl
xchg
imul
inc
mov
sbb
ret
popf
mov
mov
cmp
xor
mov
or
or
xor
jg
hlt
imul
idivb
jmp
ficompl
call
push
jmp
repnz
ja
inc
jmp
cli
inc
imul
sub
lods
test
mov
les
mov
repnz
cltd
add
adc
mov
dec
sub
pop
imul
pop
xor
dec
mov
dec
invd
in
outsl
add
add
sbb
rorl
popa
cmp
dec
stc
mov
sub
push
add
pop
sbb
call
in
xchg
add
and
scas
fidivs
insb
push
out
lods
test
and
mov
add
jle
les
push
cmp
es
push
pop
and
pop
and
lods
fcoml
mov
cmovle
jmp
fisttpl
scas
sub
fs
and
in
jmp
rcr
outsl
xor
jmp
ret
hlt
in
repnz
push
mov
xor
ret
pop
mov
test
inc
dec
cli
push
popf
fucomi
inc
pop
pushw
jmp
or
push
test
std
mov
jle
dec
push
sti
sbb
jmp
shlb
xchg
pushf
cmp
pop
and
lahf
dec
cmp
loope
sti
sub
test
pop
jmp
fs
add
mov
jecxz
lds
in
jmp
in
fwait
pop
mov
push
loopne
je
sbb
jmp
mov
adc
jmp
ret
xor
cmp
or
lods
or
icebp
loop
push
inc
push
adc
ret
aam
outsb
lahf
or
sti
idivl
roll
scas
lods
in
js
test
pop
xchg
jmp
ds
mov
cmp
mov
dec
jg
cmp
jmp
or
nop
std
and
popf
test
stc
leave
mov
into
ljmp
inc
gs
dec
in
lret
or
sbb
sub
mov
jmp
mov
inc
fistl
sub
in
mov
sub
sub
add
sub
mov
lods
jnp
ja
popf
lret
and
and
push
loop
je
cmp
sbb
add
out
jmp
push
cmp
scas
dec
pop
jns
adc
lods
sub
lods
mov
lret
jmp
mov
dec
fucomi
fbld
push
mov
cmp
or
loopne
cltd
lcall
xchg
jl
mov
mov
or
cld
sbb
call
cmpsl
fcoms
stos
jmp
sub
pop
pop
cmp
lods
ret
ja
pop
xor
mov
mov
jp
fdiv
fmulp
dec
outsb
jmp
push
jecxz
daa
sub
push
test
sti
ds
mov
loope
fcomps
jmp
and
mov
xlat
sub
ret
lds
in
fadds
push
jmp
jmp
iret
inc
sub
jle
push
les
sub
mov
shlb
jmp
push
add
jmp
fdivl
add
cmp
and
in
stos
imul
in
shr
jno
sahf
push
cmpsl
adc
sub
outsl
test
clc
cmp
insl
or
sub
bnd
push
and
sbb
test
lcall
lea
pop
pop
ret
insb
repz
or
jne
lods
pop
cltd
sbb
mov
mov
lods
in
mov
jb
jmp
cli
fs
mov
call
jg
inc
jmp
sub
sub
push
arpl
sub
stos
dec
mov
movsl
pop
jmp
outsb
hlt
mov
lods
clc
push
sbb
insl
and
int3
jmp
mov
dec
call
adc
fildl
pop
pushf
jmp
and
mov
mov
push
lret
leave
fistl
xchg
insl
jbe
popa
repz
and
ss
push
daa
movsl
divb
stos
jl
add
jmp
mov
mov
lretw
add
lods
dec
cmp
repz
fstp
jmp
or
or
push
and
mov
leave
jb
pop
cltd
adc
stos
dec
mov
rolb
fmull
movsl
adc
dec
test
mov
cmp
mov
xor
rcrl
xchg
jmp
insb
movsb
enter
xor
ss
mov
aad
pop
out
cmc
incl
inc
xlat
lods
push
stc
xor
xchg
and
pusha
dec
jg
pop
adc
flds
mov
sub
lods
mov
popf
shll
in
shr
movsb
dec
dec
sahf
add
jp
stc
into
xor
inc
pop
sub
sbb
push
es
cmpsb
jmp
dec
pop
push
loopne
xlat
jmp
out
cmpsl
jle
pop
pusha
outsl
jmp
sub
loop
inc
int
lods
das
sbb
sbb
fdivl
ror
ds
jmp
int3
ret
or
sub
hlt
stos
fildll
daa
ljmp
jp
std
jge
es
lods
gs
add
xchg
cmp
pop
mov
inc
jb
ss
loopne
cmp
arpl
cmp
sub
xor
test
cmpsb
fucom
insl
loope
push
lods
sub
xchg
mov
jmp
cmp
sub
jmp
andb
xchg
das
pop
jmp
jecxz
es
sti
jmp
or
or
jg
mov
enter
cmp
call
mov
or
out
pop
mov
lods
fbld
push
and
sub
aas
jmp
push
jge
jns
jmp
sar
or
add
or
stos
pop
mov
fst
jnp
push
fdivs
loopne
out
sti
insl
out
inc
or
rcrb
sbb
sahf
jns
push
and
jmp
sbb
mov
bound
xchg
xchg
jmp
sub
in
pop
jmp
xchg
push
mov
sub
lods
repz
ljmp
or
test
xchg
adc
cmc
imul
jmp
out
rorb
notl
dec
push
and
mov
mov
fiaddl
add
pop
xor
mov
scas
aad
add
repz
jnp
mov
xor
sarb
imul
cvtdq2ps
sbb
insl
sti
icebp
jns
and
mov
repnz
rclb
sti
outsb
add
repnz
cmp
jmp
sub
out
xor
jmp
jno
outsl
rol
xor
jle
xlat
jmp
imul
dec
inc
dec
jmp
aam
sbb
lods
sub
fdivs
int3
sbb
jnp
mov
daa
pop
aaa
push
inc
sub
mov
push
aas
cmp
cmp
jmp
fidivs
push
jmp
icebp
sbbl
jmp
std
cli
and
punpckhdq
xor
pop
mov
cltd
cmp
scas
mov
xchg
loope
fsubrp
inc
dec
dec
jo
lahf
stos
mov
andb
jmp
xchg
mov
jmp
push
aaa
push
pop
xor
jmp
push
test
pop
int3
aam
jmp
orl
jmp
xchg
test
or
mov
jle
repnz
shlb
in
dec
fsub
aaa
hlt
cli
push
or
pop
xor
out
outsb
dec
xor
cli
inc
cs
jmp
xor
jno
and
lods
push
add
or
inc
scas
stos
add
je
lret
out
mov
push
add
arpl
push
dec
mov
mov
inc
adcb
jmp
jg
imul
ja
shlb
adc
inc
in
mov
ljmp
lds
cmpb
add
sub
or
outsl
test
add
mov
and
push
cmp
cmp
dec
cmpsl
cli
test
xlat
jmp
jle
lock
jmp
sarb
pop
sub
jo
dec
jae
scas
daa
loop
hlt
jmp
addl
lods
or
dec
fwait
std
arpl
dec
loop
imul
pop
clc
mov
add
pop
push
repnz
lods
push
or
repnz
cmp
mov
mov
lods
mov
ja,pt
mov
fcmovnb
jmp
ret
sbb
popa
or
jmp
and
inc
cmp
jmp
sbb
push
mulb
fsubr
data16
jle
lock
enter
xchg
mov
pop
adc
push
cmp
insb
js
dec
fdivrs
iret
cli
jbe
sub
xchg
in
xchg
xchg
sar
mov
ljmp
out
jmp
leave
mov
mov
jl
lcall
insl
pop
in
dec
shll
xchg
lahf
cld
ret
adc
mov
stos
sti
jmp
ljmp
mov
sub
pop
mov
mov
jmp
mov
loop
cmc
out
jmp
ljmp
jmp
xchg
dec
inc
dec
mulps
jmp
mov
lret
push
jmp
rorb
adc
lahf
xchg
xchg
jmp
jmp
dec
insb
cltd
jge
mov
jp
add
xchg
push
stos
je
dec
or
lretw
loope
jo
lods
outsb
rcll
sub
sbb
pop
arpl
sti
and
sbb
xor
add
mov
test
shl
jmp
lahf
xor
lcall
sti
in
into
or
out
mov
mov
mov
mov
mov
lods
testl
adc
lods
jmp
push
mov
out
jne
sbb
lfence
mov
jo
test
or
jns
adc
jb
repz
push
call
sub
jmp
shl
cltd
and
shll
xorw
repz
add
mov
sbb
and
and
or
xchg
push
adc
adc
jmp
scas
fldl
sub
lods
cltd
hlt
imul
decl
xor
sti
pushf
sub
and
jmp
in
lds
mov
enter
std
mov
sbb
inc
je
jmp
or
aam
in
mov
testb
movsl
adc
push
test
mov
out
or
jmp
jecxz
push
jmp
xor
dec
leave
push
addl
fidivs
jmp
add
jg
adc
cltd
ss
cmp
mov
pop
cmp
jnp
loopne
lods
into
pop
add
ret
push
rcrl
cmp
inc
imul
cmc
xor
scas
insl
jmp
xor
cs
gs
and
clc
psrad
sub
jo
fs
add
sub
repnz
jmp
mov
mov
mov
and
fcoms
testl
in
and
cmp
adc
outsb
fisttps
into
ror
imull
out
sub
ret
cmp
sbb
dec
dec
pop
icebp
outsb
fsubrl
cmp
pop
leave
xchg
pop
es
mov
xor
jmp
jg
stos
pop
lahf
fs
lret
lods
rclb
call
pop
daa
push
jmp
repz
inc
scas
enter
std
cld
xor
lidtl
sub
fbld
insb
and
sub
sbb
cmp
fisubrl
lock
or
or
mov
pop
mov
mov
ret
test
addr16
mov
inc
xlat
mov
sub
ljmp
sarb
jmp
addl
lret
pop
mov
jb
pop
idiv
sub
inc
jns
jmp
into
scas
push
test
shrb
sbb
and
cmp
dec
ljmp
mov
jmp
mov
aas
imul
cld
mov
lret
jmp
xor
adc
sahf
jg
cmp
nop
sbbb
test
pusha
fidivs
cmp
xchg
add
mov
in
les
pop
mov
std
inc
jmp
mov
xlat
stc
jmp
icebp
mov
fldpi
push
push
add
loopne
lret
mov
or
jecxz
inc
sti
fcompl
push
push
testl
roll
push
cmp
mov
dec
push
ljmp
leave
inc
scas
xchg
sbb
ret
imul
and
jmp
shlb
cwtl
jmp
xchg
dec
lcall
jmp
mov
loope
mov
cltd
jmp
les
lods
mov
je
addr16
and
push
and
jae
shr
mov
jmp
and
cmp
in
fs
mov
test
mov
sub
hlt
sbb
js
data16
pushf
cwtl
xor
or
out
jl
scas
arpl
mov
mov
roll
sbb
lahf
insb
sbb
xchg
sub
faddp
sbb
push
and
adc
loopne
int3
mov
mov
mov
xor
sarl
and
xchg
jmp
xchg
out
jbe
push
cmp
inc
push
xor
mov
sbb
jns
jmp
pusha
cltd
lea
gs
xor
les
je
jb
jmp
mov
push
repnz
jp
dec
or
and
add
xchg
mov
push
cmp
add
cmp
sbb
jmp
fcoml
test
lcall
sbbl
jmp
xor
inc
incb
sub
fidivs
rorb
adc
inc
dec
adc
ss
cli
pop
add
pop
shlb
jg
lcall
popf
sub
add
orl
pop
mov
jne
in
les
pop
xor
and
fstl
mov
push
loope
add
jmp
push
ret
and
mov
mov
push
push
cld
jo
ret
and
outsb
sub
sbb
sub
push
jmp
mov
stos
in
mov
arpl
leave
sbb
ljmp
jl
sbb
cs
xchg
adc
stos
sub
and
or
daa
and
jmp
push
xor
mov
sbb
lret
outsb
cmp
sbb
lds
lods
dec
decb
rorb
imul
jmp
shlb
xor
jb
xchg
test
adc
icebp
jmp
cwtl
xchg
mov
mov
roll
test
inc
jmp
pop
lock
movsb
popa
or
pop
das
cmpsl
jmp
mov
jg
jmp
test
sub
sbb
and
test
iret
outsb
fcoml
jmp
or
dec
mov
daa
sbb
cmpsb
out
push
leave
jmp
dec
jge
mov
jno
jbe
push
jp
loopne
sub
sbbb
lock
add
and
call
mov
sbb
pop
inc
mov
fimuls
fs
test
daa
inc
leave
or
arpl
or
lcall
mov
lods
loopne
cs
cmp
xchg
inc
or
outsb
pop
in
jbe
aaa
add
les
jmp
cmp
int3
push
mov
push
loopne
test
or
mov
xorl
hlt
pop
pop
jb
sti
jns
pop
xor
sbb
xchg
sarl
sbb
push
jecxz
inc
jmp
mov
and
pop
loopne
sbb
not
sub
decw
xor
ror
sub
jle
sbb
popf
sbb
les
and
add
jmp
inc
fldlg2
pop
rcl
imul
xor
and
bnd
sub
xchg
cwtl
popf
scas
loop
mov
xor
sub
loopne
andb
dec
stos
jmp
lds
jge
jmp
repnz
or
mov
in
fcmovne
insb
inc
cmp
pop
or
or
mov
push
enter
cmpsl
and
inc
pop
mov
push
sahf
and
daa
mov
mov
inc
mov
pop
push
jmp
cmp
and
xchg
add
or
lds
je
insb
lods
fsubr
inc
decl
mov
das
jmp
subb
loop
scas
jmp
sub
icebp
imul
arpl
cs
jo
jmp
lret
dec
mov
cmpsb
insb
jmp
mov
mov
outsb
mov
xchg
stos
jp
mov
lods
and
shrb
jo
mov
and
add
cmp
adc
jle
addr16
fsubrl
out
fistpl
and
mov
adc
pushf
jmp
jl
add
ret
lds
arpl
adc
push
test
jl
inc
jmp
je
add
fildll
fadds
mov
and
ds
aad
daa
pop
jmp
sub
mov
scas
push
mov
repnz
aad
push
xchg
xor
cmpsl
inc
jmp
adc
xchg
dec
ffreep
or
es
jmp
sub
push
fisttps
jmp
aad
out
scas
cmp
mov
jmp
jb
sub
inc
js
adc
mov
sub
popf
xchg
lret
pop
out
jmp
mov
pop
mov
push
mov
pop
daa
push
sub
mulb
nop
jmp
and
in
ret
sbb
mov
pop
xchg
sub
stc
adc
iret
xorb
mov
nop
xchg
aas
jmp
push
fldcw
mov
add
int
bound
jmp
pushf
lcall
pop
in
cmp
cwtl
sub
test
mov
push
jmp
or
ljmp
repnz
pop
dec
xor
sti
cmpsl
sbb
dec
push
pop
sarl
jge
repz
jmp
push
jbe
inc
repz
jmp
jecxz
gs
sbb
clc
xchg
or
sub
mov
mov
cmpsl
es
mov
repnz
repnz
push
adc
mov
mov
and
cmpsl
mov
push
mov
dec
jmp
sub
outsb
lret
lds
dec
and
repnz
in
rcll
test
jmp
mov
cltd
rorb
lcall
lods
rclb
repz
mov
mov
xor
xchg
in
push
jmp
jge
cltd
rclb
jns
or
xor
mov
push
adc
lods
into
jne
jo
sbb
jmp
mov
in
jmp
inc
jne
decl
sarb
aas
lods
sub
fnstsw
sbb
mov
push
xchg
or
inc
in
movsb
xor
add
sbb
xor
jmp
mov
cmp
pusha
xor
dec
pop
out
jae
mov
ds
jns
sub
jmp
pop
mov
pushf
jmp
xor
cmp
jbe
mov
daa
mov
js
sti
ret
loop
inc
jmp
pop
jo
lahf
icebp
or
pop
call
mov
sbb
out
push
lods
in
sub
insb
jecxz
sahf
push
mov
gs
sub
pop
push
mov
mov
in
push
or
lods
movsb
mov
jmp
adc
in
mov
jbe
and
mov
movsl
xor
jmp
pusha
int3
dec
aaa
xchg
sub
and
push
loopne
jmp
loope
add
mov
arpl
and
inc
movl
sub
add
mov
and
jmp
inc
mov
cmp
in
mov
and
inc
jmp
sbb
outsl
mov
test
aam
clc
jl
push
or
jmp
or
jno
xor
mov
shlb
jmp
ja
pop
jnp
loopne
jmp
movl
and
lods
gs
push
mov
mov
mov
jmp
ja
mov
stc
stc
insl
jmp
lcall
inc
jmp
add
fwait
test
jb
fnstenv
add
jmp
cmp
into
fisttpl
dec
jmp
jbe
mov
jmp
xor
pop
inc
lds
jmp
aaa
test
mov
stos
popf
stc
jns
inc
das
jb
mov
inc
xor
jmp
mov
dec
jmp
mov
roll
jmp
push
or
jmp
adc
vpacksswb
sub
sbbl
pushf
or
pop
and
outsb
push
rcl
repnz
sbb
ja
imul
idiv
cmp
and
push
jmp
mov
aam
jmp
out
add
xchg
aas
sbb
jg
lahf
sbb
mov
cltd
jne
sub
mov
das
jmp
and
lock
xor
and
fistps
xor
jmp
sbb
inc
jmp
push
push
xchg
subb
testb
cmp
int3
push
inc
sbb
das
add
test
jb
jge
outsb
movsb
pop
jmp
and
push
jecxz
ret
xor
pop
pop
cli
mov
dec
dec
int
sbbl
sub
sub
mov
sub
testl
daa
inc
lods
jno
stos
fucomi
and
mulb
jmp
add
mov
outsb
or
sbbb
aas
xchg
scas
scas
bound
xor
lea
aam
cwtl
mov
jge
jle
inc
add
dec
dec
or
jmp
int3
andl
sub
leave
xlat
cmpsb
cmp
push
xchg
daa
out
push
jmp
adcl
jmp
adc
sub
mov
jge
sbb
add
dec
out
lret
add
popf
jmp
or
xchg
insb
call
test
out
int
mull
ds
jmp
hlt
lods
dec
data16
popf
sub
jmp
lahf
mov
mov
and
mov
rorb
int
clc
cld
dec
jne
or
push
lock
mov
mov
jmp
and
arpl
pop
jmp
jg
dec
push
push
push
xchg
jmp
mov
cmp
or
and
or
jge
lods
loop
test
mov
rorb
scas
lds
adc
or
jns
mov
xor
dec
add
push
das
mov
jp
mov
sti
mov
je
mov
imul
imulb
and
xchg
mov
int3
mov
push
adc
stos
jmp
xchg
xor
inc
iret
fucomip
leave
or
add
mov
jae
int
sahf
jmp
std
fldl
jne
leave
jmp
inc
push
outsb
fisubs
xchg
jecxz
adc
dec
ja
mov
cmpsl
jns
aam
and
bound
jmp
xorb
pop
outsl
jecxz
xor
call
repnz
jmp
add
pop
adc
and
sbb
mov
js
mov
iret
pop
push
or
loopne
into
pushf
enter
lea
movsl
xchg
jmp
pop
sti
push
and
lret
jmp
add
call
fsubr
jl
lcall
push
mov
imul
gs
and
jg
jmp
xchg
jnp
arpl
push
fucomp
mov
sub
jmp
dec
adc
aas
mov
int
pop
lods
addr16
stc
xor
adc
loope
jbe
out
mov
into
cmp
push
mov
push
inc
and
adc
mov
les
js
and
cld
mov
inc
dec
lods
enter
jge
and
fidivs
into
and
bound
jno
arpl
jmp
add
and
sti
mov
cmp
and
cltd
jmp
scas
dec
and
call
stos
pushl
jno
cmp
push
push
imul
mov
shr
push
leave
push
shrb
push
add
push
pop
mov
pop
jb
lods
in
mov
ficomps
and
inc
fcomps
jg
push
pop
stc
fdivl
sbb
mov
shrb
jmp
bound
cwtl
mov
jmp
lret
dec
aas
fwait
push
sub
jmp
fucomp
mov
mull
dec
jmp
fsubrs
cmp
mov
call
cmp
adc
jns
jmp
insb
mov
fsubr
enter
add
mov
or
push
xor
jmp
lds
movsb
fcomps
xor
test
mov
arpl
mov
mov
adc
jmp
adc
fdivs
sbb
js
and
lods
popa
or
mov
pop
jl
add
add
pushf
or
push
sahf
in
daa
jbe
xchg
jb
iret
or
out
mov
cmp
test
or
jns
jmp
popa
data16
repnz
push
jg
dec
test
shr
gs
insl
es
out
movsl
shl
dec
loope
fldcw
jmp
cmpsb
test
pop
sbb
aaa
xchg
daa
stc
sbb
xchg
jmp
shrl
in
call
push
notl
test
cmp
cmpsl
adc
loope
lods
mov
jbe
enter
mov
cli
dec
adc
pop
aad
add
sub
inc
sbbb
ret
jmp
addr16
lock
jmp
dec
lcall
imul
test
arpl
test
pop
mov
and
icebp
ret
aas
gs
xchg
cmp
push
jmp
int
push
cmp
fldt
mov
lods
rcll
mov
mov
cmp
jmp
mov
mov
int
pop
xchg
outsb
pop
jmp
cmp
ret
mov
inc
test
je
repnz
scas
mov
jnp
cmp
mov
mov
cld
adc
jle
scas
popf
insl
jae
call
jmp
dec
js
jge
imul
shl
jle
pushf
loope
testb
scas
sub
sub
sbb
movsb
mov
jmp
xor
adc
test
fnsave
jns
gs
inc
out
outsb
mov
enter
call
and
jmp
test
pop
jmp
xor
jge
or
lahf
sbb
pushf
sbb
repz
and
jmp
mov
iret
and
insl
pop
jmp
or
push
xor
dec
arpl
ds
fdivrl
arpl
in
mov
jecxz
sbb
mov
call
ret
mov
push
xor
fisubrl
pushf
scas
dec
mov
fsts
jmp
lods
shlb
testl
cld
cmp
enter
jmp
adc
movsb
fcomip
cmp
dec
and
scas
jp
outsb
sbb
dec
jmp
sub
xor
add
lods
xchg
cs
inc
and
lahf
and
sub
xchg
mov
push
dec
or
jmp
or
imulb
int3
sub
mov
push
jmp
ret
movb
test
test
in
adc
pop
or
pushf
jne
rcr
push
fstps
mov
or
shrb
jae
insl
push
mov
hlt
repz
add
jmp
add
into
je
ljmp
mov
lods
adc
adc
mov
jns
movsb
jmp
adc
jmp
adc
mov
jmp
push
lea
gs
movsl
lahf
lods
xchg
adc
and
loop
into
das
aas
jp
loope
sbb
xchg
mov
dec
repz
ljmp
mov
sbb
mov
jae
cld
ret
stos
dec
jmp
xor
loope
pop
icebp
inc
outsb
mov
and
mov
xor
add
jmp
lds
push
pushf
outsb
push
cld
sub
ja
xchg
or
xchg
sub
mov
jmp
mov
test
cld
ds
outsb
or
mov
sub
je
daa
xor
sub
and
adcb
xor
dec
cmpsb
sahf
std
mov
fnstenv
and
xchg
cld
imul
and
adc
jmp
ljmp
jmp
pop
stos
dec
sub
mov
sub
fisubs
inc
andl
mov
mov
inc
adc
cmp
mov
pusha
jmp
xchg
xchg
rcrb
subl
dec
jno
sahf
inc
cmp
ficomps
jmp
mov
mov
jmp
in
faddl
cli
ss
pop
jns
arpl
pop
hlt
xor
jo
ljmp
sbb
push
outsb
mov
sti
pop
cld
mov
push
sbb
jmp
jb
pop
sub
push
sub
mov
jmp
das
jmp
bound
mov
sbb
out
cmp
outsb
jle
or
jmp
and
push
push
fbld
mov
jl
adc
or
shlb
jno
add
lret
inc
outsb
and
imul
lock
sti
cmp
fmul
push
cmp
mov
jo
pop
cmp
scas
inc
jp
scas
and
call
cltd
loop
jmp
arpl
notb
cmp
push
jmp
inc
jge
stos
ljmp
xchg
mul
repnz
or
lods
xchg
mov
jp
adc
sti
mov
jmp
mov
je
sbb
fbstp
jb
mov
sbb
sub
adc
mov
jmp
scas
pop
xchg
int
jle
jmp
and
ret
aaa
sub
in
rcr
xchg
in
sbb
int3
add
sarb
in
pop
dec
pop
push
jge
mov
sarb
jmp
add
aas
cs
mov
addr16
mov
dec
cmp
stos
test
mov
mov
inc
testb
sub
mov
jne
sahf
mov
stos
and
mov
movsl
insl
mov
sub
and
and
test
push
xchg
leave
pop
jmp
dec
out
xchg
mov
mov
ss
jno
inc
lock
jle
jmp
cmc
xor
mov
xchg
and
and
jmp
andl
add
nop
fucomip
fstpt
adc
iret
gs
mov
jle
jmp
out
aad
adc
out
int
and
adc
xor
sub
sub
mov
jns
aas
or
sub
dec
ret
jmp
mov
or
jmp
out
sub
jmp
ret
dec
aaa
pop
hlt
xchg
mov
xor
xor
jmp
jl
xor
int
pop
lods
dec
lcall
push
push
jmp
je
cmp
xor
push
push
outsb
cmovb
xor
scas
rcll
xlat
or
jmp
test
jno
cmp
aaa
jmp
cmp
add
lret
nop
aad
and
jmp
scas
popf
cli
dec
inc
in
enter
mov
or
pop
add
jo
in
fstpl
aaa
jle
nop
mov
adc
cmp
adc
xor
jl
adc
lods
and
div
lahf
pop
dec
jbe
lods
les
push
in
mov
or
pop
jmp
jge
xor
sbb
sub
xchg
setnp
jle
jne
sbb
pop
push
mov
testb
inc
mov
and
mov
lods
out
fs
out
rcrl
outsl
cmp
cmp
push
test
sti
in
sbb
jp
cmp
aas
sbb
mov
push
addr16
lods
dec
cmp
mov
and
test
pop
sahf
leave
sbb
loop
and
push
sbb
fucomip
rcl
pop
scas
das
push
mov
pmaxsw
sub
jmp
inc
stc
jno
dec
and
hlt
lds
push
mov
dec
sahf
sti
call
adc
xlat
clc
int3
adc
jmp
sub
test
dec
xchg
cmp
test
leave
jmp
ficoms
mov
push
mov
jmp
not
xchg
add
mov
add
pop
in
mov
iret
jno
shll
ret
add
lods
sbb
pop
into
pop
add
mov
jmp
mov
pop
in
cmp
insb
fdivr
and
outsb
fsub
and
mov
push
pop
fs
mov
xor
jmp
sub
pushf
cli
jmp
push
mov
test
cmc
jnp
shlb
fisttpll
in
shlb
inc
dec
jmp
insl
pop
adc
insb
sbbl
out
xchg
mov
and
test
cmp
jmp
iret
lock
lcall
lahf
mov
jmp
xchg
add
dec
dec
aaa
jmp
push
mov
pop
imul
mov
adc
jb
sbb
and
lcall
sub
lods
push
mov
push
sub
repz
dec
imul
leave
adc
and
xchg
pop
dec
pop
loopne
or
sbb
push
or
fnsave
push
jg
sbb
dec
rolb
mov
outsl
sub
enter
xor
jae
cltd
mov
fs
sti
sub
shl
lods
push
sub
mov
scas
cmpsl
dec
mov
dec
jmp
popa
lret
pop
repnz
jmp
inc
fnstcw
test
or
cmpsb
adc
jmp
or
ror
jmp
fildll
cmp
dec
inc
xchg
jbe
push
cltd
xor
sub
movsl
xor
ds
xchg
inc
outsl
flds
jbe
adc
rcll
xor
pop
add
inc
cmp
mov
jb
xor
in
xlat
dec
movsl
jmp
hlt
xor
es
sub
sub
mov
addl
fs
movsl
fwait
dec
leave
or
and
nopl
adc
or
lods
inc
nop
int
movsb
stos
jmp
push
adc
outsl
imul
and
lret
and
lea
pop
scas
add
mov
sbb
inc
xor
les
adc
popf
std
mov
jmp
mov
loope
lods
shll
mov
mov
sub
dec
push
or
or
loopne
out
push
cmpl
pushf
adc
lods
leave
sub
in
lods
and
jmp
cmp
in
or
jbe
adc
lods
dec
xor
and
cmpsl
popa
andl
and
xor
loopne
cmp
or
cmpsb
cmc
jecxz
mov
into
fs
data16
sbb
adc
xchg
add
add
xchg
and
lret
aaa
leave
dec
mov
movsb
lahf
add
sub
rcr
imul
jae
or
sub
cmp
mov
out
loopne
dec
sbb
cmpsb
or
pop
or
sahf
or
push
jno
push
cwtl
jmp
call
js
jmp
cli
mov
pop
roll
iret
and
sbb
fld
ds
in
jmp
shl
loopne
mov
popf
lahf
lock
lcall
dec
jmp
jbe
add
push
mov
lods
jns
push
inc
add
xchg
in
out
or
mov
pop
enter
aas
cmpsl
lods
lock
ss
daa
movsb
jmp
and
jmp
loop
sar
or
mov
cmp
xchg
gs
sub
or
add
push
sub
sub
sbb
push
pop
sbb
out
cmp
xchg
por
adc
jno
pop
inc
and
mov
add
clc
gs
mov
xchg
jmp
mov
cmp
lds
imul
and
stos
adc
ljmp
insl
xchg
loope
push
cmpsb
push
jmp
fistpll
mov
cmp
lock
in
xor
aaa
jmp
lret
clc
pop
out
sub
jmp
jae
push
jmp
bound
popf
je
and
sub
pop
test
int
jmp
xor
shll
mov
roll
cli
add
jge
adc
xchg
aas
pop
jmp
scas
mov
sub
jne
add
std
lods
orb
stos
pop
adc
pop
jmp
stc
pop
loop
jb
jns
test
imul
mov
mov
insl
dec
and
jmp
cltd
and
out
jmp
cs
repz
add
pushf
dec
insl
jmp
push
and
cli
stc
out
adc
pusha
mov
cmc
stos
dec
rclb
mov
loop
jbe
scas
pop
ljmp
leave
push
shrl
dec
adcl
sub
lret
mov
insb
inc
jmp
repz
movsb
mov
repnz
sti
into
mov
jmp
sub
dec
in
jae
jmp
leave
mov
aam
test
adc
pop
out
test
jmp
scas
pop
dec
icebp
jle
mov
add
sub
iret
lods
push
push
sub
and
cmpsl
jmp
mov
lahf
xlat
jbe
cmp
shlb
jmp
int3
mov
fucomp
mov
push
mov
jmp
icebp
sti
sahf
inc
and
dec
or
ljmp
cmp
leave
sbb
repz
je
xchg
pop
out
mov
xchg
int3
es
adc
loope
xchg
lret
cmp
and
outsl
add
sub
ss
rorl
arpl
fstpt
test
sbb
pop
sub
mov
imul
insb
cs
cmp
sub
inc
aam
in
fsts
bnd
repnz
cmp
mov
shld
push
jmp
in
test
cmp
call
inc
jmp
mull
and
jmp
outsl
cs
mov
xor
sbb
mov
mov
mov
mov
jmp
into
lods
filds
mov
arpl
and
add
daa
add
mov
sub
xlat
shll
adc
mov
sarb
lock
cs
call
popf
adc
aad
mov
loopne
popa
push
and
sub
out
mov
push
jmp
inc
clc
push
mov
cmc
adc
jmp
dec
imulb
daa
mov
xor
jmp
cs
jecxz
fucomip
and
andl
push
popf
pop
inc
mov
sub
ds
movsl
xor
imul
mov
iret
adc
in
stc
pop
loop
inc
mov
xchg
outsl
sub
or
pop
out
or
jo
xchg
sub
lahf
movsb
sub
add
daa
jle
and
jmp
inc
repz
inc
into
icebp
outsb
test
mov
xchg
loop
xor
or
push
aam
sbb
pusha
outsb
xchg
scas
inc
xlat
repz
mov
das
mov
jae
arpl
push
sbb
sbb
cwtl
add
adc
shlb
jmp
call
cmp
repnz
pop
jmp
lods
fiaddl
das
or
in
shlb
dec
std
push
jns
jmp
pop
adc
outsl
sbb
lods
rorl
push
xor
incl
sub
lods
sbb
repz
mov
mov
and
and
inc
or
jnp
sub
repnz
std
idivl
cmp
repz
divb
call
stc
xor
or
mov
inc
jmp
push
cmp
mov
fisttps
mov
mov
cmp
flds
lds
lods
call
mov
cs
jmp
lds
mov
out
imulb
sarl
pop
cmc
push
mov
fists
sub
pop
push
shlb
jmp
stos
sbb
in
xchg
lods
jmp
outsl
mov
hlt
test
sbb
xlat
arpl
fidivs
or
movsl
es
mov
fmull
and
jmp
inc
push
jo
sub
xchg
pop
outsb
stc
mov
and
mov
cmc
mulb
nop
daa
fidivs
addr16
jge
js
inc
pop
out
cmp
jl
lret
sti
xor
repz
add
clc
stos
or
jnp
cmc
leave
lods
jno
adc
nop
ficompl
add
je
lret
and
jmp
aam
adc
call
xor
daa
adc
xchg
idivl
outsb
mov
mov
mov
xor
mov
andb
js
jp
adc
cmp
jb
cmp
xchg
xor
popa
sarl
jmp
ss
pop
rolb
jl
dec
outsl
test
sbbl
lods
insb
push
jae
shlb
xchg
xchg
cmc
sbb
stos
jmp
rol
push
fldt
jmp
mov
sbb
imul
mov
shll
cmp
mov
mov
jmp
outsl
jbe
les
je
js
mov
inc
and
sub
iret
lret
sti
xchg
idivb
inc
jmp
int3
scas
cmp
insl
jmp
and
push
nop
int
cmc
inc
adc
mov
mov
repnz
pop
mov
cmpsb
mov
and
leave
lea
mov
and
cmp
add
addr16
add
lods
dec
pop
or
into
shl
outsb
jne
sti
daa
imul
add
dec
in
jmp
aad
into
fcoml
and
outsl
and
dec
popf
mov
adc
sbb
jbe
es
loopne
sub
xor
jmp
aam
fs
cld
sub
dec
loopne
pop
or
dec
js
lret
orl
or
dec
sahf
dec
fisubs
mov
loop
adc
adc
pop
jmp
mov
xor
jmp
sub
jmp
aaa
gs
pop
dec
dec
cs
jmp
push
mov
add
loopne
jmp
gs
cmp
movsl
jae
leave
bt
adc
mov
add
dec
cld
sub
push
jmp
rorb
cmp
fistps
lods
data16
scas
mov
mov
xor
jmp
pop
dec
dec
and
mov
out
lods
scas
sbb
pusha
int3
lret
push
stc
pop
loope
inc
arpl
jno
cwtl
jmp
sti
or
inc
mov
fistps
lods
xor
imul
movsb
xchg
jmp
pop
xchg
and
mov
repnz
sbb
adcb
mov
xchg
mov
in
sub
cmc
add
inc
sbb
int
shr
sbb
test
pop
ret
jmp
jg
insl
fldl
xlat
das
ror
and
lds
mov
sahf
xchg
and
enter
dec
mov
or
jp
in
repnz
push
bound
dec
cmc
and
xchg
dec
ds
pop
mov
jmp
shl
lds
add
jecxz
xchg
bnd
jmp
aam
mov
jns
popa
or
push
mov
sub
das
xor
mov
add
and
pop
jmp
jno
les
std
insl
lods
mov
xor
ret
popa
xor
and
mov
leave
mov
or
jmp
and
jmp
out
mov
out
adc
in
sub
repnz
fidivrl
mov
push
jmp
aam
pusha
leave
popa
outsl
cmp
outsb
lcall
jecxz
xor
adc
mov
aaa
mov
mov
mov
mov
fs
lock
mov
xchg
jmp
data16
push
js
pop
dec
jmp
add
mov
scas
daa
jmp
cs
je
loope
xchg
dec
inc
or
stc
jmp
add
jo
jmp
jge
enter
ds
dec
or
sbb
cltd
icebp
imul
jmp
push
sbb
xor
loope
push
out
adc
in
sub
insb
nop
adc
dec
rorb
pop
inc
xchg
pusha
aaa
pop
outsl
das
leave
mov
lahf
jnp
xchg
jle
bnd
inc
dec
sub
fildl
outsb
call
add
movsl
adc
lds
icebp
mov
jnp
stos
inc
out
jmp
jmp
mov
jmp
addr16
and
outsl
loopne
jmp
inc
cli
add
lock
xor
imul
dec
jp
ret
or
es
jmp
loope
push
ds
dec
or
lods
or
jmp
jle
imul
lock
push
cmp
mov
pop
sub
jmp
mov
push
aas
enter
lcall
xchg
push
mov
pop
sti
jmp
fldcw
or
stos
les
pushf
sub
sbb
es
outsl
push
jne
inc
sbb
lock
in
cmp
subl
fsubr
inc
xor
arpl
sub
and
in
pop
jne
jmp
cmp
stc
stos
mov
cld
mov
xchg
cmp
dec
cmpsb
jmp
shrb
mov
dec
repnz
in
mov
fmul
fsubr
sub
xlat
jmp
push
jl
lahf
sub
adc
shll
insb
enter
push
clc
or
daa
or
mov
pop
adc
push
andl
cmp
out
insb
cmp
lock
mov
lods
arpl
and
sbb
in
jnp
fisubrl
sbb
lret
pop
push
dec
sub
imul
clc
jmp
sbb
push
mov
fistpl
mov
lods
lods
pop
or
cmp
out
push
outsl
jmp
aad
mov
jmp
xor
das
mov
test
out
mov
bnd
or
popaw
xchg
dec
add
popf
cmp
stos
push
das
mov
int
mov
in
dec
jo
je
jb
nop
push
testl
inc
and
inc
dec
lods
dec
xor
xlat
sbb
rcll
daa
hlt
aam
and
xchg
ficompl
bound
sbb
pop
nop
mov
arpl
add
inc
js
insb
cmp
sub
or
aam
add
inc
in
xor
pop
in
test
in
add
push
xor
sahf
das
jl
mov
out
negl
xor
dec
adc
sbb
sbb
jmp
mov
fwait
lods
pop
in
call
outsl
sbb
jp
mov
lret
add
js
sub
xchg
jmp
ljmp
lods
in
add
mov
arpl
xlat
push
lods
test
pop
push
and
stos
sarb
or
test
or
pop
lret
jg
js
push
sub
scas
jecxz
lods
fcmovnbe
mov
xchg
and
push
xor
jmp
sub
adc
jmp
and
or
iret
inc
jmp
adc
dec
sub
push
mov
add
fcomp
or
jmp
or
add
in
call
mov
add
inc
sti
nop
repnz
fistps
cld
test
jmp
mov
and
push
adc
clc
pop
repz
in
mov
sub
cmp
lahf
sbb
push
daa
stc
leave
fimull
add
jmp
movsl
das
inc
cmpxchg
std
jmp
xchg
stc
rcrb
out
testb
and
jmp
pusha
and
ljmp
pop
and
stos
mov
fiadds
mov
arpl
cmpsl
xchg
adc
sbb
dec
or
jmp
repz
xchg
lock
jno
jmp
or
inc
or
mov
neg
pop
jmp
dec
mov
shl
push
jbe
or
int
ljmp
jmp
push
call
add
xor
xor
pop
inc
dec
jmp
stos
xor
and
inc
jmp
outsl
movsb
ret
add
cmp
ret
into
fists
jmp
sub
and
jno
out
aam
cwtl
adc
pop
or
inc
mov
xor
out
jmp
sub
or
jmp
add
push
or
fidivs
jno
jmp
jne
orl
fadd
fisubrs
or
mov
or
pop
cld
sub
lods
jmp
mov
sahf
ljmp
leave
daa
cmp
jmp
shlb
sub
jbe
fs
cmpsb
sub
adc
or
mov
adc
shl
lock
pop
int
dec
inc
pop
xchg
and
mov
adc
sti
fsubl
jmp
call
dec
cltd
jmp
idivl
xchg
jmp
loopne
mov
test
jmp
mov
adc
insb
jmp
fdivrl
test
inc
push
jmp
ret
xor
mov
xchg
icebp
jmp
pop
nop
sbb
cmp
scas
stos
dec
pop
or
ljmp
push
lods
and
add
mov
pop
test
out
int
xchg
jmp
cmp
cmpsl
push
stc
imul
lcall
iret
xchg
sbb
cmc
fldl
jmp
popf
pop
mov
adc
jb
add
das
add
bound
mov
outsb
pop
shl
mov
push
jg
lcall
jo
xchg
mov
iret
addb
jmp
adc
loope
xchg
add
xchg
jmp
mov
je
and
iret
setl
sbb
imulb
cld
push
sti
push
xchg
jbe
repz
or
adc
dec
sbbl
adc
mov
xchg
adc
xchg
enter
xor
call
cld
adc
stc
pop
clc
mov
stos
sbb
xor
mov
mov
mov
repz
mov
push
jmp
rcll
test
pop
jmp
xchg
push
setge
mov
in
sub
mov
jmp
cli
enter
int
push
pop
clc
push
jge
sbb
sub
xor
pop
enter
xchg
out
jl
sub
dec
inc
mov
bound
ror
rorb
dec
mov
dec
aad
cltd
sub
mov
sbb
ds
js
mov
jl
test
subb
xchg
stos
sub
addr16
adc
or
adc
dec
outsb
jmp
adc
andl
leave
stos
push
out
mov
mov
or
mov
add
lods
adc
pop
mov
sub
jg
fcomip
test
lds
sub
and
test
mov
por
add
mov
inc
or
nop
inc
sbb
in
ljmp
xchg
enter
jmp
mov
push
inc
fildl
jmp
clc
dec
dec
and
pop
scas
fidivrs
outsb
sub
stos
movsl
int
imul
pop
pop
jmp
fbld
mov
cmpsb
dec
aam
mov
jmp
push
and
jmp
pop
mov
aas
dec
repnz
fadds
sub
je
pop
in
daa
inc
or
mov
rorl
outsb
lahf
subb
loope
adc
sahf
filds
pop
call
shr
push
mov
dec
push
sbb
jo
mov
clc
fidivl
pop
aam
lods
sub
out
daa
push
cs
jmp
call
gs
cmp
xor
mov
push
mov
mov
loop
jmp
fnstsw
icebp
mov
dec
push
pop
jmp
rclb
add
pop
repnz
daa
in
pop
xchg
arpl
bound
mov
or
jb
cmp
sti
iret
test
cmpsb
mov
es
jmp
andb
push
sub
insl
mov
negb
jmp
leave
outsl
jge
fsubr
daa
int
xchg
jae
jo
jmp
dec
loop
xor
fiaddl
inc
inc
sub
inc
jmp
ds
mov
cmc
add
mov
cwtl
or
leave
dec
popa
aam
fildl
pop
jp
inc
lea
test
mov
lods
jae
enter
dec
rcr
pop
fsincos
popa
ljmp
pop
mov
inc
aam
mov
mov
pop
add
mov
addl
mov
lea
imul
mov
inc
dec
sti
movsl
rol
mov
cmp
jnp
mov
stc
mov
jmp
inc
dec
arpl
pusha
imul
dec
pop
sub
popa
insl
jo
jmp
test
in
stos
add
jmp
negb
dec
jbe
movsl
jmp
shrb
mov
in
imul
mov
insl
push
aas
out
pop
xchg
and
sub
add
mov
inc
sbb
jnp
sub
fildll
xchg
test
fs
jmp
xor
adc
jmp
es
push
lods
push
repz
scas
fmul
and
add
cld
jo
insb
jmp
mov
testb
or
pushf
dec
imul
mov
std
jmp
les
cmc
data16
out
mov
push
insl
inc
test
fucomip
cs
int3
ja
jmp
and
sahf
jmp
xor
popa
test
mov
dec
or
or
inc
sti
dec
mov
insl
subl
cmp
testb
out
popa
pminub
jge
add
cwtl
jmp
dec
sti
mull
inc
mov
sbb
adcl
jnp
cli
out
fwait
jmp
inc
sarl
fildl
pop
test
sbb
pop
lret
sbb
jbe
dec
cmp
xor
lcall
stc
jmp
bound
int
sbb
jmp
pop
push
push
lds
xchg
insb
or
stos
jmp
les
inc
mov
jp
sbb
adc
andb
sub
jmp
xchg
cmp
test
inc
add
jmp
xchg
push
cltd
loopne
insb
add
ret
inc
sub
loop
jmp
das
insl
cmp
push
ljmp
lods
jmp
cmc
aaa
ror
aam
mov
je
sbb
imul
jl
shr
dec
sub
mov
popl
mov
or
jmp
jo
mov
imul
sub
or
inc
jmp
cltd
stc
leave
jbe
in
sti
icebp
repz
je
not
repnz
js
sub
repz
pusha
ja
sub
sub
cwtl
or
jge
jmp
into
jecxz
js
jae
es
jmp
movsl
test
cmp
lods
push
lods
cmp
pop
add
cmpb
mov
jb
jmp
sub
sti
outsl
jecxz
sbb
mov
add
and
or
dec
adc
xlat
mov
divl
xor
xor
xchg
sti
cmp
lcall
jle
repnz
or
jo
or
inc
mov
mov
lods
adc
les
or
or
or
shr
pop
mov
in
gs
es
sub
popa
add
loope
test
mov
popf
mov
cmp
jmp
fs
jle
lret
jmp
push
test
jmp
mov
out
jmp
cwtl
filds
xor
sub
push
fnstcw
negl
push
jmp
into
xchg
xchg
inc
test
fldt
lods
pop
or
mov
insb
loop
fnop
xor
fstl
cmp
and
outsb
arpl
aad
movsb
lods
loop
call
lret
lods
ss
pop
mov
or
inc
cmp
sub
and
jbe
lret
push
jae
mov
and
jmp
jb
jno
nop
ret
mov
lahf
dec
repnz
jb
pushf
rolb
jge
hlt
push
mov
fdivs
cmp
mov
leave
sub
jle
sub
jmp
pop
clc
xor
cmp
cmp
jp
or
outsl
cli
stc
jmp
ret
mov
jmp
mov
lods
jmp
sub
lahf
out
in
cs
mov
or
jbe
push
jmp
jno
mov
mov
push
xchg
and
fadds
push
std
clc
cmp
sti
pop
fisubs
aad
jmp
lahf
mov
fldt
mov
mov
rcrl
repnz
mov
xor
lods
jo
outsb
mov
jns
mov
adc
mov
push
pop
push
push
push
xor
dec
pusha
xchg
pop
mov
cmpsb
jmp
lock
je
bound
call
cmp
xchg
add
add
outsb
adcl
sbb
push
sahf
jmp
fstl
subl
arpl
mov
dec
xor
imul
ds
sti
dec
add
sbb
or
mov
push
sbb
pushl
dec
fwait
jmp
or
scas
enter
jno
out
dec
mov
je
iret
xor
sbb
mov
sbb
shr
sbb
xor
and
and
inc
mov
pop
addr16
cmp
popf
lds
repz
jmp
sarb
and
das
pop
into
jmp
adc
cmp
xchg
leave
sbb
loopne
lods
mov
imull
movsl
jle
enter
rorb
in
mov
jno
data16
call
and
inc
sbb
sub
lcall
sbb
out
fsubrp
inc
imul
aas
jle
sti
or
imul
idiv
xor
adc
xor
sahf
cmp
jno
jmp
xchg
data16
push
imul
shr
call
xor
push
daa
leave
push
sbb
xor
insl
or
or
or
orb
dec
push
inc
rol
push
aad
xor
gs
mov
test
stos
mov
out
jb,pn
inc
iret
mov
sbb
or
jns
or
scas
stos
js
mov
int
cmp
test
insl
loope
scas
jae
jmp
int3
inc
add
mov
jmp
scas
and
jmp
push
cmp
xchg
and
cltd
gs
jmp
in
push
adc
nop
mov
cmp
call
cmpsb
jbe
jne
mov
insl
mov
lods
popa
push
in
xchg
ljmp
inc
call
or
roll
pop
xchg
es
out
sub
int3
ffreep
adc
mov
pop
je
push
cmp
insl
push
and
cmc
pop
int
push
xchg
jmp
ficoml
sub
mov
mov
scas
adc
mov
in
lock
out
push
sub
sbb
jmp
sbb
or
xorl
bnd
xlat
cmp
jmp
add
lods
or
sbb
ficoml
pop
test
sub
test
jmp
cmc
fldt
rcll
jmp
cmp
adc
jbe
iret
sbb
jmp
and
mov
add
sbb
mov
lods
adc
stos
mov
por
mov
out
mov
jb
js
movsl
in
mov
mov
lds
jmp
push
and
cli
xor
xor
ja
pop
ss
stc
cmp
mov
aad
inc
sub
mov
push
sbb
or
testl
and
fwait
mov
jmp
aas
push
popa
adc
pushf
shrb
and
ret
jmp
loop
fucomp
call
les
or
xor
int
and
mov
push
dec
rcll
icebp
aaa
jmp
sub
lods
hlt
ret
imul
fsubrl
out
pop
jnp
mov
div
inc
out
das
bound
add
mov
mov
lods
pop
mov
add
jmp
shlb
stc
out
sub
xchg
cmpsl
les
mov
mov
icebp
jmp
fwait
in
xor
bound
ret
pop
dec
pop
clc
arpl
add
dec
xor
orb
xor
xchg
mov
in
xchg
cmp
xchg
xchg
pusha
dec
pop
outsb
jmp
dec
push
sub
sbb
inc
inc
or
das
add
sbbl
int
jmp
ret
shlb
fldcw
jns
popa
jmp
jb
ret
mov
mov
cld
cmc
and
fcom
adc
leave
mov
out
inc
sti
sbb
leave
jmp
jmp
jb
jmp
in
cltd
pop
stos
pop
in
jmp
sbb
xorb
inc
clc
xor
sbb
cmpsb
jmp
mov
gs
test
jmp
add
or
idiv
bound
mov
in
jmp
std
lret
dec
repnz
popf
outsb
imull
dec
sti
pop
xchg
lds
in
jno
fistl
out
and
lret
cmpsb
dec
push
das
cmp
jb
test
inc
gs
rcll
dec
pop
shll
lods
rcr
mov
addr16
add
subl
jmp
sub
neg
cmp
clc
pop
popf
adc
xchg
add
mov
out
iret
push
or
jmp
pop
xlat
das
inc
rorb
xchg
aas
sbb
fisubrl
out
adc
pushl
cli
jbe
push
adc
divps
stos
fs
faddl
sub
popa
push
mov
cmc
movsb
xchg
jmp
mov
cmpsb
jmp
xchg
xchg
clc
push
std
mov
cmp
mov
filds
inc
jmp
jnp
ljmp
mov
mov
adc
jmp
mov
mov
jmp
sti
mov
loopne
ds
jmp
mov
pop
sub
sbb
xor
mov
xchg
jmp
das
cmpsb
lret
jecxz
outsb
xor
bndstx
addr16
or
movsl
sbb
fistpl
sbb
xlat
scas
addb
cmpsb
pop
jbe
jnp
jmp
lret
arpl
sub
adc
je
dec
loope
mov
nop
jmp
cld
int
mov
add
push
cmpsl
xchg
sbb
jb
push
pop
dec
aaa
and
inc
jmp
repz
fsubrs
into
mov
daa
sub
shll
and
or
xchg
jp
mov
clc
jb
mul
push
out
lds
sub
in
test
setge
push
int
mov
or
int3
jmp
fiaddl
cmp
aas
outsl
add
data16
pop
jl
jno
aad
jb
sub
mov
shrb
add
push
loop
mov
xchg
jmp
pop
jp
xor
ss
and
push
aaa
mov
inc
std
ror
outsl
jmp
mov
imul
pop
xchg
sarl
cli
pop
jmp
inc
inc
lea
rolb
lods
jmp
imul
mov
gs
jns
arpl
rorb
adc
hlt
or
mov
mov
add
mov
jmp
cmpsb
stos
mov
adc
cwtl
scas
push
add
enter
jmp
mov
jle
jns
movsl
or
xor
mov
jge
pusha
jmp
movsl
jbe
insl
jne
push
aas
and
pop
divl
nop
adc
inc
stc
jmp
mov
mov
jmp
pop
add
mov
shr
adc
nop
lods
cmp
je
mov
sub
subl
mov
das
jl
push
fwait
insb
pop
lret
jmp
or
jmp
ret
shl
cmp
cli
mov
rclb
icebp
xchg
jmp
mov
inc
fwait
jmp
xor
jg
rcll
movsl
in
jmp
cli
xor
decb
jmp
lds
xor
adc
mov
inc
out
jb
sbb
jns
sub
jbe
scas
xor
hlt
outsl
and
stos
lcall
int3
inc
popf
sahf
jmp
mov
and
or
iret
lods
cs
inc
fwait
sarl
pop
or
jbe
ret
or
add
sub
mov
mov
xchg
lods
rcrb
and
sub
jmp
jo
xor
sub
into
mov
pusha
dec
sub
inc
sti
mov
call
movb
add
cltd
enter
add
inc
sar
sub
loope
test
imul
sub
cmp
and
xchg
mov
sub
pop
imul
cmp
es
enter
jmp
mov
movsb
dec
jmp
inc
test
xor
jns
loop
lods
andb
xchg
fsubr
sub
ja
movsl
iret
mov
mov
jnp
or
mov
inc
pop
adc
faddl
insb
or
sysenter
stc
fwait
mov
sbb
inc
cmpl
jmp
jmp
nopl
jmp
mov
xchg
and
jns
fcmove
dec
sub
sbb
and
xchg
jmp
imul
dec
rcrw
adc
sub
cmp
iret
inc
and
mov
jmp
push
pop
sub
lods
test
cltd
or
jmp
adc
shll
jmp
inc
dec
cmp
push
cld
test
adc
mov
call
adc
aam
push
xor
shrl
ds
negl
jmp
pop
sub
popa
mov
xor
jmp
enter
adc
jmp
out
dec
sub
push
in
sbb
inc
mov
jmp
pop
inc
pop
hlt
fcomp
lods
add
cld
aam
pop
fstl
push
fisubrs
lods
ja
mov
jmp
xchg
mov
mov
jmp
cmpsb
sbb
jnp
push
xchg
sti
iret
addr16
add
popf
sarb
pop
fisubl
lods
xorb
mov
mov
push
inc
and
mov
pop
imul
xchg
push
jmp
add
cmp
cmp
push
nop
outsb
int3
push
jmp
push
and
aam
jb
dec
mov
mov
add
mov
xchg
mov
pop
pusha
int
loopne
xchg
test
repz
rcrb
jno
lret
aam
add
push
pop
add
mov
fldl2t
inc
cld
lahf
jmp
xchg
jb
out
add
repnz
jmp
xchg
cs
jmp
test
jmp
outsl
mov
add
sarl
or
and
cwtl
mov
clc
push
js
inc
fistl
cld
lcall
ret
jmp
and
xchg
stos
jmp
int
ja
cltd
js
jb
and
sub
scas
fcmovnb
fldcw
test
mov
fidivrl
lods
add
jmp
ret
call
xor
inc
faddl
jp
divb
push
lea
push
dec
outsl
jmp
inc
lret
mov
lods
jmp
movsb
arpl
daa
shl
add
jmp
push
icebp
loop
outsb
pop
jmp
adc
inc
imul
sub
in
mov
mov
xchg
jmp
or
test
mov
adc
mov
mov
xor
pop
jmp
xchg
dec
aad
orb
je
mov
jmp
mov
or
xor
inc
call
mov
fidivrl
cmpsl
stc
pop
and
sbb
pop
rclb
sub
lcall
adc
jmp
fistps
outsl
test
jmp
out
xor
ret
and
inc
mov
xlat
jmp
jge
sbb
jo
or
ljmp
into
jmp
inc
push
jns
in
in
imul
cltd
mov
scas
incl
std
jmp
lret
loop
jno
mov
inc
jmp
arpl
lods
sub
or
push
add
cld
mov
outsb
dec
mov
lret
sti
and
push
push
sub
push
pushf
inc
int
arpl
aas
std
repnz
push
decl
mov
inc
js
dec
sub
mov
fsubr
push
sbb
ret
xor
adcl
lods
jmp
add
push
mov
pop
push
ds
xchg
jbe
dec
jne
jmp
jecxz
xchg
int
mov
lahf
mov
popa
pusha
lods
pushf
add
sub
jns
xchg
aad
jmp
sbb
mov
push
test
ljmp
scas
leave
in
lock
adc
jmp
dec
aad
les
popw
cs
inc
out
mov
icebp
xor
jmp
push
xchg
adc
push
leave
bnd
data16
sub
xchg
sub
mov
sub
sbb
lods
cmpsl
jns
psrlw
push
pushf
dec
inc
cmp
inc
jmp
lea
adc
ds
aam
push
push
fxam
sbb
mov
dec
addr16
mov
cmp
lret
jmp
stos
out
ja
enter
loope
test
or
push
lods
test
jg
aaa
idivl
enter
in
in
inc
push
and
leave
popf
and
lds
pop
lahf
or
lods
jle
push
idivl
inc
jmp
sbb
bound
push
popa
sub
jmp
cmp
cmpsb
xor
jmp
shlb
data16
sub
sbb
jmp
add
cmp
gs
hlt
sub
sub
pop
push
add
fldenv
mov
cmc
mov
or
pop
sub
inc
xchg
stos
pop
xchg
jmp
jp
ret
pop
xchg
es
sub
out
jns
sbb
icebp
jmp
jg
popf
jmp
add
frstor
movss
dec
imul
iret
ss
add
outsb
lods
xchg
leave
jne
or
inc
mov
add
dec
out
loope
cs
jge
jmp
sub
pushf
sbb
cwtl
sub
arpl
fsubrl
rclb
jmp
inc
push
pop
xor
xchg
outsb
push
stos
or
xlat
xchg
lahf
ret
sti
fisttps
pop
jmp
push
mov
mov
sub
in
mov
mov
imul
stos
insl
rorb
xchg
cltd
jns
pop
jmp
iret
sub
je
pop
por
pop
xchg
dec
lods
sbb
decb
push
idivl
jmp
push
push
shr
loop
jg
or
push
jmp
push
inc
icebp
sub
push
xchg
mov
sub
sbb
push
jmp
cmp
add
jmp
xor
cmp
push
mov
push
lock
jb
popa
cmp
fs
mov
push
iret
ror
sbb
mov
mov
fisubl
pop
jmp
or
xor
faddl
add
cmpsl
adc
mov
jmp
ret
jae
add
ds
adc
push
add
lret
and
adc
cs
pushf
inc
xor
imul
arpl
jmp
pop
sti
sbb
jmp
xchg
lahf
push
cmp
jle
xor
dec
fimull
stos
push
pop
call
pop
ljmp
jmp
idivb
negl
sub
push
inc
cmp
ret
jle
jno
sbbl
jmp
iret
jp
out
les
jmp
dec
jge
xor
jmp
cld
clc
push
and
jmp
xchg
fs
jne
js
lods
mov
out
out
pop
aam
or
and
dec
inc
into
mov
push
jmp
fnsave
push
clc
dec
insb
bswap
cmp
enter
leave
mov
add
push
mov
push
mov
adc
bound
insl
mov
jg
int3
push
daa
sbb
sbb
int3
fbstp
sbb
mov
out
test
jp
pop
in
lahf
sub
cmpsb
and
icebp
test
leave
push
jle
jmp
adc
bound
and
adc
pop
rorb
sub
jmp
lock
int3
mov
or
xchg
sub
cli
out
sbb
das
mov
adc
jmp
cmp
in
jmp
cli
push
lret
cmpsl
dec
sbb
shll
dec
mov
test
mov
ja
adc
add
lods
dec
sub
pop
out
sahf
sbb
push
repnz
xor
dec
mov
stos
or
xchg
adc
inc
dec
lods
ljmp
mov
or
mov
lahf
lods
sbb
or
mov
jns
cwtl
xor
sbb
push
sub
jmp
cld
lcall
dec
outsl
jmp
mov
pop
push
movsb
cmpsl
leave
jmp
push
pop
xchg
cmp
aas
loopne
jmp
ljmp
mov
or
cld
ret
cmp
lods
adc
js
cmc
jl
cmp
int3
inc
dec
jmp
push
mov
wbinvd
add
pop
mov
aas
and
push
jmp
and
loop
cmpsb
jp
xchg
jmp
and
mov
jge
or
ljmp
mov
int
cmp
repz
popa
pop
mul
test
enter
adc
jnp
xor
sub
imulb
fidivrs
ret
stos
pop
jmp
push
js
mov
sub
jg
aad
aam
mov
adc
jmp
pop
call
jne
cmp
and
sbb
mov
cmp
enter
movsl
jmp
xlat
movsb
rclb
sub
dec
or
sbb
cmpsl
sbb
dec
data16
out
or
mov
cmp
jmp
pop
dec
xchg
pop
inc
adcl
ret
imul
jmp
arpl
scas
lea
push
mov
cld
ss
mov
stos
jmp
inc
xchg
out
sbbl
outsb
sbb
mov
aaa
jmp
cmc
flds
jmp
outsl
add
bound
lret
stos
or
adc
cs
cli
push
inc
mov
xlat
fisubrs
test
adc
dec
jmp
push
nop
fiaddl
movsb
int
sub
pop
jmp
ss
loop
aam
mov
in
fsubrl
cmpsb
push
pusha
jmp
mov
adc
std
sbb
insl
add
mov
repz
jle
pop
mov
outsl
inc
sbbl
jmp
and
sub
mov
outsl
lahf
mov
jb
out
lcall
enter
mov
sbb
adc
fistl
lahf
jnp
jmp
sub
mov
dec
mov
pushf
sbb
sbb
fisubrs
pop
jbe
push
in
pushf
jmp
jnp
nop
inc
scas
mov
fwait
and
jmp
int3
loope
gs
daa
sub
mov
pop
mov
adc
movd
push
cmpsl
push
repz
mov
shr
gs
imul
es
jg,pt
mov
mov
stos
xor
and
je
sbbl
jns
cmp
imul
inc
cmp
jmp
jmp
cwtl
lock
cmp
and
lcall
and
inc
cltd
sub
mov
cld
addb
outsb
add
cmpsb
pop
jecxz
push
mov
jae
lods
icebp
gs
cmp
push
jg
push
pop
in
mov
mov
ja
adc
mov
in
mov
cs
jmp
adc
fisttps
mov
sub
jno
mov
push
jmp
pop
cs
pushf
fildl
jmp
adc
hlt
jmp
sbb
insb
lret
push
enter
jmp
sub
add
cli
popl
es
inc
or
call
sar
jmp
cwtl
shrb
jge
js
repz
repz
stos
jmp
insb
sarb
cmpsb
imul
dec
mov
jmp
js
idiv
subb
stos
or
sub
gs
pop
mov
add
jbe,pn
cli
push
and
and
fbld
dec
pop
mov
fwait
pop
inc
jmp
aaa
ret
xchg
jmp
fs
xor
push
and
in
add
push
jmp
lcall
jmp
test
xchg
or
inc
inc
leave
mov
iret
test
jmp
dec
or
jg
fs
outsb
jbe
test
inc
sub
or
ds
sbb
dec
sub
das
add
lock
dec
inc
xchg
jmp
out
into
or
sbb
adc
add
adc
lods
xchg
push
jmp
mov
pop
ss
add
cli
popf
movsl
testl
dec
imul
ds
dec
or
jmp
js
dec
ret
sub
mov
jbe
or
sub
fs
ss
mov
cmp
and
pop
mov
lods
ss
out
pop
imul
mov
popf
lods
cmpsl
mov
adc
cmp
xor
push
repnz
stos
std
jmp
inc
mov
cmp
cmp
inc
sbb
cmp
adc
out
jmp
push
ds
fucomi
cmp
pop
ja
adc
jmp
xlat
inc
std
cmpsl
imul
iret
mov
jecxz
lret
add
cmp
or
xor
lea
repz
lahf
cmp
sub
and
out
and
mov
jmp
sti
lcall
lret
movsl
clc
pop
and
inc
cmp
mov
cmc
mov
testb
shll
rcrb
jmp
cmp
xchg
addr16
loope
mov
mov
shrb
cmp
shl
jmp
call
xchg
jmp
dec
dec
dec
push
cld
pop
pop
jmp
lock
mov
jle
mov
adc
inc
jbe
leave
hlt
stc
imull
movsl
sbb
inc
mov
mov
or
jmp
in
jl
scas
mov
xchg
sub
cli
aad
adc
jmp
rcll
sub
cs
mov
inc
bound
decl
shrd
pop
xor
scas
mov
lods
insl
pop
repz
mov
push
jmp
push
pop
jns
leave
cmp
testb
adc
into
loope
pop
xlat
cmp
test
dec
jmp
mov
adc
sub
aad
sub
push
fadd
js
jnp
mov
inc
cmc
imul
daa
popf
and
lahf
jp
dec
sub
mov
stos
hlt
xchg
mov
ret
popf
xor
clc
jp
jp
call
cwtl
stc
cmc
xlat
and
push
or
inc
imulb
mov
lds
sbb
or
xor
call
pop
je
or
scas
inc
ja
icebp
or
jb
inc
sti
sti
loopne
cltd
adc
lcall
jmp
out
imul
call
add
pop
adc
cmp
jmp
mov
lea
xabort
loop
imul
ja
ficomps
xchg
mov
cltd
fwait
aam
lods
jbe
nop
cmpsl
adc
popf
jmp
mov
push
or
sub
addl
mov
or
sub
inc
inc
mov
mov
add
out
push
push
mov
inc
ret
push
mov
jae
xor
adc
clc
andb
mov
pop
lcall
mov
daa
pop
push
outsl
ljmp
lods
xor
sbb
into
psubb
or
xchg
loope
loop
in
stc
ss
sub
sbb
pop
cmp
inc
xchg
and
xor
fisubrs
mov
test
repz
jmp
lret
push
xchg
movsb
add
push
lret
jge
cmpsb
mov
or
call
add
jmp
pop
xchg
push
adc
nop
pop
sub
mov
mov
les
cmpsl
jle
or
pop
jmp
and
addr16
mov
sbb
lods
inc
sbb
adc
int3
push
jmp
cmova
jp
sbb
dec
bound
or
xchg
fwait
scas
add
ret
jmp
push
sbb
lods
testb
jmp
aam
mov
cmp
xor
leave
outsl
xor
movsl
or
aaa
push
inc
adc
jmp
push
sub
pop
dec
inc
jmp
jbe
filds
jg
jmp
aas
aam
sbb
jmp
das
sarl
xor
or
movsl
ffreep
aad
mov
jno
rcrl
or
lock
insb
push
in
adc
bound
shlb
hlt
daa
lock
xlat
lods
movsl
inc
popa
lods
xchg
mov
xor
mov
sub
push
testl
mov
mov
mov
mov
jmp
cmp
add
mov
daa
imul
dec
sahf
fs
jns
jmp
and
mov
scas
sarl
mov
jno
jmp
jne
xor
in
or
cmp
das
and
orb
push
adc
mov
cmp
inc
fcomps
or
push
pop
ds
ljmp
sub
lods
cli
aas
xchg
lods
cmc
sub
mov
jnp
scas
pop
cmp
ljmp
pop
outsl
loop
fstps
ss
ja
popf
outsb
mov
fidivrs
xchg
test
ret
pop
mov
xor
jns
and
adc
mov
jg
es
sub
cmp
mov
xchg
gs
rcrl
mov
dec
jg
test
xchg
call
xchg
and
mov
adc
adc
lods
mov
ljmp
jecxz
jmp
sub
cli
pop
xor
jmp
test
out
mov
sbb
mov
xchg
inc
or
pop
movsb
nop
jnp
jmp
fs
movsl
outsl
adc
test
filds
ja
pop
ss
jmp
call
xchg
imul
ds
fistpl
sub
xchg
seta
mov
mov
insb
jmp
cmp
or
jmp
push
aaa
mov
or
mov
or
sub
cmp
jg
movsl
inc
xchg
es
sbb
cmpsb
inc
ficoms
cmp
and
and
jmp
jno
neg
notl
jmp
mov
lahf
loop
mov
jae
cmp
or
std
leave
loop
movsl
cmpl
lods
mov
js
out
ss
and
cmpsl
jbe
lods
mov
repz
or
sub
inc
xchg
mov
mov
add
stc
mov
movsb
mov
adc
ret
cmovs
jg
jmp
push
sub
mov
jae
dec
lcall
shrl
jb
cmp
insb
bnd
jle
cmpsb
xor
in
test
add
repz
loopne
jge
push
sub
inc
test
mov
in
out
adc
into
sti
mov
repz
mov
jbe
jmp
lcall
jmp
lahf
pop
push
faddl
lods
pop
sub
je
sbb
and
sub
or
dec
mov
insl
sbb
adc
clc
xor
enter
add
pop
jg
push
bound
pop
add
call
sub
scas
popf
sub
shrl
sub
loopne
mov
sub
cmp
pop
pop
or
sti
loop
xor
sub
add
push
jmp
scas
lods
aad
mov
jmp
mov
in
in
dec
mov
jp
jmp
out
lret
jmp
cmpsl
outsl
test
idivb
xchg
test
bound
loope
fsubs
int
xchg
out
add
repnz
xor
ret
mov
std
or
inc
sbb
mov
cmc
jmp
and
adc
mov
jmp
aad
cwtl
stc
push
jle
scas
jns
paddsb
add
cmp
mov
stos
pop
insb
pop
pmullw
dec
jmp
or
inc
pop
push
repnz
lods
or
fucomp
stc
inc
pop
in
sub
cld
imul
push
sub
gs
jg
and
shrb
bound
mov
outsl
jmp
cmp
mov
jmp
mov
mov
sbb
ret
lcall
and
jmp
mov
sahf
jns
jmp
mov
xor
scas
insb
sbb
xchg
dec
shll
clc
hlt
add
out
jmp
jno
scas
arpl
rorl
inc
mov
or
xlat
cmpsl
jmp
leave
stc
push
dec
lock
add
out
xchg
push
jmp
je
and
pop
hlt
scas
imul
jo
test
arpl
pushf
daa
stos
pop
mov
sbb
ret
mov
jmp
sub
adc
xchg
outsb
subb
mov
mov
or
inc
or
and
cmp
dec
push
push
sub
je
rcr
aad
mov
mov
pop
push
jns
clc
and
and
pop
fldpi
or
into
popf
add
push
sbb
jns
aas
jmp
mov
loope
lret
fwait
push
sarl
pop
and
sbb
push
jmp
les
int3
mov
lods
ror
mov
arpl
push
js
mov
aas
xor
pop
sub
jmp
jmp
scas
sar
arpl
or
cli
andb
pop
pop
cmp
ss
pushf
cmp
lret
ja
loope
dec
enter
popa
mov
test
out
mov
shll
mov
xchg
dec
and
dec
lods
movsl
sub
pop
loopne
jae
or
aam
mov
fistps
or
mov
loope
cmp
stos
mov
clc
jecxz
stos
adcl
js
add
cmp
push
push
adc
pop
inc
inc
adc
into
mov
pop
inc
jmp
jmp
mov
aaa
aas
jmp
inc
orl
push
jg
push
pop
pop
lcall
inc
nop
test
sbb
aas
sub
out
xchg
mov
cmp
scas
les
jno
pop
xchg
dec
mov
sar
movsl
mov
mov
imul
pop
cmpsl
and
ret
ja
add
and
mov
pop
xchg
adc
cmp
mov
jb
int3
or
and
leave
sub
js
cltd
ret
pop
fsubrs
popa
fsubrl
mov
pop
adc
pushf
loop
adc
add
lods
call
xlat
mov
sbb
in
push
in
add
pop
mov
or
scas
mov
pop
lods
arpl
scas
inc
leave
lcall
stc
jmp
cmpsb
outsb
dec
mov
or
xchg
sarb
clc
sbbl
jmp
repz
jmp
mov
mov
add
rorl
notl
sbb
lret
dec
jbe
jge
xor
subl
cmpsl
and
je
shr
add
inc
pop
popl
jp,pt
mov
sub
lock
call
inc
xchg
or
orl
lahf
push
adcb
sub
and
cmp
test
mov
cmp
jne
fs
scas
push
pop
mov
jae
dec
lcall
mov
push
sbbb
xor
shlb
adc
xor
out
test
hlt
adc
outsb
loopne
push
imul
sti
cmp
pop
enter
lock
shlb
jmp
mov
mov
inc
jp
rorb
sahf
xor
iret
addl
gs
sub
ljmp
dec
lods
fdivrs
scas
adc
ss
jmp
mov
cmp
aas
jb
cmpsb
lods
rorb
push
daa
fwait
jmp
andb
jmp
addr16
jle
or
sub
add
mov
inc
jmp
push
mov
daa
jmp
cmp
hlt
mov
mov
idivl
pop
jmp
pop
repz
or
add
lods
xchg
jae
mov
rcll
mov
jmp
stc
push
sbb
out
es
mov
sbb
imul
lcall
xor
imulb
inc
pop
pop
sti
push
fs
loope
mov
ja
dec
fsubrp
mov
das
sub
dec
push
or
jmp
imul
sub
adc
outsl
les
sti
fsubl
push
dec
sub
jmp
xor
xchg
jno
or
push
cld
xor
fidivl
or
adc
push
enter
jmp
insl
cmpsb
xchg
jbe
jle
lods
roll
outsl
daa
sub
pop
aaa
pop
jge
in
jae
popf
jns
mov
jo
mov
test
mov
mov
inc
add
pop
sbb
sub
cmpsb
mov
and
or
lods
dec
stos
push
jl
mov
cld
insl
es
cmc
lock
jmp
xor
cmpsl
movsb
cld
push
xchg
lods
cmpsb
or
and
iret
sbb
hlt
jecxz
jg
push
mov
xor
pop
fldl
and
xor
and
sub
and
daa
jmp
push
jp
pop
cmpsl
sar
jmp
jae
jno
sbb
in
fs
dec
add
jnp
jmp
loopne
scas
mov
aaa
insb
outsl
dec
cmp
sbbb
inc
ljmp
dec
sarb
push
roll
outsl
pushf
add
outsb
into
mov
add
jle
lret
push
sbb
mov
pop
out
adc
push
imul
mov
xchg
movsl
pop
into
cld
xor
fstps
adc
and
push
and
xchg
cmp
mov
mov
xor
push
push
rorb
pop
aas
mov
iret
jmp
repnz
or
lods
jmp
in
prefetchwt1
in
inc
inc
iret
dec
dec
mov
mov
out
and
xchg
mov
out
push
xchg
mov
add
jmp
dec
out
sub
orb
aad
imul
dec
notl
push
imul
insl
sbb
jmp
sti
neg
std
push
sbb
mov
and
enter
das
jb
iret
jmp
sub
sub
jnp
jmp
imulb
sbb
leave
cmp
std
pop
sti
or
cmp
adc
or
test
lods
out
mov
stc
ss
xchg
jo
jno
push
jmp
mov
push
mov
push
mov
enter
jl
fsubl
sti
shll
jmp
pop
dec
mov
jmp
sub
pop
jge
adc
andl
inc
push
jecxz
incb
test
scas
pop
and
dec
sarb
mov
cwtl
push
out
sbb
outsb
xlat
aaa
test
jo
mov
jmp
xor
es
dec
mov
push
mov
fwait
scas
jmp
bound
out
push
fstps
cli
outsb
insb
adc
jb
dec
int
ret
rcrb
stos
test
push
lock
enter
jo
mov
mov
jmp
movsb
jae
insl
pop
mov
lahf
mov
push
push
lret
out
cmpsb
mov
xor
cwtl
adc
fcmovbe
nop
out
movsb
ret
adc
hlt
add
or
outsl
add
jmp
inc
scas
sub
mov
mov
lds
mov
sub
insl
daa
addl
or
cmpsl
test
push
into
mov
popf
xchg
outsb
sbb
cwtl
dec
add
mov
je
or
stc
adc
adc
lds
in
sub
and
push
rorl
inc
jae
pop
push
xor
jmp
je
dec
in
cmpsb
outsb
sarl
in
add
jmp
adc
rolb
jmp
push
pop
addr16
jmp
sbbl
ss
call
lods
aad
lods
cld
sub
rdtsc
fbstp
out
movsb
sub
or
sbb
mov
adc
pop
cmp
nop
es
jmp
rcrb
jle
sub
cmp
ja
cwtl
jmp
pop
out
clc
ljmp
pop
push
dec
mov
shrl
jl
and
jno,pt
mov
lea
xchg
ja
lods
out
inc
out
lds
and
stc
or
cmp
orb
rep
jbe
push
or
jmp
pop
pusha
push
add
push
mov
frstor
pop
stos
mov
jo
adc
stos
xchg
and
dec
jmp
mov
push
jae
adc
sbb
lret
cs
fcmovb
inc
xor
movl
jmp
out
cmpsl
xor
add
mov
cld
clc
adc
jmp
jge
xorb
or
xchg
jmp
xor
loop
jno
jmp
fldt
xorb
dec
sti
mov
inc
xchg
daa
insl
jmp
jbe
jg
mov
jne
out
ret
pop
xchg
inc
and
mov
push
push
xchg
in
push
mov
pop
jp
outsb
pushl
jle
es
loope
outsb
mov
mov
jmp
popf
pop
das
cmp
push
mov
jmp
dec
mov
movsb
jmp
xchg
xchg
and
jmp
and
add
enter
pop
lret
xlat
jnp
arpl
push
jmp
cli
adc
movsb
xchg
push
mov
push
push
jge
jmp
sarl
xor
cmp
jmp
in
jnp
icebp
mov
jmp
gs
jmp
cli
pop
imul
and
dec
call
jmp
mov
or
mov
lods
mov
loope
xchg
xor
orl
dec
mov
mov
cmp
mov
out
dec
lock
leave
push
jmp
add
es
call
or
jmp
xor
dec
mov
xor
xchg
or
inc
jmp
cmpsl
mov
loop
scas
jmp
and
jg
push
add
movsl
xor
lea
push
mov
in
pop
in
fdivr
lock
add
jmp
jno
int3
bound
fwait
jmp
mov
add
scas
gs
shl
mov
fst
ljmp
or
xchg
mov
or
and
scas
enter
outsl
and
outsb
lcall
scas
inc
or
leave
aad
repnz
int
idivl
jmp
lahf
add
pop
jmp
out
enter
xchg
xor
ss
pop
xlat
pop
int3
dec
jmp
dec
adc
pop
jmp
mov
jbe
push
repz
fldcw
mov
cwtl
loope
in
mov
js
and
dec
dec
ret
sub
jmp
cmpsb
push
xchg
dec
lods
popf
int
dec
xchg
mov
add
icebp
mov
jmp
loopne
movsb
inc
cmp
fldenv
shlb
adc
int
and
cwtl
jmp
aas
add
cmp
jmp
addb
call
gs
dec
push
out
xlat
out
sbb
mov
sub
adc
sbb
int3
idivl
in
repz
push
lcall
xchg
and
aaa
out
lods
and
xorb
and
jl
ret
or
mov
movsl
lret
cmp
add
jmp
inc
dec
xor
push
jbe
fcoml
inc
imul
mov
push
sti
and
lret
cmp
cmp
loopne
and
out
jmp
ja
xchg
jmp
test
cmp
sti
enter
push
pop
xchg
sub
xor
popa
clc
outsb
mov
testb
mov
jle
adcb
dec
ljmp
push
cs
je
inc
jmp
fadds
add
outsb
mov
mov
push
jmp
stc
cmp
jl
xor
pop
in
repz
das
imul
aaa
enter
and
xchg
or
cmp
dec
aas
or
jmp
sub
lcall
jg
jno
les
mov
test
mov
dec
shr
xor
nop
fwait
or
pusha
sub
mov
mov
add
outsl
cmp
clc
repnz
push
in
outsl
mov
and
sbb
xor
insb
jmp
and
mov
out
sti
fimuls
jmp
push
sub
mov
inc
icebp
out
idivl
push
sub
or
cmp
cmp
jmp
jae
pop
jp
sub
pop
xchg
pop
jne
adc
xor
pop
xchg
jo
test
mov
inc
int3
dec
subl
mov
cwtl
fwait
imul
xor
mov
popa
cmpsb
sbb
mov
sub
outsb
shlb
rcll
lret
aam
jmp
ja
adc
or
sbb
push
sub
add
inc
decb
ret
mov
cmp
push
jo
lods
jp
or
sbb
insl
push
movsb
or
pop
mov
push
leave
neg
sub
jmp
fs
dec
xor
aam
push
sti
push
adc
data16
test
flds
clc
push
cltd
enter
lods
cmp
adc
add
jg
sub
js
jmp
cltd
mov
push
push
pop
data16
je
inc
lds
call
and
push
lods
enter
or
and
add
jmp
mul
xor
xlat
stc
in
jmp
or
jmp
pusha
cmp
jle
push
add
test
xchg
xchg
je
int
mov
in
sbb
sub
pop
pushf
xchg
cmpl
dec
in
lahf
jno
or
sub
jmp
dec
mov
adcl
push
lock
test
ljmp
je
jge
jecxz
ffreep
inc
dec
push
jmp
in
or
out
push
xorl
inc
mov
xchg
jmp
mov
mov
cmp
sub
inc
outsb
add
pop
jmp
in
scas
sub
mov
mov
sahf
mov
pop
mov
mov
lods
cs
xchg
es
push
outsb
jle
pop
inc
repz
loop
into
jmp
adc
or
sub
cmp
and
jne
leave
scas
fstl
shrb
push
mov
dec
ret
int3
sub
pop
call
test
jecxz
shl
ss
outsb
inc
push
jnp
jns
fdivs
imul
roll
popa
and
out
outsb
sub
or
fldl
or
jmp
or
ja
xor
in
mov
push
sub
int3
cmp
or
sti
sub
jmp
push
mov
mov
jmp
lahf
xchg
fisttpl
and
jo
call
adc
cli
sti
sbb
aad
or
mov
jmp
xor
fmul
add
mov
pop
sbb
lahf
negl
jecxz
pop
dec
inc
pop
int
mov
jmp
iret
loope
or
fwait
xchg
mov
jmp
jge
pop
shll
outsb
dec
scas
jp
sti
cmc
mov
mov
test
jecxz
jmp
xor
inc
fistpl
xor
push
dec
mov
out
jno
inc
out
stc
sbb
mov
xchg
pop
xor
sti
dec
jmp
lods
lret
das
pop
loope
popa
jecxz
jmp
pusha
fistl
jmp
push
sub
repz
gs
aam
pop
andl
mov
mov
add
pushf
movsl
cwtl
sub
insl
mov
sub
inc
test
jae
addr16
add
in
lods
clc
mov
pop
add
inc
xor
and
mov
loope
pop
mov
jmp
jg
cltd
in
jbe
or
or
mov
xor
or
into
sbb
dec
popf
dec
xor
int
das
cmpsb
or
sub
mov
cli
xor
popa
jmp
and
loop
fiaddl
sbb
xor
sti
pop
cli
adc
pop
repnz
in
xlat
mov
int3
sub
inc
ds
and
cmpsl
jmp
gs
push
mov
test
or
jmp
pop
iret
and
xchg
dec
cmp
mov
addl
xor
and
shll
std
mov
sti
mov
inc
cwtl
cmc
sbb
cltd
jmp
mov
into
scas
test
mov
mov
fs
or
lret
dec
adc
jmp
es
testb
insl
sbb
mov
or
xchg
jmp
push
mov
push
lods
sti
or
outsb
outsl
add
mov
adc
lahf
jge
push
jmp
shl
fsubs
xchg
dec
xor
cmpsb
adcb
push
jne
std
jge
and
cmp
in
push
xor
or
filds
out
in
mov
add
ret
scas
inc
fnstenv
inc
jmp
gs
pop
jmp
stos
movsl
fdivrs
adc
mov
and
lods
push
mov
push
rclb
jnp
jmp
hlt
xchg
in
aaa
jmp
dec
mov
rorb
sub
dec
inc
jmp
mov
lret
por
je
aad
mov
xor
inc
xor
lods
in
mov
pushf
pop
adc
push
mov
sbb
addb
insb
inc
cwtl
mov
stos
mov
push
sahf
jmp
ja
loopne
pop
cmpsb
jbe
sbb
adcl
fsts
stos
xchg
repnz
in
adc
clc
pop
and
cmp
cli
test
out
aas
adc
jmp
sub
rol
jmp
pop
mov
mov
mov
setno
add
jmp
jg
sti
dec
mov
nop
rcl
sahf
js
jmp
int3
cmp
jmp
inc
xor
mov
inc
or
ds
sub
add
in
sbb
sub
outsb
add
leave
sbb
imul
stos
sub
inc
inc
mov
and
push
sub
adc
mov
pop
fwait
movl
mov
xchg
add
jecxz
mov
pop
mov
mov
test
jge
and
cld
jg
mov
jmp
bound
mov
mov
outsl
or
iret
xchg
into
inc
pushl
inc
cmp
pop
rcll
inc
fidivl
mov
jmp
or
movsl
pop
pop
sub
ja
jae
sbb
aad
jmp
negb
cli
jb
or
mov
push
add
jmp
push
or
sub
xlat
mov
inc
adc
adc
test
mov
jmp
loopne
xlat
popa
sub
fistpl
jae
sub
pop
scas
shll
fnstsw
pop
jb
cmp
aas
lcall
cmp
repz
jmp
push
sbb
xchg
lods
imul
outsb
mov
pop
dec
add
in
nop
mov
filds
adc
insb
mov
in
jmp
test
jmp
outsl
push
dec
data16
sub
sbb
cmpsb
pushf
fimuls
adc
xchg
iret
and
cmp
xacquire
jmp
js
aad
inc
push
ja
inc
stos
lods
xchg
mov
pop
pusha
fld
inc
or
insw
jmp
jae
lock
mov
jp,pn
cwtl
xchg
sti
flds
loop
insl
xchg
addr16
ret
or
cli
xchg
pushf
or
fstp
shrl
mov
or
or
inc
inc
or
and
push
fidivl
mov
push
add
and
insb
gs
jmp
pop
xlat
test
sub
push
jmp
in
mov
jno
pop
lea
mov
das
add
sbb
and
ljmp
xor
in
scas
outsb
xchg
xor
movsb
aas
les
rorb
and
mov
cmp
hlt
jmp
mov
cmp
sahf
testl
or
xor
outsb
xchg
pop
xor
loope
jmp
sub
sbb
fst
hlt
push
pop
andl
jmp
lock
mov
sti
sub
sub
cs
inc
ret
jp
jmp
pop
daa
cwtl
loopne
jne
jmp
add
scas
xor
dec
sub
mov
sbb
and
xchg
pop
sub
in
sbb
adc
mov
inc
outsb
lods
imul
sbb
mov
jmp
rcll
jmp
mov
fisubs
clc
int3
mov
test
gs
gs
frstor
push
mov
jle
mov
leave
out
push
hlt
pop
cmp
arpl
cld
xchg
pusha
jmp
add
or
fs
sahf
cmpsb
in
jmp
push
scas
add
jb
out
jmp
lea
push
loopne
jmp
out
imul
scas
add
idiv
outsb
insl
jmp
push
ljmp
lea
xor
dec
xor
lods
push
cmp
xchg
sub
and
mov
xor
sub
jmp
and
aam
push
cmp
jmp
jle
cmp
adc
sbb
pop
inc
scas
push
or
lds
int3
xor
pop
dec
and
sub
shlb
addr16
fcoml
push
scas
pop
or
push
cmp
dec
pop
lds
mov
jmp
insb
cmp
pop
add
out
out
mov
xchg
mov
sub
loope
aas
sbb
outsl
pusha
push
jmp
pop
sbb
lods
push
add
inc
lods
cwtl
mul
sub
jmp
enter
int
adc
mov
imul
addr16
push
or
sub
or
jl
repnz
int
mov
iret
movsb
sbb
aad
cmp
and
jmp
pop
inc
fs
sahf
jno
jmp
mov
ds
mov
sbb
mov
cmpsl
push
dec
daa
push
sub
fsubr
cmpb
aam
mov
cmpsb
mov
shrb
fcomps
shll
aaa
sub
jp
sbb
push
movsl
test
jno
jmp
jns
mov
xor
sub
icebp
sub
mov
xor
sti
inc
dec
aaa
lods
lret
xchg
in
pop
xor
scas
xor
dec
inc
cmp
jb
into
jmp
add
je
popf
imul
mov
ret
push
sar
fsubr
mov
pop
pop
jmp
pop
pop
pop
das
sbb
fsubr
xchg
bound
jmp
add
inc
imul
sub
jmp
or
imul
pop
pop
sub
jmp
ret
sbb
mov
push
shrl
mov
and
lds
imul
out
pop
mov
lock
xchg
cmpsl
jle
subb
cmpl
inc
adc
and
inc
insl
out
hlt
rolb
pusha
sub
dec
mov
jne
cli
mov
add
pop
xor
jmp
push
xchg
aas
dec
mov
int
lret
pusha
call
adcl
xchg
std
lock
xchg
jg
and
mov
push
add
inc
jmp
cmpsl
and
test
push
lods
idivb
xchg
mov
xor
dec
bnd
mov
pop
ljmp
scas
js
xlat
fsubrl
cmpsb
sbb
out
in
jne
sub
cwtl
mov
xchg
je
outsl
jmp
bnd
xor
push
inc
fstpl
jmp
hlt
push
jae
adc
movsb
sub
daa
aas
cmp
and
push
jmp
lret
ss
jne
sub
mov
mov
push
aaa
mov
dec
sbb
or
stc
mov
jae
jmp
cmp
ljmp
dec
push
rcrl
ret
and
mov
mov
out
add
imul
inc
lds
jmp
ret
das
js
outsl
mov
loope
imulb
subl
lret
mov
inc
dec
push
jmp
pop
push
into
or
icebp
jl
mov
pop
inc
inc
add
loop
and
xchg
pop
jmp
jo
repnz
jmp
ret
jne
sub
sub
and
movsb
lods
scas
adc
and
xchg
out
int3
out
les
sbb
pushf
or
stc
dec
pop
repz
stos
adc
insl
jmp
fbstp
xchg
and
xchg
xchg
jle
je
and
fmull
or
jae
inc
es
jo
xchg
call
jmp
in
mov
inc
cmp
add
cmp
mov
mov
jmp
xchg
dec
cmp
mov
je
iret
scas
add
inc
pushf
dec
movsb
out
fldt
jb
bnd
test
cli
ror
insl
sbb
lods
xchg
push
push
scas
sbb
js
divl
xchg
outsb
cmp
int3
movsb
adc
and
pushf
jmp
shr
aaa
sbb
adc
xor
orl
enter
dec
stos
jmp
add
push
les
adc
mov
jno
ds
mov
stos
test
stos
out
jmp
call
add
jmp
cmp
or
adc
loopne
imul
xchg
pop
addr16
inc
jnp
xlat
sub
pop
fiaddl
sarb
jae
lret
mov
inc
movl
add
jle
add
mov
jmp
test
jmp
fidivl
imul
mov
es
sbb
cmp
or
jo
xor
pop
ret
sub
clc
xchg
fistps
sbb
jb
test
lods
nop
cs
xor
mov
pushf
jmp
loopne
pop
xor
jmp
imul
and
cmp
sbb
cmp
mov
mov
and
or
lock
jno
and
mov
cmp
subb
adc
aas
movsb
xchg
cmpsb
dec
pop
stc
xchg
repz
mov
sub
jnp
sarb
and
dec
ds
inc
popf
mov
jmp
mov
mov
pop
mov
inc
mov
mov
enter
jmp
xchg
outsb
leave
cmc
jmp
dec
nop
and
and
xchg
inc
addr16
repz
push
or
es
and
sub
insb
cmpsb
stc
jmp
pushf
pop
imul
popa
adc
jmp
bound
adc
inc
out
jne
pop
jnp
xchg
mov
popf
jns
ret
jno
incb
nop
and
jmp
ret
adc
xor
loop
mov
out
xchg
sbb
push
mov
idivb
jne
aad
push
pop
into
scas
jmp
addr16
in
add
jp
test
cmp
push
int3
pusha
inc
sti
jg
or
jmp
xchg
mov
dec
mov
cmp
pop
or
int
xor
dec
sub
mov
mov
in
add
xor
mov
fsubr
sbb
mov
sub
pop
xchg
fmull
adc
xor
push
jle
lods
leave
mov
add
jbe
and
repz
mov
dec
lods
cs
in
rcl
jmp
loopne
aas
outsb
int3
jo
dec
sbb
les
imul
lret
inc
lods
cltd
and
in
or
lods
add
xchg
cmc
xchg
imul
cmp
pop
xor
push
fidivrl
mov
and
dec
pop
cs
xchg
rcrb
pop
xchg
or
fnsave
ljmp
das
inc
and
or
js
sar
rclb
cmpsl
adc
insb
repz
dec
jnp
cltd
sub
mov
fcos
sti
lret
cmp
fucomp
mov
in
dec
sbb
aas
pop
mov
cmp
dec
xchg
movsb
add
addl
mov
and
cli
pusha
lds
dec
test
or
clc
sub
mov
outsb
into
and
cmp
jmp
mov
sub
or
jmp
sti
or
shr
push
and
lock
test
jge
aas
push
sbb
imul
outsl
push
pop
push
inc
mov
or
mull
lea
cmp
lcall
das
dec
pop
in
divl
cli
cld
outsl
sub
mov
push
aam
das
sahf
sti
shlb
insb
mov
outsl
jl
fwait
ljmp
out
jmp
or
xchg
and
inc
adc
lock
push
or
cs
add
push
in
inc
jmp
les
cmp
sbb
insb
cmp
push
adc
mov
jmp
inc
inc
mov
lock
mov
add
int3
sbb
pop
mov
sub
ljmp
mov
adc
stos
insl
lock
stos
or
icebp
lods
pop
mov
pop
jae
inc
and
adc
fimuls
sub
mov
in
idiv
and
dec
jmp
mov
add
fldlg2
daa
jmp
sub
pop
inc
sub
and
outsl
add
cwtl
imul
sbbl
xchg
jne
insl
jmp
xchg
xchg
cld
push
mov
lret
ds
push
mov
inc
xor
adc
aam
pop
seta
add
scas
jmp
js
fcmovne
lea
cmpsb
add
sub
dec
daa
mov
sbb
push
adc
inc
and
data16
xchg
icebp
sbb
popf
jmp
xorl
jmp
stc
mov
and
insl
out
orl
lods
aam
adc
mov
ss
jmp
pop
scas
push
and
or
mov
sub
fidivrl
lods
pop
rolb
mov
jle
addb
inc
sbb
imul
pop
push
enter
xchg
sub
inc
js
aas
invlpg
inc
xchg
fisubl
clc
es
nop
jmp
fucomip
mov
int
jb
testb
dec
aad
fcomp
jmp
jle
hlt
imul
jmp
clc
daa
out
lahf
loop
sub
inc
sbb
jl
cmp
xchg
leave
jmp
lea
cwtl
jmp
es
rorl
push
pusha
jp
push
jmp
outsl
lods
lret
fbld
cmp
clc
jmp
je
xchg
imul
mov
cmpsl
jmp
outsl
dec
jae
push
inc
push
outsb
push
in
jo
jnp
jmp
into
decl
leave
sub
rcrl
jmp
out
rcrb
cmp
outsl
xor
imul
push
cwtl
xor
je
cli
mov
test
repz
jno
shrb
cltd
add
jmp
jp
mov
cmp
pop
or
inc
cmp
mov
dec
jle
insb
lds
nop
shrb
movsb
sbb
into
fs
inc
stos
xchg
jae
cmp
jle
das
loop
cs
sub
cmp
aad
mov
les
repnz
jmp
ret
scas
xchg
cmpsb
dec
jne
scas
xchg
xor
out
ds
mov
idivl
rorb
jmp
call
mov
inc
test
pusha
and
lret
or
xor
mov
xchg
jmp
adc
lcall
jns
sbb
mov
mov
jmp
fisubs
cmp
lock
daa
sub
jb
rclb
jmp
lea
out
arpl
mov
jb
stos
push
fucomip
andl
push
ja
aam
add
pop
adc
push
or
pop
pop
push
jl
mov
or
jmp
push
shl
sahf
mov
out
xchg
sbb
test
shll
scas
es
cmp
rorb
movsb
mov
jg
cld
sub
fidivrs
sub
dec
jmp
push
repnz
mov
cmp
in
adc
add
lea
addl
jno
lahf
push
jge
cmpsb
mov
or
lods
mov
daa
fistpll
push
xlat
jmp
call
mov
cld
xorb
std
xor
push
loop
es
aad
into
jp
jbe
jl
xor
jns
aam
jle
jmp
das
jo
xchg
fwait
sub
or
or
mov
cwtl
aam
lods
andl
testb
cltd
daa
ret
dec
sbb
sub
outsl
popa
adc
and
fwait
mov
dec
jmp
insl
leave
ds
subb
jmp
mov
ret
push
ficompl
jp
mulb
add
daa
ja
mov
sub
xchg
lcall
mov
sbb
cmc
adc
stc
push
pop
jo
mov
mov
in
cli
pop
jmp
daa
inc
adc
mov
or
mov
dec
mov
hlt
stos
adc
xchg
push
pop
add
jmp
push
mov
or
or
rcrb
mov
and
aaa
popf
iret
jo
or
sahf
and
mov
xlat
jmp
pop
xor
push
xchg
mov
pop
pop
insb
sbb
addl
xchg
lret
outsb
push
dec
jp
sub
fcoms
sbb
add
dec
cltd
xchg
inc
push
xor
lods
cmp
and
outsl
and
je
rorb
repnz
pop
insb
into
dec
cmp
addr16
xor
jmp
push
rorb
jmp
mov
scas
enter
mov
shr
cltd
daa
addb
xor
mov
imul
fs
jmp
out
movsl
mov
push
pop
xor
int
mov
jmp
jnp
xchg
sti
enter
cltd
lods
aad
arpl
out
stos
jmp
cmp
imul
xchg
lret
sbb
inc
test
jle
mov
jmp
adc
shll
jmp
lock
add
cwtl
add
repnz
out
insb
pop
jmp
fsubl
add
jmp
enter
in
pop
jmp
push
xor
sub
cmpsl
mov
cmp
push
in
arpl
push
add
dec
sbb
add
pop
lret
popf
lcall
jmp
pop
jg
jecxz
gs
xchg
sti
ret
sar
adc
cmc
mov
xlat
xchg
lcall
in
dec
cmp
loopne
fcomi
mov
add
ss
sub
mov
mov
jns
mov
fstl
add
addr16
jmp
bound
imul
lea
xor
xor
jb
pop
out
sub
gs
adc
roll
daa
cmp
sub
fcomps
test
dec
mov
addr16
jmp
hlt
inc
and
pop
push
icebp
shlb
sbb
jecxz
add
lcall
dec
sti
mov
fnstsw
cmp
cwtl
mov
jl
je
bound
dec
lods
arpl
lret
popa
int3
dec
add
and
dec
xlat
int3
int
and
push
scas
mov
mov
inc
sub
shl
in
mov
out
js
and
inc
lret
jle
sbb
repnz
inc
mov
cmp
lret
adc
fldl
mov
sub
sbb
sahf
mov
popa
loope
and
jmp
scas
enter
push
pop
jb
add
outsl
mov
cmp
sahf
pop
sbb
mov
jmp
addr16
aas
icebp
jge
outsb
adcl
xchg
mov
movsl
into
pop
scas
fldenv
lds
and
out
cltd
lret
mov
jmp
pop
pop
add
insl
mov
fs
push
adc
sbb
lret
cld
mov
pop
pop
cmp
sub
popf
loope
jno
rorl
cmpsb
out
inc
fidivs
je
fldenv
dec
mul
jmp
sub
push
mov
adc
jns
dec
cmc
mov
mov
mov
idiv
fs
and
and
sub
sub
int3
std
push
rcll
push
es
dec
in
or
cmp
in
xchg
ljmp
dec
hlt
sub
push
sbb
pop
pushf
inc
in
lret
or
jecxz
aad
loope
and
and
push
sub
gs
pop
scas
js
stos
cmc
mov
repz
imull
fs
jmp
jp
push
jge
push
jmp
cmp
and
pop
sbb
or
and
pop
arpl
imul
pop
loope
test
sbbb
push
mov
xchg
rcr
push
hlt
sbb
inc
jmp
add
stc
arpl
or
mov
cmp
sbb
xor
cmp
or
into
inc
nop
lock
jmp
jns
inc
push
add
das
ljmp
aad
sbb
dec
lods
lods
es
or
add
decb
adc
pop
pop
iret
sti
adc
jae
lods
pop
mov
push
sar
pop
cmpsl
ds
mov
lcall
fld1
jmp
jnp
push
imul
insl
jmp
sbb
xchg
lods
std
inc
lds
cmpsl
inc
sbb
lock
fdivrl
div
cmp
daa
rcrl
stos
mov
cmp
pop
rcrl
mov
icebp
mov
adc
push
mov
sbb
pop
call
cld
jmp
imul
sub
sub
mov
jl
inc
and
pop
add
xchg
sbb
dec
mov
insl
sbb
lock
cltd
fbld
cmp
adc
cmp
mov
and
xor
adc
or
xchg
mov
int
mov
dec
lods
push
lret
mov
mov
jns
cmp
xchg
xchg
rclb
bound
sub
lods
or
jmp
std
arpl
add
xlat
mov
es
pop
dec
add
xor
out
shrb
or
je
negb
xor
inc
jbe
dec
movsl
out
lods
xor
movsb
push
call
or
fcoml
mov
bound
jmp
frstor
out
jns
jae
imul
and
pop
jmp
sbb
jnp
out
push
outsl
sbb
imul
xchg
push
jae
xchg
sahf
das
jmp
cld
xchg
cli
iret
xchg
fisubs
addr16
movd
mov
add
jnp
imul
lock
adcb
jg
mov
jmp
popa
push
dec
es
adc
lods
aas
arpl
jmp
shrl
jmp
adc
cmpsb
roll
roll
add
les
pop
jmp
xchg
dec
cli
or
adc
xlat
jmp
adc
scas
test
mul
jp
int
inc
stos
aad
jmp
mov
mov
shrb
out
cmp
xor
fidivrl
sar
adc
or
inc
jg
adc
mov
test
pop
jbe
fs
adc
sub
and
push
jmp
push
std
insl
mov
cmp
or
sbb
loop
les
orb
or
inc
shlb
scas
fdivs
in
dec
xor
push
xor
mov
test
aad
daa
out
imul
cmp
aaa
fmuls
fs
imulb
and
pop
pushf
pushf
mov
in
sub
mov
jae
add
and
imul
xchg
and
gs
mov
daa
shll
mov
idivb
xor
dec
sbb
aaa
scas
ds
push
outsb
popa
sub
sub
mov
push
mov
jmp
sub
lods
sub
mov
bound
jb
push
icebp
gs
incl
ds
xchg
outsl
aad
dec
test
xchg
loopne
or
cmp
xchg
mov
ret
xchg
push
mov
dec
lcall
shufps
jg
mov
jo
movsb
sti
jmp
mov
mov
adc
push
add
inc
and
or
xchg
mov
inc
sub
xor
mull
xor
sub
sub
lcall
out
pusha
scas
sbb
inc
rcrl
jnp
jmp
and
aaa
stc
mov
or
mov
dec
lea
jmp
rcl
pop
fldl
push
mov
xchg
outsb
test
mov
rclb
leave
xchg
cli
jle
jmp
jno
das
pop
push
jmp
sub
xchg
and
fstpt
inc
push
jnp
mov
and
mov
sub
insl
jmp
inc
mov
daa
mov
mov
mov
sbb
jmp
in
aad
mov
cmp
out
mov
lock
stos
xor
pop
out
mov
scas
jmp
out
cwtl
aaa
ret
push
jmp
outsb
push
xlat
lds
push
outsb
mov
out
nop
lret
lret
xchg
iret
pop
xchg
ja
dec
xchg
mov
std
shr
jne
mov
test
inc
xchg
popa
or
and
test
notl
jmp
insb
add
inc
add
xor
adc
int3
outsl
jmp
xor
pop
push
lcall
or
cmpsl
fcomi
fists
scas
mov
notl
sub
lret
and
stc
lret
mov
jmp
test
int3
xor
xor
or
or
rorb
adc
jmp
adc
mov
jmp
mov
das
mov
inc
mov
add
cmpsb
pushf
mov
inc
addr16
mov
sub
push
xchg
stos
cli
add
mov
jmp
dec
and
jp
fnsave
stos
and
mov
lret
add
jae
sub
push
stos
sub
es
mov
aas
adc
movsb
sbb
add
and
inc
jecxz
repz
mov
add
nop
push
mov
popf
sbb
les
scas
add
mov
xchg
jmp
adc
jecxz
cmc
idivb
jmp
inc
sbb
pop
fmull
xchg
out
sbb
pop
mov
cmp
sub
sub
jo
and
sarb
or
inc
push
in
ds
cmp
data16
inc
add
push
imul
xchg
test
cmc
outsl
pop
mov
loopne
repnz
cwtl
mov
mov
mov
ja
sub
jecxz
ljmp
jmp
dec
mov
ljmp
cmp
sti
or
lods
cli
jmp
sbb
call
adc
jl
mov
lea
mov
jmp
fwait
and
pop
int
jmp
or
popl
daa
sahf
mul
dec
das
jmp
dec
mov
pop
fstps
xchg
fwait
mov
dec
jmp
setne
stc
and
xchg
push
int3
scas
xchg
mov
cmc
pop
das
ja
xor
daa
sti
fcomps
sub
inc
sub
add
dec
inc
sub
cltd
push
mov
mov
inc
pop
aas
int
mov
into
xchg
data16
xchg
or
cmp
lods
lds
pop
add
push
movsl
sbb
dec
cmc
jmp
xor
in
push
mov
or
ret
dec
adc
insl
jmp
sbb
push
jne
jmp
shll
imul
pavgb
ret
lods
jmp
sti
mov
insl
xchg
mov
int3
push
adc
mov
int
aad
pop
mov
sub
imul
sbb
daa
dec
lods
push
insb
jg
cld
cmovs
fildll
mov
sti
repnz
mov
or
pop
loop
fdivl
xor
aad
cmc
jmp
mov
inc
push
dec
lcall
mov
shl
pushl
add
mov
aaa
les
sub
call
jecxz
imul
sti
or
or
repz
lea
test
and
jmp
mov
push
outsb
jmp
aaa
roll
imul
leave
mov
ljmp
pop
jp
fwait
daa
sar
mul
fucomi
and
pusha
add
into
aaa
inc
xor
sub
push
cltd
sbb
cwtl
lods
and
je
push
or
fidivl
clc
imul
sbb
push
insb
imul
fists
inc
loopne
sbb
push
bound
enter
mov
jmp
xchg
xor
mov
jmp
cmc
jg
int3
mov
imul
pop
mov
jae
jge
std
adc
sub
inc
jmp
out
dec
int
xor
sti
sti
jb
insl
mov
jns
movsb
add
pop
and
xchg
lods
cmp
jmp
into
jmp
mov
mov
stos
imul
and
and
mov
pop
sbb
xor
jmp
loop
iret
mov
adc
sbb
mov
sub
and
test
push
add
das
push
cli
fld
jmp
in
mov
adc
scas
mov
jmp
push
cli
adc
orl
testb
stc
jmp
iret
push
fdivrs
es
jmp
xlat
pop
mov
push
outsb
jle
orl
repnz
jmp
or
inc
cltd
jmp
and
or
mov
push
lret
sub
lahf
nop
mov
shrl
xchg
xor
fwait
stos
jmp
bound
or
inc
adc
test
sub
adc
sti
pop
lods
ljmp
lret
sub
out
fnstenv
jbe
and
jg
test
dec
mov
fldenv
clc
test
adc
and
or
or
inc
jne
pop
shr
adc
test
sub
insl
jb
mov
out
push
lock
sarb
pusha
scas
cmc
xchg
std
xchg
or
inc
in
add
pop
gs
and
mov
outsl
adc
cld
adc
mov
stc
pop
es
ds
fdivl
pusha
js,pn
dec
inc
lods
insb
rorl
filds
mov
lret
lods
jmp
sub
mov
mov
mov
jmp
mov
mov
sub
jecxz
sbb
jmp
mov
push
xchg
jbe
mov
stc
mov
fs
pop
pop
mov
push
dec
lods
push
jg
pop
sbbb
jmp
add
fisttpll
inc
mov
and
pop
add
mov
xchg
adc
sahf
leave
xchg
daa
or
stos
mov
add
cmc
mov
mov
push
jmp
jle
mov
jb
xchg
je
add
lods
lahf
and
arpl
xor
nop
ret
popa
pusha
lds
aas
pop
aad
ja
push
jmp
pop
imul
sub
shr
jle
fists
lret
push
jno
sbb
dec
jmp
or
pusha
inc
out
sbb
subl
pop
or
pusha
pop
adc
fsubr
add
add
testl
outsl
sbb
cwtl
mov
push
xor
jmp
fwait
mov
mov
jmp
pop
imul
subb
sbb
fidivrs
mov
fucomi
jmp
inc
inc
push
hlt
icebp
dec
sbb
in
mov
filds
jo
xlat
ret
jb
push
inc
xchg
jg
and
call
test
imul
push
jmp
add
mov
jmp
movsl
popa
test
dec
inc
dec
jmp
push
adc
test
lock
add
mov
mov
lea
les
shlb
mov
jle
movsb
out
mov
inc
jmp
sub
or
mov
mov
ds
jnp
movsl
jmp
inc
push
mov
cmp
jmp
cmp
sub
dec
test
jmp
push
push
mov
loop
xchg
jb
push
sub
mov
lds
fdivrl
pop
sti
jne
adc
repz
push
inc
fwait
pop
mov
adc
out
mov
mov
loop
pop
cmp
jmp
das
lods
ja
gs
sub
sub
pop
or
sbb
and
in
xchg
jnp
mov
push
xchg
test
loopne
andb
or
sarl
add
cmp
mov
jmp
mov
es
clc
mov
sarl
dec
in
cmp
mov
lcall
pop
fistpl
xchg
jmp
inc
xchg
jmp
scas
mov
cmp
sti
mov
lods
inc
pop
add
or
add
mov
das
insb
jmp
insl
push
push
fstl
in
adc
mov
dec
sbb
or
bnd
fwait
dec
and
imul
mov
xor
outsb
xchg
out
push
repnz
cmp
jmp
push
pop
lcall
xchg
icebp
and
or
pop
push
dec
stc
ficoml
movd
aam
sub
iret
adc
lods
sub
xchg
cmp
in
jg
push
je
imul
scas
fimull
jne
inc
jmp
mov
bound
mov
fs
stos
repnz
mov
jb
int3
jno
cld
pushf
sbb
dec
sbb
adc
sbb
fsubrs
std
cmpsl
xchg
movsl
popa
jmp
aaa
stos
push
mov
xchg
lret
call
mov
aaa
jmp
mov
sbbl
sti
rcrb
cmpsl
divb
xchg
ss
jmp
mov
orl
jle
fwait
mov
push
stc
out
sub
sub
jg
jmp
fidivl
push
pop
sbb
and
sub
or
jmp
jg
inc
fcoml
jmp
add
mov
movd
je
xor
sti
psubq
mov
xchg
push
pop
adcb
sub
mov
sbb
pop
lock
sbb
fucomp
push
ficompl
addr16
loope,pt
and
jmp
popf
mov
jle
cli
dec
jmp
xchg
or
scas
addb
jns
sarb
test
push
push
inc
push
and
mov
and
and
call
lret
xor
pop
jmp
cmp
es
pop
mov
xchg
push
pop
jmp
jl
jecxz
into
mov
lods
xor
fdiv
int3
mov
push
fiadds
popf
adc
aam
pop
mov
lods
bound
mov
jge
jmp
es
adcl
sub
sarb
sub
out
mov
cmp
jo
xor
das
dec
jae
jg
sbb
out
mov
std
mov
pop
rcrl
gs
addr16
sbb
arpl
bound
out
fldpi
out
or
mov
pop
pop
inc
cmp
push
dec
cmp
cmpsl
lea
sub
mov
and
add
scas
mov
mov
jmp
mov
loop
test
mov
jmp
pop
incl
and
fs
rorl
jmp
sub
mov
sbb
pusha
mov
and
leave
mov
xlat
push
or
xchg
jne
sub
loop
or
xchg
jns
sbb
jl
dec
sub
jno
push
jmp
in
xchg
les
cmpsl
or
js
hlt
ljmp
lods
lds
cmp
sahf
and
loope
pop
mov
popf
hlt
push
jmp
push
cmpsl
mov
push
std
cmp
dec
jne
cltd
in
jmp
jns
ja
pop
clc
sbb
testb
leave
iret
ss
dec
rcr
jecxz,pt
jns
cmp
adc
add
jmp
out
stos
pop
das
int
stc
jmp
stos
cmp
jnp
mov
or
hlt
add
push
xchg
bound
in
fs
insl
push
dec
dec
or
inc
adcb
mov
xor
mov
lret
into
loop
jmp
addr16
in
push
sti
outsb
mov
xchg
rcll
jnp
ss
dec
lods
pop
arpl
xchg
mov
jmp
inc
cs
sub
divb
pop
leave
push
test
bound
push
add
xor
stc
and
out
scas
inc
sbb
adc
lahf
mov
pop
dec
mov
mov
adc
sbb
outsb
mov
jne
xchg
repnz
stc
cld
lods
dec
jp
or
iret
or
push
inc
movsl
sub
push
push
pop
das
jns
jb
cmp
pop
sub
es
cli
jne
jmp
adc
test
mov
jmp
lods
add
lret
mov
adc
jmp
in
daa
sbb
aad
adc
imul
mov
push
xchg
sbb
push
jmp
repnz
jb
hlt
cmc
jmp
out
mov
dec
jmp
ljmp
mov
sbb
mov
add
jmp
sbb
cmpsb
mov
notl
cld
sqrtps
shrl
fdivr
adcl
xchg
xor
scas
jae
add
or
lcall
aam
sub
icebp
fnsave
lret
cmp
adc
mov
xchg
data16
fldpi
and
push
and
add
ja
nop
jge
or
pop
jno
or
mov
sbb
push
pop
data16
xchg
outsb
stos
outsb
cmp
pop
or
xor
in
lods
movb
adc
sahf
jmp
outsb
jae
lret
adc
xchg
sub
mov
ds
leave
push
push
imul
clc
jmp
mov
xlat
adc
or
jmp
jecxz
adcb
inc
or
ds
dec
xchg
jmp
jge
mov
jp
pushf
sub
mov
dec
daa
mov
jmp
xor
inc
inc
push
pop
jmp
cmpsl
adc
insb
sbb
lcall
mov
movsb
jmp
arpl
pop
jmp
lcall
jmp
mov
outsl
lea
jmp
xchg
mov
dec
jle
mov
fistpl
jmp
cmp
jle
fs
lods
push
in
mov
aaa
sub
ds
jmp
or
jmp
mov
jmp
push
rcll
loope
jmp
int
inc
shlb
imul
gs
sbb
jmp
inc
or
into
xchg
jns
inc
mov
out
or
in
xchg
jmp
mov
cmpsb
jmp
pop
lock
cmp
mov
lods
out
jmp
cltd
fcomp
sbb
mov
or
and
jbe
bound
lods
mov
icebp
push
pop
arpl
adc
popa
xor
dec
mov
je
stos
in
and
test
mov
sbb
add
dec
dec
push
mov
and
push
flds
cli
mov
and
addb
sbb
jmp
or
popa
test
jp
mov
jae
mov
insb
xchg
jne
jmp
ret
rcl
jmp
cld
rcr
inc
int
test
mov
pop
adc
dec
jns
out
xchg
dec
es
popf
mov
mov
cld
scas
jmp
imul
fcomip
or
adc
sub
daa
test
push
jmp
jle
cmp
or
push
mov
jno
adc
movsb
fs
jl
jae
pushf
mov
fwait
aas
jmp
add
mov
cld
add
jmp
jo
adc
fidivs
or
or
cmpsb
in
xor
test
jnp
testb
mov
jge
cmp
aaa
jmp
outsb
jl
icebp
dec
jecxz
jb
or
mov
clc
in
aas
and
and
xor
or
jg
sub
xchg
mov
dec
sti
add
or
jmp
pop
jmp
imul
test
pop
inc
call
jns
sbb
bound
push
sbb
mov
les
mov
sub
push
je
ret
mov
clc
pop
push
push
xchg
push
adc
stos
mov
cmp
and
inc
jmp
sbbb
test
jmp
and
shr
fimull
jmp
rcl
fnsave
subb
lods
popa
xchg
or
adc
dec
imul
adc
and
jmp
sub
adc
pop
jmp
aad
jns
adc
xchg
push
out
idiv
ret
xchg
fucomi
jl
in
mov
int
and
sub
cmp
adc
mov
jge
mov
jae
lret
mov
shrl
sub
scas
or
test
xorl
aam
repnz
push
push
aaa
repz
repz
or
mov
lods
cwtl
push
dec
mov
inc
jge
dec
insb
jp
outsb
ret
or
adc
and
cld
push
rorl
xor
lods
xchg
imul
cmpsl
sub
and
testb
dec
ret
aaa
imul
jmp
mov
mov
aas
test
pusha
data16
dec
jmp
dec
or
push
sub
jmp
sub
inc
jmp
ds
mov
jmp
nop
xor
aas
enter
mov
adc
sbb
scas
stc
pop
jae
sub
xchg
sub
xor
pop
js
ljmp
mov
jl
outsb
repz
pop
pmulhuw
pop
cmp
and
in
paddsw
popa
jmp
pop
or
outsb
mov
cmpl
push
arpl
adc
jmp
adc
jmp
hlt
push
xchg
mov
lods
pushf
das
in
fwait
or
lds
cmpl
inc
testl
jmp
out
std
es
icebp
fisttps
pushf
dec
jp
push
inc
lds
jns
cmpsl
rorl
cli
in
enter
jne
negl
xchg
faddl
jnp
jae
jmp
mov
jbe
dec
imul
dec
ss
and
fcom
jmp
push
jnp
cmp
mov
mov
sub
mov
xor
insl
jle
aas
and
jmp
cld
cmpsl
orb
lods
pop
lods
jecxz
and
jle
ja
pop
mov
pusha
out
ss
sub
inc
xchg
pop
push
test
adc
jb
sub
lods
ret
xor
jmp
pop
out
add
jmp
shl
cmp
loope
jmp
mov
push
in
lret
jmp
xor
lahf
cli
push
jp
add
ret
jbe
mov
jmp
mov
push
mov
lods
stc
push
jb
dec
cmpsb
pop
inc
mov
pusha
dec
data16
push
push
jmp
push
outsb
rol
movsb
xlat
inc
jmp
mov
sub
aas
aad
out
push
std
std
dec
outsl
jmp
mov
ds
sub
inc
xor
iret
fs
fisubl
xchg
and
lods
mov
push
cld
sub
add
lods
adc
sub
sbb
adc
daa
mov
add
xchg
xchg
mov
pop
mov
ret
mov
sbbl
shrl
loop
aad
insb
test
mov
jb
xchg
ljmp
cs
lahf
xor
or
mov
int3
and
jmp
mov
cmp
push
cmpsb
testl
xor
dec
and
push
xor
repz
jmp
mov
jle
inc
mov
pop
lea
rcrb
and
jmp
pop
mov
sahf
pop
jecxz
inc
cld
sub
lods
incl
imul
xchg
dec
mull
cli
andl
js
push
add
iret
bswap
jmp
jb
fdivs
mul
mov
sbb
jmp
push
dec
sub
in
sub
jmp
mov
sub
jp
sti
adc
ret
xchg
daa
stos
ja
pop
les
bound
push
ds
fnstcw
scas
es
adc
adc
fdivrl
sbb
jo
pop
mov
inc
adc
or
decl
jmp
pop
aam
sub
dec
int3
pop
add
inc
jmp
jmp
sub
das
pop
or
or
dec
xlat
stos
xchg
jmp
inc
jo
dec
enter
xchg
mov
sbb
sub
cmp
and
jmp
dec
mov
mov
pushl
push
push
xor
jnp
xchg
imul
clc
jb
xchg
jae
addr16
cmpsl
lret
loopne
push
jmp
out
sub
sbb
mov
sub
dec
jmp
insl
mov
xchg
ja
dec
or
sbb
fs
xchg
pop
rcrl
popa
jmp
adc
push
in
mov
sbb
push
mov
clc
cmp
inc
xchg
xchg
sbb
xor
jmp
and
scas
rorl
jmp
sbb
mov
pop
into
fmul
and
mov
bnd
sub
mov
pushf
inc
lahf
mov
jle
jmp
adc
or
add
into
sbb
ja
incl
lods
cltd
and
fdivrp
jp
out
popa
xchg
and
mov
repz
xchg
jne
jmp
fdivrs
mov
test
mov
imul
aas
jmp
aam
stc
repnz
sbb
lods
fcmovne
cmp
jns
xchg
jmp
xchg
stc
jmp
movsl
mov
inc
mull
and
cmpsl
pop
lock
leave
xor
and
movsl
add
xchg
aas
call
jmp
mov
push
sub
mov
rcrl
sub
pop
leave
sub
sub
cmp
xchg
mov
jmp
xchg
mov
xchg
push
cld
xor
mov
loopne
fidivrl
js
and
sub
xchg
je
mov
lea
mov
jg
pop
pop
jmp
fiadds
cmp
jmp
mov
inc
mov
scas
rep
adc
nop
xchg
push
jmp
and
into
xchg
pop
shr
xchg
pop
out
out
int
jmp
push
pusha
jnp
jecxz
call
xor
cmpsl
ss
icebp
add
xor
cmc
fnsetpm(287
xor
test
insl
mov
call
movsb
mov
pop
cmc
mov
xor
ret
pop
jmp
push
jmp
mov
rorl
popa
repz
sub
adc
and
shr
stos
mov
cmp
push
xchg
jg
mov
cli
cmp
jmp
ds
fisttpl
jmp
lods
push
sbb
sbb
cli
mov
add
scas
xchg
fs
inc
test
insl
xchg
sbb
sub
insb
dec
sbb
daa
idivb
cltd
scas
adc
and
sub
mov
jmp
je
and
xchg
adc
mov
xchg
jmp
dec
mov
and
fwait
and
stos
push
jle
and
xor
sub
jno
ret
lret
sbb
mov
jo
pusha
jle
adc
clc
out
es
dec
xchg
and
lods
push
aaa
mov
int
dec
cmp
mov
pop
aaa
dec
lods
mov
ljmp
mov
in
inc
addr16
cmp
jmp
sbb
and
push
sbb
fildl
add
js
out
fsub
divb
or
arpl
imul
in
pop
leave
sbb
dec
movsb
jmp
jge
jo
lcall
cmp
ljmp
and
aam
jbe
jge
or
lods
fcomps
jmp
mov
jmp
push
stos
vpunpcklwd
dec
jmp
call
inc
mov
pop
sbb
or
pop
hlt
gs
xchg
inc
aaa
loopne
push
push
cli
jmp
and
ja
cmpb
int
sub
jae
cmp
add
scas
jmp
adc
jl
in
lods
iret
repnz
push
jg
ss
inc
jmp
pop
adc
shr
aad
adc
sub
mov
mov
jmp
sahf
repz
xchg
fsubrl
das
add
js
scas
fcomps
stos
popa
dec
jmp
cli
addr16
xor
jmp
dec
sub
mov
shrb
fs
xor
and
sbb
sar
lcall
add
pusha
dec
cmpxchg
cld
test
jecxz
or
cwtl
pop
jmp
jmp
pop
sub
push
adc
in
test
out
mov
inc
cmc
imull
inc
adcl
inc
addr16
sub
cltd
ja
mov
pop
push
shr
pusha
xchg
pop
push
jne
jmp
sub
mov
shlb
out
std
adc
stos
leave
push
mov
mov
aam
dec
pushf
loopne
xorb
js
or
inc
jmp
lea
cmp
push
mov
cli
and
lock
jmp
lret
bound
gs
in
jmp
lods
xchg
in
add
jmp
mov
jge
jmp
and
pop
dec
cmp
jmp
push
xchg
add
outsl
sbb
inc
pop
jno
pop
inc
mov
dec
inc
or
push
dec
lds
imul
sti
jae
je
cmp
rclb
adc
dec
outsl
mov
lcall
xchg
int
dec
pop
sub
pop
sbb
inc
adc
mov
push
sub
jecxz
adc
cmp
xor
mov
out
jp
sbb
test
clc
ljmp
add
movsb
or
fs
dec
iret
pop
ljmp
fwait
sbb
cli
arpl
hlt
xchg
test
dec
jmp
je
inc
shll
mov
pop
jge
jmp
es
movsl
ss
pop
sub
mov
movsl
mov
jl
ret
jmp
xor
and
pop
sub
jmp
lods
loop
inc
xchg
sahf
xor
outsb
mov
sbb
data16
jmp
mov
or
inc
insl
incl
dec
std
sub
enter
lcall
in
jb
cmp
loope
jns
vpor
imul
daa
jp
jge
inc
sbb
mov
pop
or
mov
xchg
jne
push
inc
jmp
sbb
test
push
pop
fwait
jmp
pusha
xor
xchg
dec
in
out
mov
jno
adc
adc
mov
scas
or
push
and
jmp
je
flds
ret
sbb
dec
and
adc
adc
push
jl
aam
xor
mov
lods
sub
jo
mov
jmp
xchg
lods
outsb
das
int3
inc
ret
adc
out
sti
push
out
jmp
jg
pop
cmp
push
cmc
jns
inc
call
lret
dec
jecxz
jmp
stos
fidivrs
rorb
jmp
mov
arpl
shl
jmp
dec
into
clc
mov
leavew
push
xchg
inc
mov
divps
clc
pop
aas
mov
mov
scas
cmp
adc
xchg
push
lahf
jae
pusha
pop
pop
lods
hlt
cld
out
jmp
pop
mov
sub
adc
into
mov
mov
jmp
sbb
jmp
es
mov
jmp
sbb
dec
cld
into
and
leave
xor
insl
sbb
stc
sub
or
fsubr
sahf
test
inc
jmp
fdivrs
insl
push
sbb
out
sub
out
pop
sbb
push
add
push
jmp
dec
clc
push
aad
mov
pop
sub
cmc
ficompl
jmp
pop
inc
mov
and
jns
rcll
sub
into
jmp
shr
lahf
lods
test
test
inc
and
mov
call
into
sti
jmp
adc
add
add
pop
sbb
xchg
ret
sub
jp
repnz
xchg
sub
and
adc
cld
or
inc
xchg
or
xchg
lahf
lock
imul
inc
movsl
cmp
repz
scas
leave
call
adc
pusha
and
test
es
jmp
mov
add
sub
dec
cmp
adc
lods
add
or
push
xchg
jmp
test
adc
xchg
mov
outsb
dec
xor
pop
jmp
pop
inc
loop
dec
inc
mov
fimull
adc
jb
into
mov
test
inc
jo
cmpsb
inc
sub
jmp
mov
nop
adc
xchg
aaa
and
cmp
sarb
adc
dec
sbb
sahf
dec
jmp
jecxz
idivl
mov
mov
imul
jmp
fwait
lea
dec
sub
add
leave
roll
cwtl
aad
jle
pop
daa
gs
pushf
hlt
negl
push
lods
popa
enter
out
adc
xor
sti
in
movsl
daa
jge
bound
vmovntpd
fst
push
mov
mov
sbb
jmp
stos
fldt
outsb
sbb
js
jmp
jmp
out
fcoms
jmp
hlt
lcall
daa
ret
push
or
mov
out
sbb
fcomps
jo
imul
lcall
popf
mov
in
sti
sub
push
mov
fs
nop
es
sub
push
jmp
or
pushf
jecxz
rorl
add
and
mov
xor
shrb
cmpsl
ljmp
jnp
inc
dec
cmp
aas
jmp
sub
je
inc
ja
scas
out
cs
sti
bound
mov
and
mov
test
pop
inc
push
mov
ret
cmc
in
out
outsl
pop
daa
pop
or
or
mov
jno
pop
repnz
inc
mov
add
mov
lods
test
data16
int3
cmc
test
loopne
dec
sub
nop
jmp
int
sarb
lea
fisubs
bnd
xor
push
cmp
pop
jmp
mov
neg
stc
stos
inc
jmp
aam
aas
xor
push
sub
jge
and
out
imul
pop
push
je
adc
arpl
xor
cli
or
popa
out
cmpsb
push
lea
cmp
lret
jmp
insb
mov
popa
inc
movsb
push
mov
std
mov
cmp
or
mov
jmp
mov
dec
and
mov
inc
loop
out
scas
pop
xor
xor
add
jb
loopne
jle
jg
imull
shr
or
push
pop
fnsave
jmp
insb
mov
sub
roll
xchg
sub
xchg
push
lea
pusha
adcb
int
shl
sub
in
ss
fidivl
mov
jmp
scas
dec
fnstcw
sbb
cmp
shl
nop
jmp
mov
or
ss
adc
int3
push
mov
jb
sbb
lods
push
adc
jno
sti
rcrb
fstpt
popf
scas
push
in
je
sbb
fwait
ss
add
xor
adc
jo
imulb
icebp
ja
jmp
jge
dec
ds
mov
aam
int3
lods
sbbl
mov
xchg
daa
add
imul
push
repnz
sbb
lret
repnz
stos
fisubrs
xor
lea
getsec
jmp
push
or
push
cmp
or
mov
iret
cld
mov
call
inc
pop
mov
cmpsb
lret
xchg
sub
dec
push
in
mov
and
xchg
xchg
xor
scas
inc
jmp
cli
cmc
fcoms
push
mov
cmp
mov
loope
sub
dec
enter
mov
aam
pop
mov
sbb
inc
jmp
and
jne
insl
adc
xlat
test
or
pop
fsubr
popa
ficompl
aad
lret
insb
jmp
pop
mov
add
or
sbb
inc
mov
ljmp
or
mov
out
test
or
sti
push
in
or
es
loope
inc
jmp
mov
and
xor
add
or
pop
sub
xchg
out
sbb
sub
sub
imull
jecxz
icebp
ret
mov
imulb
jmp
stos
int3
mov
movsl
or
jmp
xchg
or
jg
popl
js
fs
adc
mov
pop
pop
icebp
add
out
inc
lods
and
sub
push
outsb
jb
jecxz
adc
pop
out
int
xor
cld
jmp
mov
adcb
jmp
xor
xchg
xor
divb
and
sub
xor
sti
push
dec
push
mov
sti
cs
loopne
jge
sbb
mov
cwtl
movl
rolb
jb
daa
aam
add
in
push
jmp
fists
pop
and
xchg
dec
add
mov
arpl
jmp
xchg
mov
imul
sbb
fisubl
sub
pop
mov
clc
pop
outsb
mov
jmp
sub
outsl
jmp
mov
in
mov
movsl
mov
xor
sbb
cmp
test
jmp
rcrb
std
push
adc
push
jne
stos
sub
or
mov
aad
rolb
aam
inc
sub
inc
mov
mov
jmp
lods
fcoms
aas
in
cmp
jae
ljmp
cli
push
sub
cmc
push
js
sbb
jmp
xchg
mov
xchg
je
jmp
enter
push
in
jle
fdivp
ss
prefetch
or
jae
jns
insb
jmp
cmc
xorl
rorl
scas
imul
shlb
add
jbe
xorb
out
mov
push
pop
add
sbb
add
shrb
mov
mov
test
lcall
inc
add
shll
inc
outsb
cmpsb
pop
sbb
jle
shrb
fsubp
rcpps
inc
xchg
jbe
stos
jns
push
fadd
add
or
fsubrs
call
jmp
cld
xchg
cli
stos
sbb
outsl
insb
jo
jmp
inc
lahf
and
mov
ret
outsl
pushf
jmp
rcrb
cmp
xor
lods
mov
xor
mov
jmp
filds
jbe
inc
dec
fs
inc
add
nop
xor
mov
lret
cmpsb
lea
dec
xlat
xor
and
xchg
jmp
xchg
ret
jp
or
jmp
mov
mov
cmc
push
push
inc
pop
and
mov
outsb
cmp
lods
mov
xchg
push
jp
inc
adc
mov
mov
mov
sub
mov
mov
fs
push
cmp
mov
mov
lahf
loopne
fisttpl
and
fadd
lcall
mov
gs
scas
adc
and
enter
adc
jns
cmc
inc
jne
cwtl
dec
adc
mov
push
imul
xchg
fadds
push
xlat
pop
stos
or
jmp
sahf
dec
out
fsubl
pop
cwtl
jmp
rorb
rcrl
popa
jbe
div
dec
jmp
pop
das
cltd
dec
fmulp
jmp
jne
fisttps
incl
jmp
adc
mov
popa
aad
jmp
mov
dec
push
add
movsb
int3
mov
and
lods
inc
lock
out
daa
pop
icebp
sbb
dec
lcall
mov
dec
or
push
jmp
loopne
call
jmp
test
test
sbb
pop
push
adc
lods
out
pop
mov
cmpsb
lods
outsl
jl
cmp
ret
rcrl
xchg
dec
inc
repz
lods
lret
popf
repz
aam
adc
dec
daa
sahf
movsb
insb
dec
and
in
xchg
test
mov
int
pop
or
scas
pop
fs
leave
jmp
test
pop
mov
clc
mov
rcll
pop
jl
sahf
movsl
imulb
push
sbb
addr16
shrb
xchg
and
cmpsb
push
mov
jmp
push
dec
orl
xchg
sub
inc
add
aas
sub
iret
mov
and
aad
and
rclb
or
xor
pop
insb
adc
stos
pop
pop
push
daa
dec
fsubl
mov
dec
inc
jle
fs
sub
sbb
add
push
scas
rcrb
jmp
cmp
ja
sub
jecxz
push
or
lret
enter
and
mov
out
addr16
lods
and
jp
xor
pop
adc
xchg
mov
mov
sahf
outsl
jmp
ffree
mov
adc
or
jp
jne
fs
jo
pop
jp
xchg
jnp
push
cwtl
aam
jmp
add
mov
lods
testl
jno
jmp
mov
cmp
in
push
and
dec
mov
dec
jmp
push
in
add
add
aad
fcmovnb
in
inc
sub
jmp
enter
dec
jge
jmp
xchg
jb
xchg
sub
outsl
iret
cmc
ljmp
jmp
adc
repnz
jmp
and
dec
popa
jmp
jmp
cwtl
pop
loopne
sbb
int3
jmp
xchg
cltd
sub
enter
popf
scas
adc
push
mov
xchg
jmp
jbe
rcrl
mov
or
push
popa
sub
xchg
push
insl
fldt
sbb
pop
fsubr
dec
lret
in
mov
in
pop
test
fwait
cmp
outsb
mov
jp
dec
push
data16
and
xor
gs
xchg
loope
in
mov
idivl
int
jae
mov
add
xchg
outsb
mov
sbb
fs
jmp
inc
cltd
mov
jmp
add
xchg
int3
hlt
scas
jl
or
add
jmp
jae
push
mov
jb
imul
or
imul
xor
push
lods
cmpl
hlt
jnp
lret
daa
push
leave
scas
and
stos
clc
sti
or
jmp
movsl
sub
jmp
push
fcoms
mov
fisubrs
add
jmp
mov
jne
mov
call
mov
add
inc
jge
lcall
test
scas
sub
das
mov
xor
jmp
repnz
fmul
or
pop
or
cltd
shr
icebp
pop
scas
stc
add
jp
sub
sub
repz
mov
push
xor
jmp
scas
test
adc
ds
adcb
sbb
addl
pop
fwait
xor
mov
inc
push
push
call
jbe
xor
or
jmp
mov
push
hlt
jmp
movsb
and
pop
mov
fsubrl
xor
addr16
cmp
lcall
jmp
sbb
xchg
out
mov
lret
dec
sub
fistpll
jmp
or
test
jmp
imul
jmp
mov
leave
add
and
mov
jg
out
loope
aam
and
jmp
fnstenv
loopne
fs
lods
in
mov
imul
jmp
mov
addb
lea
pop
or
lods
jmp
cmpsl
sbb
stc
jg
or
jmp
lret
clc
mov
mov
adc
stc
call
cwtl
test
ja
jmp
fs
outsb
sbb
push
jp
mov
rcr
inc
out
xor
imul
cwtl
scas
mov
cwtl
cmp
call
jmp
sub
ljmp
push
mov
cmp
pop
scas
arpl
jns
push
sahf
sub
sbb
stos
out
dec
xchg
fxch
pop
pop
jmp
xor
imul
sub
lds
call
jmp
mov
int
mov
jl
mov
mov
aam
inc
out
and
sub
xchg
imull
xchg
lods
mov
cmp
aas
xor
pop
icebp
inc
pushf
mov
dec
je
enter
mov
xor
jmp
add
cmp
mov
gs
jmp
jecxz
xchg
or
jmp
bound
popf
scas
dec
mov
fisubl
sbb
sbb
imul
clc
jmp
arpl
or
repnz
stos
pop
repz
sub
sub
add
cli
into
dec
sti
and
dec
dec
insb
and
jb
aaa
imul
outsl
fwait
sub
or
mov
adc
stos
add
lods
push
es
scas
andps
outsb
xor
scas
mov
sub
sbb
add
jmp
shrl
loope
inc
imul
icebp
push
cmp
cltd
imul
sub
push
xorb
xchg
mov
jmp
jecxz
sbb
leave
sub
inc
pop
imul
jmp
jbe
xor
ljmp
lods
rorb
adc
mov
subb
push
jo
mov
jmp
aad
les
popf
add
xor
mov
mov
cwtl
and
sti
pop
or
mov
ds
das
xchg
and
sub
sub
mov
jmp
pop
xlat
cld
leave
fs
arpl
or
mov
pop
xor
pop
ret
sbb
jmp
out
push
adc
add
or
inc
dec
into
jmp
fcomps
push
icebp
repz
cmp
flds
pop
mov
scas
push
mov
ljmp
sub
jae
jns
movsl
call
cwtl
cli
mov
mov
pop
xchg
cmc
jmp
cmp
shrb
jae
stc
inc
add
or
xor
pop
xor
xchg
inc
adc
jle
mov
imul
call
packsswb
push
mov
sti
or
jb
ret
cmpsl
sbb
loope
inc
dec
adc
mov
nop
jmp
jl
cmp
jmp
test
mov
mov
adc
adc
jge
dec
call
pop
adc
sub
pushf
orl
sbb
jecxz
sbb
jmp
cmp
dec
in
xchg
jmp
out
fisttps
lock
xchg
mov
mov
pop
mov
icebp
jb
cmpsb
push
repz
jmp
sub
push
loop
xlat
xor
in
loope
mov
mov
scas
fdivrl
add
cmp
cmpsb
cld
sbb
mov
sbb
pop
ficoml
stos
mov
xchg
jns
gs
aam
lods
xchg
orb
mov
xor
repz
stos
outsb
sbb
adc
shrb
mov
notl
sbb
jle
cmpsb
cmpl
mov
xchg
mov
dec
sbb
push
fmulp
out
and
sub
inc
jmp
ljmp
jmp
rclb
fsubs
xchg
cmpsl
icebp
stc
das
rcrl
ss
jb
cmp
add
jmp
and
mov
ret
and
push
mov
lcall
sub
cltd
imul
xchg
dec
arpl
push
mov
shr
mov
stc
sbb
add
add
add
jmp
icebp
sub
je
leave
jmp
dec
xchg
aam
movsl
sub
roll
ljmp
fnstsw
jg
inc
test
ret
jl
sub
shl
jmp
das
addr16
dec
cmp
adc
mov
push
arpl
mov
movsl
fisubrs
sbb
sub
ljmp
xlat
popa
inc
in
sbb
aam
js
gs
jmp
test
xor
add
mov
push
push
lea
rol
pinsrw
add
into
lret
adc
data16
jbe
pop
aas
dec
sub
jl
ss
sbb
cmpsb
pusha
lods
mov
popa
mov
fisttpll
push
pop
adc
jmp
lods
pop
movsl
loopne
or
cmp
aaa
sarb
jbe
enter
sbb
add
les
mov
mov
jno
and
in
and
inc
dec
nop
push
sub
cwtl
adc
inc
and
dec
lods
in
push
adc
sti
sbb
push
test
add
cmp
cmp
movsl
inc
lods
mov
fdivrs
xchg
jmp
mov
push
mov
cmp
mov
cmp
push
push
stos
test
out
in
idivb
sbb
scas
shl
inc
mov
push
jmp
jb
cmp
add
add
in
cltd
cwtl
mov
push
mov
pop
movsl
int3
fisttps
imul
dec
inc
or
lods
adc
or
mov
lret
repz
push
out
cli
lods
and
leave
sub
stos
pop
popf
jge
mov
dec
jmp
addl
jmp
fwait
ss
imulb
pshufw
lods
mov
inc
in
mov
jno
sbb
scas
addr16
jmp
lods
dec
xchg
mov
data16
lea
mov
std
hlt
add
add
addr16
xchg
shr
mov
add
sub
fbld
sub
jmp
xor
jmp
jo
in
inc
adc
add
es
mov
icebp
cmpsb
imul
sbb
notl
or
jne
test
jb
or
or
adc
dec
jnp
add
lea
movsl
in
sbb
scas
cmpsb
icebp
int3
fdivrs
or
pusha
sub
outsb
cmpsb
test
aaa
or
imul
pop
jmp
or
sub
sub
cmp
and
and
outsb
imul
fiaddl
les
mov
jle
fldl
daa
test
jmp
cmc
dec
enter
hlt
lods
mov
lret
dec
push
test
stos
nop
cs
jmp
mov
and
dec
dec
sub
add
mov
jbe
fstpt
popf
jb
fldt
inc
sti
jmp
out
pop
and
inc
jmp
cmp
pop
clc
pop
mov
mov
mov
jecxz
dec
jae
sahf
xor
ss
int3
mov
cs
sub
push
xchg
jb
sti
je
lcall
pop
push
xlat
popf
incb
divl
ds
mov
jp
sub
pop
adc
mov
push
jns
pop
push
cmc
fnstenv
and
stos
data16
out
decl
adc
pop
test
ret
adc
popa
mov
pop
cmp
lret
dec
adcl
sub
jmp
mov
pop
cwtl
sub
out
add
or
mov
sub
and
or
sbb
pop
outsl
pop
cmp
adcl
clc
push
out
mov
shrl
jmp
fcmove
adc
jle
int
inc
rclb
add
mov
add
mov
pop
ja
lods
lcall
inc
mov
jmp
test
push
stc
push
icebp
jmp
xchg
cwtl
pop
std
aas
es
mov
mov
xchg
add
mov
cmp
mov
jle
cmp
lahf
jmp
xlat
leave
xchg
out
push
jmp
jge
das
mov
pop
push
jmp
push
xor
jmp
sahf
adc
xorb
sbb
dec
sbb
jae
push
icebp
out
repnz
cld
jmp
aas
lock
jmp
pop
sahf
dec
jle
push
insb
jmp
push
js
jl
ficoml
jmp
mov
mov
enter
cwtl
jnp
sbb
inc
sub
mov
incl
inc
das
and
test
aaa
and
xlat
jmp
mov
xchg
lock
sbb
mov
fdiv
xor
lods
pusha
pushf
sbb
push
pop
lret
sub
fcoms
jge
dec
xor
jns
enter
and
lock
dec
xchg
ja
lods
xor
mov
das
jle
sub
lret
pop
loop
fiaddl
fs
movsb
pop
jmp
inc
icebp
cwtl
jae
sub
jmp
sahf
mov
adc
jns
mov
retw
jmp
leave
sub
mov
mov
sbb
jbe
sub
pop
daa
jmp
mov
pusha
arpl
add
fucomip
lock
test
mov
jmp
adc
jmp
rolb
xchg
cli
leave
cmpsl
xchg
and
xchg
sti
push
xchg
in
inc
cmp
loopne
fsubrp
aad
mov
test
jno
mov
push
jmp
mov
aaa
jnp
sub
or
sti
xchg
pop
jmp
mov
cli
je
mov
imul
aam
cmpb
js
lret
fwait
jmp
and
and
mov
test
jmp
popf
xchg
ret
mov
lcall
ret
xchg
sbb
xchg
stos
int3
mov
scas
jmp
pop
popf
mov
hlt
pop
dec
mov
and
int3
sub
and
test
xchg
adc
inc
decl
jmp
sub
loop
inc
jmp
add
xchg
push
jmp
jmp
aas
or
jp
inc
cmp
xor
subb
fisubl
cmp
jmp
stos
push
add
jmp
loope
sub
sahf
add
mov
and
adc
mov
outsb
adc
pop
ret
jmp
addl
lea
mov
add
jmp
cmpl
out
lods
shr
loopne
pop
cmp
je
dec
fimuls
lret
es
sub
jp
cmpsl
nop
in
jmp
pop
stos
push
les
mov
jmp
aaa
ret
stc
test
fwait
rcrl
lods
jns
pop
iret
pushf
cld
sbb
jmp
inc
push
pop
fstl
sti
sub
out
xchg
popa
adc
loopne
imul
jbe
decl
xor
aad
jmp
jg
daa
shrl
push
testb
jmp
mov
inc
cs
jmp
lahf
hlt
fdivrs
push
in
push
mov
jge
or
and
push
jmp
mov
leave
and
inc
pop
jmp
xchg
clc
mov
sub
lods
jnp
xchg
mov
pop
movsb
sbb
leave
cli
je
fstpt
or
sbb
stos
sub
cs
pop
pop
sbb
cmpsl
enter
pop
lcall
add
mov
fistps
jmp
or
push
cmp
mov
xchg
lcall
nop
pusha
jmp
leave
cmpsb
mov
inc
dec
add
push
adc
inc
jmp
repz
and
lock
mov
shr
andl
jno
xor
and
das
addr16
sub
xchg
and
sub
leave
call
ret
mov
aaa
lret
push
sbb
in
add
pushf
or
or
push
repz
mov
sbb
enter
jno
pop
dec
or
sbb
mov
adc
inc
xlat
stos
jl
movsl
xchg
repnz
mov
mov
add
lret
sbb
popa
mov
shr
pop
test
and
sbbl
jg
out
jmp
cmp
shr
add
jmp
fcompl
xchg
jmp
lea
cmp
add
inc
sub
idivb
jmp
mov
pop
test
mov
jmp
shr
cmp
sti
imul
cwtl
xchg
scas
jae
sti
fstpl
mov
pop
or
movsb
dec
xchg
bound
mov
stos
loopne
or
jns
std
and
gs
xlat
lods
jne
cmp
je
test
add
sub
fwait
push
ret
gs
jl
cmp
xchg
mov
fs
and
movsl
jmp
cwtl
ja
xchg
cmp
scas
in
lods
sub
int
iret
or
dec
pop
pop
and
into
dec
scas
fmull
xchg
testb
jmp
inc
push
mov
sub
ret
mov
repz
inc
scas
insb
imul
push
leave
jmp
adc
add
stos
lods
and
jmp
shll
cmpsl
jmp
fs
adc
in
cmpb
mov
xchg
jae
jmp
inc
push
sbbl
pusha
xchg
adc
pop
mov
lds
and
pop
sub
jmp
cmp
fildll
xchg
test
scas
pop
daa
je
dec
add
fnstsw
or
sub
int3
push
mov
mov
push
scas
les
sbb
xchg
jmp
add
jmp
pop
adc
sub
fldpi
imul
lds
mov
jl
pop
fs
sbb
jmp
sar
out
mov
and
aas
or
stos
push
jmp
popf
outsb
jge
jmp
mov
pop
fstpl
pop
int
imul
ficomps
jmp
out
insb
mov
lret
mov
xor
test
lea
pop
das
sub
adc
leave
in
mov
xorl
mov
outsb
or
sahf
lods
stos
jmp
mov
fcmovne
fdivl
cld
mov
sahf
fiadds
jmp
int3
mov
sub
jl
xor
mov
and
sub
and
mov
rep
dec
incb
sub
or
hlt
mov
jb
stos
adc
mov
jnp
ljmp
xchg
add
inc
call
dec
jmp
add
jmp
sub
inc
jmp
popf
mov
jae
out
jo
mov
mov
bnd
les
inc
pop
repz
or
add
pop
cmp
mov
jmp
jecxz
xchg
jb
gs
pop
scas
mov
enter
adc
and
shrl
and
cmpsb
mov
xchg
xor
out
pop
and
fdivrl
jecxz
aaa
jmp
scas
incb
dec
sti
cmp
mov
cltd
ficoml
out
jmp
xchg
and
inc
jmp
xor
call
movsl
xor
fstpl
cmpsb
mov
push
pop
sub
jmp
xchg
in
test
arpl
mov
push
call
inc
insb
jno
mov
sub
inc
cmp
orb
add
jne
jae
cwtl
jl
stos
inc
fisubrl
fucomi
lods
out
sbb
in
ret
xor
jb
xor
jno
jp
sbb
sub
pop
push
adc
std
sub
sbb
lahf
add
cmp
jmp
and
fwait
jns
repnz
test
jp
fdivs
enter
jmp
jnp
insb
cmpsl
jge
fs
lcall
outsb
outsl
push
or
in
mov
push
rorl
mov
push
mov
shlb
sti
and
mov
ljmp
repz
mov
xor
sub
xor
and
mov
sub
movsb
inc
inc
leave
mov
or
jo
lret
rorb
std
xchg
push
mov
adc
pushf
xorb
adc
pusha
mov
xor
inc
shrl
xor
lahf
adc
jno
insl
mov
or
jmp
mov
mov
jmp
push
or
imul
dec
sub
xchg
sub
sbbb
sahf
scas
sub
fsts
mov
jl
lret
mov
popf
jmp
push
xchg
test
jno
sub
out
scas
pop
dec
daa
add
mov
aas
andb
pop
jmp
mov
cmp
jp
sbb
sub
movsl
sbb
jmp
pop
jl
in
ret
xchg
inc
dec
push
lret
repnz
in
jns
std
stc
packssdw
mov
xchg
sti
mov
sti
xchg
xor
lahf
sub
popf
jmp
fidivrl
or
xchg
jmp
push
daa
lds
filds
mov
jmp
and
pushf
xchg
xor
dec
mov
mov
out
mov
dec
or
or
aaa
ljmp
mov
cs
in
outsb
ffree
lret
repnz
insb
or
mov
adc
xor
jmp
inc
movsl
inc
add
data16
mulb
push
or
enter
sahf
xchg
sbb
and
adc
fistps
dec
and
mov
or
push
mov
arpl
push
mov
mov
imul
test
popa
dec
inc
dec
dec
xor
aas
cli
pop
sahf
orl
sti
xchg
outsl
jmp
sbb
cmp
ljmp
sbb
sbb
imul
add
dec
sub
mov
jae
xchg
outsl
and
sbb
or
inc
lock
push
push
mov
imul
dec
push
sub
popa
roll
add
mov
add
jae
enter
test
xchg
sbb
jno
jmp
mov
inc
mov
jg
sub
cmp
pop
inc
add
cmp
or
lret
jmp
sub
out
out
add
xlat
addr16
hlt
dec
or
cmp
inc
movsl
in
push
repz
pop
dec
scas
jmp
inc
and
cmp
sbb
into
jmp
jns,pn
sub
pop
mov
jmp
shrl
jbe
fisttps
inc
sub
mov
push
addb
jmp
lods
mov
mov
ret
nop
stc
lods
cmpl
jnp
jmp
add
mov
adcb
imulb
loopne
xor
jp
and
sbb
jge
shl
mov
jmp
mov
out
pop
jmp
xchg
in
fistpl
xlat
test
pusha
fidivrs
jmp
pop
das
jnp
scas
or
jge
repz
pushf
sti
cltd
pop
lods
add
sahf
adc
jo
adc
jmp
jb
je
xchg
push
jbe
test
daa
flds
in
fwait
sub
dec
adc
repnz
inc
sti
add
cmp
daa
push
jmp
popf
insb
test
aaa
jmp
add
notb
cmp
sbb
pop
sub
dec
mov
xor
xor
push
call
mov
xor
div
dec
stos
jmp
and
ss
fs
fbstp
jecxz
cmp
xor
loope
movsb
jmp
insb
jnp
mov
and
lods
add
addr16
and
and
leave
sti
iret
push
rolb
and
sub
adc
in
xchg
lds
and
imul
or
into
in
add
mov
fwait
mov
or
push
add
repz
test
jmp
enter
pushf
jecxz
jmp
repnz
lods
out
fsubrs
or
push
add
mov
inc
les
lods
es
lret
fcomps
popa
mov
out
jge
stos
ja
fs
cmc
dec
jmp
aam
inc
pop
push
aad
lods
cmpsb
rcr
add
inc
and
mov
sti
das
les
pop
jmp
test
iret
jmp
rolb
inc
cmpsb
sbb
lahf
in
xor
push
jmp
xor
fmul
add
lods
adc
jg
repnz
xchg
hlt
add
adc
pusha
sbb
sti
push
pop
mov
mov
xor
xor
je
inc
in
ret
lds
and
mov
xchg
and
fs
pop
outsl
pop
clc
adc
sub
ss
and
mov
repz
push
sbb
enter
fcom
dec
pop
cmp
pop
mov
cmp
xor
psubusb
lahf
jmp
sbb
xchg
sahf
jmp
add
ljmp
mov
iret
jbe
out
mov
lods
push
xchg
bound
pop
es
ds
xor
jl
jmp
mov
not
jmp
mov
scas
out
mov
out
add
daa
inc
sbb
enter
xchg
adc
jmp
jecxz
test
outsl
push
and
xor
mov
jmp
mov
fwait
cmp
sbb
lds
sub
sbb
es
mov
in
adc
repnz
js
std
inc
push
sub
mov
jns
aad
loop
mov
out
mov
cli
jmp
mov
xchg
mov
push
adc
scas
dec
mov
aaa
inc
popf
xchg
push
jmp
xchg
icebp
cmp
imul
call
shrb
sahf
jmp
inc
dec
inc
and
lea
push
jno
nop
jecxz
out
cmp
inc
adc
call
mov
jmp
xchg
mov
jmp
aas
add
inc
lods
ljmp
gs
jno
test
dec
xor
mov
mov
das
out
leave
mov
hlt
jb
jo
jmp
pop
push
and
adc
add
cmpsl
lret
shrb
sbb
xchg
mov
jmp
js
addr16
or
imul
arpl
add
mov
int
inc
xchg
mov
ljmp
shrb
xchg
loop
mov
ss
repz
sub
jo
sbb
cmp
jmp
inc
repnz
jmp
jns
xor
jmp
jnp
lds
pop
sub
jmp
pop
popf
and
sub
fmul
shll
add
and
in
shrb
fwait
jge
sbb
fabs
add
outsb
dec
pop
mov
fdivrs
sub
rcrb
popf
pop
jmp
mov
fimull
inc
push
cmp
jmp
divb
arpl
lds
lods
xor
into
xchg
add
xor
arpl
xchg
jmp
icebp
lahf
sub
and
addb
push
loop
sub
nop
dec
xor
and
push
mov
rcrl
jge
xchg
cmp
pop
push
xchg
orb
lds
arpl
mov
mov
mov
inc
loope
int
leave
jmp
adc
iret
std
jg
jmp
testl
adc
mov
mov
dec
and
sbb
in
inc
jmp
jge
test
pop
pop
jp
dec
iret
daa
and
mov
repz
pop
adc
shrl
cmc
and
lcall
inc
sbb
sbb
and
or
jmp
jo
out
adc
jbe
push
pop
lods
lret
and
xchg
outsb
in
pop
and
test
mov
xchg
adc
jmp
repnz
test
daa
lods
sub
mov
aaa
sbb
push
jno
jnp
push
shll
popa
cmpsb
xor
sbb
imul
sub
bound
xchg
call
lret
jmp
sub
xor
mov
push
xchg
jmp
jecxz
mov
jmp
sbb
scas
push
jno
push
int
mov
mov
adc
das
mov
sub
pop
fistpl
mov
dec
lods
jle
shr
mov
jne
or
daa
outsb
adc
enter
lods
add
scas
mov
sub
into
inc
or
ret
dec
loopne
lods
in
mov
add
test
call
fistps
scas
je
adc
add
pop
jmp
mov
std
cltd
push
push
stc
inc
xchg
lods
or
adc
push
fildll
mov
dec
sub
xchg
stos
loop
pop
mov
and
xchg
jmp
ljmp
out
or
jno
or
sbb
cmp
mov
mov
popl
cld
shl
movsb
push
imul
fldcw
inc
cmp
mov
jmp
aad
mov
push
xor
incl
push
inc
outsb
dec
adc
ja
push
and
arpl
pop
sub
jnp
mov
sbb
sbb
and
jmp
outsb
inc
pop
lret
or
cli
jmp
divl
dec
pusha
sub
das
out
cmp
pop
ss
imul
lahf
and
fidivrl
xor
repz
leave
add
jmp
adc
rclb
pop
mov
mov
inc
icebp
fs
orl
in
pop
popf
fistl
jmp
inc
jns
fwait
mov
cmp
adc
adc
nop
ss
aas
mov
cltd
dec
outsb
je
fst
inc
jl
xchg
pushf
push
sub
mov
leave
sub
icebp
lods
int3
mov
das
push
xchg
adc
and
mov
xor
outsl
mov
arpl
mov
fnstsw
aad
pop
test
or
cmp
jo
fsubr
lds
lret
sub
or
outsb
jmp
jne
push
lahf
ret
adc
jmp
inc
inc
and
jmp
mov
jo
jmp
push
ljmp
icebp
mov
movsb
push
gs
xor
rolb
insl
jmp
mov
jg
cmp
jns
jbe
sub
lret
pop
xor
jmp
rcll
scas
in
sub
and
xor
jno
cs
and
es
stc
call
shr
jns
and
cmp
adc
rcrl
lret
mull
inc
or
bnd
ljmp
cmpsl
loop
pop
insb
popa
shlb
movsl
dec
addr16
cmp
sahf
sub
fsubr
jb
push
pop
sar
cmp
scas
mov
and
push
repz
ret
imulb
mov
cmp
jmp
mov
xchg
or
call
lret
cmp
jmp
mov
fs
rep
stc
jmp
push
push
movsl
jp
and
pop
scas
mov
outsb
sbb
push
out
fldl
add
loope
inc
jmp
jecxz
je
adc
fs
cmp
imul
out
mov
mov
jmp
sub
in
add
imul
popa
or
dec
pop
iret
cltd
dec
xor
push
out
pop
jne
jmp
pop
cmp
lcall
dec
ja
ret
mov
mov
sub
dec
add
push
rolb
push
movsb
and
pop
jmp
pop
or
iret
ret
lcall
cmp
pop
data16
mov
xor
jmp
sbbb
jmp
inc
mov
add
stos
inc
iret
popa
push
push
js
jmp
dec
mov
into
outsb
gs
das
rorb
mov
jb
or
ds
fdivrs
xchg
mov
outsl
jnp
mov
fnstcw
icebp
sub
outsb
dec
xchg
nop
mov
jmp
sub
cld
cltd
xor
jmp
sahf
and
jns
xchg
ljmp
jbe
push
xorl
jb
lods
or
cwtl
adc
repz
mov
adc
lea
or
xchg
stos
sahf
push
xor
repz
pop
dec
sbb
mov
pop
pop
adc
xchg
mov
or
mov
icebp
nop
cmpl
mov
int
shrb
pop
ljmp
filds
lds
sub
push
cmp
pop
xor
test
int3
fwait
sbb
mov
jmp
movsb
pop
bound
add
sub
mov
scas
xor
lea
mov
daa
mov
jmp
or
in
lahf
cmpb
sub
mov
jmp
test
mov
sub
adc
cltd
xor
and
jmp
dec
test
mov
add
outsb
mov
sbb
jmp
sub
lahf
pop
dec
stos
inc
outsb
mov
push
repnz
pushf
adc
rorb
or
inc
fsubrp
sbb
jb
xchg
std
in
adc
fcoml
xchg
add
inc
fxam
sub
shll
add
data16
int
dec
test
dec
das
stc
and
mov
pop
push
lahf
mov
cs
and
dec
mov
lahf
push
and
cmpsb
or
loop
clc
pop
jmp
lret
push
faddl
inc
push
mov
outsb
jno
std
enter
lret
jl
xchg
icebp
mov
and
and
mov
adc
popf
mov
test
imul
pop
cwtl
test
push
out
sub
out
inc
pop
addr16
mov
adc
mov
xor
sbb
dec
jmp
jmp
mov
pusha
sbb
loop
scas
xor
sbb
xlat
dec
inc
jmp
int
cmp
cmpsl
cmc
mov
cmpsb
dec
addr16
add
mov
jb
jmp
mov
test
push
addr16
in
and
call
and
jmp
sahf
push
je
test
test
test
cmc
out
xchg
xor
jmp
imul
shrl
mov
lret
and
push
or
mov
jbe
add
jmp
lods
loop
fs
das
pop
mov
dec
inc
or
xchg
jmp
mov
in
or
mov
add
test
fildll
data16
fcoml
and
scas
in
popf
loop
sti
pop
adc
sub
inc
xor
scas
ret
xchg
jmp
fmull
dec
loopne
push
jb
or
jecxz
test
lods
in
sbb
lods
out
pop
scas
push
pop
lods
shr
push
jg
daa
iret
cmp
ret
stos
mov
jmp
push
gs
sub
int3
stos
fwait
or
or
cmp
mov
add
mov
jg
stc
jae
ss
adc
mov
sti
or
repnz
ror
andl
xchg
and
adc
bound
mov
repnz
mov
xchg
mov
jmp
pop
cmp
dec
and
mov
in
cli
je
lea
fdiv
and
aad
add
sub
mov
pop
imul
push
hlt
jno
mov
add
jmp
mov
sti
cwtl
mov
fwait
roll
lahf
jmp
fimuls
sbb
cmp
add
movsl
xor
gs
cli
or
fcmovnu
out
scas
cmp
call
icebp
and
cld
xor
sbb
sbb
int3
lea
push
jb
push
test
dec
pop
mov
jmp
jo
mov
out
or
outsl
and
pop
lods
mov
sbb
jns
or
out
ret
in
mov
mov
add
sti
outsb
cmc
or
push
adc
xchg
sbb
mov
add
add
ja
call
repnz
sbb
leave
jmp
mov
sub
xchg
and
adc
cli
inc
pusha
dec
out
sbb
jecxz
notl
imul
mov
or
ficoms
popf
mov
mov
sahf
repnz
sub
enter
or
xchg
jp
xchg
sub
aas
jmp
icebp
in
ljmp
dec
cli
cmpsb
jbe
cs
xor
jmp
mov
movsl
push
sub
inc
fisttpll
hlt
in
pop
sub
movsl
push
loop
and
outsb
add
rcr
mov
jbe
mov
outsb
pop
adc
mov
stc
rol
jae
fsubl
cmp
and
pop
dec
lds
loop
popf
pop
pusha
arpl
add
lods
xchg
addr16
and
cmp
lods
xor
mov
jmp
fsub
test
iret
jl
sub
aad
scas
fucomip
or
xchg
xor
or
adc
push
scas
das
mov
add
dec
inc
sub
or
mov
or
and
sub
mov
fs
arpl
push
jno
xchg
std
shll
mov
jbe
xchg
jmp
pusha
cwtl
les
add
leave
adc
fstps
ja
cmp
xor
jns
adc
and
inc
pop
jmp
and
popa
cmp
xchg
sub
push
mov
sbb
mov
stos
lods
sbb
cwtl
cltd
sahf
adc
xchg
int3
pop
jmp
inc
ffreep
scas
fmuls
sub
lret
pop
fs
jmp
inc
push
es
adc
jmp
aad
mov
scas
adc
mov
jmp
xchg
mov
push
add
fldl
mov
inc
xchg
sti
xor
jmp
sub
int
out
les
jmp
aas
push
out
loop
scas
outsl
mov
mov
push
jmp
cli
stos
dec
sbb
jmp
popf
in
xlat
inc
ret
loop
jmp
push
pusha
dec
mov
repnz
in
inc
leave
pop
jmp
movsb
add
sub
or
scas
out
aaa
dec
inc
sti
cltd
cwtl
and
pop
pop
push
adc
cmpsl
lahf
inc
jmp
xor
push
push
sub
jmp
mov
mov
imul
imul
or
xchg
decb
jmp
xchg
push
popf
mov
or
jne
enter
outsb
dec
jl
cmp
jns
mov
std
xor
xchg
getsec
xor
and
in
xchg
or
adc
je
ja
enter
loop
jmp
xchg
cmc
shll
jmp
out
call
jmp
pop
cli
in
lcall
dec
ret
ss
popf
pop
adc
cmp
and
stos
shr
lock
inc
xchg
lea
mov
cmp
pop
clc
mov
mov
in
pop
enter
lods
xchg
popa
xlat
icebp
test
or
add
xchg
js
in
adc
dec
sti
sbb
cmp
outsb
scas
lret
xor
lods
mov
ljmp
aaa
lods
stos
xchg
stos
imul
sbb
sysret
cli
out
jmp
or
popf
mov
pop
jmp
xchg
and
jmp
sar
push
fwait
imul
out
idiv
sbb
jmp
aam
sarb
sub
pop
and
pop
inc
insl
and
jle
or
or
outsl
in
jg
ds
fmulp
cmp
cmp
imul
mov
mov
mov
add
shrb
jmp
cmp
stc
adc
les
ret
loopne
dec
leave
orl
pop
mov
outsb
nop
push
mov
xor
sbb
or
ficompl
jbe
sub
jmp
adc
lahf
push
cmp
push
pushf
push
jb
fs
cmpsb
mov
jmp
lcall
or
jmp
in
insb
xor
jmp
inc
out
in
out
lock
jmp
aam
adc
movsb
imul
cmpsb
or
or
jmp
dec
subl
pop
lret
scas
nop
and
sbbb
xchg
mov
into
dec
inc
fdivs
mov
jmp
and
inc
jmp
mov
jp
jmp
sbb
adc
jmp
jnp
sbb
das
sub
mov
mov
or
imul
cmp
jmp
push
xchg
mov
xchg
sbb
inc
cmpsl
call
cmp
mov
daa
fistps
fldenv
rcrb
inc
lret
push
mov
add
leave
lods
in
insb
ljmp
push
xor
push
push
pop
or
pop
jae
in
sbb
xchg
and
mov
clc
pushfw
push
in
cltd
je
ucomiss
mov
rcr
or
cmpsb
gs
or
add
jmp
inc
lds
jecxz
jb
lods
pop
jp
cmp
lock
inc
dec
in
push
out
dec
pop
jmp
sbb
xchg
or
std
add
mov
and
pop
or
pop
lods
xor
test
mov
jmp
xchg
pop
icebp
inc
ja
popa
sub
shrl
xchg
sub
test
sbb
in
sub
jnp
cmp
pop
jae
std
popl
dec
jmp
ja
mov
mov
inc
or
jmp
orl
incl
jns
jp
mov
movsb
in
adc
push
fwait
jmp
ret
mov
jb
pop
sbb
lds
push
adc
pusha
mov
cmp
mov
adc
xor
mov
jae
cmpsb
adc
cmp
stos
inc
lret
inc
push
sub
lods
sbb
idivb
dec
ljmp
push
mov
push
cmp
xor
xchg
xlat
and
aas
pushf
xchg
ljmp
and
push
in
xor
lods
repnz
sbb
mov
hlt
fcoml
mov
cmp
popa
js
loop
outsb
inc
ret
cmp
dec
xchg
pop
test
ds
fldl
fmull
test
int3
push
jb
loop
lods
jmp
lret
loope
fdivs
test
jl
inc
ss
bound
test
dec
pop
pop
gs
dec
xor
stos
mov
in
push
addl
cmc
gs
lret
pop
dec
jmp
shrl
mov
cs
xchg
int
and
ds
sbb
or
or
xor
es
xchg
adc
fdivrp
outsl
cs
jmp
push
sbb
hlt
cmp
and
mov
scas
push
sub
pop
push
cs
and
stos
bound
popa
dec
pop
push
cmp
jbe
and
xor
rorb
js
addr16
iret
cmc
inc
or
add
test
into
jmp
sub
je
lods
dec
leave
mov
inc
cld
ss
aam
and
adc
mov
fwait
sub
xor
add
cmpsl
jmp
mov
or
cltd
jmp
lret
jge
pop
push
mov
popa
out
int
mov
repz
pop
mov
inc
jns
fcoml
lret
clc
xchg
mov
add
sbb
and
and
test
lret
arpl
mov
and
addb
xrelease
cs
jmp
and
js
out
push
xor
adc
fs
sahf
adc
fucomi
pop
lods
jl
pop
mov
pusha
xor
and
jmp
int3
testb
movsl
add
jecxz
or
dec
roll
lret
ffree
lods
leave
insb
jmp
unpcklps
loope
mov
lret
sarl
stos
push
push
push
and
leave
les
jmp
sub
test
push
adc
mov
lods
fnsave
jle
cmp
leave
punpckhbw
push
lcall
jmp
adc
outsb
hlt
roll
repnz
or
add
stos
int
jmp
in
push
add
and
sahf
leave
addr16
cmp
mov
add
jle
jecxz
add
fs
subl
sbb
sub
mov
pusha
push
jmp
or
les
sarl
jp
push
in
xchg
fs
push
ljmp
mov
xchg
in
xor
mov
jns
mov
int3
adc
push
sub
push
lret
jmp
push
loope
fwait
jb
xlat
jmp
sbb
or
mov
lahf
mov
jmp
jp
daa
bswap
adc
icebp
clc
inc
or
or
fbstp
lock
jmp
push
push
imul
sub
pushf
mov
lods
stos
or
push
or
adc
clc
pop
test
into
xchg
xor
mov
or
and
jmp
loopne
mov
sbb
sub
dec
ficoms
je
ret
pop
cmc
outsl
inc
jmp
push
or
sub
out
fisttpll
dec
sti
ljmp
mov
and
xor
pop
push
vcmpps
jmp
inc
out
sub
jecxz
jmp
lcall
outsl
pushl
jae
mov
arpl
repz
xchg
jmp
sahf
iret
xchg
les
fcoml
dec
lods
inc
dec
jbe
cmp
fistl
call
addr16
pushf
push
repnz
push
int
jmp
fwait
pop
xchg
inc
out
je
cs
mov
mov
adc
mov
sbb
mov
inc
fbld
cmp
das
cmpsb
push
mov
adc
sti
push
mov
je
cmp
pop
pushf
faddl
or
scas
jl
mov
dec
icebp
sbb
xchg
jge
movsb
jmp
push
mov
cmpl
popa
int
fwait
pop
es
ret
add
sub
cmp
sub
out
mov
imul
jge
mov
or
insl
sahf
lods
bound
lods
jno
pop
fistpl
mov
out
xlat
mov
jmp
mov
xor
jecxz
popa
jnp
and
sbb
push
fucomi
xor
iret
loope
jg
fildll
lods
rcl
xorw
dec
jbe
outsb
arpl
jge
jo
jnp
push
cli
je
test
jmp
add
and
mov
repnz
sti
loop
cltd
dec
mov
lods
int3
mov
adc
sbb
jge
or
ret
movsl
or
pop
jo
lods
xchg
repnz
sar
sarb
jmp
mov
cmp
outsb
mov
out
mov
loopne
jmp
lcall
jmp
test
push
dec
mov
jle
mov
jmp
sub
jge
dec
mov
sbb
pop
mov
sub
and
jmp
mov
cmp
test
sub
xchg
in
rcrl
fisttpll
arpl
rcr
test
mov
fdivs
aam
xor
or
jo
mov
cmp
mov
adc
inc
or
clc
fildll
push
sbb
sub
push
mov
mov
sub
push
int
bound
dec
sti
and
daa
sub
outsb
stc
xchg
sbb
jmp
or
test
cmp
sub
int
push
mov
test
add
lods
loop
jle
add
or
je
mov
test
xlat
jmp
scas
fisttpl
jnp
mov
jbe
rol
xor
arpl
shlb
dec
les
add
cmp
scas
aad
inc
daa
sub
mov
lods
out
xchg
dec
cmc
sub
icebp
jge
fdivl
lcall
lods
push
pop
jb
adc
dec
lds
mov
adc
and
fstp
add
adc
push
cmpsb
jmp
out
outsb
push
xchg
hlt
jo
xlat
lods
or
cmp
jmp
inc
iret
add
ficompl
sub
cmp
ret
pop
jmp
in
stc
sub
test
insb
dec
push
xor
jne
jmp
mov
loopne
jbe
jmp
rcll
repnz
stos
ds
fdivs
jne
out
adc
jmp
out
mov
lods
jmp
icebp
loopne
push
call
pop
rorl
jmp
mov
jne
sbb
and
mov
pop
cmc
cld
jmp
aam
daa
push
aas
addr16
call
fadds
jmp
cmp
and
mov
sub
sti
pop
xchg
sbb
fnstenv
cmc
andl
adc
xor
sub
in
loope
scas
jbe
add
mov
ljmp
imull
jmp
fsubrs
cmc
mov
ss
jecxz
call
pop
insl
inc
mov
push
push
dec
xchg
adc
xor
or
mov
sarb
hlt
mov
std
je
sbb
jmp
loop
fcmovne
sbb
aad
jae
inc
mov
subl
sbb
xor
subb
lods
rcll
sti
mov
lds
or
les
dec
mov
out
fbld
mov
and
lods
in
mov
sarl
sahf
bound
jle
int3
dec
dec
lahf
sbb
xor
mov
popa
sbb
in
or
lods
lret
xor
popa
jmp
and
fldpi
push
iret
xchg
cmpsb
popf
stos
jmp
push
sbb
sub
jmp
insl
xchg
jmp
fnsave
rcrb
in
mov
loopne
mov
mov
jmp
pop
jmp
in
jmp
sbb
out
jmp
inc
mov
jae
dec
fs
movb
push
pop
cmpsl
out
or
out
test
sbbl
aas
rorl
cmp
jle
ret
cmp
pusha
add
xchg
inc
popa
cmpsl
addr16
cmp
pushf
testb
or
jmp
sub
addr16
sbb
jmp
fadds
jmp
pop
leave
mov
daa
dec
data16
mov
or
jmp
hlt
and
jmp
jg
inc
ss
inc
xor
imul
sub
cmp
out
xchg
stc
inc
cmpsl
into
sub
lock
es
jmp
jne
sbb
sub
sub
add
testl
xchg
jmp
das
mov
mov
fldl
jp
mov
jmp
xor
mov
pop
or
es
inc
mov
or
cmp
mov
jmp
addr16
push
popf
mov
por
inc
iret
jmp
xchg
fs
pop
sub
add
imul
stos
and
mov
mov
scas
lret
loopne
pop
push
jp
and
pushf
cmp
into
inc
push
ds
sub
outsl
mov
fcmovne
int
or
push
imul
lods
lea
pop
data16
add
in
adc
or
popf
push
and
cwtl
sbb
in
lcall
xchg
jmp
and
stos
adc
xchg
fs
pop
pop
aad
in
add
js
cmp
int
stc
mov
icebp
je
ljmp
mov
shlb
mov
pop
or
in
jmp
jno
into
xor
or
dec
jns
sti
xchg
pop
or
or
in
cld
roll
cwtl
pop
rorl
sub
stos
add
dec
subb
jmp
inc
pop
jp
pop
or
sbb
inc
cli
aas
cmp
mov
mov
hlt
repz
stos
push
js
xchg
push
push
xlat
dec
shr
mov
ss
jmp
outsl
lods
nop
imul
add
arpl
repz
push
xor
sub
jp
cld
jg
dec
jne
scas
xor
shll
mov
les
xlat
cli
in
dec
adc
mov
push
and
mov
xchg
add
pop
jmp
jo
ljmp
bound
arpl
fucomp
dec
cli
loop
add
clc
sti
scas
inc
insb
cltd
loopne
cld
jbe
enter
cmp
sub
jb
sti
lds
fbld
adc
and
scas
cmpsb
and
mov
les
lock
in
jno
sub
sbb
or
sub
cvttps2pi
decb
mov
insl
movsb
xlat
dec
mov
add
hlt
mov
cmp
mov
call
inc
loopne
test
je
daa
mov
fimuls
out
jmp
sbbb
test
movsb
xor
mov
int3
lods
dec
cmp
jmp
les
mov
inc
fwait
cmp
xor
movsl
test
popa
add
icebp
out
int3
testb
or
jmp
mov
sbb
outsb
sub
mov
sbb
mov
pop
xchg
push
mov
in
push
xor
sti
mov
outsl
add
aad
nop
xchg
aaa
mov
and
dec
and
or
jl
sub
jae
stc
sti
sub
pusha
jmp
fs
adc
sahf
lods
roll
enter
cli
loop
xor
int
xchg
add
inc
xor
pop
sti
mov
inc
cmpsb
loop
je
mov
mov
mov
pushf
jmp
push
adc
icebp
ss
sbb
cld
cmp
mov
jg
das
jg
adc
and
sub
jecxz
addb
daa
cmpsb
adc
xchg
and
dec
jmp
jl
cmpsl
add
mov
repnz
or
inc
add
imul
mov
jecxz
ret
fisttps
jno
daa
fs
inc
jmp
lock
int
hlt
pop
pusha
lods
mov
out
xorb
jmp
sub
add
in
adc
inc
mov
jecxz
jmp
jne
into
hlt
movsl
mov
mov
sub
lds
dec
dec
arpl
jmp
jnp
jne
lret
lods
xchg
call
pop
sub
scas
arpl
xor
cltd
roll
add
repz
subl
or
xchg
jmp
and
fimuls
sbb
xor
outsl
pusha
shr
cmp
mov
sub
adc
leave
cwtl
repz
scas
rcrb
fwait
jmp
stos
mov
xlat
cmpsl
ja
jmp
push
ds
in
push
test
leave
pop
jmp
pop
test
dec
fadds
das
inc
push
popa
scas
dec
mov
std
adc
adc
stc
cmp
lret
jge
inc
and
or
out
das
xchg
push
mov
test
jmp
movntsd
cltd
mov
dec
sbb
cmp
add
adc
jns
pop
cli
iret
inc
ds
jb
and
mov
jmp
lea
adc
push
mov
jne
iret
sbb
push
lods
xlat
ds
enter
mov
sub
test
fdivl
push
into
jmp
jmp
lea
pop
bound
xchg
nop
pop
int3
scas
movsl
dec
dec
jge
sbb
sub
imul
jne
adc
cwtl
add
xchg
sbb
fnstenv
cmp
insb
in
and
pop
jmp
add
pop
sub
stos
lret
in
adc
or
jecxz
jmp
xchg
mov
lods
push
push
xlat
cwtl
jg
test
pop
jnp
loop
xor
outsb
push
lods
xchg
cli
rorb
daa
push
fidivrs
add
inc
jmp
loope
shll
jbe
cmp
mov
xchg
mov
imul
sub
lods
jnp
push
dec
fadds
and
mov
nop
gs
mov
mov
ret
jmp
adc
adc
dec
mov
add
das
icebp
repnz
in
ret
rclb
or
sbb
mov
xchg
outsb
jae,pn
lret
into
xor
cmpsl
jmp
imul
fs
pop
ss
out
js
stc
or
jmp
push
push
adc
call
add
lea
imul
jb
sbb
lods
sbb
cltd
dec
sbb
in
subb
jbe
gs
enter
in
dec
sub
sbb
in
pop
sbb
jns
aam
shlb
or
or
cwtl
scas
lods
sbb
subl
jmp
inc
rcll
jmp
mov
mov
pop
lret
cs
and
sub
lods
lret
push
addr16
ret
and
pusha
cmpsl
sbb
fcmovu
pop
roll
daa
pushf
jmp
mov
add
aad
mov
cmp
and
test
cwtl
jb
sbb
scas
push
cmp
fiadds
sbb
out
stos
jmp
xchg
cltd
in
pop
cmp
sti
cld
inc
dec
push
sbb
add
push
insb
imul
add
call
pop
mov
repz
loope
mov
push
lea
iret
sub
cld
dec
inc
testb
and
iret
push
jmp
cmp
and
lods
test
jmp
shll
pop
stc
inc
ret
jmp
dec
fldl
and
repnz
outsl
jmp
clc
sbb
jmp
jecxz
add
icebp
sbb
jmp
movsb
xchg
push
mov
add
mov
jmp
mov
aas
jns
jmp
sbb
ja
js
sub
fs
cmp
jmp
jbe
push
xchg
dec
ret
sbb
mov
mov
jmp
push
sahf
mov
cmp
dec
or
mov
lcall
lret
mov
jmp
inc
insl
or
cmc
jmp
inc
repz
cli
filds
aam
inc
imul
jmp
out
ret
sbb
push
outsb
out
pushf
xchg
mov
and
fidivl
cmp
pop
push
and
or
xchg
mov
jmp
mov
adc
jmp
jge
xor
xor
cmp
hlt
pop
or
mov
cmp
mov
lret
jmp
repz
pop
lods
jle
adc
push
xchg
and
cmp
xchg
jns
mov
lahf
shr
loopne
push
sbb
ret
jmp
ss
scas
outsl
cmp
jno
int3
lods
jmp
fiadds
mov
push
shrl
pusha
and
mov
lret
pop
jb
jmp
adc
jmp
jle
push
xor
xchg
jmp
mov
mov
js
loope
mov
jmp
adc
or
inc
mov
lret
pop
jmp
data16
push
pop
inc
pusha
jmp
xchg
xchg
cld
pop
mov
mov
lea
jo
jge
sub
cli
add
mov
and
jae
xor
add
fisubl
dec
pop
sub
pop
sub
add
jmp
xor
mov
push
sbb
int3
mov
adc
scas
addr16
sbb
dec
dec
movsb
fisttpl
cli
lock
nop
xchg
or
sub
out
dec
xor
orb
rolb
mov
fistps
add
add
mov
mov
pop
jge
jo
daa
mov
xchg
xor
cs
stos
jae
jg
xchg
jecxz
add
in
pop
jmp
dec
sub
xchg
sbb
and
into
jmp
and
loopne
jmp
mov
iret
pop
test
dec
cli
test
jne
addr16
mov
sub
xchg
mov
or
adc
call
jmp
mov
fs
enterw
testl
sub
sbb
mov
jmp
pop
into
mov
sub
repz
mov
mov
jmp
in
pop
pop
push
es
sub
test
js
mov
jmp
dec
mov
inc
add
cmp
jnp
jb
sub
ds
cld
jg
sbbl
jmp
in
mov
lcall
mov
lds
xorl
push
adc
jl
sub
sbb
sbb
aam
stos
pop
xchg
add
imul
jmp
cmp
inc
pop
jns
lahf
jmp
scas
mov
jge
rolb
ret
loopne
pusha
outsb
popf
sub
mov
andb
or
rolb
loopne
fdivr
divl
lcall
int3
jmp
call
mov
jmp
mov
adc
cmp
xchg
jmp
mov
mov
jmp
into
xchg
ljmp
jne
push
jnp
cmp
add
jmp
in
lock
mov
addb
push
scas
sub
push
jl
jo
lahf
mov
jmp
or
movsb
imul
push
loop
outsb
inc
push
clc
lods
lcall
sahf
inc
mov
loope
sub
ss
loop
sbb
push
mov
jo
pop
or
stos
or
adc
mov
add
add
and
enter
push
bound
push
ret
push
sub
stc
jmp
pop
xchg
dec
divb
push
xor
or
sti
leave
jbe
or
push
jmp
mov
pushf
loop
push
sbb
pusha
add
jne
jl
stos
add
sbb
xchg
and
outsb
or
xchg
jb
sbb
xor
inc
jmp
insl
inc
and
pop
xor
stc
mov
enter
nop
mov
xchg
icebp
pop
imul
cmp
xchg
stos
jmp
aas
add
mov
shl
xor
and
pop
push
imul
rcrl
jbe
sub
mov
shll
jmp
sub
dec
and
fwait
push
sub
int3
imul
addb
mov
and
inc
insb
xchg
mov
cltd
xor
inc
rcll
in
mov
adc
adc
pop
jp
cmp
test
lods
gs
adc
dec
pop
pop
lret
imul
mov
or
sahf
les
mov
xor
sub
repnz
pushf
xchg
sbb
into
jp
scas
sub
mov
repz
mov
lock
ds
push
push
jmp
cmpsl
pop
mov
mov
testb
adc
test
ds
insb
push
cmp
sub
sub
cmp
mov
pop
lods
loope
in
daa
cmpsb
rclb
sub
sbb
fs
fsubrl
xchg
xchg
stos
aad
hlt
dec
loope
imul
imul
push
loopne
jb
gs
cltd
lods
mov
pushl
jae
cmc
jmp
shl
mov
jmp
aam
jp
mov
jmp
jo
xor
fsubs
sarl
je
pop
cmp
test
dec
ljmp
loop
in
ror
data16
adc
jmp
sub
jne
imul
aaa
and
daa
bnd
je
mov
int
mov
adc
xchg
mov
jmp
push
leave
add
mov
inc
arpl
mov
rolb
pop
je
imul
pop
pushf
sarl
jmp
mov
mov
ret
jmp
in
scas
lock
jmp
stos
lahf
outsl
repz
push
jmp
notl
pop
dec
shr
mov
int
jmp
test
or
popa
stos
mov
stc
arpl
sub
idiv
cwtl
mov
in
stos
xchg
and
adc
iret
pop
lods
aam
hlt
jp
lret
shll
mov
and
icebp
out
xchg
shll
add
fisubrs
jmp
fwait
and
jmp
inc
ret
mov
loop
fwait
fwait
xor
or
dec
cli
lret
jmp
insl
cmp
icebp
dec
loop
sub
aaa
mov
mov
xchg
dec
push
loop
rorl
cld
jmp
lods
inc
orl
jb
fnstsw
sti
loopne
mov
aad
lods
loope
gs
out
mov
push
jge
xchg
shlb
and
imul
nop
add
xor
stc
imul
mov
jmp
outsl
int
mov
sti
lods
jnp
push
stc
push
cltd
pop
repz
loop
lods
xchg
addl
add
shr
mov
pushf
pop
je
je
test
jmp
mov
push
sub
xchg
lods
test
in
dec
in
gs
fs
cmpsl
sub
adc
bound
das
xchg
jecxz
imul
dec
mov
mov
out
jno
fucomp
inc
lahf
sbb
sbb
adc
lret
jb
mov
mov
inc
or
into
adc
sbb
push
gs
cli
and
mov
xchg
jg
push
jmp
pop
pop
pop
fsts
pop
popf
xor
xchg
std
xchg
jmp
and
out
lcall
cmpsb
test
sar
fisubl
jmp
daa
movsl
clc
jbe
mov
jmp
mov
jmp
sub
mov
add
sahf
cmp
scas
mov
into
xchg
cli
pop
inc
jmp
jae
orb
jmp
add
push
mov
cwtl
xchg
or
imul
jmp
sbb
fsubrp
popf
call
pop
ds
insl
jne
icebp
imul
and
fcomps
adc
lea
and
jb
sbb
nop
pop
adc
aad
cmp
iret
adc
mov
fists
push
and
test
enter
jmp
repz
icebp
add
jnp
incb
lahf
adc
jmp
push
lret
movsb
jmp
je
sub
jns
push
mov
sbb
push
lret
xchg
cmpsb
jmp
insb
ret
pop
xchg
sub
mov
fisubrl
lods
jmp
mov
or
cmp
fldcw
ds
mov
xor
sub
test
in
push
lret
or
inc
pop
push
repnz
dec
pop
inc
adc
adc
cltd
lret
testb
push
ss
adc
inc
jae
add
sub
stos
mov
sub
mov
sbb
lods
inc
push
xor
mov
fs
test
jmp
in
std
stos
mov
xor
lods
xchg
adc
popa
sbb
cmp
mov
insb
les
cmc
imul
sti
nop
jnp
or
lock
jp
mov
addr16
mov
sub
out
scas
js
jmp
and
cmp
jmp
xchg
mov
notl
sub
or
jmp
cmp
mov
sub
cmpsl
iret
jp
jae
push
push
jmp
or
cltd
inc
jo
in
jmp
jp
cmpsl
data16
fwait
shll
add
cmc
inc
mov
sub
cmp
jmp
loopne
in
cmp
fwait
aas
adc
in
cmp
cmpsl
push
dec
and
int
lods
jmp
fldl
mov
mov
sub
mov
lret
das
jno
stos
add
inc
cs
shll
and
int3
jmp
xor
push
sub
daa
repz
jmp
sbb
cmp
adc
sbb
jmp
sbb
add
call
aas
lret
and
out
jno
sbb
mov
mov
jmp
addl
lods
sub
push
scas
cmp
xchg
sub
icebp
cld
sbb
or
jecxz
jmp
dec
dec
in
popf
ret
inc
push
pop
repnz
addr16
loope
mov
lods
push
iret
subl
sub
mov
sbb
mov
je
adc
mov
push
mov
push
and
iret
leave
mov
mov
mov
lds
push
jp
out
sbb
lods
lods
clc
mov
cld
cmp
cmp
mov
int3
xlat
sub
push
push
repnz
decl
mov
xchg
outsb
test
rolb
add
mov
mov
add
cmp
aam
mov
xor
sub
inc
dec
cmp
xor
mov
mov
fadds
repz
mov
fildll
sbb
dec
enter
jg
sti
sub
cwtl
push
pop
and
push
fistl
adc
int
loopne
dec
adc
pop
ret
mov
mov
xor
mov
inc
xchg
sti
jl
pop
adc
jmp
xchg
sbb
jb
push
into
addb
in
add
fwait
nop
mov
arpl
xchg
aad
rcrb
sub
xor
outsb
adc
mov
stc
adc
jnp
dec
stos
test
dec
sub
dec
or
sub
loopne
jmp
in
xor
xlat
jmp
cmpb
jbe
stc
dec
rorl
xor
cmp
stc
sub
les
push
lods
mov
or
or
adc
das
jmp
rclb
dec
imul
in
mov
mov
xor
ds
call
dec
xchg
jecxz
and
arpl
adc
lds
outsb
jmp
xchg
lea
out
lods
arpl
sbb
test
ljmp
lods
pop
mov
adc
pop
inc
mov
fiaddl
subb
lods
hlt
sti
inc
jns
sti
ljmp
sbb
ja
mov
jbe
leave
or
leave
outsl
jmp
ljmp
jmp
jecxz
pop
sub
mov
jmp
add
std
inc
jmp
clc
push
push
inc
sarl
aad
mov
ljmp
add
mov
cwtl
in
adc
mov
jmp
mov
cltd
dec
jbe
or
inc
sub
mov
sub
imull
je
xchg
jmp
sbb
jecxz
jmp
les
and
scas
pushf
jmp
ret
stos
adc
das
je
shl
jmp
inc
jne
sub
cmpsb
cmpsb
jmp
and
cmpsl
outsl
lods
jmp
out
or
ljmp
out
fmull
lret
push
jns
inc
sub
imul
out
frstor
cmpsl
push
cmp
xor
push
test
xchg
and
xchg
sub
and
sbb
add
cmpsl
outsb
jmp
insb
push
mov
aaa
cld
jmp
popa
ljmp
jbe
inc
jb
mov
subps
ljmp
sub
xor
jmp
or
xorl
push
add
jmp
add
popa
jmp
lods
aaa
loop
inc
in
daa
lods
mov
xchg
test
mov
jmp
add
les
std
cmpsl
sub
mov
rcll
imul
loope
add
cs
adc
cli
sbb
mov
addb
dec
movsl
pop
out
jmp
ds
mov
sbb
mov
gs
cwtl
pop
aas
sub
xorb
lea
cmpsb
test
popf
add
cmp
xchg
jg
xchg
adc
dec
cwtl
outsb
and
add
mov
adc
jp
jae
mov
fnstsw
lods
mov
fcos
or
sbb
cli
jo
pop
repnz
mov
xchg
sub
mov
insl
jge
imul
ds
sbb
leave
das
jmp
sarl
inc
cmpsb
dec
lods
cmp
jle
mov
and
and
mov
pop
out
jge
ds
cmpsl
ljmp
pop
lock
mov
jmp
das
fisubl
mov
push
pop
xlat
loope
sub
mov
mov
pop
movsl
adc
fwait
pop
jmp
mull
mov
sbb
cli
sbb
sti
clc
sub
mov
arpl
nop
fsubr
and
imul
jmp
popa
dec
jns
ror
dec
scas
imul
icebp
cmp
clc
fdivr
sbb
nop
xchg
add
sub
fs
in
repz
daa
jmp
and
repz
insl
ret
ds
es
pushf
mov
roll
repnz
mov
mov
add
es
js
mov
jb
std
jb
jmp
sub
sahf
push
adc
out
mov
fimuls
cmc
fidivrs
roll
push
jmp
test
jbe
cli
jmp
arpl
jg
pusha
lods
pop
stc
repnz
mov
aaa
pop
jmp
lret
inc
andl
loope
pop
inc
sub
jmp
insb
fcmovb
das
test
scas
xchg
fwait
movsl
mov
ret
jmp
movsb
sbb
cmp
nop
push
pop
xor
sti
mov
ljmp
jne
movsb
or
push
rorl
mov
jge
xlat
es
jmp
in
dec
daa
push
inc
push
adc
jmp
rcrl
lods
and
mov
dec
scas
adc
mov
push
aaa
fs
mov
pop
xor
aas
jmp
aad
lahf
mov
jmp
mov
jl
jmp
and
in
xchg
lds
test
gs
jle
jmp
inc
sahf
mov
jmp
popf
push
cmp
lods
push
arpl
jno
lods
add
paddw
je
xor
xor
jo
mov
xchg
jnp
ret
shrl
sbb
sub
jg
and
outsb
mov
lods
jmp
mov
fsubrl
lahf
jmp
loop
mov
movsb
or
int3
out
mov
icebp
jmp
movsb
repnz
jmp
push
jne
lret
adc
rcll
pushf
aas
jmp
dec
enter
pop
push
jmp
cmpsb
out
pop
xor
adc
and
lods
out
adc
cmc
decl
daa
nop
fucomp
or
mov
and
dec
clc
push
and
aas
sbbb
out
add
push
mov
push
popf
hlt
push
leave
jno
ret
fidivl
jecxz
sbb
fldt
fsubs
repnz
cmp
jmp
pop
in
and
mov
pusha
push
xlat
pop
jmp
and
ljmp
pop
scas
sub
incb
xor
mov
xchg
inc
add
es
mov
mov
mov
nop
cmp
cmp
or
pop
lods
lods
xor
and
imul
arpl
popf
dec
xor
push
enter
pop
mov
movsb
lcall
dec
push
iret
mov
mov
lret
fistps
or
cwtl
scas
clc
mov
icebp
repz
push
mov
jmp
jnp
adc
arpl
mov
lods
lea
in
cmp
pop
fwait
in
xor
lock
sahf
jecxz
cmp
movsl
outsb
mov
mov
mov
add
mov
dec
add
imul
jmp
das
es
test
cld
lock
jmp
sbb
imul
mov
mov
inc
stc
iret
or
ja
jmp
aas
insl
cmp
or
jmp
shr
pop
add
lods
jmp
addr16
dec
daa
das
inc
jmp
in
arpl
dec
mov
inc
stc
mov
xlat
jnp
movsl
mov
xchg
test
or
mov
sbbl
out
dec
je
clc
xchg
pop
inc
mov
std
jmp
test
mov
mov
mov
push
lahf
mov
ror
imul
mov
shlb
jmp
add
cmp
xchg
into
jl
hlt
punpckldq
and
in
push
test
loopne
lods
pop
push
pusha
cmpsb
insb
ljmp
imul
jmp
add
shrb
repz
lods
pop
sub
roll
adc
cmp
sub
imul
mov
imul
lea
int
sub
jl
lahf
daa
cld
stc
cltd
xor
jmp
jo
daa
and
inc
testl
and
add
xor
ja
sbb
push
jmp
pop
jae
jbe
or
jmp
out
movsb
popa
cmpsl
mov
mov
xchg
ljmp
lods
inc
jmp
push
dec
xchg
and
imul
push
xchg
or
test
or
jmp
mov
mov
jmp
dec
mov
scas
repz
lods
out
shlb
ret
popa
jmp
inc
xor
jmp
jno
adc
inc
cli
out
repnz
rorl
movsb
adc
dec
sbb
mov
push
imul
cmp
jmp
out
inc
xor
icebp
dec
gs
loopne
push
adc
adc
jbe
mov
push
call
xchg
pop
mov
add
repz
jmp
cmpsb
adcl
mov
xlat
in
pop
dec
lcall
sub
das
stos
push
lods
out
mov
xchg
push
adc
ret
fisubrs
sub
repnz
inc
ret
jmp
shll
lods
mov
aam
sti
es
or
je
mov
cmp
sbbb
fs
imul
mov
push
adc
push
enter
outsb
nop
mov
cld
repz
sub
imul
sti
cmp
jmp
xor
adc
mov
jnp
push
enter
sbb
push
xchg
pop
inc
cs
movsl
mov
adc
outsl
cmc
lods
mov
inc
and
js
or
ret
mov
dec
sbb
inc
jmp
pop
dec
lods
sti
loope
and
daa
imul
mov
mov
fstl
lods
adc
mov
fistps
jp
mov
test
jmp
xor
mov
shl
cmc
cmp
mov
ds
jmp
fwait
adc
and
mov
sub
in
dec
loop
aam
mov
add
cltd
cmp
add
mov
adc
lods
dec
outsb
stos
dec
cmpsl
dec
iret
sub
fldenv
cmp
aaa
jmp
test
jg
cmpsl
mov
adc
in
aas
sbb
add
mov
jmp
imul
pushf
adc
fldl
cmpsb
xor
adc
or
mov
sbb
jns
sahf
jns
jmp
pop
sub
inc
cmp
pop
or
xor
fiaddl
jg
jmp
into
fldt
loopne
adc
dec
cmp
scas
cs
mov
bound
sbb
jne
push
mov
jmp
dec
pop
pusha
sub
addl
add
lret
and
xchg
adc
or
push
jmp
fcoml
iret
adc
mov
das
jnp
xchg
adc
aam
adc
add
loope
sub
mov
sub
bound
je
add
loopne
sub
shr
insb
dec
pushf
rorb
lea
sub
cs
adc
sbb
fisttpl
stos
std
mov
mov
add
inc
outsb
bound
xor
es
add
jmp
mov
ljmp
and
ret
and
int
inc
pop
icebp
xchg
movsb
in
stos
mov
pop
fwait
shlb
nop
and
arpl
lods
jmp
sub
sbb
pop
adc
and
lods
imul
lret
mov
mov
and
push
cmp
mov
repz
leave
adc
and
je
and
or
movsb
mov
or
inc
fadds
inc
push
jmp
jl
jne
jmp
repz
pop
pop
mov
jmp
xor
rol
pop
add
out
cmpsb
popf
jnp
scas
mov
cmp
ja
jmp
push
jmp
sbb
pop
jno
out
or
ficoml
cmp
push
hlt
push
xor
mov
inc
add
icebp
jmp
imull
test
inc
fs
push
sahf
xchg
fbld
aad
jmp
mov
imul
jle
into
adc
mov
sbb
add
jmp
jg
icebp
inc
std
in
cli
xchg
popa
jmp
cmp
cmp
pop
and
xchg
mov
jmp
jle
js
jecxz
mov
imul
ror
xor
jmp
lods
mov
adc
push
mov
mov
cmpsb
arpl
out
jbe
lods
repz
sub
scas
mov
rclb
jmp
not
mov
ficoml
mov
mov
lfs
into
xlat
dec
sbb
adc
jecxz
jb
jmp
or
mov
push
mov
adc
daa
inc
pop
jmp
sbb
shrb
xor
xchg
stos
lds
and
inc
sbb
jno
sub
fdivs
cmp
adc
mov
or
insb
and
aad
cmp
lahf
inc
dec
jmp
jmp
ret
aas
pop
pop
jmp
inc
xchg
movsb
mov
mov
jnp
or
cwtl
lock
sbb
inc
gs
jecxz
or
jmp
xor
addl
mov
fsubr
add
xor
dec
xor
inc
sub
dec
or
jmp
in
mov
clc
mov
dec
subb
mov
mov
xor
arpl
dec
sub
sbb
lea
jmp
lods
lret
pop
add
addr16
imul
mov
pop
insl
ret
and
mov
lea
jbe
jns
jmp
sub
xchg
subl
push
popf
fucomip
rcrb
in
lock
fimull
jmp
jle
or
add
jne
adc
gs
dec
cmpsb
imul
and
push
push
lret
push
vmread
scas
add
test
lods
loop
sbb
test
jmp
divps
pusha
stc
dec
and
ss
sti
and
push
int3
push
xor
add
insb
and
pop
or
fdivrl
ja
mov
adc
popf
jmp
pushf
xor
hlt
fst
jmp
cmpsl
fsubp
push
pop
inc
insb
jmp
jo
cld
jbe
add
jmp
adc
cmpl
xchg
push
cmpsb
out
jo
xchg
xchg
jmp
enter
adc
aad
int
cmp
lea
dec
and
sarl
xchg
jmp
arpl
das
jle
shrb
ret
jp
ret
mov
mov
rcl
fmul
cmova
in
jmp
test
notl
orl
mov
daa
sub
pop
faddl
hlt
ja
mov
sub
dec
sub
sub
mov
add
push
rol
mov
jmp
and
mov
sub
sbb
xor
mov
mov
fildl
fistpll
nop
jmp
xchg
arpl
and
jmp
mov
stos
sbb
xor
dec
or
sub
mov
fsts
xor
fldl
outsl
dec
and
sbb
shlb
ja
psrad
stos
dec
jmp
push
das
movsb
push
loop
insl
jmp
mov
and
dec
jb
mov
mov
sti
dec
stc
das
out
cmpsb
imul
fistpll
push
ret
sahf
mov
imul
call
fnsave
xor
push
loope
push
pop
sbb
sbbl
mov
xchg
jb
sub
or
hlt
mov
scas
sbb
cmp
sub
fcom
insl
mov
pop
mov
push
sbb
push
xor
pop
mov
nop
adc
ss
sub
jno
loope
or
out
or
cmp
popa
aam
jmp
sub
dec
ret
cmp
push
or
insb
lcall
inc
pop
outsl
testl
inc
std
lock
repz
fs
pop
add
sub
leave
pop
and
stos
jmp
mov
int
jmp
lods
cmp
cwtl
das
fisubs
sub
imul
ljmp
fwait
dec
fwait
aas
sbb
sbb
dec
or
or
and
mov
lds
iret
jb
pop
push
push
and
adc
or
xchg
jmp
xchg
imul
sub
lret
shll
int3
cwtl
jmp
sub
les
mov
push
and
or
test
sti
jmp
jp
imul
lods
fdivs
cmpb
scas
nop
add
arpl
adc
pop
sbb
cmpsl
xchg
jae
aam
mov
xchg
enter
call
push
out
and
xor
btc
pop
out
mov
jmp
in
test
jbe
jno
jns
pop
jg
mov
push
push
jmp
syscall
in
pop
fistps
push
lods
xor
xchg
cmp
dec
or
je
jae
mov
push
and
xchg
lods
add
popf
sbb
mov
jmp
jae
mov
jmp
addb
out
btc
cli
aad
push
stos
fs
jmp
stos
jge
stc
loop
daa
outsb
xchg
mov
iret
outsb
push
or
jmp
jbe
lods
movsl
std
jb
sti
dec
sbb
outsb
lods
dec
jmp
popf
mov
call
arpl
mov
fidivl
push
pop
lods
inc
icebp
sti
jmp
pop
je
rcr
push
adc
pop
nop
xchg
lock
pop
jmp
pop
add
jmp
stos
loope
pop
and
lods
aad
mov
jp
std
lods
jmp
jns
ret
fimuls
or
push
pop
or
dec
dec
clc
iret
push
jmp
or
mov
mov
dec
scas
jmp
aas
inc
xchg
jl
push
jmp
testl
cwtl
sub
and
mov
test
aas
jmp
dec
out
mov
jo
rorl
add
mov
sub
scas
sub
mov
mov
jl
cmpsl
jae
adc
jmp
pop
lock
adc
aaa
mov
cmp
jmp
inc
clc
mov
loop
test
mov
cmpsl
pushf
jmp
outsl
pop
out
mov
les
sbb
mov
cmp
jmp
xor
je,pt
xchg
bound
inc
lods
and
jnp
pop
xchg
loopne
jmp
cwtl
outsl
aaa
mov
push
fsubrp
hlt
mov
bnd
ret
test
js
mov
jmp
sbb
das
or
and
and
sub
xchg
daa
jle
js
dec
sub
sub
mov
add
ljmp
jmp
les
fnstsw
in
shl
jo
jbe
and
jmp
jmp
dec
pop
jnp
xchg
jmp
add
jbe
or
jmp
cmpsb
imulb
dec
sub
sbb
pextrw
and
mov
int3
sub
jl
sub
sub
bound
adc
jle
test
pmaddwd
mov
jmp
out
cmpsb
popa
loope
mov
aam
adc
push
jmp
fldl
dec
push
pop
dec
jmp
popa
pop
pop
sub
sbb
jmp
das
sub
movsl
std
jmp
out
jb
test
jg
and
fidivl
sbb
and
mov
leave
xchg
out
xchg
pop
call
fimull
in
jmp
aas
int
loopne
jno
imul
sbb
adc
aas
mov
push
mov
mov
and
cmpsb
gs
jmp
loopne
mov
jmp
sbb
outsl
bound
cmp
cltd
or
sbb
cmpl
or
mov
aad
test
icebp
add
xchg
cltd
hlt
push
push
jmp
insl
mov
pop
mov
pop
pop
mov
jmp
cmpb
cli
lret
mov
jge
mov
mov
jns
test
lret
xchg
or
nop
sub
loop
sbb
arpl
pop
lock
fs
int3
xchg
inc
mov
jge
popf
jb
orb
sar
jl
mov
out
out
mov
dec
mov
dec
jmp
cmpb
lods
inc
cmp
movsb
test
xor
imul
push
adc
xchg
je
popf
inc
cmc
jmp
fsubrs
push
sub
rorl
inc
mov
lods
test
lahf
lods
inc
xor
mov
out
push
xchg
sub
enter
jmp
fidivs
out
std
inc
das
mov
mov
jmp
pop
push
repnz
bound
lods
js
aaa
out
jg
daa
sbb
push
sub
aam
mov
add
sbb
jmp
rcl
fistpll
stos
inc
movsl
mov
inc
ja
push
fwait
in
fiadds
pop
scas
data16
jmp
pop
sbb
xor
jmp
add
adc
lock
loopne
sti
mov
mov
sbb
pop
xchg
pop
push
pop
jmp
xor
dec
xchg
cmp
stos
int3
lods
xchg
jmp
test
lret
push
sub
mov
jbe
dec
out
jmp
repnz
cli
ret
or
push
xchg
scas
dec
mov
jb
push
or
cmpsl
imul
aaa
push
arpl
adc
cmp
jmp
inc
fdivr
add
int3
pop
fs
xor
xchg
lcall
jmp
xchg
push
stos
mov
or
or
mov
scas
ret
clc
push
jmp
sub
lock
or
jmp
push
rcrb
inc
or
adc
sti
or
call
add
lods
pop
ss
sub
test
jmp
movsb
out
or
das
sub
ret
cmp
dec
cli
jl
cmpsl
out
sub
pop
test
adc
daa
mov
jmp
push
fisttps
jbe
dec
jmp
jae
in
inc
aaa
dec
in
or
fcompl
add
sarl
scas
push
adc
adc
add
lods
sarl
pop
in
pop
arpl
adc
inc
test
fldcw
sbb
inc
mov
scas
out
xchg
divl
jbe
or
and
cmpb
push
call
xchg
push
inc
test
notb
lods
hlt
pusha
fst
lea
popa
out
sbb
xor
cmpsl
repz
or
mov
pop
add
push
imul
xorl
sarl
adc
movsb
arpl
lods
nop
outsb
cmpsl
cmp
sbb
mov
int
xrelease
sbb
mov
xlat
lret
ljmp
dec
rcrb
out
pusha
stos
mov
sbb
sti
mov
push
adc
xor
insb
pop
pop
add
shll
cmp
or
sbb
push
scas
ds
jmp
mov
or
enter
jle
outsl
sub
xchg
jmp
in
fldt
aas
fs
sti
shrb
xlat
dec
cs
sub
mov
lods
cmpl
mov
hlt
jmp
cld
inc
in
sahf
es
outsb
cvttps2pi
push
daa
test
hlt
cmp
std
shll
push
sti
pop
stos
xchg
push
push
ja
add
fcmovu
lret
and
subl
sti
mov
adc
in
scas
xchg
imul
and
fcompl
or
sub
loope
jmp
jae
xor
inc
sti
sahf
std
lret
xor
inc
ret
out
mov
push
add
ficoml
jle
inc
in
lock
or
mov
push
inc
jmp
and
nop
mov
dec
sahf
cltd
mov
pop
xchg
cmp
dec
fidivrs
xor
in
mov
subb
out
xchg
or
scas
or
fsubp
jmp
shlb
data16
jmp
xchg
rcrl
cmp
mov
movsb
mov
jmp
loope
jecxz
lea
pop
test
sub
or
inc
jmp
dec
pushf
jo
pop
nop
jecxz
dec
in
push
jmp
xorl
in
mov
dec
stos
imul
push
cmp
jg
jmp
fs
cmp
fcompl
into
outsb
les
clc
adc
enter
jmp
jb
mov
or
imul
sub
insb
adc
daa
scas
int3
xchg
adc
push
std
jecxz
mov
adc
shll
outsb
fbld
ret
and
jmp
fxch
pop
jno
adc
sbb
dec
sub
rorb
test
sub
addr16
popa
pop
jecxz
lods
pop
mov
mov
pop
jmp
pop
xchg
xchg
jno
push
outsb
sub
and
jne
or
cmp
jmp
aad
mov
jmp
in
jge
pop
xchg
aas
lods
std
pop
das
fisubrs
push
jmp
shlb
lods
mov
xchg
adc
mov
or
sub
sbb
xor
das
into
mov
scas
fnstsw
or
lret
in
jmp
cmp
leave
sahf
inc
sub
lods
dec
dec
pop
js
push
mov
popf
insl
and
inc
pop
push
scas
cmp
or
xor
sbb
scas
push
sub
pop
cmp
gs
and
xor
popa
insl
adc
pushf
inc
and
mov
adc
clc
and
movsl
lods
xor
dec
popa
jg
pop
dec
int3
sub
iret
jns
and
dec
xchg
rcrl
pop
in
out
mov
jmp
add
and
shl
jo
aaa
jno
lods
xchg
sbb
xchg
mov
fst
inc
fwait
xchg
push
or
jmp
and
lock
jmp
jp
pop
dec
lcall
sti
sar
push
je
xor
push
clc
and
jge
mov
pop
xor
cld
pusha
lods
add
unpckhps
repz
and
jmp
cmp
sti
jmp
dec
clc
rorb
ss
lods
int
dec
adc
pop
popa
rcr
mov
subb
mov
jb
lods
jmp
inc
arpl
dec
sub
enter
ret
lods
hlt
ljmp
rcrl
jge
mov
shll
jae
or
into
jmp
mov
repz
icebp
mov
jb
push
add
push
mov
in
xchg
push
shl
xor
fldenv
into
mov
pop
or
movsl
push
or
jnp
jmp
bound
clc
add
push
or
scas
push
jb
mov
sti
daa
je
es
xor
fs
sub
jb
push
imul
fiadds
pop
or
loope
dec
pop
or
jb
mov
pop
jo
push
jo
and
lea
repnz
lods
pop
and
sbb
pop
or
scas
lock
pop
and
es
clc
mov
sub
in
mov
inc
cld
bswap
mov
int
rclw
aad
add
outsb
getsec
std
or
jo
lock
sub
sub
push
loopne
pop
popf
jmp
cmp
in
jnp
in
add
vpshlq
sub
jo
jp
jmp
xor
lcall
cmp
into
ret
cmp
cmp
scas
shr
loop
repz
imul
xchg
mov
jmp
mov
push
push
inc
jmp
ds
mov
mov
mov
int3
inc
rclb
dec
dec
outsb
loopne
mov
adc
xcrypt-ofb
cmpsl
scas
jns
movsb
xor
cmp
shl
or
lods
jecxz
xor
into
scas
lods
pusha
adc
dec
or
inc
mov
and
aad
mov
imul
pop
jnp
outsl
or
pop
adc
lods
pushf
ror
pop
push
pop
dec
add
stos
dec
add
inc
aad
fwait
lds
hlt
xchg
dec
test
out
push
orb
aas
mov
fwait
out
mov
cmp
sub
pop
xor
es
mov
cmp
add
test
pop
daa
adc
mov
or
clc
dec
cmp
jno
xor
sub
shlb
rorb
loope
in
pop
dec
loop
mov
test
outsb
iret
pop
or
xor
jmp
pop
and
clc
jmp
ja
lret
divb
pop
stc
sub
push
mov
hlt
jmp
insl
negl
push
mov
jmp
pop
xchg
xchg
icebp
repnz
dec
sbb
filds
int
mov
daa
stos
por
daa
in
jmp
das
push
inc
lret
jmp
or
fiaddl
fs
ljmp
lods
pop
push
inc
sbb
cmpsl
or
add
mov
sub
clc
adc
and
and
imul
ljmp
xor
nop
mov
jecxz
and
mov
xchg
nop
jmp
fst
pop
cli
scas
xlat
pop
jmp
pop
inc
cmp
jmp
enter
or
mov
xor
xor
fsubrp
pop
mov
aaa
sub
or
insl
mov
fisubrs
pusha
jmp
mov
leave
mov
in
xor
mov
mov
test
fdivrs
popa
xor
adc
into
cmp
xchg
sub
popa
push
ja
jb
jle
ret
mov
mov
push
or
sbb
jne
bound
sbb
mov
jmp
inc
lcall
imul
and
mov
loope
ficomps
add
or
out
jo
dec
test
jnp
jmp
and
pushf
ret
add
divl
adc
sti
pop
sbb
sbb
stc
cmp
adc
xchg
std
pop
sub
xchg
lea
out
or
or
icebp
xorb
dec
popf
sbb
dec
mov
xor
clc
sbb
and
leave
mov
add
dec
mov
or
pusha
lods
movsb
inc
sti
pop
pop
nop
data16
cmp
inc
sbb
jmp
daa
lock
or
dec
sbb
adc
cmp
mov
sub
loopne
sbb
jle
call
fdivp
jne
popa
and
jmp
cmp
aam
ljmp
loope
ret
popa
jmp
fisubrs
sub
add
dec
xor
dec
mov
in
pop
inc
fsubr
fildll
mov
sub
es
xor
jg
pop
bound
faddl
mov
lods
lret
andb
jmp
push
mov
test
imul
jle
or
lods
dec
mov
arpl
jmp
fadds
and
bound
mov
popa
pop
subb
mov
inc
cli
sub
lods
cmp
int3
jmp
jmp
in
jne
inc
fiaddl
in
pop
std
cmp
addr16
fidivrs
push
sbb
icebp
pushf
mov
sub
dec
loope
jmp
in
inc
dec
in
aad
cmp
mov
and
jg
jnp
jb
sub
rorl
sub
or
scas
clc
mov
scas
add
push
mov
std
dec
pop
jmp
mov
les
out
inc
jmp
fcmovnb
cltd
roll
insl
jmp
in
push
bound
and
inc
dec
sbb
jmp
into
cmc
cli
ja
dec
push
jmp
lcall
pop
lods
and
mov
dec
push
jmp
xchg
or
andb
add
out
adc
dec
lea
jmp
sbb
test
pop
lods
lret
ljmp
and
push
js
xor
in
rclb
nop
pop
lods
sbb
imul
das
shlb
out
jmp
sti
iret
test
adc
jmp
in
jb
shrb
scas
movsl
jge
inc
and
and
sub
or
inc
jmp
call
xchg
jmp
rclb
xor
cmc
jmp
pop
mov
jmp
lds
inc
jmp
push
insl
arpl
cmp
mov
aas
cmp
sbb
test
xchg
jmp
movsb
cmp
jg
daa
stos
and
jno
ds
jmp
adc
pushf
insl
or
jmp
or
add
cmp
jl
push
leave
lods
xchg
jle
nop
dec
sbb
jb
jmp
sub
lret
push
dec
loopne
or
mov
adc
pop
mov
pop
jg
adc
xor
mov
add
pop
mov
imul
loop
xchg
mov
and
pusha
pop
add
sub
in
and
arpl
dec
sbb
test
add
fstl
pop
jmp
mov
pop
cmpl
xchg
dec
pop
pop
xchg
jmp
dec
lods
les
cld
outsl
in
jmp
rcrl
inc
and
and
pop
jmp
mov
inc
push
add
addr16
pop
in
arpl
sbb
je
fs
lahf
call
es
push
mov
pop
xchg
fsqrt
mov
pop
sub
or
shr
dec
jge
xchg
xchg
pushf
inc
adc
adc
mov
bound
in
mov
pusha
jmp
dec
xor
adc
add
es
ja
push
dec
jbe
or
adc
divl
stc
dec
jmp
pop
add
cmpsl
jbe
in
adc
jb
outsb
sub
enter
das
jmp
jo
les
lret
fistpll
shr
lret
sub
cmp
cmpsl
daa
movsl
nop
cmp
or
std
insb
xor
jns
dec
std
inc
jb
stos
lahf
testl
jb
xchg
and
lods
inc
shlb
cmpsl
mov
stc
enter
xchg
shlb
dec
sub
jmp
cmp
lds
add
dec
sahf
stos
rorb
mov
cmc
sbb
je
mov
ds
mov
pop
jp
sbb
into
hlt
rcrb
cmp
shrb
imul
adc
nop
daa
test
scas
mov
faddp
sbb
pop
and
lock
jp
mov
sub
dec
xchg
jmp
aam
sbb
stc
push
ljmp
push
sbb
jecxz
js
inc
imul
je
popa
lock
ret
xchg
in
test
js
fs
dec
mov
jnp
sub
xchg
psrad
and
gs
in
jae
mov
cmp
aaa
scas
jmp
push
cld
je
fcomip
stc
in
aas
jmp
aad
les
jae
dec
outsl
movsb
mov
lock
xchg
add
fstp
gs
loope
test
lock
mov
push
mov
xlat
jmp
dec
cwtl
stos
ja
sahf
inc
jmp
lret
imul
ljmp
or
out
push
mov
out
or
inc
mov
jno
pop
out
jmp
shr
mov
int3
imulb
mul
pop
pop
aaa
lods
cmpsb
xlat
mov
adc
inc
mov
mov
stos
cmc
jmp
xor
js
lret
mov
fstpl
cmp
inc
movsb
jmp
xchg
loope
push
jmp
pop
aaa
scas
mov
xor
repz
push
mov
pop
jmp
mov
arpl
ss
dec
mov
addr16
cs
inc
faddl
adc
es
repz
daa
js
xor
movsb
jge
test
pop
jmp
add
rcll
sub
cld
pop
mov
pushf
add
enter
stos
ljmp
push
jmp
jecxz
push
xor
jmp
sbb
scas
or
mov
add
jmp
mov
xor
push
sub
sti
xor
inc
jbe
jmp
scas
push
int
sub
fists
pop
adc
mov
nop
push
push
sbb
out
push
sahf
enter
pop
subps
std
mov
jmp
aaa
gs
adc
xchg
mov
cmpb
cwtl
pusha
aad
pop
lods
push
jl
mov
dec
insb
adc
xor
outsb
pop
outsb
mov
dec
add
inc
decb
ljmp
jmp
cmc
pop
and
push
jmp
adc
into
add
and
push
or
pushf
push
fdivs
sbb
xchg
leave
jg
andb
or
dec
dec
iret
repz
lahf
and
cmp
or
xchg
jecxz
and
inc
xchg
jmp
pop
lret
addr16
mov
xor
aam
cmp
jle
mov
push
jmp
xorl
xchg
aaa
sub
stos
push
call
pushl
mov
jmp
jns
add
repz
jmp
jo
pushf
push
mov
jbe
sub
roll
imul
jno
mov
call
in
pushl
sub
dec
inc
cmp
and
stos
lods
push
fsubl
out
pop
sub
idivl
es
cmp
out
mov
shr
push
mov
jecxz
pop
jae
loope
pop
push
je
and
jmp
sar
push
outsl
lds
sbb
pushf
aad
dec
sub
inc
jns
pop
sbb
sub
adc
jmp
or
and
sahf
aam
in
test
sub
pop
jmp
or
shll
sub
jge
in
or
test
pop
jmp
stos
sbb
lods
or
ljmp
cmc
jge
xchg
sub
lcall
flds
jmp
inc
xchg
ret
fwait
sub
dec
mov
jmp
or
xor
pushf
loopne
jnp
add
jmp
loope
rep
cwtl
push
push
jb
sti
data16
rolb
pushf
scas
sub
jmp
add
imul
jb
xor
lea
fiadds
popf
in
push
inc
fs
jmp
xor
pop
mov
jp
test
jbe
sbb
pop
pop
packssdw
jmp
jp
sub
adc
gs
sub
mov
sbb
fadd
mov
lret
sbb
or
rclb
inc
ja
add
mov
jge
dec
cwtl
cli
ljmp
loope
pop
mov
jmp
sub
mov
jmp
sub
into
lcall
dec
sub
dec
imul
mov
shrb
call
jmp
in
bound
xor
repnz
fidivrl
sbb
cmp
hlt
rorl
bound
inc
frstor
arpl
pop
enter
xchg
cmp
dec
mov
and
pusha
jmp
mov
xchg
popf
dec
or
das
mov
mov
sbbl
stc
xor
ret
push
jge
jl
mov
inc
jmp
aas
push
xor
outsl
push
cmp
subl
push
es
pop
jmp
sti
out
push
flds
sub
pop
or
mov
les
lods
pop
leave
adc
pop
aaa
and
sub
mov
jmp
pusha
aas
push
daa
dec
mov
lock
mov
out
xor
flds
aas
in
xor
xor
jmp
inc
add
icebp
lods
lret
out
jmp
push
and
dec
xor
pop
sub
jg
xchg
leave
sbb
or
sbb
in
jmp
push
cmc
fstpt
insb
sub
jnp
adc
mov
outsb
call
mov
pop
lahf
insb
cs
repnz
negl
pop
jo
popa
mov
sub
lods
pop
es
sub
pop
mov
or
shl
lods
in
out
int3
xor
push
int
jmp
std
push
stos
movsl
sbb
lods
sub
insb
sub
loop
sbb
pop
outsb
mov
dec
pop
inc
andl
outsb
shrl
shlb
mov
push
test
mov
adc
jl
xchg
scas
push
and
jmp
pop
ljmp
lock
cltd
xchg
mov
jmp
and
inc
jmp
pop
loopne
push
mov
and
jmp
or
fldl
jmp
sbb
fidivrl
mov
add
lods
xor
sub
adc
jmp
fs
sbb
sbb
daa
es
jmp
movsb
enter
adc
jmp
loope
mov
jmp
mov
jbe
cmpsl
lods
inc
xlat
mov
loopne
mov
lcall
aas
xchg
sub
or
push
iret
loop
js
in
lds
mov
pop
and
shlb
jmp
push
inc
add
pop
jns
fwait
sbbl
and
dec
mov
jmp
movsl
inc
std
cli
lret
sub
scas
std
jmp
test
xor
jb
sub
xor
int3
sti
push
pop
data16
mov
aam
sbbl
mov
mov
cld
xor
movsb
xchg
out
mov
arpl
sbb
jmp
cmp
jmp
sbb
xchg
sub
dec
jmp
filds
pop
test
movsl
test
movsb
xlat
mov
pusha
mov
jmp
mov
adc
or
add
xorb
push
lods
loop
push
lods
mov
addr16
sti
lock
cmpsl
daa
fucomip
xchg
int3
fs
xlat
mov
loope
fst
and
int3
nop
cmc
fimull
outsb
sub
fdivrl
add
jmp
sarl
pop
dec
es
pusha
enter
jmp
mov
add
lods
cmp
out
mov
sub
add
mov
push
enter
jmp
pop
arpl
int
sbb
jmp
add
sub
jg
rorl
jmp
add
mov
inc
dec
pop
jmp
jno
jecxz
mov
inc
dec
adc
jle
and
mov
fnsave
lahf
scas
pop
cmp
push
lcall
xor
imul
or
insl
jmp
push
arpl
jge
outsl
jmp
test
pusha
mov
xchg
xchg
jmp
push
sub
ljmp
jp
push
sbb
xchg
jmp
sbb
mov
jmp
xchg
lret
or
dec
in
scas
sbb
push
adc
arpl
inc
push
gs
sbb
lcall
jmp
sbb
mov
xchg
lods
jmp
jmp
shlb
loope
sti
adc
mov
cmp
mov
test
ljmp
outsb
mov
or
jmp
testl
in
sti
cwtl
sbb
mov
jno
cltd
ret
push
lea
cmp
xchg
jmp
jp
adc
imul
std
sbb
jb
das
stos
and
xor
mov
dec
out
bound
cmp
lahf
jmp
icebp
les
and
xor
ret
scas
add
pusha
fdivp
mov
fisubrl
test
lods
cld
mov
sbb
repz
jmp
pusha
in
push
out
jbe
repnz
aas
js
jno
jmp
imul
jmp
dec
jne
or
scas
ja
inc
sub
add
hlt
sub
or
sub
es
cltd
sahf
ret
lret
es
jmp
and
ljmp
xor
sbb
xor
shlb
ss
pop
sti
adc
push
jmp
mov
mov
call
xchg
jb
sbbb
arpl
in
xor
xchg
loop
dec
dec
lret
mov
data16
jp
cmp
sub
push
sbb
and
cmpsb
push
pop
xchg
pop
jbe
out
fsubr
outsb
out
fs
lret
jp
mov
in
data16
mov
fstps
xchg
outsb
jmp
cmp
sub
imul
in
pushf
lret
lret
jmp
nop
test
dec
mov
lds
sub
and
loope
xor
adc
in
cmpsb
inc
aam
fs
and
jmp
subb
sub
push
and
xchg
adc
dec
iret
push
or
add
pop
inc
jmp
mov
cmpsb
jp
pushf
ds
lret
int3
scas
loopne
lods
cwtl
leave
and
xchg
lock
jmp
push
stos
lods
mov
jmp
mov
add
and
arpl
jne
pop
mov
mov
in
jmp
test
jmp
jmp
daa
adc
jg
mov
loope
jno
jnp
repz
mov
out
mov
cmpsb
jl
pop
pop
gs
jmp
push
mov
lcall
push
mov
sbb
jmp
leave
ss
sbb
shll
shrb
mov
add
mov
test
lods
pop
cmp
aas
sarb
cmp
ror
jmp
fidivs
dec
sub
mov
daa
outsl
ss
aad
add
fadds
xor
dec
test
jecxz
std
sbb
add
in
divb
nop
jp
push
outsl
mov
jmp
mov
sub
or
cmp
xchg
mov
mov
rorl
enter
mov
pop
test
or
dec
pushf
push
xchg
repz
jmp
mov
pop
or
pop
xchg
pop
cmpsl
xchg
repz
dec
jmp
push
or
and
pop
cld
arpl
js
lods
in
sub
es
jecxz
add
stos
imul
xchg
sbb
lret
stos
mov
daa
es
xor
aas
lret
pop
sbb
enter
adc
mov
sti
and
mov
lods
push
pop
int
mov
lret
add
xchg
jae
xor
adc
stc
push
xor
fsubl
cmp
popf
out
pop
jmp
scas
pushf
out
adc
shll
into
xor
leave
inc
cmp
or
fcoml
out
push
nop
mov
out
and
cmc
movsb
sti
out
adc
lea
bnd
or
jmp
lock
pop
cmovb
sub
repz
call
jl
outsb
cmp
inc
or
push
and
sbb
mov
dec
cmp
xor
or
jmp
call
adc
jb
je
sbb
lods
orb
or
or
xor
repz
enter
aas
int
mov
mov
adc
ret
outsb
loopne
jae
mull
aad
jmp
cmp
jg
ficoms
jbe
loopne
jmp
cmpsb
ret
dec
dec
adc
sub
ljmp
insl
mov
sub
imul
xchg
jl,pn
lahf
jb
mov
pop
adc
add
sbb
es
xor
jmp
decl
in
lods
mov
mov
repz
fs
inc
adc
sti
stos
icebp
push
or
xor
pop
lds
jmp
je
jbe
pop
aam
xchg
jae
arpl
or
sbb
push
mov
inc
stos
aaa
cmp
fisttpll
xor
pop
jmp
dec
xchg
jb
fucomip
inc
scas
out
jmp
jno
cld
pop
bound
int3
add
inc
sub
jmp
sbb
jns
jmp
or
ficoml
loope
mov
mov
pop
pop
jmp
xlat
in
xor
jp
jmp
and
xor
orb
scas
jecxz
jge
sti
or
push
jns
pushl
push
sbb
int3
out
popf
sub
pop
inc
and
cmp
sbb
add
xchg
lods
das
out
in
sub
aam
out
jmp
clc
fcoms
jmp
pop
je
push
jg
rorb
mov
enter
sub
daa
mov
xlat
or
in
mov
imul
jns
out
and
scas
nop
jg
sbb
outsb
outsb
aaa
pusha
xlat
jae
mov
and
lahf
jmp
popa
xor
xchg
jo
sarb
jmp
cmpb
subb
jmp
in
add
sub
sbb
cld
scas
mov
shlb
jns
jp
into
adc
cmp
jmp
int3
jecxz
sbb
sub
fs
mov
inc
pop
push
int
ret
les
and
xchg
push
test
sub
repz
jge
arpl
lods
cmp
mov
mov
into
xchg
inc
inc
push
lods
repnz
xchg
sbb
jns
cmpsb
mov
outsl
pop
mov
lcall
xchg
aad
jae
cmp
rcrl
push
mov
lock
xchg
and
imul
jmp
gs
cmp
lods
mov
add
lods
add
xchg
daa
or
sti
in
push
movsl
mov
sbb
xchg
test
jle
fpatan
push
fildl
dec
jmp
mov
adc
jmp
outsl
fidivrs
pop
test
scas
es
sar
hlt
sbb
enter
sub
pop
xchg
addb
and
xor
push
test
out
push
inc
je
and
sar
rcrb
int
mov
lret
inc
add
mov
mov
adc
push
dec
repz
rolb
sub
iret
mov
daa
cmp
pop
outsb
ss
repz
xchg
mov
ljmp
cmp
orb
mov
stc
in
mov
sub
sbb
dec
xor
or
fldt
jae
push
pop
add
jmp
andl
sub
jmp
fistpll
loope
cmpsl
pop
jmp
push
or
gs
adc
jmp
arpl
jg
imul
icebp
mov
lcall
and
jmp
pop
inc
mov
jmp
dec
fsubs
pop
clc
sbb
fstpl
cmc
roll
mov
sbb
fs
sub
add
sub
cwtl
mov
cmpsl
je
push
jmp
push
inc
push
add
mov
sbb
lods
cmc
sub
fnstenv
stos
fildll
sbb
or
jno
push
inc
add
ret
movsb
jo
jmp
and
mov
gs
mov
mov
adc
lods
and
ret
cmc
cmp
je
lret
jmp
mov
fnstenv
in
in
add
ja
jmp
in
shlb
sarl
imul
dec
pusha
dec
sub
xchg
bound
imul
cmpsb
xchg
repz
lods
xlat
lock
fdivl
nop
jmp
sbb
cmp
xchg
or
xlat
scas
mov
cmpsl
jp
jmp
ret
adc
dec
jmp
setge
push
pop
pop
popa
outsb
sbb
das
adc
pop
or
cld
push
dec
jmp
addr16
mov
mov
in
jb
add
lods
mov
sbb
or
xor
or
jne
inc
mov
fistpl
sbb
sub
out
sub
mov
inc
hlt
pop
jmp
mov
sbb
and
lock
movsb
dec
inc
inc
lret
sub
clc
cmp
sbb
push
pop
push
and
fdivs
cltd
out
sbb
push
add
xchg
in
je
adc
sbb
push
xor
fistpl
pop
jmp
int3
call
sub
add
loopne
aam
lcall
orl
lea
xor
jmp
mov
fidivs
inc
in
pop
ljmp
push
inc
setl
sub
stc
inc
lcall
sub
sub
xchg
xlat
ja
sub
add
shll
scas
mov
xor
or
jp
jmp
push
jns
es
jmp
std
cmp
or
lods
aaa
fwait
and
jecxz
aas
jmp
push
jmp
push
je
repz
push
das
les
stc
jmp
outsb
or
outsb
int3
cmpsw
mov
xchg
mov
sub
push
sbb
test
push
mov
xchg
add
pushf
icebp
mov
repnz
pop
or
or
adc
adc
stos
jmp
into
xchg
loope
lret
and
mov
scas
mov
pop
rcrb
shrl
jmp
call
outsl
mov
shll
pusha
cmpl
fucomi
push
and
mov
push
dec
or
cmp
fcoml
pop
aas
sbb
xchg
inc
loopne
sub
jb
xchg
lcall
inc
jmp
cmpsb
cltd
mov
pop
loop
jmp
clc
aad
jne
or
or
jmp
ret
sub
icebp
es
push
aad
and
jmp
jmp
scas
xor
xchg
and
inc
out
push
adc
in
test
iret
mov
push
test
sub
outsb
jg
sbb
pop
je
jmp
push
and
lods
fisttpll
addr16
and
add
or
orps
xor
and
xor
cld
mov
fidivs
pop
popf
aam
pop
jno
or
dec
jmp
cltd
push
dec
sar
and
sub
adc
pop
lret
pusha
jmp
inc
test
repnz
in
stos
or
cmp
popf
sub
cmp
jmp
test
push
insb
out
sbb
jg
clc
dec
jo
jmp
popf
jl
mov
push
and
dec
push
mov
repnz
ljmp
inc
sub
cs
and
sbb
add
pop
outsl
sub
sbb
adc
push
mov
mov
adc
mov
add
sbb
push
sti
jecxz
cmc
cmpsb
daa
leave
adc
sub
pop
mov
scas
test
cltd
outsl
cltd
in
and
stos
xchg
xchg
sbb
inc
jmp
rolb
pop
in
ljmp
pop
mov
es
or
and
jmp
jns
cmp
scas
push
into
mov
cmpsl
popf
fmull
xchg
icebp
sbb
sbb
or
sub
shlb
pop
mov
push
xor
cmp
jnp
jbe
cmpsl
bound
test
and
mov
call
add
aaa
mov
xor
loopne
stc
adc
add
fwait
ljmp
push
ja
sbb
imul
mov
fsubrs
imul
ret
add
pop
jmp
subb
xchg
and
incl
dec
sub
rcll
sbb
pop
imul
jns
shr
inc
and
cmp
mov
xchg
pop
pop
shlb
jl
nop
in
lods
leave
sbb
sbb
imull
das
mov
and
jbe
outsl
outsb
lods
push
movsb
jp
aas
aam
jmp
sub
cmp
push
sub
pusha
fs
mov
aaa
mov
sub
sub
pop
or
cli
jmp
jecxz
mov
stc
jbe
jmp
test
ja
jmp
pop
shlb
adc
push
jmp
nop
movsb
imul
cmc
lea
cli
mov
sub
add
jp
fistl
sub
xchg
imul
push
and
xor
packsswb
push
jmp
aaa
ret
enter
push
jbe
xchg
sub
jo
pop
sbb
in
prefetch
imul
xor
stos
xor
inc
jmp
pop
xchg
iret
imul
aaa
jmp
lcall
daa
mov
in
jmp
mov
sarb
out
test
lods
dec
cmpsb
cmp
int3
notb
dec
popa
or
and
adc
jmp
inc
or
jmp
les
dec
mov
push
xchg
addr16
clc
cmp
jp
scas
pusha
jmp
xor
mov
scas
mov
outsl
xchg
stos
dec
xchg
mov
jp
jmp
add
andb
jb
xchg
sti
jg
paddusb
xor
repz
jmp
or
lret
push
fs
lods
push
mov
or
fwait
ljmp
adc
mov
or
jmp
jo
xchg
xchg
sub
cwtl
jg
lds
sbb
stos
jmp
cmp
fadds
push
adc
mov
push
sub
or
mov
jge
imul
popa
mov
add
mov
int
adc
rolb
cmp
dec
sub
jle
pop
sbbl
xor
jmp
into
jp
xor
test
xchg
and
cmp
out
xchg
jns
gs
jne
inc
sub
pop
imul
mov
jnp
repz
dec
add
adc
lods
imul
shrb
jns
sbb
sub
fldcw
push
jmp
mov
pop
jg
in
inc
jmp
xor
fcmovnbe
pop
add
decl
bnd
test
in
dec
lahf
jmp
iret
push
pusha
scas
and
jmp
ds
mov
jmp
adc
push
jmp
pop
adc
sub
or
mov
sbb
jns
sub
ss
jb
lea
repz
aad
fs
hlt
negb
cmp
pop
dec
jp
scas
add
data16
and
in
or
or
iret
jmp
adc
mov
push
push
loope
rolb
or
addr16
sub
jp
jmp
enter
pop
shrl
or
dec
jmp
in
lods
mov
jo
enter
push
sti
or
jb
das
out
scas
fistpl
mov
mov
jmp
or
adc
clc
imul
push
push
inc
loope
fucomp
jp
icebp
adc
jmp
ja
jle
test
jmp
int3
jbe
fsubrs
clc
adc
jns
xor
xlat
jmp
cld
aam
xor
xchg
cmp
and
scas
mov
mov
xchg
hlt
divl
mov
add
sahf
push
jb
cmp
sub
jbe
adcl
outsb
cmp
movsb
xlat
and
mov
jae
fsubrs
repz
jl
mov
cmp
clc
or
scas
jmp
mov
inc
sub
in
jg
jmp
dec
je
jge
popf
mov
jb
mov
iret
jmp
push
inc
push
gs
out
jo
ja
jmp
shl
cmp
and
lea
xlat
xchg
add
jmp
dec
push
scas
in
insl
jmp
dec
adc
and
xchg
push
xor
lock
dec
out
mov
stos
add
cld
sub
addb
shll
sar
aam
out
aas
cmp
inc
push
in
icebp
int3
shlb
fcoml
clc
adc
pop
mov
retw
scas
mov
addr16
push
jmp
mov
lock
jmp
and
in
cmp
jmp
push
mov
dec
int
inc
lods
sub
sub
mov
fwait
mov
les
mov
sub
jae
repz
stc
test
sti
mov
lods
rep
inc
adc
and
orl
inc
repnz
mov
aad
sbb
sbb
push
lods
push
ss
cmp
adc
daa
pop
pop
sbb
mov
dec
sbb
pop
and
lret
testl
mov
fildl
push
out
xor
fs
pusha
jmp
inc
add
jmp
outsb
out
imul
daa
mov
arpl
mov
insl
aam
jmp
std
mov
mov
pop
push
fsubr
iret
out
jmp
mov
test
fnstcw
sub
mov
jg
sti
andl
repnz
lods
jmp
and
jmp
lock
inc
test
xor
jmp
dec
ds
xchg
rorl
mov
push
and
repnz
or
rcrl
inc
pop
outsl
or
adc
stc
adc
stos
xor
lahf
adc
sub
enter
pop
popf
and
lods
lods
xor
inc
hlt
and
out
xchg
fucomip
jecxz
mov
ja
xor
mov
lods
pop
arpl
or
cmpsl
in
pop
jmp
xchg
xor
or
push
mov
sbb
lea
adc
push
mov
clc
repz
or
jp
in
lods
sbb
push
subb
jmp
jl
mov
or
in
stos
or
test
sub
or
mov
jmp
fstpl
jmp
lds
shr
xchg
std
push
adc
mov
icebp
jmp
mov
pop
repnz
inc
scas
sti
loop
cmpsl
jmp
xor
push
sub
jae
or
jmp
mov
push
xchg
fildl
adc
lcall
stc
sbb
and
lds
push
fwait
cs
movl
mov
outsl
and
outsb
into
cmpsb
test
jbe
adc
cmp
test
fdivl
xchg
push
aaa
pusha
jae
mov
andb
and
add
cmp
lods
xor
mov
jmp
nop
loope
iretw
jbe
aas
pop
xchg
sti
fisttpll
shr
add
cld
lahf
adc
and
mov
lret
jmp
cltd
inc
inc
sbb
aaa
jmp
movsl
pop
stc
mov
inc
ljmp
sub
xchg
dec
xlat
nop
sbb
mov
dec
stos
inc
rol
bound
push
popa
or
sub
push
cmp
bound
add
and
inc
fmul
sti
sub
leave
lcall
jmp
lods
lock
mov
push
aad
pop
ds
add
clc
sarb
xor
jne
push
sbb
mov
lret
jmp
out
popf
pop
xor
std
sahf
hlt
jmp
push
arpl
push
mov
stc
stos
scas
loop
in
jne
push
xorl
jmp
ret
leave
dec
mov
adc
add
and
out
jmp
adc
setns
in
test
out
mov
push
mov
sub
movsb
mov
jmp
ljmp
repnz
xchg
outsb
sahf
xchg
mov
jmp
adc
por
cmp
adc
pop
pop
jmp
movsb
addr16
in
xlat
cmpsl
loopne
test
push
pop
push
jmp
dec
sti
adc
dec
stc
or
sbb
lods
push
imul
sbb
mov
xchg
mov
jmp
out
testb
lret
pop
jmp
push
dec
add
mov
mov
or
jecxz
daa
push
jmp
cmp
mov
jmp
je
repz
leave
lret
rorb
jmp
fimull
aad
pop
cmp
incl
hlt
in
jns
mov
cmp
push
push
fldcw
cmp
leave
xchg
ljmp
or
rolb
pop
sahf
lret
ss
cmp
cmp
lods
ret
mov
repnz
outsb
pop
dec
daa
stc
or
xchg
inc
or
add
inc
or
and
jmp
outsb
mov
loope
cmp
fs
jle
rcrl
adc
test
xchg
jmp
and
mov
jns
lods
jmp
pop
jle
adc
mov
stc
in
jmp
push
out
insl
mov
lods
lret
mov
lcall
jmp
push
sbb
adc
mov
dec
ret
jmp
std
sub
movsl
dec
lods
xchg
jecxz
pop
mov
jmp
cmp
addr16
xor
imul
mov
xor
add
dec
mov
jmp
push
dec
jnp
outsb
sub
xlat
cltd
or
adc
sti
pop
mov
test
cs
mov
mov
jnp
aas
lods
push
adc
imul
jmp
adc
rcll
stc
iret
jmp
sub
pop
icebp
dec
or
cmp
adcb
fisubrs
es
adc
scas
mov
jmp
inc
aad
data16
dec
lds
or
cmp
jmp
mov
sbb
lods
push
xchg
out
jl
jb
inc
adc
imul
mov
jmp
loopne
pusha
loope
fisubrl
jmp
popa
jge
pop
xchg
testb
sti
push
add
inc
fldcw
js
push
in
outsb
sbb
scas
jmp
mov
mov
pop
out
jmp
xor
jg
mov
call
jmp
shll
sub
iret
adc
loop
jmp
shl
clc
stos
arpl
sbb
shlb
repnz
pop
sub
cmp
add
xor
xchg
lock
dec
cmpsb
push
fidivl
xchg
jmp
pop
jnp
push
mov
cli
adc
arpl
ret
vandps
and
loopne
mov
out
jns
pop
or
pop
mov
jnp
test
dec
sti
fisttps
rcr
add
jmp
pop
sbb
jmp
bound
push
outsb
addl
add
xlat
adc
jmp
out
or
fimuls
push
mov
pop
fwait
lret
jmp
xor
dec
sbb
aam
mov
mov
outsl
lods
and
lret
pusha
add
or
sbb
adcl
dec
je
sbb
mov
sub
jg
hlt
xchg
rcrb
add
scas
or
popa
insl
fs
mov
inc
lret
jmp
repnz
mov
cltd
mov
xchg
mov
add
mov
sbb
cwtl
sub
sbb
dec
jno
outsl
mov
orl
and
jmp
insl
jmp
inc
jmp
jo
jg
or
cmpsb
sti
int3
dec
out
in
jne
cs
ljmp
and
imulb
mov
sti
stos
xor
popf
xchg
addr16
js
sub
jmp
in
sub
outsb
dec
outsb
testl
jmp
stos
pop
push
fs
fucomp
jge
ret
xor
es
inc
inc
repnz
lods
testb
pop
cmp
cmp
jmp
add
jo
mov
mov
addr16
rorl
sub
or
inc
push
lcall
fwait
test
pop
outsb
aad
adc
or
add
mov
stc
insl
xor
xor
dec
pushf
inc
mov
enter
jmp
inc
out
rorb
stos
clc
pop
mov
xchg
jmp
aas
movsl
sbb
ret
hlt
sahf
into
add
dec
std
xor
push
mov
jb
into
shll
sbb
push
jmp
jge
in
add
mov
ret
lock
jmp
repnz
mov
xor
xchg
sub
lods
mov
push
ds
inc
dec
in
mov
sub
and
cmpsl
in
lret
jle
es
lcall
xchg
sbb
jmp
xchg
cmp
pop
scas
das
jge
adc
ret
sbb
push
ja
in
cld
jbe
dec
mov
and
addr16
jmp
les
push
xchg
sub
orb
lcall
jecxz
enter
inc
jns
sti
cmp
jne
call
ss
ret
ret
les
fdiv
mov
mov
hlt
mov
cmp
jmp
jmp
jbe
outsb
aam
mov
and
sar
xor
mov
lods
inc
mov
fldz
repz
jp
cli
cwtl
pop
sti
mov
imul
pop
imull
push
es
jmp
push
mov
test
sub
ret
jle
aad
lcall
call
jmp
movb
push
inc
add
hlt
jnp
call
sub
jno
cmpsb
addr16
mov
push
jmp
aas
aaa
call
jmp
loope
mov
lods
or
fidivrs
push
jmp
cmp
stc
sub
adc
adc
stos
jae
jmp
mov
pop
dec
in
xor
mov
jmp
and
sbb
dec
adc
stc
hlt
dec
decb
sub
jmp
mov
mov
xor
push
ret
add
lret
call
pop
mov
inc
loope
aaa
xlat
stos
enter
sub
jb
jmp
pushf
add
das
and
sub
popa
xorl
sbb
test
in
jmp
lods
inc
fcoms
insb
push
jmp
imul
jmp
pop
clc
pop
inc
scas
sti
jmp
adc
jns
ret
jmp
gs
pop
arpl
xchg
sub
or
mov
roll
and
sbb
mov
loop
in
lahf
xor
lds
jle
divl
adc
jecxz
outsb
sub
ss
sbb
fsubrs
gs
pop
pop
xchg
xchg
popa
scas
and
mov
push
push
fcoms
jb
addl
int
jmp
sti
lock
jle
xchg
sub
sbb
inc
out
push
and
or
ljmp
mov
pusha
mov
int
jmp
jb
jle
rorb
shlb
in
jmp
cwtl
sti
rcrb
aam
or
lods
std
jns
xchg
iret
leave
in
sub
sbb
cmp
popa
lret
outsb
cmp
test
push
and
inc
ret
sub
dec
jmp
add
sbb
cmpsl
xor
fs
jmp
jge
stos
xlat
in
dec
neg
and
popa
adc
mov
inc
dec
xor
dec
inc
inc
sbb
mov
dec
jmp
aam
ds
repnz
outsb
or
sti
cmp
outsl
and
cmp
xor
pop
and
jmp
jno
out
cmpsl
jecxz
jmp
mov
sub
popf
jne
inc
imul
jmp
add
imul
mov
jmp
mov
js
jmp
cmp
movsb
or
sbb
movb
fists
sbb
adc
xor
ljmp
sarb
mov
or
jmp
lahf
push
in
fiaddl
mov
pop
lretw
add
fsubr
aam
xor
fsubrp
jmp
inc
out
or
stos
scas
loope
push
dec
in
lods
gs
cs
pusha
push
sub
adc
sbb
stos
push
push
out
pop
into
jecxz
leave
rorl
outsb
cwtl
mov
mov
and
insl
lahf
aad
jl
and
sub
sub
xlat
rcll
jo
pop
data16
cmp
push
or
sub
dec
ret
repz
enter
sbb
daa
sarl
lods
into
sub
mov
or
mov
in
popa
xchg
sbb
loop
les
dec
fcmovnbe
int
pop
jmp
jne
test
lds
lods
and
inc
sbb
mov
aaa
lods
xlat
mov
dec
jmp
pop
js
in
sub
lret
movsb
jmp
sahf
xchg
mov
sbb
test
xorl
adc
shrl
in
iret
jmp
jae
dec
in
fidivrl
das
mov
lahf
imul
or
xchg
jmp
inc
in
cmp
jmp
arpl
sbb
lea
ja
into
aaa
mov
adc
and
stos
or
and
cli
jge
jmp
lret
popa
out
jmp
xor
imul
arpl
mov
push
or
shl
icebp
xchg
aaa
roll
cld
inc
jmp
pop
insb
adc
stc
xchg
jb
arpl
adcb
inc
idiv
lods
dec
call
rolb
lods
fmull
or
push
xor
mov
sbb
add
loopne
jmp
and
jl
mov
dec
cli
sub
jecxz
sub
nop
cld
into
xsavec
and
jb
aaa
ret
jne
mov
aad
sub
outsl
test
sbb
sub
xchg
arpl
jmp
push
add
push
jmp
cmpsl
mov
sbb
inc
addr16
cmpsb
shlb
rcl
lods
and
add
repz
int
push
int3
sub
and
cli
inc
cmc
xchg
and
xor
addr16
xor
jmp
into
je
test
and
in
data16
test
sbb
xchg
adc
add
xchg
cltd
and
lods
or
and
mov
xor
xchg
mov
inc
jmp
jb
test
lcall
das
or
jmp
hlt
sarl
jmp
or
and
lods
pop
xchg
jge
push
sub
shl
in
out
fwait
xorl
mov
imul
xchg
jmp
add
jmp
nop
lock
aad
daa
push
jb
pop
shrb
cmp
out
and
inc
adc
int3
jno
mov
cmp
test
dec
jg
jmp
adc
inc
cmp
fsubl
cmp
push
xor
scas
lods
js
cmp
push
jbe
push
loopne
pop
and
adc
mov
mov
dec
sarl
and
jmp
ret
dec
es
imul
pop
cmpsl
xchg
mov
xchg
cmpsb
jmp
mov
pop
push
jmp
xor
subl
movsb
jmp
int
mov
or
and
inc
mov
xchg
bound
mov
jmp
xchg
outsb
jnp
sub
sub
fistpl
adc
mov
inc
mov
jmp
lea
es
loope
jmp
daa
incl
lods
ret
sbb
loopne
sbb
mov
add
lods
jmp
xchg
pop
popf
adc
jmp
lds
adc
iret
pop
sar
sub
inc
jno
lcall
test
xor
call
jge
das
imul
jmp
cwtl
xchg
xchg
loopne
int
aaa
or
add
addr16
sbb
and
test
jmp
pop
int
pop
dec
xlat
jb
lret
dec
pop
aas
fldl
dec
and
push
add
adc
xchg
xchg
outsb
and
pop
sub
jmp
in
sbb
lret
mov
dec
mov
add
inc
jmp
and
lods
ja
or
negl
jl
mov
adc
and
jmp
sub
mov
incb
pop
add
jmp
inc
mov
push
outsl
sbb
xchg
mov
mov
les
mov
pop
xchg
mov
mov
jmp
push
mov
xchg
cwtl
cld
jmp
sub
lock
fcomip
out
mov
loope
shr
and
enter
push
fwait
lods
daa
sti
xchg
pop
pop
ret
sbb
sbb
mov
sar
jmp
sbb
mov
lods
mov
sbb
fistps
jmp
stos
dec
inc
icebp
aam
xlat
sub
fxch
arpl
lcall
inc
out
xlat
ret
push
xchg
jmp
mov
test
xchg
mov
jp
adc
int
outsb
jb
add
int3
pop
mov
push
data16
mov
scas
push
add
nop
jmp
pop
rol
sbb
cmpsl
mov
inc
add
push
push
in
in
jmp
jecxz
pop
mov
fidivl
outsb
mov
into
or
sub
scas
xor
mov
mov
sub
jmp
jmp
dec
cmp
fldpi
cmp
inc
jge
pop
sbb
and
inc
jns
or
mov
imul
test
lods
sub
mov
jmp
or
xor
add
shl
mov
push
cs
sub
pop
xlat
hlt
outsb
cmpl
inc
jmp
inc
aad
mov
fs
cmp
mov
pusha
push
fisubrs
cmpsb
mov
scas
fs
sar
sbb
mov
sub
jmp
xchg
pop
xor
enter
daa
lock
retw
fwait
shrl
jp
mov
adc
rcrb
dec
jmp
or
fistps
mov
test
cwtl
jmp
fildl
sub
arpl
cmpsb
pop
packssdw
jo
out
lods
xor
or
ja
lock
jp
push
jmp
dec
in
push
dec
jo
mov
xlat
jae
sub
jo
sbb
jmp
out
gs
js
sbb
dec
pop
lods
jecxz
jge
in
jmp
jo
lahf
xor
xchg
sub
test
jecxz
mov
jno
enter
movsb
scas
lock
sub
frstor
fldcw
jne
sub
lods
loopne
into
out
call
inc
out
lcall
jmp
js
in
mov
adc
sub
lret
pop
fucomp
adc
mov
inc
xorb
popf
and
outsb
mov
mov
in
dec
jmp
lret
xor
dec
dec
or
aam
ret
add
mov
inc
sbb
jmp
flds
fwait
jmp
jle
push
stos
rclb
cmp
adc
jmp
cwtl
movsl
inc
pushf
and
jmp
ficoml
or
imul
ss
mov
push
mov
sub
jmp
mov
mov
push
pop
ljmp
cmp
inc
push
repz
ficomps
loop
fmull
mov
pop
jmp
in
in
jmp
and
jl
push
jmp
clc
testl
adc
rorb
push
mov
or
stos
inc
jbe
dec
out
push
jmp
xor
pop
stos
adc
jmp
scas
pop
push
fidivl
jb
push
rorl
xchg
jge
ja
pushf
lods
ret
add
mov
inc
outsl
xorb
pusha
pop
pop
adc
das
fsubrs
push
stos
xchg
jmp
jecxz
je
fisubrs
jmp
mov
test
ret
in
xor
int
sbb
out
push
lcall
pusha
adc
and
add
mov
int
inc
roll
rep
jo
pop
insb
mov
data16
or
push
lods
mov
mov
or
inc
pop
mov
or
push
lea
jecxz
test
adc
xchg
icebp
pop
inc
jmp
lea
imul
xchg
in
add
leave
ds
fistl
pop
mov
cwtl
bnd
mov
jmp
push
jle
xor
push
sub
inc
in
adc
push
mov
lods
sub
lods
jmp
xor
xor
push
mov
xor
push
icebp
push
call
insl
lods
jnp
nop
arpl
mov
jmp
popa
stos
fadds
pusha
jmp
jle
push
adc
in
mov
loope
int
dec
lods
jmp
push
rcr
pop
xchg
stos
sbb
test
pop
xchg
inc
push
xor
and
dec
jmp
cmp
das
inc
and
jmp
negb
mov
nop
xor
pushf
sbb
sahf
iret
pop
jmp
jp
cmp
cmpsb
mov
inc
mov
add
or
dec
mov
mov
jmp
into
or
gs
or
jns
lret
inc
int
mov
out
outsb
sahf
mov
stos
jmp
dec
fwait
push
sbb
jb
sub
sahf
mov
movsl
insl
mov
inc
add
nop
sub
shll
in
cmpsl
stos
pushf
popf
or
test
add
jbe
lds
pop
and
pushf
inc
leave
iret
jno
jmp
mov
pop
rclb
stos
mov
add
and
stos
xchg
in
imul
add
jmp
dec
lcall
shll
mov
xchg
lock
or
leave
add
in
call
scas
xor
push
cli
adc
or
scas
sub
fnstsw
fisubrs
xchg
cmp
loope
lahf
xlat
rcrb
repnz
sbb
dec
lret
sahf
jmp
sbb
subb
sub
or
dec
jmp
lcall
xor
mov
xchg
or
inc
lods
lret
test
xchg
sbb
lods
dec
sti
jmp
aam
adc
daa
and
push
and
pop
pop
jmp
mov
aas
out
jb
mov
xchg
out
jmp
pop
in
fistpll
clc
shl
dec
push
jns
idiv
jle
xchg
pop
dec
loop
push
adc
pmullw
sub
std
hlt
or
rep
addr16
insl
in
ja
xchg
les
shl
out
push
ret
fldt
das
or
xchg
jmp
lahf
mov
sub
inc
icebp
fsubr
xchg
mov
mov
mov
icebp
jmp
cmpl
pop
lods
sahf
incb
mov
fwait
scas
mov
shr
jb
sbb
cmp
lret
xchg
out
arpl
jns
test
inc
rol
adc
mov
sub
pop
inc
and
rep
push
rcrb
xor
or
jae
aad
and
jmp
and
pop
out
dec
jmp
push
or
push
jnp
add
andl
cmp
jmp
test
jmp
adc
addl
fnstsw
scas
ja
enter
jp
ljmp
push
into
cs
push
add
lret
data16
fucomip
inc
sub
cmpsl
sbb
mov
and
or
lret
stos
jg
in
into
mov
push
ss
xor
stos
or
jge
cmpsb
jo
mov
add
mov
lods
jp
sub
cmp
pavgw
xor
insl
mov
push
inc
aam
jae
ss
push
lods
and
push
push
inc
dec
adc
add
jb
movsb
mov
cmp
lcall
xor
lds
mov
gs
jmp
cmp
add
out
push
scas
das
into
test
lret
jb
clc
mov
fwait
sti
jns
movsl
sub
pop
sub
je
out
imul
add
inc
addr16
jmp
push
aas
into
sbb
sbb
lret
lcall
loopne
mov
ja
repnz
xor
scas
mov
das
out
sbb
jge
jmp
ljmp
jmp
stos
dec
and
sbb
and
clc
or
or
cltd
test
stc
jnp
scas
leave
push
and
mov
mov
xor
imul
test
es
add
inc
mov
fnstenv
jo
push
sub
xlat
push
cmp
aas
mov
movsl
jmp
lods
outsb
stos
hlt
enter
cs
cmp
mov
xchg
repz
loopne
movsb
jmp
ss
popa
mov
inc
test
ret
pop
mov
mov
mov
fldcw
cmpsl
mov
out
sbb
mov
sti
mov
rolb
and
fwait
std
sbbb
addr16
movsb
xchg
pop
sub
adc
hlt
daa
xchg
xor
dec
sub
es
in
sbb
cmp
aam
or
lea
mov
xchg
cmp
mov
jmp
rcrb
sub
xchg
xchg
mov
cmpsl
pop
cmc
js
lds
je
push
pop
pop
subl
adc
int
pop
lret
jmp
daa
xor
xchg
inc
mov
and
pop
xchg
fwait
sbb
fsubrl
inc
xor
mov
mov
lods
movsb
int3
daa
pop
push
pop
jg
mov
push
push
int
mov
jmp
movsb
mov
jmp
mov
mov
jmp
mov
push
div
sbb
jmp
xor
stos
repnz
mov
mov
cmp
pop
add
js
adc
pop
in
jmp
fildll
ljmp
push
js
mov
mov
lods
xor
sub
rcrb
out
aas
lcall
lods
sahf
push
cmpsb
pop
icebp
pop
push
das
xchg
mov
sbb
inc
gs
or
xlat
stos
inc
pop
outsb
xchg
jg
or
inc
scas
jns
jmp
enter
pop
xchg
outsl
jmp
bound
fists
jmp
int
inc
push
xor
push
mov
sbb
cltd
pop
mov
jmp
xor
and
xchg
lods
push
adc
hlt
cwtl
and
fs
push
pop
test
stc
xlat
add
push
lret
adc
or
je
lahf
out
xchg
cmp
cmp
push
inc
pop
pop
and
cmpsb
popf
jmp
adc
je
test
mov
sbb
shld
out
les
jl
scas
and
jmp
dec
cwtl
push
fsubr
stc
scas
mov
pusha
sti
les
js
lods
lret
xchg
lea
cmovl
jmp
dec
data16
dec
jmp
mov
popf
outsl
idivb
adc
mov
xchg
jb
sahf
sbb
out
lock
adc
jmp
inc
xor
insb
push
lods
dec
xor
lods
sbb
adc
shlb
xor
out
fidivrs
mov
push
push
shrb
lods
outsb
test
inc
jmp
adc
jmp
pop
je
shrb
jl
mov
jmp
adc
sub
add
cwtl
insb
jmp
leave
scas
dec
roll
sbb
pop
xchg
sub
jmp
mov
jo
mov
in
es
outsb
lret
sarb
or
mov
cli
adc
cs
ret
adc
mov
pop
ja
cmp
add
xchg
mov
xlat
in
fstpl
fmul
adc
loope
lcall
ds
mov
xchg
cmp
ss
mov
jo
mov
stos
jmp
and
jmp
fisttpll
mov
mov
jmp
pop
and
push
in
sahf
pop
jmp
add
xchg
push
and
mov
jmp
adc
and
stos
push
pop
jmp
xor
in
gs
decb
shr
dec
push
call
jmp
mov
psubq
push
dec
jmp
jne
popf
loopne
xchg
inc
jp
sub
enter
loope
xor
jmp
xor
sbb
stos
push
add
mov
or
mov
imul
shr
ljmp
mov
sbb
dec
pop
sbb
jmp
aas
adc
js
cli
mov
or
jmp
mov
iret
push
xor
push
mov
inc
sbb
and
lahf
test
repz
stc
add
cmpsl
cmp
sub
fstps
mov
mov
jbe
scas
movsl
pop
jecxz
add
mov
je
jmp
adc
outsb
xor
cmpsb
push
mov
pop
inc
xor
stos
push
cmpb
outsl
data16
dec
jb
mov
pop
int
mulb
scas
jne
jo
xchg
sub
mov
jmp
cmpsb
stc
in
in
dec
sub
push
mov
mov
mov
xor
jmp
sbb
inc
maskmovq
xor
add
xor
sub
and
scas
dec
icebp
sar
sub
cmc
out
clc
int
xor
adc
les
pop
repz
loope
das
fsts
mov
jmp
inc
add
jmp
scas
cmpsl
add
jmp
mov
dec
fsubrp
out
fistl
dec
mov
jnp
jmp
lock
mov
pusha
xor
xchg
lret
mov
and
aad
lret
gs
pop
bound
fisubrs
scas
idivb
mov
jmp
and
test
movsb
imul
bound
outsl
jb
dec
int
sub
jmp
fimuls
bound
jno
fistpl
push
jmp
cmp
daa
sbb
add
xor
imul
jmp
stos
test
insl
or
push
fs
bnd
cmpsl
xlat
push
or
cs
into
dec
in
lret
pusha
jmp
mov
fucomp
mov
jae
test
outsb
ret
ret
and
pop
jmp
pushf
and
ret
ds
dec
xor
push
cs
pop
outsb
jmp
popf
sbb
and
cwtl
jmp
cmp
adc
cmpsb
jp
xchg
int3
mov
ljmp
lods
add
mov
or
outsb
movsl
pop
cmp
xlat
jl
pop
jmp
fnsave
pop
sbb
xor
pop
repnz
in
jo
jmp
mull
sub
mov
sbb
stc
jmp
push
bound
ja
loopne
cli
jmp
jle
cmove
push
adc
pop
mov
leave
pop
cmp
adcb
jmp
adc
dec
mov
cmp
push
jmp
and
jmp
popf
pop
jo
stos
fisttpl
imul
mov
and
call
sub
add
movsl
sbb
in
xchg
imul
fwait
jle
sbb
inc
lds
mov
shll
and
dec
imul
mov
xor
out
sub
cwtl
jmp
fnstcw
out
fistps
push
jmp
jge
imulb
xchg
jbe
push
popa
into
sub
loope
insl
es
jns
lret
and
sub
cmp
mov
and
or
in
std
dec
mov
sub
or
xor
pusha
hlt
xchg
decl
xlat
outsl
inc
mov
imul
jmp
push
les
repnz
mov
jns
decb
adc
fnstenv
ret
adc
dec
or
jmp
outsb
popf
pushf
orb
jo
hlt
imull
and
sti
jmp
daa
rcrl
repz
dec
cli
incb
fadds
pop
daa
dec
stc
mov
jno
mov
xor
add
movsl
inc
stos
xor
hlt
jmp
push
mov
ret
push
jmp
sub
sub
loope
add
cmc
clc
out
pop
inc
cmovs
xor
add
sub
mov
rorl
ficompl
mov
jmp
mov
mov
aas
sub
xchg
popf
add
cmp
push
std
lcall
cld
sub
ret
or
aad
xchg
mov
xchg
scas
sbb
mov
or
loop
pop
sbb
add
outsb
xorb
jmp
inc
push
push
fucomi
ret
jmp
push
mov
mov
sbb
jmp
pop
movsl
mov
adc
or
mov
setae
sub
add
jnp
cli
pop
sti
out
daa
and
fistpl
mov
jmp
and
js
outsb
jb
push
push
jmp
dec
call
mov
jae
or
or
idivb
cmp
jmp
xlat
pusha
dec
cmpsl
inc
mov
pop
scas
rorb
jmp
pop
xorl
add
jmp
xlat
pushf
or
xor
jg
or
stos
andl
dec
jo
sti
jmp
push
jecxz
sub
icebp
into
inc
cld
pmovmskb
jg
and
shrb
sbb
or
mov
cmp
adc
sub
push
dec
mov
sub
xchg
adc
ja
inc
jo
out
adc
int3
into
jmp
jle
push
js
push
sbb
cmp
mov
addl
movsl
daa
test
push
fcoms
xor
mov
xchg
jns
or
pushf
jmp
xorl
lods
inc
jecxz
int
and
jmp
dec
add
mov
mov
jp
mov
xchg
ficompl
push
pop
mov
dec
xchg
jge
pop
push
xor
jg
and
inc
loope
sahf
popf
xor
jmp
mov
fmulp
xor
adc
cld
pop
push
mov
jmp
mov
addr16
or
jns
jmp
shlb
sub
push
stc
arpl
int3
movb
pop
rcrl
dec
nop
adc
jmp
mov
out
leave
leave
push
jb
or
jmp
sbb
pop
sbb
in
stos
loope
scas
inc
scas
xor
mov
jns
jmp
adc
lds
imul
push
xchg
add
push
push
jecxz
jmp
push
test
mov
or
cmp
lods
addr16
dec
shll
xchg
call
lods
cmp
sub
jge
in
shll
out
push
fcmovne
jmp
xchg
push
jns
sbb
nop
cmp
mov
push
push
ljmp
sub
dec
pop
pushf
jmp
mov
movl
and
nop
xchg
jmp
lock
and
xchg
jmp
jb
xor
mov
xchg
xrelease
scas
push
jmp
and
je
xchg
mov
adc
push
push
insl
jmp
movsl
lahf
push
test
push
stos
dec
sti
aaa
icebp
jnp
fwait
lods
jno
leave
sbb
lods
repz
adc
and
cmc
mul
and
jmp
sbb
mov
xor
bound
mov
sub
jae
jge
jle
pop
push
push
mov
cmp
sti
xchg
gs
mov
push
imul
mov
iret
xchg
xchg
cs
jmp
push
push
insl
inc
aaa
jmp
call
mov
sub
or
pusha
js
cmp
add
xor
aaa
jle
xchg
pushf
jecxz
repnz
jmp
addr16
pop
stos
jl
jmp
ds
push
inc
and
imul
test
mov
imul
jmp
cld
int3
pop
pusha
popa
and
dec
sbb
stc
inc
movsb
jmp
out
jl
outsl
fiadds
jmp
clc
mov
lea
fisttpl
pop
aaa
adc
test
or
inc
push
popf
pop
cmp
jp
fdivl
cmpsb
xor
sbb
dec
pusha
jmp
inc
mov
js
idivl
push
repz
or
cmpsb
push
cmc
out
cmpsb
loope
sub
out
push
pop
sub
jmp
add
ljmp
clc
int3
xor
xchg
aad
add
jmp
inc
jmp
mov
push
pushf
cmc
pop
sbb
int3
enter
ljmp
jmp
dec
fcompl
jmp
cltd
jp
sbb
push
mov
cmp
pcmpeqw
push
js
lods
cmp
clc
lods
push
xor
jmp
and
cmpsb
jmp
jle
pop
test
or
ret
mov
idivb
pop
js
outsl
push
test
adc
adc
sbb
cmp
adc
pop
outsl
jmp
add
pushf
push
pop
pop
xchg
sub
jecxz
jmp
lahf
andb
inc
cmc
lds
xlat
dec
push
aad
inc
add
jmp
push
stos
inc
mov
jmp
cmp
and
in
and
inc
aam
cmpsb
sbb
mov
adc
mov
sti
repz
dec
lahf
or
cwtl
push
or
aaa
jmp
pop
lods
push
cmp
notb
in
adc
and
cmpsb
cmp
push
mov
mov
pop
punpcklwd
nop
sub
inc
pop
insb
test
mov
mov
rep
xchg
xchg
sub
ucomiss
clc
push
dec
or
loop
mov
push
add
xchg
outsb
pop
test
cwtl
int
jmp
mov
fwait
dec
daa
lods
imulb
push
lods
pop
cmp
enter
movb
fsubr
out
mov
shrb
dec
mov
xchg
or
sbb
mov
xor
sub
jp
add
pop
xchg
out
outsl
pop
push
mov
subb
pop
lret
xchg
or
cmpl
hlt
xchg
sbb
jae
popa
add
mov
ss
in
and
outsb
mov
aas
adc
sub
cmp
sbb
mov
lret
fs
xchg
sbb
scas
fsubl
mov
mov
jmp
pop
cmp
mov
addr16
jmp
cmpsb
hlt
mov
pushaw
mov
pop
stc
xchg
test
mov
jne
or
mov
fldt
test
and
lods
jmp
xchg
cwtl
sbb
sub
shlb
dec
lret
dec
jb
push
or
jge
imul
push
fildll
or
js
dec
or
jmp
in
add
or
insb
jmp
pop
and
call
lods
fists
xchg
jmp
add
mov
or
loopne
pop
cs
aad
sub
lea
pop
sbb
xor
pop
arpl
jmp
mov
scas
dec
out
pop
jmp
fs
push
xor
mov
or
jno
or
jmp
mov
lock
add
push
sub
sbb
out
movsl
test
xlat
sub
daa
jmp
scas
inc
pusha
in
cld
fucomip
jecxz
mov
pushf
jbe
xor
aas
imul
sub
jmp
xlat
aad
fcoml
leave
inc
dec
inc
pop
fcmovbe
adc
aam
lods
add
inc
daa
dec
lods
lret
repnz
leave
mov
aaa
jmp
inc
std
jmp
pushl
jmp
lods
inc
mov
rorb
arpl
scas
in
and
out
jmp
aad
sbb
jb
test
mov
es
add
sub
test
and
lock
mov
adc
pop
jmp
inc
out
cmp
pop
jno
jmp
lea
lahf
dec
xor
pushf
jmp
movsl
je
dec
out
jb
jns
or
sub
daa
pop
inc
jae
jmp
into
cli
push
lret
pop
jmp
push
icebp
add
ds
mov
pop
loop
xchg
dec
xchg
mov
xchg
mov
iret
fwait
jmp
push
push
xorl
xlat
sbb
ja
fwait
cmp
fs
es
inc
daa
inc
jmp
aaa
loope
mov
push
enter
into
add
testb
ret
dec
adc
jmp
xor
popf
sbb
cld
sub
out
aad
push
push
jmp
aam
test
jmp
sarb
test
out
dec
in
sbb
cmp
movsb
xchg
stc
scas
pushf
rcr
into
pop
jmp
ljmp
push
data16
movsl
addr16
mov
or
cmc
dec
push
push
jmp
ljmp
jmp
out
add
ljmp
sub
lods
in
inc
jmp
xor
je
pop
aam
xchg
aas
mov
push
jmp
mull
jecxz
sbb
imulb
or
rcl
lret
lahf
shl
mov
rclb
inc
test
lock
dec
push
jecxz
loope
lods
in
mov
outsb
jnp
jmp
das
sub
outsb
sarb
sbb
and
das
mov
and
jmp
loopne
mov
lods
xchg
jmp
mov
add
stc
mov
sub
test
jae
leave
pusha
jmp
inc
mov
cmp
clc
jno
mov
movsb
pop
or
sbb
inc
out
insl
push
je
repnz
fnstenv
xchg
dec
repnz
push
mov
cmp
jge
or
cltd
sbb
daa
jmp
xchg
out
jmp
stos
jle
cwtl
jmp
mov
sub
push
push
popa
push
and
xchg
jg
sbb
mov
mov
push
es
cmp
inc
xorl
xor
imul
or
aam
inc
and
add
popf
jp
lock
mov
dec
dec
dec
fldenv
outsl
aad
jmp
mov
jmp
adc
cmc
cmp
out
hlt
ds
fdivrs
sbb
mov
cmp
xor
mov
mov
mov
lods
filds
or
outsb
cmpsb
out
ljmp
jmp
test
nop
scas
cmpsl
push
push
scas
jmp
mov
ret
pop
and
jmp
push
repz
scas
jb
sub
sub
xchg
gs
xor
jo
ds
inc
xlat
and
cmpsb
sahf
test
pushf
test
std
fstps
jo
pop
adcl
lods
dec
lock
or
sahf
and
sbb
mov
lods
mov
pop
or
mov
lret
out
jmp
stos
and
pusha
jmp
mov
jae
jp
mov
push
xchg
mov
sub
cmp
pop
es
aas
test
pop
and
xchg
jmp
aad
mov
push
nop
xor
lret
movsb
sub
cmp
inc
xor
adc
pop
or
adc
push
testb
insb
popa
lods
xchg
andb
ss
fmuls
jne
inc
cltd
sbb
sub
mov
push
pop
xor
jmp
jns
gs
mov
mov
sbb
les
ja
jbe
sub
jne
rep
cmc
adc
push
ja
xchg
jmp
xor
dec
and
mov
xchg
sbb
xor
xchg
loope
notl
aas
xchg
jo
jno
add
repnz
movsl
jmp
sub
insb
int
xchg
sbb
std
push
lods
jmp
jae
lds
mov
enter
scas
cs
xchg
dec
push
push
sbb
mov
loop
adc
jmp
cltd
test
repz
in
addl
jae
decb
or
sub
dec
inc
xor
adc
test
push
call
jmp
fists
dec
jmp
push
fdivrl
pushf
mov
cmp
or
ss
mov
pop
dec
lahf
imul
or
dec
call
lods
xchg
dec
lea
and
inc
mov
add
stos
lret
push
lods
xor
movsl
scas
push
xor
or
jb
roll
sti
fidivrs
xchg
repnz
dec
jnp
icebp
jmp
xchg
push
stc
pop
jmp
add
outsb
enter
mov
fsub
dec
push
cmp
jmp
inc
iret
sbb
xchg
pop
imul
or
push
add
push
lea
jge
idivb
or
xlat
pop
jle
hlt
sahf
imul
lods
cmp
adc
inc
shrl
inc
pop
or
add
inc
push
enter
test
xchg
sub
in
jnp
movsl
pop
out
ret
or
sbb
or
push
in
sub
ror
es
xor
iret
fisttps
pop
sub
imul
scas
std
xor
jmp
sub
int
cmp
or
lock
xor
mov
push
jmp
jno
stos
popf
jmp
or
jle
cmpsl
mov
sbb
sbb
in
inc
jmp
std
movsb
pop
popa
pusha
daa
mov
mov
xlat
pop
neg
pushf
lods
jg
cmp
pusha
jne
push
jmp
inc
sarb
pop
cmp
xchg
dec
dec
jmp
jo
fisubrl
pop
jmp
iret
pop
or
pop
bnd
adc
pop
hlt
aas
stc
mov
es
fsubrp
jmp
jl
out
popf
sbb
xchg
jmp
pop
imul
ss
jmp
add
fldt
mov
mov
sub
jmp
jge
mov
fwait
push
lods
aad
loopne
push
adc
ljmp
xchg
add
cmpsl
jno
outsb
sbb
ret
mov
pop
cmp
pushf
cmp
or
in
push
in
xor
jmp
fdivrs
sub
imul
leave
jns
outsb
out
jmp
sbb
push
jo
mov
push
xlat
jge
pop
repz
jmp
dec
mov
adc
test
loope
cmpsb
push
scas
xchg
cwtl
lret
aam
dec
jne
in
sub
dec
xchg
or
and
adc
aaa
notl
jmp
ja
sbb
cli
enter
sti
push
jmp
test
lret
pushf
in
mov
push
jns
lods
daa
popf
arpl
add
pop
xor
mov
xor
ficoms
idivl
out
and
lods
sub
pop
sbb
repnz
dec
daa
scas
inc
lcall
gs
cmp
mov
aam
or
das
pop
inc
mov
sbb
sbb
add
sub
adc
sbb
sbb
dec
ret
pushf
pop
leave
movsl
out
push
scas
jmp
les
inc
add
into
jmp
aaa
lea
xor
ss
jmp
push
mov
dec
stos
pop
or
jno
jmp
xor
push
sbb
shrl
insl
fcmove
sub
shr
bswap
mov
in
dec
sahf
jne
out
adc
jmp
ficomps
adc
mov
ret
jle
imul
shrd
xchg
push
mov
sub
jmp
push
aas
xor
jmp
mov
rcrb
test
and
jmp
jmp
inc
pop
lods
mov
mov
rol
sbb
dec
add
jmp
hlt
fbld
into
jo
aam
icebp
lret
xor
lock
int3
jno
imul
ret
aam
loop
pop
lods
jmp
push
test
sahf
adc
fldpi
insb
cmp
fisttpll
push
data16
iret
jmp
mov
add
jmp
mov
stos
add
mov
push
roll
cltd
decb
rcrb
sbb
adc
mov
shl
mov
inc
mov
pop
mov
jnp
sbb
lret
or
jbe
mov
and
imul
inc
js
in
cmp
mov
sub
or
cmc
stos
and
jno
add
imul
xor
and
call
cmp
cld
push
jl
es
mov
mov
lds
repnz
jmp
inc
popf
dec
push
out
rcr
jno
cli
pop
mov
push
sbb
xchg
xor
jmp
test
inc
cmp
mov
jmp
and
movsl
xor
mov
inc
jmp
loopne
sbb
mov
jne
push
inc
push
or
pop
adc
adc
js
jmp
sbb
cmp
or
dec
arpl
xor
push
sbb
xor
lea
pop
int3
inc
push
repnz
jne
mov
loope
add
mov
or
add
dec
xchg
pop
faddl
adc
cmpsb
lret
cmp
xor
test
adc
lods
dec
jno
cmp
int
pop
ret
fs
jmp
aad
xchg
xor
popf
mov
cmp
lods
xchg
or
adc
out
sub
push
pushf
adc
je
push
xor
jo
mov
in
pop
dec
mov
cmpsb
xchg
jmp
cmp
outsl
inc
lods
out
cmp
adc
test
mov
int3
jmp
push
inc
mov
shrb
repz
scas
push
dec
enter
pushf
pop
shlb
mov
jns
int3
dec
inc
scas
inc
and
jmp
pop
xchg
jmp
ret
sub
cmp
sbb
cmp
add
jb
rorl
xor
stos
pop
jmp
out
and
jmp
in
pop
mov
sub
gs
in
adc
inc
add
jmp
mov
jo
mov
add
mov
testb
mov
sbb
push
dec
xor
mov
int3
jle
xlat
mov
lock
push
dec
imul
inc
mov
push
rcll
jmp
lods
repz
jbe
out
sti
mov
dec
lret
fcomps
jne
inc
push
push
add
xchg
dec
dec
sub
jmp
mov
mov
cmpsl
add
xor
js
icebp
shrl
adc
insl
pop
xchg
dec
sub
jnp
dec
mov
sub
cmp
jmp
int3
or
jp
xor
pop
jmp
pop
lret
adc
fnsave
les
jmp
pop
aas
ret
push
imul
or
repz
xchg
inc
xchg
int3
addr16
xor
in
adc
pop
repnz
dec
pop
jmp
lcall
imul
or
sti
lock
xchg
adc
xchg
sbb
shr
xchg
fmuls
inc
lods
and
or
divl
ljmp
jbe
pop
shlb
clc
out
pushf
sub
enter
jmp
cwtl
lock
inc
addr16
aad
jle
pop
lods
je
fs
jb
inc
ds
daa
ja
mov
adc
nop
stc
fimull
lods
cmpsl
iret
mov
dec
popa
cmp
out
jmp
imul
in
and
jl
les
daa
mov
jecxz
cmpsb
xchg
cmp
inc
cmp
and
mov
addr16
dec
mov
push
cmpsb
sub
cmpsb
jp
testb
mov
shll
mov
sti
mul
xchg
outsb
add
adc
pop
test
in
lret
push
sarl
add
sub
pop
mov
dec
pop
add
dec
sub
jmp
insl
iret
sbb
dec
lods
sub
push
mov
pop
xor
pop
dec
testl
jmp
lock
mov
sbb
mov
cltd
aaa
or
fmull
jbe
dec
push
in
sub
and
or
mov
test
jmp
iret
push
loopne
test
ret
push
ljmp
daa
jmp
cmpsl
scas
sbb
jns
sub
xlat
test
es
out
arpl
jmp
pop
test
jmp
lret
push
pop
mov
shr
mov
loopne
in
jl
imul
pop
in
and
ss
add
push
popf
outsl
mov
jmp
sahf
mov
sti
dec
cmc
movsl
jmp
and
lcall
add
lods
jb
daa
orb
cld
sbb
jae
or
xchg
lods
loopne
gs
into
test
push
add
fcmovne
cld
add
mov
and
iret
cltd
jb
cmp
or
cli
int
insl
dec
mov
push
jmp
fwait
or
pusha
mov
test
ficoms
mov
add
jmp
and
pushf
sub
or
fwait
sub
sub
xchg
adc
ficompl
dec
lods
ja
lods
in
jno
and
pop
mov
dec
sbb
out
mov
add
stos
rolb
repnz
mov
and
pop
push
mov
sub
xor
jmp
nop
pop
push
in
push
cmpsl
jmp
shll
sbb
dec
jmp
fidivl
insb
cmp
and
jmp
push
ret
adc
jmp
popf
sub
in
sbbb
fdivrl
mov
jmp
jge
mov
pop
shll
cmp
js
negl
jecxz
sub
sbb
movl
pop
jno
sbb
adc
push
mov
sub
jne
or
adc
jb
les
outsl
loopne
lods
imul
cmp
or
lock
roll
jmp
push
pop
mov
or
adc
sub
pop
mov
sbb
mov
push
add
in
std
or
ret
inc
test
sarl
ds
add
dec
jmp
lea
std
in
push
jmp
test
xchg
jmp
jb
jp
pop
or
inc
fidivl
xor
jmp
das
and
dec
jmp
movsb
or
sub
mov
xchg
testl
imul
xchg
filds
mov
jmp
stc
repz
or
jmp
fiadds
jg
cmp
nop
or
xchg
push
cli
loop
sub
cmpsl
test
lods
repnz
jmp
push
jmp
mov
lret
dec
jmp
xchg
sbb
jmp
xor
fcmovbe
cmp
pop
mov
adc
mov
iret
xchg
mov
outsl
and
jmp
inc
mov
push
adc
dec
bnd
cmpl
fbld
cmc
out
outsb
int
push
sarl
mov
stc
je
fbstp
cmp
int3
adc
inc
jmp
adc
out
mov
pushf
adc
testw
inc
inc
and
jmp
sbb
jbe
mov
adc
sti
inc
jb
push
pop
into
inc
jmp
push
cmp
sub
jbe
jmp
xchg
insl
add
or
jmp
mov
dec
cmp
por
and
cmp
mov
jp
jmp
in
jmp
ja
pop
ret
xchg
cmp
cmp
negl
movsb
sub
mov
iret
mov
inc
pop
bound
and
jmp
jmp
out
lods
mov
and
fwait
adc
xor
and
add
je
sub
mov
mov
inc
stc
push
cs
cmova
pop
mov
push
mov
push
stos
mov
fs
sub
xor
out
jle
adc
ljmp
lods
sar
sbb
adc
jo
icebp
xor
xorl
sbb
xchg
mov
dec
into
inc
pusha
sbbl
outsl
fs
clc
mov
movsb
enter
out
dec
xchg
ret
into
insb
push
pushf
lret
out
sub
ds
movsb
andb
inc
dec
mov
cmpl
lahf
out
imul
or
enter
xchg
repnz
adc
aam
stos
outsb
inc
lahf
adc
or
mov
mov
js
pop
test
lods
in
mov
xlat
std
dec
or
fwait
sarl
mov
cmp
jmp
jl
inc
xor
and
mov
lds
fldpi
xchg
js
into
jmp
sbb
cld
sahf
adc
jb
adc
or
mov
int3
fucomp
jmp
aaa
lods
jmp
inc
push
and
jmp
jecxz
jl
je
lods
cmpsb
lea
or
dec
sahf
out
push
scas
arpl
adcb
and
or
or
add
lods
jnp
push
movsl
and
shlb
loope
decl
aas
adc
and
lret
pop
lock
ja
repnz
pop
pop
or
rorb
inc
jmp
dec
mov
jae
xchg
dec
inc
nop
push
xchg
cli
push
jmp
mov
test
push
pop
mov
outsb
cs
in
aas
imul
or
andl
pop
addb
sub
lods
rorb
mov
lret
push
movsb
in
adc
fsubrp
add
push
mov
mov
cmp
sbb
adc
test
and
sub
jmp
inc
push
into
mov
sbb
je
shrb
xor
fisttps
ret
inc
xlat
jne
jmp
push
xchg
test
ja
in
fisttpl
mov
setnp
inc
jmp
cmp
nop
outsb
xchg
jge
xor
aad
or
mov
jmp
mov
jae
or
jmp
insl
push
hlt
and
test
add
pop
and
inc
into
dec
push
mov
icebp
mov
and
mov
js
push
lock
lods
or
sub
push
cmp
fiaddl
ljmp
insb
xor
add
dec
pop
jmp
inc
add
jmp
sub
jmp
arpl
sarl
or
pop
int3
cmp
imul
sarl
lcall
test
and
xor
mov
hlt
adc
cmp
xor
iret
sbb
adc
lret
jo
mov
sub
or
ficomps
push
je
jmp
xor
mov
sub
or
add
sbb
mov
aaa
xchg
out
mov
inc
rclb
mov
sbb
push
push
pop
jmp
sbb
xor
jmp
scas
popf
cld
jae
cmp
cmpsb
mov
repnz
subl
sti
jmp
pop
cmp
aaa
jmp
loopne
mov
jmp
les
ret
add
adc
lahf
mov
scas
mov
in
cmpsb
iret
pushf
jo
or
sub
and
call
adc
and
mov
xor
lahf
jmp
push
mov
jmp
dec
mov
dec
sti
scas
aam
shl
push
sub
outsl
ret
and
in
xchg
sub
popa
dec
dec
and
cmp
mov
je
push
sbb
repnz
add
fbld
dec
int3
pop
push
mov
int
jmp
dec
lret
imulb
jmp
push
cmp
aaa
enter
lods
inc
mov
inc
sbb
pop
mov
aaa
aad
xor
imul
jmp
and
lret
xor
leave
sbb
mov
xchg
jmp
stos
subb
stos
pop
and
cmc
cmpsl
jmp
jmp
mov
scas
inc
out
inc
jmp
jle
cmp
or
repnz
jns
push
subl
repz
mov
in
daa
inc
pop
jnp
push
icebp
jp
arpl
mov
inc
or
xor
test
pop
outsb
jno
imul
imul
dec
and
addr16
pop
sahf
jnp
movsl
push
jmp
or
cmp
cltd
lods
arpl
hlt
mov
jmp
js
add
es
pop
jmp
or
out
mov
test
mov
pushf
xor
or
fcomps
cld
stos
cmp
int
mov
testl
loop
xchg
jmp
inc
outsb
jnp
in
add
sbb
jmp
out
shll
sub
lds
aas
sbb
rorb
cmc
inc
repz
push
jmp
lea
adc
pop
stos
daa
lods
inc
sbb
repnz
jmp
out
jmp
adc
cmpsl
sub
push
cmp
mov
lods
xchg
add
mov
punpckhwd
cmp
sbb
jle
add
xor
xchg
sub
jmp
dec
icebp
cmc
int
sub
outsl
jle
enter
out
jne
pop
nop
lods
pop
push
lcall
or
iret
fstps
jge
jp
pop
jmp
inc
mov
jmp
pusha
add
sub
adc
cmp
jae
fsubr
je
jg
jno
xchg
pop
inc
cmp
mov
inc
sub
jmp
cmp
sub
dec
and
aam
movsl
ljmp
scas
xor
out
cmp
stc
push
pop
out
les
pop
je
not
pop
sub
jge
cmp
sbb
mov
divb
aas
outsb
sti
push
jb,pt
mov
jmp
jecxz
sub
and
aad
ret
loopne
push
pop
outsb
adc
dec
pop
inc
xchg
and
loop
cs
sub
add
stos
adc
gs
jne
movsb
fsubr
add
insb
outsb
inc
in
pop
and
push
dec
sahf
jmp
adc
movsl
xor
jmp
bound
fildl
lret
les
in
pop
jmp
lret
mov
xor
repz
fsincos
jnp
pop
jb
repnz
add
jge
pop
pop
push
inc
jmp
adc
sub
xchg
fists
leave
adc
daa
adc
dec
jb
xor
mov
pop
stos
aad
clc
jmp
jl
in
sub
in
pop
out
cmc
adc
aaa
insb
mov
sbb
imul
push
scas
add
cmp
mov
test
roll
jmp
lods
xor
adc
in
xor
scas
enter
add
test
cmpsb
inc
xchg
sbb
xchg
add
mov
outsb
stos
xchg
jns
sbb
cwtl
inc
lods
jmp
out
lods
int3
repz
bound
and
inc
push
cmp
daa
out
mov
push
lds
stos
mov
jmp
or
sbb
lods
cli
cwtl
jp
cltd
mul
stos
mov
jmp
ret
push
fnstcw
mov
mov
push
mov
mov
roll
mov
sbb
push
dec
pop
in
jmp
pop
repz
lret
push
and
xchg
sub
sbb
lods
shrl
jmp
xchg
xchg
push
sub
or
mov
jmp
pop
xchg
inc
cltd
lret
or
jo
jmp
daa
sub
int
fsubr
cmc
add
mov
test
lods
adc
adc
push
jbe
shlb
add
leave
lret
jmp
add
loopne
mov
xchg
imul
or
scas
pop
pushf
push
test
imul
jmp
cwtl
lcall
sub
pop
ficoml
pop
roll
cmp
stos
jb
push
push
loope
jbe
or
pop
cld
xchg
bound
push
shll
mov
sub
xor
cmpsb
push
fsubs
xor
test
adc
mov
xor
xor
sub
flds
and
xor
das
jns
mov
lods
test
pop
sahf
mov
cli
jmp
je
adc
cld
imul
jae
dec
fs
jmp
adc
jmp
jmp
sub
js
lock
jnp
dec
sbb
pop
xchg
lods
lds
popa
loope
fdivl
mov
fcomps
inc
push
pop
pop
aam
adc
jmp
test
das
lcall
pop
add
mov
mov
test
or
das
aas
sub
scas
sub
mov
fdivrl
dec
fs
addr16
xlat
and
lcall
or
push
rorb
jmp
insb
inc
and
ljmp
mov
call
enter
sbb
jle
pop
add
sarb
jne
ss
jae
stc
sti
adc
jecxz
test
cmpb
arpl
scas
icebp
xchg
aaa
jne
add
enter
cwtl
shl
jmp
out
inc
mov
mov
lret
enter
loop
repnz
lods
xchg
sub
jb
or
mov
mov
jno
adcl
cs
jmp
dec
dec
outsb
call
aaa
lret
jb
imul
aas
mov
or
mov
jmp
sbb
xchg
jmp
insb
test
jl
arpl
cmp
testl
pop
fildll
test
clc
cmp
subl
push
int
aaa
out
loopne
pop
out
lods
in
aas
push
iret
jecxz
pop
xor
mov
cmp
inc
lods
cmp
das
aaa
pop
pop
sti
sub
and
mov
jo
cmpsl
pop
push
ret
jb
out
cmp
fadds
jmp
cltd
imul
pop
mov
rorb
jmp
inc
inc
repnz
mov
jecxz
stos
or
outsb
call
fstps
lods
hlt
jmp
andnps
jmp
arpl
in
jmp
insb
add
push
in
push
lods
sub
fs
jb
fidivrl
loop
fcomps
bound
sti
mov
mov
pop
add
stc
jmp
mov
xor
lret
call
ret
sub
js
fistpl
mov
jl
dec
push
stos
mov
fwait
sub
and
sub
mov
dec
enter
dec
sub
mov
cmp
aam
push
xor
sti
scas
lret
test
mov
cmp
rorl
fimuls
jmp
in
cltd
mov
lret
jmp
sub
cwtl
out
mov
jmp
and
sbb
lcall
mov
jmp
pusha
aas
lea
lods
adc
lock
push
xchg
mov
dec
stc
lret
fisubrs
xor
ja
push
icebp
pop
ljmp
pop
push
mov
dec
jl
out
aas
leave
sarl
dec
testb
daa
xor
cltd
xor
imul
lods
adcb
ret
loope
jmp
les
aas
sbb
imul
pop
mov
xchg
fstl
mov
push
clc
xchg
jnp
les
mov
pop
adc
imul
loop
scas
sbb
mov
aam
xlat
jge
cltd
icebp
test
cmpsb
sbb
mov
mov
test
imul
add
and
inc
jmp
dec
xor
stc
js
pushf
jb
add
jmp
xchg
scas
test
fwait
mov
sbb
cmp
fildll
jecxz
fdivrs
mov
jmp
sub
out
xor
les
xorl
sub
mov
repz
fcoms
and
jnp
jmp
inc
shll
enter
test
sub
jmp
test
js
jb
sub
dec
push
dec
cs
jmp
sbb
into
out
leave
cmpsb
mov
sbb
jmp
xor
sarl
ficomps
adc
iret
xchg
dec
dec
scas
sbb
fs
fwait
sub
mov
sbb
dec
cmc
lods
pop
stc
lcall
hlt
daa
pop
cmp
int3
fucomip
mov
sbb
jmp
insl
adc
repz
jmp
lret
call
popa
mov
pop
pop
dec
sbb
es
shll
mov
jmp
inc
xor
sti
jmp
jno
push
xchg
mov
jmp
enter
adc
mov
pop
bound
jg
lock
dec
mov
dec
lret
out
frstor
loopne
jge
cmp
loop
push
test
pmaxub
cmc
xor
and
dec
or
or
dec
sbb
or
jmp
dec
in
cmp
mov
std
jl
mov
inc
clc
adc
sbb
or
in
adc
xchg
jg
jmp
std
pop
and
ja
cmp
inc
cmp
cmp
scas
sarb
xchg
daa
jmp
in
inc
push
pop
js
jmp
push
fcomps
lods
fs
in
repnz
adc
or
inc
mov
mov
outsb
cmp
lret
cmp
sbbb
jmp
inc
or
adc
sub
jmp
ss
add
xor
mov
insl
sub
int
int3
aam
inc
or
or
and
xchg
jnp
sti
cwtl
push
pop
cmp
and
jmp
fisttpl
sub
insl
add
inc
pop
inc
iret
into
mov
arpl
mov
es
pop
jmp
dec
mov
fucom
jns
out
jge
dec
lahf
enter
nop
pop
push
jnp
inc
insl
stos
stc
xor
jb
loop
xor
jne
pop
out
mov
push
push
add
adc
jae
repz
insb
gs
leave
jle
lahf
fldcw
sbb
or
add
sub
inc
jmp
push
sbb
pop
sub
pop
ret
mov
in
jmp
incl
xor
call
add
xor
pop
lret
dec
or
roll
push
sub
loopne
ficomps
add
xchg
inc
push
jmp
fisttpll
stos
adc
insl
mov
jmp
dec
jnp
push
fwait
imul
adc
stc
daa
sbb
push
jge
cwtl
stos
icebp
or
mov
leave
dec
sti
sub
adc
jp
lds
add
jno
sub
int
testb
sbb
fwait
pop
inc
call
inc
jmp
lods
add
repz
nop
lods
adc
addr16
outsl
and
mov
rorl
orb
mov
out
sbb
jb
test
add
scas
outsb
ds
cmc
dec
lea
jmp
rolb
cmpsl
push
mov
dec
mov
ljmp
xchg
xchg
aaa
jmp
jbe
pop
aas
movsl
sti
fisubrs
insl
or
add
jmp
lret
stos
clc
jmp
std
mov
xchg
lock
push
shlb
cmpsl
add
cmp
mov
or
add
mov
add
cmp
es
jmp
scas
sub
sub
cmpsb
and
popa
jmp
mov
daa
iret
ds
outsb
mov
testb
popa
insl
scas
pop
addr16
jle
or
fldenv
jmp
ret
pop
or
xchg
jecxz
mov
testb
jmp
test
mov
or
int3
push
icebp
xchg
cltd
out
sub
jno
sbb
pop
add
testb
fldl
and
and
adc
dec
gs
sbb
and
imul
jne
sub
jge
imul
jecxz
test
arpl
jg
xor
int
dec
nop
xor
jno
or
ret
int
cmp
mov
cmp
jae
xchg
rcrb
rcll
jb
gs
jmp
mov
push
dec
mov
scas
test
cmp
jmp
imul
add
mov
adc
jmp
imul
inc
sub
pop
daa
cmpsb
sub
sub
fadds
sub
sbb
add
mov
dec
icebp
sbb
dec
jmp
sti
mov
test
ret
jp
in
pop
xchg
jmp
je
mov
jmp
repz
mov
inc
in
sub
xor
adc
sbb
leave
fmul
jp
out
add
inc
rol
mov
fwait
lods
out
jb
push
nop
mov
icebp
jnp
pop
mov
adc
fxch
jno
leave
js
bound
hlt
movsl
jle
sub
lds
sbb
outsl
in
repz
xlat
dec
dec
lock
or
sbb
gs
adc
shlb
jecxz
popa
inc
sub
addb
jmp
fisttps
outsl
test
aam
outsb
icebp
rorb
stc
sub
pushf
mov
adcb
xor
addr16
lahf
movsl
jns
clc
mov
cmovns
mov
pop
daa
adcl
movzwl
cmp
jp
add
fsubl
rorl
sub
mov
or
arpl
flds
sarb
xor
cmpsl
jmp
popa
sahf
cmp
das
test
test
xor
fcoml
cmp
jnp
jmp
dec
lret
xor
loope
xor
sti
mov
lods
jmp
mov
xchg
popa
mov
clc
lea
jmp
mulb
sbb
dec
adc
pop
dec
pusha
jmp
mov
mov
xchg
jmp
out
sub
push
jnp
sti
xchg
outsl
dec
jmp
notl
sbb
clc
scas
inc
es
sub
faddl
and
por
sbb
test
or
icebp
lret
pop
scas
xor
inc
test
xlat
mov
lcall
rorl
mov
aas
sbb
jmp
cmpsl
cld
push
in
arpl
jmp
in
daa
xchg
in
xor
jmp
imul
cmp
aam
jo
cmp
push
add
enter
pusha
adc
lods
xor
push
leave
inc
or
sqrtps
xchg
es
popf
add
loope
pop
and
or
or
ds
cld
push
iret
out
test
xadd
adc
cmpsl
mov
insl
xchg
sti
and
fisubrl
mov
jmp
test
mov
loop
adc
mov
pop
sbb
push
jmp
cmp
scas
add
div
adc
fnsave
test
jmp
inc
mov
test
imul
lock
jb
idivl
mov
dec
inc
inc
or
cmp
jmp
pop
pop
stc
lcall
cmp
dec
mov
inc
jb
cmc
adc
inc
aam
mov
sahf
sbb
cmp
jmp
cmc
bound
or
cmp
in
test
jmp
daa
sub
jmp
movsb
test
fisubrs
push
sbb
push
mov
push
xor
xchg
mov
jmp
jge
movsl
arpl
test
mov
mov
fs
int
js
scas
jmp
jno
cmpsl
sbb
or
notb
lret
mov
mov
repz
cmpsb
jmp
divb
push
jg
pop
cmp
jo
leave
xor
dec
pop
dec
jmp
dec
aas
xor
fwait
insb
jge
cwtl
stc
pushf
mov
jae
clc
and
aad
pop
or
adc
jmp
outsb
iret
sbb
mov
fs
fisubl
jns
xchg
xchg
sub
mov
adc
pop
cmp
jl
cmp
pop
xorl
jecxz
jmp
imul
enter
mov
sti
adc
lea
xor
jmp
std
hlt
fldl
scas
imul
sub
cmp
out
jmp
clc
sahf
inc
add
scas
repz
pop
lea
jmp
jmp
inc
jne
cmpsb
inc
jmp
bound
push
cli
add
cmc
or
lods
arpl
or
test
mov
lods
dec
jmp
pop
daa
stos
add
jbe
enter
push
mov
pushf
stos
jnp
mov
lods
cmp
daa
sub
subl
jb
lods
sar
dec
jg
or
jo
push
cmc
adc
xor
mov
out
es
inc
mov
xchg
hlt
jmp
add
mov
jge
pop
aas
ret
inc
add
jp
jmp
bound
mov
fisttps
or
hlt
mov
jmp
mov
inc
or
dec
or
xchg
loopne
andl
mov
in
lret
inc
or
adc
jmp
mov
std
orl
pop
pop
outsb
or
dec
popf
push
lods
sub
xor
push
inc
jp
add
jl
js
sbb
jecxz
sbb
push
inc
xor
mov
cmp
jmp
dec
xlat
test
sub
je
mov
into
dec
push
test
lret
push
out
scas
cmc
push
and
xchg
push
out
in
fucom
in
adc
rorb
scas
sbb
jbe
xor
in
sub
sbb
mov
stos
imul
xor
popf
xor
pop
cmp
mov
stos
jmp
adc
cmp
cld
clc
mov
test
movsl
stos
test
int3
xchg
mov
or
shrl
jne
pop
in
lods
add
mov
cmp
mov
loope
addr16
cs
and
sub
cli
mov
loop
add
jmp
test
push
mov
mov
fsubrs
insb
xor
or
mov
shl
or
jmp
ds
jecxz
lcall
add
ficomps
jmp
mov
in
shrl
or
mov
jmp
scas
add
sbb
rol
jmp
mov
xor
mov
cli
ret
jmp
ljmp
sub
or
and
sub
sub
fstl
xlat
add
lea
sbb
jmp
cmp
sub
int3
std
in
ss
negl
pop
or
mov
xor
ja
jmp
sub
fldenv
sbb
loopne
cmp
fsubrs
jle
pop
movsl
loope
cli
repnz
add
mov
pop
fsubl
jmp
jp
loopne
lods
xorps
and
mov
sbb
fsqrt
lea
or
xor
push
movsl
mov
sub
loope
lea
mov
push
xchg
orb
bnd
adc
push
cli
fistl
mov
push
jmp
ss
insl
data16
loopne
cs
iret
xchg
xchg
sbb
sub
adc
and
cmp
adcb
or
push
mov
sbb
jb
rclb
add
sahf
jp
pushf
rclb
push
xor
lret
testl
loopne
mov
adc
enter
in
mov
cmc
sub
dec
rclb
and
cmp
cltd
and
adc
movsl
fisttpll
mov
jmp
arpl
mulb
add
mov
fidivrs
dec
xor
jne
repnz
fwait
pop
jmp
sbb
pop
mov
and
jge
jb
sbb
mov
fwait
sub
jmp
adc
push
mov
push
repnz
shrb
imul
jmp
jp
pop
roll
mov
mov
in
in
adc
std
adc
adc
out
call
adc
xor
jmp
lock
aad
scas
jmp
dec
enter
push
xor
inc
sub
lods
enter
cs
inc
rsm
jmp
test
push
addr16
and
mov
sbb
lahf
mov
pusha
jecxz
jmp
or
test
jb
sbb
bound
or
imul
sbb
jmp
mov
imul
test
or
cmp
adc
or
mov
dec
sub
cwtl
daa
mov
jno
sti
gs
push
jmp
push
imul
jmp
aam
xchg
fstl
rolb
and
out
cmp
pop
add
stos
daa
aaa
pusha
jmp
neg
scas
fstpl
mov
cmp
xchg
dec
lods
xor
lea
jbe
pop
lcall
xor
cmp
xchg
mov
repnz
ljmp
cmp
push
jmp
daa
mov
mov
in
jae
pop
add
lock
nop
inc
lcall
cmpsl
popf
les
repz
push
fsts
mov
and
leave
and
cltd
xorl
sbb
repnz
fiaddl
add
data16
stc
mov
jmp
loop
ds
adc
mov
enter
pop
mov
pop
stc
push
cmp
in
pusha
sbb
inc
out
dec
lods
imul
stos
cmp
cmpsl
es
sub
arpl
popa
divl
add
push
outsb
ss
xchg
clc
fsubs
je
loope
aas
and
lods
mov
mov
out
adc
cmc
shl
jmp
or
dec
lahf
jmp
dec
stos
jo
leave
jg
inc
add
std
sahf
in
jmp
mov
aaa
in
jmp
inc
dec
and
std
shlb
popf
jno
push
data16
jnp
mov
jmp
ja
xor
jmp
imul
pop
aaa
add
push
mov
ljmp
push
mov
mov
jmp
sti
dec
add
stos
jae
push
mov
jmp
mov
outsb
clc
dec
jne
push
imul
xchg
push
and
inc
ss
xor
xchg
in
or
jmp
push
push
adc
ficoms
jmp
shlb
mov
inc
scas
scas
lahf
vpsubq
jno
mov
xlat
ret
fsubr
repnz
lret
sub
jmp
icebp
push
jno
por
jecxz
xchg
adc
cmp
repnz
sti
cltd
jle
jmp
jnp
lret
mov
jmp
test
xchg
jmp
jne
es
mov
sub
mov
sub
jmp
xorb
movsb
rclb
scas
cmpb
and
xchg
push
lcall
xchg
fs
inc
icebp
lea
fildl
pop
sti
aad
jbe
pushf
adc
push
repnz
cmpsb
inc
and
outsl
cmp
in
cltd
push
es
add
loop
mov
and
xor
sbb
jns
inc
or
stos
or
out
ret
repnz
lret
fcmovnb
and
lods
cmp
stos
adc
loop
push
jmp
cmc
aad
jge
and
jmp
ljmp
jbe
push
test
mov
je
in
fildll
pop
enter
sbb
dec
icebp
jmp
popa
dec
fs
sbb
aad
lods
pop
adc
or
aas
sub
fwait
imul
push
repz
jmp
add
ds
jmp
pop
jl
add
mov
mov
jmp
and
xchg
sbb
jo
cmpsb
cmp
dec
jge
jb
mov
sub
cwtl
jno
popf
adc
sbb
mov
sar
outsb
loopne
jmp
stos
insb
and
and
and
mov
data16
add
xchg
lods
pop
jge
dec
jmp
test
andb
jmp
pop
mov
out
jmp
cli
popf
and
dec
adc
loop
cs
fwait
lea
icebp
add
in
xchg
sti
cmp
sub
outsb
daa
iret
fistps
lcall
jae
fs
scas
xor
mov
push
jae
fmull
nop
fucomip
bound
in
jmp
out
sub
or
out
fsubrs
mov
mov
jmp
mov
insb
jp
popa
cmc
loope
mov
and
adc
mov
push
test
cld
jmp
xchg
outsb
ror
mov
jns
xchg
mov
loope
aad
sub
aaa
mov
stos
les
add
mov
cmp
arpl
inc
cmp
sbb
pop
imul
jo
sub
mov
daa
push
mov
sub
into
dec
std
lods
xchg
stos
jnp
pop
loope
ds
push
add
adc
sti
push
add
adc
push
stc
jmp
jae
sub
cmp
adc
pop
iret
pop
sbb
fidivs
jmp
pop
movsl
pop
in
xlat
std
and
mov
scas
pop
shlb
test
jmp
out
jnp
dec
repnz
aam
ficoms
xchg
mov
add
mov
cmpsl
aaa
rcr
or
mov
call
stos
xchg
pop
insb
and
jmp
jne
push
das
mov
jb
cmp
mov
mov
aad
jp
push
xorb
fmull
jmp
xor
mov
jo
clc
and
dec
push
cmpsl
jae
jmp
add
jge
mov
pop
adc
inc
sub
add
push
sbb
test
sbb
cmpl
jecxz
mov
ljmp
jg
cmc
sbb
jmp
iret
jo
pop
jb
mov
frstpm(287
lret
xor
xchg
and
mov
out
push
mov
sbb
add
pop
mov
cli
bnd
push
cli
loope
jmp
mov
fcoml
add
jmp
push
lahf
sbb
sub
or
or
jno
fadds
and
mov
jmp
dec
fcmove
incl
inc
mov
or
out
cmp
mov
iret
jl
or
bound
or
lret
add
add
sub
ret
jnp,pn
jmp
enter
nop
jmp
mov
pop
jg
fwait
stc
stos
jbe
xorl
and
mov
scas
sbb
ja
std
inc
xor
icebp
fcmovu
addr16
js
mov
mov
mov
shrl
loopne
enter
lods
jp
jg
add
sbb
inc
mov
and
clc
jmp
mov
cmp
cli
loopne
repnz
sti
flds
es
jnp
mov
lods
adc
mov
xchg
inc
js
add
lret
sbb
mov
add
fiaddl
add
jmp
leave
call
mov
xchg
cmp
jae
sub
pop
test
adc
stc
xor
enter
xor
pop
test
mov
sbb
lds
sbb
add
cli
jecxz
sub
add
ret
inc
movsl
mov
sbb
sub
inc
push
jae
jmp
cmp
fs
in
jmp
cmp
mov
jmp
insl
lahf
sub
pop
outsb
push
jmp
add
aam
ds
mov
cmp
pop
in
inc
popa
iret
push
lock
mov
pop
aaa
sbb
dec
int3
sahf
xchg
fcmovne
mov
sbb
frstor
leave
jmp
inc
mov
ds
cmc
ror
sub
jmp
jmp
push
add
sub
dec
rcl
into
dec
call
inc
xchg
notl
jmp
cs
bound
pop
repz
in
jb
int
les
shr
pop
xchg
jo
repz
jmp
xchg
stos
popf
enter
jmp
cmpsl
aas
mov
sbb
imul
add
popf
and
das
fs
jmp
cmpsl
add
lods
lret
inc
in
fisubl
lods
sti
inc
lods
hlt
add
cmp
arpl
rcr
jle
xchg
mov
scas
jmp
or
data16
xor
or
pusha
add
jmp
ss
cmpsb
mov
ficoml
in
cmovge
jmp
mov
sbb
scas
pop
adcl
int3
sbb
cli
jb
mov
push
rcrb
mov
lods
push
imull
jmp
ds
and
mov
std
jmp
loope
dec
jg
jb
sub
outsl
push
pop
cwtl
sub
cmp
push
scas
xchg
pop
cmp
xchg
or
jmp
and
shr
cmpsb
call
push
jp
fucomip
push
stc
inc
or
ds
jmp
fdivp
cmp
popa
dec
sbb
add
or
das
sub
jmp
add
fcompl
pop
push
jmp
jp
pop
in
mov
adc
sbb
jae
or
mov
pop
nop
inc
push
lea
out
fwait
lret
jmp
in
jg
and
push
mov
lock
pop
inc
mov
movsb
lahf
inc
jns
hlt
jmp
sti
xor
int
sbb
mov
sbb
lds
fsubrl
mov
sub
mov
pop
jg
or
jb
fwait
jmp
in
sahf
pusha
jmp
mov
fs
push
insl
or
jmp
movsb
lods
mov
out
out
scas
insl
jb
cmpsb
jmp
cmpsl
and
jns
fdivl
xchg
testl
mov
movl
mov
mov
jmp
xlat
ret
lcall
imul
jb
mov
and
sarl
push
and
jns
jbe
test
add
pop
sub
add
aaa
dec
sahf
jmp
xchg
xlat
jp
lahf
sbb
ds
lret
cmpsl
lods
in
js
inc
movsl
or
cmp
xor
mov
cmp
jmp
xchg
xor
ss
iret
notb
inc
roll
push
add
jmp
or
cmp
push
insb
jbe
push
ret
sbb
sbb
into
lods
loop
pop
mov
outsb
jmp
adc
dec
andl
and
leave
movsl
pop
push
jmp
stos
dec
xchg
dec
int
mov
fdivrs
nop
xor
and
add
arpl
sub
adcl
jmp
fstl
decb
jmp
stos
stc
xchg
fcoml
push
ja
les
loope
jmp
cmp
repz
inc
mov
mov
pop
lret
popa
jmp
pop
adc
lea
dec
hlt
imul
xor
stc
jmp
pop
lods
xchg
inc
sub
cli
jp
sbb
mov
pop
xchg
lods
movl
or
sti
jle
popf
jmp
pop
es
icebp
addr16
jmp
ljmp
jmp
push
aad
add
lods
stc
sbb
xchg
xchg
sbb
jmp
or
sub
dec
stos
sbb
or
lret
aam
mov
jmp
add
in
mov
hlt
outsl
pop
cmp
imul
jmp
stc
dec
mov
xor
mov
testb
sub
pop
cmp
aam
pop
mov
ljmp
pusha
xor
int3
jge
dec
jb
inc
inc
dec
clc
inc
and
test
xor
cmp
jmp
iret
inc
dec
outsb
mov
lods
addr16
jg
pop
or
jns
test
rclb
imul
test
call
repnz
or
ss
incb
lock
cli
xchg
and
stos
out
in
pop
out
movsl
ret
or
in
jmp
gs
push
ds
inc
jmp
mov
push
mov
in
scas
lcall
xor
imul
push
jmp
popa
jno
cmpsb
shl
fwait
jmp
cltd
decl
sub
adc
push
sbb
dec
cwtl
movsl
or
pop
jo
mov
jmp
sbbl
call
adc
pop
xor
outsl
stos
popa
push
cmpsb
add
jmp
or
push
sbb
mov
cmp
call
xchg
dec
sub
sbbb
inc
add
jle
iret
lret
pop
sub
in
adc
mov
jl
mov
ficomps
xor
push
pop
jmp
jg
push
loop
push
aam
pop
ret
js
ds
or
stos
xor
bound
add
aam
mov
jmp
dec
out
xchg
fdivl
lods
imul
lcall
popw
jo
dec
mov
inc
stos
out
ss
pop
lcall
test
jo
mov
mov
jge
fadds
jmp
pop
jbe
fstps
jmp
pop
bound
pop
dec
cmovl
mov
lods
jo
gs
out
cld
popf
stc
mov
mov
enter
scas
fucomi
iret
xorb
lods
pop
xchg
jmp
jae
sub
jmp
push
out
cmp
ficoms
out
ss
repnz
push
filds
mov
nop
aaa
sub
dec
movsl
and
test
mov
mov
repz
lods
out
jmp
add
imul
and
add
and
inc
dec
jmp
je
int
sbb
inc
cs
mov
mov
int3
repnz
sub
pop
shlb
mov
outsl
stc
out
ret
or
fwait
ds
sub
jmp
inc
cmp
fisttpll
pop
or
add
sahf
shrb
fldpi
nop
mov
cmp
jmp
xchg
pusha
jnp
addl
jmp
rcll
into
jbe
sbb
addr16
add
xchg
and
mov
and
pop
loopne
mov
jle
lods
xchg
jecxz
sub
pop
sti
rcrl
icebp
outsl
inc
cmpsl
pop
shrb
imul
clc
jmp
mov
rcr
mov
jg
bnd
call
out
jp,pt
mov
pop
hlt
jl
cmpsb
sbb
in
cltd
jmp
sahf
add
xor
data16
dec
pushl
sbb
imul
test
jne
or
add
in
push
sbb
shll
push
call
jmp
and
mov
in
pop
bound
ds
jmp
xchg
mov
dec
test
cmc
mov
lods
pop
call
jge
add
mov
sti
xor
sub
scas
jg
icebp
jbe
pop
push
jno
pop
jmp
jnp
ss
stc
sub
aad
mov
ftst
xor
icebp
orl
xchg
jmp
mov
je
jmp
push
enter
sbb
bswap
jmp
insb
cmp
pop
int
jae
pop
jb
sbb
or
hlt
xchg
popf
shl
dec
idivb
repnz
sbb
jmp
xlat
incl
jmp
mov
mov
inc
inc
arpl
sbb
stos
mov
pop
fistpl
out
jmp
lds
sbbl
mov
dec
jne
push
pop
mov
popa
shr
idivb
cmp
jecxz
inc
cmp
pop
sub
jmp
cld
sub
std
push
mov
adc
mov
and
daa
jmp
xchg
std
fcomps
mov
ja
aam
inc
jmp
int
cmpsl
jp
and
lock
pop
jmp
mov
mov
sub
jmp
aad
shl
and
jmp
mov
scas
jmp
mov
out
jmp
pop
mov
push
jmp
adc
sbb
fsubl
insl
jmp
rcll
xchg
repnz
xor
and
movmskps
cld
icebp
jmp
shr
js
pop
inc
lods
mov
dec
sbb
setbe
mov
push
add
or
or
pushf
jmp
mov
iret
cwtl
hlt
stos
adc
sbbl
and
pop
stos
div
add
cmpsl
or
insb
hlt
or
mov
insl
inc
adc
lret
movsb
call
loop
sbb
and
mov
repnz
fistl
push
and
ret
mov
or
jo
ljmp
stos
aad
jp
mov
adc
and
push
or
fstpl
in
jo
push
xchg
jmp
xchg
in
movsb
int3
jbe
and
fwait
stc
adc
jno
jae
daa
sub
int
pop
in
imul
shlb
daa
cmp
jmp
xor
lret
movsb
scas
or
jmp
push
rcrl
addl
cmpsb
adc
aas
jp
notl
loop
bound
xor
mov
ja
fimuls
dec
mov
ret
je
call
cs
jmp
push
aad
lods
dec
int3
arpl
mov
xchg
in
jmp
je
lods
push
ret
mov
repz
adc
sbb
and
mov
mov
inc
aaa
clc
mov
into
pop
cmp
mov
imul
mov
fisubl
dec
in
push
sub
sub
pop
cli
imulb
cmpsl
dec
jb
push
outsb
sbb
jmp
pop
ficompl
scas
stc
movsl
jmp
cwtl
pop
jecxz
push
loope
jmp
lcall
xchg
stc
stos
jmp
gs
or
mov
cmp
out
pop
int3
dec
dec
push
jmp
mov
fs
xor
popf
and
outsb
insl
into
or
xor
mov
jmp
mov
sbb
popf
lds
movsb
dec
jmp
es
mov
dec
mov
pop
jmp
lods
xchg
mov
ja
loope
cmpsb
or
sub
jmp
jb
decl
sbb
movsb
or
sub
iret
repz
mov
cmp
dec
xchg
add
dec
jmp
and
into
sub
jmp
lret
stos
push
inc
popf
jmp
adc
and
jmp
inc
jge
popa
shll
add
jecxz
push
xor
cli
and
fldt
icebp
shl
sbb
cmp
push
insl
pop
jb
sahf
xchg
or
jle
cs
mov
aas
adc
xor
cmpsb
jmp
fadds
mov
jb
push
test
daa
test
xorl
or
in
jbe
imul
jl
jmp
sub
jecxz
repnz
in
and
jmp
sbb
sub
or
jp
mov
mov
stos
add
lods
sub
inc
insb
sub
xorl
mov
fcoml
jmp
and
and
jp
mov
jg
sub
pop
pop
mov
out
cmp
pop
repz
push
in
test
jmp
push
es
clc
sbb
jmp
mov
lods
adc
mov
jns
jecxz
icebp
xchg
pop
imul
dec
and
mov
pop
inc
push
rcrb
imul
lock
adc
jns
or
jmp
icebp
mov
dec
jmp
pop
cmp
outsl
movsb
push
scas
int3
in
mov
add
mov
xchg
lahf
aad
cltd
loop
xor
mov
cmp
sarl
scas
daa
jmp
mov
push
sub
pop
jbe
mov
jp
pop
and
push
out
xchg
scas
inc
and
popa
and
sub
pop
sbb
jg
add
cmpsb
or
push
jns
mov
mov
inc
push
int
rep
push
pop
ret
popf
jnp
jl
aam
push
add
jmp
arpl
mov
aaa
icebp
lods
and
std
outsl
mov
push
mov
je
test
jmp
stos
cmp
cld
fsts
sub
rcrb
cmp
jmp
fisubs
inc
add
cmpsb
jmp
cli
dec
test
inc
mov
mov
pop
insl
sbb
and
cmovno
push
xor
addr16
loopne
mov
gs
sti
xchg
or
clc
popf
sub
arpl
cmp
in
xchg
mov
mov
or
arpl
sub
bound
cltd
or
insb
push
lds
call
sub
sbb
divl
jmp
clc
xor
adc
int3
test
mov
jmp
lret
pop
mov
lods
jecxz
int
sub
xchg
sub
or
aaa
subl
lea
mov
and
fisttpll
xor
rcrl
out
test
mov
cmpsl
mov
cmp
adc
pop
fucompp
mov
jmp
leave
outsl
pop
add
movsb
xchg
pop
or
jmp
xor
sub
adc
rol
pop
stc
xor
or
scas
push
outsb
push
add
add
dec
or
mov
mov
mov
movsb
inc
push
cmp
jmp
aas
faddl
mov
icebp
aad
pop
lods
xchg
mov
inc
sub
cmp
jmp
pop
jp
mov
ret
or
dec
popf
push
push
repz
in
sbb
cmp
push
or
xor
push
cmp
sub
mov
sbb
xchg
jmp
aas
xor
adc
sub
sbb
push
or
jp
push
je
pop
loopne
nop
sub
add
clc
and
cmpsb
inc
int3
cmp
mov
push
repnz
or
outsl
jnp
xchg
daa
int3
mov
mov
sub
and
cmp
std
cmp
fucomip
repz
cltd
mov
je
inc
jmp
sbb
mov
push
imul
mov
or
lods
in
xchg
add
pop
sbb
jge
pop
popa
sub
es
in
in
roll
aam
jmp
jge
cmc
or
xchg
jl
inc
cmpb
incb
sbb
scas
push
inc
xor
dec
jo
jb
jmp
jno
jge
les
push
inc
outsb
push
xor
xchg
lods
jns
mov
daa
adc
mov
jecxz
enter
jmp
mov
or
scas
sti
jmp
cld
mov
std
or
shlb
jmp
ja
jl
dec
lods
jmp
push
sti
push
jmp
sub
xchg
pop
jmp
cmc
int
and
into
cs
or
scas
rcll
int3
sbb
lods
mov
inc
mov
fisubrs
pop
cwtl
dec
xor
std
ds
add
adc
jmp
or
xor
push
por
lods
adc
mov
mov
lcall
shr
scas
mov
lods
dec
mov
call
nop
dec
xchg
pop
mov
mov
movsb
jmp
push
lea
pop
imul
mov
add
jnp
sub
insb
adc
in
mov
into
adc
cvtpi2ps
scas
scas
rcll
jl
subl
add
popf
sub
or
dec
dec
and
cmpsb
add
cs
sti
xchg
shrb
inc
sub
cwtl
stc
mov
jne
int3
adc
int3
daa
fucomip
dec
lret
ss
imul
add
out
fmulp
out
jmp
stos
in
jge
sub
push
lods
push
mov
loopne
ljmp
jmp
insl
test
enter
shlb
jb
jne
xor
inc
jecxz
into
rcr
loopne
lcall
inc
cmpsl
daa
cmpsb
adc
jmp
inc
popl
mov
outsb
out
jb
fs
cli
cwtl
sbb
scas
data16
and
xor
adc
push
add
lcall
jmp
cwtl
inc
xor
sub
mov
scas
pop
mov
mov
ljmp
cli
add
fiadds
test
pop
fdivrl
cmp
mov
jmp
aas
sbb
jae
scas
dec
mov
pop
inc
scas
xchg
inc
lret
sbb
adc
jmp
mov
or
jmp
inc
stc
mov
lcall
cmp
notl
pop
outsl
loope
xlat
jmp
int
popa
cs
xchg
loop
pop
hlt
gs
insl
push
pop
xchg
xchg
adc
out
movsb
pop
and
push
pop
and
insb
jb
test
add
jmp
xchg
insl
cli
or
xchg
and
jmp
add
and
out
stc
jbe
loop
lret
mov
and
shlb
cmp
jmp
pop
aad
movsl
stos
push
sub
clc
mov
mov
ds
push
daa
gs
inc
ret
jmp
xchg
sahf
fadds
fisubrl
scas
or
data16
or
xor
mov
sub
sahf
jb
rorl
ja
jmp
adcl
jmp
or
lock
push
push
adc
dec
sub
jne
mov
rorb
jmp
mov
hlt
push
sbb
cmp
aad
shrb
pop
sbb
push
pop
frstor
in
and
mov
xor
inc
scas
sbb
or
add
sbb
add
test
cltd
mov
ja
jne
in
addr16
aaa
lods
mov
add
das
adc
inc
lods
int3
add
adc
nop
push
mov
xor
hlt
inc
lret
inc
outsb
iret
mov
cmp
add
pop
lods
insl
dec
je
push
cld
adc
aaa
lods
and
jmp
rol
lods
push
repnz
mov
int
xchg
pusha
add
mov
inc
jmp
inc
adc
imul
dec
jb
mov
or
cmp
pushf
aaa
adcb
push
and
add
mov
sub
leave
push
ja
jp
sti
fucomip
jmp
and
outsb
mov
cli
cmp
jno
dec
or
jmp
pop
and
daa
or
mov
insb
jmp
adc
scas
in
mov
and
scas
out
pop
sub
xor
daa
rorl
cmp
jmp
in
adc
jae
and
adc
and
xor
test
es
pop
mov
push
jmp
loopne
movzwl
sub
orb
andl
sbb
xor
or
in
repnz
imul
mov
push
cmp
cmpsl
jmp
jb
push
std
or
xchg
les
lahf
push
ja
test
add
inc
jmp
repz
dec
mov
dec
lods
addl
mov
test
jmp
fstpt
clc
int3
jmp
jnp
scas
or
out
ret
pop
ja
or
jmp
out
stc
and
jnp
mov
iret
mov
lahf
ja
cmp
in
lods
mov
jmp
fsts
jmp
cmp
or
xchg
rcrb
add
les
ja
arpl
scas
jmp
adc
inc
gs
jmp
stos
and
roll
scas
cli
mov
lahf
mov
enter
pop
call
aam
outsb
adc
add
push
das
out
or
jmp
dec
inc
push
shl
add
outsl
sub
dec
daa
shll
cmp
jmp
lods
ret
jecxz
adc
mov
xchg
adc
dec
add
push
sub
pop
jmp
pop
mov
enter
sbbb
mov
jmp
lcall
mov
cmp
dec
xchg
mov
mov
aaa
jmp
icebp
std
pop
dec
mov
pop
mov
jmp
inc
jecxz
xchg
jns
jmp
mov
scas
jp
cmpsl
test
and
das
sub
repz
mov
movsl
cli
inc
xor
dec
xor
mov
lods
faddl
mov
jmp
pusha
arpl
pop
mov
mov
cmc
add
test
mov
stc
adc
insl
sub
jmp
xchg
adc
jmp
push
sbb
and
lock
jmp
int3
cltd
dec
pushf
push
cmc
push
lods
sti
jle
add
shlb
xchg
sahf
pop
imul
shll
fwait
repz
lods
xchg
test
jecxz
jmp
movsb
push
bound
fsubr
pop
and
jae
jmp
cmpxchg
mov
or
mov
push
in
ja
push
jo
test
mov
mull
push
pushf
lea
jle
mov
in
mov
pop
jmp
addr16
cmp
stos
repnz
idiv
add
scas
outsb
shll
je
mov
pop
aaa
cwtl
daa
xchg
push
repz
lds
jmp
jns
jbe
das
jnp
outsb
mov
xor
jl
add
scas
lock
lcall
lods
inc
cltd
aas
mov
pop
sbb
fs
outsb
lea
lods
dec
loope
or
jp
inc
sub
punpckhwd
pushf
mov
push
jmp
aam
cwtl
mov
mov
cmp
lods
ret
adc
es
jmp
xor
xchg
mov
ret
in
mov
xchg
lods
mov
cmpsl
ss
or
bnd
adc
scas
dec
ds
rcrb
or
jbe
jg
sbb
sbb
dec
aam
adc
outsb
popf
jmp
mov
in
jmp
aas
inc
fcoms
jno
sub
pop
sub
jmp
loop
cmp
sbb
pmuludq
and
orl
cltd
dec
cmpsl
fwait
pop
sub
testl
loope
mov
ja
filds
enter
jmp
in
icebp
rorb
jg
mov
cmp
jmp
imul
jmp
cmp
pusha
sub
or
outsl
loopne
fiaddl
or
xor
cmp
out
jne
push
xorb
inc
jmp
xchg
cmp
pushf
cmp
test
daa
addl
das
jmp
xlat
xor
loopne
mov
inc
rorb
fldt
jo
mov
cmp
popf
lock
insl
pop
lcall
add
sub
mov
jle
jmp
pop
adc
pop
adc
add
xchg
outsl
test
lcall
mov
addl
and
pop
sbb
jb
cmc
jne
mov
adc
sahf
sub
mov
movsb
push
xor
fsubr
pushf
mov
sbb
sbb
push
and
lods
fdivrp
popf
mov
mov
scas
dec
movsl
or
lds
aas
outsb
outsb
xlat
mov
xchg
cli
sub
es
lods
sub
aas
mov
jae
jmp
stc
cltd
add
movsl
shrl
gs
sub
pop
lahf
ror
sbb
fwait
xchg
in
add
repnz
or
rolb
push
pop
jmp
clc
in
jle
test
scas
imul
rorl
clc
jmp
test
ljmp
rorl
xor
and
xchg
sub
lods
mov
push
sub
xor
add
sub
adc
pop
inc
int3
or
iret
adc
cmp
fstl
pop
and
lahf
cmp
mov
and
and
inc
inc
nop
mov
jmp
sti
fcomp
jp
int3
pop
jmp
jl
and
xor
movsb
add
mov
lods
mov
mov
repnz
jp
xor
sub
jmp
pop
xor
add
jns
in
inc
jmp
stos
jl
jb
dec
mov
mov
or
mov
jmp
stos
lahf
jmp
lcall
test
mov
xchg
push
test
popf
dec
dec
lcall
dec
jmp
call
mov
cmp
xchg
sbb
and
cmp
sub
cli
dec
adc
pop
xor
repz
fmull
or
hlt
jno
sub
jns
and
jl
cmpsb
xor
not
jmp
mov
push
repz
sbb
mov
xchg
decb
or
inc
lahf
scas
adc
ret
mov
jb
into
in
in
xor
test
in
mov
jp
aam
dec
pop
sub
jmp
sub
lods
adc
pop
repz
or
test
mov
jmp
pop
mov
or
push
mov
jmp
xchg
pop
jmp
sub
pop
sbb
fisubl
gs
jbe
adc
test
mov
sbb
mulps
jo
dec
jae
and
xchg
jmp
fs
xlat
pop
jne
pushf
or
or
out
outsb
sbb
int
mov
push
repnz
adcl
jmp
lcall
mov
jmp
pushf
rcrl
movsl
in
fucom
enter
rolb
push
lods
sbb
push
sub
in
ret
jbe
jp
mov
mov
repz
push
sub
jmp
mov
mov
out
jmp
sub
adc
mov
push
int3
je
cltd
jmp
sub
dec
or
or
xor
xchg
pusha
inc
outsb
and
pop
mov
cmpsl
adc
jns
mov
push
ja
jmp
push
mov
and
mov
clc
or
mov
cmp
adcb
add
pop
ret
push
mov
shrb
imul
xchg
pop
sub
sub
mov
daa
xchg
sub
pop
dec
les
js
cmp
repnz
ret
push
ss
jb
aas
inc
or
test
loopne
loop
mov
clc
cmc
lcall
and
push
mov
imul
pop
cli
cmp
xlat
pop
sub
inc
sbb
lods
xchg
sub
testb
dec
fucomip
cmpsl
adc
xor
jmp
mov
outsl
scas
xor
lock
test
jmp
jb
lea
rcrl
sub
cmpb
repz
jmp
cwtl
fstps
jmp
mov
mov
and
push
daa
push
leave
sti
pop
roll
popf
mov
mov
cmpsb
dec
or
push
scas
add
jmp
jmp
inc
pop
jmp
pop
mov
sahf
jmp
lret
cmp
xlat
jmp
dec
fsubrs
mov
mov
lods
cltd
aad
mov
or
pop
xchg
push
das
inc
leave
lahf
clc
stos
xor
repz
sbb
jmp
call
ljmp
popf
sub
adc
xor
adcb
mov
test
xchg
xlat
sub
sub
xchg
add
mov
lahf
sti
jmp
std
mov
sub
das
xor
push
xor
mov
negl
jns
pop
arpl
mov
xor
lock
data16
repnz
cmp
mov
cmp
pop
sub
shlb
lret
dec
and
es
inc
push
xchg
pushf
mov
sub
and
imul
push
pop
std
push
orl
mov
cmp
ljmp
sub
xlat
movsb
push
out
sub
inc
and
outsb
fisubrl
jmp
aam
push
loopne
sbb
and
clc
mov
hlt
outsb
int
sub
sbb
sbb
inc
lret
out
mov
xor
imul
push
cld
loopne
leave
jg
imul
addr16
das
mov
sub
jmp
scas
ss
outsl
aad
lret
sbb
sbb
and
cmpsb
out
jmp
hlt
or
jmp
mov
mov
jmp
popf
cmpsb
faddl
add
mov
scas
cli
dec
mov
mov
jbe
cmp
cmp
mov
scas
ja
imul
sar
out
mov
mov
outsl
push
cwtl
sub
lods
sahf
ret
push
ja
out
fisttpl
mov
movsb
lret
push
addr16
out
cmp
mov
jmp
push
xchg
jmp
sti
aas
add
jmp
mov
or
insl
mov
cwtl
gs
mov
cmp
cli
lretw
lock
test
inc
aas
movsb
into
xchg
mov
lods
add
mov
pop
add
pop
jne
jmp
add
jmp
out
mov
xor
ja
xlat
jae
sbb
push
jmp
test
les
xor
fsubr
shl
xchg
cmp
imul
adc
mov
out
ljmp
lds
jno
scas
sbb
jecxz
jl
jmp
out
negb
ficomps
fisubrl
fisttps
jmp
or
insb
dec
sbb
aaa
cltd
adc
cmp
scas
imul
lock
stos
int3
outsb
call
pop
xchg
lods
sub
sbb
loope
test
xchg
dec
adc
arpl
cltd
push
mov
lods
jmp
mov
mov
lret
push
mov
push
fs
push
sub
in
repnz
addl
sbb
or
dec
divb
xchg
and
xchg
mov
nop
xchg
or
sub
xchg
repz
inc
fmulp
loope
sub
jmp
jnp
popf
shl
and
fstpt
fisubrl
pop
push
add
negl
cmp
jmp
jp
lret
push
jmp
lea
into
sub
xchg
bnd
cs
xchg
pop
inc
mov
sub
das
mov
mov
pop
add
rcll
xchg
mov
mov
adc
or
jmp
pop
mov
ficomps
hlt
jmp
xlat
mov
jmp
pushf
das
aaa
xor
shrl
iret
ret
cltd
stos
lea
js
mov
scas
mov
jp
out
loopne
jns
jmp
adc
cld
jmp
cli
jg
xchg
outsb
xchg
and
repz
ja
mov
push
fs
aad
pop
addr16
xor
xchg
sbb
stc
sub
testl
cmp
scas
pop
jmp
test
mov
mov
pop
mov
repnz
arpl
pop
jmp
fisubl
jns
in
clc
lret
hlt
jmp
push
sbb
test
inc
inc
mov
jne
jle
cld
push
fistpll
push
pop
sub
add
or
mov
aam
mov
sub
mov
mov
pop
jmp
xchg
out
push
ja
imul
dec
xor
in
xor
dec
mov
xchg
cwtl
push
shlb
add
pop
adc
and
cmp
jmp
mov
repz
adc
andb
dec
jg
cmp
or
jmp
push
xchg
out
add
mov
sub
lods
xor
adc
mov
xchg
mov
push
mov
dec
arpl
mov
das
jmp
jl
pushf
pop
fdiv
mov
loop
ss
push
sbb
jmp
adc
jmp
lcall
xacquire
add
stos
jmp
leave
sub
mov
push
lods
push
movsl
cmp
fwait
daa
mov
xlat
dec
jmp
rcll
stos
mov
inc
test
and
pop
pop
add
lret
and
outsb
xor
ds
std
push
fs
lds
jmp
dec
pop
insl
stos
shrl
fists
and
cltd
leave
or
pop
pop
xchg
push
xchg
addr16
jmp
xchg
aaa
adc
jmp
xor
rcrl
pushf
mov
and
lret
sahf
cwtl
and
clc
cmp
in
aam
jmp
lahf
lret
scas
mov
jmp
mov
or
mov
loope
cmc
inc
jge
cmp
lock
cmp
inc
ja
add
cmp
sbb
lods
andb
in
lock
push
xor
lods
movb
inc
outsl
xor
jmp
out
cmp
lret
jmp
ds
fwait
mov
pop
lcall
into
clc
outsb
popa
push
and
dec
inc
stc
mov
js
cmp
outsb
mov
xor
and
gs
or
lcall
mov
sub
nop
int3
fldt
test
jmp
add
into
sti
pop
sub
mov
out
jmp
dec
add
jmp
dec
cmp
mov
cmp
sbb
jo
mov
fwait
sub
jns
add
sub
scas
jmp
and
stos
outsl
xchg
jg
pushf
fucomi
push
test
adc
rcrl
xor
sub
jg
push
test
jmp
adc
lret
push
ret
pop
sub
pop
fdivrl
nop
jmp
pop
push
andb
mov
jmp
lret
bnd
mov
out
in
jmp
sbb
add
push
xchg
xchg
add
cmp
mov
lahf
mov
sub
push
mov
fsts
lahf
xchg
mov
bound
pop
sti
dec
jmp
aas
sbb
insl
movsl
and
outsb
outsl
mov
jmp
or
pop
out
jge
inc
mov
and
jo
insl
aas
xlat
jns
jbe
xor
mov
add
and
icebp
cmp
or
pushl
jo
sub
inc
pop
ljmp
lods
negl
shr
mov
mov
insl
mov
mov
pop
lcall
daa
imul
push
pop
or
pusha
jbe
push
jl
out
test
dec
es
push
jmp
je
lret
les
dec
pop
rcll
in
mov
sbb
jmp
xor
es
jle
shlb
push
push
and
lods
les
rcll
lods
int3
adc
cltd
jecxz
repz
cmp
cmp
bound
push
imul
nop
fists
lcall
push
scas
inc
outsl
mov
cmp
int
int3
cmp
scas
add
jmp
outsb
xor
lods
pop
and
out
jae
adc
das
repnz
cld
movsl
js
mov
shll
jmp
outsl
lea
jne
nop
std
mov
fsubrs
or
jge
inc
jmp
inc
mov
lock
daa
sub
dec
jg
clc
and
push
int
inc
jl
jmp
enter
movsl
inc
fimuls
sbb
idiv
jo
mov
shrb
scas
fdivrl
out
jmp
sbb
pop
jmp
repz
add
setl
jmp
fisubrl
aas
sub
ds
fwait
dec
and
push
subl
and
cltd
out
lds
jmp
or
dec
out
mov
mov
pop
push
arpl
and
jns
out
sti
test
jmp
stc
pop
shll
sahf
test
notb
cmpsb
and
stc
clc
orb
jmp
lcall
sub
ds
xchg
imul
mov
sbb
add
repz
ja
fsubr
cmp
out
jmp
xchg
jne
adc
test
inc
jg
cld
xchg
lods
push
daa
jmp
or
add
dec
lret
and
pusha
cmp
ficoms
jecxz
ja
adc
jle
cmp
jmp
xchg
mov
xchg
je
js
jmp
jo
jecxz
lret
jmp
mov
loopne
dec
mov
in
push
mov
iret
mov
stos
mov
shrl
js
ds
or
push
repz
dec
jmp
jne
adc
mov
ret
or
jmp
shlb
hlt
mov
jns
jmp
cmp
and
arpl
fldcw
and
scas
enter
cmpsb
jmp
sub
adc
test
daa
leave
sub
mov
insl
and
sti
jmp
lret
ja
icebp
dec
jmp
mov
mov
jmp
nop
and
lcall
clc
sti
lea
jmp
mov
add
cwtl
push
inc
mov
nop
or
in
stos
arpl
es
mov
icebp
fildll
lods
sbb
pop
das
push
shrb
jmp
push
mov
push
jmp
imul
mov
and
out
cmp
aas
dec
jle
in
adc
add
loope
lods
cwtl
orb
sbb
pop
jmp
inc
imul
pop
out
cmp
sub
das
sub
rolb
cs
and
jmp
je
loope
decb
or
imul
sbb
pop
xchg
lods
ja
sbb
cmpl
jb
sbb
int
out
es
adc
bnd
cmp
fs
lret
mov
push
cmp
mov
xor
insl
push
dec
sbb
idivl
jmp
popf
fbld
scas
push
in
dec
xor
mov
jmp
mov
les
or
add
and
pop
por
sar
mov
jp
sub
inc
in
adc
xor
sub
repnz
jmp
mov
in
jmp
mov
out
jmp
icebp
xlat
fiaddl
push
lods
imul
repnz
push
sbb
jecxz
push
std
jno
inc
repz
jp
xchg
sub
sti
mov
ds
add
pop
adc
addr16
sbb
cs
jle
mov
sbb
call
xor
scas
jnp
dec
fstps
int3
push
jmp
aaa
dec
mov
jge
add
sahf
mov
jmp
lahf
dec
jb
loope
and
stc
jmp
das
mov
fsubr
es
gs
sbb
add
pop
push
jbe
jle
nop
dec
sarb
jg
sub
testb
aaa
fildl
xacquire
sbb
sub
xchg
sbb
in
jb
push
push
sbb
jmp
add
scas
xchg
loope
jnp
fwait
gs
xor
xchg
add
sub
sub
shrl
and
ds
jmp
icebp
stos
imul
add
ret
jg
pop
lret
aaa
mov
sub
sub
nop
mov
call
cld
in
frstor
jmp
lcall
adc
shrb
and
xchg
test
push
outsl
pop
xchg
repnz
aaa
mov
jmp
xchg
cmp
lds
mov
cs
xor
mov
adcb
mov
ret
jbe
in
push
lods
stos
sub
sbb
out
lds
in
out
fwait
push
es
mov
mov
notl
push
bound
loope
repz
sub
and
gs
or
shr
and
xchg
dec
mov
lret
in
jb
js
outsb
repz
cltd
push
hlt
enter
mov
outsl
jb
idiv
gs
test
jmp
ret
cmpsl
mov
jmp
sub
jbe
sti
jmp
adc
ljmp
adc
cli
ja
pop
jmp
insb
pop
jae
adc
cmpsl
jmp
cmp
mov
jmp
pop
int3
mov
mov
iret
pop
jmp
dec
stc
lock
xchg
mov
jmp
inc
test
jg
fsubr
sub
insb
pushf
lods
mov
mov
adc
hlt
lods
sti
cwtl
lahf
push
xor
pop
sbb
xor
adc
dec
sbb
jmp
insl
push
je
fisubrl
dec
sub
and
add
sub
sbb
negl
imulb
and
movsb
xor
jmp
push
inc
aad
pushf
lret
pop
sahf
add
aaa
push
test
xor
mov
jbe
jb
lods
xchg
imul
fptan
in
je
stc
cwtl
lods
mov
and
lock
movsl
jmp
push
jns
cltd
lcall
lock
in
insb
add
cmp
mov
pusha
bound
push
out
pop
xlat
lods
and
pop
mov
shl
cld
sub
imul
in
jp
testb
jno
xor
mov
scas
jmp
pop
and
push
jmp
xor
and
test
and
adc
pop
popf
or
je
xchg
push
jmp
and
mov
jmp
cmp
xchg
cmp
addl
xor
push
fs
cmp
int3
xchg
out
adc
cmp
cmp
jge
push
cmpsb
sbb
movsb
clc
neg
xor
and
push
mov
addr16
jmp
inc
inc
sarb
cmpsb
xor
pop
dec
negb
sub
rol
popa
inc
in
and
insl
jmp
gs
lods
fidivrl
xor
into
pop
cmpsl
mov
mov
daa
mov
cmpsl
inc
add
sbb
pop
xor
and
bound
mov
or
push
jle
jmp
iret
lods
mov
daa
xchg
adc
push
ds
mov
lcall
jns
jmp
xlat
in
mov
gs
sub
mov
push
daa
mov
jns
or
addl
cmpsl
lea
jmp
jp
int
xchg
and
jae
aad
lods
popf
jmp
mov
jge
scas
xchg
std
jmp
mov
jg
leave
push
jmp
lret
stos
add
cs
and
fld
xchg
lods
movsl
sub
sahf
test
mov
xchg
sbb
push
xchg
sar
adc
jns
clc
sbb
cmpsb
int
pop
ss
lods
std
sbb
mov
jae
and
ret
jbe
scas
ret
pop
movsl
jno
jmp
mov
cmc
sti
mov
xchg
jecxz
pop
push
and
test
lret
imul
sti
out
ret
imul
sbb
jmp
jecxz
sub
jmp
mov
dec
jmp
in
dec
xchg
mov
and
jbe
ds
stc
pop
jmp
mov
mov
jmp
hlt
scas
or
mov
cmpsl
mov
jae
push
mov
pop
push
icebp
sbb
sbb
jmp
pop
and
jmp
mov
mov
lods
scas
imul
mov
jle
out
fistps
mov
pop
daa
xchg
movsb
in
jmp
negl
lahf
dec
shll
mov
pop
clc
and
jmp
mov
notl
cs
bnd
fbld
andl
dec
lods
xchg
xor
lods
shll
inc
mov
pop
add
dec
ss
test
fistps
sub
cli
pop
fstpt
or
ja
xor
push
lcall
outsb
inc
sub
aam
cwtl
sbb
sbb
addr16
cmp
cmpl
jmp
xchg
ja
fbstp
lock
imul
xchg
test
inc
sub
add
sbb
adc
ds
adc
rcl
xchg
shl
cmpsb
fsubrs
daa
repnz
jmp
je
out
aad
out
jmp
push
pop
dec
pushf
test
push
mov
cmp
jmp
fwait
rorl
jmp
xchg
pop
imul
mov
andl
xor
add
scas
dec
mov
push
outsb
jmp
int3
dec
lock
pusha
cli
and
jno
call
loope,pt
cwtl
adc
stc
mov
xor
jmp
loopne
add
inc
sub
mov
bound
jmp
shl
inc
mov
xor
nop
mov
jecxz
add
lea
mov
scas
int
fwait
outsl
int3
pop
jmp
pop
fildl
scas
xchg
push
pusha
or
fistps
repnz
lods
jae
cltd
stos
insb
loope
dec
mov
dec
jmp
sub
lret
jp
neg
ds
repz
jne
sbb
fmul
lcall
stos
or
jp
out
scas
std
lahf
in
mov
xor
push
sti
sub
fbstp
jmp
mov
mov
cwtl
das
insb
jle
pop
xchg
repz
outsb
pop
add
add
repnz
popf
xchg
mov
and
inc
scas
call
imul
or
sbb
jb
stos
or
or
imulb
stc
lds
in
mov
fsubl
or
aad
sbb
jmp
aam
mov
into
dec
fs
loop
addb
jmp
and
push
movsl
xor
pop
jle
insb
sbb
popl
inc
or
test
sub
jmp
clc
outsb
pop
rol
cmpsb
lahf
lret
mov
cmp
out
bound
sar
sbb
add
jmp
add
stc
sub
hlt
jmp
mov
jbe
jle
push
daa
outsb
sub
jmp
sub
mov
loopne
push
push
pushf
sub
xchg
jg
jmp
dec
popa
test
repnz
out
outsb
cltd
push
cwtl
jmp
std
jnp
push
fnsave
cli
data16
sti
sub
mov
mov
jae
jne
jmp
stc
lcall
les
push
cs
sbb
ss
cmp
arpl
or
ficomps
scas
nop
popa
and
jmp
rcrb
imul
mov
sbb
add
pop
sbb
jmp
cmp
insl
aad
dec
js
rorb
pop
push
mov
jae
sub
pop
stos
testl
in
scas
sbb
dec
repz
ljmp
jg
mov
adc
mov
jmp
out
push
jmp
fisttps
je
dec
sbb
pop
dec
sub
inc
mov
lods
negb
xchg
fsubl
leave
test
sbb
pop
inc
outsl
cli
jmp
mov
mov
jmp
jbe
push
dec
div
insl
and
lods
sub
setb
jmp
jge
mov
int
or
bound
mov
data16
jo
lahf
sar
pop
repz
insl
stos
mov
call
lock
roll
movsb
dec
dec
push
sbb
jmp
lahf
and
ljmp
pushf
push
lret
repnz
jmp
pop
pop
push
push
hlt
dec
and
outsb
std
push
adc
das
sub
cmp
lret
add
xchg
fstps
sbb
add
or
insb
add
cld
lods
and
gs
pop
jns
push
dec
inc
jmp
pop
scas
outsb
xor
cmpsb
mov
sbb
int
out
sahf
xor
push
mov
and
and
cwtl
mov
sahf
cmpsb
pop
jmp
call
xchg
popf
cmp
enter
test
sarb
rorl
mov
out
add
mov
fs
enter
jae
push
cmpsl
sbb
nop
negl
pop
and
pop
jmp
push
int
mov
cmp
jmp
jecxz
dec
xchg
cmp
jmp
aam
arpl
push
cli
jne
xchg
or
mov
je
jmp
push
fwait
jmp
out
adc
outsb
int
jns
jmp
mov
sarb
aaa
jl
xor
mov
mov
jnp
shld
jmp
aaa
mov
mov
cmp
push
jle
lret
int3
xor
add
lret
inc
pop
pop
jmp
arpl
xchg
and
mov
scas
mov
dec
and
sbb
leave
es
lock
mov
sub
xchg
sub
pop
jp
push
mov
daa
inc
jmp
pop
sub
pop
cmpsb
icebp
jmp
lahf
shrl
or
mov
jmp
dec
xlat
int
enter
lock
pop
loop
dec
jns
es
lret
dec
sbb
in
jmp
outsb
inc
jnp
pop
aad
jmp
push
addr16
into
or
mov
and
shr
xlat
lods
inc
sub
mov
mov
sbb
cld
je
xchg
out
and
iret
cmpsl
xchg
test
add
dec
lods
adc
aad
inc
int
mov
ja
pop
rclb
sub
subb
cld
scas
jge
sub
int
mov
jmp
imul
in
push
fwait
repnz
mov
int
repz
sub
enter
cmpsl
and
jl
sti
cld
imul
and
jle
inc
inc
jmp
push
shr
imul
leave
les
loop
sti
push
enter
jne,pt
out
stos
adc
push
sub
dec
adc
cld
jmp
fwait
adc
mov
pop
stc
jmp
ret
push
mov
and
add
or
ret
jmp
dec
dec
add
outsb
ret
jns
dec
and
lcall
icebp
or
sub
cmp
pop
leave
jmp
jnp
add
out
sub
mov
sbb
sub
jmp
xchg
fnstenv
mov
jge
add
cli
outsb
add
pusha
add
xor
pop
gs
pop
ret
in
dec
fisttps
ficompl
jmp
fstps
jmp
mov
ja
push
outsl
jmp
addr16
xor
dec
adc
jno
push
nop
jmp
add
sbb
jle
aam
mov
lods
fsubs
or
jmp
aaa
icebp
or
mov
out
test
jb
pop
fisttps
xor
mov
lahf
divb
ljmp
jmp
push
xor
in
fucomi
es
cld
inc
cli
sbb
inc
jmp
lods
add
sub
cmp
push
push
mov
mov
lcall
push
and
cmpsb
pop
add
cwtl
nop
jmp
sbb
and
lods
lock
mov
and
sbbb
xor
jmp
sub
dec
jmp
aam
imul
mov
pop
dec
std
loopne
insb
inc
push
cmp
call
mov
mov
jp
or
sub
or
sahf
jmp
mov
repnz
dec
icebp
fs
pushf
int3
jmp
sub
dec
xchg
xor
gs
aaa
popa
sti
lods
ret
push
and
outsb
in
insb
shlb
aam
mov
mov
jecxz
cli
add
sub
jmp
fwait
or
pop
sti
daa
in
jmp
stc
mov
or
addr16
jmp
sub
pop
cmp
outsl
movsl
in
into
sub
mov
jmp
in
hlt
cli
scas
das
adc
pop
gs
cmp
adc
lods
add
mov
js
sub
loopne
sub
in
dec
stc
imul
loop
iret
xchg
sti
aas
jns
cmc
fwait
mov
fsubrs
xchg
ret
xor
scas
push
pusha
icebp
cmp
in
outsb
jg
sar
push
in
ja
aam
cmp
jle
jmp
ret
test
or
push
mov
stc
xor
push
sarb
adc
dec
sbb
jmp
sti
sbb
stos
out
dec
imul
jge
pop
jbe
xchg
xchg
or
loop
and
cmpsl
add
mov
xor
leave
fwait
andl
pop
inc
dec
push
clc
jmp
dec
xchg
cltd
sub
jmp
into
in
mov
mov
mov
jb
or
jmp
jecxz
push
sbb
lea
add
pcmpeqw
jb
hlt
insb
lret
out
jmp
lcall
xchg
cmp
xchg
and
shr
or
sahf
ljmp
fidivl
mov
inc
in
and
stc
jmp
orl
sarb
pop
mov
adc
mov
mov
popf
rcl
inc
and
adc
sbb
jmp
cli
enter
mov
shr
mov
mov
mov
insl
xor
unpckhps
and
mov
adc
xchg
sub
mov
xor
sbb
aad
or
adc
shrb
xor
lods
orl
xchg
lods
xchg
adc
xchg
cmp
ss
inc
jae
push
mov
inc
jnp
and
jns
sbb
and
jmp
repz
cwtl
sub
jle
pop
mov
insb
jmp
adcl
imul
inc
jge
pop
mov
sbb
mov
ja
jmp
js
cld
lods
or
movsl
outsb
sbb
test
imul
fdivrs
stos
leave
or
pop
push
cs
mov
loope
pop
lods
loopne
jnp
das
pop
mov
cs
into
pop
xor
iret
sti
fs
mov
imulb
idiv
int
lods
lahf
je
daa
and
orl
test
sahf
jmp
and
xchg
popf
lcall
xor
jo
rorb
jbe
movsb
mov
mov
adc
scas
cld
cmp
jge
rcll
notl
add
popa
mov
and
jmp
push
andb
stc
cmp
mov
sub
sbb
lahf
repz
fsubrp
test
js
jge
pop
outsb
dec
and
add
icebp
std
jmp
insb
cmp
jmp
lcall
lods
sti
sub
fmulp
pushl
inc
cmp
jmp
pop
inc
dec
fsubrl
mov
js
lods
stos
mov
stos
sub
jmp
inc
dec
push
cwtl
adc
jmp
ljmp
jmp
and
mov
mov
jmp
inc
repnz
inc
shlb
lock
or
sbb
xchg
dec
mov
testb
or
inc
xchg
jmp
fsubrs
inc
pop
aaa
cmc
jmp
pop
mov
push
xchg
mov
lods
out
sub
sub
out
or
lea
push
jmp
stos
push
push
sbb
lock
shlb
jmp
clc
xchg
in
push
fs
jmp
pop
sub
test
adc
sbb
mov
movsl
sbb
hlt
sbb
sub
outsb
lds
icebp
mov
outsb
adc
push
aad
inc
xorl
inc
cmp
and
call
sub
lods
pop
mul
adc
fxch
les
dec
pop
out
aas
dec
pushf
mov
outsb
jmp
notl
jmp
jns
mov
lods
pop
je
dec
std
adc
push
movsb
jmp
sti
sub
inc
pushf
mov
outsl
add
pop
adc
jmp
leave
pop
add
test
loopne
mov
enter
jae
xor
mov
mov
add
out
jge
dec
jbe
xchg
and
push
adc
rcll
popf
loop
scas
push
pushf
dec
sub
orb
jmp
inc
mov
int3
xor
or
or
sub
push
mov
cmp
or
movsl
sbb
stos
es
adc
mov
stos
add
mov
jp
outsb
push
xor
repz
pop
cmp
jo
fnstsw
test
and
in
jmp
out
xor
sbb
std
xor
inc
inc
lods
adc
and
xor
dec
fnsave
subb
xchg
das
or
jmp
les
enter
jmp
cmp
jbe
jmp
dec
sbb
mov
lea
cmp
lods
hlt
cmp
outsb
pop
cmp
sti
fsubrs
lods
movsb
test
add
pop
dec
dec
pop
ds
inc
dec
repz
fwait
jmp
xchg
lea
ljmp
sub
inc
push
jecxz
hlt
repnz
sub
mov
jmp
cmp
mov
sub
adc
repz
pop
clc
scas
inc
aas
dec
in
cltd
cmpl
pop
dec
inc
sub
lods
jmp
mov
mov
sbb
lcall
dec
lods
rorb
jmp
andl
pop
jmp
mov
jmp
and
test
repnz
je
jno
push
xchg
sbb
pop
fucomip
fldl
sub
lcall
jp
aaa
cld
push
xchg
xor
icebp
les
push
sub
pop
mov
jg
jmp
fdivs
cmp
aad
sub
mov
cmc
sub
pop
inc
pop
bound
sub
sub
fdivrp
pushf
mov
push
jmp
jl
dec
sbb
and
push
cli
shlb
mov
arpl
jno
lret
out
lock
lret
inc
popa
into
pop
sbbl
dec
dec
lods
sub
stos
mov
out
jns
push
mov
add
data16
and
and
shr
sbb
jmp
jmp
aas
mov
aam
in
dec
rcrl
push
fldpi
loope
in
add
inc
adc
jno
or
jmp
pushf
push
pop
iret
test
insl
repz
jmp
in
out
mov
pop
adc
out
out
adc
jmp
lcall
jmp
pop
mov
repnz
dec
pop
movsl
mov
inc
fisubrl
jle
jb
xor
jmp
add
push
lock
xor
call
out
cmpsl
mov
jmp
mov
jno
jmp
xor
jmp
fadds
mov
cwtl
outsl
jmp
or
jnp
add
jmp
shrb
mov
jl
push
or
xor
sarb
jecxz
les
mov
fld
inc
outsb
cmp
cmp
addr16
mov
out
mov
xchg
add
pop
xchg
adc
jmp
cmp
add
cmc
jmp
lock
sahf
xchg
pushf
and
add
mov
jno
inc
rorl
shlb
out
gs
jmp
jne
fldt
fwait
divl
add
pop
lcall
and
add
sbb
in
add
inc
xchg
and
xor
enter
aam
push
scas
sub
clc
fwait
out
sub
adc
subl
mov
cli
and
maskmovq
push
jg
test
scas
xchg
mov
and
mov
xor
lods
popf
mov
jmp
out
inc
sub
outsl
sub
xor
cmpsb
sti
cli
in
lods
fwait
lret
dec
dec
insl
mov
jmp
fnstenv
lret
jge
xchg
push
pop
jmp
cmp
jmp
mov
nop
dec
jmp
stos
cmpsl
loope
cmp
xchg
es
jmp
pop
insl
sub
or
xchg
jmp
pop
arpl
cmp
sbb
out
or
cmpsl
jnp
and
lock
pop
or
push
pop
dec
jmp
xor
nop
ret
jmp
mov
inc
call
movsl
enter
jmp
pop
out
mov
xlat
jecxz
filds
push
mov
jmp
dec
xor
xchg
xor
jne
fbld
jmp
insl
xlat
lds
sbb
ljmp
add
xlat
lahf
repnz
outsb
mov
add
test
loop
jmp
inc
nop
decl
cs
mov
pop
sub
push
mov
xchg
cli
js
sbb
ja
pop
push
add
testb
out
inc
mov
mov
pop
fisttpl
lahf
add
lods
popa
outsb
sbb
jmp
js
xor
jb
movsl
jmp
int3
aaa
imul
rorl
cmpsb
cli
imul
cmc
and
shll
iret
mov
or
leave
sahf
cli
rolb
adc
mov
addr16
mov
lods
pop
bnd
adc
and
sbb
sbb
movsl
mov
push
jmp
lret
ljmp
mov
add
testb
mov
into
jle
arpl
sbb
jmp
sub
mov
das
pop
adc
fwait
sub
cmp
cltd
push
jmp
out
cmp
mov
or
and
outsb
add
pop
pushf
or
scas
and
jmp
mov
mov
jmp
rorl
insl
jmp
xchg
jno
push
pop
inc
jne
mov
stos
xchg
inc
mov
movsb
fimull
push
or
aam
pop
or
ret
sub
es
xor
ds
mov
aam
jmp
sbb
jecxz
cld
add
dec
orl
pushf
xchg
stos
jmp
daa
aaa
adc
hlt
ja
jmp
test
nop
cwtl
and
sub
aad
dec
cmp
inc
fsubrp
call
or
mov
cmc
jnp
loope
rclb
pop
xor
xor
jno
insb
xor
pop
inc
and
jmp
stos
xor
jmp
mov
mov
inc
cmpsb
push
mov
in
or
out
leave
fcomip
loopne
jmp
cmp
shr
xor
xor
std
adc
nop
lods
dec
mov
and
insb
lahf
jmp
clc
xor
xlat
or
jmp
and
pop
outsl
lods
jmp
cmp
inc
push
or
xor
lods
pop
hlt
or
adc
imul
cmpl
cld
jmp
mov
and
out
idivl
daa
aad
inc
jns
fdecstp
clc
sbb
ja
in
ret
into
jmp
dec
mov
jmp
pop
xor
loope
xlat
jmp
and
pushf
incb
xchg
xor
sbb
xor
les
fwait
pop
cs
lods
daa
cmp
mov
mov
dec
add
adc
add
mov
cmp
loope
inc
hlt
jo
jmp
and
and
dec
iret
sbb
cmp
cmp
fwait
stos
sti
stos
sti
gs
inc
mov
shrb
mov
ja
scas
sti
push
data16
push
int
add
popa
lahf
jmp
pop
add
xchg
mov
xor
sbb
je
sub
movsb
or
or
scas
imul
or
pop
aad
imul
and
nop
pop
jmp
imul
and
pop
sbb
mov
jno
int
roll
push
or
inc
test
mov
daa
insb
dec
mov
pop
xorb
xchg
movsl
scas
dec
ljmp
mov
cli
pop
leave
jle
mov
xor
loope
outsb
jo
nop
pop
aam
jmp
popa
in
shrb
adc
sub
leave
out
xchg
and
ljmp
add
mov
mov
sti
dec
mov
dec
xor
icebp
add
sbb
inc
out
adc
sbb
scas
sbb
sti
test
lret
push
movsl
fsubl
mov
xchg
lods
out
push
push
push
icebp
movsb
mov
jmp
rclb
pop
xchg
std
inc
adc
mov
push
mov
cltd
mov
cli
repz
or
shll
jmp
out
cmpsb
xor
outsb
adc
fisubrl
mov
aas
stc
fimuls
mov
sbb
pmuludq
jmp
or
loop
jmp
mov
dec
out
fwait
ss
mov
scas
jmp
pop
sbb
js
aaa
and
xchg
xorl
sub
iret
int3
adc
inc
out
aad
sub
jl
mov
mov
lods
ret
lods
cmp
xchg
movd
jnp,pn
dec
lods
sbb
lods
lret
fcom
inc
sub
jno
or
pop
dec
cmpsb
out
sub
cltd
notl
pop
les
push
add
sub
imul
xchg
sbb
dec
pop
lods
xor
sbbl
repz
xchg
jmp
mov
mov
mov
dec
adc
es
jle
mov
xchg
or
hlt
cmp
add
jmp
jno
pop
inc
mov
jmp
adc
nop
je
sub
adc
jbe
ljmp
mov
scas
adc
mov
stos
sub
xchg
jmp
shll
fwait
repz
fucomp
inc
mov
cmp
outsb
dec
mov
bound
jmp
or
imul
cmp
mov
push
and
sbb
jb
orl
test
test
sub
cmp
bnd
mov
js
mov
mov
and
or
dec
inc
jmp
xor
lods
inc
lret
enter
push
dec
js
jmp
inc
lds
jmp
inc
sahf
out
lods
cli
aaa
ljmp
mov
jmp
fdivrl
aad
pop
lods
mov
orl
lea
and
mov
jmp
inc
xchg
and
sub
jmp
idivl
mov
inc
jmp
push
add
cmp
cmp
lods
sub
push
and
dec
dec
test
push
addb
jmp
iret
mov
in
jmp
aaa
dec
lahf
mov
inc
ds
and
js
push
cmc
dec
nop
jmp
jg
cmpsl
lcall
ds
std
or
push
popf
jbe
dec
loopne
jmp
mov
mov
jmp
mov
sbb
pop
icebp
mov
popa
mov
ds
pop
incl
jne
xor
js
inc
mov
mov
and
xchg
jmp
stos
or
out
sbb
js
das
sbb
popf
dec
test
sahf
jns
cld
adc
aas
iret
fucomip
int
inc
negl
sbb
jmp
mov
loopne
dec
mov
jmp
sub
loope
jmp
adc
in
scas
mov
inc
sub
pop
sub
sarl
jge
jmp
ret
adc
lcall
lods
sub
inc
hlt
sbb
jg
data16
push
repnz
test
imul
add
std
imul
fsubs
gs
aad
std
dec
insb
dec
or
in
jo
jbe
xor
test
jmp
sub
lds
shr
rcrl
jl
sbb
cmp
and
pop
sub
test
popf
dec
pusha
or
cmpl
shll
pop
cmpb
xchg
lahf
mov
pop
mov
sub
xchg
jo
cmp
lock
repnz
mov
lods
jge
mov
fldcw
mov
dec
pop
and
lret
push
xlat
and
xor
scas
sbb
jbe
dec
push
fwait
sbb
ret
jp
mov
rdpmc
sbb
sbb
jmp
in
or
cwtl
xchg
out
add
cmp
js
iret
pop
pushf
andl
ds
sti
xchg
in
inc
pop
add
ljmp
fcomi
in
sbb
jmp
es
cmp
sub
xchg
pop
jmp
fldenv
mov
jmp
lds
aad
or
imull
insl
fimull
xchg
ljmp
cld
inc
ss
push
mov
jecxz
or
fwait
loope
add
popa
lods
pop
push
fidivrs
jecxz
pusha
xchg
js
jp
adc
ret
dec
and
add
aas
jge
cmp
call
adc
out
lods
dec
frstor
lret
dec
and
rorb
pop
shrb
jmp
xor
cmp
push
mov
jmp
out
fildll
inc
imul
and
stos
into
jmp
jno,pn
push
jns
test
hlt
lods
insb
dec
add
ja
lods
lods
or
sbb
push
in
push
sub
sub
stc
icebp
push
jmp
aam
cmp
add
pop
dec
sahf
outsl
mov
imul
jp
fs
int
push
or
stos
pop
ret
mov
mov
mov
push
mov
jmp
adcl
inc
inc
jo
or
adc
aas
pop
pop
js
jae
test
out
add
es
mov
jmp
pop
mov
int3
fwait
pcmpeqw
das
stos
fstps
sbb
dec
leave
xor
mov
jb
dec
clc
mov
push
or
adc
jne
por
mov
push
decb
jmp
in
testl
mov
mov
sub
jmp
add
pop
hlt
jbe
sub
jb
cltd
mov
mov
cmp
jmp
fistps
lods
rclb
pop
mov
arpl
adc
iret
adcl
xor
jmp
pusha
mov
test
stc
sbb
or
scas
inc
int
mov
jmp
push
iret
imul
and
pop
jb
ljmp
jecxz
popa
into
sub
cmp
enter
cmp
push
outsb
inc
xor
lahf
lea
dec
and
xchg
btsl
loop
mov
sahf
mov
out
add
or
sub
jmp
hlt
scas
ret
jbe
je
jmp
sbb
dec
mov
imulb
add
pusha
sub
lods
ds
clc
dec
pop
pop
fidivrl
jmp
les
lds
push
sbb
cmp
inc
scas
jecxz
enter
stos
inc
movsl
lds
xor
stc
or
lea
inc
popa
mov
jmp
adc
inc
mov
pop
outsl
adcl
push
fcompl
iret
jmp
test
pop
jae
out
push
jmp
push
or
ret
mov
cmp
sub
jmp
pop
nop
mov
and
sub
fistps
push
in
adc
js
and
icebp
sbbl
lods
imul
decb
mov
mov
fdivl
pop
in
mov
addr16
add
or
push
movsl
repz
sbb
mov
and
inc
cmp
icebp
jmp
loopne
jne
sub
not
ret
add
cmpsl
adc
add
inc
pop
fldpi
aas
ljmp
xor
cmp
sti
iret
mov
out
jmp
jbe
mov
jmp
and
xchg
jge
ja
arpl
cli
mov
jmp
shll
xlat
jo
jmp
jb
add
fidivs
mov
sbb
pushf
xlat
das
shll
mov
xchg
sbb
dec
inc
sbb
pusha
push
jl
cmp
loopne
int
sub
push
or
jmp
out
adc
pop
pop
pop
sub
xor
sbb
sub
gs
mov
mov
mov
orb
xor
data16
stc
pusha
scas
and
cltd
cs
fs
loopne
cwtl
mov
scas
cli
std
daa
push
mov
xorb
pop
in
stos
lahf
jno
xlat
outsl
popa
fiadds
cmc
adc
mov
jb
mov
fadds
pusha
add
in
jbe
int3
xchg
jg
es
ljmp
in
xor
rclb
xor
dec
sub
mov
dec
lahf
test
jmp
xor
test
sub
xor
pop
clc
jmp
mov
orl
push
stos
xor
dec
cmpsl
cltd
loope
adc
popa
dec
out
add
imul
sti
lds
iret
push
lea
jbe
jmp
push
adc
mov
or
pop
jmp
mov
xorps
imul
lods
fisttps
cmpsb
xchg
jmp
pushf
fwait
test
idivl
daa
xchg
xor
sahf
add
and
xchg
adc
mov
jl
pop
rol
sbb
push
mov
pop
gs
inc
es
stc
mov
push
dec
xor
cld
dec
push
cli
dec
xchg
das
fidivs
dec
inc
lods
pop
mov
and
mov
mov
xor
jo
loop
sbb
xchg
mov
jmp
loope
lods
add
arpl
adc
push
loop
icebp
xor
pop
mov
add
cmpsl
cmpsb
sub
push
movsl
sub
jmp
ret
lcall
popa
sub
push
dec
out
pop
mov
xchg
pop
repz
lods
stos
daa
cmp
ret
adc
add
pop
cs
push
cltd
ds
lea
sbb
and
dec
mulb
stos
jmp
icebp
sub
mov
dec
leave
xchg
out
dec
subb
mov
xor
push
test
test
lods
mov
scas
xchg
loopne
pop
mov
and
lods
jl
div
and
pop
xchg
pavgw
pusha
adc
js
scas
mov
push
fcoms
clc
dec
dec
cs
adc
sbb
daa
sbb
stos
stos
add
je
mov
dec
cmp
pusha
femms
out
adc
jo
div
jmp
fidivrl
ret
add
out
imul
sub
enter
add
adc
jecxz
fdecstp
inc
inc
cmpsl
dec
shr
lret
test
mov
jno
rcrl
or
cmpsb
push
jmp
call
arpl
jmp
mov
jle
sub
pop
push
push
lods
xchg
push
imul
push
jmp
mov
movsl
movsb
jmp
mov
jnp
mov
test
lods
fwait
pop
stc
fnstenv
lods
and
addr16
jmp
incl
jge
fnstsw
xchg
repnz
push
sti
and
adc
ljmp
inc
mov
test
push
mov
dec
or
sbb
mov
repnz
test
jns
outsb
cli
fimull
sub
js
jmp
hlt
push
decl
ljmp
aas
cmp
enter
lods
jno
push
pop
jle
adc
mov
sub
idivl
repz
shufps
shrl
jns
dec
int3
les
jmp
jmp
cmpl
outsb
mov
fildll
mov
cmp
pop
sti
adc
mov
in
cwtl
jmp
xchg
dec
cmp
sub
in
sti
cltd
xchg
inc
and
orl
lret
into
ljmp
js
xor
in
call
sub
fucomp
jp
iret
add
mov
insb
in
cmp
xor
sti
push
push
pop
xor
jmp
jnp
test
push
push
xor
xchg
in
mov
insl
or
jmp
adc
outsl
jmp
pop
push
out
movsl
inc
add
xor
addr16
or
jl
es
adc
jmp
sbb
xchg
fiadds
jmp
or
mov
sbb
clc
or
and
inc
test
sar
lcall
stos
or
cmp
jbe
sbb
jmp
data16
popa
insb
pop
sub
lahf
sbb
push
or
lret
mov
pop
and
or
pop
jmp
sub
jne
in
stos
xchg
jmp
addr16
xor
fwait
mov
mov
adc
int
test
sub
jmp
push
sub
mov
sti
mov
cli
mov
mov
jmp
jg
rorb
add
push
dec
and
adc
test
addr16
pop
andb
out
cmp
lcall
jg
xchg
xchg
aam
in
pop
jl
jb
lahf
popa
sti
pop
or
xor
push
adc
jmp
sbb
sub
add
dec
jmp
es
or
orb
sbb
dec
inc
mov
frstor
jo
fcoms
jmp
push
enter
hlt
mov
sbb
xchg
sub
sbb
into
imul
jo
sbb
aam
dec
shlb
jmp
sbb
cmp
mov
dec
and
sub
jmp
out
mov
addr16
ja
adc
andl
movb
imul
outsl
sub
mov
loop
out
mov
jmp
call
nop
jmp
mov
jne
xchg
pop
mov
jle
nop
mov
jmp
jns
push
ss
xor
fisubs
mov
xorl
add
aad
add
rcrl
cmp
decb
and
jo
xor
push
sbb
xor
mov
and
fs
sub
pop
push
xchg
and
orb
push
add
leave
dec
enter
insl
jmp
stos
lds
dec
popa
sbb
lods
and
dec
sub
jno
sti
pop
xor
and
adc
mov
je
dec
add
xor
lret
jle
scas
and
rcl
or
sbb
sub
and
adc
iret
mov
sarl
js
fnstcw
xlat
sub
jmp
jbe
test
pop
sub
jmp
lds
xchg
mov
inc
cmpb
or
in
dec
divl
push
scas
fdivrl
push
cmp
cmpsb
jmp
inc
popa
inc
xor
int
pop
mov
shll
pop
inc
jae
mov
xor
cmp
dec
push
xchg
inc
lret
push
jmp
xchg
ds
push
nop
popf
sbb
inc
cmp
ret
mov
imul
popf
mov
jmp
jg
fwait
enter
jmp
imull
es
subb
jbe
mov
outsb
push
outsl
adc
mov
jb
fs
and
inc
jmp
fwait
xchg
mov
movsb
iret
js
subb
lahf
mov
shll
jmp
dec
pop
popf
or
xchg
enter
or
cmpsl
pop
das
adc
inc
sub
out
sub
ret
sub
jmp
aad
add
imul
into
xor
loope
les
push
por
imul
sub
cs
or
cmp
sbb
jmp
bound
and
pop
les
or
push
fwait
aaa
jmp
lds
repz
cmpsb
adc
lods
adcb
push
incb
mov
adc
push
out
test
mov
jmp
leave
cmpsl
adc
aad
scas
ljmp
cwtl
dec
mov
jmp
pop
xor
imul
dec
dec
lods
adc
fcomip
sti
addr16
mov
xchg
push
icebp
adc
fisttpll
outsl
movb
add
lods
popl
scas
aad
jmp
jp
xor
int
push
dec
ret
push
lods
push
xor
lret
add
dec
test
ljmp
jmp
mov
fucomp
sub
into
ficomps
movsl
arpl
dec
imul
repz
pushf
cmp
loop
inc
jmp
inc
mov
pop
xchg
imull
add
ljmp
into
xchg
xor
mov
cmp
stc
ret
cmp
push
dec
jmp
inc
repnz
jmp
lahf
incb
push
jg
jb
icebp
stos
add
adcb
jmp
xchg
aad
lret
jnp
jne
movsl
mov
cmp
jmp
cmp
in
cmc
into
inc
ja
dec
mov
jnp
sti
push
inc
sub
mov
mov
outsl
je
lahf
shr
arpl
adc
movsb
pop
test
fucomip
inc
inc
push
fwait
sarl
xor
dec
cmp
sbb
jmp
mov
mov
jo
insb
jmp
xor
adc
lods
imul
shrb
std
jb
popf
or
adc
in
push
adc
mov
clc
jmp
jno
pusha
push
shlb
mov
inc
addl
mov
and
jmp
mov
inc
jmp
push
mov
pop
aas
mov
jae
movsb
cmc
idivb
sub
ret
data16
and
push
xor
dec
xchg
mov
jmp
sti
adc
dec
push
pushf
push
jmp
je
xchg
mov
cltd
fildl
dec
jmp
and
pop
xor
push
push
jmp
lds
int3
jmp
sarb
sub
xchg
or
mov
or
push
jmp
les
jmp
rclb
popf
xchg
mov
sarb
dec
inc
scas
outsb
pop
ret
lods
test
stos
ltr
mov
iret
mov
faddl
movsl
out
push
adc
add
xchg
inc
test
ret
mov
shrl
push
cmp
arpl
mov
xrelease
jmp
sti
xor
xlat
sub
adc
cmp
xor
add
stos
enter
mov
in
jecxz
fdivr
mov
jmp
cli
loop
push
mov
test
pop
lahf
test
xor
push
ds
stc
add
rorb
jmp
and
jmp
movsb
mov
xchg
into
pop
jmp
in
je
dec
nop
outsb
sbb
cmp
and
sar
mov
jmp
movsb
sub
stos
subl
mov
push
data16
or
arpl
mov
test
inc
jns
xchg
mov
movsb
jb
push
pushf
outsb
dec
sub
fwait
rorl
call
nop
sub
push
fcomps
jno
and
jmp
inc
mov
shrl
int3
cmp
out
mov
sti
out
jo
cli
sahf
cmp
outsl
sub
arpl
les
sbb
adc
or
popf
dec
ret
inc
push
push
jmp
into
dec
sub
xor
xor
mov
mov
push
mov
test
mov
sub
in
xor
lods
fdivs
or
or
jmp
jb
sbb
inc
mov
popf
adc
mov
lahf
movsb
ret
jl
jne
sub
xchg
les
movsl
jnp
out
jmp
or
or
mov
add
subb
inc
scas
dec
and
loopne
lock
ja
in
mov
pop
push
jmp
loop
inc
xor
fs
in
subl
cmpsl
sbb
push
xchg
mov
or
dec
mov
push
mov
jmp
add
shll
jae
fistl
mov
and
jbe
add
pop
je
in
lcall
in
and
sbb
sub
sub
dec
lret
mov
loop
adc
xor
push
shr
in
mov
jmp
pop
or
aad
mov
jmp
call
jle
jb
push
or
mov
cli
pushf
mov
adc
mov
jne
sbb
inc
outsl
pop
in
arpl
daa
stos
xor
inc
or
sbb
loope
push
cmpb
in
jmp
push
push
lods
push
icebp
pusha
lock
mov
adc
repnz
loope
pop
push
addr16
jmp
lock
outsl
jmp
jl
shlb
jmp
push
ds
jb
lock
jns
push
inc
add
mov
loop
andb
pop
jmp
ret
sub
dec
jns
insb
xchg
ja
cmpsl
and
dec
add
push
sub
add
xchg
cwtl
call
push
arpl
je
sti
xor
or
mov
gs
outsb
push
enter
mov
adc
or
nop
inc
or
jp
out
jmp
sbb
mov
loop
sbb
jbe
xchg
les
int3
jmp
add
jmp
xor
push
jno
jbe
jmp
jb
push
js
stc
add
xor
pop
cmp
int
inc
jae
xchg
outsl
faddl
push
aas
rol
aaa
ss
mov
lahf
push
xlat
or
lods
or
fs
gs
in
jmp
cmp
push
jmp
xchg
mov
pop
jmp
jge
lock
outsl
jbe
out
push
jne
imul
lds
inc
loopne
cmpsb
push
dec
jle
lret
rcr
add
jmp
dec
roll
les
push
sub
mov
loop
lret
sbb
jmp
mov
sarl
inc
sbb
mov
loop
mov
out
or
or
jl
andl
push
cmp
pop
lods
adc
std
call
xor
mov
xor
xor
dec
fcmovne
cmp
loopne
jmp
pushf
sbbl
xor
fcomps
std
cmp
adc
or
push
add
sbb
repnz
lock
jmp
divl
sahf
imul
movsb
jo
dec
lds
pushf
add
jmp
scas
test
loop
stos
cltd
in
jmp
repnz
mov
lahf
daa
dec
cmpsl
push
lods
fwait
mov
cld
mov
in
pop
je
fiaddl
sub
xor
cmpb
sub
testl
imul
les
pop
adc
sub
test
int3
jmp
add
inc
jp
adc
jmp
push
jbe,pn
xchg
je
imul
jb
jmp
rcrb
push
jl
inc
jg
stos
jmp
mov
in
dec
dec
loope
lods
rcr
pop
lods
adc
pop
repz
lret
nop
fsubrp
rcll
in
dec
jp
imul
jnp
cmc
imul
clc
repz
or
jo
jle
jmp
mov
aad
pop
add
mov
sti
jmp
or
xchg
mov
imul
data16
push
fistps
sub
popa
jl
shll
movsb
jbe
pop
es
lahf
or
int
dec
and
cmp
mov
dec
js
lods
add
push
mov
jmp
sbb
js
inc
or
leave
roll
imul
pushf
insb
jo
mov
sbb
loop
lock
xlat
sub
dec
sti
adc
xor
inc
adc
jmp
pop
fimuls
jmp
cmpb
push
jnp
repz
cmp
jmp
mov
das
stc
mov
mov
or
pop
out
push
adc
pop
data16
xorl
cmc
sub
mov
jmp
fildll
jns
lcall
pop
xchg
adc
lahf
push
push
jmp
dec
push
xor
lret
rcrb
sub
das
inc
mov
pop
pop
push
cld
inc
lret
rcll
push
sub
xor
sub
jmp
and
jmp
pop
or
lds
ret
jmp
push
cmp
xor
clc
sbb
iret
lods
into
jno
pop
inc
pop
mov
dec
add
stos
loopne
add
jnp
dec
aas
jmp
sub
push
adc
pop
mov
arpl
mov
dec
ljmp
insb
jb
dec
jmp
mov
out
dec
js
or
xchg
jmp
push
dec
jbe
insl
enter
jecxz
sub
xchg
movsl
sti
nop
mov
mov
sub
out
xor
add
iret
mov
cmpsl
adc
aam
in
push
xchg
mov
jp
jno
das
cld
dec
mov
sbb
sbb
adc
jo
aas
aam
jmp
adc
add
repnz
movsb
cmp
fs
lods
mov
inc
pop
hlt
sti
ss
mov
jmp
sbb
cltd
adc
pop
pop
inc
pop
shrb
fsubr
lahf
insb
mov
es
sub
imul
lock
mov
fists
mov
scas
mov
mov
or
or
aam
dec
mov
scas
xchg
int
incl
lods
popa
xor
sbb
jmp
and
cltd
ret
mov
mov
fmul
addr16
ja
push
outsl
decb
test
ret
mov
or
jmp
jns
daa
sub
sub
inc
lcall
idivb
cld
add
ret
push
or
lods
sub
xlat
hlt
xchg
or
mov
fmuls
aad
lcall
pop
jmp
icebp
pop
cmp
pop
jns
mov
mov
sbb
xor
inc
jmp
pop
push
fsubrl
mov
cli
ret
fisubl
xchg
stos
cmp
not
mov
mov
lea
ret
mov
sti
jg
arpl
ja
test
cmp
cli
jmp
loopne
adc
scas
mov
es
jne
imul
adc
xor
test
add
aad
push
inc
or
jmp
in
xchg
inc
sbb
push
fs
and
xchg
repnz
hlt
mov
jnp
jge
or
rcrb
xor
push
shr
xor
mov
into
jg
jb
mov
or
pop
mov
in
mov
jmp
iret
inc
dec
mov
repz
das
fldpi
push
pop
pop
je
test
cmc
xchg
call
mov
movsl
aas
xchg
dec
les
sub
gs
jne
push
ljmp
sub
pop
pop
int
jmp
div
sub
loop
stos
sbb
adc
jmp
lods
jmp
shll
sub
loope
dec
in
mov
or
add
add
outsb
fdivl
push
inc
test
mov
jmp
and
popa
xchg
mov
data16
repz
jmp
sub
inc
push
inc
fucomi
lahf
jl
pop
dec
mov
xlat
mov
outsb
cmp
and
daa
or
faddp
ljmp
es
icebp
nop
arpl
iret
stos
sub
notl
jmp
mov
xchg
rol
mov
or
push
pop
imul
int
decl
fcom
outsl
xor
dec
mov
stc
or
hlt
loop
into
jmp
sbb
sbb
mov
jmp
mov
mov
mov
stos
jmp
dec
adc
pushf
test
mov
or
out
cs
das
mov
repz
add
mov
mov
push
sbb
in
lods
inc
mov
jne
orb
movsb
xor
xlat
dec
lods
mov
ret
xchg
dec
mov
jmp
push
outsb
xor
fxch
cmpsl
daa
aas
jmp
ja
in
into
lock
roll
scas
mov
out
imulb
or
mov
inc
sbb
inc
repnz
imul
sti
imul
std
jmp
outsb
sbb
or
jp
jmp
inc
aad
inc
and
int3
imul
out
repnz
js
mov
in
and
jmp
nop
bound
clc
lock
jmp
imulb
cmp
sub
xchg
lea
fucomip
push
xor
cwtl
mov
outsl
pop
scas
sbb
adc
xchg
out
push
pop
push
into
mov
xor
mov
dec
scas
jp
jo
imul
mov
push
das
xchg
out
push
jmp
or
rorl
gs
dec
aad
mov
or
movsb
lcall
rcrl
cs
movsl
or
sub
or
xor
adc
scas
js
adc
lret
push
push
jmp
inc
in
add
out
inc
pop
sub
cltd
cs
push
inc
iret
jmp
mov
mov
div
jle
sbb
lea
sbb
push
leave
sbb
repz
push
fdivs
pop
dec
or
mov
fwait
sub
in
jnp
inc
jmp
push
jne
adc
inc
xchg
jno
cmp
jae
xchg
inc
test
repnz
sbb
imul
push
push
mov
adc
notb
and
jmp
outsl
push
test
jmp
dec
out
cmp
pop
mov
cmp
idivb
pop
fidivrl
sub
inc
lds
push
fwait
sti
xor
jo
addl
sbb
sbb
imul
xor
hlt
dec
adc
jmp
push
ja
xor
repnz
jmp
adc
dec
hlt
mov
jmp
sub
repz
out
xor
inc
scas
fmulp
jecxz
mov
jmp
cld
sti
sub
inc
out
addr16
cmpsb
roll
shl
dec
mov
mov
push
pushf
jmp
cltd
fcoms
sbb
jmp
mov
loop
mov
push
xor
jle
mov
jmp
or
dec
stc
clc
shlb
lea
pop
sbb
jb
and
jmp
pop
xchg
inc
sub
jmp
dec
jg
push
sub
stc
mov
jmp
jo
push
sub
movsl
cmp
outsl
pop
fwait
xlat
lret
arpl
test
inc
adcb
testl
shlb
sub
into
aaa
pop
int3
sub
movsl
sti
mov
loop
aas
lcall
in
push
hlt
add
xor
mov
inc
cmpsl
jmp
push
fisubrs
cmp
sbb
add
lods
add
pop
xor
jle
jne
mov
idivl
aas
lods
pop
and
std
andb
mov
jmp
outsl
push
inc
fs
and
pop
addr16
jmp
fildl
ljmp
pop
daa
dec
lods
loopne
cmpsb
rcrb
mov
outsb
in
xchg
das
test
xchg
mov
sti
pop
xor
xchg
sbb
std
lods
mov
orl
shll
or
std
lock
add
xor
or
jmp
cmp
cld
jmp
sbb
pop
sti
mov
pop
loop
sub
loope
ret
mov
int
or
andb
out
std
test
in
fldl
cmp
jbe
mov
or
fsubl
movsb
lea
pop
imul
lods
push
xor
mov
stos
stos
sub
loopne
repz
mov
cmc
and
test
mov
std
dec
mov
lock
incb
ljmp
iret
imul
lea
pushf
movsl
mov
or
mov
stos
push
push
pop
cmp
out
fldpi
cli
and
stc
es
jg
push
mov
ljmp
in
or
adc
adc
jp
mov
inc
mov
mov
pop
fucomi
les
sti
or
add
sahf
mov
test
jbe
sub
jmp
arpl
sub
xorl
jmp
sbb
movsl
jmp
arpl
add
bound
xor
inc
push
fcmovne
sahf
ja
jmp
iret
inc
mov
jmp
fwait
cli
insb
sub
mov
outsb
cwtl
fstl
adc
mov
jne
jmp
scas
out
cmpsb
jecxz
into
je
or
cmp
mov
lds
jmp
fidivl
xor
xchg
aas
filds
adc
stc
mov
and
fidivs
mov
test
scas
stc
dec
std
mov
push
add
jg
outsb
jbe
fucomi
jmp
ljmp
adc
cmp
or
jp
outsb
xor
jmp
pop
xchg
iret
xor
jmp
std
and
jbe
mov
scas
adc
cmpsb
test
xchg
jo,pn
pop
fmuls
out
fmulp
hlt
ljmp
and
mov
lods
test
arpl
push
jns
addr16
mov
or
inc
push
movsb
inc
jp
xor
shlb
leave
call
xchg
xchg
jmp
ret
cmpsb
lahf
test
ret
stos
sub
push
add
mov
xchg
jno
sbb
sub
ds
hlt
jmp
lcall
sbb
jmp
and
push
mov
in
xchg
jmp
stos
add
movhps
dec
xor
pop
sub
jmp
divl
daa
jmp
inc
mov
int3
jmp
cmpsl
ret
cmp
stos
lods
mov
cmc
adc
and
fistps
repz
sbb
bound
fcoml
jbe
inc
out
sbb
sti
mov
or
jmp
mov
pop
push
cs
jg
outsl
dec
pushf
mov
lret
lahf
adc
roll
fdivrl
in
cmp
jnp
or
fwait
xchg
orl
inc
adc
pusha
lea
inc
mov
sahf
jmp
jge
cltd
or
int
jbe
mov
jmp
lahf
add
add
in
imul
mov
inc
jmp
or
jmp
test
ret
mov
xchg
in
aas
mov
pop
scas
jmp
cmc
das
or
or
mov
loope
sub
jmp
inc
ljmp
inc
mov
shrl
mov
adc
mov
cmp
mull
or
push
push
xchg
dec
int3
popa
push
sbb
ljmp
jmp
and
mov
mov
mov
pop
adc
lret
pop
ja
jmp
sub
inc
test
xlat
jle
lret
js
or
sbb
mov
andb
icebp
sub
or
sbb
fnsave
jmp
test
incl
pop
and
jne
jg
jns
xchg
stos
lods
cmpsb
sahf
mov
add
es
in
mov
pop
inc
jmp
dec
mov
xchg
jns
rcll
cmp
movsb
lret
icebp
jmp
pop
and
mov
scas
out
add
mov
lret
popf
dec
clc
jecxz
movsb
sbb
lahf
cli
push
int3
nop
call
andb
stos
outsb
dec
inc
arpl
fnstsw
pop
icebp
test
dec
lds
scas
jmp
aad
es
adc
jmp
ret
add
mov
sub
cmp
jl
fmull
jmp
ds
sub
in
jmp
test
sbb
sub
pop
aaa
jmp
push
dec
push
cli
js
sbb
jmp
popa
pusha
cmp
cmc
inc
jmp
subb
outsl
jp
pop
and
test
cmpxchg
sub
jmp
mull
aas
jae
push
jmp
or
movsb
sbb
loopne
cmp
xor
cmpsl
sub
push
mov
imul
mov
and
fldcw
jno
mov
sbb
push
shrl
inc
and
js
sub
in
mov
rol
jge
pusha
in
jmp
lea
push
ficompl
jb
insl
loopne
pop
outsb
out
push
dec
repnz
pop
int3
sti
sub
mov
cmp
daa
ljmp
aaa
dec
fbld
jmp
cmp
shr
add
movsb
je
jmp
frstpm(287
jo
ja
mov
jmp
mov
dec
jb
gs
mov
jmp
jle,pt
cmp
inc
sbb
pop
pop
popa
jo
push
or
shlb
test
jmp
mov
cwtl
fldenv
out
cmp
stc
mov
mov
mov
sub
cltd
jmp
jo
pop
or
xor
sahf
idivl
scas
std
iret
xchg
shl
jb
fstpl
addr16
cmp
stc
mov
cmpsl
jmp
xchg
push
adc
jmp
negl
aaa
jl
fsubr
inc
movb
sbb
xor
jmp
jg
cmp
jmp
arpl
jmp
xor
pushl
mov
sti
xchg
and
pop
sub
pop
and
ljmp
icebp
pop
mov
sbb
jno
mov
jmp
push
or
aad
mov
lret
xor
rcl
das
mov
ja
call
xchg
inc
pusha
repz
cmp
js
mov
stc
and
inc
sub
lods
lea
out
movsb
sbb
jbe
inc
xchg
call
jmp
mov
jns
xor
xchg
icebp
test
addr16
test
ljmp
add
jne
shlb
stos
xchg
add
sub
shll
lods
sbb
jmp
and
adcb
sbb
push
inc
pop
fsubr
jmp
pop
cmpsb
gs
pop
add
or
outsl
repz
movsb
pop
jnp
leave
pop
sub
or
jmp
pop
imul
out
addl
aam
jmp
shl
sbb
sub
mov
xchg
ret
js
mov
push
fcmovne
enter
lods
mov
rep
aad
sbb
out
sbbb
shlb
jmp
fbstp
push
mov
sbb
or
es
or
pop
popf
xchg
or
cltd
and
std
push
cmp
dec
rcrl
jmp
dec
mov
outsl
jmp
jns
pop
jle
insb
mov
sbb
or
mov
add
xor
sbb
ud2
mov
scas
fisttpl
iret
mov
stos
bound
push
xorl
scas
jmp
adc
cmp
inc
dec
jmp
shr
leave
xchg
push
sub
jns
sub
add
test
jmp
ja
negl
mov
jne
dec
sub
hlt
inc
and
mov
dec
imul
fcomi
sub
mov
int
push
pop
insl
out
jmp
mov
mov
pop
sub
cmp
and
push
sti
lret
or
insb
xorl
imul
dec
jbe
test
test
xchg
cld
aas
nop
mov
cli
adc
or
cmpsl
pop
jmp
test
por
imul
das
mov
push
add
popa
jmp
and
cmp
xchg
push
xchg
mov
mov
data16
push
jmp
push
push
xchg
lret
ja
into
cmpsl
mov
adc
jmp
xor
roll
mov
jo
inc
pop
scas
mov
dec
sbb
das
jmp
stos
mov
jno
out
es
popf
cmp
enter
inc
fwait
xchg
movsb
push
loop
jmp
jne
inc
sbb
adc
xor
lods
mov
popf
cmp
ljmp
repnz
in
mov
mov
and
inc
test
jne
loop
imul
push
adc
outsl
repnz
sub
pop
jl
sbb
test
jmp
cld
daa
fsubrp
mov
mov
jmp
stos
and
sbb
mov
imul
fldl
sbb
or
subl
sub
lahf
ds
push
flds
jle
cmp
movsl
cmp
je
stc
sbb
jmp
shrb
jmp
ljmp
jmp
test
das
je
lret
lods
hlt
leave
movsb
and
pop
cmp
int
mov
jmp
mov
jmp
or
mov
sub
lock
cs
out
fcoml
mov
stos
sti
fdivrs
or
or
dec
pop
jmp
js
sbb
daa
add
scas
mov
cmp
dec
or
sub
pop
cmp
dec
lods
or
dec
stos
ffree
pop
push
xchg
or
jmp
pop
movsb
mov
sbb
jl
test
into
jmp
fiaddl
addr16
lahf
sar
cwtl
push
sub
xchg
lods
or
imul
jmp
out
pop
adc
jb
push
adc
inc
jp
iret
bound
or
mov
lret
cmp
jg
push
fisubs
icebp
inc
jmp
cmp
adc
in
scas
or
int3
ljmp
jmp
cs
popf
jo
aas
movsb
outsb
push
jmp
xor
ss
mov
and
dec
int3
add
imul
scas
rcrl
call
push
add
sti
and
xchg
pop
lods
jno
xchg
adc
xor
in
sub
push
gs
add
xchg
adc
xor
xchg
pushf
cmp
fwait
push
cs
and
ja
dec
hlt
aaa
sbb
sbb
sub
jge
mov
hlt
mov
iret
push
testl
xchg
sahf
test
xor
test
shr
lds
mov
push
add
and
fsubl
xor
or
out
rcrb
push
mov
adc
cmpsb
cmp
xchg
xchg
jge
adc
jmp
out
dec
sub
rorb
sbb
fs
add
scas
fcomp
cmpsb
stos
aam
hlt
jae
dec
and
sti
test
xlat
cli
arpl
int
jo
ret
adc
cmp
sub
add
dec
sbb
and
jmp
sub
ds
loopne
and
pop
dec
outsl
fnstcw
out
jmp
jbe
cwtl
dec
push
sub
data16
pushf
sub
push
sub
jle
push
mov
or
cmpsb
mov
xor
or
mov
fyl2x
cmp
lds
jecxz
stos
adc
test
test
ds
pop
dec
mov
and
mov
loop
mov
test
in
movsl
and
push
scas
call
jne
cmp
cmpsb
testb
int
sub
dec
dec
lods
mov
in
aam
jmp
icebp
leave
mov
push
dec
stc
push
test
mov
cmp
inc
je
loope
mov
jmp
popl
cltd
jmp
push
aaa
cli
add
mov
and
andb
pop
insb
jge
jmp
or
idivb
aas
mov
jmp
movsl
add
pop
lds
sahf
and
aad
or
and
into
std
cli
cmp
lret
dec
cwtl
or
mov
fmulp
jge
sbb
xchg
and
dec
mov
and
into
jmp
insb
xchg
cmp
incb
ljmp
jb
cmp
pop
js
test
ret
and
divl
mov
sbb
adc
clc
fucomp
xor
movsb
jns
push
data16
mov
loope
pop
popa
push
and
xor
pop
mov
cmpsb
xchg
mov
lods
shl
clc
jg
scas
sub
das
jmp
scas
stos
ficompl
mov
adc
dec
inc
and
sub
adc
push
mov
jge
adcb
mov
loop
add
out
mov
call
add
mov
popf
push
dec
or
jmp
rcrl
jmp
or
das
fmull
jl
movsl
scas
testb
es
inc
nop
jmp
push
paddw
insb
mov
push
xchg
and
scas
test
mov
pop
xor
mov
pop
rcrb
test
pop
adc
cmp
xchg
cmp
popf
mov
stos
add
or
mov
xor
sbb
or
and
jmp
das
pop
dec
shlb
lods
lcall
add
push
push
and
stc
dec
mov
pop
pop
mov
and
repz
jmp
call
nop
arpl
andb
mov
sarb
add
push
push
or
jle
std
test
outsb
subl
mov
pusha
fnsave
pop
xchg
mov
mov
pop
sub
jmp
adc
outsl
mov
out
sbb
sub
mov
mov
fxsave
mov
hlt
int
mov
and
jmp
sbb
imul
fisubrs
and
xor
push
jmp
mov
out
enter
ret
xorl
or
mov
sbb
pop
repnz
adc
cmp
pop
xor
leave
push
cmp
lods
and
aam
jmp
lahf
sti
mov
in
dec
cmc
je
lods
or
call
inc
jl
outsb
fstl
xchg
into
rcr
rol
mov
cwtl
jno,pn
push
pop
pop
and
mov
jmp
rorl
or
push
mov
inc
add
mov
lret
movsl
xchg
lock
sahf
xor
xor
or
imul
pop
or
pop
outsl
aaa
out
popf
sub
lret
popa
ret
adc
dec
jmp
add
sbb
or
jmp
mov
pop
scas
jmp
cmpsl
pushf
push
sub
inc
push
lahf
jg
dec
add
pop
adc
sbb
jmp
sahf
push
out
fwait
pop
jmp
js
dec
insl
fs
out
jmp
inc
pop
xor
imul
pop
dec
cmc
mov
loopne
les
mov
mov
sub
mov
push
pop
pop
jl
icebp
jmp
subl
jmp
cmpsl
loope
adc
lcall
mov
jno
xchg
gs
aad
popa
or
loop
mov
nop
cmp
sbb
ds
sub
lods
stc
mov
pop
jle
ss
call
ljmp
lods
adc
sub
lds
pop
icebp
dec
lock
repnz
mov
jmp
mov
cs
sbb
push
or
sub
push
sub
jmp
enter
lods
divb
pop
sbb
addb
cmpsb
lds
icebp
sarl
cmp
jmp
out
gs
mov
add
push
sti
or
jl
aad
mov
or
stos
test
cmpsb
imul
sbb
add
mov
cmpsb
mov
jmp
jbe
jl
sarl
jmp
add
dec
in
push
jg
jmp
out
and
jle
jl
stos
js
sub
test
test
inc
jmp
sahf
or
sub
add
sub
fsubrl
sbb
mov
xor
jno
div
ja
imul
push
sub
mov
jmp
movsb
shl
cmpsb
in
inc
xchg
mov
or
add
jmp
stc
add
add
inc
std
jmp
fwait
xchg
out
mov
je
sub
cmpsb
jecxz
dec
sbb
enter
mov
sbb
fwait
dec
jb
mov
or
test
repz
movb
sub
xchg
inc
jo
sub
fisttps
sub
outsb
sub
dec
cmpsl
movsb
push
jmp
xor
xchg
stc
jmp
and
ja
mov
xor
mov
lahf
pop
xor
sar
and
jb
sub
outsb
jp
fimuls
test
xor
ss
pop
call
and
pop
frstor
or
je
dec
dec
imul
sar
stc
roll
mov
rcrl
mov
jmp
pop
in
sahf
js
dec
adc
nop
cmp
aad
ret
cli
mov
insl
shr
addr16
dec
mov
lods
push
mov
jbe
and
or
jmp
jae
pop
scas
dec
mov
mov
cld
fldt
rorl
rclb
insl
por
xchg
inc
inc
mov
adc
sbb
fdivrl
cwtl
xchg
adc
inc
mov
mov
mov
repnz
scas
mov
jmp
loopne
cli
imul
movsb
cmp
scas
jmp
sbb
shr
movsb
cmp
mov
scas
sbb
outsl
fnstcw
mov
adc
or
xchg
jne
int3
push
xor
adc
test
loop
lock
dec
push
jmp
add
roll
push
jno
push
stos
test
test
stc
push
sub
fisttpl
popa
jmp
imul
loopne
mov
xor
jo
sti
loope
sub
cmp
sub
popf
sahf
sti
xlat
sahf
and
mov
int
add
xchg
lahf
and
mov
jmp
xchg
fs
cmp
lret
and
pop
push
shll
jmp
adc
fisttpll
lods
jmp
jno,pt
sub
add
jmp
push
gs
clc
pop
cmp
enter
jge
scas
jmp
test
sti
sub
icebp
rcr
inc
in
jmp
pop
xchg
ja
mov
pop
aaa
and
repnz
cmpsb
stos
sbb
dec
loopne
mov
cmp
mov
push
mov
movsl
and
or
aad
lcall
adcb
lods
iret
inc
xor
jae
and
shl
push
dec
jmp
iret
xchg
pop
mov
push
mov
xchg
jmp
decb
jbe
js
mov
jns
cmc
lods
ljmp
mov
sti
jmp
push
inc
push
add
fsubrs
stos
stos
jmp
lods
mov
or
xchg
adc
jmp
loope
or
mov
cmp
outsl
mov
mov
pop
mov
daa
sbb
popa
aam
stos
pusha
lods
xor
lods
out
test
outsb
mov
fxch
adcb
adc
ds
jmp
push
pop
xchg
daa
xchg
jmp
push
rclb
mov
inc
push
cmp
push
xlat
mov
bound
jl
pusha
add
dec
cmpsl
scas
js
mov
movsb
jmp
mov
roll
jmp
jne
repz
cmpsl
mov
sbb
mov
jmp
cmp
or
jp
inc
fstl
enter
pushl
mov
lcall
mov
jle
inc
jmp
push
mov
dec
sub
aam
adc
jmp
daa
mov
outsb
or
push
in
xchg
loop
jbe
xor
int
imul
cmpsl
ds
sbb
mov
fstpl
jmp
jno
mov
mov
sbb
jle
std
iret
jmp
clc
scas
fiadds
jne
or
sti
aad
sbb
jmp
dec
push
jnp
push
sbb
lock
xchg
sbb
dec
dec
xor
and
cld
cltd
lret
fwait
scas
fcoml
xchg
in
fidivrs
ljmp
in
out
sub
jle
mov
push
fs
mov
cmpsb
or
bnd
push
in
jmp
mov
mov
jbe
aam
or
lods
mov
jmp
sbb
jmp
fs
sar
mov
jmp
mov
leave
movsl
mov
stc
cmp
push
cmp
out
fs
fwait
pop
je
lods
and
outsl
ret
xchg
jg
cmp
mov
jle
mov
sbb
jmp
stos
aam
fldt
aas
lods
in
cmp
sbb
bound
adc
out
mov
mov
push
sub
dec
cmp
xchg
mov
jns
xor
std
mov
in
pop
ret
lods
jecxz
fs
pop
clc
daa
fisubrs
pop
les
lea
scas
jb
or
outsb
es
in
jb
jnp
pop
push
cmp
jno
ljmp
lcall
aad
lock
mov
outsl
andb
sub
out
adc
push
jmp
push
mov
idivb
aaa
jmp
in
std
mov
xor
mov
imul
and
dec
sbb
icebp
out
cmp
int3
je
cmpsb
push
sub
and
std
repz
stos
inc
shrb
xor
sbb
sbb
pusha
push
jo
test
aad
psllq
mov
adc
pop
into
je
sbb
hlt
mov
cmc
add
lret
sub
cmpsb
jmp
dec
cltd
repz
and
addb
push
sbb
mov
adc
test
das
sub
fnstenv
popf
das
mov
sub
inc
jmp
cmp
cmp
lods
jmp
jo
xor
sbb
jmp
inc
inc
xchg
xlat
jmp
add
or
arpl
xchg
aaa
mov
loope
mov
inc
push
cwtl
es
inc
lods
xchg
jecxz
shlb
inc
adc
leave
xchg
daa
xor
pusha
and
fists
test
lahf
cmpsb
xlat
jg
xchg
sub
jmp
repnz
xor
ret
xchg
daa
out
cmp
xlat
sub
jmp
xchg
jmp
xchg
mov
sbb
inc
add
iret
sahf
out
xorb
jge
jl
jle
cmp
jmp
and
push
movsl
hlt
lods
mov
cs
xlat
dec
jo
xchg
or
ja
paddw
push
push
mov
jmp
mov
cmp
jmp
dec
mov
or
lahf
aad
clc
jmp
movsb
jae
cs
es
cmp
jbe
jmp
adc
mov
mov
and
add
int
jb
je
fldl
mov
sub
jle
lods
xor
in
jmp
dec
loopne
iret
push
sub
xchg
nop
enter
jmp
outsl
xchg
mov
orps
cld
jb
jp
or
mov
pusha
pop
jmp
xchg
shrb
jg
jge
mov
not
lds
jg
ss
push
not
jno
lods
add
push
inc
cmp
sub
cmpsb
and
iret
add
and
pop
xchg
test
push
jmp
dec
fcmovu
jp
test
out
jno
cltd
fcomp
jmp
clc
lea
scas
fstpt
lret
in
cmp
sub
jmp
adc
mov
sbb
lea
pop
and
jmp
dec
dec
sti
sbb
cmc
cmp
jmp
jge
mov
jle
vmovmskps
icebp
sbb
jmp
bound
aas
jmp
movsb
cs
inc
pop
adc
je
mov
mov
test
gs
xchg
xor
jmp
mov
xchg
sub
arpl
cmc
lahf
sti
or
add
and
inc
gs
sbb
xor
faddl
test
lods
xor
jb
bnd
icebp
add
add
pushf
dec
into
jmp
pusha
push
sub
fmuls
in
adc
into
jmp
push
aad
insb
hlt
out
inc
pop
lods
sub
lods
stos
and
outsl
jmp
and
jmp
xchg
scas
sub
pop
shrl
pushf
lcall
fs
stc
push
jmp
call
mov
jmp
leave
add
dec
lock
push
mov
sub
jmp
pop
add
jmp
add
repz
pop
sub
hlt
imull
or
or
stos
shrl
mov
fiaddl
je
movsb
sub
jmp
pushf
sbb
sub
mov
outsl
loope
ja
sbb
movsb
pop
out
mov
out
test
dec
scas
jmp
pop
xchg
rorb
mov
fsincos
data16
push
mov
sub
movsl
add
imul
jmp
dec
pop
add
addl
repnz
xlat
int
pshufw
ljmp
jmp
cmp
pop
jnp
inc
cmpsl
cwtl
jmp
fisubrl
push
jmp
push
jns
jl
mov
jmp
lds
add
outsl
jmp
aas
rclb
xor
inc
in
nop
loop
dec
iret
pop
repz
sbb
dec
jmp
mov
in
xchg
nop
push
lods
xor
cmpsb
jbe
aam
dec
dec
in
sbb
fs
adc
mov
mov
dec
xor
inc
sbb
add
jmp
insl
lret
cmpsb
and
jbe
imul
jns
mov
sub
pushf
int3
push
pop
cmc
fs
sub
push
addr16
mov
jne
mov
aad
mov
sub
dec
nop
lods
outsl
shlb
xchg
xchg
imul
cmc
repnz
ficompl
jmp
fdivrp
in
add
sub
cmp
and
shlb
sbb
arpl
mov
cmpsb
imul
movl
and
mov
lret
loope
ror
jno
cmp
adcl
xchg
shlb
sub
outsb
or
frstor
and
sub
test
pop
sub
inc
and
and
in
push
pop
cmp
in
data16
push
sbb
sysexit
adc
pop
outsb
mov
push
jbe
add
sub
ret
test
and
add
pop
xchg
cmpsl
push
inc
adc
jmp
inc
mov
stc
cmp
enter
pop
cwtl
push
ss
mov
bound
jb
pop
xorl
and
jmp
addr16
jge
jnp
mov
dec
xor
ffreep
sub
icebp
push
arpl
xor
inc
add
xchg
test
test
push
call
adc
lods
and
sahf
lahf
sub
out
fdivrl
xchg
rsm
je
and
imul
or
or
xchg
pop
mov
mov
iret
add
or
mov
mov
loopne
es
pushf
in
dec
je
mov
push
jmp
lods
movsb
lods
inc
xchg
pop
sti
jno
push
mov
cli
and
sub
jmp
jbe
int
cmp
in
lcall
sub
xor
loope
test
leave
fs
inc
dec
negb
sti
mov
data16
insb
mov
aaa
out
fistpll
fdivr
lock
lods
pop
push
pop
fs
bswap
sub
scas
out
mov
push
xor
and
in
dec
mov
cmp
out
shlb
push
jb
push
inc
ljmp
out
incb
inc
hlt
mov
adc
jmp
fsubrs
pop
jmp
sbb
inc
movsl
pusha
test
sub
insl
push
out
jo
es
fucomp
fnstenv
cmp
insb
movsb
sbb
and
clc
cmp
lret
sub
dec
jmp
or
add
lahf
popa
add
sub
dec
and
pmulhw
adc
xor
lods
fucomp
sub
fldcw
jmp
pusha
jne
sub
or
outsb
add
push
subb
clc
bound
cmp
jmp
popf
pop
adc
dec
sbb
dec
int
add
mov
xchg
and
ljmp
mov
daa
imul
test
inc
cmpsb
lock
insl
xchg
jmp
dec
xchg
mov
cs
shrb
xor
fists
cmp
xor
mov
mov
shrb
mov
movsl
addb
sub
hlt
popf
test
pop
jle
push
cli
push
or
test
scas
xor
call
lret
ret
test
cmp
mov
pop
jmp
arpl
imul
cmp
add
jb
popa
xor
imul
jmp
out
mov
bt
jmp
xor
dec
mov
or
or
xor
mov
dec
std
lock
fs
sbb
pushf
pop
pop
es
shlb
jmp
in
inc
push
pop
outsl
sub
in
lods
cmc
push
nop
lea
push
xor
test
cmp
lret
aaa
cmpsl
push
je
mov
ret
and
out
lods
adc
lods
adc
add
insb
xor
mov
xorb
pusha
push
cmp
mov
or
clc
sub
sub
add
lods
movsb
push
popf
vpslld
mov
cltd
pop
adc
and
pop
push
insl
dec
jmp
add
popf
jo
aad
repnz
push
stos
pop
leave
repz
nop
lods
cmp
jp,pn
daa
or
cmp
js
repz
lret
shlb
fwait
sbb
inc
mov
xor
loopne
mov
clc
cmpl
jmp
jns
mov
mov
inc
push
movsl
and
pop
mov
fwait
push
pop
pusha
jmp
stc
ret
inc
xchg
and
or
xchg
aaa
lods
sbb
jne
sub
cltd
jp
mov
js
cmp
jae
or
jmp
movsl
mov
scas
hlt
out
shr
ds
jmp
stos
jns
mov
add
imul
sbb
sbb
lret
mov
call
add
jns
shlb
mov
jmp
jmp
out
sbb
bound
movsb
inc
int
dec
xchg
fisubrs
mov
pop
lahf
adc
lods
sbb
pushf
and
in
mov
mov
fwait
pop
xlat
int3
jmp
iret
shlb
loopne
jmp
cmpsb
das
movsb
xorb
adc
mov
fsubrp
xchg
push
pop
mov
fidivl
and
lahf
jmp
add
iret
mov
xlat
repz
aas
cmp
sub
fadds
lcall
stc
sub
rcll
mov
lock
cmp
adc
push
pop
push
xor
sbb
sahf
mov
mov
dec
test
xchg
pop
por
mov
mov
sbb
mov
scas
es
xor
in
imul
sub
jmp
jnp
xchg
push
mov
scas
push
leave
cmovne
and
lret
in
or
xchg
orb
into
mov
mov
daa
idivb
repz
loop
cwtl
jmp
lods
inc
hlt
xchg
xchg
sub
scas
nop
jbe
out
mov
jo
outsb
or
cli
push
repnz
push
por
pop
bound
or
xor
dec
lahf
shr
jnp
jmp
add
mov
or
mov
sub
pop
mov
xor
jmp
andb
jmp
ret
cmp
stos
lret
hlt
jo
push
test
jle
push
loop
adc
jmp
add
cs
mov
stos
fadds
lods
rcrb
popf
mov
fninit
stc
test
jmp
cmc
loope
ret
xor
jb
cmpsb
js
xchg
push
std
andb
mov
shll
pop
jge
add
adc
cwtl
sub
pop
cmp
imulb
add
add
dec
jmp
pop
jne
dec
xchg
push
adc
sub
in
test
jmp
pop
xor
mov
cmp
loopne
jmp
loope
repnz
jmp
ja
addl
shlb
roll
in
loopne
out
addr16
aaa
out
cltd
sub
mov
je
jmp
mov
std
addr16
fildl
arpl
add
push
jbe
scas
ja
cs
in
cmc
repnz
inc
ljmp
pop
mov
in
xchg
das
insl
stos
pusha
popl
jmp
xchg
ret
nop
push
fst
mov
popf
sub
std
jmp
imulb
daa
jmp
fs
dec
cmpsb
and
stos
sub
push
pusha
jp
in
jmp
mov
mov
jp
icebp
rcr
mov
cmp
popf
ss
out
mov
sub
stos
mov
push
mov
insb
cmpsb
in
test
scas
xchg
pop
aas
fldenv
pop
neg
xchg
sbb
ljmp
mov
xor
adc
mov
mov
pop
xor
push
push
xor
aas
or
jecxz
lods
cmp
push
mov
jmp
lret
popa
mov
lret
imul
or
jb
dec
orb
roll
pop
daa
cmp
xchg
jmp
nop
inc
fwait
lret
mov
push
stc
rolb
ljmp
imul
and
push
jbe
pop
jmp
xchg
fcmovb
mov
jle
sbb
into
aam
xor
jo
jns
sbb
xchg
xchg
pop
lods
sahf
call
xchg
sub
jge
loope
lods
mov
fbstp
xchg
pop
cmpsb
test
lods
das
clc
fnstcw
repz
lods
jne
in
ss
or
xchg
jp
shll
std
and
jo
push
and
inc
lret
pop
mov
dec
add
xor
inc
mov
push
test
mov
daa
test
jecxz
add
jmp
jg
shll
ljmp
sbb
sub
loop
push
pushf
mov
jmp
jnp
jns
xchg
sbb
jmp
and
out
jb
aas
inc
sti
xor
adc
jmp
push
pop
stos
movsl
push
dec
por
add
jg
jecxz
insb
ljmp
jno
out
jmp
enter
repz
and
sbb
lret
inc
addr16
add
imul
mov
insb
and
lahf
jmp
sbb
outsb
jb
mov
or
data16
cmp
std
aad
inc
loop
insb
fimuls
add
xchg
stos
mov
std
jl
mov
icebp
add
pusha
in
cltd
sbb
stc
les
jb
ja
lds
popa
dec
xor
push
inc
pop
xchg
mov
fs
sub
fwait
mov
data16
adc
sub
bsr
rorl
movsb
popa
or
mov
into
movsl
lods
or
and
push
arpl
jno
lret
loope
xchg
outsb
mov
jnp
and
push
lea
lock
ror
jmp
das
lret
xchg
es
jmp
add
mov
cmp
adc
sub
in
lods
inc
and
or
stos
sub
cmp
daa
pushf
push
dec
pop
sub
dec
mov
test
daa
pop
bnd
and
sbb
cmp
jmp
cmpsb
xor
mov
push
ret
sub
aam
jae
and
loope
xchg
mov
xor
in
stos
call
mov
aad
lock
hlt
stos
into
out
jmp
lods
jb
xor
ret
lods
xchg
pop
stc
dec
enter
es
jo
mull
jmp
inc
insb
arpl
psubd
loop
xor
jae
jmp
jecxz
stos
sbb
in
jmp
and
adc
jmp
aad
scas
pushf
dec
clc
pusha
jmp
lcall
add
jmp
cli
push
jmp
les
lods
repz
cmp
dec
lods
add
mov
add
jmp
les
inc
out
jl
jmp
sub
aad
fwait
movsb
add
dec
inc
adc
push
test
roll
std
cmpsb
jmp
cmpsl
loopne
int
stc
inc
sub
jb
ficomps
push
sti
stos
movsb
in
into
lods
dec
dec
inc
scas
int
enter
or
add
xor
xor
sub
mov
call
adc
jge
mov
mov
mov
dec
sbb
mov
fsubr
lods
fisubl
pop
pop
outsb
add
cmpsb
iret
xor
test
repz
mov
and
mov
jmp
scas
adc
out
sub
lcall
dec
mov
imul
push
lods
js
test
in
pop
sbb
out
dec
jmp
push
xchg
cs
subl
pop
imul
in
cmp
je
outsb
cmc
movsl
inc
jbe
push
aam
adc
stos
vpshlb
imul
jns
jmp
lret
in
inc
je
sub
jbe
lcall
jmp
push
ss
mov
sti
scas
mov
ds
aad
mov
mov
loope
dec
inc
mov
pop
jmp
pop
ds
addr16
loop
idivb
or
lods
adc
leave
or
or
std
inc
jns
js
rcl
mov
iret
mov
insb
cltd
xchg
test
lods
pop
xlat
bound
fcoms
xchg
test
or
sarb
mov
repz
sub
jbe
xchg
mov
jp
lret
lret
lds
in
push
jmp
ret
negl
ficoms
inc
mov
jno
pop
leave
in
jmp
pop
cmpsb
add
into
scas
scas
dec
dec
lcall
imul
jl
ds
mov
mov
enter
add
push
mov
cmp
and
pop
les
sbb
xchg
out
and
cmp
data16
imul
fwait
repnz
ret
jmp
loopne
xchg
adc
scas
cltd
xor
cmp
adc
ss
jg
pop
inc
shr
inc
inc
sbb
lods
aam
stos
sti
outsl
pop
jmp
inc
in
mov
repz
inc
test
jmp
fwait
pop
inc
lods
ret
sub
inc
dec
aam
rcr
mov
cmp
lods
ljmp
sbb
loope
pop
mov
loopne
mov
or
imul
sti
ret
mov
adc
jmp
inc
int
addr16
xor
sbb
sub
cwtl
lahf
stos
es
pop
icebp
jb
adc
aas
stos
std
cld
aam
mov
addr16
in
pop
fwait
lea
cltd
add
inc
out
repnz
push
sbb
je
test
jb
cmp
loope
or
adcb
int
imul
xchg
aas
hlt
aad
jmp
call
mov
sub
mov
data16
test
test
stos
mov
repnz
jmp
adc
repz
rcll
js
leave
fists
icebp
int3
call
sub
mov
nop
stos
mov
xchg
pop
cmp
sbb
jmp
adc
inc
enter
jmp
sbb
adc
jmp
mov
loopne
cmpb
addr16
insl
mov
scas
cmp
jmp
testb
jb
pop
popf
or
jmp
jbe
fisubl
xor
xor
cld
sub
movsl
testl
fcoml
add
iret
cmp
repz
mov
sub
in
pop
push
imul
cmpb
cmpsb
rolb
fcoms
js
mov
or
iret
xor
jmp
imul
bound
jmp
pop
shlb
mov
fcoms
popf
dec
push
jo
scas
push
dec
push
call
fsin
rep
or
mov
into
repz
sub
jmp
pop
inc
out
inc
sub
lcall
cmpsb
out
je
bound
rorl
cli
adc
mov
dec
repz
jmp
xorl
pop
imul
add
in
xchg
push
insb
int3
shll
stc
jmp
stc
stos
ret
loop
std
sbb
dec
xor
aaa
popf
and
insb
sub
push
cli
negb
ja
lcall
popa
sub
sub
lods
inc
out
add
cs
add
incb
mov
sbb
fiaddl
lret
or
jmp
outsb
bound
jmp
or
lea
push
mov
xor
pushf
jmp
int
or
sub
int3
test
mov
mov
aam
inc
cmove
add
sub
aad
out
jmp
sub
inc
stc
push
shl
sub
or
aas
sbb
cli
out
inc
sub
imul
jmp
roll
nop
add
jae
adc
sub
xchg
add
xchg
xor
push
cmp
jmp
lods
aad
shl
std
fwait
xor
out
ret
test
pop
jmp
xchg
movsl
lahf
loope
push
inc
jmp
xor
cld
jbe
push
stos
stc
mov
or
mov
xor
fsincos
sbb
cmpsb
jmp
das
xor
jmp
pop
subl
xor
mov
jmp
cmpsl
aam
in
jge
cmp
fistl
xchg
mov
jmp
mov
pop
repnz
out
mov
or
jmp
mov
cmpl
popf
in
fdivrl
xchg
cmp
push
fistpll
cs
pop
jg
in
jmp
scas
fstpt
mov
lods
add
vmovd
loop
push
pop
cmpsb
or
adc
add
arpl
jno
dec
push
cmp
sbb
jb
pop
xor
xchg
mov
lea
jns
test
aaa
stos
lret
jmp
dec
ret
ret
std
jno
sub
inc
cltd
fiadds
outsl
sahf
cwtl
fstpl
out
inc
pop
lret
out
adc
adc
or
lret
push
jl
adc
nop
aaa
std
and
or
sbbb
mov
jmp
adc
aad
sahf
jmp
ficompl
mov
je
lret
fisttpll
or
mov
nop
or
mov
push
jmp
in
lods
xchg
fnstenv
fidivs
jmp
in
lock
cmpsl
call
xor
and
add
fisubs
mov
pop
inc
xlat
out
shlb
jmp
sti
jge
ret
gs
jmp
mov
jl
stos
sub
jo
cltd
les
mov
jmp
xor
je
pop
aaa
xchg
cmp
or
es
sub
push
ds
cwtl
and
sub
jmp
ljmp
sub
cs
or
sti
popa
dec
and
jmp
sub
inc
pop
jmp
es
js
jo
jmp
enter
adc
pop
jmp
lret
lds
mov
stc
dec
jns
out
push
mov
jmp
sarl
xchg
fwait
rolb
loop
pusha
fsts
lahf
jmp
cwtl
jle
mov
xchg
lret
pop
jmp
mov
mov
add
or
or
subb
push
mov
jmp
inc
pop
fadd
jmp
fcmovnu
ret
mov
pop
dec
in
insb
in
jmp
jns
mov
popf
cmp
div
sbb
jmp
sbb
push
movb
push
sub
inc
push
or
lods
push
inc
test
sbbl
ss
xor
clc
sub
pop
jns
inc
mov
push
jmp
lods
test
jbe
inc
cmp
xchg
fisttps
sub
lods
ja
addr16
inc
add
pop
cs
jmp
sbb
push
movsb
arpl
xchg
cmc
add
int
mov
andl
stc
adc
sbb
gs
cmp
dec
ret
xchg
lods
jp
or
mov
cmpsb
jmp
pop
xchg
jmp
sbb
dec
repnz
sub
lahf
out
mov
sub
dec
das
mov
xchg
and
or
pop
sarb
dec
push
add
imul
cmpsb
jmp
push
jns
dec
ficoml
or
mov
pop
dec
inc
hlt
mov
cmp
pop
sahf
enter
inc
mov
stc
jmp
mov
lods
mov
adc
cmpsl
pop
cli
mov
jmp
jp
sbb
or
ljmp
cmp
or
loopne
or
jmp
loop
xor
sub
mov
mov
cwtl
jnp
out
jmp
and
jb
fstl
or
dec
sub
subb
dec
pop
xlat
jmp
pop
inc
out
mov
pop
dec
inc
outsl
imul
dec
inc
mov
ljmp
int3
jne
dec
jmp
xor
fmull
stos
hlt
inc
jp
jmp
mov
out
jmp
or
out
insb
pop
jmp
icebp
je
xor
sti
test
adc
and
into
in
outsl
xor
jmp
mov
std
adc
outsb
dec
pushf
mov
xor
stos
fsubr
cmp
aas
icebp
sub
sub
xlat
xor
incb
sub
lret
sbb
decl
fucomi
pop
pop
add
lcall
jb
fcoml
push
std
dec
out
mov
jmp
cwtl
cmc
xchg
inc
mov
notb
xor
daa
nop
xor
sti
stc
push
mov
mov
jmp
in
sbb
mov
jmp
ror
lcall
mov
cmp
xchg
jae
mov
dec
push
outsl
movsb
jmp
add
das
push
in
jmp
xchg
gs
cld
sbb
mov
mov
lods
lods
xor
popf
jmp
xchg
enter
jns
inc
scas
dec
cltd
push
jmp
sti
dec
push
xchg
repz
jmp
mov
lock
enter
push
sub
bndstx
cmp
js
push
neg
dec
mov
loope
sti
and
dec
enter
into
mov
fadds
push
or
xor
mov
addb
jp
jnp
inc
je
jne
imulb
xchg
cmp
out
popaw
and
jmp
lea
pop
or
stc
cmp
roll
aad
fdivs
jmp
add
pop
test
nop
xlat
push
and
push
pop
int3
mov
mov
incl
and
jmp
pop
out
int3
ja
and
cmp
jmp
mov
xchg
cs
sti
adc
insl
movsl
push
out
xor
subb
mov
and
outsb
sub
aam
inc
jmp
jmp
cmp
insl
add
loopne
adc
jmp
or
lds
mov
pop
dec
fs
add
inc
out
add
in
dec
clc
sub
repnz
hlt
dec
push
iret
and
mov
xchg
notb
test
jmp
outsl
mov
jns
rcll
jno
fbld
out
popa
and
mov
idiv
jae
jp
incb
cmp
cmp
jno
pop
test
inc
int
pusha
cmp
pop
or
mov
jmp
cld
fsubr
mov
enter
lods
jecxz
into
cmc
push
and
inc
daa
sub
je
fxam
mov
cld
mov
imul
mov
adc
mov
cmp
cmp
idivl
lcall
push
push
test
nop
pop
ficoms
leave
js
xchg
push
xor
jmp
test
out
dec
push
jns
or
dec
sub
loop
and
aas
mov
and
insb
rorb
adc
jmp
mov
mov
adc
dec
mov
inc
daa
push
pushf
pop
jno
push
lods
sbb
scas
das
mov
sub
lret
lods
int
call
adc
jmp
cmove
test
sahf
xor
outsb
add
lea
cli
jo
es
gs
sub
test
sbb
mov
pop
mov
stc
push
cwtl
sub
or
cmp
xorl
outsl
or
jmp
sbb
scas
js
into
push
or
dec
ds
jmp
add
imul
inc
sub
adc
and
flds
sub
popa
scas
lods
shrl
mov
nop
shll
xor
jmp
push
loopne
mov
cwtl
fs
inc
sbb
jmp
mov
fcompl
loope
dec
shr
xor
icebp
popf
std
or
sbbb
push
xchg
or
gs
inc
sub
out
jmp
xor
sub
adc
in
jmp
xor
sbb
cli
push
in
dec
ljmp
mov
aad
scas
or
cwtl
fidivs
cmpsl
stos
xor
lods
or
jmp
sub
sub
mov
cld
xchg
mov
sarb
fldenv
enter
adc
sub
repz
jmp
mov
addl
repz
or
insl
mov
mov
jmp
mov
fwait
divl
jmp
in
outsl
push
mov
and
inc
mov
dec
jmp
push
arpl
cli
aaa
rclb
pop
mov
sbb
sbb
mov
mov
xchg
inc
ret
int
stos
adc
test
jg
scas
pop
mov
mov
lahf
push
add
pushf
sub
push
jmp
xor
sub
shll
cmpsb
bound
loop
mov
jns
push
or
and
leave
or
cmp
add
jae
fdivp
ret
lods
sahf
pop
fwait
pop
and
call
mov
mov
mov
jmp
and
arpl
outsb
imul
repz
jmp
sar
jmp
ja,pn
fwait
lahf
out
mov
mov
iret
sbb
movsl
dec
jge
lods
les
fsts
cmc
lea
aam
pop
aas
adc
dec
push
aaa
cmp
ret
rcrb
pop
dec
movsl
enter
bound
jmp
daa
dec
mov
fsubrs
jmp
sahf
stos
clc
outsb
mov
out
rorb
sbb
mov
jns
jmp
fwait
sbb
daa
int3
jmp
in
fcmovne
dec
push
mov
dec
outsl
mov
pop
jmp
in
sub
inc
push
outsb
xchg
shlb
in
fs
fsqrt
out
aas
adc
jmp
js
sub
jmp
inc
iret
outsb
jno
push
lock
jmp
xchg
mov
pusha
jbe
mov
fiadds
or
mov
dec
cmp
mov
push
loope
mov
fdiv
and
pop
aam
adc
add
inc
push
shll
xorb
fsubr
enter
lahf
or
mov
stos
addr16
andb
mov
pmulhw
mov
inc
jo
and
sub
xchg
repz
popa
lods
mov
pushf
cmc
dec
mov
lods
stos
ret
adc
or
in
adc
rcrb
jp
fnstcw
or
jmp
mov
adcl
jmp
sbb
xchg
jecxz
sbb
jmp
and
xor
cltd
cmpsl
insl
jmp
pop
inc
int
or
lods
mov
lcall
clc
jne
jmp
mulb
lods
lret
popa
mov
out
or
lods
rcr
lahf
test
nopl
jmp
jo
mov
jmp
push
mov
out
push
add
nop
jne
lea
cli
js
insb
mov
jmp
inc
adc
shr
pop
add
outsb
pusha
test
fcompl
pop
adc
sbb
pop
fcmovnb
add
push
ret
sub
outsb
int
test
jmp
sub
sbb
imul
and
dec
repnz
cmpsw
lahf
and
jnp
cwtl
adc
mov
repz
sti
pusha
ror
ljmp
psadbw
sub
push
adc
insl
inc
jmp
mov
xor
adc
mov
sub
mov
imul
outsl
jmp
xchg
enter
adc
push
adc
fdivs
out
arpl
push
sbbb
imul
out
std
jecxz
inc
sbb
sti
jmp
cmp
arpl
movsb
aas
add
cmp
mov
scas
jmp
ljmp
lods
push
mov
pop
sti
xor
add
mov
push
je
push
inc
aas
jns
sub
cli
cmp
mov
aam
jle
sti
pop
out
lods
inc
and
mov
ljmp
jmp
mov
sub
sbb
jmp
or
gs
jbe
mov
outsl
sti
jmp
cmc
lock
cmp
jmp
xchg
lea
outsl
jmp
insb
xorb
je
test
xor
mov
rcrb
jge
out
lret
cmp
inc
xor
inc
sub
mov
jge
out
ds
dec
jg
ljmp
testl
cs
cmp
dec
sti
cmp
into
push
aad
popf
divb
mov
sub
adc
les
ret
pause
xor
jmp
xor
sub
or
jmp
mov
xor
ljmp
mov
inc
push
jmp
dec
clc
leave
mov
push
lods
fldcw
xor
loope
sti
arpl
adc
mov
inc
or
push
and
cmp
loope
ret
inc
cmc
imul
jb
in
jo
inc
ja
jmp
mov
pop
mov
jae
dec
jno
es
jmp
xchg
in
jl
lcall
inc
pop
mov
scas
jnp
cmc
push
in
and
lea
fsubr
hlt
pusha
jmp
out
arpl
jno
jbe
or
lret
shl
jo
xor
clc
adc
sti
sarl
subl
mov
and
sub
lods
cmpsb
cli
pop
mov
or
mov
stc
mov
testb
jmp
arpl
out
loopne
xor
movsl
imul
sahf
xchg
adc
jno
jo
sub
cmpsl
cltd
clc
push
std
sub
jo
mov
push
jmp
adcl
into
test
gs
jno
out
mov
stos
sub
sbb
leave
dec
xchg
push
push
scas
loope
jmp
mov
int
test
xor
or
sbb
mov
inc
jmp
call
pop
mov
pop
test
arpl
sub
xor
mov
xchg
icebp
movsl
add
inc
outsb
mov
jmp
push
jmp
shrl
push
xlat
xor
lods
insl
and
or
jmp
cmpsb
ds
jmp
sub
cli
lret
call
in
loop
pop
fs
mov
fnstsw
add
pop
lea
cmp
add
jnp
xor
push
test
lods
cmp
dec
push
lock
jmp
aaa
outsl
or
and
and
cmp
jmp
add
bound
jmp
mov
outsb
out
jmp
fldt
push
in
inc
sub
pushf
icebp
add
test
push
scas
rcl
dec
call
sti
xor
imul
rcl
leave
cwtl
repnz
jmp
enter
mov
imul
add
jg
cmpsb
test
jmp
pop
iret
movsb
mov
push
jae
mov
rorl
scas
loope
sbb
fnstsw
jb
jmp
popl
ja
or
outsl
and
mov
pop
fisubrs
jg
push
std
mov
mov
jmp
xor
cmp
jmp
icebp
jp
xchg
add
xor
and
jne
fs
loop
jmp
popa
js
xor
cli
lahf
mov
ljmp
sub
jo
push
leave
loop
bound
or
dec
mov
push
jbe
push
jmp
out
sub
xchg
jge
jmp
sub
fistpl
test
adcb
mov
bound
sti
imulb
shrb
stc
mov
jbe
adc
subl
and
inc
movsb
rolb
push
loop
xchg
cmc
shlb
jmp
sbb
mov
mov
cmp
icebp
jmp
add
int
xor
mov
scas
and
jmp
add
jg
int3
lods
lcall
int
and
shlb
and
neg
sub
add
inc
mov
sbb
add
int3
jg
sbb
popf
lea
aaa
mov
incl
mov
add
mov
jne
dec
dec
pop
jmp
push
cmp
push
inc
cli
imul
int3
adc
call
loop
jmp
sbb
leave
jmp
xor
cmp
xchg
mov
adc
add
and
fdiv
mov
jo
imul
push
jbe
cmp
xchg
scas
push
jmp
jns
push
xlat
in
movd
mov
sbb
jmp
pop
fstpl
jmp
mov
cmp
or
or
cli
mov
pop
pushf
cmp
addr16
dec
imul
arpl
popf
cld
push
mov
adc
and
lcall
push
jne
jmp
fcmovnbe
sbb
mov
jmp
dec
in
gs
mov
add
mov
jno
scas
ret
mov
jmp
xchg
xlat
jmp
xor
pop
arpl
imul
in
dec
xchg
jno,pn
xlat
cmp
int3
cld
stos
lods
mull
daa
dec
inc
dec
pop
repz
js
sbb
loopne
test
jmp
lret
int
jns
jmp
push
imul
inc
movsl
jg
aam
fadd
jmp
addr16
add
xor
ror
jl
lcall
outsb
lret
sub
xchg
xchg
jmp
data16
inc
lret
loope
in
mov
stos
or
mov
mov
jmp
cld
mov
mov
jmp
cmp
push
rorb
push
in
in
repnz
aaa
jge
int
pop
jne
loop
jle
mov
inc
jmp
mov
addr16
mov
or
sbb
add
out
jmp
jbe
mov
scas
sti
lret
das
and
mov
push
imul
mov
outsb
aas
jno
bound
lods
cmp
shll
mov
fsts
aad
mov
scas
cmpsl
insb
jmp
dec
icebp
inc
aam
andb
mov
lahf
lret
lret
pop
dec
mov
cltd
pushf
jmp
or
pop
hlt
jmp
xor
pop
push
jmp
inc
enter
incl
or
xor
lods
jmp
clc
sbb
in
mov
mov
pusha
fstps
jecxz
ss
mov
pop
daa
iret
sbb
repnz
pop
mov
xchg
jmp
dec
mov
les
or
fldcw
gs
sbb
adc
jmp
jbe
xor
iret
adc
and
pop
jle
stos
add
sarb
push
pushf
mov
xchg
cmp
ret
jb
clc
push
out
xor
lret
push
sub
add
ret
pop
aam
jmp
sti
pop
sub
stos
mov
pop
cmpsb
jb
jmp
xorl
ds
fisubrl
mov
jmp
ret
or
stos
sub
jnp
mov
sbb
or
inc
jmp
pop
xchg
ss
sub
jmp
shll
or
enter
jb
stc
lds
mov
fidivrl
shlb
dec
xchg
and
push
lods
cmp
and
mov
in
test
lods
mov
sti
and
jp
or
mov
ss
mov
ret
xchg
test
jecxz
inc
push
and
test
push
test
pop
lods
call
pop
mov
mov
stc
add
jmp
inc
rclb
jns
dec
mov
or
sahf
jmp
scas
fldt
jmp
inc
clc
push
pop
inc
fdivl
shrb
sub
aam
sti
out
scas
mov
es
out
pop
fldcw
inc
pop
in
fistps
push
or
xor
sti
cmp
mov
adc
push
jmp
dec
push
push
jmp
sub
insb
insl
xchg
into
adc
outsl
ja
loopne
cmp
scas
jmp
mov
push
fucompp
sbbl
inc
test
jmp
pop
adc
jmp
pop
dec
push
or
int
scas
sbb
popf
cltd
mov
mov
cwtl
rorb
in
jmp
xchg
mov
jne,pn
dec
lods
iret
mov
mov
or
mov
jmp
lock
cmp
shr
hlt
lods
xchg
out
int
sti
daa
mov
imul
arpl
mov
sub
adcb
dec
stos
and
bound
pop
ljmp
jmp
push
testb
rcrl
cltd
jns
pop
pop
scas
cwtl
aam
cld
or
add
push
out
out
sti
push
xor
adc
out
mov
ret
rorl
test
pop
mov
pop
clc
sti
jo
mov
jmp
cmp
inc
pop
mov
pop
sbb
and
mov
jns
xchg
mov
and
and
push
das
mov
f2xm1
mov
jmp
outsb
test
mov
add
es
loope
pop
mov
add
mov
cli
xchg
int
add
mov
xor
xchg
adc
mov
test
mov
adc
sbb
sub
scas
lahf
mov
xor
jge
jmp
jae
ret
cmpsb
shr
lods
ror
cli
neg
lahf
jmp
int
imul
xor
fdivl
sbb
arpl
sub
sub
shr
adc
enter
inc
sub
mov
or
jmp
sahf
outsl
andl
arpl
imul
aaa
outsb
rorl
adc
adc
jle
jmp
pop
mov
cli
jns
jno
xchg
mov
sub
push
mov
jmp
sbb
pop
sbbb
mov
push
push
jbe
les
sub
cmpsb
sub
lods
pop
xor
sar
push
icebp
sub
shll
cmp
mov
orl
in
jmp
mov
fdivrs
fldpi
movsl
inc
mov
bnd
into
jecxz
sub
and
cwtl
cmpsb
pop
ret
mov
and
jmp
psraw
aam
nop
mov
jns
mov
or
in
push
lahf
xchg
xor
sbb
lret
enter
mov
jmp
out
aas
fnstenv
outsl
mov
mov
push
test
pop
and
andb
hlt
jmp
add
ja
adc
outsb
movsl
decb
push
dec
push
or
stos
or
and
push
lret
int3
movsl
or
call
nop
lods
fimuls
lcall
outsb
shlb
cwtl
sti
loope
jns
fwait
jmp
shufps
cmpsl
sti
dec
mov
outsb
adcb
adc
pop
daa
out
fisubrl
les
pop
addl
jmp
aas
dec
sahf
int
mov
dec
mov
cmpsb
in
cmp
fwait
or
sbb
mov
mov
cmp
iret
jmp
mov
jmp
lods
mov
lcall
flds
pop
mov
rolb
pop
ds
lea
test
and
jno
lods
rorl
lret
loopne
dec
jmp
or
xchg
xlat
jmp
push
mov
iret
and
jmp
mov
lds
pop
push
fdiv
xlat
sbb
jg
inc
fistps
mov
outsb
js
insl
mov
adc
test
lret
rcl
jmp
sub
sahf
bound
xchg
jmp
push
js
adc
fwait
mov
push
imul
adc
insl
xor
cmp
outsb
sub
xor
pcmpgtb
mov
jmp
mov
jb
xchg
aam
jbe
dec
fldcw
cmc
jns
or
ljmp
sysret
sbb
insl
mov
stc
sbb
add
or
addr16
dec
adc
xchg
fs
cmp
jmp
in
xchg
not
inc
jmp
push
mov
lcall
loopne
dec
idivl
jmp
sarl
jmp
xchg
cmpsl
rorb
std
jmp
int
pop
jb
mov
je
mov
push
pop
dec
sub
or
and
or
testb
or
movntps
mov
mov
jmp
bound
push
stos
xor
jb
jmp
fbld
jmp
test
andl
adc
call
jmp
mov
xchg
gs
fmuls
jmp
inc
cmp
jb
inc
repz
and
and
mov
push
mov
in
mov
popa
cld
popf
inc
imul
sub
xchg
mov
dec
mov
imull
lods
inc
jmp
idivb
jmp
out
lahf
cmp
dec
jle
mov
rorl
adcb
jmp
pop
fcmovnu
sbb
push
sub
mov
cmp
sbb
mov
aam
stc
in
fwait
jmp
ljmp
rcrl
mov
sub
je
movsl
dec
stc
dec
cwtl
push
das
add
lods
imul
pushf
and
rcrl
dec
fsubs
mulb
cwtl
push
sub
fstpl
hlt
sub
xchg
mov
repz
lahf
lods
mov
daa
xor
clc
lcall
aaa
fildll
cld
jo
pop
sbb
push
cwtl
jb
mov
xor
mov
and
mov
movsl
mov
rcrl
push
mov
loope
cmp
or
cltd
je
adc
dec
cmp
data16
push
push
mov
inc
into
jmp
in
mov
jo
dec
mov
adc
jno
int
xlat
popf
push
and
out
sar
mov
mov
jecxz
js
repnz
mov
sub
sbb
or
dec
and
gs
jne
or
or
mov
mov
ss
test
movsb
pop
cmp
das
xor
mov
inc
test
jmp
inc
rcr
in
sub
mov
add
ja
test
mov
jmp
jb
repnz
dec
lods
mov
push
stos
test
push
test
jmp
neg
xor
jl
jmp
cs
inc
enter
and
rorb
dec
out
jmp
and
mov
sbbb
cwtl
scas
popa
mov
mov
cmp
test
or
idiv
dec
sbb
sub
mov
dec
sub
jmp
mov
lock
hlt
push
lret
mov
pushl
pop
lods
fsub
push
push
mov
adc
sbb
in
and
test
jmp
rorl
enter
jnp
outsb
mov
push
imul
repz
mov
sti
or
lret
or
jno
popa
jmp
js
mov
or
jle
movsb
mov
repnz
loop
insl
inc
frstor
dec
or
inc
jns
ss
inc
stos
adc
pop
add
push
jmp
xor
cmc
jmp
clc
cmpsl
arpl
shr
fcmovnu
lret
push
inc
add
adc
lods
adc
cmp
dec
or
gs
xor
popa
cmpsb
dec
jp
jns
add
lods
mov
inc
ret
push
dec
jmp
fidivrl
inc
jmp
rorl
inc
add
jmp
mov
mov
adc
sub
jno
mov
shll
test
push
fwait
sub
in
movsb
xchg
sti
pop
fstpt
and
cmpsb
jl
jge
or
sbb
cmp
lock
cmp
es
inc
sbb
or
mov
out
jle
jbe
movsl
xor
push
mov
jbe
pop
in
pop
out
add
push
aam
cwtl
test
mov
mov
or
cmp
add
adc
rcrb
jo
addl
inc
adc
sub
pop
xor
xlat
sub
scas
movsb
jmp
adc
xorl
js
or
scas
inc
push
sbb
insl
outsb
mov
jp
lods
inc
sbb
imul
xor
arpl
dec
sbb
imul
imul
aam
scas
push
sub
fwait
cmp
jmp
sbb
xchg
sahf
cs
inc
std
push
mov
jnp
out
jmp
lds
int3
pop
jno
xchg
cmp
sahf
xor
mov
es
hlt
xor
adc
mov
push
fwait
movsb
cmc
mov
call
cmpsl
inc
cmp
in
scas
gs
mov
outsl
or
adc
mov
sub
jo
adc
testl
inc
mov
mov
fsubp
mov
cmp
cmpsb
lcall
xorl
pusha
ljmp
incl
ret
cmc
cmp
push
jle
sub
sub
hlt
shr
cmpsb
fucom
iret
jmp
jg
push
jb
jae
jmp
int
aam
lds
or
ret
out
jmp
cmpsl
in
out
lock
jge
scas
loopne
dec
pop
adc
aam
cmp
lret
mov
xchg
xchg
ja
test
and
sbb
adc
inc
fsubr
lods
lret
sub
cs
cmpsl
mov
jmp
fistpl
addr16
ret
mov
sbb
jmp
jge
int
jbe
cmpsl
jmp
or
repz
cmp
adc
iret
cmp
pop
outsl
icebp
and
jmp
pop
fmul
sub
and
jp
mov
jb
mov
sub
pop
lods
jo
dec
cmpsl
jmp
data16
iret
sub
adcb
cltd
mov
lods
mov
call
sahf
pop
xchg
mov
adc
mov
or
mov
push
cmp
std
iret
into
fldl
pop
jmp
mov
movq
dec
jmp
sti
pop
xchg
in
fwait
mov
jmp
out
in
mov
cltd
sub
nop
jmp
das
in
adc
les
je
lods
call
orb
inc
movsl
sub
mov
and
and
cli
in
outsb
outsb
add
inc
or
jmp
jb
inc
or
shr
testl
jle
sti
insw
dec
pop
sti
jmp
sub
cli
sarl
pusha
movsb
mov
dec
out
dec
cmp
cmc
movsl
inc
inc
jmp
sbb
lcall
push
cmp
pop
mov
cmp
jmp
dec
in
mov
loopne
cmpsb
jle
mov
push
mov
push
jb
xchg
inc
aad
mov
add
imul
in
jb
sbb
sbb
xchg
insb
popf
or
xor
test
sub
test
or
ljmp
add
in
testb
pop
insl
dec
aaa
and
jmp
mov
xlat
jns
lods
sbb
cmpsl
in
lods
cmpsb
fcomps
mov
jmp
daa
inc
pop
aam
push
scas
stc
jnp
or
push
pusha
addr16
jp
scas
pop
in
or
pop
lahf
enter
add
leave
adc
dec
test
stc
lds
lods
or
mov
push
repz
int
nop
testb
in
mov
scas
cmp
adcl
mov
pop
es
pop
lret
xor
xor
sub
jmp
in
test
mov
jmp
mov
and
aaa
xchg
sti
in
jmp
mov
adc
jbe
push
jb
ljmp
jno
cmp
add
gs
dec
and
rorb
adc
jp
scas
jmp
bound
lret
and
repnz
lods
cmpsb
adc
movsl
scas
jbe
adc
cmp
and
inc
pop
jmp
push
out
jmp
stos
test
push
stos
jae
jmp
rol
pop
adc
sbb
ds
adc
add
popf
mov
fdiv
mov
shll
inc
and
pop
in
mov
push
out
jmp
test
and
hlt
daa
or
pop
jmp
xor
push
sub
dec
sub
add
adc
sbb
add
jmp
ss
or
addr16
enter
pusha
ret
mov
jmp
sub
mov
mov
jbe
jns
lahf
and
mov
out
cmp
lods
dec
xchg
into
inc
enter
push
int
in
arpl
pop
fstps
and
in
ja
push
xor
jl
inc
mov
les
xchg
jmp
out
push
scas
and
and
add
mov
movsl
test
sbb
lret
idivl
xor
inc
jmp
pusha
mov
cmp
push
push
mov
or
fbld
lods
andl
addb
lcall
jmp
mov
cs
sbb
inc
loop
inc
pop
mov
mov
nop
lea
ja
dec
movb
scas
adc
imul
bound
ja
cmp
lods
js
pop
test
rcll
xchg
cmpsl
adc
test
dec
adc
mov
scas
cli
icebp
mov
leave
dec
jmp
repnz
std
sub
push
cmp
pop
rclb
mov
mov
jmp
push
and
pop
clc
das
jmp
addr16
shrl
jmp
inc
jg
pop
jns
jle
mov
pop
cmp
in
leave
dec
mov
js
ficomps
mov
test
pop
mov
sbb
leave
sub
inc
and
mov
jmp
pop
cmp
jnp
mov
dec
lret
mov
add
adc
jb
out
jmp
sbb
cmp
subl
mov
ja
sbb
ljmp
lods
and
hlt
dec
add
lcall
fs
out
mov
xchg
cmp
andb
sub
scas
and
sub
fwait
std
ljmp
jmp
jae
and
mov
aas
jmp
loopne
pop
ja
int3
cmpsl
imul
add
push
or
pop
jl
push
jmp
loop
mov
jmp
xor
xlat
inc
ficoms
jmp
inc
mov
scas
lods
add
aam
unpckhps
int3
pop
je
lcall
outsl
arpl
in
js
cmpsl
push
xchg
test
cmp
into
push
xlat
sub
leave
mov
notl
rcrb
pop
sub
push
rclb
or
and
mov
jmp
sbb
xchg
prefetch
enter
or
pop
movsb
lcall
inc
or
jbe
mov
add
jge
push
xchg
in
cmp
shr
xor
movsl
popa
cwtl
jmp
addr16
lret
push
or
mov
xlat
sub
jno
pushf
cmc
mov
mov
jnp
imul
loop
imul
inc
outsb
inc
fldenv
ja
es
lods
jmp
push
fcoml
add
gs
xchg
xor
insb
ss
fiaddl
subb
add
dec
negl
jmp
mov
pop
movsl
inc
cmc
push
jmp
add
sub
xchg
fisttpll
icebp
clc
bound
test
adc
xlat
jmp
cli
cld
scas
pop
jmp
push
es
adc
jmp
or
xor
sub
sbb
pop
jmp
int
jne
pop
sub
jmp
sti
sbb
pushf
hlt
jmp
or
sub
test
icebp
jmp
flds
sub
scas
pusha
jmp
xor
es
xlat
mov
mov
call
jmp
repnz
inc
sub
adc
xor
mov
mov
lods
mov
and
push
or
cmp
sbb
loope
mov
iret
jmp
pop
inc
push
sub
cli
loopne
in
jne
xchg
cmp
out
mov
jb
js
incb
test
icebp
sbb
fstpl
leave
pop
jmp
mov
notb
jmp
adc
push
arpl
mov
pop
in
xchg
rcll
jmp
cs
filds
sub
mov
fmull
inc
insl
lcall
fnsave
jo
adc
jmp
popf
outsl
cmpsl
fdivl
sbb
decb
fldt
mov
cmpsb
mov
xor
and
adc
or
pusha
or
sub
clc
mov
jmp
xlat
data16
dec
inc
jmp
add
adc
jo
jmp
out
mov
mov
inc
idiv
out
aaa
pop
subb
test
daa
ret
ljmp
popl
mov
xor
inc
mov
lds
jns
mov
pop
push
add
xor
lods
int3
and
pop
xchg
and
pop
lods
jno
lock
push
mov
cmp
add
outsb
xchg
add
int
mov
scas
jl
leave
jp
inc
sbb
je
jb
pop
jle
cmpsl
pop
sbb
insb
or
cmpsb
mov
jnp
outsl
mov
stos
mov
or
ds
fcomi
push
pminub
loope
jmp
fadds
fisttpll
jb
shll
xchg
adc
or
outsl
test
jge
bound
cmp
dec
aaa
popa
xor
pop
sbb
push
jmp
and
xor
rcl
mov
enter
sub
iret
sub
xchg
adc
imul
sub
sbb
fwait
lods
and
test
lea
add
and
out
pop
popa
sub
adc
or
jmp
mov
mov
lods
cwtl
mov
mov
xchg
out
jmp
shrb
mov
sub
xlat
pop
outsb
adc
sbb
sub
dec
mov
mov
out
sbb
adc
or
xor
sti
and
push
sub
add
inc
xor
pushf
sub
test
in
mov
xchg
cmc
xchg
scas
les
sbbb
jg
mov
or
outsb
ret
jmp
stos
lahf
hlt
ficompl
ret
and
loopne
pop
mov
das
std
aas
cmpsb
lret
adc
jmp
cli
stos
ret
movsb
testl
push
push
jns
inc
jmp
mov
adc
cmp
jmp
icebp
aam
pop
loop
sbb
shll
pop
sbb
movsl
out
outsb
sti
repz
insl
aas
decb
aad
loop
jnp
rorl
sub
pusha
stos
push
repnz
fidivrs
jmp
pop
adc
jae
fdivs
push
sbb
outsb
jb
add
cmp
lock
dec
mov
pushf
lcall
push
and
xchg
loope
cmc
in
iret
insl
ficoml
aas
mov
jbe
pop
mov
hlt
jmp
mov
pop
das
leave
sub
mov
and
sbb
push
ret
sar
jmp
jmp
push
mov
mov
xor
lds
xor
sbb
jmp
pop
mov
stos
lods
or
hlt
arpl
cltd
lods
or
into
cmp
push
jmp
popa
lret
fcmovne
xor
scas
outsb
loop
jmp
xchg
loopne
fwait
mov
jmp
pop
xor
pop
cltd
loope
stc
xchg
or
repnz
pop
mov
cmp
shrl
insb
mov
pop
outsb
jl
lods
mov
push
into
dec
les
jmp
jg
sahf
in
dec
shlb
pop
pop
lds
mov
inc
add
jmp
cmp
mov
xchg
rorl
pop
push
pop
cltd
jmp
shll
mov
sbb
mov
add
sti
jno
mov
mov
and
adc
dec
jmp
gs
push
loopne
or
lods
push
xchg
xor
test
scas
sbb
push
add
arpl
or
sahf
cmp
iret
adc
scas
mov
pop
addr16
adc
loop
xchg
cmp
cmpsl
mov
pop
ja
jne
fs
jmp
bound
idivb
dec
xchg
sub
addr16
cltd
out
sub
mov
test
mov
jmp
mov
or
adc
in
sub
or
icebp
aas
and
mov
dec
pop
jge
outsl
mov
xor
daa
jmp
mov
gs
leave
nop
inc
out
fistl
jmp
pushf
xchg
jnp
pop
movsb
repz
dec
inc
mov
xchg
subb
out
pop
add
das
lret
fdivrs
cld
fcmovb
into
inc
sub
out
aad
leave
addr16
mov
sub
jmp
lcall
xor
sbb
jmp
ret
mov
jmp
add
jne
sub
jmp
jno
or
in
es
sbb
outsl
out
sub
push
stc
adc
mov
jmp
ret
sub
mov
jmp
out
push
lret
enter
jmp
popa
mov
adc
inc
add
fs
or
xchg
mov
pop
test
cmovg
adc
jg
xor
xchg
pop
push
jmp
jmp
outsl
sbb
push
aas
push
mov
jmp
mov
jmp
xchg
lret
test
xor
dec
mov
mov
jmp
inc
ffreep
fiaddl
xor
push
popf
jno
sbb
mov
pop
les
lahf
imul
jle
jo
push
cmp
leave
mov
inc
fucomi
dec
mov
jmp
add
sbb
lret
sub
or
or
ror
jo
dec
out
push
shlb
adc
xchg
xor
outsb
nop
jle
adc
mov
mov
jmp
lea
fmul
jne
jmp
push
mov
iret
jmp
inc
in
or
lret
jmp
das
in
andb
pusha
jmp
pop
add
lods
mov
test
pop
ljmp
arpl
jmp
push
xchg
inc
and
add
test
push
orb
xchg
scas
pop
xchg
or
mov
cmp
orb
push
jmp
push
xorl
pop
mov
arpl
dec
sub
adc
push
enter
in
xchg
idiv
mov
sar
je
pop
popa
jmp
mov
pop
orl
repnz
lock
call
js
jmp
mov
add
ljmp
icebp
sub
cmp
rclb
shrl
pop
shll
or
jb
rcll
add
stc
jns
pop
jmp
out
mov
scas
pop
fildll
movhps
dec
lahf
jmp
add
sbb
and
mov
jmp
sarb
bound
dec
lods
fs
adc
pop
notb
lods
cli
lods
sub
in
je
scas
testl
movsl
test
push
xor
push
jmp
andb
jo
scas
out
jmp
jmp
movsb
push
clc
jge
aad
jmp
ljmp
scas
pop
or
adc
rcr
sub
mov
roll
pop
ja
xchg
into
out
fsubrl
jmp
aad
cmp
scas
cmp
out
cli
jb
imull
mov
xor
outsb
fdivrl
cld
or
mov
xor
xlat
test
testl
sti
and
pop
cmpsl
jmp
cmp
mov
aad
and
jmp
cs
dec
mov
stc
es
dec
jmp
les
pop
jmp
pop
jnp
or
inc
xor
cmp
cltd
sbb
data16
sub
hlt
in
sbb
fldpi
mov
cld
fcoml
or
pop
cs
icebp
inc
int3
stc
or
movsb
lahf
inc
dec
mov
cmp
or
stc
mov
xor
aad
mov
jl
push
in
cmpsl
in
popf
jmp
add
popa
aad
fdivr
xor
cmpsb
cli
jbe
imul
and
fdivl
mov
pop
sub
mov
cmp
xchg
test
fildll
loope
pop
aas
dec
mov
mov
sbb
sub
rcr
jmp
test
xor
insb
cmp
jp
repnz
cs
shll
lea
cmp
leave
lcall
lret
dec
lock
jno
dec
hlt
scas
jmp
mov
xor
sbb
xchg
xor
or
dec
cwtl
sub
mov
jmp
ret
inc
add
inc
or
int
jmp
pop
xor
xchg
pop
mov
add
add
cld
xor
in
push
push
dec
mov
js
xor
adc
scas
leave
mov
icebp
adc
jle
das
lods
aaa
add
outsl
imul
jmp
xor
loopne
jg
and
mov
pop
addr16
jmp
in
js
cli
lock
cmp
daa
pusha
das
test
sub
imull
les
fs
lds
sbb
xor
jns
jmp
mov
push
push
jmp
mov
xchg
jp
mov
loopne
sarl
mov
subb
dec
lods
mov
mov
push
stc
iret
stos
jl
mov
std
add
mov
outsb
rcl
cmpsb
pop
and
out
mov
and
jmp
cltd
mov
sbb
lods
std
leave
pop
daa
xchg
addr16
jae
pop
orl
jecxz
sbb
mov
movsb
pop
clc
sub
arpl
dec
or
fisubs
dec
push
add
lods
push
stos
cmp
mov
test
pop
sub
pop
jmp
sbb
mov
cmp
push
dec
jbe
mov
in
ret
sbb
lods
int
les
shrb
mov
scas
push
cmpsb
inc
fldl
sbbl
fstpt
mov
mov
addr16
sbb
jno
filds
sti
jp
sub
scas
xchg
or
popa
pop
es
jmp
int
divl
sbb
test
rcr
imul
mov
mov
daa
out
dec
sub
jmp
ficoms
sub
pop
hlt
cmp
sub
aaa
pushf
lahf
push
loope
sti
xchg
icebp
in
fucomip
jle
orb
pop
imul
cmpsb
dec
cmp
sbb
cmp
test
mov
jmp
sub
jp
xor
ja
mov
push
sub
out
lods
xlat
pop
lcall
jmp
scas
mov
mov
fsubr
push
adc
imul
jns
and
lret
clc
add
jmp
test
mov
xchg
xlat
and
sbbb
aam
jmp
inc
mov
push
jle
stos
sub
xchg
jmp
inc
ret
xor
shrb
push
stc
sub
jmp
fwait
lds
cwtl
std
mov
xor
add
jmp
xor
fs
and
dec
test
imul
mov
repnz
push
jmp
ret
call
jmp
movsb
push
inc
mov
mov
push
mov
adc
or
ret
push
sub
or
push
in
icebp
call
cmp
pop
cmp
xchg
jmp
mov
subl
pusha
jp
cld
jl
jge
mov
mov
jmp
lret
stos
xchg
outsl
pusha
test
sbb
addr16
adc
jmp
scas
pop
daa
fwait
pusha
cmp
mov
jne
jmp
repnz
loopne
orl
fists
fdivrl
jg
sbb
outsb
orl
int
jmp
call
sub
inc
dec
or
jmp
in
fsubs
jmp
rcrb
jmp
and
das
jmp
mov
loop
jmp
cwtl
sub
lret
adc
ds
and
dec
jl
cltd
lret
test
add
push
stos
pop
andl
jb
ds
or
pop
inc
test
pop
stos
push
movl
lahf
addr16
xchg
aas
push
aad
dec
cmp
push
cmp
xor
icebp
inc
jmp
loopne
int
push
jmp
push
dec
mov
push
iret
rorl
mov
in
pop
jmp
mov
mov
pop
cmpsl
mov
xor
fwait
pop
lock
ror
es
add
bsf
out
je
sbb
sbb
xchg
aam
xor
pop
cwtl
test
jmp
mov
shl
out
xchg
xchg
imul
lock
pop
loope
sahf
sub
jmp
cmp
outsl
cwtl
neg
std
jmp
nop
shlb
lods
cmc
das
enter
or
push
mov
loopne
rclb
push
pushf
in
fsubrp
pop
test
sub
lods
jo
jmp
or
mov
mov
dec
adc
jmp
mov
loope
jmp
pop
cmp
and
aaa
std
and
lds
mov
dec
icebp
lret
jmp
stos
add
ja
imul
or
dec
movlhps
add
cmp
jp
lret
mov
mov
push
ja
jle
loope
add
jmp
add
nop
inc
pop
push
jmp
imul
pop
pushf
xor
adc
neg
mov
scas
jmp
cmp
mov
ds
sbb
repz
int3
sbb
sub
test
lret
sbb
enter
push
mov
add
cmpl
lahf
sub
js
lcall
inc
xchg
sub
xchg
pop
mov
lods
call
and
xor
fbstp
xchg
jmp
push
pop
aas
outsb
jb
dec
mov
mov
pop
push
sub
jae
push
dec
jo
mov
adc
test
js
mov
jmp
enter
mov
or
mov
ficompl
out
sti
mov
icebp
jecxz
add
out
mov
popf
lods
xchg
jns
push
jmp
sbb
push
adc
shrb
or
and
dec
sub
mov
scas
push
or
dec
inc
dec
jbe
je
cs
pause
sub
jmp
xchg
pop
and
push
jmp
sbb
bnd
aam
jmp
fildl
jb
mov
jmp
adc
jecxz
adc
sub
lock
mov
pop
sbb
dec
int3
clc
xor
sub
movsl
mov
jmp
and
aas
sbb
add
mov
cmp
fnstenv
test
add
inc
lret
mov
push
jne
scas
and
cltd
addr16
aam
mov
outsl
movsb
sbb
add
pop
jns
xchg
sbb
push
push
add
scas
dec
leave
dec
fsub
cs
sbb
jo
jmp
jge
push
outsb
jns
js
sti
pop
mov
push
push
or
sub
lret
jecxz
imul
and
jne
shlb
daa
push
test
sbb
call
dec
and
je
mov
mov
rorl
jle
repnz
divl
jmp
sbb
fcmove
lret
in
jge
icebp
mov
sbb
sbb
inc
push
inc
mov
lea
imul
cmp
lahf
xchg
fsubrp
pop
pop
add
jmp
inc
js
into
ficompl
or
xor
inc
adc
dec
jmp
cmpsb
xor
rcrl
adc
mov
xorb
pop
dec
mov
orl
cmp
cwtl
mov
xlat
sbb
lret
jmp
ds
adc
lods
cmp
inc
mov
shl
jns
scas
cs
add
jmp
cmc
scas
pop
bound
mov
jmp
les
jmp
add
je,pn
jp
sub
cmp
jmp
ljmp
stos
out
in
mov
xchg
cmp
jmp
popf
pop
cmp
loopne
jmp
mov
cld
fdivr
mov
sub
insb
and
sbb
ja
xor
scas
cmpsb
sub
lods
ljmp
in
sub
int
mov
lods
imul
or
in
scas
int3
inc
cmpsl
fsubrl
test
icebp
imull
popa
cs
scas
jnp
test
jmp
out
cltd
sarl
movsl
fs
scas
movsb
repz
jno
pop
stos
sbb
or
jmp
jbe
in
adc
and
test
cli
andl
jmp
leave
lret
cmpsl
ljmp
jbe
insb
aad
xor
scas
fdivr
sbb
jmp
sbb
and
rol
jmp
or
or
cli
test
pop
pop
sub
jne
int3
push
or
stos
push
sub
int
out
mov
jmp
mov
fsubr
fistpl
jmp
push
loopne
repz
dec
dec
imul
sub
mov
pop
or
mov
notl
stos
push
mov
fisttps
jmp
xchg
sbb
aas
jmp
dec
gs
cwtl
mov
pop
enter
fists
cmp
ss
dec
jb
push
sbb
cmp
mov
pop
outsl
sti
inc
push
jle
loope
jmp
das
adc
sub
rclb
lahf
scas
inc
ds
out
jae
push
and
mov
inc
out
mov
sti
mov
jns
cmpsl
sar
sbb
repnz
or
testl
lock
fidivrs
loopne
xorb
mov
test
loop
test
cmp
lret
inc
add
jnp
mov
sub
and
rcrl
cltd
daa
or
mov
roll
int3
or
mov
fisttps
stos
in
xor
xor
popf
dec
inc
mov
outsl
pop
daa
sti
xchg
lods
jbe
sub
loope
iret
nop
or
ja
mov
decb
insl
or
sub
or
or
insb
clc
cs
push
pop
out
pushf
iret
insl
jmp
push
cwtl
xor
and
hlt
pop
aad
sub
fsubl
mov
sub
add
insl
add
cmp
mov
pop
sti
cltd
nop
inc
mov
sti
fs
in
std
lods
pop
jmp
xchg
mov
jns
stos
jmp
pop
pop
jge
or
sub
jmp
dec
fs
sub
jmp
jg
pop
or
mov
jmp
pop
adc
mov
push
xlat
and
loope
mov
je
loope
xor
shr
pop
or
jmp
push
xchg
push
mov
jmp
lahf
in
add
inc
js
lods
das
push
xor
jns
inc
sbb
dec
in
psrld
xchg
call
xor
xchg
in
inc
mov
sbb
fucomi
lods
mov
lods
push
sti
shll
add
jo
sub
outsb
jl
jns
ljmp
pusha
lods
jecxz
loope
jle
mov
jmp
dec
jmp
lds
mov
sub
cwtl
cmpsl
inc
pop
out
xchg
sbb
jmp
push
sbb
cvtpi2ps
jmp
mov
xor
lds
jno
sbb
lahf
cmp
in
mov
jbe
dec
loop
repnz
cmpsb
mov
ror
pop
movsl
and
out
jmp
cmp
pop
jmp
pushf
stos
stc
fwait
les
lods
push
cmp
mov
push
sub
sbb
repnz
cmpsl
jmp
sbb
and
imull
call
adc
jl
jmp
pop
pop
jno
push
jmp
scas
lock
jge
outsl
sub
jmp
cltd
cmp
fisubrl
sub
pop
lock
and
sub
jl
stc
xor
lods
sbb
push
lcall
jmp
mov
jb
jmp
aas
int
adc
sub
inc
or
cmp
jmp
bound
sub
ss
jmp
pusha
inc
push
mov
mov
xchg
jmp
sub
mov
mov
dec
jmp
xchg
shl
xor
insb
and
and
jmp
push
je
sub
enter
test
jmp
pop
pop
pop
pop
jmp
xor
mov
andl
jmp
xchg
out
dec
or
sbb
mov
pop
pop
lods
inc
and
cmpsl
ficoml
jne
jo
add
xchg
mov
mov
iret
pushf
jmp
push
add
insb
jmp
add
and
xchg
in
or
xor
or
xchg
out
add
fwait
repz
adc
clc
lock
xor
les
cmp
dec
sub
jmp
pop
in
pop
lods
repz
or
shll
sub
adc
cs
push
arpl
lods
popa
sbb
mov
and
pop
xchg
jne
jmp
mov
in
add
sbb
aaa
pop
xchg
jmp
xchg
jecxz
lock
test
fcomp
jmp
mov
sub
jbe
mov
outsl
dec
inc
pop
jmp
jp
lock
jmp
ja
popf
fldl
scas
gs
jnp
outsb
mov
fsubs
push
scas
sub
jecxz
push
jmp
xchg
pop
push
sbb
movsl
lods
jmp
push
ljmp
mov
and
push
jmp
adc
imull
sbb
test
xchg
and
push
clc
mov
mov
lods
push
or
arpl
jno
pop
adc
lods
xor
rclb
and
push
jmp
or
aaa
js
mov
or
jmp
and
cwtl
mov
aam
mov
out
int3
loope
jne
mov
mov
nop
std
sbb
lods
cmpsl
xchg
cs
inc
mov
fbld
dec
jmp
push
cld
scas
stos
repz
and
fimull
int3
and
adc
or
leave
sbb
mov
cmpsl
out
cmp
jmp
xor
xchg
and
inc
dec
bound
int
out
cmp
iret
jp
shrl
xor
jmp
fwait
xor
cmp
mov
enter
sub
jmp
repnz
ret
sub
in
and
mov
testl
and
jmp
movsb
scas
mov
mov
xchg
clc
insb
push
jmp
je
stos
jle
fdivrl
movsb
pop
das
add
and
xchg
dec
lret
lcall
bound
pusha
pop
lods
or
cld
test
sub
repnz
push
jmp
fst
mov
or
scas
push
fimuls
xchg
push
leave
scas
pop
int3
mov
lds
sbb
jno
jmp
into
aam
call
adc
xchg
sbb
es
sub
adc
or
shll
pushf
lret
inc
pop
xor
mov
es
cld
addb
hlt
test
sub
xor
sbb
ljmp
jmp
pop
shrl
cmp
sub
cmp
push
sbbb
and
leavew
daa
cmp
mov
mov
in
or
out
lods
pop
insl
sbb
xchg
mov
mov
lods
mov
call
dec
mov
adc
xor
xor
hlt
outsb
lret
xor
push
stos
sub
je
mov
xor
jg
sub
sub
mov
xchg
test
ja,pt
movsb
rcl
jns
test
adc
inc
mov
scas
faddl
and
je
mov
xchg
or
jmp
inc
mov
mov
daa
or
adc
jno
dec
gs
sub
adc
mov
adc
int
rcr
jmp
push
fdivrl
test
test
jmp
mov
out
inc
push
pop
arpl
fwait
inc
jle
mov
lahf
cmpb
les
or
and
adc
fucomi
fwait
pop
shrl
insl
push
movsl
repnz
cmp
in
mov
fucom
sbb
and
pop
adc
decl
pop
mov
mov
xchg
dec
sub
data16
in
movsl
or
mov
int
push
adc
and
cmpsl
sbb
lahf
adc
pusha
add
cmp
mov
push
orl
lcall
loopne
inc
jmp
cmp
out
sub
jns
or
xor
ds
lock
sub
push
push
test
outsb
test
cld
inc
mov
shrb
pushf
popa
jae
bound
daa
mov
sub
adc
and
xchg
clc
sarl
testl
gs
mov
jmp
in
dec
xchg
add
dec
nop
add
jmp
mov
add
jmp
jae
pushf
push
and
jmp
mov
xchg
shlb
scas
inc
cmpsl
and
dec
int3
push
out
pop
cmp
bound
loope
dec
cmp
mov
enter
sahf
sub
push
jmp
mov
fisttpll
and
push
stos
adc
ljmp
add
push
arpl
movsb
pop
mov
mov
iret
jmp
mov
add
sahf
xor
dec
cld
dec
or
inc
inc
sbb
adc
push
jmp
cmp
pop
testb
mov
mov
mov
out
jmp
lahf
movsb
xchg
movsl
and
ret
ds
add
test
stc
jmp
addl
or
or
repz
dec
xchg
dec
jmp
or
mov
sub
push
push
outsb
sbb
add
sub
repz
dec
ljmp
jmp
popf
lea
jmp
mov
test
sub
sbb
cs
jp
sub
xchg
pop
dec
cmp
jle
shll
xor
roll
inc
mov
cmp
pop
fdivrs
xchg
dec
cmp
movsb
adc
push
clc
insl
mov
pop
fmulp
shlb
jl
cmc
jmp
dec
loopne
pop
lds
jb
loop
sti
cmp
iret
scas
pusha
adc
dec
sti
std
sbb
scas
lods
insb
and
bound
pop
je
xchg
adc
imul
cmp
arpl
jecxz
out
popf
sub
std
jne
pop
sbb
mov
fnsave
aam
inc
cmp
sbb
jmp
or
lcall
and
xor
add
sbb
mov
dec
jmp
inc
jg
pop
or
mov
push
mov
jmp
loope
xor
daa
inc
lds
sbb
cltd
adc
mov
push
jmp
push
jl
test
mov
inc
sub
mov
dec
push
sub
test
xlat
sbb
pop
bound
arpl
push
cmp
mov
mov
rclb
jmp
adcb
jp
cmp
jae
mov
out
xor
jns
bnd
aad
out
jmp
adc
cld
mulb
scas
xchg
push
rorb
dec
sub
push
aam
icebp
aad
and
mov
jno
xor
pop
movsb
add
xor
push
adc
dec
cmc
sarl
and
cli
jmp
sub
jae
adc
mov
and
mov
pop
sbb
mov
dec
shr
sbb
cmp
jmp
js
sbb
pop
imul
sub
pop
out
sbb
daa
inc
cmc
mov
pop
cmp
repnz
xchg
scas
jae
jmp
adc
leave
jns
mov
lods
ds
sbb
cmp
push
cwtl
sbb
pop
jmp
int3
fwait
sbbb
mov
movsb
jge
or
fnstcw
popa
inc
jmp
jl
clc
std
dec
outsl
jmp
push
push
into
pop
cmp
insb
dec
jle
stos
push
jmp
cmp
or
in
sbb
xchg
lds
jo
jmp
shr
stos
xchg
and
lods
jmp
mov
fwait
add
sub
data16
out
enter
pop
xchg
mov
push
and
into
add
rorl
jmp
lea
or
add
xor
int3
call
pop
jmp
mov
sahf
and
pop
enter
cmpsl
xchg
cmc
mov
push
dec
imul
fsubl
push
dec
out
push
test
push
cmp
lcall
sar
pop
mov
scas
pop
cmpsb
jle
jmp
push
add
dec
mov
xchg
inc
push
jmp
repz
push
mov
pushf
shr
orb
rcrl
or
cwtl
xor
push
push
sti
xchg
mov
movsb
mov
inc
ja
and
or
jmp
xor
fsubrp
stos
mov
repnz
in
dec
jmp
cmc
jge
not
aad
jmp
popa
mov
mov
mov
xchg
movsb
sbb
pop
cmpsl
jmp
mov
mov
jmp
inc
fwait
jb
or
lahf
jmp
mov
push
leave
mov
jmp
out
out
sub
mov
aas
leave
mov
insl
out
ja
and
mov
add
sarl
or
mov
cld
jmp
repnz
jp
xchg
dec
mov
add
les
jmp
std
sub
push
test
sub
pop
call
cmp
or
repz
mov
sub
popf
out
test
pop
lret
adc
in
sbb
cmp
or
dec
xchg
gs
jnp
mov
imul
pop
movsl
repnz
mov
jmp
fidivs
inc
cmpsb
lahf
xor
push
xor
mov
mov
jmp
push
or
push
lds
out
repnz
lods
or
pop
shlb
xcrypt-ctr
cmpsl
pop
inc
jmp
mov
imul
jmp
jno
sub
push
inc
xor
sti
xor
dec
pop
xor
mov
in
lcall
fwait
mov
fucomip
pop
pusha
pushf
mov
jmp
fsubrs
mov
in
and
cmpsl
fisubl
adc
push
add
push
add
or
jmp
pushf
and
jmp
push
xchg
lret
ljmp
mov
sbb
repnz
test
fstl
and
push
jmp
out
xor
lcall
scas
adc
adc
dec
lahf
jmp
xchg
xor
xchg
jne
jmp
insb
mov
rcrb
fsubrs
add
mov
imul
cmpsb
stos
lret
pop
ja
fidivrl
pop
add
jle
adc
jns
jmp
nop
sub
sub
repz
cltd
mov
stos
xchg
fs
or
push
sbbl
jmp
loopne
sbb
ljmp
add
pop
imul
lock
mov
ss
jmp
in
xor
xor
jne
sti
je
cli
jg
jmp
scas
push
nop
add
imul
jmp
es
aaa
and
jmp
loopne
cmpsl
and
popa
lods
mov
jl
ja
pop
add
sbb
sbb
pop
pop
sub
insl
inc
data16
xor
or
repnz
rclb
scas
clc
ret
pop
adc
test
push
repnz
or
xchg
cmp
subl
test
sub
sub
sub
insb
jmp
stos
inc
cld
xlat
leave
rolb
mov
scas
or
jmp
add
loope
and
sbb
cmpsb
pop
jae
sub
and
outsl
test
roll
or
insl
jmp
push
push
decl
jno
jmp
rcll
int3
xchg
stc
cmp
dec
jo
push
jae,pt
push
out
sbb
mov
or
cltd
add
mov
rcll
cmc
js
jmp
xor
or
lods
sbb
sub
jne
daa
cmp
lods
dec
xchg
add
lret
insl
mov
ljmp
xchg
xor
jmp
push
jge
mov
cmp
jo
in
cwtl
push
sbb
xchg
shrl
push
bt
jmp
add
fsubl
je
in
xchg
fs
cmp
sub
cmpsb
sbb
push
leave
or
lret
lods
sbb
in
mov
pop
mov
inc
es
pop
jmp
jecxz
loopne
add
movsl
subl
lods
sub
sub
loop
testl
mov
dec
mov
or
jge
mov
xchg
sbb
jmp
xchg
subl
iret
inc
out
popf
cmp
stos
imul
faddl
mov
call
sub
jmp
adc
pushf
push
int3
mov
outsl
dec
in
xchg
or
loop
movsl
ror
lret
inc
jnp
lods
mov
cmp
pop
jmp
jb
lods
xchg
push
pushf
jmp
add
xor
xor
jmp
hlt
in
adc
test
cltd
imul
les
ret
jmp
rorl
scas
fidivrs
orl
imul
incl
lods
mov
inc
jno
lret
pop
sbb
or
xchg
out
outsb
mov
test
imul
jmp
int3
sbb
or
mov
cld
sub
xchg
and
imul
push
jmp
dec
mov
inc
push
mov
je
jno
pop
inc
sub
jle
sbb
adc
add
sub
inc
in
mov
std
pop
mov
cvttps2pi
cmpsb
dec
dec
out
ret
pop
inc
xor
or
cld
shrl
repnz
jmp
adcb
in
and
push
push
dec
or
add
pop
mov
stos
movsb
inc
jb
sbb
aas
cmp
push
jns
lods
js
shll
popa
push
xchg
jmp
or
arpl
xchg
test
jmp
jle
in
fstps
xchg
ret
xchg
les
sbb
sbb
mov
daa
in
jnp
jmp
xor
mov
or
push
xor
cmp
movswl
xlat
push
pusha
out
int3
xchg
rcrl
arpl
pop
data16
jp
jnp
push
jecxz
sub
decb
daa
ret
xor
mov
xor
jmp
jns
or
xor
scas
lods
repnz
mov
mov
jge
jecxz
sbb
out
inc
jmp
cmp
stos
jmp
mov
fstpt
inc
dec
or
jmp
out
insl
rol
mov
push
xchg
cmp
repz
adc
aam
cmp
mov
test
lods
lods
inc
pushf
add
ja
inc
sub
movsl
cs
paddd
cwtl
dec
pop
cld
adc
cmc
in
or
pop
js
pop
sub
xchg
stos
or
mov
or
push
scas
pop
int
aad
cvtdq2ps
push
add
fidivl
lahf
sbb
movsl
mov
jbe
int3
out
jge
inc
sub
icebp
jmp
sbb
dec
int3
jp
lods
lcall
decb
xor
sub
filds
outsl
xchg
jle
jmp
cmp
div
hlt
sbb
test
fisttpll
insl
movsl
test
or
mov
sbb
push
stc
mov
sbb
lcall
dec
jmp
loopne
aam
in
rep
iret
enter
xchg
and
or
sti
ret
jmp
and
movsb
cmp
imul
call
pushf
jmp
sbb
inc
leave
lahf
mov
mov
jmp
lods
mov
pop
adc
or
out
nop
jbe
sbb
xor
jmp
xor
sbb
insl
jmp
mov
xchg
mov
mov
fmul
or
mov
insl
cmp
push
jo
adc
jbe
loope
xchg
scas
in
js
icebp
outsb
mov
call
shll
xchg
cmp
mov
dec
std
fsts
cli
push
cmpsl
push
daa
aaa
inc
jmp
adcb
dec
cmp
jmp
pushf
imul
lods
jl
jns
jo
sub
rorb
mov
es
sub
jmp
or
adcb
mov
pop
pop
leave
jmp
push
sbb
cs
int3
cmp
pop
outsb
testb
adc
icebp
jmp
xor
stos
pop
push
sti
sbb
inc
fldcw
aas
mov
shlb
adc
pop
push
shrb
jmp
fbld
sub
rcrl
scas
sub
cmp
mov
jo
shl
sub
data16
dec
lcall
jp
mov
clc
stos
jae
outsb
lods
mov
dec
imul
mov
cs
ljmp
pop
push
jmp
dec
std
int
pop
xchg
cmp
repnz
mov
lds
push
rorb
or
mov
xchg
insb
popa
cmp
fsubr
outsb
in
imul
add
ss
cmp
mov
mov
pop
sub
or
jmp
and
out
scas
inc
jne
addr16
imul
lock
jmp
lret
xchg
cmp
mov
add
int3
add
fadds
pusha
and
adc
rorl
loopne
int
adcl
push
mov
xor
add
out
rcrb
pop
xlat
xor
push
aam
add
sub
mov
fldenv
jmp
jmp
fdivl
cmp
int3
shl
pop
sbb
pop
mov
fnstcw
addr16
out
sub
loopne
out
cmpsl
ret
inc
fxch
pop
and
jecxz
incb
xchg
pop
test
xlat
fisubrl
xchg
loop
lods
and
imul
les
test
xchg
loopne
outsb
dec
xlat
push
mov
xor
sub
fistpll
loope
jmp
aas
out
jle
inc
mov
insl
jbe
jg
xor
jnp
sti
push
mov
hlt
cwtl
aas
jmp
out
jns
pusha
cmp
add
lods
adc
jns
or
sbb
push
ret
loopne
and
out
push
fsubrl
pusha
adc
dec
rorl
sub
jle
or
xchg
pop
lret
in
jmp
sub
inc
push
in
lods
testb
mov
adc
cmp
or
lods
jmp
daa
cwtl
add
ja
in
lods
js
cmp
sbb
test
dec
jmp
adcb
imul
sbb
stos
sub
jmp
iret
push
std
xlat
jmp
sbb
cmp
cltd
and
jecxz
or
lods
cmp
pusha
cli
aam
pop
out
mov
shl
push
mov
int3
lods
push
pop
dec
and
push
jmp
fs
sub
pop
add
or
fldpi
mov
xchg
test
jmp
mov
pop
jno
out
jmp
loope
ret
pop
test
jmp
add
jmp
sub
sub
and
pop
test
daa
pushf
or
test
dec
ret
lods
add
movzbl
adc
jb
cmp
inc
dec
pop
xchg
mov
push
ret
mov
jmp
xor
je
and
xchg
jmp
test
lcall
or
cmc
js
call
popf
jae
lods
leave
fdivrp
jmp
cmp
xchg
cmp
mov
inc
aad
inc
sub
add
popf
mov
xor
std
pop
mov
push
push
jmp
lds
push
jmp
xor
shrl
arpl
inc
enter
outsl
sub
nop
js
adc
shlb
and
inc
test
mov
mov
int
popf
mov
sub
shrl
scas
jmp
inc
in
bound
stos
xor
jne
ds
repz
mov
test
jbe
mov
leave
lods
ss
push
hlt
mov
jecxz
pop
loop
sub
xchg
push
data16
cli
rclb
xchg
outsl
hlt
pop
sbb
xchg
and
jmp
daa
test
jbe
xchg
cmp
dec
mov
push
iret
lret
jmp
pop
fisubrs
popa
ficoml
out
jno
cli
repnz
or
or
mov
inc
add
lahf
in
call
sarl
filds
insl
lods
jo
in
stos
xchg
or
push
jmp
jns
adc
fincstp
nop
jmp
into
or
sub
jg
fwait
lret
inc
sub
fsub
jecxz
lods
jp
outsb
lret
push
ljmp
jmp
adc
mov
js
xchg
mov
sub
ret
jmp
lahf
xchg
inc
xor
dec
and
or
enter
outsb
cmp
mov
cmp
jmp
or
in
and
out
test
jns
pop
jmp
fwait
mov
and
and
pushf
lods
andl
popa
sbb
mov
dec
mov
cmp
xor
xchg
jns
adc
lock
sub
jb
stos
ds
and
sbb
repnz
push
movsb
inc
leave
push
jmp
loope
inc
dec
pop
jnp
jmp
cmpsb
xor
icebp
ss
jmp
jo
pop
nop
ds
cmc
sub
stos
sub
mov
jmp
int
cmpsl
push
ror
xor
sbb
sub
or
out
fsubr
jmp
aaa
sbb
mov
iret
test
jmp
mov
dec
pop
dec
sub
les
adc
cmp
aam
out
in
arpl
push
xchg
sbb
push
test
movsl
dec
jp
mov
jmp
cmp
bound
test
idivl
jns
jmp
lods
pop
pop
xor
cmp
inc
dec
into
rorl
push
xchg
sub
fwait
int3
or
subb
xchg
xchg
pop
sbbl
stos
cwtl
imulb
jmp
mov
mov
lods
or
enter
out
or
imul
outsb
push
sbb
sub
jmp
mov
inc
icebp
mov
pop
sub
jmp
pop
push
daa
push
sub
sub
je
xchg
xor
pusha
sub
stos
mov
roll
daa
mov
xchg
jmp
sbb
test
add
xchg
pop
xor
push
inc
jmp
dec
ss
mov
dec
jmp
xor
pop
jmp
xchg
fcompl
jmp
aam
int3
push
inc
add
loop
lret
mov
fsubrs
jge
jns
lods
mov
sub
mov
xor
fistl
aaa
sbb
jmp
decl
mov
jmp
jmp
inc
int3
jmp
mov
jo
pop
out
hlt
mov
jmp
repz
out
jmp
std
mov
jne
cwtl
adc
pushl
or
rcll
jb
fimuls
and
cmp
and
xor
aad
xchg
movsb
jb
lods
jno
mov
xchg
iret
jns
fstpt
or
ljmp
xor
pop
and
jmp
and
or
inc
mov
or
mov
adc
loope
cmp
repnz
sbb
testb
repz
test
addr16
stos
and
push
stc
push
adcl
jle,pn
xlat
xchg
sbb
sub
xor
ljmp
scas
sbb
nop
rcll
add
cwtl
aam
jmp
xchg
jns
insb
insw
push
jmp
ja
sbbb
out
sbb
in
sub
xor
fcmovne
pop
add
faddl
inc
icebp
js
fisttps
push
jmp
into
in
out
sub
lock
push
dec
jge
and
adc
lods
or
inc
xchg
jmp
rol
jge
xchg
insl
mov
ss
in
repnz
sub
jb
sbb
or
sti
int
xor
leave
or
outsb
fnstenv
mov
imul
jmp
mov
xorl
xchg
scas
sbb
lcall
xchg
std
jo
das
pusha
adc
lods
pop
lcall
inc
sub
cmp
push
fwait
inc
mov
jmp
je
pop
icebp
test
lret
cmp
xorb
test
adc
mov
fucomip
stos
adc
xor
jmp
mov
pusha
out
sub
iret
test
movsl
push
loopne
lods
and
cmc
xchg
iret
mov
lds
mov
loop,pt
push
mov
pusha
and
out
es
mov
xchg
sub
jmp
rcrl
pop
pop
outsl
sub
aas
idivl
add
in
add
test
ficoml
notl
sub
aad
mov
pop
test
in
jbe
lahf
bound
fucomi
shlb
sbb
jmp
fsubs
nop
jmp
mov
dec
pushf
push
jmp
pop
cmpb
or
push
mov
jmp
or
fs
cwtl
mov
fistps
repz
es
inc
or
fwait
std
mov
mov
jp
add
pop
test
dec
or
jne
mov
mov
mov
sub
xchg
je
dec
or
sub
jmp
mov
mov
and
mov
pop
popf
xor
testl
jge
bound
test
jl
push
outsl
popa
repz
fcmovb
es
jmp
xchg
xchg
and
jmp
out
adc
rcrl
fabs
shrb
bnd
mov
mov
pushf
jns
add
adc
popf
out
xchg
or
aas
leave
test
rcrl
ret
jmp
pop
lea
pop
cwtl
xchg
jbe
push
cmp
lods
into
aam
add
add
mov
repnz
lods
jecxz
nop
leave
lock
cmp
push
mov
xchg
int3
mov
jno
cmpsb
fsubr
fldcw
std
shr
shl
mov
jmp
outsl
sti
dec
ficoms
cmc
jmp
sub
fimull
cmp
jne
fstpt
jl
mov
jmp
loopnew
outsl
lret
sbb
aam
xor
movsb
xor
xor
cmp
loope
dec
mov
leave
rcr
mov
dec
pop
movsl
outsb
pop
filds
or
sbb
mov
pop
jns
xor
xchg
jbe
mov
jmp
mov
scas
movl
mov
loopne
cltd
test
sub
lods
push
in
mov
pop
aaa
mov
sbb
jmp
jp
cmpsb
mov
in
test
gs
jns
std
imul
add
and
push
insb
bnd
push
push
iret
xchg
pusha
push
jmp
inc
popf
xchg
lret
pop
mov
jb
mov
das
ret
xor
shrb
sahf
mov
idiv
jmp
sub
lcall
lods
jge
sbb
adc
jmp
icebp
jl
aad
xchg
jle
or
bound
sub
rcll
push
jmp
pushf
mov
shrl
in
or
adc
xorl
jb
add
and
pop
pop
mov
xor
into
sbb
fistpl
lea
lds
jl
adc
jge
sbb
repnz
sub
sbb
push
lods
rcr
mov
jge
push
jp
jmp
mov
fisubs
sub
pop
jmp
pop
pop
jo
fdivrs
pop
push
and
sub
iret
mov
adc
repnz
in
mov
gs
shrb
mov
rcll
push
cmp
inc
or
jmp
and
xchg
faddl
cmc
or
jmp
xor
and
test
scas
sbb
cmp
jmp
dec
data16
ret
das
jmp
push
test
inc
xor
add
scas
fsubrl
pushf
inc
jmp
mov
popa
jbe
or
and
nop
dec
jmp
mov
jle
jmp
jns
addr16
popa
adcl
mov
lret
lods
movsl
fs
cmpsb
lods
xor
inc
pushf
lods
pop
dec
dec
mov
test
sub
mov
loope
fidivs
pmullw
adc
pushl
mov
pushf
jmp
add
rorb
sti
mov
jae
xor
mov
mov
pop
jmp
xor
jns
movsl
dec
cli
mov
repz
mov
lods
mov
adc
adc
insb
sub
mov
lea
outsb
mov
jb
and
jmp
mov
divl
sub
fnstenv
fadds
push
jns
imul
jb
fimull
and
sbb
or
imul
mov
jmp
mov
lret
sbb
in
lods
mov
or
adc
jbe
ret
movsl
std
in
mov
int
jb,pt
pusha
mov
mov
lods
push
pop
nop/reserved
dec
push
aam
jmp
mov
and
ret
jp
mov
loope
jmp
jo
xchg
stos
test
xchg
push
jmp
ret
mov
mov
lret
adc
mov
jo
push
push
sti
ja
cmp
add
sub
popf
jge
inc
cltd
xor
in
or
mov
mov
push
std
jns
enter
lods
stos
or
out
xor
loopne
fimuls
jmp
push
cwtl
push
in
icebp
cltd
jmp
mov
popa
sub
mov
lods
rcll
cli
push
inc
jmp
cmpsl
ret
push
sbb
push
jmp
xor
cmovo
cmp
pslld
pop
std
imul
jmp
pop
arpl
mov
dec
jle
jmp
cwtl
repz
clc
jmp
popa
or
jmp
jnp
mov
jmp
cmpsb
ret
loop
nop
mov
pushf
test
sbb
setle
inc
mov
int3
jmp
mov
pop
icebp
scas
push
xchg
rorl
cwtl
inc
jmp
fiadds
arpl
divb
rolb
ja
or
sub
add
jmp
xchg
xchg
xor
jmp
ss
stc
cld
xchg
pusha
popf
jmp
fwait
dec
shr
roll
jne
pop
cmpsb
mov
lods
loop
push
aam
pop
or
and
jmp
add
mov
push
push
mov
jge
add
cmp
fsubrs
jmp
mov
cmp
roll
mov
decb
dec
jmp
ja
lret
and
mov
cmp
pop
test
aas
pop
mov
fsts
or
mov
and
jmp
xchg
jmp
jmp
es
pop
scas
push
mov
sbb
jp
mov
mov
jmp
test
adc
les
imull
lret
outsb
jmp
xchg
aaa
cli
ret
insl
test
sbb
adc
xlat
shr
mov
iret
mov
sub
nop
adc
xchg
das
inc
inc
es
add
outsb
push
mov
nop
jb
decb
mov
pop
lods
cltd
leave
xor
xor
sbb
scas
mov
imul
loope
repnz
mov
push
shl
add
jae
out
lea
jmp
and
cmp
dec
mov
jne
xchg
leave
ret
add
mov
adc
jnp
repz
jmp
aas
inc
stos
xchg
aaa
and
fwait
adc
sub
out
fcmovu
xorb
test
jae
cmp
mov
scas
mov
add
ljmp
or
lods
out
sub
xchg
adc
inc
repz
jmp
mov
divl
icebp
and
inc
aas
cltd
or
cmpsl
stos
xorb
movsb
enter
mov
mov
fbld
mov
jb
xchg
and
push
jmp
mov
and
jmp
stc
repz
testl
sahf
cmp
into
jne
es
push
xor
gs
push
cltd
sub
push
adc
sahf
test
in
xchg
outsl
outsl
div
jmp
and
mov
jmp
inc
gs
mov
sti
mov
mov
jp
sbb
xlat
scas
popa
xchg
into
in
adc
fld
xor
movb
inc
std
stos
jmp
das
inc
in
faddl
into
pop
mov
sbb
cmpsb
jmp
jns
cmpsl
inc
cmp
xchg
imul
add
lods
sbb
int
jmp
mov
push
loop
aam
jmp
lret
movsl
pop
and
imul
cmp
out
pop
pop
jmp
test
in
jmp
leave
cmpsb
fsubp
xor
hlt
jmp
cwtl
sbb
inc
dec
pushf
jmp
push
xchg
shll
and
push
sbb
ds
add
gs
rep
and
jmp
dec
mov
jmp
cmc
jno
enter
hlt
or
cli
jmp
outsl
mov
xor
dec
mov
jmp
mov
std
shrl
jmp
jle
loop
adc
jge
imul
call
inc
sub
push
daa
add
pop
test
imul
add
int
fs
iret
jmp
mov
adc
dec
sbb
adc
jmp
les
ss
jno
loopne
add
jb
sub
jbe
or
ret
scas
outsb
loope
add
clc
ror
inc
sbb
sub
inc
xor
jne
mov
outsb
out
add
add
lock
fmull
adc
jecxz
dec
dec
loop
xchg
scas
loopne
jmp
sub
mov
loope
lret
test
and
or
ss
dec
jno
dec
mov
adc
cli
popf
es
xor
mov
das
jmp
in
xchg
adc
xor
jmp
cmpb
xlat
insl
cmp
inc
mov
pop
jge,pn
xor
mov
cmpsl
push
jg
jmp
or
jno
sub
push
loope
sbb
sahf
mov
sbb
scas
iret
ljmp
adc
rcrl
movsl
cmp
and
or
ss
imul
fstps
fs
sbb
pop
mov
lcall
push
xor
or
jmp
mov
arpl
enter
rcrl
adc
stc
push
sub
sbb
push
inc
inc
jmp
outsb
mov
ljmp
sahf
jmp
cmp
lret
pusha
test
or
dec
mov
push
xchg
sub
xor
lahf
and
sbb
xchg
enter
mov
je
dec
in
inc
xchg
jmp
mov
movsl
insl
pop
enter
out
cld
pop
cltd
or
sub
lods
mov
inc
cmp
cmp
add
in
pop
dec
dec
mov
and
dec
lea
adc
icebp
mov
aad
int
pop
fdivrs
cwtl
sub
jmp
stc
sub
jmp
fmuls
mov
push
jmp
je
ret
int3
mov
enter
test
rcrl
leave
or
jmp
es
mov
inc
pop
pop
jmp
hlt
pop
aas
cmpb
push
dec
movsl
or
cs
jmp
fcmovnu
mov
xor
jecxz
jns
lret
or
jmp
jbe
in
sub
aam
cs
mov
push
data16
jge
xor
fcmovnb
out
pop
mull
ja
add
ror
mov
jmp
nop
pop
popw
or
imul
scas
fnstcw
push
jbe
cli
and
sub
vhsubps
imul
dec
mov
dec
outsb
adc
leave
sbb
iret
das
andl
fmul
pop
test
xchg
push
jmp
push
fmul
jmp
jne
imul
hlt
push
mov
or
loop
movsl
mov
mov
adc
jae
popa
ret
adc
pop
sub
mov
jle
sub
mov
push
fists
ret
shr
ds
push
adc
jmp
fstps
mov
in
add
out
inc
mov
pop
inc
leave
mov
adc
dec
push
fwait
aaa
shr
insb
sub
cmp
jmp
int
adc
push
fnsave
xchg
popa
jnp
cmp
add
imul
test
push
add
xor
sti
adc
jbe
sbb
cltd
orb
adc
decb
jge
jne
test
imul
cmp
mov
lea
sbb
mov
scas
test
sub
notl
pop
imul
stos
cmp
adc
and
adc
mov
movsl
gs
arpl
aam
stc
es
arpl
fstpt
test
cs
mov
jo
pop
in
jle
dec
sub
je
pop
aaa
fnsave
sbb
mov
dec
outsl
cmp
jnp
pop
shr
push
pop
sahf
out
mov
push
es
aam
rcll
js
sub
cmp
xlat
pusha
mov
jmp
sti
mov
inc
dec
lahf
sahf
lods
fldl
sbb
scas
loop
xor
in
das
jne
xchg
mov
jl
sbb
xor
sahf
lret
sbbl
out
inc
jmp
dec
push
jge
out
in
jmp
js
loop,pt
test
stc
dec
mov
xchg
push
pop
mov
repnz
ja
lea
or
dec
xchg
imul
jl
fidivs
push
ss
push
xchg
leave
jmp
inc
repnz
popaw
mov
lcall
cmc
mov
cmp
test
pop
sub
daa
outsl
sbb
lret
xor
enter
lods
cs
jg
cld
xor
mov
cmpsb
push
pop
jno
or
leave
jmp
fsubs
cmp
loop
jmp
orl
jno
outsl
cmp
lods
jl
mov
cmc
sub
adc
test
inc
lods
leave
adc
pusha
lea
inc
xor
mov
jmp
jecxz
or
sub
push
int
dec
sbb
jmp
cmp
cmp
and
and
jmp
cltd
rcll
sub
lods
pop
jnp
adcl
pushf
and
inc
in
inc
fdivl
add
add
jmp
jb
sahf
jmp
rol
in
pop
adc
jp
repz
lods
lcall
and
sub
dec
or
inc
add
push
sbb
cs
loopne
incl
or
push
jmp
mov
xor
hlt
mov
jo
mov
mov
in
pop
cmp
jae
push
sub
sub
out
nop
mov
stos
xchg
jmp
gs
enter
pop
jmp
mov
jns
and
sub
push
cmc
and
pop
xchg
or
sbb
lock
jle
add
mov
dec
jl
pop
pop
out
enter
jne
scas
adc
inc
jmp
test
repz
sub
dec
lret
out
jmp
sbb
mov
and
stc
mov
or
in
pop
mov
xchg
add
iret
jmp
in
cmp
dec
inc
repnz
push
sti
mov
jge
push
mov
pop
and
mov
jb
in
push
mov
repz
jno
inc
mov
or
jl
pop
sub
out
popf
test
jmp
clc
cld
sub
adc
imul
or
jmp
inc
loope
scas
sahf
int3
or
sbb
or
jno
inc
lods
jmp
push
mov
add
rcll
sub
mov
lds
das
lahf
repnz
adc
cmc
sub
out
xor
call
std
arpl
test
clc
sub
in
cwtl
or
jmp
mov
dec
mov
or
xor
repnz
xchg
sbb
jmp
cmc
divl
out
call
outsl
popa
lret
lods
test
dec
aam
or
sbbb
inc
jmp
or
dec
jb
out
push
or
jmp
lods
jbe
pop
stos
in
popf
jmp
xlat
loopne
test
aam
xor
shll
imul
pop
pushf
lods
push
inc
or
lock
cli
adc
loopne
stos
in
bound
jno
mov
addl
je
aaa
sub
stc
xor
sub
sbb
fbld
push
xchg
shlb
std
jmp
lret
mov
push
scas
or
fcompl
hlt
rol
lahf
mov
test
xchg
or
imul
out
dec
test
jb
popf
mov
dec
mov
jl
sahf
adc
lahf
cmpsb
fmul
mov
and
lret
jmp
in
mov
mov
sbb
pop
sub
pushf
inc
outsl
ficoms
xor
adc
pusha
jo
fnstenv
cmpsb
sti
xor
fistl
cmp
into
or
jp
lea
cmp
mov
mov
adc
and
jmp
inc
cli
mov
jmp
sub
inc
mov
push
jmp
mov
pop
cmpsl
jmp
faddl
sbb
pop
mov
mov
out
int
push
jnp
das
cmpb
jns
xchg
or
xchg
jmp
pop
and
push
scas
inc
dec
insb
lds
sbb
mov
add
sub
xchg
adc
testl
and
lret
add
faddl
mov
xchg
bound
jecxz
inc
out
or
fsubrl
cltd
int3
test
mov
mov
mov
jae
add
pusha
push
mov
daa
in
inc
add
aad
xor
mov
std
cmp
mov
push
xlat
jmp
adc
jo
cmp
push
mov
jmp
cmpsl
dec
dec
jp
push
cmp
adc
sahf
push
mov
sub
jl
shr
cmpsb
dec
xor
jmp
adc
lods
jmp
in
subb
stos
inc
cld
repz
data16
mov
add
pushf
aaa
ds
aam
fnstsw
daa
push
sbb
cld
xchg
jmp
xor
push
jmp
xchg
dec
movsl
imul
stos
mov
jmp
xchg
push
mov
pop
popa
negl
jmp
pop
call
sub
je
in
push
inc
jl
sbb
pop
dec
ret
jmp
test
jmp
sahf
jb
inc
jecxz
jbe
push
jnp
jmp
aas
jmp
adc
inc
inc
out
dec
mov
pop
xlat
inc
sub
cltd
jno
xor
std
sub
mov
jmp
ds
cmc
ret
in
jnp
push
out
and
xchg
in
lds
pop
in
mov
or
hlt
iret
jmp
jns
mov
aas
lret
imul
call
jo
insb
xorb
jae
mov
in
sub
push
fucomip
cmpsb
decb
dec
sub
out
fbld
or
jmp
enter
lds
jmp
mov
orl
add
push
add
jl
mov
fucomi
xchg
mov
pushf
sbb
cmpsb
xor
mov
ret
shlb
mov
jmp
mov
int3
cmpsl
jb
cmc
mov
xchg
fistpl
aas
mov
sahf
jmp
movsb
in
mov
xchg
out
fsubs
outsl
cmp
pop
ror
shrb
int
mov
mov
shll
scas
dec
jmp
or
scas
hlt
fsubrl
je
mov
aam
mov
out
xchg
fucomp
jmp
scas
idivb
sbb
xchg
jns
xorl
dec
jp
ret
aam
dec
repnz
in
in
mov
ret
cmovg
iret
jmp
repz
cmp
sbb
mov
jmp
shrb
stc
sti
pop
lods
imul
sti
mov
mov
repnz
iret
enter
imul
pop
gs
add
lods
cmp
mov
repnz
popa
movsl
jmp
lret
or
jp
mov
cmp
scas
lcall
mov
lods
ds
sub
push
gs
pop
fdiv
daa
add
leave
cmpl
out
mov
mov
pop
pusha
sub
lcall
scas
incb
out
sbb
and
lods
fsubl
movsl
and
xor
movsl
jmp
push
push
out
lret
and
outsl
mov
sub
jne
and
xchg
inc
arpl
mov
gs
or
xor
xchg
jmp
les
shll
lods
mov
jge
and
ds
es
jmp
mov
inc
lahf
mov
push
pop
test
jmp
mov
cs
fistps
mov
imul
or
cmp
daa
jbe
xlat
jmp
add
cmp
movsb
or
subb
jmp
lds
and
les
mov
xorl
jb
sahf
fcmove
xchg
jbe
stos
aam
lcall
add
adc
jmp
insb
add
enter
jmp
mov
or
jmp
mov
sbb
stc
push
lret
jmp
push
outsl
adcb
add
sub
aam
push
or
repnz
ret
icebp
or
scas
into
movsl
mov
mov
imul
jo
or
inc
aam
push
mov
push
cmp
xor
jge
sbb
jae
stc
sub
bnd
mov
cmp
lods
imul
int
pop
sub
jmp
xor
aad
push
sub
pop
cmp
add
jmp
dec
fsubr
test
inc
cltd
push
jmp
and
lds
ljmp
and
jmp
cwtl
and
cli
adc
or
cli
pop
jmp
and
lret
insl
xor
sbb
mov
addl
inc
xor
outsl
ret
cmp
lods
in
inc
movsl
jns
sti
xor
xchg
jmp
cs
pushf
es
aaa
xor
mov
sub
pop
jmp
add
mov
out
push
cmpsl
or
jecxz
lods
inc
cwtl
mov
pop
dec
ja
repz
inc
or
inc
iret
push
in
lods
cmpsb
jmp
dec
jecxz
sti
cmp
cmpsb
add
lea
mov
fnsave
outsb
cmp
push
xchg
repz
lods
data16
dec
pop
in
xchg
jl
jmp
adc
sub
dec
popf
sbb
imul
stos
jg
outsl
leave
xchg
inc
aaa
mov
adc
test
lret
repz
inc
mov
xchg
scas
mov
orl
call
pop
jo
push
jmp
cmp
push
lods
sti
xchg
push
push
sub
repz
out
repz
data16
push
nop
add
repz
jmp
dec
and
lods
mov
mov
jmp
inc
inc
or
outsl
lods
stos
push
cmp
andl
dec
rcll
shr
inc
outsl
pop
cs
repz
mov
sbb
mov
mov
sbb
jmp
movsb
xlat
jge
sub
into
pop
sub
sub
in
test
push
dec
test
daa
xor
xchg
sbb
das
lock
mov
test
xor
pop
cmp
and
jmp
mov
inc
cmp
outsb
jnp
cwtl
lods
jmp
pop
push
icebp
jbe
mov
fdiv
fstp
test
inc
rolb
lea
push
addb
popa
sti
daa
pusha
jmp
repnz
movsb
add
lods
scas
cmpsl
mov
mov
cmc
in
sub
flds
js
clc
data16
xchg
cmp
test
dec
xlat
fs
outsb
aam
ja
sti
xor
jmp
call
test
add
and
jmp
sbbl
outsb
lods
sbb
stos
sahf
shrb
into
push
clc
sub
cmp
dec
adc
outsb
and
arpl
mov
jmp
lret
in
stc
insb
mov
ficomps
sub
adcb
and
xor
pusha
push
xor
pop
and
pop
push
jmp
outsb
lods
mov
sub
xor
jmp
add
call
sub
push
jb
pusha
dec
int3
das
sahf
idivl
jmp
adc
sub
mov
dec
xchg
xchg
dec
or
shrl
cmp
push
loopne
fcoms
or
movhps
popa
adc
es
jmp
push
adc
adc
xor
cmp
mov
inc
lret
jne
inc
arpl
bound
xchg
call
movsl
stc
js
addb
stos
fidivs
and
or
and
jae
scas
jmp
sahf
mov
push
jmp
cwtl
mov
dec
outsb
cmp
mov
and
shll
xchg
mov
or
inc
xchg
sub
mov
je
and
jmp
push
lds
or
aad
subl
cs
mov
jmp
test
test
cld
popa
stc
int
lret
repz
and
lods
jmp
sbb
mov
lret
lods
and
ss
jbe
lods
lods
pop
shrl
scas
pop
outsb
dec
sub
xlat
sub
loopne
jp
jmp
test
stos
adc
or
cwtl
sub
jmp
in
divl
loopne
scas
push
xchg
out
push
cmp
push
adc
adc
cmp
cmp
ja
pusha
xor
je
push
or
mov
mov
xor
and
jmp
ljmp
jmp
mov
ja
mov
sub
jp
lock
daa
mov
imul
icebp
call
xor
aad
and
sbb
xchg
mov
pop
shrl
rorb
and
sbb
push
mov
inc
add
pop
jp
jmp
cmp
pop
lret
jmp
mov
push
pop
insl
fucomp
cmp
cmp
xor
mov
jmp
testb
inc
mov
iret
jmp
xchg
mov
xor
push
sub
fwait
mov
mov
lods
dec
mov
jg
sbb
mov
shl
dec
sti
sbb
push
jmp
out
mov
jmp
push
fldcw
ret
jmp
sub
push
pop
pusha
test
sti
iret
and
mov
popa
scas
or
imul
cmp
xchg
dec
and
lods
aas
rol
inc
cmovl
xchg
ret
mov
adc
mov
test
flds
sub
push
lods
cmpsb
loope
push
cmp
or
divb
xchg
push
jmp
mov
test
hlt
pop
inc
jnp
insl
sub
mov
push
pop
xlat
aam
sbb
jge
push
xchg
lret
sti
and
add
out
int
mov
lret
inc
mov
scas
or
cs
add
dec
inc
jmp
data16
mov
jmp
loope
xor
out
push
sbb
inc
jo
cltd
mov
pop
fcompl
add
imul
aad
ficompl
call
or
into
outsb
and
aaa
js
adc
fisttpl
xchg
int3
sub
xchg
popa
rcll
pop
mov
jmp
sub
out
popf
dec
and
adc
xor
add
cmp
subb
ret
sbb
mov
fs
jb
sbb
sub
movntq
out
mov
and
lods
adc
add
mov
outsl
test
lods
in
dec
out
aad
and
iret
mov
adc
movl
insl
inc
imul
or
inc
add
jo
jmp
lock
insb
jge
or
leave
stos
or
push
add
out
imul
cmp
test
adcl
mov
shr
cwtl
and
add
or
jmp
push
xchg
clc
pop
add
das
dec
mov
jnp
ficoml
xchg
cmp
xor
add
cmp
and
sbb
fwait
mov
sub
sbb
out
test
pop
arpl
lret
xchg
mov
mov
les
pushf
out
jns
addr16
test
js
lods
icebp
jmp
lret
dec
loopne
xchg
insb
jmp
push
pop
sub
jae
stc
rol
stc
ret
int3
mov
mov
add
cltd
jmp
adc
in
nop
sub
enter
add
sar
sbb
mov
jge
pop
xchg
lods
jmp
loop
out
xor
jmp
lods
cli
cmp
sub
jmp
mov
mov
dec
cli
mov
outsb
push
mov
stc
bound
mov
xlat
lret
push
imull
adc
push
cli
outsb
std
hlt
pop
fwait
jmp
test
and
xchg
sbb
rcrl
or
dec
jmp
cld
repnz
sbb
sub
sahf
jg
cmp
gs
imul
xacquire
sub
and
dec
out
ds
insl
jb
fwait
stos
dec
pop
jmp
sub
cmp
cmpsl
loope
jmp
mov
sbb
xor
pop
shrb
ret
nop
in
mov
mov
sbb
fldpi
hlt
or
nop
jmp
mov
imul
jmp
ljmp
jmp
shrb
push
mov
jmp
add
sub
push
movsb
out
mov
mov
out
cltd
clc
sub
push
outsb
mov
sbb
je
sub
pop
leave
pusha
fcmove
xor
lahf
repz
add
mov
movsb
jae
dec
popa
inc
mov
push
stos
fcmovnb
repz
jmp
or
testb
movsb
jmp
lods
push
lahf
enter
sbb
rorl
cmp
jmp
loope
test
cs
pop
add
jmp
dec
movsl
sarl
scas
jmp
mov
loop
jb
sti
push
sbb
add
jmp
inc
mov
orl
jmp
enter
add
pop
in
adc
cwtl
adc
jmp
in
inc
lods
mov
fs
into
cs
xchg
pusha
test
movsl
jmp
rcl
fnstenv
xchg
lods
jmp
outsl
ja
outsb
mov
and
daa
out
jmp
fbstp
cmp
call
fidivrs
cld
and
jmp
out
push
mov
sub
jmp
jae
mov
jmp
ficompl
mov
inc
sub
add
mov
mov
adc
data16
mov
sub
addr16
fsts
clc
not
fldl
cmp
mov
xchg
lds
push
jns
mov
mov
xchg
pop
lods
test
sub
jmp
ret
int
cmpsb
pop
jmp
and
pop
aas
sbb
test
adc
daa
test
gs
movsb
loop
int3
xor
dec
lock
shr
int
jecxz
out
add
adc
mov
or
sarb
pop
scas
mov
and
add
pop
adc
push
int3
push
and
mov
sti
jecxz
jmp
push
mov
insl
jl
add
or
sub
xor
push
aam
rolb
out
sbb
fistpl
sbb
jno
out
adc
cmp
dec
leave
push
mov
xchg
adc
frstor
popf
jmp
cs
aad
push
xchg
jmp
das
test
aaa
mov
pop
adc
jl
xchg
mov
enter
adc
jmp
cltd
pop
mov
shrl
or
lds
add
jo
pop
lods
mov
or
stos
pop
sub
push
sbb
ljmp
dec
jecxz
mov
cmp
jmp
mov
call
jbe
es
inc
mov
ficoms
ds
stc
das
jmp
jae
jno
xchg
aam
jmp
addr16
insl
xchg
lock
cli
je
and
repz
ret
loop
mov
jmp
xchg
inc
fwait
negb
pop
nop
inc
jmp
in
mov
enter
outsl
xor
and
arpl
jmp
push
cmc
fisubrl
jecxz
jg
imul
pop
mov
jmp
or
scas
jl
jno,pn
dec
cmc
and
int3
sti
imulb
inc
xor
enter
jmp
adc
fcomps
xchg
sbb
imul
lds
lods
push
sub
lock
cmpsb
scas
mov
jmp
cld
fisubrs
mov
xchg
dec
or
and
negb
stc
mov
xchg
push
mov
lret
xchg
jb
hlt
cmp
sub
lods
ljmp
out
and
jmp
imul
jmp
xchg
aad
and
into
es
rcrb
sub
jmp
inc
xor
add
jp
xchg
int3
int
lock
insb
jnp
mov
cwtl
sbb
lret
call
arpl
cmp
decl
sub
xor
jp
push
mov
lret
scas
xor
shlb
fdiv
xlat
cmp
jo
mov
and
movsb
jmp
out
or
jmp
test
ds
rorb
jmp
push
lahf
mov
lods
mov
insl
cwtl
jmp
mov
cmpb
xchg
out
pop
push
and
in
aam
notb
push
adc
or
adc
inc
out
test
cmp
icebp
stos
inc
mov
sub
jmp
ss
aas
movsl
xor
xor
cmp
shl
jns
daa
out
orb
push
cmp
and
adc
jmp
in
push
and
inc
push
shrb
jge
adc
stos
sbb
sbb
scas
inc
xor
pop
jmp
js
loop
fistpl
test
or
call
cmp
dec
jbe
out
push
jb
cs
icebp
mov
jmp
mov
jns
outsb
push
repnz
pop
or
subb
cwtl
pop
in
push
sub
mov
popf
scas
xchg
repnz
arpl
mov
mov
dec
xlat
call
inc
pop
mov
and
sti
insb
ss
mov
jmp
or
aaa
sub
sbb
pop
leave
lahf
repz
loopne
sub
gs
push
outsb
pop
mov
mov
sub
daa
mov
jae
loop
xacquire
mov
subb
notl
mov
jmp
das
mov
insb
xor
outsl
enter
leave
push
nop
sbbb
push
iret
cmp
std
cwtl
fsubr
mov
mov
sub
pop
int
push
xor
dec
pushf
stc
aas
mov
add
push
sbb
mov
jmp
and
mov
push
movsl
mov
xchg
jmp
ss
test
mov
lcall
add
in
imul
fwait
adc
stc
cs
icebp
add
jmp
mov
push
mov
xchg
xchg
dec
aaa
mov
es
popf
int3
pop
lret
push
orl
sbb
cli
pop
inc
or
xlat
dec
ficomps
lds
sti
pop
xchg
mov
stc
xchg
dec
das
xchg
mov
lods
sub
mov
bnd
jno
sub
into
mov
mov
or
lcall
sub
out
cwtl
mov
jmp
aam
and
loopne
pop
mov
jmp
adc
cwtl
test
push
pop
mov
addr16
daa
xor
xor
loopne
mov
xor
test
xor
lock
inc
mov
sbb
sbb
or
divl
mov
jl
test
mov
dec
cmp
dec
or
sub
push
fucomp
mov
mov
cmp
insl
dec
push
jmp
mov
into
jmp
cmp
jge
add
mov
inc
scas
insb
mov
sub
in
je
adc
push
cmp
xor
pushf
mov
dec
jmp
mov
inc
push
bound
lods
push
mov
sub
out
enter
jmp
in
cwtl
or
cmpsl
and
cli
loope
jmp
pop
jecxz
mov
xor
rcrl
les
stos
fwait
and
jmp
cmpsb
sti
jo
add
jmp
fldl
arpl
pop
ljmp
pop
shrl
les
mov
xchg
sbb
mov
cwtl
mov
lods
cltd
sbb
icebp
or
rcrl
scas
inc
cmpl
stos
and
jae
mov
jmp
cmp
fisubl
je
jmp
fistpl
sbb
loopne
jmp
dec
stos
xor
xor
jmp
repnz
popa
jae
pop
xor
xchg
or
cltd
pop
sub
fucomp
sarl
ret
sub
loop
enter
stos
fwait
jmp
inc
jg
leave
sbb
imul
jb
sub
imul
stos
scas
popa
ja
mov
mov
jmp
imul
pop
cmpsl
cld
aam
jmp
test
cmpsb
push
add
and
lock
insl
sbb
mov
cli
sub
jmp
test
jle
dec
mov
and
add
mov
jmp
sahf
pushf
les
ret
stos
lret
push
add
scas
insl
jle
and
inc
adc
dec
int
loop
test
lods
hlt
cmp
cmp
sub
jmp
daa
push
mov
aad
ljmp
loope
imul
ror
dec
dec
shr
pop
mov
pop
int
xor
mov
scas
push
push
jmp
cmp
into
jmp
jecxz
pshufw
pop
daa
cmpsb
inc
jmp
stc
xchg
es
stc
fs
mov
sbbl
mov
lods
sbb
add
or
lret
mov
jmp
mov
bound
push
add
enter
movsb
sbb
cmp
pop
in
inc
and
out
xchg
lahf
inc
aas
jmp
cld
cmp
sub
mov
idivl
xchg
in
xor
push
mov
daa
je
jne
mov
adc
test
jo,pt
mov
gs
inc
pop
mov
jmp
or
pop
cmp
fistpll
xor
ret
nop
cmc
xor
ficoml
and
xchg
shll
stos
mov
mov
adc
pop
or
adc
add
cmp
dec
push
ret
mov
not
and
das
push
and
cmpsb
pushf
or
jmp
xchg
bound
subb
adc
in
int
test
dec
jmp
loop
mov
ret
out
jmp
sub
lock
enter
xchg
mov
adc
inc
jmp
xchg
call
push
jmp
stc
sbb
cmpsl
add
jmp
mov
xchg
fisubrl
pop
mull
add
fdivr
sahf
push
jmp
add
jmp
pop
int3
lds
or
or
add
jp
fstpl
sbb
shlb
jmp
sbb
leave
mov
std
mov
adc
out
and
iret
or
out
mov
mov
inc
and
iret
mov
sub
into
fcomip
shlb
out
or
cmp
jmp
dec
xchg
in
fisubl
jmp
cmp
push
cmpsl
jmp
aam
jge
mov
call
lods
jmp
mov
stc
imul
cmp
sahf
jmp
cmc
push
jb
mov
ja
lock
sbb
xorl
cmpsl
jne
xchg
jmp
fdivr
mov
jp
out
lahf
shl
jmp
sbb
adcb
notl
cmp
xor
jmp
adc
mov
lret
mov
pusha
aas
inc
scas
adc
mov
movsb
je
dec
sub
iret
push
push
xor
pop
jns
fistps
mov
gs
mov
std
sarb
jb
enter
jmp
mov
xor
push
push
repz
aad
cmpsb
jle
xchg
psrad
jmp
in
inc
fsubl
fucomi
xacquire
das
jbe
in
xchg
jmp
inc
xchg
dec
jmp
repz
adc
in
jmp
aaa
and
mov
bound
jo
xchg
mov
cltd
and
pop
cs
push
test
negl
aas
into
jmp
std
add
lods
out
or
ret
jmp
lcall
scas
mov
mov
test
or
pop
jns
sub
jecxz
fidivrl
loopne
es
inc
lods
inc
int
or
repz
mov
or
repnz
mov
lods
mov
jmp
sbb
dec
test
jmp
dec
mov
mov
pop
stos
sar
pop
mov
ds
mov
jns
ss
lds
popa
inc
out
lods
and
aad
mov
stc
or
cmpsb
cmp
jg
sub
lods
mov
adc
jmp
lret
shll
neg
int3
cld
adc
adc
daa
outsl
cmp
sbb
mov
lds
lods
pop
loopne
cmpsb
jge
daa
or
roll
cmp
shl
xor
sbb
test
mov
sbb
jmp
dec
add
jmp
cmpsb
mov
repz
sar
dec
mov
xchg
jmp
aad
fmull
mov
clc
and
out
adc
lods
mov
cli
nop
push
jmp
add
push
fdivl
mov
repnz
in
mov
data16
test
std
add
push
cli
loop
jmp
xchg
mov
push
jo
ficompl
mov
pcmpgtd
clc
sbb
xor
jecxz
pop
movsb
into
mov
mov
sbb
inc
pop
popa
lods
jo
xchg
out
sarl
jmp
cld
add
and
repnz
mov
pop
sbb
mov
icebp
inc
xchg
fwait
or
stc
dec
jecxz
popa
roll
lods
sbb
pop
js
mov
add
and
lea
sarb
mov
mov
cmpsb
and
pop
jmp
jb
loope
cmp
imul
fcmovb
aas
aam
out
jg
push
push
int
add
sbb
ljmp
inc
dec
pushf
pop
out
jg
aad
insl
sub
iret
mov
pop
mov
jo
xor
jmp
jle
loopne
dec
lahf
insl
jmp
jbe
fistpll
push
add
dec
adc
clc
add
lods
pushw
in
scas
mov
jae
adc
sub
add
add
mov
out
push
pop
clc
call
icebp
shll
leave
add
in
test
outsb
scas
aaa
pushf
fstpt
adc
jecxz
jmp
hlt
loop
mov
rcrl
jl
or
jmp
mov
cmp
aam
jge
inc
lret
cli
mov
jo
sti
loopne
or
lret
xor
lea
imul
adc
mov
and
mov
sub
dec
out
mov
incb
jmp
lds
inc
jl
shr
inc
jle
fwait
loopne
int3
cmpsl
mov
or
cmp
jmp
adc
stos
pop
and
xchg
mov
clc
enter
and
pop
pop
jp
inc
lret
push
insl
sbb
pop
jmp
stos
shlb
or
es
mov
add
jmp
je
push
out
push
enter
sub
cmp
sub
or
repz
out
test
push
adc
lret
jbe
xor
mov
call
sbb
mov
rcrl
ret
pushf
jmp
xor
cli
mov
jmp
xlat
test
adc
jns
lods
test
leave
popf
dec
mov
jmp
int
mov
inc
lods
sahf
cmp
sar
pop
xchg
or
jne
imul
ss
add
and
lods
movl
fcmovne
ret
inc
adc
jo
cmpsb
jmp
adc
mov
lods
xchg
jne
mov
or
test
xchg
jae
in
lock
data16
push
adc
jmp
dec
mov
pop
dec
scas
mov
adc
lds
cs
inc
out
nop
aaa
jmp
push
iret
adcb
inc
mov
sbb
jmp
xchg
pop
pop
arpl
lods
dec
shl
sub
and
insl
jmp
int
pop
jo
mov
cmp
cs
xchg
mov
sbb
push
dec
lret
lods
xchg
scas
cmp
xchg
inc
jbe
or
dec
jp
sbb
or
pop
adc
and
pop
mov
imul
and
rorl
std
jl
jmp
rol
pop
js
lods
outsl
movsl
mov
aas
sub
shr
cli
xchg
dec
jmp
rcrl
mov
sarb
mov
jmp
xlat
push
mov
cltd
ljmp
in
mov
out
jmp
call
add
sbb
test
dec
jmp
dec
pushf
mov
jmp
adc
push
addr16
jmp
cmp
in
mov
adc
ret
and
push
cmpsb
out
dec
mov
scas
sti
popf
inc
pop
repnz
push
cltd
ret
lods
push
rorl
sbb
jmp
out
pop
xor
jmp
int3
stos
out
adcl
xor
adc
mov
imul
or
jmp
pop
sbb
jg
add
jmp
test
mov
pusha
push
insl
repnz
data16
popa
mov
hlt
jmp
mov
imul
push
jno
call
add
les
sub
and
loope
sbb
movsb
jmp
mov
sub
imul
das
jmp
and
add
and
mov
push
pop
shrb
xor
aam
fdivrp
shrb
inc
test
cmp
sbb
sub
sbb
jge
sbb
dec
xchg
push
add
inc
dec
cli
dec
pop
adc
dec
push
nop
ja
shll
jmp
test
cli
mov
mov
jmp
sbb
repnz
add
addr16
add
adc
test
mov
pop
push
jmp
lds
jmp
pop
dec
adc
jmp
and
pop
lock
jmp
cs
pop
jg
push
lods
push
push
aad
jne
int3
rcrl
rep
into
ret
add
rolb
lods
sbb
jmp
insb
mov
nop
scas
add
sub
sahf
jno
js
insl
inc
sub
fs
pop
ret
fdivl
sbb
push
enter
cmpsl
sti
jmp
movsl
shll
xor
push
or
test
por
xchg
rcll
push
pop
xchg
imul
mov
stos
fs
aaa
mov
stc
sbb
sub
or
scas
mov
int3
lret
jmp
inc
xchg
dec
fcompl
jmp
sbb
push
fcomps
mov
mov
sti
xchg
arpl
movsl
aad
jmp
rcrl
lods
push
fidivrs
popf
dec
or
mov
cmp
out
addr16
insb
out
mov
and
jmp
je
fidivs
sub
fwait
jle
in
dec
jo
mov
jmp
inc
pop
mov
or
jne
fwait
js
push
shr
iret
sti
dec
inc
sub
jae
xor
lret
pushf
jmp
cmp
push
jmp
inc
pop
cmpsb
xlat
aas
lods
xor
icebp
dec
inc
ror
ss
xor
aas
lock
jmp
pop
mull
stc
pusha
push
jmp
sbb
xchg
subl
lcall
ss
mov
popa
aaa
ret
es
add
bnd
xchg
mov
repnz
mov
sbb
lock
adc
cltd
fldcw
mov
sub
lret
fdiv
jo
jmp
sub
nop
jmp
adc
rcrl
fbld
xor
dec
inc
ficomps
fcoms
sub
fsub
mov
inc
mov
inc
jg
loope
mov
xchg
jmp
ss
outsl
and
test
es
out
mov
stc
sub
push
idivb
enter
add
jns
imul
xor
fwait
shl
daa
inc
push
adc
loope
cmp
mov
or
inc
xchg
out
fbstp
push
orb
or
pop
fs
and
pop
adc
ljmp
inc
fsubrs
pop
pop
mov
push
ds
ret
jecxz
mov
push
jmp
ljmp
jmp
repz
push
sbb
adc
cld
call
mov
and
ja
jmp
scas
out
fsubl
mov
cmp
test
imul
and
jmp
loopne
pop
rcr
jp
jmp
lret
cli
cmp
jmp
test
enter
dec
mov
jbe
jmp
lods
mov
cwtl
pop
jmp
pop
scas
xlat
add
mov
pop
or
jmp
cld
dec
xchg
jae
sub
jbe
in
pop
lods
daa
dec
adcl
jmp
rclb
or
test
fnstenv
mov
int3
xor
hlt
add
jecxz
jmp
inc
and
adc
scas
sub
movsl
cltd
testl
in
popa
jmp
es
lret
sub
mov
sahf
ret
or
in
scas
xchg
pop
jl
out
cld
lds
mov
mov
sub
or
mov
notb
je
and
aam
in
and
pop
sarb
or
gs
pop
pushf
les
dec
jmp
cmpsl
stos
mov
add
jmp
mov
and
pusha
push
mov
jbe
lret
jmp
rcl
sbb
and
sbb
pushf
jmp
jge
pop
lahf
jne
pop
pop
and
cli
mov
jmp
in
pop
dec
outsl
cld
mov
add
jmp
mov
mov
cmp
xchg
inc
push
adc
and
inc
movl
ret
popf
sub
or
jmp
push
xchg
out
mov
jmp
xchg
cmp
jmp
call
test
mov
mov
mov
stos
in
push
jmp
sub
pusha
cmpsb
jmp
mov
jmp
lret
jmp
aad
mov
lods
neg
cmpsl
pop
pop
sti
or
fwait
cmp
mov
out
and
repnz
roll
lods
arpl
out
push
jmp
xchg
and
mov
in
jmp
mov
or
sub
mov
lods
dec
fldl
aaa
mov
daa
xchg
jmp
das
enter
aam
jmp
loopne
push
idivb
xchg
shrb
jle
testl
sti
addr16
jae
addb
popf
jb
data16
jmp
sub
xchg
inc
lcall
sub
jmp
filds
jno
cmpsb
bnd
int3
sbb
cli
lods
icebp
std
aaa
push
rclb
sbb
out
sarb
jmp
sbb
jmp
ficoms
sbb
lret
push
xor
sarl
lea
sbb
cmc
shl
jle
jmp
lods
out
xrelease
mov
sub
lea
lods
mov
cmp
push
insb
jb
sbb
xor
scas
cmpsb
inc
cmp
jmp
call
cmp
inc
mov
loop
stos
jmp
push
jnp
cmpsb
mov
xchg
ss
jno
mov
divb
stc
orl
jns
sub
xor
lods
inc
fwait
std
jg
pop
xor
jmp
movsl
push
push
inc
pop
into
jmp
and
fcom
sub
mov
dec
aam
pop
push
xchg
scas
push
mov
push
mov
into
pop
lods
cmp
fiadds
sbb
adc
mov
adc
or
xlat
push
cs
jbe
inc
jl
mov
sti
fsubrs
cltd
inc
icebp
test
insb
movsb
add
and
sbb
sub
sbb
and
add
mov
ja
jmp
inc
push
es
dec
jmp
nop
int3
pop
inc
pop
push
jno
mov
mov
clc
mov
sti
cli
fucomi
xchg
jmp
mov
mov
fnstenv
push
bndstx
mov
sub
jb
arpl
cmpsl
stc
xorb
sub
lods
cli
sbb
mov
out
inc
hlt
or
jmp
and
sbbl
repnz
sub
mov
dec
sub
sbb
ret
adc
or
mov
jnp
jge
ljmp
adc
icebp
sbb
jmp
sub
cli
xchg
jmp
or
mov
stc
adc
add
leave
sbb
push
sub
xchg
inc
nop
xchg
or
xchg
cmp
dec
xor
pop
lcall
int
lock
sbb
stos
jge
lret
or
and
jmp
cmc
fimull
push
add
ret
jmp
arpl
int3
lret
push
test
test
xchg
int
movzbl
mov
xor
add
jne
jb
mov
adcl
or
cmp
mov
mov
or
std
mov
scas
fdivr
repz
push
push
jmp
addr16
aaa
ljmp
sbb
stos
repz
fidivrs
test
daa
ret
cmp
push
lds
jmp
xchg
lret
inc
pusha
out
cmp
leave
fcmove
sub
fildll
repnz
xor
cmp
insb
push
or
jns
jo
and
scas
cli
nop
jg
daa
test
jmp
jle
ret
push
mov
inc
sub
sub
mov
jmp
dec
daa
pusha
mov
adc
sub
lds
pop
insl
sub
sub
xor
cmp
fnstcw
in
xchg
xor
cmpsb
or
mov
jmp
mov
sub
xor
cmp
int3
ljmp
inc
das
imul
or
and
jmp
cmpsb
cmp
lahf
jmp
mov
loope
jmp
popf
pop
stos
imul
lea
sub
mov
in
xor
inc
jg
sti
jmp
sub
clc
jnp
in
test
and
test
pop
sub
cmpsb
pop
push
ret
jmp
dec
incl
inc
push
push
push
sub
jmp
mov
ja
in
xchg
adc
movsl
inc
xchg
jmp
push
bnd
mov
ss
inc
xchg
daa
cmp
std
fidivrs
xchg
push
or
icebp
sub
or
sti
pop
xchg
movsl
out
int
inc
jmp
inc
xchg
jns
mov
ret
or
mov
and
mov
out
rcll
sti
adc
jmp
cmp
jnp
mov
sub
pop
inc
mov
pushf
jmp
lret
popa
hlt
dec
mov
push
int3
dec
xor
sbb
sahf
jmp
or
lods
test
or
mov
lods
adc
adc
in
xchg
divl
jbe
ret
stc
cmp
jmp
sbb
jle
or
ss
sub
xchg
aas
jecxz,pt
lret
pop
sub
jmp
push
test
adc
add
rcll
pop
add
icebp
cmc
cli
and
mov
and
jmp
lock
adc
xchg
or
add
sbb
mov
ret
add
dec
xor
loopne
out
jl
in
jmp
add
sahf
lods
and
ja
sti
dec
push
cmp
and
xor
dec
jne
mov
repnz
pushf
or
mov
iret
push
add
pusha
test
lods
sbb
loopne
xchg
or
push
in
je
xchg
int3
jmp
test
jo
mov
jmp
stc
inc
outsb
out
add
dec
mov
fdivl
jmp
pop
xor
pop
jmp
lret
es
jmp
sbb
xor
scas
mov
cmp
rol
jmp
das
lahf
push
push
in
and
lret
pop
jmp
outsb
inc
out
pop
hlt
sbb
mov
jnp
xchg
ds
jle
mov
mov
int3
fs
mov
cmpsb
shr
jno
flds
out
mov
ret
dec
ja
aaa
ret
jmp
mov
or
inc
mov
jmp
movsl
push
lods
xchg
pop
in
mov
imul
daa
fnstsw
out
sbb
test
pop
mov
test
jmp
jns
insl
sub
xchg
sbb
stc
xchg
xchg
xchg
pusha
push
jmp
arpl
ds
or
pushf
mov
mov
xchg
mov
jmp
nop
sahf
aad
mov
out
je
push
leave
jmp
test
mov
in
jmp
mov
xchg
xchg
lods
mov
pop
shll
xor
je
lahf
push
jmp
leave
cmpsl
shll
jo
mov
push
cs
jmp
insl
fmuls
loopne
inc
sub
ror
je
xchg
mov
call
cmp
adc
fsubr
inc
jo
xrelease
add
shr
pop
inc
jbe
sub
mov
imul
scas
pop
push
add
stc
dec
loopne
fisttps
xor
and
pop
aad
das
mov
push
repnz
add
sti
pop
arpl
xor
or
and
jb
cmpsl
jmp
push
imul
mov
aas
sub
push
sbb
lahf
add
sub
pop
imull
push
pop
jmp
adc
mov
push
pop
adc
jmp
jge
loope
xor
ss
es
stos
jmp
out
mov
out
vpcmpuq
sbb
or
push
sub
arpl
outsb
gs
clc
jne
mov
stos
add
sub
sbb
pop
pop
cmc
js
aas
por
jge
icebp
mov
jmp
daa
cwtl
movsl
add
lret
lods
call
and
movl
stc
sti
mov
js
lea
push
imul
jg
ja
sbb
sub
or
jae
scas
dec
cs
push
mov
cwtl
outsb
mov
jae
mov
or
push
push
std
rcll
or
sbb
mov
test
and
jmp
mov
cmp
jmp
sarl
pusha
lods
mov
push
jmp
fcoms
or
xchg
loopne
push
add
pop
dec
sub
out
or
xchg
sub
jmp
divb
sbb
xchg
fs
lret
fadd
mov
test
hlt
leave
das
mov
mov
xchg
jge
fsubr
int3
in
mov
imul
sbb
lahf
jbe
sbb
pushf
adc
in
jnp
add
adc
lds
lcall
xor
sub
or
push
jne
fildll
cmp
sahf
push
js
pusha
mov
sbb
push
jmp
aad
cmp
sbb
leave
jp
imulb
enter
xor
inc
cmp
pushf
shlb
fsubrs
sub
mov
jmp
je
ret
mov
popa
mov
inc
stos
jge
pop
jmp
into
mov
mov
xchg
int3
rorb
adc
pop
cmpsl
or
xorl
sub
jno
and
fisubs
cli
add
test
iret
jns
push
outsl
aas
adc
outsl
and
inc
fs
lods
test
icebp
mov
fists
jne
or
cmp
outsl
subl
jmp
sar
mov
mov
sbb
pop
mov
pop
push
or
sub
jecxz
jmp
jno
dec
inc
call
sbb
stos
push
sub
jmp
in
push
or
mov
push
pop
add
jo
imulb
aas
enter
xchg
popf
outsb
pop
pusha
or
hlt
pop
jmp
pop
push
sbb
adc
lcall
cwtl
jmp
jmp
out
mov
int
mov
sub
push
sbb
insb
xor
mov
xchg
out
inc
dec
sub
jl
adc
xchg
sbb
hlt
sbb
and
adc
push
cmpsb
and
push
scas
ljmp
ffree
out
mov
cltd
pop
outsl
hlt
popa
mov
pop
fwait
sahf
jmp
inc
int3
pop
lret
cmpsb
clc
adc
sbb
insl
lock
dec
loope
adc
mov
inc
jb
pop
sub
jmp
mov
in
jmp
sbb
push
into
jmp
ret
lock
inc
aaa
dec
or
insb
sti
xor
lods
jmp
daa
sub
xchg
fisubs
shr
movsl
push
mov
mov
sarl
lock
frstor
jmp
and
sub
iret
jbe
aad
pop
lret
lods
bound
mov
frstor
push
dec
mov
fcompl
adc
lock
mov
lcall
mov
jns
xchg
sbb
push
push
pop
sbb
inc
jge
lahf
mov
mov
or
test
ret
fs
fstl
subb
das
dec
pop
shll
jmp
call
ljmp
aam
fnstsw
push
jbe
and
lahf
outsl
hlt
sbb
lods
jl
loopne
test
mov
or
xchg
add
lods
cmp
aam
push
push
mov
lods
inc
add
mov
xchg
aam
mov
xlat
leave
imul
pop
cwtl
adc
mov
jmp
mov
mov
mov
lea
jmp
js
push
insl
jmp
cmp
and
out
mov
inc
out
sti
hlt
xor
jae
cmc
dec
inc
fldcw
jmp
outsl
dec
cli
popf
jmp
cmpsb
mov
jmp
push
sub
jmp
mov
xchg
jmp
std
inc
jno
shlb
jmp
xor
pop
les
mov
add
jg
jmp
aas
subl
fcoml
jae
cmp
push
js
lret
xor
fcoms
imul
mov
js
push
add
insb
rol
nop
xchg
movsl
clc
jmp
fstpl
lcall
jp
jmp
iret
inc
repnz
pop
jmp
mov
ja
jmp
xlat
xor
inc
sar
ret
jmp
fdivrl
and
mov
jmp
inc
dec
imul
jmp
lds
enter
jnp
dec
imulb
cwtl
das
into
sbb
stc
cli
push
enter
and
pop
jno
cmpsl
roll
push
iret
stc
loope
jp
or
or
sbb
cmp
pop
in
sbb
jmp
scas
mov
test
sbb
mov
or
add
sti
repz
push
inc
sbb
dec
xor
jne
movsl
push
pop
insb
jmp
psrlw
jbe
mov
cli
push
call
mov
cmp
xor
and
jmp
bound
sub
dec
or
imul
jmp
adc
call
jmp
mov
xchg
addr16
es
das
or
cmp
pop
in
divb
jmp
hlt
fisubl
jmp
aam
jns
add
aad
jmp
ja
pusha
xchg
jmp
jge
dec
xor
mov
call
sti
jmp
lret
fsubrl
xor
mov
add
or
or
int
jmp
out
subb
scas
iret
lods
mov
push
xchg
push
adc
mov
dec
jmp
sbb
mov
pop
hlt
cmp
cmp
inc
push
pop
mov
pop
lods
cmpsl
aam
inc
sub
adc
mov
pop
cmp
cmpsl
repnz
pop
fstpl
or
mov
jmp
incb
pop
jge
sub
aam
ficoms
out
mov
loope
subl
cli
mov
scas
and
out
or
mov
imul
hlt
push
adc
pop
je
xor
scas
adc
mov
arpl
bound
jp
imulb
lea
inc
or
inc
xor
cmp
sti
lods
push
cwtl
push
daa
xlat
adc
lahf
adc
and
mov
pop
mov
jmp
ss
sub
add
sub
push
jno
fwait
cld
sbb
dec
mov
loope
or
xor
and
dec
test
jmp
stos
out
cmp
jmp
mov
jno
jmp
lahf
xor
push
out
je
or
mov
stos
dec
fistps
leave
jo
mov
xor
lret
outsb
pusha
sbb
or
adc
mov
jb,pt
lds
aad
cwtl
out
mov
xchg
inc
bound
repnz
jbe
popf
shr
and
xchg
sub
insl
lods
adc
enter
mov
or
and
mov
xchg
cmp
getsec
fstl
subb
sarb
lea
sbb
es
notb
pop
rep
mov
pop
push
enterw
or
add
jmp
sarl
jmp
lret
push
fmull
xchg
jmp
push
rclb
sbb
jge,pn
sub
sbb
je
fldt
in
cmpsb
jmp
pop
sti
adc
xchg
push
outsb
pop
xor
jmp
in
roll
sub
sub
mov
jmp
repnz
movsb
lcall
and
in
aad
test
aam
aas
sbb
mov
in
push
adc
inc
mov
jmp
xchg
popa
pop
inc
dec
mov
ret
or
sti
std
sbb
inc
sub
nop
pop
sbb
sub
xor
adc
fxch
mov
mov
inc
repz
jmp
jle
push
jae
sub
subl
or
aad
sbb
jmp
out
inc
cmpsl
stos
adc
rcrl
mov
test
lods
mov
push
mov
int3
loope
and
mov
fwait
adc
jmp
jo
icebp
movb
pop
sbb
in
pop
xchg
xor
sbb
add
mov
add
in
fldpi
aaa
fwait
add
xor
inc
inc
jmp
pusha
lcall
dec
sbb
cmpsl
hlt
stc
jecxz
jmp
cmp
lahf
movsl
xchg
out
cmp
sti
sbb
dec
push
dec
pop
jg
shrl
movsl
mov
and
jecxz
popf
ret
jle
aam
fnstsw
jns
lods
push
aaa
pop
mov
or
mov
fisubl
sub
jl
push
add
push
pop
push
jmp
lea
mov
stos
sub
jecxz
orb
testl
pop
add
mov
push
sbb
jl
push
pusha
push
mov
and
cld
push
call
dec
inc
cmp
in
pop
cltd
bnd
lods
sbb
imul
pop
cmp
dec
mov
ud0
adc
mov
push
lods
addb
cld
inc
aam
mov
shrb
add
inc
aad
push
in
sub
stos
repz
jmp
data16
ret
xchg
dec
stc
jmp
je
int
lods
push
dec
jmp
pop
arpl
test
in
imul
dec
cli
jge
add
pop
cs
push
dec
xor
push
dec
int3
jae
or
in
jbe
jl
cmp
and
mov
and
insl
inc
loopne
imul
inc
cmpsb
xlat
cmpsb
cmp
jbe
xor
mov
loopne
or
lods
xor
test
jp
pop
or
mov
lods
push
clc
in
jge
sub
cmp
pop
or
outsl
pop
or
ret
scas
mov
sti
push
adc
mov
pop
idiv
stos
sbb
leave
xor
cmp
ss
ljmp
cmp
sub
or
andb
popa
jno
push
mov
arpl
jmp
inc
push
cs
xor
jmp
cli
or
das
mov
outsl
sbbb
or
xor
jmp
xor
repnz
sub
fisttpl
or
sub
sti
jb
sbb
cmp
cmp
push
or
outsl
mov
sti
dec
ret
jmp
push
js
xchg
mov
sub
test
das
and
mov
add
mov
push
ret
pop
repz
jmp
dec
sub
mov
ret
and
aas
cmp
inc
pop
iret
xchg
cmpsb
pop
mov
add
mov
jmp
bnd
pushf
outsl
push
dec
sbb
fsubl
jmp
mov
lcall
cmp
mov
push
mov
inc
mov
cli
aas
and
jo
iret
ja
pop
movsl
jle
mov
std
jl
outsl
in
adcl
loope
mov
jmp
rolb
cmp
jp
sahf
repnz
add
mov
adc
and
lret
mov
pushf
mov
push
fldpi
shl
stos
mov
sub
scas
inc
cli
push
testl
enter
lock
mov
repnz
jmp
jo
lods
cltd
cmp
fldcw
mov
ljmp
xchg
sub
cli
jmp
or
pushf
dec
scas
popf
push
outsl
jmp
lock
jmp
sub
mov
cmpsl
push
jmp
mov
movsb
shl
imulb
xor
scas
test
mov
stos
lods
add
adc
clc
lods
vcvtdq2pd
inc
punpckhwd
aas
jne
jno
sbb
lret
mov
sub
xor
test
ja
push
imul
out
call
and
mov
jae
es
daa
mov
push
jmp
dec
adc
jmp
movsb
jns
pop
cmpsl
jmp
mov
mov
pop
jl
pusha
jmp
rcr
and
ret
jmp
pop
in
pop
es
sub
xor
arpl
lds
jns
inc
jmp
or
inc
stos
psrld
sub
mov
or
pop
lds
jmp
add
rcrb
movsl
fldpi
movsb
mov
mov
or
stc
jp
ss
andb
or
mov
add
push
cmp
pushf
sub
mov
adc
sub
jmp
mov
push
lret
fsubr
mov
adc
insb
mov
repnz
mov
mov
dec
in
jge
jmp
lcall
jo
in
push
leave
aam
std
nop
inc
stos
popa
fstpt
shrl
pop
cmp
pop
jle
cwtl
pop
ljmp
inc
mov
jecxz
js
sbb
xor
out
cld
cmp
mov
fiadds
mov
jb
aas
mov
push
cld
or
sub
sbb
mov
shlb
jmp
pop
jmp
fsubrs
loope
or
push
xchg
pop
mov
in
jmp
std
and
clc
insl
sbb
je
rclb
jge
mov
cmp
mov
xor
dec
clc
xchg
jmp
mov
push
push
std
adcl
cmp
idivb
xchg
shrb
or
outsb
lahf
arpl
add
ror
scas
xor
sbb
mov
cltd
daa
lods
jge
loopne
lret
cmp
mov
test
and
and
mov
incb
jmp
push
leave
popa
out
sbb
push
cs
mov
loop
xor
dec
in
repnz
test
mov
icebp
outsl
sbb
jmp
and
cmp
lret
jmp
xchg
lock
jge
decl
loopne
scas
std
cmp
sub
ljmp
gs
lods
dec
cmp
inc
imul
mov
sbb
hlt
daa
jnp
orl
cmc
mov
test
adc
sub
sbb
aaa
call
xchg
push
sar
imul
lods
mov
loope
jmp
xchg
std
gs
xor
jl
sarb
cwtl
jmp
mov
fwait
mov
cmpsl
in
dec
and
stos
test
lea
fists
adcb
enter
psubsw
jmp
dec
add
jae
pop
xchg
rorb
or
push
xchg
mov
jmp
test
in
fmull
stos
jmp
ss
out
fistps
rorl
dec
adc
nop
and
xor
jmp
sbb
out
or
jmp
rep
icebp
flds
jge
hlt
xor
cltd
cmp
dec
add
cmp
dec
jmp
int3
and
loopne
movsl
std
jmp
add
int
inc
mov
lods
jns
test
in
lea
fsts
add
add
leave
test
push
adc
ds
add
xchg
fwait
jne
mov
repz
lods
or
in
loop
xchg
cmp
jecxz
sub
aas
ljmp
jmp
rclb
jmp
test
pop
dec
jp
stos
jmp
popl
pop
mov
in
mov
je
mov
or
imul
aam
pop
add
in
xor
rcll
mov
add
cmp
pushf
or
arpl
les
push
or
pushf
outsb
je
hlt
subl
push
bnd
pop
rorb
add
into
jns
outsb
mov
insl
or
std
jmp
push
sarl
xchg
inc
imul
adc
sbb
ret
into
out
push
dec
jnp
mov
push
inc
xchg
rcrl
orb
jmp
push
jo
jge
mov
jmp
js
rclb
and
fwait
test
arpl
xchg
and
js
jmp
mov
adc
mov
cli
jmp
aad
push
aas
nop
mov
test
mov
push
out
jmp
mov
cmp
shlb
adc
imul
jp
int3
inc
inc
jmp
xchg
pop
sub
jne
ljmp
dec
jmp
scas
icebp
je
andl
cs
fwait
movsl
push
xchg
jmp
pop
jecxz
arpl
and
cld
xor
pop
leave
fucomi
iret
jmp
popa
icebp
push
cmpsl
jl
adc
outsl
pop
sbb
jmp
in
insb
out
or
mov
push
sbb
lahf
test
push
cs
mov
mov
es
jmp
pushl
aas
mov
push
jmp
or
push
xor
cmpsw
mov
or
sub
call
ret
lret
jnp
mov
cmc
push
xchg
pop
les
jmp
mov
dec
mov
xor
jno
mov
fdivs
mov
inc
sub
jmp
lods
dec
sub
cmpsb
fmull
jmp
repz
xchg
fs
mov
lods
inc
jmp
insb
fbstp
or
add
ret
jmp
jge
push
mov
sbb
mov
xor
and
lods
dec
je
mov
decb
or
jmp
lret
pop
and
sbb
pop
dec
jmp
test
decl
push
ret
adc
lods
pop
sahf
push
enter
sbb
jle
ret
xor
push
jne
sar
cmp
mov
jmp
jbe
call
jmp
or
test
or
pop
mov
pop
test
repnz
or
xor
or
shll
or
add
pusha
add
cltd
xlat
gs
add
stc
popf
cld
inc
sub
jmp
pop
cmpsl
jnp
mov
adc
test
lods
into
in
jmp
push
mov
jmp
aas
inc
icebp
jl
mov
sbb
pop
aad
jmp
cmpsb
pop
aam
push
xchg
push
scas
cmp
or
lods
pop
enter
mov
mov
lods
mov
loopne
shll
lret
jecxz
clc
dec
sub
enter
ds
test
sbb
lods
mov
xchg
jmp
out
mov
scas
xchg
jmp
out
mov
out
jmp
push
sbbl
jmp
dec
aaa
add
mov
mov
mov
mov
fidivrl
inc
nop
scas
sbb
push
xchg
jmp
jg
and
hlt
jge
mov
cltd
jns
nop
or
or
les
loope
mov
popw
jne
cmp
outsl
push
int3
movsb
jmp
push
xchg
cld
outsb
mov
dec
jmp
inc
ss
in
inc
fsub
jmp
ret
inc
insl
mov
add
mov
jmp
mov
das
repz
into
lods
sbb
or
jae
sbb
cli
movsb
sub
inc
in
jmp
stos
addl
cwtl
add
mov
imul
loop
stos
jmp
mov
mov
fs
and
jmp
mov
dec
push
je
adc
out
iret
pop
iret
adc
ljmp
mov
mov
pusha
jmp
fiaddl
stos
pop
cs
jmp
mov
pop
lret
pop
out
pushf
jno
ljmp
mov
bound
xor
push
shrb
cmp
cmp
aas
lock
and
mov
or
push
dec
or
push
aas
jmp
daa
push
dec
adcb
jmp
enter
ja
cmpsb
jmp
js
stos
sub
sub
sub
xor
or
pusha
mov
adc
stc
fwait
mov
mov
je
adc
push
adc
daa
pusha
lods
loopne
cmp
out
test
cmp
xchg
bswap
add
pop
imul
xchg
test
sbb
pop
jmp
jecxz
stos
or
faddl
add
pop
xchg
push
jmp
lcall
sub
repnz
sub
jge
or
inc
add
cmp
in
xchg
pop
ss
aam
or
mov
lret
repnz
xchg
repnz
outsl
cwtl
mov
xchg
xor
pop
push
dec
and
dec
in
jmp
inc
xor
shrb
imul
out
dec
arpl
ja
jno
fwait
mov
lret
mov
mov
lock
stc
xor
or
ret
aas
icebp
and
lods
cltd
mov
jbe
pop
insb
stos
mov
adc
movsb
jle
aas
jg
add
jmp
push
pop
shlb
jge
jmp
sub
lret
movsl
pusha
jmp
loopne
pop
test
sarb
cmp
hlt
jnp
imul
mov
imul
aad
fstpl
sahf
ja
add
and
mov
fcoml
jmp
sub
dec
pop
jmp
mov
adc
in
aaa
sub
add
jmp
data16
fistl
xor
jmp
adc
mov
daa
xchg
sahf
and
loop
les
xor
add
jmp
test
sar
nop
mov
out
cmpsl
jmp
xchg
clc
jmp
xchg
mov
cld
cmpsb
sahf
mov
std
call
jmp
sti
mov
lods
xchg
sbb
loopne
into
jmp
jb
xchg
fcmovnbe
cs
xchg
shlb
jmp
jae
popf
mov
insb
cmpsl
jmp
rolb
out
das
mov
jne
jb
sbb
sub
pop
push
and
leavew
mov
sub
mov
jmp
sbbb
and
jmp
test
adc
mov
out
aam
test
mov
rcrl
scas
into
lods
sub
arpl
adc
pushf
out
js
and
pop
adcb
sbb
mov
mov
xchg
jmp
enter
lods
mov
mov
lock
cmp
je
stc
rclb
sub
dec
adc
dec
scas
jmp
cmp
push
or
mov
outsb
das
movsb
jmp
mov
sub
es
jmp
aam
mov
mov
cld
call
cs
jmp
xchg
icebp
rol
aad
test
sbb
sti
push
rcrb
mov
push
lea
lret
fcom
ret
repnz
pop
pop
sti
mov
push
mov
mov
jmp
je
dec
das
cmpsl
add
jmp
mov
fisubs
notl
jmp
data16
lret
xchg
lods
out
mov
loope
fldenv
jmp
notb
jmp
push
sbb
lods
cwtl
inc
stc
lock
adc
jmp
xchg
sti
pop
xor
subl
inc
pop
mov
inc
int
mov
mov
inc
sub
or
jo
mov
sub
fisttps
inc
xor
sbb
hlt
stos
push
and
fldt
incb
cmp
or
shll
push
jp
pushf
xchg
push
sub
push
loopne
or
jmp
mov
lock
lods
in
cmp
aad
das
jo
fs
lods
fsubr
or
xlat
popa
dec
mov
push
shlb
lret
daa
lods
sub
addr16
sbb
das
pop
mov
jb
cmp
cmpsb
shll
jmp
push
std
frstor
or
outsb
pop
add
repnz
divb
jmp
dec
loopne
lods
es
push
xlat
push
jb
test
mov
lcall
cli
add
ret
sub
popa
mov
inc
stc
sub
and
inc
jmp
mov
xchg
ret
sub
mov
xchg
mov
nop
add
stos
dec
mov
jmp
test
fs
aaa
bound
jmp
out
inc
jo
lret
sub
sub
ds
call
imul
pop
jmp
inc
jle
mov
dec
or
mov
pop
lods
lods
loope
sahf
insl
notl
sub
scas
xor
aas
ret
fistps
add
sub
stc
cmp
ljmp
pop
mov
cmp
mov
xor
lcall
enter
push
xchg
out
popa
sub
mov
xchg
mov
and
jmp
mov
in
jnp
push
and
mov
jl
enter
por
xchg
push
cli
and
sub
mov
loope
and
add
add
dec
and
dec
inc
or
daa
jmp
inc
jno
mov
stos
mov
add
sub
fldt
mov
jmp
out
je
test
push
mov
or
insb
mov
lea
fldt
sub
das
mov
and
ja
pop
stos
pushf
cmp
call
push
pop
jmp
adc
mov
pop
sahf
inc
inc
pushf
sbb
movsb
outsl
push
jl
push
jmp
jecxz
sub
fcmovbe
add
loopne
mov
sbb
out
jmp
sbb
les
cmp
dec
mov
andl
add
nop
or
adc
pop
ffreep
jo
and
jmp
movsb
inc
mov
jmp
add
ret
lcall
popa
jge
out
xchg
jmp
aam
mov
push
addr16
lods
aaa
pop
mov
std
out
or
mov
cmc
inc
or
ja
enter
pop
rorb
jbe
sbb
sub
cmp
icebp
add
mov
cmp
or
xor
jns
sub
push
aas
lcall
and
jmp
or
mov
ret
mov
adc
ljmp
jecxz
push
and
test
mov
jmp
cmp
lahf
push
jmp
dec
imul
sub
dec
out
cmpsl
sub
pop
fildll
ds
mov
xlat
fwait
std
cli
mov
inc
and
mov
loope
arpl
gs
out
adc
cmp
cmp
stos
mov
sti
jb
testl
push
out
in
pushl
sbb
je
sti
dec
scas
pop
in
insb
add
cmpsb
push
out
xchg
mov
or
xor
ljmp
or
and
les
xor
ror
ret
sub
cmp
insb
not
push
outsb
test
mov
lods
mov
or
xor
scas
mov
aam
repnz
rolb
pop
add
nop
mov
and
jmp
lret
mov
lods
sbb
into
adc
std
sbb
cmc
jmp
inc
push
jmp
and
mov
outsl
adc
pop
fcoms
sub
jbe
jmp
bound
inc
mov
mov
stc
pop
stc
jo
pusha
aad
pop
lods
lds
mov
cmc
cmpsb
arpl
mov
push
sbb
xor
sbb
mov
and
mov
xorb
insl
inc
jmp
jbe
or
shl
les
aad
jae
mov
jg
sti
movsl
lret
and
cld
jmp
pop
xchg
hlt
and
ja
cmc
cwtl
mov
addl
decb
jmp
add
test
cmp
or
fwait
dec
lret
jmp
mov
icebp
jle
pop
adc
andb
jmp
stos
add
loop
add
shr
lods
shr
add
push
xchg
push
sub
gs
xchg
mull
push
fidivl
lahf
adcl
test
loop
cld
roll
jmp
inc
ret
inc
sti
dec
mov
push
cmp
lods
xor
adc
pusha
add
insl
ljmp
enter
xor
out
outsl
dec
mov
stc
jmp
dec
sti
cmp
and
les
mov
mov
sub
cmp
out
jmp
sub
cli
jmp
xor
insb
xchg
mov
sub
int
push
lods
xchg
dec
sub
jmp
mov
jmp
pop
popf
sti
imul
push
loop
aaa
cltd
int3
adc
jp
lods
dec
out
sti
or
notl
cmp
xchg
je
jmp
mov
fiaddl
xchg
xlat
in
xchg
movswl
sbb
push
in
dec
lds
xchg
cltd
jmp
cmp
cli
adc
cmp
mov
jmp
cmpsl
sbb
int
jmp
lcall
es
sahf
scas
xor
popf
and
out
lock
in
push
mov
cs
sbb
lahf
fs
test
sti
add
pop
mov
movl
push
sbb
sub
in
sbb
jle
movsb
xchg
enter
mov
shll
jp
add
jmp
imul
cltd
jmp
je
push
cs
lcall
mov
enter
out
xchg
fnstcw
fsub
cmp
add
sbb
dec
call
cmc
in
repnz
cld
mov
dec
insb
mov
sbb
and
pop
pop
pop
shlb
adc
shrl
push
mov
mov
popa
sahf
dec
movsb
mov
push
mov
stos
or
xor
mov
bound
jmp
test
out
stos
fs
cs
push
adc
pop
mov
adc
lods
fnsave
repz
push
jmp
sub
ret
je
out
fucomip
mov
jmp
ljmp
or
cmc
jns
pop
jmp
cltd
iret
push
cmp
fsubr
add
push
fs
push
in
jmp
jns
cmp
fsubrl
orb
rcrb
jnp
cmpl
xor
cmp
insl
push
aas
movl
jmp
movsl
xchg
pop
mov
sahf
xor
push
cld
pop
pop
test
xchg
out
fimull
jmp
rcll
in
fnstenv
jmp
lock
sahf
lods
js
xchg
ja
push
hlt
jecxz
adc
xchg
lret
std
jmp
jns
push
push
imul
mov
add
das
jno
xor
shlb
and
jmp
sub
or
xchg
sbb
jmp
xchg
stos
pop
jmp
out
popf
adc
in
bound
into
add
dec
ja
mov
lret
or
sti
dec
add
sub
cmpsl
fisttpl
mov
jmp
sub
loop
mov
or
lcall
movsl
in
or
jmp
push
loope
jmp
sbb
push
cmc
dec
and
sub
push
mov
fisubrs
mov
sub
sub
and
scas
mov
test
inc
addr16
jmp
pop
leave
in
inc
arpl
out
repz
fisubrl
pop
mov
mov
sbb
sub
xlat
repnz
pop
jno
sub
dec
sbb
cmp
mov
lods
push
xor
stos
fimull
out
sub
repnz
lcall
mov
jmp
clc
cmc
or
pusha
mov
cmp
adc
and
pop
nop
mov
and
jb
jno
sbb
cwtl
loop
sbb
jmp
dec
xchg
and
and
dec
jmp
mov
mov
or
sub
and
xchg
fnstcw
rorb
xor
jmp
mov
rorl
movsl
addr16
inc
lock
sbb
imul
addr16
xlat
inc
in
int3
cmp
lods
popf
dec
out
push
mov
outsb
movsl
loopne
and
and
les
cmp
xor
xor
adc
jae
test
push
jmp
cwtl
lds
jg
sub
sahf
mov
adc
mov
jp
jmp
push
and
out
push
jmp
jle
and
adc
jmp
and
loopne
sub
sub
mov
stc
mov
pop
jge
push
in
mov
mov
push
jmp
jmp
push
adc
pushf
popf
in
jb
fsubrs
mov
outsb
push
adc
mov
sub
in
faddl
mov
jmp
push
jecxz
popf
outsb
pop
js
push
push
mov
push
push
add
sub
add
and
inc
mov
mov
sbb
or
out
and
mul
and
jmp
aam
xor
jne
jns
pop
push
and
bnd
fldenv
sti
les
or
dec
mov
push
sub
sbb
jmp
lcall
outsb
cmpsb
call
push
push
das
jmp
aaa
arpl
and
rcrl
and
jg
add
mov
shll
int3
pop
mov
mov
xor
jg
pushf
push
sub
push
sbb
gs
sub
add
jle
movsb
jmp
das
insl
pop
xlat
shlb
jmp
or
mov
jmp
xor
sarl
pop
por
xchg
sub
stos
mov
fsubl
lods
add
jmp
test
jns
dec
mov
xchg
jmp
push
inc
hlt
movb
jmp
pop
mov
lcall
lock
cmovae
ss
jbe
add
jmp
test
fmuls
sub
mov
ret
inc
xor
push
daa
ljmp
stc
mov
jns
pushf
jmp
dec
pop
in
and
cmpsb
lret
fistpl
push
mov
rcrb
cwtl
lods
js
xchg
test
xor
cmc
je
add
inc
cli
jo
jmp
mov
mov
js
cmpsl
mov
ror
mov
hlt
arpl
inc
jmp
xchg
lea
jmp
out
fwait
mov
lods
xlat
mov
dec
jns
adc
lods
mov
add
cli
adc
push
into
jp
xchg
cvtdq2ps
push
sbb
jmp
push
inc
ja
pop
ficompl
out
sub
jno
bound
shrl
aas
dec
xor
jg
or
outsb
or
push
jmp
je
xchg
mov
imul
in
stc
lods
aam
pop
dec
xlat
jmp
add
jnp
jo
lahf
jmp
jp
jle
xchg
add
xlat
adc
jns
inc
mov
lods
push
jmp
mov
inc
in
xlat
adc
cmpsb
mov
jmp
out
call
or
jmp
push
sub
mov
push
imul
mov
in
jge
lods
sahf
dec
or
inc
out
inc
mov
outsb
jmp
pop
iret
dec
sti
mov
sub
xchg
pop
mov
and
in
repnz
sbb
xor
mov
in
loope
lret
enter
inc
pushf
cltd
pop
es
movl
add
and
imull
idivl
mov
ret
pop
lds
mov
repnz
xorl
fucomi
adc
add
jmp
in
sarb
test
push
out
mov
adc
jmp
clc
sub
arpl
pop
sub
lcall
sbb
add
jns
pop
ja
scas
imul
js
test
andb
xorl
pop
inc
int3
out
cmp
in
out
push
iret
jmp
test
popf
xchg
je
repnz
out
nop
jmp
scas
push
sbbl
repnz
jmp
lods
jge
mov
aam
shll
cmp
lcall
jnp
imul
jno
cs
xchg
jmp
test
xchg
enter
or
cmp
add
into
leave
push
or
pop
jmp
adc
jg
xor
cmp
adc
loop
addl
daa
in
push
sbbb
jbe
mulb
or
or
xchg
daa
test
ja
pop
mov
pop
fisttpl
adc
sbbl
jmp
mov
push
sub
add
push
popf
mov
jmp
test
mov
les
adc
out
ljmp
es
jmp
pop
test
sbb
jge
xchg
flds
shlb
frstor
pop
outsl
inc
mov
jmp
inc
cmp
xchg
cmp
mov
cltd
ss
inc
mov
jo
sbb
bound
mov
aaa
lods
std
push
push
xchg
daa
imul
mov
int
sar
negl
inc
adcb
or
push
mov
or
loopne
pop
mov
cltd
imul
mov
sub
mov
test
jns
xor
sbb
push
pusha
or
lods
inc
js
mov
pop
mov
or
pop
push
mov
mov
mov
or
es
loopne
dec
push
adc
aam
cmp
push
scas
sbb
and
jmp
imul
dec
test
out
mov
sub
imull
sti
add
sbb
jnp
adc
and
lods
call
add
imul
pmulhuw
lea
sti
push
js
mov
jae
jmp
jecxz
ljmp
add
shrl
mov
scas
pop
loopne
and
jmp
bound
shr
add
dec
pop
pop
repz
jns
jg
cltd
xchg
daa
sub
ret
sub
mov
les
lods
dec
daa
mov
xor
push
jmp
pop
xor
lds
mov
push
sbb
and
pop
pusha
andl
cli
test
lods
imul
fisubs
in
lcall
xchg
fistpll
loop
popa
in
xchg
jecxz
std
xlat
lods
xchg
cwtl
dec
testl
xor
icebp
rep
sbb
jo
fs
xchg
outsb
inc
mov
out
add
xor
xor
cmp
cmp
xor
sub
sbb
daa
cld
shlb
or
xchg
cmp
and
lea
imul
rcl
sti
sub
jecxz
jmp
fcompl
cmp
sub
pop
mov
jmp
cld
negl
pop
mov
inc
cmp
loopne
jae
hlt
xlat
into
sub
sub
jno
in
mov
insb
lds
push
sbbb
sub
jno
jp
mov
loope
jmp
lock
std
add
add
pop
xchg
mov
ss
dec
jmp
xchg
ret
sbb
imul
test
jmp
stos
mov
adc
jmp
jno
mov
imul
sti
mov
push
lahf
pop
clc
jl
mov
add
xchg
pop
in
sub
mov
and
out
rcrb
js
adc
leave
or
jge
xchg
dec
pop
jmp
sbb
adc
mov
hlt
enter
xchg
jmp
sbb
shll
pop
test
inc
pop
xchg
sbb
enter
jno
loope
into
lods
jmp
lcall
jmp
cmp
fsubr
jle
aas
popf
jl
cltd
in
jmp
adc
outsb
call
shr
mov
mov
popf
in
ret
orb
jae
adc
mov
test
inc
add
daa
fcompl
mov
inc
mov
push
jmp
jne
xchg
imul
out
push
into
mov
and
sbb
or
adc
lret
fsubrp
pop
jl
add
hlt
xchg
or
arpl
lock
fisubs
pushf
fwait
sub
fmuls
add
in
jne
jmp
inc
pop
pop
sub
dec
sub
jmp
xchg
out
jge
lods
lret
in
dec
popf
lcall
xor
test
push
int
xchg
jno
jl
repz
or
insl
lods
out
jmp
xor
add
outsl
iret
dec
lods
and
mov
fs
and
pushf
jmp
fwait
push
leave
xor
enter
sbb
in
lods
lods
lahf
or
mov
int
cmp
pusha
and
jecxz
jmp
in
sub
xor
cmpsb
iret
xchg
jp
stos
or
popf
jmp
in
ds
in
xchg
jmp
int3
ljmp
cmp
and
out
xor
sbb
cmc
lds
mov
add
mov
test
gs
jmp
loopne
in
xor
xor
lods
out
aam
popa
jecxz
and
sbb
cmpsb
cmc
stos
push
gs
dec
jl
std
fisubl
rclb
and
pop
lret
loop
pop
mov
add
and
pop
mov
hlt
jmp
in
mov
or
jp
add
stos
pop
jnp
gs
iret
mov
add
mov
incb
movsl
mov
addr16
outsl
rcrb
and
add
fsubrp
daa
mov
or
jb
scas
inc
hlt
add
lods
and
pop
imul
xlat
out
sub
int
in
mov
adc
jno
xchg
jge
dec
or
scas
mull
add
lods
mov
sbb
pop
jnp
inc
push
jmp
xchg
lahf
repnz
cmp
movsl
scas
dec
jmp
lds
arpl
mov
sub
and
hlt
push
or
xchg
lods
shll
mov
imull
push
pop
sub
stos
cmp
adc
imul
add
push
dec
jge
mov
adc
mov
pop
lea
dec
outsb
std
mov
xor
mov
add
sub
outsl
std
mov
jmp
pusha
popf
negl
int
mov
ret
imul
test
xchg
je
jmp
xlat
or
jmp
gs
jp
push
icebp
dec
imul
and
jmp
and
jmp
dec
xchg
or
jmp
fdivr
adcb
sub
jno
in
mov
repnz
stc
xor
jnp
push
call
jmp
sub
fucomi
xchg
daa
stos
pop
aam
das
arpl
rcrb
cltd
push
std
push
lods
pop
les
arpl
jecxz
ficomps
test
lcall
mov
out
call
mov
fnsave
push
cli
or
add
shr
outsl
ror
sbb
jge
iret
mov
pop
repnz
ret
clc
lods
lods
mov
mov
sahf
dec
sub
push
repnz
into
mov
test
jb
push
xchg
aaa
pop
mov
adc
cwtl
ret
push
lods
add
jecxz
inc
and
out
sub
or
push
adc
movsl
pop
add
stos
insb
repz
cmp
add
lret
inc
in
popa
mov
addl
mov
lods
jo
mov
shr
fnsetpm(287
fnstsw
jle
add
jp
pop
int
lea
sbb
inc
ret
xor
sub
sti
xchg
push
inc
pop
arpl
adc
xchg
in
int
xor
dec
pop
cmp
inc
xor
int3
loopne
cmpsl
int
lods
push
add
push
icebp
sbb
jne
jge
stc
jp
bound
or
pop
add
arpl
cmc
sbb
stc
adc
jmp
cmp
sub
out
sub
sub
mull
out
xchg
push
bound
pop
sub
cld
sbb
aam
leave
shl
adc
cmp
lds
lods
repz
mov
xorl
adc
jmp
lret
push
fs
jmp
fucomp
gs
push
andl
cmp
mov
pusha
lods
outsb
outsb
mov
arpl
xchg
movsb
xor
xlat
adc
sbb
jmp
or
fldenv
cmp
xchg
out
addr16
repz
mov
sub
mov
pusha
add
cltd
leave
mov
lahf
test
mov
jmp
jle
setp
dec
inc
mov
lods
shr
fwait
push
ja
xlat
jmp
lcall
scas
int
sbb
notl
pop
mov
mov
and
push
adc
lods
aam
or
jl
sub
xchg
cwtl
dec
sub
jmp
add
jmp
xlat
lock
fisubrs
inc
jbe
repz
jmp
add
cmp
jmp
xor
sub
jp
jmp
xchg
pusha
das
scas
jmp
lock
in
mov
adc
mov
xchg
cmc
xor
stc
ss
imul
and
push
jmp
arpl
add
sarb
fdiv
adc
adc
clc
or
sbb
imul
leave
aaa
lods
cmpb
push
dec
and
mov
and
jmp
lret
jp
roll
inc
icebp
sbbb
mov
mov
jmp
stos
dec
inc
xor
push
imul
jmp
cld
jge
jb
jp
cmc
sbb
jbe
mov
int
and
push
add
jae
fdivs
cmp
adc
dec
test
mov
jno
daa
xchg
loopne
lods
jl
xchg
pusha
call
shl
add
xorl
enter
sub
scas
into
cmc
sbb
jne
jmp
dec
lods
insb
test
mov
or
mov
jmp
clc
mov
or
sbb
dec
rolb
fnstenv
ret
out
enter
jmp
sbbb
adc
mov
movsl
in
jb
adc
outsb
pusha
es
and
adc
movsl
lahf
inc
mov
push
xchg
test
mov
adc
sbb
mull
mov
movsl
cmp
and
mov
bnd
cs
pop
or
xchg
rolb
les
xor
or
jmp
or
cld
jle
fists
insl
add
outsb
lcall
ds
cld
add
jge
jnp
push
jmp
movsl
and
int3
fisubrs
jmp
adc
push
pop
push
sub
pop
aad
fs
jmp
shll
add
jmp
push
push
xchg
mov
mov
dec
xor
arpl
sub
mov
in
stos
cmp
shr
icebp
pushf
insb
jno
cmpsb
iret
adc
fcmovbe
out
jl
cwtl
jmp
ss
fbstp
inc
adc
je
arpl
xchg
add
repnz
and
or
test
or
cmp
lods
scas
cmpsl
cld
or
lds
cmp
gs
loope
sub
aaa
push
push
jmp
pop
call
and
test
inc
imul
stc
or
notb
lods
sbb
shrb
lds
pop
mov
dec
jo
jle
out
lcall
jmp
out
clc
inc
xor
in
aas
fs
bound
adc
dec
lock
lods
xchg
push
gs
outsb
and
ret
mov
xchg
jne
mov
cmpsl
adc
mov
or
cmp
lahf
pop
lds
jl
stc
jb
out
sbb
or
movsb
or
lods
aad
int
fs
lret
inc
jmp
ret
cld
loope
stos
and
jmp
aaa
cmpsb
push
add
mov
mov
lock
fildl
test
or
bound
notl
movzbl
lcall
mov
dec
jp
cmp
cli
ficomps
aad
aaa
ljmp
cmpsb
in
lods
rclb
adc
leave
pcmpgtb
jecxz
call
cmp
jge
adc
cmc
roll
loop
nop
ds
mov
jmp
mov
xchg
jmp
sbb
xor
repz
jmp
int3
sub
inc
jmp
aas
jbe,pn
jle
addr16
scas
mov
dec
insl
xor
fldcw
mov
addr16
add
sbb
adc
push
jmp
or
adc
sub
jmp
adc
add
arpl
and
mov
test
popa
or
xchg
out
jo
das
test
or
int
jmp
lret
jge
jp
test
icebp
ds
sarb
lcall
pop
movsl
push
scas
sub
jmp
sahf
dec
push
sub
fcmovne
outsl
orb
out
xor
in
cltd
lods
jl
jo
cmc
pop
fimull
sub
inc
or
in
sub
push
sbb
cli
pop
aad
jo
stc
push
mov
adc
mov
xlat
dec
dec
sbb
add
xor
pushf
fcmove
mov
icebp
scas
push
cwtl
nop
cmp
sbb
xor
movsb
xchg
pop
sub
sub
mov
jmp
push
push
mov
mov
dec
sub
dec
lods
test
repnz
das
aad
fbstp
jb
xchg
jmp
loope
mov
lods
sub
jnp
test
or
mov
push
jmp
inc
aaa
ja
pop
or
cmp
addr16
ljmp
pop
cmc
outsl
xchg
jl
testl
mov
dec
jbe
call
lock
push
jae
mov
jmp
bound
fs
mov
sub
cmc
lcall
lret
mov
in
stos
addr16
cmpsl
sub
insl
mov
sub
sbb
sbb
aad
insl
rol
pop
pop
adc
or
sbb
and
and
mov
sahf
add
mov
addr16
iret
add
push
pop
push
adc
mov
in
jmp
sarl
push
inc
sub
xor
dec
cwtl
mov
pop
jecxz
and
andl
call
xchg
jns
mov
lods
add
and
popa
or
aam
lret
imul
fdiv
ret
clc
jmp
icebp
out
push
or
mov
add
sub
outsl
loope
stc
das
stc
je
cld
ffree
cmp
mov
daa
xchg
out
fdivr
test
mov
loope
jmp
mov
cmp
and
xchg
jmp
jbe
outsl
fsubrl
orl
jne
jmp
mov
fwait
lcall
fisubrl
fs
imulb
jge
adc
stos
sti
cmpsb
daa
pop
pop
addr16
pop
shr
or
sbb
dec
xlat
mov
push
loope
shrb
lods
sahf
test
xchg
std
xchg
imulb
xor
jmp
rolb
mov
int
insl
sahf
nop
jmp
shll
jb
mov
repnz
test
sbb
push
xchg
lea
dec
jmp
xlat
mov
rcll
jmp
and
out
mov
dec
call
out
insl
or
jmp
out
pop
jnp
lcall
inc
sub
lock
outsl
pop
loopne
sub
aam
dec
adc
mov
cmp
cmp
out
sbb
cwtl
lret
dec
xchg
lret
sbb
and
or
and
addr16
fwait
xor
jne
cmp
xor
adc
or
roll
int3
cmp
rorl
mov
xor
sbb
ja
mov
movsb
jns
adc
add
ds
dec
mov
sub
dec
sub
mov
xor
imul
mov
arpl
jmp
push
shl
lods
add
sub
test
rol
popf
movsb
mov
jmp
std
add
pop
jg
jl
add
cmp
fldpi
lcall
cmp
and
cld
cmp
out
sbb
arpl
sub
das
imul
xchg
inc
pop
fdivrl
dec
movsl
repz
fadds
stos
jmp
lds
cmp
push
cmp
sbb
jmp
xor
enter
jmp
cltd
and
dec
scas
lods
jmp
mov
dec
jmp
mov
xchg
and
jae
adc
ja
push
jmp
sub
popa
mov
stc
add
or
xor
filds
push
dec
jmp
cwtl
sbb
pop
cld
sub
jmp
sbb
pop
adc
and
and
push
test
push
jmp
cmp
mov
sbbb
xor
cmpl
or
xchg
lods
fnstenv
imul
pusha
xor
xchg
jnp
cli
aaa
imul
sbb
inc
push
iret
xor
cli
mov
repz
jmp
mov
ret
in
sub
add
sti
out
xchg
ja
lcall
int3
mov
cld
adc
cltd
dec
cmpl
ljmp
repnz
xor
fwait
loopne
xchg
mov
ffree
outsl
dec
sti
repnz
andl
mov
mull
or
incl
mov
cmpsl
push
xchg
jmp
xor
popf
inc
pushf
push
mov
sub
adc
jmp
lods
imul
jmp
lock
in
jg
adc
int
ds
sbb
and
mov
jecxz
adc
mov
into
imulb
loopne
fwait
hlt
and
rorb
cmc
pop
js
and
cmp
sbb
xor
mov
jmp
push
push
mov
pop
cmp
fst
outsb
int3
lods
pop
xchg
int3
data16
sub
xor
push
jmp
push
sahf
sbb
scas
loope
jmp
lahf
inc
mov
xchg
mov
jmp
sbb
jmp
daa
mov
sub
mov
or
ficoml
xchg
jmp
roll
jmp
mov
subb
pop
xchg
sbb
mov
aam
mov
or
mov
jmp
pop
mov
insb
sbb
dec
imul
fdivl
sbb
adc
fucomp
dec
mov
dec
pop
cmpsl
popa
lods
sub
xor
mov
and
push
pushf
les
or
mov
jmp
sub
int3
pop
push
jmp
in
sbb
outsb
out
cli
lcall
mov
add
fstl
arpl
test
xchg
fisttps
sbb
std
lods
lods
xchg
fisubrl
jmp
or
test
mov
jmp
out
push
enter
cmp
mov
jmp
pop
dec
fwait
or
lock
sub
ficoml
in
inc
mov
jmp
mov
clc
orl
jecxz
adcl
std
sub
sub
loope
xchg
pop
xlat
and
cltd
jmp
pusha
lea
jmp
insl
inc
push
sbb
inc
mov
and
jne
mov
jmp
sti
fadds
push
pop
pushf
jmp
cmp
xlat
push
arpl
icebp
jmp
xchg
adc
ret
jge
jae
cmpsb
inc
stos
jmp
andb
add
dec
jmp
cmp
and
or
cmpsb
aam
add
jo
aaa
popa
and
cmpsl
dec
mov
pop
push
dec
mov
jmp
push
rolb
arpl
lret
sub
push
pushl
movsb
sub
mov
cmpb
sub
mov
inc
jnp
dec
pop
jmp
in
push
jmp
push
add
xchg
xchg
jmp
lea
jmp
movsl
xchg
cmp
ret
mov
mov
jmp
push
ja
ret
pop
iret
pop
aas
cmp
pushf
inc
andl
aad
xor
jnp
xor
jmp
stc
shl
frstor
jmp
pusha
inc
popa
add
jmp
ds
nop
lods
notb
dec
mov
inc
or
std
fimull
inc
sub
cmp
mov
jb
cld
xchg
sti
stos
out
cwtl
aam
bnd
sbb
mov
xlat
and
dec
daa
adc
and
scas
mov
push
pop
jmp
inc
in
cltd
js
push
es
and
dec
sub
ljmp
mov
mov
arpl
or
mov
and
jno
or
mov
jmp
adc
jmp
xchg
jno
js
daa
dec
lods
add
sub
adc
adc
test
push
or
jmp
daa
xchg
ss
loopne
jmp
lods
hlt
mov
imul
jle
cli
pop
sti
sub
decl
repnz
push
xchg
adc
jmp
ja
jno
push
xchg
cld
icebp
nop
pusha
std
push
dec
jmp
hlt
push
xchg
lcall
jb
in
fisttps
adc
mov
aad
mov
jg
mov
mov
divb
sub
in
cmp
dec
pop
lods
in
imul
xor
dec
lcall
bound
xchg
movsl
pop
mov
shlb
std
adc
scas
aaa
sbb
and
fcmovne
jnp
or
mov
imul
in
mov
cmp
sbb
sub
or
pop
sti
std
dec
add
popa
jecxz
pop
and
rolb
repnz
fs
out
xchg
ss
push
jmp
adc
pop
dec
xchg
scas
repnz
loope
jmp
mov
jne
lret
inc
jmp
sbbb
lods
xchg
shrb
sub
jnp
gs
cmp
add
scas
andl
pop
jmp
scas
aas
or
push
stos
lods
and
push
mov
jmp
jo
xor
sub
das
jmp
movsb
rclb
fwait
add
jmp
iret
hlt
push
loop
inc
adc
cmp
adc
jmp
or
jle
cmp
add
jmp
out
repz
sub
test
xchg
or
pop
jmp
jp,pn
inc
les
and
and
dec
jle
orb
imul
dec
xchg
pop
xchg
adc
aam
hlt
add
faddl
dec
and
sbb
sub
push
jg
mov
inc
xchg
loop
scas
jmp
ljmp
jmp
arpl
inc
mov
mov
cwtl
jmp
scas
push
jecxz
pushf
cmp
outsb
popf
adc
mov
mov
xchg
jne
jl
jbe
xor
pusha
sti
adc
cli
sub
and
insl
hlt
addr16
mov
pop
mov
lret
cli
jmp
ret
lret
stos
dec
movsl
adc
push
call
jmp
push
inc
mov
cmp
sub
xchg
stos
hlt
dec
lods
sub
int
adc
pop
adc
adc
cmc
stos
ret
push
jmp
sbb
add
repnz
imul
adc
hlt
sbb
or
jae
outsl
or
leave
add
inc
add
fs
dec
loop
jmp
rcll
scas
or
add
cmp
cmp
paddq
jmp
cmp
sti
and
jmp
in
inc
xchg
cmpsb
ds
adc
rcrb
jl
xor
or
insl
fsubrs
popf
jo
jmp
sub
scas
xchg
bnd
ficomps
or
addb
sub
sti
cld
test
pop
out
and
and
addr16
stc
js
enter
je
and
movsb
sub
jmp
stos
xchg
xor
jmp
mov
push
jmp
mov
stos
add
mov
out
hlt
cmp
jmp
push
outsl
adc
push
fisubrs
out
jno
jmp
push
mov
stc
adc
mov
or
das
jle
icebp
add
cmp
xchg
call
clc
mov
out
add
ret
les
repnz
es
cmpsl
iret
bound
arpl
popf
aas
sub
jl
jmp
xchg
lcall
clc
cmpsl
scas
cmp
add
inc
outsb
outsl
fcmovbe
sbb
cmpl
out
jmp
in
into
fucomp
rorl
mov
sub
les
scas
in
xchg
int
dec
jmp
mov
ds
jmp
imul
jnp
adc
jmp
push
sub
sbb
or
xchg
push
movsb
cld
jmp
ds
fs
lds
xor
in
movsb
lods
mov
adc
mov
and
scas
cmpsb
add
and
cli
xor
aaa
xchg
pop
stos
addr16
call
jmp
or
je
sbb
jmp
sbb
movsl
and
push
ffreep
and
push
cmp
sub
sti
es
clc
jb
jmp
push
outsb
cwtl
lret
and
loope
mov
sub
inc
dec
cs
enter
into
div
cwtl
mov
mov
out
adc
inc
inc
xor
xor
iret
jmp
sbb
arpl
push
jmp
jl
popa
xchg
mov
cmc
mov
xor
push
xchg
test
jb
jmp
mov
jae
jge
add
pop
xor
mov
sahf
adc
scas
decb
mov
mov
cld
inc
faddl
dec
test
push
pop
sbb
pop
mov
jae
call
bnd
fstpt
jmp
or
inc
int3
jmp
dec
test
xchg
cmp
inc
or
imul
pop
or
adc
bound
pusha
data16
or
mov
mov
jno
inc
lods
lock
push
inc
adc
negl
scas
push
cmc
lea
adc
jmp
stos
push
fdivl
lods
mov
mov
and
adcl
pop
jmp
andl
jmp
mov
in
ret
shrb
arpl
jnp
clc
sbb
push
les
js
push
inc
sbb
mov
mov
outsb
dec
add
mov
xchg
add
mov
filds
jmp
mov
out
adc
dec
mov
mov
lods
mov
dec
sbb
jmp
jge
addl
pop
xor
xor
clc
mov
jns
inc
movsb
cs
call
jmp
mov
jnp
push
push
ja
cld
repz
xchg
mov
dec
cmp
scas
jle
lcall
jp
push
in
jo
cmp
sbb
push
sub
pop
add
sub
repz
out
jmp
cmp
sarl
je
pop
mov
addr16
mulb
std
xorb
fistpll
data16
pop
mov
xchg
pop
and
sub
pop
dec
int
lock
sub
outsl
push
pop
sbb
xor
mov
loop
in
sub
cmp
or
int3
mov
int
jmp
push
cmpsb
gs
jno
push
sarb
jmp
loope
mov
jmp
lret
movsl
repz
jmp
dec
ljmp
outsl
push
pop
push
mov
adc
ljmp
sub
sub
nop
daa
pop
jmp
push
push
insb
sbb
aad
stc
xor
jmp
mov
jbe
cmp
and
xchg
adc
faddl
out
mov
and
lahf
jmp
xor
fucomip
cmp
lock
jp
daa
jmp
or
ret
cmp
fimull
jmp
xchg
ret
dec
mov
jmp
cmp
fsubl
inc
cmp
js
shlb
jmp
rcrb
lret
push
jmp
cli
fildll
mov
clc
gs
xor
cmp
sub
fwait
sti
fcomip
mov
sbb
jmp
xchg
fidivl
out
bound
jmp
repz
js
ret
adc
sub
inc
sbb
cmpsl
std
dec
test
sti
fldl
data16
mov
nop
sti
xor
int
jmp
mov
negl
in
cmp
cwtl
xor
fldpi
jbe
sbb
cs
jmp
ja
and
jmp
mov
shl
push
mov
cmp
cmp
and
sub
stos
cli
pop
and
ror
add
pop
push
xor
sub
jmp
es
out
sub
je
jmp
and
jbe
ds
dec
push
cmp
inc
andl
iret
sub
add
mov
sbb
shrl
add
or
mov
cmp
or
jnp
loopne
mov
cmpsb
xor
fwait
scas
or
push
jecxz
pop
shlb
jae
mov
sbb
out
xchg
int3
stos
jmp
mov
sub
ja
adc
pop
sub
nop
jmp
outsl
jle
out
cmpsb
jb
jmp
and
sbb
icebp
std
jne
jmp
xchg
mov
in
xchg
jmp
sub
cmp
repz
adc
cmp
jmp
add
xchg
add
inc
lcall
jg
sub
mov
sub
pop
pop
movsl
or
sbb
out
out
mov
aam
sub
push
sbb
lods
xor
test
pop
pop
mov
ficompl
add
clc
sti
ret
test
lods
loop
dec
jns
pop
jae
mov
jmp
xchg
stos
test
roll
mov
mov
sbb
jg
cltd
jno
stc
and
pop
mov
jb
add
adc
popa
ficoml
jmp
jecxz
cmp
adc
out
lcall
cmpsl
out
push
pop
mov
mov
aas
sbb
mov
inc
les
push
mov
sub
sub
sbb
mov
or
lods
sbb
sbb
push
sbb
call
sub
rorl
mov
mov
pop
jb
dec
mov
jg
dec
and
jmp
out
cltd
pusha
push
inc
jecxz
jmp
sbb
test
dec
lods
xchg
icebp
add
mov
xchg
xchg
inc
sbb
sub
scas
push
mov
adc
sub
into
les
mov
dec
test
jns
outsl
je
sbb
and
jmp
aad
ss
adc
push
cmpsl
hlt
mov
mov
in
and
inc
jmp
clc
mov
imul
adc
ficoml
mov
shr
xor
ficoms
les
mov
scas
dec
sti
mov
mov
jb
icebp
adc
popf
sub
movsl
xchg
sbb
aad
mov
filds
lahf
int
adc
ds
ja
and
pop
mov
mov
and
enter
ds
cmp
hlt
mov
jle
lods
mov
out
sbb
sbb
scas
pop
xchg
mov
or
jl
sbb
cmc
mov
int
sti
jmp
shr
loope
in
fisttpll
lods
pop
xchg
leave
fs
fiaddl
add
xor
mov
fcomps
cmp
mov
lods
in
xchg
hlt
mov
jl
inc
cwtl
sbb
xchg
jmp
mov
inc
gs
inc
jmp
add
xchg
xor
insb
jne
lea
pop
ret
test
cmp
sti
or
daa
mov
out
push
test
clc
test
sub
jnp
push
out
int
mov
jb
and
aas
sub
and
push
mov
jo
xchg
jmp
or
sbb
lods
xorl
sub
insl
sub
ror
or
out
aas
fidivrs
add
pop
or
push
fdivs
repnz
testl
add
ss
cmpsb
fnsave
dec
mov
or
xor
loop
mov
jmp
ret
mov
cwtl
push
cmp
jmp
outsb
data16
in
cltd
fucomp
ja
add
or
dec
and
mov
pop
adc
andb
cmp
mov
mov
jmp
jmp
test
jmp
lahf
sub
mov
int3
jmp
mov
adc
jb
mov
cmpsb
adc
sbb
shll
jp
hlt
jmp
mov
xchg
jmp
das
lcall
aas
in
mov
mov
jmp
xor
cmc
jge
xor
push
sti
mov
decb
jmp
pop
mov
jmp
in
cmp
in
ja
jmp
aad
mov
mov
adc
mov
jne
xchg
pop
dec
jmp
aaa
cmpps
xor
repnz
daa
sub
xchg
jmp
std
add
or
in
adc
aas
lods
daa
out
jmp
ret
adc
mov
outsb
repnz
xor
pop
out
je
add
jmp
stos
loopne
icebp
cmp
out
inc
and
imul
jmp
inc
pop
and
xor
xor
fimull
cmp
pop
adc
mov
scas
mov
or
dec
or
mov
cmp
lods
fs
sbb
add
nop
pushf
adc
outsl
loopne
jge
xor
cmp
jne
cli
sub
fistps
pop
jmp
lret
test
jmp
and
xchg
lret
int3
jmp
popa
paddb
sub
jne
jge
cmp
jmp
stos
test
mov
outsl
lods
inc
loop
lods
fcmovnb
and
cmpsl
sub
mov
into
add
cltd
repz
inc
aas
repnz
jecxz
hlt
cs
cmpsb
jmp
mov
xor
stc
xor
test
pushf
cwtl
sub
jmp
sbb
mov
inc
jmp
in
test
mov
adcb
add
jmp
xor
xchg
or
pop
daa
lods
popa
xor
mov
lret
jl
cmc
icebp
sbb
add
xchg
push
or
test
push
adc
stos
lahf
movsb
mov
jmp
cmp
pop
jmp
adc
push
jmp
adc
or
imul
jae
inc
in
adc
testb
jmp
movsb
push
push
loope
xchg
enter
outsb
jmp
xor
jmp
xor
lret
or
jo
mov
das
jb
dec
ljmp
jp
rcll
sub
mov
adc
mov
mov
enter
sub
imul
sub
adc
mov
dec
jecxz
pusha
ds
imul
dec
je
int3
mov
sub
xor
push
cmp
add
jmp
or
arpl
pop
nop
adc
icebp
add
push
lock
outsl
xor
sub
stc
jl
test
rcll
outsl
fiaddl
push
test
mov
push
out
test
sbb
aam
jle
imul
cmpsb
dec
addr16
jmp
xor
push
aas
ret
jo
jmp
daa
xchg
insl
add
lock
pop
pop
dec
movsl
sub
out
lods
cmpsb
psubusb
dec
or
mov
or
and
ja
stos
adcl
lock
sub
add
mov
sub
or
pop
pop
inc
cs
repnz
sbb
inc
push
sub
pop
enter
int3
sub
popa
jmp
push
jb
imul
rcrl
xor
sub
xchg
dec
ja
inc
mov
xchg
and
dec
lcall
xchg
ss
stos
and
adc
sbb
movsl
roll
fdivr
aas
lret
pop
mov
sbb
push
pop
jns
mov
ret
movsb
andl
jmp
add
jmp
dec
jp
ret
loope
lea
or
add
jl
out
mov
and
ret
ds
jae
jmp
insl
or
iret
jge
mov
xchg
pop
movsb
inc
pop
cwtl
shll
mov
mov
dec
jmp
mov
push
jnp
fldenv
in
xor
fistl
loop
test
in
mov
pop
std
cmpsb
xor
loop
add
pop
jge
jae
pop
mov
inc
push
out
jns
jmp
xlat
outsl
ret
ljmp
and
mov
fcmovbe
mov
pop
sbb
sub
into
jbe
outsb
jmp
mov
pop
mov
pop
xor
xor
sti
ret
cmpsl
jmp
jnp
mov
adcb
mov
adc
int3
andb
fwait
sahf
sbb
ljmp
fmull
push
lods
add
adc
add
shlb
lods
stos
push
and
mov
notl
loopne
jnp
fcomi
out
sbb
repnz
push
mov
mov
aad
lret
jmp
fnsave
shr
sahf
inc
mov
jmp
sbb
mov
jmp
mov
pop
std
pop
dec
jmp
or
cmp
cmp
sbb
pop
sbb
aas
in
jmp
pop
adc
jns
xchg
std
lods
and
pop
sarb
sub
lods
bound
cmp
xor
pop
adc
test
aam
icebp
jo
push
popf
sub
mov
cli
sub
jmp
lds
jecxz
mov
jae
jbe
fdivrs
jmp
pop
xor
adc
jne
cmp
mov
cmp
inc
popa
mov
jmp
cltd
sbb
mov
ret
inc
mov
data16
lods
mov
lds
xchg
xor
mov
and
in
jmp
mov
xchg
or
pop
movsb
dec
inc
loopne
or
xchg
push
cmpsl
cs
adc
jmp
sub
mov
and
inc
pop
xlat
sub
loope
das
scas
dec
roll
cmpsb
repz
cmp
sbb
cli
ds
outsb
inc
stc
mov
jmp
inc
adc
push
fidivs
dec
jmp
test
jmp
push
int3
lahf
adc
pop
ss
xlat
or
jle
loope
lods
add
scas
lcall
lods
sbb
xor
fs
pop
push
add
or
push
lea
push
pop
mov
sub
push
jmp
adc
mov
cmpsl
xchg
cltd
inc
pop
mov
fildl
push
movsl
pop
cmc
mov
add
sti
mov
std
mov
gs
lods
adc
imul
test
jmp
jmp
repz
sbb
inc
enter
inc
adc
dec
inc
adc
shr
inc
sub
sub
mov
inc
sub
rorb
push
out
xlat
jne
jge
add
popa
jmp
sub
ss
fldpi
clc
lret
test
rorl
cmpsl
stos
jg
xchg
outsl
push
jbe
adc
cmp
xchg
int3
sarb
sti
out
cmp
out
imul
jmp
mov
xor
jmp
fcoms
lret
mov
and
push
and
xor
subl
pop
clc
or
je
into
negl
push
rorb
repz
xchg
mov
jmp
sub
addr16
jmp
andb
fwait
adc
sub
movsl
lds
push
rcll
sahf
loopne
and
repz
outsb
sub
pusha
mov
popf
jmp
mov
jbe
mov
ret
fidivs
jmp
in
imul
pop
sbb
lret
sub
lcall
xor
jne
sar
dec
xchg
jmp
leave
scas
stos
mov
pusha
adc
inc
out
or
gs
cltd
inc
pop
sub
dec
or
inc
fwait
pandn
push
jmp
aad
or
or
pop
or
aam
add
mov
and
hlt
mov
shlb
jmp
lcall
outsb
lods
push
push
cmpsb
jmp
stos
push
pop
pop
jmp
jg
cmp
jl
mov
dec
push
xchg
pushf
hlt
dec
popa
out
jmp
std
pop
sbb
in
cmp
in
stos
or
push
jmp
iret
sbb
dec
stos
mov
dec
cli
xor
cs
push
dec
or
jg
add
lds
push
xchg
loop
adc
cli
and
mov
adc
aaa
and
outsb
sbb
jmp
adc
mov
stos
xor
aaa
or
fldl
rcll
ficoml
in
int3
push
popa
loopne
jae
lods
push
xchg
je
lahf
lods
push
addl
mov
push
cmp
jmp
push
jnp
and
dec
fdivl
cmp
mov
xchg
out
sub
jmp
leave
aas
mov
shrl
or
outsb
push
imull
jmp
inc
mov
sbb
mov
addr16
jmp
add
pop
fsubs
adc
xor
inc
dec
pushf
fs
push
jo
idivl
fadds
pusha
dec
scas
adc
hlt
lods
ljmp
sub
stos
inc
testl
fcmovbe
lds
push
sub
arpl
mov
sub
or
aas
push
jmp
cwtl
fisubl
rcl
jmp
pop
repnz
jo
and
fistps
cmpl
lock
int
mov
jne
jmp
add
add
jmp
nop
js
pop
xor
xor
sub
xor
test
scas
mov
mov
jmp
out
add
add
sub
stos
paddusb
sub
or
jmp
es
pop
jmp
add
inc
lods
pop
mov
ficoml
mov
dec
rcrl
and
sub
or
loopne
sbb
aam
jmp
and
aad
jmp
jb
movsl
push
divl
jbe
jle
mov
fwait
lock
mov
mov
pushf
mov
mov
xchg
add
lods
inc
divb
sbb
jmp
add
outsl
jmp
pop
push
and
cmp
mov
mov
sub
pusha
jmp
add
daa
fdivl
iret
shrl
push
lcall
jmp
bound
push
jae
sub
int
shll
mov
jmp
and
push
and
xor
mov
jmp
out
jmp
jmp
add
mov
pop
fstpt
inc
out
or
shl
jmp
int3
cmp
fsubrp
clc
push
repz
sbb
jmp
adc
dec
mov
out
sbb
dec
mov
pop
outsb
sub
and
mov
out
mov
jl
pop
and
add
and
dec
xor
dec
sub
les
shll
fcmove
std
loope
jmp
xor
inc
and
fwait
jmp
mov
mov
loopne
jne
iret
ja
mov
cmp
sahf
jmp
mov
outsl
mov
jmp
xchg
dec
jns
sarl
push
inc
testl
add
fdivrs
test
cmp
arpl
hlt
mov
addr16
xchg
out
xor
lods
lock
leave
adc
lret
repnz
mov
lods
jne
fdivrs
out
adc
in
lods
adc
daa
fstpt
push
fisubl
repz
jmp
cmp
mov
stos
shlb
inc
jmp
push
jg
push
sbb
jo
rolb
jb
push
enter
and
adc
mov
inc
nop
sbb
scas
outsb
fst
dec
mov
lret
sub
xor
jl
scas
cmp
sbb
pop
mov
jle
outsl
ja
lock
or
mov
daa
pop
pop
lods
mov
and
outsl
je
pop
sub
pop
xorb
lret
sahf
sub
sar
dec
ja
mov
repnz
mov
call
filds
fsubl
sub
mov
jb
jmp
or
ljmp
lods
fldl
dec
aad
sub
mov
push
xlat
jmp
stc
xchg
dec
movsb
add
jno
inc
fldcw
in
jne
and
jmp
cmp
inc
jmp
test
fistps
inc
push
jmp
test
imul
xor
dec
push
scas
ret
mov
add
lods
sub
add
mov
sub
sub
pop
mov
loop
cmp
inc
addr16
sbb
ret
jb
rolb
mov
mov
int
fdivp
xchg
cmp
repnz
mov
add
inc
and
lahf
sti
dec
outsl
imul
jmp
jl
push
xchg
mov
sahf
sarb
pop
in
iret
push
and
cs
aaa
clc
push
rcrl
jmp
mov
imul
jnp
push
dec
pop
push
sub
test
jmp
cltd
mov
jmp
mov
jmp
or
cmc
inc
mov
nop
cli
fsubs
jmp
mov
jmp
aaa
mov
adc
call
mov
mov
movsb
pop
sbb
push
adc
jl
jmp
lret
sub
add
xchg
mov
gs
push
inc
sub
fldenv
cmp
xor
jg
jmp
movsl
or
jbe
aad
jmp
ret
cld
cmp
jnp
aad
jmp
lea
or
jmp
mov
lds
jno
pop
insl
in
mov
jmp
push
or
jo
lods
pop
popa
es
imul
mov
add
jge
out
pop
fucomp
test
addb
lods
addr16
add
incb
ds
nop
jmp
add
inc
std
dec
je
jmp
push
ret
or
xchg
pusha
jne
es
mov
rep
jmp
fwait
push
mov
jmp
repnz
into
sbb
mov
pop
jo
cmpsb
jmp
test
orb
sub
push
jle
out
sub
dec
data16
stc
outsl
push
icebp
mov
test
sti
stc
shlb
and
mov
xchg
jmp
pop
pop
popf
sahf
lods
mov
cmp
ljmp
lret
pop
add
jmp
jge
or
test
movsb
lahf
bound
es
mov
xor
mov
addr16
jmp
popa
add
or
dec
jmp
pop
fldl
jg
or
sub
mov
jb
mov
int3
jmp
js,pt
jmp
jmp
sub
pusha
or
notb
adc
fidivrl
jno
cmp
and
int3
in
gs
sbb
mov
jge
jns
imul
fs
adc
mov
outsl
aaa
cmp
xchg
jmp
sti
cmp
xor
cli
jp
out
mov
lcall
and
xor
jg
imul
adc
jbe
pusha
mov
and
inc
fld
xlat
outsl
jmp
push
push
aad
add
mov
inc
sbb
mov
jmp
cmp
sbb
sub
movsl
dec
rcrb
mov
or
xchg
inc
xchg
and
ficoml
daa
movsb
into
jmp
out
jb
jle
aad
push
lret
leave
xor
ret
mov
xchg
sbb
and
call
jmp
andb
jmp
adc
movsl
jae
xchg
in
lods
test
or
cmp
jno
into
scas
mov
ja
scas
pop
sahf
lods
or
aaa
pop
cwtl
adc
mov
into
jmp
mov
pop
xchg
dec
std
scas
sub
xchg
fdivrs
xlat
mov
mov
popa
out
mov
movsb
add
inc
mov
out
shlb
lods
cmp
mov
mov
xchg
jb
sbb
nop
pop
pop
popf
adc
imul
mov
adc
jmp
cld
add
sub
imul
jmp
leave
pop
jno
out
mov
inc
sub
cld
cmp
cmp
loopne
jae
aaa
mov
gs
xchg
jmp
sti
adc
push
sbb
jp
cmpsl
jmp
popf
inc
jmp
mov
or
sbb
sub
mov
inc
cltd
cmc
aas
dec
sbb
xor
aam
fisubrl
jmp
or
std
mov
outsb
sbb
cltd
pop
push
sub
mov
lea
jmp
or
pusha
jmp
jne
inc
adc
jmp
pop
daa
cli
sub
jb,pn
loop
lock
pop
fcomps
lret
repnz
popa
bound
sub
jnp
sub
jmp
int3
fcmovbe
icebp
jae
cmp
pop
sub
adc
jge
je
loope
or
jmp
aaa
xor
imul
fs
adc
aad
imul
mov
cmp
pop
xchg
sub
aaa
sbbl
mov
adc
mov
fbld
loopne
pop
mov
jmp
jne
sbb
adc
ja
cmp
pop
in
xchg
test
sbb
push
mov
sub
ljmp
js
pop
shr
pop
lds
jecxz
or
sahf
out
push
in
pop
movl
mov
cs
jp
daa
jecxz
lods
hlt
stos
cmpsb
sar
mov
mov
mov
lcall
mov
push
nop
jmp
call
add
or
je
or
int
or
pop
sbb
push
out
movsb
mov
dec
jmp
sub
lock
xchg
imul
das
mov
add
cwtl
lods
jmp
daa
jnp
out
push
xchg
ucomiss
mov
and
xlat
repnz
pushf
pop
aad
mov
sub
push
inc
cmp
sub
sub
xchg
lods
mov
int
pop
lcall
sbbl
lea
or
repz
xor
decb
vmovlps
jmp
mov
push
inc
and
mov
dec
stc
repnz
cmp
call
in
daa
fdiv
jmp
dec
popf
mov
arpl
jmp
xchg
pop
nop
push
fcmovnu
mov
pop
sahf
stos
leave
ror
lock
test
outsl
and
bnd
mov
pop
mov
xchg
lret
pop
jmp
hlt
cmp
cs
dec
outsb
or
mov
jmp
sbb
int
stos
shr
insb
xchg
sub
lods
push
inc
mov
repz
enter
mov
iret
mov
cmpsl
sbb
ja
sub
jbe
fistpl
ror
cmc
and
and
dec
fmuls
cmp
repz
or
xchg
subb
dec
add
xlat
sub
or
psubw
adc
xchg
inc
int3
or
subb
out
mov
sbb
into
inc
iret
data16
push
or
jg
push
and
and
addr16
cli
xchg
pop
cmp
loopne
xor
dec
nop
aaa
inc
sub
jmp
push
adc
add
mov
popf
or
and
sub
lret
jbe
xchg
cmp
idivl
icebp
leave
jmp
dec
dec
rcl
bound
es
js
adcb
push
sub
imulb
push
jmp
pop
add
into
stos
ds
mov
movsl
pushf
mov
jmp
cmp
in
cli
and
mov
push
sti
std
jmp
sub
jmp
jmp
test
and
insl
push
jmp
dec
pop
xor
loopne
icebp
testl
dec
decb
out
xor
out
cltd
jge
ss
popa
inc
cmp
xchg
pop
pop
jmp
sbb
subl
movsl
sbb
fstp
divl
mov
ja
jmp
icebp
ret
mov
pop
test
out
mov
mov
jmp
or
lock
push
jmp
pop
repz
xor
jg
jmp
cmp
mov
lods
pop
stc
imul
into
jecxz
jb
xor
xchg
mov
and
jmp
xor
and
mov
cmp
sub
in
lret
sbb
decl
es
icebp
test
jmp
mov
mov
jmp
test
pusha
mov
push
xor
clc
js
cmp
cmpsl
sbb
push
or
in
push
jmp
lahf
fcomi
fcoms
jmp
inc
sub
leave
jmp
xchg
mov
inc
js
xchg
pushf
call
pop
inc
jmp
push
in
and
js
xchg
out
pop
lds
or
stos
int
sub
mov
sub
or
xchg
sub
xchg
xor
nop
gs
cmp
loopne
and
inc
inc
iret
push
les
jmp
aas
cwtl
es
inc
arpl
stc
imul
xchg
mov
movsb
jmp
std
cld
add
gs
lods
cmp
mov
rorl
jne
lods
push
jp
and
jmp
cmpsl
mov
rorl
fwait
call
fisubrl
sti
mov
jmp
xchg
cmp
mov
jle
test
and
xchg
scas
arpl
sub
mov
and
push
jmp
cwtl
into
out
cmp
lods
xor
push
push
imul
cld
jl
subb
lods
adc
sbb
imul
adc
sub
or
lret
cmp
push
and
bnd
scas
mov
or
outsb
pop
mov
xchg
sti
lcall
pop
mov
or
fs
in
jo
jg
and
push
cmp
mov
jmp
das
lahf
mov
stos
jns
jmp
testb
push
sbb
adc
pop
ret
outsl
hlt
ljmp
or
imul
sbb
ret
fwait
addr16
jecxz
sbb
mov
je
aam
hlt
and
mov
mov
sub
mov
mov
mov
mov
movsb
mov
inc
lret
push
jmp
int
aam
or
cli
or
cli
in
pop
pusha
mov
dec
lock
sti
sahf
imul
jae
pop
movb
mov
lods
sub
mov
sub
mov
out
jmp
test
sbb
out
insb
inc
mov
mov
jb
jmp
test
pop
add
jae,pn
jge
jnp
add
push
fsubr
adc
add
mov
fsubrp
jns
mov
hlt
jmp
fs
icebp
shlb
addr16
or
mov
xor
loopne
pop
icebp
mov
arpl
outsl
xchg
jno
lods
jmp
shll
push
mov
pop
mov
jns
popf
sbb
fildll
sbb
inc
ds
int3
mov
xor
lcall
jp
lret
mov
mov
ja
xor
movsl
sub
fmuls
pop
fcmovnb
mov
repz
fwait
mov
imul
xor
pop
mov
ss
jns
int3
jmp
push
sbb
sbb
cmpl
sub
cli
push
cmp
xor
pusha
popa
inc
jmp
add
stos
jmp
rcrl
out
std
incl
js
repnz
shr
stos
xchg
mov
xchg
dec
add
stc
adc
add
dec
mov
cmpsb
pop
jmp
jb
push
ror
jmp
rcrl
adc
jmp
sbb
lock
add
cmp
xchg
lret
lahf
outsl
stos
add
dec
loopne
jmp
sub
xchg
mov
jecxz
in
dec
repz
stos
dec
mov
sub
sub
push
fsubr
test
in
or
and
xchg
std
jno
jmp
bound
dec
repz
in
icebp
inc
std
jae
jmp
sti
fsubrl
outsb
inc
clc
dec
fs
leave
inc
sahf
and
mov
imul
popf
mov
xchg
jae
and
call
pop
xchg
and
push
scas
test
fisubrl
adc
cmp
jle
dec
cmp
std
movsl
jmp
add
cmpsb
sbb
dec
jbe
hlt
repz
stc
mov
mov
pop
loop
jmp
pop
sbb
stos
dec
xor
les
fdivrl
xchg
pop
push
loope
inc
jmp
jl
mov
jmp
stos
or
dec
fmulp
jmp
mov
xchg
cli
adc
xchg
push
stos
lea
mov
fists
jmp
adcl
jmp
push
mov
jmp
xchg
jmp
shlb
loopne
sub
movsb
jmp
pop
xor
je
jno
in
popf
adc
cmp
fnstsw
pusha
lcall
cmp
push
outsb
sbb
divb
cwtl
mov
inc
dec
popa
cmp
push
into
mov
add
jno
fmuls
sub
insl
scas
adc
jmp
and
jae
ja
testl
test
push
mov
mov
pop
mov
dec
sbb
jmp
frstor
pop
lods
xor
mov
icebp
iret
repz
sub
sub
pop
xchg
push
jmp
fcom
sub
jb
outsl
imul
adc
jno
jmp
in
mov
jmp
xchg
jmp
out
dec
or
sub
rcr
jmp
sub
xchg
rcrb
add
mov
mov
xchg
stos
shlb
int3
nop
inc
scas
mov
pushf
lahf
and
into
inc
int
mov
jmp
stc
insb
pop
imul
inc
mov
pop
das
xchg
aas
fwait
xchg
pop
lods
pop
repz
add
xchg
push
push
adc
jmp
nop
pop
push
fstps
fcoml
cli
aas
lahf
mov
push
int
shlb
lret
vpunpckhdq
mov
mov
ss
into
jmp
adc
mov
aad
inc
imul
mov
mulps
dec
jmp
xchg
lods
rolb
insb
mov
sub
scas
out
xchg
pushf
sbb
inc
rolb
mov
pop
cmovb
dec
cmp
jmp
in
sub
ja
lahf
mov
inc
fiaddl
mov
mov
das
add
sub
orl
and
push
pop
and
xor
scas
push
das
fdivp
jmp
adc
into
cmc
pop
hlt
mov
xchg
aam
push
cmp
daa
mov
into
mov
sbb
fidivs
lds
int
pop
push
or
lea
gs
shrl
movsl
mov
sar
pop
cmp
outsl
or
jl
ja
aas
cwtl
movsb
jecxz
mov
in
jmp
mov
in
je
loopne
push
sbb
mov
pop
adc
scas
jns
loope
adc
jmp
jno
mov
inc
xchg
pop
jmp
addl
jmp
and
stos
xor
sub
sbb
xchg
jmp
push
outsb
inc
mov
mov
adc
dec
push
xchg
jmp
std
push
and
sub
xor
cmp
int3
lret
sub
lock
xchg
mov
xchg
sub
sub
sti
pop
gs
outsl
insl
pusha
sub
mov
mov
jle
imul
jbe
jmp
inc
in
push
testb
dec
jmp
xor
fwait
pop
sub
int
sbb
jmp
loopne
jo
sub
inc
jmp
and
enter
sub
or
mov
mov
xchg
in
cmc
xor
les
pop
lcall
pusha
jae
jmp
sbb
adc
and
push
pop
sahf
and
add
out
mov
jmp
push
popa
fidivrs
xor
xlat
int
jle
add
dec
les
es
lea
fstpl
cmp
shl
scas
inc
inc
sub
xor
or
mov
or
jle
sbb
and
and
cmp
insb
leave
jle
jp
loopne
jmp
push
sahf
jge
adc
xor
xchg
inc
jmp
mov
fsubr
inc
mov
ret
lods
jno
cmp
push
inc
sub
lahf
mov
sub
scas
cmp
or
pop
jbe
ja
cmp
jno
sbb
fldpi
fisubrl
imull
xchg
test
rcrl
jecxz
lods
cmpsb
mov
inc
mov
pushf
sub
pusha
xor
jmp
movsb
nop
lods
xorb
iret
adc
sub
mov
fnstcw
cmp
adc
jae
stos
mov
xchg
xchg
popa
pop
fcoms
add
dec
popf
mov
in
in
test
mov
shlb
jo,pt
or
in
mov
cs
jle
jmp
in
add
fdivl
cmp
loope
jmp
xchg
xchg
fs
inc
mov
adc
pop
pop
pop
and
shll
rorl
test
int
adc
pop
sub
jmp
jnp
mov
jmp
and
push
xor
in
dec
or
cli
inc
daa
adc
jmp
mov
mov
hlt
jns
in
ja
inc
push
add
sub
jecxz
mov
adc
or
add
sub
add
rolb
or
fcmovnbe
mov
aad
add
mov
insb
sar
inc
sbb
int
cmp
shll
cmpsl
arpl
push
jmp
in
insl
xchg
inc
jmp
addb
jmp
stc
push
aad
out
dec
lret
scas
push
rol
add
insb
ficomps
fwait
lret
push
hlt
jmp
mov
lock
and
jge
sbb
lret
gs
and
cmp
decl
xor
jmp
jecxz
ret
ret
inc
jmp
in
add
sbb
xchg
mov
scas
mov
out
or
push
call
movsb
aam
js
xchg
or
movsl
ss
and
xor
iret
mov
xlat
dec
pop
jae
inc
dec
pusha
lahf
sti
flds
je
dec
pop
pop
jae
or
cmp
jne
and
mov
aas
out
gs
sub
repnz
popf
xchg
mov
fnsave
mov
mov
sbb
add
add
xor
lods
cmp
and
iret
call
jb
cmp
pop
jmp
add
outsb
pop
add
aaa
adc
popa
or
shrl
int3
enter
scas
xor
repz
pop
cmpsb
mov
cmp
jmp
and
mov
jmp
movsb
in
and
outsl
cltd
loop
push
inc
addr16
jmp
adc
or
jmp
sub
jo
jmp
mov
inc
adc
and
xchg
stc
jp
insl
add
ljmp
test
ret
dec
mov
push
mov
or
cmc
lret
xchg
imul
lods
adc
clc
dec
out
popa
ds
adc
cmp
outsl
mov
ss
in
inc
jmp
scas
test
sbb
xchg
add
in
sti
jb
or
aad
inc
jmp
sbb
stos
sbb
dec
cmp
ret
jo
enter
mov
imul
add
adc
loop
aaa
push
dec
pop
jmp
rcl
jae
sub
jmp
xor
outsl
into
xchg
jo
or
por
mov
inc
xchg
jb
aad
int
push
adc
adc
rcr
sub
xor
fsts
sbb
iret
subb
adc
adcl
mov
jmp
push
popa
repz
or
mov
jmp
inc
push
es
loope
ja
add
adc
les
mov
mov
mov
fsubr
xchg
ret
out
mov
pusha
adc
cmp
adc
add
jmp
pop
stos
mov
jmp
addr16
cmpsb
out
das
jp
cmp
pop
add
mov
sbb
fisttps
mov
fadd
push
loop
test
sub
mov
lahf
sub
fistpll
testb
movsb
push
jmp
iret
xchg
mov
outsb
sbb
cmp
mov
sub
mov
cmp
or
jmp
adc
sbb
mov
mov
and
sbb
stos
jmp
inc
or
mov
insb
ja
push
xchg
pop
cmc
outsl
nop
jne
jmp
xchg
mov
js
in
fildl
shrb
push
test
into
mov
in
adc
and
inc
shr
lret
mov
sbb
jp
add
in
fnstenv
dec
cmpsl
or
or
adc
pushf
mov
xchg
jmp
mov
or
cmc
xchg
stc
pop
dec
xor
in
outsl
push
stc
push
test
push
mov
js
sub
enter
mov
or
outsb
aad
mov
pop
mov
sub
subl
int3
jo
iret
cmp
orl
mov
mov
sub
jge
jnp
xchg
jbe
fidivrl
jmp
ret
adc
and
imul
sub
push
inc
and
or
mov
xlat
icebp
shrb
das
lods
dec
iret
call
sub
adc
sbb
pop
mov
xor
insb
iret
add
mov
ficoms
sbb
negl
jmp
mov
test
add
or
push
xchg
sti
and
icebp
sbb
aaa
dec
imulb
jmp
pop
mov
or
xchg
js
aas
jmp
sti
adc
lret
mov
lods
xchg
ret
and
lods
sbb
cld
std
test
fmull
stos
insl
imul
ds
enter
cmc
lock
sub
push
mov
sub
dec
sbb
fnsave
xchg
or
inc
lret
jns
pop
or
repz
mov
mov
aam
cmpsb
pop
rclb
or
std
aam
sub
loopne
je
sbb
imul
inc
add
stos
mov
jmp
fnstenv
dec
jmp
jmp
adc
repz
mov
movsb
sti
and
jecxz
push
cs
scas
fxtract
stc
adc
out
jl
ljmp
add
inc
mov
mov
mov
loop
add
mov
int
inc
js
repz
add
push
jne
dec
sbb
jbe
inc
push
mov
jmp
jns
mov
lods
test
sbb
or
mov
repz
jb
push
cmc
in
sub
xchg
push
dec
repz
jmp
das
jnp
insb
dec
jbe
mov
fistpl
out
lcall
shrl
jae
adc
cmpsl
push
or
pop
inc
xor
sahf
mov
mov
enter
fisubrl
lods
icebp
lret
mov
push
sbb
mov
mov
pop
movsb
adc
ficoml
cld
movlps
xor
or
jbe
and
and
mov
fdivs
aam
mov
jmp
pop
pop
adc
pop
popf
loop
test
loope
adc
js
jmp
jnp
es
jo
in
jbe
je
pushl
jmp
pop
inc
outsl
mov
ds
jmp
and
jae
jmp
and
sti
push
or
jmp
stos
imul
pop
or
and
daa
mov
inc
clc
addr16
and
std
sub
in
es
sub
pop
popf
xchg
xor
aam
or
push
leave
test
icebp
fs
std
js
lret
popa
dec
push
sub
jp
orb
jo
adc
in
mov
nop
mov
fnstsw
lahf
or
sahf
rol
push
jmp
lret
cwtl
inc
std
jb,pt
pop
xor
pop
mov
add
fistl
or
es
fwait
add
lods
insl
loope
test
clc
cs
imul
jbe
pop
inc
subb
sub
xchg
stc
sti
dec
or
into
ret
aas
push
jmp
mov
fisttps
xor
and
sub
jmp
pop
inc
pop
jo
pop
jmp
ret
add
movsl
pushf
mov
xrelease
out
clc
mov
mov
jmp
xchg
in
jge
jmp
xor
jmp
xor
sub
shr
mov
xchg
sub
sti
adc
ds
ret
nop
jno
dec
jmp
mov
mov
sub
sub
fstpl
dec
dec
jmp
mov
sbb
mov
std
xchg
test
xlat
mov
cmpsl
add
add
mov
imul
adc
cmp
add
sti
jge
xchg
inc
jmp
jmp
cwtl
pop
jecxz
stc
jbe
or
jmp
jmp
movl
xchg
in
sub
xor
rcrl
mov
dec
mov
cmp
into
mov
cmp
sub
or
xor
ja
jl
sbb
jo
add
push
loopne
repnz
cmpsl
cmc
push
inc
lret
lods
fdiv
push
xchg
or
insb
add
xchg
fucomip
test
pop
nop
mov
testb
sub
shlb
sbb
je
or
sub
stos
pop
andb
mov
popa
in
sub
jmp
shl
xchg
mov
mov
mov
iret
int3
sub
xchg
inc
and
ljmp
lea
cwtl
cmc
jmp
lods
sub
add
sub
jmp
shll
dec
fcoml
sahf
mov
and
push
aad
inc
into
jmp
and
xchg
out
out
xor
jmp
iret
jge
pop
inc
add
lods
xchg
das
test
push
orl
sti
add
jmp
push
mov
jl
scas
lahf
cmp
int3
mov
sbb
and
push
aad
loopne
and
cltd
jmp
stc
into
mov
hlt
xchg
jns
adc
jl
pop
cpuid
in
adc
jmp
mov
jo
jmp
add
ret
fucomp
or
cmc
stc
inc
add
popa
repnz
add
inc
dec
xchg
add
sarl
es
jmp
xchg
das
iret
aaa
pop
out
sub
dec
sub
pop
lahf
sub
mov
shll
and
jo
fldpi
adcl
arpl
sub
leave
jmp
hlt
adc
or
clc
pop
jmp
dec
movsl
incb
or
das
sub
arpl
sbb
ficompl
outsb
inc
jge
out
repz
dec
rcr
push
sahf
jmp
mov
movsb
adc
xor
lret
adcb
pop
adc
cmp
imul
inc
sub
roll
mov
jmp
and
lods
xchg
je
adc
insl
inc
xlat
xchg
cmc
sub
shr
in
pop
xor
jmp
out
inc
xchg
mov
idivl
lea
jmp
hlt
or
andb
test
mov
cmpsl
jo
stos
inc
shrl
ljmp
or
out
lds
imul
mov
pop
pop
cmpsl
mov
push
jmp
fmull
adc
sub
or
xor
into
pop
adc
aad
mov
jmp
jp
dec
jne
mov
jae
call
rcll
sub
test
mov
mov
and
and
out
jmp
or
fnsave
or
pop
repnz
cltd
jmp
lock
cmp
mov
jmp
in
and
dec
push
clc
lods
fisubl
mov
dec
push
push
jmp
cltd
xchg
mov
jmp
push
adc
dec
push
hlt
aad
push
pop
shlb
or
js
filds
cmc
mov
add
inc
lret
xor
and
xor
int3
mov
xchg
mov
aas
adcb
pop
xchg
insb
and
ss
stos
sub
cmp
or
jmp
xorb
out
fucomip
push
orl
jmp
pop
insl
popl
scas
test
call
leave
adc
repnz
jp
mull
mov
sub
pop
jmp
mov
cwtl
cmp
icebp
aam
movsb
cmp
out
shr
cmp
push
fs
lret
sbb
cld
fsubr
xchg
arpl
jp
int
sbb
xor
sbb
push
lods
fcoml
out
xor
ljmp
sbb
add
cmp
sbb
xchg
jp
xchg
mov
movsl
scas
cs
lods
sbb
adc
or
pusha
jmp
xchg
xor
mov
sub
lret
xor
jl
aad
dec
scas
leave
sub
mov
cmp
bound
subb
sub
jmp
outsl
mov
cs
xchg
sub
or
scas
mov
aad
mov
lods
fwait
dec
pop
jmp
xor
shr
push
xchg
mov
movsb
gs
cli
adc
xchg
cs
sbb
push
jp
inc
mov
xchg
ljmp
dec
outsb
outsb
xchg
repz
jb
out
out
test
ret
add
mov
notb
lret
loope
das
xchg
or
rcl
out
xchg
push
sbb
test
xchg
sahf
xchg
sti
push
and
loop
dec
add
rolb
xchg
fisubrs
xor
mov
repnz
insb
out
ds
xchg
add
xchg
sub
sub
test
inc
push
sti
orb
sarl
jmp
add
lock
jmp
ljmp
lds
jmp
fisubrs
jmp
xor
push
sbb
mov
jb
dec
cwtl
in
push
jle
sbb
cmpsl
inc
sub
stos
jmp
lret
rcrl
mov
mov
fstpt
popa
mov
or
push
cmp
sti
out
neg
jge
adc
or
ss
or
jmp
movsl
shlb
mov
lds
stc
repz
cmpsl
xchg
mov
loop
sar
add
int3
jmp
and
stos
xor
mov
and
cltd
subl
fs
sbb
mov
sahf
jns
fwait
or
mov
mov
inc
lret
imul
push
push
cs
dec
ret
test
mov
imul
fsubs
cltd
mov
mov
shrl
insl
and
mov
xchg
add
or
jmp
adc
shr
lahf
jp
mov
cwtl
lods
add
lods
loop
pop
outsb
dec
jno
adc
arpl
in
ja
ss
inc
or
int3
gs
lret
sbb
jmp
jmp
ret
adc
btc
cltd
shll
aaa
jmp
cmp
fistpll
jmp
sbb
dec
push
jmp
adc
jmp
jge
sub
jbe
dec
and
shrd
test
test
jmp
lea
push
into
sbbl
cmp
outsl
clc
cli
push
sub
pop
jmp
dec
mov
push
outsb
push
xchg
outsb
mov
cmp
and
rcll
adc
mov
cs
je
push
mov
aaa
lods
add
scas
test
lret
mov
dec
add
or
jl
lods
xor
and
xchg
sbb
jae
in
cs
add
shll
cmpsl
jmp
outsl
inc
push
jnp
bound
jp
jo
jns
fmulp
addb
dec
cmp
push
les
imul
or
jmp
adc
lahf
mov
adc
lock
jmp
out
mov
rorb
pop
adc
out
pushf
loop
ja
xchg
cmp
push
data16
cmp
jmp
or
hlt
lods
shll
inc
sub
cmp
sti
jp
in
mov
pop
sbb
dec
enter
push
adc
inc
jmp
adc
push
mov
cmp
xchg
xor
pop
pop
pop
pop
push
movsb
or
insb
aas
divl
and
aaa
jle
xorb
mov
into
or
jmp
dec
addb
iret
sub
inc
inc
imul
sub
popf
lods
mov
lds
or
test
or
cmp
sub
sub
lods
jne
mov
push
push
lods
sti
sbb
rcrb
out
adc
jecxz
jp
lcall
sbb
sub
orl
rorb
sbb
push
loope
cmp
pop
dec
dec
sarl
sarl
mov
push
cltd
pop
sbb
imul
ret
inc
sub
sub
or
lock
adc
test
in
sbb
mov
xchg
gs
and
xor
jne
adc
outsb
push
adc
and
and
jmp
fmuls
outsb
ret
jno
scas
in
shlb
adc
mov
jmp
mov
sbb
jmp
mov
xor
jmp
mov
inc
test
or
shr
cmp
sbb
add
jmp
nop
inc
js
add
jmp
xor
xchg
leave
jmp
mov
sbb
lods
cld
push
fst
jg
and
xchg
sub
sub
jmp
pop
in
movsl
sub
test
sub
dec
insb
jmp
je
jo
cmp
int3
outsb
arpl
shlb
lds
and
pop
jmp
pop
rcrl
outsb
adc
and
sbb
mov
or
outsb
mov
cmp
call
jmp
in
lods
push
push
dec
nop
lods
cs
cmp
or
jnp
jge
outsl
jae
push
mov
clc
or
jmp
orb
or
test
mov
mul
leave
mov
xchg
adc
xor
jmp
cmp
nop
cltd
jmp
mov
movsl
pushf
dec
sub
pop
inc
xor
scas
aas
sbb
and
pop
cs
call
sbb
fwait
and
mov
dec
arpl
dec
test
cmp
sub
je
fimull
ds
and
sahf
mov
pop
jg
adc
dec
add
flds
sahf
mov
jle
nop
aad
push
and
jmp
in
sti
jg
cmpsl
or
jmp
pop
cli
xchg
xor
stc
iret
pop
cmpsb
int
add
popa
sbb
sbb
lret
jmp
ret
mov
pop
jb
loop
dec
jmp
out
rcll
mov
or
clc
sub
xchg
pop
mov
pop
mov
dec
js
aas
dec
mov
jmp
outsb
or
mov
pop
aam
sub
jmp
adc
cmc
sub
fsubr
mov
lahf
adc
sbb
jmp
es
adc
add
jmp
nop
sbb
test
jmp
xor
dec
jbe
sti
jmp
sub
cmpsb
popa
aam
cmp
dec
adc
out
xor
dec
aam
outsb
cwtl
lret
sti
shr
mov
mov
jmp
mov
shll
inc
jmp
jecxz
rolb
shll
pop
jno
cwtl
clc
fwait
dec
mov
or
divl
push
lock
cmp
loop
dec
cmp
or
jno
loope
lahf
sti
shrb
mov
mov
lock
mov
scas
ja
inc
xor
mov
int
mov
sbbl
loopne
stos
ds
out
daa
sub
push
mov
mov
push
ret
in
xchg
sub
in
ss
mov
enter
mov
daa
incl
jmp
jmp
and
sbb
jmp
jae
gs
adc
mov
sub
mov
lahf
xchg
jmp
jmp
and
dec
es
cli
dec
dec
sub
fldl
push
and
sub
arpl
dec
scas
test
xchg
or
mov
jmp
lcall
mul
and
adc
neg
in
notl
add
movb
dec
dec
jmp
rcrb
pushf
inc
cmp
arpl
adc
daa
stc
cmp
lods
fildll
or
push
roll
mov
cmp
rcr
leave
jne
lahf
push
jle
out
sarl
mov
mov
xchg
cmpsb
loop
inc
add
xor
lret
incl
sub
mov
popf
jmp
in
push
lods
sub
jmp
mov
xor
jmp
movsb
scas
inc
sub
sub
xor
pop
call
imul
dec
imul
int
adc
add
das
jmp
fmull
lods
fstpl
push
movsb
jmp
int
mov
jmp
movntps
jmp
xor
es
mov
jmp
in
jns
pop
movsb
nop
jmp
outsl
fidivl
xchg
or
testb
iret
out
in
repnz
int
mov
inc
out
jne
fdivr
mov
pushf
jmp
shll
xchg
divb
jno
lods
fnsave
xchg
dec
lods
mov
xchg
lret
jmp
sti
call
mov
gs
das
mov
jmp
xchg
test
popf
jmp
add
cwtl
push
add
jmp
mov
clc
add
sub
fidivrl
ficomps
jmp
and
pop
insl
dec
push
and
testb
lcall
inc
por
sbb
xchg
jmp
xor
popf
js
addl
jle
mov
mov
cmc
clc
test
data16
roll
jge
cmp
add
mov
pop
dec
cmp
leave
cmpsl
dec
lea
rorl
inc
imul
std
jecxz
jns
cmpsb
jbe
mov
xchg
sbb
jl
pop
divl
jmp
xchg
addr16
in
mov
inc
mov
jmp
push
mov
in
scas
cltd
int3
loope
jecxz
mov
dec
pushw
jmp
xorl
jmp
dec
mov
aaa
jmp
mov
mov
inc
fnstcw
mov
dec
push
loopne
sub
stos
adc
scas
mov
add
xor
jmp
sti
pop
inc
adc
imul
fstpl
aas
and
pusha
lods
ret
jge
sbb
mov
cld
aaa
jecxz
lods
lds
mov
cmp
stc
inc
loopne
lods
pop
test
xorb
and
jae
cli
lret
mov
movsb
add
xchg
sbb
mov
iret
jmp
icebp
inc
mov
add
jmp
adc
out
jle
lods
xchg
mov
mov
mov
sbb
rorb
dec
mov
jae
sub
and
add
mov
mov
adc
lret
inc
imul
xchg
enter
scas
sub
cmc
call
push
lcall
hlt
dec
add
loopne
adc
or
stc
sbb
int3
test
js
int
or
cmpl
imul
or
scas
in
jecxz
xor
jmp
in
stos
js
pop
cs
cli
push
loope
cmpsb
int3
sarl
adc
sub
bound
cmp
mov
add
out
cmpsb
sub
adc
mov
push
aas
jmp
filds
icebp
sub
push
aaa
in
or
scas
sbb
pop
cmpb
mov
or
clc
shlb
jmp
xchg
sbb
pop
jnp
jmp
inc
xor
pop
fcmove
dec
mov
addb
fs
mov
push
pop
push
push
push
and
jmp
cmp
sbb
lods
pop
ss
arpl
add
push
push
jmp
mov
jnp
jle
repnz
bound
or
dec
jno
rcll
outsb
jmp
jg
dec
push
and
mov
lods
in
out
xor
adc
aam
inc
lahf
push
scas
lods
and
cmp
loopne
jmp
push
ret
mov
adc
pop
aad
jmp
adc
pushf
jmp
cmc
scas
and
test
jmp
jnp
sti
sbb
rorb
stos
lods
shr
add
or
popf
adc
push
xchg
aad
nop
lret
fidivrs
test
test
jb
xlat
mov
xor
xor
loop
jmp
stc
insb
out
in
nop
jmp
mov
mov
push
jp
jmp
dec
mov
dec
lods
call
mov
ss
dec
cmp
jnp
xchg
jl
fistpll
popl
stos
xor
xlat
pop
pop
jle
icebp
jmp
fnstenv
ss
or
movsb
cmp
adc
jle
iret
les
mov
mov
jb
into
ret
mov
add
mov
xchg
mov
cwtl
int3
inc
sbb
xor
pop
fnstsw
dec
das
and
sbb
mov
dec
push
xlat
cs
xchg
cmc
jmp
pop
add
jmp
sub
sub
xchg
jl
inc
mov
es
push
stc
roll
or
lods
lahf
call
mov
pop
mov
nop
fldz
sti
faddl
push
pop
jmp
mov
pop
jmp
and
loope
lahf
leave
sbb
or
aas
pop
rolb
cmp
xorl
adc
jmp
jns
xchg
iret
shr
or
jle
popf
sti
xor
jae
fsubrl
jmp
and
shr
lods
cmp
loopne
or
inc
push
in
dec
cld
mov
add
or
and
cmp
and
cmp
pop
jmp
mov
inc
flds
cli
jmp
pop
cmpsl
movsl
push
sub
jmp
adc
in
movsl
pop
scas
jae
je
or
lret
xchg
jmp
lods
adc
or
jecxz
dec
sub
dec
xchg
sbb
sub
sub
push
jmp
inc
mov
dec
shr
cli
mov
lea
jmp
popf
aas
sub
rol
inc
cbtw
es
sub
jp
pop
nop
insl
cmp
push
shlb
jmp
mull
fistpl
aam
pop
pop
test
sub
mov
out
mov
mov
jmp
dec
and
xchg
jg
xchg
jmp
movsb
frstor
sub
inc
leave
sub
and
lea
xchg
cmc
jbe
mov
ja
jmp
aad
les
xchg
dec
jmp
mov
jb
repnz
or
xchg
call
dec
push
and
cmp
dec
enter
filds
pop
lods
aaa
les
movsl
ljmp
ret
ss
fxam
pop
or
std
movsl
sbb
test
pop
xchg
iret
lods
ja
push
sbb
dec
outsb
lods
mov
or
dec
cli
scas
cmp
sub
hlt
dec
mov
xchg
clc
imul
sbb
xor
ret
pop
or
dec
mov
call
inc
pushf
insl
repz
fsin
int
jmp
imul
lods
sub
repnz
adc
repnz
enter
into
cmpsl
ja
inc
mov
or
lods
xchg
inc
in
gs
cmp
test
jno
xchg
cld
sub
loope
lods
mov
out
push
fstps
jmp
cmp
test
movsb
ss
test
test
pop
jmp
push
mov
pop
fsubr
mov
dec
jecxz
jmp
mov
clc
push
push
filds
rcrb
add
adc
loop
hlt
test
add
xor
push
inc
loop
test
aas
sbb
push
and
or
fbstp
and
sub
fcmovnb
jmp
dec
mov
cmp
sub
call
pop
sahf
outsb
jmp
inc
dec
dec
mov
xchg
int
lret
cltd
sbb
xor
jo
dec
aaa
bound
call
push
xchg
js
lahf
xchg
jmp
movsl
cmp
lock
insb
mov
pop
pop
jmp
cmp
aad
hlt
jmp
lea
jmp
gs
jmp
into
imul
mov
enter
adc
and
lret
push
adc
aas
out
es
xor
mov
test
push
jb
mov
bound
repnz
cmpl
jmp
mov
cltd
jge
dec
push
mov
push
jmp
out
add
and
imul
sbb
in
sub
es
dec
hlt
add
int
in
add
clc
xor
mov
test
sbb
push
fldpi
lret
mov
popf
dec
pusha
enter
adc
lcall
popf
xchg
in
mov
inc
mov
cmpsb
jns
faddp
sti
lods
call
lods
jmp
negb
dec
push
pop
jp
dec
jmp
xor
xor
sub
sahf
inc
mov
enter
scas
nop
addr16
mov
and
xor
subb
sbb
stc
frstor
repnz
or
lods
shrl
xor
bswap
orb
mov
push
in
push
dec
inc
and
fwait
mov
xor
shlb
pop
cmp
jmp
fadd
aad
mov
sbb
popf
sub
jo
cmc
icebp
lret
addr16
out
hlt
pushf
scas
fldl2e
mov
ja
mov
cmp
int3
clc
aad
mov
jmp
mov
aaa
dec
jmp
or
imul
pop
adc
sbb
mov
adc
jmp
mov
cs
inc
lds
jmp
cmp
xor
mov
jmp
lea
push
adc
es
mov
jmp
je
lock
sbb
inc
push
out
test
adc
loop
aam
jl
jmp
stos
jns
mov
int
or
sub
and
xor
xchg
mov
push
xor
jge
sbb
shrb
outsl
mov
lret
dec
sahf
jmp
shr
xchg
sti
sub
in
jmp
and
mov
jmp
icebp
and
sub
jmp
into
mov
mov
or
loope
sbb
and
and
inc
fmulp
ds
sub
add
jge
jmp
sub
out
or
and
adc
mov
cmpsb
aam
or
mov
fistpl
push
xor
mov
std
cli
and
add
or
hlt
mov
sub
repz
sub
or
sbb
jb
int
cmp
pop
arpl
movsb
cmp
sbb
inc
sub
hlt
push
inc
shlb
push
push
sbb
loope
add
push
jmp
hlt
inc
ss
push
stc
mov
arpl
jb
insl
mov
outsl
pop
jl
scas
test
iret
fpatan
xor
sbb
leave
xchg
aad
jmp
lods
xorl
fcoms
add
adc
and
cltd
mov
in
xlat
lds
cld
ret
pop
jmp
xor
push
adc
jle
and
mov
jmp
pop
jb
sbb
jns
fs
fdiv
inc
jno
jle
xor
inc
cli
fistpll
mov
push
je
xchg
fucomi
ja
adc
arpl
imul
sti
mov
in
fiadds
jmp
iret
xor
mov
jmp
lahf
mov
jne
outsb
xor
mov
cli
outsb
les
sbb
pop
ret
cmpsl
xchg
scas
sub
aad
or
sbb
push
push
je
repz
cmpsb
xor
mov
mov
jmp
daa
icebp
jae
xchg
pusha
ja
xchg
mov
push
mov
cmc
and
jno
adc
or
cmp
jmp
out
orl
and
movb
int3
sbb
jge
add
cmp
fisttpll
or
or
push
pop
dec
test
jmp
mov
mov
jmp
dec
test
xor
lret
cmp
xchg
loopne
jns
dec
es
lret
pop
cs
insl
addr16
lahf
pop
rorb
cmp
aas
sub
out
push
arpl
test
mov
daa
xlat
sarb
rep
out
mov
mov
jb
sub
jmp
ret
sub
adcb
insb
fbstp
or
in
imul
cmp
and
sub
inc
ss
lods
andl
add
inc
jmp
aaa
insl
mov
jmp
xor
adc
aas
imul
add
pop
add
mov
movsb
mov
cmp
dec
sub
sarl
sbb
jmp
int3
mov
addb
fstpl
or
add
dec
jmp
or
aam
popa
mov
popf
fdivl
dec
jge
cmpsb
cmc
pushf
enter
aas
leave
xor
rcr
loop
loope
jne
and
jmp
add
dec
sub
lds
adc
adc
xchg
in
lret
stos
sub
outsl
jmp
xchg
or
arpl
lock
lcall
test
push
sbb
outsl
xchg
rcrl
cmpsl
push
jmp
xchg
push
or
xor
sub
and
pop
sbb
jmp
xchg
or
xor
or
or
int3
sti
idivl
jmp
add
cmp
and
push
ja
jp
mov
pop
or
filds
call
or
jmp
leave
push
or
dec
sbb
movsl
and
inc
jmp
push
testl
sbb
sbb
or
mov
pop
sti
push
mov
cmp
dec
pop
stos
cmp
cmpsb
sbb
cmc
or
sub
sahf
sub
and
or
mov
xchg
jmp
fwait
xor
cmp
pop
jmp
inc
das
mov
pop
loopne
jmp
dec
pusha
lods
xor
dec
cmp
ret
push
sbb
dec
jmp
fdivp
push
or
mov
jb
bound
pop
insb
into
repz
test
incb
in
jo
cmp
cmp
xchg
imul
mov
and
mov
xchg
jmp
outsb
lcall
jo
lock
jmp
sbb
lods
mov
nop
ret
sarb
outsl
je
mov
movsb
shll
insb
aad
inc
stos
dec
inc
inc
fcoml
push
shrb
repnz
imul
loope
ds
hlt
sbb
icebp
scas
mov
outsb
xchg
sub
mov
cmp
repz
arpl
stos
adc
fldt
jle
mov
and
out
jbe
push
adc
shll
stos
lods
mov
loopne
jmp
xor
mov
movb
mov
imul
fdivrs
arpl
adc
sbb
loopne
lcall
sbb
movsl
mov
lds
dec
and
lods
mov
add
cltd
dec
scas
xchg
fisttpl
int
pop
daa
xchg
sub
outsb
jge
outsb
cld
lcall
fbstp
lods
push
int
mov
adc
pop
jecxz
js,pn
dec
push
jmp
in
out
insb
cmp
imul
stos
inc
scas
sbb
mov
add
sub
push
es
iret
daa
mov
jmp
mov
pop
jmp
cmp
dec
jmp
cmp
mov
dec
add
fisubrl
mov
fwait
in
mov
sub
lock
cmpsb
outsb
lret
dec
xchg
lea
jmp
out
push
aam
sub
mov
push
pop
mov
jmp
adc
fstl
jmp
sub
lods
js
or
push
sti
xor
lret
jmp
sbb
xchg
and
xchg
mov
lods
lcall
mov
lods
shl
imul
data16
aas
add
sub
mov
jo
sahf
jmp
jecxz
push
sbb
movsb
push
rcl
cmp
pop
push
jmp
stos
fnsave
or
jmp
sarl
js
ret
mov
add
nopl
fsubrs
test
call
sub
dec
sbb
sub
jg
lods
das
int3
push
dec
test
gs
nop
jmp
sahf
mov
mov
xlat
and
aam
jmp
mov
jmp
hlt
aas
jns
incl
jmp
cmpsb
xchg
cmp
xor
cmp
fcmovb
and
xlat
fucomp
icebp
insb
cltd
add
sub
push
sahf
int
pop
out
stc
mov
jnp
and
outsb
jmp
pop
lds
test
pop
jmp
fs
pop
jmp
cltd
inc
cmp
adc
sbb
lahf
stos
push
jge
push
sbbb
aaa
in
lea
testl
push
xlat
inc
mov
fcomip
pop
or
adc
or
adc
sub
jmp
lcall
jmp
cmpsl
inc
inc
mov
push
jb
fidivs
jle
dec
or
cltd
cwtl
push
leave
jmp
test
push
mov
or
dec
xchg
pop
dec
push
les
cmp
cli
jbe
clc
xchg
and
jmp
cmp
mov
insb
mov
shlb
jmp
pop
scas
bound
jmp
mov
xlat
fucomp
int
pop
adc
mov
imul
js
cmpb
stos
inc
cs
or
jmp
adc
jmp
das
lret
std
push
mov
jno
gs
xchg
lods
dec
and
movsb
jbe
or
mov
sub
mov
inc
cmp
gs
push
arpl
push
test
jmp
adc
adc
roll
or
cmp
sub
cmp
push
nop
fs
int
xor
jmp
pop
mov
lods
movl
xor
outsl
mov
mov
sub
xor
insb
sbb
xor
psrlw
dec
in
pop
jbe
test
fs
mov
pushf
lcall
jmp
push
sub
jmp
pop
mov
or
sub
loope
sbb
int3
jae
jmp
aam
add
xchg
ficomps
scas
dec
dec
int
sub
sbb
push
mov
enter
xchg
cli
scas
fisttpl
sarl
inc
imul
lret
jns
jge
mov
push
mov
or
adc
daa
dec
shrb
xlat
sbb
push
xchg
repnz
test
dec
sub
imul
pop
add
ja
add
sbb
repz
movsl
xor
sub
cwtl
test
das
out
push
sub
add
bound
pop
sub
outsb
cld
mov
inc
adc
outsb
push
xor
sbb
sub
inc
sbb
xchg
stos
mov
mov
fstpt
imul
push
int3
or
dec
jmp
clc
in
sbb
inc
ret
jmp
mov
xor
test
pop
pop
pop
add
sub
jmp
inc
sbb
mov
lods
and
cmc
jp,pn
test
and
scas
push
sub
out
dec
mov
pop
add
out
arpl
cmp
jne
lods
mov
xor
lahf
and
mov
inc
sti
in
mov
ror
jmp
adc
xor
arpl
sti
pop
into
xor
fcomi
mov
dec
pushf
stos
imul
pop
cmp
mov
jb
adc
cmp
push
dec
mov
mov
add
das
jbe
test
xlat
and
xchg
in
mov
repz
dec
inc
imul
cmc
xchg
inc
fmulp
jle
inc
jmp
mov
cmp
jp
pop
dec
xchg
jmp
popa
sbb
jmp
cmp
rep
jnp
dec
mov
jmp
jns
cmp
icebp
push
loop
push
mov
lods
ret
roll
fnstsw
jns
or
add
sbb
mov
fsubr
sbbb
adc
out
in
pop
aad
push
push
fsts
jmp
mov
neg
stc
dec
mov
or
popf
sbb
or
scas
jmp
notb
xchg
sti
mov
jmp
lahf
xchg
in
lea
cmp
cmp
outsb
jae
adc
adc
inc
xchg
das
jo
adc
shlb
shrl
ret
test
inc
outsb
lods
ss
negl
pusha
jo
imul
cltd
jns
lret
add
jmp
bound
int
fst
jmp
and
mov
jmp
movsb
add
fldcw
aam
sbb
addr16
call
push
xor
lds
mov
in
imul
rol
add
jmp
fstpt
and
mov
jle
sub
cld
aaa
bound
push
sbb
iret
push
jmp
ret
mov
addb
add
mov
cld
sub
lcall
sahf
jmp
sub
adc
jmp
lcall
sub
rcr
arpl
xchg
and
jmp
dec
push
xchg
jne
in
mov
mov
and
adc
pop
sub
stc
mov
jnp
mov
enter
inc
dec
out
sub
sbb
loopne
cmpsl
movl
aam
xchg
push
push
xor
and
mov
lock
stos
cmp
mov
adc
daa
leave
sti
cs
jmp
rcr
dec
sbb
mov
jmp
jg
lock
add
std
outsb
pusha
test
sbb
jmp
pop
push
pop
fwait
sub
add
mov
scas
mov
cmp
sti
dec
cmp
les
pop
outsb
mov
ficomps
scas
jmp
dec
jle
mov
mov
pop
cmp
sub
xor
cs
push
cmc
adc
cmp
mov
and
cmpsl
arpl
pop
push
sub
outsl
stc
xchg
dec
add
subb
jbe
test
xor
add
jg
pop
jmp
sbb
bound
lret
std
adc
xchg
stc
and
lret
adc
dec
pop
scas
and
mov
jmp
dec
or
mov
scas
faddl
sbb
sbb
or
lods
std
sub
imul
sub
es
out
cmp
lahf
outsl
xor
arpl
dec
loopne
addb
pop
push
lods
mov
adc
subb
jle
push
call
mull
test
outsb
rcl
mov
lea
mov
jmp
lahf
scas
call
jmp
rclb
lods
es
ja
pop
mov
imul
xchg
repnz
push
adc
nop
jmp
sbb
paddb
add
sbb
dec
cvtdq2ps
jle
imul
test
push
mov
int
mov
lods
fildl
and
xchg
sub
enter
mov
push
lods
xchg
cmpl
and
adc
jle
jg
push
movsb
jmp
push
xor
cmp
das
or
mov
pop
sub
mov
jmp
ret
mov
iret
repnz
enter
mov
push
das
pop
jmp
test
dec
pop
pop
push
dec
ja
testl
imul
cld
mov
stos
rclb
sbb
sub
sahf
notl
sub
xor
ds
lea
pop
cmp
fbstp
repz
cwtl
jns
jmp
add
mov
xchg
jmp
call
push
mov
jmp
xor
push
jge
repz
xor
ret
movsb
xchg
cld
and
jecxz
mov
lods
jbe
jmp
pop
pop
mov
jo
out
xchg
loop
adc
xor
lods
lcall
add
imul
sub
ret
push
mov
push
std
and
inc
pop
add
sub
pop
inc
mov
dec
rcll
jmp
out
xor
or
por
scas
adc
sbb
mov
cmpsb
jle
pop
in
jns
lods
out
test
and
pop
cmp
aas
jo
insb
mov
mov
sub
lcall
jo
mov
lahf
in
add
incb
rorb
xlat
pop
pop
inc
pop
sbb
sub
lods
cmp
sti
adc
or
sub
dec
dec
and
xchg
adc
sub
or
mov
dec
jmp
dec
push
mov
jmp
aam
dec
inc
push
xor
insb
mov
mov
int
mov
and
mov
push
ret
or
iret
sbb
imull
popf
lret
in
sub
cmp
jge
arpl
movsb
inc
scas
sbb
sahf
jmp
das
dec
mov
jmp
mov
lods
xor
push
jns
jne
iret
test
cmpb
dec
loope
push
into
gs
sbb
jmp
cmp
ljmp
in
iret
inc
in
adcl
psubq
frstor
fadds
je
jmp
imul
jmp
imul
test
adc
and
jmp
pop
xchg
sbb
jns
inc
nop
or
aaa
xor
jp
mov
adc
adc
jmp
call
fdivrl
mov
pop
jmp
movsb
adc
sbb
data16
mov
aam
fdiv
jg
cmp
jmp
push
lock
call
fimull
pop
icebp
sub
xchg
adc
jmp
mov
cmpsb
mov
test
sti
jnp
pop
push
fucomp
push
inc
or
mov
cmp
and
lds
mov
mov
shll
and
push
cmp
xchg
jae
movsb
aaa
popa
lcall
jmp
pop
mov
mov
lcall
por
ret
dec
popa
mov
sbb
rcl
sub
aam
loop
pop
jmp
rcr
fisubrs
add
test
sub
or
into
fisttpll
dec
call
push
jae
and
dec
lods
dec
adc
aam
out
mov
pop
inc
sbb
adc
push
rorl
cmp
jbe,pt
fcoms
cwtl
fwait
pushf
jg
add
insb
push
cmp
aaa
jle
lods
sub
pop
movsl
xchg
fildll
add
and
leave
cmp
xor
add
pop
aaa
jmp
in
inc
ljmp
ret
or
jae
imul
dec
test
stos
shrb
repz
jle
or
mov
fildl
lods
rclb
adc
cwtl
cld
sub
outsb
inc
push
lock
pushl
add
frndint
dec
repz
ret
lods
cwtl
cmp
mov
nop
push
dec
add
cmp
jmp
sbb
pushf
xchg
push
out
daa
repnz
sbb
sub
xor
or
adc
icebp
jmp
jl
and
outsl
sti
sbb
pop
push
pop
cwtl
xor
xor
jmp
xchg
push
mov
in
and
stc
jo,pt
ss
and
jno
dec
scas
sub
xchg
lea
ds
cltd
movsb
mov
push
sub
mov
repz
xchg
in
lods
push
dec
sbb
push
hlt
add
jmp
mov
scas
jmp
aam
jb
jg
dec
lods
lahf
and
out
outsb
lods
lea
orb
out
xchg
rcrl
adc
pop
addr16
xchg
sti
mov
inc
jmp
fs
lret
xor
ljmp
add
ret
int
and
mov
dec
pop
jmp
cld
xchg
nop
push
or
sub
and
cmp
mov
push
xchg
adc
fucomip
pop
jmp
les
xor
fs
adc
outsl
pop
pop
shl
sub
popf
mov
in
ds
fstp
or
mov
jmp
insb
add
xor
ds
icebp
inc
lods
xor
jo
pop
aas
dec
lahf
dec
call
imul
add
outsb
mov
movsl
inc
aaa
fdivr
sbb
xchg
push
jmp
sahf
inc
ljmp
nop
xchg
or
sbb
ret
pop
mov
jmp
sbb
xor
fsubs
add
jmp
scas
pop
adc
xlat
mov
movsl
bound
mov
or
xor
mov
imul
add
or
add
xchg
add
add
orl
cmp
mov
lods
ficoml
inc
pop
ja
adc
jmp
pop
pop
jns
pop
scas
test
pop
ljmp
pop
push
sahf
dec
adc
dec
dec
mov
xor
xor
add
cmp
aad
in
jmp
int
leave
lea
fsubrs
inc
sub
and
jns
iret
sub
lods
mov
popf
lods
prefetch
ds
xchg
fwait
mov
scas
push
mov
scas
out
jno
aam
push
lds
lea
jmp
loop
sub
cmp
pushf
jmp
clc
in
mov
mov
cmp
mov
fucomp
pop
xor
push
cmpsb
jl
jmp
fs
ret
leave
int
jmp
fimuls
mov
sbb
loopne
sub
lret
sub
daa
ljmp
roll
sbb
jmp
add
push
jmp
and
mov
scas
push
mov
lds
adc
mov
lret
testl
mov
sbb
out
push
xchg
cmpsb
lods
mov
call
ret
sub
imul
sti
cli
and
je
pop
xchg
mov
jp
or
cmp
jmp
notb
sub
mov
inc
insb
lods
ret
scas
mov
fidivrl
jecxz
mov
jmp
test
sarb
or
fwait
or
sbb
mov
jmp
stos
addb
pop
out
sti
imul
add
xor
lods
push
scas
adc
sub
and
sub
aad
andb
or
fsubrl
mov
jmp
xchg
add
dec
and
jl
xor
mov
arpl
jb
mov
add
xchg
data16
and
mov
lods
sub
pop
pop
pusha
scas
cmp
mov
or
imul
fs
jmp
sbb
fidivrs
ja
mov
sbbb
cmp
xor
mov
jnp
xchg
xor
add
jl
fdivrs
lods
and
or
iret
cmp
jmp
lock
and
push
cmp
add
push
fbld
ret
adc
xchg
mov
outsl
enter
adc
cmc
mov
data16
mov
or
lods
es
scas
pop
mov
das
rol
and
out
pusha
ret
mulps
xor
jge
dec
jp
pushf
fwait
inc
mov
lods
and
daa
fsubrl
xchg
pop
and
and
jmp
outsb
arpl
test
inc
xchg
mov
push
imul
sub
pop
fwait
lea
mov
sbb
scas
pop
cmc
fbld
sub
in
int3
push
out
add
jmp
cmpb
sysret
sub
cmp
aam
and
fwait
jmp
daa
aaa
xchg
and
fstps
adc
jmp
mov
mov
inc
adc
mov
lods
cmc
sub
out
jnp
adc
xor
sub
adc
jmp
insb
insl
cwtl
jb
sahf
sti
sbb
cmp
adc
jmp
mov
leave
test
scas
lods
jae
push
sub
mov
jmp
inc
aam
xchg
in
lock
mov
imul
fcomi
jmp
mov
or
cld
jge
popf
mov
mov
adc
imul
push
lods
insl
int3
lock
jmp
lahf
add
push
pop
mov
leave
cs
cmpsb
jb
es
sub
scas
ss
pusha
jmp
push
loope
add
insl
jmp
test
xlat
sub
lock
std
das
loope
add
testl
pop
shrl
sub
adc
pop
insb
sbb
jmp
mov
mov
lret
adcl
sub
popa
push
imul
xchg
fldenv
jbe
xchg
loop
or
push
pop
jns
xchg
sub
jmp
mov
in
add
mov
rclb
addr16
mov
jmp
cli
mov
jns
out
add
and
pop
lods
fwait
xchg
sbb
or
dec
hlt
stos
imul
rcrb
fsubrp
pop
in
mov
xchg
jl
sub
insb
jmp
clc
out
sub
dec
rolb
mov
jmp
mov
subb
add
loopne
pop
xorl
add
jmp
jg
shll
add
xor
sub
jmp
mov
dec
shr
mov
jae
sub
pop
int3
jmp
xor
or
ficoml
jmp
jne
mov
jp
int
fs
jle
push
mov
jmp
or
je
repz
push
aas
lret
lods
flds
inc
pop
push
sub
add
sub
ficompl
mov
jmp
sti
pop
sbb
mov
cmp
sub
and
add
rcll
cmc
jmp
pop
in
test
cltd
pop
movsb
dec
cmpsb
imul
add
sbb
in
sub
fsubrp
or
jo
fstpt
fsts
and
dec
add
test
imulb
jmp
test
xchg
mov
fs
test
frstor
ja
ljmp
fbld
xchg
arpl
push
lret
insl
insb
cmp
mov
mov
xlat
or
repnz
dec
mov
pop
sub
xchg
test
xchg
f2xm1
es
sahf
cmp
fiadds
cmp
adcb
imul
je
jo
test
cmp
dec
mov
cmp
push
xchg
jecxz
sbb
mov
cmp
lret
adc
adc
mov
icebp
lods
movsl
sbb
data16
push
jb
repz
sti
jl
mov
in
stos
jmp
hlt
or
subl
jo
dec
ja
cltd
xchg
and
lahf
xor
xchg
test
dec
pop
psadbw
lods
push
bound
mov
rcrb
es
aas
arpl
in
lods
fldl
pop
or
push
imul
fcomps
pop
jmp
sub
push
pop
orb
jmp
and
pop
rcrl
jmp
aas
out
cltd
clc
cmp
mov
jo
lds
stos
pusha
out
mov
jmp
xchg
mov
lods
lea
and
cmp
call
shrb
aaa
jns
repz
test
jmp
aas
pusha
mov
repz
jmp
add
sbb
inc
jecxz
repnz
push
and
jmp
jnp
mov
lods
mov
xor
or
das
in
mov
inc
test
xchg
sub
jmp
jl
ds
andb
mov
push
lahf
and
subl
jmp
cmpsl
xor
jmp
jle
icebp
adcl
add
cltd
lcall
in
sahf
je
add
push
dec
imul
sbb
lahf
enter
in
pop
shr
pop
jmp
mov
sbb
movsl
adc
je
cmp
test
sub
mov
aaa
xor
mov
nop
jmp
ja
adc
rol
sbb
data16
xchg
lahf
pop
lods
jmp
dec
out
shl
pop
jp
testl
aad
lock
sub
idivl
dec
jmp
mov
jecxz
arpl
add
lods
push
sbb
jmp
push
sbb
imul
push
adc
lahf
addl
scas
jmp
sbb
push
adc
rcrl
jb
push
fldl
lea
fsubr
sarb
dec
lahf
stc
out
sbb
add
popf
aad
push
inc
sbb
mov
jno
mov
sub
adc
sbb
sbb
xor
ffreep
lock
bts
and
jmp
gs
xchg
cltd
lods
daa
addr16
cmc
jns
in
ja
jmp
ret
dec
fildll
fidivrl
mov
pop
cmpb
inc
or
insl
jecxz
inc
fcomps
mov
jne
mov
std
sub
jmp
adc
jo
out
mov
add
rcr
jmp
pop
fs
mov
pop
fimull
sub
sub
aaa
xor
in
loope
shrl
or
mov
xchg
xchg
imul
sbb
out
push
inc
neg
arpl
scas
test
jo
add
jmp
jbe
dec
and
xchg
mov
add
outsl
popa
shll
and
shll
add
push
dec
addr16
loopne
and
or
jno
jmp
int3
adc
inc
jmp
or
sbb
adc
rclb
stos
maxps
ss
mov
push
repz
jl
int3
jmp
fsub
sub
jmp
jae
cltd
dec
movl
jmp
inc
int3
pop
in
jg
aam
pop
or
mov
jmp
add
shlb
pop
subb
daa
dec
push
out
jmp
jne
lock
mov
cmovns
push
iret
mov
or
lods
jmp
fimull
pusha
insb
pop
add
jnp
mov
mov
repz
movsb
hlt
mov
sub
cwtl
jnp
pop
sbb
es
jmp
sbb
lea
icebp
inc
mov
out
fmul
jne
jmp
sbb
bound
pop
mov
jmp
push
pop
cmp
aad
adc
inc
cmp
add
pop
cmp
mov
icebp
push
daa
lock
dec
jnp
jmp
pop
cmp
cmp
and
sti
and
pop
scas
cmp
add
ds
sbb
popa
lock
aas
into
pop
add
loopne
scas
ret
fwait
jmp
mov
mov
xor
mov
or
push
ds
xchg
iret
sbb
pusha
push
cmpsl
mov
loopne
movsl
and
add
jb
jmp
inc
arpl
cmp
je
add
enter
xlat
adc
aas
pop
scas
scas
aad
int3
leave
mov
jmp
cwtl
xlat
stos
jp
repnz
lds
test
jmp
xor
jns
in
pop
jg
adc
jae
dec
jo
int
cmc
pop
xor
jmp
xor
jb
call
mov
pusha
mov
fnsave
iret
ds
dec
inc
push
inc
loop
testb
add
shrd
xchg
jmp
pushf
xor
jmp
hlt
mov
and
psubq
jle
test
push
sti
shl
cmp
jmp
sub
pop
xchg
sub
out
xor
into
or
pop
aad
pop
int3
inc
fs
jmp
test
les
int
jmp
jge
pop
es
mov
pop
dec
push
into
push
aad
daa
insb
pusha
cmp
int
daa
sti
or
test
subl
leave
sbb
and
or
push
mov
imul
jmp
add
lcall
clc
jae
aas
jb
sarl
mov
lods
and
cmp
pop
mov
sub
sub
out
sub
cmp
cmp
sub
dec
pop
stc
sbbb
scas
test
dec
jo
sbb
in
dec
fucomi
testl
xchg
lds
jmp
push
sbb
call
pop
sub
idivl
cmp
pop
out
dec
push
imul
movsb
stc
mov
sub
dec
jmp
int
xlat
insb
xchg
arpl
out
jno
mov
push
push
push
cmpsl
xor
sub
orl
int
mov
push
dec
ljmp
testl
push
mov
and
out
in
sub
stos
or
inc
aaa
ret
xchg
inc
jmp
stos
repz
dec
add
insl
xor
xchg
ja
cmpsb
je
adc
lods
out
sub
ret
xor
scas
cltd
xor
sbb
inc
mov
stos
inc
imul
sbb
sti
mov
mov
sti
dec
and
les
cwtl
mov
push
cmc
lods
jl
push
aam
adc
xor
leave
inc
testl
test
add
push
push
call
push
push
incb
pop
pusha
sub
bound
and
in
scas
sbbb
or
test
mov
pop
pushf
xor
push
jge
in
imul
aam
test
leave
mov
shlb
jmp
inc
das
test
jo
mov
les
push
je
cmp
stc
mov
adc
inc
outsb
inc
shr
fxch
push
jbe
cmp
mov
cmp
ret
adc
jle
fwait
sub
lods
pop
or
clc
jmp
stos
mov
scas
jmp
popa
cmp
out
das
mov
jle
sub
jmp
jge
push
lahf
or
popf
jmp
test
fildll
jns
inc
ja
inc
sahf
and
cwtl
jmp
addl
xchg
xchg
pop
or
mov
pusha
es
lods
in
pop
imull
shlb
adc
jecxz
dec
mov
jmp
dec
mov
repz
out
aas
lret
call
xchg
add
js
inc
inc
push
push
loop
data16
cmc
movsl
dec
lods
ja
bound
pop
jmp
push
loopne
ret
sbb
mov
add
dec
jns
inc
jmp
pushf
or
and
dec
jmp
cltd
xchg
movsl
sub
xor
sub
mov
pop
push
pop
sbb
enter
in
mov
subb
lods
add
mov
cmp
jb
sbb
sti
pop
jbe
in
nop
sub
rorl
ret
je
pop
inc
jmp
mov
push
or
mov
jb
or
push
push
int3
aaa
jmp
sbb
arpl
daa
fwait
push
push
jmp
mov
adc
jno
jmp
adc
pop
jmp
in
arpl
jle
jmp
into
int
and
out
lods
mov
repz
loopne
daa
adc
or
jmp
lods
add
iret
imulb
xor
dec
push
xchg
mov
add
add
push
in
mov
stos
bndstx
jmp
lahf
and
mov
sbbl
or
lret
call
jmp
cmp
aas
icebp
cmp
and
jmp
jns
and
cmc
add
int3
test
cs
inc
adc
xor
and
out
jmp
mov
pop
adc
mov
cs
xchg
dec
jb
mov
ret
sub
loopne
jecxz
pop
and
cmp
int
mov
shr
cltd
and
inc
divb
arpl
cmp
scas
add
mov
stos
je
jne
adc
add
in
jmp
push
jle
cmc
xchg
pop
insb
jmp
out
les
cmp
ljmp
sbb
imul
pop
mov
sbb
mov
lods
sbb
mov
jmp
mov
test
push
inc
sub
xor
or
mov
and
pop
mov
adc
mul
jmp
dec
ret
xor
je
mov
fadd
test
lods
mov
mov
imul
fwait
cld
jmp
sub
pushf
jmp
cwtl
jo
mov
or
mov
dec
loop
repnz
les
lods
fidivrl
push
int3
test
jg
mov
jo
mov
divl
loop
jecxz
or
xorl
xor
dec
adc
mov
sbbb
jge
mov
pop
mov
pop
jns
scas
and
xchg
mov
popf
lret
mov
adc
jmp
and
stos
or
insl
mov
filds
jmp
idivl
mov
xor
sti
mov
jg
jmp
pop
test
push
jmp
lods
in
rclb
xlat
fsubr
xor
repz
xor
mov
test
sbb
jmp
and
loop
and
cmp
fdiv
adc
aam
iret
dec
mov
int3
fcmovne
and
addb
lret
inc
sbbl
push
jmp
lods
inc
jno
sarb
xchg
fsub
push
pop
jmp
xor
fistps
push
fldenv
jmp
xlat
jb
cli
sub
sub
test
pop
push
cmp
das
lock
sbb
xchg
dec
sbb
sbb
jmp
jb
cltd
int
xchg
jmp
adc
lret
dec
adc
dec
mov
and
jmp
mov
or
jmp
fcmovnb
test
dec
fwait
jmp
jl
cmpsl
cld
ret
jmp
fistps
das
out
or
fwait
jmp
and
sbb
jmp
pop
sahf
push
cltd
lcall
jae
mov
out
aaa
or
scas
mov
jmp
pop
int
cmpsl
mov
or
pop
jmp
cmp
addr16
add
sub
cs
leave
jno
mov
sar
jge
rolb
cmpsl
movsl
lods
push
dec
int
pop
fcomps
jmp
stos
push
cmp
pop
pusha
push
enter
movb
insl
mov
xor
push
jmp
xor
and
mov
add
jmp
cmp
imul
popa
imul
mov
ret
inc
cmp
and
call
inc
jmp
mov
insb
outsl
jmp
fisttpll
inc
fxch
mov
xor
scas
aad
jp
fcoml
test
mov
fdivs
int3
sbb
xchg
jmp
out
lods
sub
popf
roll
stc
sahf
jmp
mov
or
sub
push
sub
daa
movsb
jmp
and
test
lret
jmp
add
push
xor
jge
push
pushf
xor
pop
aas
add
int
fsubl
cmp
fwait
sub
std
imul
jns
or
insl
xchg
lods
dec
push
pop
sti
aas
jmp
js
jmp
fiaddl
push
mov
cmp
jbe
add
in
push
cmp
mov
lods
addr16
and
mov
js
shll
and
loope
or
dec
dec
inc
clc
jae
jmp
lea
mov
lods
and
mov
push
jne
fiadds
repz
testb
jmp
lea
loopne
or
add
push
pop
sub
mov
sub
lahf
lods
aaa
stos
in
leave
lea
push
arpl
adc
ss
cltd
lods
sub
and
rclb
push
insb
sub
push
lret
stos
pushf
mov
sub
mov
rcrb
lods
xchg
daa
pop
jno
dec
outsb
mov
or
pusha
push
jmp
mov
aaa
xor
xchg
jbe
xor
jmp
mov
cmpsl
imul
adc
inc
jmp
out
add
movb
cmp
mov
jecxz
daa
mov
and
jmp
cmp
lea
andb
push
movsb
test
pop
cld
call
dec
and
scas
and
movsl
inc
sbb
add
xchg
pop
or
ret
dec
jmp
jl
dec
pop
daa
cmp
jp
into
mov
inc
or
cmp
out
ljmp
xchg
pushf
push
mov
or
lds
outsb
test
inc
pop
cmp
jnp
ss
jge
jmp
les
push
or
insl
jmp
je
xchg
cmp
dec
std
out
iret
pop
jbe
jmp
test
add
jmp
dec
mov
iret
mulb
xchg
sub
loopne
fs
sbb
inc
icebp
xor
push
mov
xor
sub
sub
cmp
mov
fwait
popa
inc
and
lcall
mov
js
cmp
repz
jl
dec
mov
inc
mov
xor
sbb
mov
pop
push
mov
or
or
xchg
push
int3
pop
mov
cmc
jmp
and
andl
sti
mov
out
or
je
cs
rorl
inc
lods
push
dec
jge
and
hlt
lods
leave
aaa
xchg
adc
push
ljmp
enter
xor
in
push
in
shlb
jmp
addr16
fwait
mov
fstps
lahf
cmp
adc
mov
scas
adc
jbe
lret
pop
dec
sbb
cmc
insb
and
in
dec
jmp
pop
add
mov
and
fnstcw
sub
jb
in
imul
push
push
enter
xor
loop
mov
mov
jmp
adc
cmp
test
sbbb
lock
jmp
mov
imul
add
xchg
pop
jae
push
repz
test
lea
rcll
jmp
mov
push
mov
lahf
call
shrl
add
adc
in
or
pop
jne
or
mov
cmp
arpl
daa
mov
lea
test
push
scas
and
xor
xor
lods
mov
je
cmc
ss
push
dec
sub
test
icebp
stos
iret
es
inc
jns
scas
sub
sbb
mov
aam
jmp
mov
rorb
fsubrp
pop
int
adc
mov
mov
outsl
pop
mov
jmp
rcr
xchg
nop
jmp
call
test
or
loop
mov
insb
test
cmp
stc
jmp
jo
xor
pusha
xchg
sbb
shr
movsb
mov
mov
in
jmp
lret
cltd
inc
jmp
cmc
and
jno
cmp
jmp
rcrl
dec
je
sub
mov
imul
test
sub
jne
ret
pop
daa
inc
mov
dec
pop
scas
cmp
insb
lahf
inc
int
out
out
mov
jmp
push
sub
jno
or
inc
push
pop
les
mov
stos
shrl
push
data16
jo
fwait
aam
std
dec
scas
daa
add
cltd
cmpsl
imulb
mov
bound
xor
xchg
mov
pop
pop
xchg
cmp
fsubl
jb
cmp
js
in
pop
cmpsl
jb
fbld
or
lret
rol
aam
daa
ds
sub
fistps
ret
jns
daa
nop
hlt
jmp
fimuls
insb
dec
loopne
mov
add
fldenv
jmp
adc
inc
inc
pop
sbb
and
clc
imul
jbe
adc
ret
xchg
das
loop
pslld
hlt
and
lock
jmp
scas
mov
jecxz
push
dec
mov
rorb
push
sub
xor
js
in
popf
xchg
sbb
mov
add
andl
jno
repnz
jmp
xor
cmpsl
mov
sti
dec
and
test
aas
adc
scas
push
fcoml
iret
add
lods
jmp
sbb
scas
jmp
xchg
adc
xchg
sub
loop
ss
pop
inc
sahf
jmp
xor
repnz
add
jmp
sbb
scas
mov
and
jmp
add
and
lea
jmp
sub
sub
lcall
fs
jmp
aad
fwait
popf
mov
iret
mov
negb
pop
jmp
test
es
repnz
int3
sbb
mov
ficoms
js
xchg
and
pushf
pusha
jmp
addr16
push
test
inc
dec
and
jp
mov
fstpt
push
je
cmpsb
mov
inc
nop
and
jb
imul
sti
cmp
into
mov
out
imul
cmp
shr
in
paddusb
xchg
mov
outsb
popa
lods
insb
xor
outsl
and
arpl
dec
imul
push
add
jae
pop
sub
sbb
lahf
pop
pop
clc
xorl
addr16
scas
jg
push
cmp
push
jb
mov
popa
push
sub
imul
mov
jmp
and
mov
repz
adc
dec
mov
clc
push
dec
outsb
ret
pop
ljmp
fucomi
and
push
push
push
mov
jmp
mov
jo
hlt
jmp
pop
dec
sahf
xchg
xchg
add
jmp
inc
ret
mov
jmp
jne
sbb
or
adc
dec
dec
jns
ret
jmp
jb
inc
enter
jmp
push
cltd
lods
ja
xor
movsb
fildl
sub
push
arpl
jmp
mov
cmp
into
push
jmp
dec
dec
loop
push
and
jmp
iret
fisttpl
sub
insb
cmp
jecxz
outsb
fcoms
jo
adc
xchg
popa
mov
pop
dec
repnz
xor
jns
sahf
sub
ret
js
and
sub
jne
xchg
stos
jmp
push
adc
les
test
lock
mov
push
jg
and
cmp
ss
mov
scas
leave
and
mov
ljmp
fistps
dec
jns
subb
imulb
lret
inc
cwtl
mov
mov
jns
xchg
repz
sub
and
push
jmp
xor
sahf
nop
icebp
xchg
repz
jge
cmp
jb
enter
push
jo
dec
jmp
or
mov
jmp
add
mov
push
mov
das
clc
je
test
inc
jb
xchg
repz
sub
ss
sub
xchg
push
mov
or
pop
cli
lds
movsl
add
leave
mov
mov
xchg
in
and
sbb
inc
movsl
into
add
adc
jmp
shrl
or
sub
mov
push
hlt
or
xchg
push
jmp
xchg
scas
and
jmp
dec
cmp
jnp
adc
xor
shr
sti
push
loope
ds
lods
jmp
xchg
xorl
and
std
out
jp
test
push
add
jb
push
ret
pop
vpcmpeqw
pop
arpl
icebp
pop
sbb
or
push
sbb
inc
mov
sub
mulb
and
shl
and
and
and
repz
hlt
lods
setns
enter
inc
test
ljmp
addb
mov
sbb
addr16
cmp
lock
into
jae
push
jmp
adc
shll
dec
jg
lahf
sub
mov
test
mov
pop
in
shl
stos
sbb
or
aas
pop
inc
shlb
push
outsb
cmpsl
aaa
aad
cmp
pushf
lea
loopne
data16
jmp
aad
xchg
ljmp
insl
fiaddl
dec
mov
test
push
jb
std
shr
jns
cmp
xor
pop
mov
mov
push
test
adc
cmpsl
repnz
fists
jmp
test
dec
stos
mov
je
ret
lock
jmp
adc
ds
and
pushf
cmp
sbb
inc
mov
jno
dec
mov
jmp
test
sbb
int
test
jmp
and
jl
out
jbe
subb
pop
xchg
and
movsb
pushf
cmp
mov
jmp
pop
jmp
repnz
sub
dec
and
xchg
sbb
jmp
xor
popf
minps
sbb
daa
call
not
sbb
lods
sub
mov
les
and
push
jb
adc
inc
in
inc
ret
outsl
jg
repnz
jecxz
sub
jmp
inc
les
fnstcw
xor
xchg
inc
cmp
adc
jge
inc
sub
xchg
and
dec
pop
mov
test
jmp
test
mov
outsl
pop
xor
fcoms
dec
sub
mov
and
mov
mov
jae
scas
jle
iret
int
int3
mov
fadds
sub
subb
push
jmp
add
jp
les
aad
pop
comiss
pop
jmp
popa
xchg
hlt
jecxz
jmp
push
sub
mov
mov
or
inc
add
mov
insl
pop
jmp
jns
jo
jg
jmp
push
sub
pop
stc
arpl
cmc
mov
shll
outsl
scas
shlb
shll
daa
xor
adc
add
jmp
xchg
pop
sahf
std
mov
pop
int
imulb
or
inc
pushf
jmp
fisubrl
divl
or
xor
jbe
dec
pushf
lahf
add
mov
mov
inc
por
stos
xchg
in
fcoml
dec
scas
stos
or
mov
xchg
in
std
jnp
das
jmp
les
int
jp
push
and
xchg
arpl
mov
rcr
adc
ficoms
cmc
adc
sub
mov
add
and
pop
popf
lahf
lret
imul
mov
mov
repnz
xchg
pop
shrl
mov
jae
scas
jno
int3
dec
dec
lds
ror
pop
cltd
pop
xchg
cmpl
add
xchg
sbb
or
dec
scas
fadds
jmp
pop
jmp
pusha
cmpsl
dec
iret
outsb
and
insb
xor
sub
shrb
sbb
shlb
inc
dec
jns
mov
xor
aam
jmp
aaa
in
lea
pop
mov
mov
cmp
mov
pop
jmp
or
adc
jmp
into
sub
shl
xchg
test
jge
pop
popa
lods
jmp
fistpl
or
push
mov
and
dec
adc
and
push
mov
or
mov
dec
or
jb
ret
sbb
out
ljmp
mov
add
shll
and
les
ror
push
divb
aaa
jmp
sub
ljmp
popa
lods
aas
lahf
mov
dec
cltd
rclb
jmp
fdivl
jmp
push
sti
jo
xor
ss
adc
xor
std
scas
sub
pmullw
sub
adc
jmp
mov
push
fs
inc
and
stc
in
cltd
sub
fwait
xchg
push
sbb
mov
lods
rcll
fsts
mov
add
or
xchg
in
mov
jmp
sub
stos
mov
inc
cmpsb
repnz
jbe
cmp
shll
add
inc
movb
lret
mov
loopne
fs
push
clc
inc
jmp
call
imul
mov
out
or
repnz
pop
lahf
dec
popf
sub
push
sub
or
out
jmp
mov
add
shr
pop
push
hlt
into
xchg
jmp
movsb
out
push
pusha
pop
jo
lea
lret
cmc
sti
xlat
addl
shlb
aam
jne
scas
inc
inc
mov
cs
outsl
in
stos
jmp
adcb
mov
jmp
or
loope
jmp
xchg
jns
call
xor
sub
scas
inc
jg
sbb
inc
andb
shr
sbb
or
mov
cltd
std
bound
xchg
jmp
jne
sbb
xchg
or
sub
or
inc
xor
push
imul
push
inc
mov
jb
adc
push
sbb
arpl
bound
imul
jmp
call
call
ret
jl
inc
adc
mov
or
fcompl
jmp
adc
aas
lods
mov
mov
inc
jbe
push
fmuls
js
xchg
jnp
popf
popa
xchg
lret
xlat
add
push
or
lea
fldl
fsubrs
scas
or
jno
push
or
es
sbb
cmpsb
and
cmp
fwait
daa
cs
negl
in
inc
xor
push
cmp
aaa
out
sbb
jmp
loop
push
sar
aad
pop
divl
aam
xor
adc
push
call
lret
inc
loop
jmp
sbb
addr16
out
jge
jmp
mov
xchg
leave
mov
pop
pop
shrb
es
pop
fcompl
mov
cmp
lds
es
mov
insl
jmp
cmc
sub
mov
jg
xchg
stos
ds
xchg
lret
aam
dec
in
xor
scas
push
lods
adc
jmp
xchg
sub
aas
adc
cmc
cld
jae
insb
adc
call
push
pop
rcl
mov
xchg
pop
pop
jmp
jge
push
sarl
push
sub
ror
addb
loopne
lods
lahf
and
jmp
ret
cwtl
or
dec
or
sub
insl
lret
dec
lea
mov
daa
mulb
inc
lods
or
add
icebp
jmp
aaa
push
lods
lock
pop
mov
add
fistpll
mov
push
scas
push
xor
sti
adc
clc
fucom
jp
lock
pusha
roll
and
stos
push
sub
repnz
outsl
ljmp
dec
or
bound
lret
leave
pop
mov
sbb
mov
imul
packsswb
sahf
shrl
mov
lret
and
pop
loope
cmp
sbb
scas
lock
shr
lods
dec
adc
jnp
outsb
sub
in
pusha
imul
push
cli
mov
jmp
jge
roll
sub
mov
in
mov
ss
test
test
xor
lahf
mov
mov
cmp
aaa
cmpsb
sbb
lds
hlt
loop
add
cmp
out
mov
cmp
mov
sti
shll
jbe
sbb
cmp
or
sbb
push
test
mov
dec
jmp
mov
fcmovnb
sbb
lods
mov
push
mull
xor
sti
sub
test
mov
addb
jmp
in
mov
sbb
pop
xchg
stc
lods
cmp
jg
mov
icebp
es
jmp
dec
iret
mov
sub
jmp
mov
pop
arpl
sti
jp
dec
mov
dec
xchg
sub
jmp
fildll
mov
sbb
sub
test
jb
bts
adc
mov
xor
cwtl
jmp
lea
imul
cmp
ds
je
adc
inc
and
mov
jmp
test
sub
add
lods
and
in
mov
adc
jne
xor
add
ret
in
jmp
rolb
inc
jmp
sbb
mov
jmp
cmp
daa
lods
sub
sub
in
inc
dec
xchg
cs
pop
cltd
cli
nop
xor
dec
mulb
jnp
js
sub
mov
xor
jmp
iret
hlt
or
adc
dec
jmp
frndint
xor
cmp
pop
inc
jmp
xchg
cmp
or
lods
push
into
call
daa
lods
jle
xchg
cmpsb
add
jmp
clc
dec
mov
mov
push
insb
sbb
flds
jnp
cmp
ja
push
loope
xor
sub
mov
icebp
decl
lods
pop
xchg
lods
pop
stos
jmp
sbb
mov
or
cmp
leave
add
sub
aaa
inc
lret
inc
addr16
xchg
leave
adc
es
add
cs
mov
jmp
inc
jl
in
inc
movsb
imul
and
xor
and
sbb
jmp
stos
dec
pop
push
out
enter
mov
test
cmp
mov
cmp
imul
sbb
pop
adc
xchg
push
mov
lret
in
xor
stos
add
jmp
adc
aaa
rorb
int
adc
gs
clc
out
lods
adc
iret
adc
in
xchg
les
mov
cmp
and
xor
mov
bound
sub
insl
int
sti
inc
repnz
sub
sub
ljmp
jg
hlt
pop
jle
or
adc
mulb
push
cmp
stos
ja
in
mov
or
push
stos
daa
sbb
xchg
xchg
jmp
jno
lahf
call
inc
mov
sbbl
jmp
xchg
fstpl
fs
xor
jns
adc
repnz
mov
mov
mov
inc
adc
adc
mov
je
testb
xor
js
mov
adc
das
jmp
push
mov
lods
add
pop
xchg
push
sbb
xchg
and
dec
jle
adc
jmp
popl
mov
mov
xor
stos
xchg
imul
fistps
adcb
ja
test
iret
ret
dec
dec
movsl
lods
popa
push
daa
addr16
scas
pop
cmp
push
dec
fucomi
xchg
xchg
mov
and
aas
and
dec
xor
mov
jmp
cs
ds
rcl
lods
aaa
pop
push
nop
pop
or
jmp
loopne
and
adc
jmp
or
enter
nop
mov
xchg
push
sub
shll
push
insb
out
scas
jmp
pop
lds
xorb
sub
pop
xchg
mov
push
hlt
negl
jmp
mov
pop
cltd
lods
jb
jmp
cwtl
scas
sub
arpl
sbb
pop
jmp
mov
dec
jp
jmp
pusha
mov
subl
aam
mov
movsb
sbb
add
hlt
and
mov
jmp
push
sbb
jmp
lock
cli
mov
pop
jb
jmp
into
and
lods
jmp
ffree
push
stos
pop
movsb
xor
repz
sahf
popa
sub
sbb
aad
jmp
sub
jbe
jb
jg
sti
adc
jmp
imul
popf
enter
mov
mov
lcall
mov
sbb
jg
mov
cld
push
add
lds
jmp
cmp
ds
push
and
pop
daa
arpl
push
lahf
jne
jnp
in
jmp
fcoml
sbb
js
jmp
pop
stc
movsl
test
push
cmp
movsb
and
icebp
insl
lods
pop
and
mov
mov
adc
mov
or
pop
pop
mov
inc
dec
add
and
push
or
frstor
dec
aad
push
pushf
cmpsb
push
cmp
xor
movsl
xchg
cli
jb
or
pop
leave
movsb
mov
aaa
aad
ret
mov
xchg
lds
dec
rorl
push
sbb
nop
stc
scas
mov
mov
jo
jbe
sub
adc
mov
jmp
pop
outsb
dec
mov
mov
out
enter
lret
jno
dec
mov
scas
adc
fdiv
mov
sti
lahf
fcoml
jmp
sahf
pop
sbb
mov
leave
jnp
adc
or
in
sbb
mov
cwtl
cmpsb
shr
ret
sbb
jl
out
or
cmc
lcall
mov
jne
pop
fucomp
add
push
sahf
loopne
scas
or
mov
insb
stc
inc
adc
pop
fistpll
sub
mov
inc
xchg
mov
clc
sbb
jmp
std
test
push
mov
mov
push
lods
lds
inc
notb
sbb
xor
adc
in
test
fidivrs
add
push
mov
xchg
insl
sbb
mov
cld
daa
jecxz
add
shr
xchg
sbb
push
sub
adc
inc
add
sub
and
jb
mov
adc
xchg
lds
jmp
stc
and
fstpl
sub
enter
mov
jmp
inc
popf
mov
push
add
imull
and
scas
jnp
mov
xchg
in
imul
adc
mov
mov
js
push
stos
jp
mov
inc
jmp
jecxz
sub
mov
iret
dec
sub
adc
adc
lahf
call
push
addr16
in
mov
sub
push
mov
lret
mov
scas
movsb
rcrl
or
filds
lahf
jl
mov
leave
mov
sbb
cmpsl
sub
mov
push
popf
fcmovnu
mov
test
inc
outsb
or
sti
sub
outsb
je
popa
dec
mov
aas
test
sbb
cmpsb
scas
mov
pusha
or
sub
sub
and
mov
adc
cmpl
mov
insl
add
out
ret
pop
mov
iret
push
stos
int3
fwait
adc
jmp
fsqrt
jge
or
cmp
dec
lods
int
inc
das
sbb
stc
sbb
jmp
sub
mov
fstpt
mov
insb
mov
scas
in
das
rol
fs
xorb
jmp
js
push
jg
xlat
jmp
pushf
xor
subb
lcall
add
sub
dec
pop
sub
stos
aas
mov
in
lods
stos
cs
jmp
sbb
sub
push
call
jge
lods
sub
mov
and
cld
or
pop
pop
xor
jmp
mov
sbb
xchg
jmp
xor
fadd
aaa
jmp
push
jne
mov
inc
xchg
movsb
imul
dec
pop
xchg
int3
or
inc
add
jns
lahf
xlat
shufps
jno
sub
mov
push
add
push
pushf
add
mov
sub
push
jmp
sbbl
fucom
sbb
movl
jmp
hlt
addl
pop
icebp
xor
clc
sub
push
test
mov
popf
mov
jmp
hlt
mov
sub
std
mov
rcll
aam
int3
in
imul
fisttps
cmp
push
imul
rcrl
jg
or
testl
pushf
pop
xor
cmpsl
lock
nop
mov
sub
mov
jns
add
push
xchg
mov
scas
pop
sub
add
lods
cli
fnstcw
and
mov
cs
sti
mov
loop
imul
sbb
lea
cmpl
xchg
lods
test
inc
aaa
jnp
lods
mov
mov
aad
push
mov
bound
movsl
cmp
and
arpl
mov
bnd
inc
aam
jns
sbb
adc
cltd
test
stc
jmp
repz
aad
iret
js
adcl
fxch
push
cmp
adc
lods
sbb
lods
xchg
jmp
outsl
test
lods
fcoms
lret
ds
negb
adc
mov
pop
inc
les
pop
jmp
clc
hlt
mov
sub
pop
sub
mov
push
out
outsl
jmp
cmp
loope
cli
je
scas
xor
add
jmp
fadd
fs
inc
xor
fdivrl
adc
js
fistpl
pushf
and
pusha
push
rclb
xchg
jmp
shr
sbb
mov
jno
imul
mov
mov
mov
lea
xor
or
mov
add
pop
test
jmp
lcall
jmp
insl
js
mov
or
pop
pop
xor
jnp
movsb
and
inc
out
add
jmp
ds
shll
inc
movsl
or
jg
mov
cmp
xchg
mov
mov
stos
pop
movsl
je
jmp
push
xor
lods
pop
call
shr
jmp
out
outsb
loope
jns
lods
cmp
add
jno
cltd
and
fbstp
lock
sub
or
pushf
jne
sbb
in
jmp
iret
rol
pop
lods
push
aaa
cmp
push
and
jbe
jmp
mov
testl
lea
scas
lods
lahf
cwtl
sub
scas
imul
ja
sti
out
adc
cltd
sbb
sub
xchg
inc
inc
xchg
outsl
repz
hlt
out
inc
and
dec
sub
mov
jmp
in
sub
jmp
mov
bound
push
adc
pop
push
xor
mov
lods
mov
jecxz
test
sub
and
jl
loope
daa
dec
sbb
lods
push
or
hlt
shrb
jp
mov
pop
lock
or
and
sub
lods
sub
enter
mov
insl
not
daa
jmp
loope
mov
arpl
jmp
fcomps
mov
mov
mov
arpl
iret
or
leave
fwait
or
push
fadd
sbb
jno
xchg
inc
fdivp
and
lret
pop
adc
jle
leave
xlat
sub
orb
sub
cmpsl
jmp
fdivr
push
je
pop
mov
imul
and
test
imul
pop
sar
insl
mov
jmp
jl
sub
mov
adc
das
test
jmp
scas
inc
nop
clc
pusha
mov
jmp
lds
mov
jmp
push
into
idiv
aas
mov
xchg
and
mov
jae
mov
loope
leave
xchg
adc
dec
pop
jo
jno
outsb
out
mov
sub
dec
add
push
pop
or
sbb
test
jp
fmuls
scas
jmp
xor
pusha
fdivrp
lods
enter
xchg
pop
lret
pop
loop
cmp
es
mov
xchg
mov
jmp
sbb
mov
shrb
mov
test
ret
push
sbb
xchg
mov
loop
cltd
mov
pop
clc
add
stos
xlat
push
jmp
movsb
xchg
rclb
mov
mov
jge
insb
shll
xorb
jmp
stc
jle
insl
cmp
jmp
push
push
sub
std
imul
cmp
push
and
sub
cld
icebp
add
jmp
xlat
cmpsb
inc
loop
mov
jecxz
xchg
add
xchg
pop
jns
jmp
bndldx
jmp
jmp
inc
ljmp
mov
add
ja
insl
jmp
rcll
testl
popa
jb
fnstsw
jmp
lock
lcall
lods
adc
jmp
xchg
fs
hlt
lret
mov
std
sub
bts
inc
jmp
in
icebp
bnd
lock
jmp
or
aas
xor
cmp
pop
out
repz
adc
or
jmp
stc
dec
xor
xor
stos
outsl
lret
cli
push
or
mov
arpl
test
jb
nop
cmp
and
cmc
xchg
out
pop
jmp
push
pusha
cmp
jb
int
sti
mov
lret
jmp
fnstenv
fs
outsl
jno
loope
mov
and
je
lods
jnp
shll
sbb
jmp
adc
inc
dec
jp
cmpsl
int3
sub
and
mov
push
jns
inc
sub
daa
clc
jmp
mov
cs
xchg
imul
inc
sub
das
or
or
or
inc
xchg
icebp
jg
jmp
cwtl
out
sbb
and
cmp
into
pop
pushf
or
jge
push
jmp
add
adc
dec
aam
mov
pop
xor
popf
jge
inc
adc
or
xor
stc
data16
jp
mov
sahf
or
jle
or
jnp
jns
adc
jmp
mov
mov
sbb
push
arpl
or
inc
inc
and
fsubrp
and
lea
mov
xchg
stos
in
mov
movsb
xchg
lods
jae
xchg
push
mov
xchg
jmp
popa
push
fisubl
faddl
push
lret
push
loope
mov
imul
add
add
jmp
stos
jnp
lret
add
xor
or
or
rcl
add
xchg
mov
cmp
cmp
scas
popf
cmc
sub
sbb
add
inc
add
xor
mov
aam
push
js
les
sbb
rcrb
outsb
dec
mov
notl
adc
inc
jnp
leave
in
pop
out
fadd
pop
jne
lods
mov
jge
jmp
mov
sbb
int3
addr16
push
jmp
adc
xchg
mov
je
jns
jmp
and
dec
xchg
sub
out
and
xor
jns
push
jmp
fadds
lret
in
test
mov
lret
or
jmp
add
sub
push
sub
cmpsl
scas
lods
sbb
dec
daa
xlat
out
int3
decb
lock
sub
xor
mov
jmp
adc
xchg
xchg
or
jmp
pushf
mov
xchg
ja
pusha
lods
and
push
shll
or
js
loopne
popa
sbb
jnp
icebp
mov
lods
sub
pop
lods
enter
xor
and
into
out
std
dec
fidivl
push
ljmp
xchg
xor
dec
lea
dec
lahf
push
mov
in
fiaddl
jmp
mov
inc
and
mov
dec
mov
mov
and
daa
mov
into
sbb
outsl
jmp
add
and
lcall
movsl
sbb
je
cmp
xchg
sub
data16
cmp
jnp
inc
dec
adc
push
inc
test
mov
add
jmp
xor
xor
testb
pop
mov
xor
cmp
inc
xchg
xor
ds
xorb
cmp
scas
int3
and
jnp
call
mov
inc
andb
mov
dec
stos
push
sbbl
lods
ret
adc
jmp
mov
jmp
es
out
enter
outsb
pop
xchg
xchg
lea
sbb
sbb
ljmp
dec
out
mov
sub
lds
xor
jns
sub
clc
xor
dec
js
stc
jmp
pop
push
cmp
lret
sbb
ret
and
xor
adc
jnp
movsl
push
cmp
int
xchg
xor
dec
and
ss
push
cmp
jmp
out
cwtl
dec
adc
mov
sbb
jmp
nop
mov
xor
hlt
loop
and
adc
dec
jne
repz
jb
xor
jecxz
or
pop
fsubrl
sub
jmp
out
in
loopne
inc
sbb
sub
inc
push
mov
aam
nop
adc
mov
sti
scas
insl
sarb
sub
or
mov
movsl
mov
push
mov
jmp
pop
jo
mov
stc
iret
lods
fnstcw
sub
dec
jmp
push
addr16
add
xor
jmp
popf
dec
sub
dec
xlat
sub
cmp
inc
orl
lods
pop
mov
fildll
jmp
lock
ljmp
in
cmpl
sbb
negb
dec
daa
sti
sub
cmp
mov
jmp
adc
xor
xor
jmp
pop
or
rclb
orb
dec
cmc
ret
fnstsw
push
scas
andb
sub
push
and
push
jl
or
and
jo
into
jmp
mov
add
sbb
add
sbb
jb
cmp
xchg
xchg
xchg
push
shr
xchg
adc
and
pop
pop
jmp
aam
xchg
mov
sbb
push
fstpt
push
jp
test
jmp
sti
pop
add
xor
jmp
fmuls
sub
and
jmp
lock
sbb
jmp
mov
sahf
and
leave
push
sub
leave
repz
xchg
mov
leave
pop
scas
pop
cmp
and
imul
cmp
push
xchg
shl
jmp
ds
push
in
pop
in
hlt
mov
scas
sbb
xchg
in
fisttpl
add
orl
push
mov
gs
push
sub
clc
shlb
mov
sti
mov
jmp
cmp
insl
test
and
iret
mov
lods
sbb
sub
loope
arpl
hlt
push
xor
lret
dec
sub
bound
and
pop
lods
fisubl
dec
cmc
adc
push
cmp
lds
daa
cltd
xchg
test
jmp
cmp
and
pop
in
loopne
dec
andl
in
das
sub
aas
jg
push
stos
inc
mov
xor
push
scas
jmp
mov
fimull
push
mov
push
mov
mov
mov
jle
bound
pop
jmp
adc
cld
in
fldpi
out
aad
pop
pop
adc
or
mov
loop
jmp
dec
sahf
xchg
dec
inc
push
clc
jmp
test
lret
sub
push
addb
xchg
and
push
je
cmp
jmp
fmull
adc
das
jb
sti
lods
iret
dec
jecxz
push
mov
jnp
dec
or
data16
int
jmp
outsl
mov
mov
imul
push
mov
sub
jmp
vmread
push
add
sub
mov
popa
lea
lds
dec
lods
jnp
mov
add
push
and
inc
imul
nop
outsb
shll
and
jmp
cmp
xlat
arpl
in
mov
stc
scas
inc
das
into
lea
or
dec
fs
fiadds
push
push
cmpxchg
jmp
xor
fcoml
in
insl
xchg
outsl
pop
imul
pop
pop
xchg
and
dec
jmp
int3
cmp
mov
sub
popa
or
scas
xor
jg
sub
les
sbb
aaa
rcr
lock
dec
les
popf
stos
push
jno
aam
adc
aas
cmp
pop
cmp
aaa
sub
mov
mov
fs
mov
jb
stos
nop
sbb
xchg
pop
or
shll
mov
jmp
inc
xchg
lret
xchg
ss
push
pushf
adc
xor
xchg
jl
mov
hlt
jnp
cwtl
in
lret
jmp
insl
test
mov
jbe
popa
ret
dec
pop
stc
pop
mov
icebp
jmp
into
fnsave
sbb
sbb
movsl
add
push
test
scas
stos
mov
div
cli
inc
in
jl
jmp
pushf
xchg
shrb
jp
fsubr
lret
jb
cmp
jmp
insb
or
sub
push
xor
sbb
inc
cli
jmp
mov
jbe
jb
stos
dec
jg
lods
push
out
movsb
sbb
popa
mov
xchg
jl
subl
mov
cmp
mov
andl
mov
cmp
inc
adcl
push
xor
loope
adc
sub
fsubl
xor
jmp
subb
scas
pop
gs
sahf
repz
pop
mov
sub
push
jbe
jmp
mov
out
lods
cltd
addr16
jb
test
jmp
lods
cmpsb
ss
jae
sbb
arpl
push
fisubs
repz
movsb
add
addb
dec
jmp
mov
and
cmp
dec
dec
jmp
fcomps
ss
mov
push
rcll
in
arpl
test
or
sbb
std
insl
int
lcall
mov
mov
jl
inc
cld
hlt
xchg
jb
jmp
fucomi
mov
sub
loopne
sbb
fisubrl
jmp
add
adc
xor
and
int
jb
jp
into
imul
or
mov
imul
popa
sub
and
popf
pop
and
cmp
ja
pop
sub
icebp
mov
nop
sub
movsl
fisttpll
cmc
jmp
rcll
lods
pop
jbe
inc
xchg
push
aad
mov
pusha
jmp
add
jne
loopne
mov
fisttps
jae
icebp
mov
ljmp
pop
pop
shlb
jl
sbb
push
jg
rcrb
or
cmp
data16
push
fwait
cmpsl
lret
lock
sti
jmp
xor
push
mov
jbe
xchg
sbb
outsl
inc
pop
inc
in
inc
aad
movsb
mov
jge
jmp
arpl
sbb
lahf
jmp
add
jge
cmp
mov
inc
jmp
ss
ja
cmp
fldl
pop
addr16
mov
hlt
add
fbld
jmp
inc
adc
lods
mov
cmc
loope
imul
adc
in
enter
fdivrp
jmp
aaa
addr16
lods
and
lods
cmp
sahf
cmpsl
std
sub
out
pop
into
sbbl
add
fcoms
dec
inc
jmp
jecxz
icebp
sbb
pop
jmp
add
jmp
subb
fsts
outsb
sub
inc
dec
sub
in
and
jmp
pop
insl
sbb
xchg
lods
testl
daa
adc
xlat
sub
sub
xchg
or
fstpt
stos
dec
lret
jmp
cmp
jl
push
xor
cmpsb
dec
adc
pop
jmp
mov
mov
popa
fs
lock
xchg
dec
jmp
stc
or
fdivs
mov
inc
ss
xor
xchg
jmp
and
in
adc
ds
cmp
push
xchg
mov
movsl
sbb
loope
xchg
jmp
addr16
dec
adc
insl
icebp
fisubrs
sub
inc
push
cmc
push
mov
push
aad
inc
push
add
jmp
stos
mov
add
imul
lds
jmp
push
adc
dec
mov
pop
jo
jb
sub
popf
mov
and
sbb
fstl
cmp
dec
fwait
lock
jns
pushl
ss
int3
cltd
adc
addr16
xor
div
cld
sub
outsb
dec
jmp
ret
sbb
enter
mov
pop
dec
data16
ja
mov
pop
int
sbb
je
mov
jmp
adc
jmp
mov
test
ret
addr16
push
push
adc
pop
out
mov
mov
xchg
lahf
mov
add
xor
dec
push
pop
fs
imul
add
popf
repnz
jnp
cmc
and
sbb
mov
pop
jb
push
mov
daa
and
loope
jmp
ret
sahf
repz
pop
mov
jae
pop
jns
outsb
mov
mov
je
push
int
push
or
or
jns
adc
dec
stc
scas
xchg
dec
icebp
cmpsb
jmp
mov
add
mov
lock
sub
xchg
jmp
xor
or
and
fldl
add
jmp
in
pop
orl
and
mov
pop
out
data16
jnp
xor
in
sub
lods
adc
fiadds
test
push
subl
mov
jg
push
push
outsl
push
push
mov
mov
mov
rorb
pop
aaa
cmp
inc
movsl
mov
and
lret
dec
dec
aas
push
mov
pop
jmp
outsl
jbe
cli
stos
push
mov
jmp
push
mov
imul
and
dec
jbe
cmc
subb
loop
sub
and
inc
bound
mov
call
int
push
enter
lds
mov
sub
mov
pop
and
std
jmp
loope
jl
pop
mov
or
cmpsb
lock
subb
out
mov
es
pushl
fadds
jmp
or
dec
sub
xchg
filds
push
mov
jmp
pop
cld
ficomps
cmp
xchg
or
sub
lret
scas
sub
push
mov
or
fs
mov
mov
int3
lret
adc
sar
push
adc
scas
dec
shr
xchg
cmpsb
cwtl
or
xchg
loope
cmp
scas
dec
pop
mov
lret
roll
jge
mov
cmpsl
xchg
or
dec
mov
mul
aam
lock
adc
jmp
pop
and
mov
xor
jmp
insb
cmpsb
and
shrb
outsl
xor
sarb
xorb
lock
sub
daa
adc
mov
cmp
jmp
jge
stos
mov
insb
lods
mov
fdivrs
pop
andb
cmp
adc
outsb
cs
jmp
fisttpll
jmp
cli
jle
mov
rcrb
stos
cltd
dec
stos
cmpsl
jmp
pop
dec
jecxz
leave
xor
addr16
cwtl
and
mov
dec
leave
scas
cmpsl
dec
ret
gs
and
push
dec
add
add
ja
push
cmc
sbb
fsubrp
inc
sbb
aas
lret
aaa
addb
xchg
add
pop
mov
mov
jmp
emms
pop
arpl
jmp
ficoms
mov
jns
xchg
adc
imul
outsl
hlt
je
fcoml
jmp
mov
xchg
jmp
inc
inc
mov
jge
xlat
jmp
stc
mov
and
cmc
jl
jae
push
mov
xor
xchg
pop
ret
inc
mov
push
sub
test
fld
adc
mov
jbe
mov
enter
push
or
jmp
mov
dec
iret
in
jmp
inc
out
add
sahf
fnstenv
lods
mov
scas
je
aas
dec
xor
pop
scas
arpl
cwtl
inc
or
dec
add
int3
icebp
test
xchg
mov
jmp
mov
add
and
leave
adc
and
xchg
push
jmp
adc
or
je
jmp
xor
mov
sbb
orb
in
jmp
jnp
shll
mov
std
or
sbb
xchg
xor
daa
gs
mov
out
jmp
les
sbb
dec
mov
loopne
cmp
push
push
jmp
cmp
jno
in
pop
ss
scas
ret
lods
int3
push
and
push
repnz
in
lret
jo
jl
gs
sbb
es
or
testl
jmp
mov
cmpsl
sahf
pop
cmc
jns
jno
les
inc
xchg
xor
daa
jmp
jmp
xchg
jnp
or
add
push
frstor
rcrl
dec
sahf
xor
mov
jmp
push
call
lret
mov
imul
lock
add
sub
and
pop
or
jmp
jae
or
imul
int
pop
push
dec
sub
leave
repz
jmp
mov
or
imul
fwait
das
add
jbe
mov
xchg
mov
cmp
jmp
dec
push
mov
mov
jmp
pop
aaa
xchg
xchg
pop
or
divb
inc
pushf
insb
loop
pop
pop
push
jb
sbb
andb
pop
call
cmpl
leave
inc
lea
je
jmp
and
lods
cli
fcmovnbe
sbb
dec
mov
lret
or
aad
cmpsl
and
std
mov
xor
lods
in
outsb
imul
imulb
aad
add
jge
imul
ror
aam
daa
cmp
xor
jmp
push
mov
push
jmp
push
dec
aad
adc
cld
jno
or
fs
push
sbb
cmp
push
pop
inc
movb
push
and
dec
sub
in
lods
ds
nop
mov
mull
jle
cli
jmp
mov
sarb
into
xor
pop
xor
sub
popf
push
adc
push
mov
push
mov
mov
lret
xchg
jmp
xlat
xchg
in
dec
jmp
fnstsw
push
lods
in
sbb
jle
mov
mov
cmp
xor
mov
lcall
sub
mov
dec
mov
pop
xlat
lods
sub
jmp
push
arpl
insl
imul
and
xchg
cmp
dec
scas
mov
repnz
mov
or
into
in
jle
enter
lods
cmp
subl
add
push
sub
in
mov
test
sub
sub
dec
pop
jno
pop
sti
aas
jle
cmp
sub
test
lods
stc
call
xor
sbb
cmp
mov
loopne
or
adc
imul
xchg
flds
or
stos
rcl
aaa
xlat
jmp
addr16
cmpsl
jne
jge
mul
push
push
outsb
movsl
adc
jmp
cld
scas
movsb
and
push
inc
xchg
or
inc
scas
xlat
xchg
jg
das
lods
inc
pop
sbb
push
jnp
mov
cmc
popa
jmp
movsb
test
cwtl
add
lods
sub
jmp
sub
jmp
cmp
cltd
gs
stos
enter
arpl
mov
icebp
ret
and
mov
out
mov
arpl
insb
dec
add
push
sbb
dec
cmc
rcll
das
subb
jge
sti
jno
pop
fdivs
sbb
jmp
popa
aas
cmc
movl
popf
jecxz
add
insl
outsl
xchg
in
loopne
jmp
je
std
out
and
mov
outsb
sahf
mov
push
add
pop
xor
in
and
test
fisubrl
pop
cmp
or
andb
sahf
sti
lods
or
lcall
mov
addr16
pop
push
push
mov
add
mov
xlat
sbb
lahf
daa
std
cmp
daa
mov
loope
stos
outsl
add
and
lods
add
mov
pop
mov
lods
pop
mov
mov
jmp
xchg
mov
cmp
jmp
popa
dec
mov
jmp
mov
push
sub
in
push
and
sahf
int3
cmp
jp
mov
dec
pusha
sti
out
lods
xchg
ds
add
inc
loope
sahf
xchg
or
jg
cmp
cmpb
add
in
outsl
dec
aaa
jmp
cmp
shll
hlt
cmpsl
dec
lods
push
gs
pop
jnp
int3
mov
add
sub
push
xor
mov
mov
pop
jne
sub
inc
mov
hlt
enter
cmc
jb
insb
ret
mov
stos
jmp
adc
lock
mov
cmpsb
mov
test
ljmp
mov
shll
adc
cli
int3
imul
das
and
mov
pop
mov
add
inc
or
vpsubsw
add
jbe
add
outsb
les
fdivs
or
into
rcll
test
addl
loope
test
dec
jmp
pop
mov
out
dec
enter
lahf
mov
jmp
stos
test
inc
pop
sub
jmp
cmpsl
test
inc
jnp
out
fwait
scas
pop
movsb
hlt
jmp
pop
arpl
mov
xor
ret
in
jmp
mov
gs
or
mov
push
jns
xchg
dec
or
data16
lock
dec
push
jmp
mov
fcmovnb
jmp
push
push
rcll
push
insl
lods
fildll
negl
mov
js
jle
and
sub
add
push
insb
add
xor
out
add
lea
in
xlat
aaa
aad
fucomp
jp
out
out
bound
es
sbb
ds
lods
push
pop
sub
fucomip
cmp
push
cli
push
add
sub
in
sub
lret
pop
jecxz
pusha
adc
and
xlat
in
ret
jmp
mov
outsb
in
jmp
into
loop
dec
and
xchg
lret
sarb
out
cmc
inc
outsb
xchg
les
fists
sub
pop
sbb
int3
jmp
sub
xor
mov
or
jmp
mov
cli
loope
out
out
inc
jb
out
jo
jmp
mov
add
bound
xchg
pop
xchg
mov
pop
outsl
sti
push
test
pop
popf
clc
rcrl
jns
pop
mov
ret
add
sbb
dec
jmp
imul
stc
mov
popf
jmp
fwait
jg
les
out
insb
push
add
adc
inc
jp
adc
ror
arpl
cmp
mov
mov
jmp
dec
addr16
call
test
lods
mov
mov
lret
add
sbbl
add
loope
xor
scas
push
jl
mov
nop
sub
pop
mov
and
push
mov
aaa
enter
ret
out
sub
dec
shr
push
mov
nop
cld
add
jg
pop
push
bound
and
sub
sbb
int
ret
repnz
lock
sbb
or
push
repz
jmp
mov
pop
cmp
dec
cmpsb
leave
sbb
jecxz
popa
mov
in
mov
mov
jb
xor
xor
mov
cmp
imul
and
sub
pop
pop
lods
inc
jmp
and
xchg
cli
mov
scas
xor
jmp
jecxz
mov
enter
hlt
popf
push
push
adc
iret
stos
cmp
mov
loop
xor
push
pop
sub
imul
push
sbb
jb
enter
lock
aas
pusha
jmp
xor
xor
xchg
jmp
dec
scas
jl
into
add
jmp
push
xorb
xchg
loop
and
movsl
jmp
test
fadd
add
cmpsb
loope
push
adc
sub
xchg
mov
cmc
sub
cmp
jae
sbb
mov
repnz
mov
lds
dec
jmp
andl
mov
in
mov
je
lods
addr16
pop
mov
out
push
dec
cltd
or
outsb
inc
pushf
aam
fdivp
or
mov
and
add
mov
mov
add
lret
pop
clc
sbb
mov
pop
loope
mov
lahf
outsb
inc
xor
add
daa
out
popa
mov
adc
xchg
hlt
mov
int3
sub
and
xlat
cmpsb
lock
dec
cltd
jae
repz
out
jmp
pusha
in
fists
pushf
and
aas
arpl
inc
push
xor
jmp
out
push
inc
nop
incb
lret
push
lods
daa
inc
jmp
xchg
imul
sbb
cmp
imul
sbb
jle
add
js
mov
iret
cltd
cmp
cmc
cmp
jno
insl
mov
subb
xchg
rsqrtps
sbb
sub
sbb
sub
jmp
scas
sbb
jmp
jne
adc
jmp
scas
inc
ret
add
jmp
pusha
idivl
and
shl
ds
add
arpl
jp
jmp
mov
lcall
adc
inc
and
mov
mov
enter
stos
arpl
inc
shr
test
aam
ds
mov
push
mov
test
xchg
iret
stos
sbb
pop
xchg
nop
in
inc
pushf
icebp
add
cli
push
shll
stos
pop
mov
dec
mov
cld
icebp
jmp
sub
jmp
ret
jne
push
jmp
jg
sbb
jge
jmp
pushf
ds
push
xchg
dec
jno
fisubrl
addps
int3
lods
js
dec
add
dec
adc
xchg
lods
xor
cmpsl
xchg
into
adc
jmp
adc
lea
pop
sub
jmp
push
aaa
xchg
add
cmp
sbb
inc
cmp
jae
je
adc
jmp
jae
and
jmp
mov
cmp
jmp
jmp
mov
adc
scas
pop
in
clc
cs
add
mov
loop
jmp
fnsave
mov
sub
dec
jge
jmp
test
sbb
mov
xlat
gs
hlt
das
imul
out
xor
pop
cmp
add
daa
sub
les
fldl
xlat
adc
leave
mov
push
enter
iret
sub
cmp
imul
and
pop
loop
dec
jle
lds
sub
jns
mov
push
sub
or
bnd
push
jmp
icebp
inc
ds
pop
rcr
jmp
jge
loope
sahf
ja
jmp
lret
xor
push
jmp
adc
lock
jecxz
cmp
sbb
adc
mov
pop
inc
out
push
dec
pop
outsb
negl
xchg
jmp
popf
insb
repz
xorb
ret
sub
dec
and
daa
xchg
rolb
jmp
xchg
and
push
movsb
insb
divl
scas
js
data16
dec
jmp
icebp
xor
sti
add
mov
jo
sub
xchg
daa
aad
and
addr16
ljmp
testl
push
mov
lea
cmpsb
mov
inc
cmp
mov
fiaddl
outsb
cmp
lock
mov
cmp
leave
sbb
xchg
xchg
sahf
dec
les
adc
idivl
jmp
iret
dec
loope
mov
cmp
test
aam
dec
out
sub
lcall
sti
dec
outsl
jmp
and
push
iret
lods
idivl
jb
dec
int3
or
js
nop
lock
jmp
arpl
into
call
movsb
mov
jmp
addr16
fwait
dec
ficoms
cli
jns
lds
dec
mov
xchg
jmp
pop
pop
mov
ds
fisubs
rorl
cli
in
cwtl
jmp
add
or
into
rcrb
dec
mov
addr16
fstl
js
enter
lret
test
jmp
adc
popa
or
xchg
xor
inc
scas
sahf
lcall
mov
shrl
push
push
iret
sbb
xor
in
out
sub
addr16
mov
ss
imul
jmp
ja
pop
hlt
dec
cmp
sub
cld
into
push
cli
ss
lods
fnsave
jno
scas
jo
mov
lods
leave
addb
pop
std
jae
or
fisubs
mov
adc
lods
jo
jb
insl
popa
sbb
jg
xchg
outsb
jmp
rcrl
call
inc
or
insl
jb,pn
fcomp
jmp
fwait
pop
outsb
xchg
jl
sub
push
jecxz
inc
iret
repnz
dec
mov
addr16
das
hlt
fwait
xchg
xchg
gs
outsb
mov
jae
xor
fdivrs
sub
or
jnp
lods
nop
es
repnz
into
xor
scas
mov
pop
jmp
add
in
mov
mov
imul
ret
pop
and
icebp
lods
inc
test
int3
leave
mov
jmp
xchg
insl
bound
lret
cmp
inc
sub
jmp
inc
jmp
stos
xor
or
dec
push
inc
push
push
jmp
xor
repz
xchg
push
push
adc
cmp
stos
mov
stos
and
mov
shr
or
sub
sbb
in
test
lods
mov
xchg
cmp
mov
fsts
jmp
loop
fs
dec
pop
cmpsb
add
mov
repz
sti
jmp
ror
test
jmp
jb
push
icebp
orb
fucomip
xchg
popl
push
cld
imul
sbb
sbb
cwtl
jmp
mov
sub
jp
enter
push
pop
nop
pop
fwait
jns
outsl
or
ljmp
cmp
jae
jp
or
or
iret
pusha
dec
das
gs
ja
lfs
cltd
xchg
mov
aam
sbb
mov
loope
shr
cmp
or
arpl
jmp
xor
lock
repnz
cwtl
lcall
aaa
arpl
fisttpl
push
push
mov
lahf
enter
lret
sbb
sub
hlt
pop
lods
and
rolb
por
dec
outsb
xchg
fldcw
push
scas
loope
outsl
cli
sub
jne
adc
in
lahf
sti
movsb
xor
jmp
xchg
push
outsl
and
mov
lcall
xor
push
add
aad
push
sub
xorl
and
mov
jns
fdivp
out
icebp
daa
or
cmp
push
test
dec
sar
mov
cmpsl
xchg
adc
adc
jmp
loopne
das
mov
subl
sti
insb
fsubr
sbb
stos
outsb
inc
jmp
jp
insl
jo
stos
push
mov
mov
sub
jmp
dec
ret
sub
xor
push
pop
int3
pop
repz
outsb
xchg
mov
cmp
in
jmp
xchg
sahf
insl
jbe
push
sbb
hlt
xchg
sar
adc
push
and
aaa
call
mov
dec
andl
lods
das
xchg
lea
add
mov
mov
mov
jns
adc
aam
pop
mov
xchg
lods
pusha
push
and
sub
repnz
xor
loopne
outsb
insb
mov
jo
lret
loop
scas
arpl
or
rorl
jmp
pop
pop
pop
xchg
adc
ret
dec
dec
fwait
mov
imul
pop
sub
mov
sti
or
es
add
pop
jmp
out
mov
mov
jmp
test
adc
rcrl
hlt
scas
push
jb
cmp
and
int3
dec
jmp
aaa
cmp
and
movsl
or
bound
lret
jmp
mov
jle
jns
imul
xchg
sbb
mov
mov
iret
sbb
mov
fwait
mov
and
inc
mov
in
test
iret
std
sub
leave
jmp
xchg
fstpl
imul
sub
mov
sbb
cltd
dec
jns
jp
inc
sub
arpl
push
xchg
xchg
cmp
leave
ja
pushfw
sub
out
imul
pop
sub
insb
pop
movsl
jmp
cli
and
mov
cld
sbb
data16
les
nop
movsb
dec
pop
cmp
imul
leave
sti
pop
push
pop
andb
or
cmpsl
sbb
cltd
add
out
inc
lret
out
nop
inc
xlat
sub
fistps
xchg
sti
stos
les
jne
aam
shr
adc
jmp
xor
mov
xor
icebp
jmp
push
fwait
add
sti
lea
mov
xchg
test
cmp
add
scas
xchg
lea
iret
outsb
scas
lret
xor
or
rorb
mov
or
repnz
lods
loope
push
sbb
dec
scas
mov
aad
fimull
sbb
in
sub
into
mov
jmp
cmp
cmp
jp
pushl
xchg
or
imul
sbb
jmp
cs
aam
outsl
cmp
jmp
jge
xor
sbb
jmp
add
outsb
mov
stc
xor
jb
in
inc
dec
mov
pop
mov
ja
jg
mov
mov
lods
fld
inc
pushf
stc
and
sarb
jl
add
xor
roll
sti
ja
and
loop
mov
jmp
push
xchg
xchg
bound
scas
cmp
or
jmp
ss
mov
in
shrl
cmpsl
mov
lods
lea
cld
fst
jmp
lods
jmp
adc
dec
xor
aaa
call
or
stos
jae
je
jo
and
lea
bound
mov
lcall
hlt
pushl
pop
mov
fdivrp
mov
ret
mov
es
cli
xchg
mov
flds
clc
xchg
jmp
jl
dec
jle
loopne
sub
scas
out
push
push
jnp
gs
or
jmp
je
jb
sbb
in
jae
mov
es
lds
daa
pmaxub
addr16
xchg
aas
jmp
adc
mov
xchg
jnp
fsubr
push
add
insl
cmp
push
lods
in
cli
pop
pop
in
enterw
lret
cmpsl
scas
pop
dec
daa
arpl
inc
mov
jmp
pop
aas
adc
lods
jle
mov
xlat
int
lret
fsubr
dec
and
sub
lret
xchg
lods
lea
xor
jmp
das
cmpsl
insl
mov
fwait
xlat
jmp
scas
daa
mov
test
stos
scas
pop
sahf
icebp
add
xor
ja
jmp
leave
pop
xorl
movsl
bsr
daa
jmp
aas
int
std
hlt
fwait
dec
jmp
jae
in
scas
xchg
das
mov
div
or
xor
cwtl
mov
mov
jmp
sub
pop
movsl
int3
jmp
repnz
pop
sub
daa
inc
imul
ja
adc
pop
sti
pop
ret
aas
jo
imul
jmp
pop
mov
cmp
fistpl
push
enter
jmp
jns
sub
outsb
cmp
jmp
dec
mov
test
test
enter
leave
aad
xchg
cmpsl
out
arpl
repnz
sub
std
popa
jmp
mov
loope
jmp
iret
gs
stc
pop
clc
pop
sub
mov
repz
and
xchg
or
lret
lret
mov
xor
lods
in
fstl
xchg
sbb
test
cmp
xchg
sti
imul
sbb
or
xlat
nop
xchg
enter
jl
or
jmp
lock
loop
in
shr
inc
mov
jecxz
fisttpll
pop
jmp
dec
jbe
mov
aaa
mov
sub
pop
inc
dec
test
lcall
jle
pop
pop
xlat
sub
xor
icebp
add
fdivrs
add
lods
std
mov
sub
popa
repz
jmp
jbe
ret
xchg
aam
in
inc
mov
mov
or
jmp
cmp
int
fucomp
xchg
or
or
imul
sahf
mov
idivb
inc
add
mov
sbb
xor
test
sahf
xchg
cs
inc
jb
jmp
jle
test
out
or
lahf
cmpsb
pusha
mov
sub
daa
add
mov
repz
scas
sub
sub
ret
sbb
jmp
mov
rclb
aam
stos
mov
sbb
sub
fbld
jmp
hlt
inc
movsb
andl
xor
fwait
int3
inc
jmp
in
jg
aas
shr
loopne
inc
nop
jmp
add
mov
arpl
dec
sti
xchg
scas
push
fs
les
es
sti
jl
sbb
mov
or
cmp
xchg
mov
mov
aaa
adc
lods
mov
repz
push
aaa
mov
adc
mov
mov
add
push
les
call
int3
pop
jmp
inc
xorl
cwtl
cli
add
test
int
adc
int3
sub
inc
es
add
popf
inc
and
jmp
sbb
cli
jmp
arpl
jmp
mov
adcl
test
aad
dec
sbb
stos
xchg
ds
out
adc
loopne
adc
or
or
and
aaa
fsubr
sub
sub
rorl
sub
ss
jmp
and
mov
jae
jmp
cli
ret
scas
mov
sahf
cmp
loop
push
mov
sub
cmp
xchg
pushf
outsl
lods
cs
mov
xchg
gs
dec
or
push
adc
xchg
push
sub
pop
add
jmp
pop
fisttpl
in
scas
lret
xor
lods
add
inc
outsb
int3
pop
push
jg
cmpsl
inc
cld
shlb
cmp
movsb
sti
mov
push
movsl
std
lods
dec
fsubp
mov
or
adcb
jae
mov
push
mov
jmp
and
movsb
mov
push
sub
cmpsb
cld
push
sub
pop
pushw
or
jmp
pop
mov
and
xchg
jmp
adcl
std
jmp
push
in
jle
stc
arpl
lods
sarl
jmp
fisttpl
scas
xor
inc
fnstenv
adc
sbb
inc
and
jle
por
cmpsl
mov
mov
or
xor
push
sbb
cmp
aas
or
arpl
or
mov
stos
roll
jmp
mov
cwtl
popa
loope
mov
pop
sub
ds
xor
outsb
adc
xchg
push
push
push
movsb
cmpsb
jmp
mov
mov
jb
pop
jb
sbbl
inc
out
jmp
lea
movsl
fs
or
cmpsl
aaa
xor
dec
mov
adc
mov
fwait
leave
mov
stos
jnp
push
hlt
xlat
repnz
movsl
cmp
bnd
mov
sahf
sarl
pop
add
xchg
xor
xor
dec
lods
jg
pop
std
mov
loop
rclb
and
insb
fidivs
xchg
lahf
push
jmp
into
push
mov
paddq
mov
pop
lods
imul
mov
inc
gs
into
test
adc
hlt
mov
push
jmp
pop
mov
shrb
stos
jmp
ret
or
mov
mov
les
pop
cld
and
lcall
push
inc
cmpsb
cltd
jmp
mov
das
jmp
rclb
lock
and
lret
imul
cmpsl
scas
jmp
inc
lds
sbb
int3
icebp
push
mov
into
pusha
data16
arpl
test
and
add
loope
test
sub
sub
rdtsc
or
inc
mov
and
popa
jmp
push
sub
jmp
adc
out
lods
in
ja
jl
dec
xor
mov
add
inc
jmp
dec
xor
jmp
iret
pusha
pop
jle
repz
push
push
mov
insb
or
mov
daa
or
inc
jmp
andl
mov
sub
dec
test
pop
fcomip
imul
lret
jmp
test
cmc
jmp
sub
popf
xchg
jge
jmp
aad
cmp
adc
fs
gs
mov
jle
pop
dec
mov
cltd
jo
int3
push
psubw
int
popa
adc
imul
dec
in
sub
fwait
pop
lods
fs
idivb
loope
sbb
mov
push
mov
dec
hlt
pop
inc
loope
sub
dec
and
test
ljmp
or
mov
fmulp
or
cmp
outsb
jl
pop
xchg
icebp
inc
rcll
insl
jmp
dec
pop
insb
sbb
jmp
push
out
das
fwait
shll
ss
or
jle
push
dec
xor
push
jmp
leave
jecxz
add
mov
cld
sbb
movntq
imul
rcrb
mov
xor
popa
icebp
shr
aas
je
lock
inc
push
mov
pop
rcrb
aad
mov
lcall
mov
sbb
dec
add
mov
faddl
lcall
mov
and
jmp
shll
ret
test
push
sub
or
jmp
cli
std
mov
repnz
push
clc
jmp
dec
push
insb
out
jns
and
test
iret
adc
loop
mov
por
mov
adc
jmp
and
mov
lods
push
jae
and
scas
mov
fidivrl
inc
jecxz
inc
testl
sbb
lods
pop
and
arpl
int
std
imul
sbb
movsb
test
adc
jg
and
and
mov
lea
xor
mov
es
out
or
jmp
movl
mov
sbb
pusha
jmp
sbb
inc
stc
push
mov
daa
pop
dec
pop
sbb
add
movsb
sub
dec
iret
icebp
sub
mov
lahf
repz
mov
jmp
xchg
sub
sub
push
adc
xor
fiaddl
mov
movsl
inc
lahf
sbb
jmp
xor
and
inc
and
sbb
mov
cmp
and
cmp
jmp
adc
sahf
data16
jne
das
andb
xchg
out
jmp
mov
test
push
mov
sub
cmp
and
add
outsb
push
sub
aam
xchg
lret
pop
lock
mov
mov
or
cltd
cmc
push
jg
jmp
out
js
xor
mov
int
ljmp
bound
jb
and
js
fnstsw
scas
push
dec
mov
lods
fwait
sarl
aaa
or
jmp
adc
gs
insb
adc
jmp
ret
add
jmp
icebp
sub
lret
mov
mov
or
stos
sub
popa
or
fisubs
jmp
sbb
xor
cmp
loop
xor
sub
pushw
mov
mov
jmp
repnz
test
jmp
mov
sahf
jmp
addr16
test
icebp
je
push
fisubrl
inc
add
adc
cmp
cli
subb
inc
jmp
scas
mov
jp
add
jmp
adc
mov
mov
add
loopne
aaa
out
sbb
or
xchg
clc
cmpsb
dec
cltd
or
icebp
add
or
idiv
popa
imul
jbe
pop
ret
jmp
pusha
xchg
insb
in
popa
mov
mov
repnz
inc
lods
xchg
fisubrl
add
stos
pop
mov
jb
or
andb
or
inc
adcb
sub
repz
lea
in
cmpsb
loope
insb
jmp
mov
in
jbe
and
jmp
dec
and
jmp
repz
adc
jle
jmp
hlt
mov
mov
cltd
ret
jmp
dec
bnd
mov
sbb
sbb
lcall
mov
jmp
sbbl
sahf
fstpl
inc
loope
inc
adc
push
pusha
push
xlat
int
pop
lds
xchg
mov
mov
out
rsm
movsb
xor
push
cmc
pop
rclb
xchg
pop
punpckldq
and
lahf
scas
in
or
cltd
jmp
fstpl
repz
jl
icebp
sti
rorb
inc
jmp
xlat
push
xor
push
push
jmp
mov
mov
repnz
sub
inc
xor
xchg
fists
sbb
repz
fidivl
and
test
sub
mov
aam
dec
fwait
out
jmp
sahf
xlat
out
lret
inc
dec
mov
or
loope
push
adc
pop
jg
jbe
cld
mov
and
jmp
outsl
dec
sahf
xchg
outsb
subb
sbb
mov
lahf
mov
xchg
xchg
imul
mov
outsb
sbb
adc
xor
rorb
lods
pop
jbe
push
mov
mov
loopne
inc
ret
mov
jmp
fwait
aas
jmp
jmp
and
adc
std
icebp
insb
ja
orl
jmp
mov
lods
bnd
jb
arpl
das
les
daa
inc
ljmp
xchg
repz
push
xchg
lods
popf
enter
aad
test
sbb
sub
out
sub
jmp
add
es
insl
shr
int3
mov
popf
jmp
xor
sbb
jge
lods
sbb
dec
adc
jle
loopne
xor
inc
adcl
xor
lret
and
push
jmp
pop
jno
sub
add
mov
lcall
jb
dec
pop
loope
sbb
test
inc
and
push
push
lcall
jb
ljmp
inc
in
inc
scas
sbb
cld
cmp
add
lock
shrb
fdivrs
mov
repz
jns
xchg
add
push
lods
add
enter
mov
adc
aad
pop
scas
loope
adc
lds
in
add
mov
and
int3
jmp
ljmp
jmp
aaa
jmp
insl
jmp
sbb
jmp
test
mov
outsb
push
jbe
repz
cmp
inc
adc
outsb
pop
xlat
ret
int
inc
int3
push
jns
sub
es
js
jmp
mov
in
dec
xorb
jecxz
aad
mov
inc
inc
les
sub
mov
adc
ret
jmp
inc
sub
lods
mov
mov
inc
dec
loop
and
sub
dec
test
movsb
pop
sub
ror
rcll
divl
leave
sub
fsubrl
cmp
scas
mov
outsb
fmul
sbb
push
ljmp
cmp
jbe
sbb
push
sub
imul
iret
xor
sub
mov
mov
or
std
jo
inc
adc
loope
and
insl
jmp
xlat
mov
or
xchg
add
sbb
jo
sub
aaa
push
mov
xor
jae
jb
sub
cmp
pop
fistpl
ss
or
inc
lcall
int3
adc
add
lret
test
mov
cmp
sub
mov
testl
cld
rclb
cmpsb
and
daa
jge
cmc
xor
rorl
repnz
insb
sbb
jns
in
fld
sbb
xor
fstl
loope
cmpsl
mov
sarl
add
cmp
fcompl
and
pop
jmp
fldcw
fmuls
jge
add
into
jns
jmp
add
mov
pop
xchg
sbb
dec
enter
loop
or
les
loopne
mov
jmp
enter
cmpsb
cs
pop
jmp
cli
repz
jmp
fwait
xor
mov
and
pop
inc
fsubl
jne
lret
dec
add
pop
in
addr16
jmp
push
sub
mov
jmp
dec
out
and
inc
mov
inc
inc
push
pop
jmp
pop
les
jmp
cs
sahf
mov
mov
fcoms
iret
adc
repnz
ja
dec
push
imul
jbe
add
out
add
fdiv
in
fisubl
push
sbb
sub
mov
fildl
arpl
sub
mov
gs
loope
pusha
cmp
mov
and
sub
stc
mov
jmp
jb
fmuls
inc
push
lret
jmp
loop
jae
cmpsl
push
sahf
jmp
fstpl
outsl
push
enter
or
mov
sub
aaa
cmp
sbb
aam
repnz
sti
andb
sub
xchg
leave
xchg
sti
push
add
dec
sub
and
jmp
xor
popa
jb
ljmp
sbb
jmp
cmp
sti
lcall
pop
dec
dec
sub
repz
lret
sti
subb
and
loopne
jmp
in
notl
mov
and
xor
repz
mov
test
leave
mov
jns
xor
pop
rcrb
lods
in
pop
dec
xchg
cwtl
mull
es
and
dec
outsl
push
sti
dec
mov
xor
mov
and
pop
mov
dec
sbb
push
or
xchg
sarl
mov
lahf
jmp
je
pop
adc
cmp
shrb
in
mov
jmp
pop
insl
data16
add
jmp
icebp
subl
insb
cltd
daa
sub
jmp
cmp
push
cs
jmp
ljmp
leave
lcall
mulb
sub
push
setg
jmp
jge
pop
xchg
mov
jmp
xchg
adc
mov
fistps
scas
push
leave
xor
mov
xchg
mov
pop
mov
xchg
mov
test
testb
and
lods
jl
pop
inc
mov
jmp
enter
lds
ror
repnz
or
jb
mov
jmp
jmp
fidivrl
jmp
add
rcrl
repnz
lcall
inc
mov
push
outsb
mov
mov
inc
ds
inc
and
xor
movsb
movsl
adc
js
icebp
and
jns
rorb
mov
pop
sub
addw
scas
and
inc
or
mov
inc
mov
data16
jmp
stos
or
out
jmp
dec
ljmp
mov
sbb
jb
dec
xchg
pop
enter
ret
or
push
dec
mov
sbb
loop
and
pop
mov
repz
out
mov
fwait
call
add
inc
outsl
lds
jmp
frstor
inc
xchg
cmpsb
mov
push
inc
push
mov
fs
jmp
sub
inc
pop
mov
mov
out
push
jbe
sarb
push
lods
sub
loope
in
pushl
jo
jmp
nop
mov
mov
cmc
leave
cwtl
jmp
aas
add
out
ds
or
mov
jle
xor
adc
mov
jecxz
or
mov
lods
xlat
bts
sub
dec
mov
jbe
or
pusha
jp
push
xchg
cmp
jno
int
push
scas
outsb
cmp
or
aaa
jmp
or
popa
mov
mov
lcall
std
add
push
repz
dec
dec
mov
test
std
loope
push
push
fldt
movsb
fbstp
inc
imul
or
jmp
adc
orb
test
scas
or
and
jmp
xchg
sbb
xor
jmp
mov
pop
mov
push
jne
test
jmp
adc
subb
dec
xor
and
dec
mov
adc
sub
adc
in
shrb
mov
sbb
or
push
and
adc
imul
mov
ret
out
xchg
lods
adc
xor
jmp
stc
mov
adc
cmpsb
cmp
aam
cmp
and
fwait
jmp
adc
mov
andl
rdmsr
jecxz
jmp
in
mov
repnz
push
or
pop
sarb
test
pop
orb
adc
repnz
xor
pop
jmp
cmp
dec
in
jmp
inc
mov
rolb
jno
les
cmp
iret
adc
sarl
loope
sbb
mov
dec
jg
in
push
dec
pop
pusha
test
fisttps
or
jl
xlat
lods
cld
push
or
daa
les
mov
test
cmp
test
dec
fst
jp
lods
jmp
jnp
push
sahf
xor
lods
add
sbb
shr
cwtl
and
in
fcmovne
int3
jmp
jge
out
ja
nop
pop
jmp
sbb
loop
jnp
jle
inc
jp
xchg
cmpsl
xor
lods
test
outsl
sub
and
mov
lods
mov
sti
cmp
adc
jnp
or
adc
ljmp
and
aas
jmp
mov
out
fsubr
out
dec
test
push
and
xor
movsb
popa
jmp
cmpsb
xchg
out
ror
adc
dec
xlat
sub
inc
sbb
mov
xchg
lods
dec
cmp
jmp
test
adcb
outsl
aam
insl
xor
mov
paddd
lock
pop
jbe
lret
or
mov
mov
push
mov
in
xor
in
fmull
mov
cmpsb
xchg
xchg
push
push
adc
jmp
mov
ds
jmp
pop
nop
sub
jns
mov
pop
aaa
inc
iret
and
jmp
sti
fsubrl
jmp
mov
add
mov
mov
mov
lcall
cmp
mov
adc
cmp
or
mov
xor
xchg
dec
lods
loope
cmpb
or
jl
mov
mov
nop
mov
and
dec
cmp
popf
mov
jle
and
push
dec
clc
mov
jmp
cmp
mov
or
scas
jmp
jmp
xchg
movsl
mov
jmp
lods
out
inc
enter
mov
icebp
mov
ret
fucomp
repz
xchg
mov
jmp
in
jbe
adc
xchg
jmp
loopne
jge
inc
mov
or
mov
xor
call
inc
mov
movsl
cmp
jmp
jg
mov
push
adc
dec
pop
cwtl
imul
das
jmp
pop
xor
push
clc
pop
dec
jmp
push
flds
sub
or
sub
scas
cmp
ljmp
arpl
dec
mov
std
fsubrs
ret
push
icebp
jmp
pushw
pusha
mov
cli
jmp
pop
xchg
int3
cmp
or
sub
jbe
sub
and
stc
jmp
gs
pop
aas
lds
repnz
mov
int3
sbb
ret
adc
leave
shrl
sub
aas
pushf
jmp
cli
xor
inc
mov
jmp
leave
mov
rcll
sub
add
push
pop
jecxz
dec
jmp
and
das
inc
adc
jmp
js
mov
dec
roll
enter
jmp
movsl
sbb
sub
jle
mov
adc
ret
pop
or
mov
sarl
pushf
test
iret
pop
jmp
pop
push
stos
jnp
orl
daa
jmp
fs
and
stos
push
jmp
scas
lahf
mov
sti
jmp
xchg
popf
insl
mov
jmp
sub
fistpll
mov
jmp
int
cmp
dec
rcr
sub
bound
lret
int
sub
pusha
mov
sbb
inc
mov
sub
xchg
cmp
popf
xor
jmp
aas
dec
les
mov
daa
sbb
jo
push
ficompl
sub
or
mulb
mov
cld
aas
cmpl
int
shrl
out
js
jmp
lods
fwait
sbb
add
and
and
int3
adc
psrad
mov
addr16
sbb
sbb
or
dec
bound
xchg
enter
pop
jle
addl
sub
jge
jmp
dec
hlt
dec
or
inc
jmp
mov
repnz
cwtl
dec
cld
paddd
sahf
aam
imul
xor
and
js
or
push
pop
enter
jg
call
repz
jmp
jbe
push
in
rclb
dec
inc
xlat
mov
xorl
fldt
add
jmp
xchg
push
adc
lods
sub
mov
adc
jmp
push
cmpsb
aas
dec
ret
jmp
outsb
sbb
mov
rcrl
mov
mov
push
mov
mov
xor
sti
mov
sub
add
mov
stos
jmp
fisubrl
mov
pop
les
pop
jl
lods
jns
enter
and
rolb
es
mov
scas
mov
fistl
lods
jmp
outsb
test
pop
leave
cmp
outsb
bound
subl
push
data16
sbb
mov
adc
xor
mov
aaa
nop
loope
stos
imull
mov
ret
dec
mov
xchg
jae
int
jmp
push
inc
or
cmp
push
lods
aas
gs
outsb
movsb
jno
mov
aam
jmp
mov
mov
cld
cmp
aas
test
pop
lods
sti
or
stos
sysret
sub
jmp
mov
gs
fbstp
daa
arpl
push
jbe
xchg
add
shlb
iret
pop
mov
cmp
jg
xor
push
push
iret
jb
xchg
or
jge
js
jb
mov
addr16
movsb
pop
dec
mov
inc
cmp
sti
das
sub
dec
fwait
cmc
sub
mov
cmp
cwtl
inc
or
mull
lods
int
inc
pop
or
and
inc
loop
movsb
out
sub
jmp
insl
or
jmp
mov
cmpxchg
mov
xor
xchg
int3
add
sti
jmp
mov
xchg
mov
jo
and
jecxz
jmp
lret
or
cmp
ds
outsb
das
sbb
adc
jmp
out
sarb
por
lret
jmp
test
repnz
push
add
xor
dec
insb
xchg
pushf
mov
lahf
ss
das
adc
jge
jg
mov
into
push
and
pusha
mov
and
adc
dec
sbb
lea
test
sahf
test
jae
and
inc
add
adc
jmp
sub
mov
push
cmc
idivb
mov
jmp
inc
jnp
xchg
xor
mov
mov
lods
test
mov
in
xchg
or
testl
jmp
aaa
por
mov
sti
test
shr
add
sub
push
dec
rorl
ds
cld
iret
imul
xchg
xchg
jmp
popa
mov
jmp
mov
inc
jmp
mov
xor
sbb
xlat
sti
xchg
arpl
inc
push
xchg
int3
hlt
sbb
psubb
add
jecxz
out
insl
rcll
lock
xlat
ljmp
sbb
mov
xor
jmp
cmpsb
mov
and
stc
adc
mov
lds
mov
mov
pop
lods
or
add
repnz
imul
pushl
loop
xchg
or
xlat
or
push
out
mov
loopne
jmp
fildl
data16
pop
shr
out
mov
rorl
dec
fldcw
jne
cmp
fcomps
jmp
xchg
adc
mov
mov
fdivrp
jmp
lea
aas
insb
inc
lods
push
das
sub
and
sub
mov
sbb
cli
lods
mov
aas
sbb
pop
xchg
jp
jmp
stos
daa
or
cmc
cmp
or
xchg
fsubr
pushf
pop
jg
loope
mul
dec
daa
stc
or
std
data16
mov
xor
sub
ja
scas
sbb
xor
xor
enter
mov
in
sub
jmp
in
jge
xchg
int3
cli
movsl
adc
in
cld
insl
aaa
shll
dec
ss
lods
pop
inc
mov
ds
jl
or
ret
pusha
pop
and
jle
fucom
xor
mov
int
xchg
add
xlat
lds
add
loope
stc
cltd
imul
cmc
aaa
scas
outsl
adc
loopne
adc
or
hlt
std
mov
aas
icebp
fucomip
xlat
lret
mov
test
mov
sbb
ljmp
fisttps
xchg
mov
sub
mov
xchg
movsl
movsb
jmp
loop
dec
outsb
xchg
pop
test
outsl
mov
xor
adc
dec
push
lret
cltd
sub
mov
ret
jl
ret
sbb
or
dec
mov
jmp
dec
pop
aam
lock
test
cmpsl
std
popf
arpl
cmpsb
lods
testl
shr
cld
jb
dec
test
cwtl
fsubr
jae
xchg
nop
jmp
std
out
lret
ja
adc
es
jmp
adc
lds
cwtl
add
adc
push
scas
xor
jmp
inc
xchg
xor
dec
jmp
xchg
add
movsb
inc
into
pop
scas
push
mov
mov
inc
cli
adc
js
scas
mov
flds
ja
subl
jmp
daa
sbb
cmp
shl
or
mov
push
mov
dec
pop
out
pop
add
imul
cmpsl
xlat
cmc
mov
mov
insl
jmp
in
jne
mov
xor
fistl
xchg
sub
jl
push
in
lret
std
arpl
out
jmp
cmp
mov
xchg
dec
lret
stos
aas
jmp
add
call
repnz
mov
cmp
inc
cli
cmp
sub
mov
nop
pusha
dec
stos
mov
shrl
int3
mov
fcoml
in
mov
cmp
mov
arpl
insl
rol
push
push
fs
loope
xor
cmc
aam
dec
cmpsl
out
jb
dec
jecxz
push
inc
fbld
jbe
add
popa
lods
enter
push
xchg
psrad
mov
mov
jge
dec
jmp
call
fwait
inc
jmp
movsl
shll
outsl
test
mov
dec
sahf
frstor
inc
mov
jmp
pop
sbb
lcall
adc
ficomps
imul
out
cmpsl
jmp
mov
mov
sub
or
ret
mov
loope
jmp
cmp
aaa
lahf
stos
enter
mov
loope
lods
jmp
inc
movw
cmpsb
cmp
test
fstp
loope
sub
aas
js
pop
fistpl
es
scas
andb
sti
jns
es
test
mov
inc
sbb
popf
push
js
sbb
jmp
rol
jne
fdivrs
jmp
push
add
test
imul
push
pop
add
xchg
xchg
lahf
scas
and
pushf
sti
push
bnd
stos
idivb
ret
cltd
ja
movsl
sub
and
lods
rcrl
mov
rcll
nop
push
pop
mov
jmp
lock
pop
jmp
popf
or
jmp
push
push
mov
mov
repz
jmp
dec
pop
jecxz
std
adc
xorb
adc
mov
lret
call
and
pop
adc
push
out
dec
out
pusha
ds
jmp
lret
mov
jg
jmp
jbe
inc
movsl
jns
and
mov
out
jle
or
adc
pop
push
inc
push
pusha
lods
mov
pop
adc
shrb
fiadds
xor
sub
jmp
fbstp
jmp
rcrb
lods
mov
pop
std
pushf
loop
dec
xchg
add
loopne
imul
mov
jmp
addr16
mov
orl
and
sub
call
jno
jle
adc
xor
xchg
fs
in
data16
add
jmp
and
xor
sbb
mov
sbbb
jmp
xchg
mov
or
pop
jmp
cmp
or
mov
pop
jns
push
or
fldcw
loop
jo
jmp
leave
sti
aaa
jae
dec
xor
in
lods
cmp
clc
int
dec
jmp
cmp
push
cmpsl
sub
jmp
mov
mov
push
mov
mov
inc
inc
mov
cld
sbb
aam
enter
scas
pop
jae
hlt
and
sub
insl
jmp
inc
cmpsb
push
or
aad
into
mov
cli
adc
in
lock
adc
lods
repz
cltd
jg
or
sbb
sbb
iret
and
or
xchg
mov
dec
push
jmp
and
jg
sub
sub
inc
xor
daa
pop
hlt
fcompl
xchg
jmp
nop
mov
rorl
and
imul
rolb
jge
or
and
xor
mov
lret
sub
push
cmp
rolb
push
cwtl
mov
std
xlat
jp
mov
push
mov
jmp
mov
push
sbb
pop
cli
add
mov
imul
imul
push
sub
lcall
dec
xor
fisubl
in
xchg
popf
xchg
xchg
jmp
out
rol
mov
push
sbb
sti
adc
xchg
test
lods
jmp
notb
ret
addl
ss
sub
xchg
sbb
leave
fcoms
lea
pop
js
adc
jmp
mov
int3
stc
jmp
jecxz
js
and
fwait
pop
jge
ret
sahf
leave
adc
nop
lods
or
jmp
mov
add
mov
adc
out
in
pusha
sbb
dec
sub
adc
sbb
insl
sbb
cmpsl
aaa
std
mov
popa
jmp
mov
das
xchg
or
jmp
sbb
fists
cs
jmp
pop
mov
outsl
les
aam
push
in
aas
sbb
push
jmp
push
lahf
dec
inc
lods
sub
jmp
std
xchg
cmp
out
cmp
test
add
pop
cmp
ffreep
ljmp
lret
cmp
pop
xchg
and
orl
jmp
dec
aad
inc
or
ljmp
and
inc
jl
sub
sbb
jb
push
mov
adc
mov
inc
mov
mov
pop
jmp
scas
cwtl
je
sbb
push
pop
cmp
cld
addr16
into
movsb
inc
ljmp
lds
mov
sub
addr16
rcl
jmp
movsl
in
notb
bound
adc
stos
fisubrs
cmp
imul
aam
stos
mul
in
jmp
ja
mov
jmp
adc
sahf
push
jne
fsubr
fcomps
pop
dec
lret
and
notl
sbb
cmp
mov
cmp
sub
or
lods
push
inc
mov
sub
and
arpl
jo
outsl
xor
xchg
add
cltd
cli
stos
or
dec
mov
cwtl
adc
jnp
sub
movsl
sti
aam
in
sbb
sbb
inc
cwtl
mov
sbbb
lods
pop
mov
mov
sbb
jmp
xchg
xorb
cli
and
test
inc
bound
ret
mov
movl
cmpsl
pop
pop
xor
dec
mov
mov
and
xchg
loopne
pop
dec
inc
sbb
scas
cmpsb
fwait
mov
mov
or
in
mov
pushl
jecxz
xor
jp
into
jmp
cmpsl
mov
xor
cmp
jl
push
sub
jecxz
subl
sarl
jmp
into
adc
test
add
xor
imul
add
jo
icebp
or
push
dec
jmp
sti
cmp
popa
pop
test
jmp
cltd
mov
fsubr
mov
push
inc
call
mov
sub
rcrl
dec
sbb
mov
mov
adc
aad
push
cmp
cwtl
in
lods
xorl
mov
lods
roll
mov
out
jmp
and
hlt
in
arpl
add
sub
push
scas
mov
inc
and
push
and
add
lock
ficompl
pop
addr16
es
rol
mov
ret
mov
mov
jmp
pop
xchg
jg
mov
push
mov
jo
cmpsl
jp
rcll
mov
jmp
mov
scas
ljmp
dec
lcall
daa
lds
jl
cmp
das
lods
js
outsb
fcmove
xchg
jmp
ret
movsb
sub
inc
mov
fiadds
enter
push
test
dec
jmp
sbb
jle
lods
sub
mov
pop
push
jmp
out
cs
lea
jbe
aas
out
hlt
jecxz
or
sub
or
sbb
pushf
xchg
out
dec
xlat
jno
jmp
into
jecxz
sbb
out
imul
or
jnp
mov
xchg
cs
cmp
sub
xor
sbb
call
aaa
cmp
mov
cwtl
or
filds
cmp
int
pop
lcall
push
sub
jmp
and
imul
jp
dec
fisttps
mov
mov
in
and
xor
xor
lcall
jmp
adc
inc
mov
sti
repnz
jmp
jae
sbb
movsb
lods
xor
nop
mov
sbb
jmp
lods
das
xlat
popa
add
sub
add
jmp
test
push
push
scas
pop
mov
je
insl
mov
jmp
fnsave
push
inc
xchg
scas
add
in
push
jmp
mov
cmp
lods
xchg
pop
shlb
lret
ljmp
xchg
dec
js
jle
ja
pop
inc
mov
or
jmp
xchg
pop
clc
incb
add
fcomps
insl
fisttpl
dec
pop
mov
sbb
push
stc
js
or
pop
mov
lcall
mov
or
push
pop
cmc
inc
sub
adc
jmp
mov
mov
jmp
sarb
movsl
inc
pop
jnp
jmp
ljmp
mov
daa
pop
jmp
cmp
ret
adc
mov
and
pop
jb
pop
data16
xchg
fwait
sub
mov
shll
je
ja
sbb
adc
push
mov
or
outsl
in
dec
shrl
sub
out
xchg
adc
adc
cs
push
jno
or
mov
jp
movsl
jmp
nop
inc
scas
or
mov
fwait
sbb
stos
clc
lods
rorl
cltd
jmp
xlat
mov
jmp
push
repnz
ja
fnsave
clc
push
adc
cmp
pop
and
sbb
pusha
sbb
je
jmp
xor
pop
shl
mov
push
je
stc
mov
aam
jmp
movsb
cmp
mov
nop
push
sbb
sbb
lods
push
dec
inc
cmp
xchg
jp
sub
es
push
jmp
pop
call
sub
xor
cmp
mov
outsl
shll
jmp
and
push
mov
sub
pminsw
xlat
movsb
shr
cwtd
push
in
xor
stos
jmp
jmp
xchg
fsubrl
test
stos
push
pop
or
inc
adc
or
rorb
inc
xor
push
ret
cmpsl
push
subb
adc
pushf
mov
jmp
movsb
insl
jge
into
outsb
mov
pusha
push
or
sbb
pop
jmp
jae
jp
push
mov
sub
jns
pop
minps
test
sbb
test
pop
inc
imul
ja
and
jo
sub
lock
dec
jg
add
std
mov
jp
jns
scas
roll
popa
js
out
sbb
inc
or
arpl
aad
or
dec
jmp
out
pop
sbb
and
inc
testb
das
hlt
lods
adcl
sub
mov
cmpsb
fmuls
inc
sub
jmp
fnstsw
adc
push
sbb
sub
sbb
js
stos
sbb
mov
xchg
ss
cld
pop
loop
mov
xor
inc
scas
sbb
mov
xlat
xor
jmp
xor
insb
or
jmp
xor
in
jmp
or
jbe
bound
sub
adc
mov
jmp
xor
dec
loop
push
fucomip
js
sub
int3
pop
mov
insl
enter
loope
pop
movsl
mov
sbb
or
enter
mov
sbb
or
and
push
adc
mov
push
cld
in
push
cmp
adc
imul
clc
fsubl
jmp
repnz
lods
out
push
and
adc
mov
rorb
outsb
jmp
rcrl
cmpb
mov
mov
scas
scas
xor
jmp
mov
enter
icebp
jns
pop
mov
js
xchg
xor
outsb
dec
jecxz
inc
mov
shll
jg
dec
jmp
ds
fimuls
adcb
clc
out
mov
stos
and
insb
outsb
je
or
mov
jp
mov
sub
dec
mov
outsl
jecxz
sbb
aam
sub
cmp
lods
jl
pop
mov
mov
or
mov
or
por
or
lods
push
addr16
cli
cmp
jmp
nop
push
push
decl
inc
enter
xchg
fstps
fisttps
lret
aas
aaa
cltd
sbb
lods
xor
pop
orl
stos
jmp
mov
and
shll
cmp
inc
mov
jge
dec
popa
dec
inc
sub
inc
cmp
mov
mov
ss
pop
popa
push
sahf
and
pop
jmp
sbb
cmc
xchg
les
or
sbb
or
sahf
nop
jmp
outsb
sub
cltd
mov
lcall
sub
xchg
pop
jne
sub
jae
inc
xor
mov
mov
jmp
loope
repz
es
push
and
jmp
enter
lock
jge
jb
cmp
jmp
repz
sub
lret
push
mov
out
test
dec
xchg
shll
scas
mov
jb
sbb
mov
ja
fldenv
mov
or
jmp
ret
ret
dec
inc
shr
cmp
test
jnp
add
sbb
iret
add
adc
dec
loope
fbstp
cmp
aaa
lret
push
dec
fadds
lods
in
mov
mov
or
inc
xor
push
sub
jp
cmp
sub
js
and
data16
and
je
leave
pop
inc
push
test
sahf
lds
insl
jmp
jmp
sub
or
testb
aad
popf
outsb
sbb
stos
push
sbb
test
daa
xchg
movsb
sub
mov
mov
es
push
outsb
in
into
mov
inc
cs
in
add
xchg
xchg
jmp
mov
ds
sub
repz
inc
mov
sahf
and
js
add
cmpsb
call
cli
mov
dec
in
mov
and
dec
jmp
xor
sbb
in
daa
cmp
add
dec
ljmp
movsb
pop
lret
sbb
inc
mov
jmp
cmp
add
es
sbb
xor
sub
jmp
jb
push
out
jl
lcall
jae
fidivrs
sbb
jmp
or
js
pop
mov
pop
jmp
sub
mov
jmp
or
mov
xor
call
sub
subl
xchg
pop
lods
jmp
fldenv
jmp
jmp
ss
inc
gs
xchg
jmp
xlat
rcrb
add
shr
mov
imul
and
popf
push
cli
call
or
pop
mov
fdivrp
xlat
testb
jne
mov
push
repnz
aam
or
and
xor
cmp
cltd
and
aas
sub
inc
adc
aaa
push
push
sbb
lret
gs
shll
xor
dec
jge
xchg
push
lods
in
ret
adc
jmp
mov
dec
pop
jmp
stos
mov
cmp
test
cmpps
jmp
gs
xchg
int3
lds
cmc
negl
cmp
pop
les
mov
jmp
loop
cmpl
ljmp
adc
push
dec
js
lretw
lahf
jmp
and
imul
jg
mov
inc
inc
jmp
mov
sub
cmpsl
into
pop
xor
jl
jb
inc
sub
icebp
lahf
imul
mov
xor
jo
sti
roll
mov
jecxz
imul
and
jmp
add
popf
pop
sbb
outsl
inc
push
fnstsw
cmp
shrl
addr16
mov
mov
sub
hlt
mov
pop
mov
imulb
js
out
bound
jmp
stc
cltd
into
push
ja
mov
fistps
loope
add
test
and
iret
fdivl
addr16
popa
lods
mov
pop
mov
cmpsl
mov
cmp
out
dec
mov
cli
int
imul
das
popa
test
jmp
sub
sub
jmp
in
aam
push
int
mov
and
aad
and
xchg
lods
je
imul
stos
adc
loope
pop
mov
add
test
jmp
aas
mov
push
jae
xchg
jmp
xchg
mov
inc
jmp
das
cmp
ljmp
pop
les
xor
lods
jnp
es
jmp
push
sub
pop
cmp
fildll
cmpsb
scas
adc
ss
arpl
fstl
add
jmp
stc
or
xor
int
rcrl
cltd
sub
xchg
insb
xor
data16
ficomps
xchg
int3
repz
mov
enter
or
jmp
fcmovnbe
or
jg
push
or
imul
pusha
add
push
inc
movsl
add
fcmovnbe
dec
mov
mov
mov
jmp
data16
and
stos
scas
mov
jl
popf
cmp
adc
pop
push
enter
pop
mov
adc
or
shll
push
add
jmp
call
clc
sahf
jp
add
testb
mov
movsb
js
or
iret
dec
stos
sub
lods
mov
mov
pop
xor
xor
jb
xor
in
jbe
sub
or
das
dec
ret
jmp
lahf
call
fidivl
jnp
jmp
in
mov
sub
or
xor
shlb
js
jmp
setns
inc
lods
sbb
xchg
fimull
and
es
js
inc
xor
test
add
xchg
mov
or
fs
bound
loopne
jmp
cs
imul
sub
dec
in
test
jecxz
shrl
in
add
and
sbb
dec
push
pop
or
jb
pop
xor
adc
jmp
mov
sarb
jae
jl
movsb
or
mov
sub
mov
pop
and
dec
jmp
cld
jg
ret
inc
jmp
xchg
add
lret
xor
jmp
add
push
gs
fwait
pop
orl
stc
cmpsl
aad
pop
push
daa
adc
ds
mov
idiv
add
jmp
push
mov
mov
and
rol
ds
jge
js
aas
aad
sbb
mov
loopne
add
icebp
jmp
mov
mov
shll
clc
daa
push
sbb
jns
dec
and
hlt
jmp
fildll
es
test
ret
push
sbb
movsl
add
jle
adc
sbb
sub
mov
pop
cli
fstps
cmpsb
aas
scas
pop
jmp
imul
cmp
jmp
fsubrs
adc
dec
push
jo
mov
jbe
test
out
and
push
jmp
add
mov
in
mul
sub
pcmpeqd
ret
mov
out
mov
xchg
int
mov
filds
dec
jmp
xchg
fs
inc
or
test
bound
adc
or
jmp
mov
mov
pop
add
out
jmp
rcr
pop
cltd
add
rcl
cmc
test
xchg
add
vxorps
lret
popa
jns
add
fisubl
in
cmpsb
sbb
std
out
jmp
into
ret
push
data16
or
dec
sub
aam
lret
pop
repz
xchg
pop
movsb
cltd
sbb
imul
sbb
lea
xchg
mov
xor
lods
insb
xlat
pop
xor
cmp
pop
jmp
and
adc
loope
mov
jmp
jecxz
xor
xchg
ja
mov
xlat
stc
or
inc
jb
data16
sbb
adc
push
cmp
jmp
clc
push
hlt
test
jmp
adc
pop
sar
mov
adc
sbb
jae
mov
pop
sub
sub
push
sbb
or
loopne
enter
aaa
nop
ss
lret
outsb
mov
sub
cmp
jmp
dec
and
je
nop
cs
dec
out
jmp
inc
cmc
lea
jle
or
mov
sbb
sbb
mov
jmp
rcrb
pop
xchg
push
sbb
fs
mov
jg
fwait
jmp
jb
je
and
roll
adc
mov
les
lods
arpl
cld
lret
xchg
testl
adc
jmp
outsb
inc
sahf
cli
in
stos
lods
xor
sbb
jne
insb
out
and
rcrb
stos
mov
sub
test
lret
es
jmp
sbbl
imul
jecxz
dec
shll
jmp
insb
dec
mov
lcall
jle
test
out
push
mov
push
mov
loopne
jecxz
jno
mov
fs
dec
sub
mov
or
xor
jbe
pusha
jg
stos
scas
loop
ja
sub
jmp
dec
mov
mov
std
pop
add
stos
cwtl
xchg
mov
int
lods
jmp
ffreep
pop
ds
ret
and
cmp
inc
imul
fwait
jns
lret
inc
sub
or
sbb
jecxz
insl
push
fisubrl
addr16
xchg
mov
sub
mov
in
jmp
iret
ja
cmp
jp
jmp
jno
out
stos
dec
mov
jmp
xchg
push
sbb
call
push
in
or
cli
out
adc
mov
nop
scas
orb
jmp
add
jmp
call
push
lahf
or
jmp
insb
mov
push
pop
fcomps
jmp
xchg
addr16
les
jmp
ds
stos
imul
sti
mov
iret
mov
repz
mov
in
bound
out
addl
scas
xchg
jmp
out
or
lock
daa
mov
out
test
mov
inc
mov
xchg
push
jmp
lret
flds
and
jmp
cmp
cmpsl
es
mov
jmp
xlat
cli
in
pop
sahf
jmp
cmp
push
mov
xlat
push
fdivrl
popa
cs
jmp
pop
leave
sub
cli
cld
mov
loope
mov
mov
mov
cmpsb
and
inc
mov
xchg
mov
stos
test
leave
inc
jle
push
neg
inc
nop
sub
push
sti
rcrl
inc
jmp
cmp
add
ficomps
add
cmp
bound
in
xchg
andl
out
add
rol
sbb
cmp
cmpsb
adc
pusha
jmp
mov
jo
mov
adc
inc
jmp
test
nop
xchg
lods
mov
sbb
xchg
dec
or
jmp
mov
lods
jmp
es
mov
xchg
addb
or
nop
pop
inc
sub
adc
stos
cmpl
push
cltd
outsl
dec
shrb
imul
xchg
cwtl
jne
dec
xor
jbe
imul
popf
imul
jns
add
subb
and
jns
sbb
int
and
stc
push
sbb
xor
repnz
loop
and
sub
xor
adc
mov
adc
shlb
shll
mov
adc
call
inc
lahf
lcall
jmp
cmp
enter
call
out
xchg
test
shr
sub
rorb
sbb
jbe
mov
dec
push
std
dec
repnz
jmp
mov
or
sarb
lods
fsubrp
fstl
cmpsb
and
pop
push
jmp
and
jo
jmp
or
adc
sub
jge
dec
xchg
addr16
jmp
repnz
xor
dec
sti
jno
inc
and
shrb
pop
stos
ret
xor
int
leave
mov
sti
add
test
pop
cmp
adc
sub
jmp
test
push
jmp
cmp
std
popa
sub
inc
aam
es
jno
cmp
int
out
mov
push
into
andl
dec
and
lret
jmp
xchg
push
rcrl
cmp
mov
mov
imul
xor
add
and
mov
cmp
insl
hlt
jae
pop
pop
stc
mov
mov
cmp
loopne
xor
mov
mov
sarb
mov
xor
inc
mov
and
fisubs
xlat
mov
jmp
jno
outsb
cltd
in
jbe
sbb
inc
scas
lds
cmpb
push
mov
int3
in
fildl
jmp
popf
negl
adc
and
add
jmp
test
je
mov
mov
test
or
jmp
imul
jmp
mov
jo
jmp
mov
movsl
mov
aaa
fldl
je
jmp
xchg
jbe
or
pop
cli
jmp
aaa
or
lret
inc
add
mov
inc
ds
jmp
mov
movsb
das
xchg
ljmp
sbb
mull
xor
jmp
dec
mov
lea
repz
mov
imul
jne
sar
adc
cmp
mul
imul
pop
xchg
and
mov
adc
dec
scas
adc
lods
sarl
dec
sar
neg
in
stos
subl
mov
popa
stos
mov
daa
jmp
cmc
adc
xchg
mov
je
int3
shr
repz
and
pop
ret
push
xchg
arpl
jmp
lcall
mov
movsl
repz
mov
mov
or
inc
xchg
loopne
jmp
dec
lcall
cmpb
negb
jb
and
outsb
xor
repz
push
data16
mov
mov
dec
sub
movsl
ficomps
and
test
push
pop
js
mov
imulb
test
sub
pop
dec
add
pop
jmp
popa
daa
js
dec
movb
inc
mov
sub
call
mov
movsl
hlt
jmp
dec
imul
pop
mov
test
pop
fucomp
rorb
add
fstps
mov
imul
cmp
dec
dec
sbb
sub
repz
jg
xchg
and
jmp
int3
popa
rcll
mov
test
js
inc
jmp
mov
inc
mov
mov
testl
imul
mov
loopne
mov
and
mov
loopne
stc
add
scas
jg
out
sub
loopne
jae
mov
and
scas
test
and
fldl
inc
hlt
icebp
rclb
mov
aas
jmp
loop
sbb
cld
mov
iret
xchg
add
inc
jge
je
outsb
imul
and
lahf
adc
push
push
sbb
jmp
fimuls
loope
cs
sub
dec
xchg
jmp
mov
inc
std
popf
adc
outsb
scas
jle
xor
call
jmp
cld
sarl
cmp
or
xor
cmp
lret
xchg
mov
sbb
cs
scas
popf
imul
in
add
test
pop
jb
sub
mov
pushf
and
and
or
sbb
jmp
push
and
mov
fsubr
cmpsb
jg
add
push
repnz
lods
insb
dec
jb
xor
sub
lcall
xchg
lods
lds
pop
dec
pop
dec
jmp
mov
and
xor
mov
and
das
lret
jb
jae
sti
nopl
out
popf
pop
mov
sub
insl
lods
jno
loopne
sub
cmp
push
rorl
iret
lock
cmp
sub
mov
and
adc
mov
and
mov
sub
call
je
cli
stos
mov
sti
cmp
repz
mov
lret
jmp
scas
and
sbb
push
fcoml
jno
inc
or
mov
adc
test
pop
movsb
xor
cli
xchg
pop
aam
hlt
lds
imul
dec
pop
andb
xlat
mov
dec
xor
pusha
js
mov
int
lods
sbb
xchg
mov
or
pop
or
lret
arpl
mov
scas
lock
sub
test
in
lret
sbb
push
pop
pop
jmp
insl
movsb
jmp
je
xchg
std
push
push
pop
leave
mov
pop
dec
add
add
jl
aaa
sub
leave
stos
inc
pop
pop
gs
test
daa
dec
cmp
mov
sti
repz
das
call
xchg
jmp
pop
cmp
js
lret
lahf
inc
daa
call
and
pusha
mov
xor
sbb
scas
aas
mov
sbb
addl
out
jne
jg
and
lods
fdivrl
jp
mov
sub
add
js
and
sbb
jmp
sbb
mov
xor
fwait
add
pop
lods
outsl
add
aad
jmp
verr
scas
sbb
pop
loopne
sbb
pop
mov
mov
scas
or
xchg
in
adc
jmp
push
and
pop
fsubrl
mov
jns
test
popa
ss
add
jmp
sbb
xor
or
push
adc
and
aad
or
sbb
sbb
fisubrs
das
aam
mov
jmp
fsubs
mov
lock
std
lods
aas
sub
and
orl
cmpsl
jnp
out
jns
jge
or
xchg
mov
pop
test
mov
insb
sti
sub
imulb
sbb
xchg
in
leave
loope
sub
mov
jmp
fmull
bnd
jo
not
addr16
xchg
or
pop
int3
mov
jmp
dec
xchg
jmp
ja
xchg
aad
lods
push
mov
notb
mov
cmp
xor
mov
popf
jmp
mov
shr
std
or
clc
and
sub
pop
sbb
xor
jmp
in
outsl
cmpsl
pop
loopne
sub
cmpsb
and
dec
pop
daa
lret
jl,pn
ds
lret
and
pop
jb
lcall
add
jge
sub
mov
sbb
pop
mov
lods
pushf
in
dec
adc
and
and
sti
out
lods
sbb
push
mov
xchg
insl
cmp
and
mov
seta
sbb
xchg
in
mov
dec
cli
out
inc
inc
lods
cs
sub
idivl
xor
lods
aad
adc
notl
sub
sbb
movsb
mov
mov
cmp
cmp
jecxz
jnp
adc
lea
inc
add
and
inc
int
movsl
or
cli
xchg
es
jmp
add
test
sub
sub
ja
into
imull
dec
push
ljmp
ljmp
and
cmp
bound
cmp
xchg
mov
lea
or
lods
sahf
ljmp
pop
cmp
out
mov
jmp
mov
mov
shr
testl
lret
int3
jmp
stos
xchg
push
xchg
aaa
ds
add
inc
jmp
jle
ss
dec
sub
mov
gs
cmp
push
shl
dec
mov
and
jmp
cmpsb
leave
adc
mov
sahf
and
scas
lret
pop
stos
jmp
pusha
ret
add
mov
add
out
test
xchg
xchg
mov
mov
out
in
push
or
ss
and
jmp
out
ficoml
jbe
mov
jp
jb
repnz
sbb
push
xor
outsl
loopne
mov
test
imul
int
xchg
cmpsb
mov
jmp
dec
inc
test
in
addr16
mov
testl
outsb
push
sub
or
div
push
jmp
push
inc
or
lret
shlb
adc
sub
lds
jge
push
bound
nop
aad
fldcw
sbb
push
jmp
pop
fs
in
xchg
jmp
test
lock
sub
cmp
scas
fldpi
mov
push
or
test
test
adc
inc
dec
dec
sbb
pusha
lods
leave
dec
mov
ja
mov
sahf
cmc
out
adc
je
lods
xor
mov
inc
jg
jmp
fwait
call
outsl
lods
in
xchg
int
stos
adc
mov
mov
jmp
xlat
and
xor
add
jmp
loope
popa
pop
lcall
or
repnz
jno
cmp
xchg
adcb
cli
nop
sbb
test
repz
cmp
jg
mov
dec
out
call
stos
xor
jne
mov
loop
pop
sub
adc
lods
loope
push
jmp
enter
test
in
bound
andl
sub
jae
push
and
pop
cwtl
dec
bound
ret
inc
fimuls
sbbb
sbb
fldcw
fisubl
cli
rorb
push
mov
cli
lret
adc
insl
sub
iret
mov
jae
arpl
xchg
int3
popf
push
es
ss
jne
add
xchg
sbb
adc
xchg
imul
inc
mov
outsb
push
or
int
mov
xchg
mov
lret
bound
ror
lods
xor
repnz
test
test
faddl
add
jmp
notl
out
ret
sbb
mov
or
mov
dec
dec
cmp
jmp
scas
add
pop
jb
aaa
jp
push
pushf
push
adc
sahf
in
cmp
js
jmp
pop
fcmovb
dec
pop
jmp
mov
rep
imul
pop
inc
jmp
jo
add
sub
xorb
popf
sbb
push
pop
daa
and
xor
stos
test
or
pop
jno
jne
adc
andb
xchg
cmp
jmp
push
push
mov
xchg
sub
or
xor
and
pop
sbb
lret
inc
cmpsl
orb
or
xor
loope
dec
hlt
popf
cli
jl
fisttps
mov
or
cmp
mov
mov
dec
jmp
sbb
shll
mov
lods
cmp
test
jle
sub
or
cmpsb
ja,pt
mov
add
mov
or
mov
pop
aaa
push
jecxz
fcoml
lods
xor
popa
jae
add
add
lods
xchg
imul
inc
pop
cmpsl
jmp
fdivp
sbb
mov
and
jmp
cmp
ja
jmp
call
mov
icebp
sbb
lret
aad
data16
mov
imulb
push
jmp
mov
movsl
enter
stc
sub
mov
mulb
jecxz
icebp
pop
jmp
push
cwtl
in
mov
push
mov
lods
sbb
jmp
or
mov
sub
scas
jmp
cmp
and
outsl
imul
cltd
pop
lcall
and
jae
xor
nop
and
sub
negl
into
sub
jmp
sub
jmp
xorb
jae
test
vpcmpeqd
pop
inc
imul
jns
jmp
xchg
test
ja
inc
push
pop
fwait
subb
push
fildll
popa
inc
pop
mov
test
add
or
stos
fdiv
cmp
sbb
jmp
jmp
cmp
sub
jp,pn
addr16
mov
scas
push
ret
shrb
mov
sbb
sti
imul
stc
bnd
or
inc
rclb
sub
std
out
enter
ja
lods
iret
notb
ror
jmp
inc
or
int3
hlt
xchg
les
test
jmp
inc
or
test
imul
sti
je
icebp
mov
mov
mov
fwait
jmp
push
test
shrd
rorl
add
inc
pop
jmp
ds
idiv
mov
lret
jno
iret
sahf
stc
out
jmp
jg
jmp
outsl
and
shr
mov
cmp
xchg
jmp
aaa
test
shrb
jmp
test
mov
dec
mov
jge
cmp
scas
paddusw
push
pop
mov
mov
nop
notl
gs
and
add
in
call
inc
push
insl
jmp
or
shrl
outsb
xchg
dec
pop
mov
dec
and
outsb
pushf
rorb
mov
cmpl
jmp
in
test
push
add
mov
add
neg
dec
adc
pushf
add
lods
xchg
lds
jge
orl
or
cmpsl
lods
jae
shl
mov
and
jmp
xor
jb
in
jns
aam
sti
leave
jmp
mov
mov
jmp
shlb
shlb
xchg
or
rorl
add
rcll
mov
cs
scas
xchg
ljmp
jb
pop
lods
push
stos
mov
aad
adc
jo
mov
pop
and
cli
imul
addb
arpl
add
cmp
scas
cmp
es
push
fsub
imul
rcr
sar
pop
adc
adc
pushl
sbb
test
fdivl
push
and
jmp
mov
jmp
es
sub
dec
je
mov
insb
or
or
mov
scas
mov
imul
fistl
aam
jp
cmpsb
mov
jl
bound
cmc
push
add
mov
push
jmp
mov
push
int
and
jo
roll
or
jmp
jne
add
xchg
pop
sub
cltd
inc
cmpsb
in
push
hlt
pusha
ret
sti
sub
out
jo
add
popf
leave
and
xchg
sub
lods
jb
stc
fucomp
fdivs
adc
fs
mov
xchg
mov
and
xchg
jmp
rep
push
dec
subb
int
mov
mov
mov
push
scas
jmp
dec
pop
push
mov
out
cmp
lods
jmp
pop
shlb
sbb
or
cwtl
lock
add
jmp
scas
test
jnp
aam
lods
mov
repz
sub
push
std
mov
jg
mov
ja
xor
lods
sub
mov
pop
sbb
daa
outsb
jne
cmpsb
push
shr
mov
mov
divb
sub
mov
sub
lret
popf
sbb
jp
daa
icebp
jmp
or
mov
jnp
mov
movsl
sub
jmp
addr16
jne
ret
pop
cli
lods
pop
pop
dec
daa
cli
outsb
repz
test
push
and
inc
daa
mov
xor
lea
dec
ret
lret
repnz
sub
adc
call
pop
lods
sahf
iret
aam
mov
xor
arpl
outsb
insb
xchg
mov
jle
into
push
push
std
negl
xlat
in
push
pop
dec
pop
pop
sbb
aad
jmp
nop
ret
dec
stos
sub
cmp
rorl
out
mov
repnz
rolb
repz
and
into
aaa
and
int3
sbb
loope
cmpsl
jmp
iret
adc
leave
scas
fwait
xchg
cs
iret
jo
out
loopne
mov
or
sub
sahf
test
jmp
dec
arpl
inc
lea
imul
cmp
bound
sbb
sub
mov
loope
push
or
sub
push
inc
push
mov
or
push
pop
dec
mov
or
lahf
pop
or
outsb
add
addr16
jmp
dec
cs
insb
cmc
sub
push
lods
lret
in
nop
jmp
subb
sar
jmp
sbb
pop
fwait
cmp
movsl
sub
pop
fcompl
stos
jmp
jmp
dec
lret
and
ret
cwtl
push
scas
jp
sub
mov
xchg
dec
xor
jae
pusha
jno
test
jmp
and
mov
jmp
push
fisttpll
in
mov
xor
shrl
push
mov
lods
cmp
adc
mov
jmp
aas
mov
mov
mov
xor
xchg
jmp
xchg
add
jae
mov
jmp
stos
ret
shl
jno
scas
push
xchg
jl
or
scas
cmp
jmp
dec
sahf
sub
sub
int3
fldl2t
xchg
adc
bnd
add
adc
scas
jmp
push
aad
loopne
imull
and
xchg
stos
dec
adc
test
scas
push
js
xchg
in
gs
call
xchg
mov
loope
jns
or
out
sti
jmp
out
out
shlb
nop
jmp
mov
lahf
push
idivl
rcrb
pop
adc
aas
dec
jne
inc
pusha
pop
test
adc
jnp
jecxz
ret
js
enter
inc
inc
cmp
jmp
xchg
inc
inc
bound
push
sub
mov
jg
jns
int3
push
inc
shr
adc
lods
adc
xor
iret
nop
mov
ud2
fs
pop
xchg
jge
sub
repz
test
outsb
aad
lret
inc
jmp
sbb
and
fsubrl
mov
cmp
jbe
mov
imul
ja
mov
and
mov
fsubs
inc
push
inc
mul
call
cmp
sbb
testl
popl
xchg
and
fisubrl
repz
pushf
nop
xcrypt-cbc
cmpsl
pop
arpl
imull
outsb
lret
cmc
inc
jo
sub
mov
addr16
stos
outsb
imul
sbb
mov
ljmp
inc
inc
scas
loop
dec
cmp
scas
jmp
lods
daa
enter
pop
and
aam
push
shrb
or
ficompl
mov
insb
cmp
sbb
sub
lods
inc
enter
icebp
adc
inc
iret
jmp
pop
mov
les
jae
jno
mov
or
pop
push
pop
jnp
push
jmp
out
jmp
fsubrs
cwtl
fsubr
es
cld
jle
test
sub
push
cmp
popf
sub
pushf
push
in
cli
cmp
jb
lods
sbb
out
aaa
scas
jecxz
pop
mov
sti
and
outsb
pop
sbb
lds
incl
inc
cmpsl
jmp
push
xor
jmp
push
pop
dec
mov
jnp
xor
outsl
jmp
mov
imulb
mov
jmp
sub
fcmovnbe
movsb
sbb
cltd
mov
xor
aas
clc
adc
ja
fstpl
xor
mov
jmp
push
cmp
es
shr
fdivr
repz
mov
sub
dec
sbb
xchg
movsb
dec
push
fbld
xor
gs
sbb
test
int
sbbb
daa
jmp
into
hlt
mov
push
out
test
imul
dec
dec
and
lea
subl
ja
jbe
jmp
cmpsb
popa
jno
xchg
fisttpll
jns
imul
mov
loop
pop
add
lods
lods
je
int
jp
mov
sbb
cmpsb
sub
sti
fiaddl
js
add
pop
mov
aaa
in
cmp
dec
jmp
xchg
out
popf
inc
into
xlat
adc
pop
sub
imul
jmp
jns
jmp
out
loopw
in
push
stos
xorl
xor
jmp
cmpsb
or
jmp
incb
insl
testb
inc
adc
ffreep
pop
jmp
pop
push
cmp
jmp
add
sarl
outsb
inc
sti
loope
data16
fbstp
and
push
fldt
icebp
adc
inc
pop
jo
sub
mov
jb
mov
pop
xor
test
dec
pop
cmp
jl
jns
mov
sbb
cmp
jmp
mov
jg
or
pop
and
sbb
pop
sbb
je
dec
test
daa
inc
push
sbb
test
push
sbb
jmp
int
push
icebp
mov
or
aaa
add
imulb
mov
loop
repz
xchg
jmp
clc
inc
cld
mov
xchg
add
outsb
int
mov
jmp
data16
imul
pop
jnp
mov
sahf
cmp
sbb
lahf
in
adc
cs
clc
call
cmpsl
mov
pop
jmp
out
dec
xor
jmp
push
imul
aam
lcall
push
das
mov
movsb
mov
jmp
inc
shl
mov
mov
jg
insl
sbb
leave
es
in
pop
xor
mov
add
je
call
cmp
cmp
inc
jmp
dec
bound
scas
mov
scas
mov
mov
or
lods
sub
pop
or
pop
mov
loopne
jmp
scas
cmc
or
addr16
rorl
es
stos
sbb
sub
mov
stc
jmp
cmp
push
gs
imul
dec
jmp
pop
xchg
stos
insl
mov
xor
sbb
jmp
push
and
sbb
jns
mov
dec
dec
cmp
in
cmpsl
loope
xor
cmp
mov
lods
and
mov
adc
insl
jmp
xchg
fs
or
mov
jmp
repnz
jnp
jmp
cmp
scas
in
clc
mov
dec
dec
push
sbb
pop
dec
jne
in
fisubl
jmp
or
int
adc
gs
fwait
xor
or
mov
sbb
add
fadds
adc
cmp
mov
call
sbb
ss
repnz
xchg
cmp
add
jmp
sbb
jmp
xchg
xor
cmpb
and
mov
and
mov
pop
jmp
push
mov
repz
out
lods
arpl
outsb
mov
jg
mov
add
inc
add
jno
jo
inc
fldenv
insl
loop
fdivs
jle
xor
cmp
mov
lret
pusha
and
lret
dec
ljmp
or
push
or
mov
cmc
xlat
jmp
mov
adc
cmp
ss
sub
and
sub
push
pop
pop
aam
fwait
dec
repnz
jl
push
xor
and
lods
cmpsl
and
cmp
pop
sbb
xor
cmpsb
adc
test
fcompl
std
and
sub
stos
mov
push
cmc
mov
mov
pop
jmp
leave
pop
adc
mov
cmp
xchg
xchg
shl
fbld
iret
xchg
aas
ficoms
fdivrs
mov
incl
xor
push
popa
mov
into
loop
fucomip
lret
and
jno
outsb
xor
xor
imul
ljmp
xchg
mov
jno
jae
adc
xchg
shrl
wbinvd
inc
lds
test
fimuls
pop
jmp
add
adc
xchg
enter
fs
in
popa
push
xor
cmp
dec
imul
or
inc
jne
icebp
cmp
fmuls
jmp
and
shr
fwait
push
pop
xchg
dec
fsubl
es
or
or
test
rcl
ret
push
movsl
dec
lods
cmc
add
sub
sti
dec
gs
cmp
nop
mov
arpl
jmp
ds
dec
push
adc
and
cs
inc
out
ljmp
dec
sbb
inc
and
cmp
adc
movsb
in
popa
enter
or
sub
mov
xlat
sub
jmp
les
pop
jmp
push
xchg
add
aad
jmp
fnstenv
mov
jno
mull
stc
test
jb
pop
inc
sub
jmp
xor
mov
jmp
adc
xor
and
nop
fwait
xor
ret
or
ud2
inc
cmp
mov
cli
and
aad
jmp
scas
adc
mov
mov
push
inc
sahf
push
outsb
jnp
or
fsubr
jbe
xchg
cmp
sub
xor
repz
imul
outsb
pushl
rorb
fildl
mov
in
loopne
outsl
jb
cld
fimull
mov
or
jecxz
inc
lods
xor
pop
sbb
xchg
xchg
nop
scas
sbb
je
inc
cmp
shll
jmp
xor
out
jle
daa
mov
shll
insb
div
jmp
or
stos
mov
push
sbb
mov
insb
mov
jmp
lds
or
clc
nop
jmp
fiaddl
inc
es
pop
gs
icebp
pop
dec
sbb
jno
jmp
outsl
loopne
pop
lods
mov
leave
ds
sub
mov
jmp
imul
sub
std
push
stos
sahf
xchg
jmp
and
enter
cs
adc
stos
jae
inc
inc
pop
scas
fimuls
inc
popa
mov
sbb
std
adc
mov
jecxz
test
dec
jmp
insl
mov
mov
pop
jmp
hlt
mov
pop
jmp
jle
cmovle
xor
fsubrs
cmpsb
in
push
fimull
nop
int
jmp
in
out
adc
out
mov
popf
bound
adc
pop
jmp
movsb
imulb
and
out
fsts
push
daa
sub
sbb
mov
xlat
adc
nop
out
ljmp
or
xor
mov
in
pop
xchg
sub
inc
sbb
lea
add
pop
out
xchg
fldpi
lret
add
mov
sub
jecxz
inc
scas
sub
and
jmp
fdivl
cmp
inc
pop
jo
int
jmp
dec
add
xlat
gs
inc
xchg
jno
push
mov
sbb
movsl
jmp
fisttps
lret
jmp
ss
jecxz
jmp
and
aad
ja
push
imul
sub
jmp
dec
imul
aas
cmp
cmp
leave
push
stc
adcb
push
jmp
jnp
xor
dec
dec
xchg
jne
iret
jmp
rcll
push
xorb
test
cmpsb
shlb
lock
adc
std
inc
mov
push
out
int3
or
dec
mov
stos
jb
pop
jl
or
mov
jmp
aas
fcomp
xchg
ljmp
jb
push
or
jmp
dec
je
xchg
add
lods
faddl
stos
mov
hlt
andb
cs
jmp
scas
lcall
test
push
jmp
stc
cmpb
cmp
ss
daa
test
daa
loop
jmp
mov
test
pop
and
pop
mov
jmp
ret
mov
call
dec
or
pop
fucomi
pop
data16
mov
addr16
push
lcall
cmpsb
adc
outsb
ret
mov
cmpb
hlt
sbb
fadds
pop
add
adc
and
push
lods
sub
cmp
ret
add
pop
pop
loop
jns
xchg
or
aad
mov
stc
dec
std
ficoms
jmp
in
push
es
lea
jmp
mov
test
push
cmp
daa
loope
sub
std
mov
lret
shrl
daa
aam
jmp
cmpsl
gs
sahf
jmp
nop
adc
lods
xchg
repnz
lea
lods
pop
aad
mov
inc
sub
bound
or
jmp
lahf
jge
inc
sti
popf
insl
mov
into
movsb
daa
push
imul
ljmp
loop
jmp
pop
xlat
dec
mov
fnstsw
sti
or
pop
jo
jmp
push
mov
popf
loopne
pop
mov
jmp
xor
leave
xor
sbb
rcr
ret
and
jmp
xor
lock
and
sub
push
jmp
push
or
adc
pop
das
pop
ficoml
lods
repnz
add
notw
jnp
jmp
int3
xor
xchg
test
jmp
in
mov
inc
cwtl
aam
shll
dec
arpl
testl
mov
sub
inc
mov
shr
add
jmp
imul
adc
xor
js
clc
lods
push
test
inc
push
inc
stc
pop
incl
jmp
xor
out
mov
xor
pop
jmp
inc
addr16
lods
dec
mov
hlt
test
pop
aaa
out
je
sbb
mov
xor
xor
mov
adc
jbe
sub
scas
pusha
jb
dec
das
je
stc
es
push
daa
sbbb
imul
or
mov
jne
jle
scas
lds
imul
push
or
and
jmp
jecxz
push
and
out
add
or
mov
rol
lock
add
add
test
shrl
daa
mov
sbb
dec
sub
out
stos
ds
mov
jae
lods
iret
rol
and
sbb
xchg
std
add
xchg
pop
jmp
mov
cld
add
add
dec
and
jl
cmp
aam
bound
and
jmp
roll
xor
lods
push
sub
adc
sbb
dec
xchg
dec
or
mov
pusha
cmp
xchg
cmp
outsb
imulb
xor
mov
fisttps
mov
xchg
leave
repnz
inc
or
xor
cld
pop
cs
loope
mov
mov
add
stos
xchg
lds
out
sub
adc
adc
iret
mov
loope
pop
mov
repnz
inc
sbbb
push
movsb
shrb
jmp
mov
andb
ret
sbb
lea
jmp
ss
fs
xchg
inc
pop
je
jne
lea
and
cmp
adc
addb
out
scas
and
mov
xchg
jmp
popf
cmpsl
mov
xor
fs
adc
hlt
sti
inc
mov
jp
es
jmp
mov
dec
mov
in
hlt
adcb
inc
jmp
or
push
mov
out
adc
test
mov
je,pt
mov
loopne
push
push
mov
sub
jmp
xchg
sbb
bound
add
mov
pop
int
cltd
testl
xor
js
fwait
push
xchg
int
test
mov
jmp
jl
add
jmp
sbb
in
mov
or
jmp
or
fsubs
aad
jmp
mov
push
xchg
fbstp
in
popa
insl
subl
adc
xchg
jmp
mov
xor
or
jbe
dec
nop
jmp
sub
cltd
arpl
inc
mov
cmp
pop
jecxz
push
cmpsl
sbb
ret
lcall
cltd
jmp
pop
mov
adc
sub
or
jo
mov
pop
jo
orl
add
test
das
cli
mov
rorb
jmp
inc
or
aad
jns
mov
jmp
mov
add
lods
sub
push
out
lock
imull
test
pop
jmp
in
rclb
jns
popf
jmp
cmp
dec
in
repz
js
add
jmp
hlt
xchg
cmp
ret
mov
dec
loop
dec
push
pop
jmp
lds
cmp
xor
dec
in
push
push
out
sbb
gs
arpl
sbbb
shr
or
cmpsb
sbb
scas
adc
adc
shl
movb
sti
adc
popf
sub
fisubs
xor
test
popl
test
jecxz
inc
into
mov
push
int
add
rclb
fisubrl
lret
jmp
imul
insl
pop
xchg
js
jb
std
inc
dec
icebp
popa
sbb
out
jbe
scas
jmp
sbb
insb
xor
out
ds
add
jmp
adc
push
pop
hlt
jmp
inc
pop
in
es
andb
aad
outsb
imul
incb
jmp
ret
or
jmp
testl
sbb
cwtl
inc
mov
jmp
inc
out
fsubs
jbe
daa
push
sub
jmp
push
mov
subb
jecxz
mov
jmp
and
bt
xchg
and
loopne
cmp
sub
data16
test
out
pop
sub
sti
sub
add
jle
int3
cmpsb
push
dec
mov
ret
imul
sub
push
loopne
dec
in
sbb
mov
and
cmp
sbb
mov
add
rcr
out
repnz
in
jmp
mov
jmp
mov
lcall
mov
adc
pop
jmp
adc
jl
fidivrl
fs
imul
sti
inc
and
dec
mov
in
fs
mov
icebp
and
jecxz
jmp
jo
loop
push
sub
or
jmp
scas
bnd
mov
jg
xchg
cmpl
cli
pop
adc
jb
dec
movsl
sti
sub
xchg
jle
fstl
rcll
push
lcall
and
adc
push
jmp
pop
mov
sub
in
mov
xor
adc
mov
xchg
add
cmp
push
jb
shr
adc
mov
insl
lods
xorb
loope
xlat
mov
jmp
not
ret
and
mov
jge
imul
or
xor
dec
imul
add
sub
mov
inc
pop
cmp
push
mov
jmp
enter
out
sub
lock
jmp
add
lcall
push
inc
adc
add
lods
cld
xchg
sub
aad
and
in
mov
lods
es
or
imul
fcompl
push
lahf
sti
xchg
xor
iret
dec
mov
addr16
sbb
mov
or
pop
xor
mov
and
es
mov
std
mov
jmp
lods
andl
popf
and
jo
mov
jle
pop
outsb
push
or
and
mov
mov
cmpsb
lcall
fmul
mov
adc
push
pop
push
mov
gs
ljmp
cmp
jbe
mov
inc
dec
add
sbb
fmul
and
mov
fcoml
sub
pop
cmpl
inc
jmp
loopne
push
xchg
add
cmp
repnz
cmp
in
cmp
aad
push
jmp
lods
shll
sbb
lock
add
aam
leave
call
mov
mov
bound
inc
push
daa
dec
jmp
xchg
and
fs
adc
jmp
stc
imulb
je
mov
add
insb
dec
cltd
movsb
test
xlat
subb
pop
add
jmp
cmp
xor
inc
movsl
jae
add
ds
push
add
dec
jmp
mov
pushf
and
call
cmp
mov
pusha
das
pop
ficoml
inc
iret
xlat
and
lcall
adc
cs
jmp
repz
mov
jmp
mov
sbb
mov
test
pop
rcrl
inc
imul
jl
or
sbb
jmp
lcall
and
jmp
or
push
nop
mov
mov
aaa
out
sub
inc
adc
mov
or
andl
or
jne
por
push
sub
and
fldt
into
or
or
jb
push
xlat
dec
sbb
jg
xor
sbb
cmp
or
scas
jbe
cmpsb
sti
or
jecxz
xlat
dec
jmp
pop
push
push
sub
into
jmp
aad
imul
push
jmp
scas
mov
pop
cmp
jmp
mov
sbbl
cwtl
push
mov
cli
jb
std
jmp
jle
cltd
mov
adc
imul
fcoms
gs
xchg
xchg
clc
es
repnz
mov
jmp
ss
jmp
lcall
jmp
pop
ficompl
jmp
iret
clc
lds
mov
mov
movsl
in
cmp
out
or
adc
and
jmp
stos
xchg
mov
mov
leave
cmp
ljmp
cmpsl
xchg
scas
rcrl
xchg
xor
int3
jmp
sbb
xchg
pop
cmp
mov
outsl
jmp
lcall
xorb
xor
xchg
push
mov
andl
xchg
insb
adc
ljmp
adc
fcoml
cmc
je
dec
or
lods
cmp
shll
outsb
jl
shlb
add
mov
ds
lods
mov
dec
in
in
int
or
cmp
cmpsb
xor
push
jno
or
outsb
push
xchg
mov
xor
std
jmp
into
cmp
xchg
push
lods
jmp
jg
popa
or
fbstp
cmp
test
cwtl
jne
inc
hlt
adc
inc
arpl
pop
mov
loope
ret
int
pop
xchg
cs
insl
pop
adc
mov
xorb
mov
cltd
xor
lods
outsb
test
cmp
jmp
mov
sub
movsb
xor
ss
mov
or
call
test
pop
jns
in
jecxz
jmp
add
mov
test
inc
jmp
jg
sub
mov
mov
lods
jo
xor
lcall
idivl
rorb
or
jae
jno
jmp
mov
and
jmp
je
nop
call
out
in
enter
cmp
jns
in
jmp
xlat
jns
outsb
adc
jmp
in
push
inc
sar
jmp
sbb
adc
stos
ret
repnz
pushf
jmp
or
icebp
test
cmc
movsl
cmp
ss
push
xor
mov
and
mov
xchg
fstpt
lret
in
mov
ds
lods
sub
psubw
jmp
scas
mov
inc
add
aas
xchg
cmp
outsb
nop
jmp
pop
xchg
cmpl
pop
in
pop
sub
sbb
data16
jmp
lds
in
lods
and
add
repnz
repz
fs
outsb
or
loope
stos
clc
cmp
outsb
add
cmp
jmp
add
dec
cs
pop
sub
cmpsl
in
and
ja
jmp
mov
push
push
test
jmp
jns
loop
fdivs
jmp
or
fstps
fwait
cs
ror
in
sbb
mov
cli
enter
push
mov
and
dec
pop
lods
fistl
pushf
sbb
push
ja
push
jp
cmp
jbe
stos
sti
xor
push
xor
lods
aam
jge
mov
jae
stos
aaa
sbb
movsl
pop
bound
sub
inc
enter
add
add
ja
xchg
addr16
add
sub
mov
add
mov
dec
fists
add
push
movd
daa
jns
lock
fidivl
dec
xchg
add
jp
xchg
mov
insl
and
int
dec
or
xchg
int
divw
aaa
or
lods
dec
fs
rclb
sti
sub
mov
mov
movsl
sub
dec
popa
push
push
jmp
push
adcl
dec
lods
jmp
pop
cld
ljmp
add
leave
dec
xchg
test
call
les
scas
outsl
stos
xchg
sub
jo
inc
lret
rcl
and
pop
mov
push
jmp
cmp
or
or
cmc
ljmp
lods
notb
sbb
iret
lods
aad
and
push
jmp
and
sub
das
scas
sbb
or
lods
dec
cwtl
pop
inc
enter
sbb
stc
adc
repz
and
mov
dec
dec
xlat
jmp
fnclex
push
xor
jo
lock
cmpsb
ss
sub
fs
loop
in
or
movsb
rorb
jg
xchg
dec
dec
cmc
pop
aam
push
mov
enter
pop
jmp
push
adc
mov
mov
pop
pusha
push
xor
and
mov
mov
mov
icebp
jmp
adc
xchg
stc
in
or
fisubrs
jmp
cmpb
mov
mov
mov
sbbl
mov
pusha
addr16
hlt
pop
jmp
idivb
int
addb
jg
lret
sbb
sub
xor
inc
and
cli
out
sti
xchg
or
cmp
gs
push
lahf
mov
xchg
fwait
add
xchg
repnz
test
adcb
jmp
pop
pop
ss
lcall
leave
pop
stos
std
mov
sbb
sbb
loop
lret
or
push
mov
shr
jg,pt
push
lods
cwtl
pop
ljmp
pop
jmp
xchg
iret
stos
and
loope
jmp
adc
lods
jmp
pop
movsb
jg
inc
inc
jb
jo
dec
push
shll
cwtl
jecxz
fstps
jnp
fildl
jmp
movsb
sub
or
dec
add
lds
aaa
pop
cmp
loope
dec
jmp
dec
mul
dec
das
pop
mov
xchg
inc
push
and
testl
lods
js
dec
out
add
xlat
mov
mov
mov
jp
scas
nop
jmp
xchg
lea
xor
sbb
fs
inc
out
shrl
xor
ret
xor
jmp
sub
cmp
stos
inc
jmp
mov
gs
pop
xchg
sub
idiv
out
sbb
shl
jmp
dec
cmp
mov
xchg
inc
sub
push
inc
inc
jmp
sub
sbb
pop
cltd
mov
xchg
inc
pop
ja
cs
dec
add
sbb
lea
push
test
add
xchg
add
dec
fsubr
jle
jecxz
nop
int
or
inc
or
xchg
mov
cmp
fs
inc
leave
xor
sti
popa
or
add
jmp
cli
out
mov
insb
test
jle
add
dec
testl
cwtl
jg
stos
cmpl
faddp
repnz
imul
jge
test
pushf
repnz
or
sbb
mov
out
int
dec
mov
stc
loopne
inc
jmp
xor
notl
mov
fucomi
add
bound
jmp
sti
movsb
mov
fidivl
pusha
and
es
dec
jl
sub
jge
test
jle
cmp
mov
iret
mov
or
inc
jmp
cmpsl
jle
bnd
int3
lods
fsubl
and
adc
xchg
subb
mov
xchg
and
inc
jmp
add
jne
mov
outsb
push
xor
cmp
mov
loope
pusha
xor
jae
sti
push
roll
inc
or
lods
jecxz
adc
decl
cmp
rcll
xchg
mov
mov
push
cmp
lret
cmpsl
jmp
pop
bound
jecxz
mov
add
or
xor
scas
mov
adc
repnz
sub
and
pop
pop
xor
sub
cmpsb
stos
xlat
mov
or
stc
loop
or
popf
xchg
fsubrp
add
pop
dec
sub
lods
and
pop
mov
and
sub
xchg
es
xchg
fdivs
outsb
pop
and
mov
imull
adc
daa
lahf
jmp
mov
jns
fdivrs
jae
jle
mov
in
dec
cmp
andb
stos
sbb
sub
scas
loopne
shr
pop
push
xchg
push
test
pusha
add
out
lock
jbe
dec
cmpsl
xchg
dec
inc
xchg
cmpsb
push
pop
bound
fucomip
jl
int3
and
mov
pop
lea
xchg
or
iret
inc
ljmp
es
xor
cmp
push
jmp
subb
mov
mov
out
cmc
jmp
popa
frndint
les
mov
lret
imul
test
imul
add
cmp
pop
ja
push
in
xchg
xor
shrl
mov
xor
dec
add
faddl
xor
pop
dec
cltd
lods
jmp
mov
sub
andl
jae
in
sub
mov
ret
les
jmp
into
pop
cmp
daa
push
sbb
sub
imul
push
leave
sbb
push
jae
pop
or
scas
xchg
fdiv
mov
or
in
pop
mov
jmp
cld
sbb
nop
loopne
ret
scas
mulb
push
xchg
adc
jmp
jb
loopne
or
or
imul
cli
push
jmp
iret
or
scas
jmp
sbb
mov
loop
inc
jecxz
xor
out
and
jmp
test
xchg
repnz
mov
mov
dec
and
push
pusha
jmp
cmp
je
pop
xchg
scas
inc
adc
lret
xorl
cmp
dec
rcll
enter
or
push
es
into
int
cmp
pushf
in
and
xchg
mov
jg
movsl
sti
inc
scas
xchg
cmpsb
test
jl
jmp
jae
sahf
dec
pop
cmc
inc
jmp
jns
stos
cmp
in
xor
movsl
or
pop
mov
sahf
fldl
pop
mov
jmp
push
enter
and
ja
in
lock
fisttpll
jbe
add
cmp
or
xor
sti
pop
jbe
das
xchg
aas
fnsave
mov
leave
test
push
dec
or
mov
cltd
push
sarl
pushf
or
push
ss
subl
or
xor
push
jmp
fcmovbe
push
mov
jp
adc
sbb
sti
aam
imul
leave
scas
pushf
jo
insb
dec
pop
inc
out
and
ret
jmp
cmc
out
xor
inc
and
jp
lods
imulb
ljmp
sbb
pop
or
pop
xchg
shl
jmp
jmp
cmp
leave
data16
js
pop
adc
jno
pop
push
test
add
push
data16
sub
adcl
jmp
mov
clc
mov
sub
add
repz
sti
fidivrl
ja
add
std
pop
jmp
das
shrb
sub
repnz
inc
mov
jmp
mov
jg
xor
xchg
cmp
and
scas
insl
mov
dec
and
fisttpl
mov
mov
jmp
dec
sub
or
shrb
or
orl
ds
insb
test
aaa
adc
jmp
push
mov
and
sti
outsl
ljmp
xchg
das
adc
mov
sub
adc
xor
mov
xchg
jmp
xchg
and
xor
test
jno
lea
pop
cwtl
enter
add
ret
xor
jmp
lock
cmp
fstpl
push
lret
push
xchg
fildl
popf
jmp
and
push
ljmp
inc
add
outsb
mov
pusha
ds
mov
adc
dec
test
es
in
sub
testl
les
mov
fisubs
fbstp
ja
or
les
sbb
sub
clc
cwtl
mov
daa
push
xchg
iret
pop
je
mov
lods
scas
js
push
jle
sti
push
mov
mov
jp
dec
aaa
mov
cmp
sahf
xchg
jg
sub
and
xchg
popa
mov
repnz
outsl
pop
push
jmp
das
out
sbb
jecxz
loopne
jmp
mov
dec
outsl
mov
dec
call
scas
addr16
mov
ret
push
push
push
scas
in
or
repz
and
mov
add
lods
mov
xchg
hlt
in
xor
jb
push
or
xchg
inc
pop
inc
jmp
pop
xchg
xor
clc
jae
mov
jp
aaa
sub
or
adc
cmpsb
push
jmp
inc
fsubs
jmp
int
shlb
push
imul
in
push
and
push
cmp
or
int3
cmp
imul
cld
in
jmp
dec
mov
push
das
fldt
and
rep
cmc
leave
mov
sti
gs
les
jb
lret
xchg
outsb
ret
mov
xchg
xor
dec
or
hlt
movsb
sub
xor
mov
aaa
scas
insb
xor
add
mov
insl
ds
sbb
pop
scas
daa
xchg
sub
je
xor
add
and
enter
fistps
pop
jmp
popf
add
scas
pop
add
jmp
jbe
xchg
les
daa
mov
push
jle
and
loop
push
mov
mov
jmp
sti
scas
shlb
jmp
rcll
jmp
xchg
pop
and
out
lock
stos
inc
sbb
mov
rcr
xor
sub
pop
push
sub
ret
mov
testb
and
lret
sub
mov
pop
negb
push
add
pop
adc
jmp
add
jg
ja
mov
pop
jmp
das
or
repnz
add
scas
lods
jmp
push
dec
scas
mov
rol
fmull
cmp
sub
xorl
arpl
sti
stos
mov
sub
mov
repz
sub
out
sub
sub
jmp
push
add
jmp
adc
dec
adc
jmp
mov
xor
out
adc
sub
in
aad
xchg
pmaddwd
add
adc
lods
lret
sarl
jmp
clc
mov
sub
mov
xor
lret
aam
push
sub
sbb
mov
sub
cmp
xlat
mov
pop
jo
sar
xchg
aas
popl
cmp
inc
lods
mov
es
jp
sub
push
stc
or
mov
ja
jbe
sbb
jmp
sarb
insl
xchg
mov
push
mov
mov
rcr
mov
int3
cmp
pop
sarb
jp
outsb
push
mov
mov
or
cmp
ss
popf
call
mov
sub
testb
add
pop
dec
test
sub
popf
sahf
or
outsb
sbb
pop
pop
sub
jp
jp
vpsadbw
jl
or
popa
cmp
stc
test
cmpsb
push
subb
out
ljmp
jmp
repnz
insl
xchg
xor
call
add
scas
dec
and
jmp
cltd
movsb
push
cmpsb
clc
out
outsb
jmp
cmp
jns
cmpl
mov
mov
pop
adc
jmp
mov
shr
rclb
and
enter
ds
mov
inc
dec
cmp
fstl
inc
jp
int3
jmp
mov
repz
adc
sub
cwtl
mov
push
xor
nopl
jmp
pop
sub
jmp
cltd
fisubs
mov
cmpsl
lods
shll
push
add
mov
jb
jmp
adc
mov
cmpsl
std
mov
sbb
jmp
in
dec
shll
repnz
les
aas
jmp
inc
lock
aam
jbe
adc
decl
xchg
rclb
in
cmpsb
scas
push
pop
std
out
dec
push
jmp
add
mov
sub
xchg
jnp
aad
cltd
inc
sahf
jmp
add
scas
pop
sti
cmp
sbb
or
jnp
gs
jmp
and
lea
nop
call
and
out
dec
pop
repz
psubusb
add
es
xlat
add
xor
mov
dec
mov
mov
or
push
daa
sub
sbb
mov
test
xchg
mov
pop
sbb
inc
sbb
jmp
pop
in
jmp
mov
out
jmp
pop
cmp
aas
jmp
out
xchg
jecxz
addr16
and
mov
mov
iret
out
adc
stos
jmp
in
inc
sbb
xor
lods
out
nop
mov
movl
and
jns
inc
sub
inc
popa
adc
shlb
xchg
push
lods
push
out
sub
fsubrl
cs
add
mov
ret
add
dec
jmp
scas
inc
or
mov
bnd
out
or
loopne
xor
movsb
cltd
sti
cmpb
scas
sti
jo
push
ds
lods
mov
repz
pop
ret
mov
lods
lods
roll
sbb
lahf
sub
movsb
test
cmc
mov
jp
jmp
outsl
xor
repz
mov
call
repnz
mov
imul
lock
push
out
js
cs
jmp
inc
ja
aad
push
sub
leave
bound
daa
jmp
out
or
push
xchg
icebp
fcmovnbe
adc
dec
pop
leave
push
and
sub
test
rcr
testl
imul
cmp
jle
cmp
pushf
je
xchg
lods
dec
cld
mov
push
mov
hlt
jmp
mov
popf
inc
sti
sbb
dec
cmp
je
cmp
int3
jl
mov
push
les
mov
jno
inc
lods
push
in
shll
leave
inc
jmp
cld
test
or
ret
aam
ja
jmp
sbb
inc
add
push
pusha
jmp
test
xchg
jmp
iret
mov
jmp
xor
cmp
arpl
xor
fcomps
xor
cmp
data16
sbb
sbb
push
loop
lods
sub
push
or
jl
les
mov
aas
data16
mov
rcll
cmpsb
dec
jp
mov
out
loop
xor
pop
pusha
aad
push
lret
or
xchg
ret
and
push
rol
sbb
cmp
sub
outsb
dec
test
std
push
aad
addr16
hlt
push
sub
outsl
and
imul
sub
adc
jge
je
rol
cmpsb
xchg
mov
mov
insb
lods
je
mov
push
cltd
dec
xchg
mov
ljmp
data16
jmp
insl
insb
loope
lds
add
popf
loop
jmp
gs
adc
inc
jmp
xor
movsl
lods
test
cmp
popa
jle
shrl
pop
lds
jg
mov
cmpsb
jmp
lea
dec
clc
add
xchg
jp
add
js
fucomp
pop
mov
adc
jb
lret
jmp
out
outsb
sbb
jmp
dec
add
insl
jmp
jns
mov
addl
mov
lods
and
sbb
lock
sub
lahf
mov
xchg
lods
jmp
mulb
cmpsl
dec
aad
xor
pop
lods
scas
push
gs
xchg
jb
std
ret
aad
inc
out
jne
jmp
pushf
jge
mov
in
sahf
mov
mov
jmp
jl
ds
inc
aas
jmp
cmp
mull
lret
xchg
sbb
imul
jmp
push
cmpsl
jns
mov
shll
or
xor
xor
in
cmc
push
pop
int3
sbb
xchg
es
pop
fsubr
xor
pop
inc
push
out
push
xor
test
lods
mov
aaa
cli
outsl
int3
fldl
sbbb
mov
stc
jo
jge
mov
sbb
ret
vmread
and
xor
or
sbb
ja
and
adc
sbb
shll
repnz
mov
dec
mov
or
in
cmp
push
in
stc
outsl
jns
or
arpl
gs
or
cmp
sbb
leave
stos
scas
ja
rolb
mov
add
jmp
lds
push
sbb
pushf
or
pop
mov
lret
add
jmp
mov
ljmp
dec
movsb
in
sahf
push
imul
cmpsb
bswap
jmp
in
pop
xlat
rep
or
sub
or
imul
add
int3
sar
lods
or
mov
cmp
mov
jp
pop
cmpsb
xchg
daa
mov
dec
jo
aaa
sbb
cmp
movaps
std
movsb
jl
inc
fwait
lods
shlb
or
loop
ret
aad
jmp
lcall
mov
dec
jbe
loopne
xor
out
mov
jp
push
cld
jmp
pop
mov
movsb
jp
jmp
enter
bound
outsb
test
push
pop
sbb
call
lahf
fisubl
pop
jmp
pop
xor
add
les
ss
in
xchg
lods
ret
mov
mov
jbe
push
mov
cltd
fwait
sub
sbb
adc
inc
xchg
jmp
ror
adc
clc
push
mov
fcmovne
or
mov
sub
mov
jle
je
or
mov
inc
mov
aaa
pop
mov
lods
jo
in
lods
xchg
outsb
das
les
loopne
pop
push
mov
jmp
repnz
popf
idivb
or
dec
fnsave
mov
daa
sub
in
test
sub
and
in
or
iret
xchg
por
das
vpsllw
loopne
int
jmp
test
jmp
pop
fmuls
gs
inc
in
in
push
jle
inc
cmp
aam
cmp
cmp
jmp
aaa
bound
pop
gs
insb
ljmp
and
in
dec
stos
std
sbb
mov
jnp
mov
stc
mov
or
sti
je
insl
cwtl
cld
sti
bound
jge
frstor
pop
and
sub
jg
and
and
sti
sbb
enter
push
loope
cmp
add
jmp
adc
and
sti
test
daa
mov
and
adc
xlat
mov
jbe
adc
cmpsl
addr16
leave
push
xchg
fimull
sub
fidivs
mov
jle
mov
cs
push
add
jle
jbe
xlat
sub
in
loop
stos
sbb
aad
pop
jb
insw
cmpb
scas
xor
dec
repz
sbb
xchg
jl
xor
repnz
aam
insb
dec
mov
xlat
repz
aaa
out
dec
jmp
cli
sbb
jg
mov
in
jo
mov
repnz
adc
mull
or
out
lock
sub
inc
jge
add
xchg
or
sarl
add
dec
or
sbb
stos
mov
jmp
stc
adc
das
xchg
add
xchg
jg
subb
addr16
dec
cmpsb
out
idiv
cmc
mov
outsl
mov
sub
call
jmp
xchg
pushf
int
fistps
cmpsl
sub
inc
movsb
xchg
jbe
insb
mov
loope
data16
and
sub
and
or
jge
jmp
pop
repnz
jmp
cmpsb
fcmovb
call
mov
insb
jle
inc
aad
lahf
and
inc
jmp
inc
gs
jmp
push
rcl
mov
cmpsl
pop
outsb
les
mov
int3
dec
dec
jecxz
loop
mov
mov
jmp
xchg
pop
jo
fistpll
lds
xchg
ljmp
movsb
icebp
enter
pop
test
mov
adc
outsb
mov
lret
out
repz
cwtl
out
mov
sbb
call
mov
lods
xchg
jmp
test
pop
xchg
fucomi
jns
in
stos
xorl
mov
adc
test
jl
add
jp
call
pop
xor
sub
or
movsl
enter
pop
push
jmp
sub
movsl
add
fldl
push
out
jmp
fmull
int3
push
loopne
fcmovu
dec
lret
push
xor
mov
lods
xchg
daa
ds
test
popf
fwait
dec
out
dec
subb
jo
pusha
push
adc
into
jmp
push
out
popa
pop
adc
dec
pop
mov
shll
add
lods
movsb
inc
movsl
and
stc
dec
pop
jmp
in
push
adcl
jmp
cmp
movsl
sub
leave
push
sbb
or
xchg
push
jns
mov
mov
std
in
std
stc
sub
push
sbb
jmp
xchg
pop
rcl
stc
loope
aam
stos
pop
cmc
inc
inc
in
add
jmp
cwtl
inc
mov
jmp
sub
adc
jo
pop
xchg
lods
mov
sub
push
or
enter
iret
je
cltd
rdtsc
dec
dec
pushf
jmp
pop
cmc
push
adc
inc
add
cmpl
jmp
sti
inc
jae
mov
aaa
mov
popa
jmp
out
mov
jmp
mov
inc
pusha
pop
cmpsl
jmp
hlt
je
push
clc
lcall
filds
sub
jmp
imul
xor
mov
repnz
call
lds
jno
mov
hlt
sahf
and
stc
in
imul
movsb
inc
or
adc
sbb
or
jmp
rorl
sbb
nop
scas
jmp
sti
mov
data16
pusha
push
repnz
stos
jns
insl
sbb
ss
into
pop
enter
popa
mov
jmp
pusha
cmp
mov
push
lods
jg
repnz
cmpsb
jge
or
std
arpl
push
adc
push
sub
int
iret
jmp
xchg
jp
sbb
inc
push
jmp
jne
adc
cwtl
jmp
lods
fistps
jo
xor
mov
xchg
es
adc
jmp
mov
sub
sti
mov
pop
das
aas
mov
jmp
ljmp
jmp
push
add
jmp
cld
sub
mov
data16
cmp
mov
fisubrs
aaa
adc
pop
add
pop
lds
sub
adc
cmp
jecxz
ret
push
mov
out
hlt
pop
stos
jne
imul
sbb
push
mov
sbb
adc
lcall
inc
mov
jge
daa
pusha
mov
and
sbb
add
adc
loop
test
mov
scas
mov
or
nop
mov
xor
mov
jmp
xchg
xor
stc
jmp
dec
shll
dec
pop
shrb
jmp
mov
pop
shl
xchg
mov
sub
mov
dec
daa
lods
push
jo
or
repz
xchg
or
push
jmp
ss
cltd
out
pop
lea
push
mov
dec
inc
mov
and
jmp
mov
jmp
subl
jmp
push
int
add
bnd
push
cs
jmp
adc
jae
out
mov
les
xor
ret
or
sub
mov
outsb
mov
xor
xchg
cwtl
mov
xchg
and
jmp
scas
pop
loope
mov
clc
push
dec
pop
cld
mov
sar
mov
das
dec
jmp
sub
or
and
jmp
lods
js
jg
mov
inc
jmp
mov
mov
dec
xchg
mov
arpl
bound
mov
test
jns
imul
outsb
jg
iret
add
outsl
pop
test
sbb
inc
adc
hlt
outsb
mov
leave
dec
dec
xor
repz
es
jmp
lcall
in
mov
dec
cs
dec
cmp
mov
cmp
dec
jmp
test
pop
mov
mov
inc
mov
inc
jmp
pushf
inc
and
scas
push
add
mov
filds
imul
push
lods
pop
shlb
jnp
jl
push
mov
lods
sti
jo
or
fcomip
mov
shr
mov
push
jge
insl
jmp
add
jmp
xchg
xlat
shll
and
jmp
mov
mov
lods
jno
mov
int3
inc
sbb
insb
fnstcw
jecxz
fnstsw
lock
out
dec
adc
shll
inc
mov
mov
cmpsl
or
and
sbb
stc
jmp
loope
xchg
mov
out
and
sub
xchg
jge
rcrb
sub
imul
das
xchg
sub
dec
add
xchg
repz
xor
adc
add
push
repz
push
js
lret
cmp
ljmp
out
push
and
add
inc
jmp
jl
mov
fcmovb
cmp
cwtl
jmp
sub
test
insb
adc
icebp
mov
jge
mov
in
jns
test
push
cli
add
stos
ficoms
imul
pop
idiv
and
push
jp
es
push
jne
mov
daa
stos
jge
sbb
jb
shr
add
dec
lock
sub
mov
lods
pop
lods
sub
jmp
xchg
inc
test
and
das
dec
mov
imul
dec
in
ljmp
xchg
sbb
push
cld
fildl
gs
jmp
mov
mov
lods
movl
pop
rol
je
movsl
dec
inc
inc
mov
push
mov
adc
mov
mov
loop
je
out
adc
pop
pop
mov
lahf
lds
add
les
push
jmp
fdivl
jmp
sbb
lea
pop
add
and
inc
jmp
or
sbb
loop
stc
cli
repnz
mov
stos
inc
jmp
leave
cmp
test
lret
and
nop
test
ss
icebp
idivb
fs
das
cli
inc
xchg
sub
scas
adc
mov
lock
push
jmp
cmp
fadds
lea
jmp
fucomp
out
sbb
push
lock
cmpsl
mov
fucomip
movsl
push
xchg
subl
leave
pop
loopne
sbb
or
mov
aas
mov
sar
adc
jle
jg
jp
std
stc
cmc
jmp
cltd
lcall
movsb
sub
fwait
daa
orl
pop
sbb
pop
xchg
shrl
jnp
jo
mov
mov
cmpsb
mov
jg
or
iret
rol
decb
sbb
cld
pinsrw
sbb
add
cmp
mov
jmp
xchg
out
push
in
cmpl
mov
sbb
call
adc
jle
aaa
mov
jmp
mov
jp
ljmp
xchg
imul
fidivs
jmp
addl
add
mov
fisttpl
jmp
mov
mov
not
or
mov
aam
pop
mov
sbb
jg
dec
cmp
lock
int
jmp
pushf
sub
outsb
shr
add
inc
scas
idivl
adc
or
xlat
aam
push
jmp
rorl
mov
clc
jo
dec
push
sbb
pusha
or
cmpb
mov
or
push
scas
mov
pop
movsb
push
jmp
pop
hlt
dec
dec
or
lods
negl
out
push
jmp
fldcw
push
lds
sbb
adc
mov
ret
push
stos
adc
gs
iret
xchg
stos
jmp
lods
sbb
cltd
test
xchg
lds
pop
mov
cmp
push
xor
pop
adc
das
test
imul
sub
mov
and
jp
movsb
adc
jmp
fcmovne
add
stos
cwtl
mov
dec
ror
pop
out
cmp
xor
xorl
sub
imul
xchg
decb
xlat
fwait
cmp
or
lret
jnp
imul
jmp
ret
aam
sub
sub
pop
mov
out
leave
js
negl
jmp
inc
sbb
stos
jmp
pop
enter
mov
scas
sti
xlat
pop
add
xchg
jmp
push
add
or
pop
jmp
and
test
out
mov
pop
mov
loopne
push
mov
xchg
out
jmp
xor
sub
fidivrl
or
repz
sahf
outsb
mov
call
jp
mov
jbe
inc
popf
lods
dec
cmpsl
es
cmpl
shlb
imulb
jmp
push
inc
pop
sti
vmovlpd
push
pop
and
ret
jmp
aad
push
dec
aam
lods
cmp
adc
lret
jmp
dec
xchg
mov
jmp
pushf
addr16
out
pop
mov
jmp
cltd
rorl
jb
cmp
dec
pop
mov
jo
add
sbb
rcrb
sub
xchg
jmp
jno
jmp
popa
jge
mov
mov
xchg
xchg
daa
scas
sub
test
mov
sub
subl
jbe
cmp
imul
pop
test
in
arpl
stos
mov
sti
inc
and
jmp
and
jnp
mov
adc
cwtl
jmp
cli
aad
xchg
jae
sub
outsb
jge
fcomps
xor
sbb
sub
nop
mov
or
xchg
lods
and
xor
aas
and
push
test
xchg
add
dec
inc
jmp
cmpb
fstl
int3
lods
nop
imul
fdiv
fldt
subl
dec
jns
and
cmp
and
js
sbb
jne
mov
sti
imulb
mov
outsb
in
in
adc
stos
into
pop
sbb
stc
inc
jmp
mov
pop
xchg
mov
ljmp
mov
out
movsl
add
in
jmp
dec
sub
xchg
rorl
cmp
cmpsb
mov
mov
push
mov
inc
lods
outsb
inc
cld
xchg
push
sti
adc
mov
mov
inc
pop
xchg
mov
sub
daa
clc
xor
adc
pop
aaa
mov
pushl
daa
and
sub
push
mov
ljmp
adc
jae
imul
fildll
pop
lret
imul
lods
and
and
movsb
xchg
pop
jmp
mov
mov
add
imul
mov
adc
sbb
jb
shr
or
mov
jmp
aad
frstor
add
stos
outsb
aas
mov
and
mov
jmp
arpl
cmp
or
and
popf
jp
push
add
jge
cmpsl
jmp
sti
xor
leave
fsub
iret
jmp
std
inc
rclb
insb
xor
js
inc
inc
daa
nop
fidivrl
enter
push
sub
push
mov
ds
scas
jno
cwtl
sbb
xchg
pop
ds
mov
xlat
dec
xor
adcl
adc
cltd
fwait
imul
test
fdivl
cmpb
daa
loop
sub
mov
cmc
push
pop
out
enter
pop
jmp
js
pop
pop
test
lods
sbb
cli
sbbl
mov
or
sub
jmp
cmp
fmull
or
icebp
fincstp
cld
jb
scas
stc
jp
adc
cmpsb
movsb
jmp
insl
jmp
aam
jbe
adc
sub
sbb
pop
out
js
xchg
mov
mov
fwait
cmp
pcmpgtb
movsb
jmp
or
aam
mov
jmp
cmc
movsl
cmp
add
and
out
xor
sub
jmp
xor
xchg
jmp
and
pop
jmp
enter
inc
mov
lods
dec
aad
lds
sbb
sbb
mov
ficomps
jle
pop
in
int
inc
cmc
add
icebp
int3
sub
test
push
rcrb
mov
notl
jmp
fdivl
jmp
cmpsl
out
addb
xor
sbb
jae
jne
pop
fsub
pop
and
repz
mov
xor
scas
push
or
sbb
cmpsb
arpl
lods
imul
mov
loop
cmp
inc
jmp
sbb
imul
mov
add
out
xlat
jmp
adc
and
xchg
bound
arpl
xchg
cmp
bnd
ret
mov
in
scas
dec
cmc
out
imul
jle
jbe
sbb
pushf
stos
dec
jp
hlt
pop
call
jmp
xlat
addl
repz
add
std
pop
in
cli
jmp
bound
lahf
adc
jmp
mov
clc
mov
mov
push
arpl
mov
mov
sub
push
pop
shll
mov
in
sub
jp
or
rclb
in
pop
push
aaa
pop
imul
dec
push
mov
xchg
int
push
mov
outsb
rorl
in
out
jmp
clc
inc
insl
les
lods
js
pop
cs
or
stos
cmpsl
lret
sub
jmp
movsl
loop
scas
jmp
insl
sub
cmp
jmp
stos
pop
hlt
push
insb
js
lods
insl
mov
xor
xor
mov
add
popa
je
imul
call
or
pop
ret
xlat
adc
fdivl
pop
outsl
lret
pop
jb
push
mov
insb
jmp
rclb
dec
jmp
lret
push
loope
and
sub
jmp
add
lret
push
mov
lods
jbe
je
or
mov
movsl
jle
pop
and
add
mov
mov
push
xorb
mov
icebp
jmp
scas
push
stc
movsb
jmp
decb
fs
mov
cmp
jmp
fidivrl
xor
pop
daa
ret
jmp
bswap
push
aam
mov
mov
jle
pop
jb
popf
mov
fiaddl
inc
dec
mov
jo
in
jnp
cmpb
popa
push
nop
or
mov
out
mov
cmpsb
js
sti
lock
ja
test
pusha
mov
mov
sbb
xchg
stc
lods
add
add
fildll
xor
fidivs
mov
mov
movsl
es
and
stos
clc
jmp
repnz
notb
inc
push
jmp
aam
lock
inc
sub
mov
sbb
lods
fisubrl
and
adc
andb
lret
insl
or
dec
outsl
hlt
fwait
add
out
xor
icebp
jmp
sub
jmp
adc
popa
jmp
sub
fucomi
jl
mov
push
jmp
mov
jns
jp
test
popf
lret
jnp
adc
add
gs
jp
adc
scas
push
je
sbb
das
rcr
mov
jbe
sbb
into
insl
aas
pop
cmp
adcb
test
mov
xchg
sub
into
imull
outsl
ds
sub
movsb
lods
mov
sete
jmp
cmp
mov
out
enter
jmp
xorb
jmp
mov
push
loope
pop
or
xchg
push
dec
xor
add
jmp
adc
mov
pop
loop
outsb
inc
cmpsl
test
xor
leave
repnz
icebp
jmp
mov
jno
lods
pop
fisttps
popf
subb
push
cmp
sbb
in
shrl
test
je
xchg
sub
or
add
ljmp
jmp
cwtl
stos
jmp
jmp
sub
ja
jle
jmp
mov
sbb
jmp
rcll
or
mov
or
lods
aam
js
jmp
jge
mov
jmp
sbb
xchg
fsub
jecxz
lock
aaa
xchg
lods
jb
mov
cmp
jmp
push
mov
xchg
pop
insb
lahf
jo
std
inc
jmp
sarb
loop
mov
jmp
pop
mov
fsts
loop
fwait
xchg
push
addr16
gs
jmp
fs
cltd
inc
stos
cmp
data16
jl
jmp
jle
mov
sub
and
sub
mov
cmp
or
ret
adc
pop
ljmp
add
lods
pop
push
in
push
fsubrp
mov
andb
or
sarl
xchg
out
add
lea
jmp
loop
ljmp
sub
cmpsl
cmp
fdivs
or
mov
in
test
cmpsb
dec
cmc
lock
sub
mov
mov
test
outsb
movsb
test
loopne
imul
mov
js
adc
addr16
leave
push
and
jmp
sti
add
xor
push
subb
pop
loope
popa
pop
lods
xor
cmc
outsl
daa
jns
out
adc
or
daa
and
shrb
mov
xchg
xor
push
push
icebp
sub
jecxz
sub
jb
in
pushl
in
sbb
xor
frstor
stos
out
adc
je
pop
add
dec
int3
movsb
mov
dec
pushf
jmp
sub
push
loopne
and
stc
je
or
jno
cmpsb
sub
xchg
or
repnz
jmp
inc
mov
push
jmp
iret
cmp
stos
out
stos
pushf
sub
imul
mov
out
jmp
mov
mov
mov
mov
xlat
and
jmp
sub
mov
sub
inc
mov
sbb
jmp
jnp
movsl
add
mov
xchg
popa
cmp
pop
jl
aam
jmp
in
cmpb
fcoms
sti
adc
mov
sub
sub
fistps
mov
es
pop
sbb
repnz
popf
jmp
cli
and
or
jle
sub
test
cmp
adc
inc
shlb
or
subb
jg
jmp
lock
mov
fcomps
aam
adc
mov
pop
jmp
sarl
mov
loopne
in
sub
leave
stc
js
sbb
je
lret
fcmovb
mov
clc
vpunpcklqdq
pop
mov
mov
out
jle
mov
cmpsl
pop
sbb
sub
cmp
addr16
fsubrp
xorb
push
cwtl
in
out
mov
mov
mov
or
scas
mov
test
or
sbb
fsubr
xadd
outsb
add
or
movsb
push
sbb
jae
jmp
rorl
push
jmp
xchg
js
call
adc
mov
cwtl
mov
dec
out
mull
popa
mov
outsb
sub
gs
popf
jp
fwait
or
xlat
js
in
cmpsb
test
jmp
sub
add
test
jmp
sbb
aad
adc
cli
cmp
jmp
push
mov
lods
sub
and
push
jmp
cli
fwait
jl
aaa
push
sub
adc
iret
xchg
daa
mov
popa
test
cltd
mov
lods
inc
adc
lods
jne
test
jns
and
mov
lods
jae
movsl
int
incl
mov
xchg
push
xor
dec
sub
pop
sbb
repz
mov
xchg
fs
xchg
cld
daa
push
je
or
pop
xlat
inc
ret
jmp
mov
ljmp
in
pop
push
addb
test
jno
inc
jbe
mov
mov
lods
or
cmpsl
sub
adc
and
sub
or
enter
jmp
adc
fdivrl
lods
xor
bndstx
das
xchg
jmp
mov
or
ljmp
pop
pop
stc
les
push
lea
xchg
jmp
leave
lods
call
jmp
dec
popf
je
ljmp
xor
cmc
and
je
cmp
fucomi
bound
adc
add
cmp
lods
ds
test
addr16
mov
xor
cmp
jmp
sahf
lret
inc
jns
and
popf
test
cld
jmp
jnp
int3
and
adc
jmp
mov
inc
pushf
jmp
jnp
in
scas
int
jmp
sbb
mov
je
not
pop
cmpsb
mov
adc
xor
or
es
jmp
in
lret
dec
es
mov
lods
pop
fucomi
js
sbb
fistps
nop
es
mov
sub
xchg
mov
mov
adc
push
incl
fidivl
pop
jno
jmp
push
push
cmpsb
xor
dec
mov
xchg
movsl
xchg
sub
fists
dec
je
jne
jmp
mov
sub
ret
dec
sub
jmp
imul
push
mov
fs
movsl
xor
sub
rcrb
xchg
insb
scas
sub
jmp
xlat
call
scas
inc
shlb
js
dec
fistl
pop
sahf
imul
pop
mov
add
mov
xor
adcl
sahf
push
cld
sbb
jmp
les
ds
das
mov
cmp
popf
sub
jnp
jno
cmpsl
outsl
bound
sbb
dec
xchg
mov
xchg
cmp
nop
mov
in
sti
xchg
xchg
outsl
in
jb
jmp
push
xchg
pop
pop
inc
jp
sub
mov
xchg
sbb
lret
int
lds
insl
jb
scas
roll
fldcw
bts
je
mov
add
jl
jo
add
mov
aam
jmp
jmp
sbb
xchg
aas
stc
dec
sub
mov
shrl
xor
sub
inc
or
adc
adc
sub
aad
les
pop
in
loop
sbb
adc
jmp
ja
aam
pusha
cmpb
icebp
xchg
dec
repz
dec
sub
pop
pop
xor
dec
dec
sbb
int3
jmp
je
jb
lcall
fstpt
fwait
jmp
call
ss
jo
xchg
sahf
out
sti
jne
xor
jmp
pop
jmp
fsubr
pop
test
hlt
sbb
push
sti
adc
fidivrl
sbb
mov
arpl
popa
lods
mov
into
lods
adc
inc
jmp
push
roll
or
add
jmp
aad
or
xchg
add
sbb
imul
lahf
int
shrb
dec
dec
flds
mov
mov
cwtl
into
jmp
lea
xchg
outsb
movsb
repnz
xor
push
push
aam
mov
jg
add
mov
scas
push
inc
adc
jmp
fsubl
or
ja
imulb
sub
mov
pop
ret
jecxz
dec
mov
xor
int3
movd
sbb
xchg
les
push
filds
adc
fwait
add
arpl
pop
jmp
fdivp
and
fnstcw
xor
adc
into
test
aas
cmp
inc
data16
pop
rcrl
sub
jne
jno
fisttpl
sub
out
movsl
jmp
icebp
ljmp
mov
arpl
pop
xchg
repz
imul
cmp
inc
add
cmpb
aad
mov
jp
sub
test
movsb
adc
jmp
inc
and
insl
orl
test
mov
cmpsb
jb
jmp
lret
pop
push
jmp
test
xor
jmp
add
and
pop
jp
fiaddl
and
xor
stc
repz
mov
pop
out
mov
lcall
int3
sub
jp
das
dec
pop
repz
jmp
outsl
jns
xor
in
jbe
loop
or
cli
sub
push
jge
xor
out
jo
bnd
out
sub
test
push
xchg
pop
sbb
movsb
sub
push
mov
fstps
add
out
or
jb
lea
out
inc
lods
pop
adc
cli
sub
xchg
pop
out
pop
xor
cmpsb
or
xor
dec
and
lahf
jmp
inc
mov
jmp
mov
xchg
std
xchg
stos
in
dec
sbb
fnstsw
push
pop
xorl
icebp
and
imul
jl
pusha
hlt
outsb
or
jmp
push
jmp
push
mov
pop
inc
movsb
mov
push
and
xchg
jne
push
inc
jg
out
mov
dec
jge
jnp
idivb
imul
leave
sbb
cltd
call
push
xchg
and
mov
cmpsb
ss
ds
jne
pop
lret
lcall
pop
dec
addr16
xor
cmpsb
push
mov
lret
cmpsl
popa
out
lods
fdivp
ljmp
cmp
mov
and
jmp
mov
cmp
cmp
and
sub
inc
lcall
into
jmp
mov
xchg
pop
sub
fwait
mov
pop
dec
daa
int3
jno
push
sbb
cmpsl
jnp
jl
sahf
outsb
lret
in
add
jae
push
xorb
lcall
mov
push
jb
fcoml
dec
mov
repnz
test
mov
and
mov
das
push
jmp
push
mov
ret
cmp
pop
aaa
xchg
or
mov
pop
mov
sub
hlt
add
repz
fcoms
outsb
jmp
push
jecxz
sbb
in
adc
fucomip
mov
cmp
aas
sbb
jmp
ja
shr
xchg
mov
xchg
jno
xchg
add
sub
loop
mov
ret
jl
sahf
fcomi
jmp
mov
mov
lods
mov
sti
adc
xchg
mov
push
sub
mov
sti
shl
adc
cmp
nop
or
and
jmp
mov
mov
aas
jb
call
dec
jmp
add
inc
inc
cmp
insl
or
inc
jmp
sbb
ss
jmp
fmuls
cmp
jmp
test
push
jmp
in
inc
cld
jbe
popa
lods
fisubrl
push
int
sbb
or
decl
jmp
adc
adc
jl
insl
mov
test
call
and
xor
icebp
jmp
enter
insl
lods
jbe
xchg
push
sbbb
sbb
jmp
lods
into
test
mov
lahf
pop
not
xor
pop
dec
out
roll
scas
jmp
cmova
jmp
sub
bound
arpl
outsb
xchg
xchg
jae
stos
jmp
jnp
sahf
movsl
jmp
sbb
and
stos
mov
test
xchg
or
out
mov
out
mov
shll
lods
inc
sbb
jecxz
jb
cmpsl
jbe
mov
xchg
mov
sbb
or
pop
loopne
int
aam
in
jmp
inc
out
pop
mov
dec
repz
shlb
outsl
lods
std
mov
and
lods
mov
fsts
mov
xor
outsb
fldt
popa
mov
aam
mov
add
adc
outsb
dec
xchg
xchg
pop
or
por
call
ljmp
cld
mov
pop
jmp
xchg
adc
je
jecxz
lods
outsb
sub
stc
inc
scas
xchg
nop
jmp
popf
shr
mov
jmp
icebp
inc
pusha
push
stc
xchg
out
adc
lock
xor
stc
out
jo
cld
jle
clc
xor
or
jmp
sarl
mov
push
hlt
jmp
fsubs
into
leave
add
adc
cwtl
inc
pslld
mov
jae,pn
loope
sub
push
dec
xor
shrl
in
adc
stc
jmp
xchg
cli
xchg
loop
cmp
test
push
cltd
xchg
dec
push
jmp
xchg
shlb
leave
jg
outsb
lods
out
mov
mov
inc
jmp
push
push
test
dec
jo
jmp
rolb
xchg
ret
add
mov
jns
cmp
push
loop
insl
jmp
push
dec
jle
lods
xor
imul
aad
in
jg
loope
jbe
cmp
jns
inc
test
jmp
xor
add
mov
shrl
and
bnd
jne
inc
sbb
inc
test
jp
lds
adc
pop
jmp
cwtl
sub
sub
shlb
hlt
jmp
rcr
dec
ret
add
mov
or
xchg
adcl
movl
mov
sbb
xchg
roll
mov
jbe
push
and
jmp
jno
fwait
das
or
sub
adc
jno
insb
daa
or
aaa
push
xchg
mov
and
cmpsl
sub
test
adc
adc
mov
jmp
lcall
sub
push
dec
rcll
ret
push
add
cwtl
arpl
inc
scas
cmp
scas
mov
xchg
call
and
push
shl
not
je
jg
cmp
jge
push
and
in
mov
outsb
and
addl
dec
mov
addb
xchg
jmp
sbb
xor
jb
clc
std
push
adc
sub
jmp
fdivrs
jg
scas
fnstenv
jge
test
fs
pusha
inc
and
scas
xchg
in
gs
dec
adc
pop
mov
cwtl
jno
in
sbb
inc
xor
mov
sbb
aas
or
in
xor
push
xchg
icebp
std
cwtl
pop
cmp
leave
or
mov
mov
xor
rcrb
xchg
lret
hlt
cmp
mov
adc
sub
jns
jecxz
out
in
sbbl
push
in
aaa
jmp
cmp
push
cld
jo
mov
pop
sti
sbb
push
scas
mov
lds
pop
mov
cmpsl
sub
in
repnz
sahf
imul
iret
push
test
jnp
dec
or
lods
jmp
out
movsb
xchg
cmpsl
stc
xchg
jne
mov
cs
adcb
jmp
add
fnsave
movsb
add
and
adc
pop
xchg
dec
xchg
mov
jmp
adc
lret
out
jmp
cmpl
adc
jmp
rolb
add
mov
and
cli
lahf
outsb
jnp
imul
shlb
sahf
mov
xor
dec
sbb
nop
mov
cli
imulb
setle
mov
or
or
ret
mov
ss
aam
sbb
adc
movsl
push
rorl
in
jl
inc
mov
aam
test
cwtl
xchg
sbb
lock
xor
fs
cli
or
xchg
jle
jne
daa
loope
jmp
das
pusha
xlat
adc
add
jmp
sti
push
xchg
cmp
mov
lods
xor
add
push
adc
add
loop
movsb
or
pop
test
sahf
dec
sbb
cmpsl
and
sub
mov
inc
mov
push
xchg
popf
addl
sbb
mov
jo
lock
mov
or
sarl
inc
bound
cltd
mov
dec
jmp
sub
cmpsb
jmp
jle
movsl
jae
jno
scas
dec
ja
push
jmp
cmp
into
sbb
or
mov
jmp
xlat
divl
aad
adc
rcll
and
jns
jecxz
jmp
in
stos
inc
nop
push
jmp
mov
ss
jmp
jl
test
rorb
xchg
mov
lret
mov
imul
adc
pop
xlat
push
outsb
rorl
mov
cwtl
push
les
cltd
add
mov
and
xor
pop
mov
mov
shlb
inc
jae
and
dec
pushaw
mov
mov
fnsave
dec
mov
cwtl
fldcw
pop
add
push
and
mov
add
outsl
bound
mov
inc
icebp
and
insl
jmp
sbb
inc
cmpsb
movsl
gs
and
mov
and
push
cmp
dec
das
push
enter
addb
scas
sbb
int
popf
imul
jmp
mov
pop
and
jbe
xchg
in
sti
std
mov
ljmp
inc
or
sub
icebp
jp
cmc
sub
jmp
lock
cmp
xor
das
lea
sbb
sbb
cmp
xchg
frstor
jmp
mov
mov
jmp
xlat
jg
mov
lock
xor
pop
cli
iret
cwtl
or
mov
sub
mov
nop
pop
xor
jmp
scas
dec
shrl
stc
jle
push
and
pop
sub
fsubrl
aas
ja
cmp
jge
sub
mov
and
sub
jo
sub
sub
xchg
jecxz
lcall
and
repz
sti
cli
mov
lds
lods
and
mov
and
add
inc
jns
add
mov
shrb
push
xchg
jmp
pop
mov
jno
pop
movsb
jmp
fwait
pop
push
testl
sub
jmp
test
mov
dec
lods
jmp
mov
call
mov
mov
sbb
pop
bt
adc
jmp
push
add
mov
aaa
mov
imul
add
and
subl
hlt
fcomi
add
push
scas
fcomps
fldcw
push
inc
jae
fidivrs
inc
lods
xchg
xor
ret
jmp
sub
insb
jp
call
pop
dec
daa
sbb
dec
sbb
leave
mov
mov
cmc
test
pop
icebp
jmp
cs
into
pop
or
mov
fs
movsl
adc
jg
aad
jmp
ss
xchg
lret
test
hlt
dec
insb
lea
jg
mov
push
sub
or
fcoms
dec
pop
or
cld
mov
repz
nop
daa
jle
jns
movsb
xlat
dec
mov
sub
lret
loopne
push
jl
imul
das
mov
shl
jmp
lds
dec
mov
sbb
nop
mov
fdivrs
jo
pop
outsb
fld
lret
dec
inc
loopne
aas
andb
mov
out
sub
inc
movsb
adc
fisttps
cs
xchg
jb
shlb
jg
sbb
pop
in
fs
or
adc
repz
jmp
mov
adc
jmp
add
jl
loop
jge
sarl
cltd
pop
jmp
and
push
pop
sbb
imul
sub
xor
test
divl
loopne
clc
push
push
sar
cmp
jg
push
andb
out
dec
leave
lcall
add
adc
sbb
movsl
sbb
call
pop
xorl
ret
jb
imul
jne
mov
popf
mov
es
mov
xlat
ds
shrl
or
stos
mov
call
pop
push
std
and
push
lods
jmp
mov
mov
repnz
sbb
iret
repnz
in
cmp
bswap
jne
push
jmp
mov
and
scas
lcall
lods
out
sti
push
mov
sub
sub
xchg
out
or
jns
add
xor
out
shrl
out
pop
stc
xor
pop
cmp
dec
movb
lods
ljmp
mov
outsl
sub
push
jmp
test
fnstenv
fucomi
mov
mov
test
je
lahf
push
cmpsl
jecxz
inc
mov
nop
sbb
mov
pop
in
xchg
sub
shll
cmp
cmpsb
sbb
insl
hlt
add
and
or
jmp
xor
mov
jmp
jne
pop
xor
adc
cmp
movsb
enter
jmp
mov
arpl
mov
xor
out
fwait
push
lock
jmp
fdivrs
cmc
fidivrs
shr
sbb
xor
add
int
hlt
xor
sub
jmp
adc
shr
push
xlat
jmp
mov
mov
sbb
or
std
loope
test
push
cmpl
jmp
jns
movb
cmp
cmovs
xchg
cmc
fstps
out
and
lods
std
cmp
sbb
mov
lods
jmp
test
jmp
adc
out
jbe
cli
jo
sub
or
adc
out
or
jmp
js
int3
xchg
fsubrs
frndint
dec
insl
push
xor
dec
outsl
sbb
xchg
nop
popa
lods
stc
fimull
hlt
ljmp
mov
jns
mov
jb
sarl
sbb
dec
fisttps
cmp
sbb
movsl
pop
or
hlt
jbe
lea
pop
pop
arpl
cmp
insl
nop
jbe
lret
daa
push
xchg
scas
in
loop
sbb
popf
cmovbe
dec
movsb
sub
aam
das
jae
add
mov
push
cmp
lret
imul
mov
clc
aad
xchg
ss
add
lods
aas
adc
pop
cmpsb
int3
inc
cwtl
adc
repnz
pop
inc
adc
and
lods
mov
loope
push
mov
arpl
out
dec
adc
add
mov
mov
jns
or
daa
test
push
jmp
out
pop
jbe
jmp
xchg
add
mov
leave
jmp
sbb
arpl
hlt
xchg
jp
adc
lcall
orl
jmp
mov
xor
inc
icebp
jmp
mov
lcall
adc
lret
lods
sbb
je
xor
xchg
jmp
jo
in
aaa
int3
sahf
insb
cs
lea
jne
imul
cmp
cli
fwait
mov
lret
push
jle
cmc
pop
sub
or
dec
xchg
fidivl
imul
sub
ss
xchg
addr16
shlb
lods
cwtl
jmp
fidivl
loop
jns
jmp
out
stos
adcb
in
jb
xchg
outsl
or
or
mov
jmp
movsl
jecxz
pop
xor
movsb
test
sbbb
lahf
jmp
inc
jne
push
push
je
leave
xor
es
fwait
daa
jmp
aad
adc
pop
mov
imul
dec
cmp
jmp
xchg
ds
mov
js
jmp
in
lea
lret
push
jmp
idivl
arpl
lods
push
mov
ljmp
mov
les
xchg
jbe
dec
int3
add
cmp
mov
xor
xor
inc
aad
lods
sar
or
idivl
sub
pop
fisubrs
in
inc
addr16
mov
repz
jbe
and
or
dec
mov
inc
jmp
add
fld
sub
mov
pop
das
imul
push
mov
ror
jb
test
adc
xlat
jmp
sahf
rorb
mov
add
cli
subl
mov
pop
addr16
lods
xchg
fs
mov
pop
adc
adc
cmp
out
out
inc
push
jp
push
stos
mov
dec
mov
sahf
cmp
jbe
outsb
pop
ret
or
xchg
push
aas
bound
imul
pop
sub
lret
cmpsb
adc
sbb
or
mov
cmc
cmp
push
sbb
dec
jmp
push
dec
or
or
cwtl
and
jmp
das
jmp
mov
je
aas
push
lea
pop
xchg
leave
ja
jmp
cmp
insl
mov
lret
fnstenv
js
daa
inc
pop
sub
sub
fcmovnb
dec
pop
mov
sbb
movsb
jmp
stos
mov
gs
aad
sub
dec
clc
nop
or
imul
sbb
push
pop
cmp
and
cmpsl
hlt
outsb
mov
scas
testl
dec
call
vmread
and
jmp
inc
imul
fsubrl
mov
adc
setg
mov
mov
jno
pop
fcoms
scas
jp
sti
sahf
mov
jmp
ret
jns
rorb
add
push
sub
add
add
jmp
or
test
jmp
xor
mov
test
lods
popa
or
cld
adc
adc
and
sub
cmc
xor
xor
mov
sub
or
subb
lods
pop
imul
jmp
adc
test
jne
sbb
or
or
sbb
cli
icebp
or
fbld
xor
xchg
or
call
jmp
pop
pop
mov
adc
xor
pusha
push
stos
repz
stos
push
jp
add
les
pop
sbb
mov
mov
jmp
mov
jle
sbb
sub
in
das
ds
pop
sbb
loopne
pop
mov
dec
insl
add
mov
sub
idiv
lods
pop
sarl
test
cld
in
inc
jle
fcomps
cmpsl
mov
mov
sbb
xor
mov
jbe
je
xor
sbb
repnz
cmp
sti
mov
jo
psubd
lock
push
ret
mov
mov
lds
cmp
fxam
xor
ds
rclb
cmp
jmp
adc
sbb
dec
sbb
pop
dec
sub
outsb
add
repz
sub
cld
mov
imul
gs
jmp
jno
in
dec
and
xchg
add
sub
idivb
dec
sub
subb
fxch
icebp
ds
and
clc
aam
andb
pop
jmp
cmp
repnz
cmpsl
xchg
outsb
push
shlb
jmp
fsubrs
fimull
arpl
pop
and
mov
push
push
mov
loope
pop
fwait
lret
movb
mov
je
insl
pop
bndstx
cmp
sub
cs
pop
and
sbb
jge
push
dec
cmpsb
int3
jmp
out
stos
dec
bound
jl
stos
pop
jmp
mov
push
mov
dec
jns
mov
or
or
sbb
mov
mov
movsl
in
mov
roll
cmp
jmp
cwtl
dec
je
pop
outsb
in
cmp
jmp
sahf
addr16
jp
je
push
and
ss
and
xlat
and
adc
orl
jmp
sti
cmp
push
repnz
push
fildll
push
cmpsl
push
add
or
ret
lock
adcb
lea
jg
out
mov
gs
dec
sti
sbb
mov
js
mov
outsb
jmp
cld
lea
lahf
cmp
mov
fsub
pop
cli
cmc
cmpsb
jmp
xchg
test
pop
fmulp
jmp
jno
and
sub
xchg
jmp
sbb
mov
jmp
pop
daa
jl
lods
sub
cmpsl
icebp
jmp
inc
and
lds
pop
data16
or
pcmpeqd
dec
add
mov
rcll
cltd
mov
in
mov
jnp
popf
xchg
int
pop
cmp
pop
sub
dec
mov
mov
scas
lcall
xchg
cmpsl
lret
loopne
sbb
ror
mov
stos
pop
xlat
cwtl
jl
jmp
es
mov
std
mov
mov
sbb
lods
add
cs
mov
lds
dec
shll
mov
out
jb
lahf
shl
test
cmp
test
dec
stos
fisttps
lock
test
and
lods
jmp
add
xchg
fwait
add
aad
cmp
outsb
fsubr
inc
xchg
cmp
cli
dec
int
sub
test
repz
jmp
push
popa
dec
mov
in
xchg
cmp
push
xor
push
sub
imul
fidivrl
or
test
pusha
adc
xchg
jmp
lock
outsb
ljmp
stos
mov
mov
lock
mov
js
xor
test
sub
pop
jg
add
jmp
dec
sub
add
xor
dec
jmp
bnd
addr16
movsb
adc
ja
mov
stos
fcoml
xchg
icebp
andl
jp
out
out
jmp
pop
call
les
gs
add
in
loop
leave
sbb
int
shlb
repz
jmp
sub
lock
ret
add
popf
leave
jmp
rolb
inc
mull
outsb
lret
mov
pop
adc
mov
or
std
jno
jmp
out
rol
xchg
jge
or
lock
jp
loopne
mov
aad
sbb
mov
or
or
daa
cmp
sbb
xor
iret
ret
jmp
mov
icebp
mov
and
or
in
add
test
jmp
out
shll
mov
int
sub
push
fcompl
or
lock
frstor
je
fcomi
and
and
cmp
jmp
add
push
inc
shlb
imul
mov
fisubl
cmp
mov
sbb
mov
data16
scas
loop
mov
sbb
jb
xchg
xor
xchg
jmp
pop
nop
xchg
hlt
xor
mov
sti
out
mov
add
jmp
cltd
inc
ror
or
push
and
adc
lods
sti
repnz
aam
xor
dec
mov
jmp
cwtl
popa
ret
jmp
jnp
xlat
stos
push
out
jmp
repnz
hlt
fstp
gs
adc
xchg
ret
in
jmp
xlat
jp
pop
mov
adc
hlt
fsubrl
js
or
loop
mov
sub
mov
pop
inc
outsb
stc
insl
test
push
mov
adc
cmp
dec
sub
in
jb
inc
repz
push
jmp
lea
bound
lds
sub
arpl
popf
dec
or
jmp
xchg
add
pop
in
sub
nop
mov
in
jmp
addr16
dec
dec
ds
dec
roll
pop
repz
lods
movsb
ljmp
jo
jmp
adc
rcl
lret
push
push
or
ja
negb
fdivl
scas
mov
bound
mov
es
cli
mov
imul
call
xchg
cli
mov
sub
and
in
mov
jno
or
push
lock
into
aam
dec
int
adc
mov
sbb
testl
popa
cmc
or
add
jbe
popf
mov
arpl
push
jmp
pushf
test
jmp
adc
dec
xchg
es
jmp
push
stos
inc
rol
mov
sbb
int3
fucomip
jmp
test
mov
pop
adc
mov
cli
sbb
insl
inc
push
idiv
incb
shr
fstl
test
lds
leave
xchg
test
push
mov
dec
in
packssdw
fistps
ja
dec
pop
shll
and
aad
in
dec
jmp
ja
push
gs
mov
popa
and
xlat
inc
push
cmp
mov
xchg
inc
test
inc
decb
ljmp
mov
repnz
add
sub
pop
pop
dec
or
sub
xchg
dec
ljmp
aas
push
mov
jmp
das
sbb
dec
jne
xchg
call
aam
add
inc
pop
jbe
jmp
leave
aaa
sub
inc
xor
cmpsb
lret
aad
jmp
dec
ljmp
mov
mov
xor
fwait
jl
adc
sub
sbb
mov
ret
xor
cmp
dec
nop
lahf
iret
mov
jmp
sub
jmp
dec
adc
sub
cmp
aaa
ficompl
xsaves
ja
jmp
sbb
repz
dec
test
mulb
pop
rorl
movsl
in
mov
cmp
mov
lahf
jmp
mov
sub
jmp
das
imul
adc
jge
inc
pushf
and
pop
js
fwait
mov
adc
cwtl
mov
ja
jno
aad
inc
mov
daa
or
xchg
scas
lods
enter
jae
imul
lods
inc
lret
lods
inc
mov
adc
out
jmp
into
pop
or
or
push
jmp
sti
jnp
popa
jns
out
jmp
cmp
dec
mov
pop
jmp
ss
xor
loop
lods
inc
add
pop
jae
push
pop
jle
jge
or
pop
mov
ja
sbb
cmpsb
ss
xchg
jmp
lds
and
call
arpl
sbb
and
and
int3
mov
sub
je
and
loop
cmp
jmp
aam
mov
jmp
test
jecxz
ljmp
jl
mov
pop
jne
inc
test
xchg
jmp
mov
or
mov
fimull
lods
divb
lock
fbld
push
iret
mov
cmovle
mov
and
movsl
cs
jmp
xchg
inc
push
movb
add
pop
cwtl
xor
bound
push
loopne
fstps
addr16
jns
lods
data16
mov
pop
enter
pop
sub
negl
dec
andb
or
pop
sub
mov
es
loope
or
fstps
dec
push
xor
cld
xor
jbe
sahf
outsb
test
mov
pop
jmp
push
rclb
stos
jle
pop
pop
jne
outsb
ret
insl
lret
pop
imul
sub
adc
scas
fs
sub
cmpl
clc
insb
rol
push
sub
popl
pop
dec
lods
movlps
dec
sbb
jb
sbb
push
imul
cmpl
jmp
add
rolb
adc
inc
pop
cltd
cmp
pop
sub
in
and
sub
aas
negb
cltd
jmp
pop
inc
ss
mov
xor
lret
cmpsb
mov
or
dec
cmp
jmp
mov
push
jp
push
into
dec
sahf
add
lcall
clc
andl
pop
scas
ds
loop
loopne
or
enter
xchg
in
xchg
repnz
push
lret
sbb
cmp
push
daa
scas
hlt
xchg
outsl
lods
repz
aaa
mov
fwait
adc
lods
ret
or
daa
lcall
outsb
xchg
push
xor
les
jecxz
jmp
xchg
or
test
enter
aaa
into
jmp
inc
bound
fistpl
inc
movsbl
iret
pop
sub
mov
add
adc
icebp
ljmp
jno
jne
adc
int3
dec
mov
mov
je
mov
mov
cmp
sbb
cli
or
cld
adcl
jnp
loopne
je
add
jmp
or
call
outsl
lcall
jmp
pop
aam
mov
ret
adc
dec
push
jmp
fwait
bound
jmp
nop
and
or
movsl
mov
jns
mov
xor
jmp
and
out
cmp
or
popf
int
mov
add
xchg
jmp
cltd
fs
les
ffree
xchg
mov
inc
or
lahf
stos
pop
popf
jecxz
into
jmp
es
adc
cmpsl
mov
jmp
test
dec
inc
lods
hlt
je
iret
and
aam
jle
cmpsl
outsl
movsb
leave
jmp
push
insl
insb
arpl
lods
push
int
push
pop
hlt
jmp
adc
dec
jl
call
lcall
jnp
imul
push
pop
jmp
and
mov
imul
jl
cmpsb
shr
fbstp
pop
fdivrl
sbb
mov
pmaddwd
jmp
int
out
jmp
nop
in
subl
hlt
int3
addr16
jl
sbb
sub
fwait
pusha
add
bound
xchg
insb
mov
jecxz
sti
int
aad
cmp
int3
jl
mull
les
in
mov
mull
aaa
adc
jns
imulb
leave
cmp
xchg
lods
jmp
pop
repnz
mov
jmp
push
jae
mov
mov
mov
sbb
mov
add
insl
jmp
adc
sub
xchg
lods
push
or
push
cmp
xor
xor
cs
adc
or
jmp
push
add
movsb
jmp
push
mov
repnz
adc
in
add
push
pop
repnz
sti
loop
mov
cld
jmp
fxch
cwtl
cmp
dec
pop
mov
mov
test
sbb
jmp
or
insl
arpl
cmp
jmp
jo
mov
clc
aas
mov
jp
mov
jmp
into
popa
movsb
bound
aam
pop
jbe
or
sub
mov
or
dec
push
in
add
aam
sbb
mov
cmc
jno
rcrl
mov
jp
jo
jmp
mov
and
mov
mov
or
clc
xchg
jmp
loop
push
jle
sub
aam
inc
lock
shll
arpl
or
repnz
xchg
int3
push
sub
jmp
dec
je
imul
xor
pop
loope
cmpsl
arpl
inc
or
pop
lods
push
clc
and
cmpsb
or
fsubrp
insb
xor
fwait
sub
inc
lret
fmull
data16
jmp
fidivl
addr16
scas
push
inc
cmp
xchg
cld
sub
mov
idiv
stos
sub
lcall
je
jl
and
mov
xadd
stos
mov
jecxz
in
into
das
out
enter
mov
mov
cli
in
dec
popa
jmp
push
add
fcoms
dec
outsb
sti
jns
mov
add
mov
sbb
hlt
in
push
lods
xchg
loopne
mov
daa
cmpsl
mov
loop
aam
shl
sub
sti
cltd
mov
cli
pop
inc
jmp
and
mov
mov
mov
jmp
insl
ret
arpl
jb
rol
add
or
sahf
repnz
push
std
pop
sub
or
and
jmp
pop
push
adc
jl
clc
adc
aaa
xchg
ds
inc
sub
mov
out
lods
mov
jmp
add
adc
and
xor
dec
dec
mov
pushf
icebp
cmp
scas
orl
movsb
and
and
xor
enter
sbb
jb
daa
das
sbb
out
arpl
add
sub
sub
repz
sub
test
or
cmp
mov
jmp
mov
mov
inc
loop
test
lahf
fnstsw
shrb
into
jmp
mov
imul
ss
push
push
ret
cmp
bound
shll
and
call
mov
add
mov
pushf
push
ljmp
push
xor
jmp
add
xchg
mov
lock
pop
mov
sub
jmp
mov
jle
sar
mov
jmp
jo
mov
or
ja
dec
lods
xchg
fcompl
mov
adc
shr
mov
testl
dec
outsb
flds
cmpl
sbb
adc
dec
test
sub
mov
lods
mov
and
iret
nop
outsl
and
into
sbb
js
cmp
xlat
stos
lret
push
sbb
cmp
pop
iret
jmp
push
cli
inc
push
mov
cld
negl
das
mov
addr16
mov
test
sbb
out
sbb
es
xchg
cmp
inc
lret
xchg
mov
jmp
mov
lods
rclb
cmp
mov
mov
mov
fldcw
scas
jmp
sbb
sub
add
pop
cmp
das
jb
cmp
xor
stc
fdivp
sbb
fsubr
sbb
jno
adc
mov
dec
cwtl
notb
sub
test
cmp
push
lods
mov
xor
insb
fldcw
sub
add
mov
or
and
rorl
add
andl
out
mov
mov
stos
dec
add
pushf
shrb
push
and
lahf
push
jmp
jbe
gs
or
shrl
inc
stos
lods
test
repnz
out
xchg
bound
inc
jnp
pop
lock
pop
aaa
arpl
cmpsl
divl
cs
mov
pop
movsb
lea
movsl
hlt
lods
les
dec
jmp
clc
call
arpl
mov
xchg
add
mov
dec
pop
scas
and
jg
mov
sub
sbb
inc
or
mov
push
lock
jb
insl
fdivl
repz
mov
mov
testb
ret
jmp
xchg
push
shll
inc
clc
jns
lret
add
mov
xchg
and
xchg
inc
je
out
sbb
sub
cmp
jmp
dec
popf
icebp
mov
or
aad
lahf
jns
xor
inc
dec
shrl
je
jmp
dec
ficompl
test
inc
mov
and
mov
mov
mov
in
push
jge
out
insb
or
xchg
fwait
outsl
inc
and
sub
xor
push
xchg
add
addl
mov
rorb
push
jmp
inc
cltd
jp
add
movsb
add
jno
clc
pop
jecxz
int
psubsb
in
aaa
adc
jmp
mov
divl
sub
and
pop
mov
add
jmp
xor
mov
jmp
fwait
notb
mov
jmp
dec
dec
in
push
pop
xor
mov
xchg
pop
cmpsb
aas
mov
or
mov
jmp
ror
hlt
imul
scas
and
cmp
push
cmpsb
fucomp
cli
and
cmp
andb
lods
sahf
sti
sub
cvttps2pi
out
or
push
stc
mov
sub
or
dec
mov
les
jmp
inc
adc
push
jecxz
testb
rorl
xchg
call
fldl
add
insb
pop
out
and
mov
adc
sbb
inc
jmp
adc
pop
sub
jmp
cmp
pushf
loopne
mov
xchg
and
je
divl
jmp
xor
push
xchg
ljmp
stos
push
fistpll
andl
fucomp
cmp
add
push
adc
inc
pop
idivb
repnz
jmp
or
push
test
cmp
out
rcll
sub
jns
jno
and
ficoms
jmp
test
out
lods
push
mov
rorb
or
add
and
fwait
pushf
fbld
loop
or
mov
mov
jns
fs
mov
jmp
shlb
lods
jp
mov
pop
or
adc
std
dec
push
stos
jmp
int
sub
adc
jbe
sbb
xor
mov
jle
dec
mov
push
sub
test
jg
hlt
fs
lods
stos
dec
sub
jnp
xor
push
mov
jge
push
xchg
repz
sbb
jno
cli
and
fs
aaa
or
lahf
nop
movsb
push
mov
sbb
popf
push
mov
xchg
dec
dec
fbld
cmp
mov
mov
ret
xor
sti
sbb
push
lods
push
in
mov
adc
mov
shll
xchg
leave
jmp
add
fwait
nop
mov
or
das
subl
int3
pop
and
lods
gs
inc
sbb
ss
xchg
mov
pop
mov
sbb
mov
cld
pop
out
shlb
push
int
dec
xor
cmpsb
mov
adc
and
sbb
mov
stos
fucomp
test
ljmp
std
push
mov
out
insl
imul
cmp
sub
mov
test
lret
jmp
fwait
xchg
lods
cltd
add
sub
fsubrl
inc
imul
xor
pop
sub
or
push
outsb
psrlw
inc
sti
aas
je
scas
clc
jmp
cmp
push
jne
and
lret
cmp
in
xchg
mov
lret
cs
push
adc
cmp
sub
cli
enter
adc
adc
pop
push
repz
dec
stos
add
pop
outsb
lods
pop
mov
mov
cmpsl
mov
inc
sbb
push
repz
stos
or
push
jmp
xor
arpl
ret
lcall
jmp
adc
les
mov
cmpsl
jmp
js
cwtl
fdivs
fisubrl
popf
inc
push
mov
shl
popa
jbe
mov
hlt
out
push
test
das
gs
add
add
scas
xorl
jmp
cli
in
jmp
push
xchg
inc
out
gs
pop
lods
cwtl
cmpb
divl
xor
out
sbb
push
and
inc
lret
pop
inc
into
jb
push
mov
add
jmp
sbb
jno
jecxz
xor
enter
call
dec
outsb
pop
aam
lcall
js
lahf
sub
xor
xor
nop
jmp
std
loope
add
aad
jmp
mov
sub
xor
dec
mov
daa
test
popf
mov
add
sahf
lods
inc
xor
xchg
lds
push
or
test
ja
call
sub
and
dec
jmp
push
mov
or
adc
cmpsb
or
mov
lods
cmp
mov
jge
vmread
sub
in
icebp
push
insl
add
ret
jmp
mov
or
xor
data16
out
xchg
js
cmc
lods
xorl
sbb
and
shlb
aam
pop
sbb
test
jmp
or
ds
and
push
cli
data16
fld
jmp
mov
or
pushf
or
das
fiadds
mov
jmp
test
pop
shr
cmp
movsb
ret
outsl
jmp
add
fnsave
add
jmp
pushf
daa
icebp
dec
or
sub
xor
pop
nop
jge
and
inc
jmp
and
jmp
enter
adc
das
pop
sbb
and
bound
jae
lods
mov
test
adc
jmp
dec
xchg
adc
sub
adc
cmc
in
dec
das
aas
inc
jmp
iret
xchg
mov
notl
sub
int3
scas
or
and
cmp
or
add
in
xchg
mov
or
sbb
lcall
lea
push
pop
test
repnz
fistpl
push
imul
push
add
popa
mov
sub
lds
ljmp
outsb
push
push
dec
lods
dec
imul
sahf
out
pushf
in
pop
daa
adc
dec
pop
loop
sbb
mov
jmp
mov
mov
dec
jmp
mov
xor
mov
rolb
cmp
or
and
das
adc
mov
jmp
bts
lret
pop
jmp
cmp
mov
jmp
mov
bndldx
push
jmp
fistl
stc
leave
adc
cmp
cmp
push
jb
in
jl
jae
fs
jmp
xor
sub
and
std
inc
shl
adc
push
std
jmp
push
lahf
and
xlat
dec
fwait
jmp
pop
add
and
es
jno
test
cmp
xchg
dec
jmp
jle
xor
mov
dec
xor
outsb
mov
fsubp
inc
and
leave
loopne
push
xor
jo
push
ljmp
lcall
jmp
jae
js
data16
inc
nop
mov
jp
stc
jmp
test
adc
je
push
or
orl
in
ss
out
sub
pushf
jl
and
test
push
pop
jb
lret
dec
sub
jl
jno
lahf
sub
insl
cmp
lret
cmp
xchg
jnp
mov
stos
jne
lcall
andb
or
push
cmpsb
shr
into
jae
scas
int3
or
or
lds
mov
rclb
arpl
and
mov
mov
mov
ja
xchg
cmp
adc
sarl
sub
lret
jmp
mov
jge
lods
out
sub
mov
xchg
pop
push
aaa
sbbl
mov
sbb
mov
ja
loope
jle
inc
stc
jmp
pop
push
sub
mov
add
pusha
sarb
cmp
mov
add
dec
jmp
inc
scas
in
mov
fucomip
xchg
iret
mov
popf
adc
jmp
out
arpl
std
shlb
dec
push
pop
out
stos
push
cmp
add
jns
sbb
mov
xchg
fptan
outsl
icebp
sti
repz
mov
fsubr
jns
movsl
insb
stos
outsl
in
sub
adc
or
push
sbb
sub
jmp
xor
pusha
mov
shr
mov
or
pop
std
jne
mov
mov
jmp
loop
cmp
subb
xlat
xchg
pop
int
xchg
pop
pop
das
and
jmp
cmp
adc
lcall
sti
dec
orl
cwtl
inc
mul
lods
sahf
and
pop
test
jns
incl
aam
sub
arpl
outsl
jg
mov
iret
andb
jmp
outsb
ljmp
pop
dec
stos
stos
push
xor
inc
mov
push
fdivp
insb
xor
mov
stc
aas
lods
xchg
arpl
daa
out
inc
sub
lahf
test
inc
jge
jmp
cmp
nop
arpl
add
xor
scas
mov
pop
pop
rclb
jmp
dec
xchg
cmp
xchg
movsl
push
jmp
mov
mov
in
sub
jo
fnstsw
or
and
inc
mov
incl
jo
sbb
mov
push
jle
jno
xchg
jmp
cmp
cli
imul
mov
hlt
push
sti
sbb
pop
jnp
es
lret
sub
jmp
mov
fdiv
push
mov
dec
mov
jb
jmp
or
and
jp
mov
mov
pop
sbb
cmp
adc
jmp
or
jl
js
leave
and
in
decb
mov
hlt
repz
ds
fisttpll
xchg
rorb
jmp
cltd
cmpxchg
sub
adc
subb
test
fsubl
push
jbe
lods
sbb
mov
jns
out
daa
sub
jmp
in
sub
mov
push
jmp
cmp
out
pop
mov
jmp
push
mov
loopne
in
cmpsl
aad
gs
ret
aaa
pop
insl
pop
lahf
rcrb
mov
out
or
inc
lods
clc
mov
push
pop
push
jecxz
mov
into
add
jmp
enter
test
or
ret
push
ljmp
gs
cwtl
stos
sub
bound
js
and
add
jmp
push
adcb
jmp
iret
hlt
out
jo
xor
jmp
cld
sub
dec
sbb
xchg
jmp
sahf
mov
jmp
inc
mov
in
imul
hlt
rorl
inc
sbb
repnz
inc
lcall
pop
jbe
in
repz
aam
bound
lret
or
inc
lret
outsl
es
push
lods
sbb
mov
pop
push
mov
sub
int3
cmp
sub
cmc
lods
xor
enter
pop
pop
cmp
movsb
jmp
and
mov
jmp
mov
pop
mov
xor
adc
cmp
jno
or
mov
jmp
syscall
or
lods
or
iret
mov
test
mov
pop
push
filds
xchg
sub
pushf
dec
pop
stos
and
jmp
lret
adc
lods
jmp
add
add
jmp
jl
add
sbb
add
jmp
mov
mov
sub
or
fcomps
mov
dec
xchg
xor
mov
xchg
andb
fcomp
inc
daa
imul
mov
push
sbb
jae
mov
test
lods
inc
cmpsl
dec
mov
xchg
add
push
and
jmp
mov
pop
xchg
push
pop
sbb
adc
std
jmp
cmp
push
jo
and
mov
rolb
mov
sub
inc
lods
shrb
sbb
cmpsb
jb
or
add
lcall
mov
imul
jmp
clc
in
jne
jmp
pop
pop
sbb
inc
insl
adc
add
cmpsl
sub
pop
jmp
jecxz
mov
dec
push
and
jb
lods
into
jle
xchg
adc
ficoml
jmp
and
sub
aad
push
mov
daa
jl
aam
add
mov
jmp
and
inc
fcompl
nop
cmc
cli
repz
jmp
call
ret
pushl
add
stos
sub
jmp
bound
iret
jmp
xor
inc
jmp
mov
xor
mov
aaa
inc
pop
iret
jmp
jg
ss
adc
scas
xor
or
out
and
jmp
dec
and
xor
leave
sub
enter
jmp
push
nop
lea
xchg
imul
mov
adc
mov
mov
sbb
stos
in
pop
jmp
xchg
das
mov
push
mov
rcrl
sahf
sti
cmp
or
pop
stc
insb
das
cmc
jmp
int
pop
and
cli
dec
jmp
mulb
sbb
inc
icebp
jge
push
lods
jl
clc
fdivrp
adc
jg
xchg
sub
cmp
data16
inc
dec
jecxz
xor
add
nop
rcl
or
das
xor
xor
lods
mov
mov
aam
sub
add
loop
jne
dec
adc
int
loope
int3
fsts
pop
fcmovu
cli
sbb
pop
dec
add
insb
push
dec
int
fidivs
mov
rcl
sbb
movsb
xchg
lods
push
dec
inc
mov
jge
mov
xlat
add
aaa
xor
rcl
fcmovb
dec
sub
lods
dec
or
sar
int3
iret
pop
ret
jmp
jae
jne
cld
mov
jmp
and
sbb
jmp
cmp
repz
adc
pusha
loopne
jo
mov
ljmp
mov
push
jecxz
pop
adc
pushf
jge
jmp
and
sbb
in
leave
jmp
outsl
ss
xchg
add
dec
push
adc
stos
out
mov
mov
gs
mov
mov
xchg
jmp
aas
push
das
outsb
lods
jmp
test
xor
movsb
mov
in
fcoml
and
fmuls
test
pop
sbb
mov
lods
dec
xchg
cmovae
out
aaa
ja
pushf
lods
outsb
fnsave
adc
jmp
mov
call
int
xchg
mov
jmp
pop
out
ret
js
imul
insl
push
xor
sbb
sbb
lock
mov
nop
std
xor
sub
js
int
ds
por
fisubrl
cld
out
pushf
or
sbb
mov
jmp
mov
subl
hlt
mov
mov
pop
inc
pop
int3
cmp
ss
and
aam
add
xchg
out
fdivrs
mov
jmp
jge
xchg
insb
je
int
xor
fnsave
push
push
sbb
pmulhuw
aad
jmp
subb
jmp
mov
stc
pop
jmp
ja
xchg
lods
mov
xor
outsl
push
and
loopne
insl
imul
cltd
jmp
mov
sub
repnz
lahf
arpl
cwtl
stos
xor
out
cmp
sbb
or
jno
mov
cmpsl
adc
sahf
repnz
lods
jmp
dec
adc
sbb
lock
rorb
push
out
sub
add
insl
cmp
cli
add
cmp
icebp
push
std
leave
push
cmpsb
cs
or
clc
xorl
and
pop
sbbl
imul
mov
adc
jmp
imul
imul
mov
leave
xchg
push
popa
or
jecxz
jmp
fs
add
icebp
rolb
sub
mov
pop
addr16
lret
sub
jle
gs
push
xchg
enter
imul
lock
cmp
sub
cli
je
int3
repz
jmp
pop
xlat
sahf
mov
out
jmp
scas
xchg
or
insl
div
jmp
and
sahf
sub
xor
xchg
adc
sub
mov
pop
sub
push
sti
or
adc
push
leave
test
cmp
jmp
sub
jmp
mov
and
dec
jmp
adc
pop
imul
imul
xchg
jmp
fstl
into
jmp
fcoms
bnd
aad
mov
lcall
call
jb
xor
pop
adc
push
mov
mov
test
subl
pop
mov
mov
aam
fsts
push
jmp
lcall
lahf
jmp
lock
mov
cwtl
scas
std
ret
mov
jmp
ret
xchg
leave
sbb
jnp
or
push
sbb
jmp
jmp
lock
je
adc
dec
jmp
lods
pop
es
mov
jmp
cmpsb
mov
jb
loope
add
pop
pop
popa
loop
mov
insb
mov
rorb
jb
loop
jmp
nop
ja
pop
scas
sbb
aaa
aas
mov
shr
xchg
data16
push
fdivl
into
repnz
pop
sti
out
out
in
jb
jmp
or
jg
push
lcall
data16
mov
popf
inc
cmc
aad
call
sub
mov
xchg
les
std
mov
data16
outsl
movsl
cwtl
scas
sbb
jmp
loope
mov
jmp
test
jnp
lret
pop
jns
je
rcll
pop
xchg
sub
sbb
aaa
sbb
insl
scas
pop
add
xor
cmp
adc
cmc
lods
mov
std
lods
push
or
sbb
pop
movsl
or
pop
enter
lret
adc
fisttpll
mov
inc
sbb
mov
or
je
mulps
pop
cmp
or
mov
cli
inc
jmp
mov
movsb
dec
jmp
sbb
xor
dec
xchg
xlat
fwait
jmp
and
inc
stos
out
pop
shll
jmp
jns
outsl
popa
sub
lods
mov
fmull
adcl
mov
movsl
addr16
push
and
add
dec
insb
fbstp
inc
pop
imul
push
movl
orb
mov
jp
jmp
es
push
js
mov
into
outsb
mov
fldt
setge
mov
pop
gs
jbe
mov
stos
insl
popf
sarb
shr
sbb
cmp
in
ja
cld
fsubl
or
hlt
sbb
call
cmp
shrl
jb
inc
ljmp
cmp
sbb
mov
scas
pusha
jmp
rcrb
jmp
and
pop
int
jns
push
mov
ret
jmp
aad
ficomps
push
cli
jmp
jle
arpl
mov
rorb
jnp
movsb
xchg
ret
xor
xchg
inc
fiaddl
jne
into
or
lds
movsb
les
add
jg
sarl
jge
dec
iret
in
and
jne
loop
pop
xchg
rsm
sti
and
push
or
loopne
or
dec
aas
test
jecxz
cs
paddw
or
fisttpl
xchg
sub
push
mov
push
pop
and
jmp
cmp
out
fdiv
jmp
sub
mov
xchg
insl
sub
dec
pop
cmpl
ret
sub
std
sub
lret
lea
daa
fsts
insb
sbb
sbb
clc
push
pop
gs
add
ds
sub
sub
in
inc
inc
insb
jo
sbb
and
mov
in
xor
mov
icebp
imul
jmp
popf
cmpsl
or
lcall
jmp
lods
test
hlt
xchg
imul
fldl
ja
adc
pop
fnstsw
jecxz
jmp
sbb
mov
adc
dec
jmp
mov
mov
jmp
jb
cli
inc
ds
jmp
repnz
sub
ljmp
mov
sbb
push
aas
lods
jo
mov
mov
sub
xor
fisttpl
jg
aam
mov
push
ror
mov
sub
ljmp
loope
std
adc
outsl
das
insb
sub
pop
pop
push
push
push
lods
popa
mov
inc
lea
icebp
outsl
jmp
iret
mov
dec
test
aaa
cmp
shlb
jmp
inc
push
cmp
sbb
in
inc
repz
jl
sbb
test
repnz
or
jmp
xchg
push
sahf
add
fdivrl
loopne
shrl
add
in
shrl
out
out
push
push
aad
adc
jb
mov
enter
cltd
std
jl
sbb
jbe
jmp
clc
les
outsb
lahf
ljmp
mov
outsb
push
cmpsb
xchg
push
add
loopne
mov
mov
add
mov
jae
mov
or
mov
push
cld
add
scas
out
inc
loop
repz
and
cmp
rorl
mov
lret
shl
sbb
sub
cmp
or
movl
sub
and
or
fimuls
push
push
in
mov
sub
adc
xchg
in
xchg
pushf
call
sbb
mov
jl
out
adc
push
jmp
xchg
cmp
stc
test
lods
ret
sbb
jns
add
loop
inc
aaa
popa
xor
lods
mov
add
stos
std
pop
js
das
jmp
ja
jbe
add
outsl
adc
aaa
scas
sub
jge
loope
push
iret
cld
mov
cmc
rorl
bound
lret
pop
sub
and
or
mov
lods
cwtl
push
mov
ret
out
inc
clc
sub
les
xchg
cmpsb
dec
jmp
inc
xchg
loop
call
lcall
add
mov
lcall
or
inc
out
popa
xor
out
add
mov
dec
ds
pop
mov
xor
sbb
push
pop
ss
fucomi
adc
jp
adc
dec
mov
and
xchg
mov
and
sub
pop
scas
add
pop
and
jmp
sub
jae
sbb
jp
inc
jmp
inc
or
dec
jns
sub
mov
mov
sub
adc
ss
jmp
orl
jmp
enter
xor
out
mov
mov
or
pop
and
jmp
icebp
lret
sahf
lcall
sbb
and
dec
jmp
pop
imul
aam
sbb
pop
jmp
and
jmp
jnp
push
or
push
je
lds
pop
xchg
push
adc
movsl
mov
shll
add
es
cmp
or
inc
sbb
repz
sub
xor
lret
movsb
xchg
jmp
jmp
movsl
clc
mov
in
lret
jo
xchg
adc
gs
jmp
jns
mov
mov
ss
fsubp
jb
loope
sbb
je
dec
sub
inc
iret
xchg
pop
mov
fsubrl
aas
add
fistpll
jmp
xchg
pop
popa
test
or
mov
xchg
cmp
ret
jmp
ror
movsw
push
fsubr
les
jb
das
sub
xchg
mov
inc
scas
test
ljmp
sbb
xchg
cmp
mov
pushf
aas
pop
aaa
imul
xor
or
popa
dec
dec
ret
sbb
xor
push
data16
ljmp
jo
aad
push
fldl
jmp
imul
bound
push
jnp
xchg
push
repz
in
enter
lds
push
and
jb
mov
jmp
in
or
jge
jmp
subb
jne
imul
stos
jmp
push
in
or
xor
pop
lahf
xchg
xor
xchg
fsubrl
and
or
cmp
xor
jg
push
jmp
mov
inc
int3
mov
fldpi
in
add
add
daa
xchg
dec
int3
jmp
ds
and
enter
sarl
jge
imul
pop
dec
or
jnp
add
push
loop
cmp
lods
cmp
faddl
dec
jmp
jecxz
idiv
jae
adc
dec
inc
add
scas
cmpsb
data16
pop
or
inc
cmp
ss
or
mov
and
jle
cmc
scas
jl
or
imul
fs
and
int
lret
xchg
sub
gs
or
and
sahf
and
in
jg
jmp
push
add
ja
sbb
fldcw
push
sbb
inc
cltd
loop
fistpll
push
cli
leave
jne
rcrb
and
sub
sbb
addr16
scas
insb
pop
add
or
dec
pop
cmp
js
scas
mov
sbb
das
and
bound
jno
imul
jle
mov
sub
lods
out
loop
mov
dec
xchg
pushf
cmc
mov
dec
add
hlt
sti
xchg
push
add
cmp
icebp
les
add
dec
jbe
xor
or
lods
sub
repz
cmp
test
ss
jae
pop
sub
aad
fucomp
int3
ds
add
or
jg
out
sub
mov
jmp
sbb
pop
xchg
addr16
int
xor
out
aas
icebp
pop
arpl
out
inc
dec
popa
mov
inc
jg
loop
fsubs
jmp
mov
test
jmp
fldl
mov
sbb
jmp
dec
xor
lds
repnz
xlat
or
test
jmp
jmp
iret
jne
dec
mov
jno
mov
dec
push
sub
and
pop
jmp
push
imull
es
cmc
ds
and
rep
hlt
pop
mov
cltd
jne
inc
jge
in
jmp
fs
std
lahf
cmpsl
dec
inc
inc
add
movb
daa
loopne
pop
adc
sub
jo
sub
fadds
and
dec
mov
in
pusha
ds
jmp
xor
jnp
lret
imul
xadd
out
xchg
cmpsb
push
jmp
push
outsb
or
lods
test
fstp
inc
push
and
cmp
in
jmp
mulb
outsl
xchg
scas
inc
jmp
push
test
jmp
pop
jg
stos
leave
lods
imulb
pop
lea
ss
push
sub
jb
out
sbb
das
ret
jmp
sbb
je
icebp
mov
icebp
jo
lods
and
xchg
nop
stos
outsl
and
cmp
or
or
scas
repz
cmp
xchg
pop
mov
mov
fstps
aam
mov
outsb
or
outsl
sti
mov
sbb
hlt
inc
jmp
js
push
enter
lods
icebp
inc
cwtl
cmc
pop
shl
out
sub
decb
test
aad
mov
inc
jmp
mov
fnstenv
pop
jmp
stos
mov
sub
enter
into
repnz
sahf
jmp
pop
mov
scas
jmp
add
jo
fcoms
shrb
clc
and
mov
pusha
or
les
jmp
push
mov
lds
adc
push
jmp
inc
jmp
xlat
jmp
jge
movsl
mov
sub
cmpsl
frstor
out
fidivl
push
pop
mov
lods
sub
lea
pusha
out
push
and
pushf
testl
jge
mov
jmp
xchg
jo
nop
icebp
push
hlt
jmp
or
lods
lret
ror
daa
cmp
dec
jmp
or
outsb
adc
jns
sub
pop
repz
push
jle
stos
jmp
mov
cmp
out
and
mov
pop
mov
cmp
push
cmc
sbb
dec
push
stos
lret
dec
mov
outsl
scas
sarb
arpl
icebp
push
pushf
and
popa
mov
in
inc
adc
or
dec
out
push
cwtl
in
movsl
call
pop
loopne
jp
aaa
cs
jmp
cmp
cmpsl
les
add
iret
int3
mov
aaa
out
jmp
ret
rcrl
pop
dec
lods
and
push
dec
popa
sub
es
in
sti
or
jnp
jmp
testb
sub
scas
daa
cmpsl
sti
in
mov
out
or
fs
rcl
jmp
pop
cmpsb
dec
aad
or
cwtl
and
in
and
xchg
cmc
mov
cmp
sbb
or
cmpsl
or
lcall
dec
jmp
mov
lods
sbb
lahf
and
cmp
pop
jmp
lods
pop
xchg
test
mov
pop
addr16
test
arpl
adc
mov
mov
pop
lods
add
repz
icebp
mov
rcrl
inc
add
mov
pop
fdiv
loop
pop
mov
cmp
mov
imul
mov
push
pop
out
dec
sbb
sub
cmpsb
insl
jo
sbb
and
inc
cmp
xlat
fcoml
lods
sub
mov
pop
push
cld
xchg
jmp
outsb
mov
sub
adc
jb
int
lods
lock
in
pop
jmp
mov
sti
lcall
aad
ds
pop
pop
nop
cmp
jmp
xor
xchg
jp
add
pop
xor
mov
mov
pushf
rolb
aad
xchg
inc
or
ret
inc
notb
mov
jmp
and
mov
pop
push
add
les
mov
pusha
sub
imul
lcall
loopne
mov
call
es
xchg
ret
data16
mov
and
nop
and
cld
pushf
jmp
sti
iret
jle
scas
cltd
adc
pop
int
out
cwtl
jecxz
test
lods
lcall
outsb
mov
jb
test
jmp
adc
gs
call
mov
leave
xor
ss
orb
cmpsl
sub
dec
jae
mov
cmp
mov
jne
or
aas
jno
pop
jmp
and
and
gs
mov
sub
pop
cmp
add
shll
and
pop
adc
push
arpl
sti
jmp
shl
in
dec
cmp
push
out
jmp
xchg
cltd
xchg
push
inc
repnz
repnz
sbb
and
bound
sti
out
movsl
mov
jo
sub
or
xchg
jle
fs
pop
add
sbb
adc
cmpsl
mov
es
inc
xor
jbe
xchg
pop
call
stos
push
jb
imul
jmp
xor
add
ror
mov
push
lods
idivb
jmp
sbb
push
xchg
inc
sti
int3
sbb
mov
fsubrp
push
popa
sub
movsb
jmp
mov
jb
stos
push
sub
int
int
data16
dec
jmp
mov
inc
mov
jmp
sub
out
lds
loop
popf
or
mov
jmp
sub
stos
jmp
jp
pushf
cmpsb
lock
sub
mov
sub
jbe
ljmp
xor
daa
rcrb
and
iret
mov
xchg
add
inc
dec
jmp
push
jb
mov
mov
add
loop
pop
cmpsb
sbb
cmc
mov
mov
out
xchg
int
jmp
stos
ljmp
pop
jmp
xor
mov
movsb
xor
dec
xchg
jmp
jle
add
jmp
push
and
insl
sub
push
or
lahf
out
xchg
mov
jmp
lods
push
aad
lods
stc
je
sub
insb
rol
push
aaa
lods
pushl
mov
mov
sub
push
mov
adc
mov
stos
or
sub
and
jmp
mov
cmp
dec
mov
xor
pop
adc
cli
shrl
inc
mov
sbb
cltd
scas
sub
icebp
and
test
and
mov
data16
stos
mov
ret
pop
xor
jb
out
pop
or
iret
popf
sti
jb
mov
icebp
cltd
ret
pop
sti
sbb
dec
add
roll
std
sahf
lret
daa
addr16
sub
outsl
stos
daa
inc
cmp
sti
mov
mov
and
jmp
adc
mov
dec
jmp
fmull
jmp
jmp
jnp
jns
pop
jmp
addr16
dec
adc
jmp
imul
insb
mov
test
push
sarl
jmp
out
fistps
xor
mov
ljmp
add
sbb
jmp
sub
pop
and
or
sub
mov
pushf
das
mov
add
mov
sub
push
jnp
mov
jmp
mov
xchg
mov
lahf
daa
les
pusha
mov
inc
inc
jmp
dec
push
cmp
stos
mov
add
xchg
sahf
pushf
xor
fldpi
out
out
popf
movb
jmp
fadd
dec
and
sub
add
scas
push
inc
xchg
add
lock
push
mov
sbb
cwtl
jmp
push
cmp
xchg
jmp
scas
loop
stos
add
lods
out
jmp
or
fwait
inc
pop
xor
inc
lea
and
mov
jmp
clc
cmc
sbb
inc
jmp
push
gs
or
mov
jmp
pop
loope
xor
insb
jnp
dec
mov
pop
and
sbb
icebp
dec
mov
sti
pop
lds
jmp
sbb
cld
cmp
imul
add
fiaddl
rclb
mov
lock
aaa
mov
std
sbb
div
stos
loope
cmpsb
push
mov
cmc
jae
xchg
jmp
cli
lods
in
test
xlat
sub
cwtl
inc
jecxz
jo
push
and
shl
pop
sub
inc
dec
sbb
imul
jo
hlt
std
cmp
loop
nop
sti
test
jbe
shr
xchg
mov
adc
outsl
pop
inc
imul
add
xchg
lds
mov
imulb
lods
shlb
sub
cwtl
test
and
cmp
jle
cmp
cmp
xor
or
lods
ja
jo
addr16
stos
aad
lods
inc
adc
jmp
push
rcll
fistpll
pop
adc
aad
popa
jo
mov
xchg
jmp
shrb
inc
jmp
aam
jbe
adc
lea
and
jge
je
cmpsl
imull
jle
movsb
shlb
sbb
xchg
sub
fstps
imul
icebp
push
jle
jp
dec
sub
add
push
ljmp
pop
jb
cmp
cmp
rorl
xlat
movsb
cmp
cwtl
jmp
mov
dec
shr
dec
outsb
fstpt
shlb
inc
cmpb
mov
add
das
jmp
sub
add
pusha
sti
and
push
insl
mov
jmp
lahf
fs
jg
imul
sub
jmp
xchg
scas
jnp
stc
outsb
sub
mov
enter
idiv
mov
jo
ret
mov
dec
test
sub
imul
pop
mov
dec
sti
jne
sub
repz
sbb
inc
je
ds
xchg
xor
jmp
cmp
pop
lods
push
and
mov
pop
popa
jmp
pop
jnp
divb
pop
repnz
lcall
and
out
inc
mov
push
jp
jmp
xchg
xchg
in
test
or
rep
pop
push
push
adc
add
cmc
push
lods
xchg
enter
loop
sbb
adc
hlt
cmp
inc
repnz
pop
sti
xchg
mov
ficompl
mov
mov
mov
mov
push
adc
push
in
call
sbb
jmp
xor
mov
pop
fsub
mov
mov
sub
and
lret
sub
in
cmp
hlt
and
xchg
incl
shl
ljmp
pop
add
stos
fsubr
sub
inc
mov
adc
loope
repz
add
mov
or
xchg
nop
mov
cmpsl
popf
ret
jmp
aam
arpl
sti
daa
mov
loop
sbb
mov
mov
xor
mov
pop
out
fisubl
shrb
xchg
and
mov
xor
ja
popf
clc
mov
in
lret
inc
pop
aad
test
pop
out
jmp
push
sti
enter
lret
jmp
arpl
jmp
inc
lds
clc
fmuls
pop
cwtl
pop
mov
loope
sub
pop
sbb
adcl
xchg
lods
mov
push
rolb
adc
jge
inc
mov
sub
jb
xlat
cwtl
or
jp,pn
cmp
push
add
ds
pop
adc
jmp
inc
sbb
lea
jmp
pop
call
addb
pop
popf
mov
jmp
add
add
mov
adc
rolb
jle
add
outsb
shr
cmpsl
cmp
popa
push
ds
xchg
jp
leave
rolb
add
stc
mov
mov
lret
fsubs
push
sub
inc
adc
or
jmp
mov
repnz
out
aam
sbb
push
jmp
fdivrs
xchg
imul
pop
jl
sti
lock
jmp
mov
roll
icebp
push
mov
test
jmp
fsubr
pop
lea
loopne
mov
and
inc
fs
push
pop
inc
inc
jne
adc
repnz
sbb
test
push
insl
sub
mov
or
repnz
out
sbb
xor
rcll
mov
mov
insb
movsl
std
aaa
sbb
add
clc
repz
gs
jne
add
xchg
lcall
xchg
mov
xchg
mov
lcall
xchg
mov
lods
mov
cmpsb
sbb
lcall
jmp
adc
pop
mov
push
push
or
inc
or
adc
and
dec
jmp
xchg
jns
and
jmp
ficoml
out
push
cmp
dec
xchg
jle
mov
push
jmp
int
pop
add
xor
jne
cwtl
sub
lock
mov
loop
pop
shr
int
gs
out
add
xor
pop
or
jp
cmp
fcomi
iret
cs
jmp
pop
xor
jmp
and
cmp
adc
sub
test
jae
orl
adc
add
xchg
cmp
mov
push
xchg
sub
ret
mov
imul
sbb
icebp
in
dec
bound
jmp
out
jae
adc
cmp
and
jp
into
dec
jmp
fcoms
push
dec
mov
pop
jmp
mov
pop
lahf
sbb
lcall
outsl
sbb
cmp
jle
push
adc
mulb
sti
push
xchg
push
fnstcw
xor
idivb
xchg
and
sub
in
mov
lock
test
popf
shr
int3
div
xchg
stc
addr16
mov
mov
lods
dec
cmp
std
sbb
pop
mov
add
sub
push
jmp
xor
shl
ja
in
icebp
rorl
repnz
add
subl
sbb
stos
or
fdivl
sub
inc
pop
movsl
in
xor
imul
cmpsl
negb
jmp
shl
fdivrp
pop
dec
scas
jmp
sbb
or
imul
lds
mov
fcoms
pop
xor
mov
pop
fsubl
es
and
movsl
repz
or
fwait
xchg
adc
ret
orb
pop
repz
mov
addr16
mov
scas
xchg
es
lret
jle
mov
or
jne
sbb
imul
in
out
in
outsl
das
jmp
mov
sbb
adc
xchg
jmp
insl
icebp
add
repnz
cmp
fwait
jae
fldt
push
mulb
lods
cmp
repz
lods
or
mov
jp
mov
test
loop
jmp
shrl
aaa
nop
in
mov
sbb
je
jns
ror
test
dec
adc
es
pop
xchg
movsb
ret
and
jmp
test
pop
jne
mov
popf
imul
push
insl
outsb
inc
rclb
mov
jae,pn
ret
hlt
cmpsl
fnstcw
aad
icebp
aam
lods
mov
jae
push
out
mov
xor
cmp
mov
and
lods
add
xchg
cmp
mov
jge
lea
sti
jne
jmp
jg
in
xchg
mov
pop
and
mov
push
stos
xchg
daa
xlat
pop
jmp
or
cwtl
jns
daa
ja
aas
or
aam
jno
shrl
out
push
imul
mov
mov
jmp
test
cmpb
jmp
jbe
mov
or
add
lock
leave
sbb
ja
insl
pop
out
sbb
fbld
jo
sahf
adc
sbb
outsb
xchg
rcll
mov
sub
fidivrl
and
lods
not
bound
mov
pop
sub
daa
sub
add
jmp
aad
adc
jmp
shrl
lods
movsb
mov
sub
adc
pop
pop
fnsetpm(287
xor
pmaddwd
enter
add
dec
xchg
jmp
sub
xchg
daa
les
push
cmp
insl
dec
mov
dec
mov
sbb
adc
popa
add
sub
push
pushf
add
jo,pn
cmp
xadd
ret
fldpi
xchg
add
sbb
pop
fs
push
xor
or
fidivrs
dec
or
push
xlat
hlt
jp
clc
jmp
leave
je
pushf
repnz
adc
jcxz
jl
jmp
lds
push
xchg
int3
inc
xchg
data16
and
inc
and
pop
int
outsb
jmp
into
or
ss
pop
fldpi
add
mov
push
addr16
daa
mov
and
xlat
shrb
dec
pop
mov
ret
movsb
lods
jecxz
dec
fs
and
cmpsl
dec
in
xchg
jmp
lock
xor
dec
push
sbb
std
mov
jmp
mov
sub
push
jmp
pop
pop
sbb
jbe
scas
lret
dec
imul
pop
movb
and
rorb
fneni(8087
mov
shll
jne
outsb
add
push
and
jmp
mov
int3
mov
leave
out
movl
push
dec
and
and
rorb
pop
mov
test
cltd
je
fcom
xor
push
sbb
mov
insb
cld
cmpsl
sub
int3
mov
out
adc
adc
punpckhwd
pop
dec
fsubr
and
push
pusha
add
jne
pop
in
outsl
popf
call
sbb
jbe
ret
hlt
jle
jmp
fnstenv
shr
mov
xchg
stc
ja
push
add
inc
sbb
out
xchg
jmp
fisttpl
inc
daa
fsubrp
lock
xchg
adc
jmp
test
das
inc
mov
out
sti
mov
fisttpl
sub
pushf
movsb
xor
mov
inc
test
sub
mov
fisttpll
push
arpl
cmp
xchg
dec
xchg
or
sbb
mov
jmp
subl
scas
sub
orb
iret
mov
push
adc
or
push
add
jb
sub
jno
cwtl
pop
dec
dec
jmp
dec
mov
mov
jecxz
ja
xchg
inc
out
call
orl
rolb
ja
mov
lahf
xorb
add
cmpsb
popf
push
inc
jmp
nop
sub
mov
cmp
push
and
test
sbb
dec
sbb
jb
jmp
pushf
pop
dec
cs
sub
cmp
jno
aam
in
cmp
test
ret
nop
sahf
into
jmp
mov
stos
out
movb
xor
and
std
out
ret
adc
imul
test
call
bswap
sub
popf
pushf
leave
cmc
sub
pop
into
sub
push
jmp
inc
sbb
mov
shr
jmp
pop
or
jb
lock
mov
test
cmp
pop
outsb
and
bound
lods
pop
inc
adc
add
jge
scas
push
fnstcw
jmp
lret
int3
sbb
jl
inc
mul
rclb
stc
jmp
lret
xchg
imul
cmp
je
test
push
mov
adc
lahf
cmp
or
adc
lret
add
jmp
imul
insb
nop
mov
jmp
cwtl
push
lret
in
pop
dec
outsl
xor
stos
cltd
imul
or
inc
sarb
jb
jmp
mov
xchg
inc
scas
xchg
icebp
test
dec
sub
lods
push
xor
ror
dec
mov
jmp
dec
lods
fbld
insb
jg
jmp
inc
push
xor
sbb
sub
jb
inc
outsb
xor
sub
cmp
lods
and
xlat
test
sbb
sub
mov
cmp
repz
aad
mov
jns
push
dec
leave
or
shlb
jmp
cwtl
ret
lds
and
stos
shlb
leave
ja
cwtl
push
add
shr
jecxz
jbe
mov
mov
xchg
add
gs
mov
or
adc
mov
movb
lret
fucomi
inc
mov
es
scas
icebp
sti
hlt
pop
dec
pop
stos
mov
jmp
fcom
scas
sub
std
adc
lods
cmpsl
pushf
and
sti
mov
xor
rcrl
pusha
js
lret
jmp
push
adc
stc
and
lret
scas
fcomps
stc
sbb
dec
push
or
push
push
sub
push
xor
in
dec
jne
pop
cltd
imull
out
and
mov
or
or
cmp
mov
cmp
outsl
fst
jmp
pop
fiadds
in
in
and
repz
out
pop
push
lods
mov
stos
or
lcall
jb
insb
xor
sbb
add
inc
or
in
sbb
test
andb
xlat
xor
push
das
cli
jnp
inc
imul
ljmp
jmp
add
stos
into
mov
inc
jmp
mov
cmp
sbb
jmp
sar
je
mov
scas
jns
xor
pop
fdivs
mov
nop
rorb
into
inc
aaa
mov
insl
cmp
lret
mov
dec
jmp
fs
out
test
cs
fstpl
fdivs
orb
mov
inc
jmp
in
cli
sti
das
popa
popf
jmp
inc
pop
xor
push
jle
jmp
sub
xor
dec
dec
pop
hlt
sub
out
mov
sub
jo
push
shll
sbb
and
sub
negl
xor
jmp
and
pop
repnz
fwait
or
loope
mov
popf
add
cmp
add
test
xchg
popf
stos
mov
jmp
adcb
mov
repnz
loope
sti
icebp
pop
test
or
jmp
mov
inc
dec
push
add
inc
cmpsl
out
mov
push
std
aam
jno
int
xor
fsubp
scas
sbb
jmp
call
aas
xor
dec
or
aam
mov
mov
scas
add
cmpsl
fwait
or
sbb
sarb
out
sbb
cltd
dec
mov
sub
push
push
or
stos
push
jns
test
sub
sbb
and
or
pop
push
int
pop
lea
nop
jmp
jno
dec
jg
add
movsb
into
jmp
outsl
fnstcw
xchg
xchg
iret
lea
jmp
fldt
adc
mov
or
mov
push
outsb
dec
dec
lods
xor
add
lods
xchg
sbb
fcoml
nop
sub
or
sar
lret
xchg
ret
xor
jmp
xor
daa
pushf
lods
orl
push
enter
pop
xor
push
xchg
daa
or
mov
jns
add
je
sub
add
inc
dec
sbb
das
cmp
pop
or
in
lret
jo
dec
push
lods
adc
push
in
daa
adc
inc
jmp
aad
and
out
jmp
in
stc
lds
push
dec
test
inc
idivl
popf
das
imul
sti
mov
sub
mov
popa
movsl
mov
fldl
imul
ss
sbb
fmull
outsb
mov
sub
and
out
shlb
push
je
jmp
pop
mov
cmp
pop
mov
and
jmp
pop
dec
adc
jne
jle
mov
add
inc
clc
jmp
jg
dec
xchg
and
sub
nop
hlt
sub
jo
cmp
or
int
loope
jmp
or
pop
hlt
lods
xchg
push
inc
rcrl
sub
lds
jmp
fwait
mov
insl
sub
bndldx
test
sub
mov
ss
and
fcoml
scas
jmp
outsb
leave
std
jnp
das
jmp
xor
inc
lods
popa
daa
hlt
outsb
and
sbb
add
push
and
inc
out
call
add
sbbb
jmp
mov
jns
sahf
jle
jmp
sub
in
iret
jmp
push
cltd
ds
or
jmp
je
std
mov
sub
jmp
das
xor
shll
loopne
dec
xor
pop
ret
xchg
xor
adc
lea
push
in
and
scas
or
xor
sub
bound
or
push
dec
add
jmp
and
xchg
push
and
jmp
scas
sbb
adc
mov
imul
test
xchg
sub
iret
outsb
out
cmp
push
outsl
loope
ret
push
jmp
jne
xor
sbb
jecxz
cwtl
jns
jmp
mov
sbb
jnp
into
sub
or
and
pop
stos
insl
nop
jmp
int3
popf
in
neg
pop
test
xchg
jle
aam
imul
sbb
jl
lret
scas
imul
or
jmp
sahf
lcall
dec
sub
jmp
jae
push
test
inc
jmp
mov
idivl
shrb
jmp
jl
popa
mov
mov
test
jmp
push
cmp
dec
std
pop
aam
and
dec
jmp
inc
sbb
outsb
xchg
fcmovne
sbb
xchg
cmpsl
cli
inc
jmp
sbb
and
lods
push
xchg
push
xor
lcall
or
jmp
or
decb
ljmp
xchg
dec
pop
sub
stc
daa
adc
imul
outsb
sub
aam
or
dec
sub
cmp
and
mov
inc
dec
scas
lods
dec
or
arpl
mov
and
das
jmp
pop
add
nop
cli
es
cmp
repnz
fadds
inc
scas
sti
xor
adc
scas
fbld
xchg
ja
pop
test
aaa
out
test
ja
jmp
scas
imul
push
pop
sbb
and
lods
imul
push
push
mov
ja
repz
es
mov
cmp
pop
insb
jmp
out
cmp
adc
or
int
loope
mov
mov
pop
lret
lds
ja
mov
cmc
pop
jmp
xchg
inc
dec
jmp
cmpsb
lahf
and
test
jmp
push
or
and
adc
repz
cmp
or
test
or
inc
inc
push
call
cmc
xor
mov
int
imul
lea
push
xchg
jmp
outsl
sub
jmp
lock
imul
test
test
mov
jmp
mov
cmp
push
js
inc
mov
fwait
push
insl
dec
mov
hlt
pushf
stc
push
imul
mov
fsubrp
jo
test
jmp
fwait
sub
lds
sbb
nop
sbb
popa
repnz
add
mov
xchg
lods
in
loopne
das
jmp
push
call
push
scas
clc
xor
push
or
push
xchg
shr
jl
loope
pop
leave
push
mov
nop
push
jmp
stc
pop
aam
inc
jg
jmp
or
inc
jbe
push
add
hlt
pop
dec
dec
repnz
pop
xchg
rolb
arpl
push
jle
test
loope
nop
jmp
iret
push
xchg
pop
xchg
jmp
sub
test
loope
imul
jmp
sbb
dec
loopne
cli
ds
les
mov
add
lret
jmp
push
jbe
pop
mov
xor
mov
or
sub
les
cmp
outsl
sub
scas
fildl
xor
shll
es
leave
pop
pop
test
jmp
std
mov
loopne
sub
sahf
sub
xor
in
out
lret
outsb
fnstsw
sti
sahf
adc
btcl
jb
jns
lcall
push
cld
sbb
pop
pop
inc
jmp
mov
mov
imul
xchg
sub
mov
shll
arpl
jmp
pop
js
xor
push
cli
xor
push
sti
mov
inc
push
jne
and
jmp
iret
dec
hlt
cwtl
xchg
inc
jmp
lods
in
scas
dec
sub
jmp
test
pop
inc
mov
adc
cli
jecxz
rcrl
jmp
sub
cmp
sbb
mov
fsubrp
push
cwtl
pop
mov
lods
imull
mov
out
ds
iret
push
lods
fs
out
xor
rcr
jg
adc
xlat
or
lahf
xorl
jmp
test
or
jae
cld
in
jmp
cmc
add
cmp
jmp
icebp
ja
or
leave
jmp
xor
es
and
mov
pop
orl
dec
imul
mov
dec
jmp
add
pop
cli
pop
stos
inc
jmp
test
shlb
clc
sub
jp
pop
lret
xor
mov
incl
scas
lret
add
pop
shlb
xor
add
and
adc
js
movsb
and
mov
movsb
cmp
fs
cwtl
jmp
mov
icebp
or
repnz
xchg
pop
test
dec
sbb
jmp
nop
mov
loop
and
rcll
mov
aam
in
inc
lds
addl
outsl
jmp
pop
mov
cmc
lods
or
pop
add
and
cli
ret
es
clc
sub
add
jb
sub
jp
push
daa
adc
sarb
sub
sbb
sti
xchg
jmp
inc
repz
mov
scas
jmp
daa
enter
add
jbe
and
push
test
mov
and
fwait
ret
shr
jl
sbb
push
icebp
jmp
xor
push
push
and
dec
test
mov
sbb
cmp
and
xor
dec
sahf
push
and
scas
pop
enter
push
ss
mov
jmp
js
pop
jno
mov
out
cmp
movsl
addr16
pop
jge
lods
ljmp
inc
movsb
int3
xchg
sti
sbb
xor
and
mov
das
pop
sub
adc
pop
mov
fucomi
dec
fsubrl
mov
jp
cwtl
jmp
add
jae
sbb
or
iretw
pop
ljmp
push
mov
xor
inc
adc
repnz
je
sti
in
decb
jmp
cmp
jmp
das
and
jmp
pusha
mov
mov
push
rorb
icebp
cltd
pop
pop
sub
push
test
jle
cmc
dec
adc
cmp
dec
decb
bound
int
loope
cmp
cmp
mov
sti
fwait
insb
sti
push
push
jnp
jl
sub
mov
add
xor
add
mov
sahf
rcrl
out
jp
jmp
dec
and
xchg
sub
jmp
mov
adc
jmp
dec
js
cs
lods
inc
mov
jmp
cmp
stos
imul
lods
push
cmpsb
pop
adc
sub
push
sarb
lock
jns
push
sub
dec
mov
adc
mov
xor
mov
movsb
sahf
add
pusha
or
pop
in
les
push
int
inc
int3
xchg
push
and
fidivs
cmp
mov
adc
stos
dec
mov
jmp
iret
ret
dec
mov
je
xchg
aam
dec
loope
inc
test
sub
in
dec
sbb
add
cmc
jmp
gs
push
fstpt
lcall
and
jl
lods
add
leave
aaa
fimull
jmp
mov
sbb
dec
outsb
jns
not
adc
bound
imul
jg
jge
out
sbb
pop
push
adc
les
insl
xchg
mov
jbe
cmp
jmp
push
mov
and
cmc
fcmovb
jmp
push
push
jmp
xor
into
push
sub
scas
add
aaa
js
test
inc
jmp
les
cs
jecxz
jmp
ds
out
imul
add
shr
aaa
es
loopne
dec
daa
jmp
lods
xchg
mov
sarl
sahf
ss
and
push
pushf
or
mov
lods
inc
xchg
sahf
in
jmp
inc
pusha
dec
data16
mov
mov
js
lea
push
insb
add
push
xchg
faddp
jmp
ss
repnz
fisttpl
mov
daa
push
sbb
mov
ja
in
xchg
jmp
push
bound
cmp
push
push
data16
sar
cmp
into
shlb
std
xchg
push
sub
cmp
rclb
lock
jmp
enter
xor
je
lahf
andb
in
lcall
adc
call
aas
inc
les
fistl
jmp
xchg
mov
jge
rcll
jmp
fnstcw
push
jmp
push
out
stc
int
pop
xchg
cmpsl
cmc
mov
out
add
loopne
mov
adc
frstor
fdivrl
cwtl
xadd
pop
enter
jle
xchg
and
insl
adc
pop
cmp
nop
adc
push
add
jmp
ret
lcall
xlat
das
pop
sar
jle
popa
lods
std
fs
or
xchg
lods
add
imul
into
sbb
jmp
outsl
add
jbe
out
xchg
outsb
in
cmp
iret
rdmsr
cld
mov
dec
inc
sub
push
addr16
xor
sti
fistpl
icebp
jnp
div
inc
lcall
ljmp
scas
in
and
repnz
xchg
sbb
jb
and
jmp
ret
mov
dec
hlt
into
push
lods
aaa
xchg
jg
inc
jmp
divb
mov
insl
pusha
adc
xchg
outsb
cmp
mov
jnp
jmp
inc
iret
mov
pop
inc
sub
aam
sbb
and
lcall
test
inc
jmp
adc
xchg
lods
sbb
gs
lds
mov
shrb
jl
inc
jmp
sbb
mov
outsl
sub
mov
xor
sub
jecxz
jmp
lock
lods
inc
xor
movsb
lcall
mov
or
and
int3
jns
test
lret
adc
dec
jmp
loope
inc
sub
lcall
add
std
clc
jmp
pop
fistps
lods
sti
sub
push
imulb
mov
cmc
push
cmpsl
es
dec
jmp
fildll
cmp
mov
cmpsl
xchg
jmp
add
jg
lods
mov
jmp
fwait
cmc
lcall
push
je
lds
mov
stos
sbb
jmp
xchg
fists
sub
sbb
mov
push
fcomi
andl
sub
int3
jmp
insb
xor
cmp
test
jmp
orl
cwtl
imul
scas
divb
sub
into
adc
jmp
daa
test
scas
jmp
push
enter
cmp
or
lahf
add
sub
stos
cltd
adc
and
mov
sbb
dec
out
jmp
add
sbb
xchg
cltd
or
loopne
outsl
getsec
jle
iret
sbb
mov
or
dec
mov
xchg
enter
loop
shlb
imul
xchg
jmp
jp
adc
add
mov
into
xorb
imul
and
scas
or
ds
mov
sbb
xchg
dec
jmp
cs
fisubs
xchg
das
cmp
sbb
stos
jnp
add
and
std
shr
mov
and
mov
jmp
pop
mov
mov
test
aam
inc
pop
dec
popa
sbb
jmp
bnd
jp
push
push
jae
sub
inc
in
pusha
scas
pop
jg
sbb
jnp
mov
js
and
jle
repz
add
add
sub
mov
and
jecxz
cmc
ret
xchg
lea
jmp
test
dec
stos
fistps
cmp
adc
dec
ficompl
sbb
xchg
aam
jbe
sub
cmpsl
and
in
xchg
subb
adc
and
xor
push
sub
iret
jmp
cmc
pop
cwtl
movsb
scas
mov
mov
or
sbb
pop
imul
lret
ja
sub
or
lret
sub
test
jbe
std
mov
pop
mov
mov
and
and
loop
divb
mov
jmp
and
xchg
mov
or
sarb
jecxz
push
out
mov
fiaddl
jp
scas
or
push
or
adc
jbe
mov
popa
xorb
sbb
mov
flds
jmp
js
inc
push
push
mov
adc
sub
pushf
add
call
loop
cmp
pop
stos
push
xchg
mov
lock
ljmp
jp
arpl
lods
push
mov
mov
int3
scas
testb
cmp
cmp
xlat
fucomp
jnp
push
ljmp
ret
pushw
push
pop
xor
lods
adc
and
sahf
lods
in
test
fiaddl
push
adc
jge
or
mov
sub
and
daa
mov
jp
sub
clc
mov
add
fsubl
jmp
js
adc
adc
scas
jg
cmp
in
dec
outsb
inc
sub
clc
push
jecxz
jmp
rcrl
mov
jb
outsl
cmp
or
insb
movsb
jmp
cld
mov
inc
leave
loop
sub
testl
or
or
jo
sarl
jmp
rolb
fistpll
iret
push
jmp
popa
jnp
or
sbb
addr16
xchg
inc
fwait
pop
les
lods
outsb
jne
int
pop
enter
pop
or
mov
jg
rorb
ljmp
insb
imul
mov
or
das
xlat
mov
jno
lods
ffree
daa
insb
cs
mov
addr16
push
mov
pushf
scas
int3
sbb
inc
fst
jmp
loopne
xchg
mov
sbb
cmpsb
out
outsl
adc
inc
push
in
repnz
jbe
add
mov
insl
add
inc
inc
jmp
adc
jmp
movsl
in
xchg
or
xchg
mov
jp
push
daa
push
outsb
fdivs
cs
inc
dec
lcall
mov
sub
jmp
mov
ficomps
jmp
push
jne
scas
test
sub
or
push
fwait
xchg
aam
and
daa
cld
fcoml
ljmp
shll
mov
sub
adc
imull
jmp
push
pop
fildll
pop
jmp
lods
mov
shr
test
dec
jp
adc
jmp
fs
daa
bound
push
pop
imul
push
jmp
jbe
divl
std
lds
sub
jle
mov
inc
fsubrp
push
popa
sub
insb
add
cld
and
jmp
out
jne
xlat
cmp
lods
repz
xor
mov
loopne
inc
sbb
adc
pop
jmp
xchg
sbb
mov
dec
sub
add
sti
sarb
icebp
lods
sub
int
sub
xchg
jmp
or
jns
icebp
decb
sub
sub
ss
add
jmp
mov
nop
push
inc
mov
push
imul
mov
into
adc
xchg
jmp
stc
mov
jg
adc
sub
fsubrs
dec
scas
bound
cmp
xlat
dec
and
or
jmp
les
sub
subl
and
je
jmp
iret
push
mov
lds
ret
xchg
cwtl
dec
add
add
sbb
mov
mov
repz
flds
and
and
imul
push
enter
dec
insb
or
push
bound
cltd
lret
jp
mull
cmp
ret
and
shrl
sahf
push
sti
andl
add
and
imul
xchg
sub
mov
jae
mov
mov
lods
jmp
adc
sbb
dec
cmp
adc
ja
xor
jmp
int
lcall
mov
mov
jmp
and
xor
pop
lods
orb
inc
jmp
dec
mov
leave
das
scas
jp
pusha
repnz
pop
mov
sub
jmp
jns
xor
mov
imul
mov
inc
or
dec
pusha
jns
jmp
iret
xorl
xor
jmp
rcrb
cmp
dec
or
cmp
inc
adc
in
cli
repnz
sbb
movsb
jmp
sbb
push
adc
jmp
outsb
xor
jg
jmp
decl
sub
pop
pop
jmp
lock
sub
adc
std
cmp
cmp
xrelease
jns
sti
or
jnp
outsb
cmp
popa
pop
mov
popl
sub
xchg
jmp
aam
cmpsb
bound
jp
cmp
push
les
dec
sub
push
stos
push
add
jmp
fwait
xchg
and
fsubrl
std
jmp
outsb
pop
arpl
loope
scas
shll
ljmp
scas
inc
dec
adc
lret
dec
incb
mov
fdivrl
adc
sbb
and
jb
xor
sub
add
fdivr
jmp
movsl
dec
mov
sub
aas
add
pop
dec
jmp
or
std
jns
mov
pushf
adc
xchg
mov
add
pop
pop
or
andb
adc
incl
push
ja
lcall
lahf
mov
js
cmp
out
add
sbb
jnp
jno
scas
jmp
xchg
mov
mov
stc
jno
cli
or
mov
mov
sti
pop
dec
pushf
xchg
mov
jmp
test
sbb
cmpsl
sti
jmp
push
lods
dec
fdivs
js
dec
pop
movb
mov
frstor
nop
mov
mov
jmp
jb
test
sbb
ffree
sub
or
jmp
push
and
iret
ficoml
sahf
xchg
mov
mov
mov
mov
push
adc
adc
ja
rcrl
lret
sub
lds
stos
add
popa
js
or
sub
hlt
std
les
or
cmp
sarb
lahf
mov
dec
inc
jle
bound
or
mov
mov
arpl
add
xor
mov
lock
push
jmp
mov
bound
mov
int3
inc
aas
pusha
aad
add
sti
xor
push
push
scas
and
mov
les
repz
adc
add
cld
sti
bnd
gs
icebp
sub
inc
clc
test
ljmp
sbb
outsb
or
inc
or
fstpl
test
lods
clc
in
addr16
and
and
jno
mov
pop
push
sti
insl
enter
daa
pushf
jmp
arpl
rcll
testb
lods
and
adc
loope
lret
push
jmp
jno
subl
data16
dec
push
test
scas
and
pop
fwait
sti
push
or
gs
jae
icebp
mov
sti
hlt
sarl
jmp
jo
sahf
pop
ss
xchg
mov
js
sbb
inc
inc
or
in
add
adc
cmpsl
lret
popf
push
cmp
faddl
lods
in
push
ljmp
cmp
mov
es
js
orl
and
dec
and
lea
setle
xchg
inc
jmp
mov
ljmp
mov
fwait
pop
adc
push
rorb
shl
orl
and
jmp
mov
in
lock
popf
adc
cmp
mov
mov
and
push
cli
loopne
jmp
lods
sub
push
lods
imul
mov
clc
aas
mov
loop
mov
sbb
jmp
fcoms
jmp
inc
iret
lcall
lock
jmp
cli
mov
xor
sbb
cmp
dec
scas
mov
clc
jmp
std
cmpsb
lcall
sbb
imul
adcl
subl
push
push
sub
push
xchg
inc
pop
xchg
sbb
jns
xor
into
arpl
inc
xlat
fcomps
ret
int3
sbb
adc
jmp
rorb
or
jmp
xchg
mov
jmp
jp
es
test
das
add
inc
fst
xchg
cli
adc
imul
add
xor
loopne
ret
orl
adc
stos
mov
jnp
pop
sti
xor
cmc
jge
push
loope
or
sbb
sub
jmp
mov
shr
cmc
mov
add
mov
jmp
sarb
call
jge
sar
and
push
in
leavew
mov
lods
dec
xchg
push
int3
and
test
and
lret
lea
jmp
lahf
ds
nop
aam
cmp
outsb
in
jae
jle
dec
cmc
jmp
mov
outsl
and
dec
jmp
xchg
popl
and
out
xor
fnsave
fucomip
aaa
fistpl
pop
pushw
cmc
push
dec
fisubrs
out
jmp
cwtl
xchg
divl
adc
xchg
jecxz
lret
push
push
pop
jmp
pop
in
test
jmp
daa
movsl
ss
sbb
mov
rcrl
xor
inc
jmp
and
stos
add
jmp
pop
in
pop
inc
xchg
sub
push
mov
repz
test
adc
lods
push
pop
add
xor
and
std
jmp
sbb
mov
jecxz
mov
pop
mov
test
les
mov
dec
and
and
cmpsl
lret
rolb
jbe
jne
sub
shl
das
test
sub
mov
sbb
loop
lods
mov
pop
and
adc
je
add
xchg
pop
jmp
adc
sbb
ret
adc
lds
mov
sti
mov
ds
fdivrl
jle
aaa
lret
frstor
lods
jmp
in
adc
loopne
pop
sbb
xor
and
lods
adc
mov
rcrl
add
popa
lods
xor
cmp
mov
out
push
loop
sbb
loope
sub
imul
andl
mov
mov
or
jmp
sub
out
fsubrl
xchg
mov
sub
jae
icebp
dec
jmp
pop
lods
mov
sub
pop
popa
aaa
mov
jmp
jne
lock
insl
inc
gs
sarl
sbb
lret
mov
mov
dec
imul
ljmp
mov
xchg
faddl
mov
push
sbb
test
dec
inc
lods
push
sub
gs
addr16
scas
push
jns
daa
repnz
test
lods
sbb
insb
add
imul
pushf
dec
cmp
aaa
popa
test
xchg
stos
inc
gs
js
push
push
roll
inc
mov
cmp
sub
out
fisttps
jbe
add
xor
jmp
mov
loope
jmp
sub
dec
add
or
mov
sbb
mov
mov
or
sahf
mov
sti
in
mov
xchg
mov
ret
push
enter
pop
mov
jge
jmp
mov
arpl
and
mov
pushf
sahf
pop
fidivrs
das
data16
rcrb
loop
push
sbbb
xor
jns
xlat
adc
cmp
or
xor
loopne
dec
xlat
jmp
lods
dec
notb
lahf
xor
lea
jmp
jge
lret
cld
mov
pop
ds
movsb
pop
push
add
jmp
test
push
xor
jno
stos
sbb
std
addr16
jmp
mov
pop
inc
jmp
xchg
mov
lcall
lea
pusha
ljmp
and
ret
xchg
mov
faddl
imul
in
xchg
push
mov
sti
sub
iret
leave
jne
jmp
std
mov
cltd
jmp
imul
iret
add
insb
jmp
or
and
and
or
mov
imul
dec
add
sti
cli
sti
subl
sbb
push
scas
outsb
sub
jae
popa
jno
dec
sbb
push
stos
cmpb
lods
cmp
jmp
scas
mov
pop
lods
notb
cld
shll
cmp
fisttpl
hlt
mov
jge
inc
pop
pop
push
in
push
lcall
pop
stos
or
push
orb
push
and
dec
mov
inc
add
pop
clc
mov
flds
sub
pop
mov
mov
les
dec
outsl
negb
and
push
dec
in
inc
jp
test
mov
mov
xchg
sbb
mov
movsb
jl
jmp
aas
jge
mov
dec
jmp
sub
nop
jmp
jg
add
pop
jbe
fistps
add
sub
and
push
sti
popf
ljmp
in
cmpsl
jb
movsl
adc
pop
and
sub
jmp
sbb
push
jmp
mov
pusha
aam
jl
mov
fsubr
pop
sub
inc
aaa
jmp
and
das
enter
jmp
cmpsb
and
lcall
push
shrb
mov
scas
xor
sarl
sbb
adc
xor
dec
mov
out
es
fsubl
loopne
jb
js
jg
jmp
dec
insb
cli
cmp
add
sahf
jmp
cmp
xchg
int3
in
jo
sub
outsb
shll
pushl
int
leave
cwtl
lock
mov
jmp
xchg
loop
iret
adc
int
mov
sub
jmp
mov
push
in
mov
int3
pop
je
pop
fdivs
aad
iret
adc
add
sbbb
outsl
lods
outsb
mov
push
xor
dec
fs
lcall
jmp
push
fstps
sub
repz
and
sbb
dec
fwait
mov
repnz
jmp
addl
adc
jne
sub
jle
sbb
jmp
int3
adc
sub
inc
bound
jmp
add
sahf
lret
jne
pop
das
jmp
es
scas
sub
scas
jmp
xor
decl
xchg
xchg
inc
mov
jmp
scas
rcrl
call
mov
mov
xchg
test
leave
jmp
movl
or
int
mull
std
insb
inc
mov
pushf
jmp
dec
adc
mov
or
fnstenv
pop
cli
mov
sti
push
pop
jnp
and
pop
out
dec
mov
sti
aas
nop
call
add
outsb
xchg
or
std
jmp
sub
xor
push
pop
jmp
inc
inc
call
sub
outsb
mov
icebp
fwait
sbb
ljmp
jmp
fs
mov
mov
cmp
mov
mov
push
push
mov
jbe
aas
jnp
ret
cwtl
stos
cli
add
jmp
sahf
mov
mov
imul
sti
roll
test
mov
jmp
lcall
jmp
call
lods
clc
jmp
and
sarb
sub
enter
mov
cmp
iret
jmp
rclb
ds
push
jmp
loope
negb
xor
sbb
pop
lret
or
jmp
sbb
pop
jmp
adc
pop
cmpsl
xlat
leave
mov
xor
push
mov
cmc
fdivr
mov
sbb
xor
xlat
dec
xchg
cmp
js
imul
push
movsb
adc
dec
insl
in
xchg
or
mov
lds
test
cmp
mov
xor
jne
fwait
xor
shrl
int3
mov
dec
aad
std
add
sub
repnz
movsb
and
cmp
into
xchg
jns
mov
xorl
ljmp
sbb
inc
int3
in
jmp
into
scas
add
outsb
cmp
inc
fisttps
lahf
mov
lds
push
into
sbb
xor
popf
lea
mov
xchg
hlt
pop
cmpsl
sub
add
les
jbe
mov
mov
inc
xchg
and
jmp
sub
dec
sbb
pop
ja
imul
jmp
loop
xchg
nop
jne
cmpsl
mov
jbe
or
xchg
pop
in
cmp
mov
andb
cmp
mov
jns
and
push
or
sarl
or
aad
jmp
cltd
push
incb
sub
clc
push
mov
pop
sbb
lods
data16
sbb
and
sbb
mov
in
mov
stos
pop
cmpsb
lret
cmp
daa
cmp
outsb
jmp
int
dec
je
movsb
jmp
adc
push
push
movsl
int3
outsb
scas
add
xchg
xor
jne
shlb
jb
lods
jle
push
pusha
or
add
jns
decl
and
jge
jmp
cmp
pop
lea
out
xchg
or
jmp
jg
mov
in
dec
inc
leave
jb
mov
xchg
int3
cli
jmp
loopne
and
fcoml
jmp
imul
popl
leave
jmp
mov
pop
sbb
or
outsb
dec
inc
je
cmpsb
in
adc
roll
sub
jmp
add
xor
push
mov
jg
lea
push
sub
or
mov
lods
pop
inc
inc
lods
not
out
mov
cmp
sub
int
dec
pop
pop
or
out
cmc
clc
rcrb
or
out
ljmp
cmp
daa
sub
lods
repnz
mov
sub
xchg
jmp
or
popa
les
aad
and
mov
iret
call
or
loopne
and
stos
inc
jmp
adc
ss
cmp
jmp
les
xchg
stos
sbb
push
cmp
push
subb
fimuls
inc
cld
sub
ret
push
jmp
into
jns
scas
mov
or
mov
es
pushf
xor
arpl
mov
or
std
xlat
or
mov
dec
xchg
loopne
hlt
cmp
dec
ljmp
xchg
jl
xor
sub
xchg
pop
les
shrb
es
test
int3
sbb
dec
outsl
adc
jmp
mov
xchg
inc
cmc
jmp
lret
pop
mov
test
jae
add
test
adc
ud2
jmp
push
mov
and
add
xor
mov
ret
dec
mov
out
imul
insb
dec
sti
pop
jae
jmp
mov
pop
inc
popf
mov
or
mov
dec
jmp
addr16
add
test
test
jo
into
jmp
inc
sub
cmp
xor
xchg
and
xor
nop
fnstcw
push
push
jmp
fs
aaa
in
jo
adc
pusha
adc
mov
push
insb
daa
push
cmp
adc
xlat
jnp
out
in
inc
in
add
movsl
loope
mov
sbb
xchg
pop
sub
out
test
pop
and
pop
pusha
repz
cmp
subb
fists
push
mov
cmp
sub
jmp
popa
mov
ss
mov
inc
xor
and
shlb
int
mov
sbb
movsb
jmp
ror
and
inc
bswap
fsubr
fadds
sbb
mov
jmp
sub
cmpsb
jno
push
pop
jmp
jg
test
sbb
aas
push
pop
sbb
stos
fldz
test
jmp
xor
and
push
dec
daa
enter
push
sbb
sub
aad
or
mov
jae
mov
inc
arpl
pushf
ljmp
ja
nop
dec
leave
sbb
push
xor
lods
cmp
call
jmp
int
or
xor
jmp
inc
xchg
push
decb
xchg
jnp
out
mov
adc
mov
les
push
shr
push
add
enter
fldt
sbb
jb
jl
jb
sbb
mov
scas
test
scas
or
int
push
dec
imul
test
push
jmp
hlt
xor
lods
imul
xor
or
mov
mov
add
rcrl
subb
aam
jmp
mov
pop
adc
movl
jp
lret
xchg
fs
ss
lods
hlt
ret
loope
lcall
cmp
sub
or
sub
dec
jmp
fwait
stc
mov
cmp
push
adc
lea
mov
or
jmp
add
mov
push
lock
sti
mov
xchg
cmp
mov
inc
call
jmp
pop
inc
push
add
bound
xor
sti
out
add
pop
add
add
sbb
out
push
lahf
fcomps
inc
shrb
jge
cmpsl
mov
pop
out
jmp
dec
adc
jmp
cmp
arpl
bound
repnz
pop
push
mov
jmp
fnstenv
or
adc
scas
je
fsubrl
jns
dec
jmp
out
out
xor
sarb
es
push
mov
inc
das
pop
call
rcr
jmp
fdivrl
and
fwait
fdivs
sbb
in
jmp
sbb
leave
popf
mov
aad
lcall
xchg
sbb
add
in
daa
add
scas
addl
ret
ficoml
in
push
jmp
or
pop
es
test
out
xchg
mov
jmp
test
pop
pop
mov
jo
push
sbb
cmc
pop
ja
mov
jle
jnp
sub
adc
jl
int
adc
les
and
popa
call
movsl
jmp
mov
lods
push
jo
hlt
lods
mov
sbb
cmpsb
adc
sub
mov
pop
arpl
call
imul
dec
fwait
pop
sub
aaa
test
push
out
je
mov
sub
cmc
jge
lods
xor
mov
jmp
ds
sbb
rcl
es
sub
into
test
inc
and
pop
std
jmp
jne
or
push
and
jbe
sti
pushf
jmp
or
cmp
mov
xor
inc
or
inc
jnp
jmp
cmp
outsl
inc
arpl
lods
incl
test
pop
int3
repnz
jmp
repz
cmp
sub
push
push
pop
adc
enter
hlt
xchg
in
ss
jbe
xor
and
pop
lret
cmc
dec
adc
sahf
xor
xchg
lock
mov
inc
jmp
cmp
call
jmp
fnstcw
sarl
arpl
hlt
cmp
inc
jmp
je
push
jne
pop
add
movsl
sub
outsb
mov
xor
xor
cmp
test
xchg
ret
pop
daa
movsl
push
push
jmp
sub
cmpsb
xor
cmp
mov
jle
stc
incl
aaa
in
jmp
mov
jge
jmp
mov
sub
jmp
sbb
mov
jmp
or
adc
cmp
cmp
mov
dec
or
pop
adc
dec
push
add
in
or
lods
sub
or
dec
pop
or
sarb
dec
ljmp
push
cmp
sub
sub
dec
outsb
push
fsubr
outsb
xchg
jno
test
clc
filds
jmp
fs
mov
jge
loope
sub
xor
inc
sbb
fsub
lods
mov
push
pop
cmp
cld
jmp
pop
sub
and
push
mov
cmovbe
xchg
add
dec
adc
lods
adc
jl
flds
loope
mov
jg
movsb
imul
movsl
es
loop
lret
push
in
ret
sti
mov
cmp
mov
movsl
repnz
into
jmp
or
pop
scas
lret
scas
jmp
sub
sub
dec
movsl
enter
not
jmp
and
movsb
mov
cmp
hlt
or
in
cld
xor
loop
out
lods
iret
xchg
imul
arpl
pop
jmp
xor
std
aad
push
mov
je
sbb
jno
pop
or
pop
jmp
bound
cmp
jo
andl
out
cmp
inc
cmp
movsl
jnp
add
inc
sbb
popa
push
ljmp
mov
insl
mov
jl
imul
add
push
cmp
mov
inc
or
mov
sub
mov
add
das
sbb
mov
dec
xor
jmp
push
inc
mov
add
cmp
mov
mov
inc
cli
sarl
das
in
mov
jge
or
fldcw
jmp
xchg
por
call
sbb
adc
sbb
add
sub
jmp
scas
dec
and
fisubs
movsb
js
cli
icebp
inc
lock
out
imul
cmp
lahf
push
adc
and
push
adc
mov
mov
dec
shrb
sub
xchg
and
mul
cmp
sub
fwait
and
rclb
push
xchg
jmp
or
xchg
cmp
inc
stos
fldenv
and
inc
mov
lods
sub
paddq
dec
sbb
jge
repnz
mov
mov
and
test
sbb
out
mov
ret
mov
faddp
notb
les
jmp
scas
mov
enter
cmc
mov
rcrb
jp
or
test
mov
xchg
lahf
cmp
xchg
sti
cmp
fwait
jmp
ds
jmp
xchg
int3
adc
clc
add
loop
push
cmpb
mov
pop
or
jle
or
lods
jo
lods
pusha
and
les
stc
cmp
mov
dec
jmp
stos
loop
inc
mov
jmp
pop
fwait
inc
dec
lea
imul
repz
insl
sti
sti
push
mov
out
push
and
or
mov
jl
sbb
fsubrl
xor
add
push
test
adc
and
mov
cmp
inc
xchg
adc
jmp
dec
shll
in
movsl
push
hlt
jmp
add
push
pop
dec
mov
lret
test
adc
pop
jmp
lahf
insl
pop
cmc
or
inc
xchg
add
push
jmp
and
inc
lods
xchg
bound
dec
pop
adcl
and
dec
adc
hlt
sbb
add
sub
loopne
mov
lods
add
push
inc
adc
aam
imul
and
sbb
subl
out
push
ret
inc
daa
leave
out
pop
je
rorb
push
jmp
scas
in
mov
xchg
jmp
and
jno
dec
lods
cld
or
stos
add
add
jmp
mov
aas
xchg
pop
inc
jmp
shll
sti
xchg
jmp
mov
adc
int3
and
nop
jmp
xor
cwtl
dec
scas
ret
in
scas
adc
sub
les
fcom
hlt
inc
push
and
mov
not
push
lods
outsl
xor
or
push
jl
cmp
cmc
fwait
popf
fbstp
cmp
outsb
data16
add
insb
into
cmpsb
jmp
or
jmp
xor
xchg
mov
jnp
mov
rorb
jmp
inc
jne
xlat
sbb
out
jmp
outsb
pop
push
mov
or
daa
cmp
push
movsb
sti
outsb
mov
sbb
sbb
push
mov
popf
jmp
popa
or
jmp
seto
sub
pop
les
xchg
testl
ret
push
xchg
jmp
cmpsl
and
pop
fwait
jbe
mov
mov
in
aas
sub
cltd
loopne
and
les
sbbl
pop
and
jmp
loop
or
sub
mov
mov
xchg
mov
and
mov
popf
mov
jmp
push
pop
xchg
push
jl
jmp
cmpsb
int3
sbb
jmp
enter
add
jb
pop
leave
dec
test
jo
mov
scas
ss
adc
or
push
pop
lret
rolb
pop
orb
test
repz
rclb
xor
sbb
add
test
add
jmp
xchg
popf
xchg
fcom
popa
outsb
in
mov
idiv
in
js
in
movsb
lods
mov
sbb
sbb
imul
jp
xchg
cmpsl
dec
adc
imul
pop
flds
movsl
cltd
call
push
outsl
or
mov
adc
jmp
and
cmp
xchg
mov
lahf
jae
adc
sbb
xchg
mov
push
lcall
repnz
cmpsl
dec
repz
insl
sti
int
ljmp
mov
dec
movntps
add
adc
ror
push
mov
or
mov
mov
jle
mov
sbb
cs
out
adc
lods
pop
xor
sbb
add
aas
xchg
mov
mov
out
adc
lcall
in
pop
popa
cmp
pop
cbtw
andb
add
ss
jmp
pop
fidivl
jmp
addr16
in
sub
mov
pop
add
std
in
mov
in
mov
movsl
xor
int
mov
jmp
xchg
jno
sub
cmp
and
and
push
add
out
jecxz
inc
lds
data16
pop
jae
rolb
mov
jmp
inc
aas
add
sbb
rorl
jg
xchg
in
scas
gs
jmp
andb
arpl
ljmp
clc
push
xchg
jmp
mov
je
xchg
out
int
movsb
or
xchg
mov
xchg
pop
ljmp
mov
outsb
mov
jge
out
mov
push
movsb
push
mov
jg
inc
xor
sahf
push
jnp
sbb
sub
xorb
sub
xchg
popa
jmp
cltd
ret
and
inc
arpl
jmp
dec
sub
jmp
dec
popa
or
inc
lods
sub
in
mov
push
cwtl
mov
stos
sbb
or
add
fsubrl
ja
int3
lods
inc
inc
sti
ficoms
and
push
fsubr
lcall
add
ret
mov
pop
stos
mov
jmp
enter
cmc
adc
lods
cmp
mov
push
enter
scas
ja
fildll
scas
addr16
or
pop
popa
outsl
mov
jne
ss
pop
imul
sub
out
lock
push
out
repnz
shrl
xchg
cmp
adc
cltd
sbb
jmp
in
xor
lods
sbb
jg
and
add
out
jmp
rcrb
mov
pop
gs
lods
cmc
xor
add
mov
and
adc
xor
push
loope
jmp
pop
cmc
test
sub
or
aad
pop
push
outsl
push
sbb
sbb
or
xor
pusha
stc
adc
pop
icebp
shl
rol
jmp
xchg
sbb
mov
mov
jb
cld
stc
push
inc
jmp
push
and
jae
jmp
sbb
sub
jg
push
add
in
jmp
test
jmp
lret
fistpll
pop
jmp
and
lcall
inc
loopne
dec
or
add
xor
jmp
xchg
addl
inc
pop
jmp
fdivl
outsb
inc
pop
sub
dec
push
inc
enter
ja
adc
aam
into
pop
outsb
sbb
mov
and
push
xchg
adc
loope
dec
ror
mov
mov
or
rorl
mov
in
jp
add
jns
dec
jmp
and
jmp
push
insb
sahf
push
dec
inc
jmp
or
enter
inc
cmpsl
or
pop
fisubrs
mov
adc
lret
pop
js
push
jmp
mov
jmp
sub
pushf
orb
into
dec
add
out
jmp
dec
lock
or
jmp
icebp
add
hlt
lods
push
loope
shl
daa
mov
inc
adc
int
popw
imul
subl
sti
mov
mov
imul
pop
cli
icebp
jmp
and
jge
scas
mov
sbb
sbb
sti
mov
xchg
jmp
mov
xchg
pushf
arpl
inc
scas
pop
xor
sbb
icebp
out
fdivl
jmp
sahf
mov
enter
jmp
out
xchg
mov
or
in
je
es
or
dec
sahf
jmp
xchg
push
dec
and
and
jmp
sub
inc
loope
leave
jmp
xchg
in
add
imul
lods
add
mov
jb
fs
jmp
in
lret
fildll
mov
sahf
int3
and
jmp
push
adc
mov
xor
getsec
jmp
sahf
mov
pop
sub
out
dec
pop
cmp
cmpsl
pop
es
cltd
adc
scas
push
jae
mov
cmp
mov
stos
and
addr16
ret
jmp
sub
lock
cmc
sti
rcll
inc
or
sbb
or
mov
push
and
push
cmp
and
push
lcall
inc
sub
add
jbe
test
jmp
imul
ret
enter
adc
shrl
and
insb
gs
fldl
sbb
push
bound
dec
sub
or
out
subl
adc
jns
mov
sbb
xor
ds
pop
jo
scas
aad
jge
jmp
enter
mov
aas
mov
pop
jl
test
push
dec
sbbb
repz
insb
jmp
js
ja
insb
int3
fisubrl
mov
rcll
out
adc
xchg
cwtl
lret
icebp
dec
cmp
mov
jl
pop
adcl
je
imul
xor
and
cmc
scas
ret
and
sub
sbb
test
lahf
out
inc
roll
idivl
dec
scas
jns
inc
icebp
repz
stos
nop
pop
outsb
inc
shlb
and
jmp
ss
stos
xor
adc
call
jmp
adc
aad
add
sub
sbb
jb
push
cmp
sti
dec
lcall
fdivr
jmp
sub
clc
inc
es
lods
movsl
mov
sub
push
dec
jmp
dec
jae
push
in
jmp
mov
jge
mov
popf
jns
dec
mov
in
mov
adc
push
pop
insl
sub
js
movsl
inc
lods
jmp
pop
jno
pop
sub
sub
clc
loopne
mov
test
push
sbb
out
mov
push
lahf
ret
jmp
xchg
cwtl
and
adc
lea
dec
fists
sub
add
das
sti
cmp
sub
lods
lret
fs
dec
repz
push
ret
push
cmc
adc
pop
mov
popa
sub
mov
lock
inc
movsl
mov
int
jmp
jb,pn
jmp
shl
iret
cmp
adc
into
push
mov
adc
cs
sarl
data16
jecxz
sbb
jmp
xchg
jo
clc
jmp
cmp
jp
push
repnz
imul
sbb
pop
jmp
push
jns
mov
push
and
out
jl
sbb
out
mov
sarb
fldl
sbb
inc
jmp
inc
cli
outsl
xor
xlat
push
dec
stos
loopne
or
int3
jb
test
sbb
cmpl
adc
idivb
mov
rclb
repz
dec
add
and
mov
inc
pop
or
aam
data16
cmc
and
imul
mov
jo
pop
push
subb
sahf
cwtl
or
adc
jmp
stos
dec
lret
mov
xor
bound
in
les
js
add
dec
sub
add
jmp
lea
sub
cmp
mov
mov
insb
int3
and
aaa
jmp
mov
cltd
jns
fldpi
cmp
dec
loop
push
jg
roll
xchg
pop
jmp
fwait
xor
sbb
mov
dec
pop
push
sbb
dec
jns
inc
xchg
aam
inc
mov
in
mov
push
jno
fldt
movsl
pop
das
push
sub
gs
jmp
mov
ss
mov
jmp
shrl
cmp
sbb
fcomp
dec
or
ljmp
dec
aad
inc
imul
mov
or
mov
and
xor
shl
hlt
pop
add
xor
popf
sub
cmp
or
lret
add
mov
jmp
fstpt
lods
imul
adc
and
inc
icebp
sahf
imul
or
sti
add
int3
jmp
out
jg
adc
filds
xchg
mov
pop
lret
push
imul
jbe
inc
adc
inc
gs
es
sar
iret
ja
jne
mov
mov
loop
push
out
mov
mov
xchg
mov
cmp
movsb
sub
and
jns
jmp
aam
lcall
bndldx
stos
cmpsb
cli
mov
pop
dec
pop
mov
popa
sub
orl
cmp
sbb
in
jmp
mov
daa
jmp
loope
loop
push
mov
insb
jmp
pop
inc
jl
push
jecxz
jmp
jb
rol
fwait
push
cmc
sub
aaa
pop
mull
mov
and
aam
pop
stc
stos
sbb
cli
fsubrp
dec
test
arpl
out
rcl
icebp
push
cs
xorb
shr
jmp
cmc
mov
jmp
test
ljmp
pop
repnz
lods
cmc
je
pop
popa
lods
and
and
stos
div
enter
xchg
clc
arpl
out
jne
stos
mov
adc
jmp
lcall
jmp
or
call
dec
sbb
jbe
adc
cmpsl
cmp
std
fwait
ja
lds
fidivrl
jg
lods
mov
outsl
and
imul
xchg
lahf
jmp
jo
add
xchg
mov
and
jmp
ss
or
inc
add
loope
jnp
out
sub
aad
and
sbb
cs
lds
pop
adc
test
das
enter
je
mov
sar
cmp
jno
imul
sbb
mov
push
jmp
sbb
dec
rcll
jmp
xchg
jmp
hlt
lret
xchg
mov
jmp
inc
adc
lods
repnz
jmp
les
jmp
mov
outsb
jmp
mov
pop
mov
dec
leave
lods
jbe
mov
in
xchg
or
dec
popf
sbb
mov
hlt
sub
push
js
sub
pop
pop
lret
xor
mov
negb
shr
adc
ljmp
sbb
push
and
daa
mov
outsl
or
fidivl
mov
fs
pop
fldcw
sbb
in
test
jg
sbb
in
icebp
hlt
sub
scas
and
scas
xchg
jp
sarb
cmp
push
mov
cmp
jb
mulb
dec
rcrl
jmp
outsb
sbb
push
adc
add
inc
sbb
push
std
lds
mov
xor
sub
add
aam
bound
pop
pop
or
js
jmp
mov
jl
jmp
xor
xchg
out
loope
sub
aam
sbb
and
jmp
xrelease
jmp
shr
insb
movsl
ficoml
lods
adc
push
mov
add
nop
les
mov
out
lods
int
jle
adc
cmc
xchg
inc
scas
lods
jp
inc
popa
jmp
std
fdivl
cwtl
loope
test
pop
push
loopne
clc
int
xchg
cmpsb
hlt
or
push
inc
cld
int3
xor
aaa
mov
adc
jmp
mov
xchg
dec
jmp
data16
out
gs
mov
jmp
mov
or
or
jmp
ds
cltd
leave
lods
ffreep
jmp
mov
mov
jbe
xor
push
sbb
lods
jmp
or
mov
lret
cwtl
mov
hlt
or
jmp
or
fsubrs
ja
inc
jae
adc
mov
dec
sub
push
add
jle
sub
loop
or
sbb
push
lods
scas
jb
xor
xlat
mull
jbe
lret
cmp
das
sbb
aaa
adc
and
pusha
jle
jmp
xor
dec
ss
fwait
mov
insb
xor
sub
out
cltd
mov
aaa
adcl
lods
cmp
and
daa
jmp
mov
pop
push
and
lods
test
xchg
sub
push
jmp
dec
or
jmp
push
mov
add
fdiv
jmp
test
xor
jmp
rclb
imul
outsb
es
mov
jge
test
das
or
or
add
iret
sub
mov
int
repz
jp
jmp
sti
je
sub
jne
inc
xchg
outsb
lds
in
nop
dec
jmp
es
aas
jmp
sbb
xor
shr
xchg
xlat
mov
lods
or
jle
leave
stc
or
lahf
inc
insl
add
data16
jmp
popf
mov
mov
sbb
insl
ret
push
jmp
out
mov
or
scas
xlat
addr16
ret
mov
sub
pop
test
cmp
gs
mov
add
stc
jmp
sbb
stos
andl
cli
rcr
mov
lahf
jmp
mov
mov
scas
mov
aad
mov
push
cs
sbb
addl
xchg
aam
clc
and
push
xchg
jge
jae
jmp
les
dec
xchg
popa
or
pop
or
pop
filds
ja
jns
push
xlat
cli
out
cmpsb
loop
jmp
adc
dec
sbb
pcmpeqd
inc
fs
mov
or
inc
xchg
sub
sar
jmp
dec
sbb
out
push
je
cs
mov
push
jmp
loopne
lcall
add
data16
push
loop
clc
xor
dec
cmp
fldenv
push
cmpsb
or
mov
and
cmp
mov
bound
or
xor
cmp
push
es
in
pushl
mov
push
fcmovne
pop
or
or
sti
sbb
les
pop
jno
jmp
mov
iret
xchg
fsubr
cmpsb
pusha
add
or
jg
mov
push
push
shl
or
mov
leave
cmpsl
sbb
push
dec
push
ficoml
inc
std
loop
jmp
xor
scas
lods
loopne
pop
adc
pusha
dec
in
jmp
int3
cwtl
mov
cs
mov
dec
cmc
sub
outsl
lret
fst
int
fistl
call
flds
or
insl
test
mov
fists
pop
pop
out
mov
jmp
test
sub
div
lods
scas
fstl
pop
inc
push
adc
add
mov
outsb
sbb
iret
cmp
sub
sub
fwait
and
fucomi
addl
inc
push
fdivl
leave
cli
push
jne
aaa
call
sub
jle
stos
jmp
shrl
imul
outsb
push
movsl
jae
mov
repz
dec
mov
rcl
cmp
fstps
jle
jb
xor
xor
inc
mov
sub
insl
addr16
xchg
push
bnd
sbbb
xchg
jne
fucomi
mov
inc
add
push
xor
or
sub
lock
cmpsb
sub
mov
dec
cmpsl
sub
or
adc
hlt
imul
cmp
outsb
add
lret
stc
imull
imul
out
sti
adc
add
mov
xlat
fsubs
fisubl
fbstp
xor
adc
mov
xchg
ficompl
and
sub
sub
clc
and
mov
in
or
ret
outsb
out
jno
or
jmp
scas
pop
int3
iret
pop
enter
or
jmp
pop
in
cmp
lods
pushf
jb
jle
sti
xchg
js
dec
jne
jmp
ret
xchg
sbb
jmp
imull
mov
cmp
jmp
es
movsl
shll
in
mov
sub
sub
sub
orl
add
add
jge
jl
pop
push
jmp
push
mov
ss
cmp
add
sub
lret
fld
std
mov
lods
inc
jnp
rcrl
dec
jne
gs
outsb
cmp
and
sub
pop
push
xor
jne
out
fxch
in
jb
add
popf
lods
repz
pop
pop
shr
mov
jo
fs
insb
dec
or
sbb
rorl
inc
idiv
mov
fwait
jns
decl
daa
shrl
mov
adc
jmp
lahf
mov
arpl
jo
jmp
loop
push
mov
push
cld
test
inc
inc
js
pop
or
and
add
mov
testb
jmp
and
hlt
loope
ja
or
adc
dec
jns
test
or
add
cmc
jmp
dec
dec
iret
or
and
jns
adc
out
lods
adc
int3
fucom
jmp
out
lcall
dec
jg
jp
add
jmp
sub
xchg
lods
and
or
jne
jecxz
dec
scas
xlat
xchg
sub
pushf
sbb
fstpt
rorb
imul
adc
movb
jmp
fnstsw
xor
aaa
mov
pop
mov
bnd
addr16
mov
add
pop
xchg
sub
test
mov
stc
arpl
lods
fcomp
jg
ljmp
gs
les
stos
imul
rolb
sbb
adc
xchg
sbb
xchg
dec
jmp
in
test
adc
xor
nop
dec
pop
test
jo
jmp
or
jns
jmp
repnz
mov
sub
pop
ja
enter
mov
sahf
jnp
inc
shrl
pop
and
pop
and
mov
cmp
lock
jp
jmp
movsb
cmp
cs
iret
sbb
dec
or
add
fs
jno
in
push
mov
fisubrs
or
jmp
pop
jp
xor
dec
shrb
mov
ficomps
lods
xchg
and
out
scas
outsl
adc
mov
and
inc
cli
insl
std
cmp
int3
lods
or
lods
jge
or
or
sbb
push
push
sub
push
sub
js
and
inc
jmp
sub
mov
jnp
popf
jmp
int3
jae
sbb
out
into
pusha
inc
outsb
sub
pop
lods
fucomp
adc
std
add
jmp
cmp
dec
inc
addl
mov
add
sbb
test
mov
dec
outsl
jge
xchg
dec
sbb
cmpxchg
sahf
aam
in
inc
cmp
jb
or
pop
jge
xlat
add
imull
adc
inc
loope
loop
add
fisttpl
or
sbb
outsl
inc
test
jmp
stc
fsub
sarl
jmp
pop
inc
add
or
mov
and
sub
sbb
ret
inc
insb
dec
inc
cli
cmpsb
ja
add
jmp
int3
jmp
fldt
lods
loopne
in
repz
xor
ret
shlb
jo
mov
imul
aam
mov
sub
mov
addr16
lret
decb
jmp
cmp
sub
adc
push
add
scas
in
mov
jmp
test
mov
movsb
cmp
and
inc
in
lods
jg
es
dec
and
jb
stos
sub
sub
fildl
jmp
dec
mov
xor
rorl
rolb
lods
xlat
sbb
jmp
jmp
add
movsb
cltd
fsub
lods
neg
jne
cmpb
shr
movsb
mov
cmpsl
jmp
or
repz
std
pop
sub
jmp
in
and
pop
xor
add
mov
xchg
cltd
test
dec
jmp
mov
lods
mov
into
daa
lods
sbb
adc
les
jns
sbb
imul
xlat
push
mov
out
pop
push
or
xchg
jmp
scas
repz
xor
inc
scas
nop
inc
cltd
dec
xor
insb
mov
jo
dec
lods
jmp
mov
jmp
aam
adc
mov
jb
imul
mov
int
fwait
sbb
jmp
dec
sbb
push
sub
xchg
jmp
orb
dec
jns
jmp
fs
and
in
xor
jmp
aam
mov
cltd
mov
sub
test
fildl
mov
jg
mov
jmp
or
int
or
or
dec
roll
jbe
mov
bnd
pop
jnp
and
test
cmp
pop
jmp
adc
out
data16
sbb
adc
cltd
mov
xor
movsb
xchg
imul
inc
fcompl
cld
jnp
mov
pop
inc
jmp
jmp
jmp
xor
rcrb
sub
cmp
les
sti
dec
xchg
ss
sub
cwtl
stos
xor
sbb
jg
inc
jmp
shll
pop
lods
cmp
int3
test
repz
aam
mov
rorb
mull
adc
stc
rcr
dec
inc
aas
push
das
inc
sub
jmp
out
addb
sub
inc
pusha
loope
cld
push
lods
outsl
xchg
stc
jns
and
sbb
bnd
cmp
cmp
and
mov
js
cmc
lahf
push
and
xor
cld
mov
or
cmp
fsts
fisubrl
jmp
mov
mov
cwtl
push
push
lods
and
push
cmp
cmpsl
jmp
xchg
ret
mov
aaa
les
dec
je
fsubrs
mov
jmp
pop
xchg
push
test
std
sti
mov
outsl
lods
xchg
fmulp
sbb
sub
in
add
rcl
and
iret
xor
inc
sti
and
imul
bound
sbb
or
fs
dec
xchg
mov
int3
dec
ljmp
and
lods
in
push
popf
or
pop
sub
mull
sbb
mov
inc
inc
sahf
and
lock
lods
outsl
or
sbb
xor
and
icebp
enter
lds
cld
and
xchg
jo
push
stos
jns
rcl
xor
subl
jmp
push
rolb
jg
inc
orl
xchg
pop
es
je
stos
or
push
xchg
lods
dec
scas
jne
cmpsb
dec
sbb
pop
xchg
mov
pop
cmp
lret
sbb
cmp
orl
data16
mov
into
pop
leave
mov
and
test
xor
xor
out
jmp
and
jmp
adc
push
movsl
pop
jno
sub
mov
sbbb
sub
jbe
cli
stos
sbb
mov
test
push
push
lret
sbb
ds
dec
dec
pop
mov
in
lods
push
jno
cmp
jecxz
or
cmp
push
loop
pop
sbb
daa
pop
pop
lods
in
js
sbb
xchg
jmp
mov
inc
jge
inc
lahf
jns
por
outsl
jnp
cmp
enter
sub
nop
adc
add
in
cmp
test
push
and
cmc
jmp
nop
movsb
aaa
repz
sub
sbb
and
or
out
sub
sub
sbb
jmp
push
jno
sar
es
lods
or
mov
mov
das
lock
std
dec
mov
or
cmp
inc
in
jmp
test
ja
test
jmp
push
cmp
call
xchg
mov
cmp
xchg
pop
lods
lds
inc
inc
mov
and
arpl
mov
movsl
jp
repnz
js
mov
jmp
sbb
fnsave
xor
jmp
sub
and
jmp
sbb
cmp
add
sti
jns
mov
mov
pop
icebp
arpl
aaa
out
imul
mov
lret
shlb
ret
mov
xor
and
jmp
rcrl
jns
pushf
add
das
inc
sub
pop
jmp
sar
mov
adc
xor
dec
jp
push
ss
scas
pop
dec
jecxz
cltd
scas
sub
sub
push
jmp
xchg
sbb
xchg
push
out
jmp
pop
xor
icebp
mov
bound
inc
imul
loope
mov
into
jmp
and
sbb
mov
sbb
adc
test
test
and
imul
mov
xlat
iret
add
aaa
stos
jle
loop
repz
dec
mov
adc
inc
jne
out
cld
cmp
or
movsl
stos
jmp
jb
mov
inc
xor
aas
gs
fisttpll
xor
loope
xchg
push
jp
ljmp
cmp
add
push
jecxz
pop
and
ds
or
popa
repnz
jecxz
mov
cltd
jne
push
fsubrp
outsb
fldcw
data16
int3
pop
pop
pop
adc
pop
jmp
sub
sbb
mov
adc
add
test
cs
dec
scas
inc
sub
in
repnz
jbe
add
hlt
outsl
xor
mov
jl
sub
repnz
clc
cmp
sbb
test
in
or
negb
loopne
out
xchg
aaa
jmp
cmp
aad
jo
insl
mov
sub
aaa
pop
jmp
sub
js
jmp
mov
scas
push
in
test
inc
je
add
sbb
std
xor
cmp
adc
xor
mov
jnp
sbb
mov
add
ja
jmp
std
sbb
insl
adc
jp
test
sub
lods
jmp
sbb
and
lods
int3
dec
jo
push
in
daa
stos
mov
xchg
pop
imul
mov
jae
mov
arpl
cli
mov
pop
pop
jp
bound
fstl
dec
cmp
inc
es
jo
push
cmc
jmp
test
push
jne
stos
loop
and
lcall
push
pop
xor
int
mov
shlb
test
jnp
sub
pop
or
test
inc
aaa
fstl
pop
push
adc
in
push
push
lret
testl
addr16
jmp
pusha
dec
pop
imul
fsubrl
xchg
out
fistpl
jnp
bound
in
paddb
mov
jne
or
dec
xor
jecxz
pop
sub
fwait
movb
xlat
std
lods
jmp
lea
jmp
sub
or
faddl
adc
inc
inc
or
sub
mov
adc
mov
or
aaa
mov
fdivrl
and
pop
add
dec
ret
or
pushf
mov
pop
in
mov
jge
fiaddl
pop
outsb
mov
mov
sub
les
insl
push
and
fs
inc
call
cmp
fmull
pop
or
inc
ret
mov
mov
and
data16
mulb
fistps
mov
sub
stos
and
mov
lea
xor
out
sahf
mov
or
mov
lods
out
cli
xor
sbb
jmp
cmp
dec
jmp
jg
mov
aaa
jmp
sub
xchg
and
in
sub
pop
add
es
decb
mov
jns
or
or
rcll
jmp
cmp
jmp
iret
jmp
jmp
icebp
sub
lea
movsl
sti
push
push
and
or
add
outsb
xor
xchg
insl
shl
cmc
out
add
jnp
xor
mov
lods
dec
ja
int
pop
or
xchg
mov
mov
cwtl
sub
cmpsl
xchg
pop
adc
test
jmp
xchg
inc
xlat
sub
xor
add
iret
sbb
repnz
por
call
fucomp
jge
out
and
push
mov
or
test
aas
add
shlb
mov
jmp
fwait
jb
stos
sub
popf
jmp
adc
in
jo
repnz
jge
push
inc
filds
das
lods
popa
enter
daa
cmp
jno
jmp
mov
mov
pop
sahf
jl
xchg
rorl
mov
fidivrs
adc
daa
add
xlat
cmp
lea
out
inc
lods
or
lcall
pusha
push
shrl
in
add
and
lods
mov
or
pop
and
lods
insl
push
and
decb
jne
xor
dec
imul
leave
xor
inc
and
pop
test
xor
or
fidivrl
mov
out
outsb
sub
hlt
pop
sbb
adc
jmp
mov
loopne
dec
mov
popa
adc
adc
sub
aaa
scas
pop
sarb
add
jmp
xor
adc
cmp
lods
leave
add
pop
pop
sti
dec
jmp
fsubrl
jmp
popf
mov
jmp
adc
mov
imulb
push
push
std
inc
xchg
ret
mov
push
adc
and
sub
jno
es
scas
jmp
fisttps
ret
imul
jmp
dec
js
outsl
cld
mov
jmp
lds
xor
out
jmp
addl
xlat
flds
push
outsb
call
int3
xor
add
and
lods
jmp
out
imul
lods
iret
in
sbb
sbb
add
add
jmp
scas
xchg
fisubrl
mov
jmp
mov
idivb
mov
and
jnp
jmp
mov
adc
cmpsb
scas
sbb
ljmp
clc
dec
jmp
jb
es
push
pop
xchg
jmp
jge
aaa
xchg
jo
xchg
push
movsb
cmp
fnsave
jmp
scas
mov
inc
jmp
pushf
dec
add
mov
jmp
mov
das
shll
cmp
jmp
movsb
mov
test
repz
jg
lods
cmp
dec
orb
por
jb
add
scas
adc
js
jmp
xchg
movsb
add
adc
pop
testl
push
push
jmp
xor
jmp
pop
pop
int
das
sub
bound
jo
jle
lret
xor
fbstp
insb
jne
xchg
jmp
ss
in
cltd
jmp
pop
addr16
aad
jmp
mov
stc
pop
sub
or
das
sub
mov
xchg
push
clc
xor
lods
xchg
sub
jmp
sti
push
dec
jmp
lret
push
add
jmp
mov
stos
fcmovnb
inc
lahf
jmp
inc
lds
jmp
ss
movsl
shr
pop
cmp
fbstp
adc
mov
sbb
das
jle
mov
dec
cmp
adc
xlat
sub
dec
add
call
or
pusha
xchg
lods
dec
push
std
in
rep
adc
xor
cmpsl
sbb
popf
cmpsb
vmulpd
mov
inc
ljmp
iret
or
int3
test
sbb
lret
lcall
xor
cmp
lods
test
jns
sub
sub
sub
inc
iret
jmp
in
pop
out
add
sub
fucomi
or
and
or
test
push
dec
cli
in
jmp
inc
int3
pop
sub
in
lods
popa
jo
adc
loop
push
fmull
push
fs
sbb
jmp
mov
adc
mov
roll
sbbb
lahf
cmp
jne
mov
lcall
xchg
xchg
ss
inc
sub
mov
inc
jo
pop
fmull
das
jns
jmp
xor
dec
pminsw
out
pop
inc
xchg
cmp
outsl
jmp
jno
jns
xlat
dec
pop
jmp
lods
fisubl
jmp
outsb
lret
test
pushf
push
mov
push
sahf
push
scas
mov
mov
add
jmp
mov
xor
lods
or
and
hlt
mov
jmp
popa
scas
xchg
je
sub
loop
mov
and
fucomip
fsubrl
inc
leave
push
mov
sub
subb
pop
lea
adc
pop
je
lods
jecxz
mov
in
and
sub
lds
and
xchg
test
xchg
sti
or
cmp
mov
jl
inc
stos
jo
fsubrl
xor
dec
fiadds
xor
negl
shl
imul
sbb
push
xchg
jmp
or
fucomp
and
xchg
mov
notl
dec
mov
pop
jmp
cmpsl
xchg
add
jmp
jmp
in
or
jns
popa
add
xchg
jmp
xchg
dec
adc
pop
sarb
in
test
stc
dec
mov
cmpsl
and
jg
push
jmp
xchg
out
adc
stc
addr16
test
pop
repz
lahf
xchg
dec
lcall
ds
leave
cmpsb
and
call
jmp
mov
add
lods
dec
fsts
mov
sbb
or
sub
jb
pop
mov
xlat
jmp
loop
outsl
lods
lock
cli
and
insl
jmp
push
cs
mov
mov
orl
dec
or
inc
inc
xchg
push
jmp
push
add
sub
testb
bound
jp
jmp
sub
sbb
add
push
aaa
dec
sub
stos
dec
lret
je
pop
movsb
shrb
mov
test
repnz
adc
adcb
cli
pop
push
pop
repz
and
lods
sub
xchg
addr16
dec
lods
inc
sbb
push
out
inc
test
lods
push
or
pushf
pop
jg
mov
mov
daa
push
sbbl
jmp
scas
lods
or
pop
rolb
lods
mov
shlb
mov
xchg
mov
int3
xchg
add
jg
or
mov
and
dec
ret
and
les
cmpsl
add
and
mov
mov
push
scas
or
das
mov
addr16
fwait
jmp
inc
fiadds
jmp
add
cmp
ss
loope
mov
jl
xchg
idivl
push
lods
lods
sub
lock
and
or
or
jmp
xchg
jb
jne
jmp
mov
shl
jecxz
out
inc
fcmovnb
cmp
dec
and
mov
adc
aas
cmpb
jmp
mov
mull
jmp
jb
add
adc
sti
jmp
pop
rcr
enter
jmp
outsl
push
js
lds
loop
out
pop
lret
cmc
and
push
jmp
sbb
xchg
je
xlat
dec
adc
xchg
out
push
adc
ret
popa
sbb
add
mov
scas
shll
lods
jb
hlt
mov
pop
repnz
adc
pop
cmc
stc
fs
rolb
sbb
pushf
pop
lret
shr
push
mov
and
jmp
mov
fdivrl
cld
dec
aad
mov
mov
out
out
mov
adc
or
je
icebp
pop
jge
sbb
in
in
add
aam
mov
dec
jb
arpl
shrb
js
insb
add
mov
add
ljmp
enter
mov
jmp
sbb
inc
loope
dec
mov
xchg
push
stos
adc
jmp
mov
cmp
fcomps
dec
ret
loop,pt
sub
scas
mov
sbb
mov
jmp
idiv
dec
xchg
ficompl
cld
dec
les
mov
jge
xor
stos
mov
sub
push
dec
jns
fsubrs
fs
sub
jmp
icebp
cmpsl
loop
out
dec
jmp
xor
add
jecxz
push
sub
lods
cli
jns
pop
jne
divb
dec
mov
mov
popa
sti
mov
or
jmp
jnp
or
in
xchg
icebp
add
jb
std
scas
jb
push
mov
inc
jmp
cmp
xchg
pop
sbb
xchg
es
or
bound
push
jl
xchg
xor
inc
repz
jmp
std
mov
mov
repz
sbb
lods
popf
and
mov
sub
jle
push
fiaddl
pop
dec
adc
mov
popa
lea
mov
cmp
imul
sbbl
mov
mov
xchg
cli
movsb
repz
mov
lods
cmp
or
in
sub
fnsave
or
test
cmp
xor
in
pop
sub
enter
cli
test
bound
jmp
stos
xor
cmp
dec
jb
push
inc
mov
xchg
sti
sbb
lret
in
test
shll
sub
test
or
jb,pt
rcrl
aam
or
cmpsb
sub
mov
and
sbb
repz
adc
pop
lret
test
jmp
aad
test
daa
xchg
sub
dec
sbb
sub
jmp
dec
fdivs
jmp
insl
mov
nop
sub
sub
int3
push
dec
mull
mov
jmp
jo
jae
mov
and
xchg
lods
mov
push
mov
jg
addl
ret
fadds
pop
or
clc
addr16
xor
jmp
bound
mov
xchg
es
stos
fsubrl
jp
sti
mov
ret
shll
daa
jmp
aad
das
mov
mov
and
push
out
sub
scas
sbb
adc
jmp
xlat
and
sub
je
sub
jo
xchg
and
lret
jmp
sub
inc
in
xor
jmp
xchg
ret
jo
fwait
sub
inc
inc
in
repnz
mov
daa
aaa
jmp
arpl
xchg
scas
inc
jmp
dec
fcomps
lods
and
nop
lds
push
arpl
adc
mov
push
shlb
mov
or
mov
xor
pop
aad
jnp
js
iret
jmp
inc
mov
int3
jmp
repz
ljmp
cmp
xor
scas
push
jmp
sub
or
test
lods
out
ret
dec
add
xlat
test
lods
fistl
mov
sbb
pop
shl
repnz
push
cmp
and
das
jmp
push
push
repz
or
and
inc
add
in
mov
mov
jns
data16
mov
aad
cmp
jmp
or
pop
and
xchg
mov
dec
pop
jmp
push
movsl
push
gs
movsb
or
xor
jns
shrb
pop
cmpsb
adc
push
std
daa
daa
lods
sahf
lods
sbb
cmovle
push
data16
arpl
mov
and
dec
inc
mov
ljmp
cmp
sub
adc
dec
mulb
cli
stc
push
scas
jmp
inc
inc
stos
pop
jb
jle
jo
xor
sti
lods
insb
stos
arpl
mov
inc
dec
sbb
jmp
mov
in
stc
in
jmp
adc
add
xchg
in
adc
ss
sarb
mov
lea
xor
jns
mov
jmp
jl
sbb
jmp
add
dec
jmp
stos
orb
add
jmp
bound
sahf
daa
xor
data16
movsl
mov
in
push
mov
cwtl
jecxz
in
jmp
adcb
add
sti
push
ljmp
pop
inc
out
mov
dec
rclb
sbb
pop
xor
mov
ja
int
call
cs
or
leave
icebp
ss
pop
xchg
loop
sahf
sbb
fwait
jmp
inc
jl
mov
es
cmp
dec
aas
push
in
inc
shll
lods
add
dec
jmp
aam
adc
ds
cmp
mov
sbbl
xchg
sub
cltd
jmp
mov
fs
adc
pop
testb
and
test
jmp
cmp
push
and
pop
sti
cmp
mov
cmpsb
and
int
repz
mov
jmp
movb
test
fsubs
jmp
adc
jg
aas
lea
outsb
jmp
add
lds
mov
xor
cmp
mov
sub
jmp
or
jae
sbb
inc
jmp
xchg
sub
scas
sub
shrd
mov
fisubrl
mov
jp
sub
adc
lahf
daa
es
pop
jmp
sub
cmp
sub
in
or
je
and
cmpsb
fistpl
iret
jmp
out
add
popf
jmp
mov
sbb
cmp
int
add
and
call
mov
loop
sbb
jmp
das
xor
pop
inc
ja
jmp
inc
call
cmp
xchg
jmp
sbb
cli
sbb
inc
jmp
aaa
push
add
enter
popa
jp
ss
xchg
dec
orl
mov
cli
or
pop
mov
imul
hlt
sub
adc
push
clc
mov
jmp
nop
pusha
sbb
mov
dec
es
pop
loop
push
jnp
jo
jns
gs
scas
sahf
mov
sti
cld
cltd
dec
push
hlt
sub
imul
scas
dec
loope
xchg
cmpsl
gs
add
pop
aaa
mov
dec
inc
jmp
loopne
nop
fidivl
push
pop
lods
arpl
jecxz
jns
sbbl
jnp
lods
jno
std
pop
pushf
jge
sarb
jmp
add
jecxz
lods
addr16
mov
pop
ljmp
andl
inc
xchg
jmp
imul
push
xchg
int3
lods
cmpsb
xor
jns
sub
in
lahf
sbb
add
mov
jmp
lcall
jmp
mov
fmull
aas
jno
sub
lahf
add
xchg
sub
loopne
add
mov
jmp
push
lods
fwait
sbb
aas
cs
or
call
jmp
mov
idivl
fs
jmp
lcall
lods
push
sbb
mov
jo
out
sub
int
andl
pop
xchg
test
push
or
mov
push
cmp
push
push
jge
outsl
dec
aaa
pop
scas
add
lcall
lock
inc
xchg
in
sub
stos
lret
sbb
sbb
cld
fcompl
xchg
jo
fs
in
or
fdiv
lret
xor
add
and
aam
filds
jmp
sbb
lret
icebp
jmp
mov
shll
ja
cmp
cli
pop
mov
scas
lods
push
dec
sbb
or
in
cmc
inc
jae
test
mov
sub
sub
or
jmp
jbe
add
mov
mov
push
lret
mov
fdiv
dec
jmp
sub
xchg
stos
inc
pushf
mov
pusha
add
sti
js
aam
push
push
lods
hlt
mov
and
jecxz
insl
mov
xchg
leave
in
jbe
sub
jmp
xor
jmp
xchg
inc
test
sub
adc
add
push
stc
mov
or
jbe
rcrl
mov
xchg
mov
cmp
scas
leave
mov
fwait
push
push
xor
movsl
mov
fadds
xchg
or
sbb
imul
mov
scas
mov
mov
and
jmp
out
roll
in
lcall
sti
aad
xor
mov
sub
or
lods
pusha
xchg
js
popf
fisttpl
test
inc
sti
es
cmp
push
push
aaa
jns
adc
insb
fldcw
jmp
sbb
lock
jo
xchg
dec
mov
lret
dec
outsl
add
dec
pop
inc
xor
xchg
out
repz
add
nop
jmp
mov
cmp
push
mov
pop
jecxz
adc
out
sbb
or
mov
sarl
cmpsl
int
jp
sti
xor
sti
sub
sbb
jecxz
dec
xlat
repnz
jns
cld
int3
into
mov
mov
and
push
jbe
lods
rorl
mov
lret
jmp
dec
push
cmp
cli
pusha
or
inc
cmp
jl
or
fwait
push
jmp
popa
insb
mov
and
cltd
lods
add
in
pop
shll
fiadds
adc
mov
sub
dec
inc
in
jl
push
jmp
lea
addl
mov
lret
sbb
pop
jmp
hlt
insb
push
pop
cld
add
jmp
mov
mov
pop
pop
jmp
pop
xchg
sarb
and
jmp
dec
hlt
es
lods
and
or
movsl
cwtl
jmp
test
push
push
jmp
jbe
inc
sub
subb
cltd
mov
std
lods
fnstsw
dec
jp
cmpsb
scas
dec
lea
call
jmp
dec
fimuls
shrl
outsb
shll
pop
jmp
test
adc
mov
jmp
xchg
sbb
jmp
lods
or
lea
sub
push
shl
testl
cmpsl
scas
mov
aas
sub
in
and
movsl
push
shl
fbstp
jmp
inc
lret
insl
int
mov
mov
outsb
rolb
aas
pop
dec
mov
test
cmc
and
lahf
shlb
or
fadd
call
aam
xchg
cmp
jmp
cltd
test
sbb
pusha
inc
mov
jnp
jecxz
cmpsl
mov
sbb
jg
mull
adc
lods
cmp
sub
sbb
movsb
test
cli
push
pop
dec
xor
push
sub
adc
incl
fldenv
jmp
cmpsl
arpl
or
pop
sbb
jge
out
loop
in
lods
xchg
nop
adc
mov
out
push
gs
lcall
mov
or
movzwl
push
aam
lret
into
jg
andl
sbb
ss
sub
scas
imul
mov
dec
xchg
dec
lods
pop
adc
xlat
mov
sub
xchg
cmpsl
outsb
sub
repz
ljmp
and
push
or
mov
jnp
push
jmp
out
xor
jmp
xor
mov
je
jmp
push
xchg
outsb
out
sar
dec
movsb
jmp
xor
mov
leave
adc
aaa
xchg
add
mov
pop
sbb
cmp
mov
addr16
icebp
fsubl
pop
jmp
je
jg
lock
inc
mov
sbb
jo
cmp
repz
and
sub
fdivl
popf
jmp
jle
xchg
out
jb
inc
xlat
sbb
sub
jns
mov
repz
adc
arpl
dec
push
je
subb
sbb
loop
jb
daa
xor
leave
pop
andl
lret
xchg
adc
nop
movsl
xor
push
lea
add
stos
jmp
dec
test
cmp
jmp
cmc
mov
lahf
push
divb
lods
lock
xlat
jmp
or
jmp
sbb
popa
std
sub
push
sub
cmp
shlb
push
pop
jmp
sbb
xor
mov
aad
int3
and
cmp
sub
shr
int3
clc
pop
pop
lods
mov
test
push
adc
rcll
int
jmp
add
sbb
dec
ss
jmp
pop
data16
rol
movsb
lods
and
cmp
mull
push
sbb
fisubrs
hlt
sbb
lret
test
jmp
rorl
jmp
cmpsl
jl
mov
imul
cmp
scas
or
xchg
push
push
cmpsl
jmp
xchg
inc
enter
jmp
mov
inc
test
or
mov
insb
imul
sbb
dec
jb
adc
mov
adcl
mov
pop
adc
popf
and
and
push
add
loope
ret
pop
jmp
fidivs
jmp
dec
xchg
mov
sub
out
push
sbb
imul
sbb
scas
jp
mov
mov
and
jns
xchg
pushf
jg
mov
inc
movsb
mov
jne
ss
clc
repz
lahf
dec
or
xor
je
lret
jmp
popa
ja
aaa
hlt
scas
adc
pop
call
mov
sarl
out
mov
rcll
sub
adc
mov
dec
inc
jmp
insb
andb
pop
in
ret
sbb
outsl
out
lods
jmp
xchg
outsb
jbe
mov
push
in
out
jmp
sbb
shrl
jno
cwtl
fwait
dec
lock
mov
in
sbb
cmp
cmc
add
jb
stos
xchg
dec
or
mov
mov
adc
scas
clc
inc
sarb
xor
xchg
std
imul
pop
adc
mov
push
sub
push
cld
jmp
repz
leave
jmp
pop
jb
push
pop
sub
jmp
sarb
lods
add
xchg
adc
lods
scas
xor
mov
nop
js
mov
jns
mov
or
sub
dec
push
jle
xor
mov
loopne
rorb
jmp
mov
pop
xchg
adc
int
sub
test
pop
outsb
xchg
cmp
call
mov
dec
jmp
adc
pop
sbb
popf
test
int
cmpl
jne
cltd
and
mov
push
sahf
lret
push
jmp
mov
and
in
das
scas
jns
push
mov
daa
mov
ljmp
inc
jmp
adc
xchg
fwait
dec
sbb
pop
dec
pop
jmp
dec
inc
imul
test
ret
or
or
push
jle
jmp
xchg
jmp
outsl
sbb
pop
pushf
push
sbb
pop
es
fists
dec
xlat
jmp
pop
mov
lods
das
xor
into
inc
clc
jmp
enter
push
ss
jmp
in
scas
leave
nop
mov
adc
inc
shll
outsl
mov
dec
adc
cmp
sbb
sbb
mov
popl
repnz
ret
xchg
pop
mov
out
push
test
cmp
sub
popf
sub
jl
sub
fmuls
aas
lock
adc
inc
mov
insl
and
jnp
jp
loopne
dec
int3
cmp
mov
lods
popf
in
enter
add
daa
jmp
scas
fdivl
jmp
adc
mov
sub
lods
jle
and
pop
repnz
xlat
outsb
mov
sarb
mov
push
jb
repz
push
daa
push
imul
std
scas
mov
je
dec
out
or
sub
jmp
sti
in
and
enter
xlat
insb
push
push
pusha
mov
repz
fnstcw
adc
xor
mov
xchg
jo
jmp
not
aaa
add
dec
inc
sub
test
fisubrs
jmp
inc
movsb
adc
jg
sub
mov
fwait
xchg
test
lods
lods
mul
je
loopne
mov
push
and
jmp
pop
or
insb
jmp
or
lcall
jg
enter
stc
in
or
sub
pop
add
jmp
jp
jl
stos
adcl
xchg
sti
lods
movsb
fdivl
sahf
movsl
adc
rol
lock
xchg
inc
scas
cli
lea
and
ret
pop
dec
sbb
jp
fnstsw
xchg
lods
cmp
leave
sub
cmp
push
xchg
mov
jmp
pusha
in
mov
jmp
dec
sub
push
inc
xchg
fsubr
ja
aas
push
jmp
xchg
arpl
int3
sub
movsb
or
test
mov
jmp
sub
test
sbb
and
mov
and
sbb
dec
xchg
imul
bound
jl
jmp
inc
sub
jmp
and
popf
sbb
xlat
sub
mov
dec
sub
sbb
jb
mov
aam
int3
ljmp
adc
stos
or
pop
sbb
enter
data16
inc
mov
fildll
jns
lret
mov
mov
arpl
std
pop
jbe
lcall
jmp
int
jle
push
and
xchg
ss
les
repz
jmp
aad
xchg
into
outsl
fs
jmp
or
mov
sti
jmp
xchg
mov
jmp
in
xor
sbb
in
sbb
aaa
test
sbb
dec
jmp
repz
iret
add
mov
xor
ret
sub
push
lock
cmp
mov
jmp
lret
iret
sub
dec
xor
sbb
cltd
inc
sub
adc
dec
test
jmp
pushf
outsl
sub
jmp
add
jbe
mov
rorl
jecxz
pop
iret
out
mov
fdivrl
repnz
scas
mov
dec
movsl
les
std
xor
and
cmc
lods
xchg
mov
ds
jmp
or
popf
jmp
mov
scas
adc
push
mov
sub
outsl
jge
lock
jecxz
mov
xor
or
in
decl
jmp
jecxz
aaa
adc
sbbl
divl
dec
push
aad
cwtl
outsb
pmaxsw
mov
rcrl
jmp
jl
dec
popa
fnstenv
lods
or
jecxz
push
imul
clc
fsubrs
ljmp
sbb
mov
rolb
jo
clc
mov
jp
sub
dec
xlat
inc
ds
loope
psubw
ret
mov
lahf
imul
cmp
adc
adc
jmp
mov
xchg
mov
js
jb
mov
jmp
test
rcr
dec
jmp
lods
hlt
aaa
std
xor
daa
jmp
cltd
sbb
sti
pop
clc
ss
jge
lret
jae
sub
popa
and
or
mov
dec
movsl
mov
sbb
jnp
stos
movsb
add
out
inc
dec
mov
int
in
mov
fsubrs
sbb
mov
jmp
mov
xor
stos
cmp
or
jge
cmpsb
jmp
sbb
les
sub
aam
jbe
xor
lcall
cli
pop
inc
jmp
movsb
orl
inc
cmpsl
test
push
add
sub
sbb
lock
jmp
lea
cli
jmp
test
pop
mov
jb
aaa
jge
sub
xor
push
adc
pop
sti
sub
push
jno
push
pop
adc
jg
jle
push
adc
les
jmp
adc
imul
lahf
add
xor
add
jmp
and
push
mov
in
das
jmp
mov
sbb
sub
jb
sbb
jmp
adc
sbb
jl
jg
pop
popa
inc
or
test
in
or
add
ret
sahf
xor
aam
xor
sbb
les
fildl
call
sbb
or
sarb
pop
jmp
not
dec
xchg
jae
cmp
push
add
pop
jb
jecxz
cmp
rorb
push
add
popa
aaa
xchg
mov
jmp
adc
arpl
fisttpl
jb
xor
loop
in
jmp
out
cmp
sbb
imul
dec
adc
mov
test
jo
jg
outsl
mov
push
or
cmc
into
loope
iret
and
cli
rcll
fidivrs
jp
sahf
aaa
inc
dec
insb
das
mov
pop
inc
sub
mov
movsb
sub
sbbl
ret
inc
inc
call
pop
sbb
xor
aad
loop
dec
xchg
mov
adc
out
imul
pop
jmp
pop
scas
adcl
sar
shll
pop
into
movsl
cltd
xchg
lods
cmc
pop
je
add
push
lret
xchg
enter
mov
xchg
mov
jl
lahf
dec
iret
in
add
jmp
imul
jmp
inc
jno
or
push
mov
repz
dec
clc
mov
stc
sti
iret
out
mov
dec
xchg
outsb
adc
or
repz
leave
loope
mov
aad
nop
add
fcomps
js
push
movsl
iret
jae
mov
incb
das
push
mov
mul
xlat
inc
ja
addr16
shr
adc
and
dec
mov
sbb
push
insl
and
cmpsl
xor
imul
mov
jno
lahf
dec
add
out
push
mov
stos
sbb
pop
jp
faddl
xor
push
je
push
pop
mov
outsb
inc
in
pop
pop
repz
and
jmp
sub
notb
scas
insl
rcrl
out
push
push
jmp
push
xor
jmp
add
shr
push
push
popf
iret
shl
scas
xlat
pusha
mov
ds
dec
mov
xor
arpl
jb
jmp
adc
xchg
stc
lods
xor
xor
mov
pop
cmp
sub
pushf
loopne
mov
loop
out
in
cmp
xor
insl
add
aas
inc
jmp
pop
fcompl
jmp
cmp
mov
adc
push
test
jmp
ret
pop
and
pop
cli
mov
sbb
sub
mov
mov
insl
scas
mov
and
jmp
sbb
sub
lret
lahf
cmc
cmp
jmp
aaa
or
xor
dec
mov
xor
arpl
push
mov
mov
dec
add
in
pop
int
out
sub
push
bnd
jbe
aaa
cld
adc
js
or
shrb
sbb
enter
jo
add
jnp
scas
add
int
xor
lods
and
test
xchg
push
add
mov
loopne
jl
imul
sbb
js
dec
add
cld
dec
cmc
fcom
jmp
addr16
out
shrb
in
sbb
jge
adc
rorb
repz
imull
jbe
je
out
mov
push
leave
aam
leave
gs
mov
push
add
ret
dec
lods
mov
jmp
lahf
sti
fucomip
jl
cld
nop
or
xchg
adc
fcmovbe
jle
or
scas
test
xor
repnz
jmp
sti
frstor
sub
js
jle
flds
xor
jmp
insl
dec
fisttpl
int3
out
loope
andl
dec
pop
fldcw
lret
and
fisubrl
mov
sub
sahf
push
fsts
mov
sub
movsl
adc
jg
mov
adc
sbb
or
int3
in
jmp
pop
mov
xchg
adc
inc
fldt
fs
ljmp
jle
push
insb
cwtl
mov
sbb
pop
scas
daa
or
mov
cmpsb
psrlq
or
mov
xor
aad
out
and
cmp
dec
xor
sub
push
mov
mov
in
sbb
jmp
fwait
lahf
out
shrb
jp
out
fadds
sub
test
pushf
mov
cltd
aas
sub
pop
loope
add
lods
lcall
xchg
add
or
mov
sbb
inc
nop
cli
inc
cmp
gs
testb
cli
pop
stc
mov
add
sub
imul
sub
jno
loop
dec
sbb
sarb
ret
pop
imul
mov
adc
xlat
and
sub
jno
outsb
scas
jmp
mov
dec
aaa
in
leave
pop
push
test
add
and
jb
pop
cmc
mov
fcomip
lahf
rolb
pusha
jo
jo
out
jns
jmp
sbb
mov
xchg
div
cwtl
enter
in
out
sbb
mov
jecxz
orl
cmpsb
jmp
movsl
scas
and
xorl
xchg
xchg
sahf
mov
add
negl
xor
loopne
mov
testl
arpl
mov
inc
add
addl
xchg
xchg
sti
call
push
jmp
mov
xchg
sbb
pop
lret
rcr
out
jnp
dec
arpl
in
pop
sbb
dec
xor
shll
cmpb
ret
out
and
mov
push
xchg
scas
mov
outsb
adc
imul
rclb
repz
dec
int3
jbe
insb
mov
mov
loop
lds
and
jmp
dec
in
leave
pushf
mov
adc
std
ret
rclb
lds
scas
sti
je
stc
sub
adc
push
pop
call
push
pop
or
std
xor
cmp
mov
jbe
sbb
int3
js
or
lret
dec
cmp
dec
nop
xchg
and
ja
xor
push
pop
xor
jge
mov
mov
orl
mov
xchg
or
fisubrl
pop
push
jmp
sti
cmp
mov
sbb
lock
add
jb
xor
ss
mov
lcall
push
ds
jmp
adc
adc
jmp
fildl
stc
loop
ret
jmp
xchg
data16
test
mov
movsl
cmp
scas
ficomps
inc
js
or
jnp
lcall
jo
sub
dec
in
inc
mov
mov
stos
jmp
xorl
jmp
jmp
pop
sbb
mov
int3
iret
loope
xor
jb
jmp
cmpsb
push
mov
in
popa
xchg
scas
gs
mov
add
xchg
lahf
jmp
loopne
fistps
adc
jmp
rcl
sbb
xor
dec
pop
inc
mov
cmp
subb
xor
das
test
xchg
mov
add
fldl
jmp
push
fwait
xchg
inc
push
sub
jmp
push
cmpsl
and
arpl
xchg
jmp
dec
in
sbb
inc
mov
jmp
xchg
cmp
sub
pushf
and
push
lods
fs
idivb
jmp
jmp
or
sub
mov
pop
popa
jmp
insb
cmp
aaa
mov
jns
lahf
push
test
push
subl
fsubrl
icebp
sbb
adc
sti
test
add
jmp
out
inc
mov
mov
incb
and
imul
mov
jmp
xor
jb
addr16
inc
push
cmp
ljmp
jmp
add
sub
add
scas
movsb
rclb
jge
jmp
jae
xchg
xor
and
mov
jge
xor
adc
mov
xor
mov
jl
mov
inc
ss
mov
das
rclb
xchg
jbe
in
mov
mov
mov
cmc
mov
cmp
pop
mov
jle
mov
lret
sub
mov
out
jmp
xchg
aaa
iret
in
fbld
ret
add
cli
lret
xchg
test
mull
and
sub
jmp
xor
cmpsb
xlat
jb
and
unpcklps
adc
sbb
or
call
loop
push
mov
ret
mov
xchg
stc
repz
inc
inc
sbb
repz
jmp
jno
loopne
dec
xor
jmp
adc
xor
test
jecxz
leave
sub
ss
stc
mov
jmp
cmpsb
and
outsb
divl
roll
or
add
imul
ret
jmp
in
inc
sbb
xor
push
pop
xchg
popf
fidivrs
add
imul
sub
or
or
or
mov
pop
sub
or
negb
dec
out
jmp
popa
cwtl
push
rcpps
fwait
lods
inc
jg
std
movsl
mov
jmp
xchg
add
std
clc
adc
cmp
incl
and
ds
stos
cmpsl
lods
jp
aas
lahf
jle
jmp
mov
xchg
insl
xor
daa
cmp
out
pop
dec
and
and
sbb
test
dec
jnp
addl
pop
lcall
cmpsb
loopne
jns
cwtl
jmp
data16
stos
push
lods
out
cltd
mov
ficompl
roll
jmp
outsl
adc
mov
jmp
ret
insl
sbb
out
sbb
cwtl
ds
xor
insb
jmp
push
xchg
sbb
adc
paddusw
test
jmp
lret
lea
repnz
xchg
mov
test
ljmp
ret
popa
push
inc
inc
xor
adc
mov
inc
pop
sub
scas
pop
jo
cmp
js
mov
shl
or
push
dec
sub
or
not
in
stos
jg
imul
push
fsub
pusha
mov
mov
fldcw
cmpsl
and
imul
xchg
mov
push
mov
mov
sbbl
jb
cmp
add
xchg
gs
int
mov
mov
xchg
inc
testl
jmp
jno
cmp
inc
or
mov
jg
inc
and
imul
push
jmp
das
ret
mov
imul
test
out
push
sub
sub
jbe
sub
iret
std
cld
push
fsubrl
call
outsb
lret
add
lods
mov
inc
paddsw
jmp
adc
mov
insl
inc
mov
scas
je
push
jl
lods
es
sub
sbb
pop
pop
pop
sub
fcmovnbe
jge
negb
jmp
lahf
fwait
pop
add
imul
ret
ficomps
outsb
int
popa
sbb
fistpl
mov
mov
pop
leave
cmpsb
sub
daa
and
out
cmp
or
int
scas
mov
fsubrs
mov
call
adc
idivb
mov
add
push
xchg
mov
mov
xor
imul
into
jecxz
add
std
inc
xchg
sbb
mov
mov
jmp
push
lock
pop
sahf
mov
sub
jmp
mov
mov
loop
jnp
jmp
pop
imul
mov
sub
nop
dec
jmp
lock
inc
mov
jb
mov
xchg
aad
std
movsb
cmp
clc
mov
and
sti
inc
les
jle
pop
loop
aas
xchg
or
jmp
shrl
or
aad
jbe
cmp
mov
cwtl
or
inc
sti
icebp
adc
imul
sbb
and
repz
xchg
stos
ret
lret
adc
add
je
sti
jmp
jo
mov
test
sub
pop
inc
cmp
push
imul
sbb
test
and
shll
pop
outsl
cmpsb
icebp
mull
mov
out
ljmp
mov
in
sti
jmp
adc
cmc
movb
xchg
jmp
push
inc
cltd
or
aaa
inc
pushf
into
cli
push
xchg
jmp
jo
push
sub
sbb
dec
gs
cmpsb
and
sub
mov
sbbl
repnz
pop
mov
or
pop
repnz
or
fldl
mov
call
mov
mov
xchg
sbb
sub
jmp
clc
shr
push
je
lods
fs
inc
xchg
lods
add
mov
shrl
jno
jmp
adc
imul
in
cmp
sti
lcall
repz
xchg
mov
mov
pushf
xor
dec
jmp
add
movsb
sub
cwtl
andl
test
mov
cmp
jns
lret
push
scas
pop
lods
pop
call
or
loopne
in
out
lods
sub
sbb
decl
movsb
inc
sub
leave
fists
shrl
es
inc
xor
or
test
dec
aam
adc
jmp
add
shlb
dec
mov
adc
dec
sub
ss
jg
dec
ficomps
fsubrl
mov
jmp
shll
ds
gs
sbb
bound
inc
hlt
jmp
push
dec
mov
in
lds
fwait
sbb
adc
leave
or
ljmp
mov
sub
outsb
jmp
nop
mov
mov
jbe
jecxz
ss
dec
adc
lods
push
mov
sti
lcall
mov
xchg
stos
and
in
arpl
sarb
insb
add
fsubrp
test
mov
and
pop
jns
jmp
repz
mov
lods
mov
ljmp
and
or
insl
mov
lea
jl
add
in
iret
and
sbb
sbb
xor
rorb
lods
popa
aam
imul
lcall
mov
add
xchg
push
imul
sti
decb
fwait
jmp
shll
notl
aas
cltd
pop
imul
icebp
inc
pop
mov
sub
mov
add
push
mov
inc
nop
jns
movsb
out
jle
xchg
insl
xchg
fwait
or
mov
fisttps
inc
in
js
or
daa
jmp
push
popa
mov
jmp
xor
mov
test
aam
jge
out
mov
scas
sbb
sub
mov
lock
enter
loope
ret
and
pop
cmp
jmp
xor
addr16
incl
pop
jmp
sub
sbb
xorl
push
insb
popa
add
mov
jmp
sbb
lcall
filds
adc
xchg
or
jmp
out
jns
pop
movsl
mov
sti
in
and
jno
jmp
out
jnp
mov
loop
sti
dec
inc
int3
add
fsubrs
inc
dec
jmp
dec
sub
mov
stos
lock
jns
les
jmp
xor
mov
mov
out
sbb
mov
inc
jmp
mov
mov
cli
ljmp
inc
inc
icebp
pop
std
or
adc
sub
cwtl
mov
outsl
lea
sti
jmp
cmp
andb
movsb
or
xchg
cmpsl
push
lret
xor
jp
into
or
shl
ljmp
and
and
push
cmp
lods
aam
sub
adc
icebp
dec
adc
lods
cwtl
xor
pop
movsl
sbb
mov
fcmovne
inc
and
and
jmp
inc
sbb
aaa
sbb
lds
sub
sbb
les
sbb
js
push
nop
mov
lods
sbb
int3
pop
sbb
add
inc
jnp
xlat
and
inc
mov
insl
jmp
mov
cltd
sahf
jmp
aad
movsl
or
sbb
inc
popa
sub
insl
loop
lea
fcoms
push
les
jge
por
adc
clc
mov
jmp
sbb
and
mov
sub
add
xchg
cmpsl
dec
jmp
mov
cltd
out
mov
lods
int
xor
pop
sbb
adc
mov
sub
jge
fadds
push
push
sti
jecxz
mov
shl
or
and
push
ret
mov
inc
setnp
or
pop
pusha
arpl
add
sti
testl
sbb
pop
lret
cmp
add
mov
jmp
imul
aam
sbb
int3
cli
xor
addr16
out
push
jg
es
add
jmp
loope
fsts
xor
test
mov
mov
shlb
enter
stos
es
or
jnp
mov
push
repz
scas
or
cld
xchg
clc
fldl
mov
mov
sub
insl
sahf
sub
cmc
ljmp
lods
sbb
mov
daa
aaa
movsb
mov
lods
enter
test
shr
mov
cmp
add
stc
mov
dec
mov
nop
push
movsl
mov
daa
or
fsubrs
clc
daa
mov
push
mov
add
adc
jmp
daa
clc
sub
pop
pop
ffreep
data16
cmp
sub
stos
nop
or
dec
sbb
xchg
cmp
add
or
sub
add
repz
xor
sahf
mov
gs
fsubrl
mov
adc
movsl
push
neg
out
jmp
clc
stos
inc
jno
sub
xor
dec
out
sti
xor
or
ret
push
enter
jmp
xchg
aas
mov
pop
mov
sub
mov
lods
aaa
inc
inc
jl
lds
cmp
sahf
jmp
and
outsl
ja
imul
sti
mov
sbb
or
ds
test
push
jecxz
sbb
dec
mov
dec
lea
imul
loop
jmp
push
inc
rcll
jae
incl
test
pushf
lods
aaa
dec
or
push
dec
es
sub
mov
mov
cli
xor
popf
sti
pop
inc
jae
mov
jmp
das
scas
mov
xor
add
clc
jmp
xlat
xor
jmp
sbb
mov
cmc
mull
movsb
lea
xor
fldl2t
mov
inc
cli
cmp
lds
stos
in
lods
push
shl
mov
or
jmp
cmp
or
mov
sti
mov
xchg
cmpsb
fbld
fdivrl
lods
enter
incl
push
mov
pop
out
stos
xchg
push
or
jmp
mov
scas
adc
xchg
sub
insb
dec
ret
and
mov
je
jmp
fmuls
lret
pushf
repnz
cmpsl
mov
jmp
movsl
into
dec
pop
xor
dec
sub
mov
dec
sub
cli
xor
shrl
cmpsl
sbb
lret
and
js
jns
nopl
scas
xlat
jmp
add
imul
das
ds
adc
aad
or
enter
sub
aaa
andl
cs
or
lret
xchg
jne
insl
mov
jmp
dec
icebp
js
cmp
inc
insb
test
insl
mov
lods
aad
sti
movsb
xor
adc
push
leave
outsl
sub
pop
jo
icebp
xchg
mov
sbb
mov
test
lods
add
jmp
fs
jmp
mov
mov
and
bnd
js
mov
and
mov
lcall
arpl
sbb
dec
xchg
push
ret
and
jmp
nop
mov
pop
jg
or
sub
or
mov
int3
pop
ds
jo
sahf
jmp
pop
mov
ret
cmp
int3
ss
mov
mov
cmp
enter
fsubl
push
and
inc
jmp
xlat
lock
dec
or
jmp
imul
pusha
jmp
push
frstor
push
mov
leave
pop
and
jmp
fsubs
sbb
fimuls
xchg
inc
jp
adc
lock
lcall
jecxz
add
jnp
in
sbb
arpl
cmc
jmp
scas
ret
cmpsb
rcrb
push
jmp
incb
fidivl
fcoms
mov
mov
and
sbb
jl
lods
cltd
cmp
lock
js
jmp
dec
xor
push
movsb
data16
dec
cli
xor
mov
test
sbb
mov
and
jg
lea
xor
jo
inc
xchg
mov
in
and
jmp
enter
clc
mov
jmp
mov
xor
xor
scas
pop
sbb
jmp
cwtl
mov
sbb
add
ljmp
iret
outsb
daa
sub
jmp
aad
xchg
je
push
jmp
jmp
xor
ljmp
mov
sti
scas
cli
cmp
cmp
mov
in
inc
mov
or
push
fwait
mov
and
xchg
sbb
int
adc
movsl
sub
add
fcmovne
mov
adc
xchg
imul
mov
dec
cmp
xchg
or
ror
and
and
and
xchg
jns
dec
dec
mov
xchg
iret
cld
mov
inc
mov
movsl
jmp
movsb
std
in
jbe
mov
dec
jo
lods
dec
adc
fidivrl
jmp
mov
ja
jbe
scas
jb
lock
fdivl
dec
sbb
jmp
adc
jmp
insl
jp
push
mov
dec
sub
test
test
jmp
xchg
fwait
jle
loope
or
test
xchg
jne
pop
and
or
lods
jmp
mov
jmp
jle
xchg
add
stc
jnp,pn
mov
ja
jbe
insb
outsl
test
jae
jmp
and
push
mov
sbb
test
mov
cmp
mov
dec
sub
or
cmp
dec
shlb
sbb
xchg
or
jmp
mov
mov
xor
fsubrs
pop
jle
andb
cltd
out
jmp
clc
xchg
daa
inc
sti
or
sub
shll
daa
out
jmp
or
adc
call
cwtl
ja
cmp
das
jne
lahf
push
sub
inc
sbbb
xor
xchg
repz
idivl
sbb
inc
mov
outsb
mov
mov
push
idivb
cmp
or
jmp
test
or
insl
mov
xchg
mov
sub
repnz
push
lret
xchg
xor
sub
sti
dec
sub
sbb
int
lods
xchg
and
adc
and
cli
push
repz
mov
xchg
dec
sub
xchg
jno
cmp
sub
cvttps2pi
ljmp
mov
xchg
daa
mov
cmp
sbb
mov
sbb
loopne
xchg
aam
scas
jmp
cwtl
in
ret
pop
push
loope
out
push
icebp
jle
addb
lods
sbb
inc
adc
pop
or
jecxz
movb
aaa
xor
mov
scas
xor
inc
jmp
inc
into
dec
cmc
stos
adc
jb
add
dec
ja
sbb
cmc
fwait
sbb
sbb
aad
shll
pop
jmp
jp
xchg
sub
sbb
inc
jmp
cmp
aas
jns
dec
cli
fisttpll
in
fisubs
or
inc
ss
mov
add
xlat
das
jge
getsec
dec
sbb
add
xchg
in
add
sbb
lods
sti
mov
jne
push
mov
scas
and
std
icebp
adc
and
jo
push
cld
test
in
clc
xor
jle
jmp
cmp
push
sbb
pushf
jnp
mov
pop
jmp
sub
adc
negb
add
jmp
scas
repnz
xchg
leave
push
int
aaa
jecxz
arpl
sub
mov
cmp
or
jno
fimuls
jmp
pop
lods
jns
pusha
lret
in
icebp
pop
fisttpll
inc
sbb
sbb
pushf
clc
xchg
inc
in
or
jmp
loope
ljmp
out
cmp
in
or
mov
cmp
sub
data16
sbb
cld
imul
stos
add
sub
xchg
mov
stc
push
in
push
sbb
mov
xchg
into
lods
push
or
stos
push
push
into
test
loop
cltd
add
pop
das
popa
xchg
jmp
or
out
bound
dec
add
mov
mov
pop
daa
test
out
test
sti
das
ljmp
dec
jmp
pop
dec
sub
jmp
shl
stos
movsb
pop
push
lods
pushf
cmp
or
or
lea
adc
or
sub
dec
cwtl
cmp
fwait
and
out
jmp
hlt
dec
repz
outsl
inc
jmp
pop
call
jmp
mov
sub
jecxz
push
xchg
and
sub
ljmp
push
or
jnp
push
mov
xchg
jmp
pusha
and
clc
jmp
push
cmp
cmp
dec
int
fildll
jmp
hlt
jbe
mov
inc
xor
and
jmp
xor
jmp
xor
cli
inc
cmp
lods
ret
xor
mov
xor
movsl
adc
nop
mov
jecxz
jmp
mov
inc
push
mov
lods
jle
and
add
xchg
jmp
aam
out
ss
mov
adc
int
jmp
out
pop
pop
cli
xor
int3
xchg
cmpsb
mov
adc
sti
sbb
outsl
mov
cli
push
push
aad
addr16
in
mov
fsubs
mov
sub
jmp
clc
pop
ljmp
fidivl
inc
in
xlat
cmp
ja
and
xor
ret
jmp
ret
jbe
subb
and
scas
jae
bound
pop
mov
adc
insl
mov
lods
sub
not
dec
mov
ljmp
sub
scas
cmpsl
and
push
xor
lods
cli
sub
mov
aas
mov
mov
test
jmp
cmp
push
sub
jl
lods
fnstenv
or
mov
push
ret
gs
push
pop
lods
std
inc
aaa
cli
add
or
test
jmp
fcmovb
jg
int3
sub
mulb
or
or
rcll
fiadds
or
and
pop
mov
ror
sub
jecxz
pop
je
adc
xor
aam
xchg
mov
mov
jmp
or
mov
or
push
jmp
jg
aad
add
add
call
outsl
addl
adc
mov
mov
setp
sbb
jmp
dec
in
int
mov
cmpsb
or
dec
adc
andl
inc
push
stos
cltd
lret
or
sbb
addr16
xor
and
scas
fs
jp
daa
outsl
xor
jmp
and
cmp
mov
pop
outsb
mov
jae
add
lods
into
dec
pop
clc
mov
sbb
or
cmp
and
pop
lods
sbb
adc
xchg
dec
arpl
xor
fwait
mov
rorb
and
xor
adc
lods
jae
lret
add
inc
pop
lods
insl
lods
test
and
dec
imul
cld
and
addl
cwtl
mov
xchg
rcrl
dec
shrb
jp
lea
pop
sub
int
add
or
mov
fstpt
add
popf
and
test
pop
fs
pop
xchg
mov
movsl
xor
lods
cmp
data16
inc
sbb
jmp
jne
inc
mov
cmpsl
mov
xchg
xchg
in
xor
out
ret
insb
js
aas
cmc
cmpsl
sub
ret
jge
out
xor
add
sbb
inc
mov
jmp
ljmp
jmp
push
aaa
jbe
je
jmp
ficomps
rorl
dec
adc
mov
or
push
mov
jmp
loopne
mov
lods
lea
sub
dec
and
or
pop
mov
adc
push
add
jmp
inc
ds
dec
push
mov
les
add
scas
xor
in
sahf
jmp
mov
mov
jns
testb
mov
and
mov
scas
mov
mov
movsb
das
sahf
adc
scas
sbb
jb
xchg
dec
out
mov
mov
or
inc
jp
nop
in
adc
popa
sub
cli
push
lds
pop
pusha
jne
cmp
cmpsb
push
and
adc
cltd
xchg
hlt
lds
adc
mov
cmpsl
sbb
imul
inc
sti
sbb
pop
sub
xchg
movnti
inc
cmpsb
scas
mov
and
adc
mov
cli
sub
and
inc
or
enter
arpl
stos
cmp
mov
sbb
inc
jmp
add
add
loope
and
or
jecxz
sbb
lea
nop
leave
jmp
insb
jmp
sub
dec
mov
daa
mov
hlt
movsb
pop
add
sbb
arpl
add
lahf
mov
dec
jp
pop
imulb
push
inc
push
xchg
lods
and
setl
fdivrl
cmc
mov
stos
add
mov
shll
or
mov
add
jmp
or
outsl
mov
cmpsb
sahf
imul
jg
mov
nop
ficomps
jge
out
mov
add
jmp
test
sub
adc
mov
icebp
jmp
or
loop
fwait
sub
fmul
push
inc
xchg
cmpsl
add
fucomip
pop
add
jmp
fdivr
xchg
aam
mov
adc
dec
int
xlat
jmp
inc
xor
in
push
cmpsl
jbe
mov
fsts
pop
add
cmpsb
xchg
jmp
sbb
xchg
jmp
or
jmp
repz
bound
aas
sub
imul
push
jmp
push
sub
insl
cli
xor
jmp
fstp
lock
dec
push
mov
scas
pop
test
mov
inc
sub
push
gs
or
jmp
sub
sti
pop
aad
out
movsl
pop
inc
mov
sbb
mov
in
bound
stc
repnz
icebp
cld
mov
stos
pop
push
jmp
sbb
xchg
sub
jmp
jl
cltd
iret
xchg
inc
imul
sbb
cmp
lds
addr16
inc
cli
call
sbb
loopne
and
aam
or
cs
cmp
jmp
incl
in
dec
pushf
je
pop
enter
mov
dec
into
imull
scas
jbe
push
out
in
push
jo
imul
mov
push
clc
jmp
scas
or
mov
inc
mov
jg
jmp
mov
sbb
xchg
adc
imul
jmp
dec
hlt
dec
mov
addb
mov
push
xor
mov
js
mov
sub
jno
adc
xor
dec
test
mov
sahf
je
scas
lret
adc
dec
and
das
roll
pop
mov
mov
add
mov
mov
jb
mov
mov
into
popa
jge
mov
stos
jo
or
jmp
push
call
lgdtl
jae
mov
testl
mov
icebp
ja
inc
fdivr
scas
fisubrl
ds
popa
xor
in
test
ret
pop
jp
clts
sub
ljmp
push
mov
push
mov
lret
mov
out
es
inc
jmp
add
push
test
mov
jo
mov
outsl
push
lock
jmp
mov
aas
adc
push
inc
jbe
xor
movsb
sub
jmp
mov
in
stc
jmp
sbb
sub
lods
jb
mov
sahf
mov
lods
lahf
lcall
inc
mov
sub
loop
push
pusha
jge
inc
nop
jmp
subb
cli
shll
cmp
sub
jmp
mov
stc
mov
or
cmp
sbb
sub
es
jmp
jns
pop
pusha
popf
jae
jmp
mov
xor
imul
fistps
mov
mov
adc
iret
jmp
jae
clc
adcb
pushf
add
ss
jle
daa
imul
shr
loop
jl
imul
outsb
test
sbbl
repz
mov
and
popl
jmp
shll
jmp
dec
fdivs
jmp
mov
sub
jmp
cmc
add
scas
les
xchg
icebp
ret
lods
or
add
sub
into
pop
sub
setae
testl
int3
jmp
cmp
ret
sub
into
enter
jmp
stos
pop
inc
out
xchg
bnd
cmc
add
jmp
sub
aam
int3
fs
sti
inc
sahf
mov
pop
cmp
jmp
or
dec
mov
adc
mov
mov
jb
call
cs
mov
nop
mov
pop
xor
jmp
cmpb
lods
add
pop
adc
sub
sbb
cmc
test
and
lret
xor
jmp
test
insl
mov
adc
fsubs
pop
fcomip
sub
sub
mov
inc
jmp
std
js
cmp
jmp
push
test
pusha
jmp
stos
shlb
cmp
jmp
dec
mov
mov
jmp
fisubs
imul
or
jecxz
jmp
stos
sbb
sarb
sti
pop
mov
adc
in
cmp
push
pop
sahf
dec
mov
call
xchg
lods
jbe
sbb
pop
es
out
inc
in
jp,pn
test
jmp
sahf
jmp
imul
das
mov
sub
hlt
lock
shl
adc
jmp
mov
xlat
jmp
lods
inc
inc
mov
outsb
jbe
fistl
enter
or
nop
jae
or
sahf
add
es
in
and
sub
jo
jmp
sarb
mov
lret
pop
scas
cmp
std
aam
and
aaa
mov
add
ja
sti
in
enter
push
and
sar
inc
outsl
adc
inc
jno
sub
add
dec
cs
xor
and
dec
ret
push
and
shr
add
popf
in
cwtl
in
ljmp
int
sbb
mov
push
mov
in
jo
mov
mov
lods
pop
aas
faddl
gs
and
stos
xchg
jmp
add
pop
xchg
mov
jmp
enter
repnz
or
dec
push
jmp
lock
aaa
sbb
mov
jbe
sti
pushf
fisttps
pop
scas
dec
loopne
xchg
iret
or
jmp
ret
jb
sub
jmp
dec
xchg
lods
push
jmp
aaa
loope
mov
xchg
shr
js
and
sbb
adc
mov
mov
push
jmp
mov
and
scas
mov
sub
inc
jo
xor
and
sti
ss
imul
mov
ret
test
or
test
cmp
lret
repnz
jae
push
loopne
lods
lds
enter
inc
inc
imulb
fisttps
fs
jmp
pop
xchg
ror
push
xor
jmp
pop
mov
lods
or
mov
cmp
xchg
add
dec
xchg
out
and
jmp
inc
lods
in
add
sub
xor
xor
ret
outsl
je
adc
jmp
imul
mov
cwtl
dec
cmpsb
arpl
adc
shr
dec
das
sub
imulb
loopne
push
pop
push
cltd
arpl
xchg
cmpb
or
fwait
sbb
ss
mov
mov
sti
mov
aaa
adc
adc
mov
aad
hlt
xchg
dec
clc
ds
std
pushf
jmp
mov
push
out
sbb
mov
fbstp
mov
cltd
bswap
jmp
sub
or
jnp
inc
xor
jmp
ljmp
insl
lahf
imull
fsubrl
mov
xor
push
lods
outsb
sbb
mov
stc
ljmp
test
adc
sahf
mov
jbe
lcall
dec
mov
decl
sub
jmp
xchg
jg
cld
jmp
das
sbb
loopne
lret
stos
pop
and
cmp
jmp
xlat
cltd
xor
mov
pop
pop
fnstenv
outsb
mov
mov
enter
mov
inc
xor
dec
lods
pop
push
jmp
jns
push
scas
sub
jmp
sbb
sti
mov
adc
jecxz
jmp
lods
pop
mov
stos
mov
dec
sub
shrl
das
ja
jmp
cmp
inc
xor
add
push
mov
cmp
mov
pop
test
inc
add
dec
mov
filds
out
fisttpl
adc
inc
mov
sti
jmp
xchg
cmp
sub
push
rep
test
pop
jg
lcall
jmp
dec
mov
add
int3
jmp
nop
cmpsl
mov
dec
inc
jmp
mov
lcall
mov
push
jmp
xchg
adc
jmp
fists
dec
mov
xchg
iret
sti
mov
leave
rcrl
inc
gs
jl
jmp
out
cmp
mov
jge
pusha
add
add
jmp
push
jno
xchg
push
sub
arpl
and
aas
jmp
stos
andb
repz
outsb
inc
lret
aam
lock
adc
push
adc
pop
sbb
jecxz,pt
mov
test
imul
int
dec
ror
jge
outsb
roll
aam
add
and
es
or
into
xchg
jmp
jno
cmc
push
cltd
or
or
push
sbb
mov
jmp
mov
dec
in
or
add
movsl
sub
filds
xor
fnstcw
sti
xchg
cmp
in
ret
pushf
jmp
xor
insb
fiadds
pop
jmp
loope
inc
in
das
dec
cld
lods
adc
xchg
popa
and
std
mull
shr
pop
ds
dec
push
sbb
inc
jmp
pop
ljmp
jp
push
ds
or
sub
ret
ret
mov
js
adc
push
test
adc
lods
mov
mov
mov
fucomp
sbb
xor
cmp
arpl
mov
stc
push
jmp
push
cwtl
cmp
add
lods
sub
xchg
clc
imul
or
arpl
cmp
lods
mov
adc
je
jl
cmp
das
rcll
add
testl
leave
and
cmp
js
sub
inc
push
ljmp
imul
movsl
divb
pusha
iret
jmp
pop
inc
jmp
bound
mov
jmp
jge
dec
es
adc
dec
pop
jecxz
icebp
jmp
sbb
int
jmp
mov
push
pop
test
sub
sbb
mov
inc
jl
out
adc
in
aaa
or
sbb
sub
in
out
jge
xor
out
and
and
in
sbb
int
cli
pop
fwait
jns
out
imul
int3
add
insl
les
shr
jp
ds
ss
jmp
ljmp
jg
pop
xchg
sub
int3
in
and
cmpsb
jl
jg
mov
jmp
adc
in
lods
clc
fadd
aam
pop
into
push
dec
es
out
jmp
fsubl
insl
stc
roll
idivl
jnp
mov
inc
daa
fists
and
dec
pop
jnp
lods
cmp
ja
jecxz
das
loop
mov
call
cmpsl
in
shrl
test
push
into
mov
int
cs
jmp
dec
out
out
xor
ret
out
je
scas
jmp
in
sbb
mov
adc
rclb
sub
fs
fldcw
dec
jmp
popf
and
jns
mov
out
sub
xchg
fdiv
fwait
outsb
mov
bound
jmp
rcr
mov
dec
test
jmp
sbb
push
clc
mov
lahf
jbe
xchg
mov
insl
icebp
cmp
jge
fs
sub
or
pop
mov
ss
sbb
sbb
cmpb
or
push
xor
test
insl
mov
push
out
int3
or
cmpsb
jno
stos
xrelease
xchg
mov
loope
ja
jmp
jmp
xor
in
sahf
lock
jmp
push
xor
iret
sbb
fs
cld
arpl
test
push
xchg
add
aam
sahf
adc
jmp
inc
push
sbb
sub
leave
je
shll
mov
loop
adc
popf
mov
mov
imul
movsb
lods
rorb
sub
aaa
pusha
fcmovnu
sahf
outsb
imul
jmp
jnp
pop
jg
pop
jmp
sbb
test
test
pop
jmp
movsl
xchg
adc
lahf
cs
jb
sub
mov
sbb
jmp
and
fisttpl
jmp
into
std
mov
adc
daa
fildll
loopne
int3
mov
jmp
sbb
and
lods
cli
xchg
lock
lea
mov
xor
shll
jmp
adc
lods
xchg
arpl
cli
je
stos
jmp
push
sub
add
in
adcb
add
pop
das
cs
dec
scas
add
sbb
mov
jecxz
push
mov
sub
hlt
mov
sub
sbb
cltd
jp
cmpsb
or
jecxz
pop
sahf
lret
popf
jmp
incl
add
mov
addr16
popa
insb
sub
and
arpl
lret
cmpb
jmp
loopw
push
lds
das
cmp
out
imul
dec
fs
pop
pop
negl
stc
repz
imul
pop
or
movb
and
dec
lods
jne
sbb
sbb
jnp
mov
adc
in
cmc
repnz
ficompl
pusha
test
js
adc
add
dec
scas
ja
lret
enter
xchg
sbb
nop
je
mov
jmp
mov
rorl
jmp
lds
lret
push
jmp
and
jmp
dec
jne
pop
pop
loope
mov
or
jp
daa
andl
cltd
mov
lcall
adc
stos
leave
lcall
adc
outsb
ds
jp
mov
mov
jmp
add
push
add
and
jmp
dec
sub
xor
in
push
jnp
imul
cmp
xchg
jmp
lds
inc
add
mov
pop
loope
popa
out
jmp
jge
jne
cwtl
cmp
jns
cmc
sub
lahf
daa
push
mov
push
shlb
nop
mov
inc
adc
fiaddl
iret
mov
adc
jmp
xor
nop
mov
push
jmp
xchg
jns
jno
rolb
sub
jge
mov
mov
sbb
jmp
and
jo
or
pusha
jecxz
pop
mov
lea
xor
sub
popa
jmp
mov
push
mov
dec
xchg
add
insl
test
mov
ret
mov
movsl
imul
lds
sbb
ret
subl
out
aas
jmp
sbb
jecxz
stos
mov
and
mov
fucomi
push
add
les
aaa
stos
jmp
mov
xchg
data16
jmp
imul
jmp
inc
cmp
add
repz
jmp
loop
out
ds
out
jmp
iret
mov
inc
jp
cmpsl
leave
push
in
push
jmp
jae
xchg
push
in
adc
xor
sahf
push
pop
and
push
inc
jmp
jo
add
adc
jmp
mov
aam
and
arpl
adc
add
cmc
sub
adc
cmp
int
jle
add
add
out
dec
and
xor
lock
clc
pop
sti
popa
cld
arpl
gs
ljmp
imul
imul
imul
imul
imul
in
or
mov
mov
mov
mov
lahf
mov
mov
lods
lock
mov
xlat
cmp
outsb
js
hlt
bound
sti
xchg
add
rcll
int
mov
add
dec
int
aad
pop
lods
stc
mov
dec
pop
fldenv
arpl
imul
or
jae
cmc
mov
or
stos
imul
add
imul
pop
imul
jne
mov
lods
int3
mov
dec
mov
xchg
popa
xchg
arpl
loop
sub
mov
int3
add
enter
int
paddusb
call
pop
call
mull
and
push
sub
mov
xchg
sub
sub
sub
sub
sub
push
or
hlt
mov
jl
jle
cmpb
mov
mov
xchg
mov
cwtl
mov
mov
test
js
mov
loope
and
test
sub
repnz
xchg
sahf
or
add
pop
cli
sub
sub
sub
push
and
imul
add
push
call
adc
adc
adc
adc
adc
inc
sbb
sbb
sbb
sbb
call
out
and
and
repz
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
fstpt
movsl
jp
mov
mov
xor
scas
ja
scas
mov
filds
and
arpl
bnd
hlt
lock
cmpsl
add
xchg
cli
pop
cmp
lcall
add
dec
jp
mov
test
sub
push
fistps
sub
xor
xor
xchg
cli
jb
roll
or
int
adc
aam
xchg
rcr
shrl
insb
cmp
mov
mov
lret
aad
fstl
sbb
and
fs
in
arpl
pop
shll
test
or
imul
sbb
imul
imul
mov
or
mov
or
adc
fidivrl
mov
outsb
sub
outsl
jle
mov
fistpll
iret
add
dec
fisttps
pop
sbb
pushf
in
in
in
in
arpl
cmp
je
mov
mov
mov
cmp
mov
rcr
rcr
shl
shll
cmpsl
out
xchg
fadds
test
insb
push
scas
lods
pop
imull
mov
aad
fstl
in
in
in
in
and
loopne
sub
sub
lods
ja
shr
aam
fsubr
sbb
daa
icebp
in
call
cmc
call
stc
call
inc
call
xchg
cmpsl
lcall
imul
mov
stos
popa
stc
clc
or
sub
sub
xchg
rorb
push
mov
mov
inc
arpl
mov
clc
repnz
je
in
testl
xchg
stc
cmp
add
insb
or
pop
imul
and
out
hlt
sub
lcall
ljmp
aad
adc
sbb
movsb
aam
sbb
jmp
push
lahf
fsubrs
mov
sub
push
aam
push
fucom
loope
xchg
lods
mov
pop
movsb
fistps
in
pop
add
add
mov
leave
imul
inc
inc
add
inc
movl
cmp
jnp
push
jl
out
mov
test
add
pop
sahf
mov
dec
imul
test
mov
inc
push
push
push
out
sub
sub
pop
sti
and
sti
jbe
or
outsb
rorb
xchg
cmp
push
jno
cmp
sbb
imul
loop
add
jne
fs
les
rol
mov
inc
lret
mov
nop
xor
or
mov
jnp
pop
mov
icebp
getsec
xchg
jecxz
add
mov
popa
jle
lea
fsts
cmpsb
pop
fwait
pop
movsb
push
cld
cltd
negl
es
pop
pop
loopne
pop
mov
testb
fucompp
sbb
pop
sub
and
insl
and
xor
shlb
pop
sbb
sahf
outsl
popf
push
mov
jmp
call
sub
repz
popa
cwtl
sbb
mov
mov
pop
pusha
subb
fists
fcomps
xchg
pop
jge
xor
out
xchg
sbb
mov
aam
in
cmp
clc
inc
in
or
popf
add
addb
ret
in
fldl
test
repz
repz
repz
cld
lea
cmp
add
sub
sub
dec
push
xlat
xchg
popa
loope
jmp
fldcw
mov
enter
lods
pop
and
gs
xor
and
lret
cltd
adc
xor
repz
mov
roll
leave
enter
lahf
push
mov
jb
jg
cs
mov
lcall
xchg
xchg
push
xor
les
popf
inc
push
sub
divb
movsl
dec
mov
xchg
cmpsb
jno
xor
addl
lock
incb
aaa
mov
addb
xor
adc
jb
pop
imul
outsb
inc
enter
je
sub
jnp
clc
dec
xor
xchg
cmp
add
pop
pop
enter
mov
adc
jne
mov
xchg
cmc
test
dec
test
insb
add
sbb
data16
push
pop
push
lahf
pop
loopne
cmp
aad
mov
fcoms
sbb
cld
or
pop
movsl
fcoml
loope
cld
pop
lock
push
mov
jecxz
lahf
inc
jb
fnstsw
mov
jmp
fisubl
sub
sub
pop
shll
movlps
push
leave
ficoml
xor
xor
divl
sbb
fwait
out
jmp
lods
insl
push
and
inc
mov
aam
jl
stos
mov
xchg
or
pop
push
cmp
push
push
mov
sbb
add
and
ja
push
loopne
and
xchg
clc
les
and
jnp
mov
fwait
lret
xchg
int
fisubs
mov
movsb
and
loope
push
dec
fcomps
test
mov
inc
outsl
enter
repz
or
pop
add
daa
adc
fisubrs
sub
hlt
in
data16
mov
sbb
mul
divl
iret
xor
cmp
fs
ljmp
lahf
mov
mov
lret
out
sbb
fwait
inc
xor
ret
sbb
insb
jecxz
cmpsl
sbb
mov
pop
and
sbb
jl
cmc
dec
fwait
sub
xchg
mov
sbb
int3
lock
cmp
sub
scas
adc
faddl
jg
mov
cmp
iret
push
mov
sti
jbe
pop
sar
fisubl
popf
pusha
pushf
push
sbb
pop
jb
push
filds
xor
aaa
sub
xchg
inc
call
adc
jns
sub
aam
and
fwait
fwait
pop
push
pop
add
int3
add
jbe
sub
jo
jp
jnp
jbe
push
or
push
and
out
pop
loopne
lahf
and
fisttps
xchg
lock
sub
inc
loop
mov
jp
out
fstpl
adc
and
cld
jo
outsl
repz
pop
cmc
jp
push
inc
jns
inc
div
push
mov
jae
inc
lock
ret
ja
xchg
leave
test
hlt
daa
or
rep
mov
add
mov
repnz
fwait
cltd
pop
cli
mov
jno
mov
into
adc
xchg
cs
dec
push
addr16
jl
adc
fdivr
xlat
pop
xchg
cmpsl
xchg
cmpl
pushf
cmp
mov
dec
mov
outsl
add
enter
push
and
jns
add
jl
jbe
les
stos
pop
mov
add
cmc
xor
clc
push
xor
pop
cmc
imulb
mov
lock
test
dec
mov
jae
lods
xchg
inc
lds
inc
test
in
adc
lret
mov
push
mov
int3
dec
jae
jbe
jp
mov
xchg
sarl
xlat
dec
jp
add
cmp
les
jno
mov
mov
vsqrtpd
jbe,pn
cli
cmp
jae
std
or
pxor
ss
lock
rclb
xor
sarb
aaa
xor
or
idivl
jnp
aaa
imul
mov
js
aad
mov
outsw
sbb
sub
in
divl
sub
mov
add
idivl
outsl
daa
mov
lods
sbb
ja
aaa
pop
imul
in
or
orl
repnz
add
inc
pop
mov
pushf
add
icebp
outsb
mov
push
sbb
sub
insl
cmc
add
mov
orb
mov
call
mov
add
jbe
int3
hlt
dec
test
cltd
jmp
das
push
and
imul
iret
lods
push
call
ret
xor
popf
inc
out
add
aaa
jg
inc
fldlg2
idivl
icebp
cmp
sub
sub
loopne
insl
jge
cwtl
hlt
jbe
sub
leave
into
xchg
mov
scas
jg
jae
sub
pop
out
in
or
and
cmc
mov
mov
mov
pop
scas
or
mov
cmc
sub
or
popf
in
or
cmc
adcl
fucomip
xchg
xor
pop
not
jbe
icebp
das
out
rorl
nop
in
int
mov
loope
jbe
add
inc
or
add
mov
addr16
jg
mov
and
or
in
clc
in
push
cmc
sbb
add
cmp
scas
hlt
add
in
push
or
out
hlt
outsl
adc
cmpsb
insl
sub
add
or
mov
jnp
xor
rcrl
sti
sub
sub
or
and
stos
cmp
adc
icebp
xor
sbb
push
rcrb
xchg
xchg
icebp
dec
out
test
lock
into
and
and
scas
or
mov
cltd
add
sbb
and
out
outsb
int3
inc
sub
add
movsb
in
sahf
outsb
xor
aaa
mov
pop
or
push
outsb
sbb
adc
lea
in
xor
mov
mov
push
jne
or
sti
fdiv
inc
and
std
stc
aas
add
push
mov
stc
jle
inc
clc
cld
movl
and
or
hlt
lods
cld
and
lock
dec
scas
gs
lods
mov
pop
ja
rcll
sub
mov
sar
out
mov
hlt
scas
or
or
loop
dec
mov
out
repnz
out
sbb
xchg
lods
out
int3
dec
fldt
test
mov
dec
in
roll
add
call
jb
jl
xor
lods
out
and
push
and
fwait
gs
sbb
and
pop
into
stos
enter
add
pushf
scas
and
arpl
divb
in
and
in
sbb
cmp
lahf
stc
pop
sub
out
int3
test
arpl
push
sahf
test
sbb
rclb
movl
mov
jae
rorl
scas
test
and
insl
insb
jge
fsubrp
sub
jmp
mov
stos
mov
test
test
frstor
cmpsl
imul
out
xor
stc
js
aaa
mov
jne
lret
test
cwtl
sbb
mov
sar
std
test
adc
aam
ficoms
icebp
xchg
dec
ret
dec
mov
xor
loopne
pop
pop
add
cld
pop
inc
pop
mov
cld
mov
stc
push
stc
add
xchg
mov
hlt
pop
enter
push
mulb
mov
je
add
add
cwtl
push
inc
mov
push
push
inc
cltd
adc
mov
fldt
dec
rcll
jno
test
jno
dec
stc
and
or
pop
in
lods
xor
adc
stc
sub
clc
hlt
ret
jo
sbbb
movsl
stos
pop
xor
cmc
out
and
cmpsl
add
jno
sbb
or
into
cld
hlt
out
ja
push
in
dec
xor
es
dec
add
dec
mov
into
pop
daa
add
jle
int3
ds
sbb
faddl
or
sbb
hlt
sbb
test
sti
out
jb
js
add
add
jae
cld
cwtl
push
dec
and
test
outsb
cs
sub
imul
and
imulb
jno
in
cmp
daa
outsl
sub
out
in
add
repz
lret
or
adc
sub
xchg
outsl
push
mov
jmp
pop
fnstsw
jnp
andb
int
add
add
inc
and
cmp
test
ret
mov
pop
adc
stc
js
inc
mov
movsb
add
aas
xchg
lret
aas
jmp
sub
sub
push
repz
mov
or
mov
xor
jne
aam
daa
and
xor
xor
scas
scas
dec
jmp
jmp
inc
je
fwait
or
or
lea
lahf
jns
xchg
negl
and
bound
inc
jle
cmp
or
stos
inc
jmp
roll
add
sub
jg
jb
cld
xchg
add
sti
lods
xchg
mov
cmp
jg
inc
add
repz
push
cmc
cmp
mov
mov
inc
or
enter
dec
pop
mov
jnp
push
sub
sub
xchg
or
pop
or
add
arpl
adc
push
xchg
inc
cmp
lret
add
addb
pop
inc
jle
cmp
and
mov
mov
call
inc
cmpl
cmpsb
dec
and
inc
pop
out
mov
jno
dec
lea
adc
jbe
xchg
icebp
push
add
push
cmp
in
les
mov
testl
ss
insb
enter
push
jbe
sahf
adc
lret
gs
or
jle
mov
fbld
sarb
aam
fdivr
fdivrl
loopne
in
call
pushf
sub
repnz
mov
jb
rcr
mov
rcrl
shr
dec
push
mov
xor
cs
mov
pop
scas
mov
mov
mov
sub
or
or
xor
and
sub
scas
mov
ja
cmp
pop
dec
ret
popl
ljmp
scas
out
xchg
lock
mov
jmp
xlat
sbb
lcall
pop
add
sarl
insl
push
movsb
add
pop
mov
lret
and
hlt
xchg
es
jl
inc
xchg
mov
mov
push
push
push
mov
xchg
mov
or
jl
xchg
or
cmp
dec
xchg
les
dec
xchg
jno
xchg
add
scas
repz
mov
nop
or
mov
cmc
mov
leave
mov
push
cmpb
mov
ss
mov
push
mov
ret
scas
dec
mov
add
jo
int3
fbstp
mov
pop
jo
pop
out
dec
jnp
adc
push
add
cmp
sti
or
jo
mov
roll
lea
push
lds
popa
cs
loopne,pt
xor
aam
in
pop
push
in
int
pop
int3
mov
movl
or
nop
push
jno
xor
lock
jb
or
inc
pop
call
mov
call
repnz
sarb
mov
clc
shlb
stos
jb
cs
push
jno
cltd
fcom
dec
sub
std
cmp
clc
xor
dec
es
mov
jns
scas
lods
in
out
xor
movsb
outsl
push
add
cmp
lahf
add
push
sub
pop
fildl
add
sbb
fnstenv
mov
enter
sti
insl
sub
adc
in
adc
dec
shrb
hlt
clc
std
ja
jae
xor
lods
jl
loope
cld
mov
pop
hlt
sbb
jae
cld
sbb
dec
fwait
outsl
pop
jae
jbe
cmp
jae
cld
cmp
dec
mov
add
xchg
sub
sub
dec
stos
das
lea
sub
imul
scas
in
and
push
out
in
mov
push
outsl
in
xchg
insl
xor
sbb
inc
pop
cmp
icebp
imul
push
mov
sub
mov
and
ja
in
add
mov
mov
cmp
mov
mov
ds
cmp
xchg
inc
mov
incb
pop
xor
lcall
insb
in
jb
adc
adc
arpl
rcrl
sbb
stc
std
add
mov
sbb
cmp
outsb
loop
stc
aas
outsb
lret
cs
imul
rol
movb
dec
dec
pop
arpl
xor
mov
add
aam
repz
cmp
xchg
repnz
jmp
shrl
pushf
shlb
pushf
jo
add
or
cmp
pop
pop
pop
push
repnz
je
lods
int
out
in
or
sti
cmp
mov
ja
fwait
sub
pop
adc
or
stc
xor
jnp
inc
xor
mov
cmp
or
out
fstpt
js
pop
insl
pop
sub
mov
sbb
pop
mov
scas
mov
sub
mov
roll
inc
cld
sti
sbb
mov
pop
imul
icebp
xchg
jns
movsl
cld
lods
mov
popf
sub
mov
or
hlt
jne
or
movsb
and
andb
sub
cs
inc
xor
mov
in
sti
imul
outsb
std
inc
insl
cmpsl
and
push
cmp
das
xor
sub
clc
insb
push
inc
xchg
sbb
or
lret
enter
stos
jmp
lods
push
xchg
sub
push
repnz
or
jb
adc
in
bound
test
jg
std
mov
sub
insl
push
sub
cmp
out
push
call
clc
outsl
loop
lods
xchg
es
jle
mov
stc
dec
pop
icebp
addr16
lods
lods
test
sbb
das
lahf
lods
cmp
imulb
mov
pop
fsub
repz
push
sbb
mov
adc
cmp
xchg
daa
iret
test
jae
out
insl
sti
adc
cmp
or
outsl
mov
inc
out
jb
mov
ljmp
xchg
and
push
mov
mov
pop
pushf
arpl
jnp
sar
nop
movl
call
in
push
lods
mov
imul
roll
in
mov
nop
mov
add
mov
insl
cmp
test
test
adc
cmp
test
pop
punpcklbw
adc
add
cmp
or
imul
and
out
xchg
jl
dec
mov
outsb
lods
sub
in
std
mov
and
imul
dec
dec
divb
pxor
out
cmpb
add
adc
stc
in
leave
sub
cltd
cmpb
or
cmc
jle
cli
or
in
test
push
movsl
sbb
xor
dec
and
gs
out
or
push
lds
in
mov
outsb
imul
xor
test
cs
pop
cmc
cld
cmp
add
and
pushl
jae
pop
lock
mov
pop
pop
hlt
out
mov
test
std
xor
cmp
sub
cli
into
and
cld
mov
sbb
mov
sti
sbb
adc
mov
add
dec
jle
jg
inc
repz
cmp
inc
or
sub
int3
mov
nop
fdivl
pop
jge
sti
testb
in
and
cwtl
fdivr
ss
pcmpgtb
sub
sti
push
xor
repz
cltd
cmp
testl
mov
sbb
std
dec
lock
pop
mov
mov
xchg
dec
nop
jbe
popa
push
je
or
ljmp
inc
rcll
stc
scas
iret
pop
cli
sub
mov
insl
adcl
sub
dec
mov
lret
stc
ja
and
jmp
adc
and
cmpb
inc
addl
jo
test
in
add
pop
mov
imul
pop
fistl
sbb
mov
iret
daa
leave
daa
and
xlat
adc
push
repz
cmpsl
notl
fs
mov
aaa
jge
in
aad
jge
stc
mov
fcompl
rcrb
mov
repz
xor
lods
xor
ja
or
mov
not
pop
sar
int
and
sti
adc
lret
and
mov
insb
xchg
dec
and
repz
test
mov
xchg
push
in
addb
jnp
mov
inc
cld
test
sbb
psubq
adc
scas
imul
dec
scas
leave
push
repz
stc
ret
hlt
pop
stc
test
test
add
cmc
lcall
sbb
lret
inc
cmpsl
or
and
dec
mov
daa
dec
sahf
push
aas
int3
ss
movsb
adc
jmp
mov
ret
ljmp
loop
sahf
fwait
mov
imul
mov
imull
xor
ss
lcall
ljmp
add
aaa
lock
in
aam
mov
stos
cmp
sbb
jmp
pop
sub
leave
data16
movsb
cmpsl
sti
mov
les
adc
and
dec
shl
sbb
xor
pop
push
aaa
sti
fucomp
sbb
int
mov
test
sub
repnz
movsl
cltd
and
sahf
adc
mov
push
repz
into
cmc
loopne
in
mov
outsb
sti
rolb
push
jmp
and
add
repz
insl
jmp
add
mov
adcb
cltd
fidivl
sbb
and
or
mov
cld
and
jmp
out
mov
adc
cmc
pop
nop
sti
sub
shll
in
jmp
lods
or
mov
testb
pop
andl
data16
jmp
sub
ds
jp
sbb
sub
push
icebp
call
xchg
xchg
jb
push
dec
and
dec
out
jmp
pop
dec
pop
mov
or
movsb
pop
loop
jmp
jae
inc
iret
jle
dec
stos
scas
sbb
xor
sub
arpl
jge
push
clc
xor
sub
cmp
rcrl
mov
jo
imul
stos
mov
popf
sbb
sbb
pop
stos
mov
shrb
fisubrs
or
mov
cmpsb
adc
push
xchg
sti
lcall
inc
sub
dec
or
inc
or
push
sahf
lods
sbb
lcall
mov
inc
adc
icebp
inc
fstps
sub
dec
gs
imul
or
aam
and
or
idivl
xor
clc
in
or
or
push
shlb
or
nop
stos
pop
decl
std
in
lock
stos
pop
movl
push
enter
pop
leave
je
daa
sahf
mov
imul
or
mov
or
push
jle
ret
aaa
bnd
and
sahf
add
jo
mov
or
adc
loope
imul
dec
outsb
daa
sub
sub
inc
xor
enter
into
pop
sbb
inc
push
add
cld
mov
dec
mov
xor
aas
xchg
mov
inc
hlt
add
add
push
sub
xchg
orl
lcall
dec
leave
inc
mov
push
sbb
outsb
mov
cmp
clc
into
lea
xor
fldenv
add
sub
adc
lcall
cmp
cmpsl
repnz
pop
cld
push
jge
jp
insl
pop
push
pop
push
mov
clc
mov
das
mov
lea
add
mov
mov
pop
and
cmc
jl
xor
jle
into
pushf
cmp
push
mov
and
jnp
jae
adc
jae
adc
jge
int
sub
sbb
and
cmc
cmpsl
in
repz
aam
movsb
in
pop
and
cmp
out
bound
hlt
stos
dec
xor
imul
adc
add
push
cmp
add
push
pushf
inc
aaa
icebp
pop
dec
lret
repz
clc
or
adc
js
lea
fsubl
jne
sub
adc
jg
sub
out
ficomps
paddb
repnz
add
sbb
aam
aad
aas
cmp
std
dec
push
push
push
dec
add
sbb
je
hlt
lods
popf
dec
sub
sub
ja
jne
js
cmc
and
ss
nop
rclb
hlt
sar
test
dec
lcall
and
stc
notl
js
pop
mov
and
icebp
mov
lahf
aaa
xchg
out
repz
mov
fwait
popf
adc
or
cld
and
mov
jns
jmp
xchg
sti
jecxz
and
fsubl
aad
adc
pop
aad
das
jae
jl
fistl
es
popf
push
pop
dec
fbld
sbb
pop
and
pusha
out
mov
xor
sub
scas
sbb
fldenv
jnp
cltd
or
lahf
mov
dec
repz
clc
std
xor
scas
rcl
sub
and
test
sti
ja
inc
sub
das
jno
jl
sbb
xchg
jne
sub
scas
lret
pop
sbb
je
adc
mov
clc
adc
add
sbb
test
jb
mov
cmp
mov
popf
jecxz
popf
mov
push
movsl
insb
inc
fst
std
scas
outsb
loopne
fnstcw
pand
dec
ja
sti
cmp
imul
sbb
push
mull
scas
sub
ds
sbb
test
rorl
sub
movntps
xor
out
inc
jns
dec
in
sub
repnz
in
dec
cmp
xor
iret
pushf
cmc
insb
fucomi
jae
pop
jle
inc
mov
insl
sub
imul
out
add
dec
mov
cld
imul
std
out
xchg
dec
sbb
fmul
in
inc
inc
test
jbe
loope
mov
popa
cwtl
ret
sub
push
cwtl
cld
pusha
sub
aam
sbb
push
add
out
subb
mov
out
push
mov
pop
pop
cltd
mov
iret
jnp
sub
jmp
sbb
mov
mov
or
pop
pushf
sub
inc
xor
jmp
xchg
lahf
pushf
cwtl
adc
andb
jl
mov
pop
add
sbb
insb
sub
sbb
push
pop
gs
cltd
ret
push
clc
xlat
xchg
pop
daa
pop
sbb
into
sub
lods
repz
imul
add
lea
sub
shrl
rcl
push
jb
add
mov
sub
dec
aam
pop
mov
stc
jl
stc
shlb
xchg
outsb
jcxz
mov
idivl
jecxz
or
jae
cwtl
loope
mov
sbb
popf
sahf
mov
call
xor
cmp
sahf
daa
pop
sbb
sbb
xor
push
dec
mov
jnp
mov
mov
jns
idivb
dec
or
jb
fcmovbe
jns
dec
in
jns
sbb
je
pop
iret
adc
pusha
xor
fwait
and
flds
jnp
into
sub
in
xchg
cmp
dec
and
dec
add
mov
add
jb
shll
dec
mov
testl
xor
outsl
or
inc
fidivl
enter
xchg
jge
add
cmc
or
pop
out
or
mov
cmp
insb
pop
and
mov
and
sti
testl
sub
xor
insb
cmp
jp
shlb
push
jnp
mov
adc
pop
ret
xor
in
repz
inc
cld
popf
add
in
in
test
imul
dec
xor
decl
push
sbb
hlt
enter
out
sub
mov
mov
jne
jle
pop
icebp
jbe
stc
push
je
pop
lds
pop
xor
addr16
setp
push
mov
stc
sbb
sti
sbb
out
xchg
add
jmp
sub
xchg
jo
das
ja
and
lods
jp
scas
pop
pop
imul
shll
out
or
icebp
mov
xchg
cli
add
insl
or
dec
rep
imul
sbb
int3
cwtl
icebp
cld
xor
sti
fmull
dec
jae
sti
mov
negl
addr16
pop
test
pop
aaa
bndldx
cmp
sti
or
ds
or
mov
stos
stos
cli
mov
fbstp
and
push
daa
fildll
mov
mov
or
xor
sti
std
ss
mov
ja
xor
sti
stos
cmp
xor
sbb
lock
data16
push
out
jbe
jns
mov
gs
sub
adc
and
aaa
dec
sbb
lea
out
cmc
adc
adc
sti
outsb
sbb
sub
daa
sub
mov
sbb
add
add
cmp
jmp
adc
int
dec
or
pop
mov
push
icebp
pop
in
mov
mov
divl
imull
add
or
pop
xor
fwait
pop
jno
in
repz
imul
movsb
mov
lock
sbb
jl
lcall
add
and
aad
add
cmpsl
xor
aas
sti
cmpsl
cmp
dec
or
sub
repz
icebp
sub
imul
arpl
xor
outsb
fwait
rdmsr
cmp
push
out
jb
push
dec
mov
fs
sbbl
jmp
add
repz
cmp
ja
mov
mov
in
mov
mov
sub
testl
push
mov
cmc
int
test
daa
cmc
pop
or
mov
fwait
add
icebp
in
jne
sub
push
mov
mov
pop
add
imul
scas
sub
lods
adc
js
xor
or
sti
divb
incl
mov
mov
adc
aaa
in
js
inc
icebp
push
repz
jns
dec
in
mov
pop
stc
das
sti
mov
sub
stc
mov
ja
cwtl
adc
sbb
sarb
arpl
cmp
sbb
cmp
or
dec
lcall
cmp
mov
push
out
inc
xor
xor
or
and
daa
and
pop
or
sahf
sub
stc
filds
lea
daa
pop
int
pop
jmp
cmp
out
sub
and
das
in
addr16
vpsllw
sub
add
pop
add
fwait
repz
sahf
in
inc
or
adc
repz
inc
das
aad
and
sub
mov
sub
and
int
incl
mov
adc
or
daa
neg
and
sub
in
out
or
sub
xchg
inc
lock
notl
paddw
gs
dec
and
jmp
cli
rorl
in
repz
and
daa
mov
repz
rcrl
cmc
or
pop
or
sti
dec
xor
or
in
add
pop
add
stc
or
or
or
sti
mov
outsl
or
jmp
stc
and
lea
out
inc
sbb
sti
push
xchg
push
xchg
out
cmc
sti
out
std
mov
iret
repz
dec
mov
adc
and
mov
and
sti
fwait
decl
lock
sub
dec
gs
jmp
sbb
mov
stc
in
adc
xor
dec
stc
adc
lea
adc
sti
dec
and
mov
add
aaa
or
or
std
or
push
and
repz
int3
hlt
sti
jnp
sub
in
sub
imul
adc
call
daa
icebp
add
push
fldl
sbb
repz
xchg
daa
out
mov
ja
sub
pop
mov
jae
adc
add
xchg
div
in
add
enter
das
cld
sar
inc
into
jg
repnz
push
jge
xchg
add
push
sub
jg
das
jl
out
or
pop
negl
sub
add
adc
cmp
add
mov
les
add
push
sti
mov
or
sbb
in
cmp
cmc
pop
arpl
push
out
out
out
and
adc
and
sbb
mov
sbb
mov
pop
clc
push
daa
in
jbe
sbb
sub
repz
insl
push
sbb
mov
or
mov
jecxz
sbb
out
js
cmp
iret
out
sub
or
fwait
adc
fistl
xor
aaa
imull
sbb
cmpxchg
xor
icebp
lret
xor
aad
fwait
psadbw
jnp
js
sbb
and
cmpsl
cmp
std
sbb
sti
xor
mov
sti
scas
dec
daa
mov
pop
jnp
pop
jg
cld
out
ljmp
pop
aas
mov
and
push
in
adc
idivl
sbbb
pop
inc
xchg
das
out
ljmp
push
sbb
sub
xor
lock
icebp
pop
movsb
pop
sub
mov
or
in
jp
call
popa
test
das
xor
lret
daa
pop
or
int3
dec
in
pop
pushf
aaa
movsl
inc
in
repz
or
das
movsb
xchg
in
insb
adc
repnz
call
sub
in
jnp
negb
outsl
in
repz
ja
push
das
shrb
inc
pop
sub
inc
daa
sub
pop
xor
sbb
mov
mov
inc
decb
sti
sub
push
js
mov
sub
mov
cmc
xchg
sbb
cld
repnz
mov
out
sbb
mov
rorl
xchg
addr16
cwtl
icebp
cld
mov
cmp
mov
daa
or
jnp
sti
and
mov
add
testl
pop
addr16
icebp
lret
inc
or
xor
mov
pop
sub
or
clc
fcompp
push
in
xor
jbe
xabort
and
or
sbb
pop
jbe
cld
sbb
sbb
in
pop
das
sub
pop
test
sti
lea
or
sub
jmp
mov
test
invd
add
repz
jg
and
out
and
sub
pop
movb
pop
dec
decl
aaa
imul
rorl
and
dec
adc
jns
aas
jle
repz
dec
jnp
std
and
adc
or
sub
mov
or
pop
xor
push
add
repz
and
sub
sub
and
shr
cmp
cld
sub
in
dec
icebp
out
scas
xor
adc
xchg
lods
push
in
out
das
sbb
ret
sub
and
jnp
cmp
shrl
jnp
pop
mov
in
mov
fwait
jge
lods
out
clc
xor
daa
push
pop
or
dec
repz
out
scas
jg
cmc
out
pop
fnstenv
out
xlat
pop
jnp
mov
xadd
imul
jbe
fldl
fsubrs
and
sub
push
adc
pushf
icebp
adc
in
repz
sarb
test
in
mov
mov
sub
dec
orb
mov
in
add
mov
sub
dec
pushf
and
fsubr
addr16
mov
and
cld
mov
out
aaa
pop
or
lret
mov
or
call
div
and
imul
mov
pop
arpl
into
mov
push
adc
in
std
push
adc
cld
std
mov
add
jl
sti
add
nop
adc
or
dec
adc
and
lahf
movsb
pop
mov
and
adcl
and
daa
out
arpl
mov
arpl
jmp
out
xchg
scas
adc
orb
andl
add
in
adc
je
and
and
daa
push
jg
icebp
push
or
imul
repz
cmc
cmp
and
pop
movsb
mov
mov
in
gs
daa
mov
repnz
add
mov
cmpsl
mov
mov
inc
xchg
out
push
pop
das
push
cmc
div
in
pop
cmp
sbb
inc
stc
inc
jg
in
mov
add
or
mov
inc
gs
sbb
out
jp
cmp
notl
mov
popf
pop
icebp
inc
jle
jge
cmpb
push
icebp
dec
decl
dec
and
inc
xor
outsl
or
sbb
in
pushf
or
icebp
or
add
cmpsl
jge
dec
sbb
std
and
cli
add
adc
repz
repnz
dec
add
mov
xor
and
inc
mov
pop
mov
cli
cld
inc
sbb
jp
test
mov
or
dec
lea
mov
lods
push
cli
int
jo
dec
mov
or
test
jg
aad
imul
pop
cmp
mov
or
or
jmp
out
pushf
mov
rcrl
sti
neg
es
cli
jmp
adc
pop
jecxz
cmc
pop
cli
mov
jmp
stos
adcb
lods
lock
mov
cmpsl
jmp
inc
push
fstpl
jnp
cld
addb
xor
inc
outsb
jae
repnz
mov
stc
ret
into
adc
insl
testl
pop
xor
inc
mov
xcrypt-ofb
cmpsl
imul
outsl
out
xchg
and
lahf
cmp
lock
adc
xchg
and
add
cmpsl
cmc
daa
pop
add
int
testl
add
sub
pop
and
pop
aas
aas
or
jns
or
inc
cld
xor
push
inc
or
xchg
daa
outsl
shr
or
and
push
aaa
sub
sbb
daa
add
jne
or
loop
inc
cld
insl
fwait
pop
lret
push
jae
or
add
and
pop
adc
int
mov
or
out
rcll
mov
push
and
dec
cld
mov
mov
pop
lret
adc
or
sub
add
dec
lods
or
lods
push
icebp
pop
adc
and
outsb
dec
daa
lock
daa
decl
cld
dec
pop
or
dec
test
mov
sbb
adcb
pop
adc
in
sbb
dec
fwait
mov
repz
mwaitx
insb
xchg
icebp
shl
mov
es
out
and
imul
insl
xor
repz
xor
hlt
scas
data16
rcl
repz
mov
dec
cmc
jae
cld
xor
lock
or
repnz
adc
stc
dec
sub
mov
nop
neg
andl
jb
xor
imulb
hlt
jns
mov
push
pop
add
sub
cmp
js
mov
mov
rcll
imul
std
ret
popf
or
sub
stos
ja
push
imul
pop
jae
jnp
jae
cld
sub
dec
daa
outsl
and
sbb
or
or
sti
pop
add
icebp
sarb
cmp
adc
lret
addl
testl
sahf
out
fsubrs
add
stc
repnz
sbb
xor
lock
shr
inc
pop
add
or
mov
loop
push
inc
pop
add
int3
repnz
sub
cwtl
pop
out
stc
pop
repnz
jb
daa
mov
jb
aaa
test
popf
ds
xchg
in
sub
xchg
das
push
out
pop
cmpsl
mov
lods
aad
inc
hlt
gs
repz
jb
aas
arpl
inc
xchg
sbb
mull
out
push
cli
sub
fbld
stos
or
pop
pop
jmp
sbb
int3
mov
mov
out
pop
jmp
repnz
out
jecxz
add
jmp
push
adc
aam
rol
jmp
rol
in
sbb
sbb
sub
lods
fnstsw
or
or
sbb
into
mov
mov
icebp
and
hlt
and
and
mov
mov
adc
adc
adc
rol
jmp
imul
jp
sub
addr16
pop
cmp
jnp
xchg
mov
mov
push
inc
jmp
ds
dec
jae
outsl
lahf
jmp
cmpsb
jb
xor
pop
jmp
data16
orl
adcb
aas
jmp
inc
push
inc
insl
popf
jns
jmp
pushf
js
sub
sub
cmp
jge
mov
mov
dec
cmp
cmp
dec
jne
jno
jmp
movsb
jo
xor
xor
xor
test
nop
adcb
inc
scas
push
inc
push
inc
jecxz
nop
jmp
into
lea
jb
int3
es
call
jns
repz
jo
daa
daa
idiv
cmp
xor
into
mov
add
cmp
or
inc
outsl
or
pop
push
mov
roll
adc
or
xor
add
xchg
gs
daa
dec
cmc
push
outsl
out
mov
inc
dec
push
sbb
mov
cmc
daa
jl
mov
call
or
sti
mov
dec
lcall
pop
push
or
sbb
dec
or
pop
push
daa
mov
jl
cmpsl
push
icebp
push
and
push
stos
popf
mov
incl
in
mov
cmpsl
xchg
out
or
repnz
cmp
inc
and
cmc
ds
or
insl
fsubrp
or
and
and
sub
mov
pop
aaa
sti
aas
or
aad
dec
sti
sbb
xor
or
jle
lds
dec
pop
std
mov
adc
daa
incl
dec
fcompl
xor
incl
dec
mov
xchg
in
aaa
sbb
in
jne
push
jg
out
jae
repz
dec
imulb
lock
sbb
inc
jl
ret
sub
jmp
push
sbb
and
lods
mov
repz
sub
lret
das
into
fisubrl
out
or
out
lods
in
and
cltd
sbb
dec
pop
in
mov
ficomps
jae
add
xchg
icebp
inc
sti
mov
out
loopne
pop
pop
icebp
das
lea
mov
inc
imul
loope
xchg
scas
ret
adc
jne
shl
cmp
roll
and
icebp
rolb
sub
in
xchg
sbb
dec
pop
lret
dec
inc
add
pusha
inc
std
inc
xchg
scas
testl
repz
nop
divl
add
mov
ja
cmp
aas
stos
shrd
aaa
test
mov
sub
sbb
test
xchg
adc
push
mov
cmp
dec
xor
xlat
mov
fucomp
movsb
add
mov
or
cs
mull
icebp
sub
shrb
add
adc
adc
sub
push
fs
mov
sub
xor
sub
mov
subb
push
cld
adc
mov
jo
sbb
pop
daa
lret
mov
cmc
mov
cli
idivl
cmc
loope
or
and
std
jg
je
xor
inc
push
push
in
xor
inc
mov
inc
inc
add
xor
addr16
jae
aad
repnz
enter
orl
and
out
incl
out
add
ss
pop
xor
aas
lock
stos
pop
loope
xor
fldcw
push
inc
inc
mov
stc
or
jae
add
inc
enter
adc
cmc
sub
inc
enter
out
notb
push
lods
adc
ds
or
dec
out
push
lods
sti
mov
dec
das
outsl
jnp
sar
loopne
or
in
lds
repz
dec
cld
add
adc
mov
nop
mov
dec
xchg
jae
repz
sar
mov
or
or
adc
dec
dec
arpl
sbb
push
iret
fisttpl
xlat
in
push
or
in
cmp
in
add
std
sar
pop
cmc
push
in
out
sbb
fld
adc
lret
push
sbbl
mov
shrb
push
push
divl
adc
repz
adc
dec
mov
or
mov
sub
cli
cmpsb
call
ss
movsb
shlb
xor
lods
aas
out
inc
aad
dec
test
push
fs
fdivrs
lods
imul
add
iret
push
std
inc
or
mov
sbb
push
fwait
pop
mov
xchg
hlt
xor
xchg
mov
xchg
in
gs
hlt
fisttpll
sbb
pop
std
inc
push
jg
and
shl
inc
xchg
add
lock
test
pop
add
xchg
lds
cli
sbb
mov
nop
xchg
cmc
mov
and
and
sbb
cmp
fs
sub
cmpsl
clc
mov
js
ja
and
mov
cld
mov
inc
cmp
mov
in
out
or
popa
mov
mov
sub
add
xor
pop
xorb
xor
mov
adc
cld
std
add
pop
shrl
testl
es
shrb
mov
cld
mov
cmp
jbe
cmc
jne
sgdtl
jp
inc
lods
in
sbb
cld
stc
mov
sbb
in
test
mov
cmpsb
adc
lock
mov
jg
out
jle
aaa
inc
jnp
loope
mov
lods
ds
cmp
inc
subb
cs
mov
jecxz
inc
mov
push
jmp
fldl
test
dec
inc
cld
stos
enter
inc
dec
icebp
inc
jle
sub
ljmp
pop
adc
inc
jg
inc
outsb
out
mov
stos
cmpsl
and
mov
sarb
mov
xchg
ret
cld
insb
xchg
int3
mov
daa
and
div
loope
jne
jle
fiadds
xor
std
add
shlb
xor
call
or
inc
cmp
out
in
jle
out
enter
into
mov
dec
jbe
cld
loope
xchg
daa
orl
lods
lret
cmp
out
fcomps
je
cltd
sub
movsl
sub
dec
mov
out
dec
push
hlt
inc
mov
pop
dec
sub
rolb
fsubrp
lahf
and
inc
adc
dec
jnp
or
popf
and
or
jnp
or
xor
dec
mov
xlat
jno
pop
hlt
adc
jnp
dec
jnp
or
shl
out
cmp
movsl
pop
fidivl
cld
inc
adc
jbe
in
jg
in
jne
push
cld
mull
mov
dec
icebp
or
xchg
mov
xor
mov
push
jge
sub
and
out
outsl
push
out
or
sbb
cld
push
xchg
dec
mov
mov
fdivrs
cmpsl
loope
dec
mov
sti
xlat
push
dec
and
std
xchg
cmp
adc
pop
lret
add
push
jbe
or
xor
lahf
xchg
imul
gs
mov
sub
sbb
mov
inc
cli
cmc
cwtl
imul
or
sub
insb
dec
fwait
cmp
repz
or
push
xorl
das
add
sub
daa
and
sbb
add
mov
push
lret
pop
sbb
or
jb
pop
mov
in
sbb
repz
adc
sbb
adc
mov
or
pop
mov
int3
xchg
add
xor
adc
pop
jge
pop
adc
sub
sbb
adc
lock
push
shr
pop
incl
in
add
sbb
jne
pop
repz
sbb
sbb
mov
mov
test
mov
pop
mov
iret
push
paddusw
fstpl
or
sbb
or
and
sahf
jecxz
xor
pop
jae
jns
hlt
push
adc
or
sbb
pop
mov
xor
pop
mov
dec
out
outsl
jne
or
dec
fstpt
mov
jle
sbb
pop
add
je
xchg
cmp
icebp
add
or
xlat
or
movsl
sbb
into
scas
sti
mov
cltd
repz
pop
out
test
les
sub
jnp
sbb
shrl
cmc
and
sbb
insl
sub
roll
ret
dec
mov
add
test
push
or
fmuls
add
pslld
jb
xchg
popl
scas
bound
mov
sub
inc
stc
cmp
mov
jl
in
fistpl
lock
cmc
movntps
add
push
out
adc
inc
cmc
and
sub
pop
pop
imull
and
dec
add
sub
pop
lods
pop
out
sub
cmp
cmp
push
scas
mov
shrb
and
inc
adc
call
subb
in
imull
inc
xchg
lcall
xchg
and
fimull
sar
jne
or
sub
adc
js
sub
dec
cmc
stc
in
push
xchg
es
push
cmc
dec
jo
and
hlt
push
sbb
je
rclb
icebp
sbb
rorb
loopne
push
les
mov
shll
stc
mov
or
xor
out
adc
xor
fidivs
mov
sub
push
lcall
sub
or
inc
pop
push
mov
dec
stc
pop
lods
cmp
pop
shlb
add
and
pop
inc
pop
push
lods
pop
movsb
jmp
inc
lds
fsubrs
imul
mov
arpl
in
scas
sbb
dec
popf
mov
jg
mov
and
jbe
shll
and
mov
ret
xlat
adc
mov
std
push
outsb
or
or
jno
dec
les
push
in
push
cmp
stc
mov
lods
cmc
lcall
ret
pop
cmp
push
ljmp
sub
or
or
dec
adc
into
divl
add
aaa
adc
hlt
sub
std
jae
int3
pop
jle
sarb
mov
pop
add
mov
ffreep
jb
and
pushf
divl
in
repz
xchg
repz
cld
add
sub
cld
clc
adc
mov
je
cld
mov
nop
and
mov
icebp
cmp
jne
jge
jg
sti
pop
sbb
aas
das
xchg
jae
jae
aaa
sbb
inc
dec
sbb
das
lret
pop
mov
sbb
jge
int
sbb
inc
or
je
out
popa
xchg
cmpsb
std
sti
adc
cmp
test
repz
mov
sbb
cmc
int
jae
sar
mov
dec
mov
icebp
push
sub
jmp
sub
iret
add
xchg
icebp
cmpsl
mov
pop
inc
or
add
sub
in
push
in
xorl
negl
testb
mov
jnp
or
push
or
or
jnp
sub
mov
inc
mov
and
and
cld
push
sbb
inc
jle
cmp
cmp
shll
fwait
shrb
imul
stc
std
cmp
cmp
out
or
rorb
fwait
adc
fstpl
xor
out
lahf
lods
dec
push
and
pop
out
das
shlb
inc
stc
sbb
push
pop
icebp
sbb
push
sbb
pusha
sub
std
fsubr
imull
ja
sub
xchg
or
jae
cld
int
xchg
out
gs
imul
mov
xor
cmovle
fcomps
cmp
std
xchg
adc
sbb
outsl
jl
xchg
add
outsl
push
vxorps
add
lock
fwait
outsb
repnz
or
out
nop
ficoms
push
std
push
mov
addb
shrb
mov
cs
jnp
bound
aaa
jle
stc
test
sbb
sub
daa
negl
sbb
xor
enter
leave
sti
fcomip
sub
jmp
icebp
and
adc
mov
leave
add
push
xchg
sub
inc
push
rorb
sbb
pushl
or
or
aas
sti
sti
sarb
pop
push
jbe
ja
dec
xchg
mov
xor
xchg
test
add
jbe
xchg
ret
dec
out
data16
out
sti
imul
pop
push
sahf
lods
xor
mov
jns
out
dec
cmp
hlt
stc
std
sub
jae
cld
cmp
dec
jp
sti
hlt
js
or
icebp
add
push
repz
push
and
das
sbb
or
sbb
add
mov
jae
and
adc
nop
sti
dec
out
sbb
jp
or
in
in
lods
sbb
inc
outsl
sbb
and
daa
or
out
out
pushf
jae
repz
add
sbb
xchg
das
aad
sub
repz
sub
popa
push
sub
imul
push
add
pushf
out
shr
in
repz
pop
adcl
cmp
adc
ljmp
out
ret
sub
gs
push
add
cld
mov
adc
sti
outsl
sbb
adc
or
hlt
sti
sub
pop
repz
mov
pop
aaa
xchg
push
cmp
cmp
sbb
xor
sub
jle
or
push
adc
dec
dec
jne
sbb
push
xor
or
call
mov
cmp
lods
icebp
fdivs
pop
sub
xor
hlt
clc
add
jg
lea
adc
in
xchg
arpl
dec
das
shll
cmpsb
or
pop
shl
sub
dec
or
add
ja
sbb
dec
loop
loope
gs
adcb
jno
inc
or
jecxz
ja
mov
jae
or
add
inc
inc
cmp
lea
xor
and
movsl
mov
leave
cld
mov
pop
sub
mov
repnz
cmp
inc
adc
cs
imul
clc
sti
xor
leave
loop
xchg
scas
mov
dec
or
inc
cmpsb
pop
and
push
dec
sbb
movntps
sub
imul
adc
sub
insb
sub
xor
adc
lahf
and
sti
and
sub
cld
into
insb
push
inc
and
push
das
or
das
mov
cltd
dec
mov
inc
and
idiv
jnp
dec
enter
adc
add
in
int3
adc
add
mov
jg
fwait
daa
and
mov
das
lods
add
outsl
aaa
out
cmpsl
xchg
mov
jnp
jp
fcmovnb
xchg
les
add
stos
mov
insl
je
mov
enter
cld
mov
jnp
mov
out
ja
jg
mov
cmp
bound
push
mov
je
lcall
and
xor
dec
repnz
cli
repnz
stos
push
icebp
add
dec
or
cmp
dec
add
repnz
fwait
lods
test
push
or
mov
xchg
xchg
idivb
mov
inc
mov
push
pop
mov
dec
popa
push
cld
jmp
adc
or
cmp
xchg
in
sub
sub
cmp
repz
std
mov
push
out
and
sub
add
std
push
dec
sbb
testb
lcall
inc
add
jae
cld
and
push
cmp
sub
or
icebp
jg
icebp
lea
cli
add
sbb
or
adc
ja
adc
sbb
in
test
cld
add
dec
or
and
cmc
cli
xor
adc
or
xchg
cmovno
in
hlt
jl
add
jl
or
scas
out
stc
cmc
arpl
clc
outsb
out
scas
js
enter
mov
repz
pop
mov
fst
enter
lods
psllq
mov
mov
fldcw
cmp
add
push
psubw
rorl
ljmp
xor
test
or
popl
cmp
inc
mov
das
ds
pop
jmp
das
jl
sbb
jnp
hlt
add
cmp
adc
mov
in
add
repz
int3
cld
cmc
inc
dec
cld
mov
in
cli
clc
clc
std
loope
in
xchg
cld
xchg
jl
mov
add
iret
roll
add
insl
rcrl
dec
shr
cmp
div
cmp
lods
repz
or
inc
insl
sahf
mov
inc
loop
out
out
mov
mov
pop
jnp
loopne
push
xor
add
add
cld
arpl
aaa
addb
jno
and
stc
xchg
call
inc
pop
or
pushf
dec
outsb
cs
jle
ss
sti
idivb
outsl
adc
divl
ja
outsl
ss
comiss
jb
xchg
bnd
jp
cmpsb
mov
pop
stc
pmaddwd
mov
or
insl
les
add
xchg
test
inc
cmp
or
stc
aad
mov
stc
sbb
adc
jns
inc
sbb
mov
shll
cmc
clc
roll
rol
sbb
clc
cltd
mov
mov
cmpsb
sub
sbb
and
out
fadds
mov
incl
add
hlt
add
test
lahf
in
hlt
mov
cmp
push
pusha
push
jae
mull
mov
cwtl
ret
pop
insb
aam
xchg
movsl
aad
inc
lcall
cmp
jnp
inc
pop
out
or
push
arpl
jnp
enter
inc
dec
testb
int3
push
test
ss
or
jbe,pt
fwait
push
das
jb
sbb
int
mov
inc
jg
push
mov
add
cmp
scas
xor
jns
sti
xor
js
jg
lahf
leave
pop
jp
out
mov
cmp
das
and
enter
and
pop
jmp
fnstcw
xor
jl
cmc
inc
mov
pop
mov
mov
add
scas
pop
jp
sub
nop
jnp
sub
sbb
lret
jp
ret
dec
xchg
aaa
pop
sbb
inc
jne
add
mov
dec
sbb
xchg
andl
ja
test
ljmp
cwtl
sbb
fdiv
jecxz
scas
or
or
stos
out
es
ret
xchg
in
xchg
out
pop
jnp
mov
mov
icebp
push
enter
in
pop
cwtl
lds
notl
mov
ljmp
jbe
push
adc
test
cwtl
add
xor
les
push
out
pop
push
cmc
cmc
mov
xchg
icebp
bnd
pop
sub
out
and
das
and
jg
icebp
mov
icebp
pop
pushf
and
inc
gs
adc
insb
push
and
std
fwait
mov
out
out
pop
in
cmp
imul
notl
or
repz
stc
sbb
lods
in
and
sbb
sub
mov
add
pop
jo
lods
stos
sbb
cli
stos
mov
scas
fcomi
stc
dec
ja
sub
push
or
stos
jmp
daa
lea
out
add
lcall
push
pop
icebp
xchg
mov
jae
xor
mov
jge
rorb
push
push
out
dec
pushf
xlat
insb
mov
sbb
fdivp
lahf
jge
popa
lods
add
incb
cmp
cmp
dec
fs
hlt
out
ljmp
arpl
lret
ret
cmc
ucomiss
and
add
or
das
or
jle
add
cmp
mov
fistpll
mov
mov
lods
or
hlt
xchg
ss
mov
fnsave
add
ret
push
out
dec
mov
jo
mov
out
fwait
cli
jmp
call
cmp
sahf
das
add
repnz
mov
popa
test
mov
das
mov
add
pop
aad
mov
and
add
or
imul
call
cmp
leave
cmp
sub
jns
out
bnd
mov
and
or
iret
or
push
jg
or
or
sub
ljmp
or
es
fimuls
stc
xor
out
inc
imul
mov
repz
iret
data16
fildll
mov
std
js
insl
negl
and
xchg
cmp
jnp
pop
jae
push
repz
or
xchg
int3
cwtl
out
scas
sbb
xchg
mul
or
in
mov
jo
pop
daa
adc
insb
stos
rclb
adc
lock
out
daa
mov
sub
sub
fscale
mov
in
sub
lods
imul
mov
pmaxsw
cs
outsb
mov
scas
jecxz
imul
lock
xor
int
icebp
mov
scas
sbb
imull
add
sbb
cmpsl
in
mov
sub
insb
int
lods
aam
lea
inc
mul
sbb
fiaddl
outsb
leave
cmc
popf
lods
out
and
repz
or
in
xor
mov
cmc
xor
add
and
stc
push
icebp
std
lock
popf
std
add
iret
adc
rclb
arpl
push
jle
or
insl
cld
sub
add
iret
icebp
pop
repz
jp
jae
mov
push
lock
cld
lock
lock
adc
pop
mov
dec
cld
adc
lock
daa
mov
and
sbb
and
adc
out
xchg
out
sbb
cmc
mov
stc
lock
jmp
add
or
cld
or
aad
cld
pop
mov
and
fcomip
jp
xor
xlat
bound
add
repz
gs
lock
incl
cld
xor
lock
hlt
and
sbbb
sbb
pop
or
sti
or
pop
dec
imul
push
lock
pop
xchg
mov
incl
fbld
sarl
out
movhps
lock
pop
icebp
mov
add
and
repz
gs
lock
imul
mov
sti
jno
or
adc
lock
jae
sbbb
fisttps
adc
mov
rorl
xor
icebp
sbb
sti
lock
sbb
xchg
mov
add
popf
and
mov
mov
stc
je
sti
fs
jns
jo
fadds
and
cld
push
vminsd
jmp
fmuls
add
adc
add
mov
and
sbb
cmp
mov
xchg
das
sti
sbb
or
mov
pop
lock
btc
mov
sbb
jmp
lcall
cld
pop
jg
lock
cmpl
mov
pop
sbb
popf
pop
decl
jp
cld
adc
lock
and
in
sub
test
inc
sbb
cld
insb
sub
adc
xor
cmc
mov
sti
outsl
cwtl
xchg
insl
cld
add
pushl
cld
sbb
and
cld
in
fldenv
cmpsl
mov
in
adc
cld
lods
std
flds
test
rolb
xor
add
ret
cld
adc
call
andb
lock
out
je
or
iret
repz
sar
jp
std
sti
sub
add
or
mov
mov
pop
add
popf
add
addl
sub
adc
out
out
pop
add
stc
pop
add
add
pop
dec
mulps
out
xor
sbb
add
iret
pop
pop
and
push
adc
lcall
cld
in
in
cltd
add
scas
mov
jmp
cltd
xchg
out
push
std
cltd
jb
cld
add
or
cltd
or
lahf
shr
dec
add
in
pop
cltd
call
and
cmp
xor
mov
sti
or
je
icebp
lock
jge
jp
mov
mov
dec
cld
add
incl
jg
jmp
lcall
cld
xor
mov
jns
mov
or
in
sbb
negl
dec
fwait
std
sbb
dec
cld
add
lock
aad
add
mov
and
pop
out
cmc
in
and
icebp
mov
add
dec
cld
out
lock
jmp
pop
xor
add
adc
jmp
jmp
lock
rcr
jmp
pop
leave
aam
add
lock
mov
jp
hlt
xor
xor
pop
pop
dec
sub
neg
push
sbb
lret
xor
or
daa
and
xor
mov
pop
or
or
iret
in
push
or
sbb
sbb
or
adc
rclb
and
add
lock
popf
std
decl
mov
sbb
gs
sbb
add
or
sbb
jl
pop
cld
xor
jmp
sbb
and
add
pop
iret
repz
xor
xor
pop
fiaddl
inc
add
sti
cld
pop
xchg
lock
xchg
adc
and
xor
xor
cmp
sbb
or
fwait
iret
repz
shr
xor
fwait
dec
and
outsb
cld
adc
popf
or
orl
sub
pop
ja
adc
mov
jp
out
in
fdivrl
rorb
or
fmull
stc
push
lock
in
jle
jne
mov
lock
fcomip
adc
sub
sbb
adc
rcrb
or
stc
lahf
pop
add
sbb
mov
stc
or
or
sbb
imul
shl
pop
mov
jp
mov
into
push
or
sbb
sbb
inc
adc
idivb
pop
sti
pop
and
jg
or
pop
dec
imul
push
lock
jp
pop
inc
add
mov
add
lock
adc
and
sbb
pop
xor
sbb
movsb
sti
inc
or
aad
jnp
pushf
cli
dec
cld
add
incl
cld
and
jp
adc
lock
icebp
jbe
daa
pop
pushf
data16
jmp
sahf
jmp
scas
lea
add
idivl
or
pop
lock
adc
mov
sub
sub
sbb
sbb
push
sub
sbb
icebp
sbb
cmc
lock
mov
daa
out
lcall
adc
rolb
or
pop
or
mov
jae
or
int
sbb
adc
repz
in
enter
xchg
out
adc
lock
pop
or
aas
pushl
lock
cmpsl
daa
mov
adc
lahf
shll
xor
add
lock
imul
insb
sbb
sbbl
cmp
repz
push
shl
add
adc
mov
cld
xor
aaa
fisttpll
lea
lock
std
stos
out
push
hlt
or
sub
add
cmpsl
mov
std
hlt
sub
push
stc
or
push
out
push
ret
out
jg
sti
fwait
add
adc
pop
mov
and
push
mov
pop
and
cmc
push
push
or
dec
sbb
or
dec
mov
and
add
cmpsl
daa
jp
sub
mov
shlb
subb
addr16
call
out
negl
dec
stc
sbb
sub
pop
push
out
lret
std
popf
sub
imul
pop
rcrl
sub
mov
pop
dec
call
pop
scas
and
in
sahf
sbb
lea
push
testl
daa
xchg
add
mov
clc
sub
mov
adcb
push
repz
mov
sti
cli
js
jmp
stc
xor
pop
jl
mov
repnz
xchg
adc
in
adc
sbb
or
pop
cmc
sbb
daa
xchg
or
iret
das
das
iret
mov
lea
icebp
add
push
jae
dec
sub
cmp
inc
lock
or
inc
adc
scas
mov
dec
and
test
pop
xor
cmc
push
repz
std
mulb
pop
add
sti
test
jbe
pop
sbb
testb
pop
std
pop
dec
pop
add
or
push
or
add
sarb
les
aam
mov
mov
std
inc
sbb
pop
ficoms
sti
dec
sub
iret
in
jo
cmc
cmc
jl
mov
in
mov
lea
fnstsw
mov
call
pop
shr
lea
cmc
mov
adc
push
add
mov
out
in
jl
mov
in
test
shrl
or
mov
sub
ja
lods
outsl
cmp
std
icebp
rorb
fstl
or
add
loopne
testl
or
in
and
jb
je
inc
std
cmp
out
testl
fucomp
or
repz
xchg
mov
adc
in
sbb
inc
push
and
push
rclb
jb
xor
pmaddwd
pop
xchg
pop
cmp
imul
push
or
push
in
and
icebp
out
cmc
shrb
or
test
rolb
jb
xor
sti
test
iret
xor
add
xchg
mov
repnz
cmc
in
lock
testl
sbb
xchg
sbb
sbb
loopne
add
mov
add
iret
imull
out
loope
cmc
out
sbb
jnp
sbb
jnp
arpl
loope
test
cmc
mov
add
add
mov
ss
xor
popf
adc
out
lods
mov
std
push
std
inc
and
cmc
pop
dec
cmpsb
insl
sub
inc
adc
cmc
sbb
notl
stc
outsl
lods
mov
dec
std
add
sub
fwait
in
popa
sub
repz
fwait
or
xor
add
add
sub
daa
mov
cmc
inc
sbb
insl
in
sbb
imul
sbb
push
daa
sbb
insb
push
or
rolb
sbb
jle
and
jmp
sti
addl
fstl
xor
cmc
push
or
adc
lds
lea
pop
sbb
xor
pop
push
pop
daa
mov
jp
cli
mov
inc
daa
je
dec
cmc
push
out
shrb
or
stos
xchg
mov
loop
add
pop
subb
xchg
pop
cmc
in
das
or
add
addr16
cli
or
mov
stc
sti
jl
mov
std
pushf
mov
sti
sbb
mov
or
or
mov
stc
push
mov
adc
icebp
popf
std
insb
dec
mov
cld
dec
in
dec
bt
and
int
add
pop
or
pop
or
adc
ret
daa
dec
and
cwtl
in
dec
icebp
std
mov
icebp
mov
std
popf
mov
aam
add
add
imul
out
dec
repz
dec
sub
adc
and
jg
cmc
sbb
sbb
lock
mov
jecxz
repz
mov
dec
sti
scas
mov
dec
add
sahf
hlt
vmptrld
pop
repz
cmp
add
enter
sbb
repnz
add
std
in
jl
mov
xor
sub
das
out
in
in
out
mov
outsl
cmc
mov
jmp
pop
inc
sti
mull
divl
mov
dec
lods
mov
dec
adc
or
sbb
arpl
notl
sti
in
sub
sbb
notl
out
shrb
imull
jl
stc
cld
xor
dec
and
xchg
sbb
sbb
and
dec
adc
cld
xchg
insb
dec
sbb
hlt
popf
std
in
dec
and
cld
movsb
insl
dec
sub
jae
in
in
out
std
out
dec
jae,pn
cld
outsb
testb
jns
out
ret
xchg
cld
das
orb
add
mov
xchg
jae
cld
xor
hlt
mov
xchg
dec
icebp
jae
cld
xor
mov
mov
cld
xor
sub
mov
jno
cmc
jmp
dec
and
push
sbb
sbb
cmpsl
pop
notl
add
sbb
or
or
nop
jl
adc
cli
xchg
jl
sbb
jl
and
jl
insb
pushf
cli
lock
cli
jae
cli
idivl
jl
jl
cmpl
cli
or
cli
jl
adc
jl
sbb
jl
and
jl
sub
lods
iret
out
das
iret
jb
iret
imulb
iret
jns
das
pop
jae
mov
adc
pop
and
mov
lods
jb
mov
insb
cmp
add
adc
addb
adc
addr16
ljmp
push
lock
in
xchg
pop
or
cmp
fwait
inc
sbb
sbb
jle
jmp
cmc
xchg
and
and
or
push
adc
sti
lock
in
add
das
imul
iret
stc
mov
adc
shr
jmp
movsb
sub
cmc
pop
dec
and
cli
adc
adc
sbb
sbb
sub
and
cvtpi2ps
and
scas
jnp
jl
and
dec
orl
cmc
and
aaa
mov
incb
or
or
jp
sbb
pushf
div
fstpl
push
jmp
mov
sbb
cmp
jae
add
ret
outsl
out
hlt
test
cs
dec
jae
cld
dec
scas
dec
dec
mov
dec
outsl
outsl
adc
mov
aam
lock
cld
xor
lea
jns
jmp
cli
or
inc
jae
jnp
jmp
and
cli
scas
jl
jo
mov
idivb
popf
add
push
ret
test
xchg
dec
xor
sbb
rcrl
rcrl
add
jl
cmpsl
insl
in
cmp
bnd
icebp
xor
out
mov
repz
xor
aaa
stc
mov
aas
mov
in
xor
jae
cld
or
hlt
nop
std
sub
or
lcall
xchg
in
mov
and
add
stc
iret
in
xor
lea
xor
xchg
idivl
add
mov
and
adc
stc
adc
popa
jmp
out
xor
je
inc
add
inc
or
cmc
xchg
pop
mov
mov
sbb
sub
add
xor
jmp
cmc
xchg
pop
push
add
lock
add
in
inc
sahf
ja
popa
hlt
imul
and
xchg
addr16
outsb
stc
jmp
cmc
xor
mov
lcall
or
adc
daa
fists
idivl
imul
daa
mov
loopne
cmc
and
push
push
jg
add
pop
or
fmull
xchg
femms
or
mov
jl
arpl
outsb
test
mov
adc
iret
out
fcomip
das
iret
mov
stc
sti
call
cmp
add
fcomip
decl
push
sbb
jmp
std
push
andps
dec
sbb
pop
aad
dec
and
and
and
mov
divl
sbb
and
stc
mov
out
stc
adc
push
cmc
add
ljmp
xor
out
popf
dec
add
pop
cmc
inc
sub
daa
mov
mov
pop
pop
daa
pop
mov
das
xor
add
lret
cld
in
pop
push
or
add
sti
add
and
pop
icebp
adc
cmc
popf
or
lds
sbb
std
das
sbb
adc
add
in
xchg
and
inc
adc
ljmp
outsl
or
xchg
cmc
dec
mull
mov
pushl
clc
std
ja
les
xchg
dec
addr16
or
cmpsl
les
sbb
out
movq
in
pop
dec
fnstsw
add
pop
insl
cmpsl
daa
mov
nop
and
fwait
call
out
pop
xlat
das
call
loop
in
outsl
or
adc
outsl
sub
into
sbb
adc
and
push
repz
and
sub
jmp
or
mov
or
sub
sub
mov
pop
add
lret
in
scas
adc
repnz
mov
cwtl
sub
dec
imul
add
aad
push
add
push
out
ret
or
jl
cmpsl
lock
cmp
testl
dec
or
adc
dec
sti
sbb
int
add
in
cmovge
mov
fisttpll
jmp
in
xor
fwait
sbb
mov
xchg
dec
sbb
or
dec
mov
pop
lea
cld
add
rcrb
mov
inc
setb
jb
xor
leave
mov
mov
dec
xor
sbb
aam
or
mov
or
mov
frstor
or
insb
jo
in
or
ja
fnstsw
or
shlb
daa
or
or
or
push
or
add
das
xor
fmuls
jae
cld
mov
dec
hlt
outsl
and
xor
jecxz
je
movsl
cld
mov
dec
cmc
lock
xor
std
jo
mov
xor
lahf
hlt
ss
mov
cld
mov
dec
imull
hlt
aaa
std
les
stc
sbb
jl
arpl
mov
icebp
xchg
hlt
sbb
rorb
xlat
or
fimuls
in
fwait
lods
icebp
aaa
das
mov
mov
cmp
aaa
inc
mov
dec
mov
push
mov
pop
mov
jo
jl
arpl
icebp
add
xor
icebp
out
addr16
mov
les
jg
cmc
sbb
sti
add
push
cmc
add
jg
in
mov
and
stc
mov
adc
packuswb
ljmp
mov
and
mov
out
xor
xchg
or
mov
mov
mov
sub
sbb
mov
xor
dec
and
ljmp
mov
xacquire
jno
pop
or
jb
testb
mov
fnsave
fnsave
or
mov
fldl
fldl
mov
emms
in
rclb
xchg
std
push
xchg
add
sbb
lahf
or
and
lods
std
stos
dec
imul
or
idivl
stc
ret
mov
mov
std
into
pop
repnz
andb
adc
in
or
pop
ja
sbb
xor
lea
sti
sbb
orb
or
xor
in
outsl
sub
push
in
mov
je
in
outsl
aaa
cmp
icebp
mov
sti
jae
adc
jg
pop
dec
pop
popf
or
add
push
cli
or
sub
add
adc
add
mov
and
in
jb
in
or
repz
leave
stc
sbb
jl
xchg
sti
mov
ja
add
mov
inc
or
or
jno
popf
adc
inc
sbb
and
and
jge
out
into
mov
jmp
sub
adc
iret
cmc
out
mov
sti
mov
jo
push
add
lock
add
mov
cmc
mov
sti
inc
adc
insl
sub
adc
stc
aas
pop
mov
daa
scas
mov
or
repz
in
or
idivl
repz
dec
sti
adc
mull
jnp
inc
mov
cmp
xchg
adc
and
pop
lea
or
cmp
out
stos
fldenv
popf
imul
out
call
xor
push
cld
ret
xchg
add
cld
pop
lods
shl
or
aaa
pop
mov
repz
cld
sbb
outsl
imul
jno
pop
sti
pop
in
jl
cli
repz
pop
xor
repz
cwtl
mov
cwtl
mov
lea
pop
add
mov
pop
and
xorb
cltd
pop
add
and
sub
xor
sbbb
and
or
fiaddl
das
imul
push
in
xor
mov
adc
or
loop
outsl
or
or
maxps
repz
out
lock
jae
pop
lds
xor
xor
jmp
cmc
inc
ljmp
scas
mov
dec
imul
dec
and
loop
add
out
lods
sbb
int
stc
cmc
push
out
jg
add
icebp
mov
divl
vmptrld
sbb
and
std
daa
mov
or
rcl
cli
xchg
orb
mov
shlb
xor
stc
pop
jl
cli
in
mov
popf
repz
inc
sbb
std
and
xor
popf
or
pop
psadbw
decl
pop
cli
or
pop
xchg
dec
in
sub
pop
hlt
jge
mov
dec
repz
mov
cmc
cmc
sbb
fnstenv
das
add
dec
add
pop
hlt
std
xor
mov
in
in
rolb
imul
sysret
orl
sbb
pop
mov
lods
and
sbb
dec
fildll
jecxz
mov
scas
or
mov
scas
aas
and
daa
dec
movsl
sbb
out
add
xor
cmp
sub
sbb
mov
cld
inc
sbb
adc
adc
mov
aaa
or
mov
out
or
ret
and
sub
mov
dec
inc
icebp
xchg
shlb
cmc
or
xor
xlat
mov
or
popa
or
push
lods
je
xchg
mov
mov
jb
mov
mov
jb
jbe
pop
sbb
je
or
testl
jb
mov
jmp
loop,pn
pmaddwd
or
sbb
out
lock
mov
mov
mov
stc
adc
add
subb
sbb
push
cmc
pop
jl
adc
rcrl
mov
sbb
loopne
popf
mov
sbb
insl
push
stc
out
aam
dec
notl
repz
scas
das
icebp
scas
sbb
mov
sub
and
xor
mov
dec
or
sbb
xchg
idivl
mov
pop
ja
pop
hlt
lods
std
push
dec
in
xor
mov
dec
sub
and
outsb
addr16
repnz
jne
mov
and
pop
or
or
or
out
adc
jmp
add
mov
and
popa
popa
jmp
das
loop
pop
cmc
xchg
sti
mov
dec
add
in
add
decb
or
pushl
dec
sub
dec
sbb
sbb
mov
negl
push
or
pop
jmp
mull
or
or
mov
and
std
jmp
outsl
mov
std
sbb
mov
dec
lock
sbb
sbb
stc
mov
sub
imull
out
test
xor
iret
repz
iret
cmc
das
iret
divl
std
lock
pop
xchg
and
in
inc
or
or
jl
mov
mov
add
mov
or
add
add
cmp
pop
inc
adc
dec
in
test
or
sarl
std
or
in
mov
inc
add
or
lods
into
and
jae
xchg
out
addr16
sbb
stc
sbb
pop
xchg
cmp
scas
mov
lret
aaa
scas
mov
jmp
push
mov
push
pop
repz
stc
jbe
sti
mov
pop
jmp
mov
add
popf
add
sub
pop
mov
xor
icebp
sbb
inc
icebp
arpl
jo
lea
add
or
testl
mov
mov
icebp
psubw
std
add
scas
rolb
or
mov
xor
icebp
popf
add
inc
add
std
or
mov
mov
or
mov
jmp
icebp
mov
sbb
add
xchg
outsl
icebp
notl
repnz
sbb
in
sub
out
cmp
testl
xor
hlt
in
fldl
cmc
rorb
mov
dec
sbb
adc
and
std
out
dec
and
mov
push
adc
or
adc
data16
pop
xor
loop
lcall
and
jg
and
pop
cmpsl
adc
in
lock
neg
in
jno
xor
xor
jmp
testl
sub
or
rep
mov
dec
add
dec
dec
and
iret
sbb
mov
mov
pminub
adc
in
das
out
repz
sbb
pop
or
repz
add
sti
xchg
pop
pop
repz
sub
and
add
sub
add
sub
prefetch
repz
sti
bnd
jmp
pop
fincstp
push
add
jo
mov
adc
dec
testl
mov
cmpsl
add
mov
push
dec
or
mov
adc
mov
adc
sbb
fwait
jb
out
pop
jmp
sbb
sbb
clc
sbb
xor
and
jae
xchg
add
jae
sub
mov
mov
sbb
jge
mulb
or
dec
adc
add
lea
adc
call
adc
mov
add
sbb
adc
cld
and
cmp
sti
aaa
iret
out
stos
mov
fs
sub
jmp
jp
adc
or
pop
stos
mov
out
out
xor
icebp
xor
xor
jmp
arpl
xor
mov
dec
lods
mov
cmc
inc
and
sub
sub
out
popf
sub
mov
fucomip
jae
testl
roll
aas
mov
add
inc
out
ret
jae
or
cmp
jmp
cmc
xor
and
xor
cmpsb
in
mov
mov
mov
mov
mov
sbb
lods
dec
sbb
or
add
es
jno
and
push
cmc
add
ljmp
cli
bnd
jmp
negl
mov
std
or
mov
add
cmp
mov
or
xor
jle
push
in
mov
xor
push
add
mov
or
and
xor
cli
and
jl
arpl
mov
cmc
xor
and
mov
dec
imul
cld
add
mov
pop
cmc
inc
and
mov
out
adc
cmpsl
mov
mov
adc
add
adc
sub
mov
pop
mov
sbb
incl
out
stc
fnsave
lea
mov
dec
stc
inc
clc
div
or
std
cli
adc
add
sbb
daa
dec
and
cli
icebp
jl
mov
cmpsl
push
jb
add
xcrypt-cfb
cmpsl
and
sbb
cmpsl
sub
je
cmc
stc
sub
cwtl
sub
cmpsl
mov
and
cmc
sub
mov
in
adc
jne
adc
dec
fs
ja
cmp
jmp
mov
add
push
or
jmp
cmc
mov
adc
add
xor
and
std
sub
subl
inc
xor
div
jl
mov
push
xchg
and
and
mov
sub
addr16
jb
and
adcb
sbb
cmpb
or
inc
jmp
ss
mov
dec
clc
sti
sub
xchg
out
or
push
adc
xorb
cli
add
sub
push
stc
or
push
adc
sbb
sti
sub
jge
loop
ret
outsl
sub
xchg
sti
push
scas
adc
and
push
jns
mov
cmc
adc
pop
cmpsl
or
sbb
pushf
mov
sbb
jbe
sbb
or
jbe
sbb
inc
jmp
mov
jmp
or
ljmp
out
mov
mov
and
lds
fucomp
mov
add
mov
mov
sbb
mov
in
mov
mov
or
mov
cmc
inc
or
in
in
dec
fs
cli
and
push
stc
inc
adc
cmc
or
in
das
pop
test
and
sbb
jne
cmp
mov
repz
aaa
int
jl
and
jb
xor
jbe
aaa
testl
jmp
xor
and
in
cmc
ja
stc
scas
arpl
ja
ret
out
jge
jo
ja
add
dec
xchg
jmp
ja
int
ja
and
lret
stc
in
cmpb
repnz
xor
add
mov
or
mov
adc
mov
adc
clc
sbb
xchg
sub
imul
ds
stc
inc
and
push
sub
dec
or
or
jae
cmp
imul
jp
cmc
add
cmp
pop
cmp
daa
push
idivl
jp
and
dec
add
pop
push
push
js
adc
pop
repnz
mov
pushf
nop
and
sbb
sbb
pop
out
js
or
iret
fiadds
std
sti
xorl
or
fnstsw
dec
pop
lock
xchg
js
mov
cli
out
sbb
add
fucomip
das
and
stos
outsl
out
mov
popf
stc
or
mov
add
xchg
jae
mov
lahf
cmp
bndldx
addr16
stc
mov
and
cmc
xchg
sub
testl
mov
cli
lock
sub
mov
or
cmpsl
sbb
rolb
clc
add
mov
jo
cmp
cmp
xadd
xor
mov
push
sub
push
add
mov
or
mov
dec
daa
cmp
jmp
pop
repz
in
gs
imul
out
xor
addr16
sub
addr16
out
sbb
in
mov
dec
xchg
sbb
push
cmp
bnd
std
shrb
lods
shrb
cli
in
adc
cld
push
idiv
mov
testl
out
enter
in
mov
mov
sub
jnp
arpl
les
out
adc
unpckhps
pop
cmpsl
and
and
mov
sti
loop
cmc
push
idiv
std
add
scas
mov
cmpsl
or
pop
mov
shlb
and
daa
int
in
cmp
push
repz
imul
cmp
mov
add
repz
xor
jl
nop
jmp
cmp
sti
scas
jl
xchg
repz
scas
sbb
sti
test
jp
out
push
sub
idiv
sti
mov
mov
incb
xor
or
mov
adc
jmp
xor
rolb
jmp
outsl
sbb
jns
sub
pop
cmp
mov
shr
or
std
cli
mov
les
dec
lods
das
jmp
stos
pop
pop
mov
sub
out
out
test
fistpl
lea
jmp
mov
sbb
or
xor
cwtl
rolb
sahf
mov
mov
inc
lods
push
mov
pop
lcall
xchg
pop
lds
lret
inc
and
mov
jmp
ja
fstp
mov
pushf
lods
mov
scas
xlat
das
adc
cmp
lods
cmp
sub
les
aad
adc
inc
shrb
bound
jns
in
mov
pop
mov
cmc
lcall
jmp
mov
mov
sahf
jmp
lods
xor
test
dec
lock
pusha
mov
mov
jp
mov
sub
leave
das
lods
shlb
xchg
in
jmp
mov
xchg
adc
and
jno
ja
push
jge
push
xchg
hlt
mov
mov
into
xchg
push
out
out
pop
fcompl
push
jmp
fnstcw
shll
xor
dec
aam
sub
repz
and
std
mov
and
ja
sub
mov
inc
push
shrb
mov
jae
icebp
lods
push
mov
out
xchg
out
outsl
les
cld
cmc
clc
dec
jl
push
add
xchg
mov
sub
push
sub
movsb
outsl
test
jno
je
testl
sbb
xchg
xchg
dec
lea
hlt
add
jae
cld
rep
dec
imul
popf
hlt
lcall
dec
sub
cmp
jl
ja
repz
insb
or
jae
cld
push
sbb
outsl
push
hlt
adc
mov
jae
cld
jg
dec
jp
ja
je
jno
out
out
test
and
dec
pop
outsl
sbb
pop
std
adc
hlt
stos
lcall
xchg
sub
lahf
jae
cld
test
dec
sbb
jae
ret
in
paddw
dec
xchg
cld
jge
dec
jno
insl
jae
sub
std
mov
cld
adc
dec
or
hlt
cmp
outsb
repz
and
hlt
adc
dec
mov
cld
test
dec
std
outsl
cli
hlt
cmc
std
icebp
dec
insl
out
test
jae
cld
mov
xchg
hlt
xchg
std
nop
dec
or
add
outsl
jbe
jae
out
sbb
cmpsl
sti
ret
lahf
outsl
sbb
sbb
xchg
dec
or
jle
js
mov
insl
jge
icebp
je
xor
sub
jbe
jns
sub
test
dec
or
hlt
adc
lcall
ds
add
cmc
hlt
icebp
std
in
or
jae
cld
pop
adc
outsl
or
or
sbb
outsl
repz
out
cld
test
mov
xchg
dec
mov
hlt
pop
std
add
add
cld
stc
jne
icebp
outsl
out
xor
adc
xchg
scas
je
cltd
sub
adc
dec
insb
xchg
das
adc
cld
imul
sub
std
outsl
dec
in
jae
cld
pop
mov
mov
icebp
mov
adc
cmc
jb
sub
xchg
pop
and
xchg
fwait
xor
jle
in
aas
lods
clc
ja
sti
sub
mov
jae
cld
pop
sbb
outsl
std
hlt
jns
testb
or
outsl
sbb
sbb
adc
jae
cld
xchg
hlt
std
in
or
jae
cld
sbb
jae
sub
std
lahf
dec
sbb
sbb
xchg
mov
outsl
add
jge
jns
divb
cld
insb
daa
sti
inc
mov
hlt
xchg
std
dec
mov
sub
dec
jae
lock
imul
jg
and
jae
cld
xchg
nop
dec
or
std
add
sbb
dec
js
jne
icebp
std
out
or
jae
cld
sbb
or
or
jae
cld
std
jns
cmc
outsl
jo
jae
imul
in
cmpsb
std
mov
cld
cwtl
adc
adc
hlt
xchg
add
jae
cld
divl
jo
outsb
hlt
imul
mov
jae
cld
cltd
xchg
dec
xchg
outsl
mov
mov
push
dec
add
cld
cld
clc
dec
hlt
outsl
icebp
hlt
out
cld
sub
es
and
js
ret
das
sub
sub
in
add
idiv
sti
dec
xorb
mov
dec
xchg
outsl
sbb
mov
mov
inc
pop
jae
jbe
jns
dec
add
repz
jmp
ret
insb
movsb
sub
adc
hlt
xchg
add
sub
shlb
std
dec
or
sub
xchg
lea
outsl
add
dec
je
outsb
rep
mov
popf
outsl
cwtl
rep
sti
arpl
inc
je
mov
sarb
sub
sub
outsl
enter
inc
lods
dec
sub
or
dec
fsubrl
jns
pushf
add
dec
sub
lods
jl
jecxz
inc
or
xchg
cld
pushf
and
das
insl
test
div
jb
out
push
mov
test
mov
in
pop
clc
pop
push
push
sub
outsb
repz
in
movd
std
sub
sarl
cmp
jg
iret
cmpsb
xchg
stos
or
or
sub
mov
sbb
cmp
mov
ljmp
outsl
negl
mov
imul
lea
out
fsts
imul
push
lods
push
mov
repnz
lock
and
sbb
js
enter
xchg
loope
and
push
std
and
push
lcall
mov
test
nop
not
push
jge
jbe
and
call
scas
xchg
int
roll
ds
push
test
pop
inc
repnz
imul
sbb
sbb
mov
clc
xor
dec
add
insl
pushf
or
stc
sti
sahf
inc
and
sbb
push
sbb
xlat
jmp
cmp
andb
adc
outsl
outsl
mov
xor
loop
inc
popa
jmp
mov
push
mov
or
sub
inc
pop
pop
mov
jg
xor
and
call
adc
clc
repz
add
lret
jmp
add
push
or
std
inc
inc
scas
mov
sbb
aas
and
lods
jbe
push
fmul
fwait
inc
notl
sbb
in
popa
fildll
test
or
lcall
ljmp
jge
sub
inc
pop
scas
sbb
xchg
cmp
sarb
imul
jmp
shll
out
push
or
cmc
pop
fs
adc
dec
div
aaa
or
push
inc
and
jno
in
add
adc
arpl
fnsave
pop
sub
adc
mov
mov
sbb
mov
mov
outsl
iret
jmp
inc
out
mov
test
pop
movsb
mov
ret
mov
xor
data16
adc
jmp
xor
mov
mov
add
repz
sbb
mov
jle
push
pop
int3
jns
ficomps
hlt
mov
mov
ret
leave
pusha
sbb
cltd
outsl
pushf
sub
push
jmp
lret
ljmp
xor
dec
jmp
push
leave
lret
dec
jge,pn
and
sub
cmp
ret
out
sub
mov
xor
jo
sub
xchg
adc
insb
add
adc
xor
jmp
jmp
pop
rcrb
mov
xchg
call
jbe
pushf
stc
mov
cltd
mov
or
stos
cld
jmp
xor
out
in
sbb
lcall
outsl
test
adc
or
xor
sub
mov
inc
iret
sti
ror
jmp
adc
sub
and
and
sub
xchg
mov
mov
dec
xchg
int3
lret
int3
decb
pop
imulb
xchg
sub
pop
adc
xor
jmp
into
sub
cmp
inc
lds
fucomi
inc
cmp
cmp
pop
cvtps2pi
dec
jg
sbb
in
pop
sti
jmp
mov
push
out
mov
daa
stc
es
jo
pop
ret
pop
adc
sbb
sub
inc
int
in
push
lahf
dec
fwait
aad
lods
in
mov
adc
aas
dec
cmpsl
cmp
arpl
push
cmpsl
adc
stos
dec
shr
repz
cld
jmp
mov
xchg
adc
mov
nop
ret
mov
cmp
icebp
inc
sub
fadds
je
or
push
scas
lods
imul
jmp
push
into
shl
aas
add
cwtl
dec
dec
xchg
add
and
jmp
dec
lcall
out
ss
cmp
fidivrs
xor
scas
dec
add
xor
mov
data16
aad
push
in
xchg
add
clc
dec
add
pop
stos
add
mov
dec
mov
mov
mov
mov
inc
lds
jmp
xor
xlat
in
adc
testl
outsb
popa
cmpsl
mov
das
scas
icebp
test
xchg
mov
nop
adc
movsl
ds
bound
repnz
mov
pop
jmp
cmp
mov
adc
outsl
pop
dec
fwait
sub
sti
xlat
mov
adc
inc
xchg
std
jmp
andl
xchg
mov
sub
mov
and
lcall
jmp
mov
xor
adcl
dec
dec
sbb
or
lret
or
stos
jmp
lcall
lock
loop
cmp
stc
mov
scas
arpl
popa
pop
mov
jmp
inc
test
xlat
adc
aad
sub
or
pop
in
stos
int3
mov
lods
jecxz
jp
cmp
negl
cmp
imul
xor
add
jp
xlat
test
xchg
call
mov
push
pop
xor
mov
ud2
out
sub
dec
jmp
xchg
enter
rclb
xor
jo
push
mov
mov
dec
push
sbb
int
adc
dec
fidivrs
and
xchg
sti
jmp
cmp
lret
jle
pop
mov
fs
push
jb
fsubr
inc
dec
lret
adc
sarl
sub
push
ficoml
mov
or
mov
pop
xor
sub
dec
and
test
icebp
lods
bound
out
cmp
insl
int
hlt
sti
sbb
push
inc
mov
imul
sbb
or
push
insl
cmp
xchg
fldcw
inc
shl
sub
adc
mov
add
bound
pop
int
pop
movsb
inc
push
jmp
into
mov
jl
sbb
pop
mov
push
sub
jmp
jnp
and
pop
pusha
in
lods
push
imull
mov
push
cltd
cmp
ret
jo
and
lods
in
sub
push
push
pop
jb
pop
iret
jmp
lret
out
stc
mov
pop
cmp
push
and
pop
fsubrl
pusha
insb
stc
adc
lods
cmp
adc
jne
idivb
sti
or
inc
aaa
xor
int
mov
ds
pop
data16
xchg
sbb
and
cmp
mov
hlt
movsl
mov
mov
mov
fnstenv
sub
and
cmc
scas
ficoml
mull
xor
es
or
or
mov
push
dec
cmp
xchg
jmp
int3
pop
pushf
leave
sub
mov
inc
ret
test
dec
dec
fwait
in
jmp
stos
mov
hlt
sbb
cmp
mov
clc
adc
in
add
jb
xor
cld
sbb
mov
sbbb
fsubrs
loope
fwait
sub
jno
orl
out
xchg
aaa
sbb
fwait
into
ljmp
sbbl
jmp
sub
mov
imul
mov
or
add
sub
and
out
and
or
xor
psrlw
in
sub
jmp
mov
lahf
int
and
mull
sub
add
add
jmp
sti
into
pop
add
inc
icebp
push
repz
jmp
jo
dec
adc
pusha
mov
test
jge
pop
les
pop
or
inc
aad
fdivl
int3
push
out
cmpsb
icebp
arpl
lahf
imul
sbb
jmp
jns
xor
icebp
out
addr16
stos
inc
mov
pushf
int
sarl
and
push
out
in
sbb
clc
lods
loopne
insl
and
mov
xchg
cltd
idivl
add
jmp
pop
inc
testb
int3
jmp
pop
out
mov
and
jmp
push
dec
xchg
mov
mov
and
repz
dec
jbe
xchg
lods
ds
sti
jmp
fisttpl
xchg
jge
mov
ja
sti
repz
insb
cmp
and
out
imul
lods
loopne
pop
and
mov
imul
ds
add
out
jg
add
jmp
and
jae
movb
jmp
in
cmc
mov
repnz
in
lods
dec
mov
jp
hlt
push
js
jmp
mov
addb
lods
and
pop
mov
cmp
imul
addb
jmp
pushf
ret
arpl
popf
and
imul
jae
and
jb
stc
push
and
dec
mov
insb
sub
push
sbb
sbb
leave
or
mov
jmp
out
or
adc
xchg
xchg
mov
insb
enter
push
lods
push
fsubl
jmp
bound
into
or
mov
push
test
jp
sbb
and
int
jmp
adc
inc
fnstsw
lret
icebp
andnps
fsubrl
cltd
dec
xchg
mov
lods
inc
loope
or
fdivrl
pop
push
jmp
dec
in
push
pop
cwtl
test
arpl
enter
lret
inc
pop
push
sub
shrl
dec
gs
xchg
fucomp
je
push
aaa
clc
add
jmp
subl
in
pushf
sarb
sbb
jb
pop
not
dec
add
cmp
push
and
push
sub
or
std
sbb
jmp
in
orb
sub
rcrl
lods
fsubl
cmp
shrb
in
mov
pop
jmp
loopne
inc
hlt
or
mov
popf
cld
sbb
hlt
jne
inc
scas
addr16
fildll
fisubs
xchg
push
movsb
outsb
adc
in
gs
into
cmp
sub
pushf
adc
cmp
icebp
mov
repnz
mov
fstps
add
stos
mov
or
lcall
iret
in
movl
outsl
push
sub
mov
sbb
jmp
push
xlat
and
or
jae
out
sub
pop
jmp
jbe
jmp
and
pop
xchg
repz
aam
or
cltd
jmp
mov
mul
xor
por
lds
cs
idivb
jmp
clc
movsb
xchg
test
int
test
out
rep
or
aam
push
cmc
lods
xchg
lea
rorb
nopl
in
inc
out
inc
shll
sti
leave
cld
outsb
mov
jb
sbb
sbb
iret
pop
jmp
jo
ja
in
movsl
lods
aas
mov
inc
adc
push
sub
xchg
cmp
cmpb
and
imul
lods
add
idivl
mov
lahf
dec
popf
pop
push
push
jmp
data16
mov
xchg
and
add
icebp
out
adc
jmp
sub
rcll
repz
dec
rcrb
mov
inc
hlt
pop
push
dec
mov
pop
sub
pop
pop
mov
jns
mov
repz
rclb
add
jae
and
cmp
ja
std
cld
inc
sbb
cld
mov
sub
lret
in
mov
mov
scas
mov
pop
stos
lods
push
enter
mov
iret
je
adc
psrad
sub
lret
lcall
add
or
mov
pop
cmp
dec
xchg
shrb
in
movsl
popf
daa
and
jmp
stc
adc
cmc
fs
jb
and
adc
xchg
mov
pop
mov
xchg
imul
cs
adc
adc
leave
sbb
inc
mov
pop
jmp
cmp
push
cmp
insb
test
xor
lret
inc
xchg
jmp
mov
or
repnz
mov
lods
stos
es
xor
scas
scas
xchg
sbb
inc
inc
jmp
adc
mov
into
hlt
xor
lods
out
mov
and
add
mov
dec
loopne
mull
mov
jge
sahf
bnd
lret
push
jmp
dec
jmp
negl
mov
jmp
and
imul
mov
lods
xor
sub
fisttpll
mov
repnz
ret
sbb
repnz
push
das
push
mov
xchg
test
jne
cmp
push
repnz
push
das
lods
jo
xor
adc
sbb
sub
notl
fbld
movsb
das
jmp
jge
cmp
testl
or
sbb
movsl
icebp
scas
data16
aaa
call
xabort
jg
negb
lahf
popa
inc
mov
lods
and
pop
stc
pop
and
sbb
add
sbb
pop
hlt
push
add
pop
imul
mov
fsubrl
test
repnz
imul
sahf
je
sbb
xor
mov
cmpb
das
sbb
rorb
loopne
inc
sbbl
xchg
andb
jge
push
in
aas
push
xor
enter
mov
inc
jo
pop
subb
sar
xor
imul
mov
inc
pop
imul
sbb
stos
cmpsb
jmp
lods
push
sar
negl
cmpsb
and
call
jns
sti
jmp
sarl
sbb
bound
push
int
xchg
push
lods
inc
jbe
mov
or
add
imul
sbb
mov
aas
jl
out
adc
mov
add
sub
mov
mov
xchg
xchg
jno
int3
ss
pushf
jmp
mov
shll
call
icebp
mov
jns
in
pushf
pop
add
sbb
aaa
sub
jb
test
dec
xor
xor
stc
jmp
add
imul
jg
lods
in
cmp
or
mov
imul
out
jnp
xor
cld
lahf
lods
cmp
mov
mov
test
sahf
add
cmpsb
test
xchg
or
repnz
jecxz
aam
inc
jmp
sahf
pop
xor
lods
push
add
in
adc
in
inc
sbb
out
fisubrs
sub
and
mov
ljmp
mov
jb
pushf
int
sub
cmp
or
outsl
test
icebp
or
jg
or
cmp
stos
jmp
sbb
jbe
aaa
mov
mov
pop
subb
sbb
repz
stc
fidivrl
scas
int
sub
ret
sub
sub
jbe
add
jae
pop
mov
lock
into
sbb
jg
jmp
jb
jnp
stc
inc
scas
shrl
lea
mov
ret
sbb
mov
pop
inc
icebp
insb
cltd
or
push
sub
repnz
lret
sbb
and
push
fcom
jbe
adc
jne
decl
sub
mov
jmp
push
push
outsl
inc
ja
mov
mov
xchg
sti
aaa
jnp
cmp
pop
and
jo
jp
cmpsb
or
mov
cmp
popa
jmp
cmpsl
ret
xchg
pop
out
adc
outsb
inc
aad
enter
mov
sbb
test
bound
not
add
rcr
popa
or
and
inc
jmp
das
mov
ret
out
pop
repnz
enter
mov
divb
mov
or
jg
lods
mov
into
data16
sub
ret
inc
das
xchg
pop
jmp
xchg
jl
rcrl
lret
hlt
push
sbb
dec
xchg
mov
out
nop
push
insl
fldpi
sbbb
jecxz
xchg
rorl
add
bound
fwait
jbe
fsubr
xor
or
nop
jle
push
int
daa
xchg
jge
mov
push
imul
daa
and
jmp
sarb
stc
dec
ds
cltd
sti
mov
scas
cmp
mov
mov
cmc
push
repz
cld
fisubrs
jle
or
sub
test
ljmp
jnp
adc
sbb
out
inc
stc
repnz
or
lret
lods
or
cmp
mov
sbb
popf
fisubrl
fisttps
pop
xchg
stos
aad
jnp
outsl
loopne
push
inc
dec
sbb
jmp
int3
std
iret
sbb
sbb
cmp
xor
in
and
lods
mov
sub
xchg
mov
push
xor
mov
add
or
inc
addr16
mov
sbb
push
adc
std
aad
jno
cli
enter
jmp
shll
scas
or
out
or
mov
mov
jmp
jmp
dec
std
lcall
sti
or
xchg
mov
fisubrl
mov
sbb
dec
into
dec
and
enter
mov
pop
mov
dec
out
mov
mov
ljmp
test
pop
imul
dec
or
sbb
in
push
or
cmpsb
add
stos
pop
movsl
pop
and
mov
mov
inc
adc
jns
movsl
sbb
movsl
sub
and
data16
and
out
sbb
cli
ljmp
gs
adc
stos
push
cmp
sbb
arpl
pop
jle
jns
data16
out
xchg
jns
stos
ds
inc
xor
lods
shlb
dec
or
sbb
imul
sub
movsl
mov
jmp
sbb
or
xchg
lcall
sbb
and
xor
iret
xlat
cmp
ficoms
outsb
inc
out
jmp
adc
scas
push
lcall
and
lds
pusha
jge
scas
mov
inc
and
push
sbb
scas
les
test
testl
mov
push
sub
push
lods
imul
jmp
add
dec
mov
test
sbb
sbb
int3
xchg
jge,pt
push
sub
mov
jae
arpl
or
es
scas
addl
cwtl
je
fs
stos
outsb
push
pushf
adc
inc
cmp
out
pop
lret
mov
sub
and
jmp
iret
cmpsb
and
imul
lods
adc
test
pop
sbb
jmp
bound
das
sbb
mov
pop
sbb
test
cmp
xor
push
inc
and
popa
pop
scas
sbb
imul
sub
stos
into
in
pusha
test
clc
stc
and
aaa
cmp
imul
into
mov
lods
fwait
gs
xchg
adcb
push
mov
mov
into
scas
dec
sub
xor
repz
lods
lods
xor
shrb
mov
pusha
int3
xchg
mov
mov
loop
dec
jmp
stos
popa
pop
pop
add
lods
cwtl
fs
sbb
repnz
xchg
adc
lock
mov
and
inc
lods
jg
outsb
jnp
in
out
test
jle
cmp
jmp
push
jmp
iret
jp
insl
ret
or
dec
or
lods
xchg
adc
jno
jg
jae
std
cld
data16
out
fimull
sub
mov
sub
xchg
xor
imul
xchg
jmp
into
mov
push
jl
mov
fmuls
clc
adc
jne
xor
sbb
mov
cmp
leave
lods
fwait
rclb
stc
mov
sub
aaa
xchg
fs
pop
and
jbe
xor
cmp
lods
mov
dec
inc
sbb
or
movsb
iret
pushf
cmp
int3
jbe
cs
scas
movsl
jmp
aas
fldlg2
lcall
jmp
or
jbe
jmp
add
lret
mov
icebp
jnp
movsl
es
jmp
dec
dec
insl
mov
pushf
shrl
add
sbb
scas
add
dec
adc
add
lahf
jg
fs
xorl
sbb
mov
daa
jmp
fs
js
sub
int
jmp
cmp
inc
leave
in
xchg
mov
add
lods
or
rcrb
mov
inc
shlb
dec
lods
mov
mov
popf
sahf
insl
pop
mov
out
lods
scas
leave
outsb
or
jae
jmp
xchg
mov
shll
push
sub
jp
sti
es
add
and
dec
or
daa
in
jo
sbb
insl
roll
jmp
xorb
mov
fistps
jmp
sub
jmp
cmp
stc
pop
sbb
outsb
xchg
movsb
dec
push
js
ljmp
jle
mov
mov
lock
push
orl
popa
mov
mov
and
lea
jmp
sub
icebp
mov
int3
jmp
inc
bound
and
mov
lods
mov
iret
daa
adc
xor
mov
fstpl
divl
pop
lods
mov
mov
icebp
fstpl
pop
insb
xchg
addr16
cmp
aad
cmp
sub
stos
mov
sub
mov
int3
hlt
xchg
mov
adc
sub
stc
std
jmp
sbb
lods
ficoms
mov
mov
or
call
cmpsl
ljmp
fisttpll
shlb
pop
and
cmp
fwait
pop
jmp
fidivs
pop
xlat
loope
push
lods
mov
inc
popa
jmp
jno
ss
push
cld
or
aam
inc
sub
test
lcall
jmp
adc
sub
inc
mov
jmp
adc
cmc
jae
leave
fwait
sti
sti
roll
popf
sub
push
adc
ljmp
xlat
dec
push
add
imul
shr
mov
fwait
push
sbb
scas
inc
inc
adc
jnp
inc
push
lcall
mov
xchg
in
notb
jmp
bound
outsb
addb
jmp
jl
adc
js
adc
mov
cmc
mov
or
scas
scas
sub
mov
lcall
mov
push
ret
shll
or
fsubl
mov
xor
fisttps
lcall
jge
ret
add
repz
cli
int3
xor
add
jmp
mov
insl
sbb
and
adc
fucom
mov
cmc
xchg
leave
cltd
cmp
xchg
sub
fucomp
sahf
sbb
and
jne
mov
fisubrs
lea
ret
mov
jmp
jecxz
adc
test
push
xchg
pop
mov
loopne
dec
jmp
arpl
xchg
stc
fisttpll
int3
mov
fwait
les
cltd
fsubl
cmc
mov
sub
sub
jp
lods
sub
addb
jge
push
sbb
imul
mov
push
jmp
std
push
or
pop
hlt
or
mov
sub
repz
pop
jmp
aas
or
stc
std
xchg
sub
lret
mov
push
out
sti
xor
subl
pop
jp
repz
int
popf
test
fyl2x
mov
out
jmp
mov
sbb
mov
xchg
jmp
xchg
mov
test
andb
mov
ja
and
pop
repnz
jmp
das
cmc
jmp
stc
mov
lods
and
sbb
repz
and
pop
or
xorb
cmp
lods
mov
ja
mov
push
xchg
sub
adc
xchg
xchg
rcrl
hlt
inc
add
inc
pusha
pop
in
mov
push
les
pop
jmp
je
fiadds
pop
pop
aam
xchg
call
adc
vpaddsw
scas
xchg
lock
sbb
imul
xchg
icebp
in
lahf
hlt
sbbl
stos
mov
fs
dec
repz
xchg
jmp
sub
pusha
push
or
aad
xchg
pop
in
jbe
repz
xlat
jmp
dec
push
jle
push
imul
bound
popf
int
jmp
mov
cwtl
ret
pop
and
sub
int3
icebp
mov
mov
imul
sahf
jmp
push
push
cmp
jmp
rclb
push
sub
jo
cld
mov
lret
lock
dec
arpl
int
xor
jne
jecxz
xchg
push
imul
daa
push
jmp
mov
mov
shlb
aas
or
cmp
out
lods
push
sub
out
inc
loope
pop
adc
push
dec
mov
sbb
and
inc
jmp
xor
mov
jne
pop
subl
outsl
lods
sti
std
cmpb
rorl
pushf
mov
inc
outsb
push
push
in
sub
cmp
std
mov
out
xchg
and
loop
inc
push
int
mov
and
lret
sbb
ds
sbb
or
sbb
loopne
das
ja
mov
in
push
outsl
push
jb
loop
pusha
jmp
daa
cmp
jge
fwait
stc
xor
test
jmp
faddp
dec
adc
stc
xchg
stos
push
ret
cmp
cmp
out
push
dec
xchg
jmp
push
clc
es
in
and
adc
sti
xchg
popa
and
or
gs
stc
jl
jmp
cmp
ficoms
cltd
pushf
sbb
dec
in
ret
arpl
inc
dec
cmp
stos
ljmp
rorb
pop
jmp
and
scas
sub
popf
cmp
pop
in
dec
jae
aas
hlt
loopne
pop
scas
out
nop
pop
dec
inc
sub
mov
cmp
repnz
inc
and
sti
or
dec
push
sub
jmp
shrb
push
or
jae
xor
sub
iret
stos
test
cld
movsl
sti
mov
xor
xchg
dec
jns
test
add
jmp
mov
push
mov
cld
fs
and
js
push
jle
pop
pop
push
aam
lods
inc
shrl
mov
sub
movsb
in
ss
jnp
or
jmp
les
sub
popf
mov
outsl
pop
push
mov
mov
lods
pop
and
adc
or
xchg
pop
adc
fld
inc
out
fstl
cmpsb
xor
lret
fwait
movsb
scas
and
sub
mov
adc
stc
outsb
aad
xor
inc
call
hlt
mov
addr16
jmp
and
cmpsb
fs
xor
je
sti
jmp
sarb
jmp
jle
int
dec
data16
mov
adc
mov
mov
into
imul
xchg
or
test
les
lock
sub
sbb
push
pop
jmp
adc
xchg
sbb
dec
jmp
inc
bound
cmp
popf
cmp
cmpsl
and
and
pusha
sub
xchg
inc
add
je
sub
inc
ja
or
jmp
addr16
repnz
and
adc
jecxz
cli
jmp
push
in
push
outsb
inc
xor
enter
imul
pop
sub
insl
hlt
xor
jmp
pop
sahf
and
sbb
daa
mov
gs
vcvtsi2sd
add
arpl
repnz
inc
mov
and
push
jae
fwait
adcl
xchg
sub
aad
push
into
jbe
ret
or
jg
sub
notl
mov
or
jge
sub
cmp
ret
xchg
dec
imul
xor
sbb
jmp
ljmp
mov
daa
dec
jmp
adc
out
cmp
pusha
sbb
inc
cmp
int3
xor
fwait
sti
out
lock
dec
lahf
rolb
xor
adc
inc
jmp
sbb
jle
movsl
leave
mov
cwtl
or
clc
aas
jb
or
add
outsb
lods
mov
sahf
int3
dec
adc
bound
jmp
pop
cmp
add
int
sub
jmp
call
lods
repnz
sub
sbb
jmp
mov
scas
lcall
loope
call
dec
jecxz
clc
ss
insl
lods
mov
fs
jmp
cmp
push
out
roll
mov
lret
mov
divl
js
pop
insl
push
jmp
enter
lea
and
fildll
sub
bound
mov
pop
dec
jmp
inc
cltd
pusha
int
jno
sub
xchg
adc
inc
bnd
cmp
imul
ret
add
aas
daa
icebp
add
rcrl
insl
dec
loope
icebp
fcmove
or
std
xor
jecxz
mov
insb
pop
test
mov
js
lods
jg
jle
notl
xchg
sub
add
roll
ret
jl
shr
sbb
aam
notl
sbb
xchg
icebp
jecxz
xor
mov
adc
add
dec
sub
cmp
pop
sub
xor
outsb
call
xor
sbbl
cmp
sbb
lret
push
cmp
scas
pop
or
pop
iret
sub
cbtw
and
xor
stc
mov
add
inc
jp
loope
lret
lods
into
add
movsl
dec
jge
sbb
jecxz
and
or
xchg
or
jno
lock
mov
mov
out
mov
jnp
jmp
jo
fs
adc
imul
shr
stc
and
mov
adc
cli
mov
pop
lods
nop
or
jmp
pop
push
js
jne
ret
jp
push
and
or
test
into
jmp
adc
idiv
jge
popf
jb
jmp
ss
and
inc
jmp
in
imul
stos
and
lods
outsl
test
mov
jne
jmp
aaa
xor
dec
jae
in
sti
and
jmp
or
xchg
cmp
iret
cs
adc
sbbl
adc
imul
xor
jmp
fsts
pop
sub
shrl
test
add
mov
lods
out
pop
sub
sti
add
outsl
loopne
jmp
push
push
mov
lds
jmp
out
cmp
shlb
lods
push
mov
mov
sub
mov
jne
fldl
cs
pusha
in
pop
pushf
adc
xor
cmpsb
xor
hlt
inc
jmp
cmpb
jmp
mov
mov
adc
push
jbe
cmpsl
jo
movsl
jmp
mov
fs
mov
sub
or
adc
jns
sbb
push
mov
and
adc
or
sbb
adc
lods
imul
std
sub
and
mov
ret
jmp
inc
adc
inc
lcall
xor
jmp
pop
xchg
add
add
dec
insl
popa
addr16
imul
je
outsl
jns
add
inc
gs
gs
imul
gs
imul
test
sti
inc
jecxz
mov
add
add
dec
mov
pop
sub
sub
sbb
add
sti
gs
aam
mov
adc
mov
add
mov
inc
sub
int3
xorl
sbb
ja
rcll
fs
lock
pop
inc
aad
loop
out
outsb
inc
and
stos
insl
lret
nop
es
fdivrs
add
sbb
and
lea
je
neg
mov
movsbw
mov
pusha
call
push
dec
dec
dec
dec
cs
insb
add
add
je
jns
inc
outsl
insb
outsl
jb
add
inc
gs
jb
jns
arpl
add
add
addr16
insb
outsl
jae
dec
gs
iret
sub
loop
repnz
dec
and
call
jbe
lcall
cmp
push
or
pop
jne
out
push
cwtl
nop
lret
jne
xor
fistpl
notl
subl
mov
cltd
shll
push
outsl
jae
push
jne
je
gs
popa
addr16
sub
add
add
je
gs
arpl
imul
add
fs
popa
je
add
add
je
outsl
insb
jns
imul
jmp
add
inc
gs
imul
js
inc
add
add
je
dec
jo
outsb
push
gs
gs
inc
add
imul
and
sub
jp
xlat
lods
or
shrl
enter
cmp
xchg
mov
test
loopne
mov
popf
das
loope
in
fwait
inc
shlb
hlt
jl
mov
leave
in
inc
xchg
in
and
dec
xchg
push
or
movb
test
jge
sbb
inc
int
and
pop
inc
adc
push
push
sbb
js
jo
js
add
shll
mov
jmp
mov
shll
jne
inc
mov
mov
rcrl
hlt
dec
stos
mov
sbb
scas
inc
push
jp
push
pusha
enter
jo
inc
inc
movsl
jae
imul
cmp
pop
add
inc
and
adc
inc
and
cmp
int3
out
fcoml
mov
rcll
stos
mov
dec
cmpsb
add
pop
mov
mov
lea
fcomp
cmp
test
inc
cli
in
adc
movsl
aad
push
sub
sbb
lock
stos
jle
xorl
sarl
add
outsl
push
sahf
xor
push
andl
lret
mov
xlat
negb
aad
sbb
call
sub
xchg
das
out
add
pop
rorb
enter
mov
stos
test
cltd
dec
fstl
loopne
cmp
in
mov
loope
sub
sbb
xchg
cmpsl
pop
mov
lods
dec
mov
pop
test
jnp
cmp
lods
xor
lret
dec
xchg
in
xlat
mov
lods
sbbl
lret
cmpsl
mov
mov
inc
mov
add
inc
gs
outsb
jne
je
je
add
leave
pushf
push
lea
jmp
add
inc
popa
insb
insb
push
imul
outsl
arpl
inc
call
xor
movsb
out
insb
sahf
in
std
das
pop
xchg
jne
loop
aaa
imul
add
sub
std
xchg
in
scas
outsl
mov
dec
mov
push
pop
pushf
pop
je
fsubr
mov
outsb
in
or
fdivrs
cmp
lret
add
push
out
sub
add
push
imul
mov
or
mov
xor
insb
xchg
inc
add
dec
xchg
or
loope
sti
cmpsl
push
not
pushf
pushf
jmp
int3
into
dec
ja
pop
in
daa
jne
xor
sub
dec
mov
fimull
or
cmp
popa
ja
das
dec
imull
jb
pop
imul
pop
xchg
pusha
push
fcoml
or
xor
out
repnz
sub
push
dec
adc
imul
xchg
xor
aaa
fcoml
inc
jno
mov
sub
pusha
rclb
push
pop
stc
or
iret
mov
popf
or
test
imul
or
fwait
dec
mov
mov
jmp
xor
mov
mov
loop
fisubl
call
add
insl
imul
insl
push
gs
popa
jb
add
add
jae
push
push
dec
gs
popa
addr16
add
add
je
insb
imul
inc
popa
je
add
add
je
imul
outsl
outsl
imul
add
add
popa
jb
jo
gs
add
leave
lea
jmp
add
dec
jae
arpl
imul
je
arpl
insb
insb
push
outsl
jae
add
dec
jne
je
inc
jns
gs
outsl
push
imul
push
call
inc
add
inc
gs
push
dec
outsl
arpl
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
add
imul
arpl
outsb
add
test
add
call
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
add
call
sahf
jl
xchg
push
mov
addr16
pusha
pop
cmpsl
adc
loop
pop
mov
mov
insl
fwait
insl
xchg
xor
sub
mov
pushf
jmp
loop
stos
stc
incb
sahf
xor
or
and
add
inc
insb
insb
outsl
arpl
add
inc
gs
je
imul
push
add
add
imul
insb
gs
bound
arpl
add
insb
imul
outsb
fs
add
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
bt
cmc
stc
ror
pushf
not
lea
jge
pusha
mov
pushl
dec
pusha
jmp
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
arpl
push
imul
arpl
insb
add
add
jne
fs
arpl
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
dec
outsb
push
arpl
add
imul
jo
jb
dec
gs
fs
js
arpl
pop
and
cmp
mov
fidivrl
test
add
gs
mov
rorb
cmp
call
or
loopne
call
cs
jbe
cmpsb
les
jg
test
pushf
movsl
push
inc
notb
xchg
mov
push
mov
rolb
insb
or
push
mov
fs
xchg
bound
mov
jmp
jmp
push
movhlps
imul
jns
and
out
into
adc
lea
dec
out
dec
movsl
cmp
fidivrl
mov
lcall
xchg
and
jecxz
pop
lahf
xor
imul
insl
dec
push
sub
cwtl
js
sbb
nop
lock
fxch
adc
push
mov
mov
add
nop
int3
dec
jp
cmpsl
mov
mov
pop
xchg
add
sbbl
inc
int
sub
mov
cltd
mov
add
xchg
xor
push
out
mov
std
outsl
jmp
fistpll
xchg
cmc
or
and
fldl
cmc
and
push
clc
push
nop
ss
shrl
fmul
adc
fcmovne
sbb
jne
mov
movsb
mov
outsl
arpl
push
gs
insb
insb
outsl
arpl
cmp
test
test
test
pushf
pushf
pushf
mov
lea
je
jmp
add
inc
gs
gs
dec
gs
imul
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
add
addr16
jne
jb
push
popa
insb
jne
inc
add
add
jb
je
push
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
es
push
xchg
inc
push
xchg
ds
es
dec
leave
cmpsl
sbb
and
leave
inc
imul
push
test
adc
cmp
sub
xchg
scas
pop
inc
fidivrl
ds
mov
outsb
jl
xor
and
inc
pop
fisttps
pop
xchg
inc
mov
sbb
popa
imul
pop
lods
dec
mov
adc
scas
js
xor
sarl
dec
mov
dec
sub
aas
ficomps
xchg
cmpb
loop
xchg
jle
imull
repnz
push
gs
je
dec
popa
outsb
fs
add
add
jb
popa
je
add
sar
lret
call
add
inc
gs
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
and
je
test
clc
test
pusha
jmp
add
push
gs
outsb
push
gs
js
gs
imul
gs
pusha
jmp
push
call
pop
sbb
in
outsl
insb
gs
cs
insb
add
add
outsl
bound
dec
popa
outsb
fs
add
in
push
in
int3
pop
les
out
xlat
clc
xchg
xchg
dec
adc
and
lahf
and
dec
pop
xor
iret
imul
cld
pop
jo
fcoml
pop
dec
dec
mov
adc
hlt
sub
add
push
imul
imul
inc
outsl
jb
popa
je
add
add
jbe
dec
jne
push
gs
je
add
inc
gs
jne
jb
outsb
je
bound
arpl
add
je
popa
jae
inc
jb
outsl
jb
add
push
je
dec
jo
outsb
push
je
jb
addr16
outsb
dec
dec
outsl
arpl
jns
gs
add
inc
js
push
gs
dec
jne
inc
add
sub
lea
jl
bt
pusha
bt
ror
pusha
movb
not
push
jmp
add
ja
jbe
dec
jne
dec
jo
outsb
add
add
je
imul
outsb
addr16
add
add
outsb
fs
gs
inc
imul
add
mov
add
ja
add
cli
sub
xor
sbb
cmp
jnp
add
cmc
sub
pop
call
sbb
xchg
je
add
sub
lret
subb
sti
in
add
add
add
addb
add
or
add
adc
add
add
add
adc
add
add
add
loopne
add
in
add
add
add
ljmp
add
sub
fucomi
sub
sbb
sub
push
sti
sub
cmc
call
sbb
iret
mov
add
jae
add
jg
add
mov
add
push
sub
inc
push
sub
repnz
dec
out
add
jmp
add
push
sub
es
add
mov
add
mov
add
sbb
cmp
sub
movsb
pushf
sub
fidivs
sbb
push
insl
sub
cmp
sub
int3
je
add
lea
add
push
sub
pop
jmp
sub
movsb
ljmp
mov
jne
add
out
add
sbb
into
call
sub
test
push
add
mov
add
mov
add
sbb
fsubp
sbb
daa
loope
add
sbb
mov
sub
repnz
add
jmp
add
out
add
sub
scas
hlt
sub
jb
sbb
out
out
add
ja
add
jmp
sub
lahf
out
add
jecxz
add
out
add
sub
jo
sub
cmc
clc
sub
sbb
add
sub
lds
add
push
sub
movsb
outsl
sub
mov
sbb
jnp
sbb
xchg
xchg
sub
mov
sbb
pop
out
add
ds
add
sbb
lock
sub
pop
push
sub
inc
add
add
outsl
sub
das
jb
add
xchg
add
imul
sti
sub
movsb
fwait
sub
hlt
mov
add
in
add
mov
add
sbb
out
sbb
jl
sbb
jcxz
add
sub
inc
jb
add
sbb
mov
add
sbb
sub
sub
pop
xchg
add
loope
add
in
add
nop
sub
sahf
jbe
add
mov
add
ja
add
sub
icebp
loop
add
mov
add
nop
sub
pushf
add
add
outsl
sub
pop
jg
add
mov
add
ja
add
in
sub
lea
add
sub
cmp
sbb
outsb
mov
add
push
sub
add
add
xchg
jg
add
sub
testl
sub
decl
add
mov
add
insl
sub
mov
sub
mov
loop
add
std
sub
sbb
sbb
add
sub
rcll
lock
add
sub
pop
ja
add
push
sub
jle
sub
jae
sub
loopne
sbb
lret
mov
add
jle
add
jmp
add
std
sub
dec
mov
add
mov
add
jecxz
add
add
jnp
add
push
sub
sub
xor
sbb
filds
sub
mov
sub
scas
mov
add
ljmp
jb
sub
push
mov
add
sbb
push
out
add
sub
daa
out
add
push
sub
cltd
subb
out
sub
lret
add
jp
add
sub
mov
sub
xchg
out
add
ljmp
add
add
sbb
js
sub
or
sub
push
jecxz
add
sub
clc
push
sub
cmp
sbb
js
sub
pop
mov
add
sub
cmp
sbb
test
sub
fs
add
cli
sub
xchg
push
sub
sub
sub
inc
mov
add
nop
sub
pop
xchg
add
push
sub
popa
ljmp
add
out
add
subl
push
sbb
popf
ja
add
sbb
push
xchg
sub
push
add
add
sub
aaa
mov
add
imull
add
loope
add
sub
outsb
sub
dec
push
sub
sub
sub
imul
sub
mov
sub
pop
out
add
jp
add
out
add
jecxz
add
push
sub
ja
sbb
and
sbb
dec
mov
add
mov
add
jno
add
sub
mov
add
mov
add
sub
pop
sub
rsqrtps
add
cli
sub
les
sub
lds
sub
shlb
mov
sub
mov
xchg
sub
dec
out
add
ja
add
mov
add
push
sub
or
sub
cmpsb
loop
add
sbb
rorl
sub
mov
sbb
subl
lcall
add
in
add
sub
divb
sub
cld
out
add
outsb
sub
aaa
out
add
add
jbe
push
add
in
sub
daa
in
add
jb
add
ja
add
sbb
add
sbb
adc
add
in
add
sub
mov
sub
inc
out
add
push
sub
push
hlt
sub
xchg
ljmp
add
sub
cmp
add
imull
add
sub
mov
sub
int
sub
cmpxchg
add
jbe
add
subb
inc
hlt
sub
sbb
sub
mov
sub
mov
sub
out
jmp
sbb
mov
sub
cmpsl
loopne
add
ds
add
sub
sub
sbb
xor
sub
rorl
sub
out
mov
add
insl
sub
xchg
push
sub
sti
std
sub
and
add
ljmp
in
sub
mov
sbb
cmpsl
std
sub
jbe
add
mov
add
add
hlt
sub
fsubp
sbb
inc
push
sub
mov
sub
popf
mov
add
push
sub
test
sub
aam
sub
push
sub
inc
std
sub
test
sub
cmp
sub
mov
sub
out
sbb
in
sub
push
nop
sub
enter
lock
add
js
add
add
add
sub
pop
imull
add
ds
add
add
add
lea
add
jns
add
jmp
sub
add
add
fstl
add
add
add
out
add
sub
add
sbb
je
sub
xchg
sbb
jns
sbb
mov
jmp
add
subb
imul
add
lea
add
sub
outsb
ja
add
push
add
add
add
add
cmpb
add
movsb
add
addb
add
adc
add
or
add
or
add
adc
add
pop
add
cmpb
add
sbb
add
adc
add
add
add
or
add
inc
sub
inc
mov
add
sub
gs
push
add
sbb
and
or
sub
aaa
jmp
sub
add
add
inc
mov
add
call
sub
push
mov
add
add
add
loop
add
nop
sub
add
add
mov
sub
add
add
add
inc
imul
add
popa
jo
jb
popa
je
add
add
insb
arpl
imul
add
je
imul
addr16
js
add
inc
jb
popa
je
inc
dec
inc
imul
insl
imul
jae
je
add
push
gs
arpl
gs
imul
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
insb
jae
jb
insl
jo
add
add
insl
pushl
mov
iret
cmpsl
fnstcw
fwait
xor
les
jge
mull
xor
insb
mov
fiadds
test
in
icebp
in
das
add
xor
jo
or
push
fldenv
daa
test
dec
dec
inc
ss
and
xchg
push
or
mov
add
imul
push
jb
jo
jb
jns
andb
pop
xchg
xor
out
mov
lahf
shll
mov
mov
mov
mov
and
xchg
xor
bound
enter
lea
imul
xchg
sub
clc
mov
in
enter
push
dec
cwtl
nop
popf
add
pop
dec
sub
or
adc
mov
inc
subb
pop
gs
into
out
int
xchg
xchg
mov
add
shrl
ret
xchg
and
jmp
enter
inc
mov
ss
out
xor
xor
mov
xchg
out
sub
rorb
mov
mov
sub
lea
shrb
stc
in
push
loope
es
fnstsw
mov
inc
cmp
inc
mov
jmp
out
sahf
cmpsb
cmp
lret
sbb
xchg
loopne
mov
ds
or
fs
daa
cmc
pop
std
push
movsl
iret
movsl
jnp
incb
or
aad
scas
in
jg
xor
pop
sarl
dec
mov
scas
mov
mov
aam
shll
es
rolb
dec
xchg
push
aam
imull
int3
jb
shlb
xchg
or
cs
inc
jecxz
in
pop
xchg
in
pop
pop
les
mov
addr16
fsubr
rcl
sbb
in
sbb
add
adc
popa
enter
ficompl
in
dec
cs
and
adc
and
add
lahf
adc
ja
mov
mov
or
pop
lock
gs
sub
inc
aad
mov
mov
xor
inc
mov
into
pusha
jecxz
out
out
lahf
and
lea
pop
inc
jns
cltd
test
fisttpll
jnp
inc
add
inc
gs
dec
push
xor
add
dec
outsb
je
jb
arpl
arpl
add
gs
outsl
add
adc
add
ja
add
pushf
jmp
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
call
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
movb
clc
add
mov
mov
pushf
lea
jmp
insb
in
sub
sub
loopne
sub
mov
sub
pop
subb
sub
add
xchg
sub
hlt
in
sub
push
je
add
sub
sbb
sub
fldl
sub
lods
icebp
sub
inc
push
sub
and
sub
ljmp
add
sub
mov
sub
sbbb
add
sub
cwtl
lcall
test
sub
movsb
lcall
add
add
lcall
out
sub
cmp
sub
dec
jmp
add
add
repz
bound
sub
add
sub
outsl
mov
add
sub
sbb
sub
push
je
add
sub
fldl
sub
add
insb
jae
jb
jo
outsb
inc
add
shld
dec
xchg
incb
add
jmp
out
popl
sub
imul
pop
lret
sub
cwtl
fidivl
les
adc
rcrb
cwtl
test
aad
roll
movb
sbb
popa
mov
jmp
jmp
xor
mov
ficoml
fs
sub
cmp
movsb
ret
cltd
ret
xadd
push
jbe
fbld
mov
aas
sub
jmp
xor
xchg
clc
and
rorl
jnp
jno
cld
push
sahf
shll
adc
daa
sahf
stc
pop
add
adc
pop
nop
mov
adc
loopne
jp
sahf
xor
xchg
testl
test
ret
jae
add
int
cli
les
inc
shlb
dec
pop
rcrl
punpcklwd
fbstp
mov
pop
mov
inc
in
imul
mov
js
and
loop
test
test
lods
fucomip
bound
mov
icebp
or
xor
push
lods
ds
inc
das
mov
adc
sti
popf
sub
arpl
mov
mov
xchg
and
ret
data16
shl
xor
jae
xor
inc
push
jecxz
lret
dec
jecxz
fwait
inc
and
setg
mov
pushf
and
call
push
call
and
adcb
pushl
ret
add
inc
gs
bound
arpl
pushl
dec
pushf
stc
shr
call
mov
test
stc
call
add
push
gs
imul
jae
jmp
push
call
pop
pop
add
push
outsl
jae
dec
gs
popa
addr16
add
add
je
push
outsl
push
imul
popa
jbe
dec
jne
inc
insb
outsl
jae
add
add
je
outsl
arpl
add
add
je
jb
gs
jo
outsb
inc
add
test
addl
jmp
add
inc
gs
jb
imul
imul
insl
imul
insl
dec
jo
outsb
add
in
add
add
inc
imul
outsl
push
jns
je
insl
push
imul
pushl
adc
push
call
add
dec
jae
imul
popa
bound
add
push
inc
push
dec
xor
cs
insb
add
add
bound
push
gs
dec
jne
inc
add
add
outsb
fs
imul
inc
add
add
jae
popa
addr16
gs
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
fs
je
jmp
add
push
gs
jb
jo
add
add
jbe
dec
jne
push
outsb
jo
gs
jb
dec
gs
fs
add
push
gs
outsl
jbe
push
jb
jo
add
jns
add
jmp
add
inc
imul
and
je
bt
add
cmp
mov
shl
not
mov
bsr
pushf
stc
sub
jnp
mov
btc
rol
mov
cmp
test
pushf
lea
je
test
clc
add
add
not
pusha
bsr
mov
pushf
bt
mov
bt
test
call
push
movsb
into
jl
adc
dec
out
sbb
cmp
aad
aad
inc
sbb
insb
fisubl
test
push
sub
cmp
int
adc
inc
in
dec
scas
mov
std
fidivrl
xchg
sbb
pushf
xorl
pushf
and
movsl
cmp
out
dec
test
pop
mov
dec
sbb
out
out
mov
inc
cmp
jns
push
mov
lds
inc
sbb
push
std
jmp
xor
mov
repz
add
popa
jb
inc
outsl
arpl
pusha
pushf
lea
call
pushf
pushf
pushf
pusha
lea
jmp
add
inc
push
outsb
jne
je
insl
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
je
insb
addr16
je
insl
add
add
gs
push
call
add
inc
jb
popa
je
inc
imul
ja
jbe
dec
jne
push
jb
jo
jb
dec
gs
fs
add
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
js
push
adc
mov
mov
pusha
lea
jmp
add
inc
gs
imul
add
add
je
popa
jb
outsb
je
push
btr
mov
stc
mov
cmc
jmp
jmp
add
inc
gs
popa
jo
outsl
fs
add
popa
jo
jb
gs
cwtl
jns
add
add
je
jb
gs
popa
outsb
outsl
outsb
imul
push
jb
inc
add
add
je
insb
imul
add
je
imul
popa
arpl
outsb
je
movb
adc
pushf
lea
jmp
push
call
cmp
and
test
movb
pushf
or
pushl
lea
je
and
dec
pushf
pop
mov
btc
bt
cmp
bswap
mov
push
cmp
sub
test
cmc
pushf
shr
sub
clc
cmp
test
cmpl
call
pushf
pusha
lea
je
bswap
add
shld
mov
stc
test
pusha
lea
ja
pusha
lea
je
push
pushf
add
pusha
mov
pushf
pushf
lea
jmp
add
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
add
outsb
push
jb
arpl
jae
add
dec
outsl
popa
fs
imul
lret
pushl
popfw
lea
je
pusha
inc
push
adc
lea
pusha
pushl
pushl
ret
add
push
gs
imul
je
js
outsl
insb
xor
cs
insb
add
add
je
jns
je
insl
dec
gs
imul
xchg
dec
cli
js
push
xchg
add
mov
imul
outsb
or
mov
loope
rorl
adcl
add
jne
inc
imul
gs
imul
in
jmp
xlat
aam
insb
mov
dec
sub
adc
sahf
xorb
adc
call
ret
adcl
and
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
std
aas
std
addr16
std
daa
cld
pop
in
arpl
jp
outsl
loope
ljmp
sub
jge
jecxz
cmpsl
mov
xor
fs
xor
sub
jl
inc
ret
push
je
jb
push
popa
add
push
jmp
add
inc
insb
outsl
bound
push
imul
mov
mov
pushf
pushl
ret
clc
pushf
test
jmp
add
inc
gs
jb
jns
jne
jae
jb
pusha
inc
inc
dec
add
xchg
lea
jnp
sub
bsr
mov
adc
push
mov
cmp
movl
xchg
sub
btr
mov
call
add
push
gs
arpl
insb
insb
push
popa
outsb
addr16
fsubrl
out
sub
dec
sbb
das
xchg
pop
sub
fisubrl
or
mov
sub
sub
fisubrs
inc
cltd
sub
xor
or
pusha
mov
jl
out
adc
or
or
and
inc
or
incl
in
add
mov
pop
outsl
cld
xor
cmp
orb
inc
xor
daa
out
out
adc
cwtl
sysret
dec
sub
out
sub
cld
lea
mov
mov
add
fwait
or
sbb
pusha
or
inc
jae
cmp
icebp
sub
cmc
icebp
inc
jne
in
push
inc
lock
push
xor
out
xor
in
and
and
and
and
and
lods
and
and
in
aam
cs
inc
inc
sub
adc
cld
or
dec
lods
rorb
inc
stc
or
and
in
popf
xchg
pop
popa
aad
cmpsl
in
dec
lahf
mov
pop
in
ficompl
ficomps
fs
imul
push
loop
xchg
add
out
mov
push
sbb
lods
fwait
pop
pushf
mov
sti
xchg
ficompl
lods
pusha
ljmp
out
mov
call
test
xor
ljmp
bound
sbb
jp
pop
push
push
xchg
sahf
repnz
aad
sti
xor
sub
repz
pushf
out
popf
push
in
repz
cmp
push
add
in
jbe
cmp
les
inc
repnz
repnz
mov
negb
cli
cmc
jl
inc
push
inc
repz
pop
pop
fucomip
xchg
aam
xor
repz
movsl
pop
jns
out
icebp
pop
hlt
xchg
dec
fsubs
pop
sahf
sbb
stos
repz
cmc
jne
xor
pop
fisubrs
sbbb
xchg
xor
jle
icebp
mov
in
mov
out
sahf
repz
sbb
movsb
and
add
sub
in
and
sbb
jae
cld
repz
sbb
pop
lds
cmp
push
das
lock
pcmpgtd
out
imul
add
xor
test
inc
imul
in
out
lock
push
std
lock
dec
and
insl
cwtl
pop
dec
lock
sbb
push
sbb
push
shr
popf
test
lock
lods
xor
test
adc
out
repz
sub
xor
mov
jbe
pop
out
adc
out
sub
sti
test
add
jge
push
add
lock
ds
jmp
imul
fstpl
sub
push
das
sbb
push
mov
add
cltd
ds
rorb
into
imul
out
sub
test
push
jmp
sub
in
test
imul
mov
jmp
lock
out
icebp
out
push
fcmovnb
add
icebp
xchg
xor
cmpl
dec
mov
leave
add
and
hlt
adc
jge
fiadds
xchg
es
cmc
push
lock
add
inc
or
ret
lods
rcll
cmp
xchg
mov
xchg
jge
add
imul
adc
or
jp
notb
push
in
adcb
out
add
push
sub
xor
in
rorl
imul
sbb
sbb
ret
push
inc
adc
mov
clc
xchg
mov
ljmp
cwtl
jmp
mov
imul
cli
cld
jl
push
sbb
imul
pop
xchg
xor
loope
xchg
sbb
jp
pop
ret
sti
push
in
pop
lret
jbe
test
fnstcw
bound
jmp
jge
in
adc
outsl
sub
ret
shrl
xchg
in
pop
lock
inc
jbe
popa
out
mov
add
out
stos
movsl
sbb
decb
xchg
in
pop
push
out
arpl
int
in
adc
outsl
bound
mov
shrl
cld
shrb
jecxz
in
fs
xor
push
imul
in
mov
repnz
or
and
push
xor
in
push
and
mov
cmp
jo
or
sub
addr16
in
fldl
iret
pop
mov
jp
inc
xor
or
mov
bound
ja
aaa
in
xchg
ret
aaa
in
dec
push
ret
or
dec
sbb
out
dec
sbb
out
shlb
ja
sub
xor
ljmp
xchg
mov
mov
int3
jle
dec
and
lret
lock
in
in
lret
mov
je
dec
arpl
xor
stos
add
mov
dec
das
shll
adc
fistl
outsb
in
lock
in
pop
leave
fiaddl
adc
mov
xchg
outsl
ja
test
insb
cli
sub
out
popa
out
pop
sub
into
mov
in
rcr
pop
xchg
in
pop
push
xchg
int
add
xchg
jge
or
das
adc
shlb
stos
sub
rcr
cli
aad
out
mov
imul
imul
adc
sub
rcr
jmp
push
jmp
cmpsl
data16
or
cmovs
test
mov
dec
sub
mov
push
ds
push
pop
loope
test
test
or
gs
or
sub
mov
fiadds
and
lock
imul
into
push
sbb
jnp
cmpps
divl
pushl
daa
inc
add
repz
dec
sti
push
das
or
pop
jl
cmp
inc
xchg
add
std
or
lods
rolb
jbe
and
sub
pop
xchg
inc
pop
inc
js
lods
insl
inc
enter
fnstsw
xchg
jbe
or
cmc
imul
push
arpl
push
xchg
pop
sbb
mov
mov
fldl2e
cltd
fistps
sti
push
pop
mov
out
fs
sub
sub
jl
icebp
cmc
sahf
push
jo
movsb
mov
out
call
cmpsl
out
lock
popf
push
outsb
mov
sbb
cwtl
and
cmpsb
leave
pop
mov
addr16
fsubrp
lahf
inc
or
push
adc
cmp
push
cli
test
fimuls
cwtl
cmpsb
aad
or
dec
sbb
mov
pop
loopne
dec
add
in
adc
in
jle
repz
loope
insl
out
and
cmp
and
ja
pusha
aas
jecxz
ficoml
jb
fildll
push
lcall
out
hlt
xor
out
pop
jmp
adc
cltd
call
mov
xor
data16
stos
pop
adc
mov
pop
jno
push
stc
pop
and
icebp
mov
fcomps
push
push
sbb
std
movsl
in
adc
nop
aaa
cmp
icebp
xor
in
shl
pop
or
xchg
aaa
mov
lahf
pop
xor
xor
fcmovnu
pop
sub
lcall
mov
int3
lcall
std
and
je
adc
adc
enter
push
jmp
dec
pop
add
leave
std
xchg
pop
in
cmp
cmp
out
in
xor
js
xor
cmc
fstl
bnd
add
mov
pop
push
int
jbe
sub
and
xchg
jmp
sub
insl
or
mov
enter
movl
fadds
inc
lcall
repnz
icebp
or
inc
jp
or
jns
add
or
cmpsl
rolb
push
cmp
in
jmp
sar
jne
inc
and
pop
push
pop
loopne
mov
mov
or
adcl
or
mov
das
inc
mov
xchg
cmpsb
int
rcl
inc
faddp
dec
mov
add
sbb
and
out
lcall
lods
sub
jbe
push
sti
sub
sub
fstpt
insb
cmp
sbb
repz
pop
psllq
std
insb
sub
sub
aad
and
dec
dec
pusha
lahf
in
sti
hlt
hlt
pop
fwait
ljmp
fisubs
mov
stc
outsl
outsl
mov
xor
fldenv
push
enter
pop
mov
pop
xor
dec
leave
lret
adc
xchg
fwait
shl
adc
and
pop
test
xor
cld
dec
sub
xchg
sub
insb
mov
jg
outsl
add
cmp
jl
inc
incb
ret
cmp
out
push
stos
pop
imul
loopne
ljmp
hlt
sub
outsb
sahf
push
fs
and
popf
fwait
sbb
testl
test
outsb
repnz
inc
and
xchg
ficompl
sub
imull
pop
inc
sti
cltd
incl
inc
aas
dec
fisttpl
or
sub
sarl
add
sub
daa
jnp
pop
stc
adc
sbb
cmp
stos
jbe
dec
out
or
jge
fbld
fs
out
stos
mov
mov
dec
dec
xchg
jno
out
mov
xrelease
outsb
insl
xchg
jne
mov
jle
mov
test
inc
xor
jo
push
mov
add
and
cs
xchg
jnp
or
addr16
hlt
sub
aaa
adc
insb
imul
mov
mov
out
aas
add
and
divl
mov
in
int3
stc
lock
push
cld
inc
out
out
insb
imul
mov
mov
aas
cmp
ljmp
lock
inc
ret
hlt
add
fcomi
divl
iret
imul
scas
and
testb
lods
out
sub
shl
push
xor
lock
add
aas
jp
dec
sub
negb
clc
leave
in
out
adc
add
sub
dec
aam
repz
mov
arpl
add
or
push
lock
cmp
jb
or
cmp
dec
scas
aaa
test
mov
lcall
xchg
insb
or
adc
and
test
sbb
in
ds
imul
out
movsb
enter
imul
mov
lock
popl
adc
ret
daa
jl
hlt
and
push
xor
mov
inc
pop
testb
sub
jae
fwait
imul
loop
xchg
pop
ss
inc
mov
pop
cmp
ss
or
lahf
sub
jb
pop
imul
mov
lea
add
fbld
xchg
repz
add
mov
mov
pop
testb
adc
shlb
je
xchg
jp
in
or
mov
or
inc
in
pop
cmp
test
imul
testb
js
hlt
or
or
or
pop
in
jp
orl
out
in
aas
add
cmc
in
aam
mov
inc
ret
adc
sets
cmc
out
stc
pop
in
std
out
movsb
in
test
addb
lahf
adc
xchg
inc
mov
or
icebp
ljmp
outsb
pop
jecxz
out
adc
sbb
arpl
fisubrs
mov
cld
in
in
jb
push
lock
push
push
lods
sub
into
std
lea
jae
cld
int3
dec
dec
mov
hlt
in
std
dec
adc
js
add
aaa
dec
mov
arpl
in
in
fldenv
in
sbb
popa
inc
cmp
es
dec
lods
outsl
and
in
std
and
jae
cld
insb
and
outsl
and
in
std
pop
dec
sub
sbb
hlt
out
std
sbb
jae
cld
outsb
sbb
outsl
sbb
out
std
pop
dec
das
jae
cld
outsl
adc
hlt
lock
adc
jae
cld
jo
dec
mov
adc
icebp
std
cmovg
jae
cld
jno
dec
mov
or
repnz
or
jae
cld
jb
dec
mov
or
repz
pop
dec
xor
cld
jae
dec
mov
add
hlt
std
add
jae
cld
je
dec
mov
std
hlt
cmc
std
cld
dec
xor
cli
dec
mov
stc
hlt
idiv
clc
dec
ss
cld
jbe
dec
mov
cmc
hlt
idiv
hlt
dec
aaa
jae
cld
ja
dec
mov
std
lock
cmp
cld
js
dec
mov
out
add
jmp
lds
inc
jmp
pop
inc
xchg
or
out
leave
or
stc
lock
lods
out
outsb
imul
sub
outsl
xor
das
jo
addb
inc
xchg
mov
push
cs
mov
mov
xor
mov
xor
js
repnz
aaa
jmp
cmp
jne
cmc
je
idivl
mov
cltd
repz
sub
push
movb
movl
lods
jb
repz
adc
jg
imul
int
repnz
imul
xor
sub
mov
push
mov
cltd
icebp
jg
sbb
cmc
or
or
jg
imul
in
add
cli
sub
insl
xor
imul
mov
scas
sbb
out
push
jge
imulb
movsb
outsb
repz
mov
sbb
or
cld
out
xor
imul
xor
mov
jno,pn
or
repnz
inc
mov
repnz
js
xor
jl
xor
insl
or
mov
sub
adc
imul
out
xor
xor
or
hlt
movsl
dec
imul
mov
sbb
cld
xor
mov
out
xchg
sub
das
jae
hlt
shrb
out
aas
cmc
add
dec
insl
hlt
or
cld
xor
mov
jnp
lock
in
rcll
in
mov
icebp
add
dec
dec
ja
cmp
repz
js
imul
mov
ja
cmp
and
in
xor
mov
mulb
outsb
sbb
daa
jbe
sub
out
icebp
xchg
mov
mov
testl
js
aaa
or
ja
mov
sbb
clc
or
fs
imul
cli
mov
inc
js
repz
fdivs
cmc
repnz
shlb
push
cmp
mov
xor
mov
imul
hlt
ss
ja
cmp
jp
mov
jg
cmp
cmc
cmp
insb
mov
mov
imul
out
fdivs
mov
xor
lods
cld
or
mov
xor
popa
repz
sbb
arpl
out
mov
imul
xor
add
in
out
xor
mov
jg,pn
imul
mov
pop
imul
push
insb
ds
jle
or
test
xor
xchg
mov
outsb
inc
clc
mov
jne
hlt
xchg
push
rcll
imul
cmpsl
bnd
lea
outsb
xor
mov
jno
mov
jnp
aam
cmc
divl
sub
repnz
repz
imul
mov
xor
imul
add
or
out
clc
inc
or
jg
insl
mov
ret
out
xchg
in
inc
add
jne
imul
imul
orl
out
repz
icebp
cmp
imul
js
inc
or
sbb
imul
jbe
mov
popa
inc
lahf
push
insl
in
test
pop
idivb
dec
push
or
inc
jns
imul
xchg
imul
or
mov
insl
pop
pop
or
xor
sub
je
mov
imul
or
leave
xor
popa
dec
mov
imul
popf
add
sbb
sub
jbe
mov
push
jno
jne
cmpsl
div
xor
mov
xor
out
cs
mov
mov
mov
int3
shrl
imul
xor
xor
adc
fs
push
xor
div
xchg
imul
divb
iret
dec
ss
or
sub
mov
cmc
lock
scas
xor
insl
pushl
jno
mov
aas
mov
paddusb
out
repz
outsl
shr
xor
mov
xor
mov
outsb
adc
push
inc
outsb
popf
mov
and
mov
scas
push
nop
sbb
xlat
imul
cmpsl
mov
adc
inc
push
aam
imul
jae
jnp
mov
imul
insb
adc
or
dec
xor
jno
imul
popf
in
adc
repnz
dec
in
xchg
imul
imul
out
xor
adc
lock
xchg
gs
aad
adc
dec
push
or
mov
popa
mov
aaa
jb
mov
jbe
jae
xchg
or
ds
xor
cmc
aad
mov
xor
mov
cmp
imul
sub
dec
xor
hlt
repz
shll
vmread
sbb
xor
in
pop
or
fbstp
sbb
cmc
or
flds
mov
jne
divl
and
imul
das
xor
xor
or
mov
in
sbb
std
imul
cld
mov
dec
and
jp
pop
or
popf
imulb
mov
mov
aaa
divb
subb
icebp
jae
imul
pop
mov
adc
fwait
or
out
mov
mov
rcrl
int
xor
popf
pop
cmp
fimuls
push
xlat
jo
mov
pop
stc
pop
subl
out
popf
in
fildll
pop
push
adc
push
pop
or
mov
arpl
mov
shlb
repz
sub
aaa
pusha
lock
imul
pushf
mov
imul
mull
lods
jge
pushf
popa
icebp
xorl
jno
icebp
scas
xor
dec
mov
mov
xor
rdmsr
sbb
ss
ja
mov
out
cmp
xor
jno,pn
imul
repnz
fbstp
lods
xor
in
mov
hlt
jno
jecxz
mov
adc
or
add
imul
imul
or
dec
xor
outsb
and
fs
popf
js
daa
movsb
or
in
and
imul
xchg
cmc
mov
int
xor
mov
sbb
xor
cmpsb
outsl
xchg
out
out
clc
dec
sub
daa
icebp
loopne
sub
mov
ja
addr16
cmp
imul
or
cmpsl
addr16
call
cmc
imul
mov
push
in
jne
imul
mov
test
pop
xor
xor
jmp
shll
sub
icebp
jle
xor
add
in
mov
xor
notl
sbb
mov
and
mov
ud1
jne
ss
sub
outsb
rcll
imul
and
or
imul
jno
stc
mov
in
sub
test
rep
push
imul
mov
lock
push
xor
in
sti
jae
jnp
imul
jg
sub
mov
dec
in
jns
test
insl
sub
mov
imul
imul
xor
sbb
dec
out
adc
cs
out
aas
mov
imul
int
add
mov
mov
xor
outsb
adc
jbe
dec
mov
in
mov
add
lock
push
testl
jno
xor
jo
mov
jno
dec
jae
repnz
imul
xchg
repnz
mov
xor
dec
jb
out
xor
jg
sbb
pop
aas
imul
aaa
mov
add
mov
mov
cmc
arpl
add
xor
mov
test
push
cmc
xor
stc
lock
adc
push
divl
pop
imul
dec
mov
xor
jno
icebp
xor
lods
mov
repz
imul
testb
fildll
fbstp
repnz
mov
sub
jge
mov
xchg
mov
mov
icebp
mov
sub
dec
xor
js
cmp
lock
imul
imul
mov
or
push
out
xor
imul
mov
add
mov
mov
sti
cli
jne
in
cmp
jp
insl
hlt
jle
ja
hlt
ss
imul
idiv
dec
adc
mov
lock
mov
cmc
imul
dec
in
xor
mov
and
std
ss
std
cmp
addr16
imul
out
mov
divb
xor
sub
mov
in
js
cmp
sub
and
ss
out
push
adc
std
mov
decb
out
shrl
mov
clc
adc
scas
mull
std
mov
jae
adc
scas
clc
cs
mov
mov
mov
xor
adc
mov
out
and
cld
mov
icebp
in
in
mov
push
scas
mov
mov
dec
insl
insb
mov
adc
sub
cli
mov
test
jns
scas
xchg
cmp
jb
and
push
jno
imull
scas
mov
insb
sub
mov
scas
xchg
jbe
in
dec
sbb
cmc
mov
int
outsl
cmp
outsb
out
adc
cli
scas
das
mov
add
jne
cmc
scas
sub
mov
cli
divb
icebp
in
in
aaa
insl
cmp
adc
in
notb
popa
jbe
lcall
ja
movsb
or
lock
cmp
cmc
out
add
shlb
ret
adc
jo
adc
in
jmp
ja
repnz
scas
mov
sub
jbe
fldenv
repz
lock
insb
mov
scas
push
push
lods
jno
out
mov
std
push
jl
out
sbb
jmp
aas
dec
outsb
lods
pushl
mov
outsl
ja
mov
clc
mov
sub
sbb
cmp
push
stc
sub
ss
scas
xchg
das
int
mov
imulb
lret
mov
jmp
or
icebp
push
lods
xchg
adc
or
add
xor
adc
and
adc
shlb
insb
cmp
imul
or
outsb
mov
fdivl
je
and
lods
repz
idiv
and
cmpl
out
mov
inc
test
ja
sbb
xor
sub
lahf
in
lock
std
imul
dec
adc
add
adc
lods
repnz
mov
pop
xchg
xor
jns
cmpsb
sub
mov
push
sbbl
xor
adcb
add
or
in
lea
rorl
out
sbb
lods
outsl
mov
gs
imul
dec
sti
hlt
in
mov
inc
jge
adc
jno
xchg
lock
jno
mov
sbbl
sub
mov
mov
std
scas
repz
popa
sbb
insb
cmp
sub
aaa
xor
in
xor
outsl
in
scas
jo
xor
xor
mov
and
out
or
jp
jbe
add
sbb
out
aaa
cld
jge
sub
adc
or
and
cld
mov
sbb
xor
add
dec
add
mov
xchg
or
adcl
aaa
cmpl
test
out
jne
mov
cmp
les
pop
hlt
adc
sbbl
push
xchg
mov
and
and
jae
test
pop
out
adc
mov
push
ss
in
clc
mov
sub
aam
xor
ja
jne
lcall
in
xor
imul
lea
cmovle
mov
xchg
out
icebp
adc
inc
inc
inc
cmc
or
outsl
mov
jno
decl
mov
jne
insl
in
repnz
xchg
je
je
hlt
add
jmp
mov
outsl
mov
hlt
repz
outsl
repnz
push
dec
lods
adc
cs
xor
xor
sub
lock
test
mov
mov
ret
clc
sti
lods
and
cmc
das
inc
imul
push
xor
xor
push
jno
adc
icebp
or
lahf
aas
scas
adc
add
imul
xor
push
dec
sub
inc
imul
jne
and
pop
xchg
fs
imul
jno
jbe
and
pop
stc
mov
insl
xchg
jb
lret
push
mov
std
adc
sub
push
adc
repz
mov
jno
push
imul
mov
icebp
or
sbb
and
cmpsl
mov
sub
arpl
and
decb
sbb
mov
pop
in
adc
jnp
dec
add
decb
sbb
sub
mov
sub
das
mov
in
cmc
insl
std
in
sbb
out
xor
xor
test
pop
cmc
jno
and
in
imul
jbe
repnz
adc
push
inc
jmp
sbb
jp
and
scas
and
xor
or
iret
xchg
jge
cwtl
sub
sub
inc
icebp
testl
inc
or
clc
sbb
dec
testb
test
jbe
ds
js
adc
adc
hlt
stos
mov
or
loopne
lods
jae
dec
mov
adc
mov
repz
add
pop
add
imull
inc
out
sub
in
cltd
shr
ret
add
and
jae
adc
outsl
in
mov
push
or
add
je
sub
sbb
lahf
mov
sub
imul
mov
push
sub
jbe
and
mov
pop
nop
fldl
inc
test
cli
call
and
outsb
xchg
xchg
dec
jge
push
jne
mov
out
xor
aaa
dec
push
mov
and
jb
jne
andl
inc
and
mov
repnz
shl
scas
xchg
xor
xchg
mov
lods
xor
test
in
dec
in
add
loope
pop
icebp
pushf
repnz
imul
add
inc
xchg
xor
xchg
sub
in
adc
pop
or
repz
sbb
sub
push
adc
aam
jmp
inc
xchg
mov
lock
xor
or
and
xor
jmp
cwtl
cmp
inc
cmp
add
add
subl
mov
or
cmp
mov
hlt
cld
jbe
cmp
outsb
sub
xchg
les
lock
gs
js
int
cmc
out
adc
dec
lahf
xchg
jbe
push
dec
in
xor
icebp
mov
adc
and
adc
adc
dec
mov
pop
jp
dec
mov
cmp
fwait
sbb
movsl
or
je
cld
psubd
mov
outsl
idivl
scas
testl
push
cmp
mov
mov
jge
insb
mov
cmc
cmp
and
or
test
or
cli
insl
cmp
aad
pop
js
aaa
add
add
mov
sti
add
xor
add
push
or
aaa
sahf
inc
nop
sti
stc
test
test
cs
inc
xor
aaa
xorb
notl
push
divl
icebp
xor
jnp
dec
cmp
mov
ds
xchg
xchg
jg
jg
and
push
outsb
js
shlb
outsl
xchg
adc
aaa
pushf
cld
pop
mov
in
xchg
mov
cmc
adc
cmp
insb
adcl
and
lock
and
idiv
nop
stos
sti
stos
hlt
pop
adc
fiadds
clc
and
sub
fsubrl
cmp
outsb
xchg
insl
xchg
adc
insb
mov
jp
outsl
mov
xchg
adc
pop
sbb
xchg
cwtl
adc
xor
js
bnd
pushl
or
pop
xor
push
xchg
adc
add
mov
lods
mov
push
sbbl
je
adc
pop
sti
pop
cmc
out
popf
shlb
movups
inc
cli
adc
jb
hlt
mov
sbb
or
xchg
xchg
insb
adc
xchg
lahf
xor
xor
xchg
lock
cwtl
scas
stc
adc
sti
cmp
adc
scas
js
cmp
xchg
insl
clc
cli
xor
lods
push
adc
out
lods
mov
jmp
and
or
sbb
mov
aas
lock
std
xor
ja
mov
repnz
add
addl
mov
pop
sti
in
cli
addb
adc
push
jnp
mov
insl
and
jne
sub
jae
mov
add
jae
pushf
cmp
test
sub
inc
add
xor
lahf
test
mov
and
or
xchg
outsb
jecxz
aad
mov
rcl
or
xchg
sub
sbb
idivl
sbb
or
xor
add
push
mov
adc
lods
xor
repz
jnp
les
xchg
adc
movsl
lods
icebp
test
and
push
mov
test
ss
inc
jbe
adc
or
or
sbb
pushl
out
sbb
je
js
mov
mov
push
cmp
movsl
fwait
jno
testl
mov
lock
mov
jle
add
xor
or
add
xchg
divb
sub
dec
push
mov
outsl
in
push
push
cmp
dec
subl
xchg
jno
cli
jnp
or
cmp
mov
mov
test
dec
adc
or
adc
fwait
lock
xchg
xor
insb
push
mov
sub
xorl
xchg
xchg
cwtl
cmp
or
hlt
pushf
test
adc
dec
setnp
xchg
mov
lahf
add
xchg
inc
inc
cmc
hlt
adc
dec
add
insb
mov
push
out
sbb
jp
sub
out
or
idiv
divb
xchg
sbb
or
sub
xchg
push
lea
adc
pushf
lock
nop
outsl
mov
imul
xor
mov
in
jne
cld
mov
adc
xchg
xchg
pop
sub
test
and
in
jmp
push
dec
outsl
cmc
sub
divb
outsb
sahf
adc
sub
adc
fwait
iret
je
jg
insb
movsl
in
jae
mov
jnp
cmp
lock
icebp
xchg
hlt
jno
mov
in
addr16
nop
outsl
sbb
xor
mov
and
pushf
in
xor
mov
sahf
lock
cmp
sbb
sub
xchg
jno
in
xor
mov
repz
adc
mov
mov
mov
mov
xchg
push
fwait
sbb
jge
ja
insb
cli
mov
cltd
std
mov
lods
sub
mov
mov
sahf
outsl
insb
loope
sub
icebp
icebp
xlat
dec
dec
mov
push
mov
dec
ja
jae
sub
and
lock
std
or
xor
sub
test
xchg
and
dec
pop
outsl
xchg
xchg
inc
adc
xchg
notl
mov
jmp
stc
push
out
pushf
pushl
ret
out
scas
push
pop
push
pop
mov
lahf
and
jne
cmc
and
mov
repz
xchg
add
pop
outsl
cmp
lock
mov
xchg
mov
sub
add
push
test
outsl
cs
mov
or
cmp
aas
clc
xchg
push
adc
shlb
movsb
mov
mov
pop
jp
lahf
int
lock
mov
out
test
sti
fadds
cld
aas
xchg
ja
hlt
idiv
hlt
jmp
insb
sub
sbb
push
lea
scas
cvtps2pi
psubsb
jl
fwait
xor
cli
sbb
es
movd
sub
sbb
inc
negb
and
xchg
adc
push
jno
aam
pop
scas
movsb
sub
sbb
mov
in
ja
xchg
lods
inc
jp
divl
sbb
xor
sbb
mov
dec
jle
push
adc
mov
fs
hlt
fwait
xor
outsl
scas
push
sub
mov
push
add
pop
jmp
stc
push
mov
popf
cmp
fisubrl
sub
add
add
sub
outsl
mov
mov
daa
mov
repz
notb
movsb
inc
pop
lea
mov
mov
lcall
xchg
add
std
fldt
xchg
aam
cmp
jns
std
dec
dec
out
es
jbe,pn
adc
cmp
das
mov
insb
icebp
adc
mov
push
sbb
pushf
jle
in
pushf
incb
lcall
hlt
xchg
negb
pop
xchg
lock
test
jbe
push
adc
das
arpl
or
adc
xchg
sub
xchg
sbbl
mov
add
or
xor
push
xor
adc
nop
xor
or
incl
fwait
xchg
icebp
adc
inc
lods
adc
out
adc
clc
addr16
or
insb
lcall
sbbl
out
sub
stc
mov
sub
or
sub
and
out
xchg
add
icebp
daa
divb
mov
cmp
and
sub
xor
bnd
std
into
lock
push
and
cltd
sbb
test
jmp
cld
and
mov
sbb
lcall
xlat
into
std
and
or
push
adc
stc
cmc
sbb
pop
outsl
mov
call
adc
mov
mull
xor
xor
je
invd
pop
xchg
roll
ja
jg
xchg
xor
mov
jle
mov
pop
outsb
jne
psrad
lods
mov
cld
dec
out
outsl
add
repz
jns
cmc
mov
test
mov
dec
mov
dec
jb
or
inc
out
jl,pn
push
jo
pushf
es
adc
sbb
test
adc
adc
xor
scas
inc
jbe
shrb
outsl
arpl
shl
xor
fwait
jo
push
outsb
dec
out
cld
outsl
sbb
push
xchg
fstl
cmp
xchg
xor
mov
sub
testl
pop
dec
mov
jmp
cmp
pop
jae
mov
mov
adc
je
ja
mov
mov
push
outsl
sbb
fwait
mov
in
sbb
clc
mov
jo
mov
cmp
xchg
sbb
or
add
cmp
fisubs
push
nop
sub
cld
adc
testl
push
xor
clc
sub
pop
movsl
lock
and
add
xchg
cmp
idivl
inc
xor
ja
popf
or
into
repz
outsl
sahf
lahf
sbb
mov
push
in
or
mov
dec
pop
and
loopne
es
std
repz
xchg
notl
jp
daa
lock
jg
sub
lock
je
and
xor
decl
sub
aas
and
push
mov
sbb
sahf
loope
hlt
repnz
xor
add
dec
and
fisttps
mov
sahf
adc
or
push
outsl
adc
mov
outsl
push
and
lods
lahf
cmc
mov
jo
mov
pop
jle
push
movsl
popf
dec
sti
outsl
add
mov
in
je
adc
xchg
dec
test
xchg
sbb
pop
into
or
clc
mov
andb
out
xor
jbe
xchg
jo
addl
and
or
add
repz
outsl
pop
movsl
sbb
out
xor
stos
adc
mov
and
dec
cltd
cmp
dec
outsb
fwait
cmp
out
xchg
hlt
cmp
hlt
xor
std
ss
xor
push
pop
or
and
xchg
sbb
push
or
rorb
xchg
mov
cmpsb
mov
xor
xchg
xor
movsl
or
cs
sub
aam
js
out
incb
mov
mov
mov
std
adc
jns
push
adc
or
and
in
add
xchg
jb
jne
mov
xor
aaa
fwait
jae
imul
imulb
into
dec
hlt
mov
stc
xlat
and
add
inc
xor
imul
dec
pop
adc
cmpsl
xor
sbb
clc
or
insb
sbb
nop
sbb
sbb
lock
xor
aad
outsl
dec
jae
xor
fiadds
cld
and
test
sub
lahf
mov
insb
adc
popa
or
repnz
xor
mov
adc
sbbb
psubq
out
xchg
push
daa
xchg
std
lock
clc
aas
outsb
jnp
imul
idiv
mov
idivl
sbb
movsl
out
sbb
or
xchg
lea
push
data16
test
addb
testl
dec
sub
xor
adc
pusha
adc
cs
add
pusha
push
rorb
cmp
cmp
out
std
push
pushf
mov
xchg
adc
sbb
cmc
ja
mov
push
mov
lods
and
imulb
jmp
add
mov
jle
add
and
cmpsl
mov
clc
dec
sub
sub
push
sub
out
add
push
inc
in
xchg
inc
hlt
add
pop
jne
xchg
lock
scas
js
xor
mov
and
mov
mov
aaa
nop
stc
cmpsb
mov
into
cli
sub
sbb
push
and
or
cli
mov
jb
lahf
shll
or
out
fs
clc
and
and
mov
imul
insl
js
or
sti
outsl
mov
arpl
divb
xor
sbb
insb
scas
mov
adc
in
test
or
and
arpl
std
or
adc
jbe
cmpsb
adc
pop
inc
push
sub
aaa
andl
hlt
sub
mov
movsb
cmp
push
icebp
sub
sbb
repnz
insb
cli
or
add
repnz
je
xchg
js
popf
ja
cmp
lods
adc
and
idivl
adc
decb
xchg
cmpsb
popf
push
scas
sahf
adc
stc
daa
pop
or
xor
movsl
and
repnz
push
jnp
push
jb
sbb
out
mov
and
lcall
insb
aad
xor
add
inc
in
inc
cmp
xor
insb
cmp
std
out
jge
mov
mov
test
icebp
mov
xchg
xchg
lock
out
in
ret
xchg
lock
hlt
cmp
xor
test
insb
mov
or
mov
mov
cs
ret
inc
in
sti
cmp
imul
outsl
cmp
xor
dec
lock
mov
insb
ret
cwtl
addr16
scas
mov
shrb
xor
mov
push
adc
insb
sbb
repnz
movsb
cmp
ja
push
sbbb
mov
cmp
out
int3
insb
cmp
insb
xchg
cmp
add
clc
xor
xorb
cltd
mov
idivl
fs
jae
xor
or
pop
cmp
mov
imul
scas
cmp
icebp
push
mov
cmc
pushf
shll
sub
cmpsb
js
cs
in
pushf
pop
inc
inc
mov
cs
jge
mov
cmp
cli
inc
adc
aaa
adc
arpl
push
or
clc
xor
je
mov
std
nop
ljmp
iret
cs
xorb
out
data16
insb
adc
mov
imul
lock
jb,pn
xor
add
insb
and
sbb
cmp
insl
out
jnp
out
sub
or
bnd
jle
jne
insb
mov
jno
xor
out
ss
insb
pushf
or
inc
testl
mov
jnp
imulb
adc
xchg
lea
cld
cmpsl
xlat
cli
mov
repnz
sahf
xor
int3
insb
and
sar
xchg
or
scas
lcall
jno
cs
and
insb
lds
cs
repz
inc
out
inc
test
nop
ljmp
jbe
mov
insb
xor
inc
nop
jo
push
pop
adc
paddusw
jno
cmc
aad
out
scas
insb
sbb
aas
sbb
mov
cmp
cli
test
iret
in
pop
xchg
notb
das
adc
cs
push
fsubrl
mov
repz
insb
cmp
fsubr
cs
xor
inc
cltd
in
in
inc
insb
sbb
scas
sarl
adc
pop
icebp
rcrb
out
xchg
shrl
mov
aaa
iret
in
mov
repz
out
mov
mov
divb
add
and
dec
insb
push
das
mov
jge
aad
in
cmp
add
cs
fs
cs
push
notb
jnp
jae
or
fwait
xor
imul
ss
sub
outsl
cmp
mov
adcl
insb
mov
or
jae
jno
pop
jns,pn
jns
sbb
insb
in
mov
push
cltd
inc
xor
mov
call
fldcw
pop
cs
sub
mov
jnp
rcll
mov
les
or
or
out
lock
lods
je
xor
cmp
mov
sub
push
sub
js
nop
into
js
sbb
push
cmc
cs
sub
insb
sbb
in
dec
jbe
icebp
xchg
ret
insb
adc
clc
or
out
cmp
mov
insb
push
nop
xor
int
inc
dec
mov
outsb
jne
xchg
testb
icebp
mov
bnd
scas
cmp
out
jb
das
jo
mov
push
aas
out
std
mov
insl
out
mov
xchg
adc
aaa
sbbb
mov
clc
insb
das
sub
insb
out
pop
mov
fsubl
add
pushf
mov
divb
mov
in
lea
insb
jae
jne
repnz
cmp
adc
xchg
insb
jg
loop
cmp
imul
cmp
arpl
ja
mov
xchg
mov
hlt
and
fs
or
popf
xor
push
mov
lea
mov
cli
lahf
cs
or
adc
xor
xor
and
or
incb
out
pop
sub
aaa
mov
xchg
hlt
sbb
ljmp
push
out
in
insb
in
push
jb
movsl
cld
addl
or
xchg
push
add
sbb
mov
sbb
lods
cmpsl
addl
js
mov
sbb
cmp
lcall
insb
fadds
add
cmpsb
cmc
and
jno
outsl
mov
and
hlt
shlb
cs
jb
stc
lods
insl
jbe
sub
lcall
out
es
movsl
insl
xchg
mov
xor
mov
frndint
sub
cld
jae
push
out
loopne
je
mov
and
adcb
es
insl
add
xchg
lock
daa
imul
in
mov
daa
mov
cmp
add
lods
xchg
xchg
inc
in
cmc
movsl
cmp
sbb
loope
push
lahf
or
xchg
jns
push
xor
cs
mov
mov
hlt
mov
icebp
aaa
adc
mov
jne
sbb
xor
jnp
pop
mov
jge
xchg
push
add
xchg
push
ljmp
xchg
adc
mov
push
push
jg
push
jg
mov
popa
adc
jg
sbb
cmc
ss
xchg
ja
xor
or
or
or
je
mov
mulb
dec
xor
pop
test
inc
rolb
add
inc
xchg
jp
mov
sub
pop
cmc
ja
xchg
xchg
paddb
insl
cmp
add
ljmp
paddsw
nop
cmp
cld
in
roll
and
icebp
mov
sahf
shll
push
ss
add
mov
sub
or
or
outsl
popf
xor
or
jge
cmc
aaa
mov
mov
mov
lahf
es
cmp
push
out
inc
inc
out
sar
sub
lcall
sub
jae
xchg
dec
mov
inc
cmp
lcall
sbb
inc
sub
int
in
repz
in
dec
leavew
faddl
xlat
into
xchg
dec
rclb
xchg
dec
loop
int
in
lock
mov
sub
mov
hlt
or
inc
dec
test
cmp
lods
inc
push
jae
xchg
or
pop
std
adcl
les
sub
adc
fwait
mov
insl
sub
jbe
sub
sbb
fwait
shr
or
repnz
clc
outsl
inc
lcall
push
ficompl
fsubrs
ja
ret
push
and
push
or
xchg
fistpl
out
or
loope
xchg
addr16
out
out
insl
pop
mov
divl
mov
jecxz
in
ds
mov
js
lods
sbb
cmc
or
jge
test
add
fimuls
xchg
sub
pop
lahf
sub
repnz
sarl
mov
cld
std
ss
repnz
fnstcw
jne
sbb
add
push
lcall
scas
pop
mov
jnp
jle
cli
fwait
and
orb
sub
sbb
pop
std
adc
cld
prefetchw
outsl
or
pop
std
add
cld
std
dec
sti
outsl
stc
hlt
idiv
cmc
dec
repz
cld
out
in
dec
in
mov
adc
repz
sub
dec
daa
outsl
es
and
jae
cld
and
dec
sbb
std
pop
dec
adc
cmovge
or
push
std
add
jae
cld
cli
testl
add
sub
and
push
sbb
outsl
adc
push
std
or
jae
cld
cli
dec
imulb
hlt
icebp
std
lock
repnz
xor
sub
cld
std
cmp
jl
mov
jge
mov
dec
jle
mov
jg
shl
std
inc
dec
xorb
add
add
fs
fiaddl
dec
sahf
sahf
test
inc
pop
sub
enter
dec
std
mov
jae
cld
dec
mov
jae
in
gs
lcall
and
jae
mov
lcall
imul
and
jae
jo
add
sub
std
inc
xchg
icebp
cmp
dec
xchg
test
dec
inc
out
pushf
jp
testl
js
cmp
or
dec
aaa
mov
cmpsb
lock
insl
xlat
lret
fwait
xchg
aad
mov
sbb
shlb
xor
jmp
adc
iret
out
ret
test
stc
and
xchg
cmp
clc
mov
xchg
out
shrl
sub
cwtl
sub
cmp
lock
xchg
cmp
add
and
xchg
mov
jge
cmp
cmp
mov
jnp
cmp
adc
repnz
ss
and
jge
mov
ds
cld
cmp
subl
orb
call
jl,pn
jbe
jl
jo
mov
mov
inc
dec
xor
mov
inc
lods
push
je
movsl
sub
lods
push
popf
call
pusha
out
jo
lahf
popa
mov
fdivl
jns
and
xchg
in
mov
movsl
pop
push
leave
mov
stos
or
add
lods
adc
outsl
flds
push
das
push
test
in
ljmp
adc
jae
mov
mov
int
mov
fistpl
repz
pop
rcrb
pop
pushl
stos
lods
or
jae
cld
push
dec
sub
hlt
ljmp
cld
imul
hlt
jmp
es
out
push
hlt
sbb
call
cld
adc
push
outsl
daa
hlt
or
out
add
scas
cld
and
outsl
push
hlt
out
sbb
jae
cld
gs
dec
and
cld
sub
movsb
dec
and
cld
push
and
sbb
hlt
sbb
mov
cld
or
dec
ljmp
hlt
cli
std
mov
cld
in
and
xchg
sub
dec
mov
or
and
hlt
loope
add
jae
cld
pusha
lock
and
hlt
loopne
daa
in
in
lahf
dec
and
cmp
lahf
hlt
sbb
fisttps
jae
cld
push
pop
dec
or
hlt
add
fimuls
jae
cld
out
pop
into
or
sbb
fnsave
cld
pushf
sbb
outsl
adc
sbb
adc
mov
enter
das
or
or
sbb
hlt
add
jae
cld
pop
testl
std
out
dec
cltd
out
sub
cld
and
dec
sbb
hlt
or
jae
cld
lcall
dec
sti
outsl
fdiv
out
std
xchg
or
jae
cmp
lahf
xor
sbb
and
fwait
out
jg
and
sub
sub
pop
adc
fstpt
mov
sahf
sbb
inc
neg
cmpsl
cmp
pop
fidivrs
or
fstpl
sbb
and
out
neg
push
pop
cmpsl
jbe
cmc
mov
sub
pop
push
test
loop
jns
sti
adc
sbb
aad
mov
inc
mov
in
lock
mov
inc
sbbb
test
mov
pop
mov
ljmp
sbb
push
push
imul
xchg
gs
lahf
outsl
outsb
inc
inc
fneni(8087
imul
lret
jl
das
loope
cwtl
add
fbld
pop
sbb
xchg
sarb
repz
es
sub
adc
repz
inc
outsb
jmp
pop
and
add
ljmp
shrl
lock
lock
mov
push
ja
mov
adc
je
out
sub
mov
sbb
std
sbb
push
mov
add
pop
cli
mul
hlt
cltd
pop
sub
sbb
xlat
jne
pop
jns
test
sbb
xor
mov
add
mov
add
adc
fwait
idivb
jg
or
push
or
lahf
lock
loopne
out
cmpsl
daa
sbb
lock
lock
test
pop
pop
jae
and
adc
out
jp
sbb
sub
cli
pusha
sbb
pop
adc
sub
cmpsl
outsb
and
pop
dec
or
and
idivb
push
xchg
je
ret
add
xor
sbb
mov
cmp
xor
sahf
inc
push
push
fidivl
jl
cmp
call
or
add
fdivrp
daa
mov
cmc
jno
inc
sbb
mov
outsl
lock
xor
hlt
lock
or
and
push
cld
jno
or
jns
adc
out
dec
xchg
mov
mov
jg
sbb
adc
mov
sub
xchg
out
push
nop
je
pop
adc
pop
xchg
push
sti
jle
push
outsl
movsl
xor
cli
mov
jbe
add
fsubr
cmc
push
aam
and
jp
adcl
pop
jno
orl
repnz
aam
push
pushf
and
ljmp
rcrb
jnp
test
setle
repz
outsl
and
lock
jb
push
data16
cmp
jp
cmp
testl
sbb
pushf
pop
jg
out
hlt
repnz
mov
in
and
xor
xor
insl
adc
sbb
int
aaa
js
cli
xor
pop
xchg
jb
popf
adc
pop
ret
repz
adc
icebp
fs
mov
pop
mov
outsl
adc
lock
mov
push
xchg
test
sub
fs
icebp
loopne
xchg
out
repnz
adc
stc
aas
lock
add
or
mov
test
pop
orb
mov
loope
dec
repnz
sti
jnp
cmp
seta
repz
lods
fstps
sub
repnz
xchg
pop
or
and
sub
incl
xchg
dec
cmp
mov
pop
pusha
mov
inc
add
test
mov
cmp
in
jg
cmp
insb
mov
aam
add
sub
or
add
or
lock
loopne
pop
sub
and
jo
xchg
cmp
loopne
out
lock
std
out
clc
jns
sub
inc
xchg
out
jmp
fists
loope
call
lods
loopne
scas
xchg
fwait
xor
jno
sub
mov
test
pushf
aas
movsb
fcomip
cs
mov
arpl
sub
lock
out
xchg
cwtl
out
out
pushf
daa
sub
xor
xor
jbe
sti
mov
add
outsl
xor
std
add
jae
inc
imul
scas
sbbb
sub
pop
add
hlt
std
std
dec
pop
fisubrs
inc
lahf
in
in
fstpt
jo
push
pop
andl
in
cmpsb
in
jge
clc
out
xor
out
mov
adc
negb
xchg
add
cmp
sbb
push
add
hlt
xor
out
pop
icebp
push
sbb
add
ss
jns
adc
push
imul
pop
data16
imull
in
xor
adc
lock
cmp
pop
outsl
out
out
mov
jne
in
pop
xor
les
sbb
daa
out
mov
sti
stos
insl
and
mov
in
outsl
pop
adc
scas
and
sbb
popf
mov
in
xchg
outsl
pop
push
sti
out
adc
aas
adc
clc
mov
aam
stos
pop
cld
bndstx
or
or
and
or
imul
xorps
add
adc
add
jno
adc
xor
std
pop
std
sbb
outsl
sti
out
xchg
idiv
je
imul
cmpsb
fidivrl
sub
pop
cltd
es
in
push
pop
dec
fcomps
out
and
cwtl
adc
fwait
push
push
repz
out
loope
fistps
pop
cmpsb
mov
sbb
dec
neg
mov
jg
sti
jnp
add
and
sti
jnp
or
sub
sti
push
out
out
cs
mov
or
pop
pop
negl
sar
jnp
add
adc
sti
xor
in
and
sti
sbb
jge
jnp
lock
mov
lds
add
inc
call
add
insl
add
sbb
loope
in
sbb
ss
xor
push
jge
cmp
ds
insl
sub
stos
pop
or
or
rolb
icebp
cli
das
daa
mov
out
test
sbb
sub
push
sbb
hlt
fisubrs
icebp
xor
jno
loop
ja
xor
cwtl
lock
clc
and
xor
decl
xor
jge
pop
stc
lea
sbb
push
xor
lock
jae
mov
inc
and
or
imul
add
sub
sbb
insl
in
mov
xchg
mov
push
lock
dec
sbb
sbb
data16
std
adc
xchg
hlt
push
or
dec
pop
bnd
dec
stc
shrb
rcrb
and
pop
or
popf
sub
outsl
or
add
sub
das
in
xchg
sub
imul
xchg
cmc
push
xor
adc
lock
loope
mov
jmp
js
movsl
into
and
mov
pushf
jmp
movsb
movsl
xor
mov
mov
fwait
mov
xor
es
sbb
push
adc
int3
rorb
adc
pop
add
or
sbb
pop
jo
dec
popf
dec
jmp
sbb
das
jns
insl
jns
insb
dec
push
xor
push
sub
hlt
enter
lods
fbld
popf
lcall
cmpsl
bound
sub
fcoms
icebp
test
and
xchg
sub
and
sahf
xchg
pusha
movsb
aam
test
adc
sub
fcomps
mov
nop
andb
and
sbb
cltd
sbb
cmpsl
adc
rolb
inc
xchg
sub
xchg
sbb
xor
sub
fldenv
loopne
cltd
pop
movsb
imul
push
cmp
sbb
inc
shr
rcrb
xchg
clc
pushf
lock
fildll
xor
call
jae
ret
push
negb
add
cmp
mov
ss
push
push
in
ds
movl
repnz
cltd
sub
inc
ds
sbb
lahf
arpl
imul
outsb
decl
pop
popf
loopne
jnp
sbb
or
add
es
jecxz
sbb
loope
lock
out
dec
stc
movl
mov
mov
xor
mov
imul
pop
mov
ja
dec
pop
xchg
or
je
xchg
divb
jae
sbb
bound
jp
xchg
sbb
loopne
jo
sub
ucomiss
sub
jo
test
mov
sbb
add
les
pop
sub
cltd
call
add
subb
or
f2xm1
xchg
ficomps
push
sub
fcmovbe
jb
scas
xchg
sbb
vpshab
jnp
inc
daa
dec
cmp
or
push
jo
or
cmpsb
push
aam
or
or
cmp
mov
cli
sub
in
dec
stc
stc
and
mov
xchg
pop
sub
pop
jg
sbb
add
mov
jnp
clts
gs
repz
add
xchg
data16
or
std
aad
subb
push
mov
fists
popf
jmp
adc
lcall
std
adc
mov
xchg
cwtl
push
push
or
sbb
or
jl
sbb
sbb
fsubs
xor
add
inc
sub
or
xor
xchg
imul
mov
jns
sub
lock
push
lcall
push
aaa
and
test
and
or
outsl
jmp
repz
xchg
jns
mov
mov
idiv
push
outsl
or
xor
fisttpl
adc
repz
inc
sbb
stc
cmp
icebp
nopl
jns
sbb
adc
inc
cwtl
mov
xor
sti
jnp
xchg
and
cmc
sbb
std
or
or
data16
jp
adc
mov
hlt
sbb
icebp
dec
jl
rcll
sti
out
and
test
cmp
inc
adc
sahf
rep
and
add
inc
xchg
aam
sbb
repz
mov
mov
fadd
add
sbb
dec
outsl
cmp
setge
stc
std
clc
dec
outsb
push
scas
xor
dec
sub
mov
fmuls
sub
or
pop
mov
fsubrl
add
fmuls
push
movsl
pushf
popa
in
ret
add
inc
les
or
cmp
inc
outsl
or
push
out
icebp
mov
in
int3
cmc
mov
andb
out
sub
orl
cwtl
movsb
sub
std
jbe
jo
lods
gs
mov
out
inc
mov
jbe
div
cmc
adc
pop
push
or
sbb
cmp
div
ror
xlat
loopne
add
cmp
cmp
jne
rcl
stc
ss
loopne
mov
mov
mov
dec
mov
mov
pop
lds
xchg
ss
inc
pop
repnz
mov
fnstsw
xor
repz
int
cmp
sbb
mov
mov
aas
jmp
rolb
add
inc
addl
pop
div
mov
mov
dec
add
dec
jp
jae
hlt
mov
add
test
hlt
sti
push
sbb
or
cmp
cmpb
movsl
div
pop
xor
sbb
je
or
adc
add
cmp
inc
or
dec
push
int
push
add
leave
out
or
add
out
pop
repz
sbb
mov
mov
cmp
jp
int3
stc
dec
inc
inc
sbb
aad
test
cltd
sub
inc
hlt
out
add
rorb
test
fstpt
sbbb
or
mov
testb
imulb
inc
leave
add
insb
inc
sub
insb
lret
rcrb
jbe
add
add
add
aaa
sarb
and
popf
mov
sahf
addr16
mov
mov
sahf
xchg
cmp
mov
push
mov
mov
stc
shll
or
stos
loopne
or
mov
test
mov
mov
pushf
daa
sub
aas
mov
sub
cltd
das
shll
add
sub
in
testl
add
test
mov
mov
icebp
fwait
rolb
js
int
dec
ds
inc
mov
push
repz
orb
sarl
push
xor
icebp
mov
mov
sbb
inc
testb
xor
mov
xchg
lock
shrb
add
dec
icebp
cmpl
int3
add
aas
pop
lds
inc
sub
pop
enter
les
out
fisubrs
cmp
inc
mov
add
pop
add
je
xchg
sarl
icebp
or
inc
inc
push
mov
aaa
stos
jle
pop
enter
jle
mov
mov
push
cmp
movsb
jl
add
mov
mov
stos
insl
cmp
sub
or
dec
jne
jge
cmp
mov
or
or
mov
outsb
movl
std
addr16
es
std
cmp
mov
cmp
jae
movsb
mov
inc
inc
pop
pop
adc
imul
mov
dec
adc
in
jg
and
mov
ds
mov
and
repz
jnp
fdivrs
sarb
les
mov
inc
lcall
sbb
jge
mov
call
ret
add
xchg
inc
jp
clc
dec
or
cmp
sti
push
sub
sti
es
dec
adc
rolb
ja
hlt
lcall
xchg
jb
repz
jmp
aam
js
adc
add
mov
sbb
daa
push
inc
jge
xor
filds
pusha
and
inc
xchg
mov
hlt
lock
and
rol
cmp
dec
stc
or
mov
xchg
dec
addr16
and
xchg
mov
daa
jg
and
add
loopne
mov
push
and
pop
iret
out
in
sbb
adc
mov
cwtl
mov
pop
jge
call
pop
xchg
icebp
dec
xor
repz
or
call
adc
sbb
sub
lods
push
inc
stos
and
mov
movb
jle
pop
shl
decl
lea
dec
jle
dec
mov
mov
insl
repz
test
daa
or
cmp
je
add
mov
jb
iret
repz
xchg
sbb
dec
push
cli
std
cmpl
fucomp
cmp
inc
sub
or
mov
or
int
rolb
mov
mov
jnp
sbb
jmp
jmp
cmova
pop
inc
inc
pusha
mov
mov
sbb
and
mov
repz
std
insb
dec
add
rorl
ljmp
jge
cmp
mov
xor
add
inc
or
jo
inc
test
or
repz
or
sarb
mov
or
iret
pushl
mov
jnp
mov
dec
repz
incb
push
push
enter
popf
pop
pop
repz
adc
lcall
sbb
into
pop
dec
repz
jg
negl
sbb
shl
inc
xorb
fwait
pop
pop
sbb
or
cmc
jae
dec
and
jge
pop
dec
push
scas
stc
enter
jbe
mov
pop
pop
pop
aam
repz
mov
shl
cmp
jns
out
bnd
das
push
mov
leave
cmp
jl
loope
in
cmpb
icebp
loope
jge
add
jae
ds
jno
pop
push
push
scas
mov
popf
in
add
xor
inc
mov
repz
enter
jbe
add
mov
jl
imul
sub
xchg
in
dec
sub
mov
xchg
daa
push
in
cmp
imul
outsl
pushl
addb
pop
std
in
sbb
imul
shr
jl
repz
sub
xor
sub
sbb
inc
ret
add
aad
stc
insl
sbb
jno
orl
mov
in
dec
sub
pop
das
cmc
lock
sbb
mov
add
in
xor
inc
repnz
mov
dec
cmc
sbb
cld
sbb
dec
pop
outsl
push
hlt
adc
jae
cld
or
dec
pop
outsl
add
add
add
mov
outsl
hlt
std
std
cld
dec
sti
jae
cld
stc
clc
dec
imulb
hlt
icebp
jge
testl
and
and
jae
cld
sbb
dec
adc
push
add
cli
cld
lods
xchg
in
cld
in
icebp
dec
sub
cs
insb
std
sub
mov
insl
repnz
cli
imul
push
add
lock
dec
outsl
ds
imul
cmp
out
cmp
clc
adc
popf
shr
shll
push
or
icebp
inc
dec
rep
pop
hlt
bnd
push
fs
ja
or
dec
in
mov
std
dec
dec
jae
rclb
adc
sbb
adc
icebp
cmp
imul
fwait
jae
lods
sub
mov
xor
in
or
push
add
and
in
sti
mov
test
mov
lock
stos
in
or
negl
fists
fsubs
lldt
aas
les
mov
or
and
aaa
mov
ret
sbb
xor
and
cli
dec
dec
in
repnz
bswap
cmpsl
mov
shrb
or
jne
and
fcomi
repz
mov
stc
push
add
incl
out
mov
mov
sbb
sbb
sbb
adc
mov
add
xor
in
std
jno
pop
shrl
mov
adc
repnz
dec
or
hlt
dec
std
decl
jae
cld
sub
fstps
stos
cld
std
sub
arpl
jl
fwait
or
and
loope
pop
dec
test
cs
jge
add
jmp
adc
test
push
lret
lods
inc
or
sbb
sub
and
inc
push
pop
and
push
sbbl
or
xchg
jb
scas
pop
push
jnp
daa
mov
repnz
in
arpl
xor
clc
add
fs
xor
or
push
add
das
mov
cli
dec
mov
clc
cld
xor
dec
outsb
outsl
hlt
hlt
cs
repnz
scas
jae
cld
out
out
dec
sub
in
hlt
jb
jae
outsl
sub
xchg
repz
sub
hlt
daa
std
scas
dec
and
repnz
and
hlt
pop
std
das
dec
sbb
jo
sbb
hlt
pop
std
jae
push
jae
cld
adc
dec
sub
fwait
out
lret
or
mov
cld
dec
sbb
cmc
testl
aam
insl
add
dec
outsb
decl
hlt
cmpsb
pop
aas
mov
push
popf
push
movsb
sti
stos
lret
cld
dec
nopl
dec
xorl
xchg
hlt
sar
push
dec
xchg
jae
cld
mov
jb
imul
jae
cld
mov
hlt
arpl
movsb
or
jae
push
test
std
dec
dec
lea
cld
lcall
imul
jle
cmp
mov
outsl
fdiv
pop
std
lahf
dec
cmpsl
out
insb
dec
jae
cld
ja
dec
shrl
mov
nop
dec
xchg
jae
xchg
mov
and
daa
test
sti
repz
out
add
mov
adc
xchg
repz
inc
sub
mov
ret
sahf
std
in
out
test
or
add
fstpt
imul
sbb
sub
shll
icebp
pcmpeqw
in
mov
daa
sahf
cmp
sub
repnz
dec
dec
or
adc
mov
repz
das
xor
lock
das
daa
lret
and
add
inc
cld
sti
and
xor
add
push
enter
xchg
out
jb
xchg
mov
jns
inc
jae
cld
nop
sbb
outsl
cmpsl
hlt
out
std
mov
jp,pt
rolb
repz
sub
cmp
hlt
sti
ret
shrd
dec
push
icebp
std
in
dec
repz
xor
adc
sti
out
out
sbb
scas
dec
xor
out
inc
fsubrl
outsl
decl
nop
xor
jo
repz
fistpl
mov
out
push
data16
sahf
iret
fwait
loopne
or
daa
xchg
pop
pop
lods
mov
push
pop
push
inc
and
inc
push
xor
jno
mov
inc
jmp
loope
mov
jp
xchg
jmp
fistl
cld
dec
outsl
enter
pop
lret
pusha
xchg
fildll
mov
pushf
and
gs
pop
mov
sbb
inc
mov
dec
jmp
jnp
bound
out
mov
mov
jmp
cmpsl
xor
cld
lods
cmc
out
mov
sub
or
call
mov
fistpll
push
fisttpll
xchg
sub
jl
sub
mov
mov
add
and
sarb
mov
data16
lret
cmp
xchg
popl
jmp
repz
push
push
mov
into
cmp
imul
sub
mov
jp
sbb
pop
rcl
jmp
lea
add
dec
adc
clc
pop
push
in
repz
mov
loope
pop
scas
sub
or
lods
dec
roll
fsub
imul
inc
xor
sub
lods
scas
mov
mov
aad
sub
jmp
cwtl
inc
push
xlat
sub
mov
mov
fs
scas
adc
mov
out
sahf
inc
or
scas
leave
push
and
mov
ret
lods
sbb
adc
pop
in
sbb
mov
lock
xchg
xlat
or
lods
cmp
jb
or
mov
mov
aaa
inc
into
mov
inc
inc
pop
mov
scas
or
ret
or
cmpsb
mov
insb
lods
lcall
std
repnz
cmp
movsl
lret
adc
jmp
and
add
jl
jmp
jp
lret
mov
lods
leave
int3
stos
dec
dec
cmp
test
les
aaa
sbb
cli
jmp
dec
pop
stc
mov
jmp
mov
mov
lods
and
sbb
cwtl
push
dec
mov
mov
or
cmp
xchg
int
sbb
mov
xchg
pop
ja
add
jg
cld
inc
imul
xor
and
js
mov
sbb
inc
in
adc
mov
and
jmp
add
int3
sub
jle
inc
subl
xlat
out
insb
adc
add
sbb
add
mov
cs
imulb
imul
out
mov
mov
pop
mov
in
dec
lods
adc
mov
lock
sub
sarb
lock
sub
mov
mov
xchg
sar
and
cmpsl
sub
pop
out
aas
pop
lock
mov
sbb
lock
sub
insb
xchg
shl
adc
mov
cmc
sub
aaa
pop
xor
scas
or
mov
or
adc
mov
xchg
xchg
lock
repnz
subb
dec
mov
stc
mov
lret
cmp
cmc
or
or
inc
movsb
je
repnz
imul
mov
repnz
in
cmp
sbb
pop
kxorb
aas
stos
jge
out
fs
imul
cmp
adc
xchg
xchg
pusha
push
notl
adc
xor
jle
mov
cmp
movl
cmp
xor
out
aam
dec
jno
mov
imul
repnz
jg
std
jb
mov
test
jbe
lret
test
xor
mov
add
push
pop
jge
sti
hlt
pop
mov
push
mov
push
mov
mov
jb
jae
push
in
xor
mov
dec
mov
jns
jno
testb
add
and
xchg
out
lods
hlt
jbe
mov
push
repnz
jo
push
repnz
ds
imulb
lods
mov
sub
stc
imul
jg
xor
xchg
pop
mov
sub
add
int3
mov
cmp
insb
push
test
cmp
shll
dec
test
inc
xor
cmp
insl
cs
adc
add
lock
hlt
pop
mov
mov
jne
outsl
mov
sti
stc
dec
or
lock
in
or
clc
insl
enter
js
in
jae
mov
out
mov
pushl
dec
jae
mov
imul
or
mov
mov
mov
insl
aad
fisttpll
fwait
daa
lret
stos
cmc
in
stc
jg
ficompl
push
imul
outsl
dec
jne
je
inc
jns
add
add
ja
gs
inc
add
add
jo
push
arpl
mov
loope
call
xchg
cs
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
add
inc
outsl
insl
jo
jb
push
je
imul
dec
jne
lods
outsb
movsb
push
sub
mov
or
jb
lret
decl
lret
or
jl
mov
jl
movsl
imul
insl
or
mov
mov
push
insb
pusha
arpl
and
adcb
gs
pop
cwtl
add
inc
gs
insb
imul
shl
pushf
lods
cmc
not
call
add
inc
gs
gs
je
jo
imul
add
fs
outsl
arpl
call
push
call
mov
or
push
call
adc
mov
add
inc
popa
fs
jb
je
push
je
add
adc
add
je
outsl
jo
imul
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
add
popa
insb
gs
imul
inc
js
inc
js
add
inc
outsl
insl
bound
gs
outsb
add
add
imul
outsl
jne
arpl
rclb
xor
sbb
adc
add
cmp
cmc
inc
fstps
mov
push
es
inc
or
loop
push
sahf
and
ja
pop
dec
mov
jbe
push
arpl
sub
and
scas
sbb
in
jle
mov
push
test
popa
lret
leave
loop
fists
xor
pop
imul
push
ror
sub
aas
movsl
mov
int
mov
cmp
std
cwtl
mov
loopne
cmpsb
jp
aas
cltd
jg
andb
pop
dec
add
in
sub
test
xor
jbe
inc
hlt
or
pushf
inc
sub
scas
pop
xchg
mov
xor
mov
enter
pop
test
pusha
jbe
loopne
int3
fstpt
nop
clc
cs
jle
jecxz
mov
inc
and
mov
push
pop
cmpsl
mov
lret
adc
stos
and
mov
into
and
movsl
sbb
lods
or
jb
lret
sbb
rorb
arpl
dec
lea
jae
popf
cmp
clc
adc
hlt
sub
xchg
popf
sbb
mov
into
inc
push
add
push
gs
jae
addr16
add
add
gs
je
push
popa
insb
gs
add
jns
push
call
adc
add
inc
jb
popa
je
inc
arpl
insb
gs
je
jb
popa
bound
add
add
outsb
fs
insb
outsl
jae
add
fcomps
cwtl
jmp
clc
shr
pushl
pusha
lea
je
pusha
push
call
add
dec
outsb
je
jb
gs
gs
jo
imul
lea
push
call
inc
inc
dec
xor
cs
insb
add
rcrb
add
inc
imul
je
imul
gs
gs
inc
inc
add
test
add
add
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
add
je
jne
jae
jb
add
push
gs
arpl
jo
jns
pusha
lea
call
pushf
mov
lea
jae
pusha
mov
call
lea
jne
sets
pushfw
stc
mov
cmp
clc
stc
pushf
not
test
cmc
pushl
sub
stc
ror
push
movb
jmp
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
lcall
sbb
insb
loop
pop
jbe
or
stc
sub
mov
mov
sbb
imul
leave
aaa
cltd
aaa
mov
lret
add
fcoms
popf
adc
clc
cs
dec
dec
xor
cs
insb
add
add
push
imul
jae
popa
addr16
imul
xor
call
add
inc
gs
gs
inc
outsl
insb
outsl
jb
add
push
gs
jb
popa
je
dec
gs
js
add
xchg
add
pusha
call
add
inc
fs
jae
push
imul
arpl
add
add
gs
insb
inc
js
arpl
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
xor
pushf
movl
pushf
mov
mov
movb
pushf
push
pushl
ret
add
dec
jae
popa
fs
gs
fs
je
add
add
gs
imul
daa
mov
btc
sub
movzbw
bt
mov
pusha
mov
jmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
mov
jmp
push
call
xor
test
adc
add
je
arpl
gs
imul
movb
pushf
lea
jae
pusha
mov
lea
jne
push
pusha
lea
ja
pusha
stos
mov
pushf
lea
jmp
push
call
dec
scas
add
push
gs
gs
jae
inc
inc
add
add
pop
outsl
outsl
insl
gs
inc
inc
push
push
xor
cs
insb
add
pusha
stc
mov
cmc
pushf
mov
cmc
push
mov
cmc
mov
clc
test
jmp
lea
call
call
mov
dec
not
setbe
stos
call
add
dec
jae
imul
jae
bound
clc
pushl
sub
call
jb
pop
pmullw
in
xchg
out
pop
scas
cmc
inc
sbb
int3
scas
test
pop
lahf
cld
push
cmc
mov
int3
push
dec
ret
lods
mov
in
push
daa
hlt
sbb
insb
fwait
cmc
sub
inc
mov
push
in
fs
mov
cli
sub
inc
sub
xor
pop
cmpsb
incl
dec
xchg
fnsave
outsb
lods
mov
xchg
push
out
and
jae
js
or
insl
popa
aaa
je
pop
js
ret
cmp
mov
cmp
call
inc
loop
out
mov
cmp
and
add
mov
or
cld
add
enter
test
xor
lds
cld
decb
sahf
adc
dec
add
mov
xor
sbb
cmp
jb
cmp
cmp
clc
notb
sti
mov
xchg
enter
vhsubps
pop
jo
cmc
cmp
mov
lds
mov
stc
popf
hlt
enter
add
cltd
or
add
or
xchg
in
inc
pop
push
mov
jge
enter
push
sub
sub
sub
dec
lock
pop
mov
sub
out
pushf
dec
paddsw
adc
cmp
mov
icebp
repz
mov
mov
outsl
mov
sbb
or
out
push
or
add
imul
jae
lret
imul
imul
lods
icebp
fucomp
stos
lret
sbb
xor
icebp
repz
icebp
jo
cmp
mov
in
jae
cld
mov
lea
icebp
sub
test
dec
mov
mov
mov
mov
sub
in
lods
xor
pop
scas
outsl
scas
hlt
mov
mov
lods
inc
aas
push
pop
sub
in
arpl
sub
sub
in
stc
sub
lret
pop
test
and
dec
sbb
test
sub
shrb
cmp
jae
divl
cmpsl
and
sbb
das
sub
or
sub
iret
adc
push
shll
dec
icebp
outsl
out
rorl
sub
lods
in
add
int3
push
test
insb
in
cld
stos
sahf
sti
outsb
sbb
sbb
lods
mov
sub
fldt
sbb
jae
imul
out
sbb
sub
sub
loopne
adc
lods
mov
sti
sbb
sti
or
or
sub
xor
cmp
or
in
adc
fwait
mov
cld
or
push
int
sub
aas
pop
xor
ss
imul
ljmp
and
pop
in
xor
movsb
ds
cmp
lds
lock
packssdw
sub
jmp
packssdw
push
and
in
sbb
and
or
jl
pop
dec
sub
ljmp
sub
iret
fstps
sbb
arpl
push
lods
out
and
mov
aam
aad
idiv
pop
enter
sti
sub
out
sti
iret
mov
in
out
mov
xor
cmpsl
iret
add
xchg
push
jns
cli
sti
push
fld
into
in
mov
je
jnp
xchg
inc
test
cmc
imul
fmul
or
dec
sub
das
sti
sub
int
repz
xchg
push
int
xchg
inc
stos
ret
sub
cmc
rol
shrb
outsb
pop
cmpsl
push
pop
das
iret
sti
scas
daa
aam
xor
outsb
int
mov
sarb
adc
lock
push
mov
insb
push
adc
xchg
cmc
stc
stc
leave
or
out
lock
es
xor
in
lock
or
aas
lock
lock
test
aas
daa
xor
xor
jbe
push
sti
sar
cld
xchg
or
out
push
or
sub
in
scas
lret
lret
stc
leave
mov
imull
jnp
lcall
out
mov
leave
push
icebp
inc
jge
out
das
jnp
and
and
mov
lahf
std
push
lds
out
mov
jnp
mov
icebp
push
mull
and
in
xlat
out
fdivrp
or
add
loope
push
sub
pop
mov
inc
push
or
mov
dec
mov
fwait
arpl
out
jmp
daa
inc
mov
out
and
cmp
xor
jge
ret
xor
xor
mov
or
cmp
jge
sub
icebp
lods
mov
mov
add
xchg
outsb
push
lods
dec
add
dec
lods
push
neg
lods
sbb
hlt
pop
and
out
mov
lods
std
sub
sarb
mov
js
scas
imul
cs
or
or
outsb
push
scas
or
daa
loopne
idiv
inc
outsl
pop
mov
mov
sti
shlb
mov
and
insl
mov
fidivs
jnp
iret
std
adc
popf
adc
and
movsb
cli
std
dec
dec
outsl
jge
movsl
jbe
repz
fdivl
lea
adc
outsb
ja
jns
xchg
inc
leave
sub
test
jae
add
cmp
pop
rep
sbb
mov
lods
insb
jg
lods
lahf
out
jb
outsb
add
adc
leave
lods
clc
adc
mov
lea
fldcw
outsb
jne
loopne
inc
mov
scas
fisubrl
cmp
jno
scas
mov
jmp
ret
or
sbb
mov
hlt
mov
outsb
and
pop
outsb
fldcw
jg
iret
mov
aad
cltd
pop
out
lods
dec
sub
lea
lods
outsl
sub
sbb
insb
xchg
fimuls
pop
out
xchg
sarb
cmpsl
inc
mov
mov
hlt
fisubrs
sub
int
scas
xchg
xor
or
inc
out
scas
int
jno
leave
std
jno
fcoml
inc
fcoml
cmp
lea
stc
mov
push
cmp
add
add
fwait
jno
sti
mov
adc
cmpsl
scas
in
stc
rsm
fs
push
repz
pop
mov
and
lods
add
fldcw
scas
lods
pop
xchg
cmp
jb
dec
add
in
ds
mov
jle
stos
aaa
dec
in
jnp
sbb
xor
cmp
mov
sub
mov
stos
xchg
cltd
aas
daa
sub
lock
repnz
sub
sahf
loop
test
jge
cli
cmc
mov
pop
mov
and
or
sub
movsb
out
sub
xchg
xchg
lods
jo
mov
jae
or
dec
jae
loop
adc
lock
xor
add
cmc
pop
imul
jle
and
adc
push
jno
sub
aaa
out
je
jg
jbe
jne
inc
ret
arpl
cmp
jg
push
jnp
sub
repnz
push
jo
jle
inc
outsb
lds
outsb
inc
in
pop
test
mov
adc
leave
and
pushl
mov
xor
xor
jle
scas
cmpsl
shlb
in
outsl
inc
adc
dec
adc
adc
jnp
dec
or
mov
mov
ret
mov
rol
pop
in
insb
or
std
xchg
pop
inc
sbb
mov
outsl
xchg
cmc
inc
cmp
add
sbb
or
xchg
je
pop
add
xchg
inc
incl
push
xchg
addl
cmc
xor
xor
xchg
decb
je
dec
insl
sbb
and
jnp
xor
repz
insl
aas
jle
jle
sub
add
inc
and
sbb
add
cwtl
xchg
rolb
or
cld
mov
sti
subl
rolb
jae
sbb
pop
dec
inc
jo
rolb
pop
sarl
stc
call
xchg
add
mov
cmp
xchg
lods
js
std
mov
orl
not
xor
arpl
dec
repnz
mov
repnz
dec
cmp
pop
ljmp
jne
push
fwait
cmc
adc
sub
movsb
movl
in
bnd
movsl
or
out
xor
adc
mov
or
outsb
push
add
insl
je
add
adc
lods
out
add
incl
pop
std
pop
push
and
sbb
std
cmc
out
cmp
mov
sub
inc
aas
jae
xor
sbb
mov
dec
cmp
test
add
inc
xor
xor
add
out
mov
xchg
mov
insb
pop
mov
ret
ror
dec
push
clc
jno
imul
sbb
add
psllw
jmp
mov
insl
cmpsb
push
stc
mov
or
mov
mov
lret
in
adc
pop
hlt
cld
pop
imul
in
repnz
repnz
dec
add
in
sbb
das
pop
in
xchg
adc
into
mul
in
fs
cmp
cmp
jb
dec
sub
cmpsl
in
aam
repz
int
pxor
push
pop
xchg
push
inc
out
xchg
fs
mov
shl
sbb
push
mov
movsl
and
int3
mov
or
int
pop
mov
divb
into
js
dec
pop
in
fsubrl
into
xchg
imul
loop
mov
std
jae
sbb
jo
add
hlt
negb
pop
cmp
sub
mov
inc
sti
cmp
dec
in
push
xchg
push
mov
fmuls
int3
cli
jne
cmp
or
inc
test
jns
push
stc
xor
adc
dec
push
push
push
psubw
in
add
sahf
aaa
outsb
dec
insl
ds
inc
sti
and
bound
insb
inc
sarb
push
in
out
enter
and
sub
clc
mov
cmpsl
clc
xchg
push
mov
jp
or
mov
enter
sbb
das
ret
push
or
pop
add
repz
or
xchg
test
inc
xor
dec
scas
scas
sbb
inc
sbb
cmovb
movsb
es
ret
in
add
inc
mov
mov
jbe
inc
movsbl
test
lds
or
xor
or
jle
add
inc
in
add
or
mov
ret
js
or
cmp
dec
add
xor
rcrb
negb
inc
and
dec
inc
out
movsl
sub
sub
push
and
in
repz
mov
cmp
dec
repz
loope
mov
adc
out
les
cmp
sbb
dec
lods
int3
sub
stc
adc
negl
add
add
ret
popf
testb
mov
push
add
mov
xchg
fidivrs
in
adc
pop
cmovne
adc
xchg
das
jns
mov
jl
jae
cmp
test
xor
push
mov
jge
pop
cmp
in
leave
out
dec
fiadds
jmp
dec
jl
pusha
jnp
jns
mov
ror
lock
add
fldenv
sbb
ret
vpaddb
push
sbb
in
lods
arpl
jns
inc
mov
jp
sbb
adc
sarb
add
roll
arpl
rcll
ljmp
and
adc
repz
mov
lcall
or
pop
adc
inc
or
fcoms
xor
pop
sbb
rcrl
mov
add
pop
aaa
in
call
adc
inc
syscall
jg
aas
out
lods
mov
cwtl
clc
pop
jecxz
jle
jnp
rorl
clc
add
orb
inc
mulb
fistpll
sbb
cmc
sub
jle
jle
hlt
mov
daa
and
sbb
and
inc
mov
mov
sub
scas
std
daa
or
scas
test
pop
out
xchg
adc
pop
stos
mov
shr
mov
dec
push
iret
jns
sbb
imul
adc
mov
or
ret
mov
mov
call
jg
sbb
ret
mov
push
sbb
mov
inc
mov
cmc
sar
jmp
stos
jmp
call
shrl
xchg
ds
in
shlb
sub
jle
das
stc
add
aas
lahf
divb
sahf
add
in
in
xchg
xchg
lds
cmp
inc
jo
sbb
stc
add
outsb
inc
hlt
stc
mov
cmp
repnz
or
dec
inc
sbb
in
sbb
push
and
stc
shll
sub
xchg
jno
inc
test
ds
repnz
mov
sub
icebp
cld
lds
stos
fsubrs
lret
in
stc
add
jle
insl
adc
cmc
lds
add
inc
int3
pop
movsb
dec
cmp
outsb
xchg
dec
sbb
sti
mov
imul
out
jl
arpl
adcb
or
jo
sbb
sbb
insl
pop
mov
inc
add
loop
sub
and
imul
and
xor
clc
and
add
test
daa
stc
mov
pushw
xchg
adc
repnz
mov
adc
cmpsl
inc
xchg
and
mov
jg,pt
sbb
sbb
daa
lods
sahf
sbb
pop
or
sahf
aas
movsl
sbb
aad
add
add
lock
jge
call
dec
xor
sbb
hlt
jns
mov
xchg
pop
sbb
hlt
fwait
jne
or
in
xor
lods
add
add
dec
add
xorl
and
seto
fisttps
xor
repz
jmp
ret
jle,pn
jg
aas
sub
push
arpl
jmp
xorb
lods
ljmp
inc
sub
dec
mov
xor
adc
adc
ret
xor
cld
dec
jbe
or
imulb
dec
aas
icebp
cltd
add
dec
loop
adc
pop
enter
fs
decl
or
lods
pop
std
fs
cld
fwait
repz
in
sub
les
cmp
hlt
outsb
xor
mov
cmc
adc
jno
xor
push
mov
bound
xor
into
add
fwait
xor
add
jno
add
adc
add
out
add
or
add
adc
iret
sbb
sub
jle
repz
sti
movsb
mov
cld
sbb
xor
add
lock
and
adc
hlt
jns
or
mov
cwtl
adc
cli
inc
cmp
in
xchg
in
insb
stos
mov
adc
shll
cmp
add
addl
sbbl
pop
add
add
idiv
jge
adc
ja
notl
cltd
mov
jge
jno
jnp
das
icebp
mov
jno
dec
sti
enter
jae
and
sarb
iret
cmpsb
xor
pop
add
jns
add
jno
push
jge
jns
jmp
or
pop
ret
std
xchg
lds
cli
mov
inc
aas
push
hlt
or
outsl
sub
repz
jl
cmp
add
ja
out
in
push
jnp
js
xor
cmc
imul
push
jno
mov
add
or
pcmpgtw
xchg
adc
push
cmp
popa
les
fs
mov
or
test
or
pushl
sub
dec
sub
std
add
cmp
adc
pop
adc
add
jno
and
popl
dec
movsb
int
push
xchg
pop
mov
xor
out
jno
and
jae
repnz
xchg
xchg
hlt
outsl
pop
and
inc
xchg
adc
arpl
into
imul
pushf
mov
into
hlt
xchg
pop
insb
int3
ret
fisttps
mov
out
lock
push
push
jl
mov
xorb
shr
add
icebp
cmp
scas
xchg
icebp
sub
shlb
xor
ja
push
aas
mov
xor
pop
cmp
sbb
mov
xchg
repnz
pushf
outsl
outsl
inc
adc
jo
pop
or
mov
and
les
push
out
nop
pop
sar
sub
pop
xchg
cmpl
mov
and
outsl
cmp
dec
cmc
jb
dec
insb
dec
sub
pushl
sub
aas
mov
outsb
test
in
sbb
adc
stc
notl
add
jae
std
mov
add
icebp
cmp
xchg
add
or
icebp
mov
repz
fs
movsl
jne
jmp
enter
pop
cmp
test
lea
pop
outsb
decl
mov
lea
mov
fwait
iret
stos
xor
jmp
mov
jb
lock
push
or
movsl
sbb
icebp
or
push
xor
add
scas
mull
cld
or
jle
xor
into
sub
outsb
mov
lock
or
je
sbb
xchg
sub
dec
mov
sub
hlt
jl
std
mov
icebp
add
add
push
clc
sub
and
jo
arpl
into
icebp
lods
xchg
cmc
push
or
xchg
dec
sbbb
sub
add
clc
jno
mov
test
mov
div
dec
xchg
inc
mov
sti
cs
inc
clc
insb
rep
lock
pop
jl
lods
inc
jbe
jg
sbb
repnz
cmp
out
cmp
ds
add
add
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
stos
loope
imul
sbb
xor
lods
jb
pop
je
xor
fmull
jge
rolb
shlb
mov
add
inc
dec
xchg
xchg
mov
movsb
mov
jp
mov
shrb
jno
cmp
cltd
addr16
lret
stos
xchg
mov
loopne,pt
rorb
mov
push
ret
and
sub
addb
lret
or
cli
insb
lcall
movsb
push
xchg
push
test
lods
jbe
xchg
xlat
mov
jb
icebp
jmp
sbb
loop
xchg
xchg
pop
cmpsb
mov
mov
ds
dec
xchg
or
popa
pusha
pop
loope
inc
popf
cmpsb
pop
pop
loope
xor
ret
clc
add
push
outsb
mov
xchg
hlt
jb
inc
mov
loop
daa
roll
scas
pop
add
arpl
pop
mov
cli
sub
fsts
ljmp
enter
ret
sbb
xchg
lret
xchg
dec
sbb
mov
data16
int
mov
adc
mov
fdivl
add
jb
push
fcompl
in
add
inc
jb
popa
je
push
push
add
sbb
pushf
sub
pusha
pushl
lea
jne
jmp
pushf
inc
lea
push
movb
call
add
stc
ret
and
inc
push
sbb
xchg
sub
shll
pop
cmp
fidivrs
mov
cs
xor
insb
loop
pop
sub
out
mov
insl
mov
roll
das
je
ffree
fcompl
es
daa
jl
mov
sti
out
in
aad
data16
cmp
inc
sbb
sbb
push
fwait
mov
mov
into
or
push
lret
mov
data16
xchg
inc
mov
popf
dec
js
out
adc
stos
mov
fcmove
ret
adc
je
add
push
pushf
cmc
mov
bt
mov
cmp
test
jmp
add
push
gs
ja
imul
dec
dec
push
push
dec
dec
dec
cs
push
push
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
add
je
popa
outsb
fs
gs
outsl
jne
je
jmp
pusha
jmp
call
jmp
add
dec
outsl
popa
fs
gs
jne
arpl
add
inc
gs
jne
jae
jb
outsl
jae
not
mov
jmp
cmp
push
fnstcw
xchg
push
lcall
mov
cmp
push
std
fisubs
inc
test
pop
pop
aam
mov
clc
ds
push
std
inc
cmpsl
or
ds
and
repnz
cli
add
ret
cmp
dec
adc
cmp
push
mov
into
inc
cli
jb
std
cmc
mov
sahf
mov
push
sahf
shr
inc
sbb
lock
xchg
or
adc
popf
add
mov
popf
mov
sahf
dec
xchg
in
adc
inc
jb
popa
je
push
outsl
jne
fs
arpl
outsb
add
outsb
dec
cld
pushf
lea
je
lea
mov
shld
bsf
lea
sub
rcl
shr
push
and
rol
test
mov
rol
adc
add
rol
add
add
sub
btc
mov
push
test
call
cmp
inc
mov
xchg
pop
out
mov
data16
mov
and
aad
sub
mov
and
cmc
jg
inc
xchg
ljmp
and
nop
mov
xor
iret
and
lods
sti
xchg
sub
add
ret
pop
in
fcoms
cmp
push
inc
jl
and
pushf
call
pusha
jmp
add
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
clc
cmp
and
mov
pusha
lea
jmp
add
dec
data16
je
arpl
std
xlat
xor
inc
xchg
lea
in
insb
fisubs
incb
mov
push
adc
dec
and
jp
andl
test
jge
cmpsb
pop
sub
inc
out
data16
pop
inc
test
ret
lcall
test
daa
int3
in
mov
repnz
sar
sub
imul
popf
jo
inc
xchg
fistps
leave
mov
jmp
cmpsb
jno
fisttpl
add
popa
jo
je
imul
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
push
gs
arpl
add
outsl
bound
inc
jb
add
add
outsl
bound
dec
outsl
arpl
icebp
adc
imul
jns
pop
xchg
sub
xorl
sbb
shll
das
mov
lds
arpl
sbb
inc
jbe
incl
add
je
popa
jo
outsl
fs
add
call
and
push
fs
lods
outsl
lods
pop
movsl
sahf
or
test
push
xchg
test
icebp
testb
add
xor
mov
or
cmp
mov
xchg
and
xor
mov
lds
lea
out
bound
flds
sbb
outsl
mov
sub
insl
add
les
push
rol
cmp
xchg
int
pop
sub
int3
xchg
cmpl
out
sub
std
mov
popa
jmp
xadd
in
mov
or
pop
test
pop
aas
jbe
xchg
nop
lcall
faddl
outsb
pop
pop
jns
mov
adc
mov
icebp
test
dec
int
lds
mov
push
insb
fs
std
pop
in
pop
in
dec
test
aad
fnstcw
testb
mov
popf
jl
in
jb
adc
mov
pushl
lds
and
testb
mov
movsl
inc
icebp
out
xor
lahf
imul
cmpsl
jb
pop
sti
mov
cwtl
pop
pop
jnp
pusha
pop
test
js
lcall
and
mov
dec
mov
mov
jb
jns
or
loope
pop
jp
pop
lock
int
aam
test
lock
rorb
sub
push
test
mov
js
in
call
cmp
shrl
rcll
xchg
mov
xchg
xor
adc
push
or
lods
mulb
mov
nop
fidivrs
add
push
outsb
fs
gs
popa
addr16
add
lea
js
jne
pushf
push
pusha
lea
jmp
add
inc
jno
popa
insb
push
arpl
dec
fnstsw
aas
xchg
daa
or
rclb
dec
mov
dec
mov
stos
add
and
inc
pop
testl
aaa
push
scas
sub
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
push
popa
jbe
inc
inc
add
add
jae
insl
gs
push
add
add
jae
outsl
jb
inc
inc
add
movsb
pushl
jmp
clc
btc
bsf
sub
movsbl
mov
pop
call
mov
movsbw
pop
pushf
pushl
ret
add
insb
jae
jb
jo
inc
add
jbe
jle
lods
jle
data16
aaa
jge
jne
mov
in
and
xchg
stos
sub
jmp
fsubp
cmp
outsl
in
xor
rol
mov
cmp
shlb
cmp
or
mov
and
in
jne
jne
or
movsl
fbstp
ss
mov
sub
int
ret
loopne
and
shl
jb
jo
in
movsb
lret
test
pop
sbb
lds
mov
outsl
mov
fisubs
sahf
lds
inc
cmp
gs
stos
and
jne
popa
jl
ljmp
add
in
or
xchg
repnz
jno
cltd
das
icebp
sar
push
clc
xlat
push
push
or
pcmpgtw
sbb
je
ret
loopne
sub
test
out
push
movsl
das
inc
sti
xchg
fwait
cmp
addl
aam
je
mov
loopne
nop
cmpsl
insl
fwait
add
xor
or
push
xchg
mov
pop
movsb
adc
mov
js
lods
pusha
fildll
out
sbbb
sbb
insl
or
adc
jae
xchg
testb
pmuludq
lea
adc
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
dec
inc
dec
xor
cs
insb
add
pop
loope
call
popa
sbb
push
call
into
mov
mov
decl
mov
loop
incl
add
je
jb
gs
gs
fs
imul
push
call
pop
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
dec
push
je
inc
push
add
add
arpl
add
add
gs
je
dec
dec
outsl
arpl
jns
gs
outsb
dec
inc
insb
outsl
bound
add
add
imul
push
je
jo
xor
sub
lea
pusha
lods
sar
neg
pushf
not
mov
bt
rcl
sub
cmc
cmc
jmp
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
or
mov
sbb
pusha
mov
call
add
inc
gs
imul
jmp
dec
push
test
shr
jmp
add
push
popa
imul
jo
imul
inc
sarl
loopne
fdivs
nop
dec
lock
cmp
int3
in
hlt
jecxz
sahf
ljmpw
sbb
xchg
inc
jns
add
stos
xchg
sbb
cld
mov
and
int3
xor
mov
faddl
les
imulb
shlb
add
mov
repnz
fsubl
loope
sahf
pop
adc
dec
sti
push
fwait
add
sti
or
popf
stos
push
xor
xchg
xor
scas
push
or
jae
sarl
jno
and
shlb
inc
sbb
mov
leave
push
pop
dec
ja
sahf
data16
addl
or
pop
shll
cmp
push
notb
out
fldt
add
bound
push
pop
add
arpl
js
dec
fisubs
mov
pusha
fstpt
insb
bsr
sbb
js
add
cmp
loop
aaa
push
xor
jecxz
fidivrl
outsl
lds
sti
mov
mov
mov
mov
and
nop
dec
rcll
daa
enter
mov
or
pop
adcb
mov
stc
push
fldenv
lret
mov
scas
pop
pushf
xor
fld
jo
add
add
push
gs
arpl
push
arpl
add
gs
je
inc
imul
gs
insb
imul
je
cmp
call
add
push
gs
je
gs
push
outsl
fs
fs
je
pusha
test
cmp
pushf
pushf
mov
lea
je
push
pushf
lea
jmp
add
inc
insb
outsl
bound
inc
imul
inc
add
add
insb
gs
imul
arpl
inc
imul
add
inc
imul
push
call
sbb
add
outsb
inc
js
arpl
add
dec
outsl
popa
fs
arpl
inc
add
and
jmp
add
dec
insb
gs
outsb
imul
imul
imul
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
add
push
gs
gs
jae
inc
popa
jo
jne
add
adc
push
pusha
add
pushl
pushf
call
add
inc
imul
jne
arpl
add
add
jbe
dec
jne
push
popa
jne
add
and
jmp
add
push
gs
imul
add
push
and
mov
lea
jmp
cmc
jle
push
clc
ror
push
not
call
jmp
add
inc
gs
imul
outsl
jb
push
call
out
pop
adc
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
int3
cs
lahf
sub
lahf
insl
out
fnsave
ss
les
jmp
jle
push
daa
mov
repnz
cld
jg
out
cmpsl
jns
dec
mov
dec
jae
arpl
jo
jns
loopne
push
jl
push
xchg
pop
out
cmpsb
inc
into
or
push
xor
mov
xchg
jmp
pop
dec
mov
lahf
sbb
or
sbb
repnz
and
sbb
cmp
fwait
sub
pop
dec
shrl
sahf
std
and
fmuls
lods
xor
je
mov
cmpsl
cli
out
push
imull
dec
xor
dec
xchg
push
jp
ret
lods
or
in
lods
push
pop
mov
imul
hlt
add
jl
fs
adc
mov
jg
outsl
adc
leave
mov
push
in
scas
test
sub
mov
jg
arpl
arpl
xchg
cmp
icebp
adc
clc
cmp
cmp
sub
rcl
xchg
rolb
dec
add
add
cmp
pop
in
push
sub
mov
jbe
addb
mov
and
mov
pop
std
loopne
sbb
xor
jbe
ljmp
mov
call
or
or
outsb
cld
push
mov
enter
inc
mov
push
xchg
cmp
cmpsb
push
loope
jne
fmuls
clc
push
adcb
loopne
jns
aad
imull
and
or
mov
add
push
gs
gs
popa
insb
jne
inc
js
add
add
fs
jne
jae
jb
add
add
je
imul
outsb
je
js
dec
gs
jo
add
add
je
outsb
jne
je
insl
dec
inc
add
add
arpl
gs
insb
imul
rcl
call
push
shlb
fidivrl
stos
pop
jnp
mov
popa
sbb
out
and
hlt
jp
dec
imulb
test
rorb
outsb
les
test
or
sti
and
test
sahf
xchg
mull
add
fiaddl
dec
sbb
or
loopne,pn
jg
mov
cmp
in
pop
subb
stos
mov
sbb
sbb
adc
mov
push
jecxz
testb
loop
pop
jl
jle
shll
inc
xchg
das
icebp
xchg
std
pop
cmp
xchg
aaa
insb
jecxz
testb
sub
push
jbe
cmp
lahf
inc
shrb
cwtl
cmp
cmpsb
shlb
pop
mov
lock
rcrb
call
adc
xor
shll
lahf
inc
aam
aaa
mov
xchg
xchg
cmp
inc
push
dec
lods
mov
and
fwait
adc
adc
cmc
pop
roll
ja
jne
clc
subl
iret
inc
mov
neg
data16
and
xor
jo
jo
fstpl
fs
push
imull
movsl
mov
adc
sbb
sbb
js
dec
jne
inc
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
je
imul
add
add
popa
insb
imul
je
add
mov
add
add
jmp
lea
call
call
add
inc
jb
popa
je
dec
outsb
jne
add
insl
imul
jo
gs
jb
dec
gs
fs
push
call
pop
jb
jb
or
mov
adc
xchg
dec
lods
nop
cmp
icebp
sbb
imul
mov
cmp
inc
int3
mov
jl
add
mov
lret
pop
mov
sub
adc
dec
mov
and
add
jne
push
inc
jne
data16
add
add
je
outsb
jne
xor
mov
push
into
jl
lods
outsl
inc
cmpsb
cmp
inc
lods
add
xchg
in
rcll
mov
jne
jge
jne
inc
jecxz
mov
rorl
data16
jmp
jmp
jmp
adc
inc
in
std
ja
dec
lds
cmc
das
lea
cld
lds
repz
and
inc
xor
cltd
sarl
dec
jnp
adc
out
add
inc
jne
and
add
sub
fwait
pusha
js
bound
or
adc
jmp
insb
loopne
push
nop
fneni(8087
sbb
shlb
jmp
mov
lcall
and
outsl
add
mov
mov
cmpsl
jne
add
daa
dec
testl
sub
jno
inc
aaa
cltd
mov
scas
jno
add
sarl
push
cmpsl
xchg
mov
jns
pop
sbb
lcall
loop
and
adc
es
dec
jns
lods
adc
mov
popf
fucomip
lds
and
or
jmp
ret
je
add
dec
into
or
add
adc
movsb
ret
xchg
mov
inc
mov
push
xlat
lds
and
cld
inc
test
inc
rorl
fsubs
xchg
aam
outsl
insb
into
xchg
outsb
push
call
lret
xchg
loopne
push
dec
leave
inc
rcrl
addl
mov
sbb
pop
shrl
cmp
mov
shlb
and
adc
xchg
pop
scas
or
xchg
jbe
ss
pop
push
adc
push
xchg
xchg
gs
lds
or
mov
fisubs
or
cmp
lds
push
inc
jno
repnz
ja
push
pop
movl
add
outsb
jae
popa
je
dec
gs
popa
add
pusha
pusha
pushf
pushf
lea
jae
cmp
push
pushl
cmp
pusha
mov
mov
call
add
inc
jb
popa
je
push
outsl
insb
imul
add
dec
outsl
arpl
inc
jb
add
add
jo
je
push
popa
addr16
add
xlat
bswap
pop
not
lea
pop
movsbw
pop
lea
lea
jmp
add
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
lea
jno
pushf
pushl
rep
movzbw
mov
push
lea
jmp
add
inc
gs
imul
dec
jb
inc
js
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
ja
outsl
arpl
push
arpl
add
fs
je
imul
push
popa
imul
jne
dec
fs
add
add
je
outsl
jns
imul
add
jae
popa
addr16
outsl
js
add
add
je
outsl
arpl
add
add
je
imul
outsl
jb
add
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
sbbl
mov
pusha
jmp
push
push
xor
xor
fs
insb
add
add
popa
bound
imul
add
je
jns
je
insl
dec
outsb
jne
add
push
outsb
jb
imul
popa
jae
inc
add
add
dec
lods
push
jl
inc
cs
outsl
es
sbb
stc
jo
mov
jmp
popf
inc
cmp
insl
jmp
cmpsl
inc
cs
dec
clc
jbe
fstpt
adc
pop
mov
adc
into
xchg
out
out
pop
in
add
sbb
aam
je
test
test
pusha
pushl
lea
je
pushf
pushf
cmp
mov
jmp
add
inc
outsl
inc
gs
insb
popa
jae
dec
bound
arpl
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
insl
jo
jb
push
je
imul
xor
out
mov
scas
sbb
aad
popf
jo
jno
cld
dec
roll
sub
in
test
adc
or
std
pop
mov
fldenv
push
jmp
xlat
and
and
or
fildll
mov
andb
pop
sub
inc
sbb
fwait
adc
fdivs
push
lahf
jne
dec
stos
insl
lret
nop
dec
ja
mov
cltd
lcall
mov
cmpsl
leave
mov
xor
push
pushf
es
movsb
pop
mov
insb
aam
rorb
jecxz
add
mov
xchg
sub
ret
jle
movsl
icebp
sub
shll
adc
push
hlt
sub
dec
push
test
stc
cmpsl
pushf
pop
dec
inc
and
sbb
push
in
mov
ja
mov
testl
or
inc
lock
test
rorb
jle
pushfw
inc
xchg
push
enter
insl
mov
and
test
lcall
in
pop
clc
scas
lods
mov
shr
push
jmp
jmp
nop
mov
or
lret
in
jle
scas
dec
ljmp
aaa
mov
push
sbb
mov
ljmp
adc
sub
lock
jo
dec
pop
push
call
push
out
xor
add
push
popa
jae
dec
gs
inc
jb
add
sti
lcall
out
clc
push
call
add
dec
popa
jo
imul
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
inc
outsb
fs
popa
add
add
je
jne
dec
outsb
jne
push
call
adc
add
insl
imul
insl
inc
insb
outsl
jae
add
inc
push
xor
cs
insb
add
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
pushf
mov
pushf
pop
movsbw
pushf
mov
jmp
add
dec
imul
add
leave
mov
push
lea
jmp
add
inc
gs
outsl
jb
addr16
jne
fs
imul
add
je
insb
je
add
push
jo
popa
je
push
imul
add
fs
insl
popa
addr16
add
cmp
call
fs
jae
clc
xor
jmp
push
call
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
jle
hlt
push
lods
xchg
adc
inc
push
aam
aam
and
sbb
mov
push
mov
lds
icebp
pop
xor
mov
or
mov
out
andl
fmull
mov
leave
mov
inc
mov
aas
bound
loope
ja
lock
dec
fdivl
fdivl
cmp
mul
aam
push
cmp
cltd
scas
inc
es
std
mov
pop
in
sbb
pop
lea
push
movsl
outsl
mov
pop
xor
shr
xchg
push
lea
daa
mov
jge
sbb
xchg
dec
pop
xchg
mov
les
push
inc
in
or
adc
mov
test
sub
sbb
and
out
popa
scas
icebp
mov
push
cmpsl
adc
testl
cltd
pushl
shll
mov
and
xor
xor
dec
push
rclb
imull
cmp
cltd
out
jmp
ljmp
xchg
lea
loope
shll
cwtl
inc
cmp
pop
xchg
sub
scas
lret
inc
xchg
mov
cmp
fdivrs
outsb
nop
out
jno
pop
out
xchg
push
fisttpll
fnsave
das
mov
outsl
stc
mov
push
popa
iret
int
mov
cmc
subb
push
cltd
orb
in
cmc
xlat
mov
mov
div
push
xlat
push
lcall
cmp
push
xor
in
push
lods
stc
outsl
dec
aaa
cli
inc
pop
lock
dec
or
mov
adc
scas
mov
mov
xor
xchg
ds
push
mov
nop
fs
or
xor
arpl
bound
pop
add
test
int
lods
mov
adc
cmpl
add
push
add
das
jae,pn
out
loop,pt
clc
xchg
mov
rolb
scas
es
inc
xchg
push
rclb
in
arpl
xlat
ret
scas
dec
dec
pop
mov
mov
repz
push
sbb
sub
fisubrs
xchg
add
push
into
dec
ljmp
mov
inc
cmp
sahf
mov
xchg
loope
mov
cmc
fdivs
push
or
fwait
pop
jo
rorl
and
adc
iret
rcrb
cmpsl
mov
negl
lahf
les
imul
mov
xchg
mov
pop
loop
shlb
add
push
jb
je
inc
imul
imul
inc
add
add
je
outsb
jne
je
insl
inc
imul
mov
and
call
subl
push
xchg
loopne
jo
test
loope
dec
and
outsl
adc
in
lahf
cwtl
push
mov
and
pop
insl
jmp
jp
outsb
int3
add
push
cltd
orb
jno
popf
or
mov
mov
leave
fimuls
scas
dec
daa
mov
inc
ror
in
lods
je
popa
adc
pop
xchg
mov
test
cltd
sub
in
jl
mov
and
cmp
or
arpl
outsb
push
outsl
inc
insb
imul
js
pop
mov
adc
stc
dec
test
and
push
aad
lock
out
xchg
loopne
push
mov
jb
popa
je
inc
jbe
outsb
je
add
add
pusha
pushl
pushf
push
lea
jmp
push
call
repz
jmp
add
inc
jb
popa
je
push
imul
inc
add
add
imul
ja
jb
insl
push
outsl
imul
sbb
dec
out
adc
pop
mov
xchg
add
test
out
jl
insb
pop
cltd
ret
push
dec
add
mov
adc
mov
inc
sahf
aam
lods
xor
mov
out
mov
jae
mov
stos
cmpsb
cmp
xchg
cmpsl
and
insl
sbb
sti
jbe
mov
pop
mov
fneni(8087
std
dec
dec
ret
sahf
ret
or
push
mov
mov
rclb
and
and
mov
or
mov
mov
xchg
mov
xor
leave
adc
pop
aad
sub
in
xchg
aas
jo
or
pop
sub
cmp
fldcw
xor
and
adc
adc
pop
jmp
adc
rol
cltd
jecxz
arpl
dec
xchg
sub
sbb
in
mov
xchg
xor
xchg
cmp
pop
cld
add
divb
xchg
mov
cwtl
push
clc
lock
movsb
push
pushf
mov
add
jmp
mov
cld
lcall
xor
cmp
jmp
roll
mov
fs
mov
ret
pop
daa
xor
dec
les
hlt
cmp
mov
and
imul
push
pushf
sbb
jb
mov
add
inc
gs
insb
addr16
je
insb
dec
inc
add
xor
add
lret
cmp
imul
loopne
cmc
ret
mov
mov
cs
push
dec
adc
pop
movswl
dec
mov
fcmovnb
pop
xor
sbbb
jns
sbbl
push
test
cmp
or
add
sub
orb
adc
jbe
data16
mov
ret
cli
lods
mov
in
jl
subl
sbbl
add
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
gs
gs
inc
insb
addr16
popa
bound
gs
add
sti
leave
dec
shlb
jns
jns
sub
xor
sbb
testl
in
add
pusha
outsb
enter
jno
sub
push
push
imull
aas
xor
or
add
scas
and
push
inc
xchg
inc
mov
insl
dec
xchg
cld
inc
add
push
xorb
lcall
adc
rcll
popa
push
fadds
inc
fwait
cmp
or
mov
pusha
scas
sar
xor
notb
pusha
ljmp
repz
sti
xchg
cmpsl
add
cmp
js
pusha
imulb
movsl
pop
mov
mov
filds
cmp
test
xor
xor
add
mov
add
lea
jmp
add
dec
jae
imul
add
je
jb
arpl
fs
jae
add
add
inc
popa
fs
outsl
fs
je
add
add
gs
je
inc
insb
insb
imul
outsb
add
add
je
popa
jb
outsb
je
add
push
gs
jne
jb
outsb
je
imul
jns
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jb
gs
jb
arpl
jb
inc
add
push
push
and
mov
add
pushf
pusha
mov
pushl
lea
jmp
call
add
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
outsb
fs
inc
imul
popa
jo
imul
inc
push
dec
xor
cs
insb
add
add
gs
jae
jne
jb
outsb
je
insb
imul
add
jecxz
out
cld
js
adc
inc
xchg
sbb
or
stc
xchg
cmp
jmp
imul
xchg
sub
cmp
or
aaa
sub
pop
xor
and
fstl
mov
mov
fdivs
mov
aaa
push
sub
jns
ficoms
arpl
cmpsl
sti
xchg
pop
xchg
lock
pop
fdivr
pop
mov
push
xchg
pop
sbb
aas
sbb
outsb
xchg
test
inc
push
dec
cmpl
das
mov
lea
jge
pushf
not
call
add
inc
jb
ja
fs
sub
xchg
add
setnp
inc
push
dec
pusha
inc
sub
bt
sar
shl
dec
xchg
inc
mov
sub
stc
mov
jmp
add
push
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
push
add
mov
mov
pushf
pushl
lea
jmp
add
insb
jae
jb
outsb
inc
add
add
outsb
inc
insb
imul
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
push
rorl
call
fstpl
mov
sar
mov
test
test
push
lea
je
cmp
test
jmp
add
push
gs
jo
outsb
dec
gs
js
add
adc
es
add
sarb
hlt
enter
or
add
adc
or
sbb
push
add
add
nopl
out
cli
adc
enter
jecxz
cs
add
in
xor
das
es
add
nop
je
repz
add
add
cmc
adc
insb
pop
das
es
add
push
mov
cmc
xchg
adc
es
add
adc
repnz
out
es
add
sbbb
es
add
shlb
cli
in
das
es
add
push
adc
cmc
test
das
es
add
sar
test
and
das
es
add
push
scas
or
adcb
es
add
push
sbb
es
add
mov
pop
das
es
add
nop
mov
sbb
data16
add
insb
sti
clc
adc
es
add
push
and
sti
mov
das
es
add
in
pop
inc
incl
es
add
sar
inc
cld
and
add
add
dec
inc
clc
incb
es
add
lock
xchg
cli
inc
mov
es
in
insl
lock
aaa
cs
add
adc
cs
add
add
jnp
fcompl
das
es
add
nop
cs
add
add
xor
es
xor
add
or
icebp
jl
es
add
add
scas
icebp
stos
sbb
movsb
xchg
inc
or
jmp
nop
sbb
cmc
adc
icebp
or
incl
aaa
pop
add
sbb
push
cmpsb
mov
test
dec
cwtl
dec
sbb
inc
pop
int
pop
mov
jns
rclb
loop
jns
add
push
out
std
jmp
mov
or
jne
jno
dec
ljmp
mov
sub
xor
mov
or
movsl
pop
sub
push
das
sub
xor
nop
xchg
mov
call
in
addb
aam
insb
mov
call
stos
rolb
mov
mov
push
inc
jmp
add
dec
je
jo
outsb
fs
gs
gs
inc
add
add
je
imul
inc
js
inc
js
add
push
imul
popa
jae
inc
add
add
jo
imul
add
imul
jae
add
inc
push
je
dec
push
add
add
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
popa
addr16
outsl
jae
push
call
movsb
xor
push
gs
insb
imul
inc
popa
je
add
inc
jo
incl
add
je
imul
outsb
addr16
add
add
jb
popa
je
gs
popa
addr16
add
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
insb
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
add
je
arpl
insb
insb
push
popa
outsb
add
test
add
add
movw
pusha
pusha
movw
lea
jmp
shr
push
lea
je
pusha
jmp
pop
pop
xchg
jmp
shlb
cmp
sub
pop
xchg
lret
jg
test
push
iret
ffree
in
sbb
leave
aas
cltd
test
lods
fisttpll
scas
bnd
sub
stc
daa
addl
xor
xchg
inc
xlat
movsb
or
cmp
push
cmpsb
cmpsl
jns
sbb
xor
inc
push
fidivl
fwait
repnz
push
inc
mov
insl
mov
sbb
je
or
sbb
mov
arpl
sub
pop
jno
mov
test
loop
arpl
add
sub
mov
jnp
pmullw
cmc
cmp
jle
cltd
aaa
mov
or
loop
adc
cwtl
xchg
ljmp
lods
and
pop
adc
addl
stc
popa
sbb
daa
sbb
add
add
push
ret
jmp
add
inc
jbe
dec
lds
lds
lea
int
jne
js
cs
data16
in
ds
cmp
xlat
insb
or
and
fstpl
addr16
cld
sub
shlb
adc
setge
xor
and
or
enter
push
enter
or
imul
push
mov
insl
sub
roll
xchg
mov
xor
add
mov
adc
push
mov
xlat
mov
ljmp
xchg
dec
add
std
cmpsb
mov
inc
push
jecxz
iret
xor
pop
push
repnz
dec
mov
lods
lret
cld
jle
int
adc
fnstsw
popf
adc
ja
popf
das
sbb
lcall
mov
mov
jp
or
add
je
jb
jo
add
cmc
add
stc
add
jmp
add
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
gs
imul
js
dec
outsb
addr16
inc
add
in
call
add
insb
jae
jb
insl
jo
inc
add
add
je
imul
bound
gs
add
test
add
pusha
lea
jmp
movb
dec
pushf
lea
call
pushf
push
pusha
movb
cmp
jmp
add
sub
mov
sub
adc
sub
mov
cli
sub
xor
sbb
cmp
jnp
add
cmc
sub
pop
call
sbb
xchg
je
add
sub
lret
subb
sti
in
add
add
add
addb
add
or
add
adc
add
add
add
adc
add
add
add
loopne
add
in
add
add
add
ljmp
add
sub
fucomi
sub
sbb
sub
push
sti
sub
cmc
call
sbb
iret
mov
add
jae
add
jg
add
mov
add
push
sub
inc
push
sub
repnz
dec
out
add
jmp
add
push
sub
es
add
mov
add
mov
add
sbb
cmp
sub
movsb
pushf
sub
fidivs
sbb
push
insl
sub
cmp
sub
int3
je
add
lea
add
push
sub
pop
jmp
sub
movsb
ljmp
mov
jne
add
out
add
sbb
into
call
sub
test
push
add
mov
add
mov
add
sbb
fsubp
sbb
daa
loope
add
sbb
mov
sub
repnz
add
jmp
add
out
add
sub
scas
hlt
sub
jb
sbb
out
out
add
ja
add
jmp
sub
lahf
out
add
jecxz
add
out
add
sub
jo
sub
cmc
clc
sub
sbb
add
sub
lds
add
push
sub
movsb
outsl
sub
mov
sbb
jnp
sbb
xchg
xchg
sub
mov
sbb
pop
out
add
ds
add
sbb
lock
sub
pop
push
sub
inc
add
add
outsl
sub
das
jb
add
xchg
add
imul
sti
sub
movsb
fwait
sub
hlt
mov
add
in
add
mov
add
sbb
out
sbb
jl
sbb
jcxz
add
sub
inc
jb
add
sbb
mov
add
sbb
sub
sub
pop
xchg
add
loope
add
in
add
nop
sub
sahf
jbe
add
mov
add
ja
add
sub
icebp
loop
add
mov
add
nop
sub
pushf
add
add
outsl
sub
pop
jg
add
mov
add
ja
add
in
sub
lea
add
sub
cmp
sbb
outsb
mov
add
push
sub
add
add
xchg
jg
add
sub
testl
sub
decl
add
mov
add
insl
sub
mov
sub
mov
loop
add
std
sub
sbb
sbb
add
sub
rcll
lock
add
sub
pop
ja
add
push
sub
jle
sub
jae
sub
loopne
sbb
lret
mov
add
jle
add
jmp
add
std
sub
dec
mov
add
mov
add
jecxz
add
add
jnp
add
push
sub
sub
xor
sbb
filds
sub
mov
sub
scas
mov
add
ljmp
jb
sub
push
mov
add
sbb
push
out
add
sub
daa
out
add
push
sub
cltd
subb
out
sub
lret
add
jp
add
sub
mov
sub
xchg
out
add
ljmp
add
add
sbb
js
sub
or
sub
push
jecxz
add
sub
clc
push
sub
cmp
sbb
js
sub
pop
mov
add
sub
cmp
sbb
test
sub
fs
add
cli
sub
xchg
push
sub
sub
sub
inc
mov
add
nop
sub
pop
xchg
add
push
sub
popa
ljmp
add
out
add
subl
push
sbb
popf
ja
add
sbb
push
xchg
sub
push
add
add
sub
aaa
mov
add
imull
add
loope
add
sub
outsb
sub
dec
push
sub
sub
sub
imul
sub
mov
sub
pop
out
add
jp
add
out
add
jecxz
add
push
sub
ja
sbb
and
sbb
dec
mov
add
mov
add
jno
add
sub
mov
add
mov
add
sub
pop
sub
rsqrtps
add
cli
sub
les
sub
lds
sub
shlb
mov
sub
mov
xchg
sub
dec
out
add
ja
add
mov
add
push
sub
or
sub
cmpsb
loop
add
sbb
rorl
sub
mov
sbb
subl
lcall
add
in
add
sub
divb
sub
cld
out
add
outsb
sub
aaa
out
add
add
jbe
push
add
in
sub
daa
in
add
jb
add
ja
add
sbb
add
sbb
adc
add
in
add
sub
mov
sub
inc
out
add
push
sub
push
hlt
sub
xchg
ljmp
add
sub
cmp
add
imull
add
sub
mov
sub
int
sub
cmpxchg
add
jbe
add
subb
inc
hlt
sub
sbb
sub
mov
sub
mov
sub
out
jmp
sbb
mov
sub
cmpsl
loopne
add
ds
add
sub
sub
sbb
xor
sub
rorl
sub
out
mov
add
insl
sub
xchg
push
sub
sti
std
sub
and
add
ljmp
in
sub
mov
sbb
cmpsl
std
sub
jbe
add
mov
add
add
hlt
sub
fsubp
sbb
inc
push
sub
mov
sub
popf
mov
add
push
sub
test
sub
aam
sub
push
sub
inc
std
sub
test
sub
cmp
sub
mov
sub
out
sbb
in
sub
push
nop
sub
enter
lock
add
js
add
add
add
sub
pop
imull
add
ds
add
add
add
lea
add
jns
add
jmp
sub
add
add
fstl
add
add
add
out
add
sub
add
sbb
je
sub
xchg
sbb
jns
sbb
mov
jmp
add
subb
imul
add
lea
add
sub
outsb
ja
add
push
add
add
add
add
cmpb
add
movsb
add
addb
add
adc
add
or
add
or
add
adc
add
pop
add
cmpb
add
sbb
add
adc
add
add
add
or
add
inc
sub
inc
mov
add
sub
gs
push
add
sbb
and
or
sub
aaa
jmp
sub
add
add
inc
mov
add
call
sub
push
mov
add
add
add
loop
add
nop
sub
add
add
mov
sub
add
add
add
inc
gs
gs
imul
add
inc
gs
gs
popa
addr16
imul
orl
mov
fmuls
fdivrs
data16
gs
stos
stc
into
leave
pop
scas
mov
cmp
rcrb
mov
and
push
out
or
out
add
and
ja
iret
hlt
sub
fs
lret
clc
jmp
jg
mov
mov
mov
pop
dec
jno
mov
sub
sahf
xchg
scas
xlat
inc
lock
ljmp
add
lods
sbb
shrb
in
cli
pop
cld
dec
dec
mov
mov
mov
outsl
andl
mov
rcrb
sub
test
pop
adcb
rcl
or
push
int
inc
aad
adc
fbstp
add
es
inc
push
mov
js
mov
inc
sub
jl
cmp
pop
mov
add
popa
jo
gs
jb
jns
add
inc
gs
je
imul
inc
add
rcrb
aas
push
add
lea
je
cmc
push
shld
btc
setge
mov
cmc
shr
cmc
xor
shl
cmc
xor
call
mov
lea
lea
bswap
mov
jmp
mov
call
jmp
pusha
pushf
mov
mov
mov
movl
jmp
pushf
push
mov
jmp
stc
mov
pusha
sar
ror
add
mov
jmp
mov
push
pusha
pushl
popl
push
pushf
push
push
lea
jmp
ror
pop
and
mov
neg
pushf
bt
pop
xor
clc
neg
not
bt
rol
ror
bsr
pusha
xor
shl
sub
and
and
shr
bts
clc
mov
cmp
call
neg
movb
push
sub
stc
cmc
mov
clc
sub
jg
sub
call
mov
mov
pushf
pusha
mov
mov
pushf
push
jmp
movzbw
xchg
pushf
mov
sar
movzbw
shrd
movzbw
add
sbb
xor
add
dec
sar
clc
movzbl
pusha
shl
pusha
pushf
cmp
cmp
add
bsf
mov
sub
jp
cmp
push
pushf
and
call
test
xor
bt
call
cmc
pusha
clc
xor
shrd
xor
bt
xor
movb
movzbw
jmp
movl
movw
lea
jmp
sub
clc
push
mov
cmp
sub
push
push
pushf
movb
lea
jmp
pushl
popl
pushf
lea
jmp
call
call
cmp
sub
call
pushf
pushl
popl
pushf
lea
jmp
call
jmp
mov
pusha
push
pushl
mov
mov
call
lahf
pusha
rdtsc
bswap
mov
not
pusha
mov
mov
jmp
mov
ror
daa
das
mov
pushf
mov
sub
pushf
push
pusha
add
mov
pushf
pushf
movw
pushf
popl
jmp
cmc
das
movzbw
mov
push
mov
clc
test
add
pushf
call
test
adc
sub
mov
pusha
sub
pushf
stc
add
call
call
movb
pushl
popl
push
pushf
mov
lea
jmp
mov
call
call
mov
call
xor
daa
lea
mov
shr
call
push
mov
pusha
mov
call
jmp
mov
pushl
call
aam
pushf
mov
pushf
shr
cmc
and
mov
pusha
pushf
add
push
pushf
call
pusha
xor
push
xor
bt
jmp
not
clc
test
neg
cmc
bt
clc
sub
push
jmp
xchg
call
cmp
not
cmp
cmp
sub
call
xor
bt
cbtw
cmp
cwtl
push
pushf
call
mov
pushf
push
lea
jmp
xchg
pushf
call
mov
pusha
movl
movb
mov
lea
jmp
push
mov
movw
movw
pushf
pushl
mov
jmp
movl
movw
lea
jmp
pusha
mov
push
push
pushl
movb
lea
jmp
mov
mov
movl
pushl
pushf
lea
jmp
shrd
stc
mov
push
stc
test
bswap
cmp
sub
push
push
bswap
clc
ror
jmp
pushl
mov
add
push
pushf
pushf
mov
movb
mov
pushf
mov
lea
jmp
mov
call
movb
movb
mov
push
pushf
mov
call
jmp
movb
jmp
clc
movzbl
push
sub
jge
bt
bt
sub
cmc
call
cmc
mov
sar
mov
shl
rcr
pushl
popf
not
movsbw
mov
movsbl
mov
pop
mov
not
call
pop
push
rcr
push
bts
stc
mov
clc
sete
mov
push
clc
seto
push
pusha
not
movl
push
xchg
mov
xchg
ror
btr
call
mov
push
mov
pushf
pusha
mov
pushl
jmp
movl
push
pushl
lea
jmp
push
pushf
push
pushf
lea
jmp
call
mov
pusha
call
mov
lea
call
jmp
pushf
popl
jmp
jmp
jmp
sub
pushf
call
mov
push
pushf
pushf
lea
jmp
dec
call
call
xadd
mov
dec
jmp
jmp
call
rol
ror
push
dec
stc
ror
btr
call
lea
ja
shld
mov
movzbw
lea
lea
lea
setp
shld
mov
sub
bsf
cmp
mov
lea
stc
sbb
and
cmc
clc
rcl
sub
push
lea
mov
mov
bswap
movsbw
pusha
pushf
popl
call
call
pushf
bt
ror
pusha
xchg
jmp
call
pushl
popl
pushl
lea
jmp
jmp
mov
pushf
jmp
push
pushl
popl
mov
push
movb
pusha
lea
jmp
cmc
add
push
mov
call
mov
movw
pusha
mov
movb
pushf
popl
pushf
pushf
mov
pushf
call
lea
shrd
shr
movsbl
sub
dec
push
bsf
pusha
lea
rol
shrd
mov
pushl
add
rol
mov
dec
pushf
rol
xor
pop
sub
shrd
cmc
not
call
call
xchg
movsbw
pushf
xchg
jmp
add
jmp
call
push
mov
mov
push
push
pushl
ret
bswap
bswap
rol
neg
add
rcr
rcr
bswap
adc
rol
call
add
pusha
stc
xor
cmp
cmp
jmp
shl
btc
adc
das
notl
adc
add
setp
mov
stc
stc
bt
stc
sub
bt
pushf
push
and
pushf
call
pusha
mov
not
bsr
dec
inc
not
neg
rcl
xor
rcl
bt
mov
mov
jmp
mov
call
xor
mov
xor
pusha
pushl
neg
pushf
rol
cmc
pushl
pushf
xor
movb
pushf
pushl
jmp
jmp
mov
push
movb
pushf
lea
jmp
bt
pusha
test
and
push
push
mov
call
mov
jmp
stc
sub
pusha
pushf
mov
mov
pushf
lea
jmp
call
pushf
push
pusha
push
mov
jmp
mov
pushf
jmp
mov
call
push
pushf
mov
jmp
cmc
clc
neg
movb
stc
cmc
jmp
jmp
dec
rcl
sbb
lea
mov
shl
cmc
pusha
add
not
call
mov
pusha
mov
push
call
mov
jmp
pushf
popl
movb
jmp
pusha
pushl
mov
lea
jle
pusha
pushf
pusha
mov
movb
mov
pushf
pushf
lea
jle
pushf
pushf
popl
push
movb
mov
pushf
jmp
mov
pushl
call
call
mov
call
push
pushf
movl
push
movb
mov
lea
jmp
movl
pushf
pushf
lea
jmp
pusha
push
mov
push
mov
call
mov
mov
call
sub
cmc
bt
cwtl
cmp
call
movl
mov
movw
pusha
mov
mov
jmp
movb
movb
pushf
pushf
popl
jmp
mov
movl
push
call
call
cmp
sub
jmp
mov
push
mov
pushf
jmp
mov
pushf
pushf
lea
jmp
pushl
popl
push
pushl
mov
movw
lea
jmp
lea
jns
pushf
mov
call
pushf
pushl
mov
pushf
lea
je
push
jmp
movw
pushl
popl
movb
movw
movb
movb
lea
jmp
pusha
not
xchg
mov
pusha
add
clc
add
mov
movw
sub
mov
movb
stc
shl
jmp
mov
movb
movw
lea
jmp
pushf
jmp
pushf
mov
jmp
ror
jmp
pushf
movb
mov
call
jmp
pusha
call
jmp
jmp
pushf
pushl
call
pusha
pushl
mov
jmp
jmp
setle
mov
mov
push
mov
push
mov
lea
jmp
call
push
mov
mov
pushl
pushf
popl
movw
jmp
movb
call
mov
bt
and
pushl
pushf
pushf
jmp
pushl
popl
pushl
mov
movb
lea
jmp
jmp
pushf
mov
jmp
test
test
stc
neg
cmc
test
test
sub
pushl
bt
sub
pushf
sub
jmp
push
call
pushl
popl
push
mov
mov
mov
lea
jmp
mov
jmp
mov
movb
pusha
pusha
push
lea
jmp
mov
movb
call
clc
call
pushf
lea
jno
push
pushl
popl
pushl
lea
jmp
movl
movb
pushf
pushf
lea
jmp
jmp
add
dec
rol
movzbl
stc
jmp
mov
jmp
mov
mov
movb
lea
jmp
shld
mov
stc
jmp
btr
cmp
mov
add
dec
shrd
push
mov
mov
test
bt
movw
not
push
cmc
pushf
push
not
cmp
cmp
stc
test
and
pusha
movw
movw
pushf
mov
movb
call
mov
push
mov
push
pusha
pushf
lea
jmp
neg
pusha
test
xor
cmc
cmc
sub
pushf
mov
pushf
push
movb
lea
jmp
pushf
push
inc
pushf
pushf
call
neg
cmc
cmc
bt
call
cmc
mov
movw
add
pushf
jmp
mov
pushf
mov
movb
pushf
call
pushf
movl
pushf
mov
push
mov
pusha
call
test
stc
clc
add
cmc
clc
popf
push
lea
jmp
pushf
call
pushf
mov
call
pushf
popl
movw
call
call
pushf
jmp
cmc
add
pushf
mov
push
push
push
movb
lea
jmp
mov
mov
movw
call
inc
stc
xor
call
pusha
mov
mov
mov
pushf
movb
mov
call
mov
pushf
movw
pushf
mov
mov
lea
js
pushf
mov
pusha
mov
mov
push
movl
pushf
pushf
lea
jmp
pushf
pushf
popl
pushl
jmp
add
bt
test
pusha
shld
pushf
mov
movw
mov
pushf
popl
pusha
pushf
mov
call
mov
push
call
pusha
mov
pushf
lea
jmp
mov
rol
test
pushf
push
cmc
neg
movb
pushl
push
not
call
pusha
mov
lea
je
clc
bt
push
mov
movzbl
inc
pushf
bts
mov
push
bt
call
stc
mov
cmp
cmc
cmp
sub
jmp
mov
call
mov
mov
call
call
push
pushf
bsr
mov
call
call
mov
push
movw
push
mov
pushf
mov
call
pushf
mov
pushf
pushf
movl
pushl
pusha
pushf
lea
jmp
movb
mov
mov
call
jmp
pushf
pushf
inc
mov
xor
call
mov
jmp
movb
mov
jmp
sub
cmp
clc
cwtl
stc
sub
jmp
pushf
popl
pushl
call
pushf
pusha
mov
pusha
movb
pushf
pushf
popl
pushf
lea
ja
pushf
mov
jmp
pusha
movb
jmp
pushf
add
push
push
call
jmp
pushf
popl
jmp
pusha
pushf
popl
call
pushf
mov
jmp
call
pushf
mov
jmp
jmp
pushl
mov
mov
jmp
pushf
pushf
popl
movb
call
jmp
call
jmp
mov
push
lea
jnp
push
push
pushf
mov
lea
jmp
jmp
jmp
cmc
cmc
jmp
movl
mov
pushf
movl
lea
jmp
call
sub
mov
movw
movl
lea
jmp
movzbl
lea
lea
pushl
pushl
std
xchg
lea
movzbw
mov
pushf
cld
pushl
rep
std
bsr
lea
clc
mov
clc
mov
cmc
pushl
popf
mov
mov
lea
jmp
mov
call
pushf
pusha
mov
jmp
sub
test
neg
call
mov
call
pusha
mov
call
pushl
popl
push
push
pusha
lea
jmp
shl
cmc
or
mov
cmc
mov
not
jmp
jmp
movzbw
ror
add
rcr
mov
sar
or
mov
cmc
add
pushf
pusha
mov
pusha
pushf
pushf
push
lea
jmp
push
call
push
add
cmp
cmc
shld
pusha
mov
jmp
jmp
mov
pushl
call
inc
movsbw
xor
movzbl
push
sar
xor
not
movsbw
bt
rcl
rol
and
movzbw
btr
pushf
neg
bsf
dec
pushf
lea
jmp
pushf
push
call
lea
mov
push
mov
pushf
pusha
pushf
movw
mov
pushf
pushf
movb
push
lea
jmp
clc
mov
stc
pusha
stc
pusha
sub
push
jmp
add
js
pushf
neg
clc
rol
bt
add
clc
cmp
cmp
xor
bt
cmp
neg
cmc
pushf
cmp
xor
clc
call
dec
clc
stc
bt
not
bt
bt
jmp
mov
mov
pusha
jmp
mov
dec
pushf
push
movw
lea
jmp
call
pusha
push
mov
pushf
push
pushf
popl
jmp
pushf
movl
pushf
pushf
push
movw
lea
jmp
pusha
lea
jne
pusha
mov
pusha
push
pushf
lea
jmp
pushf
popl
push
mov
pushl
popl
mov
mov
movl
lea
jmp
add
cmp
sbb
mov
stc
bt
clc
cmc
sub
push
mov
push
lea
jmp
call
test
sub
stc
pusha
sub
push
cmc
test
pushf
xor
mov
bt
neg
call
pushl
call
pushf
jmp
pushf
bswap
bt
cmp
clc
add
pushl
mov
push
pushl
ret
mov
mov
lea
jmp
mov
jmp
mov
jmp
jmp
pushf
pusha
movb
mov
jmp
pushf
popl
mov
pushl
popl
push
pushf
pushf
lea
jmp
push
push
mov
pushf
push
call
jmp
movb
mov
mov
push
jmp
pushf
xor
call
push
jmp
jmp
pushf
mov
jmp
pushf
call
call
ror
pushf
cmc
pushf
neg
stc
test
bt
sub
clc
test
jmp
call
movw
pusha
pushf
popl
call
movw
mov
jmp
pushf
pushf
popl
pusha
pusha
call
pushf
pushf
pushl
pushl
mov
pushf
mov
movb
mov
pusha
movb
jmp
jmp
push
push
mov
pusha
pusha
movl
movw
pushl
pushf
movw
lea
jmp
inc
push
cmc
jmp
aaa
mov
not
pushf
mov
test
add
pusha
call
rcl
mov
ror
shl
shl
mov
call
cwtl
mov
movb
push
mov
pushf
pusha
pushf
lea
jnp
mov
push
movw
pushf
lea
jmp
jmp
pushf
mov
movb
pushf
pushf
pusha
lea
jmp
pusha
mov
push
mov
jmp
btr
das
bsr
mov
call
rcr
not
movzbw
mov
pushl
ror
or
movsbw
mov
neg
shld
setne
sub
sar
mov
test
cmc
cmc
add
mov
pushf
mov
pushf
pushl
mov
lea
jmp
bsr
cmc
mov
shr
rol
mov
push
pusha
pusha
add
mov
mov
mov
lea
jmp
call
movw
inc
clc
cmc
pushl
xor
stc
push
jmp
pushf
call
mov
pusha
mov
pushf
lea
jmp
btr
add
inc
mov
jmp
shl
shrd
movzbl
neg
and
add
btr
xor
and
test
movzbl
shrd
pop
lea
call
ror
stc
and
xor
adc
bt
and
btr
pop
mov
movw
add
lea
jno
pushf
pusha
mov
pusha
push
pushf
lea
jmp
stc
shr
call
pushf
movl
pusha
movb
pushf
movb
lea
jmp
mov
pusha
pushf
push
jmp
test
shl
mov
shl
push
shl
movsb
shl
scas
shl
movsl
shl
push
shl
mov
in
cmpsb
shl
push
shl
mov
in
push
shl
mov
in
push
shl
mov
shl
push
shl
mov
in
mov
shl
lods
shl
mov
in
mov
in
mov
shl
push
shl
push
shl
lods
shl
mov
shl
scas
shl
lods
shl
mov
in
push
shl
mov
in
movsb
shl
mov
shl
mov
in
push
shl
push
shl
mov
shl
mov
in
mov
shl
mov
in
lods
shl
mov
in
push
shl
mov
shl
pop
shl
movsl
shl
mov
in
mov
shl
push
shl
cmpsl
shl
push
shl
mov
in
push
shl
push
shl
mov
in
push
shl
mov
in
mov
shl
mov
in
scas
shl
movsl
shl
push
shl
scas
shl
mov
in
lods
shl
mov
shl
lods
shl
mov
shl
pop
shl
mov
in
cmpsl
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
shl
mov
in
push
shl
mov
in
mov
in
mov
shl
mov
shl
mov
in
mov
in
lods
shl
mov
in
cmpsb
shl
mov
in
mov
in
push
shl
mov
shl
mov
shl
mov
in
mov
shl
movsl
shl
mov
shl
mov
in
push
shl
lods
shl
mov
in
scas
shl
mov
in
scas
shl
movsl
shl
push
shl
mov
shl
movsl
shl
mov
shl
push
shl
mov
shl
push
shl
push
shl
mov
in
push
shl
push
shl
mov
shl
push
shl
push
shl
lods
shl
scas
shl
push
shl
push
shl
mov
shl
mov
shl
lods
shl
push
shl
mov
shl
lods
shl
scas
shl
mov
in
push
shl
mov
in
mov
shl
push
shl
mov
in
push
shl
mov
shl
movsl
shl
cmpsb
shl
push
shl
push
shl
mov
shl
mov
shl
scas
shl
mov
shl
push
shl
mov
shl
mov
in
movsl
shl
push
shl
push
shl
mov
shl
movsl
shl
mov
shl
push
shl
movsb
shl
scas
shl
mov
shl
mov
shl
mov
shl
movsl
shl
cmpsb
shl
movsl
shl
push
shl
mov
in
push
shl
mov
shl
movsb
shl
mov
in
mov
shl
cmpsl
shl
mov
shl
push
shl
push
shl
pop
shl
mov
in
push
shl
movsl
shl
movsb
shl
mov
in
push
shl
mov
in
mov
shl
push
shl
push
shl
pop
shl
mov
shl
movsl
shl
mov
in
scas
shl
push
shl
push
shl
mov
in
movsl
shl
push
shl
mov
shl
mov
in
push
shl
lods
shl
mov
shl
push
shl
lods
shl
movsl
shl
scas
shl
push
shl
mov
or
lcall
add
mov
or
cli
lea
mov
mov
mov
pushf
add
stc
stc
mov
shrd
push
pushf
pushf
mov
call
mov
jmp
setp
pusha
mov
push
xchg
test
sub
bt
lea
jnp
pusha
ror
mov
pushf
pushl
xchg
call
mov
pushl
popl
pushf
lea
jmp
jmp
test
mov
or
mov
push
sub
stc
stc
shl
pushf
movw
call
jmp
movl
push
mov
pushf
mov
lea
jmp
sub
test
pushf
pusha
shr
pushf
pushl
push
mov
call
pusha
call
pushf
popl
call
mov
push
mov
push
call
add
call
pusha
mov
movb
mov
pushf
mov
pusha
call
pushf
push
mov
pushf
pushf
jmp
movl
mov
push
pushl
lea
jmp
call
mov
call
push
lea
jo
pushf
mov
pusha
jmp
call
decl
pushl
lea
js
push
pushf
lea
jne
pusha
pusha
push
jmp
pushf
popl
pushf
mov
push
pusha
jmp
movw
mov
pushf
call
jmp
pushf
mov
jmp
push
mov
call
mov
push
mov
pushf
lea
jmp
stc
cmc
add
stc
mov
cmp
sub
bt
mov
rol
movw
mov
bswap
pusha
not
mov
inc
pushf
neg
pushf
jmp
call
mov
pushf
jmp
mov
mov
lea
jmp
call
call
dec
push
sbb
movzbl
stc
clc
call
pushf
pushf
jmp
dec
bt
cmc
clc
call
pushl
movb
mov
call
lea
jnp
push
push
call
ror
mov
cmc
inc
rcr
pusha
sub
inc
bts
stc
setp
sub
pusha
cmc
movzbw
neg
lea
and
rcl
bt
xor
or
cmc
neg
dec
movzbw
dec
movzbw
not
jmp
mov
pushl
pushf
popl
jmp
bswap
lea
mov
push
push
pushf
popl
bts
lea
jmp
mov
call
pushf
popl
jmp
push
mov
pusha
pusha
mov
mov
push
push
mov
lea
jb
pushf
mov
pushf
popl
push
mov
pusha
call
xor
call
call
call
jmp
mov
pushf
mov
pushf
call
xchg
mov
cmc
movl
lea
lea
jmp
neg
mov
or
movsbw
mov
stc
bts
cmp
mov
rcl
jb
mov
clc
jmp
mov
jmp
push
jmp
movb
mov
call
jmp
movl
pushf
push
mov
pushf
lea
jmp
rcr
cmc
rcr
btc
ror
dec
bsf
movzbw
dec
stc
not
bt
setnp
ror
pusha
shr
neg
inc
or
movzbl
xor
inc
pop
jmp
mov
call
mov
call
movb
call
mov
jmp
jmp
push
mov
jmp
jmp
mov
pushf
pushf
lea
jmp
pushf
mov
mov
not
pushf
lea
xchg
not
not
xchg
bswap
movsbw
pushf
popl
movw
mov
mov
bts
rol
pushf
mov
jmp
mov
movl
movb
pushf
pushf
lea
jmp
and
sub
neg
mov
neg
mov
pushf
stc
sub
bt
stc
test
clc
shr
push
pushf
mov
mov
movb
pushf
popl
call
pushf
divl
pushf
movw
mov
pushl
pushf
mov
lea
jns
pushf
pushf
pushl
popl
pusha
push
movb
lea
jmp
jmp
rcr
cmc
mov
cmp
jmp
pusha
pushf
popl
pushf
pushf
mov
mov
mov
pusha
call
movsbw
mov
pushf
call
mov
pushf
pushl
mov
jmp
call
dec
pushf
mov
lea
jmp
call
push
pusha
mov
pushf
movl
mov
pushf
push
lea
jmp
neg
stc
cmc
bt
call
xor
cmp
bt
mov
test
cmp
clc
sub
cmc
stc
jmp
mov
push
pushl
movl
pushf
lea
jmp
push
pushl
popl
mov
movb
lea
jmp
pushf
pushf
mov
call
add
inc
bts
mov
and
sbb
sub
sub
mov
pusha
cmc
test
sub
push
push
pushf
shr
movb
jmp
pushf
mov
jmp
call
rdtsc
xchg
pop
cmp
pop
shl
pop
call
ror
shl
mov
shrd
cmc
dec
rcr
mov
pushf
jmp
mov
call
decl
pushf
lea
jne
call
mov
call
bt
movzww
push
xchg
call
movzbw
push
jmp
movw
mov
call
mov
pusha
call
pushf
movb
mov
push
movl
pushf
push
mov
movb
lea
jmp
push
jmp
mov
jmp
call
clc
neg
shl
mov
stc
mov
push
sub
bt
movb
pusha
shl
call
jmp
sub
test
cmc
cmp
xor
pusha
push
neg
movw
push
dec
call
pusha
pushl
jmp
pushf
jmp
stc
sub
push
call
movb
pushf
popl
call
pusha
pusha
pushf
popl
push
pushf
movb
jmp
mov
call
mov
pushf
bswap
rcl
rol
xadd
shl
btc
add
cmp
bswap
xadd
dec
lea
xor
sub
bts
xadd
stc
mov
movzbw
sbb
mov
inc
btr
mov
sbb
add
movzbw
sar
ror
shld
mov
cmp
movzbw
xor
bsf
adc
bts
ror
not
and
setle
sub
call
not
stc
pushf
ror
mov
cmp
jmp
pushf
push
mov
pushf
mov
pusha
pushf
lea
jmp
pushf
lea
jae
push
pushf
push
call
rol
neg
jmp
shl
ror
neg
rcl
mov
jmp
push
call
mov
call
mov
call
pushl
movb
mov
jmp
mov
call
push
push
pushl
lea
ja
push
call
lea
jmp
neg
push
clc
bt
rol
clc
sub
ja
add
pushf
cmp
xor
push
bt
neg
call
push
call
mov
call
call
pushf
popl
jmp
stc
stc
bswap
pusha
stc
add
push
bswap
bt
pushf
cmc
add
call
mov
jmp
jmp
mov
push
pushf
popl
push
pushl
popl
movb
pusha
pushf
pushl
lea
jmp
stc
pushf
sub
pushl
movw
call
mov
mov
movb
movw
jmp
shrd
mov
bt
movzbw
mov
clc
pusha
jmp
jmp
call
pushf
neg
rol
mov
bt
pushf
call
add
shld
movl
ror
shrd
xor
rcr
sar
rcr
bsr
movzbl
pushf
lea
clc
pushf
bts
mov
test
call
movl
mov
lea
jmp
movl
mov
pushl
mov
push
movl
movl
mov
mov
pushf
lea
jmp
cmp
pushf
xor
lea
pushf
pushf
cmp
call
movb
pushf
popl
jmp
cmc
bswap
test
clc
pushl
pushf
add
jmp
pushf
mov
push
jmp
call
pusha
push
pushf
mov
jmp
push
mov
push
pushf
popl
pushf
lea
js
pushf
pushf
mov
push
pushf
mov
pushf
call
pushf
pushf
mov
mov
jmp
push
pushf
pushf
pushf
popl
call
or
clc
sub
adc
movzbl
stc
bt
cmp
pusha
xor
jmp
movl
pushf
lea
jmp
push
pushf
movb
mov
jmp
call
call
pushf
popl
call
call
mov
call
dec
movb
mov
mov
movw
lea
jmp
inc
jmp
clc
sub
mov
movb
jmp
mov
pushf
push
mov
mov
lea
jmp
pushf
movb
movb
mov
pusha
lea
jmp
pusha
add
pushf
lea
jmp
push
pushf
mov
jmp
mov
pushf
movzbw
bswap
mov
mov
movl
pushl
ret
jmp
push
test
pushl
popl
jmp
pusha
push
mov
call
call
mov
push
lea
jmp
mov
call
sar
mov
push
cmc
add
movw
pusha
mov
movb
push
pushf
lea
jmp
pushf
sub
pushf
call
push
push
call
