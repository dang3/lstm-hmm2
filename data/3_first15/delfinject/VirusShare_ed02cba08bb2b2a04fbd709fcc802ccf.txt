jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
cmpl
jne
push
push
call
mov
test
jne
xor
pop
pop
ret
mov
mov
mov
xor
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
pop
pop
ret
nop
mov
mov
ret
mov
push
push
mov
mov
call
test
jne
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
ret
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jne
mov
call
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
add
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
cmp
jb
mov
add
mov
add
cmp
ja
cmp
jne
mov
add
mov
sub
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
sub
jmp
mov
add
mov
mov
add
sub
mov
sub
mov
mov
mov
call
test
jne
xor
jmp
mov
jmp
mov
cmp
jne
xor
pop
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
mov
add
mov
mov
jmp
mov
mov
cmp
ja
mov
add
cmp
ja
cmp
jae
mov
mov
add
cmp
jbe
mov
push
push
push
call
test
jne
movl
mov
call
mov
cmp
jne
mov
xor
mov
cmpl
je
mov
mov
mov
mov
sub
mov
mov
add
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
and
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
add
cmp
jbe
mov
cmp
jbe
mov
cmp
jbe
push
push
sub
push
push
call
test
jne
mov
xor
mov
jmp
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
push
mov
mov
add
and
mov
mov
add
and
mov
mov
mov
sub
mov
mov
jmp
mov
mov
add
cmp
jae
mov
cmp
jae
mov
cmp
jbe
push
sub
push
push
call
test
jne
movl
mov
cmp
jne
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
add
and
mov
jmp
cmp
jg
mov
mov
mov
call
cmpl
je
mov
add
mov
sub
cmpl
jne
mov
call
jmp
mov
cmp
jne
mov
mov
call
cmpl
je
mov
mov
mov
call
cmpl
jne
mov
mov
mov
call
xor
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
jmp
mov
cmp
je
cmp
jne
cmp
jne
cmp
jle
lea
mov
sub
mov
add
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
cmp
jne
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
add
mov
mov
sub
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
lea
and
mov
add
and
cmp
jae
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
pop
pop
ret
push
mov
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
ret
push
mov
push
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
jmp
push
push
mov
push
call
mov
cmp
jne
mov
call
mov
call
mov
call
mov
test
je
mov
mov
push
call
mov
test
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
ret
push
cmp
jne
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
lea
mov
jmp
mov
cmp
jb
add
cmp
jb
mov
cmp
jne
movl
xor
mov
ret
nop
push
mov
sub
lea
cmp
jl
movl
mov
call
pop
ret
cmp
jl
mov
or
mov
mov
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
cmp
je
movl
call
add
mov
pop
pop
ret
lea
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
add
add
andl
mov
pop
pop
pop
ret
push
push
push
push
add
mov
mov
movb
mov
call
mov
test
je
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
lea
mov
sub
add
mov
call
jmp
lea
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
add
mov
add
cmp
jae
lea
sub
call
lea
mov
call
movb
mov
add
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
jne
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
xor
test
jns
add
sar
cmp
jg
mov
mov
test
jne
inc
cmp
jne
mov
ret
push
push
push
push
mov
mov
mov
mov
cmp
jle
mov
mov
cmp
jle
mov
mov
cmp
jg
mov
mov
cmp
je
mov
jmp
cmp
jg
mov
call
mov
test
jne
mov
call
test
jne
xor
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
incl
sub
add
jmp
mov
call
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
cmp
jne
mov
mov
mov
add
andl
mov
mov
or
mov
add
incl
sub
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
je
mov
mov
add
andl
mov
cmp
jne
mov
test
jns
add
sar
mov
xor
mov
jmp
mov
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
sub
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
cmp
je
movl
jmp
add
mov
call
and
mov
add
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
test
je
and
cmp
jge
movl
jmp
orl
jmp
mov
cmpl
je
cmpl
je
cmpl
jge
movl
jmp
mov
add
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
mov
sub
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
mov
sub
mov
add
cmpl
jge
mov
add
mov
sub
mov
jmp
mov
testb
jne
mov
mov
add
call
cmpl
jl
mov
add
mov
or
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
mov
cmp
jl
mov
sub
mov
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
and
or
mov
mov
jmp
call
mov
add
testb
jne
mov
mov
mov
mov
mov
cmp
jge
add
mov
mov
sub
jmp
call
mov
sub
cmpl
jl
mov
add
mov
call
jmp
add
mov
add
andl
jmp
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
jmp
xor
jmp
mov
sub
add
mov
and
or
mov
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
test
je
mov
mov
xchg
call
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
test
jle
call
mov
test
jne
mov
call
jmp
xor
mov
pop
ret
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
push
push
push
mov
mov
jmp
push
call
mov
mov
test
je
cmp
jbe
cmpb
jne
cmpb
jne
add
jmp
xor
mov
jmp
cmp
jne
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
cmp
ja
mov
mov
call
mov
mov
xor
jmp
cmp
jne
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
ja
mov
pop
pop
pop
pop
ret
mov
push
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
mov
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
cmp
jbe
mov
mov
inc
inc
and
xchg
call
pop
ret
nop
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
push
sub
mov
mov
cltd
xor
sub
mov
xor
xor
div
add
mov
inc
test
jne
test
jge
movb
inc
mov
inc
mov
cmp
jle
mov
sub
jle
add
mov
rep
mov
mov
inc
dec
jne
add
pop
pop
pop
ret
nop
mov
xor
call
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
push
push
push
mov
mov
test
je
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
test
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
test
je
mov
xor
mov
xor
push
push
pushl
mov
cmp
jle
mov
inc
mov
test
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
nop
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
xor
mov
inc
jmp
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
push
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
test
je
mov
cmp
jne
mov
mov
mov
jmp
mov
test
jne
ret
jmp
jmp
pop
pop
ret
mov
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
lea
movzwl
add
mov
ret
shr
mov
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
xor
lea
xor
mov
call
lea
xor
mov
call
movl
xor
mov
mov
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
call
test
je
movb
xor
push
push
pushl
mov
movl
lea
push
mov
push
call
test
je
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
push
mov
push
call
test
jl
cmpl
je
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
xor
lea
push
lea
mov
push
mov
add
push
mov
add
push
mov
push
call
test
je
lea
push
mov
call
push
mov
push
mov
add
push
mov
push
call
inc
decl
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
cmpb
jne
push
mov
push
call
jmp
mov
push
call
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
add
mov
mov
lea
mov
call
lea
mov
mov
call
mov
mov
call
add
pop
pop
ret
mov
push
push
mov
push
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
test
je
push
call
mov
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
test
jle
mov
cmp
jne
mov
lea
call
mov
movzbl
xor
mov
inc
inc
dec
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
pop
add
add
cmp
add
inc
add
xor
inc
add
inc
add
add
inc
add
cmp
add
add
mov
inc
add
in
add
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
test
jne
push
call
mov
mov
mov
call
mov
mov
call
lea
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
test
je
mov
mov
call
mov
call
mov
mov
mov
call
lea
mov
call
mov
mov
call
cmpb
jne
push
lea
xor
call
mov
push
mov
call
xor
pop
call
test
jmp
push
call
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
call
add
push
add
incl
add
add
add
dec
inc
xor
push
test
pop
xor
push
test
nop
clc
xor
pushl
push
cld
pop
mov
cmc
mov
mov
mov
jmp
incl
add
and
sbb
and
add
and
add
and
cmp
and
add
and
inc
xchg
and
add
data16
out
out
in
insb
insl
in
outsb
out
outsl
out
jo
icebp
add
and
mov
add
pusha
sub
mov
mov
cmp
adc
mov
adc
sbb
sbb
sbb
sbb
lds
cwtl
sbb
sbb
mov
and
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
shlb
push
test
int3
dec
sahf
popa
xor
mov
stos
std
or
out
xor
jecxz
jecxz
daa
jbe
fsubrs
int
scas
adc
aaa
inc
cmpsl
fdivrs
popa
mov
adc
leave
dec
lcall
shll
les
cmpsb
stc
or
push
lahf
cs
pusha
and
aam
mov
sbb
or
ja
fldcw
lret
decl
mov
movb
mov
push
mov
adc
cmp
sub
fildll
and
xchg
in
testb
adc
das
jle
shlb
jae
mov
daa
fsincos
or
aas
dec
repnz
inc
xchg
das
add
lret
sbb
jno
loop
xor
fldt
mov
mov
ss
sub
lods
outsl
mov
sub
push
pop
call
jg
and
inc
push
test
int
sahf
pop
mov
and
jne
mov
stos
lods
std
pop
out
dec
mov
daa
jbe
sub
int
scas
mov
xchg
aaa
inc
mov
push
mov
adc
dec
dec
lcall
shll
mov
cmpsb
stos
jp
ljmp
and
aam
mov
push
cli
cmpsb
cs
ds
loopne
inc
lods
ja
fldcw
lret
xchg
popa
push
sahf
mov
inc
sub
sub
fimull
dec
mov
lret
sbb
pop
leave
es
mov
xor
push
popf
sti
mov
fimuls
mov
test
or
shrl
jle
cwtl
jbe
pop
and
jmp
adc
xor
add
test
js
xchg
ds
sub
cmp
mov
fsubrl
lret
test
push
cltd
xor
leave
dec
popf
sub
bound
imul
inc
or
pop
in
cmp
jno
mov
inc
sbb
and
inc
or
xor
outsl
ds
inc
xchg
daa
jbe
sub
mov
dec
repz
aam
repz
xchg
jecxz
sahf
shlb
xchg
lcall
and
or
ljmp
dec
sub
ficoms
fcoms
mov
pop
fdivrl
popf
call
out
mov
loopne
adc
push
in
movsb
fs
sub
mov
inc
cmc
add
out
mov
xor
stos
out
testb
mov
outsb
xor
xor
sti
int3
pop
pusha
inc
test
mov
and
sarb
jns
xchg
std
pop
icebp
add
lea
clc
push
pop
jp
mov
cmp
dec
popf
mov
mov
fdivl
mov
lret
test
pop
call
lea
jno
addps
jns
clc
or
into
and
rcrb
idivb
inc
pcmpgtw
out
and
jbe
sub
daa
aas
clc
ficoms
loope
sbbl
cltd
sub
js
test
xchg
shrl
inc
hlt
pop
push
or
xor
and
fidivs
dec
jo
push
cwtl
push
and
xorb
inc
mov
mov
fdivl
and
je
not
cmp
or
push
in
pop
ficompl
push
in
push
sar
pushf
imul
adc
fildll
sarb
sub
push
pushf
adc
das
jle
dec
lcall
inc
or
pop
in
and
dec
sbb
imul
mov
dec
or
sub
test
push
pushf
mov
inc
daa
imulb
jp
fdiv
xlat
cmp
dec
push
hlt
mov
movsl
mov
and
sarb
scas
clc
inc
xchg
sti
xor
and
jno
mov
lret
jne
xlat
data16
pop
adc
sbb
mov
daa
jbe
fdiv
dec
cmpsl
push
ret
xchg
jecxz
and
std
inc
jnp
mov
loopne
cwtl
outsb
movsb
sbb
lcall
lret
or
in
adc
jnp
inc
nop
cmp
inc
and
inc
xchg
cld
scas
out
ds
loopne
lods
gs
outsb
je
xchg
in
pop
decl
mov
cs
fisttpl
movsl
in
aad
adc
lret
mov
xor
mov
adc
sbb
repnz
pop
pusha
rclb
mov
mov
int
or
inc
xchg
les
shll
or
push
loop
mov
dec
mov
push
arpl
adc
pop
mov
xor
cmpsb
adc
add
and
adc
push
insb
and
xchg
jns
xorl
lock
inc
xchg
and
dec
or
jae
adc
mov
jb
adc
das
js
sbb
sbb
adc
aaa
inc
cltd
sub
popa
mov
adc
cmp
sub
adc
mov
pop
cmpsb
stc
or
cmp
nop
and
aam
mov
sbb
ds
loopne
inc
xchg
and
xchg
push
decl
mov
xor
xchg
sub
fisubrl
iret
push
mov
adc
cmp
sub
fildll
shlb
lds
testb
jmp
dec
pushf
das
jle
and
aad
mov
sbb
aas
dec
loope
inc
xchg
and
mov
divps
add
xor
mov
push
int3
pop
scas
rcll
repnz
cwtl
sub
fsubrl
shll
ret
testl
popf
sub
mov
rol
pop
add
push
adc
mov
xchg
and
xlat
mov
stos
std
or
out
add
xor
daa
jbe
fsubrs
int
scas
adc
aaa
inc
cltd
sub
popa
mov
adc
cmp
sub
adc
mov
pop
cmpsb
stc
or
cmp
nop
and
aam
mov
sbb
ds
loopne
inc
xchg
and
xchg
push
decl
mov
xor
xchg
sub
fisubrl
iret
push
mov
adc
cmp
sub
fildll
shlb
lds
testb
jmp
dec
pushf
das
jle
and
aad
mov
sbb
aas
dec
loope
inc
xchg
and
mov
divps
add
xor
mov
push
int3
pop
scas
rcll
repnz
cwtl
sub
fsubrl
shll
ret
testl
popf
sub
mov
jo
shlb
push
test
cmp
sahf
xor
and
xlat
mov
stos
std
or
out
add
xor
daa
jbe
fsubrs
int
scas
adc
aaa
inc
cltd
sub
popa
mov
adc
cmp
sub
adc
mov
pop
cmpsb
stc
or
cmp
nop
and
aam
mov
sbb
ds
loopne
inc
xchg
and
xchg
push
decl
mov
xor
xchg
sub
fisubrl
iret
push
mov
adc
cmp
sub
fildll
shlb
lds
testb
jmp
dec
pushf
das
jle
and
aad
mov
sbb
aas
dec
loope
inc
xchg
and
mov
divps
add
xor
mov
push
int3
pop
scas
rcll
repnz
cwtl
sub
fsubrl
shll
ret
testl
popf
sub
mov
add
add
add
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
call
add
xor
add
incb
add
push
add
adcb
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
and
add
in
add
add
add
and
add
add
add
add
add
add
add
insl
add
push
add
add
add
add
add
add
add
in
add
add
add
add
inc
add
xor
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
push
add
add
cmp
add
lods
or
mov
mov
inc
inc
test
inc
mov
push
cmp
sub
or
nop
gs
jb
xchg
es
and
pushf
xchg
cmc
xchg
pop
mov
je
fs
jecxz
jmp
xor
pop
cmp
jnp
pop
cld
cld
roll
je
jp
xchg
mov
xchg
cwtl
lcall
test
pop
pop
clc
sub
push
mov
dec
insb
mov
cmpsb
mov
mov
mov
mov
jecxz
repz
add
adc
cmp
push
mov
int3
jmp
les
aam
in
hlt
std
add
inc
in
xor
shrb
jnp
sbb
ss
pop
jnp
mov
jmp
or
outsl
sbb
jl
mov
std
or
lcall
fwait
jg
loopne
loop
loop
out
call
outsb
divl
js
jns
jb
pushf
sbb
sbb
fldl
fidivrl
inc
mov
cmpb
fcomip
rclb
aas
mov
jg
iret
cld
sub
ljmp
out
mov
nop
int3
rcl
mov
test
sbb
std
loope
loope
bound
repnz
mov
xchg
adc
ret
cld
or
das
daa
out
arpl
mov
pop
mul
sti
cmc
incl
shl
pop
fisubs
aas
decb
mov
stc
or
gs
mov
bnd
inc
mov
decb
aaa
cld
in
loope
in
outsl
loopne
loopne
loopne
loopne
loopne
cli
mov
das
lock
lock
addb
inc
mov
rclb
aam
rcrl
pop
mov
scas
sarl
mov
popa
lahf
loop
sub
xchg
pop
fstl
scas
fisubl
scas
xchg
jo
out
add
xlat
xchg
mov
fldl
sbb
and
imul
mov
or
mov
outsl
shll
imul
gs
repnz
inc
and
stc
lds
and
mov
leave
push
push
leave
cli
mov
daa
pop
pop
insl
adc
add
xor
fcoml
mov
fidivrl
lcall
inc
push
scas
jne
imul
jg
jnp
jbe
mov
ja
test
fwait
stc
mov
aad
sarl
sbb
shufps
repz
cmp
dec
xchg
rclb
popa
fistpl
mov
out
cmp
sahf
jb
or
adc
mov
xchg
fmuls
leave
ss
cmp
and
lret
sbb
dec
repnz
int3
lcall
inc
pusha
mov
stos
jo
pop
lock
div
cmp
cld
ja
ljmp
push
dec
mov
lea
xor
lret
push
xlat
dec
xchg
dec
in
dec
nop
xor
xchg
mov
or
mov
jecxz
cmp
cmp
insb
stc
cwtl
and
push
in
adc
cmp
pop
fwait
and
mov
in
out
jg
push
cmpl
mov
wrmsr
xchg
movsl
jmp
dec
cli
iret
std
ret
popa
incb
ds
mov
mov
add
jle
xchg
mov
pop
add
ja
out
fcoms
lahf
fldt
popa
and
jecxz
aad
or
aam
push
cld
jg
mov
imul
sub
nop
out
dec
xor
add
stos
gs
scas
outsb
iret
popf
mov
outsl
add
push
in
xchg
mov
sbb
mov
cmpsb
in
loopne
push
mov
in
arpl
aaa
fcoms
aam
out
or
lods
cmp
outsb
mov
push
jmp
mov
sbb
xchg
inc
cmp
stos
ficoms
jp
in
mov
and
cmp
aaa
cs
or
push
and
jbe,pt
mul
push
add
sub
jl
sahf
lret
push
neg
stos
push
hlt
xchg
push
or
xchg
rorl
sub
adc
or
rclb
test
push
add
addr16
add
in
push
adc
jb
cld
jl
push
push
lea
.byte
.byte
ds
add
add
or
xor
add
mov
add
mov
add
add
push
mov
add
add
sbb
add
push
add
xor
add
add
add
cmp
add
inc
mov
add
add
pop
mov
add
add
ja
add
jle
add
push
xor
add
add
adc
add
sbb
add
and
xor
add
xor
add
add
dec
xor
add
add
add
bound
add
push
xor
add
add
add
add
mov
add
add
and
add
xor
add
inc
mov
add
add
add
add
push
mov
add
add
gs
add
add
add
add
add
add
or
add
adc
add
push
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
pop
xor
add
add
add
add
jno
add
jnp
add
add
add
or
add
mov
cmp
mov
cltd
sbb
xor
add
add
and
mov
mov
ss
mov
add
add
mov
cmp
mov
mov
test
mov
add
add
mov
mov
mov
ss
mov
add
add
movsb
aaa
mov
mov
ss
mov
cmp
test
mov
add
add
mov
cmp
mov
add
add
mov
cmp
ss
add
add
es
mov
and
mov
add
add
mov
mov
mov
add
add
mov
cmp
add
add
cmp
mov
cmp
xor
mov
xor
mov
cmp
mov
ss
add
mov
mov
cmp
mov
add
add
xor
ss
mov
mov
add
add
mov
mov
ss
aaa
xor
add
mov
mov
xor
mov
mov
add
add
cmp
cmp
add
cmp
add
add
and
stos
aaa
xor
aaa
xor
mov
mov
cmp
cmp
add
cmp
stos
aaa
mov
add
sub
cmp
mov
cmp
add
xor
aaa
xor
mov
add
sbb
xor
add
add
mov
mov
xor
mov
add
mov
and
add
mov
cmp
mov
mov
sbb
xor
add
add
sub
cmp
mov
add
sub
aaa
movsl
mov
mov
add
mov
mov
movsl
mov
add
ss
sbb
xor
add
add
sub
mov
mov
mov
sub
mov
mov
mov
es
mov
mov
add
add
mov
xor
aaa
xor
mov
add
mov
cmp
mov
cltd
sbb
xor
add
add
stos
cmp
mov
mov
mov
mov
sub
mov
mov
cmp
add
add
test
xor
mov
mov
cmp
add
cmp
aaa
cmp
add
sub
sub
mov
xor
add
add
mov
xor
cmp
cmpsb
mov
mov
mov
mov
mov
mov
mov
cmp
add
mov
xor
mov
mov
cmp
add
cmp
aaa
cmp
add
and
mov
sub
mov
add
add
and
mov
cmp
add
cmp
add
add
mov
cmp
mov
cmp
mov
cltd
sbb
xor
add
add
sub
sub
mov
mov
cmp
add
mov
cmp
ss
mov
cmp
ss
xor
add
add
mov
sub
mov
cmp
add
add
jo
add
inc
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
call
add
xor
add
incb
add
push
add
adcb
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
and
add
in
add
add
add
and
add
add
add
add
add
add
add
insl
add
push
add
add
add
add
add
add
add
in
add
add
add
add
inc
add
xor
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
push
add
add
cmp
add
lods
or
mov
mov
inc
inc
test
inc
mov
push
cmp
sub
or
nop
gs
jb
xchg
es
and
pushf
xchg
cmc
xchg
pop
mov
je
fs
jecxz
jmp
xor
pop
cmp
jnp
pop
cld
cld
roll
je
jp
xchg
mov
xchg
cwtl
lcall
test
pop
pop
clc
sub
push
mov
dec
insb
mov
cmpsb
mov
mov
mov
mov
jecxz
repz
add
adc
cmp
push
mov
int3
jmp
les
aam
in
hlt
std
add
inc
in
xor
shrb
jnp
sbb
ss
pop
jnp
mov
jmp
or
outsl
sbb
jl
mov
std
or
lcall
fwait
jg
loopne
loop
loop
out
call
outsb
divl
js
jns
jb
pushf
sbb
sbb
fldl
fidivrl
inc
mov
cmpb
fcomip
rclb
aas
mov
jg
iret
cld
sub
ljmp
out
mov
nop
int3
rcl
mov
test
sbb
std
loope
loope
bound
repnz
mov
xchg
adc
ret
cld
or
das
daa
out
arpl
mov
pop
mul
sti
cmc
incl
shl
pop
fisubs
aas
decb
mov
stc
or
gs
mov
bnd
inc
mov
decb
aaa
cld
in
loope
in
outsl
loopne
loopne
loopne
loopne
loopne
cli
mov
das
lock
lock
addb
inc
mov
rclb
aam
rcrl
pop
mov
scas
sarl
mov
popa
lahf
loop
sub
xchg
pop
fstl
scas
fisubl
scas
xchg
jo
out
add
xlat
xchg
mov
fldl
sbb
and
imul
mov
or
mov
outsl
shll
imul
gs
repnz
inc
and
stc
lds
and
mov
leave
push
push
leave
cli
mov
daa
pop
pop
insl
adc
add
xor
fcoml
mov
fidivrl
lcall
inc
push
scas
jne
imul
jg
jnp
jbe
mov
ja
test
fwait
stc
mov
aad
sarl
sbb
shufps
repz
cmp
dec
xchg
rclb
popa
fistpl
mov
out
cmp
sahf
jb
or
adc
mov
xchg
fmuls
leave
ss
cmp
and
lret
sbb
dec
repnz
int3
lcall
inc
pusha
mov
stos
jo
pop
lock
div
cmp
cld
ja
ljmp
push
dec
mov
lea
xor
lret
push
xlat
dec
xchg
dec
in
dec
nop
xor
xchg
mov
or
mov
jecxz
cmp
cmp
insb
stc
cwtl
and
push
in
adc
cmp
pop
fwait
and
mov
in
out
jg
push
cmpl
mov
wrmsr
xchg
movsl
jmp
dec
cli
iret
std
ret
popa
incb
ds
mov
mov
add
jle
xchg
mov
pop
add
ja
out
fcoms
lahf
fldt
popa
and
jecxz
aad
or
aam
push
cld
jg
mov
imul
sub
nop
out
dec
xor
add
stos
gs
scas
outsb
iret
popf
mov
outsl
add
push
in
xchg
mov
sbb
mov
cmpsb
in
loopne
push
mov
in
arpl
aaa
fcoms
aam
out
or
lods
cmp
outsb
mov
push
jmp
mov
sbb
xchg
inc
cmp
stos
ficoms
jp
in
mov
and
cmp
aaa
cs
or
push
and
jbe,pt
mul
push
add
sub
jl
sahf
lret
push
neg
stos
push
hlt
xchg
push
or
xchg
rorl
sub
adc
or
rclb
test
push
add
addr16
add
in
push
adc
jb
cld
jl
push
push
lea
mov
hlt
cld
jo
scas
lock
jg
pop
push
shlb
hlt
pop
fs
xor
push
hlt
add
das
mov
das
ss
xor
mov
repnz
jne
shll
testl
push
mov
in
je
push
leave
in
fbld
or
cs
mov
mov
sbb
dec
fiaddl
loop
and
dec
imul
adc
push
sub
adc
jecxz
mov
shlb
jecxz
xchg
inc
inc
push
adc
data16
mov
push
mov
inc
or
es
mov
lret
sbb
rclb
enter
inc
xchg
push
ljmp
push
aaa
inc
jg
mov
jb
cmp
imulb
dec
jbe
jl
mov
xchg
sbb
or
or
jae
lahf
adc
or
or
aaa
loop
ljmp
mov
insb
shl
add
mov
cmp
std
jecxz
mov
cmp
movsl
ficoms
or
test
xchg
push
js
sbb
mov
ret
orb
xchg
adc
xchg
sub
push
xchg
leave
mov
dec
in
and
fnstcw
cmp
fnstcw
insb
push
scas
cld
sahf
in
fisttpl
push
sub
pushf
popa
loop
imul
mov
test
sahf
int3
fsubrs
adc
test
sbb
adc
shl
xor
jecxz
repnz
loop
adc
dec
push
insb
cwtl
sti
mov
or
in
out
add
sti
fisubs
dec
cltd
decb
push
pop
sbb
ret
fadd
adc
jp
fistps
enter
nop
add
loop
cwtl
scas
or
mov
daa
jmp
jl
lock
test
mov
mov
inc
or
test
cld
int
outsl
inc
sbb
stos
cmc
divl
xor
cmp
iret
push
or
pop
xor
and
pop
mov
test
movsl
sub
outsl
ret
pop
xchg
fisubl
lock
xor
in
mov
or
sbb
inc
pop
push
mov
sub
inc
mov
divl
js
bound
insl
cltd
dec
xor
aaa
mov
cmp
ret
xor
push
xor
lcall
pop
xchg
inc
fisubrs
xor
icebp
dec
push
adc
imul
lods
and
mov
loopne
and
mov
and
mov
mov
loopne
xlat
dec
jge
or
push
ds
pop
sbb
jge
daa
dec
jmp
mov
xchg
movsb
pushf
movsb
stos
xor
pop
into
cwtl
mov
push
outsb
fs
inc
inc
scas
push
fs
pusha
cmpb
push
wbinvd
jmp
lret
les
loopne
add
cs
adc
mov
cmp
out
into
roll
cmc
or
add
andl
in
mov
sub
je
jg
sahf
out
sub
mov
pop
int3
xor
int
addr16
pop
outsb
push
cmpsb
push
mov
jecxz
ret
ret
mov
lahf
adc
iret
mov
xchg
sahf
pushf
mov
adc
fdivl
and
fstpl
in
adc
hlt
cmp
or
or
movsb
jnp
cmp
outsl
lods
cli
xor
pop
mov
lcall
ficoml
fisttpl
or
or
push
mov
cmc
addb
jmp
in
addb
mov
mov
insl
shrl
lcall
push
loopne
pusha
stos
dec
out
push
cmp
add
lods
dec
ficomps
mov
or
arpl
ds
pop
out
popf
popf
aad
xor
loop
dec
add
push
inc
lahf
jecxz
xlat
xchg
mov
or
loopne
mov
jecxz
cld
cmp
loop
sar
inc
mov
mov
shl
movsl
cmp
push
cli
pop
ss
cmp
mov
inc
lret
lret
dec
mov
scas
out
jns
mov
adc
hlt
cmp
cltd
push
repz
pop
dec
pop
lods
lds
rorl
mov
add
mov
fs
push
out
pop
xchg
ficoml
arpl
cmp
cmpsb
rclb
adc
cmpsl
lret
sub
jp,pt
cmpsb
inc
or
cmc
pop
and
jge
test
movsl
sub
xorl
fcoms
xchg
cmpsl
mov
jg
movsl
fs
popa
push
pop
out
mov
test
adc
lods
out
mov
aas
xor
sbb
and
add
lods
cmp
sub
and
std
aaa
adc
and
inc
mov
test
nop
sub
mov
orb
push
cmp
addr16
inc
push
je
imul
mov
in
dec
out
cmp
cmp
sbb
arpl
xlat
or
fstl
push
inc
loope
fs
repz
mov
in
stc
pop
fistl
int3
jns
cmc
dec
sbb
js
fwait
sti
add
push
xchg
cmp
in
sti
aaa
mov
loope
stc
pop
jle
imul
push
sub
adc
arpl
pop
insl
loope
pusha
loop
repz
jp
in
dec
lock
out
pushl
or
pop
push
fidivs
int3
inc
dec
shrb
cmp
nop
inc
add
pop
adc
add
pop
push
sbb
inc
sub
or
negb
sub
int3
jle
mov
jne
shr
jns
jns
testb
mov
mov
mov
push
dec
push
mov
push
adc
test
add
xchg
mov
push
jecxz
bound
pusha
mov
inc
cltd
das
push
cmp
inc
and
mov
dec
and
cmpsl
xchg
cltd
loope
cli
negl
push
ret
inc
daa
xor
loop
stc
and
divps
fiadds
dec
cs
in
push
pop
fisttpll
pushf
mov
fcompl
call
sub
or
ljmp
jmp
imul
stos
gs
mov
cmpsb
and
stos
rcrl
mov
and
and
and
mov
mov
pop
and
pop
dec
cmpsl
cmpsb
and
lret
jl
push
and
push
sbb
cmpl
jg
dec
jo
inc
fdivrs
sub
sarl
popf
sarb
or
adc
negl
nop
cli
adc
mov
repnz
ja
bound
dec
scas
cmc
pop
insb
pop
sub
das
lock
mov
mov
std
xor
gs
or
orl
imul
mov
imul
push
mov
push
shll
pop
iret
sub
mov
imul
jg
mov
push
inc
inc
pop
sub
mov
int
dec
data16
xor
cmp
jns
jae
jb
imul
and
inc
int3
cli
hlt
les
ds
fucomp
sub
mov
xor
sub
mov
cs
mov
lods
add
rolb
cmp
sub
out
sbb
mov
dec
sbb
sbb
shl
jmp
and
fnstenv
call
fucomi
in
jle
sub
mov
jmp
adc
push
fucomp
shr
leave
push
aam
loopne
mov
mov
xor
inc
std
push
loopne
repz
sub
negl
pop
test
insl
fstps
xor
inc
lods
sbb
loopne
inc
mov
inc
enter
pop
and
jg
fwait
mov
stos
xchg
or
pop
loopne
pop
jbe
mov
stos
mov
sarb
shrb
add
iret
fadds
dec
ds
sbbb
add
inc
shll
popf
or
push
xchg
xor
repz
sbb
vmovq
jno
add
dec
sub
incl
inc
int
cld
pop
lcall
ds
imul
cmp
or
sbb
imul
lahf
sub
and
enter
pop
add
scas
arpl
or
jle
dec
daa
push
cmc
clc
nop
sub
and
subb
sub
jle
mov
ja
mov
xchg
repnz
repz
stos
aad
in
int3
sub
cs
adc
cmpsb
sbb
or
stos
daa
sub
sbb
mov
fmul
xchg
mov
xchg
pusha
dec
fisubrs
test
mov
dec
test
rcr
mov
sbbb
push
push
sbb
jg
xchg
pop
ja
sbbl
sub
pop
push
inc
jno
add
les
arpl
pop
out
pop
dec
daa
scas
in
push
out
jmp
jbe
xlat
mov
aad
out
in
loope
fisttpll
adc
mov
mov
adc
scas
cli
neg
jo
xchg
repnz
xor
xchg
fwait
inc
or
.byte
.byte
cltd
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
call
add
xor
add
incb
add
push
add
adcb
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
and
add
in
add
add
add
and
add
add
add
add
add
add
add
insl
add
push
add
add
add
add
add
add
add
in
add
add
add
add
inc
add
xor
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
push
add
add
movsb
xor
cmp
cli
inc
inc
inc
inc
inc
dec
dec
or
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
ficoml
repnz
mov
stos
lods
mov
pop
mov
bound
mov
mov
ret
mov
lret
int
int
rcl
rcl
aad
xlat
fcomp
loopne
loop
out
out
call
in
in
out
lock
repnz
mul
clc
stc
cli
sti
in
std
out
xor
xor
ss
sub
cmp
cmp
ds
inc
inc
inc
inc
dec
pop
inc
inc
mov
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
aam
fdivrs
xor
enter
int3
gs
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
mov
test
jl
out
out
lock
repz
std
div
clc
push
cli
sti
cld
std
pushl
xor
sbb
cmp
adc
cmp
inc
inc
inc
ja
dec
dec
or
dec
pop
push
push
push
loope
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
and
and
or
insl
outsb
jg
jno
add
jbe
js
jp
jl
jle
addb
xchg
int
nop
xchg
xchg
xchg
xchg
xchg
mov
push
push
push
push
push
insb
insl
outsb
outsl
push
gs
popa
bound
jge
jg
jns
jnp
jne
ja
jno
jae
or
adc
mov
fbstp
dec
shr
xor
rclb
es
repnz
push
push
in
sub
sti
xor
aam
inc
popa
shrl
outsl
scas
ljmp
mov
jbe
loopne
xor
notb
jp
jb
je
dec
mov
jno
inc
sbb
mov
sbb
outsb
insl
insb
pop
and
ret
push
push
jns
jge
popa
dec
dec
dec
inc
inc
aaa
jg
mov
mov
push
test
mov
push
mov
pop
mov
pop
mov
fdivl
lds
or
loopne
cwtl
inc
imul
jns
sahf
jl
push
xor
mov
jbe
imul
lds
shrl
mov
loopne
jae
iret
ret
test
jle
rcll
int
test
dec
cmp
sub
xchg
add
mov
sub
jl
sub
jno
outsl
and
dec
pop
mov
xchg
insb
dec
push
in
das
lcall
xor
cmp
sbb
sbb
imul
jmp
stc
not
jb
dec
sti
pop
jmp
jl
mov
sbb
sub
pop
sub
cmp
xchg
cmp
cmp
outsl
dec
sub
sub
in
xlat
mov
sbb
adc
popf
jnp
in
data16
add
jp
in
push
push
hlt
sbb
sbb
es
sub
es
cmp
sub
inc
ffree
jle
sbb
in
out
dec
cwtl
out
mov
mov
pushl
jmp
in
loop
adc
xchg
shlb
in
pop
xchg
icebp
ljmp
jns
jbe
jl
out
js,pt
cmp
adc
fimuls
adc
pusha
js
shlb
pop
into
insl
ja
mov
mov
shlb
int3
pop
ficoml
sbbl
std
mov
add
movsb
inc
out
popl
mov
dec
sbb
das
out
ret
jl
jg
mov
fstpl
pusha
sub
push
cli
lds
hlt
adc
jge
sbb
push
pop
jns
sbb
add
or
sarb
xor
cld
xor
inc
add
dec
sbb
cmp
sbb
fadd
inc
mov
add
sbb
and
test
in
ds
xor
mov
pop
sahf
sub
sti
leave
jle
inc
xchg
dec
sbb
sub
pop
or
cmp
sbb
movsb
lahf
pop
movsb
enter
repnz
adc
test
in
std
fdivr
movb
enter
pop
jbe
and
inc
mov
cmp
cmpb
xchg
fwait
push
lock
fucomip
mov
dec
dec
mov
enter
arpl
mov
outsl
adc
mov
xor
adc
loopne
mov
inc
cmp
mov
pusha
pop
adc
in
and
fnsave
popf
fisttps
movsb
jg
addl
mov
sub
enter
fldcw
mov
pop
rol
arpl
xor
or
lock
idivb
push
pop
inc
cli
jp
dec
out
pop
pop
fisubl
rcll
fldl
fstl
inc
lahf
mov
mov
or
mov
sbb
in
push
mov
sub
fwait
outsb
and
ja
jge
mov
lcall
mov
or
add
jae
sub
outsl
xor
test
sbb
bound
jge
mov
adc
outsl
ret
movl
sbb
cmp
js
push
push
test
or
mov
push
aad
sub
push
mov
xchg
pop
test
sub
adc
xchg
in
lods
cmp
inc
pop
lahf
loop
fsts
sub
negl
repnz
and
sub
add
pop
jp
add
mov
js
imul
mov
lods
stos
mov
mov
push
ss
and
or
add
xchg
inc
mov
mov
clc
rcll
mov
and
lcall
data16
dec
push
jno
add
or
lret
dec
iretw
sbb
add
ljmp
aas
in
jmp
sbb
cmpsb
rcrl
ds
sub
inc
push
sub
cmp
inc
pop
xor
mov
pop
jmp
add
xchg
push
mov
mov
test
scas
push
pop
jno
mov
out
ja
leave
adc
test
mov
inc
in
jae
fcmovne
push
mov
scas
dec
cmp
or
cwtl
sbb
push
push
mov
ret
sbb
mov
loope
mov
enter
and
nop
xchg
test
fstp
pop
aas
int3
lret
aam
ss
jae
mov
mov
pop
dec
dec
mov
mov
mov
mov
xchg
xchg
cmpsb
xchg
mov
stos
les
test
xchg
test
out
push
mov
dec
dec
dec
push
pushf
lock
inc
push
push
and
sbb
and
and
lcall
and
fldt
sub
push
pop
adc
in
out
mov
adc
sub
testl
mov
adc
add
nop
gs
sub
push
clc
cld
call
not
shl
iret
mov
lods
insb
in
ljmp
sar
leave
jecxz
cli
clc
idiv
cmc
mov
lret
ja
in
lcall
test
pop
sub
cltd
nop
mov
imul
stos
mov
in
xchg
call
add
or
jne
jo
je
lcall
xchg
movsl
imul
cmc
push
mov
outsb
es
and
push
pop
sub
adc
iret
pushf
jns
pop
mov
sub
xor
fiaddl
or
or
fimuls
aaa
xor
outsl
lea
mov
mov
test
cmpsl
add
mov
fs
outsl
cli
in
aam
push
cli
mov
jo
ja
jl
push
dec
in
dec
faddl
int3
dec
push
adcb
sbb
orl
xchg
cli
testl
lock
repnz
std
jecxz,pt
out
in
adc
xor
cmp
push
xlat
sub
pop
sti
sub
cwtl
js
cmc
xlat
mov
dec
stos
stos
addr16
cwtl
dec
xor
fldl
mov
hlt
mov
add
lea
mov
push
outsl
jno
pop
in
test
insb
std
push
fsts
out
repz
lods
sti
cld
xchg
jle
xlat
mov
bound
into
jle
rcrb
dec
jno
mov
ret
dec
pushf
mov
daa
sub
sub
lahf
sahf
outsl
pop
add
stc
pop
push
push
pop
pop
push
push
push
inc
pop
inc
sbb
push
dec
dec
mov
sbb
mov
notb
stc
sbb
pop
inc
mov
lods
std
fbld
or
or
inc
in
jge
lahf
mov
jbe
jl
fadd
out
stos
xor
inc
rorb
push
mov
mov
rorb
or
and
and
mov
ds
dec
push
loop
xchg
fld
mov
jo
mov
in
pop
jae
subb
andb
sub
xchg
imul
sbb
mov
movsl
rcrb
mov
pushf
std
and
xchg
das
or
std
xor
or
dec
adc
jmp
in
jmp
fcmovnu
leave
fnstenv
enter
push
shlb
dec
push
int3
ror
rol
in
lret
div
cli
call
loope
ljmp
jmp
push
or
mov
aam
inc
fisubrl
cmp
nop
mov
test
test
mov
mov
xor
cmp
mov
cmpsb
enter
aaa
ljmp
popa
mov
cmc
jp
jp
sbb
pushf
add
add
sub
push
ret
fcmovnu
nop
xchg
imul
addb
and
sbb
adc
mov
and
pop
pop
add
ds
add
adc
sbb
call
jecxz
loope
mov
fcmovnb
loope
sar
cld
dec
aaa
push
pop
pop
cmc
sbb
loope
out
out
lock
jge
mov
cmc
aam
rol
fsubr
aad
repz
loope
lahf
xchg
adc
movsb
xchg
test
pop
xchg
scas
xchg
das
fdivl
test
mov
fcompl
aas
test
fisubl
xchg
xor
adc
pushf
lea
popl
repz
stc
add
jge
pop
imul
cmp
sbb
cmp
jo
mov
or
push
cmpsl
mov
ror
xor
and
rclb
xchg
in
out
dec
add
xor
aas
ljmp
mov
add
sbb
cmp
sbb
cmc
jle
push
popa
outsb
out
loopne
mov
ljmp
mov
ret
adc
xor
xlat
rcl
fsubr
fcmovnbe
rcrb
push
or
xor
cmp
cld
adcb
mov
gs
mov
mov
cmp
pop
scas
arpl
arpl
xchg
popf
mov
push
fbstp
popf
mov
mov
nop
lods
pop
roll
sbb
push
pop
ficompl
push
rcrl
vcvttsd2si
xchg
xchg
in
outsl
and
cmp
and
cs
sub
sub
ds
push
popa
push
out
push
xchg
icebp
std
roll
add
sar
jb
add
cmc
in
pop
in
loope
loop
fcomps
dec
loop
stc
out
jp
shll
faddp
cmc
std
jl
repz
add
stc
rcl
push
loop
int
repnz
arpl
arpl
lea
cs
xor
inc
test
out
mov
mov
push
mov
test
test
push
inc
or
mov
sbb
sbb
fiadds
js
popa
pop
popa
pop
pop
cmpsl
movsb
xchg
cmp
stos
pop
and
daa
xor
xor
xor
cmp
int3
imul
mov
or
sbb
jo
or
and
or
or
or
pop
leave
adc
insb
into
in
neg
icebp
sub
lock
mov
scas
dec
cmp
inc
mov
fldt
adcl
mov
rcrb
rcr
addl
stc
lret
xorl
mov
and
xchg
test
mov
or
xchg
mov
add
mov
pusha
aas
mov
sub
movsl
stos
adc
bound
gs
fldcw
inc
mov
rorl
sub
jo
bound
adc
bound
dec
cmp
add
jnp
adc
cmp
xor
lea
cmp
mov
xchg
es
xor
add
xor
push
and
out
jmp
pop
fisttps
dec
out
scas
iret
lret
shlb
xor
push
cmc
in
in
hlt
loopne
cld
dec
cli
and
dec
dec
loope
std
les
in
sbb
mov
mov
mov
sbb
sub
mov
sbbb
pop
xchg
push
xchg
nop
xchg
adc
adc
add
dec
mov
add
fisttpll
xchg
push
add
mov
fdivrl
ljmp
gs
sub
mov
es
mov
cmp
xor
add
push
dec
pop
aaa
adc
or
stos
ja
push
xor
aas
and
cmpsl
sbb
ret
aaa
in
je
pushf
cmp
dec
fs
in
dec
in
aaa
cld
inc
clc
adc
aaa
std
iret
xor
ret
test
add
out
push
out
push
cld
and
lcall
push
mov
fcomps
and
hlt
add
xchg
lret
or
pushf
stos
mov
sub
jae
mov
xor
movsl
xor
fsts
mov
pop
adc
pop
sub
out
xchg
mov
inc
in
ljmp
inc
divl
rclb
xor
pop
shlb
add
fdivrs
sub
add
xchg
hlt
lret
sbb
and
fcom
movsl
out
pop
adc
mov
mov
in
loop
jae
nop
adc
mov
adc
repz
sar
adc
ljmp
mov
idivl
movl
adc
call
int3
or
sbb
mov
xor
filds
xchg
adc
mov
cmp
roll
sbb
stos
xchg
mov
adc
shlb
dec
pushf
sub
insb
xor
insl
pop
shlb
dec
test
push
push
add
mov
dec
adc
add
popf
fsubrl
push
scas
adc
push
leave
pushf
ss
out
pusha
cmp
shrb
int
mov
mov
push
ss
and
and
fnstcw
mov
idivb
iret
rol
fcmovne
int3
enter
jecxz
jp
shrb
xor
xchg
adc
nop
sbb
daa
dec
jno
mov
cwtl
fcomi
into
lods
sub
adc
daa
adc
jl
jg
andl
jns
or
cmp
outsl
cltd
xchg
cmc
push
test
ss
nop
mov
lcall
aad
inc
ja
repnz
jnp
and
sub
push
sub
push
cmp
mov
xchg
jl
bnd
cmp
mov
cmpsb
mov
sahf
xor
lret
mov
adc
fsub
stos
bound
rcr
fsubs
mov
push
stc
jmp
adc
shlb
ljmp
inc
inc
lret
xchg
sub
jecxz
sub
cmp
enter
push
out
ret
popa
data16
cmpsl
add
adc
int
mov
lods
inc
adc
pop
pop
popf
inc
stos
lcall
push
add
popa
in
imul
popf
lcall
mov
movsb
sub
mov
pop
das
insb
lods
cmc
push
out
fcomp
sbb
inc
dec
dec
inc
cmp
or
cltd
lcall
dec
inc
stos
int
fstpt
dec
push
or
aas
cmp
mov
cmp
cmp
addr16
xor
inc
adc
inc
mov
popl
push
push
push
pop
jmp
adc
fmull
cwtl
mov
shr
cmc
loop
cmp
call
rol
sbb
mov
adc
jae
fcmovu
adc
fucomi
or
repz
cmpsl
sahf
test
push
or
out
xchg
cltd
xchg
xor
insl
xlat
xor
mov
addr16
push
std
into
xchg
in
sbb
adc
lcall
dec
mov
mov
ret
mov
or
pop
pop
mov
lcall
mov
mov
xchg
cmp
add
lods
mov
adc
xor
sub
mov
push
and
cmp
adc
cmp
xchg
movsb
js
stos
addb
stc
ss
cmpsl
mov
xchg
mov
jnp
loopne
loopne
mov
pop
movsb
aam
pop
repnz
outsb
js
out
and
daa
lahf
into
test
xlat
aad
fsubr
mov
push
dec
fwait
mov
sbb
out
negb
std
lods
sti
lret
fs
dec
shrl
je
mov
cmp
xor
lods
xor
and
jb
and
stc
push
cmpsb
or
pcmpeqw
loopne
xor
pop
xchg
in
jns
lcall
daa
aam
and
xor
mov
and
add
sub
add
xor
sub
inc
xchg
mov
mov
inc
aad
jp
push
out
cmp
sbb
jmp
roll
pushl
cld
repnz
aam
movsl
leave
ror
aad
jmp
cmpsl
inc
je
clc
rol
fld
or
repz
push
sbb
loop
inc
xchg
mov
jbe
cmp
cmc
loope
xorl
dec
setl
mov
mov
test
mov
pop
jno
mov
mov
and
fldt
jl
mov
pop
cs
insl
enter
or
outsb
and
adc
mov
mov
dec
adc
or
inc
mov
stos
or
out
lock
adc
nop
mov
push
pop
fcmovnu
shl
out
lock
cli
repnz
or
lahf
adc
insl
push
mov
inc
cmpsl
sti
das
into
int
sub
mov
and
xchg
push
cmp
pop
dec
shl
jmp
rcrb
shl
in
rolb
pushf
adcb
jle
mov
push
enter
fdivl
scas
mov
int
sbb
mov
mov
jmp
or
popa
bound
sbb
pop
cwtl
sbb
xor
and
fnsave
jle
pop
cli
xchg
adc
or
inc
push
das
je
jge
jns
das
mov
push
cmp
sbb
mov
push
in
ficomps
mov
xchg
pop
outsl
inc
mov
lock
out
adc
leave
jge
sbb
std
sub
imul
loop
xchg
xchg
in
repz
cwtl
cwtl
cwtl
test
aaa
repz
bswap
lret
rol
sbb
mov
dec
jle
rcrl
add
or
jmp
jg
nop
cs
fs
sub
bound
xchg
shlb
dec
jp
add
xchg
dec
fstpl
cs
ljmp
into
scas
dec
pop
pushf
adc
inc
inc
scas
lds
cmp
shlb
or
mov
mov
aas
sub
cmp
test
andb
mov
lock
pop
push
jp
pop
or
aam
push
sbb
les
mov
xor
test
push
in
xchg
xchg
push
and
push
pusha
pusha
popa
stc
hlt
out
cmp
cld
sti
mov
mov
orl
lods
lret
xchg
mov
dec
adc
pop
dec
mov
nop
out
les
pop
adc
cmp
pop
mov
mov
fldt
fsts
fst
flds
fnstcw
fstl
sbb
ljmp
cs
ds
xor
ret
sub
scas
cmp
pop
cwtl
push
cmp
addl
outsl
and
popa
jge
jp
or
push
jl
cmp
lea
jae
cmp
cmpsl
jne
prefetch
or
out
clc
or
and
sti
enter
ljmp
mov
filds
in
sbb
fistpll
xchg
and
icebp
ljmp
xchg
loop
cmpsl
stos
aam
std
sub
rep
lods
xchg
das
les
repnz
mov
out
mov
sbb
cmp
cmp
jo
movsl
jp
inc
leave
xchg
shl
hlt
mov
and
mov
lret
mov
addl
inc
imul
pop
adc
push
adc
mov
inc
or
jnp
scas
push
sub
sub
mov
mov
pop
movsl
mov
mov
orb
jmp
incl
adc
out
dec
sbb
in
mov
cmc
popf
jne
jge
cld
mov
shl
jmp
call
and
cltd
aad
iretw
aaa
jg
cmpsl
and
fidivs
lret
jns
mov
stos
mov
xchg
pop
xor
mov
and
movsb
scas
jl
push
dec
test
out
call
loopne
xchg
gs
test
add
adc
ljmp
or
in
std
push
mov
xchg
into
push
test
lods
cmpsb
mov
test
fwait
out
fistl
cmp
imul
lsl
mov
ja
adc
cmp
not
das
inc
js
xor
int3
adc
lods
pop
pop
in
into
loop
mov
cmc
popf
sti
mov
les
inc
imul
mov
cmpsb
scas
aam
es
cmc
in
dec
dec
inc
loope
jne
jmp
out
mov
decl
imul
cmp
mov
sbb
test
mov
mov
mov
xor
pop
pop
pushf
nop
loopne
test
faddp
lret
sarl
and
push
xchg
mov
out
out
aad
loopne
pop
lahf
aas
jmp
mov
sbbb
or
loope
inc
adc
fs
cld
mov
mov
imul
pop
rclb
push
loopne
mov
mov
dec
call
call
out
inc
cli
into
push
lahf
movsb
rcll
pop
mov
add
hlt
xor
jbe
mov
scas
mov
lea
adc
fdivrl
lret
fistpll
dec
fcmovnbe
push
out
sar
dec
pushf
pop
mov
or
push
rorb
andb
repnz
pop
or
test
pop
mov
popa
repnz
les
out
jg
daa
fwait
lea
imul
rcrb
mov
push
pop
fs
cmp
sbb
xchg
adc
or
xor
ja
addr16
das
dec
rcr
int3
pop
mov
loopne
and
add
dec
mov
and
cltd
cli
inc
inc
xchg
xchg
out
jb
mov
mov
cmp
mov
mov
mov
xchg
scas
xchg
sub
popa
pop
lret
iret
sahf
xchg
int3
xor
cltd
data16
cmc
shrb
stos
or
xchg
cmpb
leave
jp
ljmp
int3
les
repnz
gs
jmp
loopne
pop
rcl
or
add
add
or
adc
mov
cmpsb
xor
aam
mov
push
int
or
adc
sbb
xlat
movsl
jae
insl
jle
pushw
testl
imul
mov
and
ret
mov
stos
ficomps
pop
or
pop
in
push
ja
or
imul
push
lret
jecxz
xchg
sbb
add
insb
outsl
shll
add
cli
push
adc
cwtl
cltd
notb
inc
xchg
push
add
sbb
cwtl
jno
sbbl
fistl
or
nop
pop
dec
int3
or
cmp
mov
clc
leave
mov
inc
inc
cmpb
push
clc
push
dec
mov
in
pop
pop
cmp
mov
dec
inc
insb
push
fldt
cmp
and
and
or
shll
cltd
mov
lret
das
ret
mov
push
inc
shlb
test
out
ffree
js
pop
jno
jb
cmpsb
lods
jg
jns
rcrb
sbb
sbb
mov
xchg
xchg
lahf
xchg
es
pop
stc
mov
inc
incb
mov
in
add
mov
mov
mov
mov
ss
cld
jecxz
nop
imul
movsb
mov
mov
xchg
jb
cltd
dec
xor
jg
in
call
dec
inc
dec
mov
loope
cmc
add
orl
mov
adc
add
pushf
orl
test
sbb
loopne
cmp
sahf
xchg
cmp
cmc
sub
xlat
inc
push
cmp
aaa
pop
shll
aaa
pop
lock
sbb
jmp
in
out
in
aad
xchg
in
lock
lds
sti
and
popf
popf
pop
insl
push
aad
xchg
xchg
jns
mov
xchg
mulb
jno
aas
mov
js
shrb
dec
mov
jle
sbb
daa
mov
push
jae
pop
mov
mov
adc
ror
adc
pop
bound
rorb
mov
lret
or
lcall
xor
xchg
int
add
rep
lock
cld
inc
pop
push
adc
mov
lds
lods
pop
ss
lret
push
and
repz
or
xor
mov
sub
rep
adc
xor
outsb
jge
jl
es
adc
outsb
push
popf
gs
jbe
popa
jbe
or
insl
xor
inc
inc
sti
sahf
mov
and
xor
cwtl
ds
push
stos
push
pusha
cmpsl
dec
pop
pop
pop
or
push
mov
int
inc
sti
rcrb
rcl
outsl
lret
insl
test
or
sub
in
pop
cmp
decb
cmc
jge
addl
jnp
sub
sub
push
outsl
push
insl
jmp
outsl
sub
inc
push
nop
jp
sbb
or
pop
data16
aas
lret
xor
arpl
gs
les
dec
outsl
js
cmp
aas
repz
les
mov
lods
mov
cmp
jl
sub
neg
rcrb
adc
pop
test
cmpsb
loope
dec
inc
cmp
sub
dec
cli
bound
inc
pop
int3
push
inc
les
test
sbb
xchg
inc
push
lock
push
ds
mov
or
jo
out
xor
cld
dec
test
adc
inc
dec
sti
jge
mov
cmp
jg
cmp
mov
jae
movb
jg
rdtsc
jge
dec
lret
aaa
jl
dec
sbb
jecxz
int
outsl
scas
jp
int
fimull
cli
xlat
jae
inc
sahf
sbb
leave
insb
mov
mov
add
xor
roll
push
mov
int3
ljmp
orb
cs
popa
arpl
mov
push
jmp
lds
fmull
negb
aad
cmc
roll
pop
stos
aaa
mov
xor
jae
pop
hlt
repz
js
lret
dec
mov
test
sub
cmp
jmp
test
pop
nop
cmp
pop
fidivs
test
mov
fs
dec
sub
mov
adc
cmpsb
jl
cmpsl
xchg
mov
sub
int3
scas
jo
lea
xlat
mov
adc
jl
mov
adc
add
xor
repnz
dec
mov
out
push
stos
stos
push
or
lock
mov
mov
fisubl
add
xlat
xchg
sbb
aas
test
cltd
ret
mov
xchg
out
mov
bound
test
xchg
pop
test
xchg
mov
mov
out
fcompl
jb
test
xchg
sbb
popf
or
aas
lcall
push
or
push
fadds
into
lds
add
push
fwait
add
add
mov
sbb
push
js
inc
loopne
ret
push
lds
mov
jo
and
scas
push
or
push
xchg
sub
sub
loope
dec
jle
cltd
imul
inc
xchg
dec
jle
mov
xor
loop
mov
shl
adc
mov
hlt
cwtl
or
cmpsl
pop
fldcw
fwait
or
pop
pop
jne
loopne
and
inc
in
and
push
shll
inc
dec
imul
mov
xchg
jns
roll
lahf
xor
add
and
add
jo
jnp
pop
bound
cmp
mov
das
iret
lods
out
fnstsw
xchg
pusha
js
pop
ss
jnp
test
mov
or
popf
cmpsb
push
in
add
push
inc
add
call
xchg
lret
xor
and
jno
push
leave
mov
icebp
aam
lret
cmp
mov
js
xor
jmp
and
dec
sbb
ret
push
int
mov
fimull
jl
push
leave
cmp
and
rorl
push
sbb
inc
inc
inc
test
and
mov
push
cmp
push
pushf
sbb
mov
aas
js
fs
jne
jg
inc
push
movsb
sbb
pop
fimull
push
ja
pop
add
lock
lods
sbb
push
add
fisubl
cmc
orl
popa
adc
cwtl
dec
js
or
sub
add
bound
cmp
filds
sub
test
cltd
xor
cmpsb
rcr
push
jl
scas
aaa
insb
sahf
dec
push
mov
fwait
rcrb
jo
pop
ret
scas
jl
sbb
jae
sbb
pop
cmpsb
sub
cmp
pop
add
shll
lcall
repz
mov
mov
lea
or
xchg
jbe
aad
push
adc
xor
pmuludq
je
fisubrl
ror
and
push
mov
push
and
mov
xlat
jb
jecxz
mov
push
or
les
inc
inc
loope
hlt
pop
cs
idivb
mov
test
add
inc
xchg
sub
cltd
jle
mov
hlt
dec
stc
scas
push
out
lahf
das
ret
nop
fildl
xchg
notl
jnp
mov
inc
mov
jmp
ja
loop
dec
inc
jle
clc
stos
gs
ret
cld
cmp
ret
push
fistl
cltd
shrl
sbb
fs
or
mov
icebp
mov
mov
mov
or
add
adc
lret
inc
in
shrb
add
daa
add
loopne
adc
fucomip
idivl
rclb
rep
push
cs
adc
ja
adc
das
fucom
imul
nop
cmpsl
ds
inc
add
mov
ds
test
repz
fwait
sbb
cld
mov
loope
loope
dec
out
xchg
sti
popa
ja
or
mov
jecxz
lea
ud0
pop
out
pop
lahf
in
adc
jnp
sahf
aaa
test
mov
and
shll
int
adc
jno
ret
mov
sarb
dec
inc
cmp
jae
ss
inc
sbb
or
std
fdivrl
ja
sub
popa
inc
xchg
das
inc
cs
xchg
and
inc
mov
es
dec
push
fsubrs
cmp
or
mov
js
movsb
jne
jne
ljmp
sub
sub
xchg
inc
dec
ret
push
xchg
pushf
mov
sub
mov
ljmp
out
dec
dec
xchg
jmp
mov
aas
cld
push
mov
je
ret
movsb
jae
mov
mov
fucomp
filds
insl
jnp
pop
adc
es
fisubrs
mov
pop
aad
inc
push
mov
sbb
inc
std
popf
call
jp
add
insb
cltd
andb
rcrl
mov
fiadds
int3
arpl
test
and
call
je
loop
pop
mov
push
js
or
popa
inc
jnp
mov
push
out
mov
mov
pop
mov
lds
pushf
jae
dec
fwait
fs
sbb
push
lea
insb
fisubrs
dec
mov
call
icebp
pusha
mov
sbb
int3
imul
in
inc
lods
mov
jnp
cli
inc
lret
repz
divl
mov
xchg
xchg
or
ja
xchg
push
jl
data16
mov
mov
fistpl
fiadds
ja
dec
aas
rcrb
out
aad
inc
cmpsb
aas
inc
mov
sub
mov
scas
test
and
gs
inc
push
btr
dec
push
lock
hlt
cmpsb
int3
cmp
pusha
push
or
mov
cmp
xor
outsb
nop
cmc
arpl
inc
push
and
std
inc
and
in
pop
daa
adc
jae
lcall
popf
outsb
mov
mov
sbb
cli
or
add
js
out
ds
mov
push
xchg
cmp
cmp
js
jbe
data16
sub
push
adcl
jg,pt
push
pop
jl
jns
push
cs
xor
mov
ds
and
xchg
mov
cmp
sti
pop
aas
lds
xor
cmp
mov
jp
adc
in
xchg
xor
out
mov
lahf
xchg
and
adc
jo
into
jmp
popa
push
cmp
icebp
lods
imull
pop
mov
repz
stos
xchg
in
rolb
out
xor
lcall
push
les
outsb
mov
and
dec
or
insl
jmp
pop
adc
ljmp
andl
mov
test
mov
cmp
dec
sbb
jo
xlat
sub
loopne
data16
sub
icebp
cmpb
rclb
jp
xor
jne
xchg
mov
out
xor
repz
mov
out
mov
out
lea
test
loope
push
dec
arpl
rclb
mov
insl
popf
test
dec
jne
insb
cmpsb
je
stos
testl
test
icebp
mov
pushf
push
xorb
xor
lds
mov
arpl
mov
xchg
mov
push
cwtl
xchg
data16
inc
sahf
mov
pop
sub
mov
mov
sub
xor
leave
push
inc
sub
inc
add
lods
sub
mov
pop
sarl
add
dec
xchg
jecxz
mov
int
test
test
sti
out
fisubrl
imul
in
das
loopne
sbb
cmp
dec
cmp
inc
mov
jbe
das
mov
inc
adc
lock
mov
jge
nop
push
ss
push
js
fiaddl
jmp
add
aam
cwtl
mov
sahf
push
mov
and
add
pop
xchg
mov
jb
subl
popf
fwait
mov
xchg
jmp
popf
sahf
mov
or
pop
addr16
pop
mov
punpckhwd
pop
rclb
adc
jne
mov
or
ja
cmp
fs
sbb
testl
call
cltd
test
outsb
xchg
lods
popf
push
imul
add
xlat
repz
push
test
mov
pop
inc
mov
xor
mov
inc
ret
sbb
and
and
sbb
sub
in
fmuls
jns
dec
jp
mov
push
pushf
movsb
mov
addb
fwait
scas
pop
idivl
mov
xor
inc
popl
fcmovnu
cmpsb
pushf
rcll
mov
jg
lds
clc
int
fs
cs
scas
jnp
or
movsb
mov
fcompl
jl
ret
imul
xchg
pop
cmpl
pop
ret
jns
rclb
out
ss
scas
cwtl
mov
add
ja
test
les
add
push
outsb
outsl
cmp
in
inc
and
movb
cmp
clc
xlat
add
push
out
sub
movsb
pop
add
add
mov
sub
in
cmp
sub
aam
xor
lea
data16
imul
xchg
and
xchg
xor
and
lea
fldenv
mov
gs
pop
sbb
jae
push
mov
stos
xor
mov
mov
pop
cmp
xchg
mov
and
jno
push
sti
pop
shlb
dec
mov
mov
bound
mov
push
sti
aas
ja
sbb
bound
mov
adc
into
repz
loopne
adc
aad
xor
js
or
aad
loope
shr
pop
cmc
cwtl
lods
jae
dec
xchg
sbb
mov
fcmovne
and
cmp
insl
jae
xchg
sub
sahf
add
imul
or
ja
xchg
dec
mov
pop
cltd
dec
fs
dec
adc
fwait
insl
sbb
test
and
pop
inc
mov
dec
dec
loop
jg
dec
and
sub
cmpsb
int
outsl
or
js
aas
mov
push
scas
mov
inc
push
inc
mov
fisttpll
in
cmc
cmp
outsl
jnp
jo
out
jg
jae
or
divl
aaa
or
lock
push
push
pop
loope
icebp
push
xchg
pop
sub
pop
sbb
dec
xor
xchg
inc
mov
pop
mov
js
and
inc
mov
cmp
subb
repnz
mov
incb
repz
dec
xchg
or
mov
incb
jns
jp
add
pop
mov
cmpsb
xchg
imul
arpl
inc
stos
xorb
jnp
lods
jl
ss
ljmp
pop
shrb
pop
push
pop
mov
out
dec
fldenv
xchg
lods
or
jb
xchg
fistps
jmp
mov
sbb
mov
mov
ret
mov
gs
cmp
loop
jg
outsl
test
fadds
fcompl
std
fsubrs
aas
dec
std
pushf
mov
arpl
cmp
fdivrl
xor
jmp
cmp
testl
pop
jmp
jne
and
inc
sarl
aam
pop
jmp
mov
dec
cmp
in
sahf
xorb
rcll
jns
xor
js
outsl
mov
lods
lods
in
adc
popa
frstor
mov
cmc
mov
mov
dec
jo
int
cmpb
aas
push
scas
mov
imul
mov
jae
lods
cld
fimull
mov
lahf
push
push
in
outsl
sarl
inc
lcall
loop
outsb
movsl
aaa
sub
lds
push
adc
int3
in
mov
dec
push
ror
lret
shr
xchg
jg
fbstp
test
cli
aaa
jecxz
add
rclb
repz
cli
lods
xchg
rcrb
aaa
iret
mov
lock
dec
sub
mov
xchg
in
lea
xlat
push
cmpsb
cltd
and
insb
jbe
pop
dec
stc
dec
mov
lret
jnp
gs
sbb
fwait
enter
lds
adcb
add
and
cli
mov
and
adc
into
outsb
ret
dec
arpl
pop
fs
mov
push
outsb
cmp
imul
sub
dec
pop
push
int3
out
inc
mov
insb
nop
jns
pop
or
mov
out
add
push
aaa
xor
and
push
mov
shll
fstpt
cld
mov
mov
ret
dec
rolb
inc
mov
or
icebp
addl
subl
lock
lods
xor
shrl
sub
ficoml
mov
subb
rcr
mov
clc
sahf
jns
in
out
or
ret
adc
mov
jp
dec
stos
ljmp
arpl
lea
pop
js
mov
xorb
adc
pop
dec
repz
cmp
xchg
push
jp
aam
inc
inc
sbbl
pop
enter
xchg
and
loopne
or
and
push
enter
or
mov
xor
imul
insl
nop
push
push
shr
sub
fisubrs
outsl
mov
jmp
mov
mov
rolb
add
adc
movsb
push
jo
insb
or
and
mov
and
adc
hlt
adc
jg
pop
mov
inc
loop
int3
mov
daa
mov
cmpb
lods
pushf
icebp
icebp
bound
enter
jbe
jbe
das
call
mov
mov
stos
dec
pop
cmp
mov
add
cmpb
add
sub
rcrb
popa
jb
outsb
into
ds
dec
push
mov
and
out
int
mov
sbb
pop
xor
and
int3
or
mov
bound
mov
out
repnz
and
js
jg
pop
pop
enter
or
inc
mov
jecxz
jb
pushaw
or
push
mov
pop
pusha
scas
lcall
or
inc
lahf
iret
int
jmp
push
movsb
std
jmp
mov
call
push
dec
loope
pusha
mov
les
jg
cmp
jle
jp
leave
decb
adc
inc
mov
shlb
in
rcrl
arpl
inc
aas
cmp
push
shl
cmp
pop
fldl
xchg
or
cmp
push
push
add
xor
dec
lods
xchg
mov
and
sar
in
pop
repnz
outsb
cmp
and
adc
mov
sub
dec
inc
or
mov
popa
sbb
mov
sbb
mov
sub
addb
and
or
pop
push
ffreep
jl
push
jns
lods
sbb
das
mov
xchg
cli
mov
lret
int3
ret
in
sub
xor
and
inc
or
ljmp
or
std
mov
in
mov
inc
dec
sti
lahf
ret
cmp
mov
icebp
adc
outsb
imul
repnz
sbb
and
loop
mov
in
or
cmp
andb
pop
or
dec
dec
aas
cmp
icebp
cmp
cmp
and
jp
gs
daa
lods
or
lret
out
and
sub
inc
adc
sbb
inc
mov
imul
inc
sub
jl
sub
imul
lahf
cli
aas
das
iret
mov
faddp
fisttpll
insl
mov
imul
in
jo
mov
stos
push
lret
mov
enter
mov
mov
aam
rolb
addr16
push
and
loope
insb
mov
cmp
jbe
dec
and
dec
mov
scas
mov
and
sarl
push
mov
xchg
sub
cwtl
add
insl
into
xor
adc
pop
lods
cmp
add
icebp
subb
adc
add
xchg
bound
call
inc
stos
and
push
rclb
jae
pop
outsb
fucomp
add
cmpsb
lock
cmp
ret
lahf
rcll
mov
sbb
add
lock
xchg
stos
movsl
daa
mov
lea
sub
pop
dec
addr16
xor
push
cwtl
mov
lods
movsl
fcoms
ja
pop
aam
adc
gs
push
sub
and
mov
sub
nop
mov
or
and
stc
stos
loope
sbb
sbb
sub
sub
dec
and
jns
pop
pop
cmp
test
or
xor
lahf
pop
push
icebp
xor
fstps
cmp
hlt
xor
stos
int
sbb
call
add
in
mov
cmp
push
mov
cwtl
xor
sarb
push
or
cld
ret
lret
or
jl
ljmp
push
xchg
xchg
inc
or
lods
int3
mov
fmuls
or
mov
mov
or
test
in
aas
push
sub
outsl
ja
icebp
addl
push
xchg
inc
mov
inc
nop
je
add
loopne
push
das
cld
imull
pop
test
inc
dec
dec
ja
dec
xchg
add
mov
pusha
push
inc
mov
je
in
jo
popa
dec
adc
pop
shll
repnz
adc
push
decl
push
es
cmp
repz
adc
cmp
and
mov
ror
push
adc
loopne
aaa
call
adc
idivb
out
rol
mov
mov
jecxz
lcall
insb
mov
cld
aas
roll
adc
mov
xchg
or
xor
repz
pop
outsl
xchg
jo
imull
sar
aad
aas
cmpb
dec
push
je
lret
pop
insl
test
mov
xchg
pop
push
or
sahf
push
mov
lret
orb
xor
stc
add
enter
jmp
mulb
mov
enter
sbb
or
add
push
movsl
jp
testl
adc
sbb
cs
dec
push
fstps
sub
mov
cmpsl
and
or
mov
mov
mov
mov
xchg
gs
or
add
std
pop
repnz
or
sahf
stos
out
xchg
sbb
and
insl
dec
movsl
outsl
icebp
into
jno
and
mov
js
add
daa
out
dec
enter
xor
stc
pusha
out
popf
fadd
fcomps
stc
xchg
ret
ljmp
loop
mov
out
lcall
inc
jns
popa
scas
mov
jne
push
mov
loope
jnp
xchg
ss
sub
fsts
fisubl
cmpsb
fnstcw
repz
xlat
aaa
clc
mov
cmp
movsl
adc
nop
pop
cmp
arpl
sahf
push
mov
cmpsb
mov
xor
and
insb
fwait
xchg
jmp
lea
sbb
ljmp
push
push
out
inc
std
inc
pop
sbb
cmpsl
lea
and
bound
mov
pop
ja
shlb
in
jbe
or
dec
push
ja
dec
mov
repz
jae
into
mov
dec
or
add
rolb
inc
adc
cmpb
jnp
or
stos
nop
sbb
aad
mov
es
outsl
xor
xchg
push
push
dec
leave
jo
loope
insb
or
iret
jge
inc
arpl
ret
inc
inc
sub
push
add
sti
cmpl
or
in
push
in
jnp
push
daa
cmp
dec
cmp
inc
push
xor
add
sub
lret
sbb
les
push
xchg
push
into
jge
push
hlt
hlt
out
rorb
repnz
in
xor
movsb
or
ljmp
fists
frstor
mov
push
out
rcr
jne
xchg
xchg
mov
imul
dec
inc
stos
mov
inc
cmp
pop
pusha
inc
sub
and
xor
sbb
adc
and
inc
clc
xor
mov
in
out
push
sbb
mov
push
or
push
sub
outsb
inc
flds
mov
inc
shll
arpl
stc
pop
rcll
dec
daa
scas
push
mov
push
jo
ds
mov
dec
sub
or
ljmp
jecxz
add
jns
xorb
sbbl
push
inc
adc
aad
outsl
rcll
stos
mov
lods
mov
xchg
inc
xchg
inc
adc
jecxz
jle
js
xchg
aaa
jnp
mov
pop
in
sahf
or
inc
pop
les
pop
inc
cmc
popa
push
shlb
inc
sbb
outsl
add
inc
aad
cltd
popa
and
inc
dec
pop
xor
out
xchg
ja
dec
aad
jge
inc
outsl
lret
dec
sbb
cmp
movsl
dec
ljmp
inc
jno
cld
xchg
and
pop
data16
cld
jg
rolb
push
push
outsl
adc
mov
flds
test
test
lea
mov
push
mov
add
mov
repnz
jmp
add
cmp
jp
sub
fxam
out
xchg
sar
fwait
add
or
js
int3
push
call
test
sbb
imul
xchg
adc
pop
daa
pushf
and
je
and
test
xchg
push
cmp
in
sarb
cmpsl
shlb
testb
jp
cld
xor
sbb
lret
push
push
mov
mov
out
inc
icebp
push
loopne
mov
out
sbb
daa
xchg
jns
pushw
lret
cmp
je
adc
rclb
xchg
int3
adc
push
lods
inc
pushl
xor
fucomp
cs
dec
push
jmp
cltd
cmp
test
push
out
aad
adc
pop
cmp
cmp
into
jns
add
fiaddl
clc
out
in
es
and
repz
mov
sti
add
mov
jnp
fldcw
imul
mov
pop
pop
sbbl
dec
std
jnp
lods
scas
xchg
test
dec
faddl
lret
mov
add
adcl
sahf
mov
je
jno
dec
cli
outsl
hlt
dec
rolb
cmp
sbb
cli
mov
sbb
test
sbb
call
mov
stos
adc
inc
add
add
les
rol
dec
xor
movl
sub
mov
sarb
cli
sbb
xor
movsl
and
sub
sub
inc
lods
push
xchg
xor
popa
fstl
in
das
pop
or
sub
or
in
mov
jp
stos
push
aaa
jl
push
lret
push
int3
orl
push
call
push
cmp
pushf
insb
out
sbb
cmpsb
xor
mov
mov
pop
notl
mov
jl
jne
sbb
popf
add
data16
test
cwtl
popw
mov
or
imul
inc
pushf
or
push
imul
leave
int
xor
adc
or
fistpl
xor
xchg
or
rorl
fsubs
jnp
pop
lods
call
loop
or
hlt
repz
in
jo
inc
push
sti
fadd
mov
shlb
adc
xchg
xchg
xchg
or
xchg
cs
ds
add
mov
test
mov
jnp
es
xchg
mov
mov
imulb
xchg
adc
adc
cmp
fnsave
daa
scas
mov
pusha
lods
push
popa
in
mov
jge
pusha
mov
and
mov
pushf
out
jmp
ljmp
xchg
dec
in
sbb
test
sub
push
mov
pushf
rol
jg
decb
sbb
addr16
js
pusha
sub
je
pop
xor
insl
ja
xor
jmp
xor
mov
xchg
mov
pop
or
and
cmp
rclb
fisttpl
ljmp
ss
mov
or
or
addb
pop
fisubrs
lods
movsb
in
and
insb
daa
jl
aaa
test
jge
jg
cltd
jp
ret
out
mov
and
lret
test
shrb
int3
les
pop
mov
jae
inc
xchg
sub
xor
sbb
iret
cmp
sub
jnp
mov
push
sbb
js
sbb
pop
mov
sub
repnz
push
push
js
insl
push
mov
outsb
fsubrs
lret
xor
cmp
sbb
fstps
adc
imul
dec
xchg
jnp
repz
ss
fwait
add
jge
movsl
sub
pop
js
fsts
pop
inc
jmp
pop
je
mov
push
imul
dec
jge
sbb
and
xchg
push
scas
inc
pop
mov
inc
cmp
jo
push
in
in
xchg
push
push
inc
cmp
mov
aam
jle
stos
mov
or
pushf
lds
inc
outsl
out
test
inc
jle
mov
push
jns
xchg
adc
mov
jg
rcrl
push
sti
fwait
jnp
arpl
pop
rolb
fxtract
xor
pop
and
cwtl
push
or
das
push
cmp
cmp
pop
adc
jp
mov
leave
mulb
pop
push
divb
sub
mov
push
sarl
adc
fadds
stos
gs
lret
pop
inc
jb
or
jmp
or
add
mov
jge
jl
not
mov
lret
out
or
test
adc
cmpsl
jne
aas
gs
imul
mov
ret
mov
divb
cwtl
aas
dec
push
cmpsb
and
std
pop
push
sbb
movd
popf
cli
mov
sub
dec
out
xchg
adc
jbe
insl
lods
mov
addr16
insl
cmpsb
in
cmp
add
in
ficomps
add
into
jbe
iret
outsb
adc
notl
shll
pop
sahf
shrb
sub
cmp
jno
xor
pop
dec
adc
das
inc
inc
inc
imul
mov
inc
test
sub
push
and
stos
push
push
fsubrs
js
lock
stos
push
test
jmp
mov
jmp
cwtl
jno
nop
xchg
mov
out
cmp
sub
inc
pop
fs
jg
sbb
add
sarl
aas
dec
cwtl
gs
inc
pop
pop
or
insl
add
addr16
xchg
repz
mov
dec
sub
lea
sbb
into
out
mov
aaa
sahf
adc
je
out
mov
pop
push
and
sbb
lret
sub
xchg
cltd
arpl
sbb
sub
clc
mov
and
push
xor
pop
aaa
dec
inc
dec
xor
mov
rclb
ja
out
add
mov
cmp
les
push
sbb
mov
stos
pop
fnsave
movsl
pop
ss
sarl
jmp
ss
in
aas
mov
rcl
mov
sub
push
rcrl
lret
mov
cmp
jns
imul
inc
adc
adc
psubw
jne
fwait
sub
andb
xchg
mov
dec
sub
adc
push
scas
mov
jne
lea
mov
xchg
stos
mov
inc
addr16
sub
ret
ljmp
int
or
call
out
jo
adc
or
loope
outsl
jle
mov
mov
xchg
push
cmpsb
pop
lds
fnstenv
pmulhw
push
out
mov
cwtl
fdivrp
popa
mov
imull
and
das
xchg
add
xchg
fbld
icebp
pusha
mov
xlat
int
adc
mov
dec
pop
daa
iret
dec
das
dec
push
and
cmpsb
jns
cs
xchg
push
inc
ror
pusha
cmp
inc
cmp
pusha
pop
and
inc
jne
int3
cli
inc
xchg
xchg
add
adc
fisubrs
pop
outsb
fisubl
call
mov
pushf
push
mov
in
mov
test
mov
xor
popf
push
xchg
pop
shll
lcall
aas
xor
lock
add
into
fidivl
jmp
jl
fs
and
lret
pop
mov
mov
popa
sarb
pop
mov
and
repz
mov
gs
orl
pop
and
dec
mov
mov
mov
mov
dec
int
jle
cmpsb
ds
add
mov
mov
out
push
and
jp
xlat
add
fcom
out
dec
inc
mov
or
mov
jnp
mov
cmpb
pop
outsl
push
popa
pop
rorl
mov
mov
gs
cld
inc
fs
mov
sbb
lahf
lock
insl
jp
cmp
jp
movsb
stos
push
xchg
push
sbbb
push
das
sbb
ds
xor
lods
or
and
jp
outsl
xor
cli
adc
imul
and
imul
mov
fs
rol
pop
mov
inc
pop
mov
int
repz
mulb
mov
xchg
gs
sbb
test
jg
jl
or
das
shrl
scas
push
orb
inc
add
jge
sub
into
dec
jb
inc
jno
pop
dec
scas
pop
mov
xchg
jmp
push
ja
ret
je
loope
jb
mov
mov
xchg
aad
push
mov
imul
insb
cmp
jne
lock
mov
or
mov
xor
gs
mov
pop
cmp
outsl
adc
loope
js
cmp
stc
add
sub
fcompl
movsl
into
or
cmp
jo
inc
leave
insl
lcall
and
loope
jne
das
fmuls
cli
jnp
aaa
xor
out
pusha
cmp
arpl
dec
pop
lcall
mov
lods
lcall
adc
mov
dec
mov
movb
es
jl
dec
mov
mov
imul
fs
popl
clc
and
ss
inc
ficomps
cmpsl
mov
and
mov
and
xchg
mov
sbb
aad
inc
jo
gs
mov
jg
dec
jb
aaa
dec
cwtl
lods
mov
sub
inc
in
je
mov
jg
lock
inc
sub
pusha
mov
dec
inc
enter
nop
iret
xchg
int
fidivl
or
int
cld
cmp
mov
mov
cmp
fistpll
add
dec
jno
mov
or
dec
sbb
add
cmp
lods
decl
jecxz
or
mov
mov
sbb
leavew
outsb
scas
push
icebp
insl
roll
iret
es
nop
movsl
push
cmpsl
and
ret
mov
iret
test
mov
daa
add
cltd
push
fmul
pop
mov
fadd
push
mov
mov
icebp
inc
or
xor
add
xor
repz
jno
idivl
mov
lds
mov
sub
test
xchg
sahf
dec
shl
and
rcl
ret
cmp
dec
add
in
jb
bound
iret
mov
xchg
ds
outsb
out
stos
xbegin
shll
mov
fimull
loop
sub
lret
popf
gs
mov
lcall
ljmp
hlt
jne
inc
cmp
inc
jns
test
sub
decb
sbb
mov
mov
int
sti
add
xor
inc
sbb
lahf
outsl
lret
imul
lds
xor
xor
in
inc
jg
es
pop
xor
or
cmp
and
inc
mov
sub
inc
dec
int
mov
dec
lock
sbb
xchg
pop
shrl
popf
mov
jo
out
dec
or
jne
xor
aas
divb
lods
outsb
xor
nop
int
clc
push
push
jge
cmp
ds
and
or
shll
outsl
mov
lds
jno
scas
mov
sbb
jae
stos
xchg
in
pop
jno
adc
jne
aam
incb
add
dec
mov
test
push
pusha
es
or
in
mov
dec
int3
add
dec
jo
cmp
cmpsb
lret
ficoms
inc
rcrb
or
addl
loope
inc
jnp
scas
pop
shll
jecxz
mov
xor
cld
dec
jle
ret
ljmp
cli
jp
push
xchg
lcall
addr16
xchg
xchg
mov
sbb
and
xchg
cwtl
add
jecxz
incb
push
js
cmp
mov
ret
enter
stos
cs
or
jp
pop
adc
mov
insb
out
sub
sub
mov
ljmp
lods
add
imul
leave
and
fldcw
gs
xchg
imul
mov
mov
xchg
jb
mov
fcompl
pop
loop
aad
and
fstpl
add
ja
xchg
cmp
push
scas
push
push
push
jne
mov
jmp
lods
mov
std
mov
inc
hlt
mov
jbe
dec
pop
call
lcall
add
cld
push
pop
sbb
push
je
and
adc
aad
insl
sub
insb
or
lds
jns
cs
cmp
aaa
popa
sbb
lcall
and
push
je
push
dec
sbb
out
mov
mov
vpsllw
mov
scas
mov
push
mov
stos
enter
ja
gs
or
data16
fsin
scas
test
sub
mov
push
add
addb
adc
arpl
inc
lea
int3
mov
mov
or
mov
fwait
mov
arpl
aad
loope
push
mov
xchg
and
push
popf
jmp
and
inc
out
in
jl
lds
aaa
cld
sti
sahf
cmp
mov
xor
cmp
cmp
mov
jb
ds
in
mov
sub
xlat
jle
cli
xchg
mov
xor
lret
mov
scas
iret
out
out
in
push
rcrb
cwtl
test
add
cltd
popl
jne
aas
in
sub
jne
xor
xchg
shl
mov
add
insl
xchg
pop
lret
mov
xchg
push
cwtl
dec
cs
pop
jne
xchg
xchg
inc
lds
popa
inc
lret
cwtl
nop
cli
movsl
jp
xchg
jbe
pusha
xchg
inc
pop
push
insb
insl
sub
jne
xlat
adc
outsl
jae
fidivrs
scas
jmp
cltd
inc
mov
push
xchg
pop
or
lock
sarb
stos
inc
or
dec
enter
add
add
adc
dec
stos
mov
mov
inc
xchg
mov
mov
int3
adc
sarb
cmp
bound
mov
lret
xchg
aam
mov
mov
jne
addb
adc
test
dec
mov
movsl
pop
mov
inc
mov
jge
nop
enter
ret
push
popa
imul
fwait
jmp
outsb
push
out
xchg
enter
dec
and
dec
lret
or
cmc
jp
loopne
mov
cmp
mov
dec
cltd
cmpsl
pusha
js
mov
imul
xchg
std
mov
jo
mov
pop
clc
fstpt
shrb
xor
inc
shrl
jne
xor
sbb
enter
add
icebp
movsb
cmp
cmp
ret
pushf
sbb
xchg
shr
jle
and
dec
ret
xchg
mov
mov
stos
lods
hlt
xchg
stos
clc
cltd
je
mov
push
jnp
stos
jle
repnz
rorb
lcall
xor
addl
sbb
dec
es
aam
mov
lods
je
jp
sub
sub
out
aam
loop
lcall
insl
test
mov
jb
push
test
xchg
inc
fcoms
push
bound
xchg
out
xchg
loop
mov
xchg
std
xlat
adc
nop
xor
xadd
and
test
test
push
add
in
pop
fstl
inc
xor
jp
mov
push
push
mov
call
xor
imul
sbb
push
fldcw
mov
sbb
out
scas
fstps
inc
mov
aam
cmp
mov
test
or
sahf
idivb
int3
or
imul
push
jge
xchg
clc
inc
jg
push
scas
dec
mov
loop
xchg
popa
pop
push
mov
out
sub
jb
and
aam
pop
mov
jecxz
dec
xor
and
fistpl
scas
xlat
jbe
jle
jle
sarl
and
xchg
xor
sub
pop
mov
sbb
push
pop
lods
pusha
lret
pop
ljmp
mov
dec
movsl
adc
loopne
enter
stc
js
hlt
xor
leave
inc
aam
js
lahf
add
adc
clc
cmp
pushf
or
arpl
cmp
sub
or
out
rcrb
push
adcb
jmp
aam
data16
aad
imul
cmc
push
lods
insl
ljmp
adc
jb
cmp
lahf
loopne
fcomps
cmp
jns
outsl
je
dec
xor
mov
cmp
adc
pop
shll
xchg
mov
inc
enter
dec
cltd
jo
push
mov
and
dec
xchg
xchg
pop
cmp
lahf
adc
cli
outsb
imul
fbstp
aad
adc
loopne
lret
sbb
cmp
popa
or
je
jae
test
in
pop
add
leave
or
xor
pop
pop
sub
scas
cmpsb
adc
sbb
mov
sbb
mov
sub
test
fwait
jns
push
arpl
lds
pop
arpl
mov
es
insb
fwait
cmc
mov
mov
shrb
xchg
jl
sti
loop
mov
gs
mov
lock
stos
and
out
hlt
mov
shrb
add
idivb
rcrl
fs
out
push
xor
mov
mov
push
jmp
xchg
xor
jmp
and
jmp
jno
les
jne
loop
jnp
jo
jp
push
dec
std
sub
sub
pushf
data16
jp
lds
test
enter
sbb
adc
mov
mov
aaa
adc
fisubs
cwtl
dec
mov
faddl
cmp
push
mov
rorl
ret
test
ljmp
out
mov
pop
jae
cwtl
dec
cmp
fmull
add
mov
test
jp
jne
icebp
incl
jae
cmp
loop
jmp
push
cli
ss
or
cmpsb
cmpsb
jb
or
jbe
pop
ds
add
push
sub
xor
loop
jmp
jo
cmpsb
jne
jnp
jae
mov
sbb
jg
popa
push
movsl
stc
imul
lret
jnp
jg
pusha
and
in
scas
jecxz
jo
push
enter
lahf
add
dec
mov
dec
and
aad
cmpsb
sub
shlb
mov
sti
mov
je
and
and
xchg
test
push
dec
sar
sbbl
das
js
pop
movsb
xchg
pusha
mov
mov
xchg
pop
nop
lea
xor
jns
sbb
inc
push
lcall
sub
sbb
sub
in
or
push
roll
pop
dec
fcomps
ret
add
xor
leave
stos
int3
push
mov
addr16
insb
inc
dec
cld
push
leave
push
jp
cmc
mov
jnp
shll
xor
jns
pop
inc
addr16
xchg
testl
testl
cmp
jnp
test
bound
clc
stos
pop
pop
cmp
sub
lret
and
dec
loopne
bound
and
out
sbb
jle
push
sbb
pop
icebp
dec
rorl
mov
cwtl
icebp
adc
mov
int3
xchg
xchg
cmc
inc
push
gs
xlat
mov
lock
dec
leave
ret
xchg
mov
mov
xchg
movd
fisubs
xchg
mov
subl
fldcw
lret
pop
push
inc
push
pop
adc
insb
andb
aaa
jae
stos
ljmp
lods
xor
cs
jbe
pop
xchg
xchg
adc
lock
loopne
lds
mov
and
sti
popf
cmp
lret
jg
or
test
popf
pop
push
fwait
xor
out
and
cmc
lahf
mov
das
cld
aam
sub
pop
or
outsl
jb
jb
push
divb
nop
cwtl
and
add
cmc
xor
mov
mov
cmpsl
mov
pop
sahf
mov
mov
dec
mov
das
pop
xor
cs
and
push
mov
fnsave
std
das
push
push
jle
mov
fistpl
push
xorb
arpl
fisubrl
and
xor
stos
js
sub
mov
ja
inc
sarb
movsb
cmpsb
xchg
mov
pop
sahf
das
and
lea
push
push
sbb
lds
arpl
or
insl
pop
insl
and
mov
dec
or
gs
lcall
rolb
fistps
mov
icebp
xor
sbb
sub
dec
xchg
int3
das
or
jb
jl
hlt
jge
rol
mov
bound
mov
fistps
bound
sub
pop
pop
cmpsb
ljmp
xchg
dec
clc
les
add
pop
push
jle
mov
mov
add
rclb
sbb
xchg
mov
mov
jae
outsl
cli
sbb
ja
xchg
dec
pushf
loope
pop
ret
adc
and
ja
sub
shll
push
dec
insb
imul
insl
imul
adc
adc
pusha
pop
imul
imul
dec
icebp
mov
hlt
push
mov
fmuls
jle
cmpl
ret
xchg
pop
adc
xor
sbb
popa
sbb
into
outsl
jecxz
xchg
out
or
mov
or
jmp
add
jmp
test
lock
movsb
pop
or
mov
push
mov
inc
sarb
lods
push
push
loop
cmp
std
stos
gs
sub
les
add
call
or
cmp
xchg
mov
push
fs
and
push
add
roll
std
in
scas
adc
cmp
push
jge
jae
shll
popa
scas
mov
pop
adc
xchg
loope
fsubl
or
stos
xor
add
loope
mov
adc
lock
push
xor
lret
cld
sub
je
pushf
and
inc
push
std
flds
pop
jae
xor
inc
push
dec
mov
lahf
dec
lcall
mov
bnd
cli
mov
cmpsb
xchg
mov
and
jb
pusha
stc
push
ja
shll
xchg
ds
into
nop
cmpsb
inc
mov
movsl
cltd
sbb
xor
xchg
cli
ret
iret
push
xchg
mov
cltd
cmpsb
jne
xor
mov
dec
pop
or
and
sbb
and
sti
call
push
pop
dec
pop
stc
pop
jnp
int
rorl
sbb
pop
xor
mov
inc
gs
push
xchg
into
push
mov
xor
xchg
cmp
scas
ss
cmpl
add
pop
pop
cmpsb
adc
popf
push
dec
icebp
bound
cmp
jl
xlat
xor
mov
mov
out
je
fildll
sbb
jp
stc
add
int3
cmp
js
add
add
dec
or
xchg
jae
rorb
mov
mov
mov
imull
mov
aas
stc
add
mov
fnsave
movsb
inc
push
nop
aaa
pop
mov
dec
lret
mov
push
js
cltd
jae
aam
ja
jg
fcomi
push
cmp
mov
sarl
repnz
movb
icebp
mov
addl
sub
rolb
nop
adcl
ret
adcl
or
mov
outsb
inc
push
testb
ror
adc
mov
ljmp
jb
int3
repz
cmc
and
shll
inc
xchg
mov
lods
cli
jecxz
jne
loop
insl
sub
in
push
es
jb
add
bound
pop
dec
pop
push
adc
sahf
pop
xchg
push
inc
das
iret
pusha
movb
or
xor
xlat
leave
mov
outsl
out
jge
outsb
mov
and
loopne
xchg
pushf
loopne
mov
test
cld
mov
clc
int3
call
sub
and
imul
insl
rorl
sub
cmpsl
dec
pop
pop
repnz
int3
repnz
outsl
or
mov
lods
and
cmp
sahf
loopne
pop
into
add
inc
and
adc
outsb
aaa
jmp
insb
sarl
leave
popaw
or
mov
or
inc
mov
fisubrs
dec
mov
iret
add
xchg
je
dec
fsubl
loope
nop
push
cltd
sbb
int
dec
push
pop
lods
lret
sub
movl
adcl
push
subl
or
bound
es
lahf
xchg
les
in
inc
mov
cmpb
icebp
imul
cmp
movsb
hlt
lock
adc
fs
test
es
cmp
int3
push
test
mov
xor
push
jmp
sarl
mov
jb
ja
mov
adc
aaa
je
fnsetpm(287
jnp
or
data16
daa
mov
rcll
int3
or
int
dec
mov
and
addr16
and
xor
aaa
sbb
addb
mov
cmp
mov
popa
repnz
xor
daa
sub
push
iret
xchg
jo
addr16
cli
dec
mov
cmpsl
fwait
mov
jae
push
mov
xlat
in
outsb
jno
addl
jno
imul
xchg
mov
fbld
stc
fisttpl
adc
add
sbb
cmp
jl
xchg
imul
loopne
mov
add
das
popl
les
xor
dec
xor
inc
in
and
ss
push
push
in
lret
in
arpl
test
cmpsl
into
cmp
iret
inc
rorb
push
mov
xchg
dec
push
cli
mov
pop
test
sbb
popa
ret
mov
les
dec
pop
ja
mov
sbbb
sahf
pop
iret
subb
fidivrs
test
push
xor
sub
sahf
or
daa
xchg
jae
dec
push
xchg
dec
shr
mov
je
jns
cmp
mov
dec
stos
sbb
loop
adc
or
sub
fdivl
hlt
bound
and
or
mov
push
xor
add
adc
aaa
stos
dec
into
lret
div
pop
sbb
mov
fmulp
cmpl
cmp
add
xchg
sub
dec
arpl
jb
int
mov
scas
loop
mov
push
mov
in
push
imul
inc
ret
daa
xchg
insl
movsb
cli
fmul
daa
sahf
fildl
xor
dec
test
jl
dec
pop
cmp
jo
push
inc
mov
pop
push
ja
addr16
push
js
adc
js
out
lock
or
push
dec
or
add
sahf
and
loop
and
adc
mov
in
loopne
ret
in
aas
dec
sub
mov
push
inc
mov
test
or
bound
inc
jb
add
xor
cmp
adc
out
fadds
mov
in
mov
xor
cmc
xchg
scas
bswap
push
pop
xor
mov
push
mov
or
mov
cwtl
inc
in
xlat
and
sub
mov
mov
jbe
pop
or
pop
cmp
pop
or
test
and
mov
cmpsb
scas
sbb
data16
insb
iret
in
fs
xchg
cmp
dec
mov
jb
call
fdivl
insb
scas
aas
insb
movsl
sbb
push
in
adc
xlat
loope
jl
cmp
movsl
or
fxtract
mov
cmp
fwait
mov
das
mov
or
bound
mov
mov
sub
fwait
jo
adc
test
loope
stos
sub
sub
adc
shlb
cltd
repz
sbb
xlat
iret
je
popa
stc
clc
sub
jne
mov
pop
or
imul
nop
outsl
out
jb
and
dec
es
mov
aaa
imul
sbb
orb
fistps
add
les
jge
popf
pop
iret
mov
jge
rcrb
xchg
les
xchg
xlat
mov
ja
fisttpl
push
xor
inc
enter
testb
in
cltd
fs
stos
xchg
daa
mov
pusha
movsb
es
xor
inc
lods
in
daa
test
popf
jo
out
iret
addl
notl
xor
cmp
and
jb
inc
fmuls
jecxz
test
push
xchg
popf
cwtl
adc
das
test
lcall
or
int3
in
xor
call
push
mov
and
pushf
clc
pop
lods
ficomps
test
les
fstpl
sbb
addr16
adc
test
aam
outsl
cs
xor
xor
push
lcall
cmp
push
in
bound
les
mov
xchg
sub
lret
push
xchg
pop
dec
dec
push
xchg
xor
push
mov
scas
mov
outsl
dec
xor
jmp
mov
lods
xor
xor
xor
inc
pop
or
cs
stc
sbb
imul
out
js
invd
call
pop
or
jno
jle
in
cmp
les
shlb
add
clc
pop
pop
pop
xorb
pop
fisttpl
jne
mov
push
sbb
repz
leave
adc
cmc
dec
dec
xchg
xor
movsb
mov
dec
push
adc
pop
mov
dec
jp
dec
mov
insl
xor
and
movsl
mov
shll
stos
xorl
es
scas
outsb
clc
jl
fcoms
sub
adc
lahf
std
adc
xor
inc
xchg
jb
lret
data16
inc
mov
jne
mov
arpl
minps
jno
mov
push
xorl
data16
mov
cmp
xor
rcrb
push
cmp
ja
push
cs
and
fisttpll
stc
mov
js
outsl
das
out
cmc
and
jl
adc
decl
fsubrs
std
jg
nop
ret
inc
ja
scas
and
jns
sahf
subb
mov
div
lret
popa
mov
mov
xchg
mov
clc
add
sub
arpl
divb
pushf
mov
inc
pop
jne
ss
data16
pushf
mov
iret
in
and
pop
cmp
xchg
or
shrb
in
jae
dec
add
mov
mov
mov
inc
shrl
mov
aad
rolb
adc
xchg
pop
dec
mov
mov
shlb
add
outsb
repnz
shrb
loope
test
and
and
adc
mov
cwtl
inc
fiaddl
mov
mov
add
sahf
mov
mov
nop
lds
js
adc
xchg
test
dec
xor
stos
out
mov
test
clc
sub
xor
mov
fdivrl
flds
int
lods
dec
les
insl
push
les
sbb
test
pop
fstl
pop
fs
xor
inc
push
sub
insl
mov
jns
jae
xchg
dec
lods
sti
imul
xor
xor
popf
mov
adc
xchg
sub
mov
pop
rclb
or
add
fdivl
xor
int
in
adc
push
loope
add
sub
dec
sub
xchg
adc
mov
gs
cld
out
jmp
repz
lret
lahf
xchg
leave
les
and
aam
aad
jae
cs
in
inc
mov
std
test
push
rol
sbb
jb
xor
hlt
arpl
mov
out
jp
repnz
jp
mov
push
cmp
fwait
push
inc
data16
test
pop
outsl
pop
sub
repnz
push
mov
mov
push
stc
sahf
roll
mov
ret
dec
add
xor
jl
jge
lret
xlat
jl
push
add
test
popa
xchg
cld
es
aaa
cmp
and
inc
cwtl
mov
xchg
pop
wrmsr
mov
or
icebp
sbb
mov
lods
loop
das
aas
mov
loope
cmp
scas
jbe
imul
in
popa
shll
fildl
pop
push
jnp
addb
push
adc
lahf
cs
lahf
fnstsw
xchg
aas
int3
cmpsb
mov
repz
jge
mov
pop
scas
fs
jl
mov
xorb
dec
xor
mov
sub
jle
pop
shlb
inc
lcall
sar
xchg
scas
push
mov
cwtl
pop
scas
cmp
push
pop
gs
pop
pop
decb
dec
dec
jle
aaa
clc
out
ljmp
outsl
icebp
add
inc
xorl
pop
popa
sub
daa
ret
sbb
ss
outsb
add
sahf
ret
or
int3
adc
xchg
ss
scas
inc
ds
test
cmpsl
lcall
push
ljmp
je
dec
mov
pop
out
cmc
inc
ret
mov
mov
pop
cld
pop
dec
out
inc
cmp
shll
lods
jno
xchg
bound
js
scas
xchg
jmp
loope
stc
mov
jle
mov
sahf
mov
jge
popf
add
and
sub
sub
aad
lcall
add
addr16
push
mov
inc
add
sub
dec
std
add
sbb
or
addr16
rolb
and
aaa
jae
pusha
add
mov
jp
in
test
jbe
leave
pop
fiadds
aad
imul
cmpsb
xor
addr16
clc
dec
sbb
and
movsl
daa
scas
fidivrs
or
push
xchg
inc
bound
daa
adc
jbe
lods
popf
sbb
pop
push
pop
lods
xchg
ds
jo
sub
shll
mov
pop
int3
sub
fisubrs
fwait
push
out
sub
push
sbbb
nop
dec
or
xchg
insb
dec
pop
aad
roll
push
lahf
inc
cmp
mov
mov
inc
sub
sarb
mov
xor
scas
mov
data16
xchg
xchg
adc
std
xchg
rcrl
cmp
mov
dec
mov
icebp
imul
mov
bound
hlt
movsl
and
rcrb
rcrb
lods
xchg
into
imul
shr
and
mov
aad
orl
dec
mov
test
lahf
adc
nop
mov
pop
call
fsts
pop
inc
dec
dec
jbe
push
aaa
xchg
and
lods
scas
pop
add
insl
adc
lea
nop
jnp
add
push
mov
mov
cmpb
aam
fwait
mov
jne
outsl
pop
iret
inc
add
hlt
insb
sub
mov
cmp
lods
mov
ja
insl
ret
ljmp
pop
pop
mov
ds
adc
lock
xchg
mov
add
sbb
mov
pushf
push
outsb
clc
popa
leave
add
xor
scas
jecxz
leave
arpl
fidivl
shll
adc
rorl
mul
push
mov
ljmp
mov
lods
dec
add
lods
lods
lock
in
sbb
mov
pop
push
mov
inc
lods
xchg
xor
jp
xorl
mov
or
fistpl
adc
es
mov
dec
sti
scas
push
xchg
maskmovq
imull
push
mov
js
dec
xor
and
pop
push
dec
jne
and
sub
push
lcall
scas
call
subb
js
xchg
inc
test
mov
push
mov
andps
pop
lret
int
fisubs
or
sub
dec
in
xchg
xlat
lea
adc
sbb
cmc
dec
lds
add
jle
lods
push
xchg
xchg
xchg
jle
xchg
pop
pop
pop
jno
dec
lods
sub
test
or
or
jns
fadds
sbb
cmp
mov
ffree
mov
lea
xchg
adc
js
push
inc
stos
outsb
push
cmp
pop
dec
jp
add
jae
xchg
shl
sbb
jmp
pop
aam
sub
inc
test
inc
cmp
dec
add
ja
aaa
push
add
fs
push
mov
sub
cmpsb
sbb
cmp
into
cmp
lret
jmp
and
fldl
js
sbb
add
std
add
xlat
push
push
add
or
shrl
shr
pop
inc
sbb
jg
arpl
popa
in
out
jns
xor
jmp
sbb
push
mov
call
stos
push
xchg
in
cmp
cmc
mov
and
ss
pop
jnp
out
arpl
xor
cmp
test
outsl
mov
aas
rcrb
rcrl
mov
inc
ret
push
push
pop
mov
jl
or
jg
and
enter
stc
pop
sbb
mov
and
insb
hlt
scas
sti
out
push
adc
xchg
xorb
ficomps
inc
sarl
xchg
orb
repz
insl
lret
push
inc
fmuls
inc
inc
mov
sub
or
ljmp
outsl
mov
push
dec
movsl
inc
gs
add
les
mov
mov
out
push
dec
lock
mov
dec
push
int
pop
mov
jo
add
ds
mov
mov
jo
clc
sbbl
inc
adc
les
jns
dec
idivb
jg
mov
imul
add
ret
pop
into
into
je
cmpsl
loope
inc
shlb
aas
xor
ret
mov
jno
jno
push
sbb
gs
adc
pushf
fbstp
mov
xor
jl
pop
mov
lret
jl
inc
lds
out
or
js
stos
pop
sub
ja
stos
inc
nop
mov
push
and
push
add
cmpsl
les
lods
stc
mov
icebp
cs
add
xchg
xlat
mov
mov
bound
cmpl
scas
iret
aad
inc
inc
sarl
fstps
fmuls
jmp
pop
ret
pop
mov
xchg
out
jb
nop
add
dec
add
mov
and
fsubl
popf
lret
xor
jecxz
inc
daa
scas
or
je
cltd
pop
mov
ffreep
and
test
xlat
mov
jecxz
jge
mov
filds
movsl
divb
out
pop
lret
push
movsl
xchg
xorl
scas
jae
add
inc
scas
adc
sbb
inc
or
sbb
cmp
jbe
inc
ret
shlb
push
arpl
xor
ljmp
dec
sub
es
jg
insb
adc
push
mov
jmp
mov
jl
cmpsl
xchg
sub
push
push
inc
call
notl
push
push
mov
bnd
aad
add
jp
daa
add
push
notb
fistps
push
and
push
mov
add
and
lret
mov
inc
test
xor
and
pop
pop
cli
loopne
sub
push
dec
adc
cmp
sbb
call
scas
sbb
mov
add
cmpsl
imul
pusha
cmp
add
shll
arpl
push
das
fwait
and
jb
xchg
xor
rorl
out
mov
outsl
cmp
test
cmp
xor
push
outsl
mov
jge
lahf
test
fld1
xchg
add
mov
xchg
jns
sbb
imul
andb
xchg
addr16
cmp
cmp
mov
bound
xor
push
push
and
das
mov
xchg
jnp
lods
push
push
inc
mov
into
mov
bnd
mov
xchg
xchg
cli
push
shlb
fldl
cmp
jne
jae
xor
or
sbb
movsb
sahf
jo
xchg
inc
faddl
sahf
or
sti
jne
pop
push
mov
cwtl
fisubs
add
into
fdivr
shlb
ljmp
mov
outsl
enter
mov
fsts
jmpw
stos
test
jns
and
push
sbb
mov
test
int3
or
mov
mov
or
cmc
inc
xchg
pop
in
jns
xor
jl
inc
adcl
sub
repnz
mov
out
movsb
aaa
mov
js
fistps
arpl
dec
test
in
icebp
mov
push
hlt
xor
pop
aaa
inc
dec
and
fwait
pusha
and
nop
adc
fs
cld
pushf
push
push
mov
notl
jmp
push
lea
push
in
cmp
lcall
sub
mov
in
xor
imul
int3
or
mov
jns
push
sub
jno
je
insl
push
outsb
add
lea
movsl
inc
mov
shl
xchg
mov
rclb
cltd
flds
jnp
shll
mov
mov
cld
addl
js
insb
add
jo
fldcw
and
and
scas
stc
das
push
popf
lcall
dec
mov
cwtl
and
pop
and
insl
pop
sbb
sarl
jl
sahf
test
sub
ja
dec
ljmp
in
ds
xlat
jae
push
orb
mov
jnp
hlt
sbb
mov
mov
xchg
mov
add
xor
es
xchg
or
aad
stos
push
mov
scas
sub
cmp
stc
mov
sub
or
icebp
mov
imul
add
mov
xchg
ret
xchg
fcmove
pop
lahf
lea
gs
pusha
cmp
dec
xchg
xor
mov
pop
push
push
xchg
jmp
lods
mov
mov
ds
mov
aaa
cmpsl
roll
pop
inc
mov
mov
xchg
enter
jne
add
adc
lret
adc
loope
jne
pop
xlat
sub
sbbl
pop
jp
jno
stos
in
adc
mov
pop
lea
leave
push
inc
dec
push
into
cmpsl
fimull
sbb
mov
sbb
insb
xchg
pop
xchg
dec
sub
loopne
es
mov
xchg
test
addr16
xor
sbb
sbb
loopne
insb
inc
pop
les
rorl
arpl
mov
push
lahf
cli
mov
addl
insb
ja
push
cmpsb
push
sub
popa
cmp
add
divb
std
mov
push
push
les
mov
das
ret
aam
mov
adc
add
dec
pusha
sbb
cmp
inc
inc
pop
jle
cmpsl
push
mov
push
xchg
jb
addr16
ljmp
push
js
xchg
mov
sbb
jle
dec
sbb
jp
jge
push
popa
mov
mov
add
test
mov
cltd
or
push
sub
pop
cmp
into
and
and
mov
cmp
sar
sbb
jmp
adc
pop
xchg
jl
addl
pusha
add
or
adc
mov
inc
pop
jle
mov
rcrb
jge
xor
mov
aas
inc
mov
sbb
stos
mov
in
insl
pop
test
and
aad
push
lret
inc
fimuls
aam
stos
nop
aad
or
xor
xlat
lods
push
repz
dec
in
fnsave
imull
imul
add
enter
shlb
add
aad
add
leave
bound
shlb
or
cmpsl
cmp
xor
repnz
daa
adc
fmuls
imull
fnstenv
push
sub
jmp
sbb
add
outsb
call
inc
data16
popf
mov
outsb
ss
addl
fcompl
push
adc
nop
sar
out
jne
pop
jge
fbld
push
cmp
and
iret
and
pop
outsl
add
sahf
cmpsb
inc
xorps
aad
xchg
xchg
sbb
cmc
out
xchg
pushf
sub
xor
out
int
test
sub
aaa
mov
lret
mov
inc
pop
dec
jne
ljmp
and
cmpl
mov
pushfw
mov
pop
xor
xchg
iret
cwtl
mov
jecxz
inc
pop
inc
add
sbb
fs
cmp
sub
icebp
cmp
xor
test
dec
sbb
pop
fwait
stc
sbb
adc
enter
mov
jmp
inc
iret
pop
sahf
addr16
push
jl
incl
mov
mov
scas
adc
push
push
rol
pop
fwait
aas
inc
and
mov
mov
std
mov
test
pop
jle
cli
cmp
stc
insb
pop
or
hlt
pop
inc
cmp
movsb
subb
cmp
pop
inc
jg
aam
xor
scas
xor
push
ficomps
loop
stc
sti
xchg
scas
dec
cmpsb
mov
inc
movsb
or
stc
inc
adc
mov
faddl
add
inc
add
jmp
aam
mov
push
ja,pn
idivl
adc
std
rclb
int
aad
cwtl
andb
mov
jmp
xor
push
test
and
outsb
leave
lock
sbb
leave
push
inc
push
mov
dec
and
xlat
pop
dec
adc
out
push
mov
add
dec
pushl
xor
scas
fistps
scas
fld1
xchg
or
inc
dec
test
jae
cmp
inc
or
dec
enter
adc
inc
stc
stc
cmpsl
inc
adc
fmuls
sbb
mov
aam
rcrb
xchg
or
loopne,pn
jl
sub
test
in
push
sub
iret
and
pushf
xlat
mov
pop
popf
and
xchg
cld
sub
cmp
das
dec
ret
les
pop
cmp
xor
push
rorl
fldt
imulb
out
aam
fnstcw
enter
mov
xchg
loop
test
push
mov
push
imul
sbb
mov
cltd
pop
sbb
cmp
push
cmpb
cmp
testl
cmp
pop
inc
push
mov
imul
dec
cld
icebp
mov
dec
inc
dec
inc
xchg
pop
adc
push
push
jne
jbe
jo
out
call
lds
les
repz
pusha
inc
inc
shlb
cmpsb
mov
adc
xor
in
xor
lret
sub
into
add
test
jle
in
cli
lret
les
stc
or
rclb
push
and
or
clc
cmp
mull
ret
and
add
mov
mov
cltd
ret
xchg
push
xchg
inc
add
data16
inc
fldenv
adc
push
dec
fcmovnb
movsb
imul
insb
movsl
jmp
fwait
push
pushf
sbb
push
stos
lret
pop
repz
dec
in
sbb
test
jns
mov
mov
mov
push
and
clc
pop
push
cli
xchg
cs
test
cmc
das
or
jae
xchg
ds
cli
inc
or
cli
push
push
es
lret
out
pop
sub
cwtl
xlat
inc
or
add
int3
sahf
dec
loope
pop
xor
call
or
xor
dec
lret
sbb
mov
xchg
scas
dec
or
add
sbb
ja
mov
into
mov
add
in
mov
cmpb
mov
dec
jae
push
arpl
cmovbe
mov
inc
xchg
gs
filds
push
mov
xlat
sub
pop
jg
mov
dec
scas
sub
dec
mov
add
jb
lock
inc
add
mov
loope
cwtl
stos
out
push
sub
dec
pop
push
icebp
test
in
pop
outsb
ret
pop
mov
add
idivl
xor
push
ss
loopne
loop
or
and
xchg
fstpl
in
call
jo
pop
mov
cmpsb
mov
cmpb
mov
add
jb
bound
ret
dec
mov
inc
call
xchg
cmp
push
repnz
je
test
push
popa
xor
mov
xchg
repnz
jb
pop
pop
pop
outsl
xchg
iret
and
test
jg
mov
dec
mov
cmpsb
js
shll
mov
cwtl
jle
xchg
aam
movb
push
mov
das
or
push
xchg
xchg
in
xchg
cli
sub
fs
mov
cs
sub
add
rclb
popf
jmp
sbb
popf
call
adc
adc
call
xor
or
xchg
sbb
adc
xchg
clc
jne
rep
push
xchg
mov
sbb
loopne
push
out
cwtl
pop
xchg
xor
dec
xorb
cmp
mov
mov
dec
cmpsb
jns
jecxz
pop
scas
dec
inc
jae
addr16
mov
fcomp
int3
push
bound
lret
mov
dec
mov
lret
xchg
xchg
dec
dec
add
nop
sbb
in
inc
cltd
popf
pop
sub
push
cmp
enter
push
cwtl
inc
out
in
pop
sbb
xor
push
enter
and
ret
xor
movsb
sbb
das
adc
fdivrl
and
mov
loope
fs
les
jno
fcomip
add
shll
mov
xor
jp
sbb
lahf
xchg
dec
repz
int3
sub
add
jl
cwtl
inc
jg
xor
iret
roll
in
push
and
mov
repz
mov
cmp
les
fs
jnp
and
mov
call
mov
jbe
inc
fsubs
pop
jns
inc
xchg
insl
add
fcoml
adc
dec
mov
jmp
pop
rcrb
dec
cmpb
pop
pmovmskb
cmp
and
jbe
xor
pop
add
cmpsb
sbb
mov
adc
xchg
ja
aam
and
out
lret
mov
outsl
dec
sahf
js
sbb
test
lret
xor
int
in
mov
out
inc
inc
xchg
mov
lea
pop
jle
and
mov
xchg
xor
movsl
pushf
outsl
icebp
add
adc
leave
iret
fisttpl
inc
fwait
push
jno
add
ret
cmovns
push
ret
jne
mov
jb
mov
mov
cltd
xor
fcomp
push
and
pop
dec
xchg
ja
rcrb
shll
fistl
sub
inc
std
aaa
xchg
sbb
push
sub
ret
imul
xor
push
test
and
jne
cmpsb
dec
pop
jmp
mov
jae
push
cmp
mov
mov
mov
in
xlat
inc
dec
idivl
inc
subb
push
dec
pop
mov
pop
xchg
push
inc
or
add
push
leave
xor
xchg
adc
stos
xchg
bound
fnsave
mov
cs
mov
std
pop
xchg
movsl
push
pop
iret
clc
insb
mov
dec
call
pop
lods
les
adc
mov
popf
stos
ja
loopne
xor
pop
movsl
js
ja
dec
adcl
and
loope
loope
add
sbbl
adc
cmpsl
dec
jmp
xor
pop
roll
pop
imul
out
dec
cmp
xchg
jbe
jmp
jge
in
push
xlat
dec
cmp
mov
repz
scas
adc
divl
pusha
xchg
mov
call
rcr
dec
dec
loope
stc
mov
fstps
or
xchg
inc
mov
sbb
lea
sbb
mul
pcmpgtw
mov
mov
sub
pop
xchg
adc
leave
cmp
inc
std
mov
jge
sbbb
cmp
mov
data16
dec
inc
jmp
js
pop
inc
data16
push
push
lret
jns
dec
pop
subb
jb
std
lcall
out
sub
lods
into
test
insb
mov
out
cld
js
sub
nop
dec
aaa
in
add
adc
fbld
push
pop
inc
add
xchg
xchg
dec
inc
add
in
push
push
lret
ja
mov
sbb
xor
mov
out
lret
imul
popa
or
push
mov
out
mov
cld
nop
adc
and
movsl
mov
sub
cmp
mov
inc
ja
into
jle
fdivl
mov
stc
shrb
cmp
push
inc
out
dec
test
sbb
xor
jp,pn
lock
xchg
dec
test
pop
mov
inc
jl
pop
add
mov
cmp
or
add
inc
pusha
cs
pusha
and
sub
or
sbb
das
xchg
jbe
repz
sbb
arpl
mov
scas
and
cmpsl
xor
fdiv
jecxz
test
pop
xor
mov
pop
sub
xchg
mov
mov
imul
cmc
mov
mov
pop
pushf
pop
rcrb
ret
dec
pop
push
pop
sub
sub
fimuls
into
ljmp
loop
mov
sarb
inc
dec
xchg
mov
imul
aam
push
arpl
add
jo
xor
pop
out
shll
ljmp
jnp
pop
dec
lea
jb
lahf
subb
push
fadd
jmp
lods
dec
mov
stos
imul
mov
outsb
jno
test
pop
mov
pop
mov
xchg
dec
cs
add
mov
pop
sub
pop
insb
push
das
adc
inc
cmp
mov
cs
ud0
push
mov
cmc
mov
notl
ja
cltd
push
jne
scas
xor
push
dec
in
jg
xor
jnp
imul
cld
ljmp
mov
dec
popf
mov
dec
negl
mov
cmpsb
fsubs
cmp
call
and
sbb
push
sbb
mov
daa
pop
inc
and
popa
push
jo
jg
mov
lea
pop
into
xor
push
orb
imull
icebp
iret
call
jne
mov
pop
xchg
or
test
ss
push
pextrw
or
jg
xor
xchg
insb
mov
stos
pop
xchg
rorb
dec
ss
aas
add
or
push
rep
jb
daa
addr16
dec
pop
xor
mov
xchg
add
or
xchg
lcall
test
enter
jmp
cmpsl
push
lcall
aas
pop
push
push
push
out
loopne
loopne
pop
or
test
push
nop
out
dec
cmp
fwait
mov
iret
mov
add
in
push
sub
push
mov
sarl
pushf
jl
fstps
jno
arpl
mov
mov
mov
fcoms
jmp
mov
lahf
popa
pop
sub
jg
stos
mov
push
sub
cmp
push
cmp
shlb
cmp
xor
cmc
test
xor
xor
push
add
out
and
loopne
pusha
sbb
leave
pop
adc
mov
cld
inc
push
in
aaa
dec
push
jne
repz
adc
pop
inc
popf
pop
cli
data16
aas
xor
inc
xchg
inc
mov
inc
mov
int3
pop
and
fldt
pop
into
test
popf
mov
mov
lds
stos
aaa
sub
cmpsb
mov
xchg
cwtl
clc
push
xor
push
mov
xlat
dec
pop
and
xor
fdivs
ja
sahf
ljmp
cmpsl
rcrb
mov
mov
jmp
cli
jmp
mov
or
mov
rcll
imul
std
sub
adc
push
sbb
ds
inc
out
add
mov
cmp
push
iret
add
gs
lret
std
leave
push
mov
sub
mov
mov
mov
addr16
or
pop
cmpsb
lods
inc
arpl
or
add
mov
inc
cwtl
sub
xor
push
inc
mov
scas
sbb
jns
out
cmpsl
pop
cmpsb
shl
adc
cmp
test
lods
add
dec
movsb
add
or
cmp
jb
jne
jo
out
fucomi
movntps
in
jbe
fs
mov
push
push
into
xchg
sbb
stc
lret
cmp
insl
lret
das
ds
sbb
into
ss
fwait
mov
or
mov
push
inc
mov
cmp
fnsave
and
xor
or
cs
sub
inc
in
lods
loopne
sub
push
into
mov
xchg
mov
mov
lahf
call
pop
pop
je
sbb
int3
or
push
cmp
sahf
mov
jne
and
mov
sub
jg
inc
mov
jnp
fiaddl
xchg
dec
data16
push
popl
pand
into
mov
jne
icebp
xchg
call
fs
dec
cmc
arpl
fs
imul
shll
fnstsw
imul
xor
push
movl
leave
cwtl
mov
xchg
or
push
sub
enter
je,pn
xchg
cmpb
int
pusha
xor
sub
or
push
hlt
jecxz
inc
imul
insb
dec
iret
cmc
shrb
insl
loopne
leave
cmpsb
push
adc
stos
pop
lods
add
pop
xor
mov
mov
hlt
xchg
std
sub
pop
hlt
jp
insb
inc
cmp
inc
xchg
mov
adc
push
fisubrs
inc
imul
aad
dec
adc
sbb
gs
jmp
movsb
adc
mov
xchg
dec
aas
insb
loop
jb
jg
or
sbb
jne
fwait
mov
aas
jp
or
in
xchg
and
sbb
add
repz
push
xor
adc
in
push
or
out
and
xorl
mov
dec
aam
enter
in
mov
sub
jmp
add
imul
lcall
rcr
out
adcb
mov
nop
test
jae
pop
insb
cmp
cli
and
movsl
ficomps
movsl
mov
cwtl
jnp
cmp
push
cmc
fs
pop
xor
jp
js
or
fadds
daa
jnp
dec
cmp
cmc
mov
mov
pop
aas
dec
dec
mov
mov
pop
int3
push
aas
cmp
mov
aaa
lods
fimuls
loop
pop
pop
pop
cmp
lea
dec
cmc
call
or
push
sbb
add
xor
popf
jecxz,pt
lcall
ja
shrb
and
and
pop
aaa
mov
mov
pusha
out
sahf
jmp
out
icebp
repz
outsb
push
je
in
js
cmp
xor
addr16
mov
add
fmul
sbb
fwait
sti
dec
movsb
and
mov
cmpsb
jbe
cmpsb
mov
outsl
out
mov
jmp
xor
inc
cmc
clc
mov
lods
pop
inc
dec
je
cmpsb
mov
jno
pushf
inc
lock
jp
test
cmp
daa
sub
push
inc
jnp
adc
sbb
clc
or
pusha
into
dec
repnz
and
push
out
lcall
add
aas
aad
rcll
dec
out
push
jo
sbb
jns
jae
popa
ret
in
lcall
adc
popf
dec
pop
cmc
aad
movsl
adc
sbb
push
leave
and
mov
outsb
jmp
into
jbe
xor
outsl
call
ds
sub
fidivrs
pushf
sbb
shlb
test
test
xchg
int3
add
sub
pusha
cmp
dec
dec
lods
mov
mov
mov
or
scas
daa
jbe
outsb
clc
push
sub
je
cld
ret
scas
mov
outsb
pop
xchg
sbb
test
pop
je
xchg
dec
lret
std
and
insb
mov
xchg
adc
jl
add
jne
lret
lock
outsl
pop
mov
jp
pop
cmp
xchg
flds
cld
sub
push
and
fiadds
leave
popa
pop
push
or
jnp
or
inc
cmp
inc
enter
andl
fimull
mov
jle
push
insl
in
je
push
call
and
in
jns
notb
dec
sub
outsb
loopne
xchg
stos
sub
inc
int3
adc
sti
push
pop
jne
mov
push
imul
sbb
mov
icebp
or
in
les
sub
sahf
jns
in
lahf
sub
sbb
pop
dec
aaa
pop
pushl
jno
sub
add
and
hlt
js
jge
ds
lds
push
in
mov
stos
xchg
sti
daa
hlt
cltd
mov
dec
adc
popf
pushf
shlb
push
cmp
pop
mov
dec
sbb
lock
mov
xor
or
cld
test
clc
adc
jg
test
sbb
loop
mov
xchg
bound
xchg
stc
sbb
icebp
fdivrs
fadds
mov
je
mov
or
out
pop
inc
jmp
dec
cltd
cmc
cmpsb
in
lea
or
mov
jbe
jno
pop
lret
sub
scas
lods
lea
lcall
or
out
testl
insb
and
lods
aas
mov
ret
mov
lcall
adc
cmpsb
clc
daa
dec
ja
adc
sbb
js
pop
imul
jge
cld
fwait
sbb
bound
sub
inc
adc
jg
adc
neg
sub
mov
lock
or
repnz
jbe
cs
push
and
xor
cmc
cmp
mov
lds
cmp
inc
lds
adc
sahf
stos
ja
rcll
xchg
jle
or
shlb
mov
hlt
adc
cwtl
lcall
pop
mov
jne
adc
add
dec
pop
jae
mov
add
sub
out
std
push
test
jo
push
push
sub
dec
call
mov
adc
push
push
and
jl
or
dec
mov
fwait
cwtl
icebp
inc
notl
push
inc
lea
or
aas
lock
bound
dec
xor
pop
sub
adc
shrl
pushf
cwtl
rol
xchg
cmp
sbb
ljmp
jge
and
div
cmp
jnp
jns
out
xchg
push
call
scas
adc
jmp
sub
push
stc
mov
sub
popf
sbb
js
pusha
outsb
dec
mov
lahf
int3
es
mov
push
lret
dec
test
lods
popa
pop
xchg
jne
pop
popa
movsb
push
scas
cltd
std
and
xchg
push
or
sub
add
inc
sbb
ret
hlt
jno
cli
cli
arpl
jo
stc
lcall
movsl
cld
pop
pop
pop
cmpsl
dec
inc
pop
loope
rolb
cmp
mov
shr
push
xor
or
rolb
fdivs
or
xchg
adc
ja
mov
std
mov
or
mov
sub
cmp
push
push
rorb
es
ja
jecxz
xchg
scas
mov
xchg
mov
jle
pop
push
movsl
das
xchg
add
mov
xchg
or
testl
data16
lret
jecxz
or
push
xchg
fdivl
and
push
arpl
scas
adc
fistps
push
sub
flds
ljmp
popa
in
cld
inc
xchg
jo
dec
mov
movsl
movsl
pop
lds
pop
clc
lds
cs
inc
cmc
cmc
pop
or
int
and
sti
sbb
into
xchg
cmpsl
sub
int3
filds
mov
out
adc
ret
xor
inc
or
adc
xchg
jb
std
aad
out
or
cmpb
mov
inc
mov
adc
lds
outsb
loope
mov
inc
pop
test
rcrb
or
add
or
push
push
jo
out
mov
cmp
std
mov
mov
dec
imul
jg
mov
sub
sbb
iret
das
sbb
add
mov
inc
lods
lock
jb
cmp
mov
lods
sub
repnz
js
jmp
sbb
xor
dec
pop
aad
into
pop
adc
jmp
popf
roll
icebp
les
push
mov
cwtl
xchg
pop
dec
in
adc
push
leave
pop
adc
cmpsl
push
add
sahf
stc
xor
stos
out
xchg
and
es
xchg
imul
in
mov
stos
loope
xlat
lods
sub
mov
and
adc
leave
fisttpl
pushf
add
push
loopne
adc
ret
sbb
add
mov
pop
mov
lea
push
mov
push
lods
push
push
jae
lods
loopne
push
je
subb
roll
arpl
xchg
mov
dec
cmp
and
jo
pop
in
inc
int
adc
mov
push
xchg
bound
stos
fs
dec
mov
xchg
lcall
mov
xor
stos
jns
inc
mov
das
dec
or
cmp
jne
cs
sbb
lret
ret
cli
inc
imul
push
fidivs
call
or
add
clc
pop
imul
aad
cmp
sub
loopne
mov
jns
shll
mov
hlt
rcr
add
add
push
xor
xchg
push
cmp
mov
inc
pop
lahf
inc
pop
sub
jle
sbb
inc
outsb
jne
sbbl
mov
outsw
mov
xchg
into
je
lods
jns
add
fs
jbe
adc
dec
in
mov
fimull
in
in
test
mov
sbb
add
sub
movb
adc
repnz
mov
pop
jnp
ljmp
pop
jbe
dec
xor
adc
bound
xor
lods
cmpsl
roll
cld
es
test
cmp
subb
loop
shr
rorb
ljmp
xor
jmp
add
xor
pushf
scas
mov
mov
add
add
mov
imul
inc
shlb
test
inc
stos
xchg
lret
daa
imul
dec
pop
mov
jb
sub
out
ja
ljmp
jnp
imul
and
fcoml
or
jo
pop
lea
stos
arpl
jg
inc
stc
push
dec
loop
sti
test
mov
sub
pop
add
notl
mov
mov
bswap
les
into
es
or
or
lahf
scas
call
jp
xor
mov
gs
cmp
iret
xchg
inc
adc
fucomi
mov
nop
ret
fadd
and
scas
adc
stos
mov
sub
xor
mov
ja
dec
dec
sbb
add
pop
sahf
inc
bound
mov
mov
push
mov
xchg
out
mov
aas
mov
scas
cmp
pop
test
in
jb
in
add
jne
repz
push
dec
fucom
divl
mov
sub
pop
and
mov
xor
xor
jno
mov
adc
outsl
rcrl
dec
into
cmp
leave
mov
loope
and
push
jecxz
sbb
push
xchg
loopne
cmp
push
sbb
fs
and
cmp
ss
jmp
lods
cmp
or
cmp
fld1
enter
inc
out
inc
jae
inc
xchg
jb
mov
cmp
and
fwait
cmpsb
sbb
shl
jle
and
mov
dec
or
dec
sub
inc
cmpsb
hlt
js
pop
movsb
xchg
sti
xor
mov
xor
nop
inc
push
imul
jl
lds
ds
sbb
xor
xor
push
adc
sbb
aaa
pusha
je
iret
xor
imul
dec
imul
xchg
add
and
lods
xchg
and
fwait
out
aad
inc
sbb
enter
push
sbb
push
add
mov
je
incl
movb
and
sbb
bound
inc
aam
xchg
lret
imul
sub
jno
dec
xorl
push
mov
inc
dec
xchg
xor
xor
pushf
hlt
add
xorb
or
mov
xor
lret
push
push
dec
sub
je
xor
jp
push
mov
sarl
addr16
int
sti
outsl
jnp
xchg
jno
cwtl
dec
pop
pop
xchg
jp
xchg
pop
dec
fcomp
mov
mov
jmp
shll
xchg
movsb
mov
cli
mov
cmpsl
pop
pushf
jmp
data16
faddp
sbb
adc
push
repnz
outsb
imul
adc
xor
loope
insl
push
pusha
sarb
pushf
dec
jnp
lret
xor
add
mov
out
cmp
mov
ffreep
sub
ret
and
movsl
fwait
xchg
ret
push
or
mov
lahf
or
add
jbe
push
sbb
subb
add
mov
mov
pop
pop
fidivs
in
mov
out
xchg
xor
test
push
xchg
lcall
popa
jecxz
pop
movsl
clc
dec
jnp
cmp
jb
scas
xor
nop
push
inc
jecxz
dec
xor
ret
mov
and
in
xchg
jp
push
mov
jno
inc
mov
mov
ret
lret
cmpsb
mov
lahf
sbb
push
jmp
ret
fwait
dec
cmc
and
sbb
fdivp
jb
pop
jo
js
and
into
es
xor
addb
loopne
ret
cld
ljmp
pusha
cmc
negl
xchg
inc
dec
jnp
cmpsb
and
lea
xchg
loope
scas
xchg
int3
ds
xor
and
movsb
pusha
hlt
mov
mov
scas
pop
mov
xchg
mov
inc
or
or
jno
imul
int3
mov
push
clc
test
mov
je
add
sub
mov
insb
scas
fisubl
loopne
cmc
or
dec
lahf
das
fdiv
add
jo
jmp
xlat
add
jl
pop
and
test
in
mov
sub
sbb
cmp
mov
push
cs
mov
dec
sahf
addr16
dec
cltd
test
lods
outsl
mov
imul
mov
movsl
xchg
mov
shlb
mov
ret
push
add
mov
mov
and
imul
add
bound
xor
push
std
imul
lea
or
mov
clc
pusha
push
lahf
stos
inc
or
xlat
jnp
mov
pop
cmpsb
aas
sbb
and
push
sarl
dec
mov
mov
sahf
lods
imul
cmp
sbb
and
xchg
imul
xor
sub
orl
jmp
filds
gs
add
xor
xor
lods
adc
sub
mov
cmp
shl
in
adcb
adc
or
or
inc
icebp
mov
aam
sub
scas
pushf
add
inc
inc
lahf
xchg
sub
orl
push
sbb
pop
mov
pop
xor
fsubrl
call
add
and
ret
mov
push
cwtl
or
jae
mov
jge
loopne
jns
pop
jno
arpl
bound
pop
inc
fstps
mov
inc
or
inc
fnstenv
dec
cltd
sub
std
or
lods
pop
and
ja
bound
add
pop
loope
mov
enter
cmc
adc
in
jecxz
xchg
je
push
push
cs
add
std
out
sbb
jecxz
pop
mov
xchg
iret
notl
add
cwtl
pushf
movsb
mov
popf
push
sarb
push
push
lret
mov
insl
pushf
sub
and
subl
fucom
movsb
dec
fsubrl
iret
subb
insl
negb
adc
inc
and
imul
addl
mov
iret
ret
xchg
leave
mov
inc
push
jp
test
shlb
call
lock
fwait
push
mov
lds
mov
xor
addb
roll
outsb
test
fisubrl
and
dec
push
out
int3
cmp
out
adc
inc
cmpsb
push
lods
fs
jnp
movsl
mov
mov
jecxz
daa
lret
loop
fisttpll
xor
fwait
and
into
shrl
mov
push
add
xor
mov
mov
push
xchg
mov
mov
sub
mov
loope
mov
movsl
jae
cmpsb
pop
sub
dec
mov
pop
xchg
mov
and
mov
cltd
push
mov
sub
add
subl
icebp
mov
sub
inc
je
lds
imul
pop
gs
pushw
sbb
add
mov
notb
and
sub
in
mov
pop
mov
dec
mov
adc
jmp
shl
xor
fnstcw
and
jae
xchg
jge
mov
pusha
rcl
ja
adc
int3
sbb
mov
dec
bound
stos
push
xchg
xchg
lods
push
dec
jmp
push
aad
inc
lods
jg
loope
mov
aas
cmp
test
mov
push
movsl
lea
push
nop
in
dec
fbld
pop
shll
jge
sbb
dec
icebp
fldenv
jmp
leave
or
mov
scas
inc
loop
sarb
pushl
cmp
push
and
push
outsl
jne
movsl
shll
rclb
pandn
dec
aam
roll
daa
inc
xor
je
test
sti
in
push
out
xor
sub
inc
jb
inc
outsl
icebp
sbb
jae
in
pop
dec
pop
pop
shlb
out
dec
dec
jecxz
lret
ror
adc
inc
mov
add
pop
repnz
std
inc
dec
scas
pop
test
cmpsb
push
and
lods
andl
inc
pop
rorl
popf
or
cmp
push
lret
aam
movsl
cmpsl
cmp
lahf
gs
movsb
int
ret
mov
xchg
sub
jbe
cmc
inc
dec
mov
cwtl
bound
or
mov
mov
mov
cmpsb
mov
jmp
int3
or
inc
inc
inc
cmp
dec
fdivl
xchg
jp
sbb
inc
outsl
bound
lcall
add
pop
push
rcl
pop
pop
lock
mov
adc
mov
sbb
jnp
add
sbb
loopne
inc
test
int
movsl
loop
push
insl
sbb
mov
sbb
enter
scas
rcrb
out
push
ljmp
jecxz
cmp
arpl
jo
jmp
jp
sub
enter
cs
inc
pop
pop
fnstenv
push
popa
lods
sub
cltd
fdiv
pop
pop
mov
test
jns
push
out
mov
jns
aas
mov
outsb
adc
sahf
daa
outsl
je
and
loop
pop
inc
ret
cmpsb
inc
jge,pt
fs
cmc
in
sbb
xor
sbb
sub
insl
nop
sub
add
mov
nop
cwtl
or
add
sub
mov
xchg
sbb
adc
es
divl
cmovne
sbb
fistps
je
rorb
mov
or
mov
mov
rorb
int
ret
mov
cli
scas
xchg
cmp
adc
xor
cwtl
jle
mov
jp
jge
daa
push
inc
or
mov
push
sbb
jmp
lcall
push
fwait
pusha
dec
mov
outsl
adc
push
cmp
push
outsl
xor
loope
dec
ret
inc
insl
inc
or
rorb
sbb
cli
ljmp
mov
dec
jns
mov
insl
and
ljmp
and
inc
in
jmp
mov
or
pop
sahf
sbb
sahf
xchg
jmp
dec
push
sub
push
and
test
dec
stos
sub
sub
or
stc
rorl
pop
jmp
cmp
sub
inc
sbb
das
sbb
icebp
jns
aam
ljmp
dec
pop
fwait
jl
int
add
cltd
dec
jecxz
clc
push
adc
lea
sbb
adc
xor
testb
mov
fisttpl
bswap
mov
mov
mov
cmp
jbe
pop
testl
xchg
mov
mov
jle
push
test
sti
lea
and
jne
push
mov
js
fadds
xchg
movsb
xor
lds
andl
jg
dec
ret
push
xchg
pop
push
push
mov
cmpl
cmp
ds
les
shl
xor
jmp
fcoms
xchg
sbb
das
ja
leave
jge
cmp
pop
hlt
js
cmpsl
ret
xor
mov
jbe
fs
into
js
aaa
imul
jp
imul
insb
fcoml
mov
lret
cmp
sub
fwait
pushf
cmp
mov
clc
stc
push
or
push
sub
hlt
or
sahf
cmc
stos
leave
push
stos
cmp
sbb
adc
jne
or
jg
outsl
sub
xor
or
push
sub
sub
cmpsl
lret
dec
icebp
mov
xlat
sbb
add
stc
orl
jp
and
or
ljmp
imul
lcall
gs
aas
mov
and
push
insb
or
fstpt
fistl
lods
lods
bound
lcall
dec
mov
hlt
out
lea
mov
pop
mov
iret
sbb
sbb
inc
lret
mov
sbb
cmp
out
or
jnp
cmp
cmp
mov
push
push
pop
jle
xor
and
xor
cmp
lods
fwait
divb
andl
and
mov
lods
sub
xor
jb
into
push
ret
sub
mov
inc
pushf
dec
pop
dec
out
cld
or
xchg
add
xchg
cld
xor
xchg
in
repz
fisubrl
movsb
test
clc
jmp
aaa
mov
pop
pop
je
xchg
mov
lds
mov
popa
xor
cmpsl
xchg
out
stos
shrl
lods
stc
stos
lods
xlat
xchg
or
mov
in
jecxz
sbb
aam
ss
inc
add
dec
mov
inc
jno
andl
es
add
mov
fldt
arpl
adc
aad
je
inc
pop
push
gs
xchg
inc
jne
pop
pushf
in
pop
push
sub
jae
and
test
jae
pop
in
mov
scas
stos
test
push
mov
fidivl
cmpb
sbb
pop
sti
dec
nop
xor
and
stos
jbe
xor
cmc
mov
xor
aam
and
xchg
mov
inc
and
cmp
ret
leave
cmpsb
fsubl
push
out
in
fisubs
rcrb
mov
inc
dec
mov
icebp
jb
mov
cmp
sub
inc
inc
mov
cld
sti
adc
mov
stos
insb
sub
inc
gs
sub
call
lahf
dec
mov
popa
mov
popa
outsl
arpl
pushl
repz
int
scas
mov
addr16
mov
jl
jmp
push
dec
adc
sahf
jb
inc
or
xchg
cmpsb
xchg
dec
pop
add
mov
add
push
jns
fs
aas
or
push
jbe
leave
inc
les
js
cs
sbb
push
mov
jo,pn
mov
dec
cmp
in
add
jmp
mov
jge
movsb
shrb
jne
loop
mov
leave
or
xor
jae
and
cwtl
jnp
popf
out
adc
int3
xchg
mov
xor
inc
insl
cld
pop
pop
jne
orb
popf
pop
adc
xchg
sbbl
lds
add
cmc
imul
popf
xchg
jb
xchg
jge
out
jne
mov
jo
fimuls
repz
imul
lea
lods
dec
adc
lods
clc
sbb
add
movsl
insb
sbb
dec
mov
out
push
roll
nop
sbb
or
xchg
and
mov
or
cmp
xor
mov
or
and
lret
add
or
int
stos
mov
movsl
sbb
jl
adc
andb
inc
push
sub
arpl
mov
imul
je
jl
js
in
inc
push
jge
jns
iret
inc
mov
leave
add
mov
test
ljmp
popf
dec
or
mov
cmpsb
fdivrl
mulb
into
jge
pusha
mov
dec
rcrb
sbb
imul
sbb
xor
xchg
pop
mov
push
mov
jg
or
scas
cli
mov
cmp
xor
data16
adc
xchg
mov
rcr
push
pop
popa
add
jp
repnz
xchg
push
pushf
rcrl
dec
push
cli
scas
aad
push
mov
addl
ja
cmp
push
in
inc
push
aaa
cmp
xchg
adc
shrb
xchg
add
mov
dec
and
inc
cmp
loop
xlat
sub
inc
inc
add
and
jns
mov
jbe
stos
rcll
cltd
aad
fiaddl
jle
sbb
pop
sbb
add
imul
mov
adc
sub
lea
das
add
js
into
jle
in
ja
cltd
shlb
mov
cmp
cmp
push
or
cwtl
pop
shlb
adc
mov
pop
adc
cs
divb
bnd
shl
repz
pop
push
pusha
aas
and
jae
dec
in
scas
mov
jo
mov
xchg
mov
fistl
shlb
cmpsl
mov
inc
fwait
or
scas
push
mov
fcoms
rorl
mov
pop
push
rorl
xor
dec
cmpsb
pop
mov
daa
loop
dec
scas
ficoml
mov
pop
ljmp
mov
dec
xrelease
divb
adc
mov
loope
jo
or
fs
rcrb
dec
sbb
or
imul
movsb
outsl
sti
stos
mov
or
or
sub
into
out
xchg
cmpsl
lret
mov
push
cmp
jae
pop
sarb
dec
push
cmpsb
sbb
in
out
mov
pop
addl
je
das
jnp
test
jg
jnp
push
cmc
mov
adcb
movsb
test
xor
gs
out
rcll
pop
mov
mov
jne
xchg
add
sub
fsubl
xchg
mov
addr16
pop
jmp
dec
add
and
outsl
cli
or
jne
xor
add
icebp
pop
jnp
or
shrb
and
pop
and
xchg
popf
push
loope
insb
xor
xor
lret
dec
push
inc
xor
aad
lds
sbb
sub
pop
mov
xchg
cmp
ret
hlt
inc
cltd
js,pn
mov
cmp
mov
pop
jns
shll
xchg
or
lcall
insl
cmp
sub
push
mov
pop
push
cmpb
push
pop
ret
cmp
ds
push
and
aam
sbb
movsb
mov
daa
adc
lods
stos
movsb
jb
mov
push
or
fists
adc
mov
pop
inc
mov
fpatan
jnp
call
jl
jge
mov
faddl
rorl
push
mov
neg
sahf
mov
scas
cmc
dec
xchg
adc
push
mov
mov
pop
xor
or
mov
jnp
mov
pop
pop
mov
shrb
aaa
movsb
push
xlat
or
dec
sub
les
cmpb
xchg
lock
call
inc
sub
stc
fucomip
orb
sbb
adc
dec
lahf
icebp
adc
pop
mov
mov
mov
add
xchg
lock
mov
ja
inc
inc
xchg
cmp
mov
push
mov
mov
popa
jl
jns
inc
ret
filds
and
fwait
jge
mov
or
movl
in
pop
push
arpl
or
pop
inc
std
mulb
test
data16
xor
outsb
in
enter
enter
nop
sub
dec
or
pop
push
gs
out
sbb
pop
aam
rclb
pop
xor
mov
scas
daa
pop
scas
ss
insb
mov
fnstenv
loope
jp
movsl
popa
loop
ja
mov
and
shlb
lret
mov
adc
cmpsb
out
mov
add
mov
dec
out
out
and
dec
fldlg2
lds
outsb
dec
ficoml
sbb
frstor
inc
jge
cmp
push
aam
add
cld
mov
popl
sbb
cmpsl
out
insb
aam
repnz
jo
jo,pn
dec
cmc
scas
inc
jmp
mov
push
mov
out
jbe
mov
xchg
mov
jle
add
lock
loope
int3
push
push
mov
sti
inc
adc
lea
jb
jae
add
push
dec
or
shll
cmp
cmp
das
mov
rorb
cmpsb
mov
aas
andl
jne
fmull
xchg
add
jle
inc
rorl
inc
daa
cmpl
jno
lahf
in
popf
jl
mov
jge
std
scas
imul
jns
inc
jns
test
std
push
xchg
add
mov
sbb
lods
push
xchg
dec
inc
fistl
cmp
movsl
btr
jbe
sbb
arpl
cmp
hlt
lcall
sub
and
test
jge
sbb
pop
xchg
or
adc
add
cwtl
xor
lahf
mov
push
mov
adc
shll
or
sbb
or
out
rorb
out
mov
mov
mov
and
test
insl
insl
insb
out
xor
pop
insb
inc
pop
mov
or
cmp
lret
jns
jmp
jmp
xchg
pop
sbbb
cmpsl
lcall
data16
cmpsl
xchg
sbb
mov
test
pusha
test
xchg
mov
mov
ja
mov
addb
xchg
pop
test
aam
mov
lret
popf
dec
cmp
loopne
rcrl
push
push
imul
in
shll
push
sbb
jge
ss
icebp
decb
mov
fidivrs
mov
es
jle
or
daa
sub
push
dec
std
repz
es
mov
inc
mov
dec
sub
movsl
insb
jg
cmp
and
fadds
imul
insl
or
xchg
jecxz
int3
fcompl
out
stc
scas
fwait
push
sti
mov
jae
lret
or
neg
mov
enter
out
movsl
sti
gs
or
pop
sbb
jbe
sbb
js
push
arpl
in
push
inc
pop
xlat
cmp
notl
cli
push
xor
lods
fwait
pop
mov
mov
cwtl
test
jecxz
xor
out
mov
ljmp
out
or
jle
jo
mov
xchg
xchg
and
icebp
pop
cmp
adc
imul
loop
xchg
arpl
add
in
loop
lods
and
push
sub
in
xor
out
sbb
cmc
jnp
xor
out
lahf
sbb
cmpl
inc
test
and
jecxz
mov
imul
or
pop
daa
dec
mov
jb
cmp
jl
pop
push
nop
mov
insb
or
pop
es
mov
fldcw
sbb
scas
loop
shl
ror
mov
or
pop
xor
push
bound
icebp
cmp
fstp
mov
xor
enter
popa
and
sub
std
mov
mov
dec
or
lock
mov
and
outsl
gs
lds
iret
sub
outsb
ja
das
stc
push
ret
sub
mov
leave
arpl
add
and
sti
mov
jle
aaa
sbb
lock
xorb
mov
pop
inc
mov
rorl
adc
data16
jno
aaa
pop
lods
in
lahf
dec
pop
cmp
push
into
data16
jmp
mov
and
lods
sub
data16
popa
jbe
push
imul
inc
pop
or
lret
testl
add
arpl
mov
pop
jo
pop
cmp
mov
push
pop
js
scas
adc
call
rorb
fildll
sbb
lret
sub
mov
ffree
loop
or
notb
loop
int3
inc
loopne
jns
xor
jecxz
loope
rcll
sub
stc
jle
fcmovbe
popf
repz
movsb
insb
sub
and
popa
aaa
scas
inc
dec
out
jb
insb
hlt
notb
aaa
pop
cmpsl
sti
pop
dec
mov
or
adc
push
repz
ljmp
inc
pop
dec
adc
xchg
shll
enter
int
sbb
xor
push
es
push
jle
les
loopne
pop
arpl
outsl
mov
dec
inc
dec
add
xchg
push
jmp
jnp
dec
sbb
sub
ljmp
jae
insl
clc
insb
jae
scas
jo
ljmpw
push
cli
mov
stos
js
dec
adc
cld
push
xor
cmp
add
sbb
push
in
mov
mov
jb
ja
and
mov
dec
sub
in
out
add
cmp
pop
aam
and
jmp
inc
ret
je
ja
push
or
push
xorl
xor
pop
mov
mov
xor
jbe
sarb
stc
sahf
and
xchg
bound
mov
subb
mov
xchg
add
xor
arpl
ret
push
mov
scas
test
sbb
int3
cld
fldcw
pusha
bound
jmp
pop
xor
or
js
lret
aas
and
data16
inc
arpl
push
aad
cwtl
test
adc
push
add
frstor
mov
inc
push
push
sti
fcmovnb
sbb
sub
std
xor
push
sbb
or
or
jne
in
mov
daa
mov
addl
pop
xchg
in
or
xchg
mov
inc
sarb
scas
and
pop
cltd
les
xchg
jae
test
mov
adc
test
or
mov
cmp
es
sub
xor
daa
xchg
pop
imulb
jae
adc
jbe
iret
cmpsl
jecxz
js
push
pop
loopne
push
mov
nop
xor
roll
cli
jg
pop
adc
or
push
out
iret
scas
pop
rcll
mov
cmp
mov
cmp
push
xor
mov
cld
rorl
shr
mov
mov
sub
inc
sahf
adc
sub
stc
or
xchg
fsubrl
aaa
mov
clc
fsts
test
cmp
call
mov
sbb
loop
dec
and
das
mov
adcb
roll
bnd
jo
ds
test
jg
or
pop
or
sub
shlb
dec
dec
daa
inc
jbe
xorl
xchg
fidivrs
xchg
xchg
cmp
jo
int3
xor
insb
out
sbb
lahf
cmp
scas
lock
mov
xor
mov
sbbl
or
pusha
cli
out
dec
xchg
mov
mov
mov
clc
or
aas
jb
mov
int
negl
inc
sahf
cmp
or
sbb
push
adcl
call
pop
add
imul
pop
addl
cmc
mov
fildl
lock
inc
push
inc
inc
xchg
and
sbb
xchg
pop
add
test
cmp
ret
shl
ds
into
cmpsl
mov
enter
push
pop
scas
jmp
lods
sbb
mov
xchg
xlat
les
sbb
lods
stos
and
lods
fs
push
sub
outsb
cmp
add
adc
rcrl
or
mov
add
jbe
fidivrl
stos
rcrb
fsubr
int3
cmp
sbb
mov
mov
xchg
and
ss
pop
bound
cmc
hlt
div
icebp
lock
mov
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
call
sub
xor
xor
xor
cmp
cmp
mov
inc
pusha
sub
int
lret
dec
pop
jbe
fimull
xor
jne
inc
mov
jp
mov
lcall
add
daa
mov
in
inc
insb
adc
dec
cmpl
or
push
aam
ja
jl
pop
test
subb
repnz
jmp
or
cs
xchg
adc
outsl
mov
mov
out
jmp
hlt
mov
popf
test
inc
inc
pop
loop
sub
or
js
push
inc
push
data16
mov
mov
jp
lret
icebp
loopne
data16
imul
jo
lcall
stos
mov
inc
mov
adc
cltd
xchg
inc
cmp
mov
or
push
sbb
fwait
cmpl
call
push
inc
jle
mov
push
inc
mov
in
cmpsb
pop
mov
mov
push
or
mov
fistpl
aam
jo
gs
add
xor
call
in
ds
cmpsb
loope
push
cmp
cmp
and
je
mov
sar
or
lea
idivl
loop
fsubrl
and
aad
xchg
inc
push
test
fbld
pop
push
mov
jmp
pop
imul
inc
dec
movsl
scas
mov
push
inc
mov
push
das
push
imul
xchg
sbbl
cltd
ja
mov
sub
nop
es
sub
pop
sbbl
dec
scas
and
dec
add
in
mov
sbb
movsb
mov
push
jle
sti
loope
xor
push
push
inc
repnz
negl
test
pop
in
mov
mov
mov
cs
mov
aaa
or
js
mov
push
add
push
xchg
xchg
nop
pop
insb
loop
ds
adc
out
ficoms
cmp
arpl
loopne
imul
lods
aam
das
add
bound
pop
pusha
lahf
and
sbb
adc
lea
jle
mov
das
push
scas
dec
fndisi(8087
roll
adc
dec
test
lahf
incb
leave
inc
call
movsb
mov
das
lds
jns
gs
mov
inc
and
inc
hlt
pop
pop
pop
pop
ficoml
push
push
push
mov
test
cmpsb
scas
mov
mov
mov
lods
test
mov
lret
rol
ret
ret
rol
iret
fstpl
cmp
xlat
fcoms
inc
sbb
jecxz
push
nop
insb
pushf
int
popa
or
outsb
mov
loopne
div
testb
fsqrt
inc
adc
inc
sbb
inc
adc
push
sbb
dec
mov
cmp
dec
aas
xchg
push
push
push
xchg
adc
or
jp
popa
adc
cltd
and
pop
dec
jg
insb
jo
pop
push
inc
sub
sub
jge
jg
sub
mov
rcl
aam
dec
aam
lcall
mov
inc
adc
test
sbb
dec
dec
mov
stos
and
xchg
adc
sbb
lret
ss
adc
in
fistps
lahf
cmp
mov
cmp
cmp
and
sbb
sub
and
call
daa
hlt
sub
imul
daa
push
xchg
int
push
lods
leave
fwait
pop
adc
rcll
sbb
add
icebp
push
shll
lds
scas
mov
cmp
adc
lcall
push
fidivrs
inc
push
push
fstps
ss
push
and
mov
inc
adc
add
xchg
mov
mov
cmp
cmp
add
pop
sbb
pop
ret
arpl
fwait
pop
fcoml
inc
inc
pop
cltd
sbb
xchg
data16
dec
ret
mov
mov
push
into
int
jae
mov
sbb
ja
mov
cmp
dec
in
xor
lods
in
fwait
aas
pop
shlb
pop
mov
js
aas
cwtl
adc
adc
inc
jmp
sbb
lods
stc
dec
sbb
ret
test
test
in
outsl
xor
xor
mov
outsb
sti
xchg
insl
or
push
dec
xchg
sbb
mov
or
pop
mov
movsb
rcrl
std
xlat
cmc
dec
hlt
and
adc
pop
js
rorl
hlt
in
in
les
cmp
lock
cmpsb
dec
je
movsb
jcxz
enter
out
outsl
dec
push
stos
or
frstpm(287
mov
sbb
lcall
push
push
adc
shlb
push
push
sub
aaa
mov
and
lock
arpl
pop
mov
pushf
test
add
outsb
jmp
mov
push
adc
xor
push
lea
into
lcall
pusha
mov
rcll
or
xchg
mov
add
add
adc
in
rep
clc
shrl
outsb
mov
pop
loope
pop
loope
arpl
or
push
push
adc
push
xor
adc
cmpsb
inc
mov
inc
leave
dec
popf
js
jns
pop
jbe
xor
mov
jbe
into
xchg
addr16
mov
jp
xor
out
scas
stos
pop
adc
xchg
push
inc
adc
or
push
je
xor
push
or
enter
cmpb
and
jne
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
js
xor
or
or
push
or
push
pop
add
sbb
sbb
push
pop
sbb
adc
adc
push
pop
adc
dec
jbe
nop
pop
jo
xchg
inc
imul
inc
jle
cwtl
pop
push
inc
imul
pushf
popa
inc
dec
nop
pop
inc
jbe
push
inc
jle
push
pop
jp
dec
dec
pushfw
dec
mov
addb
test
push
les
cmp
cmp
add
push
fidivl
fdivs
cs
sub
sub
sub
es
and
and
and
push
fcompl
sbb
adc
and
and
or
add
add
lret
dec
mov
shlb
aam
shlb
in
mov
scas
clc
lods
stos
in
loop
loopne
out
pushf
mov
scas
fwait
test
xchg
mov
nop
lea
xchg
addl
ja
inc
inc
inc
pushf
jno
outsl
mov
imul
arpl
sahf
pop
in
loop
loopne
out
popa
bound
loopne
out
in
dec
ljmp
inc
sarb
mov
mov
mov
xor
inc
das
sbb
sub
inc
and
jp
dec
sbb
push
pop
push
adc
sub
cmp
cmp
cli
cs
and
and
shlb
fidivrs
aam
lret
movb
inc
inc
inc
inc
dec
dec
inc
dec
xchg
inc
push
dec
push
dec
push
jbe
jl
jb
jo
outsb
pusha
push
bound
pop
es
and
mov
je
jbe
js
jp
jl
jle
sub
repnz
xchg
mov
mov
mov
mov
nop
sbb
pop
pop
pop
pop
push
cwtl
or
add
mov
push
test
stos
adc
mov
mov
mov
je
jbe
mov
sbb
and
and
cs
and
cmp
cmp
shrl
push
rcl
fistps
adc
push
fcmovbe
fmul
fdivp
loopne
loop
in
out
call
fucomip
repnz
hlt
mov
mov
xor
jg
gs
ss
cmp
pop
cmp
sub
inc
xor
dec
aaa
dec
int
lret
dec
fstps
fistl
pop
iret
pop
lds
shll
int
lret
data16
push
insb
shrl
jo
jb
mov
mov
lods
jg
jge
sbbl
xchg
popa
mov
jge
jnp
imul
push
push
push
lahf
xchg
popf
mov
mov
mov
stos
subl
mov
mov
mov
jb
or
pop
xchg
xchg
lds
iret
stos
int
sarl
aad
cs
sub
imul
jmp
jmp
push
repz
icebp
pop
negl
dec
sti
dec
stc
inc
incl
repz
aaa
sti
hlt
cmc
idivb
icebp
ds
cmp
inc
fwait
inc
cltd
inc
cmpsl
inc
lods
dec
mov
dec
movsl
push
stos
push
test
pop
push
xchg
nop
xchg
xchg
pop
insl
bound
jno
jg
jne
dec
push
pop
jb
jo
jbe
je
jp
js
jle
mov
dec
dec
or
xlat
test
mov
mov
mov
mov
xchg
sti
nop
stc
xchg
out
in
lcall
and
imul
cmp
adc
adc
mov
add
add
ud2
add
push
enter
lret
add
shll
sarl
fldcw
fistl
loope
jecxz
in
jecxz
and
and
std
cmc
jecxz
loope
out
repz
fyl2xp1
xlat
sti
pop
aaa
add
cmp
jnp
or
or
dec
pop
dec
adc
push
aaa
push
cmp
pop
das
pop
and
gs
in
test
out
std
imul
ja
jno
jae
jge
jg
jns
jnp
test
xchg
inc
addl
inc
inc
mov
inc
xchg
inc
xchg
dec
nop
dec
xchg
jns
jg
jne
jae
push
movsb
push
cmpsb
pop
mov
add
mov
mov
mov
mov
mov
xchg
mov
icebp
sar
add
push
into
icebp
enter
aam
cltd
rolb
fiadds
in
out
loopne
loop
in
xchg
push
jae
and
hlt
jae
popa
rep
icebp
pop
lcall
push
sti
push
stc
incl
mov
adc
js
leave
inc
fcoms
addl
jae
push
add
push
rclb
pop
lea
pop
xchg
jo
jne
and
popa
or
sbb
or
addr16
jo
jle
jl
jp
js
xchg
andb
mov
xchg
fcoms
negb
cmpsb
das
movsb
imul
mov
jl
xchg
mov
mov
fwait
mov
mov
mov
enter
int3
jp
sbb
ds
test
pop
sbb
fadd
shl
rorb
ljmp
shl
popa
out
loope
jecxz
mov
cmp
sub
pop
and
pop
add
insl
into
cmp
and
push
jge
icebp
lock
mov
idivb
sbb
mov
xor
xchg
stos
fsubrs
test
inc
inc
sub
sbb
les
xchg
test
adc
jl
or
sbb
jp
jge
repnz
mov
pusha
mov
mov
xchg
mov
push
repz
push
cmpsb
xchg
popf
stos
out
test
stos
jns
insb
xlat
mov
mov
mov
imul
lds
inc
ret
or
js
adc
pop
faddl
mov
mov
inc
jns
or
out
imul
lods
inc
and
daa
out
in
sti
pop
stc
xor
xor
daa
hlt
or
hlt
lock
fdivrs
pop
mov
cmp
jbe
cmpl
pop
cli
xor
mov
mov
lods
aas
sbb
mov
rcrl
cmpsl
push
out
xchg
mov
mov
sti
mov
fwait
mov
ret
mov
jbe
jno
jo
outsb
imul
arpl
xchg
adc
test
addb
jge
inc
test
mov
outsl
push
ret
xor
cmp
lea
enter
int3
in
jecxz
pushf
dec
push
aam
fidivrl
push
icebp
and
bound
fwait
add
or
call
pop
lods
in
mov
idivb
repz
adc
adc
or
cmp
jae
enterw
cmp
repnz
sti
je
call
dec
stos
out
shrl
sbb
push
cltd
lcall
mov
mov
bound
outsb
cmp
pop
push
push
sub
or
imul
push
js
xchg
test
addb
inc
inc
inc
sbb
sub
jno
mov
into
xchg
sbb
bound
mov
loop
out
mov
adc
js
popa
lret
cmp
lret
int3
ffreep
jmp
clc
fadds
shlb
fcmovnbe
jmp
jmp
mov
out
push
and
std
pusha
repz
icebp
dec
testl
fidivrl
leave
xor
ss
xor
adc
sbb
sub
inc
out
inc
loop
xchg
pop
xchg
and
mov
sub
cltd
cmpsb
test
stos
lcall
jno
push
mov
xor
push
xchg
jl
out
sti
stos
stc
lock
mov
call
mov
mov
scas
repz
rcll
pop
pop
lahf
or
push
js
inc
dec
loope
cmp
ficomps
jmp
mov
and
or
and
lret
in
not
pop
rorl
aad
fisttpl
fcom
fsubrp
fsubl
dec
lods
in
daa
test
xor
sub
adc
xchg
jmp
pop
sti
enter
add
push
cmp
addl
daa
psllq
dec
fstl
push
dec
mov
pop
pop
mov
push
mov
push
pop
imul
and
pop
and
jp
js
jle
and
jo
jbe
je
mov
mov
test
jg
mov
jecxz
rcrb
push
fwait
cs
es
push
inc
mov
test
js
negb
pop
xchg
pop
jge
dec
iret
dec
and
inc
push
mov
inc
mov
push
mov
pop
lret
jae
push
test
dec
rcrl
mov
fbld
lret
clc
lahf
cmp
jbe
push
inc
or
push
ss
pop
stc
adc
sub
xchg
cltd
hlt
jnp
or
jl
mov
inc
pop
inc
shll
lahf
dec
stos
dec
addr16
lock
pop
push
rcll
in
lea
imul
stos
aaa
popa
sbb
gs
fs
jp
jl
jle
jo
jb
je
xchg
leave
mov
gs
dec
leave
fldl
pop
test
leave
cwtl
mov
mov
adc
pop
pushf
ja
sbb
rolb
push
push
or
in
xchg
rclb
cmp
or
in
out
std
ja
sub
sbb
ss
fmuls
fildl
ljmp
fs
shr
mov
cmpsb
repnz
jbe
stc
jg
push
xor
push
and
cld
fstpt
outsb
inc
lock
dec
jmp
push
fwait
xchg
xchg
mov
insl
pop
jbe
push
addr16
gs
insb
lcall
jbe
inc
addr16
jns
lods
sub
jno
jae
jne
ja
mov
or
pop
mov
jae
addl
cli
pushf
loop
aaa
nop
js
addr16
sahf
push
insb
insl
mov
test
mov
call
mov
int
shll
bswap
push
int3
push
ret
insl
popa
inc
sbb
ficompl
outsl
adc
ljmp
loope
xchg
ss
out
dec
and
jae
dec
in
cli
dec
pop
cmp
jnp
sbb
sbb
or
or
xor
cmp
aaa
pop
xor
cmpsb
mov
es
aaa
inc
imull
push
xchg
icebp
pop
test
stos
movsl
leave
clc
out
mov
sbb
sarb
mov
jp
xchg
rcll
cld
mov
mov
xchg
test
aad
andb
int
xlat
or
lfs
imul
cwtl
or
or
mov
mov
pop
sub
es
add
movsb
dec
test
pusha
mov
jns
jl
ret
loope
repz
cld
fsubr
into
lahf
add
mov
pop
imul
sub
lods
fstpl
inc
fnstcw
fidivrl
sub
es
loop
in
out
clc
pop
cli
ss
cmp
jmp
add
test
gs
mov
xor
xor
xor
dec
jge
dec
or
sbb
icebp
mov
mov
push
insb
push
jmp
lods
or
jbe
ds
je
xchg
loopne
loope
sub
and
cld
popa
das
jge
repz
ficoml
or
lea
xchg
dec
mov
ja
fwait
dec
xchg
cmp
mov
gs
cwtl
jl
pop
mov
aas
pop
push
jae
adc
pop
mov
mov
ret
jnp
ret
cvtdq2ps
iret
ret
mov
lret
push
into
lret
fs
rcrb
not
lock
adc
pop
sbb
add
out
mov
cmp
repnz
cld
aas
es
or
and
mov
scas
ret
out
test
jns
or
dec
sub
fstl
push
popf
pop
adcb
inc
push
push
push
cmp
pusha
in
mov
pop
jl
jle
jo
jb
je
jbe
mov
mov
mov
imul
lret
rorb
lds
das
mov
stos
sbb
das
test
pop
xor
lret
mov
mov
enter
dec
mov
cli
mov
mov
int
iret
inc
leave
dec
lret
jp
or
mov
out
lods
shrl
xor
xlat
daa
ret
and
push
xchg
sbb
mov
adc
jp
and
or
test
push
dec
sub
sbb
and
loop
jg
add
fstpt
push
mov
jne
fnstenv
jbe
andb
fcomps
pop
and
push
adc
mov
popl
or
inc
inc
sbb
jle
jo
sub
push
lahf
cli
push
and
xchg
sub
mov
push
shll
push
push
mov
adc
xor
jp
push
lods
push
dec
arpl
cwtl
mov
mov
mov
mov
or
push
pop
jae,pn
into
mov
or
data16
cmp
and
int3
xlat
sub
std
loope
pushf
and
inc
pop
jecxz
adc
adc
or
jle
in
ret
repz
mov
pop
fs
in
xor
mov
sbb
sbb
mov
jp
int
xchg
andb
popa
stos
ret
pop
mov
int
leave
xor
xor
je
inc
and
and
mov
mov
or
xacquire
jg
mov
sbb
xchg
mov
cmpsb
popf
cmp
imul
add
mov
mov
movups
movsl
mov
int
iret
jne
jl
rol
ja
add
aas
and
push
sbb
test
repz
scas
cmp
leave
mov
addr16
inc
bound
pusha
imull
dec
sti
and
enter
mov
mov
fstps
cmp
cmp
push
out
loop
sbb
dec
ret
rcl
adc
inc
push
imul
pop
mov
lock
popa
and
insl
loop
fldcw
jbe
or
mov
pop
push
inc
int
sbb
adcl
pop
cltd
mov
daa
sub
xchg
cli
xchg
loop
or
push
sbb
outsl
mov
xchg
lods
xchg
mov
sbb
or
and
adc
ja
pop
shlb
sarb
cwtl
cmp
aaa
xor
sbb
jbe
sub
pop
jp
out
push
xor
mov
adc
arpl
mov
out
push
ds
hlt
clc
imul
incb
mov
mov
cmp
cmp
inc
enter
addb
cmp
popa
ds
lret
enter
mov
sub
popa
pop
aaa
fs
xchg
mov
pusha
push
dec
jb
jo
pop
fldl
daa
jp
js
inc
rorl
int
push
xor
push
fistpl
pop
dec
insb
sub
xchg
call
cmpsl
sbb
push
movsb
push
sbb
repz
aad
cmp
add
mov
inc
lds
rorl
insl
push
mov
add
jnp
and
es
clc
and
sbb
push
ficomps
mov
into
pusha
sbb
push
xor
or
or
pop
add
ror
out
sbb
or
lds
repnz
xor
mov
sbb
dec
mov
mov
push
lock
jbe
xlat
mov
fstp
pop
into
es
and
pop
outsb
daa
loop
lret
stos
mov
adc
add
mov
mov
shl
pop
or
pop
xchg
daa
cmp
mov
fs
jo,pt
adc
push
pop
pop
push
lods
push
mov
mov
dec
stos
dec
cltd
inc
lahf
inc
xchg
xor
repz
lea
ss
xchg
lea
mov
mov
and
cmp
sahf
fwait
std
in
inc
jp
js
sbb
mov
outsb
or
add
sub
repz
leave
xorb
inc
loope
cld
es
adc
lds
out
mov
sbb
add
test
cltd
iret
ret
sub
lock
mov
jecxz
jg
es
icebp
idivb
pop
movsb
mov
pushf
adc
in
mov
scas
push
push
mov
jno
in
mov
scas
addb
data16
pusha
arpl
pop
jle
out
mov
mov
mov
ret
jo
enter
int
iret
rcl
shlb
aam
dec
mov
fisubl
mov
loopne
loop
in
out
mov
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
gs
cmp
insl
ds
xor
inc
inc
les
dec
dec
out
sbb
push
push
jp
push
pop
push
or
push
or
bound
pushw
push
iret
cmp
jae
lret
js
sub
cltd
sub
addb
mov
rcll
jge
lcall
icebp
mov
test
stos
stos
lods
mov
scas
mov
out
mov
loop
mov
ljmp
dec
xchg
enter
int3
je
into
rcl
rcl
aam
adc
loope
fcmovu
xchg
mov
loopne
mov
in
mov
call
popa
mov
repnz
dec
mov
sti
cld
pushf
lcall
sbb
cmp
dec
inc
xor
das
xor
cmp
cmp
push
push
push
push
push
and
sub
sub
sbb
add
or
addr16
adc
sub
add
adc
sbb
pop
add
jl
cmp
lret
in
out
ret
jmp
lea
loopne
out
div
cld
int
pushf
popf
sahf
int
out
ror
in
ret
shr
lods
lods
scas
scas
loop
aad
rol
loopne
aam
cld
mov
mov
mov
jmp
int3
popf
scas
mov
mov
mov
fcmovnu
lea
lea
cmpsl
mov
lock
mov
test
mov
pop
inc
push
jns
cmp
cmp
push
dec
xor
sub
dec
dec
dec
cmp
and
daa
xor
push
sub
outsl
jo
or
bound
add
and
add
or
or
or
push
adc
ja
sbb
cmp
prefetchwt1
repnz
lock
inc
jmp
jecxz
shl
loop
cwtl
cltd
lcall
fdiv
xlat
cmpsl
test
stos
in
leave
lret
rcl
shl
mov
mov
ljmp
stos
stos
mov
lret
cmpl
fwait
mov
mov
xchg
mov
xchg
in
out
mov
mov
cmc
div
clc
stos
lahf
mov
nop
mov
push
pop
jg
pop
push
insl
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
cmp
mov
leave
leave
lret
lret
int3
int
iret
rclb
rcl
aad
xlat
fcomp
fcmovu
loope
loop
in
scas
out
jmp
and
lock
repnz
cmc
div
clc
stc
ss
enter
xor
imul
outsb
cmp
or
inc
add
dec
or
dec
push
push
push
push
jmp
pop
pop
pop
pop
pop
pop
pop
ljmp
loopw
cmc
outsl
insb
insl
outsb
outsl
jo
jb
jo
jbe
jns
jp
jl
jle
addb
xchg
fisttpll
std
xchg
clc
xchg
lcall
repnz
lds
shlb
scas
scas
scas
mov
xorb
mov
mov
lock
leave
leave
mov
mov
shll
xlat
xchg
fnstcw
fists
in
out
jmp
enter
hlt
cmc
iret
test
std
mov
xor
pop
cmp
pop
aas
xor
inc
xor
xor
dec
and
dec
cmp
push
and
push
insl
pop
imul
popa
pop
arpl
addr16
outsl
es
jae
jne
ja
jns
jnp
jge
jg
cmpl
mov
xchg
lds
icebp
cltd
mov
lahf
out
mov
shll
lods
ret
mov
mov
mov
mov
mov
fstpt
icebp
lds
mov
shl
rcr
aad
xlat
xchg
fnstenv
xchg
loope
jecxz
in
out
jmp
mov
xchg
icebp
mov
imull
std
lcall
add
jbe
pop
cmp
cs
pop
inc
sub
dec
xor
dec
daa
dec
aaa
push
cmp
push
push
push
popa
pop
sub
pop
and
push
popa
cmp
data16
imul
outsl
adc
jne
ja
jns
jnp
jge
jg
sub
xchg
mov
mov
ret
xchg
mov
cltd
test
test
stos
lahf
icebp
mov
cmpsb
cmpsl
nop
test
scas
ret
mov
mov
mov
mov
fistpll
dec
nop
lret
or
iret
lcall
xlat
mov
fstp
loope
jecxz
in
out
jmp
fwait
out
xchg
icebp
xchg
mov
stc
mov
xchg
std
xchg
lcall
xor
jge
or
push
aas
sub
inc
das
inc
dec
dec
push
dec
dec
dec
dec
dec
push
push
xor
push
adc
pop
ss
cmp
pop
push
popa
add
or
addr16
insl
outsb
outsl
and
add
jne
ja
jns
jnp
jge
jg
sub
xchg
jecxz
nop
xchg
in
jecxz
call
jns
jnp
call
rclb
insl
and
movsl
xorl
into
and
xor
leave
mov
pop
aaa
sbb
pop
jo
or
inc
ret
adc
adc
jno
test
jb
mov
inc
sarb
cmp
ja
jp
cmp
imul
inc
in
lock
imul
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
xorb
repz
add
fwait
cmp
add
add
pop
add
add
iret
dec
add
push
push
jns
gs
add
push
jns
je
insl
add
adcl
je
add
outsb
imul
inc
js
arpl
add
push
imul
or
push
push
push
dec
add
push
inc
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
push
push
push
push
push
mov
pop
nop
mov
shr
cld
push
pop
shr
fnop
add
mov
or
addr16
addr16
add
add
stc
cmc
fnop
mov
add
add
or
cmc
cld
lea
shl
fnop
nop
mov
add
jne
nop
add
mov
add
sub
test
mov
stc
add
push
sub
push
clc
push
add
push
cmc
mov
xor
xor
mov
pop
xor
addr16
addr16
cld
stc
push
add
mov
test
push
nop
clc
test
nop
pop
add
ror
mov
clc
add
inc
dec
inc
ror
shl
xchg
nop
xor
fwait
cmpb
jne
stc
clc
xor
cmp
je
add
push
push
pop
pop
mov
xchg
xchg
mov
add
pop
test
inc
and
std
cld
push
mov
push
dec
pop
jmp
nop
or
pop
push
or
pop
mov
rol
shl
add
shl
add
xor
mov
test
jg
shl
mov
stc
shl
add
push
push
pop
pop
pop
mov
pop
sub
add
nop
or
pop
pop
pop
pop
ret
push
push
push
push
push
or
cmc
mov
mov
stc
and
add
cmp
mov
rol
mov
shl
add
cmp
je
stc
push
xchg
push
clc
mov
add
mov
push
sub
pop
mov
nop
jb
or
fwait
add
mov
mov
stc
and
mov
sub
mov
nop
or
cmc
test
jne
mov
add
mov
mov
stc
cmc
cld
pop
add
or
sub
mov
add
mov
push
cmp
add
push
mov
sub
mov
call
mov
stc
and
mov
sub
mov
mov
stc
add
mov
mov
and
jg
test
je
nop
or
test
jne
push
sub
pop
add
jne
and
jmp
js
cmp
mov
add
add
push
shr
fnop
mov
add
mov
push
test
mov
add
mov
rol
call
push
pop
mov
mov
add
mov
shl
rol
mov
sub
mov
cmc
sub
mov
add
mov
stc
and
mov
stc
cmc
add
mov
sub
mov
jmp
nop
sub
sub
cmp
pop
cmc
add
add
jmp
push
or
pop
pop
pop
pop
pop
pop
ret
fwait
pusha
push
add
or
jae
std
cld
push
test
sub
mov
pop
push
pop
nop
jg
and
cmc
mov
or
rol
ror
stc
shl
fwait
mov
cmc
add
cmp
jne
shl
xchg
mov
push
dec
pop
mov
mov
rol
mov
ror
shl
fwait
mov
cmc
add
nop
or
fwait
add
jne
stc
and
fwait
stc
cmc
push
add
mov
cmc
mov
nop
sub
mov
inc
dec
ror
mov
clc
add
cmp
jne
nop
clc
add
popa
sub
ret
shr
push
sub
push
pop
test
rol
inc
dec
stc
mov
add
mov
inc
dec
shr
ror
push
cmc
pop
nop
clc
xor
push
add
pop
jno
push
clc
pop
nop
xor
sub
push
add
pop
cmp
jne
cld
dec
shr
fwait
cmpb
jne
rol
shl
ror
jle
nop
push
fwait
and
je
nop
add
xor
cld
stc
shr
push
push
pop
pop
call
xchg
xchg
mov
mov
clc
xor
push
inc
dec
mov
shl
jp
nop
sub
mov
shl
fwait
nop
push
rol
or
test
and
cmc
call
mov
rol
xor
push
test
jle
mov
nop
or
stc
cmp
rol
push
test
cmc
push
or
pop
stc
and
xor
push
nop
mov
push
xchg
xchg
push
add
push
and
std
cld
pop
test
rol
xor
push
stc
shl
mov
cmp
ror
call
or
stc
cmp
rol
ljmp
sar
js
neg
neg
clc
push
inc
pop
shl
jge
nop
test
cmc
stc
cmp
or
jl
std
cld
ljmp
test
xchg
xchg
stc
and
or
ror
mov
mov
shr
add
popl
clc
pop
stc
shl
add
push
shr
fwait
pop
test
jbe
xor
push
nop
or
test
mov
stc
shl
push
pop
jmp
cmc
nop
call
add
cmp
push
cmc
mov
test
xchg
xchg
xor
nop
clc
push
push
sub
pop
xor
ror
xor
or
jo
stc
and
je
add
or
sub
push
sub
pop
cmp
call
sar
xchg
ror
mov
test
cmc
cld
xor
push
or
fwait
mov
stc
cmc
or
ror
push
nop
and
test
cmc
call
push
pop
mov
cmc
add
nop
clc
xchg
xchg
mov
stc
cmp
add
ror
push
or
cmc
push
clc
xor
xor
addr16
addr16
jl
cmp
call
jp
push
clc
pop
cmc
mov
stc
sub
and
jge
xchg
mov
and
push
push
push
pop
pop
jg
nop
push
push
mov
pop
cld
add
push
and
push
nop
test
cmc
pop
stc
and
xor
inc
dec
rol
push
cmc
call
stc
and
ror
jmp
stc
shr
fwait
test
jmp
nop
clc
ror
and
cmc
cmc
push
stc
mov
cmp
xor
cmc
test
rol
push
mov
or
and
rol
je
nop
or
fwait
or
jle
and
rol
test
js
cld
call
mov
cmc
sub
nop
mov
nop
sub
push
cld
pop
cmp
xor
push
push
push
pop
pop
mov
rol
sub
mov
stc
cmp
push
and
rol
je
clc
push
or
pop
call
mov
jp
cmp
add
push
sub
pop
mov
stc
shr
call
jae
pop
add
roll
add
add
add
rcll
push
xor
mov
xchg
add
add
add
add
test
ds
add
icebp
sar
push
sub
push
mov
pop
dec
inc
mov
add
loop
jae
nop
test
addr16
addr16
cld
push
sub
nop
jno
and
call
nop
clc
sar
je
stc
shl
push
add
nop
or
ja
call
push
ror
ret
push
push
push
push
clc
push
push
pop
pop
mov
xor
xor
mov
rol
mov
add
test
dec
clc
mov
sub
neg
mov
add
jg
cmp
cmc
mov
dec
inc
mov
sar
add
test
rol
dec
neg
stc
cmc
add
mov
mov
nop
pop
pop
pop
pop
ret
fwait
js
add
add
add
add
add
add
add
js
add
add
add
push
je
dec
popa
outsb
fs
add
jb
gs
xor
cs
insb
add
push
mov
sub
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
movl
mov
mov
mov
mov
xchg
mov
add
xchg
xor
xchg
mov
movd
psrlq
movd
add
mov
mov
add
mov
movzbl
cmp
jle
jmp
lea
push
push
mov
pushl
pushl
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
add
add
rep
mov
add
mov
xor
inc
je
mov
cmpl
jne
jmp
mov
mov
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
mov
add
movzbl
movzbl
imul
xor
mov
add
mov
mov
add
movzbl
movzbl
add
mov
add
mov
mov
add
movzbl
mov
movzbl
xor
not
mov
add
mov
jmp
mov
add
mov
jmp
mov
cmpl
je
mov
mov
add
mov
mov
cmpl
je
mov
mov
add
push
mov
call
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
sub
je
mov
mov
mov
cmpl
je
mov
mov
and
je
mov
movzwl
push
pushl
call
mov
mov
jmp
mov
mov
mov
mov
mov
lea
push
pushl
call
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
mov
cmpl
je
mov
add
push
pushl
mov
call
mov
push
push
mov
pushl
mov
pushl
call
mov
mov
mov
mov
mov
rep
mov
mov
mov
mov
mov
add
mov
sub
pop
pop
leave
ret
imul
je
add
jb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
or
add
aad
add
loop
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jl
add
add
add
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
add
add
push
imul
jb
je
arpl
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
addb
add
add
add
add
in
fs
push
addl
or
add
and
and
inc
dec
mov
ds
jno
add
mov
pop
push
addb
dec
pop
mov
and
pop
sub
add
xor
add
mov
add
inc
push
data16
xor
add
bound
andl
mov
cmp
add
or
add
dec
push
dec
or
inc
push
inc
add
push
jbe
add
es
mov
sbb
ds
aam
imul
and
add
add
sbb
cs
jo
or
sbb
push
mov
int3
inc
sbb
mov
lock
adc
pop
int3
inc
push
add
cmp
sub
shll
popa
dec
mov
push
add
dec
orb
jae
add
or
and
inc
inc
add
pop
aas
push
sbb
adc
nop
mov
mov
adc
and
ss
addr16
xor
adc
add
or
add
push
push
aam
sub
push
add
fs
and
add
or
adc
xchg
dec
or
mov
test
mov
or
pusha
cmp
xor
push
mov
pop
push
push
add
xor
or
push
add
push
data16
push
add
insl
mov
je
lret
dec
push
inc
inc
movsb
and
push
ficomps
add
jb
adcl
js
or
sub
dec
xor
jbe
push
add
add
jp
and
ss
dec
add
mov
es
or
or
add
ss
sbb
and
push
xchg
test
ss
and
xor
mov
or
or
pop
inc
mov
and
pushf
popf
ss
and
or
or
add
add
and
add
cwtl
ss
inc
inc
mov
add
cmp
sahf
sbb
popa
and
sub
push
sub
cs
jnp
cmp
add
dec
dec
lods
add
fadds
or
les
xor
cvttps2pi
inc
inc
lods
bound
add
sub
nop
push
in
imul
xor
inc
adc
add
lcall
dec
add
or
sbb
mov
pop
add
push
sub
inc
adc
or
add
jle
sbb
sbb
pop
inc
add
push
dec
popa
bound
cmp
or
and
pop
or
xor
inc
ss
or
add
and
add
adc
dec
adc
push
or
xor
inc
aaa
js
dec
dec
or
or
sbb
sub
sbb
or
jg
sbb
push
add
subb
push
xor
add
push
xor
inc
pop
data16
or
es
add
outsl
adc
add
push
or
and
insb
push
mov
movsb
push
lds
or
add
adc
scas
into
mov
xor
sbb
or
push
push
and
add
add
pop
push
dec
or
push
xor
add
push
js
cmp
sbb
cs
add
ss
inc
add
inc
outsl
jnp
inc
xor
dec
push
pushf
pop
ficoms
popf
pop
pop
add
add
add
and
or
xchg
pop
dec
add
or
cmp
push
xor
add
pop
or
add
mov
add
add
or
add
adc
fimull
adc
jg
or
push
add
insb
add
outsb
dec
and
dec
mov
pushw
push
mov
and
xchg
lret
or
rolb
or
xchg
sbb
xor
or
push
pop
push
push
jns
add
ds
push
sub
test
add
xor
add
sub
add
add
sub
inc
and
add
pop
pop
aam
js
xor
add
loopne
jno
sbb
movsb
pop
dec
pop
sub
push
push
bndldx
sbb
jle
xor
ss
and
and
cmp
xor
sbb
mov
push
sub
cmpsb
add
dec
adc
cmp
xor
insb
sub
adc
es
iret
adc
and
add
sub
inc
add
adc
sub
or
pop
sbb
add
or
add
add
sbb
adc
mov
or
inc
cmp
jo
sub
sub
mov
cmp
add
adc
sub
xchg
and
cmp
inc
add
test
xchg
das
adc
push
adc
push
push
add
enter
sub
dec
push
xor
or
jle
push
sbb
adc
ss
jbe
cmpsb
sub
sub
addr16
mov
push
push
mov
aas
pop
dec
push
cmp
dec
push
aas
stos
daa
add
stos
mov
push
push
add
cmp
add
mov
sub
sarb
pusha
jo
add
sbb
mov
add
push
add
or
and
push
adc
and
sub
add
add
mov
insb
add
or
add
add
into
shlb
insl
or
add
xchg
xor
sbb
cmp
or
xor
inc
mov
add
cmpb
inc
inc
adc
lods
and
data16
cmp
inc
js
adc
push
add
sub
jbe
pop
add
es
into
enter
pusha
push
sbb
or
sbb
rcrb
push
pop
sub
sub
loopne
cmp
test
adc
add
adc
xchg
push
add
or
pop
rcrl
and
pop
cmp
dec
sbb
inc
dec
jo
add
insl
adc
inc
pop
insl
xor
sub
adc
sbb
test
pop
mov
xchg
sbb
pushf
insb
push
sub
and
sbb
fdivl
pusha
push
mov
add
sub
cmp
mov
or
cmp
or
daa
or
arpl
cvtpi2ps
xor
ret
sbb
adc
jle
add
sbb
sbb
add
push
das
cmp
push
imul
inc
push
ss
or
and
push
pushf
scas
inc
xor
xor
push
sub
jb
aas
or
or
ret
jp
jle
mov
into
es
or
jb
dec
sahf
es
sbb
sub
sub
dec
or
and
or
xor
push
push
push
movsb
push
and
xor
cmp
ficoml
pusha
inc
push
pop
adc
inc
and
or
mov
addr16
adcb
sub
pop
xor
add
and
sub
pushf
pop
sub
jp
inc
lret
xor
and
das
inc
jp
sub
add
jle
xor
and
jae
push
add
add
adc
or
add
add
cmp
push
cmpsb
add
or
movlps
or
cmp
or
or
dec
push
outsl
push
or
stos
into
pop
or
pop
add
fldenv
or
test
push
mov
mov
sbb
or
sbb
add
add
sbb
inc
js
nop
add
push
or
push
dec
ss
fcoml
nop
xchg
mov
outsb
pop
adc
add
sbb
xchg
insl
adcb
add
cmp
push
or
adcl
xchg
dec
push
dec
add
adc
cmp
mov
xchg
and
pop
or
xor
adc
push
mov
outsl
outsb
sbb
xchg
dec
pop
xor
add
and
or
inc
pop
xchg
push
pop
push
or
inc
cmp
inc
adcb
add
sub
cmp
push
and
jg
mov
or
dec
cmp
adc
push
sub
xor
pop
sub
mov
or
or
push
add
inc
pop
xor
inc
and
das
cmp
push
mov
or
jo
test
sub
add
adc
inc
inc
or
test
fidivrl
add
sub
cmp
push
cmpsb
adc
and
push
mov
sbb
sub
pop
xor
call
and
push
dec
adc
bound
pop
mov
push
xor
push
sbb
lret
mov
andb
xor
add
and
add
add
xchg
ucomiss
adc
sbbb
insb
leave
or
cltd
adc
and
add
sub
xor
cmp
xor
inc
dec
sub
xchg
sbb
sub
pop
stos
add
adc
push
or
addb
add
adc
ss
add
or
add
adc
fs
mov
add
cmp
sbb
sbb
add
or
bound
push
and
test
and
or
mov
ljmp
cmp
adc
sbb
and
add
and
mov
or
add
adc
sub
jp
dec
scas
adc
or
jle
push
dec
or
jbe
cmpsl
push
sbb
sbbb
sub
shll
add
orb
push
pusha
adc
xor
cmp
sub
test
dec
xchg
aas
outsb
add
push
sub
cs
xor
pop
push
sub
push
add
add
sub
sbb
push
push
adc
ret
adc
dec
xor
cmpl
sub
or
sbb
pop
xchg
mov
and
add
sbb
ret
cmp
je
xor
cmp
adcb
add
or
sbb
push
adc
and
sbb
sub
bound
jle
xchg
cs
adc
and
aas
jp
jp
imul
cmp
or
cmp
pop
dec
aad
push
add
push
add
and
and
adc
lock
push
and
mov
adc
sub
test
pop
push
adc
scas
push
sub
or
mov
or
dec
or
mov
push
sbb
test
sbb
inc
sub
pop
cmp
cmp
push
test
xor
and
outsl
mov
cmp
or
mov
fisttpll
adc
add
add
mov
lods
pop
test
push
adc
and
and
lcall
int3
sbb
dec
add
add
xor
push
js
sbb
sbb
ds
add
stos
push
dec
lahf
cmp
pop
and
adc
nop
sub
and
bound
cmp
daa
jb
xchg
add
pusha
and
pushf
xor
xchg
jl
or
orb
push
into
pop
or
das
fs
push
adc
push
add
mov
adc
dec
pop
sbb
sbb
adc
xor
movhps
or
out
sub
mov
cwtl
and
popa
add
or
push
adc
sbb
sbb
daa
mov
pop
pushf
jle
pop
lea
cs
inc
and
jno
sbb
fs
or
adc
cmp
jl
sub
and
and
dec
push
sub
or
add
pusha
dec
and
xor
push
and
data16
and
cltd
add
add
add
inc
xor
scas
add
cmp
xor
pop
je
pop
mov
dec
add
lcall
inc
xor
cwtl
mov
xor
jle
inc
push
pushf
cs
inc
insb
and
adc
sub
insb
jns
and
sbb
sub
jne
jl
sub
inc
xorb
sub
lods
add
add
adc
sbb
or
push
and
nop
adc
test
insb
jns
push
int
jb
adc
rolb
sbb
mov
andb
cmpsb
dec
dec
ss
mov
add
or
bound
mov
sbb
pop
xor
insb
pop
add
inc
push
sbb
or
jo
xor
push
jb
addr16
test
add
xor
inc
or
adc
test
pusha
dec
and
dec
dec
xor
adc
lods
arpl
pop
loopne
or
add
jo
mov
cmp
scas
cmpsb
cmp
insb
pop
lea
pushf
pop
test
and
add
push
mov
dec
push
pop
pop
pop
add
adc
adc
adc
add
push
pop
aaa
or
add
add
push
pop
cmp
jbe
inc
sbb
push
xor
add
dec
aaa
cmp
adc
adc
data16
fiadds
and
fwait
outsb
adc
xchg
insl
push
add
add
sbb
push
push
sub
sub
push
sbb
inc
xor
sub
xor
or
push
adc
adc
add
mov
jle
daa
mov
and
and
sub
jnp
add
adc
cmpsb
dec
add
or
jne
xor
mov
movsb
dec
add
lcall
pusha
outsb
adc
adc
mov
pop
aas
or
add
inc
stos
push
adc
jl
inc
ss
or
sub
xor
adc
and
sbb
aas
ss
or
push
mov
or
jb
add
outsb
cmp
add
push
mov
ss
pushf
pusha
adc
or
add
xor
push
pop
mov
cmp
fs
pusha
or
push
adc
adc
or
inc
adc
sub
mov
pusha
outsl
add
pop
pop
mov
nop
and
orl
add
roll
and
imul
push
push
add
add
sub
lods
dec
ss
and
add
pop
inc
insl
or
sbb
jl
xor
dec
movsl
push
roll
jo
add
push
jp
and
jbe
dec
add
push
add
adc
sbbb
adc
adc
das
adc
and
add
in
cmpsl
add
push
inc
sbb
daa
or
pop
push
or
mov
sub
xchg
push
add
or
sub
dec
add
add
pusha
cmp
sahf
push
outsl
pop
add
push
xor
add
add
daa
xor
jl
sub
xor
push
inc
sub
xor
xchg
das
and
push
jo
add
push
push
icebp
test
push
nop
and
sub
or
sbb
push
loope
dec
xorl
inc
push
push
cmp
inc
push
add
pusha
sub
es
bound
inc
cmp
push
stos
sub
sub
or
and
xor
jg
dec
add
push
or
inc
push
adcb
adc
add
sbbb
adc
sbb
add
sub
pop
add
xor
aaa
push
add
cmp
ds
fsubs
ret
jns
or
adc
add
add
add
pop
sub
and
cmp
add
pop
sub
adc
test
sbb
pop
xor
cmp
add
add
add
or
xor
ljmp
inc
mov
push
inc
sub
xlat
outsb
inc
push
add
push
jg
lcall
dec
es
pop
and
xor
mov
add
add
sbb
imul
add
push
xor
ss
jle
sub
es
dec
or
enter
xor
sbb
inc
inc
sbb
sub
sub
inc
jo
and
adc
and
dec
dec
push
jle
mov
cwtl
or
orb
pusha
and
jb
ds
movsl
or
xor
sub
or
push
sbb
test
or
and
add
add
insb
or
inc
fistps
push
add
pop
lea
add
cmpsb
pusha
enter
pop
and
push
sub
sub
sub
add
sbb
or
push
push
cmp
push
add
adc
in
or
add
fs
adc
or
ret
je
push
and
or
dec
or
push
or
fldenv
pusha
sbb
dec
ss
sub
or
or
push
inc
add
inc
sub
add
aam
pop
xchg
add
mov
sbb
dec
sbb
and
adc
xor
add
ds
lret
push
add
mov
push
sub
push
xchg
ss
pop
in
add
dec
dec
push
ret
adc
subb
add
inc
add
or
sbb
js
push
cmp
sbb
adc
test
inc
push
or
adc
cmp
sbb
push
pop
and
add
into
sbb
aaa
dec
rsqrtps
mov
pop
or
and
adc
adc
jb
sub
mov
adc
dec
xor
push
or
orb
or
mov
and
or
or
sbb
or
sub
dec
sub
xchg
push
or
and
arpl
mov
or
and
adc
push
sub
or
pop
or
push
add
push
nop
arpl
add
cmp
dec
pop
movsl
xchg
cmp
mov
sub
add
add
sbb
adc
pop
or
daa
and
jl
sbb
pop
adc
lcall
push
add
add
inc
add
arpl
sbb
or
xor
aas
js
push
mov
add
sbb
test
pusha
cmp
imul
sbb
or
and
sbb
subb
adc
sub
and
xor
add
js
xor
inc
push
jb
or
or
add
push
mov
push
add
.byte
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
mov
lea
push
push
call
mov
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
add
add
add
add
add
test
add
add
push
push
push
call
mov
mov
add
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
aaa
movb
call
popl
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
xchg
add
inc
add
mov
add
mov
sub
lea
push
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
or
add
jns
add
mov
add
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
add
add
