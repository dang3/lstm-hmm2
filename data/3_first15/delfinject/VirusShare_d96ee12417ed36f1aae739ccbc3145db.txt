xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
push
addl
pop
ret
add
popl
push
push
xchg
add
push
xchg
add
mov
pop
push
xchg
xchg
xor
xchg
xchg
xor
xchg
xchg
popl
push
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
pop
ret
mov
ret
xchg
popl
push
ret
push
push
pop
xchg
xchg
xchg
pop
push
xchg
mul
xchg
xchg
xchg
add
add
ret
mov
ret
mov
ret
xchg
addl
xchg
ret
mov
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
call
push
push
call
push
push
call
push
call
push
push
push
push
call
call
push
push
push
call
push
push
call
push
push
push
call
pop
pushl
xchg
push
push
push
push
call
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
call
push
cmp
jae
ret
pop
call
add
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
push
adc
xor
dec
adc
mov
data16
pop
xlat
pusha
pushf
loop
popf
arpl
adc
aam
adc
test
cs
cmp
pop
stos
shrb
call
mov
push
imul
hlt
and
fistps
jg
notb
jl
push
mov
lods
or
xor
mov
cmc
shr
mov
adc
sub
sbb
xchg
ret
es
and
clc
and
outsb
lcall
out
test
popa
inc
cmc
rcrb
fs
cmp
lock
repnz
ret
leave
mov
in
sbb
sub
dec
arpl
rcll
xor
dec
jmp
jb
jnp
sbb
jmp
mov
out
xchg
bound
popa
into
mov
sbb
leave
fwait
movsl
int
lods
push
cmp
jp
call
aaa
pop
push
arpl
mov
add
int3
push
sbb
and
add
or
inc
pop
fnstenv
dec
and
scas
mov
cmpsl
xchg
icebp
dec
inc
sbb
lahf
mov
push
out
or
inc
f2xm1
pop
and
xchg
push
sbb
inc
outsb
xchg
iret
jne
cld
dec
or
or
sbb
sbb
adc
scas
fldl
icebp
mov
mov
loope
ja
lahf
inc
sub
xchg
aas
out
xchg
arpl
cmp
int
popa
das
jb
push
aaa
push
xor
iret
push
aaa
push
pop
mov
dec
push
jns
repz
and
push
cmpsb
movsb
lret
inc
daa
xor
xchg
push
mov
xchg
mov
inc
push
jmp
hlt
push
push
insb
mov
push
adc
outsl
mov
pushf
inc
jmp
push
das
or
jle
dec
popa
mov
shrl
andb
aad
fst
repnz
mov
mov
icebp
loope
stc
mov
in
stc
xchg
out
std
dec
pop
sub
out
out
adc
sti
ljmp
jp
insb
xchg
xchg
out
mov
ficomps
scas
ret
push
fcompl
lahf
les
add
dec
mov
pop
xor
mov
inc
movsb
rclb
pop
imul
mull
lods
sti
fwait
cmp
loopne
push
lods
mov
sti
and
lret
dec
xchg
mov
nop
sahf
in
add
cmc
cld
mov
dec
push
push
fs
jns
adc
mov
cmpsb
adc
popa
sub
inc
cmp
dec
pusha
fdiv
imul
jbe
sti
mov
in
fcoml
loop
aas
call
sbb
js
xor
cli
cmc
lea
xchg
xor
pop
cli
dec
xchg
loopne
test
lock
std
inc
sbb
cmp
mov
xor
loop
mov
pop
and
out
pushf
jp
mov
imul
sbb
mov
std
or
jns
cmp
jb
mov
and
pop
xchg
xor
pop
clc
in
inc
cwtl
outsb
or
inc
lret
push
add
sti
xchg
imul
pop
in
xchg
push
pop
jmp
add
repz
pushf
sub
lcall
sbb
cmp
mov
imul
jp
out
or
mov
fdivp
int3
and
pop
mov
shr
lods
mov
push
ret
inc
std
xchg
into
out
test
mov
mov
out
dec
mov
lea
int3
clc
dec
mov
out
push
mov
pop
shll
pop
pop
fldcw
ret
sub
popf
in
push
enter
inc
dec
ds
aaa
clc
arpl
inc
stc
pop
imul
ja
pop
es
loop
sub
mov
add
inc
push
xchg
test
lods
sbb
lcall
adc
mov
xor
imul
fidivrl
adc
les
aas
inc
mov
stos
xchg
inc
adc
dec
fdivrp
out
sbb
push
loop
jge
clc
mov
push
sahf
xchg
gs
or
inc
rcl
clc
inc
lea
xor
cmpl
into
lods
lret
mov
push
adc
cmpsb
push
cmpl
pushf
roll
cli
out
mov
notl
jg
cmc
sets
jns
movsl
lret
push
push
faddl
orb
filds
repz
xorb
push
sub
jle
cmc
mov
lds
lret
imul
adcl
mov
and
adc
cmp
jns
out
push
dec
std
lahf
scas
in
sub
popf
fisubrl
loop
scas
fs
jns
sub
mov
loop
add
jle
adc
mov
cmp
adcl
in
mov
lods
cwtl
jle
mov
leave
fs
inc
imul
fs
jge
bound
cmp
mov
into
shll
fnstenv
lods
insb
jg
mov
imul
mov
bound
add
adc
mov
push
test
sbb
inc
pop
inc
sub
enter
movb
mov
push
clc
cmp
add
jne
andl
sbb
mov
mov
popf
lret
fdivrs
cmp
aas
jno
xchg
add
and
cmpsl
xchg
es
pusha
cmp
pop
cwtl
into
inc
repz
sarl
mov
mov
or
out
mov
int
rol
sti
mov
insb
movsb
sub
inc
and
das
add
int
dec
aam
mov
loopne
cmp
fwait
stos
cs
mov
pop
xor
cmp
xchg
mov
stos
jae
sbb
inc
push
dec
shrl
dec
xchg
stc
jne
ds
enter
xchg
jp
mov
lret
inc
cmpsb
mov
xchg
negb
jp
mov
xlat
dec
jns
js
xor
pusha
js
or
ds
inc
movsl
cmp
scas
push
out
pushf
jge
push
lahf
pop
pop
insb
sbb
cmpsb
jg
mov
jmp
inc
pop
std
dec
cmpsb
jae
popa
jne
nop
cmpsl
push
pusha
and
fwait
jns
outsl
jg
mov
xchg
mov
mov
pop
testl
mov
adc
sarl
or
outsb
arpl
xchg
sbb
out
gs
lret
pop
pop
sbb
cltd
idivb
in
fidivl
add
and
sub
or
daa
mov
out
mov
and
cli
lcall
aas
mov
lds
mov
push
sahf
push
cmpsl
scas
adc
iret
call
mov
pop
repz
pop
cld
ss
imul
gs
cmp
jge,pt
loope
testb
cmpl
popa
jns
add
test
cmp
jns
push
add
flds
mov
sti
mov
nop
test
mov
outsb
js
cmp
cvttps2pi
cmp
xchg
fisttpl
rclb
cmp
rol
fs
push
add
jae
push
jae
or
aad
insb
lea
adc
scas
adc
loopne
mov
int
pop
test
int
movsb
mov
push
xchg
or
out
mov
inc
out
jmp
and
popa
cmpsb
mov
cmp
sbb
xchg
push
push
jmp
mov
cmp
lret
scas
pop
mov
jle
xchg
inc
je
or
dec
int
xchg
cs
mov
scas
lods
jae
call
add
out
imul
xchg
inc
stc
cmpsl
mov
loope
or
pop
mov
pop
inc
push
push
orl
cmpsb
jbe
call
les
adc
and
xchg
and
push
xchg
push
or
insb
ja
stos
aaa
jne
mov
cld
or
aas
loop
push
aaa
push
jl
or
sub
movb
adcl
and
lret
mov
bound
in
cmc
repnz
mov
dec
aad
jb
dec
adc
cmc
pop
outsb
mov
int
inc
jnp
notl
and
shrb
sti
shlb
mov
js
jl
xchg
dec
adc
jle
into
xchg
mov
push
andb
stc
pop
or
cld
dec
mov
pop
push
jg
outsl
dec
push
test
cmp
clc
jns
shll
stos
popa
adc
pusha
ss
pushf
cmp
sub
mov
sahf
cmpsb
pop
jns
cli
ss
and
push
xlat
xor
mov
cwtl
sbb
cld
xor
xchg
dec
fs
push
mov
dec
dec
hlt
aam
xchg
pop
mov
and
dec
mov
hlt
decb
dec
cmc
adc
cmpsl
rolb
inc
cmc
xor
jp
or
add
or
sub
iret
pop
scas
xchg
mov
sar
mov
mov
inc
cld
loop
les
cld
inc
add
adc
loopne
ds
add
mov
jns
jmp
push
mov
aad
imul
mov
fs
sbb
aas
mov
adc
add
mov
lret
mov
sahf
dec
incl
mov
shlb
jne
in
jp
stos
push
loop
mov
adc
dec
dec
sbb
out
std
dec
test
pop
enter
push
mov
arpl
adc
arpl
cltd
lea
lcall
fmul
lret
mov
aaa
mov
mov
sub
xor
movd
les
inc
mov
out
and
loopne
sbb
and
and
cmp
push
xorb
jg
xor
into
std
sbb
adc
pop
loope
push
jno
mov
pop
adc
pusha
clc
nop
add
jns
xorl
insb
mov
adc
mov
sbb
ror
mov
cli
out
dec
mov
ret
aam
sub
push
or
cmpsb
or
out
jne
je
mov
fnstcw
dec
bound
sbb
leave
cwtl
cltd
add
cmp
stos
stos
push
data16
push
mov
hlt
add
mov
daa
xor
and
adc
lods
and
je
sub
les
sub
ds
mov
sub
xacquire
aam
mov
jl
fs
sub
jbe
ljmp
pop
popa
ljmp
adcl
dec
xorb
out
or
cltd
xlat
insl
iret
testl
and
cmp
mov
sub
test
mov
add
pop
andb
and
pop
jns
das
cmp
dec
xchg
mov
aam
sti
lret
pop
pop
lret
xchg
pop
xchg
leave
push
adc
mov
out
ret
and
ds
pop
mov
into
jo
cs
xor
arpl
jnp
cmp
outsl
gs
cli
xor
cmp
test
popa
add
push
decl
fisubs
insb
ret
add
cltd
jbe
push
inc
sub
clc
movsb
insl
icebp
lods
inc
sbb
xor
subb
fs
int3
push
push
daa
push
adc
divb
pusha
out
add
mov
popa
or
inc
js
jns,pt
mov
in
lcall
aam
adc
scas
cmp
dec
ror
pop
clc
inc
xor
jbe
sub
pop
call
setno
and
xchg
inc
sbb
lea
inc
xchg
imul
dec
xchg
inc
cmp
loop
cltd
mov
xlat
dec
sbb
mov
sbb
jg
push
movsb
sub
int3
cmp
scas
jg
sti
or
xacquire
and
lahf
movsl
test
test
add
xor
cli
inc
cmc
sbb
mov
pop
mov
sub
xchg
leave
imul
jbe
mov
xor
fs
dec
inc
loope
xchg
int
mov
daa
repz
ja
jb
lock
cld
push
adc
push
xchg
imul
push
lcall
add
sbb
insl
addb
jge
dec
hlt
mov
clc
cmpsb
lret
test
call
and
test
scas
lret
adc
mov
cmp
out
sub
xchg
mov
test
sub
jecxz
dec
lcall
inc
pushf
and
ret
cmp
popa
jmp
cwtl
and
shl
add
cmc
call
imul
sbb
gs
cs
jno
push
or
cmc
mov
pop
push
dec
lahf
add
mov
mov
adc
inc
xor
pop
fcoms
stos
imull
pushl
pop
cmp
xchg
sbb
mov
push
out
xchg
les
lahf
pop
and
sub
and
outsb
xchg
out
enter
imul
fldt
dec
repz
in
mov
mov
test
negl
rep
jo
fdivrl
mov
popf
sbb
notb
add
leave
cwtl
lods
test
mov
push
sarb
adc
repz
mov
cltd
and
sbb
add
pop
lahf
jno
cli
pmulhw
sbb
bound
aas
push
mov
std
mov
in
rsm
rclb
pop
dec
adc
dec
aas
ficoms
or
sub
add
xor
mov
sbb
jno
push
pop
pushf
lret
leave
cmpsb
jmp
out
cmpsl
mov
xor
hlt
cld
mov
add
pop
cwtl
lret
mov
xor
inc
fdivs
je
xor
inc
adc
lret
xchg
addr16
pop
mov
or
das
xchg
iret
and
mov
xchg
sub
stos
jmp
jne
jo
movsb
push
in
jmp
xchg
je
inc
subb
and
pop
xchg
cltd
ffree
stc
push
dec
into
cmp
cmpsb
incl
loope
sbb
je
lret
mov
pop
in
push
pop
lds
mov
or
fcmove
sub
js
mov
jg
out
pop
sbb
scas
daa
fcomps
rolb
mov
sbb
cmc
es
imulb
push
mov
xchg
hlt
int
add
inc
dec
xchg
jecxz
mov
xor
jno
xor
or
jecxz
mov
lret
fiadds
jg
push
pop
subl
cmp
pop
and
adc
cld
or
loop
cld
sub
push
in
cltd
add
push
add
xchg
sub
pop
xchg
scas
xchg
scas
loope
jne
mov
cld
mov
pop
cltd
jg
xchg
xchg
clc
push
fs
pop
fcmovbe
ror
into
pop
push
andb
orl
leave
lods
aam
and
mov
sti
popa
sub
pop
arpl
cltd
ja
popa
mov
pop
xor
out
rcll
adc
inc
or
fstpt
cltd
xchg
outsb
adc
add
or
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
leave
je
mov
xor
test
ja
in
imul
lea
out
cmp
or
sub
push
sbb
jp
adc
fdivs
pop
enter
xlat
mov
pop
jo
xor
mull
add
rolb
mov
arpl
cmp
pop
rcl
adc
inc
stos
fwait
call
call
loope
and
movl
pop
jns
jo
cmp
cmp
stos
mov
and
pop
leave
psubb
pop
imul
jmp
mov
addr16
ds
fs
mov
and
push
jp
and
push
popf
pop
sub
jne
and
cmp
shr
sti
xchg
mov
pop
in
pop
ljmp
push
push
jle
adc
xchg
test
call
push
sbb
xchg
arpl
movsl
rcll
jg
lret
add
sti
mov
mov
sub
testl
das
loopne
push
or
out
addr16
and
popa
bound
stos
rcr
adc
imul
mov
ja
int
push
inc
in
mov
xchg
dec
ds
add
inc
or
mov
and
mov
jno
adc
xchg
cld
pop
repz
in
stos
xchg
aam
inc
rorl
fnstcw
pop
cmc
hlt
push
add
xor
cli
call
dec
mov
ljmp
push
mov
aam
idivl
cmp
insl
in
jp
jmp
add
iret
xor
jae
add
cltd
test
std
sbb
repnz
std
lahf
pusha
dec
outsb
das
push
roll
and
inc
shrb
push
xchg
dec
enter
inc
jne
cwtl
xor
dec
inc
std
sub
dec
cli
popf
test
shlb
sti
aaa
fdivr
mov
push
fldenv
jp
xlat
add
test
mov
push
add
fiaddl
mov
inc
lea
and
adc
xor
fmull
inc
add
pushf
addr16
imul
fs
add
mov
add
sbb
ror
cmpsl
push
pop
nop
or
pusha
xchg
out
insb
in
xlat
add
ror
sbb
xor
sub
sarl
mov
sbb
mov
push
mov
or
mov
ret
jmp
out
add
pushf
notl
push
ljmp
test
xchg
lds
xchg
fcmovne
xchg
mov
fbld
lock
xchg
cmp
imull
mov
cmp
shll
cli
push
xor
add
movsb
pop
jne
sahf
das
push
pop
inc
fisubrs
aad
or
and
sub
leave
push
dec
cmp
shrb
mov
aaa
adc
dec
xchg
push
shll
xchg
pop
xor
stc
imul
xor
out
dec
sbb
sub
roll
stos
lahf
jbe
jmp
and
lds
arpl
inc
cmpsb
pop
add
cmp
aaa
push
add
dec
sbb
mov
add
shlb
dec
je
mov
rolb
pushf
lods
mov
cmpb
sbb
adc
mov
pop
push
incl
mov
and
or
jb
sbb
movsb
mov
dec
sub
mov
mov
inc
clc
or
call
rolb
adc
das
leave
push
fidivrl
jle
jge
dec
movsl
test
int
test
xor
pop
idivb
in
das
add
mul
pushf
imul
and
fwait
pop
mov
je
fistpll
fildl
movsl
mov
rol
jg
dec
nop
pop
add
shlb
ficomps
mov
das
cltd
das
test
sub
jnp
movsl
in
ds
push
or
jle
shrb
inc
and
pusha
sub
in
insb
lret
lock
mov
andb
adc
outsl
les
xor
push
mov
cmp
lahf
pushf
fadd
das
cmp
leave
cmp
xchg
dec
cmpb
loop
sub
iret
test
test
xchg
pop
stos
jb
cltd
jmp
sbb
sbb
add
cmpsb
sahf
push
cmpsb
xchg
sub
fcomps
pop
cld
outsl
mov
sbb
pusha
daa
test
dec
test
push
inc
add
pop
adc
cltd
mov
out
movsb
lcall
ja
xor
mov
aam
mov
cmc
xchg
pop
xor
mov
arpl
mov
push
in
leave
addb
jg
sub
sub
bound
or
and
shr
sub
icebp
icebp
aas
rol
xchg
pop
or
fidivs
fs
and
cmp
add
push
mov
fs
mov
mov
addr16
jb
inc
enter
rep
rolb
mov
sub
and
popf
pop
adc
mov
and
mov
jg
jne
cmp
push
call
andb
sub
dec
dec
fisubrs
movsb
clc
push
ljmp
xchg
aaa
fcmovne
pop
sbb
leave
add
cld
rcrb
insb
inc
push
insl
out
dec
mov
les
movsb
lock
aam
fstl
add
or
je
out
xor
mov
or
imul
loopne
dec
and
fdivrs
loop
cmp
aad
in
in
pop
out
cli
pop
adc
pushf
lret
xor
or
adc
jns
mov
enter
andl
push
arpl
dec
ss
pop
add
idivb
pop
xor
fists
outsl
pop
cmp
sub
jo,pn
mov
sub
lock
jb
adc
mov
arpl
pop
sbbb
adc
push
mov
push
fiaddl
loop
adc
mov
mov
sub
adc
xchg
xchg
mov
orl
xor
movsb
push
add
or
ja
inc
cmc
pop
jae
xchg
mov
mov
ret
jecxz
outsb
pop
add
insl
add
popa
push
cltd
sbb
sub
sub
inc
fnstcw
pop
jmp
lret
pop
inc
pop
cmp
push
inc
push
inc
and
cmp
imul
fwait
call
ljmp
mov
es
mov
jbe
dec
sti
roll
cmpsb
sub
inc
fcompl
iret
into
dec
cmp
inc
ljmp
push
jo
in
sbb
lret
push
push
loope
fstpl
test
pop
mov
mov
stos
test
iret
mov
or
sub
ds
and
cmp
lds
cmpsl
shrb
insl
xor
in
jne
sbb
mov
push
inc
rcl
test
push
int
mov
add
inc
cld
jle
daa
adc
xor
mov
rorb
ret
inc
and
lcall
jp
mov
inc
into
mov
add
or
inc
push
xchg
mov
xor
or
cmp
cltd
push
stos
jecxz
mov
push
inc
lret
sbb
cmp
mov
cmp
cmpl
orb
xor
push
stos
cmp
out
int
pop
mov
ja
jbe
movsl
push
or
mov
mov
jns
lcall
fstpt
ds
push
and
ret
pop
popa
mov
pop
push
nop
add
mov
dec
pop
pop
insl
out
cmp
repnz
loopne
out
and
dec
push
das
je
pushf
das
mov
sbb
fiadds
mov
stos
inc
shr
in
into
jl
push
jae
mov
mov
xor
mov
mov
inc
jbe
jb
sahf
mov
pushf
adc
jle
repz
jmp
in
mov
call
mov
cmp
jns
xor
xor
lea
ret
inc
clc
iret
mov
xor
icebp
bound
inc
cmpl
add
shll
jb
mov
adc
mov
les
xor
movsb
cmp
scas
mov
pop
inc
sub
or
and
mov
shl
int3
cmp
mov
pop
jp
stos
jle
mov
xchg
xchg
pop
cmp
fists
out
jl
dec
ret
arpl
imul
inc
cld
push
mov
mov
jns
push
pop
pop
xorl
xorb
cvttps2pi
mov
push
jb
scas
inc
mov
push
mov
jmp
xchg
ror
enter
movsb
jae
je
js
adc
out
mov
in
jg
cmpb
je
fnsave
shlb
or
or
imul
sub
xchg
xchg
push
inc
sub
adc
bound
adc
jnp
and
in
sbb
sti
addl
pushf
cltd
in
mov
popf
xchg
push
add
scas
mov
inc
xchg
jns
mov
test
shr
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
in
pop
jbe
add
push
dec
lock
iret
push
xor
int3
and
push
cmpsb
adc
dec
pop
or
stos
mov
xor
and
jno
dec
fiadds
sub
pusha
mov
cs
aam
sub
mov
dec
fcom
stos
sub
std
decb
add
cmpsb
push
test
pop
gs
xor
ret
xchg
mov
ss
and
pop
jmp
fs
call
xlat
dec
xlat
ret
and
iret
fadds
xlat
loope
mov
cmp
push
xchg
sbb
aaa
in
imul
arpl
ret
inc
scas
icebp
negl
pop
xchg
sbb
jge
dec
inc
xchg
jno
fisubrl
jb
dec
cmp
lea
mov
sbb
jecxz
call
fstpt
cltd
xchg
outsb
adc
xorb
fdivp
cwtl
dec
inc
into
fidivs
lahf
scas
adc
xchg
sub
arpl
lret
inc
into
or
jbe
sbb
lods
cli
sbb
in
xchg
jne
xchg
add
dec
adc
inc
xchg
les
sbb
inc
push
ret
leave
jmp
jecxz
fxch
fnstsw
lahf
call
lea
out
sahf
ret
fnstsw
pop
negl
mov
pop
cs
and
sub
dec
sbb
test
push
cmc
mov
hlt
mov
dec
jae
adc
mov
out
adc
inc
xchg
xor
push
pop
je
es
xor
ds
mov
dec
ljmp
xchg
mov
popa
in
lea
stos
mov
xor
or
insl
call
lock
aas
cmp
xor
xor
imul
enter
jp
gs
loop
cmp
mov
inc
and
enter
lds
push
fld
mov
add
lret
scas
pop
and
das
xor
xchg
popa
adc
add
ret
aad
xorl
inc
mov
notl
push
stc
scas
xlat
ret
out
popf
add
imull
stos
sbbb
insb
mov
in
sbb
cmp
or
cmp
mov
cmc
sbb
jle
mov
orb
mov
cmp
data16
add
jne
add
mov
push
push
adc
dec
cwtl
dec
jnp
testb
cltd
out
pop
std
jo
cmpsb
jge
push
jnp
lds
fs
mov
sbb
push
lods
test
dec
int
xchg
add
scas
outsl
jb
fimuls
jp
ret
int3
cmp
pushf
cld
les
pop
imul
xchg
mov
push
test
sbb
arpl
lret
inc
mov
jl
or
fcomps
loopne
je
xchg
push
pop
daa
or
xlat
lds
mov
leave
cmp
addl
dec
xchg
adc
add
lret
test
mov
sbb
pop
add
add
test
mov
fsts
fs
movl
jo
outsl
add
adc
movsb
hlt
mov
and
xor
ficomps
and
repnz
stc
int
mov
xchg
lcall
sub
jns
cmp
xchg
xchg
adc
and
mov
loopne
je
addr16
test
loopne
mov
cwtl
movsl
shlb
arpl
cld
pop
movsl
mov
pop
dec
push
xchg
mov
js
xor
mov
fldl
nop
out
pop
xor
aam
in
cmovbe
push
int
mov
into
xchg
pop
jmp
mov
mov
xor
daa
call
mov
nop
lods
shll
xor
lret
mov
stc
in
or
shlb
rol
push
shl
inc
std
mov
dec
int3
mov
ret
fisttpll
mov
repz
fwait
dec
mov
adc
ds
mov
incl
dec
jp
jge
cmpsb
out
push
mov
imul
lcall
push
mov
add
lret
sahf
mov
and
das
js
sbb
mov
fidivrl
movsl
cmp
and
lock
lret
mov
adc
test
add
jge
loop
sbb
orb
push
jg
xchg
inc
mov
jge
mov
subb
adc
sbb
icebp
fdivl
int
fisubrl
sbb
cli
iret
or
dec
ret
mov
dec
andl
gs
lods
pop
dec
jo
imul
push
test
insb
xor
lock
dec
inc
fcomps
cmp
push
mov
shlb
pop
mov
xchg
or
into
add
dec
loop
mov
sbb
ljmp
test
jmp
sbb
jmp
xor
pushf
and
jnp
repnz
clc
arpl
test
repz
inc
xchg
mov
sbb
or
lock
ret
adc
push
adcb
push
enter
sub
jg
cli
addr16
lcall
inc
psrlw
adc
lock
xor
hlt
or
fcmove
stos
int3
sub
add
xchg
lods
jae
cld
clc
xchg
push
in
lret
fwait
movsb
pop
inc
rcl
fs
subl
inc
aas
in
add
xchg
jecxz
or
xchg
push
movsl
pusha
js
cmp
shlb
outsb
mov
sbb
xor
rorl
testb
mull
lahf
push
push
push
or
movsb
int
jg
fistpl
repz
and
dec
test
cmpsl
dec
shl
out
pop
rcr
xchg
aaa
dec
cmp
stc
sbb
out
jmp
add
and
ja
pop
and
add
ret
or
jne
addr16
out
aam
insl
xchg
int3
pop
popa
push
push
std
dec
mov
mov
lret
lock
js
movsl
loope
inc
rcrl
or
sub
sub
xor
sahf
mov
insl
jne
mov
xchg
sti
es
and
pop
icebp
push
repz
cmp
pop
and
iret
je
stc
add
fucomip
ret
les
rolb
test
pop
enter
and
cmp
fcmovbe
popf
popf
mov
sbb
mov
pop
adc
jbe
lods
push
popl
jbe
xor
cltd
add
inc
leave
xchg
pop
xchg
jmp
cmp
int
jle
add
fdiv
insb
cs
mov
xor
cmp
in
stmxcsr
xor
shlb
mov
pop
nop
fiadds
cmp
sbb
add
dec
xlat
dec
pop
call
mov
subl
mov
pop
mov
and
mov
aam
cli
adc
add
ret
mov
fstl
mov
mov
dec
ret
cld
push
insb
dec
dec
add
mov
mov
jnp
fdivrs
fdivp
into
out
pop
or
das
pop
out
push
andl
dec
jl
and
mov
mov
pushf
inc
rcl
mov
in
push
cli
sub
sbb
mov
negb
push
jo
jge
cltd
dec
pop
mov
sbb
clc
jecxz
jmp
ja
adc
dec
inc
gs
popa
repnz
jno
ss
stc
jno
sub
mov
es
xor
movq
ret
jg
dec
xchg
les
arpl
adc
loope
mov
inc
faddl
popa
xorb
mov
ss
mov
push
gs
loop
jno
pop
cs
jns
sbb
mov
mulb
hlt
fsubl
insb
popa
adc
and
adc
jg
movsl
mov
int3
xchg
mov
jnp
fdivrs
fidivrs
xchg
jo
inc
jns
xchg
fisttpll
add
std
test
mov
cli
adc
pop
xor
push
add
aas
lahf
xor
lods
adcb
loope
lret
push
cmpsb
mov
notb
dec
aaa
out
hlt
xor
jp
jmp
jmp
or
push
and
or
pop
hlt
lock
roll
push
dec
cwtl
movsb
notb
cmp
sarl
sbb
cli
fisttps
jg
push
xor
ret
shr
movsb
mov
mov
dec
int3
xchg
and
insb
pop
and
cmp
fs
lret
outsb
mov
mov
dec
shll
shll
add
pop
mov
add
icebp
dec
ljmp
jno
pop
ret
ds
sahf
xchg
lds
call
adc
mov
stos
addr16
lock
xchg
sub
fs
sbb
outsb
daa
les
pop
call
clc
jp
movsl
ljmp
or
push
add
jg
test
inc
aam
clc
stos
jle
inc
insl
shrb
hlt
adc
in
pop
sbb
cmpsl
mov
test
mov
jge
fdivr
in
mov
inc
and
jp
ficoms
cmc
jo
repz
pop
jb
inc
pushf
fistpll
sahf
mov
lea
fdivrl
pop
xor
nop
mov
insb
xchg
mov
mov
xchg
xor
mov
pop
pop
inc
jb
jne
daa
flds
xchg
js
sbb
sbb
mov
test
jb
fimuls
shll
mov
inc
mov
sahf
int
fstps
notb
ds
pop
pop
add
inc
stos
stos
movsl
or
lds
sub
idivl
push
xlat
add
sbb
stos
je
stc
pusha
stos
jmp
outsb
pusha
mov
xchg
adc
and
je
pop
sbb
push
or
dec
sub
scas
sub
dec
xchg
sar
and
imul
cmp
jb
and
mov
and
add
push
add
fwait
test
pop
cmp
cmc
cmp
enter
mov
jnp
inc
and
mov
pop
rol
xchg
frstor
stos
les
subb
in
shll
ja
pop
repnz
xor
or
mov
jns
mov
jge
lods
jecxz
mov
lret
pop
inc
pop
mov
cmp
cmp
or
sete
mov
subl
xor
cltd
loope
xchg
imul
sub
and
adc
scas
pop
mov
pop
loop
push
xorl
lret
adc
cmp
into
jae
test
insl
or
insb
push
mov
and
jecxz
mov
inc
cwtl
mov
pushf
adc
mov
mov
das
mov
inc
adc
cltd
sbb
inc
dec
fwait
dec
jecxz
mov
out
lods
lea
repz
ds
mov
push
jle
out
mov
out
mov
inc
pop
call
mov
jno
shrd
push
dec
mov
enter
jp
dec
jle
fistl
in
ja
popa
fsin
loope
cs
pop
or
add
or
cmc
fidivrl
mov
sbb
mov
in
jb
out
xchg
jno
mov
sbb
arpl
dec
lock
mov
xchg
adc
jno
xchg
and
push
popf
pop
dec
sbb
mov
icebp
rolb
jno
cmp
xchg
push
inc
mov
dec
rcr
std
or
data16
bound
rorl
notb
sbb
lds
sbb
inc
push
in
jmp
nop
add
adc
cltd
addr16
xchg
adc
inc
mov
icebp
je
scas
mov
hlt
jle
mov
pop
mov
xchg
mov
rol
and
ja
jbe
mov
xchg
das
in
imul
in
test
pop
jb
push
in
ljmp
xor
inc
jl
cltd
push
pop
ljmp
pushf
mov
or
stos
ljmp
mov
jecxz
lahf
cmc
inc
ss
inc
pop
rol
push
xchg
sub
aad
push
ret
cmp
sbb
pop
pop
daa
jo
test
cmp
pop
sbb
in
add
push
aas
xchg
rcll
cld
stos
repz
lock
movsl
push
mov
inc
pop
pop
pop
dec
hlt
inc
sbb
hlt
ds
mov
scas
mov
sbb
fldlg2
mov
inc
les
push
leave
and
or
jno
ret
popa
sbb
inc
push
pop
dec
xchg
adc
js
add
push
sub
jbe
mov
jns
shll
loop
inc
insl
ss
adc
dec
push
ret
pop
xor
scas
aam
jb
mov
sub
add
test
out
sub
shrb
xchg
and
cmp
push
or
jg
outsb
adc
push
xor
in
xor
sub
push
ret
push
mov
ret
cs
jnp
call
mov
mov
sbb
inc
cmp
lret
inc
divb
and
xchg
sub
sub
mov
out
out
adc
mull
rorb
div
or
xlat
in
mov
cli
xor
sbb
inc
scas
subb
inc
and
subb
stos
cmp
push
notl
subb
insl
mov
dec
or
pop
sahf
jno
or
push
insb
dec
sbb
scas
push
inc
ret
lods
push
frstor
fs
ret
pop
std
inc
mov
push
fmull
int
xor
out
lret
cmp
fs
pusha
movsb
ds
incl
icebp
scas
push
and
and
out
sti
and
insl
push
stos
add
subb
fs
adc
mov
fbstp
test
lods
test
jne
fnstenv
push
je
xor
dec
mov
sub
jmp
lret
mov
push
sti
outsl
xchg
mov
inc
leave
scas
dec
lods
test
adc
adc
dec
adc
xor
adc
mov
sarb
mov
mov
push
addr16
mov
je
cmpsl
push
aam
fiadds
subb
stos
lds
inc
aad
push
mov
fstpt
jo
dec
push
mov
push
flds
pop
pop
cmp
fcmovne
das
adc
aam
mov
rclb
jae
sbb
mov
repz
hlt
xchg
jbe
arpl
cmpsb
xor
jmp
lods
icebp
std
vmwrite
jne
fucomip
or
mov
cs
mov
fstl
ss
rcr
add
insb
iret
ret
and
call
mov
pushf
pop
xor
and
loop
lods
xchg
in
push
imul
mov
and
clc
push
aas
mov
push
or
mov
xchg
pop
ja
and
xchg
out
push
repz
push
add
jns
dec
jl
jae
mov
in
imul
call
cmp
mov
cmp
int3
and
push
adc
pop
bound
inc
jmp
stos
scas
cmp
lea
fidivrl
aad
ljmp
mov
popa
les
inc
push
dec
fcomps
mov
hlt
cld
lea
xor
jge
fcomps
insl
dec
in
xchg
push
stos
push
and
mov
jl
insb
cwtl
push
and
xchg
jae
fscale
sti
xchg
pop
fwait
jl
inc
jg
mov
or
mov
inc
cmp
cli
das
mov
push
das
jmp
jl
xchg
stos
arpl
lret
cli
add
inc
in
xchg
jmp
sub
adc
adc
xchg
adc
and
jge
mov
shl
jg
aas
jle
dec
jo
fstpl
jo
mov
loope
int
jecxz
or
add
stos
push
mov
ret
add
call
adc
iret
pop
test
jp
mov
sbb
adc
pand
jae
cmp
push
dec
mov
pop
or
lret
popa
mov
shl
xchg
xor
fwait
stos
in
and
or
lret
push
negb
cmp
mov
movsb
into
add
pop
mov
lret
mov
pop
fisttpll
out
rclb
push
sbb
adc
sub
sub
scas
out
mov
push
add
jmp
imul
sbb
or
jns
add
adcl
mov
jnp
jecxz
pop
ja
bound
clc
fimull
insl
test
sub
xor
mov
pop
dec
jne
xor
or
in
cmp
hlt
xchg
sbb
and
add
mov
gs
xchg
lock
lretw
sub
or
or
and
cltd
xlat
int3
rcrb
fildll
push
rcrl
jge
sub
mov
cltd
xchg
out
inc
pop
adc
clc
ja
or
xchg
mov
iret
mov
and
je
inc
sub
dec
pop
mov
mov
pop
push
cs
sub
addl
arpl
push
mov
add
fstps
jnp
xor
scas
dec
lods
sub
das
aaa
xor
hlt
lea
jbe
cmc
and
pusha
inc
jecxz
daa
fistpll
push
inc
xchg
sub
adc
cmp
imul
lds
pop
cmp
in
cmp
stos
loop
roll
nop
test
gs
out
adc
cmpsb
mov
sbb
inc
inc
ret
in
test
jno
mov
pushf
lods
int
or
mov
ficomps
xchg
js
test
lea
cli
out
dec
jo
pop
cld
outsb
bound
dec
cltd
or
push
sub
fsubrl
fstps
mov
pusha
insb
pop
fnsave
cmp
sub
rclb
dec
pop
push
or
cmp
push
add
xchg
inc
xchg
movsb
and
pusha
lcall
adc
pop
pop
mov
fldt
aad
push
pop
lahf
mov
add
push
out
out
push
loope
mov
xchg
mov
add
pop
xor
pop
and
jl
fisttpll
jmp
popa
imul
and
add
js
lret
push
cmp
fwait
sbbl
rorb
int
arpl
adc
jge
out
dec
scas
add
pop
jno
mov
mov
sar
mov
push
mov
pop
xchg
movsl
jnp
pop
aad
leave
call
push
loop
and
push
add
rcll
rorb
out
and
dec
sub
orb
cs
cli
lods
sbb
cmp
dec
stos
cmp
subb
cmpsl
pop
sub
dec
lds
mov
add
imul
sub
pop
cmc
push
add
adc
roll
xchg
pushf
push
inc
test
pop
xchg
jbe
pop
fwait
roll
jne
cmpsl
jnp
jp
pop
mov
xchg
and
js
or
pop
jae
mov
mov
dec
dec
mov
cld
inc
and
xchg
mov
push
fs
adc
jns
out
nop
and
xchg
dec
dec
fs
mov
in
sub
xchg
push
ret
pop
data16
jne
jecxz
ja
pop
aaa
test
and
repz
inc
add
push
xor
sbb
xchg
aas
mov
lods
popa
cmp
mov
bound
xchg
orb
xor
testb
jg
aam
icebp
xorb
out
test
icebp
and
out
lret
fsubs
insb
mov
jo
into
jb
jns
push
aam
xchg
in
rolb
inc
jb
adc
jg
fstl
dec
in
mov
push
insb
in
adc
mov
hlt
pop
in
data16
cmp
rorb
out
fwait
lea
dec
inc
lahf
movsl
jg
adc
inc
dec
int
pop
fistps
add
or
sub
xchg
mov
js
hlt
xchg
mov
testl
pushf
xor
in
pop
das
lret
mov
inc
lea
jge
pusha
ljmp
sbb
inc
push
or
xor
out
add
sub
imul
lods
jg
adc
xor
repz
or
es
pop
inc
xchg
jecxz
inc
cmp
mov
adc
into
add
mov
jb
call
rorb
outsl
lret
stc
mov
inc
sub
cs
mov
sbb
xchg
push
and
mov
inc
sub
inc
cmp
adc
popa
mov
fnsave
jbe
cmp
rolb
fsts
xchg
pop
in
cltd
jl
add
jg
les
outsl
icebp
fs
xor
and
sub
int3
ss
sbb
push
xor
mov
pop
cltd
and
pop
lret
sub
push
loop
cmpl
mov
test
inc
jmp
fsubrs
mov
lods
ficoml
cmpb
rorb
ss
jp
scas
xor
xor
push
cmpsl
cmp
orb
ljmp
test
inc
push
lcall
inc
xchg
mov
das
mov
shl
inc
push
test
or
jno
push
sbb
add
xchg
push
inc
pop
jmp
jg
bound
or
and
xor
pop
fwait
mov
sbb
out
rsqrtps
int
in
mov
ficoml
fcompl
repz
cs
add
or
xlat
fdivl
popf
ret
cmpb
ret
mov
mov
pop
mov
lret
scas
ja
inc
subl
push
bound
je
cmc
in
mov
and
jo
lods
call
cs
arpl
jo
or
mov
sbb
fwait
enter
jge
dec
cmc
andl
inc
stos
stos
mov
cs
jbe
jne
mov
imul
loope
fdivs
inc
loope
jle
dec
sub
shrl
mov
nop
ret
mov
push
jnp
sub
sbb
cmpl
jecxz
add
ffree
out
xchg
lods
aas
lock
dec
dec
mov
movsl
gs
xchg
aas
ret
jl
in
jae
and
sbb
add
mov
cmpsl
push
aas
and
or
addl
cltd
in
jns
rclb
pop
test
imul
sti
cltd
mov
inc
xor
push
mov
lret
jge
stos
push
adc
sub
push
jecxz
shlb
xor
push
dec
popf
dec
mov
dec
dec
jo
ja
sbb
int
ret
cli
out
push
fstl
sub
js
push
add
aaa
movsb
jecxz
in
sarl
mov
jl
js
mov
outsl
inc
and
scas
and
cmpsl
add
adcb
ss
adc
sahf
loopne
sarb
mov
or
dec
lods
cmp
push
cld
cmpsb
sub
je
jg
cmp
int3
adc
push
add
jmp
or
scas
hlt
cmc
xchg
cmp
sti
ds
add
mov
inc
pop
mov
or
rcrb
adc
shrl
sbb
jg
lods
or
mov
sub
pop
cmpsl
pop
movsl
pop
cltd
pop
push
inc
or
loop
jle
pop
loope
pop
mov
addr16
dec
clc
sbb
dec
in
mov
mov
in
xchg
mov
and
mov
cli
or
push
roll
sbb
pop
sub
outsl
mov
ljmp
lahf
dec
mov
int3
shrb
mov
repz
jb
cwtl
dec
xor
jns
cmpl
shr
call
imul
pop
iret
pop
lea
ds
fs
xlat
subb
rorl
cld
addb
lret
xor
sbb
xchg
sub
mov
rcrl
pop
inc
cmc
mov
cmpsl
xchg
and
jmp
jl
fs
into
nop
in
pusha
movsl
fcompl
xor
sbb
dec
inc
mov
icebp
xor
arpl
dec
jecxz
loop
cwtl
addr16
out
test
imul
lods
std
fbld
out
mov
out
leave
mov
pusha
lds
mov
imul
add
sub
ds
into
repz
sbb
into
leave
in
cmpsl
cmp
mov
movsl
adc
out
pop
sub
test
xchg
dec
sbb
ja
fwait
outsb
push
jno
std
and
sbb
pop
mov
push
stos
js
lret
inc
fisttpll
int3
rcrb
icebp
cltd
std
xor
shl
pop
bound
nop
insl
daa
outsb
mov
jo
push
pop
int3
push
push
adc
xor
pop
fldenv
lcall
cmp
or
mov
and
or
inc
add
stc
shl
jns
gs
cmp
leave
lock
jl
enter
mulb
lock
loop
inc
out
jno
ret
sub
or
push
int3
pop
and
ficoml
mov
dec
dec
and
scas
sbb
das
and
push
inc
mov
and
mov
ja
add
xchg
add
xor
test
mov
int3
in
mov
mov
push
mov
fistl
xchg
popa
mov
movsl
mov
add
xchg
imul
add
sbb
dec
iret
lcall
aaa
xor
dec
and
scas
lods
aaa
adc
xchg
outsb
adc
orb
test
add
or
addl
mov
imul
imul
popf
push
mov
in
mov
into
sbb
mov
mov
cmp
cmp
mov
adc
in
mov
cmp
inc
pushf
cmp
pusha
xchg
in
pop
push
fsubl
nop
xchg
jmp
jb
ret
xchg
or
bound
adc
outsb
sti
pop
sbb
jmp
dec
add
test
xor
adc
iret
lret
jb
in
jne
mov
lcall
jnp
adc
std
aam
push
pop
por
arpl
into
sbb
fistpll
mov
fadds
xchg
inc
out
nop
loope
popa
rcrl
push
mov
push
sub
pop
jg
dec
mov
test
jmp
inc
jmp
iret
dec
or
in
xchg
mov
pusha
loope
rorl
sub
mov
jae
inc
inc
nop
or
fldenv
shlb
outsl
imul
cmpsb
dec
inc
out
dec
pop
dec
subb
pushf
jle
pop
mov
mov
inc
bnd
jmp
mov
dec
cmc
ficoml
cmp
cmp
lods
mov
or
outsb
add
xchg
imul
sbbl
insl
inc
dec
jns
aaa
mov
es
out
cmp
pop
xlat
adcl
int3
or
mov
fwait
sbb
adc
ljmp
stc
into
sti
ss
mov
adc
nop
mov
aaa
xlat
leave
inc
dec
popf
int3
addr16
push
inc
cli
daa
scas
jae
mov
pop
xchg
mov
outsb
dec
idivb
or
in
add
jp
fsubs
push
or
call
ret
lods
fdivl
test
data16
push
sbb
mov
push
out
inc
cmpsb
decb
add
iret
mov
roll
nop
in
push
orb
repnz
mov
add
loop
pop
js
push
pusha
iret
lret
outsb
mov
mov
or
lret
mov
in
bound
sbbl
dec
pop
loope
faddl
int3
xchg
jns
inc
pusha
push
push
xchg
cmc
mov
rcrl
outsb
lock
cwtl
pusha
xor
jl
add
mov
inc
stos
sbb
xchg
fdivs
push
das
xor
or
push
rorl
idiv
cmp
xchg
inc
cmp
adc
imull
sub
incb
pop
imul
cmp
popf
mov
dec
dec
lcall
arpl
mov
stc
fstpt
pop
mov
mov
inc
dec
mov
mov
data16
mov
fsubr
dec
enter
es
mov
fistps
mov
loop
mov
mov
dec
cmp
enter
or
jne
dec
push
jno
imul
test
mov
pushf
loop
in
test
push
xchg
sahf
mov
xor
jecxz
pop
ret
ja
inc
pop
cmp
aaa
mov
jl
and
sbb
ret
mov
pop
or
das
test
out
push
pop
fnstenv
sahf
push
xchg
sbb
dec
push
outsb
aas
pop
sub
sub
popf
fbld
lock
lods
pop
out
insb
in
and
aas
shl
add
negl
icebp
sub
stos
push
aam
stos
faddl
dec
scas
push
xchg
xchg
mov
xchg
out
out
loopne
push
ret
sub
jle
addb
popf
cwtl
js
scas
cli
adcl
sub
addr16
xor
adc
lods
or
dec
xor
sub
add
imul
or
or
xchg
adc
int3
lea
imul
fcomp
mov
inc
into
pop
mov
mov
movsb
fldt
or
repz
inc
mov
jg
gs
rclb
add
pop
xlat
dec
xor
lods
or
bound
aas
out
aam
icebp
sbb
lahf
out
xorb
add
push
or
lret
rcrb
or
or
popa
test
js
fidivrl
stc
and
and
fsts
jbe
cmp
lock
test
mov
xor
push
cmp
xchg
jno
inc
pop
popa
fidivrs
jecxz
popf
sub
push
push
data16
fcmovnbe
xor
lock
adc
xchg
nop
dec
lock
outsb
int
add
mov
insb
mov
push
jns
jbe
movsl
in
or
stc
ljmp
sub
mov
arpl
in
shrl
leave
cmp
addl
mov
fidivrs
jns
sbb
hlt
push
leave
icebp
sub
push
ret
jg
cmc
mov
push
xor
in
ss
mov
int3
lods
sub
cmp
sub
pop
mov
mov
sbb
insb
jbe
into
jecxz
dec
popa
ret
sarb
fwait
outsb
mov
divl
repz
xchg
dec
jb
fwait
daa
sbbb
lds
gs
mov
das
andl
or
lret
jmp
int
sbb
and
inc
sub
xchg
fiadds
push
lahf
out
xor
fildll
aad
push
mov
stc
xchg
mov
mov
mov
jbe
ja
or
cmp
dec
mov
fisttps
imul
shlb
mov
mov
outsl
jae
adc
in
pop
std
insb
pop
test
sub
lret
popa
sti
ds
mov
call
xchg
out
fcmovu
push
pop
ljmp
popf
dec
and
sbb
les
add
push
lods
push
sub
testb
mov
insl
repnz
popa
mov
inc
dec
pop
mov
sub
imull
pop
inc
jp
pop
cmp
cwtl
adc
add
test
jo
mov
loopne
loop
xchg
push
bnd
mov
mov
loopne
mov
adc
out
mov
push
and
lods
and
icebp
and
orb
iret
cwtl
loop
mov
jno
add
in
aad
into
dec
pusha
enter
jle
push
jno
lret
jecxz
xor
mov
pop
mov
idivb
dec
ss
sub
pop
pop
mov
sub
adc
mov
popf
or
std
add
jge
ljmp
jo
push
mov
das
cmp
test
cmp
adc
bound
and
xchg
add
push
aas
movsl
lcall
and
imul
sti
call
stc
pop
jno
push
push
arpl
add
repz
scas
mov
push
int3
adc
mov
stos
push
aam
jnp
inc
add
inc
cli
adc
cmp
fstps
inc
out
inc
add
fs
add
arpl
pop
dec
xor
cmp
jbe
int
fisubrs
daa
fcoml
lea
mov
inc
and
xchg
js
popf
insl
ja
rorl
sbb
mov
adc
movsl
cmp
jbe
idivl
fs
pop
mov
fdivp
jmp
xor
pop
movsb
int
cmpsl
insl
insb
ret
fnstsw
loopne
call
push
dec
scas
mov
mov
addr16
rorl
adc
aam
jmp
ret
jmp
rol
js
mov
inc
mov
adc
mov
repnz
pop
adcl
push
or
dec
loopne
fadd
icebp
mov
fwait
sbb
mov
das
scas
lret
div
sub
jb
leave
shl
jle
mov
hlt
push
lcall
in
movl
in
dec
data16
pop
or
or
outsl
movsl
hlt
push
pop
js
jmp
push
mov
scas
das
out
and
pop
aaa
mov
loope
in
lods
dec
pusha
dec
aam
lock
adc
cmp
inc
imul
adc
or
and
leave
cltd
cmc
or
imul
pop
je
cmp
in
mov
test
cmpsb
pushw
scas
cli
nop
jg
fsubrs
cwtl
int3
in
cmp
aaa
xchg
xor
jns
dec
xorl
cltd
int3
icebp
adc
cmpsl
jbe
imul
rcll
mov
test
test
popa
out
jns
sbb
jecxz
sbb
sub
mov
dec
jns
rcrb
fdivs
leave
jmp
mov
pop
das
or
adc
stc
nop
xor
xlat
cmp
orb
fstpt
in
pop
lods
xchg
jae
addr16
js
dec
es
pop
rorl
inc
xor
adc
mov
clc
mov
popf
sbb
jle
xchg
sub
dec
leave
xor
sub
in
mov
test
xchg
test
jmp
sti
pusha
shl
fwait
jle
push
mov
pop
mov
xor
xchg
mov
or
inc
je
out
scas
packuswb
ljmp
dec
or
push
fstl
cmpsl
pop
addr16
and
add
out
movsl
repz
scas
mov
xor
ds
aaa
cltd
or
loope
ljmp
and
xchg
xor
or
mov
inc
inc
loope
jb
ret
int3
call
inc
lock
cmp
jmp
loop
aaa
mov
into
xlat
mov
cmp
push
adc
push
adc
fdivr
dec
inc
xchg
jb
xor
mov
adc
loopne
cmp
sti
cld
lods
cmp
fcomps
pop
imulb
or
cmp
mov
lea
xchg
lcall
sbb
sub
int
cltd
mov
loopne
push
test
fucom
jns
mov
stos
scas
xor
leave
mov
jg
dec
add
pop
mov
cmpsb
scas
and
sarl
inc
sti
ds
push
cwtl
cmp
mov
mov
jl
mov
pop
mov
sbb
mov
loop
imul
cmp
add
movsl
xor
std
sbb
jno
push
in
mov
add
push
and
orb
mov
dec
add
mov
mov
mov
cmp
sbb
pop
mov
adc
jns
add
dec
fxch
shrb
xchg
inc
arpl
leave
mov
xchg
xlat
or
pcmpeqb
mov
ss
into
and
xchg
add
outsl
jno
test
sub
push
fisttpll
mov
sbb
add
shrb
add
push
sub
lret
jg
pop
or
sub
mov
je
stos
mov
test
stos
mov
aaa
aaa
jno
test
lock
jmp
outsl
movsb
sbb
mov
aas
sub
lds
jmp
mov
push
or
fwait
lock
arpl
dec
jg
orb
dec
fcoml
out
inc
leave
sbb
movsl
mov
mov
out
clc
aam
sahf
or
insb
sub
rolb
clc
jbe
mov
fcoml
lods
out
pop
out
sahf
xor
mov
pop
push
mov
popa
jmp
je
jp
test
fdivrl
push
aam
or
pop
ret
jle
loope
mulb
jno
mov
cmp
je
lods
test
cmp
call
outsl
lret
xchg
pop
jnp
cmpsl
pop
ljmp
push
insb
push
pop
xor
mov
repz
mov
test
push
std
repz
mov
pusha
or
cltd
ss
push
imul
jge
pop
add
ja
subb
xchg
popf
pop
cmpsb
lcall
add
push
mov
dec
aas
aam
xlat
movb
push
divb
enter
adc
decb
xchg
dec
xchg
xchg
out
xchg
mov
insb
dec
mov
test
pop
push
ret
and
xchg
pop
mov
clc
dec
pop
push
push
iret
push
push
and
and
lods
outsl
and
repz
leave
mov
sbb
clc
test
repz
imul
ja
and
outsl
ja
push
jnp
scas
xchg
and
mov
neg
xchg
cld
push
push
std
ret
in
jmp
sbb
pushf
mov
test
xor
movsb
icebp
jne
jecxz
add
and
mov
dec
rcll
subb
mov
lret
or
mov
push
dec
lea
cmp
adc
xor
sbb
cs
in
mov
push
lret
dec
lahf
xchg
test
leave
ret
jl
idiv
insl
push
dec
mov
imul
mov
jb
or
insl
pop
inc
push
adc
inc
pushf
outsl
dec
xorl
repz
pop
test
mov
dec
xchg
adc
dec
lods
adc
and
test
jno
push
mov
add
aaa
out
dec
rcll
cmp
sub
jg
test
rcl
nop
adc
mov
adc
pop
lds
mov
into
je
add
popf
mov
int
adc
mov
andl
pusha
sbb
or
pop
popl
mov
dec
xor
inc
push
enter
fisubrs
xchg
aaa
xchg
xchg
inc
insb
fists
xor
cmpsb
jo
inc
mov
das
sbb
jnp
andb
cltd
push
adc
xor
pop
cmpsb
cmp
or
repz
fs
add
push
cmp
nop
push
dec
or
add
pushf
dec
andb
call
sti
rorb
fnstenv
fwait
cmp
xor
push
sbb
mov
nop
mov
rorl
loopne
cmp
jo
and
inc
cmpsl
cld
pop
sti
pop
xchg
jb
in
xchg
jbe
jge
fldt
dec
dec
mov
add
rorl
ds
leave
leave
mov
sbb
xchg
lret
fs
scas
pop
pop
mov
ljmp
mov
add
mov
sub
inc
cmp
xor
out
mov
stos
cmp
imul
inc
popa
aaa
jge
dec
loope
mov
push
adc
and
dec
stos
push
xchg
cmp
push
or
scas
fisttps
push
les
and
mov
mov
and
mov
mov
ss
sbbl
fdivrs
mov
jg
pminsw
dec
stos
jo
push
jne
mov
dec
outsb
cmpsb
jl
jle
lea
mov
das
jp
daa
cmp
nop
test
pop
sub
xor
add
repnz
or
add
sbb
and
pop
sti
scas
xchg
and
lcall
int
scas
push
xor
clc
call
mov
jmp
les
fldl
testb
jb
rolb
sbb
rol
xchg
ss
pop
jge
fdivr
and
sbb
in
and
aad
push
std
sub
xchg
cmpsl
loop
and
push
imul
mov
enter
scas
xor
push
rcrb
dec
mov
mov
lea
stc
push
or
sbbb
mov
pop
and
enter
cld
inc
pop
push
mov
xor
jns
xchg
or
dec
andl
mov
leave
sub
mov
mov
jge
inc
fs
jne
cmp
decl
hlt
lock
nop
adc
push
fisubs
dec
cmp
inc
bound
clc
push
mov
lret
pop
aam
jl
aaa
test
mov
popl
add
lds
dec
mov
mov
test
jae
adc
pop
cmp
inc
push
test
shrl
sub
and
lret
add
inc
adc
bound
inc
sbb
dec
push
imul
xchg
and
mov
xlat
sti
xor
ror
clc
add
out
mov
repz
jp
iret
lret
in
sbb
dec
inc
mov
rcll
mov
loope
sub
mov
cmp
push
int3
stos
pop
xchg
je
mov
fucomi
xor
sub
xchg
mov
mov
loope
add
push
jmp
dec
dec
insl
popa
test
iret
cmp
inc
pop
mov
lret
shrl
js
xchg
dec
rol
xchg
mov
fistps
int
stos
test
mov
sbb
jmp
xchg
push
xor
mov
cmpsl
cmp
xor
and
pusha
inc
mov
dec
arpl
mov
sahf
ljmp
sub
mov
movl
sub
cmpsw
adc
inc
pushf
mov
add
xchg
xchg
out
dec
in
and
jne
addr16
mov
jno
push
pop
add
in
cltd
enter
in
scas
dec
mov
lock
int
jmp
cmc
pop
mov
adc
insl
hlt
in
pop
and
cli
pop
sbb
pop
pop
in
test
jle
pop
xchg
inc
rcrl
push
push
out
add
dec
shll
xchg
jo
adc
sbb
lea
xchg
addr16
cmpsb
clc
mov
lcall
push
dec
cltd
iret
or
rcr
mov
push
xor
aaa
push
and
mov
sub
bnd
inc
imul
push
lods
mov
xchg
sahf
subb
popf
nop
adc
fimull
push
mov
fwait
inc
sti
lods
pop
ret
test
les
sub
push
pop
arpl
pop
push
mov
or
je
adc
pusha
pop
push
aam
enter
push
xchg
stc
cmc
mov
inc
and
sub
aam
scas
in
es
out
inc
mov
lods
rclb
insb
fs
mov
pop
sbb
aaa
inc
mov
lds
sarl
neg
lock
cli
in
in
dec
xchg
lods
out
loop
and
inc
mov
shll
je
shll
inc
cli
mov
movsb
pop
pushf
push
sarb
sbb
jl
sahf
or
in
dec
and
dec
sub
mov
rorl
mov
es
and
sbb
fldl
out
aam
jg
cwtl
adc
xchg
je
into
stos
cli
mov
jne
dec
rcrb
je
lods
xchg
mov
and
add
arpl
mov
jb
testl
pop
repnz
outsl
dec
mov
imul
inc
jecxz
es
in
shl
lahf
in
movsl
sbb
scas
popa
fcmovnbe
mov
clc
cmp
mov
adc
call
xchg
sahf
fstl
inc
and
arpl
inc
add
sub
scas
iret
xor
mov
add
add
stc
shrb
mov
jle
mov
fcomi
int3
and
icebp
data16
xchg
or
or
out
sub
cmpsb
data16
push
inc
es
lock
sbb
and
lock
fistpll
int3
outsb
inc
int3
test
mov
pop
out
rcl
outsb
popf
out
pop
popa
insl
sub
popa
movsl
out
xchg
aas
call
lahf
inc
ret
repz
test
ds
xchg
push
jge
push
jg
lods
dec
push
or
jecxz
aaa
jge
rcr
in
xchg
test
fidivl
inc
fcomip
xchg
aas
add
and
imul
outsl
and
sub
out
xchg
mov
xor
pop
fldenv
mov
movsl
test
notl
lock
test
mov
loop
sarl
lods
mov
sarl
cmp
cmpsb
int3
mov
jb
and
or
lds
test
dec
and
cwtl
inc
int
fnstcw
hlt
mov
scas
int
fmuls
jmp
cmp
mov
or
je
cmp
pop
test
lods
jp
mov
shl
cld
int3
jmp
xor
js
xchg
insl
sub
push
aam
das
dec
out
imul
lods
sbb
or
stos
stc
add
ss
filds
push
pusha
mov
subb
or
push
xchg
adc
push
push
jp
xor
xchg
enter
jnp
int3
bound
enter
lret
mov
pop
int3
pop
adc
xlat
repnz
bound
xchg
adc
rorl
stc
ret
outsb
ja
sti
test
xor
add
icebp
gs
fisubs
fucom
lret
xchg
xchg
scas
jp
data16
out
out
jge
xor
jmp
fists
pop
push
mov
scas
das
fld
pop
jmp
pop
frstor
aad
js
xchg
pop
add
ljmp
mov
sbb
int3
xchg
lds
pushf
insl
add
hlt
adc
fadds
pop
addr16
stc
sahf
jl
xchg
add
add
call
xor
cmpsb
jecxz
test
xchg
or
xchg
movsl
ficomps
or
inc
dec
fnstcw
fdivl
xor
pop
xor
mov
sti
mov
or
lea
ret
stos
xchg
cmp
stos
cmp
mov
leave
inc
fistpll
jge
mov
aas
in
or
out
xchg
push
data16
sbbb
ret
imul
aas
mov
nop
xchg
into
push
ds
lret
imul
in
cltd
sub
ficompl
sub
jmp
aaa
dec
mov
fwait
add
shlb
pop
jno
xor
push
or
push
sbb
sbbl
push
xchg
pushf
jge
jecxz
xchg
ja
imul
fldcw
cmp
dec
dec
mov
ret
adc
push
adc
and
push
push
push
jle
pop
mov
fdivl
cmp
jl,pn
mov
push
mov
data16
fistl
stc
mov
xor
pop
into
add
mov
push
lock
pop
das
js
ss
out
xchg
jl
pop
out
xor
jne
add
mov
lds
pop
xchg
or
jp
fdivs
mov
inc
std
sbb
mov
cmp
in
sub
popf
lcall
xchg
cmp
xor
and
icebp
push
mov
xchg
lods
stos
daa
pushf
ret
inc
push
jo
dec
pop
fldt
loop
and
cmp
ljmp
jae
lret
mov
pop
shlb
mov
decl
and
cltd
pop
inc
faddl
mov
adc
or
cld
sbb
negb
mov
mov
pop
xchg
cmc
out
aad
cld
call
lods
xlat
adc
add
or
notb
je
sub
enter
pop
rcrb
test
push
dec
adc
xchg
mov
dec
les
mov
fistpl
sub
jp
dec
dec
stos
clc
push
xchg
pop
mov
cs
xor
int3
xchg
sbb
mov
in
in
xchg
cmp
cmp
xor
scas
in
negl
pop
dec
jge
mov
bound
popl
jp
movsl
movsb
aam
adc
subb
cmp
xor
xor
data16
push
cld
jae
nop
sbb
imul
dec
or
inc
dec
js
pop
mov
and
faddl
cltd
sbb
popa
test
dec
leave
inc
in
adc
xchg
xor
inc
sbb
dec
xchg
dec
in
lods
gs
pushl
sti
daa
insl
cmp
inc
dec
cwtl
and
into
sbb
push
or
mov
rcr
dec
jmp
loope
sbb
xchg
push
pop
push
cmp
or
lods
pushf
cmp
cmp
push
lret
mov
jp
pop
jle
in
hlt
cmp
ss
sub
es
iret
fdivs
xor
popa
push
gs
sub
dec
pop
adc
scas
cmc
jae
ds
dec
orb
push
adc
xchg
sub
pop
cmpsb
inc
sbb
hlt
jg
push
lods
push
push
mov
call
cmpsb
mov
test
outsl
mov
jne
orl
cmp
nop
inc
mov
adc
int
jmp
mov
stos
daa
xchg
aas
std
pop
mov
icebp
dec
hlt
std
jae
loopne
leave
xor
inc
popf
out
jb
push
jno
add
into
pop
inc
movsb
ds
insl
add
int3
mov
push
stos
es
movsb
sbb
and
cmp
sub
jl
std
lea
xor
xchg
jo
xlat
out
imul
push
into
and
lahf
stc
jo
and
mov
test
sarl
sbb
dec
sbbb
lds
aas
fisubl
sbb
mov
mov
pushf
cmp
jle
bound
cwtl
stc
ficompl
lea
mov
jnp
push
jbe
stc
clc
fimuls
mov
aad
mov
cmpsb
inc
bound
pop
iret
das
and
insl
insb
andb
add
loopne
sub
lds
sbb
mov
daa
adc
xchg
icebp
mov
mov
dec
and
and
sbb
adc
addr16
push
ss
pop
sub
jno
fnstsw
aaa
cmp
iret
push
pop
push
push
cmp
clc
in
lds
aam
aad
out
or
lods
fwait
scas
and
cwtl
mov
jbe
shll
scas
sbb
add
mov
xor
and
mov
in
ss
mov
negl
jno
dec
xor
cmp
lret
stc
xor
dec
or
aad
adc
adcl
test
out
in
add
mov
orb
cmp
or
adc
jmp
sbb
pop
lods
sahf
and
push
and
push
xchg
add
neg
jae
mov
push
jl
add
adc
mov
in
xchg
outsb
push
outsb
inc
stc
or
sbb
popa
fidivs
push
lahf
xlat
ret
jne
scas
pusha
add
sbb
mov
sti
adc
add
into
lret
adc
popa
add
stos
test
js
lds
push
or
adc
add
cld
add
pop
jae
mov
mov
pop
into
xor
jbe
fists
and
daa
pop
ja
dec
nop
ja
cmp
neg
lret
xchg
mov
cltd
mov
jmp
hlt
pop
daa
pop
lahf
xor
pop
dec
je
add
test
pop
sbb
add
and
iret
inc
les
std
jo
adc
jbe
xchg
std
cmp
mov
push
cmp
add
jl
insb
xor
test
stos
mov
lds
push
dec
add
inc
rcrl
clc
repnz
push
not
std
and
ud1
xor
adc
std
pop
pop
orl
leave
cli
fsts
xor
test
inc
mov
aam
aas
shll
pushf
arpl
nop
push
add
mov
sub
cmp
add
lcall
jne
dec
push
pop
out
popf
pop
test
mov
leave
inc
cmp
mov
push
lret
mov
enter
aas
addb
stc
lret
or
decl
cld
out
lock
das
repz
insl
cmpb
lcall
mov
call
push
xchg
xchg
mov
orl
mov
mov
pop
sbb
es
test
sbb
in
push
pop
pop
daa
incb
in
sub
dec
dec
dec
xlat
adc
jnp
add
and
jmp
clc
pop
sbb
mov
cmp
mov
dec
add
popf
jge
fs
ficompl
mov
fs
clc
mov
jmp
mov
mov
sub
lea
pop
les
das
cwtl
sub
dec
js
mov
xor
sti
sbb
ret
push
sbbl
add
addr16
dec
sub
push
ret
or
pop
movsl
pop
add
sub
pop
inc
push
fisttpll
sarl
idivb
xchg
in
xchg
test
lret
mov
mov
out
jmp
or
xchg
mov
mov
bnd
mov
sbb
sub
cmp
test
fnstenv
or
xchg
lds
push
sbb
xchg
data16
dec
mov
or
inc
ss
dec
jecxz
jne
dec
inc
aas
ret
add
push
outsl
loope
mov
arpl
out
xor
fcmovnbe
hlt
mov
cmc
pop
std
dec
dec
clc
fwait
rorb
fbld
icebp
jne
jo
sbb
fwait
test
fmul
lods
mov
roll
pop
sub
push
lea
dec
push
loopne
mov
dec
fwait
dec
and
lods
mov
filds
add
pop
jno
iret
xchg
mov
arpl
scas
lock
test
push
cmp
pop
int3
mov
je
jg
sub
jae
sbb
shrl
mov
repnz
dec
and
push
mov
shll
mov
in
push
mov
mov
inc
aas
xchg
mov
cltd
push
and
ds
dec
or
cmpsl
cmp
jle
cmp
movsb
sbb
insb
shll
adc
movsb
lds
leave
sbb
movsb
das
je
jbe
jmp
push
popa
mov
mov
and
cmc
data16
sbbl
and
sbb
lahf
cmc
xor
stc
and
and
out
push
dec
sbbl
cld
adc
mov
xorl
xor
fbld
imul
in
mov
push
push
int3
je
mov
jnp
cli
sbb
inc
dec
push
jle
out
jecxz
push
subps
dec
sti
cmp
rclb
sbb
idiv
imul
in
pushl
xor
dec
jecxz
outsl
adc
icebp
movsl
cmpb
rcrl
leave
push
bound
adc
icebp
pushf
insb
ret
jno
sbb
int3
cmpsb
sbb
mov
test
in
int3
js
lods
and
push
cmpsl
loopne
adc
rcrb
repz
stos
mov
scas
add
out
fdivr
scas
mov
and
mov
loopne
xor
andl
cltd
ja
and
out
xchg
cmp
or
push
mov
xacquire
out
repnz
adc
popa
dec
mov
out
out
arpl
xorl
xlat
sbb
ljmp
das
lock
sahf
dec
sti
shlb
xor
mov
cli
loop
sub
insl
mov
scas
ud0
popa
mov
insl
adc
and
push
div
cmp
jae
icebp
xorb
cltd
sub
jl
mov
ret
mov
mov
dec
mov
dec
ss
sbb
push
fwait
pop
mov
subl
fstpl
jnp
and
aad
mov
pop
outsb
or
hlt
mov
cmc
adc
mov
mov
fisubs
and
and
ret
cltd
in
stos
mov
scas
xorl
insl
or
pop
hlt
movl
imul
mov
fbstp
test
pushf
jmp
in
jns
sbb
mov
bound
vminpd
sbbl
mov
xchg
inc
repz
jl
mov
in
or
adc
push
stos
mov
test
and
inc
jmp
and
sbb
divps
sahf
or
pop
jg
stc
sub
jecxz
pop
incl
fadds
lock
int
sbb
scas
sbb
sbb
push
push
cmp
leave
sbb
jnp
fsin
push
adc
aam
gs
cwtl
in
mov
pop
rorb
inc
insl
andl
scas
add
loop
jecxz
mov
test
xchg
push
loop
sub
and
xchg
inc
push
sub
mov
mov
lahf
sub
aad
xchg
mov
and
dec
aas
loope
xchg
mov
lock
lock
add
icebp
icebp
sub
pop
shrb
pop
addr16
cmp
sbb
adc
pop
mov
clc
xchg
and
dec
mov
add
imul
dec
jnp
adc
stos
xor
mov
cmpsl
repnz
dec
mov
sti
jg
sbbl
loope
and
cmp
cmp
or
loop,pt
adc
pop
out
pop
dec
mov
jl
push
bound
aaa
les
in
arpl
movsl
xor
bound
fwait
mov
mov
in
cmp
shl
mov
out
sbb
inc
stos
xchg
xor
push
pop
test
out
pop
int
lret
jae
test
outsl
adcb
sbb
jg
enter
sub
push
mov
add
sbb
shll
je
xor
repnz
ret
ficomps
sti
aam
or
aaa
nop
cs
icebp
mov
fistpl
adc
testb
mov
shl
mov
fisttpl
dec
ficompl
outsb
test
dec
clc
popf
scas
push
es
mov
sbb
loope
and
mov
or
into
lret
jl
addr16
out
inc
mov
or
fdivr
lods
fistl
cwtl
fcom
xchg
xchg
mov
and
mov
imul
daa
insb
outsb
popf
rcl
shlb
repz
popl
orl
add
xchg
cmp
adc
popf
test
inc
fstpl
dec
mov
into
cmp
mov
vunpcklps
xlat
out
add
mov
shlb
repz
ret
fisubs
int
sub
lea
frstor
sbb
aam
jb
xor
lcall
xchg
mov
arpl
mov
fisubrl
rolb
add
lock
dec
mov
mov
jecxz
jmp
mov
into
aas
sarl
add
cmpb
sub
movsl
nop
pop
popa
xchg
test
mov
add
push
je
sub
lods
gs
cmp
mov
orb
xlat
fnsave
cs
cmp
fistpl
rorl
std
jae
lds
adc
cmpsl
fdecstp
mov
sbb
xchg
fwait
jmp
sub
rolb
repnz
inc
cmpsl
adc
lods
mov
fwait
enter
in
add
pop
stc
mov
mov
fwait
push
mov
mov
sti
adc
fcmove
xor
out
sbb
idivb
mov
cmp
pop
clc
adc
sbb
sti
ret
sarl
dec
mov
mov
test
cmp
push
or
xor
or
clc
adc
pop
jle
loop
mov
inc
das
push
das
mov
cmp
inc
add
icebp
add
or
or
mov
mov
fcoms
pop
sub
std
aad
mov
xor
mov
ds
or
sub
jne
ret
add
hlt
or
mov
cmpb
frstor
scas
add
out
mov
xor
pop
pop
repz
jmp
pop
and
test
call
iret
dec
ss
add
pushf
jnp
rcl
ret
arpl
mov
xchg
adc
mov
inc
in
repnz
insb
mov
fsubrs
xchg
xchg
mov
adc
sub
shll
jl
rcr
jo
mov
sbb
xchg
lret
cmp
cmpsl
jnp
stos
sub
seta
in
into
mov
sarl
dec
les
scas
jp
fildll
add
xlat
adc
call
mov
mov
push
negl
imull
rcrl
scas
rol
rcrb
add
push
cli
rcll
xchg
cmp
jecxz
inc
aad
push
xlat
loop
addl
and
mov
or
lds
mov
ffreep
mov
mov
leave
and
sbb
xchg
inc
lea
jae
scas
lods
iret
xorb
xchg
cwtl
aaa
les
cld
scas
enter
flds
mov
mov
cmc
fstps
nop
mov
and
hlt
fnstsw
test
sarl
jbe
lcall
dec
mov
push
cmp
loopne
push
add
clc
pop
fstpt
push
mov
mov
cmp
cmpsb
ss
or
clc
lods
shrl
ret
rolb
or
dec
je
sbb
aas
fcomps
repnz
shll
sti
sub
inc
jge
in
into
insl
aas
xchg
mov
pop
es
aas
inc
add
jg
popl
mov
push
mov
xor
jl
arpl
xor
int3
pop
inc
outsl
cld
push
imull
pop
mov
andl
sbb
jb
xchg
dec
push
mov
mov
iret
inc
imul
loopne
subb
mov
mov
fwait
push
mov
push
out
imul
sti
or
and
mov
dec
push
sub
daa
stos
imul
and
mov
in
dec
mov
add
mov
dec
scas
pop
adc
jmp
mov
icebp
mov
mov
mov
mov
jns
mov
sarl
inc
rorl
adc
push
inc
sbb
push
sarb
mov
xchg
and
cmp
adc
xorl
mov
cli
cmpsl
jle
xchg
cmc
xchg
mov
add
pusha
lds
mov
adc
repz
aaa
and
jp
pop
add
mov
adc
test
mov
mov
imulb
mov
push
nop
or
adc
add
xor
in
jno
outsb
mov
ret
shrl
cmp
cmc
dec
adc
mov
out
pop
dec
mov
cmp
lock
pop
mov
lahf
dec
lcall
in
repz
jbe
dec
insb
lock
lock
fistps
push
lret
xchg
jg
dec
cli
daa
or
xor
dec
je
int3
dec
and
sub
inc
aaa
aas
outsb
cmp
outsb
call
enter
fldl
cmp
dec
xor
pop
or
cmp
loop
xchg
pushf
or
xchg
dec
add
ds
cmp
ja
push
add
jbe
inc
or
inc
movsb
ret
stos
adc
jecxz
mov
seta
test
xor
ret
not
adc
fnstsw
and
cltd
push
and
cmp
mov
and
nop
addl
dec
clc
pusha
push
push
mov
lds
xchg
adc
test
mov
fisttps
pop
mov
cmp
jae
xchg
sub
out
adc
mov
repnz
push
inc
cmpsl
addr16
popf
je
mov
mov
mov
ljmp
add
inc
and
sub
and
adc
push
sbb
out
sbb
sub
cmp
test
mov
add
notl
add
in
and
fldenv
xlat
cmp
cmp
aam
xor
das
sbb
lcall
mov
dec
fmul
das
push
inc
add
repz
jbe
push
cmp
mov
xor
push
repnz
inc
ret
and
pop
movsl
xchg
scas
ljmp
int
imul
pop
stos
or
popa
and
and
add
pop
lods
cmp
mov
pop
sbb
or
pop
gs
subps
or
pop
in
ret
outsl
cwtl
pop
cmpsl
sub
iret
aam
pop
push
cmpsb
add
xchg
dec
mov
mov
movsl
in
aad
and
bound
add
or
add
shll
filds
xchg
subb
fxch
aad
push
inc
imul
dec
sbb
pop
aaa
mov
js
imul
fsubrl
jb
dec
mov
loop
je
push
inc
out
dec
and
adc
jmp
inc
mov
scas
insl
out
fsubl
push
dec
xchg
mov
repz
bound
lea
test
xchg
rcrl
imul
lahf
and
inc
fs
das
les
jge
pop
push
adc
enter
stc
xchg
inc
fmul
push
js
xchg
dec
rcrl
stos
rclb
test
pop
loopne
fwait
dec
dec
mov
int3
cmp
sub
mov
test
jbe
jns
lea
xchg
out
push
mov
ret
inc
cmp
dec
mov
imul
sub
sub
xor
out
cli
addr16
push
mov
es
pop
inc
scas
rolb
xchg
adc
xor
sti
stos
adc
fst
or
rcrl
or
adc
cltd
sub
fwait
xchg
push
push
xlat
jmp
jne
popa
mov
imul
or
mov
scas
pop
sbb
in
fnstenv
cli
in
jb
and
mov
sub
xchg
and
jae
mov
lods
and
inc
push
sub
pop
pop
push
dec
xchg
bound
cmp
sub
inc
loope
xchg
mov
shll
push
insl
mov
shl
out
cld
in
cmc
andl
mov
xor
ja
add
xlat
push
xchg
mov
ljmp
cmp
mov
add
pop
jl
sub
pop
add
cmp
push
hlt
es
sub
lods
mov
lods
push
pop
push
dec
pop
lods
ret
jl
add
test
push
mov
mov
lods
imul
sbb
mov
jbe
js
pop
pop
aaa
or
push
das
cmpsb
in
dec
in
aaa
incl
add
xchg
lahf
nop
fucomi
cwtl
inc
cmp
fildll
dec
test
cmp
ja
jne
ja
cs
inc
cltd
pop
sub
fs
add
test
push
pushf
cmp
shrl
pop
cwtl
adc
dec
mov
mov
js
xchg
test
jne
arpl
adc
call
arpl
push
nop
add
cmc
out
fnsetpm(287
leave
dec
pop
push
sub
jl
in
ds
push
inc
pushf
xor
and
fsubrl
mov
stos
xor
xchg
iret
in
dec
xchg
js
movsb
shll
lahf
popf
mov
mov
or
insl
jne
pop
mov
pop
stos
cmp
pusha
add
outsb
push
adc
mov
cmp
xor
sbb
xchg
orl
leave
lea
lea
data16
sbb
dec
inc
push
jo
adc
jns
lcall
mov
je
lods
lahf
and
mov
scas
sbb
mov
mov
xchg
cmp
das
inc
cmp
fistl
sbb
out
mov
test
imul
pop
mov
push
cmp
add
stos
cmpsb
stc
or
xchg
sbb
jae
test
stos
cs
aas
rol
dec
xchg
jle
pop
push
sbb
shlb
js
inc
pop
mov
or
lock
pop
add
lret
xchg
push
cmp
rcrb
out
and
jecxz
mov
subl
mov
inc
in
mov
clc
mov
and
fistps
test
pop
cmc
fcmovnu
stos
xor
rclb
nop
out
mov
mov
out
push
or
and
dec
nop
cmpsw
sti
jo
movsb
gs
enter
stos
mov
lahf
ret
inc
inc
lock
mov
and
mov
add
jns
loopne
outsb
push
insl
loop
mov
push
aas
cs
mov
or
call
push
or
add
pusha
mov
pop
pop
loopne
or
xchg
fbld
jmp
pop
das
dec
mov
cli
xor
into
mov
and
std
stos
mov
sbb
in
js
mov
mov
outsb
add
daa
sahf
subb
sbb
ja
pusha
addr16
mov
mov
pop
icebp
adc
movb
mov
and
mov
and
xchg
mov
mov
sbb
rclb
mov
pop
out
dec
push
test
rorl
in
pusha
or
adc
dec
and
and
shl
shlb
nop
inc
inc
and
inc
or
sti
sub
adc
mul
mov
lock
cmp
inc
mov
adc
test
inc
xchg
fstps
insl
fsubs
jecxz
adc
repz
sub
sub
rcr
pop
notl
jno
aaa
inc
pushf
jl
mov
pop
lcall
popa
jecxz
dec
push
stos
lock
in
jg
sub
ss
loopne
repnz
or
std
movsl
fmul
push
repz
subb
xor
fs
rcll
inc
and
and
call
insb
arpl
mov
pop
mov
or
out
enter
jne
jae
imul
ljmp
mov
inc
mov
ja
sub
xchg
mov
add
dec
jl
mov
jno
stc
sub
add
inc
repz
mov
mov
lcall
xchg
data16
rol
stc
ror
jns
cmp
inc
push
ret
dec
xor
mov
mov
loopne
call
jg
jne
jmp
lods
divl
sub
pop
jmp
xor
pop
mov
jmp
seta
sbb
mov
movsl
lret
mov
xor
mov
add
push
stc
push
inc
sahf
xchg
xchg
sub
jnp
jle
adc
inc
loop
mov
lcall
sub
hlt
or
dec
mov
ljmp
adc
shlb
mov
push
mov
popa
mul
stos
cmc
addr16
sbb
dec
jl
mov
mov
xchg
or
adc
jns
jmp
fisubs
xor
jecxz
push
imul
movsb
decb
inc
das
es
cmp
outsl
mov
cmp
mov
mov
xor
and
sahf
cmp
loope
hlt
jae
cmpsb
out
mov
dec
pop
cmc
pop
popa
insb
jno
mov
pushf
popf
or
mov
es
jp
test
popa
ss
mov
push
sub
testb
aad
movsl
cmc
popf
add
inc
aaa
pop
mov
push
cmp
mov
xorl
or
dec
aad
adc
nop
cs
sti
sub
cmp
add
jge
adc
cld
lahf
and
daa
cmp
jbe
mov
pop
adc
or
mul
mov
jo
mov
repz
fcmovnu
or
loopne
pop
pushf
sub
imul
mov
inc
mov
jp
shlb
cmp
testb
int3
into
stos
stc
imul
lods
jge
mov
pop
cmp
movsb
test
and
in
xor
adc
add
js
jns
cmpb
sub
mov
stos
fucomp
xor
inc
lcall
mov
outsl
dec
movsb
das
mov
or
fisubs
mov
mov
imul
cmp
sbb
cmpb
nop
lahf
jnp
cmp
fcoml
cli
mov
fs
inc
or
mov
ret
fmull
sub
push
daa
movsl
xchg
les
adc
lea
lahf
inc
dec
pushf
inc
sbb
outsl
jno
cmp
add
arpl
aas
call
mov
push
shrl
push
ljmp
mov
movsl
inc
sbb
stc
xchg
cmp
xchg
test
push
fisttpll
mov
das
xor
unpckhps
lds
les
aam
insl
mov
inc
dec
push
cmpsb
push
add
sub
call
inc
push
loop
loop
mov
call
xchg
sub
and
cmpb
psubw
push
fdivs
daa
stos
and
test
mov
sti
int
aam
enter
movsl
jl
test
inc
in
xchg
and
lods
mov
js
xchg
jb
xor
sbb
jmp
repz
add
pop
mov
mov
cwtl
jae
aad
inc
xor
ja
lea
mov
mov
mov
mov
fimull
leave
push
rcll
push
jns
in
mov
push
mov
and
or
mov
sub
stos
loopne
and
and
mov
movsl
hlt
pop
and
fs
out
adc
pop
insb
bound
lods
pop
enter
jmp
shl
rorb
out
hlt
outsl
cli
cwtl
jnp
rorb
xchg
and
lock
push
or
push
jp
ja
push
sub
mov
xchg
pop
scas
js
jp
mov
xor
push
sti
adc
in
out
imul
sbb
rcl
mov
lds
outsb
fwait
cmp
nop
in
insb
and
lret
out
mov
sbb
xchg
adc
aam
mov
push
lods
hlt
dec
les
movsl
lcall
clc
clc
movsb
add
or
cmpsl
sahf
xchg
push
mov
in
and
in
stc
xchg
xorl
lcall
add
repnz
rcl
add
xor
mov
out
mov
sbb
loope
xor
mov
dec
cwtl
and
shrl
mov
sbb
sbb
addl
cmpsl
mov
ss
add
lds
fld
mov
int3
xchg
lods
mov
add
mov
mov
or
xor
adc
or
mov
push
adc
sar
inc
xor
xchg
loopne
xchg
rolb
sti
dec
inc
mov
rcll
mov
adc
mov
xchg
rorl
push
mov
scas
mov
andl
out
sbb
cmp
hlt
sbb
push
or
adc
popa
inc
and
inc
subb
xchg
lret
adc
das
xchg
aaa
inc
scas
mov
xor
lret
dec
clc
addr16
jb
ret
inc
insl
mov
aas
insb
cli
int3
jecxz
or
rorl
mov
cmpsl
add
sub
mov
pop
popf
icebp
es
inc
mov
pop
in
cmp
call
lock
adc
sub
push
in
pop
dec
jne
mov
cmc
test
pop
scas
aaa
mov
jp,pn
mov
out
out
mov
cmpsl
scas
sar
fs
in
ret
pop
dec
fistl
mov
fs
push
cmp
mov
lcall
insl
dec
in
mov
sbb
sti
ss
sbb
nop
xlat
lock
and
add
insl
daa
sahf
pushf
insb
xchg
add
shll
jl
loope
mov
call
pop
pop
out
and
xchg
lds
dec
test
mov
in
stc
and
mov
add
and
xchg
ror
mov
in
xchg
orl
test
pop
pusha
imul
mov
popl
fcom
aad
push
ret
divb
pop
pop
mov
inc
adc
mov
jge
pop
lahf
gs
pop
inc
fdivrl
xor
xchg
sbb
sub
adc
cmp
xor
cmc
icebp
xchg
cltd
push
xor
loope
insb
and
ds
xlat
pop
lea
push
adc
and
lods
xor
mov
push
cmp
movsl
push
addr16
outsb
add
push
enter
lret
sub
insl
mov
add
das
aaa
xor
adc
fmull
jl
xor
lret
mov
sub
neg
int3
push
leave
popf
push
adc
cltd
push
cmpsl
lcall
dec
jmp
inc
inc
scas
and
sub
int
mov
jb
rcrb
test
fstpt
aaa
lcall
mov
push
stos
push
dec
adc
adc
lret
pop
sub
jg
sbb
mov
adc
mov
fwait
adc
or
dec
cs
adc
mov
and
stos
xor
dec
and
scas
push
hlt
adcl
mov
rol
add
stos
inc
jnp
pop
lret
and
adc
sbbl
ljmp
leave
shlb
ror
pop
add
push
adc
xor
es
bound
mov
and
out
inc
mov
xor
mov
in
pop
lock
pop
push
push
xlat
cltd
mov
push
mul
adc
idivb
mov
mov
or
xchg
jns
dec
sbb
mov
daa
jnp
call
leave
sbb
lcall
lods
xchg
mov
aaa
cli
push
loope
mov
dec
jne
repz
and
ds
jae
cs
xor
mov
mov
cmc
divb
lds
outsl
push
repnz
cs
add
seto
cmp
push
enter
mov
in
jne
jge
adc
fldl
push
std
iret
sub
cmp
fstps
pop
test
loop
dec
or
adc
pop
test
and
repnz
adc
je
insl
sbb
cmp
fwait
je
adc
lret
adc
xchg
mov
mov
and
xor
mov
jmp
dec
add
push
outsb
xchg
adc
push
imul
lock
jns
jno
test
lds
cmp
mov
leave
xchg
adc
cmp
fisttpl
cli
or
add
push
lret
popa
inc
aas
icebp
dec
mov
stc
add
hlt
mov
outsl
imul
std
ds
mov
enter
hlt
pop
xor
sbb
cmp
xchg
out
adc
jmp
iret
mov
pop
xor
and
lods
xchg
lea
movsl
sub
test
add
push
insl
js
mov
adc
ror
jo
cmc
test
jb
enter
fwait
push
mov
sub
mov
movsb
roll
jge
test
inc
neg
xchg
popf
insb
loopne
outsl
mov
sbb
xchg
cld
pop
fwait
out
add
enter
mov
pushf
call
inc
xlat
movl
fxam
push
scas
jp
adcl
pop
insb
jb
xchg
scas
movsb
push
xorl
or
cmpsl
sub
in
subb
cmp
bound
push
mov
xchg
scas
adc
and
jo
fcoml
dec
and
mov
mov
lods
cmc
cld
adc
inc
rcr
lds
jg
loope
mov
lds
xor
lret
mov
imul
sbb
nop
stos
out
out
cli
mov
sub
push
test
sbb
jp
ss
movsb
inc
int
jnp
ja
into
std
cmpsb
cltd
mov
push
xlat
cmp
sub
adc
sarl
jne
pop
hlt
out
and
xchg
test
xor
xchg
aam
out
add
sbb
jl
and
and
sbb
scas
int3
aam
dec
daa
test
in
add
in
je
and
xchg
sub
out
push
mov
jmp
cmpsb
jbe
dec
xchg
icebp
adc
or
fsubrl
xor
mov
ret
pop
or
pop
dec
je
add
add
xchg
cltd
cmp
xor
out
pop
cmp
mov
adc
mov
jnp
mov
and
js
jmp
and
out
adcb
aam
dec
enter
mov
mov
int3
stos
mov
lcall
adc
sbb
js
and
gs
lret
inc
jmp
xchg
jae
or
jecxz
outsl
jb
xlat
lock
and
add
out
mov
out
int3
popf
fidivl
xchg
xchg
loop
or
out
xchg
cltd
xor
inc
adc
dec
and
aas
adc
or
lea
mov
int3
pop
lods
jl
xchg
sahf
jns
fwait
incl
jle
int
mov
inc
test
pusha
dec
sahf
mov
and
mov
push
aam
dec
fsubrl
jmp
ds
mov
jb
repz
push
cmp
ds
mov
sbb
mov
fldl
push
push
mov
lds
cmp
ja
xchg
mov
or
mov
lahf
lretw
cli
sbb
movsb
mov
cmp
push
push
out
int
imul
std
pusha
das
rclb
js
pop
std
lahf
ja
jle
dec
arpl
sbb
mull
scas
pop
push
rorl
cltd
movsb
or
iret
mov
jnp
leave
ss
push
sub
and
jecxz
xor
and
mov
mov
sbb
in
pop
inc
cmp
and
push
dec
fiaddl
xchg
frstor
cmc
dec
jnp
push
xchg
popf
push
nop
fidivs
sti
movsl
push
fstpt
shll
and
push
xchg
push
xor
dec
pop
and
mov
mov
jae
in
xchg
ret
stos
xor
repz
or
mov
push
sbb
mov
jle
or
push
out
lods
jecxz
sub
jecxz
sub
clc
jb
sub
aas
inc
sub
in
in
sbb
xchg
inc
leave
mov
iret
lods
cmp
fwait
push
sub
pop
arpl
repz
dec
push
inc
and
sub
ja
gs
shlb
jmp
adc
xchg
outsl
jno
sti
lea
imul
cli
lret
ss
mov
push
xorl
das
pop
mov
jo
idivl
cltd
in
mov
ror
lods
jne
xor
push
mov
xchg
push
loop
or
dec
scas
insb
out
movsl
jmp
sbb
loope
sbb
xchg
push
xchg
push
xor
test
jne
movsl
clc
test
inc
adc
jge
cmp
js
imul
xor
xor
jae
iret
jb
jmp
cmp
pop
dec
movsl
sbb
insb
inc
ret
fwait
cmc
imul
pop
xchg
dec
adc
shr
cmp
pop
cld
and
ja
lock
add
xor
outsw
push
ds
push
xchg
imul
xchg
out
jmp
push
add
sbb
xchg
push
mov
loop
out
test
out
xor
sbb
and
lods
cli
pop
sbb
mov
sbb
jnp
out
sub
pusha
inc
lock
push
aaa
jae
pop
loopne
sbb
push
dec
sbb
sbb
xor
mov
pop
pop
add
push
push
leave
inc
dec
mov
imul
insb
in
pusha
dec
out
cmp
cmp
cmc
std
or
enter
nop
adc
fsubl
cli
add
pop
push
pop
cmp
xchg
mov
or
mov
xlat
adc
cwtl
sti
cmpsl
push
mov
stc
stc
int3
sahf
jbe
mov
add
stc
mov
xor
add
bound
out
xor
inc
inc
mov
loope
jns
das
leave
fildll
and
push
sbb
in
adc
xchg
jmp
cmp
mov
daa
xchg
stos
js
test
lahf
mov
push
jle
cmpsb
insb
mov
gs
xchg
xchg
test
in
sub
dec
add
addr16
xchg
ljmp
push
dec
mov
lcall
outsb
sarl
imul
xchg
jns
sbb
imul
mov
add
mov
in
mov
add
outsb
cmp
pop
idivb
cltd
fs
mov
mov
adc
xchg
mov
gs
sbb
mov
xchg
and
mov
push
dec
lea
out
jae
xor
sti
push
or
aaa
and
mov
adc
aas
adc
xchg
cmp
push
and
insl
xchg
aaa
adc
lock
lahf
and
stc
or
loopne
inc
mov
cmp
jno
lods
fimuls
or
shlb
nop
fmul
sub
mov
js
or
push
adc
push
int3
mov
add
jo
or
push
xor
stos
jno
adc
cwtl
dec
and
inc
int3
aad
xor
gs
mov
sti
dec
pop
mov
lcall
adc
fmulp
sar
lds
fdivl
movsb
orl
pop
int
pop
fistps
cmp
imul
in
xchg
jge
test
je
jns
push
xlat
or
scas
stc
jbe
pop
dec
loope
sti
pop
add
nop
das
cltd
mov
dec
ja
pop
stos
outsb
int3
dec
enter
fldt
mov
dec
insl
cmp
sub
mov
push
imul
stc
cmpsl
add
ja
arpl
or
push
mov
sub
setge
fistpll
das
int
cmp
push
cld
xchg
xor
sub
mov
icebp
or
push
push
sti
add
add
pop
in
cmp
test
sub
mov
pushf
lahf
adc
nop
push
popf
jno
pop
pop
ds
outsb
leave
repz
xchg
push
ljmp
out
dec
sbb
push
mov
add
jbe
call
xchg
dec
add
add
inc
push
pushf
sub
repz
out
cmp
mov
call
jo
iret
adc
jge
add
cltd
in
sbb
adc
mov
stos
and
pop
mov
cs
dec
mov
xor
inc
movsb
decl
xor
cmp
les
mulb
cwtl
adc
loope
loop
lret
push
add
aas
dec
mov
arpl
lret
mov
xchg
cltd
repnz
pop
ljmp
std
std
lock
adc
insl
imul
cmpb
adc
loopne
xor
loop
ss
inc
or
inc
ret
jns
jl
scas
cmp
ds
outsb
inc
aad
cmp
jg
sub
dec
lcall
jbe
mov
cmpb
out
jp
cmp
sbb
inc
call
repz
es
pop
xchg
or
aas
xchg
mov
add
add
scas
sarl
xor
add
aaa
stc
push
sbb
or
mull
adc
aas
cmpsb
cmp
xchg
pop
shll
fisubs
imul
sub
add
mov
loop
sbb
mov
cld
add
jge
aad
and
aas
mov
mov
insl
aad
add
pop
or
out
dec
ret
sub
outsl
and
mov
xor
jmp
xchg
inc
and
mov
cmp
xchg
push
insb
fs
sub
das
pop
cltd
push
pop
adc
add
ret
fildll
add
cmp
mov
lods
mov
in
lds
xor
enter
ffreep
dec
mov
mov
jbe
ret
fwait
or
lds
lods
sbb
mov
sub
pop
inc
jecxz
sbb
add
and
rcll
rcll
loop
add
jp
jge
dec
cld
mov
cmpsl
repnz
xchg
lods
mov
jnp
push
aaa
sbb
in
mov
jbe
push
pop
js
push
loope
loopne
sbb
push
push
in
mov
data16
mov
xlat
loope
and
or
inc
jnp
dec
cmp
out
stos
insl
cld
inc
cmp
jmp
outsl
mov
mov
ljmp
testl
sub
testb
in
pop
neg
shr
call
inc
das
jne,pn
gs
push
ja
dec
lods
jl
mov
xor
imul
ljmp
ss
jns
ljmp
arpl
stos
pop
int3
adc
lds
gs
sub
cmpsl
ljmp
popf
push
out
int3
sbb
jb
pop
or
xor
jno
mov
jle
gs
inc
add
je
dec
js
push
cmp
pop
adc
pop
add
in
mov
jmp
gs
sub
pop
negl
ss
rorb
aas
xor
repz
mov
stos
jb
sub
sbb
jmp
sahf
divb
stos
mov
xchg
pop
and
sub
std
scas
inc
pop
mov
cld
cmp
dec
dec
xchg
out
xlat
popa
cmpsb
add
push
or
cltd
sbb
aad
mov
push
test
dec
add
nop
fsubrl
popf
shll
add
scas
fsubrl
sub
jmp
lahf
aas
mov
stos
jbe
pop
scas
daa
sbb
mov
adc
inc
sbb
push
jecxz
jae
adc
inc
xchg
roll
lcall
loop
test
dec
pop
fisubrs
mov
pop
mov
sbb
mov
push
test
aad
in
mov
in
ljmp
inc
pop
adc
popf
pop
ret
subl
mov
cmp
mov
mov
gs
push
pusha
sbb
xchg
mov
je
movsl
pop
mov
lods
mov
pop
je
xchg
jge
cmc
pop
iret
pusha
ss
mov
aaa
fwait
push
imul
jg
sbb
mov
imul
or
cmp
or
cltd
and
aaa
jge
mov
mov
les
adc
sbb
leave
push
ss
xor
inc
mov
pop
jmp
mov
push
inc
mov
or
jns
mov
ficoml
rorl
out
nop
stos
pop
xor
push
pop
sahf
scas
inc
mov
mov
shrb
sahf
rcr
push
into
jne
setp
fsubl
clc
xchg
add
jb
dec
int
test
pop
cmpl
push
and
push
mov
dec
xor
out
pop
xor
das
cli
xchg
or
or
imull
hlt
push
xchg
dec
jno
icebp
jo
mov
and
pop
ret
add
hlt
push
push
and
push
mov
filds
aaa
xchg
je
mov
dec
inc
lock
and
push
pushf
leave
pusha
loopne
mov
jmp
mov
mov
mov
repz
ss
icebp
add
dec
loopne
in
or
cli
xchg
test
jge
popa
push
ja
ror
lods
ffree
mov
xor
movsl
fstpl
xor
popa
ret
mov
mov
arpl
imul
movb
cmpl
out
data16
cmp
adc
shlb
out
ret
fidivs
ss
mov
pop
loopne
and
mov
test
mov
push
sti
mov
lret
sbb
jp
mov
fbstp
pop
or
or
sbbl
inc
out
iret
dec
jmp
in
subl
mov
insb
inc
addb
dec
jae
mov
gs
mov
jo
add
adc
pop
mov
dec
jbe
movsb
test
cwtl
movsl
hlt
mov
movsb
test
sbb
mov
jle
cmpsb
cmc
faddp
dec
dec
inc
in
outsb
fstps
sub
roll
dec
in
adcl
mov
addr16
fisubrs
mov
push
cmp
adc
jp
and
scas
add
push
stos
lahf
stos
pop
rcrb
movsl
in
adc
jecxz
jb
xor
lret
or
mov
jnp
jns
fsubrl
or
mov
adc
lods
test
jmp
daa
xor
xchg
loopne
sti
sbb
enter
cld
sbb
outsb
cmp
shll
inc
mov
mov
push
lock
ja
icebp
sub
in
ss
data16
jb
xchg
mov
sub
pop
or
lcall
adc
cmp
popa
inc
dec
mov
xchg
xor
inc
adc
rolb
xor
mov
cltd
icebp
ret
mov
in
mov
leave
mov
sbb
or
pop
xchg
push
xlat
pop
repz
pcmpeqw
xchg
cmpsb
and
sbbb
loope
fmuls
xchg
test
or
imul
xchg
pusha
shlb
xor
pop
outsl
inc
jmp
pop
rorl
lods
lahf
xor
add
hlt
ljmp
popa
fldln2
into
ja
cmp
xor
insl
popf
pop
outsl
xlat
xor
sbb
xchg
sub
mov
push
and
add
fadds
je
leave
ret
xor
jbe
loopne
mov
pop
inc
or
or
mov
ds
xchg
mov
daa
inc
scas
je
cmp
jbe
jno
xchg
shll
int
les
push
scas
in
push
adc
jg
nop
adc
lahf
cmpsl
es
mov
cmpb
aas
popa
lahf
sub
arpl
shl
inc
idivb
js
dec
jmp
leave
dec
sbb
mov
jp
push
or
mov
xor
repnz
and
in
push
cmp
pop
and
inc
aam
mov
out
jmp
nop
das
ljmp
insl
pop
iret
inc
push
inc
insb
jbe
lock
sub
stos
sub
ljmp
movsl
mov
cmp
ficoms
shrl
xor
in
sbb
inc
lret
jle
aam
mov
cld
and
iret
cmpsb
fwait
mov
test
mov
int3
je
sub
stc
inc
mov
xlat
pop
mov
jo
adc
mov
movsl
jl
ljmp
inc
xchg
aad
icebp
in
ret
mov
mov
imul
mov
add
mov
dec
fildl
mov
inc
cmp
in
xacquire
pop
into
jp
loopne
jg
cmp
xchg
cmp
daa
mov
pop
sbb
mov
cmp
sti
mov
or
ss
sbb
sar
pusha
ret
mov
scas
xchg
sbb
lea
cs
insb
sbb
adc
pop
cs
sub
push
cmp
jle
dec
faddl
dec
aaa
mov
sbbb
pusha
rcll
adc
es
or
xchg
jb
call
inc
sub
fcmovnbe
js
popa
cmp
or
sbb
pop
mov
test
in
rolb
pop
and
jmp
ja
call
sub
xor
test
int
sub
xchg
cltd
mov
test
scas
sbb
pop
sbb
in
pusha
jl
mov
jb
fdivl
push
and
adc
jo
lret
mov
push
test
inc
sub
fcmovbe
pop
mov
mov
mov
mov
test
in
xchg
lods
lods
in
cmpsl
pop
imul
shrb
mov
pop
xchg
inc
call
inc
mov
and
sbb
enter
jmp
popf
daa
insb
seta
mov
call
outsl
arpl
pop
out
or
ljmp
shlb
sbb
xlat
ret
xor
lahf
xchg
mov
adcl
jg
movsl
jbe
sub
jbe
push
pop
bound
cmp
outsl
out
lods
or
cmpsl
movsl
sbb
cmpsl
lods
inc
shrl
mov
xlat
rolb
push
call
pushf
and
jb
sbb
loope
inc
sub
rcl
movsb
outsl
dec
lret
cmpl
ss
or
sbbl
lea
jnp
fldcw
pop
aas
lds
push
les
jl
cmp
repz
stc
icebp
hlt
mov
lds
sub
outsl
into
or
outsb
clc
xchg
push
ss
lock
pop
jno
enter
mov
test
cli
fisubl
push
je
mov
inc
mov
and
ret
inc
mov
sub
dec
subb
repnz
adc
push
test
and
sahf
or
daa
leave
xor
cli
scas
or
mov
enter
adc
push
cld
mov
xchg
cmc
call
add
cltd
dec
fmul
xor
or
or
cmp
push
sti
fbstp
popf
or
mov
add
hlt
inc
xor
inc
mov
leave
cmc
mov
insl
iret
pop
std
hlt
outsb
loope
in
push
xchg
in
test
mov
push
pop
test
push
popa
lret
and
les
repz
call
push
push
lret
fdivrp
pop
and
daa
jnp
push
in
adc
and
gs
adc
fwait
cltd
adc
cmpsl
aad
stos
mov
adc
rorl
cltd
cmp
shll
inc
mov
inc
cmp
add
iret
fcmovnu
imul
loopne
into
cmc
dec
mov
nop
jnp
dec
dec
pop
std
push
sbb
fimull
xlat
sub
sub
hlt
push
scas
adc
push
movsl
test
push
inc
enter
xor
cld
ror
xchg
mov
sub
loope
fdivs
adc
or
mov
xchg
xchg
lret
lret
lock
add
mov
movsb
mov
xchg
jno
jo
adc
sub
dec
shlb
lods
sub
cmpsl
clc
jecxz
xor
add
mov
sub
aaa
mov
mov
mov
popl
bound
gs
fwait
add
sbb
jnp
icebp
cmp
pop
je
mov
dec
imul
cmp
sub
outsl
or
push
leave
dec
mov
add
jmp
xchg
pop
push
pop
xchg
faddl
jecxz
mov
pop
push
xlat
mov
xor
jp
rol
mov
fimuls
shlb
outsb
mov
or
out
jecxz
dec
inc
cmpsb
push
mov
sbb
mov
cli
sub
inc
outsb
xor
repz
add
fnstsw
and
das
shll
fisttpl
cmp
das
xlat
push
and
cld
xor
notb
lret
test
xlat
dec
ret
mov
jle
in
test
and
jne
adc
mov
fistps
popf
lret
ljmp
sub
xchg
leave
add
sub
push
push
pop
clc
push
lock
and
pop
push
sbbb
lods
xchg
test
sbb
adc
push
mov
mov
mov
xchg
ret
aad
ja
mov
inc
aad
dec
xchg
xchg
iret
test
jmp
jnp
out
stos
popa
dec
call
add
movsl
popf
and
daa
outsb
stc
gs
mov
in
and
adc
sbb
or
pop
mov
lods
loopne
push
mov
and
jb
into
jp
add
loopne
enter
cmp
jne
sub
xor
or
movsb
hlt
sub
clc
leave
loop
push
pop
pop
rcll
sarl
fadd
push
mov
jns
sbbl
imul
out
dec
or
pop
or
push
dec
mov
or
mov
push
lods
sub
mov
push
loopne
jmp
cmp
inc
sbb
rclb
outsl
mov
mull
sbb
xchg
repnz
test
jp
dec
and
mov
out
xchg
mov
adc
and
mov
iret
mulb
or
leave
add
mov
insb
insb
sub
fcoms
sti
jae
and
xchg
lcall
add
mov
pop
cltd
aaa
gs
mov
popf
xchg
mov
enter
push
dec
jp
je
insl
push
sub
xor
je
adc
mov
stos
ret
push
jg
xor
shr
ficoml
sahf
sbbl
test
push
cmpsl
lock
fisttpl
xor
and
sub
in
imul
inc
mov
cmpsl
mov
sbb
clc
push
xchg
cmpsl
in
lcall
sub
call
subb
mov
shlb
add
stos
mov
ret
dec
adc
xchg
jg
outsl
dec
mov
outsb
jl
or
add
add
cmp
sub
cmp
mov
movsl
mov
in
adc
es
xchg
outsl
jp
cs
das
inc
out
cwtl
stos
pop
lock
dec
cli
loope
mov
adc
stos
aam
shl
inc
pop
shr
sbb
mov
xchg
sub
sbb
decb
push
ret
je
shlb
and
push
test
rcrb
jno
mov
into
sbb
xor
or
cwtl
insl
inc
js
add
into
data16
pop
pop
mov
sub
mov
xor
inc
andb
mov
add
inc
add
mov
icebp
jg
push
adc
dec
negb
mov
pop
xchg
pop
mov
int
push
and
xchg
jle
mov
xchg
sub
aaa
call
jge
ror
int3
sub
sub
xchg
fisttpll
xchg
and
and
imul
int3
push
lods
adcl
or
es
push
adc
dec
xchg
lods
add
push
cmp
push
or
into
pushf
jno
inc
sub
mov
data16
inc
call
es
add
xchg
cs
lahf
jge
sbb
pop
dec
mov
push
ds
jbe
push
or
jnp
xchg
sahf
mov
sub
gs
lods
icebp
xchg
sbb
scas
insb
fisttps
repz
fisubl
stc
loopne
push
pusha
daa
cli
out
cld
mov
jmp
jp
mov
lahf
sbb
test
sbb
dec
nop
or
pusha
sbb
xor
scas
pop
cmp
cmp
jl
or
imul
or
mov
lds
out
scas
mov
mov
mov
add
cmpl
int
inc
jne
mov
and
xor
pop
pop
or
insl
xchg
fidivs
cld
xorb
mov
or
cltd
or
xor
mov
mov
push
push
je,pt
es
out
xor
rol
mov
jmp
cmc
sti
jne
pop
xchg
cmpsb
ficomps
in
inc
icebp
loop
inc
adc
in
rorb
adc
mov
pop
dec
cmp
and
xchg
pop
cmp
xor
push
mov
or
imul
mov
or
mov
cld
jl
dec
dec
inc
movsb
and
or
push
mov
mov
pushf
adc
ljmp
inc
pop
mov
and
loope
inc
mov
aam
and
mov
pavgb
mov
pop
add
sub
pop
fsubr
cmpsl
sbb
ljmp
shll
cmp
shrb
adc
mov
inc
and
jp
pushf
mov
or
fdivl
push
sarl
cmp
and
jne
fsts
add
mov
pop
or
add
lahf
aaa
ljmp
jno
mov
inc
dec
in
pop
adc
mov
jnp
repnz
dec
lcall
xchg
neg
insb
xor
pop
mov
mov
sub
fidivs
dec
xchg
mov
push
popf
jo
adc
inc
jle
or
mov
test
jbe
mov
xsave
mov
jge
push
pop
aaa
jnp
inc
push
imul
sbb
stc
jle
out
sub
test
dec
and
daa
mov
movsl
je
and
dec
pop
hlt
add
mov
incb
sub
arpl
and
mov
mov
xor
lods
es
ljmp
jae
add
jb
add
inc
mov
mov
xor
xlat
das
sub
hlt
dec
dec
in
mov
push
adc
lods
dec
test
add
xchg
stc
into
std
push
dec
jne
lcall
jg
mov
xlat
fwait
and
arpl
xchg
rorl
loope
ret
fadds
sbb
xor
lods
out
test
fucomi
jge
test
fisttpl
test
popf
push
mov
mov
in
or
ficoml
mov
lds
sub
ss
maskmovq
divl
mov
sub
ljmp
das
cmp
in
mov
jge
imul
sub
roll
mov
addb
lahf
jg
push
mov
out
fcom
sti
cmp
push
out
dec
outsb
mov
push
cltd
in
inc
mov
add
fstps
xor
mov
pop
sub
xchg
sub
lods
cmc
inc
loopne
push
push
pusha
jns
insl
sbb
mov
in
push
js
lcall
push
test
out
adc
arpl
push
test
or
sbbl
fistl
sbb
or
jbe
movsl
xchg
push
cli
leave
pop
aam
dec
scas
cmp
push
mov
xchg
dec
shl
sti
mov
lret
lret
movsb
loope
and
pusha
sub
cmp
mov
mov
xchg
in
scas
mov
push
aaa
and
add
popf
lds
clc
sbb
cmpb
sub
or
scas
add
ja
sbb
add
adcl
cmpsb
xor
into
push
ds
in
push
cld
call
mov
ror
movsl
scas
cmp
fs
fs
loop
add
mov
pop
xor
popf
or
ret
jecxz
lcall
je
jp
cmc
imul
pop
inc
pushl
lds
stc
and
inc
test
cmp
aas
cmovp
loopne
mov
lret
lret
or
inc
inc
jnp
fsubl
inc
adc
adc
adc
pop
dec
lret
mov
and
fisttpll
and
jmp
and
push
imul
or
sbb
pop
out
test
pusha
xchg
sar
xlat
pop
lods
lds
sti
das
xor
xchg
sub
addb
cmp
push
mov
and
nop
jg
inc
jno
arpl
mov
movsl
stos
fisttpl
adc
xor
loop
out
fwait
push
notb
adc
mov
aad
lods
dec
push
mov
and
out
cmp
sti
xor
inc
mov
gs
idivb
pop
stc
je
mov
mov
loope
in
in
aas
or
or
in
cltd
mov
mov
scas
in
sub
add
lret
in
cmp
dec
add
inc
xchg
lock
cmc
mov
pop
leave
sbb
das
push
cli
and
cmp
sbb
das
in
loopne
in
fsubrs
or
out
xchg
or
mov
aaa
jge
lret
cmpsl
mov
pushf
xchg
mov
pop
shr
sub
addr16
out
add
push
or
pop
rcll
adc
or
dec
mov
push
into
js
adc
cmp
lret
mov
rol
sbb
add
imul
ljmp
or
mul
outsl
mov
pop
xchg
ret
sub
xchg
popf
jle
bswap
lods
data16
xchg
mov
popa
push
call
repnz
cmp
cmp
shlb
test
int3
cmpsl
and
fldt
dec
jb
pop
clc
fimuls
pop
mov
andb
lods
jp
cmp
call
or
pop
push
stos
ja
push
mov
add
fs
sbb
pop
mov
add
mov
push
push
mov
push
sbb
jbe
xor
je
adc
dec
dec
xor
ljmp
xor
icebp
sbb
mov
mov
push
jp
pop
in
jl
xor
insl
jmp
movsb
nop
in
cltd
jl
divl
aam
nop
fisttpl
sbb
rcll
aad
test
mov
shrl
imul
scas
popa
adc
xchg
std
pop
icebp
dec
mov
movsb
mov
test
xchg
add
push
pop
push
sahf
mov
and
xor
cmc
call
rol
iret
cmp
cld
dec
cmp
push
sbb
aam
jmp
push
add
mov
stc
push
aas
pop
xchg
aad
jb
mov
adc
cmpb
xchg
rorb
mov
pop
inc
xchg
mov
xchg
imul
fwait
je
mov
call
lret
loop
les
out
xor
or
pop
dec
lock
xchg
ret
ss
sub
dec
mov
cltd
fstpl
pop
sub
mov
lcall
pop
xchg
out
adc
push
and
lahf
fmuls
shll
adc
mov
std
ja
fisubrl
jecxz
ja
inc
xchg
fs
mov
mov
pusha
rcl
sbbl
xor
es
in
out
cmpsl
insb
cmpl
loopne
hlt
or
shr
xchg
jmp
into
jg
dec
je
or
sbbl
leave
xchg
jnp
mov
add
push
pop
scas
and
jp
fildl
push
mov
inc
arpl
or
and
inc
dec
mov
jo
xchg
into
vmovss
sub
jnp
push
sahf
cli
aam
mov
adc
fndisi(8087
pop
jno
mov
out
jecxz
sub
repnz
adc
pop
inc
jge
xor
lods
sub
pop
push
ficoml
shlb
cmp
cmc
inc
outsl
jns
cmp
out
icebp
jae
xlat
mov
cwtl
lahf
lea
int3
sub
js
movb
or
xchg
xchg
lcall
mov
xor
xchg
pushf
mov
inc
test
sar
aam
push
test
cmp
aas
pop
cli
jmp
sti
cmp
push
inc
jg
movsb
pop
and
mov
jmp
scas
js
cld
dec
inc
and
add
in
out
mov
inc
push
ds
or
push
js
pop
je
ja
jle
test
loop
imul
push
pop
lods
push
adc
pop
out
mov
add
testl
mov
cwtl
std
mov
dec
or
mov
push
jmp
das
addr16
insb
enter
jbe
test
and
add
jns
and
push
push
mov
or
decl
jbe
jg
mov
fisttpll
xchg
shrb
push
mov
mov
inc
or
lea
mov
mov
in
adc
and
js
imul
aam
dec
fsubl
mov
divl
fcoms
loop
mov
iret
jmp
adc
xor
aaa
xor
notl
data16
and
cwtl
cmp
lcall
stos
dec
pop
mov
cmpsl
jl
and
into
cmpb
sbb
cmp
imul
fldcw
add
lea
adc
inc
shrl
pushf
mov
ret
pop
decl
mov
pop
ds
nop
repnz
cmp
mov
int3
int
mov
jae
movb
sti
mov
pop
fadd
xor
sub
dec
and
jge
or
push
xchg
stos
mov
hlt
out
mov
cld
fwait
xchg
out
jmp
adc
or
sbbb
jae
cmp
test
cli
mov
adc
xchg
lds
add
mov
cmp
lods
in
dec
dec
push
daa
push
cmpb
imul
xchg
xchg
fsts
fmuls
mov
enter
push
push
adc
rcll
stos
and
scas
adc
xchg
dec
das
daa
or
mov
sub
iret
in
mov
cs
pop
cmpsl
ret
hlt
mov
push
lcall
jmp
jp
unpcklps
aad
dec
sbb
lock
insl
mov
mul
cmp
cmovp
cli
mov
pop
push
in
xchg
mov
xor
xor
out
pop
mov
cmp
sub
pop
push
jle
in
mov
push
bound
push
jb
loopne
repnz
inc
je
mov
imulb
mov
jno,pn
mov
jg
mov
dec
mov
mov
sbb
ds
cs
ret
push
test
aaa
push
test
mov
sub
or
je
popf
cmpsb
and
call
mov
mul
jmp
pushl
fdiv
mov
scas
nop
outsl
stos
int3
popa
testb
and
sahf
mov
dec
sahf
cltd
pushf
sbb
push
push
clc
fcomip
sahf
fwait
lds
jle
lock
leave
inc
stc
sub
xchg
in
xchg
add
sti
subl
rcrb
pop
push
mov
sub
or
pop
aam
mov
cmpsb
je
hlt
mov
inc
xchg
dec
shll
inc
dec
sub
inc
imul
int
cmpsb
scas
add
push
andl
or
mov
mov
and
and
stos
mov
call
lahf
call
xchg
ja
xchg
es
lcall
push
lcall
or
jmp
pop
scas
pop
push
stos
xchg
mov
mov
into
push
and
pop
cmp
sub
je
stos
adc
jmp
mov
dec
cld
sbb
push
and
out
iret
rcr
fnstcw
ficomps
stos
or
sbb
inc
inc
xchg
int
fdivrs
adc
cmp
sbb
pop
and
cwtl
cmp
out
shrl
dec
push
cmp
aam
sub
outsl
mov
pop
out
or
int
cld
push
inc
adc
xor
movsb
shl
or
mov
pop
clc
push
enter
jle
pushf
addb
addr16
mov
or
xchg
mov
stos
repnz
inc
sbb
jecxz
sbb
cmp
jp
cmpsl
rcrb
arpl
jns
scas
pop
mov
inc
ficomps
push
xchg
jne
ds
mov
cs
dec
or
stos
push
pop
fldenv
fmuls
xor
sub
aas
jb
aaa
xor
and
inc
mov
mov
dec
push
sub
or
imull
pop
xor
ds
sub
fwait
and
mov
cmp
icebp
sbb
dec
push
addb
cmp
jp
decb
shlb
fiadds
pop
sbb
call
fldl
int
sbbb
sub
fstpl
and
out
pop
mov
inc
cld
cltd
rcrb
cmp
ja
pop
lods
out
mov
int
ss
cld
popa
inc
xchg
scas
nop
mov
ror
arpl
sbb
int
sbb
push
cmp
pop
sbb
mov
pop
cmpsl
cmpsl
shl
mov
jle
aas
jmp
sar
inc
jl
mov
add
xor
movb
mov
or
aad
or
jno
mov
push
and
ret
outsl
adc
testl
xchg
mov
test
and
imul
sbb
dec
jecxz
addb
stos
jnp
mov
push
push
outsb
sub
out
mov
cld
pop
sbb
push
cld
cwtl
or
outsl
dec
outsb
loop
sbb
mov
ss
pop
out
or
adc
mov
movsb
movsl
jle
xor
sti
mov
cmp
push
pop
add
cmp
test
xor
movsl
fidivrs
testb
movsb
iret
and
mov
orl
cwtl
pop
fs
dec
cmp
pop
lret
in
fs
cli
pop
or
push
push
rclb
shl
ret
rcl
sahf
cmp
jge
mov
cmpsl
repnz
imul
or
cmp
pop
vmread
jp
pop
xchg
popf
mov
shll
add
xchg
jbe
cld
push
cld
leave
pop
outsl
jae
add
push
sub
mov
pop
push
push
dec
add
ret
mov
rcr
pop
push
sub
ret
mov
fs
mov
iret
jecxz
repnz
mov
roll
int
push
or
je
mov
dec
sti
xor
ja
cld
xor
out
cli
inc
xor
outsl
popf
out
push
lahf
sbb
insb
sbb
xor
js
or
ja
faddl
xor
inc
jge
mov
dec
adc
mov
mov
ret
mov
mov
jle
or
popf
shll
dec
cli
dec
add
push
adc
push
xlat
adc
xchg
negb
pop
into
sbb
adc
int
or
test
jns
inc
lea
mov
adc
scas
cmpsb
popa
push
imul
cld
xchg
mov
into
pop
mov
rolb
adc
mov
inc
xchg
push
push
cmp
cltd
daa
adc
cmp
stos
xchg
je
xor
or
inc
push
into
mov
test
and
clc
stos
rclb
dec
add
push
mov
xor
pop
and
rcr
mov
adc
sbb
xchg
sti
push
push
andb
sbb
jecxz
nop
fisubrl
or
test
sbb
mov
mov
or
adc
iret
or
sbb
popf
push
movsl
xor
imul
test
daa
dec
push
jmp
push
jge
insl
add
mov
andl
adc
mulb
jle
push
add
mov
scas
xchg
sub
sub
imull
mov
sbb
int3
xor
inc
and
dec
mov
popf
pop
mov
inc
cmovg
cmp
insl
push
push
jmp
and
call
or
and
add
or
adc
push
push
jmp
stos
push
xchg
test
jnp
sub
or
mov
jl
xchg
leave
cmp
lods
pop
adc
loope
xchg
xchg
inc
les
ror
push
lds
jno
mov
push
cs
int3
pop
lcall
push
repnz
inc
aas
fsub
sub
das
mov
push
dec
dec
add
adc
pop
les
out
sub
ficomps
sub
aas
repz
xor
push
clc
cs
jecxz
xchg
cltd
jle
jo
mov
sahf
xchg
in
or
mov
stos
adc
dec
push
call
push
push
adc
sbb
jl
shlb
cmp
aas
or
inc
sbb
mov
sti
addb
adc
pushf
idivl
xor
stos
inc
pusha
imul
test
or
pop
xchg
fwait
imul
loopne
mov
jb
fiadds
mov
pop
stos
out
roll
adc
cmp
jo
dec
in
testb
sub
outsb
in
mov
cltd
xchg
and
ss
insb
jae
or
sub
push
loope
clc
jno
rorb
sbb
and
and
jg
arpl
mov
std
and
stc
inc
sbb
mov
data16
cmc
jo
out
xor
xlat
push
fistps
mov
push
sub
data16
xlat
jb
sub
dec
sbb
push
push
pop
stos
mov
mov
cmp
add
sub
test
nop
fucompp
clc
push
add
add
mov
push
nop
lret
xchg
fs
cmp
sub
in
outsl
xchg
shll
xchg
push
pop
xor
cli
cwtl
pop
test
xchg
pop
rcrl
cmp
arpl
cli
adc
and
call
xchg
rcr
xchg
cli
fwait
adc
dec
mov
dec
xchg
enter
sub
push
xorl
or
pop
xlat
decb
leave
nop
add
push
dec
test
repz
xchg
jmp
shll
popa
bnd
cli
xor
pop
gs
mov
and
stos
cltd
xchg
pop
mov
daa
jle
mov
loop
xor
jne
pushf
pushf
mov
mov
and
fs
roll
mov
sbb
jl
xchg
mov
adc
mov
je
push
dec
mov
mov
pop
mov
push
orb
hlt
repnz
pop
mov
les
xchg
cmp
lcall
add
and
lcall
arpl
test
xor
test
inc
into
je
insb
aam
fs
sahf
sub
in
dec
sbb
call
into
pop
push
fists
sete
push
repnz
cmp
push
adc
cmp
leave
lods
or
sub
sub
dec
sub
inc
mov
je
push
out
fcomps
adc
divb
scas
subl
cmp
ss
jp
gs
les
in
ret
mov
ret
adc
inc
incl
stos
cltd
jbe
les
in
jmp
cmp
and
pop
xchg
sub
mov
push
lret
das
int3
pop
fisttps
movsl
and
enter
mov
lahf
adc
ss
jge
dec
and
pop
int3
cltd
jne
dec
ds
rcrb
xchg
jp
pop
mov
sahf
lret
int3
mov
shrl
pusha
cwtl
push
rcrb
inc
loop
inc
xor
in
sbbl
sbb
sti
mov
cltd
xor
out
inc
ljmp
loop
inc
jg
mov
clc
in
add
adcl
and
ficomps
push
test
mov
insb
inc
cmc
jns
mov
xor
push
mov
xchg
dec
sarl
or
push
in
movsb
insb
popf
push
fs
mov
mov
mov
xor
dec
push
out
add
pop
fsub
lcall
cld
lea
por
cmp
or
xor
stos
and
sbb
mov
pop
sbb
cmpb
mov
adc
add
outsb
psubusw
movq
push
adc
inc
cmpsb
in
js
adc
push
push
jbe,pn
push
shl
mov
in
stos
lcall
loop
stos
movsl
in
mov
lcall
ret
inc
and
jg
cltd
push
lods
roll
xchg
mov
shrb
andb
out
push
adc
push
fxch
adc
rolb
push
pop
movsb
mov
pop
pusha
outsl
mov
adc
cmp
jl
fwait
mov
dec
loope
cs
test
sub
jg
mov
incb
lcall
sub
pop
fs
xchg
aas
mov
and
decb
and
push
movsl
insl
or
mov
adc
add
mov
pop
dec
shlb
and
jl
cmc
cli
add
xchg
sbb
hlt
cmp
inc
inc
push
fsubp
inc
inc
fists
fidivrs
pop
inc
std
xorl
or
xor
pushf
sbb
into
pop
cmpsb
decb
loopne
add
loope
jnp
pop
and
jle
mov
repz
mov
test
dec
and
jno
daa
xor
mov
andb
xchg
and
test
jmp
mov
lods
jns
jle
or
xor
pop
sub
outsl
stc
pop
in
lds
cwtl
fildll
cmp
push
cmp
in
sbb
lret
and
jp
mov
xor
fiaddl
icebp
in
cwtl
or
fimull
mov
sarb
lret
popf
pop
dec
ss
in
mov
popa
fs
fisubs
dec
cwtl
adc
dec
stos
pop
lret
add
xor
mov
cmp
push
in
mov
addl
xchg
add
cmp
push
cli
jns
inc
loopne
mov
and
pop
data16
dec
jle
iret
jns
rcrl
cli
stc
pop
jo
aam
cmp
imul
cmp
push
aas
pop
add
out
mov
jl
adc
mov
cwtl
aam
cld
aad
ret
and
fcoms
pop
lock
loop
hlt
int3
clc
xchg
sub
cld
shrl
and
bound
add
shlb
and
mov
jo
lret
call
das
decl
xchg
add
adc
xor
cld
fisttpll
xchg
cs
nop
movl
mov
jnp
jmp
in
jecxz
and
sub
sub
mov
test
mov
inc
mov
call
jecxz
mov
out
xor
cmc
and
loop
cmp
mov
pop
dec
xchg
dec
sahf
cmpsb
outsl
adc
or
mov
adc
jo
je
sbb
push
movsb
shll
pop
add
mov
popf
sbb
xor
gs
cmp
stos
pop
bound
cltd
out
int
rcrb
aas
daa
jo
sub
dec
lret
lret
sub
adc
pop
mov
push
inc
ret
add
test
or
mov
clc
pop
mov
cmp
movsl
cmpsl
mov
aad
xor
and
mov
gs
in
scas
pop
test
sbb
fsubp
test
pop
and
dec
inc
xchg
xlat
popf
aad
fmuls
dec
movsb
mov
test
pop
pusha
or
adc
pop
jl
nop
outsl
sar
lret
mov
xchg
ja
outsl
push
fstpt
add
push
sbb
ret
sub
imul
push
adc
and
pop
aad
and
ds
ljmp
xor
sbb
ret
lcall
inc
mov
push
mov
cmp
xor
in
fimull
mov
out
dec
hlt
cmp
adcb
xor
inc
push
gs
cmp
faddl
jmp
pushf
mov
mov
add
push
and
cmpsl
clc
icebp
jno
cmpsl
mov
clc
xchg
out
xchg
into
mov
int3
orb
in
shl
movsb
and
mov
mov
cs
jb
inc
in
or
sbb
idivb
sbb
dec
popf
cmpsb
and
call
sarl
popf
and
and
ja
sub
or
xor
jbe
bound
jl
jns
mov
pop
js
jle
not
push
ljmp
and
add
aad
popf
mov
call
pop
ja
insl
fs
pop
arpl
mov
daa
loop
xchg
xorl
pop
dec
shl
loop
cmp
cwtl
jo
mov
xor
loop
jp
dec
cmpsl
js
or
mov
lcall
mov
imul
imul
xor
int
jb
mov
push
xchg
mov
sbb
ljmp
sub
push
mov
sub
ficoms
lea
jmp
push
add
orl
clc
xchg
ds
mov
cmp
popa
pop
fadd
stc
adc
pusha
add
in
ds
ss
mov
dec
loope
jno
mov
ja
cmp
test
in
imul
sub
imul
mov
inc
mov
scas
and
sbb
bound
ljmp
xchg
inc
add
sub
dec
enter
cmp
pop
roll
fwait
inc
xor
and
enter
enter
lods
outsb
rorl
orb
cmpsb
add
data16
cmp
mov
sbb
push
loopne
or
fists
addb
sbb
pop
or
shrl
pusha
mov
pop
and
xchg
mov
cwtl
sbb
fisttpl
shll
add
pop
das
js
ss
mov
les
mov
xchg
mov
mov
sub
lret
les
mov
or
in
sti
mul
daa
xor
test
pop
sbb
in
sub
cmp
scas
ja
or
adc
repnz
xchg
jbe
movsb
sbb
jbe
lcall
sbb
aad
mov
inc
jmp
out
sahf
std
jle
ret
mov
dec
jb
stos
xchg
inc
xchg
stos
jmp
in
xor
push
mov
mov
add
sub
mov
gs
jl
pop
dec
dec
jl
sub
scas
xchg
or
add
fcmovu
mov
mov
inc
lock
rolb
stos
adc
mov
cmp
inc
mov
push
mov
rcr
adc
loopne
xor
mov
jg
adc
lret
push
call
call
aaa
lds
mov
rcrb
rorb
mov
lret
sbb
inc
cli
sub
mov
loope
ljmp
adc
push
fcomi
lea
dec
jle
sbb
or
dec
mov
outsl
jns
mov
addr16
leave
and
sbb
xchg
jnp
mov
scas
outsl
jge
stc
out
or
jns
mov
sbb
dec
arpl
js
cmp
mov
dec
push
cltd
hlt
dec
sbb
push
sub
loopne,pt
push
ss
sti
push
imul
sarb
sbb
loopne
mov
jne
sbb
mov
xor
iret
lods
xchg
into
xor
test
mov
cltd
dec
out
pop
rolb
and
and
xor
ljmp
ret
lds
xchg
xchg
imul
aam
xor
push
aaa
mov
jmp
scas
adc
movsl
ret
cmp
pop
and
xchg
cmp
mov
push
das
mov
jle
or
das
pop
faddl
jne
es
jb
pop
ja
cltd
sti
jle
mov
hlt
les
cs
hlt
mov
inc
inc
pop
das
pop
pop
mov
mov
decl
dec
cmpsb
hlt
push
sbb
out
mov
mov
std
mov
jbe
js
insl
push
ret
jno
sub
and
inc
or
pushw
mov
dec
inc
lret
out
dec
mov
mov
sbb
mov
cmp
fiaddl
push
jne
cs
data16
cld
movsl
arpl
push
stos
in
fs
rcll
jmp
adc
icebp
mov
adc
lahf
std
inc
fisttps
ss
xor
in
or
jno
scas
and
cmp
fcompl
fdiv
mov
mov
imul
and
pop
repz
aas
or
jbe
gs
out
cs
xchg
les
xor
fists
mov
subb
push
and
in
jbe
and
xor
or
out
leave
inc
xor
imul
orl
cmp
shrl
aam
push
cld
in
lock
push
mov
das
jbe
imul
adc
mov
or
adc
mov
mov
pushf
mov
push
in
cmp
adc
xor
xor
xor
sbb
or
pop
lcall
add
or
mull
mov
call
aad
lahf
pop
and
mov
pop
push
xchg
lds
xchg
dec
dec
and
pop
add
rcl
inc
lods
mov
je
icebp
mov
rep
push
inc
clc
es
push
dec
adc
xor
sarl
xor
fs
gs
and
lret
mov
mov
dec
mov
and
cli
or
adc
push
enter
inc
cmp
mov
faddp
push
movsl
loope
popa
loopne
fnstsw
lahf
repz
pop
gs
push
dec
lock
mov
push
cmp
loope
rcrl
push
shl
push
leave
xchg
repz
pop
adc
repnz
cmp
mov
inc
jo
dec
add
fs
mov
adc
stc
in
pop
sbb
xchg
popf
sbb
nop
xor
add
adc
scas
lret
xchg
clc
push
nop
fs
jne
out
pusha
xchg
pop
lds
js
mov
test
inc
data16
icebp
dec
sub
fdiv
mov
clc
cltd
dec
or
dec
cld
add
push
pop
cld
jmp
cmp
shlb
add
mov
pop
cmp
lods
repz
jae
enter
gs
into
ja
dec
pop
mov
inc
hlt
sub
lcall
or
add
call
nop
sbb
adc
fwait
int
push
push
jecxz
loopne
sub
mov
jbe
incl
push
or
xchg
pushf
ficoml
cltd
push
iret
jecxz
repz
in
mov
dec
xchg
push
cli
ret
std
mov
fchs
sbb
rorb
loope
push
and
clc
fcoml
or
jge
loopne
add
mov
mov
jecxz
push
sbb
fdivr
add
dec
cli
mov
pop
push
or
or
shlb
and
outsl
sbb
mov
repnz
inc
ss
xor
repnz
pop
adc
cmp
add
cmp
pusha
lahf
xchg
cli
mov
pop
sti
in
inc
iret
movsb
and
mov
jmp
into
fdiv
adc
pop
nop
dec
scas
xchg
clc
arpl
add
scas
fnstcw
xchg
popa
push
es
mov
xor
xor
mov
xchg
in
sub
xchg
sub
fsubl
cli
movsl
adc
sub
jne
mov
push
push
das
sub
mov
lcall
dec
adcl
shlb
push
fs
dec
push
jl
ja
mov
mov
sahf
sbb
pusha
xor
jbe
push
sub
inc
mov
jno
repz
xchg
jmp
mov
jp
adc
testl
or
clc
or
mov
xchg
xor
sbb
inc
mov
push
dec
aas
cmp
stos
mov
in
les
lret
mov
enter
js
adc
push
jae
in
les
out
xor
call
imul
nop
sarl
jge
jbe
xchg
mov
jnp
dec
cmpb
cmp
pmullw
sarb
cld
sbb
cmpsl
jle
out
aad
cmp
std
hlt
pop
iret
out
add
push
cmpsb
dec
push
dec
inc
push
iret
adcb
sub
xchg
cmc
mov
test
faddl
pusha
vunpckhpd
mov
inc
cli
xor
or
jns
daa
add
scas
push
fsubp
sbb
xorl
sbb
gs
sub
xchg
lret
insl
xor
mov
ja
int3
test
sub
inc
and
adc
ja
fwait
pushf
mov
adc
idivl
and
je
fisubl
sbb
inc
lods
lods
xchg
jmp
into
sahf
scas
cmp
cmp
push
xchg
fs
xchg
push
cltd
std
shld
adc
jno
lret
outsb
xchg
add
mov
jo
test
aas
sbbb
or
sbb
mov
rorb
sub
fnsave
sbb
aad
push
sub
xor
dec
pop
daa
outsl
xchg
add
or
neg
push
fisttps
aad
sub
lock
and
pop
iret
dec
pushf
xchg
std
enter
mov
mov
repz
repz
mov
jmp
add
xchg
inc
outsl
lret
inc
mov
mov
push
push
sub
cmpsl
pop
adc
bound
lds
mov
cmc
mov
dec
in
iret
mov
fnstcw
addr16
movl
cld
mov
cmp
sub
pop
outsl
rclb
stos
push
sub
aad
roll
jno
push
data16
and
outsl
mov
mov
imul
gs
sub
push
xchg
mov
in
mov
sub
xor
sbb
or
cmp
or
idiv
pop
mov
mov
dec
neg
and
dec
jle
es
xchg
andl
inc
fcoms
inc
cltd
mov
movsl
nop
jg
xchg
movsb
jae
nop
xor
or
stos
ficomps
and
in
inc
jo
pop
popf
test
fwait
lret
in
jp
xchg
jmp
aas
sahf
ret
fmuls
sub
lock
addr16
sbb
out
xor
xor
cmp
push
pop
lret
or
dec
xor
lcall
and
ds
lea
jecxz
push
not
addr16
xchg
lea
mov
jno
mov
mov
jne
and
imul
mov
lea
jbe
mov
xor
test
push
push
or
pop
daa
and
pop
and
lret
adc
or
call
sbbb
insb
pop
sar
pushf
jae
mov
pusha
das
pop
inc
jnp
lock
push
jecxz
out
mov
les
lret
sbb
mov
add
je
shrb
sahf
adc
out
loope
repnz
nop
inc
jg
push
xor
aaa
pop
push
hlt
mov
cltd
es
cmp
mov
jne
shrl
and
xchg
lahf
roll
repnz
push
mov
xor
dec
idiv
ja
mulb
or
sbb
out
pop
rcrl
test
mov
sahf
shrl
mov
cld
das
mov
loope
ss
inc
add
fldt
fidivl
mov
nop
add
test
add
xchg
jo
push
ljmp
or
aad
xorb
aas
fdivl
andl
jmp
xor
adc
lock
cmpl
dec
cmp
pop
sub
scas
add
mov
arpl
pop
adc
and
adcb
insl
in
ret
cmp
xor
xorl
lock
fistl
lds
xchg
lret
ss
jmp
repz
or
xor
addr16
orb
sub
insl
inc
push
jb
rclb
mov
cmpsb
fs
or
lcall
adc
mov
inc
out
movsb
hlt
add
rcr
jae
inc
push
loop
cmpsb
dec
xor
insb
addl
and
sub
dec
and
lret
jge
inc
pop
dec
int3
ljmp
scas
mov
movsb
adc
out
lods
push
cmp
je
jecxz
xor
lods
pop
std
mov
sub
push
xor
jae
das
sbb
xchg
xor
mov
push
movsb
sub
ret
xor
shr
inc
or
xchg
jne
mov
in
fbld
jno
xchg
cmp
cmp
mov
mov
inc
dec
in
inc
dec
sarb
push
pop
sti
jns
ljmp
inc
sub
lea
inc
aas
lds
in
stos
fwait
cld
adc
cmc
jne
sub
or
mov
ja
mov
out
mov
enter
into
test
adc
call
xchg
push
sub
outsl
mov
mov
out
jo
inc
jns
lcall
shrl
negl
cmp
arpl
cmc
mov
sub
lods
and
mov
fiadds
xchg
push
jnp
out
aam
inc
add
mov
adc
push
cli
out
ja
inc
pop
pop
ss
sub
in
push
aad
daa
xchg
dec
mov
adc
jecxz
scas
ja
inc
aad
xor
sti
out
aaa
int3
rcll
dec
sub
sahf
pop
in
sahf
mov
iret
add
std
cmp
sub
sahf
imul
ja
cld
jo
inc
stos
push
lds
add
data16
inc
push
adc
sub
push
fstpt
lcall
mov
addb
or
clc
test
cmp
adc
xchg
addr16
scas
lahf
push
leave
jne
add
out
push
jg
mov
mov
sbbb
stos
ljmp
fistl
arpl
xlat
gs
into
subb
sbb
jg
xchg
int
and
not
dec
sub
cmp
add
pop
cmp
es
dec
notl
mov
push
scas
out
in
and
and
jge
vmwrite
xlat
lret
mov
mov
mov
and
mov
icebp
rorb
shlb
add
add
pop
cmpsb
mov
sbb
hlt
mov
nop
in
jno
mov
stos
fstl
adc
jo
fwait
arpl
push
pop
xor
and
mov
loop
push
push
sub
cmp
clc
cmp
in
test
or
test
pop
or
mov
add
jmp
imul
mov
mov
imul
test
pop
aam
jo
push
test
rcr
jle
pop
ss
push
inc
jbe
push
sbb
scas
mov
push
jge
cmp
jmp
xor
sahf
mov
cmp
shlb
enter
in
addr16
sub
je
adc
push
xor
cmpsl
xor
insl
movsl
cmp
cltd
je
out
ss
mov
pop
rorl
lods
int
pop
push
cwtl
std
or
imul
aas
jl
lds
leave
push
enter
jmp
mov
or
mov
mov
cmpb
inc
scas
adc
sbb
mov
inc
mov
sub
xchg
aam
cltd
nop
cmp
jmp
je
pop
ret
sub
aam
mov
adc
xchg
fdiv
sarb
jo
jbe
out
mov
mov
add
xchg
and
into
jno
adc
or
sbb
test
xchg
jbe
pop
mov
dec
mov
jp
adc
and
shll
aaa
jmp
xchg
xlat
pushf
pop
or
aad
dec
std
mov
xchg
inc
fs
jl
mov
into
jbe
push
bnd
clc
push
fxch
sub
daa
cmpsl
inc
in
aaa
pop
mov
rorb
outsb
das
lods
clc
or
push
sbb
pop
imul
lret
fwait
mov
mov
repz
dec
or
mov
outsl
cmp
call
adc
jmp
xchg
repnz
fsubl
in
aam
aam
push
in
cmp
push
and
cmovbe
mov
jle
mov
sub
lock
or
es
and
insb
xchg
jne
add
stc
sahf
cmpsb
aam
xor
mov
out
push
cmc
add
add
jle
adc
outsl
jns
push
hlt
addr16
mov
xchg
xchg
mov
fs
jg
ret
lds
mov
xchg
test
inc
xchg
sub
push
shr
jle
mov
pop
ffree
cmp
inc
jp
pop
nop
adc
daa
iret
insb
xchg
ljmp
decb
xchg
pop
pop
aad
std
ds
mov
mov
bound
mov
scas
xor
ds
dec
push
add
jecxz
js
adc
jne
pop
xor
mov
add
lea
jo
mov
call
lock
sbb
jecxz
add
or
mov
adc
xor
ret
fnstenv
sbb
mov
fistpll
pop
lret
push
xor
xor
aas
sbb
fwait
add
jecxz
and
divb
ret
xor
pop
or
or
lret
inc
adc
mov
lods
jg
js
and
mov
and
cmp
adc
sub
iret
mov
movb
fsubs
mov
dec
or
fiaddl
xchg
pusha
test
or
jg
or
movsl
add
jno
pop
inc
jne
mov
cmpsb
in
inc
out
pop
test
dec
and
jbe
lock
inc
in
cmp
outsb
call
aaa
sub
xor
or
sub
popaw
push
push
pop
adc
aad
lds
ljmp
mov
xor
push
inc
subl
inc
fsubr
je
or
in
push
popf
dec
test
jne
pusha
mov
repz
jns
jmp
neg
xchg
add
stc
jl
cmpsl
cmpsl
test
dec
pusha
popf
push
lods
jb
into
orl
fwait
xchg
out
push
cmp
inc
mov
adc
outsl
sub
or
jae
mov
add
repz
push
aas
sub
sti
and
mov
roll
rclb
mul
mov
loopne
out
es
jmp
negl
fisubs
call
jp
mov
mov
cmpsb
xlat
ss
in
aas
sarl
xchg
and
rolb
sbb
mov
dec
mov
imul
and
popa
pop
push
push
stos
dec
xchg
push
cmpsb
xor
xor
adc
or
icebp
xor
gs
aam
shl
push
jl
movsb
push
adc
mov
loop
outsb
lock
movsl
inc
sbb
lcall
loop
dec
xchg
adc
daa
test
adc
insb
mov
mov
sub
dec
xor
jo
andl
push
push
imulb
mov
sbb
in
fildl
pop
scas
filds
sub
negl
adc
shll
bnd
pop
out
dec
leave
sub
popa
ret
nop
sub
mov
stc
mov
or
stos
xchg
cs
loopne
test
push
mov
pushf
test
mov
and
and
push
test
lock
push
ud0
ja
mov
into
sbb
sbb
jnp
push
push
mulb
xlat
shr
lcall
lret
mov
xor
hlt
insl
pop
mov
mov
out
pop
pop
mov
dec
dec
xor
cli
adc
pop
adc
lcall
mov
mov
cs
movsb
cs
pop
pop
pop
ret
xor
sbb
shlb
aaa
pop
test
scas
mov
adc
xlat
push
jo
insb
loope
fmul
mov
pop
data16
cmp
jo
enter
adc
mov
cmpsb
neg
mov
push
int
lcall
pop
inc
cmpl
add
roll
sub
mov
mov
repnz
sbb
cmp
cmp
subb
pop
in
gs
and
add
push
fsubs
add
jnp
cmp
sahf
mov
xor
cltd
mull
out
inc
mov
inc
scas
sarb
sbb
dec
dec
shll
cld
into
fldt
bound
pop
adc
hlt
adc
mov
fneni(8087
mov
shrl
xchg
jmp
hlt
sub
sbb
xor
int3
mov
dec
ljmp
stc
or
cmpsb
adc
push
xor
add
aam
inc
outsl
sbb
jge
xchg
push
inc
es
jl
inc
pop
inc
loopne
imul
sbb
icebp
sbb
lahf
aad
or
testb
inc
cmp
or
dec
bound
in
scas
push
mov
cmp
mov
mov
mov
mov
or
cmp
das
sub
dec
or
jle
push
add
xor
inc
fstps
lcall
iret
cmp
mov
dec
ljmp
xor
fidivs
aad
sub
add
mov
addr16
cmp
sahf
or
push
fistps
xchg
mov
jns
ss
hlt
sub
call
xor
out
pop
fstpt
mov
xor
popa
push
add
xchg
cmc
ljmp
jecxz
repz
push
pop
movsl
push
insl
jecxz
dec
xor
push
adc
lea
jae
jne
xor
jge
xor
es
out
outsb
aad
push
sub
jo
sub
out
outsb
jmp
mov
mov
pop
jle
xchg
dec
movsl
es
sub
inc
push
mov
add
nop
add
sbb
dec
or
aaa
push
int
or
repz
push
into
fnstsw
sbb
ret
daa
addr16
dec
cli
loope
pop
aas
xchg
test
rclb
cmp
sub
xchg
xor
daa
jl
cmp
fbstp
push
mov
int
add
daa
orl
jmp
lock
int3
ljmp
pop
imul
loop
fimull
aas
mov
outsb
sub
mov
scas
ret
les
les
fstl
mov
or
test
pop
mov
pop
push
add
aas
lret
rclb
push
adc
shl
aad
shll
adc
loop
dec
repnz
pop
ljmp
in
push
jmp
push
push
pop
inc
mov
inc
cltd
fisubrs
in
mov
pop
in
xor
xchg
into
fwait
cs
adc
std
jmp
imul
out
leave
fimuls
xchg
pop
xor
cmc
je
daa
push
push
lock
mov
in
cmpsb
nop
and
test
cmp
sub
es
fildl
imul
divl
xchg
pop
inc
sub
stos
push
fcmove
loopne
icebp
mov
lret
fldl
imul
fldcw
fildll
cli
gs
lods
repnz
xchg
aad
out
dec
adc
inc
jb
xchg
lea
popf
mov
xchg
sub
test
pop
sbb
jae
insl
arpl
push
cmp
add
in
das
pop
clc
in
inc
fdivr
mov
add
addr16
pop
mov
cmp
xchg
push
jnp
cmp
sbb
out
sbb
xchg
decb
or
jle
test
std
push
sahf
fisttps
adc
inc
mov
sub
and
push
sbb
loope
dec
test
mov
movsb
lgs
pop
hlt
test
mov
lcall
xor
cmpsb
xchg
xchg
mov
and
push
int3
imul
int3
push
js
cli
jb
mov
jns
add
jne
fmuls
mov
xchg
xor
dec
aas
adcb
pop
in
jmp
adc
insl
gs
pop
pop
push
ss
inc
cmp
std
sub
lock
mov
add
adc
pushf
pop
jle
in
jge
pop
ret
sub
repnz
out
mov
and
inc
pop
adc
mov
ds
in
aas
mov
add
jge
xchg
cmpl
inc
mov
cmpsb
aas
mov
int3
imul
fisubs
xor
or
xchg
subb
adc
cmp
push
inc
pop
xor
mov
loopne
hlt
test
push
mov
xchg
xor
ss
cmp
jno
mov
mov
and
inc
inc
enter
fwait
cltd
movsl
cmp
mov
jmp
push
and
nop
out
shll
sar
inc
jnp
mov
repz
or
insb
pop
dec
lea
xchg
lds
xchg
cmpsb
add
cmp
sub
test
sbb
adc
inc
insl
pop
mov
xor
aam
mov
xor
or
shl
je
sub
pop
nop
out
fisttpll
pop
mov
sub
jns
xchg
call
fmuls
mov
cmpsl
fadd
cld
sub
pop
lods
inc
pop
test
pop
inc
in
dec
es
jl
ljmp
adc
adcl
imul
push
cld
xlat
js
lea
dec
call
mov
bound
dec
ret
loopne
dec
movsl
xchg
sub
mov
pop
push
fnsave
sbb
adc
sbb
mov
sub
jnp
jp
pop
jae
and
lods
loope
addb
aas
sub
rorl
pop
notb
fdivs
sahf
lock
push
mov
mov
mov
xor
jmp
repnz
rolb
and
pop
add
and
pop
lock
dec
insl
pop
mov
cmp
xor
ret
inc
aad
cltd
fisttps
lea
mov
gs
xor
jo
lahf
ret
mov
mov
add
mov
add
popf
int3
icebp
dec
jo,pt
cmpsb
dec
fwait
xchg
hlt
punpckhbw
and
popa
adc
xor
pusha
mov
pop
mov
xchg
fcoms
je
out
pop
fwait
je
nop
cmpsb
dec
popf
fists
xchg
jp
pop
loop
iret
add
cmp
mov
repnz
mov
sbb
or
lock
and
repnz
sbb
add
dec
inc
out
pop
leave
mov
adc
fdivs
cmp
jbe
xlat
in
je
xchg
repz
sbb
cmp
sub
mov
push
ds
mov
jmp
out
inc
adc
push
clc
aaa
es
push
int3
xchg
pop
imul
push
dec
mov
scas
outsb
jmp
clc
push
pop
inc
fisttps
mov
cs
pusha
mov
cmpl
insl
push
adc
out
pushf
jg
outsl
xchg
jle
xor
iret
addb
pushf
cmp
xorb
ds
das
out
fimull
mov
mov
sti
stos
test
xorb
out
xor
pushf
sti
mov
sbb
leave
mov
xchg
imul
dec
pop
sbb
jg
and
pop
pop
jbe
pop
push
mov
scas
adc
ja
lods
push
dec
sbb
dec
xchg
xchg
mov
rolb
insl
xor
lods
dec
jo
xchg
fdivs
repnz
jae
xchg
push
outsl
mov
and
jle
mov
popf
jo
mov
adc
push
pop
pop
pop
mov
adc
sbb
dec
push
ss
imul
hlt
insl
mov
mov
xchg
repz
push
pop
mov
in
std
xchg
adc
data16
jno
inc
or
add
lcall
inc
mov
cmovle
push
orb
lock
orb
ror
les
in
addr16
adcb
mov
push
xor
push
int
push
stos
inc
shll
dec
adc
insl
mov
sti
ss
or
xor
les
xor
cmp
mov
mov
xor
sbbl
cmp
xchg
push
pop
push
or
push
fsubrl
mov
add
shl
pop
cltd
out
rolb
cmp
jns
imull
loope
rcl
or
fwait
inc
mov
inc
dec
add
xlat
jl
pop
xchg
xor
or
cmc
push
out
push
jg
jecxz
movsb
lods
xchg
fneni(8087
out
test
cmp
les
add
icebp
sub
mov
jmp
pop
cmp
mov
push
mov
jb,pn
out
dec
int
xchg
push
idiv
into
pop
pop
rcll
rcll
lcall
cmp
ret
dec
xchg
lcall
xchg
jb
pop
adc
std
into
or
jp
xor
test
icebp
jp
mov
rorb
arpl
mov
mov
enter
repz
mov
sub
sbbl
imul
mov
add
xchg
push
std
sti
mov
pop
mov
pushf
adcl
ret
jae
or
sub
inc
fucomi
adc
inc
testl
das
fcompp
push
xor
xlat
xor
ficoms
notl
mov
sbb
test
sbb
gs
es
inc
inc
outsl
mov
insb
adc
and
lods
ljmp
dec
and
lcall
outsl
in
test
in
shl
xor
mov
pusha
sahf
filds
ret
jae
shrl
or
repnz
fldl
shll
mov
sub
push
leave
sub
adc
out
inc
and
js
ret
loop
clc
repnz
leave
rolb
mov
cmp
fisubs
lret
rcl
adc
shrb
loop
loope
dec
test
out
pusha
sub
mov
push
push
and
mov
lret
push
out
inc
jle
xor
pop
rorl
push
jl
push
xchg
pop
imul
lgdtl
adc
add
pop
jecxz
push
sub
mov
xchg
loop
int3
test
aad
mov
cmpsl
push
dec
inc
inc
or
pusha
popa
shr
jnp
pandn
xchg
std
or
andb
push
jmp
mov
movsl
mov
lret
mov
add
aad
testl
das
pushf
stc
cmp
cmp
inc
mov
inc
mull
stos
repnz
or
push
mov
cmc
jg
push
push
pop
fldt
cmc
or
push
jno
jecxz
lods
popl
out
or
fimull
dec
mov
sub
in
xor
jp
lock
outsl
stos
sbb
xchg
push
pop
dec
or
into
fcmovnbe
test
fsubs
sbb
push
cmp
ret
lds
mov
divl
mov
popa
inc
icebp
pop
and
pop
dec
sarl
or
insb
sti
push
lcall
lock
das
iret
cmc
cltd
mov
mov
mov
xor
clc
jae
cmpsb
stos
cmp
pop
push
insl
mov
ljmp
add
mov
mov
std
push
sub
andb
aaa
jnp
orb
push
sub
shl
and
mov
push
out
imul
scas
add
jne
pushf
mov
or
inc
dec
cmpsb
mov
adcb
das
inc
mov
lahf
xchg
cs
in
aam
xchg
js
addb
std
test
xchg
sbbb
enter
loopne
jp
stos
ret
jp
push
jns
in
pop
fsubs
sub
and
xor
jmp
lods
adc
and
adc
ja
mov
lret
dec
sar
sbb
push
or
imull
mov
dec
gs
inc
pushl
jns
xchg
fsts
sub
sbb
lods
pop
ret
jp
mov
or
mov
imul
pop
pop
loop
push
mov
test
sub
pop
sub
gs
cld
and
addr16
scas
aas
int3
xor
add
push
and
sub
or
imul
xchg
fdivr
mov
fwait
xchg
sbb
fsts
aaa
jmp
mov
in
fimull
bound
in
xor
mov
daa
push
bound
cmp
mov
scas
add
pop
xchg
and
mov
fstpl
push
rorl
cli
lret
xchg
rcrl
gs
push
or
ficompl
data16
dec
shll
pop
push
pop
add
add
cmp
cli
mov
jb
mov
out
mov
add
test
les
aaa
jno
xor
enter
xor
push
push
shrl
mov
mov
mov
lret
aas
adc
in
inc
lea
stos
pop
cmpsl
xor
inc
arpl
mov
mov
nop
fldcw
dec
je
mov
and
push
add
xor
add
jbe
int3
mov
adc
push
mov
es
push
mov
sub
andb
or
sbb
sub
jnp
pop
test
xor
inc
pop
push
mov
sub
pushf
pop
ss
imul
xor
ds
jmp
jmp
sbb
into
jb
add
daa
mov
push
mov
sahf
ffreep
mov
out
jecxz
out
adc
stos
jno
ss
int3
ljmp
add
mov
retw
cwtl
lods
sbb
je
jl
insb
jp
decb
mov
dec
mov
loopne
and
mov
loope
mov
rorl
dec
mov
xorl
cli
mov
cltd
push
pop
mov
repz
fsubrl
xchg
push
inc
mov
cwtl
loope
sbb
lcall
shlb
jmp
sub
mov
cmpsb
adc
std
ss
xchg
push
fwait
popf
jge
out
xor
test
arpl
rcrb
das
inc
cld
dec
mov
pop
mov
inc
sbb
dec
jns
inc
sub
xchg
leave
loope
jp
cmpb
and
adc
push
add
addr16
add
mov
cmpsl
push
and
xchg
test
adc
lods
mov
scas
jle
or
mov
aad
shrb
cmp
leave
aam
cmc
mov
pop
push
out
stos
or
dec
das
loope
ret
mov
xchg
mov
fdivr
inc
sub
adc
sub
jbe
inc
movsl
loope
cmp
mov
out
mov
inc
repnz
and
dec
add
cmp
pop
push
in
cltd
dec
dec
js
mov
mov
pop
inc
mov
lods
repz
leave
push
jmp
and
rcll
lods
sbb
pusha
cmp
sub
jno
mov
adc
jne
roll
les
cwtl
cmp
sbb
jns
adc
cmp
jne
xchg
addb
cmp
adc
in
fiaddl
xchg
sbb
adc
inc
pop
and
sub
outsb
dec
mov
lea
add
rcr
inc
ss
jmp
sbb
xchg
mov
mov
adc
aad
out
add
out
or
lret
lret
mov
and
gs
or
xchg
or
push
gs
and
les
loop
xchg
mov
stos
xchg
xchg
lock
fidivrl
clc
adc
push
dec
movsb
repnz
lds
adc
add
sti
cwtl
in
add
repnz
sbb
lcall
or
pop
sub
out
aam
fistps
xor
ffree
adc
loope
inc
loopne
sahf
sbb
jle
es
icebp
or
daa
xor
xor
outsb
fdivl
xchg
sub
mov
sbb
repz
sbb
push
sub
ss
fstl
pop
cmp
imul
pop
sbb
sti
div
jmp
add
sbbl
cmp
mov
mov
loope
push
add
fstpl
adc
jge
jg
aam
imul
adc
shll
jae
sub
mov
xor
into
adc
jg
jge
sbb
mov
sarl
xchg
dec
push
and
xchg
and
sbb
adc
repz
dec
movsb
jmp
mov
loopne
shrb
push
inc
mov
dec
pop
sarl
fwait
test
leave
add
mov
lds
inc
imul
daa
jmp
in
adc
das
pop
cmp
pop
cld
addr16
ljmp
scas
push
inc
pop
push
and
test
jb
test
push
lret
testl
xchg
push
xlat
sbb
and
jne
push
mov
repz
ret
sti
adc
lods
inc
mov
jmp
addl
dec
cmp
xchg
and
les
xor
xor
xor
inc
mov
push
sarb
mov
cmc
mov
sbbb
pop
mov
sub
or
xchg
dec
divl
nop
lret
ja
cmp
mov
sub
push
fs
or
jle
xchg
test
insl
pop
stos
or
cmp
lods
negl
inc
outsl
pop
inc
dec
lods
pop
and
and
leave
pop
lods
mov
pop
dec
jne
popa
mov
add
pop
inc
in
in
pop
in
adc
and
jmp
es
scas
xchg
or
jmp
in
pop
psrlw
int
out
fcoms
in
lret
push
scas
pop
pop
testb
orb
jnp
dec
movsb
dec
jecxz
movsb
dec
testb
jge
adc
ljmp
xchg
icebp
inc
out
ja
and
jb
mov
popa
xchg
outsl
fstpl
and
mov
bound
push
sbb
out
jl
ret
dec
cs
cld
aas
push
inc
dec
jmp
xchg
ss
insl
dec
lea
sbb
clc
and
fnstsw
mov
fs
or
jo
add
dec
sbb
loope
cmpsl
rclb
loop
sbb
push
imul
mov
and
out
pop
stos
mov
pop
vprotb
scas
outsb
and
mov
cmp
out
jl
addr16
ljmp
vmovss
sub
dec
xchg
pop
dec
mov
jo
enter
jl
outsl
addb
lret
inc
ds
iret
cmp
mov
shrb
outsb
sbb
lret
mov
inc
jecxz
dec
adcl
push
xchg
das
and
mov
arpl
stc
insl
lea
nop
cmpsb
shrb
ror
loop
fsubrl
fsubs
push
std
shrl
insl
mov
inc
mov
jnp
in
call
popl
int
mov
ds
daa
jl
mov
incb
xlat
pop
loopne
mov
sub
mov
imul
or
shll
dec
mov
or
sbb
dec
dec
and
repz
hlt
xchg
mov
in
movsb
xchg
dec
push
pop
jae
jbe
and
mov
lahf
xchg
sub
and
lods
cmpsl
into
and
shlb
fcomps
outsb
inc
push
dec
hlt
or
cmpsl
shrb
orl
inc
je
mov
pop
cltd
stos
lods
or
out
and
stos
inc
frstor
scas
mov
out
cmpsb
shlb
sbb
scas
mov
push
dec
idivb
enter
aas
loope
push
jnp
in
cmp
pop
pop
in
int
in
sbb
push
enter
pop
mull
adc
insl
adc
jp
lock
add
incb
arpl
mov
jg
loopne
mov
into
xor
scas
out
cwtl
xchg
xor
lock
icebp
ret
lds
jmp
ss
mov
fwait
jae
mov
jp
mov
popa
int3
mov
dec
test
mov
sbb
stos
loope
mov
push
mov
bound
sbb
cmpl
push
or
mov
sbb
xor
ljmp
xchg
pop
negb
and
pop
call
pop
jne
jne
and
lcall
lcall
mov
mov
mov
jp
cmc
add
mov
int
fs
inc
mov
mov
xchg
xchg
mov
repz
leave
push
pop
sti
dec
fnstenv
push
lods
ss
and
push
sub
fdivrs
testl
lret
mov
ret
or
cmp
fimuls
xor
fisttps
and
pop
nop
stos
sti
inc
sbb
aaa
push
fmul
or
fwait
imul
mov
xchg
into
mov
pop
sahf
push
push
fisubs
les
cwtl
clc
add
dec
jge
clc
mov
stos
inc
loope
sbb
in
rcll
test
rclb
ret
iret
movsl
and
xchg
in
idivl
in
inc
cmpsb
fcomps
mov
aaa
ja
les
int3
insl
nop
push
insl
sub
clc
pop
pop
loopne
mov
int3
jl
mov
testl
jno,pn
cmp
xchg
push
adc
mov
shrb
adc
into
cmp
inc
in
lods
gs
jo
cltd
ds
mov
push
mov
fs
in
loop
mov
mov
pop
pop
mov
or
adc
mov
out
push
inc
dec
mov
stc
mov
xchg
xchg
ds
divl
scas
out
ret
mov
ret
popf
int
jle
stc
push
cmp
sub
mov
sbb
add
outsl
adc
push
test
imul
pop
in
pop
mov
std
push
adc
test
jne
out
fcmovnu
lock
sbb
xchg
cmp
cmp
sub
imul
out
arpl
mov
pop
pushf
lcall
and
lods
icebp
dec
daa
jecxz
stos
push
jne
rcll
rclb
ja
or
icebp
mov
fistpl
push
aad
jnp
or
cmpsb
jmp
or
popf
pop
mov
mov
pop
sbbb
sbbl
dec
mov
pop
ss
pushl
and
sbb
aad
and
shlb
test
int3
cmpsl
test
jmp
xchg
scas
stos
and
sub
add
cmp
lret
adc
fs
adc
mov
ss
xor
jo
mov
dec
idiv
frstpm(287
sbb
cmp
int
insb
flds
add
loopne
mov
inc
and
idivl
mov
call
out
mov
jp
sub
cmp
clc
pop
mov
out
pop
mov
jo
mov
andl
fisttpll
mov
mov
xorl
sub
push
inc
mov
incl
adc
les
mov
les
jmp
imul
jle
inc
test
loopne
mov
jmp
mov
cwtl
mov
push
ljmp
jbe
adc
cmp
mov
xchg
je
loope
ljmp
rcll
xchg
stos
iret
ljmp
std
cmpsb
js
pop
push
cmpsl
inc
aas
ret
out
or
mov
ljmp
dec
pop
push
pop
loope
xor
fistpll
jle
push
adc
out
flds
push
cmpsl
dec
nop/reserved
aad
call
loopne
sahf
in
inc
shrb
jae
in
mov
test
xor
repnz
jb
sub
inc
mov
jo
jg
mov
cmp
mov
js
call
dec
jo
cmpsl
or
jae
xlat
fs
xchg
push
cli
mov
jb
cmp
icebp
pop
pushl
mov
mov
mov
mov
add
push
xchg
imul
dec
sub
or
fistpll
inc
push
popa
push
insb
cmovs
outsl
shlb
iret
test
shrl
loopne
mov
or
addb
mov
xchg
lock
sub
hlt
cmp
lds
jmp
pop
sub
xchg
repnz
push
test
push
popl
popa
jne
cmp
mov
jb
cmc
lret
inc
imul
add
jecxz
popa
sub
or
out
push
shlb
jne
lret
sbb
mov
or
in
sbbl
pop
jns
xchg
adc
mov
lock
adc
mov
mov
pop
enter
ljmp
jne
xor
jbe
xor
std
jb
mov
pusha
or
stos
mov
jp
aad
sub
cmp
cmp
mov
mov
ljmp
pushf
xchg
mov
add
into
push
jg
in
sub
xchg
add
xor
xor
add
jae
cmp
adc
dec
cmc
pop
jge
inc
pop
sbb
bnd
mov
out
and
cmp
mov
jp
cmp
call
lret
inc
sub
or
cmp
cs
adc
jae
cmp
mov
sarb
sub
fcompl
pop
cld
jle
scas
sub
repnz
jp
fwait
not
addr16
xchg
and
ds
xlat
adc
arpl
xchg
sbb
xlat
sbb
das
or
shll
mov
out
and
int
cli
mov
mov
maskmovq
testb
ds
cwtl
xchg
or
in
cmp
inc
popl
mov
jge
leave
fiadds
lods
in
jo
dec
add
pop
aaa
add
mov
mov
aam
dec
fwait
aas
daa
xchg
push
movsl
jnp
cli
je
loop
push
lret
jecxz
repnz
gs
pop
mov
bound
addr16
push
cmp
movsl
jl
jl
dec
sub
lret
imul
mov
testl
add
fcom
jge
mov
pop
int
xchg
in
test
mov
in
mov
xrelease
out
cld
jle
mov
and
mov
xchg
jno
add
cmp
stc
punpckhdq
dec
dec
mov
out
add
shll
cmp
filds
bswap
bsf
movsl
and
jecxz
add
rorb
flds
mov
inc
mov
popa
hlt
cmpsl
or
out
or
xor
xor
clc
cmp
cmp
enter
push
sub
add
inc
sahf
inc
adc
popa
mov
or
pop
aam
arpl
sbb
sub
mov
mov
add
mov
popf
js
mov
sti
mov
pusha
and
sub
xchg
ja
out
sub
enter
notl
cld
mov
pop
or
add
pop
jbe
or
fldl
jecxz
xor
dec
or
xchg
jnp
mov
in
mov
push
pushf
sbb
mov
xor
jno
mov
cmp
enter
es
cli
add
sub
xchg
push
push
jbe
jbe
jbe
inc
cmp
cli
pop
mov
mov
xchg
test
pop
fmuls
sahf
add
adc
jnp
add
dec
mov
mov
outsl
pop
mov
aas
mov
jle
xor
add
xchg
jle
xor
add
xchg
lds
add
cmp
hlt
loop
xchg
jle
lret
cld
add
mov
pop
sub
jae
rorl
lock
out
out
lret
mov
xor
enter
adc
testb
and
push
std
js
js
mov
fstps
mov
cmp
int
jmp
add
jp
mov
sbb
sbb
cmp
test
stc
mov
sub
ds
clc
cmpsl
lahf
sub
mov
dec
cmpb
jle
and
rclb
int3
and
arpl
insb
xchg
sbb
push
jge
icebp
clc
pop
push
sti
out
out
xchg
xor
xor
stc
jl
jmp
das
test
pop
enter
es
rorb
stos
push
add
iret
out
cmp
inc
ret
js
fbstp
xchg
inc
popa
cmp
pushf
mov
adc
mov
lea
scas
int
and
adc
or
fstpl
lods
sarb
decl
and
adc
mov
pop
xchg
push
fldcw
sub
jge
mov
mov
and
sahf
enter
arpl
leave
sbb
mov
aaa
lds
stos
lret
xchg
push
rorb
clc
repnz
scas
cmc
add
decl
sbb
movsl
inc
clc
sub
adc
je
decb
testl
xor
fisubrs
dec
xor
incb
daa
imul
hlt
jnp
adc
fdivrl
sbbl
lret
adc
jle
aas
les
popf
cld
cmp
sbb
arpl
gs
enter
or
sub
inc
jge
mov
inc
mov
jp
xchg
fst
test
dec
jle
add
or
popf
push
mov
rclb
stos
out
repnz
and
cmp
clc
dec
data16
push
push
out
pop
stos
mov
sub
ds
fisubrs
repnz
in
jle
dec
mov
ret
mov
adc
lret
or
and
cmp
fisubl
stos
mov
xchg
and
push
jb
jp
call
aas
xor
mov
dec
lcall
outsl
jb
lcall
fsubr
xor
pop
ss
push
xchg
and
sti
or
popf
or
fisttpl
cmc
stc
lahf
pop
sub
lock
ret
mov
fcomps
mov
add
inc
dec
inc
push
cmp
lea
mov
movsb
mov
iret
pop
lods
mov
push
inc
and
daa
leave
out
xor
aaa
and
ret
mov
mov
lea
orb
rorl
jl
loope
adc
imul
loopne
jbe
repnz
add
in
lret
imul
sti
aas
imul
pop
push
movsb
imul
ja
stos
loope
mov
loopne
ficompl
push
mov
jno
xor
and
js
cmp
je
mov
scas
push
sbb
aas
cmpsl
xor
adc
call
xor
sbb
iret
cmp
test
cmpsb
xchg
cld
push
mov
fistpl
pusha
or
ret
mov
mov
or
aaa
xchg
lea
mov
push
sub
sub
jns
mov
addl
mov
movsbl
push
jns
cmp
aaa
sub
das
cli
ja
loopne
stos
pushf
jmp
mov
cs
xchg
mov
outsl
jo
test
cmp
and
push
mov
gs
push
cmp
adc
aad
jle
in
jle
mov
loope
inc
out
xchg
test
sbb
jp
decb
cmp
mov
ret
xor
adc
or
push
scas
pop
pop
ret
and
mov
push
jns
mov
lret
enter
imul
ljmp
fs
repz
test
movhlps
mov
jae
sbb
inc
jg,pn
imul
in
divl
jl
test
hlt
and
cmpsl
in
loop
jae
jle
aam
add
push
or
js
enter
pop
shlb
bound
pop
orb
jmp
push
mov
ds
cwtl
mov
sub
push
in
je
mov
add
lock
jns
xor
ret
jno
mov
cmpsb
leave
mov
addr16
cmpsb
pop
cmp
push
xor
and
push
sti
and
cmp
sub
mov
inc
stos
fidivrl
sub
iret
or
addr16
jbe
push
pop
add
inc
or
mov
and
fwait
stos
fwait
jle
gs
ss
or
pop
lret
in
fucomip
mov
sahf
test
add
xor
xor
je
std
cmp
int3
cwtd
cmpb
and
inc
inc
mov
in
pop
xor
pusha
push
add
pop
andb
inc
fbstp
ret
push
mov
push
dec
sub
jo
push
leave
testl
inc
sbbb
imul
mov
jge
jno,pt
jecxz
mov
or
stos
jle
insb
or
xchg
jl
cmp
push
add
mov
jnp
push
mov
adc
fcoml
mov
mov
leave
cmp
inc
mov
jbe
popf
or
push
outsl
add
adc
mov
cmp
mov
popfw
pop
sub
jbe
jg
cwtl
out
mov
movl
jb
cmp
leave
leave
movsb
hlt
out
ret
mov
mov
dec
mov
xlat
push
or
inc
sbb
jbe
cmp
sbb
aas
jmp
and
roll
xchg
fs
sbb
cmc
cmp
mov
jp
inc
mov
dec
push
or
lock
adc
xchg
push
mov
outsl
fiadds
or
addr16
inc
push
push
mov
test
mov
push
iret
jnp
cs
cmp
mov
rcll
div
cmp
adc
lcall
or
fistps
mov
dec
or
inc
les
jae
stc
cs
or
outsb
ja
mov
mov
cmp
popf
cmc
inc
arpl
loope
cltd
test
fdivrl
and
sub
int3
loop
outsb
push
adc
ss
add
les
xorb
js
ret
and
outsl
iret
mov
cmc
and
push
ret
xor
test
adc
aad
daa
and
inc
push
cs
push
inc
mov
mov
insb
push
mov
sbb
mov
xor
inc
testb
shr
push
xor
rorb
jbe
sub
rorl
xor
ds
iret
shr
nop
aam
bnd
cmpsb
pop
faddp
adc
outsb
xchg
adc
xchg
push
aad
mov
cld
into
pop
mov
mov
fldl
sar
dec
orb
or
in
es
mov
pushl
ss
popa
cmp
xorb
sub
mov
sti
in
mov
xor
rcrb
fdivs
cmp
shlb
idivb
sbbl
sar
test
pusha
dec
add
aaa
cmp
jl
out
pop
sahf
jmp
fstl
xor
sub
pop
dec
clc
push
sub
insb
jnp
lock
mov
scas
add
dec
inc
outsb
cmp
dec
adc
stc
mov
cs
fsubs
cmp
loop
sub
jne
dec
sti
decb
add
pop
jmp
ret
push
mov
sub
sahf
movsb
ds
dec
ffreep
mov
cmc
xchg
stc
imul
dec
in
add
jns
xchg
popf
fwait
mov
xchg
cli
bound
scas
mov
dec
push
andb
push
pop
sti
xor
push
insb
or
out
arpl
test
push
ret
les
in
out
sti
adc
fdecstp
into
std
mov
inc
loopne
cmp
or
and
xchg
lret
mov
imul
or
push
insb
rol
mov
lret
cs
mov
arpl
lods
mov
ds
in
jae
sub
in
push
push
jl
ljmp
fmull
xchg
insl
repnz
or
icebp
ja
cmpsl
adc
xchg
scas
mov
jle
aad
out
xor
fsubs
outsb
or
stos
push
push
cmp
aad
ret
xor
add
ds
mov
lret
mov
pushf
xor
pop
sbb
int3
adc
leave
and
cmpsl
clc
cmpsl
inc
dec
pushf
test
les
rclb
mov
sbb
xchg
pop
pop
fwait
push
addr16
cmpsb
and
inc
sub
int3
shl
test
mov
in
or
mov
les
jbe
mov
fs
pop
test
mov
sbb
test
xor
ljmp
fistps
je
leave
lds
push
jl
rorb
or
add
xor
mov
xchg
aad
adc
dec
add
inc
push
inc
repnz
insl
inc
aam
ficompl
inc
xor
pop
mov
xchg
mov
xchg
jne
mov
rolb
les
andb
cmpsb
push
sbb
lahf
fstpl
mov
push
mov
rcll
add
dec
mov
jecxz
aad
sub
jecxz
and
aas
ss
cmp
mov
pop
cmpsl
sbb
inc
and
es
cmp
inc
fadd
lret
outsb
scas
insb
mov
subl
mov
cmpl
stos
xor
mov
test
fsts
mov
fisubl
dec
sub
imul
lods
outsb
cmpb
xchg
sub
loop
add
leave
and
pop
std
dec
fcmovbe
rcll
dec
pusha
jle
xchg
roll
jp
xor
xor
pop
jle
xorb
insb
push
outsb
fiaddl
pop
addr16
adc
add
lahf
push
push
inc
rolb
mov
das
test
lgs
aas
inc
xchg
adc
mov
inc
pushf
rcll
mov
data16
inc
rorl
rcll
daa
or
xlat
pop
scas
cmc
scas
test
jo
add
scas
mov
mov
popa
xchg
pop
mov
xchg
js
sub
or
pop
cli
xchg
addr16
mov
test
ja
adc
lods
ret
in
xor
xor
sub
fnop
sbb
jge
jne
mov
mov
lds
nop
scas
sbb
inc
ds
mov
jo
dec
inc
enter
inc
jb
call
xchg
sarl
jle
jmp
loope
mov
jge
pop
lock
jge
outsl
inc
xchg
pop
pop
clc
enter
mov
pop
aam
mov
cmc
je
fcmovnu
lcall
sub
pop
jge
arpl
inc
add
popa
dec
mov
mov
hlt
enter
mov
push
mov
jp
in
mov
icebp
xor
cmp
fs
cmpsl
jae
mov
add
aad
nop
movsl
imul
in
int
inc
and
int
aam
mov
mov
cmp
arpl
dec
shlb
xorb
ss
xlat
outsb
inc
aad
divl
andb
fildl
sub
in
mov
xchg
lock
and
int
pop
mov
jae
dec
mov
xor
mov
xchg
inc
jmp
jo
js
sbb
stc
movsl
xchg
ljmp
inc
mov
jo
dec
jg
sahf
pop
dec
call
hlt
test
pop
sub
lcall
inc
push
jns
add
and
rorb
adc
cmp
xor
jmp
jae
adc
and
ljmp
iret
pop
push
adc
sti
sbb
fidivl
and
mov
push
mov
jecxz
icebp
aam
adc
imul
jne
ret
xchg
ret
and
cwtl
mov
in
aas
sub
mov
or
je
int3
dec
daa
sti
xchg
ret
sub
or
lods
jo
xchg
movsl
dec
sahf
dec
sbb
sub
add
push
arpl
jno
cmp
rcll
outsl
stc
dec
push
pop
and
lret
mulb
js
rclb
fs
lcall
aad
shll
jle
aam
pop
inc
xchg
loope
inc
jle
aad
mul
mov
std
push
pop
xchg
pop
insl
int
js
into
add
inc
xchg
and
xlat
mov
xor
aas
sahf
call
xchg
inc
and
mov
fnstcw
xchg
call
out
fdivrp
xchg
aaa
loop
mov
xchg
pop
pop
cmpsl
jecxz
in
and
les
js
stc
jnp
sbb
out
fidivl
in
xchg
jb
arpl
lods
out
rorb
sub
int
test
mov
push
xor
xchg
xor
xchg
cld
ret
mov
rclb
std
mov
das
insl
cmp
loopne
pushf
inc
mov
pop
in
xchg
sarl
or
test
shrl
mov
xor
in
out
add
repz
add
jbe
repz
adc
movsl
adc
pop
mov
or
outsl
mov
fisttps
dec
pop
dec
imul
cwtl
inc
mov
ljmp
mov
fadd
and
gs
xchg
jnp
and
stc
jbe
rclb
pop
pop
adc
in
jae
xor
cmc
addr16
push
out
cmpsl
adc
or
jmp
push
mov
adc
jle
dec
dec
mov
daa
xor
jg
dec
adc
or
pop
std
cmpsb
sarb
mov
dec
bswap
and
lds
mov
out
cmp
sahf
in
test
popf
lea
insb
leave
cmp
xchg
sub
xchg
dec
aaa
jg
xchg
dec
lods
pop
stc
xor
enter
imulb
adc
xor
cmpsl
adc
jno
cmpsl
cwtl
add
lret
lea
push
xchg
xlat
inc
or
push
pop
in
iret
and
inc
int
pop
pop
idivl
cmp
or
xchg
push
dec
insl
mov
daa
fbld
repnz
mov
das
push
dec
add
jmp
inc
stos
lock
cmp
dec
fnstenv
xchg
mov
lods
mov
pop
inc
jge
popa
ja
gs
jg
stos
out
aas
jns
and
sub
sbb
test
dec
cmpsl
or
inc
dec
aaa
es
mov
mov
adc
mov
gs
daa
loop
pusha
in
in
mov
push
outsb
rcrl
ds
hlt
pop
mov
pusha
repz
lret
sbb
shrl
bound
lea
sbb
xchg
loopne
out
shl
lret
xlat
int3
lret
fdivs
inc
enter
xlat
pop
push
mov
inc
ret
mov
stc
rcll
ds
lret
pcmpeqw
cmc
lds
das
jae
jno
push
ljmp
inc
std
xchg
adc
lods
les
cmc
push
pop
xlat
popa
stos
jb
push
iret
test
shl
mov
inc
loopne
xor
ljmp
fmulp
cltd
pop
or
xchg
aam
lret
add
sti
hlt
sub
fs
lods
int3
cmp
dec
add
adc
fsts
mov
out
cmp
fildll
movsl
cmp
adc
nop
dec
out
nop
cs
mov
pop
xchg
enter
dec
push
mov
lds
aam
std
jmp
dec
mov
sub
xor
addr16
mov
xchg
xadd
xchg
jle
mov
inc
in
sbb
dec
xchg
or
fisttps
fistps
lahf
mov
clc
fucom
and
cmpsb
add
mov
dec
rcll
ds
test
pop
outsb
cwtl
testb
and
gs
mov
mov
dec
push
ret
fprem1
cmp
or
mov
pop
push
repz
xchg
fdivl
or
mov
fiadds
mov
mov
popl
adc
shl
jb
xchg
or
add
rclb
lods
add
lods
dec
cmp
stc
imulb
test
ss
mov
out
lods
movl
push
mov
dec
xchg
push
ja
push
fiadds
daa
inc
pop
out
jne
dec
data16
sub
jg
mov
dec
imul
in
movsb
imul
stos
and
rcl
push
mov
or
push
mov
call
fcomp
xor
lods
into
mov
push
xor
cmp
xchg
bound
dec
in
push
scas
jo
push
cmpsb
jcxz
lret
sbb
ret
pop
ss
sbb
test
test
lds
inc
pop
xchg
and
pop
push
js
adc
push
fsubrl
and
jp
fisttps
push
sbb
jae
shll
push
cmp
xor
xchg
xor
popa
sub
xor
xor
mov
adc
inc
sbb
lods
shrl
xchg
mov
sub
inc
sbb
xchg
sbb
xor
insb
aaa
outsl
sbb
cmp
fs
es
aam
pop
scas
push
mov
add
jp
pop
mov
mov
add
pop
mov
fimull
in
sahf
nop
je
loopne
or
inc
inc
xchg
jecxz
xor
push
sti
adc
sti
fbld
lcall
lret
or
loop
loopne
cmc
enter
cmp
rorl
lret
push
push
xchg
push
cmpsb
aaa
ja
mov
loopne
setno
sbb
clc
or
jb
add
stos
sub
aaa
xor
pop
mov
shl
movl
dec
sti
sub
out
xor
push
cld
aaa
add
adc
add
in
pushf
xchg
aaa
jne
bound
dec
out
insl
fs
mov
mov
lcall
sub
aam
aam
nop
or
dec
lock
lods
jp
cmp
aam
cmp
mov
cwtl
add
repz
adc
leave
pop
shl
mov
subb
lock
and
mov
out
xchg
out
fnsave
leave
cmp
iret
fs
addr16
in
mov
or
mov
and
shrl
movsb
fidivrs
int
cmpsb
jg
cmovge
and
pop
xchg
rolb
pop
out
inc
test
mov
addr16
shll
cmp
repnz
iret
or
mov
push
shlb
adc
mov
dec
int3
or
or
push
fdivrl
popa
pop
dec
sub
push
loope
mov
dec
sub
pop
dec
xchg
mov
mov
xor
lds
cmp
addr16
adc
mov
jo
inc
scas
stos
pop
in
xorl
lock
lods
sub
xchg
xor
cmp
clc
outsb
add
or
imul
int
or
add
and
jl
xor
hlt
pop
xchg
in
loopne
push
dec
jg
lods
sarl
out
xor
sbb
cmp
mov
lcall
pop
testb
inc
in
in
lods
loop
fsts
cli
push
psrld
mov
insb
push
pop
das
xchg
sub
and
lret
xor
cli
imul
iret
mov
adc
inc
data16
jo
jmp
out
nop
mov
sub
fs
xlat
sarl
jb
mov
rolb
cltd
and
aam
or
pop
lods
fistl
mov
loop
xchg
aas
pop
movaps
in
mov
fs
shr
out
notb
dec
mov
add
mov
mov
jmp
jb
adc
pusha
int3
inc
hlt
pop
je
adc
push
and
sub
pushf
mov
and
mov
stos
fildll
cs
xchg
xor
add
pop
inc
xchg
scas
jbe
test
movsb
push
pusha
int
inc
add
ja
mov
push
aad
add
pop
mov
jnp
mov
push
stc
movsb
xchg
cmp
pop
cmp
nop
cmp
push
addr16
pop
inc
daa
not
ja
int3
dec
xor
add
mov
pop
dec
mov
fstpl
movsb
mov
rcrb
stos
int
xchg
insl
ljmp
imul
call
sub
and
xchg
fidivs
aas
jo
dec
repz
push
call
sub
push
mov
sub
cwtl
push
in
scas
sub
int3
inc
mov
out
adcl
xchg
dec
imul
or
cmp
enter
daa
jno
enter
mov
dec
mov
push
push
or
imul
es
push
subl
sahf
pop
les
test
mov
jo
mov
fiadds
and
std
in
fwait
outsl
aam
popa
cmp
mov
jno
adc
xchg
frstor
pop
icebp
repz
mov
inc
in
sbb
out
ljmp
inc
xchg
repnz
jns
ret
addr16
fadds
inc
fsubrs
mov
mov
ja
andb
jg
rcrb
mov
popa
in
lret
jno
push
mov
push
jg
adc
adc
push
or
jb
adc
mov
add
lods
ljmp
shll
or
mov
add
mov
in
std
pop
or
jmp
dec
lods
or
cmp
fcmovnu
xchg
rorl
add
cs
or
stos
stos
and
cmp
jmp
dec
pop
push
add
mov
adc
jo
mov
mov
lods
jo
push
inc
push
cmp
push
adc
imul
xchg
test
ljmp
shll
aam
rcrb
das
mov
inc
pop
test
dec
mov
stos
sbb
adc
dec
push
ljmp
lea
add
or
pop
push
add
push
clc
xlat
and
inc
and
imul
movsb
aas
adc
mov
sahf
push
mov
cmp
and
xor
sub
lahf
sub
loope
xor
ljmp
pop
xlat
mov
sbb
mov
add
ds
imul
rorl
sub
pop
scas
loope
ficomps
and
fs
or
adc
cmp
cmc
push
in
fists
inc
jb
cmp
xchg
cmpsl
xor
repz
cmp
lods
int
pop
sbbl
je
lods
fdivl
or
nop
fidivrl
scas
inc
call
dec
daa
insl
or
jo
popf
jne
xchg
adcl
dec
int3
scas
or
add
mov
insb
push
in
adc
add
xchg
fidivrs
pop
mov
pop
cmpsb
ss
jg
popf
mov
dec
int3
std
ljmp
test
fiadds
popa
aaa
sbb
jns
iret
mov
cmp
popa
dec
inc
mov
jecxz
sbb
rclb
dec
mov
mov
cmpsl
dec
imul
sbb
iret
sub
arpl
fisubl
mov
mov
mov
push
lret
push
sahf
dec
add
mov
or
dec
negb
aas
adc
mov
pop
pushf
mov
push
dec
movsl
fwait
aam
xor
fmuls
push
int
je
arpl
insb
inc
repz
scas
or
cmp
in
push
sub
xchg
std
jbe
lock
imul
push
cs
mov
jno
stc
div
cmp
push
xor
inc
lret
push
cli
rorl
bound
mov
sbb
call
ror
mov
popa
jae
mov
out
out
dec
mov
push
hlt
les
jb
lahf
fistl
add
out
insb
pusha
dec
jmp
loopne
push
pop
inc
pop
dec
jmp
pushf
stos
data16
push
cmc
dec
and
sub
push
and
cmp
rorl
inc
push
jg
cmp
jne
imul
or
mov
stos
sbb
mov
inc
out
int3
clc
cmp
iret
cs
sarl
out
repz
sbb
lret
mov
or
pop
shrb
xchg
adc
lds
jns
popa
stos
int3
or
or
adc
cmc
cmpsl
xor
add
out
or
jge
sbb
xor
mov
xlat
cmp
sub
mov
jne
insl
inc
repz
fwait
sti
xchg
xchg
call
jl
data16
and
stos
call
add
pop
cld
xor
nop
sbb
imul
fistl
sahf
push
out
icebp
jbe
test
cs
adc
xchg
mov
jmp
hlt
cmp
pop
sar
int
cmp
std
pop
mov
inc
lea
lret
xchg
sbb
dec
es
sub
mov
fcomip
xor
mov
add
push
pop
mov
shl
inc
cmp
fldenv
push
lret
lock
sbb
add
sahf
push
rorl
mov
pop
jbe
jo
aaa
cmpsb
sti
clc
loopne
jbe
mov
cmp
lods
popl
mov
mov
stos
xlat
sbb
inc
mov
dec
and
cmpsl
inc
test
cmp
jge
or
scas
xlat
xchg
imul
adc
loopne
mov
mov
jno
add
arpl
out
test
push
cmp
pop
pop
pop
enter
or
dec
jae
es
leave
xor
jg
jp
adc
push
or
insl
imul
jmp
mov
cmc
mov
ficoms
icebp
sbbl
leave
es
mov
lea
xchg
dec
cmpsb
inc
inc
add
andl
xchg
mov
push
js
mulb
std
mov
xchg
neg
or
and
addb
add
mov
ds
ja
jb
out
insb
ret
lahf
orl
sbb
cmp
xchg
sahf
pushf
push
sub
push
adc
and
out
ftst
fs
cmp
dec
lret
inc
lock
test
or
pop
ret
and
test
push
sub
data16
and
cmp
dec
or
mov
sbb
popf
stc
pusha
sarl
inc
hlt
mov
sbb
pushf
add
sti
stos
gs
jns
push
sarl
jnp
shrl
jg
rcr
xchg
mov
gs
hlt
test
sbb
and
push
mov
ja
cld
mov
xchg
jg
pushf
adcb
jmp
pop
mov
fmul
lahf
enter
in
insb
jne
lret
jb
repz
dec
pop
pusha
inc
jl
adc
sub
xchg
inc
test
jmp
jp
mov
sbbb
jbe
add
cwtd
dec
insl
adc
add
cltd
sbb
mov
test
lods
add
aam
mov
testb
push
adc
lcall
arpl
cli
push
and
gs
leave
add
nop
icebp
and
mov
mov
lea
inc
dec
testl
dec
push
negb
loopne
popf
aam
push
in
mov
imul
adc
push
dec
add
loop
xchg
mov
mov
cmpsb
inc
cmpsb
adc
pushf
add
in
pop
aas
test
test
fildll
push
cmc
push
insl
repz
mov
sbb
pop
pop
sub
xor
movsb
jne,pt
iret
xchg
xchg
push
mov
rcl
mov
inc
pusha
add
ret
sub
sub
push
dec
js
xchg
aad
enter
je
rorl
adc
in
fstpl
cmpsb
rorl
mov
lods
fs
sbb
test
jle
add
push
ss
jp
leave
es
enter
pop
mov
pusha
test
add
enter
int3
lahf
cli
aas
jne
xchg
mov
jp
xor
outsb
es
fiaddl
mov
out
inc
jb
and
push
repz
sub
scas
jb
jg
ljmp
jl
cmp
int3
mov
push
imul
sbb
mov
addr16
mov
pop
jbe
dec
pushf
fidivl
js
pushf
outsb
out
mov
push
ret
imul
loop,pt
jno
scas
add
popa
enter
call
mov
adc
mov
xchg
cmpsl
insl
mov
xor
stos
pop
aam
out
data16
xor
iret
xor
add
mov
dec
loope
sahf
inc
pop
add
push
movsb
push
sub
aad
inc
xor
or
out
retw
adc
cmpb
out
cmp
xor
mov
in
and
cmp
ja
pop
lds
mov
and
add
testb
or
aas
adc
adc
pop
cmp
sbb
repz
sbb
sub
or
sub
leave
ljmp
aaa
scas
dec
aam
ret
mov
lds
aam
xor
pusha
or
stc
iret
pop
cmp
pop
mulb
cmpsb
mov
enter
pushf
and
sbb
jne
jl
jp
testb
fistpll
push
cmc
arpl
mov
sub
push
fidivs
cli
movsl
scas
insl
in
adc
aas
hlt
inc
mov
les
lea
or
sub
adc
aas
pushw
dec
jb
jg
dec
xor
pop
push
add
inc
sub
data16
fildll
mov
xchg
loope
add
dec
repnz
rolb
inc
and
jecxz
cwtl
xchg
scas
inc
push
lahf
xor
pop
jo
xchg
imul
loopne
into
xchg
nop
sbb
je
arpl
xchg
insl
push
insb
mov
add
pop
push
jg
test
in
mov
mov
xchg
cmp
xchg
scas
fistl
shr
loope
shlb
mov
js
repnz
in
int3
loope
jecxz
and
out
inc
dec
sub
testl
out
pushf
insl
leave
inc
test
cli
lret
xor
loopne
gs
xchg
mov
xchg
jg
and
cmp
insb
inc
jge
sbb
ret
mov
mov
pop
adc
ret
out
inc
or
test
mov
arpl
cld
js
adc
or
push
out
or
jne
arpl
mov
mov
push
jle
jb
lock
aam
push
test
daa
inc
and
out
jo
pop
mov
mov
scas
xor
cmp
roll
mull
js
xor
pop
stos
and
ja
rcrb
adc
jl
imul
rorb
adc
filds
pop
pop
into
in
fisubrl
gs
push
pop
jmp
test
cmp
fdivr
sbb
faddp
mull
push
cld
cmpsb
mov
or
or
or
or
daa
pop
hlt
sub
push
xchg
xchg
outsb
ret
mov
lahf
or
test
jne
leave
loopne
push
sbb
loop
or
das
cld
sub
fimuls
pop
cwtl
arpl
push
jp
cli
imul
mov
xchg
clc
ret
and
jmp
push
push
xor
push
aas
jae
lock
ja
pop
push
adc
popf
mov
in
and
stos
mov
jg
in
pop
mov
movsl
adc
test
xchg
lods
shl
xor
push
mov
push
cmc
push
stos
inc
jno
push
fldl
sbb
out
sbb
jecxz
lret
ss
xor
cmpl
subl
lahf
mov
shl
mov
shlb
aas
cmc
mov
mov
add
movsb
pusha
lret
cmp
mov
pop
mov
pusha
in
iret
mov
and
inc
bound
cmp
jmp
or
fwait
xchg
inc
lea
outsb
movsl
push
mov
clc
mov
in
jmp
jge
adc
inc
dec
and
enter
push
out
sbb
fistps
nop
fs
dec
and
andb
mov
addr16
sti
cmp
imul
cli
aaa
std
test
mov
mov
cmpl
xchg
iret
insl
push
lcall
pushf
jmp
fnstenv
loop
or
jge
sbb
stos
xlat
data16
adc
fdiv
sbb
test
sbb
gs
stos
adc
roll
add
mov
push
enter
xchg
add
jo
insl
and
mov
iret
sarb
test
cmpsl
mov
push
xchg
ficomps
das
sbb
insb
cmp
sub
lcall
xor
outsl
jbe
in
hlt
mov
fadd
iret
push
jmp
pusha
int
mov
sbb
imul
popa
ret
sub
mov
xor
mov
enter
aaa
cmpsl
dec
jae
sub
or
inc
pushf
pop
pop
mov
inc
cmp
sub
inc
xchg
xchg
test
lret
cwtl
push
mov
mov
daa
cld
daa
inc
insl
and
adc
gs
mov
pop
dec
push
call
push
jns
fxch
push
repnz
int3
mov
in
shlb
lods
push
popf
repz
add
cmp
and
jns
idivl
or
insl
mov
inc
xchg
imul
sahf
stc
fldt
mov
pop
adc
es
roll
lea
arpl
mov
pop
in
cmp
cmp
mov
or
fcomp
stc
movsb
adc
mov
pop
inc
js
aas
scas
mov
inc
jg
xor
lods
push
jge
sbb
leave
ret
je
cmp
jnp
int3
imul
sub
inc
idiv
in
jle
sbb
mov
stos
imul
ret
cmp
jmp
std
mov
sub
loop
pop
xchg
mov
iret
loopne
fisubrs
add
mov
es
shl
mov
inc
mov
jecxz
sub
jo
arpl
out
insb
stos
fs
ds
inc
iret
xchg
repz
inc
repnz
mov
and
pop
pusha
je
mov
loope
push
sub
outsb
test
mov
das
fstpl
loopne
pusha
xor
or
and
pop
loopne
cmp
ret
cmpsl
lahf
cltd
xor
js
dec
shlb
cmp
mov
pop
push
nop
jge
mov
adc
lods
gs
aas
push
xlat
add
dec
cli
fwait
adc
cmp
std
das
adc
std
pusha
mov
mov
ror
pop
aaa
push
jl
mov
lret
mov
popf
xor
icebp
xchg
ret
lods
and
fcoms
sbb
jmp
rorl
daa
add
fstps
mov
call
xchg
into
iret
lods
imul
fildll
in
mov
dec
or
mov
paddb
pushf
sub
movsb
and
cmp
mov
icebp
inc
ljmp
or
cltd
in
bound
out
pushf
hlt
test
out
push
cmpsb
push
out
arpl
jnp
mov
mov
and
movsl
rcll
in
xlat
les
and
test
je
cmc
or
fcoml
xchg
pop
enter
loope,pt
push
or
xchg
dec
push
ret
pop
fabs
shlb
cmpl
clc
js
jl
cmpsb
sub
jle
mov
iret
add
dec
push
pushl
orb
jp
cltd
inc
push
mov
xchg
jae
test
js
je
mov
int
addr16
rclb
sub
sti
imul
enter
mov
xchg
or
mov
adc
leave
xlat
inc
inc
insl
ret
sahf
sub
shll
iret
inc
mov
dec
fs
adc
jecxz
dec
out
mov
xchg
or
sbb
cmp
dec
xchg
fmull
ds
sub
in
xchg
test
int
sbb
aad
adc
push
test
push
adc
jl
inc
nop
pop
gs
cld
sbb
stos
add
mov
mov
jmp
or
shrb
mov
outsb
ds
xchg
mov
or
enter
cmpps
and
mov
adc
mov
frstor
cmp
roll
xorl
aas
movsb
stc
mov
cmp
pop
ja
ds
test
or
pop
les
outsl
enter
popa
jp
mov
adc
jno
push
inc
jbe
cmc
lds
jle
xchg
mov
repnz
cld
out
ds
inc
push
pushf
out
es
jbe
imul
fld
mov
xchg
cld
ja
cltd
pop
stc
cltd
movsb
sub
jo
mov
xlat
xchg
mov
or
or
inc
push
mov
pusha
mov
mov
xor
push
dec
xchg
fidivs
push
in
aad
aaa
mov
add
movsl
cli
xchg
addr16
mov
sbb
cmc
jns
xor
stc
and
mov
mov
and
push
push
arpl
xchg
push
dec
and
or
push
push
test
mov
in
inc
and
es
negl
test
dec
xchg
push
and
fisubl
es
adc
mov
pop
pop
and
inc
insb
pop
pop
xlat
js
or
stos
cmp
orb
mov
jecxz
mov
push
xor
mov
add
and
jecxz
shrl
loopne
mov
cs
int3
xchg
ret
fwait
shlb
loope
dec
mov
mov
cmp
dec
adc
data16
mov
cmp
popf
popa
fsubrs
loope
ljmp
mov
mov
lds
stc
or
pop
sub
mov
sbb
xchg
inc
mov
pop
loop
stc
sub
les
stos
jne
jecxz
fmul
xchg
mov
in
jl
sti
mov
outsl
lahf
shrl
jnp
cltd
adc
cmpb
sti
stos
es
outsl
lret
push
in
push
cmp
cltd
enter
cltd
jle
pushf
scas
add
mov
aad
push
add
sahf
or
bound
push
movsl
lret
test
scas
lock
adcl
cld
inc
xchg
outsb
jle
mov
ret
sbb
jns
pusha
sbb
push
sahf
mov
mov
mov
pushf
push
xor
imul
adc
jmp
and
cli
cltd
mov
mov
mov
orl
lret
flds
nop
jp
sbb
psubd
add
add
iret
inc
jo
inc
orb
mov
leave
or
les
inc
dec
mov
out
test
jmp
movsl
pop
push
int3
lods
or
push
jg
add
push
test
push
hlt
adc
push
mov
lahf
sbb
inc
push
or
mov
dec
sbb
add
jle
mov
jle
or
sub
insl
xor
mov
xchg
xchg
xchg
jnp
push
pop
add
sti
mov
lcall
mov
or
dec
xchg
push
les
scas
mov
icebp
insb
pop
cltd
stos
xchg
push
sahf
sub
jl
sub
je
mov
jge
flds
mov
out
push
imulb
loope
out
push
sahf
jno
ret
leave
aas
inc
repnz
loop
fyl2x
outsb
mov
mov
stos
jl
and
xchg
push
loop
shrb
loopne
push
or
out
nop
jns
push
fcoms
scas
shrl
xor
outsb
adc
loope
mov
jle
lret
mov
pop
es
outsb
inc
pushf
fmuls
xchg
mov
out
clc
cmp
and
mov
push
fidivs
dec
dec
inc
je
inc
push
icebp
js
jmp
ds
mov
dec
mov
add
xor
cmp
xor
xchg
popf
pusha
mov
mov
in
loope
call
out
lods
push
dec
xor
pop
push
pop
push
les
adcl
js
out
lahf
xchg
mov
fsts
clc
mov
mov
sbb
aaa
jl
mov
jnp
mov
or
fwait
and
push
xchg
aas
notb
xchg
popf
cmpsl
lods
test
data16
cmpsb
es
fcom
pop
sar
pop
lea
adc
add
pop
not
iret
sbb
add
inc
xor
push
inc
dec
sub
in
sub
bound
push
pop
sbb
fwait
stc
fmul
mov
jnp
aad
fisttpll
repz
sbb
outsl
cmp
xchg
sbb
daa
jns
ds
fwait
stc
inc
jnp
rcr
xchg
sbb
adc
jmp
mov
dec
xor
or
xor
icebp
mov
xor
inc
imul
sbb
into
adcb
daa
fldl
mov
jecxz
mov
sbb
in
ret
insb
popa
imulb
mov
daa
jmp
or
or
fsubrl
mov
cmp
push
or
lods
and
js
push
jns
test
jle
lcall
add
popa
aam
cmp
pop
mov
outsb
xchg
jo
cwtl
lods
and
sub
cmp
pop
mov
push
mov
pminub
mov
pop
js
fisubl
inc
popa
das
jns
aaa
outsl
stos
cs
roll
and
fidivrs
sbb
enter
cs
add
pop
sar
sbb
es
rcrb
lahf
and
cmp
sahf
sbbb
mov
xchg
add
pop
adc
int
inc
lahf
dec
mov
mov
push
adc
fstl
mov
leave
adc
cmpsl
cmp
adc
jno
jns
movsb
mov
push
enter
push
mov
mov
pop
div
lret
dec
push
iret
ret
or
loop
adc
cmp
cli
test
pop
mov
jge
push
aam
push
adc
jns
scas
movb
xchg
push
imul
movsb
movsb
lods
push
test
pusha
rorl
mov
bound
dec
pop
shl
rcrb
fists
cmp
popa
rclb
xor
pop
in
xchg
push
xchg
mov
jle
lds
push
or
sub
and
mov
mov
push
adc
dec
loop
cmp
cmp
sbb
ds
sbb
and
and
das
jno
dec
jecxz
stos
andb
dec
jle
das
xor
adc
push
pop
cmp
lret
pop
stos
or
and
push
cwtl
pop
stc
mov
jmp
cmpsl
jo
pop
and
xor
pusha
cmp
fcmovbe
test
repz
jl
and
data16
cmp
mov
sbb
cmpb
sub
xchg
inc
popa
fisubl
and
std
xchg
lods
or
test
xchg
jbe
movd
or
lret
in
scas
repnz
push
jb
pop
xor
cwtl
or
decb
mov
out
push
inc
pop
addb
daa
add
push
lods
in
sbb
loop
dec
into
outsl
mov
jb
mov
add
inc
aam
pusha
je
dec
pop
in
lds
add
xchg
int
inc
out
cmp
adc
sahf
loopne
mov
pop
add
je
out
push
adc
and
push
or
in
lods
and
mov
and
add
in
push
push
xchg
sbb
stos
stc
leave
lcall
dec
outsb
pop
cmp
mov
repnz
push
or
jecxz
jge
mov
cmp
and
mov
jo
add
hlt
and
or
leave
push
cltd
and
mov
dec
inc
push
mov
adcb
ss
cwtl
test
push
inc
fdivs
adc
xlat
lock
push
inc
adc
fsqrt
cmc
bound
add
loop
sub
adcl
jecxz
pop
mov
jge
xchg
adc
addr16
mov
repz
sahf
or
mov
fadd
daa
pusha
insb
fistpll
int3
jecxz
fwait
pop
out
xor
repz
lret
push
sub
mov
popa
or
add
xchg
and
sbb
repnz
push
dec
mov
jge
imul
idivl
into
jmp
cmp
or
dec
cmc
pop
cld
fs
stos
pop
lret
fiadds
stos
lods
les
fs
call
sub
mov
sub
mov
mov
adc
sahf
xchg
cmp
inc
xlat
sbb
pop
imull
aas
aas
sti
shll
lahf
loop
mov
push
xor
js
push
pop
test
jnp
addb
aad
xchg
lods
sub
cmp
ja
mov
push
cld
adc
stc
lret
mov
mov
enter
mov
add
xor
je
lods
xchg
cmp
lea
adc
jbe
adc
sub
lcall
loop
addr16
cmc
mov
mov
repz
sub
xchg
push
dec
jge
mov
mov
pop
lock
clc
pop
cld
movsb
inc
push
cmpsl
lock
stc
cmpsb
pop
js
xor
out
dec
rcll
lcall
ja
dec
add
dec
jns
shl
adc
mov
jne
das
fidivrs
fisttpll
push
gs
or
inc
icebp
arpl
xorb
dec
xor
lods
pop
push
loop
add
cmc
pop
xor
and
sbb
ffreep
dec
popa
rep
out
mov
sub
outsb
dec
mov
xchg
sti
sar
std
movsl
xchg
iret
xchg
popa
test
out
int3
and
or
jae
lods
jb
pop
dec
pop
aam
scas
int
xchg
fsubs
ja
cmp
push
out
mov
mov
mov
add
out
push
xor
std
rcrl
ss
push
jae
mov
jnp
aaa
adc
adcl
adc
mov
movsl
xor
add
repz
addr16
push
fcompl
dec
xchg
mov
jp
mov
xchg
loope
mov
fildl
insb
pushf
pop
sbb
push
addl
test
cmp
mov
adc
xchg
xor
int
push
xor
mov
pop
sahf
push
jbe
fnstcw
insb
fbld
inc
repz
jmp
add
daa
in
adc
inc
jle
lret
call
add
sub
push
pop
sbb
sbb
repnz
sub
bound
and
jb
iret
and
xchg
mov
cmp
clc
push
sub
jns
sbb
inc
pop
into
insb
xchg
jl
mov
push
push
lret
ret
shrl
jb
hlt
add
cltd
lods
add
sub
inc
push
adc
lea
movsl
push
test
and
pusha
imul
sbb
xor
inc
mov
inc
int
mov
call
push
inc
cmp
insl
inc
iret
scas
out
mov
scas
sbb
pop
mov
sbb
mov
mov
mov
outsb
inc
xor
dec
jae
in
jle
js
std
push
jno
cmp
xchg
fdivrs
outsb
inc
imul
loop
push
ss
inc
jno
cmpsl
loopne
jp
pop
sub
outsb
xor
jecxz
movsl
xchg
lret
lods
scas
or
out
dec
or
inc
fwait
orl
in
mov
ja
aam
cmpb
pop
push
adc
pop
inc
jbe
sahf
sahf
pusha
jmp
cwtl
mov
jbe
cld
add
push
xor
jbe
repnz
faddp
jl,pt
orl
icebp
sbb
and
ss
cmp
jl
ds
mov
aas
push
inc
inc
pop
mov
lea
fbstp
mov
and
mov
fs
jns
xchg
push
fwait
push
mov
imul
mov
adc
mov
outsb
sub
mov
fs
ja
adc
dec
in
jp
loope
cmpsl
les
loop
out
or
movsl
xlat
popf
xchg
roll
dec
mov
nop
lods
ja
iret
lcall
push
mov
mov
inc
xor
sahf
push
fisttpl
mov
dec
mov
adc
insl
pop
sub
cmp
push
fmull
cli
sbb
jmp
pop
xchg
iret
rcll
jl
lods
syscall
scas
out
jl
sahf
test
jns
xchg
mov
xchg
mov
sbb
ficompl
adc
add
pop
loope
mov
test
lods
mov
imul
adc
fs
mov
outsb
mov
adc
popf
fnstsw
jns
insb
jl
jae
or
loop
jecxz
jno
aas
cmp
gs
pop
dec
adc
and
test
push
frstor
pushf
pop
and
mov
cli
mov
mov
aaa
xchg
daa
sub
xchg
les
sub
jp
mov
inc
imul
js
adc
or
mov
negl
adc
stos
fucomi
lret
cmpb
adcb
xchg
hlt
add
cmp
mov
lods
push
push
sub
mov
pushf
xchg
cmpl
dec
dec
xchg
test
movups
xchg
les
iret
leave
mov
jge
jge
add
fildll
pop
dec
sub
pop
jbe
inc
push
cs
mov
rolb
fists
dec
das
mov
mov
dec
rolb
add
jl
stos
movsb
pop
cmpsb
lock
adc
movsb
call
stos
add
xchg
xor
adc
sub
xchg
adc
jecxz
push
xchg
pop
test
fcoml
push
fidivrl
dec
sbb
jae
jge
push
mov
shlb
push
pusha
mov
cmp
mov
mov
imul
dec
sub
push
loopne
jnp
in
in
xlat
insl
lock
rol
pop
pop
pop
cmc
jge
pop
xor
nop
mov
and
xlat
js
movsl
push
add
cmc
nop
xchg
sub
sub
cwtl
cltd
stos
loop
repz
insl
ljmp
loope
mov
lret
es
lcall
lret
fsubr
out
adc
loopne
mov
aad
aad
aaa
dec
xor
mov
push
pop
shl
jbe
shlb
jae
mov
add
movsb
xor
sbb
leave
ret
push
push
repnz
ret
jae
pop
jno
in
sbb
popa
shlb
xchg
pop
cmpsl
add
lds
insb
sarb
push
stos
lea
dec
adc
orl
xchg
and
inc
imul
jg
pushf
fsubrs
pop
test
pushf
rcrl
iret
sbb
in
fdivl
addb
jae
or
sub
jns
xchg
into
mov
jne
std
movsl
cmpsl
in
sub
mov
stc
movsl
scas
in
mov
xor
pop
and
cwtl
add
and
adc
out
push
jl
sbb
out
mov
xchg
dec
stc
flds
inc
xchg
cwtl
push
mov
enter
mov
in
pop
ljmp
xlat
adc
cld
adcb
mov
mov
push
xor
test
mov
frstor
xchg
loop
xchg
push
mov
shrl
test
scas
cmp
and
mov
lock
inc
mov
push
shll
lcall
shl
or
xor
stos
push
and
test
ds
ds
inc
push
jl
jge
std
mov
jg
stos
mov
sub
mov
mov
inc
filds
testl
pop
clts
ret
mov
mov
shll
fsubrs
add
imul
jnp
iret
pusha
out
sbb
jge
bound
pop
mov
mov
adc
gs
xor
scas
pop
inc
or
jg
add
ret
fcoms
jno,pt
push
xchg
mov
xchg
jle
fmuls
rcl
push
clc
popf
jge
mov
add
cmp
gs
and
pop
nop
jmp
or
test
out
shr
sbb
xchg
xchg
mov
or
dec
or
fistpl
mov
inc
add
sbb
sub
mov
xchg
adc
loope
xor
jmp
cwtl
xchg
lods
ljmp
cmp
pusha
test
wbinvd
sarb
mov
inc
inc
ret
cmp
or
nop
pop
hlt
test
or
pop
dec
out
int3
aam
testl
mov
out
loope
out
pop
or
add
clc
xor
mov
fcomi
jae
loope
sbb
cmp
fbstp
mov
dec
xchg
or
jnp
pop
pusha
mov
mov
cmpsb
nop
fadds
xchg
push
das
outsb
pusha
sbb
mov
ds
negl
cwtl
push
repz
push
xchg
lds
jmp
lods
shrb
fldl
repnz
stos
sbb
xchg
mov
dec
aad
mov
push
stos
mov
lea
lcall
popa
pop
push
cmpsb
call
or
bnd
aas
movsb
sbb
loop
xor
lret
aaa
dec
jmp
jno
mov
mov
mov
push
loope
adc
aas
pop
cmp
sbb
push
mov
adc
xchg
int3
cmc
push
adc
sahf
mov
and
adc
mov
pusha
xor
fbstp
lock
mov
repz
idivl
pop
adc
and
xchg
leave
hlt
iret
push
xor
inc
leave
xlat
idiv
mov
cld
adc
in
in
xorl
cmpsl
dec
lret
xchg
mov
aam
mov
jae
outsl
jmp
ror
mov
dec
cmp
mov
into
fwait
sbb
insb
sub
pop
outsl
inc
loope
add
push
fwait
ds
jl
pop
sbb
or
or
xchg
pop
enter
sbb
ljmp
dec
imul
fiadds
mov
jg
xchg
enter
and
and
lcall
in
sub
cmp
repz
out
add
push
sub
pop
mov
out
jne
ss
dec
aas
stos
dec
cmc
push
mov
lds
cmp
test
addr16
cmpsl
pop
mov
sahf
push
movsb
call
ffree
add
pop
cmpl
add
pop
rcl
outsb
push
daa
fs
add
insb
loop
or
xor
sbb
add
jecxz
lret
gs
sbb
sub
cmp
ret
rol
lods
movd
mov
cli
fdivrs
es
adc
push
pop
pop
repz
sarb
add
push
jae
test
lret
xchg
or
xor
orb
call
aam
cmpsb
xchg
cmp
insl
and
jmp
enter
leave
pop
push
repz
adc
lahf
loopne
andb
pop
mov
mov
mov
inc
cs
inc
lods
and
inc
je
add
ja
fnstenv
adc
fcmovnb
and
sbb
jmp
enter
sub
out
mov
xchg
test
outsb
xchg
dec
rorl
cmp
dec
push
ljmp
xchg
incl
out
jle
mov
xchg
cltd
cmpsb
sbb
jg
es
inc
xchg
xchg
das
push
pop
sbb
dec
test
sub
arpl
mov
xchg
mov
cmp
and
mov
sti
xchg
out
repz
or
push
adc
and
ds
inc
xchg
test
fstl
addb
sub
aas
lods
mov
mov
lahf
rolb
ret
cmp
rcll
xlat
fwait
pusha
push
lret
mov
into
cmp
shrb
jle
popf
cmc
xchg
arpl
and
gs
mov
cmp
mov
jo
lock
cmpsb
push
gs
push
add
int3
dec
aad
lods
adc
pop
jb
xchg
lcall
or
and
fisttps
inc
sbb
filds
pop
lods
mov
xor
push
sbb
or
call
xchg
jl
add
fisubrl
ret
leave
lahf
sbb
or
dec
cmp
lods
xchg
mov
mov
aam
cmpsl
push
scas
shlb
xchg
fimuls
clc
pop
add
push
and
jnp
icebp
mov
in
inc
fildll
in
mov
imul
sub
jge
subb
test
loop
aam
pop
sbb
mov
push
pusha
pop
cmp
lods
in
out
dec
add
arpl
jle
jmp
cmp
outsb
pop
jno
push
idivl
mov
mov
push
cmp
push
ret
mov
cld
aam
lahf
js
xor
dec
mov
push
or
dec
and
lahf
lods
int3
dec
cwtl
testb
push
loope
enter
jg
clc
xlat
inc
test
mov
cmp
and
xchg
cmp
cmp
les
loop
jns
cmc
sbb
push
xchg
jns
adc
mov
fstpt
orl
out
jnp
adc
push
and
lahf
push
sbb
pusha
bound
xchg
dec
xchg
pop
repnz
inc
cmp
fwait
sub
mov
lods
ret
sub
xor
imul
into
add
mov
jnp
xchg
scas
out
jns
out
jle
pop
jns
frstor
in
sbb
scas
outsl
adc
lea
xlat
adc
dec
mov
or
pop
push
cld
jb
push
fidivrl
mov
jge
xlat
and
pop
fisubl
mov
icebp
popw
rcl
cld
push
push
das
inc
mov
push
sub
cmp
mov
packssdw
push
cwtl
cmp
lods
xor
xlat
inc
mov
mov
test
push
outsb
popf
mov
sub
movsl
push
mov
aam
stos
nop
xchg
leave
and
sbb
sub
inc
scas
aam
je
adc
mov
out
jns
rcrb
cmpsb
lock
into
pop
xchg
dec
xor
dec
je
add
mov
test
lahf
xor
insb
es
mov
sub
cmp
cmpsb
imul
cmc
fdivr
rcrl
xor
lcall
xor
int3
xlat
rclb
int
sub
lcall
mov
adc
add
dec
mov
rcrl
int3
ja
imul
mov
dec
xchg
push
sub
jg
lds
mov
sub
push
insb
push
push
xor
add
inc
bound
je
cli
inc
mov
stc
lahf
cmp
call
sub
out
xor
loopne
mov
xchg
ljmp
cmpsb
sub
mov
fwait
xor
aas
sti
jmp
or
aad
xchg
push
repz
sbb
pop
lret
xor
ljmp
mov
loop
add
mov
mov
out
es
ss
cmp
xchg
int
pop
in
cmp
add
ds
into
xlat
jae
imul
dec
cmp
insb
cmpb
rcrb
adc
arpl
rcrb
stos
aas
dec
dec
popf
push
adc
fadd
in
fcmovne
outsb
push
lret
or
scas
stc
es
push
shll
inc
mov
pop
and
mov
sbb
mov
ss
mov
mov
mov
pop
mov
repnz
jne
mov
sub
iret
jne
sbb
jb
jns
sbb
mov
popf
push
pop
addr16
stc
mov
sbb
out
pop
and
xor
loopne
mov
mov
and
call
ja
pop
jle
popf
cmpsl
mov
or
mov
jp
les
mov
bound
dec
mov
xor
dec
stos
mov
sbb
insb
lock
mov
int3
shlb
sbb
mov
insb
subl
shr
xorl
or
sub
xchg
jle
fmuls
adc
gs
into
inc
xor
ja
sbb
dec
movsb
lahf
fs
fistpll
daa
dec
inc
insb
push
push
aas
lret
push
xchg
fdivrs
xor
mov
test
jg
mov
lret
xlat
aam
fwait
dec
outsl
jge
adc
dec
aad
xchg
and
cltd
inc
fsts
andb
pushf
inc
cmpsb
xor
push
jne
fistpl
add
cli
xchg
fists
mov
sahf
mov
cmp
je
mov
lods
aad
jge
dec
sub
sbb
and
push
mov
inc
divb
xchg
ljmp
or
xor
mov
adc
cmc
jecxz
jno
lret
adc
inc
jmp
out
fnsave
jmp
xchg
xorl
push
jbe
js
ret
cmp
inc
mov
mov
jns
enter
pushf
adc
add
push
aas
cld
lahf
cmp
cwtl
xchg
fdivl
inc
jno
js
mov
jnp
push
mov
jp
out
jo
push
adc
lea
jl
xchg
clc
shlb
jl
arpl
movsb
xchg
pop
and
xor
xor
scas
cmovns
cmp
pop
mov
cwtl
mov
fistpll
mov
or
je
dec
rcrl
and
add
enter
cmp
psubq
push
outsl
dec
add
fsubrp
cmp
add
dec
imul
test
lods
les
popf
mov
sub
jns
nop
in
insl
and
xorl
mov
bound
pusha
popa
xor
ss
pusha
sbb
cmpsl
pop
cmc
stos
in
fwait
mov
mov
adc
dec
ret
out
daa
or
push
xchg
mov
mov
nop
arpl
jle,pn
cmpsb
push
dec
push
pop
cld
ret
or
mov
cmpsb
mov
mov
and
xor
xchg
out
mov
hlt
cmpxchg
scas
jmp
lods
cmp
jno
subb
gs
push
scas
ss
cltd
in
sub
dec
mov
into
xor
sub
lods
jle
jle
xor
mov
mov
aam
push
insb
ret
jne
cmp
scas
xor
mov
ficompl
or
into
push
xchg
push
dec
shrl
adc
stos
mov
push
popa
mov
lret
shlb
sbb
push
and
insb
adcl
repnz
sbb
xchg
cld
test
pop
and
cmpsb
movsb
mov
mov
or
mov
xchg
out
cwtl
pop
mov
push
push
sub
aam
ljmp
pop
mov
data16
fadds
int
sbb
gs
mov
dec
js
and
gs
test
mov
mov
inc
dec
push
jmp
imul
lods
dec
jg
xchg
out
icebp
push
scas
lods
jnp
pop
jnp
xchg
stc
cmp
mov
out
xor
push
enter
ljmp
mov
mov
pop
scas
ss
fldcw
fs
add
push
loope
int
mov
js
xor
push
inc
sub
push
dec
xchg
jbe
and
push
push
inc
gs
addl
pop
ret
and
ret
insl
je
sti
shlb
in
mov
inc
and
mov
jge
jo
pushf
int3
dec
loop
cmc
pusha
xchg
leave
mov
fs
and
and
sbb
jecxz
lods
push
mov
or
aas
lea
pop
ret
aas
stos
out
dec
mov
jno
dec
mov
sbb
in
fnstsw
cmp
mov
stos
and
mov
popf
push
mov
lea
xchg
lds
hlt
repnz
pop
mov
jg
insl
cld
sbb
pop
mov
popa
xchg
ss
inc
sbbb
adc
adcb
hlt
xor
lock
imul
ds
mov
sbb
data16
int
cmp
ds
loop
inc
adc
sub
icebp
jbe
lahf
push
iret
and
into
ljmp
sub
stos
test
push
jl
xor
aam
pop
pop
aas
jp
clc
push
ljmp
test
mov
repz
jne
or
repz
sub
inc
cltd
dec
notl
mov
jbe
js
pop
mov
int3
jnp
mov
jp
les
jl
xchg
mov
mov
jo
sub
nop
aad
insl
sub
dec
ret
cld
daa
mov
aas
pop
fldenv
push
or
ljmp
inc
and
daa
daa
js
xor
push
jne
aam
test
dec
int
filds
test
les
sub
sahf
inc
xor
aam
mov
sbb
inc
push
sub
jno
jle
ret
add
icebp
nop
ds
and
and
xchg
xchg
fadd
xor
pop
gs
cmp
sub
mov
xor
lods
sbb
rorb
addr16
loope
ds
icebp
cmp
xor
jbe
das
js
jp
hlt
loope
fwait
into
mov
scas
jg
push
or
jle
dec
lahf
mov
rcrl
push
jne
in
xchg
jl
jge
xor
xor
jg
push
xor
inc
dec
xchg
in
add
pusha
jns
pusha
push
pop
mov
xlat
cltd
pusha
fdivrs
jmp
dec
daa
sahf
xchg
lods
shlb
ja
and
mov
add
shl
insl
popa
into
das
xchg
je
add
outsl
adc
mov
jmp
xor
icebp
aaa
dec
aad
xchg
fdivrs
cmp
in
outsl
fnsave
jp
or
test
jo
les
xchg
cld
xchg
repnz
lock
push
sbbl
out
sub
push
xchg
fisubs
mov
pusha
nop
jbe
cmp
xchg
pop
fs
in
mov
sbb
jae
push
xlat
stos
mov
dec
push
das
shlb
push
pop
sub
mov
cmc
mov
jmp
or
addr16
iret
push
cmpsl
mov
icebp
jmp
mov
int3
push
inc
leave
popa
and
xchg
adc
sub
btr
test
sahf
mov
lds
jb
cmp
sbb
pop
fwait
mov
loope
shlb
movsb
xchg
call
mov
xchg
ret
adc
inc
mov
push
sbb
in
dec
jo
jp
jae
and
hlt
ja
test
dec
sbb
ds
push
mov
push
lcall
aam
imul
xor
sub
aam
push
stos
pop
xor
cmc
and
push
cli
cmp
cmp
add
insb
mov
push
xor
inc
inc
dec
mov
test
push
mov
testb
xor
sub
dec
jno
fs
lret
stc
mov
inc
in
insl
sub
ret
and
orb
stc
scas
and
cwtl
mov
addl
loop
outsl
js
hlt
mov
push
mov
sti
inc
js
dec
jmp
inc
mov
out
push
jge
fisttpll
movsb
fs
fmuls
jae
mov
movb
mov
push
das
mov
pop
insb
rcrl
lret
adc
loop
mov
in
mov
leave
push
ret
in
arpl
jns
mov
push
aas
inc
push
cltd
movsb
push
add
jno
and
add
ficoml
jp
cmp
sbb
ret
mov
mov
jmp
in
sti
xchg
aad
test
cmc
out
xlat
sbbl
xchg
mov
imul
and
pusha
test
imul
mov
shll
and
fwait
mov
nop
jecxz
or
inc
dec
sbb
scas
sbb
fstpt
scas
test
mov
xor
jne
in
mov
adc
dec
push
popa
mov
outsl
arpl
test
jno
lea
stc
sbb
popa
das
adc
and
and
ret
xchg
stos
notb
sbb
aam
mov
push
das
jmp
into
aas
dec
mull
or
js
lods
hlt
mov
cmc
sub
std
mov
insl
mov
pop
icebp
pusha
insb
shl
fisubl
dec
aaa
cld
negb
sbb
xchg
inc
pusha
inc
iret
mov
push
push
adc
subb
mov
lret
fwait
mov
jno
sbb
pop
fldl
cmp
hlt
xor
push
repz
inc
cmp
pop
adc
inc
flds
mov
jne
pop
or
outsl
nop
sbb
xchg
pushf
pop
mov
sbb
mov
mov
and
cld
mov
test
icebp
fs
push
dec
cmc
dec
ds
add
or
mov
rorl
push
push
and
xchg
mov
fnsave
cmpl
pop
dec
fisttps
lret
mov
sbb
mov
les
cli
mov
popf
and
mov
cltd
mov
fisttpll
in
jle
cmc
jmp
lds
cmp
call
mov
sbb
fiadds
outsb
repz
xchg
mov
jle
cwtl
dec
push
xchg
jno
hlt
out
loope
pop
jp
fldt
jb
push
push
fidivrs
jmp
fmulp
push
outsb
in
into
xchg
jo
xor
dec
adc
inc
in
mov
cmp
es
inc
adc
aaa
jmp
fnstsw
fists
or
and
mov
in
adc
sbb
ljmp
ljmp
ss
adc
mov
popa
xchg
xor
xchg
push
pop
mov
rolb
and
jecxz
sub
cwtl
shlb
and
jmp
mov
jl
dec
addb
enter
sbb
and
mov
lea
push
je
push
add
mov
testb
movsb
sub
push
imull
gs
inc
dec
cmp
jb
sbb
addr16
andl
dec
or
out
jecxz
xor
fwait
mov
mov
inc
pop
inc
sbb
inc
rcrb
test
into
jb
xor
and
mov
adc
mov
ja
gs
push
hlt
mov
movl
test
xor
and
pop
pop
pop
fwait
lcall
aad
xor
lea
mov
cmp
mov
leave
xor
insl
inc
orb
push
stos
test
js
sbb
jae,pt
jge
mov
sub
movsb
in
mov
xlat
loope
insl
dec
xchg
xor
ljmp
adc
mov
shll
push
mov
lcall
pop
or
andb
test
lock
dec
pop
das
ja
xlat
testb
sub
js
mov
das
and
jg
inc
scas
jmp
fcoms
cmp
dec
rcll
data16
call
bound
repnz
and
xor
jno
push
pop
lahf
jns
out
xchg
add
into
inc
clc
xchg
cmp
scas
out
fdivl
lea
pop
push
sbb
xchg
outsl
pop
arpl
add
xorb
xor
dec
int3
movsl
and
and
sbb
cmp
jns
fs
shlb
popa
or
jo
icebp
xor
das
data16
jne
or
bound
enter
cli
jo
push
ds
rol
push
or
jne
mov
or
dec
fnstsw
repz
jno
dec
rcll
xor
dec
pusha
sbb
mov
cmp
sub
cwtl
jmp
sbb
pop
sub
stc
andl
push
sbb
and
stos
pop
mov
cmpsb
dec
mov
pop
xlat
mov
popf
mov
test
lock
lods
push
fbld
push
pop
fs
sub
sahf
outsb
insb
out
lds
and
out
in
push
xor
jl
iret
pop
hlt
dec
out
xor
lea
inc
int3
mov
xchg
loopne
repz
mov
xor
xor
ss
out
push
mov
jo
xlat
popf
scas
xchg
lahf
fldl
inc
adc
or
sbbb
fidivs
in
sub
dec
cmpsb
xchg
adc
sub
mov
xor
xor
sbb
xchg
inc
mov
sub
test
into
mov
int
lret
jecxz
mov
adc
loopne
push
jge
mov
jno
mov
cmp
cmp
fwait
mov
call
xor
sub
or
mov
mov
fcoml
jne
sbb
mov
inc
je
das
imul
rcrl
addb
imul
and
inc
lods
dec
enter
push
add
xchg
push
aam
jg
or
adc
or
add
pushf
jl
adc
adc
xor
lahf
incb
pop
notl
and
add
mov
aas
jb
lods
movb
push
out
hlt
mov
fldenv
fldcw
in
cs
jp
pushf
pop
sbb
or
lfs
push
test
dec
ret
sahf
shrl
xlat
data16
inc
or
mov
mov
xchg
xchg
cmp
xchg
lods
shlb
xchg
adc
push
push
xchg
stos
in
je
and
adc
adc
sub
mov
jne
pop
or
test
loopne
mov
mov
push
pop
push
jnp
inc
sbb
stos
cmp
outsb
sbb
add
pop
inc
xchg
hlt
push
add
fdivrp
push
cmp
test
and
jo
mov
pop
negl
xchg
jge
ja
in
sahf
and
popa
push
ljmp
loop
xor
cmp
sub
or
mov
mov
lret
lret
xor
lret
cmc
mov
sbb
pop
daa
push
add
ficomps
mov
out
xor
jbe
inc
mov
sti
sti
add
sbb
jns
cli
add
and
dec
add
or
jns
outsb
mov
test
mov
test
jecxz
cmp
daa
enter
or
jle
int3
fwait
pop
data16
mov
in
inc
xor
push
movsl
sub
cmc
xlat
xchg
je,pt
scas
fadds
inc
xor
inc
into
pop
inc
in
mov
mov
fisubs
pop
gs
je
ss
cld
and
lock
add
scas
scas
clc
cmc
dec
xchg
xchg
popa
decb
and
repnz
mov
lea
call
add
enter
subl
or
out
xchg
insb
and
vmovntps
xchg
push
out
stos
lock
lret
inc
mov
jecxz
xlat
push
or
inc
cmp
mov
push
mov
test
dec
inc
jno
ljmp
push
mov
jbe
ja
xor
cli
xchg
push
data16
cmp
dec
mov
and
sbb
mov
pop
sub
cmpsb
aam
lret
mov
call
sub
cltd
and
sub
inc
and
mov
adc
mov
inc
and
arpl
movsl
pop
push
cmpsb
and
xorb
rcr
cmp
push
dec
push
ret
imul
and
insb
xor
mov
nop
mov
cmp
nop
idiv
pusha
xor
xor
iret
mov
jecxz
add
jge
adc
push
scas
fdivrs
sti
jecxz
lods
add
jecxz
daa
dec
leave
idivb
out
hlt
clc
fbld
sbb
loopne
sbb
leave
mov
sbb
add
insl
int
push
cmpsb
nop
leave
sub
rclb
cmc
xchg
dec
test
cs
push
inc
jo
xchg
xchg
stos
or
jle
pop
xor
mov
stc
subb
ffreep
sub
int
cmp
xchg
int3
mov
cmp
adc
lods
jne
and
cs
adcl
fadds
adc
arpl
push
cmpsl
scas
fwait
icebp
mov
orl
mov
data16
push
pop
lods
mov
stc
xchg
popa
sbb
mov
mov
inc
pop
stc
repnz
cmp
mov
cmp
divl
xor
jae
or
jbe
adcb
lret
fidivs
xor
push
inc
mov
in
xor
iret
movsb
divb
loop
repnz
je
push
xchg
push
pop
cmp
js
into
stos
popf
movsb
and
push
mov
or
ror
adc
dec
fbld
mov
or
inc
lds
loop
scas
push
mov
adc
out
mov
jle
shlb
out
lods
dec
fs
sbb
loope
fnop
in
xchg
lds
jne
mov
mov
out
xor
jo
popa
sub
arpl
mov
aaa
rol
jg
sbb
cs
mov
movsb
in
mov
sbb
push
icebp
jbe
in
or
mov
arpl
sub
cs
and
outsb
out
adc
std
mov
jo
dec
and
rorb
lret
loop
mov
mov
pop
or
cwtl
push
das
xor
rcrl
push
fldenv
push
stc
das
test
pop
rcl
gs
lahf
mov
cmp
or
and
shrb
cmpsl
daa
test
pop
cmp
int3
jmp
or
adc
ret
out
dec
and
shr
repz
jnp
inc
enter
scas
mov
ret
adc
mov
je
rorl
mov
mov
mov
and
shll
test
push
dec
lock
xlat
sbb
pop
nop
and
mov
les
pop
fldl
push
push
in
les
pop
stos
fisubl
cwtl
shrb
inc
arpl
insb
mov
daa
adc
int
hlt
ret
sahf
pop
inc
pop
arpl
mov
dec
mov
push
in
ret
pop
inc
push
divb
xchg
lods
rcl
mov
cmp
mov
popa
lods
jbe
adc
mov
imul
xchg
jbe
xor
pushf
dec
mov
xor
sbb
test
inc
dec
or
jno
inc
lea
or
pop
mov
dec
cmp
shll
movsl
loop
xlat
insl
inc
jns
jg
push
adc
or
xchg
adcl
adc
in
mov
sub
ljmp
cmp
sub
mov
ss
dec
mov
test
shrb
mov
pop
push
pop
fadds
push
dec
cmp
dec
sub
adc
in
pop
sbb
xor
mul
hlt
mov
ficoml
enter
mov
fnsave
or
fimull
xchg
inc
shll
xchg
faddl
jne
inc
jnp
out
jmp
push
mov
add
dec
mov
rcrl
sub
shrl
jecxz
lcall
cmpsl
xchg
pop
mov
mov
dec
mov
sub
adc
loope
leave
mov
jb
cmp
ret
mov
pop
pushf
ja
inc
push
shl
or
scas
scas
out
jbe
sbb
shrb
and
push
push
stos
mov
sub
mov
add
pop
call
lahf
jmp
fwait
pop
in
xor
mov
pop
pop
mov
mov
pusha
jb
jl
mov
jge
daa
lret
inc
sbb
push
sahf
xor
fldenv
or
sbb
push
mov
adc
test
mov
in
and
pop
cmovbe
imul
orb
dec
je
cmc
mov
es
jmp
addr16
jle
cmp
xlat
dec
aam
mov
push
repz
mov
xchg
test
cmp
decl
outsl
daa
les
mov
repz
push
sbb
mov
jo
adc
out
lahf
imul
data16
push
fs
push
aaa
or
mov
push
sub
sub
iret
xor
mov
adc
int
cmp
dec
bound
out
lods
mov
dec
mov
aad
lods
arpl
push
pop
lods
sub
loope
orb
popf
xor
sub
mov
insl
rorb
idivl
nop
xrelease
repz
popf
jne
lcall
lcall
xchg
je
in
adc
mov
adc
popa
popf
add
mov
mov
jecxz
sbb
cmpb
sbb
repnz
mov
push
das
add
out
popf
mov
pop
jne
jg
es
jb
xchg
mov
xchg
pop
rol
and
mov
mov
and
mov
int
ja
fnstenv
scas
sub
mov
lahf
xor
adc
ret
sub
pop
movsl
pop
xchg
in
xor
in
loop
fidivrs
fidivrs
mov
pop
add
jo
aas
add
out
xchg
lods
push
or
es
daa
repnz
repnz
push
mov
mov
jno
lret
sahf
xlat
sbb
ficomps
test
lret
scas
inc
xchg
xchg
and
mov
stc
lret
enter
mov
bound
mov
jbe
add
scas
nop
lret
cmp
inc
pushf
adc
sbb
inc
and
cmp
xchg
mull
mov
test
pop
sub
inc
fsubr
loop
add
push
mov
lcall
or
mov
pop
push
push
adc
pop
jns
out
mov
and
mov
cli
mov
mov
push
aaa
cmpsb
fwait
xchg
outsl
fsubr
mov
in
insl
ljmp
rcr
lock
lret
sbb
xlat
sbb
mov
aad
and
out
mov
mov
or
jno
inc
xlat
pop
pop
insb
add
mov
mov
imul
rcrl
dec
mov
cmp
inc
push
cmp
lods
mov
roll
cld
jb
mov
push
xor
jle
adc
or
pop
xor
or
xor
rclb
rolb
lock
nop
add
test
mov
mov
call
dec
insb
imul
dec
shl
scas
stos
push
dec
sbb
lcall
data16
arpl
sbb
daa
or
push
ret
pop
pop
jb
lds
fcomps
rcrb
xor
imul
sub
push
jae
cmp
and
or
pop
jecxz
fcmove
fsubs
sti
adc
cmpsl
cs
lea
ja
cli
mov
int3
or
or
jae
jmp
ror
leave
sub
cmp
loope
dec
ret
out
add
mov
mov
add
fnstsw
or
imul
jne
movsb
xchg
lds
in
dec
pop
jne
ljmp
xchg
push
outsl
add
mov
and
cmp
sub
or
add
push
cltd
or
jecxz
cmp
jmp
test
inc
sbb
bound
lods
or
fidivl
scas
loope
push
push
mov
mov
decb
mov
pushf
mov
cmp
mov
push
test
cs
mov
push
loopne
pop
adc
stc
mov
pop
imul
inc
mov
push
add
arpl
xor
sbb
into
push
inc
xor
aam
js
jae
and
sub
leave
and
add
push
cmc
push
jb
push
loopne
push
and
and
mov
loop
add
in
cmp
mov
mov
fistpll
push
lcall
fistpl
cmc
dec
divl
pusha
cld
insb
cmp
xchg
test
jo
sahf
aam
test
ja
call
mov
inc
out
xor
pop
push
jns
loopne
adc
in
push
or
dec
ficomps
mov
cmpsb
das
icebp
mov
sbb
and
dec
xchg
xchg
or
pop
sahf
or
cwtl
adc
cmp
ds
mov
loope
mov
jl
mov
in
dec
scas
ss
daa
ljmp
add
sub
imul
cmp
pop
jmp
mov
push
lcall
inc
jb
inc
sbb
in
test
test
xor
mulb
lahf
test
add
sbb
xchg
lock
fs
dec
je
les
mov
fildll
in
jnp
push
test
or
in
jecxz
inc
mov
imul
cwtl
mov
ds
sbb
or
xor
jecxz
jge
dec
fldl2t
test
test
mov
jge
les
stc
inc
les
orl
rcr
or
add
inc
mov
pop
fs
lsl
push
and
mov
leave
shl
add
mov
test
and
xchg
lret
and
pop
or
mov
cli
add
and
pop
xorl
inc
sbb
mov
jbe
adc
xor
jb
cmp
pop
loop
shl
or
push
jns
in
cs
insb
lock
into
push
cmp
imul
jnp
and
add
aas
out
adc
inc
ds
mov
mov
outsb
in
lahf
fsub
fwait
es
scas
out
cmp
and
inc
fwait
xchg
inc
mov
add
ja
mov
call
xor
aas
pop
dec
or
jecxz
cmp
pop
jle
popf
xlat
popf
adc
cmc
mov
add
push
fstps
jecxz
or
mov
test
sysret
sbb
clc
mov
mov
aad
pushf
cmpsl
cltd
push
and
inc
xchg
das
arpl
andb
mov
mov
jae
inc
xchg
fwait
jmp
cmp
aaa
jns,pt
dec
mov
push
sbb
and
jbe
xchg
jecxz
push
add
out
xchg
push
dec
pop
push
in
xor
das
ljmp
jnp
pop
movsb
jl
inc
lcall
jne
movsl
pop
cld
mov
jle
or
je
stos
subb
jnp
adc
cmp
scas
dec
icebp
scas
pop
sarl
adc
or
leave
lret
xchg
clc
cwtl
pop
xchg
xlat
lea
frstor
jmp
inc
add
call
jmp
popa
jae
xchg
inc
imul
mov
sbb
in
stc
xchg
xchg
mov
adc
mov
out
mov
cltd
push
sbb
add
int
ss
mov
inc
inc
lods
xchg
adc
inc
out
cwtl
xor
sbb
sahf
sti
jle
sub
les
pop
popa
jp
xor
lret
cmp
mov
pop
mov
mov
add
push
fldt
hlt
add
repnz
fiaddl
pop
inc
cltd
fmull
lds
enter
jmp
repz
xchg
stc
mov
pop
sub
dec
lcall
jle
cmpsb
mov
inc
xchg
es
xchg
add
cld
pop
lcall
inc
sti
or
movlps
mov
sub
dec
dec
das
mov
or
mov
sub
sbb
or
repz
cmp
daa
sub
gs
mov
push
aam
leave
lea
mov
mov
inc
jmp
jne
data16
cld
jl,pn
push
lods
aas
loop
mov
mov
jle
sbbb
lcall
jl
and
lret
loop
push
jecxz
mov
ret
adc
push
nop
mov
ficoml
in
stc
loop
pusha
jbe
sub
adc
xchg
mov
call
lea
mov
xor
xor
aaa
add
cmp
dec
scas
ljmp
xchg
cmp
xor
xlat
dec
fnstsw
mov
rcr
jae
cmp
out
out
or
not
test
or
push
mov
scas
xlat
shl
cmp
sub
fstpl
ds
xchg
pop
into
xor
lcall
out
push
cmc
adcb
sbb
or
fcom
jo
fisubrs
sbb
mov
or
pop
adc
frstor
sub
push
pop
ret
ja
jg
mov
aad
add
scas
rorb
scas
dec
adc
sub
jne
xorb
add
popa
cmc
movsl
imul
in
push
jmp
pop
mov
mov
mov
mov
jmp
and
jnp
or
cmp
push
movsl
mov
movsb
jle
push
mov
test
popl
sub
testb
ret
xchg
fists
adc
test
xchg
mov
pop
push
aam
movsb
pop
mov
push
push
cmp
add
pop
enter
xor
mov
scas
sub
insb
or
cmp
lods
xlat
out
adc
stos
cmp
stc
adc
loopne
les
sbb
les
sar
cwtl
mov
inc
js
sub
out
push
stc
xchg
adc
push
xor
inc
test
int3
mov
ds
mov
adc
addr16
mov
out
push
pop
fdivrp
sbb
jbe
pushf
cmp
jb
rolb
out
or
cld
cmp
sbb
xor
mov
jg
lea
negb
mov
mov
stos
frstor
sbbl
pop
cmp
xor
jp
daa
dec
out
loope
lods
xor
push
lret
xchg
jne
inc
mov
out
test
sub
jge
add
ss
mov
lret
daa
cmc
loop
mov
lods
pop
ja
pop
xor
sub
xor
jp
addr16
mov
jmp
test
sbb
inc
and
fnstcw
sbb
and
and
cs
lcall
scas
xor
jmp
stc
sbb
fstps
cmpsl
dec
push
stos
push
into
jbe
cmp
mov
cmc
loop
jb
test
iret
jb
cwtl
mov
in
pop
pop
pop
push
pop
jle
pusha
imul
cmp
mov
sub
push
cmp
roll
in
fsubl
rcrl
and
dec
jne
xlat
sbb
inc
je
mov
mov
add
mov
pop
pop
incb
pop
bnd
push
adc
push
es
jo
push
ja
jnp
push
and
cmp
sub
shlb
mov
loopne
sub
inc
cld
imul
adc
leave
push
repz
in
adc
pusha
sub
bound
xchg
dec
inc
movb
pop
dec
sti
imul
pushf
mov
hlt
enter
fdivrs
mov
out
xorb
mov
adc
xor
movaps
test
sahf
mov
jl
negb
xor
popf
test
iret
sahf
mov
lods
mov
mov
test
in
push
adc
inc
push
mov
mov
pop
stos
mov
push
sbb
imulb
push
and
cld
pop
dec
movsl
xchg
lock
gs
loope
es
xor
xor
sbb
test
mov
imul
movsb
cmp
jnp
int3
subb
aaa
sti
sub
cmp
shll
push
out
or
inc
loope
jbe
imul
test
cmp
or
aad
ret
les
dec
std
popf
fwait
dec
cld
sub
stos
jnp
repz
pop
jecxz
divl
lods
pusha
lret
pop
fwait
pop
sarb
or
adc
subl
xchg
stos
iret
adc
sbb
adc
or
push
outsb
push
ds
in
repnz
xchg
mov
pop
jns
push
inc
pop
mov
in
pop
push
dec
outsb
mov
std
pop
sub
out
add
lahf
arpl
cmp
push
dec
inc
repz
xor
mov
js
pop
test
xor
inc
aad
ja
dec
mov
dec
or
xchg
xchg
jg
xor
push
test
bnd
jne
cmc
xor
out
add
inc
xor
rol
lods
fucomi
shlb
xor
sbb
cltd
dec
push
pusha
inc
or
xor
ds
loope
fcmove
lea
mov
push
bound
mov
mov
inc
cs
test
sub
dec
outsl
pusha
cmpsb
jo
push
outsl
or
dec
out
mov
mov
call
lret
repnz
aad
jno
dec
cmp
dec
loope
out
xchg
pop
ss
jle
aaa
sbb
movsl
jmp
and
xchg
cmp
fnstsw
orl
mov
mov
leave
xor
xor
fiadds
and
es
add
xchg
dec
fisttpl
in
mov
dec
or
orb
pop
adc
inc
jmp
push
test
add
shlb
pop
ljmp
ret
sub
pop
xlat
bound
aam
aas
jno
mov
jg
loope
mov
mov
mov
loop
dec
mov
pop
cmp
loop
jo
or
or
sti
int3
mov
add
test
mov
push
stc
inc
cmpsl
mov
in
pop
sbb
mov
or
mov
mov
insb
mov
aas
shl
ret
add
push
pop
xor
aad
lret
xor
mov
adc
pop
cmp
mov
nop
movsb
xchg
cmc
xchg
sub
popa
decb
adc
imul
insb
push
pop
inc
inc
lds
mov
add
dec
add
pop
jp
movsb
ljmp
jbe
mov
loopne
push
cmp
adc
mov
insl
xchg
rclb
mov
mov
inc
rcrl
jbe
das
xlat
popa
pop
xlat
mov
shr
or
adc
fstpt
int
pop
sub
jle
fisubrl
mov
sbb
movsl
jecxz
imul
pop
push
pop
jl
data16
call
pop
sbb
ljmp
ror
mov
nop
pop
outsb
cli
and
repnz
mov
pop
lods
addl
js
lock
push
repz
jo
xchg
xchg
imul
jae
ss
lea
fadd
sbb
gs
jl
adc
mov
fisttps
movb
adc
repz
lods
sub
pop
inc
mov
and
call
stos
lock
pop
cmp
dec
push
les
jp
scas
push
sbb
mov
add
insb
or
flds
cmpsb
repnz
add
mov
lret
mov
cmc
in
pop
pop
fsts
pushl
xor
pop
push
xchg
inc
fs
lock
add
pop
cmpsl
xchg
mull
inc
push
add
or
fldcw
clc
sbb
ja
push
jmp
fisttpl
insl
mov
and
bound
mov
js
jle
data16
jmp
and
movsl
xchg
repnz
pop
lret
stos
sub
xchg
enter
fimuls
sub
loopne,pn
push
out
into
gs
pop
add
mov
pop
and
mov
lock
out
fcmovbe
or
fmulp
push
cwtl
push
push
push
leave
sbb
outsl
xchg
mov
mov
pop
test
mov
push
xchg
sahf
pop
jb
xchg
mov
popf
rcll
cmpb
lret
xor
mov
pop
xor
add
push
lods
dec
fucomi
jo
inc
popf
pop
dec
mov
mov
ds
xor
xor
cmc
lret
sbb
sub
cmp
enter
shlb
ficomps
and
xor
push
hlt
sub
push
enter
repnz
leave
jmp
fwait
movsl
dec
pop
jne
and
bound
das
mov
add
and
out
lret
repz
outsb
xchg
pop
cltd
sub
mov
cli
aas
addl
pop
cmp
lahf
aaa
lret
lock
or
out
popa
repz
mov
mov
test
or
adc
imul
shlb
jbe
mov
or
pop
mov
out
inc
imul
in
mov
pop
push
add
mov
out
leave
pushfw
fimuls
fwait
mov
mov
pusha
push
aam
push
insb
xor
out
test
adc
out
push
lcall
movntps
jbe
mov
jge
or
mov
push
sti
xor
sbb
xor
xor
jge
shl
insl
ss
mov
aaa
and
mov
mov
cmpsb
rcll
xchg
mov
xor
jl
shl
adc
push
fsubrp
js
push
in
mov
jecxz
dec
or
inc
mov
push
inc
fnstenv
and
lret
push
push
idivl
js
mov
pop
mov
inc
sbb
lcall
and
aam
mov
outsb
jbe
jae
lea
mov
pop
push
movsl
cltd
jecxz
mull
add
jae
clc
push
imul
popf
popa
rcrb
scas
sbb
inc
sbb
lret
dec
add
mov
adcb
call
add
mov
cltd
insl
adc
jnp
sub
stc
mov
inc
mov
cmc
sub
pop
mov
sbb
inc
rolb
pop
mov
mov
cmpsl
inc
and
sub
mov
lods
pop
cld
jns
push
lret
and
popa
jbe
stos
outsl
out
mov
fdivs
mov
daa
push
mov
pop
fucomi
pop
jno
xor
into
fbld
dec
jns
inc
mov
push
cmp
xor
outsb
pop
mov
cwtl
movsb
dec
ds
sbb
add
sbb
sub
mov
mov
mov
jo
dec
stos
and
iret
or
mov
xor
sbbb
out
mov
adc
push
lahf
pop
inc
sbb
and
and
pop
jns
data16
out
jb
jne
dec
rorl
push
mov
mov
aas
test
add
xor
mov
test
mov
jnp
mov
sbb
xor
jbe
mov
mov
inc
ds
sub
shrl
sub
fnstsw
dec
int3
daa
clc
rol
inc
fdivl
les
pop
insl
dec
data16
or
test
movsl
jmp
mov
mull
push
mov
fcomip
negl
hlt
testl
sbb
and
mov
adc
mov
mov
mov
aas
and
testl
das
inc
lret
mov
es
sbb
push
lcall
sti
push
sbb
add
push
rolb
in
jbe
jge
scas
and
jo
jns
shll
dec
mov
shrb
into
rcll
out
xchg
loope
outsb
mov
pop
mov
lods
mov
cltd
pop
xor
push
adc
pop
push
dec
lret
dec
in
mov
jae
ficomps
lahf
std
cs
dec
mov
imul
push
pushl
insb
jo
jno
imul
clc
je
sbb
data16
add
adc
adc
cmpl
xchg
mov
adcl
or
jg
xchg
cs
push
push
inc
sbb
pop
mov
sub
sbb
aam
cwtl
jnp
push
pop
mov
jmp
cs
leave
bound
rcll
test
mov
sub
jnp
add
xchg
pop
xor
mov
cmpsl
push
hlt
or
bt
hlt
adc
or
inc
movsl
inc
and
mov
test
adc
mov
push
test
mov
roll
ds
xchg
push
and
push
loope
loopne
add
inc
dec
pop
or
out
or
ror
adc
inc
sbb
data16
xor
xchg
dec
movsl
bound
dec
sbb
dec
dec
push
jge
mov
cmp
or
xchg
imul
cmp
sub
lret
cmpl
cmc
je
pop
sbbb
pop
gs
push
cmp
mov
mov
jp
or
mov
lods
jge
mov
loop,pn
xor
sahf
fisubs
push
sub
js
or
adc
pop
mov
add
packsswb
loope
xchg
test
popa
xchg
jnp
xchg
jae
mov
sahf
jp
or
sub
bswap
sub
mov
mov
or
push
pop
aaa
push
in
jg
adc
movsb
cs
add
push
mov
mov
test
cmp
rolb
insb
stos
adc
mov
mov
cmp
xor
lahf
or
pop
pop
out
jns
add
or
sti
push
and
aaa
push
jo
lods
repz
dec
test
mov
mov
pusha
wrmsr
outsl
or
lahf
pop
mov
in
jmp
enter
or
jle
push
xchg
push
xchg
aas
mov
dec
adc
xchg
jnp,pn
inc
imul
push
mov
mov
cwtl
mov
sahf
ror
cmp
mov
or
dec
or
roll
ret
ljmp
jecxz
inc
and
push
mov
hlt
ds
push
popf
mov
pop
ds
xor
pop
test
pop
enter
data16
mov
outsl
push
push
jg
call
shrb
cmpsb
sub
adc
leave
lds
inc
cmp
imul
pop
pop
dec
jle
push
sahf
mov
sbb
leave
push
pop
and
push
and
stc
loop
push
add
test
mov
sbb
xorb
adc
fwait
stos
push
cwtl
aam
pop
cli
inc
push
daa
fmull
rclb
pushf
and
jno
hlt
mov
test
or
xchg
les
mov
leave
repz
movsb
cmp
dec
insb
cltd
push
int
testl
lods
dec
jae
mov
sti
cmc
and
aas
repnz
mov
mov
mov
ret
inc
jnp
pop
test
adcl
pop
pop
loope
out
int3
sub
lret
aaa
xlat
data16
sub
xchg
out
outsb
lds
cld
rcr
add
ret
je
das
andb
js
sbb
mov
jae
imul
addb
out
insl
dec
mov
mov
xchg
inc
movsb
int
lea
int
lods
stos
dec
stc
movsl
mov
mov
fucomi
mov
insl
add
jb
aad
mov
in
mov
xchg
rcrl
push
inc
pop
pusha
mov
sarb
sbb
mov
cmp
cmc
in
movsb
xchg
pop
inc
int
cmp
fs
test
cmp
or
xor
mov
jecxz
cmp
and
xchg
mull
dec
imul
mull
scas
lcall
mov
mov
fs
jl
push
xor
rcrl
sub
dec
outsl
movsb
cmpsl
push
mov
fst
lock
jae
adc
ret
adc
sbb
test
outsb
orb
mov
or
xor
pushf
mov
push
sbb
sbb
xchg
mov
sbb
push
jp
fisubrl
push
in
lcall
rcl
fldenv
lds
jnp
push
jne
xchg
stos
xor
fcomi
enter
lahf
mov
cld
add
rolb
daa
out
mov
mov
subl
or
out
fs
mov
and
add
add
xor
mov
or
sbb
mov
mov
imul
sbb
inc
push
and
mov
inc
inc
fwait
inc
and
rcll
or
jl
fucomp
xchg
inc
add
nop
cmp
rcll
cmp
std
lods
jmp
rcll
loopne
fs
outsb
mov
pop
lret
xchg
mov
xchg
add
scas
insb
mov
dec
icebp
mov
inc
negl
push
jo
loope
lret
mov
mov
and
das
inc
xchg
ljmp
testb
sub
fistpl
add
imul
sbb
fcomps
nop
addb
ret
cmp
dec
rol
loop
repz
out
or
pop
in
icebp
fmulp
jb
mov
loop
adc
push
dec
sub
inc
adcl
xchg
in
add
js
ljmp
in
adc
adc
cld
mov
aad
fwait
test
adc
shlb
lahf
pop
pop
notb
xchg
sarb
xchg
xchg
jo
adc
pop
outsb
xchg
dec
push
mov
movsl
xchg
push
int
test
adc
je
fwait
pop
xor
xchg
in
pop
push
xchg
mov
jns
sub
xchg
sbb
mov
push
cmp
cmpsb
gs
test
mul
sub
mov
sub
mov
pop
shlb
and
fwait
cltd
or
mov
fsubrl
cli
loopnew
js
push
push
push
das
mov
pushf
ljmp
aaa
mov
stos
or
sub
sarl
jne
out
aas
xchg
add
mov
add
add
jnp
mov
sub
push
adc
and
loopne
mov
lods
inc
jecxz
sbb
leave
lds
sbb
cs
sub
aad
mov
jae
aas
and
outsl
mov
jno
xor
sbb
lods
fnstcw
fstl
push
push
ss
adc
pop
lods
out
and
mov
int3
sbb
jle
jb
push
mov
inc
std
mov
call
subl
adc
addb
mov
nop
sbb
icebp
gs
inc
bound
aad
aaa
xor
test
std
shll
push
dec
cmp
mov
into
gs
jl
bound
push
sub
aam
in
cld
and
lea
jl
sub
sti
movsb
and
int
or
adc
bound
pop
mov
mov
mov
leave
mov
mov
leave
lods
imul
push
fldenv
mov
dec
aaa
in
mov
push
and
push
or
push
in
push
movb
push
into
or
nop
into
pop
push
inc
fcomp
pop
push
sti
ja
popa
fisttps
and
movsl
jne
dec
inc
add
gs
leave
mov
cmp
nop
fistps
icebp
fisubrl
outsl
std
lods
cmp
repz
add
call
outsl
pop
cmp
cltd
xchg
push
or
add
xchg
dec
push
decb
test
mov
jge
outsl
out
jp
nop
into
imul
lds
aas
aaa
mov
call
addr16
mov
addr16
pusha
xor
pop
push
loope
xorl
add
popa
inc
or
js
dec
inc
fadds
mov
gs
sub
ljmp
cmp
jne
jae
xor
mov
pop
ja
dec
call
lds
fbld
gs
punpcklbw
lds
fstps
clc
movsb
cmp
mov
imul
gs
pusha
lods
into
ja
xchg
cmpsl
add
mov
in
adc
add
inc
xor
in
pop
call
jmp
rcrl
xor
mov
jbe
jge
pop
mov
imul
push
nop
add
in
inc
fisttps
je
adc
stc
mov
mov
or
ret
xor
mov
mov
xor
add
mov
lahf
cmp
mov
ja
ret
dec
xchg
add
in
cmp
ljmp
ret
mov
mov
xor
leave
mov
mov
iret
stos
imul
xor
lahf
mov
xchg
add
fnstcw
sub
jnp
sbb
ss
cmpsb
ljmp
cmp
xor
pusha
pop
mov
xchg
loop
out
jo
movsl
or
xchg
dec
pop
inc
fwait
mov
sahf
ja
mov
pushf
jnp
jmp
pop
mov
aad
mov
jne
cwtl
sbb
mov
sbb
test
fwait
call
sub
aaa
add
lcall
bound
mov
xchg
pop
cmpb
mov
movsb
jmp
mov
jno
push
sarb
arpl
jp
fs
jp
rcrb
daa
pop
cmp
mov
xchg
sbb
in
outsb
add
scas
xor
lcall
pop
dec
popf
lods
hlt
and
add
insb
aas
outsb
or
sti
xor
je
jno
rorl
xor
jle
test
std
xor
sbb
adcb
cmc
cs
inc
imul
xchg
adc
daa
scas
mov
inc
stc
les
bound
xchg
es
lock
push
fdivrp
xchg
sbbl
sbb
loope
in
push
xchg
in
push
xchg
in
push
xchg
in
push
xchg
in
push
xchg
in
push
xchg
in
push
xchg
in
push
xchg
in
jo
lahf
jns
add
cvttps2pi
sub
imul
mov
repz
jl
sub
hlt
jns
cmpl
pop
shll
mov
mov
dec
cmp
sub
mov
cmp
cmp
mov
pop
mov
or
mov
jnp,pt
cwtl
and
adc
pop
jbe
push
cmp
call
fidivrl
dec
data16
xor
mov
test
and
ret
repnz
mov
adc
nop
xchg
movb
and
lods
popf
inc
popf
mov
push
cmpsb
cmp
or
jo
lret
outsb
push
leave
mov
or
sti
lret
sbb
iret
data16
and
pop
in
and
wbinvd
add
jl
sub
inc
push
and
dec
lods
iret
add
add
scas
loopne
push
add
or
jbe
mov
cmp
or
jecxz
shlb
push
cmp
xchg
cmpsl
fidivrl
cli
aas
push
and
jbe
jb
jb
pop
and
nop
iret
jne
inc
push
bnd
mov
bound
xchg
jmp
divl
insl
scas
push
pop
loopne
push
rorl
cmp
mov
fnstenv
xorb
jae
div
fucomp
daa
adc
pop
je
stc
sbb
pusha
lcall
adc
pusha
mov
addr16
ds
pop
add
fwait
das
xlat
dec
pushf
xchg
pushf
mov
divb
jbe
idivb
cmp
sbb
dec
mov
adc
pushf
mov
xchg
and
pushf
test
sbb
das
stc
mov
adc
add
in
sub
cli
addb
push
xchg
cmp
arpl
sub
sub
stos
ss
mov
int3
mov
cmp
pop
fcomp
sti
push
rclb
jmp
clc
jo
xchg
jns
mov
loope
pushf
inc
sub
hlt
inc
icebp
cmpsl
sti
inc
jge
fs
in
pop
clc
sub
and
loope
pop
cmpsl
repnz
pop
std
and
add
jl
sbb
hlt
and
jae
test
dec
jmp
fisttpll
pusha
jns
cmpsb
test
xchg
sub
stc
xchg
adc
js
iret
pop
test
mov
mov
test
sub
stos
jo
xchg
jp
sti
sbb
pop
jb
sub
loop
fnstsw
pop
testl
xchg
jb
dec
rorl
cmpsl
inc
and
pop
cs
cmp
lock
fst
sbb
xor
mov
in
sbb
aas
xor
in
scas
movlps
xorl
push
test
mov
fwait
rcrb
dec
rclb
ds
mov
mov
mov
fisttpl
xor
aam
sub
mov
and
mov
xchg
ja
lds
add
sbb
cmp
insb
add
mov
loope
add
faddl
ds
adc
push
xor
and
lcall
dec
cld
and
push
push
inc
je
mov
xchg
mov
cld
cmp
mov
dec
stos
aam
in
mov
in
xlat
jmp
jl
pop
in
xorl
ret
jge
push
pop
nop
or
cmpsb
sahf
push
jge
jg
cs
pop
sbb
std
test
into
add
sahf
dec
repnz
aas
daa
push
mov
sbb
loope
and
sub
fstpt
aaa
repz
adc
movsb
pop
into
pop
jne
mov
adc
xchg
jae
ljmp
cmovae
out
cmpb
xchg
pop
cmp
mov
andb
subb
push
push
fwait
pop
mov
push
xchg
fdivp
mov
inc
test
cmp
hlt
cmp
sub
mov
push
ss
nop
or
imul
fwait
lods
and
mov
cmpsl
pop
imul
stc
nop
jmp
fidivrl
stc
in
jg
fcoms
lcall
repz
mov
push
mov
xor
add
cmp
in
mov
add
pop
out
lods
aad
mov
daa
pop
add
stc
mov
xor
adc
mov
pop
std
loop
adc
stos
ja
and
jb
sub
pusha
mov
and
iret
adc
add
lret
jo
mov
xor
pop
cmpsb
cmp
sub
mov
sbb
ficoml
dec
pushf
and
pop
test
mov
mov
push
xor
dec
aas
xor
jmp
outsb
outsb
dec
stos
lcall
jg
pop
call
leave
or
xor
or
xchg
dec
xor
push
pop
xchg
aam
sar
cwtl
jno,pn
rcll
in
and
pushf
or
fisubrs
mul
test
loop
imul
lea
imul
loope
inc
test
sbb
inc
jne
pushf
dec
jnp
out
xchg
mov
jnp
mov
xor
push
out
sbb
loopw
in
mov
sub
add
sti
rcll
loope
cli
push
add
fists
enter
adc
enter
add
orb
rol
sub
fs
loopne
push
xchg
insb
daa
or
fwait
aaa
sub
sbb
popf
mov
inc
jle
dec
pop
call
and
es
test
lock
mov
les
cmc
fstpl
orl
xchg
cwtl
push
lahf
push
inc
inc
xchg
mov
in
aas
dec
inc
mov
daa
mov
cmpsl
sbb
add
dec
andb
movsb
sub
loopne
sbb
sbb
inc
les
fcoml
movsl
jp
das
movsl
call
mov
in
pop
sarb
mov
lret
int
mov
and
push
jnp
sub
aad
inc
or
lret
mov
cli
jns
lds
sbb
test
mov
pop
in
adc
mov
push
movsl
fwait
jne
push
pushf
mov
pop
and
pop
pushl
std
pusha
aas
pushf
int
inc
xchg
scas
sbb
insb
and
mov
call
cmp
push
hlt
je
sti
xchg
dec
out
out
mov
and
imul
lock
pushf
dec
pop
lcall
push
sub
ffreep
dec
test
mov
insl
xor
lods
cmp
ljmp
and
mov
dec
inc
push
mov
sti
fbld
sub
sub
adc
iret
xchg
aad
push
dec
mov
push
and
sahf
jle
cmpl
imul
ljmp
xchg
dec
mov
push
add
shll
call
cwtl
fs
mov
int3
add
cmp
ret
clc
ja
adc
in
ds
dec
jae
test
xor
lods
lods
out
mov
or
cmpsl
cmpsb
aas
pop
fcompl
mov
sbb
stos
pop
repz
addr16
insl
fcmovnb
inc
pop
lahf
mov
gs
cmpsb
scas
cmpsb
adc
jp
adc
jo
jns
loope
dec
fimull
test
sub
gs
out
gs
sbb
test
cmc
cltd
pop
repz
in
ja
jnp
sbb
xor
inc
ljmp
mov
xor
jle
inc
daa
add
fistl
call
popa
bound
hlt
das
add
adc
xchg
mov
and
pop
pop
scas
cmp
adc
adc
mov
sbb
sub
mov
lods
out
outsl
shlb
or
mov
inc
test
out
dec
cwtl
aas
mov
and
movsl
cmp
loopne
cmp
mov
inc
jo
sbb
stos
push
gs
mov
xor
sub
roll
xor
jns
cld
imul
jbe
sbb
stc
adc
mov
enter
mov
andb
add
mov
cmc
leave
sbb
xchg
fmulp
sbb
sbb
inc
xor
orb
or
cmp
push
cmp
addr16
icebp
lds
movsl
jmp
out
fs
icebp
sub
mov
cmp
sbb
sub
mov
fs
das
fcomp
dec
iret
cmpsb
and
dec
andb
cmp
xchg
push
lods
adc
std
pop
divb
mov
pop
pop
stc
sbb
mov
jmp
out
pop
movsb
mov
xchg
addr16
test
lret
mov
pop
ret
jp
loop
inc
scas
xchg
xchg
or
dec
dec
and
mov
cs
es
test
jnp
int3
pusha
gs
cmpb
fwait
out
or
cli
lea
dec
lret
jb
sbb
ret
cmp
testb
push
imul
or
add
es
fsubrl
adc
push
mov
and
dec
decb
sahf
xchg
sub
jbe
lret
mov
pop
xchg
fildl
inc
lret
aad
xor
dec
pop
ficoms
bound
into
out
jnp
into
push
add
cld
aas
int
push
into
fs
cltd
sbb
sbb
mov
cmc
lahf
sahf
dec
outsl
loopne
stc
pop
jns
leave
pushf
shrb
imulb
mov
and
pop
sti
repnz
fcmovnu
movsb
xlat
mov
mov
aad
jns
mov
mov
jns
in
test
mov
xchg
sbb
pop
sbb
xchg
shlb
leave
test
mov
repz
loop
jg
xchg
push
jle
pop
mov
sbb
fwait
jl
mov
sub
cwtl
aam
sub
lods
cmp
es
lods
push
inc
loop
jbe
ljmp
pop
aaa
lods
jne
cli
pop
inc
jae
jecxz
inc
mov
lret
shl
and
stos
out
pop
es
pusha
in
sub
mov
pop
cmp
dec
inc
loopne
sti
dec
stos
adc
push
test
xchg
daa
fildl
push
xchg
rolb
and
xor
movsl
leave
mov
mov
jge
dec
ret
pop
es
ja
dec
sbb
xchg
pusha
scas
mov
jg
dec
movsb
addr16
sbb
in
adc
pop
and
mov
call
mov
js
into
pop
mov
xlat
push
jmp
cli
outsl
ret
lcall
test
fdivl
mov
dec
mov
sub
mov
dec
jge
xchg
sbb
js
sbb
lret
inc
rorl
insl
lcall
jmp
inc
mov
or
push
and
scas
loopne
push
dec
push
pop
imul
push
popa
cmc
neg
in
xchg
nop
xchg
inc
push
add
lcall
or
gs
jno
or
cmp
or
movlps
jge
outsb
fidivrs
push
fbstp
loop
pop
mov
push
sbb
xor
jns
insb
push
cltd
lock
push
mov
and
sub
jg
push
push
add
test
xchg
es
or
lret
scas
push
out
mov
mov
sub
jl
dec
rclb
neg
fucomi
repnz
repz
or
sahf
cmp
lock
je
iret
xlat
adc
inc
mov
aaa
je
pop
xchg
out
pushf
jns
imul
pop
loopne
mov
outsb
mov
scas
aaa
mov
xchg
repz
and
xor
mov
sub
or
dec
mov
aad
cmpb
adc
pop
out
lret
fldt
lcall
jne
sbb
mov
stc
or
inc
mov
icebp
popf
ror
xchg
jne
dec
in
imull
xchg
incb
test
call
into
jmp
jl
cmp
xchg
into
fiaddl
dec
stos
adc
lds
lahf
int
in
adc
imul
ljmp
jecxz
mov
mov
lret
cld
cmp
leave
jg
lods
xor
xor
and
fldlg2
cld
lods
fisubrs
jmp
outsb
xor
pop
sbb
int
fisubrl
mov
dec
rcrl
jmp
mov
xchg
mov
test
pop
popf
jmp
fwait
mov
clc
ds
jecxz
lock
inc
or
clc
enter
xchg
addb
adc
faddl
sti
subl
int
cmp
nop
and
cwtl
add
aas
imul
xchg
leave
mov
inc
sbb
fcomip
push
jg
mov
mov
fs
insl
mov
pop
jmp
push
inc
jo
lock
dec
sub
pop
push
xchg
cwtl
nop
pop
sti
and
fiaddl
scas
scas
lahf
scas
sbb
popa
sbb
jb
jne
xchg
leave
mov
mov
insb
nop
mov
pop
xor
fs
and
adc
outsl
inc
adc
jb
jno
stos
test
push
sbb
int
mov
pop
or
mov
dec
xor
mov
inc
fcmovne
inc
leave
shrb
loope
jmp
mov
mov
mov
cmpsb
xchg
shlb
mov
scas
insb
sbb
sub
cmpsb
adc
jne
ja
ret
inc
push
inc
leave
fisttpll
test
push
inc
imul
xchg
and
pop
xchg
push
lock
shrb
mov
add
out
mov
and
pop
das
pop
hlt
test
add
mov
sub
movsl
cmpsb
shrb
loop
xor
scas
rorb
add
into
and
fdivl
popf
js
lret
cltd
xor
cmpsb
icebp
outsb
stos
push
jns
dec
subl
mov
lds
xchg
outsb
sub
in
and
mov
leave
ds
jo
xchg
xlat
mov
rorb
in
cmp
mov
mov
cli
out
xor
ret
popf
inc
and
sarb
dec
shll
cmc
cmp
call
jp
movsb
inc
xlat
and
cmc
mov
cld
aaa
or
xchg
pop
adc
into
dec
js
jl
or
ret
cwtl
aam
lahf
mov
loopne
fbstp
xchg
jbe
pop
sub
jmp
xchg
xchg
sti
xor
dec
lods
mov
enter
or
idivb
xor
sbb
push
out
js
mov
cld
clc
mov
mov
xor
mov
sub
dec
loope
mov
ret
scas
bound
jns
fsub
cmpb
test
sbbl
and
dec
test
jo
aam
add
jmp
sub
xchg
jge
js
fs
sub
push
inc
sbb
mov
test
xor
mov
add
in
sub
pop
xor
dec
push
or
mov
lcall
add
cmp
outsb
xor
outsb
xor
xlat
cld
jo
add
xor
and
cltd
call
int3
repnz
mov
in
and
lea
clc
sub
stos
hlt
jo
sub
add
dec
shll
jg
add
sub
jns
lds
fisttpll
pop
out
jne
mov
sbb
je
in
and
stos
ret
add
mov
sub
lods
mov
mov
ret
pop
jne
jp
sbb
pusha
bound
cmp
sahf
pop
mov
cmp
insl
mov
push
add
mov
jbe
adc
enter
lods
icebp
iret
cmp
imul
movsl
lahf
jb
fwait
mov
inc
sbbb
xor
xor
ficompl
or
jns
pop
ljmp
pop
les
dec
or
dec
adc
xor
jae
mov
mov
lcall
mov
push
stc
or
pop
dec
lahf
test
mov
sub
sbb
shlb
or
pusha
out
imul
js
test
push
ret
addr16
jns
mov
dec
std
mov
mov
iret
je
sti
and
jo
push
dec
sbb
and
cmpsb
inc
mov
cmp
adc
and
jns
dec
sbb
pop
cmp
out
loop
aad
push
add
pop
push
pop
cmp
aad
lock
in
push
das
js
xlat
lods
cmp
loop
flds
in
mov
mov
loop
fs
mov
imul
cmp
fsubrp
dec
dec
movl
cmpsl
dec
dec
out
std
adc
pop
aas
cwtl
or
or
pusha
in
icebp
mov
xchg
xchg
cld
sub
pop
subb
clc
or
mov
lret
pop
push
icebp
jecxz
scas
push
mov
lds
mov
cmp
or
sub
fstpt
mov
pop
xor
and
mov
loopne
push
push
mov
ss
and
sbbl
mov
cmp
adc
xchg
sbb
sbb
add
insb
test
cmp
fnsave
xor
dec
arpl
cli
orl
test
xchg
add
cld
fldt
xchg
repnz
adc
adc
inc
xor
add
daa
push
in
pop
stos
lock
adc
fwait
mov
inc
arpl
pop
dec
pop
pop
sbb
xchg
rcll
out
sbb
insb
adc
jecxz
push
popa
push
in
jge
andb
sub
and
mov
adc
stc
mov
movsb
adc
sbb
testl
lea
inc
dec
jo
cld
mov
jl
xchg
push
dec
push
cmc
loop
popl
rolb
jmp
sbb
arpl
loop
ficoml
mov
and
test
lea
push
iret
or
jecxz
popa
jle
push
sub
sbb
fdivr
lcall
jne
fists
test
icebp
sub
mov
cltd
jo
adc
cmpsb
or
stos
in
and
jo
lock
popa
repz
mov
xchg
cmp
inc
cmp
pop
decb
sub
xchg
enter
mov
imul
sub
sbb
icebp
xor
mov
pop
loop
adc
cltd
loop
mov
and
orl
and
lret
mov
gs
and
push
iret
scas
mov
andl
or
sarl
push
lods
push
fxch
sti
sbb
xor
roll
fimull
jbe
jecxz
testb
andl
adc
pop
xchg
inc
sub
rolb
mov
or
lret
dec
mov
push
je
jnp
xor
in
mov
add
mov
int3
clc
push
mov
and
inc
mov
mov
push
mov
mov
std
sbb
xchg
nop
or
push
pop
mov
inc
xchg
push
mov
scas
jp
sbb
add
mov
pandn
add
test
push
fiadds
aas
leave
dec
das
ja
pushf
pop
inc
sub
pushf
sbb
adc
sbb
jo
movsl
sbb
mov
rclb
mov
out
dec
cltd
inc
rorl
xchg
pop
sahf
lret
arpl
bswap
insl
lods
mov
subl
or
mov
loope
jnp
jae
xor
inc
mov
lret
xchg
pop
orl
dec
nop
add
cmc
test
or
adc
push
mov
jle
lods
pop
dec
mov
push
popa
mov
lahf
sbbb
adc
xchg
cmp
rcr
incl
stos
adc
enter
cmc
pop
sub
out
ss
adc
daa
push
mov
sub
dec
in
xor
sbbl
in
dec
cmp
or
or
lea
jae
mov
ja
sbb
sbb
jmp
cli
mov
lods
pop
pop
arpl
dec
cli
cmp
mov
dec
and
sbb
cmp
les
mov
scas
pop
int3
xor
fbstp
stc
jl
out
or
ret
jns
add
sub
mov
xor
jmp
addl
jmp
inc
sub
push
jmp
jg
and
out
pop
adc
adc
sarb
push
and
sbb
aaa
sbb
sub
and
insl
movsl
xchg
incl
movsl
sbb
fdivs
add
or
or
and
adc
test
xchg
iret
out
ret
es
push
jne
push
mov
aad
jg
inc
cltd
mov
push
out
cli
pop
mov
mov
ljmp
push
popa
mov
pop
cmp
pushf
inc
and
cli
aam
enter
mov
mov
ljmp
hlt
xor
push
cltd
dec
pop
sbb
push
xor
add
repz
pop
out
lret
aam
pop
popf
stos
lods
cmc
push
xchg
jle
loopne
dec
add
out
xchg
jb
push
inc
jnp
pushf
jp
cmpl
or
decb
dec
in
leave
jl
fildl
jnp
inc
out
xor
fists
dec
push
pop
xor
jns
aam
test
mov
pop
insl
xchg
pop
sbb
and
adc
mov
jmp
aam
test
bnd
jns
sub
xchg
mov
xchg
test
sbb
mov
daa
xchg
and
adc
jecxz
ljmp
pop
out
lret
cmp
sub
lods
arpl
push
lea
mov
xchg
jl
add
inc
xchg
push
or
lock
fsubrl
repz
jg
gs
sub
mov
cmc
xor
fsubr
mov
lea
xchg
and
test
push
pop
inc
mov
bound
decl
xor
pop
je
mov
popa
lahf
inc
lcall
jge
mov
pop
pop
cwtl
push
mov
into
cmp
lcall
xchg
inc
pushf
mov
test
sub
xor
cmp
pop
mov
mov
inc
jg
addb
out
xchg
xacquire
in
cltd
mov
test
ret
enter
adc
mov
push
sbb
xchg
and
icebp
add
push
sbb
xchg
cwtl
sub
dec
mov
mov
cmp
bound
gs
add
adc
dec
lahf
ret
inc
or
sahf
stos
xchg
aad
jmp
movsl
movsl
jecxz
enter
rcrl
xchg
adc
je
push
fldt
mov
push
and
inc
or
mov
xchg
addr16
mov
jge
inc
or
adc
popf
add
icebp
adc
mov
or
insb
test
push
dec
cli
stos
scas
je
inc
out
loop
inc
cmp
ret
outsl
lods
lret
mov
push
ficoml
sbb
push
jl
and
cmp
mov
rcr
push
enter
pop
lahf
ja
jo
lcall
push
add
fwait
popf
push
sbb
push
in
rcrb
dec
fwait
hlt
dec
fisubl
in
mov
dec
push
add
dec
mov
bound
xchg
push
xor
rorl
jae
sti
movsb
lret
mov
hlt
shr
dec
cmp
jno
fcoml
insl
ficompl
xlat
push
sahf
push
xorb
aad
loopne
out
pushf
adc
sub
je
test
dec
fstl
out
jmp
add
sbb
or
mov
pop
nop
lock
cmpb
add
jno
add
push
add
arpl
and
nop
cmp
adc
cmpl
sub
in
lret
scas
pop
dec
sbb
cmp
jne
jle
pusha
push
xlat
insb
rcll
push
or
adc
dec
mov
cmp
call
mov
mov
xor
and
dec
lods
ret
ljmp
rcll
mov
mov
pushf
out
jno
inc
aad
test
js
xor
cmp
daa
or
rcrl
mov
mov
arpl
and
jmp
or
mov
fldl
adc
lret
jnp
js
scas
inc
ljmp
imul
pop
sbb
out
xchg
xchg
xorl
mov
mov
arpl
iret
popf
imul
pop
pop
lret
lds
xlat
or
and
adc
add
mov
xchg
loope
jmp
in
decb
mov
hlt
lds
sbb
xchg
rcrb
or
hlt
xchg
fsubrp
not
mov
add
jbe
pop
popl
inc
push
sub
inc
inc
and
in
cmp
mov
lock
sahf
gs
imul
adc
pusha
int3
cwtl
sub
in
adc
fld
jmp
fcomi
arpl
pop
cwtl
cli
jnp
in
mov
add
movsb
aaa
or
jp
add
mov
xor
rorb
test
mov
shll
incb
aas
xchg
cmp
lea
dec
pop
sbb
nop
xchg
dec
icebp
notb
mov
pop
outsb
adc
leave
or
pop
out
test
test
std
imul
mov
jne
rorl
aam
into
addr16
inc
fnstenv
xor
push
or
imul
sbbb
mov
inc
add
sahf
push
sar
cltd
mov
xor
sub
push
stos
cmc
pushf
call
pop
lret
xor
inc
or
divl
jmp
out
or
xor
in
loope
and
push
jmp
outsl
and
xchg
ljmp
gs
lock
mov
repnz
pop
pusha
iret
or
xchg
cmp
js
and
xor
push
jg
bound
cmp
aas
in
mov
addb
gs
sbb
in
adc
xlat
rorb
or
dec
int
mov
lret
popf
adc
add
add
lods
fwait
adc
mov
add
xor
dec
repz
fmull
mov
sbb
add
out
pushl
loop
add
dec
movb
jne
pushf
in
mov
add
popf
cmp
inc
outsl
jg
arpl
iret
pop
hlt
or
les
cld
sahf
clc
pop
popa
js
dec
cmp
mov
sub
insl
test
mov
xor
outsl
mov
add
push
in
mov
mov
sub
jbe
cli
lcall
sbb
pop
insl
push
inc
or
clc
loop
fdivl
popa
cltd
jae
int3
push
out
roll
jg
imul
and
int3
or
outsl
int3
leave
mov
pop
or
or
test
sbb
lcall
loope
insb
mov
ja
imul
icebp
repnz
rcll
mov
cmp
daa
xor
mov
ljmp
bound
mov
cmp
pop
pop
jb
cwtl
imul
rcrb
jae
mov
and
outsb
push
gs
dec
std
pop
loopne
shrb
push
inc
bound
fdivrs
out
in
into
leave
adc
movsl
xor
std
jl
ret
xchg
stos
test
jge
cld
dec
mov
dec
dec
aam
mov
jge
cwtl
imul
adc
ss
clc
xor
xchg
fbld
mov
jo
mov
lret
loop
pusha
inc
js
dec
and
or
mov
or
pop
adc
pop
mov
mulb
adc
mov
rorl
les
popf
mov
push
pavgw
pop
fwait
sbb
sarb
xor
frstor
in
jae
jae
int3
or
loop
sbb
repnz
ret
inc
call
push
shrl
call
shlb
xchg
and
in
jmp
dec
mov
in
add
add
cmc
push
jb
insb
int
pop
push
cmpsb
sbb
out
mov
test
inc
jnp
push
rcl
cmpsl
imul
popa
sarb
cmpsl
mov
gs
jb
stos
out
movl
test
call
or
push
into
adc
xchg
scas
lret
aad
cli
in
lods
lcall
fldl
ds
xor
xor
es
in
repnz
dec
imul
sbb
xor
sub
stos
fnstenv
std
jecxz
push
sub
repnz
dec
lods
mov
mov
sbb
insb
pop
mov
sub
les
sub
je
cmp
outsl
sub
in
pusha
cs
inc
ret
mov
fsubr
dec
xchg
inc
lahf
insb
int3
out
es
aas
and
lock
sub
xorb
push
dec
mov
fwait
test
test
sbb
cltd
pop
xor
push
dec
scas
cld
and
imul
jo
mov
mov
lods
es
sahf
jge
andb
push
hlt
in
insl
mov
fnstenv
lock
sbb
mov
nop
and
sbb
movsb
inc
pop
inc
jbe
sub
mov
sbb
xor
dec
cld
adc
cmp
pop
sbb
sbb
loopne
xlat
mov
sub
stos
mov
addr16
cmp
dec
xchg
mov
inc
jb
mov
jge
rcrl
inc
rolb
add
push
jo
xchg
mov
stos
jmp
xchg
out
or
mov
in
jne
fs
jge
pop
testb
mov
fidivrs
dec
fimuls
dec
lea
sarb
inc
sti
xor
sub
add
sbb
pusha
adc
mov
aad
adc
xchg
aas
pop
leave
mov
cmp
sbb
and
decl
adc
push
aam
mov
lea
cmp
rcll
xor
cwtl
push
pop
gs
frstor
movsl
lcall
out
sbb
sbb
sahf
stc
jmp
dec
rcrl
add
lods
shr
and
mov
dec
xchg
test
out
in
inc
into
push
xor
add
adc
add
add
pop
jmp
daa
cmp
scas
mov
leave
pop
pop
push
adc
lea
add
repz
jge
adc
or
mov
or
popl
inc
xor
mov
push
xor
js
pop
subb
lock
sbb
shlb
or
aas
repz
dec
cli
pop
push
shll
xchg
orb
xchg
cmpsb
and
mov
mov
pop
lret
xor
int
adc
and
subb
addb
sub
movsb
cmp
jle
push
dec
call
out
ret
xchg
movb
jl
sbb
mov
insb
mov
popa
bnd
stos
xlat
jg
je
jae
pop
push
jne
mov
repz
incb
outsl
xchg
nop
mov
repz
stos
sbb
mov
sahf
and
je
in
add
aad
hlt
or
cmpsb
cmpl
dec
movsl
xchg
adc
sti
adc
mov
sbb
in
fs
pop
xor
cs
stos
scas
xchg
lret
jecxz
mov
hlt
lret
cli
pop
or
mov
mov
jge
push
dec
ficoml
out
sub
mov
cmp
mov
jg
add
mov
mov
mov
movsl
insb
lds
aam
lret
movsl
dec
dec
xchg
in
nop
insb
lods
and
jae
sti
mov
xchg
dec
push
outsb
add
les
xor
sbb
ja
gs
jge
or
out
xchg
xchg
insb
adc
int
or
fsubrl
jmp
cmpsl
mov
pusha
lret
movsl
popf
daa
dec
cmp
jg
js
jnp
xor
and
ds
inc
and
stc
lahf
push
mov
cwtl
mov
aad
mov
popf
mov
mov
pop
movsb
outsb
or
notl
and
xor
xchg
mov
fisttpl
and
sub
cwtl
jmp
icebp
ret
and
orl
mov
lahf
xorl
dec
pushf
mov
and
call
pusha
scas
push
imul
jb
push
xor
pop
arpl
push
jge
add
fisubrl
sub
push
jp
lret
sahf
mov
push
ja
movsb
sti
leave
or
pop
int
dec
sub
push
arpl
jns
clc
lret
mov
shl
lahf
mov
test
in
je
pop
scas
test
sbb
sub
add
ret
cmp
mov
push
mov
pop
or
cmp
push
divl
sbb
cli
test
rclb
mov
dec
inc
mov
les
jg
sub
xchg
jo
dec
imul
pop
cmpsl
aam
xchg
std
in
mov
repz
roll
movsb
les
or
pushf
aad
mov
fwait
or
inc
adc
cmpsl
mov
into
and
idiv
inc
dec
fs
mov
add
in
loopne
and
mov
test
arpl
loope
rol
inc
test
jp
inc
clc
xchg
mov
pop
mov
andl
ret
loopne
into
dec
fistpl
aaa
push
inc
mov
sbb
out
icebp
jle
push
mov
insb
bound
dec
adc
je
repz
mov
push
jecxz
sbb
fisttpll
dec
pop
dec
adc
hlt
ret
fsubl
movsl
dec
push
mov
inc
dec
jl
sub
bound
and
push
lods
popf
inc
repnz
mov
mov
test
add
cmp
cld
loopne
fadd
lret
xchg
and
mov
je
or
shll
and
mov
xor
movd
sub
cli
stos
or
fisttpll
jne
push
test
push
aad
out
sub
negb
and
adc
rclb
mov
into
add
pop
or
sub
mov
test
pop
ffree
mov
test
mov
in
push
push
neg
daa
add
rolb
inc
mov
pop
mov
fidivrl
xchg
push
or
or
cmpsb
xchg
mov
scas
arpl
aam
bound
cmc
inc
outsl
fistpl
dec
jl
les
scas
aad
sbb
loope
fists
fcomip
cs
nop
sbb
outsb
repz
jp
or
mov
in
xchg
in
pop
jp
jb
cmc
pushf
aaa
daa
jno
test
pop
mov
call
aas
call
sete
jmp
adcl
xchg
insl
mov
loop
push
mov
pop
jg
pop
iret
add
aam
arpl
jbe
incb
outsl
je
dec
addl
sub
xchg
int3
clc
mov
mov
xchg
sub
cmp
sub
mov
mov
ret
push
lahf
mov
push
loop
pop
aam
cltd
mov
popf
xor
subl
push
cmpsl
lcall
push
je
adc
xchg
mov
cmp
and
sub
aas
imul
filds
fwait
jle
push
incb
in
adc
and
inc
stos
enter
mov
subl
dec
xchg
call
mov
mul
sub
dec
lds
push
je
js
andl
push
das
jns
ja
cmp
lahf
lea
test
add
push
sub
mov
ljmp
xchg
push
xchg
or
push
das
add
add
fnstcw
mov
imul
mov
jp
fstpt
xchg
mov
jnp
mov
fadd
xlat
adc
inc
adc
xchg
add
or
mov
sti
mov
mov
push
xchg
dec
aam
inc
loopne
and
ret
shlb
cltd
xor
orl
imul
das
sbb
iret
push
insb
jp,pt
jg
loopne
arpl
inc
loop
int3
pop
in
popa
cs
mov
gs
scas
sti
test
mov
and
into
mov
lods
mov
hlt
je
mov
sub
ja
cli
cmp
pop
mov
in
xor
xchg
jle
cmpb
fs
inc
push
call
lods
insb
in
pop
xchg
sbb
imul
ja
fs
test
adc
push
mov
sti
icebp
pop
pop
call
jae
mov
push
inc
jmp
notl
add
xchg
rcrb
jecxz
sbb
stos
lahf
imul
sbb
cmp
dec
and
dec
mov
aad
adc
idiv
std
in
xor
cmp
aam
mov
loopne
mov
insl
sub
push
mov
sub
or
adc
push
jp
and
sub
lods
cmp
inc
mov
imul
sub
xor
add
enter
add
adc
daa
add
int3
mov
mov
aam
pop
cmpxchg8b
cli
ror
mov
xchg
das
mov
add
hlt
inc
mov
aaa
xchg
lds
dec
mov
xchg
cmp
mov
test
xchg
adc
es
push
notl
sbb
jnp
push
or
jecxz
jns
cltd
les
sbb
inc
and
mov
pop
int
mov
fcmovu
jne
lea
sbb
mov
xchg
mov
dec
hlt
lret
jns
fldl
cs
adc
push
push
cmpsb
shl
cltd
call
jp
or
xchg
mov
sbb
adc
out
mov
daa
nop
leave
int
fstpt
insl
scas
mov
lcall
out
lods
jl
pop
adc
ret
push
scas
ret
mov
fimuls
jg
nop
jbe
adc
sub
sub
aaa
mov
loop
jmp
fimuls
cwtl
xor
adc
mov
sysexit
inc
ret
hlt
dec
shlb
pop
fidivl
int3
mov
mov
gs
mul
or
in
hlt
or
call
scas
sbb
rcll
arpl
ret
mov
roll
and
push
enter
add
fcoms
dec
push
push
lret
inc
popf
fwait
movsb
adc
dec
rcrb
gs
fiadds
jmp
and
jge
adc
sub
or
jo
jmp
and
cmc
inc
jge
adc
ljmp
xchg
ret
test
and
jb
pop
sub
sbb
repz
dec
dec
xlat
jae
mov
mov
aas
scas
mov
lret
call
lret
dec
jo
jecxz
sub
pop
mov
jae
rcrb
imul
es
pusha
mov
and
ja
mov
rcrl
daa
aaa
pop
fiadds
lds
sub
push
push
sub
mov
test
and
call
xor
xor
out
ljmp
adc
add
dec
fistpl
scas
in
rorl
push
roll
add
mov
xchg
js
and
add
les
xchg
mov
xor
sub
icebp
xchg
imul
inc
xchg
jle
pop
inc
or
xor
into
aam
xor
xlat
mov
in
pushf
cwtl
aad
jo
mov
mov
into
js
or
push
xlat
sub
mov
jb
xchg
xor
dec
dec
mov
cs
or
push
nop
or
sbb
lret
stc
movsl
adc
push
rcrb
lods
pop
andl
mov
pop
nop
cmpsl
mov
and
imul
xchg
idivl
push
add
add
xchg
out
sub
call
sub
testl
lahf
xchg
fcoms
outsl
test
cmc
enter
add
xchg
repnz
out
idivl
ret
icebp
in
inc
daa
cmp
jns
cs
mov
mov
pop
jp
aaa
mov
cs
mov
cmc
and
or
xchg
jno
ss
or
int
imul
inc
jbe
mov
rcr
mov
es
xchg
jbe
or
data16
repz
sub
jns
stc
xchg
jne
cmp
mov
sub
call
jecxz
roll
xchg
out
add
std
ret
pusha
nop
or
mov
adc
out
out
rep
fdivr
mov
fcoms
jg
sbb
xchg
mov
mov
fldl2t
inc
pop
xor
imul
shl
add
mov
std
lcall
mov
cld
sub
call
fwait
enter
pop
dec
dec
iret
sahf
mov
xor
mov
dec
sbb
icebp
pop
mov
mov
cmpb
mov
pop
jp
in
stc
les
out
xchg
mov
xchg
jl
push
icebp
je
xchg
mov
in
jo
jnp
rorl
xlat
xor
xor
add
push
sti
std
jo
mov
xchg
mov
outsl
and
mov
sbb
mov
pop
cwtl
xor
cwtl
ret
mov
pop
xchg
adc
jne
cltd
imul
ja
sbb
adc
add
bound
ja
andb
mov
cwtl
popf
sub
push
aam
mov
xchg
jle
adc
add
test
notb
sub
sub
cmp
push
scas
shll
mov
xor
cld
nop
outsl
inc
push
int
neg
in
loope
pop
es
clc
shrb
js
pop
fdivs
dec
pop
xchg
ss
mov
mov
mov
jmp
cmp
into
jo
dec
daa
xchg
int3
jbe
out
int3
jl
cs
jl
inc
fistps
ss
add
and
xor
push
sub
inc
and
xlat
mov
test
push
bound
insb
into
add
jb
lahf
sub
out
jmp
and
lret
gs
cmp
or
out
fwait
testb
add
xchg
add
repz
aad
mov
cmp
scas
test
cmp
lea
cmpl
cli
dec
out
and
xor
xchg
xor
and
ret
cmc
xor
sub
pushf
adc
mov
and
jmp
push
push
xchg
jnp
push
pop
pop
aad
or
mov
or
pop
inc
sbb
in
loope
mov
outsb
jmp
aam
loop
out
xchg
outsl
cmp
imul
fsubrl
in
pop
add
sub
loope
sub
jns
dec
loop
mov
pushf
ja
push
fsincos
insb
inc
adc
mov
setp
jno
pop
pop
adc
xor
jmp
inc
leave
popa
pushf
push
sbb
movsl
cs
stos
cld
inc
and
mov
cmp
leave
xchg
sbb
or
inc
fidivs
aad
xchg
mov
mov
dec
fbld
push
jp
mov
cs
loopne
scas
andl
push
sbb
or
dec
dec
test
fsubs
and
fcoms
sbb
sbb
mov
adc
addr16
sbb
mov
adc
xchg
sahf
cmp
out
test
imul
cli
push
sbb
add
push
or
icebp
xorb
test
jp
push
inc
adc
xchg
dec
adc
ja
jg
xchg
xchg
outsb
dec
push
cwtl
pop
xchg
add
inc
or
push
dec
and
mov
fmulp
xor
fadds
movsl
fdivrl
je
addl
jnp
mov
stc
cmpl
mov
fistps
push
pushf
pop
add
adc
nop
aaa
cmc
rol
insb
mov
icebp
adc
sub
ret
cmp
sub
xor
leave
inc
xor
jno
daa
out
insb
lea
push
adc
jno
xchg
xor
xchg
in
mov
ljmp
ds
cli
lcall
cmp
or
mov
jb
mov
filds
xor
je
rclb
test
and
push
fs
sahf
test
int
adc
mov
push
addr16
andl
pop
test
sti
inc
shl
idivl
cmpsl
xor
frstor
les
punpckhbw
jl
cmpsb
dec
xor
loop
pop
cmpsb
xchg
shlb
jno
jmp
jne
shrb
lea
inc
mov
lock
arpl
call
repz
mov
sub
jle
adc
add
xor
xor
iret
mov
ja
loope
stc
lcall
inc
mov
xchg
das
or
mov
inc
sub
jle
xor
lods
cltd
loope
push
dec
out
out
lods
inc
mov
rcrl
xor
lods
mov
rcrb
adc
mov
jb
pop
xor
inc
pusha
add
ret
jb
push
fisubs
add
ss
jle
cwtl
push
mov
pusha
ret
scas
xor
mov
les
pop
mov
xchg
shlb
andb
and
stc
or
fcomp
push
lods
push
sub
fisubs
call
jb
xchg
out
shrb
fadds
sbb
adc
mov
jno
outsb
pop
in
int3
cmp
mov
mov
scas
cmc
and
cmp
mov
xor
inc
hlt
mov
movsb
fisttps
xor
repnz
mov
sub
es
mov
jl
lds
mov
cmpsb
jae
mov
jl
loope
xor
outsl
xchg
mov
cld
add
dec
enter
xchg
mov
sbb
mov
adc
pop
or
pop
lea
pusha
shrb
iret
cmp
pop
jmp
jl
inc
push
and
mov
stos
int
ljmp
cltd
scas
mov
test
jle
jmp
jl
into
mov
xor
in
mov
push
mov
imul
mov
push
xor
xor
and
sarl
mov
cmp
push
push
mov
movb
push
lods
pushf
mov
add
imul
add
ret
sub
shll
pop
clc
clc
sbb
push
dec
adc
xchg
scas
dec
add
mov
or
ljmp
adc
push
shll
adc
cli
outsl
add
test
lcall
mov
adc
dec
nop
xor
push
movsb
clc
scas
and
pop
jns
lds
push
test
add
movsb
sti
or
das
adc
into
cmp
arpl
add
push
xchg
loopne
xor
cmpsb
push
mov
pop
insl
add
outsb
enter
mov
call
cmp
sbb
pop
ja
cmp
and
imul
jne
lods
sti
xor
add
push
push
and
adc
inc
cmpl
mov
rcr
test
jae
pushf
adc
jge
pop
roll
xchg
or
sub
cmp
lcall
and
cli
dec
cmp
push
sbb
loopne
sahf
lret
lea
adc
lods
pop
fst
jnp
inc
subb
lret
subl
out
push
leave
hlt
push
cltd
dec
jp
repz
inc
add
test
mov
into
jns
idiv
mov
aam
mov
xor
jle
or
idivl
lods
popa
outsb
sub
test
sub
or
push
xchg
cld
andb
push
mov
aas
mov
insl
movsb
pushf
insl
jmp
push
jae
hlt
mov
in
xor
lea
stos
fdivrs
daa
popa
fistpll
scas
sbb
stc
dec
xchg
dec
inc
ss
or
xchg
jne
dec
cmpsl
test
sbb
mov
dec
test
xchg
mov
lock
mov
repz
mov
loope
mov
mov
xor
fdivs
test
std
outsl
fsubl
lea
push
aam
inc
daa
fcmovnbe
xchg
add
sub
mov
push
jl
pop
inc
jle
aas
sub
sarb
leave
jbe
xchg
scas
es
in
shrb
jmp
mov
xchg
sub
mov
stos
movsb
inc
cld
sub
and
pop
es
cltd
inc
jp
in
clc
adc
mov
lds
dec
aad
shrl
movl
add
xor
insb
sub
fstps
or
fincstp
cld
lahf
sub
aad
xor
mov
mov
lods
loopne
cmp
xchg
sub
sub
shl
mov
and
sub
sbb
sub
xor
adc
into
pop
cmp
fs
repnz
push
fiaddl
in
scas
sbb
pop
aam
adc
mov
sbb
jmp
subl
pop
mov
xor
push
push
jg
in
xchg
fidivrs
ss
fstpt
cld
push
xor
sbb
pop
fcoms
mov
leave
mov
and
in
fisttpll
jmp
cmc
jnp
rcrb
xchg
sub
pop
add
push
adc
dec
idivb
cmpsl
out
and
and
mov
dec
outsb
imul
sbb
data16
xor
push
jp
gs
dec
call
lds
push
mov
mov
jl
cmp
lods
data16
call
loop
mov
test
insl
orl
mov
fildll
mov
xchg
pop
lods
mov
lcall
loope
out
test
mov
frstor
jne
or
int3
lcall
mov
pushf
cmp
push
mov
adc
mov
test
loope
shll
aas
sti
dec
mov
addl
insb
aad
pusha
sub
push
and
pop
jle
sbb
lds
jle
add
cltd
je
push
int
push
not
and
arpl
adc
jecxz
ffreep
dec
or
fidivrs
or
movsb
lret
jno
and
icebp
cmpsb
int3
xchg
mov
pop
sti
les
aas
shrl
mov
imul
xor
ficoml
mov
inc
pop
lret
xchg
imul
push
out
pop
xchg
mov
sub
mov
jmp
in
xor
cmp
jmp
mov
pop
mov
fidivl
data16
jge
add
in
loop
jbe
pop
sbb
pop
fldcw
adcl
in
xchg
add
pop
adcb
std
and
pop
mov
cs
jns
outsb
jmp
cmpsb
out
fstl
scas
jle
lahf
out
sti
xchg
push
cmp
roll
cmp
sahf
xchg
mov
ret
imul
out
sbb
popf
jne
jo
jmp
pop
sbb
push
xchg
adc
adc
cmp
daa
jo
lcall
mov
aas
sbb
mov
pop
cmpsl
inc
jne
and
adcb
cmpsl
sub
in
push
cmp
inc
push
cmp
dec
adc
inc
stos
int3
ret
aas
addr16
pop
nop
movl
or
adc
cwtl
mov
in
mov
dec
inc
push
mov
adc
dec
imul
cwtl
or
jns
fidivs
in
sbb
movups
jl,pn
outsb
jmp
jge
add
mov
shll
pop
jbe
jl
mov
mov
adc
scas
mov
lcall
push
and
xorb
das
mov
sbb
push
cmpsb
in
scas
pusha
dec
cltd
aas
inc
arpl
or
add
add
sbb
xchg
movsb
ffree
sti
mov
fwait
into
nop
sbb
sbb
testl
sbb
insl
neg
jl
lods
cs
ss
jmp
lods
or
call
mov
adc
mov
and
scas
pushf
xchg
daa
pop
cmp
sarb
imul
ret
xchg
pushf
ja
cmp
inc
pop
sahf
rorb
xchg
xor
adc
popa
test
add
xor
cmp
or
outsb
scas
rorb
loopne
jns
loop
push
repnz
popf
loop
xchg
lret
psllq
cmpsb
mov
testl
je
push
stos
sbb
cmc
out
xchg
ficomps
sub
mov
call
add
mov
fs
stc
test
push
loopne
dec
dec
in
push
mov
jl
int
fistps
xchg
push
xor
mov
sti
loope
pop
stos
in
rolb
addr16
stos
lock
xchg
jae,pt
sti
insb
insl
mov
jecxz
mov
xchg
adc
or
stos
push
pop
dec
mov
loopne
scas
pop
sbb
shr
pop
daa
std
mov
mov
inc
sub
and
in
shr
or
adc
cmp
jle
cmp
mov
int
in
mov
or
fmulp
aam
mov
fwait
les
jnp
mov
and
push
stos
call
decb
sbb
cmpsb
mov
xor
push
sbb
xor
hlt
mov
mov
pop
clc
adc
inc
push
fisubrs
inc
or
xor
sbb
js
pop
push
xor
add
mov
fdivr
lods
gs
mov
scas
mov
dec
scas
ja
ror
ja
dec
fwait
xchg
fwait
clc
inc
jp
xchg
add
fcompl
xlat
mov
jmp
lock
sbb
sub
xor
enter
add
xchg
or
adc
adc
sbb
xchg
nop
lretw
xchg
mov
mov
xlat
mov
into
in
adc
cmp
and
aad
xlat
pushf
mov
pushf
in
mov
lahf
jno
lods
mov
leave
jle
movsl
ret
push
outsl
scas
mov
lock
int3
loopne
imul
out
mov
hlt
imul
rorb
sbb
or
je
xor
adc
mov
iret
repz
adc
lcall
add
loopne
lahf
imull
jne
hlt
aam
fwait
or
pop
lahf
in
std
gs
je
shll
fisubrs
repz
and
or
pop
int
out
sbb
loop
dec
cmp
icebp
out
dec
das
sbb
or
mov
pop
jge
adc
imul
xchg
int3
jno
adc
ljmp
push
sub
sub
into
mov
fdivs
push
repz
ret
icebp
js
in
loopne
ds
loope
mov
jae
fsubp
dec
cmp
inc
insl
add
jecxz
hlt
jmp
inc
inc
jge
add
lcall
mov
jl
test
pop
leave
pop
or
inc
dec
or
hlt
adc
in
loopne
int3
add
adc
stos
pop
pop
mov
fs
in
fwait
lock
cld
sub
lret
dec
xchg
xlat
lret
adc
shl
into
aas
ret
inc
inc
add
adc
jo
cmp
int
out
jbe
insl
sbb
nop
sbb
std
pop
les
sbb
scas
adc
pop
jnp
cmp
gs
repz
into
cmpsl
cmc
mov
sbb
jl
adc
xor
gs
addr16
aaa
pop
dec
clc
js
cld
jb
enter
push
ljmp
mov
cmc
test
call
pop
mov
pop
push
fnstcw
daa
pop
xor
cmp
mov
es
test
pop
dec
rclb
cwtl
sbb
pushf
imul
push
sub
popf
xor
out
dec
sahf
pop
std
loope
pop
mov
push
mov
jge
mov
push
pop
out
clc
insl
test
std
mov
adc
push
inc
stc
sbb
sub
add
pusha
shll
imul
inc
sbb
adc
lret
pop
lods
xchg
pop
jg
daa
and
cmpl
cmp
rolb
sbb
adc
pop
cmpsb
lods
out
or
enter
outsl
into
mov
popa
addb
bound
addl
stc
mov
push
pop
or
cltd
shll
scas
scas
jmp
sbb
and
xor
jne
mov
mov
sbb
mov
sub
or
pop
xchg
mov
add
push
jmp
lds
xor
test
cwtl
cli
outsb
rorl
scas
push
jmp
das
shrl
pop
add
adc
movsb
dec
fwait
push
sbb
inc
cmp
mov
jne
jle
mov
lret
pusha
pusha
pop
in
aam
inc
mov
dec
loope
in
and
xchg
icebp
mov
xchg
ja
cltd
pop
mov
test
pushf
sub
jb
cmpsb
xor
sbb
xchg
shll
push
add
in
mov
sub
mov
pop
mov
or
pop
fwait
rcrb
das
jmp
stos
mov
xchg
in
sub
gs
push
adc
and
inc
add
icebp
jge
cwtl
jb
push
sbb
adc
rcll
test
mov
inc
pop
fisubrs
shlb
les
xchg
push
mov
sahf
icebp
subb
testl
popf
and
ret
push
pop
imul
xchg
mov
mov
inc
jo
scas
aam
sub
fcmovbe
sub
je
imul
clc
adc
or
mov
jno
mov
jno
and
out
popa
cltd
std
mov
out
adc
jge
cld
dec
mov
pop
sahf
jg
and
sub
outsl
int
stos
add
push
mov
fsubl
cmp
in
inc
jnp
jge
jnp
jb
arpl
lds
fwait
addb
mov
mov
pop
outsb
sbbb
mov
mov
out
sbb
ljmp
dec
es
cmp
lea
out
pop
test
pop
cmpsb
mov
ljmp
cmpsb
jns
fistpl
or
adc
pop
xor
mov
jmp
lret
popa
stos
lcall
movsl
insl
out
jle
sub
xchg
neg
add
push
pusha
fcmovnbe
push
mov
xchg
pop
cmpsl
cmc
leave
icebp
sub
outsb
mov
ret
loope
push
into
mov
fwait
adc
add
stc
cwtl
je
fucomp
mov
out
push
movsb
add
dec
insb
arpl
jp
nop
test
jne
cmp
addr16
push
test
jl
outsb
aam
pop
js
pop
xchg
daa
dec
stos
inc
fstps
movsl
push
lcall
stos
xchg
mov
iret
insb
lret
adc
or
mov
mov
addr16
pop
xchg
or
subb
es
fstp
cwtl
test
xchg
adc
daa
test
jp
cmp
cmp
gs
push
aas
and
mov
mov
in
fisttpll
cmp
cmp
sub
sub
int3
or
lret
shrb
stos
jns
mov
enter
adc
jno
out
dec
sub
cmp
sbb
loopne
pop
jo
movsb
mov
test
adc
not
call
test
das
jp
dec
pop
jae
lods
ss
loop
sti
mov
jle
adc
inc
arpl
and
jb
imul
daa
mov
lea
add
cli
out
mov
fistpll
pop
sbb
pop
stos
or
xlat
inc
cmpsb
fldenv
mov
xchg
jg
xor
pop
cmp
inc
xor
inc
test
xor
pop
add
shl
jmp
loop
push
movsl
or
lock
mov
adc
sbb
fwait
daa
push
fisubrl
into
adc
testb
jno
leave
je
mov
mov
daa
dec
insb
adc
dec
jp
dec
jnp
fbstp
adc
mov
out
sbb
mov
ds
jne
sbb
jae
jp
insb
lods
cmp
fsubp
jno
dec
jo
das
pop
in
add
xchg
lock
aaa
adc
xor
lret
xor
and
mov
mov
jbe
pop
mov
hlt
and
scas
push
push
jno
dec
jecxz
hlt
pop
sbb
jae
daa
mov
mov
pop
pop
mov
stos
push
jmp
cwtl
int3
xor
dec
pop
fldt
add
or
sarb
inc
cmp
mov
outsl
mov
add
js
jbe
dec
jge
and
rcll
out
xchg
cmpsb
pop
movsl
aas
push
push
dec
jge
xchg
subl
std
imul
and
pop
jmp
mov
jns
dec
sti
fwait
insb
stos
sarb
and
push
sub
loope
mov
es
fwait
mov
xchg
add
shlb
shrb
sbb
sahf
sbb
mov
sbb
into
push
push
pop
mov
and
or
or
mov
and
sbb
cmp
cmpsb
mov
ja
icebp
out
movsl
inc
cltd
inc
sub
nop
nop
pop
lea
inc
and
jnp
lods
xchg
les
aas
int3
pop
fs
out
and
aam
inc
pop
ds
dec
cs
lret
clc
mov
out
and
pushf
pop
movsl
fcomps
adc
jmp
vmwrite
xchg
push
out
mov
fistpl
xlat
dec
repz
ja
pop
pop
mov
jo
cmpsl
ss
jbe
sub
inc
mov
push
mov
jne
xchg
out
dec
push
pop
dec
fcomps
adc
jo
ret
or
xor
mov
mov
inc
int3
movsl
inc
sbbl
adc
mov
push
jae
pop
sub
movsl
mov
add
mov
inc
xchg
jp
xchg
and
les
rorl
xchg
push
repz
or
pop
call
fistpll
cmp
leave
cmp
cmp
out
pop
fsubrl
dec
lea
jnp
es
leave
cmp
das
sti
inc
sub
mov
xorb
jle
call
jb
bound
sahf
xor
or
xchg
push
ret
pop
xchg
pop
subl
dec
fldenv
insb
jge
cmp
push
pop
cmp
sub
ret
idiv
outsb
mov
cli
pop
adc
push
addb
cmp
pop
dec
arpl
dec
sti
push
jmp
add
xor
xorb
arpl
cmp
sahf
sub
inc
test
gs
es
lods
bound
jns
jno
or
cmpsl
xchg
cld
jg
mov
decl
or
mov
sub
inc
add
add
pushf
jmp
in
jae
fwait
ret
adc
cmpsb
dec
stc
rorl
xchg
call
mov
pop
call
jb
dec
dec
xchg
or
xor
out
out
shll
xor
sbb
push
imulb
inc
cmpsl
popa
test
pop
scas
push
aas
sbb
jb
pop
push
push
int3
pop
and
xchg
sub
nop
jae
mov
push
pushf
int3
test
enter
mov
or
cwtl
mov
lret
mov
das
inc
fsubl
mov
push
and
ret
xor
cmc
push
mov
in
movsbl
xor
jb
xchg
jge
insl
mov
push
cmp
dec
or
jge
sub
outsb
divl
push
std
push
shrd
pop
push
inc
lods
lock
dec
fxch
test
push
mov
mov
addr16
push
stos
lret
xor
and
pop
or
pop
in
sahf
out
add
push
or
and
xchg
cmp
lds
jbe
out
scas
ret
adc
cmp
test
jo
daa
and
rorb
lods
xchg
in
push
dec
adc
cmp
cmp
pop
pop
stc
movsl
outsl
dec
mov
lods
sub
pushf
mov
adc
bound
fcoms
roll
mov
in
xlat
mov
shl
mov
push
mov
neg
je
icebp
dec
mov
mov
cli
pop
push
fidivs
pushf
rcrb
cmovns
arpl
orl
in
or
fistpl
fisttpl
xor
insb
sbb
dec
push
sbb
cmp
lahf
sti
cmp
arpl
push
xor
mov
and
mov
cwtl
pop
inc
dec
mov
clc
mov
stc
and
jns
mov
lods
pop
in
lret
pop
in
xchg
mov
mov
push
pop
popf
push
cwtl
or
call
lods
mov
xor
cwtl
pusha
lahf
jp
adc
in
negb
jb
ljmp
adc
xchg
clc
out
iret
cld
mov
mov
sahf
or
dec
xlat
dec
pusha
aad
push
out
mov
jne
jl
push
nop
dec
lret
sub
fcmovb
jbe
cmc
pop
xchg
adc
test
jg
dec
push
xor
lret
sub
into
inc
dec
push
push
cmp
cli
cmp
adc
repz
add
or
test
xchg
jg
aad
adc
push
daa
sbb
in
sahf
icebp
pop
cmp
adcl
data16
add
mov
cmp
adc
popf
ret
jo
shlb
pop
subb
pop
scas
testb
inc
mov
dec
mov
lcall
push
and
ss
lcall
mov
push
movsb
pop
xchg
popf
sbb
mov
xor
mov
fs
sbb
sti
jmp
fs
loope
enter
scas
inc
sbb
inc
insl
ds
lret
and
xchg
push
fs
mov
adc
inc
lods
ja
push
sbb
pop
sarl
mov
dec
mov
xor
out
in
clc
mov
jmp
dec
mov
ss
mov
xchg
fs
inc
sub
fisttpl
pop
push
adc
cmpsl
loope
and
and
cmp
popf
outsb
push
mov
hlt
adc
jge
adc
add
mov
jne
fld
in
or
lahf
jmp
pop
in
in
or
jo
jp
repnz
cmp
fmuls
pop
or
scas
push
or
push
lods
mov
aas
fidivs
mov
fwait
sbb
test
stos
ret
movsb
sbb
inc
out
clc
pop
aad
fsubs
int3
and
push
jae
pop
push
mov
push
pop
inc
xor
iret
icebp
stc
sub
pop
cli
jle
aaa
sbb
lods
mov
out
hlt
jle
add
pop
rorb
shrl
mov
test
xchg
mov
fcom
dec
inc
xor
jo
fdivl
jp
sbb
cmovbe
test
lcall
fidivl
xor
aaa
data16
add
jge
imul
fdivr
mov
mov
das
movsb
lret
data16
outsb
leave
add
adcl
push
push
jnp
sarl
lock
ljmp
inc
repnz
rcrb
int
test
test
jle
add
dec
lcall
lcall
ljmp
sar
int3
mov
jmp
xchg
fists
mov
das
loope
scas
daa
jb
xchg
ficompl
xchg
test
dec
and
test
nop
push
mov
cmpsb
push
or
cmp
adc
push
push
mov
lret
jae
mov
lock
imul
push
popf
jge
push
lods
cmp
xlat
sbb
fldcw
sub
and
push
stos
scas
jg
ljmp
jle
sti
out
sbb
xor
sbb
shll
cld
into
push
pop
cmpsl
fstpt
xchg
ret
xchg
cmp
sbb
sbb
dec
test
sbbb
mov
jns
cmp
xchg
sbb
pop
ficoml
je
lock
mov
xchg
pcmpgtd
je
dec
outsl
cld
pop
mov
jl
mov
sahf
outsl
dec
cmp
inc
sub
stos
scas
pop
sbb
cmp
sub
inc
movl
cli
jp
jmp
fscale
sbb
decl
ds
mov
cs
or
lea
scas
mov
out
clc
fsub
call
aas
outsl
roll
and
aam
jae
and
ret
mov
fs
push
stos
add
xchg
jmp
add
adc
mov
push
push
cmc
sahf
mov
inc
ds
int
gs
push
fmuls
fstpt
xchg
jno
adc
lcallw
pop
stos
push
adcb
inc
rorl
std
jmp
inc
dec
jecxz
sub
push
cmp
pushw
jns
pop
pop
out
mov
aam
sarb
xchg
xchg
ret
sub
repnz
ljmp
cltd
ss
mov
data16
or
test
jnp
push
imul
push
insl
pop
cmp
push
fcmovb
js
test
or
or
mov
cmp
mov
jg
or
inc
pop
pop
arpl
fsubrl
mov
cmc
cwtd
shlb
arpl
clc
faddl
dec
addl
inc
jp
je
xchg
jae
fdivl
arpl
dec
mov
das
xchg
pop
and
mov
std
inc
add
fwait
out
ret
sahf
sub
aas
cmc
outsl
test
repnz
scas
mov
lods
test
orb
lret
sti
push
daa
xchg
push
sub
pop
mov
xchg
movsl
call
je
pushf
adc
je
stos
lret
roll
adc
fisttps
nop
jp
jecxz
mov
fidivrs
stos
sbb
addb
cmp
cmp
xor
cmp
push
sub
sub
mov
pop
int3
mov
and
adc
sub
sub
sbb
add
inc
outsb
repnz
sub
into
jnp
ljmp
in
push
mov
xchg
loopne
mov
or
addr16
push
fld
pop
sub
and
arpl
mov
mov
xor
inc
push
add
das
test
xor
xadd
push
leave
outsb
push
jp
popf
shll
bound
notl
xor
js
lcall
inc
cmp
mov
push
sbb
jg
iret
add
push
xchg
testb
push
rclb
dec
adc
mov
loop
jnp
ficompl
sub
cmp
pop
xchg
inc
jp
or
sub
leave
idivb
adc
cmc
lock
stos
adc
sub
adc
cmp
mov
je
jno
cld
mov
mov
adc
fdivs
jns
pop
push
gs
and
xor
bound
pop
jmp
xchg
mov
sahf
ss
and
mov
cmp
scas
add
and
dec
adc
mov
cld
dec
xchg
or
pop
sbb
jle
cwtl
pop
sub
xor
sahf
and
aam
xchg
xor
inc
dec
int
push
rclb
cmp
sahf
add
hlt
aad
mov
lock
cmpsb
sti
mov
sbb
sahf
int
cmp
pop
stc
mov
push
mov
push
shll
mov
xor
sub
xchg
dec
xor
xchg
lds
mov
je
mov
and
ds
jl
icebp
fwait
adc
fisubrs
pop
cmpsl
adc
push
fs
repz
inc
addl
dec
mov
inc
mov
mov
cmp
pusha
add
arpl
enter
lret
jb
sar
sbb
and
std
pushf
xchg
add
cld
or
xchg
ja
out
mov
test
psrad
movsl
sbb
dec
pop
in
and
and
inc
jmp
fwait
dec
test
dec
cmc
mov
jp
jne
bound
sahf
sarl
mov
test
aas
fsts
mov
fdivrs
aam
loop
mov
aaa
sbb
inc
push
popa
loope
ja
aaa
ret
cmp
xchg
loopne
or
mov
add
shrb
jle
xchg
jle
rcll
dec
sti
adc
jecxz
dec
xor
insl
in
shrb
mov
xchg
xlat
jmp
roll
data16
into
inc
test
fsubrs
add
cld
enter
jne
imul
jb
push
jmp
xor
sbb
push
adc
and
rorb
mov
outsb
dec
loope
je
fdivr
call
shrl
ret
in
cmpb
mov
js
mov
pop
ret
mov
push
cs
mov
add
adc
mov
cmpsl
leave
imul
inc
imul
aaa
das
adc
cmpl
shrl
xor
hlt
call
dec
lcall
std
dec
adc
dec
shlb
lahf
xchg
push
sub
mov
test
mov
push
sub
arpl
mov
cmpsb
imul
mov
pop
fadd
lret
cmp
shlb
add
mov
mov
ljmp
or
out
rcrl
xchg
mov
jge
jb
adc
jge
in
loop
out
dec
cmp
push
in
pop
jecxz
sub
mov
daa
or
and
lea
and
pop
jg
popa
outsl
pop
xor
inc
test
fiaddl
push
je
dec
mov
push
stc
or
in
fistpl
mov
neg
sub
enter
sarb
mov
lret
jmp
mov
int
or
sbb
jb
sbb
ljmp
jle
inc
inc
xchg
in
cmpsb
mov
sbb
xor
test
sbb
cld
insb
mov
and
lahf
or
push
add
mov
insl
loop
pushf
mov
test
xchg
pop
adc
dec
sahf
xchg
inc
push
pop
cmp
icebp
and
ret
in
arpl
push
mov
cld
jg
imul
jl
ds
or
push
push
sti
cmp
repz
push
int
push
inc
pushf
add
push
sub
xchg
mov
dec
mov
lock
out
and
shlb
mov
cmp
fnstsw
mov
jbe
xor
sub
xchg
data16
adc
xor
mov
lret
aam
loope
out
mov
xor
outsl
mov
int3
imul
sbb
arpl
add
sub
pushf
sti
xchg
loop
jecxz
push
sbbl
inc
lret
mov
mov
pop
sub
sub
sub
movsb
dec
pop
sahf
jne
sbb
daa
push
mov
mov
mov
jle
xor
cmp
pop
push
mov
test
mov
jecxz
popf
test
or
insl
enter
jecxz
push
push
dec
cmp
mov
ja
lret
and
cmp
dec
mov
cli
sub
mov
fisttpl
jmp
fcomi
sbb
mov
push
scas
shlb
mov
xor
push
push
lcall
push
std
les
mov
jb
bound
or
xor
fidivl
mov
pop
mov
and
lret
xor
lahf
jae
inc
inc
xlat
mov
cwtl
loope
out
fcoms
jp
dec
icebp
fisttpll
lods
or
test
aaa
and
nop
shlb
inc
adcl
ret
das
mov
mov
jbe
sub
push
push
adc
and
xchg
movsl
push
xchg
ds
addl
dec
lods
loop
stc
cmpsl
inc
bound
sbb
push
fidivrl
mov
inc
pop
and
shll
inc
mov
mov
xchg
jb
inc
push
aas
pop
stos
mov
sti
leave
mov
sbb
pushf
push
cmpsb
imul
data16
mulb
sub
jbe
mov
push
push
adc
cld
mov
pop
xorb
jecxz
dec
adc
add
test
mov
js
sub
mov
xchg
hlt
xchg
loope
in
lret
mov
repnz
sbb
mov
and
jb
xchg
mov
lods
fidivs
cltd
jmp
shrb
add
addb
adc
insb
int3
leave
push
bound
xchg
dec
pop
aas
jnp
bound
in
pop
adc
dec
push
jbe
add
test
repz
sbb
roll
loop
sub
add
xlat
and
and
movsl
jg
lock
pop
jns
rclb
ljmp
xchg
push
jae
pop
aam
mov
jecxz
stos
outsl
mov
lret
ja
dec
std
pop
lods
pop
xchg
aam
jge
xor
or
sbb
test
push
and
das
pop
cmp
loop
test
lods
push
test
lea
fsubs
add
clc
sbb
add
xchg
push
mov
ret
stos
jno
sub
and
lods
or
popa
movsb
rolb
mov
cmp
cs
repz
xchg
inc
rclb
push
inc
lds
dec
decb
lods
divl
push
mov
jl
lret
mov
mov
push
xlat
sarb
cmp
dec
adcb
lea
enter
and
jle
sub
pop
stos
jp
jb
mov
mov
rcrb
mov
std
in
leave
sub
and
pop
paddsb
imul
xchg
jnp
cmp
mov
aaa
shr
mov
push
gs
xor
xor
mov
adc
mov
sub
fisubs
xor
push
dec
fwait
jle
mov
ret
sti
inc
bound
imul
in
push
mov
jmp
xor
ret
jmp
imulb
enter
push
in
dec
xor
out
insb
cs
imul
mov
ss
ds
jae
and
dec
adc
les
or
mov
bnd
inc
xchg
and
dec
into
popa
mov
nop
pcmpeqb
jb,pn
or
fld
or
sti
mov
fmul
jb
das
insl
sub
adc
pop
pop
cmp
or
xchg
xchg
xchg
inc
mov
push
out
stos
movsl
sahf
xchg
movsl
out
pop
je
lret
imul
icebp
push
std
xor
sub
ret
xchg
xorl
addl
rcll
in
xchg
xchg
xor
cmp
mov
sbbb
inc
pop
and
divl
sub
dec
adc
xor
aaa
pop
add
in
dec
mov
pop
testb
push
jle
out
or
adc
imul
mov
test
mov
cmp
lods
mov
int3
hlt
pop
in
lret
jge
ss
inc
mov
lret
or
push
lret
ss
repz
fcomp
sahf
int
push
fisttps
cmp
and
lods
adc
jl
rol
push
sbb
pop
jae
jns
adc
popf
lods
je
andl
mov
xchg
inc
cli
mov
push
xchg
leave
adc
mov
jge
mov
les
lret
in
into
pop
pop
outsb
xchg
lret
mov
pop
in
pushl
and
dec
sbb
and
push
in
stos
aad
hlt
bound
ljmpw
add
daa
mov
pop
mov
scas
test
mov
repnz
xor
sub
and
mov
lret
in
in
xchg
sbb
fstpt
ret
adc
insb
xchg
incb
imul
jmp
orl
aas
mov
sub
dec
fisttpl
rep
and
fcoms
push
cwtl
fstps
sbb
scas
mov
scas
xchg
sub
push
sti
inc
stc
adc
jge
jne
inc
push
fdivrl
sbb
dec
xor
vsqrtps
pop
aam
jp
sar
jg
outsb
insb
cwtl
scas
mov
sbb
adc
mov
push
lret
mov
jne
aas
jl
xor
cmc
adc
addr16
je
shrl
cmp
jbe
sbb
xlat
fisttps
imul
pop
les
sub
ret
popf
inc
adc
in
test
ljmp
mov
gs
das
andl
push
mov
push
cmp
inc
lods
mov
mov
test
adc
add
arpl
cwtl
jnp
pop
mov
mov
xchg
mov
jb
xchg
addb
lods
mov
jge
imul
lret
adc
xchg
int3
push
fnstenv
jb
cmpsl
and
inc
popf
sub
sahf
xorl
cmp
xlat
out
and
fcmove
ds
rcl
test
mov
jo
inc
add
adc
data16
mov
clc
subb
lahf
pop
clc
movsl
sahf
add
cmpb
scas
cmp
scas
test
jle
inc
lea
jge
dec
and
in
pop
lods
adc
add
out
sbb
loope
push
push
imul
mov
call
pop
pop
pop
jge
negb
test
nop
test
push
arpl
add
mov
cmp
adc
sub
jbe
clc
pop
call
jg
stos
push
and
int
cmp
mul
loope
rorl
push
in
lcall
sbb
out
sbbb
sub
stos
sbb
mov
push
mov
sarl
data16
pop
fnstcw
loope
mov
mov
dec
lods
adc
das
xchg
insl
sahf
movsb
inc
mov
cmp
cli
andb
in
jnp
das
adc
xchg
cmp
rcll
in
fstpl
mov
push
adc
fdivrp
xchg
rolb
fstps
jecxz
call
hlt
jae
cmp
xchg
fdivp
dec
push
in
pop
std
idivl
or
add
in
xchg
int3
adc
push
inc
out
shrb
xchg
and
pushf
stos
sahf
add
int
in
push
cmpb
pop
aas
cs
inc
fcomps
pop
in
cmp
push
fistpll
lds
mov
es
xchg
ffreep
push
ljmp
inc
or
push
call
and
scas
ja
inc
dec
jns
pop
add
inc
rcrb
rorl
adc
dec
push
decl
pop
sbb
jo
popa
mov
push
push
ljmp
fiadds
dec
mov
or
aam
js
dec
pop
xchg
pop
lock
dec
adc
add
xchg
lret
aaa
mov
sbb
into
sub
out
mov
push
sub
rorl
insb
pop
scas
xchg
lret
push
push
xor
jecxz
cld
push
adc
rcrb
ja
and
inc
dec
add
dec
test
cmp
mov
or
cli
out
mov
inc
dec
pop
aam
std
mov
dec
xor
xor
cmp
adc
push
jns
push
incl
dec
push
mov
icebp
repz
pop
je
add
sti
cmp
je
stos
insb
or
or
sti
jo
stc
icebp
sub
enter
aam
cmpsb
out
xchg
sub
mov
lret
in
test
mov
adc
bound
sub
jnp
pop
push
dec
daa
test
xchg
ljmp
movsb
iret
fsts
aas
pop
shrb
cmc
imul
cltd
sbb
movsb
int
out
cmp
arpl
aas
cmp
jo
add
mov
fistl
mov
jp
mov
shll
and
sub
pop
mov
inc
pop
insb
jmp
lret
lods
fistl
cltd
cmpsl
push
shrl
mov
pop
mov
mov
jmp
lahf
cmc
cltd
xor
std
mov
mov
mov
push
test
mov
popa
inc
fisttpl
pop
in
mov
inc
pop
int3
and
mov
adc
adc
aas
fmull
cwtl
and
cmp
insb
mov
test
lahf
sub
mov
fimuls
out
and
rolb
adc
imul
pushf
mov
cli
fwait
inc
dec
sbb
mov
jae
or
xor
pop
push
adc
in
rolb
ja
adcb
idivb
rcrb
js
frstor
lods
fdivrp
test
push
fisttpl
pop
rolb
pop
push
outsb
test
inc
pop
fdivl
adc
ljmp
leave
inc
jb
and
out
mov
test
sti
adc
pop
loop
add
or
into
mov
dec
cmpsb
testl
add
cmpsb
ficomps
fildll
pop
cli
push
fst
mov
fistl
movsl
sub
cmpsl
lret
test
xor
add
stc
mov
popa
xlat
into
loope
pop
sub
notl
sbb
sub
mov
addr16
push
in
push
popa
ret
and
dec
in
add
xor
pop
push
jbe
adc
push
cs
lahf
icebp
std
enter
aam
leave
mov
es
mov
xchg
xchg
sub
adc
pop
dec
add
xchg
add
fwait
movb
test
mov
cwtl
inc
sub
pop
jb
pop
cmp
mov
cltd
inc
vpmulhuw
cmp
test
insb
movsl
scas
jb
xor
pushf
iret
leave
sub
inc
mov
adc
negl
inc
jecxz
rorl
jle
das
ss
add
adc
xchg
xchg
fnstsw
lock
orb
pop
and
adc
es
scas
push
lds
fdivl
adc
loop
mov
or
push
cmpsl
xor
jl
test
mov
push
js
je
mov
out
into
push
in
dec
icebp
inc
enter
pop
xchg
cli
enter
stc
mov
fcoml
jl
lods
ljmp
pop
add
and
dec
pop
shll
push
ret
test
cmpb
jg
aam
adc
ljmp
aas
mov
cmpb
cmp
cmp
mov
push
sbb
add
sarl
adc
aas
fsubs
lods
or
add
xchg
call
pop
aad
lods
sub
sbb
adc
push
out
sti
add
adc
push
rorb
stos
and
and
out
pop
rcrl
icebp
test
mov
sbbl
pop
mov
sbb
jne
dec
in
or
imul
mov
into
cld
xor
and
insl
jne
data16
fsubrs
inc
fsubl
aaa
dec
subb
test
dec
or
xor
mov
stc
mov
inc
mov
adc
cmp
lahf
push
dec
mov
ljmp
mov
in
mov
sbb
sbb
cwtl
push
mov
cli
inc
sub
xchg
mov
movsb
push
les
sbb
or
test
sbb
js
mov
dec
jle
pop
insl
mov
imul
movsl
jmp
inc
rcr
in
or
push
add
stos
jl
cmpsb
insb
cmc
data16
cld
loope
pop
iret
daa
int
aam
mov
movd
repnz
vpsubb
add
or
in
cmp
jmp
xchg
jb
jne
repz
mov
mov
lahf
rcrl
inc
sbb
je
subl
stos
adc
push
stos
fldenv
daa
in
je
pop
xor
inc
mov
call
mov
lret
add
cmpsb
dec
cmpsb
call
cmp
jp
inc
fists
adc
jnp
ljmp
dec
or
out
dec
mov
aam
xchg
sbb
mov
push
std
stc
test
jl
mov
mov
xor
and
shll
sbb
xchg
mov
jp
cltd
andb
adc
mov
ret
jns
mov
and
cmc
fwait
movsl
mov
or
hlt
push
xor
or
in
xor
subb
scas
push
adc
iret
aaa
aaa
fistpl
pushf
out
push
and
xor
cs
iret
jecxz
pop
lea
mov
fwait
dec
lea
fildl
fdivs
ret
stos
sub
push
push
xchg
stos
sahf
jge
sbb
rcrl
xchg
xor
into
jne
mov
jno
cwtl
leave
mov
shrl
sbb
mov
jmp
sub
fsts
test
cmc
test
movsl
add
sub
out
pop
xor
pop
dec
dec
xchg
push
into
add
xor
cmpsb
jno
mov
dec
dec
icebp
mov
mov
pop
pop
scas
mov
mov
sbb
imul
rcr
pushf
pop
adc
call
movsb
sub
cltd
imul
aaa
mov
negb
cld
mov
cltd
sub
bound
cwtl
add
cmp
add
mov
and
call
cld
out
decl
cltd
or
mov
popa
test
push
pop
mov
xor
mov
jno
inc
jle
loop
push
fs
in
ljmp
ret
pop
loope
rcl
inc
rol
mov
adc
int
add
xor
add
pop
fwait
push
cmc
ficompl
jae
ja
add
cltd
pusha
dec
enter
subb
test
fiadds
xchg
das
cld
add
dec
ss
cmc
test
jl
or
dec
lea
loop
movsb
daa
lds
push
arpl
cmp
ds
out
ffreep
mov
outsl
mov
cmc
mov
mov
xor
push
js
ljmp
add
stos
int
and
icebp
jnp
imul
dec
dec
jbe
pop
mov
push
stc
dec
lods
mov
jl
dec
inc
cmpsl
dec
cmp
shll
int
lods
jmp
lods
inc
addr16
negl
dec
loopne
punpckhdq
dec
mov
add
or
xchg
mov
mov
sbbl
in
adc
sarb
xlat
in
xor
jb
push
jb
bound
mov
jle
jle
leave
les
bound
divb
jbe
or
mov
adc
loop
or
sub
lahf
fdivr
add
popa
mov
push
cwtl
push
jne
add
mov
sub
aam
imul
fcompl
or
jecxz
jg
pop
cmpsl
stos
push
or
dec
push
and
xor
lods
das
in
pop
stos
sub
dec
mov
jge
test
xchg
jno
add
push
outsl
mov
sarl
mov
push
jle
adc
in
and
in
sub
in
out
jle
and
ror
dec
icebp
mov
loopne
xchg
sbb
sub
fwait
pop
cmc
or
sub
cmp
lods
push
lcall
push
or
jnp
xchg
push
adc
add
push
testb
xchg
ds
pop
pop
and
scas
into
loop
out
loope
out
cmpb
bswap
insl
aaa
sbbb
movsl
sub
inc
jb
add
not
mov
or
adc
addr16
jo
mov
mov
fisubs
fbld
mov
dec
jmp
out
push
popf
mov
sub
adc
mov
outsb
sub
dec
pusha
fcomps
shr
cmp
cwtl
xor
lock
xchg
jge
pop
lea
mov
sub
adc
insl
jl
gs
enter
xchg
enter
js
in
or
push
mov
inc
and
add
repz
add
pusha
into
cltd
cmc
cmp
mov
inc
daa
enter
insb
sbb
inc
shlb
and
or
jg
mov
cmc
fildll
and
xor
mov
repz
mov
xchg
insb
into
mov
insb
lret
sub
icebp
mov
or
adc
fbstp
jo
in
or
fs
adc
push
mov
sbb
ss
xchg
inc
ljmp
ds
mov
scas
pushf
sub
insl
inc
inc
repnz
lods
in
shlb
jecxz
mov
test
lcall
cmp
mov
ret
out
cmp
mov
and
xor
xchg
sub
adc
mov
popa
pop
insl
mov
out
mov
pop
pop
imul
mov
stos
jno
shrl
shrl
test
gs
inc
xor
ret
gs
in
in
cmp
xor
dec
fadds
es
lret
jnp
dec
inc
clc
je
fmuls
mov
fsubs
outsl
mov
inc
ljmp
jg
inc
inc
mov
fadd
es
xlat
adc
out
lods
add
fwait
mov
mov
push
add
sahf
imul
or
push
xchg
inc
ja
out
js
fdivrs
fstpt
nop
or
aas
dec
dec
scas
sub
fs
jl
addr16
inc
jne
int
daa
pop
and
mov
or
xchg
pop
rol
cmpsb
pop
repnz
mov
out
mov
rcl
test
icebp
out
movsl
inc
and
fidivs
pop
mov
fcom
lcall
lahf
pop
fidivl
xor
in
push
dec
sbb
call
test
pop
clc
sub
ret
lret
jl
cmp
ss
and
imul
or
pop
sbb
aad
lret
push
xchg
pop
mov
jg
in
sub
fisubrs
cmp
mov
pop
sbb
mov
jg
push
dec
pop
pop
xchg
adc
idivl
out
lret
pop
mov
or
aaa
jne
cwtl
xor
pop
daa
hlt
hlt
add
mov
cmp
loopne
gs
sub
js
xlat
jp
roll
das
nop
push
cld
jmp
xchg
sbb
pop
push
sub
sbb
cmp
add
int3
add
out
and
cmpsb
or
add
push
arpl
dec
rol
cli
cmp
dec
jge
add
pusha
xchg
aas
enter
xchg
cmpsl
push
push
xchg
jno
test
in
jo
dec
xor
fcomps
addr16
jne
lock
loop
cmp
pop
pop
adc
inc
out
or
and
jl
daa
inc
ljmp
rcr
test
lahf
xchg
xlat
pop
cmc
sbb
and
pop
lock
shlb
das
ljmp
pop
fs
push
or
cli
and
sub
pop
jns
repz
and
rcrb
cmc
sti
stos
mov
xchg
adc
fdivp
mov
movsb
in
lahf
inc
pop
pop
push
cltd
xchg
testb
rcrb
jnp
repz
adc
inc
sbb
cmp
jns
push
and
adc
loopne
frstor
jp
adc
leave
sub
push
mov
subl
sub
iret
dec
ret
cmp
cld
sub
cmp
pop
subl
fildl
push
xor
popa
and
ss
or
dec
pop
cmpsl
inc
dec
loopne
cmpsb
push
outsb
shll
mov
push
out
dec
stc
shl
jmp
xorb
pop
lret
xchg
sbb
scas
addr16
cltd
out
mov
mov
out
xor
in
dec
clc
test
fisubrl
or
add
add
add
add
add
fstpt
cltd
xchg
outsb
adc
add
jle
cmp
int
mov
icebp
push
adc
mov
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
cmpb
lods
repnz
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbbb
cs
mov
cmc
fstpt
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
cmp
mov
jp
add
pusha
add
add
faddl
add
inc
add
aam
add
adc
add
adc
cmp
add
add
repnz
push
jo
inc
inc
add
rolb
add
in
add
add
add
add
sub
add
xchg
es
add
repnz
rorl
or
xor
add
add
add
add
add
add
shll
or
add
add
add
add
add
add
add
test
fadds
add
add
cmpsl
ss
lods
xchg
mov
add
rolb
add
or
add
add
add
subb
pushf
leave
scas
sahf
xor
add
push
add
add
add
add
subb
sbb
add
add
iret
add
add
pop
mov
in
add
push
add
add
add
add
popf
sub
add
ret
xor
add
add
fstpl
hlt
mov
mov
push
add
add
push
mov
add
add
flds
adc
add
add
add
sub
jnp
jp
out
add
test
fcoml
or
mov
inc
cltd
cld
rorb
mov
pop
mov
dec
setno
pop
sbb
dec
cmpsl
mov
pop
fidivs
outsb
push
and
mov
stos
mov
pop
adc
push
rol
push
stc
cmp
mov
je
dec
mov
out
push
sub
testl
in
sub
mov
sbb
adc
inc
mov
test
imul
fdivr
and
shrl
ds
lret
je
push
and
test
scas
popa
xor
pushf
stc
and
inc
dec
and
xor
cmp
adc
lods
int3
push
or
pop
mov
das
xchg
es
xchg
stos
inc
sbb
notb
aad
dec
dec
push
std
or
lahf
mov
xchg
gs
imul
sub
out
pop
inc
mov
ja
in
add
cmp
cmp
inc
jo
hlt
es
mov
mov
ret
push
adc
shl
sti
mov
push
shll
mov
outsb
dec
cmpsl
pop
stos
test
mov
inc
loope
movsb
aad
sub
mov
push
rorb
add
or
fstp
jbe
shl
ror
sub
cs
lahf
add
sbb
xor
cmc
mov
sti
fstps
sub
push
cmpl
inc
mov
mov
popf
mov
stos
cmp
cli
fdivs
mov
cmp
dec
std
mov
cmp
dec
repz
rcr
aas
sbb
lret
and
jnp
call
lret
inc
xchg
movsb
std
xor
lods
mov
mov
ss
fcomp
xchg
xchg
je
xor
pop
inc
test
sub
pushl
sub
std
push
mov
push
andb
sbb
xor
int
cld
push
sub
inc
pop
mov
jnp
pop
push
jl
push
rclb
ret
jge
push
push
mov
mov
pop
lcall
test
movsb
addr16
imul
or
mov
inc
and
leave
hlt
mov
int3
jp
mov
aad
sub
addr16
arpl
lahf
ljmp
icebp
dec
push
lcall
icebp
out
movsb
call
daa
je
dec
pop
pop
dec
stos
lea
dec
ret
mov
mov
sub
sti
or
dec
cwtl
in
add
ljmp
lret
xchg
iret
loopne
add
test
mov
sub
addl
cld
iret
inc
stos
sbb
insl
daa
push
roll
and
jle
pop
adc
addl
cmp
rcl
ret
mov
add
mov
lret
sub
push
clc
mov
pop
jns
mov
out
into
scas
jb
je
fs
xchg
pop
dec
adc
dec
jo,pt
in
sbbl
push
mov
sub
adc
pop
add
stc
sub
push
icebp
lods
aas
push
xor
mov
push
adc
test
lods
mov
mov
pop
xchg
sbb
cmpsb
cli
mov
lock
lcall
and
repz
mov
inc
add
mov
sbb
jnp
daa
stos
jg
push
xchg
outsb
xchg
adcb
sub
push
push
xor
and
arpl
dec
inc
test
mov
mov
in
movsb
push
in
jl
xorb
lcall
cltd
mov
inc
icebp
cs
mov
cmpsb
pop
dec
sbb
add
arpl
adc
negb
dec
mov
push
popa
xor
pushf
jbe
dec
pop
or
xchg
xchg
mov
xchg
lock
fdivp
xchg
shll
dec
dec
inc
inc
cltd
bound
test
xor
xlat
sti
lds
cld
push
arpl
arpl
xlat
aam
inc
test
lds
jecxz
push
add
pop
fimull
lret
sub
out
or
mov
inc
add
mov
sahf
mov
add
icebp
dec
repz
std
inc
mov
add
adc
inc
jbe
inc
mov
push
rcrl
pop
inc
insb
aas
aaa
inc
insl
mov
pop
orl
mov
hlt
jbe
fwait
xor
dec
pushf
fwait
or
cmp
pushf
sti
fstps
adc
mov
hlt
icebp
out
daa
fldl
lahf
inc
cli
adc
bnd
mov
neg
xor
imul
mov
aad
mov
aam
loope
or
push
adc
addr16
insl
adc
js
xchg
into
decb
fisubs
dec
mov
or
fsubrs
cmpsl
sub
out
sub
stos
movsl
push
jne
push
xchg
ret
pop
notb
mov
pop
out
jle
insb
pusha
xchg
popf
and
jle
imul
popf
pop
add
jmp
leave
jl
dec
in
mov
inc
outsb
stc
sub
push
jo
xor
or
push
sbb
popf
call
aaa
aas
adc
inc
fiadds
adc
in
arpl
sbb
lahf
cltd
icebp
addb
rolb
lock
adc
cli
jl
sbb
sub
sub
in
sti
push
shll
push
icebp
jne
jnp
mov
pop
pop
std
ss
sub
xlat
xor
daa
std
xorl
dec
shll
int
ljmp
jb
push
lahf
insb
test
push
popf
cmp
sarl
in
push
ret
dec
add
dec
inc
and
adc
js
xor
jmp
jl
mov
test
or
popa
dec
shlb
out
pop
mov
ffreep
vcvtps2pd
ret
test
insb
adc
jg
sti
imul
inc
push
ljmp
test
fcomps
mov
stos
icebp
or
js
or
and
mov
inc
sbb
popf
repnz
lock
add
fadds
rorb
pop
scas
jg
mov
fisubrl
dec
fdivrs
mov
jae
sub
cmpsl
dec
sub
sbb
push
popf
xor
ja
mov
push
in
aad
add
sti
ja
mov
lds
mov
cmpsl
sarb
test
jl
jecxz
stos
sbb
xchg
pop
aad
lods
cmpsb
and
repnz
lods
mov
and
in
lea
inc
test
or
pusha
xchg
dec
mov
inc
inc
sbb
mov
jge
scas
xor
jmp
in
nop
sarl
inc
jb
outsl
dec
cmpsl
in
lea
ds
add
adc
mov
inc
inc
xchg
push
ja
aam
dec
jno
sub
push
lret
cmp
lds
adc
cmp
cmpsl
inc
jp
enter
mov
mov
jge
xor
push
sub
sbbb
xchg
push
sub
lret
fsubrl
scas
cmp
aaa
xorl
test
and
into
shr
enter
gs
call
cmp
insl
push
jge
pop
xchg
ss
addr16
fdivrs
stc
sub
lock
pop
shll
js
lds
dec
cmc
push
insl
mov
mov
mov
test
jae
sbb
push
fxch
lret
mov
xchg
push
push
add
mov
push
jp
sbbl
xchg
int3
ljmp
jbe
mov
or
inc
inc
and
adc
fsubl
sub
fstp
sub
cmp
sahf
pop
int
sub
push
xor
mov
movsl
pop
or
test
add
inc
jns
jle
out
sbb
xor
call
mov
push
sub
sub
iret
mov
xchg
mov
scas
loope
xchg
lcall
lock
mov
or
test
std
push
lock
dec
push
jecxz
ja
mov
dec
ss
pop
stos
or
test
pushf
jg
push
stos
cmpsl
dec
fdivrs
mov
data16
hlt
std
push
in
stos
or
repz
cld
pop
adc
xchg
add
mov
push
fisubs
test
sbb
or
add
sbb
or
add
jge
mov
xchg
lods
inc
mov
in
xor
jle
ret
rol
mov
xor
leave
shll
pop
pop
mov
js
iret
mov
sub
aaa
add
cmp
fwait
dec
aam
ds
adc
push
lcall
xchg
loop
lahf
push
mov
push
inc
jecxz
lret
out
cmp
xor
xchg
lret
out
push
insb
push
dec
mov
pop
lods
dec
jge
in
lods
sub
lods
mov
jne
dec
cs
subl
inc
outsl
or
test
jne
int3
adc
sub
inc
sbb
test
mov
push
add
push
add
xor
inc
adc
adc
mov
movsb
jne
sub
or
adc
adc
adc
dec
std
jle
sub
jl
aad
fsubrl
inc
sbb
fcmove
ljmp
cmpsb
cmpsb
add
call
in
arpl
gs
stos
popf
mov
in
inc
push
outsb
fstpl
cmpb
jl
xchg
mov
sbb
sbb
or
or
cmp
mov
dec
or
push
adc
test
pop
mov
xchg
lods
into
push
icebp
xchg
mov
cli
and
fsubl
adc
mov
mov
out
inc
insb
clc
xchg
pop
inc
enter
xor
jp
xchg
out
sbb
pop
pusha
dec
cwtl
enter
scas
mov
lods
stos
and
mov
xchg
pop
sbb
jmp
mov
or
mov
xchg
jge
iret
mov
push
xchg
les
lock
stos
jmp
xchg
sbb
out
pusha
stc
cmpsl
sub
sub
mov
mov
mov
out
sahf
dec
inc
lea
faddl
packsswb
jnp
inc
pop
cwtl
and
mov
and
mov
out
or
mov
push
rorb
mov
rolb
mov
and
out
fiadds
popf
movsl
stc
cmp
inc
mov
inc
cli
and
movsb
cmc
data16
dec
sbb
cwtl
aas
fcomp
push
in
dec
jle
in
pop
aam
stos
mov
int3
cmp
lea
notb
fistps
jge
sub
test
xchg
loope
sbb
cmp
mov
outsb
push
mov
sub
leave
mov
movsb
incb
rolb
xchg
push
or
stc
call
inc
repz
aas
fbstp
repz
scas
push
pop
sub
sub
push
cmp
adc
ret
and
inc
cltd
jbe
inc
mov
out
movsb
dec
jae
aad
stos
cmpsl
test
js
call
ds
adc
jno
fwait
rol
ret
mov
mov
jne
jecxz
sub
aaa
mov
fdiv
mov
mov
lret
dec
add
movsl
shrb
negb
leave
ljmp
shll
cltd
add
outsb
sub
and
fbstp
fwait
rol
aaa
cli
insl
add
in
das
int3
cs
pop
xor
lahf
dec
lahf
cli
and
fidivl
loop,pn
pop
pop
js
adc
outsb
insl
out
and
call
out
push
out
jp
jge
fmuls
add
add
sbb
mov
cmp
scas
scas
ja
and
xchg
and
ds
cmp
lahf
icebp
sarb
fs
icebp
pop
jge
mov
dec
lods
jp
or
ds
stos
adc
shll
xchg
xchg
repz
and
test
leave
data16
push
xchg
cmp
addr16
cmpb
sbb
sbb
inc
jg
xchg
jae
cltd
push
imulb
pushf
jp
out
in
ja
xchg
clc
adc
imul
pop
stos
mov
outsb
and
jne
inc
push
stos
mov
lods
xchg
or
pop
fucomp
mov
sub
dec
out
add
lods
test
iret
hlt
andl
shl
push
or
roll
sbb
repz
mov
das
sbb
int
inc
frstor
xor
lock
and
das
xchg
dec
xchg
push
adc
gs
mov
xor
mov
mull
sbb
lods
add
lock
push
call
sti
mov
mov
push
fwait
cmp
inc
das
inc
mov
dec
push
rcrl
aam
mov
rorb
fs
clc
in
jl
cmpl
mov
push
stos
mov
into
scas
dec
mov
loope
out
pop
cwtl
aaa
mov
imul
into
dec
lds
and
sbb
dec
sbb
adc
lahf
xchg
inc
sbb
mov
adc
je
mulb
pop
ds
fisubrs
cmc
sub
xor
push
xlat
xor
into
pop
cmp
adcb
in
jns
dec
bound
dec
aas
mov
hlt
faddl
push
cwtl
adc
jnp
cmp
inc
add
jo
pop
xor
push
imul
leave
push
fcompl
push
test
and
mov
out
pop
mov
repnz
jmp
fsubrs
dec
ret
mov
jae
fbld
fdivrl
inc
mov
inc
push
iret
push
xchg
dec
lret
xor
aam
xchg
pop
bound
xor
jnp
sahf
mov
add
mov
sub
mov
adc
mov
mov
dec
dec
push
dec
sub
cmp
mov
pop
dec
jge
mov
fwait
shlb
sti
sbb
inc
bndldx
scas
adc
dec
xor
leave
dec
sbb
cmp
std
inc
fwait
out
movsb
mov
sbb
subb
stos
xor
notl
xchg
arpl
enter
ret
ja
inc
push
adc
push
adc
sbb
push
test
and
sahf
mov
jo
out
mov
adc
or
aam
add
call
dec
and
jmp
mov
mov
xor
fldl
adc
cltd
jecxz
or
add
int3
scas
sti
sbb
in
ret
sub
repz
lea
dec
sub
sahf
int3
and
mov
out
add
sbb
xchg
mov
imul
loop
mov
movsb
jmp
jg
fsubrs
scas
movsb
pop
jl
push
dec
xor
adc
ffree
jae
jp
scas
pop
fcompl
jne
or
in
jl
cmp
dec
adc
inc
mov
push
jmp
push
inc
push
xor
es
mov
pop
mov
xor
jmp
movsb
insb
sbb
cmp
mov
push
pop
fcmovb
cmp
lock
not
mov
test
push
fadds
mov
adc
adc
outsl
lock
xchg
jl
lods
pop
out
inc
sub
mov
loopne
push
jo
and
repnz
call
cli
in
pop
test
out
sbb
mov
pop
cltd
push
cmpsw
fsubrs
push
or
jae
add
in
cmp
pop
xchg
xchg
repz
pop
aad
dec
jno
mov
dec
rol
shll
out
inc
add
inc
bound
jbe
cld
je
jg
dec
and
aam
fnstcw
add
pop
cmp
data16
int3
mov
mov
nop
cmp
lret
jbe
and
mov
mov
scas
outsb
dec
jbe
cli
idivl
lahf
adc
jp
mov
loop
lret
rcrl
mov
les
jne
jp
psubb
adc
inc
and
movsb
lods
push
pop
adc
outsb
ss
add
enter
push
mov
test
push
bswap
das
mov
dec
dec
sub
xchg
int3
daa
mov
jle
frstor
stos
insb
aad
pop
test
clc
iret
xchg
int
and
fstps
push
sbb
adc
mov
shll
je,pt
pushf
xchg
sbb
mov
adc
jmp
push
nop
push
mov
xchg
cwtl
cmp
mov
int3
sbb
fldenv
fsubr
jge
mov
sub
mov
std
jae
outsl
aas
lds
inc
dec
es
jge
pusha
pop
push
pop
je
sbb
ss
mov
dec
push
cli
mov
fcoms
int3
sub
dec
xlat
mov
sub
enter
pop
mov
xchg
outsl
mov
pusha
mov
rolb
push
dec
js
fbstp
xchg
lahf
rclb
hlt
mov
xchg
sub
xor
das
js
and
incl
ss
cli
or
mov
out
dec
loop
das
xchg
xor
or
inc
data16
xchg
adc
push
add
pop
sbb
mov
bound
jge
adc
jne
and
pushf
hlt
xor
dec
ja
jg
cmp
adc
fnstenv
outsl
inc
in
lret
and
jmp
mov
je
sbb
add
fs
dec
and
out
and
sub
aam
sub
dec
dec
loop
push
fiadds
mov
pop
aad
fistps
sub
sbb
in
loopne
push
cmpsb
ds
mov
xchg
ja
xchg
filds
inc
xchg
sbb
push
mov
xlat
and
and
mov
addb
imul
mov
fmuls
sub
cld
push
jge
mov
es
adc
or
mov
sub
cmp
loopne
mov
xor
xchg
loope
add
out
in
popf
and
add
jb
jle
shll
jp
lods
sub
data16
pop
pop
pop
pop
sbb
fildl
std
bound
aaa
mov
movsb
mov
sub
sub
popa
push
jle
pusha
xor
cltd
jmp
mov
sti
jg
adc
sub
xor
hlt
pop
xor
mov
push
cmp
cmp
cwtl
xor
xchg
pop
cld
fdivp
int
dec
int
push
xor
dec
pop
jne
pop
fldcw
nopl
mov
or
xchg
mov
aam
in
call
mov
in
jge
lock
cmp
popf
push
xchg
testl
xor
pop
aaa
sbb
fcom
ljmp
sbb
std
xchg
xchg
add
mov
push
or
je
adc
add
push
icebp
arpl
mov
daa
pop
sbb
stc
sub
and
test
mull
pushf
int
inc
xchg
adc
sub
ja
aaa
push
sub
std
mov
xchg
mov
or
dec
test
sub
push
cwtl
xchg
sub
daa
jmp
jnp
nop
mov
scas
adc
or
add
fstps
cmp
aaa
mov
adc
pop
lock
sub
pop
mov
add
js
xor
xor
insb
popf
aam
and
dec
and
pop
sub
jl
sbb
add
into
fcmovu
cmc
sar
pop
and
lcall
xor
push
ljmp
mov
pop
fs
mov
push
nop
in
push
nop
ja
jno
jp
push
rcr
sub
mov
push
test
loop
and
popf
xor
xchg
adc
les
cmp
cltd
decl
inc
test
ficompl
xchg
xor
inc
lcall
stos
icebp
xchg
roll
cli
fnstsw
xchg
lcall
pop
dec
or
hlt
xchg
icebp
push
jns
mov
dec
idivl
testb
cmp
push
imul
movsb
jbe
imul
adc
call
jbe
cs
xchg
mov
inc
sbb
cmp
test
test
into
shr
and
sub
pop
ret
hlt
xor
ja
push
lcall
les
pop
mov
dec
stos
or
jae
dec
fdivrs
mov
dec
pop
jno
das
jge
add
ret
xor
mov
test
add
sub
inc
bound
add
and
adc
test
out
xchg
push
adc
lcall
add
jle
shll
aaa
mov
mov
or
cmp
xor
adcl
in
fwait
push
dec
test
ja
in
push
xor
pop
cwtl
sbb
add
cmp
sbb
pop
inc
loope
pop
test
cwtl
aaa
imul
pop
pushf
pop
enter
pop
push
lcall
pop
pop
mov
pop
push
xchg
mov
inc
pcmpeqb
push
dec
aaa
ja
aaa
pop
sarl
cwtl
push
sbb
jp
or
or
add
ret
mov
pop
lods
inc
jbe
shrb
sub
mov
or
ja
jmp
cwtl
xchg
add
jo
xchg
xchg
stos
arpl
cmp
xor
lret
outsl
or
push
mov
adc
sbb
insl
scas
jcxz
aas
inc
je
pmullw
pop
or
cs
mov
push
xchg
jne
test
lret
out
cmpsb
lods
daa
outsb
pop
or
data16
ja
mov
enter
push
or
xor
pop
sbb
pop
outsl
pop
popl
push
cmp
mov
adcb
xlat
jmp
push
jl
mov
fidivrs
push
or
pop
cmp
xchg
add
cmp
hlt
ss
div
pusha
cmp
movsb
adc
cmc
stos
pop
leave
fcomp
or
and
inc
mov
cmp
addr16
sub
add
loopnew
jb
pushf
sahf
mov
or
out
ja
in
das
xlat
adc
out
cmp
mov
shll
dec
lock
data16
test
movsb
outsb
pop
push
and
mov
xchg
aam
popa
add
jo
mov
cmc
fucom
lfs
jp
inc
inc
inc
test
outsl
adc
aas
mov
mov
jecxz
push
insl
push
das
mov
adc
in
push
dec
lods
sbb
scas
xor
in
jo
insb
std
addb
sbb
cmp
push
enter
inc
cmc
dec
hlt
in
jecxz
aam
fsubl
or
jl
les
scas
pop
repnz
xor
andb
insl
fimuls
mov
push
loop
icebp
sub
pop
mov
imulb
ret
cltd
loope
mov
mov
dec
push
sarl
mov
and
jge
fsubl
outsb
jno
dec
test
ljmp
mov
dec
lds
sbb
adc
mov
mov
jne
int
jmp
fisubrl
ljmp
stos
popa
arpl
loope
mov
mov
fcompl
les
test
sti
cmc
imul
test
adc
add
icebp
lahf
fimuls
or
loopne
enter
push
pop
inc
out
dec
mov
in
jecxz
scas
mov
in
mov
mov
adc
sub
rcrl
rcl
add
inc
std
shl
cmpb
xor
pusha
add
xchg
mov
aad
aad
xor
or
sbbb
enter
es
add
sti
inc
mov
outsl
popa
mov
mov
inc
cmp
lret
or
sbb
jmp
repz
mov
or
inc
mov
popf
call
pop
xchg
das
scas
jbe
inc
sub
out
nop
jl
mov
test
loope
pop
pop
std
or
ds
lock
scas
xchg
xor
les
pop
push
pusha
fildl
jb
adc
rcrl
clc
rcl
scas
in
andl
xchg
fstps
fistpl
movsl
jns
push
jo
dec
jmp
lcall
dec
fnstenv
test
in
push
cmp
loope
in
push
repz
addl
inc
lea
popf
clc
jne
lret
add
adc
and
mov
fmul
cmp
push
fnsave
pop
xchg
push
mov
mov
xor
call
cltd
roll
sbb
add
and
enter
or
inc
jp
loope
sbb
into
stos
pop
and
jge
and
inc
test
pop
icebp
inc
andb
inc
sub
nop
iret
out
or
rdtsc
fdiv
test
push
xor
cld
xor
hlt
inc
in
and
inc
loopne,pt
mov
popl
aaa
jns
lods
ret
cld
mov
movsl
lock
imull
pmulhuw
inc
scas
mov
xor
xlat
or
mov
leave
mov
add
jns
jge
mov
out
mov
outsb
ljmp
jne
jg
sub
cli
inc
inc
xchg
lret
testl
sbb
jno
daa
xchg
push
scas
pushf
dec
jno
out
xchg
jb
in
xchg
jnp
adc
ljmp
xchg
sbb
dec
sbb
fstps
pop
mov
in
xchg
lcall
repz
das
dec
adc
jo
test
push
mov
mov
mov
xchg
mov
mov
fdivs
cld
dec
popa
xlat
xor
into
pop
fwait
adc
jl
shrl
ret
and
sub
test
cmp
mov
in
jbe
movb
adc
xchg
xor
subl
xor
mov
mov
mov
lods
mov
lret
dec
je
or
sbb
adc
xor
sahf
cmp
cli
or
sub
push
cmp
rorl
test
sahf
jb
sbb
inc
ficomps
cmp
sti
lret
pop
mov
sub
testb
pop
sub
inc
lock
insb
sbb
loope
jge
xchg
int3
push
notl
and
jg
pop
inc
lods
add
dec
mov
push
daa
dec
std
in
inc
sbb
adc
out
into
js
out
add
adc
sub
fs
dec
mov
jmp
pop
add
push
loope
xor
sbb
iret
dec
inc
mov
fists
push
lret
jmp
mov
out
push
xchg
push
inc
adc
lret
pop
fs
dec
push
lcall
mov
add
lods
dec
adc
int3
sub
ret
lcall
xchg
inc
pushf
pop
push
jmp
cld
fcmovu
fwait
pxor
pop
pop
mov
push
insb
test
cmp
pop
mov
push
lds
jl
sub
push
sbb
fsub
push
push
out
push
cmp
mov
push
in
mov
int3
pop
shlb
pop
dec
into
or
cmp
pop
insb
sahf
mov
cmp
inc
ret
subb
pop
jmp
mov
pop
and
pop
xchg
pushf
mov
cwtl
push
aaa
fdivs
jns
fdivs
cmp
in
jns
imul
ja
shlb
or
cli
push
cmp
cmp
jns
stc
jne
xchg
je
nop
sahf
sub
adc
iret
xchg
in
sbb
cltd
movsl
hlt
sub
cld
les
std
adc
xchg
xchg
jle
mov
dec
xchg
call
mov
pop
cmp
call
dec
pop
mov
addb
and
cwtl
out
push
xor
inc
into
push
add
sbb
call
or
mov
inc
jb
fcmovb
iret
adc
inc
and
ret
mov
jnp
into
dec
outsb
pop
loope
test
sub
filds
and
dec
arpl
gs
ja
pusha
sub
inc
pop
adc
daa
lret
movsl
shrl
clc
adc
mov
inc
mov
mov
lret
popf
mov
xchg
adc
adc
dec
out
push
push
imul
mov
jae
dec
test
adc
push
fldt
shrl
push
cmp
cmp
sub
subb
add
hlt
adc
ret
pop
lods
inc
sub
push
arpl
sbb
mov
aaa
inc
pop
mov
mov
nop
in
movl
xchg
pop
adc
xor
addl
xchg
inc
push
inc
popa
scas
pop
mov
repnz
adc
call
push
mov
in
jnp
int
js
les
icebp
mov
mov
mov
stos
aaa
fcompl
int
and
insb
sub
xchg
mov
or
fdivrs
xchg
scas
pop
cld
mov
mov
sti
dec
shlb
lods
sub
mov
sub
xchg
sub
push
mov
push
pop
sbb
cmp
loopne
stos
nop
lret
dec
outsl
fldl
fwait
cmp
movsb
mov
push
jo
and
fcmovb
out
shlb
push
cltd
sti
insb
mov
cli
in
mov
leave
ret
fwait
inc
xchg
movsb
cld
orb
sbb
lods
jne
mov
stos
aaa
imul
jae
fildl
xchg
decb
stos
test
jl
sbb
dec
out
and
fwait
dec
fs
xchg
mov
idiv
cltd
divl
cmpsl
out
fmull
das
popa
call
fdiv
inc
push
inc
out
stc
jno
add
push
stc
dec
push
sub
int3
lcall
data16
mov
mov
stc
inc
mov
cmpsb
mov
mov
dec
rcrl
sub
shll
push
filds
push
mov
xor
aam
xor
cmp
jnp
pop
fdivrp
rolb
insl
lret
mov
xchg
ja
mov
std
aam
jne
rclb
les
cld
xor
pop
push
out
cmc
iret
mov
scas
cltd
pop
insl
inc
inc
mov
aas
jb
imul
add
jmp
push
ja
insl
cld
sub
popf
scas
sbb
leave
xchg
cmp
stos
scas
push
xchg
fwait
addr16
ds
jmp
push
sbb
ficoml
fwait
lods
push
and
daa
mov
xor
movsb
fldenv
ljmp
jo
stos
ret
outsb
mov
mov
in
xor
pop
inc
movsb
mov
mov
push
pop
popl
jge
stc
je
outsb
push
fdivrl
fistpl
stos
push
or
mov
repnz
lret
pop
popf
inc
addr16
push
inc
mov
arpl
inc
cmp
inc
aaa
pop
mov
pop
mov
out
rcll
fisttpll
push
test
mov
imul
mov
hlt
dec
jne
scas
add
or
imul
mov
clc
and
sbb
mov
sbb
mov
mov
xor
cmp
ljmp
xorb
mov
jb
pop
mov
cmp
mov
pop
jecxz
sbb
in
mov
daa
test
cmp
in
cmp
xchg
pop
std
mov
sbb
mov
sbb
out
inc
mov
pop
and
add
lahf
aaa
add
mov
inc
dec
and
push
fs
nop
sub
sub
push
push
dec
fmull
in
je
cmp
cmp
xor
shll
in
mov
rcll
xor
shlb
add
sbb
inc
insl
push
insl
dec
lods
fadd
push
popf
adc
and
jae
adc
pop
or
lds
test
push
pop
sbb
inc
jg
mov
repnz
sub
pop
jl
rorl
roll
cmp
dec
out
sub
pop
dec
sbb
pusha
test
imul
sahf
inc
mov
lock
jns
sub
dec
movsb
xchg
jo
xor
aas
sbb
mov
lods
ja
cmp
hlt
inc
or
mov
aas
inc
mov
lahf
xor
testl
sarb
pop
or
add
in
mov
test
push
cmp
xor
mov
add
add
mov
repnz
lock
psubusb
addl
pop
xchg
push
leave
xchg
addr16
jmp
mov
cltd
jecxz
popf
divb
in
out
sti
jno
inc
cmp
daa
imul
imul
into
adc
sub
aaa
adc
orl
js
mov
pop
lods
cmp
xchg
adc
iret
sbb
lcall
dec
out
sti
mov
and
sarb
into
push
xchg
mov
mov
add
sbb
test
push
mov
ljmp
clc
sbb
push
pop
cmpsl
inc
fs
pushf
nop
push
xchg
lahf
xorb
roll
cmp
jmp
push
sbb
daa
jns
scas
jmp
or
movsb
mov
nop
push
insl
mov
mov
mov
ret
pop
dec
push
hlt
xor
cmp
mov
sbb
cmp
xor
cmpsl
pop
pop
and
fidivrl
push
xorb
fnsave
rcrl
pusha
jo
push
ss
cltd
lods
cmp
xor
test
sbb
xor
insl
cmp
and
mov
pop
xor
or
add
ds
movsl
mov
or
pusha
lods
test
test
cmpsb
lret
jmp
adc
push
loopne
push
ds
test
and
jle
in
popa
pusha
fs
repnz
icebp
fdivs
stos
add
scas
out
clc
pop
aas
rolb
int3
pop
dec
cmpsb
lahf
mov
xchg
out
push
popa
in
mov
nop
faddl
cmc
xor
gs
movsb
fisubrs
lock
fcmovbe
jb
dec
jl
dec
push
cmp
ds
test
idivl
sub
push
dec
push
mov
aaa
xlat
mov
fucom
jle
jle
sbb
push
mov
rep
popf
push
out
dec
es
jbe
divb
insl
pop
xor
push
pop
push
and
in
pop
adc
pop
nop
inc
xor
sbb
icebp
mov
push
push
andb
or
jp
push
incb
loope
lods
or
in
addr16
outsb
dec
mov
fwait
call
sbbb
lcall
repnz
pop
notb
cltd
mov
adc
or
inc
xor
cmp
pop
test
mov
mov
cmp
adc
jl
mov
push
sbb
mov
push
cmovne
cli
xor
mov
pop
inc
call
andb
fisubrs
je
lea
cmp
push
xchg
fldenv
pop
push
test
addb
cld
fcoml
mov
cmp
add
in
addr16
adc
mov
cmp
icebp
mov
mov
jb
repz
insb
in
mov
xchg
stos
sbb
fidivrs
push
and
cmp
repz
and
lods
cmp
je
dec
out
dec
sub
mov
add
fsubr
ficoms
push
imulb
push
jae
mov
xor
xor
sub
jecxz
adcl
and
xor
loope
fst
adc
sub
sub
gs
inc
sbb
mov
stc
icebp
pop
fcmovnb
mov
mov
je
xor
or
addl
andl
mov
xchg
outsl
xor
push
mov
je
sarb
std
jae
aaa
dec
aad
call
adc
adc
adc
mov
push
icebp
popf
fnstenv
cmp
movsl
xor
xor
jg
mov
test
cmp
adcb
xor
mov
aas
pop
icebp
and
pop
or
sub
test
loopne
bound
test
test
or
and
call
daa
iret
fldenv
out
ret
cwtl
test
xchg
mov
and
mov
xchg
sahf
jle
sahf
adc
mov
jecxz
add
aam
add
cmc
adc
adc
stos
loopne
out
mov
btr
jb
imul
js
aaa
cmpb
jne
nop
cmp
sub
pop
dec
leave
cli
jae
jg
mov
cltd
mov
sub
mov
jl
dec
inc
loop
leave
loop
movsb
lods
sahf
shlb
cmp
lret
out
xor
mov
out
adc
mov
incl
mov
push
cmpsl
test
cmp
out
mov
xor
ljmp
mov
out
pusha
inc
ja
repz
pop
mov
jl
xor
or
fimuls
cmpsb
shlb
repz
jns
mov
or
in
xor
shr
mov
mov
push
or
rorb
outsb
insl
pop
movsb
add
test
add
pop
aam
outsl
pop
pushf
dec
sti
xor
sbbl
pop
sti
mov
mov
push
mov
int
cmp
inc
lds
cmp
cmp
push
or
movsb
shr
jb
mov
cwtl
lea
or
insl
mov
xor
in
mov
cmpsb
je
jne
enter
cmp
sbb
and
movsl
and
mov
aad
enter
out
cmpsb
push
test
ret
clc
mov
cmp
movsb
shll
std
lock
inc
xchg
dec
mov
inc
imul
outsl
orb
lea
rclb
sbb
div
fldenv
nop
adc
mov
minps
repnz
clc
mov
xor
add
aam
rolb
fxch
xor
jae
popa
in
nop
pop
jmp
unpckhps
xchg
sub
push
loope
mov
cmp
ljmp
jo
inc
lret
movsb
bound
rclb
aad
jp
pop
mov
dec
mov
subb
fidivl
jae
push
vmovaps
stos
inc
mov
js
cmp
mov
pop
jmp
repz
pusha
add
mov
mov
or
jmp
bound
and
mov
xor
mov
mov
stos
push
int
aad
xchg
in
cmp
mov
xchg
or
cmpsb
andb
jmp
add
mov
arpl
mov
adc
sbb
repz
and
ret
mov
fists
or
mov
js
pushf
lods
add
insb
jae
ja
imul
outsl
out
cmpsb
dec
inc
stc
rcrb
mulb
jb
sbb
sub
mov
and
mov
pop
adc
fstps
addb
adc
lock
jno
cmp
jl
pop
je
test
imul
not
movsl
ja
dec
dec
push
in
fucomp
mov
jge
and
inc
in
xchg
pop
mov
jp
jns
jo
sbb
jno
push
ficoml
add
mov
gs
lds
mov
cmpsb
inc
cmc
out
jl
inc
std
and
imull
xchg
inc
je
notb
and
ljmp
or
aad
mov
jns
dec
loope
jbe
pop
adc
jp
jns
shlb
ss
std
pop
jo
fsub
cmp
addl
dec
xor
xchg
outsb
xlat
cld
ljmp
mov
in
sub
dec
mov
jae
adc
pop
std
pop
bound
mov
ror
or
cmp
dec
popa
dec
adc
inc
push
arpl
out
jmp
jecxz
cmp
in
mov
sarb
sub
and
dec
inc
ret
inc
jp
repnz
sti
cmp
add
dec
cs
repz
mov
dec
std
call
cs
mov
xor
cwtl
mov
push
cmp
cmc
sub
and
in
int3
mov
data16
pop
ret
pop
ds
imul
pushf
jbe
into
cld
or
push
out
aaa
xor
push
push
cmpsl
cmp
fistl
xchg
insl
sti
mov
addr16
lcall
xor
or
imul
push
mov
je
xchg
push
xor
or
add
jb
xlat
jns
test
arpl
aam
push
jne
and
aam
pop
xor
mov
mov
lret
rcr
inc
cmp
popa
cltd
add
aas
ss
sbb
out
aam
call
imul
test
test
fcoms
mov
inc
lret
div
into
fnstenv
push
jbe
or
fildll
ljmp
xor
cmp
jns
fucomp
lea
gs
jle
dec
mov
push
out
dec
ss
ret
pop
jmp
das
scas
incb
add
cmp
out
sbbb
aaa
enter
fnsave
out
sbbl
pop
ja
test
inc
ret
pushf
dec
jge
cmpb
out
or
dec
call
lods
psubusb
in
sahf
and
dec
out
xchg
inc
pop
jle
fsubs
dec
cltd
movsl
es
push
aad
mov
xor
sbb
inc
in
inc
push
out
pop
fsts
imul
pop
cmp
imul
sti
adc
das
mov
mov
hlt
fcmove
dec
rolb
rclb
incb
mov
sub
cmpsb
xor
xchg
add
xchg
shrb
sub
sbb
xorl
out
push
xchg
pop
roll
pop
scas
filds
je
jne
jmp
jecxz
dec
lret
and
icebp
mov
push
xor
mov
push
xchg
inc
sub
jl
inc
stos
mov
aad
cmp
push
cmpsb
inc
mov
inc
movsl
mov
jne
in
and
mov
sbb
movsb
ss
pop
inc
cmpsl
xchg
fsts
mov
test
add
popa
fwait
push
mov
mov
iret
sub
stos
aaa
repnz
lock
xchg
cwtl
push
rolb
outsb
imul
or
inc
hlt
and
xchg
xchg
fildll
xor
cmp
push
xchg
sub
stc
mov
dec
push
xlat
xor
add
imul
mov
pop
ficoml
out
inc
scas
mov
stos
lcall
rcr
xor
add
add
nop
out
jns,pt
add
and
out
cmc
sti
xchg
adc
mov
and
aad
lcall
push
mov
pop
ja
dec
ss
xor
dec
mov
call
inc
xchg
lods
xor
jmp
mov
inc
imul
add
adc
dec
insb
push
mov
push
mov
and
aaa
mov
mov
ficoms
outsl
xchg
sub
push
ljmp
pop
xor
and
stos
fyl2xp1
divb
cld
xlat
sbb
je
sti
dec
xor
and
outsb
mov
pop
cld
std
in
js
out
ljmp
pop
mov
stos
aaa
dec
iret
mov
mov
xor
cmp
sub
aas
and
pop
nop
dec
or
pop
ficoms
out
lcall
mov
hlt
in
les
jg
ficompl
ja
pop
mov
repz
loopne
push
daa
mov
and
mov
xor
sub
cmp
out
test
add
inc
sub
loop
adcb
xchg
add
inc
add
sub
jecxz
lret
push
adc
dec
ja
pop
neg
test
movb
lahf
and
cmp
cmp
xor
outsb
jmp
ljmp
and
adc
outsl
push
sbb
popa
inc
push
xchg
popf
ja
ficompl
pushf
sbbb
ficomps
and
test
out
outsb
jne
push
in
sub
arpl
cltd
cli
rol
adc
inc
push
int
xchg
jl
and
mov
mov
lods
ss
and
lahf
jns
sbb
xor
mov
push
xchg
stc
lret
jle
das
add
jle
sbb
push
mov
xor
pop
lock
add
fwait
mov
mov
inc
inc
pop
add
lods
sbb
push
adc
scas
inc
mov
jb
or
imul
movsl
sbb
in
xchg
sbb
or
xchg
push
loope
adc
shrl
lret
inc
insl
shll
out
push
inc
lea
mov
jo
ds
shrl
push
clc
lret
div
sbb
outsb
jmp
cld
mov
loope
mov
mov
sub
mov
fmulp
and
inc
mov
stc
xchg
in
pop
xor
insl
popf
push
push
jo
mov
xchg
sbb
xchg
inc
pushf
and
loopne
push
lret
adc
stos
test
push
cmp
dec
dec
add
bound
cmp
and
sbb
ds
sar
xchg
out
lcall
fstl
pushf
aam
out
out
cmc
dec
jg
stos
rolb
xor
mov
into
int
cmp
cmp
lods
mov
jae
sbb
stos
push
stos
lea
cmp
and
movsb
adc
dec
test
mov
add
xchg
imul
inc
fcmovb
mov
cmp
sti
jbe
aam
in
jno
push
jl
int3
les
xchg
sbb
insb
ljmp
sub
xor
mov
mov
outsb
sahf
add
and
loope
push
cld
testb
outsb
push
lods
jge
leave
int3
shl
xor
push
cmpsb
sti
mov
push
jne
sub
push
in
xor
pop
push
lcall
adc
addb
cmpsb
adc
insl
ljmp
dec
jo
loope
or
sub
pop
sbbl
mov
loopne
mov
scas
stc
dec
add
pop
jmp
jno
adc
data16
inc
jno
push
cmp
mov
and
jo
pushf
jno
scas
loopne
pop
cwtl
mov
pop
push
mov
lds
mov
adc
dec
out
cs
repz
fwait
test
out
add
xor
mov
sub
add
pop
push
cmp
xchg
sub
mov
in
rorl
bound
testb
aad
add
jle
push
and
test
lods
mov
fnstsw
dec
dec
repnz
lcall
daa
fmull
shlb
out
push
inc
cltd
dec
push
adc
sub
jp
push
push
lret
into
fmuls
adc
rol
and
xor
pop
xchg
aad
push
fbld
cmp
filds
pop
add
lods
std
cmpsl
fldcw
out
fisttpll
out
push
ds
mov
repnz
cmc
dec
inc
jo
imul
dec
lods
add
enter
icebp
test
jp
pop
jbe
adc
adc
xchg
inc
clc
push
sub
jle
jp
add
popa
pop
fucomip
pop
pusha
cltd
sbb
push
pop
mov
sbb
or
push
lea
cmp
fwait
xor
sbb
test
or
cmp
adc
lods
push
sub
pop
add
sbb
adc
das
aas
insb
out
pusha
test
jecxz
movsl
in
xor
aaa
add
jmp
sbb
data16
xor
mov
mov
out
sub
mov
subb
lcall
lods
enter
xor
bound
and
mov
sub
jne
int
lahf
sbb
aad
xorb
or
sahf
fcompl
sub
fwait
clc
pop
jg
mov
sub
push
jg,pt
xlat
fisttpll
cmp
aad
addb
lret
mov
sahf
lea
xorl
mov
dec
jg
or
sub
cld
ret
data16
loopne
fbstp
xchg
pop
scas
push
xlat
hlt
pop
push
jg
and
or
test
repz
xor
mov
ljmp
xchg
mov
or
out
dec
push
mov
inc
mov
jno
addr16
insl
mov
pushl
cmpsl
bound
lea
mov
repz
xchg
repnz
arpl
cmp
imul
jge
sbb
cld
pop
pushf
xchg
mov
pushf
cmpb
ja
jmp
stc
sub
sti
movw
lahf
arpl
inc
mov
mov
sbb
cs
push
loop
enter
push
cmp
adc
xchg
fldl
fs
xchg
lock
out
stos
outsb
push
sub
mov
daa
pop
jecxz
ror
cld
outsl
cmc
cmp
fldcw
add
push
mulb
jnp
push
mov
cli
mov
xchg
sbb
jbe
test
cmp
das
enter
push
adc
pop
add
loop
jle
mov
cmpsl
in
jne
mov
jl
mov
sbb
push
inc
and
mov
aam
adc
mov
xchg
dec
fdivs
mov
and
mov
jnp
bound
jbe
dec
and
clc
and
add
and
push
cmpsb
data16
sub
dec
mov
addr16
shll
scas
lods
test
repnz
icebp
mov
add
sub
es
mov
xchg
mov
in
mov
in
nop
adc
push
sti
enter
push
fadd
pop
add
xchg
xchg
xor
jl
mov
addr16
sub
cmpsl
xor
outsl
push
pop
es
fwait
dec
xchg
insb
in
jp
outsb
push
mov
addr16
inc
sbb
scas
mov
inc
dec
sbbl
fdivrl
pushw
out
sub
insl
ljmp
sti
sbb
iret
test
adc
insb
std
mov
xchg
fdivrs
lds
pop
jae
imul
mov
cwtl
sbb
jecxz
mov
ja
mov
add
dec
stos
aas
roll
or
jl
xchg
dec
test
into
incl
testl
movsl
test
push
cmp
ljmp
pop
and
dec
or
push
in
outsb
dec
lds
movsl
cwtl
xor
sti
lret
fcmovnu
mov
mov
push
out
mov
cmc
cli
fnstcw
fdivl
and
cltd
mov
cs
sub
push
pop
out
ret
inc
push
ljmp
push
xchg
arpl
imul
sub
pop
and
inc
pop
sub
pushf
push
loope
out
push
adc
int3
rorb
sub
adc
mov
out
mov
aas
movsl
mov
mov
addb
aam
dec
jg
fcmovne
testl
mov
cmp
add
mov
mov
xor
stc
repz
push
shlb
jne
pusha
mov
push
mov
in
pop
call
inc
push
mov
scas
pop
xor
mov
clc
push
dec
int3
out
and
mov
imull
sub
je
sbb
pushf
adc
outsb
loopne
sbb
fsubrl
aas
adc
or
arpl
and
lods
in
jle
and
insb
std
add
mov
std
cs
jb
sbb
bound
pop
jae
mov
xchg
mov
push
cld
mov
and
dec
sbb
lds
sbb
mov
jle
data16
fimuls
lea
mov
pushf
in
xor
outsb
mov
fimull
xchg
test
fldenv
and
mov
ja
lods
bound
mov
jnp
or
add
dec
add
and
loop
jae
cmpl
stc
and
leave
fwait
inc
xor
pop
inc
sti
loopne
test
or
mov
cmp
lahf
xchg
dec
jne
std
mov
movsb
mov
popf
mov
xchg
fdivr
xor
pop
ljmp
cmpsl
or
and
lret
add
je
ret
mov
iret
fsubl
fsubs
roll
lods
or
add
dec
dec
inc
add
cmp
test
test
pusha
cmpsl
test
fiaddl
lods
inc
das
adc
iret
mov
pop
adc
pushw
test
xor
icebp
lds
xchg
hlt
jg
iret
icebp
mov
int3
ret
add
cmp
call
mov
enter
aaa
adc
push
fsts
cltd
xor
lds
sar
xor
add
xchg
int3
jg
xchg
xchg
les
mov
nop
mov
repnz
idivb
or
and
pop
in
aad
dec
pushf
cltd
imul
test
lods
mov
pusha
dec
fadd
push
lret
stos
push
add
adc
daa
jae
notb
in
pop
or
mov
adc
xlat
clc
icebp
xchg
lea
insb
iret
inc
dec
lock
mov
arpl
push
jne
adc
sub
pop
jo
mov
or
and
inc
adc
addr16
test
test
in
outsl
dec
fdiv
repz
daa
lcall
sub
ds
inc
cmp
les
imul
loop
lods
pop
push
push
sub
repz
mov
jo
push
cmp
cmpsb
lods
pop
jle
mov
dec
imul
push
ret
shr
in
dec
roll
dec
mov
loop
xchg
mov
pop
rcrl
or
xlat
orb
fsubrl
aaa
inc
adc
fisubrl
mov
loop
in
dec
mov
loopne
add
shlb
sahf
stos
outsl
call
ss
push
cltd
xchg
mov
inc
fnsave
in
mov
faddl
popl
pop
das
push
adc
push
ret
ja
push
jns
ficompl
fiadds
mov
loop
xlat
scas
and
jmp
adc
mov
and
sub
cmp
fs
add
dec
jp
stc
mov
roll
push
shr
or
fsubl
lret
or
fucom
flds
js
in
mov
stos
mov
lcall
adc
jns
test
cmp
xchg
lods
sbb
fs
and
adc
pop
push
mov
jnp
xor
xchg
pusha
lds
mov
ret
cmpsb
xlat
and
push
mov
sub
adc
enter
in
addl
ror
gs
in
mov
cmp
mov
adc
scas
test
sbb
sbb
push
or
repnz
adc
fs
lret
mov
addr16
out
ret
scas
cli
bt
lea
hlt
je
jle
loopne
fimuls
xlat
movsb
arpl
push
sbb
movb
mov
mov
ja
movsb
push
fistpl
cmpsb
cmpsb
gs
xor
jno
adc
dec
fs
popf
in
arpl
cmp
push
lcall
adc
jmp
pop
jl
in
push
or
loope
xchg
xchg
nop
xor
push
cmp
hlt
and
jne
std
mov
jo
cli
jg
ss
or
popa
insb
testb
push
push
pop
in
jo
ja
cmp
inc
sub
rcll
inc
dec
test
dec
lahf
cmp
dec
fnsetpm(287
insl
loope
cmp
mov
icebp
xor
mov
jl
cmp
mov
push
iret
mov
push
xchg
gs
popa
jmp
gs
sub
jge
jo
jp
push
or
dec
push
repz
jmp
frstor
inc
xor
xor
mov
aad
addl
or
cs
mov
fisttpl
cs
lahf
pop
mov
leave
mov
mov
and
mov
push
fimull
xchg
adc
or
ret
popf
pop
mov
std
and
icebp
push
ret
js
mov
sbb
xchg
mov
sub
add
insb
das
insl
movsb
loop
or
bound
shlb
bound
mov
clc
or
stc
lret
cmp
call
mov
and
jnp
and
dec
aas
and
mov
mov
enter
dec
test
test
mov
mov
mov
out
add
dec
daa
or
push
imul
dec
push
and
push
andl
stos
sbb
jmp
push
out
scas
js
mov
clc
jp
push
fnstsw
mov
mov
xor
mov
xor
inc
mov
aad
int
sahf
ret
lret
add
xchg
sbb
mov
push
dec
loop
add
outsb
dec
test
jns
sbb
mov
xchg
mov
int3
roll
push
rcll
je
sub
in
mov
push
popf
sub
sarb
gs
outsb
mov
lea
push
daa
or
movsl
cmp
sti
jge
test
and
in
pop
xor
stos
shrl
sbb
aad
scas
jecxz
shll
pop
scas
out
pop
push
xlat
lret
lods
mov
daa
lock
and
push
push
subb
repz
fcmovnu
inc
mov
sbb
cwtl
cmp
cwtl
rcll
lret
outsl
and
sub
bound
icebp
popf
iret
mov
fists
rcr
mov
pop
out
decb
mov
or
or
les
hlt
sbb
mov
pop
sub
add
movsl
les
fsubrp
inc
inc
cmc
pop
dec
ficompl
mov
outsb
push
int
cmpsl
and
andl
xchg
ret
jecxz
add
push
aas
pusha
mov
or
cmp
mov
cmpsl
mov
mov
xor
sahf
fldenv
out
jns
adc
xchg
sub
add
xor
mov
pop
push
push
das
lcall
mov
lret
jo
fs
lock
test
mov
cmp
jb
movl
lea
hlt
in
test
into
mov
sahf
push
mov
mov
dec
sub
hlt
cmp
xchg
xchg
ss
jnp
leave
cmp
and
lcall
jp
test
xlat
push
xchg
cwtl
ret
adc
xchg
and
inc
jb
clc
iret
xchg
cmp
sub
ficoms
mov
mov
cltd
outsl
push
fs
cmp
insl
out
pop
dec
push
pop
in
cmp
outsb
jmp
pop
mov
lret
and
mov
xchg
icebp
dec
mov
sbb
xchg
pop
loope
xchg
push
push
lea
lods
aaa
inc
add
inc
or
mov
sbb
int3
aad
push
add
lds
push
xchg
out
sahf
mov
int3
jne
mov
shlb
push
std
rclb
pop
cwtl
jp
ss
shlb
les
iret
and
add
insl
in
js
cmp
mov
aas
rorl
mov
outsb
shrl
out
push
mov
dec
or
inc
add
sub
push
jecxz
inc
mov
pop
sbb
mov
loope
roll
mov
mov
loopne
test
cli
inc
in
mov
adcl
mov
es
sbbl
sbb
cmp
repz
pop
cli
loop
cs
sub
dec
adc
fcomip
cmp
mov
loopne
cmpsb
frstor
ds
cmp
stc
sub
gs
mov
mov
push
inc
adc
add
lcall
das
jne
out
out
mov
xchg
lods
sar
ja
xor
and
add
pop
fst
insl
inc
lods
dec
lret
pop
repnz
fdivrs
jbe
sbb
cmpsl
in
sub
data16
jnp
addr16
push
rcrl
push
add
sub
and
cmpl
jbe
add
inc
xor
pushf
dec
push
push
add
or
data16
jb
add
or
jo,pn
popa
popa
pop
jl
das
lods
jae
xor
cmp
test
mov
insl
adcl
pop
cmpsb
and
and
leave
jecxz
add
frstor
movsl
jo
inc
enter
mov
add
sub
add
cmp
ja
pop
icebp
sub
pusha
cmp
mov
and
mov
fiadds
pusha
lods
adc
test
xchg
adc
xor
fidivrl
mov
pop
ret
js
jp
ret
dec
mov
into
andb
sbbl
les
cmc
cli
ret
inc
jmp
add
fcmovnbe
in
adc
inc
inc
push
mov
cli
inc
inc
js
fisubrl
sub
jg
pop
adc
ss
sbb
out
cs
out
leave
jnp
mov
scas
scas
adc
cmpb
and
adc
dec
xor
jge
mov
jb
push
int
test
mov
imul
or
xor
xor
outsb
leave
adcb
out
out
std
mov
stc
iret
mov
lret
cwtl
jb
xchg
fidivs
sbb
sbb
push
hlt
test
dec
mov
jb
pushl
pop
repnz
int
jl
adc
icebp
or
inc
xor
int
cmpsl
es
mov
and
popa
mov
pop
les
mov
push
shrb
jl
in
cmp
test
jl
imul
pop
dec
call
pop
ds
cmp
xchg
and
test
in
addb
aaa
es
sbb
roll
xchg
push
inc
aam
pop
xchg
loope
adc
clc
or
decl
hlt
jg
xor
shlb
and
into
lahf
in
mov
inc
dec
aaa
mov
dec
pop
nop
out
fwait
pop
fwait
mov
push
lret
mov
popf
into
cltd
mov
mov
sub
jnp
pop
xchg
notl
inc
xchg
pop
push
xchg
leave
inc
mov
test
cs
jg
js
orl
ror
cltd
ficoms
negb
popf
lea
orb
rorb
dec
call
adc
sbb
push
mov
dec
push
ljmp
mov
mov
add
and
or
mov
ret
mov
int
inc
and
stos
stos
xlat
test
aas
mov
adc
xchg
ret
adc
out
xor
xor
inc
push
popa
xchg
jnp
in
sbb
dec
inc
jg
adc
pusha
jae
inc
aas
arpl
addr16
push
mov
and
mov
inc
ljmp
xor
cld
out
js
fiaddl
and
les
push
les
icebp
push
inc
pop
loop
xchg
lahf
rcl
and
outsb
icebp
push
and
xor
mov
pop
jno
mov
mov
mov
fidivl
push
notl
sub
jge
lds
pop
cmp
cs
fucomip
repnz
jbe
call
lahf
jecxz
rolb
js
mov
pop
bound
add
jmp
jmp
aad
mov
jo
hlt
test
push
loopne
inc
push
jmp
cwtl
push
rolb
xchg
or
aas
adc
mov
cmp
xchg
fiadds
ret
xor
jle
lcall
fstpt
cs
adc
popa
out
aaa
cmpsl
jp
push
test
std
popa
mov
movsl
lea
mov
ljmp
inc
addl
sti
xchg
push
pop
out
stc
stc
xchg
imul
inc
sbb
lahf
fistl
in
and
and
repnz
cmp
inc
mov
dec
jae
xchg
test
mov
cmpsb
leave
fisttpll
ss
fnstsw
xchg
dec
mov
add
inc
inc
jbe
sbb
mov
nop
mov
sahf
data16
mov
call
xor
mull
adc
mov
out
push
dec
out
insb
enter
pop
sbb
adc
sbb
fwait
daa
dec
inc
das
mov
sub
fimull
fs
fbld
cwtl
mov
sub
push
inc
and
int3
sub
mov
sub
stos
or
mov
icebp
push
jg
mov
mov
into
jle
fwait
cwtl
ret
jno
xchg
or
enter
cmp
pop
pop
outsl
ljmp
jle
pusha
scas
mov
loopne
fidivrl
pop
roll
and
rcl
adc
sub
jecxz
daa
inc
fnstsw
imul
inc
scas
add
adc
dec
add
or
into
xor
mov
fimull
dec
dec
xchg
mov
aam
into
sbb
jle
mov
sbb
nop
and
flds
adcl
ficoml
pop
mov
outsb
rolb
leave
cs
add
push
and
inc
imul
in
mov
nop
aam
sub
lahf
adc
repnz
inc
sub
ret
sub
fisttpll
out
ss
pushf
push
cld
dec
mov
and
ficomps
sub
sub
jo
mov
sbb
mov
mov
aam
and
push
clc
xchg
data16
test
in
adcb
or
cli
cmp
dec
ljmp
mov
or
jl
iret
aad
push
jo
and
std
add
push
loope
loope
out
mov
sbbl
sub
mov
adc
sbb
mov
nop
jnp
popf
and
sbb
rcrl
dec
xor
aam
pushf
dec
aaa
mov
insl
iret
mov
mov
xchg
pushf
push
out
in
cltd
jo
adc
rcr
rcrl
xor
shrl
negl
jg
arpl
decl
leave
lret
aaa
mov
rcpps
test
fildl
ljmp
jbe
mov
popf
mov
mov
push
cmp
jecxz
cmp
insl
out
and
pop
xor
in
jo
xchg
popa
stc
ja
test
call
push
mov
inc
xlat
push
xchg
jno
dec
lock
push
xchg
dec
lea
bound
xor
daa
lods
push
xchg
test
xchg
push
mov
dec
aas
stos
rcll
xchg
shlb
pushf
je
dec
loop
push
cwtl
loope
pusha
dec
mov
stos
test
adc
xor
in
fwait
insl
sub
push
xchg
loop
mov
mov
imul
jmp
xchg
movsb
or
jae
adc
jecxz
cli
out
inc
jg
pop
pop
out
bound
stos
add
mov
insl
test
jno
sbb
dec
repnz
inc
sub
inc
or
rcll
and
loopne
js
adc
jmp
xchg
cld
cmp
ficoms
push
stos
xlat
xor
fisttpl
sti
push
sbb
ljmp
js
movsl
cld
stos
xchg
push
fimuls
cmp
lods
jns
mov
cmc
or
lea
scas
dec
rorb
cwtl
jne
xor
cmpsl
dec
gs
jno
add
call
je
ljmp
fldl
test
xchg
addr16
les
sbbb
lret
sti
sbb
fsub
mov
int3
loop
cmp
inc
shrl
sbb
lcall
loope
mov
push
sub
lds
sbb
jnp
jl
in
rolb
rclb
fisttpll
adc
pop
cmp
cmp
xchg
jecxz
int
and
repz
jge
push
sahf
cltd
divb
or
je
adc
dec
jo
mov
lods
out
outsl
mov
lock
scas
ljmp
mov
out
add
lahf
cwtl
xlat
ret
lea
addr16
aaa
mov
mov
push
repz
pop
pushf
inc
mov
mov
roll
mov
dec
cltd
outsb
int
inc
cmpsl
xchg
arpl
sub
bound
je
hlt
movsl
int
mov
mov
jbe
mov
call
nop
push
incl
add
xor
pop
inc
push
jmp
jge
sub
jle
inc
mov
jns
mov
hlt
ja
xor
add
mov
jecxz
cmp
jle
pushf
imul
test
add
incl
movsl
mov
add
in
xor
addr16
mov
xlat
lret
hlt
xchg
rorb
iret
or
xchg
ljmp
xchg
pop
adc
inc
or
fildl
sbb
and
outsb
xchg
lock
lcall
imul
xchg
xor
sub
jo
mov
outsb
outsb
mov
andb
int3
xlat
loope
or
add
inc
or
add
mov
cmpsl
outsl
les
dec
sarb
test
mov
out
cmc
xchg
jne
stos
fwait
inc
xor
icebp
adc
dec
jbe
add
test
enter
and
outsl
add
mov
inc
pop
bound
rcl
clc
cltd
insb
inc
into
dec
scas
test
sbb
mov
mov
insl
inc
pop
xchg
pop
mov
cli
or
mov
add
shll
aaa
movsb
rcll
outsb
negl
sbb
mov
push
mov
xor
iret
std
mov
push
and
sub
sub
rcrb
iret
js
jne
outsb
in
leave
cmp
mov
jns
rorl
jmp
xchg
jne
das
hlt
mov
xor
popf
mov
xchg
cmc
and
add
cmpsb
adc
iret
jne
popf
or
or
inc
mov
push
test
sub
fbld
cwtl
mov
mov
xorl
xchg
mov
adc
std
ficomps
sub
rcr
das
or
mov
loope
iret
pop
movl
jbe
movsb
jns
pushf
fildl
jbe
fbld
pushf
lret
ljmp
popf
lock
and
mov
orl
mov
or
inc
inc
or
cld
jp
mov
mov
roll
daa
adc
fstpt
push
clc
sub
and
sub
lret
leave
inc
aas
daa
inc
push
jb
mov
push
les
mov
dec
test
dec
outsl
pop
aad
aad
xchg
int3
xlat
and
test
dec
xchg
push
push
inc
dec
insl
jno
fcomps
fsubp
push
mov
sub
inc
inc
mov
jne
in
cmc
mov
pop
xor
xor
imul
enter
sahf
or
and
push
pop
subl
adc
int
push
xchg
ret
out
pop
lret
adc
sub
lahf
add
iret
mov
push
cwtl
push
lahf
pop
jmp
sub
sbb
sub
sbb
xor
or
or
xor
ror
cmpb
out
cmpsb
pop
sub
aam
jno
sahf
mov
popa
fidivs
hlt
jns
aam
stc
mov
jnp
and
mov
call
ljmp
mull
xchg
or
xor
aaa
rcrb
rcrl
ror
or
ss
shr
jg
andl
inc
repz
mov
lret
repnz
mov
sarb
les
mov
adc
mov
in
cmpsl
pusha
ja
xchg
dec
mov
loopne
aam
push
outsb
out
cmp
test
test
mov
push
jle
stc
mov
sub
adc
mov
mov
stos
loop
cld
push
dec
mov
pop
sub
jp
bound
cmpsb
sahf
xchg
mov
dec
dec
in
inc
xor
push
pop
js
pop
inc
cli
ret
daa
mov
popf
xchg
cmp
hlt
test
xchg
xor
cmp
or
out
mov
out
pusha
xor
and
imul
es
xor
sub
inc
test
lahf
mov
sub
les
mov
fcmovu
pop
lahf
lods
pop
jnp
push
dec
call
inc
stos
push
outsl
out
xchg
mov
stc
xor
test
mov
sub
jle
fiadds
jge
mov
cwtl
mov
arpl
setb
pushf
mov
sbbb
mov
ja
xchg
push
popf
push
jb
mov
or
add
and
std
cli
bound
das
inc
mov
xor
pop
movsb
imul
mov
insl
mov
bswap
mov
pop
xchg
fnsave
inc
lahf
es
test
inc
jae
aam
insb
cmp
cmpsl
loop
stc
sbb
mov
mov
add
sti
into
pop
adc
push
push
out
dec
mov
and
and
cs
add
xor
popf
nop
std
jne
xor
push
repz
xchg
and
hlt
push
out
mov
cltd
and
and
jb
jo
pop
mov
xchg
mov
jbe
movsb
stc
imul
jmp
scas
aam
ds
sbb
into
and
sub
pop
jbe
aam
sahf
fdivl
into
push
jo
xlat
jmp
jb
adc
outsb
imulb
andb
mov
outsl
mov
daa
repnz
add
je
dec
repnz
push
test
or
sub
hlt
mov
nop
jle
gs
in
or
push
mov
add
mov
mov
ljmp
filds
xor
cmp
imul
jecxz
sub
notl
fs
inc
sbb
scas
push
add
shrl
test
sub
inc
arpl
mov
or
cwtl
mov
dec
cmp
cmpsl
mov
repnz
mov
cmp
lods
mov
push
movsb
jo
sbb
xor
push
inc
stos
cmpsb
or
and
xor
push
mov
or
mov
mov
imul
inc
iret
cs
push
adc
jle
stc
daa
fmul
cltd
call
jae
add
repnz
sub
decl
int3
jp
dec
out
ds
js
btr
pop
and
inc
test
test
push
and
push
fistpl
push
lock
test
and
mov
inc
push
mov
out
lahf
shrb
jb
or
outsl
lock
cmp
xchg
and
lcall
icebp
jo
pop
jl
cld
sahf
or
jno
push
push
pop
ret
lock
ljmp
clc
sarb
or
xchg
mov
jl
ljmp
mov
notb
or
lds
fsts
inc
stos
enter
in
ljmp
mov
das
aaa
in
and
test
push
adc
push
lock
lock
mov
mov
sub
jmp
xchg
xor
and
ja
pop
pop
mov
js
jnp
sbb
hlt
cmp
ljmp
inc
andb
lret
mov
popf
repz
push
lods
dec
mov
aas
scas
mov
mov
xor
cmpsb
out
insl
hlt
cmpsl
pop
fsubs
mov
xchg
fnstenv
lret
push
pop
xor
mov
in
scas
fxch
xchg
mov
cmpsl
addr16
loopne
mov
push
cmp
lret
pop
pop
jg
out
fs
and
scas
xchg
push
xor
dec
cld
or
cmpsl
pop
dec
and
movsb
or
fbld
jge
mov
mov
sar
jmp
roll
adc
inc
inc
cwtl
mov
iret
popa
out
adc
dec
jno
xchg
jo
sub
pop
adc
dec
sbb
ret
sahf
cltd
arpl
xor
loop
orl
add
pop
shrb
divl
outsl
mov
sbb
rclb
lea
cmpsl
jb
xchg
adc
lcall
xor
mov
daa
iret
mov
js
xchg
repz
lods
out
pop
add
xchg
pop
xchg
divb
jbe
les
sbb
pop
fimuls
in
mov
pop
jo
js
and
sub
push
outsb
inc
insb
mov
aad
or
out
rcrl
call
aas
lret
jge
into
sbb
sub
setge
ret
push
sbb
jecxz
inc
xchg
test
repz
add
lahf
in
sbb
ret
add
and
pop
outsl
push
movsb
mov
scas
jl
scas
pop
cli
out
or
mov
mov
jle
cmpsl
test
adc
andb
ret
mov
cmp
andl
scas
into
push
jecxz
iret
lods
and
out
sbb
mov
lock
pusha
cmp
jne
dec
and
mov
cmpsl
lcall
push
pop
testl
sub
push
mov
stc
pop
nop
clc
xor
sbb
jo
inc
jns
sbb
sbb
add
push
push
jae
mov
nop
xchg
dec
pushf
jecxz
and
dec
push
es
mov
xchg
push
xchg
adc
add
mov
push
cwtl
lahf
mov
aas
push
pop
stos
cld
mov
aaa
cld
dec
jns
push
mov
scas
repnz
xchg
add
movsb
inc
xchg
ds
cmp
dec
sbb
mov
dec
and
fs
mov
scas
dec
scas
je
hlt
inc
mov
mov
pop
stc
ficomps
add
insl
fmuls
xchg
int3
and
mov
insb
in
je
push
mov
bnd
mov
inc
xor
sbb
lcall
sub
sub
pop
test
xchg
clc
ja
jne
std
or
cmpsb
test
fwait
lds
setb
popf
adc
mov
mov
push
and
jns
pop
fildl
gs
add
pushf
test
dec
push
addr16
pop
aaa
mov
adc
add
outsb
leave
or
and
cmp
ss
xor
lret
mov
mov
scas
xor
int3
cmpsb
mov
push
out
lods
out
rcll
sub
ja
test
push
mov
push
jge
mov
jp
push
nop
insb
les
dec
loop
popf
mov
and
lods
fwait
or
pop
push
repnz
pop
inc
xchg
test
lea
add
stc
int3
mov
inc
js
leave
adc
cli
les
push
sub
andl
ret
or
push
and
into
movl
pop
addr16
out
scas
daa
clc
decb
mov
xor
push
sahf
sub
in
mov
jne
adc
dec
pop
adc
mov
roll
adc
xchg
cmc
add
inc
xchg
push
call
movsb
data16
pop
and
lret
inc
add
mov
jns
fildll
mov
mov
fisttpll
dec
cmp
jbe
cltd
jno
popa
nop
xchg
lahf
mov
and
in
mov
add
inc
mov
xor
shlb
push
pop
lea
jbe
inc
testl
rcrl
ret
xor
push
push
fs
pop
mull
fimull
mov
daa
mov
sub
dec
lahf
fdivr
push
fistl
jmp
jle
pusha
popf
ja
mov
ret
add
out
pusha
mov
mov
mov
jnp
jecxz
sub
mov
inc
push
ret
xor
out
push
cmp
pop
in
fcom
mov
leave
sbb
or
ret
push
in
fldl
ret
adc
xor
ret
lds
push
push
pop
das
cmp
xchg
iret
xchg
in
xor
mov
pop
xor
call
jge
jge
jbe
add
out
jmp
cmp
xchg
cpuid
out
xchg
sarl
das
mov
adc
imul
add
out
dec
mov
insl
movsb
and
rcll
sub
cmp
push
push
fucomip
cltd
int3
push
push
pusha
aaa
scas
cmp
inc
push
cmpsb
adc
jmp
dec
or
faddl
test
sub
es
out
xchg
cmp
jae
sarl
insl
pop
push
jge
testl
sub
sbb
push
sbb
lsl
enter
cwtl
xor
xchg
push
in
rorb
xor
out
or
inc
popl
xor
xor
or
iret
inc
jle,pt
cmpsb
daa
jge
cmp
in
cmp
push
cmp
outsl
push
fidivs
mov
push
inc
daa
xor
daa
enter
daa
jmp
stos
push
idivb
mov
inc
aam
jo
push
push
mov
aas
xchg
int
sbb
sbb
inc
aam
aad
shlb
repnz
adc
add
loope
mov
fidivl
das
cmp
cmp
push
lret
mov
scas
xor
cwtl
loope
xchg
aad
es
pop
lock
std
sub
shl
xchg
call
or
pop
int3
ret
and
push
pop
push
pop
adc
gs
lcall
scas
js
sti
jge
inc
jns
sarb
test
mov
dec
sbb
cltd
scas
add
add
and
xor
or
mov
rcrb
ret
mov
test
in
lahf
test
inc
dec
or
dec
les
jmp
push
call
or
adc
nop
loope
mov
sbb
shlb
add
cltd
rcr
sub
mov
dec
out
addr16
push
push
jns
rcrb
movsb
xchg
je
ljmp
fs
stmxcsr
pop
lret
stos
mov
inc
mov
jg
int3
imul
cmp
mov
sbbl
fs
cmp
push
icebp
jmp
mov
fwait
loop
inc
pop
shlb
jp
clc
mov
popa
fnstsw
daa
or
jbe
andl
and
sub
jno
inc
pop
lods
xor
adc
lock
fwait
or
fcmove
mov
xor
negb
dec
mov
and
inc
testl
or
adc
xchg
xchg
adc
xlat
lds
scas
addr16
cmp
mov
les
and
adc
xchg
mov
xor
test
mov
es
lods
fmul
push
push
js
repnz
daa
lret
and
pop
adcl
pop
nop
mov
jl
push
scas
pop
jno
shlb
cmc
call
push
add
or
cmpb
adc
sahf
mov
je
sub
fidivl
sarl
imul
dec
testb
jecxz
push
in
ja
sub
fdivr
es
imul
repz
xlat
pushf
adc
stos
icebp
pop
inc
js
inc
and
lret
and
loop
adc
inc
add
inc
insl
push
push
adc
mov
sbb
ss
out
xchg
jle
clc
adc
popl
into
xor
xor
xchg
push
or
dec
movsb
cmp
lods
jle
adc
shl
xchg
lcall
adc
fcmovne
jns
push
fcmovnbe
xchg
es
mov
loopne
xchg
jp
pop
pop
pop
jmp
mov
mov
jmp
in
mov
enter
jg
xchg
add
mov
popa
sbb
fcoms
and
mov
cwtl
pop
popa
lock
add
ja
nop
repz
inc
push
mov
es
popf
adc
xor
sbb
cmpsb
xor
scas
sahf
inc
pop
mov
add
in
or
ss
mov
test
dec
insb
out
daa
aad
jle
das
fstpl
cwtl
mov
dec
add
mov
adc
or
test
in
call
jecxz
mov
pusha
sbb
fcomp
dec
jno
mov
ror
lods
adc
rolb
insl
and
or
jae
jns
add
xchg
daa
mov
mov
mov
and
shll
xchg
inc
lock
cmp
xor
xor
ja
sub
jo
fldt
out
dec
push
mov
xor
cmp
xor
jne
std
ffree
and
add
inc
xchg
pop
in
push
adc
dec
fnsave
cli
rorl
and
push
pop
out
cld
dec
push
icebp
fidivrl
aas
notb
jp
cmp
cmc
jecxz
dec
or
es
xchg
push
call
mov
sbb
cmpw
push
mov
cmp
pop
cmpsb
fs
or
cmc
decl
adc
jmp
lahf
pop
jnp
jp
sti
inc
cmp
adcl
pop
or
ja
cli
or
cmp
mov
adc
dec
push
loop
in
stos
push
std
adcl
xor
pop
sarl
cwtl
loopne
pop
pop
xchg
sbbl
xor
ss
cs
xchg
cltd
pushf
lcall
and
lds
rep
xor
dec
stos
inc
ja
adc
unpckhps
lock
jae
jbe
ror
nop
xlat
orl
push
popa
jp
stos
jae
cld
xchg
negl
test
sub
test
xchg
mov
push
xchg
fimuls
in
idiv
cld
test
fcomp
add
xchg
loope
inc
sbb
outsl
and
lods
mov
in
pop
push
sub
out
sti
push
popf
add
stc
mov
negb
jb
jnp
rcrb
je
bound
loop
dec
ret
jle
les
xchg
bound
movsb
mov
lds
inc
pop
mov
mov
adc
push
lock
test
pushf
cmp
xchg
and
movsb
mov
aam
xlat
xor
in
cltd
jmp
add
mov
hlt
pop
scas
sti
push
and
jb
call
jns
push
dec
add
popf
pop
icebp
lock
or
jae
fmuls
xor
int3
and
pop
jbe
test
loope
in
cmp
mov
lds
out
xchg
mov
mov
pop
scas
xor
inc
and
jge
lea
adc
test
popf
xchg
pop
jo
ds
and
mov
mov
xchg
outsl
fistps
push
cmpsl
sbb
xlat
cmp
fisubl
loopne
xor
cmp
sub
and
pop
pusha
mov
pop
and
sahf
stc
inc
sub
dec
in
push
std
rcll
add
in
cmpsl
imul
call
xor
in
jbe
mov
mov
mov
inc
xor
xchg
sti
pop
mov
jmp
in
and
fsubs
test
sbb
dec
mov
out
scas
sbb
fistpl
dec
bound
inc
sbb
lods
cmp
push
or
or
fwait
sub
ds
fs
enter
cmpsl
jnp
or
incl
sub
cmpsl
pop
gs
xchg
pop
lea
loope
mov
repnz
or
mov
or
jmp
sarl
enter
lcall
in
add
jns
pop
pop
push
mov
je
nop
adc
aam
push
out
jl
xchg
mov
inc
lahf
ret
pushl
lret
cmp
or
dec
outsl
outsb
pop
and
or
mov
add
rorl
rclb
fistpl
push
mov
incl
cwtl
enter
jne
test
pusha
and
data16
mov
mov
dec
test
lea
jae
push
jp
rcrl
push
and
push
or
mov
push
in
mov
jmp
add
mov
scas
clc
xor
mov
pop
sub
addr16
mov
repz
mov
and
and
xor
or
ljmp
insl
lods
and
xchg
scas
add
xchg
out
push
cmp
mov
pop
mov
dec
hlt
adc
mov
insb
xor
cmp
dec
xor
lds
jne
ficompl
fimuls
cmp
or
mov
ret
lock
sub
mov
shrl
call
push
cld
out
repz
add
aas
xor
push
or
das
xchg
sbb
jno
mov
and
xchg
mov
jg
in
sbb
adc
cld
push
dec
std
cwtl
ret
rcll
add
cmp
xchg
stos
fldl
push
cmp
add
ss
add
nop
inc
jno
jns
jmp
mov
lcall
jae
icebp
adc
into
push
cmc
cmp
in
pop
repnz
jg
and
sub
sbb
jnp
leave
sbb
pop
inc
sbb
icebp
dec
pop
jp
add
test
ds
dec
inc
or
xor
mov
or
out
inc
movsb
rol
cmpsb
lods
xchg
jbe
gs
jmp
and
adc
mov
or
mov
mov
int
pop
test
mov
repnz
or
neg
fbld
and
inc
adc
shl
or
rep
test
cltd
hlt
adc
pushf
push
jbe
jb
cwtl
cmp
mov
jbe
fs
xchg
clc
ret
add
xchg
adc
xchg
aad
mov
sbb
cmp
lahf
rolb
lcall
dec
shl
sbb
jbe
push
or
int
sub
cmp
push
push
dec
int3
dec
add
and
mov
add
scas
xor
scas
push
fcomps
addl
push
sbb
addr16
rclb
adc
jle
mov
mov
and
mov
push
fildl
sub
jbe
push
inc
and
leave
sbb
or
mov
pop
mov
lret
fildl
sbb
lea
lahf
data16
dec
push
push
stos
pop
mov
inc
cmpsb
mov
jmp
lahf
gs
sbb
jae
or
scas
jns
ss
lret
fcomi
lock
leave
mov
inc
inc
hlt
mov
sbb
dec
negl
jns
popf
lret
or
cmc
outsl
cltd
popf
and
hlt
out
mov
mov
ds
test
dec
xchg
iret
xor
jbe
mov
cmp
std
fwait
in
add
sub
adc
jle
fldenv
cmp
aas
je
jno
outsl
xchg
inc
scas
test
testl
sahf
rolb
pop
lods
cmp
xor
add
lret
sub
and
jns
jno
dec
arpl
loope
loopne
add
xchg
cmp
xor
mov
jne
enter
xchg
inc
insb
fistpl
sub
and
sbb
push
sbb
jne
popf
pop
lcall
int
sahf
dec
js
movsl
cld
loopne
je
cmpsb
mov
push
insb
fs
arpl
pop
outsb
mov
test
mov
xor
lret
dec
lods
sub
mov
jno
das
lock
inc
mov
dec
inc
testb
mov
inc
lret
addl
inc
mov
add
popf
mov
xor
and
imul
lock
jae
add
xor
mov
adc
or
mov
inc
cmc
aas
andl
arpl
adc
ret
push
insl
xchg
xchg
fdivs
fistpl
rolb
xor
es
cmp
xor
fcompl
xchg
sub
sub
loopne
gs
cmp
stos
sub
jp
push
adc
push
xchg
aaa
sub
add
sti
cltd
das
out
cmp
sub
mov
mov
mov
inc
popa
fcomp
or
sub
inc
test
mov
or
jb
xchg
std
sbb
jae
ja
aam
and
push
test
mov
subl
add
div
adc
lcall
lahf
arpl
movsl
fimuls
lret
cwtl
mov
add
movnti
lret
add
and
pop
test
adc
push
or
jecxz
sarl
js
ja,pt
pop
push
jne
loop
inc
pop
pop
aam
jo
mov
xor
out
flds
mov
aaa
shlb
test
dec
jg
dec
in
das
cli
cmp
fstpl
push
movsl
mov
push
dec
sub
in
jbe
jp
call
or
cld
fdivp
outsb
mov
pop
pop
jle
lahf
jb
push
push
call
mov
or
cmc
xchg
shl
mov
shl
icebp
call
pop
inc
cmc
xchg
mov
xchg
std
ds
lahf
cmp
jmp
les
xor
fsub
subl
mov
stos
stc
xchg
pop
xor
xor
xchg
dec
mov
adc
lods
daa
sbb
pop
adc
gs
mov
xchg
iret
inc
stos
rcr
sub
push
push
pop
xchg
std
mov
dec
notl
sub
jecxz
xor
adc
pop
xor
push
test
cs
push
add
in
int3
pushf
inc
ret
mov
stc
xor
add
ret
cmp
push
loope
add
mov
push
dec
rcr
pop
xor
aaa
and
xor
ret
dec
test
popa
adc
jl
jl
sbb
mov
shr
mov
and
mov
xchg
call
and
jl
aaa
mov
iret
sbb
push
call
mov
insb
xor
cmp
xor
mov
and
lcall
cmpsl
lods
int
xor
mov
mov
sarb
pop
mov
lods
fsts
lcall
mov
sahf
sub
shr
mov
inc
add
jge
xchg
fists
out
xlat
mov
cmpsb
repz
and
outsl
loop
fmuls
adc
out
jl
pushf
sub
add
sahf
inc
and
and
mov
test
xchg
sbb
ja
std
xchg
push
pop
inc
outsl
jne
pop
js
pop
fdivrp
xchg
fbstp
mov
fwait
cwtl
repnz
cltd
je
repz
popa
imul
int3
call
adc
mov
push
ss
or
mov
lret
xchg
adc
popa
popa
stc
push
push
mov
movsl
mov
sarl
push
fs
iret
imul
out
cli
mov
adc
push
shll
jmp
fs
push
loopne
mov
popa
jle
insb
mov
lods
ljmp
negl
shl
jne
or
in
lea
ljmp
testb
orl
dec
lds
cmp
bound
cmp
cmp
pop
repz
das
out
mov
loop
and
in
mov
cli
ret
add
jnp
pop
mov
adc
shl
fwait
jns
mov
int
fsubrs
sarl
xchg
mov
cli
ret
inc
cwtl
mov
jecxz
cli
int
nop
pop
jg
mov
dec
stc
mov
push
inc
test
dec
incb
leave
call
dec
or
cmp
int
cld
in
in
and
pushf
lds
mov
push
sbb
jne
pop
jle
mov
dec
mov
mov
insl
into
jl
sub
inc
sub
push
andl
mov
add
aad
sbb
jmp
out
pop
add
xchg
loop
lods
xchg
push
test
movsb
mov
adc
fmul
mov
sarb
lcall
les
in
mov
dec
fnstcw
mov
sub
in
lcall
std
movsb
int
out
ds
out
and
cmp
sahf
cs
cmp
popa
mov
dec
out
push
jmp
add
das
popa
sbb
push
enter
push
and
aas
mov
push
in
fwait
loop
lret
sbb
lcall
test
rcll
mov
mov
xchg
in
jecxz
jecxz
loope
mov
fldl
inc
les
hlt
pop
iret
fs
inc
and
out
mov
test
stos
push
std
xchg
or
cwtl
adc
icebp
cmp
mov
repz
jg
jecxz
data16
sub
jge
cmp
sub
stc
push
and
pop
lods
or
mov
out
xor
divb
jle
push
in
push
mov
push
in
call
aaa
int3
in
call
pop
jnp
xor
push
lds
push
jno
pop
cmpsl
cmp
stc
arpl
out
xchg
sbbb
lret
cmc
cmp
notl
out
int
dec
hlt
mov
mov
cvtps2pd
pop
and
aas
fisubl
lods
hlt
jle
jecxz
push
outsl
inc
mov
aas
mov
xchg
insb
ret
pushf
das
icebp
sahf
mov
mov
mov
mov
fnclex
inc
mov
push
push
mov
ret
push
and
shll
jmp
cmp
test
jge
push
push
test
jp
mov
and
dec
mov
or
in
lea
pop
xchg
push
mov
pusha
adc
jle
incb
ss
ja
pop
sahf
je
lret
mov
pop
push
bound
scas
sub
or
lcall
arpl
je
pop
mov
and
xchg
leave
cmpsb
pop
dec
inc
sub
pop
sti
arpl
adc
aas
adc
dec
sub
insl
inc
loope
adc
int3
lds
pop
test
and
pusha
add
mov
fcompl
mov
xchg
sar
cmpsb
icebp
push
sbb
ret
push
loope
xchg
jne,pt
push
dec
iret
test
jb
jp
test
push
loopne
xchg
xor
pop
pop
xor
les
push
outsb
fimuls
pop
loope
pop
fdivl
mov
sub
out
dec
push
mov
fstps
fstpt
sbb
jo
jmp
ljmp
loop
rolb
imul
shll
icebp
xchg
xchg
stc
das
ret
mov
mov
imul
out
jmp
and
lahf
test
outsb
jle
pop
or
inc
int3
jns
mov
push
push
mov
int
or
mov
clc
cli
add
je
loope
fs
lods
xchg
jne
das
js
mov
in
dec
call
mov
scas
stos
fimull
inc
mov
lahf
dec
dec
gs
jl
jge
fisubs
inc
mov
jbe
adc
jne
cmpsl
xor
sbb
aaa
add
loop
fisttpl
or
decb
mov
cltd
pop
xchg
pop
pusha
jo
pop
sub
and
repz
mov
add
ret
hlt
test
loop
xchg
push
rcr
jle
add
add
sar
cmpb
add
jnp
and
add
inc
cmc
push
and
or
mov
hlt
rorl
stos
push
sbb
test
or
push
mov
ss
loopne
sub
cmp
jb
sarb
pop
inc
mov
aas
incb
jne
sbb
dec
sub
rolb
mov
cmp
add
dec
add
or
daa
cltd
sbb
and
daa
sbb
loop
push
xchg
shll
ror
and
dec
and
sbb
and
pop
add
iret
sbb
rolb
rcll
mov
pop
fnstsw
ljmp
movntq
out
adc
das
mov
inc
xor
and
lahf
adc
fldz
cmp
fs
mov
inc
call
pusha
int3
pop
or
jl
mov
fwait
into
gs
sub
lret
popa
jns
sub
out
pusha
mov
ds
int
es
mov
xchg
inc
push
pop
icebp
xchg
xchg
fs
inc
lods
mov
jno
scas
pop
iret
push
std
xlat
test
mov
sbb
out
push
cmp
das
pop
hlt
outsb
ljmp
je
xchg
mov
test
xchg
mov
in
out
shlb
cmp
xor
stc
test
lock
add
xorl
jo
push
push
pop
scas
sarl
jbe
ss
shlb
sbb
sub
sub
lods
jge,pn
pop
out
xchg
lcall
fwait
int3
ficompl
push
sti
aaa
lds
imul
xlat
sbb
or
rcr
cmp
sbb
jle
jbe
int3
and
pop
mov
ljmp
mov
scas
add
ret
mov
pop
lret
inc
fdivp
test
jno
ss
xor
sbb
stc
ds
xorl
out
fdivl
and
aaa
std
xor
test
cmp
ret
in
lea
sar
fs
hlt
insb
out
xchg
xchg
inc
lret
test
pop
scas
sub
mov
popa
cwtl
or
ret
jecxz
fidivs
mov
and
insl
jl
fldt
lahf
popf
jnp
cli
push
fsubs
jmp
jo
in
pop
cld
sub
dec
popa
mov
nop
aas
neg
mov
xchg
lret
sub
inc
sbb
js
adc
mov
repz
stc
sub
jg
push
xchg
fnstsw
lods
cmp
mov
cmpsb
icebp
inc
lea
inc
or
jo
mov
cmp
insl
bound
inc
push
mov
xchg
pop
dec
in
stos
mov
int
fbld
push
xchg
pop
push
ja
or
bound
xchg
fistl
test
rorb
add
sbb
sahf
ss
pushf
int3
xchg
fcomi
pop
aad
add
push
adc
out
popa
pop
lods
out
mov
shl
insb
xchg
and
ja
fiaddl
mov
xchg
or
mov
mov
inc
dec
or
xor
or
ss
inc
jg
dec
or
jg
inc
mov
and
sbbb
test
mov
addr16
icebp
cwtl
lods
add
in
rolb
xchg
dec
sbb
cli
cmp
mov
sub
mov
pop
jb
inc
dec
mov
mov
push
push
not
in
dec
cli
cmpsl
and
fiadds
sahf
cld
push
mov
jne
xchg
mov
cltd
scas
test
lret
sti
jbe
mov
rolb
cmp
mov
loopne
or
sbb
xor
sub
dec
add
jbe
shrb
aad
mov
push
dec
sub
mov
push
repnz
xor
jl
adc
cmp
inc
xchg
gs
test
aaa
add
pop
and
inc
sti
sbb
fstps
adc
out
inc
dec
cmp
mov
sbb
sbb
movsl
add
popf
adc
call
sub
jl
cmp
push
or
aas
or
or
mov
xchg
rolb
and
pop
pop
sub
sahf
mov
fdivl
jge
lods
jmp
mov
and
jecxz
xchg
push
aas
inc
rcrb
push
pop
mov
xchg
cs
jns
cmc
aad
jp
xor
in
icebp
jno
xchg
out
lea
jle
mov
inc
xchg
jae
shll
in
pop
pusha
test
mov
int
sahf
dec
jmp
inc
cmp
mov
enter
aaa
ljmp
in
pop
push
mov
jae
mov
test
loopne
loopne
pop
call
add
scas
add
or
aaa
daa
cmp
push
std
cmp
das
sbb
dec
add
rcll
push
nop
gs
pusha
jbe
rorb
mov
sub
dec
into
adc
dec
je
mov
ret
jecxz
mov
loopne
ss
jb
ss
aas
in
in
pop
push
cmp
mov
cmp
adc
pop
std
xchg
outsb
stos
inc
xor
and
jg
xchg
pusha
mov
rolb
adc
movsl
vmread
mov
ljmp
cltd
mov
in
int
add
movl
xchg
mov
xor
xchg
or
in
cmpl
xor
mov
or
mov
imul
jle
mov
push
imul
sbb
pop
and
mov
jo
cmp
sub
mov
fisubrs
ss
mov
and
sbb
or
ret
sbb
pop
push
push
add
insl
sub
call
mov
dec
sbb
aaa
je
call
xchg
fsubr
scas
mov
cmp
fnstcw
push
add
cmc
pop
lods
in
sbb
jl
pop
pop
xchg
stos
cmc
dec
push
test
push
sub
cmp
mov
fwait
inc
es
pop
sub
hlt
scas
adc
repnz
in
shlb
mov
mov
je
jne
xchg
xor
adc
hlt
das
dec
dec
lahf
cmp
roll
out
aam
xor
clc
add
mov
add
mov
les
mov
mov
xchg
adc
mov
fcmove
int3
mov
clc
das
shll
mov
shl
fmull
mov
mov
fistl
sbb
push
push
push
xchg
fstps
add
cld
xchg
add
jecxz
jp
lret
scas
les
mov
jnp
nop
mov
xchg
push
pop
call
cmp
int
outsl
or
imul
jge
push
call
fsts
mov
pop
enter
lret
movsl
or
aas
xchg
jp
xchg
jno
xchg
cmc
xchg
pushl
inc
fwait
lock
int3
adc
or
jle
les
rol
adc
cmp
push
sarl
test
or
mov
clc
pushf
sbb
popa
adc
inc
mov
scas
mov
aaa
bound
call
dec
mov
pop
fisubl
add
or
sbb
repnz
inc
cmpsb
push
sbb
scas
mov
xchg
daa
imul
frstor
in
pop
fisubl
in
sbb
lea
jle
les
sti
in
mov
cmpsl
daa
jl
mov
mov
inc
je
cltd
sbb
shrl
and
scas
cmp
mov
add
pop
xor
mov
les
arpl
aad
cs
andl
cmp
dec
cmp
cmp
movsb
popf
movsb
cltd
pop
lea
outsl
inc
push
sub
add
insb
or
inc
push
sub
sbb
lods
popf
xor
dec
jno
pop
bound
add
fs
xchg
add
repnz
andb
mov
icebp
jae
pop
rcrb
push
test
fisttpl
sar
mov
test
pusha
ljmp
repnz
stc
sbb
ljmp
imul
fsts
into
add
and
addr16
jmp
and
add
cwtl
mov
js
clc
mov
sub
pop
push
rcrb
push
jl
fisubrs
cld
xor
and
cltd
sub
inc
push
push
add
push
aam
jmp
lret
addr16
xchg
or
shl
pop
push
mov
rcll
inc
pop
iret
data16
dec
enter
pusha
mov
ljmp
enterw
sbb
inc
mov
and
inc
icebp
mov
cmp
sub
push
ljmp
xchg
outsl
add
add
and
pop
mov
fidivl
cmpsl
insb
je
push
bound
mov
aad
insb
sarl
sbb
cmp
jg
xor
pop
imul
pop
inc
jecxz
adc
xor
cmp
xchg
mov
cmp
test
scas
or
arpl
std
push
sbb
and
or
ret
lahf
rcl
pop
add
negl
in
arpl
cmp
les
xor
and
cmpsb
ds
dec
sbb
push
lea
lds
or
ja
dec
lcall
jb
push
mov
jecxz
outsl
pop
ror
sub
cmp
jae
rolb
mov
add
lods
cmp
sub
outsl
jl
xchg
pop
jno
imul
add
bound
test
sbb
push
lock
cmp
mov
ret
sbbl
clc
mov
pop
aam
std
adc
pop
aaa
loop
jo
notl
push
jmp
out
fdivrs
iret
divb
push
cmp
pop
sub
push
xchg
sub
clc
out
fscale
add
cli
int
rcrb
mov
test
decb
push
les
shrb
pop
fcmovne
js
jg
push
fildl
repz
pushf
push
add
dec
pop
cwtl
or
xchg
pop
movsl
call
jb
das
xor
push
insl
pop
xchg
aaa
push
jbe
adc
jno
mov
cmpsb
jmp
sbb
sbb
and
pop
ficomps
xchg
nop
mov
mov
inc
cltd
stos
or
stc
push
stc
fisttpll
mov
xor
aad
mov
mov
push
lea
and
test
push
xchg
jmp
cmp
stos
jmp
je
inc
sub
xor
es
mov
and
cwtl
out
daa
rcll
cmp
sahf
pop
addr16
pop
xlat
mov
dec
adcb
push
pushf
pop
add
loopne
inc
adc
mov
fwait
sub
mov
out
lock
cmp
and
xchg
out
xlat
and
scas
movsl
stos
lcall
adc
sub
xor
mov
xchg
jo
test
sbb
rorb
ljmp
mov
aam
push
sub
outsl
cmc
lods
in
and
bound
pop
sub
xchg
inc
fistpl
orl
xchg
xchg
repnz
mov
or
adc
mov
mov
faddl
sbb
int3
cmp
xor
pop
mov
xor
xchg
xlat
movsl
xchg
and
jae
jmp
inc
movsb
mov
inc
dec
mov
mov
push
lea
aad
pop
lods
scas
daa
fmul
sbb
or
scas
push
nop
outsb
in
insb
mov
popf
mov
sti
push
and
fsubrp
hlt
loope
push
inc
repz
dec
mov
pushf
push
in
addb
mov
sub
in
aas
inc
fldln2
push
push
stos
sbb
mov
cmp
lret
rcrb
adc
or
les
je
outsl
rorb
btc
xor
xor
jg
inc
cli
call
addr16
jmp
arpl
cmp
jne
fsubs
or
sti
and
jo
cs
inc
push
stc
ljmp
outsb
pop
pushf
xchg
mov
lret
cmp
sahf
sub
mov
mov
cs
push
test
and
pushf
add
popf
mov
mov
insb
cmpsl
ret
push
test
cmp
ret
inc
sbb
jge
ss
je
or
dec
je
jmp
pop
test
loope
or
int3
mov
push
and
pop
push
ftst
jecxz
push
adc
jo
sub
imul
fwait
xor
cmp
push
or
or
jg
es
push
es
push
xor
outsl
mov
mov
pop
sbb
popf
imul
mov
std
ja
sbb
and
pop
add
push
sub
lret
stos
inc
xchg
xchg
mov
leave
push
push
or
push
rcll
shll
hlt
sti
pop
incl
ljmp
ret
ja
adc
ds
aam
adc
mov
mov
pop
cwtl
adc
xor
out
xlat
daa
aaa
mov
add
inc
rcrb
shrb
bound
aaa
jmp
adcb
xchg
lcall
sub
das
mov
popa
js
cmp
push
out
jge
or
mov
inc
fs
hlt
sahf
pusha
pop
fisttps
popf
xchg
loopne
and
sbb
lds
push
add
mov
xor
out
aaa
movsb
dec
repnz
dec
mov
insl
stos
dec
mov
into
lret
push
repz
pushf
or
cmp
ret
dec
or
clc
cmp
mov
enter
flds
jle
mov
fwait
rcll
movsl
push
jle
shl
sysexit
and
enter
enter
orl
inc
cmpb
cmp
xor
mov
filds
es
stc
cmc
pop
jge
dec
test
push
ss
icebp
outsl
sub
mov
aas
cs
popf
push
in
push
and
dec
lock
xor
mov
xchg
ss
ds
data16
aad
dec
sub
sub
stc
sahf
daa
jno
in
dec
dec
jno
push
jo
xor
sub
jns
inc
xchg
push
subb
add
sbb
shl
into
jmp
sub
xchg
loope
jg
shlb
push
flds
cltd
dec
inc
jl
sbb
sub
or
pop
and
lret
ljmp
pop
push
fcoms
rcr
stc
add
outsb
sbb
adc
dec
shr
pusha
or
mov
dec
push
xor
test
imul
mov
mov
lret
lret
push
cwtl
cmpsl
xor
jb
sub
xchg
iret
dec
xchg
fisttps
xchg
mov
dec
arpl
cltd
dec
aas
push
sbb
or
test
mov
jb
or
lcall
push
js
add
mov
xchg
xor
mov
mov
loopne
aaa
mov
add
lret
stos
clc
das
test
mov
cmp
adc
sub
xchg
nop
int3
sbb
test
push
pop
out
and
jmp
inc
sahf
stos
sub
cmpsl
in
test
loopw
add
pop
xor
sub
xor
sub
mov
aam
xchg
sbb
ret
adc
xor
jae
fs
inc
push
outsb
mov
out
loopne
aaa
rcrl
inc
xchg
insl
cmp
or
push
pop
aaa
mov
inc
mov
cmp
dec
imulb
mov
cwtl
ja
popa
stos
dec
fistpll
or
cwtl
test
pop
rcll
fldt
popa
insb
in
sub
fnstsw
jmp
es
loopne
sarl
lcall
je
inc
pop
aaa
pop
mov
xchg
lds
mov
in
mov
adc
fcomps
inc
mov
test
imul
mov
out
js
sbb
int
mov
dec
jne
sbb
imull
mov
mov
mov
and
rcrl
cli
insb
ljmp
and
cmpsb
xor
push
inc
sbbl
push
or
das
leave
in
and
pop
push
push
pop
mov
mov
xor
pop
cltd
and
aam
out
mov
jecxz
paddsw
iret
dec
inc
pop
minps
shlb
mov
les
jp
mov
mov
mov
xor
mov
das
pop
ret
mov
sub
ss
and
jp
and
pop
pop
xchg
dec
stos
adc
push
mov
sub
xchg
mov
mov
test
les
js
xchg
push
dec
js
and
scas
jnp
jmp
adc
mov
and
lock
fst
pop
inc
sti
stos
sub
xacquire
sahf
pop
sti
and
dec
frstor
rolb
aad
sub
in
add
xlat
shlb
inc
dec
stos
xchg
out
sarb
jnp
xor
cli
mov
dec
mov
push
popaw
repnz
shrb
cmp
fcomps
jl
pop
mov
pushf
daa
leave
or
test
ds
dec
sbb
out
arpl
hlt
add
mov
sub
ficoml
lcall
sub
jno
repz
or
ds
das
movsl
int
rol
aas
mov
aam
loope
and
fstl
jg
add
jg
cld
stos
sbb
or
add
ljmp
std
mov
pushf
test
dec
shll
add
fwait
mov
es
cld
and
std
insb
mov
adc
pop
int3
aad
or
test
sub
sbb
negl
iret
xor
pop
fiadds
mov
xchg
pop
inc
adcl
ret
cld
jne
in
call
jbe
mov
lret
add
repnz
pop
xchg
mov
cmp
dec
cmp
in
xor
or
in
out
and
push
xor
or
jns
lcall
loope
add
insl
jle
insb
push
xchg
mov
push
sbb
add
in
adc
ljmp
lds
push
and
mov
addl
aad
push
or
hlt
sbb
fxch
xchg
pushf
xor
xor
mov
lret
fs
data16
mov
loop
das
xchg
sub
push
xacquire
ljmp
and
in
jno
jno
adc
mov
ja
clc
lret
mov
enter
mov
leave
mov
out
bswap
les
aam
icebp
popf
nop
sbb
sub
bnd
nop
in
stc
mov
dec
and
jecxz
fidivl
and
and
xor
std
adc
add
jbe
xor
adc
mov
mov
insb
and
in
out
and
sbb
mov
mov
dec
jns
push
fsubl
in
cmp
cltd
sbb
push
pop
xor
fstl
loop
cltd
mov
and
mov
jge
jge
mov
sahf
push
push
loop
and
sbb
sub
sbb
cmp
repz
xor
lret
aam
leave
popa
adc
xor
sbb
push
std
inc
mov
push
sbb
inc
cmp
xor
xchg
movsb
lcall
js
aaa
pop
sbb
pop
adc
sub
fs
call
dec
mov
pop
fnstsw
out
adc
js
cs
push
imul
iret
call
xor
cld
dec
hlt
movsb
ret
mov
mov
das
cmp
into
in
fmull
dec
loope
movsl
inc
insb
lret
add
or
aas
xchg
adc
pop
lock
je
decl
fs
leave
aas
loop
mov
xor
xchg
sub
cld
xorb
sub
mov
adc
pop
mov
xchg
add
mov
jns
sahf
jmp
shll
xchg
sub
popf
cmp
scas
daa
ja
addr16
das
dec
not
push
xor
pop
insl
xor
xor
mov
add
fdivs
subb
cwtl
push
sbbb
mov
pusha
mov
sarb
xchg
mov
dec
aam
dec
jbe
adcl
jge
or
mov
xor
gs
inc
cmp
jecxz
push
jnp
ret
or
and
ret
mov
outsl
inc
and
js
inc
push
or
les
mov
sub
xchg
cmp
add
arpl
inc
cmp
xor
jbe
or
mov
dec
inc
fdivr
outsl
cmp
rcrb
and
jnp
jno
push
dec
clc
pop
pop
xchg
sbb
adc
pop
dec
into
rclb
mov
jno
call
movsb
inc
arpl
lock
pop
rorl
jmp
push
movsb
push
data16
or
icebp
jmp
test
mov
pop
ret
clc
mov
dec
adc
pop
push
cmpb
negb
mov
or
sbb
sub
adc
hlt
mov
sbb
jne
inc
cli
dec
dec
mov
xchg
mov
jp
and
mov
push
ss
push
mov
mov
fists
mov
add
out
out
mov
in
xchg
sub
or
aaa
mov
sbb
test
lods
mov
icebp
popf
xor
mov
mov
iret
cmpsl
mov
sbb
jne
push
fldenv
ds
mov
adc
jg
std
into
inc
shll
xchg
stos
jns
xchg
and
jns
sbb
cwtl
arpl
mov
test
dec
clc
cmpsb
js
daa
into
insb
inc
into
mov
jge
daa
in
in
inc
notb
pusha
jl
jecxz
adc
repz
cmc
sub
add
je
pop
shl
pop
add
jbe
fcom
sub
pop
cmp
fcomps
fcoms
inc
popf
std
inc
or
sub
pusha
push
jecxz
xchg
aad
cli
shr
sbb
lcall
ret
adc
out
fsubs
mov
loope
shlb
jns
rcr
pop
sahf
mov
adc
pop
jge
push
inc
jnp
dec
out
fsubrs
xchg
mov
inc
mov
test
jne
sbb
dec
sub
out
outsl
aam
cmp
lods
leave
cltd
inc
dec
fisubl
cltd
xor
ljmp
sub
pop
test
sbb
sarl
hlt
data16
xchg
loop
les
loop
repz
mov
jmp
mov
dec
andl
push
mov
jp
lds
and
sbb
repnz
bound
pop
jo
pop
aam
cmc
icebp
sub
mov
in
pop
es
jle
sub
push
mov
vpaddusb
bound
mov
mov
popf
scas
push
push
dec
push
fwait
loope
push
lcall
dec
dec
shll
jnp
addl
adc
mov
into
shrb
int3
and
or
push
xchg
pop
les
xchg
gs
inc
mov
ficoms
add
adc
jno
mov
repz
xchg
mov
and
stos
or
ret
leave
push
call
outsb
sub
push
and
scas
adc
jmp
int3
xor
aas
loopne
pop
leave
bswap
outsl
mov
push
inc
push
sbb
push
loop
aas
jne
pop
test
and
and
push
pusha
lcall
lret
mov
or
add
repnz
xchg
andb
mov
push
jecxz
fcoms
js
or
in
shrb
lret
sahf
test
shll
jp
adc
push
jae
js
mov
xor
mov
xchg
pop
push
stos
cmp
shr
popa
sarl
stos
and
cld
outsl
add
into
adc
lcall
pop
ljmp
pop
nop
ljmp
sub
jne
insb
jbe
addl
inc
hlt
mov
xor
test
jmp
add
push
or
pop
pop
mov
cmp
cld
jmp
mov
stc
fstpt
and
mov
jne
arpl
adc
adc
loope
stos
mov
lret
cmc
pusha
mov
sahf
test
out
aaa
mov
mov
out
mov
pop
mov
cmp
frstor
es
cmp
xor
mov
mov
mov
lahf
dec
sub
mov
cmc
rcrl
dec
push
loope,pn
rcrl
inc
or
dec
mov
fsin
push
lret
cmp
mov
dec
add
movsl
sbb
inc
out
and
lods
outsb
fs
and
or
dec
jnp
repnz
sub
jbe
jno
out
cmp
push
bound
xchg
cmp
xchg
call
mov
jg
sbb
lahf
psubsw
movsb
out
mov
aad
fadds
pop
fstpl
push
out
enter
ret
fisttpll
mov
sbb
adc
movsl
jge
ficomps
inc
fiaddl
imul
mov
adc
fildl
mov
cmp
add
sub
sti
pop
pop
jno
xor
les
fidivrs
mov
popf
xchg
add
mov
loope
pop
fldt
pop
adc
fldl
or
and
iret
mov
and
imul
jmp
or
sahf
jle
adc
ss
ss
fldl
icebp
aam
push
and
inc
mov
xor
hlt
icebp
stos
jle
adc
and
push
dec
mov
movsb
sbb
push
push
and
cmp
fwait
icebp
icebp
shr
jns
xor
loop
nop
or
and
xchg
scas
pop
fildll
lods
in
cltd
sbb
cli
cli
idivl
mov
xchg
xchg
iret
adc
and
xchg
adc
adc
ss
imul
shl
jecxz
sub
daa
xchg
cwtl
and
mov
negl
adc
dec
shrb
das
in
jbe
lret
sub
mov
shlb
inc
jbe
or
sbb
xchg
sbb
fldt
mov
dec
insl
inc
sti
inc
test
mov
mov
out
xor
in
mov
mov
add
mov
das
mov
or
push
push
lret
js
imull
pop
dec
pop
test
aam
sbb
daa
mov
pop
sub
pop
sub
cmp
hlt
push
pop
mov
clc
lea
dec
hlt
out
push
jae
xchg
iret
mov
je
inc
subl
adc
fwait
mov
into
jmp
mov
cmp
or
inc
ret
jnp
xchg
push
or
mov
les
pop
lock
xchg
jge
sbb
pop
mov
cmp
cmp
cli
xorl
xorb
sbb
loope
lret
repnz
es
push
stos
or
mov
lahf
lcall
sbb
stos
cmp
push
mov
pop
pop
sbbw
ss
loopne
and
aad
popf
addr16
lds
and
cs
ficoms
dec
cmp
dec
leave
xor
rorl
fwait
adc
test
push
pop
cmp
aaa
adc
leave
or
mov
add
push
cmp
and
repnz
enter
test
xor
sub
fimull
push
dec
iret
xchg
shlb
push
sbbb
mov
sahf
mov
rcr
adc
cmp
mov
popf
push
jne
or
movsl
dec
int3
sti
add
lahf
jmp
icebp
pop
sub
and
sub
xorb
xor
adc
aam
test
loope
xchg
ss
mov
mov
pop
push
scas
ja
dec
neg
movsl
cmp
cs
icebp
out
pop
push
aas
loope
in
jecxz
out
divb
mov
mov
inc
mov
jmp
ss
lds
mov
cli
iret
int3
sti
mov
pop
lret
clc
jmp
xchg
pop
sub
mov
xchg
and
shrb
les
push
and
pop
in
das
mov
cwtl
mov
in
adc
or
sti
call
rolb
in
jg
mov
adc
mov
fimuls
cltd
cmp
decb
js
cmp
push
enter
mov
andb
sbb
mov
test
test
xchg
ds
dec
xor
insb
push
xchg
loope
sbb
scas
scas
jl
xchg
add
lahf
movsl
orb
insl
xchg
dec
hlt
inc
loope
pop
testb
cltd
jno
leave
sub
push
mov
cmp
xchg
xor
xchg
dec
push
fadd
cwtl
or
mov
ret
sti
jbe
sbb
int3
dec
mov
fidivrs
fstps
iret
pop
cmp
pop
jg
gs
inc
jbe
pop
sbb
in
cmp
or
arpl
ret
cmp
add
push
mov
dec
pop
xor
loopne
pop
mov
mov
orb
test
or
sahf
imul
std
mov
add
jp
pop
mov
lock
jno
push
cmp
iret
cld
dec
pop
sub
jbe
fcomi
adc
and
mov
lahf
into
inc
shll
mov
lret
inc
sub
je
cmp
mov
inc
test
mov
pushf
insl
je
clc
cld
into
pop
dec
dec
ds
xchg
cmpsb
mov
adc
or
daa
xchg
lock
inc
rcll
popf
mov
jnp
jne
rcr
aaa
lods
pushf
in
xchg
xchg
xchg
xor
mov
loope
pushf
xchg
ret
push
mov
orl
fcmovnbe
enter
lds
sub
pusha
aaa
divb
ljmp
push
cmp
mov
push
dec
mov
pop
das
jno
push
rcr
and
sahf
ja
idiv
in
inc
mov
das
push
fcompl
aam
jnp
aad
push
xor
ja
add
lea
xchg
pop
push
mov
or
xor
idivb
dec
fiadds
fwait
jp
faddl
js
sahf
addr16
mul
jecxz
mov
mov
cmpsb
ret
std
pop
rcr
mov
and
jae
into
add
sahf
adc
pusha
aas
pop
or
fsubrs
pop
lock
dec
xor
jae
mov
fimull
clc
xchg
add
dec
adc
fwait
xchg
aas
mov
ret
pop
jnp
fdivp
mov
xchg
lret
xchg
ret
inc
adc
mov
lret
ret
mov
out
ficompl
int3
scas
adc
xor
xor
pop
and
ret
shlb
out
mov
jns
subl
aas
outsl
ficompl
cmp
stos
pop
fisubrl
lcall
mov
sbb
inc
dec
inc
xchg
loop
setp
inc
cmpsl
outsl
ljmp
movsb
mov
in
out
mov
mov
fildl
stos
int3
ss
push
idiv
movsb
inc
mov
mov
mov
aas
cmp
and
xchg
push
clc
aas
dec
or
bound
pop
out
outsl
outsl
push
leave
fcomi
or
lret
pop
fiadds
dec
jle
in
cmp
enter
mov
daa
dec
xchg
orb
cmp
mov
roll
insl
out
repz
rclw
gs
lds
ljmp
xchg
mov
xchg
repz
hlt
les
or
pop
popf
movsb
pop
pop
movb
mov
push
pop
int
dec
cli
repnz
loop
mov
jle
subb
pushf
insb
orb
mov
sub
icebp
shll
dec
dec
cltd
mov
ds
insl
jmp
roll
push
xchg
test
mov
lock
aas
icebp
pop
insl
adcb
rcr
cmpsl
insb
sub
jecxz
inc
mov
xor
jle
cmp
sub
sarb
jmp
xor
iret
or
add
jecxz
je
xor
mov
fwait
in
cwtl
divb
lret
mov
pop
les
mov
xchg
rcr
mov
mov
ljmp
insb
push
and
mov
inc
ret
mov
lock
mov
es
stos
xlat
movsb
rcll
lcall
xor
mov
pop
add
mov
mov
aas
insb
movsb
aam
mull
std
in
adc
faddl
add
test
xchg
shl
adc
loopne,pt
cs
aam
aas
data16
sti
add
jecxz
scas
ret
fdiv
push
push
jg
dec
xor
add
jo
xor
or
test
mov
dec
daa
test
mov
xlat
lret
and
cltd
test
ljmp
sub
pop
out
fmull
sbb
das
clc
push
pop
jae
add
lret
adc
add
push
cwtl
mov
rorb
jb
dec
sar
movsl
cld
fidivl
adc
jl
out
xchg
pusha
js
mov
bound
pop
dec
cmp
loopne
dec
pop
shlb
or
std
sub
ds
roll
out
negl
out
fimull
or
addr16
popa
jp
sbb
inc
xchg
sub
xchg
jp
push
adc
lock
jae
sbb
pushf
lret
je
ret
dec
jg
or
pushl
ret
std
sbbl
and
gs
mov
bound
jmp
sub
pop
pop
shl
or
subl
rorl
sarb
cmpsl
dec
decb
sub
aad
shll
adc
or
sub
popa
inc
inc
pop
shr
pop
inc
movsb
dec
rcll
pusha
push
adc
cli
sub
fimull
push
adc
adc
adc
test
push
fcompl
dec
mov
jp
stc
imul
sbb
addr16
popa
shrb
ja
dec
adc
movsb
cltd
sub
stc
xchg
pop
es
push
jp
mov
xlat
fimuls
or
int
lods
pop
movsl
jle
repz
hlt
into
lock
adc
and
sbb
enter
or
js
or
cmp
into
xchg
cs
sub
fs
out
or
mov
cmc
out
xchg
inc
popa
jo
sub
div
or
pop
xchg
lret
or
pop
jbe
mov
xor
fucom
test
cs
ss
and
mov
or
push
fwait
cli
dec
fmuls
xlat
test
sbb
push
add
sbb
ficoms
into
je
roll
lret
sub
or
inc
loopne
out
jns
in
sar
dec
ret
scas
adc
xor
xor
mov
ljmp
ljmp
sbbb
mov
aas
dec
ja
add
jle
outsl
fdivl
nop
pusha
inc
ss
rolb
push
rcrl
out
outsb
fwait
int
adc
pop
push
stos
testb
and
mov
add
inc
pusha
sbb
scas
aam
inc
cs
outsb
fldenv
in
mov
mov
stc
imul
xchg
xchg
xor
dec
nop
dec
lods
cmp
sbb
add
cmpsl
and
xor
mov
jbe
fdivrs
xchg
cmp
das
sbb
fsts
outsl
std
divl
dec
hlt
mov
in
mov
jmp
xchg
adc
sub
imul
cwtl
movsl
cmp
mov
ss
or
mov
arpl
shr
out
or
clc
add
jne
push
sbbb
pop
push
in
and
fcomi
pop
mov
add
add
mov
cmc
push
arpl
lock
lds
pop
loop
mov
dec
adc
pop
jl
repz
lea
mov
test
dec
cmp
jne
orl
test
test
repnz
mov
sub
rorb
and
shll
and
inc
lcall
fs
js
pop
sub
and
or
pop
sbb
mov
sub
sub
or
lds
out
shlb
mov
mov
cs
fdivs
into
pop
dec
ss
clc
std
and
mov
jo
jecxz
pop
jae
xor
cmpsl
std
stos
rclb
fwait
xchg
sbb
rorb
add
hlt
cmp
adc
xor
push
mov
and
pop
mov
or
mov
hlt
pop
aas
mov
or
scas
xor
gs
mov
jle
add
dec
jl
lahf
xor
jl
cmp
push
mov
fdivs
wrmsr
jl
iret
int3
fistl
cli
lret
mov
jl
incl
jge
lea
std
out
aad
lcall
sbb
cs
mov
push
loopne
sub
lods
inc
sub
ficoml
push
pop
xor
pop
ss
inc
mov
sub
mov
fimull
jl
pop
popf
imul
cmp
lcall
out
and
adc
jno
xchg
stos
push
cmp
pop
add
out
shl
push
mov
pop
fwait
adc
enter
pop
mov
sub
stos
xchg
push
inc
cwtl
mov
dec
cmp
add
hlt
punpckhbw
push
lahf
data16
inc
xor
add
js
lods
ret
fistl
adc
insb
nop
es
xorb
sub
bound
sub
mov
mov
js
adc
out
jne
ret
jns
jl
aam
xor
xor
test
sahf
sbb
jbe
scas
jbe
inc
jge
dec
data16
pop
sbb
sbb
fs
jle
mov
das
and
inc
jo
iret
cltd
sub
test
add
inc
add
xchg
pop
push
mov
jg
aad
out
dec
jo
lock
mov
daa
mov
dec
idivb
mov
popf
fstp
fisttps
pop
xchg
add
fisubrl
aam
cmp
iret
stos
cmc
cli
and
mov
movsl
xor
adc
imul
lds
xchg
lock
test
imul
jnp
pop
push
test
jb
mov
lar
jle
outsl
in
inc
popf
jg
mov
filds
jge
push
movsl
push
jne
push
or
ja
movsb
mov
xchg
test
pop
lret
cwtl
lahf
pusha
lret
mov
jnp
or
mov
jp
mov
pop
fldenv
or
mov
lret
or
or
cmp
stos
outsb
pop
push
dec
scas
jno
lods
in
adcl
in
and
mov
push
lock
pop
pop
sub
inc
push
lret
inc
pop
cs
push
mov
rcrl
icebp
pop
jae
mov
aaa
jae
pop
imul
iret
call
inc
mov
sub
dec
sub
shl
jb
pop
cmpsb
outsl
insl
insl
mov
clc
push
or
adcl
out
aam
fdivrs
mov
cmp
jno
cmp
ds
mov
clc
ss
adc
mov
push
std
addl
mov
mov
fs
jo
out
adc
cmp
add
imul
in
test
xlat
push
add
mov
push
adc
pushf
ljmp
jp
adc
pop
lret
or
cmp
mov
mov
pop
jg
xor
flds
sbb
outsl
dec
loope
fisubrs
add
shrb
jge
loop
cmpsl
jnp
jmp
mov
xchg
jae
sti
stc
adc
loopne
push
gs
je
pop
inc
add
mov
adc
sub
or
lcall
and
lret
push
inc
or
nop
enter
scas
xchg
add
lds
repz
mov
divl
mov
xor
rcrb
dec
movsl
xor
test
orl
add
jle
pushf
adc
out
out
and
jbe
lea
and
dec
movsl
and
iret
add
adc
cmp
jmp
fwait
jge
jo
loope
es
jmp
xor
mov
setge
lret
mov
and
scas
sti
push
push
scas
cmpsb
lahf
inc
pop
sbb
mov
sbb
jecxz
int
jmp
icebp
or
xchg
inc
sub
and
add
jg
bound
ret
lds
add
push
int
xchg
int
pop
cmpsl
fdivrs
xchg
mov
cmp
mov
pop
out
sbb
inc
inc
dec
mov
mov
and
xchg
out
mov
jae
mov
xor
mov
gs
xor
ja
in
jle
jle
out
scas
add
sbb
pop
pop
inc
dec
sbb
sti
adc
mov
test
sub
ror
pushf
daa
das
ffreep
adcb
pop
or
pop
sbb
lcall
cmpsb
daa
pop
push
xlat
insl
in
jmp
pushfw
std
loopne
rcl
pop
shl
sub
je
adc
js
mov
sub
lods
jg
movsb
out
mov
insb
paddusw
push
pop
nopl
add
or
faddl
pop
bound
sbb
cs
call
dec
inc
lods
sub
mov
mov
jno
stc
xor
mov
lods
bound
dec
lods
fcoml
test
movsb
lret
dec
decl
xor
mov
pop
das
pop
pop
mov
xor
push
mov
leave
enter
inc
in
ja
xchg
add
clc
and
rcrl
out
and
push
cmpsb
addb
adc
inc
test
mov
mov
add
into
lds
sbb
inc
push
shlb
dec
and
push
ljmp
cs
imul
imul
loopne
xchg
stos
fstps
rcrb
xor
rolb
lods
scas
push
dec
sub
pop
movsl
mov
jge
lea
xchg
pop
pop
xchg
and
adc
pop
es
stos
jo
jg
pop
sbb
test
lret
xchg
jb
mov
or
pop
jae
jle
roll
cwtl
and
and
imul
rorl
xor
sbbb
mov
adc
fsubs
inc
pusha
cmc
jo
mov
inc
mov
lret
movsb
daa
sbb
push
xor
flds
sbb
out
loop
jmp
inc
cltd
loope
gs
js
mov
pop
ds
and
dec
xor
aad
mov
mov
rcrl
push
cmc
ret
neg
test
loope
cwtl
lods
lock
sbb
jp
mov
int
out
mull
sub
xchg
adc
xor
push
cmc
cltd
and
inc
pop
inc
stos
push
and
popf
cmp
fimull
inc
mov
sti
fildll
sub
pushl
mov
inc
cmp
xor
mov
bnd
push
xor
mov
js
cmc
scas
jbe
pushf
pop
rorl
call
stos
add
and
jne
lea
add
out
and
xor
pop
fnsetpm(287
inc
dec
mov
jle
test
ja
mov
nop
or
sbb
movsb
jmp
adc
mov
jb
mov
xor
push
ss
imul
into
jnp
nop
add
aas
leave
pop
ret
push
xchg
jae
ljmp
mov
je
xor
jg
mov
jno
push
pop
aaa
fidivl
lret
dec
cmp
push
mov
cmc
hlt
inc
xor
lea
push
sub
cmp
xchg
dec
insl
jbe
jne
rorl
add
sub
mov
mov
inc
shrl
adc
stos
add
dec
repnz
mov
ret
fadd
cmp
xchg
das
jg
push
flds
and
cmp
mov
push
mov
testb
addr16
add
xor
stos
jns
jg
adc
add
int3
sub
arpl
iret
dec
out
lcall
lret
fimull
cwtl
imul
xor
insb
mov
clc
push
inc
mov
push
sub
xor
icebp
imul
jl
insl
or
in
out
pop
int
jo
jmp
popa
xor
in
sarl
jl
jg
cmp
test
pop
ret
incl
cltd
repz
add
aaa
adc
js
mov
loop
jecxz
pop
and
xor
les
sub
lock
lods
ljmp
addr16
cmp
aad
sub
cmc
test
aam
add
js
fwait
adc
out
stos
imul
sarl
mov
pushf
mov
outsb
test
mov
ret
adc
mov
xchg
pusha
mov
scas
out
lret
inc
xchg
pop
popf
mov
fwait
in
xchg
je
mov
mov
pop
pop
sub
jecxz
adcb
adc
pop
jmp
sbb
stos
xor
aad
std
mov
add
add
insb
push
decb
cli
rcrb
push
inc
stos
push
jnp
cmpsl
jg
aam
adc
inc
popf
dec
mov
sub
subb
sub
sbbb
loope
mov
or
insb
loope
popa
sbb
xor
pop
push
rcl
sub
cmpsw
push
cmp
out
pusha
test
out
jb
push
pop
lea
fadds
xchg
cmp
cli
mulb
mov
mov
sub
or
sbb
iret
push
popl
jmp
inc
mov
arpl
in
sub
aas
xor
ja
in
xlat
dec
ret
inc
shl
in
pop
test
cmp
and
sbb
xor
cli
scas
nop
pushf
push
cli
js
mov
lea
inc
sbb
jb
or
insl
add
jg
ret
mov
inc
inc
dec
cmp
repz
pop
scas
dec
aam
push
sbb
adc
or
adc
cld
sub
jl
gs
test
mov
xlat
aas
jno
pop
inc
gs
xchg
xchg
mov
push
clc
sbb
lock
mov
js
fldt
ss
xor
stc
xor
imul
insl
sbbl
sub
mov
inc
jp
and
lcall
xor
sub
rorl
andb
push
inc
add
lea
pushf
sbb
cmp
arpl
movsb
pop
mov
loopne
add
ljmp
hlt
test
mov
pop
push
mov
cmp
sub
lock
xchg
icebp
pop
adc
push
dec
ja
jo
inc
add
lods
imul
rcll
jnp
out
sub
sti
pop
ja
sub
adc
xchg
daa
lods
and
pop
jnp
xchg
push
rclb
pop
iret
mov
popa
mov
call
shrl
int
loopne
fwait
icebp
push
jge
in
adc
adc
lcall
cmpsl
data16
sub
or
pop
leave
add
add
mov
cmp
mov
repnz
popf
add
repnz
gs
jnp
lea
js
jecxz
lock
mov
pop
xchg
jge
popa
pop
shll
sbbb
xor
push
aaa
push
sbb
data16
dec
loop
push
mov
cmpsb
and
mov
cs
movsl
hlt
sub
lahf
into
mov
adc
inc
dec
ja
bound
inc
or
icebp
addr16
pop
jne
cltd
xchg
sbbb
movsb
sbb
sti
inc
mov
fsub
test
subb
into
and
icebp
stos
loop
push
icebp
dec
and
hlt
dec
cmovg
xchg
clc
pop
cmp
in
decb
push
incb
aad
or
call
sar
mov
out
lock
daa
and
mov
aad
xor
xor
jb
stos
js
sbb
or
mov
pop
mov
xor
cmpsb
push
xchg
mov
push
fsub
cltd
sbb
in
incl
cmpsl
xor
mov
nop
addr16
mov
fisubrl
push
sbb
push
push
jo
nop
jge
imul
jno
dec
sar
dec
adc
sub
mov
fidivl
fisubs
xchg
add
sbb
jl
bound
stos
or
push
xor
jno
add
fwait
sub
sarb
ljmp
adc
inc
or
mov
pop
mov
js
cld
inc
cmp
in
sub
or
push
insb
add
ja
add
test
inc
adc
add
jge
jb
push
or
lret
sbb
adc
pop
xor
adc
in
dec
pop
aad
xchg
sub
inc
fucomp
cli
pop
jae
rcll
mov
dec
int3
lods
sarb
add
fsubs
sbbb
andb
lock
inc
mov
bound
popf
pop
mov
mov
or
test
push
icebp
mov
fstp
roll
lret
mov
out
adc
adc
aam
rcrb
inc
pusha
pushl
mov
inc
jp
rclb
ss
movsl
pop
pop
int3
sbb
rcr
mov
dec
pop
fldenv
aas
xor
or
xlat
xor
or
push
test
cltd
lret
add
push
loop
or
rcrl
imul
inc
nop
in
fsubp
es
dec
dec
ret
test
mov
and
mov
es
iret
mov
scas
dec
dec
mov
cmpsb
mov
cmp
ljmp
imul
mov
dec
lahf
dec
popa
fmull
ja
ds
mov
in
out
ss
xchg
mov
sub
sub
push
adc
in
adc
xor
jg
pop
mov
jb
and
std
lea
xor
test
test
scas
insb
jle
dec
cmp
popf
add
es
into
lret
inc
mov
mov
cmp
outsl
test
aaa
ja
pusha
jl
test
push
cmpsl
fcomp
sbb
int
clc
mov
mov
test
mov
fs
daa
stos
inc
fsubs
aas
outsl
inc
int3
inc
pop
jle
or
and
add
insl
jge
push
decl
jg
ljmp
stos
aas
cmc
push
cld
push
sbbl
int
and
loop
imul
xor
aam
jmp
sti
and
ret
cmp
sbb
push
mov
lods
repz
scas
fildll
add
mov
inc
adc
add
movsb
test
aam
lahf
or
push
sub
inc
jg
dec
scas
cmp
jno
mov
in
jne
xchg
ret
mov
mov
sbb
aam
inc
outsl
or
fs
pop
sti
jl
notb
mov
cmpsl
bound
push
repz
fadds
push
adc
add
sahf
idivb
shlb
mov
pusha
xor
jge
adc
aad
pusha
sub
xchg
jle
sbb
je
imul
fwait
in
cmp
ja
cld
pop
jge
inc
loope
push
pusha
mov
pop
loop
xchg
xchg
inc
daa
xlat
fsub
mov
in
cmp
pop
loop
pop
fs
dec
cmp
sbb
pop
push
mov
mov
pop
add
pusha
out
test
push
sbb
dec
lahf
mov
mov
call
mov
mov
sub
and
outsb
sub
imul
incb
xchg
mov
mov
or
arpl
sub
sub
mov
xor
lret
push
add
loop
lock
mov
sub
or
aas
icebp
dec
jo
lods
mov
outsl
mull
movsb
add
leave
les
repnz
xor
push
hlt
pop
gs
xor
xchg
mov
loope
add
outsb
scas
mov
xor
jnp
pop
nop
jmp
xlat
sbb
pop
inc
or
fbld
sub
sti
aaa
jmp
mov
pusha
repnz
icebp
sub
push
test
pop
cltd
icebp
outsl
dec
mov
or
outsb
mov
mov
dec
adc
ljmp
push
clc
xor
stos
mov
pop
enter
push
int
orl
jmp
xor
test
js
and
dec
or
push
out
das
dec
out
xor
sti
js
mov
fsub
xchg
data16
jb
push
add
push
les
movsl
mov
cld
ret
cld
aad
ljmp
mov
addr16
lock
stos
mov
push
and
pusha
cmpsl
xor
in
popf
lcall
jbe
and
imul
cli
mov
ja
xchg
mov
fdivl
mov
mov
sub
jmp
pop
mov
cwtl
mov
xchg
fcompl
in
je
addl
cld
loopne
adc
or
pop
push
mov
sbb
jle
add
mov
scas
xor
mov
repnz
dec
stc
inc
gs
outsl
or
leave
sub
mov
out
adc
or
jne
mov
sbb
mov
addr16
pop
mov
loope
inc
fistps
jae
or
rorb
or
xlat
or
mov
cmp
dec
out
pop
aam
add
das
rcrl
and
mov
mov
mov
mov
xor
lcall
sti
and
out
or
adc
je
mov
shll
gs
pop
push
add
jne
add
fldcw
sahf
or
in
or
test
scas
add
sbb
mov
incw
daa
cwtl
je
dec
cmpsl
scas
in
jne
repz
lcall
mov
add
mov
xchg
and
lret
xchg
dec
and
jecxz
pusha
push
inc
sbb
testl
ja
mov
mov
imul
inc
dec
pop
mov
pop
lods
add
and
ds
xchg
test
push
push
mov
fsubrs
gs
jno
inc
lds
movsb
clc
mov
add
mov
pop
enter
test
sub
movq
pop
testb
in
mov
adc
cmpsb
xchg
rcrb
popf
icebp
out
fwait
jmp
inc
add
ja
mov
out
xor
lea
xor
xor
dec
mov
subb
stos
pop
pop
cmp
xchg
cmp
mov
pop
or
dec
dec
or
scas
cmp
pop
mov
in
sahf
cmp
iret
fisubrl
xchg
mov
add
outsl
mov
mov
daa
inc
arpl
out
pop
cmp
sub
or
push
rolb
xor
mov
nop
loopne
bswap
into
mov
movsb
mov
scas
mov
mov
xchg
pusha
fiadds
rolb
xor
dec
xchg
not
in
icebp
adc
mov
cmp
sarb
adc
scas
sbb
adcb
loopne
cmp
dec
pop
add
cmp
mov
mov
ror
call
dec
pushf
xchg
dec
push
pop
in
fisubs
dec
cmp
outsl
jp
cmpsl
jp
mov
mov
sub
mov
mov
insb
leave
mov
xor
sbb
nop
in
add
add
dec
sbb
push
jae
push
xor
push
xchg
test
cmp
pop
xchg
mov
jae
clc
xchg
pop
cmp
sub
call
cld
xchg
ret
ds
xchg
movsb
mov
fmuls
adcb
cmp
pop
in
or
pop
pop
pop
shrl
ss
or
scas
pop
push
insb
jnp
xor
mov
pop
add
mov
add
mov
out
mov
mov
and
cmp
cmp
add
pcmpeqb
fsincos
adc
jmp
inc
lock
frstor
cltd
dec
es
cs
or
int
mov
imul
fdivrs
aam
scas
and
jae
push
push
cmp
orl
dec
ss
xchg
xor
mov
jne
fnstenv
ja
adc
out
push
and
xor
xor
xchg
sub
add
inc
xor
sbb
xor
mov
jbe
sarl
fnstsw
cmc
ljmp
jle
popf
dec
adc
and
nop
fists
sarb
loope
inc
dec
dec
sub
sbb
mov
pop
push
outsl
pop
in
and
pusha
hlt
sub
sti
loop
inc
in
dec
jno
pop
test
mov
ret
jge
js
mov
xor
je
rcl
mov
lcall
movsb
bound
inc
adc
sti
cmp
mov
insb
fs
lock
pop
insb
sbb
lea
mov
test
cwtl
popa
jg
call
push
xchg
cli
mov
mov
sub
mov
push
dec
push
ret
out
aad
sbb
push
lahf
lods
xchg
dec
mov
or
js
sbb
add
adc
xchg
or
repz
adc
dec
push
lret
xor
lcall
incl
fidivs
lods
ljmp
cltd
lds
mov
adc
mov
pop
ds
mov
mov
stc
cwtl
pop
push
mov
loop
jne
aas
fnsave
and
lret
inc
aaa
cmp
xor
push
into
test
repnz
xchg
cmp
fstl
mov
dec
movsl
insl
mov
add
or
fidivrl
imul
popf
fnsave
pop
ss
cs
cmpsb
ljmp
fst
fbld
fstpt
pushf
cmpsb
imul
pop
frstor
fisubl
inc
adc
cld
fstps
add
out
and
adc
or
dec
push
dec
inc
dec
dec
or
dec
out
sub
push
jge
fstpt
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbbb
lret
loope
in
fdivrl
aas
enter
rcl
jb
fstpt
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
addb
ficoms
pop
xor
pop
xor
cmc
mov
jmp
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
sbb
cltd
xchg
outsb
adc
orb
jo
and
.byte
