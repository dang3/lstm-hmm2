lods
enter
fidivl
rcrl
fimull
data16
out
push
call
je
std
pop
sbb
mov
and
xchg
fstl
mov
testl
or
rcll
mov
fists
mov
sar
add
mov
sub
mov
xchg
dec
fdivr
dec
xchg
popl
push
scas
pop
xchg
dec
testl
hlt
mov
mov
mov
out
mov
lret
push
sbb
ror
mov
cld
flds
nop
mov
fisttps
xchg
jl
bound
nop
inc
mov
sub
leave
inc
enter
call
loop
push
or
and
xor
idivl
or
test
mov
mov
pushf
lret
mov
mov
xor
pushf
fbld
mov
hlt
jbe
mov
int
lods
addr16
scas
mov
testb
fidivs
pop
icebp
push
out
aam
icebp
mov
ficompl
xchg
fcoml
cwtl
movb
pop
sub
mov
cs
dec
subb
iret
mov
push
in
jno
cmpsb
cmp
shll
mov
dec
lock
xor
mov
fdecstp
inc
repnz
xorb
sbbl
call
xlat
lock
lahf
or
cmp
cmpsb
push
iret
stos
addr16
clc
cmp
adc
scas
mov
int3
shl
dec
mov
xor
pop
jne
push
mov
adc
jae
hlt
dec
rep
scas
push
cmp
mov
mov
popf
nop
sub
mov
and
mov
imul
cmpsb
sbb
int3
or
push
ret
jp
dec
pandn
dec
mov
push
out
mov
or
mov
pop
push
out
xor
mov
lods
fldl
add
mov
jp
jbe
stos
mov
lret
xor
jo
sub
xor
push
pop
xchg
mov
out
das
xchg
lret
mov
outsl
fistps
sub
xchg
adc
test
loopne
mov
xchg
cmc
sbb
in
es
fadd
inc
lods
hlt
imul
repz
jnp
xchg
pop
stos
pop
or
add
std
xchg
jmp
add
hlt
mov
mov
cld
dec
aad
int3
jmp
ljmp
lods
js
daa
dec
bound
in
cwtl
icebp
sub
cld
clc
adc
testb
xchg
cwtl
add
push
and
aad
inc
xchg
xor
jle
jb
sub
sub
dec
sbb
ret
enter
push
fsubrs
cmpsb
loope
cmp
iret
or
insb
or
loopne
and
or
mov
arpl
ret
int3
adc
or
aam
pop
jne
mov
add
call
fildll
scas
jno
xchg
pop
push
xchg
jp
xchg
clc
movntps
jo
dec
mov
jg
xchg
nop
stos
fisubrl
jp
shlb
pop
add
pop
or
mov
fsubrl
mov
mov
int
mov
dec
xchg
call
and
js
in
inc
leave
stos
cs
cmp
pop
jecxz
movsb
pop
push
cld
xchg
daa
aam
das
cmpsb
xchg
push
inc
xchg
sar
push
je
sti
add
repnz
mov
pop
ret
rorl
lcall
mov
mull
push
dec
aas
push
and
cmpsl
inc
insl
or
or
dec
out
pop
xor
inc
test
inc
sbb
and
cmp
aaa
xchg
add
sub
cmp
adc
ss
fwait
inc
inc
xchg
in
rclb
mov
fstpt
inc
pusha
je
les
cmp
cltd
repnz
pop
ljmp
int
pop
add
outsb
sbb
arpl
icebp
xchg
jne
aam
xor
jl
iret
leave
push
fs
or
add
movsb
and
inc
jle
lahf
int3
xor
sub
fsubrp
mov
push
loopne
xchg
in
jnp
pop
shll
xlat
shll
repnz
fists
adc
pmulhw
stos
inc
cmp
das
push
ror
cmp
lahf
dec
inc
xchg
cltd
or
mov
push
leave
addr16
mov
test
push
mov
mov
lea
clc
xchg
jle
pop
xchg
loope
mov
cwtl
cmp
out
stos
and
push
jo
sbb
sbb
cmpb
fildll
sbb
test
std
nop
mov
sub
sahf
jecxz
xchg
ljmp
stos
aas
mov
out
mov
xorb
cmpsl
push
adc
pop
fsubrl
push
sbb
jnp
lahf
jo
mov
dec
pop
jecxz
sysenter
fldenv
mov
push
inc
cmc
lahf
inc
fidivl
data16
in
pop
gs
ret
adc
mov
arpl
aaa
adc
mov
and
frstor
push
jo
decb
inc
and
or
stc
push
mov
cmp
mov
lods
lcall
ss
xor
jnp
outsb
psubsw
iret
mov
addl
dec
dec
mov
fucomi
adc
push
fwait
and
lods
push
out
inc
roll
bound
ret
in
sarb
push
shrl
scas
cmpsl
fs
lret
pushf
mov
ss
scas
cmp
jbe
mov
out
push
cld
jbe
sub
loopne
fmul
add
imul
inc
orb
movsb
ss
and
sbb
fs
dec
pop
jno
imul
cmpsb
pop
dec
js
adc
sub
fldenv
xor
mov
sub
fdivrs
jge
or
scas
xchg
test
xor
mov
movsb
jb
sub
in
repz
push
clc
mov
popa
pop
ficoml
fwait
js
es
mov
push
jno
dec
fs
and
addr16
sbb
out
outsl
mov
and
inc
dec
test
mov
xchg
popa
sub
out
icebp
lds
mov
fcomps
mov
shrb
call
sbb
loopne
ljmp
fdivl
lods
jo
cmp
lods
adc
adc
push
or
movsl
dec
sub
in
jo
jo
push
mov
jb,pn
inc
jb
mov
les
clc
and
jge
mov
dec
mov
add
arpl
loopw
xor
pushf
lret
cmp
int
jb
ret
lods
sbb
std
jl
or
cltd
cmpsb
cs
icebp
jno
jmp
sbb
mov
sbb
shr
shlb
dec
sahf
mov
sub
fstpl
jns
and
xlat
movsl
or
mov
jno
xchg
xchg
mov
or
fwait
jp
push
xchg
test
jbe
imul
mov
lea
pop
xor
cmp
clc
pop
mov
out
scas
daa
leave
scas
add
xchg
jb
jl
mov
js
mov
mov
lods
aam
fwait
popf
je
jge
test
lcall
movsl
fstpt
and
inc
pop
in
loop
lock
lea
pop
jg
fbld
xchg
fimull
push
add
inc
movsb
sub
adc
inc
mov
insl
in
in
pop
gs
jp
dec
in
push
mov
es
shr
daa
jmp
jle
jle
cmp
pop
mov
pop
jl
aam
pusha
out
jge
adc
sub
stos
push
push
fisttpll
lret
out
rol
mov
xchg
lock
aas
jl
xor
out
lret
mov
fidivl
push
movsl
into
add
pop
fwait
cmp
enter
or
pop
xor
in
push
imul
shrb
xchg
dec
imul
or
ja
hlt
mov
jl
mov
dec
and
sbb
fsub
ret
sub
enter
rolb
sub
jge
call
scas
lea
in
xor
dec
adc
push
fadd
outsl
rolb
cmp
aad
dec
ret
push
pop
out
adc
ss
sar
ret
inc
jo
lods
or
cli
xchg
adc
ja
nop
and
testl
sub
push
addr16
rolb
push
cmp
dec
pop
sub
push
dec
mov
fmulp
lock
fs
std
sbb
mov
push
cwtl
dec
pusha
sbb
cmp
push
out
dec
sbb
andl
lods
mov
adc
mov
sbb
cmp
dec
aam
fisubrl
mov
push
sbb
fcmovnbe
imul
or
inc
pop
inc
mov
test
or
sub
dec
and
pop
and
shlb
mull
and
mov
add
or
rcrl
xchg
scas
roll
push
push
gs
fs
or
mov
fcmovb
out
jp
out
inc
cld
and
add
shll
jnp
sbb
enter
inc
mov
sti
pushf
xchg
mov
cld
js
xor
inc
icebp
ret
xor
out
adc
cmp
push
aam
enter
stos
popa
inc
mov
sub
addr16
dec
scas
cmc
or
rcrb
or
out
int3
mov
test
jb
call
sbb
inc
fs
mov
int
and
gs
mov
dec
movsb
pop
dec
xchg
dec
xor
lods
jno
movsb
sbb
lcall
das
cmpsb
mov
pop
fists
out
test
push
movsb
add
jo
jns
stos
xor
imul
xchg
inc
test
lock
cmp
rorb
mov
insl
mov
sti
xchg
test
sti
mov
cmp
pop
insb
inc
pushf
jp
mul
adc
movnti
xchg
dec
ret
mull
les
xchg
jno
test
popf
pop
dec
mov
test
lahf
jmp
jne
mov
mov
jecxz
fistl
mov
pop
js
addr16
pop
lods
loopne
inc
xor
loop
pop
pop
and
adc
in
adc
xchg
mov
mov
loopne,pn
jns
shlb
add
fstpt
cmp
sub
out
push
test
cltd
cmp
jno
sahf
sub
pop
lret
sub
icebp
mov
cmp
imul
icebp
pop
xor
stos
jge
mov
popf
ret
loope
xor
mov
fisubl
addl
dec
pop
sub
sub
pusha
cmp
dec
and
jns
loopne
cmpsb
sbb
push
sbb
inc
dec
outsb
pop
rcrl
jbe
scas
test
ljmp
mov
stos
rcl
jns
push
stos
addr16
iret
sub
cmp
adc
cmpsb
fisubrl
push
xchg
or
aam
stos
push
sub
cs
lret
jno
sub
mov
out
fadds
das
sti
std
call
cmp
fstpl
xchg
enter
xor
adc
or
mov
fdivr
or
test
sub
movsb
mov
cmp
sub
add
pop
or
pop
jp
mov
xchg
pop
jecxz
inc
dec
mov
ret
aaa
adc
mov
mov
inc
sub
sbb
and
dec
mov
sbb
push
and
std
insl
jnp
test
ljmp
inc
xor
sub
clc
outsl
insl
fistl
stc
or
pop
add
out
fimull
ret
pop
pop
rclb
out
fs
adc
loope
ds
jb
xchg
cmc
jle
aaa
add
test
cld
dec
push
mov
adc
jl
sub
push
int
adc
mov
dec
fistl
insb
xor
add
gs
fmull
imul
inc
inc
cmp
fisttpll
push
stos
nop
jge
sbb
jge
jmp
lock
jno
dec
rclb
daa
add
je
in
data16
shlb
fmul
push
push
call
sub
sub
xor
sub
test
imul
pop
or
xor
mov
flds
sbb
mov
lods
mov
fucomi
sbb
stc
sub
dec
daa
push
xchg
pop
xor
enter
pop
loope
and
mov
dec
adc
sub
push
lahf
or
outsb
cmp
aam
mov
andl
xor
jnp
ret
repz
jns
test
push
cli
jmp
cmp
dec
popf
mov
sbb
testl
sti
or
xchg
scas
fisubs
rcrl
lock
fnstcw
mov
rolb
mov
jecxz
mov
push
fwait
or
loopne
sub
xchg
out
mov
jbe
jnp
mov
inc
inc
push
idiv
sub
push
ja
pusha
movsl
aad
mov
popf
rcrl
int3
pop
ss
and
add
push
fadd
add
fsts
iret
mov
loopne
push
scas
and
pop
pop
hlt
or
pushf
lods
cmpsb
push
shrl
push
mov
cld
adc
mov
push
cmpsb
dec
cs
and
stc
enter
pusha
movl
cmpsb
cli
sub
sti
movsw
fisttpl
jecxz
inc
mov
dec
mov
jl
fmulp
lcall
push
and
and
adc
pop
popa
out
mov
aad
pop
cmp
push
push
imul
shrl
pop
jl
mov
push
idivl
dec
adc
out
into
mov
push
xor
adc
ror
lods
bound
or
addl
and
xorl
stos
call
mov
xor
sbb
mov
aam
test
adc
lea
adcl
into
out
mov
cltd
inc
adc
test
or
adc
mov
stos
lods
inc
in
sub
les
sbb
inc
hlt
adc
cmpl
lock
inc
icebp
stc
popf
out
out
arpl
fisubs
inc
mov
add
je
in
test
xor
aas
outsb
fwait
js
sub
jecxz
mov
pop
adc
addl
mov
sbb
iret
jmp
insb
adc
outsb
xor
dec
ret
and
xchg
clc
ror
cmc
jbe
clc
nop
loop
xchg
add
jg
jle
jne
sub
ret
leave
jns
les
shrb
push
xor
jmp
pop
hlt
fadds
bound
fcompl
dec
push
sub
popa
fcmovnb
cs
inc
lods
jecxz
ds
lahf
test
lret
sub
fcoms
push
mov
jge
sti
and
stos
jmp
add
lea
pusha
dec
stos
mov
fsubl
sbb
pop
divb
push
and
jmp
sbb
or
xor
pop
pop
sbbb
insl
lock
jb
inc
push
or
mov
ret
inc
mov
jno
cmp
outsl
and
inc
out
shl
test
int
mov
mov
loopne
dec
fists
pushl
ds
dec
push
fwait
lret
push
aad
xchg
xchg
mov
mov
int
xlat
int
sbb
xchg
je
dec
cmp
adc
pusha
mov
mov
ret
daa
cmpsl
adc
mov
sahf
push
cmp
daa
push
lock
cmp
das
movsl
out
dec
xchg
sbb
into
push
sbb
inc
ja
sub
out
add
scas
addr16
add
adc
add
lret
mov
stos
cmc
inc
jmp
pop
icebp
jecxz
xchg
clc
lcall
push
test
aam
sbb
cli
js
xchg
sub
or
adc
xchg
push
inc
ljmp
mov
sbbl
cmovp
cwtl
sub
xchg
sbbl
mov
in
xchg
sbb
sbb
mov
cmp
xchg
add
bound
cmc
dec
idiv
inc
fstl
xor
das
int3
pop
or
rorb
mov
jp
ljmp
cmc
fcomp
fnstcw
loope
xchg
cmpl
xor
sub
cmp
pop
or
fadd
out
add
adc
mov
js
fildll
fsubrl
or
mov
jne
inc
aam
mov
push
or
ds
ljmp
dec
mov
pushf
xchg
jo
hlt
test
dec
adc
and
jnp
xor
push
sbb
lods
jno
push
xor
cmp
mov
push
adc
out
jae
add
cli
xchg
jno
lcall
cwtl
lock
popa
iret
bound
in
test
cs
lds
jle
inc
loop
les
scas
mov
adc
je
leave
mov
mov
dec
cmp
cmp
pop
add
cmp
xor
xor
es
aam
pop
inc
inc
cld
movsl
lcall
fadds
sub
dec
fwait
jmp
lea
xchg
adc
out
iret
mov
xchg
jmp
fistl
mov
or
xor
mov
dec
lods
mov
scas
dec
xchg
mov
repnz
pop
mov
mov
jmp
sbbl
adc
cmpsb
xchg
jno
jnp
push
mov
xchg
clc
sub
jl
xchg
mov
lds
test
pop
mov
add
dec
add
mov
cld
rcll
xorl
push
pop
or
dec
lret
sahf
mov
mov
dec
shl
gs
dec
in
xor
outsl
jge
lods
dec
lret
stos
cmp
inc
and
mov
in
hlt
imulb
scas
mov
adc
push
xchg
add
gs
cwtl
pop
sahf
sub
add
add
in
lods
mov
or
sbb
sbb
fs
sub
xchg
xor
jnp
call
fwait
mov
out
mov
aaa
jmp
sbb
push
add
fstpt
pop
mov
adc
sti
shlb
sbb
cld
int3
fs
xchg
xchg
or
test
jl
std
test
mov
and
jb
mov
dec
pop
mov
adc
xor
push
push
iret
ret
mov
mov
jno
imulb
mov
push
cltd
jl
dec
sarb
sub
and
pop
mov
inc
int3
fsub
mov
data16
or
xchg
pop
or
aam
mov
push
xor
sub
inc
pop
icebp
and
mov
test
sahf
jmp
dec
or
fsts
jecxz
and
fsubl
xor
int
and
sub
mov
in
mov
xchg
pop
repnz
ret
mov
push
out
sbb
inc
insb
mov
xchg
imul
push
sbb
sub
adc
loop
shrb
stc
sub
adcl
xchg
addr16
xor
push
cmp
xor
hlt
xchg
mov
ficompl
xchg
fbstp
mov
dec
inc
pop
test
xor
mov
push
rol
xchg
push
adc
int3
lret
push
lods
aas
mov
into
xchg
xchg
xchg
lret
jnp
xchg
dec
sub
xchg
ret
mov
dec
cltd
inc
jo
and
mov
sarb
sbb
in
rolb
mov
lret
sti
and
rcr
cs
xor
rclb
dec
push
cmpsb
ficoms
pop
pop
and
adc
mov
pusha
cmp
test
sbb
sub
push
mov
lret
mov
in
aam
scas
dec
movsl
sbb
mov
loope
fmull
pop
insl
push
add
xor
icebp
in
loope
rolb
scas
mov
lock
push
mov
mov
in
pop
pop
mov
xlat
jo
adc
sbb
inc
leave
stc
sub
mov
out
and
xchg
dec
jns
lock
mov
xchg
inc
subb
jmp
sub
jge
lock
pushf
fiaddl
fisubs
push
subb
or
inc
sbb
cmp
mov
iret
mov
std
pop
fstps
xchg
das
adcb
lods
out
push
repz
cmp
add
xchg
mov
push
shr
std
das
pushf
push
xor
out
mov
aad
mov
or
mov
pop
aaa
sub
adc
mov
jl
jns
xchg
sahf
sub
ret
mov
lock
insl
pop
xor
xchg
lods
cmpsl
and
dec
psrlq
scas
xor
mov
sub
gs
sub
xchg
sbb
sub
fdivl
mov
pop
clc
inc
pop
out
out
rcll
shll
mov
stos
dec
mov
loope
popl
scas
pop
lret
mov
jle
cmp
lcall
out
push
adc
mull
lock
inc
cltd
je
int3
pusha
dec
sub
and
jnp
xlat
adc
mov
adc
jmp
adcb
stc
inc
lds
mov
call
dec
or
mov
inc
xchg
adc
mov
cld
mov
sub
lods
push
dec
gs
xchg
jecxz
fwait
arpl
pop
mov
out
iretw
addb
arpl
or
xchg
js
push
jecxz
test
stos
jae
int3
repz
outsl
out
loopne
jne
jne
maxps
in
in
scas
in
insl
std
loopne
sbb
add
push
cmpsl
pop
fldcw
pop
add
add
cli
inc
xchg
adc
mov
mov
jle
add
dec
fidivl
adc
dec
push
ja
inc
adc
cmp
iret
mov
push
leave
les
ror
data16
and
fistps
mov
xlat
aaa
mov
xchg
cmpb
pop
stos
mov
mov
and
dec
cmpsl
mov
shlb
mov
cmp
mov
sbb
fmull
xchg
cli
mov
or
mov
sahf
in
dec
and
pop
xchg
fucomip
movswl
push
outsl
dec
lret
cmp
xor
inc
mov
ret
dec
sbb
pop
add
cwtl
mov
jno
lret
in
mov
pop
xor
adc
jecxz
dec
mov
clc
or
ret
stos
in
out
and
aaa
clc
push
cmp
add
enter
and
nopl
lods
in
mov
sub
cs
fiadds
xlat
push
jmp
xchg
and
imul
daa
ret
inc
aad
stos
movsb
lcall
cmp
cmp
das
mov
ja
xchg
cmp
dec
daa
subb
lsl
inc
ret
test
in
pop
mov
mov
ljmp
pop
popl
and
push
test
mov
rcl
inc
call
cmpsl
bound
outsb
xchg
jae
imul
lret
adcb
ficompl
in
popf
fwait
shlb
or
sbb
mov
inc
xorb
dec
fwait
stc
cwtd
inc
add
pop
scas
and
add
mov
fstpl
xchg
int3
and
xchg
cltd
sbb
mov
fnstenv
push
cmpl
cwtl
pop
lods
pop
xchg
sti
mov
outsb
pop
call
sub
cmpsb
flds
dec
cmpsb
loopne
lods
mov
fmuls
aaa
loopne
mov
xlat
out
sahf
mov
adc
jae
popf
jae
push
xlat
push
andl
sub
mov
loopne
test
lcall
push
sbb
lock
andl
jmp
stc
in
push
inc
cmp
int
jge
sarl
in
and
out
mov
movlhps
insb
xchg
pop
mov
sub
sub
js
xchg
lcall
stc
fsts
sbb
lods
loopne
xor
cltd
sti
push
das
scas
test
push
repz
lahf
cmp
inc
fists
xor
insl
test
xchg
add
or
ret
nop
jne
outsl
cltd
sbb
imulb
mov
cmpsb
xchg
cli
xchg
and
lods
sub
push
mov
andb
mov
popf
push
fstpt
popa
add
mov
ret
and
std
mov
gs
or
lret
or
cmp
push
rorl
loop
or
mov
mov
out
mov
das
mov
outsl
in
and
in
fnstsw
cmp
jno
clc
add
cltd
add
jmp
shl
ja
aaa
mov
inc
cmc
or
in
pop
stos
inc
and
push
push
imul
fisttpl
dec
inc
xchg
xor
mov
push
mov
fdivrl
test
movsb
addl
push
sti
xchg
lcall
mov
adc
adc
or
fldcw
or
test
addr16
sbb
adc
pop
adcl
call
push
test
jo
scas
in
sbb
mov
mov
ljmp
xchg
inc
flds
movsl
dec
in
dec
adc
fldenv
xchg
cltd
cs
les
xchg
pop
push
xlat
call
lods
push
sub
je
loopne
xchg
and
popf
xor
scas
out
rcr
jecxz
ret
out
adc
popf
imul
fidivrs
popf
lcall
shlb
jne
push
insl
lods
test
mov
adc
mov
mov
aad
add
rclb
out
decl
test
or
inc
add
xlat
mov
addl
mov
xchg
into
mov
scas
and
cmp
jne
mov
and
and
cmpl
testl
cwtl
or
sub
sti
sbb
out
sti
popa
sbb
clc
cmp
rcrb
mov
lds
mov
mul
jmp
jg
xchg
call
push
je
pop
es
mov
ds
loope
fs
cmp
sbb
dec
sub
into
lret
jno
add
pop
sub
fisubrs
xchg
jge
pop
dec
sbb
xchg
in
mov
cmp
push
push
sub
sbb
and
pop
dec
scas
xchg
and
mov
call
sub
jns
mov
cmpsl
adc
in
in
adc
pop
pop
das
clc
adc
mov
rcrb
push
aaa
xor
mov
sub
jmp
ja
xor
xchg
fcompl
xchg
sub
jge
xchg
and
mov
call
adc
mov
or
cmpl
dec
aas
mov
repz
scas
out
xchg
mov
xchg
sti
push
mov
icebp
movsb
fnstenv
aas
cmp
dec
adc
pop
xorl
xchg
or
ret
sub
pop
xor
sub
stos
mov
cs
xlat
jmp
xor
xlat
pop
stos
fcmovu
subb
testb
scas
popf
mov
stos
call
mov
jg
int3
fbld
and
sti
es
scas
mov
stos
pusha
cmpsb
fxch
stos
jae
lea
or
nop
loope
pop
jne
pop
rorb
xor
and
jecxz
xchg
adc
pop
iret
adc
in
mov
fisubs
jl
test
adc
pusha
and
shlb
push
loopne
das
bound
fld
xor
sbb
shrb
add
lret
dec
xlat
std
fsqrt
sbb
ss
and
fdivs
hlt
mov
adc
cmp
mov
or
insl
and
mov
icebp
jle
dec
mov
fwait
std
es
nop
cmpsb
push
iret
mov
mov
int3
fs
aad
fimuls
lcall
xchg
cmc
mov
mov
in
inc
mov
ret
jae
pushf
in
lret
sub
scas
sbb
stos
cmp
in
inc
das
or
or
mov
xchg
xor
dec
fisubl
rcll
ret
mov
jno
sbb
das
cmp
mov
ror
jmp
dec
inc
add
lahf
cmp
mov
imul
xor
clc
pop
push
test
fisttps
out
shlb
ljmp
add
clc
out
insb
test
shlb
sahf
dec
or
cld
and
xchg
xchg
adc
ficoms
aaa
and
mov
xor
adc
cltd
cltd
addr16
loope
out
popf
dec
xchg
arpl
popa
dec
clc
fnsave
cmp
shl
lret
xchg
dec
shlb
fsubrl
xor
pushl
fnstsw
adcb
dec
es
stc
insb
jl
in
scas
dec
nop
push
test
pop
cmp
push
stos
cmpsb
sbb
and
add
jbe
lds
inc
fsubr
loop
dec
sti
or
inc
into
and
aad
pusha
xchg
in
fidivl
xchg
xlat
push
popa
push
aaa
aam
inc
xor
add
scas
popf
sbbl
adc
xchg
enter
movsl
sub
inc
and
clc
imul
mov
push
insl
sub
mov
arpl
fldcw
pop
stos
stc
std
add
pop
mov
das
mull
subb
mov
fwait
mov
xchg
add
hlt
ret
ret
test
xchg
pushf
lock
aad
popl
pushl
push
push
push
mov
sub
gs
lods
pop
test
or
addr16
fbstp
push
out
adc
inc
pop
adc
bound
or
outsb
clc
stos
add
shlb
jle
rolb
jp
push
daa
xchg
scas
push
testl
in
mov
push
ffreep
mov
mov
push
pusha
out
xor
or
scas
scas
fiaddl
out
rcrl
push
mov
scas
in
mov
lea
push
clc
jno
stos
pop
add
sbb
stos
push
movl
fcoms
mov
pop
fsubr
ja
fidivl
out
xchg
mov
jge
push
int
repnz
or
inc
jae
jo
mov
dec
mov
xchg
repz
add
cmp
or
ja
les
mov
inc
icebp
stos
cs
test
xchg
mov
pop
cmpsb
xor
es
dec
out
push
ds
aaa
pop
adc
call
ret
rcll
jae
xchg
adc
subl
mov
dec
xchg
fwait
jbe
or
aam
popf
sub
mov
sbb
or
sub
fwait
xor
enter
rorb
sub
ret
inc
push
and
imul
cmp
xor
push
loopne
mov
xchg
fsts
int3
add
inc
pop
sbb
or
out
xchg
aam
and
cmp
cmp
and
jl
push
icebp
rorl
in
pushf
and
imul
sub
xor
adc
xchg
inc
inc
lock
sub
or
mov
mov
sbb
cs
data16
shrl
adc
popf
ds
and
mov
in
leave
in
in
pushf
lods
jmp
fsubr
les
mov
test
mov
fists
call
lods
xchg
pop
adc
fldenv
cmp
out
push
push
dec
arpl
repz
cmpsl
or
xchg
addl
jge
sahf
xchg
xchg
jp
add
movsl
iret
out
into
sbbl
xchg
and
insl
xlat
fldcw
clc
mov
and
negb
in
and
rol
in
sahf
push
out
std
int3
fwait
mov
xchg
clc
sub
repz
cmp
or
in
rolb
lcall
or
sarb
pop
stos
jl
dec
lods
inc
xchg
in
jmp
mov
cmp
jl
pop
ret
add
or
sbb
in
xchg
push
sbb
adc
xorb
decl
inc
incl
xchg
icebp
mov
test
shl
nop
clc
rclb
ds
aam
fistl
inc
mul
iret
and
mov
dec
xchg
test
loopne
roll
pop
pop
push
lret
sbb
mov
mov
or
xor
stc
lret
sbb
addr16
int
inc
inc
das
cmp
out
lds
sarb
xchg
loope
push
and
rorl
cltd
xchg
and
cmpsb
sbb
das
fidivs
popf
push
les
aad
or
fcoms
jbe
test
sub
in
inc
inc
mov
xchg
xor
jmp
fnsave
clc
sbb
fs
stc
push
fsubl
pop
pop
lock
outsb
out
push
in
push
inc
loopne
sahf
and
rcrb
sbb
loope
jo
jmp
ds
iret
pop
mov
inc
subb
sub
scas
lock
int
insb
mov
popa
ja
int3
or
cld
push
xor
push
jo
clc
inc
push
xor
or
orb
inc
mov
das
add
scas
aas
cwtl
rolb
sbb
shl
addb
add
push
sbb
ja
loopne
jne
mov
push
dec
mov
mov
inc
push
and
shl
ret
fcomip
dec
sub
lcall
push
pop
mov
or
adc
int
push
jo
fstl
aaa
dec
aam
xlat
xchg
xchg
cmp
and
mov
addr16
arpl
fldl
push
in
popf
pop
imul
xor
and
sahf
fldt
ja
int3
xor
add
push
or
add
sub
mov
sbb
testb
xorb
or
dec
ljmp
ja
repz
fadds
or
scas
cmp
int3
imul
in
or
adc
jle
insl
adc
es
mov
dec
add
xchg
pop
test
out
outsb
jle
icebp
inc
nop
lods
sub
xchg
addr16
jecxz
push
popf
adc
sub
nop
pop
push
inc
mov
mulb
pop
jb
sub
add
test
jb
mov
sbb
enter
stc
arpl
icebp
dec
push
int3
test
dec
mov
mov
sbb
push
stos
cltd
imul
sti
sbbb
popa
push
imul
dec
movsb
mov
adc
mov
outsl
cmp
xchg
imul
outsb
out
rorl
aam
jns
ror
out
cli
popa
mov
cs
sub
jge
mov
or
mov
pop
rcll
mov
xchg
out
jmp
lds
nop
xchg
hlt
hlt
fnstsw
cmpsb
jecxz
pop
inc
sub
xor
sbb
cmp
pop
pop
jnp
push
ret
hlt
xchg
dec
scas
or
ret
mov
sub
fwait
test
hlt
add
rclb
mov
cli
ljmp
lock
lret
xlat
dec
xchg
jge
test
icebp
rclb
and
ljmp
ficoml
jmp
fcmove
push
inc
fidivl
call
sub
and
sbb
ret
dec
or
ds
call
dec
in
mov
mov
pop
dec
test
cmpsb
incb
lock
ret
sub
jbe
or
imul
aaa
call
cmp
repnz
sub
xchg
dec
and
push
lods
cld
outsl
ret
in
mov
mov
xor
out
cmpsb
not
call
aam
xor
mov
sub
insb
xor
push
out
jmp
iret
sub
mov
push
les
test
xor
xor
pop
pop
pop
clc
je
sbb
daa
gs
pop
sti
dec
xchg
in
jmp
mov
jge
jmp
sbb
movsl
repz
leave
push
cmp
pop
das
lret
mov
dec
insb
shrl
or
xchg
aad
and
xchg
xchg
mov
int
xchg
insb
sbb
add
test
ret
mov
lcall
dec
test
mov
jg
sub
cwtl
push
xchg
fists
mov
stos
pusha
mov
xor
cltd
stc
sub
lcall
in
bnd
int
mov
test
nop
call
stos
or
lds
xchg
sti
leave
cltd
xchg
gs
je
sahf
mov
enter
aaa
fiadds
push
ret
dec
lret
add
add
adc
pop
push
xorl
and
jne
dec
sahf
pop
cmp
or
sub
jg
in
push
lock
jns
adc
js
clc
lea
addr16
push
pushf
aad
pop
popf
out
sbb
ss
aam
xlat
mov
pop
pushf
jae
pop
cmp
out
test
mov
call
mov
fstps
xor
pop
icebp
dec
xchg
add
sbb
or
adc
mov
outsl
jne
dec
ja
outsl
leave
outsb
sub
lcall
fwait
mov
add
or
icebp
push
mov
jno
or
or
inc
pop
loop
je
xorb
imul
dec
das
loopne
loopne
and
jg
imulb
es
clc
rcrb
fdivr
xor
and
mov
xchg
call
push
sarl
addr16
mov
mov
sub
and
outsb
pop
inc
int
xchg
aam
and
test
nop
cmp
dec
inc
cld
cmpsb
loop
push
jecxz
call
xchg
out
iret
cmp
ret
ret
imul
ja
test
sti
fucomi
sbb
les
mov
jb
icebp
and
jnp
sbb
clc
popf
stc
bnd
sbb
ja
hlt
popa
andb
xor
sti
movl
mov
xor
xor
dec
xchg
test
leave
mull
popa
mov
adc
dec
es
add
sbb
mov
xchg
mov
loop
fiadds
xchg
push
test
test
fldenv
pop
push
and
add
mov
push
into
pop
ret
dec
and
mov
pop
xor
inc
pop
sub
inc
sarl
imul
mov
es
in
mov
cmpl
stc
jnp
and
xor
clc
mov
jno
inc
sub
shlb
add
mov
clc
mov
xchg
ja
sub
out
and
mov
lea
repz
and
sbb
xor
ja
dec
jl
pushf
cs
shlb
test
enter
adc
cmp
cltd
scas
pop
mov
stc
mov
jmp
jae
imull
cmpsl
jmp
jl
pop
clc
hlt
and
ss
push
inc
or
sub
loopne
inc
pop
jno
add
xchg
jae
jmp
jb
arpl
push
xor
push
stos
cmp
push
hlt
pop
or
scas
xchg
pop
pop
jae
addr16
inc
jno
jb
sbb
adc
lret
jg
rcll
and
push
mov
mov
mov
repnz
loope
pop
adcl
in
mov
mov
ret
imul
js
fimull
mov
notb
out
and
ds
mov
ja
xchg
movsb
cwtl
rcl
nop
push
xor
sarb
mov
fisttps
testl
inc
notb
dec
xor
dec
movsb
mov
jle
sub
out
dec
enter
fiadds
mov
insb
cmpsb
lret
gs
jecxz
xchg
and
adc
inc
pop
dec
dec
xorl
add
mov
lret
cmpb
mov
jns
push
cmp
aaa
das
jecxz
ja
out
pushf
ficompl
or
pop
in
fiadds
lcall
dec
out
mov
pop
test
mov
sbb
adc
into
inc
cmc
ja
xchg
loopne
or
scas
add
out
out
jno
test
aad
cs
aaa
xchg
orb
or
cmp
lea
fisttpl
adc
fstpt
test
adc
xchg
imul
add
xchg
jae
testb
jmp
rcll
sbb
test
adcl
sub
enter
fsubrs
inc
ss
mov
and
xor
movsb
sub
aam
xor
mov
ficoml
xlat
inc
jnp
jno
lods
add
sub
mov
pop
sub
lods
rorl
xchg
jno
scas
imul
or
arpl
xor
test
pop
inc
jno
xchg
cs
clc
es
in
cwtl
sub
cmp
fsubl
ja
cmp
cmp
stos
test
xorl
adc
leave
int3
xor
rorb
movsl
or
pop
mov
xlat
pop
bswap
movsl
push
sbb
dec
dec
icebp
adc
adc
jae,pn
out
add
arpl
jge
lods
mov
movsl
lret
je
outsl
icebp
push
aaa
mov
fisubl
call
das
rorb
xchg
xlat
stc
cld
lret
mov
xchg
jo
and
cmp
ret
mov
out
mov
inc
fldcw
je
add
cmpsl
sub
or
pop
lock
mov
mov
in
outsb
mov
data16
mov
sti
sbb
mov
cmpsl
adc
mov
adcl
mov
push
fwait
jns
mov
mov
lds
inc
dec
pop
jbe
arpl
loopne
push
inc
in
dec
or
inc
inc
push
pop
xchg
fsubrs
in
mov
xchg
fimuls
push
push
out
lcall
mov
cmp
xchg
jp
into
stos
lock
xchg
push
mov
add
and
rcr
dec
sbb
rorb
repnz
les
xchg
cmpsl
sub
push
xor
in
xor
cmc
inc
pusha
mov
pop
daa
enter
jae
xchg
pop
adc
lods
gs
arpl
fisubl
xchg
stc
scas
xor
shl
push
mov
xchg
in
scas
repz
adc
adc
out
out
sbb
cmp
jmp
rcrb
stos
xchg
jne
movsl
jg
xor
and
push
into
sub
das
in
jmp
popf
add
sub
or
shl
pop
xor
lods
mov
cld
repz
ret
sbb
stos
outsb
and
loope
mov
mov
scas
scas
dec
jle
out
pop
daa
cld
sub
in
jo
and
les
or
xor
repz
into
jmp
or
jmp
insl
stos
call
adc
testb
inc
in
shrl
stc
mov
test
mov
jl
mov
and
inc
dec
push
or
in
push
neg
xor
cwtl
mov
popl
and
loop
out
sti
outsb
mov
psrlq
incl
test
clc
inc
inc
loop
loope
fimuls
loop
movsl
dec
data16
xor
bound
cs
dec
dec
test
cmp
ja
imul
push
shl
add
adcl
pusha
cmp
dec
lds
lds
and
out
jecxz
push
mov
mov
push
out
pop
add
cmp
jg
fstps
mov
dec
sub
push
insb
nop
dec
fists
or
andl
sbb
mov
testl
decb
rorl
mov
xor
push
in
cmp
icebp
out
push
testl
sub
int3
pop
lods
iret
push
mov
mov
pop
cltd
sub
pop
popl
pop
fmull
xor
xchg
mov
test
mov
lods
inc
insl
push
pop
into
mov
inc
or
dec
mov
jnp
sub
pushl
jp
dec
jbe
shlb
scas
setne
fnsave
mov
mov
fcmovbe
test
stos
pop
test
push
mov
mov
inc
cmp
sub
imul
mov
mov
pop
xchg
shlb
std
scas
fildl
shrl
ja
loopne
pop
xchg
mov
pusha
sub
rcrb
mov
or
lods
or
push
or
shr
push
push
push
sbb
notl
mov
inc
push
and
mov
out
mov
ret
out
push
add
jae
and
lods
pushf
pusha
shl
or
clc
xorb
cmp
xchg
jae
dec
pop
adc
ss
inc
lret
push
sub
mov
mov
push
pop
iret
inc
mov
and
jmp
dec
out
mov
xchg
xor
xchg
movsl
in
aaa
shrl
stos
imull
out
scas
mov
lahf
ja
and
popf
shl
mov
js
repnz
mov
jle
cmp
insl
sbb
xchg
fistpl
iret
jne
and
jo
lahf
mov
cmp
fisttpl
xchg
je
in
rorl
outsb
mov
cmp
in
push
daa
stos
clc
adcb
scas
fsubrs
push
out
mov
mov
nop
sahf
nop
add
cmp
mov
iret
adc
cwtl
gs
int3
jbe
inc
push
xlat
jecxz
push
inc
sub
mov
testl
arpl
adc
sub
mov
lods
jmp
xchg
bound
orb
or
mov
js
sbb
xor
arpl
imul
jmp
add
std
ficomps
lret
rcr
add
jne
std
inc
je
call
dec
xchg
stc
mov
jmp
jne
in
ja
add
cmp
add
xor
sbb
fistps
sub
push
xor
fs
sbb
fbld
mov
imul
dec
jmp
push
cwtl
or
imul
cmp
cmc
and
xor
or
dec
fistpll
fisubs
push
fcmove
adc
shlb
inc
mov
xlat
mov
mov
inc
repnz
adc
pop
out
shrb
jb
add
add
cmp
xchg
adc
pop
pop
out
dec
xchg
xchg
cltd
jge
jecxz
jnp
aas
mov
cmpb
inc
xchg
mov
pop
repnz
je
mov
mov
in
and
xchg
pushf
scas
push
xchg
pop
and
push
rcl
jg
rclb
pushf
dec
rclb
pushf
int3
xor
stc
les
insw
fnstcw
jns
js
xchg
sbb
out
les
sbb
inc
repz
iret
inc
xor
subb
cmp
les
inc
clc
imul
cli
call
shlb
fwait
dec
jno
jns
popa
and
sbbb
mov
sub
xchg
fdivs
xchg
shll
div
add
popf
pop
and
in
out
loopne
movsb
insb
pusha
pop
std
stc
cmp
fs
fisttpll
mov
loopne
pusha
cmpsl
enter
daa
orb
test
dec
lcall
fisubrl
notl
insb
ja
sub
je
mov
push
lcall
movsl
xchg
sub
and
jo
orl
lahf
dec
cmp
in
xchg
iret
in
ja
xchg
or
and
fs
int3
xchg
out
ds
sarl
icebp
jnp
add
mov
jno
xchg
pop
data16
dec
dec
push
cmc
jae
call
jne
dec
cli
daa
movsb
and
or
std
les
jp
dec
test
shlb
jae
int3
mov
inc
lea
xchg
lea
xchg
loop
and
push
fwait
jns
push
lea
cs
xor
outsb
xor
mov
push
inc
cmp
push
rorb
inc
cltd
jo
sti
and
ret
jae
loop
or
add
xlat
lods
ror
sub
push
inc
pop
ret
lahf
and
icebp
pop
nop
clc
cwtl
add
test
mov
or
mov
into
repnz
xor
rcl
leave
cmpsl
xlat
fldl
jmp
fmul
lock
test
add
addr16
mov
jno
loope
sub
mov
xchg
in
dec
cwtl
pop
xor
cmp
jg
negl
unpcklps
push
shlb
adc
imul
test
xchg
or
push
xor
push
pop
mov
mul
pop
or
aad
jle
sub
add
cmp
jmp
mov
shl
fs
cld
sub
mov
aad
adc
inc
roll
mov
shrl
rcll
jo
movsb
divl
aam
insb
inc
pop
das
xchg
repnz
lods
xchg
popa
fs
repnz
sub
popl
mov
jae
jne
push
lock
lock
pavgb
push
push
pushf
stc
add
or
adc
xlat
rclb
mov
mov
mov
in
movsb
out
adc
in
mov
psllw
and
movsl
and
pop
lods
or
jns
aaa
xchg
xchg
mov
push
cmpsl
aam
fisubs
les
in
insb
cmp
lea
aas
ret
cmc
mov
sub
inc
lcall
sahf
arpl
in
xchg
jno
pop
lods
pop
lock
loop
loop
or
or
repz
jbe
lret
sub
mov
cmp
or
mov
and
xchg
mov
jb
add
xlat
fsubs
repnz
cmp
or
inc
scas
mov
and
imul
push
jecxz
gs
add
test
mov
xchg
sbbb
bound
dec
les
mov
inc
into
cltd
push
hlt
mov
scas
je
aam
scas
lret
je
cli
lahf
push
lret
mov
push
mov
xchg
pop
lea
and
addr16
into
pop
jns
xchg
mov
dec
leave
xchg
jnp
fisttpl
inc
pop
popf
add
push
sti
pop
adc
nop
js
adc
sbb
xor
cmovge
and
popf
cmp
mov
push
icebp
and
pop
ret
sub
out
test
pushf
cli
cwtl
popf
dec
addl
loopne
shlb
mov
stos
lods
in
in
pushf
mov
pop
aad
jne
mov
dec
jnp
xor
sub
xor
mov
cmpsb
iret
push
inc
cltd
icebp
inc
cmp
in
xor
jecxz
push
mov
aaa
es
lahf
sub
jecxz
fmuls
jmp
pusha
sub
mov
mov
and
loope
movzwl
out
jb
or
stc
jb
xor
add
sub
sbb
jnp
icebp
push
push
adc
icebp
dec
add
stc
mov
jnp
pop
fnstenv
aam
sbb
test
pop
mov
repz
int3
cmpsl
popf
popf
xlat
fs
inc
adc
nop
and
clc
sub
xlat
add
out
inc
out
add
xor
and
shl
adcb
stos
jp
les
sub
cld
pop
shlb
mov
cmp
push
and
test
and
push
mov
mov
cmpsl
mov
outsl
test
dec
mov
mov
mov
mov
insb
xor
pop
call
imul
sbb
mov
adc
fbstp
or
leave
gs
jecxz
fmul
mov
mov
sahf
movsb
shll
ss
add
mov
cmp
cmc
xchg
sbb
sub
jg
jecxz
cmp
test
fcmovnbe
lock
shr
add
fnsave
popf
movsl
inc
fsub
jo
addr16
aaa
lock
xchg
mov
cmpb
leave
mov
out
ljmp
aaa
mov
ret
inc
add
int3
iret
arpl
or
or
cmp
xchg
aam
aas
lock
in
rorl
xchg
mov
jmp
andl
fiaddl
pop
les
jae
push
and
xchg
imul
inc
test
dec
cwtl
das
orb
dec
cltd
jno
or
arpl
test
shl
and
aam
mov
ss
jmp
fcoms
subl
lret
push
scas
sub
in
or
and
fstpl
mov
and
loope
stos
cmp
dec
stos
lock
mov
xchg
xchg
mov
inc
loopne
push
xchg
lods
sbbb
es
imul
call
lahf
mov
xchg
test
push
or
mov
call
test
push
cmp
ror
xor
and
push
adc
push
movb
mov
sahf
cmc
cmp
icebp
mov
push
test
fnstcw
cmpsl
bswap
loopne
ret
test
out
xor
pushf
hlt
sbb
cwtl
into
out
jle
repz
push
das
fisubrl
push
and
cwtl
stos
adc
and
lods
dec
pushf
pop
pop
cmpsb
ret
addl
subb
icebp
cmp
jmp
sbb
dec
mov
outsl
neg
out
sbb
decl
adc
xchg
cli
into
cli
mov
das
test
xchg
out
mov
repz
sbb
flds
lea
mov
mov
jne
int3
jmp
inc
imul
icebp
sti
mov
jecxz
negl
roll
fnstcw
dec
call
es
dec
fiadds
mov
xlat
adc
and
fwait
pushf
shll
jp
cli
out
jae
sbb
hlt
cmpsl
fs
out
stos
cmp
fdivrp
lds
iret
outsb
ret
mov
das
xchg
repz
loope
call
jp
add
xchg
or
pop
xchg
in
ffreep
dec
test
in
push
loope
inc
cmp
out
mov
xchg
mov
pushf
or
arpl
add
out
add
cmpsb
mov
mov
test
xchg
testl
mov
inc
andb
call
adc
mov
xchg
dec
mov
fcompl
push
sub
in
push
cwtl
in
lock
inc
adc
jecxz
cmp
xchg
cmp
adc
jmp
pop
sub
jecxz
adc
mull
fidivrs
jbe
sahf
cmc
iret
mov
mov
pushf
xlat
insb
into
fnstenv
cmp
adc
stos
xor
ret
into
mov
add
stos
mov
rcrl
xchg
lret
mov
sub
cmc
cmpsl
jo
shl
stc
add
mov
adc
or
sbb
inc
notb
sub
xor
xor
mov
pop
pop
cmpb
cld
xor
xchg
xchg
int
pop
inc
mov
ljmp
xor
rol
loope
adc
mov
stos
in
stc
jmp
push
gs
lcall
shlb
xchg
jae
sbb
scas
or
les
insb
pushf
test
jae
outsl
dec
mov
jle
jl
add
push
jo
lret
mov
stos
das
sub
or
push
stos
ret
cmpsl
push
test
lock
fiaddl
mov
cmp
mov
es
mov
and
or
and
loope
adc
stc
orb
jg
jns
std
das
and
jl
xchg
sbb
popf
mov
xchg
adc
aas
icebp
mov
pop
aam
lahf
sub
int3
sbb
cltd
lods
pop
xchg
inc
lock
lahf
pop
or
stos
mov
and
ja
cwtl
enter
pop
enter
mov
xchg
sahf
dec
testb
test
dec
mov
or
rorl
inc
mov
dec
aad
mov
or
push
mov
add
push
popa
sub
push
xchg
dec
outsl
xchg
ret
jecxz
loop
cmp
rolb
pop
bound
pop
inc
inc
divb
es
pop
mov
fdiv
dec
out
ret
subl
sbb
mov
cmc
jno
push
or
aam
xchg
xchg
xor
jp
ljmp
data16
jb
movsl
das
mov
dec
inc
lods
movsl
les
sbb
icebp
ret
add
pop
call
push
fstpt
pushf
je
mov
and
das
shufps
nop
or
lods
dec
dec
mov
jne
jecxz
push
push
jnp
or
inc
sbb
int
fcmove
xchg
aad
push
jb
loope
lea
mov
fnstcw
cli
mov
mov
or
jae
out
push
xsaves
mov
inc
mov
xchg
pop
fisttpll
es
mov
mulb
adc
xor
inc
jecxz
xchg
mov
sbb
pop
retw
mov
inc
adc
sub
test
shll
lcall
xor
mov
xor
xchg
fcmovne
fnstcw
clc
cwtl
jg
xchg
mov
jne
cltd
mov
mov
pop
add
jb
push
adc
cmp
xor
xchg
jmp
lahf
aaa
pop
jl
stos
jecxz
in
dec
lds
aam
dec
push
or
dec
add
shr
das
sub
rolb
xchg
jg
out
mov
mov
jo
imul
lds
mov
jmp
sub
pop
inc
adc
sub
mov
sbb
test
in
iret
flds
lahf
scas
add
js
test
sub
lock
pop
sub
mov
or
in
mov
dec
loope
jb
out
iret
enter
sub
pop
leave
sbb
rcrl
mov
adc
jge
push
scas
xor
mov
xor
in
fsub
push
fstps
gs
push
aad
jmp
pinsrw
stos
in
test
mov
xchg
fucomp
or
cmc
pop
dec
in
sar
add
repnz
mov
mov
add
fstpl
stos
adc
int3
repz
push
mov
aaa
rcl
shll
scas
fdivrl
push
push
popa
cmp
dec
jge
fstps
sahf
data16
lds
xchg
fwait
in
sti
loopne
cmp
lret
iret
or
push
inc
xchg
rolb
ljmp
sbb
mov
cmp
jge
movsl
repz
in
aad
pop
clc
jle
call
lea
pop
pop
fdivrs
cmp
out
fst
repz
xchg
adc
fstpt
and
sub
jle
xchg
xchg
fldcw
aad
je
bound
jge
sub
stos
adc
sti
fnstsw
sub
jns
cmp
lods
fwait
and
fisubrl
ljmp
popf
mov
xor
aaa
lods
dec
sub
insl
test
aad
fimull
jmp
fisttps
out
xchg
sar
sbb
jo
add
push
clc
subl
add
gs
clc
in
mov
outsb
out
xor
sub
cmp
fbld
loope
push
pop
movsl
adc
mov
rcrl
lret
fcomps
mov
test
in
lods
leave
aam
in
cs
ret
aas
stc
std
daa
ss
mov
ja
scas
pop
test
lea
lods
cli
pop
stos
imul
xchg
mov
pop
inc
jmp
scas
or
mov
jnp
mov
sbb
jmp
pop
test
movsl
lock
mov
lret
inc
in
mov
and
and
pop
xor
jno
incb
xor
aaa
inc
leave
push
sub
bound
loopne
push
mov
mov
pop
icebp
out
dec
pop
inc
add
pushf
xor
jecxz
jb
out
jecxz
pop
test
xor
clc
mov
fldcw
dec
outsl
repnz
icebp
push
push
mov
daa
lods
mov
lock
cmpl
push
inc
xor
outsb
leave
pusha
mov
out
sbb
pop
or
sbbb
mov
pop
fstps
lock
or
sbb
and
adc
or
aam
dec
enter
ja
dec
stc
mov
popa
clc
mov
or
rclb
jbe
dec
push
nop
sub
test
sti
jp
cli
lcall
adc
data16
jg
pop
iret
dec
aaa
arpl
adc
or
pop
or
dec
mov
and
mov
pop
xchg
cmpl
incl
repz
mov
sub
movsl
test
imul
aaa
xchg
sbb
loopne
or
push
adc
jo
cmpsl
push
rol
aaa
out
mov
sub
jae
test
pop
xor
fidivrl
ja
mov
jb
and
leave
in
sbb
xor
incb
pop
dec
adc
jno
mov
and
enter
jnp
mov
jecxz
push
pushf
div
pusha
dec
loope
shr
dec
les
push
lret
inc
push
ret
xor
xor
dec
in
mov
mov
imul
aas
mov
cmp
dec
pop
mov
call
clc
cmp
fcoms
mov
icebp
dec
out
mov
ds
shrl
daa
xchg
push
and
mov
sbb
pop
sbb
lods
out
push
jae
int3
adc
mov
jmp
mov
and
xchg
pushf
fidivl
or
icebp
rcr
loopne
out
pushf
int
lahf
jno
fwait
push
loop
and
and
stos
mov
dec
push
jmp
xchg
stos
leave
enter
mov
in
divb
adc
xor
enter
or
notl
pop
ror
in
stos
int3
cmc
std
cld
and
fidivs
rdpmc
fsubrl
shrl
push
cs
push
add
in
jp
xor
aad
dec
lds
adc
dec
inc
and
dec
push
pop
push
je
lods
leave
add
xor
sbb
xor
pop
xor
inc
mov
rcrl
fxch
data16
jmp
adcl
stos
out
ja
xchg
ret
mov
rcrl
les
xchg
xchg
les
and
imul
movsl
xchg
sbb
ja
out
cld
lahf
and
mov
das
fs
enter
jno
test
mov
jmp
es
ror
lds
into
mov
inc
or
fcompl
addr16
in
hlt
xchg
shrl
fcoms
aam
jmp
sbb
mov
daa
and
add
mov
out
mov
jo
jmp
arpl
pop
jns
aaa
push
jb
sub
imul
add
ss
inc
inc
adc
ss
cmp
ret
arpl
repnz
fmulp
inc
mov
jno
out
sbb
push
mov
js
pop
insl
push
dec
je
inc
jno
add
sbb
jae
mov
sti
aaa
mov
jo
scas
and
lock
add
xchg
js
fidivl
fimull
ret
sub
and
push
addr16
mov
pop
int3
pop
ljmp
lea
dec
ret
insb
and
loope
cmpsl
push
add
pop
repnz
mull
out
jnp
loope
jmp
das
imul
jg
push
mov
cmc
cmp
push
ret
jle
aam
es
jmp
dec
ljmp
push
lret
fidivl
mov
loope
mov
stc
jle
ret
push
adc
push
in
xor
cmp
cmpl
mov
test
jb
inc
addb
xor
jne
or
dec
sub
aam
decb
fcoms
push
fimull
gs
adc
jne
jmp
jnp
lret
mov
test
mov
data16
lds
in
adc
adc
sub
outsl
add
jno
test
mov
pop
mov
dec
push
mov
xor
cmp
lahf
jmp
in
cmp
xchg
rcl
mov
push
inc
in
push
les
xor
shll
sar
mov
or
mov
adc
shlb
gs
jge
ret
xchg
in
movsl
cmp
ret
popf
jmp
sub
into
mov
inc
cwtl
lds
aas
imul
mull
in
lock
jecxz
inc
fimuls
fstpl
push
shlb
dec
pop
pop
jmp
ja
add
jg
cmp
in
pop
jl
pop
loope
clc
lods
out
addb
out
mov
lea
sti
push
inc
dec
dec
imul
xor
push
mov
sbb
and
inc
lds
dec
inc
mov
mov
shll
pushf
cmp
insl
les
mov
jns
adc
sub
sub
stos
int
lret
push
aas
aam
sub
inc
jne,pn
jle
sub
mov
shrl
scas
lods
loop
mov
repnz
lcall
lahf
je
adc
inc
or
cmp
jg
adc
aaa
cmp
xchg
addr16
lds
dec
xchg
sbb
push
jnp
lods
fxrstor
xchg
in
fs
dec
call
adc
mov
imul
jl
fsts
pop
std
mov
pop
lahf
fwait
ja
sbb
push
inc
inc
out
pop
std
dec
jnp
push
mov
lea
arpl
sub
test
add
sub
dec
add
sarl
clc
sub
jne
shlb
mov
and
sbb
out
adc
sub
sahf
cmp
cmp
loop
xchg
jne
lcall
lods
lcall
int3
stos
inc
dec
and
es
mov
shlb
push
or
sub
sub
mov
dec
lds
stos
call
fcoms
lahf
rcrb
cmp
inc
cli
jns
xchg
shll
fwait
out
cmpb
push
or
or
or
or
mov
data16
mov
xchg
pop
mov
push
cmpsl
mov
gs
rolb
incl
xor
or
xor
dec
imul
lret
jmp
orl
inc
cltd
push
into
push
ret
push
or
loopne
or
dec
leave
push
out
ret
aad
add
xchg
and
mov
movsb
jmp
mov
xor
notb
out
insb
push
test
call
mov
fisubs
add
subl
aas
mov
jmp
inc
mov
movsb
iret
loope
gs
adc
sub
loopne
sub
lret
sbb
mov
out
lds
fcom
les
push
call
adc
pop
push
ret
les
xchg
sub
ss
or
xchg
scas
push
push
and
or
cmp
add
in
mov
dec
xchg
xchg
push
jbe
ftst
out
mov
fidivl
int
aam
sub
lea
mov
mov
test
dec
enter
push
push
fs
sbb
jle
fisttps
cs
fbld
das
lods
and
sub
fiaddl
lods
inc
fucomi
test
dec
push
clc
loop
xor
faddl
bound
ret
mov
ret
mov
xor
leave
dec
add
aad
and
dec
push
sarl
and
loope
jno
arpl
xchg
inc
outsl
mov
push
aaa
movsl
mov
cmpl
dec
or
aad
lds
addr16
mov
bound
jbe
and
push
cltd
jl
cmc
push
divb
mov
cld
adc
xor
mov
lock
rcl
fisttpl
sarb
pusha
test
mov
xor
test
mov
push
add
xchg
in
sbb
js
call
adc
orl
mov
inc
inc
mov
test
daa
fstps
jmp
sub
sub
ds
xor
in
adc
daa
and
xor
loop
add
mov
stc
lods
loopne
rclb
paddb
orl
test
test
pusha
in
mov
and
jae
popf
adc
push
push
scas
filds
pop
ljmp
sbb
pop
sub
push
das
notb
pop
pushf
in
mov
lods
xchg
mov
shrl
pop
stos
xor
pop
push
mov
call
fxch
sub
out
les
not
daa
fs
and
lods
xor
push
jo
pop
dec
dec
insl
ret
xor
sub
adc
sub
les
xorps
clc
imul
sub
inc
out
cmpsl
xor
loope
push
cmp
shll
dec
dec
jl
xchg
stos
cmp
aad
out
ret
push
cmpsl
pop
out
cld
rcll
mov
add
sub
sbb
xchg
out
in
sub
cmp
aam
aam
jle
adc
xor
xchg
nop
ss
incb
xchg
add
or
addr16
add
pop
push
sub
pop
cmp
jmp
shrl
rcr
sarb
rcrb
pop
inc
aas
sub
push
daa
in
xlat
retw
pop
ret
sbb
mov
pop
mov
jno
inc
mov
push
xchg
xor
repz
pop
push
jecxz
jns
jne
in
or
jmp
repnz
mov
stos
add
data16
js
xchg
call
push
or
in
stos
or
stos
or
or
mov
jo
mov
ret
pop
aad
repnz
mov
dec
mov
cmp
je
dec
data16
in
dec
mov
push
movsl
sub
nop
ficompl
dec
std
push
xchg
inc
sub
mov
ljmp
dec
das
fisubs
int3
push
mov
and
test
jl
loopne
push
or
push
out
test
cmp
xchg
jne
out
int
fdivs
fucomi
pop
stc
mov
lcall
or
pop
sarl
out
nop
pop
aaa
loop
lods
push
sbb
mov
inc
jno
in
cmp
loopne
mov
lret
stos
jmp
mov
add
inc
add
adc
xchg
push
add
jae
adc
xor
mov
jno
sahf
outsl
in
int
adc
imull
push
clc
inc
fmull
sub
jo
inc
in
int3
cmpb
inc
clc
leave
mov
arpl
mov
mov
cmp
divb
xor
insb
xlat
inc
into
in
sahf
insl
pop
movsb
ds
mov
shr
bound
pop
in
fcoml
sbb
adc
adc
imul
roll
and
icebp
adc
lret
mov
ret
xor
lods
mov
pop
rcr
or
fistpl
iret
rorl
pop
scas
stos
mov
mov
xchg
lock
cltd
mov
das
jmp
adc
lcall
inc
or
test
pop
mov
xchg
mov
jo
xchg
inc
imul
jmp
jp
xor
sti
dec
dec
and
add
push
adc
ja
shlb
adc
mov
in
mov
cmp
and
idivb
mov
fwait
mov
sbb
repnz
scas
push
popf
ljmp
bound
sub
fsubrp
ret
or
lds
xchg
out
movsb
sti
pop
fdivrs
movsb
adc
dec
cmp
mov
sbb
fnsave
loope
jg
xchg
movb
cld
and
pop
add
add
and
or
pop
rolb
mov
in
inc
or
ficoms
ja
pushf
cwtl
popf
int3
loopne
mov
stos
inc
enter
shrb
out
cld
hlt
lods
adc
imul
adc
pusha
and
mov
sbb
jnp
popa
push
ret
mov
jo
lahf
nop
and
popf
scas
paddsw
adc
or
sub
jecxz
cmp
fdivl
out
jmp
int3
jmp
sub
pop
popa
xchg
adc
stos
add
xor
pushf
adc
inc
rcl
shld
pop
add
mov
pop
ds
jp
rolb
mov
lods
pextrw
dec
outsl
xchg
and
sub
in
ds
icebp
test
fwait
dec
dec
cltd
sbb
addr16
xor
movsb
and
out
out
dec
mov
or
mov
mov
xchg
data16
sbb
arpl
sbb
xchg
adc
in
in
sub
dec
idivl
call
lcall
fisttps
loope
jne
movsl
aas
movsl
orb
xor
data16
or
push
idiv
lret
ret
push
add
incl
sarb
or
inc
adc
mov
dec
out
sub
enter
loop
inc
pop
jmp
and
push
bound
inc
lock
dec
dec
clc
lahf
sbb
insb
mov
adc
lds
fdivr
push
xor
mov
add
out
xlat
and
cwtl
xlat
jge
movsb
dec
je
sti
sub
cwtl
pop
mov
loop
lds
add
mov
sub
divl
lock
out
and
push
sbbl
sub
push
gs
pop
into
lea
sub
call
fiaddl
das
insb
test
sbb
sysenter
jp
ja
xor
test
mov
lahf
js
dec
addr16
pop
xchg
xlat
test
mov
jbe
in
testb
daa
push
aad
clc
mov
adc
sbb
mov
xchg
mov
inc
mov
jo
push
ds
and
and
sbb
aas
or
pop
test
add
fs
add
sbbb
in
dec
jnp
push
mov
xchg
and
stos
jmp
jecxz
xchg
mov
fmulp
xor
loopne
int
lods
movl
ljmp
cmpsb
in
scas
push
xchg
and
inc
or
enter
jecxz
stos
mov
push
clc
or
xchg
dec
push
neg
xor
pop
push
loopne
out
lret
sbb
outsl
xchg
jecxz
enter
mov
aas
loopne
mov
mov
xchg
fyl2x
fwait
into
xlat
leave
jecxz
cmpsb
insb
xchg
or
push
inc
adc
xorb
aas
enter
cwtl
outsl
fwait
or
inc
push
inc
iret
ret
mov
adc
jo
cmp
js
stc
test
mov
das
sbb
das
pusha
cmp
sbb
dec
adc
ret
push
arpl
repnz
out
or
test
fidivs
add
mov
mov
lods
icebp
pop
dec
scas
sbb
testl
push
inc
push
and
aaa
test
and
and
pop
xchg
mov
xor
cld
sub
xor
scas
out
int3
out
pop
xchg
mov
pusha
mov
aas
xchg
in
xor
enter
ret
es
loopne
imul
or
testb
lea
imul
add
jns
sbb
xor
das
xchg
nop
aad
xchg
inc
dec
pop
insl
adc
adc
test
ret
pusha
test
outsb
insb
lcall
in
flds
repnz
icebp
sub
mov
test
cld
ret
xor
mov
fmul
stos
enter
jbe
leave
xchg
xchg
xchg
jns
lds
out
pop
arpl
sbb
scas
lcall
shlb
jno
sub
rcrb
push
adcl
int3
out
sbb
in
sub
pushf
sub
lea
sub
mov
mov
aas
push
popa
ret
jmp
test
sub
paddusb
je
mov
dec
push
int3
fisubrl
pushf
je
dec
jecxz
push
xor
out
pop
ret
cli
add
cmpsl
jns
gs
sub
outsb
mov
jge
popa
mov
shll
pop
mov
lret
jmp
xorl
cld
scas
xor
int
mov
das
xlat
lods
sbb
cmp
out
leave
jg
fsubl
hlt
inc
xor
push
xchg
sub
popa
gs
pop
fwait
jno
add
fistpll
mov
mov
out
add
xchg
and
dec
add
push
inc
jbe
add
sti
sub
repz
repnz
and
jp
sbb
inc
dec
adc
bound
mov
sbb
cli
cmp
mov
adc
mov
pop
inc
add
loop
xor
push
adc
sti
jl
xor
pop
adc
test
push
test
push
mov
adc
xor
loope
add
mov
ja
jae
pusha
das
ss
out
xlat
sub
ljmp
rcrl
xlat
scas
call
inc
out
sbb
xor
shr
push
loope
cltd
enter
mov
mov
xor
rclb
sbb
cs
scas
in
out
push
dec
cmp
xlat
xchg
add
repz
push
mov
dec
pop
mov
addr16
xor
rol
dec
outsl
scas
dec
mov
sahf
mov
sub
fwait
cli
sub
adc
sbb
push
stos
popf
mov
repz
repz
adc
xor
jnp
push
push
lcall
mov
dec
jmp
mov
ja
pop
adc
pop
pushf
xchg
and
in
xor
pushf
xor
inc
test
xor
pop
sub
push
imul
jb
fsubrl
cmpsb
pop
add
mov
dec
rol
add
popa
outsl
loopne
xchg
mov
ja
push
testl
sbb
xor
in
test
aas
shlb
push
roll
mov
inc
push
mov
xchg
lods
fildll
aas
xor
push
into
out
mov
sbb
sbbb
shlb
pop
and
imul
xor
ja
jbe
ds
mov
fildll
cltd
jge
stos
sub
leave
inc
hlt
bound
xchg
dec
call
ljmp
jnp
fst
test
mov
lcall
sbb
lds
xor
jmp
xor
addr16
inc
sbb
arpl
sub
jns
and
xor
das
je
xchg
mov
pop
ja
adc
or
movsb
test
in
mov
imul
aaa
push
xor
lcall
sub
cmp
cwtl
outsl
xor
dec
sbb
test
test
sbb
sbb
in
sub
mov
sbb
ja
fiaddl
mov
mov
out
sbb
mov
push
fistpll
pop
mov
in
cmpsl
mov
into
mull
push
adc
add
into
ret
mov
in
cmp
mov
sbb
ss
fwait
int3
stc
mov
test
bound
fsubr
mov
jb
mov
rcll
mov
or
loopne
lret
popf
insl
fwait
xchg
popa
int
aaa
pop
idiv
scas
out
test
and
inc
inc
ds
push
out
mov
lret
ljmp
or
push
bound
repnz
fmull
cwtl
bound
fldt
pop
mov
mov
pop
xchg
mov
adc
sub
aaa
out
sbb
cld
cmp
xor
lcall
imul
popa
bswap
jge
int
test
add
test
xadd
adc
mov
pop
jae
push
fidivs
pop
int3
sbb
cmp
leave
out
out
cs
xchg
repnz
and
insl
jge
ret
out
fisubrs
int3
xchg
imul
loope
das
inc
sub
mov
xor
xchg
sub
mov
push
leave
add
sub
std
insl
outsb
ror
out
push
mov
mov
dec
mov
incb
push
js
dec
loopne
xor
xchg
rclb
hlt
lahf
out
dec
call
or
jno
lret
pop
enter
call
pushf
or
xor
xchg
repnz
mov
cli
dec
pushf
cmp
pop
imul
aaa
mov
jg
xchg
or
mov
pushw
mov
adc
jl
dec
mov
or
jae
aad
imul
outsl
aas
movsb
xor
sub
nop
add
pop
pop
cmp
mov
mov
ret
std
lds
hlt
fsubrp
sbb
aas
aas
or
push
adc
mov
jb
nop
imul
sbb
popf
add
or
adc
add
push
push
mov
pop
dec
rol
dec
fs
pop
test
cmp
push
lret
fmul
sub
adc
fstps
pusha
and
loope
jp
sbb
and
shrb
jb
in
das
fstpl
popl
stos
imul
lcall
xchg
jb
in
outsl
jno
mov
and
int
aaa
icebp
mov
jp
inc
mov
xor
arpl
ret
and
jno
mov
pop
pop
cli
outsb
xchg
cmp
ret
pop
out
inc
rol
nop
pop
clc
fwait
pop
jno
lds
pop
jmp
jge
lds
pushf
xchg
sub
and
push
out
dec
add
cmp
sbb
xor
sub
dec
scas
in
loopne
insl
lods
jnp
jg
mov
push
inc
push
push
mov
mov
adc
inc
loopne
imul
adc
inc
insb
mull
iret
sub
test
pop
pop
sub
es
inc
sub
cmp
imul
adc
sbb
adc
push
lea
test
sbb
fldcw
mov
mov
lcall
sub
xor
xor
add
cmpsb
and
cli
mov
or
ss
mov
xchg
stos
jmp
cmp
adc
dec
lea
xchg
outsl
xchg
out
daa
fsubrs
sahf
scas
mov
push
stc
sbb
lret
xchg
in
add
in
dec
mov
adc
sbb
std
ret
imul
sub
inc
in
ja
sbb
cmp
mov
fsubs
in
mov
dec
jmp
aaa
in
mov
rolb
in
ret
xchg
cmp
les
mov
sahf
jae
mov
dec
ret
sbb
stos
jne
movsb
repnz
push
test
dec
jne
into
jbe
cmp
jp
popf
inc
enter
outsl
sbbb
movl
lea
sub
push
addb
jl
popf
and
std
jae
mov
xchg
popa
lret
or
inc
push
mov
aas
int3
xchg
bound
loopne
sub
js
sub
jecxz
fcomps
pop
out
inc
insb
rclb
cltd
push
or
aam
dec
adcl
pop
sbb
cld
mov
sbb
mov
iret
and
repz
xor
out
in
add
mov
pop
or
adc
test
dec
mov
aad
gs
nop
sti
dec
or
sarl
fildll
pop
gs
mov
cmpl
mov
jnp
ss
push
sub
push
leave
xor
mov
outsl
or
jg
xchg
mov
enter
lret
stc
sub
push
test
lods
std
push
pop
inc
test
rcrl
call
bound
jmp
cmp
jl
inc
cmp
nop
jmp
lahf
incb
cltd
mov
mov
hlt
xchg
es
mov
aam
push
mov
xchg
sub
xchg
out
ss
inc
pushf
mov
call
mov
cmp
pop
jmp
in
inc
mov
aaa
dec
xor
leave
icebp
push
addb
jbe
xchg
cmp
rorl
lock
mov
mov
into
std
cmpsb
or
mov
sub
mov
inc
inc
and
in
add
and
dec
push
inc
lock
pop
ret
fcmovbe
cmp
sti
sbb
jmp
and
scas
adc
lds
or
sub
ljmp
xchg
xor
sub
mov
jmp
cwtl
lock
xchg
xchg
cmp
or
mov
inc
js
rol
add
aam
xchg
inc
cmp
jecxz
jl
lahf
cltd
dec
mov
jl
xchg
mov
cs
sbb
xor
and
or
sbb
inc
test
loop
xlat
ljmp
out
xchg
test
pop
int
and
push
inc
inc
je
xor
and
and
divb
pusha
jne
inc
xchg
jnp
and
xchg
sub
mov
das
jno
push
mov
mov
ja
shr
int3
adc
add
testl
lcall
sub
std
xlat
hlt
sub
pop
mov
daa
nop
mov
testb
mov
push
dec
insb
shl
adc
ja
dec
sbb
or
inc
loope
mov
mov
xor
out
popa
add
add
cmpsl
mov
pop
inc
and
sbbb
lahf
das
loope
in
pop
aas
imul
mov
inc
pop
lahf
jmp
mov
shll
sbb
ljmp
negb
pushf
cli
inc
jb
sub
mov
fisubrl
imul
and
push
insb
sti
rclb
cmp
clc
inc
xor
pop
arpl
call
sbb
sub
sbb
pop
icebp
aas
cmpsb
leave
mov
adc
stos
dec
jo
mov
nop
lock
scas
mov
es
push
pop
pusha
xor
cmp
adc
and
jo
pop
xor
arpl
mov
inc
sti
cmp
call
mov
shlb
xor
cmp
inc
mov
lods
dec
mov
cmp
adc
adc
scas
sub
roll
jp
lahf
rcrl
dec
sub
test
cs
push
push
ror
and
stos
xchg
sub
mov
or
mov
or
cmpsl
out
sbb
sti
mov
hlt
leave
int
clc
xchg
ret
pusha
sub
inc
mov
pop
and
mov
mov
mov
xchg
pop
clc
push
jns
and
pop
push
jbe
or
mov
shll
dec
push
jle
pop
test
aas
push
ficoms
sarb
pop
push
out
dec
fcompl
icebp
push
fnstenv
inc
cmp
fsubrl
dec
insl
bound
rcll
scas
mov
inc
mov
push
mov
cmp
mov
sbb
mov
xor
rcrb
xor
dec
dec
fdiv
and
mov
filds
mov
and
dec
inc
mov
icebp
lods
mov
pop
shlb
pop
push
pop
ljmp
cmp
push
dec
mov
inc
jecxz
mov
insb
xor
je
dec
fmuls
dec
sub
add
xchg
loop
push
test
outsl
fnstenv
testb
das
mov
fmuls
mov
push
xchg
ret
pushf
stc
dec
push
ljmp
int
mov
push
stos
xor
xchg
cmc
push
jmp
mov
cmp
and
xchg
xor
mov
sub
pop
scas
outsl
pop
repz
mov
mov
cmp
cmp
outsl
dec
fistpll
inc
mov
push
test
dec
add
cwtl
or
daa
cmpsl
jg
pop
add
jo
fsubr
pop
cmc
xor
mov
hlt
rcll
jo
cwtl
push
pop
mov
ljmp
pop
adc
in
dec
js
sarb
jl
clc
xor
aad
xor
popa
sub
or
rclb
or
cld
test
cmp
daa
sub
and
mov
fadds
mov
jbe
stos
push
jnp
cmp
mov
cs
jle
test
ja
loop
inc
pop
xor
fnsave
jae
lret
in
adc
enter
sub
pop
ret
xchg
jb
dec
pusha
xchg
sub
jmp
sbb
std
lods
sub
xlat
pop
cmpsb
xchg
add
mov
xchg
rcl
stos
dec
inc
in
imul
dec
and
dec
xor
push
data16
popf
cltd
sub
das
in
in
xor
addr16
cmpsb
sbb
in
push
pushw
pusha
xacquire
shlb
add
cmpsl
adc
jp
daa
je
jmp
mov
add
clc
ljmp
test
sub
in
iret
push
push
out
push
sti
mov
fcomp
pushf
or
es
ret
adc
push
push
pop
imul
push
jle
jge
mov
jb
pop
clc
add
xchg
clc
inc
mov
xor
orps
and
stc
pushf
xor
lock
sub
ds
ljmp
test
jle
in
test
cmpsl
addr16
enter
cmp
mov
fs
subb
sub
or
adcl
scas
in
fisttps
or
das
push
jb,pt
aaa
xlat
cmp
pop
mov
cs
xlat
stos
mov
popa
mov
fdivl
dec
addr16
fbstp
lock
mov
sbb
fsubrp
jns
sub
mov
gs
sbb
call
loopne
cld
stos
cltd
jne
fistpll
mov
icebp
aas
mov
mov
aad
clc
les
mov
subb
adc
sbb
daa
jb
repnz
sub
jb
add
rcr
imul
adc
cmp
das
lea
loope
lret
test
and
int3
xor
sbb
or
cmc
add
mov
jno
lea
mov
dec
mov
or
aad
aad
aaa
popf
adc
mov
xor
ret
sub
sbb
and
cmp
cmp
negb
stos
xor
xchg
push
inc
mov
cwtl
rclb
xor
rorb
xor
out
ss
test
lock
adc
dec
call
cmp
gs
je
addl
and
inc
xor
and
jge
aas
mov
jnp
cmpsb
bound
data16
xchg
insl
sti
sub
sbb
lds
dec
cmp
mov
sbb
xor
lret
push
mov
fnstcw
mov
sarb
pop
movsb
rclb
sub
cmpsb
ja
push
test
add
pop
add
mov
xor
popa
mov
and
or
cmp
jnp
outsl
xchg
push
push
xor
fldt
and
insl
xchg
cmp
icebp
repnz
sub
sbbb
pop
mov
decb
dec
adc
xchg
out
loope
jp
call
fld
lods
sbb
mov
cmp
clc
xchg
out
or
adc
pop
stos
or
shl
pop
movsb
sarb
jecxz
xor
sbb
test
nop
sti
inc
push
cmp
xor
inc
jecxz
hlt
jne
pop
call
cmp
push
mov
xor
xchg
push
in
add
mov
je
stc
pop
mov
dec
ffree
shl
xor
xor
or
imul
insl
rorb
sbb
mov
and
xchg
hlt
xchg
scas
xchg
call
xchg
and
in
out
cwtl
lret
inc
inc
in
aam
fcomps
xor
adc
ds
sbb
addr16
jne
inc
mov
jmp
mov
in
repz
in
dec
fldenv
ja
data16
popa
data16
xchg
data16
adc
adc
mov
sbb
hlt
ret
in
imul
xchg
insl
sbb
sub
nop
decl
ret
shll
mov
adc
scas
in
inc
outsl
mov
dec
sbb
pop
ret
jmp
ja
icebp
mov
fstl
jnp
cmpsb
in
mov
clc
clc
sahf
push
and
jnp
or
fstps
fs
dec
vucomiss
addb
cwtl
scas
aas
in
fldenv
ret
std
adc
std
pop
scas
adc
jmp
les
and
inc
xor
pop
nop
pop
mov
dec
sbb
stos
xor
pushf
out
jmp
test
cltd
xchg
pop
ret
insl
sub
dec
repnz
inc
mov
fcmove
ret
mov
out
sarb
inc
rorb
dec
xchg
or
xor
jle
out
loope
aaa
xchg
add
ss
inc
mov
mov
aad
iret
adc
mov
cmp
fcmovb
push
mov
mov
loope
nop
jnp
mov
mov
aaa
sub
sbb
rcll
xor
mov
xlat
push
pop
fwait
setl
fwait
push
sbb
data16
pop
loope
xchg
push
xor
notl
js
repnz
notl
and
rolb
cmpsl
addr16
shlb
inc
and
fildl
cwtl
mov
mov
movb
push
in
sar
loopne
fbstp
mov
pop
pusha
cmp
xchg
pop
ds
inc
push
push
subl
xchg
jae
pusha
hlt
xor
out
sub
nop
lret
jg
clc
lcall
jl
mov
loope
hlt
sub
addr16
adc
pop
jecxz
adc
xchg
leave
ret
stc
iret
xor
xor
hlt
mov
add
cmc
lock
sbb
xor
or
iret
insl
ret
lcall
xchg
cmp
jg
push
imul
outsb
xchg
subl
mov
adc
push
adc
gs
leave
sub
jb
jge
clc
dec
dec
in
push
movb
clc
pop
loope
daa
in
pushf
mov
faddl
add
mov
cmp
sbb
cwtl
dec
icebp
call
sahf
pop
nop
sbb
arpl
shll
xchg
sbb
push
sti
shlb
das
sbbb
sarb
adc
pop
xor
aam
je
sub
out
mov
push
inc
or
jmp
sub
movb
mov
cmp
mov
and
and
jno
push
aad
xchg
sub
lret
cltd
cltd
push
js
aaa
mov
pusha
fcomip
stos
mov
sbb
cwtl
mov
pop
jae
inc
xor
xchg
and
cmp
fsubrs
push
out
jg
mov
dec
popf
lea
mov
fstpl
xlat
cmp
jbe
inc
push
testl
stos
xor
je
ja
pop
cld
aaa
xchg
jb
or
ret
sbb
mov
dec
inc
lea
stos
lcall
dec
test
xor
mov
xchg
add
out
inc
fdivrs
xor
add
xchg
mov
out
fcomi
pushf
dec
int3
test
addb
adc
jbe
mov
iret
mov
out
pushf
cltd
lock
lcall
std
aas
jns
addr16
lret
mov
arpl
test
fadds
stos
int3
fldcw
adc
enter
loopne
add
sub
test
sbb
out
pusha
test
mov
iret
aaa
push
loopne
cmp
jg
xchg
jmp
adc
and
int
xchg
loop
ret
icebp
repz
sbb
ret
loopne
mov
cmp
ja
adc
adc
popa
push
mov
aas
mov
fbld
or
dec
frstor
loop
movsl
gs
xchg
xchg
adcb
stos
jnp
or
jg
enter
lods
fidivs
ret
imul
or
add
and
lods
push
dec
mov
push
xchg
repz
out
stos
push
adc
popa
push
test
lods
inc
cmp
pushf
pop
stos
lds
stos
mov
fldcw
repz
lret
flds
int3
or
stc
movsb
arpl
mov
push
test
mov
sbb
add
sub
sbb
jl
jg
mov
push
xor
movsl
jecxz
outsb
pop
pusha
fadds
add
insl
jl
pop
adc
jno
lea
mov
push
xchg
add
mov
imul
inc
negl
jge
lods
or
fsubr
loopne
loope
faddl
lcall
add
mov
inc
sbb
leave
ret
sti
lahf
out
cmp
sub
cmp
iret
sarb
shrb
jp
push
add
imul
out
loope
and
cld
cwtl
jmp
aam
ljmp
dec
mov
imul
mov
ljmp
popa
ss
rcl
mov
mov
add
cltd
dec
add
popa
fstpl
test
sub
pop
xlat
nop
ds
in
fxch
dec
popa
int3
jg
push
pop
jb
sub
jo
adc
in
cli
clc
clc
das
in
in
jmp
daa
or
insb
arpl
test
imul
or
add
xor
ja
mov
cmc
jnp
cmpsl
xchg
lods
ret
xchg
pushf
lods
mov
cmpsl
sbb
repnz
xchg
lock
jp
add
mov
fidivrs
xchg
rclb
nop
mov
sbb
icebp
jno
dec
mov
adc
lret
mov
or
aaa
sbb
rorb
je
pop
jl
leave
arpl
inc
jmp
sbbb
leave
pusha
out
push
movsb
lods
test
or
leave
adc
sub
lods
adc
ficomps
cmp
mov
mov
pushf
mov
in
sub
or
in
adc
mov
into
lods
test
or
cmp
xlat
lods
inc
imul
call
lret
add
push
push
in
xor
insb
inc
inc
add
addr16
xchg
dec
cli
sti
and
xor
add
or
fsubrs
xor
pop
loop
sub
test
inc
adcb
sub
adc
dec
fdivs
xchg
repnz
les
jecxz
dec
mov
or
test
xchg
sub
pop
sti
mov
sbb
push
fistpl
add
pop
jns
pop
jmp
sbb
push
stos
flds
test
or
jno
pop
cmc
out
in
gs
pop
sub
dec
lret
cmpsb
jmp
mov
inc
in
add
jge
mov
xor
outsl
push
mov
es
pop
and
cwtl
push
adc
in
repz
and
dec
and
xor
inc
xor
xchg
lds
mov
push
adc
mov
ljmp
call
xchg
add
jmp
and
cmp
push
fisubrs
mov
icebp
ja
pusha
push
add
lcall
inc
sbb
mov
add
jae
mov
add
fnstsw
ret
dec
xor
jl
aaa
and
fdivs
adc
fwait
sti
xchg
fdivrl
pop
cmp
jmp
mov
rcr
jo
test
scas
or
jns
push
and
dec
into
pop
icebp
sbb
pushf
fbstp
pop
sti
xor
mov
movsl
xor
fimuls
daa
inc
mov
dec
lret
sub
jae
dec
popf
daa
in
icebp
lret
add
inc
lds
fidivs
insl
enter
push
jmp
sbb
or
fwait
loop
push
push
in
push
into
lea
leave
shl
dec
or
ss
or
push
push
cmp
mov
cld
jmp
in
cmp
in
fisubs
adc
outsl
xchg
jmp
sahf
pop
push
pop
clc
xchg
fisubrs
adc
sbb
pop
test
scas
sub
xchg
and
xchg
mov
sub
mov
inc
shl
pop
cmc
sub
jbe
xchg
sub
mov
pop
movsl
adc
push
das
stos
mov
imul
mov
pushf
cmp
insb
cld
aaa
mov
mov
cmpsb
inc
fcoml
movsl
test
inc
fldt
out
sbb
data16
adc
loopne
mov
lahf
adc
sbb
scas
dec
add
mov
scas
adc
int
js
mov
pop
inc
cmp
inc
pop
mov
sbb
or
loopne
addb
in
mov
lret
sbb
ror
mov
ficomps
inc
inc
loopne
in
sbb
or
scas
pop
mov
inc
lock
scas
sbb
sbb
xchg
repz
push
mov
xchg
mov
jbe
xor
in
inc
fisubrl
js
iret
movsl
in
xchg
mov
xor
add
bound
imul
repz
push
mov
sti
or
insb
and
xchg
xor
push
sub
enter
xchg
pop
xlat
into
mov
movsl
stc
jmp
cld
adc
sub
call
mov
stc
add
xor
rorb
sub
test
test
pop
push
int
mov
lret
cld
cmp
mov
or
jns
nop
xor
push
xor
stos
xchg
js
sub
push
sub
ja
lret
sub
out
test
mov
push
dec
stos
mov
mov
dec
cmp
pop
cmc
ja
inc
enter
loopne
mov
inc
xchg
and
sub
mov
pop
dec
jnp
xor
jl
push
jae
and
mov
test
fldcw
or
and
or
inc
stos
fisubs
mov
dec
mov
mov
gs
push
in
das
aas
jns
add
in
repnz
pop
out
mov
add
push
leave
mov
sbb
ss
cmp
mov
push
cwtl
adc
mov
fldl
jne
jb
outsl
add
mov
dec
int3
ljmp
in
insl
in
push
sbb
adc
lock
sub
mov
inc
test
paddsw
jns
dec
add
addr16
test
jnp
das
push
jbe,pt
sub
and
in
imul
jmp
fwait
or
test
cli
mov
adc
adc
pop
push
xchg
sub
add
stos
sahf
jmp
jg
adc
push
add
les
test
cmp
cwtl
jnp
pop
xor
pusha
jno
or
lret
xor
sub
or
sbb
sbb
pushf
in
hlt
push
or
cli
xchg
repnz
sbb
insl
mov
sub
xor
movsb
xor
inc
or
out
dec
scas
popf
in
jl
cmp
hlt
scas
add
pop
scas
sbb
adc
xor
add
mov
aad
cs
xor
rolb
mov
test
aam
lcall
or
jb
dec
push
test
repz
ja
xchg
or
lds
outsb
jl
mov
ret
xchg
movsl
clc
je
jne
ret
hlt
sub
test
es
xlat
dec
lds
imul
push
repz
push
dec
popa
add
nop
scas
stos
dec
add
mov
lds
adc
add
cmp
push
test
or
mov
je
leave
adc
fidivrs
add
xor
scas
in
mov
or
jns
xchg
loopne
loop
aas
pop
inc
sub
popf
out
jae
and
test
mov
pop
push
mov
or
ret
ss
pop
inc
and
sti
gs
iret
ficomps
jmp
ficomps
push
cmp
das
cmp
push
mov
cmp
add
xlat
jno
inc
inc
nop
ret
shll
fsubs
mov
inc
hlt
pop
insl
dec
pop
or
in
adc
jnp
xchg
mov
dec
test
push
lret
mov
xchg
insl
insl
push
imul
gs
push
inc
sahf
sbb
fcmovne
nop
test
ja
in
jae
test
xor
mov
ret
sbb
mov
rorl
add
shll
aaa
sub
aas
or
or
cmpsl
fdivl
add
cld
xlat
aad
cld
out
adc
js
das
stc
cmp
lock
out
ret
fldl2e
jo
and
dec
dec
out
mov
inc
icebp
les
sahf
xchg
mov
aas
pop
ljmp
fistl
aam
dec
insb
xlat
xchg
mov
fidivl
lods
push
cmp
lea
shrl
pop
arpl
mull
jmp
out
fcoml
and
enter
mov
dec
rorb
enter
cltd
jo
inc
aaa
push
dec
stc
sbbl
sti
iret
fucomi
add
pop
inc
pop
push
stos
xchg
xchg
stc
dec
jmp
jnp
mov
int3
mov
stc
cmp
pusha
les
mov
mov
or
pop
test
mov
xor
ret
scas
insb
cltd
pop
sbb
xor
sbb
adc
cmpb
repnz
call
ffreep
pop
jbe
dec
lret
ficompl
sub
and
popa
aaa
jg
add
mov
push
xor
push
mov
insb
and
sub
jmp
pop
out
lret
pusha
add
cld
or
jne
out
xchg
out
mov
fwait
int
mov
xchg
dec
cmp
pop
insb
mov
in
inc
lock
mov
add
push
jle
imul
shrb
or
sbb
mov
xor
xchg
inc
jmp
frstor
mov
mov
sbb
mov
js
test
insl
pop
ror
push
push
adc
mov
cmp
test
cs
repz
daa
jb
repnz
mov
mov
aas
and
movsb
jo
or
mov
cld
inc
or
cltd
jmp
lea
mov
xorl
inc
lods
mov
cmp
test
adc
out
inc
pop
adc
push
inc
rolb
aad
loope
inc
sub
mulb
add
cmc
sub
sub
dec
fdivl
clc
mov
sub
cmc
inc
out
or
fsub
lds
cmp
test
jecxz
jle
ret
sub
sub
stos
and
cmp
sbb
stos
mov
shlb
aad
dec
jg
ficompl
mov
xor
sbb
ljmp
dec
test
or
sub
ret
fs
sub
sub
insb
cmp
das
adc
jmp
icebp
cmc
pop
push
mov
out
test
pop
ja
sub
xor
in
adc
fs
pop
sbb
movsb
xor
sbb
jmp
clc
jge
fdiv
lock
mov
xlat
xlat
jmp
sbb
out
cmp
je
out
jb
fistpll
stos
fsubrl
enter
je
cmpb
lods
pop
leave
divl
xchg
fists
clc
or
xor
clc
and
xchg
xor
popf
or
jo
mov
and
adc
rcrl
insb
mov
stc
mov
aaa
aaa
and
adc
mov
xchg
pop
jmp
scas
out
jae
add
lret
sub
fdiv
lret
ljmp
lea
faddl
or
fists
shrl
mov
pop
pop
jge
insb
hlt
jae
or
pop
pop
stc
xchg
fisubrl
lret
xor
mov
out
out
ret
xchg
cmp
pop
pop
cmp
cmp
loop
sbb
jecxz
pop
mov
jne
pop
pop
jb
pop
data16
cli
dec
fsubl
push
mov
aad
clc
lahf
stos
xchg
enter
hlt
xchg
divl
pusha
nop
out
sbb
adc
mov
dec
ljmp
loopne
or
dec
inc
mov
pop
inc
adc
sub
mov
hlt
jnp
cmp
mov
and
and
outsl
xor
nop
das
add
xchg
inc
fstps
inc
and
test
fsubs
push
addr16
xchg
dec
sub
jmp
dec
lahf
nop
mov
insl
pop
imul
jns
movsl
mov
pop
push
mov
enter
push
xor
mov
notb
add
or
sub
push
mov
ja
arpl
xchg
push
in
icebp
jbe
xchg
adc
xchg
mov
xchg
xor
pop
and
mov
adc
adc
jae
sahf
mov
push
lods
xchg
loopne
je
andl
out
leave
xchg
mov
pusha
xor
daa
xchg
dec
shlb
int3
imul
adc
movsl
push
ret
cwtl
aaa
push
push
lret
movsl
and
rcrb
aaa
lods
hlt
icebp
cmp
cmc
pop
mov
dec
cltd
in
icebp
sub
enter
pop
into
lods
push
pop
adc
inc
jge
mov
out
sbb
sbb
mov
and
xchg
sarl
lahf
bound
fcomp
test
xor
pusha
scas
pop
arpl
pop
cmpsb
mov
xor
cmp
ss
inc
pop
xchg
cmpsl
jo
js
mov
fldl
and
or
outsl
scas
aaa
insb
mov
cmp
jmp
push
pcmpgtb
pushf
mov
das
sbbl
in
xchg
xchg
xor
loop
pop
xchg
test
add
pop
xor
jmp
pop
mov
call
arpl
in
jno
cwtl
in
mov
ds
cmp
jle
xor
mov
push
mov
cltd
das
xchg
fsubrs
push
shll
addl
lods
es
ret
mov
jp
decl
xchg
aam
js
sub
fiaddl
inc
inc
push
out
ljmp
sbb
jmp
call
mov
mov
ret
cs
out
loopne
lret
out
popa
pop
mov
jmp
xchg
inc
mov
dec
dec
or
cmpl
sbb
rolb
cmp
fistl
sub
out
addr16
or
sar
in
lret
mov
pextrw
test
lret
leave
pop
adc
dec
nop
jmp
loopne
stos
mov
mov
or
jbe
or
les
push
hlt
adc
loope
clc
imul
repz
test
cmp
pop
adc
xchg
mov
hlt
push
mov
dec
jmp
xchg
fldt
mov
cmp
lods
mov
movsb
sub
shr
icebp
test
push
pop
dec
push
xchg
and
aad
xchg
cmp
pop
mov
jge
and
jle
cmp
jmp
int3
lds
scas
mov
insl
xor
xchg
jecxz
enter
movsl
lods
fistl
stos
sub
xlat
int3
jecxz
push
xlat
sbb
decb
mov
dec
pop
sub
lcall
not
add
stc
xor
add
enter
movsb
ret
popf
mov
jmp
inc
cld
popa
push
mov
or
in
jge
cmp
loop
sub
aas
inc
sub
in
inc
ret
push
and
mov
xchg
mov
xchg
mov
in
push
in
jmp
push
xchg
adc
inc
and
cltd
test
mov
add
leave
jl
test
test
movl
outsl
jo
sahf
mov
mov
push
inc
in
lret
aas
iret
and
stc
mov
inc
popf
xor
loop
fdivr
mov
cmp
pop
aam
sub
jge
or
sbb
add
ss
data16
jmp
outsl
jg
cmc
push
sub
mov
ret
sub
mov
sub
jmp
mov
jno
je
and
mov
fucomi
pop
pop
sbb
mov
adc
fcoms
mov
xor
add
out
mov
aaa
iret
lods
pop
push
into
and
sub
push
aaa
lret
inc
fdivrl
cmp
repz
aaa
cmp
xlat
hlt
bound
aam
aaa
iret
mov
out
stos
mov
jl
and
dec
daa
movsb
out
lea
xor
inc
scas
or
xchg
push
hlt
inc
mov
xchg
cmpsl
and
mul
and
cmp
dec
add
loop
ret
xchg
insl
adc
mov
subb
stc
xlat
in
jbe
testb
lahf
jns
test
and
dec
ret
in
push
imul
loop
sarb
push
call
mov
pop
lret
jno
cmp
adcl
dec
stc
test
mov
mov
mov
mov
out
icebp
sub
sub
inc
pop
lret
pop
pop
mov
imul
imul
out
mov
and
jo
push
ljmp
ret
push
or
pusha
jmp
push
gs
jecxz
cwtl
fcomp
das
filds
ret
adc
mov
scas
push
sbb
insb
ret
lcall
mov
cmpsl
xor
mov
jmp
std
leave
cmc
ffree
cld
lds
add
loope
loope
lret
mov
mov
push
in
jg
and
push
mov
loop
or
pusha
popf
cmc
push
adc
int3
mov
add
xor
aas
daa
stos
and
xchg
push
lock
testb
dec
sti
cld
shll
inc
fcoml
icebp
xor
cmpsb
jae
mov
je
mov
xchg
sub
dec
sub
int
in
jae
aad
ret
jmp
shll
icebp
mov
jp
rol
sub
hlt
mov
or
outsl
cs
iret
sub
xchg
addl
jae
sub
cmp
or
test
sub
mov
lock
jnp
out
out
dec
sbb
jmp
call
lret
mov
clc
sti
inc
in
test
pop
mov
push
cmp
and
cmp
testl
mov
stos
test
fiaddl
jnp
jne
enter
mov
ret
mov
imul
pop
push
fs
lds
or
int
out
test
cmpsb
mov
mov
inc
sarl
pop
push
stc
pop
clc
movsb
popf
adcb
shl
jg
pop
in
fadds
adcb
mov
flds
cld
xchg
out
ret
jge
dec
hlt
cmp
arpl
jmp
jae
push
dec
inc
mov
out
xchg
jae
testl
sub
sti
pop
mov
fucom
xlat
sub
xor
jae
or
xor
lahf
cwtl
sub
xchg
sbbb
in
punpcklbw
enter
adc
sub
ficompl
xchg
lret
jne
and
aam
and
das
into
sbb
cmp
or
test
repz
fadds
inc
mov
dec
fcomp
ret
dec
out
cli
cmc
clc
jb
or
inc
loope
daa
inc
outsl
push
fucomi
popf
cmp
or
insb
fistpll
mov
sub
mov
test
and
cmp
fldt
jge
or
xor
or
ds
leave
dec
xor
fcom
mov
add
jmp
mov
cmp
push
sub
sub
jle
jbe
jno
test
push
negb
dec
ret
mov
inc
fcomps
sbb
pop
loopne
fadds
cs
mov
xchg
mov
cli
inc
or
dec
or
xor
or
pop
mov
adc
call
xchg
adc
in
xchg
insb
shll
pop
xchg
adc
or
pusha
mov
and
shlb
rorb
jp
fmulp
sub
adc
les
pop
aaa
pusha
adc
mov
jo
clc
add
out
sub
jg
mov
cmpsl
and
push
mov
cmp
lret
pushf
xchg
push
inc
or
cmp
shl
popa
cwtl
push
sub
mov
sub
jmp
jle
fwait
mov
in
movsl
das
jbe
jmp
mov
jecxz
movsb
shr
and
stc
or
xor
jmp
shlb
outsb
push
sbb
mov
fwait
mov
pop
jno
lods
das
push
cmpsl
inc
ljmp
pop
jecxz
hlt
mov
call
inc
decb
adc
mov
cmp
cmp
imul
pusha
sbb
subl
jp
lret
insb
inc
ret
fnstsw
shll
pop
js
loop
and
mov
nop
xor
inc
mov
adc
test
adc
add
imul
fcomps
jmp
adc
xlat
fidivl
push
push
out
fdivrs
mov
jl
dec
roll
repz
or
mov
lods
pop
into
or
dec
cmpsb
fucomp
push
out
sbb
adcl
jb
outsl
xlat
icebp
pop
addr16
lods
xchg
icebp
jo
mov
sbb
test
mov
sub
dec
xchg
loope
cmp
mov
jmp
lcall
inc
out
in
push
leave
adc
pop
lahf
add
jb
fs
scas
jo
or
or
and
out
sbb
rcrb
out
ret
enter
sbb
fistpll
fisttpll
push
pop
push
sub
push
stc
arpl
jle
ja
icebp
pusha
cld
mov
imul
mov
jge
aaa
fwait
inc
sbb
cmp
adc
jno
cmp
sub
jg
daa
into
push
dec
mov
push
sahf
jmp
fs
mov
mov
rcr
jnp
daa
mov
dec
xchg
jb
ljmp
out
loop
out
add
pop
mov
test
movsl
clc
movsl
push
xchg
xchg
pop
imul
inc
shlb
inc
pop
test
xchg
cmp
push
insl
pop
adc
daa
jle
xchg
pop
or
jmp
sbb
in
and
xchg
aad
clc
push
les
or
pop
lds
lahf
cs
and
inc
sub
or
cwtl
sbb
fwait
xor
sub
mov
in
syscall
add
xchg
test
inc
xchg
mov
enter
mov
push
cltd
sbb
xchg
aad
mov
outsl
movsl
scas
fsubrp
mov
xor
mov
lcall
imulb
subl
int3
sub
lret
adc
adc
xor
mov
dec
jbe
mov
imul
mov
aaa
jge
mov
rcrb
shll
gs
ret
push
imul
dec
fwait
xor
pop
rorb
imul
hlt
outsl
push
dec
pop
mov
rorb
stos
popf
push
mov
pop
fbld
fimull
stos
mov
pop
int
iret
popa
rcrl
lds
adc
jns
mov
dec
dec
cwtl
cmpsb
xchg
pop
cmp
sahf
movsl
push
xor
jge
jl
cltd
push
cwtl
xchg
or
ja
ret
jno
jnp
ljmp
les
in
jo
scas
add
in
sbb
stc
mov
sahf
mov
sbb
cmpsb
xchg
mov
sbb
inc
sbb
rolb
aas
jp
xchg
or
out
sti
mov
and
mov
push
mov
scas
pop
mov
int3
ret
sbb
mov
mov
dec
push
inc
sbb
scas
xor
pop
xor
jg
lret
pop
lods
adc
or
ret
sub
inc
ds
test
das
mov
xor
cltd
sbb
and
imulb
mov
xlat
ja
sub
pop
icebp
push
movsb
dec
xchg
shl
jbe
xchg
push
mov
jg
mov
xchg
and
and
lds
xor
and
pop
sahf
inc
cltd
jno
sub
mov
mov
cs
and
add
lahf
mov
sub
mov
sbb
js
and
mov
mov
mov
mov
inc
and
and
mov
pushf
mov
or
inc
pushf
pushf
push
ret
push
mov
adc
sub
xchg
imul
pop
lret
dec
or
xor
sub
cmpsl
mov
inc
addb
or
and
mov
dec
push
xchg
dec
pop
mov
pop
out
pop
xchg
shr
shlb
insl
xchg
dec
inc
rolb
pop
fs
xor
mov
or
repnz
jo
jne
mov
test
leave
scas
or
clc
clc
je
jae
pop
inc
pop
sub
cmpsl
mov
mov
hlt
push
inc
add
cmpl
cmpsw
pop
push
pop
fnstenv
pusha
enter
ret
clc
hlt
pop
jno
mov
clc
daa
jb
or
test
xchg
jne
testl
dec
fmuls
ljmp
shld
dec
add
dec
outsl
add
jnp
cmp
imul
neg
cmp
jb
add
nop
jl
push
daa
pop
and
repz
pop
in
repnz
enter
mov
and
pop
dec
mov
lret
cmc
call
cmp
outsl
clc
jp
imul
dec
out
scas
mov
jmp
pop
scas
pop
test
clc
ss
xchg
dec
fwait
and
into
jmp
cs
mov
leave
adc
pop
adc
clc
pop
add
mov
mov
adc
xchg
push
cmp
cmp
outsb
dec
aad
cwtl
test
clc
add
mov
add
pop
sbb
inc
pop
aad
xchg
xchg
shl
xchg
cmc
push
testb
mov
mov
mov
enter
lahf
or
into
xchg
shlb
rorb
or
sub
fstpl
mov
mov
inc
or
fldz
add
ror
inc
mov
mov
js
fiaddl
xchg
aaa
mov
xor
mov
cmpsb
in
jmp
mov
cmp
aaa
xor
nop
repz
mov
sbb
pop
hlt
xchg
ret
cwtl
jmp
rorl
sbb
mov
xchg
imul
dec
pop
and
fs
lcall
stc
mulb
pop
test
sbbb
xchg
dec
jl
ja
into
out
addr16
or
sbb
cltd
cmc
sti
mov
push
out
cmp
outsb
and
cmc
sahf
repz
repz
ss
sub
push
cltd
idivl
add
sbb
dec
cwtl
mov
jmp
mov
sub
popf
cmp
cltd
xchg
cli
push
test
les
lahf
add
or
nop
jmp
push
mov
int3
push
in
mov
xchg
ds
insl
mov
push
or
push
inc
push
imul
clc
sbb
fdivrs
cltd
les
adc
mov
insb
mov
xor
or
dec
and
mov
gs
xchg
lret
cs
push
or
aas
xor
inc
sbb
adc
mov
iret
popf
jno
inc
iret
ss
jl
aam
jae
jnp
cmc
and
gs
mov
aam
push
add
sbbb
rorb
or
dec
call
lods
pop
jmp
lea
push
mov
pushf
loopne
and
mov
loop
rclb
sub
adc
out
insb
mov
imul
inc
out
dec
ja
enter
loope
inc
dec
mov
testb
xlat
fnstcw
pop
jmp
mov
mov
sbb
bound
hlt
js
pop
inc
jne
push
scas
les
flds
ret
jbe,pt
dec
in
adc
jecxz
fsub
cwtl
and
xchg
cmpsb
push
pop
cwtl
and
rclb
push
adc
repnz
lahf
fdivp
pop
push
subb
jb
or
inc
pop
cmp
sbb
add
xor
ljmp
jge
mov
int3
insl
inc
xchg
lea
or
and
leave
jmp
push
loopne
or
lods
pop
cli
in
lods
pop
icebp
imul
add
xchg
sub
jmp
es
lret
sbb
dec
fst
sub
lods
ficompl
insl
dec
cwtl
shlb
jmp
enter
mov
setl
fisubrl
mov
cmp
mov
pop
xchg
pop
int3
data16
adc
ja
into
stos
stos
and
daa
movsl
inc
sbb
cmpl
jge
push
or
pop
nop
scas
int
mov
push
mov
pop
pop
scas
adc
pop
enter
xlat
sub
mov
cli
mov
in
or
lret
xchg
bswap
jns
adc
push
jmp
iret
stos
mov
out
stos
or
data16
sub
jae
mov
mov
xchg
or
movsb
inc
mov
arpl
scas
out
inc
lods
cld
jmp
shlb
int3
jle
test
xor
or
aam
imul
mov
lret
les
pop
inc
dec
inc
adc
adc
or
fnsave
sbb
mov
icebp
loopne
add
bound
xchg
dec
push
imul
jns
add
js
xchg
and
fdivl
dec
jl
sub
inc
das
mov
fiaddl
repnz
jbe
mov
fs
cs
mov
out
in
ret
dec
jo
stos
das
enter
shll
out
push
dec
fstl
xchg
es
pop
mov
xchg
or
mov
loop
xor
push
sbb
mov
lods
or
xchg
mov
fcomps
xchg
ret
aam
call
sub
add
repnz
pushl
jmp
das
sbbb
fwait
mov
or
mov
pop
lds
pop
jge
sub
in
adc
scas
mov
in
nop
int3
dec
fisubrl
in
pop
mov
xchg
shr
out
mov
sub
lods
inc
bswap
xchg
mov
ds
cmp
sub
fwait
dec
add
push
clc
movsb
popf
push
cmp
fstpl
pop
andb
push
orb
and
ljmp
out
sarl
fsubs
loope
sbb
xchg
imul
sbbb
jae
lret
pop
test
and
lahf
dec
fbld
fidivrl
stos
pop
mov
stos
or
subb
or
imul
mov
repnz
mov
out
cmp
testb
outsb
mov
xchg
sbb
mov
stc
pop
mov
xchg
cmc
insl
and
jmp
adc
test
fmuls
popf
mov
es
jb
les
and
inc
jmp
mov
add
cwtl
fwait
mov
pop
cmp
sub
loopne
mov
icebp
pusha
dec
or
mov
pusha
bound
mov
jl
jecxz
pop
mov
test
subb
out
jo
and
repz
jecxz
cmp
jmp
sbb
lcall
je
cmc
jmp
dec
pop
mov
sub
out
sbb
fstl
cmc
sti
icebp
mov
out
mov
pop
inc
dec
call
or
or
js
es
repz
rcl
icebp
addr16
dec
xchg
sbb
call
dec
repnz
jo
or
cmp
subl
cmpsl
xchg
fbld
inc
test
pop
popf
xor
dec
push
dec
dec
aam
mov
inc
xor
in
imul
fisubl
sahf
mov
fwait
inc
scas
push
dec
mov
out
shll
inc
outsb
add
inc
shrl
adc
sbb
daa
int3
test
push
data16
fcompl
sahf
mov
dec
fildl
stos
sbb
and
popa
fmuls
sarb
cmp
stc
mov
int3
sti
imul
stos
mov
pusha
bound
popf
xlat
dec
mov
inc
lret
scas
mov
xor
adc
xchg
enter
mov
out
and
jo
and
shl
inc
fdivs
out
incl
inc
jle
lds
inc
inc
je
aaa
sbb
pop
sub
adc
shll
sub
pop
pop
push
jl
faddl
mov
les
not
jmp
xchg
jp
aad
sbb
repz
imul
pop
cwtl
in
sub
xor
rol
mull
pop
sub
mov
fsubp
xor
sbb
add
dec
ss
movsb
jo
dec
fistpl
cmpsb
push
sbb
sub
cmp
out
test
lds
inc
pop
idivb
xchg
and
sub
mov
out
loopne
rcr
pop
je
jns
mov
sbb
adc
sbb
aam
jb
icebp
rcl
xchg
add
push
jmp
inc
mov
xorl
in
sbbl
inc
dec
ja
and
xchg
ss
jecxz
sub
adc
jp
movsl
enter
mov
jne
movsb
fiaddl
and
pop
sahf
repnz
push
pop
fsubrp
or
subl
ja
xchg
out
adc
out
lahf
stc
lret
out
popa
jg
test
hlt
mov
jge
sub
out
xchg
jne
ret
cltd
in
or
pop
or
repz
push
andb
shll
jo,pn
jne
pop
out
leave
pop
in
dec
sar
lds
cmp
fwait
mov
dec
sbb
shr
push
negb
sbb
add
pop
test
jbe
mov
out
push
pop
push
jp
or
test
rcrb
fs
mov
cmp
and
mov
dec
adc
adc
mov
icebp
mov
jne
cmp
lret
cwtl
xchg
adc
loopne
lods
daa
sbb
fidivrl
cwtl
push
mov
ds
aam
push
pop
inc
rcrl
cltd
test
sbb
xor
pop
lds
mov
jmp
insb
fs
std
daa
and
ror
out
mov
mov
lods
cmpsl
pop
loop
jb
and
or
or
fsubrs
fbstp
xchg
adc
sbb
xchg
add
cld
mov
pushl
cld
out
enter
rcll
std
push
sub
xchg
inc
outsb
fldcw
dec
and
sbb
adc
pop
add
leave
aam
or
fnstsw
push
dec
and
adc
loope
mull
xchg
cmpsb
jp
lods
xor
jg
add
mov
loope
dec
in
pop
testl
insb
inc
dec
jmp
int
outsb
push
cmc
dec
push
lea
mov
mov
fcoml
popf
repz
xchg
add
dec
fnstsw
jle
addl
call
mov
pushf
jle
int
leave
sbb
sahf
sahf
std
pop
mov
mov
xchg
lahf
aaa
add
push
dec
inc
aas
les
pop
les
test
pop
push
leave
movsl
or
insb
mov
mov
push
clc
test
js
inc
cmp
dec
inc
stc
mov
int
sub
sahf
mov
fdivs
cltd
hlt
sarl
test
jmp
popf
or
xchg
xchg
loopne
mov
shrl
rcrb
jmp
push
xchg
fmuls
sub
mov
in
popf
enter
test
fwait
and
repz
push
sbb
xchg
filds
sti
xchg
mov
sbb
in
stos
or
or
dec
lret
sbb
icebp
cmp
sbb
sahf
inc
jecxz
fsubrs
push
stos
inc
testl
xchg
lds
xor
bound
cmp
mov
fwait
mov
enter
lock
jp
lods
in
out
ds
dec
xchg
cmpsl
or
xor
jge
loopne
loopne
shrl
mov
mov
ljmp
jae
and
nop
pop
jecxz
das
mov
scas
sub
jecxz
add
jg
cmp
sti
mov
mov
lea
syscall
test
ret
cmpsb
clc
adc
stos
sub
movsb
xchg
jne,pt
pop
shll
adc
pop
xchg
sbb
xor
and
mov
mov
inc
sub
xchg
xchg
sbb
or
sub
int
in
jge
adc
in
test
xor
xorl
mov
dec
inc
nop
sbb
sbb
push
push
outsb
iret
lods
add
cli
in
sbb
inc
imul
pop
pop
ret
xor
adc
fnstsw
insb
xor
adc
xor
mov
xchg
sub
sbb
test
orb
xchg
cmp
loop
push
jmp
pop
cmpsb
pop
mov
ret
inc
or
dec
ja
xchg
jmp
dec
xchg
lods
xor
adc
pop
aaa
and
push
push
mov
rcrl
fidivrs
testb
cwtl
pushf
enter
push
test
test
push
dec
sarb
lret
out
stos
mov
inc
xchg
dec
pop
jno
inc
jmp
frstor
push
addr16
lods
loopne
sub
xor
cmp
push
xor
sti
xchg
pushf
add
jge
xchg
pop
das
cmp
mov
gs
fwait
shl
es
icebp
fldcw
enter
inc
jp
push
out
cs
jnp
pfrcpit1
sbb
adc
mov
roll
and
jmp
lds
mov
repnz
mov
add
subl
xchg
mov
inc
ret
stos
or
andw
adc
push
ret
enter
lret
es
xorl
mov
insl
push
lods
pop
pop
and
or
pop
mov
mov
xor
std
mov
lcall
mov
push
rcr
call
xor
or
scas
xchg
dec
cmp
xchg
loop
sub
xchg
out
test
pushf
loop
mov
mov
mov
aaa
or
movl
jl
mov
dec
int
or
lock
es
je
and
dec
or
mov
pop
jmp
jmp
flds
adc
les
std
test
xchg
arpl
aaa
lds
pusha
mov
iret
mov
or
ja
adc
in
inc
mov
ret
dec
out
adc
sbb
imul
xorl
pusha
push
jnp
pop
call
lcall
jg
fldt
or
xchg
add
in
push
mov
pop
jmp
mov
aam
push
dec
jecxz
out
dec
jecxz
add
leave
loope
outsl
icebp
lahf
xor
loopne
imul
or
nop
adc
shrb
out
jae
inc
sbb
es
and
or
repnz
mov
lods
mov
pop
bswap
in
mov
push
cltd
addr16
xchg
fwait
pop
test
stos
cmc
scas
xor
insl
dec
jmp
push
jecxz
shrb
inc
inc
jb
lods
mov
mov
aas
inc
xchg
insb
adc
and
sub
dec
jg
sbb
cmp
push
aaa
aam
xor
shl
push
add
add
fldt
fucomp
adc
popf
lock
xchg
test
in
jo
mov
test
das
xchg
adc
mov
inc
test
std
dec
pop
push
das
insb
mov
mov
sbb
imul
fs
leave
and
sbb
sti
leave
loop
outsb
lret
rcrb
in
sub
sub
arpl
mov
mov
aaa
out
les
subb
aad
outsl
dec
sub
sub
outsb
lods
sub
dec
pop
lahf
clc
ret
inc
lret
in
loope
mov
fucomip
aaa
je
ret
dec
fistpll
in
rclb
adc
pop
push
in
icebp
mov
pop
aam
pop
call
loopne
add
dec
adc
test
add
or
dec
xchg
xchg
sub
mov
cmpsw
in
mov
adc
aam
lods
in
aam
ret
in
xor
cwtl
ret
das
inc
sbb
arpl
test
cld
fdivs
mov
aad
in
lret
or
fisubs
sbb
or
inc
or
out
shrl
imul
pop
sti
xorb
xchg
sub
stos
cmp
mov
test
divb
test
cmpsb
xor
arpl
insl
dec
stos
cmpsl
ja
sbb
push
sub
repnz
iret
xchg
sbbb
cmp
jb
test
dec
dec
enter
subb
xchg
or
ljmp
popf
or
mov
loopne
scas
adc
int3
lea
sbb
arpl
cwtl
movsb
pop
into
pop
rclb
push
inc
pop
jge
pop
mov
mov
sub
leave
in
testl
int
mov
pop
std
fucomip
fmuls
push
push
loop
jb
leave
push
xor
jne
imul
icebp
fwait
or
lds
aad
ja
pop
mov
xchg
and
and
in
sbb
dec
outsl
cli
sahf
sbb
dec
outsb
cmp
push
in
ret
inc
stos
ja
inc
int3
jl
lret
out
mov
mov
inc
inc
xor
ret
ljmp
adc
fs
inc
adc
sti
jmp
sub
sub
dec
lret
jae
mov
ljmp
mov
outsb
loope
pop
leave
iret
lcall
push
fisubs
pop
jecxz
xor
movb
pop
icebp
enter
dec
dec
cs
push
test
xor
mov
or
mov
push
jmp
xor
and
mov
lds
push
lods
cmp
xor
mov
cmp
rorb
sbb
pop
sub
and
sub
lret
icebp
fmul
in
inc
dec
mov
jp
mov
pusha
fisubl
add
mov
ljmp
xor
sbb
push
dec
xor
inc
shlb
mov
xchg
dec
cwtl
enter
rorb
loopne
bound
xor
xor
cltd
ja
push
adc
mov
inc
mov
jne
mov
pop
mov
xchg
mov
or
cmp
inc
xor
mov
adc
cmp
addr16
dec
and
xor
shlb
in
fidivrl
add
fldcw
dec
shll
std
out
xchg
jmp
popf
cmp
call
xor
cmp
mov
test
or
adc
rcrb
mov
icebp
fs
ret
jl
and
mov
lock
rol
jo
mov
push
sbb
cmc
stos
dec
loope
and
popa
inc
jae
or
or
in
cli
xlat
subl
mov
loop
pop
mov
mov
das
jg
das
aam
pop
mov
pop
call
sub
adc
jne
int3
sbb
cmc
mov
aas
add
xor
lods
xor
mov
pop
mov
cmp
xchg
pop
mov
or
or
adcl
mov
loopne
aas
cmp
stos
xchg
cmc
out
push
pusha
subb
cmpxchg
jge
in
or
shlb
dec
jb
push
ljmp
mov
lret
push
shrb
jnp
test
in
mov
aas
cld
push
cmpsl
loop
test
movsl
in
je
das
in
xchg
lods
loopne
mov
sbb
jmp
pop
imul
scas
xchg
xchg
and
outsb
pop
fs
xchg
dec
mov
lret
add
lcall
pop
repnz
cmp
dec
xchg
insb
orl
jo
adc
out
push
mov
push
mov
ja
in
icebp
xor
ret
stos
fstpl
lods
test
mov
jns
mov
nop
rclb
mov
ds
fstpt
lods
jb
insl
add
lods
test
sub
sub
sbb
leave
or
mov
ss
hlt
push
jb
fisttpl
and
jno
test
lods
xor
icebp
xchg
int3
pushf
add
pop
sub
fs
repnz
das
and
testl
mov
cmp
repnz
mov
sub
icebp
and
jecxz
mov
mov
call
daa
aaa
popa
cmp
insb
imul
sbb
outsl
mov
push
jnp
shll
push
xlat
jbe
jae
insl
mov
dec
push
push
lock
and
testl
insl
testb
cmp
rcll
popf
sbb
and
push
leave
mov
xchg
mov
pop
outsb
outsl
push
imul
movsl
repz
sub
imul
iret
ss
dec
dec
repnz
sub
cmp
sub
into
outsl
dec
ja
popf
pushf
clc
xor
mov
loopne
popa
xor
shrb
push
pop
jmp
sub
lahf
jmp
or
ljmp
cmp
call
fstpl
roll
mov
ja
test
xchg
xchg
dec
les
les
inc
aam
xchg
aad
xchg
in
push
in
cmpsl
lods
jmp
ret
lret
sbb
jno
lret
xor
jle
pop
insl
int3
push
adc
push
push
mov
test
call
push
sub
imulb
inc
sub
ret
imul
mov
xor
enter
dec
inc
mov
xchg
mov
inc
cld
ja
test
cmp
cmp
mov
in
pop
pop
lods
loopne
mov
mov
in
jg
aaa
cld
or
and
leave
xorl
push
aam
mov
xchg
cmpxchg
ret
sbb
and
incl
push
sbb
loope
jo
int3
sbb
aam
dec
dec
push
movsb
sbb
sbb
add
aam
fdivl
sbb
pop
lock
ror
sub
lods
push
fistpll
andb
repnz
xchg
cmc
jnp
lret
mov
loopne
leave
mov
inc
add
sub
cmpsl
das
sbb
test
fsubrl
adc
mov
xor
and
adc
imul
cmpl
sbb
lods
lods
ret
punpckhbw
in
je
loopne
fdivl
jge
mov
jmp
fcoml
ret
fdivs
test
repz
push
mov
fcoml
pushl
gs
xchg
int
ret
in
sub
mov
arpl
and
dec
dec
push
mov
test
fldenv
sarb
test
inc
shlb
mov
xchg
sub
inc
jg
jne
dec
sarl
repz
popf
xlat
inc
in
js
scas
cwtl
mov
divl
pop
xlat
mov
xor
imul
xchg
rorb
push
dec
loopne
nop
mov
ret
and
mov
sbb
rolb
