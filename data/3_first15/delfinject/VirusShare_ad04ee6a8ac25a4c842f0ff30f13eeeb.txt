add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
test
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadds
add
add
add
add
add
inc
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
addl
add
add
add
add
jae
add
add
inc
add
das
add
inc
inc
add
add
jo
push
push
add
aaa
add
aaa
add
das
add
cmp
add
add
push
add
in
jmp
cmc
repnz
fstp
add
rol
nop
nop
nop
add
push
add
cmp
add
es
dec
add
add
push
add
xchg
xchg
add
test
add
mov
ja
jb
push
add
aaa
add
es
push
add
mov
aam
in
call
cli
add
cli
add
cli
add
cli
add
stc
testl
lret
mov
add
jno
add
push
add
lods
lods
add
mov
call
rolb
fcmovnu
add
loope
add
call
filds
stos
stos
add
push
add
inc
inc
add
rol
mov
mov
jmp
loop
imul
add
imul
add
imul
add
stc
testl
out
loopne
call
sahf
add
rcrb
add
mov
add
mov
add
mov
ret
add
int3
int3
add
aam
add
fcmovnu
add
call
add
jmp
loop
xchg
outsb
outsb
add
das
add
inc
add
rcl
add
mov
add
rol
ljmp
add
loop
add
xor
add
les
add
sahf
addb
jl
add
pushf
popf
add
mov
stos
add
mov
add
mov
ret
add
int3
int3
add
aam
add
loope
add
std
std
add
add
add
ljmp
sub
jo
add
rcl
add
mov
add
rol
ljmp
add
fidivs
add
cltd
add
push
cltd
add
push
cltd
add
das
lcall
cld
cmpsl
test
lcall
cltd
add
mov
stos
add
mov
add
mov
ret
add
lret
lret
call
add
in
fildl
jb
push
add
es
add
add
rcl
add
rol
xlat
fcomp
add
add
add
out
loopne
leave
fidivs
add
mov
sbb
add
sub
in
popf
add
mov
add
cmpsl
cmpsb
add
sahf
sahf
add
cltd
cltd
add
mov
cmpsb
add
mov
add
mov
ret
add
stc
stc
add
aaa
aaa
add
jae
rcl
rolb
lret
lret
lret
add
loop
add
fcmovnu
add
add
ljmp
sbb
inc
add
mov
add
jnp
push
add
ret
mov
mov
jmp
popf
add
cltd
cltd
add
flds
dec
icebp
add
int
add
loope
add
ljmp
cmp
cmp
rcl
rolb
lret
lret
lret
add
loop
add
add
add
out
add
fildll
add
mov
add
cmpsl
mov
dec
into
add
ret
mov
mov
jmp
flds
out
add
mov
add
mov
add
out
add
hlt
incb
std
cld
cld
add
cld
cld
add
cld
cld
add
sub
add
add
rcl
roll
into
into
into
add
out
add
fstp
add
add
out
add
fildll
add
jae
sub
inc
add
cltd
add
les
add
lret
lret
ret
pushl
mov
add
cmpsl
mov
mov
jne
mov
jne
aad
mov
clc
incl
sti
clc
clc
add
out
in
add
out
in
add
out
in
add
div
add
stos
stos
add
das
add
add
rcl
rolb
rcl
rolb
out
out
in
jmp
fidivrs
add
jae
dec
call
push
add
test
leave
mov
aad
dec
int3
add
lret
lret
ret
call
rolb
push
incb
movb
add
fidivrs
add
repnz
repnz
jecxz
add
jecxz
add
jecxz
add
jmp
mov
inc
aaa
aaa
add
add
rcl
rolb
rcl
roll
jmp
jecxz
add
loopne
add
fnsave
add
xchg
add
xchg
add
roll
xor
nop
add
int3
int3
add
int3
int3
add
int3
int3
add
lret
lret
xlat
xlat
add
clc
incl
test
add
lods
add
rcr
add
loope
add
mov
ret
lret
clc
aam
aad
scas
add
aaa
add
add
aam
aam
rcl
rolb
ljmp
add
loopne
add
lods
add
iret
mov
add
stc
add
stc
add
nop
repnz
lret
lret
lret
lret
lret
lret
xlat
xlat
add
call
incb
out
add
mov
jno
fstl
add
mov
jmp
mov
mov
lret
test
add
aaa
add
add
aam
aam
aam
flds
in
out
lock
jecxz
add
loopne
add
rcrb
add
nop
repnz
nop
repnz
stc
add
nop
repnz
mov
std
lret
ret
loope
add
hlt
testb
std
std
add
add
add
cld
incl
out
add
int
add
flds
out
add
loope
add
sahf
popf
add
sahf
sahf
add
stos
stos
add
mov
add
ret
lret
add
inc
add
aam
add
ror
add
mov
arpl
icebp
loopne
add
int
add
int3
cmpsb
add
mov
add
lods
stc
add
add
mov
add
hlt
testb
int
add
int
add
flds
ljmp
popf
add
cltd
cltd
add
mov
stos
add
mov
add
jae
add
flds
fld
fwait
add
xchg
add
mov
add
loopne
add
int3
xchg
add
int
add
int3
xchg
add
int3
xchg
add
int
add
leave
lahf
add
popf
popf
add
repnz
add
add
call
movb
ret
pushl
mov
jmp
sahf
add
cltd
cltd
add
mov
popf
add
push
add
fcomp
add
les
add
test
add
loopne
add
leave
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
rorb
mov
add
std
std
add
fcmovnu
add
rcl
add
lret
lret
ret
mov
mov
jmp
sahf
add
pushf
popf
add
addb
xlat
fcomp
add
les
add
lods
js
icebp
loopne
add
shlb
ret
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jg
mov
mov
add
stc
testl
call
xlat
add
rcl
add
lret
lret
ret
mov
mov
ljmp
xchg
jl
push
add
fcomp
add
mov
out
xchg
add
add
fidivrs
add
mov
fs
mov
push
mov
push
mov
push
mov
stos
stos
add
cld
incb
stc
testl
jmp
jecxz
call
xlat
add
rcl
add
int3
int3
add
mov
mov
xchg
xchg
outsb
outsb
add
fcomp
add
rcl
add
int3
roll
cld
fnsave
add
test
ds
scas
ds
scas
ds
scas
ds
scas
ds
mov
add
mov
pop
add
mov
mov
test
fadd
lret
add
loopne
add
call
jecxz
fcmovnu
add
int3
int3
add
mov
add
lcall
flds
rcl
roll
mov
lret
not
lods
add
scas
ds
ljmp
icebp
loopne
add
lods
add
lret
hlt
mov
arpl
scas
ds
test
sub
in
popf
das
add
cmpb
mov
mov
add
lcall
flds
xlat
fcomp
add
loop
add
stc
std
add
fnsave
add
incl
clc
cli
cld
add
idiv
add
repz
add
repz
add
in
repnz
out
add
add
fcom
add
shll
add
mov
dec
add
popf
das
add
popf
das
add
das
das
add
cmp
add
dec
add
add
jmp
add
ljmp
add
mov
add
mov
add
ljmp
cmc
repnz
out
lock
out
lock
in
in
add
out
add
in
add
loope
add
fsubp
add
fsubp
add
fcomp
add
iret
mov
add
nop
nop
add
add
add
fcmovu
add
fstp
add
loop
add
flds
movsl
ja
add
ja
add
jle
add
mov
mov
fcmovb
movl
in
fildl
in
fildl
loop
loop
fldl
fcmovu
fiaddl
xlat
fcomp
add
flds
fildl
rol
add
add
add
lret
lret
add
fstp
add
in
add
iret
mov
add
jl
add
jle
add
jle
add
test
add
xchg
xchg
add
mov
flds
ljmp
add
jmp
out
movsl
test
dec
add
out
lock
in
repnz
lret
mov
jg
dec
xchg
add
ret
cwtl
add
mov
add
mov
add
test
add
pushf
xchg
add
pushf
xchg
add
xchg
xchg
add
xchg
xchg
add
xchg
xchg
add
add
div
add
hlt
testb
out
out
add
out
out
add
es
add
add
lret
enter
jmp
idiv
std
add
out
in
add
les
inc
jg
dec
xchg
add
int
add
int
add
int
add
into
stos
add
into
stos
add
int
add
int
add
int
add
lds
add
ror
add
fcmovnu
add
fcmovnu
add
loope
add
out
out
add
ljmp
pop
pop
pop
add
lret
enter
in
add
fnsave
add
ret
dec
xchg
add
int
add
int
add
int
add
int
add
into
stos
add
into
stos
add
int
add
int
add
int
add
lret
ret
lret
ret
mov
fiaddl
call
out
add
stc
stc
add
add
add
es
add
add
lret
enter
cmpsl
add
mov
jg
dec
xchg
add
int
add
int
add
int
add
into
stos
add
into
stos
add
int
add
int
add
int
add
int
add
lret
ret
into
leave
add
pop
pop
add
iret
iret
add
hlt
testb
std
std
add
fstp
add
jae
int3
lret
enter
roll
int3
lret
enter
mov
add
lds
add
mov
add
shrb
jmp
mov
jmp
mov
lock
add
into
leave
add
mov
nop
add
lret
lret
add
ljmp
flds
lret
lret
lret
add
into
into
add
lret
lret
add
lret
lret
add
lret
lret
add
lret
lret
add
lret
lret
add
rcl
add
lret
lret
add
into
into
add
lret
lret
add
lret
lret
add
lret
lret
add
lret
lret
add
jg
push
pop
sarb
add
rolb
xadd
add
addb
jecxz
add
icebp
addb
icebp
addb
rolb
add
addb
add
add
addb
add
add
add
add
jo
add
jg
add
aas
nop
add
aas
addb
jg
add
incl
add
jg
add
jg
add
jg
add
jg
shlb
add
add
sbb
add
push
add
and
add
add
adc
add
add
add
adc
add
add
add
add
mov
add
add
jne
add
jbe
add
jbe
add
add
xor
add
add
push
jbe
add
add
jno
add
jg
add
add
add
lea
add
add
add
add
add
add
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
add
ja
add
add
add
ja
add
add
add
ja
add
add
add
ja
add
add
add
add
add
add
bound
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
shll
add
je
add
add
je
add
add
add
jne
add
add
add
jb
add
jne
add
add
add
jne
add
add
add
jne
add
jb
add
add
jb
add
add
shlb
add
add
fdivs
add
add
loopne
add
ja
add
call
add
add
jb
add
jb
add
jae
add
jae
add
jae
add
jne
add
jae
add
jne
add
jae
add
jne
add
jae
add
jne
add
jae
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
imul
insb
add
jb
gs
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
gs
xor
cs
insb
add
gs
insb
xor
cs
insb
add
insb
ja
jo
cs
insb
add
outsl
arpl
xor
fs
insb
add
outsb
imul
insb
add
gs
xor
inc
dec
dec
add
jb
gs
xor
cs
insb
add
jb
gs
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
push
inc
push
xor
cs
dec
dec
add
dec
inc
inc
push
xor
cs
insb
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
jns
je
insl
inc
imul
jns
add
add
gs
je
inc
imul
jb
je
inc
imul
outsl
jae
dec
popa
outsb
fs
add
add
imul
jae
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
insb
jae
gs
popa
insb
jne
add
add
jne
gs
gs
outsb
je
add
push
gs
dec
jne
inc
add
add
imul
jae
dec
gs
outsl
jb
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
gs
add
push
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
inc
push
je
jb
jne
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsl
arpl
outsb
jo
je
add
inc
gs
imul
push
jo
arpl
js
add
add
fs
xor
inc
imul
push
je
jb
push
gs
imul
push
jne
jb
push
gs
imul
imul
dec
inc
push
gs
outsl
insl
jo
gs
inc
jb
insl
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
add
add
add
jp
add
adc
add
add
add
add
add
add
addr16
std
mov
les
in
decl
int3
sub
mov
jae
sbb
sub
push
fbstp
mov
incl
cmp
jb
and
jl
loopne
call
xor
stc
sub
sbbl
mov
jns
lahf
push
inc
cmpsb
fiadds
rolb
loope
int3
jbe
int
mov
or
xchg
jb
out
fdivrp
decl
stc
sahf
dec
sti
cltd
jo
stos
std
lcall
cmp
push
lods
clc
js
jmp
inc
mov
in
push
std
call
jbe
inc
stos
gs
xor
std
int3
mov
jbe
shll
mov
mov
in
stos
cld
ljmp
ret
or
sub
add
jbe
mov
add
int
jb
adc
add
adc
je
jne
lods
call
fsubr
pushl
sti
pop
dec
mov
test
sti
addr16
rolb
idiv
mov
popf
add
cwtl
push
sti
decl
inc
sti
ds
jle
jmp
scas
out
adc
inc
cli
decl
lcall
mov
jns
xchg
sbb
xor
jno
cmp
mov
cmpsl
stos
js
sub
pushl
cmp
daa
pusha
iret
cld
mov
scas
test
clc
cmp
mov
test
rcll
std
push
bound
pushl
aam
add
inc
jp
jns
shlb
stos
test
xchg
sbb
pushf
out
add
lret
fnstsw
mov
and
push
fwait
pop
add
roll
les
movsl
andl
jb
add
add
add
in
xlat
lods
inc
adc
idiv
and
jge
hlt
rcrl
leave
jp
hlt
stc
mov
sbb
lock
jp
or
or
cmpsb
outsb
mov
sti
loopne
xchg
je
fs
pushl
idiv
ja
sbb
ljmp
test
jecxz
lods
aad
cld
loop
mov
dec
sbb
or
aad
movsl
add
pop
bound
push
inc
sbb
push
jno
lock
mov
jne
add
cmc
add
or
inc
xchg
pusha
test
mov
mov
mov
je
xchg
or
add
js
cmc
mov
hlt
mov
aad
jne
mov
aas
popf
jmp
adc
stos
sti
lds
xor
sub
jbe
xchg
xor
das
in
sbb
dec
pop
xor
dec
pop
rolb
repnz
ficomps
jb
lods
mov
lods
or
mov
in
divl
mov
add
jle
xor
add
push
cld
sbb
mov
icebp
xchg
pop
mov
clc
mov
mov
xchg
pop
fstpt
stos
adc
je
cmc
jl
dec
stc
aas
mov
loope
adc
sub
hlt
jl
repz
mov
shrl
cltd
les
sub
xchg
lea
clc
stc
cld
jmp
addl
into
ret
int3
push
mov
test
adc
push
je
movsb
mov
int3
inc
mov
repz
stos
arpl
movsl
jo
scas
jl
jbe
push
or
repnz
mov
orb
stc
subb
mov
sti
or
xchg
push
incl
add
cmp
sub
jl
mov
xchg
mull
mov
call
out
insb
xor
test
xchg
mov
sub
jne
jp
pop
out
adc
mov
lea
cmp
add
mov
insl
push
cli
in
in
mov
mov
mov
add
push
scas
je
into
loope
sbb
mov
add
push
adc
pusha
in
jmp
sub
addr16
jg
push
mov
mov
aaa
cwtl
cltd
in
and
fwait
add
data16
cmp
adc
push
out
addb
xor
stos
inc
int3
outsb
adc
in
fstpl
push
add
xor
jbe
dec
pop
cli
cli
jp
mov
ja
outsl
lcall
mov
sub
repz
out
or
jo
je
add
pop
xchg
cld
leave
out
and
into
pop
cmp
cmp
xchg
pop
pop
adc
inc
xchg
sub
push
mov
das
notl
jbe
test
sahf
repz
call
call
mov
in
movsl
lahf
out
clc
scas
loop
cmpsl
and
je
rcl
add
adc
sub
loop
sahf
andb
push
sbb
jl
inc
ljmp
cmp
sub
arpl
cltd
idiv
mov
adc
push
lods
add
cltd
mov
scas
cmp
lods
fldt
push
jecxz
aaa
mul
aam
dec
loope
cmpsl
ljmp
pop
int
ss
out
loope
sub
lret
xchg
and
push
push
push
mov
mov
addr16
je
mov
mov
mov
jmp
pop
or
add
in
sub
pop
mov
call
out
outsb
mov
jmp
daa
mov
mov
push
cld
arpl
scas
repnz
insb
cmp
out
addl
mov
xlat
lds
jmp
mull
movhps
fwait
lcall
ljmp
ret
xchg
xchg
insl
or
xchg
push
jne
sbb
sub
add
sbb
cmp
das
pop
js
sbb
or
and
jbe
sbb
out
jo
cmp
cmp
in
sti
and
outsb
punpcklwd
push
jl
movsl
adc
adc
pushl
outsb
mov
dec
push
push
push
mov
mov
int3
push
jmp
jl
andl
push
fldt
jno
leave
call
mov
leave
sub
je
or
inc
stc
repnz
cs
lahf
bswap
xor
ds
adc
out
mov
jl
cs
xor
push
jno
inc
bound
pop
rorb
sbb
and
leave
adc
sbb
adc
aas
pop
call
jl
mov
out
iret
mov
clc
dec
cmp
mov
cli
clc
cmp
or
push
xor
and
aaa
icebp
arpl
aaa
addr16
xchg
pop
mov
jg
xchg
in
xor
mov
cld
icebp
mov
fldenv
fimull
cmpsl
adc
add
insb
lds
aas
adc
xchg
call
and
jecxz
into
dec
neg
je
sti
in
out
or
jne
cmp
nop
push
adcb
or
ja
gs
sbb
and
cmpsl
jne
inc
stos
es
lods
loop
in
mov
xchg
mov
jnp
in
lea
loope
xor
cmpl
lods
jno
cmc
je
fsubr
jecxz
jbe
dec
lock
push
es
lods
pop
jnp
adc
jg
jmp
in
stos
sbb
aas
fucomp
lahf
icebp
lret
mov
insb
mov
sub
testb
mov
loope
insb
push
fnstsw
popf
rcl
jl
mov
mov
jl
adcb
les
int3
xlat
sbb
or
cld
aad
xlat
stc
loope
lds
sbb
xchg
adc
rorl
out
jb
sti
mov
xor
mov
add
pop
lds
push
mov
and
pop
mov
pop
sub
mov
xor
xchg
xlat
mov
dec
fisubrl
pop
jnp
loop
stc
out
sahf
push
fists
xor
cmp
gs
out
dec
or
jnp
test
mov
adc
pop
sub
sub
test
scas
adc
popf
jo
dec
nop
lock
inc
insb
pop
xchg
dec
iret
test
scas
cmpb
aam
incl
roll
aam
cmp
rcl
ja
xchg
jecxz
pop
jge
test
dec
push
mov
sbb
je
cmp
lods
sub
mov
dec
nop
xchg
adc
xchg
imul
xchg
popf
inc
movsl
dec
pop
and
push
daa
mov
pop
cmp
loop
test
inc
fwait
sti
or
sbb
les
inc
sbb
clc
pop
xor
lret
mov
dec
test
lea
roll
clc
inc
add
mov
mov
pop
in
mov
xor
pusha
cld
xor
clc
push
mov
jbe
ljmp
addb
imul
mov
push
dec
inc
mov
mov
cwtl
xlat
cli
mov
rorb
add
outsb
enter
cmp
jbe,pt
xorb
fcmovnbe
cmc
cmp
xchg
jp
jae
out
mov
imul
xchg
mov
mov
ret
xor
clc
add
out
mov
push
or
int3
xor
xor
mov
leave
rorb
out
scas
fiaddl
or
ss
lret
cmpsl
jmp
push
xchg
lahf
pop
stc
out
dec
cmp
cmc
mov
shl
mov
dec
adcl
xor
int3
jns
neg
dec
enter
shlb
pop
loope
jg
mov
leave
lcall
mov
fistl
mov
lcall
andb
ficompl
outsl
aad
stc
pushf
add
std
stos
pop
lds
ror
pop
repnz
push
fisubl
ja
mov
pusha
dec
and
or
das
rorl
aas
push
hlt
cmp
xchg
out
imul
std
gs
and
in
xor
ds
jmp
jae
popa
dec
jbe
mov
mov
into
leave
jne
icebp
adc
es
pop
jno
shll
dec
jp
cmpsl
lcall
push
pop
shll
xchg
iret
repz
add
sub
mov
pop
sbb
out
xor
push
je
sub
sbb
fs
cli
movsl
sbb
mov
mov
lret
pop
mov
push
add
sbb
sahf
fists
sbb
insl
cli
add
sarl
xchg
pushf
movsl
jecxz
imull
iret
push
push
bound
ret
adc
mov
aad
pop
cmp
or
mov
aam
push
dec
or
mov
pop
fldl
aad
mov
aaa
xchg
xor
inc
xchg
sbbl
push
or
pop
xor
scas
jae
xor
pop
or
xlat
mov
cwtl
jbe
jno
push
mov
push
pop
lea
xor
xor
and
sub
mov
sti
inc
inc
movsl
shr
stos
xchg
push
xchg
pop
xchg
hlt
fdivs
inc
ret
jecxz
xor
mov
xor
xor
sub
xlat
inc
xor
or
popa
xchg
sarl
mov
xchg
mov
xchg
fadds
mov
inc
idiv
jp
mov
pop
aad
fadds
cmpsl
test
cli
mov
inc
xchg
lock
inc
jbe
jne
hlt
ljmp
fs
mov
or
imul
mov
pop
sbb
push
mov
xchg
outsl
mov
mov
lock
xor
andl
js
lahf
inc
pop
mov
fists
rolb
bound
dec
stos
gs
jmp
in
sbb
aad
jl
push
jge
dec
pop
test
ds
dec
pop
cli
imul
xchg
and
imul
in
mov
or
mov
cs
sbb
dec
fwait
sub
fsubrp
xchg
test
cmp
push
pop
out
cli
ds
push
xor
int3
fdivs
or
or
mov
pop
ret
lret
into
pop
mov
ret
ljmp
iret
mov
bound
movsb
mov
sub
push
xlat
dec
pop
nop
in
stos
nop
xor
pop
loope
out
and
mov
pushf
les
sbb
je
je
cmp
ja
mov
lods
aam
mul
sub
fidivs
fldenv
dec
add
lcall
je
mov
fistpll
mov
jno
jb
push
jbe
dec
xchg
fiadds
call
and
mov
aas
cmp
fimuls
sti
sub
movsb
xchg
jns
xchg
jbe
incb
and
dec
repz
lahf
push
push
mov
arpl
xor
push
adc
testb
aaa
sub
add
clc
or
jecxz
sar
mov
in
xor
repz
and
iret
pop
int
stos
mov
mov
mov
jle
mov
fucomi
in
mov
lds
add
xor
pop
scas
dec
repz
jge
inc
adc
iret
movsl
jb
jmp
jb
dec
rol
jg
pop
xchg
mov
cmpsb
ja
stc
popa
xchg
jne
loope
and
icebp
pop
fwait
sub
or
mov
cmpsb
lods
stc
jg
movsw
sub
jbe
lahf
pop
sbb
jnp
lds
rorl
push
cmp
mov
cld
aad
cltd
jmp
mov
xchg
das
mov
or
movsl
loopne
gs
mov
bound
add
adc
adc
dec
dec
add
xchg
jl
cli
xorb
adc
cltd
mov
mov
xchg
or
sub
adc
cltd
repnz
push
enter
inc
inc
or
push
sub
lds
aam
cmp
repz
push
or
pop
cld
inc
lea
mov
fdivrl
inc
xor
mov
test
cli
loopne
xchg
cmc
fadds
xchg
movsb
cmpsb
outsl
xchg
int3
jno
out
fistpll
iret
vpsraw
xchg
xor
mov
pop
mov
xchg
xchg
jae
sahf
test
jbe
push
push
enter
xchg
add
xlat
out
andl
xor
mov
mov
mov
call
lcall
mov
mov
mov
fcoms
sub
sub
lds
jb
mov
inc
sub
mov
adc
mov
jo
out
repz
int
sbb
out
mov
xor
mov
and
push
pop
fwait
in
shr
jne
xor
es
and
iret
fstl
fbstp
les
shrb
jne
cmp
mov
les
into
fstpl
call
iret
test
pop
clc
pusha
repz
dec
push
stos
aas
push
fimull
mov
push
pop
pop
push
bound
lods
xor
jmp
nop
add
or
imul
jne
mov
mov
xchg
fcompl
jmp
enter
mov
cmp
movsl
dec
mov
stos
inc
push
inc
lret
pop
mov
push
shll
andl
scas
lcall
test
mov
mov
mov
inc
movsb
pop
repnz
imul
lret
add
mov
pop
ret
in
imulb
pop
xchg
repnz
push
mov
div
test
outsl
dec
mov
mov
repnz
lret
stos
mov
xchg
fistpl
in
sub
stc
fdivl
xor
fimuls
push
out
into
aam
cwtl
in
sub
gs
push
sbb
push
mov
xor
jmp
ljmp
daa
cmp
clc
mov
cltd
test
lods
fisubrs
clc
stos
out
cmp
push
or
pop
mov
jns
push
jns
divb
lcall
jg
mov
es
cmp
mov
jns
push
xchg
mov
enter
sbb
divl
pop
scas
lcall
inc
loopne
add
subb
cmp
fiadds
push
xor
sbb
inc
imul
test
outsb
popa
push
xchg
add
popf
cmp
in
mov
jge
adc
mov
xchg
lods
dec
push
mov
insb
xor
sub
loope
or
inc
lcall
cmp
out
in
and
push
pop
aas
inc
arpl
scas
or
sub
and
mov
and
xlat
cld
les
loope
icebp
pop
shrb
sub
and
inc
dec
push
aam
dec
ss
xchg
aas
int
fstpl
sti
mov
fmuls
lcall
lahf
mov
pusha
iret
mov
sub
ljmp
push
loopne
xor
into
dec
or
in
aaa
dec
xchg
nop
lret
mov
call
mov
xchg
loope
mov
jmp
bound
repnz
mov
mov
icebp
cmp
lret
dec
jecxz
sbbl
mov
stc
das
mov
xchg
incb
pop
mov
lcall
jecxz
xor
les
mov
add
sub
icebp
xchg
xchg
fnstcw
test
mov
sbbb
cwtl
test
int
mov
in
mov
in
dec
xor
in
ljmp
outsl
sub
int
sti
mov
jmp
xlat
test
ror
mov
ret
mov
stos
jns
movsb
pop
popa
xchg
fs
aam
pop
mov
lret
mov
mov
xchg
push
or
out
fidivrl
sub
mov
pushl
imul
jmp
or
push
xchg
leave
pop
pusha
push
icebp
aam
inc
xchg
xchg
xchg
sbb
rcrl
je
loope
lds
repz
movsb
lods
mov
stos
pop
gs
jnp
jg
icebp
jg
hlt
ljmp
popf
arpl
lods
incl
je
lahf
pop
stc
pushl
notl
int3
sub
jbe
push
std
adc
fdivrl
aam
fwait
jo
mov
decl
je
je
lock
addr16
sub
icebp
scas
jle
dec
test
cs
or
lcall
and
add
pop
idiv
incl
hlt
ds
stc
jl
in
cmp
aas
ds
aam
aad
jmp
lds
sti
ljmp
cmp
ljmp
pop
xor
idiv
mov
fdivrl
add
ds
int3
cmp
mov
scas
je
sbb
cmpsb
push
add
add
int3
ds
test
jle
lcall
ljmp
fs
jle
call
test
or
add
adc
int3
and
and
jmp
xlat
in
add
add
popa
pusha
push
mov
push
push
add
add
call
sub
add
mov
call
add
mov
add
push
pop
sub
push
push
add
push
push
xor
add
call
add
mov
add
push
mov
sub
add
pop
sub
push
mov
add
sub
pop
mov
sub
add
mov
sub
mov
add
sub
push
add
pop
mov
mov
add
sub
add
mov
sub
push
push
add
add
mov
push
push
mov
pop
mov
sub
add
inc
push
decl
pop
sub
add
mov
sub
push
mov
movl
pop
push
mov
add
xor
pop
add
mov
mov
mov
add
sub
add
sub
mov
mov
add
push
subl
pop
push
add
add
mov
sub
lea
push
push
add
mov
lea
push
lea
add
xchg
pop
xchg
sub
pop
pop
xchg
sub
mov
add
push
push
add
mov
sub
add
mov
sub
add
mov
mov
sub
add
add
mov
push
push
add
sub
pop
pop
sub
push
push
pop
add
mov
pop
sub
push
mov
sub
sub
pop
mov
call
add
mov
add
sub
mov
add
push
push
xor
pop
mov
push
push
mov
pop
push
push
add
mov
add
add
push
pop
sub
push
mov
add
push
mov
not
xchg
pop
xchg
push
add
pop
push
mov
add
nop
sub
sub
sub
push
push
pop
add
pop
mov
sub
push
xor
pop
push
mov
mov
add
push
mov
push
movl
pop
push
mov
sub
add
pop
inc
dec
sub
add
mov
add
sub
sub
mov
mov
mov
add
mov
mov
add
push
pop
sub
push
push
xor
pop
add
sub
mov
mov
add
add
sub
mov
mov
add
sub
push
add
pop
mov
add
sub
add
mov
sub
mov
push
pop
push
push
pop
add
mov
pop
not
not
add
mov
add
sub
push
mov
push
add
sub
mov
sub
call
add
mov
add
mov
push
add
add
sub
sub
sub
sub
mov
add
sub
mov
sub
push
mov
mov
mov
add
sub
mov
movl
call
add
mov
add
add
sub
sub
mov
push
push
mov
pop
push
mov
add
mov
add
push
pop
sub
add
sub
sub
mov
not
push
mov
add
mov
sub
mov
add
mov
mov
add
push
push
pop
not
push
mov
add
push
mov
add
add
pop
push
add
add
pop
sub
mov
add
push
mov
push
xor
pop
push
add
mov
pop
add
sub
mov
mov
add
add
sub
sub
mov
push
push
xor
pop
push
xor
pop
mov
add
sub
mov
add
mov
mov
add
cmc
cmc
cmp
pushf
popf
jne
push
neg
pop
jmp
pushf
popf
sub
add
mov
sub
push
movl
pop
push
sub
add
add
sub
mov
add
push
push
add
mov
push
call
add
mov
add
sub
call
add
mov
add
push
push
pop
addl
push
add
pop
push
push
add
mov
mov
push
mov
not
xchg
pop
mov
add
sub
mov
push
push
add
mov
sub
add
dec
mov
mov
add
push
pop
sub
pushl
push
add
pop
sub
add
inc
mov
push
add
pop
push
pop
sub
pushl
push
mov
mov
add
add
popl
sub
mov
add
push
push
add
push
add
sub
mov
xor
add
sub
mov
jmp
push
xor
pop
sub
call
add
mov
add
sub
mov
add
push
add
mov
add
push
lea
sub
xchg
pop
push
push
pop
add
pop
mov
sub
push
push
pop
movl
mov
add
push
push
pop
push
movl
pop
push
mov
sub
sub
pop
add
call
add
mov
add
inc
dec
not
inc
dec
not
ror
rol
add
sub
mov
add
push
push
pop
add
pop
sub
push
subl
pop
mov
push
push
pop
sub
add
mov
sub
mov
add
push
push
add
push
push
mov
mov
pop
pop
push
mov
sub
add
pop
push
xor
sub
pop
push
add
pop
popl
push
push
add
mov
add
sub
mov
add
push
pop
sub
sub
add
mov
sub
mov
mov
add
push
push
pop
sub
pop
add
add
add
mov
sub
add
mov
jbe
ja
jmp
add
add
call
jl
jge
call
jae
jmp
cmp
or
ljmp
pop
push
addl
pop
mov
sub
add
push
mov
add
call
add
mov
add
push
lea
add
xchg
pop
sub
push
subl
pop
mov
push
push
add
push
mov
mov
add
add
mov
push
pop
sub
lea
push
sub
add
xchg
sub
pop
pop
add
sub
sub
mov
mov
mov
add
mov
mov
add
movb
push
mov
push
push
mov
pop
add
mov
add
add
mov
popa
add
sub
sub
mov
push
add
pop
sub
add
sub
sub
mov
mov
mov
add
ret
cmpsl
xchg
adc
cld
daa
in
lods
jge
mov
lock
fidivrs
add
stos
or
ja
xchg
pop
bound
stc
push
shll
xorl
rclb
test
inc
sarl
xor
sbb
mov
ret
or
sbb
cld
push
and
sub
jno
xchg
test
fstpt
cltd
loopne
dec
call
test
mov
lods
push
ss
xor
cs
sbb
push
lock
push
lods
lret
adc
add
xchg
cmovs
ror
ja
xchg
out
xchg
daa
xchg
rcrb
stos
jno
shlb
sub
sbb
cmpb
push
push
push
fcoml
bnd
fiadds
aas
nop
test
imul
xchg
mov
xchg
insl
mov
pop
inc
cld
imul
ljmp
jnp
testl
mov
clc
add
xchg
dec
mov
movsl
fwait
sarl
imulb
cwtl
mulb
and
jno
andl
scas
sbb
es
jmp
pop
mov
test
movsb
cmp
cmpsb
out
cmp
scas
cmp
dec
adc
shll
imul
mov
out
fisttpll
fwait
push
adc
push
dec
fimull
fnstenv
jg
cmp
test
mov
ds
ds
add
sbb
mov
jge
int
push
pushf
jecxz
ret
jb
push
imul
jnp
ret
cmpsl
sub
inc
pop
lcall
push
push
cmp
dec
mov
loope
adc
jg
clc
mov
mov
mov
ficoml
popf
cmp
ds
icebp
icebp
push
daa
adc
adc
mov
pop
sub
fildl
nop
mov
fcom
jmp
pushf
rcrb
dec
repz
mov
mov
sub
inc
rcrl
and
div
sarl
cltd
jge
add
xor
and
push
cltd
xor
adc
int3
xchg
adc
dec
cmc
insb
insb
mov
dec
adc
lcall
xor
outsl
daa
clc
push
aad
add
adc
fdivrs
mov
add
mov
sbb
lods
pop
or
sahf
ja
dec
cld
ds
lods
mov
push
jns
repnz
or
xor
cltd
out
mov
subl
fidivrl
jl
lea
sbb
bound
jno
mov
push
ja
das
dec
push
loope
lahf
xchg
mov
mov
aam
iret
pop
ret
imul
movsl
adc
fisttpl
inc
shrb
and
ss
fisubs
mov
fmulp
rclb
xchg
and
ds
mov
int3
in
cmp
lret
mov
jbe
scas
add
mov
int
ljmp
xlat
pusha
jbe
cmp
addb
inc
cmpl
mov
and
ret
test
mov
les
mov
mov
dec
push
aad
sub
xchg
loope
icebp
clc
repnz
jae
int
sbb
mov
loopne
gs
jmp
push
and
scas
dec
out
jb
xchg
lods
sub
iret
push
imul
jne
mov
cltd
nopl
sub
cltd
nop
pushf
test
mov
and
sub
sarb
lea
add
mov
outsb
xchg
jle
xchg
mov
in
imul
aas
or
fisttps
jmp
popf
pop
enter
nop
repz
xor
bound
inc
xor
insl
neg
icebp
cmp
or
mov
stos
pop
jno
sti
ljmp
xor
push
xchg
cmpsb
imul
cmp
data16
imul
mov
mov
xor
adc
xor
cltd
repnz
cld
mov
outsb
mov
or
adc
inc
imul
ret
loop
sub
rcr
std
jns
dec
into
xor
dec
inc
in
jmp
xor
dec
xchg
adc
or
into
xchg
xor
ljmp
jg
sahf
push
aaa
xchg
push
sahf
adc
jg
dec
bound
jae
in
sub
or
in
and
pop
fwait
adc
neg
scas
adc
xor
imul
movsb
fidivl
js
push
adc
inc
mov
sbb
bnd
mov
pop
in
add
sahf
xor
insl
mov
sub
int
mov
sbb
and
jle
enter
jge
pop
dec
sahf
arpl
in
and
jp
cmp
aad
jmp
fsubrl
push
popa
daa
xor
addr16
sbb
add
pusha
jle
add
fs
push
mov
jecxz
test
jp
or
mull
push
cli
lods
adc
mov
lods
test
int3
fs
ret
or
push
and
outsl
outsb
sbb
or
pop
test
insb
lds
test
jns
ds
mov
pusha
sbbl
xchg
cmpsl
ret
mov
sub
lds
xchg
rclb
dec
and
sub
cs
cmpsb
lods
jnp
notl
mov
imul
mov
dec
add
mov
lods
dec
add
xchg
cwtl
dec
add
xchg
out
jno
mov
jne
arpl
int
das
or
fwait
bound
or
loop
cli
dec
sub
mov
pushl
dec
scas
push
xchg
dec
xchg
sbbb
in
ret
test
mov
mov
adc
das
gs
pop
cmpsb
jp
cmp
push
xchg
sub
and
and
cmp
cmp
dec
and
inc
or
aad
xchg
dec
pop
sti
lret
outsb
mov
fcmovu
cmpsl
jp
mov
fistpl
lahf
push
mov
jecxz
cld
pushf
push
scas
sbb
das
rcl
stos
jo
enter
cmp
cld
pop
pop
enter
rolb
rcrl
sub
push
ficompl
mov
push
aam
insl
add
cmp
pop
mov
out
test
ret
cmp
cmpsb
mov
xchg
and
xchg
push
gs
loopne
xchg
adc
xor
sub
test
mov
mov
test
ljmp
cmp
mov
pop
std
inc
mov
sbb
and
loope
insl
sahf
in
add
xor
pop
stc
xchg
rep
and
loopne
sbb
dec
xor
inc
in
test
mov
xchg
orb
or
inc
adc
lret
adc
cwtl
dec
popl
inc
mov
cmp
sub
jmp
jne
inc
rclb
jmp
add
sbb
mov
lds
sbb
fnstcw
dec
fwait
test
sbb
xchg
leave
mov
call
xchg
fcmovu
fsts
ja
imul
aam
dec
adc
je
cmp
jns
mov
mov
mov
xchg
and
fdivrl
add
or
pop
mov
ljmp
ds
push
mov
pusha
add
repz
pop
ja
dec
xchg
and
xor
inc
xchg
addr16
test
jmp
ljmp
stos
and
nop
push
lcall
and
sbb
test
add
iret
push
pop
inc
mov
or
jge
lcall
ret
cmp
cmp
fcoms
sarl
int
mov
lock
dec
aad
aas
adc
inc
push
aad
aas
and
imulb
xchg
push
cmpb
lcall
dec
loop
push
inc
pop
add
imul
xchg
jecxz
shrl
sbb
xor
cwtl
mov
movsl
push
daa
pushf
or
stos
pushw
or
jmp
pop
xchg
mov
push
mov
push
sub
stc
pop
enter
jp
sbb
test
add
inc
inc
rorl
or
jbe
mov
cld
sbb
cmp
push
xchg
dec
inc
sbb
ret
ds
fistpl
outsl
jg
cmp
cmpsb
xchg
dec
mov
movsl
fcomps
cmpsl
xor
ljmp
inc
cli
mov
mov
and
mov
cltd
ficompl
div
jb
imul
out
adc
add
add
and
popa
mov
mov
in
jp
mov
lds
imul
xor
cld
arpl
insl
jp
adc
test
sub
inc
xlat
dec
push
es
lds
outsb
iret
pop
pop
lock
xorl
divps
stos
rcrb
sahf
mov
jg
cmp
and
shrb
pop
inc
push
xchg
sti
sub
xchg
sbb
int3
pop
out
mov
xor
popf
mov
mov
push
icebp
lret
adc
out
ss
leave
mov
push
aad
sub
mov
inc
cmpsb
es
or
sub
aaa
inc
xchg
or
test
adc
lcall
jl
into
xchg
jg
push
inc
lcall
mov
inc
repz
jns
pushf
sbb
adc
inc
stos
lahf
sub
inc
pop
pop
mov
adc
fldenv
push
call
addr16
adc
fldl
test
push
aad
pop
mov
jl
clc
xchg
mov
int
das
dec
cmp
push
imul
mov
incb
mov
push
in
ret
add
ljmp
inc
jns
mov
xchg
aaa
xchg
mov
movsl
sbb
mov
lea
jns
dec
frstor
add
cli
mov
mov
cwtl
lcall
sbb
mov
cmp
repz
pop
dec
lds
xlat
inc
aas
mov
inc
inc
cmp
int
scas
jno
xor
incl
fsubrl
cmp
imulb
jge
jns
mov
call
push
enter
mov
mov
lahf
fisubrl
ds
or
lea
jmp
push
mov
loop
sub
int
cmp
and
adc
test
les
fsts
andl
out
lods
int3
sub
xchg
adc
jo
sbb
lods
ja
jbe
xchg
mov
mov
clc
ds
cs
stos
push
dec
mov
pop
sbb
jg
mov
jg
xchg
jge
push
or
jno
mov
xor
cmp
push
jecxz
cs
mov
rorb
push
dec
xchg
into
mov
les
pop
mov
push
je
add
and
dec
mov
mov
iret
stos
push
inc
add
push
push
aas
pop
je
dec
or
xor
inc
ret
inc
fiaddl
xor
mov
push
mov
mov
adc
mov
bound
daa
push
sbb
push
movaps
mov
add
adc
aaa
cmp
ss
ss
outsl
sub
mov
imul
jno
repnz
xchg
test
inc
mov
mov
mov
cmp
imul
shl
ja
and
cmp
mov
pop
loope
adc
rorl
call
mov
jp
xor
jns
mov
mov
nop
lcall
mov
test
dec
imul
fcomps
sub
mov
fwait
ja
pushf
sub
stos
pop
jo
mov
leave
out
add
les
orb
hlt
cmp
cmpsb
jbe
cs
mov
lahf
jns
and
push
push
cwtl
mov
ljmpw
push
movl
jnp
mov
dec
dec
inc
jl
mov
stos
lcall
jge
jmp
push
das
cmc
arpl
mov
leave
inc
sbb
push
sbb
aaa
pop
and
in
lcall
addr16
das
stos
push
stos
aam
mov
pushf
imul
xor
mov
korb
fiaddl
cmp
add
dec
jns
jne
and
in
outsb
sub
dec
lcall
out
mov
outsb
or
xchg
adc
xchg
or
fistpl
sbb
cmpsb
mov
xchg
xchg
jb
sbb
test
xchg
pusha
pop
lret
add
sub
push
clc
popa
sarb
or
in
jnp
xlat
push
push
or
inc
pop
and
mov
aaa
rcl
int3
iret
aas
cmpb
lret
pop
adc
add
sub
ret
or
pusha
push
fldenv
loope
stos
mov
std
loop
inc
xchg
xchg
orb
pop
add
fwait
push
and
or
cmp
push
clc
push
xchg
cmpsb
or
jp
inc
out
outsl
or
mov
push
xchg
cmp
jecxz
jecxz
and
sub
sahf
aad
out
cli
stos
adc
sti
jae
scas
add
pop
cmpsl
xchg
repz
adc
ret
cmp
nop
adc
inc
je
cmpsl
sahf
ret
stc
in
ds
shlb
loopne
dec
movsb
fwait
js
ret
or
insb
mov
push
xchg
cmp
rcll
imul
mov
push
push
mov
test
fmul
mov
cmp
inc
shrb
dec
sub
xchg
popf
stc
lock
sub
nop
push
sbb
ror
clc
movsl
into
loop
add
into
not
dec
out
mov
enter
jns
jg
dec
aam
pop
out
push
jb
leave
in
cmpsl
fwait
sbb
dec
push
pop
inc
xchg
out
pusha
mov
rol
adc
sahf
lret
rcrl
mov
dec
mov
and
pop
or
push
dec
push
xor
push
insb
bound
jmp
or
adc
iret
cmp
sbb
fs
daa
pop
mov
das
jl
inc
push
cmp
sub
std
xor
hlt
leave
testb
dec
push
pop
pop
jno
fwait
ja
mov
stos
bound
repnz
in
pop
in
das
ret
push
jl
pop
cmpsb
adc
sbb
push
call
insl
push
dec
sub
and
xchg
sub
mov
pop
lds
in
shrl
mov
dec
sub
insb
jno
mov
and
jae
fdivl
lret
cli
pop
sbb
sbb
xor
fisubl
notb
or
mov
and
or
xchg
cmp
xchg
shr
mov
adc
sub
jo
aad
arpl
fwait
xchg
mov
cmpsb
pushl
sbb
xorl
jp
or
lods
cmc
in
xor
bound
push
push
sbbl
fnstenv
and
nop
dec
cltd
rep
pop
sbb
movsl
pop
sbb
les
dec
int
jecxz
dec
das
mov
notl
inc
xchg
jle
aaa
inc
in
push
inc
xchg
js
es
stc
popl
repnz
sbb
sysret
pop
rorb
sub
jne
aaa
xchg
or
das
popa
cmp
xchg
cld
int3
stos
mov
push
pop
cmp
mov
movsb
jecxz
fisubrs
xor
mov
jmp
daa
mov
push
sub
xor
out
in
xor
int
push
cs
or
xor
jmp
adc
es
gs
jno
lods
pop
inc
jge
movsl
cmp
pusha
cmp
leave
push
dec
pusha
ret
popa
jp
cmp
lret
dec
ret
xchg
or
jle
inc
cmc
jb
stos
push
push
add
pushf
test
rcrl
shll
aas
inc
xor
sete
out
cmpsl
dec
lock
adc
xor
ja
test
push
pop
push
adc
and
push
mov
adc
xchg
adc
out
stos
adcl
ficoms
add
xchg
dec
loop
lods
shlb
std
scas
cmovs
or
xchg
or
dec
sub
cmpb
test
adc
sbb
int
xchg
xchg
inc
jo
outsb
adc
and
popf
inc
and
mov
out
adc
loopne
jno
jne
adc
sbb
jno
icebp
sub
adc
std
cmpsl
not
cli
push
xchg
scas
les
fadd
jbe
xchg
and
mov
and
int
ss
lea
outsl
aad
mov
jae
jecxz
xor
dec
sub
push
push
and
movsb
lret
or
ss
jmp
xchg
repnz
outsb
clc
pop
push
fwait
push
fisubrl
dec
mov
dec
repz
movsl
test
jo
fs
rcrb
jbe
mov
pop
add
and
xchg
dec
add
mov
fcoms
lock
lock
jl
mov
loope
fmuls
mov
stos
dec
stos
xor
pusha
ficoms
push
jmp
lea
jmp
imul
jbe
cld
mov
pop
push
jle
clc
pop
js
inc
push
pop
and
xchg
fdivr
mov
sub
add
inc
xchg
lret
out
push
inc
pop
sub
fwait
push
arpl
push
test
mov
mov
stc
add
mov
cwtl
pop
and
out
mov
sub
sub
dec
xor
sbb
ret
cmpsl
into
outsb
loopne
adc
xor
lock
mov
hlt
andb
call
sub
mov
inc
sbb
fldcw
jecxz
ret
jp
sbb
inc
mov
mov
insb
lcall
pop
jmp
pop
arpl
adc
insb
push
mov
rolb
adcb
inc
lods
xor
clc
das
lcall
mov
adc
enter
push
push
add
int3
push
mov
scas
rclb
push
mov
popa
jbe
in
ljmp
in
xor
inc
mov
dec
daa
mov
imul
adc
pop
or
stos
test
push
loope
xchg
stc
add
xchg
cmovle
popf
push
mov
fisttpl
mov
pop
es
lds
repz
into
adc
popw
pop
adc
arpl
sbb
dec
push
div
outsb
and
xor
sub
jnp
mov
test
xor
xchg
adc
cmp
in
push
dec
js
addl
sub
xor
out
dec
jb
xor
add
je
pop
push
das
testl
daa
mov
js
imul
jne
shll
xor
hlt
mov
js
fisubl
mov
out
pop
call
inc
in
aad
nop
or
xchg
icebp
sbb
jb
xchg
xchg
rcr
xor
mov
inc
das
ds
test
sbb
add
pop
ficoml
test
shlb
loopne
aad
push
adc
jmp
out
mov
cld
inc
adc
or
jl
xchg
aaa
pushf
and
in
subl
stos
div
mov
or
mov
fdivrl
jno
lret
and
xchg
hlt
or
or
xor
repnz
dec
and
lret
mov
loopne
inc
jbe
mov
mov
cmpsb
ljmp
xor
mov
pop
pop
mov
adc
sbb
xchg
aas
cmp
push
and
out
jecxz
push
xor
inc
dec
std
popf
test
outsb
scas
lock
jns
pop
jle
lds
fisubs
test
cmc
enter
or
jp
sbb
fiadds
call
f2xm1
push
push
std
jmp
or
xchg
sbb
sub
push
xor
jp
js
xchg
jmp
pop
push
lock
outsb
pop
cmp
mov
aam
je
addr16
inc
mov
fisubl
in
js
dec
xor
mov
leave
pop
inc
inc
xor
push
push
ret
fstpt
mov
ja
ja
sbb
adc
pop
lods
loope
or
pop
or
mov
or
insl
test
dec
fcom
mov
movsb
inc
in
jnp
ss
or
in
sahf
xchg
insb
push
in
inc
or
ret
jb
xchg
fists
add
insl
mov
shrb
into
or
aas
dec
mov
push
pop
adc
pop
mov
mov
add
sbb
cmp
xchg
sahf
fstps
xor
roll
mov
inc
jno
shll
adc
push
cmpb
sti
mov
fwait
sbb
mov
adc
adc
sub
xchg
dec
lds
divb
sub
xlat
test
push
xchg
mov
sbb
mov
pop
out
repnz
jns
fidivrl
lret
rolb
ja
cs
pop
add
fsubl
addr16
mov
fdivr
jp
mov
gs
and
pop
jg
mov
pop
jae
faddl
xor
lea
xor
mov
adc
mov
lock
in
adc
mov
imul
push
inc
sbb
mov
rcrb
lea
jns
idiv
ret
data16
sub
fs
push
jns
jl
fisubs
mov
xorl
in
inc
pop
inc
jnp
adc
aad
xor
fiadds
test
repz
sbb
lahf
js
lahf
int
cs
pop
scas
mov
sbb
pop
add
stos
nop
cwtl
ss
pop
insb
mov
rcrb
xor
int
mov
cmp
pop
test
sbb
adc
imul
ljmp
std
dec
cwtl
inc
lret
ljmp
sbb
cs
adc
sbb
and
out
imul
mov
aam
stos
mov
jp
dec
jg
push
dec
adc
sub
sub
out
jne
gs
and
out
add
or
call
and
mov
repnz
xor
jecxz
dec
sahf
and
iret
mov
in
sub
cmp
ss
adc
outsl
fsubrs
pop
loop
sbb
aas
enter
adc
and
push
pop
ja
js
les
and
sub
lods
pop
jle
jae
mov
lcall
movb
jge
out
lods
lock
mov
inc
pop
lret
test
add
pusha
cmp
stos
and
loopne
xor
out
loopne,pn
mov
inc
push
inc
fcomp
jnp
cltd
cmpl
inc
xchg
repz
aaa
jne
or
mov
pop
and
and
jl
mov
xchg
into
addb
or
dec
test
sbbl
movsb
pop
jb
ret
fsub
and
cmpsl
mov
push
cmpl
repnz
inc
cmpsl
sub
push
ljmp
lea
in
pop
int3
sahf
pop
cmp
inc
fidivrs
mov
jp
and
push
data16
out
loope
call
fdivl
dec
lahf
dec
sub
ja
xor
in
xchg
sub
xor
imul
ja
inc
ljmp
mov
int
or
popf
add
bound
jnp
inc
mov
push
out
mov
xchg
lods
cli
into
subl
js
mov
sub
lahf
fwait
xor
ret
inc
loope
cmpsl
cmpsl
mov
pop
mov
inc
jno
lea
loop
sub
xchg
mov
mov
cmp
push
pop
dec
fimull
jbe
push
ror
leave
jne
jnp
dec
das
mov
sahf
out
push
mov
fisttpl
push
sub
mov
neg
leave
mov
inc
ljmp
pop
adc
dec
jae
mov
arpl
clc
scas
imul
ss
mov
int
mov
mov
pop
jbe
adc
pushf
xor
xorl
xor
rcr
inc
test
adc
fwait
sti
jno
aaa
mov
sub
add
insl
popl
movsl
fs
add
addr16
sub
arpl
xchg
xchg
pop
sub
cld
sbb
mov
sbb
test
sahf
push
xchg
mov
xchg
pop
rcll
or
sub
mov
mov
add
scas
xchg
imul
rclb
jnp
cmp
inc
push
push
sub
sub
mov
mov
xor
xlat
iret
daa
cmpsb
sbb
std
sub
pop
data16
nop
cs
mov
adc
imul
test
imul
call
addl
sbb
into
ds
int
mov
shrl
shrb
and
sub
inc
xor
mov
ljmp
inc
mov
sub
out
push
mov
jnp
xor
mov
clc
cmovns
out
cmpsl
aad
mov
mov
in
sub
mov
and
stos
inc
in
fcomip
inc
pop
pushl
or
pop
cmp
push
stos
mov
xchg
cmp
mov
cmp
adc
xchg
repnz
rcrb
and
push
mov
xor
fs
xor
adcl
out
pop
xchg
hlt
or
lret
sbb
fildl
scas
into
addr16
mov
dec
cmp
mov
sbb
jae
ja
pop
pop
push
add
lret
pop
movsl
rcll
add
jns
nop
jge
daa
or
push
sub
inc
icebp
mov
es
scas
scas
gs
cmc
or
jno
xchg
stc
sbb
or
ficoms
or
sahf
sub
fneni(8087
add
pop
cs
and
test
xchg
push
push
jg
stc
mov
pushl
test
sub
xchg
adc
mov
and
por
sahf
dec
outsl
dec
aas
mov
sbb
imul
out
dec
nop
out
pop
and
pop
roll
lea
xor
mov
movsb
sub
ficomps
mov
adc
outsb
jns
and
or
int3
fnstenv
loopne
jae
sub
xchg
push
insb
add
jle
sbb
jne
sbb
lret
test
push
dec
adc
push
jg
add
mov
pop
lods
mov
sub
or
outsl
pop
loop
pop
sahf
mov
jp
mov
dec
aad
push
test
xchg
push
xor
leave
xor
mov
mov
stos
inc
orb
ffree
mov
clc
and
add
sbb
cmp
bound
test
fucom
cmp
bound
addb
aas
mov
inc
inc
sahf
int
push
cmp
cmp
call
mov
adc
pop
sbb
add
scas
push
cmpl
or
lahf
fwait
shll
stos
jl
jge
xor
ljmp
sti
es
pop
les
adc
or
xor
dec
int3
call
test
loopne
mov
call
ret
xchg
push
xor
leave
sbb
or
jle
or
bound
es
push
leave
call
inc
roll
jle
jnp
pop
arpl
lahf
arpl
in
xchg
test
dec
inc
xchg
aaa
add
repz
adc
dec
push
out
je
jae
jp,pt
fcmovbe
ffree
mov
out
fldcw
test
mov
bound
iret
les
xor
pop
loope
frstor
inc
xor
jns
adcl
sbb
jb
mov
es
mov
lretw
arpl
sbb
cwtl
mov
lcall
ja
mov
fbld
repnz
ljmpw
or
lea
je
lret
fists
mov
in
daa
test
enter
adc
mov
mov
loop,pt
and
scas
add
push
jmp
mov
aam
jo
call
mov
xchg
mov
les
test
lahf
fisttps
pop
push
test
imul
dec
push
pop
sub
adc
push
xchg
cmpsb
cs
sti
add
mov
mov
fnsave
sub
fistps
xchg
cltd
push
rcrb
cmp
push
pop
sub
dec
push
sbb
adc
repnz
mov
sbb
out
insb
out
inc
and
subb
inc
sub
mov
cmp
out
into
test
mov
out
rcrb
lahf
push
bound
jp
cli
clc
sub
or
adc
sub
sbb
popf
push
rol
and
inc
adc
inc
xchg
xor
push
test
icebp
sahf
dec
leave
sbb
imull
xor
stos
enter
dec
cmp
cs
xor
dec
pop
aas
inc
or
xchg
hlt
xchg
stc
xchg
data16
mov
xor
scas
aaa
sub
push
dec
ja
cmpsl
hlt
gs
or
pusha
pop
inc
adc
imul
sbb
cmc
pop
add
cmp
mov
jecxz
out
into
inc
xchg
push
clc
mov
ret
pop
or
mov
ja
aaa
pop
or
shl
mov
out
dec
into
xlat
imul
or
add
in
cmp
movsb
sub
xorb
or
mov
sub
popf
push
add
or
mov
aas
push
sbb
or
xor
int3
inc
sbb
cmp
mov
or
mov
push
stc
adc
dec
jbe
push
shrb
or
pop
and
dec
mov
xchg
push
xchg
xchg
push
xorb
pop
mov
mov
mov
sti
sbbb
mov
mov
pusha
dec
roll
push
add
or
sub
je
xor
sub
out
inc
add
pop
adc
icebp
cmpsb
jmp
test
mov
les
in
jne
jecxz
pusha
negl
mov
push
test
dec
lahf
push
xchg
mov
pushf
add
jo
leave
jbe
cmp
cmp
xor
adcl
nop
lahf
and
push
loopne
mov
sbb
sarb
stos
push
mov
pop
add
outsl
mov
push
jmp
cmpsb
adc
mov
xchg
and
or
push
mov
inc
lcall
mov
xchg
js
pop
add
in
ret
mov
adc
gs
mov
and
aad
in
pop
movsb
gs
add
ror
mov
adc
and
xchg
shlb
mov
ljmp
xor
sbb
add
scas
mov
sbb
sarl
dec
mov
jbe
loop
cld
xchg
mov
cmp
loop
out
push
push
mov
shrb
out
loope
mov
adc
mov
jo
sbb
test
sub
ret
aaa
jg
je
add
movsb
or
ret
in
cs
cld
or
mov
mov
add
fidivrl
inc
add
inc
jecxz
jge
adc
lds
jne
and
test
fildll
xchg
loope
or
pop
cmp
stc
or
push
jo
fsubr
dec
sbb
icebp
add
mov
je
bound
fcomps
pop
nop
adc
xchg
jmp
test
addr16
inc
mull
mov
mov
imul
mov
or
test
mov
in
xor
xchg
and
push
sub
shlb
ret
es
jmp
negl
pop
and
or
jbe
div
inc
mov
lods
rclb
addl
push
mov
xor
xchg
std
push
jnp
insl
sbb
pop
mov
ds
sub
icebp
leave
adc
push
and
adc
or
popf
dec
cli
jl
sub
sbb
push
or
push
sub
xor
loop
jb
push
mov
push
sti
mov
test
add
fnstsw
fiaddl
xor
mov
in
clc
fnsave
jmp
scas
jo
mov
lcall
daa
scas
mov
popa
lods
sub
cmp
xchg
pop
in
sbb
mov
dec
jns
and
cltd
shlb
lret
mov
jb
xchg
sbb
in
data16
inc
add
jmp
add
movsb
insb
inc
int
pop
roll
popf
in
stc
rcrb
push
pop
xchg
incl
loopne
sub
sbb
pop
or
out
dec
pop
pusha
sahf
jae
loope
scas
outsb
ret
push
or
adc
add
jge
push
mov
sbb
sub
sarl
cmp
and
call
xchg
sbb
mov
decb
nop
dec
xor
mov
inc
push
sbb
and
or
fdivl
stc
stos
xchg
or
sbb
cmpsl
adc
fsubrl
sbb
dec
mov
sub
push
roll
fstpl
jbe
and
shlb
filds
mov
xchg
outsb
pushf
inc
inc
xchg
es
mov
mov
les
jns
icebp
ja
sbb
mov
mov
mov
and
or
xor
es
dec
pop
into
movl
push
mov
fsubl
adc
rol
popa
xchg
push
mov
inc
in
xor
cli
xchg
les
scas
mov
sub
int
and
cmp
sub
jae
into
push
push
out
hlt
mov
inc
inc
xor
xchg
loop
mov
ret
jne
jb
fwait
imul
ja
mov
and
sub
mov
pop
dec
movsl
into
cli
inc
aas
pop
jns
jp
xchg
jns
xchg
out
enter
sub
cwtl
mov
add
dec
xchg
scas
push
mov
fnclex
arpl
pop
scas
insb
cmp
fldenv
pop
sar
mov
cmp
fdivrl
dec
aad
mov
jb
jns
in
rorl
cld
pop
lret
lock
push
adc
xchg
cmp
cli
xchg
adc
and
outsl
mov
inc
pop
cmp
xor
stos
out
push
pop
pop
pusha
fnstcw
mov
ja
push
or
cmc
push
sub
jg
xor
imulb
add
fldcw
and
push
dec
cs
ror
mov
sbb
dec
cmpsl
ja
fdivrs
fsubrl
loop
sub
int
push
xchg
insb
fdivl
lcall
fdivrs
outsl
jmp
out
push
adc
arpl
loop
jmp
mov
cmp
inc
dec
les
sti
sti
inc
clc
pusha
ja
inc
adc
outsl
mov
imul
pop
xchg
insb
sub
cmpsl
hlt
and
ljmp
out
add
mov
push
adc
iret
add
mov
xchg
xchg
out
das
pop
or
iret
add
inc
xor
inc
mov
xchg
add
add
pop
stos
sub
and
xlat
pop
test
aas
test
mov
aaa
push
movb
dec
push
cli
out
aam
add
inc
pop
push
xor
test
lock
adc
rcll
aam
mov
inc
dec
dec
js
cmpsl
gs
or
xlat
mov
cli
jge
push
sbb
mov
mov
mov
iret
pop
mov
add
lea
or
jnp
pop
rol
push
adc
pop
xchg
addl
jno
cmc
sub
fists
mov
sub
and
cmp
fcomps
push
xchg
shl
inc
cmc
jp
cmpb
pop
fcoms
adc
scas
movsl
jns
sub
push
fisubs
jmp
mov
cmp
mov
imul
cld
popf
in
or
sbb
std
adc
out
sbb
xchg
movsl
mov
pusha
push
and
mov
in
xchg
mov
pusha
sub
aam
fs
push
dec
or
hlt
test
push
mov
roll
push
mov
cmp
dec
or
add
sti
aam
mov
in
xchg
imul
mov
test
dec
sub
sbb
mov
fnstcw
fdivrs
cmp
and
mov
xlat
mov
and
loope
loopne
cs
nop
dec
xchg
mov
xchg
pop
sub
fs
pop
and
or
mov
clc
jnp
inc
mov
pop
jns
mov
xchg
loope
bound
push
sti
jmp
dec
mov
push
and
xchg
mov
lcall
in
jnp
lahf
loop
xor
std
inc
xor
add
loope
pcmpeqw
mov
into
bound
inc
and
enter
cmp
loopne
lret
xor
notb
ljmp
xlat
push
daa
js
inc
hlt
popf
test
xor
loop
push
in
das
cmpsb
inc
xor
inc
movsl
jnp
cmp
add
adc
sub
sbb
cmc
enter
mov
jno
jo
mov
pushf
xor
hlt
cld
mov
cld
addr16
arpl
push
nop
addb
jecxz
adc
xor
in
add
outsl
fwait
lcall
mov
cld
mov
mov
or
mov
mov
in
cmpsb
in
daa
jb
xor
js
xor
xor
and
lods
fwait
sub
mov
fdivrs
iret
popa
pop
imul
xchg
inc
inc
sti
popf
xchg
lret
adc
in
test
sub
pop
stos
lods
orb
mov
fimuls
push
sti
cmc
mov
leave
mov
xchg
pop
adc
sub
jle
fstpt
xor
xor
or
jb
cmpsl
jb
mov
push
add
mov
jns
mov
fldt
mov
idivb
mov
cli
jmp
test
sub
sar
jl
lahf
int3
enter
popa
inc
sbb
xchg
or
cmpsb
or
push
outsl
inc
mov
insl
mov
dec
out
in
cs
je
repz
xor
sub
loop
add
push
jp
pop
in
add
je,pn
cld
mull
mov
icebp
repz
sbb
scas
out
in
cld
sti
inc
xor
call
pop
lods
daa
mov
sbb
jle
std
or
fildl
cmp
pop
test
sbb
pusha
mov
dec
out
jl
aam
jle
cmp
cpuid
dec
dec
or
dec
dec
jge
xchg
sub
cmc
cld
xchg
adc
xlat
jae
inc
into
fs
pop
pushf
rol
mov
push
lcall
jmp
loop
popa
add
enter
adc
shl
clc
adc
jae
mov
cmp
cmpsl
xor
push
inc
jns
xlat
push
into
cmpsb
mov
jno
xlat
in
push
xchg
sbb
jecxz
jmp
les
mov
push
jecxz
sbb
push
mov
xchg
sub
xchg
cli
mov
adc
cmc
arpl
xor
xor
movsb
cli
jno
jae
jg
jp
mov
cmpl
cld
fdivs
enter
notb
add
or
pop
bsr
int3
sub
mov
inc
repz
jmp
jg
std
and
or
aam
adc
xchg
out
aaa
inc
push
fidivrs
push
call
mov
lret
cmp
notl
dec
jmp
mov
push
push
test
xchg
push
test
dec
jnp
aam
icebp
jmp
lret
out
push
leave
xor
mov
push
mov
pop
mov
push
cmp
jmp
adc
scas
dec
shrb
iret
push
sbb
jge,pt
cltd
mov
push
and
psrld
push
psrlw
mov
jl
push
out
mov
add
sbb
add
push
cmp
rclb
cmp
jo
adc
pop
pusha
sub
or
jns
xchg
dec
addr16
loop
subb
sbb
in
stc
test
insb
cmpb
gs
sbb
roll
jbe
fstpl
and
fs
push
xor
or
mov
notb
loope
mov
lock
movsl
xchg
mov
push
push
scas
rcll
cmpsb
and
xor
jl
cmpsb
ja
xor
push
insl
adc
mov
out
push
gs
or
mov
add
dec
mov
adc
stos
pop
mov
mov
push
and
ja
sti
mov
sbb
inc
ffree
frstor
sti
pop
ret
xor
jl
outsb
push
add
insb
imul
lcall
or
dec
in
sub
fistpll
cmovae
jo
icebp
scas
cli
mov
pop
push
xor
push
fucomi
movsb
inc
insb
ds
and
dec
adc
pop
adc
cmp
dec
jg
cmpsb
xor
mov
cmp
lret
or
mov
jg
mov
mov
mov
shr
push
or
sub
xor
mov
fildll
or
sub
hlt
jg
imul
push
mov
sub
test
mov
add
out
rolb
movsb
cmp
sub
adc
arpl
push
xor
xor
xlat
cmp
push
xor
test
popa
daa
mov
mov
sti
xor
mov
xor
outsl
sbb
std
mov
mov
mov
lret
clc
test
ror
sbb
imul
xor
cli
xor
xchg
out
inc
inc
sbb
xchg
subl
add
loope
daa
and
lods
lods
xchg
push
lcall
jmp
je
jmp
bound
daa
sub
push
ljmp
xchg
or
cli
dec
gs
popf
gs
leave
mov
ds
xchg
in
or
mov
mov
or
icebp
and
inc
cli
xchg
sbb
call
and
pop
stc
out
mov
cwtl
inc
jmp
xor
test
mov
jmp
push
jno
repnz
dec
sub
push
popf
jmp
imul
test
mov
inc
pushf
in
and
out
jb
mov
dec
add
outsl
add
dec
pop
mov
fstl
mov
or
out
aaa
inc
pop
jg
lret
sbb
xchg
out
adc
xchg
bound
sbb
jae
jb
sbbl
adc
fildll
or
test
mov
mov
xchg
sarl
jo
xor
in
xchg
pop
scas
jb
xor
add
shll
movsl
popa
js
mov
mov
xchg
pop
cmp
jae
mov
sbb
notl
test
and
xchg
je
mov
mov
fidivrl
xchg
xchg
adc
or
mov
xchg
cli
or
jnp
in
data16
ds
and
int3
lret
jb
dec
pop
gs
pop
clc
jnp
mov
push
mov
imul
cpuid
dec
call
mov
out
and
push
outsl
pop
movsl
imul
in
into
xchg
and
add
cmp
lahf
pushf
fsubr
pop
out
cmp
pop
not
pusha
adc
aas
dec
aam
je
fwait
xchg
or
out
xchg
icebp
stos
mov
faddl
fmuls
xor
xlat
dec
lods
mov
test
inc
cmp
mov
fisttps
jge
dec
stos
ss
int3
inc
nop
fcmovnbe
pop
mov
inc
cmpsl
jb
jle
xchg
data16
shlb
mov
xor
mov
mov
outsb
daa
sub
pop
icebp
push
stos
lahf
push
outsb
lea
mov
jle
jne
add
dec
inc
stos
and
cld
xchg
nop
or
mov
mov
arpl
sub
or
scas
lahf
jae
lock
mov
dec
nop
mov
out
das
ds
cmp
int
mov
xor
scas
cwtl
dec
pushf
mov
mov
movsl
sbb
ret
sub
jo
jo
jbe
out
mov
sub
dec
jb
fsubrl
mov
xchg
cmp
or
ss
inc
mov
lea
daa
popf
ss
ret
pop
imul
adc
mov
dec
mov
mov
icebp
xor
fs
test
movsl
outsb
mov
dec
push
adc
repz
sbb
punpckhdq
jmp
push
push
fimuls
mov
insl
sbb
mov
enter
xchg
xor
js
push
add
int3
jle
daa
scas
dec
call
sbb
inc
inc
imul
popf
in
dec
insl
stos
rolb
rorb
push
inc
sti
push
fbld
fs
or
jae
subl
mov
movsb
jo
pop
mov
ljmp
lret
js
inc
hlt
clc
fwait
dec
mov
cmp
xchg
testb
std
and
sbb
int
mov
or
xor
in
popf
push
inc
and
dec
fldcw
out
pop
push
in
les
mov
or
addl
jg
xchg
push
mov
xor
sub
stos
jg
sub
dec
mov
mov
cli
and
mov
push
inc
fidivrl
and
ds
loop
push
sub
pop
pop
and
and
fbstp
scas
jmp
fwait
pop
cmp
hlt
dec
xchg
inc
mov
nop
dec
push
imul
lods
jle
pop
jmp
mov
or
mov
and
clc
pusha
pop
mov
sub
pop
and
sbb
fldl2t
mov
jp
dec
mov
subl
cs
mov
repnz
mov
fwait
andb
xor
fldenv
jbe
or
enter
mov
mov
add
outsl
outsl
mov
shlb
lods
xchg
or
jae
jbe
push
jp
or
sbb
jmp
leave
fmuls
pushf
stc
or
pop
jge
adc
push
add
test
mov
add
cmpb
inc
outsb
into
pop
ss
jge
and
jnp
inc
add
insl
cltd
or
ret
inc
sbb
mov
xor
mov
dec
fldl
mov
jbe
jae
pop
xor
xor
es
dec
mov
inc
inc
or
imull
js
pop
rorb
cs
aas
jg
ljmp
movsb
out
subb
out
test
mov
push
xor
cmpsl
and
icebp
shrb
jl
or
mov
and
out
xchg
outsl
roll
pushf
int
adc
cmp
cmp
ss
pop
fstpl
and
mov
cmp
orl
pop
bts
repz
loopne
pop
scas
out
mov
std
or
je
cmpsl
iret
scas
sti
pop
fwait
insb
mov
sahf
xor
dec
outsb
in
pushf
insl
pop
and
cli
cmpsl
dec
ljmp
pop
rcll
sbb
lea
pop
repz
jnp
mov
or
push
icebp
shrl
mov
out
int
jg
xchg
jnp
daa
sti
mov
mov
sbb
fwait
enter
ss
or
jno
mov
nop
sub
add
bound
gs
xor
xchg
xor
push
adc
add
xor
xchg
sbb
mov
jo
fstpl
mov
mov
cmc
fwait
push
cmc
and
or
cmp
test
add
shrb
nop
mov
add
pop
push
cmpsb
repz
pusha
jns
mov
push
cmp
xor
insl
jle
add
jp
dec
stos
jnp
mov
pop
inc
xor
xor
mov
imul
int3
imul
in
or
lods
dec
xlat
ljmp
mov
js
sub
sti
mov
sub
mov
out
mov
int
adc
hlt
xchg
js
sub
fildll
xchg
inc
test
xchg
fistps
adc
test
sti
aaa
and
es
mov
xlat
idiv
mov
or
in
mov
mov
push
adc
mov
addl
cmp
push
jp
xchg
dec
insl
arpl
faddl
mov
cmp
add
mov
fistpll
xor
cli
hlt
int
pop
or
add
inc
add
and
pop
fmull
add
pop
xor
ret
scas
pop
into
xorl
dec
xor
mov
jp
push
out
divb
xor
das
cmpsb
sub
pop
sbb
dec
fsubrs
pop
call
pop
or
cmp
mov
xor
nop
xor
stos
aaa
adc
xor
sbbl
movsl
jecxz
jp
xor
sub
pop
mov
inc
xchg
mov
test
mov
adc
or
jb
or
dec
dec
sbb
and
es
sbb
fs
xchg
adc
cld
adc
or
push
sub
jbe
jae
ss
or
and
jns
and
das
pop
stc
lret
or
add
leave
and
jae
push
pop
scas
js
dec
hlt
pop
sub
mov
cmp
jl
mov
scas
xor
jge
jg
adc
push
ljmp
sub
lcall
mov
lea
xchg
fwait
inc
mov
inc
inc
into
in
sbb
idivl
stc
add
xor
imul
and
sbb
mov
mov
icebp
stos
daa
out
out
sbb
jns
xlat
sbb
xor
and
iret
mov
mov
and
lret
dec
je
fstpt
out
jns
adc
icebp
inc
pop
lahf
mov
icebp
mov
xchg
mov
inc
xchg
push
or
ret
clc
cli
pcmpeqb
pop
mov
xor
adc
mov
sbb
sbb
mov
aaa
push
push
dec
inc
adc
movsl
les
movsb
lods
lock
sub
sbbl
lock
mov
in
cli
adc
sbb
je
sbb
fwait
daa
xor
mov
xor
fsubs
dec
push
aas
or
or
push
leave
jae
pop
jle
mov
jo
lock
bound
in
pushf
or
and
sbb
aas
imul
les
stos
xchg
andb
jge
enter
aas
dec
aad
jge
std
pusha
pop
add
pop
cmpsl
nop
lds
scas
cmp
ret
or
adc
pop
in
cwtl
aaa
arpl
mov
add
xchg
call
xlat
push
adc
xlat
fcoml
cmp
xchg
mov
or
adc
and
add
adc
das
data16
loop
cmp
aad
cltd
loopne
sarb
push
push
xchg
xor
call
lahf
inc
push
mov
lcall
dec
xor
iret
inc
decb
push
push
pop
sahf
push
mov
cld
xchg
jne
ljmp
jnp
cmpsb
mov
pop
xchg
rcll
mov
pop
jb
sbb
xor
sub
mov
xlat
mov
jle
outsb
insb
sahf
sbb
movsl
sbb
xor
jae
mov
mov
es
mov
repnz
push
cmpsb
pop
mov
cmpsb
mov
js
ret
sub
imul
sub
add
fisubrs
jo
dec
icebp
cltd
stos
xor
leave
loope
mov
rcl
cltd
insl
ret
iret
hlt
pop
sbb
xchg
add
mov
jne
push
das
int3
sub
rcrl
mov
ficoml
mov
testl
jge
roll
daa
addr16
rcll
mov
enter
lret
in
adc
jge
sbb
or
mov
push
push
lods
test
iret
pop
lock
popa
pop
mov
data16
das
mov
add
xchg
or
mov
xchg
aaa
xchg
pop
add
push
sarb
aaa
popa
inc
push
cld
scas
stos
add
shrb
xchg
adc
je
sub
or
cld
ret
push
lcall
testl
enter
shll
dec
lea
mov
jbe
mov
lock
cmp
pop
outsb
push
data16
pop
adc
outsl
leave
cmp
arpl
addr16
int3
outsb
mov
mov
push
outsl
xchg
shll
mov
in
stos
push
xchg
divb
orl
lcall
pop
adc
outsl
pop
mov
pop
mov
mov
xor
mov
js
in
or
sub
jmp
xor
push
pop
lret
xchg
out
shl
xchg
movsb
xor
jle
push
in
jbe
push
enter
jo
movsl
outsl
and
adc
stos
add
jbe
out
pop
lahf
gs
rcll
sbb
jne,pn
xchg
fsubr
dec
mov
cwtl
xor
lcall
scas
lret
jbe
icebp
inc
ds
in
sahf
mov
add
and
les
addb
bnd
add
pop
mov
mov
mov
pop
push
mov
fisttpll
mov
fs
adc
cwtl
rorl
mov
jp
or
nop
mov
mov
pop
in
jb
mov
std
cli
pushf
add
mov
push
jbe
shrb
jl
mov
sbb
xlat
pop
add
mov
sub
push
push
xor
inc
popf
cmp
dec
dec
push
add
mov
sbb
sahf
sub
or
aad
mov
mov
mov
or
cwtl
in
inc
and
dec
inc
int
cld
test
adc
xchg
xchg
out
aam
mov
aas
out
leave
push
loope
pushf
out
push
cmp
insl
adc
test
mov
pop
test
pop
roll
fdivr
out
sub
stos
loop
cmc
cmpsb
jp
mov
dec
pop
dec
sbb
aad
push
xchg
fcoml
mov
shl
mov
pop
mov
call
mov
add
mov
js
stos
mov
rolb
mov
push
in
popf
imul
adc
xchg
hlt
lret
and
inc
aas
mov
xor
xchg
dec
cmp
cmp
or
cmpsb
sbb
pop
out
rorl
mov
mov
mov
imull
clc
js
popa
push
loop
fwait
jb
test
test
mov
scas
pop
push
jp
add
pusha
int3
out
jge
rcrl
pushf
mov
cmp
rcr
xor
mov
mov
add
jcxz
ss
fwait
aad
lret
or
adc
sub
pop
mov
out
pusha
fs
xor
cwtl
roll
mov
push
mov
rcl
int
mov
pop
aaa
mov
shl
dec
ret
dec
ret
and
insl
ss
orl
inc
mov
sub
mov
int
stc
and
shrl
sub
jmp
lods
rclb
adc
pop
xchg
add
popa
mov
pop
ds
jne
push
jg
and
inc
adc
push
sbbl
push
mov
sti
iret
movsl
loopne
cltd
or
xchg
insb
push
popf
imull
imul
and
ja
adc
push
sub
out
int
ret
mov
sub
xchg
cmp
insl
dec
push
in
jb
repz
or
xor
jp
aam
repz
sbb
add
dec
test
pop
bound
aaa
adc
stc
cmpsb
inc
and
pop
lea
mov
or
idivl
push
mov
mov
and
lock
test
add
cs
mov
cs
add
pop
shl
mov
insb
mov
inc
outsb
in
cmp
dec
xchg
arpl
loopne
pop
imul
inc
scas
adc
loopne
cld
adc
adc
jae
fwait
aam
popa
adc
sbb
sar
push
shr
or
xor
aaa
call
lret
dec
pop
pop
fcompl
inc
sub
xor
add
push
sub
pop
mov
mov
lods
hlt
aad
and
enter
loop
lods
and
jp
call
xchg
out
mov
fmull
inc
fadd
enter
les
or
loopne
and
dec
insl
mov
lcall
lods
add
sahf
shll
inc
jmp
mov
or
daa
lcall
dec
popf
or
xchg
sub
lods
nop
pop
inc
pop
or
fldenv
push
bound
mov
insb
mov
cld
push
inc
repnz
push
fs
test
sbb
jmp
cmp
pushf
sbb
push
js
inc
test
mov
inc
std
or
adc
movsb
cltd
add
mov
lock
andl
and
ja
sbb
fldcw
dec
lods
adc
dec
mov
xchg
jae
xor
out
scas
push
cmpsl
pusha
adcl
inc
inc
testl
inc
out
jecxz
scas
pop
rolb
sub
mov
and
sub
jbe
cld
sub
or
mov
inc
out
lods
je
push
aaa
shll
sbb
movsl
adc
popf
mov
xor
pop
cmc
mov
xor
sub
aaa
fcompl
push
mov
mov
aaa
outsl
adc
jbe
movb
cli
mov
mov
ds
mov
in
ds
adc
or
or
mov
fidivl
push
outsb
push
int3
std
mov
out
xchg
jp
in
xchg
inc
pushw
and
inc
sub
insl
jne
pop
outsl
call
pop
xlat
and
mov
fmulp
int3
clc
pop
xchg
aam
push
mov
loop
dec
hlt
cmp
ja
add
mov
dec
adc
sub
jnp
or
jecxz
jp
push
mov
pop
inc
or
dec
add
in
jmp
roll
ret
cmp
sbb
loopne
orl
cmp
mov
das
jbe
add
dec
bound
add
test
cs
or
cwtl
add
popf
sbb
add
adc
movsb
xchg
push
out
fwait
mov
dec
mov
mov
mov
popa
popf
int3
jb
dec
sbb
jmp
mov
ret
aas
jmp
cmpsl
or
inc
lret
aas
ret
jg
xor
test
in
add
mov
add
leave
enter
xchg
pusha
ja
add
movsl
or
or
cmp
xchg
mov
arpl
pop
outsl
adc
aas
test
and
int
lcall
enter
dec
lods
or
into
mov
popa
fistpl
dec
cmc
push
and
fildll
fwait
push
jmp
inc
ds
or
aas
ret
test
shll
loop
inc
inc
adc
leave
xor
and
enter
xchg
cmp
sti
jl
mov
out
and
xchg
and
sub
ljmp
clc
or
mov
xor
movsl
loopne
sbb
mov
arpl
inc
pop
iret
in
icebp
sbb
test
adcl
pop
aaa
push
push
and
shl
mov
or
decb
xor
fcmovb
ficoml
nop
mov
mov
hlt
arpl
fists
daa
mov
rcll
nop
bound
out
imulb
adc
int3
mov
stos
js
ret
pop
mov
enter
push
clc
dec
dec
push
or
xchg
lret
cmpsl
shl
push
jns
cmp
pusha
or
es
add
pop
sbb
mov
xor
jb
pusha
imull
jle
push
xchg
nop
daa
int
imul
pop
pop
movsb
and
jnp
sahf
clc
push
jbe
sub
push
pop
repz
cmc
xchg
pusha
cmp
jae
icebp
stc
addr16
insb
sbb
out
repnz
cwtl
das
aad
test
cltd
aas
fisubrl
mov
cltd
sub
jns
push
pop
sub
pop
cmpsb
mov
loopne
fmull
loope
sarb
int
aad
push
icebp
hlt
xor
xor
sbb
repnz
xchg
frstor
add
repz
xor
inc
stc
in
jo
xlat
in
negb
inc
or
les
addb
lret
movsl
cmp
jnp
les
xchg
mov
sbb
out
fs
pop
scas
pop
adc
sbb
push
jl
pop
xchg
test
adc
pop
dec
jmp
ss
inc
movsb
cmc
mov
xchg
insl
aam
in
ret
sbb
jge
out
ret
mov
ja
cmpsb
dec
lods
pop
ror
outsl
mov
out
mov
lahf
out
movsl
adc
cli
cld
mov
sub
out
jge
mov
adc
dec
shr
cmpsb
ja
aad
in
jmp
jbe
testl
push
sahf
iret
push
or
in
insl
rcrb
inc
unpckhps
dec
mov
mov
adcl
mov
dec
pop
or
rcr
lahf
cmc
lret
dec
sbb
or
jmp
loopne
repz
inc
xchg
out
outsb
jl
add
dec
lock
pop
dec
sbb
incb
mov
mov
sbb
cmpl
jmp
jmp
lcall
adc
repz
sbb
jno
je
sar
scas
jmp
vpshuflw
hlt
jp
and
lock
mov
xchg
imul
or
jne
pop
shlb
mov
ficoms
scas
dec
out
add
mov
mov
or
out
shll
sub
in
loop
xchg
aad
adc
test
ljmp
cmc
push
repnz
js
andl
or
into
test
aas
dec
subl
and
mov
imul
rclb
cmp
ret
adc
or
pusha
out
ljmp
pop
int
data16
cmpsl
mov
sub
pop
outsb
add
jge
sub
mov
xor
sbb
in
lds
xchg
pop
leave
sbb
fildll
data16
cmc
lock
cs
xor
gs
add
push
push
je
sbb
imull
cmc
fstps
lret
and
int
and
cmp
xchg
cmp
popa
scas
mov
movsl
fldt
xchg
cwtl
jne
pop
pop
cmp
addl
dec
xor
inc
jg
push
or
jno
sbb
je
out
popf
dec
cld
out
sahf
mov
mov
ficompl
pop
inc
inc
fs
mov
pushf
leave
repz
inc
fdivs
iret
adc
nop
or
mov
push
popf
cli
xchg
sub
mov
mov
sub
int
dec
jmp
and
xor
shr
in
call
lods
ja
insl
push
push
repz
lea
dec
je
xchg
aaa
stos
std
pop
arpl
insb
in
cmp
aas
lods
stc
js
push
sbb
adc
es
jecxz
cmpsb
sub
mov
jae
int3
les
cmpsl
or
lock
aas
adc
andb
cmpb
je
fs
fstpl
push
lret
loop
fdivl
sub
lea
addl
aad
push
add
dec
mov
cs
insb
pop
lds
mov
push
dec
dec
shlb
es
sahf
and
push
sub
adc
mov
loop
jecxz
and
cmp
pop
imul
rcl
push
rcr
inc
xchg
ds
sbb
ds
cltd
test
mov
add
mov
jmp
sub
xchg
mov
cmp
pop
cmp
mov
mov
enter
mov
xchg
jne
lcall
add
or
ret
mov
cltd
lret
mov
fisubs
daa
dec
mul
fsubl
add
push
lahf
mov
sub
dec
jge,pn
sbb
loopne
xchg
cltd
test
and
aam
rorb
imul
xor
xor
add
jb
sub
adc
pop
int
lods
stos
mov
sub
jne
lods
mov
push
xchg
cmp
mov
mov
sbb
sub
test
inc
outsl
cwtl
cmp
push
jg
mov
cltd
dec
mov
mov
jecxz
ljmp
add
hlt
fnsaves
mov
push
dec
jno
pushf
add
cli
aad
sbb
into
xchg
scas
cwtl
in
mov
sbb
repz
pop
jp
mov
or
sbbl
data16
mov
je
ja
bound
outsb
loopne
in
pop
or
xchg
pushf
mov
sbb
inc
cmp
sbb
inc
mov
mov
les
stc
mov
js
mov
ret
cli
mov
stc
add
data16
push
rcrb
dec
and
mov
fnstsw
mov
ss
out
sub
jle
loope
aaa
sbb
jnp
ja
mov
mov
lods
jns
jae
mov
jl
pop
adc
fs
lcall
adc
js
nopl
stc
in
xor
pop
xchg
push
or
cmp
push
sub
or
jbe
xor
je
repz
jge
ljmp
int
mov
mov
notb
dec
fisubrs
jns
or
cmc
nop
out
mov
inc
adc
int
adc
mov
mov
movl
mov
mov
mov
xchg
dec
outsb
adc
clc
and
js
cmpsb
xchg
lea
stc
lret
mov
in
fwait
insb
int
add
and
mov
dec
leave
fsubs
xor
ljmp
sub
push
and
bound
popa
in
fsts
xor
daa
add
movsb
repnz
repnz
push
aam
add
out
jmp
jne
call
sbb
cmp
lret
jl
fldl
mov
add
lods
test
pop
mov
xchg
sahf
push
push
sbb
inc
push
push
dec
dec
out
je
cltd
push
jae
xor
pop
cld
shrb
xor
dec
lock
sbb
lret
cld
or
jns
ss
rcr
jmp
icebp
jmp
iret
stos
add
xchg
adc
fwait
push
subb
xor
cwtl
jge
addr16
jecxz
stc
out
daa
dec
outsl
mov
inc
inc
fidivrl
test
or
push
pop
pop
sub
int3
lret
cmpsl
pop
mov
add
fs
out
mov
dec
add
dec
lods
fcmovnbe
jmp
sar
lcall
xchg
adc
insb
fdivs
test
pop
mov
popa
popa
mov
sub
fs
xor
aas
dec
sarb
dec
inc
ror
push
stos
xor
clc
addr16
data16
pushf
lahf
mov
jbe
cmp
jg
leave
loope
les
stos
sbb
cwtl
mov
fs
add
mov
jne
out
shr
aaa
cmp
inc
mov
jge
iret
xor
rcl
push
ret
into
pusha
jg,pn
movsb
xor
popf
and
pop
pop
pop
stos
jp
shl
add
int
dec
cmp
imul
push
sti
mov
and
and
jbe
enter
push
daa
shrl
and
and
insl
jg
dec
fcomi
mov
repnz
imul
adc
inc
into
hlt
xor
data16
out
es
and
sbb
sbb
loopne
sub
xchg
call
pusha
pop
cs
add
fwait
mov
xchg
jecxz
pop
scas
rcrl
outsb
ss
outsl
push
into
add
pop
add
adc
add
jmp
pop
fldenv
cli
rcrl
cmp
push
sub
xor
sbb
mov
xor
sub
xor
push
inc
push
fcmovbe
ljmp
stc
add
xchg
adc
test
xchg
daa
loopne
and
sbb
sub
push
aas
inc
push
mov
sbb
cmpsb
dec
movswl
mov
or
mov
adc
pop
add
jb
inc
cmp
and
das
pop
sti
pop
push
aas
dec
mov
lds
sub
pusha
and
inc
inc
sbb
sub
push
mov
pusha
or
bound
stos
insl
stc
push
mov
push
sbb
pop
inc
push
jecxz
mov
popa
pop
xor
or
jb
aas
inc
pop
mov
pop
jp
repnz
sbb
out
addb
jnp
pop
mov
pop
add
or
rclb
and
fsubrs
loopne
xchg
loopne
and
hlt
insl
or
adc
inc
popf
aad
dec
inc
cmp
inc
in
lret
adc
dec
stc
inc
push
aam
pop
xor
xchg
pop
mov
nop
dec
sub
call
cmpl
out
cmc
jg
test
popf
dec
ss
lods
fbld
and
pop
aas
lea
dec
and
push
fdivs
adc
pop
jg
xlat
insb
lods
cld
mov
aam
or
xorb
in
dec
mov
out
loop
push
lds
or
das
sbb
jle
fdivp
into
popf
pop
dec
inc
aaa
push
adc
sbbl
push
add
lds
inc
adcl
test
pop
mov
xchg
add
push
pop
push
sub
mov
sbb
inc
outsl
lock
xor
cmp
pop
sbb
mov
and
dec
test
out
jno
cmp
jle
xor
xchg
stc
popf
ret
inc
mov
repnz
xchg
mov
lods
jle
dec
fldl
sub
pop
mov
fmuls
inc
sti
pop
xchg
in
sbb
stc
out
mov
mov
mov
and
adc
adcb
or
pushf
into
mov
fistpll
pusha
mov
js
adc
jns
xchg
xor
mov
iret
je
pushf
out
pop
push
jecxz
push
xor
push
sbb
dec
outsl
in
lods
stos
pop
xor
adc
pusha
push
scas
and
testl
jg
nop
pop
mov
dec
test
xor
incl
ja
mov
xor
insl
push
cmp
cmp
test
jecxz
iret
adc
fs
fistpll
cmpl
gs
or
push
jb
push
lahf
jb
and
insb
xchg
cmpsl
xchg
test
imul
imul
jns
sbb
and
mov
out
jae
mov
inc
cmp
insl
leave
push
push
es
outsb
repz
ljmp
ss
in
loope
xchg
or
jae
test
cltd
push
and
ja
aad
jno
sbb
jl
xorl
cmp
insl
xor
push
js
jbe
cmpsb
sbb
mov
xchg
fstps
inc
ret
cmp
xchg
popf
out
xchg
adc
out
repz
cld
incl
inc
push
daa
pusha
mov
leave
outsb
popa
xchg
push
xchg
sub
mov
inc
adc
lea
pop
insb
dec
or
int3
jne
jns,pn
loop
mov
add
push
repz
pop
mov
push
pop
test
jbe
lock
out
cmp
cli
movsb
sbb
lret
test
in
mov
cmp
cmp
sti
or
insl
push
push
mov
xor
int
popa
leave
inc
popa
inc
xlat
nop
les
adc
pop
mov
leave
pusha
xchg
jle
cld
notb
add
test
or
xor
sub
xchg
pusha
sub
cmpsb
cmpsl
fnstsw
fcomps
fsub
cmc
outsl
jle
and
push
popa
insb
jmp
xor
pop
inc
mov
xorb
cld
nop
pop
int3
pop
or
mov
mov
gs
nop
inc
shrb
add
push
pop
push
sbb
fimuls
jo
mov
push
insb
cmp
js
xchg
mov
adc
pop
mov
mov
sub
pop
in
sar
lea
cmc
push
mov
loope
add
dec
test
lret
sbb
dec
push
fucomi
dec
ja
mov
fmuls
lfs
mov
dec
call
add
cli
mov
mov
xlat
test
lds
cmp
or
enter
sub
cs
cmp
scas
inc
dec
pop
out
test
addl
rcl
jmp
dec
inc
imul
xorl
mov
cmpl
push
adc
jb
nop
sub
sub
loop
fstp
mov
push
fwait
inc
int3
mov
ret
ds
mov
pop
shl
ret
roll
mov
push
lret
jle
and
xchg
int
sbb
mov
out
cltd
stc
fdivs
mov
jmp
loop
jnp
out
icebp
jp
iret
mov
pop
dec
leave
insl
cs
sti
bound
rcll
cmpsb
and
jge
sbb
sub
pushf
mov
mov
stos
add
xor
popa
cmpsb
dec
dec
sbb
mov
jb
xor
xchg
cmp
clc
fldt
sub
cli
dec
lahf
dec
iret
jp
mov
sub
or
psubd
cmp
gs
cwtl
jp
gs
pop
jnp
jbe
dec
fdivs
int3
leave
stc
divb
sti
pusha
mov
pop
add
sar
dec
ret
xor
jmp
and
push
test
push
or
popa
daa
lea
add
pop
cmp
mov
adc
aaa
inc
ret
icebp
or
inc
nop
add
lods
and
cmpsl
push
xchg
andb
xchg
insl
push
adc
push
insl
dec
jl
je
sbb
push
les
push
cmp
loopne
fadds
inc
incl
pop
into
stc
iret
add
xchg
or
dec
adc
or
fidivs
push
jns
jne
xorb
pop
mov
cmpl
cmpsl
daa
in
lretw
jbe
addl
xchg
cmp
dec
pop
xor
rcrl
cli
sar
ficoml
sti
dec
js
cli
fmuls
orl
sbb
mov
shll
xor
mov
jno
pop
cmp
jae
mov
mov
mov
test
adc
mov
mov
lret
bound
xchg
sub
jbe
js
sarb
mov
jecxz
out
or
stos
cmp
xor
cmp
mov
enter
std
outsl
ds
test
frstor
jbe
push
mov
in
scas
mov
inc
gs
pop
jge
in
xchg
rcrl
in
ss
shll
adc
nop
loop
push
lret
lcall
sahf
mov
mov
sti
or
sub
mov
aas
lods
sub
dec
adc
cmp
push
aas
idiv
or
pusha
xor
imul
out
stc
fldcw
repz
enter
inc
popa
rclb
jecxz
hlt
out
sbb
cmc
jno
movl
pop
push
jecxz
push
outsl
ja
in
scas
xor
add
ret
int3
mov
clc
movsb
mov
xchg
mov
push
mov
and
jbe
fwait
imul
stc
mov
sub
mov
xchg
decl
mov
jge
cmp
mov
pop
pop
imul
int3
sbb
sahf
in
scas
mov
add
lock
addr16
mov
mov
pop
cmp
mov
push
or
mov
and
jmp
pop
jo
out
sbb
xchg
fidivrs
or
push
outsb
xchg
adcl
cld
pop
orb
mov
mov
lret
sahf
pop
or
mov
jne
popf
ret
ret
out
mov
mov
cwtl
int3
inc
stos
xor
cmpsb
push
jno
sub
sahf
pop
dec
cwtl
int
xor
imul
inc
or
pushf
pop
add
fistpll
cmp
add
sub
sbb
cmp
mov
stos
mov
xor
sub
jmp
mov
mov
test
iret
cmp
test
sub
and
scas
pop
fmuls
push
data16
and
imul
pop
flds
sbb
push
mov
test
jle
into
push
ss
pop
fmulp
push
int3
mov
mov
xor
cmp
pop
cld
js
daa
andb
and
mov
dec
pop
xor
jge
push
xor
xchg
pop
dec
dec
in
aam
jbe
sbb
xor
xchg
pop
jecxz
dec
call
push
addr16
cmp
sub
dec
mov
in
cmp
test
ret
cmp
xchg
or
sti
aad
lcall
aad
push
dec
js
pop
es
pop
mov
hlt
popa
mov
ja
sbb
lods
fwait
cli
mov
lret
push
adc
dec
cwtl
or
push
cmp
addr16
xchg
pop
addr16
pop
adc
cmp
sbb
call
mov
jmp
add
pop
push
dec
daa
and
cltd
pop
jl
mov
test
mov
ret
sub
mov
jnp
cld
adc
idiv
xor
cltd
fisubl
push
test
inc
cltd
es
das
jne
mov
cld
inc
jmp
dec
push
pop
fsubs
pop
sbb
out
inc
jg
mov
or
push
sub
rcrl
mov
ja
cli
and
jmp
addr16
mov
add
in
jmp
cltd
lahf
aas
add
lods
fisttpll
mov
rcrl
xchg
push
clc
lcall
jg
nop
rclb
hlt
add
sbb
in
jbe
in
testb
jmp
pop
push
sbb
and
jle
sub
sub
pushf
cmpb
pop
mov
cmpsb
out
and
mov
push
hlt
dec
scas
xchg
stos
addr16
mov
andl
xchg
lea
adc
sub
dec
xchg
jecxz
pop
pop
xor
shl
pop
mov
jmp
add
adcl
xchg
cmc
mov
es
pop
mov
add
je
popf
cmpsb
mov
cmp
lods
add
stos
les
mov
adc
call
cmpsb
ds
test
movb
js
cwtl
dec
mov
jmp
adc
gs
lods
dec
jmp
pusha
jnp
push
mov
mov
sbb
xchg
push
jne
add
and
dec
cwtl
and
push
or
enter
cmp
pop
dec
movsb
stos
mov
leave
mov
pushf
dec
cld
sub
wbinvd
je
aad
iret
popa
out
cwtl
mov
bound
push
dec
push
lods
and
push
ljmp
mov
scas
dec
lret
ret
sub
add
or
fs
loop
icebp
jmp
cmp
jecxz
xchg
pop
loopne
cmp
or
cmp
shll
inc
test
inc
push
in
mov
push
xchg
dec
add
add
ss
fdivs
sub
add
sti
xchg
mov
xchg
std
pop
lock
xor
fidivs
pop
dec
ljmp
cmp
fsubr
mov
dec
xor
dec
in
test
mov
test
and
adc
or
daa
in
mov
rcrl
pop
and
adc
faddp
out
aad
and
dec
mov
sub
cld
leave
mov
ret
sub
xchg
xchg
cmp
mov
dec
out
inc
mov
mov
int
dec
cli
aad
ret
js
adc
loopne
xor
cmp
jecxz
mov
jg
sub
or
jns
pop
mov
sub
push
sbb
hlt
test
aad
inc
outsb
add
mov
fisttpl
shrl
or
fs
and
adc
ss
pop
inc
mov
es
adc
push
jnp
in
adc
adc
mov
push
mov
or
jo
fwait
in
push
mov
xchg
pop
ss
cli
imul
test
mov
or
xor
aad
adc
shrl
fmul
xor
rorl
xchg
in
xchg
jo
outsl
insb
int
arpl
sbb
inc
mov
daa
jmp
fs
in
push
cwtl
jbe
jbe
dec
push
jge
stos
jp
push
arpl
jecxz
loopne
jbe
jg
mov
push
sub
inc
and
out
mov
xlat
dec
add
xor
and
or
mov
jmp
jl
pop
mov
mov
or
mov
stos
leave
fiaddl
and
jmp
mov
jle
scas
jge
inc
andl
push
and
hlt
aaa
pop
mov
dec
subl
shl
mov
hlt
iret
sbb
bound
xchg
add
cmpsb
inc
push
daa
fstps
es
cltd
mov
inc
les
push
lock
int
sbb
inc
fbld
mov
cs
call
cld
push
lds
cmp
xchg
jae
outsl
push
cmp
xchg
addl
loope
outsl
mov
out
rcr
dec
dec
jo
pop
test
je
in
fs
dec
nop
cmpl
xor
lods
lods
xchg
out
push
or
inc
sbb
clc
out
jb
jmp
pusha
ret
ljmp
mov
lods
aad
jecxz
cli
xchg
mov
loopne
outsl
xchg
fildl
sub
scas
ja
or
jae
iret
xchg
lret
in
xlat
ret
sub
pop
iret
mov
push
inc
sbb
add
and
sub
repz
mov
mov
jp
sub
iret
dec
jnp
add
dec
jmp
xchg
enter
adc
jae
xor
xlat
inc
push
cmp
pmulhw
adc
fwait
sub
xor
sub
adc
inc
pop
test
xor
repnz
mov
jle
cmp
inc
ds
add
mov
jecxz
or
dec
aas
sahf
xchg
jne
test
jge
mov
lret
aad
dec
fdivl
mov
cmp
cmp
mov
adc
push
xor
lock
jb
shll
das
bound
xor
or
and
add
data16
bound
mov
shll
adc
mov
cmpsb
lret
push
lea
or
pop
jp
ret
and
pusha
push
test
fwait
in
add
mov
out
lret
inc
stc
js
paddusw
ret
adc
push
es
adc
sbb
jecxz
xor
pop
xlat
mov
sbbl
fldt
les
rcll
icebp
test
fcoml
mov
lock
dec
cmp
nop
dec
and
jnp
inc
mov
roll
clc
loop
add
pop
mov
bnd
xor
mov
lea
lea
scas
cltd
cmpsl
or
and
and
jbe
out
pop
adc
out
aas
sbb
pop
adc
fsubrs
dec
js
das
sub
push
out
push
testl
dec
push
stos
aam
fwait
lea
jns
popa
push
sarl
jnp
lock
jo
push
xor
mov
in
xor
jno
lret
or
and
jecxz
cmp
push
push
jb
sbb
adc
inc
sarl
jmp
or
testl
lds
xor
mov
orb
ret
repz
aad
fwait
jge
data16
adc
mov
mov
push
xor
loopne
and
cs
push
into
ljmp
jno
sbbl
cld
rclb
jecxz
cmp
mull
xor
inc
shlb
push
xor
pusha
adc
mov
aas
or
adc
rclb
push
mov
mov
mov
cmp
xchg
sub
mov
pop
dec
pushf
outsl
lret
shlb
mov
hlt
sar
fmuls
xchg
outsb
and
dec
dec
xchg
ja
mov
adcb
push
out
sahf
jb
mov
pop
xor
outsl
mov
push
out
mov
push
idivl
inc
repz
push
shll
and
push
into
adc
out
mov
mov
imul
or
push
ljmp
mov
mov
inc
dec
push
std
dec
inc
mov
outsl
jns
fwait
dec
test
loop
sbb
xor
mov
enter
dec
jg
fucom
in
les
cmp
jae
inc
ret
scas
sahf
push
fisubs
push
lahf
fimull
cld
ljmp
mov
xor
mov
cmp
cli
mov
shll
fwait
xorb
mov
sbb
inc
std
xor
andl
sbb
mov
fsincos
les
jmp
mov
jecxz
arpl
repnz
loope
andb
scas
and
pushf
jmp
lret
and
xchg
push
sbb
mov
pop
pop
cmpsl
dec
inc
dec
add
idivb
mov
mov
bound
pop
push
sub
or
dec
and
cmpb
mov
je
fdivrs
in
scas
repz
mov
adc
hlt
fldenv
mov
push
pop
and
std
lahf
xlat
aaa
mov
mov
aad
dec
xor
aaa
dec
mov
popf
lods
adc
cli
js
fisttpl
imul
inc
call
jle
adc
test
inc
pop
lods
push
inc
sahf
data16
hlt
std
cmp
jnp
jne
adc
sub
mov
cmp
cld
int
je
cmp
shll
jmp
sbb
into
out
sub
mov
aaa
mov
fimull
adc
or
add
inc
lea
mov
lock
pop
fnstsw
cli
data16
out
cmp
jb
mov
jb
js
lea
popf
ljmp
adc
imul
sahf
ja
aaa
jbe
xchg
inc
imul
inc
sbb
xchg
aas
jl
push
fstp
push
imul
xor
push
pop
xchg
mov
fadds
pop
xchg
pusha
sub
aad
push
test
repz
and
std
lea
cmp
aaa
cmp
sub
int3
call
xchg
xchg
imul
leave
pop
xorl
clc
test
js
jbe
int3
push
push
mov
cmp
lods
mov
sub
cwtl
mov
movb
push
add
cld
cli
jnp
adc
mov
push
lret
add
imul
mov
les
jge
cmp
inc
xchg
cmp
stc
xor
gs
call
dec
hlt
popf
sbb
push
in
cli
pop
push
or
push
add
jae
jecxz
leave
adc
loope
stos
stc
loop
int
lods
push
fwait
pop
mov
mov
pushf
cmpsb
jmp
pop
cmp
sbb
add
jge
test
stos
lcall
inc
xchg
into
or
xchg
xor
ljmp
pop
inc
jge
mov
mov
mov
xchg
xchg
pop
fnstsw
scas
stc
stos
jb
es
xor
and
cmc
add
sub
add
push
mov
sub
jecxz
jecxz
xchg
insl
cs
push
adc
fldcw
mov
push
int
ljmp
in
das
in
es
fsubrl
outsl
xor
ret
xor
add
sqrtps
repz
or
les
xor
mov
cli
adc
jmp
rorb
mov
ret
and
mov
push
add
sbb
push
push
and
mov
iret
push
cs
repz
add
mov
pop
cmp
lahf
sbb
lods
sub
cmp
aad
sub
test
sub
mov
cmp
mov
mov
pop
iret
add
sti
sbb
dec
test
inc
rorl
iret
add
int
mov
cmpsb
inc
add
mov
fcmovbe
xchg
je
dec
out
jmp
aad
add
lea
notl
cmpsb
ja
cmp
pushf
adc
mov
pop
xchg
pop
cmp
aam
mov
add
inc
push
jne
xor
mov
adc
sub
add
dec
lea
ljmp
fldt
jmp
lcall
loope
or
lea
popa
loope
ja
leave
test
js
xchg
jae
and
das
or
loope
aas
leave
push
push
mov
hlt
and
mov
and
insl
pop
and
insl
or
dec
lret
repz
inc
xorb
mov
cmpsl
push
inc
idiv
push
xchg
repnz
mov
mov
or
push
pop
movsl
pusha
inc
hlt
lods
sub
push
lods
pop
subl
cmpsb
dec
repz
cmp
arpl
push
mov
mov
cli
rolb
pminsw
sahf
jbe
jmp
mov
mov
in
jno
push
pop
dec
and
out
xchg
rorb
sbb
dec
fldenv
or
or
pushf
xchg
push
gs
loop
imul
mov
sahf
add
cltd
insl
bound
test
call
les
test
push
gs
test
xchg
pop
mov
hlt
jns
xchg
shll
shl
push
int
xchg
push
leave
mov
push
add
lret
and
cltd
mov
sub
dec
xor
adc
or
shl
dec
adc
push
pop
jmp
dec
inc
jns
mov
or
daa
fisubrs
hlt
and
mov
mov
scas
repnz
inc
lahf
or
inc
push
cmp
push
pop
dec
bound
cmpsl
imul
mov
mov
mov
jae
jne
in
pop
out
xor
jbe
and
jmp
jecxz
ja
std
pop
scas
pop
aaa
cmp
cltd
dec
xchg
xchg
outsl
inc
cmpsl
xchg
jo
cmpsb
mov
lret
mov
sub
cmp
mov
call
mov
xor
ret
push
arpl
push
scas
cs
jmp
dec
dec
in
dec
inc
aam
shll
dec
repz
cltd
test
ss
stos
sub
dec
adc
insl
roll
fisttpl
adc
jae
jle
adc
das
adc
pusha
mov
sub
movsb
shl
iret
mov
frstor
das
inc
sbb
inc
in
leave
pop
xchg
mov
adc
dec
cltd
or
cs
icebp
cmpl
jecxz
inc
xchg
call
xchg
push
aaa
xchg
shlb
cmp
lods
jmp
xor
imulb
sbb
aad
push
inc
xchg
inc
sbb
cwtl
xor
cli
mov
dec
test
pop
mov
xor
popa
movsb
stos
xchg
mov
jle
inc
popa
lret
or
push
out
cmp
push
arpl
loop
out
sbb
aad
push
cmp
in
nop
mov
mov
das
mov
mov
sbb
xchg
push
inc
push
inc
les
movsb
ret
mov
loopne
or
movsl
sti
lcall
add
cs
mov
jecxz
fldenv
out
sub
orb
pop
xchg
mov
jo
xor
add
xor
xchg
push
out
shlb
push
xchg
cmpb
or
into
pop
sbb
push
les
rorl
clc
mov
sbb
mov
add
in
add
mov
xchg
std
iret
push
or
push
popf
movsl
push
out
pop
adc
inc
int
mov
inc
push
movsb
in
xchg
add
sub
int3
sahf
test
mov
inc
or
dec
inc
loope
sbb
movsl
inc
dec
adc
sbb
mov
cmpsb
insl
lds
cltd
dec
xlat
fucomi
ror
add
or
jo
adc
pop
xlat
dec
insl
mov
and
jge
push
adcb
hlt
add
out
lods
adc
and
mov
inc
mov
call
push
dec
cmp
push
movsb
xor
stc
stos
pop
add
fdivrl
jae
outsb
mov
lea
push
aaa
enter
es
sbb
inc
adc
and
into
jl
inc
cmp
mov
push
xchg
adc
xor
into
add
mov
xchg
in
push
mov
add
insb
das
pop
and
mov
mov
push
ds
pop
fidivl
lret
stos
and
hlt
sahf
test
rcll
mov
fldl
and
dec
addl
imul
push
jge
lret
jne
in
mov
adc
lret
xchg
insb
mov
enter
popf
in
sahf
jo
mov
and
mov
in
stos
ret
in
fs
sti
sarb
xchg
scas
imul
sbb
leave
cmp
sbb
mov
add
repz
rcll
add
fmull
mov
mov
out
ffree
pushf
sti
das
add
ljmp
push
and
popf
push
xchg
aad
jge
or
ljmp
sbb
push
leave
aaa
rclb
pushf
jg
outsl
aam
dec
adc
mov
xor
inc
fstl
and
cmpsl
outsl
dec
lahf
and
add
and
shl
icebp
inc
dec
pop
add
cmpsb
fisubl
leave
cmp
ja
xchg
rcll
cmpsb
adc
test
subb
js
mov
fcoml
push
jb
in
out
cmp
call
into
xor
stc
fimull
arpl
xchg
mov
inc
out
sub
sbb
es
adc
repz
lock
lds
sub
mov
pushf
inc
pusha
in
lret
adc
adc
mov
das
add
lock
add
cmpsb
insb
push
inc
mov
js
jns
fcmovnu
fnstsw
gs
imul
fidivrl
inc
dec
dec
cwtl
bound
in
movsl
jne
lds
popf
insl
inc
loope
xor
adc
or
inc
mov
lds
in
rcll
inc
insl
adc
add
outsb
add
add
mov
adc
lods
fdiv
push
inc
faddl
xor
sbb
dec
xchg
and
sbb
sub
pop
mov
idiv
push
test
sbb
cwtl
and
push
lret
xchg
jbe
or
push
test
dec
clc
jge
aam
pop
lret
jecxz
pop
inc
xor
mov
test
mov
andl
xorb
jae
out
sti
jns
out
fistps
daa
ret
mov
lds
add
loop
lods
lea
mov
adc
in
out
xor
inc
arpl
and
adc
packsswb
aad
es
xchg
push
sub
dec
and
sub
test
lret
and
xchg
mov
not
jns
push
push
nop
in
aad
icebp
and
iret
pop
aaa
mov
ljmp
dec
dec
xchg
xchg
mov
cmp
fcmovnbe
mov
xchg
lea
stos
mov
lods
jl
sar
pushf
sbb
push
pop
pop
cld
es
pop
das
movsl
jns
test
call
push
add
push
pushf
jns
xor
stos
loop
xor
jb
mov
insb
pusha
fstps
mov
incb
mov
and
repz
pop
or
popf
test
xchg
adc
jo
popa
xchg
ss
test
add
xchg
pop
dec
mov
shlb
mov
sbb
lods
cwtl
adc
leave
jl
jl
fidivrl
lret
lret
xorl
rcll
mov
mov
sub
pop
xlat
faddl
sub
xchg
add
cltd
outsb
inc
xchg
insb
imul
aam
divb
dec
push
test
jb
add
and
mov
push
out
rclb
sub
push
mov
inc
cmpsb
inc
push
jecxz
lea
addr16
push
icebp
pop
cmp
stos
addr16
add
lret
mov
xor
mov
mov
inc
dec
inc
sahf
hlt
xor
fucompp
rcr
cs
inc
and
cli
jle
or
push
pop
mov
push
xor
outsl
call
add
jo
jbe
jns
jnp
int3
insl
jmp
fidivrl
test
add
sub
jecxz
jnp
in
mov
mov
les
sbb
lock
mov
fldcw
scas
hlt
ficoml
cmp
or
ret
lret
add
jg
pop
test
pop
xchg
jmp
mov
push
cmp
mov
jbe
roll
aad
ret
lret
test
rcrl
mov
fcmovu
pop
push
mov
inc
decl
lods
mov
sbb
push
jge
enter
mov
xchg
sbb
fcmovne
xor
pop
loop
andl
lods
clc
adc
cmc
xchg
cld
mov
cmpsb
flds
loope
jno
cmp
mov
push
pop
xchg
xor
add
loopne
scas
rcl
mov
enter
lock
imul
popf
clc
inc
loope
jne
lods
xchg
aam
das
cmp
dec
popf
sub
sbbb
xchg
fisttpll
addr16
cld
fisttps
lea
std
jo
mov
push
adc
mov
and
cmp
pop
xor
add
pop
int
inc
xor
jge
add
xor
sub
stos
mov
xchg
repz
jnp
hlt
mov
movsb
stc
nop
push
mov
sbb
jo
inc
mov
arpl
jecxz
xor
or
loopne
out
push
xchg
scas
inc
push
vphsubbw
sbb
pusha
sbb
xchg
sub
push
shl
int3
sub
sbbb
push
jecxz
rcrb
inc
pop
or
aam
std
jne
ret
mov
or
clc
mov
clc
xchg
mov
lret
gs
sbb
dec
orb
iret
jp
sub
sub
jb
roll
lock
or
add
shrl
jg
sahf
and
xchg
jmp
pop
gs
mov
inc
add
push
sti
jb
incl
and
pop
enter
dec
inc
cwtl
lea
out
lahf
jg
loopne
and
int3
sbb
cs
imul
xchg
add
aad
pop
mov
ds
fs
je
test
jae
stos
icebp
fsubrs
add
pop
out
inc
in
pushl
fidivrl
mov
adc
je
jo
or
xor
sub
imul
enter
xchg
insl
push
das
dec
ja
jl
jg
push
sbb
pop
push
jno
add
push
add
push
cmp
movsb
or
clc
cltd
mov
sarl
clc
add
pop
pop
sbb
movsl
lods
mov
adc
inc
add
push
sbb
movsl
jp
add
fs
pop
xchg
push
and
push
fstl
loope
inc
leave
ljmp
adcb
inc
outsl
pushl
or
jl
sbb
mov
adc
mov
cmpsl
mov
lahf
fs
aas
push
ret
push
pusha
jmp
bound
dec
cld
xchg
sub
cmp
mov
lods
add
testl
and
bound
scas
jnp
jno
nop
insb
test
mov
mov
cmovbe
pop
scas
sarb
test
sar
or
rclb
inc
das
add
mov
cmp
les
out
dec
push
mov
ret
movsb
es
bound
aad
jle
jge
mov
enter
lcall
rcr
cmp
dec
shr
fdivrl
mov
push
mov
xchg
or
mov
std
addr16
push
call
lret
sbb
je
inc
jmp
add
push
int
add
cs
mov
int3
xor
or
adc
jne
adc
mov
in
xchg
test
out
sub
or
dec
in
cmp
dec
sub
mov
inc
mov
xor
mov
fbstp
lods
jp
out
shrb
pop
sbb
mov
or
or
sbb
add
inc
ja
mov
add
cmpsb
test
mov
es
insl
adc
push
out
gs
out
sbb
xor
jl
add
icebp
int3
outsb
jmp
sbb
pop
add
adc
mov
jne
inc
pop
pushf
cwtl
insl
cwtl
pop
std
jns
mov
das
cmp
jge
xor
mov
dec
aad
in
sbb
popa
stc
xchg
out
push
mov
cmp
dec
les
std
pop
pop
int3
unpcklps
addl
push
jle
jl,pt
jecxz
mov
mov
jp
test
jle
subb
add
add
and
rorl
cmp
inc
lahf
movsl
or
and
sbb
lods
cld
out
insb
insl
dec
stos
in
mov
cmpl
sahf
hlt
sbb
push
dec
xchg
cld
pop
std
xor
mov
jecxz
or
mov
cmp
jnp
xchg
sub
add
pop
adc
inc
mov
push
pop
int
add
push
pop
mov
mov
push
jbe
push
xchg
in
adc
push
add
neg
cmp
push
loope
cltd
push
aas
cs
orl
xor
cmpsb
repz
jo
push
out
fnsave
lea
dec
dec
sub
mul
adc
enter
dec
jg
popa
push
jmp
push
mov
dec
repnz
mov
and
add
rcrl
aaa
ss
mov
inc
lock
cs
cmp
stos
ds
jo
sub
or
in
lcall
jmp
hlt
push
pop
in
sbb
test
loop
xor
push
jne
ss
and
ss
jb
mov
fmull
sbb
xchg
pop
js
ficoms
jae
stos
enter
and
push
fcomp
xor
xchg
addr16
pop
adc
mov
scas
push
pop
loope
daa
ljmp
test
xchg
ret
test
cld
aad
sub
mov
repnz
enter
inc
sti
cltd
pop
adc
repnz
inc
loope
inc
mov
decb
out
das
mov
shrl
sub
loope
les
or
sub
lods
add
mov
fidivrs
mov
scas
rcll
cmp
addr16
movsb
scas
int
dec
sbb
add
mov
jle
lods
imul
mov
jno
test
or
lcall
xor
popa
lret
shlb
mov
xchg
push
inc
fimuls
test
or
fsubrs
mov
test
rorb
sbb
xlat
mov
sbb
push
adc
mov
ficoms
push
inc
aad
stos
mov
xor
sti
cmp
inc
sbb
mov
test
aas
cmp
sub
cmpsl
push
shrl
aad
cmp
pop
jbe
imul
adc
pop
mov
push
mov
aaa
not
mov
xchg
fwait
and
mov
mov
fisttpl
mov
or
cmp
mull
cmp
rcl
add
pusha
out
arpl
mov
sbb
push
fcomp
insl
fimuls
mov
mov
cmp
or
push
xchg
popf
stc
sbb
cltd
mov
xor
insl
scas
fbld
stos
adc
inc
std
mov
pop
insb
scas
hlt
stc
cmp
std
mov
inc
dec
sub
add
mov
out
mov
fcom
fsubrs
mov
jle
or
clc
push
sbb
xor
shlb
ret
test
in
xchg
mov
sbb
push
mov
cmc
sbb
jae
mov
mov
test
rcl
je
mov
jnp
dec
mov
cli
stos
pop
and
or
mov
jmp
add
stc
lret
pushl
insl
test
pop
movsl
dec
mov
arpl
or
jecxz
adc
in
cmp
sbb
es
jno
repz
iret
and
jb
stc
xchg
push
cmc
aas
rorb
mov
jg
cs
loope
clc
std
cmp
push
push
inc
fbstp
and
cs
outsb
inc
sub
sub
sbb
mov
adc
stc
add
test
out
aam
inc
ficoml
fwait
lcall
lods
out
xor
and
clc
dec
cltd
mov
add
cmc
in
jle
testl
movsb
cli
jns
ret
repz
jg
xchg
mov
push
loopne
inc
sbb
mov
in
pop
test
xchg
sub
jge
mov
adcl
lods
jns
stc
imul
jb
test
pop
push
ljmp
out
ljmp
xor
enter
sub
xchg
jns
int3
lret
int3
or
sbb
cltd
inc
outsb
adc
cmp
xchg
or
xchg
mov
call
mov
add
sbb
dec
repz
leave
fildl
xchg
outsb
enter
fists
jbe
mov
pop
or
orb
xchg
loope
mov
js
ffree
xchg
mov
lret
jmp
test
dec
push
enter
adc
xor
sbb
ss
testl
imul
mov
ss
xchg
push
clc
mov
jmp
rorl
aas
push
pop
adc
adc
or
jmp
enter
lods
ja
push
scas
pop
bound
stc
pop
jae
mov
call
fwait
mov
and
dec
inc
clc
mov
lea
inc
scas
adc
jne
fwait
pusha
fs
cs
rcll
ljmp
and
out
xorb
push
stos
repz
lea
add
fst
cmp
neg
loop
xor
jge
sbb
out
sbb
loop
and
mov
les
lahf
aaa
or
push
pop
cltd
sub
test
daa
fucomi
xor
lahf
and
push
dec
mov
in
test
cld
movl
xchg
push
sub
das
das
in
int
int3
and
xchg
test
cs
jg
frstor
add
loope
enter
and
ss
fsubl
jmp
daa
pop
jb
sub
inc
flds
cmp
mov
sti
xchg
xchg
inc
pop
ret
adcl
lods
sub
mov
stc
mov
out
pop
dec
inc
push
adc
bound
aam
test
jns
aaa
push
add
xchg
inc
into
notl
jnp
lahf
int
lea
iret
lret
push
add
cs
icebp
cmp
xchg
jg
aaa
scas
fs
mov
call
sub
imull
and
test
push
inc
call
cltd
in
inc
push
jbe
cs
lods
mov
adcb
sti
add
in
int3
inc
mov
jecxz
dec
adc
lret
jge
or
mov
inc
scas
lahf
pop
popf
jo
loop
leave
repz
jle
xor
imul
into
scas
push
lea
adc
fwait
jo
popa
mov
and
insl
lea
mov
rorb
push
sbb
lret
es
dec
addr16
xor
pop
and
nop
adc
xchg
push
pop
mov
jge
adc
and
sub
je
inc
cli
mull
pop
add
push
pop
leave
je
mov
xor
mov
push
xor
imul
test
push
fisttpll
int3
sub
push
or
bnd
push
adc
pop
hlt
sarl
bound
popf
adc
lds
and
or
shrl
out
mov
xchg
gs
or
jmp
outsb
in
popf
xor
iret
addr16
push
adc
stos
in
xchg
and
je
cmp
jle
sbbl
scas
jmp
shl
andb
iret
sub
pop
ret
jp
cmp
dec
add
out
decl
stc
inc
cld
inc
insl
jae
je
mov
inc
pop
pextrw
nop
sbb
ss
nop
xor
xchg
adc
jno
pop
negl
inc
xchg
lods
or
mov
out
inc
sti
pop
mov
aaa
ret
in
pop
loopne
out
mov
cmpsb
xchg
and
add
sbb
sbb
mov
pop
imul
mov
stos
aaa
outsb
hlt
ret
xor
stos
push
pop
push
jl
fidivl
mov
xchg
xchg
bound
sub
ror
mov
insb
push
pop
repz
testb
sub
jb
imul
arpl
jno
cli
inc
adc
int3
mov
enter
jle
adc
xor
icebp
xor
pusha
dec
test
scas
cmp
or
dec
adc
jmp
icebp
hlt
jp
leave
lods
roll
imul
push
fstl
aam
js
inc
jns
xchg
push
lret
rcll
div
mov
pop
add
rcll
cwtl
jb
and
les
pushl
sbb
jns
fnsave
mov
loopne
fisubrl
add
or
sub
leave
pop
inc
aad
mov
popa
inc
sbb
hlt
data16
xchg
lahf
cmp
scas
push
push
pop
cmpsb
test
pop
xchg
jo
sub
loop
xchg
jecxz
stos
stos
cmovge
mov
sti
pop
pop
lods
mov
mov
andl
test
movsb
xchg
lret
push
mov
xchg
notb
pop
fmull
push
xorl
mov
arpl
sbb
inc
or
test
adc
add
inc
pop
aam
jle
pushf
cmp
sbb
cmp
sub
in
or
adc
test
mov
inc
aam
cmpsb
push
pop
sbb
xor
xor
into
ja
jno
and
les
fidivs
int3
ds
outsl
mov
ljmp
lahf
stc
imul
mov
jp
adc
adc
cwtl
subb
cmp
outsl
push
cltd
shrl
rorl
das
pop
out
and
and
dec
dec
data16
movzbl
divb
loopne
and
ret
mov
xor
test
sbb
jne
inc
jecxz
mov
cmp
push
pop
sarl
xchg
pop
push
jp
dec
addb
cmpsb
and
pop
jle
ret
cmp
xchg
lret
push
mov
aam
dec
dec
sub
mov
mov
or
jne
repnz
xchg
std
nop
adc
or
jmp
fldt
add
into
push
loop
mov
sub
pop
add
in
sbb
ret
cmpsl
push
xchg
adcl
mov
in
jp
or
xchg
mov
pop
pop
sbb
inc
mov
bnd
sbb
and
call
and
adc
add
push
lods
les
fstpt
inc
ljmp
pop
daa
or
aam
ss
aam
xchg
jne
xlat
pop
in
cmc
mov
cltd
daa
shrb
pop
pop
cmp
ja
out
aam
out
dec
jmp
xlat
jle
mov
cmp
xor
xchg
ret
ljmp
popa
sti
test
loope
dec
mov
push
cmp
mov
xor
lret
shl
mov
pop
mov
sbb
push
mov
xor
fcompl
inc
mov
leave
shlb
adc
cmpsb
test
and
andnps
out
fwait
mov
mov
out
aas
adc
mov
mov
je
or
push
jb
push
ss
out
jg
je
mov
mov
out
pop
fbstp
insb
jns
and
mov
nop
testl
dec
mov
shrl
rolb
xchg
unpckhps
int
inc
add
jns
mov
idivb
pop
mov
insl
scas
pop
sub
outsb
mov
lea
mov
push
ret
rolb
pop
sub
sti
xchg
mov
sbb
or
push
mov
stc
testl
sbb
fidivs
std
repz
fs
js
sahf
popf
cmpsl
cmp
fadd
in
pop
ss
mov
or
and
fwait
ret
and
call
jno
cli
inc
add
sub
icebp
repnz
mov
mov
jae
inc
mov
mov
lea
jecxz
jns
fsub
pop
mov
lock
dec
sbb
push
vandnps
lahf
and
mov
pop
dec
loopne
fdivrs
adc
aam
fidivl
pop
xor
cmp
adc
and
add
and
and
sub
and
fldt
cli
jne
dec
xchg
jbe
leave
aam
adc
iret
add
iret
mov
shrl
loop
inc
inc
adc
cmp
enter
sbb
mov
cmpb
mov
dec
lods
cmp
lret
pop
imul
and
sub
pusha
out
dec
aad
mov
cmp
daa
pop
imul
add
xchg
or
cs
cmp
mull
mov
orl
dec
ffree
mov
daa
aaa
add
loope
aaa
movsl
popf
or
out
fiaddl
int3
movsl
jmp
mov
int3
scas
fcompl
pop
out
iret
adcb
aad
and
cld
mov
push
mov
jge
cltd
xchg
lea
jmp
xchg
lea
mov
cmp
add
fildl
je
ja
jnp
mov
jb
mov
jnp
das
push
roll
sbb
loopne
lods
insl
sub
imul
dec
stos
push
loop
stos
and
mov
dec
push
push
push
out
cs
cmpsl
js
lret
sub
int
sbb
push
mov
mov
clc
enter
push
and
lds
dec
and
mov
and
push
sub
add
in
pusha
jne
popf
and
push
mov
or
xlat
outsl
pop
daa
push
dec
push
mov
mov
repz
cwtl
push
push
pop
push
push
sar
lret
scas
lds
shll
aas
clc
ja
and
sub
pusha
push
xchg
push
add
pushf
adc
xor
sahf
mov
stos
lcall
push
sub
add
out
mov
pushf
inc
mov
movsb
xchg
insb
mov
fisttpll
and
sbb
stc
push
lds
inc
push
daa
xchg
dec
fnstenv
jns
pop
jmp
mov
mov
mov
xor
fs
aas
cmpsb
mov
cwtl
fildll
mov
xchg
repz
out
pop
mov
sub
cwtl
iret
aam
cmp
test
pop
cmp
ja
out
into
mov
stos
xchg
push
ret
call
aam
cld
ret
test
shrl
jge
icebp
fldt
lds
sub
call
inc
mov
add
adc
sbb
xor
lsl
repnz
icebp
pop
pop
fsubrl
mov
mov
into
mov
mov
jns,pn
and
pop
mov
and
mov
add
fxch
pop
dec
out
dec
cld
sub
dec
dec
mov
ljmp
push
fisttpll
int3
jb
jns
xor
sbb
jecxz
mov
mov
xor
iret
inc
and
pop
sbb
xor
ja
test
mov
les
mov
lret
dec
mov
rol
insb
cmc
gs
pop
in
mov
push
mov
pushf
sbb
sbb
add
and
xrelease
mov
jnp
jbe
xor
push
cmp
inc
inc
or
mov
jge
jge
dec
mov
bound
ret
adcb
addr16
jnp
cmp
add
mov
cmp
add
pop
mov
mov
push
test
pop
ss
mov
pop
movsb
lds
pop
les
adc
shr
mov
xchg
je
add
mov
jo
es
mulb
jne
sti
pop
outsl
in
or
out
iret
pop
shlb
mov
or
js
and
inc
adc
inc
pop
adc
mov
shlb
in
lret
das
inc
or
jae
pushf
xchg
je
repnz
xchg
jge
add
stos
inc
fisubs
cmp
pop
aad
shll
push
pop
cmp
jecxz
sbb
test
mov
push
inc
mov
std
mov
mov
stos
fdivrs
mov
push
js
stos
mov
test
pushf
sbb
mov
xchg
loope
mov
jmp
xchg
mov
rcrb
or
xchg
xor
and
lea
sub
jmp
shlb
mov
daa
je
xchg
lods
movsl
xor
and
sub
mov
mov
xchg
sub
stos
popf
push
ss
inc
add
sahf
fst
and
xchg
mov
icebp
cwtl
mov
lods
mov
and
xor
or
std
ss
xor
enter
aad
jne
adc
inc
pop
pop
in
aaa
xor
cmc
xchg
ja
jmp
and
inc
je
cmpsb
out
cmp
adc
xchg
mov
jns
push
inc
jns
xor
cltd
xor
push
mov
test
cmpb
mov
push
or
js
mov
pop
hlt
pand
cli
adc
jnp
aas
les
pop
lock
mov
dec
outsl
into
jp
insb
pop
add
rorb
dec
lods
dec
inc
jp
dec
inc
lea
pop
xchg
fnstsw
sbbb
out
sub
or
sub
sub
cmp
addb
pop
test
inc
aad
nop
push
sbb
arpl
sub
outsl
mov
push
mov
ja
mov
iret
jmp
jg
mov
mov
jmp
dec
fmulp
xchg
add
adc
mov
jne
pop
fstpl
aaa
xchg
orl
out
cmpsl
mov
xor
or
fnstsw
addr16
add
fcoml
insl
test
lahf
imul
adc
ret
add
jne
or
cmp
lods
notb
bound
cli
aas
jmp
inc
pushf
mov
int3
or
mov
testl
xchg
in
push
bound
sbb
outsb
fists
cmc
push
clc
decb
jecxz
mov
mov
sub
dec
xor
hlt
fadds
ret
xor
jle
es
and
aad
add
pop
jb
push
data16
sbb
fcomps
adc
or
mov
cld
and
mov
shl
push
adc
in
imul
xchg
int
ljmp
ret
sbb
lret
cld
lret
in
js
push
js
shlb
sbb
sbb
push
mov
ljmp
into
pop
jl
dec
mov
dec
mov
sbb
mov
cmp
sbb
jb
lds
xchg
push
nop
sbb
into
xchg
mov
jne
xchg
and
and
jo
cltd
mov
sub
dec
repnz
mov
mov
daa
and
sub
sbb
shr
cmc
mov
aad
inc
fs
pop
jno
ret
mov
mov
loopne
lcall
push
cmp
fistl
cs
mov
dec
inc
into
ja
sub
outsl
inc
mov
fldt
mov
sbb
add
push
daa
xor
lods
ret
push
aas
bts
push
fwait
rorb
shrl
daa
lahf
nop
shll
and
imul
and
outsl
nop
test
fdivl
sub
or
and
nop
push
test
pushl
mov
sbb
sbb
iret
mov
pop
mov
sbb
xchg
inc
push
sbb
das
cmp
popa
or
int3
stc
xchg
cltd
das
aad
in
pop
add
aas
inc
mov
pusha
sbb
aaa
sub
mov
cmpsl
aas
adc
clc
out
add
iret
mov
jle
ljmp
inc
jae
lret
outsb
lahf
pushf
mov
cmp
mov
fiadds
sbb
cmp
inc
lock
ljmp
mov
adc
or
dec
les
gs
mov
inc
call
sbbl
jge
cwtl
outsb
pop
mov
xchg
imul
sbb
jns
clc
inc
push
or
into
std
lods
test
rcll
lods
sbbl
mulb
leave
dec
jnp
push
fistpl
mov
std
or
adc
mov
in
rclb
push
iret
call
xchg
fcompl
sbb
xchg
ja
cmpsl
cmp
das
mov
int
lods
fisttpll
popf
adc
js
stc
push
shr
jge
fistpl
push
mov
xor
ret
mov
call
mov
dec
inc
test
sub
hlt
push
test
sub
out
xlat
dec
jbe
sbb
mov
imul
add
and
ret
pushf
mov
adcb
inc
call
subb
xor
cs
push
out
imul
pop
sahf
je
insb
mov
mov
ret
jl
or
push
adc
jnp
gs
dec
or
xor
xacquire
mov
movsl
mov
out
push
and
cld
mov
lods
in
or
in
lds
mov
xchg
ret
je
iret
std
rorl
jne
in
fs
xlat
fadd
test
jle
xchg
cld
mov
scas
rorb
push
imul
cltd
lea
mov
andb
addr16
mov
mov
dec
insl
jae
mov
push
cmp
repz
out
aad
push
sti
xchg
int3
mov
push
mov
leave
adc
pop
cltd
xchg
jmp
sbb
push
dec
push
cmp
sub
les
adc
xor
dec
test
sub
cmp
dec
in
push
fcom
in
js
or
repz
pop
lods
push
push
mov
mov
mov
sbb
movsb
xchg
sbb
js
insl
scas
push
cmp
jge
pop
mov
jmp
stos
ret
loope
mov
aad
push
pop
jo
test
push
add
pop
cmp
cmp
cmp
mov
ljmp
rclb
mov
outsl
dec
fcoms
add
cmp
sahf
sub
and
cmpb
andl
outsl
mov
add
cmp
cmp
pop
pop
repz
sub
xlat
insl
movsb
and
lods
lea
loop
mov
pop
into
mov
sbb
rcll
dec
dec
fcmove
pop
lahf
push
or
movsb
scas
cmp
add
aaa
sbb
shll
cld
jne
js
sahf
adc
cmpsb
shll
lea
xor
sbb
pmaxsw
ret
add
mov
out
adc
mov
ror
in
arpl
push
cmpsl
mov
mov
xchg
sbb
cmp
pop
in
iret
int
insb
sarb
popa
sbb
inc
push
push
dec
adc
fists
ss
in
clc
popf
fdivrs
dec
or
push
aad
enter
cmp
mov
pop
fidivrs
imull
pop
mov
adc
aaa
mov
dec
pop
inc
cmp
data16
test
inc
pop
dec
jle
xor
div
xchg
jb
gs
push
pop
pusha
mov
mov
int
jno
icebp
mov
xchg
pop
jg
das
mov
mov
dec
xor
and
mov
push
rol
mov
cmp
aad
int
sti
jp
sbb
mov
sub
inc
push
xchg
lcall
xor
outsl
lds
rcll
push
sarb
dec
cmp
repnz
inc
les
movsb
and
cmpsb
dec
mov
sbbb
jnp
les
pushf
mov
into
cmp
arpl
cmpsl
shrb
adc
shll
cmp
sub
test
popa
stc
jmp
pop
jmp
dec
nop
sub
xchg
mov
and
gs
push
ss
mov
cmp
inc
cmp
neg
test
pusha
inc
pop
push
sarl
rcrl
inc
or
das
loop
ss
inc
imul
cmpsl
lds
dec
aad
mov
cmp
mov
push
push
and
pusha
push
jb,pt
cli
jge
inc
or
mov
dec
inc
mov
sbb
jecxz
dec
mov
mov
dec
lods
sub
sbbb
fwait
jle
xchg
fadds
iret
add
sbb
out
imul
dec
aad
xchg
mov
add
xchg
lahf
mov
mov
mov
push
cmc
testl
lds
and
outsl
lcall
xor
sbb
adc
pusha
or
sub
ds
push
popa
mov
mov
movsl
inc
lds
ljmp
jns
pop
fistps
xchg
sub
lret
mov
xor
ss
add
mov
fwait
and
shr
pop
jae
sahf
push
adc
lock
rclb
movsl
js
mov
cwtl
int
rcr
std
xchg
fsubs
mov
mov
repz
push
call
shrb
push
cmp
or
push
sub
outsl
sbb
subl
cmp
push
mov
fadds
ret
subb
test
inc
inc
icebp
jnp
call
add
mov
frstor
ss
add
stos
mov
mov
mov
das
pop
outsl
sub
int3
and
dec
stos
scas
imulb
pushw
packssdw
clc
sahf
mov
jmp
cmp
imul
out
dec
cmp
aaa
cld
lret
push
adc
jb
mov
mov
rcrl
xchg
cmp
fnstcw
lahf
sub
into
test
mov
iret
dec
jno
xor
into
xchg
icebp
test
jle
rorl
popf
jecxz
movsb
mov
jbe
add
push
or
out
dec
mov
inc
aas
test
push
aam
inc
mov
mov
ja
xchg
adc
js
int3
fldt
cmp
int3
sub
jno
pusha
mov
in
add
fcom
es
inc
jp
jg
jl
lds
push
sbb
stc
cmpsl
sar
sub
iret
dec
adc
outsb
xorb
stos
icebp
pop
mov
pop
icebp
add
mov
in
sbb
xchg
mov
shl
movb
leave
jns
jg
jbe
notl
aad
ja
scas
pop
xor
xchg
xor
pop
cwtl
scas
es
shrb
in
inc
and
dec
das
dec
dec
ja
pop
in
push
push
inc
xchg
push
xlat
mov
push
movsl
jg
adc
push
and
std
inc
xchg
xchg
imull
decl
scas
push
int3
and
out
ret
pop
outsb
sahf
mov
and
dec
adc
cmp
lcall
mov
dec
cmp
sub
lret
mov
jge
rclb
aas
mov
lcall
and
and
leave
gs
mov
arpl
inc
xchg
ja
add
movsb
ret
xor
int3
fldt
arpl
sbbb
repz
repnz
push
fists
or
sti
add
sti
sbb
sub
andb
lds
mov
xchg
cmp
sti
int3
sbb
test
sar
das
pop
jns
push
jge
pop
add
mov
scas
or
je
js
in
popa
jmp
adc
push
push
xlat
sub
adc
xabort
fs
sahf
cli
jne
mov
inc
inc
xchg
and
aas
jp
aas
sub
shll
es
cmp
sti
mov
in
add
loopne
addl
lahf
xchg
dec
mov
mov
jnp
popl
gs
fsubrp
sbb
jle
xchg
in
inc
sub
not
xor
insb
stc
push
movsl
jmp
cld
push
and
cli
xor
mov
mov
pusha
adc
xchg
sbb
in
dec
sbb
sahf
iret
ror
lret
repz
testl
or
jb
gs
jmp
adc
fisttpll
push
push
cmp
xchg
xor
xor
nop
inc
dec
inc
in
jno
divb
cmp
jle
lret
pop
mov
call
xor
adc
mov
add
push
jmp
mov
xor
shl
js
out
jmp
ds
jecxz
arpl
push
push
adcb
jge
out
sub
hlt
mov
mov
add
es
jecxz,pt
mov
push
adc
adc
movsb
mov
nop
fsubr
push
xlat
rcl
push
dec
add
xchg
jg
fnsave
movsb
and
int3
jl
inc
pop
ljmp
or
sbb
dec
adc
inc
loope
mov
jle
pop
jg
jns
inc
or
jg
scas
push
out
das
in
arpl
add
imul
or
mov
cmpsb
mov
add
sub
in
inc
fisubrs
sahf
sub
lock
aaa
push
push
cmpsl
sahf
ret
mov
xchg
sbb
insb
subl
dec
mov
add
adc
or
jmp
inc
mov
dec
and
aam
sbb
jl
mov
ret
lock
pop
sahf
aad
lea
das
imul
mov
xor
lcall
iret
push
jb
lods
ds
imul
push
pop
pop
bnd
dec
and
cmpsb
stos
lahf
lods
pop
sub
mov
ss
fwait
dec
xor
add
pushf
cmp
and
and
inc
dec
sub
push
xor
rcl
js
and
out
mov
xor
inc
add
test
mov
nop
ds
pop
sbbb
pop
mov
stos
adc
icebp
cmp
or
adc
sub
loop
mov
arpl
out
mov
das
mov
sbb
cmc
stos
push
add
pop
pop
test
test
arpl
scas
push
mov
push
leave
push
and
jae
cld
and
ror
xchg
inc
xor
idiv
scas
or
xchg
dec
js
push
xlat
jno
ss
xchg
mov
inc
mov
lret
sub
push
callw
imul
dec
mov
mov
push
bound
or
xchg
mov
scas
popa
pop
sbb
in
pop
inc
xchg
fsts
push
repnz
pop
push
add
stos
adc
dec
hlt
cwtl
or
out
es
shll
jne
jge
pop
cmpsb
fdivl
mov
mov
iret
enter
mov
into
test
sbb
mov
in
out
fiaddl
jg
adc
lret
imul
js
xor
dec
push
aam
incl
lods
xchg
and
dec
or
mov
les
xlat
push
xchg
lods
sbb
gs
fnstsw
cwtl
adc
lods
jge
mov
cmp
jb
das
les
scas
lret
aas
movsl
lds
lcall
adc
push
ja
lret
cwtl
jecxz
sbb
xchg
jo
fs
in
adc
cld
cmp
daa
cmp
xchg
hlt
scas
jb
pop
movsl
pop
outsl
sbb
enter
enter
mov
lea
mov
cwtl
mov
test
js
sarl
cmp
cwtl
add
mov
and
lds
adc
add
mov
inc
fisubl
sbb
pop
xor
push
pop
adcl
xchg
dec
pop
pop
ljmp
jle
cmp
mov
sti
dec
mov
ljmp
jnp
int
out
enter
xchg
insb
inc
out
sbb
mov
cmp
test
cmp
xor
mov
dec
ljmp
lock
mov
mov
repz
mov
sbb
mov
movsb
jb
notb
sar
inc
cli
loope
into
repz
ficompl
inc
xchg
fsts
dec
lods
dec
in
cmp
imul
push
dec
xor
int
jle
imul
test
add
sahf
mov
adc
int3
pop
mov
mov
mov
cmc
stc
jg
push
stos
call
mov
pop
scas
jl
scas
jge
pop
jnp
notb
stc
gs
out
dec
push
shrd
stos
sbb
sar
mov
lock
push
add
push
movb
mov
or
scas
dec
adc
pop
fmull
dec
test
dec
push
cmp
mov
cmc
xor
dec
shrb
lret
arpl
in
lahf
fldenv
dec
add
clc
cmp
mov
loopne
in
fisttpl
stos
insb
adc
loope
push
xchg
leave
arpl
cmp
cli
cmc
pop
adc
fbld
clc
mov
aaa
stc
add
mov
add
xor
lods
out
lds
push
daa
test
adc
mov
mull
imul
xor
xchg
xchg
or
mov
in
pop
insb
xlat
bsf
test
sub
push
lret
fucomip
jne
mov
push
push
xor
imul
movsl
mov
xchg
rcrl
arpl
adc
push
gs
pop
arpl
mov
daa
xchg
sub
dec
outsb
sbb
out
mov
ret
loopne
or
xlat
cltd
mov
popf
fimull
mov
pop
push
ret
cmp
stc
adc
cmp
add
add
or
ret
push
fimuls
lcall
xor
add
adc
dec
xor
dec
pushf
and
and
sbb
cmp
lcall
jnp
or
lret
xchg
xlat
jg
arpl
test
inc
jne
sbb
inc
and
stos
jnp
bound
fimull
inc
dec
pop
xchg
jbe
adc
dec
jnp
cmc
mov
push
andb
call
xchg
int
mov
fwait
mov
pop
inc
addr16
lret
in
pop
add
adc
dec
mov
repz
bound
loop
xor
mov
repnz
push
repnz
sahf
clc
dec
ss
scas
xchg
cmpsb
sbb
repz
jnp
out
lods
mov
icebp
cmp
mov
fisubl
sbb
and
dec
inc
js
inc
test
iret
xor
pop
xor
mov
sbb
negl
fbld
dec
xchg
inc
sti
subb
add
punpckldq
mov
cltd
sbb
pop
out
int3
push
daa
cmp
mov
push
hlt
cmp
sbb
dec
bound
outsl
fwait
adc
dec
ds
pop
mov
arpl
cmp
inc
mov
cli
xchg
orb
and
lcall
adc
test
int3
xchg
shl
push
and
xchg
leave
icebp
jg
icebp
in
rcrl
int
mov
pop
fiaddl
mov
and
mov
nop
add
test
xchg
gs
pop
adcb
in
mov
inc
out
fisubrl
adc
xchg
mov
xor
jns
xor
mov
dec
jmp
aas
in
test
ljmp
pop
xor
into
repnz
sbb
pop
cmp
dec
cmp
lret
pop
jb
adc
pop
mov
movsl
and
pop
add
xor
vpmacssdqh
or
rorl
fldenv
nop
xchg
cmp
insl
mov
xchg
jne
cmp
mov
addr16
xorb
mov
leave
insb
mov
jmp
mov
mov
cmpsb
ret
push
xchg
pop
mov
xlat
std
jg
popa
or
mov
jge
ja
rclb
test
lods
inc
mov
mov
mov
cmpsl
mov
cltd
jo
jae
and
shl
sbb
ror
movsl
cmp
or
in
fldenv
mov
mov
mov
cs
rcrb
and
xchg
jl
pop
ljmp
or
inc
or
cltd
je
push
sub
in
js
int3
or
jns
fnstenv
mov
popf
test
xor
divb
mov
adc
lahf
aas
div
mov
adc
icebp
rorb
outsb
fiaddl
adc
outsb
test
bound
dec
push
adc
rclb
in
mov
pop
stc
push
inc
cmp
cmp
mov
pop
pop
jg
pop
test
cmp
in
xchg
aam
jae
lcall
mov
cmpsl
xlat
xor
cmp
popa
cmp
sarl
int
xor
jl
inc
incb
xor
pop
lret
lods
pop
mov
mov
pop
sbb
jmp
sub
daa
mov
dec
or
mov
pop
pop
pushf
addr16
hlt
inc
movsl
into
loopne
mov
xlat
pop
lods
mov
cltd
data16
inc
pop
mov
clc
rorb
sub
push
sti
sbb
mov
mov
push
lods
imull
outsb
insl
mov
mov
mov
push
out
cltd
mov
xchg
and
cmpsl
inc
add
jbe
loop
ljmp
dec
xor
sub
shl
pop
repnz
mov
aad
xor
mov
cmp
insl
popf
test
xchg
mov
stc
add
mov
mov
mov
mov
jecxz
add
sarb
jp
inc
les
bound
xchg
popa
push
rorb
repz
xor
jnp
data16
test
gs
mov
std
dec
mov
jecxz
adc
sbb
ja
xchg
bound
adc
cmpsb
jp
xchg
cmp
pop
daa
mov
subb
sbb
push
sbb
cltd
mov
fiadds
adc
xor
xchg
jge
jp
je
lds
pop
divb
inc
hlt
push
adc
jo
pcmpeqd
mov
pop
sbb
and
inc
add
movsb
fs
mov
pop
adc
jge
cmp
imul
inc
pop
push
inc
pushf
xorb
fmul
and
mov
add
or
inc
sub
inc
jle
test
insb
dec
ds
or
stc
push
fldl
lock
xlat
jp
xchg
addr16
fsts
clc
jne
mov
sub
jg
iret
imul
aas
or
lret
xor
mov
or
jmp
mov
jl
xchg
inc
pop
dec
xchg
pop
scas
jne
je
inc
or
mov
and
gs
mov
testb
jle
push
cmpl
mov
cmpsl
mov
push
inc
mov
inc
lods
loopne
adc
cmp
jmp
add
or
pop
fs
mov
add
cmp
pop
xchg
cmp
imul
adc
or
pop
outsb
jmp
inc
subl
adc
dec
push
pop
xor
mov
and
dec
lret
dec
sub
mov
xchg
mov
stc
add
jge
mov
lret
push
jno
jge
sbb
cvtpi2ps
sub
ret
mov
cmp
fisubs
inc
dec
inc
xchg
inc
jl
test
clc
xchg
push
lret
imul
cmpsl
insb
adc
or
mov
jl
jo
out
push
lds
mov
int3
pop
sarl
xchg
es
push
lret
add
fldcw
in
mov
pop
loop
lock
and
lock
divb
pop
inc
and
ret
adc
pop
push
jo
fistl
xchg
int3
dec
dec
add
inc
call
add
mov
ret
stos
fiadds
rcll
xor
inc
mov
sbb
insb
sub
je
fcompl
rep
mov
dec
popl
pop
fdivr
pop
push
jge
movsl
adc
fists
mov
iret
push
and
shlb
or
and
jae
test
jnp
shrl
sbbl
jmp
or
cmpsb
adc
stos
add
inc
xor
fcoms
push
inc
inc
bswap
xor
ret
mov
dec
fstpl
mov
xchg
scas
push
aas
gs
mov
test
xchg
fs
pusha
filds
outsb
push
sub
jecxz
in
in
xchg
scas
out
push
or
shl
iret
mov
inc
int3
pop
ret
lcall
xor
ss
dec
loope
loope
dec
sub
movsl
loop
jo
stos
std
dec
jl
pop
fwait
pop
or
mov
out
addr16
and
test
push
push
pop
push
pop
scas
or
ret
scas
push
pop
scas
push
inc
pop
sbb
cmp
push
xor
pusha
add
mov
rcll
frstor
sub
and
push
ret
or
or
mov
mov
mov
push
pop
fdivs
push
iret
pop
fs
xor
adc
repnz
mov
dec
mov
xchg
dec
jl
add
popa
xor
iret
jae
cltd
mull
adc
leave
jbe
sbb
mov
jno
cmp
rorb
stos
jnp
pop
orl
adc
repz
loope
imul
mov
das
add
mov
outsl
adc
cld
lds
lods
fimull
inc
push
xor
pop
out
andl
leave
test
xor
adc
stos
js
decl
push
mov
jbe
in
mov
stos
push
cld
in
ds
mov
fnsave
inc
movsl
insl
mov
daa
stos
cltd
movsb
outsl
scas
outsb
fs
aas
cld
orb
imul
xor
mov
cmc
les
xor
sar
movsb
pop
lret
cmp
aam
adc
push
repnz
aam
xchg
xlat
jns
jl
mov
outsb
or
stos
ss
cwtl
add
push
push
push
jbe
inc
jns
pushf
scas
dec
stos
mov
mov
test
popf
sbb
leave
mov
jle
mov
lcall
dec
aam
push
fildll
mov
adc
out
cmpsl
clc
dec
das
pop
dec
push
push
mov
xchg
push
mov
pop
das
adc
in
pop
sarb
mov
mov
test
rorl
push
xchg
cmp
roll
fdivs
aam
stc
cmp
push
cmp
sbb
push
jecxz
push
fxch
cmp
clc
dec
mov
fidivrl
mov
adc
insl
inc
movl
pop
jb
aas
test
mov
jmp
xchg
mov
iret
ret
addl
mov
stos
push
pop
inc
test
shlb
lret
add
pushf
push
dec
adcb
lea
or
shlb
jg
and
outsb
clc
lea
scas
xor
nop
gs
cmp
xchg
jo
movsbl
inc
notl
pop
and
xchg
in
mov
fsubs
sub
dec
adc
inc
mov
shlb
dec
sub
adc
or
mov
inc
in
repnz
int3
fiaddl
push
fstpt
mov
movsb
mov
jns
jbe
mov
aad
sub
jne
ret
push
dec
out
ret
iret
adc
inc
mov
aam
mov
dec
jl
sarb
pop
imul
push
or
xchg
add
push
inc
add
fadds
jmp
movsb
and
and
shl
scas
push
fucomip
sbb
test
mov
imul
cld
enter
xor
xor
jb
jp
sbb
xchg
jno
out
pushl
and
sub
pop
jns
jbe
and
and
stc
iret
push
xor
push
mov
bnd
sub
cmp
push
cmc
cmc
mov
sbb
scas
int3
xchg
ds
gs
pop
mov
int
das
fistpll
sub
sbb
push
adc
gs
stc
std
ljmp
dec
jle
shl
loopne
cmp
jbe
sbb
call
inc
mov
ret
adc
xchg
faddl
jle
test
test
jae
push
or
cmpsb
pop
dec
sbb
jnp
outsl
pop
movsb
adc
out
and
jle
inc
mov
mov
and
push
insb
enter
mov
or
dec
dec
mov
int
and
jp
stos
pop
arpl
pop
aaa
and
sarl
inc
lcall
adc
pop
mov
out
or
jge
frstor
jnp
outsb
add
test
xchg
inc
xlat
add
pop
sub
js
pop
push
xor
mov
jnp
sbbb
cs
ljmp
sub
mov
inc
jb
jo
sbb
pop
mov
cmp
aaa
dec
fadds
hlt
mov
mov
and
orl
adc
jo
jg
add
pop
loopne
mov
rcrb
in
push
sub
ds
pop
out
dec
push
nop
mov
fdivs
push
push
jo
and
adc
cmp
add
mov
pop
in
jl
mov
jnp
mov
pop
cmp
pop
in
xchg
ret
sub
arpl
int
out
mov
test
ss
cld
jae
xchg
iret
pop
mov
adc
jge
add
test
dec
xorb
dec
ret
xor
outsl
inc
or
xchg
mov
ss
popf
fnsetpm(287
pop
mov
jl
xor
cmc
pushf
cmpl
fsub
add
xchg
adc
and
bound
sub
push
rep
inc
js
adc
mov
mov
jae
pop
sub
inc
pop
fildl
shll
ret
out
xor
inc
xor
js
add
movsb
jbe
lcall
lret
loopne
stos
dec
mov
out
mov
dec
push
mov
push
xor
rolb
pop
dec
ljmp
xchg
xor
shrb
shrb
inc
outsb
dec
dec
pusha
jns
inc
and
ds
inc
mov
mov
in
sarb
dec
sbb
addr16
sti
es
mov
and
mov
mov
ss
imul
inc
cmpb
jno
push
lret
icebp
dec
fimuls
lods
mov
sbb
cmp
sti
ja
cli
jo
push
adc
js
nop
hlt
sbb
data16
loopne
nop
mov
std
mov
enter
sub
shl
int
sarl
sti
lods
clc
xchg
pop
enter
push
add
jg
jl
jge
into
fldl
aam
mov
xchg
subl
out
fsubs
pushf
push
pop
inc
je
and
imul
push
stc
sbb
mov
clc
daa
xchg
cs
adc
xor
sarl
cmpl
add
hlt
inc
lods
mov
pushf
daa
or
sbb
jb
faddl
pop
push
pop
mov
push
or
jl
pop
fwait
and
sarl
dec
ds
movsb
jge
popa
pop
push
arpl
add
rcrl
dec
sti
mull
adc
sahf
jge
mov
jno
add
js
mov
xchg
push
out
add
shrl
lea
lret
loope
lods
movsb
or
xor
scas
out
push
dec
enter
xor
es
fcompl
shlb
cmp
test
mov
jp
cmpsb
xchg
pusha
xchg
mov
jae
sbb
ret
sbb
push
das
aam
aam
jmp
xchg
push
jge
sahf
dec
jns
pop
dec
or
nopl
in
xor
sub
mov
add
ret
mov
imul
ret
aaa
loopne
repnz
mov
or
lcall
sar
movb
jle
in
mov
jl
inc
rorb
lea
icebp
jle
fcmovb
test
clc
cs
push
push
jge
jg
pop
adc
mov
mov
aas
fwait
cmp
std
jge
mov
cmpb
push
cwtl
push
or
cs
inc
jbe
jl
add
imulb
push
out
ret
mov
mov
mov
mov
xchg
xchg
ss
jne
popf
int3
sub
mov
inc
lahf
out
sub
movsl
loopne
scas
es
cmp
cmp
jmp
adcl
aaa
std
mov
push
mov
fidivrs
mov
gs
gs
pusha
xchg
xor
cltd
and
dec
scas
lret
lret
dec
out
inc
or
inc
sbb
xchg
gs
sub
cs
push
jb
movsl
in
std
xor
xchg
out
jnp
adc
lock
les
xchg
addr16
stos
cmp
mov
jnp
cltd
xor
lcall
popa
or
out
pop
pushl
lret
shrl
pusha
add
xchg
jp
mov
cmpsl
lods
aas
fidivrs
add
call
mov
push
add
ret
mov
inc
mov
sub
int3
xorl
sti
icebp
jnp
sbb
movsl
jae
dec
mov
push
in
mov
in
das
mov
xchg
mov
lret
add
pop
jl
or
js
xchg
sbb
inc
add
test
or
xor
and
or
and
cmpsb
loopne
pusha
cs
and
adcl
xlat
ja
imul
sub
addr16
stos
jnp
xlat
aad
stos
add
dec
pop
js
add
pushf
fstl
adc
xchg
inc
out
iret
mov
mov
dec
dec
lcall
inc
jno
orb
js
push
adc
jecxz
add
cmpsl
mov
loop
cli
jmp
cld
inc
inc
xchg
cmp
add
out
rorb
js
pop
cmp
cmp
or
sbbb
xchg
xor
test
mov
dec
push
aas
shrl
push
fcoml
mov
mov
gs
jo
imul
add
and
nop
mov
mov
cmp
insb
dec
sahf
js
mov
aam
pushf
xor
out
mov
movsb
pop
loopne
adc
xor
pop
je
mov
ja
jecxz,pt
pop
adc
mov
cs
pushf
cmp
enter
xorb
xchg
mov
inc
in
add
out
mov
mov
inc
adc
mov
adc
mov
int3
cs
popa
lea
pop
mov
xchg
aad
mov
pop
adc
idivb
clc
jp
xor
dec
cltd
sbb
mov
lock
sahf
rorl
fnsave
sub
lret
aam
pop
es
pop
sbb
movsb
ficompl
dec
shr
popf
sbb
pusha
or
test
sbb
push
mov
pop
xchg
ret
or
roll
pop
nop
psubq
and
bound
xchg
out
and
push
xor
es
jle
push
mov
mov
arpl
mov
fsts
mov
dec
pop
aam
push
cwtl
sbb
inc
xchg
or
dec
testl
add
lea
and
xor
cmp
out
add
daa
es
shll
stos
in
fs
ficomps
cs
in
mov
dec
jo
aad
jno
imul
and
jg
sti
andl
push
sar
mov
movsl
int
adc
scas
inc
leave
call
dec
xlat
in
jae
lock
sbb
pop
addr16
arpl
sbb
cwtl
nop
shll
inc
dec
mov
push
xchg
xchg
mov
enter
mov
mov
roll
or
or
dec
imul
mov
push
fcmovnu
lea
addr16
pop
scas
mov
movsb
mov
test
out
dec
sti
xchg
popa
or
pop
xchg
out
sbb
mov
loope
call
and
mov
dec
add
sbb
or
mov
pop
or
push
arpl
mov
test
mov
rcrl
movsl
aas
push
push
dec
imulb
rcll
in
pop
arpl
and
mov
negb
iret
fs
rcrb
mov
inc
dec
fsubp
mov
xor
mov
outsb
imul
outsl
xlat
imul
ljmp
lds
outsb
aam
rorl
push
cmp
push
movsb
and
dec
je
adc
sub
lcall
jecxz
or
and
outsb
or
jg
jbe
adc
loopne
mov
jle
pop
into
stos
lods
enter
push
push
dec
rcrb
aam
int3
out
fs
jnp
int
test
pop
lods
mov
je
lret
or
loopne
insl
jl
outsl
movsl
out
mov
lret
pop
dec
fwait
popa
add
ljmp
shl
test
inc
into
mov
xchg
popf
mov
arpl
xchg
add
stos
or
test
mov
xchg
add
cmpsb
test
out
divl
push
popf
pop
in
xor
ret
cld
nop
pushf
mov
insl
loopne
dec
push
lods
jbe
sub
or
inc
mov
jge
test
add
test
mov
or
scas
jg
outsb
js
jbe
push
ljmp
jecxz
lea
mov
repz
inc
mov
dec
push
nop
jb
push
pop
or
xchg
repnz
xchg
xor
lods
dec
movsl
stos
mov
dec
nop
mov
jo
mov
popa
cltd
fmuls
pop
negb
push
das
dec
fs
cmc
pop
jmp
mov
in
stos
sti
lods
mov
pop
mov
xchg
pop
call
cmp
adc
in
push
push
mov
fisubl
jle
nop
je
in
test
xchg
ja
test
jmp
sub
mov
mov
add
and
fisubl
inc
pop
pop
jge
ficoms
inc
mov
push
mov
in
mov
arpl
sub
sbb
adc
shll
push
dec
scas
adc
dec
pandn
mov
fistpl
pushf
icebp
dec
push
or
arpl
leave
scas
nop
jecxz
cmp
aam
jo
xchg
pop
movsb
or
lods
addb
lds
sub
icebp
xchg
icebp
push
mov
cmp
adc
iret
cld
test
outsl
mov
inc
push
aas
pop
int
cmp
lock
mov
mov
mov
in
clc
or
cs
enter
sbb
fsubrp
dec
out
mov
jg
adc
pop
inc
fldl
dec
cs
fistl
sub
pop
cmp
testb
adc
out
inc
lret
xchg
stos
ret
mov
adc
adc
fists
aas
sub
mov
out
or
lds
cmp
and
into
jg
aas
stos
sub
sbb
mov
lods
jo
shll
cmp
jmp
mov
stos
daa
xchg
shlb
mov
and
or
xchg
fdiv
repz
out
loope
out
les
mov
pop
adc
aaa
daa
xor
jmp
push
stos
aam
pop
popa
ret
mull
iret
or
xor
dec
lret
adc
sub
les
movsl
mov
sub
cmp
mov
fidivrl
and
testb
xchg
push
fcmovnbe
data16
or
xchg
push
jmp
cli
mov
rcrl
and
ja
push
mov
mov
mov
mov
push
mov
rorb
stos
out
pop
sti
cwtl
adc
hlt
lahf
mov
dec
inc
aaa
and
push
dec
das
sti
lods
sarb
mov
int3
js
bound
ljmp
and
pop
add
sahf
add
xchg
jle
lock
sbb
in
pop
and
loope
xchg
sar
mov
xchg
adcb
negl
mov
jns
adc
xor
push
and
mov
ja
test
movsl
mov
lock
ja
loopne
loopne
and
cmp
aam
xchg
sbb
mov
lods
fidivrs
cwtl
into
inc
pop
jne
repnz
dec
fcmovbe
loope
or
nop
dec
smsw
jl
shll
add
fldenv
stc
lret
aam
add
pop
mov
cmpsb
lret
and
and
popa
sub
aaa
addb
jl
push
adcb
in
and
push
rolb
and
imul
mov
add
xchg
test
dec
sahf
mov
xorl
sub
sub
aaa
mov
cmp
ds
cmp
dec
ja
pop
push
repnz
std
xchg
mov
in
xchg
sbb
push
es
movsb
push
xor
mov
cmp
dec
pop
or
or
push
mov
inc
xchg
xor
int3
push
mov
lods
cmpsl
ljmp
mov
or
aam
cmp
mov
aaa
repz
bound
insl
jns
cld
cmp
adc
test
pop
div
out
ja
clc
movsl
shlb
jl,pt
loopne
outsb
arpl
jns
bound
xor
clts
nop
mov
pop
mov
jnp
mov
dec
mov
sbb
fsubrp
es
popa
loopne
dec
leave
or
mov
xchg
loope
mov
vshufps
int
sbb
cli
jge
xor
cmpsl
mov
movsl
and
data16
rorl
aam
dec
sbb
sbb
jbe
dec
mov
xor
jb
pop
stos
jae
jo,pn
mov
sub
pop
adc
adc
sub
cld
sub
push
jp
mov
add
rol
xchg
xlat
mov
cmc
push
roll
sbb
sti
mov
jo
xchg
repnz
ds
cltd
xor
out
mov
xor
pusha
outsl
ret
mov
andb
jmp
sub
push
xor
push
sbb
inc
subb
mov
add
mov
or
repnz
xchg
shr
icebp
cli
xchg
loop
dec
or
pop
sbb
aaa
pusha
fisubs
or
jb
mov
pop
sbb
xchg
push
pop
dec
cmpsb
add
push
int
movsb
fidivs
jecxz
mov
jns
movsb
mov
pop
pushf
sub
mov
gs
sub
popf
sub
sti
aam
dec
mov
mov
in
in
clc
xor
jo
mov
and
mov
jl
negb
lcall
stos
mov
mov
pop
or
cmpsb
push
dec
cmp
mov
add
mov
aaa
sbb
ss
xchg
sbbl
fists
or
outsb
vprotd
cld
scas
jmp
jecxz
jl
mov
leave
pop
and
dec
xchg
repnz
loopne
daa
mov
cmp
push
loope
and
aam
push
pushf
pop
sti
adc
les
mov
xor
cwtl
lods
sbb
inc
pop
push
pop
mov
sbb
fadds
jecxz
sbb
ss
jmp
pop
leave
push
cmc
pusha
ja
cld
test
rclb
inc
xchg
lcall
mov
outsb
mov
adc
out
ret
cs
xchg
dec
enter
fisubrs
sub
mov
in
cmpsl
in
push
or
push
pop
cmp
jno
mov
loopne
js
loopne
jg
arpl
sahf
pop
loope
stos
lcall
xor
dec
jo
sbb
or
insl
ret
push
mov
push
xchg
movsb
andb
pop
mov
mov
push
or
out
lcall
push
inc
dec
lods
push
or
and
mov
or
cmp
mov
clc
pop
mov
inc
pop
in
xor
imul
xchg
push
ficompl
bound
pop
addr16
cmp
into
les
pop
rcrl
mov
pop
add
arpl
xchg
inc
movsl
xchg
xor
xor
adc
cmpsb
cmpl
mov
adc
stos
sahf
iret
jp
and
add
enter
rolb
pop
lret
test
mov
enter
xchg
in
lods
imul
xor
mov
lcall
nop
pop
mov
rclb
movsl
outsb
mov
test
int
cmp
mov
push
mov
or
lret
add
js
inc
add
nop
inc
