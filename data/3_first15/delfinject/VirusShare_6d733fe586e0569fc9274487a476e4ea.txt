inc
test
add
add
add
add
sbb
dec
xchg
inc
push
popa
aam
scas
sbb
adc
repnz
xor
subb
inc
stos
and
xchg
iret
aaa
lahf
or
icebp
hlt
outsl
addb
cwtl
popa
jp
scas
pop
jmp
insl
sbb
sbb
mov
lods
out
push
subl
stc
jb
xor
or
lods
inc
jge
xchg
cltd
dec
int3
orb
orb
sub
ljmp
outsl
addl
into
scas
xchg
adc
jae
cmp
and
add
outsb
inc
and
xchg
into
test
xchg
inc
push
decb
push
sbb
packsswb
sbb
push
pushf
mov
nop
mov
jecxz
setne
push
add
leave
ret
sub
push
or
xor
mov
stos
dec
out
and
and
mov
outsl
iret
add
sbb
cmp
push
in
adc
mov
cmc
mov
pop
mov
sub
enter
into
xchg
xchg
fisubrs
inc
aas
xchg
hlt
test
pusha
xchg
cmp
test
ja
cltd
sbb
in
pop
xchg
test
loop
lea
stos
fcomps
xchg
movsb
sub
iret
dec
outsb
mov
cmc
out
ret
out
std
cmp
pop
dec
in
sahf
mov
sahf
push
push
addr16
not
fisubrl
popa
leave
jns
in
ret
inc
mov
insl
and
stos
pop
shl
add
xchg
rcrb
ja
in
and
roll
cmpl
and
cmp
jns
orb
imul
in
loopne
mov
rcl
lahf
in
ss
jo
push
rcr
pop
or
pop
outsb
insl
lods
xor
fistl
xchg
cmpb
jne
scas
jle
push
bound
loopne
fistpll
mov
lock
pop
push
sbb
out
repz
test
pop
add
adc
loop
loop
xor
lods
or
sbb
out
mov
add
fistpll
mov
or
shr
in
stos
addb
lods
sbb
stos
pop
inc
pop
xor
mov
xor
ljmp
xchg
inc
bound
push
clc
xchg
ror
and
add
xchg
xchg
fldl
mull
incl
or
ja
test
shl
testb
roll
adc
out
and
dec
addr16
sub
sahf
pop
pusha
pop
test
sbb
mov
push
xor
and
jp
mov
adc
mov
sub
mov
push
ficoms
xchg
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
lock
and
add
and
mov
mov
push
ret
jecxz
jge
mov
jl
out
adc
push
adc
lock
aad
jo
xchg
enter
adc
dec
or
fwait
push
and
pop
cmp
scas
xchg
popf
stos
popa
lret
rcrl
repz
sbb
pop
iret
loop
jne
repnz
dec
loop
incb
sbb
push
in
or
xchg
mov
fadds
aaa
in
imul
scas
inc
out
mov
std
call
pop
and
mov
fidivs
movsb
lret
pop
inc
aad
test
pop
cmpb
jp
test
xchg
test
lret
cmc
imul
pushf
push
pop
pop
xlat
add
in
ret
jnp
mov
cmp
subl
inc
adc
ds
push
mov
fwait
mov
mov
shl
xor
addr16
leave
cmp
and
inc
cmp
out
mov
push
mov
push
cmp
jg
cli
insb
adc
jle
std
pop
aas
jmp
shll
mov
push
ret
jne
dec
inc
in
ds
notb
nop
mov
dec
xor
inc
add
and
ljmp
sbb
push
dec
popa
pop
cltd
jp
mov
call
inc
fwait
les
pop
iret
push
mov
out
lods
daa
cltd
pop
push
cmp
adc
mov
lods
lds
in
mov
ret
mov
leave
outsb
jno
jno
call
cmp
mov
add
sbb
cwtl
mov
das
push
test
cmpsb
pop
push
jnp
add
mov
movsbl
outsl
or
dec
mov
mov
enter
lret
js
add
rcll
xchg
jp
sbb
cltd
clc
ret
insl
xchg
test
movsl
mov
in
sbb
dec
cmp
cmp
and
cmp
sub
push
xor
jbe
fidivl
out
test
out
pop
lock
fsts
push
fsts
das
pop
inc
mov
sbb
inc
mov
mov
pop
xor
push
insl
ja
lock
test
xchg
loopne
xor
dec
popf
loop
cmp
aaa
xor
lea
adcb
andb
mov
mov
loope
mov
inc
mov
shrl
scas
mov
or
shlb
addl
xor
sbb
add
bound
xor
imul
xor
adc
mov
and
adc
inc
movsb
movsb
jb
push
add
enter
sub
xchg
cs
data16
loop
and
inc
scas
hlt
jbe
shlb
mov
cmp
test
mov
imul
in
add
sahf
popa
dec
cmp
add
jmp
movsl
cli
sub
or
rcrl
inc
xchg
fs
dec
call
sub
jnp
push
incb
out
sbb
inc
clc
data16
jecxz
push
xor
jecxz
add
sbb
div
in
jg
cwtl
mov
sub
adc
cmp
int
pop
sbb
je
test
pop
adc
ret
mov
push
sti
sarl
and
das
insb
dec
add
out
and
pusha
popf
ficomps
xchg
xchg
xchg
loopne
adc
push
or
pop
jg
fwait
sbb
and
fwait
xchg
loope
call
rolb
aas
sbb
dec
cmp
jae
xchg
negb
les
push
sbb
dec
mov
sbb
clc
mov
clc
std
fs
mov
popa
push
push
fisubs
jmp
enter
dec
inc
daa
movsb
xchg
pop
inc
dec
and
call
lahf
ljmp
mov
shll
out
cmp
lock
arpl
dec
imul
mov
push
and
adc
xchg
mov
cltd
fs
repnz
cmp
enter
jne
adc
xlat
push
and
xor
fwait
jecxz
ja
push
movsl
clc
sbb
aas
add
cmp
jecxz
xchg
adc
xchg
dec
inc
jns
popl
dec
das
jns
shl
out
dec
imul
aad
mov
push
push
mov
inc
or
pop
jle
xchg
cmp
jmp
mov
dec
loopne
mov
cs
or
leave
jnp
jge
add
cli
inc
out
stos
imul
xor
push
cmpsb
mov
xlat
mov
pop
testb
repnz
push
xchg
sub
cwtl
data16
pop
shlb
sar
or
dec
lret
adc
aas
jns
loopne
jg
add
mov
cmp
push
jae
fwait
shlb
test
or
leave
pop
jb
jg
fadd
mov
mov
stos
push
std
cmp
push
xor
iret
fs
pop
sub
movsb
dec
sub
inc
les
ret
les
dec
sbb
xor
push
ja
mov
and
loope
std
sahf
call
mov
je
sub
andb
inc
xchg
mov
sub
sbb
mov
rcrl
push
arpl
or
sbb
in
dec
std
in
adc
loopne
std
fld1
mov
outsb
movsb
dec
jle
fistps
sbb
shrl
push
cmp
add
rclb
mov
jnp
sbb
sbb
imul
xor
cld
into
push
dec
xchg
in
push
adcl
adc
adc
dec
jne
push
xchg
sbb
lcall
push
movsb
sub
adc
cld
jl
push
mov
xchg
jge
int
aam
fists
xchg
iret
mov
test
and
or
mov
dec
es
mov
icebp
sbb
fadds
pop
icebp
cmp
into
mov
xor
dec
or
jle
leave
cli
mov
jg
ret
inc
sti
fs
lea
sbb
lret
leave
fldl
addr16
in
or
loop
test
cli
xor
jns
pop
scas
xchg
pop
cmp
mov
insl
push
addl
dec
movsb
and
jl
push
add
jle
cmpsb
mov
pop
pop
shr
push
in
aam
arpl
in
jns
inc
clc
insb
fstpl
dec
mov
inc
cli
mov
shll
insl
outsl
sbb
or
lcall
mov
jo
mov
rol
stos
mov
sbb
push
mov
mov
imul
mov
rep
out
jno
inc
cli
fists
cmpsb
ja
daa
int
negb
inc
mov
xor
sbb
scas
push
sbb
or
and
lods
outsl
popf
out
sub
cmp
lods
loop
xor
cmpsl
push
xor
mov
mov
and
in
mov
daa
ljmp
jmp
or
mov
int3
mov
icebp
push
imul
repz
lahf
pop
push
imul
loop
xchg
mov
and
dec
adc
fistpl
add
dec
mov
sub
add
inc
push
push
in
insb
cmp
sbb
repnz
mov
rcl
sbb
shll
sbb
leave
mov
xchg
sti
cmpsb
insl
jnp
inc
lods
add
xchg
decl
adc
fldenv
jae
sbb
fsubrs
pop
lods
outsb
data16
cmpsl
ret
cmp
outsl
cld
xchg
lods
push
add
inc
cltd
nop
in
ret
lock
es
cltd
sbb
add
pop
inc
inc
pop
cli
shlb
loope
pop
in
push
dec
fidivs
pusha
fsubl
mov
fisttpll
mov
add
dec
jo
xchg
shrl
mov
inc
out
clc
out
mov
cmp
lcall
pushl
mov
imul
ljmp
jo
js
ret
je
imul
je
xor
aad
cmp
mov
adc
in
push
rorl
repnz
xor
js
das
cmp
xchg
fdivrl
pop
nop
adc
adc
leave
xor
sub
outsl
lret
mov
or
xchg
inc
mov
xchg
jmp
mov
out
xor
push
jmp
mov
and
dec
jp
mov
inc
cwtl
push
adc
les
cwtl
aam
ds
push
adc
ja
xchg
icebp
pusha
ss
dec
push
loop
push
iret
jl
sub
out
lcall
es
loope
mov
fisttps
test
test
aad
hlt
lcall
xchg
push
cmpb
and
adc
xlat
divb
mov
fstl
and
in
fildll
pop
test
js
sub
fdiv
movsb
cmpsb
add
sub
sbb
test
jne
xchg
outsb
lock
ret
cld
movsb
xlat
adc
std
pop
movsl
lret
lret
inc
fisubl
cmp
inc
mov
xchg
les
test
fdivrl
add
sub
xor
cwtl
jmp
stc
or
pop
aad
cmp
or
sarb
pop
popf
bound
fstpl
movsb
and
and
sub
mov
xchg
or
pop
adc
imulb
sbb
jp
out
xchg
jno
int
cmp
ds
imul
jno
repz
fs
fsubs
push
jo
xor
sub
orb
lea
mov
es
aaa
jbe
int
dec
mov
and
or
pushf
cwtl
test
adc
fucom
cmc
in
jnp
push
adc
lea
orl
jb
call
mov
inc
sub
fcmovbe
xchg
xor
je
mov
mov
push
or
cmpl
nop
sub
fbld
dec
cmc
movsl
fs
in
add
push
fcomps
jle
int
mov
ficomps
push
and
mov
outsb
std
mov
notl
jecxz
push
xchg
pushl
and
and
divb
mov
test
jb
movsl
and
in
lret
dec
lea
push
testb
or
add
push
addb
mov
pop
outsl
adc
ds
orb
push
pop
je
mov
sti
sbb
imul
dec
or
bound
and
cmp
filds
iret
xchg
aaa
jo
outsb
clc
sbb
testb
pop
je
hlt
pop
cmp
pop
je
pop
lahf
inc
int
ss
dec
movsb
daa
ljmp
xor
cmp
clc
in
push
fcomps
or
jns
xor
xchg
mov
bound
ds
repz
mov
mov
add
pop
lods
cmp
adcl
push
nop
inc
sub
sbb
pop
out
push
jg
bound
test
ss
mov
add
jmp
ficoml
cwtl
mov
mov
out
and
xor
ret
int
movsb
insl
out
test
outsb
and
inc
test
popa
mov
fcoms
inc
inc
aas
iret
xchg
add
mov
punpckhbw
subl
cwtl
mov
mov
sub
gs
sub
pop
popa
or
pop
sbb
cwtl
ret
lods
mov
es
inc
or
cmp
xlat
cltd
scas
lea
adc
lods
mov
in
pop
or
mov
mov
jno
je
pop
sub
je
movsb
mov
imul
popf
shlb
testb
jp
pop
cltd
xadd
lahf
outsb
pop
flds
mov
push
cmc
jle
fsubrl
outsb
xor
push
ds
or
jnp
insl
push
jg
and
sbb
cmpsl
call
fildll
popa
xchg
xchg
mov
sbb
push
pop
lret
xchg
jno
mov
ljmp
leave
mov
decb
pop
push
sti
test
sbb
sbb
shlb
jge
rcr
mov
push
dec
ret
sbb
adc
subl
andl
cmp
test
iret
sbb
js
std
data16
hlt
repnz
xchg
sbb
rcr
push
adc
xchg
xchg
out
int
add
popf
mov
jg
nop
rcrb
outsb
xchg
pop
xchg
mov
cltd
xlat
dec
push
and
mov
jg
mov
or
out
loope
dec
in
notl
sbb
scas
sub
stos
sub
mov
mov
leave
push
add
mov
pusha
jno
push
push
and
mov
je
cli
jle
fiaddl
sbb
push
or
push
lcall
or
stos
inc
mov
add
push
sub
dec
mov
sub
call
xchg
shl
pop
lds
aam
and
sub
mov
fmuls
subl
mov
int3
dec
iret
ds
sub
test
pop
mov
push
adc
mov
aas
mov
jo
adc
cwtl
xchg
jmp
mov
push
scas
test
fistps
in
dec
inc
aaa
sarl
movsb
fsubs
jge
jmp
mov
addb
aas
jmp
pop
and
push
imul
in
andb
inc
loope
lcall
int
pop
dec
and
gs
sbb
mov
cli
out
cld
jg
xorl
mov
outsl
push
cld
rcr
sub
sbb
out
or
xchg
out
cs
ltr
mov
fwait
cmp
dec
nop
jp
adc
ljmp
mov
xchg
jns
push
loope
icebp
lcall
arpl
mov
out
xor
stos
sub
mov
inc
aad
daa
sti
xchg
psubb
rdpmc
std
arpl
sbb
arpl
imul
mov
int3
cmpsl
and
and
fstl
pusha
das
lods
jg
cmp
je
aam
sbb
mov
add
fldenv
rol
negb
in
stc
adc
je
mov
and
scas
icebp
addr16
xor
add
inc
inc
push
lods
imul
xchg
aaa
nop
cmp
lds
dec
int
mov
adc
add
adc
rclb
stos
lods
mov
inc
mov
jmp
jmp
ficompl
sbb
sub
or
jle
lahf
subb
xchg
mov
enter
movsl
add
push
xor
repz
outsb
sbb
adc
xchg
shl
mov
aaa
inc
or
popl
roll
clc
xchg
dec
gs
xor
inc
push
add
idiv
mov
imul
ffreep
xchg
or
lcall
dec
xor
mov
repnz
inc
mov
mov
cmp
jle
dec
cld
xchg
or
in
shlb
pop
xchg
sub
pop
shlb
sbb
enter
cmp
pop
vandnps
jg
test
sbb
das
cmpsl
fcmovnb
lahf
mov
adc
rcll
rolb
mov
inc
push
outsb
popf
sbb
shrl
inc
jno
iret
xchg
fistps
adc
nopl
lar
inc
jns
pop
sbb
movsb
gs
or
jmp
test
aas
nop
dec
sahf
adc
subl
cmp
icebp
xchg
imul
mov
and
std
lahf
adc
imul
call
sub
cmpb
ds
loopne
shlb
sub
scas
in
add
xlat
add
pop
aas
loope
cmp
test
pop
jle
and
push
mov
loopne
out
dec
add
insb
ret
xlat
mov
insl
push
out
push
xchg
mov
mov
xor
jl
mov
inc
ja
les
shrb
sbb
ficoms
adc
inc
iret
sub
icebp
mov
mov
jmp
sub
jnp
xchg
cmpsl
sub
xor
cmp
fnsave
jmp
xchg
dec
orb
push
adc
sub
mov
pop
xchg
test
add
outsb
mov
push
movsl
add
xchg
test
popa
xlat
add
push
xchg
imul
pop
lods
lret
mov
pusha
mov
mov
mov
xchg
clc
ret
adc
decl
loop
mov
inc
leave
push
movsl
lret
pop
fsub
push
outsb
dec
imulb
mov
pop
pop
lahf
cli
xor
scas
jbe
jg
mov
push
jle
xor
sbb
mov
push
mov
push
push
cmc
xchg
addr16
xor
xlat
adc
mov
push
btc
popf
sub
test
inc
pop
dec
scas
lret
cmp
sbb
pusha
sub
jb
inc
repz
cli
jle
xchg
mov
arpl
jno
inc
inc
cmpsb
jae
test
out
and
jl
lock
iret
xchg
lret
xor
stos
les
popa
xor
inc
fmuls
loopne
and
roll
mov
lds
aaa
sub
data16
cmp
mov
sbb
dec
arpl
pop
jb
adc
ror
xchg
sbb
cltd
inc
inc
lea
fldl
and
fdivrs
xchg
dec
dec
loope
and
and
sbb
mov
xchg
sbb
inc
lcall
push
sbb
mov
cmp
call
addb
xor
fidivs
lahf
das
add
jge
insl
mov
ljmp
repz
xchg
xor
xor
jge
shl
inc
pushf
sar
jno
or
in
jbe
mov
add
xor
fstp
jmp
inc
outsl
xchg
incb
cli
cmp
inc
jg
nop
push
loopne
and
jae
xchg
loope
dec
push
sahf
pusha
push
xchg
or
dec
mov
push
xchg
mov
lods
not
push
orb
fwait
jle
mov
pop
dec
xchg
out
stc
inc
int3
and
xchg
lods
jne
cmpsl
push
inc
jle
test
xchg
movsl
jg
fisubs
mov
mov
pop
inc
imul
ljmp
cmp
fisubrl
clc
xor
inc
daa
inc
test
inc
adc
push
mov
pop
aas
or
or
pop
cmpsb
in
ja
xchg
or
push
xor
mov
aaa
arpl
repnz
lcall
jle
int
stos
orl
xor
out
inc
add
fmull
mov
push
icebp
lds
push
mov
add
push
add
dec
mov
mov
pop
and
fyl2xp1
dec
mov
sbb
lods
dec
xchg
test
sti
push
pop
or
testl
icebp
shll
popf
pop
or
pop
ss
testb
and
ds
pop
sbb
faddp
shrb
lea
icebp
adc
sbb
shll
hlt
and
jns
mov
ljmp
call
xchg
insb
jecxz
cs
xor
lahf
cmp
add
lea
out
pop
mov
xchg
mov
jo
push
sub
inc
cmp
dec
pop
cmp
xchg
call
aad
pop
fcom
pop
push
repz
xchg
subl
imul
cmp
in
dec
out
addl
push
movsl
aaa
xchg
in
mov
or
mov
cmp
aad
ror
jbe
jbe
inc
into
and
pop
ret
daa
push
mov
or
cmp
call
xchg
push
inc
icebp
idivb
push
mov
aam
in
dec
pop
pop
xchg
push
adcl
aad
ret
popf
sbb
push
xchg
fmull
subl
adc
mov
sbb
mov
jns
outsl
cmp
mov
jg
push
adc
adc
in
sbb
ficoml
xchg
pushf
loop
and
das
stos
and
mov
mov
mov
outsb
in
mov
dec
dec
xchg
add
or
lcall
mov
cs
jp
add
or
inc
gs
aad
sbb
hlt
das
loopne
jo
and
cmp
mov
mov
in
cltd
cmp
sub
mov
mov
inc
js
adc
cmp
pop
cs
jno
push
fldenv
loopne
leave
in
ret
insb
xchg
dec
jg
push
repz
fdiv
sbb
mov
push
sub
dec
mov
mov
push
test
dec
mov
jl
mov
mov
cmp
in
adc
lret
mov
sbb
mov
xchg
cli
in
mov
inc
lcall
js
daa
xlat
fnstcw
or
mov
das
or
cmp
lahf
xchg
js
adc
mov
outsb
mov
je
js
filds
aam
dec
ret
pop
lcall
ret
xor
scas
bound
and
and
packuswb
mov
test
into
pusha
rcll
inc
sbb
cmp
cs
pop
inc
inc
adc
lahf
sub
cmp
outsb
in
and
fs
or
xchg
cmp
sbb
repz
mov
out
fildl
fwait
lods
jo
push
lahf
xor
std
movsl
das
ds
out
dec
imul
stos
js
jns
pop
outsb
inc
out
add
mov
cmp
xor
std
sahf
jge
inc
sarb
test
aad
mov
jge
push
into
lds
call
pop
or
jp
mov
out
rclb
shl
es
mov
loop
pop
add
fcmovb
mov
faddl
sbb
shrb
out
xor
fwait
mov
push
ret
and
mov
cmp
popf
test
push
fisubl
add
fcomp
aas
mov
dec
and
pop
xchg
fwait
mov
adc
pop
sbb
push
scas
mov
adc
addr16
enter
xor
out
inc
int
mov
sub
adc
pop
shlb
xchg
movlhps
or
jno
jmp
jmp
nop
gs
pushf
insl
sub
xchg
dec
push
xchg
xor
adc
dec
popa
inc
sbbl
and
lock
fnsave
std
and
or
insl
or
sbb
push
popa
aas
movsb
jp
aad
push
dec
pushf
in
jne
addr16
insl
xchg
repz
icebp
cmp
stos
mov
cwtl
popa
sub
cmpsb
sbb
dec
adc
rorl
xor
movsl
or
cs
jne
xchg
dec
faddl
xor
testb
mov
push
inc
mov
pop
leave
sti
or
cli
aad
into
dec
lock
clc
xchg
aas
mov
push
mov
and
filds
repz
sti
fnstenv
sbb
sar
xchg
push
cmpsl
mov
jo
mov
imul
call
mov
jg
sahf
mov
mov
mov
cmp
ret
loop
imul
dec
mov
push
mov
lods
sub
call
rcl
insb
stos
iret
cmc
and
mov
add
pop
lcall
cltd
addb
xchg
enter
sahf
out
add
shlb
mov
fsubrl
test
sbb
cmpsl
cmpsb
mov
hlt
push
aad
jl
push
push
pop
and
scas
mov
rorb
push
cli
daa
sahf
adc
aas
out
or
sub
push
add
jp
push
jecxz
pop
sub
shr
push
adc
dec
xchg
clc
cltd
inc
push
dec
es
push
xchg
mov
jmp
push
sub
mov
push
aam
js
mov
sbb
call
cmp
push
mov
jg
mov
jns
and
dec
scas
leave
pop
pop
jno
cmp
leave
push
clc
scas
push
cld
out
lahf
int3
or
and
mov
cmp
mov
adc
jp
adc
xor
cmpsl
fmuls
fsubrs
inc
and
mov
ret
and
mov
daa
cmp
into
sub
add
xchg
aaa
cmp
int3
leave
add
jecxz
jns
mov
fsubrs
ss
aam
push
push
fsubl
mov
push
mov
sarl
popf
in
inc
inc
pop
mov
cli
push
mov
out
inc
sbb
jbe
xlat
push
test
sub
dec
mov
inc
daa
jne
mov
or
scas
cltd
dec
loopne
test
jne
gs
stc
mov
dec
jns
fsubrp
pop
adc
pop
sbb
icebp
into
jmp
xchg
gs
adc
xchg
xchg
subb
cwtl
sub
cmp
aam
cmpsb
mov
out
add
push
aas
push
subb
add
mov
cmp
xor
stos
cmp
lds
sbb
shl
cmp
add
inc
or
mov
pop
cmp
sub
rcrb
push
aam
negb
adc
and
push
aaa
sbb
xchg
hlt
cmpb
ss
negb
orl
cmp
popf
sbb
xor
data16
fidivrl
dec
cmpsb
js
pop
xchg
pand
lods
sar
adc
sbb
movsb
insl
xlat
inc
outsl
sbb
faddl
rclb
fimuls
and
mov
lods
clc
mov
add
and
sub
sub
pop
movsb
jmp
fnsave
loopne
sbb
jnp
mov
dec
dec
stos
ss
jecxz
cmc
mov
push
pusha
repz
xor
stos
inc
mov
movb
mov
not
test
pusha
sub
push
mov
sub
sub
lea
ds
int3
push
insb
insb
popa
xchg
dec
inc
fstl
insb
mov
mov
push
fldenv
xchg
and
sub
test
fadds
push
jno
sub
and
lret
mov
pop
ds
adc
imul
and
add
jo
lcall
mov
and
xor
jle
cwtl
dec
sbb
pop
fadds
and
mov
mov
cmp
outsl
test
add
fisttps
sbb
loope
aad
xchg
es
aam
adc
int
or
xchg
leave
pop
stos
js
es
mov
inc
adc
sbb
test
push
pop
adc
stos
bound
xor
in
mov
push
cmp
js
sub
pop
fistps
repz
mov
mov
cmpb
mov
sbb
stos
in
add
jmp
mov
xor
and
sub
imull
loopne
outsb
test
fcmovbe
mov
fs
xchg
inc
scas
cmovno
cmpsb
cmpb
testb
in
adc
out
mov
xchg
out
mov
test
out
adc
xchg
in
pop
push
test
mov
pushf
cld
pop
xchg
in
inc
insl
add
xchg
fmul
stos
xchg
and
mov
inc
out
adc
pop
sbbb
fstps
xor
loope
outsl
sub
inc
push
adc
mov
mov
or
nop
aas
dec
mov
outsb
shll
or
fs
jns
dec
icebp
push
int3
pop
sub
fisttps
out
out
adc
adc
mov
fwait
and
iret
add
jg
mov
loop
xchg
pop
stos
sbb
js
pop
fcmovb
rcrl
mov
aam
jns
pop
pop
ficoms
shrl
mov
jb
adc
lret
mov
cmp
lahf
es
adc
cmpsb
pop
and
daa
sbb
pop
adcb
xchg
dec
out
les
mov
xlat
mov
jp,pn
or
out
mov
push
lret
hlt
sub
mov
add
sub
cmp
dec
ja
repz
pop
movnti
vmovhps
inc
fs
mov
xchg
jecxz
mov
sbb
adc
xchg
fidivrs
daa
lods
adc
mov
inc
es
adcb
movsl
cwtl
mov
xor
stc
push
sub
push
lods
outsl
sub
jmp
shrl
mov
xlat
mov
jns
dec
mov
stc
daa
jno
clc
push
xor
sahf
sti
dec
idiv
jge
mov
jmp
inc
out
push
cmc
addr16
push
xor
adc
fcmovnb
push
mov
out
jl
jecxz
clc
push
addr16
hlt
aad
insb
loopne
jo
je
mov
push
dec
std
push
mov
mov
mov
jbe
int
dec
aad
push
pop
push
fdiv
xor
pop
add
fbld
cld
push
je
inc
daa
jns
iret
sub
push
rcll
int
adc
inc
xchg
sarb
jne
int
test
icebp
lds
insl
mov
mov
sub
lcall
movsl
shl
popf
dec
ficompl
sarl
aaa
and
dec
out
test
fwait
dec
mov
cmp
mov
mov
xor
test
push
outsb
in
xor
jo
fwait
ss
nop
push
mulb
and
aaa
hlt
sub
xor
fs
mov
pusha
pop
cmp
mov
xchg
mov
addl
scas
sahf
mov
scas
and
cmp
xor
mov
loop
jbe
in
and
xor
lcall
loop
nopl
scas
std
lea
sub
push
cmp
mov
mov
mov
mov
into
das
jne
xor
xorl
das
ret
movsl
cmp
insl
push
inc
and
mov
test
in
pushf
inc
pop
push
fcoml
mov
jne
repz
cmc
jp
and
xchg
lock
mov
cmp
adc
mov
in
test
pop
and
dec
ja
rclb
lock
add
movsl
notl
mov
add
fistl
sbb
testb
clc
sbb
test
lahf
adc
or
aas
in
pop
or
lds
dec
cwtl
sbb
fistps
in
adc
cli
and
inc
out
cltd
cmp
ror
jns
adc
dec
roll
xor
call
fcompl
mov
in
dec
jae
mov
rcrl
pop
pop
enter
test
jbe
test
lcall
xchg
dec
xchg
lods
cmc
xchg
shl
inc
aad
jl
and
xchg
mov
shrl
inc
mov
lcall
fists
movsb
ljmp
jae
fildl
cmp
fbstp
out
mov
scas
pop
lret
sub
mov
lea
mov
leave
mov
rorb
jge
dec
fistpl
aad
icebp
mov
add
sbb
inc
mov
adcb
ret
stos
dec
scas
pop
fsubl
outsl
rolb
clc
jno
lret
out
push
xor
mov
mov
push
sbb
mov
dec
fidivrl
jg
mov
cmpsl
inc
popf
mov
mov
jb
push
repz
mov
cmp
push
lods
pushf
mov
jmp
fmuls
sarl
mov
das
movb
mul
fisubs
adc
addw
pop
leave
jnp
das
pop
push
push
jnp
lret
daa
insl
in
cmpl
cmp
enter
or
fildll
lock
daa
sbb
jns
sub
aaa
adc
rcll
and
mov
int
repnz
gs
jmp
out
mov
jo
into
fidivl
out
mov
cmp
addl
addb
xchg
cmpsb
inc
add
in
lods
or
and
sbb
addr16
jecxz
test
pop
pop
nop
aaa
mov
lret
push
test
inc
mov
inc
in
mov
pop
fldt
loop
and
xlat
repz
push
mov
pushf
jo
adc
xchg
addl
and
push
ror
ds
lods
in
das
adc
negb
lods
test
lods
orb
jne
incl
aaa
pop
sub
add
enter
out
mov
mov
mov
push
jnp
mov
loope
fnstsw
shl
fwait
mov
lcall
in
nop
ret
test
jmp
mov
cltd
mov
les
or
jle
shl
mov
cs
adc
mov
adc
xor
push
sarl
add
and
inc
imul
mov
icebp
mov
jl
push
sub
add
jo
fldl
repz
repnz
mov
mov
mov
lods
pop
lds
lret
scas
pusha
xor
jno
mov
leave
xchg
in
mov
mov
pop
mov
lds
mov
clc
or
cmp
push
adc
test
sub
outsl
nop
xlat
inc
adcl
push
xor
pop
or
sub
out
insb
repnz
and
and
jae
repz
xchg
xor
push
sarb
inc
cmpsl
lods
pop
mov
fs
fnstsw
call
addr16
adc
in
nop
inc
enter
lods
mov
xlat
pushf
inc
add
ja
and
inc
sub
fimuls
cmpsl
push
inc
popf
dec
adc
cmp
in
cmpsb
mov
imul
dec
mov
popa
imul
sbb
jns
lods
imul
in
fistpl
js
mov
call
jecxz,pt
jb
xchg
xlat
mov
and
arpl
inc
out
push
mov
jmp
ror
add
adc
jno
mov
pop
or
jne
push
dec
xchg
ret
add
mov
scas
lds
mov
jecxz
fldl
test
fstps
lods
push
adcb
out
sarb
test
xorl
jbe
lods
mov
sub
xor
mov
jno
movups
xor
shrb
sbb
or
scas
inc
push
add
fs
mov
outsb
inc
das
in
mov
ss
jo
push
mov
fcoms
js
mov
sahf
repz
ret
dec
push
jnp
add
inc
out
jle
lcall
cmp
jno
jbe
out
repz
dec
stos
cmp
outsb
cmp
arpl
lahf
push
popa
xchg
mov
repnz
adc
sub
std
out
cmp
scas
imul
mov
pop
sub
push
cli
mov
test
ljmp
xor
xor
cmpsb
loope
stos
insl
adc
push
add
jl
dec
inc
sahf
fstps
push
cmp
faddl
adcb
stc
movq
xor
repz
xchg
mov
dec
sbbl
push
xchg
fstl
xor
inc
push
xchg
loopne
sbb
or
mov
aam
or
cmpsl
mov
bound
mull
xchg
or
sbb
dec
adc
push
jae
insb
cmp
lahf
sbb
out
les
xchg
lcall
jg
cli
cmovg
jno
nop
push
leave
outsl
hlt
aad
push
jb
into
push
mov
mov
mov
sbb
or
xorb
cmpsl
daa
jmpw
lods
aaa
xor
inc
pop
push
nop
ffreep
add
pop
loopne
and
mov
js
add
popl
ficomps
pop
loope
push
into
mov
popa
mov
popf
repz
addb
pop
xchg
out
sbb
in
adc
adc
mov
je
push
push
push
gs
xor
xchg
jp
cmc
pop
out
dec
dec
popa
xlat
mov
push
push
leave
inc
mov
xlat
out
mov
or
sbb
mov
outsb
outsl
sbb
fisttpll
mov
adcl
std
mov
int
xor
jp
cmp
test
xor
pop
sbb
addr16
rorb
aas
adc
nop
mov
fsubs
xor
xchg
mov
mov
aaa
pop
sbb
or
movsb
ret
adc
inc
cli
jp
xor
xchg
mov
aad
lcall
test
push
lret
out
loope
roll
jnp
jno
fdivrl
xchg
lret
or
pop
jbe
ret
faddl
das
addr16
int
mov
daa
sbbb
pop
lock
out
jmp
pop
in
gs
sub
out
fcmovnb
xorb
test
stos
sbb
cmpsl
xorl
sub
push
and
xchg
sbb
sbb
push
insb
mov
and
xchg
ret
sub
dec
jb
push
das
sub
cmp
pusha
lahf
mov
rcrb
adc
cmp
push
inc
mov
or
popf
sbb
jns
cwtl
or
inc
and
in
mov
jge
push
jmp
pop
xor
lods
cmp
xorl
in
arpl
ficoms
mov
push
dec
scas
sahf
je
sbb
inc
xor
mov
mov
lods
or
aad
jns
test
sti
pop
flds
xorb
adc
inc
push
fs
rolb
fcoml
mov
xlat
and
movsl
pop
mov
mov
shrl
insl
mov
fimuls
inc
jb
jmp
icebp
lret
xchg
in
test
mov
sub
jb
loop
pop
movb
or
js
and
pop
xchg
gs
lds
sbb
test
cmp
addl
mov
push
fcompl
jp
mov
arpl
test
cmpsb
jge
je
sub
cltd
filds
jge
mov
push
call
dec
in
es
sub
adc
rcll
hlt
add
sbbb
inc
leave
filds
stos
ds
loope
pop
mov
mov
xchg
shll
inc
dec
sbb
adc
std
outsl
and
add
insl
ss
or
jo
jo
mov
push
cld
popf
loope
sahf
repnz
push
pop
mov
repnz
jo
inc
jne
and
push
subb
push
es
inc
inc
mov
lds
inc
cmp
push
cmp
addr16
out
cld
and
popa
cli
dec
jb
cld
cmp
repz
and
jnp
rclb
or
mov
jle
adc
cltd
cmp
lds
adc
fmuls
aas
clc
cmp
push
push
push
sub
mov
repnz
mov
ja
ljmp
xchg
stos
std
mov
adc
lds
pop
jl
dec
adc
jbe
clc
leave
jnp
into
jne
in
jl
xchg
ja
mov
mov
iret
jbe
push
mov
fsubr
or
dec
and
mov
xchg
les
mov
and
push
outsb
adc
sahf
hlt
testl
xor
popf
jbe
xchg
mov
arpl
in
xchg
fidivs
add
mov
sbb
add
mov
mov
mov
out
pop
jbe
and
jns
daa
aas
je
mov
ljmp
test
mov
aaa
fldcw
or
dec
pop
jns
movsl
scas
xor
inc
pop
fistpll
sub
loop
sbb
into
cmp
sbb
insb
cmpsl
leave
and
test
adc
inc
dec
clc
hlt
pusha
jns
stos
fiaddl
mov
or
ret
add
cli
jnp
cs
mov
shlb
push
mov
gs
mov
test
sbb
push
mov
mov
push
lcall
cmpsb
mov
insb
sbb
xor
inc
mov
test
push
xorb
imul
cld
in
jecxz
dec
inc
and
test
das
loope
sub
popa
aam
adc
leave
sbb
nop
data16
jp
jg
jl
push
sub
ds
insb
mov
repnz
nop
lcall
dec
dec
adc
fdivs
pop
push
test
pop
shrb
stos
aad
das
xchg
jle
dec
xor
pop
in
push
push
addb
inc
fwait
inc
inc
jne
lods
xor
fucom
push
loopne
mov
hlt
fwait
and
pop
pushf
jns
mov
jnp
leave
arpl
into
sbb
xchg
andl
pop
cwtl
int
into
dec
cmpsl
test
jne
dec
mov
adc
sbb
btc
mov
scas
push
add
nop
xor
lods
ja
ret
fdivrl
mov
jnp
adc
stos
and
sbb
sbb
aas
rorl
push
push
lea
mov
arpl
pop
jmp
cmp
ret
push
aam
sahf
mov
sub
and
dec
into
jne
add
imul
cmpsl
xchg
jge
mov
cli
or
fidivrl
fstp
or
jmp
push
std
push
adc
inc
int
lock
fnstsw
fdivrl
enter
fists
cmc
push
rclb
insb
mov
enter
push
clc
clc
add
add
dec
jnp
add
jbe
cwtl
add
or
addr16
ret
pop
jp
push
or
push
jno
insl
dec
cmp
add
call
cmp
movsb
sbb
push
push
sub
test
jmp
imul
into
dec
adc
call
insb
jbe
popf
and
xor
push
movsb
loope
jnp
mov
adc
xorl
lods
fldcw
mov
inc
call
lods
lret
mov
xor
fs
inc
mov
mov
in
jne
dec
push
jmp
test
and
notb
ss
cltd
cmpsb
and
leave
ficomps
cmc
and
ss
arpl
fldenv
xchg
cmpsl
sti
in
sbb
mov
call
clc
push
adcb
push
xchg
test
in
jo
jge
fs
cltd
cmp
jge
icebp
clc
lods
xchg
imul
fwait
js
data16
leave
out
das
test
fwait
stos
push
inc
or
shlb
ja
stos
xor
cli
or
jg
pop
jmp
test
pop
lea
rcr
mul
imul
jl
ljmp
inc
mov
out
fcomi
push
pop
sahf
lea
filds
stos
in
hlt
mov
xchg
mov
sub
lret
push
repnz
ret
mov
fiaddl
pushf
push
push
icebp
push
dec
cmp
dec
lea
mov
ds
dec
cmp
dec
int3
cmc
dec
mov
xchg
or
jecxz
sub
push
push
aaa
jmp
mov
es
cs
cmp
js
cmp
fwait
pop
dec
leave
in
outsb
pop
std
jecxz
ja
dec
scas
gs
ljmp
mov
pop
xchg
int
jo
mov
pop
mov
clc
jecxz
dec
add
std
jne
adcb
xchg
gs
mov
in
push
push
jecxz
push
jp
mov
pop
pop
xor
mov
jl
and
dec
push
cmp
data16
cli
xchg
jmpw
lahf
aas
lock
push
fs
and
xchg
push
std
je
jle
mov
daa
mov
cltd
jp
rcr
cwtl
fwait
outsb
fnsave
add
inc
outsl
cmp
add
inc
roll
divb
mov
jo
xchg
aas
and
sbb
sub
jne
push
int
adc
mov
nop
mov
cmp
js
cmpsb
mov
clc
imul
push
cmp
add
ret
xchg
imul
ljmp
out
inc
cli
jmp
ja
adc
fwait
pusha
aaa
lret
sbb
js
mov
push
jno
inc
scas
or
rclb
out
cwtl
out
xchg
cmp
ret
sub
inc
sbb
ror
cmp
inc
fnstsw
mov
pop
inc
stc
push
push
cmpsl
int
in
shlb
js
fistpl
dec
pop
adc
ret
inc
dec
cmpl
std
ja
rcrl
in
in
dec
shrl
sub
lods
jp
testl
mov
xor
and
inc
and
in
cmpsb
jg
xchg
inc
inc
outsl
xchg
pusha
in
jmp
dec
lods
push
repnz
xchg
mov
fldcw
xchg
mov
ljmp
aad
mov
mov
bound
mov
inc
sti
repz
ficomps
loope
addr16
add
cmp
into
mov
iret
dec
lods
sar
and
shrl
xor
mov
sub
sbb
inc
sub
xchg
add
mov
inc
lcall
dec
cmp
adc
nop
xor
sbb
and
sahf
rol
cmp
cwtl
push
outsl
fidivrs
fiadds
cmp
fsts
dec
loopne
or
cli
pusha
mov
sarb
sub
xchg
add
pop
scas
loope
or
mov
add
mov
daa
jp
pusha
xor
in
in
jnp
sbb
shlb
fs
icebp
adc
inc
not
imul
jecxz
xchg
out
pop
mov
inc
xor
js
pop
les
fsubl
pop
or
cmpsl
mov
movsb
outsl
ret
pop
aam
fwait
mov
mov
fdivrp
dec
dec
jmp
dec
mov
add
into
jp
lcall
and
addr16
sbb
dec
dec
pop
cltd
adc
mov
add
jp
mov
out
xor
out
mov
sub
and
jb
sti
daa
ret
int3
inc
xchg
decb
jg
jae
push
dec
mov
add
and
int
testb
fildl
xor
mov
jns
hlt
out
fimuls
sbb
idivl
lret
dec
loope
and
push
xchg
mov
lcall
ds
pop
adc
add
inc
add
aam
ficompl
adc
mov
stc
jno
add
aad
cltd
push
add
es
dec
std
popa
mov
iret
sbb
cmp
out
in
dec
ret
movsl
in
xchg
jecxz
aas
mov
and
shr
lods
in
loope
out
push
or
mov
dec
dec
mov
out
out
adc
test
mov
movb
jnp
mov
gs
push
jle
rorb
shll
notb
outsb
sub
jns
inc
lret
add
dec
adc
inc
fmull
mov
loope
mov
jp
or
lret
sbb
negb
inc
cmc
rcrb
adc
test
mov
imul
std
mov
lods
stos
sub
xlat
push
outsb
and
bound
add
sti
mov
or
imul
xor
jns
fwait
push
test
or
jb
xchg
dec
xchg
push
xor
xor
lret
stos
cmp
pop
in
xchg
roll
push
xchg
popf
rcrl
cmc
gs
sub
fidivrl
mov
ficoms
cmpsb
arpl
push
xchg
and
push
mov
iret
fdivrl
shll
mov
xor
les
lods
lds
xchg
jne
mov
mov
xor
bound
jne
push
call
mov
loope
shl
sub
mov
xchg
outsb
addr16
pop
pop
mov
jl
and
sti
popf
in
mov
fbstp
out
pop
stc
and
cmp
test
pop
mov
imul
nop
mov
test
jne
pop
mov
stos
xchg
cmp
fwait
es
movsb
stos
outsl
jb
int
mov
push
aad
lods
jge
xorl
jne
mov
shll
js
xor
add
jmp
cmp
fsubr
or
mov
dec
mov
orl
dec
lea
push
arpl
sarl
imull
das
or
inc
dec
fidivl
ja
imul
push
sbb
sub
and
int3
mov
iret
inc
add
stos
xchg
xlat
mov
out
jl
shlb
mov
lds
lret
push
jb
adc
add
adc
je
xchg
sub
fnstcw
ds
mov
push
cmp
jo
hlt
ja
inc
dec
xor
mov
scas
xchg
imul
call
mov
add
and
lahf
pop
push
lods
pop
sbb
lahf
stc
jmp
jp
adc
push
jnp
lods
scas
inc
ret
jle
jp
loop
cmp
arpl
push
lcall
mov
push
aam
and
cmpsl
inc
call
pop
xlat
dec
data16
jle
xchg
fildl
std
js
sbb
xor
fldcw
or
idivl
pop
cmp
leave
pop
mov
xchg
push
mov
jno
ret
lods
in
cmp
push
je
je
out
jmp
insb
scas
dec
jge
jb
test
pop
bound
mov
cmpsb
inc
mov
cmp
dec
cli
gs
push
loop
test
fstp
mov
push
adc
out
orl
aam
xchg
ljmp
je
cmp
pop
loope
loopne
xor
push
push
subl
rolb
hlt
sub
cmp
mov
aad
xchg
out
add
xchg
sar
adc
stos
mov
push
jl
push
push
movsl
push
pop
clc
cwtl
push
cmp
in
sub
mov
addl
dec
xchg
dec
test
or
out
add
inc
inc
cli
dec
lea
stos
or
cwtl
dec
pop
sbb
push
jb
int3
movsb
jno
xchg
rep
ret
push
rcrl
cmp
cmpb
push
aaa
out
cltd
pushf
cmp
jmp
lods
lods
out
shrb
xlat
push
jecxz
jmp
mov
fdiv
in
adc
stos
sub
inc
mov
or
enter
cli
popf
clc
mov
xchg
test
ljmp
and
xchg
leave
out
call
ljmp
add
inc
fdiv
pop
adc
insb
clc
add
inc
mov
sub
mov
aas
fcmovu
jb
cmc
and
jp
mov
ljmp
adc
ret
fistpl
xor
cmp
in
out
push
sub
scas
push
loopne,pt
jmp
pop
bound
jb
bound
lock
push
shl
arpl
dec
or
pop
cmp
scas
cmpsb
enter
test
stos
call
pop
sub
cmp
sub
insl
nop
and
aaa
xor
mov
jp
xor
lods
gs
lret
fists
int3
cmp
sub
fucom
insl
dec
xchg
movsb
outsl
outsb
push
inc
ret
mov
fldl
mov
inc
cmp
pop
lock
push
sbb
sub
push
dec
sub
cwtl
push
test
mov
out
xchg
fidivrs
inc
test
jno
ja
xchg
sub
push
jns
xchg
adc
jae
sti
movsb
dec
jl
push
ja
and
ljmp
push
dec
clc
mov
mov
push
or
mov
mov
testb
rcrl
inc
pop
mov
jb
aad
xchg
cld
es
mov
ljmp
adc
inc
cvtdq2ps
scas
xchg
pop
out
dec
dec
mov
sbb
inc
cmp
jae
jbe
add
xchg
mov
imul
pushf
incb
and
xchg
xchg
push
ja
out
xchg
and
sbb
into
xchg
push
js
jb
inc
ret
loope
sub
or
testl
and
ja
imull
sub
mov
lea
adc
shrb
xchg
jle
jo
mov
add
pop
in
lock
inc
pop
rcll
or
dec
xor
mov
sbbl
fnstenv
and
dec
xor
imul
push
adc
imul
shl
mov
jbe
insb
jl
pushf
sbbl
sub
outsl
leave
xchg
xor
sbb
adc
xor
test
stos
lds
xlat
mov
pop
dec
mov
cmc
jmp
sub
inc
inc
jnp
sub
mov
push
xchg
loop
sub
add
es
jnp
xchg
sbb
je
mov
cmp
lret
test
cs
inc
clc
mov
das
sbb
sbb
xor
xchg
inc
inc
movsb
adc
popa
sbb
mov
push
stos
enter
in
sub
cwtl
aas
movsl
sbb
adcl
lcall
push
push
mov
mov
cli
jge
addb
test
sub
pop
mov
loope
adc
in
mov
dec
outsb
movsl
mov
pop
cmp
out
mov
mov
pushl
dec
xchg
push
xchg
nop
data16
ret
xchg
jg
mov
sub
scas
arpl
xlat
mov
xchg
or
mov
insb
mov
mov
adc
xor
cs
aam
mov
push
or
pop
int
lret
cmp
sub
sti
mov
scas
jecxz
dec
xor
mov
add
fcoms
fsubr
and
push
repz
out
sub
lds
and
mov
aad
out
or
and
xchg
adc
adc
insb
dec
lahf
repz
arpl
lret
add
sub
sbb
sub
mov
repnz
adc
xor
add
mov
fcompl
fs
cmp
mov
or
pop
jae
mov
bound
lret
pop
arpl
pop
xor
dec
xor
ss
inc
mov
rolb
test
invd
repz
push
mov
iret
jb
in
jo
and
push
or
or
dec
adc
or
dec
sub
lds
jbe
shrb
je
into
push
xor
xor
sbb
mov
in
or
inc
lahf
mov
dec
scas
rcl
cwtl
rcl
fdivr
int3
orl
mov
movsb
int3
jmp
inc
cmpsl
mov
test
xor
xor
lea
inc
xor
adc
mov
mov
inc
hlt
addr16
mov
inc
loope
ret
inc
movsl
sbb
popa
hlt
test
lret
fs
loope
pop
mov
stc
sbb
sub
jb,pn
mov
push
shrb
rcrb
test
push
cmc
incl
push
xchg
and
mov
fnclex
dec
sbb
out
cmp
shr
das
sbb
pmaddwd
lods
leave
cmp
jge
subl
outsb
adc
lods
ss
rcrb
add
sbbb
cmpsb
jo
push
cs
repnz
ret
mov
out
test
aam
popa
aad
push
es
fstpt
add
cmp
push
js
mov
test
cwtl
cs
pop
xchg
addr16
dec
out
sarl
pop
mov
je
sbb
int3
das
push
dec
aas
sub
repnz
js
xor
xchg
imul
fstpl
jo
and
or
cmpsl
xchg
sbb
sarl
pusha
jp
mov
mov
loope
lahf
je
pop
into
mov
out
orl
push
xchg
fldcw
jns
fistps
xor
addl
fsubr
test
sub
stc
mov
mov
cmp
jmp
rol
jmp
out
xor
cli
push
out
pop
lret
scas
popf
mov
mov
mov
or
jecxz
mov
xor
out
mov
mov
jns
std
leave
scas
add
out
cmp
xchg
lahf
dec
mov
xor
mov
inc
mov
rcl
sub
leave
mov
fsub
push
repz
or
sarl
pop
in
fstpl
fidivs
or
adc
clc
into
loop
ror
mov
pop
scas
out
arpl
adc
popa
mov
adc
lds
or
das
nop
aam
repz
fwait
jb
cwtl
add
sbb
lock
arpl
ret
out
fnsave
loope
test
mov
sbb
dec
pop
out
and
xchg
jo
mov
mov
lods
dec
push
adc
in
dec
jo
stc
jo
push
mov
and
ljmp
out
mov
cwtl
jne
mov
mov
ss
inc
mov
adc
andb
inc
cltd
lea
inc
jecxz
jg
inc
mov
outsl
mov
sub
cmp
add
xchg
cmc
pop
or
imul
sub
scas
cmpsb
call
iret
cmp
jns
sahf
sbb
aas
icebp
repnz
or
pop
inc
cmp
sbb
push
adc
xchg
cmpsl
popf
mov
mov
jo
add
adc
push
int3
inc
out
inc
and
and
out
out
mov
or
add
push
mov
aad
data16
cmc
xor
mov
mov
sub
pop
jge
movsb
sub
add
nop
scas
js
test
adc
lods
dec
ja
xchg
adc
addr16
jge
sub
fistpll
jns
cmp
mov
push
mov
bswap
adc
sbbb
push
mov
or
mov
xchg
pop
out
cltd
push
xchg
pop
pop
call
jo
shll
cmp
outsl
andl
add
inc
and
in
iret
popf
mov
dec
jno
sub
fstpl
and
inc
dec
dec
cmp
dec
test
mov
and
pop
and
inc
pop
into
xor
nop
jmp
fsubrs
sti
icebp
out
sbb
test
test
push
inc
or
sub
mov
jmp
loope
mov
cmp
testb
xor
sarb
insl
rcr
cmc
mov
cmp
dec
inc
enter
pusha
mov
rcll
repz
pop
mov
jp
shlb
mov
jns
jmp
repnz
and
mov
dec
test
dec
shrb
call
test
xchg
cmpsb
lods
and
xchg
cmp
sbb
sarl
out
or
movsl
sub
andl
ret
testb
sahf
js
xchg
pop
popa
sbb
lods
jecxz
fs
rcll
inc
repz
test
out
dec
xorl
mov
cmp
es
fnstsw
mov
stos
mov
jne
sti
xchg
cmp
aaa
cld
pop
sbb
pop
and
in
xchg
mov
std
stos
hlt
adc
sbb
rcl
loope
adcb
clc
out
imul
jae
or
loope
pushl
test
lret
and
lock
jno
sbb
mov
adc
sub
js
lcall
mov
xchg
and
sub
xchg
jo
cmp
mov
in
mov
scas
into
jnp
lret
adc
arpl
insb
ja
stc
jo
xor
cmc
mov
cli
mov
lock
cmp
add
aad
xchg
scas
sub
xchg
mov
or
mov
sbb
sub
push
push
aam
push
cmp
xor
jle
das
cmp
sarb
or
add
je
mov
lahf
add
push
cmp
jne
aas
jns
xchg
dec
sub
lds
outsl
fidivs
jns
in
sahf
xor
mov
lock
jo
xor
test
add
sbb
insl
sar
jp
xchg
gs
push
xor
fistps
pop
fsubrl
lock
mov
movsb
push
pusha
mov
ss
nop
jecxz
mov
pushf
push
dec
mov
add
jns
xchg
or
lahf
adc
or
or
lret
push
pop
inc
xchg
push
pusha
cmp
jle
and
and
cmp
andb
fdecstp
push
popf
daa
sub
xchg
adc
in
sti
cmp
jl
xlat
rcr
cli
lret
shl
cmp
adc
sub
cwtl
lds
insb
or
test
adc
popf
xchg
cltd
jg
std
pop
call
clc
popf
int
inc
sub
sahf
xor
xchg
cs
push
or
or
fbld
dec
adcl
sub
movsb
idivl
sbb
dec
ljmp
jae
movsb
sub
jle
inc
repz
sti
seta
cmp
ficomps
push
fiadds
mov
shlb
daa
imul
lock
movb
stos
jae
cmpsl
in
das
sbb
subb
jb
clc
mov
xchg
mov
pushf
pop
mov
ret
lods
dec
pop
push
jno
cltd
sbb
xor
test
adc
pop
dec
ret
test
lock
loopne
inc
dec
mov
das
mov
fidivs
testl
pop
jno
cmc
cmp
mov
lret
pop
outsl
js
into
in
in
add
jns
dec
icebp
push
pop
daa
in
pop
sbb
pop
pop
pop
push
sub
cmp
mov
shll
jno
lret
cmp
mov
jbe
push
jo
int
loop
xor
add
cld
fiadds
inc
addr16
xor
or
adc
dec
clc
sub
movl
bound
jg
sbb
push
dec
stc
and
cmp
std
jecxz
dec
push
and
mov
out
cmp
arpl
dec
scas
fmuls
call
scas
inc
data16
mov
loopne
shrb
dec
in
lahf
sub
fs
iret
dec
mov
mov
sbb
out
push
movsl
xchg
outsl
push
xchg
mov
push
lock
sub
mov
call
mov
xchg
ds
div
push
in
jns
je
mov
ss
xchg
imul
shll
push
pop
mov
push
jge
cmc
mov
dec
mov
fcomip
loopne
cmp
loop
pop
sub
mov
aas
mov
notb
js,pn
jge
adc
clc
clc
aas
stos
movsl
push
lods
xchg
mov
ss
pop
adcl
pop
aaa
ja
loope
iret
jne
xchg
jmp
jbe
xor
call
cmc
sub
xchg
sbb
in
or
outsl
xchg
je
lcall
lcall
mov
mov
push
sub
inc
fs
je
cmpsb
jo
filds
cmp
xor
es
shll
add
jle
es
xchg
movsl
lret
rol
loope
add
add
mov
and
lods
jmp
loopne
xor
sahf
loopne
ss
xor
stos
pop
lea
cmc
and
or
mov
dec
fwait
sarb
add
sub
xchg
push
adc
imul
xor
mov
xchg
ja
aaa
and
out
sub
popa
es
or
and
inc
xor
mov
mov
push
fidivrl
jmp
int3
fidivl
add
and
lock
dec
mov
jno
scas
clc
push
fbstp
mov
mov
inc
pop
dec
jns
xchg
adc
pop
add
mov
adc
xchg
aas
ds
dec
jns
pusha
sbb
xor
xor
push
addr16
rcll
mov
sub
cltd
xchg
das
stc
and
mov
or
fmuls
out
dec
and
lds
and
and
sub
add
daa
lods
dec
cld
rorb
fucomip
cmc
sbb
or
cmc
mov
sahf
dec
fs
pop
test
orb
push
stos
add
lret
ret
repnz
outsl
or
nop
lods
imul
mov
push
enter
jecxz
mov
adc
and
xchg
shl
jg
cmpsl
mov
sub
test
mov
jno
int
mov
or
and
out
xor
movb
popa
mov
ret
leave
pop
xchg
popf
test
push
pop
lcallw
mov
mov
sti
and
inc
test
mov
clc
dec
fwait
xor
cld
fisubs
mov
jb
or
scas
lret
and
ljmp
mov
cmp
inc
lock
dec
jge
push
push
sbb
mov
jae
out
push
dec
mov
data16
jno
test
repnz
sub
gs
fmull
push
fcompl
and
inc
scas
sub
ret
cmp
mov
jecxz
jl
inc
or
popf
add
insl
push
push
movsb
push
mov
arpl
add
cmp
fdivrl
addb
mov
adc
rcrl
sbb
push
jmp
es
dec
push
xlat
icebp
and
lock
cli
div
out
dec
push
sarl
jg
mov
in
cmp
mov
mov
or
aad
sub
rolb
adc
rol
xchg
iret
push
or
mov
addr16
shlb
dec
in
fsubrl
shrb
ja
adcb
pop
lcall
cmp
xor
outsl
sarb
les
mov
lea
cmp
pop
sbb
sub
mov
xor
pop
fstl
mov
sub
scas
testb
nop
sbb
or
push
loop
fnsave
xchg
pop
lea
mov
sub
dec
jmp
cs
repz
clc
or
inc
fidivs
pop
sub
sahf
adc
loop
ret
jle
mov
mov
in
dec
mov
iret
or
sub
out
lahf
or
pop
or
jne
sarb
xchg
sub
mov
sub
cmpsl
ds
adc
es
mov
jmp
push
add
cwtl
ljmp
sbb
mov
or
lods
jne
push
je
dec
pop
jmp
sub
jb
pop
cmp
mov
mov
add
adc
add
aad
shr
into
pop
add
fwait
xlat
dec
out
icebp
cmpsl
in
pop
sub
inc
lahf
sar
pop
jl
dec
jo
dec
mov
cmp
jl
mov
lods
jbe
mov
or
sahf
sbb
sub
test
dec
jo
mov
xor
jmp
mov
xlat
movsb
push
mov
add
paddb
in
mov
sbb
and
cli
jo
cmp
xor
mov
and
push
push
subb
into
repnz
mov
mov
dec
or
xor
lods
push
call
cmp
out
test
and
test
add
iret
jg
push
fucomip
xchg
sahf
enter
inc
aam
in
push
dec
aas
push
ss
scas
jbe
insl
push
notl
loopne
in
xchg
mov
mov
adc
mov
jns
in
jb
int
hlt
xor
cld
repnz
enter
or
andb
lfs
clc
dec
scas
dec
out
sarb
aam
push
jne
dec
adc
push
fs
sbb
and
jmp
bound
pop
push
xor
call
or
mov
cmp
push
sbb
mov
pop
aas
and
xor
push
addr16
or
ficoml
cmpsl
arpl
inc
imul
push
jnp
mov
std
pop
ror
push
repz
je
cli
out
xchg
in
dec
sub
dec
mov
jno
lahf
push
arpl
mov
mov
fadd
fwait
enter
das
mov
psubb
add
into
sbb
rep
push
jbe
call
hlt
cmp
lods
push
cmp
hlt
loopne
fldl
xchg
dec
dec
ret
jae
mov
sub
fs
lods
adc
enter
sahf
jno
icebp
dec
dec
dec
lret
push
jmp
add
addr16
repz
stos
aaa
inc
jbe
fmul
pop
repnz
mov
or
cmp
cmp
add
lea
imul
adc
out
push
out
mov
js
clc
out
icebp
hlt
lods
inc
dec
sbb
adc
dec
fdivl
ljmp
xchg
pusha
ja
testb
fcmove
fcmovu
mov
cmp
aad
sub
das
enter
dec
cwtl
cmpsb
leave
pop
es
push
in
xor
inc
outsb
xchg
mov
mov
adcb
xchg
push
enter
pop
jno
xchg
add
adc
fs
push
shlb
sub
stos
loop
divl
xchg
popf
lods
mov
js
cld
mov
dec
bound
cmp
movsb
push
loope
imul
mov
js
lea
aas
xor
out
inc
into
mov
push
stos
psrlw
dec
out
movb
jp
cmpsl
fdivr
pop
adc
pop
lahf
ficoml
call
std
in
push
xchg
jno
repz
loop
ja
leave
sbb
push
sarl
pop
push
lea
inc
jmp
pop
lret
stc
pop
rcrb
loopne
mov
jge
data16
enter
and
xor
aaa
sub
bound
xor
fidivrs
mov
imul
dec
push
test
jb
adc
pop
test
xchg
lea
aad
cmpsb
ja
mov
imul
inc
aam
int
call
add
repnz
xchg
data16
push
out
imul
lock
mov
int3
mov
inc
sub
loop
insl
xchg
mov
cwtl
and
sbb
and
push
xor
dec
leave
sarb
adc
call
adc
mov
mov
xchg
dec
nop
mov
mov
cltd
lret
push
jns
push
adc
push
cmp
push
lods
loop
xor
cmp
dec
jae
bound
lods
jecxz
loop
into
xor
loope
mov
scas
out
or
shlb
loop
xchg
nop
fsubrl
pop
movsb
and
xchg
push
adc
scas
jb
repnz
test
rcl
es
dec
lret
jo
cmp
pop
lods
int3
lret
sbb
lods
pop
scas
jns
jbe
xchg
xchg
cs
mov
out
xchg
cwtl
jmp
pushl
repnz
sbb
pop
xchg
cmpsl
ljmp
inc
jl
mov
repnz
and
add
sahf
data16
push
and
add
sahf
adc
repz
add
aam
mov
push
dec
fmull
lahf
pop
shll
dec
std
inc
mov
pusha
cmc
xchg
iret
push
cmp
cmpb
rcll
or
inc
sbb
lock
iret
bound
push
ljmp
sub
arpl
test
add
cmp
dec
inc
sbb
and
dec
pop
out
test
sti
jb
jmp
inc
mov
push
add
adc
divl
fisubrl
arpl
in
popa
xor
icebp
lahf
in
test
cmpsl
icebp
mov
jbe
mov
pop
pop
scas
jmp
out
js
cs
ret
fwait
aaa
push
or
xchg
out
xor
pop
xor
mov
mov
pusha
lds
xchg
jle
scas
fnsave
popf
aam
sbb
xor
repz
cmp
ret
xchg
fcomps
movsl
mov
call
aam
dec
sbb
xor
or
aam
stos
pop
sub
out
repz
jb
or
sbb
adc
in
xor
movsl
push
add
sbb
fstpl
push
mov
push
jecxz
push
xorl
ficoml
add
fwait
dec
clc
jnp
mov
inc
xchg
stc
out
xlat
or
in
mov
cmp
and
std
cmp
adc
std
test
and
push
add
xlat
hlt
shrl
jmp
sbb
shrl
outsl
test
test
mov
jg
pop
and
sahf
lock
gs
cmp
fcoml
xor
hlt
addb
test
mov
idiv
jg
mov
sub
dec
sti
add
jp
mov
aaa
in
inc
sub
add
dec
ds
in
push
add
in
jl
push
jo
or
dec
push
test
stc
pop
faddl
pop
mov
push
push
xchg
sub
ljmp
mov
add
cltd
in
pop
jns
add
idivl
scas
fdivrs
rcll
pop
jnp
pushl
fmull
mov
das
in
movsl
pop
push
mov
jo
es
inc
in
movsb
pop
xchg
adc
in
dec
xchg
test
adc
stos
pop
out
je
dec
roll
cmc
or
pusha
fiaddl
pop
xor
scas
jo
sub
flds
or
pusha
pop
adc
pop
sbb
ljmp
or
mov
ret
mov
adc
lret
or
pop
clc
ror
fs
mov
xor
enter
inc
test
dec
push
add
mov
into
ja
call
bound
repz
push
and
adc
repnz
scas
mov
andl
or
xor
pop
sbb
add
inc
movsb
movsb
repnz
repz
mov
add
and
adc
sub
das
adc
push
mov
into
mov
cwtl
sub
loopew
add
inc
adc
jne
aaa
adc
loope
aad
xchg
fldenv
std
pop
cmp
jp
outsl
test
push
or
mov
mov
jp
inc
adc
mov
mov
dec
and
mov
add
sub
push
xchg
adc
pop
int3
xlat
repz
outsb
lea
in
lods
inc
scas
adc
push
clc
dec
xchg
adc
lds
mov
push
lret
and
inc
lock
pop
xchg
loopne
cli
xor
fs
mov
std
mov
jle
out
sarb
cmpsb
jbe
push
shl
in
jp
xchg
lahf
sahf
movsl
adc
mov
add
outsb
int3
es
push
jnp
gs
fwait
jl
bsr
imul
pop
and
mov
xor
adc
jecxz
in
dec
shl
push
dec
lock
mov
scas
adc
decl
adc
je
mov
orl
mov
and
adc
into
mov
lret
cmp
das
cmp
jno
jns
xchg
jne
mov
xor
mov
push
mov
push
sbb
push
push
mov
dec
call
pop
pusha
xchg
jmp
in
dec
mov
jo
test
pop
xchg
and
jg
mov
popa
lcall
xor
jo
push
rorl
push
dec
push
imul
aaa
jno
jecxz
pop
ds
vmread
mov
mov
pusha
pop
aas
ss
aam
popf
push
add
mov
cmp
cli
inc
pop
dec
ret
shrb
ds
pop
ss
scas
dec
add
inc
outsb
jb
mov
jno
inc
xor
and
filds
in
dec
shll
loop
mov
loopne
mov
and
int3
repnz
aad
xlat
mov
xchg
test
push
aam
out
fsubrl
ret
push
divl
fdiv
mov
mov
lcall
xlat
fs
movsl
incb
inc
aas
arpl
mov
cmp
jg
jge
mov
in
fstps
imul
xor
pop
test
adc
add
inc
arpl
insl
dec
inc
test
repnz
jno
inc
mov
pusha
pop
cmp
xchg
push
gs
xchg
adc
push
xchg
add
adc
push
pop
pusha
aad
and
push
push
mov
fbld
pop
addr16
insb
popf
addr16
and
stos
sbb
or
fsubr
ja
je
loopew
push
xchg
cs
notl
icebp
test
inc
mov
outsb
adc
rclb
fwait
xor
in
pop
aam
out
notb
push
roll
jne
lahf
pusha
add
push
and
js
lahf
popa
pop
push
movsl
pop
xor
add
cmp
stc
daa
movsl
fildl
leave
in
stc
inc
aaa
or
int
jl
add
adc
or
xchg
cltd
add
or
sub
lea
es
cmc
in
cmp
jmp
push
lahf
fildll
mov
push
orl
sar
pop
loopne
scas
sbb
or
cmp
push
imul
add
and
test
bound
in
xor
mov
sub
stos
mov
inc
leave
ja
repnz
in
and
xorl
adc
xchg
mov
pop
pop
and
pushf
mov
lods
imul
pmullw
shrb
in
insb
xor
enter
push
pop
mov
push
jp
dec
or
in
cmp
test
int3
and
outsl
adc
sbb
push
out
push
push
xor
fidivrl
sahf
push
push
mov
pop
pop
adc
push
es
fs
in
sub
call
xchg
ss
add
jp
xlat
loopne
and
in
nop
ljmp
out
fcoms
xor
fdivrs
xchg
ja
jne
dec
cwtl
adc
push
pop
lea
je
cltd
xchg
mov
repnz
repnz
iret
mov
ja
sbb
jmp
jae
pop
and
sub
mov
xlat
or
sub
xchg
mul
xlat
lret
pushf
in
cld
jns
inc
jne
adc
pusha
adc
mov
sub
mov
adc
loop
mov
mov
popa
cmp
mov
xchg
or
cmp
fst
incb
push
xchg
mov
adc
and
arpl
nop
push
pop
fnstenv
adc
cwtl
sub
and
mov
icebp
je
pop
ret
ror
inc
sbb
add
outsb
mov
or
shll
pop
mov
pop
lahf
lods
js
jg
push
lahf
mov
ljmp
loopne
mov
jnp
fs
shll
fistpl
popa
out
mov
xor
pop
cmp
sbb
push
jmp
jae
jg
decb
in
mov
xchg
and
inc
sbb
jl
pop
aam
sbb
pushf
sbb
adc
and
cmp
loop
inc
jecxz
pop
mov
sbb
mov
out
and
lock
roll
cmpb
sbb
push
mov
bound
pop
or
movsl
test
push
scas
adc
dec
test
and
rcr
std
testl
imul
test
arpl
mov
pop
pop
sub
or
cmp
mov
add
mov
fbld
xor
fs
out
pop
mov
sbb
fs
xchg
jne
or
outsl
bound
pop
fldcw
movsl
add
xchg
sub
aad
out
mov
cmp
cmp
ficomps
and
pop
fwait
and
lock
ret
stc
dec
arpl
dec
fsubs
or
sbb
inc
xchg
das
rolb
inc
xor
dec
jne
add
scas
and
test
push
sbb
loop
andl
jo
mov
push
push
nop
cmp
dec
jne
ds
adc
call
sub
dec
mov
fwait
lret
push
leave
push
sbb
sbb
out
and
pop
jle
jb
popl
nop
mov
xor
sub
clc
mov
imul
lods
xchg
loop
mov
and
sub
mov
inc
mov
imul
xor
mov
js
test
popa
push
pop
addr16
add
dec
pop
xchg
mov
aad
aaa
fisubrs
sbb
lods
and
lea
outsb
and
ja
lods
cmp
xor
mov
pop
std
mov
vmwrite
pop
and
iret
pop
pushf
adc
inc
pop
sti
xchg
lods
insb
push
jl
adc
hlt
movsb
leave
inc
jp
and
pusha
mov
out
mov
lods
xor
push
add
pop
fldt
enter
pushl
push
rcrb
push
push
imul
vshufps
xlat
jae
jecxz
stc
imul
ljmp
inc
sub
das
out
bnd
push
lcall
in
loope
mov
mov
cmp
cwtl
mov
stc
jp
loope,pn
fcoml
mov
mov
inc
call
mov
sub
outsl
stos
cmp
test
inc
in
pop
mov
jne
out
add
daa
sbb
inc
shrl
or
stos
cmp
arpl
aam
nop
ret
push
popa
test
xor
dec
enter
loope
cmp
ljmp
daa
ffreep
dec
push
and
xor
jne
mov
push
dec
jl
mov
out
repnz
lods
loope
pop
jnp
add
loop
jg
jno
push
ds
pop
mov
and
pop
jge
movsb
icebp
ret
ret
add
add
fldl
jge
pop
shl
fists
mov
ss
jl
mov
scas
cmp
sub
jg
stos
push
push
mov
lds
xchg
adc
pushf
sbb
xchg
mov
cmp
add
mov
pushfw
aad
inc
int3
clc
pop
jb
mov
loope
fstl
jb
sub
rcl
sub
aam
or
cld
jb
mov
mov
add
cmp
and
loopne
pop
icebp
push
add
sarb
push
lea
enter
cmp
xchg
inc
lds
fidivrs
mov
movsb
jae
lret
movsb
push
xchg
jl
insb
and
sti
jmp
out
inc
jbe
mov
movsl
cmp
lods
jb
add
pop
test
stos
enter
mov
into
stos
fwait
push
or
imull
mov
push
inc
push
dec
fimuls
lcall
and
insb
scas
mov
call
jl
pop
push
xchg
es
cli
pop
daa
or
dec
les
ret
mov
mov
popf
insb
mov
jl
jmp
mov
dec
adc
xchg
push
into
sbb
cmc
out
push
pop
inc
orl
pop
sti
adc
and
dec
testb
rclb
and
push
nop
dec
pushf
into
roll
inc
test
addr16
incb
les
fisubrs
add
outsb
add
mov
cmp
out
int3
dec
outsb
cltd
lcall
test
push
or
mov
add
clc
xchg
or
cmp
les
ja
add
scas
adc
out
mov
insl
mov
sahf
fmulp
xchg
lret
ss
and
es
cmp
hlt
pop
cld
add
shl
push
dec
mov
sbb
test
in
loopne
addb
movl
jmp
adc
daa
movsl
pop
je
repz
add
fiaddl
sub
inc
inc
fs
data16
pop
insb
pop
xchg
fnsave
mov
fsubrp
std
pusha
push
out
lret
mov
mov
jecxz
xchg
mov
call
lock
sti
popa
ss
or
jnp
push
or
push
and
or
xorb
nop
jo
push
cwtl
xchg
inc
lea
fxam
fwait
and
xor
xchg
pop
inc
cmpsb
imull
xor
mov
mov
mov
stos
shll
lock
js
ret
mov
or
test
pop
sarl
mov
sbb
ljmp
adc
ficompl
out
bound
or
int
sbb
push
cltd
sbb
add
pop
sarb
outsl
pop
mov
mov
xor
ret
test
xor
cmpsl
and
mov
outsb
fisubrl
adc
hlt
loopne
pop
or
pop
andb
aad
push
test
mov
dec
out
mov
adc
sahf
dec
inc
loopne
xchg
or
push
sahf
ss
adc
icebp
inc
sarb
jl
repz
insb
addr16
cmp
je
and
mov
cmp
push
jle
sub
pop
scas
xchg
cwtl
shlb
fildl
fstpt
mov
sbb
ficoms
pop
xchg
inc
sbb
out
cli
imul
sbb
dec
jecxz
mov
mov
imul
outsb
push
pushf
fsubs
shlb
xchg
loop
test
jp
pop
inc
mov
test
add
lock
dec
xchg
inc
imull
mov
out
jne
aaa
andb
outsb
adc
xchg
jecxz
sti
imul
rcl
jns
dec
lods
or
ds
push
cmp
cmp
fstpt
push
jb
subb
fcoms
mov
mov
xchg
push
shl
add
xchg
outsb
ret
outsb
mov
xorb
mov
daa
fs
pop
push
cld
pop
lds
ds
pop
mov
xor
mov
rol
das
dec
jnp
lret
jp
movsl
or
push
mov
jp
jo
jno
xchg
roll
ret
pop
push
xchg
xchg
popa
je
je
adc
fs
xchg
dec
jne
jbe
mov
jle
test
movsl
in
aam
leave
jno
ror
pop
decl
mov
jne
add
inc
out
clc
nop
and
imul
mov
xchg
sahf
outsl
adc
adc
dec
cmpsl
inc
xor
and
jb
pop
or
xchg
sbb
in
cmpsl
mov
insl
sub
sub
je
addr16
push
mov
std
add
leave
sbb
gs
test
test
and
xchg
ret
lock
and
mov
jne
jae
mov
or
or
mov
cmp
mov
mov
inc
je
mov
rep
and
dec
rolb
push
mov
mov
push
inc
loop
sbb
pop
subb
pop
xlat
inc
dec
mov
imul
sahf
in
adc
xchg
stc
pop
sarl
push
pop
das
push
push
dec
clc
outsl
mov
jle
add
daa
movl
fcompl
fs
inc
mov
gs
idivb
data16
sbb
mov
je
jnp
into
mov
shlb
pusha
cmp
cmc
pushf
in
and
add
mov
inc
cltd
pop
movsb
cs
and
movsb
or
sub
int
mov
in
push
lar
pop
out
xchg
cld
pop
pop
inc
cld
xor
popf
jge
cmc
clc
ret
cmpsl
out
and
in
imul
jle
cmp
sub
inc
rcl
adc
cmpsl
mov
into
std
in
test
push
and
test
roll
outsb
in
imul
lahf
xchg
jmp
sub
and
mov
pop
push
call
sub
push
dec
and
push
scas
add
mov
and
in
jb
cmc
mov
fbstp
inc
sub
ficoms
and
insb
dec
ds
adc
mov
call
pop
mov
aas
cmp
xor
jne
pop
mov
outsb
idivl
gs
inc
or
or
pop
sbb
dec
test
push
es
insl
mov
inc
push
cmp
notb
aad
cmpsl
test
rcrl
test
mov
pop
jmp
aas
mov
jl
scas
lds
iret
pop
outsl
lock
lock
mov
out
add
jo
inc
ficoms
insl
imul
test
hlt
mov
jb
xchg
cmc
fildl
jge
aas
dec
pushf
mov
shll
fisttps
sub
mov
mov
and
xchg
inc
gs
in
adc
inc
nop
leave
jne
call
sbb
test
sti
aas
repz
rclb
xorl
stos
jl
mov
add
inc
aas
xchg
pop
pop
lcall
jb
ljmp
push
jmp
pusha
enter
jmp
fwait
sbb
push
lds
push
jle
mov
rcll
xchg
js
mov
test
jb
loop
rorb
dec
mov
or
fisubl
jns
and
mov
cmpsl
out
xlat
cmc
or
jb
stc
mov
sbb
or
sub
mov
xor
popf
enter
repnz
dec
jl
mov
frstor
or
push
test
push
xchg
mov
pop
enter
pop
adc
mov
mov
adc
call
xor
shlb
cmpsl
hlt
adc
lods
xchg
mov
add
popf
test
aad
mov
adc
sbb
cmp
pop
xchg
adcl
add
xchg
dec
lahf
lock
push
imul
mov
repnz
push
sbb
repnz
popa
pop
mov
dec
sbb
mov
es
push
je
xor
mov
mov
mov
pop
add
js
call
aad
mov
push
imul
out
aaa
mov
cmp
hlt
jb
or
ljmp
jae,pt
and
nop
xchg
mov
xor
roll
push
xor
sbb
and
shl
inc
jne
cld
mov
das
lcall
cmp
sbb
into
orl
dec
xor
jmp
push
repz
inc
dec
add
sub
adc
aam
mov
push
in
pop
mov
xchg
xchg
add
popl
or
or
xchg
sub
out
jmp
pushf
das
add
int
push
mov
push
inc
and
sbb
test
iret
hlt
and
sub
xor
gs
inc
jne
jl
loop
cmpb
stos
mov
mov
pushf
dec
int3
xchg
xchg
xor
push
xor
dec
popa
jae
and
in
dec
jmp
daa
pop
addl
lea
out
loope
out
pop
and
add
mov
movmskps
jmp
hlt
mov
and
lea
push
leave
test
lock
add
xor
add
push
jp
dec
jno
mov
leave
push
data16
pop
into
icebp
adc
sub
fisttps
add
sbb
loop
mov
sub
and
mov
call
pop
in
or
das
int3
xor
cmc
loop
xchg
shrb
rclb
mov
push
xchg
push
flds
mov
push
orb
loope
push
cmc
repnz
ljmp
jns
mov
in
cld
push
jp
aam
and
cwtl
packuswb
dec
cmp
mov
dec
stos
insl
testb
sbb
push
movsb
mov
sarl
push
cs
fwait
mov
icebp
cmp
inc
jmp
aam
roll
mov
dec
jecxz
pop
push
dec
aam
adc
stos
outsb
ret
cmp
push
jle
cmp
push
dec
lret
lock
sbb
or
in
sbb
push
mov
les
pop
repnz
pop
mov
aam
test
scas
repz
pop
dec
fucomp
repz
fcomp
scas
and
cmp
movsl
or
push
mov
sbb
adc
insb
cmpsl
sbbl
xchg
push
or
push
sub
mov
out
cmp
cli
pop
sub
adc
adc
out
stos
jb
pop
fwait
xor
pushf
insb
mov
es
aas
cmp
daa
adc
cmp
pop
pop
ficoms
jg
lods
xchg
ds
add
stos
dec
jne
push
ret
add
dec
inc
mov
inc
fadds
fdiv
mov
aam
xor
sub
inc
mov
mov
xchg
sub
aaa
adc
or
ret
xor
push
push
and
mov
loopne
hlt
loop
in
push
daa
aas
xchg
cwtl
xor
pop
push
repz
outsl
pop
xchg
cmp
jne
dec
into
adc
xchg
pop
pop
cmp
push
fsubrl
or
add
pushf
and
mov
scas
mov
and
mov
cmpsl
leave
adc
mov
into
adc
imul
outsb
test
mov
xchg
pop
hlt
push
dec
outsb
scas
fmuls
xchg
jno
adc
mov
sbb
jmp
pusha
dec
mov
inc
mov
mov
std
daa
outsb
sbb
repnz
aad
sub
or
add
mov
ljmp
jb
mov
lods
stc
jle
jl
lret
mov
sbb
test
mov
std
clc
and
mov
fcomp
ss
cmp
into
xchg
sbb
es
ret
data16
shll
leave
sahf
mov
ficomps
xchg
jno
fsubs
pop
pcmpeqd
pop
xchg
mov
or
mov
arpl
rorb
out
lds
add
test
add
sahf
out
leave
sub
insl
sub
data16
lods
repz
add
cld
add
push
addr16
dec
xor
imul
dec
mov
xorl
adc
pop
jmp
mulps
addl
push
jno
in
dec
mov
pcmpeqw
jge
mov
enter
cmp
sub
popf
and
mov
jmp
pop
cmc
push
leave
ljmp
fnstenv
jmp
adc
out
pop
scas
push
daa
ja
pop
xor
lods
shlb
inc
loope
test
lea
sbb
das
aas
shl
inc
lcall
nop
pop
pop
mov
fldt
mov
fstps
mov
push
jno
sbb
sub
or
pop
adc
mov
mov
sub
push
repnz
in
sbb
xor
scas
ficomps
cmp
mov
lods
jo
lret
rorl
push
jecxz
jae
xchg
stos
mov
out
adc
mov
dec
sbb
add
and
xchg
test
mov
pushf
jmp
jl
push
outsb
addl
cmpsl
xchg
sub
stos
loopne
mov
sub
cmpsb
enter
cmp
pop
rclw
pop
sar
lea
lahf
adc
js
nop
jo
mov
mov
icebp
mov
pop
cld
mov
out
scas
xor
rcrb
frstor
shlb
in
cmpb
shll
je
add
adc
mov
loope
xchg
mov
mov
mov
aas
or
movsb
aaa
adc
rcl
mov
aas
xor
sub
call
lock
xor
enter
cmp
jo
add
or
mov
bound
push
jmp
jge
orb
jle
jo
mov
mov
add
daa
jmp
adc
add
arpl
cmpsl
jmp
jns
ret
aas
cmpsb
cwtl
mov
push
scas
lock
stos
std
cmp
enter
sbb
popf
push
jno
in
mov
mov
xor
fsts
nop
push
push
imul
ficomps
in
into
lahf
adc
push
ret
loopne
jne
stos
in
addb
outsl
mov
inc
pushf
jg
in
pop
repz
sbb
pusha
jl
lahf
into
push
jbe
xor
sbb
lcall
mov
add
ljmp
inc
sbb
popf
ja
and
data16
dec
and
jecxz
jmp
addr16
mov
dec
xor
movsl
cli
jmp
or
ror
adc
out
das
inc
fcoml
les
and
push
push
push
add
adc
xchg
iret
lret
movsb
jb
xchg
xor
call
scas
insl
jb
js
scas
push
shlb
push
push
test
jmp
rcrl
hlt
das
xchg
shr
add
jne
and
mov
mov
inc
das
mov
popf
mov
mov
sbb
bound
mov
mov
dec
loop
loopne
xor
aad
xor
jecxz
or
lret
add
or
mov
sbb
or
mov
stos
xchg
add
in
dec
jns
xor
cltd
and
mov
and
push
xchg
xor
and
and
jne
imul
enter
and
xchg
inc
pushf
xchg
xor
mov
mov
mov
nop
in
dec
aad
sub
or
jne
push
stos
mov
mov
mov
out
in
insb
mov
imull
cmpsl
mov
mov
shrb
cltd
lods
ja
xchg
mov
sbb
out
aaa
repz
adc
jmp
movsl
dec
shr
cmovg
popf
cmp
or
add
cmp
add
loop
sbbb
xlat
mov
xor
cmpb
lods
jo
cli
ljmp
sti
test
repnz
or
lods
inc
dec
mov
ds
xchg
mov
rcll
sti
insl
dec
fisttps
jbe
in
stc
mov
pop
inc
and
stos
mov
inc
pop
inc
stos
ficoms
push
cmpsb
lcall
push
fadds
jb
das
int
inc
pop
xchg
aam
test
aaa
cmp
cmc
adc
dec
cld
mov
mov
not
fmuls
out
jg
jle
stos
adc
test
or
out
stos
negl
add
jl
mov
ret
es
push
push
out
fcomps
dec
jo
add
lahf
xor
jbe
xor
push
add
pop
xchg
jb
mov
roll
push
popf
test
stos
shlb
sub
or
inc
movsb
lds
mov
fcompl
push
fistl
gs
mov
pop
repz
and
in
mov
cli
sbb
lcall
les
sub
mov
pusha
fadd
lds
aad
push
or
jns
imull
in
aad
sarl
por
mov
ret
adc
ret
and
adc
out
pop
xor
pop
or
stos
sarl
adc
mov
push
fisttps
fldl2e
cli
or
jle
push
xchg
xor
cwtl
push
pop
je
jle
lret
int3
xchg
pop
and
ror
inc
pop
add
leave
or
test
push
fwait
cmp
out
add
cmp
sub
rorl
rcrb
repz
xor
mov
lock
test
loopne
rorb
and
movsb
adc
dec
out
cltd
out
jb
icebp
mov
push
cmp
xchg
ja
sarl
xchg
sahf
jg
jns
mov
mov
xor
xchg
mov
ljmp
cwtl
jge
pop
xchg
xor
ret
sub
mov
xchg
mov
mov
das
add
loope
jmp
mov
dec
out
fdiv
push
subb
xor
dec
or
inc
dec
mov
fstpl
stos
std
out
aaa
and
cmc
adc
xor
and
daa
pop
hlt
mov
popf
dec
inc
adc
xor
nop
mov
stos
and
sub
insb
hlt
lods
xor
pop
es
pop
add
imul
cmp
mov
mov
hlt
jp
jp
push
xor
sub
pop
fmulp
int
pop
inc
es
and
ljmp
cmp
div
into
push
xchg
pushf
clc
mov
mov
and
loop
pop
popf
jmp
outsb
cmp
stos
jg
nop
mov
cmp
or
cld
cmc
pop
sub
and
adc
test
add
push
push
mov
sub
jge
dec
jnp
out
xchg
and
and
xchg
cmp
xor
dec
decb
scas
xor
xchg
bound
sbbb
aad
ja
flds
cwtl
jnp
sub
in
sbb
std
pop
stos
inc
lret
xchg
sub
cltd
lcall
and
sbb
jne
dec
mov
inc
mov
iret
push
fmul
fldl
xchg
jo
test
push
fsubrs
imul
sub
push
shrl
sub
mov
out
hlt
hlt
jns
mov
mov
jl
lret
pushf
and
jae
ds
fnstcw
fsubs
gs
sub
mov
push
xchg
mov
inc
enter
jmp
push
repnz
orl
sahf
or
xchg
fsts
xchg
jno
jns
jnp
ljmp
inc
lahf
ret
jmp
xchg
cld
stc
scas
mov
jmp
js
add
xlat
inc
aam
xchg
pop
add
les
inc
fildll
dec
nop
mov
mov
mov
sar
mov
movsb
mov
mov
shrl
mov
inc
and
arpl
das
out
mov
mov
cmc
sti
pop
and
cmp
sub
mov
ljmp
fnstcw
ret
mov
rcrl
aas
aaa
je
lods
xchg
dec
adc
out
inc
jl
add
xor
dec
inc
sub
pusha
cmpb
fsub
ja
mulb
pop
shrb
cmp
shr
mov
inc
movsl
push
push
xor
sub
jne
mov
fwait
scas
inc
jnp
inc
lahf
mov
xchg
movsl
fwait
imul
les
lea
fmull
cltd
int
enter
jg
in
adcl
mov
lods
mov
testl
les
dec
adc
and
dec
scas
out
lock
jmp
idiv
inc
outsb
out
jge
xor
mov
les
pop
lcall
jo
shrl
cmp
xor
pop
stos
fldenv
cmc
fnstsw
sub
push
mov
sub
cmp
mov
lods
cmp
lock
and
scas
or
sbb
imul
ret
cmpsb
pusha
ret
inc
mov
and
mov
or
jne
divb
xchg
arpl
pop
bound
mov
lret
push
popf
xchg
mov
sub
push
insl
lock
stos
lods
mov
dec
mov
cmp
jl
sub
imul
dec
adc
mov
daa
adc
ss
cmp
xchg
repz
sahf
push
leave
pop
loopne
in
jecxz
pop
movsl
push
jg
inc
adc
jmp
add
cmp
xor
fbld
jg
and
jnp
jno
aad
xor
lods
mov
or
cmp
mov
loopne
xor
test
mov
gs
cmp
lock
outsb
hlt
push
dec
cmp
les
mov
mov
sbbl
les
hlt
dec
inc
and
frstor
add
sub
push
int
or
xchg
orl
ljmp
push
das
insl
andb
jl
and
call
adc
xchg
add
std
stos
jbe
cmc
and
inc
in
xchg
dec
adc
subb
push
push
mov
ljmp
xchg
ret
outsb
pushf
in
mov
pmaxub
out
push
sub
jge
sbb
xor
pop
xchg
imull
pop
movsl
pop
inc
sbb
pop
rcll
adc
fisttpl
in
sahf
add
cmp
sbb
jmp
fnsave
hlt
icebp
mov
jp
fsub
pop
jne
xor
push
inc
and
inc
push
insl
out
xchg
leave
repz
mul
push
adc
xchg
jp
ret
push
xchg
add
data16
xor
mulb
idivb
mov
adc
bound
out
or
les
in
pop
out
ja
mov
xor
frstor
dec
ret
push
pusha
and
push
pusha
jnp
in
or
lret
lahf
out
dec
jmp
push
cs
out
or
data16
lods
in
lds
gs
mov
or
in
xor
je
push
nop
dec
cmpsb
sub
lock
push
sbb
push
pop
out
imul
or
mov
fsubs
add
xchg
fstpl
sub
mov
push
ffreep
outsl
jno
loop
test
hlt
pop
sub
lret
jp
mov
or
and
call
xor
inc
fimuls
mov
lds
xchg
aas
in
or
mov
and
inc
or
fld
add
jbe
stc
out
imul
xchg
and
out
data16
imul
popf
adc
jp
das
out
es
arpl
pop
lea
incb
idivl
dec
lret
lock
test
xor
insl
push
dec
fstps
pop
mov
mov
daa
cmpsl
jb
test
pop
mov
data16
mov
pop
loop
dec
mov
fstpt
aas
push
pop
and
pop
fbld
cmp
xor
popa
int3
pop
fmuls
dec
push
adc
sahf
aad
hlt
xor
jbe
mov
mov
or
jo
lret
mov
inc
sbb
push
push
lods
pop
lods
push
pusha
jp
jbe
add
out
enter
gs
push
aas
mov
repz
pop
movsb
fistps
or
clc
cwtl
scas
and
movsl
in
cs
in
dec
adc
aam
adcl
int3
xorb
repnz
repnz
loope
mov
push
xor
nop
daa
outsl
pop
push
sbb
and
negb
sbb
and
not
push
jge
ljmp
addl
push
mov
pop
xor
fisttpll
repz
out
mov
test
jnp
rorl
test
shl
rcrb
daa
mov
sub
fs
mov
push
jmp
xor
jmp
nop
inc
clc
fidivs
in
daa
jecxz
rolb
cmpsl
sbb
enter
fildll
cld
mov
and
loop
adc
push
xor
fs
jp
or
scas
out
jle
movsb
dec
insb
xchg
arpl
addr16
mov
loop
stos
mov
scas
sub
shll
das
mov
or
jo
leave
mov
mov
cmp
mov
inc
pop
sub
inc
push
std
xor
stos
int
pusha
sar
es
in
sub
pop
shll
mov
aad
jo
std
dec
adc
mov
sub
xchg
and
mov
popa
jae
jno
mov
pop
insl
or
jbe
adcl
insl
stos
mov
jmp
and
sub
ret
int
and
pop
jo
nop
cmc
or
repz
pop
xor
aas
mov
jmp
inc
add
mov
pop
fstpt
cs
int3
add
dec
movsb
imulb
push
lock
rcrl
shr
scas
insb
sbb
test
mov
jle
jbe
punpckldq
out
jb
sti
in
cmpb
shlb
push
loopne
in
iret
cli
pop
ffreep
enter
mov
sahf
shlb
mov
cmp
adc
adc
dec
into
dec
scas
jmp
cmp
out
or
sbb
test
pavgb
flds
inc
int3
repnz
mov
xor
dec
fisttps
and
jns
mov
add
inc
imul
lods
jnp
cmp
test
pop
dec
lret
das
or
and
dec
scas
aam
jb
dec
mov
stc
dec
andl
dec
mov
pop
and
mov
jecxz
push
mov
inc
xchg
inc
shlb
xchg
sbb
mov
loop
shl
enter
sbb
and
in
out
je
fisubrl
xchg
push
adc
pop
push
xchg
xchg
xor
dec
mov
push
mov
pop
jbe
pop
test
movsl
test
jb
xchg
cwtl
shl
pop
pusha
mov
mov
xor
mov
sub
out
cmp
popf
cmp
pop
mov
sub
cmpsb
outsb
int
js
js
jno
gs
sub
lret
aas
aam
cmpb
pop
inc
push
jo
js
loop
push
push
sbb
inc
pop
rolb
cwtl
ja
mov
adc
mov
sub
xchg
sbb
inc
push
pop
push
mov
ret
xlat
xchg
cltd
inc
push
aaa
lcall
loop
pop
inc
cmp
adc
in
in
fwait
jo
sub
adc
leave
mov
popa
insl
stos
cmp
into
subl
pop
inc
popf
or
pushw
pop
mov
jle
imul
dec
mov
sub
aam
xchg
decl
sub
cmp
xchg
cli
das
mov
loopne
add
fldcw
push
mov
push
je
movsb
stc
clc
lock
int3
gs
cmc
inc
xor
out
ror
insb
icebp
add
and
jl
aaa
dec
clc
push
aaa
pusha
mov
or
mov
push
cmp
mov
mov
clc
sbb
cmpsb
dec
rcl
push
fcompl
cmpl
test
pop
or
mov
xchg
jmp
mov
scas
daa
mov
fst
les
mov
and
mov
arpl
cmp
mov
mov
mov
icebp
mov
cmpsl
sbb
cs
int3
xchg
inc
fs
popa
mov
aas
mov
movb
clc
ja
dec
push
dec
call
cmpb
inc
adc
or
out
mov
lahf
cmp
cmp
lds
or
push
iret
mov
in
fdivr
mov
fcomps
mov
fs
lcall
scas
adc
sbb
stc
xor
pop
xchg
xchg
stos
inc
inc
push
in
xor
insl
mov
add
xor
fnstenv
mov
bound
mov
mov
or
cwtl
jne
and
out
loop
int
fisttps
sub
cwtl
ror
dec
and
mov
fisubs
imul
stos
pusha
adc
lock
pop
and
lea
inc
arpl
into
add
mov
dec
adc
sub
int3
pop
ror
jmp
addr16
dec
imul
enter
int3
dec
in
sahf
push
xchg
in
loopne
dec
insb
push
cmp
sub
daa
loopne
add
sbb
xchg
mov
mov
mov
push
stos
pop
cltd
push
fldl
cli
lods
mov
cmpsl
andb
sbb
shll
ret
enter
fsubs
or
sub
adc
cwtl
popa
mov
push
imul
add
xchg
js
jmp
or
mov
sub
mov
fistpl
cs
aaa
loopne
fs
cmp
fnstcw
pop
xchg
mov
and
dec
lcall
and
imul
fcoms
ficoml
call
pop
cs
mov
sarl
add
int
repz
sub
and
dec
add
mov
loopne
push
pop
or
movsl
mov
adc
pop
rolb
xor
add
cmpsl
ljmp
sahf
gs
add
aam
stos
sub
das
fbld
sahf
mov
pop
xlat
movsl
adc
mov
dec
ret
repz
sbb
iret
dec
sub
jmp
and
inc
cmp
sub
repz
xor
test
imul
sbb
and
dec
pop
push
push
xchg
pop
fbstp
sub
jg
add
mov
push
sbb
int
mov
mov
add
divl
mov
mov
inc
xor
push
dec
test
adc
shlb
push
cld
mov
iret
jns
cmp
adc
mov
and
addr16
shl
mov
inc
mov
cmpsb
and
cmpsl
xor
das
mov
lock
cltd
lcall
push
mov
push
ret
pop
sahf
pop
shlb
lahf
adc
push
pop
sbb
adc
stc
or
push
xchg
out
pmaxsw
push
push
clc
in
pop
clc
pop
xchg
addb
sti
movsb
push
dec
cmpps
bswap
xchg
dec
dec
loope
jne
push
and
lock
jns
out
aam
jb
xor
lahf
cmp
push
jge
jnp
andl
pop
mov
aaa
lcall
and
cmp
xor
in
cmp
test
push
cmp
mov
outsl
cmpsb
fsubs
sbb
inc
push
xor
xchg
aaa
xor
mov
inc
insl
addr16
shll
icebp
stos
addb
push
and
dec
lock
mov
push
or
and
rorl
shrb
dec
xchg
jns
push
xchg
push
enter
cltd
js
and
sub
cwtl
push
cld
loope
cmp
loope
pop
adc
sbb
stc
cltd
lret
and
push
dec
das
lods
xlat
stc
cmc
ficomps
clc
popa
jg
fisubrl
popa
or
dec
mov
jbe
jl
jle
imul
shr
mov
mov
in
pop
arpl
cli
sti
sbb
lahf
stos
xlat
cmp
adc
or
mov
js
pmulhw
and
sbb
push
dec
lods
mov
adc
jo
or
push
xchg
and
mov
jmp
test
inc
xchg
ljmp
cmp
inc
xor
data16
mov
jmp
int3
lcall
mov
jnp
sub
cmp
mov
jp
or
push
pop
rcl
lcall
adc
out
sub
xor
xor
xlat
cmp
les
cwtl
cmp
lods
in
jo
lahf
add
inc
sbb
icebp
mov
ret
jo
and
cmc
pop
push
out
repz
jge
cmp
pop
mov
lcall
mov
xchg
daa
insl
fildl
xchg
daa
mov
adcl
adcl
out
or
or
xchg
mov
and
insb
sub
inc
mov
push
loopne
loopew
pop
jbe
call
mov
mov
sbb
adc
fistps
loopne
add
push
xchg
outsl
clc
int3
push
jb
repz
xor
cmp
jne
in
sahf
mov
lods
lret
mov
mov
sbb
nop
push
bound
mov
ret
addl
stc
xchg
bound
sbb
mov
imul
sbb
adc
pop
cld
sub
fiaddl
dec
push
pop
daa
cmp
ss
adc
rorl
cmpsl
int
lahf
mov
mov
cltd
out
jbe
insl
popf
cltd
cmpsl
shrl
sub
cwtl
or
push
or
adc
push
pop
or
xchg
adcl
cld
jbe
mov
scas
mov
or
loope
add
sbb
sbb
scas
xchg
int3
add
cmc
jge
adc
rolb
imulb
roll
jl
sub
stos
mov
push
ficomps
adc
jge
cmp
cld
xchg
loop
or
or
xchg
out
and
mov
gs
mov
test
jo
xor
xor
pop
push
add
and
or
call
xchg
es
repz
or
jecxz
inc
sbb
xor
fsubrp
mov
push
ss
stos
xchg
mov
sub
imul
sub
int3
and
outsl
int3
test
or
inc
enter
dec
mov
dec
fistpl
testb
jp
int3
mov
repnz
fs
ret
in
ret
int3
je
sbb
cmp
outsb
and
or
sbb
iret
scas
loop
jge
jno
incb
push
and
fnstenv
mov
imull
stc
mov
ret
jmp
adc
fs
sbb
ds
clc
je
jge
adc
pushf
sbb
mov
xchg
loop
in
cmp
into
sbbb
fstpt
push
imul
cmpsb
nop
fadds
js
mov
pop
dec
dec
sub
call
decl
mov
addr16
cs
gs
insb
insb
inc
jl
mov
inc
cmc
les
mov
cmp
add
cmpsl
jmp
scas
cmpsb
jmp
ficoms
pushf
mov
cmp
test
push
jb
pop
aam
mov
lcall
pop
dec
pusha
dec
es
int
fisubrs
in
enter
xorl
sbb
xchg
lock
cmp
jp
mov
mov
cmc
icebp
mov
mov
sbb
pushf
sbb
lcall
dec
clc
aaa
mov
mov
ret
lods
pusha
push
mov
mov
repz
dec
sbbb
mov
lods
dec
mov
shlb
in
dec
or
add
sbb
imul
pop
and
jo
adc
xor
aas
pop
xlat
into
js
mov
popa
xlat
mov
popa
outsl
sbb
outsb
pop
arpl
pop
orb
sub
and
test
dec
adc
or
sbb
push
pop
lock
push
clc
mov
push
mov
loop
mov
inc
addl
test
cmp
icebp
sbbb
gs
fmull
adc
std
test
push
repz
pushf
gs
rcrb
adc
cmp
mov
decb
push
je
mov
and
shll
dec
lods
call
jns
cmpsl
jmp
jb
addr16
mov
xor
fbstp
js
and
addb
cli
in
push
in
sbb
rcrb
push
aaa
adc
mov
lock
dec
pusha
incb
movsb
stos
movsb
addr16
and
and
mov
dec
sahf
push
fbld
inc
fisttps
rcl
cmc
lcall
sbb
dec
lods
clc
cmp
and
test
lods
rcrl
dec
pusha
inc
push
mov
pop
out
fldl
dec
cmp
imulb
push
daa
mov
dec
xchg
cmc
or
outsb
mov
test
sub
stc
mov
dec
dec
addl
mov
sbb
stc
xchg
inc
cmp
leave
ds
pushf
add
add
push
push
pop
jne
fdivrs
lahf
add
mov
jns
addr16
or
cmp
cmp
mov
and
cwtl
loope
ret
in
rcl
mov
mov
adc
sub
movsb
push
movsb
or
jbe
pop
addb
addb
insl
mov
out
push
jmp
mov
repz
add
cmp
insb
mov
xlat
jae
daa
xor
addb
rcrl
sub
stos
push
out
movsl
push
lods
insb
fcom
xor
or
jb
add
push
add
and
test
push
mov
outsl
cmpb
in
mov
sub
xor
test
push
pop
jns
in
lods
pop
inc
and
mov
mov
sbb
pushf
xor
cmpsb
sbb
mov
dec
pop
push
pop
xchg
xor
dec
rorb
jae
fisttpll
push
adc
mov
insl
sbb
and
sub
in
pop
sti
aam
fmull
xor
dec
xchg
es
cs
sbb
dec
push
incl
add
mov
ljmp
sbb
or
ja
stos
jo
flds
lods
pusha
sbb
adc
cmpsl
fisubl
jo
loope
and
or
orb
or
sub
xor
dec
les
nop
ss
aaa
fiadds
jns
pop
cmpsl
lahf
xor
movsl
popf
and
scas
sbb
sub
addr16
jp
inc
xor
push
mov
push
sub
push
push
adc
insl
mov
lret
repnz
and
ficompl
lods
jne
sbb
lcall
es
lea
outsl
in
mov
fldl
insb
dec
xchg
mov
mov
push
xor
inc
out
push
pop
sti
in
sbb
and
and
hlt
mulb
and
in
fcmovne
xchg
addr16
les
insb
sbb
mov
test
icebp
stos
or
stos
sti
cmp
cmc
ss
movsb
cmp
sahf
push
jge
ja
xchg
mov
push
jp
scas
sbb
lret
mov
fiaddl
mov
jecxz
sub
add
cmpb
sub
mov
frstor
insb
jae
cmp
in
in
and
sub
imul
in
xor
add
scas
repnz
dec
mov
ss
adc
cmp
subb
or
rcll
xor
lock
inc
cmp
xchg
adc
imul
js
jge
xor
dec
xor
push
jno
std
adc
outsl
mov
inc
test
roll
repz
cmp
pushf
dec
cmpsl
daa
fsubr
mov
xchg
push
loopne
fs
jno
hlt
dec
in
mov
xor
or
bound
add
sub
mov
cltd
cmc
sbb
lcall
lock
jne
push
std
adc
or
inc
xor
cmp
fdivrl
fs
mov
jno
shll
js
xor
fdivs
ret
aaa
or
in
dec
aad
sbb
jo
shl
xchg
test
push
mov
test
adcb
outsb
mov
cwtl
ja
out
in
sub
xor
popl
mov
sub
or
leave
push
xchg
insb
sti
fimull
sbb
jne
lea
mov
loop
cmp
cwtl
iret
fdiv
daa
push
mov
mov
into
pop
cmpb
arpl
cli
popf
insb
popf
jno
dec
sub
sub
add
loop
fsts
and
jns
xchg
std
inc
pop
xchg
sub
sub
fwait
inc
jo
out
pop
mov
dec
lock
jnp
and
popf
pop
enter
faddl
pop
enter
int3
adcl
lods
jae
popf
mov
les
pop
les
aam
and
mov
ret
jo
mov
decl
push
or
and
and
or
jb
fsubs
xchg
dec
or
out
jp
dec
jmp
xchg
mov
mov
add
push
lock
add
or
repnz
mov
rolb
pop
push
add
mov
adc
mov
popf
adc
sbb
mov
std
xchg
aaa
loope
arpl
mov
popa
aad
aam
jbe
xor
popf
cli
xchg
loope
std
mov
scas
sub
dec
stos
je
aaa
popf
mov
roll
in
mov
fstpt
fidivrs
mov
sbb
daa
mov
mov
pop
dec
arpl
xchg
pop
xchg
xchg
jecxz
iret
repz
sub
sti
lock
jg
imul
test
xchg
add
pop
push
adcb
movsbl
jno
cmc
sbb
jg
lcall
cs
adc
and
or
imul
aam
ret
aad
insl
lock
and
rorb
stos
out
rorb
or
aad
aas
sub
sbb
cs
pop
mov
stc
fnstcw
sub
ja
jae
mov
xor
gs
hlt
bound
cmpsl
loopne
mov
cmp
adc
xchg
dec
mov
xchg
icebp
sti
jp
pop
sub
inc
jmp
lods
mov
movsb
xor
and
and
pop
xor
dec
lcall
int3
subl
xchg
fistps
and
rorb
je
call
cli
daa
adc
movsl
out
dec
jle
add
fcompl
jge
lcall
or
lcall
xchg
inc
mov
mov
notl
pushf
jle
in
xchg
xchg
stos
rorl
enter
out
mov
mov
push
cwtl
xor
scas
stos
out
mov
aaa
or
mov
xor
add
dec
xlat
push
dec
pusha
dec
stos
sbb
sbb
sub
imul
enter
dec
imul
inc
jbe
loop
fbld
jno
add
mov
push
pop
mov
lods
rclb
and
mov
dec
pop
cmpsl
out
subl
xchg
xchg
mov
xor
in
mov
filds
inc
mov
and
sti
push
lahf
les
ret
xor
dec
pop
pop
mov
mov
inc
mov
dec
call
pop
lret
fnstcw
sti
lret
sub
inc
sbb
dec
movsl
mov
lds
daa
xor
int3
out
sub
cmp
pop
sub
mov
es
adc
cmp
cli
sbb
daa
cld
ja
xor
sti
or
cmpsb
daa
add
negl
xchg
mov
inc
push
scas
sub
ficoms
jle
mov
popa
iret
adc
shll
dec
add
sub
adc
push
pop
mov
ret
sub
lea
stos
cmp
mov
mov
adc
popf
sub
shl
pop
popa
xchg
fiaddl
xchg
test
scas
mov
stc
inc
and
pushf
xor
dec
inc
into
xchg
scas
je
out
cmp
adc
xchg
scas
mov
scas
mov
div
and
aas
adc
push
push
enter
ret
add
mov
xchg
psubsw
mov
test
cmp
into
nop
cltd
and
cmp
mov
cmpsl
loope
popf
push
mov
push
xor
dec
xchg
or
sbb
pop
or
loop
cmp
cmpsb
inc
jmp
movsb
test
ljmp
xor
cmp
es
push
mov
out
xor
clc
mov
xor
int
arpl
js
xchg
sbb
mov
test
je
cmp
inc
cmp
inc
add
adc
adc
and
cli
fistl
fs
xorl
sub
inc
leave
mov
dec
pop
ret
ljmp
xchg
stos
pop
fbstp
je
lea
les
fwait
mov
hlt
stos
data16
rol
pop
and
inc
and
mov
add
xchg
mov
lret
std
xchg
int3
repz
js
cli
xchg
lods
xor
or
insb
push
fildll
in
jns
loope
jecxz
pop
push
cltd
jmp
cs
push
jp
aas
xor
cmp
or
or
add
and
adcl
pop
adc
xor
inc
insb
or
xor
int3
ljmp
stos
pushf
mov
sub
dec
das
out
int
in
add
nop
or
lret
mov
inc
ja
push
enter
cld
jmp
mov
add
and
adc
sub
mov
in
into
jp
inc
call
std
pop
nopl
and
adc
in
insl
ljmp
sub
cs
push
cmc
mov
lods
cltd
xor
std
xor
mov
cmc
clc
fs
loop
stos
pop
sbb
pextrw
jl
dec
jb
xchg
pop
mov
pop
nop
clc
mov
sub
pusha
sub
mov
sbb
out
fisubl
ret
pop
and
and
dec
jmp
inc
test
lods
xor
addr16
mov
push
and
movsb
jnp
cmp
dec
addr16
xchg
pop
jmp
pushf
sbb
ret
fiaddl
adc
bound
sbbb
push
outsl
out
xor
jecxz
jg
cli
call
xchg
add
and
xor
mov
int
sub
and
call
nop
push
cmp
repz
or
stos
cmp
aam
mov
jns
inc
in
enter
fwait
jp
mov
sbb
jge
add
repnz
xchg
xchg
icebp
jno
sahf
aad
fisubrl
xchg
movsb
mov
jns
gs
xor
xchg
outsl
cwtl
pop
fcoml
inc
stos
adc
mov
add
sti
call
or
add
xlat
out
mov
xchg
ret
aaa
loop
imul
add
out
gs
and
mov
mov
out
adc
cmpsb
inc
bound
fnstenv
aad
out
inc
xchg
jne
bound
push
and
in
push
in
stc
push
mov
push
pop
pop
xchg
jmp
out
cmpsb
pop
shrb
jge
je
hlt
push
int3
cld
imul
adc
dec
xlat
jb
shlb
fldl
lcall
gs
xchg
outsl
cmpsb
xchg
add
xor
into
cmovb
xor
mov
sti
dec
lret
mov
or
aaa
repz
xchg
mov
adc
mov
pop
fstpt
add
shrb
scas
pop
mov
cmpsb
xorl
cmp
xchg
clc
bnd
dec
xchg
in
iret
lods
dec
insb
mov
xor
es
mov
inc
cwtl
and
shlb
iret
inc
scas
out
xchg
das
inc
shlb
xor
ror
push
ffree
sub
pop
or
out
add
xchg
iret
pushf
push
mov
hlt
cmpb
movsl
mov
cmc
push
pop
dec
mov
add
mov
rcr
rorl
lret
imul
clc
xchg
add
cmpb
lock
mov
inc
xor
inc
arpl
jb
lret
das
cmc
inc
add
and
pop
mov
dec
cmp
adc
mov
push
mov
and
dec
test
sbb
sbb
dec
mov
inc
mov
xor
iret
js
pop
cmpsb
cmp
sahf
pop
pop
int3
inc
mov
mov
in
sbb
gs
jmp
cwtl
fidivrl
icebp
sub
icebp
sbb
mov
add
outsb
xchg
adc
ficoml
pop
pushf
not
enter
scas
rcll
fisubrs
enter
notl
ss
push
arpl
je
ret
dec
insb
stos
lret
mov
jo
mov
mov
sub
rorb
js
sarb
mov
repnz
sbb
sub
fiaddl
sub
mov
or
cmp
loopne
les
xchg
jae
push
icebp
pop
int3
mov
xchg
inc
iret
push
ljmp
pop
test
mov
call
loopne
scas
pop
lock
push
mov
adc
rorb
stos
je
hlt
mov
cmp
int3
xchg
mov
or
mov
mov
gs
jp
push
mov
cmp
push
aaa
test
scas
cs
inc
inc
adc
gs
sub
cmp
fsubrl
xadd
enter
es
cli
push
dec
jae
ja
sub
xor
sti
push
popa
add
pop
int3
icebp
fsts
mov
lahf
ret
cld
inc
add
inc
mov
push
sbb
pop
adc
fists
pop
push
je
push
mov
jb
adc
cwtl
movsb
loope
mov
jl
test
mov
jno
jne
outsb
ljmp
lcall
cmp
div
jnp
sub
ss
inc
xchg
mov
clc
lock
stc
mov
xchg
shlb
cmp
adc
cmc
test
les
call
mov
lea
cmpl
pop
fwait
test
pop
adc
xor
push
call
lcall
stos
insb
loopne
test
mov
lret
movsb
cmp
fst
arpl
dec
xorl
jae
jl
cmpsb
dec
lahf
sub
popa
insl
sbbb
mov
push
in
dec
sub
sbb
pop
dec
sar
stos
jno
xor
fstpl
arpl
jle
and
insl
sub
push
xor
xchg
fisttpl
jns
ja
or
xchg
rcl
jge
mov
test
out
out
sub
or
fstp
xchg
xor
into
fdivrs
shlb
xor
stos
test
test
inc
stc
adc
xlat
jno
mov
push
jecxz
adc
jmp
clc
xchg
xor
add
jmp
in
mov
jp
call
es
xchg
pop
push
out
adc
rol
dec
out
mov
pop
mov
outsl
fistpl
mov
test
xlat
jbe
pop
adc
mov
mov
outsl
ja
scas
cmp
aad
int
neg
cmp
dec
add
int
sub
insb
lret
push
cs
sbb
inc
adcb
cmp
xchg
scas
adc
mov
mov
test
add
mov
cmp
shrb
mov
cmp
roll
out
lret
lods
mov
movsl
in
ds
jp
jbe
dec
lock
call
jmp
lret
jne
repnz
in
mov
xchg
push
mov
push
ja
popa
mov
adc
xchg
or
or
jecxz
loop
cmp
loopne
or
cmp
jg
cli
call
ljmp
lahf
cmp
mov
xchg
or
jecxz
xchg
inc
cwtl
cmp
fcmove
push
ret
in
mov
sti
pop
inc
mov
cmp
imul
and
testb
popf
push
add
popf
sti
add
lahf
adc
pop
popf
dec
imul
les
push
xchg
cmp
insb
push
xchg
mov
rcrl
popa
jae
mov
imul
jae
xchg
outsl
daa
es
cmp
mul
inc
inc
insb
push
in
ja
fnsave
mov
test
xchg
sub
dec
cmp
das
or
mov
push
push
scas
jnp
cwtl
pop
cmc
imul
push
std
leave
xor
xor
sbb
mov
and
inc
pop
insl
loop
mov
sub
cmpsl
aam
sbb
cltd
stos
addr16
loope
xchg
xor
fwait
or
adc
or
push
cmpl
jns
lods
pop
fs
pop
mov
repz
jns
movsl
jo
movsb
aas
clc
shll
addr16
sub
mov
ret
imul
cli
mov
xchg
nop
mov
push
push
iret
clc
push
call
in
xchg
and
ret
push
jno
add
mov
cmp
sete
push
adc
cmpsb
add
cmpsb
icebp
in
lret
jp
adc
mov
aam
lea
jp
xchg
icebp
shrb
fwait
push
push
test
in
push
dec
dec
push
or
test
and
cmp
scas
daa
push
ss
mov
xchg
jp
xchg
in
cmc
push
lahf
lahf
jle
and
pop
xchg
inc
mov
aas
jb
mov
movsl
sub
cmp
fcompl
int
cmc
imul
jle
das
xor
mov
xchg
pop
pop
mov
add
in
jno
mov
ja
ljmp
aas
xchg
push
or
pop
in
dec
push
or
add
xor
cmp
hlt
in
lcall
lret
sbb
add
add
inc
jnp
xchg
lret
lret
mov
add
sbb
cmp
mov
sbb
pusha
mov
cltd
pushf
sub
xchg
sbb
xchg
ja
mov
jae
sbb
cld
repnz
adc
and
xorl
cwtl
add
enter
dec
hlt
aaa
sbb
pop
stos
cmp
movsl
sbb
call
or
je
sbb
dec
hlt
dec
sub
adc
cmp
xchg
add
repnz
push
cmp
mov
cmp
jo
add
test
aad
dec
cltd
xchg
divl
ret
jle
bound
mov
mov
push
data16
pop
xor
mov
inc
jae
js
mov
fistpl
sub
jb
dec
cs
movsb
inc
and
sub
add
jb
outsb
outsb
jbe
es
sbb
cli
push
scas
lea
push
in
outsl
addb
jmp
sbb
sbb
pushf
push
sub
imul
into
push
cmc
sub
aad
xor
cmp
mov
or
mov
movsb
xchg
jns
sub
sub
dec
insl
das
fld
mov
mov
mov
cld
fidivrl
mov
cld
test
push
es
and
popa
imul
inc
xorl
mov
dec
scas
pop
in
mov
pop
adc
ficomps
fstpl
cmp
test
cmp
sub
in
fistps
es
add
js
sbb
mov
shll
cmpsl
fadds
test
push
js
jmp
out
adc
cmp
push
push
repz
cmpsb
mov
cmp
ds
sbb
mov
pop
insl
sub
cs
incb
pusha
xchg
cli
sbb
mov
fsts
out
push
pop
inc
outsl
loopne
scas
sbb
pop
gs
inc
lods
sub
popa
fwait
lea
jle
leave
add
ds
xor
inc
fdivp
popf
add
rorb
cmp
dec
loop
push
push
aas
arpl
gs
aas
stc
es
mov
xchg
cmp
andl
insb
dec
jns
jnp
inc
fisubrs
mov
add
nop
pusha
mov
mov
inc
fidivrs
xchg
test
in
push
or
loop
adc
mov
or
cld
frstor
inc
loop
xor
adc
dec
sub
int
aad
mov
ljmp
pushf
jp
daa
push
sti
aas
push
mov
pushf
xchg
push
scas
pushf
mov
or
dec
scas
xlat
test
push
xchg
or
xor
cmc
add
mov
or
out
imul
loop
push
pop
repz
sub
dec
jb
mov
insl
data16
insb
push
sti
push
push
stos
xor
jnp
pop
xchg
pop
repnz
cmp
pop
xchg
or
jns
in
scas
ds
adc
mov
dec
sbb
push
stos
jmp
mov
mov
push
mov
mov
pop
mov
or
lahf
push
out
sti
and
in
push
inc
xor
insb
sbbb
jo
dec
ret
jae
ret
sbb
notb
into
dec
fists
aas
in
aad
xchg
jae
push
ljmp
xchg
add
insb
mov
mov
cmp
js
imul
cmpb
scas
push
pusha
mov
pop
fld
lds
pop
ficompl
lock
repnz
popa
icebp
shlb
test
pop
in
push
in
mov
mov
sub
sbb
mov
and
pop
cltd
shrb
mov
sbb
test
push
sub
pop
mov
mov
inc
sbb
and
xchg
and
lret
bound
inc
shl
sub
mov
icebp
popa
test
lods
testl
cs
pushf
or
jle
jle
pushf
or
in
rorl
loop
es
pop
ds
leave
mov
sbb
loope
mov
jecxz
mov
push
sub
and
std
xchg
insl
fs
ljmp
mov
xchg
pushf
pop
insl
movsl
cmp
mov
inc
mov
test
iret
enter
xchg
filds
loopne
sarb
add
xor
jne
add
pop
repz
mov
fstl
imul
adc
pop
jmp
push
adc
dec
divl
adc
cmp
popf
jns
cwtl
mov
mov
dec
iret
push
mov
sbb
lcall
xor
pushf
xchg
add
movsl
inc
in
mov
lcall
movb
out
xchg
jle
sbb
mov
fldcw
sub
jl
xor
cli
jb
xlat
sahf
xchg
or
and
out
repz
cmp
or
int3
fsts
and
cs
test
push
mov
xchg
test
and
or
cmp
fstpt
aam
fldcw
aam
pusha
pop
movb
fildl
xor
ds
lods
sub
aam
mov
and
adc
jae
jne
insl
cld
ret
pop
xchg
cmp
dec
fs
push
lods
and
xchg
aam
or
jge
pop
fwait
dec
mov
out
sti
adc
xlat
inc
inc
cs
mov
jl
jge
fldcw
jle
adc
push
xchg
dec
cmpsb
loopne
push
mov
nop
jp
pushf
dec
adc
add
xor
xchg
mov
mov
and
pop
out
aad
test
in
or
add
cmpsb
jp
mov
sub
push
mov
cmp
lret
stos
push
repnz
ja
dec
push
rol
lods
arpl
lret
pushf
js,pt
cmpsb
mov
ss
dec
int
mov
arpl
outsb
cmp
and
cli
je
lahf
loop
rcrb
rcrl
into
sbb
daa
mov
mov
adc
fistpl
inc
aas
fbld
inc
mov
ljmp
cmp
shrl
adc
jne
in
dec
in
xchg
xchg
add
push
xor
arpl
je
roll
jne
loopne
xchg
push
test
dec
js
xchg
neg
and
loopne
pop
push
xchg
jp
xchg
jge
xchg
inc
fdiv
fstl
call
xchg
adc
sub
stos
mov
xchg
inc
addl
push
jl
sbb
push
cmpsl
xchg
in
leave
movsb
stos
int
test
das
out
inc
cmp
xlat
adc
mov
in
call
aam
or
pop
adc
xchg
cmp
jbe
int
xor
cmpb
jg
sbb
jmp
pop
push
adc
cmp
pushl
jmp
xor
xchg
xchg
cmpsl
or
or
xor
loope
in
xchg
jp
xor
add
inc
jno
mov
loop
int3
mov
test
sbb
sub
sar
add
shrb
mov
fisubrl
lea
lahf
sub
add
out
jo
add
pop
cs
adc
cli
xchg
mov
jno
sahf
dec
inc
fs
jo
mov
das
outsl
lret
popf
out
mov
xchg
inc
jle
outsb
loopne
lods
in
clc
fs
cmc
enter
popf
popa
or
daa
clc
cmp
push
lret
xchg
fsts
sbb
and
sbb
push
movsb
fldenv
jecxz
mov
xor
outsl
xor
and
push
mov
cmp
push
xchg
pop
roll
mov
xor
xor
mov
sti
fwait
imul
flds
jle
xor
data16
xchg
inc
andl
pop
insb
leave
jae
ret
add
dec
in
or
jbe
xchg
and
add
dec
insb
inc
push
push
sbb
repz
outsl
sub
inc
call
mov
mov
sbb
adc
fidivs
stc
and
mov
nop
clc
mov
out
pop
dec
ljmp
je
pop
movsl
pop
ret
in
mov
cmp
and
rorb
mov
jns
aam
and
push
or
shll
mov
xor
mov
mov
mov
or
push
shl
dec
fldcw
std
popa
add
cld
out
fisubrs
mov
mov
push
ljmp
in
fstenv
cli
sbb
daa
insb
fbld
mov
xor
xor
inc
leave
push
notl
push
test
lea
out
in
jmp
xchg
sti
loopne
nop
negl
dec
jns
adc
in
jg
pop
add
and
clc
lret
sbb
cmpsl
cwtl
aas
dec
mull
lds
ja
sub
cltd
stos
cmp
enter
lret
mov
cld
dec
xor
repnz
cmpsl
ljmp
mov
add
jne
rclb
gs
pop
mov
xorl
mull
repnz
add
cltd
and
data16
stos
adc
pop
xchg
dec
sbb
pusha
nop
xchg
pop
data16
inc
jne
and
repz
lea
js
cmp
mov
jle
rcl
aas
mov
pop
adc
fsts
lock
enter
nop
test
int3
push
mov
ds
or
shrb
jmp
sub
cmp
and
fnstsw
sbb
sbb
inc
ds
outsb
fwait
xchg
push
cmp
pop
jecxz
or
xor
shl
jl
pop
insb
mov
push
jno
test
setae
mov
adc
pusha
insl
outsl
inc
or
outsb
cmc
xor
loopne
and
fs
lods
out
aam
sbb
fsubrs
mov
pushf
cmpsl
sub
ds
lock
add
push
xor
sbb
pop
jmp
insb
pop
or
cmp
arpl
ret
pop
cbtw
cmp
inc
sbb
gs
sbb
outsb
in
xchg
mov
movb
and
icebp
pop
sbb
lret
ss
xchg
push
jecxz
mulb
sbb
les
jne
idivb
ret
bound
or
orl
test
jbe
mov
call
mov
imul
aaa
pop
ja
shl
mov
movsb
mov
mov
test
mov
jge
mov
lret
xor
cmp
adc
stos
sub
jle
cmpsb
daa
pop
call
add
adc
ficoml
fucom
xchg
sbb
popf
jnp
ja
into
mov
lock
or
mov
and
or
mov
fwait
std
mov
jae,pt
push
lods
incb
scas
mov
push
mov
imul
mov
pop
pop
or
and
daa
or
pop
in
int
bound
int
add
out
dec
cmpsl
cmpsb
push
cmp
jecxz
mov
inc
mov
and
and
jg
mov
iret
ret
mov
mov
mov
add
sbb
sub
out
inc
and
xlat
shrb
loop
arpl
inc
fbld
stos
adc
mov
cmpsb
in
xchg
xor
je
mov
pop
sbb
cmp
pop
in
mov
daa
xchg
and
mov
das
inc
cs
jno
dec
pop
pop
aas
ret
sarl
fsubrs
lcall
sti
or
mov
popl
cltd
add
xor
add
sbb
xor
or
arpl
insl
out
mov
cmp
jl
push
mov
fisttpll
cmp
hlt
push
test
cwtl
in
inc
enter
dec
or
fisubrs
notb
mov
adcl
hlt
ljmp
jl
jnp
clc
icebp
outsb
cmp
fistpl
mov
rolb
bound
sub
mov
test
dec
ficoml
xchg
sub
xlat
cmpsl
adc
mov
fstps
pop
js
gs
xchg
mov
jae
sbb
pop
test
pop
sub
mov
add
ljmp
xor
xchg
jbe
push
loope
add
es
out
lret
mov
mov
cmp
lret
insl
add
and
in
inc
mull
idiv
push
inc
push
lret
pop
mov
xchg
mov
sub
xor
mov
stc
es
shlb
push
fidivs
pop
push
pop
popf
aaa
and
mov
out
cmpsb
enter
dec
cmc
push
jb
into
push
test
and
mov
fsubrl
add
add
outsl
jp
mov
inc
sbb
mov
jecxz
daa
sbb
mov
stc
cmpsb
mov
mov
sbbl
test
fcom
fs
or
jl
push
mov
flds
int
push
aam
pop
fidivs
sub
js
xor
inc
std
test
jbe
sahf
mov
lods
jbe
loop
es
leave
adc
aaa
stos
push
cwtl
addl
cmpb
jb
add
lods
notl
jnp
xchg
leave
add
cwtl
stc
jg
sub
jb
mov
xchg
push
mov
add
insb
push
mov
in
jbe
or
in
pop
cmp
ljmp
loopne
loopne
or
cmpsb
cltd
sbb
out
add
or
dec
mov
dec
sbb
jae
stc
nop
insl
out
addl
push
pop
stos
lods
loop
ss
xchg
notb
fs
imul
shlb
inc
arpl
inc
test
or
adc
and
mov
jge
mov
and
adc
enter
enter
sbb
add
push
cmp
xlat
cltd
cltd
cmpsb
inc
mov
inc
stc
and
inc
jecxz
mov
repnz
add
clc
jg
test
mov
mov
lcall
mov
cwtl
jo
inc
jge
mov
clc
pop
add
ljmp
popa
fadds
in
sub
ss
pop
fldenv
addr16
jns
shll
dec
mov
mov
dec
lret
cmp
rcll
or
lods
pop
outsl
pop
ficomps
xchg
lea
jne
je
and
pushf
lea
imul
gs
xor
sahf
cmp
xchg
lahf
dec
add
std
push
mov
sbb
mov
out
lahf
rorb
mov
adc
xor
cmp
shrl
jmp
repnz
mov
inc
cwtl
jne
xor
inc
sahf
mov
cs
inc
int
aad
adc
pop
sub
stos
jecxz
je
daa
in
push
repz
ljmp
cmp
inc
push
jnp
int
or
ljmp
jl
mov
mov
sbb
jne
mov
int
mov
jg
pop
movsb
cmpsb
push
shlb
lods
fadd
push
xor
lahf
mov
sbb
aad
push
push
cmp
data16
mov
inc
jmp
ljmp
xor
fsubr
jg
in
gs
fcmovb
rcrb
loope
cs
push
mov
cmpsb
jle
out
jb
shr
ds
jmp
or
gs
fildl
mov
mov
pop
sub
hlt
imull
inc
icebp
daa
insl
ja
dec
fs
cmpsl
xor
add
repnz
push
scas
lret
mov
push
orb
xchg
sbb
je
ret
xchg
push
bound
sti
pop
test
shl
scas
ret
xchg
repnz
out
fs
subb
lds
sbb
sbb
or
mov
ljmp
imul
xchg
roll
adc
fidivrl
clc
cmp
and
mov
cmp
mov
int3
ret
stos
shrb
je
xchg
fnstsw
pop
jecxz
push
sahf
push
mov
jnp
sbb
int3
sub
enter
sbb
ret
sbb
das
mov
xchg
insb
fdivl
into
loopne
aam
jecxz
shlb
mov
mov
and
mov
inc
mov
dec
pop
imul
inc
xchg
pop
mov
jae
ret
lret
sbb
out
jae
cld
mov
add
mov
xorl
arpl
sbbb
mov
lahf
sbb
stos
cmpsl
xor
ss
adc
mov
push
int3
fcom
stos
test
repz
adc
data16
movsb
test
subb
popa
xor
inc
mov
leave
sub
push
rcl
rolb
jb
and
add
xor
and
data16
mov
push
push
fisttpll
es
inc
scas
aam
jne
jae
push
push
test
xchg
mov
mov
jp
ret
xor
daa
out
jae
frstor
divb
sub
mov
sarl
in
push
cmc
out
loopne
fidivl
cld
addr16
cmp
jl
dec
les
adc
into
pop
mov
xlat
xlat
jl
shll
xchg
inc
and
insl
insb
stc
or
addl
sbb
ret
daa
push
mov
out
push
sbb
insb
push
push
fcomp
pusha
push
xor
popa
imul
fsubrl
mov
and
jns
ret
in
outsl
int
inc
jp
cmp
xlat
fstps
ljmp
sbb
das
mov
mov
mov
int
lds
mov
ret
cmpl
cli
xchg
xchg
pop
cwtl
insb
ja
std
xchg
subl
ss
sub
in
fistl
inc
imul
int3
push
scas
imul
fs
aam
mov
ficoms
imul
mov
xor
ret
enter
arpl
mov
lods
rolb
les
mov
jp
ss
push
fisubs
push
add
adc
mov
insl
add
add
dec
fwait
jl
inc
loope
xchg
add
in
fdivr
xor
and
mov
mov
sub
jae
push
mov
fwait
or
jns
fs
pop
sub
pop
mov
and
daa
stc
fcoms
inc
adc
xchg
sarb
xor
cli
mov
mov
iret
mov
mov
loope
out
sbb
aam
into
dec
lcall
push
inc
pop
addb
cmp
clc
mov
pop
sub
pusha
fildl
pop
scas
out
inc
movsb
cli
sbb
jp
mov
int3
mov
cmp
dec
jae
jle
pushf
push
test
mov
rorb
hlt
inc
call
lea
adc
pop
adcb
call
lahf
movsb
mov
jl
xor
outsl
jne
test
fwait
and
cmpsl
lret
call
push
xchg
aas
mov
mov
jp
out
scas
leave
xchg
shrl
lcall
mov
mov
pop
cmc
hlt
and
dec
pop
aas
in
xchg
dec
sahf
push
sub
sbb
xchg
push
testb
scas
mov
sbb
add
aaa
sub
loope
inc
jae
dec
xchg
repz
outsl
mov
jo
mov
mov
cmp
movsb
pop
insb
outsl
push
dec
and
jle
call
das
xor
sbb
adc
mov
mov
jmp
mov
sub
stc
pushl
fistl
xchg
jnp
fisttpl
shrl
and
adc
xor
fcoms
aad
add
push
fidivrl
rclb
jae
pop
loopne
adc
movb
cmp
pop
orl
push
cmc
lret
lock
outsb
lea
jae
outsl
stc
lds
push
int
xchg
inc
cltd
mov
nop
repnz
ja
pusha
daa
mov
arpl
push
cwtl
enter
mov
push
xor
popa
outsb
das
andl
into
testl
xor
fstl
lahf
dec
fs
cmpsb
xchg
xor
mov
jno
xor
imul
lret
test
push
subb
dec
es
bound
push
inc
cmovs
negl
test
mov
xchg
out
fs
xchg
ljmp
mov
cmp
adc
mov
cmp
jge
or
sbb
in
dec
pop
fnstenv
add
std
cwtl
xchg
add
cmpsb
jge
dec
and
les
jno
mov
push
jp
or
mov
mov
in
pop
push
int3
dec
mov
push
push
dec
mov
mov
inc
loopne
sub
mov
dec
mov
mov
adc
jne
sub
cwtl
iret
sti
sti
mov
stc
mov
cmp
jnp
stc
sbb
jne
mov
add
add
xchg
das
adc
mov
mov
scas
bound
jmp
test
movsb
jnp
add
les
insl
movsl
in
cmp
xchg
pop
mov
jbe
sbb
popf
jbe
xchg
xchg
icebp
inc
pushf
dec
adc
xchg
inc
push
sar
adc
mov
test
lock
mov
sbb
rolb
out
or
cmpsb
lcall
inc
mov
aas
and
pop
sbb
dec
mov
stc
into
pop
xchg
movsl
inc
xchg
ja
repnz
or
mov
test
movsb
dec
aam
and
imul
dec
push
fistps
out
xchg
push
repnz
dec
iret
jecxz
inc
sub
testb
cld
add
lea
push
aas
mov
add
test
lods
xor
gs
in
scas
leave
sahf
add
lret
push
jmp
inc
cmp
in
test
xor
pop
xchg
imul
push
cmp
mov
mov
lret
scas
int
das
dec
test
xlat
out
lcall
pop
push
sbb
mov
mov
mov
ja
inc
sub
and
dec
cmp
mov
repz
jae
jmp
std
dec
and
in
adcb
sbb
xchg
inc
xor
sbb
inc
test
adc
xor
mov
or
sbb
xchg
popf
fs
push
rcll
adc
jl
mov
notl
lahf
xchg
bound
mov
cwtl
inc
jg
mov
push
xchg
xor
std
inc
adc
dec
mov
fwait
or
lret
outsl
dec
loopne
popa
test
movl
inc
clc
lret
jl
int
loop
in
sub
fidivs
inc
or
mov
add
add
loopne
xchg
add
ss
popf
lds
hlt
rcrl
add
into
test
nop
mov
push
loope
or
and
scas
jge
fstl
in
jl
jl
rolb
xor
jno
sub
jo
dec
sbb
jmp
sub
mov
loopne
push
jle
push
mov
and
jmp
mov
lret
mov
rcr
cli
movsl
inc
dec
enter
or
movsl
or
inc
add
movsb
insl
jae
and
or
jp
in
out
fcomip
insb
jnp
es
or
je
cmp
cmp
or
cmp
adc
pop
dec
les
movsl
jle
mov
mov
mov
pop
push
mov
jae
mov
sarl
mov
push
and
add
xchg
faddl
inc
lahf
add
out
dec
dec
mov
pop
fdivrs
adc
stos
push
add
and
std
pop
mov
ror
push
sub
cltd
mov
je
sahf
mov
fxch
add
or
inc
lea
adc
pmuludq
stos
or
dec
xor
lahf
lock
push
pop
pop
fidivl
xchg
data16
jne
dec
add
and
cmp
in
loop
setg
inc
in
lods
push
addb
dec
xchg
and
and
and
push
mov
popf
xchg
push
movsl
and
xchg
pop
repnz
and
in
adc
lods
sbb
sub
adc
pop
js
mov
int
push
or
into
sub
outsl
and
inc
pop
aas
mov
sbb
addb
mov
jmp
pusha
push
xchg
adc
or
jge
xchg
pop
in
and
cs
push
and
repnz
add
sti
jno
push
pop
aaa
repnz
incl
dec
inc
out
lds
inc
out
jg
enter
cmpsb
pop
and
inc
add
testl
hlt
mov
add
repnz
mov
imul
icebp
fcmovbe
cs
ret
push
ret
xchg
icebp
stos
add
shl
rol
inc
mov
and
rorl
imul
mov
xchg
lds
sti
lea
sub
jae
out
jl
jp
test
icebp
cmpsl
sub
mov
push
scas
mov
negb
addr16
bound
jnp
orl
mov
lods
xchg
sbb
lcall
ret
lock
js
cmp
cmp
or
jg
test
dec
mov
dec
ss
xchg
or
loope
inc
lcall
fistl
jmp
adc
inc
ds
mov
incl
inc
shl
push
xchg
jb
imul
mov
inc
and
shrl
mov
or
lods
mov
aas
xchg
lahf
les
dec
push
and
lret
sti
aas
adc
push
push
mov
cwtl
add
fidivrl
jnp
rcrl
imul
iret
jo
bound
in
jne
xchg
mov
and
test
lahf
and
in
inc
repnz
sub
sub
cmpb
jo
fisubl
add
mov
fwait
adc
jmp
sub
jb
cmp
jmp
mov
popa
dec
sbb
enter
cmp
addl
inc
jp
loope
mov
dec
jne
das
mov
push
lock
jle
jg
cld
rcrl
cwtl
out
adc
sbb
mov
aaa
fnsave
mull
jb
jp
dec
repz
adc
shll
sub
pop
fistpl
xlat
fnstenv
daa
addr16
dec
dec
inc
sbb
repz
mov
inc
sub
stos
movsb
pop
pop
xchg
sarl
cmp
xor
push
push
fldcw
cmp
push
pop
repnz
push
sub
stc
lret
adcb
mov
fstps
mov
pop
mov
pop
andl
inc
out
mov
push
leave
and
jmp
jecxz
and
pop
inc
push
lret
and
dec
rclb
cli
cltd
push
pop
xor
test
pop
iret
insb
std
clc
cmp
inc
loop
and
push
call
imul
dec
adc
call
scas
add
xchg
hlt
sarl
and
mov
mov
fdivl
test
adc
mov
inc
xchg
mov
cli
aad
out
cmp
add
lret
cmpsb
fildll
push
mov
jb
pop
jl
icebp
add
pop
test
xchg
mov
loop
lds
or
or
sbb
loop
int
adc
nop
adc
add
int3
fld
ret
mov
cltd
outsb
jp
jns
or
inc
add
push
scas
xlat
ja
int
mov
add
xor
negb
inc
cmp
and
fsubr
xchg
ret
shlb
sbb
mov
cld
xor
outsl
cmpsl
mov
jne
adc
xchg
inc
aad
mov
dec
aam
imul
stos
add
pushf
push
inc
cmp
cld
js
inc
jg
lock
ror
push
aam
fsts
or
mov
out
cmp
test
scas
ja
stc
and
jl
test
call
jl
lahf
mov
movsl
popf
shll
mov
call
cmp
loope
inc
rcll
sbb
shll
in
or
add
into
xor
in
push
pop
mov
xchg
pushf
jp
cli
icebp
xchg
sbb
stc
or
mov
fmulp
dec
frstor
push
cmc
jl
inc
mov
int3
sub
add
icebp
jb
adc
std
cld
test
cltd
inc
mov
xchg
bound
sbb
push
lds
xchg
pushf
sbb
mov
push
add
mov
ret
sub
sbb
inc
pop
mov
pushf
jb
sub
dec
jb
notl
sub
dec
bound
add
push
les
sub
and
adc
pop
out
scas
adc
mov
test
push
testb
iret
mov
shll
pop
jo
push
aam
scas
movl
xor
in
mov
dec
fnstenv
sti
pop
jle
into
xchg
inc
inc
pusha
push
add
stos
daa
xchg
outsb
mov
mov
jo
fwait
int
inc
push
std
push
mov
push
pop
lods
mov
xchg
jnp
jae,pt
and
pop
popf
cs
dec
incl
clc
loop
out
lea
push
cmp
rclb
fcomp
pop
movsb
test
adc
xchg
out
push
sbb
push
pop
enter
sbbl
sahf
out
test
or
cmp
push
xlat
icebp
jle
or
dec
das
adc
mov
xchg
mov
sub
mov
pop
lcall
mov
insb
fcoms
or
ret
add
pop
and
cmp
insl
mov
mov
mov
call
mov
pusha
mov
add
fwait
pop
cli
shlb
imul
arpl
cmp
mov
push
jns
sub
sbb
push
pushf
das
xor
call
ret
lock
iret
sahf
cld
adcl
mov
in
ja
shrl
mov
add
cmp
xchg
pop
mov
clc
push
pop
call
xor
jne
call
mov
ret
test
in
pop
push
sub
mov
test
inc
xor
jl
mov
inc
into
mov
lods
inc
and
cld
mov
xchg
mov
jp
imul
sbb
and
movsb
out
mov
movsl
cli
dec
and
adc
inc
sub
cmp
xchg
adc
ljmp
sub
int3
test
lret
mov
addr16
xchg
jne
mov
fiadds
aas
lret
push
out
xor
call
ffree
mov
mov
xor
inc
loopne
jb
mov
jl
or
imul
fstps
dec
push
xor
sbb
cmpsb
lods
cltd
and
data16
inc
xchg
imulb
int
xchg
ss
stos
mov
pop
xchg
xor
incl
push
fstpt
pop
cmp
imul
xchg
int3
fmuls
push
push
cmpb
int3
cmpsb
adc
pop
int3
lods
mov
addr16
push
fisubrl
dec
mov
mov
stos
lods
sahf
jno
push
xchg
push
push
in
stos
nop
and
jnp
repz
outsl
pop
popf
and
testb
push
and
rolb
rcll
pop
ljmp
in
arpl
clc
push
add
popf
pushf
mov
in
push
jmp
push
lahf
jne
mov
add
dec
repnz
pop
inc
lock
addb
adc
cmp
sti
inc
push
push
lret
push
cmp
xchg
gs
xchg
std
pop
inc
jo
sbb
addr16
js
shl
into
lods
add
loope
lret
or
hlt
pop
xchg
dec
jo
dec
or
subl
cmp
fiaddl
lret
jno
jp
adc
aad
jmp
jbe
xchg
mov
pusha
push
adc
mov
fnstsw
pop
mov
dec
fadd
ljmp
pop
psubsb
je
clc
xchg
lock
fdivl
jns
jno
or
and
adcb
jg
sbb
jae
out
enter
mov
out
or
mov
cmp
std
dec
clc
pop
clc
ds
cmpl
and
jl
and
lods
aam
adc
out
pop
lods
ja
add
inc
out
sbb
or
out
and
cltd
aad
mov
inc
xor
imul
push
lock
lods
cld
inc
std
mov
in
mov
rorl
mov
mov
inc
dec
out
inc
das
mov
iret
cmp
dec
aaa
mov
cmp
mov
popa
inc
jle
divl
cmp
js
int3
stos
push
mov
xchg
fnstenv
mov
std
adc
fnsave
ja
xlat
push
jbe
ljmp
iret
stos
sub
cs
ret
repnz
fdiv
cmp
adc
in
mov
jno
mov
adc
and
and
xchg
clc
adc
imul
ja
ud0
leave
mov
mov
testl
in
arpl
in
xchg
data16
mov
push
adc
fwait
and
jnp
aad
push
je
lock
sbb
sub
jns
cs
lret
cmpsb
dec
sub
inc
xor
stos
push
push
into
aaa
push
int
repz
mov
cmpsb
inc
iret
scas
jge
xchg
sub
sbb
cmp
imul
or
enter
sbb
add
popf
mov
pop
mov
scas
sbb
in
or
push
shrb
cmp
sahf
out
xchg
add
test
and
mov
inc
pusha
jo
lock
sub
or
cwtl
fidivs
adc
scas
getsec
andl
or
inc
add
add
jbe
mov
into
push
jmp
pop
pop
mov
popf
and
cwtl
scas
movsl
add
shll
inc
out
adc
je
shrb
dec
cmp
test
adc
mov
xchg
mov
jecxz
pop
push
xor
pop
movsl
pop
inc
stos
call
sub
or
pop
xor
in
pop
inc
cmp
mov
sbb
push
mov
or
dec
xchg
cli
test
popa
test
pop
mov
mov
and
movsl
push
or
pop
jecxz
inc
mov
pop
fists
push
lea
jmp
sahf
add
sarb
insl
fwait
xchg
push
bound
test
lret
mov
lea
mov
xor
pop
lret
add
mov
movsl
adc
mov
push
dec
mov
add
outsl
sahf
int
inc
mov
xor
in
inc
les
fcompl
stos
das
shlb
mov
sarb
rcrb
lods
mov
orl
xor
inc
daa
es
cli
jg
mov
in
icebp
scas
test
pop
aaa
es
xchg
mov
cmp
add
outsb
xchg
sbb
or
mov
pop
dec
insb
out
xchg
call
mov
int3
fdivrp
or
jmp
loope
test
adc
testb
inc
popa
mov
sahf
nop
adc
jnp
add
pop
adc
out
push
xor
jmp
add
lods
cmp
cltd
gs
cmp
fsub
aas
sbb
cltd
ljmp
mov
dec
out
mov
dec
shlb
dec
jae
ljmp
scas
notb
mov
loope
jbe
leave
pop
jmp
orb
or
mov
addr16
out
fmul
mov
sub
dec
out
add
fsubp
adc
pusha
adc
in
jo
mov
ffree
xchg
lcall
jnp
mov
mov
rcr
inc
data16
out
xor
dec
movsl
sahf
or
adc
arpl
fs
mov
pop
fiadds
scas
pusha
imul
pop
cmpsb
out
jmp
add
push
sub
subl
cmpsb
daa
push
xchg
inc
jle
bnd
mov
das
add
bound
xchg
movl
cmp
push
adc
or
test
mov
data16
rcl
mov
ljmp
leave
cmp
jbe
jg
in
sub
mov
ljmp
inc
clc
out
data16
push
fwait
inc
cmp
int3
push
jmp
inc
test
jns
stc
std
xorl
or
jno
test
mov
mov
popf
mov
push
cmpsl
addr16
mov
je
in
push
hlt
jecxz
divl
xor
and
mov
lret
sub
pop
in
inc
aaa
lods
pop
cmpsb
movb
push
cmpl
cmp
leave
sub
jne
or
notl
xor
xchg
adc
push
test
mov
mov
mov
outsb
pop
lret
mov
mov
pop
dec
bound
mov
shlw
sub
and
xor
or
cwtl
or
jle
cwtl
sbb
mov
aas
rol
test
in
aam
aaa
mov
sar
jae
adc
fwait
orl
sti
ljmp
sub
inc
in
add
mov
pop
inc
fisubrl
lea
push
inc
push
leave
aaa
iret
inc
pop
mov
shlb
test
sub
adc
and
and
call
or
dec
popl
nop
cltd
pop
popa
aad
stc
mov
xchg
xchg
in
aas
fwait
xchg
xchg
sbb
scas
test
xchg
push
outsb
dec
imul
and
cld
jle
pop
mov
daa
movsl
sub
fistpl
lret
je
mov
jae
dec
cmp
mov
sbb
jo
push
adc
adc
inc
xchg
out
sbb
fidivl
push
dec
add
lahf
mov
sub
xor
mov
pop
push
out
inc
add
sbbb
sub
stos
or
pusha
jmp
pop
cmpsl
in
jp
mov
mov
lret
push
clc
ret
dec
mov
sbb
pop
fisubrl
push
lret
mov
mov
add
mov
int3
or
cmp
pusha
popf
push
jmp
dec
or
mov
loope
sar
test
cmp
dec
mov
cmovb
push
stos
das
mov
sbb
sbb
fdivl
pop
lock
xor
push
mov
add
jb
push
hlt
adc
pop
xchg
sbb
adc
inc
ret
mov
mov
repnz
mov
out
push
scas
aam
xor
pop
add
dec
jne
into
mov
fstps
inc
pop
fs
out
ljmp
jecxz
mov
movsl
xchg
mov
idiv
aad
inc
and
cmp
test
pop
jns
cmp
repnz
mov
sub
scas
xor
push
aaa
xsave
jmp
xchg
mov
inc
clc
xchg
fildl
insb
or
leave
es
xorl
scas
outsb
rorl
div
xchg
jge
push
push
push
jo
push
mov
prefetchnta
fcompl
pop
mov
pop
cmp
xor
subl
int
outsl
aad
mov
push
enter
sub
mov
add
insl
loop
adc
mov
into
dec
ficomps
je
test
cltd
aad
call
push
xor
cltd
or
adc
stos
xor
cmpsb
pop
out
or
lock
pop
shr
add
lds
into
movsl
xor
mov
shll
xchg
in
push
sbb
movsb
or
dec
jbe
inc
push
jo
add
add
lret
cwtl
pop
jecxz
bound
pop
es
lds
add
push
mov
mov
into
add
inc
jne
fwait
pop
xor
scas
ret
ficompl
cli
inc
mov
roll
imul
rolb
mov
ret
inc
je
stos
xor
push
inc
cmp
sbb
sub
faddl
gs
push
lret
js
arpl
dec
mov
push
push
sub
movb
aaa
push
ja
xchg
sub
fldenv
adc
jp
dec
xchg
mov
lcall
mov
xor
test
jmp
imul
sbb
mov
sbb
push
fmuls
pusha
push
xchg
xor
jp
aaa
into
popa
in
popa
clc
push
inc
mov
sub
lret
push
gs
std
mov
lods
cmpsl
cmpsb
cld
xor
shlb
pextrw
inc
lds
loop
push
lret
ret
mov
dec
lret
adc
loop
inc
fdivrl
mov
pop
or
pop
jns
nop
mov
xchg
lret
push
rol
mov
mov
fwait
jg
jge
sbb
lods
or
sub
cld
sbb
sahf
sbb
and
loope
sti
movsb
test
jmp
jecxz
cs
pop
mov
xchg
das
push
dec
mov
inc
mov
test
or
push
in
ljmp
mov
mov
fcmovbe
dec
sti
cli
inc
pop
imul
sti
and
push
dec
cs
out
fisubrl
push
sub
or
sbbb
ljmp
mov
call
adc
jo
jl
add
ljmp
daa
pop
sub
int
aad
mov
mov
int3
add
push
sti
sub
jo
mov
cwtl
adc
repnz
inc
call
stos
movsb
sub
adc
pop
int
out
dec
mov
cltd
popf
cmp
jecxz
add
vcvtdq2pd
dec
lock
xchg
jl
sahf
sbb
push
insl
add
out
jle
and
cmpsb
mov
push
scas
fiaddl
adc
add
sbb
jle
add
adc
sti
pop
lds
push
xchg
pop
lods
rcr
fldenv
xchg
jge
das
daa
xor
jo
pop
mov
jge
jo
call
mov
cmc
leave
ja
movsl
cwtl
pop
mov
and
mov
pushf
in
shll
insb
dec
scas
repnz
bnd
xchg
std
pop
jmp
ljmp
lods
jns
std
mov
push
xchg
mov
mov
lds
psignb
adc
sti
je
push
push
cmpl
cs
add
push
in
mov
cwtl
mov
pop
les
outsl
shrl
sbb
or
in
dec
push
sub
fwait
and
sarl
pop
xchg
pop
popf
xor
scas
mov
cld
loopne
push
divb
imul
ds
out
inc
push
faddp
out
in
and
rcll
push
fsubrp
mov
sbbb
int3
fcoml
xchg
lock
pop
or
loope
in
xorb
xor
push
mov
sub
or
mov
mulb
inc
xor
in
inc
xor
adc
aam
mov
out
dec
bound
lock
add
ficomps
lods
addr16
mov
mov
adc
inc
adc
decl
adc
xchg
in
sub
adc
popa
cmp
ret
js
mov
fdivrl
lcall
lock
pop
mov
iret
adc
jecxz
stos
mov
adcl
lods
das
sub
shr
push
aam
pop
dec
or
push
inc
js
outsl
pop
mov
testb
std
inc
xor
sub
xor
add
fdivs
imul
pop
shlb
jecxz
sbb
scas
cmc
lret
push
lds
pop
xchg
add
lods
sbb
mov
cmc
lahf
fwait
sub
fs
jecxz
pusha
in
xchg
popf
cltd
mov
add
loope
mov
push
cwtl
mov
mov
out
jno
mov
mov
or
lods
xchg
jne
scas
lret
or
addr16
nop
xor
mov
cld
cwtl
sbb
jge,pn
mov
aaa
ljmp
jb
ljmp
mov
insb
fcoms
jnp
mov
and
push
jb
repz
call
ljmp
int3
cmp
fwait
loopne
loopne
sarb
and
sub
jecxz
pop
jle
ror
xlat
sahf
dec
xor
jmp
scas
jno
shrl
rcll
push
inc
rol
fcmovnb
adc
xchg
xchg
imull
xor
dec
inc
in
sti
jmp
addr16
mov
insb
out
outsb
daa
xchg
fdivl
aas
outsl
repz
cld
jae
adc
adc
rcll
cltd
pop
cmc
out
pop
push
push
sub
xchg
mov
rolb
cwtl
cs
insl
imul
nop
je
mov
push
loope
fstps
out
jbe
mov
int
pop
addr16
jp
xchg
or
mov
and
sbb
inc
sub
in
cmpsb
mov
xor
ss
dec
mov
xchg
adc
add
std
pop
fstpt
in
push
mov
jns
std
aaa
aam
add
inc
jo
loope
loope
cmp
out
xor
daa
xchg
shrl
xor
adc
in
and
sub
push
cs
add
sbb
ret
dec
shl
leave
mov
mov
es
mov
and
push
ss
rcll
jp
ss
ficomps
out
aam
loop
jno
ss
mull
aad
pop
fs
push
adc
push
insb
lcall
inc
or
lret
cmpsb
adcl
xor
sbb
ret
xor
jecxz
inc
adc
jbe
adc
jnp
xor
into
scas
jg
pop
mov
into
or
jle
loope
ja
or
imulb
cmp
ficoms
ret
xor
subl
adc
and
sub
adc
xor
iret
lret
add
clc
mov
push
push
dec
or
icebp
xchg
sub
cmp
cmp
shll
jmp
nop
pop
mov
shl
lret
sbb
mov
cmp
sar
sbb
mov
xor
test
dec
ja
cs
sub
xchg
repz
mov
std
mov
sub
into
mov
out
mov
add
icebp
jbe
inc
mov
inc
inc
push
arpl
and
ss
mov
or
pop
rcrb
cld
mov
push
sub
add
jnp
lods
inc
sbb
dec
fnstenv
enter
mov
aas
roll
jmp
icebp
js
std
mov
mov
or
inc
cs
xlat
scas
cmpsb
mov
popf
push
in
jns
insl
and
mov
mov
rcr
cs
pop
aad
sub
adc
adc
xor
mov
add
inc
int3
in
cs
cmp
mov
xchg
lcall
imul
in
cltd
mov
inc
out
xor
mov
lds
jne
pop
fdivl
data16
cmp
mov
psrlw
mov
push
and
outsb
pop
xchg
cmpsl
sbbl
enter
addr16
icebp
sbb
stos
paddd
xor
pop
out
fcompl
inc
pop
inc
add
mov
xchg
pop
dec
aad
jnp
pushf
xlat
leave
lds
test
ret
arpl
cwtl
mov
cmp
loop
jmp
mov
sarl
push
out
push
fldcw
push
sub
xchg
jmp
fidivrl
mov
cmp
or
or
fnstcw
cltd
packuswb
push
cmp
cmp
pop
testb
arpl
rorb
pop
mov
in
sbb
enter
stos
or
push
inc
je
mov
aaa
iret
push
jmp
mov
fwait
iret
jnp
pop
cwtl
out
cltd
jo
aam
xchg
mov
jmp
sbb
mov
dec
stc
sub
mov
jl
mov
cltd
pop
jl
lcall
aas
popa
fs
sbb
push
push
cmp
dec
xchg
adc
pop
mov
sbb
lds
pop
pusha
rorb
inc
jge
jecxz
sahf
std
loope
out
jne
pushf
mov
push
sarl
outsl
pop
ss
cwtl
xchg
test
fs
out
mov
jle
or
adc
mov
push
pop
pop
push
inc
rcrb
pop
push
dec
jp
sub
call
stos
divb
adc
and
mov
popa
or
dec
mov
mov
and
jnp
ja
push
clc
out
and
mov
push
sub
imul
xchg
mov
loopne
dec
pop
sub
jl
movsl
xchg
or
pop
mov
stc
dec
test
loop
mov
sub
cs
imul
dec
mov
cmp
inc
js
jg
mov
aad
into
sbb
stos
call
jge
or
push
xchg
clc
mov
sbb
lods
setns
pusha
test
nop
cli
mov
sub
inc
pop
jmp
inc
push
push
out
daa
imulb
ja
xor
or
out
sahf
and
mov
xchg
fstpl
add
jbe
movsl
loop
mov
jno
jnp
out
mov
repnz
loope
dec
xchg
out
adc
mov
sub
fwait
push
repz
inc
std
test
or
gs
jp
xchg
push
imul
jns
cmp
stc
test
sub
js
test
xor
jle
lret
xchg
idivb
dec
xor
popa
or
data16
mov
xor
nop
dec
aam
fmull
lods
out
addr16
lods
fldcw
mov
jnp
or
cmp
xchg
mov
mov
mov
mov
sub
repz
pushf
mov
cmp
pushf
pop
xor
ret
mov
xor
fs
dec
leave
add
dec
xchg
pop
sarb
jns
xor
lods
test
or
sub
shr
jno
pop
test
add
aad
ret
jle
insb
bound
inc
leave
repnz
xchg
imull
xchg
ja
lcall
out
sub
xchg
dec
jmp
pusha
loop
rcl
cwtl
jg
pusha
xchg
xor
in
shll
call
lods
xchg
aad
xchg
hlt
add
adc
push
and
xchg
xchg
gs
push
xchg
fistl
sub
repnz
xchg
xchg
dec
repnz
insb
jge
pop
daa
in
and
aaa
or
jb
jl
lods
push
test
cmp
mov
aas
push
mov
push
int3
shll
jmp
pop
rcl
sbb
push
test
subb
pop
scas
ds
or
fiadds
call
repz
sar
and
das
mov
stos
out
mov
icebp
mov
insb
sub
fnsave
dec
jno
ret
and
and
stc
xchg
xchg
cwtl
daa
outsl
dec
xor
mov
push
loope
push
jb
sbb
cmpsl
adc
jnp,pn
ja
stos
mov
push
aad
xor
movb
fwait
rcl
add
movsl
push
pushf
pop
and
testl
stc
popf
mov
arpl
or
mov
sbb
bound
outsb
ret
pop
xor
rcrb
sbb
sbb
mov
xchg
stc
push
enter
push
pop
call
push
fisttpll
mov
adc
in
test
aas
push
cmpsl
into
inc
mov
xchg
icebp
pop
loop
aam
xchg
orl
push
repnz
cmp
xchg
push
push
xchg
data16
or
fs
dec
cli
xor
mov
xor
ds
rcrl
push
jo
pop
mov
push
fadds
add
lods
and
xor
stos
loop
inc
jo
mov
jl
inc
adc
ret
or
xor
adc
push
inc
bound
or
cmp
pop
mov
cmpb
arpl
nop
push
mov
testl
sbb
or
stos
int3
cltd
xlat
or
push
and
adc
test
xchg
cmpsl
or
lods
add
lods
je
fcoms
and
dec
pop
imulb
outsb
lcall
cmpsb
adc
aas
mov
inc
cmp
loope
insb
dec
dec
adc
pop
dec
iret
daa
cmp
sub
or
orb
push
or
and
push
inc
sub
xor
sti
xchg
enter
das
loopne
dec
xchg
je
push
or
mov
div
fsubrl
mov
ret
das
jb
mov
add
ror
rolb
and
mov
add
imul
pop
outsb
aad
cmpsb
xchg
sub
ljmp
add
std
xor
adc
ret
dec
cwtl
xchg
adc
pop
std
push
push
mov
xchg
dec
pusha
out
jnp
stos
fs
out
insb
add
pop
dec
fdivrl
das
lret
daa
jne
rol
movsl
std
adc
mov
inc
fnop
add
popa
sbb
sbb
ds
cmp
int3
outsl
repz
pop
shll
imul
push
sbb
pop
add
hlt
pop
pop
out
ja
xchg
cmpsb
loopne
adc
sbbb
leave
gs
addr16
jno
dec
imul
mov
xor
fs
ret
jge
lods
call
pop
jle
aaa
xchg
lods
push
sbb
or
xlat
mov
mov
test
fld
sub
jle
mov
xchg
ss
add
push
popa
xchg
lahf
jl
std
xchg
or
rcrb
fsts
mov
aas
cmp
or
sub
mov
aam
bound
out
les
xor
push
sub
add
clc
jge
arpl
imul
ret
dec
push
or
cltd
in
jmp
notl
fdiv
insb
andb
push
inc
fbld
call
mov
js
out
ret
and
in
in
loope
ret
rol
mov
lea
popl
cltd
and
out
cmpsb
add
mov
pop
mov
loopne
xor
cmpsb
push
ja
push
in
nop
js
mov
lds
push
sbb
lods
push
sub
cmp
adc
dec
xlat
leave
cld
sbb
or
cmc
adc
jae
and
sub
fisttps
cmpsb
cmpl
imul
adc
mov
int3
jle
pop
inc
jbe
dec
shrl
cmpsb
mov
addr16
cmc
scas
out
popf
dec
clc
cmp
inc
aam
loope
inc
pusha
xor
push
addl
adc
aas
pop
dec
sbb
sbb
rcll
xor
sbb
imul
das
dec
cmp
mov
lahf
pushf
mov
adc
xchg
repnz
rol
sub
fimuls
push
and
xchg
cmc
push
push
data16
pop
add
sbb
dec
inc
loop
push
sub
dec
les
movsl
pop
cltd
add
fldl2e
fstpl
xchg
xchg
push
inc
repnz
dec
je
loop
leave
jne
fistl
mov
les
cwtl
mov
ret
cmc
ss
lock
jnp
fnstcw
or
nop
xchg
jmp
xlat
leave
mov
jne
cmp
and
and
mov
bound
inc
jg
sbb
mov
mov
shll
and
daa
mov
roll
in
lcall
stos
pop
and
add
jae
add
fdivrs
repnz
outsb
js
mov
enter
je
pop
jmp
cltd
jbe
sbb
jns
ret
xor
fildll
mov
push
push
sahf
dec
push
push
adc
push
and
push
outsb
cmc
mov
or
lret
mov
dec
ljmp
lret
iret
aaa
dec
or
test
add
xchg
bnd
cmp
and
fisubl
jle
ret
pushf
jge
cmpsb
out
cmp
addr16
mov
cmpsb
push
mov
lods
outsb
xchg
repz
xchg
out
gs
cmp
or
fisttpll
jmp
lcall
ss
test
int
cli
jg
xchg
fidivl
pop
jecxz
imul
shrl
iret
dec
mov
jbe
aaa
iret
push
xchg
daa
cmpsb
movsb
jmp
inc
and
fs
js
sbb
inc
lret
clc
es
or
cmp
push
adc
js
shl
sub
call
sqrtps
jecxz
movsb
sbb
lds
sub
jne
add
mov
xchg
inc
cs
clc
pop
cs
test
inc
and
dec
scas
sub
xchg
cmp
in
sbb
xchg
je
cmp
cmp
inc
sub
xchg
sarl
add
xor
aas
je
arpl
jns
xchg
fs
mov
rol
sbb
fcomi
jmp
cmpsb
and
cmp
jecxz
into
pop
xor
add
ror
daa
pop
out
lcall
lods
fadds
imul
subb
adc
cmp
inc
or
adc
jl
into
jnp
ret
out
arpl
bound
sbb
pusha
push
sbb
xchg
cmp
scas
jle
jb
mov
mov
movd
aad
mov
jecxz
out
jl
xchg
cmp
aaa
mov
cmpsb
iret
jle
or
in
jne
call
pop
fldenv
les
fstl
sbb
inc
jg
pop
insl
sub
call
insb
push
jnp
imul
mov
lcall
mov
sbb
fwait
mov
lea
bound
outsb
arpl
push
es
xchg
icebp
fcomps
lods
mov
jge
mov
sbb
in
jo
rolb
pusha
push
ret
push
scas
push
inc
push
aad
popf
mov
cld
in
cmp
xchg
mov
cmc
xor
or
out
push
mov
adc
insb
pop
pop
mov
pop
scas
push
pop
pop
and
roll
cmp
cmpsb
ljmp
sub
out
mov
and
sub
cmp
lods
sub
shrl
xchg
mov
jl
adc
or
sbb
sbb
mov
sti
push
pop
add
cs
xchg
ret
loope
es
xor
pop
fimuls
pop
in
test
jmp
push
mov
pop
shl
popf
push
aad
jle,pn
pusha
fmuls
inc
cld
xchg
xor
lods
sti
stos
push
pop
pop
lcall
or
push
adc
xor
test
in
push
in
and
push
jmp
mov
mov
push
in
push
icebp
aad
ss
fcomps
cli
icebp
ret
cmp
push
sub
inc
xchg
ss
sub
fdivrs
jbe
pop
dec
imul
ret
sbb
arpl
out
mov
pop
dec
dec
xor
sub
push
and
sub
cmpsb
jle
movsl
bound
fstpl
sarl
push
or
out
cmp
stc
xchg
nop
in
or
js
sub
cmp
loope
cmpsb
mov
test
jp
fstpt
popa
xchg
jmp
ljmp
mov
cli
and
in
push
nop
les
mov
jb
repz
inc
adcb
lods
out
in
ficomps
sbbl
fninit
push
rclb
add
sbb
mov
or
outsb
pushf
cmp
add
jne
les
ds
dec
cwtl
xor
sahf
jbe
xchg
mov
int
push
in
mov
xor
fmulp
cmp
daa
movsb
push
sbb
scas
mov
or
cmp
aaa
fcmovb
jmp
or
js
pop
rclb
daa
in
into
pusha
push
cwtl
and
out
call
pop
inc
inc
push
xchg
inc
fcmove
imul
rcr
movsl
outsb
das
inc
mov
icebp
loop
loope
xchg
rcll
sbbl
insb
mov
aam
push
cmc
jae
xor
sahf
push
jnp
xchg
repz
and
inc
xor
mov
sub
or
ljmp
mov
or
sar
cwtl
jmp
add
in
or
jl
xor
mov
ret
aam
lcall
outsb
lds
push
mov
leave
in
test
dec
enter
and
cli
loope
aad
mov
mov
push
lahf
int3
jmp
lcall
int
test
ja
iret
bound
not
sbb
and
mov
imul
dec
nop
mov
xchg
pop
xchg
mov
outsb
inc
loop
inc
cmpsl
sti
gs
arpl
push
or
pop
shl
jno
jp
mov
sub
mov
sbb
pop
into
jmp
in
dec
and
frstor
fwait
test
or
mull
jno
adc
lock
xchg
dec
jnp
cmpsb
jo
xor
dec
push
mov
inc
cli
sbb
xchg
cwtl
imul
dec
mov
call
mov
push
ficoms
jo
test
or
xchg
stos
xchg
inc
rol
iret
negb
lret
icebp
add
sub
enter
xchg
test
rolb
xor
push
ror
dec
push
push
fwait
cli
mov
ds
cli
ja
imul
loopne
shlb
call
mov
mov
cmc
cmpsb
int
mov
jmp
out
mov
add
sarl
in
mov
loop
sub
cmp
mov
rcl
lcall
stc
gs
xor
daa
dec
mov
ja
andps
add
dec
cwtl
xchg
repnz
fisubl
sub
and
mov
data16
mov
lods
jecxz
xlat
sti
inc
pusha
pop
xchg
or
jecxz
pop
sub
lret
dec
mov
in
in
or
lahf
inc
xchg
popf
dec
inc
shl
sub
test
es
dec
loopne
jo
bound
xchg
popf
insb
dec
sub
pxor
jge
dec
movsl
mov
outsl
push
call
and
jne
lods
loop
sbb
test
and
ss
mov
int3
mov
shlb
jno
mov
icebp
stos
fdivr
loop
jecxz
iret
pop
or
push
xchg
jle
push
in
and
add
jmp
shlb
pop
hlt
sbb
cmp
cwtl
lret
rclb
cmp
aaa
ss
xchg
dec
fcoms
cltd
repz
loop
in
cwtl
or
scas
push
rorl
or
and
fimuls
sarb
lret
xchg
out
fwait
mov
mov
into
outsl
sub
mov
cwtl
cld
outsb
pop
dec
ljmp
mov
lcall
pop
xor
push
jmp
mov
hlt
jle
pusha
mov
sbb
cmc
push
lods
sahf
cmc
div
mov
sub
or
mov
insl
imul
adc
in
cmp
gs
add
jl
pop
xor
lret
ja
lea
dec
jmp
call
movsb
push
jecxz
sahf
dec
fucomip
mov
fmuls
ret
cmp
sub
sbb
mov
mov
add
imul
mov
neg
cmp
testb
inc
jle
dec
sub
lcall
data16
jno
test
xorb
out
cmc
or
loop
insb
mov
xchg
mov
repnz
gs
sub
adc
mov
adc
push
dec
sub
pop
in
inc
jp
cmp
pop
mov
test
or
push
jne
dec
out
mov
lea
or
push
and
test
mov
push
or
mov
enter
in
sbb
xchg
sbb
xlat
jmp
je
lret
out
ljmp
push
sti
xchg
rcl
mov
dec
fdivrl
jmp
xor
and
mov
adc
test
testb
inc
je
clc
popf
lahf
je
into
rorb
mov
test
in
add
test
out
push
sbb
push
inc
sbb
xor
jle
mov
mov
imul
int
sub
inc
jae
aaa
dec
icebp
inc
movsl
xor
addb
cmpl
dec
lods
inc
xor
lds
and
add
arpl
roll
xchg
stos
sarl
fs
cmpsb
enter
aad
bound
call
inc
xchg
dec
daa
dec
dec
out
mov
lcall
scas
divl
sar
adc
push
push
cmp
mov
mov
stc
xor
or
mov
movl
pop
cmp
aaa
jns
pop
jle
pusha
mov
push
shll
inc
adc
sub
outsb
add
aaa
jle
cld
lods
xor
int
add
or
and
aam
and
sub
in
push
adc
frstor
push
jl
xor
mov
xor
or
dec
sar
sarl
push
jnp
push
or
mov
adc
adc
test
shlb
icebp
fbstp
add
sub
xchg
inc
jge
inc
repnz
adc
push
jne
sub
mov
ret
shrb
enter
inc
jns
xchg
pop
jge
inc
jns
ficoms
xor
mov
jmp
out
add
or
in
add
insb
movsb
insl
pop
testb
mov
sbb
jge
inc
out
xchg
inc
shr
mov
lock
int3
pop
scas
sahf
lock
dec
sub
inc
insb
mov
loop
sub
mov
sbb
xchg
test
and
push
xor
jnp
pop
push
inc
xor
push
pusha
xor
rclb
insl
push
call
mov
lock
sbb
mov
xor
sbb
and
leave
mov
xor
lret
aam
pop
sbb
sbb
sub
inc
fistl
add
xchg
ja
sub
inc
cmp
ret
mov
adc
pop
cmp
lea
data16
scas
ret
cmc
int
sub
gs
or
in
es
pop
sub
js
stc
jge
fsubl
xchg
and
fbstp
inc
movsb
xchg
loope
mov
lods
add
push
sub
out
cltd
jae
sub
jno
dec
cmpsb
test
push
jp
mov
ljmp
dec
aaa
sub
pusha
jl
mov
jae
sbb
xchg
cvtps2pd
push
pop
call
mov
mov
std
out
sbb
movsb
xor
mov
add
not
sbb
pop
cld
movsb
pop
jo
std
push
push
dec
pushf
sbb
scas
ljmp
or
pop
out
xchg
sub
cmpb
fwait
icebp
sub
xor
cmpsb
adc
dec
nop
xchg
mov
and
mov
add
stos
dec
test
inc
fldl
mov
dec
inc
and
cmpsl
arpl
lods
jl
jl
pusha
and
fnstsw
stc
hlt
movzbl
jo
or
imul
shrb
xchg
inc
iret
sbb
xchg
ja
or
and
adc
mov
xor
xor
and
sbbb
je
fcompl
frstor
das
xor
dec
jae
inc
push
popf
punpckhdq
jae
test
and
scas
repz
dec
stc
cwtl
or
adc
js
mov
cmovns
inc
xchg
push
sbb
sub
sub
or
insb
sub
inc
lds
add
sbb
dec
cmc
shlb
lods
lret
shl
iret
mov
aad
cmp
mov
push
lea
lcall
add
rolb
in
clc
pop
cmp
lds
xor
inc
js
aam
jno
mov
in
push
in
inc
aad
adc
sahf
mov
iret
imul
or
pop
xor
push
pop
xchg
push
scas
jo
sbb
ss
ja
nop
push
sub
ja
jo
or
inc
js
pop
and
sti
or
push
sti
lods
loop
out
aad
fcom
and
mov
or
call
or
dec
jl
dec
xor
sbb
jb
stc
aaa
int
out
dec
fsubr
pop
add
mov
cmp
push
dec
sbbl
enter
mov
mov
imul
sbb
xor
outsb
push
mov
adc
dec
rorl
add
push
aad
ret
push
adc
pushl
jae
sub
jg
sbb
add
aas
jmp
mov
shlb
frstor
add
pop
int3
les
pop
xlat
sub
jmp
out
mov
lret
adc
push
inc
and
dec
pop
int
popa
adc
inc
xchg
pop
sbb
jo
sub
in
std
in
pop
mov
mov
mov
pop
test
add
or
jmp
pop
xchg
outsb
mov
std
mov
inc
loop
ss
xor
mov
cmp
add
ljmp
mov
filds
inc
cwtl
xchg
out
push
stos
mov
push
fildl
and
sbb
push
mov
push
icebp
out
aas
inc
lret
sub
add
movsbl
push
push
xchg
lret
jb
adc
add
repz
loop
pop
test
cmovg
cmpsb
aaa
outsl
rclb
test
lcall
ret
adc
js
mov
out
das
mov
aam
pop
div
and
fisttps
out
push
je
add
pop
mov
outsb
mov
lea
test
jne
cmpsb
outsb
lcall
outsl
mov
adc
clc
mov
inc
mov
les
dec
out
xor
xor
add
push
dec
inc
sti
lret
and
bswap
fcoms
push
cmp
sbb
int3
cmpsl
or
outsb
subl
inc
fisttpl
sbb
push
call
mov
sub
sti
sbb
xchg
jae
cli
sub
xor
adc
cmp
cmp
fsubrs
add
dec
push
arpl
adc
mov
aas
fwait
stc
cltd
adc
mov
movsb
mov
popa
sub
mov
sbb
mov
rcrl
iret
adcl
and
movsl
insb
aam
dec
mov
jne
add
loop
adc
xor
add
hlt
sub
out
dec
cwtl
jno
fisubl
ret
dec
ret
push
je
or
stos
adc
sahf
cmp
lcall
stc
and
xchg
in
sub
pop
je
inc
aam
sub
fists
ret
pop
cmpsb
sti
and
push
xor
mov
sub
push
push
or
dec
mov
out
out
decb
pop
test
adc
cmpsb
leave
xchg
mov
mov
cli
xchg
xchg
loop
sbb
inc
not
or
jo
fsubl
stc
pushf
lea
push
mov
stc
mov
lock
into
fisubrl
in
testl
jmp
repnz
stos
xor
cmp
jp
pop
movsb
xor
in
fisubl
mov
aad
push
dec
movsl
xchg
mov
and
sbb
xchg
xchg
fsub
xchg
cmp
sbb
aam
mov
sbb
out
movsb
mov
and
pop
mov
and
scas
push
or
push
push
xor
shrb
add
xlat
lock
andl
xchg
xchg
imul
push
pushf
loop
out
ljmp
push
jnp
sub
mov
and
push
and
scas
push
add
sub
push
xchg
push
mov
popf
ficoml
ja
loop
and
xor
inc
pusha
push
jge
test
stos
subl
sti
mov
mov
mov
insb
fadds
inc
sub
lea
cld
aas
push
lret
mov
sub
xor
mov
mov
int
call
jnp
cmpsb
test
mov
ja
test
xchg
mov
nop
adc
xchg
pop
cld
enter
jecxz
cmp
mov
hlt
sbb
mov
jne
fists
push
push
mov
pop
or
push
mov
les
inc
loope
pop
xchg
mov
ret
out
outsb
pop
push
imul
nop
aam
fdiv
inc
or
xchg
xchg
sbb
mov
mov
lcall
mov
stos
leave
out
test
fstp
addl
sbb
leave
inc
inc
scas
inc
cmp
movl
sbb
les
fsubrl
scas
jno
scas
in
sbb
mov
sub
mov
mov
xor
sub
cs
test
cmp
imul
xor
or
cmpl
fmul
mov
or
cmp
hlt
mov
ds
std
xor
mov
cmp
pushw
pusha
and
imul
jle
or
scas
fsts
sub
pushl
rolb
in
xchg
adc
shrb
mov
sub
inc
stos
jns
pop
clc
mov
adc
scas
lea
js
popf
add
inc
adcl
mov
scas
ret
jecxz
popa
rolb
push
and
inc
ljmp
xchg
xlat
rep
jne
test
jnp
cltd
inc
out
scas
pop
mov
jb
inc
pminub
pop
jmp
lods
in
xor
adc
push
sarb
jge
cmpsl
mov
fcoms
xchg
pop
cmpsb
sub
xchg
push
aas
ret
ljmp
aam
fcom
cli
inc
sub
rclb
sub
mov
xor
xor
sbb
mov
mov
ds
loop
xchg
add
movsl
push
cmp
xor
add
je
jmp
int
lret
incl
xor
inc
adc
jae
ror
xchg
mov
mov
mov
jle
popa
cmp
sbb
addr16
stc
fcmove
test
addr16
lahf
fldt
jnp
xor
push
xchg
cmp
popa
sub
iret
xor
mov
sub
cmp
xchg
sti
push
and
push
out
popa
imul
pop
dec
sbbb
cmp
xlat
jo
insl
or
cmp
ljmp
xchg
fwait
jecxz
inc
arpl
ja
mov
mov
aas
call
arpl
jb
orb
jns
add
lods
and
add
mov
loope
xchg
ljmp
or
pusha
add
call
aaa
jb
out
sub
imul
mov
mov
stos
xor
dec
push
daa
sti
fsubl
cmp
scas
scas
addb
mov
clc
scas
cmp
inc
dec
fstpt
or
mov
test
sub
mov
jmp
outsl
ja
mov
arpl
jmp
mov
movsb
das
mov
fdivs
movsl
hlt
add
inc
cmpsb
test
fwait
mov
daa
clc
shrb
les
push
andl
cmp
xor
cmc
cmp
lret
lock
loope
lea
sub
add
ficompl
cmp
in
xor
xor
js
jl
js
xor
in
call
lea
iret
add
fcomip
sar
arpl
push
mov
arpl
adc
aas
push
aam
icebp
pop
popa
cld
pop
and
mov
push
add
or
clc
fisubl
pop
lock
xchg
sub
lea
movsl
iret
sbb
stos
lods
push
dec
js
mov
xchg
jg
jg
repz
movsl
mov
lea
stc
push
pop
lock
std
mov
pop
ficoml
movsb
xchg
mov
test
or
imul
sbb
jae
les
jmp
les
rcr
xchg
rcrl
mov
test
test
jo
call
jmp
icebp
and
pop
xchg
or
jl
int3
outsb
mov
jle
dec
and
push
jp
data16
cltd
mov
stos
call
sbb
js
lds
jns
sub
popf
xor
insb
mov
in
sbb
inc
sub
push
test
or
loope
lahf
xor
mov
jge
push
xchg
fsubrl
lea
pop
mov
scas
test
ret
mov
mov
iret
or
in
jne
std
cli
mov
cmc
inc
nop
or
mov
lea
or
sbb
or
jno
push
repz
cmp
mov
adcb
xor
sbb
sbb
or
xchg
in
mov
dec
add
sub
in
fld
inc
mov
or
or
dec
imul
add
inc
sbb
cmp
gs
mov
notl
adc
cmpsb
cmp
mov
add
mov
xchg
movsb
or
dec
enter
aad
adc
je
dec
in
loopne
push
leave
pop
ret
out
lds
sbb
bound
lock
ret
lods
mov
and
xchg
imul
jl
shrl
xor
cmp
pop
add
adc
push
sbb
in
xchg
test
dec
daa
xor
jns
mov
push
shll
fmuls
and
jnp
push
dec
cld
test
jae
test
mov
sbb
jle
scas
or
pop
xor
pop
xchg
daa
inc
ja
fildll
jbe
and
mov
addr16
gs
cld
ljmp
pushf
pop
mov
fcoml
test
cli
aas
je
dec
leave
insl
rclb
xchg
and
add
xchg
nop
jge
mov
decb
lods
scas
push
mov
push
push
iret
mov
ss
inc
fsub
mov
jb
dec
shl
mull
in
inc
decb
add
mov
dec
and
shrl
mov
xchg
sti
fldl
inc
or
lcall
dec
dec
bnd
lods
lahf
adc
incl
into
adc
scas
xchg
sub
inc
insl
insl
mov
flds
pop
imul
add
dec
add
dec
adc
dec
lock
sub
cmc
mov
insb
ljmp
sbb
stc
inc
add
push
sbb
scas
cwtl
cmp
inc
pusha
jp
xor
movsb
pop
xorb
scas
outsb
in
loop
push
cld
out
js
insl
insb
gs
add
inc
das
xchg
xchg
lret
out
or
jmp
ret
add
pop
fmuls
dec
mov
sbb
xchg
bound
dec
cmc
add
inc
mov
lods
cmovle
rcl
sub
cli
fstl
gs
cmp
ds
in
pop
cmc
inc
push
and
sub
pop
inc
sbb
aas
inc
add
dec
outsl
xchg
and
xor
cmp
outsb
jns
xor
add
aaa
mov
sbb
adc
mov
adc
xchg
leave
jl
movsl
aad
into
pop
push
push
cmp
mov
mov
xchg
fs
ss
jne
pop
es
jecxz
cs
in
sbb
push
cmp
pop
out
lods
lods
jo
adc
push
pusha
xor
mov
push
iret
inc
popf
pop
test
lods
leave
fimuls
cli
mov
jo
and
movsb
pop
subb
repz
cwtl
in
pmaddwd
mull
and
in
scas
out
in
ja
mov
fwait
jle
mov
subl
in
xchg
adc
insb
mov
roll
dec
rcrl
inc
jbe
lret
addr16
xchg
jge
xchg
imul
cmpsl
jbe
dec
out
mov
pop
scas
gs
mov
cwtl
jl
cwtl
lea
lods
push
rcrl
imul
lret
dec
lret
jo
xchg
pop
imul
sbb
cmp
jae
inc
popf
pop
sbb
sbb
pop
hlt
or
or
sub
adc
xchg
shrb
add
pop
orb
and
jle
and
add
sub
inc
sbb
xchg
xorb
test
divl
inc
and
test
mov
inc
out
cli
fistpl
ljmp
mov
or
mov
scas
in
aam
sub
rclb
pop
adc
movsl
outsb
adcl
pop
push
adc
ja
sti
add
cld
lock
push
add
mov
pushf
lahf
dec
pop
lret
bound
mov
jmp
push
pop
add
cmp
mov
je
popf
daa
std
sti
or
xor
aas
fimuls
xchg
repnz
divl
sub
addb
jmp
mov
icebp
sbbl
out
pop
mov
mov
mov
std
xor
jns
lods
es
cmp
push
lods
add
pop
std
inc
mov
cltd
or
pop
lgs
mov
cwtl
lret
movsl
mov
mov
fwait
or
adcl
test
push
mov
fiadds
ret
loope
aaa
addr16
scas
into
jl
movsb
or
cmp
imul
push
rclb
sub
mov
inc
cmp
mov
imul
and
mov
subb
sbb
test
aam
imul
pop
imul
jns
xchg
scas
pusha
lcall
push
out
add
gs
cli
mul
aad
enter
lock
push
xor
sbb
jl
dec
xlat
or
mov
sub
cmp
adc
pop
leave
pushf
stc
xor
idivl
sub
jle
mov
test
test
fsubs
lods
dec
mov
out
dec
jno
int3
jno
jno
jns
daa
sub
pop
xor
scas
stos
out
jb
mov
popf
int3
shll
sahf
inc
outsb
insl
hlt
cmp
je
ja
push
test
mov
repnz
mov
and
mov
arpl
xor
in
mov
xchg
jg
cli
mov
mov
jo
data16
cmp
xor
ret
xor
call
mov
scas
jns
pop
fucom
xchg
ss
adc
jbe
xchg
notb
sub
fldcw
mov
cmpb
rorl
sub
pushl
add
dec
push
cmpsb
enter
dec
test
ja
and
xchg
movsl
sub
fmul
lds
pop
leave
loop
or
in
aam
mov
pushf
dec
push
mov
mov
mov
inc
push
popa
or
mov
leave
pop
cli
cwtl
adc
mov
imul
pop
int
dec
popf
jae
les
aad
sub
jp
push
push
push
fstpt
popf
adc
pusha
sbb
cmp
xchg
push
cmc
and
adc
cmp
push
add
stos
test
es
add
iret
out
in
inc
mov
xchg
inc
es
pop
in
insl
dec
xchg
cmpsl
sub
aaa
cmp
nop
mov
pop
sub
popa
enter
loope
jnp
mov
and
pop
or
mov
or
mov
jnp
cli
mov
mov
sub
gs
adc
xor
repz
jne
mov
fdivs
inc
mov
inc
jecxz
jne
loope
je
in
sti
adc
xchg
stos
xor
pushw
lods
dec
insl
push
scas
lods
sbb
dec
pop
dec
scas
push
nop
ljmp
pop
incl
xchg
xchg
mov
call
fs
jmp
add
mov
push
push
loop
int3
enter
or
mov
xchg
mov
sub
call
push
clc
testb
test
stos
ret
pushf
cmp
pop
dec
mov
xor
mov
iret
mov
mov
sub
dec
mull
add
jo
pushf
jns
add
fs
xchg
in
xor
lods
inc
gs
sub
leave
pop
xor
jle
out
ja
or
sub
sahf
enter
pop
inc
push
push
loopne
cmpl
jg
into
pop
sbb
jo
and
sub
xor
loopne
sbb
aad
mov
shrb
add
jae
fiaddl
add
xchg
xchg
rclb
fcmovnu
dec
sub
jne
and
sbb
ret
dec
int3
cmp
cmpsb
jmp
test
jbe
adc
stc
arpl
insb
cltd
pop
mov
test
mov
pusha
lods
push
pusha
sub
inc
jle
adc
fwait
pusha
jne
push
add
inc
lret
pop
push
sahf
xor
mov
outsl
pop
and
mov
lds
insl
sbb
pop
pusha
test
jg
testl
push
push
sbb
pop
sub
jle
lds
mov
roll
loop
arpl
out
nop
jns
mov
setbe
xor
sub
fsubs
jg
lcall
cmp
data16
int
xchg
push
mov
loopne
insb
call
mov
xor
push
frstor
cwtl
mov
popa
aad
pop
jge
iret
andl
sbb
jge
in
sub
fdivs
fcompl
jbe
data16
push
pop
stos
sbb
daa
fmul
pop
loopne
stos
faddl
sbbb
sub
shl
push
sub
mov
mov
cwtl
xor
sbb
outsl
fcmovbe
data16
inc
xor
js
aas
daa
pop
mov
sub
das
push
aaa
push
int3
xorl
xchg
notb
add
imul
ltr
aad
out
lods
sub
jb
mov
pop
jns
add
dec
or
gs
add
bound
out
fsts
mov
inc
add
loop
push
pushf
sub
jne
sub
mov
adc
pop
push
xchg
and
add
sbb
xchg
jne
jns
adc
iret
mov
cltd
ljmp
pop
mov
in
test
mov
mov
outsl
pop
add
imul
push
push
outsl
mov
sub
ss
insb
fnsave
adc
add
mov
mov
cmp
lret
pop
dec
mov
lods
cmpsl
push
jnp
add
cli
rclb
adc
scas
rcrl
idiv
push
jae
and
cmp
sbb
cmp
mov
cmp
xlat
and
js
dec
mov
push
pusha
mov
int3
push
out
in
sbb
adc
sub
and
pmulhuw
pop
fistps
sub
out
dec
adc
push
cwtl
jb,pt
aas
clc
imul
lret
sbb
push
cwtl
adc
ficoms
jge
es
mov
rdmsr
mov
adc
sub
rol
dec
out
push
test
push
repz
inc
jge
push
fiadds
stos
je
mov
adc
xor
shrb
lock
cld
jmp
fwait
and
dec
into
jp
jne
cmp
rcll
push
daa
sbb
jb
push
ret
pushf
pop
sarl
les
cli
sub
outsl
roll
sbb
aas
sahf
jbe
push
sahf
or
or
fadds
gs
stos
leave
cld
adc
cmpsl
movsb
cmc
pop
jmp
add
imul
pop
popf
or
lods
pop
ljmp
lods
jecxz
sbb
roll
fisubrl
and
movsb
push
in
lock
imulb
xchg
xchg
xchg
sahf
mov
add
and
pop
jo
cld
bound
add
notb
lret
mov
xchg
add
push
mov
rcll
mov
mov
lds
mov
inc
or
outsl
or
mov
inc
call
xorb
cmp
jb
aaa
mov
mov
push
lods
cwtl
out
dec
jbe
push
jge
jno
rclb
shrb
in
push
or
mov
loope
mov
push
and
into
xlat
push
mov
inc
pop
jo
in
sub
cmpsb
test
jne
inc
jge
rorb
fadds
sub
dec
pop
mov
lods
pop
sbb
dec
sti
ss
mov
leave
mov
sbbl
dec
push
sbb
sbb
and
fcmovnb
cltd
inc
imul
pop
outsb
dec
sti
push
pop
shll
cmp
pop
nop
jmp
push
mov
and
dec
pop
f2xm1
test
lret
xor
fcomps
mov
fwait
repnz
pop
jle
sbb
mov
js
xor
inc
pop
call
stos
ret
dec
outsl
aad
aam
lcall
or
popa
jbe
jmp
in
rorb
adc
sbb
loop
mov
cmpsb
test
cmp
dec
ss
or
mov
sub
cmpsb
lds
push
mov
mov
and
push
lea
ljmp
mov
dec
mov
mov
divl
or
repz
mov
inc
fs
mov
jne
push
jne
push
orl
sub
test
push
fbstp
lds
in
outsb
xlat
out
mov
popf
push
scas
in
sarl
adc
mov
adc
xchg
ljmp
in
cld
inc
and
inc
or
hlt
adc
adc
pushf
popa
dec
shlb
in
inc
inc
mov
sub
scas
push
leave
mov
ds
ffreep
mov
xchg
cmp
sbb
fwait
dec
ret
xchg
pop
enter
loop
mov
xchg
test
xor
cmp
adc
loop
lret
jg
lods
mov
pop
sub
leave
movsl
mov
jecxz
loop
int3
xchg
pushl
inc
xlat
mov
cmp
dec
mov
inc
xchg
jns
push
inc
or
fidivl
mov
les
sbb
xchg
inc
sbb
push
es
into
or
pop
test
jg
pushf
lea
jg
popf
icebp
imul
or
pop
mov
push
dec
push
push
ds
rcr
lcall
mov
sahf
lcall
movsb
mov
loop
cs
idiv
std
aad
test
add
adc
cmpsb
fistps
mov
das
xchg
es
inc
mov
push
lea
idivl
jmp
adc
dec
sub
mov
loop
pop
es
adc
mov
and
mov
in
loopne
pop
adc
sub
sbb
pop
pop
and
jp
cs
mov
jecxz
popf
ss
mov
loope
inc
sbb
push
dec
or
popf
push
pop
and
imull
test
xor
jbe
test
cwtl
lret
insl
stc
gs
pop
xchg
xchg
or
pop
insb
jle
inc
adc
test
jg
sbb
ss
jp
pop
jmp
push
aas
mov
repnz
outsl
lea
ljmp
scas
lret
xor
pop
push
lret
adc
in
and
pop
loopne
add
xchg
sbb
test
sub
stc
sbb
rorb
lret
jns
jecxz
insb
shll
cmp
cld
adc
push
lds
xchg
out
out
mov
ret
andl
mov
push
xchg
mov
pop
test
subb
std
out
out
push
scas
push
das
sbb
rorb
pop
outsl
fisubrl
mov
xor
dec
stos
inc
xor
cmp
lea
cmpsb
mov
fmull
sarb
lods
xorb
or
cli
pop
repz
jnp,pn
pop
sub
popf
push
scas
push
xchg
xor
lods
jbe
and
popa
test
movsb
fdiv
pop
outsl
and
jae
in
push
loop
mov
dec
out
jg
mov
and
sbb
sbb
pop
push
sbb
push
int3
sbb
stc
pop
fnstcw
aaa
xchg
and
and
mov
movsl
aad
and
cmp
and
jl
mov
mov
loope
xchg
jle
sbb
in
sti
push
mov
insb
imul
sbb
cmp
mov
pop
mov
add
cmp
pop
icebp
dec
imul
sahf
sub
inc
nop
lahf
jmp
inc
and
pop
movsb
pop
mov
pop
aas
ja
loope
mov
add
xchg
mov
es
mov
fcmovbe
pusha
in
push
jl
cmc
pusha
addr16
out
imulb
jae
push
daa
or
pop
lds
ffree
inc
pop
bound
daa
pop
push
mov
dec
mov
inc
mov
rorl
sbb
imul
pusha
fildl
mov
nop
sarl
out
popf
mov
movsb
cmpsl
rcrb
pop
sbb
push
jecxz
sub
jo
mov
jns
movsl
popa
pop
movsb
out
movsl
adc
shlb
outsb
sub
or
addb
in
out
pop
rcr
push
mov
movsb
enter
cmp
es
loope
xchg
int3
iret
cmpsb
lods
mov
xor
fidivrl
or
jg
and
movsl
push
cmp
push
or
insl
pop
push
popf
ljmp
mov
es
outsl
adc
xchg
fcoms
stos
push
mov
es
adc
scas
fiaddl
out
jg
adcb
hlt
pop
push
leave
fdivl
jns
ret
fbstp
stos
int3
je
pop
push
push
sahf
inc
push
cmp
lret
push
sti
or
xchg
xchg
jbe
test
adc
inc
dec
ret
addr16
ja
push
jmp
dec
mov
ljmp
out
pop
ss
xlat
xlat
push
inc
push
lea
mov
xchg
rcrl
dec
dec
sbb
sbb
xchg
cld
arpl
mov
roll
adc
jmp
movsb
dec
pop
bound
add
sbb
test
jecxz,pn
add
pop
fsubrl
jle
add
lret
enter
stos
pop
stos
rolb
and
jmp
push
popf
das
and
mov
mov
outsl
xor
ljmp
push
jns
push
pop
jle
mov
inc
testb
mov
sti
inc
fwait
adc
clc
xor
popl
pushf
sbb
xor
xchg
into
jno
mov
cmpl
cmp
pop
pop
push
lock
ja
icebp
pop
and
jp
fsts
and
rorb
or
loop
inc
xor
push
dec
stos
jno
and
jbe
popa
mov
mov
mov
fisttpll
mov
divl
adc
push
cltd
lret
xor
loope
pop
shrb
push
jmp
dec
into
inc
ljmp
push
js
mov
aad
jne
sbb
inc
aaa
nop
repz
push
dec
test
jle
in
insl
call
std
popa
lods
movb
jecxz
call
or
icebp
xchg
bswap
mull
xchg
fnsave
xor
mov
fstpl
xor
jp
aad
aad
das
scas
jnp
mov
sahf
bound
xor
mov
sbb
cmp
sub
mov
cltd
rolb
std
iret
xlat
inc
and
or
jmp
sbb
je
adc
mov
mov
andl
int3
dec
imul
in
jmp
insb
push
cld
arpl
ljmp
mov
loope
add
cmp
or
test
imulb
inc
in
bound
cmp
xor
repz
in
inc
cmp
mov
int3
hlt
data16
jle
push
and
dec
ja
cmp
push
mov
shlb
sub
add
jl
inc
icebp
sub
pop
push
xchg
inc
cmc
lahf
pop
std
mov
lds
iret
mov
mov
mov
or
out
lea
movsb
aas
dec
adc
into
sbb
mov
xchg
into
shll
outsl
cmc
ja
cmp
std
mov
stc
mov
pusha
lods
bound
icebp
mov
or
mov
pop
adc
cmp
pop
or
jge
fisubrl
shlb
fcomps
in
loopne
inc
mov
dec
fs
adc
fsubrs
in
fs
fs
sarl
sbb
je
pop
lfs
lods
cmp
pop
stos
cmpsl
cld
adc
iret
and
or
inc
push
lret
mov
bound
add
xchg
adc
push
sub
ret
cmpl
inc
or
mov
jmp
xor
rolb
outsl
inc
nop
xchg
data16
push
gs
push
test
cmp
jmp
hlt
pop
mov
pop
shll
pop
addr16
mov
push
add
pop
pop
push
hlt
test
push
les
ljmp
cmp
movsb
scas
adc
mov
pop
outsl
or
mov
jmp
ds
cmp
cld
or
fidivs
push
insl
sbb
mov
add
xor
jno
in
dec
push
ljmp
sbb
pop
inc
sbb
in
xlat
aam
ficoms
roll
in
jbe
movsb
mov
notb
mov
or
movsl
daa
inc
int
xor
sub
fcmovnbe
dec
popa
push
rcll
shrl
ret
add
add
movsl
mov
xchg
mov
xor
inc
rorl
enter
rcl
or
call
mov
lcall
mov
scas
js
dec
push
insl
jns
pop
xchg
loop
aas
shl
cmpsl
lock
scas
push
fwait
in
xchg
sarl
ficoml
outsl
push
push
sbb
aas
outsb
addr16
push
rorl
mov
shll
cmpsb
mov
adc
jbe
out
dec
jge
inc
dec
aas
mov
hlt
sub
stc
pop
cli
sti
push
fistpl
and
pop
scas
jb
dec
pop
push
jmp
and
jns
ficoms
push
mov
adc
push
sbb
dec
movl
push
mov
add
les
jg
add
imul
pop
imul
int3
lahf
add
fsubrl
popa
inc
fcoms
in
sti
cld
jl
aam
xor
push
xchg
shll
pop
push
push
int
ljmp
xor
pop
xchg
push
push
sbb
dec
aam
test
das
sub
or
and
xchg
ret
bound
jge
das
pop
dec
icebp
xchg
and
jle
dec
pop
in
xchg
mov
lods
xchg
mov
gs
or
sbb
pop
insl
lcall
scas
mov
jbe
test
mov
dec
xor
pop
fs
hlt
incb
jecxz
jmp
cld
imul
adc
xor
jl
jecxz
mov
jno
inc
xor
mov
xchg
cmp
and
hlt
mov
pusha
or
cld
jg
dec
int
loopne
cli
ds
fcmovnbe
repnz
or
test
sub
jae
mov
pop
push
aad
ss
mov
mov
enter
adc
out
inc
jg
fists
loop
les
jmp
cwtl
push
add
lods
test
lds
sbb
mov
add
jecxz
dec
js
or
xor
pushf
insb
lea
adc
std
push
sar
xor
into
sbb
mov
push
push
mov
stos
xchg
mov
cmp
pop
and
add
inc
sbb
jecxz
xorl
fidivrl
lods
lods
out
cltd
pop
fdivl
lds
inc
xor
scas
test
push
cmp
inc
fmuls
inc
or
push
addr16
jmp
aaa
insb
or
xchg
cmc
jnp
out
mov
ljmp
cmpsl
push
fisttpl
sub
push
jbe
push
lods
imul
movsb
and
pop
inc
sub
jne
out
lret
mov
adc
pushf
repnz
in
push
jg
jne
add
int
xor
fs
xchg
data16
add
xor
sahf
push
adc
lcall
fcmovb
int3
lock
cs
pop
mov
mov
icebp
pop
pop
xor
fldenv
int
xorl
ds
dec
hlt
push
rol
sub
adc
sub
int3
pop
push
aam
pusha
adc
shlb
fmuls
inc
cmp
push
or
cwtl
inc
or
jp
cld
sub
rorb
arpl
sbb
cmpsb
push
hlt
rol
pop
cs
sbb
cmp
mov
stos
pop
stos
scas
mov
xchg
mov
and
arpl
push
jmp
jge
and
xchg
out
add
add
or
xchg
push
cmp
xchg
pop
and
push
cs
sbb
int3
sbb
push
add
mov
xchg
xchg
sarl
push
mov
lahf
int
and
mov
imul
pop
push
push
shrl
inc
push
pop
dec
lods
negl
stos
in
icebp
inc
mov
daa
rorb
out
xor
int
xchg
cli
fcmovnb
add
and
in
lods
xchg
cld
jbe
and
adc
and
sbb
loope
mov
cltd
fistpll
lods
or
inc
std
adc
cmp
fidivrs
add
js
in
sbb
sahf
lea
cltd
pop
test
in
scas
faddl
daa
loope
psubsb
clc
jo
lcall
push
andb
push
add
lahf
sbb
mov
push
dec
inc
cmp
mov
jl
ja
mov
pop
xchg
inc
mov
sub
stos
adc
negl
cmp
pop
dec
adc
mov
cmp
dec
outsl
push
sbb
xor
and
adc
repz
mov
clc
lock
pop
aas
movsb
fcmovnbe
mov
fdivrl
cmpb
lods
mov
add
pusha
gs
pop
lds
lahf
pop
push
inc
sahf
or
ja
lret
inc
test
mov
stos
mov
fs
mov
mov
and
lock
adc
es
cmp
xlat
inc
cmp
cld
lcall
gs
push
mov
mov
push
cmp
sahf
jbe
jno
add
xor
jae
iret
int3
sbb
inc
xchg
enter
push
sahf
outsl
xchg
lret
jbe
xchg
fists
outsb
mov
ja
jae
shr
mov
idivb
and
push
inc
pop
ret
lds
pop
lods
cli
pushf
std
sub
enter
aam
loop
lahf
clc
adc
mov
stos
das
ret
movq
shl
cld
lret
jo
jo
out
push
jne
sub
lock
push
push
push
fnstenv
xlat
dec
push
ficompl
add
add
xor
cli
inc
lcallw
add
adc
je
in
iret
mov
adc
xor
js
jbe
mov
xchg
or
jp
fwait
pusha
sub
mov
mov
aam
sbb
pop
lcall
adc
xor
inc
roll
out
mov
das
or
test
jb
mov
jae
mov
lahf
jge
in
xorb
add
mov
dec
cmp
adc
jecxz
adc
and
loopne
push
sti
fildl
sub
prefetch
push
xchg
int3
call
push
imul
sbb
test
or
lods
loope
daa
mov
sti
ja
addb
jb
insl
test
dec
jl
fldl
jae
xor
jmp
xchg
mov
pop
imul
in
add
push
in
cmc
sbb
inc
adc
inc
lods
xor
push
push
pop
pop
lea
scas
jns
sbb
cmpsb
sub
imul
sti
push
sti
dec
std
in
out
xor
dec
xchg
shl
adc
jne
cmpsb
cwtl
jge
lcall
test
int3
xchg
mov
push
or
pop
sarb
lcall
mov
mov
xchg
mov
cmpb
fwait
addl
cmpb
out
pop
lcall
mov
cli
mov
jno
pop
xor
cld
pop
cltd
mov
lret
push
cld
arpl
adc
mov
mov
adc
cltd
outsl
adc
hlt
and
sbb
cltd
xchg
mov
fs
push
fwait
cmp
cmc
mov
sub
adc
inc
dec
adc
or
adc
sti
out
pushf
les
pop
add
push
and
leave
mov
mov
gs
inc
sbb
hlt
ret
aas
mov
imul
mov
arpl
test
enter
iret
movsl
or
dec
movsl
ss
mov
sub
and
daa
stos
es
cmp
mov
fidivs
or
mov
push
pop
loop
mov
movsl
mov
sub
repnz
mov
in
jne
ja
iret
fcmovb
cli
enter
jg
jae
loope
xchg
lds
sbb
cld
es
mov
cmp
pop
nop
adc
push
lahf
jge
add
stos
outsb
inc
loop
and
outsb
mov
arpl
rolb
mov
push
inc
pop
pop
mov
daa
cmp
cld
outsl
fsubp
out
add
mov
mov
inc
jmp
fsubp
push
or
adc
sti
push
fbstp
sbb
clc
out
jecxz
mov
mov
pop
dec
pop
cmpl
sti
shlb
out
mov
insl
mov
data16
ljmp
andb
add
fildll
mov
xorb
mov
aad
fucomip
ror
cmp
xchg
repz
popa
or
xrelease
mov
fisttpl
mov
sbb
sti
mov
aam
lds
out
dec
cmp
dec
test
xchg
iret
out
jle
lret
and
mov
lret
insl
push
push
shll
into
jbe
jecxz
jb
adc
cld
xchg
out
and
and
sbb
fildl
sub
inc
fwait
pop
gs
decb
push
xor
cld
dec
pop
ljmp
clc
or
cmpsl
loope
dec
cmc
or
popa
lds
das
and
mov
push
mov
xor
jg
daa
ss
cmp
push
call
mov
mov
notl
or
test
sahf
push
lret
popa
push
add
js
mov
test
push
jb
sbb
cs
mov
scas
ret
movsb
jge
bound
adc
sub
sti
mov
aam
cwtl
and
sti
dec
fldt
or
mov
sbbb
rcll
mov
daa
jo
mov
or
or
pop
push
fiaddl
inc
inc
cwtl
dec
cmp
sub
test
mov
sbb
daa
pushf
push
sbb
popf
mov
or
movsl
or
test
jecxz
into
jno
aam
dec
leave
jp
fdivrs
push
mov
movsl
lods
rcll
std
push
into
jbe
push
push
sbb
mov
popa
scas
insl
bnd
pop
out
and
leave
inc
pushf
cmc
jg
mov
call
adc
pop
cmpsb
rorb
lcall
inc
push
insb
popf
cmp
mov
loop
movsl
jecxz
mov
shrb
stos
mov
rorl
mov
mov
inc
int
into
adc
adc
fs
loope
shrb
lods
mov
mov
mov
test
xchg
cld
cs
pop
rorl
arpl
ja
movsb
sti
sbbl
or
push
jp
fcmovnbe
jge
xchg
add
mov
popa
sub
jle
and
daa
and
pusha
adc
jae
mov
xchg
int3
js
shll
popf
and
ds
xor
das
jne
test
adc
cmp
pop
mov
xlat
shl
mov
push
mov
push
xchg
out
lret
repz
mov
fwait
js
cmp
xor
jb
add
push
testl
test
push
mov
cltd
pop
ret
jns
fldenv
mov
dec
lock
fadd
lcall
mov
out
outsb
pop
sbb
int3
push
lock
sbb
jp
in
lods
xchg
xchg
push
inc
je
inc
dec
and
aas
jmp
inc
nopl
dec
addr16
movsb
mov
sbbl
jge
cs
je
push
test
test
repz
mov
mov
push
add
sti
mov
xchg
cmp
mov
pusha
fidivrl
je
lods
dec
stos
sarb
push
or
daa
sti
test
test
shrl
stos
xchg
adc
loope
loope
inc
jae
push
pop
add
xlat
movsb
fildll
nop
outsl
inc
cmp
mov
xchg
pop
pop
orb
jge
pop
cli
stos
inc
mov
push
rolb
and
push
dec
sarl
sbb
int3
xchg
nop
sub
push
test
and
cmp
filds
rorl
mov
pop
dec
je
arpl
jge
lret
aad
mov
shll
and
mov
mulb
adc
mov
and
les
cs
push
ja
sub
inc
mov
sbb
mov
cld
inc
repz
inc
mov
lea
cmp
arpl
movsb
bnd
xchg
in
fisubs
es
sbb
or
out
push
ret
jb
mov
mov
cmp
adc
push
mull
fdivr
testb
mov
data16
jns
xchg
dec
mov
aas
sbb
imul
or
add
jle
and
aad
shrl
mov
xor
add
cltd
fwait
nop
lock
gs
int3
mov
sub
sbbb
xor
mov
lods
jae
out
adc
xchg
dec
loop
xchg
cld
mov
test
jge
es
sti
gs
push
stos
insl
dec
xchg
inc
dec
clc
jbe
sbb
cmp
pop
sbb
std
jne
daa
add
sbb
mov
cmp
pop
jmp
cmp
ret
lret
dec
pop
mov
jle
rcll
mov
dec
lods
push
lret
fidivs
and
cmpsb
dec
sub
repnz
mov
loope
scas
add
jb
cmp
push
and
loopne
inc
in
sbb
jp
and
cmp
dec
cmp
mov
fdivr
lods
and
jmp
imul
iret
push
movsl
dec
mov
xchg
push
push
xchg
andb
mov
xchg
xchg
and
rcl
ds
lds
dec
cmc
stos
mov
imul
or
mov
and
std
push
aam
loope
loop
insl
sbb
cmp
push
test
mov
mov
cmpsl
loopne
loopne
les
mov
out
lock
mov
inc
sub
repz
cmc
int
xor
push
std
mov
aaa
aad
mov
sahf
push
fs
cmp
add
mov
or
jge
inc
out
ficoml
push
jnp
push
mov
pop
hlt
cs
lods
scas
adc
ret
decb
sti
into
sahf
sub
loopne
fwait
adc
and
das
add
push
dec
and
js
fadd
in
sub
popf
mov
cmp
or
mov
xchg
or
sub
hlt
sti
inc
dec
cmc
cmpsl
jl
or
xlat
in
dec
mov
cmp
mov
mov
repz
rorb
mov
fisubrl
inc
adc
push
sarl
push
jbe
push
jae
ds
fsubr
adcb
sarb
fistpl
js
dec
enter
leave
adc
and
shrb
fisttpl
pop
popf
adc
adc
mov
xchg
adc
lea
mov
xchg
push
scas
or
pop
mov
lds
mov
sbb
in
js
push
push
or
and
test
adc
fdivrp
pop
fisttpll
fnstcw
adc
jp
icebp
int3
cs
fnsave
in
mov
movsb
cmp
and
or
iret
jmp
repz
imul
add
dec
cmp
sbb
in
les
dec
inc
jge
out
mov
mov
mov
sbb
inc
or
insl
out
inc
jno
test
loope
jbe
fsubl
fidivl
xor
je
mov
cmp
cmp
int
inc
jg
test
jbe
add
leave
clc
jo
sbb
mov
dec
xlat
pop
add
in
lret
mov
out
shrl
shlb
push
out
pop
lds
cmp
rep
stos
cmp
mov
jp
jo
outsb
popf
mov
jae
jecxz
scas
stc
or
jl
jecxz
add
addr16
mov
mov
mov
pop
or
add
cltd
push
adc
pop
push
xchg
pop
loopne
stos
push
mov
jecxz
cwtl
pop
dec
fisttpl
out
mov
fs
inc
pop
pop
mov
rcl
cmp
loope
clc
sbb
or
adc
gs
enter
icebp
lcall
outsl
negl
inc
mov
data16
inc
cmpl
cmc
in
aad
dec
xor
inc
add
pop
decl
vaddps
mov
push
jb,pn
adc
push
mov
push
loop
leave
push
sbb
sbb
in
sub
ljmp
cmp
in
cmp
outsl
pop
loop
pop
aas
into
in
push
inc
leave
bswap
add
sarl
cmp
pusha
rorl
addb
or
popa
xchg
xchg
jns
pushf
adc
cmp
pop
out
das
pop
stc
cmpsb
xor
xchg
jmp
and
fistl
leave
dec
push
mov
test
mov
xchg
sar
xchg
xorb
pop
les
sub
rolb
jmp
out
pavgw
or
cmp
insb
adc
xor
mov
or
adc
daa
xchg
add
ret
addb
int
xchg
pop
in
cld
sub
imul
mov
xchg
call
push
jns
ljmp
inc
push
xor
dec
mov
inc
cmp
sub
pop
enter
push
sti
pop
sbb
push
popa
push
mov
mov
bound
testb
push
clc
ljmp
imul
sbb
ffreep
clc
adc
or
pushf
mov
lods
mov
xchg
adc
pop
pop
inc
cmp
ficoms
pop
repz
loope
cmp
dec
shrl
xchg
push
sub
test
jo
addr16
outsl
sub
loopne
push
outsb
and
mov
aam
mov
fmulp
mov
lea
aaa
in
pop
loop
in
insb
insb
push
push
mov
and
shll
push
mov
mov
jge
dec
incl
idivb
or
pop
cmpsb
fcoml
rol
pop
in
jl
inc
cmp
imul
ds
mov
sub
and
pop
je,pt
inc
imul
add
inc
or
or
fwait
loope,pt
or
das
push
cmpsl
cmp
data16
xor
and
out
push
lea
lock
xchg
xor
sti
cs
cld
sbb
lds
les
sub
dec
mov
xchg
test
in
fisubs
in
js
mov
sbb
pop
das
out
push
xchg
dec
data16
xor
imul
in
ficompl
xor
inc
inc
dec
push
lcall
rorl
out
mov
sar
clc
pusha
fsubr
adc
adc
sub
xchg
mov
sahf
movsb
rdpmc
sbb
adc
xchg
aaa
in
notb
sti
pop
insb
jg
inc
and
std
repnz
call
in
lds
or
ljmp
or
sbb
add
xor
cmp
imul
fstl
mov
push
pop
xor
jl
jl
sub
clc
addr16
jno
rolb
movb
cmpsl
lods
cmpsb
adc
cmp
jp
mov
fstpt
into
addr16
mov
add
adc
mov
out
gs
mov
or
mov
lret
sbb
jno
lret
in
fidivl
mov
out
dec
shrb
sub
ret
stos
inc
sarb
inc
mov
test
ds
addl
aad
pop
mov
mov
pop
jbe
jns
repnz
sub
movsb
cmp
loopne
and
sbb
mov
add
inc
stos
idiv
push
inc
dec
cli
xor
fimull
inc
and
and
mov
loopne
loopne
dec
insb
je
add
sbb
fwait
add
jmp
aas
jb
and
mov
sub
sub
sub
cmp
iret
push
cmpsb
lods
xchg
repnz
xor
out
pop
test
jae
gs
lcall
stos
push
or
lods
sahf
ljmp
cwtl
xchg
sbb
mov
xchg
ss
sub
leave
jmp
push
xor
sbb
fcomps
imulb
cmc
outsb
fdivr
sub
pop
dec
decb
sub
mov
xchg
mov
sahf
scas
mov
sub
add
fildll
outsl
sub
pop
mov
shlb
jmp
sarb
pop
shrb
sbb
shrb
arpl
sti
sub
insl
dec
mov
and
sar
std
setg
sarl
pop
pop
ret
push
mov
push
loope
mov
add
jo
or
jbe
fnstenv
push
sub
cmp
add
jl
xor
pushf
fbstp
jge
mov
or
pop
fcoml
inc
push
jecxz
inc
push
xchg
jecxz
movsl
scas
mov
shl
pop
sub
sbb
aaa
fucompp
mov
aam
and
popf
inc
dec
push
dec
in
jo
or
cs
fmul
sbb
scas
lods
mulb
xorb
testl
mov
dec
add
lea
daa
rcll
test
in
dec
pop
pop
cmp
xor
movsl
sub
add
lods
mov
sti
addl
dec
notl
jbe
cmp
arpl
or
mov
jmp
cld
jge
mov
mov
movsl
pop
inc
fnsave
out
out
inc
int
mov
pop
aad
sub
popl
cs
sbb
inc
rorl
jge
arpl
rcll
daa
imul
adc
push
std
push
out
xchg
outsl
mov
shrl
pusha
ja
sbb
ret
xchg
sub
inc
mov
testl
addl
sbb
jp
xchg
mov
daa
cmp
pusha
mov
fst
int
sti
sub
mov
or
inc
mov
push
push
test
fsubrl
test
negb
push
xor
mov
add
xor
xchg
sbb
xchg
sahf
lods
cmp
jecxz
fisubrl
rcrb
sbb
sbb
push
add
out
fisubl
stos
ds
push
lods
cmp
pop
pop
leave
cmc
sub
arpl
add
xchg
cmp
ret
mov
and
int
jb
mov
pusha
and
dec
mov
or
cmp
pop
xchg
shr
and
out
inc
mov
lods
imul
xchg
aaa
dec
rol
fmuls
jb
in
cltd
sarb
std
pop
test
pop
dec
jecxz
sub
mov
sub
fwait
std
les
xorb
push
push
sbb
push
mov
test
mov
popa
push
repz
paddusw
nop
add
push
cs
movsb
sarl
cmpsb
sub
mov
push
rclb
sbb
inc
dec
cli
xchg
cld
push
jns
cmpsl
push
mov
jb
aad
pusha
push
push
jecxz
idivl
test
jnp
mov
nop
add
add
sub
add
rcll
lret
sbb
lea
fnsave
dec
std
cmpsb
pop
daa
cmp
clc
mov
into
mov
clc
adc
test
test
gs
int
mov
pop
popf
sbb
cs
xor
and
mov
pop
mov
pop
roll
movsl
int3
xor
test
mov
icebp
push
mov
lods
mov
repnz
inc
movb
pop
sub
pop
pop
xor
stos
jl
mov
call
cmp
das
loope
xor
xchg
call
push
sub
out
xor
or
in
dec
inc
ss
cmc
cs
nop
dec
xor
lods
pop
stc
pop
xchg
fimuls
imul
nop
std
test
fdivl
loopne
xchg
mov
scas
pop
ds
pushf
sub
in
ret
in
fs
sarb
cmp
add
mov
mov
fwait
push
mov
and
pop
repz
and
inc
inc
fs
in
bound
mov
lock
push
lcall
jle
mov
jne
and
hlt
xor
adc
sub
cmc
mov
int
jno
fadds
test
aas
mov
dec
pop
data16
inc
sub
in
aam
and
nop
sbb
xchg
insl
adc
cmp
popa
test
xchg
je
jecxz
fstl
ljmp
push
xchg
mov
mov
xchg
pop
push
xor
out
ret
adc
call
in
adc
dec
fcomps
gs
jnp
repnz
clc
leave
minps
cmp
or
pop
mov
xorb
or
lods
and
lcall
cmc
mov
adc
inc
and
scas
and
imul
test
dec
or
pop
dec
pop
sub
pop
inc
in
pusha
mov
or
jge
cli
dec
adc
lods
push
cmp
out
xor
jp
xor
mov
push
mov
cmp
iret
popa
test
xchg
pop
sbb
andl
adcb
mov
ja
in
jbe
ret
test
inc
push
lods
dec
hlt
sbb
aaa
dec
inc
lods
mov
daa
movsl
js
cmc
sbb
jge
mov
jae
sub
pusha
cmp
add
jnp
out
pop
push
leave
fisttpl
mov
dec
mov
adc
inc
test
pop
cs
insb
lahf
push
shrl
push
outsb
bound
and
cmp
xor
mov
and
bound
adc
aam
jnp
test
and
sub
lock
cltd
xchg
xchg
ljmp
mov
jns
mov
mov
jne
fcmovnu
jp
outsl
outsl
dec
das
mov
push
in
fildl
jae
xchg
xor
pop
lds
jne
jmp
lahf
jmp
jns
sarb
add
mov
sbb
fisttpl
test
cmpsb
js
out
add
int3
mov
cmp
add
mov
cmpsl
jnp
mov
aad
cmp
inc
out
sbb
xor
mov
dec
sbb
test
es
out
cltd
aad
scas
sbb
xor
cs
daa
sub
and
nop
sahf
mov
mov
in
repz
push
enter
push
les
pop
dec
or
iret
cmp
add
push
int
xchg
nop
pop
sub
and
ja
mov
xchg
inc
cmc
dec
popa
jge
dec
push
push
dec
xor
sub
jns
cmp
icebp
sahf
rclb
dec
pushf
aad
pop
popf
rcr
add
in
das
inc
sti
dec
cmp
dec
stos
mov
xorl
jmp
xchg
cs
test
xchg
sub
jo
insb
sti
test
test
pushf
sbb
cli
iret
int
fisttpl
lahf
cmpps
loop
sbb
fldl
pop
mov
lret
inc
fxch
call
push
movsl
filds
inc
mov
mov
mov
repnz
and
xor
xchg
pushf
jmp
mov
andb
int3
lds
sub
outsb
jge
xchg
sub
cmp
pusha
mov
div
jg
cs
pop
inc
push
fwait
mov
push
add
lcall
lods
inc
mov
mov
push
inc
xchg
out
add
insl
sub
xchg
push
mov
es
in
rcr
daa
dec
mov
ret
and
data16
cmpsb
push
jo
into
lret
jno
add
mov
mov
insl
xchg
pop
add
sub
es
nop
or
and
or
repnz
xchg
xchg
push
fs
aaa
add
ja
rcrb
mov
ljmp
xchg
or
cmpsb
pop
int
outsl
mov
les
mov
scas
lods
push
mov
push
cmp
mov
cmp
shr
xor
ja
mov
and
xchg
int
test
adc
in
jle
scas
or
push
push
shlb
push
and
xlat
leave
jne
pop
sarb
shrl
lock
xchg
jl
arpl
cmp
mov
cli
mov
ss
xor
jne
and
scas
test
lahf
inc
stos
dec
or
les
pop
dec
repnz
jb
das
xchg
outsl
xchg
ret
fbld
fldl
sbb
push
mov
and
lods
pushf
je
jnp
sbb
sub
sub
cmc
imul
test
dec
fs
fisubs
fwait
lret
xchg
sub
and
fisubs
xor
je,pn
mov
adc
xor
mov
cmp
sbb
mov
sti
xchg
out
mov
clc
fdivl
jnp
das
mov
mov
imul
dec
mov
sub
dec
add
dec
xlat
cmp
adc
out
fcoml
js
push
or
cmp
notb
pop
addr16
pop
push
sub
jecxz
out
push
mov
dec
lahf
ds
arpl
jge
add
fisubs
stos
movsl
dec
xchg
test
das
je
popa
sbb
ds
cmp
dec
addl
shlb
xor
ficoml
push
pusha
popf
push
fldcw
push
movsb
adc
adc
imul
in
cmp
outsl
xchg
cli
pop
jns
lods
or
or
jg
in
mov
xor
outsb
xchg
add
imul
sbb
imul
or
xchg
mov
iret
inc
imul
jno
ret
add
mov
iret
or
push
das
rcrb
mov
test
popa
xchg
mov
neg
test
and
mov
push
xchg
push
sub
mov
js
mov
dec
in
dec
pushf
js
bound
mov
mov
or
arpl
xlat
jp
lock
clc
in
js
testb
add
aam
mov
mov
enter
in
or
adc
or
pop
iret
nop
loope
stc
mov
fiadds
xor
insl
cltd
frndint
popa
xor
sbb
sahf
pop
push
lret
cmp
outsb
jne
adc
mov
jecxz
sub
inc
fisttps
push
js
mov
dec
dec
popa
xor
sbb
cmp
inc
testb
xor
and
jae
push
pop
mov
dec
ds
cmpl
ret
add
lcall
cmp
scas
cs
jge
mov
pop
xchg
pop
sbb
and
adc
push
push
add
push
push
dec
loopne
jp
stos
scas
adc
sub
imul
adc
inc
loopne
xor
and
mov
loopne
arpl
add
ljmp
xchg
mov
sub
addr16
repnz
pop
lock
mov
inc
in
push
mov
adc
mov
mov
xor
mov
pop
or
mov
or
push
cltd
jp
mov
inc
cltd
rorl
jns
push
div
add
out
imul
mov
sbb
sub
adc
bound
inc
shufps
outsb
mov
cmc
adc
mov
inc
cwtl
pop
mov
mov
sbb
inc
xorl
xchg
jne
lcall
cmp
mov
divl
pop
rcll
mov
mov
adc
or
jl
xor
fwait
out
movsl
pop
dec
xor
enter
jae
cmpsb
inc
xor
out
mov
lcall
loopne
pushf
pop
enter
inc
shl
sbb
push
pusha
test
dec
and
jnp
jbe
std
not
or
lock
dec
mov
sahf
hlt
mov
mov
sub
les
lods
hlt
push
jl
sarl
and
fstl
inc
inc
inc
popf
push
xchg
scas
aam
mov
pop
xchg
and
jb
mov
push
aad
inc
xor
mov
xchg
xor
lock
or
sbb
iret
xchg
flds
pop
aam
pop
add
mov
push
jmp
es
ljmp
xchg
daa
jo
shr
negb
ss
mov
jg
hlt
dec
loopne
jo
popa
fmull
adc
push
add
dec
sub
sbb
push
or
addl
and
js
pop
push
mov
adc
or
mov
cmp
gs
insl
sbb
daa
scas
fldt
imul
out
adc
push
dec
aas
pusha
add
fstpt
rcr
cs
push
or
push
fldl
mov
sti
sub
jecxz
call
push
daa
mov
bound
mov
adc
dec
jg
fmuls
popl
xchg
mov
out
lret
or
das
hlt
cwtl
xor
inc
mov
sub
or
stc
mov
mov
int3
jb
nop
fcomps
and
sub
mov
loopne
inc
gs
test
or
pop
or
or
aas
xchg
popa
rclb
into
negl
add
pop
or
add
adc
jns
ficoml
add
dec
inc
lods
push
rclb
movb
gs
sbb
mov
loopne
push
or
sti
mov
jecxz
mov
adc
ja
and
fs
push
mov
insl
lods
call
xchg
sti
andl
ret
data16
xor
push
inc
int3
push
sub
rcrb
xchg
leave
cli
add
dec
iret
adc
adc
fs
mov
fdivs
push
inc
jle
xchg
fcoml
jo
movsl
sub
sub
and
pop
ss
push
rolb
jae
push
push
cwtl
rcrb
out
sti
add
cmc
in
arpl
pop
inc
cwtl
or
add
fisttps
inc
xchg
jecxz
mov
xor
jno
pop
xchg
sub
jge
outsb
inc
cmp
gs
in
cli
and
out
mov
scas
or
test
pop
mulps
imul
push
outsb
cmp
ss
push
xorb
xlat
cmc
dec
cmpsb
fsubp
aaa
pop
sbbb
push
mov
jg
mov
movsl
pop
ja
inc
int3
ja
pop
pop
mov
sub
movsl
cmp
fdivs
out
sub
and
aam
jle
sti
dec
rorl
fs
jbe
aaa
xor
mov
mov
dec
out
jmp
in
add
sub
jg
out
imul
ja
cmpsb
push
movsl
outsb
mov
jno
dec
lods
mov
dec
pop
push
cmp
and
andb
sti
mov
int
adc
in
sti
call
hlt
clc
xchg
jp
adc
leave
and
fucomi
adc
pop
pop
loop
cmpsb
sar
mov
addr16
xor
imul
shll
stc
cmp
enter
sbb
pop
pop
push
outsl
jno
and
out
dec
into
les
fs
sub
lea
loope
pop
test
pop
popa
dec
jb
js
test
lods
fwait
dec
mov
cli
cmpsl
shl
ljmp
push
xor
inc
mov
inc
xchg
scas
outsb
popf
pop
bnd
mov
jl
pop
popf
pushf
arpl
adc
stc
jecxz
cs
cmpsb
les
popa
fidivl
pop
int3
enter
mov
cmc
addl
xor
leave
cmp
andb
loop
test
je
hlt
pop
dec
mov
sub
std
cmc
mov
popa
inc
movsb
out
psllw
dec
push
cmp
stc
dec
xor
stc
in
inc
dec
stos
dec
sub
adc
jge
jbe
cmp
push
push
cmpsl
mov
aad
fsubrs
in
shrb
xchg
add
rclb
fstps
sahf
test
cs
or
xor
insb
lahf
dec
outsl
aas
dec
loope
cmp
pop
cmp
subl
xor
jns
ss
mov
jns
icebp
rcrl
jecxz
cmc
add
mov
mov
ficomps
das
or
mov
add
cmp
int3
ret
mov
es
fists
scas
lds
fimuls
pop
push
fs
orl
call
xchg
repnz
push
notl
fistps
mov
or
or
repz
push
movsb
nop
out
addr16
jns
sbb
push
movsl
mov
xor
jge
imul
test
in
outsl
and
mov
pcmpgtb
fcomps
call
in
push
sbb
sub
or
pop
xchg
inc
cmp
add
in
nop
test
push
test
and
aas
jp
out
fisttps
jp
add
sahf
mov
orl
push
dec
cmpsb
jl
hlt
sub
cmp
fdivl
cmpsb
js
adc
xchg
hlt
and
jne
sub
fwait
dec
mov
test
inc
push
andb
push
dec
cmp
mov
hlt
push
dec
cmc
lods
movsl
lcall
out
mov
push
jae,pn
sbb
outsl
cmc
sbb
lea
into
sbb
pop
or
push
stos
sbb
xlat
rcll
sub
jg
dec
sarl
jl
jmp
add
pusha
ret
dec
mul
mov
jno
loopne
iret
push
lods
dec
add
sbb
and
sbb
movsl
mov
jbe
pop
adc
out
mov
sti
push
mov
aas
adc
xchg
and
xor
rorl
call
xor
test
movsl
bound
gs
lods
ja
inc
in
sbb
xchg
inc
sbb
js
fwait
sub
cmp
movsl
inc
mov
jb
out
mov
push
mov
out
in
mov
dec
stos
pop
dec
lods
pop
jge
fadds
push
in
sarl
cmp
push
aam
rorb
lea
pop
jmp
aas
push
imul
lods
lcall
loope
outsl
stc
jmp
jns
mov
in
xor
push
fldt
pop
mov
mov
jmp
add
pcmpgtd
cmp
es
movsl
outsb
sbb
pushl
mov
push
pop
pushf
fiadds
jmp
pop
sub
or
loope
xor
int3
stos
jl
fs
arpl
test
add
lret
sbb
dec
or
jl
cld
xor
jne
int
jnp
push
lea
push
jno
enter
scas
cmp
shll
fucomp
repz
shr
inc
xchg
pushf
dec
iret
jns
dec
mov
bound
cld
fisubs
or
lea
mov
shl
mov
mov
nop
push
das
inc
push
push
xchg
lahf
and
lods
lahf
cld
xor
add
dec
push
flds
push
xchg
mov
lock
stos
mov
cs
cmp
je
iret
jl
sub
int3
add
addr16
cmpsl
fbld
popl
xor
dec
shrl
cmp
and
and
in
repnz
mov
or
fcom
outsb
sbb
call
repz
rclb
enterw
xchg
pop
cltd
add
pusha
aad
or
cli
sbb
dec
dec
lret
pop
dec
xor
repnz
xor
arpl
xchg
inc
nop
mov
mov
scas
call
lcall
mov
xor
or
fbstp
jge
xor
repz
jmp
inc
cmp
and
xchg
sti
mov
xor
mov
mov
inc
lcall
out
mov
fisttpll
scas
lret
bound
int3
cmp
daa
push
add
lock
les
mov
and
fmull
testb
mov
inc
add
mov
xchg
gs
dec
fcomps
imul
pop
cli
cli
mov
lea
add
pop
jae
and
sub
cltd
dec
dec
scas
xchg
pop
pop
and
call
and
icebp
pushf
mov
push
and
mov
jle
dec
jge
push
jo
sbb
dec
nop
in
sub
cli
mov
mov
pusha
inc
mov
add
and
sti
mov
pop
pop
adc
dec
rcr
sbb
cmpsl
test
fldenv
xchg
loope
and
movsb
stos
les
xor
mov
inc
icebp
clc
mov
pusha
jmp
mov
loopne
fisubl
iret
cld
xor
inc
jae
jo
scas
inc
stos
lret
lods
pop
xchg
adc
pop
out
test
xchg
or
stc
into
in
jge
mov
imul
imul
jnp
add
loope
and
sub
pop
push
jns
es
adc
mov
fstps
or
cmp
fnsave
cmp
jbe
cmp
inc
mov
loop
aas
push
insl
sahf
fadds
push
lods
inc
les
lea
cmp
lds
subl
mov
xchg
xor
ja
add
stc
inc
fcoms
out
mov
call
pop
test
shll
mov
mov
lcall
movsb
icebp
repz
push
cld
xor
nop
ja
int
cmp
fcomi
aaa
arpl
ret
push
cwtl
fcomps
cmp
push
jecxz
daa
jno
fidivl
imul
cmp
sbb
dec
inc
arpl
xchg
push
mov
cmp
cmp
sub
jne
lock
jmp
cmp
push
xchg
arpl
cltd
and
xor
adc
fsts
cltd
mov
pop
add
roll
and
mov
ffreep
and
jnp
inc
cli
scas
xchg
xchg
cmp
outsl
lcall
scas
push
cmp
cmp
lods
jnp
in
mov
idiv
mov
dec
imul
into
inc
loope
push
inc
adcb
inc
push
xor
testb
xchg
jle
sti
and
mov
jle
dec
movsb
push
mov
mov
stos
pop
lds
orb
jg
fldl
aad
jl
daa
fstpl
fistpll
call
mov
push
pop
lret
xchg
fnstenv
push
and
mov
scas
out
adc
inc
daa
rolb
stos
sbb
jno
sbb
nop
pop
in
outsl
and
cli
jne
dec
lods
jno
dec
cmp
jle
mov
dec
xchg
push
xor
jmp
inc
add
gs
mov
dec
mov
jecxz
ljmp
lcall
xor
cld
dec
xchg
sub
mov
leave
repz
pop
jmp
stos
addr16
cltd
xchg
int3
ja
ss
and
repz
jl
sbb
outsl
sub
mov
loopne
mov
sahf
lea
mov
je
cmp
stos
test
js
fcmovnbe
divb
jecxz
clc
dec
adc
adc
rolb
addl
je
push
out
jns
in
adc
dec
xchg
pop
jle
leave
repz
jb
in
mov
push
jo
pop
add
jl
mov
aam
adcl
sbb
sti
or
mov
xchg
adc
cmp
jnp
fiadds
mov
cmp
cmp
and
push
call
jg
shlb
clc
loope
daa
sahf
xor
icebp
adc
mov
int3
mov
mov
cwtl
data16
cwtl
jnp
addb
fmul
xchg
add
gs
pop
cltd
xor
daa
sahf
sti
fidivs
repz
mov
jne
jg
sahf
cmp
add
pop
jl
mov
cli
xchg
lods
jae
mov
jecxz
mov
cmp
test
test
leavew
mov
mov
xor
orl
aad
js
je
mov
jmp
jbe
adc
adc
push
hlt
es
insb
icebp
pop
repnz
xlat
sub
repnz
inc
test
vmovaps
and
adc
push
xchg
out
adc
mov
inc
lret
fisubrl
or
cmp
sub
mov
mov
into
aad
paddw
int3
inc
cmp
jo
in
push
mov
mov
xor
ficomps
dec
aad
sbb
sub
imul
rclb
sub
sub
mov
jnp
js
call
jecxz
cmp
jbe
xchg
mov
adc
mov
pop
xchg
insl
push
xchg
adc
pop
gs
insb
adc
mov
jl
and
out
fwait
inc
xor
movsb
inc
xorb
pop
sbb
cmpb
xchg
jl
sub
mov
sbb
xchg
cwtl
dec
les
pop
pop
jo
pop
xchg
outsb
mov
ret
rcl
cmp
push
rcr
and
xchg
mov
call
jge
fstp
inc
and
lods
xor
ret
bound
add
add
lock
jl
mov
mov
mov
mov
mov
jns
push
jge
mov
lret
aam
and
out
sub
mov
adc
js
data16
ret
fnstcw
or
stos
sahf
insl
xor
movsl
pop
scas
pop
fmull
cmp
shll
aam
jp
imul
test
rorl
subl
cmc
arpl
add
mov
das
xchg
lds
out
pop
xor
mov
fsubs
mov
push
imul
cmp
push
push
je
flds
sub
frstor
mov
pop
negl
test
push
cmc
jmp
jns
stos
roll
mov
incl
arpl
inc
inc
repz
rcrl
mov
and
arpl
push
frstor
mov
xchg
mov
pop
push
sti
enterw
adc
adcl
mov
cltd
mov
nop
mov
push
stos
imul
mov
cmp
popf
outsl
pop
vmread
jae
cld
xchg
add
xchg
pop
dec
fndisi(8087
aad
mov
cmp
dec
mov
lret
mov
push
mov
adc
add
cmp
loopne
pop
into
sub
xlat
cmp
mov
sub
and
stos
scas
push
fs
shr
fldl
iret
mov
mov
jmp
push
ret
sarl
jns
idiv
push
inc
xor
fcoml
js
sahf
jns
mov
mov
adc
ljmp
mov
mov
mov
sub
xor
mov
aaa
mov
mov
fs
mov
ja
sbb
dec
stc
into
fwait
repnz
into
test
cli
outsb
test
sbb
repz
push
test
loop
xchg
jge
push
mov
add
addl
loopne
int
add
les
mov
inc
dec
sti
pop
cwtl
adc
lret
sub
mov
imul
jl
outsb
cmp
add
das
popa
mov
mov
test
sbb
repnz
sarb
lods
test
rcll
push
sbb
out
sub
leave
xlat
mov
push
mov
lcall
jno
jmp
jg
dec
scas
push
jle
or
out
xchg
aam
out
jge
std
push
xchg
sbb
pop
int3
dec
xor
ret
pusha
js
js
es
jecxz
add
jp
push
jne
xor
daa
adc
xchg
test
jmp
or
xchg
xor
mov
test
sub
aas
sbb
cmp
and
push
loop
jecxz
ds
pusha
dec
pushf
sub
out
pop
js
jmp
adc
xor
scas
and
and
push
outsl
stos
inc
out
gs
andl
push
xor
inc
repnz
push
xchg
inc
mov
jmp
mov
jb
adc
ja
jecxz
cmp
call
std
sbb
aaa
bound
and
sub
pop
xor
jbe
pop
dec
lea
pop
sub
add
pop
add
leave
cmp
sub
insb
test
mov
xchg
pop
stos
xchg
sub
xlat
int
in
daa
js
pop
shll
add
cmc
mov
es
popl
xor
loopne
lea
mov
jns
repz
in
sbb
mov
push
sub
add
js
in
xor
xchg
push
addr16
mov
mov
xchg
fucomi
sub
or
xor
and
ds
xor
push
cmpsb
in
xor
xor
out
icebp
or
jbe
in
sbb
rcrb
stos
mov
inc
test
inc
call
mov
and
mov
arpl
andl
add
cli
push
jp
jp
loope
test
mov
sti
int3
imul
sbb
xchg
mov
cmp
ret
loop
movsb
pop
sub
sub
insb
test
add
movsb
and
sub
shl
scas
push
sbb
mov
std
sti
fadds
or
test
jg
jne
dec
arpl
inc
xchg
out
push
xchg
or
adc
or
cmp
inc
jae
xchg
inc
lock
jno
lock
rcr
or
and
dec
out
adc
rcrl
sub
add
outsb
popa
pop
sub
add
cwtl
pop
xchg
scas
subb
xor
inc
lret
clc
jns
push
ftst
into
scas
mov
cltd
rcrb
pop
push
xor
jb
out
insl
mov
orl
pop
pop
enter
dec
dec
jecxz
mov
loop
loop
clc
inc
push
ja
cmp
pop
xlat
push
mov
fdivrs
cmc
cli
mov
jne
mov
data16
imulb
lret
adc
sbb
mov
lret
lods
data16
jae
cmp
xor
adc
es
mov
imul
mov
lods
gs
cli
icebp
mov
shlb
mov
pop
mov
jbe
imul
shlb
aad
jne
das
cmp
xchg
dec
or
xchg
pushf
sbb
or
add
cld
dec
lcall
jno
sbb
js
pop
loopne
mov
pop
fidivs
icebp
flds
jno
pop
push
jnp
dec
cmc
inc
inc
inc
lret
xor
dec
xchg
jbe
cltd
pop
mov
out
in
dec
push
lcall
lods
out
das
stc
xor
stc
jl
pushf
or
nop
aas
push
and
push
lahf
clc
and
icebp
test
and
stc
das
test
mov
pop
shrb
cmp
sti
shrb
cmp
mov
adc
sub
pop
and
jmp
mov
cmp
int
ss
sub
stos
and
cltd
aas
mov
pop
loope
inc
xchg
and
push
shrl
pushf
sub
inc
xchg
adcl
imul
pusha
fldenv
adc
sub
push
and
loop
inc
xor
popa
sbb
lea
xor
addl
sbbb
push
faddl
iret
cmp
adc
mov
inc
flds
push
jbe
xchg
out
int3
shrb
push
xchg
dec
adc
popa
fidivs
mov
cltd
aam
insl
movsl
xchg
xchg
cmpsl
rorl
roll
push
lods
mov
shrl
jge
scas
shrb
adc
mov
push
ljmp
inc
imul
xor
push
leave
xchg
mov
loope
add
mov
aad
hlt
push
mov
insb
std
or
int3
adc
pusha
or
mov
inc
and
jnp
xor
jae
or
iret
push
mov
inc
push
and
xchg
inc
cmp
add
ljmp
sub
sbb
xchg
jecxz
push
pusha
xchg
push
mov
jns
insb
cmp
pop
mov
imul
rcll
sbbl
cmovnp
outsl
rcrl
sub
push
das
lods
sub
and
pop
aad
push
mov
dec
dec
es
dec
cmp
ja
sub
aaa
push
push
enter
lock
sti
and
jg
rcl
lret
mov
rcll
into
arpl
ret
mov
mov
push
addl
insl
jmp
stc
xor
cli
je
xor
and
sub
in
cli
or
call
push
cmpsl
bound
jmp
mov
inc
jg
sub
push
std
xchg
fwait
dec
bound
mov
cmp
cmp
hlt
mov
jns
dec
leave
push
pop
leave
jmp
pushf
cli
not
stos
test
sbb
sbb
jb
test
jecxz
dec
mov
lret
fiadds
cmpl
mov
pop
icebp
add
adc
push
jp
dec
int
xchg
mov
lcall
adc
sub
lret
into
push
flds
mov
popa
mov
mov
data16
and
data16
orb
pop
push
push
xchg
xchg
out
adc
int3
push
xchg
push
mov
shl
xor
push
ret
add
inc
imul
les
xchg
dec
jmp
and
movsl
sti
inc
xor
inc
in
popl
insl
iret
sbb
mov
sub
add
je
inc
xchg
pop
in
adcb
int
push
subl
pop
cmpsb
rcl
inc
inc
cmp
mov
sub
aad
daa
pop
inc
out
movsl
sub
push
outsb
add
mov
test
fwait
mov
stos
fwait
or
or
test
xchg
inc
add
dec
pop
dec
adc
mov
flds
inc
dec
in
jmp
jne
mov
out
popw
aam
repz
lcall
out
lcall
pop
das
shrl
jl
jmp
pop
adc
xor
jb
add
mov
inc
shl
jb
pop
add
add
jne
gs
mov
jb
int3
mov
mov
mov
fwait
rcrl
out
cmpsl
lods
or
pusha
jae
and
and
adc
cmp
adc
pusha
and
adc
lret
pushl
andb
outsb
mov
cs
mov
insb
pop
pop
arpl
mov
cltd
sti
paddusw
push
mov
mov
int
out
loop
push
xlat
pop
mov
ja
dec
roll
aaa
mov
loopne
lcall
out
wrmsr
shll
dec
mov
sbb
inc
sub
rcl
cmc
adc
mov
dec
push
or
adc
mov
ljmp
xorl
ficomps
dec
cmp
xchg
shrb
ja
je
dec
sarl
add
lcall
or
in
loop
add
lea
or
in
inc
test
jl
and
ficoml
fldenv
inc
fwait
cmc
repnz
inc
adc
imul
jmp
std
aas
mov
push
insl
movsb
out
inc
fs
nop
gs
and
test
xorl
idivb
mov
mov
rcrb
roll
sbb
pop
fisubs
mov
sbb
int
jmp
pop
shrb
imul
jl
bound
cmp
add
jmp
subb
jp
popf
mov
xor
popa
pop
add
pushf
push
mov
daa
pop
cmp
mov
inc
movsb
insb
mov
xor
out
mov
xchg
xlat
cmpsl
mov
adc
call
cmp
mov
clc
aam
sub
pop
mov
xor
cmp
pop
xor
bound
sub
jae
rcll
push
ret
hlt
pop
loop
in
dec
mov
ds
insl
push
mov
fwait
xchg
mov
xor
cwtl
mov
lea
jns
movsl
xor
adc
mov
push
call
inc
add
cwtl
aad
iret
arpl
std
adc
sahf
xchg
mov
xlat
es
shl
pop
sbb
daa
mov
mov
or
mov
test
mov
mov
nop
lea
in
aam
or
xchg
in
pop
sti
or
pop
sub
inc
lock
and
lock
push
mov
sysexit
in
xchg
add
scas
add
roll
xor
push
sbb
sbb
scas
inc
into
lret
push
pop
faddl
rol
push
cmp
push
cltd
hlt
sub
cmp
cs
mov
repnz
or
xchg
mov
mov
enter
add
mov
lahf
nop
loopne
scas
push
cs
inc
mov
loop
push
ja
rorl
ljmp
mov
stos
out
and
mov
stos
xchg
mov
scas
jle
lods
jl
dec
jne
and
out
add
sub
cmp
add
icebp
mov
xor
mov
adc
mov
dec
test
jo
push
pop
jp
adc
dec
and
xchg
adc
and
push
and
sub
pop
push
sbb
inc
sbb
test
fistl
outsl
jecxz
sbb
data16
xchg
ret
ja
pushf
popl
inc
popf
frstor
dec
sbb
mov
jge
outsb
aam
pushf
daa
pop
adc
pop
popa
adc
sti
test
outsb
pop
cmpsl
out
and
outsl
inc
mov
inc
xadd
icebp
movsl
out
jns
fstps
adc
stc
imul
loope
inc
inc
jb
out
out
pop
int3
rclb
mov
in
sbb
sub
push
loopne
and
mov
ds
add
test
adc
xor
fldt
loope
add
xchg
pop
add
push
sbb
dec
adc
ffree
arpl
fwait
inc
sbb
xor
sbb
cmp
fucomip
fcompl
jge
add
stos
mov
lods
test
movsb
push
sub
mov
sub
ds
xchg
inc
jp
loop
xor
fistpl
mov
or
adc
pop
inc
loopne
movsl
xchg
clc
pushf
mov
outsb
aam
lea
fdivrs
ret
lea
jno
incb
pushf
in
cwtl
call
jnp
movsl
mov
and
test
mov
dec
jl
das
lods
push
movsb
dec
imul
cld
sub
sbb
mov
stos
test
jae
and
fwait
cmp
iret
and
aad
cmp
pop
push
movsb
sbb
adcl
shl
inc
push
cwtl
cmovbe
sub
bound
lods
mov
fistps
xchg
sub
fsubrs
jg
aas
xchg
mov
xor
push
cmp
lret
pop
mov
jnp
xlat
xchg
pop
mov
imul
mov
push
jo
cmp
js
rorl
xor
xlat
subb
cmp
cmc
repz
fwait
cmpsb
test
lcall
cmp
imul
clc
adc
jb
jb
push
xchg
ror
sti
mov
sub
aas
fcmove
inc
cs
fimull
mov
push
sub
jno,pn
mov
inc
clc
adc
repnz
jmp
ret
lods
pop
movsl
js
sub
inc
rclb
inc
andb
int3
mov
bound
insb
clc
jecxz
jno
cmp
insl
daa
sbb
imul
imull
packuswb
pop
pop
bound
jl
movsb
fucomi
out
fisubs
int3
xchg
mov
cmp
movsl
pop
stc
push
mov
loop
stos
sahf
pop
decl
mov
lret
jne
or
jne
mov
stos
and
push
and
cmp
adc
push
cmpsb
xor
xchg
nop
or
push
add
cmc
insb
mov
inc
pop
ss
push
sub
sbb
fdivrl
push
scas
sub
and
adc
xor
int
mov
pop
mov
lahf
gs
sbb
js
std
loopne
jle
sahf
inc
je
xchg
ljmp
jmp
xchg
cmp
mov
in
jne
es
or
push
mov
pusha
or
xchg
lahf
pop
stc
ficomps
cmc
lret
jl
dec
xchg
imul
pavgw
fwait
imul
cmp
lods
sbb
ljmp
xchg
dec
cmpsb
push
mov
sub
gs
and
jl
fldl
dec
xor
fdivs
loop
dec
imul
icebp
pop
add
cmp
adc
add
pop
int
daa
ja
das
sub
int
mov
icebp
dec
adc
mov
insb
adcl
je
or
shlb
add
and
xchg
push
add
push
cmpsb
mov
xor
mov
jno
pop
sub
jecxz
sub
dec
push
mov
dec
jl
pop
jns
xchg
jg
mov
cwtl
jl
sti
xor
in
loop
mov
pop
mov
add
pop
mov
std
das
lahf
test
in
and
pushl
mov
push
cmpsb
je
add
pop
shl
add
mov
or
mov
dec
mov
mov
lret
push
xor
mov
and
and
inc
outsl
mov
mov
mov
imul
mov
fcom
add
jge
push
lods
sub
cmp
xlat
in
imul
or
call
mov
xchg
pop
xor
inc
div
addr16
push
add
fildll
scas
int
mov
test
sub
fnstsw
mov
iret
jle
pushl
jno
push
int
xchg
dec
in
cmc
push
xchg
jb
je
add
fidivrl
pop
adc
int
daa
pop
xchg
pop
mov
cmp
jmp
mov
mov
jg
inc
fidivs
pop
sbb
aam
dec
sbb
aaa
in
lcall
jle
and
mov
xchg
push
stos
or
or
push
mov
inc
xor
xor
mov
fmull
xchg
pop
inc
add
outsb
jmp
test
imul
dec
add
dec
lret
enter
sbb
jns
lahf
jns
push
push
mov
cwtl
dec
inc
in
lods
mov
or
sarb
or
xchg
mov
ret
mov
xchg
cmpsb
mov
xor
and
fiadds
repnz
loopne
repz
or
call
push
loop
cmp
xchg
call
loop
dec
dec
insb
dec
or
adc
jle
mov
stos
or
test
shl
mov
mov
jge
fildl
push
adc
loop
rcl
mov
push
jo
xchg
ljmp
inc
adc
cli
adc
inc
ret
sysexit
mov
mov
out
addr16
nop
xor
lcall
iret
flds
and
xchg
cmp
pop
jo
jns
roll
rcll
loope
pop
fisubs
cmc
adc
fdivs
adcb
xchg
ret
pop
mov
jno
pop
xor
lret
ficoms
sub
loope
jo
cmp
jno
xchg
or
or
xchg
dec
in
sub
in
lret
mov
mov
lods
xlat
mov
push
cmp
pop
jns
xlat
sar
fsubrp
jno
and
jl
lds
rcrb
cwtl
fiadds
mov
and
or
push
adc
push
xchg
xor
cmpsl
sub
jnp
rcll
clc
test
je
lds
mov
dec
xor
test
sbb
lock
push
sub
mov
push
aad
arpl
aaa
scas
aad
jecxz
ret
shlb
cltd
icebp
test
inc
fcomps
cmp
jp
jae
aam
or
jge
add
fnstcw
or
cmpsl
ds
jmp
loope
in
imul
jmp
add
xor
ret
test
mov
mov
dec
jmp
fadd
push
add
pop
enter
out
push
adc
adc
mov
dec
sub
add
mov
and
xchg
mov
cmc
pop
nop
cmovp
cmp
dec
pop
jg
shrl
pop
cmpsb
dec
mov
fwait
jle
sub
fidivs
rorl
xchg
pusha
jp
or
sbb
scas
cmp
add
mov
js
mov
sbb
dec
lret
pop
jl
cmp
jmp
inc
mov
data16
mov
cmp
cmc
jmp
sbb
push
out
ret
push
and
test
dec
sahf
es
inc
jle
enter
pop
and
arpl
dec
dec
push
dec
incb
mov
jno
gs
arpl
orl
xchg
xchg
cmp
xorb
insb
xor
popa
aas
inc
nop
mov
jne
mov
fidivrs
pop
fmull
mov
and
rcrb
pop
jmp
cmp
popf
ret
and
or
jnp
loopne
jo
divb
mov
xor
mov
and
xchg
push
xchg
dec
sbb
push
xchg
addb
cmp
mov
cltd
fdivs
jge
rcll
jno
scas
sub
aas
fadd
jne
popf
movsb
cmp
icebp
push
lods
mov
xor
mov
sahf
out
movsl
inc
push
mov
jno
cmp
negb
push
cmpsb
add
xchg
jp
add
cmp
fadd
movsb
fbstp
lret
fwait
xor
leave
sbb
adc
fld
sbbb
movsl
enter
jg
das
adc
jnp
imul
in
xor
jp
push
cld
jo
cmpsl
pop
pop
sti
int3
jbe
lea
xchg
sbb
adc
and
ljmp
pop
stc
std
xor
dec
adc
push
push
xlat
rcrb
stos
xchg
loopne
loop
push
cwtl
in
cmp
cmpsb
lea
aaa
cmp
subb
outsl
or
adc
icebp
je
pop
testl
xchg
cltd
inc
clc
jg
mov
lea
cmp
insl
cmpsl
mov
call
lret
int
cmp
imul
stos
ret
ja
ret
xor
cltd
dec
sub
sbb
sub
mov
jle
fildl
mov
push
push
cs
dec
aad
fdivrl
or
imul
pop
iret
jnp
dec
inc
push
xor
add
shrb
cwtl
icebp
mov
add
hlt
mov
lret
pushl
add
sti
in
ret
dec
cld
outsb
lds
xchg
or
mov
lock
xchg
xchg
mov
jle
addr16
jne
lret
xor
sub
jae
aad
or
in
xchg
aaa
aas
testl
lds
sub
repnz
call
push
xchg
or
out
dec
pop
jmp
lcall
movsb
pop
es
rol
adc
mov
outsl
enter
or
pusha
inc
mov
std
icebp
xchg
push
mov
fwait
dec
xor
stos
adc
jae
icebp
xor
in
dec
das
test
stos
lock
or
test
xchg
mov
nop
dec
mov
cs
dec
dec
xor
jnp
xor
fdivrp
mov
sbb
test
sar
xchg
sub
push
aam
add
in
imul
in
inc
mov
mov
inc
push
mov
in
mov
imul
lret
or
xor
lods
dec
xlat
dec
jmp
pop
jno
sbb
int3
leave
and
icebp
bound
mov
scas
hlt
mov
pop
shl
and
mov
sub
add
sbb
aas
imul
aad
or
dec
pop
lea
and
addr16
out
nop
pop
test
out
movsb
pusha
stos
ljmp
repnz
std
bound
push
lcall
adc
add
rolb
dec
std
jb
sbb
and
jg
orb
push
sbb
xor
test
mov
shll
lahf
arpl
pop
or
mov
jnp
cmc
mov
inc
not
mov
shlb
or
mov
fsubrs
sub
iret
movsl
adc
mov
stos
xchg
stos
es
shll
jae
or
ret
repz
out
adc
bound
inc
sub
mov
sub
cmc
xchg
cwtl
ljmp
cwtl
out
imul
cmp
stos
sti
divb
jg
fsubl
xor
cmpsb
rorb
dec
test
adc
xchg
push
and
xor
dec
jnp
nopl
into
jo
jb
and
stos
dec
and
mov
add
dec
or
xor
loopne
xchg
nop
and
sbb
xlat
jecxz
fcos
loop
mov
dec
mov
out
mov
lret
sub
stc
mov
clc
sub
popa
cwtl
add
out
mov
xchg
arpl
cmp
dec
pusha
popa
stc
rcrl
push
repz
call
add
xchg
dec
inc
xor
and
mov
xchg
push
adc
dec
fwait
in
repz
cmpsl
xor
adc
sbb
and
jg
pop
pushf
dec
push
jbe
ja
enter
jne
push
shrl
lods
es
cmp
test
hlt
clc
mov
incb
push
out
aas
fistl
push
xchg
aam
or
dec
fsubrl
cmp
mov
jno
xchg
loop
or
or
fwait
push
scas
and
push
mov
sub
arpl
mov
hlt
add
mov
sbb
adc
cmp
dec
cwtl
testl
mov
xor
mov
add
cld
je
std
dec
out
push
push
mov
xchg
add
adc
inc
pop
pop
adc
push
jle
sbb
jo
and
fidivrl
jns
jge
dec
pop
mov
or
dec
scas
push
mov
jge
shl
push
adc
imul
pop
insb
mov
sbbb
movsl
push
sub
mov
fildll
dec
int3
sub
ds
mov
xlat
fwait
xchg
mov
mov
xchg
pop
mov
push
into
insb
dec
mov
push
adc
mov
mov
mov
in
sbb
in
pop
sbb
jb
dec
jbe
fidivrl
stos
fistpll
stos
shlb
outsl
mov
gs
or
adc
push
sub
xchg
js
or
aas
insl
jge
mov
jp
mov
sbb
ss
xor
fstpl
leave
dec
cmp
scas
fst
dec
lret
insb
insb
dec
inc
lods
sahf
scas
mov
stc
or
push
cmpsl
mov
fisttpll
sub
push
mov
movsl
jae
cmp
cli
xor
sub
pop
rclb
xor
sub
clc
lret
and
push
aaa
mov
mov
insl
insl
mov
cmp
pop
fimuls
adc
pop
ss
pop
dec
push
push
and
jne
push
adc
cmpsb
bound
or
repz
sbb
or
jae
outsl
out
mov
popa
dec
push
cmp
shll
loope
lret
sbb
stos
es
iret
test
je
cmp
sub
addb
push
xchg
jp
stos
mov
cmp
call
xor
add
shrl
rcll
mov
cmp
cmp
cltd
push
lds
mov
inc
or
push
lock
sbb
sub
xor
mov
jnp
mov
adc
lret
mov
outsl
pop
in
sub
mov
fmull
dec
xchg
xchg
xchg
push
pop
and
or
in
es
jbe
rclb
dec
xor
push
fnsave
notl
pop
dec
mov
insl
sbb
outsl
sbb
mov
out
pop
or
add
pop
jno
pop
xchg
loop
push
sub
and
movsl
idiv
mov
cmp
jg
push
cmp
icebp
push
imul
mov
xor
inc
jl
xchg
arpl
adc
inc
mov
popf
cwtl
jl
sbb
out
jae
ja
inc
scas
adc
pop
aaa
repz
addl
xor
fcomip
fildl
xlat
lods
mov
mov
loopne,pt
cs
ja
push
std
dec
or
ds
out
xchg
mov
stos
pop
xchg
into
dec
add
push
sar
inc
push
mov
fs
addr16
sbb
push
xor
gs
mov
aad
cli
jmp
xor
xor
pop
push
addr16
bound
push
push
ds
insb
cmc
scas
mov
jecxz
aas
adc
popf
sub
push
xchg
dec
inc
incb
xor
insb
daa
jecxz
add
sub
mov
xchg
cwtl
inc
jo
in
mov
jge
adc
and
hlt
add
cmp
jns
aas
xchg
cmova
xor
les
loopne
xchg
aad
loop
dec
mov
push
xchg
inc
cmc
push
mov
jo
push
adc
insb
bound
loop
dec
dec
std
fmulp
iret
xlat
cld
loope
xchg
and
pop
jecxz
push
hlt
dec
mov
push
andb
mov
and
imul
mov
sbbl
mov
sarb
lea
testl
inc
sub
gs
or
clc
pop
pop
mov
xchg
pop
xchg
mov
das
ds
and
in
cltd
iret
pushf
mov
or
loop
push
sub
xchg
sub
xchg
gs
lods
mov
xchg
clc
outsl
in
jo
sbb
push
stos
dec
push
call
loope
in
adc
insl
outsb
jnp
or
cs
pop
aad
cmpsl
add
out
dec
dec
cmp
dec
jne
jne
daa
mov
mov
push
jle
push
test
sbbb
sar
loop
cmp
stc
push
lea
movsb
and
cmp
push
push
mov
mov
mov
push
sbb
and
stos
push
jo
movsl
mov
adc
mov
loop
jl
adc
fstpl
xor
outsb
cmc
sbb
vminpd
dec
scas
mov
cmpsb
sbb
pop
mov
das
jmp
dec
push
inc
cltd
btr
pop
out
inc
sbb
ss
scas
dec
test
loope
jecxz
xchg
xlat
xor
lods
and
push
mov
scas
inc
or
adcl
mov
pop
shl
mov
cmpsb
ficomps
ljmp
sbb
jno
mov
das
or
jno
mov
repz
cmp
cmp
pop
adc
xor
cmpsl
arpl
push
add
pop
leave
movsl
cmpsl
out
and
xor
fdivs
adc
sub
jmp
sub
mov
xchg
adc
movlps
sub
pop
add
ss
stc
xor
rclb
dec
addr16
add
les
pop
in
mov
add
out
cmp
pop
sbb
pop
mov
repnz
scas
test
incb
cltd
inc
aas
ficoms
rcrb
es
pop
jl
enter
incb
add
dec
rclb
dec
mov
add
pop
jmp
enter
mov
and
mov
sbb
movsb
add
aas
pop
int
jae
cmpsb
aad
add
ficompl
std
cltd
or
pop
push
jp
jne
push
inc
dec
push
cmp
int3
inc
sub
leave
mov
jl
sub
fsubs
pusha
sub
sahf
push
ja
unpcklps
mov
stos
sbb
stos
mull
push
sub
and
out
or
mov
adc
sahf
push
scas
xor
test
subl
sub
push
mov
mov
sub
jmp
aaa
xor
imul
cmpsb
in
popa
subb
fisttpl
inc
out
int
inc
lret
or
sub
add
cmp
stc
ret
push
add
pop
and
test
sub
js
push
insb
push
sub
push
xchg
mov
jne
gs
sbb
sarl
frstor
das
mov
dec
call
jl
shld
or
rcll
or
add
iret
adc
in
out
xchg
fnsave
adc
hlt
bound
dec
pop
pop
push
mov
cmp
out
out
xchg
xchg
push
jecxz
cvttps2pi
cmp
mov
add
cmp
cmp
movsb
xor
popf
mov
shlb
in
lea
sub
and
mov
push
and
jo
aas
dec
test
shl
push
xchg
scas
addr16
fwait
pop
loope
mov
or
cld
je
adc
pop
clc
mov
cmp
fs
lcall
and
xor
jnp
arpl
filds
daa
popa
xor
sbb
test
pop
ret
and
outsl
into
dec
jmp
pop
iret
and
mov
pop
cltd
stos
sbbb
adc
cmpsl
stos
jne
pusha
pop
dec
in
adc
in
xchg
jns
sti
dec
mov
pop
mov
add
xchg
ret
arpl
rclb
dec
nop
add
xor
cld
cwtl
outsl
mov
insb
pop
out
clc
icebp
outsl
je
xor
mov
loope
daa
mov
push
xchg
aam
enter
lea
push
inc
cmpsl
sub
arpl
sbb
in
ljmp
and
imul
pop
shlb
sub
les
repz
and
mov
clc
mov
pop
das
inc
popf
cmpl
dec
pop
xchg
sub
call
or
jmp
sbb
out
sbb
out
fisttpll
push
test
cld
cli
cmp
dec
push
sbbl
fnstcw
mov
idivb
js
inc
mov
pop
cs
jmp
adc
push
push
std
popa
movsb
aad
xor
pop
mov
movsl
lcall
lret
pusha
cwtl
aaa
loope
fdivrl
jnp
xor
mov
xchg
xorl
pop
icebp
shlb
pusha
stos
add
xchg
adc
stos
mov
js
lea
adc
jbe
add
addr16
aaa
xor
pop
cmp
aad
mov
ljmp
ret
imul
add
adc
pushf
mov
sub
stc
dec
mov
pop
push
loop
ret
and
fbstp
movsl
dec
lock
mov
jg
jns
je
add
add
cmp
inc
popl
inc
fwait
push
mov
stc
jb
jno
test
movsb
mov
shll
dec
and
clc
inc
in
sbb
dec
fimuls
ljmp
andl
sbb
call
hlt
shrb
push
adc
in
pop
push
inc
fwait
negb
rorl
shrb
roll
test
mov
fstpt
scas
loope
sbb
in
fstpl
inc
jo
xchg
mov
sub
mov
push
out
jge
pop
lods
pop
das
xchg
inc
pop
mov
mov
mov
fmuls
in
add
sub
mov
repnz
movsb
mov
and
xlat
xchg
mov
movsl
xchg
fisubrl
repnz
shrb
and
clc
adc
mov
subl
cmp
push
loop
xor
xchg
test
lds
stc
inc
or
jae
push
mov
rolb
shll
push
mov
dec
jbe
scas
xor
aas
mov
cmp
add
addr16
sahf
shll
jnp
stc
xchg
lock
fs
jmp
add
popa
test
jb
and
iret
push
shlb
sub
jno
lahf
aad
cmpsl
xchg
pop
xchg
repz
add
lahf
inc
pop
add
cmp
pop
adc
insb
mov
mov
lea
jbe
ret
aad
cmovge
mov
cmp
adcb
adc
out
xchg
cmp
cwtl
pop
jmp
stc
fdivl
pop
fistpll
aas
pusha
mov
adc
fwait
push
inc
sbb
incl
push
idivl
jae
xchg
adc
and
mov
mov
mov
iret
and
scas
sub
cli
dec
xchg
lret
cs
xor
xor
mov
test
scas
pop
repz
adc
std
fsubr
jo
rcrl
xorl
adc
jo
jae
fisubrl
repnz
scas
push
jp
sbb
dec
sbb
ljmp
mov
movsb
fldenv
xchg
push
enter
sahf
mov
dec
adc
and
or
add
pop
jnp
mov
jb
sub
sub
call
sbb
pop
jg
mov
fistps
or
jge
aam
dec
push
add
call
daa
sub
and
sbb
dec
add
ds
jae
sub
test
outsb
aam
clc
daa
ss
jl
lds
out
out
sahf
inc
push
test
cld
jnp
or
pop
addr16
movsl
ja
jae
jmp
pop
ret
repnz
movsb
jno
mov
in
mov
inc
out
add
fildll
mov
dec
outsb
jmp
xchg
xchg
or
mov
adc
xor
call
in
repz
push
test
fisubl
lcall
mov
xor
lahf
fwait
call
push
push
inc
and
rorb
fmuls
ss
out
pusha
mov
xor
or
dec
mov
add
pop
insl
loop
cmp
inc
cmpsl
lods
scas
popa
insl
jmp
lahf
adc
mov
in
shrb
into
jo
dec
and
pop
repnz
inc
mov
push
js
push
out
push
inc
in
cmpsb
dec
jl
jbe
stos
inc
cmp
into
and
xlat
lods
outsl
mov
xchg
aad
add
push
pop
fdivp
dec
lahf
sub
fsubs
inc
add
sub
rol
mov
sqrtps
dec
mov
ja
mov
xlat
lds
pop
or
es
mov
shl
adc
lcall
jmp
fst
rcll
pslld
fsubr
push
stc
popf
inc
outsb
and
add
and
pop
lret
sub
xlat
add
mov
mov
sub
ja
inc
loop
adc
ret
inc
subl
lea
mov
repnz
sbb
scas
cld
out
in
stos
ja
and
mov
push
bound
push
frstor
pop
adcb
and
stc
into
adc
pop
lods
or
and
shlb
ss
mov
sarl
push
imull
outsl
or
xchg
pop
mov
jle
mov
push
push
cld
dec
rcl
mov
imul
dec
in
movsb
bound
orb
push
push
in
call
cli
fiaddl
xor
stc
jecxz
jecxz
movsb
in
inc
or
sarl
gs
push
push
jp
sbb
fnsave
mov
aas
ficoml
lds
cmp
sub
dec
push
lds
ljmp
bound
cltd
pop
in
cwtl
sbb
pop
mov
js
push
cmp
sub
pop
sub
cwtl
and
out
cli
aad
aad
sbb
test
insl
sub
xchg
or
xor
push
dec
stos
lret
mov
je
pusha
inc
sbb
jmp
dec
pusha
mov
adc
xorl
mov
or
int3
dec
xchg
and
inc
shlb
dec
daa
pop
cmpsb
push
mov
cwtl
sbb
or
adc
dec
inc
and
sub
xor
outsb
and
addb
fs
test
adc
data16
mov
lret
or
cmp
ficompl
pop
ret
inc
shlb
push
inc
out
setno
push
ret
ja
xlat
fidivs
sub
jle
scas
sub
jg
loop
fbld
test
fbld
cs
sub
adc
leave
cmpsl
pop
or
pop
js
mov
mov
daa
movsb
mov
mov
mov
repnz
scas
mov
loopne
dec
sbb
adc
sub
adcb
imul
jle
fiaddl
adc
and
sbb
hlt
mov
xor
les
leave
jb
ds
std
push
add
mov
jmp
incl
jle
inc
dec
mov
jp
lret
pop
mov
in
jge
mov
std
call
mov
and
add
push
sbbl
cmpsb
jmp
mov
jns
test
jo
out
out
divl
sbb
test
pop
xchg
ds
lods
pushf
xor
ds
sarl
adc
push
dec
xor
mov
and
int3
jno
into
aad
cmp
lock
stos
repz
mov
push
cmp
mov
pushl
lock
call
cmpsb
mov
xor
lret
mov
out
pop
aad
jae
jae
mov
mov
mov
out
mov
js
mov
popa
xchg
je
cmp
jne
lcall
js
repnz
in
sti
aas
cli
sub
movsl
test
ret
push
in
mov
cmp
cmpsl
dec
jne
cmp
adcl
adc
inc
jmp
cmp
movsb
push
sbb
xchg
andl
out
push
rdmsr
ljmp
pop
popa
mov
xor
and
vmwrite
stos
movsb
xchg
roll
ss
pop
and
xchg
sar
sub
ja
jmp
ret
fcompl
dec
jns
adc
dec
lcall
movsb
fidivl
lcall
shlb
mov
hlt
push
imul
lcall
movb
dec
in
jno
pop
pop
aaa
adc
mov
inc
inc
out
xchg
xor
pavgb
push
mov
and
jmp
ds
movsl
jbe
sqrtps
add
cmp
aam
mov
popf
cmpsl
fmull
push
lret
lods
push
fucom
outsl
stos
sbb
lcall
out
adc
adc
ret
or
push
xor
lds
repz
xchg
imul
orl
aaa
adc
pop
rcll
mov
adc
into
jl
sbbl
cmp
lea
call
sbb
loop
mov
mov
popf
loope
cmp
je
jns
sahf
sbb
adc
lret
mov
rolb
stc
mov
cmp
cmp
jge
push
xchg
daa
mov
sub
xchg
fnsave
shrl
push
add
je
or
gs
and
cld
fs
mov
jmp
cltd
lods
lret
pop
gs
lods
lret
repnz
movsl
mov
out
ss
loope
mov
xor
mov
jmp
lret
cmp
pushf
xlat
bound
outsb
mov
pusha
and
repnz
mov
xor
jmp
lret
mov
add
inc
mov
ljmp
dec
mov
nop
adc
push
inc
lods
jbe
sub
leave
cmp
jne
pop
in
ret
mov
or
gs
cmpsb
sbb
loop
adc
adc
out
lods
sub
push
push
pop
cld
pop
rorl
dec
mov
xor
pop
out
push
clc
cmc
fdivrs
cmp
push
rclb
mov
mov
scas
mov
sbb
xchg
ficoms
into
pop
addr16
into
sub
mov
lods
test
mov
icebp
add
jle
fmulp
xchg
pop
stmxcsr
cld
sbb
pop
xchg
std
add
and
int3
sbbb
mov
out
sub
outsl
pusha
sub
leave
dec
and
ja
inc
shll
sbb
out
pop
add
xorb
pusha
shrl
dec
sub
sub
pop
sbb
rolb
icebp
pop
cld
sbb
xlat
in
push
sbb
fnstsw
push
int
sub
enter
lds
adcb
jo
call
add
loop
in
test
sub
in
clc
pushf
mov
popf
movsb
sbb
sub
mov
movsb
insb
push
xchg
sbb
push
fs
test
stos
cmp
xchg
sub
xchg
js
xor
xchg
mov
and
insl
cmpsl
and
ljmp
in
xor
adc
jne
sbb
lcall
push
scas
xor
push
mov
jp
dec
or
adc
test
or
xchg
dec
lahf
je
stos
insb
xchg
loopne
mov
inc
in
bound
gs
notl
std
out
ja
outsl
inc
xchg
imul
xchg
fidivs
and
shr
xchg
int3
fs
xor
dec
push
shlb
mov
mov
out
push
jns
add
lods
sub
es
add
lret
add
sub
jmp
leave
pop
ficomps
sti
mov
dec
xchg
daa
sub
loop
ss
addr16
int
out
outsb
mov
adc
stc
or
cmpsb
mov
dec
test
inc
and
ss
popa
xor
out
data16
stos
cmpsl
or
pop
mov
aas
push
shrl
jnp
xchg
cmpsb
pop
sbb
push
dec
les
cmp
cmpsl
and
dec
mov
and
inc
or
cmp
hlt
sbb
popf
pop
hlt
mov
xor
push
icebp
mov
sub
push
pop
add
subb
aas
mov
and
pop
mov
js
ds
lret
bound
imul
jae
xchg
das
sub
xor
pop
scas
push
dec
popf
pop
inc
mov
pusha
add
mov
xor
loopne
fcmovne
inc
mov
mov
mov
shr
sti
xchg
pop
inc
push
and
rcl
ljmp
mov
pusha
mov
dec
pop
sub
inc
in
test
shlb
sub
add
sbb
mov
ja
test
and
into
push
test
inc
and
cmp
mov
iret
dec
lds
pop
scas
imul
sbb
mov
test
popa
fs
mov
ret
and
in
test
xchg
in
cmp
or
push
mov
iret
mov
cmp
mov
jl
aad
mov
out
into
loopne
push
sbb
xchg
push
jmp
scas
cmpsb
cwtl
and
clc
jp
jns
movsb
sahf
dec
adc
inc
imul
adc
pusha
mov
setl
es
rcrb
test
mov
repz
in
rcll
lock
adc
cwtl
insb
js
push
lods
ds
stc
or
xchg
shrl
jecxz
dec
cmp
std
cli
dec
xor
and
roll
fdivrl
or
ficomps
sarb
fiaddl
sub
or
sub
imul
icebp
inc
dec
es
fistl
or
loop
cli
subps
in
sbb
and
pop
rcl
mov
mov
and
fadd
and
inc
rcll
popa
and
xor
mov
add
mov
jns
mov
mov
sbbb
adc
pop
repz
pop
leave
mov
fwait
or
ret
push
dec
or
xor
adc
pusha
xor
xchg
jecxz
mov
pop
inc
icebp
jge
in
scas
out
mov
subl
test
push
add
jns
sbb
fsubp
xor
push
inc
sub
lret
inc
mov
mov
popa
fs
mov
daa
pop
es
sbb
cltd
dec
sti
in
xchg
test
cmp
fildll
mov
and
popa
ljmp
popf
sahf
stos
push
fldenv
shlb
mov
xor
dec
jnp
imul
pop
add
cwtl
pushf
and
into
inc
aas
add
cmpsb
insb
fwait
cmp
stc
clc
mov
mov
xchg
aad
mov
arpl
arpl
push
sbb
mov
iret
xor
bound
shl
or
lahf
pusha
jnp
sarl
ljmp
ret
sub
pop
dec
sbb
addr16
aas
lea
add
jl
imul
sti
xor
aam
fmull
adc
adc
test
int
sbb
add
fs
fildl
mov
rcl
xchg
mov
push
test
xorl
addr16
outsl
jne
cwtl
mov
mov
sub
aaa
pop
arpl
pop
test
mov
mov
xchg
sbb
jo
test
add
jmp
pop
mov
mov
sub
lcall
jb
lock
dec
cmpsb
loop
mov
out
addr16
out
add
pop
enter
sbb
add
gs
and
pop
popa
adc
into
test
ret
incb
loope
inc
sbb
mov
jg
xor
rcrl
ljmp
std
ktestb
push
xor
pop
add
adcb
stos
inc
lods
push
lret
call
stc
cmp
mov
or
testb
xlat
movhps
inc
lods
mov
outsl
inc
and
mov
dec
push
xor
lods
push
inc
xchg
jge
ret
je
xchg
pop
and
loopne
lods
xor
adc
push
rcrl
and
sarl
and
mov
mov
pop
inc
aas
pushf
outsb
adc
aas
inc
dec
adc
sbb
mov
pop
hlt
arpl
lock
shrl
fst
mov
jle
insb
xor
aaa
orl
or
mov
fs
jg
jg
sub
jecxz
pop
inc
imulb
nop
roll
cmp
cmp
rcrl
mov
mov
push
rcrl
mov
xchg
lahf
sub
push
imul
movsb
gs
push
xor
rclb
sbb
xchg
dec
lock
push
dec
out
adc
sbb
jns
push
addb
aaa
mov
stos
loopne
sub
xor
xor
push
subl
cmp
les
mov
push
stos
loop
or
sub
mov
xchg
test
xchg
sbb
adc
repz
negl
repnz
add
das
rcrl
in
pushf
pop
xor
jbe
mov
int3
xchg
push
repz
jg
fwait
ret
jge
inc
inc
shrl
mov
js
addr16
fimuls
in
js
adc
and
jle
mov
and
mov
test
xchg
lds
mov
or
cmp
inc
into
add
jno
jmp
out
jbe
aam
fs
push
mov
mov
adc
shll
mov
mov
add
imul
adc
imul
cltd
lret
mov
jecxz
sti
pop
xor
movsb
notb
xchg
cmp
push
xchg
ret
lock
lret
inc
sub
xor
aas
jle
mov
fiaddl
imul
add
sbb
insl
push
and
test
and
bound
js
xlat
jmp
icebp
scas
mov
icebp
andl
fs
nop
in
out
lret
inc
repz
enter
daa
sub
sub
call
lds
lahf
adc
les
into
mov
sbb
fisubrs
call
mov
cwtl
mov
mov
inc
movl
dec
aad
incb
out
mov
fdivp
xchg
cmc
jbe
int3
push
ret
stos
mov
jne
lret
test
cmpsl
xor
incl
mov
scas
dec
enter
xchg
test
aaa
push
xor
sub
shll
xor
andb
mov
pop
mov
cmpsl
imul
fdivrp
push
sbb
xchg
xchg
sub
pop
enter
xor
inc
sub
sub
loope
inc
cmc
and
cli
jae
popa
movsb
xchg
jecxz
cld
shll
stos
mov
adc
mov
hlt
mov
jg
iret
and
dec
lcall
fdivs
lock
and
scas
nop
hlt
pop
insb
lods
iret
cmp
mov
je
repz
imul
cmp
push
jns
mov
ds
sarl
and
ror
les
pop
sti
je
jp
lcall
adc
xor
bswap
repnz
ljmp
mov
out
daa
popa
stos
mov
lock
cmp
fmul
bound
pop
ret
jge
inc
std
fldcw
jl
push
imul
fwait
jecxz
insl
jbe
mov
call
xchg
ds
ljmp
xchg
inc
nop
mov
pop
cwtl
mov
sbb
adc
in
jbe
scas
mov
shl
mov
shrl
rclb
fwait
or
push
mov
pop
xor
stos
add
inc
sti
cld
mov
aam
mov
inc
cmp
xchg
jbe
push
icebp
mov
mov
xchg
pop
push
push
scas
pop
jae
sti
sti
or
inc
rcrb
addl
ss
push
ret
push
mov
xchg
pop
xor
repz
mov
push
xor
sub
leave
adc
and
dec
roll
push
fidivrs
lcall
sahf
enter
lahf
mov
pop
jnp
lahf
push
xor
fs
push
add
cmp
faddl
insl
and
mov
lods
jae
pushf
push
mov
adc
and
sbb
jo
and
mov
sub
fmul
push
ret
subb
jg
mov
imul
sar
movzbl
xorb
out
fldl
xchg
cmp
mov
pop
insl
inc
and
idivb
sub
pop
aad
jo
mov
and
leave
insl
or
mov
movsl
fs
cmp
push
mov
lods
mov
lret
orb
lods
dec
pop
inc
nop
mov
sbb
adc
and
cmp
sbb
decl
pop
push
cmp
adc
ss
arpl
call
adc
jecxz
cmp
mov
sub
aad
xchg
mov
std
dec
aad
insb
adc
push
add
xor
cmc
aad
aad
xlat
sbb
ss
xor
aaa
dec
sbb
push
fmul
mov
mov
lods
jns
int3
xchg
mov
mov
sbb
das
dec
mov
int
aam
push
mov
pop
jno
add
pop
pop
lods
aas
xchg
mov
mov
arpl
xorl
pop
out
xchg
or
in
std
cmp
daa
dec
cmc
inc
inc
adc
push
iret
lods
mov
lock
or
cmpl
cs
divl
sub
ds
mov
icebp
jne
popa
mov
cmc
sbb
arpl
cmpsb
push
int
cmp
das
addr16
xchg
insb
jmp
mov
lock
ljmp
adc
jb
rcll
mov
xor
imul
jb
fistl
dec
mov
add
rcrl
in
push
enter
stos
inc
inc
pop
jg
lods
loope
push
ja
mov
movsl
aad
call
dec
loopne
ss
mov
cld
jbe
js,pt
add
xchg
pop
imul
sub
mov
mov
push
and
jl
jbe
shl
mov
cwtl
mov
mov
out
stos
mov
adc
jno
adc
push
ds
shlb
jge
std
lock
test
out
push
into
pop
jmp
orl
test
scas
jle
ljmp
push
movl
and
mov
jbe
movsb
in
jbe
cmp
and
jle
add
daa
aas
stos
out
mov
dec
fists
out
jbe
or
sub
or
mov
sbb
jg
clc
jle
fiadds
sbb
inc
int
and
pop
aad
aam
js
ss
addl
lret
rol
inc
cmp
push
fbld
cmc
fidivl
pop
push
or
adc
lea
pop
xlat
repz
add
xor
mov
sbb
mov
les
aaa
mov
fwait
lahf
push
lods
adc
dec
push
or
sahf
in
mov
add
outsb
xchg
push
repnz
cwtl
outsb
in
pop
repnz
hlt
test
sbb
xor
inc
or
or
push
or
mov
jle
out
leave
std
jae
and
add
mov
mov
jno
lahf
push
inc
sbb
cmp
dec
xor
or
xor
xchg
out
mov
in
dec
fs
xorb
cmp
out
mov
xor
add
adc
repnz
inc
jno
mov
sbb
jg
das
mov
orl
xchg
outsl
leave
push
sbb
pop
aad
insb
gs
mov
ret
scas
xor
xchg
inc
repnz
mov
jp
js
cltd
sbb
rorl
lods
ljmp
sub
popa
ret
jl
mov
sub
ret
jmp
lock
iret
lods
dec
mov
out
jle
popa
lods
add
jg
xor
lret
aam
pop
cmp
in
dec
rclb
std
dec
pop
lods
pop
xchg
mov
or
jnp
insb
clc
mov
repnz
shlb
mov
les
out
xchg
andb
xchg
arpl
movsb
mov
lret
mov
jecxz
rcl
inc
jecxz
push
repnz
dec
ja
mov
cs
sbb
and
cli
or
mov
xchg
mov
idiv
mov
jecxz
or
inc
cwtl
out
and
lcall
mov
add
mov
std
xchg
aaa
mov
push
mov
xchg
push
cld
mov
jo
push
pop
push
jle
push
xor
or
loopne
and
cmp
jno
jmp
pop
flds
cld
out
push
es
out
add
adc
fldcw
insl
jmp
push
adc
into
in
pop
push
daa
call
cli
xchg
jmp
lcall
mov
mov
lock
xchg
rcrl
mov
push
pop
mov
mov
daa
mov
cmp
nop
mov
xor
ret
or
movsl
imul
ret
je
inc
int3
xchg
pop
dec
mov
sbb
rcrl
dec
sar
faddl
xchg
jg
cmp
lea
mov
jmp
fcmovne
push
xlat
pushf
jne
ret
insb
cmc
jl
test
add
dec
jae
mov
adc
shll
lea
push
addb
inc
cmp
fldenv
int
inc
push
xor
popa
jo
sti
xor
and
cmp
sbb
xchg
dec
leave
out
mov
sub
or
fisttps
mov
pop
and
pushf
jmp
lcall
cmp
push
das
test
fisttpll
out
xchg
outsb
in
pop
lods
or
inc
dec
into
sub
scas
sti
repnz
sub
xlat
mov
nop
add
cmp
into
sub
add
add
adc
addr16
xor
in
scas
jne
insb
adc
shr
cmpl
pushf
mov
sarl
mov
push
mov
imul
push
or
sahf
xor
mov
jecxz
push
korb
cmpsb
pop
scas
jno
mov
and
aam
adc
sbb
repnz
mov
and
xor
mov
add
lcall
fldcw
test
jb
fistpll
pop
cltd
fcmovnu
ds
fdiv
iret
pop
inc
cli
jb
jae
clc
cwtl
inc
lods
dec
dec
lods
popf
nop
shl
xchg
or
xor
mov
stos
or
jle
lret
repz
mov
ret
movsb
pop
imul
xor
mov
jecxz
cwtl
stc
rorb
sbb
mov
pop
mov
adc
adc
dec
xor
in
inc
sbb
jbe
add
sbb
xchg
inc
repz
or
jo
fisubrs
test
daa
out
push
inc
or
jle
into
push
xor
lods
cwtl
fcoms
arpl
mov
inc
in
loopne
addr16
in
fldenv
adc
ljmp
sub
arpl
imul
add
or
and
add
aam
movsl
lds
insl
sbb
daa
loope
adc
fisubs
add
shl
bound
sub
xor
into
mov
test
adc
imul
dec
add
jbe
sbb
xchg
out
sub
rorl
cmp
and
out
sti
gs
cmp
int3
mov
pop
xchg
bound
ja
adc
inc
xchg
or
decl
mov
lret
push
xchg
fwait
lret
adc
mov
sbb
mov
add
add
das
roll
mov
push
imul
fsubp
mov
and
shll
xor
imul
or
int
nop
cmp
pop
or
xchg
push
cmpsl
js
out
or
cwtl
mov
cmpl
aaa
dec
int
lret
sti
scas
xor
mov
xchg
popf
add
aaa
mov
in
pop
gs
lock
cmp
mov
in
mov
dec
sub
cmp
rol
out
arpl
xchg
jae
nop
out
jmp
fidivrl
fldt
call
xlat
cltd
push
rcr
cmp
mov
cmpsl
push
jbe
push
xchg
push
pop
arpl
rorb
jnp
dec
cmp
pminub
and
andnps
cmp
div
pop
mov
test
out
lahf
cmpsl
adc
cmpsl
push
adc
adc
push
xor
push
mov
xchg
pop
int
jle
or
mov
pop
adcb
pop
test
lcall
push
jmp
or
stos
jmp
jne
out
mov
xchg
jg
jns
lahf
inc
les
xchg
aaa
and
pop
ds
cs
cmc
inc
cmpsl
sbb
mov
in
out
mov
jns
and
cmp
push
xor
push
test
sub
dec
add
imul
jg
fsubl
scas
cmp
cmp
inc
jmp
cmp
inc
sub
mov
es
ds
xorl
pusha
jp
and
test
pop
mov
ror
push
dec
sub
and
lret
pop
pop
push
fisttps
dec
pop
cmc
sti
pop
pop
lahf
in
xchg
bound
sub
mov
push
sub
add
in
test
jge
cmp
movsl
leavew
jecxz
mov
pop
pop
dec
push
push
popf
scas
sahf
mov
pop
and
hlt
and
adc
repz
jl
jo
aaa
test
incb
and
out
shrl
mov
sahf
jbe
push
jecxz
loope
mov
inc
xchg
mov
fwait
add
aas
movsl
stos
mulb
pop
aaa
repz
ljmp
imulb
js
sbb
sub
lret
push
lds
jmp
push
add
sub
hlt
rcrl
ret
inc
lcall
cmpsl
sub
push
mov
or
lods
ss
lret
les
jg
cmp
jmp
mov
dec
clc
xor
xor
dec
xor
shl
mov
jmp
hlt
stos
push
adc
cwtl
rcrb
jno
ret
hlt
add
or
jl
ret
pop
cmc
movsb
sahf
aam
rclb
test
and
aaa
xor
sbb
push
push
xchg
dec
cmpsb
xor
mov
inc
fstps
sbb
fsubrl
mov
dec
cmpb
int
ss
mov
stc
stos
sbb
fwait
in
xchg
jns
xor
mov
mov
orb
xorl
pop
sbb
jecxz
repnz
adc
inc
loope
stc
dec
or
fwait
xchg
or
and
jns
jmp
cmp
mov
sub
xor
push
int
repz
pop
in
add
adc
cs
sub
mov
mov
subl
sbb
iret
push
mov
lret
cmp
pop
pop
outsl
push
popf
call
popa
test
jo
in
mov
add
dec
mov
pusha
cmp
jmp
mov
cltd
lahf
lcall
mov
faddl
das
das
or
lcall
fistpll
jb
icebp
sbbb
ja
mov
or
mov
leave
lahf
sub
out
out
adc
stos
out
ret
pop
insl
cmp
out
movsb
outsb
lcall
scas
outsb
fimuls
jb
jo
fcomi
mov
push
xchg
jecxz
ret
je
cmc
loop
push
mov
fiadds
std
pop
std
lods
inc
push
in
jge
inc
xchg
pop
jge
mov
mov
icebp
sub
mov
insb
cmp
inc
lods
push
in
inc
cli
xchg
jl
pop
add
sbb
outsl
mov
enter
loop
jb
cwtl
outsb
pop
das
dec
subb
lret
popa
add
ret
mov
jge
cmovno
stos
xchg
mov
aas
and
sbb
add
mov
cmp
insl
dec
rolb
int
jge
mov
fldcw
aad
inc
xchg
scas
aas
enter
icebp
ljmp
jo
jne
xchg
push
movsb
inc
inc
fsubrl
into
out
jnp
or
test
mov
data16
aad
cltd
push
cs
test
int
mul
cltd
push
lods
mov
jae
adc
pop
outsl
fsubrs
mov
sbb
push
and
add
lea
fstpl
pusha
mov
js
xor
andb
jle
push
shl
jmp
in
fistps
in
push
imul
pop
or
and
pop
pushf
mov
push
add
and
jmp
pop
mov
jno
mov
mov
pop
mov
lods
cmpsl
daa
cmp
stos
in
sbbb
lret
aad
cmp
insl
imul
lods
sbb
dec
ret
push
dec
pop
ds
rorb
fdiv
sbb
sbb
test
push
adc
fcoms
inc
ret
xchg
loop
lods
mov
in
fucomi
fs
cmp
xchg
shll
filds
sbb
jne
mov
icebp
add
push
jno
dec
dec
xor
ficomps
fsubrs
sahf
lahf
add
mov
push
push
lret
jl
test
jle
mov
jmp
ficomps
ror
into
fsubrs
roll
mov
das
insl
addr16
cmpl
in
in
loope
test
stos
mov
ret
xchg
loop
dec
movsb
push
imul
add
xchg
rorb
leave
push
mov
mov
ds
hlt
adc
cmp
stc
in
jb
xor
je
loope
cmc
push
add
dec
adc
addr16
jae
xchg
cmp
cmp
sar
or
fprem1
sahf
lock
dec
mov
fisubrs
ftst
and
sub
jb
dec
push
hlt
adcb
or
xchg
cltd
repnz
add
push
in
into
push
mov
ja
cld
fisttpll
cmp
adc
test
or
xor
out
fsubl
sbb
aaa
pop
mov
shlb
cld
stos
sbb
nop
sbb
pop
cli
faddl
aas
dec
xor
lahf
mov
popf
sub
mov
mov
xor
and
daa
mov
icebp
push
repz
aas
dec
add
popa
inc
and
hlt
add
sti
add
outsb
cmpsl
popl
jge
leave
push
imull
or
jne
out
cmp
imul
xor
lret
pusha
and
xchg
lds
aad
cmp
movb
xchg
fisttpll
jmp
pushf
mov
inc
out
xor
enter
ss
lock
out
clc
fisttps
xor
mov
xchg
fidivs
sub
hlt
pushf
fisubrl
and
ss
lods
test
inc
orl
or
or
mov
jmp
jae
mov
rcrl
mov
leave
or
pop
enter
rcl
inc
push
test
lds
das
push
in
das
scas
inc
push
insl
xchg
mov
xor
rol
or
ret
mov
inc
xchg
cli
pop
xor
int
push
cmpsb
enter
sub
mov
jmp
rorl
andl
adc
cmp
jo
push
add
call
sbb
loope
les
cmp
inc
mov
xor
sub
mov
xchg
decb
push
sub
sub
mov
mov
xchg
inc
addb
pushf
mov
mov
mov
jnp
and
das
imul
pushf
jl
jb
xor
push
fsubl
and
add
lahf
je
xchg
aas
stos
lock
lock
sbb
cmc
sbb
inc
ja
lock
mov
jnp
aad
mov
stc
lret
call
inc
mov
jnp
cmpsl
andl
xchg
sbb
inc
dec
push
dec
and
dec
xchg
js
int3
mov
add
mov
repnz
sbb
mov
pop
jg
loope
xchg
adc
xchg
les
out
mov
add
push
jl
into
ret
je
in
push
test
push
mov
sar
movsb
pop
lret
pop
test
mov
inc
push
pop
dec
pop
cmp
add
rorb
outsl
mov
js
test
jne
cli
xchg
imul
cwtl
and
mov
pop
mov
and
mov
inc
add
sbb
daa
jmp
xchg
in
xchg
dec
sti
test
hlt
xchg
mov
test
int
xlat
leave
movsb
add
cltd
negl
push
popf
insl
or
mull
jp
imul
cmc
test
mov
lcall
leave
std
aad
out
or
inc
pop
xchg
test
mov
jp
mov
jne
scas
push
xchg
push
push
in
cwtl
and
in
jnp
push
pop
arpl
sbbb
test
push
inc
mov
or
test
stos
pop
mov
pop
fistps
or
test
ret
push
sarb
xchg
ja
mov
jb
je
xlat
or
push
les
mov
je
enter
ja
lds
call
clc
mov
jne
jmp
sahf
jne
add
mov
pop
xor
sti
jne
sqrtps
pop
xor
sti
pop
adc
dec
cmpsl
mov
and
into
push
stc
icebp
hlt
xchg
fwait
add
mov
js
test
clc
mov
xor
jo
mov
das
cwtl
and
aam
mov
mov
hlt
icebp
and
xor
mov
int3
cltd
add
scas
add
outsb
and
sbb
fidivrs
mov
mov
pop
sarb
mov
or
loop
lret
loope
adc
cs
lea
push
add
ret
stos
jbe
cmp
test
scas
int3
insb
mov
shrb
addr16
push
jne
and
mov
dec
and
fbstp
inc
push
imul
pop
sbb
add
outsl
inc
xchg
test
pop
cmp
jb
test
fists
adc
pop
mov
and
add
vpcmpeqb
and
jbe
in
cmp
gs
repz
in
cmpsl
pop
pop
es
mov
or
gs
stos
mov
pusha
popf
push
out
add
mov
mov
and
out
int3
push
inc
jno
push
xor
jae
xchg
imul
mov
ljmp
sar
sbb
sahf
imul
fs
and
aam
test
mov
jo
mov
mov
cli
and
addr16
out
inc
fisttpl
mov
je
sbb
or
pop
daa
cmc
jmp
dec
loopne
mov
stos
sub
sub
sub
dec
jg
mov
repz
fcom
add
mov
cltd
adc
sub
mov
out
or
inc
mov
arpl
lret
jp
in
or
movsb
jg
lods
call
or
test
stc
aam
shll
insb
leave
aam
sub
adc
pop
rolb
test
jnp
hlt
cld
pushf
popf
loop
pop
in
notb
int
shl
dec
sbb
cmp
cltd
sub
sub
cwtl
inc
int3
into
hlt
lods
xchg
mov
jge
cltd
lret
pop
xor
xor
ljmp
xor
paddusb
addb
cld
dec
aaa
xchg
xchg
sub
xlat
clc
out
jle
jne
ror
dec
sbb
mov
lret
in
jle
int3
sarb
push
pop
xor
jl
inc
int
aas
imul
ds
test
push
jl
dec
fsubl
mov
stos
insl
cmpsb
lods
call
arpl
pop
packssdw
pop
lods
sbb
jmp
lcall
inc
dec
push
push
fidivrl
jl
test
rclb
cmp
jb
mov
scas
mov
xlat
adc
ret
out
mov
jecxz
cs
lods
xor
mov
int
xchg
arpl
mov
enter
jmp
mov
or
sbb
push
mov
sbb
push
test
insl
into
pop
ja
xchg
sbb
dec
out
loopne
fs
mov
mov
add
test
or
jnp
xor
sub
adc
or
cwtl
inc
fistl
add
adc
pop
push
cld
rorl
push
bound
jno
push
mov
in
and
sbb
rcl
ss
and
loop
xchg
cmp
cmp
out
pushf
fildll
cmpsl
lahf
scas
iret
xchg
fmuls
push
sub
mov
or
cmpsl
daa
int3
sbb
xchg
mov
and
fnsave
mov
loopne
push
pop
imul
test
lea
adc
scas
xor
fimuls
aad
push
ficompl
ds
mov
shr
sbb
jae
fiadds
fistpl
testl
xor
mov
ficoms
insb
addb
lcall
xchg
pusha
icebp
insb
push
outsl
inc
leave
rcll
lds
mov
loop
adc
out
stos
in
dec
mov
mov
push
jo
sahf
les
daa
test
popa
jp
pop
xor
xlat
jbe
leave
outsl
add
je
xchg
push
fs
push
iret
test
mov
mov
push
mov
mov
cli
aaa
sbb
push
push
jno
cvtps2pd
pop
movsb
movsb
or
loopne
and
push
xchg
mov
outsl
mov
or
testl
inc
jmp
jmp
ret
push
dec
inc
dec
movsb
pop
inc
sbb
scas
cmp
int
insb
cmc
and
jb
orb
mov
int
mov
push
popa
iret
dec
xchg
sub
pushf
or
cwtl
lods
adc
es
push
sub
fstpl
fdivl
cwtl
shlb
pop
inc
push
pop
pop
les
pop
mov
dec
fsubrs
pop
in
bound
mov
rcrb
sti
sbb
mov
std
inc
fmuls
das
loopne
cmp
push
movsb
and
sahf
lock
dec
ss
and
les
pop
cmpsb
mov
dec
mov
push
sahf
sub
cmc
repz
leave
mov
cwtl
lret
imul
or
fstpl
dec
iret
xor
stc
inc
shlb
rorl
outsb
fistpl
add
imul
arpl
stc
mov
mov
and
mov
push
or
xchg
sub
jns
add
cwtl
jnp
insb
add
push
and
clc
insl
inc
ret
mov
and
add
xor
add
xchg
inc
sar
sbb
mov
test
push
jo
cwtl
lcall
adc
add
test
loop
ficomps
cmp
or
cmp
mov
and
mov
mov
push
and
inc
jmp
xchg
test
xchg
xor
stos
mov
add
cltd
fsub
mov
scas
in
fwait
xchg
lahf
push
push
icebp
sub
lock
das
cmc
mov
ja
sub
call
xor
sub
sti
dec
repnz
fildll
cmp
les
shll
mov
movsl
clc
adc
xchg
adc
rcr
jnp
jecxz
je
out
jb
jnp
adc
hlt
dec
lock
xchg
in
cmp
add
cwtl
insl
adc
mov
es
daa
scas
hlt
shrl
jp
pop
ror
lcall
mov
push
stos
or
mov
lds
sbb
adc
ret
mov
push
lods
ret
xchg
inc
and
sub
pop
insb
cwtl
enter
lahf
jge
lds
pop
jbe
orl
add
inc
mov
nop
jl
jge
shlb
xchg
adc
sub
xor
js
mov
cmp
xchg
enter
fucomi
addl
cmp
sub
adc
xchg
pop
data16
cli
xor
adc
and
int
dec
ja
mov
mov
and
addr16
stc
ds
sub
add
mov
into
and
and
sub
jle
fists
or
pusha
aam
xchg
xor
fstl
jns
xchg
jnp
sbb
mov
fistps
xchg
mov
xchg
jle
aas
icebp
dec
mov
loope
stos
ds
sbb
stos
and
mov
mov
mov
xor
dec
outsl
jg
inc
shll
clc
test
cmp
js
push
js
and
jo
scas
andl
or
jne
xchg
rclb
lret
loop
fwait
xor
loope
cmp
data16
and
jl
cmc
or
dec
mov
leave
lret
mov
cmpsb
sub
jno
mov
add
sbb
sbb
adc
sbb
repz
decb
fcmovnb
das
push
mov
or
test
outsl
sahf
or
cmp
xchg
xor
jge
sbb
in
negb
gs
xchg
imul
adc
das
cltd
and
movsl
in
jno
cmp
pop
and
cmp
xadd
xchg
lret
in
lret
scas
push
mov
pop
push
outsb
inc
jg
aas
pop
push
insb
xchg
sub
es
outsb
mov
repz
mov
insl
sub
movsb
adc
test
push
jge
loope
ret
mov
ret
outsl
xor
lret
mov
ja
push
add
jmp
cmp
jno
jg
xor
pushf
push
mov
rolb
das
xchg
xchg
push
out
adc
xor
dec
sub
sub
adc
pop
inc
sub
xchg
data16
xchg
xor
mov
lods
scas
lahf
mov
mov
shr
mov
xchg
stos
xor
lods
mov
andb
pop
add
je
dec
xchg
cs
jnp
jne
push
inc
mov
inc
mov
and
jl
xor
fs
and
sbb
cmp
outsl
filds
and
xor
xchg
scas
dec
in
jmp
mov
inc
pop
xchg
aad
cltd
mov
and
nop
nop
dec
push
loop
mull
mov
mov
push
mov
lret
icebp
push
in
repnz
repnz
sbb
inc
inc
nop
cmpsb
in
enter
jmp
mov
push
in
mov
rolb
sahf
ret
pop
push
iret
out
sbb
or
push
rcl
addl
dec
sahf
inc
jne
adc
and
je
inc
pushf
fidivrl
imul
outsb
in
fisubrs
dec
ljmp
in
out
mov
outsl
sahf
cmp
mov
jg
sub
lods
adc
fisttpll
mov
ret
clc
and
push
imul
les
stos
hlt
cmp
pop
pop
pop
loopne
pop
and
dec
outsl
incb
scas
popf
or
test
imul
aas
xchg
inc
ret
ljmp
movsb
mov
fsubrp
repz
or
sub
add
push
jns
push
jnp
pop
stos
in
bound
and
test
andl
data16
roll
testb
sub
idivl
lds
xor
stc
stos
add
cmpsl
add
sbb
push
xchg
int
mov
inc
dec
aas
fs
lods
cmp
pop
dec
loope
les
shll
addr16
or
fdiv
daa
jno
das
test
cmp
mov
xlat
lcall
clc
dec
jecxz
pop
sub
hlt
ljmp
push
les
imul
pop
fildl
mov
dec
ja
mov
std
cmp
sub
sbb
gs
pop
clc
ret
lret
movsl
clc
dec
iret
call
sub
fisubs
xor
and
stos
jne
adc
into
ret
mov
jnp
push
or
rcr
add
pop
sbb
jno
lock
dec
dec
cmpsb
aad
mov
rcll
fdiv
lcall
hlt
adc
lock
mov
mov
jns
fisubl
sub
push
inc
xor
adc
xor
dec
jl
inc
mov
lock
or
push
jne
fs
aam
sub
fcmove
fsubl
pop
scas
scas
cmp
push
mov
cmpl
jecxz
jnp
sahf
jns
in
adc
adcl
lock
jp
dec
xor
nop
sti
jp
stos
leave
int
sahf
push
decl
add
inc
sbb
enter
jnp
cmp
adc
ret
mov
out
pop
cmpb
sub
insl
sbbl
cmp
push
pop
and
in
push
adc
push
addb
xchg
in
cs
dec
dec
jns
pusha
mov
popa
sbb
fsubrl
incl
faddp
jb
inc
cwtl
xchg
loopne
mov
orl
jecxz
sub
outsb
out
loopne
and
cli
in
call
pushf
push
pop
add
cmp
insl
lods
sbb
add
push
xchg
jg
ret
leave
inc
lret
push
sub
test
jg
mov
and
push
imull
in
cmp
imul
mov
inc
cmp
adc
les
cli
das
imul
addr16
push
jne
roll
aad
xchg
data16
push
cmc
jo
add
push
inc
movsb
xchg
imul
jne
mov
sub
pop
sahf
sbbb
xchg
mov
cmpsl
shrb
imulb
shrl
stos
inc
and
sbb
andb
mov
decl
cmp
call
or
dec
push
popf
cwtl
and
jnp
mov
cmp
loopne
mov
and
add
cmp
fdivr
pop
int
lret
jmp
pop
mov
out
loope
out
mov
push
add
xor
aad
xchg
cmp
jmp
insl
roll
insb
outsb
and
cmc
jbe
cli
xor
daa
iret
cmp
and
into
cmp
mov
sbb
jae,pt
mov
bound
lret
movsb
test
xchg
loopne
pop
dec
xor
cltd
repnz
iret
bound
fidivrl
int3
inc
pop
sub
pop
cwtl
sbb
jne
out
jne
mov
xor
sub
pop
jle
xchg
lahf
pushf
pop
mov
sub
push
mov
cli
jne
fisttpll
fsubrp
jbe
jmp
mov
movsl
mov
int
out
sub
sub
sbb
push
loop
push
inc
jp
cmp
inc
dec
push
sbb
sub
sbb
pusha
insl
test
in
fistps
adc
test
sbb
jp
mov
das
adc
out
mov
sbb
lock
mov
pop
and
cld
int3
and
les
push
aas
cmpsb
sarb
pop
xchg
aaa
sbb
fldenv
xor
mov
push
sti
cld
dec
mov
sti
and
mov
hlt
andl
incb
scas
test
sbb
pop
sbb
xchg
push
xchg
xchg
mov
mov
imul
nop
addl
pop
test
sbbb
or
sbb
inc
xchg
out
inc
jl
insl
xor
push
arpl
pop
push
push
mov
pop
call
shlb
rcrb
pushf
sbb
mov
repz
faddl
inc
pushl
add
ret
shlb
hlt
fsubrl
or
ss
cltd
jge
sub
iret
icebp
sti
les
pop
xchg
dec
mov
adcl
mov
stos
test
jle
pop
in
pop
push
aam
lahf
mov
lcall
pusha
loopne
js
paddw
scas
jbe
cmp
and
ds
je
jae
enter
pop
in
int3
push
ljmp
scas
mov
sarb
loop
orl
cltd
mov
or
push
jl
shlb
jp
mov
xlat
xchg
jle
inc
jne
jno
std
lret
lock
mov
jp
cmpsb
loope
rcrb
fcomps
popf
xchg
popf
fistl
imul
movsb
mov
inc
pusha
dec
inc
push
rclb
push
sbb
sbb
testb
ret
hlt
mov
mov
cwtl
stos
daa
dec
push
testb
or
mov
jp
negl
jmp
fs
lret
test
push
sar
jecxz
pop
cld
and
xchg
xchg
pushf
mov
pop
mov
mov
js
outsl
lret
mov
adc
jae
les
or
xchg
push
mov
mov
lcall
stc
jle
sub
jae
mov
mov
test
cmovns
out
out
fildl
xor
test
add
leave
nop
add
mov
xchg
mov
in
orb
push
xchg
and
xor
addr16
cmp
and
sub
or
decb
fcompl
stos
cmp
pushf
sbb
in
xchg
pop
push
cmc
lds
push
icebp
enter
pop
outsl
fdivp
mov
jb
push
mov
sbb
aas
push
cmp
xchg
in
pop
mov
and
add
lret
jge
lock
pop
dec
pop
test
icebp
xor
or
xchg
lea
loop
adc
pop
inc
test
daa
or
cmp
idivb
pushf
xchg
rorb
cmc
pop
cmp
adc
jno
cmp
mov
pop
lret
cwtl
fwait
pusha
mov
xchg
mov
gs
pop
lret
ss
arpl
pop
xor
push
pop
insl
imul
xchg
sahf
adc
popf
and
test
add
mov
or
add
cli
daa
gs
push
xor
push
repz
add
popf
mov
pop
pop
aaa
sub
lcall
out
push
lock
adc
mov
inc
jecxz
enter
imul
daa
xor
inc
daa
cs
push
jae
pop
add
jb
push
stos
enter
shl
in
ret
out
pop
inc
hlt
xchg
cld
pop
fdiv
pop
cmp
call
std
cmpsb
aaa
orb
andps
das
pop
cmp
aaa
call
in
cmp
int3
sbb
push
mov
adc
jns
push
fs
cs
sub
xor
dec
lock
xchg
cmp
sub
jl
or
mov
dec
jmp
adc
leave
call
fwait
popf
int3
dec
mov
test
fcoms
out
ds
cwtl
jo
ljmp
xor
popf
std
rol
inc
mov
rcrl
int
rcl
xor
xor
sub
movsb
cmpsb
cmp
cltd
fnstsw
sbb
outsb
adc
inc
fwait
mov
cmp
je
adc
sbb
fwait
sub
or
lds
mov
sahf
popf
loop
addr16
pop
in
in
add
gs
pop
in
sub
mov
add
jo
mov
dec
pop
cmp
sub
mov
xchg
adc
mov
jge
cmovbe
loopne
mov
cmc
call
mov
mov
and
in
xchg
fwait
outsb
lods
cld
push
gs
jp
int
jbe
push
push
push
xchg
cld
mov
int3
push
in
outsl
js
popl
cmc
mov
faddl
pushf
sub
jne
mov
cltd
push
arpl
xor
lods
sbb
clc
test
mov
xchg
jmp
inc
push
xlat
jns
push
dec
cmpsb
call
jge
sbb
sbb
repz
data16
pop
push
arpl
mov
and
push
pop
aaa
xor
mov
ja
gs
push
testb
inc
enter
sub
mov
mov
out
push
subb
pop
int3
ljmp
push
inc
mov
push
and
fwait
test
mov
fdivrl
stos
fistps
mov
mov
mov
fldl
xchg
fisttpl
ja
dec
push
fld
pop
enter
ja
insb
jecxz
jl
movsb
lret
gs
add
cmp
pop
movsb
cld
jmp
stos
dec
push
jmp
mov
dec
jp
xchg
sbb
and
loop
add
and
push
add
inc
into
mov
in
int
add
pop
jne
shll
sbb
dec
push
ret
ret
dec
or
shll
lea
push
in
rcrl
pop
rcll
popf
lods
inc
into
xchg
inc
mov
mov
fstps
popaw
in
aas
push
push
insb
jns
fisttps
jno
es
xchg
jecxz
sti
push
int3
aaa
movsl
jne
hlt
les
xchg
imul
lret
sub
inc
xor
mov
loopne
and
mov
or
hlt
mov
cwtl
ret
cltd
lods
lret
shlb
cmp
ret
imul
ljmp
cmp
repz
lods
out
ss
sub
sbb
mov
movsl
cmp
inc
lcall
jge
in
jo
mov
and
ret
inc
into
fidivl
jnp
jg
outsb
insb
negl
movsb
cmpsb
jb
pop
lahf
mov
in
sti
pushf
sbb
les
pop
mov
mov
push
loopne
loop
repz
jp
enter
jge
mov
mov
jmp
test
xchg
aad
push
jl
movsl
push
xor
jg
pop
jl
loope
sbb
cmp
mov
inc
les
pop
data16
popf
xor
cli
pop
inc
out
imul
dec
aad
mov
ja
inc
fdecstp
arpl
popf
cmpsl
addb
cwtl
inc
cli
mov
and
mov
movsl
fcmovnu
cmp
mov
pushf
sar
movsb
ds
xchg
push
xchg
data16
in
mov
scas
push
fadd
das
push
sbb
arpl
pop
test
andb
lcall
pop
cmc
outsl
cmpsb
dec
loope
cmp
xor
cmp
mov
mov
pop
or
jno
pop
push
jae
mov
pop
and
test
in
adc
sbb
xor
adc
loope
mov
mov
in
sbb
clc
mov
inc
ljmp
adc
xchg
loope
shrb
mov
lret
out
cmp
dec
lcall
imul
lret
imul
es
xor
mov
push
sbb
mov
cmp
fistpl
jbe
das
mov
push
test
cwtl
loopne
outsb
push
xor
mov
cmp
mov
or
shl
ret
nop
aaa
fistps
adc
cwtl
stc
sub
in
pop
and
cmp
test
adc
pop
jnp
aam
cltd
lock
or
xchg
jecxz
add
jp
sbb
cmp
sti
mov
mov
stc
lds
push
out
nop
cmp
dec
inc
or
js
call
imul
popa
mov
repz
sub
jbe
inc
dec
data16
jg
and
inc
jbe
add
mov
mov
das
sub
and
jne
sahf
in
xor
adc
leave
into
aas
hlt
xchg
daa
mov
dec
subl
pushf
or
pop
add
rcr
pop
push
pop
mov
xchg
sbb
xor
push
cmp
mov
xchg
aam
mov
push
and
pop
mov
aad
pop
xchg
test
mov
jns
out
jo
pop
pop
stos
mov
out
xor
int
add
add
roll
xor
mov
cmpsb
cld
push
mov
jno
mov
lcall
push
push
imul
into
mov
data16
rclb
imul
sub
jle
mov
addb
cmp
stos
test
insb
xchg
mov
xchg
sbb
insl
ds
das
das
sub
lods
js
xor
adc
push
adc
mov
int3
rcrl
fsubrs
pop
and
xchg
jge
pusha
fldt
dec
sub
add
in
loope
sub
test
and
int
into
je
mov
inc
dec
sar
xchg
dec
rolb
sbb
mov
cltd
sbb
test
add
add
xchg
pop
mov
xor
movsl
add
fs
jge
sub
leave
inc
es
push
mov
push
mov
mov
fsubrl
sbb
mov
cmp
or
mov
sub
popf
stc
pop
mov
pushf
jmp
push
mov
pop
lods
fs
js
dec
jo
jne
inc
iret
push
sub
ficoms
cld
or
sub
add
call
jl
in
test
xorl
insl
adc
push
push
cmc
jnp
jecxz
outsl
sahf
rcr
ss
and
or
lds
fisttps
sbb
outsl
add
test
test
je
enter
pop
pushf
imul
sub
mov
sbb
pop
stos
insb
icebp
xor
adcl
jae
repz
sbb
icebp
decl
repnz
fistps
xlat
es
ss
lea
add
lahf
not
mov
inc
and
int
in
add
nop
or
cmpsb
mov
pop
push
xchg
and
inc
cld
xchg
in
xlat
push
add
and
cmp
in
ss
popf
jnp
sar
aad
mov
aam
pop
outsb
sahf
lea
jle
out
mov
in
inc
adc
lret
aas
adc
push
or
push
loop
mov
es
repnz
in
pop
imul
mov
repnz
adc
test
jae
and
aas
stos
adc
push
or
cmp
jle
push
xchg
dec
xor
mov
xchg
in
jmp
ret
add
lea
ror
adc
mov
xor
gs
jne
das
sub
fimuls
or
nop
inc
test
lahf
testl
push
jns
cmc
lods
in
and
inc
xchg
push
adc
lea
out
mov
sbb
iret
loop
pusha
mov
adc
aad
jg
repnz
sub
pop
dec
cld
in
jne
cmpsb
push
in
mov
test
out
mov
jl
test
gs
mov
sub
insb
movsl
push
mov
mov
or
xchg
xchg
stos
je
mov
pusha
dec
loopne
ja
nop
fcomp
insl
sub
sub
arpl
enter
jne
adc
insl
dec
arpl
xor
xchg
fidivrl
push
fisttpll
add
sub
mov
mov
sbb
in
mov
cwtl
mov
jg
xor
inc
aad
das
push
mov
inc
outsb
out
mov
xchg
jmp
dec
ror
mov
ret
sub
pushf
mov
mov
arpl
fdivrl
outsl
jne
aam
push
xchg
js
outsl
xchg
inc
mov
incb
adc
cmp
hlt
add
test
jmp
clc
mov
jmp
mov
pop
cld
push
shl
pop
jae
inc
or
mov
sbb
ljmp
psubusb
movsb
xchg
cmc
push
cmp
and
in
lahf
jecxz
fstpl
or
pop
push
inc
adc
xlat
inc
cmp
pop
or
push
cmp
xor
xchg
jmp
ljmp
add
sub
lea
insl
adc
jl
subb
dec
or
outsl
sbb
aaa
or
rcrl
or
ret
jns
int
dec
pop
mov
jbe
cli
lret
pushf
enter
and
jb
lahf
movsl
sub
aam
dec
mov
mov
mov
rol
pushf
push
loopne
nop
lcall
or
push
push
ret
add
push
bound
mov
mov
xlat
add
mov
mov
adc
mov
or
adc
jne
dec
and
out
adc
loopne
xor
inc
add
mov
pushf
loop
adc
sub
xchg
sub
fdivr
xchg
mov
fs
movsl
inc
mov
out
sbbb
adc
mov
lods
sub
scas
inc
scas
xchg
dec
pushf
fidivs
ret
mov
mov
cmp
push
in
xor
sub
hlt
push
push
scas
dec
mov
stos
xchg
test
inc
jecxz
dec
addl
add
mov
push
push
dec
mov
sbb
iret
lahf
loopne
jg
cmc
pop
push
sub
std
cltd
lods
loope
pop
jbe
subl
jp
xchg
add
lds
mov
push
notb
fcompl
gs
imul
xchg
in
clc
sbb
andl
xchg
dec
sbb
imul
or
out
sti
mov
cltd
int
or
repz
sub
jecxz
add
mov
inc
roll
sahf
insl
aas
jo
add
lods
push
int
xchg
js
dec
mov
psubb
cltd
test
fnsave
fucomi
mov
push
jno
dec
fldl
cmp
into
cltd
xchg
lods
add
adc
pop
cs
push
jecxz
mov
rcll
adc
add
sbbl
in
arpl
mov
ret
mov
sub
in
negl
jmp
arpl
adc
fs
popa
dec
xor
lods
and
dec
xchg
add
out
neg
and
jne
js,pt
sbb
dec
cli
std
push
std
jge
adc
rorl
sbb
mov
jae
mov
inc
stos
je
mov
add
mov
mov
xchg
das
in
xor
xor
cmp
sub
int3
das
rclb
lds
ja
dec
or
mov
bound
dec
in
inc
jle
jb
int3
enter
into
stos
sbb
je
insl
enter
leave
pop
lahf
adc
movl
repnz
xchg
push
pop
push
add
or
jb
lea
arpl
test
fbld
push
popa
in
loope
push
push
data16
inc
mov
jmp
jge
out
insb
roll
add
sub
imul
push
fdivrp
pop
lea
lods
in
push
addr16
adc
cmp
mov
cmp
mov
scas
adcl
lds
data16
cmp
aad
movsb
ficomps
stos
in
mov
lcall
in
adc
daa
ret
loope
push
aas
mov
and
cmp
pop
repz
cmp
inc
into
fisubl
pop
jg
lahf
jl,pt
fmull
ljmp
fstl
inc
pushf
sbb
decb
jp
testl
xor
testl
adc
pop
les
inc
inc
loope
mov
mov
xor
cltd
jl
clc
add
cmpsb
loopne
push
pop
cmp
sbb
or
push
loop
out
daa
jns
xchg
cwtl
or
mov
xchg
jbe
pushf
sub
xchg
ss
sub
xor
jno
push
push
out
stos
sti
mov
xlat
lahf
or
fs
icebp
sub
imul
add
test
pop
cld
push
cmpsb
popa
jno
ret
imul
dec
ds
lock
or
cmp
jne
fldcw
dec
or
mov
jb
jnp
sub
mov
movsl
hlt
hlt
in
jae
bound
ret
hlt
or
mov
mov
fsubl
cmc
push
andb
cli
cmp
inc
and
mov
push
push
add
pushw
dec
sub
push
pusha
data16
int3
testl
sub
push
jge
faddl
clc
out
in
and
lcall
aad
test
jbe
inc
loope
icebp
xlat
mov
arpl
jp
out
in
adc
je
out
les
xchg
inc
dec
daa
push
jb
cmp
shrl
mov
mov
daa
mov
popf
xor
and
mov
fldcw
push
sti
mov
push
cmpsb
fisubs
inc
addb
push
jg
popf
sub
gs
push
xchg
fcmovnb
inc
insb
jg
aaa
xchg
scas
js
push
mulb
ss
xchg
sahf
cmp
mov
xchg
das
fidivs
xor
outsl
int
cmp
fmull
push
rorb
xchg
adc
movsl
dec
dec
dec
sub
jne
ja
and
push
cmp
loope
dec
xchg
mov
inc
test
push
xor
enter
popa
cmpsl
sbb
and
jp
pop
push
mov
pop
and
cli
push
mov
inc
pop
inc
lea
in
test
push
or
bsf
inc
cmc
cltd
dec
nop
jb
ds
push
push
outsb
cwtl
repnz
mov
imul
mov
jne
dec
xor
cmp
push
inc
sbb
out
inc
jb
sub
cmp
aam
lahf
or
enter
inc
jl
xchg
sbb
ret
xorl
ljmp
cs
cmpsl
pushf
push
jge
sub
xchg
xor
mov
add
add
fs
loope
push
cmp
inc
jno
adc
push
mov
fnstenv
es
jge
rorl
cmp
pop
push
cmp
xor
aam
push
shr
jnp
xchg
je
jle
loopne
jp
jg
jp
mov
pop
push
sub
xchg
mov
fimuls
stc
outsb
adc
ds
std
or
jno
stos
mov
and
cmpsl
xchg
xchg
pop
mov
cwtl
or
mov
push
mov
inc
add
jo
fstl
test
dec
jbe
adc
out
dec
arpl
inc
stc
leave
repnz
addr16
jecxz
adc
or
insb
jae
out
adc
test
mov
sbb
scas
push
pop
pop
fcmovne
repz
xchg
jo
dec
jp
ljmp
xor
outsl
cmpl
cmp
pop
and
shrl
add
push
mov
test
xor
jp
sub
outsb
inc
pop
mov
jl
adc
pop
mov
jno
andl
sbb
test
rolb
test
sub
and
fisttpll
aad
mov
addr16
pop
pop
leave
lret
call
lret
sub
cmp
push
nop
mov
dec
mov
insl
adc
loope
jl
mov
nop
call
jo
notb
idivl
andl
jmp
repnz
movl
jge
push
pop
ret
jae
and
cs
dec
add
mov
in
pop
xchg
mov
adcb
mov
cmc
inc
std
fucom
hlt
sub
stos
scas
adc
fndisi(8087
xor
mov
inc
cmpl
sub
push
out
push
mov
sbb
and
push
test
or
dec
ret
mov
bnd
sbbb
xchg
popa
notb
stc
pop
mov
lds
subl
out
gs
sub
mov
jecxz
cld
ljmp
movsl
push
cmp
adc
shrl
xchg
inc
mov
pusha
test
jp
mov
in
sbb
cmp
sti
add
popf
inc
jae
push
mov
mov
cmp
fucom
sub
call
aas
jg
or
jb
pop
or
and
or
jmp
mov
lods
mov
imul
insb
js
mov
in
fldt
pusha
mov
sbb
icebp
mov
les
cmp
xor
inc
xor
outsl
mov
in
adc
dec
fildll
mov
cmpl
inc
jle
out
cld
bsf
mov
push
add
mov
cmpsl
dec
mov
out
cmc
lret
adc
insl
mov
push
and
jle
sub
cmp
sbb
dec
xchg
lret
ret
cli
pusha
fwait
icebp
roll
bound
movsl
aad
popf
mov
adc
mov
rcl
cmp
test
pusha
daa
mov
xchg
cmp
sub
push
inc
lahf
movsb
mov
lahf
dec
sahf
pop
push
cmpsb
js
pop
ds
in
pop
dec
lret
nop
hlt
outsl
push
and
les
inc
in
das
and
fdivrs
xor
insb
xor
inc
addl
xor
pop
xchg
js
cli
lcall
inc
push
or
lcall
data16
ljmp
or
dec
cmp
mov
mov
xchg
lcall
jecxz
stos
in
lahf
jns
mov
scas
add
stc
in
aam
adc
sbbb
sub
fsub
cmp
pop
movsl
pop
cmp
and
pop
test
call
out
cmp
outsb
imul
jl
icebp
ljmp
adc
out
pop
push
test
test
dec
xor
xor
mov
sub
adc
mov
inc
jae
jbe
pop
stos
stos
popf
jmp
mov
mull
pop
or
repz
push
xchg
adc
jp
arpl
cli
dec
xor
bnd
mov
cmp
dec
xchg
push
xlat
into
push
sbb
push
or
mov
jo
jns
and
arpl
push
test
call
fnstenv
daa
cmp
mov
insb
inc
hlt
add
and
cmp
movsb
cld
pop
jge
adc
jae
ror
fucomip
sbb
or
ficomps
jecxz
and
mov
loop
loopne
jl
cld
mov
cmpsl
push
fs
lods
mov
mov
mov
mov
cltd
fiaddl
outsl
mov
fsubrs
rolb
inc
xchg
inc
or
in
mov
insl
cmp
push
aas
sbb
and
mov
insl
xchg
xchg
mov
jns,pt
jl
push
cmp
nop
sbb
xchg
sub
fistps
jp
mov
ftst
xchg
pop
arpl
in
mov
fmuls
mulb
les
push
enter
and
aaa
push
xchg
adc
lods
pop
jle
pop
inc
push
push
sbb
je
mov
and
pop
dec
push
pop
out
cwtl
pop
das
xchg
or
nop
aaa
fsubs
loop
aas
aad
pop
xor
xor
fildl
or
mov
adc
pusha
or
dec
adc
pop
jae
test
frstor
movsl
dec
aaa
in
popa
sub
loopne
ret
dec
sub
icebp
popa
popa
add
cmp
mov
test
jo
pop
in
jecxz
mov
add
push
cmp
sahf
push
pop
xlat
repz
scas
or
xchg
in
xchg
cmp
sub
xor
mov
sbb
pop
xchg
or
mov
scas
jp
shr
dec
movb
subb
test
out
scas
std
mov
or
dec
imul
sbb
into
fcmovnu
xor
shlb
insl
into
inc
testb
sub
cmp
mov
pop
sarl
fwait
dec
jg
and
or
or
rcrb
mov
cmp
sub
lret
fldt
pop
imul
repz
faddl
pop
cwtl
ret
movl
cmp
lcall
shl
mov
pop
call
bound
push
mov
fldenv
push
ret
in
pop
sub
or
jno
mov
mov
xchg
movsl
dec
cmp
aam
and
and
xchg
jnp
inc
pop
pop
out
ss
xchg
vshufps
sbb
inc
push
add
bound
mov
les
pusha
mov
or
in
fnstenv
rcrl
fnstenv
mov
icebp
sbb
fxch
inc
stos
push
repz
pop
adc
jb
out
pop
jae
dec
lcall
aas
sub
sub
test
adc
cld
stc
mov
pusha
mov
fldcw
mov
add
mov
insb
pop
or
outsw
pop
jmp
scas
rcrb
int
inc
lods
nop
mov
pop
or
movsl
data16
into
movsl
lret
dec
enter
adcl
jnp
repnz
aaa
ljmp
pop
mov
mov
sub
add
fidivl
push
lret
inc
mov
push
js
mov
pop
mov
mov
add
mov
inc
aam
xchg
adc
mov
ds
inc
mov
or
insl
or
stos
in
push
vaddsubpd
push
insb
testl
std
out
push
in
shr
popf
rol
fs
pop
fsubrl
xchg
push
inc
sbb
sbb
les
gs
pop
sbb
out
pop
push
add
dec
repnz
fbstp
mov
mov
mov
lods
lock
subl
sbb
ss
js
int
inc
cmp
sbb
fdivs
dec
fists
fsubrs
mull
jno
dec
sbb
cs
dec
pop
int
std
xchg
or
aaa
adc
data16
mov
loope
xor
dec
lret
ljmp
xlat
xor
fisubs
pop
int3
shrb
and
jne
fistps
adcl
rcr
or
pop
pop
jne
xchg
xor
adc
scas
xchg
lods
rorl
pop
fistps
sbb
mov
mov
fwait
and
xchg
mov
sbb
imull
pop
cmp
push
and
mov
pop
outsb
pushf
fists
inc
mov
dec
add
pop
ljmp
mov
push
jg
aaa
cmp
xchg
ficoml
add
sub
dec
test
ljmp
mov
test
sub
in
aam
lcall
push
out
out
out
call
jmp
pushf
and
iret
push
fdivs
push
rorb
add
and
test
call
je
test
mov
stc
push
pmaddwd
sbb
nop
addr16
bnd
iret
push
mov
out
push
je
loop
pop
out
mov
push
pusha
mov
addr16
xlat
xchg
mov
adc
imul
push
rcrl
dec
and
jg
ss
adc
cltd
movsb
mov
mov
mov
flds
inc
addr16
stos
sub
scas
add
in
sub
mov
or
cltd
std
movsl
es
lret
dec
and
add
xchg
pop
xchg
xlat
sbb
sbb
push
ss
push
out
cmc
in
mov
loop
or
dec
push
jae
pop
xlat
cmp
das
jbe
in
sub
adc
sub
cwtl
fldl
leave
pop
pusha
in
adcb
xor
lcall
sub
jge
insl
inc
mov
pop
add
dec
lcall
mov
jmp
pop
hlt
mov
adc
outsl
sub
imul
pop
pop
xor
fidivrs
in
call
arpl
dec
xorl
dec
into
leave
xchg
sbb
aas
or
mov
pop
mov
fadd
sub
dec
rolb
jbe
loopne
add
data16
outsl
divl
xchg
lret
dec
sub
push
sahf
repz
cltd
jp
imul
cmpsl
sarl
mov
jg
mov
mov
jae
mov
ljmp
xor
inc
push
sub
repz
pop
mov
sub
sub
cmc
inc
dec
adc
sub
daa
repz
push
mov
push
lret
add
insb
rcrl
xchg
imul
cmp
adc
outsb
movsb
adc
mov
cmp
cmc
add
jns
test
aam
mov
cmpsb
sbb
xchg
cmpsl
adc
pop
fs
or
xchg
mov
lahf
push
movsb
jno
push
loope
xchg
data16
mov
out
repnz
mov
fistps
sbb
add
in
mov
inc
adc
xor
mov
popa
xchg
ret
lods
and
mov
repz
mov
stos
in
scas
jmp
fsin
cmpl
inc
aas
or
sarb
in
mov
fs
push
push
mov
xchg
pop
add
rcll
cmp
insl
sub
xor
inc
mov
pushf
data16
shrl
pop
mov
lahf
loopne
jns
clc
in
mov
clc
cmc
in
mov
loopne
inc
sub
mov
cmp
jae
in
ds
sub
sti
cmpsl
hlt
out
jle
ja
add
mov
arpl
mov
roll
hlt
imul
cmp
enter
andps
movsl
and
lret
mov
imul
inc
in
sub
mov
jnp
cltd
cmc
dec
aaa
daa
cltd
mov
dec
jnp
les
dec
or
das
push
jg
lret
pop
mov
mov
xlat
sbb
dec
out
dec
mov
cmp
cmc
xlat
ret
loop
mov
sub
fdivs
in
cmp
pop
mov
or
outsb
ds
sub
xor
dec
add
xchg
pop
icebp
shll
test
lahf
adc
cmp
lock
push
fnstsw
mov
push
adc
cltd
push
testl
lahf
daa
pop
xchg
out
or
cmp
add
fwait
mov
cltd
mov
clc
stos
or
fsubrs
mov
dec
cmpsb
rcll
rcrb
lcall
or
std
sub
jg
push
je
inc
dec
add
stos
pop
or
or
cld
jge
mov
jg
in
insl
mov
shrb
pop
mov
xor
jb
fldenv
rcll
jle
sarb
mov
jne
mov
jno
inc
stos
xor
jge
pop
cmc
stos
xor
fadds
insl
fwait
mov
jle
jle
mov
jp
dec
push
in
out
sbb
iret
jp
pop
pop
mov
cltd
push
pop
daa
mov
fsts
and
add
sahf
cmp
and
and
cltd
mov
cli
lcall
sbb
lret
pop
jbe
ret
into
icebp
mov
adc
push
and
fdivr
push
mov
inc
add
flds
fistpll
xor
rcl
pushf
ds
popa
imul
mov
hlt
add
lods
adc
lods
fcoms
sti
adc
adc
sub
or
adc
inc
cmpsb
mov
stos
sub
fcomip
inc
sbbb
mov
std
shl
jg
and
inc
add
rcll
pop
jnp
addb
and
mov
xor
hlt
out
rcl
mov
dec
xchg
mov
sti
add
mulb
push
lret
and
sub
lock
xchg
pop
mov
xchg
mov
dec
xchg
pop
pop
jns
sbb
test
cmp
enter
sub
adc
sbb
sub
out
add
xchg
ret
addr16
mov
jns
sti
mov
popf
rol
dec
shrl
cli
hlt
xchg
or
int3
mov
cmp
cmp
imul
fyl2x
xchg
sahf
mov
fsubrl
stos
push
xchg
lds
pmulhuw
test
mov
enter
fwait
mov
jmp
movsb
xchg
fs
xor
jnp
jne
xlat
push
and
and
es
jg
sti
stc
sbbb
fcomps
add
shll
sarl
loop
das
rcll
dec
pop
popa
mov
roll
mov
mov
lcall
pop
fcomps
push
add
std
les
loop
inc
mov
and
or
mov
jge
add
xchg
lret
dec
dec
inc
dec
mov
cmp
pop
xchg
arpl
imul
mov
mov
hlt
das
cmc
inc
pusha
mov
rol
sbb
fadd
jmp
pop
popf
mov
xor
mov
pop
xor
xor
aaa
jo
dec
push
mov
aaa
flds
jno
arpl
shlb
push
lahf
xchg
mov
adc
popf
push
cs
ss
ja
fcmovnbe
or
xchg
cmp
inc
xchg
cltd
insl
je
mov
fmuls
mov
cld
jle
aas
adc
jne
out
push
rcrb
jmp
rcrb
jb
imul
js
insl
repz
int
std
stc
lds
push
sbb
ret
xchg
ret
mov
dec
xor
pop
into
xor
sub
add
jnp
faddl
mov
mov
pop
xchg
jno
inc
push
jne
jnp
push
mov
inc
test
jp,pn
nop
pop
lret
xor
dec
ret
mov
rcrl
fmulp
dec
jb
jnp
sbb
inc
scas
loopne
mov
xchg
in
and
hlt
mov
fsubp
jns
pusha
js
lcall
add
xchg
or
mov
xorl
fiadds
loopne
lret
call
jns
push
pop
pop
mov
or
scas
test
inc
cmp
cmpsb
xchg
pop
test
lcall
and
rorb
mov
sbb
cltd
sub
pop
mov
cmc
imul
lods
inc
aam
xchg
bound
rcrb
mov
inc
sbb
iret
push
lods
loope
call
jecxz
movsl
sub
mov
and
mov
or
sbb
mov
pusha
decb
sbb
mov
sti
popa
mov
mov
out
cwtl
add
int3
cmp
dec
dec
push
stc
cmp
dec
clc
cltd
repz
popf
popf
clc
or
movsb
mov
in
sub
aas
in
shlb
jns
lcall
std
pushf
pop
mov
daa
das
jp
jno
sbb
lret
jns
and
xchg
clc
repnz
mov
pushf
sahf
mov
test
lcall
repnz
sub
pop
out
mov
dec
cwtl
sub
ja
leave
mov
imul
dec
mov
rorb
pusha
pop
popw
mov
xor
pop
jge
fcomps
sbb
and
ljmp
adc
iret
sbb
jo
stc
cmpsb
jmp
shr
jecxz
and
ret
adc
push
int3
pop
mov
out
sub
in
mov
insb
pop
iret
aaa
in
dec
popf
mov
std
outsb
pusha
clc
lret
mov
pop
dec
mov
nop
out
rol
mov
push
push
pop
or
cmp
fldenv
pop
in
mov
pop
xor
loope
bound
sarl
fs
cmpb
insl
mov
stc
push
gs
cltd
lahf
adc
jp
mulb
cmpsl
jbe
movsl
push
ja
nop
xchg
int
mov
mov
dec
mov
xchg
hlt
mov
jmp
loop
and
mov
repz
or
inc
sbb
fcomip
out
fdivrs
inc
xor
mov
stos
push
inc
rcrb
inc
bound
enter
into
aaa
insb
fsubrp
xchg
sahf
inc
or
fiaddl
jo
out
xchg
int
mov
dec
add
cmp
js
push
mov
insb
das
push
aam
mov
mull
adc
mov
cmp
imul
sbb
jge
sbb
movsb
pop
movaps
mov
mov
jmp
pop
cmp
xchg
jg
test
out
cld
loope
sbbb
pop
mov
add
dec
mov
inc
adc
out
and
push
cli
mov
test
shll
lcall
in
imul
leave
subl
mov
push
movsl
movb
movsl
pop
bound
clc
addr16
inc
mov
adc
sbb
sbbl
int3
inc
push
cmp
inc
pusha
lods
adc
jl
add
int
pop
mov
add
testl
mov
push
xchg
or
cwtl
mov
ret
rorb
push
sahf
mov
push
fwait
mov
rcl
fisubl
mov
lret
dec
add
lods
cs
push
sub
pop
sub
push
push
push
xchg
div
sub
mov
and
ret
inc
lea
pop
pop
fnsave
cmp
pop
xor
sub
xchg
fdiv
lret
push
ljmp
sbb
cld
movsl
enter
cmp
test
mov
sbb
pusha
loope
xchg
imul
mov
aaa
mov
fisttps
and
icebp
jno
xor
sub
das
nop
dec
dec
out
pushf
xor
mov
and
sub
push
leave
add
cs
mov
jnp
outsl
mov
in
les
aas
cld
xor
add
jecxz
xor
in
sbb
mov
dec
movsl
ret
std
push
push
push
or
decb
fists
inc
out
mov
leave
sub
aas
outsl
jno
jge
or
or
aam
lahf
pop
cmpsl
sub
gs
and
jns
xor
push
cmp
pop
jge
out
ja
jno
mov
mov
mov
jae
fwait
mov
test
icebp
jmp
lods
imul
test
cmp
dec
ret
and
fadds
fwait
jb
xorl
add
mov
pop
cld
subl
mov
xchg
dec
sub
inc
aam
jg
les
fidivrs
pextrw
mov
cmpsb
int
sbb
and
xlat
filds
add
hlt
gs
sub
iret
push
push
cli
adc
pop
xlat
shll
push
ret
jmp
movsb
sti
leave
out
adc
mov
mov
or
stos
and
int3
jno
push
out
push
ret
xchg
xchg
loopne
push
dec
sti
test
jecxz
nop
stc
movsl
ljmp
add
stos
cli
mov
pop
mov
scas
lods
sbb
pushf
or
xchg
cwtl
inc
push
lods
add
int3
mov
push
stos
imul
pop
stos
sbb
pusha
jp
add
jmp
cld
mov
mov
movsl
shlb
push
lcall
int3
mov
mov
sbb
mov
test
cld
dec
jp
ret
bound
mov
sti
adc
mov
xchg
nop
dec
insb
xchg
out
cwtl
mov
adc
cwtl
or
ja
xor
mov
out
aad
inc
and
iret
sahf
cmpsb
repnz
add
xor
jl
int
jno
mov
in
adc
iret
cltd
repz
xor
in
pop
inc
sub
loopne
xor
out
es
ret
pop
jmp
adc
jmp
dec
test
lret
aaa
out
addr16
xor
add
adc
jecxz
loopne
adc
aad
popf
push
daa
dec
adc
and
add
dec
adc
cli
stos
jmp
sarl
loope
jmp
leave
shll
jge
scas
xchg
dec
pop
push
sbb
mov
out
adc
lea
adc
outsl
dec
dec
loop
mov
in
ret
jge
orl
data16
mov
inc
aad
in
mov
cld
ret
dec
or
cmp
ret
cmp
sbb
jns
push
pushf
test
lret
dec
fnstcw
add
xchg
mov
xor
xor
jns
mov
sbb
in
mov
mov
daa
cmp
pushf
ja
sub
test
or
mov
cwtl
into
rorl
fidivs
dec
lea
repz
xlat
lcall
aam
sahf
out
mov
sub
sub
js
insb
testb
out
cmp
mov
adc
in
in
dec
lret
int
xor
outsl
sub
ficompl
push
pop
dec
dec
dec
jno
or
lret
mull
mov
and
clc
ror
in
pusha
adc
subb
cmpsl
cmp
pop
push
jle
orl
or
adc
in
ja
popf
cmp
dec
mov
dec
jmp
push
lret
es
imulb
popf
mov
sub
xor
movsb
lret
xor
cs
xchg
imul
pop
fs
scas
and
test
or
cmpsl
lods
inc
push
mov
push
std
in
daa
and
cmp
test
pop
fwait
cmp
cwtl
das
fistps
ljmp
mov
xlat
rorb
jae
mov
inc
pushf
mov
int3
out
int
push
inc
pop
pop
in
or
jns
jge
cltd
imul
xchg
data16
daa
push
jg
or
mov
vpmacsswd
fcom
aas
dec
sbb
sbb
fisttps
call
inc
push
jmp
jns
aaa
adc
outsb
rorb
inc
cmp
cmp
xor
pop
test
jno
movsb
sub
and
adc
aam
pop
push
inc
pushf
mov
mov
pop
rorl
xchg
dec
jo
jnp
mov
xor
lret
lea
add
idivb
xchg
gs
nop
mov
aam
mov
inc
add
xchg
push
add
nop
xchg
test
mov
jmp
cmp
or
mov
sub
ja
iret
testb
or
mov
mov
leave
xchg
mov
push
mov
mov
inc
sahf
pop
push
dec
out
jecxz
out
loopne
adc
fdivs
mov
leave
int3
sbb
ss
rep
dec
xor
stos
cmp
ss
nop
push
adc
popf
adc
push
rcll
int
xchg
fwait
inc
pop
push
xlat
push
xchg
int
jmp
sbb
mov
push
fisttpl
fstpl
addr16
cmp
jmp
xor
jmp
dec
adc
pop
out
dec
pop
push
hlt
imul
out
imul
sub
out
xchg
mov
mov
push
addr16
ds
adc
es
lea
mov
insl
movsb
xor
movb
xchg
dec
fcmovnb
sub
sti
ret
pop
add
inc
jl
sbbl
jecxz
jecxz
daa
dec
xchg
mov
add
inc
addr16
pop
test
incb
pusha
jp
ds
jno
icebp
dec
fidivrs
es
pop
popf
fldt
pushf
fs
inc
cmp
xchg
jl
xchg
ret
or
xchg
dec
fistps
cs
ljmp
sub
int
aaa
subl
push
adc
ret
mov
cmp
ljmp
sbb
adc
xchg
dec
jmp
mov
jbe
test
or
jo
add
cld
lcall
jle
stc
mov
aam
adc
xorb
mov
rcr
jecxz
iret
rorl
fwait
lods
gs
and
fidivs
pop
and
adc
loopne
pop
inc
dec
mov
push
mov
jno
mov
loopne
in
mov
or
loop
test
xor
sti
mov
hlt
cmp
int3
and
push
add
add
mov
mov
cmc
fidivl
pop
sbb
punpckhbw
aam
mov
mov
cmc
add
test
clc
push
adc
outsl
sbb
mulb
mov
xchg
push
cmp
sub
adc
add
andl
xor
sub
sbb
icebp
xor
xchg
out
test
fwait
pop
and
ds
xchg
xchg
or
dec
add
cmp
gs
fwait
pop
sbb
and
push
inc
not
shlb
in
xor
shl
icebp
imulb
xor
jb
in
adc
pusha
push
arpl
adc
push
ljmp
xchg
cmpb
fs
jge
bound
pop
jmp
subb
jns
icebp
sub
lea
pop
fsubs
rcrl
je
dec
mov
inc
imul
add
sbbb
mov
das
adc
test
je
dec
lcall
mov
mov
sahf
cmc
insb
adc
outsb
adc
ss
inc
pop
push
pusha
push
xchg
and
sahf
jge
sahf
sarl
xor
lock
sbb
outsl
test
mov
sub
fisttps
test
mov
decb
stos
rolb
dec
ljmp
and
movb
repz
pop
fnstcw
scas
lret
lods
fimuls
insb
fstpt
mov
cli
out
mov
andb
fisttps
mov
std
ss
je
divl
fildl
cmp
mov
and
insl
js
es
int
sbbb
mov
adc
or
rcll
sub
std
sub
dec
mov
loop
xlat
jo
push
mov
les
pop
ds
addr16
stos
mov
out
xchg
sbb
pop
pop
aam
xchg
mov
std
sahf
add
and
dec
pop
mov
jmp
ret
inc
notl
sub
test
je
adc
push
xchg
in
rcr
std
mov
movsl
pop
xor
pusha
xchg
sub
push
sbb
jge
repz
xchg
pop
hlt
xchg
pushl
sub
ss
sub
xor
insb
mov
xor
cwtl
in
pop
jnp
imul
idivl
jp
adc
push
pop
test
jns
fstl
cmpsl
mov
mov
and
in
adc
imul
ds
or
jge
fisttps
sbb
push
xor
push
push
arpl
xchg
out
xor
icebp
insb
fldt
cmp
scas
out
or
out
rclb
pop
loop
clc
sub
mov
mov
mov
rorb
or
daa
shl
push
jmp
mov
rclb
loop
rcrl
imul
and
cli
mov
push
loop
ss
add
or
lock
xor
sbb
mov
or
orl
insl
xchg
inc
jg
adc
jb
pop
push
cltd
nop
stos
shlb
js
out
stos
in
test
popa
pop
daa
lock
jne
lcall
mov
mov
lds
mov
insb
nop
call
hlt
sarb
lahf
push
cmp
push
ljmp
mov
mov
mov
push
xchg
stos
je
stos
mov
scas
dec
in
sahf
test
je
das
xor
and
jae
jno
cmp
sub
mov
and
xchg
or
and
sbb
adc
mov
push
or
jl
in
xchg
dec
add
shll
or
shll
movsb
adcl
cmp
pop
enter
bound
xlat
test
jnp
and
dec
scas
daa
and
push
fsts
idivb
dec
int
inc
pop
dec
scas
add
push
nop
fnstcw
es
push
lods
sub
and
adc
daa
push
pop
dec
pushf
rclb
in
or
xor
pushf
insl
mov
cmp
out
cmpsl
in
aam
cmc
pop
in
xchg
add
faddp
mov
mov
aas
cmp
mov
cs
push
xchg
js
add
mov
scas
and
mov
adc
dec
jl
cmp
xor
test
cld
mov
fldenv
lods
mov
insl
ljmp
icebp
dec
sbb
add
into
stos
out
push
stos
cmp
ss
in
and
jbe
mov
sub
jae
inc
jb
push
stc
enter
gs
cmp
xchg
movsl
inc
cld
in
test
dec
mov
cmp
dec
push
pop
cmc
jg
or
addr16
or
push
rol
pop
jp
into
jo
pop
ret
xor
xorl
fcoms
shll
jmp
bound
jg
mov
hlt
testb
dec
mov
aad
adc
ds
pop
xor
xor
xchg
lret
pusha
imul
or
aaa
push
cmpsl
or
int
sub
jge
xchg
imul
fwait
aam
inc
add
stos
cli
popa
repnz
cmpsl
and
push
sub
xor
stos
loop
add
dec
mov
mov
sbb
inc
and
add
int
scas
cmc
ffree
push
test
xchg
sub
pop
inc
je
stc
gs
jae
or
ret
push
sub
jne
stos
mov
pushf
lcall
or
pop
mov
and
cmp
movsb
lock
jns
aas
or
icebp
or
sbb
addr16
xchg
cwtl
xchg
into
test
or
popf
cld
repnz
or
push
cmc
jae
inc
sbb
push
pop
cwtl
mov
aad
popa
xor
xchg
es
popf
mov
xor
lods
mov
test
inc
cmp
lret
xorb
inc
sbbb
xor
cmpsb
subl
insb
jecxz
into
mov
lcall
push
pop
mov
movsb
cli
fisubrs
pop
cpuid
cwtl
lret
adc
lds
or
lds
daa
jno
pop
aam
fstl
inc
xchg
push
xchg
mov
cmc
pusha
push
mov
movsb
ret
push
nop
enter
and
jg
ja
push
mov
sub
push
mov
xchg
int
lods
xor
loop
jge
push
in
and
sbb
jb
fistl
add
cld
int
pop
pusha
add
add
xor
mov
mov
sub
rolb
pop
push
repnz
cmp
inc
loope
add
pop
fwait
pop
fprem
fdivs
lods
sbb
xor
push
push
jp
mov
pop
pop
cmp
xchg
jo
out
mov
mov
jecxz
mov
icebp
ja
mov
xchg
aas
mov
inc
mov
rcll
dec
in
adc
mov
pushf
out
mov
dec
int3
sbb
xchg
sbb
repz
in
mov
lea
in
ja
out
in
stc
clc
fcoms
test
push
cmp
cli
in
mov
movsl
mov
xchg
imul
inc
rorb
adc
cmp
int3
inc
jg
push
mov
fidivl
scas
mov
sti
sub
mov
leave
jmp
dec
adc
adc
repz
in
dec
lock
sbb
scas
xor
inc
idivb
add
imul
sub
sti
cmp
add
sub
mov
fldcw
pop
gs
mov
in
adc
dec
jg
out
shlb
out
xchg
jl
mov
pop
lcall
mov
insb
sarl
int
or
and
jmp
push
sarl
lds
and
dec
or
fcmovnu
insl
push
push
inc
in
std
mov
push
gs
push
mov
inc
and
fisttps
out
cmp
lock
mull
sbb
insb
pop
movsb
mov
lods
aad
adc
jne
mov
lock
out
cmp
clc
adc
hlt
data16
pop
imul
mov
jb
loope
out
cmc
xlat
lret
out
push
lret
push
sahf
dec
and
adc
inc
and
mov
or
adc
cmp
inc
in
xor
pop
inc
mov
jae
or
bound
sub
dec
cmpsb
out
aad
jo
adc
or
pop
outsb
out
mov
fildl
inc
inc
movsb
out
lods
dec
adc
push
mov
inc
lret
hlt
sbb
inc
ret
ljmp
loope
mov
mov
xor
das
mov
aaa
lods
dec
mov
dec
mov
dec
sub
mov
push
fwait
outsl
sbb
push
out
push
lret
stos
loope
add
and
dec
ret
int3
in
popf
inc
ljmp
dec
stc
xchg
les
jmp
sub
ss
adc
push
push
lret
pop
sarl
lahf
add
mov
js
popf
enter
arpl
adc
sub
cmpsb
sahf
push
into
je
adc
xchg
ret
sbb
repz
cwtl
stos
add
testl
sbbl
mov
push
and
cs
fwait
push
cmpsb
mov
mov
ljmp
movb
das
daa
push
adc
jo
adcb
push
dec
inc
mov
mov
adcl
or
mov
dec
xor
imul
xchg
cmp
daa
dec
gs
sahf
xchg
push
mov
les
test
das
lds
in
dec
repnz
or
dec
dec
xchg
inc
xor
jbe
scas
in
fstps
cmp
cmp
push
dec
sbb
mov
or
and
inc
dec
imul
mov
pop
xchg
je
punpckhdq
lods
rcrb
pop
ljmp
test
mov
pop
mov
mov
movsb
clc
and
sub
shll
cmp
rcl
xchg
jle
cmp
pop
repnz
out
pop
fs
imul
addb
mov
es
cmc
mov
lea
out
pop
jl
inc
xchg
bound
mov
push
ja
mov
pop
push
mov
cmp
push
loopne
popf
std
jno
fnstsw
sub
push
test
or
frstor
or
data16
add
out
rcl
dec
arpl
pop
xchg
andl
jge
push
daa
daa
xchg
jp
push
push
pop
popf
int
movsl
xor
xor
in
push
xchg
inc
pop
insb
push
aam
mov
xchg
mov
das
mov
ljmp
sbb
inc
cmpsl
outsl
pop
cmp
pusha
adc
cwtl
and
mov
fdivrs
xchg
ss
mov
mov
push
fucomip
pop
cmpb
incl
and
xchg
cmp
add
mov
xchg
dec
or
mov
ror
and
inc
sbb
mov
push
cmp
add
mov
mov
mov
xchg
dec
inc
adc
inc
xchg
pop
stc
scas
test
xchg
rclb
ss
test
scas
xchg
push
xor
pop
jae
fistpl
jno
push
test
call
push
cmc
xor
inc
fnsave
xchg
or
pusha
mov
movsl
das
hlt
add
mov
jmp
adc
adcl
sub
mov
push
push
pop
aam
inc
jmp
popf
daa
das
std
jmp
pop
and
outsl
subb
icebp
cmpsb
jge
pop
inc
jno
and
movsb
jg
sbb
lcall
cwtl
nop
mov
pusha
out
fwait
mov
in
xor
out
sub
pushfw
jle
lcall
ror
js
mov
mov
adc
insl
scas
inc
cmp
xor
cltd
push
mov
and
dec
xchg
lcall
and
and
cmp
add
lds
jae
inc
mov
jp
push
arpl
adc
and
cwtl
test
fldl2e
fldenv
jb
stos
xor
xor
sub
mov
test
sbb
clc
cmpb
fildll
ljmp
xchg
outsl
mov
sub
mov
lret
and
mov
inc
out
mov
dec
inc
jne
mov
bswap
rcll
addr16
cmp
adc
stc
add
sbb
xchg
pushf
pop
push
sti
pop
xor
push
jbe
adc
jg
xchg
or
push
cltd
aaa
mov
sub
pop
add
inc
notl
setb
movsb
and
fsubrs
xchg
clc
push
stc
jno
push
dec
enter
int
cli
add
mov
add
rorb
xchg
adc
mov
in
cs
fs
ljmp
xor
sub
dec
out
shlb
outsl
sbb
in
mov
mov
stc
xor
sub
lret
push
in
aam
fimuls
mov
add
cli
in
add
dec
mov
cmp
inc
mov
stos
bound
mov
pop
lea
scas
bound
arpl
into
lock
aas
arpl
mov
xlat
pop
inc
and
sub
out
xor
push
incw
dec
imul
jp
adc
dec
adc
cmp
lahf
inc
sbb
cmp
mov
mov
adc
mov
sub
popf
or
aaa
and
out
inc
lcall
dec
hlt
jnp
gs
or
notl
mov
xchg
add
push
std
push
sbb
mov
fcom
sti
scas
lret
lret
pushf
jnp
cmpl
fimull
push
inc
out
sbb
psrad
dec
pop
movswl
mov
cmp
jae
loopne
ja
scas
inc
dec
and
shlb
jae
cmpb
mov
lds
lcall
jo
jmp
inc
fistl
ret
lcall
cli
push
out
je
pop
stos
push
call
mov
or
in
adc
sub
sbb
cmpsl
clc
into
xor
dec
outsl
jge
lods
lock
cmp
das
sub
push
ja
xchg
aaa
and
gs
fidivs
add
adc
in
les
sbb
and
loop
fsubrs
pop
pop
ss
imul
repz
xor
xor
test
dec
loopne
fisubrs
ja
inc
mov
cld
or
inc
xchg
sub
xchg
aam
or
dec
xchg
xor
outsb
cmp
imul
lret
cmp
enter
sbb
lret
idivb
xor
lret
mov
cmc
sbb
xor
out
rorb
scas
mov
mov
xorl
sahf
icebp
loopne
or
out
outsb
push
bswap
rclb
fwait
adc
xchg
ret
dec
pop
mov
mov
fidivrl
or
arpl
mov
aas
movsb
add
sbb
addr16
rcrb
test
push
mov
les
cs
lcall
lock
add
cmc
mov
and
mov
inc
xor
insb
dec
and
mov
shl
push
and
in
jmp
movsl
sbb
test
addb
mov
gs
inc
sbb
iret
cmp
in
cmc
cmpsl
out
test
cs
adc
sbb
add
xor
leave
clc
lock
sti
roll
adc
push
pop
js
push
aam
scas
and
pushf
mov
mov
jae
cmp
add
xchg
clc
dec
mov
std
int
dec
dec
add
mov
mov
fidivrs
sub
out
inc
and
fstpl
mov
push
scas
ret
bound
outsl
push
push
pop
pushaw
adc
sub
dec
pop
xor
jno
xchg
cmp
in
and
insb
ljmp
mov
sbb
jno
xor
movsb
adcl
in
sbb
jmp
pusha
rcrb
ret
iret
xchg
xchg
inc
fwait
sbb
insb
mov
lods
mov
and
mov
mov
loope
sub
shrb
adc
jmp
sub
subb
inc
sub
pop
mov
push
lds
insl
push
movsb
xchg
jno
aas
fiaddl
mov
push
mov
or
and
mov
xor
or
outsb
clc
leave
mov
sbb
popf
and
shlb
scas
inc
test
xor
sub
jecxz
pop
jp
hlt
dec
push
pop
imul
fdivrl
ret
call
and
mov
outsl
outsb
push
xor
jb
adc
inc
cmp
mov
jg
adc
int3
orl
and
xor
xchg
mov
jmp
cmp
dec
rorl
sub
xchg
mov
jp
fbstp
cmp
cmp
adc
sub
or
outsl
cmp
jle
xor
fs
mov
sub
test
xchg
ss
push
mov
clc
popa
push
lcall
cmp
mov
cmovle
mov
xor
xchg
dec
dec
adc
shlb
dec
out
or
aad
or
shrb
dec
mov
fisttpl
xor
jnp
push
lret
xchg
push
fcomp
mov
inc
in
adcb
mov
jb
pop
pop
lock
daa
xlat
mov
cmpsb
xor
in
sub
jnp
cmp
pushf
mov
repz
insl
clc
or
fldl
dec
in
loop
mov
xor
cmp
fcomps
adc
pop
lret
jns
imul
fildl
imul
fstps
test
test
outsb
add
push
mov
push
mov
push
and
adcl
cmp
and
and
sbb
pusha
rorb
mov
pop
dec
std
out
add
ret
fcmovbe
push
repz
xchg
imul
pop
cmp
push
push
xchg
lods
jecxz
push
nop
test
imul
subb
cld
push
sub
xor
mov
shrl
mov
add
imul
test
jmp
out
loopne
jnp
push
cmp
repz
add
popa
xlat
sti
dec
mov
xchg
xchg
add
push
cmp
mov
cmpsl
lods
pop
sbbl
pop
stos
lods
mov
pop
test
aaa
loopne
shlb
adc
cvtps2pd
mov
fistps
adc
jae
cld
dec
adc
ljmp
jmp
sti
push
das
dec
subb
cmp
arpl
lock
scas
cmp
cmpxchg
jle
ret
fwait
imul
mov
scas
test
das
out
test
imul
outsb
idiv
out
or
lds
pushl
xor
mov
mov
cmp
mov
data16
in
fwait
sub
mov
dec
cmp
sub
inc
fbld
pop
inc
jae
pop
mov
movsb
shlb
fsubrs
js
xchg
jg
stos
sbb
add
mov
popa
loope
inc
out
xor
shl
cmpsl
xchg
lods
xchg
xchg
rcrb
test
mov
push
popa
xlat
pop
adc
sbb
add
mov
xor
mov
jl
lret
lret
sahf
outsl
inc
inc
sub
mov
addl
cwtl
lahf
sbb
pop
sbb
popa
xchg
push
out
shrl
mov
scas
sub
clc
cwtl
lcall
mov
repz
pushf
xor
cs
imul
or
sub
das
push
ss
gs
xorb
sbb
mov
hlt
movsb
das
push
inc
dec
and
jne
sarl
inc
push
adc
out
dec
jno
jg
inc
fmuls
pop
wbinvd
ja
pop
dec
imul
repz
mov
test
adc
lock
adc
ficomps
leave
mov
or
test
clc
inc
popf
repz
scas
mov
ds
pop
or
xor
add
ret
sahf
adc
lods
in
cmp
je
add
and
xor
rcr
jb
out
sub
sahf
sub
or
or
nop
sbb
stos
shll
xorb
stos
jnp
xchg
int
pop
adc
push
push
bound
movsl
inc
ret
xchg
jnp
jo
jmp
cmpb
sbb
sub
mov
xchg
jmp
pushf
test
mov
inc
js
xchg
inc
insl
test
adc
mov
push
mov
inc
sbb
inc
add
repnz
unpckhps
jnp
pop
dec
dec
and
sti
pop
sbb
fwait
sub
dec
lret
daa
xchg
dec
jecxz
lock
clc
sub
push
stos
push
mov
scas
mov
dec
imul
lcall
inc
xlat
sbb
ret
ds
sbb
fs
mov
rcll
pop
stos
ret
push
jbe
push
cmp
lret
out
inc
mov
jl
jbe
pop
inc
lea
lcall
jg
lods
push
mov
push
cmp
push
rcrl
ja
mov
sub
push
adc
pop
pop
out
xor
push
sbb
push
mov
and
jecxz
neg
inc
aaa
in
aas
jmp
push
sti
in
push
dec
int
mov
add
popf
jg
scas
adc
sbb
lea
std
outsb
je
std
ljmp
rorb
stc
insb
push
mov
sub
ror
dec
push
mov
ficomps
pop
cmpsb
inc
es
adc
sub
mov
jge
out
mov
adc
orl
or
xor
sbb
enter
jp
divl
cmc
or
lret
jne
lods
shr
data16
lods
aad
mov
xor
xor
fstpl
outsb
shr
add
sub
sahf
divb
inc
cli
ds
aam
aas
dec
mov
mov
in
aad
test
pop
sbb
push
aas
mov
add
mov
test
fistpl
or
daa
in
sub
inc
test
inc
sub
test
pop
rcrl
ror
repnz
sub
loop
mov
stos
add
mov
mov
xchg
in
mul
mov
adc
jmp
daa
sbb
in
pop
jno
dec
enter
push
sbb
sbb
lret
mov
inc
popa
in
pop
test
pop
imul
stos
aaa
mov
or
inc
push
jecxz
mov
mov
in
nop
xlat
mov
inc
call
xchg
lret
subl
pop
cwtl
dec
jnp
pop
mov
bound
mov
jle
inc
inc
adc
mov
inc
jg
sub
sti
lock
mov
inc
leave
inc
fldt
shrl
or
jle
mov
inc
fsubrs
lea
cwtl
pop
into
mov
xchg
inc
sbb
outsb
in
mov
mov
mov
sub
loopne
gs
mov
sub
sub
adc
pop
cmp
cmp
movsl
mov
adc
dec
mov
fwait
outsl
bound
outsb
push
mov
xor
sub
mov
push
cmc
adc
clc
cmp
fdivrl
lahf
adc
and
icebp
jle
mov
xorb
and
xchg
shll
mov
or
jb
stos
adc
push
cli
adc
testb
not
xchg
lea
pop
scas
ss
add
and
dec
adc
mov
pushf
stos
cli
popf
push
xchg
push
inc
push
adc
mov
mov
ljmp
xchg
sbb
push
sti
dec
xor
addb
aas
dec
movsb
test
push
pop
or
push
scas
stos
xor
sahf
loope
push
push
test
mov
jbe
sub
test
mov
mov
xlat
xchg
imulb
insb
fcomps
pop
inc
jne
or
dec
jecxz
movups
fbld
mov
xor
mov
push
outsb
cmp
pop
ds
cmp
iret
call
mov
negl
jl
inc
jmp
je
inc
pop
pop
hlt
test
dec
dec
out
in
sub
xchg
lret
test
data16
ja
inc
lret
dec
cmp
xchg
jo
pop
repz
sub
cmp
gs
jge
xor
add
mov
vpsubd
dec
mov
jle
mov
jnp
xchg
adc
mov
sub
inc
adc
sahf
push
pusha
incb
jge
jne
xor
lcall
sbb
outsl
mov
and
cltd
leave
xlat
sbb
adc
push
inc
sbb
ds
xor
jne
push
inc
or
stos
sub
add
sub
dec
pop
sbb
push
leave
pop
push
nop
lods
out
cli
test
cli
bound
dec
pop
es
sbb
xchg
sub
push
cmp
mov
sahf
sub
ret
xor
mov
lds
mov
daa
jbe
inc
xchg
cs
add
mov
sub
mov
jne
cmp
sbb
pop
insl
push
inc
hlt
movsb
aad
add
and
sub
es
inc
mov
mov
pushf
jge
aaa
repz
and
xlat
lcall
sarl
icebp
xchg
mov
rorb
sub
loopne
sbb
pop
ljmp
mov
sar
xchg
xchg
outsb
or
orl
or
aas
aad
push
and
cmp
jb
xor
mov
insb
scas
mov
and
dec
or
sbb
leave
rol
xchg
adc
test
cmpsb
add
push
test
jns
and
aad
mov
xchg
loop
mov
push
lret
push
nop
das
mov
jge
in
sbb
ds
pushf
and
xor
out
daa
pop
dec
rolb
cld
fs
xchg
stos
pop
int
test
mov
movsl
imul
insl
jle
clc
inc
iret
add
arpl
cmp
mov
sub
or
mov
jge
sub
sahf
adcl
jbe
movsl
clc
xlat
ss
adc
push
pop
cmp
mov
and
shrl
mov
rcr
ret
out
or
test
mov
test
stc
xor
cmpsl
jecxz
cmp
fs
pop
lret
add
testb
xor
rol
jno
std
movsb
test
jne
mov
fs
inc
std
push
mov
dec
ret
or
inc
pop
pusha
mov
mov
cmpsl
arpl
cli
xor
sbbl
shrb
or
cs
inc
pop
jmp
mov
jl
popa
movsl
push
movsb
cmp
call
pop
cmp
inc
fidivrl
ret
movsl
fildl
push
fld1
inc
lock
inc
adc
push
inc
ficoml
mov
sar
in
adc
add
stos
jecxz
ret
popa
cmovs
xchg
xchg
and
pop
and
cltd
out
test
xchg
xor
ss
push
int3
mov
add
push
loope
repz
or
shll
jl
stos
in
inc
xchg
adcb
mov
push
sbb
imul
sti
dec
lret
pop
push
mov
outsw
imul
imul
stos
xor
test
cmp
add
xchg
bound
push
in
cmp
inc
rcl
xor
cmp
sub
sbb
push
jne
call
ds
and
test
aas
lret
dec
mov
dec
inc
jbe
loope
push
mov
lea
mov
aam
inc
ljmp
clc
sbb
clc
pop
rorl
jae
sbb
jno
into
leave
xchg
test
andl
xchg
lods
ljmp
sub
and
jp
pop
sbb
xor
call
daa
push
jbe
fistps
or
xchg
inc
ja
scas
out
lds
xchg
sub
adc
sbb
xor
or
xor
jmp
leave
int3
xor
jno
sub
pop
dec
push
mov
fisubrs
xor
scas
jg
push
pop
arpl
xchg
xchg
out
es
mov
jae
and
push
and
mov
jne
adc
mov
scas
mov
xchg
fbld
mov
mov
clc
repz
aaa
cltd
movsb
or
icebp
xchg
int
fsubl
ret
out
in
jge
arpl
inc
inc
push
cmpsl
sbb
leave
lahf
push
push
or
or
cli
iret
lahf
mov
sub
push
out
push
jl
ljmp
shr
in
in
scas
andl
js
hlt
fadd
movsl
adc
xchg
inc
repnz
in
inc
pusha
sub
out
cmpsl
sub
xchg
into
in
sti
sbb
sahf
mov
or
gs
lods
fisttpl
push
inc
lea
xor
push
out
sahf
xor
and
xchg
in
arpl
inc
movsl
sbb
movsb
jle
push
jbe
cmpsl
aaa
and
sbb
mov
mov
pop
lods
dec
inc
clc
mov
sbb
je
xchg
pop
movsl
rclb
mov
fists
test
ja,pn
jle
push
sub
xor
mov
js
inc
fnstcw
test
cltd
jecxz
loope
sub
in
dec
mov
roll
bound
icebp
mov
add
lret
lcall
xlat
cwtl
sub
push
xlat
or
mov
cmpsl
out
sbb
je
test
in
cltd
dec
xor
cmpsb
loopne
clc
pop
or
loopw
cmpsb
and
dec
movsb
pop
dec
negl
sahf
mov
cmp
fdivl
popa
mov
pop
mov
sti
hlt
int3
std
mov
mov
cmp
stc
pop
call
clc
out
inc
dec
cmp
jnp
mov
adc
daa
hlt
jo
test
dec
cmpsl
xchg
push
pusha
ds
cmpsb
sub
mov
xchg
cli
or
pop
push
push
mov
inc
push
cs
gs
std
mov
pop
adc
pop
popa
jg
mov
iret
xor
jp
jb
lret
xor
gs
jns
cltd
add
mov
cmpsl
lock
clc
repnz
pop
aaa
lret
mov
jb
orb
inc
and
in
push
adc
aad
cwtl
mov
adcl
sti
das
xchg
or
lds
cmpl
mov
scas
sbb
cli
fcomp
or
add
push
mov
add
shlb
in
xor
sub
repnz
scas
test
sbb
lea
rorl
ss
mov
pop
adc
lret
mov
and
mov
lock
push
mov
das
outsb
jae
mov
xor
push
adc
push
sub
dec
add
daa
jp
shr
mov
nop
push
orb
cmp
push
pop
or
ret
pop
repnz
push
or
xchg
mov
jno
sbb
loope
inc
jg
repz
fwait
cmp
jg
shl
mov
xchg
cmpsb
mov
adc
cmpsl
dec
imulb
xor
stc
jle
mov
rcr
shl
incb
test
xlat
mov
xor
out
arpl
push
movsl
ss
aam
cmc
lret
loope
xchg
lcall
movsl
sub
fwait
es
pop
pop
roll
inc
ss
loopne
inc
dec
std
pusha
jns
dec
hlt
sbb
outsb
insl
inc
xchg
ret
lock
loop
mov
in
inc
cmpsl
dec
lret
sub
pushf
cltd
lret
pushl
js
dec
stc
inc
das
push
cmpsb
adc
in
adc
and
pop
dec
sbb
dec
xlat
gs
pop
mov
test
inc
cwtl
push
jg
sub
mov
xchg
cmc
mov
loopne
or
push
mov
xchg
mov
sbb
mov
jno
cmpsb
call
lds
sbb
das
arpl
mov
bound
cmp
sub
mov
mov
aad
add
call
andl
orb
aas
sub
adc
push
aam
sbb
stos
lods
lods
dec
mov
push
ja
test
sarb
xor
mov
mov
lea
xor
inc
push
adc
arpl
fnstenv
or
fnsave
and
push
and
mov
xchg
loope
aas
cmp
and
pop
mov
mov
and
cmp
inc
mov
dec
leave
add
mov
outsl
jl
dec
dec
fdivrl
and
jb
cwtl
pusha
cmp
fstl
je
mov
mov
push
push
lret
push
dec
test
cmc
movsl
push
ror
sub
mov
xchg
ficomps
and
or
fnsave
test
repnz
xor
aaa
inc
movl
out
rcll
jg
arpl
and
push
scas
jbe
stos
into
in
push
movsb
icebp
mov
push
ds
cmp
push
mov
fwait
lret
sub
and
cmp
sbb
dec
jecxz
jl
cwtl
inc
shrl
sub
call
loope
sbb
adc
orl
fcoms
ds
out
xor
inc
inc
jb
inc
mov
push
dec
jp
outsl
jp
xchg
daa
mov
adc
cmp
mov
pop
insb
out
push
or
mov
cmp
push
mov
xlat
fwait
add
outsb
jae
fidivs
mov
shr
test
movsl
mov
pop
add
push
out
popa
movsl
xchg
sub
push
jnp
mov
shll
rcll
fs
or
enter
mov
and
testl
push
ds
scas
sub
cwtl
jnp
xor
inc
dec
lods
int
loopne
push
xchg
mov
inc
cld
lahf
aaa
inc
cmp
dec
xchg
je
in
xchg
xor
in
test
mov
shrb
js
les
test
fstps
scas
arpl
test
inc
cld
fnstsw
jae
hlt
xor
xor
repnz
dec
xor
fimull
mov
jle
adc
inc
daa
popa
jecxz
mov
cmp
arpl
bound
dec
movsl
mov
fiadds
inc
xchg
ss
pop
xchg
ret
ljmp
loope
xchg
xor
xor
lods
stc
es
pop
addl
fdivs
xchg
jb
xchg
inc
stos
jmp
dec
cs
in
nop
jns
sub
dec
into
jnp
jmp
sbb
pop
cltd
lcall
mov
mov
scas
or
add
cmp
out
jg
mov
sub
shl
testb
in
cmp
loopne
inc
xchg
pop
push
arpl
mov
jo
jnp
add
jmp
sbb
sbb
aaa
pop
mov
and
in
sti
negl
push
dec
gs
sahf
daa
dec
ss
mov
jae
sbb
lret
jb
gs
cmc
nop
inc
jne
cmpsb
arpl
push
jg
fs
jo
jmp
out
fidivs
popf
lret
je
test
xchg
mov
mov
subl
outsl
lahf
xchg
sub
jo
xchg
sub
fnsave
orl
test
sbb
popa
jle
aas
inc
out
jp
dec
sub
adc
aad
insl
into
dec
inc
enter
jae
push
push
pusha
test
sbb
inc
roll
test
pop
add
pop
and
mov
adc
mov
repnz
pop
ficompl
sti
cltd
jns
ljmp
lods
push
and
xchg
int3
int3
sbb
push
sbb
js
xchg
fdivrs
sbb
popf
dec
cld
jno
cmpsb
sub
es
push
jl
std
rcl
imul
push
insb
cld
or
sti
mov
inc
sahf
test
int
xchg
mov
adc
mov
xlat
stc
or
out
mov
lret
es
sub
push
in
cld
pop
adc
add
add
insl
jo
mov
pop
sub
sub
fldl
arpl
in
fisttps
push
xchg
movsb
outsl
mov
push
inc
jg
xlat
insb
xor
inc
popa
pop
fs
dec
rcrb
jl
push
adc
daa
inc
lods
cmpsl
or
jp
adc
mov
lds
xor
std
aad
test
or
mov
ret
es
inc
jmp
inc
std
push
xchg
mov
jge
add
dec
hlt
cwtl
adc
jns
in
in
xlat
adc
out
clc
ret
jae
pop
or
gs
ds
push
outsl
push
pop
mov
jmp
shlb
ljmp
push
and
or
movsl
cmpsl
mov
and
mov
fucomi
mulb
mov
gs
test
mov
cmc
popa
aad
fs
iret
xchg
std
and
insb
push
ds
movsl
push
int3
not
jns
or
dec
push
pop
push
jae
push
sub
mov
ficoml
jnp
jnp
stos
push
pushl
inc
pusha
dec
dec
imul
les
lods
cmp
add
mov
hlt
sub
fistpl
cmp
ret
adc
cltd
jne
inc
xchg
lcall
popf
and
shr
lahf
pop
int
aas
pop
cmp
add
pop
testb
mov
lea
gs
cli
pop
jmp
je
adc
js
daa
dec
leave
jb
inc
mov
je
dec
jbe
pop
ljmp
and
cmc
jecxz
ja
sbb
insb
int3
xlat
gs
test
imul
cmp
pop
jns
repz
es
push
daa
jne
scas
arpl
addr16
es
jb
repnz
pusha
adcb
cmp
cmp
sbb
aaa
dec
mov
movsl
cmp
jp
pop
jecxz
cs
ja
push
dec
out
inc
addr16
adc
out
sarb
sub
jbe
and
out
adc
sbb
cmc
adc
lahf
dec
mov
addb
or
sub
mov
xchg
lret
rcrb
mov
es
ja
xchg
idivb
gs
notl
xchg
fndisi(8087
mov
inc
adc
cli
mov
hlt
iret
das
repnz
inc
pop
xor
cmp
cltd
or
jnp
sbb
lds
out
in
rolb
sbb
out
out
stos
inc
xchg
cmp
cmpl
movsl
inc
nop
dec
aam
loopne,pn
loop
lods
lds
mov
mov
lds
inc
ret
sub
jbe
jg
mov
sub
lcall
lods
xchg
jmp
jp
jecxz
xor
rclb
lods
lods
rcrl
jne
repnz
sti
adc
xlat
cwtl
gs
roll
shlb
sub
fiaddl
inc
or
xlat
mov
jg
std
leave
mov
ret
leave
in
mov
les
cmp
aad
xchg
push
sbb
xor
dec
cmpsl
xchg
lahf
jo
aaa
inc
mov
mov
mov
popf
push
into
sub
outsl
and
mull
or
push
sahf
mov
sub
testb
popf
pushf
data16
in
stc
fmulp
lret
data16
push
ljmp
mov
into
aas
mov
push
imul
and
sbb
add
fnstenv
stos
pop
je
lret
int3
and
rolb
jmp
outsl
test
ja
adc
mov
iret
inc
imul
bound
jne
popa
sbb
lock
das
mov
shll
inc
and
mov
xchg
into
pop
mov
sbb
clc
mov
jmp
mov
lcall
fs
cmp
jbe
jo
int
ja
stos
mov
pop
out
mov
pop
pop
faddl
mov
movsb
xchg
aad
mov
lahf
std
sub
mov
push
and
jb
or
bound
orb
jecxz
sbb
dec
mov
fcompl
fwait
leave
pop
cmp
movsb
pop
icebp
xchg
push
sub
push
insb
xlat
cmp
and
out
push
xchg
jl
cld
stos
xlat
inc
cmc
aaa
sub
cmpsl
pop
es
test
fwait
jns
ss
jnp
dec
je
mov
mov
fbld
imul
cmc
pop
jae
mov
or
pop
movsl
mov
shll
pop
sbb
movsb
push
push
stos
mov
and
test
inc
fistpl
cmp
fwait
jne
jle
jae
add
cmpsb
push
xlat
les
insb
pop
in
insl
pushf
cs
popa
pop
dec
or
jge
jns
cmp
mov
and
and
loop
imul
cmp
addb
mov
pop
popa
inc
cmp
dec
ds
mov
call
lret
fcomi
inc
sbb
mov
xchg
adc
fisttpl
sbb
mov
rorl
xchg
and
add
sbb
fnsave
jle
xor
pop
cmc
test
test
xrelease
push
xchg
mov
xor
lea
ss
icebp
out
fisubrs
lods
or
lds
sub
imul
add
xchg
flds
mov
int3
movsl
ja
lcall
xor
pop
adc
add
dec
mov
xor
add
pop
pushl
movsb
notl
mov
hlt
int3
mov
pop
leave
sub
xorl
lea
pop
lret
fnsetpm(287
std
fs
lock
push
cmpl
inc
inc
jle
xor
and
pop
lret
popa
ret
test
mov
dec
insb
fnclex
fwait
jg
cwtl
jecxz
and
mov
jl
inc
jns
shrb
pop
jle
mov
pop
rol
pop
dec
pop
outsl
sbb
jb
aam
popf
fidivrs
stos
xchg
shlb
push
lret
fcmovb
stos
xchg
dec
jne,pn
and
loop
ja
and
adc
and
lea
mov
into
sbbl
xor
fcmovne
jo
adc
push
mov
inc
sbb
sahf
dec
mov
outsl
adc
dec
xchg
ficoml
lods
cmp
cltd
movsl
mov
sub
sbb
movsb
test
pop
mov
mov
sub
jmp
stos
popa
cmpsb
arpl
xlat
jg
pop
pop
inc
stos
icebp
ds
xchg
lret
cld
jl
mov
lea
mov
aas
pop
sub
sbb
pop
loop
mov
or
leave
jo
jbe
adc
lds
sarl
push
adc
das
outsb
pop
fcmove
xlat
and
out
jb
repz
adc
fiadds
inc
ret
fldt
outsl
pop
es
pop
push
subb
mov
cmp
clc
das
addr16
mov
aam
cmp
xor
andl
aam
icebp
bound
cltd
mov
xor
pop
pop
hlt
jecxz
jae
add
es
js
jmp
int
in
adc
sarl
sbb
hlt
ja
fldcw
jno
mov
or
cmp
xor
test
popa
xlat
jns
in
or
jg
daa
xchg
pop
mov
arpl
les
pop
lret
pop
lock
mov
scas
lods
sbb
jnp
xchg
into
sbb
shll
lret
inc
pop
xchg
fisubrs
push
cmp
rol
lods
sub
insl
pop
in
aaa
stos
xchg
imul
mov
aas
rorb
xlat
add
or
adc
xor
inc
int3
fwait
pop
sbb
jbe
into
mov
sbb
mov
mov
xchg
sub
scas
and
arpl
sub
pop
mov
sbb
xor
sbb
xlat
inc
jae
es
pop
jge
add
add
rolb
movsl
sbb
jg
enter
xor
xchg
rorb
adc
call
dec
push
mov
push
mov
popl
fs
test
pop
js
cmp
add
fdivs
inc
mov
jnp
xchg
ret
mov
in
xchg
addl
push
dec
or
and
nop
mov
fcoms
insl
das
jle
jae
jnp
pop
mov
mov
mov
fwait
pop
dec
xor
adc
dec
fistpll
cmp
pop
leave
outsl
jmp
xor
cmpb
xorb
sub
xor
sub
xchg
int
sub
dec
mov
jb
xchg
lock
push
jge
ds
call
dec
aad
punpckhdq
outsl
sbb
sbb
aas
cltd
movsl
js
test
pop
loop
pop
enter
andl
inc
dec
and
repz
and
and
mov
push
mov
jmp
movsb
sbb
loopne
mov
incb
ret
push
mov
lcall
fucom
mov
imul
inc
xor
jg
xchg
scas
sub
inc
mov
enter
cmp
scas
out
popa
int
jo
repz
sbb
outsb
pop
aaa
lods
xor
aaa
arpl
int
push
jb
dec
popa
xchg
clc
cmpsl
push
popa
lcall
jecxz
imul
push
lcall
in
je
xchg
mov
or
mov
and
cmp
mov
mov
xchg
xchg
lock
pop
xor
mov
psllw
pop
push
lock
in
mov
dec
pop
mov
scas
jae
scas
xor
mov
insl
fcompl
cltd
outsb
add
xor
push
rdmsr
or
jge
dec
idivb
xchg
outsl
je
adc
aas
jmp
es
rol
cmp
cli
jp
lods
dec
arpl
xor
pop
fwait
in
daa
xor
mov
adc
jmp
inc
add
cmp
push
sbb
adc
sbb
add
mov
mov
or
cmp
sbb
ret
popa
lret
xchg
sbb
popa
adc
lahf
adc
and
dec
fiaddl
push
jle
sbb
fcmovnb
imul
lods
addr16
cmp
mov
jmp
out
jbe
aam
push
xorb
lock
mov
icebp
sbb
shlb
add
push
cli
add
adc
cli
les
stos
je
pop
fdivs
popa
push
mov
sbb
lods
jno
ret
sbb
mov
mov
pop
sbb
test
cmp
int
adc
inc
pusha
mov
mov
add
sbb
in
mov
pop
ljmp
cmp
les
mov
lods
out
mov
test
or
sub
mov
into
std
or
push
fwait
scas
add
movsl
dec
xchg
testb
test
pop
inc
in
push
add
add
pop
or
mov
movsl
jae
cli
sbb
out
mov
scas
sbb
test
xchg
dec
cmp
jp
int3
mov
lods
mov
xchg
iret
jno
stos
sti
scas
push
das
and
js
mov
je
or
lock
enter
mov
lahf
outsb
mov
negl
mov
dec
dec
push
cld
in
std
pop
sbb
and
gs
jmp
ffreep
xlat
repz
arpl
and
mov
scas
andb
adc
pop
pop
adc
inc
sub
call
push
fbld
jmp
cmpsb
sar
dec
jb
int3
fiaddl
clc
dec
jns
sbb
jl
mov
mov
sub
dec
jo
fidivl
push
in
jp
out
jmp
pusha
aas
xor
adc
out
adc
mov
mov
out
imul
adc
pop
xor
add
mov
fdiv
mov
push
push
xor
sub
les
inc
fwait
xchg
dec
rolb
cmp
subb
aaa
cltd
sbb
pop
and
inc
mov
gs
adc
inc
loop
out
push
mov
sbbb
negb
cmp
xchg
xor
mov
jb
mov
mov
xchg
loope
outsb
test
mov
jle
jbe
xor
pop
add
pop
movsl
test
xchg
or
push
xchg
mov
jnp
pop
xchg
pop
lods
cmp
ret
sub
or
xor
clc
inc
adc
mov
adc
scas
ljmp
fiadds
mov
insl
dec
inc
gs
std
shrb
jo
inc
cli
ljmp
jbe
dec
fbstp
mov
mov
out
sub
pop
insb
adc
cld
out
orb
sub
imull
xor
icebp
cmp
mov
mov
in
lods
shlb
daa
pushf
dec
lods
or
shll
repnz
xchg
lret
xchg
cmc
outsb
sbb
sub
sbb
insl
and
shrl
cli
shlb
sbb
stc
jbe
lretw
sarb
xor
mov
insl
cmp
xor
les
movsb
out
lret
xor
cmpsb
loope
jnp
ficoml
pop
xor
lcall
sub
ja
xlat
xorl
xchg
sbb
mov
hlt
cmp
cs
aam
sti
push
push
cmp
sbb
xor
aaa
push
jbe
cmp
cmp
nop
xor
fs
sbb
adc
imul
das
cltd
xchg
mov
in
xchg
jl
lcall
adc
jl
clc
mov
shlb
jecxz
or
fs
mov
push
ds
ljmp
cltd
test
test
jl
rcl
in
mov
cmp
and
fcom
cmpsb
sub
lea
ret
pop
sub
call
sti
cmp
stc
dec
rcll
vmread
push
xor
jae
fs
lea
sub
lock
test
movb
adc
daa
pop
test
sbb
mov
sbb
inc
jge
out
inc
jmp
jns
int
pop
mov
cwtl
imul
bound
mov
lea
sbb
lock
shufps
xlat
lods
cmp
jmp
or
mov
icebp
fs
fwait
jecxz
jmp
loop
adcl
rclb
ret
jl
aas
mov
cs
or
ret
pushf
pop
mov
mov
notb
jecxz
cmc
jb
sub
pop
add
mov
mov
mov
imul
fst
cli
cmc
push
in
mov
cmpl
pop
sub
push
das
inc
stos
or
sbb
xor
es
mov
aad
xchg
sbb
adc
rcll
cld
frstor
mov
add
shll
pushf
ret
es
nop
ret
sbb
mov
aam
and
mov
xchg
andb
movsl
mov
fisttpl
or
adc
scas
hlt
rcll
cmp
sub
lock
pusha
lds
aas
notb
rclb
adc
out
daa
xor
stos
cmp
xor
mov
std
mov
push
pop
negb
iret
aaa
dec
nop
or
xchg
push
aas
int
jecxz
sbb
or
stos
jge
sbb
or
or
and
iret
mov
pushf
push
test
icebp
adc
jge
or
mov
sub
pop
sbb
xlat
sarb
mov
mov
mov
lods
and
fwait
jp
pop
notl
inc
cmc
sub
pop
adc
shl
fisttpl
mov
jae
xor
adcl
cli
out
cmc
adc
mov
push
js
xor
and
jbe
jne
dec
jg
pushf
push
mov
push
or
aaa
mov
fistps
xchg
adc
pop
ljmp
mov
movb
mov
jle
sub
mov
jp
mov
cmp
aas
push
and
leave
and
or
sub
pop
orb
add
dec
aas
cmp
leave
ret
cmp
in
pop
daa
out
push
or
cmpsb
jbe
testl
jno
and
xchg
push
pop
inc
cltd
sub
aaa
inc
test
ja
out
or
dec
mov
int
lock
mov
sub
mov
or
dec
mov
into
stos
xchg
cmpsb
lock
or
outsb
scas
std
pop
mov
fwait
mov
jmp
out
mov
dec
ret
addb
js
lahf
mov
flds
add
push
add
dec
in
mov
int3
inc
es
dec
add
mov
and
addr16
and
inc
sub
mov
std
adc
gs
rorb
jle
lods
jns
jb
call
mov
cmp
fists
dec
mov
jmp
fistl
cmp
pop
mov
inc
xor
data16
inc
mov
push
pushf
push
frstor
je
jns
andb
ficompl
icebp
mov
scas
clc
pop
xchg
jle
mov
mov
sbb
xor
es
adcl
and
xorl
fs
out
pushf
jb
push
push
xor
cmpsb
xchg
fwait
scas
xchg
or
pop
push
sub
ror
and
xorb
pushl
leave
lahf
bound
je
mov
or
mov
or
xor
lods
in
dec
popf
lock
or
jmp
xlat
paddsb
scas
int
stos
xlat
lret
and
popf
pop
mov
jb
sub
xchg
das
xor
xlat
es
mov
pop
push
dec
arpl
jmp
cltd
jecxz
or
repnz
leave
lock
stos
jmp
inc
imull
inc
fisubrs
imul
sbb
mov
mov
pop
test
stos
mov
push
xchg
fcomip
adc
pop
dec
push
push
mov
cmpsl
add
movhps
out
mov
enter
loop
jo
popl
mov
out
lret
or
in
imul
sub
jne
and
out
mov
pop
push
or
or
mov
or
push
aas
sbb
mov
stos
mov
add
lahf
jge
mov
verw
add
lds
adc
jae
jp
dec
push
pop
andb
int3
jmp
add
sbb
sub
cmp
jnp
scas
les
jg
outsl
or
mov
popa
rorl
pusha
jge
inc
loop
inc
push
cwtl
mov
int3
push
pushf
mov
cmp
test
cld
outsl
imulb
into
pandn
shll
jle
pop
push
cwtl
or
stos
xchg
int3
sbb
and
jae
sahf
inc
call
jae
jl
pop
jno
mov
aad
enter
lds
ja
pop
out
in
stos
sub
cmp
push
cmp
mov
lods
and
pop
imul
jmp
lahf
lods
es
into
push
sub
loop
sti
jno
imul
std
and
add
dec
inc
dec
xlat
cs
jmp
imul
out
cmp
movsl
loopne
pop
xor
jge
jb
mov
fnstsw
xchg
xchg
test
je
mov
movsb
bound
test
in
push
inc
inc
ret
daa
pop
inc
xorb
adc
xchg
add
adc
jg
ljmp
push
dec
pop
jmp
fmulp
shl
leave
mov
inc
mov
fidivrl
das
arpl
fsubs
adc
inc
stc
das
xchg
push
lock
out
andl
sti
xlat
and
jmp
jne
adc
fstps
mov
sbbb
insb
je
inc
push
sub
sbb
insb
cltd
sub
mov
fdivp
repnz
push
cltd
lock
jg
jne
inc
fstl
test
inc
and
xchg
cld
jbe
mov
fiaddl
nopl
xchg
outsb
cmpsl
mov
push
and
dec
lods
cmp
adc
stos
ret
mov
jmp
clc
add
enter
mov
add
repz
js
cmp
rcrb
xchg
add
pushf
push
add
popa
jb
mov
sub
mov
mov
or
test
xor
repz
imulb
sub
rorl
lret
xlat
int3
or
test
lret
push
or
lods
icebp
fidivrs
bound
mov
add
xor
in
mov
xchg
or
inc
cli
repz
cmp
call
mov
push
ret
insl
ljmp
insl
inc
push
leave
inc
xchg
popf
mov
mov
insb
mov
push
xchg
inc
jno
lds
add
sub
mov
mov
mov
cwtl
add
aam
xor
outsb
shlb
jge
inc
into
xchg
scas
rolb
adc
dec
sbb
push
mov
in
cmp
cs
lahf
push
int
aam
jbe
xchg
fsubs
addb
stc
push
jl
jle
ficoml
andb
lock
pop
test
ja
fnstenv
mov
into
out
push
mov
push
cmpl
repz
iret
daa
popa
popf
popa
jbe
jnp
inc
outsl
mov
dec
jae
mov
cld
icebp
pop
sub
shll
ljmp
push
mov
and
sbb
pop
sbb
je
ja
jl
jmp
ja
mov
dec
sbb
stos
jp
mov
gs
ja
bound
add
hlt
je
mov
fnstsw
cs
xchg
mov
ret
sbb
in
mov
sbb
movsl
stos
in
into
leave
sbb
mov
and
ficompl
jge
scas
stc
add
stc
inc
es
in
shl
push
icebp
xor
fimuls
pushl
add
into
nop
iret
sbb
cltd
test
xchg
jecxz
loopne
mov
pop
sbb
arpl
mov
jle
enter
inc
xor
inc
cmp
fstp
mov
fdivr
or
xor
sub
mov
mov
lret
js
jo
jecxz
mov
and
mov
cwtl
inc
divb
adc
mov
mov
shl
or
hlt
sti
shrl
imul
xlat
in
jne
insb
xor
cld
sarl
stos
aas
sbb
ret
ret
sub
lea
lods
mov
pop
aad
movsl
insb
jp
adc
jle
mov
das
xlat
lret
stos
jg
mov
notl
test
test
jo
dec
imul
lret
lea
xchg
jmp
sub
push
jnp
pushf
mov
shll
dec
xchg
adc
lret
pop
jns
stos
mov
lret
aaa
cmp
mov
or
jp
fcmove
mov
addr16
cwtl
add
mov
push
sub
push
jp
mov
rclb
xor
orb
gs
push
jno
dec
ret
js
imul
mov
shll
insl
xchg
iret
loopne
inc
inc
gs
sbb
push
lret
enter
bound
push
mov
adc
dec
out
dec
pushf
xchg
push
xchg
jae
and
pop
lret
outsb
out
cmpsb
into
and
lea
je
xchg
out
lea
jp
xchg
mov
cmp
sub
xchg
call
mov
test
aas
xchg
jns
cmpsl
shrb
jae
incb
aad
subb
lods
or
repnz
or
xchg
xchg
loop
in
inc
pop
push
ret
test
fcmovbe
ret
add
push
add
int3
mov
les
push
std
dec
inc
or
mov
sub
das
movsl
and
push
pop
xchg
and
repz
jmp
sub
cmp
lea
add
sub
mov
movb
adc
sar
aad
or
jbe
lock
in
xchg
ret
push
loope
roll
cmc
je
in
or
jo
repz
loopne
je
outsl
orl
sti
pop
or
mov
sub
sbb
test
imul
je
jae
imul
adc
aad
pushf
std
lret
xlat
call
subb
push
scas
jp
clc
arpl
test
add
mov
adc
test
jp
xchg
into
fnsave
jae
out
sahf
and
ljmp
fisubl
cli
shlb
mov
mov
jecxz
xlat
adc
pop
or
or
pusha
loopne
dec
out
mov
mov
fistpll
icebp
jae
pop
out
cli
aad
into
mov
cli
orb
mov
int3
popf
popa
fwait
add
jnp
add
and
dec
xor
inc
xor
xchg
loop
lahf
mov
outsb
lret
push
lret
and
xchg
inc
push
out
bound
cmp
loop
insl
or
pop
fimuls
xchg
addr16
cld
hlt
sbb
daa
arpl
sarb
pop
mov
push
add
sub
jp
mov
push
or
int
scas
dec
sarl
pop
mov
mov
cmp
out
and
jg
xchg
add
imul
lret
push
ds
out
dec
cmp
cmovb
sti
xorl
jnp
cmpsb
jle
xchg
pop
mov
out
stc
and
movsl
mov
popa
mov
pop
mov
lret
outsb
inc
push
sbb
sbb
push
mov
xchg
shr
add
ficoms
scas
roll
ret
cmp
iret
cmpsl
ret
mov
rorb
repz
aad
out
repnz
push
aas
test
sub
int3
cmp
xchg
ljmp
jge
inc
movsb
out
mov
scas
add
xor
aas
andl
push
adc
mov
sbb
pop
xlat
testb
in
std
fcompl
fdivrp
fisttpl
adc
movsb
pop
mov
in
lods
fprem1
inc
or
scas
adc
or
xchg
sbb
sbb
imull
mov
aas
cmp
push
adc
test
imul
pop
and
fcmovnbe
pushf
jge
addl
and
dec
subl
rcrl
cld
orl
jo
sub
and
xor
lret
idivb
mov
in
fnsave
testl
scas
xor
stos
jmp
lea
or
dec
flds
cmc
enter
mov
and
jne
movsb
mov
cmp
dec
sbb
jo
cmp
xchg
inc
insb
popa
mov
cmpsb
sub
mov
mov
mov
xor
sahf
push
test
dec
push
mov
mull
inc
pop
dec
mov
orl
adc
push
cmc
adc
pop
mov
jle
js
push
int3
jle
push
jnp
pop
and
or
jo
mov
movsl
outsb
or
lcall
xchg
inc
push
cwtl
repz
sub
push
push
sub
xchg
cmp
out
popa
mov
adc
lcall
inc
mov
pop
fists
out
jno
lods
pop
loop
hlt
mov
sbb
push
lods
sub
mov
iret
es
mov
pop
test
lock
int3
sar
loopne
mov
addb
cld
inc
sbb
movsl
ds
es
std
mov
push
call
mov
and
push
and
push
mov
daa
jg
inc
scas
push
mov
add
push
cmp
stos
xor
decl
and
scas
fbld
popf
lods
or
leave
adc
daa
or
add
pop
push
or
repz
fimull
cld
cwtl
mov
mov
cmp
repz
inc
pop
imul
call
push
cmp
repnz
notb
mov
pop
jno
cld
popf
jne
add
mov
ljmp
push
test
sub
stos
icebp
enter
push
decb
xor
pop
sti
push
outsb
add
xchg
push
jb
lcall
out
xor
xchg
push
enter
aas
pop
mov
push
xchg
das
out
addr16
sbbl
adc
in
insb
ret
adcb
xchg
cmpsb
jno
xor
mov
rcll
adc
jl
fstpl
inc
xchg
out
aaa
loop
mov
rorl
cli
mov
in
in
stos
ds
cmp
push
fcom
iret
rcll
pop
xchg
mov
fdivrl
jmp
fistpl
mov
loop
cmc
jle
nop
xchg
xchg
or
repz
stos
mov
stos
insl
shl
xchg
xchg
lods
cmpsb
loop
iret
cmpsl
or
pop
pop
lods
add
add
mov
int
enter
lods
and
lock
and
fisubrl
jo
fisubs
dec
repnz
hlt
pop
cmp
repnz
push
cmpsb
scas
imul
adc
mov
pop
inc
xchg
ds
pop
imul
dec
mov
out
iret
jmp
mov
fwait
xchg
std
xor
aad
notb
adc
xchg
sbb
mov
stos
sbb
sbb
fs
mov
or
lods
adc
popa
push
or
mov
xchg
je
mov
les
xchg
pop
int3
stc
in
lods
jl
orb
cmp
sarl
and
jge
add
mov
and
adc
sbb
xor
bound
rorb
xlat
shl
mov
aas
je
cmc
ret
dec
pop
mov
mov
imul
push
js
add
pop
jmp
icebp
jbe
xor
sbb
jbe
loope
cmp
push
stos
adc
daa
and
scas
mov
and
fldenv
nop
adc
into
mov
sete
mov
rclb
mov
adc
std
mov
cmp
inc
xor
dec
inc
ror
dec
push
in
push
mov
ljmp
fwait
out
lds
or
out
sub
in
add
roll
iret
push
pop
shlb
add
rcr
pop
push
push
xor
shll
test
in
sbb
xor
jae
sub
jb,pn
shll
jbe
test
and
mov
test
out
rorb
pop
shll
js
popl
aam
xor
inc
dec
aaa
jle
in
sarl
add
pop
addr16
pop
push
or
and
add
xor
inc
rclb
inc
scas
arpl
ret
ret
push
jno
ljmp
lds
test
sahf
aad
dec
add
push
push
xchg
adc
inc
insl
mov
jecxz
mov
fsubs
cs
fcoml
ficoml
rolb
adc
arpl
iret
bound
filds
lods
cmpsb
or
xor
sub
call
cmp
shlb
mov
cwtl
mov
cmp
pop
xor
cmp
inc
xchg
daa
into
subb
sub
fs
xchg
jp
adc
mov
jnp
lds
nop
pop
pop
lret
add
jb
iret
fdivrs
or
jle
mov
push
jge
mov
sub
add
ja
jecxz
cmp
out
lcall
test
sti
clc
loopne
cmp
inc
mov
mov
push
jae
nop
cli
insl
jne
xchg
jg
push
push
in
pop
or
inc
cs
fdiv
or
into
push
pop
jns
int3
sti
cmp
imul
jp
cmc
aad
cmp
mov
sbb
xlat
clc
jg
and
fstl
leave
pusha
push
fdiv
cmc
int3
fiadds
lods
xor
or
fisttps
and
add
inc
fadd
jg
inc
jne
bound
repz
jg
sbb
mov
je
repz
imul
pop
out
and
pop
and
movswl
adc
add
sub
xor
mov
xchg
jmp
jbe
call
sbb
fildll
mov
jge
ss
dec
or
loopne
int
jae
addr16
mov
cwtl
notb
fcomi
in
xchg
mov
jg
mov
das
push
mov
mov
add
das
inc
push
in
xchg
fnstcw
sti
popf
add
imul
imulb
lea
jb
jge
mov
les
xchg
sub
data16
xor
cmp
sbb
fxch
pop
imul
divb
scas
mov
push
ficoms
shl
pusha
xor
xlat
dec
fisubrl
je
movsl
data16
arpl
inc
sub
sti
ror
pop
lret
inc
enter
pushf
in
adc
adc
push
out
call
aad
test
inc
fidivrs
dec
aas
int
ds
mov
pop
fdivl
sbb
mov
mov
mov
pop
inc
sarl
roll
cmpsb
les
aaa
sub
sub
loope
jecxz
dec
xchg
jb
je
sbb
push
movsl
mov
pop
xor
adc
shrb
cltd
ret
jg
pop
adc
fimull
aad
push
inc
sub
add
sbb
mov
rorl
jae
or
mov
repnz
jae
push
jle
or
test
xchg
sbb
ss
xchg
mov
cmp
xor
adc
popa
xor
inc
xchg
mov
mov
rcrb
fld
popf
dec
cmp
jl
in
add
sub
pop
sbb
divb
fdivrs
xor
sahf
dec
cmp
pop
jmp
cld
xchg
into
outsl
pushl
imul
js
imul
xchg
xor
fwait
addb
jb
mov
dec
xchg
aad
push
mov
sbb
dec
sbb
add
roll
addl
xchg
lea
leave
mov
xchg
xor
pop
arpl
test
dec
stc
mov
inc
nop
jmp
test
jno
push
into
cmp
sbb
pushf
hlt
mov
cld
jmp
mov
push
add
inc
adc
pusha
push
lret
loope
mov
adcb
insw
ficoml
xorl
mov
fldcw
push
lds
scas
nop
nop
mov
aaa
lcall
movsb
fadds
cld
and
jmp
push
ficoml
bound
and
pop
cmp
lods
pop
lcall
pop
adc
adc
outsl
test
xchg
cwtl
add
xor
out
and
std
daa
insl
and
cmpsb
xor
sahf
cs
adc
aaa
or
or
outsl
push
inc
cltd
lods
pop
cmp
sub
pop
sub
and
rorl
gs
cwtl
sbb
cmpsb
outsl
pusha
hlt
mov
cwtl
lods
mov
sarb
add
jns
or
dec
sbbb
in
out
ljmp
outsb
out
into
adc
sti
inc
inc
mov
dec
sbb
aad
mov
insb
loopne
lods
test
bound
ret
pop
adcl
add
push
jne
cmp
test
push
pop
push
inc
icebp
push
xor
mov
sbb
sbb
dec
loope
xor
or
pop
je
out
xor
outsb
arpl
dec
out
rcrl
fsts
cmp
add
pop
adc
adc
shll
fs
pop
sbb
sbb
pop
repnz
inc
lcall
pop
mov
loope
imul
adc
mov
jl
inc
cmp
or
cmp
ret
cltd
dec
out
rorb
and
negb
mov
adc
and
lds
add
or
jle
jae
xchg
xchg
xorb
xor
mov
mov
jmp
adc
cmp
xchg
inc
ficompl
lret
inc
dec
add
mov
outsl
pop
jle
in
push
mov
cld
mov
imull
adc
daa
stos
outsb
fisubrs
sbb
nop
pop
ljmp
jg
loopne
lret
xor
dec
sahf
shrb
insb
fimuls
outsb
jo
out
push
jg
hlt
rcrb
xor
shlb
in
inc
pop
insl
inc
sub
pop
sub
push
in
into
and
popf
jne
add
movsb
pop
jno
jmp
add
or
pop
add
adc
hlt
cmp
or
mov
call
xor
imul
cmp
inc
add
xor
mov
sub
dec
movsb
push
jp
jnp
lods
jp
lret
sbb
out
push
divb
pop
pop
xchg
sbb
cmc
lcall
hlt
and
mov
jnp
cwtl
cmpb
outsb
xchg
jg
cmpsb
jb
leave
add
jns
imul
lds
mov
mov
cmpsb
sbb
xor
inc
arpl
mov
aas
stos
cmp
notl
jp
adc
jle
and
loopne
and
sbb
stos
xor
scas
std
shll
addr16
sbb
cld
std
dec
jl
xor
divb
rorb
mov
sub
add
add
out
lret
in
jp
and
lret
imul
jns
inc
mov
jle
es
ja
cmp
mov
fcoms
movsl
adc
inc
jp
fcom
add
movsl
jecxz
mov
nop
pushl
sub
and
leave
pop
cltd
mov
js
test
jmp
gs
out
sub
imul
xor
out
lods
jne
shl
out
lods
ljmp
cltd
xor
ds
int
pop
sbb
ja
xor
and
jns
push
fld
sub
test
jo
pushf
cmp
sub
lret
xor
pop
call
test
xchg
test
sub
mov
add
push
sbb
shrl
std
test
push
add
push
xchg
fucom
stc
jmp
add
repnz
add
nop
lock
insl
aaa
fcoms
test
xchg
xchg
jne
cltd
sub
mov
rorl
cs
mov
sbb
leave
or
test
js
dec
cmpsb
push
push
mov
adc
xchg
sbb
rorb
ljmp
xchg
xlat
pop
or
dec
loopne
cli
push
ds
leave
mov
les
inc
xor
jp
out
xchg
stc
loopne
pop
addr16
aam
ret
inc
push
add
push
outsb
mov
cltd
sub
cmc
add
dec
cli
scas
pop
pop
cmpsb
mov
xchg
out
orl
add
insl
xchg
sahf
notb
add
lcall
xchg
stc
test
xchg
iret
cmp
mov
rcrl
aaa
orl
cmpsl
and
mov
jl
enter
pop
daa
xchg
aas
sti
xlat
dec
aam
test
mov
xchg
jmp
dec
sub
mov
ficompl
fsubr
xchg
idivb
jb
jg
fisttpl
jbe
inc
test
lock
mov
fs
in
mov
push
out
test
push
push
shrl
mov
mov
jne
sbb
adc
mov
test
push
dec
and
lcall
lds
push
lret
fnstenv
mov
xchg
lock
mov
push
addps
sar
test
enter
xchg
pop
pop
add
pop
sub
ret
sbb
aam
sbb
xchg
test
xor
sub
inc
imul
add
push
lcall
sbb
in
add
daa
in
mov
test
int3
pushw
lahf
cmp
stos
pop
and
adc
arpl
dec
daa
imul
icebp
popa
push
mov
dec
shlb
mov
je
push
dec
ucomiss
lock
dec
xor
xchg
mov
sub
sbb
loopne
gs
pop
sbb
mov
shll
xor
lret
stos
les
jl
sar
dec
add
lock
leave
ret
fldt
imul
lods
sbb
aas
call
addr16
cli
arpl
xor
jbe
sub
cld
lea
stos
xchg
jne
mov
cmpsl
rcrb
xchg
mov
es
mov
mov
pop
sbb
mov
fcmovnbe
pushf
pusha
out
inc
xchg
xchg
sub
mov
outsl
int3
pop
lea
addb
dec
out
mov
in
je
rol
xlat
in
aas
dec
lahf
in
rorb
push
mov
xor
push
ds
xor
lahf
mov
cmpsl
popf
inc
mov
mov
jb
pop
mov
andb
mull
outsb
dec
cmpsl
shrb
dec
aam
pop
jno
mov
mov
in
cmc
cmp
sub
mov
sub
sub
stos
sub
and
mov
inc
add
lret
pop
sbb
xchg
imul
cmp
jp
jge
and
test
lret
pusha
push
jno
sbb
inc
push
sbb
mov
test
sti
sar
inc
adc
repnz
out
cltd
movsl
scas
push
stos
int3
frndint
or
outsb
pop
xorb
xor
jne
push
xlat
ja
mov
cmpsl
jp
jnp
xchg
cmp
js
pushf
out
push
out
lret
clc
es
add
in
sahf
cmp
enter
sti
push
pushf
cmp
repnz
xchg
sahf
call
jmp
fbstp
insb
insl
aaa
in
pop
add
xchg
and
xchg
xor
int
xchg
fstpl
fwait
jns
push
ja
lret
mov
cld
push
push
sub
sub
push
mov
pop
lods
jge
push
mov
mov
popf
xchg
test
les
repz
mov
dec
fisttpll
xchg
cmp
mov
fcompl
xor
cmp
mov
notb
mov
add
jge
insl
imul
pop
fists
xchg
mov
jmp
cs
xchg
ljmp
sub
mov
scas
fcoms
or
mov
add
push
movsl
das
aad
mov
fsts
iret
sbb
ret
dec
xor
cmp
rcrb
out
int3
or
push
scas
sbb
rcr
fstl
mov
shr
push
repz
mov
insb
jl
dec
mov
xor
fsubr
pusha
sub
fstpt
jne
jnp
sub
pop
scas
jg
sbb
lods
add
jns
push
or
insb
push
pop
outsl
imul
popf
xor
xor
fmull
push
call
inc
inc
stos
insl
jge
scas
pop
lahf
roll
fiadds
mov
xchg
pop
mov
ret
sub
jg
daa
repz
rcll
pop
inc
idivl
gs
pop
jne
mov
push
shrl
adc
mov
fmuls
lcall
cmpsl
xchg
dec
fwait
inc
jmp
int
pop
mov
jl
popf
aad
aad
jp
sub
notl
pop
nop
cmp
xor
in
pop
inc
ds
je
mov
repz
sarb
adc
xchg
mov
or
repz
sbb
mov
and
bound
int
ja
js
frstor
add
shlb
repz
fimuls
scas
adc
sbb
aad
mov
icebp
int3
add
test
adc
fldl2e
push
mov
sbbl
xchg
mov
jo
hlt
add
movsb
xchg
insb
push
inc
mov
mov
inc
adc
fldt
jo
js
inc
cmpsb
jb
sti
jmp
aad
sbb
or
popf
xchg
outsl
push
imul
lahf
ja
sub
mov
mov
nop
out
into
mov
jnp
int3
xor
push
mov
pop
add
aaa
jne
ds
sub
cli
pusha
ljmp
xchg
es
xor
push
cmp
dec
popa
mov
lods
jmp
pop
fidivrs
jbe
mov
loope
xchg
mov
js
pop
adc
jns
scas
out
add
inc
ja
xlat
adc
jne
inc
and
inc
or
mov
and
fistpll
lcall
je
cmpb
das
mov
lcall
sbb
push
mov
mov
out
jg
jge
xor
dec
repnz
aam
mov
aam
push
xor
es
sbb
lock
add
dec
arpl
out
test
dec
sahf
js
fistl
fildl
push
push
lods
rcll
data16
adc
pop
pop
mov
mov
jne
add
push
or
dec
mov
add
push
mov
xor
mov
xor
aas
pop
push
lahf
sahf
sub
fimuls
sbbl
xchg
rorb
ret
aam
sbb
xchg
das
pop
jne
adc
add
or
xlat
pop
inc
add
daa
xchg
xchg
rcr
or
sbb
lret
je
fs
imul
push
or
lahf
push
bound
enter
jno
movsl
push
push
or
and
mov
std
loopne
cmp
sbb
arpl
cmp
inc
ja
out
inc
xchg
cli
popf
repz
scas
cmp
push
fcmovne
sub
mov
daa
lds
int3
add
xor
and
mov
in
lea
lahf
sub
fistl
negl
ret
hlt
sbb
outsl
in
ja
cmp
mov
mov
mov
stos
cmc
pand
pop
sbb
popf
stos
fdivrl
inc
mov
test
mov
mov
aam
mov
pop
cli
pop
xchg
jne
outsl
push
sbb
xor
fcoms
pushf
xchg
rcr
mov
mov
das
loopne
outsb
or
cmp
inc
mov
les
push
add
ljmp
les
shrb
sbb
dec
and
sbb
lods
xor
xchg
loope
clc
les
mov
or
pusha
test
imul
mov
push
enter
add
movsb
mov
repz
fwait
in
push
lahf
jns
aad
sbb
int
pop
mov
icebp
or
mov
popa
lret
dec
or
ret
xchg
lret
push
jb
adc
mov
push
jp
mov
mov
cmpsb
jo
into
cmpsb
jb
imul
mov
cmp
inc
push
mov
icebp
stos
negl
push
fcomps
gs
xchg
shrb
or
dec
lret
repnz
add
outsl
and
iret
jbe
xchg
adc
aam
popf
jle
lahf
test
jge
jae
pop
push
into
roll
fsubl
leave
test
dec
xor
add
or
xchg
popa
lods
mov
cmpsb
and
sbb
les
sub
jns
mov
rcl
in
or
ficoml
cltd
sub
inc
test
mov
inc
pop
aad
lods
movl
xor
js
lds
jnp
cmp
fcompl
xchg
movsb
repnz
cld
jmp
mov
out
cmpsl
test
icebp
inc
rol
xchg
fcmovnb
xchg
insl
insl
stos
mov
jno
fiadds
call
push
imul
mov
sub
scas
call
pop
loop
cmp
enter
aad
mov
cmp
jg
mov
mov
xchg
repz
stos
pop
stc
in
mov
je
int3
adc
sbb
cmp
mov
movb
xchg
les
xchg
xor
int3
insb
sbb
mov
and
and
lods
test
mov
and
jno
xor
dec
and
stos
fistpl
fsts
lea
lods
mov
sub
sbb
or
and
and
sbb
add
jmp
xlat
vpmaxsw
fisubrs
inc
dec
dec
mov
jbe
xor
mov
aas
dec
iret
mov
fwait
gs
dec
jo
push
sarl
nop
push
dec
sub
and
pop
div
std
add
out
jb
in
push
cwtl
ljmp
das
add
leave
and
push
outsl
imul
lret
push
cmp
push
mov
xchg
jne
xchg
pop
sub
xlat
popf
negb
jecxz
xor
xchg
jae
add
andb
jp
dec
mov
jmp
dec
in
loop
and
mov
pusha
inc
adc
rcrb
cmpsl
cmp
es
or
enter
mov
inc
insb
rcrl
or
in
aad
or
jp
xor
jne
cwtl
mov
pop
lock
adc
sub
push
icebp
lcall
sub
push
jmp
fcmovbe
mov
popa
cmp
and
and
insl
inc
xchg
sahf
mov
push
push
inc
jmp
js
ror
add
mov
js
xor
mov
test
es
mov
loop
in
jbe
arpl
mov
inc
push
dec
daa
adc
inc
sub
add
mov
xchg
add
xor
or
mov
mov
ljmp
push
lret
mov
dec
adc
test
out
xchg
xchg
adc
testb
add
aas
inc
or
decb
xor
jecxz
adc
mov
ljmp
aam
std
adc
enter
das
mov
pop
mov
pushf
mov
ds
rol
inc
and
enter
fnstcw
icebp
and
aaa
repz
and
mov
add
xor
mov
inc
daa
push
clc
cld
and
pop
dec
test
in
gs
out
lret
or
jge
jne
stos
fcmove
sub
mov
lcall
add
cs
xor
fistps
lods
sahf
xor
mov
sbb
xchg
test
dec
push
xchg
mov
xchg
roll
ja
pop
mov
cmpsb
stos
jl
pop
addr16
lret
dec
ret
test
add
mov
or
das
cltd
dec
and
clc
or
pop
xchg
subl
call
pop
call
out
push
xchg
lcall
out
mov
sbb
and
add
clc
aam
push
jp
repnz
sahf
jb
pop
pop
and
push
mov
push
or
js
nop
out
inc
dec
cwtl
sbb
in
inc
roll
sbb
lcall
mov
xchg
jae
xchg
in
sbb
fidivl
or
mov
push
shll
inc
mov
rclb
outsl
mov
cltd
lock
sub
push
xchg
jp
loopne
inc
aas
sub
mov
ljmp
aad
popf
rcrb
movsl
call
jbe
mov
lds
fmuls
mov
push
mov
sub
sbb
out
in
sub
sub
xchg
repnz
mov
jne
mov
cli
mov
ja
mov
lret
jnp
adc
pop
mov
stos
xlat
jo
push
imul
rcrl
ficoml
mov
mov
mov
sub
mov
lds
dec
loope
fwait
lret
sarb
add
and
cmp
jb
shll
inc
outsb
cmp
jmp
bnd
pop
in
push
add
and
jl
loope
ret
xchg
sub
mov
into
jae
xchg
mov
push
push
pop
into
aam
and
adcl
jnp
mov
and
push
push
fidivs
sbb
add
enter
mov
loope
bound
sbb
lock
mov
cmc
lock
pusha
xor
lret
rcr
cmp
mov
pusha
lds
imulb
jo
sbb
push
bound
inc
data16
and
xlat
adc
lods
addr16
mov
lea
gs
mov
and
pop
mov
inc
sub
rcl
sete
insl
lods
mov
push
push
mov
jecxz
jno
add
inc
in
add
push
pop
lahf
xor
popf
jmp
iret
push
scas
push
jle
xchg
push
lods
jle
mov
xchg
and
out
dec
out
and
test
divb
clc
xor
lods
inc
mov
js
aam
xor
cmp
xchg
andb
js
pop
dec
add
ljmp
cld
and
jb
adc
cmp
imul
icebp
adc
jp
push
jne
dec
mov
cs
sbb
ds
lods
scas
les
or
xchg
jns
xlat
pop
outsl
jmp
dec
hlt
in
fsubrp
and
mov
addb
jbe
int
xor
fs
and
mov
jo
loop
sbb
pop
scas
cmp
idivl
fdiv
mov
cmp
push
ret
xor
inc
adc
sub
cmp
inc
imul
pop
inc
push
and
mov
jle
mov
pushf
out
outsb
ljmp
xor
in
ds
cmp
lcall
sub
jns
cmp
sahf
jecxz
add
and
add
pop
in
cmpsb
out
loop
mov
pop
imul
mov
cmc
sbb
je
sti
pop
int
push
outsb
jl
xor
xchg
mov
and
adc
xchg
sahf
jle
sub
movsl
pop
mov
inc
xor
pusha
jmp
bound
imul
rcrl
jle
popa
addr16
xor
lea
pop
fsubrs
push
xor
nop
dec
mov
or
imulb
movsl
sbb
dec
mov
cmp
jb
pop
lahf
mov
mov
jge
dec
mov
ret
or
imul
adc
adc
movsl
adc
pop
cld
pop
rolb
nop
pushf
jmp
cmpxchg8b
lret
inc
pop
push
test
lock
xchg
scas
dec
mov
pop
xor
pushf
or
fdivp
cwtl
pop
cmp
ja
es
or
rol
mov
pop
dec
push
jns
or
lret
mov
movsl
in
aaa
shlb
push
popa
dec
add
movsb
cmp
dec
adc
xchg
add
push
test
out
jns
andb
inc
pop
data16
jl
pop
xor
xchg
mov
loope
fbstp
lahf
scas
cwtl
int
sahf
lock
pop
push
pop
in
ror
loope
mov
or
pop
sbb
in
push
inc
aas
pop
or
sbb
adc
add
xchg
arpl
sub
ss
and
int
sbb
inc
rolb
mov
fdiv
enter
fildl
mov
je
shl
pop
popa
aad
icebp
jbe
call
inc
jp
loop
int3
jle
jl
push
sbb
movsb
les
lods
xchg
xchg
insb
hlt
das
in
jb
sti
imull
daa
ficoml
cli
in
enter
dec
mov
adc
xchg
mov
mov
ss
js
or
mov
adc
jp
insb
out
shrb
jbe
cs
mov
fiadds
xchg
mov
test
repnz
gs
xor
in
std
fimull
or
movsl
pop
lea
lods
or
adc
sbb
enter
out
pop
or
pop
mov
lds
xor
fists
add
mov
mov
repz
add
std
scas
and
sbb
out
jno
fsubrl
xchg
fbld
setle
cmp
cmp
mov
xor
pop
dec
movsl
or
inc
xchg
int
js
ret
scas
and
aad
lcall
xchg
cmp
or
pop
out
insl
mov
sbb
movsl
or
inc
fstpt
dec
and
mov
lods
xor
ret
es
cmpsb
outsl
imul
in
lahf
les
insl
pusha
enter
sbb
add
jo
push
xor
sub
insl
sti
xchg
push
xchg
sub
push
sbb
push
out
clc
shrl
clc
divb
not
mov
add
out
xor
push
jecxz
imul
mov
mov
loop
adc
or
fmuls
inc
sahf
dec
mov
push
mov
lods
test
pop
ficoms
add
ss
adc
dec
testb
push
mov
and
inc
mov
adc
jnp
jl
inc
mov
lock
mov
jp
cmp
fs
cld
sub
xor
fcmovnb
je
and
int
xchg
pop
lods
cmpsb
pop
mov
sbb
out
inc
sbb
pop
lret
lcall
rcrl
jmp
sub
mov
or
xchg
jge
inc
pop
dec
jns
mov
pop
in
aad
cmc
inc
sti
jae
dec
in
leave
sub
or
fiaddl
or
jl
or
cmp
lods
call
maxps
fidivrs
mov
add
sbb
inc
xor
mov
jle
std
test
push
bound
or
daa
dec
in
add
pusha
mov
jns
gs
mov
mov
or
push
je
je
jbe
outsl
add
and
mov
ret
pushf
andl
shll
mov
sbb
pop
mov
xor
lods
push
jp
jmp
pop
fsubs
mov
xchg
sub
mov
adc
dec
cmp
xorb
mov
xor
xchg
xor
data16
lahf
xchg
ss
sub
xchg
repnz
sbb
aam
jg
mov
ficoml
lods
out
imulb
inc
cmp
in
jmp
or
popf
mov
fwait
and
lret
inc
jmp
mov
inc
je
mov
lds
mov
or
roll
and
in
jae
sub
mov
mov
ret
lret
mulb
or
mov
xor
jmp
pop
or
shlb
cmp
sbb
movsb
push
fsubl
mov
mov
orb
xchg
pop
mov
add
inc
popa
not
pushf
arpl
imul
adc
dec
mov
cltd
sbb
mov
flds
add
and
and
enter
and
jl
inc
fbld
adc
inc
stos
ljmp
div
and
lret
add
inc
lcall
lods
fsubl
xchg
iret
addr16
mov
pop
and
daa
sub
push
push
or
push
pop
jno,pt
mov
xor
lahf
movsl
addb
subb
add
rcll
and
push
into
add
sub
scas
xlat
fnstenv
add
cmp
sub
cmp
sti
mov
lock
in
mov
add
xor
dec
lahf
sub
sub
jge
xor
pop
out
imul
cwtl
push
movsl
in
lock
shlb
add
fstl
sbb
imul
fstps
fsts
fxch
pop
scas
pop
fwait
xlat
outsl
dec
repnz
test
movsl
jmp
add
xchg
jl
ret
jns
pop
loop
push
lock
mov
xchg
clc
je
rol
jp
aaa
leave
xchg
or
int3
rcrl
repnz
aad
fwait
mov
jl
jno
es
push
mov
mov
sti
out
xor
inc
addl
sarb
int
out
add
inc
testl
inc
xor
fidivrl
insb
imul
out
cmpsb
or
pop
hlt
mov
cmp
outsb
mov
push
xchg
cmp
sbb
shrb
push
pop
jge
dec
xorl
dec
leave
pop
rcll
setp
fldl2t
loop
inc
fcompl
mov
movsl
add
push
addr16
jg
scas
sbb
or
int
jne
fwait
lcall
xor
push
mov
dec
jne
leave
jns
push
les
pop
adc
and
xchg
inc
stos
insl
pop
jle
pop
push
lock
xchg
jg
dec
cmp
nop
or
fildll
dec
sar
dec
data16
clc
xchg
mov
push
cmpl
lret
sub
cmpsb
pop
mov
pop
inc
cmp
out
sbbl
sahf
call
add
cmpsb
or
loope
das
iret
pop
sti
in
cwtd
nop
xor
mov
cmp
dec
movsb
scas
lds
push
lds
add
ret
je
push
dec
nop
scas
sbb
inc
subl
and
mov
mov
insb
xor
mov
js
cs
jbe
xchg
popf
mov
sahf
adc
mov
pop
sbb
dec
cmp
sub
adc
outsb
dec
mov
jmp
mov
jb
out
xor
call
faddp
adc
sbb
inc
aaa
cmp
pop
dec
js
xchg
sbb
cmp
xchg
rcll
call
es
shrb
pop
test
mull
rcrl
leave
fadd
scas
dec
mov
mov
les
inc
cld
stc
jne
std
inc
mov
push
cltd
sbb
pop
pop
lret
xchg
int
incb
mov
sbb
dec
in
sarb
test
in
std
test
out
jns
jecxz
xor
lret
xlat
xchg
push
add
std
adc
jge
dec
arpl
lahf
push
mov
sbb
movsb
sarb
mov
rolb
pop
jmp
jns
mov
loope
jo
or
xor
xchg
xchg
pop
jae
mov
out
lret
icebp
lahf
lret
les
jo
push
push
fwait
pop
lods
pop
pop
int
ret
arpl
inc
sahf
stos
insb
or
insb
mov
jg
and
dec
cmpsb
sub
pop
int
into
inc
movsl
dec
mov
js
fdivrp
sub
test
sbb
xor
repnz
mov
xchg
and
je
xor
stos
cld
xsavec
nop
lock
cs
sbb
out
lcall
jge
jb
or
dec
cmp
jo
adc
shlb
jge
ret
and
cmpsl
mov
stos
inc
mov
pushf
pop
lret
cwtl
xchg
inc
jmp
out
lcall
or
and
cvtps2pi
push
js
push
pop
mov
mov
xor
cmp
inc
lret
mov
inc
ds
sbb
sti
mov
xchg
popa
inc
and
xchg
cmp
xor
in
or
std
xor
mov
adc
dec
pop
jp
je
xchg
or
cltd
mov
scas
pushf
int
mov
jo
das
bnd
and
inc
popa
mov
in
test
sub
mov
push
mov
ljmp
inc
jl
fidivrl
inc
dec
sub
mov
xchg
fcmovu
sbb
mov
sbb
adc
int
pop
pop
sbb
nop
sub
xor
jecxz
push
inc
cli
push
push
cmp
push
aad
dec
test
mov
into
jb
xor
fimull
mov
adc
mov
mov
sbb
aaa
cmp
stc
xlat
cli
out
out
stos
stos
cmp
shlb
add
insb
mov
xchg
mov
fwait
daa
test
lock
mov
and
adc
rorl
inc
nop
mov
dec
mov
ja
pop
push
mov
ss
push
pusha
push
cmpb
push
push
add
mov
add
adc
or
jnp
mov
pop
jnp
add
movsb
sbb
in
movsl
loope
ret
dec
cltd
inc
push
pop
pop
int
inc
push
mov
daa
bound
scas
dec
lahf
aaa
test
push
loope,pt
mov
add
int3
data16
lock
pushf
xchg
ss
and
sub
call
mov
fs
push
sub
fnstcw
push
push
push
or
leave
mov
lea
jne
lds
and
call
add
lods
push
and
lret
sahf
add
mov
cli
mov
fwait
jo
repnz
repnz
jecxz
lea
inc
xchg
daa
iret
mov
ljmp
mov
aam
adc
insl
pop
sub
jle
pop
jbe
pop
enter
rcll
dec
lods
sbb
mov
inc
dec
les
xchg
mov
and
jmp
ljmp
gs
cmpsb
lcall
outsl
push
mov
icebp
imul
aaa
adc
cltd
repnz
in
sub
cmpsl
pop
or
mov
push
popf
lret
adc
es
bound
adc
cpuid
adc
dec
fistl
adc
xor
mov
dec
mov
test
popa
adc
and
inc
or
inc
mov
xor
and
dec
sub
pop
mov
lahf
sbb
loopne
adc
jae
jbe
xchg
scas
dec
and
mov
xor
xor
cmp
outsl
xor
xchg
cwtl
mov
mov
dec
out
dec
sbb
lret
imul
jnp
inc
loopne
popf
stos
or
push
les
stos
in
mulb
int3
leave
adc
gs
cltd
add
jg
sbb
cmp
push
cld
leave
jle
adc
push
xchg
inc
repz
in
cli
jmp
adc
scas
push
adc
xchg
jnp
ds
rorb
int3
movsl
push
rcrb
popf
mov
aas
lods
adc
and
sub
add
and
jmp
mov
pop
mov
stc
out
or
bound
shll
mov
out
jne
mov
jge
icebp
out
movsl
inc
repz
mov
jg
iret
jl
sub
fmulp
adc
pop
rclb
cmpsl
ss
pop
cli
sbb
shrb
dec
adc
jno
cmp
cmp
or
shrb
or
mov
mov
aas
sub
ljmp
add
inc
fs
and
mov
mov
shl
jns
fidivl
dec
iret
in
xchg
jp
push
add
pop
test
adc
pop
frstor
cmc
jne
or
sar
stc
stc
dec
sub
mov
jmp
xor
push
xchg
cmp
mov
addb
lret
jmp
xchg
lock
cmpsl
leave
mov
cmp
push
in
push
cld
add
jne
push
jae
push
dec
pop
pop
out
pop
adc
mov
test
lcall
or
movsb
arpl
loop
pop
mov
pop
mov
cmp
mov
sahf
sti
mov
sub
in
out
cli
int3
jbe
inc
andl
inc
add
out
es
orl
std
popa
ffree
xor
inc
loope
mov
mov
pop
dec
jle
ret
jge
push
shlb
add
iret
adc
cwtl
mov
hlt
mov
jne
aas
repz
mov
add
pop
sbbb
loop
lods
out
xchg
or
imul
push
out
insb
xchg
mov
fldl
aas
testb
jb
test
movsl
xchg
leave
pop
outsl
lds
test
pop
movsb
out
or
pop
das
and
or
test
inc
cmp
dec
adc
orl
adc
stos
test
inc
ljmp
test
ljmp
lods
xlat
xchg
enter
fucomi
es
or
adc
xor
clc
rcl
mov
call
mov
push
jge
jp
jne
push
and
push
mov
sbb
sub
push
mov
jl
cmp
adc
and
push
ret
lds
mov
pushf
inc
ucomiss
jb
dec
into
daa
push
icebp
inc
or
stc
or
dec
mov
pusha
dec
mull
clc
add
loope
xor
pop
das
fists
push
fs
and
sub
pusha
repnz
jecxz
pusha
pop
push
mov
mov
mov
loop
jo
xchg
cltd
jge
arpl
mov
aas
add
pop
loope
xchg
or
enter
adc
add
aad
dec
jl
or
rolb
es
out
out
xchg
pop
int
test
adc
mov
mov
jecxz
pop
sbb
mov
sti
push
cmp
cmp
xlat
ret
jg
loope
jp
dec
pop
sbb
loopne
lret
scas
lds
add
and
adc
mov
jno
into
int
and
xchg
mov
jmp
arpl
daa
adc
iret
sub
mov
testl
ret
bswap
aas
testl
pop
divb
enter
push
or
aaa
out
in
xchg
stc
js
stc
pop
es
or
add
sub
mov
stc
add
repnz
and
pop
xchg
push
cwtl
movsl
or
enter
xor
adcl
jmp
xchg
cmp
add
int3
pop
jbe
pop
mov
add
addb
add
adc
call
les
int
pop
sarl
lcall
push
shll
clc
mov
inc
and
lahf
and
sub
xor
and
scas
push
or
test
int3
and
arpl
in
cmc
icebp
sub
xor
sar
int
test
sbb
icebp
mov
jmp
jle
pop
mov
jnp
nop
sub
and
and
fadd
mov
shll
push
mov
push
movsl
push
fwait
pop
jns
movl
es
test
fcom
mov
sarl
out
jmp
xchg
les
xchg
jl
pop
cmpsb
inc
inc
iret
out
push
mov
or
fldl
pushf
out
lock
mov
jecxz
rcrb
popa
mov
lret
pop
gs
call
decl
cmpsl
jno
dec
fisttps
arpl
cltd
or
pop
fldt
xor
les
fimull
cmc
int3
add
vpsrlq
inc
cmp
mov
push
mov
cmp
cmp
loopne
pop
out
sbb
inc
jle
sbb
sbb
les
enter
push
xchg
sub
mov
adc
jb
push
lods
out
push
iret
ja
inc
push
aam
jle
das
sub
mov
int
push
cmp
lahf
mov
stos
sahf
xchg
pusha
cld
adc
cmp
add
sub
mov
jge
loope
std
jno
ja
std
ret
outsl
or
add
xchg
mov
das
lcall
test
pop
scas
outsl
insl
dec
mov
mov
jl
mov
cltd
mov
les
pop
ljmp
cmp
mov
sbb
into
stos
ret
push
mov
pop
mov
sbbl
mov
mov
jns
add
clc
lea
orb
fmull
and
test
jae
ud2
mov
and
pop
das
pop
xor
mov
add
jb
fxch
pop
inc
pop
push
mov
andb
inc
bound
and
mov
icebp
pop
ds
or
idivb
mov
fimuls
sti
loopne
push
movsb
and
mov
lret
pop
fstpt
aas
add
and
mov
mov
mov
movsb
pop
mov
pextrw
inc
push
lock
andl
sarl
pop
outsl
jmp
fsub
shlb
out
gs
jg
and
lret
loopne
jl
jnp
sbb
or
pop
mov
fs
insb
add
in
mov
cltd
sub
jbe
cmovle
push
dec
xlat
lret
shll
int3
inc
outsb
jnp
add
cmpsl
gs
cmp
psubusw
rol
add
push
ja,pn
sar
mov
and
lea
cltd
or
fs
sar
mov
jle
ljmp
nop
movsl
cs
icebp
push
stos
or
push
mov
push
lods
mov
jmp
cwtl
ret
hlt
jno
sbb
pop
sarl
loop
insb
push
ss
stos
std
mov
dec
mov
stos
adc
cli
cmpsl
mov
rolb
xchg
adc
cmc
cmp
xor
inc
repnz
jmp
movsl
div
imul
movsb
mov
shrl
xchg
jp
in
mov
fistps
lods
jg
test
xchg
mov
cwtl
pop
dec
cmpsb
sbb
daa
mov
loop
cmpsl
xor
pusha
divb
push
mov
push
daa
pop
sti
lahf
inc
mov
cmp
mov
or
orb
jae
je
lock
in
enter
cs
mov
in
mov
jl
shll
dec
test
jns
ds
mov
mov
xchg
pop
jns
mov
insb
cmp
pop
and
fcmovnu
adc
addl
lretw
daa
adc
mov
in
sbb
fnstcw
dec
push
xchg
stos
jne
inc
mov
ja
fdivrs
adc
xor
lret
mov
andl
cltd
cwtl
jo
and
into
mov
mov
dec
jo
lret
push
fdivs
lods
in
stos
mov
iret
dec
jg
xchg
shlb
int3
mov
movsb
xorb
mov
xor
bound
jl
push
rcrl
je
or
and
scas
or
loope
call
popa
push
addb
movsl
inc
imul
or
sti
mov
xlat
cmc
mov
pop
adc
mov
das
mov
es
jbe
pop
cwtl
mov
repz
or
cmp
jns
cmp
mov
adc
ss
sbb
dec
insb
and
sahf
dec
les
cmp
sub
cmc
sbb
lea
jno
xchg
xor
call
das
out
stc
and
les
je
div
mov
mov
add
mov
comiss
push
jnp
and
mov
push
loope
ret
mov
xor
lock
repz
jle
or
jbe
dec
lcall
mov
mov
adc
lahf
cmpsl
xor
xchg
mov
pusha
cmp
je
mov
adc
mov
push
pop
test
push
pop
in
xchg
mov
sbb
nop
xchg
in
jl
jns
sbbl
repz
movsl
or
mov
adc
xchg
sub
int
cs
jae
bnd
jno
mov
jno
push
sbb
mov
mov
sub
mov
aam
mov
cltd
ret
test
pushl
int
lahf
mov
inc
cmp
ficompl
or
push
inc
xlat
pop
test
sbb
ret
push
cmp
repnz
iret
bound
pop
sub
frstor
push
and
mov
ds
sbb
mov
cld
popf
xor
cli
rolb
jo
leave
mov
push
adc
cmpsl
dec
xchg
lret
cltd
repnz
mov
lods
sub
int
pop
mov
jl
dec
push
sbb
push
sahf
loopne
and
pop
cmp
and
leave
cwtl
lahf
mov
nop
cmp
fisttps
mov
pop
addr16
mov
and
movq
lret
mov
cwtl
imul
push
add
ja
cmc
jno
cmpsb
lods
push
outsb
or
ljmp
cmp
jg
adc
xchg
repz
cmc
call
lds
xor
adc
mov
inc
vpsubw
sbb
sti
outsb
xor
mov
daa
xor
test
popf
and
mov
outsb
call
adc
inc
pop
cmc
repnz
fnsave
daa
int
jbe
out
and
dec
mov
push
maxps
lds
test
rcll
add
outsb
movsb
sub
ds
mov
pop
cmpsb
add
xor
pop
jns
inc
cmp
outsl
jae
sbb
cmp
aad
push
outsb
cltd
aaa
push
sub
stc
pop
adcb
stc
cwtl
test
out
cmc
adc
push
sub
cmova
js
push
mov
pop
out
sub
mov
filds
mov
jae
jge
fwait
jo
movsl
cmc
lods
je
int
jecxz
ljmp
nop
sub
iret
aaa
loop
insb
xlat
mov
jne
fisubrs
shlb
adc
fucom
jg
sbb
pop
and
out
movsl
addr16
repz
lcall
fildll
fwait
mov
rcrb
mov
fmull
dec
sti
movsb
sub
mov
ja
add
imul
aaa
mov
push
shl
in
movsb
sub
cmp
sbb
push
jns
xlat
test
repz
mov
dec
cli
aad
pop
mov
push
ds
out
lret
push
scas
xchg
enter
inc
loope
jg
jmp
sbb
jmp
out
push
test
jnp
fidivrl
or
cs
sbb
adcl
into
pusha
mov
sub
jns
push
jbe
dec
mov
jecxz
rcrl
rcrl
test
inc
xorl
pop
and
mov
xchg
fs
mov
jp
cmpsb
push
test
push
jge
xlat
jp
shlb
movsl
pop
and
lds
stos
pushf
xchg
sub
aas
adc
out
mov
js
xlat
add
fcomp
cmc
mov
imul
xchg
shl
mov
loopne
movsb
test
and
loope
aaa
gs
or
jne
dec
jle
mov
xchg
and
repz
mov
js
aaa
fstpt
std
or
xlat
pop
movsl
push
mov
jno
lds
pop
add
add
mov
idiv
movb
or
push
aam
in
dec
mov
adc
out
fidivrs
aad
lcall
xor
push
dec
hlt
dec
shr
push
aas
mov
in
into
mov
mov
fldenv
inc
push
lds
cmc
and
xor
fcomi
das
fstpl
dec
movswl
insl
sbb
adc
mov
rcrb
lret
adc
and
into
mov
movsb
xor
jp
loope
jns
push
mov
pop
arpl
int
arpl
lret
imul
jmp
or
enter
lea
js
adc
sub
lea
fstpl
insl
push
jb
inc
cmpsl
movsb
cltd
mov
xor
pop
stc
push
cs
fucomi
and
test
xchg
add
cli
pusha
sub
mov
imul
and
movsb
lods
xor
mov
in
dec
push
rcrl
test
je
in
in
xchg
fbstp
adc
aam
shlb
outsb
and
loopne
std
add
mov
imul
cmp
outsl
cli
je
lret
cmpsl
cmp
mov
cmpl
lea
test
call
mov
lahf
pop
jnp
popf
mov
dec
jb
pop
jb
cmpsl
inc
cmc
jp
jo
cs
jge
imul
sbb
aaa
fidivl
lret
xchg
pop
mov
imul
mov
jo
ud2
inc
mov
jge
cmc
inc
push
daa
ret
imul
cld
aad
fstpl
or
push
sbb
xor
inc
or
mov
jp
int3
or
add
shrb
pop
movsb
movsl
xor
jp
cmpsb
divl
fs
mov
cld
test
push
dec
sub
call
cmpsb
insl
push
pxor
fbld
stc
ret
jl
shlb
sti
xchg
loope
test
add
movsb
dec
jl
and
mov
cmp
push
cs
lock
inc
popa
cmp
in
push
mov
pop
mov
xor
bound
push
insl
aaa
cld
pop
add
data16
daa
push
je
test
sbb
and
push
cmp
mov
arpl
mov
das
mov
jb
or
int
fwait
sub
jl
enter
push
mov
adc
loopne
pushf
pop
js
jg
loope
popa
sar
jae
ja
lret
xchg
icebp
stc
jg
adc
dec
sti
ds
add
fmuls
pop
jns
out
cs
clc
cld
jns
lods
mov
stos
jg
mov
movsb
pushf
mov
addb
adc
fdivrp
xchg
jle
lock
pusha
jl
sub
mov
mov
adcl
dec
xchg
cmp
out
push
fsubrl
test
popf
pop
aas
dec
test
cs
push
and
sar
shrb
and
add
fildll
je
rol
lret
sbb
dec
bound
mov
in
out
jmp
sahf
hlt
mov
cmpsl
and
sti
adcl
out
add
jnp
cmp
mov
pop
ljmp
lock
leave
mov
repnz
movsl
shll
mov
pop
mov
andnps
sbb
nop
cwtl
push
cs
cmpsl
rclb
pop
in
and
sbb
jne
jnp
ljmp
ja
imul
subl
jmp
mov
outsb
xor
inc
dec
leave
push
stc
xchg
in
sub
add
pop
dec
push
push
lcall
sbb
cmp
mov
lods
xor
inc
adc
xor
int3
in
mov
int
cltd
push
adc
loopne
or
mov
xor
inc
cmp
ret
insl
sub
test
test
fwait
test
jp
push
outsb
in
and
mov
cmp
pmaxub
fstp
cltd
jno
lock
cmp
lret
push
mov
adc
push
pushf
pop
jbe
cwtl
out
popa
sbb
in
or
shll
popa
dec
jns
fisubrl
pop
test
and
clc
xor
pusha
pop
cmp
roll
outsl
push
int3
xchg
inc
dec
dec
push
add
pop
and
push
mov
not
sti
int3
inc
lods
xor
cwtl
mov
cwtl
and
mov
jnp
test
sarl
out
call
push
andl
cmp
push
lods
dec
or
mov
dec
mov
dec
sub
std
mov
iret
xor
lcall
xor
xor
lcall
jmp
lcall
push
inc
push
repnz
int3
int3
mov
incl
lds
push
pop
pop
xchg
mov
inc
fisubrl
cmp
fld
jo
shrb
xor
dec
jb
add
insl
xorl
jbe
cmp
shlb
mov
int3
cmp
ret
imul
pop
inc
cmpsl
je
out
mov
mov
sub
push
mov
jno
push
int3
lahf
cmp
sub
jns
shrb
xchg
aaa
popf
dec
cwtl
rdpmc
xchg
pop
mov
cltd
cld
push
or
iret
mov
push
lock
xor
out
add
push
jnp
sub
mov
and
jnp
adc
mov
inc
dec
loope
mov
dec
adc
data16
sub
add
add
push
cmp
pop
pop
cmp
jmp
pushf
or
push
or
push
jmp
sbb
jbe
mov
dec
and
ss
aas
xor
rcll
pop
stos
les
out
mov
insb
mov
inc
in
call
shl
nop
bound
cmp
add
es
push
ffreep
lods
movl
sbb
decl
dec
aad
or
clc
jb
xlat
repnz
gs
sub
cmpl
dec
add
lret
outsl
mov
cmp
mov
mov
jno
scas
out
dec
outsl
jge
out
dec
cmc
adc
adcb
aaa
movsb
xchg
xor
jg
or
iret
jg
mov
mov
outsb
or
imul
pop
mov
daa
stos
lds
push
out
es
ja
push
push
and
cmp
out
sarb
les
jmp
mov
dec
testb
sub
jb
dec
ror
leave
mov
loope
loop
das
mov
imul
mov
jecxz
aad
dec
fcoms
bsf
arpl
mov
jp
rcl
mov
insb
cmp
cmp
clc
addr16
mov
mov
jae
xor
push
lea
sbb
stos
inc
loop
sub
jge
js,pn
sti
out
jge
dec
out
das
call
arpl
bound
sbb
push
loopne
push
xchg
sub
iret
lds
mov
sbb
or
aad
sarb
jo
xchg
or
push
mov
dec
sub
aam
mov
das
push
jp
jle
or
mov
mov
mov
add
jno
xchg
int
shrb
into
std
dec
xchg
jnp
imul
aam
add
mov
inc
xchg
inc
push
fiadds
sub
ss
jl
adc
lret
insl
fs
mov
std
es
jecxz
xor
jecxz
out
inc
ret
ret
filds
add
mov
cwtl
cs
inc
aaa
in
dec
dec
or
xchg
push
sub
ss
lea
mov
inc
jnp
cmpsl
dec
cmpl
inc
ljmp
mov
mov
dec
push
xor
xchg
push
pusha
mov
loope
jge
pop
dec
fcomi
std
iret
dec
and
shr
cltd
pop
mov
mov
lods
pop
std
dec
ja
pop
roll
into
push
xorb
repnz
clc
lret
mov
hlt
rdtsc
js
xchg
pushf
cs
arpl
sub
sahf
adc
sahf
dec
mov
aad
or
xor
jnp
jecxz
jo
int3
dec
inc
adc
push
lcall
ret
mov
in
ret
inc
leave
das
insl
sti
les
cmpxchg
jmp
fisubrs
rcl
loopne
mov
mov
inc
pop
cmp
in
fdivrl
and
imul
call
mov
xor
xlat
cmc
sbb
lds
or
pop
push
jbe
cmpsb
jmp
cmp
mov
pop
aad
test
ss
push
in
and
movsb
adc
cltd
xchg
push
int3
mov
mov
fstps
push
adc
shl
in
or
int
jle
add
dec
adc
xor
in
mov
mov
stos
js
mov
hlt
mov
test
repnz
xor
dec
mov
xor
mov
push
incl
jbe
ret
jge
std
nop
push
sub
mov
repz
addl
or
out
pop
push
imul
out
sub
fiadds
inc
aad
mov
mov
cltd
ds
aas
lock
mov
daa
mov
dec
repz
ljmp
iret
test
daa
mov
adc
and
xchg
sbb
int
fisttpll
xchg
rolb
loopne
lock
fdivl
xor
loopne
int3
and
pop
push
jg
sbb
mov
jo
pop
stos
xor
shll
mov
fldt
lock
aad
xor
cvtps2pi
cmp
arpl
adc
xchg
scas
adc
jb
out
xor
insl
in
xor
adc
mov
cmpsb
popa
mov
jae
cmp
dec
out
mov
loope
js
jg
sbb
lods
mov
mov
sub
sbb
mov
cmc
push
negb
mov
or
fisubrs
add
inc
mov
push
fsubr
push
fnstcw
xchg
cmp
shlb
in
xor
fiaddl
push
xor
adc
jp
pop
sbb
sub
sbb
pop
std
mov
inc
xchg
insl
dec
pop
test
and
xchg
cmpsb
cmp
iret
cmc
pop
sbbl
mov
loop
xor
outsl
ds
dec
imul
sub
bound
inc
and
pop
fsubrl
imul
mov
subb
push
iret
sbb
sub
rorb
stos
or
stos
into
jle
stc
pop
push
inc
sbb
mov
cmp
sahf
sti
in
sbb
push
add
js
cmp
mov
into
sub
sti
mov
pop
daa
fsubs
pop
mov
icebp
mov
out
popa
test
daa
push
jb
gs
push
and
andb
mov
lret
fiadds
cwtl
inc
shll
ss
mov
add
and
push
paddb
enter
jecxz
andl
and
xchg
pop
movsb
cmp
jmp
loope
pusha
ja
fnstsw
jb
adc
jns
not
ret
mov
push
mov
adc
jne
sbb
add
bound
imul
cmp
cmpsb
xchg
int3
lds
sahf
adc
dec
in
xor
scas
stos
mov
pop
js
addr16
xchg
and
mov
mov
imul
dec
jno
jle
jl
mov
push
push
dec
inc
pop
inc
fnstsw
loop
jns
xlat
and
addr16
not
adc
fistps
into
push
cmc
lock
enter
orl
in
gs
scas
js
mov
jbe
fdivrl
sbb
push
or
das
push
ss
fwait
movsl
mov
jb
inc
cwtl
xor
movsl
ss
add
mov
sbb
in
mov
jp
xchg
loopne
int
sbb
bound
nop
jg
adc
test
jno
leave
ret
mov
ja
mov
jae
inc
in
add
jmp
ljmp
inc
movsb
jb
loop
test
mov
push
cmc
pop
clc
mov
mov
add
aam
jg
cmp
cmp
negb
std
or
or
pop
lret
mov
nop
loope
mov
xlat
or
and
jne
movsl
das
pop
hlt
and
dec
sbb
jle
les
jne
sbb
aam
or
stc
xchg
mov
fnstenv
jb
mov
add
outsb
leave
loop
mov
std
add
pop
dec
and
sar
std
shrl
mov
jnp,pt
mov
xchg
dec
sbb
and
lret
rcl
jne
jecxz
xor
or
out
insl
inc
inc
cltd
in
data16
out
int3
std
jmp
mov
pop
pop
bound
pop
test
outsl
inc
clc
xchg
pop
call
jnp
xor
lods
add
push
jno
rcrl
dec
pop
mov
es
ljmp
xor
lods
or
shlb
jns
jmp
pop
lret
lds
rolb
push
inc
cmp
and
cs
push
pop
xchg
lret
aaa
out
pop
or
dec
xchg
xor
dec
iret
popf
ljmp
xor
xor
push
je
xor
pop
adc
cwtl
ljmp
lret
insl
cmpsb
pop
adc
adc
jbe
mov
mov
push
fwait
aaa
cmp
push
or
push
and
negb
js
fsubs
in
xchg
mov
or
and
and
pop
je
jp
mov
fisubl
movsb
mov
add
ret
sub
and
rcrb
mov
mov
insl
cmp
clc
xor
add
xchg
cmp
xorb
push
loopne
sub
lds
fwait
lods
add
out
jg
cwtl
mov
in
outsb
cli
shrl
cmp
or
lret
cmp
movsl
call
movsl
push
mov
xor
mov
xchg
shl
mov
inc
imul
lret
cmpsl
es
push
adc
xor
cmpsb
clc
mov
stc
jae
jg
hlt
adc
pop
stos
or
push
test
jns
pushf
dec
mov
adc
ret
xchg
mov
outsl
adc
pop
lds
jge
jns
fiadds
or
jmp
shl
mov
lods
adc
test
mov
cltd
divl
nop
push
mov
fstl
shrb
add
or
add
push
mov
or
mov
fmuls
and
outsb
jecxz
mov
xchg
inc
dec
sub
adc
cs
rclb
pop
repnz
cmp
dec
test
xchg
cmp
enter
and
jcxz
fldt
popa
adc
ss
inc
add
or
adc
adc
jb
int3
pop
sub
daa
fidivrs
xabort
xchg
mov
sbbl
xlat
sub
add
jnp
mov
sarb
dec
hlt
shll
test
or
sub
add
mov
jns
mov
loope
jecxz
cmpsl
cwtl
xor
add
sub
jb
xchg
imulb
and
notb
aas
fldenv
mov
gs
add
and
pop
xor
mov
stos
mov
mov
push
pop
mov
pop
sub
and
movsb
jmp
in
lcall
fidivl
outsb
xor
sbb
fdivrp
or
pushf
outsb
dec
sbb
into
lret
xor
aad
inc
lahf
ret
stos
xor
cli
add
rorb
shl
xchg
cmpsb
xchg
stc
jno
popf
sarl
mov
cmpb
sbb
mov
movsl
pusha
xchg
ret
mov
dec
nop
fnstcw
mov
mov
loopne
fisttpll
pop
mov
jl
stc
mov
inc
mov
cmp
xor
xchg
bound
or
ret
mov
cmp
hlt
adc
sahf
ss
push
sbb
adc
pop
inc
push
add
jp
xchg
mov
and
adc
fdiv
and
stos
test
in
add
popf
pop
and
sbb
xchg
lret
mov
push
adc
out
adc
fsubrl
nop
mov
add
loopne
mov
std
jmp
add
test
icebp
adc
psrad
into
fsts
sub
adc
push
insb
stos
mov
out
push
lods
cmovp
pop
mov
sahf
mov
loope
jo
and
jno
sub
inc
loope
leave
je
cmp
xchg
mov
pop
dec
mov
xor
les
and
lcall
call
xor
and
js
or
loope
push
fwait
out
aaa
mov
mov
sbb
repnz
loopne
loope,pn
xchg
imul
push
leave
rcrl
mov
fwait
pusha
and
cmp
mov
loopne
or
push
mov
add
cli
ss
and
cld
das
jmp
inc
repz
insl
data16
into
lcall
mov
inc
push
js
mov
shrl
mov
test
call
dec
addr16
xchg
outsl
cmp
mov
cmp
jns
mov
inc
add
dec
call
arpl
jecxz
xchg
jbe
popa
sbb
out
add
or
loopne
outsl
add
ljmp
sbb
cmpsb
push
int3
shlb
sub
int
cmp
pop
push
ja
mov
mov
push
cli
ja
pop
pusha
push
pusha
pop
push
dec
cmp
insb
push
push
adc
ljmp
push
mov
imul
xor
and
mov
xlat
pop
jmp
ljmp
mov
rcr
hlt
pop
lods
cld
sti
push
dec
adc
inc
daa
fcmovb
push
push
orb
inc
jns
inc
mov
push
aas
cmp
fisubl
sub
cmpsb
jecxz
inc
stos
push
adc
pop
call
push
pop
test
clc
xchg
xor
mov
cltd
mov
scas
push
stc
inc
jno
cwtl
out
dec
repnz
jmp
cmp
mov
jge
movsb
lods
je
cmp
xchg
je
cli
fs
lret
pop
push
push
mov
icebp
rorb
cmp
xchg
xchg
test
call
imul
pushf
out
lods
mov
jle
rcl
addb
rorb
pop
lahf
negb
mov
pushw
bnd
ret
out
loop
push
sub
pop
sub
and
divb
lret
arpl
sbb
adc
nop
mov
xor
rcll
push
mov
clc
xchg
pop
test
cmpsb
mov
sub
int3
stos
jmp
jle
shll
xor
scas
leave
enter
imul
les
inc
pop
pop
push
test
mov
pushf
push
scas
pop
leave
inc
xor
push
xor
out
cld
popl
xchg
or
fsubl
fldenv
gs
fcoms
sub
inc
fnstcw
dec
xchg
dec
aad
test
sarl
fidivrl
iret
aaa
nop
push
sbb
pop
mov
sub
lcall
repnz
inc
test
fistpl
lcall
test
push
out
fcoml
imul
inc
mov
jno
fisubs
mov
scas
loop
fimuls
stos
inc
xchg
or
or
ret
sub
inc
xchg
int
stos
jne
call
subb
inc
sbb
mov
mov
divl
in
outsb
ds
bound
cmp
icebp
mov
xor
jmp
push
adc
xor
mov
add
cli
std
insb
out
test
fdivrl
sub
mov
loopne
mov
cmpsl
scas
push
repnz
dec
jmp
fcomps
lods
imul
dec
push
pop
xor
insl
roll
push
nop
out
ficompl
jnp
stc
ror
cmp
or
or
dec
adc
dec
aaa
je
lods
shlb
push
lret
es
lods
cmc
and
cld
invd
mov
push
pop
add
pushaw
bound
int3
loope
loop,pt
mov
dec
push
sub
js
jg
dec
std
lcall
mov
aam
cltd
or
push
addr16
xchg
jl
xchg
cmp
stc
clc
lea
popa
xor
enter
add
sub
pop
and
xchg
mov
cmpsb
cmp
cmpsb
out
pusha
push
das
sbb
inc
lret
fldcw
jl
push
out
add
adc
mov
pop
ret
aad
dec
nop
sub
sti
stos
sub
or
mov
cli
mov
pop
leave
insl
mov
outsl
mov
xor
pop
fwait
lret
mov
out
xlat
scas
cmpsb
xchg
roll
inc
bound
shl
jg
sarl
adcb
orb
leave
lcall
sbb
sahf
outsl
arpl
inc
mov
mov
push
xor
pusha
inc
sub
lock
xchg
arpl
jb
dec
pop
inc
pusha
adc
xchg
mov
jne
fwait
repz
and
psadbw
push
je
stc
mov
imul
pop
add
dec
mov
xchg
sbb
mov
stos
subl
fldt
aad
push
cmp
cli
sbb
ret
cmp
mov
aaa
cltd
fwait
inc
pop
stos
test
adc
push
cmc
pop
push
or
push
adc
call
add
pop
dec
mov
mov
adc
jp
icebp
pusha
leave
jbe
std
in
mov
push
cmp
mov
outsl
incl
jbe
jae
das
mov
mov
call
add
clc
scas
enter
mov
inc
xor
sbb
outsb
mov
scas
mov
mov
adc
rcr
push
or
push
dec
in
push
jge
aaa
stc
jle
test
adc
out
sub
push
call
cmp
shlb
repz
shrb
or
mov
mov
inc
xchg
cli
je
pop
outsb
cmp
push
aaa
sbb
test
cltd
mov
push
out
mov
cmp
add
pop
mov
push
push
inc
lret
jne
pusha
fildll
xchg
shl
loope
aam
xchg
adc
cwtl
adc
or
lahf
adc
jb
adcl
das
push
movsl
sbb
mov
pop
add
inc
ja
xor
inc
addr16
lods
sbb
loope
cmp
test
cmp
pop
xchg
xor
xor
dec
stc
mov
fwait
pop
js
inc
sarl
push
es
sub
sbb
adc
sbb
adc
mov
jmp
hlt
repz
aas
lods
jnp
xor
sub
cmc
jl
xor
inc
mov
jnp
xor
pop
or
popa
xchg
mov
mov
sbb
cs
jo
daa
out
mov
push
mov
adc
data16
dec
rorb
jge
push
pop
cmp
mov
into
scas
imul
xor
mov
int
ss
hlt
aas
sub
xorl
xchg
fidivrl
cmp
call
push
fcomps
jle
pop
pop
xor
es
mov
je
adc
mov
cmp
sahf
roll
inc
push
lret
adc
cmp
mov
jg
pop
dec
push
push
sub
test
mov
jb
fs
and
pop
xchg
inc
jge
scas
cld
dec
push
movsl
repnz
mov
scas
sti
fiadds
loopne
int
pop
adc
mov
mov
rcrl
notl
aam
pop
fistps
orb
pop
ds
loop
dec
push
std
cmpsb
ja
push
dec
in
and
mov
lods
inc
shll
xchg
lock
int
inc
sub
test
aas
mov
adc
sbb
xchg
ret
jae
dec
je
int3
xchg
outsb
nop
xchg
and
pop
push
std
imul
inc
mov
sbb
adc
jno
out
jb
arpl
mov
nop
inc
push
pop
insl
pop
mov
fsubrp
test
aad
ja
shlb
data16
loope
jp
push
arpl
mov
dec
leave
mov
insb
scas
in
addr16
lcall
cli
jbe
inc
xor
arpl
mov
xchg
mov
mov
cs
mov
addl
push
inc
jl
icebp
mov
pusha
jns
sub
ret
out
cs
addr16
or
icebp
pusha
adc
lods
outsl
mov
jp
cld
fld
add
ja
std
pop
sbb
stc
aas
fxch
orb
xchg
cld
fwait
lds
clc
repz
nop
mov
xchg
xor
aad
ret
dec
pop
pop
or
mov
or
data16
pop
ret
fcompl
lds
shlb
push
aam
push
inc
jb
call
jns
push
xchg
loopne
xchg
movsb
iret
stos
mov
dec
popf
cli
or
inc
add
push
sub
add
xchg
les
xchg
pop
ret
or
sbb
cli
pop
into
pop
pusha
sub
xchg
shrl
mov
jle
cmp
cltd
mov
push
outsl
xchg
xor
fnsave
inc
pop
test
rep
pop
and
lock
xor
mov
divl
pop
xor
out
push
rcrb
xchg
inc
and
filds
mov
mov
imulb
mov
pop
mov
lret
dec
ljmp
jmp
call
mov
sub
adc
pop
mov
cmp
cs
loop
cmp
and
pusha
decl
gs
movsb
cmpl
insb
sub
pop
lods
out
mov
das
sub
sti
adc
add
mov
notl
imul
dec
lock
jmp
shr
scas
and
mov
mov
mov
loop
addb
loop
cwtl
lahf
jno
push
outsl
mov
or
std
jecxz
inc
fsubs
xchg
dec
mov
mov
pop
outsl
mov
cmp
cmc
or
xor
pop
popf
add
fwait
lods
adcb
and
dec
jle
enter
movsl
xchg
mov
jl
dec
ret
sbb
rolb
popf
or
out
jbe,pt
stos
jge
xor
push
sub
fwait
dec
lret
jg
lcall
xchg
scas
fwait
xlat
je
jmp
and
sub
jg
mov
fldcw
sahf
jl
add
inc
push
cmc
sbb
pop
dec
cwtl
stos
xchg
mov
or
xor
push
lcall
shl
jg
sbbl
lret
xchg
add
inc
out
movsb
or
test
jo
lock
pop
add
outsb
lret
or
push
xor
stc
sti
mov
in
fcompl
mov
iret
sbb
pop
stc
cmp
daa
jecxz
pop
push
adc
aas
nop
clc
repz
sbb
inc
or
adc
xor
stos
pop
popa
jl
lret
xor
in
or
sbb
arpl
ss
sub
xchg
xchg
and
es
pop
das
shll
adc
insl
aam
repz
rolb
cmp
rcrb
add
stos
mov
aad
mov
out
out
adc
jp
push
push
ret
fwait
xorl
shll
ss
arpl
pop
stc
cmp
jmp
jne
jl
jmp
fwait
cli
sbbl
sbb
jmp
xchg
dec
loopne
fwait
xchg
mov
dec
cmc
int
inc
orl
sti
pop
mov
scas
push
shlb
outsb
mov
lret
ljmp
jl
and
and
ss
sub
sub
sub
or
es
ds
pop
xor
mov
mov
ret
mov
or
idivb
pusha
clc
adc
add
lret
icebp
mov
mov
add
xchg
dec
xor
adc
and
xchg
xchg
sbb
cmc
lds
sub
mov
stc
clc
adc
mov
add
adc
imul
pop
sbb
mov
sbb
sub
aaa
xchg
xchg
call
test
ljmp
dec
sahf
xchg
and
mov
addr16
aaa
sbb
and
and
jle
xchg
pop
nop
lret
jns
insl
inc
lret
cmp
aas
add
faddl
cs
sub
jl
popa
mov
into
and
cmp
ljmp
lret
mov
mov
out
mov
movsl
loope
mov
daa
dec
xor
bound
dec
cmpsb
mov
sbb
movsb
out
shll
data16
imul
and
push
adc
mov
fstl
push
jno
nop
pop
adc
xlat
jle
adc
jecxz
push
jecxz
pop
and
into
add
pop
xchg
and
mov
xchg
jmp
push
or
lods
and
test
mov
mov
repz
dec
cmp
inc
addr16
andl
push
cltd
mov
mov
lods
lods
jp
adc
push
sbb
daa
push
stos
repnz
adc
lock
loope
ds
dec
outsb
loopne
repnz
lds
push
leave
fwait
push
adc
ljmp
push
xlat
outsl
std
out
sub
mov
movsb
adc
lcall
mov
push
fdivrl
out
dec
arpl
ljmp
mov
mov
dec
or
lods
pop
nop
out
jg
add
aam
pop
rcr
insb
ljmp
dec
lcall
lret
push
adc
xchg
inc
or
cmp
xchg
sahf
jle
push
jae
shrl
cwtl
jo
jbe
sbb
imul
push
mov
dec
add
xchg
sbb
mov
sbb
pop
div
les
xlat
xor
stos
outsl
inc
jmp
push
push
lret
jecxz
jmp
test
dec
mov
dec
dec
and
xchg
jmp
mov
add
push
lret
push
movsb
inc
in
cmpsl
aam
fstl
and
fildll
rorl
push
rorb
dec
lods
addr16
pusha
arpl
sbb
popf
sbb
push
aas
cmpsl
push
and
push
push
pop
cmp
cmp
jecxz
push
mov
push
notl
jo
les
mov
out
mov
inc
mov
ret
cltd
bound
in
mov
loopne
or
jb
cwtl
adc
pop
rclb
or
in
and
aam
clc
imul
daa
aad
mov
and
jo
cli
lret
adc
or
add
movsb
inc
mov
xor
sarb
xchg
out
push
mov
add
pusha
in
pop
icebp
mov
add
add
add
and
inc
insb
addr16
xchg
add
cwtl
sub
xor
shl
call
sbb
loop
add
lret
mov
pop
popf
xchg
mov
cmp
sar
lahf
push
fiadds
push
cmp
mov
fidivrl
mov
leave
add
popf
sub
imul
ret
fists
cmp
js
mov
or
lcall
mov
jno
cmp
lock
pop
nop
in
in
xchg
ja
sarb
jmp
repnz
add
fcoms
sub
jbe
insb
jg
xor
fiaddl
mov
xor
pop
inc
push
call
mov
sub
in
mov
xchg
jbe
cmc
xchg
fmull
outsb
shlb
mov
or
jp
sbb
mov
jg
cmpsb
mov
cmpsb
les
stos
jb
loope
clc
jp
std
push
out
dec
loope
or
dec
adc
popf
pop
pop
fs
and
lret
add
xchg
cwtl
jp
stc
add
rcrb
stos
in
pop
pushl
dec
push
enter
xchg
cmpsb
dec
xchg
inc
push
out
imul
cmp
or
mov
inc
pop
leave
imulb
dec
cmp
pop
cmp
jp
push
fldt
shll
sub
dec
outsl
iret
mov
mov
xor
jnp
lret
fwait
ss
adcl
mov
dec
fimull
adc
sbb
mov
inc
nop
les
fildl
mov
mov
sub
pusha
xchg
dec
sarb
int
xor
push
mov
outsl
sbbb
ja
popf
cmpsb
cmp
cmpsl
mov
adc
add
and
jp
mov
mov
inc
jmp
rcr
mov
aam
jo
not
shl
or
rcrb
shrb
jl
pop
jno
sbb
mov
fisubrl
jmp
mov
push
lret
sub
cmp
inc
inc
ss
pop
xchg
add
jecxz
loopne
add
mov
adc
es
scas
rorb
sbb
pop
data16
xlat
fistl
das
and
sbb
orb
test
loop
sbb
xor
and
inc
pop
sbb
inc
cmc
test
loop
rol
out
imul
std
jg
and
or
cmp
inc
pop
xor
inc
jne
push
lahf
pop
test
bound
daa
and
leave
out
imul
in
cmp
test
and
xchg
lds
push
nop
push
cmp
and
lods
sub
push
leave
mov
repnz
push
adc
in
andl
addr16
xor
lahf
mov
xchg
lret
ret
mov
iret
cmp
aad
inc
push
popf
sub
mov
pop
push
fwait
cmp
cmpsl
mov
xor
xchg
push
lea
cmp
and
lahf
xchg
outsb
lods
xor
es
push
jl
inc
push
xor
in
mov
lahf
xlat
outsl
pushf
and
rep
dec
sub
push
mov
pop
andl
jbe
push
sub
xchg
ret
sub
popf
rsm
lods
pop
fists
arpl
sbb
pop
je
dec
pop
sbb
mov
add
xor
xor
inc
adc
out
fdivrs
stos
repnz
mov
pushf
lds
sbb
clc
jnp
pop
out
cmpsb
shll
xor
or
or
je
mov
cmc
call
test
lock
add
mov
aam
jbe
dec
push
push
in
mov
push
outsb
jbe
jbe
sub
adc
jg
int
xor
stos
fsubrl
sub
mov
into
fadd
mov
inc
in
sub
dec
fnstsw
jecxz
dec
sub
ror
jp
scas
out
push
sbb
inc
pop
xchg
imul
mov
test
cmc
test
mov
sub
inc
add
xor
cmpsb
loop
popf
out
shrb
mov
mov
pop
sub
jecxz
inc
adc
mov
test
cmpsl
or
out
inc
aas
repz
or
mov
push
loop
sub
jge
xchg
lock
mov
fcom
inc
stos
jb
cmpsb
inc
clc
loop
pop
inc
es
sbb
adc
pop
dec
mov
icebp
fldenv
dec
adc
mov
sbbl
mov
shrl
jge
hlt
repnz
lcall
mov
sarl
push
fsts
jecxz
or
dec
mov
les
cltd
aaa
pop
shlb
test
cmp
mov
in
call
push
in
cltd
and
pop
pop
cmpsl
xchg
jmp
fs
lds
jmp
insb
int
push
pop
mov
adc
or
or
mov
subl
mov
test
jns
cs
jae
data16
repz
mov
jecxz
shl
adc
fs
mov
lods
fldenv
in
sbb
fidivrs
jns
test
lcall
sbb
adc
pop
sub
popa
aaa
hlt
sbb
cmp
and
jp
sbb
iret
sub
sahf
jg,pt
fs
lea
and
bound
rolb
and
adc
mov
push
out
mov
or
and
iret
cmpl
mov
sbb
jmp
cmpsl
or
push
dec
cmp
inc
adc
fstl
push
test
add
inc
sub
lds
xchg
fdivrs
test
ja
push
enter
jge
test
stc
push
rcrb
adc
xchg
push
pop
jge
adc
xor
addr16
addr16
lret
inc
push
pusha
sub
or
fdivs
fwait
inc
dec
xlat
pop
pop
repz
into
xor
divps
mov
push
ss
inc
and
add
inc
inc
jg
mov
add
mov
testb
sbb
add
into
pop
xlat
ret
leave
rorb
and
dec
and
lods
mov
std
sbb
fists
push
stc
jne
loope
rcrl
xchg
fs
or
sbb
movsl
into
jge
adc
push
cmp
add
cmp
popf
fsubrl
or
inc
pop
add
and
and
roll
insl
in
int
fimuls
int
clc
xor
sahf
sub
loop
daa
icebp
dec
xlat
popf
std
or
adc
sub
jecxz
or
mov
cmc
loopne
jp
shlb
lods
cltd
push
jle,pt
push
mov
mov
jo
push
jmp
cli
fwait
dec
adc
lock
xchg
std
dec
out
jb
and
movsb
lock
fsubl
imul
sub
mov
fwait
pop
pop
addb
push
inc
in
bound
sahf
into
enter
fdivrl
inc
cltd
mov
cmp
fmull
jb
or
enter
enter
adc
cmc
cmpb
imul
stos
sbb
push
pop
mov
scas
cmp
scas
mov
jbe
sub
sub
jmp
in
xchg
outsl
push
leave
lods
rclb
cmc
call
in
jg
add
les
mov
addr16
jecxz
lods
adc
push
loope
adcl
idiv
push
popa
mov
cmp
movsl
mov
fs
lahf
mov
mov
js
add
sub
call
cmp
adc
mov
adc
outsl
sbb
jge
decb
adc
fiaddl
adc
iret
daa
aas
int3
lret
xchg
jp
lods
pop
inc
and
sub
jb
dec
fs
xor
inc
sarl
fildll
in
sti
mov
popf
jb
lea
clc
inc
and
sub
sbb
or
xorl
push
adcl
lahf
adc
shl
push
push
leave
out
mov
xorb
xchg
mov
cmp
ret
insb
adc
aad
dec
imul
xlat
rcll
sarl
ret
jb
movups
jo
sub
inc
sahf
pop
js
push
cltd
aam
push
ljmp
rcrb
dec
push
js
lcall
sub
test
jecxz
add
pop
xchg
pop
movsl
mov
jo
or
sbb
add
movsl
loopne
leave
sbb
dec
popa
in
xor
jns
pop
ror
adcl
push
jo
xor
in
push
outsl
sbb
cmp
xchg
mov
ljmp
push
cmp
xor
push
adc
lret
push
sbb
ja
add
in
fiaddl
leave
negb
jg
mov
stc
call
mov
testb
ds
mov
cwtl
enter
sub
fsts
push
test
and
rcll
xor
xor
mov
iret
cmpsb
add
cmpsb
bound
adc
mov
lods
das
or
aam
lret
or
inc
rcrl
cs
jae
cmpsb
lods
popa
sbb
mov
xchg
addr16
arpl
movsb
outsl
fwait
adc
lock
push
add
fdivs
mov
dec
clc
divl
xor
fldt
icebp
outsl
mov
dec
dec
fidivrl
icebp
mov
ret
and
rcrw
fisubs
call
sbb
push
push
lds
jge
in
push
roll
push
in
mov
jae
imul
in
sbb
repnz
movsl
xor
popf
js
vpaddq
push
call
cmp
insl
fistpl
bound
fistl
jmp
push
sbb
jne
jb
xor
push
into
idivb
les
xlat
push
sbb
popf
mov
add
mov
push
cli
jp
aad
push
mov
lret
sbb
ljmp
daa
lahf
in
xlat
push
insb
xor
lock
cmp
or
add
adc
insb
adc
xlat
test
lods
add
ficompl
and
cli
sub
icebp
repnz
inc
mov
pushf
xor
push
jg
imul
inc
shrb
xchg
cmp
cmp
pop
popa
xchg
jmp
xchg
mov
add
xchg
enter
pop
outsl
gs
adc
iret
add
pop
loopne
test
add
pop
sbb
and
pop
shrl
add
and
xlat
jb
arpl
xchg
mov
push
dec
pop
outsl
lods
lret
jg
pop
pop
jnp
xorb
push
hlt
mov
push
insb
lods
decl
mov
sub
add
push
mov
shlb
sahf
popf
mov
or
jbe
movsb
pop
das
mov
aas
inc
minps
mov
add
cs
fucomi
fucom
sti
fs
std
int
push
mov
xlat
cmp
or
and
jnp
push
push
jp
or
das
fidivrs
and
lcall
sarb
and
push
add
or
xchg
test
cli
mov
or
push
add
packssdw
xor
xor
sti
xchg
inc
lcall
test
sbb
cltd
jns
das
stc
imul
cld
lret
xchg
dec
push
mov
mov
adc
xorl
jbe
mul
fwait
mov
inc
lret
stos
loopne
outsl
ss
lret
pop
fs
fadds
fisubrl
mov
das
pop
shlb
int
sub
inc
xlat
or
jl
mov
inc
mov
stos
pushf
cmp
push
leave
mov
inc
ficompl
xor
sub
jae
mov
test
or
int3
inc
dec
adc
add
aam
jg
xchg
pop
mov
add
xchg
test
mov
or
sub
insl
mov
shlb
lret
xchg
and
push
xorb
or
jmp
in
pop
test
test
popa
sahf
pop
jb
insb
jae
out
std
xchg
fimuls
mov
mov
or
mov
fcmovnb
scas
push
mov
mov
fs
lock
fs
lret
bound
daa
mov
fistps
ret
nop
jmp
mov
or
pop
out
and
fs
jo
pop
scas
bound
fisttps
mov
sar
out
mov
jle
arpl
dec
ret
push
adc
inc
stos
std
add
mov
sub
mov
sub
cwtl
mov
in
mov
in
adc
popa
xchg
mulb
and
push
shrl
mov
mov
fnstenv
stos
jns
inc
stos
ret
gs
jbe
cwtl
adc
pop
mov
pop
cmp
daa
imul
push
imul
pusha
xor
sub
dec
cmp
pop
or
jne
sahf
mov
int
inc
dec
xchg
insl
addr16
clc
xor
lcall
jmp
jg
inc
andl
xor
test
lret
sbb
xlat
add
xor
jnp
cmp
xchg
push
into
lock
in
sahf
das
sbb
bound
cmpl
pop
test
fnstcw
sarl
out
mov
sti
sub
mov
out
xorl
in
push
inc
adc
call
pop
add
mov
sbb
insl
fneni(8087
addr16
enter
outsl
jmp
sub
jnp
jmp
bound
repz
call
aad
mov
inc
add
push
in
lahf
mov
pop
repz
cmp
cmpsb
loop
outsl
in
movsb
add
xchg
call
jge
cmp
testb
push
jmp
movsl
inc
icebp
test
mov
jbe
in
imul
xor
pushl
xchg
and
xchg
jmp
mov
test
dec
fucomip
fdivr
test
or
xchg
sahf
insl
mov
incb
push
aas
jne
add
mov
mov
popf
adcb
les
call
inc
jle
or
sub
ret
pop
sub
sarl
notl
sbb
xchg
ret
stos
add
aaa
pushl
popf
stc
add
lcall
cmp
pop
aas
sbb
push
xchg
into
xchg
out
orb
ret
into
mov
out
aaa
leave
xor
jnp
adc
push
test
imul
out
ds
inc
adc
dec
movsb
dec
rclb
decw
loope
xor
sbb
imul
clc
int3
inc
ret
imul
cmpsl
cli
rorl
mov
int
inc
dec
push
mov
cltd
stc
mov
arpl
cmp
mov
jbe
mov
jle
mov
aad
call
jp
scas
outsb
add
push
and
test
cmp
cmp
das
call
stos
mov
gs
roll
and
adc
loopne
sub
gs
notb
cmp
jns
loope
xor
cmpsb
mov
jle
lcall
insb
jp
mov
or
or
xchg
loopne
or
aad
popa
lahf
gs
adc
cmp
inc
sbb
test
pop
xor
int
lcall
xchg
xchg
add
and
fwait
sub
call
loop
stos
add
in
adc
hlt
xchg
leave
fistpll
cmp
sub
pop
js
pop
je
jb
xchg
je
mov
fwait
mov
icebp
xchg
loopne
popf
xchg
lods
cmp
ret
es
mov
pusha
scas
enter
popf
leave
cmpsb
mov
sbb
xchg
movsl
lahf
inc
paddd
mov
mov
sbb
dec
xchg
shr
mov
aas
imul
jl
jl
or
cltd
bound
cmp
ud2
cltd
iret
add
movsb
stc
xchg
lcall
push
jne
out
and
loopne,pn
cmpb
lahf
sub
and
jg
xor
push
mov
outsb
push
nop
jmp
repnz
mov
push
sarl
push
jmp
jg
lea
int3
rcrb
cs
inc
int
push
testl
sbb
fbld
testl
push
adc
stc
test
inc
xchg
mov
pop
ja
adc
leave
cmpsl
in
data16
in
pop
push
scas
mov
push
loope
jo
stc
cmpsb
cmpsb
int3
aaa
pusha
mov
inc
dec
idivb
je
dec
movsb
scas
mov
mov
sub
cli
mov
in
mov
out
and
out
data16
std
push
cmp
aad
mov
adc
push
sbb
push
or
dec
cmp
sbb
xor
dec
aaa
rolb
push
sahf
dec
mov
or
loope
push
mov
mov
cli
hlt
bound
inc
fists
pop
mov
sub
xlat
iret
scas
and
cmp
loop
fldl2e
mov
xchg
rorl
jno
mov
aam
jbe
das
ret
push
add
stos
xlat
insb
stos
sub
scas
js
insl
out
sub
loop
inc
cmc
xchg
cmpsl
je
inc
fsts
inc
push
xor
dec
xchg
cmp
lahf
add
shlb
push
and
cltd
jl
push
inc
jle
xchg
dec
sahf
ljmp
push
inc
sbb
das
adc
lcall
dec
mov
cmp
xor
loop
push
js
mov
dec
add
push
movsl
lcall
and
xor
xchg
sub
fnstcw
into
mov
aas
mov
cmp
mov
idivb
enter
icebp
pop
or
xchg
xor
xor
shlb
push
sub
or
inc
int
fsubrp
fdivr
std
fs
mov
inc
ds
mov
mov
lods
mov
pop
ret
rorb
ljmp
or
dec
stos
and
xor
xchg
lock
daa
pop
inc
adc
in
repz
sub
adc
imulb
cmp
jg
sti
pop
sbb
mov
inc
push
movsl
and
dec
jmp
arpl
icebp
inc
enter
add
xchg
sahf
in
lahf
jb
fs
scas
mov
test
ljmp
inc
dec
sub
imul
push
pop
scas
pop
in
jmp
dec
andl
out
pshufw
dec
sti
ror
push
or
pop
test
add
mov
cmp
and
aad
and
adc
jecxz
push
cmpsl
ljmp
and
scas
insb
dec
push
fdivrp
gs
into
inc
test
daa
fcmovbe
lret
xchg
sar
ds
push
add
je
loopne
hlt
jo
pop
roll
xchg
push
add
dec
hlt
icebp
pop
and
stc
inc
cmpsb
inc
and
fidivs
mov
mov
mov
rcrl
sub
shl
cmp
pop
jo
je
mov
sub
movsl
dec
push
popa
orl
jge
and
and
xchg
roll
mov
adc
mov
gs
mov
gs
repz
insl
xchg
sbb
popf
mov
mov
push
adc
out
imul
jge
push
xchg
repnz
inc
push
sbb
or
xchg
inc
imulb
sub
flds
mov
insl
push
push
ds
jp
push
xor
mov
pop
les
call
jle
nop
push
sub
xorl
cmp
pop
push
pop
loop
lahf
jecxz
dec
mov
lret
daa
out
cmpsl
ret
fstpt
mov
mov
repnz
mov
outsb
mov
enter
roll
jne
js
ficompl
je
movsl
xchg
pop
add
xchg
imul
es
bound
test
das
cmpsb
and
loop
pop
frstor
inc
xchg
xor
mov
icebp
cmp
mov
cmpsl
mov
fldenv
imul
test
out
jnp
push
push
gs
fdivrp
cmc
scas
xchg
rorl
push
xor
sbb
cli
out
push
jno
xchg
and
sar
fisubrl
xlat
add
or
popa
push
call
fdivl
outsl
and
and
lods
push
movsb
xchg
and
mov
mov
shl
jbe
cmc
lret
mov
les
sbb
decb
test
ret
cmp
jg
popf
das
sti
add
adc
dec
inc
push
addl
jae
sbb
xor
nop
loop
jle
pop
frstor
push
jge
xchg
addr16
jle
enter
add
outsb
mov
out
pop
test
mov
and
or
addl
and
inc
push
push
mov
fmull
lahf
dec
push
clc
mov
xchg
cld
fbld
mov
sbb
bnd
call
mov
arpl
ljmp
insb
iret
and
ror
loop
adc
aas
jl
mov
icebp
out
movl
scas
cltd
daa
xlat
cmp
adc
sub
xor
pushf
push
dec
lea
fucomp
cmp
mov
in
fdivs
sbb
pop
sbb
clc
push
imul
sub
mov
push
sub
dec
bound
mov
cmp
cmp
jmp
lods
outsl
addl
shll
lods
stos
sahf
cld
adc
inc
xchg
aas
xor
and
jmp
mov
movb
sbb
mov
rcr
dec
cmpsl
mov
mov
add
pop
divl
jle
cmc
enter
sub
fs
outsl
rorb
and
mov
dec
jo
cmp
mov
fistl
pop
sbb
ffreep
jnp
cmc
aas
jp
mov
push
aaa
nop
mov
outsl
jl
sub
outsl
rcll
rorb
insl
fisubrl
test
dec
lret
int
jnp
mov
jp
sbb
xchg
or
mov
repnz
cmc
aad
mov
and
or
and
jg
jge
mov
pop
sbb
jne
pop
xchg
sbb
pslld
in
std
dec
notl
cmp
cld
pop
repnz
andb
leave
aas
dec
test
xchg
add
pop
xorl
cmp
or
cmp
lcall
cmpsb
test
xchg
sahf
jns
push
cmp
aam
sub
xchg
cwtl
lahf
daa
shl
push
ret
shl
js
adc
jb
call
pop
out
subl
push
sub
or
jmp
sub
test
add
add
xlat
cmp
push
mov
lock
addr16
int
cld
sbb
add
jne
cmp
mov
add
scas
outsb
in
fidivrs
dec
ss
pop
aam
xor
fs
rol
aaa
fsts
jae
xchg
mov
inc
and
cwtl
loope
out
idiv
call
pop
je
aaa
push
arpl
and
pop
mov
xor
jne
cs
or
adc
or
sub
xor
and
stos
inc
daa
lret
or
cltd
xchg
js
hlt
jb
mov
xchg
xlat
scas
mov
and
ja
pushf
dec
push
fstl
sbb
fists
test
sar
sub
jo
pop
xchg
std
in
fiadds
or
lcall
xor
pop
andnps
add
leave
mov
mov
or
cmp
call
push
pop
sub
out
stc
mov
sbb
sub
insb
sub
stos
jb
sbb
cmp
jecxz
lods
je
and
sbb
leave
mov
mov
testb
pop
sub
iret
inc
xlat
fistl
insb
in
pusha
out
xchg
xor
or
jmp
mov
sahf
sbb
fidivrs
or
mov
pop
iret
aad
inc
test
dec
lret
movsb
inc
push
sub
aad
xchg
aaa
fs
out
cmpsl
in
adc
adc
lock
or
in
mov
hlt
push
cmc
lahf
mov
dec
roll
lea
in
add
popf
int
aam
clc
mov
pop
shlb
scas
sub
jl
push
call
out
cmc
xchg
lock
loop
add
inc
mov
iret
pop
mov
sbb
mov
mov
adc
pop
outsb
xchg
popf
sub
and
arpl
inc
inc
push
insb
ficompl
xchg
shrl
jp
test
jl
jo
and
push
das
ja
sbb
xchg
dec
ss
lcall
pop
out
inc
inc
pop
sbbl
xchg
push
std
sbb
ds
lods
movsl
dec
add
in
push
mov
cmp
xor
inc
push
xchg
fsubs
mov
add
mov
inc
out
push
xor
loop
or
int
and
addl
inc
mov
out
cmp
sbb
mov
aaa
je
xlat
cld
inc
orl
lahf
xchg
fwait
adc
adc
dec
les
movsl
sbb
jno
mov
mov
push
scas
adc
popf
mov
mov
mov
pushf
adc
in
xchg
push
pop
dec
sarl
xchg
filds
cmp
jns
dec
jno
fbld
out
cmp
xchg
aaa
mov
lods
xchg
imul
rorl
roll
dec
xlat
push
sub
shlb
xor
mov
push
repz
fs
inc
or
adc
fistpl
or
rcr
push
xorl
inc
shrl
dec
xlat
jae
add
fcmovnb
mov
je
mov
adc
cmp
dec
pop
mov
mov
sahf
push
and
test
adc
cwtl
shll
lcall
cld
nop
outsl
popa
jnp
arpl
stos
pop
mov
push
aas
add
loope
or
out
jle
nop
dec
push
add
xchg
add
pop
icebp
fcompl
mov
or
mov
sarb
cs
and
mov
inc
stos
es
push
cmp
stos
lret
icebp
movsb
or
movsb
pop
sbb
enter
fsts
inc
imull
orb
mov
ror
pop
jae
outsl
jae
xchg
mov
subl
insl
ljmp
pop
xchg
repnz
xchg
std
test
outsb
int3
jnp
jns
add
js
aad
and
aad
mov
jp
pop
add
and
enter
ds
cmpl
xor
inc
imul
adcl
pop
outsl
out
lock
lret
adc
in
loopne
roll
xor
ja
xchg
pop
inc
int
ljmp
mov
and
gs
add
inc
movsl
inc
cmp
push
ret
and
xlat
or
push
dec
aas
rorb
in
jecxz
sbb
pop
cwtl
fxch
jecxz
cwtl
pop
mov
mov
test
fstpl
add
inc
adc
jge
mov
xchg
insb
xor
lahf
and
loopne
jo
pop
movsb
cmp
insb
out
mov
aad
sub
mov
adc
and
jecxz
jo
notl
leave
mov
mov
or
mov
mov
cld
pop
push
cmp
dec
sbb
mov
sti
or
mov
and
cmc
cwtl
std
inc
and
lahf
cltd
inc
add
fistl
iret
or
jmp
dec
mov
mov
add
mov
subl
pusha
mov
mov
jmp
cmp
dec
aas
scas
or
insl
rcrl
or
aaa
push
loopne
xchg
jae
inc
ret
enter
mov
jp
pop
pop
cli
or
out
pop
pop
test
in
dec
dec
into
subb
pushf
jb
in
mov
cmc
mov
test
loopne
loopne
rcrl
inc
mov
arpl
mov
mov
ljmp
fucomp
fcmovnbe
cmp
cmp
xchg
int
les
mov
popl
in
ret
mov
xchg
cwtl
addr16
sbb
pushf
ss
dec
lock
mov
cs
test
mov
stos
xor
stos
cli
jne
std
pop
and
push
add
inc
repnz
insb
sub
sub
fiadds
adc
js
jmp
push
sub
bnd
nop
shlb
mov
adc
lret
jbe
adc
cmp
ljmp
cmp
out
rorl
ja
dec
cmp
into
loope
ljmp
jg
divb
in
xor
xchg
in
iret
pusha
pop
mov
mov
xchg
and
out
jmp
jecxz
dec
pop
in
cmp
sbb
mov
movsl
push
jne
lods
cmpsl
dec
test
sti
rolb
and
sub
lea
inc
add
loopne
movsb
fsub
mov
jns
mov
push
and
mov
jl
sub
mov
sbb
scas
lahf
sub
loopne,pt
and
dec
les
fcoms
pop
iret
and
popa
not
daa
jecxz
mov
sbb
mov
dec
cmpsl
in
mov
jge
mov
adc
and
js
jg
pop
scas
jg
enter
fstps
jge
xchg
and
xor
leavew
insl
mov
sbb
outsb
loope
push
cmp
je
imul
push
rcrl
aam
push
shl
pusha
cmp
shl
inc
insb
cwtl
add
mov
xchg
idivb
int
push
dec
fadds
loopne
mov
jbe
adc
pop
mov
inc
push
and
fucomi
jmp
sub
sub
imul
inc
xchg
dec
and
push
mov
cmp
sub
and
jl
mov
pop
imul
dec
or
push
mov
and
push
outsb
add
dec
pop
and
pop
push
ljmp
test
inc
rcrb
or
andl
leave
adc
mov
jbe
out
lods
sbb
xchg
add
xchg
xchg
jbe
fldenv
gs
std
pop
outsl
js
adc
pop
cmp
sub
js
push
call
adc
dec
xchg
negb
mov
cld
ret
push
adc
aas
and
push
fwait
ds
cmp
push
jge
and
lahf
xor
negb
arpl
push
cmp
jno
cmp
inc
sete
mov
cmp
pop
insl
cld
adc
std
leave
adc
scas
mov
cmp
repz
enter
push
cmpsl
std
mov
gs
mov
test
push
in
push
mov
pop
or
or
jnp
xor
sti
inc
out
in
add
add
add
push
add
add
add
add
mov
add
add
add
orb
add
js
add
or
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
push
add
addb
add
js
add
add
add
add
add
add
add
add
add
mov
rolb
add
add
in
add
add
add
add
add
add
add
enter
cmp
pop
add
add
in
add
add
add
add
add
add
add
lock
add
pop
add
add
in
add
add
add
add
add
add
add
sbb
add
test
pop
add
add
in
add
add
add
add
add
add
add
inc
add
add
aam
add
add
in
add
add
add
add
add
add
add
push
pop
add
add
in
add
add
add
add
add
add
add
nop
add
add
pop
add
add
in
add
add
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
add
add
add
add
loopne
add
pop
add
add
add
add
cmpsb
or
rcrb
in
add
add
add
cwtl
ret
or
call
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
or
cmc
sldt
cwtl
add
xor
add
rolb
xor
add
call
sldt
adc
add
cmp
add
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
cmp
add
sub
addb
add
push
add
addb
add
add
add
add
add
add
add
add
add
mov
add
mov
pop
add
add
add
add
add
add
add
add
add
add
fadds
add
enter
in
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
sub
add
test
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
js
add
shl
add
add
add
add
add
add
add
add
add
add
mov
in
add
add
add
add
add
add
add
add
add
enter
clc
out
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
sbb
add
out
pop
add
add
add
add
add
add
add
add
add
add
inc
add
add
icebp
pop
add
add
add
add
add
add
add
add
push
cmc
pop
add
add
in
add
add
add
add
add
call
add
cmp
add
add
add
add
add
add
add
mov
add
loopne
pop
add
add
add
add
add
add
add
add
add
add
fadds
add
stc
pop
add
add
add
add
add
add
add
add
add
dec
add
dec
add
mov
inc
add
push
add
xor
dec
iret
add
add
add
pop
add
jg
add
add
js
add
mov
jg
add
add
add
lock
add
sbb
add
inc
push
add
add
add
add
add
add
add
add
add
push
cli
pop
add
add
in
add
add
add
add
add
add
add
nop
add
pop
add
add
in
add
add
add
add
add
add
add
mov
sti
pop
add
add
in
add
add
add
add
add
add
add
loopne
add
cmp
pop
add
add
in
add
add
add
add
add
add
add
or
add
push
sti
pop
add
add
in
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
pop
push
add
cmp
add
add
in
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
add
add
mov
add
add
or
adc
add
in
add
add
add
cwtl
sti
pop
add
add
add
add
add
add
add
add
inc
add
dec
add
inc
add
dec
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
sbb
add
data16
data16
data16
data16
data16
data16
data16
data16
add
xchg
pop
pop
xchg
pop
pop
xchg
pop
pop
xchg
pop
pop
xchg
pop
pop
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
data16
add
xchg
pop
pop
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
test
data16
add
xchg
pop
pop
int3
leave
lret
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
leave
lret
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
shrb
push
push
data16
add
cwtl
addr16
leave
lret
jmp
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
jmp
loop
std
xlat
mov
xlat
mov
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
test
test
test
test
std
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
sarl
jp
sarl
jle
mov
test
test
mov
leave
mov
mov
vpunpckldq
std
vpcmpeqd
xchg
movsl
movsl
xchg
xchg
hlt
lret
movsl
std
shrb
xlat
mov
lret
push
push
data16
add
movsl
jae
aad
aad
jmp
mov
mov
test
mov
mov
mov
mov
xchg
mov
mov
je
cmc
je
cmc
outsb
sar
mov
cmpsb
adcb
jne
cmpsb
jb
shrb
xlat
mov
lret
pop
pop
data16
add
movsl
jae
aad
aad
jmp
ret
xchg
xchg
mov
mov
mov
mov
xchg
cmpsb
adcb
xchg
cmpsb
adcb
mov
test
mov
xorl
sar
je
cmc
mov
mov
mov
jb
xlat
mov
shrb
mov
xchg
pop
pop
data16
add
movsl
jae
aad
aad
repz
xchg
mov
adcb
mov
jne
adcb
xchg
cmpsb
adcb
leave
mov
jns
stc
jp
jp
jp
incl
jmp
test
xchg
cwtl
mov
adcb
mov
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
cmpsl
js
aad
aad
repz
xchg
test
adcb
xchg
mov
mov
push
js
cmpsb
adcb
cmpsb
xchg
test
cwtl
mov
mov
jnp
jmp
in
xorl
xchg
movsl
cmpsb
adcb
xchg
fisubl
std
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
cmpsl
js
aad
aad
repz
cwtl
mov
test
test
addr16
push
push
mov
push
mov
push
js
mov
orl
lcall
stc
test
stc
test
stc
sbb
xorl
test
test
xlat
mov
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
cmpsl
js
aad
aad
repz
cwtl
mov
xchg
lods
mov
mov
push
mov
push
mov
cmpsb
orl
mov
jmp
fptan
test
stc
test
stc
test
stc
test
stc
jp
jns
stc
mov
fisubl
std
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
mov
je
aad
std
repz
cwtl
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jnp
jmp
fptan
mov
incb
stc
xorl
mov
cmpsb
js
xlat
mov
xlat
mov
xlat
mov
mov
cwtl
data16
add
mov
je
aad
std
repz
cwtl
mov
mov
mov
mov
ja
bound
jae
les
les
les
les
jno
shll
shll
shll
shll
xlat
sbb
sbb
jbe
xlat
sbbl
mov
xlat
mov
xlat
mov
ret
std
mov
cwtl
data16
add
mov
je
aad
std
repz
test
jae
les
les
les
les
lea
cmp
inc
arpl
dec
bound
mov
gs
shll
shll
sarl
jmp
fptan
mov
incb
xlat
je
enter
jae
les
mov
xlat
mov
xlat
mov
ret
std
mov
cwtl
data16
add
mov
je
out
std
repz
test
imul
lret
sub
push
and
arpl
dec
ja
add
xchg
aad
xchg
aad
xchg
aad
xchg
fistpl
je
cmc
je
cmc
test
stc
test
stc
jbe
out
popf
shrl
lret
imul
std
xlat
mov
ret
std
mov
cwtl
data16
add
mov
je
out
std
cld
cli
std
repz
shll
shll
rcrl
ret
dec
and
jo
pop
mov
fistpl
fistpl
fistpl
fistpl
fistpl
ljmp
test
stc
test
stc
test
stc
fs
bound
gs
rcr
test
loop
loop
cli
lret
mov
cwtl
data16
add
mov
je
out
std
cld
cli
std
cld
cli
jbe
xlat
pop
xchg
fistpl
fistpl
pop
mov
dec
sub
xchg
mov
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
cmpsl
ljmp
jns
stc
pop
mov
pop
cmpsl
ljmp
pop
xchg
fistpl
fcmovnu
test
loop
loop
cli
lret
test
cwtl
data16
add
ret
out
in
cld
cli
std
cld
cli
imul
xchg
out
inc
arpl
cmp
cmp
pop
xchg
out
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
dec
mov
test
stc
pop
mov
pop
cmpsl
ljmp
dec
xchg
out
xchg
out
xchg
fcmovnu
test
loop
loop
cli
lret
test
cwtl
data16
add
ret
out
in
cld
cli
std
cld
cli
imul
xchg
clc
sub
push
sub
push
sub
jo
push
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
dec
mov
vpunpckldq
std
push
test
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
dec
xchg
out
test
loop
loop
cli
lret
test
cwtl
data16
add
ret
out
in
cld
cli
std
cld
cli
sub
cmpsl
or
sub
push
sub
push
sub
xchg
aaa
test
daa
mov
xor
and
and
daa
push
out
pusha
in
pusha
in
push
out
push
out
push
out
push
out
dec
fldenv
dec
fstps
cmp
loop
cli
lret
test
movsl
jae
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
sub
cltd
add
adc
push
sub
push
daa
push
or
adc
mov
xor
and
and
daa
push
out
push
out
push
out
push
out
push
out
dec
fldenv
dec
fstps
enter
loop
loop
cli
lret
test
movsl
jae
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
sub
cltd
add
daa
xor
xor
xor
daa
push
and
sbb
sbb
sbb
fldenv
push
out
push
out
push
out
push
out
push
out
push
out
push
out
dec
fstps
ror
fwait
cmp
loop
cli
lret
test
cmpsl
js
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
dec
ja
daa
push
out
push
out
dec
ja
inc
arpl
xchg
jae
ss
cmp
cs
in
dec
fldenv
dec
fldenv
push
out
pusha
in
cmp
xchg
clc
inc
xchg
clc
inc
xchg
clc
cmp
daa
push
out
push
out
dec
fstps
cmp
loop
cli
lret
test
cmpsl
js
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
push
xchg
xor
xor
xor
xor
sbb
ss
cmp
inc
mov
inc
xchg
clc
dec
mov
pop
mov
pop
mov
vpunpckldq
std
jecxz
sti
lcall
vmulpd
cs
in
pusha
in
cmpsl
xchg
jmp
cli
lret
test
cmpsl
js
data16
add
fisubl
std
cld
cli
std
cld
cli
push
xchg
xor
xor
cs
in
inc
arpl
outsb
aam
jae
cmp
inc
mov
inc
xchg
clc
dec
mov
pop
mov
pop
mov
aam
std
cld
cli
jecxz
sti
vpunpckldq
std
pop
mov
pop
mov
push
test
dec
mov
jmp
cli
lret
test
cmpsl
js
data16
add
fsubrs
std
cld
cli
std
cld
cli
push
xchg
xor
xor
xor
xor
xor
ss
cmp
inc
mov
inc
xchg
clc
dec
mov
pop
mov
pop
mov
vpunpckldq
std
stos
loop
jns
stc
vpunpckldq
std
pop
mov
pop
mov
push
test
dec
mov
jmp
cli
lret
test
cmpsl
js
data16
add
fsubrs
std
cld
cli
std
cld
cli
push
xchg
xor
xor
xor
daa
push
xor
ss
cmp
inc
xchg
clc
dec
mov
push
test
pop
mov
pop
mov
vpunpckldq
std
vpunpckldq
std
pop
mov
pop
mov
push
test
push
test
dec
mov
jmp
cli
lret
test
cmpsl
js
data16
add
fsubrs
std
cld
cli
std
cld
cli
xchg
std
xor
xor
xor
xor
xor
xor
ss
cmp
inc
xchg
clc
inc
xchg
clc
dec
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
push
test
dec
mov
lret
cmpsl
xchg
jmp
cli
lret
mov
data16
add
fsubrs
std
cld
cli
std
cld
cli
nop
mov
xor
xor
xor
xor
xor
ss
cmp
inc
mov
inc
xchg
clc
dec
mov
push
test
pop
mov
pop
mov
pop
mov
fs
je
stc
je
stc
je
stc
nop
mov
loop
jmp
cli
lret
mov
data16
add
fsubrs
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
repnz
jmp
repz
repz
repz
jmp
jmp
jmp
jmp
sti
pushf
pushf
lods
cmpb
data16
add
in
mov
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
repz
jmp
jmp
jmp
cli
lret
pushf
pushf
lods
cmpb
data16
add
in
mov
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
repz
mov
std
mov
std
mov
std
test
std
test
std
test
jmp
data16
add
in
mov
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
orb
mov
mov
jge
jp
cwtl
data16
add
jmp
nop
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
mov
cmc
popl
cmc
popl
cmc
popl
fnstenv
fnstenv
mov
data16
add
mov
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
js
test
std
test
std
test
std
test
aam
dec
data16
jmp
nop
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
shrb
mov
std
test
aam
dec
data16
add
add
xchg
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
js
std
xlat
mov
mov
aam
dec
data16
add
test
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
xlat
mov
mov
data16
add
xchg
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
mov
je
loop
fisubl
add
test
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
repnz
jmp
in
jmp
in
jmp
test
mov
data16
add
add
xchg
std
xlat
mov
xlat
mov
xlat
mov
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
call
cmpsl
call
cmpsl
in
mov
mov
mov
aad
cwtl
aad
cwtl
aad
cwtl
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
mov
je
xchg
xchg
add
incl
add
incl
add
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
incl
add
add
add
and
add
add
add
sbb
add
add
mov
add
testb
in
stc
add
jge
add
test
add
mov
loope
add
cmc
add
dec
cmp
add
add
xor
data16
lea
add
fldl
add
push
add
stc
add
mov
add
gs
add
test
jge
add
mov
add
add
sub
add
inc
ja
dec
rolb
clc
or
or
or
sbb
or
add
add
cmp
or
add
add
pop
enter
add
add
add
add
add
add
sldt
addb
add
adc
or
add
add
fadd
or
adc
or
and
or
add
add
ljmp
or
and
or
sub
or
add
add
decl
add
or
xor
or
add
add
pushl
or
xor
or
cmp
or
add
add
decl
or
inc
or
add
add
pushl
or
imul
gs
xor
cs
insb
add
aad
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
push
add
push
imul
insb
insb
outsl
arpl
mov
add
jb
jne
insb
inc
jb
add
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
jno
add
addr16
insb
outsl
jae
dec
gs
or
push
dec
xor
cs
dec
dec
add
loopne
add
popa
addr16
imul
add
imul
inc
dec
xor
cs
dec
dec
add
sub
add
je
insb
je
test
push
push
inc
push
xor
cs
dec
dec
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
push
push
xor
cs
dec
dec
add
sbb
and
fnsave
xchg
lcall
mov
push
or
loop
stos
sbb
mov
stc
jle
leave
or
dec
add
pusha
pusha
adc
sbb
dec
add
push
mov
jecxz
add
push
cmp
shl
mov
inc
add
mov
loopne
in
sub
or
add
sbb
insb
or
sbb
mov
adc
je
sbb
or
sti
adc
or
rep
pop
dec
rorl
jno
orb
add
out
or
add
add
xor
int3
enter
mov
rcrb
add
rcrb
xor
push
sbb
leavew
and
jle
stos
and
add
lret
lea
adc
add
push
sbb
repz
pop
push
mov
daa
fsub
jmp
imul
cmp
sub
xchg
add
sub
shr
add
cmp
lods
inc
mov
and
ret
lret
insl
or
out
inc
xor
sbb
or
mov
imul
std
pop
lea
movb
sub
sbb
sahf
push
lcall
mov
and
add
scas
cmpsb
movl
lods
and
insb
mov
mov
sub
push
clc
sahf
adc
jae
stos
mov
inc
rorb
je
imul
sbb
movsb
icebp
mov
mov
xchg
pop
add
inc
mov
xchg
push
inc
cmp
mov
ss
mov
mov
cmp
iret
mov
push
xor
add
xchg
cmp
push
pushf
and
cmpsb
and
and
jl
jmp
mov
dec
lret
or
adc
cmp
in
add
cmpsb
sbb
fucomip
and
adc
cmp
push
jb
stc
roll
inc
push
jmp
sub
nop
repz
nop
rol
lret
mov
dec
xor
ret
lods
out
shrb
shr
pop
sarl
bnd
xor
cs
popf
xchg
sub
lods
dec
or
shlb
int3
setl
cltd
mov
sbb
adc
lea
xorl
add
jmp
xchg
dec
sub
dec
repnz
jns
lret
and
or
sub
xor
or
cmp
xchg
push
push
mov
jne
push
lea
add
add
pushf
xchg
sub
cmpsl
jmp
xchg
shl
sbb
in
or
sbb
test
and
mov
dec
adc
hlt
adc
add
test
aad
xchg
inc
out
popf
ret
or
dec
enter
sbb
adc
cmp
mov
outsl
push
and
pop
and
in
cmc
sar
std
lret
sub
roll
xor
inc
adc
xor
sbb
inc
and
and
sub
push
repz
inc
push
jns
mov
mov
movsb
mov
adc
lret
mov
sub
ret
inc
and
loope
in
or
daa
adc
lods
adc
push
inc
mov
mov
xchg
cli
and
dec
mov
or
loopne
lea
or
in
scas
cld
dec
add
inc
and
adc
adc
add
enter
jns
xchg
mov
xor
fs
pushf
popa
iret
mov
adc
pop
lds
mov
orl
cltd
jns
push
pop
aaa
cs
fisttpll
jmp
outsb
jae
pop
lea
mov
jne
mov
sub
add
fldl
and
pop
jns
adc
jl
cmc
adc
sahf
lret
add
lea
movsb
push
insl
shlb
mov
xlat
and
loope
in
int3
jne
ljmp
jbe
ficoml
jle
aas
sar
xchg
in
push
sti
int
sub
push
mov
jge
sarl
in
dec
inc
leave
and
mov
jmp
xchg
sbb
cwtl
add
les
cs
call
jb
lret
ret
adcb
jle
jmp
xor
movsl
adc
clc
push
xchg
test
fs
sbbl
xor
sub
movsl
clc
jmp
dec
sbb
add
jmp
or
std
add
inc
in
dec
add
inc
lret
test
pop
cli
sub
jb
pushf
xchg
rcrl
lahf
jmp
and
adc
in
dec
adc
pop
push
scas
js
rolb
inc
add
mov
stc
mov
sub
cmp
xor
pop
lret
rcrb
in
sbb
add
mov
add
mov
add
sbb
push
call
mov
les
push
push
jb
cld
call
push
ficoml
mov
lahf
xor
sub
fimull
ds
push
lahf
rcrl
sahf
inc
cltd
adc
addb
pop
push
mov
roll
or
mov
adc
adcl
or
adc
jl
mov
mov
movsl
and
xor
cmp
sub
inc
add
or
or
mov
sarb
xlat
push
test
xchg
and
mov
inc
and
imul
ficoml
push
add
add
push
sbb
sbb
sbb
add
jmp
sbb
call
das
adcl
or
dec
adc
lea
inc
cld
add
add
jbe
fdivp
push
jle
dec
jbe
pop
repnz
push
stos
add
nop
cmpl
je
stos
jae
test
fmull
mov
adc
or
pop
sbb
add
push
in
jg
ljmp
sbb
call
add
dec
sub
xor
sub
daa
push
xchg
xor
daa
ret
call
jb
sub
insl
xchg
rcll
xchg
xor
xor
pop
jp
jnp
xor
jl
outsb
je
mov
xchg
pushf
andl
addb
movsb
mov
dec
jmp
test
push
push
and
push
lea
push
aas
das
sub
sbb
enter
adc
shrb
bound
test
lret
xor
or
and
and
or
mov
lock
add
pop
movb
addl
lcall
rolb
mov
pop
xchg
jl
imul
mov
rdpmc
cmpsb
cmp
pop
pop
pop
pop
pop
ret
push
mov
ret
dec
mov
sub
loopne
orl
xchg
and
mov
push
ret
rorl
push
rol
add
sti
scas
aad
push
mov
xor
add
in
or
push
jne
scas
leave
rcrb
addl
inc
rclb
dec
enter
lods
inc
mov
mov
jmp
hlt
cltd
and
icebp
pop
push
or
rcrb
or
xor
pop
dec
add
inc
adc
jge
or
xchg
push
jp
insb
cwtl
dec
cld
inc
pop
adc
add
jne
cmp
jge
in
inc
add
mov
add
sub
not
jge
add
enter
sbb
sub
ret
shr
int3
rclb
xchg
push
mov
add
cwtl
inc
jmp
and
pop
mov
xor
xor
popw
pop
jmp
pop
push
test
cmp
xor
sub
data16
push
push
sub
pop
mov
dec
aas
adc
out
shl
lods
inc
inc
pop
imul
test
inc
int
mov
adc
jae
pop
jge
sub
or
pushf
roll
rep
shrb
jnp
add
cli
iret
movsb
push
push
sbb
stos
adc
xchg
cmp
mov
adc
adc
jecxz
push
sub
lock
push
aaa
xchg
sub
mov
adc
bound
jecxz
push
outsb
dec
sub
push
ss
pop
gs
and
add
xor
dec
mov
hlt
push
daa
dec
or
cmp
test
data16
push
push
std
xchg
push
in
rol
inc
je
and
adc
adcl
push
test
lret
sbb
sbb
stc
jmp
adc
out
inc
add
decl
dec
stos
adc
or
loopne
sub
pushf
dec
pop
jno
out
fisubl
or
inc
or
sub
lret
sti
inc
add
lock
lcall
aam
je
and
or
mov
push
dec
or
ror
jle
test
and
push
push
push
push
dec
call
sbb
mov
test
cltd
aad
mov
and
mov
adc
mov
jmp
xor
jb
cs
and
dec
adc
fdivrl
jge
push
push
adc
rcrb
testb
mov
in
mov
jg
test
and
jmp
mov
movl
push
jno
xchg
cmp
pop
push
dec
sbb
xchg
add
inc
xchg
lods
jmp
inc
popf
push
xlat
sub
mov
sbb
sub
mov
shr
push
add
sbb
dec
or
push
inc
jmp
pop
ss
pop
and
pop
jmp
sbb
inc
add
inc
cmp
dec
adc
add
add
ror
shr
push
jae
xor
jbe
jnp
mov
adc
pop
test
sbb
adc
sbb
pop
xchg
in
gs
push
pop
imul
test
movsl
scas
shlb
pushf
insb
mov
subb
xor
pop
outsl
cmpsb
dec
cmp
push
jbe
insl
jae
bound
sbb
jo
insb
imul
sbb
gs
jae
adc
fsubrl
pop
push
push
arpl
pushl
xor
outsb
iret
je
bound
sti
imul
sbb
andb
frstor
jmp
jbe
mov
dec
in
sti
stc
popa
addr16
inc
outsl
cmp
cmp
je
data16
cmp
int
cmpl
push
dec
nop
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
iret
hlt
arpl
xchg
mov
je
sbb
cltd
bound
xchg
inc
xchg
pop
pop
mov
ror
or
xchg
cmp
mov
imul
mov
movsl
sbb
push
aam
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
loopne
or
xor
add
xor
add
dec
aam
add
or
sbb
or
add
inc
add
or
adc
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
or
dec
add
dec
add
dec
