popf
in
das
mov
lds
out
push
and
mov
xchg
push
popf
or
or
fldenv
fcompl
in
in
aam
or
mov
test
daa
and
sbb
loopne
cmp
and
fisubrl
and
lock
jp
xor
neg
adc
clc
repz
and
xchg
push
in
jnp
push
and
leave
js
lcall
clc
lahf
daa
xchg
pusha
dec
xchg
stos
int3
push
out
mov
jo
push
popa
inc
sub
movsl
hlt
pop
push
and
xor
in
add
push
add
andl
mov
lahf
pop
cltd
int3
sbb
std
mov
sbb
mov
ret
sbbl
repnz
sahf
push
mov
loop
clc
jl
arpl
gs
cmpl
mov
mov
mov
aam
out
ss
cli
loope
xor
stc
and
scas
jae
sub
scas
iret
stos
or
sbb
push
leave
xor
cli
outsb
push
addb
sub
mov
in
push
mov
pop
inc
push
inc
push
out
mov
and
ret
pop
movsl
cmc
rorl
in
sbb
outsl
dec
cmp
xorb
ds
cmp
add
sahf
pop
xchg
pop
sbb
test
enter
inc
rcll
jecxz
dec
hlt
mov
ret
call
hlt
jmp
adcl
dec
adc
jl
inc
cmc
xor
mov
daa
arpl
mov
pop
mov
movsb
das
sahf
stos
add
inc
mov
mull
pop
popa
xor
xchg
cli
adc
rcrb
imul
cli
lods
or
cld
imul
cmp
mov
aas
lret
fsubrl
mov
mov
xor
aas
xor
sar
jne
dec
mov
aas
mov
xchg
jno
or
repnz
imul
mov
dec
out
mov
cmc
rcl
push
rcrl
jle
lods
stc
add
enter
xchg
mov
xor
mov
lds
and
dec
ja
lds
popf
jl
cmp
mov
inc
ja
mulb
rolb
xchg
lock
jl
or
pushf
ret
aad
push
add
cli
lcall
js
sub
jmp
sbb
mov
mov
mov
jbe
mov
icebp
mov
inc
mov
es
jecxz
jno
lods
in
jmp
jecxz
mov
das
pop
mov
sahf
rol
sub
ret
mov
and
mov
aaa
in
mov
fidivrs
scas
xor
sti
jmp
ja
xorb
mov
jno
popa
dec
push
push
adc
mov
cmp
add
loope
cmpsb
pop
arpl
and
mov
push
addl
stos
jbe
xchg
cmp
sbb
mov
xchg
sub
popf
fdivl
xchg
cmpsb
fisubrs
mov
arpl
mov
shll
inc
sbb
dec
pop
mov
jno
cmpb
sbb
sahf
pop
leave
push
scas
cmp
mov
scas
inc
pop
outsb
mov
jno
outsb
or
lcall
rcr
adc
pop
lcall
je
push
fwait
clc
in
add
mov
pop
xchg
mov
jne
inc
out
aas
sub
es
cs
mov
aam
shr
xchg
mov
je
sub
pop
mov
sub
push
stc
xor
cmc
inc
inc
sub
xor
sahf
sbb
mov
aad
test
lock
test
cmp
incl
scas
add
lods
sub
sub
ret
sub
pop
mov
mov
xor
push
je
hlt
mov
jns
push
or
jle
inc
pop
shrb
xorl
xchg
repz
sub
cmp
loope
test
lds
inc
imul
mov
fiadds
cs
les
inc
adc
sti
out
xchg
jmp
dec
jne
xchg
sub
insb
dec
shrb
fwait
mov
outsl
sub
test
bound
ficomps
sub
jmp
pop
sbb
das
and
arpl
add
aaa
test
inc
test
mov
mov
loope
and
mov
sar
sub
ja
cwtl
jno
cltd
push
mov
popf
or
scas
sub
scas
and
add
lea
mov
ret
lods
movsl
inc
fsts
xchg
in
adc
mov
vmovaps
lret
sub
xor
and
aas
jns
xorl
js
mov
cmpsl
pop
icebp
dec
aam
xchg
clc
and
sub
add
xor
lcall
mulb
jp
push
mov
lods
ds
dec
mov
mov
ret
cmpsb
ss
movsb
inc
bound
jo
cld
lret
jnp
push
push
jns
pop
insb
repnz
enter
rcrl
inc
mov
incl
dec
popa
mov
test
imul
jne
clc
fadd
xchg
fs
out
popa
cmp
enter
in
mov
pop
and
mov
aad
cld
stos
inc
xlat
lcall
jbe
cmp
fadds
out
xor
lahf
int3
add
fmuls
lods
inc
fists
fstpl
sub
faddp
frstor
xchg
push
push
test
outsb
push
jnp
and
es
shll
mov
push
aad
ret
sub
add
mov
lahf
out
pop
lds
or
mov
ret
rcl
adcb
andb
jnp
sub
lcall
sub
jmp
into
cmp
adcl
in
out
pusha
mov
in
or
inc
leave
jle
lock
out
pop
xchg
pop
inc
jecxz
rorb
adc
cmc
bound
sub
or
sub
and
jmp
out
ret
outsb
hlt
and
add
lea
xchg
sub
es
xor
inc
or
nop
lock
mov
dec
and
inc
ja
lock
jno
stos
cmp
pop
push
and
jae
cmpsb
imull
jl
lods
jb
in
push
push
pop
lods
add
mov
cmpsb
insl
call
jmp
or
inc
mov
pop
mov
mov
xchg
insb
cmp
imul
ja
jne
hlt
in
jmp
stc
pusha
mov
sub
pop
jl
adc
ja
test
pop
pop
push
xor
and
cltd
xor
sti
and
shlb
jmp
es
inc
ret
or
cmp
call
lcall
aaa
mov
je
sbb
das
rol
push
jle
inc
stos
lock
loop
das
jbe
outsl
mov
movsb
sarl
cli
jns
mov
sub
out
mov
fisubl
cmp
add
stc
xchg
inc
ss
sti
xor
cmc
add
jno
repz
arpl
enter
mov
sub
and
push
enter
and
aaa
add
test
sub
push
mov
repnz
or
push
jae
pusha
insl
or
mov
paddusw
adc
fisubrl
movsl
psllq
mov
push
sub
in
clc
push
ljmp
push
sbb
jle
pop
lods
stos
data16
xchg
xchg
out
xchg
repz
jnp
xchg
out
jg
cmpsb
cli
add
mov
mov
aam
and
stc
jbe
out
fisttpl
leave
add
mov
ja
movl
sub
inc
es
imul
stos
fldt
lods
and
icebp
sbb
jnp
push
push
rcrb
faddl
sbb
mov
and
mov
shlb
repnz
mov
nop
xchg
std
pop
scas
mov
mov
test
rcrl
sub
push
mov
jl
jb
in
cmp
test
incl
popf
add
mov
lock
cs
mov
or
lds
dec
mov
popa
mov
pop
mov
inc
mov
push
aaa
ds
jae
add
lods
mov
mov
or
jmp
dec
push
imul
cmp
shrl
lock
inc
arpl
add
xchg
not
inc
cli
lock
mov
and
jo
js
test
enter
nop
lods
cwtl
dec
stos
mov
pusha
jp
push
pop
mov
add
adc
cmpsb
sub
mov
ret
push
fcmove
dec
push
loop
cmp
xlat
mov
and
mov
mov
lcall
mov
lahf
aaa
jo
lods
mov
xchg
dec
dec
mov
lock
and
mov
jo
sub
ds
mov
push
std
je
sbb
fdivr
out
jp
pop
popf
lods
or
inc
xchg
xor
iret
cmp
xor
into
mov
cmp
rcrb
cmp
and
adc
mov
mov
cmpsb
mov
mov
notb
push
pop
loop
add
sub
sub
jns
xor
test
dec
imul
fucomp
jno
pop
and
xchg
or
sbb
inc
jo
je
mov
movsb
testb
clc
scas
movl
inc
add
dec
dec
js
mov
daa
stc
push
sub
and
imul
test
inc
inc
ds
pop
push
mov
jmp
aam
and
mov
inc
mov
in
inc
js
fwait
xchg
sbb
stc
stos
in
pop
sahf
jge
add
insl
popa
test
mov
jecxz
add
adc
inc
icebp
ficoms
mov
and
pop
mov
lcall
push
scas
in
fsubrs
add
xchg
or
das
xchg
test
test
xchg
outsl
jnp
xor
mov
cmc
lds
cmp
popa
mov
pop
out
scas
cli
bswap
push
xchg
mov
jne
mov
and
jno
test
scas
add
loope
and
in
add
das
clc
and
out
inc
push
insl
mov
cmp
mov
add
and
mov
mov
mov
sub
into
fists
aas
std
adc
mov
call
mov
and
mov
adc
int
int3
daa
insl
and
adc
shrl
add
aam
pop
mov
addr16
mov
xor
jne
mov
fisttpll
mov
jmp
inc
xchg
push
inc
mov
fsubrs
adcl
mov
sub
inc
stos
imulb
adc
jmp
in
push
mov
xor
push
add
xor
pop
cltd
es
jmp
scas
gs
mov
adc
or
out
add
loopne
mov
sub
mov
stos
pusha
out
sub
inc
mov
jne
notb
gs
dec
div
aad
movsb
inc
pushf
sub
or
call
adcl
fildll
incb
xchg
jmp
xor
mov
ret
xchg
inc
leave
fstpl
mov
inc
jae
xchg
adc
mov
or
out
lods
mov
xchg
insb
fdiv
inc
push
out
dec
dec
xchg
mov
push
pop
mov
sub
mov
out
leave
mov
mov
inc
mov
or
pop
fstpt
int
je
sub
or
int
add
dec
jg
xchg
mov
inc
jns
dec
cmp
sti
pop
dec
sbb
mov
adc
shrb
and
xor
mov
and
jo
xor
js
pop
stc
cmp
bound
xchg
das
into
pushf
push
aaa
out
stos
cmc
dec
adc
dec
ret
fistl
adc
aam
xchg
outsl
popf
sub
es
mov
cli
pop
rclb
mov
sub
jecxz
std
mov
cmp
je
jno
and
popf
fisubs
bound
aam
pop
std
sbb
rclb
and
xor
loopne
scas
xorb
jae
stos
and
test
add
sub
aas
shlb
in
cld
xchg
js
mov
ds
pushf
push
mov
push
mov
aas
add
pop
inc
das
jae
ret
pushf
retw
inc
lods
je
inc
loopne
fnstenv
push
sbb
pop
mov
mov
sbb
fidivrs
into
sbb
sbb
test
notl
or
cmp
inc
cwtl
xchg
inc
mov
xchg
xchg
cmp
jp
test
rcll
aam
std
bound
cmp
bound
xchg
aas
js
mov
test
cmp
leave
adc
jno
sub
jbe
aas
mov
in
mov
cmp
insb
inc
je
ss
sbbl
pmuludq
push
lods
jae
decl
push
push
inc
mov
jmp
hlt
add
fiadds
push
lods
imul
sbb
or
dec
and
scas
jle
pop
daa
int
flds
nop
jnp
sti
push
or
in
sub
inc
int
dec
xor
stc
data16
xor
and
popf
iret
test
test
xor
dec
mov
scas
mov
es
sbb
test
out
sbb
xchg
daa
cmpsl
arpl
xchg
into
inc
jne
pusha
imul
cld
scas
lahf
push
adc
popa
lret
inc
clc
lods
daa
sub
das
cmp
cmp
out
test
lds
push
outsb
inc
repnz
scas
icebp
dec
rolb
add
cmpsl
mov
sbb
je
test
out
mov
push
mov
push
fidivl
mov
push
jl
mov
scas
push
shll
jecxz
ss
call
lret
fidivrs
inc
adc
outsl
pop
mov
call
cmp
jno
sub
cmpsb
sub
aas
repz
push
cltd
lea
mov
testb
pop
aas
push
sbb
mov
stos
mov
or
mulb
jecxz
in
lahf
jl
lods
loopne
cmpb
dec
sub
clc
test
xlat
mov
lds
js
mull
jb
mov
inc
sbb
cmp
xor
pusha
and
dec
adc
mov
cmp
js
mov
jnp
sbb
call
movsb
jno
dec
int
inc
pop
mov
adc
mov
push
sbb
in
pop
das
push
xlat
and
inc
leave
mov
data16
add
ss
xlat
jmp
rcrb
sub
pop
mulb
pop
int
adc
or
push
shr
mov
loop
and
add
mov
or
imul
sub
add
sbb
in
pusha
pop
mov
and
test
push
outsb
sub
cs
pushf
xlat
adc
xchg
jmp
sbb
sbb
dec
inc
and
lahf
mov
dec
add
decb
cld
out
out
sub
mov
adc
and
and
fdivrp
pop
test
loop
mov
add
fidivl
flds
add
jnp
pop
test
mov
push
push
mov
pop
dec
jg
outsl
push
in
movsb
xor
lock
repz
inc
arpl
movsb
and
fwait
jmp
movsb
cmp
sub
dec
pusha
add
add
mov
in
es
xorl
test
xor
pop
add
hlt
and
test
out
test
and
pop
ss
popf
hlt
and
adc
add
lock
pop
sbb
dec
mov
out
sbb
call
shlb
or
push
sahf
cld
lds
jg
daa
mov
jne
repz
inc
sub
sbb
jo
leave
pusha
xchg
push
or
jno
mov
sub
std
and
movsb
or
pop
lds
cmpsb
xchg
mov
shr
sbb
jb
dec
popa
stos
and
popf
xlat
xor
xor
jg
dec
mov
pop
add
mov
imull
xor
leave
sub
inc
push
pop
pop
icebp
scas
aas
fwait
movl
loope
sbb
repz
xchg
fcoms
outsb
cmpsb
fdivrp
and
and
jp
and
mov
jp
lock
arpl
or
mov
fdivrs
push
call
dec
div
lcall
lock
int3
and
push
sbb
sbb
insl
scas
fildl
sub
orl
adc
pushf
cmpl
int
lea
lahf
push
xor
cmc
sub
out
jge
jge
mov
and
pop
clc
fwait
cmpsl
jecxz
lcall
or
enter
pop
sub
cltd
ss
call
out
xlat
mov
and
cmp
lret
push
repnz
testl
mov
and
xchg
xchg
daa
xchg
test
mov
rcrb
inc
and
xor
repnz
insl
shr
les
jo
shrb
dec
mov
ljmp
aad
push
pop
fiadds
cmp
sbb
rcr
iret
push
idivl
aad
decl
push
lret
in
scas
std
and
imul
outsb
jl
mov
clc
xchg
mov
ds
cmc
sub
pushf
xchg
sti
andl
jmp
and
or
dec
lret
inc
fiaddl
into
sbb
xlat
inc
xchg
inc
scas
jmp
push
xchg
xchg
mov
xchg
add
sub
and
pop
adc
in
cli
fistpll
dec
out
pop
int
mov
rorb
imul
mov
and
data16
pop
or
push
cltd
or
test
loope
cmpl
jb
inc
xchg
cli
and
sub
imulb
andb
sub
sbb
inc
gs
mov
add
ret
jno
sbb
loopne
notb
movb
aaa
lds
lahf
sub
sub
stos
adc
fwait
loope
call
cmp
xorb
inc
cltd
adc
stc
and
add
jb
add
lods
aas
push
push
push
cmp
pop
fstpl
mov
mov
inc
mov
sbb
mov
repz
and
pop
pop
and
and
cmpsl
dec
mov
add
testl
ljmp
cli
xlat
aas
sub
add
mov
test
imull
loopne
cltd
jns
lahf
outsb
aam
jo
mov
xchg
stc
mov
and
lahf
push
and
pop
push
imul
add
mov
or
loop
jle
frstor
cld
outsl
aam
into
jmp
cmp
notl
ret
stos
xor
out
imul
int3
enter
out
push
sub
shlb
or
xchg
sti
cmp
push
push
fdivr
cmp
arpl
sbb
push
sbb
jnp
sbb
repz
jns
imul
mov
in
enter
imul
inc
mov
mov
mov
inc
into
pop
fnstenv
fs
pop
push
jnp
adc
sbb
and
sahf
ret
das
sbbb
outsl
je
lock
mov
mov
sub
sub
dec
push
cmpsb
aam
pop
je
jo
test
xchg
jb
divl
movsb
stos
jl
mov
arpl
mov
xchg
hlt
lcall
arpl
in
adc
popl
enter
mov
or
out
stos
cs
sti
push
loopne
and
mov
push
sbb
insb
cli
sub
pop
movsl
xchg
inc
sub
push
inc
stc
fdivrl
lds
insb
sbb
mov
or
or
subps
in
sub
or
and
mov
mov
dec
mov
pop
pop
xchg
cmc
jne
jecxz
cmpsl
sub
mov
ficoml
shrb
mov
sbb
inc
xchg
add
clc
aaa
adc
ret
data16
fs
sbb
adc
adc
xor
mov
push
mov
adc
into
or
cmpsl
cmp
outsl
incb
jbe
mov
pushf
notl
and
mov
pop
mov
xchg
cmc
jnp
gs
imul
cs
push
aaa
cmpsb
fwait
lret
out
jo
cmp
test
xchg
in
jle
cmp
ret
sub
inc
or
mov
xor
cmp
and
cmp
hlt
xor
gs
lcall
adc
ret
lahf
or
jecxz
xor
popa
clc
jbe
and
pusha
loope
cli
jnp
es
aaa
mov
bound
ret
xchg
sbb
out
pop
cmp
mov
xor
hlt
pop
mov
xchg
push
mov
cli
pop
sahf
sbb
mov
lock
sarb
orl
es
xor
aam
aaa
fisttpl
sub
sbb
inc
jbe
jg
push
js
out
daa
clc
push
in
jle
aam
imul
xorl
xchg
aad
add
rorb
push
mov
lahf
xor
and
xor
inc
or
jl
sub
mov
and
loopne
test
ret
cmp
lock
cmp
out
loopne
or
cs
divl
clc
xor
and
xor
mov
xor
fidivrs
sbb
ds
nop
fistpll
mov
lahf
cmc
xchg
aad
out
shrl
les
mov
shll
out
mov
rcll
loope
bound
pop
cmp
test
push
icebp
mov
lods
rorb
mov
clc
mov
xchg
adcb
nop
sbb
hlt
stos
clc
insb
pushf
call
fsubp
mov
lret
fdivrl
lods
mov
test
or
push
and
xadd
lcall
js
scas
dec
jle
into
popf
or
ret
sbb
mov
mov
imul
imul
and
les
sahf
lret
mov
fdivp
lcall
dec
lret
icebp
mov
xor
js
clc
or
ret
jbe
sub
sub
mov
mov
int3
test
sbb
aas
push
mov
lcall
mov
cmpl
data16
mov
and
cli
fldenv
jbe
imul
push
test
test
loop
popf
xor
movsl
sbb
int
in
mov
mov
lret
fs
ret
enter
add
dec
and
rcr
and
lock
mov
negb
not
insl
mov
mov
mov
mov
push
mov
xor
aaa
out
mov
push
js
lahf
clc
push
fsubrs
outsl
test
rorb
cmp
movq
jb
push
push
xchg
clc
xchg
push
popf
jae
mov
inc
push
cs
jecxz
nop
mov
ret
pop
pop
movsb
xchg
mov
cmpl
pop
jbe
pusha
and
test
lcall
stc
pop
jle
and
pop
cmp
ss
mov
clc
fmul
xchg
gs
outsb
cmp
xor
cli
add
daa
mov
into
scas
cmpsl
loopne
xchg
xor
scas
or
cmpl
mov
cmp
shll
scas
clc
xor
cmp
mov
lcall
xchg
pushf
pop
xchg
sbb
lea
sbb
in
add
pop
cmp
mov
mov
lret
repnz
das
jns
or
cld
fldcw
sub
and
cmp
pop
movsb
stos
testb
nop
and
call
test
ds
cmp
mov
mov
arpl
push
jl
test
inc
rclb
cmpsl
dec
ljmp
sub
mov
pusha
add
test
in
xchg
cmc
js
dec
sahf
daa
and
adc
test
out
xor
jne
pop
out
push
out
gs
ret
lds
cmc
ss
push
cmpsb
aam
mov
ss
movl
jle
pop
popa
pop
stos
stos
out
aaa
inc
jp
mov
scas
mov
adc
inc
dec
and
adc
pop
push
call
pop
xor
inc
js
push
xor
ficoml
stos
jmp
jecxz
jge
push
leave
xor
in
pusha
push
roll
lock
mov
call
mov
mov
xchg
and
jmp
test
push
cmc
and
pop
jl
mov
dec
add
mov
aam
repnz
fidivl
decb
and
xchg
test
leave
adc
push
pusha
cli
adc
sub
jg
jmp
movb
aas
mov
dec
repz
xchg
inc
lret
mov
lahf
ja
adc
mov
movsb
push
mov
or
sbb
rcrl
movsb
jbe
mov
push
mov
repnz
jno
cmc
mov
test
jmp
jae
cltd
cli
outsl
inc
out
xchg
pop
or
xchg
je
mov
sahf
cmpsb
mov
add
jp
mulb
push
xchg
les
lds
jge
cld
fisubl
mov
test
movsl
scas
cmp
lds
sub
inc
mov
mov
mov
lods
and
cmp
xchg
cmp
jno
mov
mov
adc
dec
xlat
push
mov
popf
mov
sbbb
jp
aaa
pop
les
add
adc
pop
lret
psubd
call
sub
push
imul
add
scas
jno
pop
jb
test
fdivrl
mov
std
inc
and
cli
ret
adc
pop
aad
and
xor
mov
aas
xchg
pop
mov
mov
add
pop
pop
push
daa
scas
xorb
iret
pushf
mov
push
rol
insb
je
test
jo
hlt
nop
adc
or
repz
mov
sbb
in
or
jnp
lods
cmp
push
aaa
push
lock
subb
pop
cmp
popf
lods
xchg
inc
sbb
mov
lea
jne
sbb
jmp
adc
push
shll
jo
inc
test
pop
cmc
mov
retw
scas
cmp
xor
mov
loop
and
xor
dec
cmp
mov
dec
adc
adc
cmp
imul
pushf
lods
test
xor
lahf
or
movsl
lahf
aaa
jnp
inc
jae
mov
xlat
sarb
je
popf
nop
sub
xchg
call
mov
jb
das
inc
lahf
inc
stos
rcl
bnd
jge
loop
loop
sub
jmp
sub
aam
xchg
xchg
or
xor
test
mov
lret
cld
sti
cmp
cltd
jae
cli
jg
rol
inc
scas
mov
jl
add
dec
sahf
out
or
aaa
adc
jbe
not
test
std
jb
lahf
outsb
bound
adc
mov
fildl
mov
popf
mov
not
jo
pusha
mov
loopne
arpl
clc
repnz
cmc
icebp
mov
pop
popa
xchg
xchg
xor
loope
in
ss
js
setb
jp
mov
sub
ljmp
into
jge
lahf
in
or
jb
push
mov
dec
les
js
cmpsb
loop
mov
repnz
sbb
mov
dec
mov
adc
repz
push
gs
add
mov
aas
jno
cli
in
mov
cvtps2pd
mov
aas
outsb
hlt
rorl
in
add
sub
push
push
or
mov
lahf
out
lcall
cwtl
incl
push
mov
fildl
call
push
mov
mov
loopne
idivb
mov
je
push
popf
dec
xchg
sbb
mov
inc
scas
push
jno
popf
out
icebp
pop
loopne
and
insb
out
mov
cmp
and
push
fcoms
clc
hlt
jne
xlat
daa
xor
dec
rorl
mov
jns
cmpl
xor
movb
aad
adc
pop
call
ds
sub
and
and
jge
xor
int
push
stos
outsb
popa
mov
stos
outsl
lret
popf
dec
je
sbb
jge
pop
xor
stos
out
pop
rorb
rcr
inc
pop
cmpsl
mov
incl
cmpsl
xchg
js
sbb
cmpsl
mov
add
jbe
ds
pop
je
fwait
icebp
popa
shlb
js
inc
or
push
popf
cmp
mov
mov
add
xlat
pop
push
fidivrl
pop
in
jns
cmc
and
popf
cmpsb
cli
mov
sbb
and
and
shl
out
pop
test
dec
bnd
mov
jno
test
movsb
ds
push
out
scas
mov
in
push
fsts
mov
cmc
mov
jns
mov
rep
sub
andl
dec
das
and
mov
test
orb
cmp
rorb
ss
mov
or
mov
sub
bound
sbb
or
maxps
or
cltd
fidivrs
sub
lock
xor
hlt
lret
lock
add
xchg
xchg
outsb
or
loop
xor
or
mov
push
xchg
mov
adc
cmpsl
push
sub
xchg
sub
mov
push
xorl
jae
push
and
and
sub
mov
jae
mov
fs
jl
jae
mov
cmp
test
mov
mov
xchg
mov
sub
or
cmp
jb
and
cld
ss
mov
add
fnstsw
je
mov
test
fcmovu
and
fmul
push
cmp
les
xchg
lods
mov
cmp
or
in
sub
push
jb
loop
pop
cmp
sahf
lods
jbe
dec
xor
push
ds
in
mov
and
mov
push
jmp
dec
jae
cs
in
fnstsw
enter
aas
test
addr16
lea
pop
add
inc
xor
jne
fldt
add
pop
mov
pop
xchg
cmp
xchg
cmpsb
push
cli
filds
insb
rcr
jmp
bound
ret
sbb
cmpsl
xor
dec
test
int
and
pushf
xchg
add
ljmp
loopne
xchg
cmp
xor
lds
aad
fnstcw
inc
lods
scas
pop
nop
fmul
xchg
rcr
pop
pusha
notl
fldl
out
mov
and
in
sub
xchg
clc
jo
push
and
inc
or
fidivrs
popa
dec
mov
jne
mov
adc
cmp
cmpsb
mov
cmp
sub
mov
or
or
insl
mov
dec
ret
mov
test
sub
decl
sti
sub
push
mov
mov
dec
cmpl
pop
imul
mov
mov
mov
push
pop
lcall
popf
lahf
sbb
mov
dec
repz
cli
jne
cmpsb
pop
addl
nop
test
aaa
das
fwait
es
mov
das
cmp
rcr
dec
add
mov
repz
out
ds
cmpsl
inc
faddp
fs
filds
out
shll
mov
xlat
sbbb
mov
xlat
mov
mov
jle
out
test
aad
pushf
push
sub
out
dec
shl
add
push
test
sarl
popa
cmpb
stc
xchg
shl
and
ja
data16
inc
jl
xchg
lock
addr16
fs
neg
int3
xchg
or
fbstp
cmp
push
fdivl
xor
mov
bound
cmp
scas
and
fldl
xchg
add
jge
sbb
fs
push
sub
in
and
or
or
cli
ret
inc
bound
rcll
ficompl
cmp
sarb
sub
push
shrb
fsubs
lcall
adc
mov
mov
fildl
scas
sub
mov
pushf
cmp
insb
scas
fmull
mov
push
aaa
aas
mov
mov
test
or
dec
aad
fwait
cmpb
cmp
adc
aas
decb
pop
in
jo
dec
sbb
fs
sbb
jl
and
arpl
sbb
sbb
sahf
mov
fistpl
inc
xor
adc
and
scas
popa
leave
aaa
jg
fadd
arpl
or
lods
cmp
aas
push
xor
pop
push
inc
xchg
or
push
add
pop
lahf
inc
dec
jecxz
pop
mov
out
shrl
jne
enter
mov
push
mov
js
shrl
or
sub
test
negl
xchg
icebp
dec
lds
add
lcall
pop
fwait
subl
inc
in
jg
dec
shl
inc
popf
adc
push
out
insb
cmp
leave
sbb
pop
js
mov
stos
clc
pop
xor
dec
dec
insl
mov
add
aam
and
mov
mov
sub
out
addr16
sbb
repnz
fidivrl
add
sub
cmpsb
dec
loopne
mov
hlt
pop
sub
js
scas
mov
pop
mov
fwait
mov
xchg
loop
xor
pop
jns
push
or
xchg
add
call
pop
clc
testl
mov
movsl
not
add
mov
sbb
dec
add
rorb
jnp
sahf
sub
lods
orb
and
bound
lahf
pop
ret
and
and
hlt
add
mov
dec
repnz
adc
or
lds
mov
mov
sub
or
xor
or
fiadds
ds
in
xor
mull
xor
aaa
mov
sub
mov
dec
out
div
mov
lds
mov
aas
and
jns
mov
and
and
cmp
pop
dec
mov
idivl
mov
xorb
fs
movsb
adc
sub
or
fmulp
sub
lahf
imul
movsb
loop
jae
cld
xchg
pop
mov
push
icebp
rcl
or
sahf
ja
sub
lcall
jmp
and
mov
ljmp
xlat
div
out
bound
cmp
loop
push
movsl
cmp
movsl
pushf
jo
push
fisubrl
pop
cmp
scas
pushf
sub
test
clc
xchg
rol
daa
nop
jmp
mov
mov
sub
pop
lock
imul
les
ds
inc
jmp
shrl
into
out
bnd
cmp
sbb
sbb
es
int
jno
fdivp
sahf
dec
mov
lods
xor
ja
push
mov
inc
xchg
jge
fstps
mov
into
add
clc
sub
pop
and
sbb
xor
pusha
sub
btr
dec
jnp
lock
push
scas
mov
pop
pusha
out
mov
push
or
xor
fdivl
cmp
or
inc
push
jbe
aad
push
inc
mov
push
adc
push
pop
xor
js
pushw
imul
in
jne
in
xchg
jno
mov
push
scas
xor
mov
movsb
mov
adc
pop
mov
and
add
fnsave
sbb
test
mov
mov
in
pop
pop
xor
mov
orb
pusha
fmull
sbb
and
cmp
repnz
mov
mov
push
lods
xor
and
dec
cltd
jp
pop
xor
outsb
inc
repz
daa
por
sub
jo
cmp
sbb
lock
shrb
movsb
in
and
cmp
test
gs
push
mov
out
in
push
mov
roll
int
daa
fnstcw
and
sbb
test
sub
xorl
imull
or
pop
adc
dec
loopne
adc
and
mov
jg
sahf
xchg
push
ljmp
aaa
jns
mov
add
shr
and
add
push
fsub
push
movsl
movsl
mov
popf
and
sbb
inc
xchg
std
sbb
lahf
inc
jns
das
pop
popa
fwait
mov
pop
mov
popf
dec
repnz
dec
add
movsl
ss
fstpl
dec
lret
cmpsl
cmp
fiaddl
xor
cmpsl
sub
push
or
jmp
jae
orl
pusha
jmp
mov
icebp
fildll
or
cld
push
xlat
mov
add
push
mov
in
inc
ds
dec
cmp
adc
test
orb
test
mov
push
pushf
mov
lret
cmp
add
aam
ror
fidivl
pop
xor
and
or
adcl
into
imul
gs
fdivl
dec
icebp
or
shlb
sub
jl
mov
aas
mov
pop
stos
jne
orb
sub
shr
dec
rol
pushf
inc
jp
fmuls
dec
xor
ja
mov
popa
or
leave
cmp
testb
stc
ret
mov
js
aad
lret
ds
mov
jl
mov
int3
mov
add
mov
rcll
das
stos
je
or
mov
and
shl
xor
ficompl
outsl
lret
xchg
cmpsb
rcl
mov
aam
mov
out
pushf
mov
inc
jno
lret
ds
mov
sub
pop
jmp
push
push
gs
or
shlb
xor
out
imulb
lahf
or
mov
test
cmp
test
push
xchg
dec
mov
or
sbb
push
push
in
stc
imul
cmp
add
lcall
cmc
sbb
xchg
out
shl
lcall
mov
inc
inc
clc
xor
in
add
rcrl
mov
adc
filds
aas
pop
xlat
dec
fildll
push
or
lock
lods
repnz
cmp
jmp
dec
notl
pop
jbe
popa
cmp
inc
xor
push
inc
sub
xor
rorb
sbb
mov
pop
andl
mov
sarb
ds
inc
xor
in
lods
xor
daa
rcr
xlat
mov
insl
notl
xchg
jl
dec
out
push
or
sbb
ror
std
push
je
sub
mov
les
sub
pop
cmp
lahf
pop
lea
fcompl
inc
popa
jns
sub
int
pusha
mov
in
fscale
in
adc
dec
mov
mov
inc
js
fiaddl
es
sub
cld
out
sbb
test
or
adc
xchg
adc
lds
stc
ret
mov
xor
adc
popa
insb
dec
or
dec
and
mov
lret
gs
lock
xor
push
and
sbb
pop
lods
lods
popf
jns
mov
add
sbb
movsb
xchg
sub
out
xchg
loop
jne
popf
imul
jl
mov
push
int
pop
pop
popf
xchg
ret
mov
sbb
pop
fistps
sub
cmp
test
cmp
mov
andl
sahf
add
lahf
daa
icebp
dec
cmp
enter
inc
and
mov
je
into
sbb
dec
out
lahf
push
or
pop
std
das
jns
add
and
inc
sbb
pushl
aad
cmp
mov
add
shlb
outsb
pop
mov
lea
mov
push
jmp
xchg
and
and
inc
subl
fsub
pop
xor
inc
inc
or
xchg
mov
fstpt
inc
jg
scas
out
xlat
mov
add
dec
mov
add
xor
mov
les
lret
cmp
inc
ret
in
mov
mov
mull
mov
clc
push
enter
movsl
clc
leave
test
fadd
jle
stos
inc
sbb
push
add
or
adcb
mov
inc
and
aas
push
lock
dec
mov
int
mov
negb
aad
adc
scas
push
enter
jns
jecxz
add
adc
mov
mov
jecxz
xchg
mov
jae
cwtl
lea
mov
lods
inc
inc
daa
mov
insb
imulb
popf
into
mov
ds
nop
popf
xchg
cmc
icebp
fs
inc
mov
add
mov
insb
int
mov
pshufw
icebp
add
idiv
cmp
sbb
or
scas
ja
add
cmp
js
push
jne
fldenv
cmp
inc
and
xchg
mov
or
mov
jmp
movsb
xchg
dec
pop
addr16
bound
adc
and
ljmp
mov
sub
inc
xchg
movsb
push
ds
xchg
push
shll
xchg
insl
shrl
cmp
sahf
push
fildll
adc
mov
add
mov
push
push
test
je
outsb
inc
je
mov
adc
in
mov
dec
test
mov
sub
stc
xor
xchg
sbbb
adc
xchg
bnd
mov
mov
or
xchg
xor
and
inc
adc
bnd
cmc
xchg
sti
repz
fmulp
les
pop
xchg
mov
mov
push
movsl
cmp
sub
adc
push
sub
cmc
test
ret
rol
inc
add
xor
das
insb
cmp
repnz
or
mull
testl
mov
xor
dec
ja
jo
fxch
sub
jecxz
lds
xor
mov
fsubs
div
inc
pop
ret
inc
lcall
xor
nop
pop
daa
pop
dec
mov
sub
lret
ss
jbe
test
clc
ret
testl
sarl
mov
pop
mov
imul
outsb
mulb
jnp
xor
adc
add
dec
ljmp
lods
jbe
fidivrs
mov
repnz
sub
xor
in
in
hlt
nop
repnz
mov
clc
xchg
iret
clc
in
sbb
lds
jbe
mov
imul
adc
movups
popf
ss
xchg
sbb
mov
fimuls
add
fidivs
jmp
mov
mov
ja
out
out
aas
jo
mov
ja
inc
cmp
dec
xor
sub
mov
jnp
hlt
daa
add
and
pushf
sti
lahf
or
leave
test
lahf
sub
int3
or
out
repz
sbb
mov
cmc
and
adc
mull
inc
sbb
inc
mov
aaa
rorl
int
mov
je
cmp
mov
arpl
in
cld
jo
pop
push
jae
les
iret
scas
sbb
adc
dec
stos
daa
fwait
roll
loope
and
cwtl
sub
leave
cli
imul
stc
mov
or
lret
mov
mov
or
mov
arpl
pop
roll
sbb
xor
push
adcb
sbb
pop
or
clc
xchg
inc
mov
outsl
mov
mov
mov
mov
lods
ss
repnz
sub
jno
loopne
xor
xlat
cmp
push
aas
shll
mov
test
adc
out
push
add
pop
mov
inc
pop
mov
sub
movsl
scas
sub
int
xlat
jo
outsb
lods
xor
inc
arpl
mov
pop
sbb
mov
or
xor
cmpsl
addr16
mov
pusha
fdivr
jo
pop
inc
sub
lods
inc
sbb
and
sbb
inc
adc
nop
gs
loopne
imul
sbb
lahf
lea
fistpll
sub
in
sbb
push
pop
ret
ret
shl
and
xchg
int
sub
lcall
xor
xchg
je
xor
cltd
sub
leave
xor
pusha
mov
add
lods
repz
mov
jmp
jmp
mulb
test
out
in
shlb
mov
inc
inc
lret
movsb
cmp
mov
movsl
stos
fcomps
or
push
xlat
dec
jmp
in
mov
lret
loope
cmp
scas
xor
stc
mov
leave
mov
inc
dec
insl
dec
movsl
xchg
mov
mov
push
cmp
xorb
xchg
sub
xchg
add
sahf
rclb
sbb
mov
test
mov
ja
das
icebp
iret
mov
xchg
mov
or
jl
jge
and
ret
addr16
push
test
mov
xlat
mov
pushf
mov
shl
mov
xchg
mov
ss
movsb
in
sbb
daa
imul
iret
sub
loop
imulb
mov
jb
ljmp
push
icebp
mov
mov
mov
dec
ss
xor
movsl
add
pop
sbb
push
pop
pop
cltd
push
das
mov
add
jg
adc
adc
pop
arpl
or
inc
imulb
mov
sub
adc
mov
movsl
mov
sbb
jecxz
test
hlt
jo
into
test
mov
jae
movsb
dec
mov
es
jmp
out
cwtl
stc
imull
mov
aam
jle
movsb
popa
adc
and
mov
sub
or
xor
fidivl
test
data16
cld
sbb
fidivl
jne
scas
xchg
test
mov
and
dec
sbb
test
jle
fbstp
push
jecxz
cmpsl
mov
mov
pop
arpl
xor
lock
jecxz
mov
jecxz
mov
lds
xchg
mov
es
cmp
xchg
or
ja
nop
jecxz
call
adc
loope
push
mov
ret
mov
push
push
mov
mov
stos
jno
fbstp
cmpsl
jb
and
mov
pop
out
add
fwait
test
imul
xchg
repnz
xor
ds
test
cmp
jp
icebp
in
dec
dec
mov
jl
loop
sub
inc
int3
fistps
addr16
insl
jg
sub
inc
mov
in
mov
movsl
sub
dec
ret
scas
fs
jns
mov
fidivl
fwait
or
and
jmp
insb
push
sar
cmp
or
jne
test
aad
test
inc
aad
popa
add
mov
mov
shlb
jl
test
sub
pop
arpl
lods
insb
in
loop
clc
pop
push
and
xorl
xor
mov
arpl
aad
mov
subl
loop
xor
lds
push
arpl
add
adc
aad
mov
loop
int
mov
shl
cmp
xchg
mov
add
inc
mov
pop
lret
sub
adc
xor
divl
and
xchg
pushf
pop
cmp
push
arpl
jp
ja
iret
imul
xchg
and
scas
hlt
das
fcoml
sub
popa
std
sub
daa
stos
enter
call
adc
cmpb
imul
sub
emms
repz
mov
add
jbe
sbb
out
mov
push
dec
push
cmc
sbb
jg
add
push
cwtl
sbb
test
pushf
fs
inc
nop
mov
jae
sub
sbb
enter
jecxz
bound
and
sbb
stos
mov
in
mov
sub
pop
inc
divb
xchg
pop
in
ret
je
sub
inc
sti
popf
pushf
jp
fdivr
fsubr
push
mov
pop
xchg
push
mov
fnstcw
xor
or
dec
cmp
and
shll
icebp
arpl
sub
push
pop
hlt
fistpll
dec
test
mov
mov
sbb
sub
push
push
mov
imul
push
push
push
adc
mov
sbb
dec
sbb
loope
loop
repz
xchg
mov
pop
jo
mov
xor
add
and
xchg
push
pop
ret
shll
imul
inc
in
subb
xchg
test
and
cmp
or
in
pop
sbb
movsb
decb
mov
out
fisubrl
dec
jns
loopne
mov
cli
pop
or
inc
clc
clc
daa
or
pop
repz
gs
cmp
xchg
push
cmp
cmpsl
inc
inc
jge
inc
and
mov
jecxz
push
ja
sbbb
pop
push
orl
mov
ja
add
xlat
mov
mov
xor
fldenv
stos
adc
scas
hlt
pushf
xchg
push
lds
popf
push
clc
hlt
sub
jge
sar
and
pop
mov
fnstsw
vphsubwd
aaa
out
xor
mov
jl
xchg
call
sbb
cmp
fs
mov
call
xchg
fwait
or
mov
in
out
jl
test
adc
pop
mov
dec
bnd
ds
repz
sub
jnp
adc
push
jl
fcmovu
ss
insb
icebp
push
xchg
out
cmp
adc
lods
sub
mov
mov
sbb
sub
jmp
rolb
stc
or
cmp
ljmp
mov
jecxz
and
ret
mov
and
std
add
mov
icebp
fildl
dec
pop
mov
mov
scas
or
and
push
jle
dec
sahf
test
dec
jmp
cmpsb
lock
jno
ffreep
push
repz
cmp
adc
insl
test
std
popf
out
repz
cmp
out
mov
cmpl
fwait
pushf
dec
mov
adc
into
lds
inc
inc
jp
and
scas
cmp
mov
pop
outsb
or
adc
aaa
mov
addr16
pop
sbb
cmp
divl
inc
mov
pop
sub
push
aad
inc
mov
inc
xchg
dec
daa
cmp
xor
cmp
out
push
fbld
mov
inc
mov
add
cmc
mov
hlt
and
push
xor
push
mov
fs
icebp
aam
dec
ljmp
sub
fs
test
mov
sub
jmp
cs
out
dec
push
jle
inc
xorl
xor
loope
ljmp
int3
pop
cmp
sub
and
insl
mov
in
jae
int
or
test
clc
sbb
mov
pusha
jl
jbe
xchg
ja
jb
test
mov
sti
loop
pop
lds
rcrb
stos
adc
adc
out
cwtl
sbb
xchg
add
jp
or
and
stos
loope
or
scas
mov
iret
fcom
xor
or
ss
jp
push
jmp
cmp
ljmp
mov
dec
add
fadds
push
mov
insb
ljmp
jne
lods
shlb
inc
xchg
testl
push
jne
lcall
sbb
push
jo
mov
stos
loop
xchg
xchg
and
cmp
jb
mov
aam
or
sbb
test
push
nop
xchg
adc
sarl
or
in
sub
std
push
aam
and
mov
fcomps
movsb
sub
es
pop
inc
test
mov
aam
in
or
int
std
icebp
sarl
jmp
incb
aam
ret
sub
sbb
jns
jmp
sub
ds
mov
or
loopne
das
xchg
sub
sub
jne
mov
pand
push
push
cmp
test
mov
jl
or
fistps
dec
pop
jg
and
mov
test
pop
push
das
cmp
dec
notb
repnz
push
xchg
dec
jo
lcall
cmpsl
jne
fisttpl
shlb
jno
cs
mov
push
mov
test
xchg
aaa
repz
out
popf
je
jnp
push
test
sti
xchg
jg
test
subb
mov
xchg
cmp
mov
mov
pop
cmp
loop
or
or
and
fadd
xchg
test
movsl
sbb
add
ret
pop
inc
push
add
jp
xchg
enter
pop
iret
pop
loopne
pop
jge
pop
idivl
lock
adc
pop
mov
push
pushl
pop
mov
ja
fsub
cmp
xor
in
push
in
dec
cmp
jno
pop
dec
or
xchg
mov
and
aad
loop
pop
sbb
pop
push
shll
mov
jmp
xchg
sbb
jp
cmp
mov
mov
loope
mov
ss
std
xchg
out
mov
shl
mov
test
leave
xor
mov
sbb
lods
push
mov
and
rol
out
ret
mov
jg
test
enter
mov
leave
dec
xor
ja
sub
arpl
imul
pushf
push
xor
xor
addr16
mov
jno
jne
jmp
mov
dec
pop
push
pop
popa
xchg
xchg
dec
out
xor
es
push
out
push
mov
lock
shr
mov
in
cmp
out
mov
sbb
scas
sti
xchg
dec
add
icebp
mov
push
mov
mov
pop
xbegin
or
arpl
or
aaa
insb
push
add
subl
fwait
into
aas
cmpsb
mov
in
mov
in
outsb
or
add
in
cmp
cmpsl
jge
pop
sti
lea
adc
rorl
pop
scas
xchg
sub
inc
xchg
mov
mov
pop
mov
or
ljmp
sbb
mov
mov
mov
xor
ljmp
scas
mov
in
pop
lcall
enter
shlb
mov
jne
subl
mov
call
adc
inc
js
clc
lods
test
add
das
push
movsb
pushf
jnp
mov
lds
in
mov
test
pop
cmc
xchg
or
cli
lea
jo
lea
mov
mov
push
fists
scas
aaa
pop
mov
mov
neg
mov
loope
gs
jg
icebp
and
cli
lret
add
or
ror
pop
cmpsb
out
movsl
jle
jmp
xchg
mov
jle
xor
out
add
cmp
and
cltd
pop
ljmp
xor
inc
push
rep
jo
outsb
fs
movsb
push
sub
jmp
sub
pushf
adc
jnp
and
pop
adc
imul
mov
mov
pop
or
scas
mov
popa
mov
in
adc
pop
shlb
fadds
jg
add
andl
sub
mov
call
rcl
cmp
daa
cld
cmc
adc
clc
mov
cltd
cli
pusha
je
sti
or
addr16
mov
jbe
mov
js
mov
jns
xor
popa
jge
shlb
jmp
gs
jl
addb
gs
mov
daa
cld
aad
push
inc
fdivs
push
out
fisttpl
push
inc
lods
mov
push
add
or
xchg
mov
scas
xor
inc
jge
rolb
lret
daa
inc
ror
jbe
xor
cld
mov
and
popa
sbb
ljmp
mov
xchg
push
add
nop
jno
mov
sbb
and
shrl
inc
in
jb
pusha
cld
sbb
mov
adc
push
add
cmc
popf
lods
or
jns
xor
cmp
ret
loope
out
test
mov
and
push
dec
jno
stos
in
push
sub
mov
mov
pop
or
mov
sbb
je
mov
mov
addr16
inc
mov
pop
or
cmc
fiadds
xchg
int
in
icebp
inc
cmc
mov
mov
cmpsb
mov
stc
pusha
pusha
lret
sbb
fnstenv
push
sub
add
lahf
jno
aas
loopne
adc
inc
and
aam
add
mov
mov
insl
sub
sbb
stos
outsb
lock
xor
sbb
shrb
data16
xorl
cli
and
inc
std
xchg
pop
int
mov
iret
push
add
fcomps
mov
pusha
push
push
imull
cmp
mov
mov
icebp
inc
mov
mov
dec
jle
fistl
cmp
clc
or
je
mov
aaa
lcall
and
sub
arpl
pop
xchg
mov
sub
xchg
jns
push
das
xor
ret
aaa
and
shl
mov
adc
jo
aaa
or
lret
dec
jb
fisubs
outsl
rclb
add
pusha
adc
xor
xchg
js
push
fnstcw
ja
stc
data16
addl
pop
xchg
ss
jle
adc
pop
sub
cld
fisubs
adc
pop
mov
je
pop
pusha
cmpsl
fstl
mov
mov
push
or
fadds
sub
mov
adc
pop
or
inc
xchg
pop
fldenv
or
xor
cmpsb
insb
add
jg
test
xchg
decl
movsl
jle
xor
stos
fcomps
cmc
xlat
pop
call
jle
loope
in
pop
jbe
pop
fsubs
pop
stos
in
dec
mov
dec
call
sti
pushf
loop
and
jno
xchg
test
int
and
cmp
and
test
cmpsl
xlat
mov
jbe
ret
inc
inc
filds
jb
mov
loopne
movsb
out
divb
mov
daa
add
int3
cmp
daa
stc
aas
inc
gs
inc
incl
outsl
mov
push
fistpll
inc
push
pop
int
push
and
mov
adc
jmp
cmp
mov
mov
gs
jp
aam
stos
adc
push
mov
xor
jbe
push
cli
sbb
gs
nop
and
push
sbb
mov
dec
sbb
aas
in
int3
dec
je
enter
sbb
clc
fdivrl
mov
movsl
andb
dec
shl
scas
dec
add
popf
sub
mov
pop
lods
adc
and
je
mov
cli
mov
pop
push
ljmp
sub
xchg
cld
jo
clc
sub
aad
fbstp
popa
mov
xchg
inc
push
test
jbe
ficoms
fs
sub
push
xor
or
ljmp
xlat
aam
mov
outsb
xchg
pop
aam
mov
or
cmc
inc
aam
dec
jnp
ss
aas
inc
jne
in
cmc
mov
pop
sub
outsb
pop
test
inc
mov
sub
mov
mov
outsl
pop
jge
repz
xor
lods
pop
in
ljmp
movsl
xchg
ljmpw
stos
fsub
rcr
aas
dec
mov
push
jne
dec
push
aad
das
inc
imulb
cltd
out
mov
mov
hlt
dec
ret
test
ret
scas
cmpsb
xor
icebp
ja
subl
inc
xchg
mov
out
dec
out
and
pop
ljmp
cmc
sbb
lret
gs
out
es
pop
je
mov
loopne
and
sbb
jmp
mov
mov
jp
cmp
push
loope
sub
testb
pop
es
jecxz
enter
stos
lods
cmpb
imulb
cltd
jne
daa
mov
sti
inc
inc
pusha
les
lret
data16
jno
adc
loop
lahf
jne
inc
sbb
out
aam
jb
test
fnsave
sbb
xor
test
std
popf
icebp
pop
loop
cmc
mov
add
aad
popf
shl
add
dec
cmp
fyl2xp1
sbb
sbb
adc
test
test
mov
ja
rorl
jle
jle
dec
ss
hlt
sahf
or
push
inc
xchg
scas
stos
clc
mov
and
in
or
add
jmp
fsubl
inc
push
test
push
repnz
daa
jno
jb
sarl
push
xor
mov
push
insl
cmp
int
mov
arpl
in
es
sub
adc
daa
sbb
dec
push
mov
or
adc
xchg
fs
jbe
mov
aad
cld
aam
andb
imul
xchg
loop
scas
push
pop
dec
in
mov
inc
loope
icebp
call
bound
std
popf
pop
call
jb
movsb
jmp
cmp
pushf
inc
sbb
mov
xchg
jg
imul
push
int3
or
mov
lret
cmpsl
jne
pop
pop
xchg
cmpsb
mov
and
sub
out
ljmp
pandn
push
fistpl
dec
mov
jp
stos
es
xor
cld
adc
shlb
or
mov
pushf
clc
jl
fldt
int3
cmpl
imul
xorl
negb
adc
js
repz
iret
dec
xor
or
ja
xor
ljmp
mov
pop
imul
lds
cmp
or
fldcw
cmpsb
andl
dec
inc
test
aaa
xor
xor
sub
mov
subl
dec
adc
sbb
fdivrp
aaa
leave
add
mov
sub
ficompl
shll
stos
cmc
insb
and
mov
lods
xor
loope
cmp
nop
fisttpll
pop
mov
test
cmc
mov
push
sub
aam
xchg
mov
ret
rolb
test
dec
mov
cmp
push
adc
outsb
jnp
test
adc
out
aaa
cmp
out
jle
repz
push
pop
push
pop
das
das
cmp
sbb
or
insb
and
mov
adc
inc
call
cli
or
jmp
into
sbb
mov
mov
mov
sbb
outsl
data16
sbb
pushf
mov
add
add
dec
bound
lret
sub
jmp
jg
and
push
mov
sub
jne
sub
stc
and
mov
stc
inc
loopne
cmc
ret
add
insl
jbe
ja
inc
push
jbe
lret
ss
scas
pop
pusha
pushf
shrb
and
jne
mov
movsl
inc
mov
push
push
outsb
outsl
mov
jmp
xchg
and
and
call
inc
enter
icebp
ss
test
fnstenv
stc
pop
mov
nop
fadd
rcrb
jbe
in
or
in
fsubs
dec
sub
jp
in
movb
mov
mov
jnp
push
out
pop
add
xor
test
stos
cmp
cmpsl
adc
setl
into
add
psubb
mov
mov
sbb
ja
sti
out
iret
sbb
aad
div
pop
shl
mov
shll
lea
or
add
js
mov
jbe
scas
out
or
or
mov
push
ud1
outsl
jnp
stc
daa
mov
add
push
lds
dec
ss
jecxz
xchg
outsl
push
fwait
testb
jb
inc
sbb
aas
sar
xor
lea
cmp
jle
sub
movsb
lock
fstps
divl
subl
jne
out
mov
shr
repnz
mov
sbb
pcmpeqd
call
inc
std
xor
ja
aam
sbbb
pop
ja
jnp
pop
sbb
loope
fcompl
iret
mov
movsl
es
aas
sub
inc
mov
mov
pop
mov
adc
xlat
jo
int3
dec
clc
subb
push
out
add
sbb
clc
xorl
bound
push
and
jmp
lds
shr
lds
test
sbb
cmp
push
bound
adcl
dec
out
cwtl
mov
jecxz
sbb
pop
test
adc
and
pop
mov
jae
add
in
mov
mov
cmp
or
mov
dec
sbb
xchg
repz
mov
into
push
inc
lods
lds
jne
into
mov
add
cmp
jmp
dec
insb
cmp
in
loop
pop
jg
pop
sbb
cmp
sub
mov
mov
mov
mov
lcall
jge
mov
or
mov
and
sub
movsl
ret
fidivl
aad
pushf
cmpsl
cmp
and
push
sbb
cld
into
dec
fisubl
adc
lods
pop
dec
fisttpl
adc
lds
push
mov
rorb
iret
insb
mov
pop
cs
fnstenv
xor
das
in
int
lods
aaa
mov
repz
fcoml
adc
add
sbb
aas
cs
out
mov
xor
fs
scas
popa
jmp
adc
push
stc
scas
ds
aam
cld
jnp
xorl
mov
lea
outsl
fs
out
xor
and
hlt
mov
sbb
test
mov
fstpt
pop
out
jne
mov
fdivs
mov
lods
testb
jle
or
sub
push
loope
xchg
enter
test
mov
push
mov
sub
sbb
lods
jae
jle
negb
cmp
sbb
xchg
adc
popa
sbb
mov
hlt
adc
outsb
jb
mov
jg
int3
aas
push
les
cwtl
popa
push
sbb
push
sub
add
cmp
inc
jno
mov
and
movsl
loop
das
sbb
test
push
loope
in
push
pop
enter
xchg
sar
sub
enter
shufps
fcomip
mov
pop
rcr
or
cli
stos
inc
decb
xlat
mov
mov
jl
in
dec
filds
adc
jge
scas
add
adc
mov
xchg
jg
addl
mov
mov
and
outsl
mov
dec
cmp
pop
mov
pop
jno
sub
orl
sbb
or
add
sub
sub
je
stos
je
xor
add
pop
or
es
movsl
in
and
mov
pop
inc
frstor
dec
icebp
in
and
jg
fldl
mov
shll
mov
pop
stc
and
add
scas
pusha
idivl
xor
mov
out
movsl
pusha
push
jo
popf
setp
clc
inc
pop
in
xor
xor
push
jno
pushf
aaa
and
stos
rcrb
sbb
jnp
dec
sub
mov
xchg
loop
cmpsb
and
pop
add
std
sub
fdivp
or
sarb
mov
add
cmpsb
movsb
fisubrl
mov
js
pop
inc
xor
mov
add
ret
adc
mov
sbb
mov
int3
incl
xor
mov
jle
xor
mov
in
add
mov
in
imul
sbb
out
mov
test
lods
xor
jnp
xor
insl
push
sub
adc
adc
repnz
mov
or
int
ficoml
enter
xchg
mov
cli
icebp
inc
push
icebp
repz
and
sbb
dec
xchg
pop
sbb
fstl
lahf
pop
sub
sbb
das
daa
add
sbb
pushf
mov
mov
jp
mov
fsubs
jnp
jge
mov
js
ret
xor
jg
cmc
rcl
mov
dec
sub
dec
mov
xor
call
mov
add
test
mov
rorl
addr16
jle
in
lret
loope
push
sub
faddp
pop
clc
push
dec
jb
arpl
pop
mov
dec
movsb
push
std
dec
adc
push
shlb
repnz
or
call
fst
xchg
hlt
call
xlat
out
aas
std
jns
or
cmp
mov
jns
pushf
popf
dec
out
lahf
test
jmp
fcomps
mov
adc
fs
xchg
sub
es
into
divl
pushf
subb
mov
stos
jbe
cmp
shrl
dec
cmpsb
stc
sub
repz
movsb
inc
mov
mov
fiadds
lods
cwtl
mov
dec
xchg
leave
mov
fwait
cmc
sub
cmp
cli
inc
ret
pop
lods
pop
or
inc
jge
cmpsl
fisubrl
ja
out
push
test
dec
and
clc
fs
mov
sub
sbb
pop
insl
rcrb
pop
xor
add
daa
sbb
sub
lods
je
in
dec
pop
addb
aad
pop
arpl
mov
or
adc
jnp
mov
pop
popf
jae
lret
cwtl
and
mov
mov
test
dec
push
pop
xchg
lods
dec
pop
xchg
in
fsubrl
pop
mov
cmp
jns
add
clc
incl
mov
ret
inc
shll
cmp
bound
jb
adc
lcall
cmp
pop
leave
cwtl
pop
push
fs
xchg
add
cld
sbb
jle
negl
fsubrl
xchg
adc
mov
sbb
arpl
pop
jp
bound
lods
xor
jmp
pushf
pop
rcll
fucom
xchg
test
mov
cmpsl
fwait
pop
leave
cmp
movsb
sbb
add
xor
cmp
mov
jbe
inc
adc
movsb
add
inc
sahf
pop
loopne
test
dec
lods
jne
mov
sahf
mov
adc
cmp
adc
pop
popf
inc
movsl
ficoms
push
popa
out
sbbb
test
cmp
idivl
cmp
aam
pushf
pop
add
aas
out
daa
in
pop
push
popa
cmp
imul
sbb
sub
mov
imul
bnd
daa
sub
jl
jle
cmp
mov
sub
ficompl
or
mov
jmp
mov
mov
xadd
in
cwtl
loop
jecxz
test
call
aaa
shll
outsb
adc
mov
rcrl
outsl
and
nop
mov
dec
out
lock
mov
dec
lahf
adc
xor
imul
mov
jb
shl
dec
ja
cltd
lcall
sarb
cmpsl
sub
enter
sbb
dec
nop
jbe
fldt
fstpl
pop
adc
lods
sbb
int
insl
hlt
push
bound
and
arpl
dec
mov
jns
aaa
fistpll
pop
mov
xorl
cmp
jnp
cmp
xchg
inc
into
lods
bound
jle
sbb
stc
ja
adc
stc
bound
sub
jecxz
fcoml
enter
loope
mov
pushf
negb
popf
rcrb
js
jle
inc
mov
pop
out
jno
cmp
cmp
mov
shl
jns
mov
aaa
ret
shll
sbb
fs
ret
push
inc
test
dec
inc
ffreep
jl
roll
lcall
lods
dec
int3
mov
sub
lret
out
xor
aas
jo
mov
sar
inc
fidivrs
in
in
cmp
popa
pop
adc
leave
imul
fs
enter
mov
popf
test
subb
lret
loop
out
stos
and
test
adc
shrb
leave
incl
jmp
inc
cmpsb
loope
jns
lds
es
shrb
ds
mov
hlt
je
popf
aad
xor
push
insl
lds
push
sub
dec
aad
cltd
sub
sub
jmp
mov
xorl
stos
mov
popf
addr16
lea
push
or
mov
loop
cltd
pop
sbb
enter
ja
repnz
inc
xorb
jno
xor
int3
test
dec
cmp
jp
hlt
in
cmp
mov
jbe
push
mov
pop
icebp
jno
mov
inc
push
int3
jae
add
out
mov
ret
filds
xor
movsl
lock
sub
test
xchg
pop
pop
inc
push
push
es
cltd
stos
test
lods
pushf
add
and
jne
out
notl
push
pop
repz
mov
jnp
insb
inc
adc
xor
xlat
fstpl
cli
mov
or
movsl
mov
clc
lret
or
fistps
rorb
xor
iret
ss
and
sub
xor
add
sub
loopne
mov
ret
subl
mov
sub
ficompl
test
dec
pop
xor
in
inc
lcall
mov
lret
xchg
popa
das
and
or
sbb
repnz
outsl
adc
xchg
mov
je
dec
ja
mov
out
sti
gs
pop
sti
icebp
testb
stos
mov
shrl
adc
outsl
jmp
je
mov
loop
popf
mov
out
mov
add
xchg
cld
xchg
sub
jbe
sbb
pushf
cli
adc
mov
insl
outsl
and
lahf
mov
jmp
faddl
cs
dec
xchg
mov
add
dec
adc
fidivl
fwait
test
std
mov
dec
test
ja
mov
and
out
xor
js
mov
shlb
inc
das
mov
sbb
mov
inc
jb
mov
mov
xlat
das
xor
clc
je
and
repnz
cld
mov
xchg
jl
push
pavgb
xor
shlb
pop
adc
int
sbb
push
mov
add
sub
mov
and
mov
adc
push
pop
inc
fsubrs
orl
sahf
rcl
pushf
add
mov
add
in
decb
sar
nop
mov
popf
push
fwait
mov
jo
add
dec
mov
add
or
xchg
push
mov
dec
lret
hlt
sbb
fildll
rcrb
adc
fdiv
sub
adcl
aas
adc
popf
cmp
push
push
test
xor
in
aad
mov
js
adc
xchg
push
push
pop
inc
cmp
pushf
sbb
mov
cmp
jns
in
and
jge
fldcw
addr16
outsb
inc
std
pop
scas
leave
xor
shl
adc
sbb
jecxz
inc
std
xor
testl
ret
aam
nop
or
das
pop
push
loope
xchg
nop
inc
flds
ljmp
dec
inc
xchg
ds
loope
inc
cld
in
mov
xchg
movsb
lea
push
test
cmp
sub
jp
sbb
mov
jp
insl
jbe
inc
lret
dec
je
and
lcall
hlt
dec
loop
leave
test
rorb
pop
mov
and
nop
mov
and
shlb
cmp
xlat
in
and
xchg
or
hlt
mov
stc
sbb
shlb
mov
mov
sub
aaa
test
mull
mov
icebp
push
enter
fists
fwait
xor
push
jecxz
popf
xlat
stos
cmp
inc
cmp
mov
repz
into
std
and
lods
xor
inc
cmpsb
dec
dec
mov
iret
iret
dec
leave
pushf
nop
push
imul
test
cmp
gs
sbb
jnp
movsb
sbb
jno
mov
std
movsb
mov
xchg
pop
outsl
xor
dec
adc
popa
cmp
sub
mov
enter
andb
aas
inc
mov
imul
push
jmp
xchg
das
in
pop
add
nop
sti
sub
inc
jbe
fildll
ljmp
sbb
sbb
xchg
repnz
nop
mov
or
repnz
sub
fistpll
pusha
imulb
lret
cli
movsl
mov
ja
cmp
pop
mov
insb
subl
stc
and
imul
jno
cwtl
mov
jno
pop
mov
gs
and
or
pop
or
cmp
and
and
es
mov
dec
push
adc
xchg
clc
mov
call
loop
cwtl
arpl
sbb
das
cmp
test
test
sbbl
out
inc
xor
mov
fisubrl
sbb
push
stos
in
push
jge
jecxz
das
test
xor
mov
mov
mov
inc
mov
jl
push
inc
inc
inc
sbb
push
bound
or
movsl
pushf
sub
xchg
out
push
inc
fadd
add
pop
lds
je
test
push
cs
xchg
stc
aad
add
ret
fisttpll
sbb
repnz
pop
dec
std
dec
or
shrb
repz
sbb
pop
pop
leave
lods
aam
add
clc
inc
pop
test
enter
ret
sub
mov
ret
mov
dec
inc
fcomps
sub
out
cmp
inc
enter
bnd
push
fxch
sub
push
into
or
push
pop
std
arpl
dec
or
add
mov
push
xor
xlat
sub
iret
lret
sbb
fs
jbe
cwtl
add
xchg
cmp
push
and
inc
lret
xlat
mov
das
and
sbb
adc
ds
shr
arpl
mov
mov
insb
sbb
cld
pop
clc
clc
pop
data16
leave
loope
mov
cld
add
xchg
addr16
in
fcoms
pop
pop
int
iret
dec
xchg
movsb
mov
enter
test
xor
sub
xchg
pop
in
insl
gs
cltd
cmc
xchg
divl
mov
xor
jl
mov
mov
dec
loop
or
popf
xor
mov
lahf
mov
add
mov
mov
pop
jecxz
dec
outsl
clc
adc
fcompl
sarl
shrl
mov
out
lods
in
xchg
data16
das
dec
add
inc
adc
sub
jmp
or
nop
xchg
mov
test
mov
fdivs
fsubrl
cmp
pushf
and
test
loopne
imull
jb,pn
in
cmp
cwtl
cmpsb
xchg
mov
mov
sbb
and
fwait
or
sahf
xchg
sbb
sub
repz
xchg
jge
lea
ret
push
mov
sub
and
dec
cmp
lahf
pop
adc
scas
mov
inc
sti
jmp
sub
jl
fldcw
mov
std
loopne
test
or
mov
ret
dec
xor
and
popa
fucom
cmc
sbb
pop
stos
lcall
lret
sub
xor
xchg
adc
mov
mov
sub
xchg
or
popf
movsl
cs
lahf
in
in
testb
xchg
out
fildll
syscall
xor
and
and
xor
and
or
or
xchg
pop
xor
mov
jecxz
icebp
mov
mov
movb
imul
movhlps
lock
xchg
and
sti
shr
push
push
inc
cmp
push
pop
insl
dec
xor
mov
pusha
jbe
add
xorl
or
stc
sti
and
in
mov
xor
push
ljmp
dec
mov
inc
sub
test
movsl
or
test
sbb
adc
jnp
outsl
out
xchg
movsl
and
xchg
stos
test
mov
cld
movsl
push
jp
and
int
xor
clc
lea
xor
aad
cmp
jle
test
jb
idivb
sbb
sti
sbb
jno
xor
push
xchg
add
fbld
cmp
sub
fwait
sub
mov
in
xchg
cld
xor
ja
std
or
xchg
fstps
dec
rclb
sarb
jp
loope
sbb
mov
sbb
pop
lret
cli
xchg
icebp
clc
xor
xchg
jns
mov
test
push
jne
and
icebp
mov
pushf
mov
push
scas
test
clc
mov
mov
dec
or
jb
xchg
cmp
or
jge
and
or
ds
pop
or
push
movsb
lret
jmp
mov
and
cmp
pop
iret
add
pop
in
push
loope
and
int
sbb
into
ljmp
xchg
xchg
cltd
push
sarb
pop
int
lods
lock
xchg
mov
hlt
mov
sub
add
cmp
repnz
pop
push
shrd
jno
mov
arpl
jb
mov
cmp
lods
push
and
int
jge
sbb
xchg
out
xchg
cld
sbb
cs
call
mov
mov
cmpsb
mov
shr
insb
mov
ret
mov
xchg
mov
xchg
jns
xchg
out
push
scas
cld
mov
stos
cltd
sbb
dec
out
popa
or
sub
sbb
add
xchg
and
push
mov
xchg
and
mov
dec
fcompp
ljmp
sti
ja
outsl
xchg
orl
mov
fnstcw
fsts
push
pop
or
dec
cmp
inc
inc
repz
sub
lret
daa
popa
pop
xor
cs
or
mov
cmp
flds
xchg
dec
mov
testb
xlat
mov
test
xchg
jns
aaa
rclb
fwait
rcrl
xchg
int
add
lods
rcrb
movsb
in
out
inc
inc
mov
lea
ljmp
fisubs
pop
xlat
sbb
jno
dec
inc
ret
inc
add
cmc
imul
xor
lods
pushf
enter
dec
testb
leave
insl
mov
mov
insl
sahf
lock
imul
movsl
mov
iret
das
pusha
movsb
leave
dec
push
rcrb
js
xchg
cmp
mov
push
fxch
fs
ja
outsl
sub
push
sub
push
mov
cmpsb
mov
gs
mov
lret
movsb
inc
push
dec
push
out
dec
pusha
and
cmp
cmp
sub
cmc
sub
pushf
cmp
xchg
xor
aas
rol
insb
pusha
add
fwait
and
mov
insb
lcall
sub
in
pushf
cmpsl
inc
in
xor
sub
outsl
flds
scas
fistpll
rcll
cmp
push
xchg
lods
mov
sbb
cmc
out
adc
js
dec
cmp
shlb
ds
xor
jno
outsl
adc
mov
inc
sarb
or
pop
ja
out
push
xor
imul
sbb
mov
aas
mov
push
jmp
push
inc
dec
lahf
pop
sub
out
push
or
cmp
pop
lock
push
out
nop
cli
ja
popl
es
or
xchg
in
or
pop
cmc
or
or
push
rcrl
out
push
icebp
cwtl
jo
fcomps
ret
pop
pop
xor
sahf
jge
xchg
push
lods
inc
sub
dec
mov
jp
scas
fistl
aaa
int
inc
out
lods
stc
fldenv
sub
mov
cmpsl
movsl
or
lret
mov
add
jnp
mov
sub
sub
pop
sar
xchg
cmp
ljmp
sbb
insl
push
clc
arpl
shl
ret
movsb
push
ss
adc
clc
cmpsb
jl
js
or
outsb
and
xchg
mov
ret
and
mov
pop
sbb
jmp
cld
mov
push
cmp
xor
lahf
add
lds
mov
fnstenv
adc
cmovs
cmp
movl
mov
ret
test
loop
or
mov
stos
test
dec
jle
fildll
xor
pop
sahf
sub
dec
add
adc
cwtl
pop
xchg
or
pop
inc
das
popa
into
fs
inc
xor
insl
lret
push
aas
sub
pop
add
xor
faddl
push
dec
mov
pop
xchg
dec
jg
sub
mov
pop
inc
ds
push
lods
imul
push
stos
scas
xchg
jg
imul
icebp
roll
mov
prefetcht1
cmp
pop
fstpl
shlb
add
lahf
mov
or
inc
insl
sub
lods
mov
cmp
xor
mov
mov
popa
mov
or
lahf
icebp
ja
sbb
mov
and
test
pusha
cmc
subl
addl
nop
imul
outsl
pop
jae
stos
inc
push
stos
sub
jmp
cmp
cmp
xchg
xor
jae
scas
push
add
shl
mov
mov
out
jo
in
mov
rorl
push
sbb
loop
adc
push
jo
sahf
dec
and
pop
lret
cld
pop
and
mov
clc
popf
mov
pusha
out
mov
andl
jmp
je
cmp
pushf
adc
add
jbe
outsl
pop
and
or
push
js
je,pn
push
bound
lcall
sahf
cmp
loope
pop
lahf
sbb
enter
xor
sbb
ss
sarb
inc
outsl
and
mov
lea
adc
loop
cli
jle
sub
and
jb
mov
mov
lret
insb
push
lret
ja
adc
pop
xchg
fxch
inc
jmp
xor
leave
loopne
jae
outsb
and
stos
pop
cmp
or
aas
aam
sbb
testl
aaa
lahf
and
outsb
popa
jmp
push
pop
ret
nop
push
xor
push
bound
lods
aam
pop
jge
jbe
dec
push
test
lods
sar
mov
push
add
xchg
insb
clc
mov
out
int3
push
aas
scas
data16
mov
xchg
xchg
insb
and
popa
add
mov
out
cmpsb
or
xor
xchg
imul
and
idivl
orb
push
out
dec
lods
or
movsb
xor
outsb
adc
jne
ja
mov
aam
mov
popf
cmp
jge
mov
mov
lret
xchg
pop
fistpl
fldcw
scas
in
inc
sti
je
aaa
push
xor
cwtl
ja
mov
jge
push
cli
divb
mov
xlat
test
xchg
push
sahf
ret
mov
out
imull
cmp
adc
sarl
xchg
mov
push
out
mov
and
push
add
hlt
lds
stos
mov
add
cmp
scas
movsb
adc
mov
xchg
lods
push
push
movsb
sbb
mov
movsb
rdpmc
lods
xor
repz
sub
push
pusha
jno
mov
repz
jnp
shrb
jmp
popf
les
mov
fldt
fdivl
test
add
adc
mov
jo
or
imul
cmp
rcrb
mov
icebp
sub
ret
cmp
cmp
jb
stos
mov
incl
idiv
jb
arpl
xor
xchg
push
add
pop
shlb
fbstp
lock
sbb
stos
jns
jecxz
mov
pop
sub
xor
add
mov
loope
jmp
mov
mov
mov
lcall
push
xchg
je
mov
mov
inc
xchg
int
and
repnz
mov
aad
and
add
mov
out
aad
cmp
jge
and
jbe
and
mov
mov
mov
cmc
sub
jno
adc
addb
dec
lock
scas
or
add
popf
mov
cmp
xor
repz
inc
inc
sbb
insl
sbb
push
ret
cmp
out
icebp
mov
daa
pusha
out
and
dec
push
test
je
mov
movsl
inc
fsubrs
pop
mov
lods
adcl
scas
mov
sbb
adc
insb
inc
shl
fdivrl
nop
rcr
xor
and
lods
jb
lret
or
mov
dec
adc
cmp
mov
xlat
adc
fisubrl
lcall
mov
mov
insl
jae
cli
xor
rorb
shrb
in
mov
shll
mov
add
sbb
out
and
mov
imul
lret
add
scas
or
out
or
out
popa
mov
mov
cmpsb
mov
cmpsb
pop
gs
pop
mov
inc
leave
cmp
roll
adc
push
popf
fwait
push
setno
movsb
mov
inc
rol
cmp
flds
push
mov
add
stos
movsb
mov
add
roll
mov
and
dec
test
dec
nop
sub
cmc
arpl
cwtl
out
sbb
loope
lods
mov
and
xor
sub
fsin
sbb
jge
int
xchg
lods
sub
shlb
test
shl
cmp
push
imull
lods
cs
loopne
cmp
fs
jecxz
pop
dec
mov
push
lods
jno
pushf
pop
push
sub
add
repz
xlat
fwait
sti
push
cld
push
pop
mov
or
push
inc
fcmovnb
mov
mov
dec
in
in
pop
jbe
repnz
into
push
xor
sub
test
sub
popf
mull
arpl
cmp
repz
js
xchg
fdivrs
arpl
aad
push
sbb
aas
outsb
mov
add
lods
xchg
scas
xor
loope
bound
icebp
inc
and
clc
daa
sbb
xchg
ljmp
adc
cld
mov
inc
and
clc
pop
icebp
movsl
dec
test
jno
jp
inc
inc
pusha
fs
xchg
popf
sbb
mov
movsl
push
in
mov
lahf
and
in
adc
out
or
add
fiaddl
xchg
popf
push
inc
mov
sub
mov
incb
shr
pop
add
addr16
xchg
xor
fmul
xlat
jp
jbe
or
push
xor
std
icebp
lods
aad
lahf
fs
out
mov
jb
cmpsl
sub
fwait
inc
repz
ret
stos
in
jmp
rorl
or
mov
cmp
and
scas
xor
push
inc
mov
lahf
jne
adc
or
jmp
rol
sub
dec
shll
or
mov
jnp
xor
inc
mov
pop
clc
xchg
fimuls
outsb
push
cltd
and
adc
or
mov
js
mov
dec
xlat
mov
sbb
and
sbb
pop
jno
lock
into
sub
std
lahf
dec
cwtl
mov
mov
lcall
xchg
xchg
mov
xchg
mov
mov
sbb
das
gs
xchg
mov
add
ret
test
inc
jg
lock
xor
pop
add
sbb
std
jmp
cmp
lret
pusha
mov
aas
call
jae
or
jle
jno
movsb
jmp
je
aaa
add
add
jmp
cmp
sub
xor
jne
add
out
pushf
mov
sahf
cmc
cmpsl
lahf
adc
loop
sbb
adc
push
push
aam
bound
std
xchg
and
arpl
test
push
fcom
mov
mov
insl
mov
fld
inc
push
inc
xchg
mov
push
jle
mov
jne
mov
cld
sub
mov
lods
scas
add
imul
out
addr16
xor
and
mov
sub
jmp
cmp
aaa
sub
out
sub
mov
cmp
in
cmp
inc
inc
out
out
mov
or
arpl
lret
pop
pop
xchg
in
popf
ss
rcll
or
mov
das
loop
pop
add
xchg
ds
jnp
mov
mulb
sub
adc
lcall
inc
in
int
in
inc
ljmp
fwait
rolb
adcb
loop
mov
fiaddl
movsl
pusha
movsl
add
int3
lea
test
or
bound
mov
push
cld
adcb
jmp
xor
test
test
mov
pusha
test
jg
rolb
shrl
leave
sub
in
les
mov
ret
pop
sbb
lret
lcall
std
sti
es
fidivrs
roll
sahf
ss
xorb
ret
cli
pmulhuw
xchg
sbb
jmp
pushf
rorb
jbe
das
mov
mov
dec
pusha
mov
lods
mov
push
jo
rorb
push
jo
out
std
pop
fistl
sub
leave
fcoml
sbb
jl
xchg
pop
lods
xor
clc
jnp
cmp
sbb
cmp
orl
in
insb
inc
jns
stos
test
imul
push
loope
sti
inc
sbb
push
mov
arpl
dec
cmpsb
cwtl
jg
insb
rcrl
adc
cmp
clc
push
mov
lods
inc
jne
xchg
jae
mov
in
dec
movsb
or
das
pop
sub
pushl
mov
or
js
inc
ljmp
mov
rcl
jne
mov
mov
adc
jmp
jg
repz
ret
inc
push
xor
pop
rorb
dec
xlat
jl
dec
xchg
inc
insb
inc
mov
cmp
mov
cmp
and
addr16
pop
rclb
sub
push
push
dec
cmp
lock
insl
mov
cmp
sbb
xchg
aas
in
cmc
pop
mov
pop
mov
jp
and
and
subl
dec
mov
lods
es
push
outsb
xor
movb
xor
std
xor
arpl
imul
or
mov
popf
push
pusha
and
push
fbld
sub
stc
add
and
and
movsb
les
jns
mov
popf
mov
das
mov
sbb
jmp
pop
pop
popf
or
mov
in
push
add
dec
test
popa
mov
jbe
jecxz
adc
add
sub
and
leave
xor
and
mov
stos
lahf
mov
pop
sbb
sbb
jg
movsl
pop
leave
pop
out
repnz
adc
xchg
out
push
lea
push
mov
fs
cld
loopne
mov
jp
daa
lds
lds
xor
jae
fs
or
mov
xor
insb
int3
jb
icebp
fwait
inc
jno
lcall
das
popf
xor
push
hlt
pop
test
cmc
inc
mov
hlt
aam
lods
int
add
test
rep
mov
movsl
fcoml
fdivl
adc
mov
lret
outsb
cld
mov
inc
cmpsl
cmpsl
inc
add
ljmp
pushf
push
xchg
sbb
xor
rcll
popf
mov
sbb
mov
or
xor
ljmp
ret
cltd
out
div
sub
push
ret
pop
or
mov
cltd
sti
xlat
lret
dec
inc
cmc
test
sub
mov
inc
mov
lret
or
lea
ret
test
sti
push
mov
xchg
inc
in
push
pushf
jbe
fimull
mov
add
push
mov
jmp
sbb
int3
adc
in
jno
fcomi
test
movsb
mov
test
jb
or
pop
enter
pop
jns
mov
adcl
mov
and
sti
dec
push
push
or
les
and
daa
adc
rol
xchg
repnz
idivb
loope
rclb
sti
sub
push
popa
cmc
push
scas
jae
repz
push
and
popa
imul
sbb
aam
setae
repnz
bound
int3
and
mov
pop
stos
and
mov
repz
or
outsb
es
sbb
std
sbb
jae
cmp
out
cmpsb
or
std
fcmove
and
and
cmpsb
mov
push
loopne
fnstsw
call
gs
hlt
cmp
mov
cmp
shl
xchg
leave
filds
mov
shlb
sbbl
inc
mov
fidivs
pop
sub
jns
imul
mov
push
jg
and
pop
mov
xchg
jb
mov
push
call
mov
test
sbb
out
mov
sbb
push
pop
out
test
cld
stos
es
dec
mov
cmp
mov
xchg
dec
shr
ds
fucom
test
and
mov
cmp
scas
dec
cmp
fistps
gs
xor
mov
fisttpll
loope
imul
inc
jmp
in
sbb
pusha
adc
cmp
fucomip
inc
push
or
xor
adc
lcall
orl
add
ret
ret
outsl
imul
shr
addl
cmp
fsubs
xor
push
fldenv
xlat
mov
inc
inc
in
add
jns
cmp
xchg
sub
scas
sbb
push
mov
lods
add
jecxz
jno
mov
xchg
push
jge
and
and
das
out
mov
insl
mov
shl
add
cmpsb
pusha
cld
scas
aas
sub
mov
add
xchg
lcall
addr16
jae
mov
aam
fsubrs
or
mov
aas
movsb
xor
out
in
arpl
jmp
mov
lret
xchg
dec
stos
mov
add
or
inc
and
aad
xor
pop
mov
add
cs
out
jp
jbe
aad
xchg
cld
mov
adc
dec
cmpsb
and
cmp
loop
inc
dec
movsl
pop
or
xor
add
inc
push
lcall
sub
mov
pushf
loop
lods
lods
test
push
fidivrs
stos
inc
jb
pop
pop
jg
mov
inc
inc
mov
in
pop
xchg
and
sbbb
stos
and
xchg
test
flds
mov
test
lret
cmp
test
stc
cmp
mov
test
cltd
mov
jecxz
adc
dec
xchg
imull
inc
cmp
push
inc
mov
mov
and
lea
and
lahf
dec
mov
cmp
pcmpgtw
popa
pop
sbb
sahf
mov
daa
mov
shll
test
or
or
les
inc
push
jae
pop
mov
pop
inc
ror
cmp
lds
sbb
xor
adc
das
or
stos
mov
lea
cmpb
push
add
clc
movsb
imull
jo
std
mov
sbb
adc
mov
lds
sub
push
jp
pop
add
dec
dec
dec
and
dec
dec
push
sub
test
sbb
fsubrs
pushf
mov
jg
movl
lods
arpl
jg
fldt
sbb
out
sub
sub
push
loope
push
icebp
and
popl
lods
xor
adc
jmp
das
inc
mov
xor
jnp
xor
out
pop
sub
mov
inc
jle
pop
sbb
outsb
lret
movsl
fbld
je
and
push
inc
jecxz
andnps
ret
and
jge
jmp
stos
xchg
push
pop
mov
test
not
mov
xor
movsb
jo
sbb
mov
mov
add
xor
mov
cmp
repz
mov
loope
outsb
outsl
pop
pop
out
jecxz
ret
cs
adc
dec
sbb
lds
jle
cmp
out
push
mov
loopne
sbb
inc
xor
sub
lea
dec
inc
aas
lret
stos
loope
jge
in
xor
xchg
sbb
pushl
cmp
bound
aaa
sub
jbe
insl
jne
pop
sbb
inc
cmp
call
out
push
jne
sti
push
sti
sbbb
cmp
lahf
loop
push
push
mov
sub
pop
cmc
sub
mov
mov
dec
sti
cmp
pop
ficomps
testl
push
mov
mov
sub
lret
pop
sbb
add
add
frstor
dec
mov
outsb
dec
in
add
dec
pop
ja
stc
lock
daa
dec
popa
inc
andl
mov
stc
cwtl
repnz
cmp
test
test
adc
ljmp
xchg
movsb
je
add
int
adc
add
rcrb
sahf
add
jp
popa
inc
pop
or
hlt
dec
mov
mov
xchg
fldl
mov
xchg
dec
mov
add
sbb
and
cmp
lods
loop
inc
mov
ret
mov
sbb
add
sahf
jge
inc
xchg
js
xchg
movsl
mov
into
push
cmpsb
xor
ds
add
mov
in
mov
fwait
mov
std
inc
mov
xchg
cwtl
in
cmp
iret
pop
mov
lods
mov
out
jl
adc
push
inc
xor
adc
lahf
movsl
jmp
mov
adc
pop
pop
jb
mov
cmpsl
stc
stos
in
jno
jne
stos
pushf
dec
out
push
mov
mov
fldenv
dec
mov
sbb
jmp
sbb
addr16
stos
ret
loopne
and
and
jg
notl
clc
or
dec
gs
push
stos
dec
adc
int3
or
or
mov
cmp
cwtl
mov
mov
movsb
mov
xchg
push
stc
out
je
add
xor
mov
mov
adc
jne
sti
add
adc
test
inc
loope
xorl
out
xor
xor
xlat
pop
xor
xor
mov
push
loop
dec
mov
sub
sbb
jl
push
xor
sbb
imulb
or
cli
mov
popf
add
popf
and
mov
push
and
sub
out
pop
inc
imul
pop
inc
xor
inc
and
call
pop
insb
push
leave
popf
sub
mov
pop
test
cmp
hlt
inc
mov
cmp
jbe
sbb
icebp
insb
push
pop
adc
pop
ja
sti
in
lcall
mov
push
jns
xor
cmp
jle
xor
std
or
in
push
pop
in
mov
fnstsw
inc
push
and
adc
aaa
cli
xchg
add
and
icebp
pop
std
xor
es
and
push
inc
outsl
and
mov
sbb
xor
pop
gs
data16
dec
xor
sub
pop
push
lds
pop
sub
es
push
mov
test
cmp
jmp
sbb
sub
dec
adc
mov
addr16
pop
fnstsw
mov
sar
ficoml
push
popf
mov
jno
inc
icebp
xor
xchg
lret
repz
movsl
jbe
test
cwtl
jo
mov
adc
cmc
enter
inc
adc
lds
repz
rolb
inc
aas
aaa
popf
and
push
roll
xor
ret
repz
dec
sbbb
jmp
jecxz
add
push
popa
xor
insb
fs
mov
loop
inc
add
idiv
jno
add
inc
xor
cmp
fildll
xor
push
or
ret
jge
xchg
stos
or
push
add
int3
inc
push
faddl
ds
add
mov
lea
test
sahf
aad
fld
jb,pn
insb
xchg
shl
xchg
cwtl
push
pop
andb
fdivr
mov
rorl
and
call
push
push
cltd
add
hlt
sbb
int3
xor
or
fs
add
or
fildll
mov
jnp
in
and
imul
jp
jne
add
sub
inc
push
xor
mov
add
popa
xor
scas
jo
add
iret
xor
push
mov
and
add
push
mov
ds
sahf
leave
xchg
lock
nop
addr16
insb
lods
xchg
mov
loope
xlat
jns
sub
stos
incb
aad
ja
out
pusha
hlt
lret
notl
or
lea
mov
cmpsl
xor
das
imul
jne
jecxz
push
mov
stos
cli
push
rorb
mov
fs
popf
pop
xchg
and
jb
ret
es
lods
jo
mov
fldcw
hlt
incl
das
push
aam
mov
jnp
fldcw
popf
rcr
pop
jmp
int3
in
jp
dec
adcb
pmuludq
fwait
cmpsl
lds
cltd
sub
dec
sahf
xor
xor
das
pop
jo
incl
jmp
and
push
inc
insl
cmc
out
adc
in
sbb
pop
pop
shll
mov
fcmovb
push
and
mov
sbb
or
cmp
cmp
cmpb
add
xor
lret
aad
aad
cmpsl
popf
jb
in
pop
jbe
dec
cmpb
cmp
mov
xor
shl
or
jp
sbb
cmp
push
stc
sub
dec
loope
std
loope
icebp
jbe
mov
data16
mov
xlat
add
jge
inc
xor
inc
bound
rcll
sbb
inc
xorb
popf
rorb
scas
ret
xor
sbb
jecxz
dec
xlat
dec
ficoms
xor
mov
and
adc
out
repnz
inc
pop
dec
cmc
pop
inc
imul
push
fldl
das
sbbl
sub
repz
push
cli
popa
arpl
xor
jge,pn
add
call
sahf
mov
pop
dec
les
fdivrs
xor
aad
jg
lds
cwtl
popa
hlt
pop
sarl
adc
call
test
xchg
test
jbe
pop
lods
sub
mov
inc
decb
pop
pop
mov
sbb
stc
test
shrl
ret
loopne
fsubs
shlb
out
mov
inc
cmc
and
add
daa
enter
add
aas
push
lds
roll
push
shll
mov
push
das
fstps
in
sbb
pop
adc
adc
andb
mov
pop
push
sbb
and
js
or
mov
xchg
arpl
mulb
pop
popf
fs
cmp
in
cmp
fldcw
adc
je
movsb
test
sbb
inc
or
fwait
movsl
adc
sub
sarl
sbb
sbb
push
popa
cmp
add
std
enter
mov
xchg
inc
dec
mov
cmc
ds
sub
push
xor
rorb
lcall
fnop
mov
in
push
xor
movsb
push
test
xchg
mov
dec
icebp
insb
hlt
fisubrs
adc
cmc
lret
mov
in
test
add
data16
lret
jl
mov
xor
pop
add
cmpsl
je
pop
add
push
das
or
ljmp
cmp
aad
movsb
scas
cli
ret
out
and
and
imul
imul
pop
shlb
test
xchg
mov
lahf
mov
test
dec
jb
dec
sub
jle
add
mov
xchg
jecxz
or
aam
movsb
roll
mov
or
in
inc
xor
cmpsl
jecxz
adc
mov
mov
arpl
lods
pushf
xlat
pop
imul
sbbb
clc
lret
out
ret
scas
jno
and
inc
cmp
lods
jl
in
das
cli
mov
lods
pusha
leave
pop
and
pop
sahf
or
mov
mov
leave
xchg
push
sbb
mov
sbb
push
xchg
dec
ds
js
add
add
push
pop
jbe
icebp
ja
fsubs
test
xor
sbb
and
enter
xor
or
insl
aad
fs
sub
fnstenv
addr16
daa
call
rorb
pop
add
add
aad
out
pop
xchg
or
jns
in
aad
mov
or
int3
xor
and
push
sub
cmp
push
in
cmp
mov
pop
negb
or
jp
mov
pop
mov
into
aam
push
aad
rcll
pop
adc
inc
shlb
shll
outsb
sub
xchg
scas
mov
popa
mov
sbb
xor
dec
cmpxchg
or
mov
popa
pop
xor
insb
xchg
mov
leave
xor
inc
stc
es
or
pushaw
sub
jb
cli
pop
sbb
popf
xchg
inc
adc
test
and
push
dec
or
lds
rcrl
mov
mov
pusha
nop
mov
cmp
inc
sahf
std
out
fsubl
cwtl
rcll
ss
das
je
aad
scas
xor
jmp
loop
cmp
mov
jp
les
lahf
adc
mov
mov
sub
or
fisubrl
shll
xchg
test
lock
mov
lahf
and
in
dec
pop
pusha
pop
test
outsb
jg
out
orl
cmpsb
adc
jb
cmpsb
xor
daa
ja
xor
push
sbb
jo
sbb
adc
fistpl
dec
sbb
daa
push
repnz
cmpsb
imul
fsubrl
mov
jo
cmc
aaa
adc
inc
arpl
push
push
jo
pop
lds
sbb
sub
insl
imul
dec
pop
pushf
or
int3
lds
and
imul
outsl
in
out
movsl
mov
and
dec
stos
popf
jno
cli
das
es
add
cmp
jns
xlat
cmp
xor
pop
mov
add
int3
mov
jle
int
lods
adc
out
ror
idivl
aam
enter
xchg
jecxz
outsb
cmp
mov
adc
int
popa
push
out
push
xor
lock
jmp
cmp
xor
sub
cmp
mov
aam
inc
test
or
adc
fsubrl
in
hlt
add
mov
das
test
int3
push
and
outsl
call
inc
xor
mov
lods
or
ficoml
mov
into
icebp
mov
and
gs
push
mov
popa
int3
addr16
aam
das
sbbb
push
and
add
aam
sti
xor
xor
xor
or
sbb
scas
mov
add
adc
push
dec
inc
movsl
stc
xchg
xchg
repnz
xchg
fld
addr16
test
sub
aas
sub
pop
out
mov
jge
lret
adc
jbe
fnstenv
xlat
inc
pushf
test
pop
add
and
bswap
scas
and
pop
xchg
jbe
std
cmp
fidivl
addb
adc
mov
scas
lds
cld
repnz
mov
sub
pop
outsb
adc
mov
mov
push
icebp
lods
adc
test
rorb
aaa
sub
fwait
stc
xchg
xor
cmp
in
jb
popf
pop
xchg
das
dec
xchg
shl
mov
cmp
fwait
or
stos
test
gs
leave
dec
adc
lds
adcb
test
jg
popl
pop
js
in
sbb
div
xchg
jne
push
fbstp
add
fists
push
sahf
xor
es
add
mov
das
mov
inc
jb
inc
add
xchg
ret
shl
insb
adc
cmpsl
cmp
pop
push
ret
inc
and
inc
fstl
test
cmp
xchg
sbb
not
idiv
std
movl
loopne
enter
inc
insb
sbb
xchg
test
lods
adc
sbb
testb
xor
js
inc
ljmp
addr16
inc
jno
mov
jge
cmpsb
xor
mov
lods
lods
inc
aas
inc
stc
daa
mov
stc
jb
xor
mov
mov
xor
bound
ss
add
xlat
pusha
push
std
aam
dec
loope
mov
lret
sbb
ds
lahf
outsl
rol
arpl
xor
and
adc
fsub
push
add
and
mov
pop
mov
dec
cmp
out
and
mov
inc
cli
pop
movb
mov
imulb
push
aad
fcmove
and
int3
or
int
jg
fsubp
adc
xchg
xor
dec
cmp
out
cs
mov
mov
test
add
xorb
sarb
push
push
in
adc
dec
cmp
push
ljmp
dec
mov
insb
sbbb
fnstenv
cmp
push
inc
xchg
lret
cld
mov
xchg
cmp
sub
xchg
daa
and
cmp
movsb
add
cmp
in
mov
and
mov
popf
and
push
push
and
jecxz
dec
ja
jb
mov
test
ljmp
pop
add
outsb
testl
push
dec
sub
jecxz
jmp
notl
lods
les
mov
inc
adc
cmp
mov
loope
cmpsl
dec
cmovne
or
dec
dec
adc
es
xlat
sub
adc
jge
inc
cli
cmpb
push
dec
stc
das
ds
sub
xchg
jmp
push
aas
mov
rcrb
decl
xor
inc
cmp
out
xor
push
pop
inc
ficoms
adc
cmp
lahf
cli
xchg
adc
es
int3
outsl
stc
lods
sub
and
pushf
out
dec
imul
inc
orl
ljmp
testb
jl
cli
pop
jo
push
adc
in
in
cmp
add
mov
push
fdivl
push
lret
ljmp
clc
aaa
in
int
mov
call
iret
mov
xchg
ds
and
jb
scas
lahf
movsbl
cmpsl
mov
sub
pop
sub
rol
lea
pop
xchg
mov
cltd
daa
pop
cs
cmp
jp
fdivr
popa
xchg
add
outsl
cmp
das
and
shl
negl
loope
adc
push
or
cli
aas
mov
into
jb
mov
jo
test
xchg
adc
out
roll
fcmove
push
cmp
iret
icebp
push
stos
cmp
std
mov
push
stc
lock
or
jl
inc
mov
mov
rcrl
fucomi
repnz
inc
mov
and
sbb
fcmovnbe
repnz
add
or
mov
out
cli
pop
sti
gs
lods
clc
mov
xchg
aam
jo
mov
insl
mov
enter
push
add
repz
and
xor
icebp
and
in
and
stos
in
inc
addr16
mov
add
test
add
cwtl
lock
das
mov
sub
sbb
fisubrl
push
out
test
mov
fisubrl
mov
push
popf
shr
fwait
or
out
inc
stc
dec
adc
into
das
cld
mov
leave
andl
int3
cmpsb
fnstsw
push
mov
imul
inc
push
pop
or
mov
sub
mov
and
arpl
and
fistl
sub
lds
nop
push
jne
xor
aad
sbb
out
jmp
rcrl
push
movsb
xor
arpl
cmp
addr16
lods
scas
test
xor
aad
gs
or
jne
inc
je
or
pop
xchg
or
stos
jl
push
jne
xor
dec
movsl
add
add
adc
lahf
imul
out
stos
sub
cmp
xchg
sbb
incb
pusha
cmp
or
jno
ficompl
out
in
sub
divl
inc
push
cmovb
stos
aaa
pop
gs
pop
loope
outsb
jecxz
int
pop
nop
shll
and
out
pop
or
test
cmp
bound
test
and
lock
test
ss
add
fdivl
adc
jnp
jbe
jnp
out
insb
inc
mov
and
xlat
lods
cmp
sbb
call
mov
jp
cmp
mov
das
out
movsl
mov
int3
inc
inc
sub
test
push
fldl
negb
jo
sbb
jno
popf
sbb
mov
dec
cli
sbb
bound
and
pop
add
ret
aad
daa
xorl
pop
cmp
jns
mov
les
jns
cmp
xor
adc
shlb
sti
int3
and
adc
xor
mov
add
test
dec
pop
push
push
out
into
fadds
mov
test
and
fs
in
mov
lods
sbb
sbb
sub
scas
pushf
jmp
sub
cwtl
pop
or
and
jno
dec
add
push
ret
pop
push
js
sbb
arpl
mov
mov
nop
scas
shlb
out
jmp
into
aaa
push
loopne
pop
std
in
inc
hlt
mov
pop
mov
dec
pop
mov
mov
dec
inc
push
mov
add
push
dec
pavgw
or
mov
in
mov
punpckldq
xlat
in
jecxz
xchg
and
inc
gs
lock
xchg
sub
lret
add
sub
lret
mov
pop
aad
js
mov
rclb
pushf
mov
cmc
mov
xor
dec
aaa
loop
insl
fldenv
pusha
popf
aas
xor
addb
lods
cwtl
shll
les
dec
popf
jae
test
jbe
icebp
xchg
cld
mov
jg
xor
lds
sub
dec
push
xlat
repz
test
ret
dec
addr16
mov
adc
fstpl
push
clc
mov
jbe
ds
adc
nop
inc
test
mov
inc
lahf
mov
mov
mov
in
adc
data16
and
arpl
cmp
sub
mov
add
repz
pusha
dec
dec
lock
mov
stos
mov
dec
xchg
lods
fnstcw
ret
pop
clc
lcall
sbb
sub
mov
ja
xchg
int
push
xchg
jb
in
pop
mov
aaa
xlat
adc
dec
negb
sub
add
das
stc
repnz
mov
pop
mov
dec
aaa
cmpb
xor
dec
jnp
lcall
imul
enter
mov
jmp
clc
jae
sub
push
fisubl
sbb
leave
test
fisubl
loop
dec
jle
xchg
adcb
mov
xor
pop
movsl
shl
and
test
fbstp
mov
movsb
push
test
xor
bound
cmp
sub
sbb
xor
xchg
push
in
test
xchg
stos
ret
pop
inc
inc
adc
clc
mov
sbb
mov
mov
mov
loop
mov
cmp
mov
pop
ja
sbb
subl
cld
insl
insb
in
inc
sub
jb
and
mov
fimull
mov
cmp
push
jbe
sbb
imul
daa
les
icebp
pop
sub
and
sahf
mov
xchg
jo
sbb
sbb
push
into
push
add
cmp
pop
out
jge
jo
xor
clc
sbb
icebp
sti
test
pop
mov
test
add
movsb
cmp
sub
stos
stos
ljmp
clc
mov
cmpb
shlb
aas
dec
inc
mov
sbb
cmpsl
lcall
outsl
pop
and
jge
xchg
and
lods
nop
lret
out
mov
cs
and
cmp
loope
pop
andl
ret
pop
dec
test
ret
adc
lret
pop
repz
addl
mov
sbb
sahf
adc
pop
cmp
dec
in
test
and
push
push
mov
push
dec
cmc
add
mov
xchg
push
add
imul
mov
mov
mov
imul
lods
sub
push
xlat
sahf
adc
popa
push
pop
cmc
xchg
add
fsqrt
les
lret
lods
test
mov
testb
ss
pushf
pop
fsub
mov
mov
in
pop
sbb
mov
lods
xor
test
fimuls
adc
lcall
add
test
ss
repnz
ds
mov
pop
fidivrs
inc
daa
cld
imul
jg
imul
jmp
ljmp
stos
push
sbb
mov
data16
imul
jle
imul
testl
push
xor
mov
stc
jo
insl
mov
scas
push
mov
popa
pop
ret
lea
jl
push
push
sub
push
les
xchg
and
sbbl
xlat
loop
xor
push
nop
inc
sbb
sub
int
or
jge
out
add
xchg
sub
repz
outsb
mov
aad
cli
mov
movsl
cmp
xchg
jne
je
hlt
xlat
xchg
jae
adc
mov
aam
lds
cmp
into
roll
jae
mov
jb
clc
in
nop
mov
mov
repnz
aas
arpl
mov
pop
stos
dec
test
mov
test
mov
mov
repz
sti
add
sub
add
stos
addb
push
jns
or
cli
jmp
sub
and
inc
pusha
in
mov
add
fildll
cltd
aas
inc
out
pushf
jo
mov
stos
pop
repnz
cltd
mov
inc
or
xchg
mov
addl
sbb
fs
test
repnz
dec
dec
movsb
lret
sbb
and
sbb
push
shrl
shl
mov
jne
mov
or
xchg
sub
mov
push
test
js
stos
lds
lret
minps
mov
mov
shl
out
cmp
stc
pusha
mulb
xor
in
jge
mov
mov
lret
lods
incl
jmp
inc
jg
adc
scas
in
rolb
jns
rcrl
mov
push
pushf
pop
sub
in
mov
pop
stc
xchg
xor
ret
lahf
mov
or
xchg
fmul
aam
andb
outsl
insl
dec
popa
sahf
cmp
push
test
push
push
cs
mov
cmp
test
jb
aad
cs
rcl
jnp
mov
push
imul
jecxz
inc
scas
and
jns
enter
fs
inc
or
cmp
shlb
xchg
mov
movsb
sahf
shl
mov
movsb
loope
call
cmp
fisttpl
dec
sub
cmpsl
ds
ret
lea
adc
pusha
das
mov
sarb
push
mov
lret
add
movsb
add
hlt
in
arpl
mov
mov
mov
pop
add
inc
jns
lcall
add
int3
roll
sbb
mov
xchg
sti
fmuls
outsl
aam
jns
pop
and
xchg
mov
fmul
cmp
xchg
popa
adcl
enter
pop
jl
divb
xrelease
or
or
outsb
lret
pop
push
addr16
mov
inc
ss
jno
imul
lds
dec
inc
jnp
mov
pop
dec
repnz
popa
iret
jge
loopne
jae
lock
adc
jge
lret
add
outsl
mov
mov
aas
and
sbbl
fcoml
mov
xor
cmp
cmpsb
jns
sbb
add
popf
inc
stos
iret
mov
sub
subl
inc
test
mov
data16
scas
jne
adc
xchg
icebp
inc
es
sub
inc
int3
pop
sub
pop
mov
test
clc
imul
xor
ss
pop
or
push
lahf
mov
cmp
rol
jne
fidivrl
lret
and
mov
mov
out
lods
shrl
addl
jecxz
sbb
shl
hlt
lds
ds
lods
pop
sub
push
cwtl
push
je
enter
lods
sbb
jp
repnz
and
jb
dec
mov
nop
divl
out
xor
inc
push
shr
mov
cld
fcomps
cltd
movups
xor
inc
fldenv
inc
notb
xor
std
jmp
jne
in
rolb
ss
mov
sarl
test
clc
add
into
fldcw
xor
xchg
add
lods
xor
stos
fisubrs
ljmp
push
lds
jmp
les
adc
push
and
dec
notl
icebp
stos
mov
subb
loopne
dec
sub
jb
lods
lods
adc
mov
add
and
mov
lock
sub
test
decl
dec
jnp
adc
xor
mov
rcrb
mov
jmp
in
arpl
xor
sar
jl
test
inc
sbb
add
xlat
pop
and
lock
add
lods
mov
scas
mov
jmp
and
push
stos
aaa
clc
insb
into
and
jecxz
and
aaa
mov
mov
push
cmp
cmp
mov
adc
std
stos
jg
nopl
fimull
fsubs
add
ud0
leave
nop
xchg
jle
popf
mov
cmp
inc
jns
jb
test
and
xor
add
push
rcl
pop
mov
shrl
mov
or
pop
repz
add
sub
mov
and
jno
stc
push
clc
sbb
adc
daa
ficomps
push
mov
bound
cmp
sub
push
lods
pop
idivl
insb
and
sub
ret
inc
cmp
jae
call
xor
clc
sub
pusha
flds
push
loope
sub
fldenv
in
jb
cld
scas
cmp
xchg
mov
push
movsl
inc
inc
add
fsub
add
addr16
gs
jae
and
push
xchg
sub
cmp
mulb
pushf
lea
sub
xchg
fcmovne
push
daa
cmpsb
repnz
mov
pop
push
add
push
dec
xor
shll
in
pop
mov
add
mov
arpl
sub
inc
cmpsb
adc
pop
xchg
outsl
ds
call
inc
lret
and
movzbl
adc
rorl
xlat
loopne
mov
jns,pt
or
in
loopne
fcmovu
cmp
imul
push
lods
jle
mov
mov
inc
push
mov
ja
push
inc
or
jle
jns
adc
shrl
cmp
test
bound
cwtl
or
es
imul
xchg
lods
add
roll
ds
inc
test
dec
inc
add
ds
call
or
pop
lods
ja
in
das
shll
popf
in
cmp
out
hlt
popf
lods
dec
xor
sbb
outsb
sub
mov
push
addr16
pop
sbb
sub
aas
adc
cmp
pushf
in
ds
outsb
sub
push
clc
into
insl
mov
push
pop
jb
insb
add
cmp
mov
rcl
cmp
sbb
mov
push
pop
test
jl
out
in
cmp
jge
jmp
mov
xchg
xor
pop
sub
loop
or
xor
jne
adc
loop
push
jno
cmc
popa
loopw
dec
iret
repnz
insl
popf
ret
bound
inc
das
iret
lock
imul
xor
pop
cmp
ret
xchg
sti
and
test
int
lock
mov
sub
cs
test
pop
mov
mov
and
sub
test
stos
pop
xchg
mov
arpl
js
and
stos
and
adc
rol
pop
cmpsl
lods
pushf
sub
xor
fidivs
repnz
popf
jns
and
mov
mov
xor
fdivrl
pop
adc
add
stos
cmp
rclb
sbb
or
mov
mov
xor
cmp
mov
stc
int
xor
popf
insl
pusha
or
test
int3
xorl
pusha
or
test
int3
jnp
jg
jge
jle
xchg
ret
out
inc
cld
inc
mov
rcl
cmp
mov
sbb
js
je
cmpsb
les
and
or
xor
into
out
fldt
cmp
xor
lret
pop
fcmovnu
xor
xlat
scas
sbb
shlb
in
insb
sarb
fisubrl
les
repnz
dec
or
pop
mov
pushf
dec
cmpsl
xchg
dec
mov
fwait
scas
mov
daa
sahf
cs
jae
enter
jle
dec
push
cmc
or
cltd
lds
jg
mov
pop
mov
mov
loopne
jbe
sub
pop
leave
out
adc
cmp
jns
data16
or
mov
les
mov
or
ret
mov
loopne
xchg
adc
sub
and
in
aam
mov
mov
mov
add
dec
mov
in
and
cli
mov
cs
shll
lds
popa
mov
inc
add
and
fildll
jb
xchg
and
pop
mov
lret
jmp
rcrl
mov
push
xor
movl
testb
jbe
adc
test
pop
inc
xor
pop
stc
test
pop
out
in
aad
adc
cli
pop
rolb
call
iret
roll
mov
int
xor
fidivrl
jae
and
out
xchg
and
and
sub
jmp
or
rcrb
imul
pop
in
lods
xor
dec
or
pop
subl
mov
inc
jmp
shrl
js
popf
xor
stos
cmp
xchg
mov
es
sti
nop
and
sti
pop
f2xm1
or
pop
fcomps
adc
mov
and
sbb
fildll
mov
repz
test
xchg
sub
cmpsb
stos
lea
mov
xor
test
jl
bound
aas
push
add
cmc
out
fst
jne
filds
push
xlat
sbb
cmp
mov
or
enter
sub
pop
cltd
push
repz
and
cmp
aam
loopne
mov
push
jp
jo
icebp
daa
into
jg
mov
fdiv
and
mov
push
lret
mov
inc
lock
clc
lods
and
inc
sub
cmp
test
mov
aam
cmp
pushf
sub
enter
mov
mov
inc
mov
scas
iret
push
cltd
push
mov
testb
lods
jb
mov
lods
or
mov
pop
cmpsl
lcall
cmp
cs
pop
sub
push
mov
aaa
xor
xor
shlb
cs
arpl
mov
test
mov
sub
xchg
or
mov
or
xor
jmp
movsb
pop
mov
out
fcomi
es
sub
movsl
hlt
sbb
xchg
xor
scas
xor
inc
xor
in
inc
jecxz
dec
mov
in
sub
xchg
lret
jp
mov
es
movsb
mov
push
or
fwait
jbe
scas
test
xchg
loopne
loop
ror
and
cmc
and
repnz
jg
loop
pop
xchg
call
test
jb
rolb
dec
jne
sti
arpl
dec
clc
cmp
rcr
xor
cmpsl
mov
in
shll
cmp
in
mov
jns
in
xor
aad
push
push
fildl
add
jmp
jns
mov
and
mov
adc
inc
aaa
adc
mov
sub
ret
or
pushf
ss
aaa
int3
xchg
out
popf
sbbl
stc
shl
pushf
in
and
push
dec
xor
loope
cmp
inc
mov
insl
ja
and
sub
iret
mov
js
std
jb
iret
test
xchg
into
sbb
in
sub
adc
imul
and
dec
imul
imul
push
lcall
sub
dec
into
test
pushf
mov
pop
stos
imulb
iret
mov
xchg
sub
negl
sub
cmp
ret
lock
xchg
mov
ret
negb
test
aam
aas
lcall
add
lods
jb
xchg
add
neg
and
repz
arpl
pushf
mov
fstpt
orb
clc
lcall
scas
mov
insl
aad
and
movsl
ficoms
pop
lds
js
movsb
push
mov
and
leave
fmuls
add
jae
mov
data16
arpl
adc
inc
mov
sub
mov
das
inc
test
xchg
add
or
mov
fcomps
rcrb
movsb
daa
push
shll
jbe
ds
jp
inc
cmp
daa
cli
scas
sbb
dec
dec
add
push
and
mov
fs
xchg
jno
cltd
scas
add
jno
cld
and
mov
loopne
bound
popf
mov
out
lret
or
sbb
xchg
stos
jecxz
xchg
mov
or
leave
hlt
lahf
cmp
mov
out
xchg
ror
clc
adc
mov
xor
fidivs
inc
mov
push
sbb
xor
push
jmp
adc
gs
sbbl
mov
xor
sub
lcall
dec
mov
test
mov
cmp
fbld
ret
js
or
mov
sub
test
rclb
mov
push
and
cmp
xchg
pop
daa
fs
movsl
sti
add
or
fistpll
sub
popa
xor
xchg
or
sub
and
aam
int
in
jns
or
imul
fnsave
dec
scas
push
testl
mov
add
mov
sbb
mov
xor
mov
and
and
jno
dec
sub
and
or
lret
or
cmpsb
push
les
iret
lahf
in
in
mov
shl
sbb
cld
cwtl
gs
push
mov
pop
xor
sub
dec
xlat
sar
jo
fidivrl
dec
out
test
inc
xchg
cmc
mov
aas
pop
mov
dec
js
fldcw
cmpsb
iret
adc
outsb
inc
xchg
push
sti
scas
lahf
xlat
add
inc
mov
push
testl
xchg
push
pop
outsb
push
push
test
icebp
sbb
sbb
scas
sbb
enter
add
not
cmp
fnstenv
add
or
movsl
shll
push
sub
mov
dec
insb
xchg
in
sub
enter
negl
ja
push
ret
pop
pop
bound
aaa
js
fwait
mov
pop
inc
dec
mov
mov
mov
clc
fs
sbb
pop
ror
out
and
adc
scas
sub
or
aad
aad
lds
repnz
ss
adc
lds
pop
in
cmp
and
es
pop
push
mov
xor
add
lcall
dec
cmpsl
inc
or
xchg
clc
sbb
pop
out
xor
ret
mov
loope
mov
pop
test
in
pop
mov
test
mov
sub
pop
pushf
jle
inc
and
enter
adc
pop
mov
fwait
mov
push
sahf
loopne
in
fcmovnbe
das
inc
lods
pushf
cwtl
jle
sub
xor
gs
pushf
aaa
insl
frstpm(287
mov
pop
lahf
ret
xorl
arpl
add
imul
shrl
inc
cs
and
mov
or
xor
sub
imul
or
jae
mov
ficoms
pushf
test
movsb
xchg
xchg
cs
das
sub
or
or
or
movsl
loopne
sub
in
loop
idivl
punpckhwd
cmp
jle
or
dec
jo
je
add
pop
sbb
xchg
adc
xor
out
and
test
leave
fs
sbb
lcall
and
push
mov
mov
lret
fisubrs
aaa
push
mov
cmpsl
mov
and
repnz
test
idiv
sub
ret
int3
cmp
fldl
sub
push
xor
mov
test
test
mov
sub
sbb
inc
aam
sahf
lods
sbb
xchg
cmp
dec
leave
popf
std
adc
pop
call
nop
cmc
les
jnp,pn
je
or
sbb
cmp
mov
dec
jo
pop
xchg
push
imul
push
mov
mov
ret
jle
lahf
pop
xchg
es
or
cs
sub
scas
cmp
scas
hlt
cmp
je
inc
lret
push
subb
mov
repnz
push
je
aaa
fildll
mov
lcall
test
cmp
dec
sub
xchg
sti
jecxz
xchg
push
push
into
std
xchg
pmaxsw
stos
pop
mov
test
ss
or
mov
jbe
jp
push
sti
int
xchg
add
loop
lret
mov
sub
out
addr16
outsl
rorb
cmp
push
inc
fildl
inc
in
add
scas
lock
cmpsb
jecxz
dec
sub
jb
push
lods
inc
enter
shrb
scas
insl
fst
int3
les
in
loopne
sub
leave
inc
in
mov
mov
inc
inc
and
mov
mov
jno
sti
out
int3
shl
in
xchg
add
cltd
cld
lret
shlb
add
negb
daa
stos
add
inc
push
push
into
dec
sub
in
mov
hlt
movsb
fcoms
add
ljmp
mov
rorl
test
add
enter
push
lods
push
mov
xor
xorl
pop
adc
push
int
rcrb
jae
add
xor
in
sbb
or
sbb
cli
fsubrl
jnp
mov
sub
and
sbb
test
movsb
or
bound
out
sub
ss
and
addr16
mov
fnstcw
ljmp
pop
lods
mov
int3
rclb
nop
imul
or
add
pop
push
push
jnp
das
iret
mov
aad
push
arpl
mov
push
imul
mov
ss
push
negb
xchg
rol
std
das
add
jmp
mov
pop
popa
lret
mov
mov
push
mov
xchg
test
loopne
add
ror
cmpsl
iretw
cmp
ficoms
cltd
mov
fsubrs
sti
push
cld
xor
dec
or
dec
dec
mov
outsb
repz
gs
fucomp
cltd
inc
add
xor
mov
mov
out
adc
jecxz
inc
and
inc
clc
adc
dec
cmpb
ja
mov
ret
add
sysexit
sbb
pop
jle
popa
pop
or
insl
jg
adc
pop
xchg
jbe
out
sbb
add
xor
sub
dec
test
scas
push
fsubl
xor
mov
pop
roll
add
repz
add
sub
std
fwait
jl
pop
or
jg
adc
pusha
push
test
xchg
pushf
inc
lods
dec
sbb
jmp
mov
push
jno
lea
xor
mov
cmc
inc
sbb
movsl
pop
test
les
xor
lret
dec
test
sbb
push
sub
inc
jo
cld
scas
loop
aam
push
out
dec
or
xor
dec
icebp
jl
jg
arpl
add
adc
xchg
mov
mov
sbb
add
sub
add
push
mov
shlb
negl
sub
clc
pop
jo
mov
sahf
lret
mov
fnstenv
cli
jmp
jae
xor
ds
push
xor
les
clc
fistpl
or
cltd
push
sub
jbe
sub
clc
pop
cli
pusha
lods
movsb
movsb
roll
cmpsl
cmc
pop
adcl
dec
in
movb
fstp
sub
xchg
mov
dec
dec
adcl
xchg
fstps
test
xor
cmp
adc
sbbl
sub
mov
inc
fdivs
ret
jae
xchg
and
push
cld
gs
add
push
inc
pop
push
mov
in
enter
xor
pop
ficomps
std
xchg
sub
push
and
or
push
adc
cmp
add
add
mov
ljmp
sub
stos
inc
inc
stc
jnp
mov
div
in
daa
cwtl
jp
pop
xor
mov
pop
hlt
lret
mov
test
cmp
or
pop
imul
xor
pop
sbb
mov
leave
outsl
test
jecxz
popa
test
lock
aaa
pop
pusha
jnp
repnz
cld
xor
cmp
mov
popa
sbbl
call
xchg
inc
pop
adc
xor
js
ljmp
mov
sbb
je
in
ljmp
in
adc
push
and
lcall
cmp
test
adc
jns
push
cmp
dec
dec
push
fwait
inc
divb
popa
xchg
jb
inc
mov
mov
jns
fscale
mov
shlb
sti
sub
popf
dec
cvttps2pi
sbb
adc
fstl
das
fsubl
dec
push
lods
inc
pop
ficomps
cmp
pop
and
daa
fisubl
mov
stos
mov
lds
bound
cmp
mov
jmp
out
ja
shll
jmp
subb
inc
in
cmpsl
cmp
lock
and
rcrb
sahf
jb
add
fsubl
fcmovnb
cwtl
xor
testl
inc
daa
dec
in
out
sub
sti
dec
leave
rcrl
lods
insb
sub
cld
push
push
jnp
mov
insl
inc
es
mov
mov
sbb
sub
loope
mov
out
push
xor
jb
inc
mov
mov
popf
ds
push
adc
fs
popa
dec
popa
or
and
and
icebp
xor
push
rclb
test
daa
lods
mov
add
dec
imulb
jg
xchg
mov
xor
adc
out
sbb
xor
xchg
in
xor
ret
mov
fmull
bound
jge
loop
out
jne
fnstsw
inc
and
adc
out
xchg
mov
mov
xor
out
insl
je
cmpsb
addr16
xchg
and
shrl
mov
and
dec
lods
fwait
sbb
scas
xchg
data16
inc
adc
data16
aam
push
leave
daa
cld
mov
push
xor
jl
mov
inc
or
aam
fmul
cli
inc
jg
pop
enter
aas
fnstsw
sub
clc
xchg
mov
std
cwtl
sub
loope
mov
pop
outsl
add
fmuls
adc
stc
ret
sub
cmp
sub
call
push
cmp
cmpsl
out
cmpsb
gs
addr16
mov
out
into
add
icebp
inc
sub
inc
call
inc
idivb
std
xor
sahf
mov
add
xor
and
in
pop
mov
fcoml
mov
movsl
pusha
xchg
fwait
sub
and
scas
mov
dec
nop
pop
mov
std
push
ret
shlb
in
js
imul
nop
fwait
inc
in
sub
aad
mov
cld
sub
dec
jp
xor
stc
es
cmpb
sbb
lods
mov
ja
stc
jo
test
ds
adc
jbe
mov
lret
and
in
push
push
mul
cmpsb
pop
sbb
fcmove
arpl
hlt
das
mov
lods
mov
int
cmc
andl
icebp
addl
repnz
inc
je
or
lea
in
xchg
and
insl
push
inc
ljmp
jle
imul
mov
mov
aas
lcall
cmp
fidivs
das
ljmp
pop
in
shll
dec
inc
lea
imul
cmp
loop
jg
sti
int
div
in
scas
fstl
sbb
pop
mov
dec
pop
stc
out
orl
cwtl
cs
push
idiv
int
ret
iret
lock
into
jecxz
jle
push
inc
in
lock
movsl
sbb
xchg
lods
pop
jmp
mov
jmp
mov
jmp
jae
or
insl
jbe
jg
xchg
inc
out
loopne
ljmp
xor
xlat
repz
lea
popa
mov
mov
mov
fs
cmp
inc
lock
mov
in
ror
outsb
popf
and
mov
enter
mov
outsb
aaa
and
sbb
mov
sahf
pop
push
popa
inc
lods
mov
dec
xchg
push
sbb
dec
mov
ret
pushf
hlt
push
adc
les
dec
aam
push
or
cmp
mov
das
and
int
pop
mov
iret
mov
xchg
mov
jne
push
ss
or
loop
sub
inc
sarb
fstpl
fs
lcall
fiadds
imul
sub
pop
enter
inc
mov
pop
rcll
adcl
mov
jbe
inc
test
adc
xor
push
xchg
jmp
test
sbb
or
cwtl
repnz
flds
call
mov
sub
or
inc
dec
xchg
inc
adc
jns
inc
sub
inc
stos
repnz
pop
lret
stos
lret
mov
adc
mov
inc
and
hlt
ss
mov
mov
stos
ss
fwait
push
xor
nop
fcoml
aaa
push
sti
js
xchg
inc
stc
lds
test
and
inc
testl
adc
sbb
sub
xorl
movsb
or
adc
loop
or
adc
leave
xchg
out
xchg
sti
rsqrtps
inc
pop
push
cwtl
mov
push
pop
outsl
leave
jb
pop
popf
adc
pop
push
xor
icebp
jle
jl
jmp
xchg
shrl
mov
jne
scas
xor
orl
jno
xchg
testb
push
call
lds
jnp
pop
std
dec
xchg
mov
mov
rcl
mov
mov
pop
xchg
dec
fsts
mov
jle
repz
int3
jmp
pop
adc
call
mov
inc
mov
pop
fldl
lea
sti
mov
rorb
ficomps
out
add
mov
dec
lock
or
fld
ret
fadd
aaa
inc
jmp
mov
pusha
mov
into
dec
test
sub
stos
lcall
dec
mov
subb
rcrl
ret
pop
or
mov
cmp
and
in
jecxz
sbb
lahf
iret
mov
mov
jge
mov
aam
lock
stos
push
jmp
aas
arpl
mov
outsl
pop
xchg
movsb
inc
inc
sbb
and
sti
add
aaa
fwait
repnz
das
js
out
stos
and
cmp
add
mov
jne
out
data16
xor
dec
sub
lds
ret
stos
push
mov
fdivs
dec
mov
add
fs
xor
mov
in
loop
inc
cwtl
pop
xchg
mov
and
push
adc
mov
ret
mov
jle
and
mov
cmpsb
or
ffreep
and
adc
xchg
and
cld
mov
pop
fildl
mov
mov
jmp
psubb
scas
frstor
adc
jo
add
loopne
xchg
xor
push
ds
loopne
fisttpll
fisttpll
test
jmp
jmp
cmp
aam
jl
testl
sbb
pop
jle
xor
lahf
jp
pop
pusha
jae
jnp
mov
test
shrb
mov
mov
mov
adc
es
out
cwtl
lea
inc
shrb
push
and
movsl
inc
int
fmulp
add
mov
lret
mov
jmp
lret
mov
xchg
inc
push
dec
into
roll
addr16
add
lahf
xor
lods
cld
aas
dec
mov
inc
imul
sbb
fnstenv
cmp
pand
std
js
iret
dec
push
add
pop
jp
pop
clc
movq
lds
std
divl
dec
dec
and
test
cmpsb
inc
sub
out
repnz
mov
mov
ficompl
cld
and
cmp
dec
rclb
add
push
xor
mov
mov
inc
shll
jp
test
or
pop
sbb
adc
push
dec
mov
jmp
data16
dec
and
xchg
ficompl
inc
sub
daa
fsts
insb
mov
push
andb
xor
or
jl
or
add
sbb
push
fbld
stc
dec
sarl
call
xor
cmp
out
dec
arpl
push
push
adc
xchg
rcl
add
push
or
mov
jl
push
hlt
xchg
call
dec
jmp
rcl
sub
mov
jmp
subb
popa
fcom
xor
movsl
cmp
sub
popf
or
cmp
iretw
outsl
dec
xchg
lock
mov
popa
mov
pusha
aas
into
shlb
sbb
ficomps
lret
sbb
push
push
movb
negb
gs
in
ja
imul
jecxz
or
ss
clc
mov
push
fwait
pop
insb
add
jne
jo
pop
ret
shrb
lods
out
inc
mov
mov
or
pop
aas
stc
dec
sbb
xor
cli
or
add
or
pop
sbb
fprem
into
inc
fidivrl
lahf
imul
sub
sbb
sbb
cmp
adc
dec
das
std
leave
sbb
mov
cwtl
inc
out
xchg
scas
pop
cs
test
inc
pop
sbb
aad
add
sub
and
sub
mov
inc
nop
filds
jg
sbb
lcall
jmp
pop
in
repnz
sbb
ja
mov
cltd
pop
dec
dec
imul
and
hlt
mov
rclb
sbb
mov
mov
sbb
dec
shlb
push
dec
fcmovbe
notb
and
cli
mov
cmp
dec
xor
pop
loope
stos
arpl
push
ja
fists
mov
mov
mov
add
push
pop
divb
jmp
dec
or
mov
mov
push
int
cli
stc
rcrb
cli
inc
mull
sub
adc
rolb
sub
int
sti
mov
rcll
mov
sub
push
jae
scas
movsb
test
pop
mov
loope
aas
fildll
push
adc
mov
add
sub
mov
scas
call
jae
adc
outsb
adc
gs
xchg
cmp
xor
test
int
sbb
push
jb
xchg
int
xor
inc
pop
loope
popa
jnp
pop
lods
add
bound
stos
imul
dec
xorb
out
mov
cwtl
or
aam
jae
cmc
shlb
std
and
or
mov
adc
push
std
imul
test
pop
loope
mov
xor
fidivl
xor
mov
dec
add
dec
shll
jge
add
lock
repnz
ljmp
out
jle
dec
jmp
inc
adc
mov
imul
mov
aam
lahf
je
test
adc
pushf
into
mov
jns
test
xor
mov
ror
shrb
cmp
sub
push
xchg
iret
scas
push
enter
add
fcmovnb
cmp
sub
pop
fs
arpl
movsl
jge
loopne
pop
pop
aam
loop
frstor
mov
ss
js
xchg
cmp
pop
pop
enter
leave
sub
cmp
fwait
mov
adc
test
mov
adc
jb
mov
repz
rorl
scas
pop
jo
xor
cmp
loop
repnz
fsubl
cwtl
mov
das
jge
hlt
mov
or
mov
dec
dec
sbbl
cltd
ljmp
cmp
xor
ror
or
cmp
call
test
inc
push
add
jmp
and
sub
cmp
push
mov
pop
mov
out
xor
and
push
ret
fidivrs
dec
mov
lret
out
test
jae
mov
mov
stos
sub
js
push
cmpsl
into
sub
gs
test
test
inc
jb
ret
adc
mov
inc
outsb
imul
xor
imull
aas
dec
ja
or
ljmp
xchg
add
pop
xor
scas
and
sti
shll
aam
ja
push
mov
mov
cmp
cli
test
daa
push
or
xchg
push
sbb
jno
jae
fisttps
xor
movl
mov
xchg
or
sub
lcall
xor
pop
jp
cmp
insb
lcall
sub
in
rolb
pop
mov
xor
test
pop
mov
xor
jp
sti
lret
xchg
test
cmpl
pop
and
or
mov
int3
lea
push
mov
mov
fnsave
pop
xor
sbb
lcall
jnp
data16
mov
loope
imul
push
and
push
out
fisubl
out
fsubrs
cmpsl
stc
int3
jge
lret
adc
mov
enter
clc
testb
mov
xchg
test
andb
xchg
push
dec
stc
ficoms
iret
imul
pop
out
add
xor
sbbb
mov
jns
cmp
fs
jae
xchg
adc
or
jmp
flds
inc
mov
pop
ljmp
inc
add
push
decl
and
adc
out
pop
sub
lret
data16
mov
and
mov
xor
dec
ss
out
mov
pop
xor
pop
es
cmp
es
xor
aaa
sbb
pop
ret
sbb
pushf
nop
loope
lahf
lods
and
stos
fisubl
ds
dec
outsl
and
push
and
call
inc
or
adc
std
icebp
mov
adc
test
mov
jbe
xchg
cmc
enter
xor
decb
jecxz
adc
cmp
or
test
mov
jmp
popl
lock
xchg
xor
mov
pusha
push
and
sbb
pop
add
xor
pop
push
mov
adc
mov
fdivs
iret
aad
xchg
or
loopne
clc
out
push
pop
add
lcall
cmc
imul
testl
dec
stc
add
pop
and
and
jg
dec
jmp
xchg
call
rol
popf
inc
jbe
cmpsb
outsl
jmp
call
movsb
icebp
xor
jge
mov
fcoms
fmulp
xor
lret
mov
mov
mov
repnz
addr16
roll
pop
mov
mov
sbb
mulb
loope
pop
loopne
adc
mov
int
mov
dec
xchg
xor
cs
or
sti
lret
and
fidivs
outsb
les
inc
iret
adc
jmp
mov
push
inc
cs
jl
out
push
or
outsl
push
jl
cmp
sbb
adc
popa
jne
mov
rolb
dec
pop
add
jae
leave
out
ret
mov
lret
stos
cwtl
jne
out
test
add
out
and
mov
nop
sbb
das
js
flds
std
test
lahf
ds
shll
adc
ret
lds
mov
or
nop
int
repz
fsubs
jl
push
pop
clc
int
popf
std
mov
pushf
sub
jl
xchg
sub
sbbl
loopne
flds
test
sub
jno
loopne
mov
or
fldt
xorl
cmpsb
mov
aas
sub
aam
pop
cmp
dec
aas
andl
dec
gs
cmp
popf
ret
push
jb
pop
mov
cmp
jae
jle
add
xor
fwait
cs
inc
adc
nop
decb
nop
mov
push
xlat
das
mov
xchg
cmp
cwtl
add
repnz
loope
aad
lret
adc
ds
pusha
lds
mov
cs
aaa
jno
ret
push
in
cmp
sub
or
rcrl
sub
in
sub
aam
out
mov
bound
rclb
sub
cmp
jp
mov
ds
iret
xor
or
pop
mov
jbe
mov
insl
ja,pn
mov
jecxz
mov
sub
ret
daa
scas
push
loope
out
sbb
and
sbb
ret
sub
dec
and
int
addr16
arpl
in
add
lock
arpl
push
sti
mov
movq
test
mov
jb
push
adc
inc
outsb
decb
idiv
push
gs
sbb
sahf
js
pop
pop
lds
pop
push
loop
jb
icebp
cld
outsl
lahf
pushf
or
mov
jle
jecxz
inc
stc
popf
push
popa
outsb
sbb
cmp
test
push
out
sub
mov
movsb
test
cli
loope
fisubl
cmp
std
and
popf
mov
cmp
jae
leave
stc
cmp
push
or
push
adc
and
shll
inc
jbe
sbb
pop
addr16
das
mov
jg
aad
lods
push
jae
and
in
aaa
mov
mov
add
ret
inc
mov
xchg
adc
mov
mulb
bound
test
out
addl
insb
aaa
roll
sbb
aas
sub
call
test
inc
inc
sarb
into
orb
and
les
mov
lock
repnz
xchg
imul
movsb
addl
mov
test
int
inc
mov
push
icebp
inc
mov
les
jmp
or
mulb
inc
fld
loope
add
mov
dec
pop
cmc
jg
lods
and
rorl
aas
pop
adc
pop
decl
and
mov
call
aaa
mov
cmp
mov
sti
xor
jo
not
xchg
sbb
mov
push
out
xchg
xor
sti
repnz
sub
jecxz
insb
push
cmpb
arpl
ds
pop
xchg
and
outsb
pop
or
mov
cmp
push
aas
filds
sub
adc
add
xchg
bound
out
and
jecxz
jae
into
sbb
fmull
out
pop
call
in
or
or
mov
push
addr16
adc
add
or
pop
je
jmp
test
mov
dec
not
mov
xor
mov
in
sub
lret
sub
aad
or
push
sub
sub
inc
hlt
mov
xchg
dec
sbb
push
adc
jge
mov
mov
cmp
xlat
fimull
push
outsb
pop
mov
push
cmp
and
push
pop
stc
xor
test
int3
mov
mov
mov
popf
out
fsub
mov
sub
rcrl
cmp
mov
mulb
fadd
repz
fsub
pop
add
sub
adc
cmp
imul
or
enter
lds
insb
jl
call
pop
add
pop
or
jns
dec
cmp
std
and
lock
push
add
inc
xlat
and
scas
pop
cmpl
and
mov
inc
add
fdiv
stos
aas
pop
call
jmp
cmp
add
negl
cwtl
fldenv
mov
mov
jmp
stc
arpl
xchg
inc
xor
stos
scas
push
lods
sub
jnp
loope
dec
sub
popf
cmp
push
xor
push
or
sub
sub
out
cmp
mov
stc
das
dec
insl
cmpl
add
adc
enter
jge
push
mov
mov
insb
cmp
lret
je
int
or
mov
ret
bound
aad
cmpsl
or
lret
pop
pop
and
or
cld
mov
sub
and
mov
rcr
cwtl
cmp
xor
push
and
xchg
jns
sahf
mov
stos
jno
pop
notb
jb
mov
cmp
jo
pop
sub
mov
imull
dec
or
iret
push
stc
mov
cli
jnp
shll
sub
mov
mov
mov
adc
xorl
jge
lods
repnz
inc
cli
arpl
out
aaa
inc
xlat
adc
jno
jo
js
in
out
pop
mov
test
neg
xchg
mov
and
loope
sub
cs
and
pop
loop
jmp
mov
push
les
push
lcall
sbb
lods
inc
sub
rorb
clc
outsb
arpl
cmp
push
sbbl
push
dec
cmp
ja
lea
dec
dec
repnz
xchg
fisttps
cmp
test
adc
jge
cld
mov
nop
mov
mov
jge
mov
push
leave
lds
mov
jmp
mov
inc
loop
sbb
cmpsb
pop
push
cli
ret
xchg
mov
dec
xchg
mov
mov
sub
push
mulb
pop
gs
gs
xor
mov
bound
cmp
sahf
and
mov
mov
rorb
pop
out
stos
repz
xchg
dec
repnz
inc
sub
imul
jns
or
stos
lods
testb
jle
test
or
push
pop
xor
pop
cmp
test
jmp
out
mov
hlt
xchg
cmp
outsb
lods
lds
sbb
arpl
les
scas
in
pop
sbb
mov
sub
adc
test
in
mov
xchg
adc
cli
jnp
fstpl
addl
cld
add
dec
mov
sub
out
testb
ret
pop
fwait
or
mov
scas
popf
ret
incb
lods
sub
xorb
mov
jbe
xchg
test
jae
adc
or
arpl
aad
aam
das
cmp
push
mov
loope
lea
es
mov
int
sub
icebp
fstl
jbe
addr16
hlt
xor
imul
cmp
xchg
cli
inc
mov
rclb
adc
lods
int
std
js
popf
rcr
les
adc
dec
mov
inc
pop
xchg
xor
popa
dec
xor
lods
fdivp
push
lods
lods
or
inc
clc
scas
mov
insb
cmp
mov
sbb
jae
lahf
aad
addl
mov
pop
testl
and
mov
adc
sub
aam
sbb
pop
sbb
push
dec
or
outsb
mov
mov
jecxz
mov
imul
pop
jge
add
sub
out
sbb
jmp
pushf
in
scas
loop
sub
aad
sbb
psadbw
sti
pop
hlt
cmpsl
andl
add
xor
lea
dec
lods
inc
xchg
loope
mov
mov
dec
clc
adcl
repz
lods
loope
push
add
adc
xchg
push
fsubl
sbb
dec
push
sbb
scas
mov
mov
lock
push
mov
or
scas
pop
or
les
push
inc
sbb
cmp
inc
sbb
sahf
data16
cld
jb
mov
inc
loopne
gs
sub
sub
subl
in
or
xor
push
lods
xor
loope
mov
loop
add
sar
push
sarl
mov
cli
in
jae
sbb
sub
push
mov
dec
js
cltd
addr16
add
fsubr
lods
test
xor
mov
push
cltd
add
shlb
lcall
push
testb
movsl
pop
pushl
mov
xchg
cmp
fisubs
idivl
jmp
inc
dec
push
jae
stos
adc
mov
cwtl
dec
and
mov
mov
cld
nop
icebp
and
jno
or
adc
adc
add
mov
cld
or
test
fdivr
sbb
sub
je
pop
sarl
jbe
mov
nop
jl
adc
adc
adc
mov
mov
jle
push
adc
mov
nop
into
in
xorb
xlat
fldcw
mov
cli
in
xchg
les
cmp
test
cmp
clc
pushf
xchg
sub
and
testl
lcall
jne
cmp
ljmp
pop
imulb
push
mov
das
pushf
inc
or
adc
jp
adc
loop
cmp
hlt
rorl
dec
xor
ss
jb
test
popa
ja
cmc
es
fnsave
xor
xorb
add
inc
arpl
and
add
add
jmp
fstpt
in
adc
cmp
dec
push
dec
or
test
fistl
jo
xchg
cwtl
sub
adc
js
jbe
mov
mov
out
aas
jg
repnz
mov
das
inc
lods
lret
or
in
xchg
int
clc
aad
scas
mov
jmp
and
outsb
jbe
arpl
xchg
push
test
addr16
dec
mov
xchg
dec
outsl
dec
xchg
pop
call
push
dec
fstpt
pop
lock
arpl
cmp
test
add
je
cmpsb
test
dec
mov
push
cmc
and
jnp
adcb
aas
add
cmp
or
inc
leave
jne
jmp
mov
xor
jmp
fldl
jnp
mov
jo
sbb
mov
sbb
insb
xor
dec
add
test
sbb
adc
repnz
in
mov
adc
lds
adc
jbe
rcrl
fs
iret
jbe
es
mov
xchg
jle
fs
fwait
mov
mov
fistl
xor
cmp
gs
shlb
lock
push
ds
mov
dec
jns
in
out
xor
and
mov
push
add
and
stc
add
cwtl
test
into
push
sub
jge
add
push
out
push
jge
lahf
pop
clc
movsl
or
les
dec
scas
xchg
rol
das
mov
add
mov
ja
movsb
sbb
repnz
stos
pop
xor
js
popf
and
loope
sbb
xor
mov
cmp
hlt
test
lret
xor
loopne
inc
fldt
and
push
push
mov
mov
test
sbb
ljmp
inc
mov
inc
adcb
sbb
or
arpl
cltd
mov
jae
testb
sub
test
dec
adc
stos
mov
pop
pop
popf
xchg
xchg
lods
sub
adc
cmc
repnz
in
int3
sbb
add
xchg
jb
rorb
outsl
jbe
sub
or
lret
or
mov
mov
push
cmc
les
loope
sarl
mov
mov
dec
mov
xor
xchg
or
loope
fcmovbe
push
or
mov
xchg
daa
add
dec
ss
sub
push
inc
or
loopne
stos
sbb
call
sub
cmc
inc
sub
jne
ss
xchg
je
adc
fnstcw
test
repnz
xor
out
xlat
loope
mov
xchg
jo
pushf
add
mov
push
mov
mov
inc
or
mov
popf
sbb
push
stos
loop
jmp
sub
adc
jno
mov
dec
sbb
nop
sbb
jmp
dec
test
mov
mov
addr16
testl
push
jmp
mov
xchg
xorb
lock
in
jnp
imul
es
sbb
rcrl
pop
mov
ds
loope
stc
sbb
cmp
pop
loopne
mov
popf
nop
inc
lret
pop
push
adc
pslld
iret
sbb
pop
sbb
xchg
inc
cmc
rolb
ljmp
pop
pop
bound
daa
cmpsb
adc
push
or
lods
out
loope
aas
pusha
test
sub
add
rorb
mov
mov
add
ret
jmp
push
loope
aas
das
cmpsl
jo
repz
xchg
dec
les
xchg
and
pop
lock
jbe
std
mov
imul
xor
cmp
sbb
jne
loop
xor
jl
jle
sbb
mov
dec
fistl
shlb
mov
pop
jae
jbe
fildll
mov
out
xchg
je
mov
and
mov
push
stos
fdivrl
daa
arpl
pop
push
push
push
popf
mov
dec
outsl
outsb
inc
xor
add
mov
xchg
in
test
rcr
sbb
sub
mov
data16
sbb
mov
and
outsb
orl
bound
lahf
cmp
shrl
imul
jae
adc
mov
sub
in
les
sub
hlt
and
bound
xchg
pop
dec
lods
adc
rcrl
in
cld
adc
add
ja
adc
outsb
cmp
jno
subb
sbb
nop
out
fisubl
movsb
inc
clc
cwtl
push
xor
xor
push
push
ds
sbb
shrl
test
xchg
aad
outsb
mov
adc
inc
aaa
jecxz
push
mov
push
pop
roll
rcr
sbb
mov
lahf
std
rorb
mov
sub
fsubrs
imul
jno
je
sbb
cmp
std
cltd
fxch
bound
arpl
sub
int
dec
cmp
jns
add
cmp
sub
jbe
cmp
inc
bound
arpl
sbb
mov
inc
std
rcrb
adc
repz
lods
adc
in
or
inc
in
and
or
mov
clc
imul
sbb
xor
inc
or
inc
iret
mov
mov
lcall
cmp
cs
xor
or
ret
and
push
mov
cmp
pop
push
mov
dec
lahf
sub
arpl
add
inc
push
dec
add
pop
shll
scas
int3
sub
or
adc
cli
pushf
xchg
icebp
flds
gs
pop
pushf
mov
jnp
iret
out
call
pushf
negb
and
fnstenv
xchg
sti
sbb
and
fimull
push
mov
jb
xor
mov
push
stos
call
outsl
enter
filds
adc
sbb
xchg
sub
mov
int3
lret
pop
inc
nop
ret
cmp
jno
mov
mov
mov
in
scas
xchg
push
mov
fbstp
je
push
testb
std
jmp
cmp
cmp
aam
jg
cld
mov
pop
ss
leave
sbb
dec
aad
aas
ret
sub
sbb
add
icebp
fldl
xchg
fs
imul
adc
mov
int
mov
jg
sarl
mov
sub
jle
inc
je
sarl
sbb
imul
daa
es
fadd
and
mov
add
add
test
or
mov
jl
jge
insb
adc
ror
test
add
xor
iret
ficompl
fistpl
add
cmp
push
push
and
loop
xchg
mov
insl
movq
sahf
in
sbb
lds
mov
loopne
pop
ds
repz
xchg
pushf
pusha
ds
add
push
sarb
pop
divb
xor
ja
lcall
nop
icebp
out
add
aas
dec
rorl
jb
mov
cli
dec
push
cmp
adc
mov
and
mov
andb
xchg
jns
in
test
dec
lock
sub
inc
mov
mov
or
xor
out
ljmp
sbb
mov
outsl
xchg
xchg
bound
jp
or
rorb
fidivs
pop
push
add
xchg
retw
mov
and
xor
das
jmp
in
stos
or
mov
mov
cmp
jmp
jo
mov
push
pop
pop
out
inc
jecxz
fldt
cmp
outsl
ret
jo
pop
xorb
dec
and
in
xor
xor
aad
lea
and
fildl
cld
sar
in
mov
and
sub
sub
cmc
mov
movsb
jge
mov
popf
outsb
je
push
and
mov
mov
mov
popf
cmp
das
popf
lahf
push
stos
mov
add
insb
lahf
outsl
xchg
lea
lcall
scas
mov
adcl
inc
shrb
aam
jbe
std
mov
or
cld
shrl
cmpl
pushf
xchg
add
test
lcall
insb
dec
xor
inc
jne
lock
mov
fwait
loop
xor
test
pop
hlt
jmp
ds
ljmp
out
sub
add
fidivl
movsb
xor
push
cwtl
mov
mov
cmp
pop
jmp
mov
out
sub
fadds
sbb
shll
mov
cmp
xchg
xchg
cmp
rol
xchg
sti
mov
mov
shll
xor
insl
inc
movsl
cli
test
push
xchg
lock
popa
mov
ret
cmpb
mov
xchg
sbb
ja
pop
int
cmp
fstl
dec
jb
in
pushf
in
ss
xor
dec
or
std
cwtl
outsb
loop
sub
roll
mov
mov
mov
inc
mov
arpl
popa
xchg
arpl
adc
mov
xchg
test
ficoml
inc
filds
loop
lcall
adc
sub
sub
mov
mov
int3
test
rorl
mov
and
jp
mov
add
lcall
cmp
xchg
and
movsl
dec
inc
dec
pop
mov
mov
fdivrl
jne
ret
xor
add
fwait
inc
in
inc
add
sti
jmp
add
jg
pushf
dec
shr
les
mov
xor
sqrtps
xor
cmp
jb
xor
es
jne
or
popf
mov
stos
lods
js
push
insl
std
bound
iret
pushf
aaa
cmp
mov
pop
xlat
and
mul
add
push
push
pop
add
test
xchg
pop
adc
xor
shl
pop
push
fisttpll
sbbl
fmull
ss
mov
in
rclb
sub
or
outsl
dec
sarl
push
insb
xorb
dec
movsb
dec
jne
lea
add
iret
mov
sbb
neg
pusha
jbe
jle
pusha
pop
dec
popa
fists
fsubl
or
aaa
dec
mov
adc
enter
lret
pop
inc
shrb
fldl
imul
cmp
sub
stos
into
in
mov
mov
fcmovu
and
mov
nop
out
or
dec
fsub
jp
out
fiaddl
testl
push
sub
fnsave
sub
test
fwait
cmpsl
dec
jns
jae
adc
jne
inc
imul
scas
mov
dec
pop
sub
xor
sbbb
cmpsb
jnp
ljmp
fsubl
dec
xor
cltd
sarl
xchg
fistpl
fldl
fldenv
dec
movsb
inc
push
add
jl
cmc
outsl
sub
lods
imul
mov
jbe
bound
xchg
mov
inc
push
lret
xchg
mov
nop
cs
cmp
mov
xchg
popa
arpl
les
jne
imul
sar
repz
aas
mov
in
mov
jb
notb
push
insl
and
dec
add
xor
enter
or
loope
jno
pop
rcl
xchg
xlat
lea
das
aam
xchg
push
jecxz
xchg
std
jge
inc
jbe
sbb
imul
rcrb
int
push
in
sbb
hlt
adc
sub
adc
mov
arpl
push
shrb
mov
les
dec
push
into
in
leave
xor
lcall
mov
sbb
rcr
add
cmp
or
or
cmpb
pop
xchg
fiaddl
adc
mov
add
inc
test
mov
jns
enter
test
dec
mov
out
cmpsl
jnp
pushf
push
push
pushf
jbe
mov
stc
outsl
out
imul
cmp
leave
cmc
push
int
sbb
dec
fsubs
adc
xor
icebp
cli
test
sahf
or
das
or
mov
xor
sarb
dec
mov
push
jns
fimuls
mov
test
dec
popf
jmp
insl
xchg
cmp
sbb
mov
cmpsl
xor
stos
popf
cmp
adc
shlb
adc
inc
sub
or
mov
push
ja
cmp
movl
xchg
dec
xchg
xor
test
xor
cmp
xchg
dec
adc
mov
std
clc
lods
add
ret
fstpl
or
sti
pop
fstpt
call
in
jp
pop
das
lcall
aas
loopne
or
test
cmp
cmp
mov
bound
mov
movsb
dec
call
mov
adc
pop
and
inc
bswap
pop
sbbl
lods
inc
arpl
and
fidivrs
or
stos
out
inc
xor
aas
andb
mov
dec
cltd
ret
adc
rcrl
sub
and
ds
loopne
int3
test
popf
xor
add
pop
xor
vpackssdw
add
dec
subl
pop
sub
push
jecxz
enter
pop
mov
sbb
scas
jp
mov
test
dec
mov
pop
mov
sub
cmp
test
int3
sub
mov
or
fcompl
imul
pop
push
jle
cmc
and
gs
lods
loope
inc
ds
or
dec
movl
adc
xor
ja
lds
andl
arpl
or
xchg
test
loopne
out
mov
xor
imul
lea
sti
jmp
sub
popf
mov
dec
cmp
mov
pushf
jle
sbb
loop
cmp
addr16
sub
xchg
mov
ja
adc
adc
jecxz
sbb
imul
fdivrs
dec
push
push
xchg
cmp
adc
jg
faddl
push
rcl
cmpl
mov
dec
cmc
cs
and
or
movsl
stos
lods
pop
and
popf
xchg
xor
adc
jge
sub
test
ds
sub
mov
pusha
mov
jnp
adc
cmpsb
push
inc
pop
lods
imul
test
sbb
xchg
ss
out
push
clc
or
popa
stos
add
fwait
xor
inc
ficoml
push
ljmp
xchg
sahf
xchg
push
push
rcr
adc
xlat
xchg
adc
push
in
mov
es
mov
push
ret
call
sti
pushf
cs
adc
xor
push
lods
inc
test
cmp
jecxz
cmpsb
in
cmp
push
cwtl
test
cmp
sbb
lahf
out
xchg
out
ret
inc
mov
push
aaa
push
jmp
xorl
push
fdivrs
stc
and
bound
decl
pop
adc
stos
sahf
das
and
pop
cmp
jns
push
cmc
fnop
and
lock
inc
in
push
or
mov
ds
mov
repnz
rol
jb
pop
lret
mov
pop
sahf
add
lret
mov
int3
pop
fwait
out
xchg
imulb
xchg
mov
push
sub
or
mov
sbb
xchg
xchg
mov
mov
xor
sbb
scas
lea
xchg
and
mov
aaa
das
cmp
pop
adc
in
push
aaa
es
mov
lods
cmc
add
xor
sub
je
test
mov
setp
push
or
push
jmp
ljmp
lcall
xorl
push
jno
mov
xor
inc
pop
pop
adcb
mov
jmp
fstl
pop
mov
data16
mov
mov
add
rorb
mov
xorb
pusha
outsb
push
jmp
sub
cli
lds
push
imul
or
inc
clc
aas
test
stc
movsl
pop
lods
ja
jno
sbb
push
mov
fadds
mov
es
adc
mov
push
xchg
neg
orl
xor
lods
jno
movsl
pop
push
or
lods
rclb
xchg
stc
adc
inc
int3
dec
loopne
out
jecxz
pop
cmp
in
sahf
jmp
call
xor
fisubrl
iret
test
push
mov
add
idivb
mov
xchg
pop
pop
in
stos
fs
or
cwtl
fcomi
pop
test
or
mov
into
pop
stos
sub
scas
xor
push
btr
in
jge
and
push
dec
sbb
and
jns
dec
ss
repnz
daa
sub
xor
xchg
mov
fdiv
xchg
mov
roll
or
jnp
lret
js
ret
in
mov
pop
sahf
lcall
mov
das
aas
inc
sub
pop
stc
jp
jle
dec
mov
sti
shrb
jle
adc
lea
or
loop
pusha
in
fs
xor
fisttpll
lds
dec
ffree
in
insb
outsl
mov
mov
lods
mov
lret
mov
jb
insb
mov
fsubl
add
push
ljmp
fstps
xor
das
mov
in
in
sbbb
mov
mov
mov
outsb
pop
xor
aad
orb
repnz
jmp
xchg
shll
outsl
cmpsb
cmp
inc
loop
outsb
mov
lock
sbb
neg
or
jae
jle
mov
bound
add
fwait
jmp
hlt
xor
pop
inc
sub
movsl
aaa
mov
sbb
jb
jg
xlat
ret
jl
pop
mov
ljmp
insl
push
and
dec
pop
fs
cmc
mov
push
cli
adc
cs
popa
xchg
insb
pop
inc
imull
insl
and
int3
stos
dec
sbbl
ss
daa
mov
jb
in
pop
cmpsl
jg
adc
lret
lret
in
and
or
std
xor
adc
xchg
xor
sbb
xor
add
or
bound
shl
pop
push
and
stos
in
mov
aas
cmp
cmp
ret
dec
push
xor
jmp
pushf
sar
inc
stos
ret
movsb
cmp
xor
ds
jo
cmp
or
ds
pop
bound
and
xchg
push
pop
xchg
jae,pt
inc
nop
out
or
mov
call
push
jo
pop
mov
stc
aam
push
fwait
leave
int3
xlat
stc
xor
jge
pop
dec
jns
aam
jbe
and
or
lahf
addr16
jne
call
pop
add
ljmp
stos
jmp
fidivl
lahf
jnp
or
or
daa
push
cmp
imul
push
jge
data16
sbb
jno
rcrl
xor
cmp
dec
inc
nop
sub
sub
cmpsb
les
enter
cmp
mov
dec
mov
in
xchg
scas
stc
cli
popf
xchg
xchg
jns
ljmp
daa
cwtl
or
mov
dec
daa
jb
pop
sub
ret
and
dec
cld
sub
aam
scas
xorb
mov
sahf
mov
into
movsl
add
fsubrl
dec
test
add
dec
or
data16
arpl
mov
mov
cmp
dec
sub
aam
pop
pop
sbb
popf
je
cmp
mov
xchg
or
icebp
insb
adc
pop
out
push
xchg
jns
loop
pop
inc
inc
inc
cmp
arpl
stc
fwait
aas
adc
icebp
dec
push
mov
lods
in
sarl
ucomiss
xor
add
xchg
sbb
shrl
mov
adc
aaa
fildll
fbld
xchg
mov
xchg
cmc
mov
sub
lods
stos
inc
adc
sti
push
mov
aam
xor
mov
sarl
test
sub
inc
jg
rorl
scas
int3
lds
sbb
ljmp
sbb
pop
and
xor
popf
neg
ret
jbe
leave
iret
aam
xor
in
cmp
nop
into
inc
loop
sbb
xchg
enter
jg
fs
xor
ftst
mull
cli
jle
bound
dec
jmp
lods
divl
push
imul
stos
jmp
dec
mov
dec
sbb
dec
mov
xchg
jmp
mov
jb
mov
andl
fs
sbb
pushf
jmp
lret
pop
icebp
mov
js
cmp
js
dec
sbb
fnstenv
test
lahf
push
dec
sarb
add
loopne
adc
push
sahf
loope
pop
aam
js
iret
cmp
pop
cmp
sub
sbb
push
lcall
pop
sbb
inc
call
jmp
in
jmp
jle
sbb
pop
dec
insb
inc
dec
fcmovnbe
lret
or
add
outsb
inc
mov
imul
scas
adc
ud2
std
cmp
mov
lret
and
rorb
or
jecxz
jg
and
sahf
stos
and
pop
aas
inc
int3
movsl
in
push
aas
push
outsl
cmpsl
mov
lret
arpl
cmp
mov
enter
lret
or
test
jno
mov
negb
iret
mov
into
orl
adc
in
cmp
clc
stc
das
xor
xor
loopne
push
adc
inc
jno
es
add
add
or
sbb
popf
sbb
bound
jg
mov
sahf
mov
sub
popf
lret
shll
out
cmp
xchg
mov
out
sub
stc
mov
adc
enter
js,pt
je
mov
stos
push
test
mov
xor
lret
testb
popf
mov
test
dec
xor
inc
daa
mov
xchg
cmc
push
push
sbb
mov
mov
jnp
daa
add
stos
jnp
lods
fmull
sbb
mov
sub
loopne
lret
cmp
mull
lahf
ja
push
pop
scas
movlhps
lods
sub
jl
mov
movsl
add
mov
cmp
xchg
dec
xor
jb
mov
faddp
mov
out
daa
rcrb
ficomps
rol
scas
shlb
adc
stc
cltd
adc
or
adc
mov
mov
outsl
lock
sbb
jbe
mov
mov
push
push
out
jns
es
scas
test
xchg
mov
shl
scas
pop
push
sub
lea
lods
jg
neg
pushf
sahf
mov
imul
pushf
dec
mov
pop
jmp
xchg
sub
dec
imul
or
sub
or
or
push
or
std
hlt
lahf
das
xchg
sub
pop
mov
fldcw
xchg
arpl
clc
loop
fisttpl
outsb
pop
aas
or
rcrb
outsb
mov
adc
xchg
loop
testl
add
lea
rolb
sti
rorb
les
lods
iret
inc
mov
fidivrs
shl
xchg
cmp
push
repnz
push
mov
rorb
fildll
xchg
js
mov
scas
cmp
sahf
and
add
inc
sbb
es
scas
mov
inc
lock
rolb
into
mov
mov
inc
lret
int3
xchg
jbe
cs
add
subl
inc
pop
sbb
loop
fdiv
lcall
add
ret
xchg
sub
insl
sub
push
je
into
mov
shrb
imul
push
jle
jmp
and
aaa
lcall
mov
xchg
imul
jnp
inc
fldl
jge
inc
std
mov
aaa
mov
scas
js
mov
mov
xor
cmp
movsb
xor
cmp
cmpsb
rcl
jne
pop
repnz
fcmovnu
das
les
jo
ffree
xor
in
mov
sbb
adc
out
sbb
sti
cmpsb
ret
cmpsb
mov
outsb
stc
inc
adc
mov
mov
and
cmpsb
mov
cwtl
sbb
fistpll
xor
adc
sbb
flds
xchg
pop
test
push
mov
imul
or
cltd
stc
lahf
mov
lock
mov
fnsave
add
mov
rcr
jmp
fnstcw
cwtl
fisttpl
jge
in
mov
mov
and
mov
ss
repnz
in
xor
xchg
sub
into
mov
bnd
lds
adc
xchg
pop
mov
sub
shl
cmp
push
int3
ss
cmpsb
and
dec
pop
lea
adc
mov
movb
and
divb
cmc
and
or
sbb
imul
arpl
push
das
push
jg
mov
aad
movsl
and
daa
lods
std
lods
fdivrs
pop
sub
iret
xchg
ss
pop
arpl
xor
jbe
mov
mov
andl
jne
test
popf
dec
sbb
nop
cmp
mov
sub
lods
ja
xor
addl
xchg
dec
scas
icebp
into
dec
xchg
cmpsb
cs
cld
mov
pop
adc
in
mov
sbb
loop
mov
lea
xor
sbb
out
xor
je
mov
or
sahf
fs
in
lahf
stos
add
call
repz
rcll
jecxz
addr16
out
into
sub
sbb
xchg
sub
xor
jno
dec
and
and
or
mov
or
jb
arpl
mov
pop
dec
fistpll
sub
aam
loopne
sub
push
movb
push
mov
cmpsb
and
cmpsb
enter
in
test
fdivp
es
pop
sahf
xor
adc
shrl
sub
jo
push
rcrl
leave
ljmp
mov
inc
pop
sbb
aam
xor
pop
cmp
jbe
xchg
data16
cwtl
int
or
sbb
mov
dec
jp
xchg
and
mov
adc
mov
call
daa
mov
adc
jge
data16
dec
dec
outsb
push
xor
lcall
stc
lods
movsb
imull
add
neg
stos
pop
daa
daa
and
enter
inc
test
push
and
jl
sar
repnz
jns
sub
cld
dec
in
aam
pop
or
aaa
ds
push
xor
lret
mov
rorb
subl
cmc
xor
sbb
je
bound
dec
loopne
push
cs
pop
outsl
mov
pop
bound
xor
negl
repz
int
jmp
sub
cld
lods
sub
in
lahf
mov
pop
imul
push
or
pop
cs
repz
xchg
add
mov
add
sbb
movsl
and
fcomps
aaa
enter
cmp
inc
mov
cmp
pop
jns
xchg
fiaddl
test
mov
xchg
xchg
enter
mov
mov
jae
cmp
pop
aam
push
shrb
std
push
arpl
xor
jecxz
shll
cmpsb
sbb
jno
je
xchg
das
movsb
jae
insl
loope,pt
add
sub
sub
mov
dec
push
adc
inc
and
out
fistpl
cwtl
mov
mov
icebp
lods
adc
into
cmpl
xchg
rorl
add
jo
sub
jl
xor
push
and
mov
imul
scas
stos
lea
pop
and
push
adc
sub
adc
mov
stos
mov
rcrb
push
xlat
sub
loope
pushl
ret
mov
pushl
xchg
test
or
call
jnp
mov
cli
sub
popa
lods
movsl
movsb
push
sub
arpl
shlb
daa
bound
mov
frstor
inc
pop
pop
adc
in
and
jl
pop
gs
test
adc
jmp
aas
xchg
mov
popa
imul
xor
jb
sub
add
out
add
maskmovq
negl
mull
add
in
test
adc
adc
fwait
movsl
pop
mov
je
rol
lods
in
push
jo
popa
xor
sbb
mov
dec
andl
sbb
pop
sub
test
loope
sbb
jo
ss
stos
fistl
xchg
aad
cmp
or
dec
into
icebp
sti
test
mov
test
ret
fwait
dec
js
cmp
clc
dec
test
shlb
mov
hlt
pop
lea
rorb
loop
pop
rcrl
jnp
test
pop
dec
movsb
bound
mov
mov
ret
push
and
mov
dec
jmp
sbb
cltd
push
or
scas
cmp
icebp
imul
sbbb
and
sub
sahf
dec
bound
test
repnz
arpl
fwait
jl
mov
jge
xchg
aam
in
sbb
fstpl
popa
lret
fisttpll
sbb
mov
mov
in
and
subl
je
dec
loop
lods
aam
push
adc
sahf
jle
ds
adc
mov
cmc
cmp
aad
push
das
cmp
rclb
mov
std
dec
arpl
add
sarl
xchg
pop
addr16
insl
add
repnz
inc
inc
stos
in
or
test
movsl
ret
in
enter
cmp
in
inc
loop
dec
jmp
push
xchg
into
sbb
adc
or
inc
xor
leave
or
and
js
sahf
add
es
loope
fsubr
andb
pop
sbb
ljmp
xchg
stc
test
and
clc
scas
inc
or
ss
mov
inc
jge
dec
sbb
pop
dec
ss
xchg
or
addb
or
int3
mov
inc
xor
push
cmp
add
inc
fists
enter
and
mov
pop
stc
pop
mov
jecxz
inc
and
fnstenv
push
int3
adc
es
cmpsl
rol
jl
add
call
aas
gs
lret
lahf
sti
aad
mov
lretw
inc
or
adc
int3
xchg
jp
cmc
lods
pop
xor
and
push
jb
xchg
pop
fisttpll
xchg
jno
lret
jnp
mov
aam
rep
mov
cld
cmp
and
ja
mov
jns
clc
lcall
sub
not
cmp
in
rcr
xchg
mov
lcall
lods
mov
add
out
jb
ljmp
outsb
scas
mov
mov
loopne
bound
xor
mov
jle
add
imul
mov
inc
mov
lods
jle
out
in
sbb
in
xlat
jle
push
add
shrl
mov
sbb
xchg
test
jmp
arpl
ffree
push
fidivrl
cmp
dec
xchg
ss
lods
test
cmp
ss
fprem1
mov
test
adc
insl
jae
add
mov
outsl
test
les
xor
jae
sub
stos
or
inc
out
xchg
pop
pop
in
lods
xchg
int3
mov
lret
push
out
nop
test
dec
fidivrs
sub
fucomip
imul
sub
loope
inc
xchg
inc
sbb
sbb
pop
sti
fwait
jno
insb
ss
loope
nop
lods
mov
jne
ljmp
ljmp
sti
or
inc
rorl
int
dec
adc
dec
fldt
popf
insb
imul
stos
out
ss
jl
mov
push
test
push
mov
xchg
out
int
pop
mov
push
decl
repz
xor
or
lods
repnz
dec
mov
cmp
and
sub
cmp
cmp
add
in
jno
lahf
mov
pushf
mov
cmp
inc
dec
adc
clc
inc
and
xor
popf
sbb
call
add
in
lret
idivl
adc
lods
rcrl
cmp
lock
cmpsl
stos
mov
sbb
out
movups
xlat
xor
push
push
sub
xlat
or
adc
lods
mov
xor
mov
fwait
aaa
sbb
mov
data16
insb
lods
and
int
fisttpl
or
cmp
in
faddp
xchg
or
fidivs
xchg
pop
xchg
cmpsb
incb
xor
mov
icebp
xchg
in
mov
loopne
in
stos
sub
mov
bound
jg
inc
in
xor
pop
lahf
test
negb
jp
sbb
jnp
daa
mov
rcll
lahf
sub
idivb
cwtl
add
pop
scas
sub
or
int
or
fldt
std
cmp
and
lret
mov
fisubs
cmp
sub
mov
add
sub
dec
inc
into
in
ds
movsb
popa
mov
sub
cmpsb
sbb
lahf
leave
outsb
cltd
xor
cmp
jbe
jb
mov
inc
in
rorl
jno
mov
inc
cli
jmp
enter
add
pop
jns
mov
hlt
movsb
mulb
popf
xchg
std
mov
mov
sub
imul
and
inc
and
mov
data16
imul
inc
stos
jb
xorb
ja
push
add
inc
stos
sub
in
sub
aaa
iret
test
inc
xchg
and
mov
movsb
or
pop
popa
and
into
xchg
add
lock
mov
mov
xchg
mov
pop
in
ljmp
push
test
or
rcl
scas
outsl
inc
xor
cli
mov
loop
pop
popf
mov
ds
dec
rolb
addr16
sbbl
sub
pop
enter
dec
pop
mov
sub
and
jns
add
jo
dec
add
adc
xchg
push
mov
int
test
or
icebp
dec
inc
xchg
sub
push
mov
stc
cmc
inc
mov
and
pop
mov
inc
push
sti
push
adc
shlb
pop
fdiv
mov
fistl
jg
cmp
in
aam
adc
ljmp
test
divl
mov
cmp
push
or
or
xor
in
imul
cli
pop
push
lret
mov
or
bound
adc
js
cmpl
loop
and
mov
sbb
xor
rorb
aas
adc
push
out
mov
adc
cltd
outsl
and
daa
je
xchg
repz
mov
adc
loope
fisubrs
jns
std
dec
cmpl
xchg
ljmp
lods
xchg
mov
push
push
repnz
dec
xor
pop
push
adc
aas
test
jb
pushf
push
out
lock
sbb
in
dec
lcall
ljmp
push
lahf
pop
test
iret
xchg
imul
jmp
orb
in
mov
lods
add
jg
mov
dec
jg
and
pop
shll
jp
movsl
pop
lcall
add
sti
xchg
xor
push
shrl
xor
or
frstor
lock
in
fwait
jbe
fisttpll
mov
pop
shlb
fidivl
cmp
ljmp
push
xor
pushf
jl
loope
rclb
aaa
add
mov
int
neg
push
jo
cmpsl
in
and
push
jle
dec
into
jge
pushf
mov
mov
sub
jp
pop
mov
jg
fnsave
lds
sub
add
mov
sub
ja
repz
mov
stos
mov
pop
push
mov
and
mov
pop
repnz
daa
dec
cwtl
loop
mov
sub
outsl
pop
leave
fwait
adc
cmp
lds
cmp
int3
xchg
jbe
jo
push
mov
mov
fistl
adc
or
push
rclb
push
andl
cmp
cmpsl
pop
pop
dec
into
or
sahf
adc
lahf
add
in
in
sub
adc
jbe
cmp
clc
jae
into
sbb
inc
xor
aaa
add
and
in
pop
jge
sahf
testb
jno
lods
adc
test
repz
xchg
push
gs
mov
fnstsw
into
and
push
orps
dec
ljmp
arpl
push
push
sti
bound
lret
ds
xor
ret
xor
cmp
cmp
lds
frstor
xor
push
push
incb
cltd
sarl
int3
aam
mov
sbb
mov
sahf
das
sub
aam
jnp
int3
or
lods
rolb
das
lods
bound
jecxz
xor
pop
les
mov
mov
add
or
shrl
rorl
or
sub
rorl
push
sub
inc
popa
enter
dec
js
rcll
idivl
sbb
lods
sbbb
xchg
sbbl
ret
xchg
repnz
insl
sbb
or
sbb
es
sbb
icebp
lahf
data16
orb
xor
les
jecxz
ror
sub
pop
sbb
lcall
rol
cmp
push
push
mov
cmp
mov
or
adc
shlb
cmp
jp
scas
push
iret
adc
cmc
jmp
sbb
adc
xor
add
imul
push
or
mov
sub
jg
adcb
outsb
sbbl
pop
jle
or
mov
sahf
out
popl
mov
jp
lock
mov
and
leave
push
scas
or
in
push
xchg
mov
push
insb
push
push
mov
pop
push
dec
jl
pushf
xor
repnz
jecxz
sub
and
xacquire
mov
stc
pushf
push
cmp
xor
ja
jae
addr16
jmp
faddl
stc
add
dec
fildll
mov
mov
cwtl
repz
cmp
das
gs
xchg
sub
or
xchg
mov
mov
pushf
xor
pushf
and
inc
sbb
in
iret
mov
movsl
imul
adc
test
test
clc
cmp
leave
jmp
dec
ss
sbb
repnz
cmp
ss
stos
or
lds
xor
adc
aaa
sub
cmp
xor
mov
dec
inc
lods
movsb
add
cltd
stc
push
jle
sar
mov
and
pop
stos
adc
lods
pushf
repz
xchg
fiaddl
movsl
xchg
inc
pop
pop
popf
cmpb
scas
mov
dec
pop
lods
or
rorb
cmp
mov
xor
mov
jle
add
scas
mov
lds
mov
add
aaa
pop
and
cmp
cmpb
xchg
jle
ds
imul
fnsave
pushf
out
push
test
ljmp
cmp
daa
arpl
clc
movsl
ret
mov
add
push
aaa
test
mov
jnp
arpl
pop
push
add
fistl
fisttps
outsb
lds
cmp
jmp
jecxz
stos
cmp
ret
ss
xchg
pop
xchg
xlat
lock
sbb
lahf
sbb
xor
mov
test
stos
dec
pushl
mov
jne
repnz
hlt
fldt
out
daa
jmp
dec
std
cmp
or
xchg
and
shlb
mov
ds
fistpl
push
shll
lret
pop
sahf
mov
rcll
pop
je
mov
mov
xor
cmpsl
pop
repz
scas
subb
jmp
jecxz
addb
pop
adc
lock
decb
and
or
jbe
cmpsb
mov
cli
icebp
adc
xchg
fbld
sub
inc
iret
jecxz
xor
loopne
and
dec
ja
cld
aas
sub
in
xchg
push
out
cli
movsl
mov
jnp
fnsave
jae
lret
sahf
push
fwait
mov
xchg
test
std
and
mov
mov
cltd
es
sub
lcall
fmul
inc
xchg
out
dec
mov
jle
in
dec
cmp
maskmovq
ficoms
inc
push
adc
xchg
pusha
push
pop
mov
loopne
fwait
test
nop
hlt
mov
xchg
mov
mov
cli
xchg
leave
push
xchg
mov
clc
sbb
mov
sti
mov
insb
lds
xor
icebp
xor
sub
addr16
pop
mov
push
sub
lret
repz
inc
outsb
repnz
mov
aaa
xor
jnp
xor
pop
dec
pushf
sbbb
mov
mov
or
inc
lock
rorl
hlt
lods
inc
fwait
stc
pop
loop
fists
jecxz
sbb
mov
push
stos
xchg
push
cmc
daa
xchg
add
xor
imul
or
not
inc
iret
pop
inc
mov
popf
sub
sub
fs
es
sbb
mov
repnz
jbe
testb
xchg
jb
cmp
inc
iret
cmp
mov
mov
mov
js
sarb
xor
loope
pop
dec
dec
mov
cmpsb
fstps
xor
in
clc
cmp
push
inc
or
and
inc
cmp
inc
xor
sub
and
into
shlb
sub
xor
push
int3
cmpl
xor
outsl
sbb
iret
pop
dec
sub
inc
or
lcall
push
inc
leave
insb
sub
adc
fnstsw
divl
inc
dec
int3
in
jns
rcrb
mov
mov
and
bound
jno
sarl
cmp
cmp
mov
dec
stc
out
pop
xchg
int
call
ja
add
mov
icebp
or
fiaddl
lds
xor
lret
popf
out
out
arpl
or
cmp
stc
shrl
movsb
inc
mov
pop
xchg
or
fisubs
push
inc
xchg
or
jo
mov
mov
pop
mov
shrl
mov
pop
popf
cld
inc
push
data16
cmp
pop
xor
rcrb
jne
xchg
mov
and
pop
adc
dec
xor
inc
push
sbb
mov
repz
mov
pop
aam
fwait
cmc
imul
jp
sbb
mov
sti
aas
mov
mov
jae
jns
mov
movsl
mov
mov
cli
pushf
jne
stos
jb
inc
jle
mov
xor
fidivs
inc
mov
adc
mull
nop
pop
dec
xor
popf
xchg
je
inc
sbb
hlt
jno
ret
stc
mov
mov
add
shl
mov
mov
push
shlb
stos
dec
jns
mov
aam
and
lret
cmp
jae
cmp
mov
and
jb
mov
repz
xor
mov
dec
cld
fbstp
xorb
int
pop
sbb
ficomps
aad
loope
and
inc
xchg
insl
ljmp
sahf
std
fndisi(8087
call
adc
mov
sbb
je
scas
dec
xchg
lret
mov
stos
xchg
or
outsl
out
push
jecxz
and
fs
push
movsb
mov
int3
mov
int
aad
jge
outsb
les
leave
stos
mov
dec
dec
xor
test
jecxz
test
mov
fsubs
das
cmp
cltd
jns
inc
dec
lods
pop
lods
cmp
sbb
add
in
jge
iret
jae
cmp
fildll
xchg
cmp
pushf
loope
xchg
jnp
cmp
lret
and
push
ret
lcall
xor
jmp
out
cmc
insl
pushf
or
cmp
jp
xorb
rcrb
icebp
repnz
sbb
xchg
add
xor
fimull
jae
mov
dec
or
ret
out
bound
mov
mov
jae
mov
add
push
sbb
lods
sti
insb
arpl
cmpsl
roll
gs
dec
ret
pop
dec
jle
sub
push
mov
sti
mov
and
and
or
std
inc
lret
or
sbb
das
cs
js
ret
iret
push
cmpsl
push
pop
dec
and
push
sub
push
fidivl
sti
adc
jmp
sub
bound
imul
mov
xchg
clc
sub
aas
stos
sar
lock
out
xchg
aas
das
movsl
xchg
fwait
movsl
add
lods
and
add
mov
sub
into
mov
test
and
repz
fisubs
ljmp
sbb
sub
inc
cmc
lea
aas
lock
lret
xchg
test
xorb
mov
aaa
clc
cld
xchg
dec
int
test
js
repz
pop
jns
icebp
jne
lea
icebp
iret
adc
sub
and
daa
xor
mov
sahf
cmc
test
js
hlt
aam
pop
stos
push
scas
clc
stos
or
push
jmp
in
mov
lods
stos
mov
inc
popa
popa
cwtl
mov
mov
mov
test
cmpsb
stos
out
loopne
jmp
jno
insl
sbb
or
xor
add
lods
xor
ret
sbb
daa
shlb
les
nop
adcl
cmp
dec
mov
in
repz
jp
push
cmp
adc
mulb
cld
inc
xor
xor
sub
lret
dec
mov
mov
rcll
sub
hlt
xchg
and
or
lcall
mov
dec
fwait
jmp
js
fwait
ja
pop
or
pop
cs
daa
sub
lock
aas
sub
sbb
xor
je
outsl
xor
push
xchg
decl
out
jno
lods
call
arpl
test
xor
leave
lock
cli
hlt
lods
iret
dec
pop
fnstsw
push
and
aas
xchg
idiv
dec
adc
cmp
shlb
mov
cmpsb
push
cmp
insb
dec
xlat
mov
jecxz
jp
dec
ljmp
xor
mov
jle
inc
and
mov
sbb
scas
pop
mov
ret
fwait
mov
bound
push
push
movswl
cmp
clc
and
sahf
and
js
mov
xor
inc
cmp
filds
or
cwtl
std
add
rclb
xor
aad
out
and
or
in
scas
xor
or
test
jnp
movsl
push
adc
xor
lock
arpl
cmp
mov
pop
dec
arpl
out
ret
icebp
ja
hlt
xchg
sbb
cli
jge
push
popf
dec
mov
aaa
aad
test
les
dec
jmp
sbb
lret
dec
and
ss
stos
out
xchg
inc
mov
hlt
cmp
jg
push
push
add
adc
aam
rorb
pusha
sub
and
mov
and
jns
add
pushf
jecxz
ret
test
dec
fisubrs
lret
pushf
pop
ljmp
push
lods
or
in
icebp
sahf
fidivrs
sub
pop
pushf
push
call
shrb
fsts
aaa
add
rolb
pop
clc
jno
mov
jbe
inc
inc
xchg
cmp
lds
insb
rep
xor
xchg
mov
jecxz
mov
pop
push
xchg
jno
cld
jle
xchg
inc
shlb
cmp
mov
sbb
dec
mov
test
mov
fimuls
cmp
je
lds
mov
inc
jp
in
mov
jge
out
push
icebp
shlb
xor
lods
dec
fs
sahf
pop
nop
push
mov
xor
or
sub
stc
sub
and
sub
add
mov
pop
ljmp
lret
xlat
lock
das
jne
aad
inc
fists
pop
push
in
in
stc
adc
jle
repz
repnz
xchg
loop
jbe
mov
shlb
push
lds
sahf
js
std
aad
hlt
xor
jle
daa
je
testb
xchg
adc
rorl
add
xor
add
jg
imul
push
std
lds
push
rcr
adc
inc
rcrl
inc
ja
jecxz
dec
and
jbe
push
xor
or
mov
push
leave
rolb
mov
inc
inc
pop
mov
dec
and
mov
jnp
hlt
mov
sub
dec
gs
sarl
les
ja
mov
add
dec
lret
cmp
test
add
jnp
mov
lea
mov
mov
and
aaa
jecxz
cmpsb
fmull
mov
std
rdtsc
sti
ja
push
jb
iret
sub
push
in
out
ss
sbb
sub
std
mov
in
mov
sti
inc
outsb
mov
pushf
lock
pop
flds
mov
out
dec
xchg
xchg
rorl
lods
pushf
sarb
outsl
ss
fnstenv
clc
push
loope
rcrb
js
lret
dec
or
pushf
cmpl
ret
scas
dec
fldt
cmpl
jge
mov
scas
aas
push
dec
push
std
push
xchg
jo
add
mov
icebp
mov
mov
outsb
dec
xchg
pop
cmp
xchg
pop
ret
orl
sbb
inc
enter
mov
lcall
pushf
cmp
push
sbb
testb
mov
cmpsb
or
xor
mov
and
pop
inc
stc
mov
inc
cmpsb
pop
iret
inc
sti
mov
pop
popf
rclb
loop
xor
repz
xor
mov
js
into
cwtl
or
fchs
push
pusha
mov
dec
inc
fadds
loop
sahf
xchg
pop
jge
adc
xor
and
mov
test
dec
pmulhuw
outsl
icebp
xor
movsb
leave
xchg
loope
or
jae
mov
jle
pop
dec
xlat
pop
dec
jmp
mov
lahf
jne
mov
xor
xor
jnp
inc
shrb
add
pop
cli
cmpsb
ss
or
xchg
push
loop
aad
pop
cs
rclb
popa
loopne
call
bound
push
inc
xchg
xchg
mov
add
mov
std
cmpsb
std
push
shl
pop
fcomi
mov
stc
xchg
out
icebp
inc
sbb
cmpsl
adc
fidivrl
mov
sahf
add
adc
cwtl
gs
aaa
sub
push
pop
inc
jmp
pop
mov
lds
sub
scas
or
sahf
nop
std
popa
or
sbb
xchg
shrl
out
repnz
scas
inc
mov
push
xlat
cmpsb
and
sbb
cmc
pop
stos
mov
cmpsl
add
xchg
jmp
cli
aaa
inc
scas
jne
dec
mov
or
cld
jecxz
pop
pop
xor
clc
sub
inc
xchg
ret
aaa
sbb
mov
jp
in
imulb
sets
cmp
aas
add
add
or
loope
pushf
out
fdivl
mov
inc
add
cmp
gs
xchg
xchg
je
mull
mov
stc
test
xor
sysret
cwtl
sub
mov
jl
shll
xor
sub
inc
fcomps
mov
in
mov
mov
rcll
jb
mov
call
es
fstl
scas
scas
lds
inc
aas
dec
ss
or
aam
xor
xlat
fcos
int3
jnp
loopne
or
add
mov
inc
inc
pop
pop
dec
vpshufhw
jle
jmp
mov
fiaddl
sbbl
clc
push
js
xchg
inc
add
gs
and
imul
in
sbb
clc
out
test
jge
icebp
test
arpl
push
or
xor
or
cs
push
xchg
mov
cwtl
pushf
mov
pop
aas
adc
popa
inc
jae
popf
bnd
fildl
mov
lds
scas
fdivrs
cmpsl
sbb
mov
scas
jnp
mov
enter
xchg
add
out
mov
movb
test
jmp
push
sarl
jnp
aam
dec
dec
jmp
sbb
sti
jge
add
mov
dec
mov
lret
xlat
iretw
xor
and
pop
aam
adc
mov
out
js
in
sub
and
bound
shl
xchg
add
enter
pusha
inc
shrl
jmp
nop
test
inc
loope
jp
cli
into
in
into
ss
outsl
or
daa
sub
mov
pop
and
jb
jb
mov
xchg
call
push
and
and
and
jg
pop
fisttps
ss
fsubrl
nop
add
pushf
scas
into
movsl
ja
enter
fldt
cmp
aad
loop
call
xor
test
int
in
cmp
das
mov
inc
pop
sub
or
insb
push
or
mov
dec
pop
sub
push
rcrl
in
inc
push
in
test
fldt
das
in
lret
popa
xor
mov
push
stos
sub
push
idivb
jne
stos
out
mov
aad
xchg
cmp
jnp
mov
mov
js
outsl
repnz
lahf
addr16
mov
lock
adc
lret
leave
sub
stos
out
das
gs
aaa
stos
test
push
fdivrl
cmp
xor
or
je
call
sti
into
and
loopne
std
jecxz
add
fsubrs
out
xchg
mov
pushf
bound
mov
popf
jmp
or
fsubl
mov
mov
and
leave
fidivrs
lods
adc
mov
or
outsl
xor
les
or
inc
jnp
das
xor
pushf
inc
dec
inc
test
aam
pop
jbe
mov
fldcw
bound
mov
jo
cmp
mov
adc
shlb
xor
pop
and
popa
adc
xor
test
mov
sti
andl
mov
mov
test
out
imul
pop
imull
lret
int
adc
jp
push
and
dec
test
xor
jnp
cmp
orl
lea
mov
adc
lahf
inc
idiv
sub
movsb
mov
sahf
popf
xchg
ret
mov
cmp
sbb
add
or
lock
add
push
push
jecxz
leave
test
jo
ljmp
dec
ljmp
jnp
sarb
cld
std
inc
mov
pop
dec
pop
lea
ffree
aad
ja
and
or
cmp
in
aad
xlat
je
data16
sbb
into
jae,pn
negl
mov
out
or
divb
push
adc
inc
cmp
js
cmpl
inc
jle
cmp
cwtl
cmp
mov
lock
or
outsb
xchg
push
pop
mov
inc
fidivs
mov
scas
call
adc
hlt
xchg
mov
jne
and
mov
rorl
sbb
push
dec
ret
setno
aam
in
pop
pop
push
mov
or
nop
clc
in
lods
into
jb
rcll
push
pop
in
es
sub
mov
jo
popf
mov
mov
adc
mov
popa
je
aad
in
int3
ret
cmc
push
lea
xor
negb
pop
mov
movb
add
sub
jne
test
jno
cmp
dec
xchg
mov
and
inc
inc
ja
addr16
jecxz
sub
and
loop
sahf
mov
jl
sub
push
aad
js
adc
insb
hlt
leave
in
scas
pop
xlat
call
push
add
add
add
jge
pop
movsb
xor
mov
aad
out
cmp
fbstp
out
and
sub
dec
testb
adc
add
push
aaa
xor
push
xor
mov
into
pop
xor
stos
mov
orl
andb
repz
sar
ret
pusha
dec
and
cmp
cmpsb
mov
shrb
mov
mov
jns
cld
jno,pt
jae
imul
mov
mov
les
in
add
into
daa
stc
dec
jb
add
clc
xor
sar
push
mov
popw
xlat
mov
fwait
scas
pushf
mov
inc
test
xor
xor
mov
aad
xor
push
mov
sub
cli
in
or
test
and
fdivs
outsb
mov
stos
andb
dec
test
inc
fstpl
sbb
jg
sub
xor
and
stc
icebp
idivb
cmp
fsubrs
push
loope
pop
adc
jg
push
cmp
lea
shll
ss
push
jg
jo
add
scas
cmpl
and
data16
xor
sub
mov
mov
mov
sub
sub
xchg
loop
push
dec
inc
xor
ss
mov
mov
out
jbe
call
movsb
adc
xor
jo
pop
sbb
mov
sub
repz
pop
sbb
stos
lahf
push
push
and
jne
push
out
mov
imul
and
xor
sub
inc
daa
mov
enter
inc
pop
jno
adc
inc
inc
scas
int3
mov
cli
std
adc
fldcw
dec
pop
xor
fsubp
mov
lock
pop
in
daa
aad
out
loop
mov
xchg
in
int3
mov
sbb
test
inc
cmp
push
and
xor
pop
aaa
mov
mov
fistps
lock
pop
out
stc
call
sbbl
jns
xor
sbb
xor
call
mov
std
test
pop
mov
loope
add
cmp
les
jnp
ja
mov
xor
pop
lods
dec
cmp
loope
test
imull
testb
aaa
enter
jbe
arpl
sub
adcl
inc
add
sub
dec
cmp
cmp
stos
sbb
ja
les
mov
fwait
test
push
sbb
mov
jnp
mov
mov
xor
rcr
in
iret
cmc
cltd
xor
sbb
ljmp
mov
popa
test
cs
jbe
loopne
sbb
test
fistpll
aas
cmp
cs
ja
cmpsb
mov
mov
out
sti
call
ror
cmpsl
and
mov
fld
cmp
cli
mov
add
pop
push
aaa
ret
outsl
mov
fisttpll
xor
or
add
mov
shlb
push
or
sub
inc
mov
movsb
or
xor
pop
add
outsb
adc
dec
adc
lods
mov
outsb
dec
xchg
popa
sub
mov
adc
adc
lods
lahf
push
jno
jl
sub
jbe
scas
xorl
cmp
inc
cltd
add
sbb
sub
nopl
mov
scas
dec
and
mov
add
push
sbbl
mov
inc
cmpsl
cmp
and
cli
ret
or
and
arpl
repz
ficompl
pop
xor
sarb
add
sar
aam
scas
add
mov
push
fdivrl
jmp
hlt
xabort
fmuls
insb
push
sub
lea
add
imul
pop
mov
mov
fldenv
cwtl
cmp
mov
mov
jno
sub
pop
cmpsb
fdivrl
scas
popl
pusha
push
test
jne
xorl
dec
mov
imul
mov
xor
sarb
jae
jecxz
xlat
mov
aad
xor
cs
arpl
movsb
icebp
cmp
xchg
mov
push
mov
dec
ja
mov
fadds
xor
test
repz
cmp
sub
and
jbe
adc
imul
rcll
xchg
and
jo
pop
pop
mov
pop
mov
sub
sbb
push
jns
push
sub
cwtl
pop
fdivr
dec
xchg
shl
and
ds
push
add
mov
add
leave
push
arpl
jnp
adc
xor
cs
dec
movsb
jnp
fsubl
sbb
ret
out
cld
sti
enter
stc
and
jmp
mov
and
and
movsl
aam
outsl
cli
sbb
aam
dec
mov
sub
mov
or
mov
adc
mov
jecxz
sysenter
in
fwait
and
ja
testb
scas
insl
pushf
icebp
fstpt
or
mov
jns
xchg
sbb
rcrl
sbbb
sbb
mov
ja
pop
push
in
add
mov
cli
test
fisubl
or
lods
addr16
mov
pop
bound
push
inc
or
cmp
jae
pop
dec
arpl
pop
push
inc
push
lret
mov
push
add
xor
popf
lahf
dec
mov
lret
mov
cmc
and
dec
add
adc
mov
push
int3
jbe
ss
push
and
dec
adc
mov
mov
mov
push
and
ficoml
xor
lret
dec
mov
cmp
fsubrs
jg
les
and
mov
mov
les
cltd
ja
inc
fiadds
push
and
and
and
movsb
aaa
clc
inc
add
popa
hlt
sbb
sbb
dec
push
std
cmp
and
stos
divl
cld
or
push
sub
or
fnclex
repz
jnp
and
inc
fcmovu
faddl
xor
jns
mov
stc
xchg
pop
inc
mov
fnstsw
xor
nop
xchg
jmp
incl
mov
arpl
cmpl
xchg
mov
mov
mov
stc
das
push
sbb
jns
xor
and
push
sbb
xorl
pop
xchg
pop
sti
pusha
xchg
xchg
cld
cwtl
adc
inc
fwait
mov
cltd
popf
pusha
pop
out
sahf
or
inc
addr16
mov
sbb
or
pop
push
mov
scas
xor
add
mov
push
daa
mov
or
outsl
jl
add
call
inc
rorb
cmp
daa
cld
js
repz
jnp
cmc
cwtl
jge
imul
jle
flds
das
mov
stc
add
sti
pop
xor
mov
lods
xor
out
outsb
shr
es
daa
lret
jl
out
and
ljmp
shr
cmp
daa
cld
pop
adc
inc
pop
mov
cwtl
pop
pusha
mov
inc
adc
adc
add
stos
sahf
repnz
lcall
xor
mov
mov
mov
aam
sbb
popf
mov
fimuls
jmp
aaa
push
add
sub
or
dec
push
pop
mov
pop
inc
xchg
dec
xor
pop
jg
notb
fsubrl
cmpsb
mov
mov
cs
or
and
rcll
aad
enter
fstps
adc
jnp
and
movsb
mov
push
pop
inc
in
push
fidivrl
xor
mov
mov
pop
or
mov
jecxz
mov
sub
test
cmpsb
ljmp
dec
dec
push
clc
repz
insb
add
push
lods
mov
insb
pop
push
and
popf
es
mov
xor
jns
sub
sbb
leave
cld
mov
xor
int
popa
adc
jge
inc
loop
sbb
movsl
sub
add
jns
adc
pop
pop
push
mov
jl
adc
into
push
loope
addl
shll
push
and
subl
adc
push
pop
xor
push
mov
mov
in
jae
outsb
ret
outsl
or
mov
sarl
jl
nop
push
aad
lret
insl
push
xchg
fisubrs
jo
xlat
dec
mov
popa
pop
outsl
jmp
aaa
mov
jne
lea
push
or
jno
mov
rcll
jecxz
fcompl
cltd
enter
sahf
dec
or
pop
outsb
nop
mull
in
push
mov
pop
xor
repnz
test
xchg
aaa
call
xor
add
cmp
push
scas
and
loope
scas
mov
xor
imull
sbb
jp
sbb
cs
xor
div
inc
imul
popa
lods
roll
loopne
adc
mov
rcl
push
filds
into
mov
fists
testb
adc
lret
jl
sbb
and
cmp
mov
mov
xor
ljmp
lods
mov
xchg
cmpsl
cld
xor
jno
ljmp
repnz
mov
call
adc
dec
rcrb
icebp
adc
mov
mov
and
cmc
push
mov
ljmp
inc
cmp
inc
lods
adc
lahf
sub
jmp
popf
loop
lret
push
push
and
je
jns
sub
dec
or
jmp
adc
dec
sahf
negl
loope
int
inc
sahf
mov
sub
rcl
in
or
adc
daa
jge
jmp
jp
inc
shll
outsb
gs
pop
jge
push
out
into
hlt
in
into
dec
cld
loope
ret
pusha
and
cs
cmc
cmp
aam
cmp
jbe
fwait
nop
pop
adc
jae
pop
iret
xchg
add
push
or
sub
jmp
push
sbb
xchg
pop
jl
jle
mov
pushf
jmp
mov
push
in
mov
les
or
xor
popf
mov
out
movsl
cmp
add
xchg
push
ja
jbe
fiadds
or
add
hlt
and
pop
push
and
lcall
xchg
xor
sbb
add
or
or
dec
mov
xorb
pop
cmp
or
aas
decb
shrb
daa
and
std
in
cmp
dec
push
mov
mov
das
push
lahf
les
jb
and
mull
and
inc
faddl
or
stos
mov
movsb
shlb
pop
jnp
mov
mov
enter
xor
add
mov
inc
sbb
lret
shrl
mov
test
daa
cmp
jg
xchg
push
call
cwtl
mull
add
add
cmp
cli
sub
mov
aaa
adc
cmp
inc
std
sub
sub
lock
cmp
pushf
aaa
leave
pusha
push
and
adc
gs
add
cmp
push
lcall
and
aam
inc
add
adc
mov
divb
outsl
shll
pop
xchg
neg
and
in
rclb
push
out
adc
cmp
mov
imul
add
adc
jae
add
ror
fsts
popf
scas
lds
inc
fnstcw
xor
sbb
add
cs
bound
das
outsl
testl
mov
fs
frstor
and
sub
xor
aad
das
sbb
out
adc
sub
idivb
mov
mov
push
sub
and
stos
mov
cmc
sub
sub
cmc
imul
fcmove
mov
rcll
mov
gs
test
jl
out
repz
sbb
mov
cld
test
jmp
jne
inc
jno
ljmp
in
sbb
mov
mov
lahf
and
rcll
sbb
mov
sti
test
pop
mov
bound
dec
push
push
test
ss
xchg
loop
inc
leave
mov
js
mov
cmp
out
popf
js
sbb
cmc
outsl
inc
mov
repz
scas
inc
test
inc
repz
notl
push
sbb
mov
inc
fisttpl
outsb
jl
imul
and
scas
mov
ret
and
cmpsl
shlb
shlb
pusha
xor
mov
xor
cmp
push
clc
xor
frstor
sti
dec
lea
sti
jns
push
add
in
mov
int3
gs
push
mov
mov
rcll
and
rcll
mov
sub
xor
inc
shl
repz
aas
dec
vdivps
loopne
shll
push
subl
mov
jnp
ds
int
xor
mov
mov
xchg
mov
nop
popf
js
push
pop
leave
mov
mov
add
add
add
or
push
or
pop
cmp
jae
lret
xor
mov
or
jb
sbb
xor
fwait
stc
xchg
movsl
int
dec
mov
loope
hlt
sarb
pop
sbbl
popa
adcl
rcr
popf
mov
xchg
fdivrs
xchg
cmp
fwait
daa
lods
pop
lret
addb
push
xchg
xchg
push
add
enter
lds
frstor
inc
inc
push
pop
inc
lea
aam
or
sti
and
testl
pop
sbb
mov
mov
push
inc
sbb
fdivr
sub
mov
cmp
cmp
in
cmpsb
adc
repz
mov
push
jb
mov
jmp
add
sub
mov
pop
pop
test
mul
pop
bound
pop
sbb
mov
dec
jge
je
or
or
ljmp
adc
and
adc
repnz
or
mov
dec
inc
mov
imul
mov
mov
fidivrs
jno
xchg
xor
xchg
jne
out
aad
jbe
mov
decl
xor
xor
jbe
lret
imul
mov
jl
cmp
mov
aad
in
push
pop
std
pop
scas
inc
int3
cli
cmp
mov
fs
jmp
adc
or
leave
ja
adc
aaa
ja
sbb
mov
sub
cmp
mov
aaa
mov
sbb
das
mov
pop
mov
push
xor
pop
aaa
push
fiadds
dec
fistl
sub
or
cmp
sbb
xor
sub
mov
push
add
adc
jno
cmp
leave
lds
push
dec
insl
mov
add
and
xor
bound
mov
mov
push
cld
and
mov
fstpt
dec
pop
ja
push
lahf
sbb
stos
rorb
ret
jecxz
test
lds
push
pop
movsb
bound
notb
dec
or
fdiv
cmp
and
cmp
or
sub
stc
jge
loope
out
popa
ja
insb
mov
sub
sbb
stos
adc
push
xor
pop
mov
jl
sub
jle
gs
adc
sub
cmp
adc
push
bound
mov
dec
stos
push
lods
adc
shr
notl
sar
mov
and
out
aaa
cmp
dec
or
sub
in
std
xor
and
sbb
lds
ss
mov
adc
adc
mov
jns
bound
dec
cmpsb
push
mov
xchg
or
cmp
repnz
dec
sub
and
lcall
pop
stos
adc
pusha
clc
enter
flds
jecxz
sub
ds
in
cmp
outsl
mov
add
ljmp
call
xor
mov
add
pusha
or
shll
dec
ds
mov
mov
jne
hlt
lret
mov
push
fiaddl
mov
push
mov
xchg
dec
in
mov
or
stos
in
cmp
outsb
fmul
insb
or
pop
add
pop
mov
ret
ds
xlat
daa
inc
cwtl
fisttpl
adc
bound
popf
jbe
out
mov
hlt
pop
cmp
out
cli
push
sahf
les
loope
add
mov
adc
mov
adc
flds
pop
xchg
imulb
into
pop
xor
xchg
add
add
dec
dec
inc
loope
es
in
les
dec
jns
and
cmp
aam
cmp
inc
cpuid
ja
mov
push
inc
ljmp
icebp
jb
ret
mov
fistps
outsl
int
push
jmp
dec
mov
addr16
ret
popa
test
inc
ljmp
xchg
jns
repnz
les
or
jo
sub
xchg
in
xor
lss
inc
xor
fcomi
cmpsl
cmp
rcl
in
jp
inc
sub
push
aam
cmp
jb
fcoms
movsl
jno
xlat
xor
jbe
dec
out
xor
test
mov
pop
rol
adc
mov
dec
mov
popf
ret
sbbb
dec
ds
sbb
lods
sar
dec
rcll
sub
mov
jmp
mov
jp
sub
fildll
test
jge
push
push
scas
cmp
add
mov
push
xorl
add
jns
adc
inc
push
inc
cmpl
add
push
cmp
out
push
shlb
add
call
sbb
pop
xor
fildll
push
aaa
pushl
mov
ja
pop
cmpb
ds
lret
sub
imul
inc
add
or
sub
fstps
mov
ds
push
das
cwtl
sahf
mov
mov
pop
hlt
jnp
adc
and
xor
pop
sub
push
dec
lcall
ds
push
add
jo
into
mov
add
jecxz
std
mov
or
pop
sub
xor
mov
xchg
push
in
and
mov
push
negb
test
insl
insl
cli
and
xchg
fisttpll
cld
dec
and
clc
push
in
sbb
cli
push
push
daa
in
sbb
push
repz
jne
ss
push
push
sbb
or
arpl
scas
and
or
sbbl
xchg
out
inc
pop
xchg
sbb
and
rcr
cwtl
jecxz
pop
insb
jo
pop
cltd
cmp
pop
push
faddl
sbbl
into
cli
sbb
add
inc
pop
pop
cwtl
rorb
bound
inc
js
leave
and
mov
xor
aaa
inc
sbb
lea
and
pop
sti
jbe
or
rcrb
or
jbe
push
clc
icebp
divl
outsw
dec
pusha
sti
cmpsb
shll
dec
xor
add
mov
cmp
popa
xor
inc
int3
pop
jg
pusha
ror
daa
sbb
or
pop
xchg
add
fisubrl
das
mov
sub
fidivs
or
inc
mov
testl
and
mov
js
ja
mov
dec
clc
mov
jo
out
mov
push
sbb
push
inc
es
clc
ret
pop
jp
fmul
lock
xor
fmuls
lods
push
negb
mov
int3
jl
aad
aaa
imul
cmp
mov
pop
int3
insl
je
mov
or
lret
or
stos
or
push
mov
fwait
sbb
enter
push
or
push
jo
test
in
das
out
jb
clc
mull
jmp
gs
sbb
ss
out
add
stc
sbb
call
in
cmp
negl
test
cli
mov
aam
into
insl
xor
ffree
imul
int3
xchg
xor
lret
add
push
xor
push
dec
in
imul
jne
jmp
mov
loope
xlat
jmp
dec
test
pop
cmp
mov
mov
fmull
neg
cmc
daa
cmpxchg
adc
out
xchg
arpl
rcr
mov
lods
popa
inc
loope
sub
jmp
jo
or
cmp
stos
insl
adc
adc
inc
xor
popf
cmc
jg
push
lea
lahf
sbb
push
aad
jmp
adc
cs
push
pop
inc
lods
pushf
or
shl
fisttpll
ret
mov
out
sub
mov
sub
int3
shlb
cwtl
push
cmp
lock
out
fistpll
mov
and
push
cld
es
pop
xchg
in
lea
pop
test
pusha
xor
inc
xor
mov
cmp
jl
push
shl
xor
cltd
fldenv
and
int3
push
mov
dec
stc
mov
fimuls
leave
lods
pop
pop
pop
out
push
mov
nop
rorb
jo
cmp
das
push
loope
cmp
test
xchg
xchg
xor
push
cld
cmpsb
jmp
dec
arpl
jo
rclb
push
testl
or
pop
sub
lods
popa
in
mov
ja
int
push
lds
lods
dec
xchg
pusha
xchg
xchg
mov
imul
ja
in
push
cmp
test
pop
ljmp
xor
mov
cmp
inc
sub
mov
sub
xchg
push
outsb
aaa
flds
lods
cltd
cltd
mov
cmp
idivl
sub
jmp
es
inc
mov
and
arpl
and
sbb
xchg
cmp
outsl
in
mov
out
fsubrl
xor
xorl
bound
mov
jb
stos
iret
and
jo
xor
push
in
jnp
ret
loop
mov
clc
xchg
test
dec
push
jg
roll
sbb
stos
nop
int
xor
pop
mov
fadd
je
adc
pusha
sub
jbe
out
mov
mov
or
jecxz
adc
leave
ljmp
ret
popa
mov
loope
lcall
stos
fwait
hlt
es
int3
mov
arpl
inc
push
cmpsb
clc
and
outsb
out
cli
outsl
aas
das
mov
int
lahf
sub
sub
pop
icebp
neg
pushf
mov
insl
add
ja
sbb
and
jle
jnp
jl
dec
mov
pop
and
std
movsb
pushf
in
scas
sub
mov
xor
loopne
mov
or
xor
stos
or
test
syscall
push
lods
fstpl
mov
add
fildl
fwait
jmp
iret
dec
xlat
js
aaa
pop
mov
mov
enter
les
aaa
push
stos
jle
and
pop
sbb
in
cmpsw
ja
mov
mov
je
lods
add
cmc
mov
fdivrp
lock
mov
lcall
addl
inc
sbb
mov
stc
or
xor
fwait
js
mov
in
xchg
sbb
leave
cmp
rcl
call
std
ja
add
cmp
lods
mov
pop
xchg
jge
mov
dec
or
push
jle
add
negl
clc
cmp
add
loop
ljmp
std
nop
aam
xchg
sahf
rclb
jle
pop
or
test
sar
scas
pop
mov
scas
sbb
jae
les
fcos
sub
mov
jns
leave
fnstenv
cmp
out
and
bound
inc
fcoml
test
icebp
cmpsl
xor
fld
out
in
or
in
mov
or
ja
in
jne
add
fsubr
and
lds
out
arpl
add
popf
jns
int
fs
push
jns
sbb
mull
cmp
adc
cli
dec
psrlw
cmp
cld
mov
push
decb
shrb
iret
rolb
xor
xor
loope
mov
ret
fdiv
cmc
das
mov
popa
fidivl
add
or
aam
insb
in
daa
adc
adc
adc
and
or
cmp
cmp
cmp
or
fisubs
or
and
lcall
jae
mov
out
divl
mov
and
inc
mov
repz
fs
mov
leave
xor
push
test
inc
xor
popa
stos
test
ret
jbe
sub
dec
scas
les
popa
jo
xchg
adcb
jmp
lcall
mov
mov
sub
push
xchg
rorl
adc
into
inc
lods
and
bnd
xlat
ds
fwait
mov
addr16
or
sbb
les
push
shr
sub
test
pop
mov
sub
sbb
xchg
xor
pushf
packuswb
push
and
push
lea
jle
loope
add
movsb
rol
jb
dec
xor
sbb
jb,pn
rcrb
and
jns
gs
pop
daa
test
mov
test
jg
add
fists
add
or
fsincos
mov
dec
pop
pushf
aad
inc
cmp
test
add
in
cmp
fs
out
mov
call
inc
ret
cmp
ret
adc
dec
ljmp
adc
addr16
notl
adc
pop
xor
jno
adc
xchg
and
ja
les
and
js
mov
cmp
ret
in
stos
iret
into
addr16
sbb
jp
adc
cmp
and
jbe
lds
stos
jp
sbb
loope
in
ds
xor
or
pop
xor
out
inc
adc
inc
cmp
mov
mov
fldpi
adc
jnp
insl
sub
test
bound
out
pop
mov
and
mov
mov
sub
jne
sub
jnp
cmpsb
rcrl
jbe
stos
jmp
cwtl
fidivrs
xchg
and
push
enter
out
mov
mov
lret
dec
adc
push
sbb
mov
shll
popf
shll
xchg
aas
lret
sub
nop
mov
mov
xor
sub
adc
mov
jne
rcll
jnp
div
and
loop
repz
testl
pop
in
or
aad
push
xor
fsubp
in
les
add
popf
in
adc
inc
push
dec
in
xchg
test
int
sub
mov
ljmp
leave
adc
xor
imul
mov
adc
or
pop
mov
jp
jae
std
inc
or
cmp
sbbb
repz
jns
or
and
loope
movsl
fucomip
repnz
enter
clc
cmpsl
and
cmpsl
and
or
mov
int
sbb
jo
stc
aas
sub
add
inc
je
fidivs
jns
je
stos
aaa
jnp
mov
imul
xor
mov
iret
test
add
into
cwtl
or
jae
add
xor
inc
mov
and
pop
pop
fidivs
scas
inc
insl
ficoml
rolb
arpl
pop
rcl
popa
pop
cmc
test
int3
stos
repnz
inc
out
lds
or
pop
cmp
test
ja
cld
push
mov
in
inc
xchg
cs
std
sbb
jg
ror
mov
ret
sbb
cmp
sbb
push
mov
inc
in
jecxz
jnp
ljmp
sbb
les
in
adc
and
pushf
insl
daa
adc
xlat
and
aam
add
sub
sub
or
dec
sbb
push
rcrb
mov
repz
or
and
pop
popf
xlat
add
test
fsubrp
sbb
xlat
or
aam
test
adc
cmpsl
jb
out
arpl
fldenv
stc
outsl
and
jmp
out
popa
jae
xor
adc
or
outsl
or
movsb
sub
cmp
shlb
int
add
insb
movsl
add
pop
adc
in
loopne
ljmp
test
ss
das
gs
pop
fdiv
das
jb
or
mov
cld
mov
mov
add
pop
dec
sub
jl
add
inc
add
test
inc
lahf
test
aaa
xor
fsubrs
lcall
pop
cld
sti
push
jbe
and
pop
fstpl
and
sbb
aaa
test
add
cmp
xlat
mulb
jb
rcl
xchg
daa
cmp
fwait
jle
or
mov
mov
comiss
clc
pop
jnp
mov
and
xchg
repnz
pop
inc
cmp
sub
jecxz
clc
pop
xor
loop
int
adc
lcall
mov
add
jle
popf
mov
sbb
imul
fldcw
or
shll
inc
push
mov
mov
xchg
stos
xchg
fs
fimull
sub
ja
pop
jmp
mov
jnp
outsb
xchg
popa
int
push
or
daa
pop
sub
sub
pop
cmp
aas
mov
xor
add
fistpll
cmp
add
and
cmp
mov
aad
lea
cvtps2pi
ds
adc
push
inc
pop
lods
jne
and
lcall
cmp
stos
leave
pusha
out
jp
mov
mov
mov
jmp
es
in
fsubrs
xchg
daa
xchg
adc
mov
and
in
push
jg
push
push
add
cltd
enter
loopne
and
sub
and
push
mov
push
jb
add
mov
sub
adc
test
pop
dec
or
dec
test
fnsave
mov
mov
push
mov
xor
nopl
pusha
xor
or
xlat
dec
in
and
pop
cmpsl
dec
dec
aad
popf
and
out
jns
stc
mov
sbb
mov
push
or
xlat
push
push
dec
test
lods
mov
in
and
popf
addr16
aam
add
inc
dec
fisubrl
dec
jnp
negl
rcrl
xchg
sub
add
rorb
sahf
pop
insb
mov
cmc
das
das
sbb
daa
testb
repnz
pop
mov
pushf
sbb
sub
loop
clc
rcrl
inc
or
in
xor
lret
jge
out
ud0
push
pop
frstor
cwtl
cmpsl
in
mov
xchg
jbe
mov
and
jmp
fistl
lret
jne
call
mov
outsb
test
into
mov
dec
orl
ret
fisubl
test
mov
mov
fwait
aam
pop
or
pushf
dec
jo
inc
mov
insb
cmp
xchg
jns
cmp
in
dec
aad
and
test
data16
les
sti
pop
ret
clc
in
pop
imul
jle
outsl
or
pop
hlt
push
bound
inc
aam
jge
mov
mov
stos
nop
shrb
sbb
cmpl
arpl
div
into
pop
pop
mov
icebp
dec
and
nop
out
lock
bound
xor
cltd
lret
das
mov
mov
dec
push
lahf
in
je
std
push
pop
jecxz
aam
dec
bts
arpl
lds
mov
popf
popf
adc
rcl
sbb
xor
xchg
cld
pop
mov
cmp
mov
aas
ss
ljmp
enter
int
stos
or
pop
arpl
cwtl
ret
cmp
jecxz
xchg
imul
pop
xchg
cmp
mov
sub
jae
or
sti
lods
dec
adc
mov
mov
insl
sbb
int
sub
loopne
aad
mov
push
add
lret
mov
ficomps
addb
sbb
pop
fwait
jl
and
clc
dec
jl
mov
ret
mov
dec
adc
scas
js
int
mov
jl
lcall
lea
pop
stos
into
pop
cld
repnz
fstpt
sub
add
sbb
aaa
loopne
je
loop
das
hlt
dec
xchg
stos
adc
loope
call
jp
dec
out
les
mov
cmp
les
popa
pop
pop
fucom
imul
jb
xchg
mov
jno
cmpsl
mov
js
test
mov
negb
and
je
les
inc
and
xchg
fnsave
test
stos
repz
mov
mov
scas
cmp
mov
lds
jns
fisttpll
push
xor
sbb
addr16
push
fucomp
add
test
sahf
scas
dec
fnstcw
xor
pusha
test
insb
sti
mov
push
inc
cmp
mov
imul
xor
scas
add
popf
push
mulb
lds
mov
cli
adc
jl
das
lock
mov
andb
insb
pushf
mov
push
pusha
cmp
call
cs
call
xchg
push
or
jae
sbb
lods
fdivp
out
popa
aad
jle
das
enter
rclb
std
and
cmp
sub
dec
sub
fmuls
cmp
outsb
jne
scas
push
add
xlat
imulb
lods
ja
pushf
adc
mov
sbb
lret
jns
pusha
cmc
sbb
push
inc
inc
shll
push
leave
enter
lahf
and
xchg
cmp
mov
loopne
inc
cmp
jp
jge
push
std
aam
movsb
and
js
ret
fdivl
pop
push
scas
add
icebp
xor
push
xchg
jns
insb
dec
dec
mov
repnz
xchg
pop
arpl
and
lahf
pop
mov
push
inc
loop
mov
popf
lock
cmp
lock
mov
sarb
loope
in
inc
jecxz
lods
movsb
mov
jecxz
push
outsl
test
mov
xchg
mov
repnz
movsb
cwtl
push
xlat
xor
mov
dec
dec
jbe
or
inc
push
stos
int
pop
ds
sbb
push
pop
sarl
das
outsb
inc
push
cli
inc
adc
xor
hlt
imul
mov
pushf
jge
repnz
mov
mov
das
dec
iret
mov
xchg
cmp
es
push
adc
cli
out
xchg
jno
sub
cmp
push
aam
fsubp
add
test
mov
out
pop
imul
fs
and
outsl
xchg
inc
add
test
add
adc
push
push
push
add
sub
xchg
out
lret
add
cmc
gs
in
cmc
cmp
fcmovne
mov
ror
inc
faddp
cmp
test
ja
js
sbb
jno
aas
loop
loop
test
loop
lock
rolb
test
inc
sub
sub
push
ja
add
push
mov
pop
lds
int
xchg
pop
or
adc
btc
sbb
fistps
mov
cmpsl
pop
aam
insb
mov
jl
add
xor
subl
pusha
inc
xlat
div
mov
dec
insl
out
adc
test
mov
popf
jmp
mov
test
xor
xor
mov
sub
xor
idivb
stos
adc
inc
push
or
add
push
sbb
adc
dec
andl
iret
jns
clc
es
jmp
subb
lock
xchg
test
adc
and
into
pop
dec
push
imul
sub
mov
adc
jle
repnz
cmpsb
pushf
or
or
mov
inc
insl
mov
adc
dec
js
sarl
cltd
sub
bswap
sbb
fcompl
outsb
repnz
push
stc
jl
sbb
cmp
sbb
push
sbb
ret
mov
mov
xchg
or
inc
or
sub
ret
mov
or
add
jae
jmp
fidivrs
jb
jecxz
not
add
int
idivl
in
jne
and
add
arpl
cltd
mov
out
sub
decb
adc
js
sysenter
shll
data16
loopne
mov
add
lds
cmpl
test
cmpsb
add
cld
hlt
arpl
sbb
pop
rcrb
loopne
clc
jns
inc
inc
xor
lods
add
jbe
lret
insb
repnz
jne
push
cwtl
cwtl
in
cmc
lahf
cmp
gs
or
jae
and
ret
mov
cmc
pop
add
push
fwait
sub
add
cld
mov
xor
in
outsl
xor
test
insl
and
dec
mov
mov
pop
testb
scas
sub
cmp
jmp
xor
xchg
std
push
popa
aad
adc
push
gs
arpl
cmp
rcr
push
fs
test
in
cmp
mov
push
repnz
push
push
push
cli
sub
xor
pushf
mov
mov
nop
stc
sub
adc
aas
mov
std
xor
jl
test
rcl
xor
stos
jae
adc
std
inc
xor
or
insl
inc
out
inc
lock
cmp
jmp
mov
leave
nop
scas
mov
int
aas
push
and
push
sbb
pop
arpl
cltd
movsb
or
clc
aad
inc
jge
cmp
enter
sbb
sub
xor
push
mov
shll
xlat
jne
int
pop
repz
mov
cmpsb
outsb
movsl
fwait
outsb
or
stc
inc
pusha
push
int3
cmp
mov
in
jl
in
shll
adc
ficoml
mov
pop
mov
nop
push
dec
orb
mov
ss
xor
fidivs
filds
test
test
mov
mov
cmp
movsb
mov
xchg
add
stos
mov
adc
push
push
inc
sub
lahf
sahf
loopne
out
cmp
ret
loop
mov
xor
testb
call
lods
mov
mov
sub
scas
sbb
jecxz
pop
mov
add
mov
xor
stos
mov
sbb
sub
mov
leave
shrb
ret
or
test
jns
ret
push
pop
or
data16
mov
bound
stos
xor
dec
xchg
fstps
scas
mov
add
icebp
xchg
lock
jnp
gs
repz
mov
dec
mov
inc
mov
dec
jecxz
icebp
add
inc
lret
pop
aad
sbb
stc
jo
and
dec
adc
aad
mov
cmp
jb
pop
in
cs
loop
jns
mov
dec
jp
incb
jbe
out
lock
sbb
mov
inc
or
imull
cvtdq2ps
into
and
mov
xor
pop
and
popa
popf
jge
mov
mov
gs
sti
push
add
jae
bound
adc
mov
fscale
sub
add
jb
in
fisubrs
lret
aad
push
push
lock
dec
mov
jns
pop
xor
repz
scas
mov
movsl
lret
scas
adc
mov
jmp
jp
inc
fidivrs
add
mov
cld
icebp
jmp
aam
outsl
and
cmp
lcall
rol
mov
pop
repz
inc
push
lahf
cmpsb
scas
sub
jb
outsb
xor
pop
jle
lock
pushf
jne
sub
mov
int
mov
setle
push
hlt
sbb
mov
push
xchg
and
push
rclb
orl
mov
and
das
cmpsb
inc
mov
pop
lea
mov
add
and
nop
dec
aam
mov
movsl
xlat
xchg
and
out
das
or
push
lcall
add
in
ljmp
push
inc
arpl
cmpl
iret
inc
rcll
sbb
mov
lret
mov
xor
jmp
inc
lcall
in
clc
sub
popa
inc
xorl
mov
fcmovnu
daa
je
mov
add
out
daa
subl
in
push
pop
dec
mov
pop
int3
pop
mov
out
cltd
pusha
and
adc
pushf
scas
stos
cs
push
ljmp
mov
sbbb
push
jae
push
in
mov
lcall
shl
lea
or
fwait
daa
add
push
jo
shlb
xchg
dec
pushf
mov
ds
jno
jno
popf
xchg
push
push
xorb
movsb
inc
cmpl
fisttpll
add
and
sbb
adc
aad
inc
push
shl
add
not
or
bound
fmuls
gs
inc
dec
testb
lea
jl
mov
add
push
pop
cmc
jns
mov
sahf
test
inc
aad
popf
mov
jge
or
into
aam
lock
dec
inc
cmp
pop
outsl
scas
clc
ret
cmp
roll
jno
cmp
clc
stos
adc
imul
lcall
pusha
push
dec
scas
mov
jle
push
mulb
or
mov
dec
pusha
das
fcoms
iret
fimull
dec
call
sbb
xchg
cwtl
std
cmp
fistl
mov
cmp
ds
jle
lret
and
cld
out
dec
cmp
fldenv
jle
inc
or
std
mov
push
jns
hlt
cli
test
jb
cmc
pushf
adc
cmp
mov
movsl
mov
mov
xchg
cmp
inc
ja
mov
test
test
jne
scas
fsubr
cmp
and
push
cld
testb
popa
cld
pop
sub
fiaddl
aaa
adc
fsubrs
jmp
adc
out
pushl
mov
in
sarb
sub
jle
xor
in
cli
scas
call
bound
add
cmpsb
pop
inc
inc
ficompl
pop
push
mov
clc
out
lret
jbe
icebp
ds
sub
pop
inc
test
dec
push
dec
mov
outsb
into
xor
or
push
orl
mov
lret
sbb
mov
popf
fimull
push
mov
mov
xor
add
push
jl
out
inc
pop
xor
je
lret
fsubs
loope
inc
lods
mov
das
xchg
jecxz
je
push
jo
stos
or
add
xchg
push
or
popl
fs
mov
jle
cmpsb
xchg
popa
push
push
mov
lods
fcmovnb
inc
dec
and
push
rcrb
cmp
mov
imul
addb
xchg
stos
pop
xorb
fsubrs
lds
fidivrs
shl
xor
inc
pop
mov
dec
push
cmc
push
scas
jno
dec
xchg
cmpsb
sub
fimuls
sbb
shll
sti
imul
daa
jo
or
insb
mov
repz
div
inc
jmp
ds
imull
mov
mov
out
iret
push
jo
sub
jns
rol
add
push
stos
test
iret
out
and
sub
cltd
jg
out
js
xlat
pop
les
scas
sti
push
test
jnp
ds
cmpsl
and
lds
pop
addr16
xchg
sub
insl
sub
test
fs
or
add
mov
dec
sub
xchg
ss
mov
ret
stos
mov
cmp
cmp
mov
pop
adc
int3
inc
bound
mov
adc
js
fcoml
and
sub
ja
les
mov
push
decl
aam
dec
push
jmp
xor
lret
inc
pop
jle
or
or
sbb
lods
xor
cmc
and
sub
xor
sahf
pop
or
mov
in
or
lret
or
pop
lock
in
push
sub
add
cli
xor
mov
xchg
ja
repnz
mov
ffreep
loopne
lret
push
lods
sbb
cmp
cmp
add
mov
jecxz
imul
mov
pop
mov
mov
fidivs
fldenv
rclb
and
mov
adc
es
fcompl
push
lret
rorb
shl
out
inc
inc
push
ret
jns
gs
popa
popa
das
inc
filds
sbb
fsubs
jmp
jae
dec
loop
in
cmp
adc
inc
int3
mov
rcr
sahf
xchg
jb
pop
or
stos
xchg
sbb
test
add
ret
call
add
adc
test
scas
and
aas
dec
mov
jns
adc
jns
add
cmp
pushf
xchg
sbb
and
sub
add
jl
mov
sub
pop
loopne
add
cmc
xchg
imul
mov
div
mov
les
sti
pop
incb
out
xor
sti
out
mov
pop
xchg
loop
or
jb
rcl
pop
dec
fwait
ss
adc
scas
or
pop
fisttpl
scas
push
movsb
sbb
dec
or
movsb
inc
adcl
lret
popf
push
adc
push
and
cwtl
mov
lods
scas
push
stos
aam
xor
pop
mov
sahf
jno
xchg
lods
push
stos
cmp
push
xchg
incb
mov
es
mov
sbb
scas
xchg
out
jp
lods
call
dec
jb
lds
mov
mov
test
jmp
mov
scas
inc
and
popf
xchg
mov
and
push
xchg
xor
int
mov
push
mov
sbb
dec
ja
push
adc
mov
cmp
stos
mov
mov
mov
inc
in
enter
lds
xchg
imull
sbb
mov
in
cmp
inc
sahf
and
loope
loope
clc
pop
adc
xorb
push
sbb
push
jecxz,pn
or
and
mov
fwait
out
in
pop
add
loop
adc
cmp
loope
jg
adc
hlt
cmp
mov
mov
add
das
int
sub
jns
pop
xor
out
mov
fld
sub
loopne
cli
mov
inc
sub
xor
adc
cmp
xchg
aas
fxch
or
lahf
pop
out
lret
andb
cmp
cli
sub
fiaddl
xchg
les
or
mov
or
sbb
cmp
cmp
xor
jecxz
testb
mov
movb
dec
mov
rcr
and
xchg
mov
xchg
leave
pop
jbe
adc
add
xchg
add
mov
mov
push
and
shlb
and
movsl
mov
dec
cmp
pop
pusha
into
jg
add
push
cmp
jmp
pop
adc
fisttps
mov
lahf
out
hlt
push
xchg
pop
push
subb
sub
div
sbb
notb
rorb
pop
jbe
inc
in
dec
mov
sub
dec
mov
xchg
ret
mov
aam
mov
xor
scas
inc
fstps
daa
add
outsl
icebp
mov
jnp
dec
fsts
out
and
fistps
outsl
push
jne
cmc
fiadds
bound
ret
mov
dec
fcoml
neg
rorl
ss
jnp
lods
xor
mov
clc
cmp
test
pop
xor
jno
fsubrs
mov
js
ror
into
xchg
fdivp
mov
test
xlat
sbb
gs
loop
pop
jecxz
rorl
scas
add
stos
pop
jae
fstpt
mov
mov
mov
cmpsl
push
sti
push
movsl
push
clc
int3
jo
in
mov
sub
or
cli
pop
testl
and
xchg
push
loop
mov
out
fdivs
cs
shll
cmc
mov
sarb
dec
ljmp
and
dec
mov
inc
cli
jmp
add
imul
enter
scas
xor
mov
or
jg
fildl
dec
test
imul
rep
mov
sbb
icebp
dec
mov
sbb
or
inc
xor
decl
ret
loopne
movsl
imull
stc
ds
movsl
inc
imul
or
sbb
rolb
clc
pushf
dec
mov
xor
jbe
incl
xor
push
js
nop
cmpsl
cmp
testb
jge
inc
ljmp
push
rorb
or
addr16
cmp
jmp
add
or
cmp
loopne
xchg
test
js
xor
jb
cwtl
sbb
xchg
add
repnz
outsb
dec
dec
mov
clc
cmc
sbbl
sub
test
dec
xor
xlat
sbb
sti
sbb
aas
fwait
xchg
ja
aad
xor
push
xor
inc
mov
cmpsl
inc
fwait
or
lds
ficoml
cmp
std
in
fsts
xchg
loopne
jge
xor
sbb
push
jp
aam
xor
or
faddl
fs
movb
and
mov
loop
xchg
xor
ficomps
shlb
adc
les
mov
movsl
mov
mov
jne
mov
pushl
adc
mov
insb
mov
cmp
xchg
leave
mov
xchg
or
frstor
and
test
sub
cltd
movsb
push
dec
mov
and
add
and
sub
scas
or
add
mov
shl
mov
loop
leave
adc
fbstp
popa
xchg
mov
je
cmp
add
cmpl
fisubs
leave
xchg
cmp
fldl
push
push
push
inc
push
in
ret
cmpsl
mulb
xlat
mov
outsb
pop
loope
in
ljmp
mov
sarb
xchg
cmp
xor
adc
jne
imul
inc
inc
add
fistl
or
out
test
mov
push
mov
inc
mov
dec
in
stos
mov
pop
shrb
mov
fnstcw
daa
xorb
jecxz
jns
adc
lea
push
out
xlat
sub
ret
mov
int3
adc
inc
add
dec
ljmp
push
dec
sub
cmp
aad
pushf
test
sbb
push
or
das
div
jp
test
lcall
jle
idivl
movsl
std
add
push
sub
clc
bound
lods
ja
fldl
dec
xchg
scas
out
repnz
repz
aaa
ljmp
fisttps
ljmp
loop
lods
notl
mov
imul
mov
and
in
add
xchg
mov
push
jnp
mov
push
in
push
fs
dec
mov
mov
subb
loope
xor
jns
stos
insb
and
mov
inc
gs
jmp
dec
pop
andl
mov
adc
or
add
adc
cs
pusha
jmp
in
xlat
insl
sub
sbbb
sti
add
jge
scas
xor
cmc
or
iret
aas
lahf
xchg
jecxz
and
test
sbb
das
xor
pop
xchg
add
cwtl
test
sub
aad
pop
push
jl
push
in
and
test
js
fstps
daa
fwait
scas
aad
imull
lret
sbb
jno
jb
xchg
mov
test
dec
xlat
cmp
or
pop
mov
js
ds
xchg
das
lea
xor
mov
push
lods
cmp
xchg
add
imul
or
sbb
rolb
fildl
and
add
ds
push
inc
fldl
jns
pop
fs
and
test
call
in
loop
mov
inc
sarl
not
js
sbb
rclb
repz
sbb
test
out
jmp
adc
scas
jl
ficoml
adc
loope
lahf
mov
cltd
push
mov
in
jo
punpcklwd
sbb
sub
sub
jb
in
arpl
shl
dec
sbb
lret
movsb
push
add
adc
xlat
push
inc
sbbb
sti
cmp
icebp
push
iret
psrad
in
icebp
in
gs
shll
loope
mov
stos
xor
cmc
xlat
mov
insb
loop
inc
ret
std
or
mov
xor
sbb
cmpsb
push
xchg
and
xchg
sahf
or
mov
hlt
add
dec
ss
lcall
imulb
cs
ficoml
lock
cmp
sub
call
cmp
das
aas
mov
mov
aad
sbbb
pop
sbb
sbb
outsb
jecxz
out
push
addr16
xchg
sub
iret
add
lahf
cmpl
imul
fists
jns
fwait
sahf
repz
cmp
fildl
xor
out
mov
lds
pusha
popf
int3
jle
push
mov
and
scas
mov
jns
mov
mov
cmp
ss
ret
mull
inc
xor
shrb
iret
insl
push
jo
iret
inc
pop
scas
imul
cwtl
push
paddsw
sub
fistpll
xchg
iret
fstl
std
sbb
inc
idiv
cmp
push
or
mov
and
imul
pop
add
cmp
mov
add
sbb
mov
jae
cmp
pop
icebp
or
jg
xchg
fisubl
movsb
jo
mov
xor
mov
jp
xor
dec
les
xor
mov
mov
sub
xchg
pop
adc
or
mov
cli
ret
mov
xor
or
aas
arpl
cmp
mov
sbb
push
inc
rcr
xchg
or
fldenv
push
lods
jl
arpl
addr16
add
scas
or
fs
mov
cbtw
mov
out
or
je
sub
int
jb
add
sbb
or
out
out
adc
mov
cld
stos
loopne
loope
push
cltd
or
adc
xlat
scas
mov
aas
stos
cmpsl
mov
add
lods
mov
sbb
fiadds
aam
pop
and
inc
into
gs
jbe
loope
repnz
or
aad
cmc
sbb
inc
out
inc
mov
adc
fwait
les
jb
mov
loope
jmp
or
push
cmp
or
cld
or
and
pop
jg
jg
mov
movsl
aam
idivb
or
mov
out
and
mov
es
add
fdivl
and
popf
or
sar
mov
mov
push
jnp
push
hlt
loop
pushf
mov
scas
popf
aam
add
or
int3
mov
addr16
es
xchg
adc
enter
inc
sbb
ficoml
lahf
inc
dec
frstor
sub
push
out
test
cmp
jo
iret
dec
nop
stos
shll
push
std
loopne
test
enter
fmull
rol
add
rcrb
cmp
pushf
push
jb
jp
jnp
or
xchg
pop
sysret
stos
mov
jo
adc
add
ljmp
cvtdq2ps
push
xor
push
inc
mov
xlat
fdivrl
out
call
sahf
xor
pushl
xlat
lods
pop
int3
pop
jns
xchg
xor
xchg
nop
ficoms
xchg
jbe
add
push
dec
or
push
popa
negl
adc
mov
xchg
pop
cwtl
cld
xor
jmp
je
aad
mov
xorb
rolb
div
enter
pop
dec
cmp
lods
mov
sub
notl
mov
negl
ljmp
insb
mov
adc
test
das
push
mov
dec
mov
jmp
mov
ljmp
mov
add
sbb
adc
xor
mov
push
jno
cmp
ljmp
bound
add
mov
aad
adc
scas
popl
loopne
adc
enter
mov
mov
clc
xor
scas
and
sub
pop
sarl
lods
scas
mov
iret
pusha
or
dec
pop
inc
push
inc
stos
xchg
lret
sbb
xor
leave
sub
jg,pt
or
mov
imul
mov
js
mov
inc
mov
cmpl
stos
xchg
sub
adc
pop
repnz
jno
mov
int
add
xchg
cs
jmp
add
adcl
loop
cwtl
cmp
push
test
sub
popa
ficompl
lret
mov
pop
push
enter
mov
xchg
stos
loope
inc
cwtl
inc
aad
int3
xchg
mov
xor
dec
push
push
adc
pushf
into
xor
jo
mov
push
outsb
dec
orb
xor
xor
dec
in
add
jle
mov
pop
jno
dec
aam
mov
jbe
or
jb
and
push
imul
xchg
aad
sbb
mov
fwait
add
fwait
xor
sbb
stc
mov
or
adc
lret
testb
dec
data16
rorb
mov
jp
int3
out
into
add
mov
clc
push
rorl
push
ljmp
ret
xor
cld
xchg
cmp
pop
mov
xor
outsb
sbb
and
cmp
pop
imul
cwtl
popa
inc
int
inc
test
jmp
push
fisubs
xor
out
xor
sub
inc
not
lea
aad
bound
dec
pxor
nop
fadds
and
imul
push
mov
xorb
push
lds
enter
imul
rcll
addr16
jns
cli
rorb
add
fiadds
mov
xchg
cmpsl
jbe
xor
stc
out
or
notb
jge
gs
xor
ds
clc
rorl
call
mov
fcomip
mov
loope
scas
aas
xor
sbb
faddp
test
lea
jno
push
cmp
sbb
cmp
aas
or
cs
rcll
cmpsb
cmp
fbstp
movsl
push
or
stos
loope
sub
add
fiaddl
xchg
add
mov
and
sub
int
xor
dec
or
adc
adc
xlat
xchg
mov
int3
xor
xor
stos
fistl
adc
jb
add
pop
cmpsb
imul
orl
cwtl
fwait
pop
mov
movsb
jge
les
sbb
sbb
xchg
jns
cmp
and
mov
push
aam
push
xchg
xchg
xor
ror
lods
fcomi
jmp
or
mov
out
cmp
sbb
mov
mov
insb
jecxz
nop
movl
jae
jno
or
pop
testb
cmp
dec
jns
sbb
int
lcall
cmp
jb
das
lahf
in
inc
mov
jae
pop
and
pop
fwait
push
iret
xchg
and
add
popa
sbb
pop
jb
scas
inc
sub
add
jns
xchg
iret
hlt
in
xor
ret
cmpsl
lahf
out
push
sbb
mov
jge
inc
scas
cmp
sbbb
es
add
mov
arpl
lcall
cmp
repz
popa
hlt
leave
dec
cmp
inc
cld
enter
mov
dec
mov
shrl
adc
mov
lret
add
sbb
sahf
das
mov
lsl
in
arpl
xlat
sbb
xor
out
iret
mov
dec
cmc
push
mov
pusha
orb
mov
out
rcl
mulb
cmp
dec
addr16
pop
mov
in
shll
sub
aas
adc
pop
mov
xor
lret
outsl
iret
shll
in
scas
adc
mov
daa
outsl
mov
scas
jg
dec
xor
dec
mov
mov
repnz
sti
daa
sbb
cmpb
data16
xchg
cmp
mov
fldcw
cmp
pop
popf
push
mov
movsb
add
cmc
xchg
es
cli
xchg
pusha
out
aad
sub
or
mov
push
sub
ret
in
adc
fcomip
stos
jg
nop
xor
jle
inc
jnp
ret
lcall
jl
pushf
aas
xor
jp
inc
into
lret
add
mov
pop
popa
adc
xchg
inc
loope
js
mov
test
or
mov
sbb
mov
ja
iret
sbb
sbb
add
ret
jne
sbb
adc
ja
les
cmp
mov
push
lds
fisubs
movsl
and
jb
lahf
adc
scas
jle
inc
xlat
and
shll
sbb
mov
mov
lea
and
mul
inc
add
jnp
push
xchg
inc
xchg
inc
xchg
in
sbb
xor
loop
sbb
xchg
jge
cmp
sahf
out
in
push
int3
push
jl
mov
stos
fldln2
mov
pop
add
ffreep
ret
into
out
cs
or
xor
test
arpl
mov
push
ja
xor
mov
enter
jecxz
inc
push
mov
add
push
pop
cltd
repnz
lds
fbstp
dec
repz
in
and
adc
pop
aaa
icebp
outsb
jp
js
pushf
mov
mov
xchg
push
push
dec
ja
pop
add
dec
push
mov
jnp
inc
insl
int3
imul
mov
push
mov
pop
xor
lahf
xor
fldt
adc
push
je
dec
nopl
add
mov
sub
push
test
xlat
addr16
pop
sbb
mov
sub
clc
push
push
cli
mov
cld
dec
or
pop
mov
enter
sbb
inc
add
loopne
lods
mov
cli
pop
jo
outsl
arpl
push
pop
and
and
cmp
in
xor
pop
addb
mov
cltd
or
mov
insb
aaa
cmpsb
call
cmp
es
clc
push
out
mov
mov
mov
fstpl
std
push
push
xchg
bound
enter
aas
das
mov
out
mov
mov
and
push
add
es
ja
mov
dec
outsb
fmul
add
push
jl
lret
inc
pop
movsl
mov
xchg
lods
adc
push
sbb
std
shrl
leave
cltd
and
add
mov
mov
mov
mov
mov
out
repnz
daa
fs
mov
sbb
mov
aad
in
push
ja
popa
loope
push
sahf
call
add
and
add
subl
movsl
xor
mov
je
xchg
mov
adc
mov
adc
mov
push
stos
test
lret
fisttps
imul
push
bound
lret
cld
adc
or
hlt
mov
rcrl
es
cmp
pop
mov
imul
and
and
mov
scas
cmp
fisubrs
add
cmpsl
xchg
popf
sub
sarb
loope
aam
rcrl
std
idivb
sub
jmp
fs
sahf
sub
lret
xchg
pop
lods
or
add
mov
pop
sahf
jge
dec
enter
xchg
adc
movsl
stos
ffree
test
in
jns
mov
mov
inc
ljmp
pop
jecxz
movsb
std
fadd
iret
sub
mov
mov
sbb
ret
cmpsl
inc
bound
in
fdivs
mov
inc
mov
js
lret
int
loop
iret
sbb
test
xor
mov
xchg
movsl
loope
cmpsl
aaa
push
fildl
xchg
mov
inc
or
sarb
mov
add
cmc
das
jno
or
outsl
jae
fbstp
mov
ret
jne
or
and
or
imulb
mov
bound
mov
sbb
cld
lret
outsl
call
jle
inc
mov
lret
enter
sub
lods
pushl
inc
mov
dec
cmpb
jmp
mov
dec
cltd
push
cmp
jae
xchg
lock
and
push
push
movsl
ret
cmp
push
loop
notl
adc
rcl
popa
movsl
pushf
sbb
mov
leave
ds
hlt
je
xchg
ljmp
mov
pop
xor
sbb
in
sti
aas
push
inc
sub
and
pusha
arpl
es
leave
pop
test
movsb
int
arpl
xchg
pushf
ja
cmc
mov
dec
movsl
xchg
lock
cmp
add
add
nop
data16
xchg
lds
cli
add
jne
call
xchg
sti
aas
jo,pn
rorb
and
es
jmp
js
adc
popa
addr16
aad
push
mov
pop
adc
fidivrs
sbb
inc
stos
fisttpll
cltd
std
lret
inc
outsb
pandn
xchg
addr16
mov
cmp
inc
lea
sbb
js
dec
jg
insl
subb
mov
aad
pop
cmpb
or
imul
or
push
push
adc
popa
into
xor
mov
and
sar
testl
fstps
imul
sub
and
sbb
and
jmp
aam
pmuludq
push
cltd
xchg
enter
xor
hlt
add
mov
jmp
mov
stos
mov
stos
jg
loop
stos
fscale
stos
es
cmpsb
cmc
push
jb
xchg
cmp
xchg
pop
xchg
sub
test
sub
mov
bound
movsb
push
push
jmp
and
cmp
cwtl
dec
pop
jb
lret
jnp
sbb
dec
sub
mov
cmpsb
cs
push
mov
or
gs
gs
dec
out
jl
pop
fldcw
nop
loope
push
xor
bound
iret
out
xchg
mul
test
lret
or
outsl
jecxz
or
mov
rorl
loop
mov
xchg
ret
incb
adc
jo
fs
or
inc
mov
lock
aad
outsl
aad
nop
cmp
clc
mov
sbb
decb
pop
pandn
pop
mov
sub
aam
sub
in
push
cmp
jmp
cmpsb
ja,pt
dec
addl
ljmp
cmp
lds
or
jno
outsl
ds
or
and
bound
leave
mov
fcoms
repz
push
cmpsl
dec
cmp
and
xchg
lcall
dec
icebp
js
stos
push
and
jno
mov
and
xchg
push
sub
fnsave
xchg
xchg
pop
popa
filds
sub
outsl
mov
mov
add
sbb
in
xchg
cli
movsl
sub
push
xor
test
fnstenv
inc
xchg
icebp
pop
pop
insl
sub
imul
xchg
inc
cmp
cmp
mov
sub
out
lods
sub
imull
outsb
jmp
mov
fnsave
fs
ret
mov
sbb
and
xor
sahf
sub
or
jle
test
mov
mov
movsb
fldl
mov
popf
or
mov
out
cltd
mov
pop
out
sub
call
mov
cmp
mov
add
pop
mov
adc
add
or
dec
mov
fadd
xchg
mov
cmp
or
iret
scas
push
fcmovne
aam
and
fucom
inc
xor
inc
inc
aam
pop
and
and
adc
dec
mov
push
stos
xchg
rcrb
adc
movsl
aam
fnstcw
out
cmp
push
sti
jo
lock
std
jp
xor
and
aaa
pop
mov
mov
cld
scas
mov
xchg
jl
mov
insb
mov
ds
adc
and
mov
pushf
jp
mov
addb
popf
fnstenv
inc
sbb
in
mov
sub
lods
cmpsb
fs
shll
in
gs
lock
add
jnp
xchg
xchg
lds
mov
cmc
loop
sbb
nop
outsl
or
mov
mov
mov
xor
xchg
decb
imul
sub
aas
sub
sbb
xor
out
cmpsl
std
movsb
inc
into
lock
jbe
popa
stos
cmp
jmp
and
mov
dec
dec
xchg
cmp
arpl
bound
test
or
cltd
jns
inc
mov
daa
or
adc
and
and
push
rorb
jae
mov
inc
and
push
sub
popf
push
adc
das
pop
push
out
movsb
cmpsl
out
jbe
outsl
sbb
or
sbb
sbb
popa
sbbb
pop
shr
sub
mov
cmp
sub
xchg
std
cld
mov
add
aaa
leave
aad
or
jns
cli
sub
data16
daa
cmp
cmc
stos
cmpsl
lds
sub
xor
mov
js
xor
je
xchg
ffree
std
mov
mov
in
hlt
and
dec
pop
inc
inc
cmc
daa
shll
cmp
xchg
xchg
and
jmp
js
lret
mov
or
ret
and
jge
dec
sbb
popa
xchg
adc
fcom
xchg
inc
sub
and
pop
add
dec
fisubrs
inc
pop
inc
incl
inc
mov
jg
insb
daa
pop
sahf
bound
sbb
mov
mov
rclb
stc
sarl
shll
sbb
mov
leave
fwait
pop
sti
and
das
ja
jne
popa
rol
push
adc
lods
js
insb
js
adc
xchg
repz
inc
fld1
mov
jo
icebp
push
pop
mov
and
cmp
or
dec
mov
mov
dec
fcmove
test
xor
pusha
ss
pop
mov
xor
ljmp
cs
sbb
xor
setp
or
pop
adc
dec
sub
inc
mov
mov
popf
lea
notb
mov
in
push
cmpsl
lret
int3
pop
test
rcr
jge
push
rolb
int
sbb
sti
lods
add
aad
cmp
lahf
sub
add
cli
in
xchg
or
call
cli
mov
aad
enter
and
push
aaa
outsl
js
add
sub
clc
scas
dec
push
enter
sub
imul
dec
popa
mov
lods
sbb
outsb
fsubr
in
movsl
mov
sbb
test
mov
insb
sub
jle
sbb
mov
inc
jg
lahf
cmp
sbb
sbb
sbb
sub
mov
test
sarb
jbe
pop
lahf
inc
add
mov
or
add
ljmp
cmpsl
adc
fsts
mov
jae,pn
mov
je
adc
adc
cli
xchg
sbb
xor
xchg
dec
mov
mov
dec
arpl
es
mov
ljmp
add
bound
mov
push
push
mov
pop
jb
rcrb
push
jp
sbb
fnstsw
test
xchg
fdivs
repz
loope
loope
shl
push
loop
dec
std
cmp
into
int
stos
inc
push
sub
es
div
cmc
push
sar
xorb
test
fistpll
pop
cmp
inc
push
or
popa
fwait
in
test
cmp
push
jae
in
xor
xor
loopne
mov
mov
jg
lret
and
imulb
mov
in
mov
mov
adc
jl
jge
fdivl
push
cmp
flds
dec
adc
jns
loopne
mov
adc
add
inc
cmp
call
mov
out
xchg
in
in
ja
mov
pop
mov
popf
pop
jmp
adc
mov
xor
xchg
pop
in
fnstenv
or
pop
pop
test
arpl
out
sbb
jl
popf
or
shrl
loopne
jae
mov
les
sub
and
sbb
mov
jno
jg
add
test
mov
xor
leave
mov
fisttpll
jno
ret
pop
mov
mov
and
insl
imul
xchg
fisubrl
faddl
pusha
push
cmp
jecxz
fisttps
mov
mov
dec
filds
sahf
push
xor
jne
lods
pop
xchg
xchg
lret
inc
xchg
and
and
sbb
rcrw
lock
and
or
mov
inc
divb
nop
ret
adc
test
add
add
dec
test
sti
es
xor
popf
scas
sbb
rdmsr
mov
xor
mull
iret
push
lods
fwait
bound
sbb
into
push
repnz
mov
and
inc
insl
pop
sub
jne
daa
pop
or
loop
fdivl
inc
cmp
divb
filds
fldcw
in
rcr
fwait
mov
setnp
cmpb
add
es
add
push
sahf
loope
repz
in
test
ja
inc
cli
sbb
bound
pop
xor
aad
and
jmp
jnp
out
pushf
stos
mov
scas
push
or
gs
cmp
mov
fistpll
rolb
cwtl
sbb
mov
push
pop
sbb
mov
decb
lods
jle
add
cwtl
mov
sbbl
cs
adc
sbb
jae
jmp
and
jmp
sti
ss
and
mov
jmp
mov
mov
push
flds
loopne
cmp
inc
into
cmp
sbb
fldcw
inc
dec
popa
pop
xor
enter
mov
inc
repnz
sub
mov
testl
fdivrs
insb
cli
adc
repz
aas
sub
hlt
xorl
adc
es
stos
rcrl
ss
or
cmc
push
xor
inc
jle
jb
sub
mov
shll
ja
xor
mov
int
dec
dec
cmpsb
jp
pushl
dec
jbe
or
into
xor
xchg
int3
xchg
jbe
add
xorl
js
push
popf
cmp
dec
or
out
les
mov
lods
mov
adc
xor
push
popa
mov
je
xchg
std
sbb
sahf
mov
xchg
cltd
insl
ds
mov
push
pop
push
and
sbb
sub
jle
and
sbb
mov
jle
ds
bswap
aad
mov
and
ds
xchg
push
call
xchg
imulb
scas
push
sbb
stc
sub
int
xor
add
push
xor
shrb
inc
idiv
xchg
es
das
out
sbb
int3
add
out
test
xchg
js
jmp
inc
adc
cmp
pop
add
push
bound
clc
je
push
xor
inc
or
adc
roll
xor
stos
out
or
ljmp
sbb
in
jp
testb
lds
jbe
stc
xor
and
xor
out
ret
dec
dec
xchg
pop
fs
mov
jecxz
loop
cmc
and
cmp
xor
push
fistps
pop
or
and
cli
mov
cmp
lods
jnp
sbb
cld
in
mov
mov
rolb
dec
xor
js
jbe
sbb
aas
mov
mov
mov
lock
decl
mov
sbb
adc
dec
xor
cmp
stos
adc
jg
lds
xor
add
repnz
sub
mov
testl
mov
sub
fcompl
dec
leave
inc
push
inc
mov
andb
mov
mov
fstpl
cmp
or
cmp
inc
inc
pop
fisttpl
cwtl
dec
aas
push
pop
sbb
sub
sbb
xor
into
aaa
cld
inc
pop
and
pop
jbe
dec
jo
add
jae
sti
jb
adc
jmp
inc
arpl
sbb
jp
push
pusha
ds
fildl
fs
cmp
arpl
movsl
in
push
sti
test
push
add
or
or
mov
fs
std
push
aad
jno
stc
xchg
or
xchg
add
push
add
lock
xchg
scas
icebp
mov
adc
fsts
pop
mov
and
mov
outsb
testl
lock
pop
popa
pushf
les
xchg
aas
push
adc
pop
xor
aas
cmpsb
mov
mov
les
cmp
setb
mov
test
pop
andb
test
mov
sti
out
gs
out
jbe
jns
push
jne
incl
jge
data16
mov
test
push
jae
arpl
mov
sti
das
adc
js
push
mov
inc
pushw
mov
icebp
jecxz
sti
clc
push
ss
lods
xor
xlat
jae
icebp
mov
push
inc
fistpl
xor
mov
fildl
xchg
in
lods
inc
cmp
sahf
jb
sub
bound
ja
pushf
dec
adc
mov
add
and
outsl
in
test
xor
pop
sub
daa
testl
lcall
cmp
shll
cwtl
cmp
push
jae
mov
inc
inc
jecxz
neg
adc
stc
mov
push
out
dec
inc
bound
popa
bound
or
mov
cmp
sub
mov
xchg
movsb
xor
jge
pop
rcr
fildl
incl
roll
stos
and
stc
call
jl
fwait
inc
ljmp
sub
jge
xor
mov
inc
lea
inc
test
fnsave
daa
fistps
push
test
or
or
idivl
adc
inc
push
jbe
clc
ja
mov
inc
std
mov
mov
ss
clc
stos
pusha
test
push
divb
inc
mov
jl
sub
hlt
mov
xor
xlat
pop
jg
cmp
push
insl
mov
aad
sub
arpl
cmp
xor
es
xor
sub
pop
shrl
fisttpll
movsl
mov
bound
add
pop
out
inc
push
dec
adc
mov
mov
fnstcw
dec
rclb
clc
adc
shlb
pop
orl
add
sar
dec
xor
and
pop
hlt
cmp
xchg
jne
inc
in
pop
ss
leave
popa
mov
cli
xchg
lds
cld
pop
pop
test
dec
scas
lods
imul
add
cld
addr16
sbb
je
xchg
sub
mov
mov
sahf
mov
movsl
outsl
or
and
mov
or
andb
xor
cmp
sub
inc
add
mov
enter
movsb
movsb
add
sbb
nop
jb
push
lds
add
pop
mov
pop
push
mov
xchg
xor
or
or
push
nop
es
fnstsw
lds
add
xchg
enter
pop
pop
mov
xchg
push
stos
nop
shr
movl
cmp
mov
xchg
iret
mov
xlat
dec
push
push
sub
mov
pop
jae
dec
push
mov
cmp
ds
pop
pop
lret
mov
lcall
sbb
fcmove
jle
stos
test
nop
sub
or
and
clc
lods
in
sbb
hlt
ja
and
fwait
into
fsubl
dec
and
inc
cmp
sub
xor
enter
in
inc
aad
pusha
xor
xor
lods
cs
cmp
jb
xchg
cmpl
lahf
out
push
les
bnd
outsb
scas
mov
fwait
enter
pop
std
mov
data16
sub
fiaddl
int
and
data16
and
scas
std
cli
xchg
dec
int3
jb
pop
daa
ficoml
shrb
pushf
sub
mov
mov
movl
cmpsl
mov
imull
jp
pop
xor
pop
addr16
mov
flds
inc
test
idivl
inc
cmc
push
popf
stos
jne
lds
xchg
cmpsb
and
ret
inc
push
enter
dec
add
pop
cld
mov
pop
arpl
cs
jb
mov
inc
popa
imul
push
sub
mov
push
repz
je
add
scas
pop
insb
enter
sub
push
fmull
pop
clc
or
in
mov
cmp
dec
jmp
jae
and
je
and
adc
ret
repnz
cmp
sub
cld
fdivrl
iret
pop
xchg
aas
pop
sahf
test
fsubrs
xchg
sbb
scas
or
adc
cmp
fnsave
jnp
mov
mov
daa
and
xlat
shrl
pop
pop
icebp
loopne
mov
mov
clc
cld
add
or
and
leave
and
xchg
mov
jle
xlat
and
pop
pusha
aam
cmc
or
mov
jmp
fldenv
cld
mov
jnp
ret
and
mov
fiaddl
xchg
cltd
ja
sbb
sbbb
and
popf
dec
daa
add
pop
nop
sti
sub
xchg
aaa
icebp
xor
dec
vucomisd
xor
sub
mov
ss
lods
test
mov
frstor
or
cwtl
roll
bound
insl
cmp
idivl
aad
mov
mov
push
imul
les
pushf
add
in
push
sub
jp
mov
in
enter
test
adc
and
sahf
jns
cld
adc
mov
cli
popa
push
fstpl
inc
mov
fcoms
inc
fmuls
sbb
mov
sub
jo
xor
enter
inc
dec
add
jecxz
xor
arpl
movsb
sbb
xchg
cmpsl
aam
imul
lea
nop
in
sub
push
test
subb
aas
scas
and
in
mov
in
sti
jl
cmp
push
xchg
mov
dec
inc
idivb
std
cmp
arpl
mov
cmp
js
dec
fs
int3
dec
mov
mov
dec
cmp
not
stos
inc
mov
rcll
xor
fcoms
lods
repnz
jns
xor
mov
inc
push
movsl
sbb
sub
mov
adc
loop
scas
cs
mov
sbb
insb
cmpps
lods
mov
popf
in
sbb
sub
or
ffreep
xchg
fistl
or
inc
int
sbb
dec
inc
add
fnstsw
pop
push
pop
lahf
lcall
inc
mov
outsb
mov
es
fmull
and
inc
inc
push
test
pop
testl
shl
sti
adc
xlat
add
std
push
pop
cmp
adc
fidivrl
sub
movsb
push
adc
mov
xor
movsl
stos
int3
add
sarb
pop
cli
sti
or
push
das
in
addr16
fsubl
cmp
cld
pop
xor
out
ficoml
sar
xor
xchg
aad
ficompl
mov
lds
adc
clc
arpl
fs
add
xor
adc
in
fnstenv
cmp
xchg
stos
xchg
adc
sub
out
inc
mov
mov
push
xchg
add
das
negb
loope
xchg
adc
jp
sub
iret
dec
imul
lret
cs
rcrb
aad
xchg
mov
sub
xchg
cmp
test
bound
cmp
ror
addr16
adc
mov
push
imul
and
insb
dec
jge
pop
mov
pop
mov
and
stc
loope
stos
cmpsb
push
cmpb
mov
push
mul
xchg
fistl
push
int3
push
rcll
sbb
decl
aam
ret
mov
into
out
test
int3
push
loope
pop
push
or
jl
mov
sub
mov
bnd
gs
inc
inc
push
ds
mov
les
adc
mov
call
divl
loope
arpl
bound
call
inc
fcomps
test
cmp
inc
fwait
jg
xchg
xchg
stc
dec
pop
fxch
das
or
cwtd
imul
cmp
lods
inc
add
lea
mull
add
sub
test
sbb
rcr
jnp
imul
les
or
xchg
add
dec
xor
mov
imulb
in
lcall
mov
mov
mov
mov
outsb
and
cwtl
imul
dec
dec
fsubp
sbb
mov
and
stc
xchg
cld
dec
subb
sub
ss
push
pop
fisttpl
lret
cmpb
outsb
movsb
iret
int
and
adc
and
xor
jb
cltd
out
or
icebp
out
mov
mov
dec
mov
fsubl
sub
out
pusha
cltd
mov
flds
mov
dec
or
cmovno
xor
std
cmp
fsts
or
into
jbe
fs
es
enter
out
outsl
movsb
lahf
addr16
sbb
jg
mov
mov
xor
sbb
hlt
pop
clc
cmpb
mov
jge
pop
mov
cmpsb
aam
add
jno
lods
inc
ja
cltd
pop
xlat
aam
cs
mov
outsb
sub
inc
popa
dec
dec
addr16
inc
and
pop
push
mov
sbb
xor
xor
mov
ret
sub
mov
mov
mov
pop
mov
push
mov
outsl
add
out
pushf
int3
outsb
xor
daa
shl
or
adc
sbb
mov
jo
stos
test
sarb
inc
inc
aaa
cli
popf
xor
loopne
shlb
notb
stos
lret
or
out
xlat
add
pop
pop
gs
adc
xchg
mov
test
imul
adc
jns
pop
popa
shll
insl
ds
push
aaa
mov
loop
cmc
and
nop
xor
popa
in
addr16
scas
push
stc
jnp
pop
mov
test
cmpsb
xchg
cmp
push
push
cmc
pop
js
pop
cmp
push
push
sbb
movsl
inc
ja
fldcw
push
out
dec
mov
push
pop
stos
shlb
paddsb
mov
sarl
xchg
mov
xchg
in
fcomps
cmp
add
movl
jnp
movsb
movsl
imul
push
lret
push
negl
pop
test
pop
adc
pusha
decb
shrl
mov
je
push
sub
sbb
lcall
sub
outsl
out
loopne
hlt
jmp
mov
adc
test
xchg
pop
sbb
cltd
movsb
fimuls
hlt
lods
cmp
or
jp
insb
jo
inc
dec
add
ret
inc
gs
js
push
stos
fcmovnb
ss
jle
enter
mov
sub
dec
mov
lahf
cmp
sub
or
out
push
pop
pop
pop
and
mov
mov
lret
push
sbb
push
imul
and
or
push
int
xor
pextrw
fs
and
orl
inc
fistl
cld
mov
nop
shll
mov
jnp
inc
xchg
push
cmp
loop
test
popa
mov
btr
add
lahf
cmp
fisubrl
lods
loope
lahf
and
sub
shrb
xchg
test
sbb
lea
pushf
hlt
arpl
popa
push
scas
jl
leave
push
in
sti
rorl
sbb
push
aas
out
in
inc
arpl
push
or
outsl
shlb
mov
mov
pop
sbb
mov
xchg
jns
or
adc
std
sbb
aad
mov
jmp
sbb
inc
push
cmpsl
test
cwtl
fbstp
ret
aad
cltd
jecxz
or
loope
xor
aad
sbbl
loope
mov
mov
cmpsl
push
and
icebp
mov
fiaddl
imul
ficomps
dec
adc
fisubs
xor
xor
inc
pusha
in
push
ja
cmp
es
sub
pop
sub
cmp
jno
loop
addr16
cmpsb
mov
sub
outsl
mov
push
push
ret
jbe
cli
test
addl
sub
pop
cmp
das
fisubrl
jle
mov
dec
dec
mov
xlat
dec
cmp
xlat
push
jns
stc
movsb
mov
je
xor
inc
fisttps
popa
movsl
xor
push
leave
xchg
test
jl
xlat
jecxz
popf
ss
stos
mov
and
push
add
xor
bound
js
add
xor
lea
or
test
inc
push
push
inc
mov
popa
dec
cwtl
cmp
lea
xor
dec
sbb
lea
dec
xchg
fwait
or
push
rcl
sub
stos
mov
in
dec
popw
jmp
jne
xor
enter
divl
cmpsb
cli
fimuls
pusha
pop
ja
gs
pop
mov
repz
xchg
mov
bound
and
add
nop
int3
imul
or
jns
pop
mov
lcall
cli
lahf
stos
addr16
and
xchg
divl
xor
xorb
bound
mov
nopl
fnstenv
add
adc
repz
fs
jecxz
not
out
inc
or
aas
add
dec
xor
clc
arpl
xchg
and
push
scas
xchg
aam
and
mov
nop
outsl
lret
insb
jno
lret
arpl
pop
jo
fbstp
repz
popf
push
cmpsl
divb
or
clc
out
pushl
push
mov
add
xor
stc
ljmp
and
jnp
dec
jo
enter
xor
jnp
add
fidivs
fldt
sbb
dec
cmpsb
xor
mov
sbbb
xchg
inc
add
test
push
cmc
ror
js
js
and
arpl
lods
aam
loope
jns
xor
push
sub
mov
addl
fldenv
and
test
movsb
shrb
icebp
stos
xor
push
sub
mov
jmp
ficompl
mov
sub
loope
mov
mov
push
mov
popf
xor
or
jge
pop
cmp
es
adc
mov
test
and
mov
roll
and
lcall
or
mov
jb
mov
xchg
fwait
and
sub
dec
js
ret
les
in
fcomps
pusha
nop
cmp
adc
sub
xchg
sbb
fsub
divl
mov
and
jne,pn
out
pop
sahf
test
inc
inc
add
push
pop
push
xchg
jbe
adc
ret
idivl
fsubl
cmp
sub
pop
sub
xor
jecxz
pop
aad
mov
mov
inc
gs
dec
jo
mov
aad
cli
arpl
popa
popa
cmp
dec
adc
call
stos
test
lahf
mov
cmp
cmpsl
add
xchg
test
in
push
lret
inc
xchg
lea
xor
xor
lret
jae
xchg
adcl
lds
push
decl
movb
jo
fldcw
cmc
int
mov
push
or
std
xor
sti
cld
stc
sbb
mov
mov
xor
sub
sbb
jnp
cli
divl
jmp
xchg
enter
mov
adc
icebp
dec
fldt
adcl
mov
or
call
imul
shll
push
test
and
add
fcoms
jae
adc
xchg
test
das
cld
sbb
imul
insb
cmp
mov
les
stos
frstor
loopne
mov
mov
das
daa
cltd
or
orb
mov
xor
push
dec
addr16
mov
das
inc
push
daa
xlat
xor
mov
sahf
addb
xor
inc
dec
cmp
inc
mov
in
dec
in
stos
aaa
mov
cmp
mov
mov
mov
mov
into
scas
add
push
std
arpl
and
mov
xor
and
push
sbb
aaa
scas
mov
mov
dec
mov
adc
mov
and
xchg
sbb
add
orb
pop
ret
lods
sbb
fwait
int
sub
hlt
push
sbb
lret
pop
test
lcall
ret
iret
mov
mov
jo
int3
push
cli
sub
push
and
call
pushf
mov
pusha
add
clc
outsb
jnp
stos
je
stos
pop
adc
mov
bound
cmpsb
sub
outsl
imul
cmpl
pop
jle
xchg
xchg
adc
mov
shll
fists
in
fdivr
and
aaa
shrl
shl
lods
movsb
mov
stos
or
addl
jo
xor
push
mov
je
or
cmc
xor
loopne
dec
sub
je
scas
fstps
insb
scas
rclb
pop
mov
hlt
fmull
push
push
mov
inc
xor
aas
mov
into
push
xchg
pop
in
aam
out
scas
push
and
loope
xchg
insl
sub
push
xchg
lods
dec
clc
gs
das
and
ss
in
aam
adc
shlb
mov
sbb
daa
xor
fbld
fs
ss
cmpsl
int
xor
cmpsl
into
lcall
pop
and
in
stc
std
mov
mov
outsb
cmp
mov
jb
push
jl
and
aas
inc
mov
cmc
add
jg
std
mov
sub
pop
movaps
test
hlt
and
sub
dec
testl
cwtl
scas
mov
jl
notb
push
push
xor
insl
or
les
jb
leave
int3
cmp
adc
dec
push
adc
cmc
add
adc
or
sarb
adc
shlb
or
popf
idivb
loop
and
bound
out
jecxz
shll
test
mov
addb
add
push
mov
mov
adc
inc
mov
push
int
ret
out
mov
mov
dec
mov
std
push
push
inc
fnstsw
mov
sti
arpl
add
mov
push
clc
icebp
jbe
imulb
in
call
mov
xchg
ja
shrb
and
and
mov
and
aaa
lods
and
call
jmp
push
push
adc
daa
mov
dec
xchg
decl
in
outsb
mov
xchg
mov
addl
gs
les
inc
dec
push
push
and
ja
add
popa
scas
pop
ss
outsb
dec
std
repnz
mov
xchg
cmpl
sbb
mov
dec
mov
jl
mov
jmp
push
xchg
arpl
mov
leave
imul
sub
call
sbb
add
int3
lahf
xor
cmp
cld
aas
cmpsb
repz
pop
push
inc
dec
adc
sbbl
mov
pop
add
mov
out
inc
pop
or
je
add
pop
xchg
jmp
call
fcoml
in
xchg
pop
inc
sbb
fisubrl
xchg
pusha
xchg
push
cmp
sub
call
sar
notb
gs
in
jle
sub
jb
add
push
pop
arpl
arpl
and
popf
sub
cmpsb
sbb
ret
scas
sub
lea
inc
xor
and
jle
push
dec
loop
ljmp
add
inc
std
mov
cmp
outsl
cmc
lods
inc
add
jno
out
xchg
icebp
scas
popf
addr16
pop
mov
push
inc
pop
jge
cld
pop
andl
cmp
and
jmp
mov
dec
and
xor
dec
xchg
pop
sub
or
mov
pushf
pop
inc
rolb
dec
int
adc
mov
sbb
shlb
sbb
or
insl
lea
lods
sub
or
scas
xchg
and
sarl
mov
hlt
insl
fistpll
jp
adc
or
ss
jno
mov
sub
xor
mov
jle
lods
add
pop
fidivrs
sub
mov
mov
xor
mov
xchg
sbb
mov
lock
mov
xchg
jge
cmp
pusha
mov
cmp
xor
ror
pushf
lock
xor
repnz
in
cmp
test
les
push
movsl
lds
jns
insl
pop
out
adc
push
xchg
stc
int
sub
xor
sbb
jns
fnstcw
inc
jnp
add
out
inc
sarb
pop
or
mov
fisubrl
sbb
stos
in
fwait
jnp
leave
sub
jle
in
and
adc
sar
add
andb
push
push
adc
in
jns
lock
mov
insl
mov
arpl
sub
test
xchg
xor
push
mov
ret
out
push
sub
out
jbe
cmp
and
jb
jno
and
jo
jle
clc
mov
dec
das
pop
mov
xorl
jge
inc
cltd
cli
mov
int3
mov
aas
in
jg
inc
push
ja
and
sub
bound
jne
subb
cmpsb
mov
xchg
xchg
adc
mov
mov
lods
jmp
out
cld
cs
sarb
es
or
sbb
nop
adc
out
inc
movsb
xor
or
push
loop
jo
push
das
ss
cmp
add
nop
pop
dec
cmp
nop
outsl
cmp
cltd
and
pop
imul
icebp
add
pop
mov
idivl
add
je
in
add
pop
mov
xor
mov
std
lods
jp
add
push
push
or
cmc
ds
lea
jl
shll
shr
jmp
push
xchg
rolb
push
faddl
push
inc
hlt
pop
cmp
aad
test
lea
sub
cli
call
pop
xor
lea
xchg
mov
inc
inc
jb
jle
rol
or
pop
mov
dec
jo
pop
or
cmp
inc
jge
xchg
movsl
dec
sub
les
fcoml
outsb
dec
fdivr
sub
xchg
fisttpl
jno
out
jge
insb
js
popf
imul
xchg
sub
sub
in
xor
cmp
test
jg
sahf
or
pushf
bound
jbe
bnd
mulb
jge
jae
pop
xchg
or
shl
xor
cmc
jo
out
mov
add
repz
sahf
mov
aas
and
xchg
sbb
test
inc
pop
mov
mov
jg
cs
add
and
dec
jp
mov
or
std
sbb
add
mov
sbb
dec
jp
mov
scas
js
fadd
push
call
cwtl
xrelease
arpl
mov
sar
adc
pop
push
pop
icebp
popf
xor
imul
mov
movsb
aad
xor
cld
cmp
rolb
movsl
cltd
xor
ss
pop
je
ror
pop
mov
addl
adc
out
lock
rcl
mov
xchg
shrl
cmp
inc
cltd
enter
test
test
xlat
xchg
xor
fldt
lret
dec
jbe
adc
sbb
iret
adc
inc
repnz
or
dec
inc
das
lahf
mov
mov
adc
jnp
rorl
test
jns
decb
ficomps
dec
cmp
in
xchg
clc
adc
mov
cli
sbbb
push
sbb
or
sub
cmp
mov
sub
dec
gs
fwait
insl
popf
push
adc
cmp
or
and
jo
and
popa
cld
punpckhwd
enter
jecxz
xchg
dec
out
out
and
out
gs
cmp
inc
xor
adcb
add
rol
testl
sbbl
sub
xor
outsb
sbb
mov
das
inc
dec
add
loop
loop
icebp
cld
movsl
cmp
xchg
adc
sbb
jle
add
jg
add
and
daa
je
or
test
jmp
or
xorl
pop
shlb
faddl
mov
jge
add
add
fnsave
jle
and
mov
roll
test
les
out
adc
leave
sbb
fisubrs
and
adc
inc
insl
push
mov
scas
fcomps
int
bound
jl
insl
paddb
xor
ds
adc
sbb
stos
pushf
decb
mov
loope
jns
nop
in
jne
add
pop
inc
ret
data16
loopne
sub
cmp
and
faddp
lahf
push
add
push
jecxz
xor
xor
notb
mov
pop
adc
loopne
into
add
dec
imul
stos
add
loopne
stos
aas
xchg
maxps
je
xchg
inc
mov
cmp
jl
pop
jp
shrb
repz
or
xor
mov
insb
setp
notl
cvtdq2ps
adc
sub
or
shrb
mov
mov
mov
xlat
fwait
push
mov
add
dec
jno
sub
lods
fdivl
mov
mov
cmp
pop
mov
add
cmc
xchg
lock
xlat
mov
int3
mov
dec
sbb
pop
or
push
cmp
rcrl
xchg
sbb
sbb
aaa
adc
cmpsl
inc
mov
aad
out
sub
push
sbb
in
sti
addr16
je
jle
test
xchg
mov
in
dec
out
sub
in
popa
mov
sti
dec
ja
lahf
ja
mov
loop
ret
icebp
arpl
push
ret
cmp
or
xor
mov
imul
xor
mov
fiadds
data16
pop
mov
jo
out
mov
cmp
je
push
mov
push
cmp
xchg
mov
lahf
outsb
push
std
pushf
jae
popfw
xor
add
lret
push
add
mov
int
popa
mov
outsb
mov
fsubrl
ret
test
pop
xchg
punpcklwd
jae
out
jp
mov
xchg
jb
push
aam
push
cmp
inc
mov
mov
mov
addr16
pop
nop
fwait
or
xor
sub
add
into
pop
dec
sbb
cmp
sbb
jo
daa
cmpsb
cmp
and
cmpsl
or
popa
cmp
sub
inc
mov
sbb
jle
pop
cmp
pusha
push
pop
in
imul
inc
addr16
mov
aad
jge
clc
or
mov
ret
xchg
movsb
or
int
fdivrl
ret
testb
aas
stos
mov
or
movsb
ds
sbb
cmp
loop
adc
ds
int
xor
mov
repnz
lret
xor
mov
xchg
or
fldenv
dec
shr
pop
xor
sbb
divl
cld
inc
push
push
mov
mov
ds
mov
xor
xor
orb
test
or
inc
cs
jae
test
mov
fistps
fstl
inc
and
popa
cmpsl
leave
scas
les
cli
mov
sub
dec
out
movsb
or
clc
pop
mov
cs
push
out
aaa
cmpsb
pop
iret
pop
sbb
or
mov
sbb
cwtl
pop
stos
out
in
arpl
xor
aam
mov
lret
js
fisttpll
call
lret
repz
mov
std
pop
clc
or
push
xlat
jo
xlat
fiadds
and
gs
fdivrl
lea
or
adc
lret
fwait
push
scas
or
inc
imul
iret
in
outsl
clc
or
pop
enter
cmp
sbb
in
jne
xor
lods
out
into
loopne
out
push
out
dec
inc
fisubl
aaa
call
fidivrl
lods
xlat
aaa
cltd
xchg
fwait
jmp
adc
divb
or
arpl
add
or
mov
cmp
pushf
xchg
dec
in
push
and
insb
test
jle
es
cmpsb
dec
or
pushf
pusha
sbb
bnd
dec
fnstenv
fidivs
cmpsl
push
inc
test
inc
decb
mov
dec
dec
roll
testb
inc
icebp
pop
mov
xor
xor
pop
test
fimull
mov
pop
fimuls
stc
cmpsl
sti
testl
in
daa
popf
je
sahf
mov
xchg
lahf
out
decl
in
aas
fldenv
add
iret
repz
and
and
xchg
test
fnsave
jae
stos
jno
loope
outsl
mov
es
stc
ja
xlat
mov
or
out
dec
add
in
into
das
ds
stc
mov
das
lea
dec
arpl
mov
cmp
add
in
out
ds
aas
loope
push
adc
fstl
sbb
add
or
hlt
xor
aas
push
lods
or
pushf
xor
shrl
xor
cmp
xor
xchg
add
mov
cmp
aas
inc
imull
push
mov
stos
mov
or
pop
add
notl
mov
pusha
lods
xor
fstpt
or
fwait
sbb
mov
or
aad
xchg
or
pop
mov
jecxz
jno
add
cltd
in
dec
ss
pusha
andl
xchg
into
xlat
sahf
add
in
or
mov
shl
jae
in
mov
fsubrl
mov
arpl
divl
loope
fcomip
jge
inc
jns
jmp
leave
mul
loopne
stos
mov
push
dec
xor
sti
daa
call
lods
enter
movb
cmc
cs
inc
sbb
je
fwait
repz
test
leave
jnp
lea
pushf
xchg
xor
cmpsl
into
or
pop
loope
dec
cmp
xor
push
fnsave
sub
movsb
rcrb
xorb
arpl
insl
loop
loop
loopne
imul
xor
xchg
push
jns
cmc
mov
in
mov
cltd
inc
push
xor
pop
or
push
outsl
iret
out
inc
adc
adc
add
loope
xor
mov
popa
xor
out
jge
in
jmp
adcb
xchg
scas
or
cmp
inc
push
pushf
mov
neg
daa
les
vcomisd
aam
xchg
xchg
mov
dec
dec
lods
add
xorl
shrl
mov
sub
xchg
shl
xor
mov
sbb
lahf
gs
cmp
add
mov
fs
push
mov
mov
lds
or
test
hlt
mov
xchg
es
sahf
or
cmp
in
sub
push
pop
leave
mov
mov
call
xchg
stc
sub
mov
xchg
sub
or
out
adc
enter
jae
scas
mov
cmp
fisubs
sbb
pusha
push
test
inc
sub
add
jnp
jle
push
loop
jo
mov
leave
lods
cli
rolb
sahf
ret
jo
out
gs
jecxz
test
cs
stc
mov
pop
pushf
enter
lret
dec
adc
adc
dec
call
stos
push
pop
xor
aad
or
push
mov
pop
xor
jge
fsts
xor
sub
xor
leave
inc
jmp
nop
out
add
mov
sbb
mov
mov
and
push
imul
xchg
ficomps
jns
jl
sub
lds
lods
sub
and
add
sub
sbb
push
fildll
iret
jl
test
test
aam
mov
pop
rorb
lahf
loope
push
mov
jnp
mov
jmp
xchg
cmp
dec
cmpsl
lahf
addr16
ja
out
dec
leave
mov
jle
cltd
daa
inc
jnp
xlat
enter
aaa
or
adc
lods
mov
in
inc
subl
inc
sub
das
mov
xchg
test
out
add
mov
add
inc
jp
push
adc
lahf
stos
and
popf
mov
inc
ljmp
xor
pop
lods
sbb
dec
loop
ljmp
fnstcw
testb
data16
pusha
mov
xchg
dec
cwtl
mov
or
int3
stos
mov
ds
inc
dec
push
mov
js
daa
shlb
fidivl
std
lods
and
xor
mov
cmp
push
pop
sti
outsb
adc
arpl
sub
or
sbbl
repnz
stos
or
cmp
xchg
fisttps
incl
bound
rclb
insb
aad
mov
daa
xchg
arpl
scas
lcall
adc
cmp
outsl
push
mov
inc
mov
jl
out
xorb
jno
cld
push
jns
mov
pop
fcoms
daa
arpl
mov
lods
loopne
jmp
gs
xor
mov
sub
mov
mov
jg
add
loope
lcall
es
fwait
pop
sub
jns
cwtl
shlb
or
sarl
fidivl
pop
lret
sbb
adc
sub
ljmp
cmp
shrb
testl
xor
leave
daa
outsb
sub
scas
cs
mov
inc
fisubrs
jb
mov
lahf
dec
inc
mov
pop
and
and
sbb
enter
imul
divl
mov
push
dec
jl
pusha
imul
call
xchg
mov
scas
lods
mov
popf
jg
loope
jb
sti
fcmovnb
leave
frstpm(287
outsb
push
push
pop
sbb
xor
xor
inc
sub
pusha
in
lahf
mulb
inc
int3
arpl
test
or
adc
imul
or
mov
shrl
sarl
and
jo
jne
pop
and
stc
lds
fisubs
jno
mov
or
sub
cmp
xor
xchg
fisubrs
jmp
or
push
aaa
pop
data16
jmp
aam
mov
sarl
pop
and
dec
adc
adc
or
cmp
dec
cmp
es
ret
lods
jle
sti
repz
fnstcw
iret
gs
rol
sbb
imul
insb
in
mov
xor
cmp
outsb
xchg
shrb
lea
ret
fs
repz
pushf
mov
xchg
xchg
imul
movsl
pop
ss
lcall
test
xor
sub
xchg
pop
outsl
xchg
and
pop
add
fcompl
pop
adc
jae
pop
add
aad
call
xchg
jb
mov
pushw
repz
xchg
sbb
dec
adc
or
and
add
mov
fcompl
orb
xchg
jne
ss
and
ds
int3
push
cmp
test
or
imul
daa
add
scas
sbbb
insl
mov
mov
mov
add
out
jbe
mov
pop
ss
lods
dec
xchg
lds
jne
and
cmp
inc
jecxz
sbb
sbb
or
in
or
cmpsl
and
adc
sahf
add
push
jp
mov
stos
pop
je
cmc
dec
adc
notl
mov
or
sub
or
sbb
sub
add
jge
pfmax
mov
shrb
mov
nop
xchg
jnp
frstor
pop
ds
pop
push
mov
mov
mov
cmp
mov
cmp
xlat
out
stos
add
pop
xchg
xor
jg
sbb
mov
in
mov
repz
mov
pop
pop
mov
cld
fsubrl
xchg
push
popa
push
push
adc
pop
cwtl
pop
mov
lds
loopne
pop
mov
and
push
lcall
call
add
cld
out
xor
sbb
fstpl
int3
iret
inc
int
leave
fstps
mov
sub
stc
jbe
push
adc
inc
subb
btc
adc
pop
cmp
cmp
lahf
push
xchg
fidivs
rol
jl
push
lret
mov
out
adc
jmp
loop
mov
mov
hlt
aam
ds
xlat
push
aaa
xchg
stos
fiadds
pushf
jne
out
fnstsw
mov
js
shrd
mov
jge
sahf
mov
aam
shll
neg
mov
outsl
mulps
daa
sbb
sbb
adc
shlb
dec
test
add
out
ljmp
repnz
mov
scas
mov
or
jae
sbb
fnstenv
and
inc
jp
std
add
jmp
shlb
push
roll
or
and
cwtl
sub
js
sti
out
dec
inc
das
xor
adc
sahf
cmp
xlat
pop
shrb
mov
mov
mov
mov
xor
test
mov
imul
sbb
ljmp
idiv
xchg
out
lahf
or
jg
fsubl
mov
or
fwait
aad
pop
std
ficoms
insb
inc
imul
inc
sub
xlat
testl
jnp
or
push
fcoml
js
add
cmp
aas
add
mov
stos
jo
ljmp
add
std
mov
sub
mov
movsb
jb
pop
xchg
push
out
push
ficoms
xchg
or
cmp
mov
sbb
and
push
lods
clc
inc
adc
stc
and
cltd
js
addr16
dec
dec
aaa
pop
cmp
xor
sbb
popf
and
in
push
popf
mov
pop
aad
sti
or
push
in
and
push
fists
xor
stos
mov
rclb
mov
push
outsl
es
dec
jmp
jmp
mov
dec
pusha
cmp
call
cs
mov
cmp
rcll
rorb
xchg
dec
cli
jmp
or
mov
jb
add
inc
cld
dec
adc
fmuls
jne
repnz
pop
repz
outsl
div
cld
lcall
in
aaa
popl
test
cmp
push
inc
jno
cltd
inc
add
popf
test
push
mov
popa
fistpl
es
aas
sahf
incl
aaa
shr
and
mov
or
push
add
and
fnsave
or
ja
push
dec
xlat
aas
roll
int3
mov
inc
mov
es
cmp
mov
xchg
xchg
cli
scas
ret
add
pop
inc
roll
inc
jp
mulb
jmp
imul
lods
shlb
mov
mov
cmp
lods
std
out
out
lds
rcr
jl
mov
push
ss
scas
jecxz
pushf
aaa
sub
icebp
aaa
test
cli
fiaddl
jae
mov
gs
lds
sbb
xor
add
mov
scas
je
mov
out
cmp
xor
mov
jl
and
pushf
int
or
repz
outsl
mov
daa
inc
mov
adc
push
in
mov
xor
jmp
divl
lods
subl
scas
jnp
push
add
cld
stos
xchg
push
mov
jo
popf
jne
sahf
lock
and
rclb
divl
lret
dec
inc
push
rolb
adc
mov
sbb
dec
fadds
fmulp
or
scas
jae
sbb
jg
fwait
cmp
push
frstor
push
arpl
nop
cmp
popa
cmc
fldcw
addl
push
ret
jecxz
je
xor
call
push
xor
cmovne
xor
scas
roll
pop
ret
icebp
insb
mov
xor
add
inc
add
jb
in
xor
pop
sub
mov
pushf
int
sub
cmpsb
sub
pop
xchg
repz
sbb
sub
sub
addl
jbe
jge
xor
int
dec
adcl
add
xor
adc
inc
arpl
jae
xchg
jge
pop
in
cld
pusha
xchg
rcrl
test
into
adcl
adcl
sbb
cli
lahf
loop
jmp
xchg
ror
lods
pop
cmpsl
mov
shrl
popf
sbb
aas
or
loope
and
xor
or
test
xor
fsubrl
cmpsb
push
adc
mov
loopne
dec
ficoml
xor
scas
mov
xor
mov
mov
add
xchg
xor
or
inc
fistpl
and
sub
sub
dec
xor
jl
push
cmpsl
inc
and
ret
nop
xchg
lods
out
icebp
movsb
adc
mov
mov
fisttpll
lret
sbb
int
jcxz
adc
cmpsl
lods
xor
mov
xor
dec
pushf
push
cmp
in
fdivrs
xchg
outsl
stos
jno
aad
cmp
jg
sub
test
lret
insl
inc
popa
mov
pop
in
push
add
jl
sub
pop
mul
push
jle
xchg
xchg
inc
jmp
rclb
mov
pop
mov
push
not
pop
pop
xor
mov
pop
outsl
out
xchg
or
jmp
sarl
dec
cmp
stos
in
out
loop
test
sbb
mov
mov
pop
push
jne
adc
jb
cmp
inc
pushf
push
ja
and
sbb
push
les
int3
dec
test
inc
nop
jecxz
mov
inc
in
add
mov
mov
js
mov
lcall
pop
into
cmpsl
mov
lret
int3
inc
sbb
insb
in
jecxz
inc
push
mov
aaa
cli
or
xor
cmp
in
jecxz
inc
push
movsl
clc
dec
mov
lret
or
nop
fs
xor
xor
xlat
xorb
les
add
daa
fdivrl
xchg
sbb
aaa
pop
sahf
aaa
mov
sti
test
and
or
mov
mov
mov
sar
inc
stc
fdivl
jnp
push
cltd
add
mov
repnz
movsb
and
out
movsl
fisubrl
aam
and
push
cli
test
pop
je
mov
test
cs
mov
pusha
int
pop
or
out
pop
pushf
mov
std
jmp
iret
jb
imul
aaa
lret
call
insl
imul
pop
mov
inc
stos
scas
lods
mov
cmp
and
lcall
and
stos
fmull
imul
pop
dec
jno
jg
in
daa
test
pop
inc
fcomps
cmp
jbe
into
loope
js
lret
adc
cmp
jno
movsb
and
int3
dec
cld
shl
in
dec
movsl
push
adc
mov
push
pop
and
das
jb
push
loope
and
dec
inc
andl
inc
lds
sahf
mov
jge
insl
mov
and
fisubl
xlat
lcall
xchg
cmp
or
das
std
stos
loope
loop
mov
inc
push
sub
out
ljmp
jbe
push
in
ret
loop
or
mov
std
stc
xchg
mov
adc
aas
cmc
mov
cmpsl
jl
mov
dec
out
fidivrl
lods
lahf
loop
sbb
inc
fcmovne
lret
xor
and
jge
sub
test
add
sub
push
int
pop
xchg
out
in
int
popa
imul
lret
inc
pop
fst
sti
cmp
aaa
testb
popa
xor
add
ljmp
pop
jb
movsl
xchg
dec
jl
mov
data16
enter
mov
xchg
fimull
in
xchg
mov
lret
inc
xchg
and
xor
add
mov
hlt
push
pop
jge
repnz
adc
repz
xchg
jnp
push
outsl
idivb
or
in
bound
and
or
sahf
mov
ljmp
pushf
mov
sbb
push
addr16
test
or
std
push
fmull
jle
and
mov
pop
popa
dec
sub
das
repz
jg
mov
cmp
nop
ja
rcll
lea
inc
ficompl
test
cmc
or
or
sbb
pop
add
push
fsubrl
mov
lret
test
cmp
mov
jb
adc
add
jp
inc
mov
movsl
je
dec
mov
xor
syscall
push
mov
sbb
lods
mov
sub
xor
sub
cmpsb
push
xor
and
icebp
push
push
arpl
cmp
jns
ret
out
or
xor
test
push
sbb
push
call
adc
mov
popa
cmpsb
sub
inc
push
int3
sub
lahf
loope
xor
adc
pushf
divl
call
xor
ljmp
pop
div
cld
fwait
xchg
push
das
inc
test
roll
push
xor
jno
in
aad
inc
fwait
cmpb
mov
and
pop
dec
imul
sbb
mov
fs
inc
movsb
ds
mov
mov
jl
mov
leave
mov
xor
cmp
or
mov
orl
jp
mov
mov
pop
xor
out
jle
aas
daa
std
jmp
adc
aaa
mov
mov
jge
adc
sbb
filds
pop
jmp
out
pop
sub
outsb
enter
out
pop
das
loope
gs
ds
and
dec
ds
mov
inc
call
vcvtsd2ss
ljmp
les
add
mov
mov
mov
out
inc
and
js
mov
into
sub
clc
jmp
daa
loop
push
xor
rol
lahf
faddp
andl
imul
or
xchg
aad
jnp
imulb
shrb
cmpb
jmp
sub
add
cmc
pop
sub
rorb
mov
pop
rcrb
in
int
lret
sub
loop
gs
pop
roll
mov
lods
add
and
mov
inc
in
mov
data16
pushf
and
pop
jae
push
repnz
mov
stos
shrl
inc
cli
sbb
sub
add
cmc
pop
dec
and
adc
js
pop
pusha
or
mov
mov
jmp
xchg
dec
xor
nop
pop
test
fidivrs
xor
nop
push
fdivr
pushf
inc
xchg
sub
add
add
mov
inc
ds
fcmovbe
lods
mov
push
stos
push
dec
pushl
fdivs
pop
into
push
out
mov
mov
sbb
mov
push
xchg
rol
ja
ja
mov
sub
sbb
sub
bound
and
in
fiadds
or
movsl
dec
inc
add
test
push
icebp
sub
pop
stos
scas
sub
aaa
cmpsb
mov
lods
cmp
fadd
test
pop
xor
hlt
cmp
jne
cmp
test
ficoml
push
lock
push
sub
dec
cmp
xchg
stos
aad
pop
int
sub
in
inc
push
sbb
stos
push
adc
jns
mov
adc
jle
or
jns
mov
out
add
dec
cmp
loopne
mov
push
ret
or
dec
xor
es
fists
ficoml
inc
inc
ret
dec
outsl
fsubs
insl
xor
and
imul
movsl
mov
mov
jne
or
cs
inc
call
pop
xor
or
cmp
xchg
cmc
sub
jno
sub
fs
rorl
or
xchg
pop
mov
sub
pop
enter
sub
imul
bound
mov
add
mov
and
mov
aaa
mov
cmpsb
mov
and
hlt
xchg
pop
lea
mov
mov
xchg
cmc
cmp
lcall
jge
lods
xor
jge
fdivs
xchg
fs
xchg
lods
fidivrl
adc
aas
mov
fidivrs
mov
sti
cmp
push
test
stos
clc
and
mov
lahf
sub
or
repz
stos
aad
mov
andl
mov
lods
std
pop
add
sbb
mov
les
sub
mov
mov
aaa
push
das
mov
push
cs
jecxz
push
pop
push
or
test
pop
mov
je
aaa
mov
mov
add
outsb
ljmp
scas
cmp
inc
loopne
mov
mov
mov
scas
ret
in
jmp
adc
out
and
in
pop
push
fidivl
xor
in
insl
cmp
add
out
jmp
je
out
or
ljmp
lahf
add
cmpsl
bound
add
nop
fdiv
out
shl
cli
push
and
sahf
push
icebp
mov
test
mov
mov
call
rcll
out
sub
sub
pop
mov
mov
mov
lcall
icebp
sbb
lock
xor
popa
cmc
scas
lock
enter
test
les
pop
imul
aas
xchg
sub
dec
icebp
jecxz
adc
push
adcl
test
icebp
mov
pop
icebp
add
inc
imul
lods
sbbb
push
pop
jg
sub
ja
out
jecxz
adc
leave
es
pushf
sub
sub
loope
repnz
into
or
push
cmp
push
shlb
rorl
adc
enter
cmp
fdivp
mov
mov
nop
movsl
scas
mov
xlat
pop
mov
xor
stos
and
addb
adc
mov
add
lds
aas
stos
inc
mov
cs
push
jbe
xor
add
mov
fsubl
jp
adc
cmp
das
or
pop
cmp
fistl
loop
cmp
or
cmp
add
sub
fcmovb
push
in
mov
push
adc
stos
add
mov
fbstp
jb
inc
jecxz
push
cmp
cs
xor
xor
push
jmp
mov
int
xchg
aam
aam
pop
xor
das
sub
pop
test
out
push
test
pop
cmc
jp
jmp
push
cmpsb
mov
roll
xor
imul
cmp
jmp
cmp
and
insb
test
xchg
out
stos
imul
loop
fld1
out
xor
dec
lret
popf
dec
popa
lcall
pusha
cli
sbb
ret
je
mov
xor
lret
lahf
pop
mov
push
push
test
mov
mov
cmp
fstps
and
cmp
ret
push
mov
shll
jl
sub
jnp
test
imul
dec
dec
mov
aas
clc
jg
in
jnp
js
inc
cld
stos
and
mov
pusha
mov
sub
sbb
mov
or
arpl
xlat
loopne
sub
aas
fiadds
add
gs
mov
push
adc
push
dec
sub
repz
lcall
aas
stc
std
adc
and
cmp
jae
mov
push
jmp
push
xor
pop
sub
aaa
dec
lret
lcall
mull
cwtl
lret
stc
pop
sbb
xor
scas
popa
fcoms
push
orl
pop
lret
fiaddl
mov
inc
fucomp
insl
arpl
arpl
jmp
inc
or
sbb
pop
testb
jns
sub
fdivs
fidivrl
in
xor
mov
jno
cwtl
out
mov
adc
rcl
popf
sub
outsl
out
push
or
sub
and
mov
pusha
dec
add
stos
adc
sub
mov
les
mov
scas
cmp
jno
fimull
mov
push
leave
jae
fiadds
push
test
xor
mov
mov
outsb
imul
inc
enter
mov
push
mov
call
jo
mov
cmp
jp
sbb
push
sbb
into
in
ficomps
pusha
push
fwait
sbb
es
cli
sub
ror
xor
into
fidivs
adc
sub
or
jg
in
push
mov
pop
mov
add
mov
or
test
cmpsl
in
data16
mov
fdivrl
cmp
mov
pushf
pop
jae
push
jle
inc
mov
xchg
fldenv
mov
ret
xchg
ljmp
ss
sbb
pop
stc
leave
daa
add
jmp
ss
cld
movsl
add
repnz
in
cwtl
fidivs
jmp
lds
lret
pop
push
data16
or
lock
cmpsl
xchg
rcl
ljmp
sahf
popa
das
mov
mov
cs
fdivrs
push
insb
cmp
cwtl
xor
das
push
jnp
jl,pt
clc
dec
hlt
pop
jb
pop
in
jb
xor
shrl
adcl
leave
and
adc
cs
push
inc
xor
test
pop
push
xor
and
inc
stos
sub
shll
pmuludq
orb
mov
jo
daa
pop
clc
pop
out
sub
pop
sub
xchg
ret
mov
test
leave
push
xor
mov
mov
pop
stos
int3
xorl
loope
scas
fcmovne
adc
mov
mov
idivb
pop
ret
mov
int3
cli
and
lahf
cs
mov
pop
push
add
cmp
lds
lahf
push
cmpb
cmp
mov
mov
jecxz
addr16
sbb
inc
cmp
jge
pop
jmp
jo
adc
add
call
sub
sti
imul
lods
mov
stos
pushf
sti
mov
test
cltd
cs
jno
xorb
mov
add
sbb
inc
aaa
outsb
sbb
and
daa
dec
ja
and
lcall
lret
xor
ret
sbb
popa
adc
jg
shr
addr16
das
ljmp
mov
mov
js
adc
xchg
push
pop
jbe
inc
push
xor
xorl
xor
in
cld
or
inc
ds
aaa
stc
clc
mov
lods
and
xchg
push
pop
shll
jecxz
and
adc
fcmovnb
outsl
dec
pop
and
int
sub
sub
ss
add
push
jp
sbb
stc
ja
std
sahf
pusha
xchg
xor
pop
lock
jle
jo
xchg
test
mov
xor
xor
add
les
loope
cmp
shrb
mov
push
jbe
mov
lret
out
add
mov
sub
shrb
movsb
jl
push
push
data16
out
stos
adc
or
jge
dec
cmp
mov
sti
push
adc
loope
daa
int3
lock
sarl
imul
bound
cld
cmp
in
subl
cmp
icebp
pop
push
mov
jbe
and
xchg
dec
pusha
cmp
outsb
bound
lret
push
int
xor
pop
in
fs
clc
loop
repnz
arpl
mov
push
sbb
xchg
mulb
into
sbb
dec
in
daa
mov
lods
lahf
cmp
out
cmc
or
aas
cltd
or
push
popf
inc
shll
aaa
xor
push
mov
movb
cmp
and
loop
bound
dec
and
jno
mov
push
jl
fsubrl
dec
inc
sti
sbb
movsb
mov
mov
jl
stos
jmp
imul
enter
cli
inc
inc
cmp
in
xchg
idivl
scas
sub
lea
jne
mov
imul
clc
out
insl
clc
push
mov
scas
inc
lods
mov
imul
jecxz
adcb
sbb
dec
test
addr16
and
fistl
xlat
shrl
push
icebp
int3
repnz
inc
cwtl
sarl
push
in
stos
ret
fxch
add
in
xor
mull
mov
test
mov
inc
stos
mov
add
cli
or
nop
scas
push
add
mov
lret
leave
mov
pushf
cmc
xor
sahf
mov
out
cmc
cld
xor
and
xor
adc
mov
mov
arpl
jno
pop
clc
inc
mov
aaa
xor
inc
aaa
movsl
and
add
mov
in
out
mov
test
inc
mov
inc
or
lods
mov
sub
mov
notb
insl
in
repz
inc
jge
inc
dec
clc
mov
sub
fninit
mov
fbstp
jbe
pusha
out
or
push
inc
mov
pop
sub
inc
hlt
push
push
clc
jo
loope
lahf
cmp
adc
mov
and
fs
mov
mov
cmp
aad
inc
mov
lods
cld
mov
and
xor
mov
xchg
pop
stos
push
cmp
inc
gs
mov
stc
xor
sbbl
into
jle
dec
in
lahf
xchg
xchg
lret
dec
jb
sbb
rorb
or
mov
leave
push
jmp
inc
mov
loope
fisttps
mov
mov
xchg
negb
pop
jo
mov
adc
stos
add
push
jo
arpl
mov
enter
push
cmp
insb
adc
fsubs
test
jge
loop
xchg
or
ja
push
or
jmp
and
mov
jne
repz
faddl
xlat
lods
mov
movsl
lods
adc
xlat
lcall
cmpb
pop
mov
xor
push
adc
xor
and
fnstsw
jecxz
enter
fisttpll
mov
push
test
lods
pushl
xchg
or
sbb
mov
inc
push
in
jbe
je
mov
inc
push
dec
popa
inc
and
push
ret
dec
stos
mov
adc
pop
pop
push
movl
cmp
das
dec
nop
cmp
pop
mov
out
and
rol
xor
dec
sub
ret
or
ja
cmp
mov
mov
pushl
fadds
mov
push
cmp
movsb
shl
jmp
dec
jno
notb
ret
add
sbb
and
js
sahf
push
rcr
jne
xor
pushf
xor
dec
fildl
leave
cmpsl
mov
inc
xchg
jns
dec
jno,pn
mov
cmpsl
mov
sahf
repz
adc
cli
jge
adc
stos
insb
push
in
sub
ds
xchg
pop
imul
int
or
sbb
pop
mov
xor
insl
xor
push
sub
fsubrp
xor
sub
int
inc
idivb
insb
jo
push
or
scas
sub
stos
insb
into
push
pop
cmp
leave
imul
ret
ljmp
push
testl
xor
out
and
or
push
add
aam
inc
pop
int3
das
hlt
test
mov
cmp
out
andl
push
shl
fldl
inc
cld
mov
mov
jl
jne
out
push
mov
gs
mov
mov
outsl
cmp
out
fistpll
mov
sub
fldcw
mov
rcrb
ja
inc
subb
popa
mov
mov
add
fistps
cmp
ret
incl
fistpl
sbb
fildl
fstpt
ds
in
xchg
test
inc
sub
movsl
push
pop
jnp
mov
iret
mov
popa
les
into
mov
in
nop
mov
pop
jge
repz
xor
mov
je
inc
inc
aas
and
aad
mov
popa
fs
loopne
divb
mov
adc
test
insl
lahf
subb
sahf
int
xor
pusha
outsl
mov
push
repz
int3
jge
mov
in
arpl
mov
mov
in
sub
sub
or
daa
lcall
cmp
repz
rorb
pushf
cmpsb
add
sub
push
dec
add
dec
out
rcll
aas
into
sbb
mov
sbb
fdivrs
cmpsl
dec
scas
mov
out
adc
movd
sub
int
gs
sbb
inc
inc
push
jmp
fistpll
in
push
inc
test
loop
adc
sarb
xor
idiv
test
jmp
fnstenv
pop
insl
add
lds
cld
push
add
and
jge
cmp
enter
mov
sbbl
cltd
hlt
movsl
mov
sub
push
xor
daa
mov
scas
es
or
mov
pushf
rorl
insb
fdivrs
push
jg
dec
and
xlat
pop
and
xor
int
stos
sti
addr16
mov
out
lds
ss
les
sub
iret
std
push
mov
sti
pop
fdivr
sub
adc
xor
pop
push
adc
loopne
cmp
mov
push
insl
dec
jmp
xor
jno
aam
pop
inc
test
fstps
out
xlat
sbb
int
sbb
and
xor
mov
xchg
sub
fbstp
adc
fdivrl
cmp
cli
rclb
popf
cmp
int3
movsl
fcoml
in
insb
push
mov
test
notb
jmp
lret
mov
push
dec
jne
mov
lock
jno
sahf
xor
xchg
mov
jp
sbb
fsubrl
scas
frstor
inc
fisubrs
jl
push
dec
pop
xor
sub
lcall
push
fistpll
mov
imul
cmp
addr16
std
dec
xlat
ret
sbb
daa
mov
mov
mov
and
and
daa
fmul
mov
cld
lods
adc
mull
rol
sub
adc
jle
sub
inc
outsb
lcall
mov
or
test
arpl
sbb
das
xchg
sub
stos
cld
sbbb
test
out
lea
mov
cmp
xchg
lcall
jbe
jns
or
cmp
inc
and
dec
leave
jle
jge
mov
sbb
es
sbb
addb
je
ja
mov
sub
sti
mov
dec
add
mov
bnd
mov
xor
loopne
push
aam
jmp
call
push
in
in
xor
mov
loopne
cs
clc
push
mov
pop
lret
pop
sub
add
push
shl
mov
cmpsl
adc
addl
adc
jae
dec
loopne
mov
lock
xchg
shrl
inc
pop
pop
xchg
mov
xchg
and
add
cwtl
cmp
lret
add
jb
mov
std
dec
cmpb
xchg
push
mov
mull
pop
cmc
sarl
cli
ljmp
fcom
bound
jns
in
jge
sar
jecxz
xor
in
test
push
xor
aaa
sbb
dec
jo
push
mov
das
lcall
imul
mov
sti
gs
sbb
stos
push
in
mov
xor
hlt
cmp
arpl
aas
test
pushf
jb
mov
daa
loop
nop
mov
cmpsb
xlat
or
ret
xor
mov
xor
mov
dec
sub
jmp
sub
loope
cwtl
mov
mov
mov
pop
sub
cmp
cwtl
data16
and
push
setb
sub
pusha
ret
cld
jno
mov
popf
in
pop
mov
insb
scas
sbb
fnstenv
dec
jecxz
mov
sbb
add
add
mov
cmc
adc
cs
jl
cwtl
rdtsc
test
aaa
stos
mov
xor
xchg
sbb
add
push
xchg
mov
arpl
les
add
mov
dec
jno
or
adc
les
out
dec
jno
stos
addr16
cwtl
es
add
lods
jg
pop
out
sahf
decb
flds
test
sub
rcr
jb
aas
addr16
test
fstps
stos
ljmp
pusha
fmulp
cmp
add
sub
aad
les
mov
lds
ret
pop
std
and
cld
imull
in
insl
xchg
imul
gs
push
fcompl
test
popf
mov
lret
fiaddl
pop
push
xchg
xor
cmp
ss
jmp
mov
imul
out
push
fiadds
dec
jge
inc
arpl
pop
mov
pop
mov
in
sar
sahf
mov
push
dec
pop
lds
mov
les
mov
or
stc
sbb
pop
in
xorl
addr16
ja
call
xor
loopne
sbb
sub
imul
leave
loope
jecxz
enter
or
xor
lods
or
jno
lcall
xchg
mov
mov
push
push
cwtl
into
std
lods
leave
jg
lret
mov
lds
insb
clc
jne
scas
test
mov
into
inc
mov
pop
sbb
push
xchg
ja
mov
add
decb
jo
mov
cmc
jge
nop
jg
dec
jo
repz
add
mov
xor
lea
dec
xchg
push
fstpt
push
xchg
push
jmp
shll
incl
add
jb
inc
or
xchg
orb
inc
cmpsb
testl
sbb
cmp
test
shrl
scas
mov
rcrl
xor
jne
cmp
call
pop
stos
push
in
xor
mov
and
push
jnp
xchg
mov
cwtl
dec
fwait
jp
fcompl
test
into
pop
fdivrp
call
xor
adc
scas
jecxz
mov
mov
in
xchg
mov
lea
inc
insb
cmp
std
mov
sub
stos
cmp
jns
dec
repz
fs
int
push
hlt
add
call
rorb
pop
lret
cmp
inc
push
inc
mov
sub
pop
jns
jp
sbb
scas
test
cs
les
sbb
jp
sbb
out
sbb
popa
jmp
data16
stos
jmp
dec
cmp
adc
test
xor
xor
cmp
std
stos
cwtl
mov
mov
int3
dec
loopne
mov
mov
pop
add
cmp
jecxz
mov
shl
daa
lret
shll
push
clc
ja
loope
cli
call
fiaddl
cmpb
shrb
jecxz
scas
daa
in
scas
scas
inc
int
jns
sbb
lock
fbld
into
call
shr
sub
inc
mov
xor
loop
aam
loope
jno
sahf
mov
xor
xor
lds
mov
aaa
jnp
lock
lds
aas
lret
outsb
in
sbb
cmp
sbb
outsb
ja
dec
insb
jae
stos
adc
sbb
aam
and
jg
sbbb
shrb
or
add
xor
outsb
cmp
stc
push
out
out
bound
mov
jg
lds
adc
or
push
push
xchg
scas
or
movsb
push
jae
add
inc
sbb
cli
dec
mov
dec
cmp
imul
setns
pop
xlat
inc
pop
push
jge
jbe
ljmp
jne
shufps
out
aaa
jnp
jnp
fisubs
or
popa
ret
loopne
dec
pop
pushf
jnp
faddl
xchg
and
rol
sbb
ss
adc
inc
pop
xchg
adc
dec
jg
js
stos
in
or
movsb
xor
imulb
push
push
je
or
push
mov
inc
data16
xchg
movsb
mov
push
xor
adc
dec
repz
cmc
ror
inc
push
cmp
push
and
mov
out
sub
push
sbb
pusha
cmp
jle
pop
mov
fildll
rorb
bound
outsl
add
pop
sbb
jl
fnstenv
dec
dec
dec
dec
subl
push
dec
in
stos
clc
das
sub
outsl
pop
jmp
loop
adc
dec
std
cmp
lods
adc
out
inc
sub
sbb
push
in
sub
loope
test
push
leave
rcll
popa
xchg
addr16
sahf
fcmovnb
xchg
stc
or
dec
mov
adc
das
flds
fucom
lret
sub
cmpsl
leave
pop
mov
cmp
jmp
les
out
stos
xor
push
cmp
in
add
jno
sbb
and
mov
cld
enter
xlat
or
fs
inc
outsl
fidivrl
push
mov
lret
rclb
xor
pop
xor
cltd
pop
pusha
insl
sahf
hlt
xlat
std
adc
js
cltd
pop
adc
sbb
xchg
push
sub
movsb
mov
xor
popa
pop
nop
icebp
sub
jbe
mov
shlb
jb
sahf
movsl
test
cld
test
jmp
inc
push
incb
loope
and
das
outsb
sub
fildll
out
or
lock
sbb
gs
pop
nop
movl
repz
mov
lods
incb
push
mov
xchg
xchg
jo
push
mov
jns
cmp
sub
inc
sti
shll
and
xor
test
sahf
stos
dec
loope
pop
push
adc
out
cmpsl
stc
push
push
iret
popa
xchg
xor
sbb
std
lea
dec
sub
mov
js
mov
pusha
xor
sbb
enter
mov
cmp
sub
jo
mull
dec
pop
push
inc
test
or
jg
popf
loope
jnp
aaa
cli
mov
xor
leave
int
add
pop
xor
pushf
jle
fnsave
andb
rorb
xor
movsl
repz
adc
jb
sub
call
sbb
ds
cltd
cli
or
frstor
lret
sub
sbb
cmc
in
inc
cmp
sti
dec
jecxz
pop
ret
out
mov
mov
jl
jne
cmp
test
xchg
add
jmp
ficoms
sbb
dec
decb
repnz
insl
cmp
movsb
xor
adc
pop
pop
sarl
sub
ret
push
adc
push
enter
lods
cmp
inc
xlat
or
das
jge
push
loop
or
xor
fsubl
mov
sahf
push
es
into
xor
mov
clc
and
adc
adc
mov
jmp
dec
adc
inc
xor
xchg
rolb
pop
ret
shrd
push
movsb
shlb
aas
xlat
and
std
movsl
aam
sub
std
repz
xchg
adc
fadds
negb
into
xorb
pop
sub
and
icebp
adc
test
sarl
pop
xchg
inc
fnstcw
cmp
push
popl
cs
xchg
ret
or
add
push
xor
xor
rcl
mov
fimuls
and
mov
mov
sbb
insl
ret
std
xchg
mov
xor
sti
adc
cmp
mov
sub
outsl
pop
pusha
jl
ja
mov
cmp
lea
mov
dec
ds
mov
dec
push
popf
pop
lds
mov
xrelease
stos
mull
mov
mov
dec
movsl
dec
rorb
mov
jp
add
adcl
ja
sbb
pop
push
insb
dec
cmp
adcl
xchg
add
xlat
cld
fxch
outsl
sub
push
mov
sbb
out
clc
dec
inc
test
mov
fidivrl
clc
iret
xor
fdivp
ficoml
cltd
mov
fwait
lahf
repnz
call
dec
mov
mov
enter
push
sub
sbb
jecxz
inc
cmp
fmuls
sub
insl
insl
sti
shr
sbb
cli
sti
sub
xor
xor
lret
cmp
xchg
mov
jnp
cmp
out
outsl
jae
pop
pop
or
sahf
mov
inc
mov
jmp
int
hlt
mov
in
bound
mov
shll
mov
pop
pop
inc
adc
in
dec
push
add
sub
cmc
xchg
jb
push
pop
ss
pop
jns
mov
in
mov
sub
test
roll
test
hlt
cli
jnp
nop
repz
lods
andl
xor
loope
cmp
andl
arpl
mov
fimull
fstpt
lock
call
fsub
das
cwtl
mov
bound
or
mov
movq
xor
xchg
adc
jns
xor
xlat
mov
call
cli
push
and
ljmp
push
fsubs
insb
pop
scas
sbb
pop
arpl
dec
adc
out
cmc
pop
sub
jl
cmp
into
adc
loop
and
adc
sarl
lahf
ljmp
test
fabs
xchg
xchg
cmpsb
xchg
test
ffree
push
pop
ret
add
cs
pop
push
sbb
jmp
stos
enter
ja
jle
ret
jbe
sbb
add
xchg
add
iret
mov
in
mov
sbb
notb
ret
scas
cmc
xor
dec
cltd
jns
mov
jmp
or
dec
jg
sbb
hlt
insl
lds
or
out
mov
lds
leave
fwait
stos
jnp
mov
test
out
inc
push
jns
addr16
shrl
jae
adc
stos
pop
dec
inc
addr16
ret
inc
sbb
fisubs
es
sub
fidivrl
cmp
sti
xchg
cli
fidivrs
cmp
jge
out
adc
inc
cmp
sahf
inc
lea
jb
push
push
xor
in
popa
sbb
clc
pop
mov
jno
lock
dec
inc
in
rolb
pop
clc
js
enter
jno
aas
jae
enter
sbb
aaa
fiaddl
mov
xor
imull
mov
and
and
test
dec
stos
mov
xor
sub
mov
mov
mov
dec
cmp
lods
gs
int3
ret
pop
cmc
sahf
push
fldl
shl
jne
aas
ja
leave
xchg
popa
xlat
test
mov
mov
ret
std
call
cld
xor
push
push
scas
fstp
and
loope
pop
lods
xchg
add
push
push
mov
xor
fnsave
lds
mov
cmpsb
jbe
mov
test
adc
add
sub
out
xor
push
lahf
rorb
int3
push
dec
sti
clc
push
xor
addl
shll
mov
leave
push
or
popa
inc
xlat
dec
jo
pop
popa
es
add
insb
mov
jbe
push
cmp
jo
and
xor
test
lret
inc
sub
inc
dec
ss
jmp
mov
icebp
repnz
lods
jl
jns
stos
addr16
jle
scas
aad
xchg
mov
xchg
js
sarl
gs
addr16
int
mov
cmp
mov
shll
rcll
jp
fnsetpm(287
cmp
int3
dec
das
mov
sub
and
notb
mov
mov
mov
je
jbe
dec
enter
in
gs
int
add
jbe
xor
push
mov
or
and
adc
cld
mov
and
pop
cmp
pop
sub
mov
insl
mov
xchg
add
mov
out
xchg
out
xor
sbb
inc
push
hlt
outsb
xchg
shll
jmp
lret
hlt
mov
push
jmp
and
clc
mov
dec
cmp
mov
shl
lock
pop
out
lret
push
inc
test
xor
call
and
jnp
imul
adc
fidivl
mov
cld
pop
sub
mov
jle
xchg
stos
test
clc
sbb
mov
push
dec
hlt
pop
and
in
jns
adc
cmpsb
push
out
jns
scas
aad
adc
aad
clc
fnstcw
shll
stos
inc
jns
in
push
add
sub
cmp
neg
jno
test
jne
cmp
cmp
int3
aas
jno
mov
rcrb
mov
in
scas
ror
xor
xchg
cmc
ds
jl
sub
and
vmwrite
stos
daa
and
push
sub
mov
push
lods
or
pop
push
dec
lods
cs
lds
mov
orl
push
lock
push
dec
add
hlt
xchg
ret
int3
cwtl
test
cmp
sub
or
pop
push
ret
sbb
mov
js
fcomps
xor
cmpsl
aam
arpl
int3
daa
fstpt
push
arpl
outsl
jg
sub
jg
ja
inc
xor
cli
repnz
movb
pop
ds
roll
fwait
movsb
push
leave
push
fstps
push
movsl
sbb
add
mov
mov
roll
or
add
scas
test
or
into
lahf
sbb
insl
cld
mov
push
or
mov
loop
js
repnz
lret
mov
scas
inc
inc
repz
inc
cmp
in
xchg
mov
dec
sbb
adc
cwtl
sub
aam
repz
mov
aam
sbb
pop
xor
icebp
sub
out
pop
loopne
aad
insl
adc
xchg
or
sbb
fwait
sub
push
ljmp
jge
loop
and
pushf
pop
xor
pop
ret
sub
cmc
sti
enter
int3
xor
sti
cmp
xchg
hlt
add
adc
jp
jbe
cmpsl
jae
or
imull
dec
in
fdivrs
mov
and
iret
insl
testl
or
sbb
push
add
cmpl
rcrb
and
add
sub
jecxz
mov
mov
push
pop
push
sahf
push
or
jg
les
or
inc
lret
in
add
push
push
fistl
fistpl
xchg
adcl
std
pop
clc
shrb
cmp
mov
sbbl
xor
int3
push
mov
popl
test
adc
je
cmp
adc
cld
js
imul
mov
add
cltd
pop
xchg
sbb
pop
sahf
lret
movsb
adcl
cmp
mov
inc
ret
xchg
iret
sbbl
push
lds
mov
push
sbb
stos
lods
je
dec
insl
xor
fwait
stos
jp
cmpl
push
sbb
sbb
in
inc
sbb
push
xor
ret
loopne
sarl
or
adc
nop
mov
jge
sarb
add
pusha
fcomps
push
xchg
popa
cmc
mov
mov
jnp
shrl
push
test
mov
sub
outsl
repz
sti
jae
dec
inc
add
stc
rcrl
in
xor
dec
popa
leave
les
inc
mov
rcll
and
cmp
divb
add
cwtl
insl
mov
imul
mov
mov
lahf
sahf
dec
ficoms
aas
ljmp
fs
xor
mov
add
es
push
inc
mov
jmp
sbb
mov
lock
aas
sub
adc
dec
lods
loope
dec
cmpb
scas
shl
adc
out
cmp
mov
xchg
test
mov
lock
fstpl
stos
fisttpl
adc
fs
jge
lock
loope
xor
fisubl
lock
inc
jle
cmp
xlat
push
repnz
xor
int3
imul
cmp
out
pop
imul
cmp
jno
sbb
xchg
mov
dec
cli
xor
pop
cld
pop
add
mov
scas
pop
inc
dec
into
cmp
cwtl
sbb
les
xor
je
push
call
bound
xor
loope
rorb
test
lods
in
adc
pop
aaa
xchg
lcall
popf
shlb
ljmp
add
and
ljmp
iret
ret
fidivl
hlt
test
test
mov
mov
sarb
sub
and
inc
or
inc
pop
or
stos
push
mov
inc
xchg
cmpsb
clc
movsb
and
rol
push
mov
adc
test
loopne
roll
sub
js
in
out
inc
aaa
push
sub
enter
pcmpeqb
cmc
dec
fcmovu
aas
sbb
mov
sti
popa
push
lcall
call
mov
jl
rclb
dec
jmp
test
adc
push
mov
xchg
popf
fidivs
add
jg
cs
div
out
test
mov
mov
push
dec
dec
and
cld
popa
or
cmpsl
xor
stos
mov
inc
xor
pushf
rcr
rolb
pop
sub
aad
lcall
xchg
in
in
iret
xor
lahf
and
xlat
fiadds
repz
xchg
pop
sahf
add
sub
jg
test
pop
pushf
xor
sub
rcrb
xchg
fs
pushf
pop
mov
dec
xor
sub
leave
lock
sbb
pop
lcall
push
je
fdivl
mov
fwait
bound
pop
call
mull
lret
inc
mov
or
mul
cmp
xlat
jb
sbb
js
call
pop
sbb
push
std
push
inc
or
lret
xchg
push
cs
fcoms
adc
mov
pop
out
pop
ss
mov
cmp
or
or
mov
inc
outsl
push
dec
sub
sub
clc
pusha
jb
push
cltd
xchg
xor
test
sub
sahf
adc
aam
dec
aam
test
in
cwtl
mov
jmp
out
in
insl
lret
cmc
out
dec
add
imul
or
gs
cmpsl
sub
mov
in
test
jecxz
sub
lods
sub
add
inc
subb
cmp
icebp
test
jle
push
xor
data16
push
scas
adc
jo
mov
sub
cmp
mov
push
mov
push
test
lret
scas
jg
mov
xchg
aam
jbe
pushf
sub
repz
cmp
jge
outsb
xchg
aaa
cli
lock
stc
xor
jge
nop
mov
mov
sub
push
sub
leave
imul
inc
mov
mov
sbb
mov
jno
push
cmp
add
mov
and
imul
stos
pop
ficomps
dec
shr
sub
push
push
cmp
in
mov
out
xchg
cmp
and
jbe
xchg
xchg
movsb
les
mov
xor
mov
fdivs
lea
lahf
test
sbb
pop
test
enter
insl
cmp
lret
je
pop
ret
andl
mov
shrl
outsb
cmp
push
sbb
mov
mov
pop
cltd
repnz
sub
jg
mov
mov
lods
imulb
mov
fnstenv
mov
lret
in
pop
mov
pop
dec
push
repnz
mov
jp
mov
push
leave
add
push
pop
outsl
sub
or
push
jbe
je
lds
lcall
xor
push
jnp
enter
aaa
sbb
sahf
negb
or
jb
pop
push
sub
vpunpckhwd
cmp
mov
mov
add
and
sti
dec
sbb
shl
ds
data16
arpl
cmp
stos
movsb
sub
xchg
aas
out
xor
lret
cwtl
insb
sbb
push
sbb
ljmp
paddsw
insb
pop
inc
push
mov
and
adc
jp
adc
mov
fs
mov
fdivs
mov
iret
push
std
rcll
push
insl
push
nop
sub
mov
test
cmpsb
lahf
xor
mov
sbb
cwtl
lock
inc
movsl
xchg
stc
adc
and
sub
cmp
aam
push
fwait
xchg
in
mov
dec
dec
outsl
rep
ss
mov
push
xor
adcl
scas
mov
lahf
mov
ss
aas
ja
dec
loop
movsb
sub
cmpb
test
adc
das
sbb
stc
mov
popa
lcall
pop
adc
or
lds
mov
xchg
sub
ss
pop
cs
std
push
push
fcoms
xchg
or
call
jmp
data16
shlb
mov
sbb
pushf
popf
imul
popf
outsl
fwait
orb
aaa
pusha
sbb
jns
into
movsb
jl
je
arpl
sbb
adc
sbb
test
fstpt
and
mov
xchg
mov
inc
repnz
cmp
lock
mov
inc
inc
sub
jbe
mov
mov
push
fldenv
loope
mov
es
orl
int
rorb
xchg
sti
fstpl
call
lds
pop
mov
sub
xchg
sbb
dec
arpl
jae
mov
insb
jne
fsub
cmp
in
xchg
lea
or
mov
and
call
lret
fidivl
adc
mov
fsubrp
pop
mov
mov
call
mov
inc
loopne
and
add
out
xchg
mov
xchg
add
cmc
into
imul
mov
sahf
and
aam
fsubrs
jp
fwait
es
mov
gs
push
xchg
out
mov
popl
and
outsl
sub
pushf
xor
ja
xor
in
fsubs
outsl
jnp
subb
imull
pop
sub
sbb
xchg
pop
subl
adc
ja
out
push
sub
fdiv
and
aas
ja
popf
or
and
scas
add
and
pop
jne
mov
lods
xchg
arpl
and
mov
fiaddl
or
mov
xlat
push
push
push
mov
inc
push
jl
inc
inc
inc
add
xchg
pusha
mov
mov
adc
clc
daa
pop
mov
sub
shlb
sub
fcomi
sub
arpl
cmp
gs
test
out
cmp
adc
test
call
sti
aas
daa
mov
or
icebp
inc
out
mov
pusha
mov
lods
adc
roll
mov
loopne
js
into
arpl
inc
mov
inc
hlt
and
sbb
cmp
lods
xchg
mov
xor
sbb
leave
pop
inc
fiaddl
in
cmp
jecxz
ret
imul
push
add
add
hlt
sub
jmp
hlt
or
neg
cmpb
popf
cmp
cld
xchg
dec
cmp
or
ret
dec
add
das
popa
test
popf
push
icebp
rorb
push
xor
or
and
enter
in
test
lcall
bound
loopne
in
stos
and
mov
sbb
push
mov
xor
sbb
ds
jae
mov
push
sbb
or
add
ljmp
iret
cmp
mov
adc
sbb
ss
mov
insb
test
rclb
xchg
push
jp
xchg
aam
test
mov
subb
sub
cmpsl
fadds
mov
push
sub
adc
push
addr16
icebp
pop
xchg
ds
inc
mov
or
scas
sbb
out
rcrb
test
and
mov
aas
jno
jg
mov
sub
aad
adc
in
loope
inc
jns
leave
mov
mov
mov
dec
lock
fistps
jne
mov
push
push
xor
jge
inc
stos
xor
jge
adc
fcmovb
xor
push
pop
js
in
lret
fsts
out
movsb
mov
test
sbb
and
lock
pusha
lea
outsb
xchg
xlat
xchg
in
loop
repz
repnz
cmp
adc
aas
in
inc
push
fisubs
insb
push
jp
pop
hlt
addl
cmp
mov
loop
daa
xor
or
mov
cld
and
popf
outsb
sub
xchg
jmp
adc
fstpt
pushf
mov
aas
in
fmull
fsubl
dec
enter
add
daa
call
adc
imul
jo
mov
enter
cwtl
mov
pusha
in
imul
icebp
adc
sub
cwtl
mov
clc
scas
ja
sub
adc
mov
test
adc
out
cmp
push
mov
xor
repz
cmp
sar
subb
push
pop
push
or
call
sbb
lcall
cmpsb
jecxz
xlat
int3
sub
adc
outsl
rcrb
or
mov
adc
lds
mov
les
lods
sbb
cmp
lods
inc
stos
and
addr16
push
xchg
cmp
xchg
bound
add
mul
xor
insl
cmpsl
add
jmp
movl
dec
cmpsl
stos
scas
lret
pop
sub
dec
push
insl
cli
and
pop
inc
mov
idiv
aad
fnstenv
mov
data16
xor
das
scas
inc
pop
mov
sub
jbe
jp
mov
sbb
dec
or
icebp
lods
jmp
mov
test
je
dec
mov
ds
sub
push
cmovne
mov
stos
pop
fstl
xor
dec
jle
data16
fld1
dec
mov
inc
sub
add
inc
les
dec
ljmp
mov
and
test
pop
sarl
test
popa
add
jno
fbstp
mov
sub
cmpsl
fwait
bound
sbb
in
fdivrs
adc
clc
push
cwtl
loopne
and
sub
je
mov
ret
stos
ret
icebp
mov
in
adc
xlat
xor
dec
shll
aam
popf
cmc
ja
pop
mov
mov
add
lock
cmp
sub
or
lea
cmp
dec
push
test
mov
test
std
test
cmc
pop
repnz
adc
icebp
or
aam
ss
pop
push
ljmp
out
xor
pop
les
xlat
pop
adc
inc
inc
and
lahf
sbb
jmp
lock
jmp
and
mov
add
adcb
sbb
mov
push
push
mov
dec
fstpt
inc
xor
mov
rcrb
repnz
loopne
loopne
xchg
iret
orb
and
adc
mov
daa
sti
jns
jnp
push
fwait
mov
loopne
xor
xor
out
mov
add
push
fisubrl
mov
and
cmp
jecxz
jg
cltd
mov
in
movsb
or
fmul
es
jmp
and
hlt
mov
mov
dec
mov
out
mov
rcr
xor
pop
pop
push
not
sti
bndldx
arpl
popf
or
sub
shl
mov
xchg
jl
maskmovq
divl
cmovs
addr16
roll
sbbb
xor
xchg
sub
add
arpl
dec
aas
jo
jmp
cmp
or
jecxz
mov
inc
ljmp
hlt
out
dec
jge
movsb
push
ss
sbb
sub
jp
and
mov
add
push
psubsb
or
addr16
xor
mov
popa
dec
mov
pop
cmp
shlb
and
outsl
xchg
xor
or
xor
xchg
in
jno
inc
jge
movsb
out
and
mov
and
popf
mov
lcall
sub
test
pop
loopne
test
sti
pop
test
les
es
cmp
popf
sbb
cmpsb
push
repnz
pop
adc
jo
or
mov
mov
lahf
pop
enter
sahf
loope
test
sar
xor
fsubrs
arpl
cmp
ds
xchg
push
xor
push
jge
fidivl
arpl
daa
lret
popa
jno
int
pop
mull
or
add
sahf
shrl
adc
popa
cmpsl
jecxz
dec
inc
mov
sbb
test
out
aad
fs
fisubrs
out
js
test
xorl
xchg
sub
sub
je
test
adc
add
paddusb
lods
into
mov
xchg
mov
ret
call
nop
sbb
xorl
push
rorb
jp
stos
arpl
pusha
out
movsb
and
rol
sub
mov
into
popf
mov
jg
jg
pop
mulb
mov
mov
push
stos
sbb
das
incb
std
cmp
mov
xchg
push
pop
or
hlt
dec
std
or
lds
xchg
cwtl
cmc
jmp
push
data16
sbb
dec
mov
lods
add
adc
out
aad
add
dec
clc
je
sarl
dec
sbb
push
arpl
sti
mov
pop
lea
idivb
xor
sub
push
pop
adc
fldenv
sub
push
sarb
mov
inc
and
jb
push
xchg
xchg
daa
aad
lahf
and
clc
ja
mov
lds
add
push
pop
or
mov
mov
pop
and
mov
fwait
mov
or
xchg
mov
sub
loopne
mov
mov
mov
test
popf
mov
inc
jge
inc
sub
xchg
mov
cmpsb
movsb
in
out
call
cmp
and
or
pop
js
mov
inc
push
fwait
repz
jge
fs
push
jne
sbb
jg
xor
jl
add
and
movsb
pushf
mov
mov
lret
jbe
jmp
pop
sbb
repnz
lods
xchg
test
loop
pusha
mov
pop
popf
ret
fists
or
sti
and
or
xor
cmpsl
mov
and
aam
jecxz
mov
add
dec
push
add
test
push
fldcw
das
std
sub
xor
insb
ss
xchg
imul
lcall
lahf
push
and
or
xor
pushf
add
sub
dec
pop
sub
fstps
adc
sub
test
into
int
fldt
inc
cmc
sub
jno
enter
test
and
cmc
mov
xchg
dec
hlt
clc
xlat
int3
outsl
cwtl
pop
dec
test
hlt
adc
push
sbb
hlt
loopne
shlb
pushf
and
fimull
insb
or
and
pop
lcall
jno
xor
pop
test
push
lock
mov
mov
mov
fstps
xor
sbb
frstor
imul
ret
mov
aad
sbb
push
jo
shrl
test
shll
add
inc
mov
into
push
jp
aam
das
jl
mov
push
rcr
xor
xchg
jbe
enter
test
jmp
dec
sub
mov
out
les
jl
stos
jl
fidivrl
sub
add
ret
jnp
ret
jns
push
fsubrl
jp
adc
cmp
jecxz
in
imul
loope
loop
dec
mov
clc
enter
add
mov
sbbl
mov
xor
cltd
push
mov
jne
sub
mov
xchg
pop
mov
pop
dec
cwtl
xor
cmpsb
test
and
jmp
loop
clc
pop
fisubs
insl
shrl
enter
pushf
inc
mov
and
sti
adc
and
fnsave
imulb
pushf
ljmp
push
adc
andb
clc
jg
jns
ljmp
popa
push
fadds
jno
sbb
cmp
fdivl
add
jg
clc
test
insl
shrb
loopne
scas
push
in
popf
inc
in
ljmp
fldl2e
add
jae
mov
sahf
stos
ja
mov
mov
fcmovbe
es
aam
lret
js
leave
imul
mov
push
idivl
adc
cmpsl
or
pusha
sbb
dec
fldenv
dec
ljmp
inc
std
sub
xchg
in
es
rcrb
xchg
mov
lcall
cwtl
sbb
inc
or
adc
arpl
pop
fdecstp
cmp
mov
pop
rol
filds
stos
mov
jle
mov
cmpsl
mov
adc
roll
ret
dec
sub
out
arpl
pop
fisubl
neg
shll
lret
lods
adc
scas
lds
push
icebp
loop
add
lods
mul
inc
add
sarl
push
inc
cwtl
push
and
dec
push
inc
adc
sbb
leave
ss
fisubrs
shl
fsubs
mov
movsb
mov
push
inc
add
jge
fdivs
fnstenv
mov
lret
or
push
cmp
hlt
push
stc
dec
sbb
scas
xchg
sub
or
mov
xchg
fdivs
jge
je
popa
dec
jb
fildll
push
je
adc
sub
cltd
arpl
imul
push
inc
out
cld
in
or
sub
xor
mov
jge
inc
jle
adc
xor
popa
dec
ljmp
ss
movsb
je
shrb
insb
push
movsl
mov
and
out
mov
sbb
pop
fnsave
jle
pop
out
and
mov
test
add
adc
mov
cmc
adc
gs
fwait
sahf
pop
jne
call
mov
test
pusha
lds
lock
pop
push
hlt
push
pop
mov
out
inc
mov
sbb
or
mov
sahf
sbb
sub
add
inc
rcrb
sbb
movsl
jns
cmp
pop
xor
xor
and
sub
out
in
jno
inc
lret
cmp
fs
and
cmp
leave
sbb
aad
sub
push
lret
inc
push
addb
cmp
add
repnz
lret
xchg
xchg
xchg
mov
insl
lahf
add
repz
or
scas
add
pop
out
add
sbb
daa
and
mov
add
sarb
dec
pushf
lds
stos
adc
and
jns
daa
shll
mov
sbb
dec
push
jle
pop
movsb
adc
cmp
scas
mov
nop
out
dec
and
lds
xor
jae
cmp
mov
adc
clc
pop
popa
sbb
paddsw
nop
insl
cmp
mov
subl
sub
lods
xchg
popa
mov
xchg
arpl
je
fsubrs
or
sarb
rclb
test
and
loopne
xor
pushf
sub
stos
mov
adc
adc
xor
dec
stos
test
add
add
push
xchg
into
mov
mov
cmp
xor
cmp
dec
daa
ljmp
jb
mov
loope
add
and
push
lds
shrb
jne
mov
sahf
out
cs
mov
inc
xchg
std
dec
outsl
imulb
fnstcw
adc
call
xchg
fstcw
test
test
jo
mov
push
inc
and
loop
push
cld
jecxz
xor
push
mov
adc
mov
sub
out
mov
add
bound
or
lds
shll
and
outsb
stos
mov
pusha
cwtl
xor
or
adcl
arpl
xchg
lcall
movb
xchg
push
call
push
das
jae
arpl
xchg
jo
push
fdivl
jge
mul
or
mov
insb
jge
lcall
cmpsl
push
mov
pop
mov
addl
out
daa
aas
fwait
cmp
jmp
pop
push
ds
jge
xor
loop
cmp
add
sbbb
ja
inc
mov
jnp
sarl
nop
cld
dec
and
push
popa
popf
test
imul
subl
mov
inc
aas
outsl
call
cmpsb
mov
inc
mov
addr16
inc
inc
mov
aaa
xor
and
cmp
push
dec
adc
xor
mov
inc
mov
js
dec
sbb
insl
push
movb
jp
outsb
subb
repnz
cmp
sub
push
pop
int3
sub
cmc
mov
std
notl
inc
fmull
js
daa
fcomps
inc
insb
push
or
pop
mov
ds
stos
repnz
stos
rcr
int3
sub
xor
lds
mov
cld
imull
lcall
push
fildl
mov
fcoml
dec
daa
sub
adc
mov
mov
test
loope
pushf
mov
fucomp
xchg
pushf
dec
xchg
push
xor
cmp
dec
mov
andps
sbb
lret
lea
mov
outsl
pop
loope
inc
push
mov
ds
repnz
mov
pop
dec
movsb
push
lock
xor
add
hlt
test
cmpsl
push
mov
xchg
rorb
nop
jmp
xor
repz
lea
push
cmp
or
xchg
js
subl
mov
pop
inc
bswap
fldcw
sbb
push
dec
sub
mov
mov
sahf
jl
lcall
sbb
add
ret
fwait
push
std
scas
mov
mov
neg
stos
and
fstps
pop
loopne
sub
cmpsb
push
imul
push
or
leave
push
sub
mov
pop
aad
pop
faddl
lods
insb
push
or
mov
mov
rolb
test
loop
test
loop
test
loop
test
loope
test
loope
test
loope
test
loope
test
loope
test
loope
test
loope
test
loope
test
loope
test
loope
test
loope
cmpsl
ljmp
jge
mov
call
sub
xor
mov
pusha
cmc
jge
bound
pop
sub
jno
pop
mov
adc
or
ljmp
xor
cmp
negl
sbb
lods
rcll
in
inc
div
aam
add
sub
repnz
dec
add
test
es
pushf
and
adc
std
aaa
ret
xchg
loope
adc
in
mov
sub
mov
push
add
mov
ljmp
inc
cli
jae
adc
mov
pop
cmc
cmp
sub
js
shlb
jmp
sbb
mov
xchg
cmp
orb
mov
push
mov
dec
jno
ret
add
xlat
fcomip
push
les
mov
shrl
test
xchg
jmp
loop
das
pop
mov
push
push
idivl
sbb
jnp
in
or
xor
push
sbb
adc
mov
cmp
in
and
adc
stos
mov
out
mov
rorb
lahf
xchg
bound
jmp
xchg
push
inc
mov
rcll
or
leave
jbe
pop
in
daa
cltd
fildl
addr16
jns
std
sub
sub
push
mulb
sub
fnstcw
adc
pop
inc
aas
dec
inc
addr16
sub
mov
pop
adc
jb
mov
mov
jg
mov
loopne
or
inc
adc
dec
movsb
cmp
mov
scas
popa
aad
sahf
fldlg2
popa
pop
ss
or
mov
sub
lret
gs
and
into
movsl
outsl
jbe
addb
bnd
mov
divb
push
adcb
in
push
sahf
lcall
fnstsw
xchg
iret
popa
and
dec
push
xchg
and
and
push
mov
mov
mov
mov
mov
daa
dec
inc
pop
enter
pop
js
jmp
and
adc
in
adc
cld
push
add
adc
pop
mov
sbbl
ljmp
imul
mov
lea
popa
dec
lods
sbb
xor
daa
xchg
mov
pop
push
cld
xlat
aaa
xchg
fmul
xchg
cmpsl
fcmovu
stos
stos
push
cmp
lret
pop
or
testl
mov
cmp
lods
mov
jl
es
fwait
out
pop
lock
movb
out
rcrb
mov
test
inc
pushf
icebp
stos
add
cld
mov
cmp
sti
lcall
pusha
jae
cli
loop
test
sarl
pop
sub
ret
sub
fcom
pop
or
iret
and
mov
push
xchg
in
scas
push
mov
icebp
cmpl
pop
and
pop
add
and
sub
ja
cmp
mov
jbe
mov
je
lods
sub
mov
loope
test
loope
cmpsl
fcomps
xor
xor
imul
xor
pop
pop
aaa
mov
leave
imul
std
mov
cmp
stc
out
out
cmp
pop
or
frstor
imul
xor
sub
xchg
test
pop
sti
pushf
sub
adc
insb
into
mov
cmp
out
out
in
inc
mov
mov
lret
xor
test
push
negb
add
cmp
cmp
xor
push
mov
xchg
sub
push
cwtl
divl
push
jb
int
add
mov
es
xor
fs
mov
sarl
and
testl
or
mov
push
mov
lret
adc
jg
ret
or
pop
clc
mov
add
push
pop
pop
mov
dec
incl
push
xor
cltd
insb
repnz
ficomps
cmp
stos
subb
push
mov
pop
push
test
es
and
xchg
add
movsb
cmpsb
popa
lea
xchg
lods
ficompl
sbb
callw
enter
push
jl
mov
sub
cwtl
pop
inc
rcll
imul
stc
lods
inc
rol
adc
les
arpl
or
cmc
adc
fs
aam
xor
inc
xchg
add
cmpsl
out
pop
imul
dec
and
mov
test
icebp
cmp
pop
cld
xchg
add
jle
in
cmc
scas
push
je
in
pop
outsl
pop
inc
aaa
push
inc
inc
icebp
dec
inc
lds
mov
xchg
stc
inc
mov
fbstp
push
add
xor
jmp
mov
sub
stos
mov
iret
add
test
inc
outsl
shlb
dec
dec
repz
push
sub
icebp
stc
es
lods
cld
cwtl
into
in
sbb
adcl
aas
push
jp
ja
jno
mov
jnp
push
dec
push
push
xor
xorb
js
cmpsb
mov
mov
inc
mov
int
dec
jbe
test
sub
jmp
mov
pop
mov
xlat
sub
scas
clc
std
pop
jmp
mov
push
jmp
mov
cmp
sar
jg
insl
xor
sbb
loopne
push
push
or
loop
fs
pop
fs
pushl
push
mov
and
les
mov
and
mov
inc
inc
pop
mov
mov
repnz
dec
outsb
cmp
push
fdiv
inc
jge
mov
roll
loopne
sub
daa
test
jno
sahf
fcompp
aam
jg
adc
push
gs
mov
test
lahf
daa
mov
lcall
fwait
inc
jge
cmp
call
gs
xor
ret
or
gs
add
mov
or
or
ja
mov
xor
icebp
shll
fiaddl
mov
and
mov
cmp
std
mov
hlt
mov
cld
pushf
dec
sbb
in
mov
icebp
xor
xor
test
xlat
out
fidivrs
stos
sbb
daa
mov
inc
jmp
lea
cmc
jno
add
mov
gs
in
test
xor
bound
ss
dec
xchg
or
fbld
lret
in
sarl
add
or
xchg
in
out
push
test
std
xchg
jecxz
push
adc
xchg
daa
das
mov
mov
pusha
mov
xor
dec
test
or
add
ljmp
mov
xor
jns
shlb
fmulp
lret
mov
aas
jmp
shrl
or
jmp
jle
mov
inc
rorb
lahf
sub
push
xchg
repnz
pusha
shll
xchg
xchg
test
jnp
sahf
std
popa
push
cli
and
rolb
ds
inc
loop
outsb
xor
aaa
cwtl
and
loop
scas
fcoml
inc
fidivrs
nop
jo
loop
adcb
push
pop
cli
adc
das
in
outsb
pop
push
bound
xchg
and
push
or
adc
mov
cmpsl
add
cli
sbb
test
jns
shr
dec
outsl
fdivrl
sub
mov
jnp
xchg
shll
cld
dec
add
mov
mov
popf
pusha
xchg
cmpl
jnp
es
inc
into
dec
lods
stc
adc
cmpsb
orl
dec
fdivrl
push
vcvtpd2dqx
mov
mov
in
leave
jmp
test
cs
dec
fld
nop
fs
lds
imul
and
in
int3
dec
jle
in
jb
pop
push
imul
mov
loope
xchg
test
enter
in
cmp
fldt
fimuls
repnz
divl
or
lret
aam
dec
arpl
mov
clc
pop
addl
incb
xor
add
ljmp
dec
std
sbb
sbbl
mov
shll
in
jl
aad
leave
aam
cmp
cmp
jae
push
pop
adc
mov
outsl
jmp
pop
pop
xor
lahf
inc
push
leave
add
xchg
negl
stos
mov
jge
stc
cmpsb
adcb
repz
std
movsl
push
push
and
mov
imul
int3
inc
sub
punpckhwd
orl
popa
sub
lret
sbb
icebp
out
mov
cltd
and
jnp
popa
icebp
and
jmp
sti
mov
inc
cltd
daa
negb
jle
enter
and
sti
mov
out
lods
mov
gs
dec
arpl
sub
int
cs
and
lods
mov
sub
je
dec
and
mov
dec
mov
divl
push
ret
mov
pop
and
or
dec
push
mov
mov
subl
and
outsb
ret
rcrl
mov
add
fsubrl
sub
and
test
mov
repz
in
fmulp
jb
xchg
movsl
shlb
test
mov
mov
push
or
dec
cmc
rol
dec
popa
sbb
sub
jo
imul
fidivrs
xor
add
jns
test
mov
fadd
aas
sti
sbb
adc
fisubl
jmp
std
dec
sub
cmpsb
sbb
mov
ss
leave
lahf
dec
sbb
xchg
es
loope
add
mov
xlat
push
lahf
test
push
js
std
sbb
sub
xor
jae
jg
pushf
inc
loopne
mov
aam
push
das
fnstsw
jmp
sub
lock
out
test
push
xorb
add
nop
das
add
inc
dec
push
fucomi
test
sub
push
aad
jno
mov
rolb
shlb
add
push
repz
xor
out
push
fidivrl
cmp
jbe
jnp
xor
jb
adc
fdivl
adcb
inc
popa
test
mov
or
mov
sarb
mov
inc
xchg
mov
cmpsb
jbe
shrb
mov
repnz
loop
jp
ret
fs
push
clc
adc
test
je
xchg
test
push
and
adc
push
and
aas
inc
movb
nop
stos
xor
push
std
push
and
shrl
shll
mov
jmp
in
lock
nop
cmp
and
and
ljmp
mov
bound
mov
fcmovbe
aam
fstpt
adc
lea
dec
pusha
push
fists
loopne
mov
sbb
mov
loop
push
jecxz
flds
clc
mov
fmul
pop
mov
cs
dec
sub
subl
mov
daa
mov
adc
mov
in
jno
pop
fmull
xorb
js
xchg
mov
gs
filds
mov
lcall
pop
and
lret
std
add
inc
mov
inc
inc
out
inc
add
inc
mov
daa
mov
cmp
sub
jne
cmp
adc
in
imul
xor
and
cmp
mov
add
push
jo
aas
imul
sbb
mov
scas
mov
loope
cmp
inc
fisubrl
mov
icebp
stos
rolb
into
mov
sar
pop
rcl
jbe
hlt
sub
sub
xchg
fcompl
sub
orb
int
fisttpll
lods
push
je
rol
insb
stos
xchg
inc
lcall
dec
inc
das
dec
les
jmp
clc
imul
popa
test
pop
sub
fstps
leave
lcall
add
popf
or
push
sub
adc
lock
xor
or
lock
cmp
adc
xchg
lret
pop
gs
mov
push
fists
jl
das
aad
inc
and
in
es
arpl
xor
adc
repz
mov
add
out
dec
lods
jl
mov
xchg
mov
pusha
sbb
add
mov
sbb
inc
pop
sbb
rclb
les
xchg
adc
lea
popf
inc
mov
mov
leave
xor
pop
inc
mov
adc
lock
lock
xor
mov
fs
jecxz
dec
sub
mov
dec
lret
fidivrs
inc
lods
cwtl
or
ret
xchg
sub
sahf
add
test
or
mov
out
or
adc
inc
sahf
sbb
xchg
mov
xor
jb
test
mov
les
or
xchg
pop
pop
in
push
cmp
mov
inc
ret
fcomps
xlat
cmpb
popl
dec
mov
xchg
cmp
stos
mov
into
repz
pop
cld
setge
mov
push
mov
xor
mov
mov
push
sbb
cmp
xor
jb
lds
clc
jb
movsl
dec
imul
xchg
lock
fwait
dec
leave
xor
adc
insl
aad
xchg
inc
ret
aad
fisubl
inc
lock
mov
inc
in
aas
and
pop
adc
push
sbb
aad
movsb
into
push
sbb
cmp
movsl
in
stc
fimull
int
das
push
jns
movsb
and
add
lret
jle
sahf
ret
imul
inc
mov
inc
xor
call
nop
adc
shrb
jno
in
loope
push
mov
mov
leave
jmp
shrl
jae
and
stos
fsubr
out
insb
mov
fcmovu
mov
cmp
fwait
ja
add
out
cs
jp
sbb
loope
negl
ljmp
xchg
call
pop
push
push
adc
ret
mov
and
stos
popa
ja
arpl
shll
ds
insb
test
popa
push
cmp
out
add
adc
ja
icebp
popf
mov
pop
mov
repnz
sbb
movsl
call
and
sbb
xchg
outsl
adc
adc
cmp
mov
bnd
dec
sahf
and
xchg
lret
jno
ds
imul
or
inc
scas
inc
insl
xorb
inc
movsb
unpckhps
xor
lret
dec
pop
sub
fptan
shlb
xlat
fisubs
or
jae
imul
mov
aaa
sbb
fdivr
or
jg
loope
lret
or
sbb
clc
fbstp
mov
mov
mov
orb
mov
or
sbb
out
mov
aaa
lock
pop
int
sbb
ljmp
inc
rol
fnstenv
aad
xchg
pop
jp
fisubrl
add
inc
pushf
inc
jl
sbb
lods
and
repnz
add
sbb
hlt
pop
std
and
loopne
jge
test
addb
and
ds
aad
cmp
jbe
jo
scas
cmp
inc
xor
cs
or
rorl
fstl
jb
in
cld
sub
and
xor
jg
lahf
mov
xor
xchg
adc
mov
subb
push
test
fbld
push
nop
in
pop
mov
cmp
jmp
xor
popf
push
ret
lock
push
mov
jmp
cmp
mov
arpl
mov
mov
bound
or
das
dec
fst
push
cmpsb
and
mov
adc
aas
add
arpl
adc
sarb
or
in
cmp
mov
mov
int3
cmp
stos
mov
sub
pop
mov
test
sarl
add
leave
das
aaa
in
mov
pop
adc
jbe
out
ror
inc
sarl
mov
fisubrs
jmp
aas
loope
push
je
test
sub
jl
add
test
add
outsb
out
repz
xchg
mov
adc
filds
lahf
sbb
sar
iret
jne
ret
mov
addl
test
pop
xchg
add
pop
ds
fnstsw
std
pop
mov
dec
cwtl
mov
nop
rorb
dec
add
mov
outsb
mov
push
inc
jecxz
sub
flds
in
cmpb
arpl
fcomi
mov
or
dec
cs
lods
ds
cmp
and
jmp
lret
adc
lock
xchg
cmp
sar
sbbl
in
pop
jae
std
push
sbb
mov
adc
in
je
jge
mov
jle
xchg
clc
leave
into
icebp
stc
mov
out
gs
cs
test
loopne
fdivl
add
rorb
xor
enter
out
ret
ljmp
stc
loopne
sub
adc
jno
inc
bound
inc
jl
jl
fistps
jo
xor
adc
in
and
or
shrl
cmp
cmc
int3
xchg
xchg
and
idivl
hlt
add
loopne
outsb
in
and
mov
fsub
mov
xchg
dec
push
xor
push
out
bound
repnz
inc
mov
push
hlt
int
and
test
pusha
or
vfnmadd213sd
pop
idivl
mov
mov
dec
ret
bound
jae
jne
movsb
aam
push
xchg
mov
aas
push
inc
inc
into
out
clc
ljmp
es
pusha
addl
pop
fdivrl
negb
cmp
jle
adc
nop
and
punpcklwd
pop
mov
cmp
inc
and
or
or
movsl
jl
into
and
mov
mov
or
enter
clc
data16
adc
pop
pmaddwd
mov
int
sbb
leave
pushf
add
inc
push
xchg
stc
mov
dec
sbb
inc
imul
or
lret
lock
add
fld
pop
xor
push
push
xor
cmpb
lods
imul
ret
or
push
test
inc
dec
lret
fnstenv
lods
xor
cmp
dec
in
cmpl
imul
cmp
push
repnz
popf
and
cmpsl
inc
cmp
jmp
out
inc
ljmp
in
xor
and
push
je
fists
xchg
scas
and
cmp
dec
xchg
mov
lea
daa
fldl
bound
jb
mov
and
ja
stc
sbb
ss
xchg
sarl
mov
in
mov
cmp
mov
cmp
repz
ja
mov
add
jns
jbe
mov
add
imul
stos
cltd
bound
enter
pop
jg
adc
sbb
xchg
fdivrs
sub
mov
dec
fldcw
leave
fcomi
adcl
inc
push
mov
rolb
pop
or
lcall
mov
dec
int
pushf
in
arpl
in
icebp
insl
lods
imul
pop
jge
rclb
or
jbe
fsubrp
fprem1
pop
inc
fldcw
ret
add
xchg
into
pop
out
iret
mov
mov
psubq
imul
inc
sbb
test
sbb
cli
adc
scas
jl
mov
inc
dec
inc
loop
js
mov
movsb
clc
xor
imul
je
cmpsl
inc
add
fdivl
shl
mov
rcll
mov
and
sub
add
push
cwtl
and
out
push
faddl
lahf
pop
adc
and
xchg
push
outsb
mov
loop
mov
or
jp
pop
xor
nop
out
inc
stc
mov
xor
stos
sub
outsl
inc
pop
jmp
sub
push
inc
mov
mov
adc
and
lret
push
adc
inc
add
cmp
shlb
xchg
sbb
push
lods
test
xor
mov
pop
mov
adc
ja
shl
decl
jl
fwait
lret
arpl
std
ret
jbe
push
mov
ficompl
std
or
push
adc
lods
jo
add
xor
mov
sbb
imull
push
stc
jp
pop
push
mov
pop
dec
inc
mov
and
test
sub
mov
aam
xor
sub
shll
mov
js
out
mov
push
jp
push
fsubp
mov
sub
or
movsl
shll
out
xor
arpl
dec
xor
xchg
pop
push
addr16
test
sub
add
lods
mov
mov
push
inc
add
jb
std
movsb
lahf
adc
aad
adc
xor
lods
out
scas
xchg
add
xchg
loope
mov
outsb
sub
mov
loope
push
push
shlb
jb
andl
jmp
loope
add
mov
int3
insl
test
jl
sub
pop
popf
fstpl
jge
mov
mov
adc
jl
nop
add
outsl
cwtl
push
arpl
cmpl
scas
inc
jl
and
add
pop
repnz
test
or
xor
testb
stc
mov
sbb
ljmp
jle
movsl
sub
out
lods
fstp
push
les
test
xor
add
sbb
cmp
jg
fistpl
fbld
das
mov
pop
idiv
xor
inc
push
lea
cbtw
mov
daa
js
inc
add
shrl
xchg
sub
ss
mov
sub
pushl
xor
lahf
insb
cmp
repnz
vsubps
pop
jmp
mov
mov
or
jb
movsb
add
or
jae
mov
inc
test
inc
out
push
movsl
enter
ret
pop
inc
xchg
push
sti
cmp
jl
cmp
adc
adc
lahf
ud2
gs
and
jmp
lcall
sahf
mov
pop
xchg
inc
mov
pop
sub
cli
cs
pop
aam
mov
leave
xchg
push
and
gs
sbb
or
jo
iret
adc
jmp
jecxz
int
sbb
mov
ficomps
pop
mov
lods
push
jp
scas
xor
imul
sub
cld
out
pop
std
mov
sub
mov
mov
sahf
push
mov
inc
or
add
imul
cmp
mov
cli
pop
ficoml
ja
inc
out
mov
lea
push
and
mov
lods
jno
cwtl
ret
push
lret
sub
sbbl
push
cmp
and
jl
mov
popa
push
inc
popa
mov
arpl
sti
fists
mov
xchg
aam
out
jmp
aas
or
pop
testl
ss
roll
lret
jne
sub
shll
inc
xchg
or
test
ds
jge
sbb
or
inc
pop
lds
lahf
jbe
out
xchg
ds
enter
or
pusha
xchg
gs
sti
sbb
xor
jae
pop
test
cs
fiaddl
inc
in
mov
nop
bound
js
adc
iret
push
int
xchg
push
jns
mov
es
ja
fcomip
sub
cwtl
jecxz
jmp
icebp
popf
cmp
mov
xor
inc
pusha
adc
and
ror
cmc
pop
jns
xchg
lock
jnp
andb
lds
aad
loope
in
cli
or
jmp
and
lahf
cmc
movsl
dec
call
clc
mov
jne
xchg
push
jp
cs
jmp
cmp
stc
loopne
pop
je
push
pop
cmp
push
jg
ljmp
xor
push
adc
int
xlat
outsb
test
outsb
ja
fdivrl
adc
mov
jge
inc
hlt
lock
dec
adc
push
jo
adc
add
sub
das
xorl
sbb
jecxz
mov
mov
add
mov
sbb
mov
addl
shlb
xchg
das
lret
popa
repz
mov
mov
jp
sbb
jbe
mov
xor
mov
adc
cmp
aaa
xor
inc
mov
adc
fildl
leave
inc
test
mov
cmp
stc
fisubl
inc
xchg
scas
loopne
dec
push
in
add
xchg
xor
mov
aaa
lretw
pop
pop
sub
fmull
xchg
add
mov
mov
cld
push
ljmp
and
xchg
or
sbb
xchg
cmpsb
stos
loope
popa
mov
lahf
fs
xor
and
orps
xchg
neg
or
imul
loopne
test
fcompl
or
mov
add
xor
jo
adc
jo
sub
cmp
fucomp
ror
psrlq
and
or
std
leave
push
pop
loopne
pushf
sub
shr
clc
cmp
fisttpl
adc
stc
nop
mov
rcl
cmpsl
jb
rcrl
cli
andl
pop
xchg
mov
mov
and
lock
dec
dec
shlb
sbb
int3
arpl
scas
xor
sub
shrl
cld
daa
cld
dec
ret
das
int3
pop
lods
and
outsl
outsb
sahf
cltd
enter
rcrl
sbb
repnz
cmpsb
andb
mov
cmp
sbb
out
stc
repnz
sbb
mov
cs
gs
mov
adc
pop
insb
adc
aad
sub
mov
ror
test
movsb
sbb
ret
rolb
roll
inc
cmp
adc
inc
in
nop
outsb
xor
stos
cmp
push
and
mov
stos
test
imul
lds
or
ret
cmpsb
push
lods
leave
in
shl
inc
xor
mov
cld
in
testb
cmp
jl
idiv
inc
xchg
lods
dec
mov
add
sub
push
std
das
negb
dec
adc
js
push
inc
movsl
fmulp
sbb
push
test
lods
lret
cmp
add
jbe
in
push
mov
mov
push
mov
xlat
pop
je
fprem
fs
jge
sahf
pop
icebp
adc
call
cmp
mov
je
push
or
push
pop
filds
mov
test
ds
inc
cmpsb
sub
push
stos
lds
std
daa
pop
mov
fdivs
in
pop
popa
jno
repz
xchg
push
enter
test
mov
stos
test
sub
xchg
test
and
and
sub
pop
cmp
icebp
fdivrl
divl
pop
jb
cmp
inc
ja
add
jmp
movsl
inc
adcb
fnsave
push
out
or
std
fidivs
shl
loope
jne
add
xor
cmp
adc
or
xor
inc
lret
push
in
sub
and
mov
js
jbe
add
dec
subl
or
ficoms
mov
scas
mov
jns
mov
add
lods
cli
xchg
adc
enter
cs
lock
ljmp
xlat
out
or
mov
dec
addl
adc
mov
or
fldenv
mov
aam
and
sub
shl
mov
adc
scas
adc
xor
lds
sub
xor
add
pop
mov
and
sbb
pop
inc
and
mov
stc
jl
mov
xor
les
enter
push
and
cmp
mov
rcl
mulb
fldl
ret
mov
loop
lods
cmp
sahf
jecxz
hlt
popf
aas
outsb
inc
jle
out
mov
mov
mov
and
jle
inc
fldcw
xor
inc
push
pop
jmp
push
push
loope
test
and
push
fstpt
ljmp
jp
ret
push
pop
jbe
sub
das
shll
insl
int3
dec
aas
das
mov
clc
cmc
push
mov
repnz
out
aaa
cwtl
pop
out
cld
sbb
ss
lods
xor
icebp
aam
xchg
sub
int3
jg
daa
xorps
stos
dec
jmp
int
enter
mov
push
stc
push
mov
int
xchg
and
les
push
jae
mov
scas
mov
repz
insb
push
pop
mov
dec
dec
sub
shr
or
ljmp
or
stos
mov
fcmovnbe
scas
pop
cli
xlat
ds
sbb
jmp
das
mov
lea
pop
iret
xor
pop
add
out
jne
imul
push
mov
push
push
inc
dec
in
adc
cmc
mov
jecxz
push
adc
pop
movsl
or
shlb
popf
icebp
cwtl
push
xor
mov
rcr
xor
push
sbb
xorb
test
add
js
add
subl
notl
shlb
push
js
lock
xchg
mov
mov
stos
and
mov
xor
fcoms
clc
fnstsw
inc
call
push
cmc
roll
mov
mov
rcl
fwait
add
repnz
les
xchg
mov
xor
orl
jp
adc
test
outsb
bound
sbb
pusha
cmc
sub
ret
push
ficoms
jg
hlt
mov
lcall
xchg
popf
jg
add
call
mov
test
vshufps
cmp
mov
shl
fistpll
or
mov
mov
andl
scas
fcoms
lcall
mov
popa
mov
mov
xchg
xor
data16
inc
test
and
aas
scas
test
cmp
fs
dec
push
fdivrl
or
dec
arpl
aad
jo
test
orb
pop
cli
ds
es
xor
add
xchg
xchg
ja
mov
inc
xchg
das
ret
jge
push
sti
insl
push
popf
xor
sbb
add
xlat
pushf
mov
push
xchg
mov
ja
js
shl
aam
or
mov
adc
movl
push
loop
xor
add
jmp
xchg
xchg
or
lods
out
xor
inc
xchg
das
mov
in
leave
aas
pop
daa
push
xor
int
popa
pushf
sbb
int
dec
mov
enter
int
sbb
mov
xchg
pop
pop
jae
mov
and
cmp
jno
or
xor
in
aas
lods
and
aad
jp
mov
xor
sub
xor
hlt
sbb
fstpl
test
cmp
mov
mov
sub
sub
fdivs
sub
int
sbb
dec
shlb
adcb
sahf
inc
fisubrl
cs
lds
push
xchg
ds
cmp
jbe
pop
inc
add
mov
mov
fbld
outsl
out
fldenv
loop
xlat
mov
jmp
inc
test
cs
and
mov
data16
dec
gs
cmp
out
sub
cld
outsl
jae
lock
call
movl
add
mov
xchg
repz
sub
xchg
cmc
xchg
add
cld
cmp
inc
sub
pop
sub
jecxz
xlat
xor
pop
aad
je
jle
cltd
adc
mulb
add
dec
test
xchg
push
cmp
andl
cmpb
add
mov
or
mov
inc
jecxz
jo
stc
cwtl
les
sahf
movsl
icebp
mov
int3
mov
daa
adc
adc
sahf
daa
loope
or
loopne
sub
inc
stos
int3
sbb
clc
insl
xchg
adc
lods
inc
mov
aad
pop
jl
insb
stc
mov
pop
push
lcall
fdivrs
lds
cli
in
xchg
mov
cmpsl
lds
cmp
je
cmpsb
aad
or
nop
ja
lret
arpl
jle
pop
xor
loope
mov
lahf
pop
xor
fnstsw
or
jmp
xor
test
push
aam
lret
subl
pushf
popa
cmc
notl
dec
js,pn
dec
push
sub
add
bound
cli
je
ss
xlat
cmp
dec
lret
add
add
inc
mov
pusha
jae
addr16
mov
and
lea
stos
inc
push
sbb
pop
push
bound
adc
adc
movb
stos
fmuls
insl
cmpsb
ret
or
mov
sbb
in
jbe
inc
push
mov
and
xchg
xor
xchg
push
mov
jo
fistps
call
adc
test
imul
inc
mov
les
int
sub
and
scas
xor
xchg
or
fucom
icebp
xchg
outsb
add
mov
arpl
das
and
aaa
jecxz
lods
xor
movsl
jae
xor
or
xorl
xlat
aas
mulb
add
pop
mov
insb
mov
cwtl
xor
shr
mov
cmp
add
push
shl
andb
inc
cmpsb
lods
xor
test
out
loope
push
sbb
packuswb
sub
ljmp
jbe
adc
mov
cli
mov
cs
sub
lea
lock
dec
dec
faddl
pop
mov
dec
xor
int3
mov
or
sub
mov
addr16
xchg
jbe
xchg
in
adc
xchg
fists
movsb
mov
adc
fcompp
add
sbb
decl
sub
lock
or
mov
fcompl
out
insb
mov
dec
imul
rcll
dec
ret
mov
sub
mov
dec
mov
cmp
jmp
dec
stos
push
mov
sbb
sub
adcl
repnz
ss
flds
push
rcrb
add
clc
inc
icebp
shl
dec
inc
pop
leave
cmpsb
or
add
adc
jb
xor
mov
sub
in
aad
inc
dec
lret
jle
daa
in
push
or
cmpsl
loope
pop
addb
insb
out
sbb
inc
cmpsb
inc
inc
loope
push
dec
xchg
jg
and
xchg
adc
bound
sbb
mov
add
pop
push
test
sub
nop
sbb
sub
insl
fsts
fsubs
in
je
mov
adc
sbb
cmp
push
add
ss
fidivrl
xor
aaa
aaa
mov
rcl
jecxz
leave
and
lahf
shlb
movsl
cli
sarb
cmpsl
pusha
push
and
mov
fildl
inc
andl
xlat
or
mov
pop
sar
push
jnp
lahf
leave
mov
out
stos
flds
pop
mov
ljmp
pop
addr16
push
mov
repz
or
jae
arpl
jb
or
ds
mov
fstpt
jns
mov
sbb
ret
cmp
push
fnstenv
gs
xor
movsb
sbb
pop
leave
xchg
inc
test
add
sbb
push
push
cmp
mov
insb
pop
mov
fcmovnu
repnz
xchg
xchg
repnz
outsb
cmp
fdivr
cltd
push
sbb
adc
mov
fildl
mov
fs
lret
repnz
imul
xchg
sbb
in
movsb
dec
pop
add
mov
lock
leave
repnz
imul
inc
out
inc
add
xor
xor
lods
xor
add
mov
imul
clc
push
sub
mov
insb
adc
push
idivl
mov
add
stos
mov
ds
or
sar
jp
movsl
adc
mov
gs
outsb
ljmp
test
out
mov
ret
sub
mov
fs
loopne
mov
push
loop
cltd
insl
daa
push
sbb
cmpsl
mov
xchg
test
xor
push
std
sbb
divb
xchg
sub
mov
lea
popf
inc
mov
rorb
mov
xchg
xor
ret
sub
adc
mov
lds
pop
aas
test
cld
loope
out
jns
or
cmp
cmpsb
add
pop
jae
ss
std
pop
dec
inc
jne
dec
or
outsl
add
jecxz
and
popf
mov
cld
imul
cli
inc
frstor
mull
inc
enter
dec
clc
imull
add
lea
fstps
mov
and
dec
fnstsw
mov
add
mov
mov
push
popf
enter
add
adc
add
dec
repz
mov
mov
rcrb
pop
das
fcompl
sub
or
loope
incb
in
pop
gs
add
jmp
add
hlt
adc
addl
dec
push
into
into
inc
outsl
pop
mov
xor
mov
sub
ret
sub
fcmovb
int3
mov
mov
lods
inc
push
daa
cmpsl
xor
mov
rclb
mov
insb
cli
movsb
lret
div
rclb
xchg
xor
xor
mov
xchg
cmp
icebp
dec
movl
testl
and
cmpsl
xor
xor
inc
push
push
call
push
std
xchg
movsb
xor
mov
xor
cmp
sub
adc
fildll
jle
inc
insl
jecxz
insl
adc
in
xor
test
mov
rorl
sbb
adc
or
imul
lret
and
test
and
shrl
sti
test
jb
xchg
lcall
das
jmp
dec
dec
aaa
testb
cmpsl
cmp
insl
pop
imull
xchg
fidivs
push
imul
xchg
pop
pop
out
mov
xor
adc
sti
mov
movsl
sbb
mov
lock
mov
or
push
xchg
lods
test
rcl
bound
fcoms
cmp
push
pop
outsl
jp
stos
imul
pop
in
sub
cltd
ja
xchg
mov
ret
rorl
sbb
pop
inc
outsb
rcrl
in
inc
pop
loope
cmp
jns
cmp
cs
ret
mov
lock
cmpsl
pop
dec
jo
sarl
add
rorb
adc
ja
rol
jp
loope
rclb
dec
mov
adc
pop
or
mov
cs
int3
js
mov
mov
fisttpl
lds
or
and
sub
and
scas
xchg
and
lret
xchg
dec
cmpb
pop
mov
cltd
jecxz
and
mov
inc
or
orb
sbb
addr16
mov
dec
or
inc
fsubrs
std
std
adc
sbb
mov
cli
test
inc
xchg
mov
insl
dec
loop
aad
das
cli
aaa
daa
mov
andl
mov
push
xchg
and
pop
inc
or
mov
daa
jle
add
jle
xor
cmp
loopne
jge
mov
jae
push
and
negb
and
popf
cmp
popa
xchg
imulb
sbb
loop
fldl
jns
xlat
or
cs
test
movsl
hlt
call
cmpsb
int3
mov
jp
leave
test
pop
mov
or
mov
sahf
push
and
popa
jecxz
cmp
mov
fcmovnb
into
loopne
enter
pushf
inc
stc
jb
mov
or
dec
or
add
cld
mov
push
sbb
ficoms
jae
js
popf
dec
das
mov
pop
dec
add
into
pop
and
and
lahf
cwtl
orb
ret
inc
sti
out
movl
loop
sub
xchg
jmp
dec
jl
and
inc
es
loop
add
jp
pop
mov
pop
jmp
cmpsl
cmp
lea
fisttps
shrl
cmp
inc
add
lock
pop
push
jmp
es
sahf
mov
cmp
out
dec
adc
jecxz
sbbl
or
mov
xchg
xor
lret
mov
adc
enter
iret
insl
in
and
mov
push
faddp
dec
jp
shl
lea
sub
popa
inc
xor
dec
jge
loopne
inc
icebp
push
in
add
and
dec
negl
sbbb
pop
inc
arpl
jecxz
inc
cs
xchg
outsb
pop
adc
repz
sahf
adc
cmpl
cli
push
inc
outsb
mov
and
or
call
enter
sub
sub
notl
cmp
clc
lds
or
mul
fdivrs
pop
add
sub
sbb
out
cmp
int3
daa
jg
movsl
clc
jmp
pop
in
in
andnps
adc
jo
rcrb
stos
test
adc
push
mov
xor
xor
cmpsl
jnp
xchg
mov
gs
jae
or
les
mov
cs
pop
dec
imul
or
xchg
mov
push
das
add
mov
xor
scas
xlat
sub
xchg
inc
lods
loopne
sub
test
cwtl
mov
add
pop
inc
scas
mov
lahf
xor
stos
dec
xor
add
jg
shlb
mov
das
cld
ja
popf
xchg
mov
lods
rcl
mov
or
dec
sbb
cs
push
xchg
inc
mov
es
dec
mov
lock
xchg
shll
adc
clc
jae
pop
jmp
std
adc
loope
xor
lcall
xchg
push
leave
xchg
stc
into
pop
test
inc
repnz
cmp
adc
aam
cs
divl
test
cmp
adc
sar
aad
push
jp
out
xor
lock
shlb
incl
loopne
out
fstpt
imul
dec
add
stos
and
inc
sub
out
push
xor
das
adc
or
xor
outsl
stc
sahf
dec
mov
les
xlat
dec
pusha
shrb
add
popf
jb
loope
and
fidivl
test
lds
mov
test
test
and
cmpsb
mov
stc
mov
dec
jo
movsl
sub
pushf
xlat
xchg
cmp
mov
push
push
push
int3
pop
mov
and
inc
jae
jmp
xor
aas
cwtl
xchg
cli
out
mov
out
movsb
cmp
test
hlt
sbbb
les
ss
test
or
or
adc
aas
sahf
mul
xor
dec
idivl
sahf
mov
mov
ja
add
stos
or
xchg
adc
and
jle
dec
sub
pusha
ficoms
in
cwtl
pop
mov
xchg
aas
adc
or
jl,pn
inc
xchg
and
jle
movsl
clc
xchg
outsb
ficoml
mov
add
inc
loopne
lahf
mov
popf
mov
out
aaa
sub
xlat
dec
add
lret
pop
cltd
and
lcall
in
outsb
sub
cli
sbb
outsl
push
mov
xorb
loope
aam
jmp
inc
movsl
aaa
test
ds
int3
xchg
inc
pop
mov
xor
lds
mov
inc
jge
fdivrl
jb
mov
inc
pushf
bound
inc
sub
xor
jbe
out
in
adc
add
inc
and
into
test
inc
mov
sbb
sub
push
xor
loope
ret
lahf
xchg
ljmp
lods
jge
in
mov
pop
fstpl
mov
aad
movsb
xchg
insl
repz
xchg
push
pop
ret
push
mov
fnstcw
add
nop
repnz
icebp
fildll
xor
cmpsl
test
jg
movsb
push
xchg
sub
dec
stc
popl
es
adc
in
loopne
cmpl
jae
iret
cltd
inc
cmp
movl
lods
pop
xor
inc
insb
cmp
xchg
bound
dec
out
or
cmp
popa
and
fisttps
mov
xchg
movsb
inc
shr
cli
ret
adc
repnz
cli
and
lcall
ja
int3
ret
or
test
cmp
negl
rcrl
das
inc
mov
add
popa
add
fs
mov
inc
out
inc
inc
aam
call
movsl
and
xchg
faddl
movq
ja
sub
loopne
int
sti
dec
sub
jns
clc
adc
les
testb
add
or
xor
sbb
out
popf
movsl
jmp
push
movsb
lock
and
mov
xor
inc
mov
or
and
addr16
dec
mov
xchg
or
xchg
in
gs
sbb
push
lods
test
popf
cmp
pop
repz
inc
fdivl
xchg
sbb
jne
cmp
push
sbb
loop
xchg
pop
mov
stc
xchg
cltd
cmpsl
bound
lods
outsb
jmp
adc
enter
cmp
xchg
es
aaa
dec
test
aad
call
or
add
lods
test
dec
adc
mov
cmp
call
dec
and
divb
push
pop
jb
add
imul
aad
rol
sahf
test
mov
movsl
xchg
mov
and
push
imull
in
loopne
push
adc
fcomps
outsb
fmull
inc
cmp
clc
pop
popl
lock
in
andl
inc
std
pop
sti
daa
ds
and
fidivs
push
les
dec
cmp
adc
movsl
xchg
jb
aas
es
fdivl
push
mov
inc
lret
and
mov
lretw
into
mov
shrb
adc
loop
ja
insl
dec
sbb
add
sbb
sbb
cmpb
sti
jo
outsb
mov
call
lret
insb
mov
test
pop
adc
in
xchg
jns
je
mov
mov
je
enterw
cmp
adc
sahf
xor
out
ja
mov
outsb
sub
or
jne
sahf
adc
loope
test
xchg
push
dec
imul
cwtl
push
fsub
sbb
sbb
mov
cmp
cmpsl
jle
addr16
or
leave
and
inc
popl
pusha
sbb
js
in
or
pop
sub
test
jne
in
and
out
add
sbb
mov
xorb
sbb
movl
mov
xlat
ljmp
test
and
mov
orl
push
lret
in
adc
rolb
cli
jge
pusha
repnz
push
into
sub
aam
cmpxchg
into
sbbb
add
imul
xor
jae
loope
pop
jnp
and
into
or
xorl
mov
sub
jecxz
xor
xlat
js
mov
inc
jmp
iret
xchg
loope
test
fidivs
in
movsl
outsb
sub
mov
mov
test
fwait
inc
sub
lock
pop
inc
imul
arpl
mov
push
je
movsl
addr16
faddl
int
jbe
ret
mov
xor
fisttps
icebp
test
push
xchg
cmp
mov
rclb
push
add
and
mov
jnp
rcrb
hlt
std
mov
xchg
xchg
popf
jns
sub
aas
cs
out
sti
jnp
push
ja
rorb
add
enter
xor
or
aad
sub
xor
mov
xor
mov
or
rorl
pop
and
aaa
out
stc
mov
sti
movsl
enter
stc
cmpsl
pushf
pop
mov
arpl
jecxz
mov
xor
sub
jmp
orl
add
mov
or
sub
jge
xchg
jnp
lock
or
inc
stc
fnstsw
lds
pop
sti
jbe
daa
arpl
roll
imul
shlb
out
xlat
xchg
test
jp
xor
xor
fidivl
sbb
scas
movsl
stc
push
ret
jns
sbb
clc
xor
imul
insl
popf
jb
aam
loope
mov
es
insb
int3
jmp
and
mulb
ss
lods
lds
and
mov
sar
xorl
fldl
mov
inc
int
out
cli
das
packuswb
sub
inc
cmpsl
out
sub
xor
add
imul
xor
int3
fstp
push
mov
mov
pop
daa
ficoms
arpl
sbb
jns
mov
mov
cmp
cmpsb
and
aas
add
hlt
xchg
mov
inc
adc
mov
lock
adc
or
call
inc
cmp
adcl
cmp
insb
mov
out
cmpsb
aad
fadd
or
pusha
lods
lock
add
shlb
mov
stc
iret
mov
xor
and
pop
jae
movsb
dec
mov
xchg
push
pushf
imul
lds
mov
inc
xchg
cmc
mov
add
sub
loope
push
xor
mov
mov
mov
insl
cmp
mov
imul
jmp
pushf
iret
gs
dec
sahf
xchg
fdivl
cwtl
mov
cmp
leave
mov
stos
mov
xchg
xor
sub
ljmp
insl
popf
adc
popa
mov
imul
push
andl
ljmp
xlat
in
lret
or
out
insl
cltd
arpl
inc
jecxz
push
mov
in
inc
loopne
sbb
es
push
push
dec
stos
dec
pop
mov
test
sub
sub
pop
jmp
lea
stos
scas
jge
mov
lock
xchg
std
ret
mov
push
nop
or
jle
dec
push
or
cli
sbb
icebp
dec
add
and
in
dec
insl
fcompl
je
mov
pop
in
push
xchg
unpckhps
push
lods
je
dec
and
popf
xlat
sub
jnp
mov
loop
lods
jne
lods
loop
lods
out
out
inc
pop
ljmp
clc
sbb
in
mov
jns
adc
cmp
mov
lcall
mov
hlt
push
test
mov
sub
and
ss
in
and
xor
xor
mov
and
arpl
ljmp
pop
push
add
mov
jp
das
fnclex
xor
add
xchg
mov
icebp
sub
gs
cmp
clc
movsl
incl
add
jbe
rorl
cli
cwtl
push
pop
out
push
or
bound
addr16
cmc
jle
fstps
push
in
and
sbb
dec
mov
ret
hlt
addr16
sbb
lods
lcall
divb
pop
or
testl
fisubrs
inc
or
pop
cmp
mov
mov
dec
in
xchg
adc
pushf
popf
mov
pop
popf
xor
jae
test
out
sbb
pop
call
aas
or
inc
and
mov
cmpsl
dec
xor
xchg
in
iret
or
lods
mov
inc
cs
sbb
and
jg
js
jge
cmp
dec
sub
loope
pushf
loopne
sub
iret
shll
cmp
cmc
into
mov
mov
cmp
sub
mov
out
loope
ljmp
ficomps
adc
cmp
mov
mov
fldenv
mov
popf
outsl
ret
sbb
add
xor
leave
jle
mov
xor
xor
mov
test
in
sub
mov
cmpsb
mov
rcrb
jb
xadd
mov
pop
stc
jo
cmpsl
scas
inc
mov
int3
std
outsb
or
sahf
ret
shll
sahf
ret
aas
xorl
lods
or
mov
mov
xor
ljmp
out
push
or
jno
enter
imul
sbb
mov
movsb
inc
push
xor
xchg
cmpsb
aaa
mulb
enter
decl
pop
sbb
popa
arpl
in
cltd
sbb
mov
sti
fisttps
sbb
pop
mov
rcrl
pushf
xor
and
xchg
and
jno
push
enter
push
pusha
mov
xlat
push
aas
mov
sahf
xor
in
lret
sub
mov
and
sbb
inc
push
dec
jnp
test
dec
xor
frstor
mov
loopne
push
jmp
jge
xor
call
int3
mov
imulb
mov
cmpsl
mov
mov
incl
xor
leave
xor
fidivl
and
inc
xchg
inc
inc
imulb
xor
scas
dec
lahf
outsb
add
mov
inc
lret
or
xchg
int
add
aam
and
cmp
aam
mov
lds
and
xor
out
bound
adc
inc
rep
in
movsl
jge
lcall
sub
lods
mov
push
or
adc
movsl
jne
pop
adc
push
dec
fdivl
cmp
sbb
jo
jecxz
sbb
aad
pop
sbb
adc
adc
in
fcoms
repz
test
xor
aad
xor
mov
subb
mov
in
dec
sub
cmc
nop
cmp
jmp
mov
mov
ds
push
jle
mov
lods
sbb
aad
rcll
imul
cmp
mov
dec
movb
pop
push
jbe
repz
outsb
fcmovnu
mov
and
ss
ret
xlat
dec
lahf
and
dec
in
add
insl
pop
aas
lahf
pop
fwait
aad
or
push
nop
xchg
cmp
aas
lret
mov
and
mov
xlat
xlat
ja
sub
subb
fs
fidivl
dec
jmp
and
xchg
inc
mov
push
mov
mov
nop
ja
pandn
xor
fdivl
addb
mov
ret
cmpsl
and
das
insl
cwtl
dec
jp
cmp
dec
notl
mov
lret
out
and
jle
xlat
fcompl
jecxz
fsubrl
cmp
clc
imul
js
scas
pusha
mov
jl
fwait
dec
pop
movsl
mov
pop
or
cmp
xor
jnp
les
dec
popa
and
pop
fnstenv
push
inc
add
mov
adc
and
jge
imul
enter
push
pushf
mov
jb
ret
sbb
sub
mov
scas
stc
fildll
xor
addr16
mov
push
mov
push
and
lea
fmull
add
xor
cwtl
mov
xor
outsw
jecxz
add
jmp
ja
call
int
cmp
xor
sbb
jge
icebp
in
adc
insb
in
and
mul
inc
pop
mov
push
jle
stc
xor
mov
decl
es
inc
les
xlat
imul
jno
loop
add
mov
testl
mov
faddl
mov
xor
mov
inc
scas
or
add
pop
cmp
rorb
fdivrs
ffreep
testb
push
add
stos
xchg
cli
in
mov
sub
mov
and
les
mov
hlt
xor
in
jle
aas
popf
add
arpl
andb
aaa
int
roll
jmp
inc
data16
insl
popf
jno
sub
ret
push
sub
lods
pusha
and
inc
xchg
lds
nop
and
paddsw
mov
cli
stos
loopne
or
sbb
sbb
push
les
hlt
mov
jg
fstps
xor
sub
cmp
pop
cmp
cmc
xchg
push
int
xor
dec
sbb
mov
and
and
adc
mov
or
scas
pusha
adc
test
push
sbb
iret
sti
call
jle
cmpsl
adc
xchg
sbb
fcmovb
mov
stos
mov
ret
add
and
push
adcl
jae
mov
push
test
mov
arpl
xchg
jp
imul
and
lea
ljmp
or
andl
or
xchg
aaa
add
or
imul
cmpsb
loope
ss
dec
push
xor
cltd
ja
dec
loop
fsubl
inc
fwait
jp
or
je
neg
pushl
cli
movb
inc
mov
fnstcw
cwtl
lret
jb
aas
xor
int
stc
bnd
jg
dec
enter
mov
dec
lods
hlt
jmp
mov
int
enter
testl
das
rolb
paddq
xchg
add
sbb
mov
push
pop
mov
cmp
mov
idivl
inc
mov
fisttpl
dec
inc
mov
ret
movsl
lahf
test
test
xor
lret
push
dec
dec
mov
jns
clc
gs
pop
lods
fdivr
pop
add
add
or
mov
inc
and
aam
mov
loopne
pop
in
jo
sub
jmp
jmp
cld
pop
shll
cmp
call
jmp
addr16
pop
mov
out
sub
test
ljmp
mov
enter
bound
push
scas
fnsave
scas
xor
push
inc
push
jl
in
pop
jp
scas
icebp
inc
inc
adc
ja
sub
cmp
adc
mov
in
aas
xor
loopne
push
notl
icebp
lock
jnp
daa
out
int
xchg
stos
adc
ljmp
xor
sti
inc
dec
xchg
jmp
pusha
xor
pushf
notb
cwtl
and
mov
xlat
in
jp
sbb
orb
gs
mov
mov
movsl
ret
pop
inc
hlt
pop
xor
mov
cmp
sub
fstpt
mov
xor
push
sub
push
xor
inc
xor
jb
push
hlt
ret
inc
jae
sbb
cwtl
mov
jae
xor
cmc
out
out
cs
es
dec
rcrl
jo
or
inc
shlb
ss
lock
cmc
push
out
mov
je
test
push
shlb
faddl
add
mov
or
xchg
or
or
sbbl
xchg
xor
xchg
clc
mov
outsb
xlat
popa
out
mov
dec
lea
jp
push
out
mulb
ret
out
rcr
sbb
arpl
aam
lcall
rcrb
adc
in
mov
imul
pop
mov
pop
das
dec
scas
jne
dec
mov
sbb
inc
cwtl
push
mulb
je
inc
mov
and
ret
pop
xchg
jmp
outsb
jbe
lea
lret
scas
jge
xchg
push
test
pop
rcrb
sti
sbbl
ds
sub
daa
sbb
psrad
mov
stos
testl
xor
jns
jmp
sub
pushf
push
test
popf
add
xchg
mov
dec
lea
cmpsl
test
pop
jmp
xor
mov
les
ret
out
jb
adc
subb
sub
pop
cmovo
add
xchg
mov
pop
int3
mov
jg
addb
cld
jae
test
sbb
jp
popa
fcomps
adc
leave
insb
fcoml
xchg
add
sub
stos
push
xchg
sub
jg
mov
inc
add
popa
xor
mov
adc
sbb
or
lahf
jae
shlb
pop
mov
pop
js
js
popa
out
cmp
fsubs
movsb
inc
jle
pop
cwtl
xor
sbb
mov
lock
xor
sub
lds
sub
lret
mov
ss
hlt
mov
push
outsl
and
daa
inc
inc
pop
or
gs
jns
fcomps
inc
outsl
filds
andb
inc
jb
mov
and
imul
inc
fdivrl
jp
mov
cmc
mov
xor
xor
call
into
push
enter
stos
clc
and
rorb
lods
lds
jp
insl
sub
orl
lcall
push
or
hlt
mov
mov
inc
cld
cmp
and
mov
inc
push
stos
mov
fdivp
int3
or
pop
and
mov
loopne
add
ds
fstl
fs
inc
repnz
dec
ret
inc
int3
nop
push
cld
jo
call
scas
mov
push
xorl
adc
clc
jbe
scas
arpl
xor
adc
jl
lahf
repz
and
push
into
sbb
cmp
push
adc
rclb
lods
je
je
add
pop
call
pop
cmpsb
shr
push
jne
test
mov
scas
cmp
jno
jne
fs
ret
data16
mov
push
dec
sbb
dec
adc
ja
fsubrs
lods
mov
fcmovbe
adc
mov
call
test
mov
sti
leave
or
xlat
aad
add
push
pop
dec
mov
add
mov
fbld
iret
psubb
enter
lds
push
pop
mov
mov
fnstenv
pop
jmp
adc
sbb
imul
hlt
popf
cmc
push
add
jnp
fnsave
jecxz
and
or
jno
lret
testb
or
xchg
gs
xchg
adc
jg
xor
jne
xchg
lret
or
imul
mov
aad
std
and
int
mov
test
fistl
xlat
shl
mov
aam
sahf
stc
xor
repnz
xorb
negl
add
xor
iret
jge
pop
pushf
out
divb
mov
nop
xchg
xor
lahf
lahf
pushf
out
pop
xchg
inc
jmp
mov
xor
mov
in
pop
adc
mov
jbe
subb
in
sahf
imul
sub
in
rol
jmp
std
jg
test
aad
adc
cmp
mov
jmp
pop
mov
xor
mov
jl
adc
lods
xor
pushf
xchg
orw
cwtl
mov
subl
add
cmpsl
into
jle
jl
adc
jae
cs
jge
jmp
add
jne
mov
inc
mov
jbe
shrl
mov
xor
leave
cmp
fcmovnb
jmp
push
loop
and
stos
jmp
jbe
adc
dec
lcall
xchg
test
mov
push
inc
sbb
mov
lea
shll
adc
mov
xor
fs
dec
or
push
js
filds
bound
mov
cld
mov
hlt
dec
add
aad
pop
aam
negb
jae
mov
cld
das
cmp
shrb
lds
cli
loope
xor
sbb
dec
jnp
pop
push
scas
iret
adc
mov
cmp
out
inc
shlb
mov
loope
cs
bound
addr16
outsl
in
aad
pop
add
ljmp
and
cmp
xchg
lds
cmpsb
test
jbe
fadds
xchg
sbb
sub
mov
dec
or
fnstcw
dec
mov
pop
cmc
push
adc
shll
scas
or
mov
insb
jle
mov
dec
icebp
fldcw
mov
mov
jnp
cmpsl
lds
add
xchg
xor
xor
movsl
test
jae
and
mov
es
push
sub
pop
add
inc
xor
cmp
aad
mov
mov
sbb
imull
stc
fbstp
pop
loope
inc
decb
cld
push
test
mov
jmp
call
jnp
int
out
mov
inc
repz
mov
cmp
sbb
mov
test
mov
js
loop
push
test
aaa
mov
imul
xchg
call
dec
push
das
and
out
adc
add
push
jp
inc
test
cmp
pop
adc
out
sbb
add
mov
push
in
hlt
and
out
adc
and
test
lds
push
mov
test
cwtl
mov
or
inc
cmp
sub
aaa
js
sub
push
sbb
sahf
inc
dec
enter
fnstcw
inc
push
call
std
cmp
add
mov
mov
fdivrp
dec
ror
out
pop
aam
jno
imul
xchg
cs
sti
shrl
xor
dec
cmp
ljmp
push
push
xchg
mov
mov
sub
popf
cmc
fsubs
mov
nop
ljmp
mov
lret
sahf
mov
or
mov
ret
mov
inc
lahf
jns
xor
mov
pop
add
ljmp
lods
ror
mov
sti
sbbb
mov
out
movsl
loop
lock
xor
call
int
icebp
xchg
cmpl
into
fstpt
shll
push
inc
fstpl
clc
sub
push
out
lret
sbb
aas
adc
clc
sbb
test
sbb
lods
push
lret
adc
push
aad
mov
pop
mov
imul
fstpl
mov
add
lcall
pop
test
xchg
shl
stos
movsl
test
movsl
js
mov
xlat
repz
lcall
scas
lret
lret
pushf
sub
clc
pop
popf
add
lods
push
sahf
stos
mov
popa
in
inc
inc
popa
pop
mov
and
xorl
mov
mov
insb
ljmp
std
insl
xor
xchg
cmpb
fs
dec
jp
rcrb
mov
sbb
vcvtusi2sd
cs
jb
std
sub
and
xchg
imul
adc
pop
stos
xor
mov
daa
rorb
xchg
xor
stos
mov
adc
pop
mov
inc
cmp
movsb
sbb
xorl
xor
popf
mov
jae
and
mov
or
jge
dec
js
add
push
ret
and
add
shll
out
popa
pop
cmpl
sbb
aas
sbb
bound
lahf
repnz
inc
jecxz
inc
movsb
sbb
xor
les
loopne
or
out
sbb
pmaxub
repnz
ja
pushf
xor
mov
bound
add
into
mov
adc
ja
in
adc
insl
mov
arpl
aaa
arpl
and
mov
inc
pop
push
addb
fsts
inc
lods
dec
sbb
fsubl
cs
xchg
js
and
mov
mov
jmp
inc
and
sbb
cltd
mov
popa
cmp
cmp
cmpsb
push
xor
adc
jl
hlt
or
lods
dec
lahf
or
or
je
dec
scas
add
mov
sub
fistps
jae
ss
ja
stc
push
jg
pop
sahf
inc
dec
jb
mov
and
insl
in
out
push
adc
fbstp
ja
adc
xchg
idivb
dec
xor
scas
or
pop
jmp
cmp
cmp
leave
imul
jl,pt
mov
in
or
cvttps2pi
cmpsl
stos
icebp
adc
xor
roll
ffree
or
ret
in
jmp
inc
jmp
and
mov
push
cmpl
sbb
sbb
daa
js
stc
ja
fcmovne
lret
popf
jne
pop
fiaddl
cmp
pop
ds
mov
stos
imul
rcrb
pop
mov
and
call
sub
je
out
mov
dec
dec
push
divl
nop
xchg
push
es
fsubrl
push
inc
int3
mov
fcmovnbe
inc
cmp
adc
notl
jae
mov
or
mov
inc
push
movsb
jae
push
pop
xchg
jmp
addr16
mov
enter
outsb
into
xlat
inc
xchg
and
jb
pusha
jns
xor
fwait
or
outsb
incb
fisubl
sub
outsb
jp
inc
cld
xor
jae
std
dec
push
std
jmp
pop
push
in
and
icebp
push
add
addr16
sti
rcrl
lock
adc
sub
push
scas
daa
addl
es
ret
push
stos
mov
jb
push
and
dec
les
dec
test
adc
xchg
adc
inc
inc
frstor
jne
clc
adc
int
and
out
cli
adc
push
pop
mov
inc
imul
in
lret
inc
ljmp
adcb
arpl
mov
fld1
cmp
bound
mov
mov
inc
mov
fsubl
ret
call
push
hlt
cmp
pushf
mov
lahf
sarb
adc
cmpsb
repz
dec
adc
bound
adc
adc
ret
inc
or
inc
stc
and
jae
mov
add
and
call
std
aam
xor
adc
mov
loopne
outsb
cld
inc
pushf
jl
pop
aad
xor
inc
jg
sub
xchg
fsubrp
rorb
inc
std
mov
lcall
adc
cmp
xchg
sbb
and
add
aam
or
jns
xor
dec
repz
adc
pop
lock
mov
das
lods
dec
shlb
stos
mov
push
imul
sbb
fsubl
imul
xchg
dec
sub
icebp
ja
mov
push
or
inc
cmp
test
pop
add
cmp
mov
sarb
pop
mov
xor
push
sahf
adc
in
mov
and
and
mov
sub
mov
jnp
jb
jle
or
sub
mov
jns
sub
sahf
inc
jbe
ljmp
and
loop
pop
mov
and
pop
pop
scas
es
jns
xlat
jg
out
sbb
icebp
lock
sub
dec
leave
shlb
cmp
sub
mov
jns
lds
jmp
or
adc
push
insl
fdivr
pop
pop
movsl
jecxz
mov
and
or
fcomps
scas
ds
test
test
cmp
ret
lods
test
mov
xchg
xchg
jo
push
in
mov
sahf
mov
lahf
daa
lods
mov
mov
xlat
push
pop
xor
jb
pop
sub
mov
rcll
iret
icebp
sbb
push
adc
sbb
xor
shrb
dec
sub
xor
mov
sbb
jecxz
inc
inc
pushf
adc
mov
mov
cmp
mov
mov
and
clc
inc
repz
pop
dec
test
lds
mov
jnp
or
out
pop
adc
xchg
stos
xlat
xchg
inc
into
dec
add
loop
pushf
fildll
loopne
nop
stos
insl
xor
movsl
sub
ret
gs
jmpw
fcomip
xorb
sub
fs
cld
cmp
clc
sbb
mov
xor
popa
mov
inc
lret
jg
lods
mov
xor
sbb
or
pop
adc
push
es
scas
ds
push
aad
pop
gs
cmp
mov
cwtl
mov
mov
cmpb
inc
mov
and
add
sub
add
jnp
or
adc
out
shll
outsl
shr
int
pop
adc
repz
xchg
cmp
mov
xorb
inc
dec
mov
lea
xor
sub
jns
sbb
cli
fwait
neg
xchg
cmpsl
pop
icebp
addr16
jmp
mov
gs
pushf
add
lahf
out
inc
sti
mov
dec
in
xchg
xlat
sub
and
jecxz
aam
mov
or
faddp
cmp
hlt
dec
xlat
cmp
pusha
adc
int3
mov
pop
je
mulb
pushf
xchg
lcall
aaa
iret
mov
xor
daa
cmp
shll
pusha
mov
cmp
arpl
lret
lcall
cld
jno
add
sub
pop
cmp
inc
into
cs
lcall
add
and
push
es
mov
pop
or
push
out
pop
daa
and
popf
jmp
mov
cmp
sahf
xchg
xchg
mov
xor
xchg
sbbb
loop
dec
cmp
out
mov
push
jae
xlat
xor
xor
or
jp
cmp
inc
repnz
out
ds
and
int
pop
xor
inc
jbe
push
and
cli
mov
and
jno
xchg
cmp
bound
roll
out
loopne
pop
jmp
dec
rclb
push
shll
ljmp
leave
enter
xor
mov
in
cwtl
lcall
or
stos
jecxz
add
mov
cmp
or
sahf
sbbb
xor
pop
pusha
movsl
sub
mov
mov
mov
sbb
jmp
in
je
mov
mov
or
jmp
jmp
outsl
push
jge
dec
fdivs
inc
in
repz
aam
jle
xchg
sub
or
lock
sbb
leave
pop
out
jne
out
sub
subl
add
int3
std
push
int
outsb
pop
jb
mov
jge
data16
xor
addr16
sbb
cmpb
cmp
test
sahf
fistpl
mov
stos
aas
negl
mov
je
daa
arpl
inc
xor
jmp
add
cmc
dec
and
in
out
and
xor
sarl
xlat
in
dec
fildl
push
lods
dec
inc
mov
stc
fidivrs
pusha
jae
call
push
jbe
mov
lcall
xor
mov
or
or
and
add
xor
lahf
aam
inc
aas
aaa
inc
imul
sbb
test
add
loopne
dec
test
fdecstp
adc
cmp
data16
loop
stos
xor
sti
jecxz
stc
fidivrl
xor
fsubp
pop
pop
vsubpd
lds
dec
pop
enter
cmp
sbb
stos
int
inc
fprem
mov
adc
push
ret
jne
shll
decl
aad
popa
jge
or
je
xchg
cmc
aad
cwtl
dec
repnz
xor
fnsave
sti
lods
cmp
movsl
ret
lods
adc
mov
shr
cmp
cmc
nop
movq
shll
push
mov
stos
lea
loopne
dec
push
add
and
cmpsb
add
jmp
fisttpll
aad
mov
mov
or
add
cli
and
sar
mov
mov
aad
mov
and
das
add
dec
dec
inc
call
sahf
push
std
shl
rcrb
rcl
hlt
cmp
daa
pop
lret
mov
jae
jg
mov
test
sbb
add
je
or
scas
mov
or
add
adc
loop
jns
mov
or
test
add
cmp
pop
movsb
loopne
cld
inc
mov
mov
bound
push
xor
enter
clc
inc
xchg
mov
ret
addr16
shrl
xor
cmpsl
push
dec
push
pop
mov
mov
or
shlb
sub
lea
scas
adc
mov
fldenv
cmp
push
clc
adc
push
pop
ud2
subb
add
int
pusha
xor
hlt
push
and
adc
fldt
outsl
sbb
push
xor
leave
sti
adc
sbb
dec
stc
ljmp
shr
mulb
sbb
mul
aaa
mov
aad
mov
das
je
inc
out
push
loop
inc
mov
push
stc
xor
loop
inc
andb
adc
loop
lret
sahf
adc
in
sub
imul
cmp
cmp
std
sar
push
jbe
mov
mov
jb
fcomps
adc
pop
mov
loope
paddsw
push
les
popa
adc
in
add
mov
and
mov
xor
loopne
and
aaa
sub
enter
std
lods
xor
lcall
inc
mov
lea
jns
pop
pop
and
inc
loopne
pop
add
icebp
test
enter
je
jle
adc
adc
fwait
ljmp
divl
rcll
mov
dec
jmp
in
negb
lds
inc
dec
cmp
fadds
cmc
out
shr
xchg
jns
test
das
cld
xor
ljmp
dec
push
pop
lret
fs
xlat
lock
and
cld
dec
mov
rcl
js
ret
out
mov
mov
dec
mov
aad
hlt
inc
xor
movsl
sti
jb
cwtl
mov
movsb
mov
xchg
adc
pop
xchg
inc
pop
es
fwait
mov
push
mov
adc
jnp
mov
pop
std
xchg
cmp
arpl
sub
and
jb
imul
jle
andl
shll
mov
jl
mov
pop
xlat
jns
notl
dec
sbb
out
out
mov
pushf
jbe
mov
xchg
stos
mov
cmpsb
out
lahf
enter
cmc
insb
push
jno
int
sub
fcomip
jmp
adc
push
addb
jo
push
faddl
fadd
inc
cli
sub
in
cld
adc
push
fisttpl
adc
xchg
aaa
in
aaa
je
lods
enter
pop
cmp
fsts
dec
faddl
cmp
aaa
outsb
ds
jns
stos
shlb
in
adc
sbb
mov
ret
mov
and
mov
repnz
cmc
push
shr
fldl
add
xchg
jg
mov
or
sub
xor
sarl
pusha
sub
hlt
dec
adcb
pop
mov
iret
mov
cmp
mov
dec
inc
xchg
in
and
std
lea
adc
mov
repnz
movsb
lods
mov
es
fimull
cmpl
incl
pop
xor
sub
loope
mov
fadds
xchg
or
adc
pop
mov
jne
cmp
or
jae
outsb
test
sub
sub
xor
xlat
insb
aam
and
xchg
test
xor
ljmp
test
clc
dec
inc
popf
lods
fldt
shlb
or
cmp
mov
add
pop
mov
and
lcall
popf
popf
sahf
mov
fmuls
jno
les
and
or
dec
outsl
pusha
fwait
pop
xchg
js
lods
push
fnstenv
aaa
lods
mov
cmp
mov
sbb
int
jmp
inc
ret
lods
push
das
lahf
dec
scas
mov
mov
cmpsb
xlat
jg
adc
sub
cmpsl
ljmp
xor
dec
js
pushf
clc
mov
sbb
and
cmp
sahf
dec
jne
fwait
ror
jmp
in
add
into
lret
sbb
sub
clc
repz
out
dec
jne
scas
in
adc
push
shll
es
insl
add
or
xor
add
jp
mov
into
mov
mov
mov
push
mov
cld
out
xor
and
rorb
xchg
fists
popa
shll
adc
idivb
ret
movsb
push
outsl
nop
iret
push
jno
test
mov
push
xor
icebp
or
inc
and
pop
data16
mov
inc
addl
out
idivb
dec
push
add
lcall
or
sbb
mov
cmp
sbb
test
stos
adc
dec
mov
or
shlb
add
jae
cli
mov
cmp
pop
pop
mov
iret
mov
popf
xchg
imul
add
push
xor
mov
mov
sub
pushf
gs
add
shll
jns
pop
cmp
daa
pusha
jbe
in
test
xor
das
outsl
mov
pop
sbb
jle
sbb
dec
stc
xor
aaa
cli
inc
cltd
mov
stos
mov
fnstsw
mov
cwtl
pop
fistpl
mov
pusha
addr16
sbb
jge
in
add
outsb
push
or
lret
gs
push
mov
mov
jp
add
shrl
add
ja
neg
add
sbb
lods
mov
fisttps
in
or
inc
mov
sbb
test
mov
dec
mov
jno
lcall
pop
xchg
pop
loopne
cmpsl
imul
mov
aad
loopne
xlat
mov
dec
imul
iret
dec
mov
shll
pop
stos
fidivrl
ds
mov
mov
add
cs
lods
lret
scas
mov
mov
jae
cmp
mov
jne
mov
cmpsb
enter
cmp
mov
lds
mov
push
push
xor
sbb
call
xor
mov
test
imull
and
xchg
xor
enter
inc
fsubrs
aad
sbb
mov
fsub
cmp
xor
mov
inc
ficoml
int
and
ds
mov
lods
add
pop
mov
sbb
lock
push
out
fwait
adc
and
mov
enter
out
stos
punpckldq
bound
jge
testb
xor
push
loope
mov
push
add
mov
push
and
outsb
pop
mov
inc
pop
int3
sub
data16
stc
enter
add
popf
push
xchg
test
popf
test
rcrb
mov
xor
hlt
add
xor
jb
cmp
popf
cmp
lods
out
repnz
dec
xchg
leave
jge
test
jns
dec
stc
outsl
push
mov
in
mov
fnstenv
out
arpl
xor
adc
leave
mov
add
lcall
testb
cmp
jb
adc
push
mov
movsl
mov
fsubs
cwtl
adcl
mov
out
mov
adc
data16
inc
and
pop
negl
pop
pop
shll
xor
cmp
dec
inc
int
int3
mov
mov
xor
arpl
out
mov
pop
and
push
adc
xor
xchg
in
inc
sub
mov
insl
in
stos
mov
andb
mov
push
imul
mov
add
adc
cmp
pop
lock
addr16
mov
scas
jae
pop
bound
mov
jns
pushf
sahf
test
and
xchg
es
cmp
call
jbe
lcall
mov
or
add
mov
xlat
enter
and
int3
push
subb
adc
in
ds
push
les
jmp
jp
fs
outsb
xor
je
xchg
lret
cwtl
mov
pop
paddsb
in
xchg
mov
test
jno
bound
ss
stos
ret
mov
fnstsw
addr16
sbb
mov
std
stos
xlat
jecxz
inc
sub
jbe
mov
and
stc
es
imul
push
mov
sbb
es
cmp
sbb
dec
add
push
mov
pop
inc
sub
bt
cmp
ss
aam
mov
ud2
mov
dec
add
setne
out
inc
aam
or
xor
arpl
loope
inc
sbb
stc
xchg
add
jg
call
sub
add
pop
inc
sbb
aam
pmullw
dec
popf
loop
cwtd
rcr
lret
mov
inc
ja
sub
mov
cmpb
adc
hlt
lock
das
jns
mov
repnz
xor
fwait
mov
rorl
sbb
int
fcmovne
adc
mov
cmp
ljmp
mov
scas
movsl
lock
xchg
outsb
mov
fistl
lcall
shr
mov
sar
fs
xor
test
lods
bound
jmp
mov
cmpsb
mov
pusha
test
stos
ret
inc
xor
cwtl
mov
mov
mov
lret
mov
hlt
dec
test
dec
mov
adc
lret
shrb
stos
mov
xchg
cmp
dec
jl,pt
jmp
enter
sub
inc
xchg
pop
pop
push
fidivrs
sub
dec
cmp
repnz
repnz
icebp
cmc
sub
mov
aam
inc
mov
scas
nop
je
rcrl
nop
adc
add
pop
sub
adc
sub
clc
add
push
jle
mov
icebp
lret
xor
stos
rolb
shll
clc
pushf
adc
aam
icebp
cmc
lret
jmp
mov
sar
inc
popa
pop
les
xor
mov
inc
pop
test
andl
fnstsw
lds
dec
lods
in
jge
ljmp
xor
stos
cli
and
xchg
push
xchg
outsb
mov
push
inc
testl
je
mov
stos
xchg
add
imul
adc
xchg
arpl
test
repnz
and
push
add
sahf
gs
pop
dec
sub
inc
jb
rolb
mov
and
stos
or
sub
jl
push
clc
jno
addr16
xchg
or
in
mov
dec
loope
mov
sub
jl
enter
test
pop
dec
inc
xchg
push
nopl
pushf
xlat
andl
pop
mov
popa
push
pop
inc
icebp
or
in
and
add
or
mov
mov
flds
aad
fnstsw
iret
and
xor
pop
mov
push
mov
je
call
cmpsb
nop
fldz
push
dec
enter
insb
xchg
rorb
je
std
and
mov
daa
mov
jns
sahf
out
lret
ljmp
pop
add
cmp
les
ljmp
mov
sub
adc
xchg
push
mov
jg
add
adc
jg
ret
mov
paddusw
mov
testl
xlat
lret
inc
gs
in
push
lcall
das
inc
jno
leave
negl
push
dec
clc
xchg
pusha
jge
sarb
cmp
add
adcb
mov
mov
jbe
lods
inc
xorb
insb
xor
cltd
jbe
pop
stc
pop
push
lret
jl
stc
and
add
sti
aas
adc
fstpt
mov
outsl
sub
ss
adc
ret
cmp
or
test
ror
adc
int3
xor
ret
mov
lods
fldenv
divl
jbe
xchg
push
aam
xchg
and
shrb
imul
leave
lahf
xor
xor
adc
mov
gs
lret
daa
jg
jl
mov
xchg
xchg
push
jl
mov
and
aaa
push
insl
movsl
xchg
push
fcomps
mov
clc
test
xchg
xor
pop
dec
jbe
outsb
mov
dec
arpl
mov
sbb
pop
test
lret
stos
les
mov
int
stc
adc
test
jecxz
xchg
jp
dec
pusha
leave
aam
push
cmp
adc
test
outsb
or
fwait
mov
cltd
xor
push
and
xchg
ficompl
jns
aam
xchg
jmp
dec
adc
mov
xor
sbb
rclb
sub
test
outsl
dec
sar
cmp
xchg
jmp
aas
jae,pt
out
and
or
in
cmpsl
sbb
int
pop
repnz
cmp
sub
xchg
add
lahf
test
shll
add
cmpsl
mov
xor
mov
xchg
aad
cwtl
and
mov
jge
mov
clc
xchg
sub
je
cmpsl
lahf
jae
add
add
mov
loop
into
mov
push
cltd
jmp
dec
push
mov
pop
cmp
inc
shll
repnz
inc
pusha
sahf
xchg
add
inc
out
cmp
insl
sarb
out
mov
push
les
mov
sub
scas
mov
test
jle
mov
and
push
adc
xchg
mov
push
sub
into
xor
sahf
jge
lret
adc
sbb
cmp
and
shll
jle
cmp
out
ja
arpl
enter
ret
mov
mull
dec
jae
in
das
push
rorl
push
lock
add
add
lahf
js
fs
or
clc
pop
fldenv
shlb
adcl
out
pop
cmp
arpl
test
clc
lock
fcomps
jge
mov
js
lcall
adcl
sbb
mov
or
mov
js
fistps
and
ret
pop
imul
mov
sbb
adc
xor
adc
inc
add
ss
mov
mov
and
xor
mov
push
dec
fisubs
std
cli
or
dec
sub
jae
mov
cmpsb
incl
cmp
adc
das
mov
test
stos
imul
mov
lahf
push
sub
aas
push
xlat
and
leave
or
add
adc
stc
add
movsb
fldenv
or
rol
stos
or
sub
ret
xchg
std
test
xor
jo
pop
cmpsl
pop
or
fstpl
xchg
sbb
orl
aas
fs
or
call
movsl
xor
out
xchg
test
int
in
xchg
add
shrl
test
lds
arpl
jle
lods
cmp
icebp
les
sub
jb
dec
rcr
mov
pop
fdivl
pop
push
lock
xor
lods
lahf
adc
mov
lret
xchg
mov
jecxz
lock
pushf
fld
imul
dec
add
dec
cmc
push
test
push
lcall
push
rolb
add
ljmp
lock
lods
sbb
fiaddl
xor
xor
inc
fmull
les
addr16
dec
fldcw
sbb
cmp
jecxz
inc
cmpl
mov
lds
mov
jg
rolb
inc
jbe
and
jno
setg
mov
add
jle
mov
push
add
xor
adc
push
das
xor
sbb
mov
movsl
and
push
ja
jo
or
mov
test
jle
cmp
cmpb
dec
repz
popf
adc
add
clc
andl
or
data16
cld
pop
mov
pop
push
mov
and
in
scas
add
std
push
fsubrp
lret
fdivr
outsb
adc
aaa
mov
addb
out
clc
lret
outsb
push
add
sub
popa
inc
mov
jl
paddw
es
outsl
mov
sbb
cli
pop
dec
ljmp
dec
push
adc
add
repnz
xor
in
clc
mov
decl
out
aas
pop
test
arpl
enter
cmpsl
popa
fisubrs
or
repz
jecxz
add
jb
mov
pop
stos
xor
jl
dec
std
testl
sbbl
out
loope
leave
insb
xchg
add
in
pop
es
cwtl
stos
pop
push
cmpsl
lret
hlt
sahf
cmpsb
sbb
sbb
dec
lods
or
jp
jns
xor
pushf
mov
cmp
mov
xor
push
xchg
punpcklwd
pop
xchg
inc
in
mov
imul
or
push
mov
sub
movsb
or
push
mov
repnz
lea
popa
ds
cmp
clc
and
mov
cmpsb
je
pop
rol
popf
not
dec
orl
stos
ja
mov
stos
idivb
mov
test
iret
sub
or
mov
mov
sub
gs
rorb
lret
mov
adc
or
xor
mov
sbbl
sub
push
or
jo
sub
sub
dec
shll
cmpsl
xor
xchg
gs
mov
inc
aaa
mov
fistpl
iret
ljmp
inc
xchg
pop
pop
jno
lahf
out
lret
stos
mov
pop
popf
rclb
xlat
or
inc
mov
jmp
jle
dec
leave
sbb
xor
xor
sbb
mov
orb
pop
dec
lods
fnstenv
lods
bound
mov
xor
imul
sbb
cmp
xchg
stc
imul
cmpsb
add
stc
pushf
flds
bndldx
int
sbb
cmp
mov
jmp
fsubl
neg
dec
push
xchg
adc
pop
shr
xorl
sub
jne
jb
sub
in
and
rdtsc
insl
repnz
sbb
pop
les
pop
leave
ljmp
imul
mov
xchg
les
mov
jo
test
add
sarb
jnp
aad
jns
pop
push
fld
shll
fisubl
mov
loope
lock
nop
adc
or
add
repnz
mov
xor
or
ret
enter
lods
jmp
in
ret
cs
fbstp
ss
or
or
adc
imul
inc
xor
cwtl
jbe
mov
mov
int
cmp
stc
shl
or
sub
dec
out
add
xchg
sbbb
std
daa
or
push
in
inc
add
aas
popf
push
dec
mov
jae
test
inc
pop
mov
pop
stos
push
lods
jg
dec
mov
mov
popa
fildl
rorb
je
in
scas
imul
add
cmpsb
imull
and
lcall
popf
lahf
fists
in
aam
das
sub
push
dec
sarb
mov
lea
call
sarw
shll
ja
scas
pop
sub
mov
out
mov
out
and
aad
sub
xlat
xchg
or
mov
rclb
outsb
int
pop
mov
ret
nop
inc
js
or
push
xchg
in
adc
enter
out
imul
jp
add
push
cltd
bound
xlat
cmpb
les
fnstsw
pop
inc
xor
sbb
sti
xchg
pop
cmp
adc
loope
xchg
rorl
test
std
rolb
fwait
adc
mov
sub
test
pop
test
orl
out
xchg
cli
and
dec
fistl
mov
repnz
xor
sbb
xor
jl
data16
xor
movsl
mov
pusha
lcall
std
adc
lret
in
jno
cmp
nop
es
mov
sub
jmp
sbb
or
cwtl
std
jmp
xchg
inc
sti
or
jp
mov
cmp
pusha
test
std
mov
sub
pop
cmp
mov
inc
out
add
ja
dec
xchg
cmc
xor
dec
std
in
idivb
cli
cvtpi2ps
aad
call
rcrl
dec
loop
ljmp
mov
sub
lds
lea
sbb
jle
mov
xchg
imul
jg
mov
call
cmpsb
enter
add
lock
pop
sbb
mov
iret
inc
add
mov
and
negb
int
fisubrl
xchg
in
sbb
jo
sub
mov
out
fidivs
pop
cmpsb
xchg
cmp
test
cmpsb
fnsave
xor
scas
sbb
push
shrl
sub
popf
fisttpl
pushf
ljmp
mov
shll
push
xor
and
stc
add
aam
jae
addr16
cmpsb
inc
pop
jb
push
insl
cmp
loopne
punpckhwd
inc
mov
push
cli
and
dec
mov
into
mov
rolb
push
jno
das
add
push
ljmp
push
aam
shlb
jmp
lock
cmp
sahf
sbb
aam
mov
test
cmp
cmpsb
popa
lods
outsl
pop
aaa
push
adc
stos
negl
xchg
rcll
out
or
mov
cmp
aas
insl
cmp
sub
push
inc
popa
insb
enter
pusha
sbb
push
sbb
and
fwait
or
sti
push
mov
pop
adc
sti
xchg
inc
push
mov
cmpsb
xor
xchg
popa
fcoms
adc
stc
daa
jl
mov
std
push
sub
imulb
cld
and
cli
aam
xlat
xchg
fnsave
test
repz
inc
push
dec
ds
xor
aad
jmp
sbb
inc
push
pop
mov
xor
sbb
jmp
fidivl
out
mov
xchg
jno
add
xchg
ret
pop
fsubrl
adc
xchg
mov
sti
mov
adc
out
nop
icebp
loop
dec
neg
gs
adc
stos
cmp
scas
dec
push
aam
jmp
popa
iret
cmpsl
mov
dec
dec
jge
daa
and
divb
or
fidivs
cmp
or
mov
sbb
mov
inc
loopne
mov
lds
rorb
jp
or
ja
cmp
jmp
sarb
mov
inc
fildll
add
bound
xchg
jge
bound
pop
cmp
jne
repnz
mov
fs
mov
orb
push
jge
les
jg
pop
lock
sub
mov
sbb
mov
sbb
xor
or
jge
jecxz
test
icebp
out
and
loope
sub
les
in
enter
inc
lcall
sahf
bound
or
mov
insl
data16
ss
mov
xor
mov
jmp
outsb
imul
sbb
popf
in
cmp
and
or
movsb
push
ss
outsb
push
dec
mov
and
adc
scas
inc
cmp
pushf
imul
in
fsubrl
mov
sub
out
movsl
pushf
xchg
data16
ret
cli
ja
sub
jo
sub
push
cld
addb
popa
push
pop
sbb
adc
xor
daa
decl
mov
lcall
adc
sti
cli
or
jno
inc
inc
add
nop
push
mov
pop
and
jl
in
pop
js
stos
dec
sbb
xchg
xchg
push
sti
fwait
cli
pop
addb
mov
add
int
or
cmp
pop
and
idivb
jb
inc
ds
mov
dec
subb
sbb
arpl
push
push
in
pushl
xor
mov
shrl
xchg
sbb
cmp
sub
mov
or
fimuls
leave
mov
mov
xor
sbb
mov
pop
mov
inc
scas
cmc
and
pop
mov
jns
pop
test
add
pusha
stc
movsl
push
loopne
in
std
xor
jb
out
add
jle
pop
cmp
mov
clc
xlat
loop
movsb
mov
pop
cs
xor
xlat
outsl
into
mov
into
movsb
adcb
push
js,pt
add
sub
daa
repnz
mov
cltd
out
pop
ds
xchg
add
in
cmpsb
movsl
push
pop
dec
inc
adc
dec
lods
mov
imul
aas
aad
inc
jo
xchg
xchg
cmp
mov
push
leave
pop
lahf
cltd
fadd
loopne
inc
xor
stc
enter
idivb
fstl
sub
insb
fwait
mov
mov
mov
jle
xor
nop
je
ret
orl
push
cmp
push
or
sbb
test
in
mov
sbb
lret
jge
fwait
iret
test
xor
lods
jo
xchg
or
fldcw
inc
inc
fwait
lock
and
pushf
test
cmp
pop
mov
in
push
mov
pmovmskb
test
mov
mov
test
popf
into
push
rcr
mov
and
add
outsl
xlat
in
gs
push
ds
js
push
out
fs
push
push
and
iret
add
sub
jae
pop
scas
nop
xlat
mov
dec
jge
test
fidivrs
cmp
movsb
dec
repnz
scas
call
adc
das
sti
cmp
fwait
movsb
cli
outsl
ja
mov
lock
inc
bound
or
loop
loope
inc
fstps
cmp
lea
lock
push
dec
and
xchg
sub
out
push
sti
pop
sahf
addl
inc
jne
sub
stos
push
xchg
push
loop
pop
push
out
mov
xchg
sbb
jl
orb
enter
negb
or
out
push
pop
jno
sub
mov
insb
adc
lods
test
call
js
movsl
fdivr
sahf
inc
in
repnz
add
test
out
mov
and
or
mov
adc
cmp
orb
je
scas
loop
mov
sub
add
xlat
sub
jmp
inc
in
aam
rolb
sbbb
test
cli
inc
sbb
mov
inc
clc
sub
jno
mov
cmp
mov
cmpsl
testl
insb
bound
out
es
pop
fwait
sbb
scas
xchg
cmp
dec
icebp
push
lahf
fucomi
cmp
dec
inc
lods
adc
repnz
inc
sahf
outsb
stos
sahf
mov
imul
xor
mov
inc
leave
adc
jmp
and
or
push
movsb
comiss
nop
dec
jle
push
push
int3
inc
add
push
pusha
mov
sbb
cwtl
out
outsl
pavgw
jmp
shrl
sbb
rol
roll
xor
dec
sub
pop
insl
loope
mov
iret
lret
pop
sbb
inc
mov
in
inc
stc
sbb
adc
dec
fmuls
add
scas
clc
scas
sbb
imul
cmp
add
addl
mov
lock
je
fidivl
jmp
mov
sbb
lods
lods
fiaddl
popa
xchg
aam
or
cmp
lock
fidivl
push
dec
jecxz
sbb
xchg
inc
ja
dec
xchg
sbb
mov
xlat
mov
call
pop
out
gs
stos
dec
fstp
negl
lret
sub
sbb
sbb
stos
out
scas
or
add
inc
notl
mov
popf
js
or
test
mov
fdivl
inc
jmp
je
in
mov
cs
xor
shrl
movsb
out
add
pop
loope
push
mov
or
jmp
or
pop
shlb
jl
ja
adc
sti
mov
imul
mov
outsb
stos
pop
pop
or
out
punpckhwd
mov
ss
fnsave
xor
arpl
gs
movsb
sub
test
jmp
lahf
mov
xor
sbb
outsl
js
and
xorb
int
and
inc
lods
leave
mov
lods
loop
lahf
jmp
in
out
movb
fs
and
xor
sahf
scas
jle
xchg
inc
add
pop
mov
ror
mov
inc
dec
lret
pop
pop
pop
mov
mov
sub
fcomip
inc
jns
repnz
cwtl
or
add
shrl
inc
gs
jmp
lea
and
mov
pop
push
ret
lods
push
fucom
out
mov
cmc
dec
les
push
inc
aad
cmp
shll
fsubrl
ret
push
flds
in
lret
das
push
imul
mov
sub
adc
xor
inc
pop
cmp
sub
out
scas
clc
mov
xchg
fs
aam
jb
mov
cmp
sub
mov
vcvtps2dq
push
test
mov
mov
mov
sub
xchg
add
mov
test
xor
cs
sub
arpl
pushf
mov
xchg
testb
mov
fcmovne
xor
lea
je
sbb
add
xor
adc
cli
pusha
jno
sub
push
mov
ljmp
and
stc
lret
fs
xor
leave
pop
xchg
mov
mov
shll
xor
mov
fisubrs
push
xchg
mov
xchg
fdivl
icebp
mov
cmpsl
jl
add
cmp
sbb
pop
mov
ss
fimull
xor
jmp
dec
and
or
jno
dec
inc
or
rcll
lret
mulb
insl
rclb
movsl
aaa
test
loope
xor
aaa
and
add
inc
jbe
dec
push
or
pop
sub
movsl
iret
gs
pusha
aaa
ret
add
int
cltd
mov
jecxz
lcall
sbb
pop
lods
outsl
mov
jns
inc
orl
jne
cmp
adc
xchg
out
pop
adc
mov
rcr
std
les
loopne
lock
and
popf
push
pop
mov
inc
adc
mov
imul
ret
repnz
call
inc
jae
cmp
sbb
repz
lahf
arpl
xchg
sub
fldcw
dec
out
dec
scas
sub
lret
dec
xor
jp
aas
or
mov
int
test
push
inc
adc
stc
dec
jo
inc
and
rcr
xor
les
fs
std
cmpsb
or
cwtl
inc
insl
fsubs
sub
or
leave
in
pop
sub
and
and
jg,pt
es
xor
cmp
sbb
push
loopne
sbb
push
aaa
lahf
push
cmp
arpl
test
mov
xchg
dec
cs
mov
stos
shlb
inc
mov
in
push
mov
pop
ljmp
sbb
loopne
sub
sub
adc
sub
pop
cmc
xor
pop
push
cmp
lock
out
pop
addl
push
sbb
lret
adcb
in
mov
push
push
outsb
notb
xor
push
and
sbb
repz
adc
insb
xchg
and
lods
pop
in
lods
adc
mov
xor
and
stos
dec
imul
inc
movsl
jbe
imul
lcall
lods
mov
insb
test
scas
xor
add
data16
or
cli
test
mov
les
shlb
sti
push
mov
mov
and
or
test
dec
sti
test
push
mov
mov
subl
push
shll
inc
pop
ja
fcom
and
dec
lahf
xchg
push
lret
cltd
inc
fsubr
or
testb
xchg
push
mov
fs
arpl
mov
pop
test
dec
pop
fwait
mov
je
in
pushf
pop
hlt
sbbb
sti
fbld
sbb
das
push
lods
ds
cld
mov
inc
test
ror
pop
ret
or
pop
and
sub
popl
push
push
push
addr16
icebp
imul
adc
pop
movsl
inc
cmp
pop
in
push
fwait
sub
or
jle
lahf
xor
mov
cmc
and
in
je
sub
jbe
loope
lret
dec
in
in
dec
aaa
push
mov
in
test
out
add
pop
xor
lds
push
cmpsb
mov
adc
jbe
lods
push
test
mov
mov
lea
and
testb
xor
inc
fstpt
fs
sbb
out
mov
cli
orb
shlb
jmp
lods
sub
xchg
ds
cs
cld
xchg
and
mov
sub
das
int3
mov
and
add
std
dec
loope
pop
std
jle
aam
fldenv
push
jnp
testb
out
fstpt
cltd
lods
push
sahf
or
sub
ret
pop
ds
imul
xchg
cmpsl
mov
pop
dec
pop
mov
jnp
sbb
imul
jmp
incb
mov
out
and
les
add
daa
nop
push
or
test
mov
xchg
and
cmp
gs
sub
shld
popa
cwtl
push
mov
mov
xor
pushf
xlat
or
lcall
in
aad
fstl
test
and
dec
pop
push
adc
loopne
arpl
jecxz
xor
fadds
sub
jle
orl
xor
inc
pop
out
aam
cli
ja
mov
xor
sbb
cmp
test
popf
xor
mov
dec
shl
mov
iret
outsl
fs
scas
push
sbb
int
fistpll
ds
daa
cwtl
dec
pop
jl
mov
mov
jg
ss
lods
lods
repz
fmull
jo
mov
insb
and
jnp
push
test
xchg
aas
pop
push
out
cmp
jo
cmp
adc
in
push
repz
and
test
jbe
inc
add
fiaddl
pop
sbb
addr16
mov
sub
in
in
xor
sbb
cli
sbb
dec
inc
movsl
push
pop
pop
movsb
and
je
ja
mov
stos
das
mov
mov
es
lret
pop
dec
add
dec
cli
std
and
jmp
inc
jne
lods
xchg
xchg
adcl
jbe
pop
leave
icebp
popf
sbb
loope
lret
ljmp
mov
sbb
cld
cmp
in
lods
jae
cmp
cpuid
mov
or
repnz
mov
cmc
lods
inc
aaa
cmp
sub
xchg
pop
pusha
ja
aam
inc
test
addl
js
sub
push
inc
jo
test
inc
movaps
out
xlat
ja
lds
mov
int
rcrb
dec
arpl
cwtl
cmp
sahf
movsb
and
call
outsb
push
mov
jl
lods
sub
mov
mov
sbb
mov
inc
add
mov
mov
stos
lcall
inc
dec
orps
mov
popa
xchg
shl
in
xchg
fimuls
dec
insb
loop
test
cmp
push
adc
mov
mov
imul
daa
inc
mov
test
icebp
cmc
prefetch
nop
sub
push
aas
fmull
xchg
adc
mov
out
mov
and
xchg
mov
cmp
int3
sub
ljmp
sti
or
int
out
daa
fbld
pop
pop
jmp
fldenv
sub
pop
test
pop
jae
pushf
pop
cmpb
sub
shll
cli
mov
pop
xor
inc
sahf
sbb
cld
data16
movsb
mov
mov
loope
jns
xor
xchg
adc
xor
test
inc
mov
lcall
fld
pop
fs
imul
inc
popf
dec
xchg
inc
iret
push
jecxz
pop
loope
fists
inc
stc
sbb
int
aad
cmp
mov
orb
sbb
inc
sbb
lods
pushf
into
je
and
and
lcall
adc
push
lods
add
sub
fsubs
xchg
in
mov
out
lods
out
clc
or
jl
out
jge
in
jmp
leave
add
cs
push
lds
push
ja
jbe
fs
inc
and
pop
cmp
out
or
mov
les
jg
leave
movsb
xor
lods
fwait
xchg
movsl
jae
inc
nop
inc
cmp
repnz
lret
outsb
lds
add
repz
fdivrl
jp
or
or
mov
int3
fiadds
pop
das
push
inc
or
loopne
add
push
adc
insb
cld
adc
fildl
dec
push
push
in
test
std
pop
lods
fistps
xlat
pushf
push
mov
cwtl
xchg
add
fcompp
shl
pushf
or
es
test
test
aam
dec
gs
jmp
cmp
sbb
cli
pusha
sti
and
sbb
in
mov
sbb
push
pop
mov
push
shlb
les
inc
repnz
lahf
popw
xchg
or
push
lret
mov
inc
push
cli
sub
xchg
jge
mov
sbbl
scas
mov
mov
xor
xor
pop
sbb
add
addb
mov
mov
jb
movsb
mov
or
jbe
cmp
sbb
cmpsb
out
mov
dec
mul
les
fcoml
call
jecxz
and
push
mov
adc
mov
and
inc
inc
lret
push
jp
cmp
push
dec
data16
scas
xor
or
iret
jp
and
and
clc
xchg
ret
add
dec
mov
in
xor
fiaddl
or
cmpsl
loop
in
loopne
add
jb
push
cmp
pop
fnstsw
mov
sub
out
and
inc
push
inc
or
jmp
sub
jnp
ror
lahf
cmp
or
push
jb
rcrb
mov
xchg
cmpsb
mov
sub
arpl
xor
and
arpl
push
imul
js
scas
fiadds
adc
xor
cmp
int3
std
cmp
inc
sub
sub
icebp
aaa
adc
mov
dec
ss
push
int
rcl
fucomi
xlat
lahf
mov
out
push
movsl
shlb
pop
lods
outsl
fmul
shrb
jno
clc
mov
inc
cmp
pop
dec
out
inc
loop
out
inc
repnz
pop
imul
lret
inc
adc
xor
xor
sub
mov
sub
jmp
inc
xchg
faddl
push
mov
sub
dec
aas
scas
pushf
add
xor
gs
jb
les
mov
fwait
inc
cmp
and
jmp
xor
push
push
push
xor
push
sar
lret
xchg
lahf
movsb
mov
sub
jae
mov
xchg
push
sbb
push
mov
mov
mov
cltd
jp
stc
cmpb
inc
lods
ret
jne
push
sub
loop
inc
icebp
js
ds
roll
dec
mov
lods
jnp
cwtl
sbb
sbb
pusha
jbe
jne
adc
mov
xchg
jnp
test
mov
sub
xor
sub
push
adc
pop
push
pusha
xlat
rcll
dec
mov
aas
das
inc
sbb
dec
outsb
std
andl
dec
leave
cld
mov
add
movsl
mulb
xor
aam
cmp
in
pushf
cmp
mov
shlb
xor
lret
xchg
xor
and
fwait
inc
rorl
test
loop
or
testl
mov
scas
mov
cmp
ljmp
or
and
scas
pop
push
divl
nop
mov
aas
daa
inc
test
mov
push
sub
mov
add
out
mov
jbe
std
lahf
divl
pop
adc
xor
popa
test
push
repnz
and
enter
fldt
insl
lods
jae
xchg
cwtl
gs
adc
fiadds
fs
adc
shl
xor
mov
dec
sub
mov
jnp
test
out
push
rcr
add
mov
push
mov
cmp
jle
fiaddl
bound
cmp
sti
mov
adc
add
test
jg
cli
jge
fs
and
and
mov
mov
or
and
add
jmp
and
fimull
fmul
xchg
lret
inc
imul
dec
lret
pop
pop
scas
add
cmp
flds
jle
inc
sahf
rcrb
dec
jmp
jns
or
jmp
cli
pop
mov
add
lret
int3
gs
int
sbb
pushf
pop
arpl
shll
mov
add
jg
sbb
inc
sub
push
addl
ss
dec
jge
movsb
arpl
push
xchg
enter
jge
pop
nop
out
ljmp
ds
sbb
inc
xlat
in
mov
sahf
mov
in
sub
popa
leave
jmp
addb
stos
cmp
test
xor
sbb
out
sub
or
xorl
insl
jge
jp
imul
aaa
mov
sbb
adc
sub
fistl
movsl
mov
das
stos
cmpsb
pushf
mov
icebp
fistps
fnstcw
inc
jle
mov
lahf
lret
mov
out
lret
sub
enter
push
mov
xor
cmp
stos
in
shll
idiv
jmp
pop
sbb
ret
xlat
and
out
pop
xor
or
xor
popa
int3
fdivrl
pushf
mov
jne
jae
adc
cwtl
nop
stos
cmp
mov
imul
sarb
push
test
stos
mov
or
shrb
dec
adc
lods
cs
fiadds
sbb
mov
mov
popa
movsl
sbb
or
pop
mov
adc
repnz
jne
jns
cmp
cmp
fldcw
cli
or
or
sti
fmul
lds
je
stos
ljmp
out
sarl
jbe
leave
and
mov
push
and
xor
cli
or
pop
fmuls
add
js
jns
sbb
mov
call
into
int3
fadds
inc
add
dec
out
cltd
repz
sub
data16
push
out
pop
xor
sub
dec
inc
sub
pop
sahf
sti
pand
iret
and
jp
sahf
fs
sbb
scas
pop
sbb
cmp
stc
add
sub
xchg
gs
dec
dec
aaa
inc
adc
sub
jns
xchg
inc
xchg
mov
call
aaa
mov
xor
mov
cmc
xor
and
bound
test
repnz
xor
and
mov
mov
arpl
mov
mov
aad
js
cmp
pop
jnp
imul
add
fadds
mov
and
ret
ljmp
xor
and
xchg
pop
inc
mov
add
sub
popa
pushf
punpcklbw
out
js
jmp
arpl
fstl
mov
out
inc
loope
fcomp
fwait
xchg
sbb
adc
cmp
fs
fs
dec
xlat
jp
gs
mov
cmp
or
test
mov
pushf
bound
popf
mov
mov
testb
dec
sub
pop
xchg
jbe
dec
bound
int
xchg
mov
outsl
xor
xor
fwait
fs
fxam
pop
jne
mov
mov
inc
loop
mov
data16
mov
movsb
pusha
hlt
jno
jp
gs
dec
xor
mov
jbe
nop
lods
push
stos
stos
loope
das
sbb
pop
dec
cltd
mov
cld
shrl
pop
mov
mov
into
cmp
out
aas
pushf
push
adc
pop
xchg
and
popa
xor
int
cmp
aad
pop
cmp
in
adc
lret
inc
add
movsl
pop
dec
xor
xor
mov
adc
mov
dec
pop
cmp
mov
pusha
mov
cmp
shrl
mov
mov
mov
mov
inc
icebp
lea
popa
jg
int
out
gs
cli
out
or
or
popa
push
or
mov
popf
pop
push
enter
jmp
in
ds
mov
aad
dec
mov
push
cli
out
in
das
mov
rorb
lret
add
bnd
and
inc
cmp
jns
xor
pop
ficoml
test
popf
int3
push
jge
push
sbbl
mov
cmpb
push
mov
dec
sbb
out
jae
movsb
and
cmpl
cmp
and
mov
xor
push
arpl
sub
mov
popa
lcall
and
jae
pop
test
lds
inc
ds
inc
push
test
js
xlat
insb
mov
fstps
push
addl
testl
sub
mov
inc
std
scas
sbb
in
arpl
mov
lret
lret
enter
mov
aaa
popa
stos
out
jge
push
in
js
dec
mov
test
movsb
dec
fistpl
or
xchg
cs
shrb
pop
sub
outsl
pop
int
cmp
cmc
out
stc
arpl
push
and
pop
sub
mov
push
add
movsb
xchg
cmp
jmp
fcom
xor
in
jae
vshufps
push
mov
loop
add
jb
push
je
mov
xchg
mov
cmp
popf
cmp
shlb
mov
daa
mov
les
xlat
dec
and
add
leave
xor
xchg
lret
dec
movsb
xor
push
dec
iret
adc
js
ja
popa
in
and
push
xorl
xlat
scas
ret
addb
rep
cli
cwtl
shl
mov
sub
mov
add
jmp
iret
sbb
mov
loopne
inc
cmp
lds
stos
push
jno
inc
or
fwait
out
fsubl
daa
ja
sahf
adc
and
pop
inc
push
push
pop
test
jno
push
xor
push
imul
mov
cmpsb
add
or
xor
push
mov
leave
setg
xchg
mov
stc
ds
lock
adcl
pop
dec
leave
loopne
push
xor
icebp
push
out
mov
stc
stos
mov
fwait
inc
pop
ret
xchg
cmpsb
adc
mov
sub
fstpl
pushf
inc
hlt
lock
xlat
dec
int3
push
jp
testb
push
mov
imul
xchg
dec
lods
scas
inc
bound
jns
std
push
jle
gs
dec
inc
push
pusha
mov
ret
sbb
in
mov
fdivrl
inc
ja
mov
in
mov
cmp
lock
negb
imul
test
mov
push
jnp
popf
insl
cmp
adc
push
sbb
xchg
mov
sbb
cmp
clc
data16
pop
lret
xchg
or
pop
add
hlt
rorb
adc
lahf
bnd
or
fbstp
andl
push
sub
mov
rcl
out
gs
rcll
dec
nop
cmpsl
hlt
jne
pusha
iret
jno
sbb
int3
mov
adc
loop
mov
daa
sahf
cmp
xchg
pop
dec
out
std
cmp
push
enter
loopne
push
inc
scas
insb
stos
es
xlat
out
nop
inc
mov
shr
inc
mov
xor
inc
and
cwtl
sbb
xchg
fwait
cmpb
lret
sub
lds
jecxz
js
test
mov
cmp
sbb
int3
add
insb
data16
aaa
lcall
sbb
mov
or
mov
outsl
popf
loop
cmp
xor
cmpsl
ficomps
add
pushf
dec
jp
shrl
mov
pop
mov
pop
xor
and
in
xchg
add
ffree
sub
repnz
outsl
lret
daa
lcall
add
lods
jbe
mov
dec
and
loope
or
clc
and
mov
call
xchg
xlat
inc
jp
xor
das
mov
aam
pop
push
cmp
arpl
or
into
jp
in
push
jae
call
pop
movsl
dec
lcall
ja
ljmp
and
leave
pusha
pop
setno
jnp
inc
ror
or
cltd
cs
push
jbe
inc
bound
rorb
cmp
mov
dec
sub
cmpsl
loop
das
inc
mov
int3
mov
jl
bound
mov
or
inc
test
jbe
nopl
mov
inc
ret
pop
push
push
cmpsl
loope
scas
scas
in
jbe
xor
dec
or
bound
test
mov
outsb
pop
sbb
call
inc
popa
lods
out
in
in
das
cmp
stc
jecxz
jl
or
cmc
sbb
dec
mov
sahf
in
ss
stos
gs
outsb
xchg
mov
in
sbb
add
testb
inc
mov
push
ror
jle
test
shrl
push
cmp
or
testl
insb
pop
adc
jl
dec
dec
adc
in
adc
daa
jo
sbb
dec
sub
cmpsl
aas
inc
pop
adc
mov
cmp
pop
mov
inc
sbb
xlat
mov
lret
test
aad
outsb
cltd
cli
dec
loope
adc
sbb
sti
push
jl
imul
pusha
mov
ljmp
xchg
loop
les
ret
or
lods
lcall
xor
mov
lods
jbe
shll
int
push
pushf
dec
push
mov
mov
in
add
insl
xor
mov
adc
dec
mov
movsb
mov
xchg
push
mov
loop
push
test
jne
les
jne
ror
dec
xchg
jb
pop
loopne
ret
rol
ss
pop
cmc
jbe
push
xchg
fsubp
fldl
or
jae
notb
jmp
lock
mov
ja
loop
dec
push
int
mov
imul
mov
shll
mov
jmp
mov
jl
mov
and
add
pop
sub
out
jo
loop
imul
mov
imul
mov
mov
nop
jmp
out
loopne
jmp
roll
mov
or
sbb
adc
add
jnp
and
and
das
fs
sbb
sbb
and
les
and
pop
cmc
in
push
push
popf
push
push
rcrb
mov
cli
xorb
jne
push
movl
fldenv
inc
into
shrb
dec
pop
inc
dec
mov
mov
in
cmc
push
imul
mov
fnstcw
dec
dec
xchg
lds
insb
movsl
mov
ret
test
mov
pushl
ror
xchg
mov
mov
jl
and
adc
jle
dec
movaps
sti
mov
clc
and
lds
je
in
sbb
mull
push
jecxz
cmpsb
push
sub
int
sub
call
fs
sbb
sub
mov
mov
or
xor
mov
mul
fstl
mov
jp
pop
xlat
sti
fmull
ss
jbe
stos
clc
add
pop
call
add
aaa
test
frstor
xorb
fwait
data16
insb
int
or
cs
daa
mov
mov
test
nop
lret
sbb
jp
test
jbe
inc
mov
xchg
mov
jae
stos
mov
cmp
mov
and
cmpsl
xor
sub
fcmovnu
cmp
inc
push
adc
sahf
fwait
mov
fbld
push
or
fst
mov
pop
or
stc
adc
data16
jg
push
mov
js
in
decl
ret
insb
outsb
mov
mov
push
sbbl
cmpsb
in
test
pop
pop
sbb
out
pop
xor
pushf
test
gs
sbb
xor
add
mov
jge
adc
outsl
lret
inc
xor
fdivr
lods
out
xchg
mov
hlt
mov
aad
lock
cmpl
sub
jb
pushf
inc
add
int
sbb
xchg
dec
rcrb
sub
pop
dec
shrb
and
into
dec
jbe,pn
sub
inc
mov
xor
push
mov
lcall
push
lahf
dec
loope
cmpsl
xor
xchg
ret
faddl
or
nop
cltd
add
ss
mov
js
jo
pusha
jbe
subl
jne
and
mov
inc
mov
les
xlat
push
mov
jne
and
lock
jecxz
push
flds
enter
jmp
shll
into
jp
cmpsl
dec
je
outsl
movsl
icebp
or
js
cs
sbb
enter
sbb
pop
mov
out
mov
das
aaa
dec
loop
or
add
jmp
lock
jle
sub
test
cmp
hlt
xchg
or
mov
lock
sti
ja
cmpsb
hlt
test
sub
cmp
adc
cwtl
loop
push
lea
gs
cmp
lret
iret
xor
das
pop
cmc
imul
ljmp
inc
insw
sahf
push
cmp
dec
lea
push
ficomps
bound
jns
mov
cli
dec
adc
push
filds
mov
push
and
or
lods
clc
sti
adc
cmp
jge
mov
lods
xor
sahf
xor
lock
movl
jmp
ljmp
shlb
adc
and
jmp
xor
inc
inc
dec
loope
movsb
jb
lds
inc
in
mov
pop
fxch
push
inc
loope
cli
push
xchg
ret
sub
outsl
xor
adc
or
xor
lcall
repnz
pop
jae
subb
imul
scas
pushf
jecxz
fistps
outsb
out
push
divl
adc
cmp
mov
and
mov
ret
xor
cmp
in
lahf
xchg
sub
into
and
rcl
movsl
sub
mov
jne
xchg
rcrl
scas
dec
pushf
dec
jne
push
sub
adc
ret
outsl
inc
lock
xor
adc
mov
pop
pop
es
mov
or
xor
mov
sbb
mov
mov
push
ljmp
repz
pop
and
sahf
jae
scas
sub
jo
cmp
or
mov
pop
iret
cmp
int
and
in
cmp
xlat
nop
leave
sbb
dec
inc
loope
loop
xchg
mov
divl
dec
dec
in
aam
aad
outsl
test
add
mov
shll
out
pop
aaa
wrmsr
inc
jne
icebp
imul
pop
out
push
adc
push
push
mov
loopne
mov
js
xchg
ss
into
xchg
xchg
jge
or
lods
sub
xor
and
mov
jle
jg
push
dec
cmc
dec
mov
fmuls
add
adc
xchg
inc
xlat
xchg
rclb
in
das
push
mov
sbb
aas
sub
mov
cmp
push
push
movsl
fbstp
inc
cmp
pop
mov
cmp
fdiv
imul
imul
fbld
rcll
xor
cmp
jae
dec
mov
mov
mov
mov
xor
jle
mov
mull
out
sub
xor
insl
xor
adc
stos
inc
jbe
nop
add
pusha
test
cwtl
ret
sbb
and
push
mov
fprem
xor
lds
sub
imul
in
int3
mov
sbb
aaa
repnz
test
lret
loope
xorb
loope
mov
mov
and
fisttpl
lret
and
xchg
pop
sbb
ja
push
push
mov
mov
cmp
adc
dec
mov
sti
addb
hlt
lods
shll
sbb
insl
adc
test
sarl
lret
daa
sub
ljmp
dec
jno
jbe
rcl
mov
sub
xor
dec
int3
out
stos
cli
das
mov
dec
or
test
fsub
bound
lods
jae
adc
jb
int
aad
fsubrl
aaa
mov
stc
add
xor
lock
mov
and
jmp
std
cs
mov
dec
xor
hlt
stos
jo
jecxz
mov
or
mov
lea
sub
dec
xchg
mov
add
test
xor
stos
lahf
mov
stos
dec
enter
call
jns
cmpsb
sbb
push
repnz
xchg
and
jno
inc
inc
insl
cmpsl
sub
icebp
fldl
loope
addr16
ljmp
cmp
aas
pop
jecxz
cmpsb
mov
cli
mov
and
push
scas
mov
cmp
pop
adc
xor
jbe
stc
andl
cmp
mov
push
xor
cmp
ret
jb
je
pop
fstpl
mov
cmp
inc
lds
shll
jae
decl
addl
jmp
mov
xchg
pushf
or
jmp
push
cld
test
add
pop
test
sbbb
insl
or
loop
jmp
mov
test
mov
test
add
adc
sub
cld
outsb
idivb
pop
push
add
pop
inc
movsb
sbb
pop
nop
imul
ret
sub
xor
mov
push
xor
sub
decl
push
ret
cmp
xchg
mov
rcll
cmc
test
les
loope
outsb
out
ss
cmp
jmp
in
lods
lds
stos
clc
bound
ja
insl
mov
dec
popa
mov
mov
aaa
jb
add
ljmp
pop
clc
lds
add
enter
aaa
sub
adc
push
mov
stc
fninit
out
sub
loop
jns
bound
insb
mov
loope
sub
shlb
add
in
sti
or
testl
xchg
jns
stos
insb
sub
jle
pop
mov
xor
adc
adc
mov
push
pop
mov
jl
fistps
xlat
cmp
jp
push
cmp
ss
cmp
mov
lds
jne
adc
jg
loopne
enter
inc
mov
add
je
and
sbbl
pushf
add
xchg
inc
fnstsw
push
js
sbb
jb
cmp
out
enter
repnz
movsb
shrb
testl
outsb
lods
hlt
jo
sub
mov
inc
jno
mov
aad
sahf
stos
cli
popa
add
pop
fisttpll
mov
lock
and
mov
jbe
stc
dec
jmp
dec
in
mov
jge
xor
jp
sbb
xchg
scas
push
cmp
test
jne
jmp
cmp
and
aam
push
dec
sub
cmp
xchg
stos
dec
mov
movsl
xchg
arpl
pop
cmc
aad
in
mov
mov
mov
in
js
aad
dec
outsl
and
test
jg
sbb
loopne
or
sbb
push
inc
adc
call
dec
sub
xchg
xor
lret
pusha
pop
lods
fisubrs
scas
out
leave
jae
test
jo
xor
and
outsb
lcall
add
fldenv
jno
pop
mov
jle
lods
or
adc
testl
mov
das
lods
sbbb
push
or
xchg
sub
pusha
mull
icebp
jb
cs
mov
stos
xor
into
mov
xor
dec
hlt
lds
test
loopne
mov
in
enter
sahf
xchg
arpl
jb
movsb
cmpsb
pushf
fcomps
sub
mov
inc
lea
jp
sbb
mov
or
dec
lcall
jae
push
out
mov
fwait
out
imulb
mov
aaa
mov
loop
sub
stos
enter
decl
push
push
adc
popa
mov
jl
inc
aaa
popf
test
jg
push
xchg
std
insl
xchg
pop
jbe
xchg
sbb
arpl
jmp
cmp
inc
call
jg
push
adc
inc
in
orl
jbe
js
sub
sbb
pop
jb
mov
jmp
aaa
pop
add
dec
in
mov
fsubrl
mov
mov
sbb
mov
idivl
jbe
pop
push
incb
cld
or
pop
out
cld
popa
add
cli
mov
add
aaa
mov
sub
and
vhaddpd
and
jb
call
cs
push
dec
add
push
call
lds
pop
enter
call
jnp
fldenv
xchg
or
mov
test
dec
cs
cmp
mov
jecxz
clc
pop
loope
xchg
movsb
mov
ss
lret
out
aaa
test
pusha
pop
inc
aaa
xchg
repnz
sahf
cmp
inc
and
jae
add
jle
jmp
sbb
add
jmp
adc
cmp
xchg
cmc
call
in
pop
lds
sub
int
insb
or
mov
sbb
scas
aad
sub
jb
sbb
movsl
jmp
pop
ficomps
and
adc
xchg
mov
dec
pop
in
in
bound
push
gs
cs
addl
mov
mov
jp
inc
gs
mov
cs
xchg
cli
lret
and
push
rol
pusha
cmp
jbe
mov
jl
mov
fbstp
dec
les
mov
inc
or
pop
cmp
sahf
ret
mov
push
jl
jp
xor
or
sti
into
cmp
or
test
pop
push
xchg
lods
int
xchg
or
dec
push
loopne
aaa
das
sub
shr
sub
or
aad
imul
sub
sub
jbe
aas
cmp
dec
fidivrs
ret
pop
out
lods
lods
es
aaa
mov
xor
or
push
xchg
enter
jge
stos
bound
movsl
mov
jmp
push
and
out
mov
or
xchg
sbb
repz
pop
mov
add
dec
mov
lahf
lods
mov
ret
push
and
jp
jne
jmp
leave
mov
push
dec
xchg
pop
adc
les
dec
inc
test
in
adc
and
es
hlt
repz
sub
mov
adc
jne
jb
cmp
dec
xchg
loope
sub
orl
cmp
shll
outsl
and
push
add
jno
dec
dec
outsb
adc
and
insl
mov
and
pop
inc
xchg
loope
dec
pop
sbb
inc
dec
sub
cli
iret
roll
pop
dec
adc
adc
xchg
int
adc
popf
push
mov
hlt
mulb
add
pushf
push
rol
test
xlat
jo
sub
nop
inc
push
lods
lods
add
pusha
jl
fcmovne
push
sti
imul
mov
inc
imulb
into
dec
jmp
testb
popa
jno
xchg
lcall
adc
or
adc
movsl
daa
in
aaa
or
insb
in
cwtl
xor
xchg
or
lcall
cmc
pushf
les
or
add
sbb
and
jg
cmp
mov
std
mov
mov
icebp
out
xor
jo
adc
xor
adc
xor
jg
xor
push
mov
sbb
sahf
inc
jne
divl
stc
data16
or
pop
xor
or
adc
aad
loopne
mov
cmp
push
lods
mov
cmp
push
xchg
push
mov
mov
nop
clc
or
nop
cli
ffree
sub
adc
xor
scas
lret
stos
int3
inc
pop
loope
mov
mov
sarl
btc
inc
push
mov
sub
adc
jmp
jmp
ret
mov
jno
cld
sub
xchg
loope
mov
mov
ds
sbb
loope
mov
mov
ds
jecxz
imul
andb
cs
adc
push
sub
and
adc
cmp
inc
dec
sbb
or
stos
cmp
xor
mov
or
mov
pop
sub
mov
out
fstpt
test
fst
inc
xchg
lret
or
sti
mov
cmpsb
les
jbe
jns
adc
cmp
mov
loope
aas
sti
lds
push
mov
aad
dec
cmp
xor
cmp
jb
roll
hlt
lods
ljmp
or
mov
addr16
mov
stos
add
enter
pop
and
arpl
pop
push
or
cmp
cmc
cmp
mov
jg
test
or
inc
aas
jbe
clc
jp
mov
fadds
std
jns
mov
mov
cmpsl
push
ljmp
cli
jbe
hlt
fidivs
in
xchg
adc
push
fsubs
test
mov
cmp
addr16
push
iret
call
aas
nop
leave
repnz
rolb
pop
mov
xor
loopne
test
outsl
mov
cmp
mov
lods
sub
and
lods
mov
xchg
nop
outsl
dec
sub
aas
icebp
repz
and
sub
adc
push
xchg
nop
and
test
repz
les
cmc
les
out
out
pop
stc
sbb
jecxz
test
pop
pop
hlt
or
ja
lods
sbb
xchg
push
stos
into
mov
xlat
mull
test
inc
insl
mov
or
pop
dec
ljmp
xchg
das
ret
lds
mov
mov
sbb
es
push
lds
jmp
lahf
imul
sub
enter
bound
orb
xchg
xor
jo
push
add
inc
lds
inc
push
mov
mov
cmpsb
test
aaa
dec
rcrl
ficompl
pop
das
dec
arpl
rcll
in
jge
stc
std
test
add
cmp
les
aad
mov
mov
in
testl
push
pop
and
loop
adc
mov
mov
lods
addr16
js
repnz
cmp
push
pop
lds
dec
stos
cmpsl
xor
ljmp
or
adc
pop
xor
mov
fwait
and
pushf
xlat
aam
push
sub
mov
mov
jle
adc
addr16
dec
fs
sti
or
decl
stos
jbe
aad
pop
and
roll
scas
andl
ret
cmp
aas
bound
lahf
sub
inc
push
add
xor
in
sub
or
sti
xlat
nop
ret
fnstcw
push
dec
and
fwait
pusha
out
int
lods
push
cmpsl
in
in
jl
jp
idivb
imul
pushf
pusha
pop
fistpll
sbb
test
or
ja
xor
add
dec
mov
pop
inc
loopne
clc
cmp
add
push
daa
mov
int
mov
sbb
mov
mov
cwtl
insb
xchg
dec
mov
js
pop
jg
jnp
repz
out
js
ret
movl
push
movsb
les
icebp
sahf
xchg
cwtl
mov
popf
lsl
mov
pop
push
jo
int
imul
mov
pop
lods
jnp
es
add
cmp
enter
xor
or
mulb
or
jmp
mov
into
dec
mov
fbstp
cmpsb
mov
mov
loope
mov
dec
xor
inc
aad
xchg
shr
push
icebp
ret
mov
scas
sbb
cmp
xchg
push
pop
push
push
lock
mov
int3
std
fstps
cmpsl
cmpsl
cmp
ss
std
addr16
sub
mov
sub
rcl
repz
fs
fnstenv
and
and
lret
push
sub
test
test
pop
mov
jb
jmp
xchg
mov
enter
std
sbb
jne
test
mov
sub
test
push
mov
sub
jae
cmp
call
in
jno
xchg
lcall
out
push
sti
in
idivb
push
int3
xchg
jge
adc
mov
fdiv
xor
les
ret
cmp
mov
mov
fs
into
push
and
pop
dec
jecxz
push
inc
cmp
call
outsl
push
stos
popa
rcll
jbe
lahf
les
stos
cmp
dec
xchg
cmp
mov
stc
insl
xlat
jge
adc
push
in
dec
stc
push
addl
les
pop
lret
pop
and
mov
arpl
testb
sub
and
jge
dec
mov
inc
ss
push
push
xchg
lods
scas
add
lds
xor
mov
inc
stc
jecxz
mov
adc
dec
mov
lea
mov
fdivp
and
cmp
sbb
gs
shr
inc
repnz
movsb
xchg
mov
push
mov
or
pop
clc
fistps
sbb
sbb
data16
test
add
xchg
lsl
movsb
sub
push
mov
xor
filds
cmpsb
xchg
lods
sub
sub
cs
arpl
fwait
push
daa
cmpsl
dec
jmp
mov
jb
sbb
clc
mov
sub
sbb
jbe
xchg
mov
mov
xchg
push
adcb
inc
pop
call
push
sub
ja
xor
cli
jl
test
scas
pop
mov
lods
lret
push
jmp
inc
insl
add
aad
roll
xor
lods
std
push
or
fwait
push
sbb
push
sbb
out
pop
imul
popf
fildll
test
cmpsb
frndint
add
or
scas
pusha
popf
push
push
imul
popf
xor
mov
mov
add
fmull
ficoml
rclb
aad
mov
push
out
andb
inc
loopne
fmull
or
push
pushf
xchg
pop
ficoms
push
sti
mov
mov
push
cmp
sub
xchg
lds
out
xchg
inc
xchg
ss
sbb
in
loope
inc
or
out
fsubl
imul
jb
push
pop
jmp
in
sub
dec
dec
cmp
xor
cmp
aaa
dec
sbb
lds
add
sarb
and
cs
shlb
jecxz
mov
mov
adc
jecxz
cmp
xchg
adc
mov
mov
pushf
push
mov
or
jb
idivl
mov
bound
aad
test
sbb
adc
mov
shl
sub
aam
xchg
mov
ret
dec
mov
mov
ss
mov
loope
int
or
adc
xor
jl
push
cli
outsl
mov
fsts
mov
inc
cmpsl
sbb
das
sti
in
mov
mov
pusha
xor
data16
xor
or
leave
push
scas
je
sbb
lcall
mov
in
mov
pop
testl
cs
add
inc
fildl
call
xchg
xlat
or
test
lods
fmull
sbb
scas
dec
add
add
dec
jne
movsb
inc
stc
aad
push
mov
lretw
cmp
loopne
inc
mov
popa
out
lds
lea
mov
enter
bound
sub
jp
arpl
pop
adc
dec
icebp
xor
pop
sub
xlat
or
adc
clc
mov
sti
out
hlt
push
pop
repnz
mov
adc
mov
push
sti
lret
lret
test
test
loopne
das
jg
out
sub
ret
test
test
lret
jmp
addr16
mov
in
nop
jne
imul
push
xchg
mov
dec
loope
cmc
mov
sub
xchg
incb
stos
rcrl
xor
adc
ja
pop
addb
mov
scas
lret
les
mov
lds
daa
jg
push
sub
loope
into
dec
push
int
mov
adc
lds
adc
int
xor
lds
iret
xchg
cld
test
fsubr
pop
xchg
jg
dec
shll
fs
push
mov
sbb
cltd
push
subb
adc
int
insb
frstor
inc
cmp
ror
jb
inc
pop
icebp
xor
fs
stc
push
or
fldenv
orb
cld
addr16
fistpl
jl
inc
mov
mov
insl
xchg
pop
popf
daa
fistpl
aam
or
pop
std
sub
cmp
call
rol
pop
jmp
fstpl
jno
sub
fistpl
aam
push
dec
push
je
fdivp
or
add
mov
sub
fwait
xchg
ficoml
inc
movups
cmp
fsub
lds
dec
test
sub
push
or
pop
jne
xor
and
inc
sub
pop
or
inc
dec
in
and
jl
inc
rorb
stos
adc
test
jl
mov
rclb
xlat
scas
xchg
cwtl
jbe
push
sub
les
push
mov
xchg
or
sub
sub
popa
jae
add
pop
ljmp
repnz
xor
jge
or
or
lods
mov
int3
xor
and
sbb
dec
xlat
pop
xchg
mov
in
repz
inc
pop
das
out
pushf
xchg
in
xlat
mov
dec
mulb
testl
cmp
es
cmpsl
popf
mov
xor
das
xor
fldl
or
rcl
loopne
sub
inc
xor
add
sub
je
pushf
jp
inc
aaa
fldenv
repz
je
movsb
inc
mov
xor
or
cmpsl
jge
pop
ds
push
scas
and
or
ds
faddl
mov
mov
mov
jmp
jno
imul
repz
add
ret
jl
push
cs
mov
into
int3
sahf
sub
jge
xorl
loopne
and
dec
daa
adc
data16
mov
cmp
scas
adcl
or
pop
mov
jecxz
sub
aaa
stc
lea
pop
out
add
out
inc
ret
insb
push
sti
roll
inc
ret
gs
mov
pop
sub
test
pop
out
clc
cmp
add
out
into
lods
rcrb
loopne
sub
lret
in
xchg
int3
cld
sub
adc
lods
ret
and
cmp
nop
cmpsb
dec
push
leave
in
pop
jb
rolb
je
mov
movsl
adcl
subl
lods
mov
outsl
fsubr
cld
pusha
outsl
xchg
rorb
shr
mov
add
repz
xor
cmp
inc
outsl
test
jge
insl
xor
nop
jg
jle
inc
fstl
bound
faddp
sbb
add
inc
sbb
cltd
lds
adc
stos
mov
test
stos
shrb
inc
dec
fstl
lea
pop
stc
mov
outsb
push
movsb
and
filds
and
fnstenv
mov
xor
loope
jp
les
test
stos
sbb
cmp
jmp
cmp
btr
cltd
andl
negl
push
jle
jecxz
scas
shll
fdecstp
int
xchg
fsubrp
sbb
movsb
movsl
add
es
mov
fstps
pop
cmc
or
pop
mov
xor
loope
dec
popf
rcrb
test
div
les
outsb
jl
pop
jmp
mov
push
and
roll
popa
cmp
mov
mov
xor
lods
shll
mov
mov
xchg
aad
rcrb
sub
int3
cmp
ljmp
bswap
sbb
xchg
jle
scas
xor
jb
jecxz
enter
in
lods
adc
addl
outsl
mov
pop
out
mov
iret
sub
adc
cmpxchg
or
push
call
mov
sbb
fwait
mov
mov
arpl
and
mov
js
or
add
xor
imul
test
push
movsb
push
divl
lea
arpl
and
arpl
andb
mov
js
in
adc
sbb
fs
test
adc
push
scas
push
xor
ficomps
das
cmc
inc
push
jne
insb
pushf
stos
push
test
inc
aaa
mov
cmp
inc
dec
lods
ss
sahf
in
mov
arpl
jo
icebp
push
shll
dec
lret
rcrb
add
arpl
cmp
or
jp
int
std
push
push
mov
mov
mov
xor
xchg
cld
int3
jge
fcompl
xchg
ret
leave
insb
std
jbe
sahf
test
xchg
sub
cwtl
movsb
mull
sbb
cmc
mov
sub
hlt
rolb
insb
negb
into
pop
cmp
and
adc
and
mov
test
inc
test
jecxz
or
pusha
adc
scas
add
xor
push
cmp
movsb
mov
or
dec
fisttpll
jp
adc
lods
aaa
add
aaa
mov
in
gs
popa
loop
xchg
mov
test
mov
dec
aaa
incl
paddsw
mov
or
and
push
pop
out
aas
shlb
test
pop
fldcw
clc
cs
jge
pop
pop
jns
adc
stos
or
inc
fs
sbb
xor
jo
cmp
jbe
into
out
int
xchg
test
mov
mov
jle
pop
into
ljmp
xor
outsl
pop
add
dec
mov
mull
adcl
mov
lock
xor
push
cmp
std
lahf
out
mov
sbb
popa
mov
mov
xor
ds
jle
idiv
sub
push
lahf
ss
lock
lea
sti
dec
enter
test
dec
scas
notb
or
popf
dec
pop
insb
enter
bound
push
xor
xor
inc
pushf
fs
pop
push
mov
test
xchg
lods
push
and
dec
lds
ds
negl
adc
rorl
mov
lods
mov
ja
mov
push
addr16
cmc
rcrb
dec
pushf
add
cmpsb
mov
popa
pop
cmpsb
mov
mov
int
cmp
repz
repz
push
dec
or
or
arpl
mov
mov
or
ljmp
push
in
fwait
scas
imul
xchg
lret
push
mov
sti
loop
xchg
sbb
adc
cmp
out
jo
xor
or
cmc
js
push
inc
lods
xor
fidivs
ljmp
push
js
andl
jnp
pop
arpl
test
mov
in
sbb
pop
sarl
in
add
fcmovnbe
sub
lods
jne
arpl
insb
push
inc
loope
mov
iret
pop
fwait
rorb
adc
xchg
cli
dec
arpl
jb
dec
and
push
out
ret
push
cmpsl
adc
lret
xor
cwtl
insl
pusha
push
dec
in
xchg
add
les
inc
push
shr
mov
add
mov
shlb
jmp
vmovaps
cmc
sub
inc
rcrb
mov
mov
jo
add
call
pop
inc
xchg
mov
mov
test
outsb
pop
add
out
cmpsl
and
enter
xchg
mov
and
adc
mov
pop
insl
aam
fldl
jmp
sub
adc
add
pop
jle
sbb
or
or
mov
xchg
ljmp
sbb
stos
movsb
leave
ljmp
push
and
repz
repnz
jle
inc
or
dec
loope
hlt
add
out
repnz
and
add
cli
popl
icebp
ds
xchg
push
das
int
int
dec
clc
cmp
xor
xchg
int
sub
ljmp
and
xchg
mov
push
dec
add
lds
movsb
xchg
pop
popf
nop
push
inc
add
inc
add
lcall
neg
adc
negb
pushf
hlt
lcall
mov
mov
sbbl
push
aas
call
sub
jae
xchg
dec
aaa
sub
cmp
jns
adc
test
and
push
add
sahf
std
inc
mov
push
inc
inc
imul
mov
sahf
push
jae
sbb
divl
mov
inc
jecxz
or
pop
in
push
aam
add
mov
mull
call
or
outsb
lods
push
std
fldcw
sub
jbe
sbb
mov
and
jecxz
outsb
fbld
idiv
in
addr16
dec
sub
in
xor
orb
movsl
psrlq
mov
frstor
out
sub
cmp
jo
das
gs
mov
inc
sbb
mov
xor
mov
cmpsl
cmc
pop
mulb
mov
gs
sbb
inc
push
fcmovnb
sub
mov
add
lods
pop
pop
or
mov
dec
test
std
imul
div
loopne
int3
scas
jge
xor
jae
hlt
dec
adc
loope
xchg
cmp
mov
sbb
das
sbb
cmp
cwtl
stos
push
mov
sbb
loopne
ds
push
imul
and
mov
stos
addr16
les
cmp
jl
inc
xchg
insl
jo
in
mov
ljmp
jp
cmp
jmp
loop
mov
scas
mov
fimuls
jg
sbb
push
push
mov
ljmp
mov
mov
les
out
mov
xor
jmp
addr16
add
repz
jo
cli
pop
icebp
mov
lahf
or
or
jle
mov
movsb
xor
cmp
mov
fsubrs
cld
sub
mov
std
dec
sbb
in
movsb
lret
shrl
jecxz
adc
fnstcw
nop
jp
xchg
outsb
in
mov
add
jae
push
cmp
pop
cmc
sbb
jo
mov
rorl
pushf
orb
pop
mov
cli
test
test
jbe
mov
push
cmp
xchg
xchg
pop
pop
mov
xlat
adc
repz
dec
jl
push
xchg
pop
xchg
js
aam
sbb
es
push
cld
push
lods
sbb
in
cmpsl
or
ret
stos
outsb
jg
and
push
call
and
add
clc
adc
mov
jmp
push
xchg
push
jg
orb
add
inc
loop
sub
mov
jecxz
cmp
sahf
out
mov
aad
xor
in
fsqrt
and
sbb
dec
cmp
or
sbb
insl
xor
push
imul
and
dec
sti
cmp
addr16
cmp
jo
adc
out
aad
addr16
roll
sbb
negb
sbb
out
push
xor
fsubrs
std
adc
fidivrl
inc
xchg
and
das
cs
ret
mov
xor
shr
shll
cmp
pop
or
inc
cwtl
pop
jo,pt
jno
push
data16
cmc
fiadds
adc
xor
pop
nop
xor
or
daa
and
inc
dec
sub
in
enter
pop
pop
mov
repz
fstps
rcr
sti
setp
xlat
sub
movsb
sub
add
and
push
adc
inc
xor
xchg
ljmp
imul
push
jbe
test
cmp
dec
pop
jne
fnstenv
pop
or
cmp
popf
xor
das
mov
fildl
mov
jne
lahf
das
shl
in
mov
xor
icebp
xlat
enter
lods
test
inc
psubb
push
data16
xchg
mov
mov
xor
inc
push
sbb
xchg
movsb
aam
fsts
sbb
stos
inc
subb
adc
popa
cmpsb
imull
inc
ljmp
out
pop
out
mov
cmc
dec
jmp
or
pop
mov
jo
mov
and
cli
xchg
or
jecxz
jbe
scas
jns
mov
xorb
dec
dec
and
add
cmp
xor
leave
aad
stos
aad
cmpb
icebp
push
pushf
cwtl
xor
mul
in
adc
cmpsl
sub
test
jp
adc
loope
sub
pop
test
add
mov
lahf
dec
xor
cmpsl
inc
add
loope
insl
in
test
or
mov
mov
xchg
fwait
mov
popa
addr16
jbe
stos
pop
mov
fldenv
push
adc
jo
mov
popa
jno
sbb
cmpsb
jbe
xorl
fbld
sarl
mov
mov
sahf
jno
xor
imul
leave
inc
mov
gs
dec
popf
mov
in
mov
mov
inc
gs
or
inc
shll
and
scas
jmp
sbb
inc
test
movsb
add
xor
and
sahf
movsl
cmp
mov
cld
mov
shrl
sbb
push
add
sbb
aas
adc
lcall
xor
aad
repnz
mov
push
mov
fs
cmp
lds
popa
fwait
sub
lahf
or
je
cli
cmp
xlat
sbb
movsb
std
add
dec
decb
sbb
icebp
shrb
jae
int
sbb
in
dec
cmpl
notb
sub
adcl
insb
pusha
loope
mov
std
shlb
adc
cmc
sbb
xchg
in
rolb
xchg
into
popf
idiv
push
std
andl
in
faddp
iret
cmp
stc
lods
inc
rolb
pop
in
fmulp
mov
incl
loope
lods
mov
push
mov
jmp
mov
pop
cltd
js
mov
mov
inc
jle
adc
lret
lret
xchg
jecxz
jle
adc
xchg
mov
cmpsb
xor
pop
movsl
mov
xchg
jmp
xchg
in
loop
inc
movsl
in
fadds
call
push
mov
xor
orb
xchg
jns
mov
mov
jl
mov
adcb
push
mov
clc
jae
sub
and
mov
pop
icebp
test
mov
jbe
out
xor
lods
pop
pop
sbb
cld
in
or
push
sbb
paddusw
leave
arpl
movsl
ret
cmp
aad
out
dec
ret
sub
push
mov
mov
jecxz
addr16
lcall
aad
add
push
gs
sbb
dec
pop
or
enter
pushf
nop
sub
push
push
push
aaa
call
cltd
and
jae
lock
aaa
pop
inc
rorb
jo
in
lock
andl
xlat
outsl
push
lock
mov
mov
push
sub
ret
out
cmpsl
in
in
push
div
sbb
xor
testl
stc
lods
call
mov
jg
imul
xor
pop
mov
daa
push
gs
mov
or
insl
mov
sub
or
mov
lret
xchg
incl
shl
mov
cli
in
xor
lcall
pop
sub
jg,pn
es
mov
sub
fdivrl
inc
mov
dec
mov
jg
ljmp
les
mov
push
es
mov
enter
test
test
sub
mov
call
movl
test
push
dec
out
mov
testb
idiv
and
pusha
xchg
std
mov
pop
clc
rorb
mov
ja
repnz
out
xchg
cli
push
fcompl
dec
push
hlt
and
mov
xchg
inc
adc
fs
idivb
xor
jmp
sub
call
test
aaa
cli
ret
addr16
std
mov
sub
inc
pop
mov
sti
push
jnp
movsb
inc
push
lock
bound
loopne
inc
orl
pop
push
ja
das
push
ljmp
dec
sbb
adc
mov
pushf
push
xchg
leave
divb
icebp
out
xchg
push
lahf
or
in
cltd
call
lcall
adc
stc
push
out
sub
mov
clc
mov
xchg
push
lods
jns
loope
imul
loope
aaa
rorb
movsl
out
iret
mov
jo
repnz
xchg
mov
xor
frstor
inc
std
ljmp
inc
in
lret
dec
adc
jp
jnp
in
hlt
mov
jno
test
les
mov
sbb
daa
mov
andb
aam
pop
push
fcomi
cmp
les
ja
in
adc
subb
xchg
shl
xor
mov
sub
sti
fs
jmp
cmp
jo
loop
in
push
in
notb
mov
sub
inc
push
pop
mov
adc
or
nop
ror
cmp
fs
ficomps
mov
clc
and
xor
hlt
push
daa
sub
or
jno
jp
shlb
je
jge
repz
call
xlat
pop
test
movsb
pop
or
mov
mov
mov
icebp
mov
jns
sbb
jns
push
lock
inc
dec
sub
into
fists
or
test
sarb
mov
mov
adc
adc
mov
adc
mov
push
loope
fs
les
push
int3
or
inc
push
sbb
lea
inc
lock
fcmovnu
add
add
sbb
inc
fwait
and
sbb
fiadds
stc
clc
or
xor
ja
enter
pusha
test
sbb
dec
adc
mov
jb
or
push
sbb
js
lock
and
and
jmp
lret
in
mov
pop
mov
sub
sti
mov
adc
cmp
sub
test
cmpl
sub
stos
pusha
test
out
cmc
sub
jg
inc
in
testl
in
mov
and
out
mov
cmp
popf
pusha
mov
imul
pop
push
call
stc
dec
stc
dec
fidivrl
cmp
je
js
xchg
push
mov
in
fnstsw
sbb
out
sti
mov
scas
xchg
and
push
mov
mov
stos
pop
pop
push
pop
cmp
loop
xor
push
sahf
or
subb
cmpsb
pop
adcl
xchg
cwtl
je
push
xchg
and
cli
ja
add
in
inc
mov
adc
dec
mov
fimuls
js
shld
pop
aaa
pop
enter
repnz
mov
mov
cs
cmp
or
cwtl
and
decl
loope
adc
push
mov
xchg
mov
into
imul
mov
sbb
fnstcw
fists
sbb
sbb
push
cmc
inc
addb
mov
pop
add
and
dec
loopne
sub
cmp
popa
mov
fisttpll
mov
fcomps
pop
dec
stc
mov
shll
lock
mov
dec
lahf
cwtl
les
cwtl
in
xor
fdivl
fs
in
imul
insl
test
mov
pop
arpl
ja
sbb
or
xor
inc
test
pop
clc
jae
sub
int3
stos
fisttpl
repz
pop
push
test
imul
add
into
outsl
icebp
fidivl
push
mov
mov
sbb
cmp
cmp
xlat
jbe
jge
mov
xlat
shl
in
mov
outsb
inc
adc
das
sarb
sbb
stc
out
fwait
add
and
mov
inc
xor
and
cld
out
daa
test
xchg
sbb
mov
mov
mov
inc
jmp
jne
jmp
test
in
inc
xor
in
cld
test
sub
jge
std
xchg
xchg
pop
frstor
push
sbb
lods
inc
into
jae
test
lods
sbb
dec
adc
adc
shr
pop
push
mov
dec
add
inc
inc
and
sbb
adc
dec
pop
and
in
addl
jnp
mov
cmp
out
lds
add
cmp
add
fwait
cmp
cmp
int
xor
sbb
mov
adc
pop
int
jnp
test
xorl
sub
jnp
outsl
aas
pop
jno
sarl
mov
sub
popf
call
mov
add
cmp
jno
gs
stc
ret
and
pop
mov
inc
int3
cmp
aas
cmpsl
testl
adc
dec
test
pop
std
test
jbe
in
addl
pop
fs
sub
jmp
push
dec
push
inc
sbb
loop
adc
inc
xorb
and
stc
dec
in
mov
mov
add
jmp
mov
xor
or
push
clc
mov
inc
cmpsb
add
lods
jns
or
aas
dec
jnp
rclb
jecxz
insb
add
std
xchg
jge
in
pop
shld
ds
cwtl
cmp
pop
out
mov
mov
cld
ret
jge
cmc
jo
jns
mov
fistpl
push
insl
ds
and
xor
jp
ret
cs
xchg
push
sub
repnz
sbb
fmull
mov
sbbb
jl
dec
xchg
add
mov
add
clc
fdivrs
jae,pn
sub
xor
les
and
ja
fisttpll
mov
cmc
fwait
inc
jmp
add
fiadds
or
addr16
pop
call
push
pop
mulb
ja
push
test
testl
subb
and
and
cmp
and
rorl
orl
pop
inc
dec
test
push
std
std
or
adc
adc
and
cmp
add
mov
pop
mov
sbb
data16
nop
push
push
jne
lcall
test
jo
out
jae
fidivrs
push
push
std
ret
xlat
sub
in
cmp
push
lcall
cld
add
mov
mov
xchg
loope
push
sti
pusha
jb
popa
fdivs
cmp
into
pop
cmc
mov
cld
dec
cmp
out
push
cmp
addr16
flds
dec
jg
or
out
addr16
cli
xchg
xor
inc
imul
out
dec
push
lock
icebp
or
ret
divl
fsub
out
or
pop
mov
call
mov
leave
fwait
adc
arpl
xlat
xor
js
mov
xor
xchg
push
dec
or
jle
in
jnp
cmp
mov
or
and
jno
sbb
cmpb
out
pop
inc
ds
jecxz
insl
mov
jbe
daa
add
std
lock
jnp
inc
pop
lock
cmp
aaa
xlat
mov
cmp
movsl
stc
aas
push
lcall
addl
xor
std
push
dec
sahf
mov
inc
jmp
sub
rep
out
xor
mov
icebp
sub
adc
cmp
in
pop
inc
sahf
call
stc
mov
dec
jg
adc
add
mov
test
or
mov
cld
jl
jge
movsb
pop
rcr
sub
fildll
sub
ja
sbb
inc
iret
mov
push
jo
xchg
in
pop
idivb
pop
push
popf
mov
xchg
pop
dec
cmp
jnp
movl
push
add
inc
gs
loop
jbe
inc
aad
sbb
call
sahf
lock
stos
xchg
adc
or
add
jmp
das
jp
into
add
les
or
imul
shlb
bound
pop
mov
lods
in
cmpsb
and
sub
popf
push
fs
fxtract
rolb
mov
or
out
cs
pop
mov
in
pushf
test
mov
push
push
jg
andb
sub
call
push
push
push
loope
pop
std
mov
lods
jnp
pushf
lds
int
sbb
dec
mov
adc
gs
lcall
call
mov
div
and
jl
arpl
out
xor
je
xor
or
loop
mov
pop
divb
std
inc
jno
and
jl
cli
and
mov
aaa
test
fidivl
popf
xchg
jle
mov
cmp
fdivrs
and
sarl
jp
sahf
fs
les
mov
sub
imul
aad
adc
les
sub
inc
mov
icebp
ror
xchg
jbe
test
jo
in
test
mov
mov
xor
pop
push
sbb
inc
mov
fcomip
call
loope
daa
ja
mov
mov
out
and
and
ds
xor
sbb
xor
mov
fidivl
dec
pop
cmp
popa
mov
bound
int3
cwtl
mov
repz
sub
xor
out
sbb
cmc
sbb
sub
loopne
jmp
scas
fdivs
push
xor
cmp
repnz
and
sub
mov
mov
and
dec
sti
loope
or
int
push
mov
add
push
int3
pmullw
inc
adc
dec
add
and
dec
icebp
shll
out
mov
push
jae
sbb
pusha
fidivl
aas
mov
jl
inc
lods
xchg
stc
pop
stc
inc
lock
pop
xchg
xchg
into
push
stc
mov
daa
push
dec
leave
pop
xor
push
arpl
and
outsl
or
mov
mov
daa
outsb
add
cwtl
jo
int
jno
push
es
push
test
xor
mov
cmpb
pop
jmp
faddp
sub
out
push
icebp
mov
test
mov
pop
dec
neg
sbb
out
cmp
sub
pop
push
add
or
jl
dec
pop
xlat
or
sub
fwait
add
test
xchg
test
jne
mull
inc
ret
aaa
leave
jp
inc
call
enter
pop
stos
sub
out
sub
mov
push
das
or
cli
sarb
push
add
fiadds
push
ret
mov
shlb
push
adc
int3
pop
xor
test
dec
mov
push
inc
dec
xchg
push
xor
les
and
loop
mov
insb
fstpt
std
jns
lds
ret
subl
das
sbb
outsb
sub
cmp
mov
test
push
pushl
pop
inc
leave
fcomps
lods
fldenv
stc
icebp
sub
push
js
or
xchg
mov
push
int3
mov
leave
ss
mov
iret
and
sahf
pusha
aas
inc
ret
mov
xchg
pusha
xchg
call
or
push
sub
cmpsl
mov
push
xchg
shrb
imul
jne
inc
pop
inc
lods
scas
mov
xor
fs
fidivrs
ds
jnp
ficoms
xor
xchg
femms
push
sbb
sbb
loope
sub
out
aas
sub
lds
adc
cltd
out
loop
jg
es
sar
in
mov
repnz
mov
mov
sbb
push
ljmp
xor
sub
mov
mov
push
hlt
and
cmp
push
xor
frstor
lcall
std
repz
ror
add
pusha
mov
ss
xchg
xor
mov
out
inc
or
sub
jbe
cmp
and
fldl
inc
cmp
push
nop
jnp
add
leave
daa
je
mov
and
test
jp
inc
or
push
int
popf
or
test
repz
int3
inc
testl
fisubl
in
stos
mov
xchg
test
and
fldenv
dec
sbb
stos
int
lock
int
lock
negb
bound
xchg
in
cmp
decl
add
subl
push
inc
loop
ds
adc
out
lret
xor
insb
frstor
adc
bound
shll
mov
cmp
push
mov
imul
mov
adc
push
sub
lea
ljmp
mov
fisubs
fsubs
in
xorl
mov
iret
mul
scas
lods
std
iret
adc
pop
cmp
lea
sub
adc
push
pop
ss
xor
clc
aaa
cmp
jbe,pt
mov
mov
jp
pop
adc
pop
sti
push
loopne
shlb
pop
jl
out
pusha
sub
lods
ret
pop
pop
cli
and
xor
cwtl
cmc
dec
out
addr16
mov
call
mov
dec
bound
xlat
lret
pop
test
jp
inc
mov
in
jbe
cmpb
leave
test
ffree
dec
das
mov
inc
pop
xor
lcall
mov
loope
pop
not
inc
arpl
pushf
repnz
ljmp
out
cmc
sub
or
jg
aam
pushf
popa
mov
xchg
fidivs
push
fchs
in
icebp
mov
pop
repz
fldcw
dec
lods
sahf
push
adc
test
dec
dec
sbb
push
sbb
movsl
repnz
std
sub
imul
test
inc
out
jmp
mov
fdivl
mov
sbb
and
stc
and
enter
or
mov
inc
insb
pop
std
ja
mov
shrl
lea
cmp
add
xorl
push
xor
jg
out
inc
aas
mov
fcoml
fucom
mov
xor
ljmp
add
push
xor
dec
rcrl
xor
movsb
xchg
sub
sub
lods
outsl
jmp
mov
fimuls
pop
push
shll
inc
or
jge
sti
fistpl
sahf
test
dec
jns
addl
jno
in
mov
outsb
push
adc
popa
jb
dec
inc
adc
mov
push
fs
subl
jmp
xchg
xlat
xchg
pop
cs
into
cmp
mov
loop
mov
les
sbb
mov
lods
prefetchw
or
mov
mov
dec
xor
scas
sbb
mov
aas
xchg
inc
aad
cmp
inc
popa
mov
push
and
sbb
add
sbb
jmp
test
and
mov
mov
jp
inc
xchg
push
fdivrl
jmp
cmpsl
push
cmpsb
adc
cmp
imull
std
loope
xor
mov
cli
ja
jo
not
push
aaa
sbb
clc
mov
adc
outsb
imul
in
sti
mov
notl
pop
cmp
xchg
push
push
out
dec
xchg
mov
push
mov
sarl
dec
or
mov
xor
repnz
mov
enter
inc
mov
jne
hlt
loope
hlt
jae
cmp
lods
or
out
loop,pn
push
andb
pop
jmp
jns
sub
cwtl
dec
push
sahf
testb
test
and
cmp
and
sti
outsl
and
loopne
dec
test
pop
pop
mov
xchg
sub
pop
mov
ficomps
test
test
mov
bound
loope
repz
push
lds
sbb
push
sahf
push
jno
adc
cmpsl
icebp
pop
daa
inc
adc
mov
insl
mov
jno
outsl
xchg
cmp
push
rcrl
push
aad
je
sub
fucomi
xor
pop
cld
cmp
ds
or
lret
gs
mov
xchg
lock
mov
push
fs
mov
inc
add
mov
mov
push
cmpsb
fbld
add
leave
mov
sub
jp
aam
fdivl
push
fisubs
pop
jl
inc
sahf
not
fisubs
xchg
loope
xor
in
pop
clc
mov
xor
test
or
adc
stos
pop
mov
lahf
test
jnp
inc
hlt
stos
div
adc
dec
test
jp
cmp
xlat
xchg
loop
inc
stc
dec
sub
cmp
mov
or
and
enter
inc
scas
adc
xchg
and
and
mov
sbb
lea
dec
inc
les
arpl
cmc
mov
js
clc
cmp
mov
pop
std
jmp
mov
imul
les
sbb
pop
cmpsb
loopne
jmp
mov
xchg
fiaddl
sbbl
mov
cmp
jmp
cli
orb
insb
popf
je
ficompl
pusha
inc
jg
mov
jne
push
mov
cli
pushf
sub
test
and
jbe
incb
dec
cmpsb
adc
pop
test
popa
loopne
mov
scas
aad
xor
mov
mov
shll
xchg
or
xor
lock
mov
mov
jmp
or
test
in
mov
aad
xor
mov
inc
and
in
mov
or
in
xchg
mov
mov
ja
les
aad
bound
lret
lds
outsl
xor
lret
outsb
add
scas
in
hlt
aad
jno
lret
in
addr16
mov
scas
fnsave
fadds
hlt
div
push
inc
pop
test
lods
loope
fadds
mov
push
xor
js
idivl
aas
dec
pop
push
sarl
xchg
lret
es
pop
adc
mov
cld
mov
jns
sbb
xor
and
xchg
testb
cwtl
lret
insl
jg
decl
adc
lock
xchg
push
lods
inc
mov
and
push
xorb
mov
push
and
cmp
inc
jae
dec
lcall
dec
lahf
jae
xor
sub
gs
mov
sub
mov
aam
fcoms
dec
push
inc
fdivrl
mov
fs
rorl
add
ljmp
push
rol
daa
xchg
hlt
jge
in
xor
ss
lret
mov
dec
mov
dec
shrb
jecxz
cmp
aas
hlt
stos
dec
inc
jmp
in
and
add
fmuls
loope
mov
xchg
in
adc
mov
in
ja
dec
xchg
into
movb
jle
ja
jge
pop
lcall
mov
js
mov
subb
movsb
or
adc
js
cmc
mov
lods
je
sbb
fiaddl
mov
stc
lods
push
jno
fcomps
movsb
jne
loope
xchg
mov
ljmp
cwtl
sahf
xor
stc
xchg
into
in
daa
xchg
jne
cmp
jns
adc
inc
ficomps
pop
scas
lods
adc
xchg
and
xchg
cmc
xor
mov
jbe
pop
pop
lret
ljmp
jnp
xor
test
mov
xor
std
xor
xchg
sbb
push
push
imul
jge
insl
nop
push
add
icebp
in
std
jae
andb
leave
call
jae
push
fsincos
xor
xchg
into
cmp
enter
xor
push
iret
add
mov
in
ret
mov
push
push
inc
jmp
pop
imul
pop
xor
sti
adc
pop
mov
decb
in
cwtl
movsl
adc
out
jne
pop
fmulp
xchg
adc
addr16
jns
idivb
fistl
and
sbb
pushf
pop
mov
push
lret
jae
faddl
roll
push
or
xor
in
sbb
std
psrlw
and
mov
cmp
sub
mov
inc
sub
and
lds
shrb
sarl
in
mov
xor
clc
mov
stos
fimull
dec
add
clc
or
xchg
mov
out
fprem1
xlat
dec
js
in
nop
inc
mov
fdivrl
jmp
imul
sti
sub
mov
push
adc
std
lcall
mov
push
jp
repz
into
lcall
outsl
adc
pop
adc
clc
mov
mov
pusha
je
xlat
push
mov
jg
aas
push
hlt
or
cmp
jne
fmulp
es
lods
popa
inc
ret
mulb
idivb
and
sarb
cwtl
jecxz
jecxz
not
pop
add
pop
adc
pop
xor
xchg
arpl
ljmp
push
fcmovu
pop
sbb
or
ficomps
cld
jnp
push
inc
lea
inc
je
movsl
inc
push
pandn
sub
sar
jecxz
xor
clc
inc
pop
addr16
inc
add
dec
shrl
sbb
sbb
push
out
enter
pop
pop
or
stos
cltd
enter
ss
mov
pop
mov
xor
mov
lcall
ss
mov
and
or
out
sbb
jmp
mov
jecxz
shrb
adc
add
sbb
dec
jg
js
in
jle
mov
stos
sub
pop
and
mov
dec
sub
loopne
lahf
or
imul
loopne
test
in
and
cs
hlt
sub
dec
sub
jecxz
mov
test
addr16
or
sub
stc
stc
outsb
fisubs
in
mov
jmp
call
jp
imul
mov
sub
fdivrs
inc
enter
divl
mov
push
mov
dec
jno
dec
fcmovnbe
cwtl
int
mov
xor
popf
repnz
ret
dec
inc
and
je
pop
mov
into
ja
xlat
leave
mov
push
cmpsb
jmp
loopne
addr16
sub
xchg
xor
xchg
aam
pop
and
dec
mov
mov
sub
push
call
in
cs
lods
leave
mov
jns
fistpll
xlat
sub
mov
jae
mov
sti
cmp
and
inc
add
sub
inc
rolb
int
repz
lcall
daa
scas
dec
lret
sub
add
mov
ss
sub
add
movsb
cmp
adc
lods
cmc
cmp
sarl
add
push
cmpsl
out
mov
aam
inc
inc
sub
jns
sbb
inc
aad
outsb
and
int3
es
loop
stos
repz
repnz
mov
xchg
pop
xchg
popa
scas
xor
inc
movsl
ja
sub
hlt
stos
mov
shlb
fidivrs
lds
cmc
in
cmpsl
pop
aaa
aaa
loope
movsl
push
pop
sti
dec
or
sbb
shrb
pop
div
mov
fsubrs
dec
mov
mov
mov
mov
aam
ficoml
add
test
fcoml
clc
clc
push
gs
test
lahf
scas
xchg
lret
subb
add
sbb
sub
or
jb
xchg
mov
and
divl
int
sbb
mov
stos
jp
push
pop
lcall
cmp
rorb
jbe
imul
sbb
bound
inc
int
mov
sub
ljmp
cs
fistps
std
sub
inc
cld
das
mov
repz
mov
sarl
or
sub
enter
push
add
int
sub
enter
lds
push
ljmp
pop
ja
xlat
mov
push
in
arpl
mov
pop
xor
xchg
add
clc
cwtl
icebp
sbb
jns
xchg
jle
sub
mulb
mov
cmp
mov
inc
sahf
cmpb
cmp
pop
or
mov
ret
mov
andb
xor
in
sbb
clc
lret
cmp
mov
cld
sub
dec
xchg
xor
jecxz
test
cmp
and
xchg
add
stc
inc
xchg
sub
mov
fstpt
mov
ficoms
gs
xchg
addl
aaa
fistpl
xor
xor
movsl
call
jge
ja
jbe
adc
in
inc
stc
ror
lret
pop
loope
lret
rcll
push
rorl
dec
pop
xchg
adc
inc
xor
mov
xchg
fwait
dec
popa
sbb
inc
sbb
ja
pusha
cli
aad
push
out
fsubs
repz
pop
arpl
and
sbb
movsl
pop
in
inc
push
lret
cmp
lcall
daa
aaa
mov
lods
mov
scas
lock
mov
mov
int3
pop
inc
aas
arpl
inc
sbb
cmpsb
rorb
cmp
pusha
not
push
ds
cmc
sub
aad
sub
pop
iret
incb
mov
inc
in
movsl
lea
cmp
xor
fstps
clc
adc
mov
pusha
jb
and
sbb
int
pop
in
mulb
dec
inc
bound
leave
popl
mov
out
xor
cmp
jmp
inc
loopne
mov
add
mov
movsb
mov
pop
insb
sbb
or
aam
rcrl
pop
outsb
loope
mov
jle
icebp
jl
cmpsl
xor
and
mov
lock
mov
call
in
add
stos
popf
fimull
push
inc
cltd
sbb
inc
adc
jns
and
bound
call
mov
and
jg
mov
les
dec
fwait
add
test
inc
sarl
pop
sahf
dec
xor
decb
inc
cltd
pop
adc
enter
jge
fnstsw
push
pop
mull
jle
hlt
adc
mov
cmpsl
sti
fcoms
adc
pop
test
jae
outsb
add
std
jge
ljmp
mov
ret
or
sub
out
push
adc
pop
sbb
mov
adc
or
mov
xor
andl
flds
out
mov
mov
mov
adc
aaa
mov
std
les
sub
hlt
aam
vmovdqu
scas
and
andb
test
lods
stos
inc
or
cmp
inc
daa
test
mov
xchg
insl
nop
stc
cmpsb
xchg
xchg
push
enter
pop
jns
insl
fildl
push
lods
jae
inc
fcoml
in
sbb
push
push
jo
inc
ror
sbb
pop
ljmp
shll
imul
bound
inc
mov
scas
xor
cmp
shll
xor
push
push
mov
mov
push
divl
stos
fidivl
dec
jo
fsin
xor
stc
push
push
int
in
movb
xchg
leave
xlat
cmp
xchg
dec
cmp
not
push
cld
or
hlt
ret
ja
inc
fwait
arpl
inc
enter
adc
notb
mov
inc
add
ficomps
call
enter
fwait
cwtl
cli
mov
faddl
jne
out
std
enter
sti
aaa
mov
pop
andl
test
fsubl
or
jle
inc
pop
jmp
push
inc
mov
loope
jmp
adc
mov
ret
movb
mov
movsb
cmpsb
jp
sti
or
push
outsb
cltd
fistpll
fimull
adc
or
push
and
mov
les
adc
sub
and
sbbl
lcall
addl
pop
mov
add
lock
addr16
cmp
and
leave
cwtl
test
xchg
lock
mov
push
inc
repnz
xchg
dec
test
cmp
adc
movsl
dec
xchg
scas
pusha
incb
mov
fmul
adc
cltd
ss
test
sbb
daa
bound
sub
aam
or
cmpsb
xchg
dec
pop
push
cmp
popa
jmp
out
stos
out
std
mov
inc
xchg
dec
pushf
sarl
adc
iret
xchg
dec
dec
pusha
imul
lcall
add
out
loopne
ljmp
inc
jo
cmp
scas
insb
and
pop
mov
xor
and
leave
scas
push
mov
loopne
push
das
leave
push
or
stc
jb
movsb
xor
fnstcw
adc
mov
js
cmp
pop
or
xchg
or
shlb
adc
out
enter
fildl
outsb
in
outsl
int3
and
data16
push
leave
or
or
mov
cmp
jl
cmp
sbb
in
aaa
xor
adc
stc
mov
fidivl
mov
mov
jecxz
cmp
fisubrs
fldl
and
pop
ret
sbb
or
data16
stc
inc
ret
add
iret
dec
mov
es
call
lahf
cmpsb
fbld
or
inc
dec
jno
mov
sbb
lret
rcr
cmp
cwtl
dec
cmp
pop
xchg
dec
xchg
cmp
pop
inc
mov
aaa
mov
in
inc
jp
jmp
addr16
pop
jb
sbb
test
pop
sahf
mov
jnp
pushf
pop
inc
lea
aad
mov
mov
in
xchg
sar
sbb
aas
mov
sbbl
xor
stos
fidivrl
pop
das
sbb
xor
mov
mov
repnz
xor
aaa
mov
imul
aad
xchg
mov
cli
lahf
mov
and
ja
bound
shll
xor
push
dec
adc
lods
inc
dec
sbb
dec
scas
stos
adc
add
adc
mov
jge
add
lret
lcall
sbb
aad
pop
ret
mov
mov
dec
cmp
and
addl
ret
xor
in
and
scas
xor
xchg
pop
jle
cmp
mov
add
xchg
push
mov
sbb
mov
inc
push
je
push
inc
push
ret
mov
test
daa
lret
mov
xchg
loopne
adc
ffreep
nop
jmp
or
dec
rcll
push
repz
mov
stos
sub
jne
loope
inc
aad
je
or
pop
ss
push
adc
xchg
mov
or
pushl
mov
shl
sbb
jae
inc
aam
sub
mov
adc
gs
dec
outsb
daa
inc
mov
mov
mov
cmpsb
enter
rorl
jg
cmp
mov
out
clc
mov
lock
mov
sbb
cmpsb
inc
dec
shlb
jl
mov
cmc
xor
daa
push
jmp
shll
dec
aam
pop
stc
jle
sub
pop
test
mov
mov
bound
and
repnz
clc
jecxz
stc
lret
ljmpw
adc
lretw
adc
mov
int
loopne
and
dec
mov
pop
sbb
mov
jecxz
push
cmp
cld
in
inc
xchg
push
sbb
xor
in
das
mov
fisubrs
xor
jp
pop
xchg
push
fcomps
xor
sub
sub
cs
in
orb
sbb
jns
or
arpl
lahf
std
aad
sbb
lcall
pop
jg
mov
push
aam
loop
xlat
aas
sbb
popl
dec
mov
jae
imulb
jae
cmpsb
push
imul
test
fcmovnbe
aad
incl
or
xor
cmp
sarl
aam
mov
push
out
cmp
sub
subl
dec
xchg
sahf
shrb
stos
aad
xchg
sbb
jb
fnstenv
mov
repz
enter
les
jmp
pop
sbb
es
mov
repz
ret
fucomip
inc
sub
dec
arpl
sbb
cmp
jle
cmp
pop
arpl
lcall
les
cmpsb
jle
pop
out
lods
xlat
mov
sub
mov
mov
lods
xorb
and
adc
mov
pop
sub
out
mov
cmovno
lret
clc
iret
or
fnstcw
push
mov
stos
push
scas
pusha
outsb
std
test
icebp
xor
aad
cmp
pushf
int
iret
xor
icebp
sub
sbb
aaa
mov
xor
sub
repnz
mov
dec
cmp
xchg
movsl
nopl
push
mov
incl
jg
cmpsb
inc
test
push
mov
mov
inc
mov
lock
popf
nop
sarl
pop
cmp
fxch
outsl
jae
fmuls
mov
jl
cmp
movsl
test
add
scas
push
mov
cmp
mov
into
mull
test
std
cmp
shll
aam
dec
mov
fcoml
pop
in
or
bound
lock
dec
adc
or
mov
or
push
mov
mov
in
repnz
test
les
push
or
popa
addl
inc
cltd
roll
mov
add
fsubr
ret
pop
pop
inc
adc
sub
ret
fsubrl
test
xor
sub
mov
push
stos
mov
mov
jle
add
xchg
dec
rorb
mov
inc
push
movsb
imulb
imul
jbe
mov
dec
insb
ljmp
repz
dec
arpl
rolb
popa
inc
int
push
dec
inc
push
mov
push
sub
fnstcw
shrl
shlb
and
push
in
inc
or
call
popf
add
jnp,pn
mov
ret
popf
pushf
cmc
adc
mov
adc
iret
sub
mov
cmc
push
pop
dec
insb
adcb
sarb
sarl
dec
lods
mov
mov
dec
adc
ljmp
mov
push
dec
inc
in
icebp
int
push
loopne
insb
shlb
cmp
iret
pop
jbe
adc
and
or
cs
shrb
fbstp
sub
mov
push
adc
pop
pushf
push
adc
pop
js
or
xor
call
mov
mov
cmpsb
jp
dec
incl
push
fidivrl
imulb
mov
xor
dec
rolb
inc
arpl
iret
mov
cltd
mov
test
inc
js
out
popa
repnz
enter
cld
dec
sbb
adc
mov
push
mov
clc
sbb
mov
mov
inc
mov
add
test
shll
arpl
add
xlat
mov
ficoml
add
addr16
cmp
cmp
add
adc
les
xor
inc
lret
mov
fldenv
jge
mov
xchg
shlb
mov
xor
mov
das
adc
mov
push
insb
jl
cmp
mov
mov
sar
out
or
cmp
xor
push
mov
push
ror
loope
xchg
mov
loope
push
jo
cmpsl
jae
leave
xchg
add
adc
frstor
test
cwtl
ss
repz
add
or
or
cmp
push
je
or
pop
and
adc
call
jp
arpl
jb
ror
sub
pop
in
xchg
cmp
sbbb
inc
sbb
xor
jge
add
lcall
dec
rorl
test
or
pop
icebp
sbb
pop
jl
shrl
add
lret
popf
ret
es
ret
adc
add
or
repz
loope
ljmp
das
in
out
mov
sub
cmpsl
push
movsb
xor
mov
adc
shl
out
add
mov
adc
mov
push
aaa
jg
vpunpcklwd
mov
jge
fnstcw
or
repz
inc
rcr
jae
stc
mov
sti
xor
mov
popa
cmc
ret
pop
pop
xchg
add
jbe
hlt
sbb
xchg
sbb
mov
pop
mov
pop
insl
rolb
adc
in
rol
or
in
sbb
pop
cmp
mov
mov
inc
iret
dec
xchg
je
popf
fnstsw
add
dec
lcall
int
push
aad
sbb
aas
loope
ljmp
inc
insb
adc
inc
cmc
leave
out
fwait
sbb
stos
int3
inc
sub
xor
mov
js
enter
lods
jne
fwait
bswap
jne
leave
out
fs
sub
lods
add
mov
aam
and
mov
cli
fsts
popa
cmp
mov
mov
and
xchg
mov
dec
ja
add
mov
jo
repnz
dec
jge
cs
push
scas
add
push
fcompl
mov
daa
scas
and
lea
pop
mov
je,pn
mov
pop
push
mov
std
and
mov
adcl
popl
lds
rcr
fcmovu
inc
movsb
cmpsb
mov
or
aas
stc
mov
mov
lds
mov
jle
sbb
cmp
daa
test
xor
lods
icebp
lcall
loope
in
or
ja
push
fcompl
cmp
mov
je
mov
movsb
xlat
inc
lret
out
fsubrl
jbe
scas
jle
jnp
jne
sub
xor
xor
fsubl
lods
push
cmp
scas
mov
out
inc
out
in
outsb
pusha
dec
dec
jbe
lcall
test
in
out
sub
add
dec
cmp
mov
or
sub
aas
negb
pusha
shll
popa
sub
cli
out
aas
mov
mov
addr16
pop
mov
cltd
cmp
mov
sbb
in
xor
in
adc
pop
dec
sbb
ds
bound
pop
out
mov
jae
xchg
fisttps
cmp
std
xchg
aaa
sbb
popf
jp
icebp
popf
mov
daa
jb
mov
cmpsb
rclb
or
add
dec
jbe
or
mov
shrb
pop
jecxz
adc
lods
push
jb
leave
sbb
shl
sbb
push
in
jne
sub
mov
jnp
adc
push
dec
jmp
testb
fidivs
aas
pop
idivl
inc
jp
in
int3
lea
sub
xchg
jg
or
dec
sub
test
inc
orb
loopne
jl
lock
xchg
popa
insb
xor
cmp
mov
loope
jne
add
hlt
repz
mov
sbb
enter
clc
cmp
fwait
std
add
jae
mov
sub
cmpsb
imul
ljmp
xor
sbb
ja
ljmp
lret
push
aam
sub
lods
or
popa
fldl
rorb
roll
pop
data16
mov
movsl
out
mov
cli
ss
mov
mov
cwtl
je
mov
enter
call
test
jnp
ja
jbe
outsb
or
xchg
dec
int
xor
mov
sub
daa
nop
cltd
add
dec
movsl
pop
xchg
sub
in
arpl
movsl
and
xchg
pop
fbstp
mov
test
test
xchg
adc
jo
jmp
adc
sub
ret
xchg
and
mov
icebp
mov
cmp
int3
lcall
sbb
or
and
outsb
jb
inc
aam
rcrb
xchg
cmp
dec
test
push
and
pop
ljmp
cmp
rorl
add
xor
push
jg
or
mov
inc
test
or
lds
or
sbb
outsb
out
stc
jne
aaa
mov
jae
and
mov
hlt
shrl
icebp
jmp
add
mov
jae
jbe
popf
pusha
add
fwait
ja
inc
add
mov
push
sbb
jmp
das
out
addb
sbb
cmpsl
stos
cmp
imul
bound
push
cmp
and
out
cmp
fmuls
repnz
jne
push
cmp
loope
cmp
cmpsl
pop
iret
jno
mov
cli
fcomps
cltd
and
push
enter
mov
jbe
lods
sub
sbb
sub
cmp
sar
arpl
mov
adc
sub
or
test
add
aaa
in
fistpl
jns
cmp
cltd
xchg
sbbb
push
dec
js
mov
out
sub
jl
lret
mov
dec
es
or
clc
mov
cmp
sbb
ror
sub
push
clc
dec
mov
lret
ljmp
rcr
iret
cmpsl
pop
fistpl
fcomps
and
push
mov
jge
je
into
xor
aas
sbb
into
test
add
add
lret
cmpsl
lret
and
sbb
or
mov
pushf
mov
movsb
jge
std
sti
inc
insb
sub
loopne
jl
add
insb
sub
hlt
dec
aad
or
stos
mov
jp,pn
ja
mov
xor
cs
in
xchg
xor
sbb
lret
lahf
pmaddwd
mov
push
imul
add
add
mov
jae
mov
fwait
adc
jg
inc
push
popa
in
add
inc
mov
pop
mov
int
or
fbstp
testb
clc
sahf
pushf
push
mov
into
inc
push
shll
enter
push
addb
xorl
aas
cltd
sbb
cmpsb
dec
jns
push
aad
mov
sbb
mov
int3
add
pop
or
push
jnp
push
push
xor
or
sub
cmp
jl
inc
fidivs
dec
or
mov
stc
mov
pop
and
sbb
push
fucom
mov
mull
popa
inc
xchg
mov
jno
sbb
movsb
mov
mov
pop
outsl
rorl
movsb
mov
ret
jecxz
mov
inc
out
std
data16
inc
aaa
cmp
inc
fistps
push
push
outsl
adc
popa
decb
lds
inc
mov
and
mov
movsb
xchg
push
shll
orl
loopne
int3
mov
gs
lea
out
mov
div
hlt
mov
mov
dec
jle
inc
xlat
and
repnz
dec
or
push
xor
rolb
jle
xchg
clc
imul
das
outsl
ret
adc
xor
pop
repz
stc
xchg
or
xchg
mov
pop
pop
icebp
out
mov
adc
add
pop
mov
lods
lock
push
mov
dec
add
xchg
mov
push
repnz
and
insb
cs
in
add
fidivrs
das
shl
pop
std
into
cmp
repnz
xor
or
sub
pop
sub
add
pop
dec
mov
lds
outsb
cmc
inc
xor
jp
data16
push
add
jne
or
leave
inc
inc
cmp
mov
xlat
jne
les
out
push
jp
les
ds
adc
xor
cmp
mov
insb
cmp
aas
out
outsl
ret
xchg
push
or
mov
popf
sbb
insb
inc
loopne
xor
cmp
xor
jbe,pt
hlt
cmpsl
nop
aad
sbb
insb
ljmp
dec
loop
pusha
mov
out
xor
les
jbe
jecxz
xchg
arpl
xor
add
mov
sub
dec
inc
mov
movsb
iret
hlt
push
inc
xor
in
add
pop
push
inc
movsb
or
jbe
fldl
push
and
sub
testl
cmp
push
mov
repz
cmp
inc
cltd
aad
mov
sub
arpl
clc
jae
sub
movsb
add
dec
xchg
lret
adc
in
inc
out
add
xor
mov
xor
aad
pop
lods
cmp
push
js
adc
fidivl
mov
dec
es
add
xchg
dec
mov
push
mov
leave
jl
pop
arpl
sub
mov
xchg
xor
js
inc
stos
ret
out
mov
xor
xor
jmp
jae
mov
int3
jecxz
dec
and
into
adc
mov
push
and
popa
iret
lods
xchg
repnz
lock
aam
mov
js
mov
mov
sbb
addl
lret
adc
or
aas
fnsave
pop
add
lods
push
jle
sbb
adc
aas
push
je
add
bound
fldcw
add
sarb
arpl
sub
subb
aas
mov
xchg
xchg
pop
imul
cmp
add
or
push
scas
dec
imul
cmpsl
sbb
lods
inc
lock
insl
ds
popf
add
scas
and
lods
add
decb
pop
ds
stos
xor
mov
mov
sbb
add
ljmp
cmpsl
enter
shrl
sub
xor
scas
icebp
or
adc
shr
movsb
push
data16
xchg
aaa
das
adc
adc
push
jne
mov
loope
int
out
mov
orb
nop
pop
sbbb
arpl
inc
stos
sbb
mov
adc
mov
jbe
lret
cwtl
mov
xlat
sbb
sbb
mov
mov
sti
xchg
mov
hlt
les
cli
or
int
pop
mov
and
xchg
jge
test
lds
cmp
jno
jb
movsl
add
shlb
mov
mov
ret
lods
sbbb
cs
mov
jle
mov
in
js
cmpsl
xorl
xchg
stos
sub
fisubrl
mov
xchg
xlat
pop
xchg
ds
dec
jle
sub
lcall
xchg
je
xor
jge
cmp
mov
mov
in
and
mov
pop
rcll
ret
das
jmp
push
stos
cmpsl
add
xlat
lock
lods
incb
mov
in
xor
xchg
jp
cmp
insb
mov
sub
xchg
cmpsl
push
dec
push
popa
aam
xorl
pop
xchg
rcr
inc
push
rclb
inc
push
insl
lds
in
mov
loope
mov
pop
insb
xchg
mov
or
and
pop
mov
sahf
or
mov
lock
popf
addb
into
cmp
mov
inc
notb
xor
div
notb
andl
testb
xchg
add
data16
je
or
mov
sbbb
aam
fisubs
jge
inc
cwtl
xchg
shrl
lods
test
or
and
ror
cmp
sub
jge
outsb
inc
cmp
xor
or
cmp
sti
ret
xchg
stc
inc
imul
xorl
jl
mov
dec
push
lcall
bound
xor
out
into
ja
bnd
push
ficoml
pop
cli
lods
dec
bound
jg
inc
sub
sbb
add
in
sbb
aas
pop
in
adc
mov
ja
pop
cmp
sub
fdivrl
inc
fisubrs
pop
dec
jecxz
daa
lret
std
aad
jnp
jmp
inc
pushl
inc
adc
loop
cli
or
lods
mov
test
sbb
add
xor
fcmovnbe
fadd
pop
xor
out
mov
cmp
fists
int
nop
jp
loope
popa
xor
add
mov
cmp
push
movsb
or
inc
stos
call
push
cltd
adc
mov
and
lods
push
mov
pop
outsb
mov
idivl
popf
lahf
pop
mov
pop
or
add
push
xchg
ss
leave
cltd
loop
xor
cmp
and
jns
shll
movsl
rolb
test
les
cmpxchg
adc
sbb
lods
inc
add
add
mull
inc
mov
sbb
cmpsl
lods
stos
jmp
idivl
inc
lds
aaa
sbb
pop
jp
shlb
dec
lds
mov
mov
dec
lods
mov
xor
loop
sub
lock
mov
mov
xor
mov
mov
fucomip
scas
xchg
sub
icebp
pop
out
xchg
dec
add
mov
fs
fcomip
add
inc
and
out
pop
sbb
push
push
ret
out
mov
xchg
adc
and
nop
loop
cs
adc
cmpsl
mov
jnp
cmpsb
xor
mov
in
nop
add
or
inc
cmp
dec
push
mov
inc
pop
insb
adc
cltd
jmp
jecxz
hlt
testb
movsb
jne
cmpsb
cmc
pop
ljmp
mov
add
mov
fisttpll
and
and
lret
add
test
cmp
in
sbb
icebp
hlt
je
sub
lahf
flds
loopne
pop
repz
rcrb
lahf
es
mov
mov
repz
or
pop
decb
mov
jle
mov
xchg
in
in
xlat
outsb
mov
xchg
inc
xor
or
ljmp
adc
loope
push
lret
out
mov
lods
gs
jns
sub
test
mov
nop
mov
test
xchg
sti
sbb
sbb
repz
inc
push
inc
sub
gs
out
popf
popf
jae
dec
clc
xchg
sub
pop
adc
inc
mov
decl
out
add
loope
mov
mov
sbb
addr16
scas
leave
push
pushw
and
cmpsl
add
pop
mov
mov
fsubrl
aaa
pop
xchg
adc
lcall
adc
sbb
pushf
jnp
mov
push
push
xchg
fsubrs
mov
call
test
movsl
xchg
test
add
or
jp
std
mov
movsl
icebp
test
push
ficomps
add
pushf
sbb
stc
or
lock
lret
jae
lcall
call
ja
push
leave
lods
popf
and
or
xor
jae
add
movsb
jp
or
push
push
cwtl
push
stos
outsb
and
adc
aas
inc
flds
sbb
mov
aaa
cwtl
inc
inc
sub
ljmp
movsb
pop
add
mov
call
sbb
addl
or
das
sub
dec
ljmp
test
mov
dec
inc
add
push
mov
mov
add
out
mov
ja
xchg
inc
fistl
insl
lret
jl
scas
lock
inc
pop
mov
push
je
inc
add
adc
pushf
push
mov
dec
sub
ret
xor
or
pop
mov
mov
xor
pop
cmp
pop
sub
lods
addr16
sahf
rcrb
jae
pop
add
pop
test
shll
gs
cmpsl
inc
sbb
add
popf
inc
mov
dec
mov
pop
insl
stc
fdivs
cmpl
call
imul
pop
rcrb
and
mov
daa
hlt
adc
lahf
out
and
loope
loopne
out
xchg
sbb
mov
pop
lock
jno,pn
dec
jb
jmp
jb
mov
gs
daa
adc
repz
push
loopne
jl
or
enter
xor
xor
pop
push
xchg
sbb
dec
loop
jl
enter
sbb
jp
stos
add
fs
repnz
mov
stos
add
cmp
inc
add
dec
std
jo
pop
sti
xchg
inc
mov
adc
adc
cs
sbb
arpl
sbb
mov
or
sahf
imul
sbb
stos
adc
in
insl
xchg
bound
inc
gs
mov
sub
sub
xor
inc
cli
std
pop
dec
jae
cmp
ret
lahf
mov
add
fld1
out
adc
stos
and
push
sub
xor
rolb
pop
inc
xchg
fcmove
xor
aaa
lahf
or
iret
adc
mov
mov
fidivrs
cmpsb
mov
roll
cwtl
aam
push
insl
int3
push
orb
xlat
xor
xlat
dec
lcall
jne
pushf
adc
ja
and
popf
mov
or
ljmp
outsb
sarl
je
xchg
out
negb
sbb
fcmovne
cltd
add
shll
or
jmp
scas
mov
lret
cmp
and
imul
nop
push
imul
push
adc
fwait
imulb
or
test
dec
push
sbb
xor
addr16
sbb
imul
movsb
dec
xor
enter
and
insb
cmp
add
roll
nop
cmc
push
xlat
mov
adcl
lock
jecxz
pmovmskb
jmp
fxch
fxtract
test
or
lcall
add
test
lahf
cmp
jae
ret
pop
scas
lock
fwait
pushf
fldt
test
jnp
or
push
jnp
test
inc
add
jb
jl
dec
in
dec
jmp
rolb
adc
push
popf
add
in
jge
inc
loope
add
int3
mov
nop
lcall
subl
sub
jno
inc
sbb
clc
test
frstor
movsl
fistl
cwtl
movsb
dec
scas
or
adc
scas
adc
ffree
repnz
mov
xchg
mov
mov
sbb
sbb
cmp
or
scas
jo
mov
xor
push
sbb
lods
das
add
mov
sub
mov
lock
call
cmp
test
sbb
stc
pop
cltd
bound
mov
jp
mov
adc
xlat
pop
cli
sbb
stos
pop
lcall
jmp
stos
fdivr
addb
and
jp
out
stos
xchg
out
addr16
mov
sbb
loope
orl
pop
mov
jb
mov
cmp
mov
sub
enter
sarb
mov
jge
rorl
fisubrl
outsb
push
test
xchg
aas
imulb
and
lods
vmovhps
lret
stos
mov
arpl
idivb
or
inc
lods
sub
aad
std
mov
popa
faddp
cmp
mov
mov
mov
xchg
sti
add
and
mov
mov
int
mov
mov
das
jecxz
jg
mov
push
in
mov
movsl
shll
pop
jns,pt
xchg
and
iret
movsb
and
out
jnp
sbb
and
and
popa
fsubrs
ja
pop
movsl
sbb
xchg
and
mov
jmp
push
neg
xchg
adc
iret
adc
and
jo
or
sub
inc
aam
add
in
ss
xchg
stos
mov
ret
dec
cmpsb
cli
xor
lds
jge
mov
push
add
xor
or
push
pop
add
insb
int3
pusha
lcall
ja
in
add
lahf
add
xlat
iret
pop
sub
mov
icebp
or
jno
cmc
mov
popa
loope
fadd
arpl
and
insb
xchg
mov
test
mov
dec
pop
mov
or
mov
sub
es
push
inc
lret
into
lods
xchg
test
sbb
adc
aas
fstpl
push
pop
insb
xchg
das
add
imul
in
mov
pop
adcl
jmp
nop
pop
mov
cmp
out
inc
push
jmp
push
and
lret
mov
pop
adc
test
mov
lidtl
testb
cmpsb
jge
arpl
imul
int
loope
enter
ret
xchg
or
add
inc
rcr
psllq
cmp
ret
scas
jae
mov
loopne
jne
addr16
in
jmp
push
scas
mulb
xchg
add
inc
cli
bound
push
adc
jae
hlt
and
sbb
jnp
dec
dec
mov
stos
hlt
lea
shr
sub
idivb
push
lock
mov
or
add
int
fistpl
xchg
xchg
test
cmp
ja
push
out
pop
add
movb
fucomp
xor
sbb
mov
hlt
mov
ret
std
lcall
or
dec
xchg
adc
pop
fsubrl
flds
insl
sbb
xchg
cmc
push
inc
dec
insl
push
mov
add
cmp
xchg
pop
loop
sti
addr16
gs
inc
xor
push
test
dec
ds
aad
jl
stos
mov
cs
jge
cmp
sbb
add
fsts
mov
out
ja
in
out
add
mov
add
mov
mov
pusha
mov
push
pop
repz
fld
fldt
push
test
out
jg
mov
mov
inc
lahf
fnsave
loopne
xchg
add
cmp
mov
loopne
in
cmpsb
test
rorl
mov
mov
sub
mov
faddp
pusha
xchg
and
mov
fldenv
cmp
mov
out
or
dec
xor
jno
in
rcrl
in
add
xchg
int3
xor
scas
jne
in
push
dec
add
in
jo
lock
testb
push
mov
mov
xchg
xchg
cli
pop
and
lods
or
mov
loopne
es
sub
bound
pop
insl
xor
jecxz
mov
mov
ss
mov
subb
jae
lret
sub
adc
addb
mov
lahf
inc
js
dec
cmp
inc
or
lret
int
add
lcall
jno
adc
popa
add
lret
adc
pop
fwait
mov
adc
add
push
mov
dec
push
jno
out
pop
stos
cmp
dec
dec
test
add
mov
jecxz
lods
fidivrl
fstpt
mov
iret
ret
sbb
push
and
outsb
inc
cmp
add
jmp
adc
stos
clc
push
mov
pop
pop
mov
add
mov
or
clc
jb
mov
stos
xchg
inc
pop
and
jge
inc
cli
xchg
add
fstpl
sub
jae
ja
insl
aad
dec
pop
es
daa
or
mov
jle
rdtsc
cmpsb
bound
bound
mov
pop
lods
stos
cmpsb
mov
int
popf
mov
jne
cmp
pop
sub
jmp
shlb
addr16
std
jmp
leave
inc
add
pusha
sti
xchg
inc
dec
pop
ljmp
out
mov
xor
mov
unpcklps
adc
xchg
enter
rcl
insl
inc
repnz
es
outsb
loope
movsb
mov
into
and
das
add
aas
cli
push
lds
mov
aam
stos
xor
enter
scas
lret
mov
xchg
out
icebp
mov
call
sbb
bound
lahf
push
ret
sbb
mov
mov
xor
data16
pop
xchg
imul
pop
sbb
test
push
std
lret
test
insl
push
leave
cli
dec
outsl
mov
pop
lahf
xchg
adc
loope
dec
cmp
ja
das
popf
popa
fcoml
movsb
add
sbb
jne
cld
mov
push
pop
inc
in
or
xchg
in
mov
mov
push
mov
xchg
out
xchg
clc
mov
repz
mov
roll
adcl
mov
cli
and
xor
push
repnz
mov
mov
mov
sub
into
cmpsb
adc
fldcw
adc
subl
push
xchg
dec
fcoms
sub
adc
aaa
xor
cli
aaa
lret
adc
cmp
stos
inc
xchg
je
sub
and
sbb
pop
repz
stos
mull
fdiv
sbb
cmp
clc
out
add
nop
pop
cltd
out
mov
mov
xchg
jge
push
xor
and
add
and
jae
testb
add
imul
and
sub
jp
stos
ja
dec
lret
mov
and
xor
test
cltd
adc
mull
dec
fstpl
outsl
xchg
in
dec
mov
xlat
xchg
aad
adc
xor
mov
mov
add
dec
fildll
sbb
pop
pop
in
or
or
or
insl
dec
pop
nop
xor
sbb
std
ss
jnp
jle
out
shll
fildl
push
pop
movsb
jmp
pop
mov
jbe
fstps
in
jne
outsl
and
sarb
pop
insb
fstpt
lea
mov
bound
cmp
mov
popf
sub
push
and
jp
lret
cmp
cmp
repz
aam
mov
sub
loope
xor
mov
xor
xchg
out
jge
xchg
mov
inc
inc
xor
dec
test
js
fsub
add
fdivrs
cs
aad
cli
in
sbb
sub
hlt
mov
test
dec
icebp
adc
jmp
inc
loope
sbb
shll
inc
and
icebp
jne
in
mov
dec
jg
cmp
mov
arpl
test
inc
icebp
sbb
icebp
imull
ret
inc
xlat
dec
push
cmp
shll
sub
xor
sub
xchg
mov
and
push
xchg
mov
sbb
cmp
imull
and
mov
mov
mov
and
dec
jg
add
bnd
and
xchg
pop
cmp
enter
jmpw
and
mull
push
stos
add
pop
aas
fstl
jmp
jl
or
pop
scas
cmp
inc
inc
aas
mov
xchg
rolb
fiaddl
outsl
pop
sbb
les
in
jmp
repnz
lea
pop
inc
sti
add
lahf
jae
cmp
and
pop
xchg
cmp
cmp
push
add
push
or
xchg
test
pop
mov
push
xchg
sbb
in
loopne
sahf
test
fcoms
dec
icebp
mov
mov
clc
push
jno
push
mov
pop
inc
aam
inc
mov
cmp
xor
pop
push
lds
add
or
add
imul
in
int
lahf
popa
sahf
xchg
aaa
clc
mov
cmp
cmp
popf
pop
out
push
adc
pop
daa
mov
out
test
adc
lds
movsl
sahf
popf
or
xchg
loop
pushw
pop
add
inc
fcoml
mov
inc
push
xchg
jns
fcoml
std
mov
movsl
hlt
mov
out
insl
loopne
gs
mov
xchg
xchg
call
xchg
lods
arpl
mov
std
cmp
sub
jp
fistpl
jl
in
inc
faddp
jecxz
pusha
push
fstp
push
push
mov
jmp
pop
sarl
inc
mul
cltd
sub
push
xchg
lea
bound
test
sbb
push
dec
stos
sub
scas
push
cmp
dec
xorl
fdivs
les
call
aad
xor
or
inc
add
loopne
ss
xchg
adc
push
imul
or
and
xor
mov
lret
mov
jno
pushf
mov
add
outsb
pop
push
mov
icebp
jl
sti
ss
and
mov
gs
gs
add
fcmovnb
mov
in
in
nop
sub
pop
out
or
sub
ret
pop
dec
push
or
test
popf
pusha
int
sub
or
int3
inc
bound
jl
cmpb
lock
gs
test
and
es
notb
icebp
test
sub
jnp
popa
pop
sarl
dec
dec
mov
mov
repz
in
cmp
shr
push
inc
push
xchg
or
aaa
lea
mov
js
jns
adc
aaa
add
and
xor
jg
mov
dec
movsb
fldenv
shl
mov
out
into
and
in
adcb
je
jl
pop
mov
pop
popf
pminsw
insl
adc
roll
inc
sbb
loopne
fsub
pusha
and
and
testb
imulb
xchg
inc
xlat
xchg
sbb
test
and
test
leave
mov
or
sbb
mov
adc
shr
mov
sarl
sub
push
jecxz
sub
mov
inc
jno
add
iret
jge
sbbb
sub
or
notl
mov
adc
test
sbbl
mov
pushf
and
lock
bound
xor
iret
xchg
les
sub
stos
pand
mov
mov
decl
push
out
icebp
inc
jno
xchg
mov
sub
out
stos
mov
repz
in
fstpl
adc
and
xchg
jo
mov
inc
add
dec
pop
adc
rorb
push
loop
mov
pop
lods
pop
mov
insl
cmp
mov
icebp
sti
insl
lds
xchg
jns
inc
aad
lds
jb
std
xchg
in
xlat
jo
ret
test
movsl
divl
cli
or
outsl
scas
dec
outsb
cwtl
into
hlt
addr16
pusha
xchg
lret
push
cs
mov
pop
cmp
cmp
lds
add
cmpsb
push
mov
pusha
mov
adc
es
sbb
xchg
sub
inc
je
push
mov
xor
call
mov
mov
int
pop
and
mov
jge
in
in
stos
xor
sbb
dec
movsb
pop
das
lds
xchg
aam
xchg
je
sub
sub
pop
pop
adc
test
push
stc
icebp
xor
into
cmp
ficompl
sti
dec
jo
and
movsb
mov
push
and
xor
sub
cmpl
sbbl
lods
mov
push
ss
dec
jmp
adc
push
jl
lds
dec
cmp
jp
mov
sbb
andb
inc
mov
push
push
or
les
xchg
sub
sbb
mov
xchg
mov
sub
dec
dec
pop
mov
mov
enter
adc
inc
inc
out
and
inc
in
jge
mov
add
xor
push
pop
mov
sbb
fsubrs
mov
fisubl
jne
je
ljmp
shl
stos
mov
or
sbb
sub
xchg
nop
outsb
cmp
sti
outsl
mov
jb
xchg
aas
pop
addl
adc
lods
lahf
xor
imul
xchg
cltd
movb
push
ljmp
js
xor
enter
cmpsb
pop
rclb
jmp
cld
fadds
ror
pop
les
xor
scas
lret
push
jp
cs
inc
pushf
sub
scas
cmp
sbb
mov
mov
add
dec
lds
xchg
fdivs
jg
xchg
adc
clc
mov
inc
xor
cmp
je
jno
dec
xchg
cmc
cld
cmp
xlat
sub
cmpsb
and
push
inc
test
or
pop
xchg
lahf
and
lds
inc
sub
cwtl
dec
lret
inc
or
fisubrl
ljmp
mov
pop
jp
aam
mov
push
mov
or
xor
cmp
lret
popa
push
imul
jg
adc
rcrl
jge
aaa
pop
data16
sbb
popa
inc
jmp
cwtl
dec
sub
test
data16
sbbb
insl
aas
push
xorl
orl
inc
lds
das
inc
xchg
ficoms
lds
subl
fistl
lds
lds
xlat
sub
adc
mov
ror
sbb
dec
and
sbb
cmp
arpl
gs
fwait
das
clc
and
jecxz
push
ljmp
pop
test
dec
aam
popa
inc
adc
dec
xchg
mov
adc
jp
push
outsb
mov
outsl
aam
mov
mov
xor
test
std
outsl
sbb
sbb
xor
push
xor
lret
mov
clc
mov
mov
iret
mov
cmp
insb
mov
daa
mov
das
outsb
cmp
xor
xor
rolb
and
adc
shr
pop
dec
outsl
je
mov
out
push
ret
adc
shrb
xchg
out
sub
push
xchg
pop
out
cmp
clc
jp
cmp
fcmovnb
xchg
pushl
loop
ds
xchg
std
mov
mov
fdivrl
cmp
push
stos
ss
mov
mov
mov
lret
jo
mov
sub
mov
jmp
xchg
cmp
inc
sbb
xchg
cld
fdivrs
loope
int
lea
dec
nop
xchg
xor
scas
push
fistl
xor
int3
mov
js
xor
and
rep
add
ja
les
movsb
xchg
ss
hlt
jb
fadd
sbb
cmp
das
leave
and
fcmovbe
loop
mov
sub
push
sahf
rolb
jge
dec
shl
add
rorl
shlb
das
add
fsubl
out
fbld
sbb
mov
imul
xchg
movsl
inc
sahf
into
push
outsl
cmpl
sar
enter
mov
lret
jb
adc
xor
or
push
inc
fstps
push
add
sbb
inc
cmpsl
add
es
jle
lret
lcall
adc
adc
pop
int
add
add
scas
jae
and
insl
dec
fidivrs
pop
fmul
bound
je
outsb
lock
jbe
mov
push
fsubrs
cmp
out
call
push
sbb
ret
in
ret
jo
inc
mov
shlb
mov
pop
sub
and
data16
dec
mov
rolb
icebp
jecxz
adc
and
xchg
push
push
stc
add
neg
inc
je
ficompl
test
push
jp
xor
iret
ds
dec
jno
sbb
aad
imul
scas
dec
jbe
cmc
and
pop
mov
inc
fprem
xchg
and
clc
repnz
lret
dec
mov
imul
mov
jmp
stos
aaa
ljmp
sub
in
test
enter
pop
cmp
fdivl
mov
xor
mov
sbb
arpl
adc
cmp
ds
or
in
or
cld
push
aad
sbb
xlat
mov
lds
jmp
pop
out
mov
ficoms
sti
mov
lahf
pop
lcall
cmp
xor
icebp
nop
cs
es
rcl
popf
jg
mov
push
into
and
jecxz
push
gs
cs
fnsave
push
faddp
mov
mov
rorb
aad
dec
loope
and
mov
dec
cmp
ficoml
mov
add
push
sub
cli
sub
mov
cmp
dec
and
pop
shufps
push
loope
mov
push
lods
and
dec
les
and
cs
push
pop
add
push
or
push
leave
stc
gs
rorl
mov
popf
jnp
push
aas
jae
es
jg
push
addr16
push
leave
faddl
or
ret
xchg
insb
std
test
std
sub
lds
icebp
add
lret
pop
inc
adc
or
push
loopne
ret
jo
lea
ret
lds
or
jmp
inc
test
cs
adc
xchg
loope
mov
movsl
mov
leave
dec
jne
push
loopne
mov
mov
popa
mov
pop
pop
loopne
mov
xchg
mov
xchg
sub
sbb
or
push
out
mov
sub
sbb
cmp
jp
sub
in
div
sbb
das
scas
mov
imul
push
fcmovnb
cmp
fwait
xchg
mov
adc
lret
rclb
cmp
pusha
lret
lret
push
xchg
repz
push
and
sti
sbb
mov
aad
shr
lock
jne
pop
jb
push
popf
dec
lods
fsubrs
enter
pop
repnz
fidivrs
imul
push
fldenv
pop
xor
nop
fisttpl
jge
push
or
sbb
lds
sbb
daa
xor
ret
push
xor
dec
push
push
sub
mov
divl
pop
mov
jo
push
xchg
arpl
xor
ret
lahf
push
leave
lods
daa
rcll
in
cmp
dec
daa
ret
js
stos
insb
xchg
call
or
cmp
je
rol
mov
jo
mov
sbb
sbb
repz
test
test
stc
outsl
push
pop
jae
adc
xor
cmp
flds
fisubrl
ljmp
dec
mov
jne
in
push
jg
sub
adc
cmp
out
popa
shll
sub
test
fcmovnb
nop
arpl
lret
pop
test
adc
cmp
xchg
das
movb
or
imul
addr16
stc
push
xchg
loopne
jae
xor
xchg
cmpl
and
in
ret
and
ja
and
add
xchg
mov
sbb
cli
outsl
in
add
and
push
stc
fdivr
in
aas
cmp
jns
jne
dec
pop
pop
cs
int3
enter
mov
sbb
daa
cmp
cmc
sub
and
push
or
push
pop
daa
dec
inc
jbe
std
pop
cmc
jmp
lds
fnstcw
jmp
pop
shlb
pop
or
adc
push
mov
and
xchg
clc
dec
sub
cmp
xchg
and
xchg
push
ret
cmpsb
mov
stos
lcall
ljmp
jp
xor
les
inc
popf
movsb
roll
and
jle
imul
and
stc
pop
lret
pop
pusha
popf
push
aas
shrl
outsl
jg
push
xchg
ds
mov
pushf
addl
inc
dec
fdivrl
push
pop
and
fs
ljmp
pop
xor
loopne
jae
insb
push
inc
dec
in
mov
cmp
xor
adc
mov
fiaddl
addl
and
cmp
notl
xor
pushf
mov
lock
in
pop
adc
adc
adc
jl
movsb
movsb
imul
xor
push
in
pop
out
push
sub
data16
faddp
mov
movsl
mov
bound
es
imul
orb
repz
in
sub
int
pop
add
xchg
xlat
insb
sbb
fbld
ficompl
lret
inc
icebp
fdivrs
int3
jge
fimull
sub
add
out
jo
jnp
xor
sbb
dec
jmp
loop
bound
cmp
or
mov
cli
xor
enter
sbb
out
mov
adc
mov
or
push
or
shrb
lret
stos
adc
lret
mov
pop
bound
pop
sbb
dec
testb
sbb
leave
sub
fsubrs
test
dec
std
pop
pop
les
or
inc
xor
bound
pop
xchg
pop
add
adc
cmp
cld
inc
pop
lret
inc
lret
ficompl
xor
sbb
mov
leave
mov
stos
test
mov
pop
imul
mov
add
ret
pusha
add
adc
cmp
inc
lcall
pop
loope
imul
fsubrl
pop
adc
cmp
pop
inc
push
std
popa
cli
add
cmp
fnstcw
cmp
mov
mov
lret
mov
mov
mov
xchg
js
inc
aaa
xor
test
and
dec
xor
push
dec
xchg
push
adcl
das
lods
pop
insl
jp
lahf
ljmp
mov
push
ficompl
push
stc
xor
in
bound
pop
lahf
xchg
xchg
imul
outsb
sbb
insb
clc
ss
clc
add
ret
mov
dec
push
cmp
sbb
push
push
ret
pop
loope
test
negl
mov
leave
fsubr
push
mov
stos
dec
mov
lea
or
mov
fimull
jp
mull
bound
ret
sub
sub
xchg
adc
inc
adc
cmp
mov
pop
stos
mov
fiadds
xor
fimuls
cs
ret
mov
cld
mov
out
movsb
aas
out
jmp
orl
push
jnp
adc
dec
xchg
scas
aad
pop
or
jp
inc
js
mov
mov
add
stos
loop
push
shlw
sub
pop
or
imul
negb
mov
inc
roll
mov
clc
mov
mov
mov
and
fucomp
xor
test
sub
int3
jle
xchg
and
add
stc
lds
out
jo
psubusb
mov
loop
fbstp
mov
inc
lock
call
cli
das
jae
mov
inc
sub
imul
xchg
push
mov
cltd
pop
sahf
mov
ljmp
xor
push
cmp
pop
std
and
std
xchg
xor
mov
inc
mov
mov
or
fwait
test
orl
push
pop
inc
lea
and
push
dec
sub
not
push
push
insl
dec
dec
dec
in
and
mov
jmp
scas
push
outsb
arpl
lret
mov
dec
cmp
cmp
pop
ss
pop
pushf
or
cltd
lret
and
shr
inc
cltd
inc
pop
mov
out
or
jae
dec
xchg
ljmp
xor
mov
inc
and
scas
lods
fsubl
mov
js
mov
xchg
lea
orl
and
stos
inc
inc
out
xchg
dec
mov
cmp
stos
mov
dec
mov
divb
ret
mov
leave
rcrl
inc
shrl
out
mov
push
pop
mov
cmp
lds
dec
sbb
sbb
aaa
andb
push
pop
xor
dec
mov
adc
cmp
push
repz
stc
add
mov
aaa
loopne
aad
sbb
stos
in
or
adc
cli
xorl
xor
sub
jns
ret
fstpl
lods
mov
xchg
nop
call
bswap
lods
mov
movsl
cmp
xor
xchg
pop
out
imul
push
jg
mov
pop
fimull
sbb
sbbl
scas
xchg
dec
mov
mov
mov
cs
stc
stc
pop
test
sti
imul
or
sbb
pop
mov
aas
and
sbb
ret
xor
push
add
cmp
sti
dec
push
cmp
jbe
ret
mov
aaa
xor
imul
pop
sbb
dec
scas
cli
jmp
fbstp
scas
popa
aad
adc
dec
adc
cmc
int
mov
out
xchg
in
push
sarl
adc
jae
iret
sub
push
insb
insb
cmp
xchg
repz
rorb
loope
jae
loop
in
shll
mov
cmp
inc
outsl
xchg
dec
out
jg
push
xor
sbb
push
or
pop
xlat
inc
imul
jecxz
neg
xlat
fldl
push
ss
mov
aaa
in
fdivrl
pop
sti
pop
inc
lea
add
ss
sub
jecxz
jge
lods
or
cltd
jns
in
sub
test
sbb
loop
sub
jmp
popf
mov
scas
pop
mov
cmp
nop
cld
mov
pushl
cmp
sub
cltd
jb
pop
rorl
sub
mov
sub
loopne
pop
and
or
out
inc
xchg
sub
jns
mov
mov
dec
mov
idivl
ret
add
xchg
add
xchg
sarb
std
in
jbe
sti
adc
lahf
pop
mov
xchg
out
or
fcmovnu
pop
lds
cli
pop
imul
mov
mov
mov
xlat
push
jns
js
inc
fs
test
push
sub
mov
xchg
dec
movsb
sub
int3
rep
pop
clc
and
ficomps
xor
dec
cmpsl
jle
jge
xchg
negb
push
cmp
adc
or
test
aad
mov
andl
mov
std
ds
and
sbb
push
sub
add
sahf
sub
jmp
mov
or
ss
cmpsb
add
mov
fidivl
xchg
imul
in
inc
test
cmp
add
mov
js
dec
xor
in
ret
lods
ds
xor
cmpl
xor
roll
lahf
test
push
push
cltd
test
mov
and
sbb
out
mov
mov
jge
sbb
xchg
into
jns
hlt
mov
xchg
inc
cld
inc
addb
add
out
daa
test
or
cmpsl
add
out
bound
mov
je
pop
pop
hlt
cmpsb
jmp
stos
insl
xchg
in
mov
jno
pop
or
clc
and
push
loopne
push
inc
mov
es
mov
les
mov
addb
cmp
ja
inc
in
stos
xchg
inc
mov
pop
xchg
inc
mov
test
sub
and
add
fidivs
mov
clc
add
cli
dec
cmp
loopne
lods
inc
in
jns
jno
scas
fldz
jae,pn
xchg
scas
lahf
or
add
jo
jno
add
sub
sub
add
jmp
cmp
jb
imul
and
dec
add
je
xor
dec
shll
xlat
negb
mov
cmpsb
fldenv
push
das
jae
push
les
jb
imul
pushf
mov
fstl
xlat
sbb
jne
xchg
cmp
stc
divl
mov
adc
sar
cs
dec
ljmp
push
push
into
xor
rclb
das
mov
jns
mov
cmpsl
or
xchg
arpl
sbb
jge
test
sbb
subl
and
adc
pop
lret
jns
in
lods
dec
pop
inc
push
pop
xor
jmp
fiadds
mov
push
and
ficomps
push
sti
sti
rcll
jle
fidivrs
jne
rolb
std
cmp
sub
popa
imul
jmp
and
dec
movsl
or
pop
test
cmc
and
cmpl
xor
sbb
out
insl
push
xor
mov
mov
loope
out
jns
cmp
xor
xchg
and
lock
cmc
shll
inc
adc
cwtl
mov
adc
stos
out
lret
add
or
jmp
pmaxub
inc
xchg
mov
cld
mov
pushf
fcoml
int
mov
ret
add
cmp
mov
imul
sub
loope
lahf
pop
dec
nop
dec
pop
jo
mov
les
outsl
in
imul
lods
out
lock
pusha
dec
xor
xchg
mov
dec
push
lds
mov
push
cs
testl
xor
and
fdivrp
add
lret
jp
adcl
sbb
mov
popf
aam
inc
aaa
xchg
les
fsubs
cmp
pop
push
mov
cli
ja
fisttps
mov
mov
and
fs
clc
mov
add
mov
ret
je
cmpsl
add
gs
cmp
or
inc
dec
outsb
xor
fdivrs
dec
push
jo
xchg
xlat
call
pop
ljmp
gs
push
mov
dec
mov
loop
jecxz
repnz
sub
fs
stc
jns
in
xor
push
fildl
mov
and
out
mov
sub
mov
and
pop
push
fsubrl
aaa
and
jmp
repnz
mov
push
mov
sub
sbb
out
imull
outsb
jne
test
mov
aaa
sub
ret
lods
hlt
adc
fldenv
sub
xor
movb
enter
rorl
dec
aas
hlt
fcom
sub
sub
pop
jnp
out
jb
mov
xchg
insl
cmp
push
and
mov
inc
nop
imul
and
and
mov
pop
sub
fisubl
jo
xchg
es
adc
push
mov
sbb
inc
pop
or
adc
xor
aad
pop
ljmp
mov
push
cmp
ja
or
adc
xor
sub
xor
mov
xchg
testl
enter
pop
push
xor
dec
inc
add
daa
push
out
sti
cwtl
xchg
mov
sti
cmp
or
aad
aas
add
add
push
inc
dec
sarb
lret
ret
adc
fisubrl
sahf
ljmp
and
rorl
jbe
add
test
adc
sbb
push
sarl
push
ss
cs
testl
fidivrs
ja
adc
cli
call
loop
mov
addl
out
xchg
sub
loopne
sbb
mov
loop
fstpl
lret
bound
adc
test
mov
das
mov
jb
cmp
mov
dec
adc
xchg
rcrl
inc
fs
ror
inc
cmc
xor
sbb
adc
andl
adc
adc
stos
add
rcrl
inc
inc
lock
inc
dec
mov
fistl
cmp
std
and
cmpsb
cmp
movsl
xchg
out
pop
lods
mov
ss
push
sbb
xchg
popf
dec
aaa
jecxz
and
orb
dec
movsb
jb
ret
dec
fnstcw
enter
cmpsb
mov
push
gs
and
mov
aaa
mov
adc
dec
jne
ficomps
adc
fstl
or
mov
ja
xor
imul
fnstsw
mov
fcmovnu
xchg
nop
into
lods
jle
fwait
xor
and
lods
xchg
or
inc
push
mov
push
inc
sbbb
sbb
out
push
incb
cmpsb
aam
xor
loop
or
sub
push
mov
pop
dec
iret
rcr
or
clc
dec
sbb
std
std
dec
xor
out
idivb
push
mov
into
cmp
movsl
mov
or
mov
cmp
xlat
fnstsw
sub
sub
sahf
out
dec
popf
insl
sbb
inc
xlat
jp
mov
std
loopne
push
sub
int
ror
xor
xor
lahf
enter
pop
jbe
cmpsb
cli
cmpsl
or
addr16
insb
ret
and
xor
mov
stos
mov
out
push
sbbb
push
stc
out
xor
into
pop
bound
pop
js
movsl
icebp
stos
pop
pusha
and
sub
inc
cmp
mov
popf
xor
call
imul
jmp
xor
mov
test
pop
dec
test
lock
fidivrs
mov
adc
ljmp
repz
mov
jl
xor
jmp
pop
mov
das
stos
arpl
mov
mov
addl
mov
pop
call
rcl
shlb
add
cwtl
lods
inc
inc
jle
mov
pushf
lret
aaa
nop
and
in
push
mov
fwait
mov
mov
xor
xchg
or
ljmp
mov
sbb
sub
dec
cmp
add
cld
or
add
shlb
jne
xor
lahf
adc
jg
in
xor
fidivrl
in
push
test
clc
jnp
iret
aam
cmp
mov
inc
es
or
mov
xchg
roll
lret
fcompl
jo
pop
xchg
adc
xor
iret
in
jns
dec
mov
sbb
incb
and
sbb
ljmp
shll
cmpsb
mov
pop
mov
adc
sbb
mov
ja
imull
dec
fnsave
pop
mov
jb
sbb
inc
xchg
and
ds
push
mov
fmulp
mov
shlb
or
inc
fs
add
aas
bound
out
mov
push
daa
cltd
push
and
fbld
cmc
rclb
shll
aam
repnz
dec
movb
stos
cmp
push
test
orb
std
push
insl
addr16
popf
mov
wbinvd
sub
and
mov
stos
xchg
daa
adc
aaa
mov
outsl
hlt
mov
test
fcos
inc
push
xor
ss
flds
push
mov
push
lea
add
pusha
mov
inc
jns
out
mov
push
pop
lea
cmp
shl
rclb
cli
lcall
fildll
mov
add
dec
mov
scas
popf
cmp
xchg
and
jbe
insb
pop
mov
mov
adc
pop
sub
xchg
xchg
dec
in
inc
sub
pop
out
fidivl
fwait
mov
push
cmp
xlat
adc
popa
inc
add
jge
sub
cmp
enter
push
inc
add
adc
mov
and
mov
cli
sbb
bound
sbb
xor
fcmovnu
lods
pop
and
cmp
cld
sub
cmc
inc
xor
es
test
and
xor
hlt
mov
cltd
pushf
add
mov
and
outsb
jbe
mov
mov
repnz
push
sub
jp
push
fsts
loop,pt
and
int
std
lret
fiadds
hlt
pop
call
negl
mov
dec
stc
imul
sbb
jmp
mov
inc
cmp
std
call
fisttps
test
out
and
sub
cmp
mov
pop
jecxz
insb
cli
loope
jge
inc
jns
adc
fsubs
stc
cmp
testl
sub
aam
aam
push
inc
mov
mov
test
mov
xor
pop
and
lods
push
shl
sub
test
sub
je
rcl
stos
test
inc
jge
ret
jb
pop
int3
and
adc
mov
xchg
or
repz
or
adc
mov
add
jecxz
in
xor
gs
xor
sbb
inc
cmp
inc
lret
jae
je
xchg
popa
fstpl
sub
xchg
jmp
bound
xor
cmpsb
test
xor
je
xchg
les
push
dec
andl
ss
adc
sub
and
in
or
ja
inc
pop
push
dec
iret
loopne
daa
clc
mov
movl
push
push
push
rcrb
lret
lods
fiaddl
out
push
adc
mov
and
out
test
ja
shrl
jl
repnz
aam
and
popa
sub
xor
roll
repz
in
dec
ds
data16
jg
inc
test
repnz
js
add
add
lea
insb
lods
insl
insb
lds
xchg
sub
add
ja
in
push
mov
dec
lcall
jb
add
xchg
idivb
and
add
cmp
cmp
jp
xchg
push
mov
test
inc
popf
mov
push
add
iret
sub
pop
jecxz
and
sub
pushf
push
or
fdivp
es
jp
das
shlb
lods
outsb
pop
inc
fidivl
push
mov
mov
inc
lods
rcll
cmp
bound
xor
dec
xor
pop
xchg
test
adcb
xchg
sub
ja
adc
cmp
pop
jg
push
mov
adc
rcrl
pushf
jmp
clc
add
xchg
aad
add
outsl
push
mov
push
xchg
fisubrl
pop
imul
popf
aaa
jae
jnp
aam
std
popf
lods
fwait
cmp
add
add
inc
xchg
dec
and
cwtl
dec
rorl
pop
iret
push
ret
sub
ss
jbe
mov
sub
rcrl
leave
out
pop
mov
mov
shll
or
test
jp
xchg
mov
popf
xor
std
loope
fnstcw
and
sub
mov
cmp
ja
mov
lcall
jb
arpl
iret
xchg
fadds
adc
xchg
stos
popf
addr16
into
into
das
mov
adc
scas
mov
dec
idivb
addr16
stos
cmpsl
enter
jp
scas
lock
add
jl
xor
pop
sbb
jb
jb
jb
pop
mov
stc
mov
mov
and
sub
cmp
jns
shrl
jb
mov
in
jae
inc
cmp
test
adc
cmc
mov
mov
je
les
add
ljmp
mov
jno
pop
jl
and
jno
dec
mov
mov
dec
addr16
xor
pop
mov
cmp
push
out
xchg
pop
lds
mov
push
jmp
cmc
pop
xchg
sar
xor
cmp
enter
mov
mov
or
scas
cli
mov
int
outsl
mov
sub
xchg
repnz
nop
js
cmp
call
test
jnp
adc
sub
out
ficompl
shl
inc
xchg
sbb
insb
inc
or
jae
fs
loope
fimuls
pop
test
and
aaa
or
into
sub
clc
cmpsb
je
insb
adc
jl
adc
clc
inc
rol
jecxz
adc
sub
xchg
test
or
lock
jb
stos
pop
in
pop
or
xor
leave
sub
mov
xchg
out
jae
xor
lods
mov
jl
lcall
addr16
es
repnz
cltd
dec
inc
push
inc
or
lds
xchg
aad
outsl
pop
mov
adcl
aaa
push
cmp
dec
sub
es
inc
rol
pop
sti
pop
cmp
sub
neg
pushf
push
pop
cld
xchg
mov
pop
jo
outsb
push
and
xchg
dec
sti
std
out
insb
lds
mov
inc
lahf
scas
xchg
or
or
cli
leave
leave
lods
testb
xchg
pop
scas
aad
lret
pop
lods
fcmovnbe
out
aam
or
cmp
sti
test
daa
add
dec
mov
xor
inc
pop
sti
repz
cmp
fstpl
in
sbb
test
lods
inc
jns
xor
push
jns
ffreep
adc
sbb
jnp
out
xchg
shlb
fildl
sub
rcll
sbb
lods
cld
jmp
push
push
mov
push
and
js
jnp
inc
pop
loopne
mov
mov
jecxz
push
loopne
mov
pusha
pop
pop
not
pop
jne
loopne
push
aad
or
xor
inc
insb
test
test
xchg
jmp
cmp
bnd
sbb
scas
mov
sti
mov
pop
cmp
aad
xor
inc
lods
lret
cmc
cmpsb
insb
cmp
mov
lret
loope
fwait
xor
push
mov
repnz
or
add
add
mov
mov
clc
call
pushf
loope
out
repnz
pop
mov
ss
cmp
jae
push
orb
rorb
and
sbb
jp
cmpsb
and
fisubl
pop
xor
cs
xorb
hlt
adc
test
sub
lods
add
jecxz
repnz
lahf
jnp
test
nop
stos
xor
mov
inc
fiadds
push
rolb
call
ss
sbb
push
sbb
popf
jns
in
aas
xchg
sub
inc
add
add
inc
pop
and
cmp
movsl
or
fimull
stc
test
lahf
push
or
sbb
push
mov
mov
xorl
and
imul
outsl
and
notb
xor
lret
inc
scas
jge
and
mov
rorb
add
dec
and
mov
cli
dec
adc
push
outsb
sbb
cltd
cli
rclb
test
in
add
xchg
dec
ds
das
push
pop
push
mov
mov
or
xchg
push
xchg
pop
popf
cmp
fidivrl
push
sbb
xchg
in
add
dec
inc
mov
cmpsl
mov
pop
vmwrite
pop
jp
cli
cmp
cli
test
fnstcw
sbb
icebp
test
sbb
adc
ret
adc
aaa
cmp
and
addr16
outsl
xchg
dec
std
jecxz
sti
mov
add
int3
push
enter
sub
sbb
and
adc
js
mov
sbbb
test
mov
cmp
idivb
xor
cmp
pop
adc
sub
mov
add
fnstenv
jl
ja
sub
fildll
aas
xchg
xor
fbstp
ljmp
inc
sub
cmpsl
loop
sbb
adc
rcl
adc
into
stos
sahf
jmp
mov
je
lods
imul
sub
movsl
loope
jmp
je
in
aad
fsubrl
scas
xlat
pop
lahf
gs
dec
xchg
or
dec
add
and
mov
mov
fiadds
pop
or
push
rolb
or
adc
push
leave
jmp
push
loope
sub
cld
xchg
icebp
and
sub
mov
cmpsb
mov
jb
rclb
icebp
lods
pushf
push
mov
sahf
mov
sub
popf
ds
jne
clc
mov
outsl
mov
push
test
imul
push
push
lods
popa
icebp
sarl
fwait
sub
and
loop
push
adc
iret
lcall
cmpsb
xorb
mov
aam
ss
mov
inc
movnti
pushf
lods
push
xlat
lret
mov
lods
sarb
in
xchg
insl
jae
xor
xor
or
or
mov
or
aas
or
mov
mov
or
push
xor
adc
mov
fnstenv
cmc
ficompl
or
jp,pn
add
lods
jbe
aam
shrb
xlat
icebp
repnz
insl
test
sahf
jbe
mov
push
lret
cmovno
sti
out
and
sub
sbb
insb
pop
loop
mov
sarb
xor
mov
rol
mov
rolb
mov
pop
cltd
sbb
loope
inc
in
mov
repz
ja
pop
rcrb
das
mov
xor
add
xor
ds
push
mov
aad
in
dec
push
sub
push
mov
cmc
and
jg
sub
sbb
loopne
inc
repz
inc
into
leave
xchg
inc
lret
jle
or
icebp
xor
mov
into
cmp
dec
mov
pushf
hlt
cmpl
sub
popa
imul
push
and
or
pop
sub
sbb
pop
add
test
pop
pop
xchg
ret
xor
mov
roll
add
and
out
xchg
pop
add
stos
ret
xchg
add
jg
sbb
popa
dec
sbb
xchg
cmp
aad
sub
scas
cmpsl
int3
inc
cmp
call
push
xchg
cmpps
loop
scas
movsb
sbb
ret
dec
fwait
mov
dec
imul
add
test
dec
out
xor
inc
lret
xor
rcl
and
cli
jne
mov
push
out
sbb
cmpsl
js
loope
into
shrl
pop
jno
pop
push
mov
lods
jmpw
mov
push
das
lods
xchg
cmp
popf
xor
out
mov
mov
ret
negb
icebp
dec
fs
inc
das
lods
movsb
inc
xor
and
mov
mov
pushf
xchg
lods
mov
or
sbb
mov
leave
push
sub
or
inc
or
icebp
dec
push
rcrb
stc
fists
popa
ret
mov
xorb
cmp
in
mov
sarl
scas
mov
lea
add
adc
or
push
movsb
push
icebp
push
dec
sysexit
imul
jg
das
dec
inc
dec
fbstp
aaa
mov
mov
ljmp
push
jo
push
push
stc
cwtl
cmp
xlat
add
sub
lret
sarb
lret
pop
add
dec
shrb
repnz
add
lods
and
or
cmpsl
and
dec
add
mov
ss
dec
and
jnp
jmp
sbb
mov
call
xchg
cs
inc
mov
mov
insb
pop
or
pop
fdiv
das
imul
push
shrb
call
das
sahf
out
mov
loope
jb
das
sbbb
std
std
mov
std
inc
rep
cmp
inc
sub
cmp
loope
sub
jo
cld
add
push
mov
pop
int
loopne
dec
mov
adc
gs
ret
sbb
in
jle
jge
add
sahf
aaa
icebp
xchg
imul
xchg
dec
icebp
lods
arpl
or
test
xlat
or
int
ljmp
or
inc
add
mov
addb
enter
repz
scas
xchg
imul
pop
push
imul
mov
in
and
stc
enter
cmp
inc
mov
bound
lds
add
dec
xchg
mov
into
ret
bound
sbb
aas
sub
or
fs
andl
je
outsl
cmp
das
sub
cli
loope
cmpsb
in
maskmovq
cmp
pop
sub
push
sub
jecxz
ss
ss
pop
dec
xchg
xlat
lret
sbb
rcrl
dec
pop
jmp
ss
xchg
or
cld
cmp
adc
insl
add
loope
cmp
aam
xchg
mov
shrl
mov
aas
mov
fidivrl
adc
mov
shlb
inc
jmp
jecxz
mov
outsl
xchg
dec
push
mov
mov
loope
sbb
or
mov
outsb
mov
inc
sub
jne
inc
mov
sti
or
sub
cs
test
hlt
push
dec
jo
jns
in
jns
bound
shll
jbe
les
xchg
lret
mov
or
add
aad
je
shlb
pop
cmc
ja
jge
or
scas
dec
in
xor
push
pop
rolb
adc
pop
and
ret
lahf
inc
out
aad
sub
adc
std
push
gs
das
mov
sub
pop
insl
mov
xchg
int
das
xchg
mov
fsubrp
test
xor
pop
popf
dec
in
xor
jo
xchg
dec
mov
xchg
loopne
pop
jo
sahf
pop
les
xor
mov
xchg
ss
aas
pop
or
arpl
int
or
xor
inc
imul
scas
sub
cld
inc
loopne
sahf
mov
jae
push
insl
jecxz
subb
iret
mov
aad
xor
call
fwait
jo
inc
mov
rcl
mov
xchg
jo
std
loopne
xor
rol
push
mov
dec
les
arpl
fbstp
lcall
pop
dec
jmp
xor
push
mov
mov
mov
dec
sahf
mov
ret
out
mov
lds
test
stos
and
ret
mov
fisubrl
cmp
cwtl
fxch
outsb
push
inc
inc
jnp
add
lret
and
addr16
clc
movb
stc
xchg
test
testb
inc
in
dec
add
out
ret
js
sbb
fdivl
push
push
jl
add
hlt
call
jno
mov
mov
mov
mov
add
inc
jbe
jmp
or
jl
and
or
cwtl
mov
fst
lahf
insb
ficomps
add
bound
mov
jo
dec
addb
inc
mov
cmpsl
mov
xchg
scas
scas
sbb
inc
push
test
lcall
int3
shld
fstl
cli
dec
clc
lods
nop
mov
je
dec
pop
scas
lods
add
adc
pop
popf
jl
cmp
and
insb
pop
push
inc
clc
cltd
push
shrb
add
jp
mov
add
and
les
std
sub
out
ss
mov
xchg
addr16
ja
adc
pop
mov
sbb
mov
insb
adc
mov
mov
cmp
sbb
outsb
and
inc
das
pusha
jmp
testl
mov
push
aas
nop
test
mov
ret
adc
and
sub
iret
in
lods
push
out
cs
adc
stos
add
ss
lods
xor
stos
push
cwtl
shld
int
stc
test
inc
or
jp
jb
mov
ficomps
pusha
pop
cmp
cld
dec
out
mov
xchg
xor
jo
popf
jo
iret
or
push
out
ret
fwait
inc
xchg
xlat
inc
jmp
add
insb
dec
sbbb
push
iret
mov
in
and
cmpsb
jae
push
mov
add
sarl
jge
data16
sbb
jmp
das
push
in
mov
adc
add
inc
std
and
or
xchg
cwtl
push
jnp
cwtl
stos
scas
lret
aad
fsts
sbb
insl
ficoml
clc
push
or
cltd
in
outsl
xchg
or
mov
lock
fstpt
lret
mov
bound
addr16
ljmp
push
dec
xchg
or
stos
xchg
adc
aad
jmp
incb
scas
aaa
jmp
pop
shll
clc
jnp
jecxz
rorb
pop
clc
test
add
aam
xchg
repnz
lods
nop
mov
sub
jns
outsl
pop
popf
ja
xchg
in
shlb
inc
add
jo
add
sar
stos
sahf
cltd
js
mov
jns
sub
gs
xchg
movsl
shrb
enter
or
mov
out
jno
test
jl
pop
std
mov
xor
fbld
mov
adc
cli
shrl
inc
in
addr16
xchg
xchg
repz
test
stos
in
movsb
sub
clc
jecxz
and
mov
lds
dec
mov
int3
mov
repz
or
enter
xchg
adc
or
mov
sub
fcompl
or
loope
xor
movsb
out
sbb
and
jo
ljmp
aaa
and
shr
sbb
pop
ret
int
je
rol
cmpsl
iret
jns
gs
shlb
jle
bound
adc
cmp
into
movsl
push
mov
sub
cwtl
mov
das
or
movsb
pushf
jl
daa
jle
scas
je
sbbl
insb
jmp
push
push
lret
or
and
mov
sti
test
scas
out
cmp
hlt
inc
jbe
orl
imulb
aam
push
mov
loop
push
inc
stc
mov
jmp
pop
sbb
mov
in
call
lret
aas
cli
test
mov
ljmp
in
outsb
pop
adc
jmp
ss
pop
and
dec
rcrl
push
pop
sbb
dec
adc
out
aaa
jbe
fistpl
sub
jo
adc
jp
xlat
mov
sbb
call
xor
add
adc
pusha
cmp
inc
xchg
shlb
fwait
inc
jbe
xor
jle
mov
test
andl
push
mov
cli
mov
dec
mov
mov
loop
inc
lcall
inc
ss
mov
arpl
or
fldt
push
in
in
and
mov
pusha
in
lds
scas
mov
aam
or
aaa
pop
push
xlat
iret
setge
pop
test
jl
sub
inc
out
add
or
and
cld
fxch
daa
test
cmp
inc
dec
cmpsb
jae
push
clc
insb
cwtl
dec
cmp
ljmp
in
dec
dec
popa
mov
push
add
mov
cli
inc
clc
dec
rcr
inc
or
xor
sahf
push
clc
stos
push
icebp
repz
mov
or
out
cmp
fwait
insb
and
popa
mov
aad
dec
push
popf
sarb
popf
nop
xchg
and
lods
repnz
cmpsb
mov
cmp
mov
arpl
inc
sbb
mov
dec
xchg
mov
jg
stos
movsb
xor
frstor
jecxz
push
push
jge
out
movsl
sti
xchg
inc
testb
add
sub
stos
dec
mov
mov
fsubl
sbb
jle
adc
lahf
mov
test
inc
scas
mov
clc
and
movsb
or
or
dec
sahf
add
jle
xchg
fdivr
push
std
mov
and
cli
pop
mov
jb
mov
mov
push
repz
rorb
xchg
nop
jb
cli
xchg
es
lds
fcmovbe
mov
inc
jmp
xchg
bound
and
sub
addr16
frstor
push
cli
movsl
add
adcl
mov
pop
mov
das
xor
push
cld
pop
pop
and
or
adc
xor
and
aam
add
in
leave
cld
pusha
idiv
and
cs
jno
enter
sub
dec
and
loop
xor
ja
mov
push
fiadds
psrlw
imul
fistps
or
xchg
dec
sub
es
and
add
icebp
sahf
xor
jne
iret
adc
movsl
je
mov
push
fstl
and
cmp
test
sbb
push
nop
scas
rcll
inc
nop
ss
std
out
fiadds
xchg
sub
or
arpl
pop
jg
pop
jge
inc
add
clc
addr16
sbb
clc
fisttpl
sub
rclb
stc
das
ret
mov
sub
pop
or
hlt
ds
mov
fidivrl
xchg
ds
inc
sbb
inc
fbld
adc
scas
mov
scas
ljmp
and
cmp
inc
movaps
xchg
lds
fisubrl
mov
push
mov
pop
inc
sti
test
xchg
decb
insb
mov
inc
ret
ret
stos
pop
sbb
adc
push
in
cmp
jno
mov
nopl
mov
lret
je
add
in
fs
xor
and
mov
popf
jnp
sarl
ret
pop
out
outsb
add
es
test
xchg
xor
mov
push
add
sub
mov
pusha
scas
add
mov
dec
iret
mov
sub
insb
arpl
nop
xor
and
sbb
jmp
repz
stc
fcmovb
push
aas
data16
icebp
mov
lds
sar
sbb
sub
jbe
xchg
pop
or
pusha
cmc
mov
sbb
push
jmp
gs
cmpl
sub
andl
sahf
jg
fcompl
mov
mov
dec
or
inc
sbb
sbb
pushf
stc
sub
jl
sbb
mov
mov
stos
or
sub
push
push
int
out
jae
stos
jge
cld
les
aad
inc
mov
imul
popa
in
aas
scas
mov
xor
shrl
sub
jmp
hlt
pop
mov
sbb
in
aas
jp
cwtl
add
mov
cmp
sub
mov
add
cltd
xor
dec
test
mov
outsl
and
xchg
popf
sub
rcl
xchg
xor
aad
jg
pop
xor
xlat
idiv
les
or
roll
pop
xor
pop
aas
add
rcrl
pop
mov
in
lds
testl
mov
ficomps
mov
or
pop
leave
imul
ljmp
sub
scas
stos
jne
mov
sbb
mov
mov
mov
inc
push
pop
dec
xor
loop
repnz
fcomps
ljmp
lock
adc
jnp
loope
jecxz
or
pushf
out
ret
pop
ljmp
mov
dec
test
inc
adcl
xchg
mov
cmp
aas
sbb
pusha
enter
loopne
mov
outsl
aaa
cmp
jns
stos
push
pusha
pop
cmp
xor
add
xchg
mov
sub
mov
fwait
jae
dec
adc
xchg
das
nop
int
decb
aas
add
ret
pop
push
cwtl
push
imul
xchg
jnp
clc
jnp
shlb
aad
xor
pop
cli
addr16
sub
jle
xorb
lock
sub
pop
ret
jbe
pop
andb
xchg
mov
jmp
add
xchg
dec
sub
pop
cli
cli
cmpsb
jno
mov
daa
das
pop
fstpt
in
lds
xor
xlat
and
push
pushl
and
adc
cmp
gs
loopne
xchg
mov
gs
xor
addb
inc
clc
sub
fnstcw
adc
aaa
push
mov
lods
mov
push
xchg
cs
lds
lcall
pop
sahf
sbb
leave
add
push
sub
mov
je
push
lahf
notl
sbb
push
add
popa
add
js
loopne
xchg
add
pop
pop
and
pop
sarb
mov
pop
arpl
sahf
xchg
and
imul
xor
rcrb
pop
add
and
jae,pt
cltd
or
out
fcoms
or
cld
adc
pop
notl
mov
and
shrb
or
or
mov
test
sub
test
add
lret
dec
pop
pop
mov
push
loope
xchg
xor
cld
jns
mov
int
scas
lds
dec
out
icebp
xchg
add
or
xchg
xchg
test
rcrl
add
sub
jg
jge
xchg
mov
or
fiaddl
xchg
imul
xor
inc
mov
and
jge
dec
pop
aaa
xchg
pop
data16
in
pusha
pand
push
dec
inc
jne
xor
and
and
aam
jae
aaa
cltd
ficompl
in
xlat
lret
lret
jb
cmpsl
data16
sbb
push
sbb
adc
mov
test
in
test
xchg
call
repz
mov
test
loope
jno
mov
mov
notl
jecxz
sub
testl
pop
lcall
adcl
mov
add
add
addl
or
pop
jbe
outsl
call
loop
sub
aad
mov
cltd
cs
xlat
jb
mov
negl
cmp
clc
jns
rcrb
rol
push
ss
xchg
les
iret
loope
jo
sub
adc
mov
ljmp
loopne
sub
mov
mov
lret
das
jne
rorb
or
xor
ja
cs
sbb
sub
add
push
push
sub
jle
test
sub
xlat
testb
shrl
inc
or
int3
inc
add
iret
sub
mov
enter
cwtl
test
mov
nop
std
cltd
jb
push
popf
subb
mov
ret
inc
inc
and
mov
mov
inc
pop
xchg
xchg
insb
mov
push
fdivrp
addr16
sub
outsb
outsl
pop
gs
inc
jl
inc
inc
fs
or
inc
fdivp
insb
xchg
test
or
push
inc
in
sbb
add
cli
push
scas
insb
sarb
inc
cmp
xlat
or
mov
mov
fnstcw
nop
dec
cli
fstps
sbb
out
cld
loope
mov
incl
ljmp
popf
mov
outsl
jl
orl
inc
jnp
enter
fiaddl
xor
das
popa
xor
gs
aam
dec
sub
cltd
pop
loopne
out
rcrb
dec
lock
mov
mov
sbb
in
mov
push
cmp
call
mov
mov
mov
call
mov
mov
in
inc
mov
mov
les
js
mov
push
cmp
fcoms
mov
mov
fsub
ja
mov
hlt
out
popa
cmp
daa
mov
jnp
lret
pop
arpl
or
fidivrs
lret
sbb
add
pushf
inc
fistl
mov
idivl
jns
push
fstl
jo
fwait
dec
and
mov
mov
mov
pusha
and
testb
pop
jae
pop
popa
xor
dec
ja
mov
ss
stos
fstl
xlat
cli
add
mov
mov
fsqrt
push
lret
cld
daa
jne
loope
sub
mov
mov
and
sub
push
push
aaa
jecxz
out
dec
sbb
push
out
scas
int
je
out
aas
pop
ss
notl
lret
repnz
inc
inc
mov
add
fstpl
mov
pushf
lds
popa
ja
enter
cmp
push
cmp
lods
mov
sbb
out
loope
cmpsl
mov
je
lods
sahf
rcl
cld
inc
or
xchg
fldcw
push
mov
push
xor
loopne
jb
mov
hlt
adc
push
cmp
outsl
xchg
test
add
xchg
jl
mov
cld
xor
fdivr
aaa
sbb
fidivrl
or
push
fsubrl
push
popa
rcl
ja
int3
and
mov
testl
fstpt
int
leave
cmp
sarl
mov
outsl
cmp
test
incb
mull
mov
rol
pushf
pop
inc
notb
int
testb
shlb
push
neg
cwtl
adc
hlt
xor
call
test
rclb
cmp
out
in
sbb
repnz
imul
and
mov
adc
pop
add
arpl
test
push
xor
xor
dec
cmpsl
mov
mov
push
data16
fdivrs
and
dec
mov
mov
into
scas
mov
push
inc
inc
lds
js
add
xor
orb
std
loope
lds
mov
cmp
xor
xchg
push
repnz
add
mov
sahf
fs
nop
and
das
push
lods
shll
mov
sbb
cmp
mov
sub
push
lahf
js
and
sub
or
data16
orl
sbb
das
add
test
xor
jmp
xchg
jo
jns
repnz
xor
lcall
test
push
push
dec
fmul
mov
and
push
push
aas
or
sub
xor
orl
fidivrl
push
sbb
mov
xchg
jp
add
add
mov
sbb
ret
sbb
bound
js
or
pop
xchg
add
cli
push
xor
ljmp
mov
in
fistps
pop
mov
testb
das
cltd
jnp
push
push
mov
enter
jb
adc
cmp
mov
inc
ret
into
cli
and
push
add
pop
jg
leave
mov
dec
scas
xchg
mov
xchg
aad
and
dec
pop
mov
adc
fsts
xor
mov
jno
movsb
jnp
and
sahf
andl
stos
out
mov
jne
fistpl
fidivs
and
lret
test
imul
pop
xor
aad
lcall
mov
adc
fbld
mov
xor
test
inc
add
lret
inc
in
sbb
cmpb
ret
mov
andl
hlt
iret
fistpll
sbb
jne
mov
in
pop
pop
lock
xchg
pop
loopne
pop
xor
fstl
les
out
ja
popf
ljmp
mov
jnp
inc
cmp
roll
stos
add
ja
cld
and
inc
add
xchg
enter
lock
adc
int3
stos
jbe
sub
xchg
icebp
fldenv
out
mov
add
mov
outsb
inc
or
push
dec
or
push
adc
push
cmp
cmp
aaa
push
scas
xor
cmp
mov
pop
inc
ja
pop
push
ss
add
cmpsl
arpl
lock
pop
icebp
dec
mov
test
mov
cmp
mov
jnp
leave
and
add
shll
stc
cmp
jl
shll
or
mov
pop
cwtl
cmp
mov
or
lret
ljmp
xor
push
jle
call
in
adc
pop
mov
jp
das
stos
push
fisttpl
scas
es
insl
icebp
lods
xchg
out
jge
mov
dec
push
cmp
xchg
or
adc
xor
jle
hlt
shl
sti
add
inc
test
loope
jecxz
sub
or
popa
adc
sar
test
test
xor
sub
pushf
adc
repnz
in
loop
or
int3
mov
jnp
cmc
dec
mov
enter
pop
sti
jecxz
sbb
mov
push
fstpt
int3
push
pop
stos
cmp
pop
mov
aas
into
cmp
lock
or
das
mov
enter
icebp
aas
pop
aaa
leave
sub
pop
sbb
les
add
lods
ret
push
mov
mov
mov
out
lahf
xchg
xor
in
sbb
jmp
arpl
cwtl
fdivrs
popa
jle
es
repz
mov
push
pop
adcl
or
fsubr
fldcw
sbb
or
lcall
push
xchg
push
sub
push
push
sbb
sub
cmp
jo
test
mov
mov
xor
adc
mov
cmpsb
xorb
inc
xor
insb
xchg
push
les
and
std
lods
icebp
lcall
cld
jp
dec
ret
leave
int
cmc
lds
dec
or
andb
and
sub
gs
scas
jnp
mov
into
aaa
rcl
xchg
mov
push
adc
cwtl
dec
push
and
jbe
orb
das
neg
mov
movsl
stc
jge
or
in
loop
or
aaa
daa
adcl
dec
sub
or
lods
cmp
adc
insl
xchg
popa
shrl
insb
repnz
adc
mov
into
dec
mov
andb
inc
mov
xchg
mov
pushf
and
in
pop
mov
test
inc
or
loope
out
cwtl
cmpsb
push
or
dec
jno
movsl
flds
imul
dec
sbb
cmp
lods
xor
test
dec
aad
repz
sub
dec
pop
add
add
jo
test
cs
lret
clc
mov
mov
repz
add
cld
std
aad
pop
mov
icebp
push
mov
xchg
in
lret
sbb
dec
shll
lar
sbb
ret
int
ss
add
cli
sub
add
sbb
scas
sub
std
xor
sbb
stos
lahf
shl
and
out
imul
out
cmp
je
test
cli
push
mov
dec
xor
filds
js
rolb
iret
mov
sbb
jae
outsl
out
nopl
or
and
adc
jbe
into
add
and
fnstenv
adc
dec
sub
xor
int
sbb
xor
ja
cltd
insl
ljmp
movsl
lods
adc
cmp
and
enter
cmp
adc
dec
inc
stos
xchg
insl
mov
xor
sar
or
out
cwtl
pusha
xor
shll
mov
stos
lds
xor
jp
aas
divps
mov
dec
cmp
add
das
push
mov
inc
fcmovb
fnstenv
scas
jns
outsl
lahf
pop
adc
psubb
mov
or
dec
xor
pop
and
cs
fwait
jb
push
push
cld
xlat
cmp
pop
or
add
gs
scas
mov
cmc
loope,pt
and
rorb
and
inc
pop
mov
dec
inc
add
sub
cli
testb
decl
mov
mov
movsl
fdivrl
push
ja
pop
cmp
cmc
sbb
xchg
fists
in
or
inc
insl
ss
jle
out
mov
ss
mov
icebp
jae
jmpw
sti
jnp
les
movb
decb
inc
repnz
mulb
lahf
add
arpl
sarl
add
shll
sarb
cld
lock
jp
fiaddl
in
rcll
push
call
out
arpl
cmpsl
adc
sbb
adc
cmpsl
test
mov
mov
and
test
mov
ja
and
imul
mov
jp
jmp
jle
jg
test
add
sbb
shl
cmc
add
mov
outsl
add
out
push
test
sbb
int
dec
sbb
xlat
sar
cmc
push
aam
pusha
mov
gs
sub
stos
mov
lcall
sbb
popf
cmc
sbb
push
and
add
inc
ds
fcomi
ljmp
movsl
fstps
add
cmp
mov
pusha
cs
jmp
insl
sub
cmp
imul
repnz
mov
out
mov
sahf
jecxz
lret
in
faddp
leave
shr
adc
pop
xchg
sbb
das
cmp
jge
mov
add
sub
lahf
out
lock
filds
inc
add
xchg
xor
aaa
shrl
jle
outsl
out
sub
lods
mov
ss
pop
andb
shlb
mov
cmp
in
pushf
daa
mov
xor
adc
dec
dec
xor
and
bound
and
and
lods
insw
push
popa
mov
scas
dec
negl
mov
adc
mov
and
jnp
mov
mov
mov
iret
mov
mov
cmp
xchg
mov
push
xor
std
sbb
addb
cld
push
scas
add
mov
push
imull
push
mov
sbb
and
adc
shrl
xlat
xor
mov
dec
aas
pop
cmp
inc
push
repnz
xor
xchg
add
pop
adc
hlt
gs
and
dec
sbb
bound
mov
pop
stos
mov
inc
enter
add
jb
and
jb
mov
mov
gs
scas
sbb
loope
mov
loope
jmp
je
jg
and
lea
adc
fwait
add
adc
xlat
stc
xor
lods
int
jmp
dec
jl
xchg
js
mov
fldcw
into
aaa
pop
sbb
xor
xchg
iret
xchg
xor
or
jmp
push
mov
movsb
push
mov
mov
notb
into
test
insb
add
lahf
sbb
sub
dec
cmp
nop
daa
jl
sarl
xchg
xor
cmp
mov
sbb
adc
bound
pop
push
mov
mov
add
aad
mov
mulb
test
mov
pop
dec
repnz
push
subl
dec
add
pushf
xchg
mov
roll
push
ljmp
imul
mov
pop
fcomp
shrl
mov
dec
xchg
dec
aam
cmp
pop
or
sarb
dec
fnstenv
ret
test
mov
ret
dec
lds
stos
nop
std
addr16
xchg
or
test
imul
mov
sbb
seto
jecxz
inc
mov
aam
inc
xlat
push
sub
mov
sbbb
xor
mov
mov
mov
adc
dec
rcrb
dec
and
jnp
push
subb
jle
xchg
ds
mov
mov
cmp
pop
mov
xor
rolb
xchg
ret
leave
pop
stc
xor
out
fiaddl
xchg
stc
test
jp
dec
lret
mov
call
out
add
add
cmp
fnstenv
push
or
jns
sub
std
test
inc
test
push
ja
js
ljmp
imul
adc
adcl
pop
fs
mov
and
bound
mov
push
cmpsb
fs
test
and
dec
stc
dec
inc
push
out
es
xchg
sub
jne
xchg
inc
sub
mov
scas
loope
jb
lods
xchg
jg
add
inc
int3
xchg
enter
inc
pop
push
idivl
in
xor
sbb
add
mov
stos
insb
pop
fiaddl
std
mov
test
scas
xchg
xchg
movsb
push
test
jmp
fisttps
xlat
das
mov
mov
lahf
scas
xorb
movsb
sub
rorl
lret
jl
out
inc
dec
mov
push
loop
data16
in
jl
sbb
in
xchg
scas
xchg
inc
jp
dec
roll
into
in
adc
icebp
jne
jge
js
clc
sub
xchg
dec
lret
lock
inc
push
das
fwait
add
shll
mov
mov
push
scas
or
cs
stos
dec
arpl
test
cltd
xor
call
addl
jecxz
les
mov
aam
out
mov
loopne
lea
push
iret
or
mov
lods
add
inc
xchg
aad
pushf
adc
mov
sub
movsl
imul
jle
pushf
fisttps
pop
hlt
std
stos
cltd
in
je
sbb
scas
or
dec
pop
dec
xlat
xchg
lret
inc
add
inc
sub
pop
aaa
mov
movsb
lds
lock
mov
mov
cmp
or
dec
movsb
xor
push
dec
push
popf
jo
xor
ffree
fcoms
pusha
inc
lcall
mov
fidivrs
jbe
fldenv
mov
cltd
negb
es
push
in
jl
sub
mov
out
sub
mov
add
fisubl
and
icebp
cs
xchg
fdiv
cmpsl
or
lock
mov
les
jbe
pop
jno
icebp
outsb
dec
inc
inc
jl
neg
int3
hlt
mov
adc
mov
mov
neg
and
cs
jmp
dec
mov
mov
add
hlt
ret
in
jns
aam
xchg
jne
mov
adc
test
std
sub
jle
test
incb
mull
test
neg
cmp
xchg
or
sub
xchg
xchg
mov
cmpsb
pop
cwtl
mov
cmp
adc
mov
fs
fldenv
dec
mov
dec
stos
sub
loopne
andl
dec
cmp
rcr
sub
mov
cmc
inc
pop
jecxz
mov
cmc
inc
movsb
dec
pop
rcl
jns
cmp
sbb
pop
rcll
das
mov
fs
push
xor
and
out
pop
add
mov
xorl
dec
xor
ficompl
xor
add
mov
mov
dec
push
icebp
push
mov
cmc
ret
push
jns
sub
xlat
test
inc
fsubl
cli
out
aaa
push
sub
test
xor
mov
out
push
jp
pop
or
mov
stc
out
or
jge
add
pop
pop
shlb
dec
xchg
js
lret
pcmpgtd
xor
aam
mov
sbb
test
sti
mov
sub
add
js
push
sub
subl
out
xchg
pop
pusha
cmp
sahf
mov
sbbl
mov
ljmp
add
ret
sub
or
insl
jbe
sarl
lcall
hlt
xchg
adc
fisttpl
and
push
inc
pop
and
xchg
std
mov
leave
adc
stc
int
leave
xor
shrl
movsl
add
sbb
fnstenv
nop
lods
jge
ror
or
in
in
out
test
add
mov
xlat
mov
and
sub
in
dec
mov
das
push
jns
filds
jns
lds
rol
mov
xchg
incl
scas
icebp
lods
jb
cli
scas
and
adc
in
mov
les
clc
inc
and
sub
sbbl
adc
push
mov
mov
jmp
jmp
pop
adc
mov
test
out
jbe
icebp
shrb
mov
sub
jecxz
pop
cmp
mov
pop
mov
incl
push
movsl
lcall
dec
test
sub
or
popf
mov
aas
mov
mov
cmp
test
ljmp
xchg
sub
aad
aaa
lcall
or
and
xor
testl
mov
and
mov
cmp
mov
jp
mov
addr16
jo
jg
cmc
enter
inc
aad
gs
test
fistl
lret
xor
xlat
xchg
loopne
mov
mov
or
add
push
adc
jmp
out
xchg
testb
lds
ret
lret
addr16
push
sub
mov
test
pop
mov
jle
icebp
mov
call
divb
fiadds
xor
cmp
push
out
jmp
mov
inc
xor
mov
mov
outsl
cli
mov
xor
lock
lods
xchg
das
mov
cld
fstps
ds
pop
movzwl
les
pop
lods
sbb
mov
lret
xchg
cmp
repnz
icebp
jae
jbe
adc
test
mov
sub
adc
pop
ja
pop
aaa
or
mov
sbbl
cmp
mov
call
xchg
mov
xchg
in
imul
cwtl
test
out
lock
xchg
gs
fstpl
and
sahf
inc
lea
test
adc
adc
inc
mov
ja
adc
push
aam
or
pop
sub
les
dec
jns
cli
add
push
mov
cmpsb
xor
lret
xor
or
push
sahf
fs
xor
scas
inc
sbb
sub
insb
xchg
sub
sbb
inc
mov
dec
jge
dec
lea
add
js
stos
je
int
sbb
fcomip
push
mov
mov
mov
mov
imul
adc
jb
mov
sar
lock
rol
sub
pushf
jne
cs
ss
sbb
mov
jns
mov
mov
daa
or
pop
imul
sub
lcall
mov
lods
pop
mov
and
aad
mov
cmp
jno
xor
mov
clc
cwtl
inc
int
pop
fiadds
cmp
adc
xor
enter
xchg
imul
subl
fwait
daa
scas
sarl
sub
aad
in
rcrb
cld
or
fcomps
lret
push
mov
popa
mov
aam
fs
aam
add
fmull
fildl
repnz
xchg
lds
aaa
insb
ret
stos
adc
add
out
xlat
arpl
scas
pusha
cmc
aaa
adc
sbb
arpl
fcmovb
mov
and
push
fdivl
push
out
xor
movsb
xchg
pop
sarl
popf
insb
jo
jo
test
pop
jmp
call
mov
xorl
mov
cmc
iret
pop
and
xlat
sbb
mov
sub
sub
int
enter
sub
sbb
stos
mov
jge
pop
or
mov
jo
jl
mov
stos
jmp
into
cmpsl
jne
mov
int3
loope
shlb
test
jae
ret
fimull
sub
xchg
in
add
or
xchg
pop
jmp
dec
xchg
or
not
add
mov
xor
mov
mov
push
add
add
jmp
shrb
div
stos
mov
push
jmp
std
dec
imulb
push
and
leave
inc
jge
outsl
adc
mov
pusha
xchg
jp
fnstenv
rclb
push
xchg
xor
negl
and
imul
dec
sbb
mov
or
sub
inc
sub
out
cmc
fldl
cmpl
sti
xor
mov
ret
pusha
jmp
lret
sarb
rolb
icebp
pop
lret
sbb
mov
inc
mov
sub
lcall
jno
jge
les
mov
sub
xor
sub
fsubs
mov
aas
pop
mov
push
push
fnstsw
daa
aad
daa
jmp
je
xchg
out
out
test
fcompl
lds
sbb
push
xchg
fmull
dec
lods
das
cmpsb
adc
stc
push
lret
xchg
sub
cwtl
dec
movsl
mov
xor
or
not
adc
int
dec
add
cmp
jle
in
sarb
mov
jp
sub
repnz
je
and
add
icebp
pusha
push
fcmovnu
repnz
stc
sbb
pop
sbb
mov
je
jns
popf
dec
cs
dec
jno
push
lret
dec
fs
sar
das
add
lods
aad
xchg
ds
pop
int3
cltd
loop
test
jp
dec
loopne
xor
fstpl
loope
xchg
xchg
sti
pop
fstps
xchg
pop
mov
shrb
decb
push
test
dec
outsl
test
adc
loop
faddp
bswap
mov
xorb
cwtl
sti
and
aaa
lds
idivb
fs
inc
popa
lea
sbb
pop
sub
push
fwait
icebp
out
test
mov
pop
pop
and
lods
enter
jp
hlt
push
or
out
orb
enter
in
out
sub
mov
push
addb
inc
push
ljmp
xchg
std
cmp
xor
jl
xor
mov
inc
push
sti
rclb
filds
std
loopne
xchg
scas
les
clc
and
jns
mov
loope
jb
std
rcrl
lret
cmpps
testl
or
adc
call
movsl
jle
cmp
inc
dec
ud2
sbb
dec
inc
xor
mov
mov
dec
mov
bswap
popa
fisubrl
lret
inc
cli
into
imul
nop
adc
popa
sbb
aad
and
jae
and
mov
stc
push
lcall
in
jmp
mov
inc
dec
sti
rclb
filds
std
loopne
xchg
scas
les
in
test
and
js
mov
loopne
jb
std
rcrl
test
ret
stc
mov
call
or
adc
jmp
mov
ljmp
fucomi
out
fnstsw
mov
add
das
es
inc
xor
mov
mov
dec
mov
fcmovne
popa
fisubrl
lret
shl
call
sbb
aad
and
jae
and
mov
stc
push
lcall
in
jmp
mov
out
icebp
rcrb
mov
daa
xchg
push
stc
outsb
sbb
cmp
cmp
mov
ljmp
inc
push
inc
int3
jbe
or
popa
andl
or
mov
out
inc
mov
aad
push
add
cmp
mov
push
fidivrs
mov
inc
adc
pop
xor
test
or
outsl
pushw
push
sub
out
adc
mov
cmp
pop
hlt
lods
jae
outsb
les
fisttpll
lock
out
sbb
jecxz
cli
push
test
insb
cmp
jne
int3
and
xor
xchg
or
int3
lahf
cmpsb
sbb
pop
adc
push
cmp
cmp
bound
fdiv
pop
push
cmp
das
and
sub
fcoml
cmp
or
clc
sub
lcall
loop
sti
pop
ret
push
or
test
popf
fildl
cmp
jo
and
ds
pop
inc
mov
mov
mov
jnp
jno
stos
je
adc
jbe
xor
sbb
icebp
cmpsb
sbb
pop
lea
arpl
xlat
sub
push
test
aad
xor
ficompl
adc
bound
stc
cmp
add
cmp
bound
lahf
testl
cwtl
sub
sbb
inc
mov
cmp
iret
testb
mov
push
fs
dec
cmp
sbb
aad
jle
cmp
iret
movsl
hlt
test
movsl
push
arpl
cmp
and
loop
aas
inc
daa
std
mov
add
jne
dec
add
enter
loopne
cmp
xor
mov
or
or
and
bound
stc
cs
or
add
call
cli
pop
sti
test
les
popaw
pop
cmpsl
sbb
arpl
roll
push
cmp
or
outsb
paddb
cmpl
sbb
jle
inc
push
push
xchg
push
les
xor
push
mov
sti
cmp
xor
mov
arpl
xchg
jl
stc
ret
jmp
or
adc
mov
sbb
lods
add
add
add
movsl
ss
dec
lcall
sub
aas
fistpll
lods
adc
lahf
push
in
sub
das
inc
mov
loope
sbbb
jle
fwait
icebp
pop
or
daa
leave
add
or
mov
mov
pop
adc
add
clc
and
lods
imul
sbb
xor
idivb
jecxz
sbb
and
and
cli
scas
xchg
and
mov
flds
xor
mov
mov
dec
sub
into
push
xor
nop
imul
in
mov
andl
fucomip
lods
ss
pushf
icebp
sarl
sub
mov
insb
imul
adc
mov
aam
inc
pop
ljmp
xor
inc
leave
adc
pop
mov
shr
push
sbb
mov
test
loope
xor
adc
out
int
jno
jbe
lcall
leave
andb
ficoms
leave
pop
enter
and
divb
int
or
push
sub
bnd
decb
push
imul
js
aaa
or
sbb
or
inc
bound
and
repnz
push
push
in
jbe
jg
subl
fnstenv
stos
mov
in
inc
loopne
insl
mov
mov
inc
mov
lds
das
addl
xor
orl
negl
add
dec
or
pop
enter
gs
ljmp
adc
xor
ds
pop
fcmove
ja
loope
fdivs
cmp
add
and
mov
adc
call
leave
out
dec
mov
scas
cmc
stos
int
mov
dec
ljmp
dec
cmp
popf
aaa
fdivp
xchg
xchg
cmc
insb
out
push
mov
sbb
sbb
scas
hlt
mov
or
in
cwtl
mov
popf
sub
mov
mov
imul
inc
lret
inc
into
or
fcmovb
push
sahf
mov
lods
xlat
hlt
or
movsb
insb
or
lods
dec
sub
out
xchg
int
cmp
pop
cli
mov
mul
imul
ss
xlat
pop
rolb
cwtl
mov
test
inc
popa
lret
mov
mov
out
int3
mov
nop
or
cmp
ret
insb
ret
mov
mov
insb
loopne
mov
xlat
or
lds
fpatan
xlat
int3
adc
xor
sub
test
and
xor
push
ss
inc
lea
pop
jle
sub
fsts
lds
jl
enter
lret
out
jge
xchg
pop
ror
cmp
daa
cld
cmp
mov
ds
mov
and
in
and
sahf
inc
addr16
mov
mov
pop
cli
mov
lods
xor
mov
pop
loope
cmpsb
pop
jecxz
stos
scas
xor
xchg
jge
rcll
sbb
jl
xchg
inc
shrb
cwtl
call
aam
nop
xchg
rcrb
or
test
mov
cltd
punpcklwd
push
out
xor
es
xor
pop
loopne
xchg
insl
inc
in
lahf
popa
sub
push
lock
andb
rcl
mov
sub
push
sub
xchg
ss
in
add
outsl
pop
outsl
xor
orl
add
sbb
stos
out
push
aas
bnd
mov
jns
push
sub
adc
pop
test
mov
nop
xor
push
mov
mov
cld
or
xor
mov
lock
insl
pop
or
add
idivl
les
nop
mov
xchg
cs
push
cmpb
leave
cmpl
scas
inc
push
rorl
loope
mov
xor
sub
loopne
movhps
leave
add
in
out
es
stc
mov
fs
mov
imul
cld
inc
rclb
cltd
fistl
call
sub
fnstsw
adc
sbb
add
inc
pop
andl
dec
gs
add
stos
cli
pop
push
push
sub
cmpsb
shl
dec
cmp
in
sbb
fistl
push
cmp
mov
les
repz
push
xchg
lcall
jmp
pop
setp
xchg
xchg
pop
sbb
xchg
push
pop
cmpsl
ret
mov
sbb
mov
sarb
cmp
push
sbb
test
insl
lret
cmp
dec
mov
negl
push
jb
cmp
add
test
inc
mov
scas
jb
adc
xor
dec
ret
stc
mov
movsb
cld
jmp
sbbb
aam
jg
lahf
in
addr16
pusha
out
int3
lahf
addr16
out
mov
mov
test
mov
test
cmp
repz
lret
adc
mov
stc
movsb
sub
imul
pop
out
arpl
ffree
inc
mov
mov
decl
popa
pop
pop
pop
push
pop
mov
pop
out
jle
add
mov
mov
push
nop
sahf
sti
jb
aas
xchg
push
test
ffree
stos
dec
stos
leave
outsl
add
stc
sbb
das
inc
insb
jmp
clc
cld
stos
push
pop
push
outsb
cmp
dec
dec
repz
jmp
sti
sti
inc
stos
mov
push
mov
xor
jb
jo
mov
push
mov
inc
push
xchg
pop
push
or
loop
andl
mov
in
in
dec
pusha
shrb
hlt
out
cmpsl
xor
movsl
out
imul
or
repnz
scas
xlat
jge
dec
fninit
mov
rcl
popf
or
test
mov
add
jbe
jge
push
sbb
imul
inc
xor
stos
jg
nop
das
fildll
jg
jp
add
and
pop
add
notb
in
and
leave
push
jnp
add
xor
in
scas
ss
imul
inc
call
mov
call
cmc
cli
add
fs
push
add
roll
cmp
xlat
aaa
inc
push
or
call
into
mov
stc
jo
popf
sahf
fnstenv
cmp
aad
dec
scas
jne
cld
out
lahf
insb
cld
pop
push
xchg
pop
mov
shl
xlat
je
mov
jmp
xor
cld
inc
pusha
jle
lds
ret
pop
xor
dec
test
daa
ss
das
sub
clc
xchg
push
lds
cmc
add
hlt
pusha
or
fdivrl
fidivrl
mov
notl
dec
add
xlat
mov
mov
icebp
test
adc
dec
hlt
loopne
mov
jp
sarl
loopne
sub
mov
sub
icebp
sahf
jo
sub
push
into
es
in
fwait
fwait
jbe
mov
orb
dec
mov
lock
dec
push
dec
jp
imul
bound
jno
ljmp
dec
fisubrs
pop
repnz
hlt
push
sub
inc
pop
popa
mov
in
popw
mov
aaa
movsb
gs
ret
sbb
xchg
xor
incb
dec
dec
in
and
out
in
xchg
fldl
in
add
adc
adc
push
hlt
fcoml
stc
and
imul
or
or
jns
data16
sbb
and
xchg
sti
xor
in
mov
adc
in
frstor
pushf
arpl
add
cmpsl
lds
shlb
cmp
gs
lds
fisubrs
rclb
jg
popf
sub
filds
sbb
adc
jge
cmc
test
xchg
jns
shrb
cmp
jp
icebp
adc
mov
mov
adc
mov
xchg
pop
cmp
mov
cmp
sbb
ljmp
testl
sub
inc
xchg
test
inc
xor
ret
call
out
aaa
jo
lret
mov
xor
dec
sub
and
popf
aas
push
inc
fcmove
pop
adc
in
cli
sbb
xor
pop
push
cld
or
mov
adc
xor
pushf
sub
fwait
inc
fldcw
jb
cmp
pusha
outsl
mov
adcl
pminub
fisubrl
bound
push
mov
lods
push
cmpsb
in
ja
add
inc
test
xorl
ret
lods
pop
pop
fsubs
mov
movsb
push
dec
imul
lea
test
xchg
rolb
push
fidivs
adc
lret
or
mov
inc
sbb
or
in
cmp
les
inc
mov
sti
inc
mov
xchg
mov
lock
xor
cli
and
jno
xor
jbe
xchg
ss
sbb
call
outsl
leave
scas
inc
xchg
mov
int
clc
ds
lds
fs
pop
icebp
dec
pusha
jo
push
fs
mov
fsubrl
dec
jbe
shlb
popf
jae
xor
lods
mov
jmp
jmp
lcall
fcmove
lahf
dec
test
movsb
popa
mov
and
mov
cmc
scas
inc
cmpsb
xchg
xor
sar
popf
mov
test
sbb
sub
jge
add
jl
adc
imulb
jns
rolb
outsb
std
push
enter
loopne
xchg
sub
fs
cmc
pop
adc
adc
inc
shll
pop
xor
pop
fmuls
xor
push
call
mov
cmp
jb
sbb
push
jae
insb
jmp
hlt
mov
cmp
dec
bnd
outsb
shr
xchg
mov
imul
jne
dec
test
adc
decl
jl
ret
pop
das
inc
ficoml
adc
in
mov
jno
out
sahf
add
jecxz
adc
jbe
jmp
repz
fnstenv
call
or
xor
push
fwait
test
mov
sbb
jno,pn
punpcklwd
adc
cmp
call
xchg
mov
hlt
int
enter
and
ret
bswap
jae
pusha
in
icebp
icebp
jmp
pop
mov
int3
mov
cmpsb
jne
cmpsb
lods
lahf
fstl
mov
lock
imul
push
in
test
jl
or
test
inc
jg
sahf
jae
push
test
out
pusha
std
and
sub
jg
inc
jl
in
jo
mov
lcall
insl
jmp
cli
cmc
subl
hlt
movsb
jnp
sbbb
sub
lods
sub
or
movsb
jl
push
mov
add
add
nop
repnz
imul
out
jns
jle
mov
or
shrb
divl
loope
iret
xor
cmp
test
or
sub
xor
insl
sbb
and
es
add
ljmp
adc
and
dec
sub
pop
sub
and
je
or
sub
jle,pt
fadd
dec
xchg
sbbl
mov
mov
or
inc
rclb
mov
loop
mov
repnz
test
inc
xor
fwait
test
cmp
sbb
jge
icebp
adc
mov
or
sub
mov
int3
dec
dec
int3
cmp
pop
pop
add
mov
jg
push
push
xor
jne
stc
push
popa
mov
movsb
xor
jge
bound
shlb
loope
andl
adc
sbb
icebp
cmp
pop
pop
add
jle
scas
xlat
sti
sarl
cmp
mov
in
stc
test
push
addr16
cmpsb
dec
xorl
xchg
mov
scas
or
outsb
jo
xlat
mov
ficoml
ja
and
cltd
pop
iret
out
inc
jp
mov
mov
mov
test
pop
je
hlt
js
push
and
js
jg
pop
adc
lods
xchg
aaa
shlb
jp
rclb
push
xor
movsb
loopne
nop
and
shrb
test
mov
jo
xchg
pop
into
ljmp
fcompl
cmp
add
out
mov
mov
add
out
aam
mov
or
cmp
test
or
dec
jge
idivb
pop
push
jle
sub
inc
sarb
int3
sub
adc
into
lods
pushf
sbb
outsb
mov
xor
pop
and
mov
jmp
cld
sub
fldenv
jecxz
xor
idiv
xchg
insb
push
lods
or
xor
jg
jg
add
mov
roll
cwtl
dec
aaa
jns
cwtl
addl
adc
sub
jns
sub
call
addb
sub
sbbl
sbb
sbb
cmp
mov
imul
test
dec
cli
inc
roll
push
push
test
dec
gs
mov
test
lret
xchg
scas
mov
popa
shlb
scas
xchg
pusha
push
push
dec
xor
scas
add
pop
mov
xchg
clc
jb
sub
dec
div
xchg
divl
fildl
fdivrl
aaa
pop
and
adc
stos
sti
mov
repz
mov
daa
out
inc
xchg
or
push
imul
or
jecxz
js
adc
pushl
cmp
fisttpll
mov
imul
repz
leave
fdivrs
sti
xor
lret
fdivrs
jae
gs
xor
clc
imul
es
and
pop
pop
cmpsb
out
add
add
and
push
movsb
in
test
shlb
imul
push
sbb
stos
mov
cmp
jnp
sbb
mov
jnp
js
test
jmp
add
mov
mov
jb
test
sbb
pusha
idivl
loope
dec
adc
pop
stos
xor
sbb
jns
inc
lods
cmpsl
test
outsl
mov
mov
mov
fnstcw
xor
add
xor
lods
movsl
push
outsb
lods
sub
push
jne
jg
shlb
pop
aad
add
cmp
imul
icebp
push
xchg
aam
in
lods
add
inc
sbb
or
decl
mov
nop
sahf
add
das
fcoms
jnp
add
jg
movsl
push
outsl
out
hlt
mov
cmp
sbb
jno
xor
xchg
sbb
mov
bound
les
add
push
imul
push
hlt
outsl
mov
scas
imul
xlat
and
push
jmp
fisttpl
call
loopne
sbb
adc
xchg
sbb
xor
scas
push
or
xor
push
pop
dec
jge
or
int
or
xchg
test
addr16
aad
mov
cmp
cmpsb
adc
fildll
push
es
add
jmp
pop
outsb
dec
push
jne
sub
out
cld
mov
pushf
fnstenv
jne
add
subb
cmp
inc
ror
inc
xor
pushf
adc
stos
movsb
xchg
ret
mov
mov
jl
xor
xor
adc
sti
sub
stc
loop
push
imul
mov
and
sub
sub
push
jnp
cwtl
bound
lods
clc
jle
mov
sub
xchg
adc
out
sbb
xor
ss
add
cmpsb
dec
stos
sahf
xor
bound
pop
lret
adc
sbb
stos
and
popa
cmp
scas
int
push
movsl
adc
lret
sbb
repz
push
cwtl
and
rclb
icebp
xchg
rcr
test
lds
nop
nop
sub
outsb
jbe
sbb
stc
sahf
jbe
add
inc
rcr
enter
mov
or
sbb
xchg
pop
mov
mov
or
insb
cmpsb
mov
mov
xchg
ljmp
popf
pop
fidivl
pop
loop
int
cwtl
aam
lea
stc
addr16
and
orl
mov
sub
scas
inc
and
je
add
gs
mov
xor
jmp
cmp
push
mov
and
mov
pop
inc
out
iret
sub
lea
cmp
and
insl
stos
ror
test
lock
aaa
push
or
out
test
testb
shlb
adc
sub
movsl
mov
cmp
sti
mov
push
arpl
aas
xor
in
cmp
cmp
push
dec
add
push
push
add
jmp
imull
popf
inc
sub
cld
xchg
out
leave
int
outsl
lret
nop
insl
cltd
cmc
stos
pop
jne
xlat
fcoms
mov
jl
push
ret
std
or
repnz
or
mov
push
lahf
mov
stos
lock
mov
mov
xchg
jl
idivb
sbb
lods
mov
inc
xor
fnstsw
push
lods
aas
hlt
xor
daa
mov
fstpl
inc
mov
int
adcl
xor
aad
pop
sub
fidivs
rcrl
lret
mov
shlb
sub
frstor
push
inc
xchg
sbb
jge
jne
call
testb
sbb
jge
xor
lret
xchg
jb
xor
jecxz
push
in
add
popa
mov
inc
xor
jge
push
lods
mov
push
and
ljmp
xchg
nopl
sbb
pop
pop
fsubrs
or
addl
aad
test
in
pushf
or
roll
decl
pop
loope
test
inc
xlat
orl
aad
and
mov
jmp
leave
pop
das
ret
and
jge
jle
loopne
add
in
sub
hlt
fisttpll
mov
add
adc
test
dec
xchg
jge
rcr
mov
adc
pusha
popa
add
xchg
push
lods
and
jns
inc
je
sub
mov
lods
xchg
mov
scas
jno
test
roll
movsb
push
cltd
or
test
jmp
in
ret
xchg
lret
movsl
fistpl
test
pop
or
pop
inc
jmp
notl
iret
test
repz
jp
sub
dec
cmp
pusha
and
adc
shl
dec
mov
popf
mov
or
xlat
jns
pop
sqrtps
xchg
jbe
push
fdivr
mov
in
pusha
inc
inc
std
jo
std
xor
sub
adc
push
push
lret
stos
adc
pop
in
xor
popa
cmp
pop
fmul
std
xchg
adc
and
pop
xor
push
jge
sti
fwait
in
pop
popa
ret
fwait
jp
or
and
subb
cmp
mov
or
lock
outsl
lock
xor
jmp
lock
lods
fwait
dec
cld
mov
xchg
mov
daa
dec
cld
nop
lea
insl
test
daa
cltd
cwtl
lock
xchg
movsl
not
cmp
mov
mov
clc
inc
lods
add
mov
jo
in
sbb
mov
fldl
sub
xchg
xor
jmp
les
mov
call
fidivs
sub
dec
xchg
push
xor
es
push
inc
add
rcl
inc
fcoms
add
icebp
into
xchg
lods
mov
lock
push
ds
push
xchg
cmpsb
loop
std
out
adc
outsb
jp
dec
lods
pop
lea
push
push
aad
mov
shll
data16
push
sbb
dec
push
pop
dec
cmpsb
add
ja
roll
mov
adc
sbb
lret
notl
ffree
push
xor
xchg
push
xor
push
cmp
and
fistpl
inc
andl
mov
rclb
addr16
sbb
les
sti
call
adc
ret
outsl
ja
dec
add
mov
fcmovnb
inc
test
sbb
test
adc
adc
mov
arpl
lods
les
add
xor
pop
out
mov
xor
add
xor
shlb
loope
movsb
xor
data16
lds
pop
or
mov
jae
mov
ja
mov
jp
add
aam
lods
mov
aad
inc
mov
mov
daa
cs
popa
and
dec
test
add
inc
mov
or
sbbl
sub
loope
add
xlat
adc
cs
xor
lea
mov
add
ds
hlt
jae
push
mov
daa
sbb
aad
inc
subb
pop
adc
push
movsl
sarl
xor
out
sub
fnstcw
xchg
in
movsl
inc
mov
fldt
es
add
sub
inc
pop
inc
sarl
push
mov
stc
mov
bound
cmp
insl
bound
sbb
shrl
loopne
jae
popa
stc
xchg
outsl
fldenv
sub
loope
inc
imul
std
push
mov
mov
xchg
ss
and
cmpsb
insb
cld
cmpsl
fnsave
and
clc
mov
sub
push
and
push
jne
sarb
or
in
divb
pop
lds
int
jae
jne
push
lret
sub
and
ret
cmp
xchg
jbe
std
scas
dec
and
outsb
push
xchg
xor
cmc
cwtl
xor
lods
pusha
xorb
pusha
push
stc
ret
dec
div
divb
xor
hlt
adc
inc
sti
lahf
call
aam
add
out
test
add
movsl
xor
in
cmpsl
in
sub
sub
aaa
sub
test
fstpl
adc
iret
idiv
inc
test
mov
movsb
xor
daa
outsl
ss
mov
out
cli
sbb
insl
push
mov
sbb
pop
fsubp
fldln2
movsl
cwtl
std
mov
ffree
orl
fwait
push
sub
xor
jns
dec
jnp
xor
add
and
mov
testl
lods
cmp
test
push
add
and
cwtl
cmp
sqrtps
and
js
pop
and
xchg
sub
sbb
mov
sub
scas
js
xchg
sbb
xchg
pop
push
mov
idiv
push
cmp
xlat
outsl
jb
push
cvtps2pi
inc
mov
and
test
lods
cmp
cmp
xor
inc
or
aad
mov
imul
or
mov
in
adc
cmp
jl
pop
inc
push
inc
or
and
jmp
out
notb
arpl
fxtract
cmpsl
jge
xor
fs
dec
popa
sub
cmp
and
push
stc
std
lea
sub
bound
xor
push
jo
jp
das
and
jle
jl
xor
xlat
movsl
add
push
sub
sbb
mov
imul
add
dec
cmp
stos
test
shrl
jno
add
loop
mov
sti
rcr
jmp
out
inc
scas
psubb
pop
lds
mov
lret
cmc
iret
movsl
jl
xor
inc
xchg
ffree
out
xor
cmp
shll
jge
pop
push
mov
pop
xchg
mov
sarl
enter
mov
imul
mov
mov
pop
es
repz
push
push
inc
xchg
xchg
adc
aad
push
dec
mov
dec
push
icebp
cmc
imul
stos
add
in
imul
mov
lods
fs
aad
sarb
xchg
pop
mov
push
stos
std
dec
push
add
xchg
sub
andl
movsb
cmp
in
xchg
int
jae
hlt
movsl
packsswb
sub
sbb
fsubl
mov
or
mov
adc
inc
xchg
cmp
pop
sti
add
fcmovnu
dec
jns
cli
stos
or
sarl
mov
sbb
insb
jp
sti
inc
add
not
adc
testl
pop
stos
add
dec
sub
inc
subb
inc
mov
add
jl
jle
jge
jle
xchg
add
mov
bsr
xor
or
mov
push
jo
outsb
mov
loopne
jbe
inc
xchg
mov
inc
aam
sub
mov
cmp
push
sahf
std
push
push
push
or
adc
out
adc
out
adc
rcll
test
add
stos
stos
cmp
scas
mov
test
fst
xchg
adc
jae
imul
out
jno
cmp
nop
xor
xchg
xor
or
rorb
push
rorl
xchg
rcll
fldcw
movsb
xor
jne
mov
mov
daa
ss
sbb
ss
sbb
fldcw
inc
push
mov
adcb
les
pop
rol
pop
or
lds
mov
in
test
movsl
lock
movsl
hlt
cmpsl
xor
cmp
add
imul
das
sub
and
sub
push
sub
and
fwait
jb
adc
or
iret
pop
add
add
add
and
bound
sub
pop
fwait
add
int
add
mov
fnstenv
sub
pop
push
jle
mov
mov
movl
or
pop
test
mov
sbb
mov
sub
fs
imul
mov
adc
rcll
gs
sbb
imul
inc
jp
lea
sub
add
jge
jg
jge
ja
cmp
add
fsubp
dec
mov
loop
popf
mov
sbb
in
incb
daa
fsub
push
je
addr16
or
xchg
push
ss
inc
int
inc
ret
or
adcb
mov
insb
jp
dec
add
xchg
daa
cmpsb
push
stc
in
pop
lock
cmp
sub
mov
cwtl
inc
ds
iret
mov
cmp
sub
in
dec
push
movsb
mov
xchg
cs
jns
jle
push
pushl
push
in
jmp
lods
jo
dec
inc
leave
inc
sub
inc
js
jge
in
inc
icebp
mov
dec
insb
movsb
addr16
jns
in
add
clc
out
sbb
and
roll
js
daa
cli
es
arpl
xor
ja
pop
pop
lock
or
call
fdiv
imul
add
fstps
xchg
jle
jmp
aaa
ljmp
ficomps
push
fcompl
clc
fidivrl
mov
loop
push
mov
loope
fs
shll
mov
and
dec
add
movsl
lea
test
stos
pop
mov
pop
sub
sbb
lahf
popa
stos
xchg
jb
lahf
adc
and
es
add
mov
jmp
cli
popf
insl
lods
inc
dec
sub
in
xchg
js
es
ss
pop
dec
and
int3
jbe
test
cmp
jnp
test
cld
in
push
ror
mov
mov
cld
xchg
shrb
push
dec
dec
jg
lods
sub
and
xor
add
fisttpll
lea
insl
push
and
push
scas
dec
sbb
and
mov
ds
sbbl
loop
neg
mov
aas
rcll
xor
leave
mov
fisttpll
mov
or
pop
out
popf
jo
xchg
push
call
sbb
sbb
xor
lret
mov
mov
xchg
mov
push
xor
pop
in
push
in
xlat
aaa
sbb
jmp
pop
add
inc
scas
mov
ret
xchg
push
arpl
loop
add
cmp
je
sub
or
test
pop
cltd
add
sub
sub
dec
jecxz
sub
pop
mov
out
mov
cmp
jmp
lods
adc
push
inc
clc
scas
jb
ret
js
jnp
out
mov
push
in
and
xor
mov
add
mov
jle
daa
mov
cmc
mov
jne
aas
je
push
pusha
push
sbb
lods
repnz
test
mov
fbstp
test
jb
sub
mov
and
in
sub
in
repnz
inc
shll
add
push
test
test
push
xor
pushf
push
inc
push
mov
int
rolb
lock
gs
ja
stc
imul
xchg
jl
push
cmp
dec
inc
test
sbb
inc
dec
js
jl
sub
adc
sbb
xchg
sub
clc
or
aaa
push
cli
lods
das
add
lock
insl
lcall
fmuls
add
pop
push
add
nop
loope
and
rolb
dec
outsb
out
sbb
xor
xor
ja
std
dec
push
js
stos
dec
push
add
cmp
sub
mov
fmulp
pop
push
adc
jne
mov
ds
pushf
lods
xor
stos
xor
or
fsubrl
push
push
rcl
pop
mov
add
jnp
mov
push
push
adc
xchg
ret
push
jle
decl
add
lcall
pop
push
mov
ret
add
xchg
xchg
mov
and
popf
out
call
adc
xchg
out
arpl
inc
fldenv
cmc
mov
int3
inc
xchg
jecxz
pop
mov
shll
xchg
push
into
sbb
popf
sub
sar
lret
fs
mov
outsl
cmp
popa
push
jmp
xor
fdivl
bound
movsb
xor
pop
cmp
mov
jl
mov
pusha
cmp
adc
jne
loope
xor
in
xor
add
xchg
add
arpl
mov
mov
test
mov
inc
adc
loopne
xor
push
popa
rcl
fs
dec
add
pop
push
xchg
sub
dec
adc
dec
test
xorl
jecxz
jbe
xchg
aas
clc
jns
cltd
addr16
psubusw
xchg
mov
xchg
and
leave
sbbb
sub
add
stos
pusha
mov
mov
jae
jae
imul
cmp
mov
in
dec
mov
inc
negb
cmp
xchg
out
insl
sbbl
xchg
aad
push
mov
sbb
data16
mov
inc
into
xchg
adc
jb
adc
in
xor
xor
push
gs
xchg
push
inc
pusha
xor
and
mov
mov
jbe
cmp
aas
mov
iret
cmp
mov
ud2
sbb
mov
adc
add
cmp
out
movsl
dec
jns
add
mov
pop
std
mov
and
lock
xchg
xor
mov
inc
icebp
xor
enter
xor
fiaddl
test
test
mov
lcall
inc
ficoms
push
mov
outsl
lods
movb
adc
xor
sbb
stos
ds
mov
pusha
mov
mov
adc
movsl
popf
cs
shlb
out
imul
xchg
call
sarb
sti
arpl
pop
imul
mov
jbe
movsb
mov
imul
lods
cmp
js
stc
dec
divb
xor
or
push
mov
aad
add
test
shrb
movsb
mov
stos
dec
call
ja
jns
adc
dec
aad
xor
cmp
aam
out
in
xor
shlb
cmp
shl
xor
fadds
in
imul
mov
adc
xor
pop
int
mov
cmp
int
xor
fnsave
fstpt
gs
stos
lock
jg
xor
outsb
divl
js
in
shll
or
shrl
push
dec
ret
xor
fs
sbb
adc
adc
bound
clc
inc
loop
negl
xor
cmp
cmp
mov
or
ffreep
mov
and
push
mov
inc
jg
xchg
pushf
push
jno
ficomps
add
sub
neg
fs
inc
popf
xor
and
rcll
fstpt
mov
ja
cli
xor
mov
wrmsr
pop
pop
movsl
jns
xor
loopne
das
pop
push
dec
std
jb
mov
into
aam
mov
imul
xchg
into
icebp
lods
xchg
movsl
dec
mov
cmp
mov
push
dec
cmp
sahf
cmp
pushf
test
cmp
into
arpl
xchg
xchg
subl
lock
jno
sub
jno
adc
dec
mov
icebp
jg
xchg
clc
cmc
mov
and
test
pop
or
enter
call
and
cli
cltd
subl
mov
cmpl
mov
mov
ret
repnz
jb
inc
cmp
leave
cmpsb
push
mov
jb
icebp
adc
insl
shrb
inc
mull
ljmp
clc
into
pusha
bound
pop
push
and
mov
loop
ret
addr16
pop
or
lahf
sub
ljmp
xor
in
sti
aam
inc
cmpsb
aas
in
sti
inc
adc
aas
lods
mov
cmp
and
push
sub
push
ds
and
pop
pop
ret
inc
int3
cmp
fidivrs
or
imul
dec
cmpsb
or
xor
outsl
rorb
or
shlb
jns
mov
mov
push
cs
into
and
or
push
dec
fldcw
jnp
xor
xchg
ja
lods
pop
scas
cmc
pop
adc
push
xor
add
fldcw
loop
cwtl
mov
xor
insb
lds
push
stc
or
push
leave
fiaddl
push
cmpsl
or
sub
test
add
jmp
insb
xlat
inc
add
lds
negb
fwait
popf
popf
aam
bnd
sub
ret
jmp
mov
mov
in
pop
push
adc
clc
test
mov
sarl
sub
movsb
push
sub
aad
fwait
mov
in
idivl
dec
add
test
mov
ret
pusha
es
mov
sarl
ret
ds
jge
xchg
mov
jae
sub
clc
rorb
dec
sub
bound
cmp
andb
outsl
movsl
dec
andl
lds
in
cmovns
sub
sbb
lahf
dec
movl
call
jmp
jns
mov
jl
repnz
xchg
jne
pop
sub
shl
push
repz
daa
lea
out
lret
pushf
lock
mov
in
in
and
fs
clc
sbb
std
sbb
mov
cmpsl
mov
mov
xor
arpl
add
xchg
xchg
dec
lret
and
cmp
mov
jle
lret
push
pushf
mov
nop
ss
andl
int
xlat
inc
das
lock
jns
rcll
jns
jmp
pop
loope
xor
fwait
movsl
rcrb
sbb
shll
ret
dec
cmp
iret
shrb
out
in
pop
inc
in
and
aas
and
nop
sub
ljmp
popf
jmp
add
mov
cs
scas
bound
cli
add
sub
add
das
xchg
cmp
or
jbe
loopne
lds
push
or
jb
enter
movsl
adc
test
iret
ret
bound
cmp
cwtl
scas
xchg
sub
bound
dec
add
bound
aas
cld
pusha
sub
add
add
das
ret
movsb
push
mov
test
aam
adc
movsl
sti
ja
bnd
cmp
dec
inc
mov
pop
pushf
ds
in
cmp
push
pmuludq
aaa
pushf
push
dec
call
and
pop
shll
rol
mov
ljmp
sbb
sbb
les
in
mov
mov
xlat
mov
stos
mov
mov
loop
adc
clc
add
sub
or
lret
pop
mov
pop
cltd
and
jne
push
cld
jno
xor
mov
xchg
inc
sbb
pop
pop
mov
mov
mov
out
out
mov
fidivrl
popf
xchg
mov
jmp
and
sarb
int3
aad
dec
inc
mov
mov
faddp
or
and
lcall
xchg
xlat
into
stos
mov
cmp
arpl
pop
jecxz
push
punpcklbw
data16
pop
pop
mov
icebp
dec
aas
icebp
ds
lds
stos
push
loopne
jae
jne
and
std
mov
pop
xor
add
inc
shl
call
ret
cmp
mov
ljmp
add
loopne
mov
xor
icebp
add
stos
pop
outsl
cs
xor
sbb
cmp
mov
inc
roll
mov
jo
stc
jl
or
test
jbe
cmp
lahf
lcall
xchg
movsl
xchg
js
pop
adc
and
aaa
xchg
mov
lods
outsl
and
ret
add
inc
xor
lods
sub
xchg
stos
in
xor
sub
sbb
adc
inc
fiadds
jl
jnp
cmp
in
imul
push
movsb
jmp
sub
jle
fcmovu
dec
test
push
test
cmpsl
imul
pusha
sub
movsb
adc
sahf
int
cmp
dec
fidivrs
jb
pushl
mov
fisubl
jae
imul
testl
outsb
sub
cmp
inc
imul
dec
sub
mov
cmp
clc
xchg
push
xor
inc
sub
push
add
xchg
cmp
push
leave
push
lret
mov
fistps
sub
out
out
mov
enter
xchg
mov
ja
jbe
ja
and
maskmovq
imull
leave
sub
push
ss
mov
sbb
lahf
enter
push
jo
cld
cli
inc
les
arpl
add
lret
pop
test
mov
fimull
mov
lret
mov
inc
cld
cld
lds
xchg
rclb
test
arpl
and
imul
fisttpll
pop
loop
sbb
ds
adc
test
xlat
data16
stc
add
fsubl
jb
arpl
jne
jnp
inc
mov
fsub
sbb
shlb
push
cmp
mov
cwtl
frstor
adc
sbb
xchg
cmpsl
hlt
push
leave
and
fwait
loop
and
jmp
icebp
hlt
daa
cld
dec
call
int3
orl
lret
xchg
sarl
xor
fisubs
cmp
int3
xor
dec
popf
idivl
dec
mov
ja
rcrl
sbb
and
test
ds
shlb
or
xor
mov
dec
mov
mov
icebp
clc
or
cmpsb
pop
sbbb
add
movsb
pop
xchg
inc
mov
xor
xor
sbb
mov
jg
mov
inc
sbb
icebp
mov
in
insb
dec
cwtl
vpxor
fildll
push
fldln2
xchg
sub
cltd
pop
dec
es
push
push
mov
fs
xchg
pop
test
pop
jb
ja
movsl
repnz
loope
stos
fsubrl
cmpsb
xchg
ret
jbe
stos
in
mov
dec
push
mov
paddd
repz
dec
push
push
loopne
and
sub
loop
les
repz
pop
int
into
cmp
mov
in
ret
sub
jp
and
cli
insl
push
loope
clc
popf
and
fadds
fsts
les
into
pushf
pop
outsl
xchg
adc
jnp
out
addr16
mov
adc
mov
mov
mov
jl
mov
dec
cld
xchg
outsl
lods
sub
idivb
lods
push
imul
mov
scas
cli
notl
jmp
pop
pusha
ficoml
out
dec
or
mov
cmp
lret
lret
xchg
inc
and
mov
ret
mov
fildl
or
cmp
jne
mov
dec
xor
push
rcrl
cmp
xor
cmp
cmpl
sti
incl
mov
inc
xchg
cmpsb
and
js
mov
arpl
clc
test
imul
and
add
fmulp
mov
ja
flds
fnsave
mov
xor
das
std
mov
push
flds
cwtl
loop
cmp
push
xlat
aaa
fsubl
jmp
add
jmp
push
mov
test
inc
sub
arpl
mov
dec
adc
imul
mov
sbb
inc
dec
xor
aam
rcrb
sti
fmul
dec
cli
sub
rcrb
test
cwtl
stc
mov
jmp
lds
push
adc
sub
mov
pop
jb
pop
negb
or
lcall
das
movl
addr16
in
mov
mov
cmp
adc
dec
xor
pop
in
lret
cmpsb
pop
es
inc
xor
pop
mov
outsb
pop
push
sbb
aam
xchg
imul
inc
dec
jmp
lahf
dec
outsb
js
jbe
mov
inc
jo
and
fsub
outsb
clc
repz
rcll
push
jne
push
ror
adc
mov
bound
xor
ret
cmp
test
cld
lahf
dec
bound
mov
or
ds
or
notl
lret
mov
inc
cmp
arpl
addr16
adc
subb
fldt
adc
inc
jns
adcl
daa
mov
xor
js
xlat
inc
andb
jle
mov
dec
cmpsl
jne
add
mov
stos
aas
and
dec
inc
pushf
cmp
push
imull
cmpsb
and
mov
xor
ret
push
ds
aas
cmp
mov
jmp
adc
pop
cltd
test
jg
inc
andl
and
insb
ljmp
adc
cli
dec
dec
mov
or
shrl
inc
movb
dec
push
std
das
xchg
or
fnstenv
stos
les
lret
xchg
cld
jns
lock
test
lds
es
fcomps
dec
jge
and
jle
les
xchg
gs
mov
iret
push
dec
mov
insl
in
xchg
hlt
push
and
inc
mov
sub
mov
pop
orl
call
lods
es
cli
or
mov
pop
inc
mov
dec
pushf
xor
xor
jge
jmp
std
sub
testl
mov
insl
mov
sub
cmp
xor
std
and
enter
imul
cmc
es
inc
lcall
push
fs
inc
scas
into
fnsave
loopne
shr
int3
pop
add
test
jbe
cmp
test
adc
jmp
cli
xchg
mov
push
mov
and
into
xchg
decl
sbb
cmpsl
mov
andl
add
mov
mov
mov
stos
je
fisubs
mov
push
cmp
ja
sti
push
decl
cmp
sti
inc
add
stos
sahf
xor
in
les
sbb
lea
inc
jne
push
test
inc
jge
mov
sub
ds
popa
adc
push
mov
daa
scas
dec
lods
or
inc
rcrw
scas
faddl
sahf
xor
cmpsl
cmp
imul
cmc
and
mov
sbb
addr16
xor
jns
jns
imul
adc
dec
mov
aaa
xor
outsl
xchg
lret
fcmovnbe
sbb
adc
jbe
push
mov
ljmp
fsubrs
push
adc
inc
push
das
test
xchg
xor
cs
xor
jns
xchg
pop
add
mov
out
jp
mov
popa
lahf
ret
dec
sti
pop
sub
or
lods
test
into
outsl
out
cmpsl
mov
lock
mov
cs
pop
fdivl
cmp
jge
push
and
jmp
test
in
das
stc
mov
int
jmp
inc
jbe
mov
xchg
jle
inc
add
mov
jo
cltd
sbb
mov
jg
shl
vminss
cmp
fimuls
in
pop
mov
aas
push
inc
jnp
fwait
push
fidivs
rorb
aad
jp
pop
int3
shrl
xor
push
aaa
jns
loop
daa
insl
mov
cmp
or
add
cmpsl
xor
aad
jg
and
xor
mov
test
loope
lods
lahf
jle
out
push
jmp
mov
ds
cld
adc
int
xor
pop
sbb
pop
stos
cs
dec
push
add
cmpsl
dec
adc
xchg
jle
jae
sub
test
jb
push
subb
or
mov
mull
lret
movsl
cmp
out
imul
mov
xchg
icebp
shlb
sub
push
cmp
mov
dec
aam
mov
stos
pop
adc
mov
xor
fwait
popf
cli
jnp
in
or
fisttps
add
mov
push
xor
cmp
sti
mov
out
xchg
loope
aad
adc
les
loop
scas
loopne
cs
sub
pop
enter
sbb
push
fldenv
sbbb
and
mov
sub
loope
or
sahf
push
or
enter
dec
jbe
testb
sarb
push
pop
mov
loop
dec
xchg
std
call
stc
and
pop
lret
clc
add
das
loop
pop
test
cmp
sahf
jecxz
xor
fiaddl
stos
scas
mov
cmp
fcmovnu
sub
nop
aas
add
clc
add
scas
lods
dec
push
add
push
pop
jecxz
es
sbb
jg
xlat
xor
xor
mov
out
popa
or
jle
fmuls
mov
fisubs
stc
lds
jnp
out
sub
add
mov
fiaddl
dec
ljmp
movsl
cmp
xchg
lret
gs
mov
xor
test
dec
mov
imul
jnp
lret
lods
movsb
mov
test
pop
xor
rcl
pushf
outsb
sub
mov
into
xor
nop
clc
int
arpl
xchg
test
decb
push
cli
stos
adc
and
test
cltd
scas
cmp
mov
movsl
sub
push
mov
movsb
adc
shll
mov
scas
pop
inc
loop
xor
call
jb
or
inc
add
stc
notb
nop
inc
repnz
xor
jns
xor
inc
inc
add
mov
mov
js
loopne
enter
mov
insb
and
lret
lods
inc
in
gs
ss
mov
push
push
sarb
mov
test
lds
sbb
adc
pop
mov
inc
movsl
fldt
xor
mov
mov
xchg
int
sub
push
shrl
bnd
idivl
pop
ror
in
and
ret
inc
cmp
xchg
sub
cmpsl
jbe
cld
out
xor
jl
out
xor
mov
popa
pop
pop
dec
int
mov
jge
mov
stos
xor
es
sub
sti
push
movsb
aas
xorps
push
ret
dec
loop
xor
push
jle
cmp
outsl
xor
jnp
stos
push
or
cmp
sub
xchg
sbb
inc
xchg
lock
jmp
mov
divb
mov
and
mov
ljmp
out
inc
das
sbbl
stc
test
inc
mov
jge
and
xchg
fcomps
jbe
push
popa
mov
movaps
sti
xor
adc
adc
insb
sti
mov
int
out
flds
xchg
cmc
sub
mov
jbe
test
icebp
loopne
jnp
add
aas
jo
cmp
addr16
sub
int3
lret
shlb
mov
xchg
and
and
mov
mov
or
push
jns
dec
sbb
lcall
add
or
sbb
test
mov
sbb
inc
mov
lret
jb
push
adc
insb
data16
sti
jne
sub
cmp
cmp
sbb
mov
mov
mov
sahf
ja
mov
mulps
mov
mov
sub
sahf
mov
repnz
cmpsl
shl
pop
and
cmp
mov
bound
fcmovnbe
jp
mov
jge
xor
jbe
loope
pop
fxch
ret
jmp
xor
std
subb
dec
dec
mov
nop
xchg
pop
or
call
leave
push
std
or
shll
arpl
push
jae
das
fsubl
test
pop
mov
adc
mov
mov
pusha
mov
xchg
mov
enter
and
enter
jbe
bound
ret
ret
xchg
repnz
xlat
lock
cmpsl
pop
jle
push
mov
mov
mov
div
insl
mov
jnp
dec
std
inc
cmp
cwtl
or
fcmovu
push
push
sbb
outsl
sub
xor
imulb
sub
xchg
jl
inc
xor
popf
les
push
imul
in
popf
adc
mov
stc
jno
mov
bound
loop
pop
addl
ret
and
cmp
mov
insl
mov
pop
sub
xor
vmovd
dec
cmp
stc
fisubrs
cmc
xor
mov
pushf
jl
jp
fldl
adc
in
into
inc
cmpsb
sbb
scas
sbb
jp
push
inc
cmp
bound
mov
cmp
ret
xor
movsb
popa
enter
xor
insb
sbbb
dec
pop
and
cmp
xor
outsw
incb
pop
outsb
xor
jle
int
sub
hlt
es
in
jne
xchg
clc
popa
mov
sbb
xchg
push
les
in
adc
mov
push
mov
hlt
sbb
outsl
mov
add
xorl
das
cmp
push
xor
in
sub
test
or
mov
mov
clc
aad
mov
ss
sbb
dec
fbld
sbb
and
movsl
xchg
in
aas
fistpl
xlat
xor
and
test
push
dec
test
push
mov
test
xlat
out
push
lea
fbld
fwait
push
push
das
out
ja
sub
xor
mov
daa
add
int
sub
mov
xchg
sub
shl
add
roll
mov
and
push
fimuls
test
and
test
cmp
mov
cltd
jae
xor
pop
or
sub
mov
adc
jo
lcall
jb
shrb
lods
jl
xor
fnstenv
outsb
xchg
xor
dec
jge
sbb
les
push
adc
cmp
xlat
test
nop
sub
aaa
inc
out
iret
popf
clc
mov
inc
cmc
pop
ja
jl
add
push
xchg
xlat
out
loop
mov
aas
sub
or
imul
inc
jmp
xor
dec
or
dec
jbe
es
mul
int3
hlt
mov
int3
movsl
xchg
add
lds
mov
jb
mov
push
push
sub
loope
and
ja
lret
inc
dec
push
adc
mov
jge
jo
int3
jbe
pop
stos
or
cmp
xchg
push
loop
xchg
test
sbb
test
stc
lahf
dec
fbstp
push
mov
stc
push
cli
ss
add
push
push
inc
ss
outsb
and
cmpb
sbb
sarb
aad
fst
adc
mov
arpl
stos
repnz
ss
or
mov
lahf
dec
push
pop
cmp
push
into
aas
shlb
mov
lea
mov
push
mov
out
and
popf
movsl
and
testl
and
inc
mov
dec
jb
je
and
dec
cmp
add
loopne
movsb
cmp
loopne
je
sbb
dec
inc
sub
inc
repnz
ss
lahf
push
dec
bound
dec
shll
lret
mov
fcmove
out
inc
and
push
sbb
xlat
xor
fmuls
fdivl
shll
pop
dec
loop
and
das
fs
std
imul
pop
cld
mov
fcoms
ljmp
adc
cltd
push
divl
stos
mov
push
bound
sahf
cmp
jmp
out
lret
addl
pop
fiadds
adc
or
dec
rorb
fadd
jae
adc
call
sbb
inc
popf
test
mov
shr
xor
out
mov
add
stos
mov
or
mull
loope
jb
lods
or
and
lret
add
lods
and
int
xchg
add
pop
mov
movsl
sbb
ret
nop
out
loope
lret
das
push
adc
outsb
push
cmp
jns
repz
in
jno
sub
cmp
sbb
stos
cmp
add
xchg
out
or
ret
popa
jecxz
and
dec
cwtl
pop
enter
movsl
cwtl
dec
inc
mov
mov
out
add
xor
add
xor
movsb
aad
xor
pop
xor
pop
mov
xchg
ss
add
faddl
mov
jns
stos
loopne
inc
pushf
jecxz
cmp
xor
mov
jnp
fdivr
and
xor
cs
cmp
and
sbb
or
bound
sub
xor
xchg
sub
mov
ljmp
adc
stc
lock
cmp
cmp
jns
pushf
testl
pop
icebp
mov
cmp
dec
test
mov
xor
sbb
sarb
pop
movb
xchg
sub
enter
aaa
jl
jo
lds
sbb
sahf
mov
repnz
in
inc
adc
loop
sti
call
xor
or
jg
jae
inc
xor
in
jns
xchg
adc
inc
jp
push
xlat
out
xchg
mov
sbb
cmp
in
cmc
paddq
pop
push
movsb
aaa
push
cmp
jne
clc
pusha
negl
adc
or
xor
es
or
and
sbb
stos
or
jmp
lret
inc
adc
in
in
inc
in
mov
and
lods
lahf
or
imul
add
adc
rolb
xor
sub
test
cli
test
sub
mov
and
bound
cli
es
jnp
imul
popa
sbb
cmp
sbb
mov
mov
and
push
and
xor
faddl
test
cmp
jb
mov
enter
cli
ja
push
in
push
ja
pop
mov
fsubr
mov
scas
sbb
push
mov
add
cmp
fistl
sub
gs
add
mov
add
cmp
mov
push
pop
in
dec
mov
sbb
lret
test
lock
adc
jne
in
xchg
std
test
ljmp
sub
das
in
sbb
bound
and
not
and
xor
xor
cmp
push
sub
adc
lods
or
xlat
mov
mov
xor
mov
hlt
subl
enter
mov
xchg
and
fisttpl
pop
sbb
stos
and
add
xchg
ss
jmp
aaa
adc
sar
sub
fldt
ja
ljmp
in
jmp
ffreep
and
gs
stos
mov
add
lret
mov
stc
test
lods
ss
out
pop
mov
jg
jno
std
dec
sub
mov
stos
mov
insl
lret
lret
fs
push
add
movsb
and
mov
dec
arpl
mov
mov
lret
filds
mov
mov
mull
mov
arpl
inc
xchg
mov
mov
dec
pop
add
ror
idivl
or
aaa
insl
jge
daa
cmpsl
push
xor
xlat
and
cwtl
ljmp
lea
push
mov
add
mov
fidivl
or
enter
mov
outsl
mov
flds
add
adc
mov
or
in
mov
fistpll
ja
negl
sbb
mov
loop
lahf
sub
cld
lock
divb
mov
inc
in
push
add
ljmp
sub
repz
or
mov
cli
sub
cltd
stc
mov
add
call
xor
dec
mov
popf
jle
cwtl
mov
and
dec
dec
jb
or
loop
mov
lea
sti
scas
jne
arpl
movsl
add
xlat
stos
cmc
aaa
lret
gs
nop
icebp
sub
push
aad
icebp
imul
xlat
or
dec
xor
jno
movsl
jle
in
cmp
aaa
rorl
sub
nopl
aas
push
xchg
push
je
jmp
fsubs
add
rcrl
jno
out
fadds
xchg
or
enter
sub
jg
mov
lock
lods
cmp
into
add
push
sbb
dec
pop
cmp
int
jbe
test
dec
imul
aam
push
jge
imul
xor
mov
adc
enter
popa
cmpsl
shrl
dec
or
enter
cwtl
push
xchg
add
fbld
sbb
arpl
sbb
sti
fidivrl
insl
push
push
std
cmc
jnp
xor
dec
cmpsb
call
mull
pextrw
icebp
pop
lods
aas
sub
push
outsl
mov
cmpsb
dec
xorb
rorb
sbb
addr16
cmp
adc
mov
arpl
fstpl
push
sub
adc
addr16
psubw
xor
lock
cmp
outsb
pop
icebp
or
lret
mov
addr16
jecxz
sub
add
ss
push
subb
in
orl
push
xchg
adc
fnstcw
dec
fwait
shlb
mov
xchg
roll
jbe
mov
iret
pop
mov
test
pop
mov
js
in
in
outsl
add
imul
imul
and
ffree
imul
sbb
int3
pusha
lea
push
mov
repnz
rol
mov
les
add
and
cwtl
cmp
push
mov
pop
lahf
in
sub
leave
movsb
adc
insb
lcall
xchg
sarl
push
and
jae
adc
inc
gs
adc
daa
mov
js
add
push
xchg
lods
test
movsb
shll
pusha
xor
lea
xor
and
ss
xor
cwtl
imul
jge
push
fidivrs
pop
xor
cmp
test
fcoms
test
in
pop
repnz
int3
xlat
fdivrl
test
lret
stc
leave
or
test
pop
insb
mov
data16
loopne
jg
add
sub
cmp
int
aaa
cmp
rclb
sub
out
cmp
aas
sbb
enter
cmp
lods
stc
ja
xor
cmp
mov
cmpb
sbb
cmc
cs
jp
data16
popa
iret
mov
lods
out
je
adc
std
rclb
clc
pop
push
push
pop
popf
mov
push
movsb
push
inc
in
cmpsb
xor
adcb
jle
push
addr16
mov
int3
ss
cmpsb
dec
mov
fwait
pop
jle
xchg
mov
stos
jo
and
mov
ljmp
add
jg
syscall
lahf
adc
imul
xchg
in
jne
ret
mov
lds
mov
lods
loope
imul
cld
or
test
inc
xor
dec
insb
loope
aam
or
push
jmp
stos
mov
jnp
xor
push
adc
dec
push
nop
jae
mov
jnp
mov
aas
imul
or
scas
xorb
xchg
aaa
scas
sub
jne
cmp
bound
rorb
push
iret
mov
mov
pusha
xor
loope
cvtdq2ps
rcll
imul
inc
add
add
pushf
inc
jnp
mov
lret
jle
stos
push
add
mov
imul
push
lods
xor
std
test
roll
and
scas
push
fst
or
add
inc
xlat
mov
loope
cmc
lret
and
xchg
ja
jmp
out
adc
cld
push
test
in
ret
adc
test
icebp
lahf
aas
data16
enter
aad
dec
bnd
mov
push
pushf
dec
mov
inc
cwtl
lds
movsl
lods
shlb
outsl
aad
and
ret
push
dec
sub
jl
sbb
dec
sbb
xor
bound
int3
pop
jp
movl
enter
stos
shlb
xlat
push
dec
dec
js
clc
mov
pop
xchg
scas
mov
pop
fildl
scas
les
fwait
lock
inc
int3
loopne
arpl
inc
sbb
lock
or
scas
aad
xchg
dec
adc
aad
pop
orl
pop
dec
jbe
or
in
or
cmc
fcomp
test
or
out
inc
xor
sub
push
pop
push
adc
shrl
loope
test
xor
cld
aas
inc
repz
arpl
lods
xchg
movsl
fwait
fwait
int3
lods
xor
cmp
sti
loopne
fldl
mov
and
pop
fidivrs
mov
add
subl
jno
shlb
and
mov
sub
pushf
adc
lahf
je
repz
and
xor
sbb
dec
in
int3
insl
imul
cwtl
pop
jnp
mov
outsl
xor
lahf
dec
ljmp
test
add
mov
adc
loop
mov
out
pop
mov
sbbl
stos
ds
int3
jo
jmp
decb
int
push
or
mov
movsb
test
add
sti
in
push
xor
bnd
add
sub
mov
pop
xchg
adc
cmp
jge
inc
sbb
aad
dec
add
outsb
aam
loope
xor
and
jns
cmpsl
test
jmp
sub
daa
hlt
daa
outsb
shl
jl
mov
sub
xchg
lret
cmp
daa
cld
adc
loope
pop
cltd
jecxz
pop
out
in
pop
inc
addr16
jl
mov
jg
mov
mov
scas
xor
dec
icebp
dec
lds
adc
mov
pop
xchg
add
push
cmp
xchg
in
enter
and
xor
sahf
or
xor
dec
idivl
add
xchg
jmp
mov
cli
loope
inc
and
addr16
ret
cmc
inc
les
lock
ret
sti
call
and
xor
jbe
notl
cmp
popf
popa
flds
push
popf
int
test
push
aad
xor
add
push
xor
xor
mov
fdivrs
push
sti
scas
or
lock
out
insb
loopne
sbb
sbb
in
aaa
in
movsb
in
outsl
cmp
jo
adc
pop
sub
add
call
jmp
cmp
xchg
pop
xchg
fcmovnb
lods
inc
inc
fisubs
mov
stos
pop
cmpsl
push
pop
xor
fisttps
mov
push
es
xchg
das
adc
aaa
ss
out
cmp
jne
xor
fadd
jbe,pn
sbb
aaa
ss
cwtl
sbb
xor
pop
xor
or
push
push
sub
outsl
mull
xchg
lea
and
testl
cmpsb
fdivs
cmp
je
sbb
mov
dec
lahf
jbe
inc
sbb
pop
sbb
clc
cmp
mov
insl
rorb
cmp
xor
out
push
sbb
fimull
sbb
xabort
and
sbb
jnp
or
mov
push
xchg
rorl
jmp
xor
cmp
push
loop
test
xchg
sub
das
jb
mov
mov
setb
add
in
push
mov
ud2
push
add
pop
in
vmaskmovdqu
shl
mov
lret
and
mov
stos
mov
aas
test
adc
sbb
popa
xchg
sbb
rorl
or
mov
inc
mov
mov
inc
or
adc
add
test
aad
stos
xchg
ja
and
push
inc
dec
push
pop
dec
mov
and
adc
in
call
xchg
pop
fs
xlat
adc
loope
aas
shll
and
pushf
push
xchg
sar
sbb
daa
fistl
add
sti
xchg
add
ret
out
and
sbb
pop
xchg
fistpl
ljmp
inc
xchg
stc
xor
fs
pop
mov
mov
xchg
imul
xchg
push
xor
push
mov
mov
xlat
adc
xor
cmpsb
enter
pop
and
stos
je
and
out
xor
inc
lahf
adc
jns
loopnew
pop
movsl
enter
push
jne
xchg
push
cmp
cmp
pop
cmpsb
filds
cs
test
dec
or
pop
test
and
and
in
or
mov
push
lahf
mov
or
add
mov
movsl
mov
mov
jp,pt
mov
es
lods
imul
sub
push
mov
das
and
dec
or
pop
inc
dec
xchg
in
inc
mov
inc
push
sbb
shrl
sti
xor
or
aaa
pop
dec
mov
jo
push
loop
pop
pop
sahf
cmp
add
test
incb
mov
sub
in
adcb
add
push
inc
jecxz
add
pushf
inc
loopew,pt
gs
cmp
inc
mov
call
sbb
repz
add
sub
push
xchg
add
clc
sub
popf
pusha
into
fildll
cmp
scas
inc
pop
sbb
fwait
xchg
jnp
int3
movsl
mov
inc
and
pop
mov
arpl
inc
ja
decl
mov
xchg
or
jp
inc
outsl
lret
cmp
pushfw
cmp
push
push
xchg
jp
lret
push
lret
jl
mov
mov
jle
mov
add
mov
push
scas
add
and
fists
int3
ficoms
push
popf
or
and
clc
ja
in
aam
inc
mov
ja
mov
sbb
inc
dec
test
int
jmp
mov
cmp
pop
adc
adc
jle
mov
inc
int
test
xchg
xor
xchg
aaa
jp
mov
into
data16
rorb
fidivrl
jl
arpl
jns
pushf
shlb
js
adc
xor
add
mov
sti
cmp
add
repnz
repnz
adc
mov
jno
mov
outsb
repnz
sub
sub
xchg
mov
adc
pop
push
jnp
lret
test
lods
inc
mov
sbb
cmp
jne
cmp
cmp
les
mov
data16
push
lods
cmp
lods
lock
test
push
lret
fcomi
pop
aad
les
sub
cmc
xor
pop
fxch
xchg
pushf
pop
cmp
repnz
fcompl
sub
jns
inc
add
add
push
mov
loop
mov
mov
jl
cwtl
sbb
test
pop
sahf
testb
lret
rcrb
jge
sbb
mov
sub
ror
test
dec
test
sbb
mov
jne
lods
push
js
and
out
pushf
movsb
orb
vunpckhpd
push
out
mov
push
test
adc
jmp
xor
add
push
adc
cmc
dec
or
dec
mov
mov
fldt
iret
dec
shll
sub
ss
test
sbb
in
jle
pop
clc
iret
and
das
adc
or
and
ss
mov
out
rclb
mov
fidivl
jp
ja
jle
cwtl
out
test
bound
mov
pop
xor
imul
jl
push
clc
push
inc
jecxz
mov
sub
aad
mov
divb
adc
iret
mov
shlb
pushf
popa
js
cmpsb
adc
and
test
or
loop
jg
clc
fidivl
insl
shrb
fildll
mov
aad
inc
mov
bound
shll
or
jae
pop
addr16
push
xlat
das
mov
xor
fnstcw
inc
add
stc
xchg
jge
adc
pop
pop
pop
add
std
sbb
mov
stc
mov
push
das
xor
stos
push
and
push
and
int
scas
daa
or
add
mov
sbb
sub
ja
push
mov
out
xor
inc
mov
rolb
mov
out
adc
dec
divl
inc
push
add
dec
outsl
mov
cli
jecxz
in
pop
scas
loop
cli
ja
mov
mov
mov
xor
sbb
fwait
mov
sbb
xchg
or
sti
xor
push
xor
pop
aas
scas
arpl
test
xor
scas
stos
pushf
cli
dec
cli
xor
adc
sbb
add
daa
push
push
jae
lods
xlat
pop
dec
popf
pop
pop
jne
jg
xchg
daa
jne
shr
bound
ret
mov
pop
add
and
xchg
outsl
pusha
add
mov
jns
sub
push
and
ret
dec
fcompl
add
jle
sbb
lahf
arpl
dec
mov
cs
inc
aam
adc
lods
sub
stos
fisubrl
nop
leave
fdivrs
les
push
jno
adc
ja
loop
sub
pusha
cmpsl
scas
jle
inc
xchg
into
xchg
mov
jle
rolb
sub
js
scas
repz
mov
testl
push
mov
add
xchg
popf
cltd
xor
outsb
push
ss
mov
mov
xor
xchg
lahf
cltd
and
sbb
mov
jo
jmp
idivb
insb
test
jecxz
mov
pushf
xchg
fcmovu
imulb
sub
mov
jle
lds
aam
and
rcll
fs
popa
dec
popa
adc
shlb
mov
data16
cmpsb
data16
lea
xchg
mov
mov
push
add
lret
faddp
addr16
aas
push
ret
movsl
mov
popa
cmp
xlat
stos
hlt
xor
mov
sub
xor
xor
cmp
je
mov
test
jbe
leave
xlat
pop
push
mov
sbb
pop
shr
loop
inc
pop
in
sahf
stos
mov
in
lret
mov
in
fnsave
shlb
inc
rcrb
int
and
sub
xchg
mov
out
and
icebp
in
sbb
mov
fildll
adc
sub
stos
sbbb
fcomip
adc
loop
inc
cmp
pop
sub
and
mov
dec
sbb
roll
cmp
sub
xchg
adc
sub
scas
push
and
cs
cmc
mov
mov
test
es
outsb
sub
mov
sub
sbb
call
dec
insb
rclb
shl
pop
sbb
and
inc
cwtl
xor
add
aas
leave
xchg
ds
jns
imul
ret
and
in
scas
or
aad
xor
loop
push
mov
cmp
push
adc
popf
and
insb
sbb
stc
into
test
cmp
push
jnp
and
loope
cltd
pop
test
lds
push
jnp
mov
clc
iret
ljmp
xor
dec
sbb
fwait
shl
or
jo
jl
push
push
dec
data16
arpl
sahf
fisubrs
and
outsb
sbb
popf
sti
lock
mov
dec
xchg
pop
push
inc
lds
cmp
testl
pushf
lods
push
jge
adc
lahf
lea
cwtl
fdivrs
inc
dec
or
and
add
ret
je
xor
icebp
shll
mov
cwtl
div
ret
rolb
push
std
clc
sbb
and
mov
stc
loop
cmpsb
aaa
add
cmc
sar
add
inc
sahf
arpl
mov
sbb
test
pop
les
sar
mov
pop
mov
inc
xor
test
cmp
hlt
push
push
pop
enter
xchg
mov
cmp
jae
das
ss
add
sub
pop
lds
cmc
xchg
fadds
pop
lods
pop
arpl
inc
mov
loopne
lock
push
push
xor
out
addr16
jge
xchg
inc
jnp
das
xor
and
jl
add
lret
jmp
cli
gs
insl
xor
mov
mov
fnstcw
xchg
cmp
pop
into
sub
fldcw
neg
push
mov
faddp
call
jnp
mov
aaa
dec
fstpt
dec
sahf
mov
insb
in
xchg
cmpsb
loopne
pushf
pop
icebp
hlt
sub
cmovb
imul
xchg
sub
ret
scas
adc
push
ffree
sub
mov
cmp
mov
jmp
and
inc
cmp
out
inc
sbb
adc
cmp
test
aas
mov
add
push
icebp
fdivrs
sahf
mov
jg
int3
dec
cmp
les
mov
out
inc
adc
xor
push
lahf
sub
sub
cli
push
mov
jle
fmull
lods
sahf
push
cmp
mov
fsubrs
xchg
push
push
stc
frstor
and
sbb
in
mov
add
shll
imul
mov
popa
aas
sbbl
popf
or
mov
fdivrs
loop
xchg
add
rcrl
and
lock
idivb
fwait
sbb
je
cmp
daa
inc
xor
cmpsb
stc
in
dec
xchg
lret
mov
stc
jecxz
xlat
cmc
sub
jmp
mov
ret
jo
push
jb
xchg
and
push
in
shrl
push
mov
ljmp
xchg
sbb
inc
nop
loope
mov
push
out
sbb
lock
jb
test
es
mov
and
lds
pop
or
ja
jno
xor
sbb
pop
inc
cmc
jnp
mov
stos
mov
xchg
and
in
jge
jne
lret
fnstsw
ljmp
inc
jnp
shll
repz
xor
push
test
out
xor
mov
ss
sbb
jmp
xchg
jnp
dec
or
xchg
rclb
test
sbb
fwait
jno
lods
and
js
rolb
out
inc
pusha
sbb
shrl
sub
adc
pop
leave
inc
mov
subl
scas
pop
hlt
arpl
mov
jnp
ja
sub
imul
push
shrl
outsl
cmp
call
push
xor
jno
shlw
div
or
push
les
outsb
jp
stc
insb
lret
adc
scas
push
mov
inc
mov
jo
ljmp
lods
js
jne
jbe
xor
fscale
push
movsl
dec
and
xor
inc
das
mov
mov
adcl
in
test
sarl
jmp
ja
out
mov
mov
jg
push
jae
inc
jge
insl
push
lods
jb
xor
shlb
pop
fcmovne
add
xchg
jnp
lahf
clc
lods
call
pop
pop
out
or
daa
rol
lret
mov
jb
out
xlat
in
fldlg2
repnz
pusha
rcrl
pop
xor
mov
enter
loope
pop
mov
inc
jmp
jmp
clc
js
cmpsb
push
iret
xor
adc
push
pop
pop
ljmp
out
rorb
loope
ret
jp,pt
inc
xor
cmpsl
bound
push
mov
stos
cmp
cs
ffreep
inc
cmp
add
jno
divb
push
lds
xor
xchg
pop
scas
mov
test
out
push
fucomi
xchg
xchg
xor
sbb
or
cltd
clc
dec
add
mov
adc
out
imul
cli
cwtl
jmp
test
mov
xchg
mov
inc
stos
aaa
test
bswap
leave
or
arpl
stos
daa
cmp
lods
mov
ffreep
or
xlat
lods
rorl
dec
insb
lds
mov
aaa
lock
movb
frstpm(287
pop
jns
sbb
clc
insl
sbb
mov
adc
ljmp
inc
shrl
jbe
aas
insb
jmp
int3
in
lods
sbb
cltd
neg
adc
mov
xchg
push
int
mov
adc
loop
icebp
shlb
icebp
cli
xor
push
in
leave
ljmp
iret
outsl
js
adc
into
outsb
pushf
pop
xchg
inc
popf
sub
sub
insl
lea
int
rolb
inc
aad
leave
adc
mov
xchg
or
cmp
sub
pushf
push
sub
adc
jno
dec
mov
dec
fdiv
mov
ret
fldcw
inc
jmp
jae
xor
or
xor
test
mov
sub
sub
pushf
pop
test
insb
fucomip
sub
sub
push
outsb
inc
lods
add
outsl
push
out
cmp
repnz
fldt
inc
out
insl
cmpsb
gs
mov
jp
xlat
mov
mov
xor
or
pushf
xor
out
push
cmpl
filds
pop
mov
fadds
out
ret
and
enter
inc
test
pushf
xor
adc
add
lods
inc
pusha
mov
fiadds
inc
icebp
in
mov
ljmp
gs
leave
xor
sub
ficomps
mov
test
mov
out
xor
outsl
sub
jb
cmpl
fidivl
outsb
adc
mov
cmp
cmp
pop
arpl
sti
inc
adc
stos
in
test
push
fs
ss
dec
dec
mov
adc
testb
hlt
xor
jo
ss
mov
clc
mov
sub
in
inc
mov
jbe
push
cmp
pop
jp
imul
imul
mov
repz
dec
inc
pusha
pop
push
pop
adc
jnp
arpl
cmp
in
int
jne
cmp
lds
cmp
pop
inc
je
push
add
jae
popl
and
push
and
mov
sbb
outsl
stc
jp
sbb
aad
and
inc
dec
adc
shlb
test
push
inc
in
test
jl
mov
inc
stc
loope
xchg
repnz
mov
js
ret
push
stos
addr16
add
pop
pusha
inc
lods
jae
and
xlat
xchg
in
mov
cmovs
jae
idivl
pusha
lods
outsb
mov
in
lods
mov
fistps
inc
xchg
popf
popf
ss
lea
fsubs
mov
rcrl
cmp
es
inc
dec
arpl
imul
cmp
add
ss
mov
addr16
mov
jle
jo
cmp
ret
sti
addr16
jne
push
std
fstps
sbb
inc
nop
ss
lock
or
mulb
aas
loopne
into
movb
loop
sbb
leave
dec
xor
lahf
scas
push
clc
mov
mov
cmpsl
mov
test
add
sub
jbe
and
fnstcw
cli
fisttps
std
pop
loopne
mov
outsb
outsl
pop
mov
aad
lds
jmp
rorl
add
pop
mov
dec
pop
mov
cmp
rcrl
lods
aaa
mov
xor
call
lahf
inc
int3
fwait
std
xchg
lods
imul
cmp
pop
add
popa
repnz
hlt
lods
dec
cmc
sub
movsb
mov
loopne
lods
pop
sbb
sbb
sub
nop
movsb
jnp
aaa
mov
dec
push
jl
cmp
inc
repnz
pop
movsb
sbb
arpl
jmp
jle
enter
mov
in
dec
outsb
sbb
xor
repnz
sbb
int3
ret
in
and
dec
arpl
push
xor
adc
xlat
int
test
mov
arpl
and
and
mov
cmpsl
push
mov
aad
mov
pop
in
adc
push
loope
imul
cmp
fistl
fnsave
add
pusha
loope
sub
rcl
jle,pt
or
lea
sub
mov
std
sub
sbb
mov
shrb
in
test
cmp
dec
adc
rorl
push
mov
pop
mov
xchg
push
jne
cs
cmp
ss
shll
and
mov
pop
mov
test
push
sub
cmpl
test
jns
add
add
lods
das
loope
mov
or
mov
cli
xor
sub
dec
push
cmpsl
mov
cmc
sub
aad
xor
lcall
mov
pop
dec
mov
and
jnp
jecxz,pt
xor
lahf
es
cmc
jno
sub
sahf
xor
cmp
sti
adc
xchg
ss
dec
mov
cmpsl
and
adc
loopne
cmp
mov
shll
enter
rorb
pop
shlb
cli
add
dec
or
ret
shll
popf
pop
imul
xchg
pop
cli
notb
mov
test
adc
fists
inc
nop
shlb
aad
jbe
mov
inc
cmp
test
repnz
loopne
gs
dec
inc
divl
leave
jne
and
loopne
icebp
daa
cmp
nop
aas
sub
stos
iret
xor
or
dec
lahf
xchg
daa
ds
leave
pushf
cld
stc
cld
clc
mov
cmp
mov
je
dec
mov
loop
inc
test
cmp
adc
inc
ds
les
sbb
push
outsl
pushf
and
fimull
lods
jae
and
add
rcrl
int3
dec
inc
jmp
insb
jae
push
sbb
jae
inc
mov
cmp
nop
or
or
cld
mov
adc
fs
imul
in
push
cmp
out
or
push
xlat
movsb
sub
ds
add
negl
fstl
das
xchg
lret
xor
setge
or
xor
test
and
jg
leave
popa
pushf
cmp
add
mov
mov
jl
popf
leave
xor
andl
jle
xchg
fxch
ss
push
sahf
movsb
out
sbb
push
xlat
rclb
and
loop
xor
dec
mov
sub
xor
cmpsb
aad
xabort
inc
sbb
les
cld
xchg
clc
push
punpckhbw
jge
jae
or
inc
sub
cwtl
aam
mov
les
mul
sub
adc
std
xlat
jp
lods
xchg
lret
xchg
bound
xchg
mov
stc
add
mov
and
pop
in
pop
fisubs
das
mov
int
in
pop
daa
popf
jb
ds
adc
pop
cmp
scas
es
cmc
mov
sbb
fsubs
iret
popf
dec
mov
add
orl
stos
dec
xor
sbb
jnp
jmp
sub
fadds
jnp
aam
dec
ljmp
movsb
aaa
js
inc
cmp
lds
inc
in
data16
rol
sub
aaa
mov
sbb
jne
sbb
inc
cmp
pop
sbb
add
test
push
mov
jae
inc
das
out
inc
gs
repnz
jmp
inc
push
movsl
inc
sub
cmpsb
or
mov
aas
idivl
ret
pop
push
lahf
pop
leave
xchg
jns
rcll
scas
aam
les
or
stos
sbb
scas
pop
cmc
aad
mov
xor
in
mov
fwait
cmp
xchg
pop
add
inc
clc
dec
in
pop
sub
xchg
fs
push
xor
mov
mov
push
jne
dec
test
lahf
ret
add
sbb
pushf
pusha
insl
dec
aam
pop
aam
insb
mov
cltd
jae
fiaddl
stc
cmp
and
imulb
js
xchg
mov
cld
aad
out
jo
adc
adc
dec
cli
mov
push
cmp
mov
xor
es
ret
jb
nop
mov
mov
sub
fstpt
js
les
enter
sub
shll
into
mov
fsubl
mov
mov
idivb
xor
mov
inc
push
pop
jns
inc
push
insb
adc
lret
lock
fisttps
xor
push
ds
jp
dec
or
test
and
mov
xor
imul
stos
xor
jmp
fs
negb
push
aam
in
inc
xchg
and
or
xchg
hlt
nop
pop
fcomp
pop
and
lds
mov
mov
js
pop
movsb
sbb
daa
mov
mov
rcrb
adc
popf
cmpsb
mov
std
xchg
add
cmp
addl
dec
jecxz
push
or
jge
repnz
mov
jne
or
and
fadds
and
andb
shll
popf
fsubl
sbb
stos
repz
ret
jle
into
mov
mov
inc
push
cmpsb
sub
push
test
shlb
adc
insb
push
lea
cmp
repnz
imul
dec
dec
sbbl
fisubl
mov
out
test
dec
stc
inc
mov
inc
inc
cmp
and
inc
pop
mov
or
xor
clc
leave
jg
ljmp
rclb
clc
std
gs
mov
jle
fistl
out
cmp
jno
adc
adc
jle
jae
xor
ret
in
mov
psubsw
data16
leave
pop
dec
jne
push
mulb
movb
jmp
sub
jae
mov
push
xchg
pop
push
mov
jb
or
or
xor
push
mov
test
daa
dec
aam
aam
mov
inc
cmpsl
xchg
daa
movsl
mov
lahf
pushf
test
xchg
xor
jb
or
in
imulb
movsb
out
sub
jae
push
inc
xor
rcll
ret
or
jbe
jno
fimull
sbb
inc
adc
cmpb
das
lock
mov
dec
jmp
xor
inc
push
lret
les
xor
pushf
ret
sti
jp
mov
sbb
dec
adc
cmp
fs
imul
imul
fsincos
pop
xor
dec
dec
xchg
daa
jbe
into
enter
ja
mov
repnz
jb
sub
es
stc
mov
sbb
hlt
dec
shr
inc
sbb
sub
pop
jle
adc
movsb
add
jae
dec
mov
sbb
jnp
ret
push
daa
out
orb
lret
sbb
sbb
in
lcall
lods
jg
or
dec
inc
enter
frstor
sarl
jae
push
inc
push
arpl
ficoms
mov
pop
add
sbb
inc
popf
mov
sbb
into
int
rorl
dec
mov
lds
sub
clc
testl
ret
add
jbe
adc
pmaxsw
inc
adc
mov
jbe
add
jne
pop
jle
pop
repz
jl
xor
sbb
jl
push
inc
push
cmp
and
js
loopne
out
roll
mov
loopne
xor
enter
push
sub
dec
loope
adc
fisttpll
stos
inc
pop
xchg
jo
mulb
dec
jnp
sbb
mov
adc
and
addl
and
jle
pop
fs
mov
clc
cmpsl
cmp
dec
add
push
sbb
cmp
pop
orl
dec
ficomps
adc
pop
sbb
sti
pushf
xor
lret
push
sub
or
cltd
cld
movsb
test
adc
roll
ss
shlb
cmp
test
test
sbb
es
je
out
mov
mov
pop
jnp
sub
call
fcmovu
push
cmp
in
ret
fisubrs
push
sbb
fs
repz
mov
push
lods
mov
sbb
aaa
dec
repz
popa
jg
dec
in
ss
popf
fnsave
mov
movsb
popf
and
mov
ficompl
rolb
xchg
dec
pop
and
push
sbb
aas
adcl
push
andb
gs
pop
stos
aas
out
push
push
fwait
adc
aaa
or
pop
loop
andb
fmul
pop
rolb
pop
jg
push
xchg
sbb
mov
cwtl
negl
sbb
js
jle
cli
repnz
pop
xchg
fistps
icebp
and
lahf
or
inc
cmp
pop
iret
jmp
lock
fst
ficoms
xor
hlt
scas
in
jle
stos
pushf
cli
dec
adc
mov
mov
mov
cwtl
arpl
jmp
stos
call
sbb
sti
sahf
xchg
sub
out
sub
sub
add
mov
sbb
sahf
rorb
adc
pop
jp
jae
test
cmpsl
data16
ds
push
push
divl
lret
sub
in
jo
pop
mov
icebp
mov
test
mov
adc
add
subb
mov
out
mov
cmc
pop
inc
jecxz
ret
incb
icebp
das
scas
push
in
scas
and
int3
fisttpll
add
pop
xor
add
mov
or
sbb
repnz
test
cmpsb
or
mov
inc
cld
into
mov
xorb
into
sbb
mov
push
and
lret
inc
into
sub
mov
dec
inc
sub
mov
mov
mov
cmp
test
xor
xor
jg
icebp
dec
jmp
pushl
daa
push
aam
daa
mov
sub
sbb
mov
xchg
mov
jl
shlb
xor
jmp
mov
insl
in
push
ret
dec
sub
mov
stc
ds
jp
add
js
call
movups
dec
cwtl
sub
clc
inc
and
mov
mov
ds
mov
shl
lock
loop
pop
mov
pusha
mov
cmpb
daa
xlat
insb
xor
rorl
push
pop
ret
fstpl
adc
out
out
pop
jne
rclb
sti
mov
repnz
std
scas
out
bnd
adc
inc
decb
sub
dec
sti
jae
outsl
fadd
xchg
sub
jecxz
sub
test
cs
call
adc
loopne
adc
les
push
or
mov
pop
data16
pop
mov
ficompl
scas
aas
or
xchg
inc
stos
push
jle
ficompl
scas
cmp
xlat
mov
in
inc
jnp
ffree
push
cmpb
pop
into
push
jbe
jg
inc
dec
fstps
add
sbb
fbld
xchg
out
cmp
push
inc
mov
xor
or
inc
sub
pop
arpl
hlt
mov
lahf
jp
push
daa
cmp
cmp
mov
outsb
sub
xlat
push
pop
sarb
nop
push
cmp
fiadds
push
inc
sub
call
sub
fadds
sub
test
cmp
xchg
je
popa
inc
es
lahf
mov
leave
mov
push
mov
lcall
shll
jns
das
sahf
movsl
nop
lods
add
cmp
jle
mov
jb
xchg
inc
jbe
mov
or
xchg
movsl
xor
test
loop
mov
adc
push
mulb
jns
jmp
dec
adc
pushf
into
xchg
pop
adc
push
pusha
aas
xor
or
mov
mov
negl
insl
mov
into
pop
xchg
pop
stos
add
adc
mov
popf
add
cmp
xor
dec
mov
mov
fldt
stos
ror
inc
jg
pushf
cmpsb
jns
in
lock
sahf
jnp
push
in
cmp
les
xor
bound
lods
test
mov
insb
sbb
enter
scas
bound
es
pop
sub
push
push
mov
je
or
and
push
rcll
insl
xlat
ss
lea
movsb
xlat
divl
and
dec
xor
or
js
jns
mov
add
xchg
jno
push
mov
sbb
sahf
mulb
cmp
ds
adc
inc
sub
jge
pop
aas
rolb
jo
adc
cmp
rcrl
inc
ret
pusha
ret
subl
jne
pop
jecxz
insl
jmp
adc
loopne
mov
cwtl
shld
push
or
cwtl
mov
dec
xor
pop
push
jb
inc
jl
sub
adc
mov
xchg
les
gs
xchg
ret
lret
pop
sti
fsubl
push
das
mov
repnz
js
jp
aaa
mov
mov
sarl
into
lret
mov
sub
rcrb
sub
in
lret
sub
sbb
cld
xchg
add
cli
out
dec
mov
clc
lcall
in
adc
test
testb
sub
pop
jo
xchg
jnp
mov
sarb
sbb
ss
cltd
scas
fldcw
mov
notb
addr16
adc
ljmp
jns
pusha
jle
out
int3
dec
mov
lret
cmp
mov
mov
test
adc
pop
push
cmp
arpl
cld
xor
out
scas
ja
add
or
movsl
shl
jbe
aam
mov
jmp
xchg
push
stos
std
push
lret
jae
mov
and
dec
fwait
dec
and
movsl
idivl
shrb
aad
mov
icebp
or
adcb
outsl
cmp
or
imul
xchg
lret
rcrb
push
mov
bound
jno
mov
pusha
adc
add
push
lahf
movsb
pop
fcomp
lods
js
jnp
out
push
mov
jge
mov
cmp
add
insl
int3
fucomi
pop
les
push
push
enter
xor
jns
ljmp
mov
es
cmp
xchg
fcmovb
push
int3
dec
mov
cmp
inc
mov
mov
mov
enter
xchg
sbb
xor
lods
xor
mov
stos
mov
not
push
pop
mov
fiaddl
push
pop
pop
in
in
rcll
sbb
les
cmp
mov
sub
xchg
dec
outsl
xor
fnstsw
pop
xchg
pop
rol
push
adcb
mov
repz
xchg
jp
sub
dec
cltd
scas
push
dec
cmp
repnz
test
sbb
mov
push
adc
and
dec
pushf
push
xchg
js
jo
rcll
cmp
sub
inc
dec
aas
push
push
test
xchg
test
mov
or
scas
imul
sbb
ljmp
xchg
push
fwait
adc
insb
rclb
les
scas
mov
mov
sbb
cmpsb
dec
mov
ljmp
inc
adc
dec
test
xchg
in
add
out
xor
sub
push
das
or
pop
and
cmpsl
sbb
adc
icebp
and
scas
mov
das
adc
or
test
cmpsl
daa
xchg
mov
xchg
push
mov
popf
push
xor
clc
sbb
shll
or
sbb
and
sbb
and
xor
aad
jmp
lret
jb
mov
imul
popf
mov
dec
xlat
push
sub
pop
fistpl
int
and
out
dec
imul
icebp
cs
stc
adc
jno
and
mov
scas
jl
mov
mov
or
loop
gs
jmp
mov
stc
sub
call
jb
ja
mov
ret
lret
cmp
jns
xchg
mov
adc
sub
je
or
loop
and
dec
cmp
mov
adc
push
push
jecxz
push
lea
repnz
cmp
xor
inc
sbb
imul
xor
inc
jns
mov
push
in
pop
xchg
shl
push
and
xchg
call
inc
rep
clc
add
and
mov
test
out
mov
mov
popa
mov
out
mov
mov
or
push
inc
push
mov
or
imul
push
mov
int
js
jae
movsb
cld
mov
add
mov
mov
cld
sbb
cmp
push
dec
cli
sub
mov
addb
sahf
in
scas
push
jne
lods
sub
mov
mov
test
leave
decl
mov
adc
sahf
sbb
daa
in
notb
dec
sub
mov
sbb
stos
test
push
ss
test
mov
jo
out
mov
out
cmp
shrb
xorl
cltd
pusha
pop
mov
xor
pop
mov
mov
sti
int
cltd
cmp
mov
push
fisubrs
sbb
cmp
xor
lods
sti
sub
aas
loopne
dec
lret
in
fistpll
rorb
pop
testl
lock
ds
add
mov
mov
test
call
inc
adc
adc
cli
bound
push
add
je
sbb
push
mov
and
inc
int3
adc
daa
adc
adc
adc
dec
cmp
add
mov
stos
mov
loop
cmpsb
test
int
cmp
je
push
cmc
mov
pop
xor
popf
sarl
cmp
cmp
cmp
adc
ret
mov
fcoml
or
stc
mov
dec
mov
adc
andl
and
xchg
enter
dec
stos
xchg
adc
xor
pushf
incl
arpl
xor
sub
loopne
sub
push
pop
bnd
push
pushf
sbb
sbb
inc
mov
inc
shr
loopne
adc
xchg
cmp
popa
and
ja
push
std
dec
or
xor
jno
xchg
push
lea
mov
mov
std
cmpsl
mov
lcall
push
das
and
out
scas
push
dec
sub
pop
shl
xor
aad
or
inc
or
int3
scas
xchg
bound
lods
or
pop
pop
out
jmp
scas
pop
add
scas
pop
sub
sbb
les
lods
add
lcall
xor
cmp
xchg
and
or
push
insl
into
setae
pop
sbb
rcrb
mov
push
pushl
mov
je
xchg
inc
mov
imul
inc
xchg
cmpsl
mov
ljmp
mov
xor
arpl
cmpsb
out
loopne
mov
or
aaa
dec
int
push
inc
ret
in
sbb
jno
sbb
scas
adc
sbb
call
add
xlat
mov
into
mov
scas
pushf
shll
adc
push
mov
out
out
cmpsb
cmc
dec
mov
fstpl
jp
imul
mov
mov
test
mov
mov
int3
mov
lcall
add
das
fiadds
dec
pop
in
ljmp
push
push
scas
xor
adc
inc
push
inc
push
fldcw
dec
or
or
pop
aam
push
outsl
xchg
pop
lcall
popa
jecxz
jae
sub
adc
popf
popa
sbb
mov
test
popf
mov
dec
bound
xor
mov
mov
inc
mov
aas
lahf
sub
sti
ds
mov
adc
xchg
loopne
push
sub
cmpsl
xor
cld
movsb
je
movb
aas
lahf
jg
mov
push
sti
iret
or
imul
leave
test
adc
test
mov
mov
movsb
sbbb
stos
test
jecxz
add
jle
pushl
loopne
lret
mov
pop
push
or
pop
cmp
xlat
push
mov
mov
mov
and
and
std
out
mov
mov
mov
ljmp
and
jecxz
rclb
push
aaa
cwtl
cmp
sub
ljmp
loopne
aas
and
inc
lock
jge
add
and
test
stc
or
ror
push
rcrb
and
and
fists
int3
cmp
sbb
pop
loop
push
sbb
popf
pop
pop
sahf
xchg
xchg
icebp
mov
faddp
arpl
les
jmp
mov
lods
xor
cmp
aad
fisubrs
enter
dec
outsl
jns
mov
and
pop
cmpsb
push
jmp
lret
push
jae
adc
incl
cmpsl
repnz
inc
xchg
sbb
dec
adc
call
int3
add
add
aam
mov
dec
dec
dec
fcompl
jecxz
cmp
dec
mov
add
xor
faddp
arpl
pop
pushf
outsl
xlat
xlat
xor
lahf
add
jo
js
xor
hlt
fistps
test
mov
nop
xor
adc
sbb
xchg
je
rcll
test
sarb
loope
adc
int
adc
pop
cmp
out
hlt
cmp
push
mov
das
mov
sbb
xchg
push
mov
addb
outsb
scas
aad
xchg
and
je
mov
fisttps
sbb
aad
xchg
mov
sarl
cmc
out
int
sti
mov
leave
sub
insl
cmpsl
inc
inc
hlt
popl
out
lea
sbb
mov
ret
incl
neg
mov
mov
scas
adcb
sahf
inc
xchg
mov
adc
sti
call
mov
movsb
jge
movsb
mov
jb
cmp
mov
adc
outsl
mov
push
scas
test
fs
lret
mov
and
mov
inc
js
mov
mov
js
bound
and
sbb
mov
push
out
xor
jo
jbe
clc
and
rorb
aaa
and
mov
lock
flds
push
lcall
sub
sub
ss
imul
jbe
hlt
enter
popf
jo
xor
mov
cmp
test
jg
xor
in
jb
inc
decl
and
repz
outsb
jge
jnp
insb
mov
ss
sbb
fbld
movd
es
shlb
test
sub
out
fwait
jecxz
fcmovu
push
out
xorl
ljmp
pop
icebp
cmp
bound
lahf
inc
xchg
ds
pusha
fisttps
mov
mov
sub
xchg
loope
mov
outsb
cmp
daa
stos
inc
inc
jle
inc
mov
pop
outsl
clc
jns
or
jp
jns
dec
fwait
cmpsb
in
lea
push
pop
ja
rcll
stc
loop
and
or
scas
shrl
lds
mov
push
xchg
jnp
dec
add
fmull
xchg
inc
jecxz
mov
mov
xor
aas
test
adc
jnp
sub
in
push
aas
dec
cmpsb
fwait
xchg
je
setns
add
aad
fcomps
lock
or
jg
es
enter
lahf
xor
fisttps
sahf
pop
or
jl
hlt
mov
in
cli
push
and
pop
mov
je
sbbb
inc
shl
jnp
jns
rol
shll
ljmp
cmpsb
jns
test
repz
jl
adc
inc
mov
rcl
push
repnz
mov
jl
enter
cmpsl
push
dec
mov
or
add
mov
outsb
sub
fildl
adc
lcall
jae
lret
dec
add
pop
dec
sbb
lcall
dec
cmpsb
xchg
cltd
dec
enter
enter
movsb
int
jle
pop
mov
inc
sbb
sbb
scas
xor
js
sbb
dec
loope
rolb
js
jnp
xor
sbb
mov
cmp
jge
loope
jns
dec
xor
lods
mov
pop
fistps
or
adc
jp
xchg
fnstenv
sbb
or
stc
fdivs
addr16
pop
mov
and
scas
into
adc
lcall
fcomip
dec
jnp
add
int
mov
test
arpl
mov
movsl
jg
mov
and
xor
test
pop
cmp
pop
test
push
ficoml
adc
lds
loope
xor
sub
mov
jae
push
dec
in
lret
fs
push
lcall
iret
adc
call
mov
xchg
push
or
out
jge
push
sub
sti
jle
out
and
inc
mov
clc
scas
sub
clc
lahf
imul
push
lock
cmp
inc
push
ficoms
sub
mov
xchg
popa
xlat
sub
xchg
cmp
pusha
cvtps2pi
lret
js
repnz
push
jno
cltd
sub
jb
iret
out
xlat
xor
icebp
les
jl
cmpsb
inc
ja
out
dec
aam
aaa
in
sub
int3
aam
mov
cmpl
mov
pop
fists
fnstcw
ja
jb
inc
out
mov
shll
xor
xor
idivb
aas
in
and
xor
push
sbb
mov
enter
loope
fidivrs
into
sbb
adc
mov
lods
or
push
sbb
inc
int3
popa
push
jp
cwtl
imull
cmovg
dec
and
xor
xor
subb
push
das
cmp
push
or
pop
mov
gs
mov
mov
jnp
stos
gs
fstpt
cltd
pusha
shll
pop
mov
xchg
shrl
dec
sbb
stc
mov
adc
les
sbb
les
mov
mov
push
div
leave
aad
mov
dec
push
xor
movb
mov
push
jns
fdivr
stc
shr
dec
imul
fisubrl
xchg
fwait
fs
mov
stc
cmc
mov
push
rcll
cmc
je
mov
inc
rcrl
cmp
mov
dec
jns
cli
add
adc
mov
movsl
fldl
insl
les
dec
mov
jl
movsb
sti
in
sub
dec
bound
jg
clc
and
mov
cwtl
or
scas
mov
stc
push
cmp
ljmp
leave
das
in
fidivs
push
push
inc
adc
ljmp
loop
shrl
jns
sbb
pop
inc
add
pusha
popa
pop
cmp
jmp
leave
dec
mov
add
lea
mov
adc
xchg
int
les
xchg
and
mov
xor
mov
inc
movsb
xlat
lret
mov
adc
imul
mov
mov
xor
stc
jns
fildll
loope
test
fcmovnbe
sbb
sbbb
insl
and
cmp
pop
mov
mov
cmp
sahf
fs
jae
ret
mov
fs
mov
ret
push
xor
out
dec
xor
xchg
xchg
cmpsl
cmp
mov
mov
sub
out
sahf
into
scas
out
repz
cltd
jo
cmp
adc
negb
xchg
sbb
mov
lea
enter
add
xor
xchg
test
test
imul
shll
int3
sub
adcl
test
ds
fisubrl
shrl
push
ss
xor
and
test
jns
out
aas
xchg
testb
cmpsb
inc
cld
mov
aad
out
js
stos
fst
adc
mov
jns
popf
inc
adc
movsb
mov
scas
loope
adc
aas
push
ror
inc
jecxz
xlat
and
inc
jmp
pop
out
outsb
sbb
jb
jg
mov
mov
mov
push
push
push
fwait
push
test
repz
mov
lret
div
dec
and
cmc
push
add
inc
stos
and
mov
mov
inc
andnps
popa
cmp
mov
jne
addb
subb
inc
pop
mov
sar
mov
adc
xchg
xchg
mov
ljmp
mov
mov
hlt
adc
into
sti
sbb
push
dec
lcall
and
hlt
push
dec
xor
mov
mov
sub
lahf
and
xor
xchg
and
and
movsb
jb
insb
and
hlt
mov
and
jmp
cs
loope
dec
xor
mov
cmpsl
xlat
push
mov
and
cmpsl
jae
or
jg
add
mov
aas
push
pop
mov
sysexit
sbb
push
hlt
iret
or
leave
das
pop
dec
jno
lcall
mov
mov
jb
mov
mov
inc
outsl
in
das
cmp
cmpsl
xor
mov
insb
push
jnp
xor
fsubs
daa
xchg
push
in
xchg
xor
shrl
lcall
mov
outsl
dec
mov
sub
lods
aad
aas
mov
xor
cmp
jle
xlat
iret
dec
mov
shrl
cmp
je
cld
jns
pop
js
popa
lds
jnp
fisttps
sub
mov
sub
cmpsl
xor
xchg
push
les
mov
lock
rorb
jnp
inc
sub
mov
push
sub
fs
in
push
stc
addr16
and
icebp
nop
jge
and
sbb
pop
lock
pop
push
mov
mov
lock
xor
xchg
and
fcmovnbe
mov
outsl
push
orb
repz
int
pushf
mov
sbb
scas
push
nop
sbb
testb
adc
test
push
mov
adc
cmp
add
cmpsl
insb
repnz
dec
lock
sbb
mov
pop
rorb
xchg
in
loope
jmp
dec
add
outsb
inc
jbe
es
add
out
xchg
jnp
add
and
loope
mov
add
lahf
add
out
cmp
inc
ds
dec
mov
or
inc
shlb
cld
xchg
fwait
add
in
adc
scas
mov
jnp
lds
les
xor
jb
cmc
jbe
xor
clc
imull
call
pop
lret
pop
pop
pop
cmc
lea
ds
adc
mov
pop
xlat
aad
ret
in
loopne
inc
xchg
lret
cwtl
add
mov
lret
cmp
in
mov
test
and
jae
xchg
mov
jle
fcmovnu
ljmp
scas
andl
dec
mov
jne
mov
test
mov
lret
js
sti
js
fldt
out
lcall
rorb
jbe
std
rclb
cmpsl
sahf
imul
test
cld
ds
clc
jmp
jne
push
dec
mov
testb
mov
mov
gs
sahf
fistl
pop
lea
frstor
mov
repnz
leave
inc
out
dec
rorb
mov
test
clc
dec
lods
xor
or
mov
aas
inc
ret
lret
popa
push
or
fcomi
aas
pop
dec
and
idivb
adc
adc
jbe
cmc
or
mov
mov
xchg
mov
je
jmp
jbe
cmp
ss
test
ret
sbb
les
xchg
cmpl
and
cld
cmp
jnp
mov
mov
xchg
leave
mov
movsb
arpl
pop
mov
rclb
in
shll
outsb
fcmovne
cmp
stc
addr16
xchg
out
lahf
cmp
fnstsw
js
sbb
jne
iret
inc
sbb
popa
adc
jnp
mov
enter
and
mov
shlb
pop
pop
stos
in
mov
sbb
inc
xor
shr
inc
xor
lds
popa
xchg
jne
lahf
mov
dec
lcall
insl
mov
adc
and
test
fcomip
dec
push
insl
jnp
in
bound
pop
mov
inc
xchg
cmp
fcmovbe
jb
cmp
adc
lods
subl
insl
repz
add
cld
movsl
nop
scas
pushl
mov
addr16
divl
mov
xchg
movsl
in
fstl
faddl
adcl
sub
sbb
or
iret
fstps
divb
mov
pop
jle
push
mov
jns
movlhps
pop
mov
push
jmp
iret
add
mov
adc
jb
mov
bsr
imul
xchg
lods
lods
or
call
ds
xchg
dec
insl
cltd
push
jle
ss
ljmp
dec
jge
dec
jo
push
xchg
pop
add
mov
aam
cli
pop
xor
xchg
outsb
mov
adc
ljmp
sub
jae
sub
out
and
popa
inc
mov
test
add
addr16
cmp
rcrb
mov
inc
test
aam
sub
or
or
nop
stos
int3
insb
divb
sub
jns
push
daa
mov
bound
adcb
ret
notb
test
mov
and
lds
mov
cmpsl
jbe
in
xchg
xchg
orb
dec
shll
dec
pop
ret
imul
sub
popf
sahf
push
cmp
inc
jge
inc
jecxz
mov
bound
pop
out
stc
sub
pop
vsubsd
push
pop
mov
jg
mov
xchg
repnz
xor
popf
sbb
mov
cmpsb
cmc
arpl
cmpsl
shll
jg
adc
sbbb
sbb
lock
aam
fs
inc
test
call
fmuls
lcall
incb
mov
inc
sub
xor
aad
jbe
andb
push
call
sbb
and
in
mov
pop
popf
inc
mov
fs
test
cmp
cmp
cmp
sbb
mov
mov
dec
cli
fdivl
xor
cmc
xchg
sbb
inc
adc
out
inc
jnp
stos
bound
ss
in
out
dec
inc
lock
xchg
inc
or
jns
js
jo
test
mov
ret
ds
xor
icebp
push
fisubrs
mov
js
xor
push
inc
repz
push
enter
push
ret
and
jmp
aad
push
adc
push
fs
daa
mov
in
or
adc
ds
dec
add
inc
cli
mov
mov
add
push
loop
scas
dec
mov
push
out
dec
mov
xchg
add
xchg
xor
pop
xor
sub
ja
xorb
testl
jmp
push
pop
jns
out
xlat
xchg
xchg
data16
mov
stc
mull
cmc
push
inc
fcmovbe
lret
cwtl
adc
xor
in
xchg
adc
ret
add
push
sub
les
jg
cwtl
mov
mov
fs
pusha
inc
leave
stc
call
in
lods
rcl
cld
xchg
fldenv
push
scas
pop
pop
lcall
mov
daa
jge
and
mov
sub
sbb
cmp
in
push
scas
sbb
outsb
adc
sbb
popa
pushf
dec
adc
mov
das
cmp
insb
lea
xor
inc
negb
and
push
add
pop
fsubrs
mov
popf
ja
mov
insl
adc
pop
and
movsb
cmpsb
pop
repz
add
mov
sahf
dec
jns
mov
inc
cmc
ret
push
jmp
inc
hlt
and
mov
jb
outsl
arpl
push
movsb
mov
jmp
cmp
fistl
cli
lcall
xor
or
cmp
stc
test
dec
pop
or
mov
bound
lds
jle
mov
test
rol
sub
orb
xor
fstpl
and
iret
out
adcb
push
imul
scas
fistpll
xchg
popa
out
sarb
adc
sbb
mov
fwait
hlt
or
push
and
sub
dec
repz
hlt
out
push
sub
jnp
rolb
sub
inc
pusha
std
out
jno
test
into
lret
shlb
int3
les
jne
sbb
call
fisubrs
test
lret
out
dec
xor
cld
popa
xchg
mov
sbb
mov
cmp
andb
xor
mov
test
nop
scas
fnsave
push
ret
jbe
orl
test
ret
loopne
notl
adc
cmp
inc
inc
add
inc
out
loope
pop
cld
pop
bound
mov
ret
imul
mov
jge
xor
pop
cwtl
jg
sti
add
sub
sbbl
in
testb
insb
or
jb
imul
mov
sub
xchg
push
fs
fldcw
ficompl
lods
inc
movsl
and
fldenv
sbb
dec
cli
and
insb
mov
mov
lods
iret
notb
sub
and
pop
adc
clc
in
pusha
iret
sbb
data16
inc
mov
xor
mov
hlt
stos
out
ja
fisubrl
stos
aas
out
adc
cli
cmp
fld
mov
ljmp
mov
aad
fiaddl
and
test
jmp
xor
dec
cltd
jge
dec
cmp
inc
mov
inc
and
pop
add
and
sbb
or
test
jbe
fsub
xor
xchg
pop
stos
fs
sarb
cmp
sub
adc
pop
cwtl
hlt
sub
xchg
repnz
xor
arpl
lock
xor
adcb
pushf
pusha
mov
xor
stos
push
out
lahf
lahf
xchg
loopne
pop
inc
fisttpl
popf
aam
aam
jne
lret
inc
addl
jns
mov
ljmp
mov
mov
in
fchs
test
jae
push
je
outsl
pop
in
sahf
shrl
dec
pop
jge
push
add
clc
stos
fnstcw
jno
dec
push
dec
nop
psrld
jmp
outsb
test
push
in
ljmp
sub
inc
fs
pop
imul
cmp
mov
icebp
mov
push
mov
push
dec
lahf
pop
inc
repz
cwtl
adc
mov
jp
xor
adc
jns
into
push
push
test
cmp
cmpsb
cmc
push
aam
int
mov
mov
jns
stos
sbb
cmp
and
and
daa
xchg
das
jns
and
and
adc
push
cmpsb
xor
xor
nop
dec
negb
sbb
xorl
jmp
sbb
fisttpl
or
outsb
daa
add
adc
pop
sub
push
std
divl
xchg
add
loopne
add
jecxz
sbb
test
icebp
incb
xchg
shl
adc
push
out
mov
add
loope
inc
xor
aam
inc
test
lods
inc
int
push
insl
xchg
push
cld
popw
sbb
xchg
repz
lock
adc
aam
cmp
lods
xchg
or
xchg
mov
mov
jns
xor
je
and
bound
out
out
rcrl
hlt
jb
popf
fdivrl
cmp
push
cltd
aad
aad
lcall
addl
es
stc
aam
popf
movsb
add
push
data16
or
aaa
lock
cmpsl
loope
xor
push
jno
adc
mov
scas
push
inc
arpl
push
sub
mov
out
jae
iret
mov
inc
xchg
sbb
push
pop
dec
jb
inc
mov
cmp
popa
pop
and
sub
lods
jb
es
inc
cmp
std
rol
fbstp
push
popa
push
int
push
dec
sbb
imul
icebp
popf
cltd
movsl
xor
pop
idivl
mov
lret
shrl
orb
push
and
stos
mull
mov
cli
in
lret
or
inc
insb
dec
xor
push
xor
push
cmpl
mov
fs
sub
jmp
inc
adc
mov
dec
adc
mov
inc
inc
nop
push
rolb
sub
rol
and
repz
push
mov
push
aad
arpl
lret
add
insl
addb
movsb
cmp
xor
pushf
shll
jle
je
ss
cmp
mov
mov
divb
jl
or
loop
test
rclb
mov
test
cmp
push
or
stos
mov
mov
or
arpl
dec
mov
enter
cmpsl
or
ljmp
ss
nop
inc
lods
xchg
leave
je
icebp
int3
jb
popa
ljmp
scas
and
scas
xchg
test
adc
lods
xchg
pop
adc
push
xchg
loopne
push
pop
andb
and
gs
jb
sbb
pop
jl
add
and
mov
xchg
lcall
cmc
call
push
fs
les
push
rol
pop
or
int
jecxz
icebp
loop
out
std
adc
jae
xchg
xor
push
aad
push
cwtl
or
cld
adc
push
icebp
nop
pop
mov
mov
stos
sbb
sti
insl
and
and
cmp
cmp
aas
movsl
movsl
mov
pushf
ss
je
mov
mov
popf
fcmovbe
punpcklwd
or
xchg
add
jmp
lock
cli
lds
scas
repz
aaa
sub
imul
inc
jmp
mov
fidivrs
xchg
call
xor
setno
test
insl
jnp
jbe
adc
and
movsl
mov
in
fisubl
lock
mov
and
je
cs
pop
sub
sbb
stos
fcom
cltd
nop
adc
pop
rclb
loopne
xlat
rcrl
xchg
cmp
adc
repnz
mov
fs
push
inc
das
push
cmpsl
clc
and
add
in
xchg
fs
jecxz
outsb
dec
jp
jl
and
sti
hlt
jbe
clc
daa
push
cmp
xor
aaa
test
push
out
mov
and
xchg
adc
sub
push
cli
sti
dec
sbb
sbb
call
loope
test
in
mov
stos
add
sbb
push
mov
mov
adc
pop
or
lods
add
ja
testb
lret
les
pushf
data16
jb
out
dec
mov
clc
js
shrb
mov
inc
cmp
mov
pop
in
xchg
stc
das
pop
dec
js
mov
pop
cmovle
mov
jnp
inc
cmpsb
dec
int
dec
js
sub
push
or
sub
and
mulb
shlb
out
repnz
enter
mov
or
mov
lea
xchg
hlt
cmpsb
popf
cmp
into
lahf
pop
cs
shl
dec
insb
pop
and
scas
sbb
push
cmp
in
sub
data16
add
and
or
or
test
cmp
popa
mov
inc
push
lods
cmp
repz
mov
cmp
jg
loop
ret
inc
int3
adc
xor
sub
inc
in
mov
cmp
cmp
ffreep
rclb
and
add
pop
pushf
pop
xchg
mov
ja
inc
pusha
pop
imul
push
loop
inc
mov
or
or
movsl
es
jmp
and
popf
lea
xor
std
inc
sub
add
push
jb
out
mov
jae
in
ds
cmpb
les
jbe
jp
or
dec
cs
or
imull
sbb
adc
and
in
ss
imul
das
dec
sbb
lds
in
jns
cmp
shl
and
jo
ficomps
pop
stos
cmp
mov
in
mov
jns
inc
or
adc
call
add
and
int
fcmovb
xchg
pop
pop
add
xlat
aas
adc
inc
cli
adc
imul
xor
mov
jb
or
xchg
sub
inc
orl
into
js
lds
fcmovb
mov
addr16
push
inc
pop
sub
jle
jl
xchg
call
mov
lock
enter
jae
sbb
cmpsl
dec
decb
fistps
jmp
pop
cmp
adc
sbb
adcl
xchg
loop
mov
sbb
push
loop
cmp
div
cmc
stos
and
or
iret
popa
xchg
mov
adc
mov
jge
test
mov
jg
or
rclb
adc
shrl
dec
sar
popa
imul
inc
incl
in
cmp
lock
movsb
lcall
arpl
xchg
mov
cmp
xor
fs
shll
mov
cmpsb
inc
imul
and
mov
jb
fstl
xchg
hlt
adc
pop
cmpsb
xor
mov
fdecstp
not
roll
sbb
push
jp
pushf
aam
sub
pop
outsl
addb
xor
stos
sbb
popf
out
dec
ficoms
sub
je
fdiv
nop
arpl
mov
xchg
jp
pop
push
jns
or
mov
add
ljmp
add
enter
popf
dec
leave
out
push
mov
xor
sbb
fidivs
into
ja
inc
mov
sbb
mov
cmp
mov
and
aas
inc
call
inc
jg
movsl
les
dec
cli
push
js
in
inc
adc
rcrl
jle
loopne
push
lods
sub
hlt
inc
leave
es
sbb
das
mov
test
or
pop
insb
movsb
xor
inc
into
lret
aad
xlat
and
shrb
jecxz
xor
sti
jecxz
movl
cltd
rcll
jp
and
mov
iret
dec
inc
fnsave
mov
xchg
adc
iret
jns
test
mov
lcall
cmp
push
push
test
ljmp
stos
bnd
stos
leave
scas
pop
jbe
fsts
test
lahf
cli
push
push
cmpl
imul
xor
pop
mov
inc
xor
cmp
and
int
imul
dec
mov
add
or
mov
stos
inc
lea
pusha
aam
and
lods
xor
das
out
inc
aaa
clc
cmp
sbb
loope
daa
iret
push
pop
sbb
push
xchg
pop
movb
es
push
xor
loop
outsl
dec
xchg
jmp
xchg
sub
xchg
out
lahf
int
sub
or
leave
fidivl
dec
inc
aas
mov
popa
sub
and
add
ljmp
mov
daa
mov
lock
mov
cmp
je
fcmovne
lret
leave
jmp
out
cs
into
sti
adc
into
es
mov
push
ljmp
lret
push
inc
minps
inc
fiaddl
or
loop
cmp
call
adc
and
sub
sub
xor
xchg
pop
jmp
dec
cmp
xchg
inc
negb
jb
int
dec
and
add
and
add
sti
xlat
xchg
mov
jp
dec
or
je
out
mov
push
les
lea
sbb
out
inc
xor
stc
out
mov
out
add
dec
xor
decb
enter
lds
sbb
fstl
loope
jno
lds
xor
outsl
add
ret
das
lods
ret
lahf
jbe
adc
cli
cltd
inc
outsb
dec
rcl
push
push
lret
insl
pop
cmp
adc
and
cmp
sbb
loope
out
testl
ja
shll
fsubr
nop
xchg
jne
test
popa
jg
mov
mov
mov
or
add
cmp
jo
ljmp
int
push
pop
int
dec
leave
sub
lret
insb
add
nop
lods
pop
insl
sbb
and
and
add
fisubl
xor
mov
fnstsw
xor
repz
mov
fdivrl
shrl
rclb
in
mov
inc
clc
jl
and
add
cli
ja
or
in
cmp
testl
stc
adc
or
outsl
adc
out
fiadds
xchg
shll
mov
cwtl
and
imul
add
and
xor
pop
cmpb
movsb
pop
add
loope
aaa
jmp
jl
into
jns
mov
into
popa
and
aad
push
jo
sub
xlat
ds
mov
lret
push
sbb
push
xchg
mov
jbe
adc
xor
enter
in
das
push
xor
pop
add
in
mov
fnstcw
xor
sub
sahf
jle
lret
data16
repz
shr
sbb
xbegin
cmp
test
sbb
mov
stc
sub
sub
dec
pusha
push
lahf
scas
push
and
stos
mov
int
jp
sbb
jmp
addb
sbbb
insb
xchg
xchg
aad
je
sbb
stos
dec
movsb
shlb
and
push
xor
cmp
and
arpl
or
mov
data16
and
shl
cmp
mov
fmul
pop
lock
dec
xchg
push
sub
dec
cld
arpl
testl
and
mov
pop
add
call
fucomip
sub
iret
dec
sbb
ficoml
icebp
or
test
cmp
fnstsw
inc
add
aam
int
lods
cmp
movsl
hlt
stos
cmp
addr16
daa
scas
dec
and
lea
leave
cmp
and
ror
bound
bound
xor
nop
sarb
jbe
and
faddl
jae
std
push
outsb
es
adc
and
in
sub
in
mov
inc
pop
decl
mov
repnz
subl
mov
std
stos
int3
mov
cmp
pop
or
js
in
cmpsl
dec
aaa
outsb
pop
or
xchg
int
mov
fstpt
mov
and
mov
scas
in
scas
fnstcw
push
fwait
std
inc
push
mov
rcl
outsl
pop
rcrb
adc
es
mov
pushf
sahf
bound
sub
int
dec
or
leave
popa
mov
arpl
jne
or
pop
adc
aas
in
out
mov
jmp
insb
xor
pop
mov
ds
aam
dec
mov
ss
sti
push
and
int3
mov
ss
inc
push
mov
push
dec
mov
int
add
xorl
pop
mov
repz
push
shl
cmp
cmp
jae
and
adc
add
popf
push
popa
inc
out
push
cmp
push
inc
mov
ljmp
sti
pop
dec
and
jmp
pop
pop
xchg
cmp
jmp
adc
add
push
fucomp
inc
and
jno
or
push
xchg
cmp
and
xorb
jae
aad
imul
sti
test
test
loopne
cmp
arpl
neg
push
push
add
int3
js
sub
sbb
cmp
or
jns
pusha
add
push
lds
scas
aam
pop
das
sbb
dec
and
cmp
fdivl
push
fsubr
stc
sub
sub
cmp
data16
xchg
pop
into
repnz
xchg
insb
mov
iret
fbstp
inc
sub
mov
mov
dec
push
insb
ret
arpl
iret
jmp
push
mov
mov
repnz
jmp
sti
ror
xchg
push
cmp
adc
in
push
mov
clc
jb
ficoml
je
leave
into
lahf
mov
jmp
insb
push
arpl
pop
add
adc
cmp
pop
ror
cwtl
jg
lahf
jo
ror
orb
in
shlb
clc
outsl
cmp
in
inc
xchg
repnz
mov
xor
and
stc
dec
jb
loop
xchg
test
lds
add
or
mov
and
lods
mov
shll
mov
aad
addr16
mov
sub
in
sub
sbb
jmp
out
xchg
jmp
push
mov
out
push
daa
imul
lods
jno
fstl
in
jns
int
orl
sub
cmc
jge
loope
data16
out
shl
mov
lods
fnstsw
xor
testb
xchg
push
mov
lret
xor
or
mov
cld
out
adc
ja
pusha
mov
push
int3
lds
inc
pop
mov
sbb
ss
jmp
xor
xchg
push
and
xor
adc
sbb
rol
insb
inc
je
jmp
pop
cmp
cli
int3
push
sub
stc
aaa
movsl
jnp
lret
ljmp
pop
pushf
test
stos
sarb
add
enter
in
je
stos
in
push
es
fs
cwtl
push
enter
xchg
push
pop
fisttpll
add
or
mov
xchg
jmp
inc
clc
adc
arpl
mov
cmp
lahf
jns
test
pop
xchg
adc
dec
sbb
pop
lods
js
add
dec
xchg
popa
pop
bound
out
push
and
fldl
xor
add
jecxz
pop
sbb
je
clc
std
dec
daa
frstpm(287
xlat
push
popa
inc
or
push
pop
xchg
inc
adc
ljmp
add
sub
push
jo
xchg
xchg
jo
shl
or
jmp
das
outsl
in
xchg
push
test
jg
add
out
adc
and
lods
jae
mov
insl
out
add
int
sub
test
nop
push
mov
add
std
les
push
mov
inc
xor
and
sub
sbb
mov
rclb
mov
xor
and
cld
div
or
pop
adc
pop
jmp
fidivrl
icebp
jp
enter
movsb
cmp
dec
jle
iret
ror
rcrb
std
and
xor
mov
mov
and
dec
notb
out
mov
das
clc
scas
clc
push
mov
jns
std
pop
xor
adc
jl
out
push
enter
mov
repnz
push
inc
cmc
or
imul
arpl
add
xlat
mov
dec
xor
loope
cmpsl
dec
gs
cmpsb
iret
push
push
fs
dec
dec
shl
repz
xor
in
mov
jae
enter
push
mov
in
and
leave
xchg
sbb
cmpsb
ds
mov
pop
or
test
fistpl
push
xchg
jmp
pop
gs
je
rorb
cltd
adc
sbb
add
cmp
stos
ljmp
movsl
and
inc
int
dec
pop
in
addr16
mov
add
adc
add
pop
pop
adc
sub
fninit
pop
push
fldl
mov
push
aad
std
push
in
cmp
jo
add
xchg
test
clc
ret
mov
insl
sarl
sub
push
shl
gs
pop
inc
lea
fstpl
xor
xor
out
cli
and
push
clc
jmp
cmc
xchg
cmp
jmp
inc
or
addr16
fildl
clc
push
fmul
decl
dec
fpatan
pop
std
pop
test
nop
das
or
sbb
mov
cmp
sbb
cld
inc
repnz
aas
jl
or
sbb
sbb
loopne
ret
cmp
bound
and
add
inc
mov
inc
pushf
testb
dec
push
mov
ficoml
out
fcoms
jb
aam
mov
movb
std
mov
xor
sub
bound
enter
les
mov
and
fcomi
arpl
and
cmp
jo
inc
sar
shll
push
and
mov
call
inc
push
sub
push
pop
int
out
cmc
divl
pop
sbb
push
movsl
mov
addr16
mov
mov
out
lret
es
test
inc
mov
add
loopne
psrlw
push
es
jbe
jg
cmp
test
mov
jo
add
insb
mov
shl
xor
shr
mov
xchg
lock
xor
push
add
ljmp
push
cltd
push
sbb
mov
std
imul
or
cmpsb
xchg
xor
push
jnp
aam
xchg
sub
rorb
movsb
cmp
shrl
int3
adcl
leave
divb
pop
ljmp
cmp
jae
int3
jmp
or
cmc
mov
ds
jmp
bound
adc
ljmp
xchg
pushf
cld
xchg
loope
mov
inc
in
add
ljmp
mov
mov
xor
inc
sbb
fsubr
mov
or
shlb
aad
arpl
adcl
loope
push
lea
scas
jg
scas
scas
dec
fsts
fnstenv
test
mov
xor
push
out
sti
push
lea
jnp,pn
xor
iret
in
in
xchg
mov
xlat
xchg
cld
pop
cs
out
jmp
scas
mov
loope
jae
add
push
mov
imul
into
jle
cmpsb
push
sub
stc
push
sbb
push
jae
jmp
jle
mov
mov
in
mov
mov
lds
push
sbb
xchg
jmp
cmp
sarb
mov
mov
fwait
lahf
lds
pop
xorb
les
and
std
push
pop
or
dec
xchg
cmp
movsb
cmp
sub
mov
push
push
negl
iret
test
outsb
inc
out
movsb
cmp
rclb
iret
cmp
dec
clc
xor
push
dec
int
mov
xchg
lcall
hlt
mov
insb
mov
imul
movsb
ss
mov
dec
mov
icebp
repz
mov
adc
xchg
loope
and
ja
std
jmp
cmp
shr
out
jbe
in
cli
sub
mov
stos
cmc
or
in
adc
mov
push
push
add
mov
xor
outsb
pop
int3
fs
cmpsl
inc
mov
fildl
test
jae
stc
insl
aam
leave
fistpll
leave
mov
loopne
jge
gs
mov
fcoml
and
jecxz
xor
data16
test
mov
jb
mov
int3
inc
das
push
mov
cwtl
pmaxsw
lcall
std
jb
cmpb
dec
or
sbb
divb
ret
adc
and
or
xor
jbe
add
repnz
test
inc
cltd
lea
jb
xchg
test
or
pop
push
loope
shl
adc
arpl
shlb
outsl
add
in
jno
imul
xor
sbb
inc
ds
and
faddl
lock
sub
les
jns
cmp
xor
filds
cmc
in
inc
and
das
sbb
dec
inc
addr16
add
or
cmp
xchg
or
in
adc
or
scas
cmp
imul
mov
ljmp
xor
xchg
pop
cmp
out
inc
je
lret
mov
dec
adc
das
xor
push
test
ret
aad
aas
incl
xchg
inc
mov
nop
movsl
mov
add
xor
mov
push
or
and
ficoms
mov
out
inc
and
ljmp
mov
sub
and
shr
jbe,pn
sub
cmp
cmp
cmpsl
add
cmp
daa
lret
add
pop
stc
in
cmpsb
push
rcr
inc
daa
dec
or
dec
adc
cmpsl
mov
add
sbb
es
mov
test
pushf
scas
imul
push
jnp
jecxz
out
dec
fld
push
cmp
js
imul
dec
inc
int
inc
inc
outsb
fs
stos
jl
mov
int
dec
pop
add
mov
stos
adc
bound
xor
inc
rorb
inc
int3
enter
add
mov
mov
rcl
cmpsl
adc
lret
adcl
mov
std
jns
sub
dec
dec
lcall
jp
aad
push
ss
nop
adc
push
inc
lcall
int3
lahf
mov
xor
mov
les
test
imul
cmp
movsb
pop
ds
nop
hlt
in
sbb
push
or
xor
fdivrl
dec
pop
pop
mov
and
outsl
call
add
daa
mov
jle
rorl
test
pop
jo
pop
sub
pop
insl
fxch
pop
xchg
inc
cmpsb
pop
jae
arpl
jg
mov
jmp
and
in
pushf
and
sub
jb
add
cmp
xor
add
out
push
or
lods
cmp
inc
jmp
arpl
jl
sub
inc
dec
not
jg
or
add
pop
lahf
int
xchg
push
sub
pushf
stc
cmp
shlb
dec
in
push
jg
lods
push
xor
xchg
push
and
cmp
pop
push
and
cltd
ds
sub
mov
push
sbb
add
loop
shl
adc
imul
pop
mov
cmp
lret
loope
cs
inc
in
shll
scas
jg
insb
push
lea
sub
das
leave
push
inc
sub
add
pop
xchg
mov
mov
pushl
imull
xchg
pusha
cli
jo
sbb
dec
fisttps
ja
jnp
xchg
mov
adc
stc
addb
nop
lret
xchg
push
mov
add
es
cltd
sub
in
jb
sbb
leave
ljmp
sub
xchg
cmp
sbb
add
add
jno
cwtl
pop
cmpsb
leave
aaa
push
loope
outsl
xchg
dec
and
add
ret
ljmp
hlt
je
mov
filds
adc
in
into
ds
xchg
or
xor
xor
and
in
and
add
mov
mov
cmp
xchg
cmp
es
popa
ficomps
xchg
lock
sbbb
jno
pop
lret
mov
add
xchg
sti
cmp
jmp
movsl
jmp
mov
adc
xor
pop
push
or
xchg
cltd
mov
mov
in
push
into
in
fdivs
mov
jle,pt
mov
or
and
or
cwtl
jmp
push
loopne
aas
dec
jge
pop
mov
inc
push
push
push
dec
cmc
cld
or
xchg
sbb
insb
mov
pushf
pushf
aaa
icebp
sbb
popa
and
mov
aas
jne
or
mov
pop
xor
add
shrl
arpl
and
out
cli
sub
stos
push
movsl
fwait
ja
std
loope
cmp
arpl
fbld
mov
movsl
adc
mov
popa
jno
adc
fsubl
push
adc
dec
cmp
mov
popa
incb
gs
or
stos
cmp
push
sub
leave
aam
into
and
and
pop
jo
ret
notb
push
stos
pop
test
leave
arpl
mov
push
sbb
jo
or
mov
push
mov
fisubs
imul
or
ret
in
lcall
fisubrl
out
pop
xchg
popf
mov
notb
in
imul
pop
arpl
scas
adc
jbe
inc
jp
lock
mov
and
pop
jecxz
mov
mov
ret
jno
fwait
jnp
sub
movsb
adc
mov
pop
inc
xorl
adc
arpl
xor
cs
movsb
mov
fstpl
addr16
mov
xor
nop
das
mov
mov
jbe
jmp
xchg
adc
cwtl
sbb
roll
cmp
movsb
xor
test
adc
jl
rol
add
sbb
sub
sub
int
repz
jmp
cmpsl
jno
inc
inc
push
cmp
popf
out
jl
push
mov
sub
pushf
sbb
adc
add
and
add
xlat
or
add
imul
daa
mov
push
aad
add
movsb
pop
je
ret
lods
mov
test
out
and
iret
mov
ds
xchg
hlt
mov
pop
les
or
shufps
push
decb
sub
cmpb
jl
mov
mov
cmpsb
jl
sub
mov
stc
jmp
les
outsl
dec
mov
inc
push
test
insl
cmp
cltd
cmp
icebp
in
push
enter
ret
pop
push
push
jg
and
jge
xor
xor
enter
lcall
jns
cmp
test
psubw
adc
inc
pop
mov
dec
in
js
fistl
gs
adc
mov
pop
or
adc
rolb
or
sbb
adc
sbb
push
clc
sub
popl
mov
adc
xchg
adc
inc
cmpsb
cmp
sub
mov
arpl
pop
sub
cmp
sub
fldcw
lds
rcll
xchg
mov
jmp
and
shlb
dec
arpl
lods
enter
and
repz
in
bound
into
mov
xchg
xchg
test
fnstcw
jl
jmp
xor
push
xor
ja
and
cli
arpl
mov
push
jge
jb
sbb
shlb
and
sbb
call
subl
arpl
jmp
adc
xchg
and
mov
mov
rcrb
sub
push
or
mov
js
in
xchg
outsb
hlt
xchg
loope
inc
xor
mov
jle
les
ret
add
popf
push
cmp
sub
inc
popa
sbb
push
mov
sahf
aad
subl
cmpsl
bound
rcl
xchg
lods
sub
das
clc
dec
loopne
pop
lds
sbb
andb
insl
and
daa
sub
call
aaa
sub
jp
jo
insb
ror
push
test
and
lods
mov
pop
out
les
mov
or
cmp
nop
or
pop
dec
das
mov
in
inc
mov
fs
pop
jns
cmpsl
hlt
fldenv
jmp
aad
cmpxchg
popf
adc
and
xchg
mulb
std
pop
es
out
xchg
pop
call
gs
faddp
xchg
out
xchg
jno
repz
je
stos
mov
sbb
outsl
popa
cmpsl
and
daa
sub
or
xlat
fldl
adc
movsl
fisubrs
adc
leave
inc
jbe
sbb
inc
sarb
or
stos
fdiv
sub
adc
rcrl
or
xchg
mov
inc
lcall
jmp
cltd
gs
in
sbb
leave
cmpl
insb
jne
push
push
scas
dec
in
jae
int3
cmp
push
dec
fnstsw
dec
cli
adc
xor
push
sahf
mov
fwait
jmp
notl
lods
aad
push
pop
filds
clc
test
aad
pop
lea
cli
push
loopne
frstor
add
les
iret
pop
xchg
jo
scas
mov
cli
pop
sahf
ja
mov
stos
mov
inc
push
xchg
sub
lret
inc
mov
jb
sbb
sub
ja
ds
pop
and
push
insb
jb
ret
inc
mov
and
jecxz
dec
sub
jp
xor
pushl
push
mov
adc
and
add
fs
fcmovne
mov
fisubl
jbe
es
push
jmp
cmp
dec
mov
les
mov
repz
xor
les
xor
loop
mov
push
add
xchg
popf
fstps
popl
pusha
mov
pop
pop
inc
push
xlat
jecxz
pop
cmc
insb
mov
push
xor
mov
insl
fcomps
mov
lret
dec
inc
sub
inc
out
stc
xor
jno
and
and
jo
movsb
and
pop
adc
mov
imul
sarb
mov
loopne
lods
cmp
adc
imul
xchg
popw
mov
test
push
sub
std
push
xor
icebp
jp
push
mov
jo
adc
fisubs
cmp
push
lods
pushf
sub
outsl
loopne
aaa
cltd
or
insl
mov
xchg
jns
fldl
bound
add
sub
adc
cmp
jl
ds
insb
les
test
clc
dec
mov
negl
test
repz
mov
movsl
movsl
inc
cmp
sub
leave
xchg
in
cmp
adc
cmpb
xchg
fldt
andl
movsb
pop
jne
jle
mov
movsl
push
je
fidivrs
mov
inc
loope
movsl
jb
push
imul
push
and
cmp
rorl
fsubs
and
pop
test
mov
out
mov
repz
push
adc
stos
rolw
and
add
push
shl
or
lret
inc
mov
dec
jns
pop
push
testl
xor
divb
movsl
push
add
sub
jecxz
fwait
cmpxchg
xchg
pop
cld
dec
inc
mov
divl
xlat
add
inc
add
mov
setg
addr16
test
mov
pop
inc
pop
xchg
in
and
neg
dec
fld
dec
and
or
dec
and
jns
sub
xchg
lds
mov
mov
sub
mov
ret
push
jae
repnz
jl
lret
mov
sub
hlt
loope
shll
es
pop
push
notl
mov
icebp
cmpsb
jne
jmp
pusha
xchg
stc
mov
cmp
lahf
lock
sub
repnz
mov
pop
mov
testl
test
jg
jle
das
orl
aam
cwtl
ficomps
rclb
add
mov
xchg
loop
mov
sahf
jg
lret
sbb
sub
lahf
jo
loop
dec
jecxz
push
xchg
mov
push
aaa
in
xchg
pop
inc
test
jno
fisttps
leave
daa
cs
das
repz
mov
pushf
sub
mov
lock
aam
sbb
aam
cmpsl
in
mov
es
pop
bound
test
and
adc
lods
push
pop
je
and
sub
fidivrl
sub
fbstp
and
test
in
jo
aad
jno
push
roll
xor
sub
outsb
mov
sbb
and
jno
mov
xchg
push
nop
dec
adc
xchg
imul
and
insl
xorb
cmp
xchg
mov
mov
cwtl
xchg
test
int
push
push
sub
cmp
push
loope
mov
pop
and
sub
call
push
inc
in
cmp
fcompl
xchg
or
popf
mov
shl
cs
dec
lret
pop
push
outsl
test
fwait
out
or
int
fisubs
lock
push
scas
cmpsl
jae
cmp
ficomps
jae
outsl
mov
scas
sub
adc
inc
push
xor
stos
jbe
push
push
lcall
popf
pop
out
cwtl
cli
mov
ret
rol
inc
frstor
ret
int
fidivrs
cld
bound
icebp
loope
rcr
jae
xlat
popa
ret
add
inc
pop
jmp
data16
dec
or
repnz
cmpsl
mov
pop
sbb
dec
flds
popf
je
fcomps
dec
and
push
cmpl
cmpb
xor
xchg
mov
divl
outsl
sbb
mov
sahf
inc
out
jb
jge
sbb
mov
xchg
pop
dec
iret
inc
xchg
pop
lea
xchg
jne
in
ret
mov
mov
push
cmp
push
fdivs
push
adc
stc
int
arpl
inc
dec
push
pop
inc
xchg
mov
xchg
and
rcll
push
inc
aaa
xor
mov
loope
into
ds
mov
imul
xorl
fidivs
adc
incb
in
jg
testl
cmpsl
pushf
xchg
dec
in
xchg
push
int3
jne
jno
and
popa
push
jbe
cmp
push
adc
push
adc
into
cltd
stos
add
lcall
out
push
mov
jl
xchg
ficoml
mov
cli
lcall
dec
sarl
adc
faddp
lds
pop
or
inc
mov
and
mov
pop
and
cli
pop
inc
jb
cld
and
or
push
dec
xlat
in
jmp
ret
js
movb
mov
fldenv
movsl
adc
dec
cmp
mov
out
xor
pushf
movsb
rolb
mov
int3
lods
xor
mov
pop
daa
jmp
push
data16
fistl
fisttpl
bnd
xchg
mov
jle
xchg
sub
and
outsl
jmp
pop
insl
jae
push
or
shl
cmpsl
mov
outsb
inc
jnp
fwait
out
cmc
push
cltd
cmc
or
in
xchg
xor
cs
gs
sub
hlt
in
jl
jmp
mull
mov
mov
sbb
movsl
add
movsl
int3
lahf
jae
lds
and
sub
mov
inc
sahf
jp
dec
dec
test
mulb
sub
push
test
jae
add
outsl
ljmp
in
jne
jns
movsb
dec
rorb
repz
push
stos
mov
std
add
divl
sbb
mov
pop
add
fldz
mov
lret
pop
ret
jp
sub
mov
dec
iret
lds
inc
xchg
insl
inc
pop
mov
inc
pop
out
mov
add
xchg
push
insb
jae
mov
cmpsb
cli
js
scas
fwait
cld
mov
add
xchg
push
imul
loop
mov
xor
push
testl
rcl
in
push
movb
movsb
sti
pop
les
je
test
mov
push
sbb
lea
add
sub
sub
into
inc
jne
inc
rol
repz
add
popa
jge
enter
ret
mov
ds
sbb
stc
mov
ficompl
cmp
cmp
inc
push
scas
lock
pop
inc
incb
fidivrl
fnstsw
jecxz
sbb
sbb
push
jb
adc
int
rorl
jle
hlt
insb
lods
mov
xor
and
fimuls
sub
js
sub
adc
xchg
add
into
ja
inc
cmp
lret
jg
out
je
push
enter
dec
sbb
testb
mov
push
idivl
adc
inc
sub
pop
ja
jmp
repz
stc
and
sub
leave
scas
pop
inc
sbb
sqrtps
cmp
imul
sti
push
xor
das
adcb
pop
mov
test
mov
inc
pop
mov
fwait
mov
fisttps
daa
jb
sub
dec
and
jle
and
outsb
fnstenv
fwait
pop
mov
xchg
sbb
push
insb
add
mov
cmp
test
dec
aam
dec
test
pusha
and
cltd
ljmp
xchg
enter
shll
pop
xor
push
adc
mov
icebp
cmpsb
mov
dec
loope
mov
ljmp
sbb
call
cmpsb
fnstcw
flds
dec
movsb
aaa
and
sbbl
imul
sbb
test
movsb
sbb
lcall
xchg
push
mov
imul
fsubp
and
pop
inc
jg
cmp
iret
dec
aad
rorl
pop
or
and
and
mov
outsb
and
in
sub
imull
sub
rcl
push
pop
add
stc
sub
xor
xor
outsb
std
push
adc
ret
daa
lahf
aaa
cmp
mov
cli
inc
insl
leave
sbb
mov
adc
adc
mov
std
inc
push
inc
das
push
jecxz
cmc
test
sahf
mov
adc
clc
aam
fldt
movsb
xchg
test
mov
nop
sbb
fcomp
add
into
idivb
xor
or
scas
and
in
dec
in
cmp
cmp
mov
xlat
dec
nop
sub
and
xor
repz
pushf
and
loopne
das
adc
jns
test
inc
jb
add
mov
icebp
cmp
or
push
leave
fs
pop
cmp
fcmovnb
in
mov
push
adc
aam
repnz
mov
push
dec
and
sub
jbe
or
pop
add
or
mov
popf
cmp
movsb
mov
addr16
imull
sbb
dec
mov
arpl
imul
or
push
pop
lds
inc
paddusw
xchg
aaa
xor
sbb
jne
sbb
sub
jg
and
jbe
mov
jns
shrl
inc
xor
div
jne
cltd
fisubl
cmp
mov
call
lock
mov
sub
push
mov
cmp
sbb
sub
or
les
push
rol
xchg
push
in
xor
dec
xor
mov
add
cmp
cli
es
lods
cld
sub
lret
mov
dec
cld
pop
shrb
pop
jnp
in
push
test
dec
repz
repnz
mov
sub
jnp
cs
sub
lods
and
loope
dec
inc
cmp
movsb
xchg
out
test
fimuls
pop
adc
mov
lods
out
rcrl
ss
xor
sbb
ds
in
push
add
or
test
ficompl
mov
pop
inc
sbb
dec
lcall
sub
adc
pop
fidivl
or
adc
scas
enter
cmpsb
xor
dec
mull
adc
inc
movsl
fs
imul
pop
sub
or
pop
insb
xor
mov
das
or
rorb
out
call
pop
xchg
popa
rcrl
mov
clc
dec
sub
scas
pop
jnp
andl
leave
out
cmpsb
cmp
xchg
cmp
and
ret
pushf
adc
xchg
mov
popa
push
repz
cmp
xor
jmp
insb
ret
pop
push
push
cmp
mov
mov
scas
lret
ror
sbbb
push
cmc
imul
ljmp
add
leavew
lds
mov
aas
jns
shr
scas
movsl
sbb
pop
add
cmp
dec
pop
pop
outsb
or
int
adc
pushf
stc
mov
push
dec
push
stc
jl
sbb
sbb
mov
fadd
cld
xchg
push
movsl
pusha
fisttps
or
mov
imul
nop
js
jmp
push
jmp
fcoms
fcmovnb
lahf
xchg
add
sub
aad
nopl
jmp
xchg
add
repnz
sub
iret
cmp
xchg
cwtl
mov
sub
mov
ss
ror
mov
dec
sarl
lret
popa
sub
stos
xchg
je
outsb
int3
lret
jmp
call
dec
sbb
xchg
mov
fistl
cmp
dec
test
cmc
jp
enter
stos
ds
lods
cwtl
jno
cmp
xchg
movsl
leave
test
dec
jnp
sbb
sub
mov
mov
jge
jp
frstor
mov
inc
and
stc
out
icebp
or
scas
jns
dec
pop
es
pop
add
adc
push
push
push
jbe
pop
ja
popf
pop
or
clc
inc
sarb
cli
push
je
mov
lods
cmp
sbb
int
push
cwtl
dec
out
sub
push
fldenv
aam
mov
add
jge
fs
nopl
sahf
xchg
add
inc
jmp
xchg
scas
mov
add
cmp
jg
mov
pop
idivb
in
std
inc
lds
imul
loop
nop
adc
mov
ss
jns
mov
adcl
daa
sbb
leave
fcompl
cld
sbb
aad
arpl
xchg
cmp
bound
in
jge
push
cmp
movsl
cmp
mov
sub
adc
add
call
sbb
pop
lock
jle
sub
sub
or
add
push
mov
test
jnp
lea
pushf
out
jmp
push
ret
lahf
cmp
mov
ja
mov
xor
xchg
dec
sbb
xchg
add
push
xchg
shll
push
stc
push
pushf
test
incl
lods
orl
clc
in
std
mov
sbb
sub
inc
mov
jmp
lock
xor
mov
ss
jmp
pop
mov
mov
sbb
mulb
mov
movsl
stos
pop
jo,pt
pop
insb
cld
imul
sub
mov
xchg
call
dec
mov
add
pop
add
out
int3
xor
lds
dec
push
mov
clc
mov
xor
xchg
dec
out
ror
jae
fstl
addr16
sbb
fs
or
xor
mov
sub
cmp
xchg
fstps
ds
imul
or
out
mov
je
test
inc
push
js
xor
popf
fimull
outsb
mov
jns
add
int
xchg
aaa
aad
push
mov
aam
not
mov
push
jmp
dec
xor
xorl
popa
mov
mov
aaa
pushf
jle
mov
movsl
imul
lock
call
in
xchg
push
mov
les
xor
lret
adc
pop
es
lock
xor
cltd
frstor
bound
sbb
int
or
adc
test
lds
mov
ret
xor
xchg
sub
xor
insb
xchg
dec
jg
push
jl
push
xor
or
and
push
lret
std
push
pushf
xlat
or
subb
xchg
jns
js
insl
mov
out
sbb
stc
ret
pop
les
les
jne
ss
ficoms
orb
pushf
outsb
fisubrs
cmpsl
daa
add
shlb
jno
jae
adc
lcall
sub
sub
xchg
cmpsl
adc
ret
popa
pop
mov
addr16
and
mov
push
pop
lods
xchg
bound
nop
cmp
js
cwtl
pop
adc
or
mov
pop
push
push
call
xchg
dec
add
iret
sub
js
cli
add
adc
xor
cmpsb
ret
mov
in
into
shrl
ror
push
adc
ret
rcr
test
loope
xchg
pop
sbb
mov
mov
dec
pop
and
arpl
shlb
add
lds
aaa
sbb
mov
inc
xor
shrl
sub
adc
mov
cmp
xchg
ret
sbb
scas
pushf
hlt
popf
stos
dec
pop
jns
ds
xchg
es
and
xchg
mov
adc
xchg
pop
and
lea
icebp
inc
into
cmpsb
sub
inc
jno
mull
mov
lcall
cmp
jg
mov
adc
and
js
es
fildll
mov
or
clc
popa
aam
stos
ret
je
xor
pop
test
int
dec
cmpsb
sbb
cmpsb
repz
cwtl
add
xchg
rorb
fbstp
aad
fistpll
adc
sbb
mov
xor
cmp
sbb
fisttpll
or
dec
xchg
dec
push
js
and
sbb
pop
lods
out
or
dec
in
arpl
jae
xor
popa
jmp
repz
or
scas
hlt
gs
test
arpl
mov
pusha
and
call
add
pop
sbbl
sbb
jnp
xlat
repnz
out
jp
jne
shl
hlt
iret
ljmp
jno
xor
lret
out
mov
lcall
ds
jnp
cmpsb
lcall
cmpsl
scas
int
in
pusha
push
pop
and
push
xchg
in
inc
mov
mov
and
mov
cs
lods
fsub
int3
mov
dec
fldcw
or
cmpl
mov
movsl
pop
add
or
adc
add
push
pop
std
pop
xlat
aad
pop
push
push
cli
adc
cli
cmpsb
xor
push
aam
adc
in
adc
scas
iret
jmp
inc
mov
jge
dec
push
push
push
bound
pop
mov
fcomi
cmp
inc
fxch
push
push
xor
ficoms
lcall
push
cwtl
arpl
sti
push
pop
test
sbb
cmpsb
adc
hlt
add
enter
subl
inc
into
movsl
cld
popf
and
adc
aam
fcmovnu
jne
addr16
add
xchg
or
inc
fdiv
out
pop
mov
loopne
mov
flds
int3
sub
jb
mov
shl
test
fsts
mov
mov
pop
ja
sti
push
mov
es
into
push
pop
sbbl
mov
hlt
rcrb
jnp
nop
out
mov
push
add
repz
cmpsb
insl
sbb
add
mov
lds
pcmpgtw
pusha
ret
push
lods
xchg
dec
cmp
das
sti
fdiv
shl
gs
ficompl
rolb
or
xchg
imul
scas
dec
cmp
jecxz
jmp
shrl
ja
mov
inc
and
inc
aam
mov
cmp
and
sub
xlat
cld
mov
inc
or
mov
iret
pop
add
call
mov
adc
nop
push
test
mov
xor
sbb
out
inc
jnp
and
cmpsb
loop
sbb
push
mov
out
add
test
xchg
fadds
jnp
inc
and
shrb
pop
loop
out
in
and
ret
das
scas
cmp
clc
ret
or
pop
sbb
add
int3
fildl
sbb
dec
das
pop
xchg
test
jecxz
adc
fcmovnb
insl
in
lret
sub
aaa
rcrb
sub
inc
mov
clc
bound
mov
jmp
in
or
lcall
fisttpll
lcall
stos
shl
jmp
fwait
jne
ss
test
rorb
pop
xchg
cli
xchg
mov
and
test
mov
sub
lahf
data16
rolb
lcall
xchg
mov
out
cmpsl
loop
cld
adc
mov
or
add
add
add
sub
adc
clc
cmp
les
xchg
xchg
inc
pop
es
sub
mov
jbe
shrl
pop
mov
les
outsl
out
cmp
lret
flds
jmp
loopne
push
cmp
add
jmp
and
or
repnz
inc
jbe
je
push
add
mov
out
pop
or
xchg
out
push
sub
pop
mov
out
into
ljmp
test
scas
push
cmp
lods
popf
bound
pop
inc
xor
loop
cmp
sbb
and
jno
or
xchg
inc
mov
addr16
push
push
dec
xchg
sbb
mov
pusha
mov
out
mov
icebp
movsl
movsb
dec
test
movsb
jle
ja
loop
scas
cld
jle
popf
sahf
mov
adc
repz
lods
sub
fisubrl
mov
pop
xor
fisubs
pop
jmp
ret
clc
pusha
decb
push
pop
stos
sub
ror
jnp
aaa
roll
mov
int3
aas
lret
loopne
mov
adc
xor
mov
fnstenv
inc
push
data16
jae
sub
fildll
xchg
pop
lret
ljmp
in
fldt
lcall
ret
sub
int
enter
ss
cli
xor
cmc
aas
divb
jp
fisubrs
leave
les
sub
in
dec
mov
sub
lods
movsb
lcall
leave
scas
sbb
aaa
lahf
ret
sahf
addl
dec
aas
div
mov
or
xchg
test
inc
popf
aas
ja
mov
lahf
xchg
dec
or
outsl
sub
test
add
popf
das
or
xchg
fs
xchg
cmp
xlat
jbe
push
dec
xor
mov
js
sbb
fmul
pop
mov
cmpsb
cld
xchg
cmp
mov
or
addl
or
ss
inc
pusha
arpl
or
inc
xchg
inc
inc
push
pop
pop
push
jmp
xor
mov
out
fiadds
mov
xchg
sub
testb
lret
into
dec
fists
je
add
int3
insb
shrl
mov
cmpsl
cmp
sub
adc
out
adc
test
sbb
and
imul
fprem1
dec
push
xchg
das
mov
mov
mov
lret
or
divl
pop
in
lret
cmc
stos
cmp
jno
dec
in
cli
jb
imul
add
push
mov
aad
cmp
or
push
inc
xor
out
clc
mov
or
sbb
push
loope
cmp
shrl
insl
loopne
mov
dec
adc
icebp
sbb
xor
cmc
add
jge
mov
nop
cwtl
iret
or
jae
nop
cltd
mov
or
mov
test
jae
mov
jo
imul
in
mov
cwtl
fnstcw
js
les
sub
sarl
lret
loopne
inc
fbld
sbb
add
sub
and
jno
fidivs
fists
test
xor
jg
sub
push
leave
lea
in
mov
jbe
adc
mov
insb
cmpsl
daa
ja
xchg
in
mov
icebp
sahf
push
mov
mov
cmpsl
mov
imull
testb
int3
push
xlat
or
xor
push
lcall
lret
jmp
fdivrs
ss
sti
xor
test
fcmovb
sub
or
jge
in
sbb
sbb
jns
in
xor
in
push
fsubp
xchg
stc
pop
pop
sub
loopne
or
test
or
in
lahf
rorl
push
out
adc
push
inc
sbb
xlat
jnp
out
fs
fisubrl
in
add
fidivl
push
loop
xchg
mov
inc
addb
jne
inc
shl
pop
xor
dec
pusha
inc
sub
fcmovbe
ret
stos
outsb
cwtl
sbb
lahf
loope
int
xchg
clc
flds
mov
inc
lock
adc
and
out
xchg
fbstp
shr
and
jmp
adc
insb
imul
inc
test
sub
flds
imul
xor
arpl
jg
mov
adc
outsl
dec
or
mull
push
addl
jmp
xor
test
push
adc
into
addr16
nop
xor
mov
fcmovne
addr16
pusha
jo
gs
data16
xor
lea
push
xor
push
mov
jge
mov
dec
mov
das
scas
ds
jge
jae
pop
mov
xchg
cmc
inc
shlb
fcmovbe
pop
das
stos
lret
fisttpl
add
imul
xchg
mov
into
pop
xor
push
pop
insb
mov
pop
scas
fucom
pop
cmp
push
pop
sbb
testl
sub
xor
and
stos
cmp
mov
pop
add
loop
pop
pop
xchg
clc
inc
mov
add
and
test
and
imul
test
loopne
out
sti
inc
mov
flds
lret
or
fmuls
mov
in
adc
mov
cmp
into
mov
adc
es
scas
or
lods
sti
movsb
sub
movsl
sub
cmp
sbb
movsl
jle
stc
loop
mov
cmc
sbb
and
rcll
adc
hlt
or
adc
dec
fs
sahf
fwait
sub
inc
mov
ficoms
xchg
fisubs
inc
mov
stos
xchg
adc
mov
mov
jbe
sub
sbb
fwait
insb
fcom
mov
jb
inc
fists
mov
cmp
add
mov
sarl
adc
xchg
mov
lock
pop
mov
fsubs
dec
mov
icebp
cmp
sahf
sub
rcl
dec
shrl
pop
dec
shr
push
lock
jp
xor
and
cmpsb
mov
xor
xchg
or
cmpsl
lret
loope
xchg
pop
sarl
dec
cmp
das
pop
ret
push
or
movsl
pop
mov
gs
sbb
add
inc
es
loop
out
push
pop
loop
shll
fwait
rclb
or
and
shrl
fildl
jmp
cmp
add
inc
insl
test
xchg
out
mov
test
daa
adc
mov
xlat
jmp
inc
fisubl
lock
mov
lods
loopne
mul
aaa
inc
mov
lahf
sbb
add
dec
fdivrs
lods
out
mov
fisubs
mov
xchg
ret
adc
add
out
imul
int
cwtl
shll
xchg
cmp
xor
sub
arpl
mov
xchg
adc
add
add
loop
mov
and
push
fcmovbe
mov
xchg
pop
xchg
cmp
adc
mov
test
pop
jbe
rcrl
xchg
popa
aas
pusha
pop
aas
popf
adc
dec
scas
pop
mov
cmp
sub
rcl
sub
lcall
add
cltd
aam
aaa
mov
popf
jmp
cmpsb
popa
cmp
ret
outsl
mov
negb
ss
aas
xchg
sbb
dec
xor
or
sub
xorb
popf
and
jle
cli
jg
inc
push
and
inc
jne
popa
jae
roll
rclb
loopne
cmp
cli
push
inc
insb
aad
add
push
xchg
add
movsl
jae
test
les
aas
mov
nop
mov
pop
fcoml
fistpll
jb
jno
jno
in
and
rorb
mov
push
dec
inc
inc
dec
icebp
or
scas
sbb
lds
or
add
sub
int3
shlb
test
andb
adc
mov
les
cs
xchg
inc
cmpsb
inc
sbb
push
push
xchg
and
fxch
scas
cmpb
add
pop
pushf
data16
jge
and
fstl
fisttps
push
jno
adc
cwtl
mov
and
ret
push
mov
xor
or
mov
pop
inc
lods
insb
add
cld
sbb
aaa
cli
pop
xor
xlat
fbld
clc
lret
imul
jge
ss
push
mov
sbb
mov
test
ficoms
mov
lds
out
outsb
pop
test
outsb
cmpsb
push
cmpsl
test
mov
push
jo
and
cmp
movsl
mov
dec
xor
fldt
pop
stc
sbb
pop
or
xchg
adc
rcrb
pusha
cmpsb
int3
stos
loop
push
das
sbb
adc
lods
pop
clc
mov
call
sbb
dec
loope
ss
pusha
stos
and
test
js
jae
cmpsl
mov
xor
clc
js
sbb
outsb
je
xchg
mov
adc
ret
fistps
shrb
push
mov
movsb
lcall
pop
aaa
mov
in
aam
pop
pop
ljmp
sbb
ja
das
in
es
cmc
fyl2xp1
ja
loop
or
and
adc
add
out
hlt
push
push
test
lds
and
sbb
faddl
fidivs
adcl
mov
mov
xchg
mov
rclb
inc
mov
enter
jg
sub
stc
sub
fwait
dec
inc
ss
dec
or
jle
cmpsb
sarl
pop
ja
gs
mov
dec
add
mov
pop
fiadds
bound
scas
xor
stc
cmp
inc
add
popf
xchg
sbb
stc
mov
inc
xor
cld
or
xchg
and
xlat
push
inc
test
push
inc
adcb
addr16
fcmovnb
ss
and
and
or
out
imul
cmp
sub
inc
lock
xor
bound
push
adc
iret
lods
or
cld
jl
sarl
clc
xorl
mov
push
fwait
incb
cmpsl
mov
gs
scas
cmpsl
aam
aas
ja
push
push
addb
test
std
out
movsb
aas
mov
dec
lods
cmp
push
xor
stos
sbb
mov
sub
xor
negl
sbb
popa
inc
neg
mov
adc
fldt
or
jne
mov
gs
ret
jl
and
jne
out
mov
bound
dec
inc
sahf
sahf
jmp
icebp
notb
stc
shlb
cmp
push
ds
ss
ret
call
iret
jns
xor
mov
and
into
aam
sti
addl
leave
lcall
mov
adc
test
sbb
data16
sbb
jp
jb
cli
out
sbb
imul
sbb
pop
ss
lret
dec
inc
cwtl
xorl
arpl
cmc
or
fwait
xor
leave
pop
lods
mov
movsl
jo
or
pusha
jecxz
jle
add
pop
ret
xlat
add
add
test
mov
les
mov
inc
and
int
add
sarb
movsl
mov
cld
icebp
push
outsb
sbb
shrb
mov
sub
or
icebp
lea
sub
cltd
sbb
test
mov
add
aad
sbb
xor
xchg
inc
std
scas
mov
imul
call
inc
dec
pop
mov
sbb
in
xchg
adc
out
cmp
jne
jle
mov
sbb
jnp
pop
pop
add
pop
fwait
xor
test
dec
mov
insb
rorl
xor
sbb
push
dec
sbb
dec
inc
das
cmpsl
aam
ret
cmp
push
mov
adc
jge
decb
mov
lret
mov
mov
xchg
mov
test
mov
loop
shlb
lret
mov
loope
xor
test
jae
loop
outsb
mov
fisubrs
mov
jae
cmp
push
fwait
and
daa
ss
pop
jmp
dec
movsbl
jno
xor
jecxz
out
in
sbb
fld
cmp
push
fmull
fdivr
arpl
xchg
sub
or
push
xchg
ljmp
push
mov
xchg
dec
xchg
fs
mov
mov
xor
sbb
sub
or
pop
or
add
jae
add
xor
lahf
xchg
sbb
mov
and
sub
cmpsl
jmp
dec
sti
add
popa
jb
rclb
incl
cltd
daa
arpl
mov
mov
cmpsl
rcl
enter
or
dec
ss
mov
int
aad
shll
pop
add
xor
mov
add
ljmp
add
and
jmp
out
push
xabort
lea
imul
push
or
ss
mov
imul
pop
add
sbb
enter
cmp
dec
mov
adc
and
inc
mov
test
lods
cmp
push
or
sarl
popa
and
cmpsl
pop
push
test
mov
cmpb
aad
mov
cli
mov
jns
xchg
pop
aad
pop
notb
cmp
sbb
xchg
andl
mov
push
fwait
sbb
jge
cmpsb
loopne
cld
xchg
xor
lret
lock
mov
test
inc
cmp
mov
xor
xor
pop
cmp
or
sub
test
mov
movsl
cld
movsl
into
aas
jp
sub
and
pop
dec
push
aad
pop
mov
cmc
imul
mov
les
pop
or
iret
mov
xor
jmp
clc
js
inc
rolb
jge
inc
popa
push
inc
cmp
mov
push
inc
stos
dec
xchg
sub
or
ficompl
jne
mov
sbb
gs
jo
rolb
or
or
mov
jae
stc
xor
and
mov
and
pop
mov
movsl
outsl
jle
lds
jecxz
sbb
push
mov
cli
test
jbe
mov
mov
cmp
pminub
and
ja
testl
pop
out
std
jecxz
loopne
xlat
push
dec
jo
es
incb
shll
and
add
pop
and
loope
inc
cs
or
lods
add
in
sub
adc
mov
subb
sub
mov
fldenv
call
fiaddl
push
sbb
je
subb
outsb
jmp
out
dec
inc
out
sub
jbe
test
pop
je
mov
insl
push
sub
and
mov
ret
xor
push
dec
sti
xchg
jae
push
jbe
mov
sub
add
jno
pop
ret
or
cld
xchg
inc
sub
and
mov
cs
adc
mov
popf
mov
push
sub
lods
sbb
cld
stc
mov
mov
mov
mull
or
leave
sub
test
pop
push
dec
mov
sti
hlt
sbb
negb
shlb
fisttps
popa
bound
lret
lods
lods
mov
jnp
mov
dec
xchg
repnz
stos
xchg
xor
movb
test
and
jecxz
adc
enter
jmp
outsl
sar
lock
mov
push
mov
mov
mov
mov
xchg
fwait
inc
cmp
adc
hlt
std
hlt
cmp
out
sti
mov
addr16
iret
arpl
movsb
aam
dec
es
clc
push
pop
pop
aaa
dec
dec
les
jge
sub
mov
notl
add
les
call
dec
leave
dec
roll
add
icebp
push
mov
xchg
adc
xor
mov
stos
pop
lods
push
mov
push
jb
testl
test
push
test
push
ja
popf
jbe,pn
mov
shrl
repnz
cmpsb
icebp
or
jb
clc
in
es
and
enter
in
addr16
popf
aaa
add
pop
mov
dec
adc
xor
add
dec
stos
add
sub
addr16
mov
push
daa
imul
sub
shll
stos
xchg
push
fisubrs
jg
mov
add
pop
mov
cli
lods
rorl
mov
dec
in
xor
mov
xor
pop
mov
and
sub
clc
lock
mov
das
jp
mull
lea
test
push
test
xorb
pop
call
cmpsb
xchg
jmp
push
loop
sbb
jns
lret
nop
fidivs
sbb
imul
roll
fldt
mov
pop
cmp
shlb
mov
jae
scas
or
mov
push
xchg
lret
roll
xor
fsubr
add
sub
cltd
pop
jno
popf
fsubs
push
lods
aaa
cwtl
xor
push
ljmp
jge
dec
cwtl
mov
pop
sub
std
rorb
out
sub
icebp
inc
int
rcrl
hlt
cmpsb
pop
std
loop
jp
pusha
push
stos
je
mov
ljmp
movsl
adc
pusha
sub
js
push
test
adc
add
mov
pushf
mov
dec
clc
movsb
xchg
cmp
jnp
data16
push
or
push
lds
mov
cmp
cli
mov
cld
add
mov
sub
in
loope
mov
cmpsb
imul
mov
out
jle
int3
call
sub
lret
sub
push
lods
xor
movsb
aad
sub
push
jmp
int3
push
or
lcall
inc
mov
push
sbb
inc
and
mov
mov
test
sub
in
cs
xlat
loop
div
lret
imul
sbb
popf
pop
in
repz
insl
xlat
cmc
rolb
pop
orl
pushf
movsl
fs
sbb
jecxz
cmp
out
cmp
and
inc
xor
mov
sub
out
lea
and
outsl
call
or
mov
popa
add
mulb
jb
lods
push
adc
enter
int3
fcmovnb
mov
fdivr
in
inc
movsl
jno
mov
popf
notb
int
movsl
pop
iret
jno
inc
sti
jecxz
sarl
lea
jns
cmpsl
sub
sbb
out
jno
gs
cld
cmp
aad
je
pop
cmp
pushf
ret
sub
ret
and
shlb
xor
adc
jns
mov
push
cld
mov
out
mov
ret
mov
cmpsl
xchg
test
loop
cmp
pop
xor
sub
inc
dec
mov
in
push
adc
xor
testb
xchg
mov
pop
rcr
adc
faddl
mov
cmp
xor
pop
mov
ljmp
jecxz
xchg
es
mov
inc
out
lods
push
inc
inc
es
or
sub
addl
mov
imul
sbb
mov
push
xchg
mov
loope
fdivr
fiadds
out
inc
pop
mov
scas
stos
divps
out
sbb
sarl
adc
fisubrs
ss
fisubl
mov
mov
push
stos
repz
pop
das
jmp
pop
std
mov
mov
jle
inc
mov
sbb
pop
sbb
cmp
lods
xor
lods
fistpl
adc
call
repz
out
mov
mov
jno
push
call
insl
lret
popa
decb
add
fists
inc
inc
push
xchg
push
into
notl
popa
lret
mov
adc
add
test
inc
xchg
in
push
insb
into
das
cli
scas
dec
mov
push
mov
mov
xor
mov
jge
pop
mov
int3
sub
pop
pop
in
pop
jp
mov
in
shl
dec
mov
or
shll
xor
fwait
adc
adc
xchg
jb
leave
out
sbb
adc
sbb
fdiv
cmpsl
adc
ret
fld
cmpsl
push
mov
lods
test
in
fs
push
lret
out
aaa
and
sbb
inc
cmp
test
sbb
and
sbb
repnz
lds
mov
jae
inc
xor
mov
mov
mov
stc
dec
jbe
sub
ret
adc
clc
nop
ffree
xlat
cmc
in
scas
iret
das
mov
xlat
inc
inc
add
stos
in
and
sti
sbb
mov
mov
stc
repnz
mov
sub
rcll
lea
push
bound
cli
push
das
xor
insb
out
dec
and
fsubs
mov
inc
pop
sbbb
xor
add
xchg
pop
orl
sbb
aad
push
cmp
aas
add
movsb
jno
jl
cmpb
enter
inc
daa
daa
mov
ret
mov
test
adc
jl
inc
sub
movsb
jmp
into
lret
or
mov
in
mov
jge
imul
push
movsl
inc
pop
push
test
xor
sti
cwtl
stc
mov
into
pop
sub
mov
mov
jo
cli
cmpsb
aad
xor
push
out
test
incb
inc
mov
or
popa
push
imulb
and
xor
in
cltd
cld
xor
dec
enter
sub
imul
notb
dec
aaa
jbe
xchg
or
je
or
or
mov
pop
mov
sbb
rorb
rcrl
sti
jmp
lret
inc
sub
inc
ja
jge
dec
imull
jno
hlt
fsubrs
movsb
pop
inc
arpl
outsb
imul
popf
aaa
aaa
sarl
mov
xor
add
push
mov
dec
loopne
xor
dec
mov
sub
add
xchg
or
inc
addr16
xor
jg
xchg
out
dec
lret
inc
or
xlat
xor
push
pop
mov
ret
push
mov
cmp
cmc
push
sub
push
ret
mov
cmp
daa
addr16
movsb
mov
aad
mov
xchg
btc
adc
fbstp
pop
mov
or
fidivl
jnp
dec
ja
or
and
ret
outsb
dec
lahf
adc
sbb
pop
xor
roll
stc
out
sbb
pop
sbb
xchg
push
ja
pop
cmp
push
andl
or
pushf
and
cmp
iret
mov
inc
loopne
in
push
xchg
call
loop
in
pop
pop
adc
add
outsb
scas
cwtl
lock
push
and
pop
mov
aaa
popa
or
xor
mov
xor
repnz
jb
cli
ret
popa
pop
js
mul
and
mov
sub
inc
lods
scas
lds
das
lods
fwait
and
sbb
mul
xor
fdiv
mov
cmp
push
sbbb
out
pop
mov
lods
jle
sub
mov
fisubs
sub
sub
imulb
mov
xchg
ja
xchg
pusha
sub
xchg
test
nop
xor
into
cmpsb
cld
jbe
inc
inc
mov
dec
ja
js,pn
or
inc
dec
lods
sar
push
fdivr
xor
arpl
jae
lret
push
repz
add
xchg
call
lods
mov
ljmp
aam
lret
lock
ficomps
ds
aad
aam
pop
mov
ret
lds
inc
and
aad
aad
add
pop
mov
ret
cmc
fwait
dec
lods
stc
jne
or
mov
clc
cli
mov
loope
mov
jne
mov
mov
out
daa
andb
cmpsl
shlb
sbb
lds
int
popf
xchg
dec
mov
div
clc
outsl
ljmp
fldenv
xchg
fdivrp
leave
pop
leave
insl
sub
je
push
push
add
xchg
div
lods
push
jmp
push
lcall
sbb
cmp
pop
lea
test
cmp
stos
mov
cmp
dec
pop
rorl
xlat
adc
gs
je
xlat
and
sub
xor
push
cltd
test
or
fists
add
inc
push
repz
dec
es
mov
rcrl
dec
ss
testb
push
lods
lret
sub
xor
call
addr16
jb
mov
sbb
loope
cmp
sbb
clc
inc
mov
mov
mov
inc
ja
push
jae
lds
stos
xchg
dec
sub
add
int
je
jnp
or
pop
iret
sbb
stc
sbb
lret
mov
push
sub
and
xor
aad
or
aad
mov
xor
push
cwtl
mov
movsb
mov
fisubrs
cli
aaa
into
sbb
int3
pop
jbe
ds
cmp
insl
ret
stc
push
mov
dec
bound
aad
test
int
cltd
lock
fdivrp
xchg
sub
nop
dec
mov
mov
push
mov
mov
xor
cmpsb
push
xor
adc
js
add
cmp
loopne
mov
or
jb
int
dec
push
or
iret
les
movsb
outsl
or
sub
add
mov
dec
add
std
mov
mov
inc
jmp
fsubl
jge
cmp
stc
dec
sbb
sahf
or
push
or
jns
inc
xchg
loopne
adc
mov
jle
jg
mov
jle
mov
fcomi
cwtl
outsb
ja
scas
pop
fsubr
ret
sbb
mov
ss
push
in
inc
or
pop
rorb
jae
and
dec
lret
in
bound
out
sti
cmpsl
vmwrite
add
iret
notb
in
int
decl
push
rolb
test
xor
testb
inc
into
in
aam
cmp
adc
mov
clc
and
sub
out
out
xchg
fcmovu
mov
stos
dec
aas
ret
testl
mov
xor
popa
cmp
adc
in
sbb
adc
add
add
outsl
cmp
shrl
imul
add
cmp
movsl
cmp
xor
pop
rorl
mov
or
pop
loope
repnz
outsl
and
cs
jno
jp
lahf
popf
jbe
test
sarl
xlat
enter
lret
aaa
push
pop
stos
cmpsb
and
loope
inc
popa
in
test
cmp
popa
push
mov
aaa
cltd
ja
ds
sbb
sbb
addr16
pop
test
xor
movsb
outsl
sbb
cli
push
sahf
inc
in
ds
cltd
and
xor
fcomip
popf
cmp
xor
arpl
shrl
mov
sbb
adcl
mov
mov
call
jno
shl
nop
xchg
enter
daa
std
test
arpl
and
xor
inc
pop
repz
loop
adc
mov
stos
jge
cli
add
or
ja
lcall
sarb
nop
push
sub
inc
push
cmp
stos
pop
int3
mov
adc
sahf
mov
je
push
filds
cwtl
push
test
xor
mov
decb
mov
push
jle
mov
dec
mov
add
ret
int3
fldcw
fisttpll
jae
loope
sarl
push
sub
ret
cmpsb
shl
xchg
pop
dec
ja
jecxz
jg
mov
jmp
sub
xchg
jg
cwtl
pusha
loop
cld
divl
pop
ljmp
xor
fdivs
dec
jae
cli
out
pop
xor
imul
adc
or
push
mov
in
push
cmpsl
sbbb
pop
pop
cmp
int3
or
push
cmp
and
sub
push
ja
sub
jbe
and
sub
push
pop
jb
outsl
in
push
mov
sbb
xchg
clc
mov
into
push
xchg
loop
cmp
or
cwtl
push
ljmp
cmp
mov
sub
adcb
lds
mov
iret
loop
dec
sbbl
fisttpll
test
xchg
inc
imul
cmp
ror
repnz
outsl
mov
out
pop
or
ja
xor
shlb
inc
dec
les
dec
sbb
test
push
or
mov
pop
loopne
jecxz
test
jg
lock
push
xchg
jb
cmp
aam
movsl
mov
es
les
rorb
fs
sti
enter
stos
aam
je
pop
push
and
jmp
push
mov
or
outsb
je
xor
enter
sbb
inc
lahf
sti
jae
inc
cli
sbb
cmp
ficoms
dec
insl
mov
mov
push
insl
ljmp
ss
outsl
fs
mov
push
and
ds
push
adc
xor
lret
inc
sbb
testl
js
push
adc
push
jno
mov
inc
add
and
sbb
mov
and
addl
push
pop
xorb
dec
popa
mov
inc
pop
dec
adc
cmpsb
xchg
test
add
xor
notl
push
dec
rcl
jle
scas
call
adc
test
mov
mov
insb
fcmovu
iret
inc
mov
mov
inc
test
les
jae
lods
fidivl
aad
test
mov
fdiv
lea
adc
and
push
seta
lret
push
mov
inc
push
ds
jns
rclb
xor
ss
loope
ja
dec
adc
dec
fwait
or
adc
xor
lret
xchg
jo
sti
adc
cmp
xor
mov
lods
testl
add
dec
std
sub
and
nop
fists
jecxz
lods
xor
iret
stc
push
and
xor
pop
int3
icebp
dec
push
push
add
jle
mov
adc
push
jge
adc
push
sbb
pop
inc
hlt
lds
cltd
dec
movsb
daa
pop
test
incb
inc
es
cltd
pop
jne
cmp
bound
sub
aas
in
xor
add
sbb
je
rcr
dec
decl
adc
and
lock
out
pop
adc
in
gs
mov
std
mov
adc
rolb
int
loopne
mov
loop
push
push
push
arpl
jbe
dec
std
into
xchg
push
pusha
fstp
aas
pushf
ret
ja
mov
jne
xchg
jg
loope
mov
loopne
stos
hlt
sti
push
lret
adc
fldcw
push
pop
int3
outsl
mov
adc
fdivrs
push
xchg
pop
cmp
iret
xor
ss
test
int
and
mov
movsb
jge
dec
loope
mov
stos
notl
sub
lret
sahf
add
mov
test
xrelease
mov
xchg
pop
ret
xor
lods
cmp
std
mov
inc
xchg
xchg
jp
sbb
inc
cmp
sbb
push
or
rolb
insb
pop
fs
ret
sub
xchg
movsb
lahf
hlt
mul
sbb
inc
frndint
xchg
leave
faddp
ret
mov
sbb
arpl
pop
and
subl
cmp
adc
into
test
pushf
dec
sbb
mov
subb
adc
jp
cld
jmp
sbb
test
inc
fsin
into
push
pop
lret
lea
leave
push
jno
push
imulb
repz
cmp
pusha
aad
cld
divb
arpl
and
lods
push
ror
xchg
clc
in
adc
gs
inc
bound
push
in
fstpl
xor
jge
xor
out
add
mov
cld
cmp
mov
test
shlb
mov
xor
loopne
xor
mov
orl
ficomps
jp
aad
sbb
jge
pop
push
loope
jg
mov
cmp
xor
clc
push
mov
imul
xchg
mov
adc
jo
push
mov
pushf
pop
inc
mov
adc
push
mov
inc
ljmp
inc
push
add
cmp
imul
lea
incl
add
add
adc
xor
inc
xor
fwait
bound
cli
xor
aas
and
cs
stc
ds
out
repnz
test
shl
insl
dec
in
leave
xchg
hlt
sahf
adc
lock
and
pop
clc
in
hlt
lods
push
in
mov
mov
mov
andb
mov
pop
jp
mov
call
movsb
add
cmc
xchg
insb
ds
push
lods
mov
outsl
xchg
xchg
mov
test
push
adc
lcall
lahf
into
rcrl
divb
inc
movsb
das
setg
jmp
add
ret
mulb
idivb
jb
mov
hlt
arpl
sub
shrl
lock
pop
mov
xchg
mov
lods
dec
leave
scas
cmp
lret
jns
xor
dec
rcrb
imul
push
add
xor
stos
inc
mulb
call
dec
or
mov
test
xor
add
sti
jns
add
lahf
fdivl
subb
ja
ret
insl
ret
push
outsl
movsl
imulb
xor
daa
xchg
adc
subb
push
pop
or
into
jbe
push
sbb
int3
lock
dec
jge
jge
int3
divb
mov
cmp
shrl
test
push
and
mov
stos
rcll
cmpsb
test
cmp
xchg
add
inc
add
cmpsl
cmp
adc
xor
and
icebp
stos
pop
and
loope
mulb
sbb
inc
mov
xchg
sub
inc
or
in
mov
lods
daa
mov
test
aas
push
imul
mov
in
sbb
daa
imul
aaa
adc
je
and
adc
sbb
loop
ds
ss
sub
pop
and
ds
cmpsb
incl
xchg
and
gs
mov
jecxz
xchg
fwait
inc
out
inc
popa
aas
dec
xor
addb
mov
andl
mov
add
lcall
shlb
mov
xchg
sub
push
testb
lock
jmp
cmpsl
mov
jno
mov
les
push
and
inc
mov
in
xor
movl
movl
insl
incl
flds
xor
dec
testb
test
add
iret
xor
and
xchg
jmp
fcomi
pop
ret
cmpsb
js
sub
jae
cmp
and
and
js
scas
jecxz
imul
hlt
sbb
sub
inc
repz
jp
pop
push
roll
xor
ficoml
sbb
or
lret
test
mov
mov
and
cmp
jge
mov
ret
push
sbb
enter
lahf
mov
mov
xchg
push
and
mov
cmpsb
inc
int3
repz
paddb
notl
or
or
jae
gs
lock
loopne
adc
pop
adc
lret
mov
test
imul
mov
mov
and
es
stos
xlat
cs
and
and
subb
enter
and
daa
cltd
js
or
ljmp
push
xor
mov
dec
loope
bound
aam
dec
pop
das
jno
cmp
aas
xor
and
mov
mov
negb
cli
nop
mov
stc
cmpsl
cmp
je
inc
lea
mov
xlat
push
inc
dec
sub
xor
test
loopne
fwait
sub
mov
sub
adc
repz
jecxz
repz
cmp
mov
ret
xor
out
or
xchg
inc
jg
imul
pop
je
outsb
xor
and
xchg
add
nop
push
lods
lahf
sub
frstor
fldcw
popf
push
lahf
mov
pop
ja
inc
mov
loopne
mov
mov
movsl
mov
dec
push
mov
roll
dec
lret
push
mov
cmpsb
jecxz
iret
fsubr
push
dec
in
xor
cmp
or
xchg
fwait
add
jecxz
lods
mov
mov
dec
add
cmp
cmp
push
dec
inc
cmp
mov
sbb
lahf
inc
lea
adc
lahf
ljmp
mov
adc
sub
mov
cmp
daa
decb
sub
outsl
lret
sbb
repnz
ffree
push
pop
sub
call
lods
test
or
push
xchg
push
and
andb
mov
lea
loope
jg
scas
cmp
insl
out
out
clc
scas
lret
xchg
xchg
fidivrs
test
enter
test
loop
loope
fidivs
sub
push
pop
push
test
outsl
inc
jbe
mov
sub
aaa
pop
ror
xchg
push
mov
aaa
flds
loopne
xchg
in
fs
in
cmp
mov
xchg
jnp
push
pop
sbb
loope
fcomip
and
mov
fiadds
std
or
call
xchg
push
push
sbb
or
xor
xchg
jmp
fistl
in
jnp
jbe
outsb
out
sbb
mov
rsm
adc
xchg
outsl
enter
push
mov
push
mov
lea
and
xor
mov
sub
sbb
notb
or
inc
cmp
jae
loope
ljmp
add
sbb
inc
inc
inc
addr16
jmp
pop
inc
outsb
pop
mov
sti
in
jmp
lret
movsb
enter
repnz
cmpb
xchg
fnsave
dec
dec
cmp
xchg
pop
scas
or
aad
pop
push
fdivrl
sti
sub
xchg
gs
rorb
enter
gs
inc
pop
sbbb
aad
mov
mov
jno
out
movl
xor
jno
idivl
adc
in
sub
idiv
dec
dec
jo
cmpsl
lock
adc
xor
xchg
inc
sub
sbb
out
pop
loop
fsubs
out
outsl
add
mov
mov
jne
pop
inc
push
lods
negl
sbb
sbb
and
mov
dec
cmp
dec
xor
repnz
jmp
insb
scas
xchg
jmp
fs
hlt
xor
add
inc
shll
fisttps
cmpb
pop
rcrl
add
addr16
add
stos
or
mov
stos
subb
adc
pop
jne
ss
in
and
outsb
hlt
add
jo
mov
js
sti
push
scas
in
movsb
iret
sub
jg
clc
or
lret
push
cmp
push
hlt
jne
rep
sbb
lahf
mov
push
sbb
pop
push
call
cli
es
lock
sbb
push
xor
ret
movsb
nop
jo
mov
push
mov
jne
sbb
add
xchg
js
nop
nop
mov
or
outsb
subb
lods
inc
inc
pop
popa
daa
adc
out
or
fsubl
cmp
sbb
add
mov
leave
inc
iret
mov
leave
arpl
inc
ret
cmpsl
add
mov
mov
xor
lret
cmp
lcall
stos
shrb
adc
vmwrite
jl
leave
jg
inc
std
movsl
outsb
inc
sub
push
pop
xchg
imul
cmp
outsb
xchg
inc
fwait
stc
out
hlt
adc
scas
je
and
add
sti
mov
pusha
arpl
dec
out
xchg
inc
xor
sti
mov
jge
sub
xchg
pushf
push
fdivs
dec
push
sbb
lret
xor
dec
aas
je
mov
testl
stos
lock
cmc
or
pop
push
pusha
rclb
out
xlat
rolb
xor
ja
lea
push
scas
pop
fsubp
xchg
cmp
scas
nop
clc
adc
pushf
add
xor
popf
pop
cmp
xchg
outsb
jo
out
add
insl
dec
mov
dec
pop
insl
cwtl
sbb
scas
fwait
jg
fimull
testb
xchg
mov
pop
ret
adc
clc
dec
push
cmp
adc
je
cmp
lahf
inc
mov
mov
inc
lret
mov
inc
into
xor
adc
call
icebp
push
std
mov
popf
sub
xchg
stc
cmp
lds
mov
fsub
mov
popf
push
adc
xlat
push
inc
incb
popf
lds
adc
cmp
or
cmpsl
pop
dec
fisubs
out
insl
adc
fdivrl
pop
outsb
icebp
lock
das
out
add
and
outsl
mov
cwtl
pusha
push
sbb
bound
rcrb
mov
cmpsb
and
sub
sbb
dec
sbb
test
sti
fxch
jle
mov
jae
pop
add
inc
filds
dec
xchg
cmpb
inc
rcrb
lcall
pop
hlt
jmp
ja
pop
sub
mov
add
and
sbb
arpl
xchg
mov
js
into
push
notl
mov
in
testb
sub
lret
shlb
movsb
fdivrp
scas
sti
decl
enter
pop
repnz
jge
inc
push
inc
cmpsl
sahf
pop
mov
jb
aaa
dec
jl
sub
jmp
or
add
mov
in
insb
stos
out
xchg
cld
inc
ret
inc
in
dec
lods
push
mov
insl
xchg
dec
inc
push
pop
loopne
das
inc
inc
add
xor
fwait
xor
inc
stos
inc
xchg
loop
and
add
and
insl
jmp
movsl
and
data16
add
add
fmul
add
fists
mov
cmp
sti
andb
dec
in
mov
fadds
add
mov
addr16
fnsave
jo
incl
adc
lret
scas
xor
mov
fistpl
mov
addb
or
out
iret
mov
jg
test
inc
pop
and
scas
loope
xor
clc
arpl
and
shlb
and
jnp
jb
jb
inc
sub
push
lahf
adcl
xchg
fcoms
bound
ret
and
mov
int3
xchg
insb
and
rorb
jmp
jne
push
fidivrl
mov
mov
rcll
inc
push
sbb
cmp
jae
inc
aas
push
mov
pop
pop
xchg
fcomip
inc
popw
icebp
pop
jno
fimuls
negb
outsb
push
jnp
out
fwait
adc
push
adc
cmp
out
lahf
mov
sahf
iret
mov
cmpb
frstor
jl,pt
mov
daa
mov
cmp
lcall
sbb
mov
bound
pusha
mov
das
jb
inc
stos
or
leave
inc
add
inc
mov
or
jmp
bound
cmp
pop
in
loopne
cli
sbb
xor
add
lds
sbb
sub
sub
pop
or
xor
mov
add
cmp
in
or
jae
xor
or
sbb
xchg
cmp
mov
ljmp
mov
pop
push
cmpl
sahf
jo,pn
add
rcll
xlat
and
add
xor
xchg
dec
and
jmp
int
mov
ss
orb
sbb
lods
into
clc
mov
pop
push
fsts
movsl
pop
sub
add
mov
test
xchg
or
jns
icebp
lahf
pop
cmp
std
loope
test
cmpsb
push
xor
dec
fimuls
mov
rorl
fidivl
mov
dec
push
lods
xor
out
lds
sbb
test
in
xchg
sbb
loope
pop
sar
in
in
jno
and
add
cmp
sub
psrld
aaa
add
mov
cmpsl
mov
jge
ljmp
mov
push
sub
mov
sub
cmp
add
test
jne
and
mov
pop
bound
adcl
add
push
jne
in
adcb
int
icebp
test
dec
pop
fwait
aad
push
mov
lock
scas
cwtl
adc
jbe
or
cmp
inc
pop
sub
xchg
arpl
inc
inc
std
or
mov
cmp
xor
popa
lcall
vpavgw
sahf
lret
aas
cmp
lods
and
sbb
arpl
out
push
in
sbb
xlat
add
call
aaa
jmp
sub
adc
xor
rcrl
or
inc
data16
cmpl
xchg
stos
aam
jg
dec
dec
adc
dec
ss
push
into
sbb
add
xor
adc
push
push
cmp
ss
cli
loope
sub
enter
jae
pop
jl
xchg
push
fstl
jnp
jg
mov
cli
mov
ds
lods
dec
jne
bound
or
addb
test
jbe
les
adcb
ss
jge
test
outsl
clc
and
xor
fildl
dec
cmovl
push
cmp
push
jbe
fucomp
pop
lock
inc
out
push
and
mov
insb
je
repnz
aas
aas
fwait
lods
mov
iret
xor
and
stos
sarb
aam
scas
mov
sbb
xchg
jo
xchg
out
xchg
lods
jbe
or
mov
enter
xor
loopne
inc
imul
push
xchg
mov
sub
ds
sbb
push
and
ss
jno
and
push
js
cs
adc
cwtl
cmp
cli
or
adc
repz
loopne
mov
add
sbb
sbbb
xchg
outsb
adc
pusha
iret
and
sub
mov
jns
movsb
xchg
xor
call
dec
mov
jo
out
sub
xchg
sarl
and
imul
mov
mov
ret
xor
jb,pn
inc
daa
jmp
std
cwtl
sub
loopne
shlb
ss
repnz
pop
loop
dec
lods
xor
fists
and
xchg
xor
xor
divb
jae
inc
inc
popf
movsl
fs
push
mov
lods
dec
or
xchg
inc
jnp
xchg
adc
mov
lahf
stos
mov
aam
movsb
cmp
jle
jb
inc
or
cmpsb
aas
out
outsb
test
insl
dec
cmp
push
insl
sub
add
out
mov
add
jno
sbbb
cmc
jnp
aam
ficomps
pop
mov
das
xor
mov
mov
cmp
pop
sbb
jnp
lods
stos
xchg
mov
std
pop
xorl
dec
insb
xlat
fisubrl
dec
xchg
inc
sbb
rcrl
dec
stos
enter
and
pop
fdivl
xor
xor
dec
cmc
mov
jae
jecxz
rclb
arpl
xor
mov
rcll
push
pop
pop
or
movsb
movsb
mov
call
cmp
pop
sbb
mov
in
xor
inc
pop
shrl
pop
adc
rclb
outsb
mov
xor
pop
cmp
int3
add
push
sbb
mov
push
fld
sahf
xchg
rcrl
sub
sub
cs
jns
addb
adc
mov
xchg
adc
nop
sbb
gs
sub
outsl
insb
sti
dec
cmp
or
movsb
jl
inc
nop
mov
mov
inc
jb
jecxz
lds
sub
mov
or
pop
in
insl
jmp
cltd
fs
scas
ljmp
add
push
jmp
add
and
jno
lcall
inc
sub
push
je
ret
cmpsl
int
negl
cmp
mov
rcr
sti
lock
fistps
inc
and
ljmp
in
mov
mov
aad
jge
mov
shrb
imul
xor
test
or
insl
lret
inc
mov
popfw
xchg
fiaddl
imul
xor
icebp
cwtl
or
adc
mov
insl
add
mov
xor
jl
jne
outsb
mov
stos
push
std
mov
sub
xor
jle
addr16
fsubrl
dec
and
insb
xor
xor
pop
incb
insb
sbb
mov
addr16
repz
dec
daa
in
inc
pop
sub
adcl
scas
add
aaa
lods
enter
imul
xchg
cmp
mov
je
arpl
leave
das
xor
bound
xchg
add
mov
rcl
jg
jns
repnz
nop
clc
xor
adc
sbb
push
xor
cmpsl
push
and
xor
daa
incb
ficomps
test
sbb
or
dec
test
or
imul
loop
adc
loop
dec
outsb
dec
aaa
fisttps
out
jg
sbb
or
into
mov
in
into
ret
add
and
and
mov
fmull
lock
repnz
sub
mov
sbb
daa
cmp
scas
popf
leave
xchg
shl
mov
rcll
pminub
push
les
lds
icebp
mov
fsubp
pop
lret
out
gs
cmpsl
dec
cmp
xchg
xor
jmp
fmull
call
or
insb
test
imul
xor
scas
inc
bound
stc
fs
jg
icebp
dec
pushl
dec
jb
pop
out
jbe
sub
jmp
pop
cmp
lods
add
mov
icebp
xor
mov
mull
xorl
sbb
xor
das
jb
inc
lcall
popf
xor
mov
adc
out
lret
adc
push
dec
leave
jecxz
jnp
dec
jne,pt
loope
dec
mov
subb
add
pop
inc
leave
test
xchg
je
sub
rolb
notb
mov
add
das
ficoml
movsb
int
add
inc
in
js
xor
outsl
cmp
out
xor
sub
jno
jb
insb
clc
ljmp
pop
jns
mov
outsl
es
stc
imul
jns
dec
das
in
push
out
stos
xchg
dec
not
insb
sub
xor
sub
add
pop
or
push
sub
pop
add
push
push
mov
fnsave
stc
jne
fldenv
push
xchg
shrl
pop
mov
xorb
dec
cmp
mov
xchg
inc
data16
cmpsb
mov
lods
loop
js
jmp
mov
mov
add
packuswb
imul
jge
jo
cmp
repnz
negl
es
into
hlt
dec
mov
loop
inc
push
fs
mov
in
incb
scas
cmp
scas
xchg
nop
pop
sub
add
aam
ds
jae
dec
or
and
jae
mov
jnp
subl
out
sbb
addr16
xor
repnz
int
add
mov
scas
incb
or
enter
and
pop
dec
add
pusha
inc
sahf
sbb
loope
fisubl
push
or
push
and
adc
int3
and
mov
test
fnstcw
cli
mov
rclb
pop
cmp
enter
mov
dec
mov
jge
fidivs
dec
mov
pop
sahf
imull
dec
out
aaa
xor
movsb
pop
out
sbb
fadds
lcall
inc
aaa
scas
xchg
dec
cwtl
les
mov
and
dec
lods
addr16
sbb
es
mov
lds
mov
dec
in
or
cs
pop
push
sub
pop
jns
adc
mov
pop
sbb
or
sub
fcoml
rcl
inc
test
lods
dec
rcrb
std
push
aas
adc
cmpsl
xor
sbb
lock
shrl
adc
sub
inc
ja
pop
xchg
lret
enter
cmp
ficomps
addr16
adc
inc
xor
sbb
fidivrl
or
shl
xlat
fwait
mov
jbe
pop
cltd
out
jns
test
adc
inc
data16
out
dec
mov
imul
fimuls
xor
imull
stc
pop
lret
jae
test
imul
mov
jno
gs
pop
jecxz
mov
fldcw
sbb
aam
and
stos
outsb
push
xor
cli
ljmp
or
fwait
xchg
lret
xor
mov
add
jl
fistpl
adc
mov
int
mov
xchg
xor
dec
pop
sub
mov
jmp
rep
dec
cmp
mov
adc
stos
push
in
aad
lcall
inc
ljmp
enter
data16
out
push
jne
inc
sbb
fwait
xchg
mov
cmp
jno
fidivl
mov
mov
test
push
pop
shlb
jnp
stc
xchg
icebp
out
mov
arpl
cltd
call
hlt
sbb
pop
adc
xchg
mov
adcb
nop
push
test
daa
cmpsb
jmp
popf
movsl
icebp
imull
push
pop
popf
add
push
rorb
fwait
aaa
dec
and
pushf
sub
xchg
dec
xchg
loopne
mov
cmpsl
xchg
sbb
cmp
xchg
popf
movsl
mov
arpl
dec
pop
dec
add
push
and
or
push
sub
rolb
es
adc
shrb
pop
in
out
dec
mov
mov
out
in
jae
sbb
cltd
pop
gs
inc
dec
repz
pop
cli
xor
push
jecxz
enter
jno
add
imul
test
push
fwait
or
leave
int3
sbb
jno
pop
test
mov
jae
dec
sbb
repnz
sub
cmp
pop
mov
ljmp
pop
mov
mov
sub
sub
int
out
decb
push
ret
pop
bound
fcoml
add
sbb
push
icebp
pop
shl
pop
arpl
cld
jle
ja
pop
or
sub
mov
mov
mov
push
xrelease
mov
and
and
adc
mov
pop
imul
outsl
cli
dec
push
je
cmpsb
je
sub
lock
pop
xchg
mov
and
popf
repnz
fs
and
and
daa
std
out
mov
ljmp
push
jbe
sarb
mov
sub
jle
xchg
mov
cmp
pushf
pop
lret
leave
lret
pop
test
fstl
mov
outsl
inc
lcall
das
ret
fsubs
sub
loopne
xchg
stos
dec
mov
or
in
out
movsl
mov
mov
inc
pop
or
and
jae
mov
xor
stos
mov
mov
shlb
addl
sub
shrl
loop
repnz
mov
imul
jae
and
mov
cmpl
mov
jecxz
fsubrs
cmp
in
movsl
mov
rdmsr
dec
in
stos
push
xchg
xor
das
lods
jl
loop
pop
jecxz
lcall
push
xor
aas
fbld
jmp
mov
out
mov
pop
mov
fsts
add
ror
inc
mov
adc
mov
cltd
sub
mov
mov
adc
in
mov
ja
in
cmp
sub
out
and
sub
insb
pop
popf
sbb
bound
xor
lahf
xor
push
xor
pop
add
push
mov
fistps
lods
or
mov
test
imul
ret
mov
lahf
cmp
mov
push
rcl
mov
lds
stos
loopne
dec
lods
inc
les
cltd
fyl2x
stos
int3
and
movsb
in
rdtsc
bound
and
repz
sbb
test
rcrl
xor
lods
ret
xorl
cmpsl
add
inc
and
fstpl
mov
mov
lods
and
xchg
dec
inc
rolb
insb
push
and
push
or
inc
out
dec
sbb
add
stos
jg
ret
stc
mull
sbb
jg
rcrl
and
inc
stos
jg
sbb
sbb
scas
inc
sub
dec
in
into
adcl
cli
ja
pop
sbb
and
bound
pop
adc
notb
popf
ret
loop
repz
lahf
hlt
fisubrl
cmc
push
dec
adc
mov
lret
jo
repnz
in
insl
iret
mov
push
das
mov
mov
ja
cmc
ret
pushl
daa
mov
jnp
sub
ljmp
inc
rcr
fistl
cmp
mov
ret
xchg
mov
sub
mov
inc
sub
or
out
clc
ja
repnz
cwtl
inc
xchg
push
jae
nop
mov
rcll
enter
rcrb
and
lcall
lret
iret
or
mov
btc
xor
pop
mov
mov
add
lea
sub
jne
and
pop
xchg
add
adc
jmp
xor
out
in
inc
jmp
out
fsubrl
sarl
or
idivl
adc
cli
cmp
lods
jne
std
nop
test
je
mov
cs
xchg
or
clc
int
aas
jne
pop
push
pushf
cwtl
es
push
je
pop
insl
pop
into
lock
or
test
ja
push
xor
or
movsl
fcmove
dec
icebp
mov
js
in
xchg
or
bound
bound
ja
aas
mov
jbe
sahf
aam
dec
jb
rcrb
out
xchg
les
inc
cs
outsl
or
push
movsb
or
cs
lock
jmp
lret
fcmove
pop
loope
xor
lret
pop
push
ret
cmpsb
stos
cmp
push
cmp
ret
ret
inc
jmp
mov
pop
mov
cmp
cmp
dec
lahf
mov
insb
mov
mov
sub
pop
xor
xor
sub
jge
mov
adc
pop
or
stos
sbb
sbb
and
les
xor
lods
mov
test
fwait
pop
jbe
movsl
in
sub
cwtl
inc
enter
out
sti
into
popl
cmp
and
lock
notl
sbb
rorb
test
jg
xor
adc
xor
xor
add
jg
mov
cmp
inc
fisttpl
and
in
sti
into
addr16
pop
cmp
negl
stc
fldt
rcrl
test
dec
aam
adc
adc
test
mov
js
es
push
push
and
fcmovne
in
and
lds
in
lods
fs
daa
cli
mov
inc
cmpl
imulb
lods
nop
push
adc
sub
into
aas
push
cmp
adc
mov
jmp
std
int3
subl
stos
dec
lods
adc
test
push
push
push
lret
mov
push
or
mov
push
jae
sbb
decb
dec
out
les
ja
and
mov
xorl
pop
xor
ret
repz
jmp
inc
enter
into
andb
pop
rcrl
cmpl
inc
hlt
jbe
and
jb
mov
ss
ret
xlat
mov
jl
adc
pop
sahf
popa
jns
mov
mov
outsl
mov
xlat
aad
sub
fcom
and
daa
push
ja
jae
pop
jb
pop
inc
mov
add
jb
dec
inc
pop
sub
stos
push
or
jmp
jp
mov
in
pop
cmp
sub
cs
push
jmp
push
xor
je
push
dec
in
xor
shlb
cmpsb
xor
dec
xchg
shrl
fistpll
sub
and
add
xchg
jg
cmp
pushf
sar
adc
pop
in
dec
dec
sub
sbb
in
clc
in
loopne
fimuls
jp
hlt
jae
lock
xchg
push
cmpsb
ret
and
jmp
and
fnstcw
pop
add
sub
xchg
bsf
mov
clc
outsb
arpl
arpl
fldcw
js
andl
in
pop
pushf
adc
mov
jl
sub
jb
repz
out
sub
jmp
daa
cmp
lret
js
xchg
popa
cmp
jmp
mov
jbe
test
das
and
jle
mov
sbb
jnp
inc
repnz
mov
sbb
and
add
pop
sub
and
mov
popf
mov
rcrb
add
pop
pop
cmc
inc
xchg
bound
add
add
jbe
xor
cmpsl
or
push
cwtl
cwtl
xor
or
push
js
pop
hlt
xchg
in
pop
xchg
mov
out
aam
cmp
push
aam
movb
push
addl
aad
push
push
sbb
lods
dec
mov
fwait
pop
xor
shll
cmp
out
cmpsl
lds
xrelease
aas
adc
mov
fnstcw
dec
inc
xchg
add
xchg
push
jno
jo
push
pop
pop
push
arpl
jae
push
into
jecxz
pop
fsubr
ss
pop
enter
dec
nop
in
popa
nop
fbld
lret
and
sbb
xor
test
xchg
add
jnp
pushf
and
mov
repz
jo
bound
pop
mov
outsl
xor
aas
cld
sub
add
and
push
roll
jns
inc
ljmp
sub
lds
xchg
stc
sbb
xor
push
in
ja
ja
and
loop
xchg
cs
xchg
add
iret
add
repnz
push
mov
push
mov
add
dec
sbb
mov
push
inc
mov
mov
movsb
inc
popa
adc
push
xchg
movsl
dec
insb
cmc
adc
sub
mov
and
dec
xor
jl
neg
dec
mov
jb
dec
sbb
mov
dec
or
arpl
in
xor
sub
subb
xor
lret
loop
out
lret
push
cmp
xchg
mov
cmp
xchg
and
dec
test
iret
pushf
in
sub
popf
into
movsb
cmpsl
dec
jb
popa
stos
inc
mov
xor
xchg
inc
inc
push
std
or
lds
add
mov
add
mov
rcrb
cld
and
aam
push
jl
mov
stos
ret
dec
xchg
fiaddl
shlb
insb
lret
sti
insl
mov
lcall
ja
mov
sub
inc
jns
inc
daa
mov
or
lret
mov
je
mov
xor
testl
fwait
fs
xor
mov
insb
xor
js
test
lret
jo
dec
fistps
mov
iret
push
push
cmp
push
imul
mov
int
mov
sub
jnp
add
sub
mov
inc
ss
stos
inc
cltd
gs
mov
nop
cwtl
jb
dec
call
xchg
push
stc
lahf
jbe
cmp
and
outsl
pop
cmpsb
sub
int
movsb
test
bound
cwtl
stos
push
add
jae
leave
xor
jle
adc
ds
and
mov
jp
cmp
sbb
std
js
and
and
or
cmp
arpl
and
mov
add
mov
mov
in
inc
arpl
push
inc
pop
pop
out
sbb
mov
adc
insb
add
push
mov
mov
bound
cs
mov
cltd
push
adc
int
mulb
mov
sarl
push
xchg
and
jbe
jbe
jo
mov
push
pmullw
insl
jb
aaa
adc
sti
aas
cvttps2pi
jbe
and
mov
clc
outsb
and
mov
data16
les
inc
js
bound
mov
inc
fbstp
out
pop
dec
ret
mov
sbb
stos
mov
inc
insb
cli
scas
pushf
ret
cmp
inc
arpl
clc
hlt
popa
lret
inc
fwait
outsb
dec
push
sbb
cmp
xorl
sarl
adc
out
das
jnp
cli
dec
mov
stos
into
lods
adc
rol
mov
ljmp
and
and
sub
mov
inc
das
mov
stos
adc
scas
xor
aam
push
add
pop
fcomps
and
xor
sti
push
shlb
sub
adc
and
bound
and
mov
cmpsb
loope,pn
push
popf
call
out
and
jne
and
fwait
cmp
mov
mov
filds
dec
andl
ds
add
iret
repz
into
shl
push
pop
or
cltd
and
push
mov
fildll
test
testl
mov
fwait
cli
fdivl
and
int
and
into
movsl
fbld
es
inc
loope
pushf
mov
cs
sti
cmp
arpl
mov
xlat
sarl
push
js
sbb
rorb
fdivrs
or
jp
movsb
adc
add
mov
jae
fnstsw
shrl
inc
fcmovne
les
and
int
mov
push
stos
add
sub
jae
fisttpl
movsb
outsb
push
add
push
repnz
stc
movsb
sub
push
mov
lea
scas
xor
cmp
je
enter
dec
dec
inc
test
ret
popa
xor
int3
xor
fisubrl
fsubp
xor
incb
es
fdivs
sub
roll
faddl
push
jl
addr16
rclb
or
idivl
lsl
adc
sbb
jns
and
push
mov
sti
scas
ja
add
test
ja
add
mov
mov
sub
std
test
xor
sub
popa
sti
and
enter
iret
and
xor
js
sub
lods
mov
and
lret
pminub
cmp
dec
sub
xchg
loop
inc
jo
mov
and
lock
mov
jb
inc
jo
jne
or
repnz
sub
cmp
loop
movsb
fisttps
or
loopne
out
aam
dec
push
add
arpl
adc
notl
xchg
pop
cmp
add
xor
in
pop
xorb
stos
mov
cmp
sub
cmc
xor
divl
adc
mov
fnstsw
inc
sub
leave
push
mov
xlat
jo
into
adc
int3
decb
push
or
mov
jmp
lock
mov
dec
fldt
xchg
fwait
lods
mov
sti
and
ds
jb
jg
sub
cltd
mov
sub
lock
sbb
mov
xchg
xor
test
add
idivb
dec
dec
push
adc
jnp
cmp
inc
or
repz
ja
mov
push
jns
aaa
lods
lds
xchg
cmp
lds
xchg
jno
pop
dec
pushf
imul
mov
cmp
arpl
inc
popa
test
pop
xor
adc
sahf
inc
or
std
and
push
fildl
inc
aad
out
or
adc
sbb
std
inc
jne
mov
inc
lret
add
dec
ja
jb
scas
and
cld
mov
jbe
call
test
inc
std
aaa
and
in
xchg
rorl
pop
mov
jno
inc
hlt
adc
adc
cli
fsubs
rcl
adc
jge
mov
jmp
xor
out
or
out
cmp
xor
mov
je
call
lock
or
fmull
or
movsb
jmp
out
mov
in
mov
jg
mov
mov
jns
test
imul
push
push
enter
fadds
and
mov
sbb
lock
out
aad
pusha
add
push
bound
adc
adc
and
add
bound
ret
lods
insl
loopne
jnp
xorl
or
aam
mov
xor
add
pop
in
movsl
imul
shll
push
adc
je
scas
xchg
jge
xor
xor
xlat
cmp
mov
lahf
pushf
push
icebp
xchg
dec
aaa
push
jge
jae
or
mov
inc
lds
add
pop
inc
pop
adc
clc
xor
leave
mov
sbb
and
pop
in
add
inc
call
std
js
xlat
or
jbe
shlb
pop
clc
popl
xchg
dec
pop
xlat
ja
mov
dec
jge
pushf
adc
xor
push
mov
jp
sub
ss
add
xchg
bound
or
inc
orl
jae
mov
push
and
jb
xor
xchg
clc
pop
xor
fwait
jbe
sub
imul
int
mov
cmp
push
inc
pop
mov
les
add
add
fs
rorl
pop
mov
lret
xchg
fs
lods
push
popa
bound
cs
cmpsb
cmp
mov
mov
out
push
cs
scas
add
movsb
jmp
scas
xor
pop
popl
sbb
xchg
cmp
inc
and
loope
or
and
popf
addr16
xor
or
sub
aad
pusha
icebp
scas
jae
and
int
xor
cmp
stos
sbb
fldt
add
push
xchg
inc
mov
and
push
shll
jbe
and
pop
and
add
lret
push
or
add
movsl
ds
and
mov
int
jno
leave
les
xor
fbstp
xchg
shl
enter
dec
imul
pop
scas
cmp
pop
out
aad
pop
icebp
or
pop
in
scas
pushf
add
sub
lret
add
sbb
push
cmp
daa
inc
and
ljmp
sahf
add
aam
dec
incb
int3
inc
fistpl
rcl
add
jecxz
add
das
sub
movsw
lret
jae
fidivrs
aaa
decb
out
arpl
pusha
add
sbb
or
add
testl
mov
sub
sub
xor
and
movsl
fbstp
adc
dec
and
in
and
xchg
and
lea
insl
xor
xor
cmpsb
pop
xchg
adc
push
add
lahf
dec
mov
cmpsb
jmp
mov
cmpsb
xor
aad
lods
pop
fdivs
lea
outsl
sahf
popa
add
clc
push
in
push
sahf
lods
fs
dec
ds
pusha
es
adc
into
fistpl
popf
je
in
xor
xor
push
cmp
mov
add
adc
xor
xor
ret
je
rorb
ja
jecxz
mov
mov
add
test
jmp
jbe
push
or
mov
rcrb
sbb
hlt
das
shll
cmp
pop
rorb
test
daa
mov
and
jb
mov
and
leave
pop
add
fxch
pop
dec
enter
in
int
enter
adc
lods
insl
enter
aas
popf
je
int
cltd
in
inc
jae
cld
icebp
clc
sbb
les
loope
inc
push
jno
pop
push
xchg
loope
cmpl
jns
xor
cmp
hlt
mov
in
divl
lods
popf
dec
lret
clc
mov
xchg
push
mov
mov
push
push
enter
maskmovq
divl
pop
push
inc
jne
shrb
bound
cmp
test
adc
addl
clc
fistpl
popf
xchg
pop
cmp
fistpl
popf
xchg
lods
push
cmp
mov
push
mov
movsl
sub
insb
fistpl
popf
je
dec
inc
cmp
inc
jle
or
cmp
jle
insb
dec
sub
shlb
lods
mov
sub
mov
cmp
inc
fisttpl
adc
popa
xor
push
bound
pusha
dec
xor
inc
add
aad
mov
test
mov
ja
pop
dec
jge
mov
push
xor
lret
and
clc
fiaddl
add
inc
push
scas
mov
pop
cli
jg
add
sub
hlt
test
sub
loop
popa
bound
push
dec
inc
mov
cmpsl
jl
ret
gs
out
xchg
mov
daa
test
mov
xorl
mov
adc
mov
ret
pop
xor
lods
mov
pop
mov
aam
jb
and
repz
inc
sbb
sub
inc
movl
jge
and
jecxz
mov
mov
popa
xchg
arpl
lcall
xlat
aam
popf
shll
nop
cmpsb
sub
shlb
loope
sub
xor
and
les
cmp
shrl
push
fmul
cs
xlat
je
push
pop
inc
push
call
js
push
aad
arpl
adc
ljmp
fwait
xorl
clc
xorb
sbb
fistpll
pop
das
jno
adc
test
sbb
push
aad
arpl
lods
subb
clc
xorb
sbb
mov
or
sbb
add
cmp
ss
fucomp
mov
cmp
dec
lahf
or
lods
add
adc
push
test
cmp
loop
setb
jb
mov
and
push
mov
xchg
and
lahf
repnz
mov
or
scas
sub
adc
rorb
sbb
or
cmpsl
addr16
pusha
mov
and
jbe
ret
aaa
andl
xlat
ficompl
sti
xor
xchg
cmp
punpcklbw
pop
mov
movsb
sub
test
push
lods
mov
push
std
cwtl
subl
clc
mov
sub
mov
cmp
pop
popf
je
mov
shrb
jnp
pop
sti
jmp
and
sbb
popa
inc
jne
lods
stos
cmp
xchg
ret
sub
std
jo
jmp
mov
test
mov
jno
rclb
arpl
lahf
sti
or
push
mov
xchg
dec
imul
jle
gs
add
repnz
or
sbb
insl
push
add
lods
leave
add
vaddss
inc
out
inc
cmp
sti
ret
jno
lock
cmpsl
jecxz
sbb
imul
dec
mov
cwtl
ljmp
scas
mov
or
inc
ret
stos
mov
or
pop
cmp
add
jae
int
cmpsb
mov
cmp
sbb
and
push
mov
das
pushf
sti
movsl
mov
push
mov
fcomi
rcrb
adc
push
or
add
rolb
notl
mov
sbb
adc
in
jno
rorl
cmp
std
clc
mov
sub
pop
lock
lret
cmp
cmpl
adc
jbe
adc
in
adc
idivl
sbbb
jmp
testb
dec
scas
imul
push
mov
xor
cpuid
adc
sti
cmp
pop
cmc
push
jo
fndisi(8087
popf
xor
dec
shll
dec
xchg
subl
cmp
mov
ror
shll
jle
cmp
sbb
test
adc
mov
das
add
push
push
xchg
div
push
mov
fmul
sub
sbb
movsb
mov
bswap
pop
cld
rcll
xchg
repz
pop
xor
xor
and
jg
cmc
add
sub
dec
xor
daa
icebp
adc
pop
insb
adcb
nop
std
inc
jno
js
cli
jae
mov
adcb
adc
leave
js
ds
imul
push
cmc
std
popa
push
jb
daa
aaa
mov
fsubl
fwait
pushf
iret
dec
hlt
cltd
ds
into
rorb
push
mov
pushf
cwtl
pop
xchg
das
ret
dec
jne
xor
inc
and
in
shl
ret
jecxz
dec
mov
xlat
lea
aam
push
dec
mov
pop
add
sahf
push
ds
cmpsb
and
mov
jno
mov
jnp,pn
in
and
gs
cmp
xor
mov
sub
xorb
sbb
scas
test
loope
pop
in
inc
jle
dec
mov
call
push
test
jo
mov
cmp
inc
cmp
sti
je
paddw
mov
stos
mov
jo
fstps
jge
movsb
push
popa
icebp
ja
hlt
or
mov
mov
xchg
jmp
xchg
add
in
mov
ds
jmp
sbb
sti
sub
push
mov
xchg
mov
or
jbe
insb
xchg
add
cwtl
sbb
cmp
mov
out
idivl
push
call
rclb
and
popf
xor
dec
pushf
cmpsb
lahf
stc
addl
jbe
repnz
mov
inc
add
dec
je
in
movsb
fwait
cmp
inc
cltd
cmp
shrl
lds
mov
in
add
aam
dec
fst
call
xchg
in
sbb
adc
sub
xor
xchg
dec
adc
aam
adc
sbb
mov
push
cli
jne
mov
test
mov
push
xchg
js
mov
fldenv
or
roll
jmp
adc
sub
sbb
js
es
inc
dec
andb
cmc
push
xorl
ja
mov
xchg
mov
ds
cld
fs
daa
add
and
sahf
sbb
xchg
call
cs
or
add
popa
adc
adc
int3
lret
sub
pop
data16
fsubr
repnz
dec
xchg
sahf
adc
pop
pop
mov
inc
adc
jbe
roll
sbb
adcl
push
pop
push
fdivrp
push
adcl
mov
dec
jmp
in
dec
pusha
adc
xchg
ficoms
pop
add
sub
divl
outsb
test
mov
ret
das
or
movsl
push
inc
test
xorb
test
jae
mov
adc
icebp
fs
or
sub
jmp
mov
mov
subps
daa
push
js
lock
jecxz
or
repnz
inc
push
pop
cld
inc
scas
fldenv
or
or
in
fcoms
in
adc
inc
or
icebp
cmp
sahf
cmp
ljmp
aad
inc
icebp
add
jne
out
test
jl
gs
je
int3
fisttpl
xlat
jb
fildll
shl
pusha
scas
xor
gs
mov
dec
jb
lods
fidivs
jp
push
jbe
push
add
movsl
es
xor
ret
aas
xor
and
mov
in
dec
add
add
data16
mov
or
jbe
or
inc
lods
inc
inc
mov
push
pop
insb
inc
scas
pop
shl
lret
dec
and
dec
inc
scas
cmp
inc
icebp
dec
clc
xchg
lods
aad
inc
xlat
ja
ret
mov
jb
or
sbb
les
inc
dec
bound
cltd
jne
pop
cmpsb
jae
test
divl
push
cltd
sbb
cmp
mov
test
in
mov
out
aam
fnstcw
jne
cmp
inc
in
or
inc
cs
xchg
pop
jbe
pusha
pop
je
in
aad
inc
add
mov
jno
cmp
jecxz
adc
jae
clc
pop
shlb
or
cmpsb
jmp
andb
cmpsl
lods
out
or
in
and
jno
mov
and
mov
dec
xor
inc
and
in
jae
pusha
pop
js
out
cmp
cld
ljmp
inc
popa
or
mov
jo
and
mov
mov
imul
cs
call
js
cmp
in
cmp
push
inc
mov
fildl
shll
call
pusha
fwait
xor
gs
cmp
cmp
ds
inc
inc
aaa
sbb
ret
cld
insl
subl
not
cmp
push
lcall
push
fucomp
inc
push
pop
sbb
inc
or
cmp
cmp
aad
shl
cmp
dec
in
ja
sbb
add
push
mov
jmp
stos
adc
ss
pop
sbb
dec
jo
mov
fnstenv
pushl
movsl
xor
bound
stos
lods
imul
mov
fbld
xchg
lret
mov
std
rclb
in
das
outsl
in
out
xor
sbb
mov
cmp
clc
inc
rcrl
arpl
inc
enter
pop
cld
lahf
incb
sbb
jae
push
fnstcw
lods
jg
cmp
ss
fbld
loop,pn
jecxz
jecxz
das
push
sti
addr16
pop
jmp
push
daa
mull
push
ljmp
mov
std
dec
jae
sub
push
sbb
sub
inc
fldl
cmp
push
call
sbb
fs
mov
pop
idiv
sti
outsb
sahf
popa
in
loope
loop
mov
rcl
addr16
inc
movsb
push
xchg
std
xor
add
jne
lods
ja
loopne
cmpb
sub
or
cs
jne
mov
lds
arpl
or
xor
xchg
pop
mov
jae
std
cmp
cmp
xor
fcomip
mov
cld
shrb
fistpll
mov
aaa
mov
les
mov
push
rorl
testl
ds
ficomps
loop
mov
rorb
orb
cmp
cmp
xor
fisubs
mov
loopne
cmpsb
xor
mov
mov
loopne
das
sbb
pusha
lcall
les
shrd
push
cmpsl
pop
inc
fcmove
pop
push
test
jno
in
fstpt
popf
xor
rorb
xchg
lret
cli
or
cli
mov
cmp
cmp
stos
sbb
mulb
sub
cli
lret
push
shlb
adc
pusha
dec
in
mov
sbb
enter
fistpl
mov
leave
or
test
es
movsb
jmp
cmp
dec
ret
les
pop
std
inc
inc
jp
xchg
ror
xchg
xchg
sarl
ficompl
mov
jge
mov
jmp
push
jmp
fs
pusha
cli
inc
push
mov
inc
jae
push
xor
daa
xchg
rcrl
inc
popf
je
in
dec
sub
sbb
lahf
adc
push
pop
sti
dec
pop
pushf
mov
call
mov
adc
cli
in
pusha
testl
sti
aas
sbb
sti
mov
arpl
cmp
mov
enter
push
mov
and
mov
rorb
fidivrl
xor
leave
mov
or
jl
sarb
xor
ret
les
inc
in
dec
stos
insl
sahf
mov
loopne
lcall
out
mov
jbe
clc
pop
add
test
mull
hlt
sub
addr16
shlb
leave
mov
leave
jnp
cld
push
in
inc
ljmp
jae
mov
jmp
xor
stc
sub
fcomip
insb
xchg
push
push
sub
or
mov
fidivrl
js
hlt
sub
pop
bound
dec
and
clc
pop
jno
sbb
daa
repnz
add
mov
jp
dec
lods
adc
movsl
pop
dec
jge
mov
adc
dec
sub
cwtl
mov
cli
test
ret
jg
addl
xchg
pop
mov
dec
test
repz
mov
out
cmpsl
data16
xor
xor
js
stos
imulb
cmp
or
sbb
stos
xor
mov
pop
mov
xor
mov
push
mov
and
pop
lods
pop
fcoms
jg
cmp
mov
dec
jge
mov
jmp
std
sbb
mov
jns
dec
or
mov
and
mov
rcrb
pop
sub
test
cmp
or
std
cld
sbbl
xorl
loope
mov
jle
push
cmpl
push
mov
and
pop
fmuls
xor
loopne
aaa
push
jae
adc
enter
push
mov
and
xchg
lods
pop
fdivrs
decb
cmpl
js
push
scas
ds
imul
test
icebp
loope
inc
mov
xchg
sahf
popa
shl
fadd
or
mov
mov
repnz
shlb
xor
testl
fldt
pusha
add
lock
xor
xor
loop
mov
in
mov
xor
sti
push
fcmove
xchg
push
icebp
lock
push
jne
push
popf
mov
xchg
pop
add
jb
xor
adc
lock
or
pop
dec
pop
insl
ret
mov
sub
mov
in
push
sub
test
mov
pop
xor
dec
negb
pop
inc
jne
mov
mov
data16
mov
push
cmpsb
xor
lds
cmp
mov
sbb
sbb
dec
test
sub
mov
cmp
inc
enter
out
inc
rorb
fcmove
dec
push
push
lock
push
sub
stos
cmp
push
bound
push
cmp
ret
cmp
movsl
cmp
inc
int
adc
imul
jne
mov
into
fiadds
cmpsb
ja
shlb
lods
test
mov
push
or
int
shl
lcall
mov
mov
adc
movsb
fildl
xchg
test
dec
push
push
stos
or
je
adc
sub
into
push
sbb
leave
push
out
inc
xor
pop
xor
mov
repz
test
mov
inc
or
iret
jle
addr16
loopne
pop
sahf
cwtl
aaa
push
rcl
ficomps
mov
outsb
insl
cwtl
sahf
xor
repnz
mov
xchg
stc
mov
loop
inc
pop
mov
stc
sysexit
fucomi
cltd
mov
or
rclb
pushl
mov
adc
mov
es
push
or
std
pop
shlb
cmp
adc
rclb
in
insb
pop
pushf
add
lcall
sub
mov
and
push
jne
insl
push
data16
in
movsl
sbb
mov
jl
jle
mov
into
test
out
cs
mov
ret
das
cmp
cmpsl
rcr
insb
fs
add
mov
pop
mov
xchg
ljmp
rcll
sti
and
les
cmp
dec
adc
movsb
and
pop
xchg
and
rcll
push
call
iret
or
iret
not
cmp
dec
inc
test
lds
stos
pop
sbb
fistl
pop
inc
mov
call
xor
mov
dec
mov
pushf
mov
xor
imul
push
ljmp
into
leave
cmpsl
ror
or
rorb
aaa
in
mov
movmskps
ja
iret
cmp
pop
mov
jg
inc
jno
movsb
push
sahf
cld
jne
sub
ja
into
cmp
mov
cli
push
inc
mov
lahf
and
cmp
and
fnstcw
ljmp
inc
iret
leave
cmpsl
das
iret
or
iret
or
and
pop
sub
cmp
and
aad
and
arpl
repnz
push
inc
push
adc
dec
inc
js
pop
dec
movsl
les
test
notl
lock
dec
std
out
pop
movsb
cmpsb
lds
sbb
xor
dec
jp
pop
cmp
movsb
push
and
jbe
out
bound
sbbb
cmpsl
dec
int
inc
js
or
pop
push
sbb
ss
aad
push
hlt
xchg
push
add
inc
push
inc
mov
in
push
jmp
xor
fsub
jne
and
dec
dec
jae
mov
push
inc
or
in
bound
jnp
add
leave
inc
inc
lcall
imul
adc
xor
xor
or
jne
aad
ja
enter
leave
test
or
inc
xchg
in
push
inc
jecxz
jbe
in
bsr
ja
cmp
cmpsb
leave
lret
or
in
jg
ret
int
xor
dec
dec
clc
pop
adc
sbb
testl
or
inc
cmpsb
add
sbb
leave
push
divb
ss
std
add
sahf
test
rclb
xor
ret
in
subps
or
push
jp
dec
mov
push
adc
mov
int
fdivrp
mov
popf
and
fstl
gs
jp
push
push
sti
cli
sub
iret
loopne
push
leavew
xor
cwtl
fdivrp
push
xor
push
jecxz
xor
lock
adc
addr16
cld
mov
inc
ds
in
inc
fucomp
jae
dec
add
addl
rolb
push
icebp
mov
cmpl
pusha
and
or
dec
daa
lds
enter
shll
xchg
or
push
fistl
or
push
decb
insb
add
jge
ljmp
pop
cmp
daa
mov
add
sub
jnp
stos
add
push
sub
in
push
mov
mov
xor
dec
in
xor
mov
push
mov
pushf
cmp
data16
xor
mov
pusha
ljmp
jmp
push
mov
sub
inc
push
pop
mov
mov
shl
push
in
iret
push
or
add
mov
fwait
mov
cmp
hlt
mov
inc
aam
xor
lods
pop
xor
in
push
int3
mov
outsl
fwait
push
cmp
das
scas
ret
inc
and
sub
cmp
pop
out
andb
mov
nop
rorb
rcrl
jp
inc
call
mov
push
cmp
daa
stc
lock
scas
push
nop
aad
clc
xor
scas
push
test
xor
fstpt
repnz
adc
ss
mov
cs
call
or
int3
push
jl
rorb
outsl
rolb
mov
ja
xor
mov
sub
call
push
in
mov
fstps
add
jmp
xor
aaa
add
mov
out
lods
pushf
cmp
dec
out
sbb
xor
das
inc
int3
xchg
cli
mov
les
popa
lea
jp
out
insb
fwait
movsb
adc
inc
sub
inc
cld
cwtl
jmp
shrl
sbb
mov
cmpsl
mov
leave
sub
mov
fidivrs
sub
mov
adc
mov
ljmp
mov
cmp
dec
daa
inc
cli
imul
adc
in
repz
inc
movsb
mov
sub
and
push
pop
mov
daa
jecxz
scas
sbb
or
in
divl
clc
mov
jl
cmp
push
adc
pop
js
lods
leave
lea
cld
stc
call
icebp
jno
pop
vmovhpd
das
sub
js
sub
jmp
inc
movsb
push
test
push
mul
fstpl
mov
cs
out
mov
std
movsl
mov
jo
dec
jne
daa
inc
data16
jecxz
xchg
dec
scas
fcompl
sbb
add
lea
jmp
dec
fsts
mov
mov
inc
test
xlat
push
adc
lock
mov
test
mov
jno
ficoml
add
test
and
or
lods
sub
cwtl
dec
lods
out
sub
mov
fidivrl
test
jecxz
adc
xchg
dec
adc
sbbb
adc
cmpsb
jns
loopne
mov
xchg
dec
jne
cmpsl
dec
data16
loope
jbe
loopne
cmp
cmp
loop
xor
je
repz
andl
xchg
hlt
rclb
js
fdiv
into
or
out
call
ja
and
in
xchg
add
dec
rclb
test
inc
dec
jne
push
dec
data16
loopne
mov
mov
dec
jne
orb
fbld
xor
inc
sub
repnz
testl
cmp
sub
icebp
jl
cld
jmp
mov
fsubrs
xor
repz
and
push
push
ljmp
xlat
call
mov
xchg
call
dec
mov
mov
xchg
adc
cmp
sbbb
addl
sti
xor
pop
pop
push
lods
cmp
aas
clc
lods
push
nop
sbb
or
jns
aaa
mov
fsubs
inc
mov
push
sub
inc
aas
addr16
and
das
xor
xchg
mov
lock
dec
push
sbb
repz
into
lahf
add
test
inc
into
mov
ss
add
shrb
sub
cmp
dec
pop
int3
inc
fdivs
jb
inc
xchg
or
test
xchg
mov
dec
cli
jg
adc
movsl
adcl
pop
xchg
lods
outsb
pop
add
bnd
fnstsw
js
xchg
inc
dec
fcoms
or
stos
addb
xchg
ljmp
roll
negb
call
pop
jmp
mov
bound
rcrl
je
out
mov
out
test
fsubrs
pushl
scas
jae
push
dec
lock
repz
out
inc
fstps
popf
xor
aas
or
push
sub
dec
xor
call
insl
fstpt
pop
push
in
loopne
imul
or
rol
repnz
loopne
pushf
pushf
insl
xlat
shrl
stos
outsb
ja
adc
cli
cli
or
aad
adc
mov
xor
movsl
fcmove
add
sbb
jge
inc
test
adc
xor
mov
iret
test
sub
mov
inc
repnz
mov
repz
fucomp
push
adc
sub
jmp
sbb
cmp
mov
mov
test
cmp
out
dec
lret
mov
in
stc
inc
popa
cmpsb
out
scas
lcall
cld
xchg
xchg
in
std
add
mov
cmp
movzwl
sbb
jl
ret
xchg
sub
sub
test
les
sbb
sti
xor
xchg
jmp
enter
out
test
xchg
and
mov
dec
sti
outsb
push
bound
sub
xor
add
je
jne
or
int
jno
fildll
clc
mov
leave
out
add
lock
lret
shrb
pushf
jb
shrl
jle
repnz
lods
aam
neg
lret
sbb
insl
call
xchg
xor
jge
mov
adc
adc
fsubs
xor
mov
adc
aam
setp
or
or
arpl
inc
push
xchg
negl
sub
pop
cmp
xor
xchg
inc
iret
aas
fwait
mov
js
xchg
in
mov
add
cmpsb
jns
fstps
or
inc
ds
in
and
or
cmp
inc
jp
stc
mov
daa
sub
fists
popf
pop
fs
fadd
decb
cmp
stos
adc
movb
shlb
push
roll
fstpt
cmp
inc
jge
movsb
sbb
or
push
ljmp
jnp
xor
inc
xchg
push
sub
fnstsw
fadd
incb
cld
dec
cmp
sub
inc
inc
lods
xlat
mov
nopl
sub
cmp
nop
sbb
mov
add
mov
or
cs
out
mov
fldcw
push
in
mov
das
outsb
mov
addr16
les
or
sbb
dec
nop
dec
testl
adc
scas
iret
lret
icebp
fcmovnbe
in
rcrl
pop
shrl
test
jecxz
mov
cmp
test
xor
pusha
xchg
xor
js
push
les
inc
lahf
bound
lods
cmp
iret
enter
lods
hlt
mov
lods
aad
pcmpgtw
orb
lds
and
jge
stos
mov
fiadds
pop
aas
inc
lock
ljmp
stc
mov
lret
gs
mov
adc
fs
js
mov
xchg
shl
mov
stos
sub
xlat
mov
int
fistpll
jae
insb
cmp
and
cmp
aaa
ss
sahf
div
and
std
mov
pop
aam
push
xchg
js
mov
les
inc
xchg
bound
pop
outsb
cmp
test
idivl
lahf
jns
sub
push
cmp
pop
lock
rcr
inc
jbe
ja
subl
xlat
data16
nop
insb
mov
mov
int3
movsb
push
cli
int3
xor
xchg
jne
xchg
int
mov
cmp
mov
or
mov
movsl
inc
das
cmpsb
inc
dec
les
icebp
jbe
subb
jb
mov
dec
mov
enter
rcrb
mov
das
clc
mov
divl
scas
gs
add
les
bound
pop
cmp
aad
and
xorb
ret
dec
sub
stos
xor
cwtl
fnclex
jp
jle
bound
dec
pop
ss
pop
xor
sbb
pop
cmp
mov
push
add
nop
lock
aad
pop
dec
ret
stos
cmp
sbb
imul
lods
mov
sahf
cltd
dec
movsb
outsb
cmpsb
insb
movsb
xchg
mov
fcomps
stos
je
xorb
xor
lcall
sub
fcmovne
lret
cmp
cmp
ss
lods
cmp
fisttps
dec
negb
data16
lahf
scas
cli
inc
in
jb
dec
inc
fnstsw
mov
mov
ss
testl
add
dec
ljmp
enter
cmp
inc
sarl
out
aad
add
cmp
test
scas
scas
add
dec
movsb
jmp
jo
xor
addr16
insl
lods
pusha
int3
xor
data16
in
xor
fcmovnb
in
fst
xor
ficomps
adc
mov
lds
and
test
mov
push
push
cmp
testl
dec
jae
leave
or
movsl
int
inc
xor
dec
pop
xor
pop
ljmp
test
xor
stos
addr16
les
jnp
pushf
push
fwait
mov
push
add
sahf
cmp
sti
aad
inc
push
sub
and
ret
ret
cmp
out
aad
add
insb
mov
fisttpl
dec
ljmp
xchg
les
inc
push
outsl
incl
enter
shr
stos
mov
add
divl
lahf
mov
sub
test
dec
add
les
cmp
xorps
je
iret
mov
inc
int
push
mov
ja
test
andb
enter
cld
jp
data16
cltd
js
cmp
or
test
cld
mov
lret
xchg
fcmovnb
shlb
test
das
mov
stos
gs
movsb
mov
ret
aad
jg
cmp
stos
cli
mov
jbe
enter
pop
add
cmpsb
gs
sti
jo
ret
xlat
testl
aad
cld
icebp
xchg
jge
fistl
push
lret
sub
ret
cmpsl
mov
das
dec
test
andb
ret
jb
sub
xor
pop
sti
fildl
jne
cld
movsb
mov
test
imull
jb
push
stos
xor
leave
jns
and
sti
inc
cmp
lret
fmull
cmpsb
jno
dec
fildl
add
into
sub
sub
push
fld
xor
out
ja
test
test
pmullw
das
and
loope
and
or
aad
gs
mov
adc
push
jo
popf
pop
xor
in
mov
mov
sti
stos
insb
les
loopne
bound
test
rolb
movsl
mov
das
shlb
int3
stc
mov
les
inc
mov
and
inc
negl
pop
ret
mov
xchg
or
cmp
inc
xlat
fldt
ret
inc
cli
mov
mov
inc
push
mov
or
mov
xchg
dec
mov
clc
pop
inc
sub
test
imulb
mov
dec
inc
add
or
sub
sbb
xor
sahf
sbb
int
and
cmpsb
cld
nopl
jno
fcoml
inc
inc
or
stos
adc
jp
sbb
pop
inc
xor
adc
cli
push
xor
mov
jne
xor
sbbb
leave
cmpsl
sub
or
mov
pop
and
cld
out
mov
jae
popf
cs
mov
shll
shll
mov
adcb
or
lahf
or
negb
pop
fcomi
scas
cmp
imul
aad
idiv
dec
xor
lods
push
sub
jge
mov
sub
sbb
rol
and
jl
sub
idivb
lret
in
mov
jecxz
mov
pusha
jmp
mov
js
repz
les
cmc
pop
dec
hlt
adc
push
out
in
notl
pop
or
ret
stos
les
testb
stc
dec
out
and
sbb
mull
lahf
xchg
sub
fstpt
das
shlb
gs
mov
cmc
repz
mov
hlt
add
sbb
and
sub
dec
sub
push
inc
push
js
bound
and
shlb
lods
adc
rcrl
jge
mov
mov
push
int
cmp
sti
cmc
inc
jne
in
cmp
int
lahf
xchg
pop
xor
sbb
jb
shrl
inc
insb
in
add
into
pop
mov
ss
into
arpl
push
pop
mov
inc
mov
int3
adc
rcll
push
add
sub
add
add
cmp
mov
sub
enter
xchg
and
fadds
enter
dec
stos
mov
or
dec
into
cmp
scas
outsl
repnz
divl
pop
fmull
xor
lods
xor
lods
pop
fsubrs
add
daa
popf
je
mov
sub
and
add
push
cmpsb
outsb
andl
and
or
fstpt
stc
and
adc
sbb
mov
sahf
imul
call
add
add
js
fcmovu
mov
cwtl
xor
js
sub
fs
and
notb
cmp
addr16
jecxz
insl
sarl
xlat
mov
imul
sti
setl
sub
jne
add
lods
test
adc
mov
jns
dec
cli
inc
in
pop
sub
mov
inc
arpl
mov
xchg
bound
mov
cmp
cmp
bound
incb
xor
cmp
fs
inc
popf
ds
mov
jnp
ja
cmp
popa
data16
in
stc
inc
sub
cmp
jae
adc
pop
mov
add
test
sbb
dec
lods
jmp
sub
fs
std
inc
xorb
sarb
mov
bound
repz
aas
mov
inc
lcall
pop
scas
outsb
int3
dec
push
std
xor
std
sub
mov
sub
inc
aas
inc
sbb
cli
stos
sub
jp
inc
fidivrl
jg
nop
cmp
sti
into
jg
rorb
and
in
inc
cld
mov
add
xchg
iret
mov
test
or
mov
push
jp
inc
mov
std
jae
pusha
mov
push
xlat
ja
cmp
sti
sbb
sbb
or
cmp
test
jo
ljmp
cs
inc
push
js
sub
sti
push
sub
negl
pop
mov
xor
cmp
xor
mov
outsb
push
icebp
pop
sbb
sub
fimull
in
add
xor
xchg
enter
in
inc
mov
cmp
xor
fdivrs
jmp
xor
insb
xor
push
sarb
int
ror
jg
sbb
add
mov
fimuls
pop
adc
and
ja
mov
enter
ss
mov
xchg
inc
rorb
pop
addl
cmp
mov
jbe
rclb
push
out
stos
outsl
mov
pop
sub
pop
sbb
adc
or
push
je
rcll
je
adc
leave
pop
faddl
or
stc
out
aam
inc
mull
add
fdivrp
rorb
testl
rolw
mov
fisubs
dec
and
add
pop
push
push
xchg
ja
xor
testb
mov
cmp
add
lret
pop
inc
pop
mov
loopne
and
jmp
add
push
cs
xor
cmp
mov
pop
lods
sbb
mov
push
xor
cmpsb
and
pop
sbb
mov
xchg
scas
push
push
mov
mov
dec
fiadds
lcall
shll
lds
gs
lret
cld
mov
into
fs
mov
bound
test
or
mov
push
and
test
out
add
clc
xlat
lea
aad
adcl
jb
or
nop
and
cmp
lret
or
clc
inc
xor
ficoms
fs
neg
xor
cmpsb
cmp
lcall
mov
mov
leave
xor
ret
les
sbb
pop
ljmp
lret
and
gs
mov
mov
div
loope
clc
mov
scas
std
insl
das
stos
aam
dec
aas
mov
mov
mov
push
icebp
in
cs
fmull
lods
scas
incb
lods
add
pop
call
sbb
pop
dec
push
and
cwtl
sbb
xor
pmulhuw
mov
cmp
outsb
lods
lds
sbb
jmp
fs
xor
rcll
xor
loope
jb
xchg
mov
jle
and
or
adc
pop
cmpsl
sbb
and
push
inc
lret
movsb
push
test
imul
std
sbb
pop
fcmovnb
inc
push
jmp
insl
xor
fsubr
cmpsb
add
jle
or
jg
sub
dec
mov
sbb
add
inc
sub
sub
shrl
jnp
mov
faddp
sbb
or
inc
lret
movsb
push
test
imul
mov
add
fcmovnb
inc
cmp
imul
inc
out
add
jle
negb
arpl
dec
ret
xchg
xor
cmc
mov
std
pusha
inc
mov
fcompl
stos
test
push
lods
sub
les
rcl
pop
or
lret
inc
aas
int
inc
push
mov
loopne
neg
dec
popf
je
in
sub
dec
add
inc
xor
mov
nop
push
jecxz
movsb
loopne
inc
cmp
xchg
bnd
dec
inc
xor
inc
in
jne
repz
aas
cmp
jg
arpl
push
adc
sub
sub
jge
sti
mov
inc
inc
mov
in
imul
xorb
out
add
scas
xor
sub
out
scas
inc
psrlq
jmp
sti
movsb
sbb
jb
cmp
mov
sarb
jnp
stos
mov
inc
mov
mov
dec
cs
xor
stc
mov
js
lds
mov
xlat
jno
sub
cmc
hlt
jmp
cli
jle
cmp
mov
movsl
aas
push
inc
cmp
mov
dec
pushf
fldenv
xorl
mov
mov
push
lods
push
mov
xor
inc
repz
icebp
lock
xchg
add
cmpsl
aam
xchg
js
pop
mov
pusha
mov
mov
cmpsb
subl
jne
jbe
jbe
shlb
aad
aas
jo
dec
push
sbb
jb
ficomps
and
out
jae
icebp
xor
jl
push
scas
cs
test
sub
xor
sbb
mov
test
stc
pop
xor
lcall
jo
pop
dec
les
sbb
sbb
loopne
ja
adc
movsl
pop
fcmovnb
sahf
lret
adc
lods
es
loop
mov
add
mov
inc
sbb
aad
hlt
mov
mulb
bound
pop
sub
lods
cmpsl
std
cmpsb
rcl
nop
cmpsb
clc
pop
dec
movsl
sbb
mov
mov
fcmovnbe
add
push
xchg
jge
lea
movsb
jecxz
sahf
cmpsb
clc
pop
xor
push
push
bound
outsb
adc
lret
cli
popf
mov
pusha
pop
movsb
sbb
lods
or
cmp
rcrb
stos
push
push
movsb
sbb
add
push
jmp
sub
ss
prefetch
and
cmp
inc
or
adc
in
sub
outsl
loopne
aaa
xchg
ficoms
mov
test
sbb
test
sahf
inc
loopne
sbb
sbb
cmp
in
inc
or
fwait
out
neg
push
test
xchg
mov
or
cmp
out
cmc
ljmp
jo
mov
por
mov
xor
in
jmp
jl
je
mov
js
mov
xchg
or
rolb
movsl
das
movsl
mov
push
jmp
mov
movsb
dec
leave
inc
js
dec
test
lret
call
pop
add
inc
sub
xchg
sbb
sbb
gs
xchg
bound
mov
or
fcoml
mov
jae
bound
loopne
sub
test
fyl2x
mov
rcl
and
das
sahf
push
adc
out
lcall
lock
mov
call
mov
inc
sti
inc
mov
push
fnstsw
cltd
xor
iret
shlb
jmp
mov
daa
jl
mov
adc
sbb
rcl
jmp
test
movsl
lret
addb
xchg
jnp
js
stos
jbe
add
mov
cmp
lahf
sbb
js
sub
test
sbb
push
imul
sbb
testl
xor
mov
push
mov
cmpsb
sti
ret
cmp
lahf
jle
mov
mov
mov
lods
jae
shll
les
and
shl
mov
das
lods
mov
push
jmp
frstor
stos
inc
sub
scas
in
cmpsb
xchg
jno
daa
fcoms
mov
jo
mov
cwtl
adcb
test
lahf
pushf
push
ja
sub
inc
or
test
add
cmc
inc
cltd
sub
leave
sbb
mov
sbb
cmp
cmp
std
repz
loop
add
cmp
in
xchg
fbld
roll
out
jbe
mov
mov
pop
mov
and
mov
and
out
cmp
aas
and
mov
test
sti
into
lret
pusha
mov
cmpsl
push
out
jb
mov
mov
jge
dec
out
loope
in
mov
adc
xchg
dec
mov
adc
test
inc
xchg
stos
dec
mov
sub
test
sbb
dec
xor
mov
cs
ds
xchg
lcall
xor
mov
mov
stc
sahf
mov
flds
sahf
sbb
popf
jns
jmp
clc
push
lret
mov
dec
pop
stos
add
mov
inc
ss
add
inc
xcrypt-ctr
cmpsl
pop
test
adc
xor
cmp
xorb
lahf
xor
test
jmp
push
add
pop
add
rolb
jg
adc
add
or
lahf
pop
jmp
mov
pop
jb
mov
loopne
inc
push
loop
cmp
aad
or
fnstcw
enter
sbb
push
shll
test
jno
jecxz
push
dec
push
cld
mov
loope
pop
mov
lds
xor
cmp
mov
in
push
setnp
add
lods
cmp
hlt
dec
push
pop
pop
adc
test
cmp
fnsave
fs
lahf
rcr
dec
jne
jg
mov
clc
push
fldenv
mov
jg
push
or
add
inc
aaa
test
sub
stos
sub
sbb
les
adc
cmp
stos
lods
sbb
ja
stc
add
xor
cli
divb
push
xor
mov
pusha
movsb
xor
movsb
xor
cs
jecxz
sbb
dec
push
mov
mov
add
adc
outsb
pushf
or
pop
dec
mov
imul
mov
clc
mov
mov
test
mov
mov
movsl
int3
jbe
adcb
int
xor
cmc
mov
pop
ffree
sbbl
pop
and
test
lods
inc
incb
les
call
ret
mov
inc
fidivs
cmp
out
mov
mov
dec
int3
cli
sub
cmp
xor
mov
in
adc
aas
mov
cmp
lahf
lret
xor
in
adc
jns
xor
outsl
jnp
les
lcall
fstps
cmp
mov
cmpsb
psubw
xor
in
nop
inc
push
shlb
xchg
mov
add
fstpl
hlt
and
ja
mov
movsl
js
outsb
out
inc
pop
xchg
in
pusha
add
mov
pusha
loope
mov
xchg
stc
cmp
outsb
cld
pop
inc
lret
pop
test
mov
loope
add
stos
sub
xchg
jno
push
js
adc
jle
stc
test
ret
popa
jp
sti
mov
out
dec
imulb
and
testl
movsl
imul
xchg
fcmovne
and
gs
xor
in
lock
arpl
daa
jno
push
cs
mov
incl
push
cli
or
and
cmpsl
fdivl
cs
leave
arpl
leave
aas
pop
and
testl
push
jno
cltd
repz
stc
add
sub
lock
xor
mov
adc
add
or
aad
lret
mov
mov
xor
dec
pop
and
mov
mov
push
cmp
dec
ret
add
test
mov
xor
xor
and
insb
inc
push
adc
fstps
mov
pop
lods
daa
adc
mov
pop
xchg
xor
es
repz
adc
add
mov
or
mov
mov
in
aas
mov
ja
aad
cmpsb
add
xor
adc
mov
aas
mov
adc
mov
inc
xchg
sbb
lret
fstl
push
mov
mov
insl
inc
add
in
ret
jae
mov
sbb
pop
lods
inc
cs
mov
jo
xor
movsb
jecxz
push
fmuls
pushf
inc
pop
jmp
lcall
jne
fwait
cmp
pop
inc
jae
xchg
inc
push
mov
pop
aas
jle
js
stos
mov
inc
xor
notb
xchg
mov
gs
push
xor
cmp
mov
int3
sub
xchg
jge
es
pop
xchg
mov
or
push
jmp
out
add
adc
dec
sub
adc
lock
cs
das
adc
inc
mov
jmp
cmp
xchg
lahf
mov
lods
inc
inc
inc
adc
aaa
and
cmp
divb
jb
jmp
and
imulb
mov
stc
scas
es
dec
sbb
pusha
mov
divl
mov
into
push
jnp
lods
cmp
push
and
push
push
outsb
cmpsl
sub
flds
ret
orb
iret
std
mov
adc
push
or
xchg
xor
mov
outsl
mov
sub
inc
mov
push
and
in
hlt
stos
fstpt
mov
sub
push
jge
xor
cmp
cmp
aas
jb
inc
inc
adc
sub
sbb
cld
jge
int
fldl
cmp
inc
fisubs
add
cltd
les
test
and
adc
leave
sar
sti
icebp
in
std
out
std
hlt
push
inc
cmp
xchg
pop
sti
clc
xchg
in
gs
xor
mov
mov
pop
aas
xor
mov
fmuls
movsb
test
mov
negb
add
test
dec
xor
dec
mov
and
add
ja
jo
mov
push
pushf
and
xchg
sub
lods
outsl
lds
pop
daa
push
int3
add
jp
jno
cmovo
lcall
mov
adc
in
or
imul
lret
lret
sub
loope
je
mov
sub
cmp
push
cli
sbb
pop
cmp
jo
leave
in
sub
dec
mov
daa
mov
pop
and
sub
pop
ror
pop
dec
xchg
daa
mov
mov
fst
enter
pop
adc
in
cmp
addb
push
xchg
std
and
shr
and
insl
daa
js
pushf
or
js
xchg
push
andps
jecxz
push
outsl
in
pop
jmp
in
xor
inc
mov
sbb
sti
xorb
clc
add
xor
popf
shll
rclb
mov
cmp
loop
stos
mov
mov
in
push
arpl
and
sub
out
sbb
rol
dec
out
dec
aad
lods
push
jnp
fidivrs
ds
stc
hlt
or
rolb
and
test
inc
loop
sbb
adc
mov
ljmp
out
jne
inc
adc
xor
xchg
push
shl
dec
mov
mov
int
shlb
cli
int
cmp
cmp
ret
outsb
jp
pop
xchg
jge
aad
inc
add
xchg
pop
jmp
push
in
xlat
dec
les
ret
lock
fnstenv
jmp
out
lods
mov
ficoml
nop
ficoms
in
fldl
jae
dec
in
lret
mov
mov
cmp
bnd
push
jns
xchg
ss
sarl
adc
addb
xchg
mov
fcompl
das
cld
sub
dec
and
hlt
xchg
in
stc
iret
xlat
jp
lahf
fisttps
sbb
jl
jg
movsb
les
xchg
in
test
test
adc
out
xor
cmpsb
mov
pop
lods
mov
fs
and
filds
popa
rcrb
dec
jne
sub
mov
dec
xor
movsl
insl
dec
push
rep
shll
out
lcall
push
push
mov
js
dec
icebp
cmp
mov
dec
xor
in
aam
or
push
mov
and
and
cmc
xor
mov
xchg
jp
lock
adc
jmp
das
push
mov
lahf
push
mov
out
mov
movsl
cmpb
fdivs
divb
cmp
cmp
mov
into
pop
dec
pop
test
and
nop
push
push
xor
jp
dec
add
mov
movsl
add
dec
xor
test
loopne
in
sub
and
jecxz
cmc
lret
stos
scas
fwait
inc
pusha
negb
enter
add
popf
enter
aad
push
popa
aad
xor
xlat
inc
inc
std
rorb
cmp
into
inc
enter
hlt
cli
loope
xor
lds
mull
sub
inc
add
sbb
xchg
out
aam
jbe
cld
scas
loopne
hlt
mov
xchg
gs
rcrb
inc
mov
mov
xor
aam
pop
mov
adc
outsl
fadds
ljmp
das
lock
cmc
scas
rorb
xor
mov
mov
adc
scas
loopne
pop
aad
insb
mov
js
repz
fdivr
out
mov
pop
lcall
mov
idivl
push
enter
dec
push
mov
inc
or
jno
and
mov
jge
lds
nop
clc
enter
icebp
jbe
dec
jp
mov
or
es
xchg
mov
scas
jmp
mov
rorl
fidivl
cmp
ficoml
popa
xor
stc
andl
mov
rcrb
mov
xor
add
dec
mov
cmp
sub
mov
mov
mov
push
fwait
cmc
inc
jecxz
mov
xchg
outsl
loop
pop
test
xchg
adc
dec
mov
sbb
neg
cmp
ja
mov
jg
xlat
fbstp
popa
test
loope
mov
or
pushf
mulb
lds
push
mov
in
es
addr16
cld
ja
stc
xchg
or
inc
jle
dec
mov
icebp
vpsllw
mov
test
mov
cmp
push
idivb
mov
and
aaa
test
jnp
movsb
push
mov
cmp
xor
sub
and
stos
jne
mov
jg
jl
repnz
inc
pusha
pop
scas
dec
or
and
roll
loop
rclb
pusha
scas
lods
inc
sub
mov
cmp
stos
ss
stc
out
into
and
sub
dec
xor
or
hlt
popf
aas
sub
imul
or
in
add
pop
cmpsb
sarl
push
sub
es
inc
aad
adc
sub
rol
and
xchg
adc
out
xchg
push
mov
mov
adc
push
lcall
mov
fistl
inc
and
and
int3
test
sahf
in
gs
or
lds
pop
mov
jb
mov
sbb
les
inc
cmp
mov
dec
aad
repnz
push
inc
jno
inc
fstpl
xor
jg
xor
mov
cmp
int3
lds
and
cld
xor
mov
sub
das
ja
xor
push
std
das
jg
xlat
xor
cmpl
das
or
inc
pushl
cld
mov
lahf
xor
pusha
inc
stc
loope
mov
mov
cmp
sub
inc
repnz
cmp
adc
cld
es
stc
femms
adc
jbe
push
call
adc
xchg
xor
mov
roll
cmp
xor
into
mov
insb
mov
mov
mov
push
stos
cmp
ss
mov
mov
ds
dec
fxch
ss
inc
in
gs
sti
int3
and
dec
cmp
dec
fdivp
out
inc
sub
jbe
hlt
xchg
ss
and
push
movsb
icebp
sub
inc
jo
cli
sbb
pop
mov
xorb
pushf
push
shl
jb
insl
stc
jnp
sub
int
mov
es
insl
testl
dec
push
xor
jmp
mov
mov
mov
aam
shrb
shl
ret
xchg
xchg
pop
push
pop
iret
lds
notl
test
sbb
jo
fsubr
test
inc
xor
xchg
movsl
lret
stos
xchg
fs
jg
mov
insl
in
inc
jecxz
leave
or
rcll
sti
inc
and
ja
loop
fwait
mov
sahf
inc
insb
cmpsl
cmp
lds
xchg
pop
cmp
aas
mov
xchg
les
dec
and
aad
in
xchg
mov
pop
pusha
mov
mov
mov
mov
je
xor
dec
inc
sbb
cmp
mov
jbe
outsb
loope
mov
adc
adc
xor
mov
sub
dec
aad
push
jo
cmc
dec
pop
scas
stos
sub
pop
aad
xor
stos
xchg
loop
pop
andb
insl
inc
decl
pop
mov
lock
adc
aas
gs
mov
mov
add
mov
hlt
aaa
fisubrs
cmc
xor
and
xor
xchg
sahf
pop
movb
push
in
inc
mov
scas
jns
sahf
xchg
jb
xor
sub
xor
dec
push
xor
or
xor
pop
dec
mov
fsubrl
dec
or
adc
orl
adc
dec
xchg
jmp
incl
sub
dec
es
stos
insb
push
je
int3
xor
push
insb
mov
sbb
push
adc
cmp
push
push
add
insl
cmp
outsl
subb
stc
mov
jl
add
enter
int3
lahf
xchg
cwtl
mov
inc
xor
std
or
push
and
dec
jge
jmp
xchg
mov
sahf
aas
sbb
add
mov
testl
icebp
lahf
cs
or
jp
rorb
push
mov
in
cmp
lods
mov
movsl
mov
fidivrs
xorl
pushl
xchg
push
in
sub
inc
out
xchg
mull
and
stos
push
sahf
je
mov
cmp
in
mov
dec
movsb
jmp
loopne
jno
xchg
and
stos
inc
scas
subl
out
cwtl
leave
outsl
ds
insl
xor
or
add
outsl
push
xor
cmp
imull
cwtl
push
aam
lret
scas
fs
dec
jns
jno
xlat
lcall
cmp
mov
rcrl
shlb
js
inc
repz
cmp
lea
jecxz
cmp
int
mov
stos
sbb
xor
cld
cmpl
jns
xor
enter
stos
mov
xor
mov
lds
xchg
loopne
mov
aas
push
and
sbb
and
sub
xchg
rorl
test
icebp
mov
dec
roll
adc
sbb
sarl
js
stc
fadds
adc
cli
outsl
imul
mov
and
out
in
leave
out
clc
xchg
lock
icebp
fnstenv
ds
mov
jnp
mov
outsb
lock
jecxz
mov
imulb
les
psubw
inc
pushf
loopne
xchg
cmp
dec
repnz
cltd
and
sub
push
sub
enter
cli
repnz
and
cmp
dec
clc
outsl
cmc
cmpsb
shrl
cld
test
dec
push
lea
push
lea
sbb
mov
sbb
sar
daa
and
push
mov
jg
xlat
fbstp
mov
inc
fsubp
mov
stc
inc
jmp
fldcw
or
inc
outsb
xor
sub
movsl
mov
lcall
shl
clc
das
shll
and
mov
cli
sbb
shlb
es
fistpll
or
lds
push
mov
sub
mov
mov
mov
ds
ss
inc
clc
adc
pop
repz
ja
push
adc
cld
ja
add
xchg
xor
mov
mov
test
cmp
jnp
mov
xor
adc
inc
pop
or
insb
ss
mov
filds
fstps
inc
jp
andb
xor
les
adc
cmp
jns
ds
xchg
fstps
aaa
xchg
inc
sbb
xchg
mov
xor
cmp
icebp
jp
and
push
test
mov
ffree
mov
mov
xor
test
mov
xchg
int3
push
fsub
dec
es
out
arpl
stc
xchg
adc
xor
pop
mov
fbstp
movhps
nop
sub
mov
test
popw
xchg
outsb
sub
xor
xor
pop
add
mov
pop
add
lahf
dec
or
dec
adc
into
fnstcw
push
xchg
shl
cmpsb
inc
das
adc
shlb
or
sub
inc
sub
divl
cld
xchg
adc
add
mov
mov
repnz
inc
mov
mov
and
or
sbb
aad
pop
fidivrl
loopne
dec
int3
adc
clc
and
and
addr16
sub
inc
push
fst
dec
ja
jg
jge
repz
scas
js
hlt
push
push
jmp
mov
ds
lock
rcrb
mov
xchg
out
sub
std
iret
jp
cmc
ds
mov
nop
idivb
adc
fidivrl
lods
cmp
repnz
jg
xor
cs
mov
lods
xor
or
das
aam
cwtl
pusha
shr
out
add
fdivs
pusha
add
inc
or
xor
in
cmpsl
jl
cld
aas
sbb
or
in
xor
inc
xor
mov
popa
jge
cld
or
pop
adc
sti
mov
sbb
shl
es
mov
pop
xchg
push
lock
sub
mov
popa
and
or
movsl
add
jp
or
lods
mov
shrb
cld
inc
adc
inc
push
mov
cltd
sub
in
inc
or
ss
popa
cltd
push
pusha
popa
or
dec
pop
xor
xlat
repz
jl
rol
es
mov
incb
sub
push
out
int3
rclb
mov
jge
xchg
lcall
adc
inc
ds
cltd
andl
pop
or
or
sbb
jno
std
or
cmp
mov
out
jge
xchg
incl
mov
jno
cmpsb
xchg
daa
lret
jge
push
call
out
shlb
add
sub
addr16
rorb
scas
in
cmp
adc
out
es
out
adc
scas
xor
es
daa
inc
shll
loopne
inc
xor
lahf
adc
cmp
cwtl
cli
push
inc
sbb
sti
popa
inc
add
or
xor
fs
out
loopne
inc
and
jnp
push
rcl
cmp
fisubs
xor
or
push
lock
les
jl
shlb
adc
add
rolb
loopne
out
inc
or
addr16
mov
mov
lods
xor
fsubs
sub
and
sub
std
jge
xchg
cmp
xchg
fsub
out
aam
iret
xchg
cld
mov
push
mov
xchg
cmpsb
scas
out
aam
xchg
xchg
cld
or
xor
mov
xchg
outsb
scas
rclb
cld
loopne
hlt
mov
xchg
mov
jecxz
cld
in
loopne
hlt
mov
xchg
push
scas
shlb
inc
stos
xchg
mov
loopne
hlt
mov
xchg
cwtl
scas
shrb
inc
rcll
mov
xchg
pusha
scas
rolb
aas
mov
mov
jmp
inc
xor
aad
dec
aas
mov
mov
movsl
mov
popf
xchg
movsb
aas
mov
mov
int
je
jg
lret
outsl
repz
push
ja
push
jns
inc
scas
pop
jo
pop
jno
mov
bnd
ret
push
pop
adc
stos
pop
mov
fwait
mov
jl
mov
idivb
xchg
or
stc
inc
pusha
lock
xor
jl
int
push
pop
mov
cmpb
and
ljmp
jbe
add
movsb
push
add
into
fldt
sub
and
or
xchg
push
mov
mov
in
jecxz
movb
pusha
add
popa
push
call
pop
xchg
cli
or
xchg
push
push
sbb
mov
das
addr16
push
lea
xor
jmp
repz
push
pop
and
adc
inc
dec
arpl
inc
ss
aaa
or
mov
jle
outsb
das
pop
adc
out
sbb
mov
test
sbbl
pusha
inc
clc
add
xor
mov
in
cld
movb
inc
adc
push
add
mull
sbb
sbb
mov
lret
into
push
push
fstl
pop
cmp
cmp
push
loope
push
pop
pop
vprotq
jno
orl
dec
mov
and
scas
out
add
pop
lcall
add
push
shrl
xor
cli
adc
sub
stos
or
xlat
lods
rcrl
lods
mov
out
in
fisttps
les
pop
sub
pop
jno
and
and
jp
jnp
adc
addl
cld
das
push
lds
dec
push
pop
adc
sbb
loope
test
or
pop
sub
or
in
jmp
mov
subb
xchg
jp
cmp
out
xchg
repz
jno
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
xor
aad
push
inc
pop
call
mov
mov
lcall
pop
pop
mov
mov
push
arpl
insl
das
add
mov
js
bound
into
movsb
scas
mov
inc
sub
std
into
pop
mov
sbb
add
mov
pop
push
lods
mov
mov
xor
stos
jns
daa
xor
add
lock
jnp
movsl
add
adc
lret
lock
mov
stos
add
mov
cmp
fwait
ret
xchg
fwait
and
xor
js
cmp
add
pop
xor
dec
sahf
stos
shll
push
adc
jge
jns
mov
push
sub
push
cwtl
std
mov
out
insl
sbb
leave
xor
dec
cwtl
arpl
mov
pop
repnz
and
inc
mov
jmp
lcall
jg
cmp
push
xlat
lods
jg
cmp
push
mov
ret
mov
js
pop
lods
or
cmp
jbe
cld
dec
aam
sbb
push
xchg
adc
jns
into
dec
pop
fstps
loope
inc
push
movsb
fcompl
fucom
sub
es
arpl
notl
inc
stos
es
jle
push
xchg
mov
mov
loopne
sbb
sbb
cmp
stc
fadds
arpl
jns
add
dec
xor
test
push
push
mov
push
rcl
add
sub
inc
sbb
dec
push
pushf
test
dec
xchg
and
mov
insb
mov
xchg
dec
cld
mov
xor
jb
mov
loope
pusha
cld
adc
out
xchg
mov
loop
xorl
cmpsb
pop
add
orl
jne
and
bound
rclb
test
push
push
sbb
cmp
test
adc
aaa
mov
dec
mov
mov
nop
or
add
dec
cmp
add
pop
and
insl
sbb
and
xchg
sub
pop
cld
test
sub
popa
mov
xor
into
das
pop
pop
xchg
or
lock
mov
mov
push
or
sbb
std
loop
push
imul
xor
dec
adc
mov
sbb
push
in
out
fstps
movsl
pushf
leave
inc
mov
xor
mov
fistps
cld
xchg
mov
mov
mov
and
and
call
movsl
xor
frstor
push
mov
inc
ss
pusha
adc
clc
ja
and
push
lcall
sti
adc
mov
pop
fdivrl
jae
call
xlat
inc
cmp
dec
push
fbstp
and
adc
cld
cmpl
scas
xor
test
lods
test
das
dec
adc
clc
jae
and
xor
sub
xor
xor
test
stos
clc
inc
inc
loope
mov
mov
ds
add
int3
inc
sbb
clc
jnp
or
fwait
adc
std
ret
jg
xlat
out
jns
test
xor
xor
int
imul
inc
cwtl
adc
jge
lret
push
mov
sbb
outsb
stos
push
inc
mov
mov
push
sub
sar
test
stos
sub
dec
mov
mov
ds
test
in
xor
adc
fnstsw
shlb
out
jge
pop
ja
push
xor
mov
cmp
mov
adc
pop
sti
fsts
ja
jae
or
mov
xor
test
cmp
cmpl
cmp
mov
ds
test
in
xor
adc
fnstsw
mov
inc
fists
insl
std
pop
orb
jns
icebp
mov
adc
mov
inc
xlat
imul
pop
ss
adcb
stc
scas
mov
xor
and
inc
xor
or
pop
stos
xor
pusha
mov
mov
cmp
sub
stos
add
and
jp
push
mov
popf
pop
and
mov
and
fdivl
or
mov
and
adc
pop
jl
pop
rol
mov
xchg
adc
std
mov
xor
test
inc
xor
mov
inc
js
or
mov
mov
frstor
sbb
cmc
xor
and
sub
lcall
movlps
in
sub
inc
dec
ja
out
jne
mov
cmp
mov
adc
stc
out
and
jns
aad
outsl
ss
inc
xchg
adc
stc
scas
and
int3
repnz
dec
jg
ja
add
pop
inc
mov
mov
stc
aas
and
xor
and
jp
pop
inc
stos
fldl
add
fdivl
pop
sbb
fxch
ss
add
xchg
aad
sahf
fstp
push
ja
movb
cmp
movsl
test
dec
mov
test
cld
jg
xlat
mov
into
stos
movsb
inc
ljmp
sub
in
test
xchg
loope
mov
mov
and
scas
mov
sub
push
mov
mov
cmp
xor
mov
and
les
jmp
jge
adc
imul
ss
cmp
scas
cmp
adc
repz
push
jb
inc
roll
adc
clc
fwait
jp
push
xor
sub
mov
and
clc
mov
mov
ds
popa
fincstp
test
or
in
xor
cmp
stos
ss
stc
repz
mov
add
inc
adc
cld
addr16
xchg
xor
js
loope
mov
mov
fld
cmp
or
pop
loope
mov
mov
ds
add
lea
adc
lock
mov
ds
ss
inc
or
xchg
jmp
stos
jb
arpl
fnstsw
fwait
ss
stc
jmp
and
aaa
jg
push
xor
adc
pop
stos
xor
jp
push
mov
mov
adc
popf
jb
cli
sub
inc
push
imul
adc
std
stos
jg
xlat
iret
xor
test
negb
das
adc
or
push
lcall
or
xchg
stc
sub
mov
cmp
scas
ss
test
into
mov
mov
arpl
cmc
and
outsb
stos
inc
inc
xchg
loope
mov
mov
ja
pop
ficoms
outsl
ss
inc
xchg
adc
jne
mov
and
loop
mov
dec
xor
adc
stos
inc
inc
xchg
loope
mov
mov
stc
aas
and
push
stos
fldl
mov
push
sub
mov
and
int3
ja
notl
mov
and
in
arpl
cmc
cmp
stos
ss
stc
repz
mov
dec
adc
cld
jnp
or
mov
mov
mov
mov
dec
jg
ja
or
pusha
dec
fistpll
and
scas
mov
adc
pop
loope
mov
mov
ds
mov
call
mov
mov
ds
add
jg
adc
jmp
mov
stos
adc
std
iret
jg
xlat
divl
rcrl
cmp
ja
or
stc
lret
cmpsb
and
push
pop
data16
push
and
xor
mov
cmp
loopne
xchg
xor
xor
xchg
inc
mov
sub
adc
mov
test
or
sub
mov
mov
mov
mov
cmp
xor
mov
cmp
in
jno
or
mov
cmp
mov
adc
aam
ja
outsl
adc
std
lahf
jg
xlat
iret
xor
test
lock
ss
inc
aam
pop
stc
jmp
and
imulb
xor
dec
xor
clc
test
stos
adc
sub
pushf
lret
push
xor
fcomi
popa
repz
or
mov
cmp
imul
inc
test
or
fwait
jbe
mov
das
sub
xor
pop
cmpsl
cmp
cmc
mov
idivb
xchg
mov
inc
lret
icebp
push
xchg
int3
fbstp
cmpl
scas
das
mov
mov
outsb
loop
fucom
aas
jge
mov
repnz
mov
jae
leave
aaa
mov
repz
mov
jg
push
push
xchg
adc
xchg
push
nop
and
pushf
xor
aad
jg
sub
push
jno
xchg
dec
sub
mov
imul
roll
aaa
cmc
inc
arpl
sahf
out
push
xchg
or
cmpsb
imull
mov
mov
ljmp
lds
sbb
loopne
xor
or
std
fldl
mov
sti
insb
cld
orl
mov
test
add
repnz
inc
mov
dec
dec
into
sub
mov
es
testl
loop
test
dec
pop
mov
sbb
into
sbbl
out
das
mov
gs
addr16
sub
shll
and
pop
pop
jge
mov
lods
push
jno
inc
xchg
add
dec
loop
outsl
mov
mov
push
push
pop
dec
rcrb
cmc
mov
sub
inc
daa
xchg
aas
fldcw
movsb
in
daa
and
in
adc
inc
test
inc
shrl
mov
mov
dec
out
cld
testl
pop
lods
inc
dec
test
sbb
cmpsl
aas
dec
dec
inc
es
ffreep
rorb
imul
jg
call
xor
mov
mov
push
aas
cltd
mov
lcall
dec
pusha
daa
std
sub
inc
jae
and
lret
movb
lret
not
or
sbb
inc
sbb
cltd
dec
fwait
jno
or
pop
dec
shlb
mov
fists
jns
pop
cli
cmp
adc
int
xor
jno
push
mov
roll
movsl
inc
mov
int3
lds
inc
fbld
stos
stos
cmp
nop
pop
insl
sub
inc
mov
inc
sbb
cmp
jg
fbstp
cmp
pop
test
push
adcb
mov
sub
inc
xor
cli
movsb
jns
xor
out
in
add
mov
popa
out
and
adc
add
fisubs
pop
scas
fbstp
jle
aas
in
sti
insb
cmp
sub
inc
pop
scas
sbb
js
pop
fwait
les
imul
sbb
mov
mov
adc
dec
sbbl
push
cs
xchg
jle
notl
mov
xchg
inc
jne
push
fisubrl
leave
lret
sub
and
mov
sub
aaa
insl
jns
push
mov
popa
mov
pop
lock
lds
push
aaa
stc
cld
push
idivb
push
mov
in
pushf
pushf
mov
les
inc
lret
dec
std
xchg
add
daa
xor
outsb
test
sub
test
jmp
sbb
xchg
adc
xchg
push
push
xchg
loopne
daa
cli
int3
clc
loopne
int3
dec
and
movsl
out
sahf
mov
cmp
fst
mov
jle
cltd
cld
cld
aaa
and
aad
mov
cs
sti
and
je
push
jns
out
in
mov
dec
in
aas
push
pop
jl
sarb
inc
int3
add
inc
ficoms
fbld
push
stos
sbb
daa
imul
xlat
xor
inc
pop
jne
popa
mov
insl
inc
mov
sbb
jecxz
sarb
sub
cmc
push
inc
cmp
adc
dec
imul
cmp
insb
mov
inc
sub
pop
sbb
data16
xor
in
inc
mov
push
enter
mov
cmp
dec
gs
enter
push
mov
dec
xchg
lret
push
and
addb
lds
or
xor
inc
jb
popf
dec
push
pop
push
xlat
cmp
movsb
push
hlt
outsb
pop
sbb
pop
dec
jg
mov
xchg
shl
mov
mov
mov
mov
mull
dec
sahf
hlt
dec
mov
sub
cmpsb
or
cmpsl
sahf
into
sub
inc
inc
adc
and
outsl
inc
lret
xor
sub
sub
incb
test
mov
das
lock
lods
das
ficompl
movsl
sahf
jge
fadd
mov
leave
repnz
pop
sbb
inc
mov
stos
mov
push
and
andl
mov
mov
and
gs
das
dec
test
in
das
dec
cwtl
pop
push
scas
jge
mov
add
shl
push
scas
cld
out
scas
or
mov
sbb
sbb
and
cwtl
cmp
xchg
push
jl
aad
pushf
rcl
dec
pushf
lock
pushf
cld
aad
pushf
add
sbbl
and
out
cmpsb
xor
out
orb
push
sbbb
popa
subb
jno
aas
pop
addl
outsl
pop
mov
jg
roll
pop
loope
scas
add
int3
mov
clc
adc
or
pusha
out
push
xor
xor
jne
inc
pop
test
push
sahf
bound
shlb
add
iret
es
mov
xor
or
push
lods
xchg
ja
xchg
movsl
sbb
shlb
bound
cs
das
xor
dec
out
in
divb
sbb
mov
pop
sahf
stc
fistpll
and
or
xchg
xor
add
jo
dec
sahf
ret
pop
xchg
sahf
in
repnz
dec
ss
push
cmp
xchg
cmp
mov
jmp
loopne
xchg
and
jmp
out
mov
pusha
mov
mov
dec
rcl
pushf
jb
push
movsl
daa
daa
lret
paddq
pop
mov
xor
int
push
mov
push
pop
shll
xchg
pusha
pop
mov
sbbl
cmpsl
mov
jmp
shrb
rcll
xchg
cmp
rorb
shl
add
shr
dec
sub
push
sub
adc
sub
add
sbb
cmp
js
shll
loope
test
loope
test
loope
movsl
push
sub
cwtl
addr16
out
jnp
add
ret
mov
xchg
cmp
pop
pusha
das
sub
fs
pop
clc
xchg
mov
movsl
in
popa
lods
in
ljmp
add
xor
xchg
out
and
aaa
adc
xchg
jno
mov
out
and
fsubl
add
loope
shrl
jmp
cmpsl
jp
or
mov
mov
or
cmc
in
cmpsb
gs
lock
xchg
sbb
mov
rorl
cwtl
dec
shll
enter
add
roll
pop
loop
sub
ret
sub
xchg
insb
add
jge
or
shr
ss
clc
ljmp
popa
les
xor
push
mov
cmp
and
lahf
cwtl
sub
mov
test
out
mov
ljmp
lock
pop
sbb
jmp
sub
xlat
and
fadds
sbb
insb
hlt
mov
cmp
sub
fildl
jne
pop
ret
cmp
aam
mov
fsubrl
hlt
jno
jbe
cmp
es
pop
les
push
push
jmp
push
roll
lock
les
das
std
cwtl
push
jge
out
cli
lret
pusha
mov
xor
les
or
mov
or
push
orl
out
lahf
ljmp
fistpll
jb
bnd
and
sarl
lods
add
mov
outsl
mov
mov
aad
sub
sub
or
pushw
xor
pop
xor
insb
dec
xor
insb
insl
xor
or
aaa
fs
inc
push
xor
mov
sub
push
sahf
or
push
scas
or
push
mov
movsb
rcrb
ja
push
xchg
sub
mov
inc
iret
popf
push
loope
pushf
data16
fwait
jbe
negl
xchg
aad
pushf
cmpsb
shlb
mov
mov
adc
mov
adc
mov
shrb
mov
xchg
or
fistpl
sub
sti
popf
cmp
or
ja
xchg
mov
daa
test
mov
cmpl
orb
fldl
mov
lock
fildl
iret
lods
pop
ljmp
jle
pushl
sahf
ljmp
mov
ljmp
out
ljmp
push
jmp
mov
jmp
in
push
cld
ror
pop
or
ficompl
ljmp
fmuls
dec
dec
loope
pop
pop
fsubrs
pop
insb
fdivrs
pop
jl
dec
pop
mov
pop
pop
pushf
fsubrs
lods
fdivrs
mov
fcomps
inc
in
imul
scas
sarl
iret
rcrl
fists
out
push
jle
decl
mov
pop
sahf
pushf
pop
imul
pop
mov
fcoml
stos
sahf
in
mov
push
cld
ss
cmp
aaa
fstpt
sub
sti
mov
call
orl
pop
test
mov
dec
test
mov
outsl
test
mov
popl
subl
cwtl
pop
loope
cmpsl
outsb
loope
cmpsl
jle
pop
mov
sahf
loope
test
loope
test
loope
test
loope
cmpsl
ficoms
sbbb
xchg
xchg
sbb
xchg
mov
inc
xor
sub
push
inc
add
out
fwait
jle
lcall
sahf
rcrl
dec
inc
test
scas
out
scas
out
scas
mul
ja
push
call
xchg
scas
es
mov
lock
sub
xor
sub
xchg
or
xchg
sub
sub
pop
mov
call
inc
mov
jg
push
mov
cmpsl
push
cs
inc
ds
iret
inc
pop
mov
out
cmpl
orl
pop
test
mov
dec
test
mov
outsl
test
mov
fisubl
xlat
gs
add
sbb
cmpsl
sub
fisubrl
call
insb
jns
or
xor
iret
aam
sub
cmp
fcompl
fsubr
pop
cs
pop
fmuls
dec
sub
adc
jbe
inc
out
xchg
out
xchg
push
jne
mov
test
push
movsl
jmp
sar
adc
mov
jnp
aad
fwait
push
aad
fwait
mov
or
mov
sbb
dec
pop
sahf
sahf
pop
insl
sahf
scas
pop
jge
mov
pop
popf
sahf
ficoms
lods
add
mov
xchg
push
adc
fwait
push
pop
in
popf
cs
std
popf
jecxz,pt
das
pop
add
mov
xor
mov
lea
xlat
xchg
push
sbb
iret
ds
cmc
mov
cmp
add
mov
mov
push
mov
lcall
mov
fidivrl
movsl
mov
sbb
sbb
fwait
repz
sub
mov
xor
xor
xor
xor
xor
xor
insb
dec
call
std
pop
jno
scas
push
test
lahf
es
dec
and
jl
sar
pop
leave
repnz
jl
adc
mov
nop
stos
pop
or
outsb
push
test
mov
and
push
mov
xchg
jne
out
cltd
xor
shlb
mov
inc
sarl
or
insb
cmc
xor
or
xchg
insb
adc
pushf
insb
sbb
movsb
cmp
les
stos
push
jge
mov
mov
imul
cmp
sub
mov
in
and
out
ss
sub
pushw
outsb
push
inc
out
jle
push
out
scas
push
test
ret
out
lret
out
shrb
in
out
fstl
sub
icebp
dec
sub
fsts
movsl
hlt
push
aas
andb
outsl
cmpb
ja
inc
pop
jg
dec
pop
xchg
shl
ljmp
add
xorl
pop
sbb
in
lock
mov
fwait
fs
fwait
insb
aad
stos
mov
aad
pushf
mov
xor
aad
pushf
jne
add
sbbl
frstor
sti
pop
push
fnstsw
push
inc
xchg
or
mov
cmpb
mov
xchg
sbb
shl
dec
test
loope
test
loope
test
loop
lods
and
xor
cmp
shll
loope
cmpsl
jl
stc
cmpsl
test
add
movsb
loope
test
loope
test
loope
test
loope
cmpsl
in
popa
xor
push
jge
push
cli
sub
ret
int
or
adc
pop
sahf
sbb
cmc
popf
dec
pop
sbb
sahf
bound
sub
sahf
jb
cmp
fs
test
mov
adc
xchg
sbb
xchg
cltd
sbb
ds
inc
push
sarl
xchg
leave
rcll
mov
mov
adc
xor
jae
dec
sbb
mov
adc
mov
pop
idivl
pop
or
push
and
cmp
mov
xchg
js
mov
cmpsb
cmp
scas
cmp
mov
aad
adc
fsubl
add
cmpsb
and
out
adcb
dec
xorb
jae
cmp
mov
xor
ljmp
dec
and
addl
ret
cmp
or
in
cmc
es
jecxz
mov
cmp
xchg
lods
je
repnz
sbbb
lea
push
in
or
lret
into
insl
or
dec
test
mov
imulb
mov
into
push
jmp
mov
aad
inc
pop
loopne
dec
lods
scas
mov
cmp
sbb
shlb
xlat
pop
loop
imul
das
dec
push
test
mov
data16
mov
int3
es
add
jmp
ret
shl
fiaddl
and
out
decl
loop
insl
mov
in
shlb
sbb
or
xor
stc
loop
push
xor
jne
push
ljmpw
inc
scas
sbb
or
in
and
mov
sub
hlt
daa
int
pop
out
adc
adc
push
cmp
dec
out
or
mov
sub
shl
mov
cmpsl
pop
jno
out
ret
js
testb
incb
jo
xchg
sbb
mov
sub
dec
jne
mov
or
mov
push
sbb
push
pusha
hlt
sub
int
push
adc
or
jnp
orw
adc
roll
rcpps
add
push
lahf
mov
insb
icebp
ljmp
lds
jge
pop
in
iret
pop
cmp
ret
out
test
aaa
jl
rcrl
fcoml
sub
hlt
or
aaa
cmp
inc
sarb
or
insb
add
adc
mov
xor
ret
cmpsl
repnz
push
lock
mov
jmp
pop
sbbl
push
orl
jle
mov
out
mov
daa
lret
fstps
adc
xor
inc
pop
sub
mov
jge
mov
cmpsl
pop
jmp
mov
add
push
cmp
subps
cs
outsl
fmuls
lcall
dec
or
adc
jne
pop
add
adc
ss
mov
test
sub
aam
pop
cmovp
les
sub
loop
out
sub
push
pop
jmp
out
scas
fwait
out
fucomp
sub
addr16
add
push
mov
ljmp
or
jno
negb
clc
mov
adc
inc
sahf
jl
dec
imul
jnp
adc
mov
sub
jns
iret
std
lcall
ficompl
movsl
add
cwtl
lods
ja
lret
std
dec
mov
and
mov
adcb
lock
mov
adc
out
or
lcall
cmp
cltd
fistps
scas
shl
in
imul
scas
imull
or
and
pop
fwait
sbb
xchg
mov
pop
and
pushf
mov
into
lods
icebp
xchg
or
mov
push
icebp
adc
mov
stos
cs
fdivrs
iret
xor
test
mov
popl
aaa
cmpl
mov
mov
and
daa
movsl
mov
aaa
std
mov
out
adc
out
sbb
out
and
pusha
push
dec
cmpsb
add
push
or
jne
adc
inc
adc
repnz
xchg
push
lock
clc
lea
add
fs
jb
jmp
push
pop
sbb
push
fs
in
jo
repz
xchg
sub
xchg
xor
pop
addl
jl
cmc
adc
mov
push
mov
cld
add
inc
mov
daa
mov
inc
hlt
push
adc
mov
pop
inc
jge
shlb
bound
xor
xor
xchg
imul
adcl
shr
ss
dec
enter
jle
test
jl
add
jg
push
mov
fsubs
enter
jae
loopne
mov
pop
std
sub
jecxz
pop
fcoms
dec
push
and
xchg
aad
xchg
xor
mov
pushw
in
loope
cmc
mov
rcrl
bound
icebp
js
mov
xlat
mov
and
add
pcmpeqb
sub
in
addr16
sub
mov
mov
stos
lock
outsl
ljmp
mov
fsubrs
pop
outsb
fdivrs
dec
jg
mov
movsl
mov
mov
adcb
mov
sbb
pop
scas
sahf
in
out
pop
sub
icebp
dec
sub
repz
sbb
jge
adc
mov
jmp
daa
popf
ljmp
mov
orl
adc
mov
sbb
sub
sub
lds
mov
out
sub
mov
prefetch
insl
cmp
popf
push
sub
movsl
push
xor
lods
mov
xchg
add
xor
aad
loope
cmpsl
mov
insb
inc
xor
cmp
bound
movsl
mov
fsubl
xor
lods
movsb
inc
ds
lahf
sahf
dec
pop
adc
outsl
pop
mov
dec
sbb
pop
push
inc
add
inc
sub
mov
aam
dec
mov
adc
shll
xchg
xchg
pop
push
inc
mov
or
gs
add
jle
xchg
push
movsb
adc
dec
mov
dec
push
xchg
mov
ljmp
or
fildll
int3
sub
xor
subb
xchg
ljmp
rcll
add
push
les
fstpt
xchg
cmp
packssdw
xchg
inc
pop
aam
mov
fadds
pop
sbb
mov
test
inc
pop
fmull
test
insb
shll
lret
dec
add
mov
out
push
and
add
iret
mov
fwait
nop
enter
or
aaa
jo
pop
stos
out
adc
stc
inc
dec
add
inc
cmp
mov
dec
aad
insl
adcl
in
or
clc
pop
out
out
adc
stc
iret
add
ret
xor
lret
ficoms
div
jmp
xlat
sub
push
iret
mov
fidivrl
mov
jo
cmp
jle
mov
sub
filds
hlt
mov
xchg
xchg
bound
adc
jb
adcb
sahf
mov
cmpb
hlt
clc
sub
mov
outsb
imulb
adc
cmp
rcl
xchg
je
push
or
lcall
dec
repnz
data16
inc
popf
push
sbb
inc
lret
movsb
repz
jnp
mov
outsb
pop
std
mov
push
xchg
ss
ret
mov
add
lock
mov
adc
jle
movsb
scas
loop
lods
lret
test
rcrl
mov
icebp
xchg
sub
lods
jp
push
mov
stos
cmp
loop
lea
inc
add
rorl
adc
lock
dec
sub
cmc
push
cmpsl
add
aad
pushf
movsb
aad
pushf
mov
xor
push
cwtl
push
mov
hlt
adc
or
std
xor
pop
mov
or
mov
xchg
jnp
inc
cwtl
adcl
outsb
mov
inc
and
cwtl
dec
xlat
cwtl
push
ss
push
adc
stc
pop
jns
pop
popf
rclb
int
ror
mov
xchg
add
add
ficompl
and
leave
in
call
insl
outsl
aas
loop
addl
mov
std
sbb
xor
arpl
sar
bound
addb
sub
imul
and
mov
mov
mov
div
ljmp
add
movsl
mov
pop
push
das
fucom
test
ja
lds
andl
jl
adc
xor
mov
mov
jno
add
test
mov
add
lock
xlat
clc
pop
movb
in
fwait
js
add
enter
add
inc
inc
scas
loop
lods
dec
cmpsb
mov
inc
fdivr
pop
fldenv
loop
adc
insb
mov
loop
mov
push
xor
jmp
adcb
test
scas
add
mov
xor
sub
loopne
xchg
fildll
mov
addl
ja
push
outsl
push
pop
dec
lods
loope
test
loopne
or
out
dec
xor
dec
dec
add
sbb
sub
mov
movl
aaa
jmp
adcb
lods
test
insl
hlt
cwtl
sub
push
hlt
lock
test
rcpps
leave
cs
call
flds
cwtl
fbld
mov
mov
cs
mov
addl
and
add
xchg
es
into
sub
cmp
jl
push
xchg
and
xchg
sub
add
dec
jmp
ljmp
xor
cmp
arpl
dec
xlat
cwtl
sbb
add
faddl
sti
aad
ds
pop
mov
jmp
mov
ja
je
jle
dec
jecxz
pop
cmpsl
ljmp
data16
adc
cmp
addb
aas
orb
inc
inc
outsl
inc
dec
jo
jbe
inc
add
inc
ja
xchg
pop
les
dec
xlat
mov
mov
cmpsl
sbb
in
jl
add
pop
adc
jns
or
mov
cmp
cld
pop
aad
cwtl
jno
cmp
xor
xchg
cld
mov
dec
ret
add
in
add
das
rorb
test
xchg
xchg
insl
dec
enter
xchg
mov
mov
pop
icebp
and
pusha
ror
xchg
loope
add
jecxz
inc
ficoml
mov
jge
ljmp
and
or
add
fsubs
mov
mov
mov
jle
inc
jge
lret
loop
or
fisttpll
sahf
mov
push
jge
jecxz
lret
cmc
sub
cmpsl
xorb
inc
lret
dec
mov
dec
sbb
sub
rolb
pop
int
or
or
dec
xchg
sbb
inc
mov
sbb
inc
bound
push
in
test
gs
ljmp
fdiv
jge
pop
sti
push
sbb
push
outsl
adc
js
dec
std
adc
fsubs
bound
sub
dec
cmp
stos
test
in
sahf
xchg
mov
cmp
cmp
cmp
ja
inc
add
out
sub
mov
jmp
imul
out
and
sbb
imul
iret
adc
push
lahf
outsb
mov
les
lret
sahf
mov
jne
jno
scas
out
jne
xchg
xor
sbb
mov
lock
adc
aaa
cmp
setg
cmpb
mov
ljmp
js
sub
adc
adcb
sti
push
daa
add
sub
and
pop
pop
or
out
jle
gs
enter
mov
push
pop
out
lcall
lret
or
push
adc
mov
jne
mov
and
shl
repnz
adc
or
xchg
push
sub
cmp
sub
and
jl
sbb
cltd
sahf
call
pop
sbb
hlt
cmp
leave
mov
dec
dec
scas
jecxz
imul
xlat
xchg
aad
add
sbb
sub
fcomps
xorl
rcrb
or
lfs
sub
rcrb
pop
mov
jg
push
mov
subb
test
stos
sub
inc
jg
in
pop
mov
add
int
and
shlb
pop
dec
in
jae
jg
jmp
les
jle
test
ja
sub
das
pop
inc
icebp
xorl
or
in
sahf
mov
mov
dec
sub
gs
cmp
jecxz
add
in
testl
loop
mov
test
cmp
leave
pop
add
fsubp
cmpsb
pop
shll
out
xor
repnz
pop
mov
mul
xor
cmp
lcall
fstps
xor
mov
push
push
ss
pushf
push
inc
lcall
cmp
mov
icebp
ss
cmc
hlt
cmp
call
xor
pop
outsb
nop
daa
jl
fstl
int3
ffree
data16
mov
lcall
out
je
pusha
cmpsl
repnz
or
outsb
test
loopne
dec
jmp
daa
rclb
sbb
addr16
jl
daa
or
outsb
push
movsl
sbb
fs
aad
mov
stc
adc
push
cmp
fwait
push
imul
cmp
mov
std
xchg
push
cmp
mov
push
bound
movsl
cmpsl
and
mov
jge
adc
iret
adc
test
aad
adc
test
sub
lret
push
lods
sub
jmp
push
dec
cmp
outsl
adc
jo,pn
ds
mov
das
adc
push
add
sub
mov
not
cmp
xor
mov
mov
cli
sbb
ficoml
mov
pop
rcll
mov
lret
out
ds
sub
repnz
xor
cli
into
fst
repnz
xchg
rclb
loope
inc
mov
cmp
or
das
data16
cmpb
repz
mov
mov
dec
lea
pop
jl
mov
daa
or
dec
inc
fldenv
leave
iret
outsl
inc
lds
pop
sbb
cmp
aaa
mov
lea
push
test
ret
dec
and
add
sbb
icebp
shrl
jge
lahf
lods
and
fs
mov
out
loop
int3
in
je
xor
mov
sub
jne
mov
ss
stos
adc
lods
jecxz
and
and
push
sbb
adc
mov
dec
shll
inc
push
mov
into
push
mov
push
in
sbb
pop
adc
lcall
dec
test
and
lret
xlat
je
fwait
push
mov
jns
dec
fisttps
sub
adc
mov
inc
pmaddwd
dec
cmp
push
cmp
pop
sub
sarb
adc
push
lcall
sub
mov
dec
fs
jns
xor
cmp
out
out
sbbb
xchg
lret
ucomiss
sar
insl
cmp
pop
loope
repz
cmp
mov
add
je
cmc
dec
aas
push
pop
mov
ljmp
mov
sarb
mov
pop
cli
andb
daa
or
dec
mov
jp,pt
mov
mov
dec
ret
lea
and
lahf
shl
pop
lods
cs
and
mov
xchg
push
std
shlb
fcoms
enter
pop
xorb
sahf
out
mov
xchg
out
mov
mov
add
xchg
call
mov
shll
adc
or
popa
sbb
subb
cmp
aaa
mov
cmp
adc
fildl
sbb
mov
jbe
je
cmp
fimull
mov
mov
and
fwait
jp
sbb
inc
and
inc
push
dec
sub
xchg
mov
sbb
andb
sub
out
push
cmpsb
adc
in
sub
test
out
mov
stos
ja
mov
out
and
fbstp
pop
cmp
inc
mov
pusha
loopne
jns
int3
jge
jle
mov
aaa
pop
pop
add
dec
iret
inc
adc
xor
pop
lods
lods
leave
and
jp
push
rclb
mov
pop
cmpsl
lcall
or
mov
outsb
sbb
xchg
jle
sti
movsb
xchg
add
add
pop
outsb
adc
add
movsl
into
cmp
dec
sbb
xchg
push
mov
aad
sbb
xchg
mov
lock
clc
mov
lock
cwtl
js
mov
lea
add
push
addr16
cmp
add
in
sub
popf
adc
dec
adc
push
arpl
mov
mov
cmc
mov
stc
out
fildl
pop
outsb
push
push
loope
jae
adc
arpl
sbb
xchg
popf
bound
or
push
into
stc
mov
iret
subb
mov
sbbl
jnp
fwait
inc
mov
std
xchg
xor
xbegin
jg
scas
out
mov
test
fiadds
aaa
pop
jge
xchg
enter
fidivrl
inc
and
mov
inc
and
jge
adc
hlt
ficoms
pop
and
fnstenv
xchg
inc
pop
sub
int
js
mov
lock
incb
shrb
adc
xchg
inc
mov
add
lret
xor
sub
out
fldenv
out
daa
mov
xchg
lret
xlat
push
cmpsb
xchg
fbld
pop
and
mov
or
out
pop
aam
dec
cltd
mov
aad
push
popa
inc
mov
dec
in
cmp
cli
pop
pop
call
or
imul
sub
jg
leave
addr16
or
dec
or
mov
fs
insb
jns
or
sbb
lods
cld
adc
rclb
call
push
mov
inc
hlt
inc
adc
inc
xor
pushf
ja
scas
cmp
mov
cwtl
cmp
cmp
push
fcom
xor
lds
xchg
ret
test
xchg
shll
dec
clc
andl
or
mov
sub
mov
nop
dec
sbb
std
dec
imull
lock
idivl
mov
cmp
in
mov
cmp
or
add
jecxz
aaa
mov
or
push
ds
mov
jge
jmp
jno
mov
dec
inc
cmpsb
ficomps
loop
popa
fsubr
push
adc
cs
add
mov
mov
inc
and
and
iret
fs
nop
pop
mov
push
lds
lods
in
aad
pusha
lods
popf
jl
orb
jg
mov
mov
adc
jbe
rcrl
cmp
cltd
mov
stos
xor
mov
push
or
or
push
mov
sahf
popa
arpl
mov
jg
or
inc
pushf
rcl
dec
movsl
fidivrs
call
jle
xchg
mov
repnz
jbe
inc
sahf
jg
dec
xor
xor
add
std
xor
or
jbe
and
jmp
inc
mov
mov
push
jecxz
push
test
loope
test
loope
lods
lods
int
jo
jge
repz
mov
pusha
idivb
lcall
daa
imul
outsb
xchg
or
pushf
test
and
dec
mov
aad
pushf
into
aad
lcall
and
cwtl
pop
dec
leave
icebp
push
lea
push
inc
push
pop
jg
repz
pop
in
mov
and
das
dec
and
pop
mull
fsub
jle
adc
or
or
mov
jle
mov
sahf
mov
pop
jmp
xor
jne
lret
mov
pop
add
rcll
lds
sub
adc
filds
in
loopne
movsl
pusha
dec
inc
out
scas
sbb
cmpsb
dec
jge
adc
jns
xchg
repnz
cmpsl
out
lods
push
push
lock
add
jle
lods
fimuls
int
push
mov
push
jne
lock
adc
sub
int3
stos
fs
es
jge
das
xchg
and
fwait
add
dec
out
mov
jmp
mov
or
and
inc
cmp
popa
cs
sbb
popf
aam
cwtl
xchg
jmp
arpl
lret
sarl
cmp
jae
enter
add
in
daa
sub
dec
into
cmc
jmp
cmp
movsb
mov
insl
push
push
ds
mov
push
and
inc
jne
pushf
je
mov
sahf
std
xor
xchg
sbb
dec
mov
dec
lahf
inc
mov
sti
fadd
add
addb
fwait
clc
pop
cmp
cmp
shl
pop
call
push
inc
rcr
pop
jmp
xchg
cli
push
mov
sti
pushl
movl
fstps
sub
fsubrl
dec
fs
or
adc
jb
hlt
pop
sbb
jae
pop
add
mov
cmc
popa
scas
adc
iret
and
ljmp
adc
mov
mov
pop
ljmp
xchg
mov
repnz
cmc
loope
mov
fadds
dec
jne
cmp
popf
xor
jmp
push
shll
mov
mov
pop
ficompl
subl
or
sar
jmp
inc
and
jb
mov
mov
jb
inc
insl
sub
fadd
sbb
insb
add
into
mov
jbe
in
call
shrl
add
dec
mov
mov
xor
pop
ja
out
stos
sbb
push
ljmp
imul
stos
mov
nop
xor
nop
cmpsl
add
jl
adcl
jne
inc
xchg
sbb
pushf
adc
mov
and
aaa
sub
shlb
test
stos
shlb
dec
mov
push
cli
add
mov
dec
stos
aaa
mov
popf
xor
and
loope
call
xchg
sbb
aaa
adc
ret
and
loopne
mov
add
aad
inc
andl
imul
sti
xchg
xor
cmp
in
cli
jmp
inc
outsb
pop
jg
push
lods
xchg
cmp
sub
mov
insb
or
dec
lret
fisubrs
fimuls
sti
roll
jo
mov
popa
pop
daa
mov
xchg
es
nop
jbe
lods
dec
pop
loope,pt
ss
or
stc
push
into
shlb
leave
sbb
imul
ja
pop
cmpsl
jge
push
fdivs
imul
inc
pop
ffree
push
ds
xchg
push
pop
mov
rolb
popf
cmp
cmp
xchg
push
popf
cmp
paddusb
roll
dec
iret
in
scas
sahf
and
push
out
mov
mov
sub
inc
in
mov
lcall
aas
sub
shr
jg
or
xchg
icebp
mov
xlat
cmp
dec
test
mov
fildl
xchg
xor
pop
adc
in
sbb
cmpsl
xor
cmp
aas
jp
movsl
mov
mov
cld
pmovmskb
pop
or
push
pop
test
sbb
dec
notl
cwtl
mov
sahf
xchg
pop
sbb
popf
adc
dec
fstl
aaa
cmp
fld
mov
sub
mov
mov
fcomp
push
mov
adcl
sbb
mov
cmpsl
pop
inc
jmp
cmp
les
jle
test
mov
mov
jnp
addb
les
jge
shl
pop
loopne
mov
sbb
sub
push
mov
cli
inc
cmp
jnp
sti
lods
mov
cmp
xchg
inc
addl
std
cmp
mov
loope
dec
sbb
js
xchg
xchg
enter
aad
add
mov
aaa
enter
sbb
lods
sub
aaa
and
es
mov
dec
sbb
test
icebp
mov
xchg
stos
sbb
iret
add
mov
int
jae
loopne
lods
stc
jecxz
ljmp
cli
popa
dec
sub
arpl
mov
rcrl
jno
lock
sbbb
mov
movsl
les
or
xor
mov
mov
mov
mov
xchg
adc
adc
ss
cltd
jmp
xchg
movsl
mov
sub
rol
pop
xor
xlat
sub
loopne
out
jp
mov
ds
das
dec
inc
pop
mov
cmpsl
es
imul
pop
imul
adc
add
cmp
enter
fdivrs
adc
cmp
pop
dec
xchg
bound
mul
jbe
pop
arpl
clc
mov
aaa
or
pusha
icebp
ljmp
mov
out
add
cmp
sub
sti
fcmove
dec
mov
or
pop
cs
mov
add
fsubs
dec
push
pushl
ljmp
lret
rorb
dec
or
fwait
xor
outsl
in
dec
leave
ss
jne
ss
pop
push
enter
sub
fldcw
adc
pop
mov
cmp
mov
pop
arpl
and
mov
pushl
ficomps
sbbl
mov
adc
xor
test
ljmp
push
or
aad
lret
and
mov
lods
int
dec
cltd
push
dec
jae
loopne
mov
push
or
pop
aad
dec
cbtw
adc
scas
ljmp
dec
movsl
mulb
jge
mov
fidivrl
jecxz
add
mov
fs
and
dec
cli
fnstenv
push
sti
jge
cmpsl
mov
mov
ret
aaa
pop
adc
xchg
out
shrb
cs
push
into
dec
sub
inc
mov
addr16
jecxz
insl
sbb
mov
rcll
push
jns
dec
scas
push
mov
dec
inc
test
orl
sbb
and
jl
xorl
mov
cmp
sub
mov
aas
popa
das
xor
fs
cmpsl
cmp
loope
or
pop
sub
or
imul
ret
mov
loopne
add
jmp
sbb
pop
inc
jl
fldl
in
gs
xlat
shlb
loop
push
popa
xor
scas
mov
mov
repz
jnp
jno
outsb
aam
and
into
icebp
cmp
or
pop
mov
add
out
mov
test
es
imul
mov
mov
out
and
push
cmpsl
loopne
aaa
mov
push
ds
stos
pop
or
lret
scas
dec
lds
sbb
mov
adc
inc
cmp
sub
mov
div
mov
add
or
lcall
xor
test
add
adc
pop
adc
mov
ds
cmp
mov
subl
int
xor
je
cmp
cmp
mov
mov
sbb
or
cmp
mov
sahf
nop
in
ret
xchg
inc
fdivr
inc
dec
mov
loopne
adc
negl
or
lret
jmp
sbb
je
add
add
pop
mov
xor
cmp
das
sbb
lret
and
xchg
sub
mov
cs
pop
rcl
cmovge
stos
and
clc
mov
inc
sub
inc
mov
mov
add
cli
imul
icebp
ds
and
xchg
fimuls
mov
js
sarb
mov
imul
movsb
push
loop
rcrl
pop
mov
pop
or
pop
lahf
stos
add
jo
sub
out
xchg
in
inc
outsl
push
add
mov
stos
jae
push
add
test
xchg
outsb
cmpsl
jp
or
sar
inc
addr16
push
mov
dec
jge
or
cs
jp
push
lea
jae
jb
pop
mov
add
in
adc
shll
mov
in
add
int3
pop
cmp
shll
test
dec
std
int
mov
or
lock
mov
leave
inc
add
movsl
jo
mov
xchg
pop
in
dec
cmp
fwait
movsl
pop
mov
in
sbb
fmulp
xchg
je
sub
lds
aaa
iret
mov
movsb
das
push
mov
sub
mov
es
test
cmp
mov
iret
fcmovbe
test
out
mov
sbbl
push
imul
mov
repz
stos
mov
add
fistps
xor
lcall
bswap
addb
jo
xlat
outsb
jp
lods
ret
stos
and
int3
test
mov
orl
jle
loop
mov
sahf
dec
test
inc
push
fildll
je
test
ds
fs
sub
xlat
push
push
sub
dec
xor
jnp
add
aas
cli
sarb
jae
xor
mov
loop
ret
jge
sbb
test
and
lahf
push
or
test
rcr
sub
stos
dec
dec
sbb
dec
or
jl
imul
add
loopne
scas
fsubs
mov
std
push
inc
movsl
fisubl
dec
push
icebp
sti
sbb
cmp
mov
mov
or
scas
stos
jmp
pop
int
and
adc
xor
pop
jecxz
pusha
cmpsl
jmp
enter
dec
mulb
mov
ja
cmpsl
aas
mov
adc
xchg
js
enter
divl
outsl
stos
call
leave
pop
add
sub
aas
and
adc
fisubl
pop
pop
popa
ja
lea
mov
dec
inc
js
mov
bound
es
lock
or
adc
aad
jo
mov
sahf
int3
test
mov
jno
lret
lds
insl
xor
push
lods
movsl
popf
stos
testl
bound
lea
xor
rol
and
sbb
add
cs
loop
push
or
xchg
and
push
add
sub
lock
pop
mov
mov
add
movsl
mov
fs
add
mov
mov
mov
dec
dec
jmp
push
and
jmp
sub
pop
and
jecxz
cmp
adc
in
jb
jns
dec
imul
mov
pop
sbb
les
jecxz
fldl
mov
push
push
cmpsl
jb
and
pushf
push
call
movsl
jp
or
xor
add
std
jle,pt
pop
sti
or
enter
sub
pop
hlt
jmp
rcll
out
js
sub
mov
sbb
lock
je
mov
sbb
jge
cs
insl
dec
andb
add
sbb
push
jne
dec
add
int3
repnz
outsl
push
stos
or
lock
pop
das
push
add
add
mov
cwtl
scas
mov
aam
mov
rcrb
enter
test
dec
adc
pop
mov
push
mov
mov
inc
shrb
push
cmp
jns
sub
push
add
jge
mov
int
out
or
xchg
cmp
data16
mov
lods
call
mov
sbb
sahf
jo
in
loope
fstpt
cmpsb
pop
dec
test
cmp
mov
sub
cmp
adc
in
ret
push
xchg
dec
sub
pop
pop
mov
gs
dec
jo
inc
push
lds
icebp
imul
mov
mov
jne
cmp
rcl
imul
xchg
sbb
es
sahf
shll
cmc
or
sub
cmpsb
les
icebp
xor
push
fwait
ret
insl
js
dec
lcall
adc
lahf
jns
ss
cmp
idivb
frstor
fldcw
imul
adc
mov
push
adc
add
notb
sbb
int3
dec
mov
push
pusha
jl
rorb
xchg
jge
lock
mov
cmp
mov
mov
movsl
push
cmp
das
inc
aaa
mov
mov
fwait
sbb
rcl
leave
pusha
jmp
sub
or
adc
xchg
fs
xor
push
jecxz
loopne
in
mov
sub
mov
sahf
repz
mov
cmp
xchg
xchg
setne
inc
sahf
pop
cmpsl
xchg
or
push
xchg
cld
mov
cmp
lret
xchg
movsl
insb
inc
ljmp
mov
xchg
in
mov
mov
xor
out
leave
lea
push
pop
add
fnsave
add
lcall
xchg
sbb
and
add
movl
ret
pop
sbb
or
adc
push
cli
dec
lds
mov
pushl
hlt
jo
add
push
test
pop
pop
rolb
sub
fdivrs
test
pmuludq
in
subb
rcr
std
jns
xlat
mov
pop
aaa
adcl
dec
repz
xor
adc
mov
push
daa
es
lcall
mov
bound
imul
push
in
ds
inc
xor
push
out
jecxz
test
test
loopne
jle
syscall
daa
pop
pop
aam
inc
and
dec
sub
lods
mov
push
pop
movsl
outsb
mov
xorb
xor
sbb
cld
jne
nop
mov
popa
mov
jl
mov
outsb
xchg
pop
add
mov
testb
add
in
push
jo
cmp
popa
mov
jmp
lock
clc
xchg
shrb
xchg
shll
pop
roll
das
stc
dec
mov
ljmp
xchg
sti
inc
and
or
jns
subl
and
shrb
das
mov
xor
sub
push
add
out
mov
jle
adc
jg
loope
xchg
sahf
add
aas
push
sub
int3
cmp
out
inc
adc
les
jle
sbb
push
inc
mov
xor
repnz
test
cmp
sub
test
ss
repnz
dec
pop
add
int3
inc
or
inc
je
stc
ss
or
sub
jmp
mov
push
les
bound
and
test
add
lods
ficoms
dec
cmp
shrb
js
jns
add
pop
adc
or
in
or
fiadds
adc
sbb
mov
xchg
aas
push
clc
cltd
inc
xchg
inc
xlat
sub
mov
loope
cmpsl
into
les
aam
test
xor
pop
jbe
mov
mov
mov
rolb
into
sbb
pushf
shlb
daa
lahf
inc
sub
scas
xchg
shll
mov
or
iret
ja
sub
notl
xor
mov
mov
lods
pop
repz
fnstenv
out
cmp
xchg
sub
xchg
xchg
xlat
jne
fwait
pop
flds
stos
pop
jmp
sarl
clc
add
or
aam
fcoml
mov
adc
or
out
lock
jg
dec
or
sbb
dec
lods
mov
pop
sbb
test
sub
aad
stc
xor
leave
push
jmp
sbb
ss
push
insl
cmp
rclb
dec
test
jmp
fcomps
or
push
adc
xor
rcrb
mov
loope
jnp
adc
and
jle
jg
xchg
loopne
repz
add
das
lock
xchg
mov
jo
addr16
push
mov
or
cmpsl
addr16
jb
or
push
loop
ror
lods
pusha
or
daa
pop
inc
stc
iret
sahf
jl
jp
pushf
adc
lret
or
dec
cwtl
imul
fisubs
mov
add
insb
or
xor
fistps
add
insl
or
daa
out
sbb
add
mov
daa
repnz
inc
stc
add
outsl
fiadds
mov
sahf
jo
lcall
and
xor
enter
shr
jno
xchg
dec
mov
les
fisubl
lods
cmp
movsb
xor
sub
std
xor
push
scas
pop
cmpl
jmp
and
nop
in
xor
jecxz
loop
or
sar
sub
incb
mov
xchg
cmp
pop
xchg
ret
addl
jp
stos
std
push
cmp
adc
cli
lret
mov
or
test
movsb
push
push
aas
dec
mov
shll
cltd
repz
cmpl
pop
inc
sahf
jg
dec
sahf
test
jbe
js
je
push
mov
mov
cmp
push
das
mov
inc
jmp
ror
mov
mov
out
jns
cli
lods
xchg
movsb
fisubrs
test
mov
aam
mov
jbe
fld
mov
sub
test
jno
popf
iret
hlt
lahf
adc
xchg
mov
sbbl
mov
mov
or
mov
xor
xor
dec
mov
sub
cmovl
pop
aaa
mov
sub
cmp
lea
stc
leave
adc
imul
sbb
mov
adc
repnz
pop
fsubrl
mov
xchg
sbb
sub
jb
sbb
mov
fs
mov
xor
rclb
pop
roll
shrb
jno
push
sub
or
fisubrl
in
imul
stos
or
jle
cmp
xchg
cli
mov
push
dec
mov
cmp
jmp
mov
inc
pop
and
out
jbe
cmpsl
pop
clc
xor
lods
jmp
lock
cwtl
inc
adc
pushf
push
cmp
out
out
inc
mov
fucomip
add
es
xor
push
adc
rclb
xlat
iret
push
es
arpl
or
fdivl
adc
sub
in
mov
adc
mov
mov
mov
sbb
sahf
sub
je
popf
cli
das
inc
mov
push
sbb
lods
and
mov
cmp
insb
push
js
std
sub
adc
lods
sti
mov
mov
ljmp
mov
stc
cs
jb
out
sub
out
pop
cmpsb
imul
repnz
xchg
pop
lods
push
test
sbb
mov
adc
sahf
xor
dec
sbb
fmul
cmc
mov
test
movsb
cli
mov
add
inc
addl
mov
mov
sahf
fcoml
pop
ljmp
cltd
stc
and
jne
lods
ljmp
imul
in
stos
push
testl
and
lock
xlat
into
add
outsl
shl
andl
sbb
add
fstps
lods
into
or
cmp
xor
add
aaa
clc
push
sub
pop
mov
imul
lret
adc
clc
xlat
int3
divl
push
rclb
movsl
out
xchg
xorb
nop
xchg
inc
and
add
loopne
mov
add
movsb
mov
mov
mov
mov
mov
mov
cmp
push
repnz
sbb
repnz
data16
jecxz
popf
inc
add
push
fistl
ret
mov
out
lds
mov
fstpt
fistpl
xor
lods
cmp
cmp
jmp
dec
xor
ficoml
mov
dec
scas
mov
jg
pusha
xor
jl
popf
int
adc
in
and
mov
leave
xchg
out
lea
pop
mov
aad
subl
mov
sub
mov
cs
sbb
movsl
sub
inc
loop
adc
jg
rcrb
aam
push
jnp
aas
or
ja
in
pop
call
fcmovnbe
lock
es
jge
sub
addl
push
cmp
mov
mov
add
std
setge
call
sub
into
lahf
mov
les
push
les
sti
outsl
add
or
cmp
xor
ljmp
test
loope
add
loope
xor
adc
fdivs
mov
sub
and
pop
test
and
lahf
sub
fidivs
add
lods
mov
jbe
pushf
add
adc
and
xlat
fidivl
inc
sub
outsl
sbb
cmp
rcrl
adc
push
adc
jmp
aad
gs
out
pop
xor
daa
nop
jmp
imul
icebp
push
mov
fs
jecxz
cmpsb
test
pop
push
xchg
arpl
pop
andb
adc
add
movsl
dec
fwait
dec
adc
out
lods
mov
mov
xchg
orb
ljmp
jmp
je
out
push
pop
bound
loope
sub
pop
xchg
jp
fcomps
dec
aad
inc
ja
or
rcl
andl
mov
fscale
fisubl
nop
clc
inc
pop
scas
jg
movsb
inc
cmp
and
push
arpl
call
xchg
dec
les
xchg
push
aas
fsubrs
mov
scas
fwait
sbbb
lock
jle
push
outsb
dec
test
xchg
mov
sub
xchg
adc
add
mov
je
mov
lret
pusha
and
loop
clc
mov
mov
inc
xor
pushf
fsubr
push
jmp
sub
add
add
les
fs
push
mov
clc
pusha
not
jmp
std
dec
insb
dec
test
mov
dec
negl
add
lods
pop
cmpsb
mov
clc
cltd
out
loope
push
cmp
and
lahf
dec
mov
scas
inc
data16
inc
cmp
call
mov
cmp
or
movsb
jae
jns
int
out
shl
out
cmp
xchg
ljmp
insb
mov
push
cmc
sub
cmpb
adcl
test
mov
nop
and
xor
loopne
and
out
push
mov
outsb
sub
repnz
dec
push
pusha
rcll
negb
outsl
enter
pop
mov
sbb
in
jecxz
iret
jae
cli
jb
call
jns
cmpsl
enter
pop
or
sbbb
es
cmpsl
bound
mov
popa
ret
ret
in
mov
in
andb
fld
int3
pop
mov
dec
inc
stc
sahf
sub
bound
fwait
add
ljmp
mov
mov
jns
lret
mov
int
mov
mov
jecxz
jne
cmp
push
add
cld
adc
out
data16
das
jg
sbb
xchg
mov
cld
push
shrl
out
sub
or
lahf
jbe
andl
adc
ror
sub
pop
adc
adc
xchg
andb
lar
cmpsb
xlat
add
push
mov
mov
mov
lods
sti
lret
pop
mov
xorl
dec
sub
stc
mov
dec
inc
bound
add
lds
dec
sub
pusha
cmpsb
in
movsl
int
mov
scas
ljmp
sbb
repnz
in
lods
cmpb
daa
add
sbb
jmp
sbb
ret
int3
cmpsl
xchg
pop
and
mov
fimuls
or
test
aas
or
sub
call
push
hlt
mov
xor
cmp
mov
pop
sbb
shl
sub
movsb
into
xchg
inc
xlat
mov
repz
mov
fsubs
pop
pusha
sub
sub
in
mov
cmp
clc
aam
dec
aad
dec
jne
dec
add
mov
fldenv
unpckhps
mov
jmp
loopne
mov
dec
imul
adc
add
rclb
dec
lcall
call
mov
jmp
jge
test
fdivrs
sub
jbe
scas
mov
dec
or
dec
loopne
inc
push
mov
fwait
jmp
andl
rol
push
fcomp
dec
sbb
rsqrtps
dec
out
adc
pop
pop
outsb
loope
cmpsb
jbe
call
jle
add
jmp
aad
pushf
lcall
pushf
stos
shlb
lods
add
aas
test
loope
test
loopne
lods
cmpsb
dec
push
les
mov
jae
das
js
test
mov
dec
daa
es
lock
adc
mov
jmp
hlt
lahf
adc
test
lds
cmp
or
add
jbe
loop
jae
add
mov
jno
outsb
xchg
mov
fisubrs
sbb
xor
mov
jo
jo
fisubs
jp
lea
or
sbb
sbb
jne
jae
movsl
fidivrl
jecxz
clc
incb
jp
mov
inc
add
movsb
pop
jne
dec
sbb
jns
stc
test
pop
pop
jge
fistl
or
adc
cmp
scas
cmpb
jge
int3
sarb
out
and
cmp
sbb
jns
mov
mov
iret
div
push
rolb
pop
fidivrl
or
dec
push
mov
popf
popa
fcomps
pop
stos
jg
mov
rcrl
fcoms
or
mov
xor
dec
mov
mov
cmp
cmp
mov
cwtl
inc
xlat
xchg
movsl
cli
cmp
aaa
inc
imul
call
insl
push
iret
xchg
push
mov
xchg
mov
xchg
mov
pusha
cmpsb
incb
ret
add
inc
imul
mov
enter
movsb
das
jecxz
notb
mov
pop
mov
rol
addr16
ja
sub
xor
sahf
xchg
xchg
jns
push
inc
fld
repz
mov
cwtl
shlb
push
jl
mov
mov
add
cmp
xor
mov
fcomp
inc
sbb
push
pop
filds
into
jns
mov
jle
or
sbb
stos
sub
iret
fsubp
lcall
std
mov
pop
nop
fsubrs
mov
lcall
sub
js
fwait
cld
dec
mov
sbb
jns
dec
jo
sbb
mov
pop
cmpsb
sbb
xchg
ret
mov
push
js
sub
rorb
sbb
loop
lods
scas
repz
sbb
mov
pop
popa
lcall
add
xchg
aaa
inc
xor
xor
and
sub
and
mov
mov
mov
jae
adc
stos
xchg
fucomp
lea
cltd
xadd
stc
pop
inc
in
fsub
pop
int3
ss
mov
inc
insb
loope
push
mov
lea
sub
dec
or
sub
or
cmpsl
subl
mov
and
insb
xchg
enter
pop
mov
std
nop
inc
subb
imul
mov
inc
add
mov
or
and
shl
sub
scas
push
sahf
bound
mov
jae
cmp
out
loop
cmp
outsb
sbb
jb
xchg
dec
daa
aaa
out
shl
fs
or
adc
nop
out
cmp
push
cmp
xor
inc
ds
xor
pop
clc
inc
mov
push
mov
fsts
sbb
mov
movsl
insl
cmp
std
cltd
imulb
pop
inc
lret
iret
jae
sub
loop
mov
or
pop
mov
sub
dec
push
pop
popf
cld
dec
cmp
popf
or
add
fcmovbe
sbb
xor
shll
in
pop
fisttpl
inc
sbb
addr16
insb
sbb
jge
cmp
or
sar
pop
stc
insb
aam
fcoms
add
sbb
lret
push
outsl
out
out
mov
sub
jno
lods
jmp
mov
add
pop
dec
xor
or
push
in
es
xor
iret
mov
or
gs
or
ljmp
or
inc
fs
gs
push
xchg
xchg
sub
add
dec
pop
shlb
push
sbb
mov
jne
popa
jp
or
out
pop
inc
clc
mov
inc
aaa
lcall
mov
mov
inc
daa
inc
inc
gs
mov
mov
cmp
lds
add
dec
sub
test
mov
sbb
in
adc
loopne
lds
pop
stos
mov
repz
in
mov
xor
movsl
inc
std
push
xchg
ds
xlat
xlat
mov
dec
dec
pop
int
mov
js
incl
cmp
xchg
fnstsw
ja
fidivrs
dec
push
aaa
into
mov
cmp
lahf
mov
loope
fidivrl
sbb
cmp
xchg
int
fdivs
aaa
ss
rcrb
jnp
adc
dec
xchg
ss
xchg
mov
adc
aas
cbtw
xor
pushf
sbb
scas
iret
lcall
or
mov
sbb
cmp
mov
add
inc
test
cmp
loopne
xchg
push
xor
or
clc
mov
shlb
int3
mov
int
or
sahf
jle
cwtl
mov
sub
or
movsb
out
push
sub
inc
in
pop
push
rorl
mov
push
xor
add
shrb
cmp
jnp
and
xchg
ss
test
inc
mov
loop
mov
push
pop
notl
pop
add
jge
or
rcrl
mov
testl
xchg
jg
setg
das
cmp
jge
leave
loope
cmc
sub
add
and
lods
mov
aad
jmp
popf
fs
subb
test
wbinvd
rol
jl
imull
inc
jmp
add
daa
les
dec
cmp
pop
mov
lods
mov
jnp
imul
adc
pop
ja
int
fistps
enter
shll
mov
outsb
nop
lcall
clc
fldl
pop
jmp
test
outsl
inc
jge
test
rorb
and
stos
scas
ljmp
xchg
add
adc
mov
into
sub
sub
mov
std
mov
test
cs
fldl
inc
icebp
adc
ljmp
es
sbb
mov
xor
ret
fiadds
or
fwait
dec
xor
adc
mov
mov
jbe
inc
js
cmp
loopne
sbbl
lret
adc
jae
jmp
mov
cmp
in
cs
sbb
jle
rcrb
pop
dec
xorb
mull
sbb
cmp
movsl
push
lret
into
movswl
mov
outsb
jb
pop
stc
push
mov
aam
xchg
xchg
add
fidivl
push
push
rolb
and
lret
add
cmp
das
lret
rolb
add
dec
adc
jecxz
or
inc
pop
movsb
mov
lock
add
insl
jo
inc
js
sahf
in
mov
jbe
les
sbb
fidivrs
mov
rcl
push
mov
lds
xor
into
jne
lods
jecxz
dec
mov
aad
inc
or
push
xchg
xchg
mov
outsb
fisttps
xor
sbb
jle
adc
stos
pusha
enter
cmp
nop
jnp
pop
cmp
and
int3
rcrl
test
movsb
lods
push
fnstenv
mov
mov
xchg
xchg
jl
rcrl
or
pop
jns
cmpsl
sbb
mov
daa
sbb
call
pop
test
call
jne
pop
les
ss
loop
mov
adc
push
pusha
loop
mov
sub
pop
ror
mov
ret
mov
popf
jle
jnp
fstps
dec
and
cltd
dec
jge
repz
ljmp
adc
notl
enter
mov
jge
ja
into
in
mov
jb
in
sahf
movb
adc
andb
mov
inc
cmp
xchg
xor
cmp
hlt
std
in
mov
sub
jno
mov
das
xor
stos
push
pop
insl
lock
mov
inc
xchg
xchg
jmp
out
and
out
roll
nop
out
adc
cmp
lret
fistps
ret
fistpl
repnz
repz
cs
aas
pop
iret
es
in
subb
lds
std
and
lods
or
pusha
adc
movsl
dec
sub
and
je
maxps
lret
test
mov
add
push
jl
mov
and
aad
mov
repnz
mov
mov
outsb
jge
aam
xchg
or
test
dec
std
mov
in
lret
dec
ds
or
lea
rcl
lea
adc
rcr
roll
ret
ss
jne
fisttpl
lea
push
jmp
mov
lock
push
and
stos
iret
mov
or
js
mov
scas
in
imul
enter
stos
xchg
jne
jmp
inc
mov
mov
xchg
popf
xor
sbb
stc
nop
jmp
mov
cmpsl
out
xchg
sbb
in
out
cld
push
daa
push
push
pushf
stos
shll
mov
jmp
movl
adc
sbb
dec
cs
push
and
xchg
xor
fs
add
test
sbb
sub
add
pop
jns
adc
xor
add
xchg
mov
insl
push
ds
das
adc
cmc
jb
pop
repnz
lcall
jns
fstpl
lret
popf
push
mov
mov
or
push
stc
stc
test
cmp
scas
pop
xchg
lahf
out
insb
xor
out
cwtl
adc
mov
jge
inc
sbb
xor
lods
fistpl
pusha
leave
data16
or
adcl
mov
outsl
out
imul
dec
jl
inc
mov
mov
daa
inc
stos
imul
sub
sub
jmp
add
cmp
cmc
scas
add
mov
pop
xor
movsb
movsl
mov
sub
or
in
stos
cwtl
fsubs
adc
or
jge
sbb
and
cwtl
fstps
push
xor
cwtl
rclb
lods
ds
sarl
ror
pop
mov
mov
imul
outsb
cmp
shlb
inc
cmc
inc
andl
pushl
or
mov
movsb
mov
sbb
mov
mov
add
aaa
pop
nop
push
lret
lock
loope
idivb
shll
dec
jo
or
outsb
sbb
test
sub
lock
xor
test
ss
lock
mov
imul
in
sbb
ja
cmp
lds
xchg
jecxz
int3
pushf
rorb
pop
push
mov
pop
call
fs
pop
arpl
rolb
ja
test
lods
ja
test
or
loope
fsubrs
jg
lret
dec
mov
mov
mov
push
jp
mov
add
sbb
cmp
mov
sbb
loope
sti
cmc
faddp
xchg
fadds
adc
xor
popf
sub
int
mov
movsl
cmp
cs
inc
sub
mov
mov
mov
xchg
fistpll
pop
nop
jb
sub
cmp
in
jae
xor
icebp
mov
inc
std
cmpsb
ja
xor
insl
fstl
or
outsl
jb
cmc
mov
cmpsl
mov
mov
inc
test
sub
notb
in
lock
inc
inc
cmp
ret
bound
vminps
sahf
or
dec
rcl
pop
mov
lea
lock
mov
pop
std
pop
jns
mov
loope
lcall
inc
pop
sarb
pop
lcall
idiv
xorl
inc
lods
shrb
sahf
pushf
mov
cmc
jbe
pop
out
sbb
dec
testb
xor
xor
mov
dec
rcr
mov
ja
xchg
sbb
push
xchg
popa
dec
add
loop
sbb
sbb
stos
sbb
cmp
mov
lret
fs
jge
popa
push
mov
sub
imul
jmp
mov
data16
push
dec
test
rorb
sub
pop
adc
jmp
mov
mov
or
cmc
subl
hlt
lock
sbb
adc
pop
jmp
aam
cmp
adc
sbb
jp
cmp
add
sbb
loop
insl
clc
push
cmc
loopne
or
xchg
cmpsb
xchg
jb
rcrl
ja
ss
add
lods
inc
sbb
addb
in
push
xor
push
lods
sarb
mov
and
or
jbe
pop
icebp
mov
mov
xchg
repnz
imul
test
out
push
xor
clc
cmp
pop
mov
movl
gs
sub
call
push
add
out
js
jae
roll
addl
enter
jo
jp
pop
adc
lods
or
and
xchg
add
cmp
scas
sahf
sub
push
data16
aad
adc
or
mov
lahf
fsubrs
cmp
cmp
roll
xor
xchg
or
sbbl
cmpb
pop
adc
xor
jnp
outsb
popf
out
inc
add
ja
out
mov
fists
ljmp
gs
ss
dec
imul
frstor
push
sbb
jp
idivl
pop
xor
aaa
jmp
test
dec
inc
addb
inc
sub
fldl
imul
jg
lcall
xchg
outsl
mov
adc
pop
inc
sub
mov
mov
movsb
cs
mov
enter
mov
cmpsb
mov
les
xorb
rcrb
mov
push
mov
aaa
mov
lcall
cmp
imul
in
shlb
hlt
add
dec
sub
rcr
subb
jg
xchg
pop
mov
cmp
ret
jmp
clc
or
adc
sub
hlt
outsl
adc
hlt
or
mov
jbe
in
sbb
rolb
xor
mov
add
jns
lods
sub
clc
icebp
movsb
inc
xchg
dec
aad
pop
and
in
ja
or
outsb
lock
dec
sub
movsb
dec
shrl
mov
iret
or
pop
pop
pusha
insl
xchg
insb
xor
adc
rorb
jnp
mov
mov
fdivrl
repz
popa
dec
mov
imul
stc
push
lret
adc
xchg
mov
or
cs
movsb
push
pop
push
pushl
adc
dec
notl
add
mov
cld
dec
in
addr16
xor
ljmp
dec
fsubp
sbb
rorl
icebp
push
fiaddl
cmp
inc
push
ret
loop
dec
fcmovnb
pop
mov
xchg
jge
dec
pop
pop
cltd
iret
xor
sub
xor
lods
bound
aam
xchg
sahf
movsb
into
pop
nop
mov
cmp
jge
mov
mov
jmp
stos
dec
notl
inc
andb
sub
xchg
stos
rcl
jge
dec
add
mov
dec
add
fists
sahf
enter
mov
xlat
mov
int3
popf
mov
mov
mov
arpl
dec
lahf
flds
andl
push
std
and
insl
push
and
inc
les
in
fnstsw
sub
xor
mov
xlat
imull
testl
test
jg
rorb
outsl
or
jbe,pn
cli
bound
lock
into
or
lods
popf
add
ds
ficomps
dec
mov
aam
in
nop
mov
xlat
mov
cmp
shrl
mov
jge
jae
dec
sbb
mov
enter
sub
sbbl
and
pop
push
or
pop
mov
mov
in
outsl
loope
lods
cmp
sub
ss
clc
push
sbb
notb
stos
nop
adc
xchg
mov
lea
xchg
in
movsl
fsubr
pop
stos
xor
popa
fcomps
xchg
sbb
imul
cwtl
cmpsl
mov
mov
push
adc
ljmp
out
sarl
pop
mull
insb
push
cmpsl
hlt
cld
jo
out
cmp
pop
aad
rcr
inc
stc
std
int3
fcmovbe
lahf
jno
test
inc
lret
cmc
sub
insb
movsb
mov
xlat
stc
cmp
mull
sti
push
jp
sti
mov
xchg
adc
mov
movsl
push
prefetch
or
into
lcall
sbb
out
mov
dec
mov
push
les
test
lock
insl
rclb
jp
jg
cwtl
ljmp
mov
and
mov
pop
fisubrs
lahf
adc
out
mov
cwtl
sbb
stos
sbb
cmpsb
hlt
add
nop
lcall
in
rclb
js
imul
sbbb
rorb
std
xchg
push
in
lds
mov
dec
movsb
rcrb
xchg
mov
int3
jnp
jno
add
test
adc
sbb
in
push
inc
adc
cmpsl
xchg
arpl
int3
pop
pop
fsubs
dec
cmp
pop
mov
dec
jb
dec
imul
movsb
in
in
dec
xor
rcrl
pop
pop
jns
pop
xchg
jns
fisubs
dec
add
enter
dec
popa
adc
or
lcall
xor
call
mov
add
jnp
mov
loope
movsb
addr16
lret
mov
idivb
test
stos
rorb
fwait
fs
pop
add
outsl
inc
fisttpll
adc
clc
push
les
in
push
inc
stos
xchg
jns
or
scas
or
jecxz
in
jle
cmp
es
jmp
into
pop
sbb
mov
and
dec
pop
aaa
mov
jo
daa
and
dec
lret
icebp
push
jb
mov
add
jg
jecxz
xor
aad
mov
scas
sub
fistl
cmc
lgs
sub
insb
gs
jp
push
fsubl
sbb
jecxz
int3
pop
inc
ja
inc
rclb
adc
popf
sbb
fstpl
cmp
sub
cmpsb
mov
sub
pop
iret
test
divl
mov
pop
adcl
gs
pop
inc
enter
jmp
pop
addl
inc
sbb
scas
xchg
cs
hlt
repz
lods
je
daa
std
mov
insl
mov
inc
lods
rol
pop
pop
movb
test
ffreep
imul
lret
or
xchg
aam
fwait
add
and
push
xchg
or
adc
mov
mov
ds
das
add
dec
pop
xchg
in
jle
mov
adcl
pop
test
aam
roll
mov
es
les
pop
inc
movsl
fsts
fwait
repnz
push
iret
fstl
into
loope
cmpsb
mov
shrl
mov
xor
fwait
xchg
sbb
es
jl
and
push
sub
cmp
clc
rorl
idivl
inc
pop
dec
xchg
std
cmp
adc
mov
xchg
jge
sbb
enter
sub
jo
xor
mov
sub
test
dec
inc
shl
mull
adc
fcomps
cmpb
sbb
xchg
sarl
clc
push
cmp
inc
cmp
mov
inc
push
enter
fs
loop
cli
mov
out
sub
sbb
jp
mov
dec
call
scas
iret
aas
sahf
iret
fbstp
and
ljmp
mov
lds
rorb
cltd
stc
fcmovne
pmulhw
cmp
push
jo
inc
push
adc
iret
fwait
pop
jge
jne
popa
mov
xchg
dec
outsb
jae
pop
sbb
push
in
dec
ja
out
icebp
sbb
cmpb
cli
pop
inc
js
or
aas
adc
add
scas
pop
mov
lds
ds
mov
divb
mov
mov
mov
pop
xor
add
mov
ss
pop
fldenv
outsb
add
fdiv
xchg
lods
or
shlb
or
nop
shlb
mov
nop
pop
ret
mov
push
xchg
shlb
jnp
sbbl
and
xor
sub
rcll
loope
sbb
rcll
mov
shl
mov
sbb
xchg
sub
xchg
adc
imul
xchg
imul
leave
pop
adc
adc
or
fisttps
xchg
pushf
and
and
xor
ss
mov
lret
call
je
or
decl
xchg
lret
pop
push
test
cmc
dec
dec
mov
inc
iret
fistps
stc
clc
std
in
dec
out
sub
dec
je
and
xchg
mov
jl
cli
adc
xlat
and
adc
fsubrs
pop
xor
sti
in
mov
push
fstl
jp
imul
lods
scas
lret
or
fnsave
fiadds
lcall
push
sbb
call
add
ds
adc
push
aaa
cs
test
dec
rolb
and
push
mov
dec
or
lcall
lret
mov
cmp
lcall
dec
xchg
push
and
rcl
fldt
cltd
clc
add
popa
aaa
insl
test
pop
cmc
lods
jmp
hlt
repz
shlb
mov
xor
daa
adc
and
xlat
inc
jmp
cltd
lea
mov
add
lea
cmp
xor
into
inc
ja
ffreep
inc
jo
mov
int
scas
sbb
jno
fists
cwtl
xchg
lods
and
lcall
lcall
mov
jle
dec
mov
movsb
sub
fnstenv
sub
iret
cmp
enter
dec
push
test
pop
push
cmp
fs
cmp
xchg
pop
fucomp
jp
std
aam
jle
and
xchg
cmpsl
sub
sub
jnp
pop
jmp
inc
and
push
pop
mov
inc
mov
mov
inc
cmp
enter
setns
and
fs
lret
fdivrl
sbb
push
xchg
push
loopne
test
adc
std
push
subl
ss
sbb
pop
mov
pop
xor
daa
into
lea
clc
lock
adc
add
ljmp
dec
jg
or
mov
sti
pusha
fcmovb
out
pand
pushf
pop
mov
cmpsl
popa
xchg
fidivrs
lcall
mov
cmp
cwtl
sbb
out
loope
test
loope
xor
add
xchg
sub
push
mov
inc
sub
ja
or
cmp
shll
and
fiaddl
enter
pop
out
jecxz
ss
pop
lret
mov
adc
adc
pop
les
aam
mov
in
ljmp
or
movl
call
fsubrp
sbb
out
imul
addr16
mov
rorl
or
fists
mov
dec
shll
mov
jge
pop
popf
test
out
cmpsl
vunpckhps
xor
repz
lods
add
mov
loop
mov
xor
and
sbb
in
je
lret
clc
cmp
xchg
xchg
mov
rclb
adc
mov
movsl
sahf
mov
add
xor
es
add
inc
inc
sti
aaa
js
imul
lods
mov
out
lret
pop
fwait
repz
movsb
out
repz
or
dec
or
mov
pop
pop
les
shlb
jge
movsb
lret
imul
adc
adc
lret
enter
inc
movaps
jg
inc
sub
mov
inc
aam
or
jae
leave
jbe
or
dec
jmp
add
movsb
push
push
xchg
rorl
dec
add
push
shrb
push
xor
mov
scas
inc
hlt
divb
ret
aad
xchg
and
push
sbb
sub
lods
cmpb
jo
jb
mov
xor
dec
push
out
lea
pop
stos
ja
jb
sahf
sbb
dec
daa
jo
fisubrl
nop
jge
aam
mov
sar
fiaddl
adc
sbb
movsb
pushf
cltd
xchg
sub
inc
mov
inc
int3
repz
jmp
jle
pushl
mov
xor
sbb
movsb
in
mov
add
sar
dec
mov
mov
dec
sub
xchg
outsl
mov
push
add
cs
mov
adc
push
cmp
pop
ja
rorb
xor
jmp
cmc
and
enter
movsb
les
mov
sub
test
mov
imul
mov
push
loope
bound
dec
rolb
adcl
ret
or
shll
add
xchg
sub
fsubs
inc
push
inc
ret
fwait
sbb
jb
cmp
ds
xchg
or
shrl
ss
sbb
xchg
xchg
sbb
in
enter
jl
sub
jge
gs
stc
js
dec
mov
out
imull
sub
hlt
inc
jg
loopne
lods
dec
xchg
adc
add
das
or
jge
test
xor
lahf
repnz
fidivl
mov
scas
cmpsl
sbb
adc
mov
fbstp
adc
test
in
cmp
imul
movsb
out
adc
xor
pop
or
jae
push
daa
ret
mov
loop
adc
hlt
cmp
pop
and
mov
jne
pop
or
movups
ljmp
testl
pop
stc
fmuls
insb
popa
add
inc
stos
sarl
or
aaa
lods
mov
stc
xchg
rorl
ss
negb
in
dec
lods
or
push
ficompl
xor
adc
addl
mov
fldenv
xorb
es
cs
push
negl
xchg
pop
sub
pop
fsubrl
and
cltd
and
cmpsb
xor
push
hlt
rcrl
outsb
push
cmpsl
or
adc
sub
lret
and
dec
xchg
mov
rcll
dec
or
jmp
fidivs
mov
rorl
xlat
test
inc
push
mov
pop
push
mul
jnp
and
mov
clc
decb
imul
cmp
inc
shl
fwait
cld
das
or
aad
loopne
hlt
sub
imul
loop
cmp
outsb
jle
rorb
push
testl
mov
loopne
add
dec
rol
outsl
pop
xchg
insb
sub
mov
inc
in
sub
mov
mov
pop
mov
movsb
loop
mov
adc
lret
mov
iret
pop
cmp
lahf
jb
add
cli
aam
into
push
inc
or
sbb
cmp
mov
movsb
adc
sub
or
enter
adc
xor
outsl
add
mov
je
xchg
test
cmp
pushf
adc
add
hlt
mov
stc
filds
popa
xchg
xor
sub
lcall
rolb
aad
jo
cmc
pusha
fsubrp
fdivrs
rcrb
sub
dec
icebp
fwait
push
adc
jle
cwtl
ljmp
inc
pop
lret
inc
push
lahf
jne
push
int
pusha
cmp
icebp
xchg
xlat
sub
cmp
sub
bound
shlb
xor
mov
sbbl
inc
cmpsb
fs
stc
xchg
pop
fcoml
inc
es
clc
pusha
sub
push
sub
or
aam
pop
fucompp
and
movsb
xchg
insb
iret
pop
mov
mov
mov
sub
sbb
test
xadd
sahf
sbb
mov
pop
cmp
ret
inc
loop
mov
mov
add
stc
mov
jp
pop
xlat
mov
sbb
out
loope
xor
loop
dec
mov
cmpsb
inc
in
xor
adc
or
arpl
loopne
dec
mov
rdpmc
dec
les
js,pn
dec
gs
js
popa
and
scas
pop
add
sbb
mov
inc
cmp
mov
xor
pop
lods
aam
inc
sbb
push
mov
rolb
test
loope
jne
fs
clc
loope
pop
rorl
pop
popa
aad
inc
popf
lret
fmuls
mov
jbe
out
cmc
scas
push
mov
inc
dec
jl
inc
lock
cld
scas
xor
jb
push
push
mov
ret
mov
nop
sub
xchg
js
repz
adcb
lds
jo
xchg
jle
loop
and
adc
jns
test
aaa
fcomip
mov
mov
sbbl
add
aas
jb
out
jbe
and
and
mov
pop
pop
mov
popf
sub
shr
clc
sub
add
lods
mov
sbb
aad
pop
jno
push
dec
mov
mov
sub
jbe
cmp
or
mov
add
adc
mov
clc
adc
sbb
mov
mov
sub
pop
push
cmp
xor
cwtl
inc
pop
negl
adc
mov
jo
sbb
test
jge
sarl
loope
inc
adc
jbe
in
mov
mov
cmp
cmp
jecxz
lahf
mov
leave
fidivs
adc
lcall
mov
andl
xor
xor
icebp
ds
clts
mov
arpl
loope
ss
pop
push
xlat
cli
leave
in
les
cmp
js
in
aaa
subl
fisubrl
dec
or
lret
scas
mov
sbb
dec
mov
gs
aad
in
xchg
ljmp
fiaddl
decb
add
and
cli
jne
mov
sti
dec
test
mov
lods
test
mov
sbb
jp
ljmp
in
mov
fidivrs
fs
mov
test
ss
pop
test
jmp
std
mov
outsl
hlt
call
xor
mov
jo
add
mov
pop
or
imul
sahf
jmp
test
scas
push
add
mov
push
int3
adc
lock
dec
imul
add
out
fists
es
cmp
jle
or
std
daa
loope
sub
pop
or
inc
mov
sbb
clc
mov
sbb
fwait
jmp
and
jbe
pop
ffreep
aaa
mov
adc
test
and
jns
xchg
sub
or
aad
mov
mov
pop
inc
adc
xchg
testb
adcl
jb
test
cmp
cmp
and
xchg
adc
cmp
jl
stos
out
jp
adc
mov
out
cmove
mul
push
divl
subl
iret
push
popf
adc
mov
sbb
or
mov
mov
fisubrl
xchg
iret
push
fdivl
mov
addb
and
pop
xor
add
incl
lahf
outsl
cs
inc
jnp
add
adc
shl
push
and
test
pop
ja
or
jp
xor
and
or
data16
jno
mov
cld
idivb
mov
cmp
ja
push
sbb
and
inc
popa
call
mov
into
in
mov
lods
fdivr
cs
test
jne
mov
push
nop
add
iret
add
arpl
mov
xor
arpl
lock
adc
or
ficompl
ja
push
jmp
call
or
imul
xor
adc
iret
mov
mov
inc
mov
mov
adc
inc
sbb
sub
insl
sbbl
cmp
loop
xor
push
cmp
out
xchg
rcll
jno
sbb
push
fdivs
xchg
pusha
xlat
jp
fdivrs
lods
out
jnp
xchg
jmp
ljmp
faddl
push
movsl
mov
push
test
mov
dec
sbb
adc
popf
ds
pop
sbb
sub
nop
mov
dec
lret
dec
sahf
shrl
fsubrl
xor
sub
mov
cld
decb
lahf
sub
idivl
ret
mov
lods
movsb
lock
jge
scas
ficomps
ficoml
loop
inc
dec
xchg
cmp
rcl
aas
shll
pop
mov
ret
icebp
mov
jne
not
add
movnti
pop
jne
ja
sub
das
push
movsl
or
sub
repnz
testl
cmp
adc
xchg
jmp
cmp
inc
lock
dec
sub
jge
movsb
jmp
inc
pop
push
jnp
or
pusha
jns
xor
push
mov
je
dec
test
inc
xor
movsl
sub
pop
inc
clc
sub
in
push
popa
movsl
fs
addr16
popf
imull
inc
inc
xchg
cmpsl
xor
stos
pop
adc
dec
push
clc
repnz
movsl
iret
loope
push
sub
or
push
cltd
aaa
into
sbb
sub
rcr
cmp
sub
xchg
nop
or
xor
mov
roll
sub
mov
jae
add
xchg
movsl
jo
mov
push
sub
adc
cmp
ljmp
leave
test
into
mov
jge
lret
shl
enter
mov
inc
cli
js
sbb
sahf
dec
mov
arpl
fdivrs
mov
dec
stos
push
xor
lcall
push
add
js
sbb
popf
or
cmpsb
ror
push
cmpsl
mov
sbb
jae
outsb
mov
mov
jmp
dec
mov
negl
in
in
movsb
out
ds
das
mov
mov
adc
jecxz
or
cmp
cmp
ss
mov
adc
mov
lods
stos
sbb
fstp
clc
xchg
js
out
mov
cmp
ljmp
mov
cmpsb
add
in
and
clc
fisubrs
sub
shll
rcrl
in
mov
ret
sbb
mov
push
and
popf
pop
comiss
cmp
sub
sarb
cmp
outsb
adc
xchg
adc
mov
mov
sub
xor
xchg
lahf
sub
cs
xchg
andb
hlt
fldcw
and
movsb
adcb
insb
pop
ret
loope
aam
xchg
movsb
loopne
int
mov
insb
subl
in
add
movsl
das
lea
scas
int3
lds
cmp
adc
cli
dec
icebp
icebp
ret
inc
xlat
inc
xor
pop
int3
adc
aad
inc
pusha
ficompl
sbb
dec
jo
ja
lds
mov
mov
std
or
add
cmp
leave
rcl
out
adc
or
jbe
test
rcr
mov
jg
mov
inc
xchg
adc
enter
inc
shll
mov
jmp
cmp
push
test
xchg
shrb
fs
out
jmp
imul
xlat
loopne
sbb
pop
mov
or
add
push
loop
bound
adc
cwtl
cmp
xchg
xlat
bound
cmp
add
inc
orb
sub
sbb
fmuls
out
adc
lock
fcoml
cwtl
lcall
test
repz
imul
in
inc
hlt
pusha
cmpsl
icebp
in
test
popf
xchg
daa
mov
inc
iret
out
out
add
add
inc
sbb
cwtl
out
scas
cmpsl
pop
mov
pop
push
mov
lret
xchg
push
mov
outsl
inc
test
cmp
ret
mov
mov
ret
arpl
out
test
jmp
rorl
xchg
push
imul
jae
mov
addl
call
in
push
or
rolb
aas
inc
sub
mov
mov
push
xchg
orb
cltd
fistl
adc
add
jmp
jg
shrb
iret
and
sub
cmp
arpl
sarl
stos
pop
inc
jmp
aad
pushf
mov
push
jno
sbb
mov
movsb
imul
dec
dec
ss
call
stos
je
mov
pop
aam
scas
sbb
or
outsb
dec
test
popf
adcb
mov
mov
repnz
cmp
sbbl
out
fs
loop
addr16
cmc
fld
scas
adc
push
adc
jmp
sahf
inc
sbb
lret
ret
mov
imul
jne
add
test
dec
outsl
lahf
xchg
xchg
jg
sahf
fimull
jns
adc
jge
adc
pop
mov
inc
inc
mov
popa
sahf
mov
inc
std
or
cmp
sub
lds
inc
addl
ret
mov
ds
pop
cmp
inc
mov
test
xorb
cmp
dec
cmp
jmp
loope
addr16
jecxz
insb
loop
adc
int
lods
aaa
mov
dec
in
js
or
insl
jnp
dec
test
inc
ljmp
inc
cmp
outsl
outsl
jle
jg
xchg
leave
sub
xor
icebp
leave
sbb
icebp
mov
dec
sbb
test
adcl
loop
sti
iret
xor
shl
mov
insb
loop
pop
inc
adc
mov
sbb
jg
fs
jg
dec
test
mov
mov
dec
cltd
lods
stos
fcomps
shrl
mov
add
jbe
pop
bound
out
scas
lods
call
cwtl
aam
lea
je
orb
mov
sbb
aam
and
shrl
lock
loop
mov
call
or
adc
push
mov
lret
sub
push
subl
out
mov
mov
adc
dec
xchg
stos
mov
lret
in
or
rcll
pop
je
mov
sahf
mov
and
dec
or
dec
and
shrl
rol
rcr
add
cmc
test
rcl
lahf
pop
xlat
icebp
stc
mov
inc
pop
inc
mov
jmp
mov
dec
push
roll
push
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
shlb
popa
jo
cmp
pop
push
jle
push
std
xor
sarl
imul
scas
call
mov
fs
scas
pop
imul
mull
mov
or
incb
jo
test
sub
nop
add
gs
imul
cs
out
dec
mov
sti
cld
loopne
mov
or
jb
jg
lahf
cmp
mov
cmp
push
add
mov
mov
aam
call
in
jae
rorb
sbb
push
inc
and
cmp
je
mov
enter
popa
sahf
ret
inc
and
adc
insl
xor
push
call
lcall
or
aad
jmp
jge
push
mov
add
lods
out
add
sub
fcmovb
inc
fcoms
mov
sbbb
repnz
adc
xchg
inc
jmp
ss
fsubl
inc
leave
ret
inc
add
dec
in
inc
lea
mov
or
test
inc
push
lea
mov
inc
mov
mov
sub
daa
inc
lea
orb
add
rcl
cld
movnti
dec
jne
mov
ret
inc
push
inc
dec
inc
inc
sub
inc
sub
popa
mov
test
cmp
inc
jb
add
push
sub
mov
jmp
or
ret
pop
test
jne
mov
push
call
rorl
rclb
fcoml
popw
cmpsb
dec
sbb
push
push
push
xor
add
sti
cmp
and
mov
dec
sbb
sbb
inc
pop
test
cmpsb
addr16
mov
orb
jnp
inc
mov
mov
je
mov
mov
xchg
mov
pusha
ret
sub
cmp
shl
rorl
rorl
je
psubd
push
or
mov
sti
sub
mov
mov
inc
add
out
push
add
or
jns
mov
lea
popf
mov
lret
push
call
movsl
imul
cmc
mov
and
orb
inc
mov
mov
aaa
or
rolb
out
add
xor
and
cld
cmp
add
fstpt
mov
in
ret
cmpb
jne
sbb
rolb
and
fimull
adc
sub
fadds
pop
test
je
mov
xor
out
sub
fmul
push
pop
pop
cvtdq2ps
arpl
mov
inc
jne
cmp
inc
jmp
cmpb
je
or
xor
add
jbe
or
push
xchg
adc
inc
push
inc
lcall
sti
mov
clc
int
ret
cwtl
jge
and
ss
inc
rep
jmp
xchg
pop
clc
pop
xor
lock
push
hlt
adc
dec
shll
or
rcrl
add
mov
xor
mov
xor
or
ja
jge
in
fsts
or
or
xlat
rol
or
or
or
dec
and
and
pop
lock
xchg
jae
sbb
jb
or
shlb
stos
es
clc
into
pop
lea
jge
push
cld
cmpb
mov
stos
cmp
ret
xorb
mov
add
inc
dec
jne
mov
mov
icebp
sub
add
mov
or
shll
mov
jmp
mov
shl
fisubrl
ret
push
cld
loop
xor
xchg
popa
cli
adc
popl
cmp
add
bound
add
dec
pop
jbe
adc
rcrl
jne
jne
pusha
adc
dec
in
in
sub
lds
xchg
rclb
mov
add
ret
mov
jne
popf
adc
repz
cmp
aaa
or
or
mov
outsl
and
inc
add
jbe
lcall
ja
pop
xor
adc
icebp
shlb
cmp
js
sub
seto
cmpsb
or
jle
xor
test
stc
xor
mov
aas
ja
or
xor
xor
mov
inc
sbb
bound
les
dec
and
adc
adc
push
xor
pop
sub
adc
inc
inc
shll
mov
mov
xchg
inc
inc
jmp
mov
jp
cmp
stos
loopne
add
cmp
and
pop
push
cli
into
addr16
loope
mov
imul
ljmp
inc
mov
add
or
or
aad
or
pop
mov
adc
mov
ljmp
clc
stos
inc
jp,pt
xor
lret
add
enter
mov
mov
loopne
push
adc
pop
lahf
mov
or
mov
push
pop
jmp
pusha
les
inc
xor
sbb
dec
pop
les
ljmp
jl
inc
pop
ret
jmp
add
mov
push
xorb
jle
or
xchg
lods
add
and
dec
pop
es
ret
sub
ror
outsb
add
mov
add
data16
pop
es
add
outsl
mov
sbb
jmp
push
leave
arpl
inc
fdivs
adc
cld
cmpsl
pusha
add
sbb
sbb
add
ss
repnz
or
xor
fdivrs
xor
push
nop
or
jnp
xor
jno
cmp
xchg
jo
sub
jae
add
fisttpll
addr16
or
and
cs
pop
insb
inc
movsl
sbb
dec
rcrl
scas
mov
add
xchg
inc
lods
sbb
jbe
add
test
inc
add
scas
fnstenv
jp
push
inc
fisttps
jb
arpl
test
and
xor
insl
dec
jbe
push
mov
test
mov
enter
sub
adc
cltd
xor
adcb
xchg
adc
cmp
into
loopne
stos
and
xor
insl
or
rcrl
adc
and
stos
sub
in
adc
addr16
clc
cmp
pop
test
or
rcrl
jl
add
inc
jmp
add
jae
cmp
fs
jo
fwait
push
inc
jl
enter
adc
divl
sbbb
dec
shrl
push
add
and
or
in
pop
cmp
xchg
or
push
sbb
rcrb
je
shrl
push
lock
push
test
cmp
adc
xchg
std
add
sbb
shr
jo
jbe
scas
mov
repz
inc
in
or
push
and
lods
xchg
add
jmp
xlat
shr
rorb
insb
or
movsl
fdivrs
push
sub
xchg
je
mov
push
cs
push
push
sbb
pop
cmpsl
jns
push
mov
cs
jno
and
aam
add
xor
lock
adc
cmp
hlt
fnstcw
cmp
xchg
subb
mov
in
fs
fistpll
int
mov
push
pop
jne
cmc
cli
and
subl
dec
jb
xchg
adc
jmp
cmp
js
mov
sub
in
and
cltd
or
push
stc
pop
adc
dec
imul
test
jae
add
addr16
lock
push
add
pop
fdiv
jmp
push
push
jge
insb
mov
xor
hlt
aaa
lock
fldcw
mov
enter
sbb
sub
hlt
inc
ja
js
mov
xchg
pop
addb
adc
fldenv
push
and
icebp
or
scas
sbb
fs
and
xorl
add
pop
dec
arpl
mov
shll
add
mov
insb
enter
iret
faddl
inc
push
xor
push
aam
lcall
push
stos
xor
xor
cmp
clc
scas
icebp
iret
adcb
dec
cltd
loope
jmp
jno
add
mov
repz
sbbl
lods
sub
or
jnp
fdivrl
add
es
xorb
orb
push
hlt
hlt
add
cmpb
test
pop
pop
sbb
xchg
jb
mov
leave
add
scas
bound
insl
aam
loope
in
or
outsb
pop
adc
push
aaa
pop
and
out
and
cld
cmc
jge
cmp
cltd
clc
sbbb
add
sub
xchg
xchg
or
in
sub
sbb
sub
and
ljmp
fiadds
jbe
pop
les
xor
inc
int3
xor
jno
cmp
aas
xchg
mov
adc
xchg
aad
inc
sub
add
jle
sub
dec
test
cwtl
bswap
sub
ja
pop
push
rolb
ljmp
shlb
mov
incb
nop
jno
pop
mov
or
aam
mov
and
sbb
insl
or
out
invlpg
xchg
aad
xor
mov
adc
and
xor
sub
adc
xchg
adc
out
imul
lea
xor
add
cltd
aad
movsl
mov
into
pop
mov
sbb
add
adc
mov
xchg
xor
xor
test
add
aaa
sbb
fisttps
add
lret
inc
lods
nop
or
pop
jnp
lock
cmpsb
lock
mov
push
sub
stc
aaa
mov
pop
cmpsb
rclb
cwtl
xor
cmp
jb
sub
insb
lock
jo
push
xor
shlb
cmp
mov
sbb
repnz
in
shrb
sub
sbbb
push
cmp
push
mov
cmp
ja
sbb
xchg
out
cmp
xorps
insl
sbb
test
sbb
adc
mov
add
push
mov
icebp
jns
lods
hlt
aaa
rcll
movsb
dec
adc
and
or
stos
sbb
xor
add
add
sbb
das
add
mov
cmp
imul
stos
test
mov
sbb
sbb
test
mov
mov
pop
es
jp
dec
clc
movb
imul
pop
or
pop
mov
arpl
test
cltd
call
add
movsl
repz
scas
ret
inc
cwtl
hlt
push
insb
xor
rorl
mov
mov
pop
inc
dec
aas
scas
dec
rcl
add
and
sbb
jecxz
enter
add
inc
and
push
sbb
dec
push
sbb
sbb
cmpsb
nop
or
fst
psubusb
test
pop
mov
rcl
fldcw
pusha
add
jno
jne
sbb
insl
popf
push
add
pushf
mov
mov
pop
mov
add
mov
test
cmp
and
ret
mov
xor
adc
add
and
push
add
int3
stos
pop
repnz
push
sub
xchg
fidivrs
nop
mov
out
xor
adc
adc
icebp
fsubrs
add
pop
into
mov
and
das
or
adc
mov
nop
inc
sub
push
and
dec
ja
dec
push
push
bnd
ss
clc
or
sbb
pop
mov
out
pusha
ds
andb
jg
enter
pop
push
add
xchg
les
int
ss
popf
lret
cwtl
aad
mov
hlt
inc
sarb
adc
push
in
pop
jb
and
and
loop
xchg
cwtl
xor
orl
rorl
and
dec
dec
nop
push
nop
inc
mov
fcompl
or
cld
or
xor
xchg
pop
xchg
into
dec
in
push
sbb
jbe
lock
add
orb
dec
or
pop
sbb
mov
into
cmpl
mov
or
insl
xchg
cmpb
leave
and
or
clc
pop
jmp
sub
xacquire
push
clc
lds
xor
mov
add
mov
leave
imul
cld
jl
cs
and
shlb
and
jae
je
pop
gs
xchg
add
or
mov
dec
xchg
add
ret
cmp
inc
les
xor
aaa
add
int
cmp
inc
cmp
adc
mov
ljmp
loopne
or
mov
add
sbb
push
popf
mov
inc
xchg
dec
outsb
pop
dec
mov
outsb
add
xchg
xor
inc
stos
lcall
das
pop
data16
and
push
sbb
sub
dec
iret
or
mov
inc
mov
pop
fidivrs
jl
jmp
xlat
pushf
add
aas
nop
add
and
mov
test
dec
pop
sbb
xor
incl
add
lret
mov
divl
mov
les
and
call
mov
gs
clc
into
js
xor
inc
adc
xor
adc
fwait
inc
add
xor
outsl
fisubrl
lahf
sbb
cwtl
mov
lret
mov
inc
rorl
adc
out
jl
scas
or
sub
mov
push
arpl
repnz
mov
xchg
ret
clc
xor
xorl
shll
mov
insl
and
mov
adc
mov
adc
or
sub
subl
xchg
pop
fwait
sub
shll
sbb
les
pop
pop
data16
call
scas
adc
xorl
cmp
out
addl
pop
sbb
mov
jbe
arpl
mov
mov
mov
loopne
inc
add
mov
ret
lock
cmp
jecxz
mov
push
or
sbb
pusha
rcrb
std
or
inc
pop
sbb
icebp
inc
shll
cwtl
push
and
lret
add
jge
sbb
xchg
inc
lock
scas
loope
jnp
add
xor
mov
add
ja
lret
divl
add
push
movsb
lds
xchg
mov
insl
cmp
and
inc
or
outsb
mov
into
add
fiaddl
sbb
and
addl
lahf
fildl
bound
lret
fisubrs
pop
popf
or
push
fcoms
jb
clc
repz
add
add
pop
cwtl
rolb
jge
dec
ja
adc
js
add
fidivl
popf
mov
fcompl
aas
lea
out
mov
add
sbb
popl
mov
jb
lret
push
inc
call
pop
add
lea
add
subb
add
jle
push
mov
popf
fidivrl
xor
cltd
mov
inc
nop
mov
jne
in
push
pop
scas
xadd
mov
cmp
cmp
adc
mov
add
xor
inc
decb
cmpsl
fwait
xchg
push
inc
push
cwtl
les
xchg
mov
xor
mov
movsb
pop
test
inc
jbe
or
dec
mov
jmp
push
in
push
hlt
fistpll
add
xchg
bound
popf
fwait
add
mov
mov
push
push
sub
add
jge
or
ret
pop
xchg
aad
loop
int
scas
xorb
repz
mov
add
lret
in
jge
outsb
push
jb
add
pop
mov
std
add
cmpsl
imul
sbb
cli
add
dec
rcr
popa
mov
stos
pop
test
add
lea
lret
add
sub
sbb
mov
mov
add
popl
fwait
lcall
mov
mov
adc
add
aaa
movsb
mov
fiaddl
dec
dec
or
filds
mov
push
or
push
sub
jb
dec
adc
or
rclb
enter
loopne
cli
xchg
psubsb
push
or
test
inc
loope
add
pop
sbb
daa
and
push
mov
sbb
shlb
lods
sbb
jmp
fs
pop
shll
clc
out
mov
cmp
pop
add
push
dec
xor
mov
das
and
stc
sub
mov
add
pop
push
cld
mov
movsl
and
push
fwait
arpl
or
mov
pushf
mov
nop
mov
sub
subb
sbb
lock
pop
call
or
mov
aas
add
insl
sbb
add
arpl
xchg
dec
inc
aas
out
lcall
or
and
in
clc
xchg
push
xor
pusha
add
sbb
sub
in
in
mov
push
test
push
addl
xchg
jl
add
out
pop
cmp
loopne
or
cli
out
add
xchg
and
jnp
into
jbe
sbb
out
pop
dec
shll
popf
and
add
outsb
add
xadd
and
and
das
push
sub
sub
pusha
nop
add
fnstcw
clc
rorl
push
jmp
popf
mov
sub
mov
jnp
mov
inc
and
clc
in
mov
es
dec
enter
arpl
pop
sub
out
push
sbb
and
rclb
scas
sbb
adc
cli
lea
popa
pop
push
negb
fwait
cmp
add
xchg
xchg
jg
pushf
sbb
and
arpl
cwtl
int
ja
push
jno
fwait
jmp
xor
divl
inc
bound
or
fs
mov
cmpsl
sub
ljmp
push
nop
adc
cld
cli
push
out
push
aaa
mov
fs
inc
cmp
add
sbb
out
pop
push
mov
inc
xlat
xor
mov
sbb
cmp
adc
cmp
push
adcl
dec
cld
rclb
push
cmp
imul
dec
in
pop
movsb
shrb
popa
sub
mov
inc
lock
arpl
xchg
add
sub
fxsave
pop
mov
and
adc
or
sbb
mov
mul
push
das
push
popa
xchg
and
lock
loop
dec
or
fs
pop
xchg
inc
cmpsl
pusha
sbb
out
mov
or
pop
cwtl
xchg
sbb
mov
push
andl
test
sub
xor
fdivrl
sub
lcall
add
add
hlt
add
ss
push
shrb
xchg
add
mov
xor
ljmp
inc
add
cmp
xchg
gs
ret
and
push
call
inc
push
bound
mov
xor
push
adc
in
mov
popf
sbb
jne
xchg
push
dec
sub
call
movsb
mov
lahf
mov
mov
push
popa
and
clc
daa
mov
orps
cmpsl
and
dec
fwait
dec
add
push
sbb
add
shlb
bound
ret
push
shrb
outsb
cmp
push
repnz
andl
xor
ret
out
les
lea
or
pop
or
adc
and
enter
repnz
roll
add
push
cld
or
push
sub
dec
das
rcrb
jmp
shll
andb
pop
jge
add
stc
pusha
or
mov
hlt
add
push
loope
add
pop
repnz
mov
xor
push
sbb
loopne
push
shll
and
add
jns
and
jne
clc
xor
cmpl
cmp
pop
add
mov
in
pop
fwait
adc
stos
push
or
add
cmc
pusha
ss
and
inc
arpl
push
push
adc
and
loopne
mov
cwtl
or
add
mov
or
popa
hlt
out
inc
sbb
push
add
fistps
mov
notl
pop
jne
mov
and
stc
pop
addl
cmpb
dec
int
sub
hlt
inc
loop
shlb
mov
xchg
pop
jg
add
call
pop
add
mov
fsub
and
roll
pop
mov
repz
dec
scas
mov
js
sti
test
lcall
nop
xchg
out
test
in
ficoms
cmp
sahf
das
shrl
ljmp
mov
lds
mov
pop
or
sti
fists
mov
enter
sbb
das
jne
xchg
mov
andl
adc
lcall
orb
add
testb
push
adc
cld
mov
sbbl
pusha
aad
add
pop
adcl
add
les
ror
rcrb
aaa
add
ds
cmp
and
mov
lahf
mov
adc
sbb
sub
lock
leave
and
sbb
ja
sub
xchg
add
int3
mov
add
pop
xchg
mov
mov
clc
nop
loopne
xchg
cmp
mov
shlb
xor
arpl
out
sbb
pop
cmpb
arpl
fwait
cmp
aaa
mov
inc
jge
ret
adc
xchg
xor
test
cmp
fcoms
sbb
nop
loopne
cli
pop
add
mov
pop
sbb
push
xor
pushl
clts
dec
outsl
and
pop
add
pop
jp
cmp
dec
sbb
sub
jmp
xor
mov
mov
js
js
sub
add
call
dec
or
pop
test
dec
cmp
inc
push
loopne
push
or
add
and
mov
divb
add
push
imul
ss
push
popa
sub
out
mov
inc
movsl
adc
mov
mov
pop
xor
out
xor
cmp
sbb
js
jecxz
add
and
adc
in
sub
pop
daa
mov
and
adc
addl
mov
std
push
pop
popa
adc
gs
sbb
sahf
add
rcrb
or
pop
shll
inc
pop
jl
xor
cmp
je
lock
lods
sbbb
xchg
negl
ret
andb
cwtl
add
pop
in
cmp
xor
add
pop
pop
mov
aaa
pusha
test
sbb
out
or
hlt
stc
lea
lds
jnp
shll
fsubr
cmc
call
inc
pop
jb
ds
add
pcmpgtw
std
out
and
cwtl
sbb
jmp
std
lahf
xor
pop
clc
ja
or
xor
fstpt
xlat
gs
add
mov
mov
adc
adc
cmc
push
aas
and
shlb
xor
fildl
mov
rol
jb
cmc
add
jge
fstl
rolb
mov
int3
cwtl
test
push
pop
xchg
ds
inc
adc
scas
mov
xchg
sub
add
xchg
dec
out
and
mov
orl
pop
pusha
cld
pop
dec
stc
cmp
rclb
call
jecxz
mov
mov
add
std
into
push
mov
sbb
aam
hlt
add
push
test
push
pop
sbb
xchg
fidivs
mov
insl
add
loop
out
out
lods
cmp
popa
add
aaa
mov
push
adc
xor
out
pop
xlat
jo
adc
dec
mov
test
or
nop
push
lahf
mov
sbbb
cs
repnz
es
rorb
and
add
sub
adc
inc
sub
mov
dec
js
or
mov
or
loopne
pop
inc
xchg
xchg
dec
cs
or
mov
add
ficoml
mov
xor
xor
mov
lret
push
loope
pop
call
loopne
cs
cmc
xchg
and
sti
or
jno
int3
aam
add
cmp
call
cmp
lahf
xchg
fbld
cmp
add
jbe
add
cld
push
test
sahf
add
cli
xor
arpl
cmp
xor
xor
addb
xor
inc
mov
addb
adc
shlb
mov
sahf
pop
out
mov
sub
addl
jne
inc
xchg
push
dec
loopne
and
fwait
movsl
cmpsb
add
stc
daa
sbb
cmp
fwait
mov
push
pop
jbe
mov
mov
ja
dec
sbb
sub
cli
test
lcall
mov
push
clc
dec
mov
xor
rolb
pop
jae
sti
ficomps
sub
jno
jns
sbb
mov
sbb
cmpb
and
sbb
adc
shrl
inc
sub
push
fwait
stc
pop
dec
pushf
mov
iret
dec
fwait
bound
pop
mov
pop
mov
mov
test
test
mov
dec
test
ret
add
ficoms
push
sub
sbb
add
imul
sub
pop
jb
fadd
aam
fwait
stos
rorl
mov
mov
mov
cmpb
fs
and
pop
ficoms
das
and
add
rolb
cmp
cmc
cmp
mov
push
aad
dec
out
test
repnz
arpl
xchg
aam
inc
sub
xchg
mov
jl
jno
enter
sbbb
mov
test
mov
add
aam
xor
ja
pushf
subb
roll
cmp
fadds
inc
int
cmp
push
mov
cmp
scas
inc
iret
lahf
cmpsb
int3
in
mov
jno
icebp
testl
popf
or
adc
add
movsl
test
fldl
xor
out
mov
or
inc
mov
xor
jle
push
mov
pop
sub
and
add
sub
sbb
call
test
repnz
cmp
and
and
adc
xchg
cmpsb
add
ja
rcrb
mov
xchg
xor
ljmp
shr
mov
std
rorb
iret
add
push
lds
add
movsl
add
adc
and
dec
sub
lea
and
jns
mov
fcoms
in
mov
and
jecxz
cld
push
pop
popa
inc
or
repnz
stos
inc
or
mov
or
js
pop
rcrl
sub
nop
or
inc
sub
mov
add
cmp
jns
sbb
outsb
add
js
sbb
int3
cmpb
mov
arpl
mov
add
lods
pop
mov
xchg
scas
mov
pop
repz
cmp
stos
add
fdivs
push
xchg
sbb
inc
cmp
sarl
insl
rcl
xchg
mov
cli
out
or
mulb
gs
mov
mov
mov
lods
adcb
dec
mov
and
inc
mov
or
insb
scas
call
adc
insl
roll
das
pop
dec
mov
xor
lcall
sub
xchg
addr16
jnp
hlt
jnp
xchg
fidivrl
mov
or
mov
and
pop
out
xor
js
push
sub
mov
jns
pop
add
andl
jmp
push
int
lahf
pop
lds
in
pusha
mov
xchg
xor
sub
hlt
jg
add
jno
pop
and
pop
out
rol
jmp
out
or
cmp
jle
dec
sub
xorb
inc
cmc
push
sub
popa
and
ret
je
mov
sub
fists
scas
dec
mov
push
mov
xchg
rcrb
fs
add
push
je
sub
fcompl
dec
add
mov
and
sbb
xor
pusha
or
xor
pop
xchg
mov
dec
dec
adc
add
add
mov
mov
mov
cmp
out
shr
rolb
mov
pop
dec
sbb
out
cwtl
rcr
insb
in
stos
fnstcw
mov
out
mov
sub
jmp
test
add
pusha
mov
xchg
and
out
fs
push
add
or
mov
add
add
xchg
gs
adcb
mov
scas
arpl
or
cs
add
icebp
jle
and
add
or
inc
dec
add
shll
shll
mov
add
push
ljmp
fs
pop
fsubrs
mov
adc
insb
adc
or
addr16
xorb
call
sub
mov
sbb
punpcklwd
inc
mov
mov
test
paddsw
lahf
and
ljmp
fidivl
push
pop
or
movsl
sbb
push
jo
pop
sbb
test
and
and
push
push
repnz
out
mov
inc
add
mov
fs
add
insb
icebp
mov
xor
test
mov
and
fistl
jbe
pop
add
lret
cmc
and
xchg
repz
mov
adc
es
subl
mov
sub
xor
sbb
and
xchg
pushf
cli
ror
adcb
cmp
push
pop
arpl
sub
add
clc
fsubl
clc
pop
scas
out
int3
or
cmc
jg
adc
xchg
movsb
pushf
mov
push
cmp
popa
leave
xchg
sub
loopne
enter
pop
dec
xchg
sbb
mov
repz
and
xor
lcall
add
xchg
jnp
loope
pop
loopne
push
sbb
sub
and
cmp
jne
bswap
or
and
adc
or
adc
adc
push
arpl
cli
shl
push
lea
repz
mov
and
pop
nop
pop
sti
mov
add
out
icebp
loopne
sub
nop
inc
fwait
sbb
popf
in
mov
sub
les
iret
andb
add
or
in
inc
sub
pop
fwait
sti
pop
pop
sbb
rcll
sbb
sub
add
sbbb
pop
xor
je
nop
out
and
adc
pop
jb
ficoms
add
ja
inc
aam
rol
sbb
add
or
es
pusha
pop
add
idivl
pop
ret
out
loopne
mov
jns
jb
add
call
jns
push
cmpsl
inc
push
dec
and
add
ret
push
jns
adc
xchg
xor
cmc
andb
lret
push
test
push
shlb
insl
pop
mov
dec
lods
call
loope
cli
popa
xor
out
pop
add
pushf
sbb
test
fsubs
ret
mov
mov
jg
sub
les
add
icebp
fdivs
sbb
cmp
and
fs
push
xchg
add
and
cld
lea
mov
insl
mov
sub
sbb
adc
sub
pop
sbbl
or
jo
push
xchg
xchg
mov
sbb
dec
sub
jg
push
xchg
mov
sti
out
mov
sbb
out
loope
adc
sub
or
jb
push
pop
mov
movsb
ret
mov
sub
mov
nop
mov
shll
inc
or
mov
out
roll
lock
pop
and
xchg
mov
or
pop
xchg
and
pusha
push
mov
rolb
adc
das
add
cmp
or
enter
hlt
and
in
inc
push
pop
popa
sbb
in
mov
xor
std
scas
fs
add
test
stos
orb
nop
cmp
xchg
jae
dec
movsb
mov
pusha
icebp
jg
mov
in
mov
adc
aas
pop
mov
cmp
imul
mov
and
xchg
repz
aam
xor
add
and
in
mov
push
sahf
and
lcall
out
inc
cmp
pop
mov
mov
faddp
out
add
call
lea
clc
dec
cli
int3
sbb
clc
pop
xlat
rclb
aas
call
inc
adc
lret
and
lahf
and
mov
std
shll
cltd
mov
hlt
and
jmp
xor
mov
jecxz
lss
fiaddl
insb
aaa
mov
fwait
add
pop
into
dec
or
aam
mov
ret
mov
pop
arpl
mov
or
pop
adc
cld
xchg
push
adc
or
in
nop
das
sub
loopne
jnp
mov
in
pop
pop
daa
insb
mov
fwait
sub
pusha
add
ss
sbbb
pop
push
nop
pop
rcll
fwait
gs
sub
push
sub
in
pusha
lret
xor
fisttps
sub
sbb
movsb
add
stos
mov
mulb
mov
imul
xor
and
mov
push
mov
and
leave
movsb
xchg
clc
icebp
xorb
jmp
pop
inc
sub
arpl
xchg
out
adcb
xchg
out
fs
sub
sbb
stos
lret
mov
and
pop
adc
dec
hlt
inc
mov
sbb
or
sub
sbb
add
in
jbe
jecxz
mov
adc
clc
lcall
sbb
push
dec
xchg
jmp
js
test
bound
add
les
add
fadd
ficomps
and
xchg
or
or
out
pop
cmp
add
add
lcall
dec
cmp
ljmp
xchg
mov
lods
outsl
and
push
scas
cmp
lods
add
jns
or
or
cmp
ja
dec
sub
in
orps
lock
test
mov
pop
inc
cmp
sub
out
adc
jmp
fs
add
adc
push
hlt
sahf
add
mov
lock
sub
mov
sbb
add
pop
mov
xchg
mov
int
les
stos
or
stc
inc
mov
sbb
jp
mov
jg
or
cmp
adc
rclb
or
rclb
xor
and
jl
nop
les
loop
sub
clc
testb
popf
sti
cwtl
or
clc
add
stc
add
cmp
movsb
loopne
daa
adc
insb
ficomps
lods
adc
xchg
lcall
js
lcall
popa
lods
mov
lock
nop
adc
fcoml
fcoms
add
lahf
pop
or
mov
sbb
mov
mov
mov
test
sub
sbb
adc
nop
cmpsl
or
or
xchg
dec
inc
and
cmp
push
mov
mull
and
test
in
cwtl
les
and
iret
add
pop
shrb
sbb
push
cmp
out
je
push
mov
pop
jno
out
rcl
mov
icebp
jp
rcrb
cwtl
scas
mov
pop
push
pusha
fcompl
dec
xor
into
arpl
adc
lods
enter
mov
mov
or
sbb
loopne
mov
pop
mov
mov
push
rcrb
jecxz
mov
rcrl
sub
nop
aam
mov
cli
adc
inc
adc
orb
pop
data16
mov
push
rcl
pusha
adc
sbb
sbb
shl
add
fnstenv
cmpsl
or
in
add
jecxz
xor
mov
loopne
add
inc
shl
sub
stc
std
or
jmp
das
jns
fs
or
orb
je
pop
fildl
int3
shlb
add
loop
jp
andl
mov
or
test
push
pusha
repnz
cltd
int3
pop
fdivs
cmp
mov
push
push
mov
push
pop
push
cltd
test
add
mov
pop
xchg
dec
adc
jmp
fsubrs
shlb
adc
enter
je
or
ds
mov
mov
and
add
stos
mov
adc
pop
imull
add
sbb
push
add
add
mov
fs
cvtdq2ps
notb
mov
rcll
sbb
add
push
movsl
mov
cmp
dec
movsb
mov
enter
les
test
dec
enter
push
jo
cmpsl
dec
hlt
adcb
mov
add
adc
pop
iret
jl
in
shrl
pop
mov
divb
sub
and
out
mov
dec
pop
loope
bnd
add
dec
sbb
je
sbb
xlat
push
adc
sbbl
pop
xchg
cs
movsl
mov
pop
in
xor
in
sub
cli
xor
mov
dec
xchg
mov
sub
add
call
or
sahf
jbe
pop
fcmovbe
dec
mov
or
and
mov
das
push
mov
orb
rol
and
loopne
pusha
cmp
sub
mov
lahf
and
lods
call
mov
push
icebp
loope
jle
movsl
clc
test
jns
nop
jo
cmp
mov
sub
or
dec
rorb
out
dec
test
pop
sub
add
scas
adc
flds
mov
push
adc
outsl
mov
dec
addb
dec
aam
adc
sub
js
dec
rorb
push
cmp
add
cmp
lods
add
shlb
sbbb
lock
insl
je
notb
lret
sub
cmc
push
push
add
and
sbb
push
jno
mov
mov
cmpsl
mov
adc
xchg
pop
out
adc
enter
test
pop
xor
cmp
jne
xchg
add
mov
jecxz
test
or
cwtl
xor
adc
mov
cmpsb
gs
mov
outsl
rcrl
addb
addr16
sbb
les
or
sarb
enter
jbe
mov
test
add
cmp
out
xchg
sbb
jnp
dec
sub
add
mov
bound
and
mov
push
jnp
dec
mov
test
mov
jl
add
xchg
out
popf
sarb
adc
xchg
mov
shll
jl
fadds
sbb
jae
mov
jo
push
enter
ficoms
js
xor
out
or
sub
imul
xchg
lcall
lret
leave
jo
je
push
inc
movsb
add
adc
int3
cmc
add
cmpsl
push
push
dec
mov
sarl
adc
les
test
add
addr16
int
sub
cs
xchg
push
push
xor
fmull
pop
mov
inc
add
xrelease
in
mov
adc
cmp
jo
jnp
sti
ja
dec
js
and
add
sub
es
mov
int3
and
ds
push
or
jae
mov
jb
pop
push
add
mov
push
mov
shlb
neg
xchg
in
mov
stos
push
lock
stc
cmp
inc
fidivs
jmp
pop
sti
jecxz
jae
lock
pop
arpl
push
adc
mov
pop
inc
dec
adc
loop
add
jecxz
pop
gs
inc
mov
sub
out
ja
cvtps2pi
cmp
pop
add
jl
push
mov
and
pop
add
pop
fstps
jl
jb
sahf
enter
lea
lock
test
sub
or
xchg
je
rcrb
loop
lahf
cwtl
mov
in
lahf
imul
imul
sbb
shll
jb
add
mov
mov
mov
icebp
adc
mov
test
dec
je
jp
jnp
inc
enter
cmp
fdecstp
filds
xchg
sub
and
cmp
jne
adc
jecxz
fnstenv
lock
sbbb
lret
cwtl
pop
nop
sbbl
mov
mov
mov
ds
gs
js
mov
pop
or
push
sbb
xchg
sbb
imul
add
cltd
mov
scas
xorb
mov
sub
fistps
add
mov
add
mov
lret
mov
je
fs
hlt
mov
shlb
mov
movsb
call
lcall
add
ret
cs
cld
add
xor
lcall
fwait
or
jb
mov
adc
jns
sbb
sub
shrl
popf
mov
xor
inc
or
jg
test
adc
xchg
add
pop
fs
pop
push
mov
mov
mov
mov
xlat
jo
xchg
in
inc
movsb
or
dec
xchg
jns
add
mov
cwtl
sub
cmp
cmp
sub
xor
add
fwait
cmp
cli
lea
pop
jle
std
insl
cwtl
mov
popf
rclb
xor
sub
pusha
clc
sbb
shl
or
enter
shrb
pop
addb
xchg
sbb
and
pop
adc
hlt
bound
sub
adcb
and
das
jne
inc
mov
mov
dec
inc
add
pop
dec
mov
hlt
arpl
movsb
adc
sarl
test
daa
lds
fsubr
jl
popa
cmp
adc
and
jo
sub
xchg
push
mov
add
mov
mov
or
pop
cltd
and
push
mov
cwtl
int3
sub
pop
fsts
xchg
cld
mov
stos
lods
repz
lea
or
and
fmuls
mov
pop
nop
enter
shrb
mov
xchg
cmc
and
int3
mov
insb
cmp
xor
push
pop
mov
stos
add
cltd
jl
jmp
pop
sbb
mov
icebp
cmp
shrb
leave
add
adc
add
adc
mov
sub
xor
mov
mov
pop
jge
push
add
out
cmp
outsb
rcll
cmovp
repz
and
fnsave
icebp
call
stc
push
lods
mov
sbb
and
fldl
add
jl
mov
mov
cmc
mov
pushf
or
mov
in
or
fwait
mov
nop
imul
mov
mov
les
and
adc
add
mov
bound
jp
adc
hlt
push
sbb
sar
sub
adcl
leave
ror
mov
add
mov
push
shll
mov
movsl
adc
or
mov
inc
enter
or
xor
pusha
inc
mov
sub
inc
sub
xchg
cmp
mov
mov
xchg
loope
cmp
xchg
pop
cmp
cwtl
mov
sbb
lods
mov
ljmp
add
cli
or
or
test
pop
mov
pusha
test
adc
xchg
flds
or
add
sbb
ja
gs
cmp
lock
mov
scas
in
fdivl
push
test
and
cltd
pop
test
mulb
fnstsw
repz
scas
xlat
cld
push
test
das
daa
gs
cmpxchg
mov
shrb
jno
ja
lea
sbb
pop
popa
mov
pop
mov
dec
dec
xor
scas
jl
adc
dec
fwait
in
xchg
mov
jl
outsl
fs
ret
ljmp
int3
sub
push
cmp
js
andb
gs
jae
dec
inc
adc
mov
loopne
jno
inc
jbe
cmp
mov
rcr
or
xchg
out
test
inc
rcrl
xor
add
pop
pushf
setae
mov
sub
andl
xchg
gs
mov
add
stos
sbb
add
sub
cmc
int3
or
lods
leave
add
mov
jns
sbb
popa
pmullw
adc
pop
nop
je
mov
pop
sub
int
dec
mov
adcl
repnz
pop
pushaw
cld
rcll
rcll
jbe
adc
inc
fwait
addb
mov
pusha
in
dec
hlt
and
imul
rclb
ljmp
push
or
ljmp
xchg
fwait
ror
in
xor
sub
add
mov
mov
jo
insl
and
sti
je
in
pop
mov
sub
pop
insb
sbb
mov
jle
ret
and
popf
adc
out
xor
movsb
mov
iret
xlat
push
loopne
adc
cmp
pop
xchg
and
lahf
xchg
add
mov
dec
inc
fsubrs
adc
and
dec
out
sub
add
movsb
pop
movl
dec
dec
repz
mov
ficomps
mov
js
xor
test
scas
push
pushf
sbb
out
icebp
add
rolb
pop
test
adc
xor
inc
in
adc
sub
and
cwtl
dec
pop
and
std
fdivrl
jmp
fnsave
mov
shll
jmp
call
and
not
dec
adcb
adc
hlt
dec
das
lahf
dec
adc
cmp
adcb
xchg
pop
jno
jmp
xchg
subl
jb
jmp
dec
rorb
add
add
xchg
ret
into
dec
dec
or
and
mov
fwait
jge
mov
jl
daa
jns
popa
call
nop
push
addl
cli
push
jmp
inc
sbb
and
inc
push
sahf
jg
sarl
int3
ja
jo
add
outsl
repnz
insl
cwtl
les
jge
or
add
movsb
pop
and
or
mov
sub
rol
and
movsb
lock
inc
and
push
or
sarb
rorl
jae
push
or
or
dec
mov
ficoml
fnstenv
cmp
adc
pop
mov
sbb
loope
push
or
jge
dec
push
js
mov
mov
mov
and
sahf
or
lds
arpl
sub
sbb
or
pop
pop
dec
pushf
test
pop
clc
lahf
pushf
mov
das
jne
xorl
icebp
mov
add
sbb
sub
loopne
push
arpl
xchg
add
pop
and
decb
pusha
and
sti
shlb
mov
pop
jns
call
loop
mov
pop
test
and
add
mov
pop
add
add
in
pop
aaa
stc
push
rorb
pushf
mov
hlt
cmp
sbb
loope
pop
mov
add
push
or
push
out
daa
cwtl
aaa
addb
cld
sub
fwait
add
bound
pop
dec
or
add
pop
mov
in
rolb
xchg
leave
adc
jo
sbb
mov
or
sub
dec
sub
incl
push
pop
pop
pop
push
jne
pop
inc
ljmp
and
popa
add
mov
inc
jmp
pop
sahf
fs
cs
xchg
pop
pop
xchg
and
pop
fmull
cmp
out
and
adc
adc
xor
jnp
mov
lret
add
push
add
inc
cltd
adcb
out
dec
je
mov
fmull
popa
cmp
sbb
or
and
faddl
or
loopne
test
add
test
xor
and
xchg
hlt
add
in
add
jae
mov
xchg
jo
daa
ja
test
orl
xchg
and
push
lea
aam
sbbb
push
adc
pop
mov
lcall
mov
cli
add
pop
mov
or
sbb
lea
outsb
sbb
cli
or
jno
out
push
jl
xor
jae
mov
lock
xchg
sbb
in
sbb
roll
push
andb
adc
inc
in
out
adcb
and
sbb
les
decb
bound
mov
fwait
aad
push
lret
adc
jns
adc
pushf
adc
xchg
adc
mov
jle
pushf
and
cld
icebp
xor
adc
add
popa
sbb
fwait
sbb
movsl
or
adc
flds
cmp
les
rorb
mov
xor
adc
or
rcrl
bound
ret
scas
jno
inc
fsubs
psubb
sbb
or
filds
lods
or
xor
leave
notl
arpl
fs
adc
or
adc
outsl
xchg
int3
jbe
aaa
inc
lock
test
lcall
pop
imul
ja
mov
or
cmp
xor
or
lahf
push
adc
hlt
out
les
and
xchg
cmp
adc
adc
sbb
orl
call
and
push
inc
mov
xor
dec
adc
mov
or
jno
add
or
lods
pop
mov
inc
xchg
or
iret
popa
cmp
adcb
push
std
pop
sub
push
xchg
arpl
mov
cmp
jo
push
push
mov
jnp
adc
push
and
push
mov
or
sbb
bound
mov
addl
jae
add
sbb
add
inc
xchg
subb
mov
add
add
pushf
sub
cli
test
lcall
int3
std
push
hlt
nop
sahf
xchg
nop
push
fsubp
cmp
test
inc
data16
pushf
dec
ja
sbbb
jno
xchg
push
push
lds
addr16
adc
leave
inc
add
xchg
jmp
sub
dec
mov
das
fadds
add
cmc
arpl
and
jle
pop
out
push
movsb
add
push
fisubrs
dec
xchg
add
add
mov
pop
call
push
add
popa
sarl
push
roll
mov
out
incl
loope
dec
popa
add
fisttpll
jo
and
cmp
js
dec
mov
pop
xchg
ds
je
aam
pop
das
sub
in
movsb
test
and
in
mov
pop
ret
jle
or
js
out
pop
data16
enter
mov
xchg
roll
pop
xchg
shlb
js
inc
int3
cmp
aam
out
popa
ss
cmp
inc
addr16
in
pop
lret
loop
sub
jno
lcall
rorl
sahf
push
ret
enter
bnd
sub
pop
insb
add
nop
push
cld
cmpsl
call
bound
addl
add
sub
pusha
stos
sbb
xchg
hlt
add
xor
cs
clc
push
or
pop
or
mov
enter
mov
mov
nop
sbb
into
jg
add
cmpsb
push
sbb
ja
lcall
sub
add
in
cli
rcrl
sbb
add
push
js
inc
call
add
lods
add
add
ret
mov
lods
jnp
in
add
out
out
ret
jle
adc
sub
js
lret
daa
roll
cmp
loopne
pop
aaa
out
paddsw
add
into
mov
imul
sti
aaa
and
pusha
std
jg
dec
push
add
ret
lahf
mov
clc
fnstcw
ss
adc
adc
push
xchg
fs
jg
push
js
add
and
xchg
cmp
hlt
add
lret
mov
leave
stos
and
pop
xor
shll
bound
loope
fadds
pop
loopne
into
ja
in
int
or
dec
lahf
fnsave
test
lret
mov
mov
mov
inc
and
movb
cmc
ss
xor
add
add
pop
in
push
faddl
jmp
inc
cwtl
lea
por
sarb
or
mov
jp
rclb
or
ja
mov
inc
jg
xor
pop
sahf
xor
dec
xlat
add
adc
push
mov
nop
ljmp
lock
sbb
xor
adcl
nop
push
push
out
and
sub
pop
loopne
fnsave
sbbl
mov
cld
lock
inc
sub
out
aam
nop
cs
addb
add
jp
sbb
pop
arpl
fdivl
es
mov
add
or
adcb
ss
sub
pop
mov
nop
push
cmp
sbb
ret
add
in
lods
cmpsl
out
and
push
adc
cmp
push
aas
aam
pop
mov
testl
jecxz
dec
fcmovnu
or
jge
aam
mov
aam
mov
in
test
ret
ljmp
daa
lahf
xchg
orb
pusha
add
mov
mov
add
and
xchg
scas
cli
ja
in
js
add
adc
adc
loopne
xor
dec
xor
jg
mov
and
out
ret
adc
fmulp
adc
sbb
mov
loope
and
ss
fs
cmpb
sub
inc
js
mov
mov
lods
pusha
dec
cmpsl
inc
hlt
and
add
fs
add
jle
pop
nop
enter
xchg
inc
sub
cmp
mov
in
jmp
int3
das
rorb
or
mov
cmp
in
and
ret
xchg
sub
dec
xor
pop
rcll
stc
adc
xor
in
jmp
xchg
cwtl
sbb
sub
leave
mov
mov
rcll
mov
mov
lahf
ds
push
push
arpl
leave
cmpb
inc
int3
cld
out
cmpsl
dec
inc
pop
push
insb
mov
add
dec
sub
scas
test
push
rclb
sub
pop
sbb
rcrb
mov
xor
xor
jo
int3
rol
inc
add
xchg
movsb
sbbl
inc
mov
or
inc
mov
ja
stos
mov
hlt
mov
adc
adc
and
or
adc
add
and
lods
inc
mov
jl
push
xor
push
lahf
add
adc
aam
arpl
or
outsl
add
fs
or
xchg
stos
pop
jb
iret
jno
xorb
outsb
pusha
pop
jbe
push
verr
icebp
insl
shlb
test
add
js
sub
mov
dec
popa
jns
pop
addb
sub
mov
sar
add
and
push
push
out
ret
out
sub
jl
pop
lcall
loopne
in
lahf
sbbl
daa
js
pusha
shr
data16
xacquire
xor
aam
stos
cmp
test
fcomps
lods
add
sub
aaa
add
fistpl
cmp
shrb
mov
andb
call
jl
or
pop
fs
mov
out
fistps
sub
addl
lret
xchg
sub
add
inc
dec
es
push
arpl
add
rorl
je
stc
es
ja
sub
inc
cmp
nop
in
sarb
mov
divb
jp
jg
add
xchg
dec
lds
rclb
xor
mov
jle
push
dec
pop
adc
sbb
jl
clc
add
adcl
lret
hlt
and
adc
lret
mov
push
xchg
dec
mov
ds
cltd
xor
add
rcrb
pop
sub
popa
cltd
mov
adc
add
add
hlt
nop
cmp
orl
jmp
mov
mov
add
clc
in
out
cltd
sub
sub
xchg
sub
pushf
xor
daa
mov
adcb
adc
dec
adc
and
pop
or
dec
ljmp
push
stos
mov
xchg
and
fisubrl
adc
add
cmpb
inc
lods
in
add
add
xchg
mov
testb
das
out
rcl
cmpl
ret
fsubp
lahf
dec
mov
repnz
pop
or
or
add
pop
int3
mov
pop
pop
arpl
je
cld
push
iret
xor
js
add
sub
and
sbbl
jg
and
add
push
in
sub
cmp
repnz
jg
lret
mov
sbb
add
loope
call
or
add
pushfw
gs
stos
pmuludq
lock
or
add
daa
data16
or
mov
clc
inc
and
pusha
xchg
call
js
push
sti
adc
push
bound
inc
pop
shll
cld
jns
pop
xor
int3
add
pop
mov
mov
lods
xchg
sbb
push
loopne
dec
in
and
jge
add
in
ficomps
loopne
ds
inc
movsb
or
outsb
test
pop
xchg
pusha
push
enter
test
mov
in
mov
dec
sub
sub
sub
lea
aaa
mul
mov
testb
pushf
add
mov
mov
rorb
shr
push
mov
arpl
movsl
lret
and
mov
add
repnz
jno
nop
cmp
call
out
inc
mov
setge
sub
xchg
aam
nop
nop
ds
data16
or
cwtl
sbb
or
or
out
xor
es
rcl
pop
popa
je
and
or
das
call
or
divl
repnz
pop
out
push
adc
les
loop
or
cmc
or
xor
inc
pop
mov
addb
or
daa
popf
add
imul
sbb
push
fiaddl
mov
mov
mov
hlt
push
lods
add
fsubl
adc
cltd
sbbl
jnp
jb
xchg
sub
mov
push
mov
sbb
mov
pop
mov
test
pop
lret
push
movl
pop
js
outsl
inc
xor
mov
lret
stos
or
jnp
add
movsb
mov
or
rorl
sbb
inc
mov
dec
dec
je
mov
xor
pop
mov
pop
add
in
push
mov
cwtl
mov
sub
push
stc
imul
pushf
add
fildll
adc
xor
push
stc
pavgw
fucomi
pop
pop
inc
xchg
xchg
shll
pusha
jbe
iret
add
in
int3
ret
jno
clc
or
add
enter
cmp
dec
filds
ret
popf
int3
xor
out
fwait
cmp
add
cmp
mov
and
or
push
pop
mov
add
add
repz
mov
shll
adc
or
add
arpl
out
lret
cwtl
sbb
and
add
fwait
mov
es
or
shl
pop
mov
mov
cwtl
add
out
pop
lock
dec
je
dec
inc
and
add
popa
pusha
cmp
sub
lods
jbe
bound
fildl
dec
test
xlat
repz
inc
in
aas
ja
in
fs
data16
test
mov
loope
mov
adcl
insb
mov
repnz
mov
enter
loopne
add
push
push
stc
inc
mov
rcll
int
in
lea
inc
js
es
sarb
jg
add
and
push
ret
or
xchg
dec
inc
adc
ds
shlb
cltd
pop
cwtl
es
inc
cwtl
mov
inc
inc
adc
iret
mov
faddl
mov
pusha
sbb
daa
sar
test
sbb
ret
mov
test
xchg
incl
rclb
fistpl
add
in
mov
push
leave
pop
add
or
jge
adc
cltd
xchg
add
jge
add
cmc
out
mov
push
into
loopne
pop
push
lea
sbb
sub
out
repnz
loope
mov
push
mulb
js
jno
test
push
push
mov
mov
setnp
and
mov
add
push
jmp
push
clc
adcl
pop
das
js
shl
sti
inc
hlt
jecxz
or
arpl
inc
jnp
xadd
jge
or
adc
sbb
test
jo
add
nop
inc
fsub
mov
icebp
inc
add
insl
js
inc
lret
dec
pop
mov
and
xor
pushf
into
add
insb
lea
sbb
rcrl
jo
pop
add
imul
es
push
imul
lock
daa
jne
add
pop
jno
add
push
pop
adc
js
repz
jg
mov
xor
cmp
inc
mov
dec
push
and
or
xor
cmpsb
sbb
lea
xchg
daa
push
es
push
out
adc
js
aaa
nop
divb
xor
push
addr16
fcoms
pop
cwtl
and
add
mov
jbe
in
fcompl
jge
pop
xchg
push
aam
repnz
fadds
jb
dec
in
adc
js
cs
cld
and
jne
sbb
mov
sbb
push
les
dec
push
sbb
cmp
add
out
mov
hlt
push
and
sub
loopne
in
mov
dec
repnz
pop
xchg
shlb
push
insl
cld
cmp
add
clc
mov
je
add
fists
enter
mov
xchg
inc
mov
call
cmp
in
js,pn
shlb
push
add
jbe
cmc
pop
sub
lcall
shrl
sub
shll
adc
clc
in
or
or
js
adc
outsb
rclb
in
and
ljmp
js
lret
add
inc
aad
addb
xchg
ljmp
xchg
inc
xor
mov
repnz
in
jg
add
fmul
scas
xor
sbb
push
rol
incb
push
rclb
xor
loope
mov
push
out
xor
add
pop
or
ror
and
push
xor
shlb
fs
fcomip
clc
push
shl
sub
out
fildl
clc
shll
in
mov
jmp
dec
or
pop
stc
ja
lods
dec
cmp
mov
add
stos
sub
jl
aas
mov
ror
push
ljmp
fs
jmp
movsb
ja
and
xchg
lret
in
inc
sbb
bound
pop
outsb
aad
das
testb
pop
in
push
dec
dec
push
add
lret
pop
lods
mov
pop
or
notb
mov
and
sti
fsubrs
daa
daa
mov
cwtl
loopne
mov
inc
stos
push
das
mov
inc
ret
push
pop
adcb
sub
xor
add
fisubl
push
mov
cmc
mov
bound
add
sbb
pop
jae
mov
sti
sbb
jne
test
add
imul
aad
loope
shll
dec
add
xor
adc
pop
jle
call
paddsw
in
jge
xchg
or
add
inc
andb
ror
je
sub
mov
push
and
movb
aaa
cmpsl
lods
cli
shlb
in
dec
out
pop
push
inc
lahf
insb
xchg
adc
out
rol
add
loope
xchg
xor
cwtl
add
and
xchg
add
or
je
jge
adc
or
xor
ret
and
push
inc
bound
mov
test
cmpb
fsubl
fs
pop
mov
inc
fdivrl
clc
pop
xchg
sbbb
lds
call
push
pop
es
sbb
push
outsl
shlb
and
fcoms
fmul
loopne
pop
add
add
jp
call
add
inc
scas
les
xchg
in
stos
roll
cmc
outsl
dec
xor
js
mov
push
xchg
cmp
gs
add
into
lea
shl
insb
dec
dec
add
add
push
lea
js
and
mov
sbb
pop
or
xor
leave
add
xor
dec
in
int3
dec
or
add
ja
xchg
data16
mov
inc
xor
ja
jns
cmp
repz
aaa
mov
jo
push
out
sbb
adcb
push
hlt
sub
cmp
out
add
aad
adc
cmpsb
testb
ret
cmp
xor
roll
jmp
mov
out
add
rcll
pop
xor
mov
pop
inc
or
adc
aam
jo
jnp
or
js
in
xchg
pusha
into
sbb
push
lock
in
add
mov
and
int3
adc
jnp
or
inc
loop
aad
dec
adc
sub
dec
adc
push
insb
gs
ljmp
jbe
test
bound
movsb
data16
sub
mov
push
insb
xchg
and
ja
add
int
mov
gs
ficompl
adc
nop
sub
aas
xchg
add
sub
mov
push
xchg
test
out
popa
add
sbb
jmp
sbb
sbb
mov
fisubrs
daa
les
adcb
aad
sbb
and
lods
mov
add
cli
popa
cmp
mov
call
add
out
pop
fcom
mov
xor
jge
xchg
sbb
or
or
icebp
pop
cmp
sarb
pushf
hlt
xchg
add
shll
jecxz
int3
ljmp
mov
add
pop
sub
jne
sahf
call
mov
xchg
loopne
hlt
add
pop
lcall
push
cmc
dec
adc
jae
das
add
in
hlt
mov
add
jp
lock
pop
shrl
cmp
sub
push
xchg
icebp
fcmovu
punpcklwd
add
aad
push
std
jecxz
xor
clc
xor
mov
lods
cmp
hlt
inc
pop
insl
add
mov
out
cwtl
gs
xor
data16
rcl
cmp
add
jg
add
mov
pop
mov
je
fadds
add
jmp
sarl
repz
mov
add
mov
aas
mov
hlt
and
xchg
mov
sbb
jmp
mov
xchg
ja
ret
sbb
add
jmp
iret
ljmp
or
incl
jg
rol
dec
push
and
push
clc
sub
cwtl
adc
adc
adc
std
dec
in
cmc
jecxz
adc
out
lock
mov
jne
add
sub
sub
xchg
call
mov
in
mov
and
clc
and
iret
test
xor
inc
loopne
pop
sub
leave
ret
sub
sahf
addr16
call
outsl
cltd
cld
xchg
nop
xor
or
jb
adc
fcmovne
jg
pop
in
imul
inc
pusha
push
popa
xchg
sub
mov
push
movsl
call
add
jg
lds
or
mov
mov
and
push
pop
pop
xchg
test
cmp
subb
push
pop
pop
or
sub
jnp
cld
cmp
and
in
loopne
sahf
add
jbe
in
xchg
lock
push
push
mov
mov
sub
js
lcall
out
and
mov
add
add
mov
push
inc
adc
dec
push
inc
cwtl
inc
hlt
adc
fsub
adc
adc
or
pop
mov
or
call
mov
in
or
ficoms
sub
sbb
xor
enter
aam
mov
cmp
add
stc
dec
jmp
push
mov
loop
jl
push
add
push
push
ret
xchg
add
or
idiv
dec
xor
push
cmp
sbb
ret
lock
stos
add
inc
cmpsl
cmp
in
and
daa
or
shll
mov
adc
cmc
cld
xor
and
out
sbb
add
push
push
and
pop
rcrb
push
lods
inc
iret
mov
pop
rcll
sbb
adc
mov
sub
cmp
in
pop
push
sarb
xchg
dec
data16
and
dec
add
cltd
loope
inc
or
or
add
idiv
in
pop
lret
inc
add
dec
dec
loopne
loope
push
adc
call
or
pop
and
shl
mov
xchg
gs
jl,pt
loopne
pop
push
mov
int3
adc
xlat
push
and
add
and
popa
jo
iret
jns
jge
mov
add
push
add
fsubp
add
add
adc
adc
jb
mov
into
addb
scas
xor
insl
cmpsb
stos
xchg
loopne
popf
push
test
stos
sub
enter
mov
mov
sub
inc
aam
lret
mov
mov
adc
call
mov
mov
fdivp
ja
sub
xchg
call
adc
hlt
inc
inc
pushf
pop
xor
add
xor
pop
popa
and
push
test
mov
pop
cmp
adc
or
xchg
dec
rol
je
sbb
mov
xchg
insl
sub
push
pop
mov
inc
aas
pop
add
nop
stc
sub
sbb
xor
gs
adc
pop
mov
sbb
add
lret
out
out
pop
call
adc
mov
push
inc
test
jmp
call
cmc
ja
dec
rcrl
sub
xorb
mov
mov
pusha
and
shr
mov
dec
inc
adc
adc
in
and
or
mov
xor
add
xor
dec
mov
pop
fadd
ja
pop
add
pop
les
adcb
mov
mov
inc
jo
sub
cmp
add
out
and
pop
rcrl
add
rclb
fsubl
mov
xor
add
fnstcw
aam
mov
andb
jl
sub
add
xor
movsl
pop
shll
pop
mov
enter
sub
xor
pop
clc
popf
dec
test
add
mov
lea
lds
dec
jmp
and
xchg
sub
push
mov
inc
out
rcrl
xchg
jo
push
lock
mov
inc
stos
seta
fwait
pusha
dec
cmp
shrl
adc
sti
cmc
int
shl
in
call
movsl
out
or
outsb
sub
inc
lods
ds
lods
stc
push
andl
jl
sub
dec
js
stos
mov
sub
jecxz
add
jns
loopne
inc
or
testb
das
lods
cli
test
rcrl
dec
cmp
cmp
lahf
ret
mov
insb
xlat
loopne
test
and
fdivs
xchg
mov
enter
pusha
mov
add
stc
clc
ljmp
xchg
push
loopne
scas
xchg
pusha
shlb
push
insb
jle
cmp
mov
pop
arpl
mov
sub
add
xor
test
shll
test
rol
jb
push
push
inc
and
outsb
jno
adc
inc
fmul
add
push
das
cltd
ret
pop
mov
int3
inc
out
incl
add
lds
push
pop
fisubs
std
inc
pop
xor
in
add
enter
pusha
popa
out
push
sub
jno
push
dec
or
jbe
mov
out
add
mov
es
js
ds
jl
push
shlb
or
notb
jb
scas
mov
adc
mov
or
xor
adc
out
lods
enter
sub
adc
or
loop
loop
jle
sub
add
cwtl
push
aas
enter
pop
repnz
sti
xchg
in
scas
cld
or
pop
cwtl
or
pop
sar
pandn
loopne
test
dec
jb
inc
mov
ds
hlt
pusha
int3
mov
ret
out
scas
inc
in
rolb
sub
or
mov
movntq
ja
add
repnz
imul
push
mov
dec
xor
or
pmaddwd
fldt
xor
and
jl
add
scas
xor
mov
sahf
push
sbb
mov
cmpsb
fcom
subb
xchg
add
js
sub
sub
or
adc
push
iret
sbb
or
outsl
inc
movsb
and
add
ror
xchg
mov
out
pop
out
push
dec
subb
lock
rcr
mov
inc
ret
daa
and
dec
sub
mov
push
call
add
int3
add
push
sarl
sbb
mov
jno
js
sub
add
lds
int
add
xchg
pusha
pop
xchg
push
inc
add
or
xchg
mov
sub
mov
scas
inc
mov
das
mov
loope
cwtl
rol
add
imul
rorb
rcr
push
pop
xor
pop
or
hlt
in
push
add
mov
adc
jle
lret
dec
pop
or
adc
mov
xchg
mov
ds
negb
cmc
insb
js
push
mov
movsb
and
and
pop
mov
addb
xorb
add
test
pop
nop
in
cmp
cwtl
adcb
mov
rorl
pop
adc
or
imul
or
mov
cli
inc
mov
or
rolb
mov
rcll
cmp
or
inc
add
bound
adc
or
xchg
int3
xchg
jo
mov
and
mov
testb
out
mov
xchg
pop
mov
mov
jmp
xor
rcrb
jecxz
shll
mov
test
dec
orb
mov
push
clc
call
clc
xor
and
mov
mov
sub
ret
add
jle
xchg
js
mov
nop
dec
inc
es
popf
dec
ds
add
and
push
mov
add
aad
cs
out
lret
sub
add
rolb
ljmp
cwtl
shrl
sarb
and
mov
cmc
data16
xchg
subb
cmp
mov
loopne
mov
mov
jno
shll
sub
repnz
jnp
jp
mov
popf
push
loopne
cmpsl
add
add
and
int
xor
test
mov
add
mov
and
bound
cmc
movsl
adc
or
fmull
movsl
push
nop
add
inc
sbb
fildll
or
idivb
testl
les
cmpsb
jo
add
rclb
mov
insw
jmp
subl
lcall
bound
arpl
lret
jnp
sbb
mov
xor
pop
and
test
xchg
lds
and
rol
ds
pop
sub
popa
push
pusha
icebp
pop
movsl
inc
adc
mov
ja
mov
sub
and
loopne
dec
mov
add
ret
rcrb
out
mov
aam
js
es
std
lahf
rolb
mov
mov
fldt
into
adcb
pop
adc
test
das
mov
cli
pop
in
xor
cs
jo
fldenv
pop
push
in
and
or
popf
cmpb
push
cmp
lcall
out
int3
and
cwtl
ds
rcrb
or
jne
and
cmp
fwait
pop
or
mov
mov
pop
inc
adc
cld
lret
xchg
dec
shlb
and
inc
jno
daa
rorb
xor
pop
pop
cs
lock
add
jge
in
sti
pop
stc
std
daa
test
rcrb
pop
or
xchg
in
pop
inc
xchg
ret
orl
sub
and
ljmp
xchg
pop
sbb
sub
sub
pop
out
mov
stos
cli
rorb
mov
pop
out
push
push
push
mov
aam
scas
dec
xor
jo
clc
mov
std
mov
push
cmp
or
shr
adc
fs
ljmp
dec
test
cli
dec
xchg
push
or
scas
mov
hlt
ljmp
sbb
rcrb
mov
xchg
cmp
rorb
repnz
add
pusha
jne
pop
rol
adc
mov
inc
push
jecxz
add
imul
mov
sbb
stos
xor
data16
arpl
scas
fsubs
add
das
sbb
and
ret
jmp
mov
or
push
jge
out
or
add
mov
clc
je
pusha
mov
add
jecxz
mov
adc
shrb
push
leave
test
out
push
hlt
test
data16
test
sbbl
adc
and
sub
sarl
lret
mov
xchg
lods
cmp
mov
mov
or
ja
mov
or
adc
xchg
out
sbb
imul
xor
add
adc
nop
cmp
inc
adc
mov
cmc
test
cmp
out
adc
and
in
add
mov
xchg
roll
adc
in
dec
stos
lods
lock
xchg
je
mov
rcrl
xchg
mov
les
in
mov
inc
sub
dec
push
cmp
xchg
add
nop
js
fwait
clc
jno
xor
aad
adc
dec
nop
or
shll
je
ret
push
xorb
pop
outsl
jecxz
or
xchg
mov
cld
pop
mov
sbb
fcoml
dec
jl
push
sbb
mov
mulb
add
add
mov
sbb
dec
or
cmpb
stos
out
and
hlt
dec
mov
sti
add
add
js
pop
das
adc
call
test
or
test
std
daa
lret
xchg
dec
mov
call
out
fsub
xchg
push
and
add
ret
mov
ror
and
arpl
or
mov
xor
mov
xlat
sahf
lea
xchg
ret
dec
mov
push
loopne
pop
add
mov
dec
stos
or
loopne
clc
add
sbb
push
add
fsubs
pop
out
stos
pusha
cld
dec
out
fwait
mov
cmpxchg
push
add
mov
mov
add
mov
lea
push
jbe
mov
push
aaa
out
mov
mov
dec
dec
mov
sbbb
cli
nop
add
push
xchg
add
and
cld
jne
jbe
jns
cmp
fwait
push
rorb
mov
negb
jbe
sbb
sub
pop
sbb
jae
call
pushf
aaa
aad
data16
push
push
adc
mov
or
add
cwtl
mov
sbb
sbb
sbb
pusha
or
xor
jo
imul
add
push
test
call
out
mov
leave
mov
or
xchg
mov
sahf
xchg
and
jae
ljmp
add
inc
xchg
enter
and
mov
add
cmpsb
push
movl
xor
sub
or
mov
push
pusha
test
ret
push
mov
add
adc
sti
xchg
add
cs
pop
mov
adc
or
xor
in
xor
add
out
fs
jo
cmpb
in
mov
pop
xor
mov
xchg
adc
repz
lods
fs
xchg
push
fsubrp
and
jge
pop
pop
inc
push
int3
and
xchg
arpl
into
cmp
and
pop
lcall
hlt
lods
sbbb
imul
pop
jmp
enter
push
mov
hlt
int3
push
lods
adc
out
out
inc
jno
hlt
pop
jmp
mov
lea
sub
mov
mov
scas
xchg
pop
ret
test
and
add
scas
out
inc
rorb
jg
notb
inc
sbb
ret
dec
ss
jl
add
push
mov
test
add
inc
pop
cmp
cmp
pop
ret
sbb
mov
cmp
rcr
and
add
fnstcw
cmp
gs
sbb
or
xor
xorb
add
sbb
mov
jne
sahf
cmp
adc
mov
shrl
sahf
aaa
push
xor
ret
pop
aad
imul
addb
sbb
pusha
mov
xchg
inc
fidivrs
cltd
and
adc
mov
cmp
xchg
add
cmp
add
fnstcw
std
call
je
jno
pop
xor
mov
adc
push
cmpb
cmp
sub
nop
dec
xchg
push
mov
push
rol
mov
add
add
lret
add
cwtl
ret
inc
push
fildll
jnp
jne
sbb
lret
lret
add
and
addb
mov
mov
insb
jmp
add
in
push
add
push
mov
push
mov
xchg
pop
lods
and
mull
roll
orl
pushf
pop
pushl
stos
push
add
sub
pop
add
fld
jmp
adc
add
add
pop
sub
outsl
mov
les
jae
leave
add
shl
or
int3
out
in
in
in
sub
push
push
jmp
push
sbb
cld
fnstsw
mov
or
repnz
repnz
push
push
push
mov
shll
imul
cmp
jns
dec
xor
jmp
and
mov
jmp
add
shl
dec
mov
xor
push
lcall
jmp
loop
push
mov
je
stc
popl
shr
inc
xor
jge
fsubp
push
sarb
fdivl
loope
addl
lods
das
mov
cmp
xor
xchg
adc
mov
sbb
pop
add
pop
pop
add
xor
out
push
aam
pop
sbb
sub
sti
sub
popl
loope
push
mov
in
mull
in
loop
add
dec
jmp
icebp
pop
fwait
iret
shll
push
test
add
or
mov
xor
pop
ret
mov
add
xor
and
int3
stos
add
pushf
clc
add
mov
clc
cmp
xor
push
sub
or
loop
push
fstpt
add
loop
insb
mov
adc
sub
adc
dec
or
or
add
aaa
dec
call
sub
sub
cli
mov
inc
iret
pop
addb
into
pop
nop
sub
sbb
push
add
iret
mov
mov
incl
sbb
mov
add
xor
lret
sub
or
cmc
pop
add
stc
and
lret
sbb
int3
inc
xor
pop
rsm
mov
fcmove
or
adc
data16
or
or
lcall
mov
or
insl
jg
and
adc
pop
xor
ret
jmp
inc
into
cmp
mov
sub
addb
xor
jmp
cmpb
dec
ljmp
jmp
ret
jl
push
add
pop
sub
xchg
or
lock
xchg
clc
out
pop
mov
addl
inc
xor
dec
pop
push
mov
add
pusha
dec
adc
pop
ja
jmp
je
pop
adc
xor
fdivrs
ficoml
add
add
pop
push
cwtl
inc
sub
dec
push
adc
pop
inc
or
mov
add
inc
xchg
fstpl
cmpsl
das
add
arpl
jbe
add
pop
bound
shll
mov
jmp
mov
push
mov
and
daa
enter
push
cmp
and
and
and
add
lret
pop
xchg
pop
adc
push
cmp
daa
xchg
adc
in
adc
pop
das
lahf
dec
mov
icebp
pusha
mov
dec
inc
fwait
pop
shll
ret
push
add
sub
clc
sub
enter
enter
add
sub
xor
push
add
pop
add
inc
fstps
lret
cmp
mov
jb
adc
sbb
add
adc
mulb
es
nop
aam
cs
ljmp
rolb
add
xchg
sub
xchg
stc
jge
xor
sub
dec
mov
add
aam
in
dec
cmp
rorl
push
or
hlt
loop
in
cmp
lret
adc
unpcklps
push
int
adc
jg
cwtl
xlat
add
fs
xor
rolb
or
xchg
xor
pop
loope
inc
pop
dec
mov
mov
clc
push
dec
popa
jl
pop
push
add
pushl
pop
mov
shl
mov
fildl
jbe
aas
sbb
pop
mov
and
dec
shrb
and
cmp
sub
dec
js
fsubrs
mov
sbb
mov
ljmp
push
or
loope
lret
adc
mov
ficompl
cmp
lods
inc
add
mov
and
mov
pusha
in
push
jmp
xchg
push
ja
gs
or
mov
mov
push
push
aam
sbb
mov
incl
mov
ja
push
adc
jg
pop
addr16
sbb
pop
jns
or
mov
ljmp
add
xor
adc
fcomps
cltd
std
fiaddl
rcrl
fwait
pop
and
repz
xor
out
xchg
pop
nop
sahf
mov
pop
push
push
ficompl
pop
push
outsb
pop
enter
xchg
jbe
lahf
add
jmp
stc
in
dec
adc
pop
pop
cmpsb
mov
xor
test
addr16
fs
mov
add
ftst
and
lret
and
adc
jo
popa
int3
daa
ficomps
dec
shll
fbld
lret
push
pop
xor
dec
shl
jno
filds
je
gs
jne
pusha
inc
push
out
xchg
je
adc
sbb
pop
nop
mov
mov
push
push
inc
repz
call
lock
cs
inc
ficompl
add
inc
push
pusha
push
pop
and
cmp
add
mov
or
shr
add
cmp
or
jmp
mov
and
mov
popf
pop
sbb
rclb
xor
add
inc
sbb
imul
sub
sub
popf
pop
sub
add
jge
clc
push
push
repnz
pop
or
daa
pop
and
pop
test
push
or
pop
add
pop
or
inc
inc
shlb
push
push
mov
mov
inc
mov
or
rolb
and
adc
cld
aas
call
inc
mov
dec
sub
xchg
or
push
inc
je
imul
lcall
and
sbb
into
adc
xor
mov
and
push
loop
dec
pop
popf
stos
outsl
xchg
sub
fnstsw
sub
jle
mov
iret
cmp
inc
or
adc
pop
push
je
xchg
adc
push
push
bound
jae
mov
sub
pop
add
popf
loopne
mov
inc
lds
mov
push
repnz
fcoml
out
sahf
add
out
add
mov
shl
pushf
out
es
gs
fld
sbb
enter
dec
sub
lret
sub
jg
sub
sub
inc
filds
xchg
dec
call
pop
xor
fiaddl
push
mov
mov
cmp
addl
stc
sar
add
repz
jo
push
or
aad
in
in
or
scas
add
ret
jecxz
add
cs
cmp
fdivs
and
and
fs
dec
add
and
lock
or
push
add
xor
jo
call
or
adc
xchg
xorb
fdivrs
test
cwtl
repz
mov
push
into
push
sub
outsb
sub
popa
aas
push
fidivrl
daa
call
mov
dec
adc
shr
andl
cld
into
push
ret
add
shlb
push
sub
push
inc
imul
add
pop
sub
jmp
in
out
lcall
mov
rorb
push
jmp
rcl
or
xor
hlt
mov
pop
incb
cmc
mov
adc
xor
xchg
addr16
je
lret
test
ljmp
ds
pop
ljmp
or
sub
and
xchg
mov
inc
aam
loop
adc
jns
cs
sbb
xor
push
shl
push
repz
shl
andb
sti
pop
sub
mov
in
xlat
pusha
call
int
test
inc
imul
std
pop
push
test
push
loopne
push
jg
dec
cmp
or
ds
jmp
push
push
xchg
sub
adc
pusha
sbb
out
mull
dec
sti
xor
pop
ret
andb
or
pop
lret
pop
sub
or
jg
inc
push
in
aam
aad
ljmp
test
shl
cmp
jne
fstpt
push
xchg
mull
or
loope
push
sbb
loopne
add
out
mov
sub
out
push
push
add
mov
daa
jnp
xor
mov
xor
pop
or
leave
adc
aam
repnz
sub
imul
pop
rcl
mov
mov
add
arpl
xor
mov
scas
dec
cmp
lcall
imul
mov
addr16
aaa
push
xchg
hlt
orps
jg
dec
movsb
lahf
faddl
mov
pop
ret
push
cmp
xchg
add
add
mov
push
add
jmp
sub
add
mov
imul
loope
adcl
cmp
sarl
sbb
setp
add
inc
mov
pusha
mov
cmp
dec
insl
mov
adc
inc
js
aas
ja
lock
xchg
inc
dec
push
dec
and
shr
push
and
rcr
xorl
addb
add
jmp
lea
fsubs
push
mov
rol
fisubrl
clc
mov
lret
pop
neg
sub
rolb
or
ret
jmp
mov
shrl
jnp
hlt
les
arpl
call
push
push
lea
mull
mov
stos
shrb
js
pop
cmp
adc
inc
sub
aas
add
inc
sub
out
mov
nop
out
movsl
mov
testb
dec
xchg
push
mov
cmc
xchg
cmp
call
pop
mov
es
dec
cmp
bound
fwait
add
xor
dec
jnp
movsb
fst
cmpl
or
jns
insl
push
push
mov
test
mov
arpl
inc
not
add
add
jbe
sbb
xchg
and
loop
or
daa
in
popf
in
insb
pop
and
rcll
add
push
inc
or
jb
aaa
inc
inc
push
and
out
stos
push
inc
xlat
je
mov
daa
lods
push
andl
cs
inc
cmp
rorb
jnp
xchg
mov
mov
xchg
cmc
mov
cmp
xorl
or
xchg
cwtl
fbld
ror
std
cmp
xchg
shlb
aaa
sub
add
jecxz
or
xor
push
mov
adc
les
fldt
mov
scas
push
sub
and
push
adc
out
xor
add
pop
push
push
jmp
xchg
test
lea
sub
imul
or
pop
sub
repz
sbb
add
sbb
sbb
dec
int3
cmp
ficoms
lret
pop
rorl
jae
loope
dec
cmp
sub
jle
push
sarl
stc
addb
dec
mov
jae
popf
jg
insl
neg
adc
cltd
cwtl
fmull
lock
add
pop
imul
jae
xor
out
inc
pop
imul
push
adc
mov
gs
cmp
repnz
int
js
pop
pusha
adc
pop
add
jle
imul
popa
ret
jo
adc
add
adcb
or
mul
mov
push
xchg
cmp
adc
fdivs
add
nop
or
pop
add
jmp
pop
mov
testl
mov
or
inc
or
orb
fcoml
mov
sub
scas
shrb
frstor
stc
sahf
popl
inc
mov
xor
aam
push
lcall
sub
gs
push
out
push
lcall
push
inc
jmp
add
xor
xchg
scas
xor
add
roll
sub
push
adc
cli
dec
enter
divl
rclb
push
add
jmp
and
or
jbe
dec
cmp
mov
add
mov
cmp
pop
xchg
cmp
bound
insl
enter
std
int3
shlb
xor
insb
or
lcall
shll
iret
push
icebp
sahf
movsl
dec
add
lock
lods
jl
lea
int
mov
jmp
push
sub
andb
push
outsl
and
and
or
add
xchg
aad
add
pop
pop
cmp
dec
jbe
push
test
pop
mov
rcll
cmpb
sub
sbb
rcrb
xor
jg
ss
push
lea
leave
sahf
cmp
mov
dec
jecxz
loop
cmp
insb
push
inc
mov
jno
jb
ret
xchg
roll
xor
aas
mov
sub
out
or
adc
mov
dec
ds
sbbl
ficoms
call
popf
add
dec
leave
pop
adc
sbb
jmp
push
mov
rolb
add
mov
and
in
out
mov
or
cmp
pop
jnp
add
cmp
dec
push
mov
xor
arpl
or
add
lds
repz
sub
enter
daa
mov
push
sub
pop
fbstp
aam
cmpsl
jg
cld
in
rclb
xchg
leave
pop
xor
jo
lods
push
pop
lds
outsl
push
pop
push
sbb
pop
lods
and
mov
pop
pop
pop
fdivrs
in
outsb
dec
push
es
jecxz
add
jmp
inc
popf
pop
rcl
int3
add
daa
dec
cltd
loopne
xchg
dec
outsb
addb
pop
dec
push
nop
enter
test
ljmp
imul
mov
mov
inc
test
mov
pop
ret
shll
add
gs
sub
push
int3
pop
mov
sbb
icebp
lahf
pop
cmp
inc
outsl
inc
inc
test
in
sub
ljmp
jno
dec
inc
fadds
inc
xchg
leave
mov
icebp
add
push
insb
or
jmp
fdivrl
ret
pop
cld
in
cli
iret
sub
push
jb
aas
aam
mov
not
push
mov
push
mov
test
pop
or
rcll
xchg
outsl
movlps
jmp
pop
mov
xchg
adc
push
leave
add
and
mov
add
addb
add
sub
sub
sbb
repz
push
sub
jo
jmp
add
dec
mov
mov
pushf
jmp
sub
hlt
fisttpll
fsubrl
mov
repnz
and
cmp
mov
or
dec
dec
lea
repnz
pop
push
mov
adc
jns
xor
sub
mov
inc
mov
fcomps
es
push
pop
sbb
das
jecxz
inc
xchg
or
cmp
aam
call
dec
mull
lods
xor
push
adc
neg
add
jl
je
lods
push
xchg
jl
push
push
jle
sub
addb
jle
or
adc
pop
push
push
arpl
enter
sahf
fimull
dec
lock
mov
adc
lahf
lret
int
add
in
push
inc
jmp
mov
or
xor
inc
clc
lds
dec
mov
ds
sub
sbb
or
fiadds
push
pusha
and
ljmp
jmp
sbb
jnp
test
or
adc
and
ja
xor
mov
add
add
sub
xchg
fisttps
rolb
faddp
cwtl
inc
fwait
dec
push
adcl
lahf
and
add
jmp
pop
add
loope
shlb
inc
frstor
pop
sub
test
jmp
xchg
ret
jne
fstpt
mulps
cmpsb
xchg
daa
adc
mov
sub
mov
xlat
ja
pusha
jmp
gs
movsb
imul
dec
imul
xchg
jns
cmp
xchg
sahf
sub
jge
cmp
or
dec
testl
add
out
leave
outsb
lock
pop
in
jbe
or
cmc
or
jne
ljmp
in
rorl
pop
jae
adc
or
ret
rorb
in
fimuls
xor
pop
push
test
mov
mov
add
add
and
adc
andl
cmp
shlb
addl
push
push
repnz
sub
popa
ret
xor
mov
imul
xlat
cmp
jmp
push
loopne
outsl
arpl
mov
sti
or
sbbl
dec
fimuls
lods
arpl
or
sub
andl
lock
popa
lret
jp
add
push
or
xor
sub
es
add
pushf
jg
loopne
jns
jmp
cmpsb
add
out
test
pop
cs
mov
inc
xchg
jl
arpl
or
dec
sbb
das
andb
nop
add
pop
outsl
sarl
dec
arpl
pop
aad
sbbb
in
sub
xor
pop
sbb
repz
add
jno
repnz
xchg
adc
adc
mov
or
ret
push
rorl
add
aas
into
ret
icebp
sub
mov
scas
aas
fmuls
cli
ret
sub
pop
mov
fidivrl
pop
push
add
test
jne
or
and
adc
mov
and
add
sbb
mov
in
nop
daa
ja
pop
adc
push
rolb
out
scas
cmp
dec
dec
inc
jo
ret
fsubr
cmc
or
cmp
mov
inc
jmp
mov
fs
mov
test
outsb
add
outsl
adc
add
out
jmp
clc
push
xor
adc
daa
pop
pop
out
in
add
out
add
cwtl
mov
jp
icebp
inc
cli
mov
sarl
add
or
mov
or
imul
or
pop
pop
arpl
mov
jge
adc
fimull
shl
andl
rorl
arpl
push
pusha
scas
call
or
jmp
loopne
add
scas
jl
out
or
stc
lods
adc
or
or
hlt
add
in
idivb
push
push
out
sub
push
jp
jae
push
mov
mov
cmpb
cltd
push
mov
sub
mov
sub
test
lret
jle
lcall
push
inc
jb
mov
push
and
aam
pop
sti
es
push
out
mov
mov
sub
roll
adc
inc
xorb
pop
sub
push
js
push
loopne
inc
shlb
mov
push
notb
push
and
add
add
xchg
push
and
mov
aaa
neg
cwtl
jns
mov
sub
nop
mov
jbe
out
mov
push
mov
mov
imulb
and
in
xchg
repnz
mov
add
adc
in
and
adc
mov
inc
dec
add
lahf
mov
add
inc
rolb
filds
jno
and
dec
ret
dec
pop
push
sbb
dec
sub
dec
mov
jg
jne
push
mov
add
pop
push
sub
inc
and
outsl
bound
pop
dec
add
xchg
arpl
mov
dec
shl
adc
add
sbb
or
scas
push
mov
rcll
ss
and
add
test
rorl
das
daa
into
ret
mov
xchg
sub
jb
ja
add
lret
jmp
jno
push
hlt
mov
iret
or
mov
or
push
add
jg
popa
lret
roll
and
and
inc
frstor
xorl
add
dec
add
xchg
addr16
jbe
xor
lret
pop
jb
addl
xchg
push
rcll
mov
in
add
pop
jo
daa
sub
push
or
shll
cmp
push
sbb
das
call
shl
sub
les
cmc
shrb
inc
jb
mov
mov
ds
cltd
sahf
ds
sub
dec
add
add
repz
xchg
dec
mov
and
pop
xor
pop
mov
and
rorb
pop
pop
pop
push
pop
add
cltd
out
insl
sub
fldl
and
jbe
or
and
push
inc
sub
cmc
jae
pop
mov
out
aad
mov
push
rclb
cwtl
cmp
xor
inc
imul
pop
jl
iret
hlt
icebp
mov
dec
pop
push
cmp
pop
mov
subb
mulps
in
imul
ret
push
or
lock
jmp
insb
pop
sbb
pop
fwait
insl
xor
adc
mov
sbb
cmpsb
inc
loope
pop
mov
sbb
push
iret
lods
test
xor
pop
setge
jo
out
sbb
mov
add
dec
pop
jne
outsb
push
je
subl
mov
jmp
mov
sub
lret
fiadds
dec
aad
mov
pop
jmp
adc
pop
mov
lods
push
cmp
add
xor
cmp
stos
lods
push
jge
xlat
adc
and
adc
cmc
ss
mov
lahf
jg
pop
cmp
pop
or
sti
ret
add
add
adc
mov
or
cmp
jg
jmp
rcr
add
mov
jmp
leave
cmp
popa
jmp
pop
pop
xchg
out
orl
int3
cmp
mov
mov
not
leave
mov
mov
aas
sub
jmp
addr16
fisttpl
pop
inc
arpl
dec
push
inc
aad
pop
les
sub
add
sub
fdivrs
sub
rorl
adc
out
xorl
std
pop
pop
xchg
push
xchg
or
push
pop
push
xchg
push
push
sub
jmp
imul
mov
dec
xchg
movsl
and
jbe
sub
add
cmp
mov
inc
cmpsl
lds
cmpb
pusha
cmp
mov
xor
and
mov
sub
jno
inc
sub
jmp
aas
pop
pop
popa
adc
es
loopne
and
adc
shrb
mulpd
clc
mov
arpl
cmp
sub
or
out
adc
mov
ss
jnp
push
subl
jmp
lds
adc
push
pop
push
push
dec
pop
daa
pop
cmp
sbb
pop
or
add
or
add
jns
pop
ret
mul
or
dec
dec
testl
sbb
push
push
and
jb
fbstp
jo
inc
and
sub
sub
popa
xchg
mov
icebp
adc
mov
cmp
sbb
clc
call
push
xor
jae
daa
outsb
dec
sarb
sub
and
jne
or
sbb
jb
xor
mov
and
cmp
divb
rcrb
jno
sbb
jmp
fs
adcb
stc
pop
repnz
xchg
sbb
call
or
inc
rorb
in
push
pop
dec
jmp
or
jb
pop
cmp
push
push
inc
ficomps
pop
int3
cld
adc
mov
jno
push
and
or
shr
not
jmp
xor
mov
pop
mov
pusha
es
mov
mov
outsb
and
pop
sub
push
pop
push
aaa
rcl
add
inc
sub
outsl
push
outsb
aam
test
in
test
enter
cld
clc
ljmp
add
add
push
mov
sub
lock
pop
pop
cs
fldlg2
sbb
mov
aad
lret
pop
push
lret
cmp
mov
sub
pop
jle
pop
hlt
add
popl
inc
lret
mov
adc
imul
bound
push
not
adc
jo
hlt
lcall
mov
fucomp
xor
push
mov
or
inc
sub
inc
add
pop
jne
imul
xchg
mov
mov
push
mov
daa
icebp
cmc
push
fcomp
pop
xchg
mov
data16
xor
push
pop
or
push
into
add
int3
inc
mov
loope
jmp
add
add
cmp
cmc
pushf
vorps
xor
icebp
fbld
adc
imul
cld
cmpsl
sarb
push
push
or
pop
shl
cmp
adc
addr16
enter
es
es
add
aam
pop
pop
push
aas
push
cmpsl
jge
inc
mul
fiadds
sbb
imul
mov
fcoms
pusha
pop
insb
popa
dec
arpl
les
stos
aas
mov
push
and
adcb
mov
add
xor
pop
or
icebp
or
push
mov
and
les
orb
sbb
shl
scas
add
setg
andnps
and
or
sti
imul
ljmp
fs
mov
jecxz
cmp
cmovno
dec
pop
or
xorb
repnz
mov
jo
add
or
xchg
sub
flds
inc
jb
scas
inc
add
data16
xchg
call
or
pop
inc
mov
jecxz
xchg
push
aad
and
or
lret
sbb
fwait
cmp
pop
push
call
lods
jecxz
pop
jmp
mov
sub
add
sub
dec
ficomps
add
jmp
mov
sub
int3
out
loopne
xchg
push
sti
add
fcoml
dec
in
rclb
inc
xchg
inc
scas
daa
orb
inc
add
cwtl
test
shll
sub
insl
push
imul
sub
xlat
adc
push
xor
out
test
pop
hlt
mov
ret
push
push
sbb
pop
test
push
cwtl
push
out
add
outsb
or
add
lea
loopne
into
sbb
and
sbb
push
das
sbb
ret
push
or
xlat
shl
pusha
fcompl
stc
sbb
pop
out
add
jle
xchg
cs
push
mov
adcb
push
cmpl
aas
js
lods
mov
arpl
cmp
stos
sbb
shrl
rcll
in
sub
cmp
pop
inc
loopne
sarl
fdivl
daa
sub
push
sbb
fwait
push
lds
lea
and
cmpsb
lret
inc
push
dec
inc
mov
add
push
or
pusha
jbe
mov
adc
pop
and
push
inc
xorb
shr
xor
nop
xor
and
xor
fstp
xchg
inc
push
add
mov
mov
inc
xor
mov
ret
dec
addb
mov
scas
dec
or
mov
in
dec
xor
mov
out
jns
testb
jl
cs
cmp
pop
push
into
mov
pop
push
dec
shll
xor
cltd
pop
sbbl
je
push
adc
add
or
neg
icebp
in
dec
add
or
pop
cmp
mov
pop
punpckhbw
pop
pop
ljmp
mov
jbe
hlt
push
jb
add
xor
pop
add
imul
cmpsb
outsl
or
cmpsb
add
dec
or
mov
push
dec
jmp
sub
adc
add
push
cmp
lock
sub
push
jmp
das
xchg
dec
mov
scas
or
enter
lods
mov
push
insb
sahf
mov
sub
dec
push
pop
or
ss
cltd
pushf
inc
adc
fsubl
call
inc
mov
cmp
loop
xor
sub
push
add
icebp
push
adc
cmp
outsb
adc
or
mov
pop
or
loope
pop
pusha
push
mov
push
into
stc
cld
xchg
mov
ret
adc
inc
bound
clc
or
adc
pushf
cmpsl
push
or
or
rcrl
sti
adc
bound
push
sub
int3
xor
test
sub
int
and
or
repz
pop
dec
add
out
or
out
mov
add
sbbb
inc
in
fdivs
jge
or
inc
fdivs
sub
and
adcb
push
dec
pop
push
sub
and
pop
add
div
push
jns
sarl
mov
in
imull
aaa
lahf
pop
or
fnstcw
test
je
sub
xchg
mov
add
ret
or
gs
or
lea
movswl
push
vfmsub231ps
and
or
add
addl
call
pop
jmp
cmp
sbb
mov
cs
add
scas
pop
cwtl
bnd
mov
push
push
mov
repnz
or
pop
sarl
pop
jns
or
sub
pusha
cmpsl
adc
add
jmp
pusha
adc
push
push
push
je
jl
es
std
pop
les
cld
sub
sub
pop
sub
cmova
test
push
andb
sbb
popa
or
add
sub
mov
shlb
jmp
ja
jmp
add
cmpsb
sbb
xchg
jecxz
outsl
in
and
in
repz
fstps
and
das
cmp
add
push
lods
adc
push
scas
call
xor
xor
fimull
pop
leave
inc
rcr
mov
inc
arpl
push
lcall
xchg
jmp
inc
enter
fstp
lods
or
sarl
mov
lods
cmpsb
or
popf
loop
mov
and
dec
pop
mov
andl
jmp
xor
push
inc
xor
js
jmp
jns
mov
data16
mov
pop
test
sub
mov
add
and
jb
rolb
int
test
xor
xchg
or
ljmpw
or
not
push
mov
es
xor
imul
xor
dec
and
mov
mov
sbb
sbb
mov
or
xorl
insl
mov
pop
sbb
dec
jp
pop
icebp
xchg
cmp
cmc
xor
arpl
orb
rolb
jne
mov
ret
lock
sbb
and
idivb
and
sub
loop
bound
stos
jne
inc
cwtl
aaa
pop
out
dec
or
mov
adc
xor
sub
adc
push
xor
cltd
loope
loopne
cmp
decl
push
xor
push
pop
mov
inc
vmwrite
jl
xlat
sbb
fcmovu
imul
pop
sub
push
mov
xor
dec
lcall
sub
fsubr
push
sub
pop
rcrl
jmp
pop
add
or
inc
and
or
lods
or
xchg
pop
pop
arpl
sbbl
sbb
inc
adc
jo
out
sbb
lret
and
jne
adc
inc
jb
sahf
add
jbe
fwait
push
and
xor
jnp
mov
sbb
mov
pop
jle
cmpsl
dec
lock
mov
pop
push
loope
jp
lret
sbb
subb
sub
cmp
xchg
cmpsl
movl
mov
stos
nop
xchg
cs
or
addr16
push
andl
push
addr16
pop
imul
out
adc
mov
fs
mov
pop
sbb
loope
ficompl
push
mov
add
xlat
adc
mov
sbbb
cmp
dec
or
loop
cli
or
jmp
fisttpll
cmp
jbe
packssdw
in
sbb
or
cmp
pop
pusha
insl
jmp
cmpsl
pop
xor
into
dec
js
icebp
test
mov
pop
add
inc
loop
inc
lea
std
mov
add
js
pop
sub
jmp
or
loopne
jne
pop
pop
push
fs
ljmp
xorb
mov
int3
mov
xor
pusha
arpl
aas
jle
pop
dec
pop
dec
mov
mov
shlb
add
add
pop
into
lret
clc
pop
shr
dec
push
lds
or
pop
cmp
sub
xlat
pop
loop
push
mov
pop
insl
pushf
dec
or
jne
mov
xor
add
hlt
sbb
push
add
push
dec
rorl
jo
adc
inc
ffree
jbe
sbb
dec
add
aad
push
sub
mov
adc
add
pop
lret
pusha
test
leave
push
or
fs
add
int
or
fs
addl
outsl
pop
bound
shl
js
xchg
dec
loop
fcomps
adc
fsts
loopne
sub
dec
loop
ljmp
push
push
sub
in
or
test
in
mov
push
mov
sub
and
push
ret
xlat
sub
or
sbb
mov
daa
mov
cltd
mov
sbb
lods
subb
cmc
adc
call
out
inc
or
sbb
xor
xor
push
add
into
push
lods
insl
addb
pusha
add
enter
pop
rcll
dec
outsb
xor
push
mov
push
or
fs
push
sub
test
punpckhdq
jmp
or
fldenv
xor
pop
lods
jecxz
dec
adcl
nop
sub
cmp
out
shrb
inc
jp
cmp
loop
and
push
pop
jnp
or
loopne
mov
xor
inc
mov
sti
mov
cmp
xor
leave
jl
add
sbb
or
daa
lcall
add
pop
shrb
mov
test
push
mov
or
inc
adc
xor
mov
movsl
je
call
push
adcl
mov
adc
scas
mov
push
mov
ret
mov
or
or
pop
sub
arpl
add
idivl
push
test
dec
cmpsb
mov
mov
sub
out
rclb
mov
jle
jmp
test
dec
mov
sar
push
cmpsl
stos
cs
int
push
pop
xchg
test
and
dec
push
fiaddl
and
jp
loop
es
pop
add
rcll
add
mov
add
push
inc
fwait
mov
sub
pop
adc
push
push
inc
out
ja
add
dec
lock
lahf
loopne
pop
adc
sbb
pop
popf
adc
mov
adc
clc
sti
sbb
daa
xchg
test
fs
adc
add
pop
ja
loopne
das
jmp
push
pop
shl
andb
dec
push
push
in
cmpb
add
cmp
push
and
mov
shr
add
subb
inc
lods
test
and
dec
pop
hlt
mov
and
imul
pushl
loope
push
dec
imul
shrl
sub
pusha
test
sbb
sarl
in
mov
cmpsl
mov
fcompl
pop
xchg
jp
push
scas
adc
push
push
sub
adc
sbb
dec
sahf
rorb
inc
movsl
aam
lret
in
sbbb
add
iret
xchg
or
sbb
push
clc
lods
push
pusha
jg
sbb
lss
testb
and
dec
fsub
mov
cmp
je
cmp
pusha
and
daa
or
push
mov
cmp
vxorps
adc
nop
dec
mov
adc
enter
push
ljmp
sbb
adc
lret
sub
inc
sahf
and
dec
addr16
sub
mov
sbb
push
cmp
push
sub
das
bt
test
lea
xor
rcl
sub
out
cmp
aad
push
mov
imul
jl
cmp
mov
sub
sbb
push
mov
in
rcll
mov
mov
inc
jmp
adcl
jnp
jnp
dec
jmp
and
cmc
jne
pop
gs
mov
pop
stos
sbb
xor
xchg
aad
add
sbb
sub
cmp
push
mov
mov
es
pop
cld
cmpsl
bnd
xorl
add
push
clc
arpl
subb
cwtl
or
mov
pop
inc
push
push
rclb
bound
mov
pop
or
xlat
mov
adc
or
mov
cmp
fadd
cmp
and
mov
add
shl
sub
push
mov
mov
das
mov
addl
xchg
or
fnstcw
mov
sub
cmc
pop
push
mov
push
inc
lcall
mov
aaa
fcomps
jne
daa
js
imul
mov
mov
add
pop
pop
outsl
push
imul
push
push
es
aaa
add
pop
scas
insb
inc
sarl
out
mov
xor
fildll
lock
jbe
jns
mov
push
adc
or
inc
jnp
mov
or
jle
and
cltd
shll
sub
pop
mov
outsb
xchg
in
or
dec
sub
or
pushf
std
andb
xchg
jg
arpl
dec
mov
ss
fsub
pop
sbb
jmp
scas
xor
shlb
inc
push
xor
or
push
cltd
push
lods
push
mov
sti
and
jmp
and
sbb
pop
and
add
out
pop
dec
dec
dec
or
push
ljmp
gs
callw
dec
mov
adc
jmp
cmp
pop
mov
mov
mov
fadds
roll
pop
cltd
pop
por
test
jmp
pop
pop
add
cwtl
in
jl
loopne
repnz
xchg
xchg
gs
mov
xchg
and
or
aaa
addb
js
ja
leave
test
push
call
inc
or
test
and
adc
addr16
add
adc
rolb
sbb
lea
cmp
das
out
xorl
test
pop
imul
adc
xor
xchg
cs
mov
movsl
push
fldl
pop
nop
stc
in
cmp
mov
xchg
insb
rorl
pop
ret
and
pop
adc
mov
adc
dec
xor
mov
jae
xchg
xchg
fmuls
and
xor
xchg
xor
push
jmp
pop
mov
xchg
fwait
pop
jge
jnp
test
push
fstl
in
mov
mov
lds
popl
imul
push
add
fwait
add
xor
add
cmp
fldt
pop
shll
pop
add
repnz
cmp
add
sub
push
xchg
or
inc
jge
push
sub
add
push
icebp
dec
cld
push
xchg
shr
mov
movsl
push
push
add
inc
cmp
push
xchg
add
jns
fst
ret
push
adc
pop
jle
sub
or
sbb
test
inc
les
add
push
and
push
ja
xchg
mov
test
or
xlat
sbb
or
orl
inc
sbb
mov
or
dec
stos
push
orb
mov
dec
push
adc
push
pop
pop
cmp
cmp
inc
test
adc
push
rcrl
pop
jecxz
daa
push
pusha
inc
jg
outsb
cld
out
inc
and
jae
out
mov
std
add
jl
mov
jnp
jg
cwtl
dec
xchg
inc
rorb
xchg
or
sub
mov
jle
stc
xchg
adc
ds
out
popf
push
sbb
cmp
mov
sub
jmp
int3
pop
adc
hlt
inc
sbbl
ljmp
ss
cmc
andl
test
push
std
shlb
outsb
jmp
and
cmp
aas
sub
daa
inc
rol
scas
testb
and
loope
mov
mov
test
adc
rcrb
ds
pop
jmp
jae
daa
es
cmp
jno
pushf
icebp
bound
or
roll
push
sbb
sub
hlt
add
or
add
stos
adc
push
cwtl
push
push
dec
outsb
add
push
mov
pop
add
mov
and
movsb
cmpsl
jp
dec
ja
jmp
pop
or
cmc
dec
pop
ficompl
out
inc
or
nop
fwait
jg
adc
jmp
lds
and
inc
mov
mov
test
xor
out
cmp
fsubs
xor
popa
add
int
or
jmp
jb
or
xor
shlb
jp
fidivrs
mov
or
add
add
shr
out
pop
pop
leave
xor
int
jl
into
mov
jmp
pop
enter
inc
sub
imull
jno
inc
mov
pop
sub
in
les
les
pop
dec
clc
cmovae
stos
mov
xlat
popf
jnp
jle
in
xchg
in
pop
jae
add
lea
cwtl
jo
cmc
dec
add
inc
or
cmpsb
push
stos
xchg
mov
or
lahf
leave
fwait
sub
mull
jmp
rcr
hlt
lret
roll
push
and
add
or
loop
dec
inc
movsl
in
jl
sbb
adc
pop
mov
push
sub
mov
aas
filds
scas
mov
xchg
fs
lret
bound
adcl
mov
add
sub
xchg
outsl
xchg
push
mov
ja,pt
mov
or
adc
push
sahf
data16
insb
jae
aas
add
sub
cmpsl
icebp
imul
dec
jbe
not
mov
sub
sbb
cmp
sbb
fwait
mov
lret
push
sub
pusha
adc
add
cmp
shrb
lods
jmp
test
lcall
hlt
add
inc
mov
dec
pop
popl
das
push
roll
ret
jmp
dec
lock
jmp
or
or
aaa
or
out
lds
cmp
or
testb
fmuls
imul
lods
add
inc
in
push
ljmp
mov
ljmp
jnp
sbbl
out
call
pusha
push
inc
xor
jmp
xchg
not
iret
leave
or
adcl
sub
and
flds
call
shrl
sbb
push
add
shr
sbb
push
popf
xor
sbb
xlat
out
push
add
data16
ja
es
or
ret
cmp
and
in
push
pop
roll
incl
xchg
clc
inc
cmpsb
arpl
das
or
ret
popa
call
data16
fs
icebp
dec
movsb
xor
js
addr16
mov
push
push
push
adc
push
jmp
add
add
shl
fistpl
orb
pop
push
adc
dec
dec
pushf
imul
icebp
ds
push
adc
xchg
sub
pop
fcompl
pop
leave
icebp
div
pop
xor
add
fdiv
sub
adc
xor
arpl
addb
or
lret
mov
repz
test
in
pop
into
in
cmp
loopne
adc
mov
pop
std
mov
fcompl
cmp
push
sub
inc
mov
mov
jno
inc
pushf
pop
mov
mov
aas
daa
movsb
adc
pop
andl
pop
sub
sub
add
or
mov
daa
shll
rolb
out
arpl
stos
jo
xchg
pop
test
mov
stc
arpl
shl
xchg
pop
and
xor
pop
adc
cs
test
cwtl
mov
cmp
arpl
mov
or
pop
pop
mov
push
adc
jae
imul
mov
push
hlt
lock
mov
nop
test
jmp
rorl
int
pop
ja
ficompl
adc
movsl
cltd
jp
ret
cmp
xor
ror
and
sub
cmp
jecxz
cmc
push
add
leave
push
mov
adc
jle
lret
push
cld
mov
xchg
dec
mov
xchg
mov
xchg
add
pop
push
mov
daa
shr
mov
add
imul
push
push
xor
or
add
stc
push
ret
xor
mov
rolb
pop
xchg
jmp
fwait
or
add
dec
and
pop
jle
mov
jnp
jp
push
les
outsl
xor
dec
stos
popf
and
das
add
pop
sbb
jg
jb
addr16
or
test
push
lea
push
xor
ret
push
sub
bound
pop
sub
fisubrs
cmp
or
and
push
cmp
mov
or
sbb
xor
xchg
decb
dec
push
jl
jno
aas
and
jmp
or
test
ret
dec
dec
fsubrs
dec
dec
shll
push
xchg
lods
outsl
inc
test
cmp
and
les
adc
push
adc
fwait
sarb
jge
cmp
xor
rorl
adc
mov
pop
xchg
je
fwait
xchg
sahf
and
jbe
outsb
cmpsb
ljmp
rcrl
jnp
imul
decl
jmp
add
pop
push
mov
shll
int
sub
pop
dec
es
rcrl
lock
pop
int3
mov
pop
push
or
leave
pusha
pop
jmp
lods
xor
sbb
pop
sub
jg
les
sbb
int3
adc
dec
add
xor
rolb
insl
repz
fnstcw
push
adc
dec
fcomps
inc
pop
xchg
dec
mov
jge
dec
inc
push
mov
insl
nop
sbb
xchg
xor
jp
push
xor
adc
sahf
dec
jae
push
aad
and
out
mov
pop
mov
daa
std
or
mov
cmp
or
enter
dec
xor
js,pn
add
iret
hlt
xor
adc
mov
jns
adc
sbb
pop
pusha
xor
mov
mov
dec
and
repz
dec
ds
jns
pusha
fwait
mov
scas
ret
es
es
stc
and
or
xor
push
sbb
push
push
jg
sub
pop
sbb
daa
jmp
clc
pushf
dec
inc
adc
jl
jmp
sub
cld
add
loopne
mov
mov
mov
pop
cmp
icebp
cltd
pop
rcr
loope
pop
hlt
les
push
add
jns
ss
push
pop
xchg
nop
insl
lret
xor
or
and
sbb
fadds
pop
dec
lcall
jmp
xor
mov
xor
mov
jmp
test
sbb
sbb
mov
orl
fbld
mov
lock
and
push
xchg
add
ljmp
mov
mov
mov
xchg
icebp
daa
test
mov
and
test
xor
pop
mov
or
in
das
int
repnz
repnz
xchg
adc
ret
xor
cmp
clc
jns
mov
in
dec
sub
in
jno
lods
gs
pushf
pop
call
fs
pop
push
repz
pop
add
lds
xor
inc
adc
push
xchg
xor
dec
in
pop
cmp
or
cmp
dec
adc
int
xor
jmp
mov
inc
jns
or
pop
sti
sub
data16
cmp
mov
xchg
pop
jae
mov
xor
mov
push
xor
enter
nop
lret
adc
das
test
pop
in
repz
dec
icebp
cmp
pop
data16
sarl
dec
mov
dec
lret
adc
loop
inc
push
jle
movsl
add
sbb
jecxz
pop
sbb
lahf
adc
loope
cmp
cs
test
jmp
add
pop
out
pop
imul
sbb
mov
fstps
lret
xor
popf
mov
andb
add
test
cmp
hlt
push
insb
cmp
ss
incl
adc
push
stc
pusha
pusha
xor
orl
xor
enter
pushf
add
pop
jb
orb
xor
js
add
data16
sbb
xor
and
orl
jmp
push
mov
mov
pop
jbe
and
add
add
dec
pop
or
repnz
pop
sbb
cs
in
lds
je
inc
push
mov
xchg
add
lahf
loop
or
ret
add
jns
xchg
pop
add
in
or
fwait
push
jmp
shlb
out
adc
loop
xor
add
data16
cli
and
fs
scas
xor
mov
testb
fisttps
xchg
loopne
ret
sbb
cmpxchg
or
cli
pop
mov
pusha
mov
mov
rolb
mov
xor
or
push
popf
int
mov
aas
jae
and
cvtps2pi
mov
jl
add
loop
push
gs
ret
push
jle
sbb
lcall
mov
dec
or
adc
lock
xchg
push
mov
jg
xor
pop
jmp
sub
mov
xchg
mov
sub
je
in
repz
andb
sbb
inc
imul
push
xchg
daa
jmp
sti
jae
dec
mov
xor
mov
in
add
sub
or
nop
rcll
jmp
pop
push
inc
inc
sub
int3
jmp
cmp
icebp
cs
out
call
or
sbb
popa
push
sub
sub
sub
jb
mov
lock
ret
repnz
sbb
inc
pop
add
dec
cmp
mov
or
xor
pop
push
lahf
sub
mov
call
in
movzwl
xor
add
in
roll
cmp
jge
xor
ja
xchg
addr16
push
stos
test
add
neg
shrl
pusha
jne
or
sbb
xchg
repz
pop
lods
imul
or
punpcklbw
sub
add
jne
mov
neg
sbb
rcrl
nop
push
icebp
adc
hlt
imul
lcall
shlb
call
inc
fs
inc
and
gs
xchg
daa
rorb
jne
jmp
mov
not
shr
mov
imul
jmp
lret
notl
negl
or
shlw
scas
inc
lods
popa
imul
xchg
dec
rol
sbb
enter
neg
or
dec
test
nop
sbb
in
rcll
push
or
jno
cmp
push
call
dec
sbb
test
add
jbe
adc
and
mov
mov
mov
mov
sub
inc
popf
test
nop
icebp
inc
sub
pop
in
test
pop
add
cmp
iret
or
cmp
rolb
sub
ja
xor
cwtl
repnz
jb
pop
add
shl
add
jmp
pop
jb
push
imul
adc
xor
insb
popa
cmpb
sub
push
das
popf
fwait
test
mov
outsb
sub
orb
in
mov
dec
xor
adc
int3
lret
push
inc
gs
movsl
xchg
mov
inc
mov
dec
and
xchg
pop
jl
jae
mov
or
jge
loope
add
xchg
jae
arpl
xlat
inc
lods
adc
jmp
popf
addr16
xor
pop
clc
push
adc
cmp
insl
sub
shrl
push
inc
loopne
push
bound
adc
shr
decb
stos
inc
adc
xchg
fldcw
push
dec
xlat
pop
or
mov
stc
dec
in
or
mov
dec
xchg
in
fs
test
call
xor
inc
movsl
cli
pop
js
dec
mov
or
mov
das
or
jge
push
adcb
xchg
dec
popf
rcpps
or
adc
pop
push
mov
outsb
cmpsl
add
or
out
js
or
cli
push
mov
test
es
xorb
or
pop
sarb
jmp
cld
mov
cmp
scas
daa
jmp
sbb
ds
xchg
jg
rclb
xor
into
jo
pop
mov
push
sbbl
pop
sbb
inc
xor
add
gs
out
nop
pop
xchg
mov
or
adc
mov
mov
loopne
push
pop
and
daa
clc
js
add
mov
jmp
xor
xor
or
adc
push
and
sbb
add
divl
pop
fldenv
or
sub
stos
popf
in
out
xchg
adc
push
fwait
add
push
mov
or
jmp
jmp
pause
xchg
rol
jge
rcl
stos
and
cmp
std
jne
pop
and
push
outsl
stc
sbb
fldcw
and
fwait
pop
loopne
or
jno
mov
int3
dec
or
push
cmp
into
push
inc
pop
xor
pop
or
imul
sarl
nop
pushf
cli
js,pn
mov
rorb
iret
jmp
dec
push
pop
jle
adc
add
dec
push
cmp
xchg
dec
xorb
push
stos
mov
shrl
lock
sub
lods
pop
adc
lret
mov
cwtl
mulb
sub
sub
add
jmp
ror
mov
aaa
adc
pop
push
dec
jp
add
std
es
mov
add
xchg
pop
xchg
not
popf
add
pushf
or
in
jecxz
mov
addb
dec
cmp
gs
and
inc
movsb
lahf
outsb
add
sti
pop
daa
outsl
sar
orb
push
popa
pop
xchg
ret
push
data16
out
xchg
pop
pop
cmpl
or
jne
xchg
push
add
jae
xor
mov
and
cltd
fld
cmp
adc
ljmp
push
mov
pop
bound
add
stos
sub
lds
add
and
sub
data16
mov
sbb
jno
sbb
enter
loop
into
insb
bound
fistl
push
nop
jge
fadds
or
lods
inc
xor
pop
daa
sub
mov
mov
jo
into
push
scas
inc
call
pop
adc
scas
inc
enter
push
pop
cwtl
cmpsb
and
mov
insl
ds
in
inc
push
popf
and
mov
scas
and
add
push
les
xchg
mov
gs
jp
sub
or
add
stos
and
stc
fwait
push
jnp
xlat
cs
inc
sarl
aam
pop
xlat
jne,pt
jmp
push
shl
aas
cmpsb
test
xchg
inc
clc
pop
hlt
scas
cmpl
push
rcll
xchg
jge
shl
push
shl
add
pop
loope,pn
and
popa
sub
jbe
push
data16
lods
std
sub
rcrb
xor
mov
jmp
test
outsb
adc
sbb
fcomi
int3
jle
out
or
sbb
ret
mov
shrb
int
add
jge
pop
data16
shr
add
dec
pop
int
push
bound
xchg
daa
jl
pop
add
repz
or
cwtl
jp
pop
push
xchg
sub
or
pop
lcall
test
xor
cs
mov
icebp
testb
pop
cmp
repnz
in
pop
mov
dec
jmp
sub
push
push
inc
sbb
adc
inc
add
pop
clc
jo
add
jne
jmp
add
addr16
inc
mov
sub
loop
out
jmp
mov
fwait
xor
xor
mov
shlb
adc
cmp
or
lret
loop
cmp
js
stos
dec
add
xor
jecxz
push
into
lahf
enter
cli
sub
inc
nop
movsb
xchg
mov
pop
rcll
jmp
mov
mov
divb
aas
iret
add
inc
jmp
pop
sub
pop
and
push
and
cmp
fisubs
inc
push
jge
or
and
jmp
sub
in
insl
fs
or
fiaddl
pusha
push
or
lahf
lods
sti
mov
push
jns
add
sbbl
or
add
lahf
xor
idiv
test
adc
roll
and
mov
mov
pop
add
xchg
and
jp
jbe
and
testb
lahf
push
mov
or
popa
sbb
js
mov
adc
in
push
jle
dec
ret
sbb
rcrb
pop
adc
or
xor
pop
popl
xorl
js
insb
cmp
popa
xchg
movq
imul
pop
mov
or
sub
dec
mov
repz
lea
inc
sbb
xchg
xchg
add
and
mov
pop
or
and
xchg
mov
dec
sahf
xor
pop
mov
cli
loop
and
cmp
sbb
pop
loope
jge
jne
loope
push
inc
push
int3
fs
push
xlat
add
jmp
shl
jl
mov
cs
fsubr
aaa
insb
jg
and
popf
adc
pop
or
je
fisubl
subl
test
dec
inc
repz
sub
mov
jmp
pop
ja
xor
inc
movsl
fisubl
adc
mov
mov
cmp
jnp
push
lds
xlat
fsubrl
jmp
das
pop
xchg
iret
pusha
aas
cltd
je
shll
sub
push
or
fwait
adc
fistpl
push
adc
xor
lahf
cmpsb
pop
cwtl
and
pop
jle
popa
fmulp
sub
lret
add
xchg
jns
daa
pop
enter
xchg
inc
sbb
jmp
lods
pop
jo
jp
fiaddl
das
xor
dec
icebp
add
stc
mov
push
enter
cmp
push
sti
adc
pop
js
mov
sti
adc
pop
and
pop
mov
push
push
cld
mov
outsl
les
adc
pop
js
imul
push
pop
mov
mov
push
dec
repz
cmp
int3
int
pop
pop
das
and
push
sbb
stc
ja
or
add
cmp
cmp
push
adc
lods
sti
add
push
ljmp
icebp
cltd
loope
loope
pop
adcl
in
dec
push
outsb
fiadds
mov
cmp
mov
test
or
js
sub
daa
or
sbbl
in
lea
call
mov
add
notb
sarl
inc
jmp
cmp
jle
and
sbb
add
mov
test
xchg
dec
pop
outsb
cmp
ljmp
cld
pop
cmpsl
pushf
xchg
loopne
jle
add
dec
adc
or
jmp
or
push
jo
mov
ficoms
call
iret
gs
int3
cld
cld
mov
cs
push
lds
aas
popf
dec
and
dec
scas
sbbb
inc
add
sub
imul
xor
push
dec
pusha
clc
enter
push
jg
jo
pxor
ret
ret
push
cs
add
jmp
lahf
push
lahf
lds
jmp
rcr
pop
xchg
in
mov
test
mov
daa
minps
or
mov
mov
pop
adc
mov
loop
andb
pop
fcoms
scas
pusha
pop
push
adc
jmp
dec
or
shr
es
nop
cli
movsb
pop
cmp
fdivs
into
out
push
mov
pop
cmc
mov
shlb
cmp
jmp
or
data16
or
or
jae
sub
cmpsb
adc
icebp
jl
add
adc
or
jb
xor
fmuls
xchg
or
mov
outsb
cwtl
xchg
add
imul
ljmp
xchg
sbb
pop
lea
testl
push
adc
or
outsl
xor
sub
and
in
adc
xchg
insl
std
test
mov
stos
sub
sub
push
mov
jbe
add
cmp
cmpb
and
mov
push
cmp
and
or
mov
sub
es
lahf
xchg
push
or
popa
mov
cmc
or
push
sbb
or
test
inc
inc
push
fs
cwtl
jmp
jb
pop
loopne
aaa
pop
add
ret
inc
jne
shl
imull
stc
cmp
pop
jecxz
jmp
mov
int
loopne
push
es
cmp
push
mov
jle
rorb
cmp
push
jns
out
js
xchg
icebp
jg
or
jl
lock
dec
mov
inc
popl
jmp
ficoms
test
test
pop
and
rolb
push
adc
cmp
js
adc
push
rcll
sahf
mov
add
jmp
fldcw
sub
jns,pt
popa
jmp
enter
xchg
out
cmp
jp
ds
dec
inc
mov
fs
mov
mov
mov
adc
xchg
stos
and
nop
cmp
jb
mov
pop
or
cmp
and
pop
xchg
or
cmp
nop
push
testb
adc
data16
cmpsl
orb
jmp
xchg
mov
mov
lret
add
sbb
sti
cs
ret
mov
lcall
xchg
inc
sbb
jp
insb
ret
add
int
cmc
fcmovnbe
fidivs
in
sbb
loop
adc
daa
xchg
xchg
pop
inc
sub
push
mov
cmpsb
or
outsl
cmp
sub
fldl
jmp
push
jne
aad
cmp
sarb
sub
test
fbld
mov
push
cmp
jnp
lds
jno
cmpl
jmp
or
adcl
push
andb
icebp
aaa
push
aad
test
cld
aam
push
lods
sbb
jle
pop
ljmp
sub
pop
pop
mov
xchg
mov
lods
cmp
mov
lock
ret
and
add
sbb
popf
dec
mov
shl
add
call
popl
pop
shl
push
mov
stc
inc
in
jmp
inc
cld
push
dec
adc
inc
pop
aam
push
je
sbb
or
rorl
test
imul
inc
add
add
add
into
adc
sbb
ret
xchg
mov
mov
rcrb
popf
jmp
pop
push
push
fimuls
insl
enter
mov
add
jg
lods
fsubrs
cmp
inc
sbb
mov
sub
and
or
or
pop
xchg
ds
dec
pop
jne
outsb
add
cmpsb
ja
push
stos
inc
imul
daa
pop
and
or
imulb
or
fiaddl
sub
es
cmpsb
dec
in
mov
inc
pop
mov
mov
xchg
add
je
daa
pop
adcb
or
lds
adc
insb
repnz
or
in
out
stc
cmp
movsb
add
clc
and
add
xor
push
in
leave
add
jo
inc
pop
jae
push
adc
push
loope
sub
rorl
and
pop
pop
mov
imul
dec
in
sub
add
leave
je
decb
and
inc
stc
push
xor
cmp
adc
jg
ret
arpl
dec
push
adc
pop
inc
sub
cli
push
repnz
sbb
push
push
loope
xor
mov
hlt
mov
push
cmp
inc
pop
xchg
jg
and
dec
cltd
nop
jp
sub
mov
add
out
xor
leave
add
and
in
adc
dec
or
scas
add
adc
leave
arpl
mov
xor
add
pop
pop
push
mul
add
mov
add
jmp
jmp
xchg
imul
lcall
cwtl
ret
xchg
mov
xor
mov
test
out
mov
xchg
add
out
jmp
push
popf
xchg
sbb
mov
cld
cmpsb
jb
scas
cmp
ret
pop
xor
iret
mov
sbb
leave
adc
push
pop
mov
loopne
cltd
and
call
pop
sbb
into
nop
sbb
inc
or
or
or
xor
aaa
adc
mov
les
out
dec
xorl
add
and
popf
xchg
jo
cmp
pop
lret
adc
jo
jmp
jo
pusha
ja
ss
or
and
roll
not
inc
mov
pop
add
or
dec
clc
idivb
add
call
cld
xor
pop
sbb
loope
xor
cld
hlt
ja,pt
sub
cs
jb
push
push
push
daa
inc
push
jno
xchg
pop
fsts
mov
pusha
pop
mov
ja
cmpb
xor
ss
mov
movsb
cwtl
orl
or
inc
and
stos
mov
push
outsb
sarb
add
test
jno
mov
add
xor
xchg
pop
xchg
pop
shrb
mov
in
sub
mov
testb
sub
dec
je
pop
mov
xchg
xor
add
cmp
mov
dec
push
cmp
inc
dec
arpl
push
or
std
dec
jns
scas
rol
mov
mov
xchg
leave
or
mov
cmpb
in
push
pop
ljmp
incl
int
or
repnz
fistpl
orb
iret
mov
mov
lea
outsl
loop
mov
cmp
shl
in
pop
add
cmpsb
in
and
push
cmp
mov
sub
push
lret
mov
push
in
and
repz
or
das
pop
rorl
jp
insl
cmp
aad
fildl
cwtl
hlt
cmc
sub
push
add
mov
pop
sub
ret
xchg
js
pop
orb
test
shlb
out
mov
push
add
xchg
pop
inc
jmp
int3
lock
mov
neg
add
ret
jge
out
xor
mov
ja
repz
xchg
dec
pop
add
inc
push
in
add
sbb
inc
pusha
inc
adc
call
dec
add
add
cli
pushf
out
inc
sbb
loope
nop
in
and
mov
int3
xor
cmpsl
negl
cwtl
ja
pop
pushf
jmp
adc
xor
adc
pusha
jl
mov
jb
orb
or
jl
int
aad
ja
adc
mov
inc
ret
jb
and
push
jb
xchg
push
push
mov
lret
push
pop
inc
jecxz
or
or
into
mov
push
sbb
and
nop
push
jmp
lods
pop
adc
cmp
push
cmp
outsl
push
stos
cmp
roll
dec
xor
outsb
mov
xor
mul
stos
into
jge
dec
js
or
filds
jne
xor
and
ret
and
sub
adc
or
jb
add
outsl
adc
stc
jmp
loopne
fs
and
aam
push
add
sub
jns
push
mov
add
stos
mov
ret
sub
bnd
push
and
adc
or
or
xlat
mov
neg
roll
jne
outsb
mov
xchg
fists
stos
call
cs
jne
dec
jp
sbb
sbb
push
add
jmp
dec
push
rcl
push
jmp
stos
jle
daa
in
sub
lods
rorb
cltd
das
sub
push
pushf
mov
pop
push
addr16
mov
mov
dec
pop
cltd
movsb
mov
imul
stos
and
xor
repz
pop
mov
sbb
clc
mov
xor
roll
cmp
aaa
pop
and
les
and
jmp
shl
rdmsr
add
mov
pushf
sbb
xor
mov
dec
dec
loope
jne
lock
cmpl
pop
or
xor
cmp
and
add
bound
roll
xor
icebp
sub
rorl
pop
cmp
movsl
add
jne
sbb
mov
or
loop
clc
in
or
dec
sub
ret
sub
sub
mov
sub
outsb
cmpb
jmp
adc
pop
inc
or
add
das
push
std
leave
mov
inc
in
sbb
xor
sub
and
or
scas
data16
push
aas
lds
cmp
pop
popa
pop
jge
adc
mov
pop
jns
xor
adc
or
add
outsl
imull
pop
popf
in
test
dec
push
dec
ds
mov
and
adc
dec
lods
mov
jmp
mov
xor
push
ret
pusha
jmp
adc
jmp
pop
push
adcb
cld
xchg
daa
aam
push
cmc
push
cs
or
outsl
pop
jmp
adc
mov
push
leave
inc
and
or
mov
add
iret
xchg
xor
mov
xlat
jmp
push
jbe
push
push
ljmp
sub
mov
enter
pusha
dec
and
pop
and
or
out
ret
push
adc
jno
repz
dec
ja
or
or
adc
es
shr
or
push
pop
and
cmp
movsl
prefetch
or
shr
cmpb
adc
aas
or
sbb
and
fstpl
orl
movsl
clc
not
cld
push
cld
mov
xor
pop
pop
lods
ret
inc
cli
push
adcl
jge
or
stc
pop
fwait
adc
cmp
inc
loopne
mov
in
jae,pt
xchg
sti
and
rorb
sub
nop
fdivs
loope
add
insl
imul
scas
popl
xchg
repnz
sahf
pop
enter
pop
inc
cli
xchg
icebp
inc
das
pop
fs
pop
sub
ljmp
ds
mov
cmp
push
test
mov
leave
das
mov
shl
into
popa
jae
xchg
jle
or
pushf
leave
adc
xor
shr
pop
mov
mov
jl
or
stc
push
testl
stos
adc
stos
push
jmp
cmpsl
sub
add
push
repz
jbe
jl
lret
pop
shrl
es
inc
scas
adc
rolb
mov
or
and
cmpsb
clc
in
outsb
inc
sbb
pop
adc
lods
or
push
mov
cmp
dec
fs
jmp
dec
sub
cmp
xor
add
or
adc
inc
adc
jl
or
mov
cmpsb
inc
xchg
jl
and
sbbb
lock
adcb
out
sub
aam
rol
inc
rol
inc
adc
leave
pop
rolb
jno
subb
xor
or
stos
sbbb
inc
adc
sub
in
xchg
jns
lock
sub
cmc
xorl
ss
out
lock
je
jmp
out
int
imul
push
mov
push
jmp
imul
push
jle
iret
mov
inc
sahf
ja
push
pmullw
mov
arpl
out
cltd
testl
test
imull
mov
cmc
pop
mov
imul
dec
cs
sub
xor
add
imul
add
push
scas
dec
int3
xor
dec
cwtl
or
mov
cmp
dec
outsl
mov
jbe
arpl
xlat
clc
filds
jo
cmc
push
xor
cmp
adc
cmp
pop
cs
jg
sti
call
pop
bnd
mov
cmpb
daa
jp
inc
push
inc
jo
and
sti
out
imul
sub
mov
shrb
dec
sbb
mov
pop
lods
cmc
pusha
adc
jmp
stos
inc
enter
jp
jne
dec
rcrl
setb
rcll
sub
sub
inc
xchg
aam
push
and
icebp
sbbb
mov
into
jae
fbstp
sbb
dec
jo
cmp
jecxz
xchg
pop
mov
jo
sub
jp
pop
or
add
xchg
pop
xchg
dec
fadds
loop
add
push
sub
or
inc
fdiv
insl
push
push
das
xor
mov
cmp
pop
nop
lods
push
popf
out
push
sbb
sub
mov
pop
stc
sbb
mov
in
mov
je
iret
push
and
inc
jp
xorb
jno
inc
sbb
push
sub
dec
inc
sbb
mov
dec
pop
repnz
or
or
jmp
push
subl
mov
pusha
push
rcrb
dec
test
mov
push
aad
add
jl
es
inc
mov
sbb
xchg
xor
dec
push
add
push
ror
fs
ljmp
stc
dec
lret
jl
xchg
and
push
pop
dec
add
sub
or
adc
xor
sub
xor
ret
inc
sti
push
or
out
jne
and
push
push
sahf
dec
pop
les
mov
push
shrb
mov
xchg
pop
sub
push
jmp
jp
imul
cmpb
lcall
add
cli
pop
cmpb
inc
dec
cld
push
add
mov
jge
pop
xor
mov
jns
cld
stos
or
das
js
lock
adc
test
dec
sub
push
ds
push
inc
leave
test
repnz
adc
in
mov
mov
fbld
inc
or
push
pop
dec
and
daa
shll
and
sbb
in
addl
xor
pop
mov
nop
outsl
or
and
or
cmp
cmp
or
cmp
pop
pop
popf
aam
sub
sarl
iret
push
lods
sbb
add
testb
pop
scas
out
aam
rorl
sub
sub
cmp
pop
push
and
add
sbb
sbb
xor
dec
jmp
cwtl
fimull
ss
adc
cwtl
push
pop
cmp
jecxz
push
es
and
pop
xor
inc
push
cs
and
sub
push
push
fs
cltd
cmp
and
push
dec
cmp
sti
xchg
adc
mov
xor
xchg
rolb
or
push
popf
shrl
jmp
pop
neg
push
inc
push
xor
pop
imul
mov
sub
in
pop
sahf
movsl
mov
fucomi
aad
add
mov
shll
push
jle
into
aas
sub
hlt
add
loop
sbb
or
sbb
adc
adc
repz
add
xchg
roll
or
addr16
sbb
das
sub
jmp
lds
fldl
or
or
jle
loope
mov
andl
inc
ds
fiaddl
stc
cmp
inc
fnstsw
sub
xor
nop
jne
das
sbb
insb
or
pop
jge
dec
add
outsb
stc
inc
hlt
aam
mov
dec
push
and
add
pushw
in
ds
daa
jbe
in
outsl
mov
jns
cld
jmp
mov
push
push
stos
push
pop
add
push
test
and
sahf
and
push
jle
cmpsl
xchg
fcmove
daa
mov
sub
sub
outsl
and
fisubrl
mov
and
ret
mov
xor
imul
sub
int
xchg
sub
fldenv
cwtl
add
inc
addl
ret
pop
mov
jmp
gs
or
mov
cs
add
in
in
jmp
sub
or
aam
out
cltd
ret
cmc
ljmp
lods
scas
popa
pop
mov
add
pop
cwtl
xchg
inc
cmpsl
pop
aas
and
mov
rcrb
dec
push
cltd
sbb
adc
pop
ja
pop
ret
rorb
or
push
pop
shlb
fisubl
mov
push
inc
jge
cli
push
jecxz
sub
adc
jmp
sti
push
inc
push
pop
jbe
push
add
dec
notb
mov
sbbl
repz
je
icebp
fidivl
ret
push
xchg
pop
add
andl
xchg
sbb
push
and
ljmp
adc
mov
jp
dec
pop
mov
imul
xor
mov
add
shlb
add
jns
lret
sub
mov
lock
mov
cwtl
pop
imul
aas
xor
ret
mov
pop
pop
pop
add
add
enter
push
mov
out
in
sbb
popf
ret
lret
lods
in
dec
cld
pop
popa
jmp
pop
lret
sbb
cmp
dec
adc
xor
jmp
subl
or
cmp
rsm
or
daa
jo
cmc
inc
imul
sbb
inc
add
out
pop
mov
icebp
xchg
mov
jno
sbb
and
push
ds
add
mov
sub
sub
outsl
cltd
fs
mov
jmp
arpl
dec
mov
jnp
cmp
into
jp
sbb
fs
dec
push
in
aad
scas
sahf
add
xor
adc
movsl
and
jmp
push
xlat
push
or
imul
mov
mov
and
popa
in
lock
repnz
pop
popf
xchg
mov
jmp
mov
sahf
imul
fstpl
arpl
push
cmpsb
loop
int3
cs
dec
fists
out
inc
jmp
fisttpl
cmpsl
pop
ret
pop
aas
pop
scas
cmp
ret
ror
add
fsubrs
dec
xor
pop
xor
mov
xchg
aam
jmp
xchg
les
decb
ficoms
in
out
or
sbb
xchg
jmp
xchg
cld
sbb
sub
and
dec
add
and
jns
lods
xor
push
jno
add
jge
lcall
mov
xor
jmp
push
out
in
rol
mov
or
cmpsb
cmc
add
test
and
lods
mov
daa
aad
lea
and
pushf
incl
sbb
mov
das
and
xor
xor
adc
push
xor
mov
fwait
dec
outsl
shl
push
pop
dec
fs
pop
lret
inc
fxch
cmpsl
subb
dec
mov
or
out
gs
jg
xchg
fs
stos
mov
add
int3
not
and
and
popa
xchg
pop
lret
dec
jne
and
rolb
or
sbb
sahf
aas
int
fsub
mov
inc
xchg
pop
push
xorb
out
pop
lock
pop
sub
mov
mov
out
push
jnp
mov
and
dec
push
mov
pop
leave
adc
repnz
add
jne
push
mov
imul
inc
cmp
shl
xor
pop
add
add
add
clc
push
jmp
jecxz
add
scas
and
add
mov
add
jp
mov
mov
rclb
repz
scas
fdivs
and
adc
and
dec
in
mov
pop
and
icebp
ret
mov
dec
xor
xor
cmp
xor
pop
jp
cs
xor
inc
mov
movsl
dec
insl
add
push
cmp
mov
iret
pop
inc
push
jmp
pop
add
inc
pop
lock
pusha
jb
cmp
imul
iret
adc
pop
jmp
sbb
sub
hlt
sti
adc
sti
inc
scas
mov
adc
pop
fs
push
sti
xchg
sub
sbb
add
dec
sti
cmp
sub
mov
movsbl
push
and
mov
bound
xchg
cmc
sbb
sbb
dec
or
psubsw
mov
mov
call
inc
mov
pop
mov
add
pop
fnstenv
inc
push
jbe
sti
rorl
mov
pop
or
data16
lods
and
and
add
and
test
insb
dec
lods
sbb
add
mov
push
loope
out
dec
decb
xchg
xor
pop
scas
push
in
imul
addb
inc
pop
clc
pop
mov
adc
push
enter
sbb
mov
stos
xchg
sbb
ds
pop
out
push
or
test
enter
sub
pop
sbb
dec
mov
fwait
aam
ret
pop
add
jnp
pop
push
jp
cmp
dec
dec
repz
test
aaa
iret
mov
xchg
fadd
and
add
and
dec
and
or
sub
mov
dec
push
iret
outsl
push
lcall
dec
pop
cmc
or
mov
rcr
aad
call
lcall
lock
scas
dec
sarb
pop
in
xor
dec
jo
es
je
lods
dec
jmp
fcom
filds
pop
dec
add
mov
jmp
push
and
and
push
push
call
data16
and
add
nop
lea
mov
xor
es
pop
inc
scas
fnstcw
mov
push
adc
dec
fistpll
daa
xorb
xor
xchg
lds
cld
scas
push
push
jmp
xor
and
shrb
jmp
in
and
cli
jge
pusha
jmp
dec
pushf
repnz
dec
roll
cmp
rcrl
pop
cli
or
frstor
push
add
cmp
cmp
repz
pop
pop
sub
or
or
pop
nop
mov
mov
push
sbb
push
shll
dec
rcl
out
dec
cmp
stc
imul
sub
inc
or
nop
jg
inc
pop
fsubrs
mov
add
dec
sbb
inc
adc
xchg
add
sub
or
add
push
cmp
bound
shr
sub
inc
repz
sbb
imul
or
dec
sub
pop
aam
rolb
imul
cmp
pop
shl
aaa
fcoml
ret
test
mov
fbld
jmp
aam
cmp
mov
sbb
cmpsb
pop
xchg
scas
xor
xor
and
xor
popa
push
add
andb
xchg
les
xchg
ljmp
push
inc
push
mov
fldl2t
jo
icebp
jb
mov
aas
inc
push
cmc
sub
iret
jns
sarl
addb
jnp
icebp
rol
js
xor
mov
mov
fldl
add
mov
shr
push
pop
stc
dec
jg
dec
add
pop
inc
outsb
aas
insl
cmp
pop
push
leave
inc
jno
mov
loope
sub
shlb
pop
clc
add
outsb
push
sub
pushf
hlt
add
roll
lret
jl
and
push
mov
lods
fs
adc
add
push
pusha
or
and
mov
xor
repnz
sti
fsubp
pop
mov
jge
and
inc
dec
xor
mov
lods
mov
cld
jl
lds
or
inc
bound
inc
or
mov
inc
sbb
push
sahf
and
aad
arpl
adc
add
sub
shll
add
add
stos
adc
mov
mov
popa
cs
cltd
jne
inc
dec
jl
arpl
rol
sbb
popf
add
sub
push
negb
xchg
xchg
data16
adc
xor
dec
clc
hlt
pop
ret
mov
mov
and
push
dec
lea
mov
sbbl
repz
or
xor
add
shlb
mov
jo
pop
pop
or
push
push
daa
adc
mov
sbbb
add
cmp
cwtl
cmc
mov
mov
pusha
mov
cmpsb
insl
lahf
add
lds
mov
outsl
clc
in
push
mov
fisttpll
icebp
jle
int3
mov
add
jmp
sub
and
nop
or
jae
sub
add
ret
or
outsl
push
ljmp
ds
out
add
pop
lret
adc
aad
addr16
bound
testb
test
jmp
xor
stos
ror
adc
dec
imul
sbb
sbb
and
cmp
mov
xchg
gs
pushf
inc
das
out
push
ret
and
rorb
mov
gs
sbb
sbb
jecxz
add
add
jnp
dec
jbe
jmp
and
pusha
dec
jbe
adc
xor
das
bound
lods
pop
icebp
imul
push
sti
add
cmp
add
jmp
adc
add
cwtl
mov
inc
cli
mov
push
imul
rcll
mov
inc
pop
pop
pop
sbb
cld
test
inc
clc
iret
push
xchg
dec
pop
dec
rol
cmp
lret
fisubl
inc
mov
nop
mov
or
jmp
adc
push
inc
dec
jae
js
rcr
mov
jbe
lahf
sbb
ret
mov
mov
scas
sub
push
inc
pop
xor
push
pop
pusha
adc
orb
sub
push
push
adcl
xor
and
lret
pop
jg
xchg
andb
xor
in
ret
out
das
xor
push
lds
dec
mov
jl
jae
fmul
adc
cld
or
in
push
cld
in
ljmp
mov
popw
push
mov
outsl
enter
xlat
sub
pop
movsl
imul
inc
mov
mov
sub
inc
xor
cltd
and
xor
push
push
stos
add
sti
jmp
fnstcw
ds
addr16
push
in
lods
sub
fsubrs
sbb
out
mov
push
add
or
cwtl
sbb
or
arpl
pop
pop
xchg
inc
cmp
ret
xor
push
pushf
dec
add
inc
adc
scas
insl
icebp
pop
pusha
xchg
not
rorb
cld
int3
add
jb
mov
or
mull
mov
orb
jne
stos
or
jae
aam
jp
xor
mov
inc
cwtl
add
xlat
inc
jmp
shl
jg
test
popl
or
adc
fisubrl
and
sub
pop
mov
xchg
jns
jmp
xchg
loopne
mov
push
pop
adc
stos
jmp
mov
and
ret
out
add
testl
adc
call
cltd
into
filds
pop
xchg
aaa
inc
mov
push
jb
aam
mov
pop
inc
lahf
pop
test
arpl
lods
sub
add
or
cmp
dec
movsl
inc
repnz
negl
xor
in
cmpsb
fwait
add
jmp
jecxz
fists
lods
fldl
xchg
jp
pop
pop
mov
mov
mov
cmp
daa
call
or
dec
jno
ja
push
lret
ds
ret
bsf
add
enter
add
adc
arpl
out
sahf
insl
imul
or
mov
cmp
js
sub
cmp
push
sahf
test
pop
imul
filds
push
icebp
shr
and
pop
mov
add
xor
and
add
jmp
sbb
pop
or
push
add
cmc
jae
or
pop
pushf
mov
sbb
mov
fmuls
xor
icebp
sti
mov
dec
sti
stos
pop
loop
rcrb
icebp
push
pop
and
pop
sub
push
or
pop
andb
jge
lret
das
inc
clc
jp
cld
adc
push
fs
repz
scas
fs
in
rorb
repz
ljmp
nop
fstpt
addb
js
dec
pop
and
push
rclb
mov
sbb
lods
jp
jbe
sub
push
hlt
jb
dec
add
lret
pop
dec
push
das
notb
sbb
bound
daa
addr16
add
cwtl
std
and
fcoml
out
xor
jecxz
push
jmp
cmp
pop
lds
mull
clc
cli
push
rcrb
adc
xlat
or
xor
pop
mov
sub
add
mov
aaa
stos
mov
jecxz
es
mov
mov
in
mov
sti
sbb
xor
cltd
fimull
inc
idivl
repz
incl
les
fiadds
mov
xor
mov
fisttps
adc
jp
sbb
sub
addr16
or
dec
jmp
inc
fiaddl
aas
ffree
cmp
pop
or
cmp
xor
lret
add
lret
es
pushf
test
jne
adc
sbb
xchg
xchg
dec
hlt
xorl
mov
ret
hlt
jno
out
jnp
test
not
out
shrb
or
sub
push
mov
pop
add
jmp
add
push
jmp
mov
loop
add
xchg
sbb
sbb
dec
data16
mov
aad
fwait
ds
mov
push
mov
stc
imul
icebp
sahf
les
pop
out
xchg
jmp
pop
orb
dec
or
or
stos
mov
leave
inc
push
lahf
add
mov
adc
mov
rcll
rcrl
xor
or
mov
and
pop
js
jge
dec
sub
add
or
xor
jmp
mov
rclb
mov
pop
test
hlt
frstor
outsb
cmp
repz
pop
nop
inc
sub
mov
sub
cmpb
dec
in
test
test
insl
fsubl
cmc
out
pushf
jle
pop
inc
aas
xor
rolb
add
cmp
push
js
out
inc
jmp
mov
hlt
adc
jb
je
ds
pop
sub
test
lock
dec
lahf
mov
into
or
sub
add
or
push
cmpl
fcmovnu
lsl
lret
std
sbbl
jecxz
in
popa
shr
sub
in
clc
aaa
das
jmp
lret
cmpsl
and
xor
jmp
or
and
js
adc
pop
inc
jb
push
sub
clc
les
mov
out
sbb
dec
lock
jo
pop
cmp
xchg
out
adc
mov
mov
jne
std
fs
jmp
jp
adc
xchg
bound
sub
lods
jae
das
jecxz
adc
push
clc
cmc
or
mov
das
push
cmp
and
mov
out
bnd
cmpb
shl
dec
add
cltd
ret
add
jle
lods
sub
scas
mov
cmp
sarl
rcll
sarb
or
stos
xchg
aad
lea
sti
mov
and
push
push
lods
jno
push
incl
push
push
sub
add
jmp
out
not
dec
xchg
clc
adc
jmp
jg
or
mov
add
inc
jmp
mov
mov
cs
pop
jb
sub
lret
or
jmp
xor
and
cmpsl
sub
shl
jmp
inc
lock
fdivrs
adc
add
fmull
bound
icebp
ja
pushf
jmp
stos
jnp
jge
add
pop
xchg
cmp
or
mov
loopne
ds
out
fs
pop
push
out
add
adc
andb
pop
add
jb
jne
aas
pushf
push
loope
and
fiaddl
add
loop
sbb
or
dec
pop
jg
ret
xor
std
fisttpl
or
dec
jae
shrb
xchg
add
xor
ret
testl
out
push
push
dec
adc
stc
repnz
daa
jbe
adc
testb
or
sub
sti
xor
push
pop
popa
jmp
fistps
pop
lea
sub
push
shll
iret
push
sbb
xchg
jns
cmp
add
rclb
inc
jl
inc
pusha
dec
push
or
inc
fmull
push
inc
or
jmp
and
pusha
outsl
dec
fs
mov
shll
addr16
add
rclb
xchg
dec
jae
add
jge
xor
das
sub
or
bound
cmp
mov
or
jmp
mov
dec
sti
pop
or
cmpsb
loopne
loope
push
dec
arpl
sahf
xchg
mov
xor
and
xor
incb
sub
push
pop
adc
sbb
pop
fs
lea
lret
dec
sbb
in
ret
jmp
movsl
inc
bound
jl
testl
inc
pop
pop
xchg
adcb
adc
push
xor
jmp
pop
mov
mov
loop
jnp
pusha
mov
jmp
push
jbe
cs
daa
lods
ss
les
movl
add
mov
jnp
jge
cli
cmp
pusha
jmp
push
mov
adc
pop
mov
mov
sub
out
jae
or
push
and
add
add
ja
mov
mov
sub
rcrb
and
inc
cld
inc
ret
xor
stc
pop
test
mov
add
sub
xlat
xchg
imul
loopw
test
xor
scas
shlb
or
mov
das
icebp
xor
xchg
cmp
gs
es
ss
add
leave
jge
push
mov
dec
mov
rcll
test
add
orb
jle
jg
mov
or
adc
or
inc
sub
cmovge
sbb
incl
mov
imul
xor
jns
cmc
insl
cld
test
pop
fnstcw
aas
mov
dec
xchg
pop
jp
lock
insl
pop
call
mulb
outsl
int
sbb
push
dec
jns
bswap
ss
dec
lea
popa
imul
adc
mov
ds
jmp
iret
xor
lea
add
adc
pop
in
mov
fildll
stos
lret
mov
cmp
adc
popa
fadds
or
add
mov
jp
in
push
adc
cmpsb
inc
and
pop
mov
pusha
daa
out
sub
pop
pop
mov
mov
add
cs
jmp
andl
test
push
in
mov
adc
sbb
pop
xor
pop
push
scas
and
test
fsubr
dec
popa
icebp
push
push
aam
cs
jmp
mov
sub
or
jg
xchg
orb
inc
push
in
stos
popf
ljmp
xchg
fisttpl
lahf
sarl
jmp
mov
push
stos
pop
jmp
sub
dec
jecxz
sub
jle
shrb
std
js
lock
push
xor
and
stos
ss
pop
mov
mov
addr16
mov
pop
inc
in
push
xor
pop
sub
or
insl
in
push
push
icebp
sbb
les
cld
push
dec
jmp
sub
sahf
or
ds
ret
fstl
mov
mov
scas
jns
cmp
add
test
int
call
mov
cwtl
push
or
sbb
fidivl
out
loopne
jns
mov
dec
sub
jmp
jg
pop
jle
or
std
insl
adc
push
pop
jbe
mov
xchg
pop
xor
xchg
or
sub
fdivs
ret
or
pop
jmp
jne
push
loope
add
sub
iret
mov
add
pop
rcrl
ja
mov
xchg
add
in
and
cmp
push
adc
push
jo
sti
scas
pushf
rorl
scas
inc
pop
pop
mov
mov
add
out
int
inc
out
pop
adc
and
jg
das
xorl
mov
mov
inc
xor
arpl
sbb
jbe
hlt
inc
add
les
sub
mov
adc
leave
stos
push
icebp
cmp
lock
push
mov
shlb
pop
push
cwtl
jnp
mov
in
rcl
je
adc
mov
xor
add
add
lcall
addr16
mov
mov
and
add
or
add
jle
rcr
or
sbbb
lahf
add
dec
mov
mov
adc
jmp
nop
or
mov
cmp
xchg
sbb
push
insb
cmp
pop
imul
push
push
call
mov
xor
ljmp
sbb
jle
or
aad
inc
cmp
push
inc
adc
testl
aas
jmp
mov
cwtl
int3
dec
popa
xchg
dec
adc
andb
pop
or
mov
cmp
mov
mov
out
mov
dec
mov
les
mov
lock
addr16
and
inc
pushf
mov
jo
xchg
lock
kaddw
push
lods
dec
inc
cli
scas
mov
pop
ja
xchg
xchg
mov
cmpb
mov
popf
stos
pop
sub
cltd
mov
jle
pop
jmp
pop
dec
xchg
mov
orl
lcall
mov
push
add
call
jecxz
inc
andl
add
sub
xchg
aam
jo
pop
mov
fldenv
out
or
push
push
jbe
popa
insl
pushf
les
xor
sub
sub
jmp
mov
ds
daa
lods
and
loope
push
loop
fdiv
sub
pop
ja
pop
jns
dec
push
xor
pop
cmpsb
xor
jbe
and
add
imul
cli
inc
sub
jnp
xor
mov
rcrl
mov
xchg
sbbl
and
stos
cmp
dec
sub
ljmp
jmp
xchg
imul
sub
and
and
psubsw
arpl
mov
pop
data16
mov
not
fisubrs
push
dec
mov
xor
pop
xor
mov
pop
mov
mov
jle
jle
mov
sarl
xchg
rorb
jae
pop
call
mov
jbe
pop
sub
jae
dec
add
xor
in
or
adc
loope
mov
icebp
push
mov
ret
xor
out
test
outsl
scas
daa
cwtl
test
mov
push
push
nop
gs
or
ret
jg
fdivs
xchg
mov
pop
dec
cmpb
pop
aaa
dec
js
mov
sub
or
or
xchg
xchg
pusha
daa
jmp
or
cs
sbbb
negl
pop
pop
and
xchg
test
mov
in
inc
arpl
nop
jo
das
pop
loopne
hlt
add
push
sub
and
cmp
aad
aam
xchg
and
iret
add
je
repnz
mov
gs
cmpsb
scas
add
mov
xchg
roll
loop
adc
pop
sahf
je
cmc
jecxz
and
jne
add
sub
shll
xchg
rolb
pop
pop
enter
sarb
outsb
lahf
push
addr16
xchg
pop
inc
xor
stc
cmovns
std
faddl
add
mov
pop
jb
adc
dec
mov
jmp
std
cmp
mull
and
js
scas
dec
enter
xchg
inc
mov
and
pop
cmc
les
movsl
loop
shr
in
and
jnp
xor
imul
or
and
pop
notb
loop
dec
xor
cmp
nop
in
and
repnz
push
repz
sbb
xchg
inc
sar
xchg
faddl
lret
cs
xor
push
fldcw
and
das
ret
cmp
pop
divb
push
iret
adc
add
xchg
jp
add
lods
cmp
lea
push
push
pop
sahf
add
inc
push
jno
and
push
in
dec
push
loope
mov
pop
xor
inc
xchg
pop
cmp
sub
out
ror
adc
push
inc
sbb
jl
or
or
cli
ds
shl
push
push
inc
loope
jmp
popa
or
jne
and
xchg
add
pop
jle
lret
nop
adc
aaa
fstl
sbb
pop
dec
outsb
in
std
jmp
mov
or
and
add
or
stos
sbbl
in
xlat
push
cmp
pusha
dec
enter
and
or
mov
mov
negl
loop
xchg
cmp
lret
pop
jl
pop
push
push
inc
lret
iret
push
dec
inc
insb
daa
jmp
out
dec
in
add
dec
test
pop
add
push
mov
mov
sub
jle
pop
and
scas
and
out
rorl
xchg
mov
out
push
pop
scas
mov
aas
jae
pop
loopne
cmp
rclb
icebp
xchg
inc
xchg
ret
dec
jge
add
ds
inc
lock
in
call
aas
mov
es
or
push
push
push
jbe
ljmp
movsb
je
adc
push
dec
inc
imul
ds
or
mov
mov
out
cltd
xchg
pop
jmp
sub
sub
dec
push
mov
adc
leave
push
xlat
xchg
mov
jmp
in
push
add
dec
aam
pop
push
xor
int
sub
cmp
inc
shl
mov
das
test
pop
inc
mov
cmp
repnz
loopne
push
add
add
pop
push
xchg
test
sar
sbb
int
fisubs
and
xor
adc
push
pushf
mov
js
dec
loope
jg
lahf
enter
push
ljmp
sbb
dec
cmc
imul
bound
lds
xchg
add
jae
jns
fiadds
add
aaa
lret
pop
cmp
inc
je
and
sbb
inc
ret
sbb
jmp
shrl
aas
xor
int
sub
mov
inc
fsubl
fmuls
and
jo
mov
pop
lea
inc
dec
jmp
adc
fs
push
ds
inc
or
jnp
sbb
mov
jb
or
jmp
adc
stc
jg
jmp
loop
mov
xor
cmp
es
pop
arpl
cmpb
push
sbb
inc
jp
push
push
mov
pop
jo
dec
loop
pop
cmpsl
add
loope
leave
jbe
mov
adc
sbb
xor
push
pusha
push
inc
add
and
iret
pop
jae
push
push
jbe
pop
adc
cli
pop
and
add
shl
cmp
mov
push
loopne
xchg
outsl
pop
xchg
xchg
gs
jecxz
ss
push
or
gs
push
imul
and
inc
subl
xor
int3
call
ds
and
divb
inc
or
inc
sub
xchg
or
repnz
test
dec
pop
movsl
xchg
jle
shl
cmpsl
xor
mov
mov
out
sub
inc
ds
push
adc
mov
mov
dec
scas
clc
jae
mov
imull
fisubrs
jge
xchg
cmp
test
push
and
loopne
push
xchg
jp
pop
inc
add
clc
dec
lods
outsl
mov
je
add
cmp
add
rorb
dec
jmp
add
and
into
adc
or
jnp
fistps
cmp
add
cwtl
nop
inc
adc
push
push
das
add
adc
pop
mov
pop
cli
dec
mov
dec
add
repz
mov
dec
pop
push
leave
out
out
pop
mov
sub
imul
add
add
fstl
std
add
add
cmp
fs
mull
adc
inc
in
int
test
adc
pop
sub
pop
push
and
pop
pop
mov
mov
iret
dec
fbld
movsl
xor
test
imul
cli
inc
hlt
not
in
bound
cmp
and
and
stos
dec
inc
push
dec
out
pop
scas
ljmp
cmp
std
dec
cld
dec
bound
xchg
aad
or
pop
mov
xchg
adc
idivb
cs
sub
lcall
adc
dec
shll
xchg
daa
and
add
sub
fisttpll
push
dec
mov
cmpsl
jnp
inc
lret
jmp
pop
fsubrs
das
add
insl
rorb
adc
loop
pusha
xor
dec
dec
sbb
jp
add
xor
shr
add
xor
maxps
call
mov
or
scas
push
clc
pop
add
adc
inc
inc
jmp
out
pop
mov
rolb
dec
dec
sub
mov
jmp
cmpsl
mov
jmp
lret
insb
arpl
orb
lock
das
push
push
imul
mov
pop
sub
push
add
sbb
xor
nop
push
mov
lahf
dec
insl
movsb
das
pop
xchg
or
adc
add
les
aas
mov
push
dec
pop
loope
pusha
and
xor
sub
mov
jecxz
popa
pusha
push
ljmp
das
mov
mov
testl
rcr
or
jmp
pop
dec
push
inc
mov
dec
addb
cmc
shl
pop
sbb
testb
and
lods
push
mov
cs
xchg
mov
adc
jbe
in
int
pop
int
pusha
mov
sub
jle
enter
adc
dec
add
inc
jmp
mov
popf
add
pop
push
xchg
push
mov
xor
pop
pushf
pushf
cld
icebp
mov
pop
scas
or
cmp
movsb
add
or
icebp
cli
jo
xchg
cli
aaa
adc
popf
mov
les
stos
gs
jmp
dec
mov
or
xchg
icebp
pop
or
and
fisubrs
sub
xchg
fxch
and
vpunpckhdq
cmp
cs
gs
and
imul
sbb
cmp
push
pushw
push
scas
dec
mov
subl
pop
jl
lea
mull
and
xor
xchg
or
out
dec
add
cmpsl
adc
dec
add
pop
sub
jne
mov
into
test
jbe
add
sbb
cvtpi2ps
mov
push
lea
adc
jmp
aas
and
or
pop
cmp
or
sbb
sub
and
ret
pusha
cmpb
sub
sub
or
mov
push
mov
sbb
daa
rcrl
push
sub
in
addl
cmp
call
or
jbe
jl
and
mov
pop
push
mov
cmp
xchg
fs
xor
dec
sub
sub
dec
out
add
or
divl
roll
xchg
movsb
xchg
fs
mov
inc
cmp
ret
aad
ljmp
jmp
pop
subb
add
sub
jne
es
scas
js
lahf
push
aad
jmp
or
pop
dec
daa
andb
inc
scas
nopl
inc
cmpsl
rcrb
dec
pop
xor
insb
sub
mov
sarb
movsb
add
jae
ja
or
jmp
mov
test
push
bound
or
xor
add
mov
lret
rcrb
mov
jg
call
pop
push
pop
in
clc
mov
adc
dec
lcall
add
push
js
movsl
pop
std
jg
stc
divb
jp
adc
imul
fstpt
lcall
in
js
push
icebp
out
jge
mov
mov
je
mov
jnp
mov
sub
or
loopne
inc
aas
mov
cmp
jmp
cli
jne
mov
jge
xchg
xor
cmpsl
fiadds
outsb
je
pusha
outsl
inc
dec
je
push
cmp
xlat
sub
or
pop
popf
mov
movsb
pushf
jae
or
repz
cld
mov
ret
or
dec
call
or
mov
add
jle
idivl
xor
mov
add
bound
mov
dec
add
test
inc
mov
ss
and
cmp
cmpb
std
jo
xchg
shr
outsb
popf
out
jbe
pop
pop
lock
pop
jns
int
outsb
sub
adc
jb
add
mov
aad
add
cmc
mov
jae
enter
adc
xor
sub
xchg
fwait
xchg
or
loop
shll
jo
or
adc
dec
add
jmp
leave
repz
das
push
dec
or
stos
jecxz
out
cmp
cmp
loope
inc
or
int
push
pop
rclb
mov
je
sarb
sbb
das
jae
add
int3
adcb
xchg
add
jmp
incl
shll
daa
loopne
push
shrl
ficoml
dec
jb
xor
test
dec
pop
xor
movsb
push
popf
in
test
fs
add
repnz
daa
sbb
test
sbb
push
jmp
gs
or
and
popa
or
fnstenv
adc
mov
adc
mov
cmpb
push
lret
sub
mull
add
iret
add
lods
jmp
cmpsb
int
pop
sub
outsl
add
dec
inc
shlb
cli
or
cmpsl
pop
cltd
xlat
loop
add
push
pop
lods
test
inc
mov
stc
rcl
xchg
adc
cmpsl
or
push
popa
leave
stc
adc
sahf
outsl
cmpsb
mov
dec
add
add
jp
loope
fdivr
adc
mov
sub
inc
mov
sbb
imul
dec
sar
add
sbb
xchg
testl
jg
inc
in
add
lret
mov
add
jmp
and
push
sarb
ss
dec
adc
jmp
cld
and
cmp
pop
mov
leave
stc
cwtl
or
sub
and
inc
mov
mov
jg
movsb
ja
add
sub
aad
push
push
jno
mov
pop
dec
cli
dec
dec
mov
mov
add
xchg
jle
popf
into
jg
add
and
mov
roll
std
bound
inc
outsb
push
push
sub
lock
fsubs
aam
mov
sub
loope
and
xor
jp
add
rcll
popf
xorb
and
rcr
push
loopne
sarb
add
mov
dec
shr
mov
shlb
xchg
sub
shlb
dec
adc
or
or
mov
cs
test
mov
ds
cld
fwait
ret
imul
jb
adcl
pop
cs
sub
inc
addb
push
add
inc
test
inc
jmp
lcall
hlt
cmp
dec
mov
repnz
ja
loopne
cs
adc
pusha
push
add
dec
mov
jmp
or
mov
or
dec
add
ret
xor
jmp
fists
adc
in
mov
test
cmp
sar
nop
dec
stc
daa
repz
inc
lock
lds
jo
stc
xchg
or
idivl
fistpll
adc
mov
addr16
or
add
daa
lcall
adc
sahf
xor
add
pop
add
aas
ret
mov
sbb
cmc
inc
pop
xchg
repnz
inc
pop
fldcw
call
jl
cltd
jecxz
je
sub
sub
mov
push
repz
inc
push
insl
add
sub
cmp
bound
or
pushf
sahf
or
popa
enter
push
das
js
push
out
xor
sub
jmp
sub
xchg
cmp
xchg
pusha
sbb
dec
add
adc
cmp
inc
shl
push
insl
sbb
push
push
sbb
mov
dec
jae
test
push
dec
fsts
cmpsb
rorl
imul
fstl
cmpsb
mov
xor
mov
mov
std
add
mov
roll
sbb
popf
jmp
fs
loope
cmp
push
push
jmp
sub
ret
mov
mov
out
cmp
leave
in
xchg
arpl
and
jg
das
sub
inc
movsb
icebp
leave
xor
ficoms
add
dec
mov
sub
xchg
test
push
outsl
in
jg
lret
jp
insl
in
sub
jnp
popf
testb
cwtl
divl
inc
mov
or
push
jmp
sbb
je
add
sub
add
fisttpll
mov
js
push
or
mov
ljmp
leave
je
xlat
pop
pop
xor
cmp
jg
push
xor
imul
sub
les
out
add
sbb
push
outsl
xchg
sub
js
sbb
popl
fiadds
pop
mov
out
mov
daa
cmova
jo
or
or
xchg
addb
xchg
rcrb
popa
adc
movsb
lods
sub
outsl
push
mov
adc
cltd
mov
jne
mov
les
pop
sub
or
push
pusha
jne
sub
hlt
orb
inc
dec
xchg
hlt
ja
add
dec
add
or
pop
rcrb
arpl
enter
pop
je
lcall
shrb
dec
jo
push
sbbl
aas
pop
stc
push
std
inc
adc
rcll
xchg
sbb
cmp
ret
adc
cld
jmp
add
jbe
insl
add
and
mov
cli
imul
pop
and
push
or
jno
mov
data16
add
dec
and
or
xor
push
adc
mov
dec
xlat
mov
daa
jmp
jl
cwtl
push
jo
std
pop
dec
js
add
pop
ja
jmp
nop
inc
mov
pop
dec
in
popa
pop
xor
jae
adc
adcl
daa
shr
xor
xchg
stos
addl
dec
mov
stc
sub
das
in
fcom
stos
nop
dec
jmp
and
push
enter
lds
add
pop
das
inc
cs
call
add
push
ret
pop
daa
jns
dec
add
je
pop
shlb
enter
call
add
out
xchg
cmp
fucomip
outsb
adc
mov
in
loopne
cmp
adc
sub
lcall
pop
jmp
out
movsl
mov
push
jmp
nop
push
mov
push
mov
lods
push
sbb
xchg
dec
sbb
jmp
stos
popf
push
cmc
in
ss
mov
jl
cltd
cmp
pop
in
or
outsl
out
insb
xchg
and
xchg
mov
inc
xor
div
xor
ficompl
pop
add
jmp
loopne
scas
sbb
cmp
pop
mov
es
adc
mov
push
sub
cmpsb
or
icebp
inc
or
in
movsl
test
das
push
pop
xchg
lret
or
jg
pop
idivb
int
mov
xor
cmp
inc
lret
sub
add
les
pop
ljmp
aam
adc
xchg
xor
cmp
add
cld
push
mov
add
cmp
push
add
outsl
inc
pushl
add
sub
pusha
mov
notl
stos
into
and
jmp
sbb
add
pop
rclb
repz
pop
data16
or
repz
test
pop
add
mov
cmc
in
pop
inc
jns
pop
repnz
adc
xor
mov
stos
add
icebp
ja
sti
sahf
out
push
or
lods
push
in
clc
scas
mov
cwtl
or
cs
inc
jmp
cwtl
and
clc
push
sub
mov
loop
mov
or
add
loop
mov
xchg
adc
sbb
mov
sbb
arpl
ljmp
add
filds
jl
dec
push
adc
adc
mov
sbb
or
mov
imul
mov
pop
imulb
imul
mov
adc
xchg
or
sbb
xor
dec
adc
push
or
adc
mov
adc
or
imul
stc
xor
clc
cmp
add
jb
inc
and
push
xchg
fdivl
scas
xor
stc
push
lahf
dec
cmp
sbb
and
lret
add
nop
aaa
adc
idivl
jmp
jne
mov
das
roll
cmp
adc
xor
pop
push
shr
fdiv
jmp
lret
push
pop
out
shrl
push
repz
mov
enter
daa
addr16
jo
daa
lock
push
rcll
lea
sub
les
addr16
sub
in
loopne
xchg
mov
in
jb
and
adc
sahf
and
fidivrs
mov
inc
push
add
imul
std
dec
mov
add
jg
repz
push
out
pop
cmc
mov
imul
or
rolb
shrl
cmp
jmp
cmp
stos
es
jmp
popa
lods
and
mov
addr16
ss
int3
push
mov
or
out
xor
cld
clc
push
fidivs
jmp
adc
adc
xchg
jge
push
sub
xor
or
dec
lret
fidivl
mov
add
pop
arpl
stos
popf
mov
or
jmp
std
mov
out
adc
jge
imul
ret
jne
ret
lock
lahf
call
scas
or
in
add
int
push
mov
pop
neg
sahf
rorl
adc
cmc
mov
scas
cmp
mov
roll
mov
nop
cmp
lods
daa
sbb
inc
lods
or
pop
pop
sub
jo
mov
inc
sub
mov
pop
roll
sti
pop
mov
les
push
and
push
js,pt
lahf
cmc
pusha
jle
jp
lods
scas
inc
mov
sub
stos
orb
adc
testl
sub
in
mov
out
and
jmp
mov
mov
or
sbb
loopne
push
js
es
hlt
cmp
mov
jnp
negb
adc
addb
arpl
add
jns
xor
and
mov
push
mov
mov
aaa
pusha
sub
sub
outsb
out
adc
add
jecxz
shrb
cmp
push
mov
cmpb
push
stos
inc
mov
fiadds
mov
or
outsl
cld
popa
push
jecxz
mov
sub
sbb
roll
stos
add
adc
and
push
repz
sahf
leave
jmp
mov
dec
push
pop
jle
push
mov
and
mov
mov
les
adc
mov
ds
mov
lret
sub
cli
add
inc
lds
push
and
int3
sub
inc
and
sti
mov
or
lds
aas
call
stc
adc
mov
shl
jg
push
fisttps
push
pop
cmpb
cmpsl
push
push
jns
jmp
rorl
in
adc
pop
push
ret
adc
add
jecxz
pusha
enter
ja
xchg
loopne
jo
daa
add
cltd
mov
and
aam
rcrl
sub
aaa
push
cmp
test
xlat
sti
icebp
add
inc
cli
xor
popf
bound
cmp
jg
js
fcoml
leave
jge
jge
xor
or
mov
rcll
loopne
mul
xor
push
cmp
cli
adc
mov
je
dec
inc
jmp
enter
hlt
xchg
jmp
sbb
push
push
pop
es
add
or
pop
xor
push
push
mov
cmp
int3
in
inc
dec
jp
or
jb
and
insb
push
dec
fildl
ret
or
pop
fs
jp
daa
add
xchg
fincstp
dec
roll
or
add
xor
adc
mov
shl
rcll
fdivrs
pop
ficomps
aam
adc
ffree
mov
dec
arpl
jns
mov
ljmp
imul
pop
shlb
dec
cld
adc
daa
push
mov
pop
inc
repz
mov
das
sub
push
decb
adc
pop
dec
xor
out
add
and
hlt
sub
add
adc
and
dec
sbb
arpl
sbb
iret
jmp
in
mov
stos
cmp
xor
push
into
jmp
xchg
ror
lods
jnp
clc
mov
cs
jecxz
rcl
ss
dec
adc
xchg
jo
jmp
or
inc
cwtl
push
mov
js
mov
push
or
mov
in
movsl
push
jb
mov
dec
jo
jns
dec
jb
sbb
dec
cmp
or
neg
or
or
xor
pop
popf
js
mov
stos
adc
xchg
call
je
mov
pop
or
jmp
mov
and
rcr
std
push
add
sub
imul
sub
mov
fldt
loop
jbe
adcb
push
ret
add
aas
jo
rcl
xchg
add
sub
jnp
ss
pushf
xor
ss
push
inc
xchg
fcomps
or
xor
push
sub
mov
adc
xchg
jns
pushl
mov
or
pop
jmp
addl
xchg
pop
arpl
aam
push
sbb
or
adc
pop
adc
sarl
aas
mov
add
lea
xor
pusha
int3
addr16
xor
inc
loope
jecxz
xchg
jbe
dec
pop
not
std
add
dec
mov
add
in
sar
jb
mov
add
loope
pop
stc
mov
dec
jle
out
mov
mov
ret
xchg
inc
xchg
cmp
adc
xchg
jle
mov
je
add
call
movsl
cmp
jge
fdivs
adc
push
pop
add
cmp
or
insb
mov
add
sbb
pop
push
call
cmp
loop
jg
mov
pop
mov
add
push
xor
jnp
push
and
in
inc
pop
dec
and
or
insb
addb
sbb
jmp
fcomps
fiadds
xor
stc
push
adc
or
sub
mov
insb
or
loopne
jmp
lock
or
cmp
push
ljmp
aad
push
mov
pop
call
repz
fidivs
and
jmp
mov
dec
xor
negb
mov
out
sbb
sbb
out
xor
mov
jae
pop
jmp
push
filds
sbb
iret
cli
mov
ja
jge
xchg
ret
data16
je
pop
push
push
dec
push
xor
fs
jb
fs
hlt
and
nop
pop
int
in
pop
jle
mov
bound
cmp
mov
dec
fstpl
push
push
inc
es
sub
push
push
lea
cmovne
push
inc
bnd
inc
push
insb
pop
xor
cmp
insl
push
mov
les
ret
push
sub
mov
dec
or
xor
in
jp
cmp
aam
add
pop
or
cmp
roll
inc
cltd
sbb
adc
out
add
mov
js
ljmp
or
je
push
pop
inc
ret
push
sbb
inc
push
push
cmp
pop
cld
cmp
ds
dec
es
mov
mov
sbb
pop
jo
inc
sub
push
mov
pop
push
shr
add
imul
mov
mov
fdivp
mov
test
jnp
adc
cmp
ds
or
dec
push
or
push
arpl
call
scas
add
aas
ss
inc
inc
mov
andl
fmull
xor
int
and
push
pop
fcoms
lods
ss
test
dec
jecxz
movsl
add
popf
cmp
cltd
lret
daa
adc
xchg
or
jmp
jl
pop
or
cld
dec
pop
push
jbe
pusha
cwtl
mov
jnp
mov
or
call
push
aas
mov
cmp
inc
push
inc
pop
add
push
mov
scas
rcrb
jb
push
add
movsl
dec
push
jmp
mov
orb
sub
repz
jmp
mov
pop
mov
dec
push
out
xor
scas
outsb
lock
cmp
aam
stc
ret
jmp
jecxz
xchg
sti
pop
cs
adc
mov
lds
cs
imul
sarl
je
push
and
pushf
pop
leave
aam
js
movsb
lahf
loope
pop
outsl
sub
lock
pop
push
out
push
add
dec
jecxz
jp
add
sub
sub
arpl
push
or
sub
sbb
outsl
or
add
jmp
mov
lea
mov
or
push
shrb
js
add
cmovs
sub
aad
outsl
push
inc
pushf
cs
cmc
scas
int
and
fcomps
cs
add
pusha
xor
call
sbb
jge
fwait
xor
push
js
rclw
mov
call
xor
mov
in
shll
gs
stc
add
and
shl
cmp
jmp
pop
fmull
mov
fucomi
jmp
dec
pop
push
ja
jg
or
and
mov
stc
dec
jnp
mov
roll
push
mov
add
push
scas
push
inc
repz
movsb
and
xor
inc
or
sub
xchg
not
or
sti
fcompl
mov
out
add
or
cwtl
mov
jbe
sbb
xchg
mov
cmpsl
movsb
sbb
mov
dec
cltd
sub
shl
add
dec
dec
push
push
loopne,pt
pop
mov
cmp
cmp
and
pop
sub
fisubl
or
jmp
scas
iret
add
push
inc
fbstp
cmp
cmp
mov
mov
mov
fldcw
mov
lcall
jmp
add
ja
in
loopne
mov
jne
mov
pop
pop
cmp
lds
lock
jno
mov
jmp
mov
cltd
pop
push
push
pop
pop
push
cwtl
faddp
imul
add
adc
push
cmp
iret
insb
adc
mov
xor
into
in
dec
add
testb
in
add
inc
test
mov
loopne
inc
pop
popa
xchg
sub
push
xchg
lea
jg
outsl
xlat
js
add
and
adc
cli
add
push
lahf
add
insl
call
add
sbb
daa
jbe
cmp
mov
fs
cwtl
aad
dec
sub
dec
out
js
xor
xor
std
xor
das
stc
sbb
sub
and
aad
cmp
mov
add
out
add
repnz
adc
in
mov
add
pop
xlat
enter
mov
jb
xacquire
pop
cmp
push
test
sub
out
pop
inc
adc
xor
jmp
or
inc
lock
fnsetpm(287
mov
cmp
test
call
not
mov
mov
fstpl
mov
shlb
push
push
mov
add
daa
push
mov
cli
into
adc
sti
orb
flds
dec
jmp
add
sbb
cmp
std
clc
adc
movsb
mov
in
jno
fimuls
sar
sub
inc
xchg
add
adc
sub
out
fistps
test
clc
aad
repz
sbbl
dec
xchg
cmp
xor
scas
sti
std
or
jge
daa
sbb
xchg
sbb
push
aaa
mov
dec
clc
xor
out
sub
push
cmp
dec
mov
cs
aam
shlb
add
push
mov
das
hlt
adc
add
fisttps
mov
aam
lods
sub
pop
vsqrtpd
mov
gs
ljmp
dec
fdivrs
int3
add
lret
mov
mov
push
inc
lods
aaa
push
add
shl
inc
or
jno
sub
push
and
cmp
jnp
adc
push
ss
imul
dec
call
call
push
xor
xor
jl
and
test
and
shlb
sub
sub
ja
icebp
popf
inc
call
jno
imul
lret
loopne
sbbb
adc
xor
sbbb
outsb
or
inc
fldl
or
cmp
sub
sub
jl
sbb
push
mov
xchg
int3
jge
out
cwtl
test
sbb
mov
ja
mov
rcrl
inc
cli
fisttps
idiv
mov
mov
imul
inc
lods
mov
and
and
push
mov
incl
sbb
loope
jbe
adc
imul
mov
es
push
sahf
outsb
adc
stc
adc
xor
cmp
pop
pop
or
cmp
ja,pn
scas
rcr
inc
shrb
jp
pushf
popf
and
paddusw
and
jecxz
push
pushf
add
push
xor
add
push
add
push
call
pop
testl
adc
out
cwtl
leave
imul
mov
push
or
xchg
and
push
fwait
jg
mov
jnp
and
into
lea
and
or
push
jmp
sarb
add
pop
not
inc
inc
dec
cmp
mov
cmp
adc
xchg
orb
shlb
loope
insl
add
mov
mov
test
cli
rcl
stos
xlat
fisttpl
jg
mov
xchg
add
add
cmp
sahf
or
arpl
mov
or
add
neg
push
ret
push
add
adc
xchg
or
test
and
ficompl
jae
lods
xchg
xor
mov
inc
xchg
test
test
lea
or
cmp
pop
pop
mov
add
inc
jge
ftst
sbb
mov
lret
adc
dec
out
and
sbb
bound
fists
push
mov
pop
push
push
mov
jbe
mov
daa
ret
rcrl
test
adcb
inc
je
mov
push
adc
gs
mov
into
pop
jmp
mov
ss
imul
aam
or
add
jae
psubsb
add
arpl
jbe
lret
js
and
add
dec
push
je
inc
in
rorl
dec
or
cmp
lock
xor
and
push
clc
add
shl
xorb
je
cmp
jb
pop
push
outsb
dec
adc
inc
stos
or
popf
push
add
rcrb
cmp
movd
adc
sbb
xchg
adc
std
jae
xor
pop
push
lods
push
xor
or
cmp
fdiv
mov
or
add
outsb
pop
inc
sbb
in
or
add
adc
mov
add
sbb
imul
pusha
inc
mov
sbb
inc
lahf
and
sar
push
je
imul
mov
pop
pop
sub
add
ss
xor
and
dec
cmpb
jbe
push
and
ja
fscale
bound
mov
dec
cmp
pop
popf
in
mov
shll
outsb
rcll
xchg
push
jecxz
push
fistl
das
add
jbe
jmp
mov
adc
in
sub
arpl
inc
dec
sub
sub
jle
stos
xor
ret
icebp
jo
adc
adc
push
xchg
lea
add
shll
or
or
out
jnp
fsubrs
mov
or
addr16
aad
je
sub
pop
or
cmp
sbb
or
adc
add
mov
in
xor
or
insb
xor
out
xor
enter
add
call
mov
sti
aaa
incl
sub
jno
or
jo
pop
push
push
pop
push
jo
add
add
jle
sub
push
out
mov
mov
aad
adc
cld
push
es
daa
std
adc
add
pop
fnstcw
and
and
into
inc
out
sub
adc
jmp
scas
xchg
pop
and
xchg
sub
pop
xorb
mov
ret
sub
rcr
xchg
daa
push
jo
adc
out
popa
out
add
imulb
popa
stos
xchg
mov
ficomps
xor
pop
pop
cli
fs
inc
adc
int
jp
jge
cmpsl
jnp
fsubl
inc
mov
stos
ja
ss
add
sub
add
ljmp
loopne
ds
pop
mov
sbb
jge
mov
or
mov
cmp
call
xchg
pop
mov
dec
jb
and
call
xchg
outsl
data16
ljmp
dec
jne
gs
pop
ret
test
outsb
mov
push
push
loop
repz
fldt
adc
test
dec
dec
adc
push
mov
lds
pop
or
popa
push
push
push
in
push
jo
and
jp
or
sub
xor
mov
push
and
push
subb
add
fwait
das
xor
bswap
je
inc
pop
into
add
aaa
pop
inc
std
add
pusha
and
pop
sbb
mov
mov
rcrl
int
es
inc
popf
pop
lods
and
jnp
xor
cltd
call
in
lds
or
xor
jl
push
ja
xor
rcrl
and
sub
sub
lahf
ja
icebp
xor
mov
jns
jp
bound
stc
sahf
int3
cmc
adcl
int3
jg
mov
fcompl
mov
mov
and
or
rolb
push
cmp
jg
mov
cld
stos
xchg
push
rcrl
or
dec
or
push
xor
pop
iret
dec
bound
sub
ret
lock
mov
adc
sbb
enter
pop
add
push
mov
pop
sub
test
lods
mov
push
dec
ss
movsl
xchg
in
sub
pop
mov
call
out
add
xor
push
lret
gs
and
imul
xchg
pop
cwtl
imul
testl
daa
ja
inc
pop
xor
lret
xor
add
jmp
movsb
ja
or
or
mov
push
and
shlb
gs
test
sbb
mov
sbb
pop
rcrl
pop
mov
mov
push
xor
mov
and
cltd
cmp
cmpsb
cmp
sbb
outsb
pusha
data16
ss
shr
cmp
sbb
shlb
enter
push
xchg
test
aaa
ret
adc
xor
popf
dec
loopne
pop
cmp
push
jmp
stc
in
imul
add
loopne
jecxz
push
out
call
insb
aas
xchg
sti
sub
xor
inc
roll
add
pop
add
cld
sub
data16
pop
or
mov
ja
push
xor
push
pop
das
and
push
ja
fnstenv
lcall
sbb
jae
sbb
lods
decb
fisubl
xchg
lods
rorl
push
imul
sub
xor
mov
push
gs
insl
jne
lret
or
add
popa
dec
dec
inc
repz
popf
push
insl
add
jge
pop
addr16
pop
xchg
imul
sub
jae
jmp
and
test
and
jo
push
add
popf
loop
push
or
adc
enter
mov
je
stos
nop
enter
pop
push
subb
sbb
psubsw
mov
movsb
out
mov
insl
iret
mov
movl
jg
cld
or
test
or
fists
pop
shr
push
mov
xchg
rorb
push
xor
jo
pop
inc
outsb
add
adc
dec
jmp
das
xor
daa
add
cltd
inc
mov
shll
ds
push
sbb
sbb
or
mov
jmp
out
rcrb
cs
nop
lret
xor
adc
mov
cmp
cmp
mov
adc
xlat
pop
mov
test
loope
and
arpl
sbb
js
cltd
add
jg
lret
add
pop
jmp
pusha
xchg
fstl
dec
lea
mov
dec
mov
jle
sti
insl
xor
cmp
in
sbb
mov
inc
push
fildll
mov
cmp
shll
add
or
push
mov
sub
adc
call
leave
ss
jns
clc
rcrl
aam
inc
pop
xor
push
inc
mov
adc
stc
pop
push
call
push
lods
out
add
cmp
mov
cli
das
sar
dec
or
pop
loop
jl
jbe
jmp
push
imul
aam
cltd
lods
add
movsb
xchg
mov
xchg
hlt
popf
pop
adc
pop
xchg
push
inc
or
imul
dec
lcall
xor
es
add
imul
mov
aad
push
mov
push
rcll
dec
jmp
push
or
pop
call
stos
leave
push
jl
adc
cmp
pusha
inc
pop
pop
popf
pusha
mov
pop
aam
add
cmp
or
jb
push
jbe
pop
icebp
inc
cvtdq2ps
push
repnz
hlt
mov
adc
push
mov
push
cs
adc
mov
sbb
fadds
pop
fcompl
push
cmc
pop
jnp
xchg
inc
xchg
inc
add
adc
dec
cld
pop
adc
add
shrl
pusha
es
es
and
pop
xor
or
daa
in
push
dec
pop
shrl
add
mov
lds
test
mov
lret
inc
cmp
and
cwtl
into
fcmovnb
xor
push
or
loopne
gs
xchg
in
jo
sub
outsb
pop
mov
rcr
adc
push
push
xchg
leave
daa
in
xchg
add
or
or
pop
lds
sbb
sub
adc
add
stos
sub
pop
pop
rcrb
pop
popf
inc
aaa
lcall
add
lcall
out
daa
lret
or
pop
popf
adc
mov
pop
loopne
cmp
adc
pusha
or
jbe
xor
arpl
or
jne
cmp
mov
sub
rsqrtps
jecxz
lret
lret
sub
popa
lret
pop
jae
out
outsl
loopne
jmp
xchg
jb
test
and
add
inc
test
in
pop
mov
lret
jg
nop
xor
mov
dec
jne
adc
sub
sub
mov
inc
jne
mov
dec
add
lods
add
pop
fs
aas
mov
xchg
in
add
enter
sub
dec
shl
pop
adcl
subb
shlb
xchg
or
jmp
cmp
sub
xchg
push
xlat
add
sub
call
iret
orb
ljmp
xor
cli
lds
cmpb
jp
rcr
hlt
ljmp
rolb
pop
imul
mov
jns
or
je
fs
icebp
jmp
and
and
ret
cmpsl
shlb
rcll
jmp
sub
push
cs
xchg
je
mov
mull
adc
outsl
aas
lock
stos
adc
or
xchg
jp
pop
cmp
mov
add
jmp
test
mov
sbb
inc
ret
add
jae
xorb
fcomp
pop
lgs
orb
rcrb
xchg
arpl
push
sub
xchg
inc
or
adc
stos
fisttpll
jp
jl
pop
add
xor
pop
or
cmp
in
scas
ror
add
insl
popl
pop
dec
rcrl
sti
pop
outsl
loop
shr
pop
inc
pop
rorb
ret
mov
or
mov
enter
cli
imul
mov
xchg
add
shr
adc
xor
mov
hlt
fnstcw
push
push
push
mov
rolb
mov
sub
lds
pop
leave
push
dec
fwait
push
and
jmp
xchg
subl
pop
push
add
sbb
pusha
sub
dec
inc
add
lret
lods
inc
mov
pop
lret
xchg
add
scas
mov
xor
sbb
push
sub
mov
addb
adc
stc
sub
xchg
sbb
pop
sbb
shlb
inc
add
sub
pop
pop
jmp
int3
pop
das
push
push
push
test
imul
notb
ret
jge
or
cmp
inc
xor
mov
pop
xor
mov
or
xor
ljmp
inc
lahf
clc
jns
dec
sub
pop
push
push
push
jb
push
lret
jno
add
cmpl
lods
outsl
ja
cmpsb
mov
cmp
xor
out
sub
add
jp
and
pop
inc
lcall
jns
repnz
inc
jmp
js
jle
jge
or
in
pushf
insl
add
mov
stc
loope
mull
pop
mov
cmp
pusha
push
cltd
sarl
leave
cli
mov
pop
and
push
sti
xor
daa
pushf
inc
rcrb
inc
or
sub
sub
sbb
scas
iret
mov
mov
push
outsb
pop
loopne
jbe
add
or
das
enter
js
xchg
stc
inc
imul
jne
or
daa
imul
and
mov
aas
addr16
rcr
out
and
sbb
stos
outsl
lds
lret
and
and
fcoms
sbb
enter
mov
orl
add
push
pop
mov
push
loopne
adcb
or
push
sarb
xor
adc
push
ljmp
adc
dec
call
cltd
pop
das
mov
adc
adc
pop
fisubl
xlat
mov
push
xchg
into
add
add
or
roll
sub
cmp
add
jmp
pop
test
xchg
fsubrl
cmp
push
js
pop
dec
mov
cli
adc
lahf
outsb
loop
orl
insb
pop
out
and
mov
push
xchg
test
cmp
jmp
sub
xchg
or
xor
loope
cs
aad
mov
add
pop
mov
es
iret
push
push
lea
pusha
std
cmp
push
jbe
inc
add
cmpsb
out
stc
mov
imul
add
cmp
or
notb
into
fnsave
and
outsb
fstpt
xor
jno
push
push
dec
les
gs
mov
inc
hlt
mov
jne
xchg
mov
mov
cmp
imul
mov
fwait
cmpsl
fnsave
rol
lods
adc
inc
idivb
push
xor
inc
mov
push
mov
adc
movl
and
nop
sub
mov
cltd
or
pop
push
add
jbe
rclb
pop
cmp
int
add
mov
sarl
or
add
dec
dec
addr16
mov
pop
inc
push
sbb
fistpll
pop
pop
andb
fiaddl
mov
adc
pop
push
addl
rorb
mov
aam
push
xor
mov
mov
push
mov
or
pop
pop
cmp
mov
lds
xor
dec
push
in
jno
out
out
push
mov
pop
pop
sbbl
pop
add
arpl
pop
call
xor
fcoms
or
sti
adc
stos
inc
imul
repz
lahf
gs
inc
or
push
lds
inc
inc
jl
adc
dec
imul
mov
fdivl
add
inc
sub
inc
rcll
or
gs
adc
add
or
push
push
add
stc
and
aad
pop
scas
jecxz
dec
and
add
addr16
and
std
pop
mov
add
push
sahf
fidivrl
or
fcomps
pop
sbb
add
pop
add
push
mov
test
xchg
das
push
cld
test
notb
pop
push
mov
dec
and
notb
adc
mov
xor
iret
jmp
and
xchg
xlat
jbe
mov
ret
jmp
addb
dec
xor
fnsave
mov
sahf
out
fisttpl
jmp
mov
or
enter
nop
lret
call
jp
les
das
cmp
pop
push
mov
dec
mov
in
stos
ja
push
into
jmp
sbb
stc
lcall
inc
test
xchg
xchg
sbb
subb
sub
push
mov
add
jmp
push
add
mov
add
pop
mov
aad
popa
sub
sbb
mov
push
sub
add
icebp
xor
push
mov
mov
cmp
mov
lock
jnp
jle
fstl
call
lret
arpl
div
rcr
test
shl
aad
sti
lret
pop
pusha
shrl
or
add
rol
mov
jmp
clc
cmp
cli
xlat
dec
pop
jmp
in
inc
icebp
xchg
xor
mov
mull
or
sub
loopne
push
cmp
sub
add
loopne
jb
push
add
cmp
push
sahf
mov
sub
or
shrl
imul
stos
pop
add
xor
adc
mov
icebp
std
das
mov
or
test
sbb
mov
xlat
xlat
xchg
xor
daa
dec
dec
mov
testb
in
sahf
js
movsl
add
mov
loope
aad
iret
stos
dec
nop
xor
inc
insl
add
jnp
enter
jmp
adcl
xorb
cwtl
xor
add
in
orb
aad
not
adc
andb
pop
movl
std
gs
mov
out
or
jns
adc
popl
mov
sbb
pop
mov
xor
add
fimuls
and
mov
repnz
dec
loope
add
or
dec
and
cmp
arpl
and
or
aad
scas
shll
push
mov
shl
add
adc
loope
sub
pop
repnz
cmc
outsl
or
imul
cmp
dec
pop
jmp
scas
jb
or
cmp
cmp
inc
pop
mov
mov
sub
push
and
rcll
clc
mov
in
jl
shlb
ds
je
sbb
or
jae
imul
or
pop
mov
push
popf
inc
or
cs
loopne
int3
pop
cmp
xchg
add
out
push
outsl
packssdw
fcomi
fcoml
push
lret
add
sbb
xor
inc
lods
pop
cmp
push
push
cmp
daa
push
pushf
mov
rolb
or
add
sub
mov
loope
loop
aaa
push
inc
ret
or
add
or
mov
cmp
fstpl
add
subb
jp
aas
jbe
test
data16
pop
popa
scas
push
cmp
push
adc
mov
mov
cmc
cld
nop
fstl
adc
adc
cmp
insb
dec
mov
xor
push
jl
je
cmpl
mov
lcall
mov
sub
in
mov
sub
inc
dec
or
add
jg
pop
xchg
subb
fcomip
cmpsb
mov
lods
sub
pop
inc
adc
adc
add
push
or
ficoms
mulb
mov
fdivrp
add
xchg
xchg
inc
add
enter
lcall
and
ja
cld
cmp
loope
pop
cmp
data16
mov
adc
mov
es
pop
adc
push
sbb
cmovs
cld
mulb
jl
and
arpl
mov
je
mov
mov
ljmp
daa
add
or
dec
xchg
or
scas
pop
cli
rorl
call
ret
cwtl
pop
push
push
pop
das
cmp
lret
or
loopne
sbb
jmp
inc
lock
outsl
push
in
in
sbb
pop
ja
testl
test
es
push
test
add
adc
or
or
leave
dec
pop
xor
in
and
pop
cltd
push
sub
add
xor
xchg
inc
negl
push
popa
xor
add
gs
pop
pop
push
iret
xchg
lcall
adc
xchg
in
pop
mov
aaa
xchg
pop
add
mov
add
pop
mov
mov
mov
pop
stos
xchg
not
test
mov
push
das
lods
pop
fdivrs
mov
jne
mov
dec
jmp
push
xor
pop
and
cmp
cwtl
shll
sbb
mov
pop
lods
mov
and
or
in
mov
lea
dec
push
dec
jmp
addb
or
add
xlat
jge
mov
jmp
push
repnz
mov
int
pusha
imulb
mov
cli
pop
jne
clc
out
aam
sub
test
and
mov
pop
repz
dec
ds
dec
aam
incb
jecxz
cmpsb
int
nop
dec
mov
jp
loopne
or
xor
mov
addr16
roll
cmp
cmp
xor
lahf
lds
sti
leave
into
mov
add
jmp
neg
dec
imul
ret
cld
push
btr
mov
xchg
or
in
mov
jl
adcl
jmp
out
xchg
out
out
repz
cmp
xor
cld
jg
int
push
pop
xchg
add
ja
icebp
push
dec
and
call
add
cmp
and
push
mov
xchg
mov
add
push
push
sub
inc
shlb
inc
shr
add
xchg
addr16
and
rcrl
jmp
jmp
cmp
jp
xor
jmp
daa
insl
adc
cld
fmulp
xchg
imul
pusha
movaps
inc
in
lahf
mov
adc
pop
add
rcrl
xor
mov
and
lds
mov
sub
ss
fs
rolb
in
push
pop
jmp
jne
ficomps
int
jnp
push
adc
lar
mov
add
add
and
psubq
jne
and
jecxz
cmp
xor
stos
add
add
and
xchg
enter
flds
cmp
loop
addr16
add
mov
adc
jp
repnz
icebp
test
fcmovu
pop
sbb
ljmp
int3
jecxz
mov
pop
daa
stos
mov
andl
lock
loop
pop
inc
out
nop
ret
shlb
xor
fstps
mov
punpcklbw
pop
xchg
jo
jmp
dec
sub
sbb
out
mov
cld
pop
gs
movsl
cwtl
push
sub
mov
test
pop
push
repz
pop
cld
jp
mov
ds
scas
shll
sub
push
test
sahf
xlat
sbb
pop
int3
fwait
cli
fisttps
frstor
call
stc
aad
outsb
mov
stc
leave
push
add
insl
jb
icebp
inc
test
cmp
pop
jmp
lock
shr
jle
stos
pop
and
and
xchg
pop
test
addb
mov
push
push
or
pop
dec
scas
jne
cmpb
in
ds
push
mov
push
ss
mov
nop
test
jmp
adc
in
add
push
aaa
mov
movsl
ljmp
fucomp
cmc
sub
test
test
mov
call
nop
and
pop
jmp
sbbb
out
mov
mov
ja
int
ds
dec
pop
push
imul
punpckhbw
push
xchg
mov
popa
dec
adc
xor
js
out
and
orb
push
test
adc
inc
pop
popf
into
and
jbe
lret
jge
cmp
lods
pop
movsb
jecxz
and
and
add
nop
test
inc
mov
or
dec
jmp
test
pop
inc
stos
push
mov
cld
mov
mov
repz
jmp
dec
dec
and
or
xchg
cmp
movsl
push
arpl
test
pusha
mov
cmp
pop
enter
cmp
ret
sbb
lret
cmp
jne
movsb
rcll
sub
or
and
inc
mov
xor
push
xor
movsl
mov
leave
mov
loop
rolb
xor
xchg
das
neg
push
jmp
pop
lds
or
xchg
push
dec
add
aad
dec
add
cmc
sbb
adc
ljmp
mov
push
mov
mov
dec
incb
cli
scas
jge
push
in
pmulhuw
cmp
add
in
cs
outsl
fistpll
sub
in
cld
popf
push
cld
leave
std
pop
test
loopne
imul
repz
jg
sbb
ljmp
or
dec
pop
insb
test
scas
fwait
pop
shlb
arpl
lock
adc
in
push
jg
int
pop
fucom
or
pop
jle
bound
inc
div
adc
pusha
or
mov
adc
adc
or
add
or
arpl
xor
dec
push
mov
add
int3
inc
cwtl
pop
scas
loopne
repnz
push
pop
out
popf
je
cmp
rolb
mov
sub
mov
dec
push
stos
daa
int3
loop
cmp
sbb
jo
and
inc
gs
ss
repz
je
jb
mov
xchg
push
mov
rcll
and
ljmp
xor
pop
test
lods
incb
jmp
sub
rol
bound
test
sub
jecxz
sbb
sahf
pusha
aaa
dec
and
das
mov
and
or
and
push
cli
mov
mov
xchg
adc
mov
mov
les
mov
mov
mov
test
xchg
and
adc
repz
fiaddl
adc
sub
jmp
inc
data16
repz
ds
xchg
xor
sub
mov
sub
sbb
sbb
aad
jle
cmc
mov
ja
mov
cli
push
mov
cli
mov
mov
repnz
sub
push
fisttpl
sub
ss
push
pusha
mov
sbb
mov
ljmp
cltd
sbb
cmpl
out
sarl
sub
out
pushf
dec
fisubs
sub
xchg
test
out
hlt
daa
sub
ljmp
or
enter
mov
test
add
or
add
aad
or
lret
ss
int3
jmp
dec
jmp
test
cmp
mov
push
addl
mov
pop
popf
xor
icebp
push
add
je,pn
div
andb
and
js
int
pop
sub
cwtl
test
adc
sbb
addl
ds
imull
pop
push
jmp
xor
aad
das
mov
push
lock
cmp
lock
sbb
fadd
dec
add
xor
mov
mov
pop
xor
movsb
es
inc
lret
push
arpl
xchg
sub
xor
pop
pop
enter
das
stos
div
aaa
push
sbb
inc
sub
scas
movzwl
or
pop
movsl
add
repnz
jo
push
mov
adc
loop
cmp
mov
push
jno
test
pop
ffreep
and
rolb
jmp
inc
ljmp
mov
fs
enter
popf
fcoms
mov
aam
scas
pop
adc
cld
jmp
mov
xchg
and
sub
dec
push
lret
cmp
and
or
imul
jmp
shrl
xchg
hlt
or
fdivrl
add
repz
mov
in
lock
dec
testl
in
in
int
jecxz
sahf
cmp
sbb
movsl
xchg
int3
sub
ror
inc
push
mov
andl
and
pop
jbe
cltd
in
and
std
dec
pop
jmp
mov
fldt
sub
das
pop
or
pusha
pop
flds
out
fsubr
aaa
pop
lret
dec
enter
mov
inc
push
jge
mov
or
add
imul
sub
les
aad
and
pop
insb
and
data16
or
test
or
pop
push
mov
pop
fsubl
mov
and
or
imul
sbb
mov
and
ret
add
dec
out
adc
xchg
pop
inc
mov
shll
addps
jns
jnp
adc
pop
add
adc
add
stc
jmp
stos
inc
enter
andb
xchg
test
ret
mov
pop
push
mov
add
out
ljmp
ret
mov
fucomp
dec
dec
test
ljmp
bound
repz
push
stos
xorb
shrb
mov
xorb
mov
lock
insb
lds
pop
mov
lea
mov
sub
jnp
and
pop
pop
cwtl
sbb
push
loope
push
inc
pop
dec
add
aas
enter
fcomps
icebp
xchg
imul
jge
push
pusha
fwait
inc
jne
imul
cwtl
mov
and
pop
pop
jmp
push
sbb
pusha
dec
jne
sbbl
xchg
pop
test
and
and
imul
cld
jo
testl
cmp
int
leave
or
jmp
xchg
rorl
push
xor
add
mov
add
ds
cmpsb
xor
or
or
mov
push
push
adc
or
adc
and
imul
je
mov
clc
push
movsl
and
or
push
ret
or
orb
mov
outsl
xchg
jmp
sbb
pop
jb
fisttpll
jmp
in
inc
push
outsb
ja
pop
mov
not
sub
push
lahf
push
cli
xchg
pop
inc
jo
cwtl
lret
push
sub
bound
add
mov
or
sbb
xchg
fisubl
std
loop
push
icebp
mov
push
scas
mov
adcl
mov
mov
mov
push
push
dec
cmp
popa
stos
jmp
lock
add
call
pop
pop
and
js
xchg
arpl
cmp
or
or
push
pop
or
outsl
lds
pop
imul
into
jp
sti
in
lret
push
insl
ds
or
jae
popf
test
testl
shl
popa
push
pop
pop
mov
mov
subb
rorb
ss
push
add
dec
and
adc
push
or
enter
add
clc
jp
sub
push
cmp
test
cmpsb
jmp
addb
ljmp
pop
in
jmp
call
and
cld
pop
pop
mov
mov
or
divb
pop
mov
ja
insb
mov
jmp
add
pusha
or
cmp
cli
loop
lock
ret
pop
pop
cs
stos
push
push
sbb
rorl
push
dec
cmp
jne
and
in
outsb
push
sub
sbb
mov
rolb
pusha
xchg
push
fstl
addr16
dec
xor
mov
xorb
mov
in
loop
adc
lcall
jmp
pop
jns
dec
jns
fs
mov
push
gs
insb
add
arpl
add
inc
xchg
or
jnp
out
inc
add
inc
xor
test
test
popa
subl
pop
icebp
dec
mov
mov
jne
push
mov
pop
out
xchg
data16
and
rcrb
adc
stc
scas
jno
movsl
and
call
iret
fsubrp
dec
das
lcall
pop
or
pop
data16
sub
iret
pop
push
sub
xor
sbb
loop
dec
stos
mov
dec
js
shlb
or
cmc
xchg
mov
xchg
insl
push
pushaw
data16
jmp
pop
push
sub
sub
hlt
jns
inc
gs
cmp
repz
cmp
sub
add
push
mov
pop
loope
pusha
subb
push
sbb
loopne
lcall
or
mov
mov
pop
pop
xor
cli
or
push
pop
or
jmp
dec
fdivr
xor
add
jo
xor
lcall
inc
lds
pop
or
repz
add
divb
lock
jl
inc
pop
mov
ljmp
push
push
adc
out
test
sub
and
pop
sbb
vpandn
movsb
mov
sbb
xchg
sub
jmp
xchg
hlt
sub
shll
or
add
xchg
mov
repnz
xchg
dec
add
imul
rcrl
add
je
int
push
jo
out
sub
sub
add
ret
sarb
adc
pop
roll
sub
les
xchg
aad
sub
cs
xchg
mov
mov
push
aad
stc
push
add
movsl
fcmovnb
add
push
xlat
cwtl
mov
inc
mov
std
popa
xchg
out
inc
loope
push
cmp
daa
ror
jb
pop
mov
lahf
push
push
stc
sbb
div
pop
fwait
stos
dec
cmpsb
or
stos
rorl
add
test
pop
mov
xor
ret
push
mov
mov
and
xchg
in
out
jo
jmp
sbb
popa
shlb
out
loopne
push
call
or
push
nop
push
add
dec
scas
rcll
mov
shrb
jl
cld
pusha
add
pop
add
push
mov
orl
cli
or
jmp
andb
icebp
xchg
push
hlt
pop
roll
mull
adc
daa
sub
jo
dec
push
push
dec
out
inc
pop
scas
mov
add
cmp
and
mov
hlt
pop
repz
hlt
xorl
push
jmp
jnp
cmpsl
jae
loop
in
cmpsl
jbe
inc
pop
scas
ret
mov
sbb
in
sub
loop
popf
inc
pop
lea
iret
lahf
out
repz
adc
into
notl
dec
dec
arpl
sahf
lahf
mov
xchg
pop
add
cmc
push
inc
sub
out
div
loop
pop
xor
jl
pop
subb
pop
jle
pop
xor
jl
or
inc
cmpsb
mov
xor
daa
or
lock
adc
jmp
hlt
cmp
cmp
shl
mov
sub
rcll
push
xchg
and
fldenv
movsl
sbb
call
out
sti
adc
shlb
adc
out
je
or
pop
pusha
and
emms
add
orb
jmp
lahf
or
nop
mov
lcall
fstps
or
cmpb
sbb
les
push
push
add
mov
inc
mov
adc
das
cmp
subb
lods
add
add
ficoml
push
mov
loope
imul
mov
mov
push
into
or
stc
and
cmpb
rcrb
push
xchg
lret
stos
in
call
bound
jp
inc
add
or
out
jg
les
mov
and
inc
clc
and
test
add
adc
cs
xchg
mov
or
dec
sbb
stc
mov
fimull
push
sbb
and
in
inc
mov
inc
pop
mov
xor
rorl
adc
fnsave
push
sbb
sbbb
data16
enter
mov
and
cmpsb
or
test
movsb
add
mov
dec
dec
add
push
push
mov
bound
fsts
shrd
test
add
in
mov
lods
push
add
stos
push
sub
in
inc
gs
inc
outsl
pusha
inc
mov
inc
js
inc
push
incl
flds
sub
mov
adcl
pop
mov
push
cltd
pop
lret
adc
jns
xor
add
add
cmc
mov
mov
or
leave
adc
inc
mov
arpl
or
rclb
sbb
sbb
or
int3
stc
lret
orb
sbb
out
sbb
loop
sbb
adc
or
inc
or
popa
lock
mov
icebp
lods
sub
mov
nop
push
mov
jge
adc
inc
add
mov
repnz
popf
les
mov
xchg
mov
insb
mov
rorl
and
fld
sbbl
lods
sahf
cmp
sub
sub
or
adc
cmp
add
je
cld
inc
fiadds
lock
and
mov
dec
xor
loopne
fldl2t
and
pop
push
push
pop
cmpsb
sbb
xchg
sbb
fstpl
scas
adc
stc
jle
pop
sarb
enter
adc
rcrb
dec
mov
fcoml
mov
dec
sbb
xchg
imull
sbb
xor
out
pop
inc
imul
sbb
mov
pop
xchg
or
movsb
movsl
jns
dec
lock
inc
mov
out
add
xchg
movsl
pop
add
xor
pop
imul
jb
xchg
xchg
xchg
pop
push
mov
hlt
aam
inc
push
mov
popf
jg
mov
push
push
mov
pop
jb
subb
sub
xchg
sub
mov
pop
push
sbb
push
xlat
pop
sbb
imul
push
lock
dec
cltd
rclb
mov
pop
xor
int3
int3
negl
sbb
ret
push
pop
push
pop
repz
jae
sub
mov
sbb
lret
ret
ljmp
push
mov
inc
mov
loopne
inc
sub
inc
cld
lret
mov
add
lahf
hlt
mov
or
pop
sysexit
add
pop
stos
mov
enter
adc
push
xor
xor
mov
fisttpll
out
pop
push
sub
mov
jmp
or
sub
testl
jne
movb
into
pop
cmpsl
or
push
sbbb
jo
xlat
inc
mov
add
pop
mov
das
icebp
sbb
mov
push
push
push
into
jnp
jg
push
dec
and
jo
dec
lods
pop
fimuls
pop
ss
jbe
iret
xchg
lods
cli
rcrb
push
sub
mov
leave
pop
lahf
jno
imul
cmc
inc
jmp
nop
or
mov
push
add
inc
jmp
mov
shl
push
jae
pop
shrl
push
in
outsl
ljmp
js
je
lods
shl
push
jmp
and
bound
in
shlb
adc
out
pop
inc
out
inc
push
xor
in
add
imul
pop
gs
int
inc
scas
mov
jmp
cmpsl
jmp
test
sbbb
mov
xchg
sbb
test
dec
pop
dec
add
sub
push
mov
push
add
imul
sbb
jae
in
lret
orb
testl
adc
and
dec
std
add
push
push
xchg
add
jp
mov
lret
pop
pop
jmp
in
fisubrl
cmp
push
or
jge
pop
ljmp
outsb
xchg
dec
clc
imul
or
pop
or
pusha
loope
cmp
jmp
cmpsl
inc
aas
add
test
cs
loopne
stos
pop
clc
movsb
mov
dec
bound
jg
sbb
popf
fisubrs
shll
adc
mov
loope
fisttpl
scas
and
repz
push
push
mov
sub
adc
jmp
add
int3
repz
sub
adc
mov
dec
mov
jb
push
dec
push
add
divb
outsb
jns
nop
add
xchg
inc
mov
out
add
in
aas
insb
mov
mov
xchg
adc
xlat
mov
lods
call
popf
shrb
loope
sub
in
movb
outsb
or
rorl
and
add
push
cmp
xlat
dec
ja
or
insl
pop
in
mov
sub
sub
cmp
sbb
fisubrs
int
sub
ret
int3
dec
fs
add
stos
shl
or
clc
xor
add
xor
aam
lahf
mov
movsl
and
stos
popf
sbb
sub
fisttpll
clc
cmp
fcmovnb
dec
sbb
out
aaa
add
and
jno
imul
jp
add
addr16
push
add
cs
add
push
cmpb
sbb
lcall
mov
cli
adc
push
cs
adc
dec
sub
mov
movsb
popl
add
xor
mov
adc
pop
sub
mov
sti
aas
enter
out
pusha
xor
sub
loope
sbb
das
dec
push
cli
pop
test
sub
xor
in
mov
push
inc
mov
cmpl
sbb
adc
dec
add
outsb
adc
in
and
inc
outsl
add
inc
inc
dec
and
fiaddl
xor
add
adc
adc
ret
loope
xor
cmp
xor
mov
outsl
or
pop
aam
loop
pop
xchg
jg
pop
and
scas
in
sub
and
cmc
std
imul
mov
mov
xor
and
or
fiadds
push
jmp
xchg
pop
pop
test
xor
negl
cwtl
mov
mov
ret
sbb
xchg
add
and
idiv
jp
fldl
xchg
aam
jl
aam
int3
cwtl
mov
ret
mov
inc
movl
stc
ret
sub
add
aam
jecxz
jg
nop
add
push
mov
in
cmp
cld
gs
int
pop
pop
pusha
int
mov
pop
stos
add
fcoms
out
dec
bound
cmp
in
jp
mov
push
outsb
jecxz
add
sahf
xchg
push
pusha
sub
jge
lods
add
jg
dec
jmp
out
jae
in
addb
sbb
orb
pop
cmp
stos
mov
jmp
mov
xor
arpl
mov
and
jae
fiaddl
mov
daa
ret
push
cmpsb
push
push
mov
pop
push
xchg
cmp
lret
pop
fxch
cmpsl
out
sub
jns
or
sbb
and
push
mov
cld
pop
cld
arpl
dec
mov
daa
xchg
gs
push
lret
pop
adc
lahf
pop
out
js
dec
jle
test
or
adc
sahf
jb
mov
out
lret
or
cmpsl
and
cltd
ja
mov
daa
cmp
xchg
jo
mov
cmp
enter
ret
jg
mov
call
rcrb
push
pop
test
rcl
leave
fwait
bound
dec
push
inc
add
dec
adc
dec
imul
ds
stc
push
mov
xlat
movb
neg
push
pop
add
pop
out
xor
scas
mov
pop
jl
les
sti
pop
lcall
outsl
bound
lahf
out
xchg
mov
push
add
add
dec
ret
add
xor
orb
cltd
sub
add
and
pop
mov
inc
jne
inc
pop
aas
add
and
enter
cli
gs
addr16
test
dec
outsl
ffreep
test
inc
adc
and
jb
out
sbb
push
adc
into
jbe
jae
sbb
and
pop
pop
mov
xchg
or
jae
cwtl
cmc
out
pusha
icebp
jp
xor
shl
sbb
dec
add
sub
leave
adc
ret
ss
or
daa
jp
mov
fwait
mov
dec
ljmp
mov
dec
and
ret
stc
push
int3
push
clc
jmp
add
fisubrs
add
or
faddl
out
jmp
in
ljmp
adc
dec
add
push
stc
out
shl
or
sbb
neg
add
outsb
and
mov
in
mov
or
scas
imul
movl
cmc
loop
fucom
jge
ja
mov
xorl
sub
push
ror
xor
or
add
fnstsw
cli
xor
std
fstpl
out
sarl
pop
jle
inc
and
add
push
rorb
push
jge
mov
mov
xor
sarl
jmp
imul
mov
dec
cmp
movsb
jo
popf
pop
fsubs
xchg
jp
add
decb
pop
mov
add
mov
mov
pop
xlat
cmpsl
jne
jmp
mov
dec
push
xchg
xor
das
mov
dec
mov
push
mov
adc
xor
jmp
shl
jle
mov
insb
adc
sbb
add
ja
sub
cmp
xor
mov
mov
iret
fcoms
aad
cmc
dec
cmpsl
and
pop
add
das
stos
mov
mov
mov
and
inc
add
mov
push
adc
movsl
cld
sub
xchg
sbb
dec
xor
xor
mov
sub
xor
pop
mov
idivl
add
cmp
lea
or
jnp
ja
bound
push
sbb
jmp
sbb
shrb
mov
lahf
jle
dec
lods
mov
add
add
mov
imul
pusha
mov
scas
adc
push
pop
in
inc
loop
jg
pop
jmp
pop
adc
test
and
push
lds
hlt
or
xlat
iret
pop
stos
pusha
addr16
shr
dec
punpckhwd
test
add
or
aaa
or
pop
cmp
push
or
cmpsl
fadds
jp
loope
push
call
pop
sub
dec
adc
cvtps2pd
mov
sub
mov
imul
outsb
cltd
inc
stc
dec
and
outsb
inc
cmp
dec
iret
cmp
mov
cltd
push
or
imul
adc
sub
fsts
sbb
mov
aas
xchg
xchg
adcb
insb
jg
nop
sub
sti
jmp
xchg
stos
movsl
es
mov
jo
adc
psllw
pop
sub
lahf
inc
sub
pop
jg
inc
shll
lret
mov
sub
fsubrp
jge
push
mov
and
mov
jns
inc
pop
icebp
nop
es
and
xor
es
dec
push
pop
bound
xlat
adc
lock
sbb
pusha
repz
adc
add
jb
and
cmc
in
daa
repnz
rcll
or
mov
xor
push
and
inc
nop
adc
jo
enter
jbe
repz
test
stc
das
movsb
stc
in
mov
xchg
test
dec
add
pop
inc
push
out
sbb
mov
rclb
fstl
les
push
add
dec
or
jmp
lds
dec
or
mov
and
aad
decb
ss
add
sub
lcall
pop
xchg
inc
shrl
inc
shll
lds
push
call
and
testb
or
jbe
push
cmc
dec
bnd
fwait
pop
in
ljmp
stos
loope
iret
xchg
not
test
push
push
inc
jmp
push
pop
pop
add
sub
mov
add
add
lret
jbe
dec
and
ljmp
pop
mov
fiaddl
pop
add
push
xor
cmp
fstpl
in
shl
sub
xchg
or
add
data16
add
fisttpll
stc
icebp
xor
and
decl
add
sti
out
cmp
shll
mulb
add
mov
adc
mov
sub
movsb
push
test
sub
test
xor
incl
in
dec
popa
movsb
adc
or
gs
cmp
add
scas
add
flds
dec
add
dec
add
inc
mov
rcll
and
nop
icebp
dec
icebp
adc
xchg
test
xchg
mov
mov
xor
call
and
lret
ret
std
in
or
sub
push
in
dec
les
jmp
pop
fstps
imul
cli
out
popa
into
xchg
push
adc
mov
out
xchg
cmpsb
sbb
dec
mov
add
outsb
sbb
rcr
mov
lds
sbb
scas
sub
push
mov
mov
gs
aad
sub
mov
out
fldt
jmp
nop
adc
adc
cmp
xorb
in
jg
imul
cmp
mov
ds
das
cmp
and
sub
inc
xchg
call
jmp
lods
outsl
movsb
inc
mov
xchg
cwtl
inc
jns
jg
sub
divl
das
in
lahf
push
cmc
add
loope
inc
xchg
mov
outsb
vmovaps
mov
pusha
adc
mov
add
mov
cld
xor
loope
xor
lahf
scas
and
sbb
inc
lods
or
add
sbb
sub
out
or
int
clc
xchg
repz
and
push
add
jmp
je
cmp
cwtl
and
loope
or
add
add
push
mov
and
mov
inc
out
or
push
pop
lret
int
add
mov
fcmove
mov
pop
push
imul
push
adc
sbb
add
push
push
ffreep
fsubrl
or
push
pop
cltd
out
test
sub
mov
ret
jae
jecxz,pt
decb
int3
fnstenv
sub
call
add
adc
dec
inc
mov
push
rcll
add
loope
scas
loope
addr16
sbb
pop
in
push
mov
inc
xor
mul
inc
pop
push
pop
add
or
out
cmp
js
stos
add
mov
movsb
incl
or
sbbb
xchg
mov
mov
out
stos
push
je
dec
jbe
mov
std
jge
dec
ffreep
xor
jno
sub
and
xlat
jns
leave
jge
cmp
stos
add
into
mov
fnstsw
xchg
jb
std
pusha
into
loopne
xor
dec
inc
fildll
push
mov
test
adc
idivl
gs
and
in
cld
adc
add
int
jb
dec
lahf
shll
adc
mov
jmp
add
ja
es
lods
add
dec
test
clc
js
mov
pop
xor
ljmp
lret
pop
push
push
add
movsl
jb
aam
ret
nop
xor
cmp
cs
sub
dec
xor
or
out
and
scas
mov
cmp
adc
or
sub
sbb
lret
sub
into
scas
lret
mov
lods
pusha
xchg
xchg
das
int
std
cs
xor
sub
dec
xlat
push
pop
movsb
dec
movsb
sub
fisubrl
push
mov
cmp
in
adc
sbb
fstps
mov
loop
inc
mov
push
push
or
into
add
jno
push
pop
cmp
movsb
in
js
sti
jno
xor
or
fistpl
xor
idivl
stos
and
jl
fnstenv
insb
in
or
addr16
cli
out
jae
sub
popf
sub
dec
xor
lret
jg
push
lds
mov
loope
das
add
push
cli
rcrb
cld
mov
pop
imul
xor
mov
push
mov
add
dec
pop
mov
and
xchg
stc
dec
pop
enter
sbb
and
popf
lock
dec
clc
fs
sub
addr16
adc
and
sub
mull
cwtl
ret
pop
das
iret
mov
ljmp
cli
lret
ret
jge
jb
or
lret
sub
jbe
out
nop
mov
adc
cmc
jbe
outsl
inc
les
xchg
add
mov
xor
xchg
fwait
jmp
dec
push
pop
test
or
xchg
or
test
pop
jb
add
movsb
xor
test
not
fadds
jns
sub
insb
fiaddl
sahf
jnp
dec
hlt
inc
mov
mov
add
jge
test
sbb
loop
scas
pop
inc
and
dec
add
adc
lods
adc
mov
sbb
lea
mov
cld
mov
add
xor
in
movsl
call
fcoml
adcl
and
inc
xchg
rcr
lock
push
out
sub
mov
add
pop
shl
pop
mov
dec
out
popa
jp
aaa
sahf
sbb
andl
pop
aad
mov
pop
jae
push
push
and
adc
xor
jno
hlt
mov
or
jp
sub
cmp
or
bound
push
or
sbb
cmp
add
jmp
fsubrl
jnp
loope
testl
hlt
push
adc
add
enter
enter
or
popl
fcoml
out
jbe
inc
jno
ljmp
mov
push
sbb
sub
call
loopne
pop
and
fcompl
xor
mov
aad
clc
enter
loopne
mov
jbe
sbb
jmp
lahf
adc
adc
push
jno
dec
mov
xchg
pop
push
mov
hlt
dec
cmp
idivl
ljmp
push
loope
in
fiadds
xlat
pop
push
push
xchg
bound
lock
inc
xor
rcl
enter
xor
cmp
push
xchg
or
mov
and
loopne
or
and
pop
or
sbb
loopne
loope
jmp
aad
push
cli
pop
or
adc
inc
push
xchg
sbb
sub
ds
jmp
jmp
pop
push
inc
jmp
cmp
jbe
jg
cmpsl
bound
aas
adc
adc
sbb
in
scas
mov
test
adc
gs
push
dec
or
cmp
and
inc
nop
jp
push
repnz
sbb
adc
add
ds
pop
xor
xchg
or
stc
jns
adc
outsl
sbb
add
test
rorl
jecxz
push
notb
cli
popf
cltd
lods
outsl
xchg
and
and
add
out
lock
inc
sti
cs
frstor
jmp
push
stos
mov
stos
pop
jmp
lahf
pop
jmp
pop
or
outsb
push
mov
out
jae
dec
dec
push
subl
pop
sysexit
sbb
xchg
add
movzbl
or
push
add
test
push
leave
or
std
imul
xor
push
jno
jmp
loope
inc
repnz
sti
ficompl
testb
push
mov
xorb
imul
call
sub
and
std
push
inc
and
mov
pop
push
ds
sub
mov
js
add
jmp
nop
or
jle
test
sub
das
dec
mov
test
loop
loop
jge
enter
sub
out
mov
or
add
push
mov
xor
stos
jmp
shrl
push
stos
shll
and
adc
add
fsts
jmp
xchg
or
xchg
imul
and
jne
sbb
test
andb
adc
imul
mov
sub
cs
xor
aam
cmp
jmp
push
loope
adc
stos
adc
xor
push
and
bsf
mov
orl
ret
popa
mov
dec
mov
jp
adc
inc
imul
mov
pop
addb
or
filds
push
rclb
xlat
mov
shlb
jns
adc
aam
mov
bnd
adc
push
add
pop
fistps
lcall
gs
add
idivl
pop
hlt
out
or
jnp
popf
push
ljmp
push
cmpl
in
mov
jns
in
xchg
mov
push
inc
pop
mov
sbb
xor
stos
int3
mov
nop
test
inc
and
adc
mov
aad
mov
pop
mov
pop
dec
notl
inc
fcomip
mov
pop
out
sbb
fs
mov
rcl
add
pop
jne
pop
and
je
incb
jnp
push
ja
mov
lret
enter
xchg
jmp
xor
dec
mov
ret
cmp
xchg
scas
cmpsl
push
imul
xor
cmp
add
inc
add
lock
jnp
xlat
out
inc
xor
nop
jbe
test
into
fisubrl
jne
aad
loopne
mov
xchg
pusha
jecxz
add
lods
scas
adc
fwait
mov
mov
lock
adc
fbstp
xor
push
sub
call
xchg
mov
add
push
jmp
lret
add
pop
ljmp
add
lds
mov
jge
mov
xchg
or
mov
int
gs
add
mov
or
pop
push
push
push
or
pop
repnz
add
divb
or
push
dec
outsl
cmp
fdivrs
push
and
adc
pop
xchg
negb
inc
mov
and
jb
ljmp
push
fwait
and
test
add
jo
add
or
out
push
movsl
and
enter
inc
insb
inc
jmp
ljmp
push
dec
lret
outsb
mov
jl
jmp
xchg
jmp
sub
in
and
sub
mov
movsl
icebp
xchg
push
std
sbb
imul
pop
push
adc
jmp
test
fistpl
mov
adc
ljmp
jmp
mov
sahf
imul
push
stc
sub
push
ret
jl
jo
shll
jmp
imul
outsb
adc
add
dec
stc
add
pop
push
push
cmc
repnz
cld
dec
add
push
mov
es
out
add
sbb
fs
stos
jmp
push
popf
decb
and
mov
push
mov
pop
mov
and
jp
aam
jno
sub
sarl
imul
shl
push
mov
loopne
push
pop
sub
leave
inc
jo
daa
inc
dec
pop
cmpb
and
sub
adc
xchg
jbe
sti
mov
bound
fisttpll
or
movsb
or
pop
enter
es
in
mov
dec
add
add
jecxz
lahf
xchg
jg
add
inc
xchg
loopne
jb
xor
icebp
dec
or
pop
lcall
xchg
mov
or
subb
int
adc
call
incb
mov
push
mov
sub
or
jns
or
cmp
rcrb
xor
ljmp
jmp
sub
xchg
jle
add
push
pop
add
adc
and
sahf
aam
out
fs
push
add
push
mov
jecxz
adc
or
pop
ljmp
outsb
cmp
aam
cmp
or
fimuls
sbb
hlt
lds
xchg
js
icebp
pop
jo
add
lret
inc
or
mov
call
mov
pop
or
out
lret
push
ja
ficompl
jmp
fcompl
mov
adc
sbb
scas
or
adcb
inc
and
cmp
ja
mov
inc
jle
cmp
fisttps
push
frstor
or
aad
sub
into
push
pushf
or
sub
pop
adc
xor
jo
xchg
jl
pop
or
dec
push
or
xorb
subb
jns
fiaddl
mov
outsb
mov
andb
push
dec
cmpsb
stos
inc
arpl
ret
mov
adc
in
cmp
push
push
sbb
xchg
lahf
jmp
add
ror
xlat
lods
testl
cmp
xchg
orb
xchg
leave
rcrl
cmp
ret
pop
pop
out
pusha
into
cmp
or
fdiv
pop
pop
js
add
shrb
or
cltd
or
mov
ret
pop
or
sbb
adc
xchg
out
scas
rorb
fisubs
aaa
decb
jl
into
push
mov
xor
xchg
mov
pop
dec
decb
jmp
pop
add
jmp
add
dec
jno
pop
sub
mov
fwait
jmp
push
jmp
push
or
mov
addr16
or
xchg
ss
sbbb
ljmp
push
add
push
aas
jmp
arpl
push
or
pop
call
sub
cli
and
pop
jmp
scas
mov
push
stc
mov
and
mov
push
jne
push
std
push
mov
ret
outsb
push
movsb
push
and
xchg
ja
jle
je
or
pop
add
sub
or
ret
fadds
inc
push
loop
rolb
fisubrs
jne
in
push
xor
into
jp
jb
hlt
xor
mov
stos
pop
aad
iret
std
lds
adc
mov
inc
pusha
pop
pop
dec
xor
or
and
jg
cmc
jno
jnp
push
add
in
pop
and
adc
rcrl
inc
mov
pop
add
jle
test
add
cmp
mov
add
sahf
cmp
test
fadds
repz
insb
or
sub
pushf
scas
pusha
mov
xor
dec
add
mov
adc
cmpb
cltd
pusha
aas
xor
ror
jg
or
push
add
jns
lret
dec
in
mov
push
or
pop
adc
out
or
mov
and
loop
pusha
outsl
dec
or
pop
adc
and
pop
push
jb
push
jmp
cwtl
cld
adc
adc
ljmp
mov
pop
and
call
movsl
add
decb
lcall
dec
cli
adc
or
cmp
sti
ret
fstpl
xor
push
adcb
pop
sub
pop
pop
inc
sbb
sub
imul
cmp
call
jmp
sub
sti
addl
rorl
or
imul
or
clc
lock
and
pop
mov
lds
xor
out
fnstsw
dec
mov
pop
sub
and
add
mov
jl
sub
xchg
inc
xor
iret
fnsave
add
bound
clc
jne
out
jmp
mov
cmp
insb
mov
loop
or
pop
push
cli
add
jg
icebp
mov
adc
mov
xchg
add
push
adc
je
movsb
mov
cs
negl
mov
jmp
mov
xchg
sub
clc
loope
in
and
or
add
pop
xor
cwtl
mov
add
jnp
jbe
orl
rcr
mov
push
arpl
mov
mov
adc
jecxz
pop
cld
pop
or
add
adc
jb
push
pop
in
cmp
dec
and
and
es
imul
jg
sub
bound
or
fidivrs
inc
mov
pop
fldenv
popa
mov
data16
jge
mov
cmpb
loope
pop
dec
cmp
jmp
xchg
sub
pop
jb,pn
aaa
popa
neg
loopne
push
subl
add
ds
add
push
add
das
lods
lret
jmp
outsl
sub
fnsave
push
jecxz,pt
imul
icebp
popa
pusha
mov
scas
stos
and
mov
orl
inc
sub
aas
jnp
push
fisttps
mov
jo
cs
push
add
mov
cmc
mov
add
pop
cmpl
in
daa
jle
lret
popf
jo
dec
roll
sbb
cwtl
mov
mov
or
test
adc
add
lds
stos
lret
xchg
xchg
ljmp
lahf
dec
sbb
fwait
xchg
and
sti
add
adcb
and
popf
imul
push
lods
add
sub
fmulp
inc
sub
pop
out
inc
pop
mov
fsubl
inc
inc
das
lods
inc
test
fildl
add
roll
test
cltd
int3
das
jmp
xchg
cld
xchg
lea
sub
pop
dec
daa
and
jl
mov
adc
mov
je
or
out
push
add
mov
mov
lds
mov
lcall
inc
push
sti
sub
jmp
jl
lods
jle
jmp
add
addr16
movsl
or
push
outsl
xor
aaa
pop
fsubr
xor
dec
and
enter
mov
pop
xor
scas
and
xchg
shl
or
jo
repz
pusha
cs
dec
push
jmp
repz
fdivp
mov
insl
adc
daa
movsb
adc
call
stos
mov
ds
adc
scas
pushf
push
adc
jnp
mov
xor
add
pop
mov
and
hlt
jne
inc
nop
bound
cmp
xchg
push
xor
popa
add
mov
sub
rcrb
lahf
pmullw
insb
and
push
cmp
out
idivb
push
cmc
call
sarb
sub
xchg
jl
cli
neg
stc
imul
push
pop
adc
xor
mov
inc
pop
cmp
pop
add
lahf
jg
lock
loop
xlat
dec
mov
jmp
jge
jae
cld
push
jb
stc
in
sbb
xchg
into
stc
les
pop
jmp
imul
and
fiadds
jno
dec
inc
in
dec
add
cli
sub
lret
aas
arpl
je
push
addb
push
jge
cmp
mov
mov
sets
ja
lret
into
inc
xchg
fisubrs
data16
mov
jns
imul
pop
leave
xor
ja
lea
xchg
movsl
not
adc
mov
fdivrp
mov
xor
adc
jmp
push
gs
mov
popa
sbb
das
xor
sub
std
jecxz
xorb
add
adc
mov
out
ds
fadd
push
and
roll
add
dec
add
push
mov
daa
neg
hlt
mov
inc
adc
les
adc
loope
dec
sub
mov
add
cmp
pop
roll
inc
xrelease
test
or
aam
test
xor
mulb
jmp
add
int3
inc
and
pop
int
push
push
add
adc
push
in
mul
mov
lahf
mov
or
mov
push
mov
shl
add
fadd
push
mov
stos
mov
mov
pop
pop
mov
lds
inc
push
jmp
sbb
sub
inc
adc
dec
cld
andb
lods
adc
into
aas
out
test
in
dec
add
arpl
pushf
add
push
jns
xchg
dec
push
push
inc
jle
jge
or
inc
mov
adc
inc
add
lea
das
sub
jo
or
jmp
mov
xor
inc
or
add
xorb
sub
xor
in
mov
or
mov
pop
cmpsb
pop
clc
or
out
or
enter
mov
in
aad
sub
xchg
or
int
out
repnz
jp
jmp
jl
add
cmp
cwtl
insl
inc
fs
cld
mov
pop
or
in
cmp
into
in
rcrb
andb
mov
in
pop
xor
clc
fmull
push
inc
sbb
imul
mov
sbb
pop
xchg
sarl
stos
subl
repnz
stos
repz
test
ret
call
lret
stos
int
push
pop
lret
or
xor
xor
inc
pop
cmpsb
xchg
loopne
push
jmp
mov
xchg
div
out
shll
ror
push
daa
sbb
loopne
sub
ficompl
loop
fadd
sub
pop
xchg
ret
les
and
jbe
and
movsl
imul
jl,pt
push
inc
push
pop
xlat
and
sub
jl
clc
dec
or
mov
rcl
arpl
daa
jbe
inc
sbb
push
jmp
mov
inc
imul
jmp
push
outsl
adc
inc
sub
fcomps
insl
inc
jecxz
or
rcll
jmp
xchg
or
push
push
les
fcompl
cmp
aam
adc
push
sub
lcall
sbb
add
jo
pop
or
sub
jle
push
pop
loop
adc
inc
in
fucomp
sbb
inc
lret
dec
or
out
out
por
inc
mov
push
or
inc
rcll
adc
xlat
pop
neg
nop
lds
fs
pop
add
repnz
leave
jp
jge
sti
add
dec
out
adc
imul
dec
push
movsb
xchg
mov
adc
mov
lds
cs
inc
jle
cmp
je
pop
mov
mov
sbb
inc
push
cmp
or
cmp
addr16
shlb
out
and
lret
add
fsubs
cwtl
testb
or
add
lods
pop
fmul
jmp
cmp
pop
mov
pop
out
mov
ret
call
fs
jne
adc
and
orl
aad
cltd
bound
adc
out
adc
pop
jl
inc
xchg
sti
fnstsw
push
jecxz
in
not
mov
xor
lret
mov
jo
and
cmc
sub
divb
arpl
jnp
mov
int3
add
push
lock
js
mov
xchg
mov
push
stos
mov
outsl
addr16
add
fadds
pop
push
push
dec
sti
push
mov
lock
mov
clc
jo
push
xorb
jl
popa
sbb
dec
rorl
into
inc
sti
pop
cwtl
xchg
pushf
add
sub
mov
aam
pop
stc
mov
enter
mov
pop
inc
mov
outsl
inc
orb
mov
sarb
xchg
and
mov
push
stos
in
push
lahf
andb
adc
movsb
push
or
dec
xor
sahf
lods
fwait
add
lret
imulb
mov
cmp
sub
orb
add
xchg
pop
and
or
test
xlat
fst
ror
lock
push
xchg
dec
jmp
fwait
cltd
shrb
test
add
inc
fadds
sub
inc
inc
add
sub
dec
push
shrl
sti
neg
dec
or
jmp
xor
jns
xor
fs
das
lock
xchg
jge
shlb
lahf
jge
cmp
cmp
repnz
sub
scas
and
addl
sbb
or
adc
or
sbb
iret
std
jmp
popf
je
fdivrl
xor
sbb
movb
sub
std
dec
push
sbbl
or
lock
adc
sbb
inc
imul
adc
imul
add
push
and
dec
lods
cmpsl
push
mov
pop
push
push
pop
push
and
push
adc
adc
cmp
add
cmp
int3
subb
sbb
addr16
dec
add
or
in
shlb
loopne
mov
in
fnstenv
movsl
nop
or
fildl
inc
neg
push
mov
jmp
mov
cwtl
ret
or
push
ja
inc
mov
cmp
jmp
lss
subb
shl
adc
or
and
mov
cli
cmpsb
dec
fsubp
cmc
stos
icebp
inc
cmpsl
rorb
push
or
add
pop
push
repnz
xchg
mov
xchg
push
in
jle
xchg
icebp
jle
pop
and
xchg
mov
xor
add
push
dec
outsl
sbb
popf
xlat
push
pop
mov
dec
mov
dec
mov
cs
je
sahf
lds
inc
or
jo
je
xchg
in
test
ffreep
fstpt
lds
add
mull
bound
push
mov
pop
sub
xchg
push
mov
sbb
sarb
jae
and
sub
nop
mov
cli
jmp
test
fildl
push
add
fsubs
sbb
cwtl
pop
push
out
or
std
push
jmp
adc
in
rol
adc
mov
adc
jmp
mov
pop
push
mov
lret
lea
dec
ds
xor
jmp
push
icebp
mov
addr16
pop
or
in
stc
add
push
mov
lods
out
pop
shlb
add
adc
cmp
jbe
or
pop
call
add
stc
mov
lds
ljmp
cs
seta
mov
fidivs
xor
mov
xchg
out
jo
lds
loop
push
add
aaa
and
cmp
xchg
test
or
movsb
cld
jmp
add
lds
cmpsb
movsl
mov
xchg
add
add
test
push
clc
push
mov
cmovnp
xchg
pop
jae
pop
mov
sub
lahf
aas
outsl
xor
jno
js
mov
scas
lods
inc
loopne
mov
add
dec
daa
pop
and
xor
ja
inc
sub
test
inc
stos
add
into
dec
stc
pop
xchg
lcall
inc
add
inc
addr16
clc
es
je
je
dec
cmpb
sub
mov
aam
in
xchg
sti
je
jmp
mov
shll
cmp
mov
cmp
jle
add
push
mov
xor
mov
cmc
daa
js
add
mov
xor
aad
mov
ds
cmpsl
lea
mov
cmp
ret
sbb
add
rorl
sub
loope
and
adc
out
add
stos
mov
or
jmp
shr
pop
add
push
pop
inc
mov
test
push
jmp
nop
cmp
mov
imul
cld
jae
ret
adc
mov
fistpl
ret
inc
push
sub
adc
and
in
mov
add
push
adc
jae
inc
inc
jmp
hlt
sbb
sbb
shll
push
cli
add
or
jg
xor
jp
jle
xchg
dec
sub
pusha
cmc
nop
adc
int
or
mov
les
adc
les
mov
rolb
jmp
data16
and
fdivrl
pop
mov
pop
xlat
ljmp
lods
pop
cmp
pushf
or
mov
xchg
pop
sbb
inc
cmc
cmp
ret
imul
xor
stos
mov
stc
sbb
icebp
mov
pop
jg
sbb
gs
imul
pop
push
add
enter
pop
repnz
scas
pop
mov
aad
roll
push
pusha
push
or
sub
or
cmpsl
cmp
jns
movsl
movsb
outsb
jae
int3
cmc
es
push
mov
and
push
or
in
repz
add
pop
sbb
pop
or
inc
cmp
ljmp
roll
out
adc
cmp
jne
out
jo
jmp
movsb
cld
or
mov
std
pop
pop
jg
iret
xor
dec
mov
out
mov
inc
inc
jmp
and
pop
stc
cmp
dec
leave
dec
addr16
rcr
daa
cmp
in
sub
dec
xor
sub
mov
cmc
roll
cmpsl
pop
std
and
jno
pushf
push
sub
mov
lds
nop
fs
push
test
adc
popf
cmpsb
mov
or
aam
mov
fnstcw
lahf
or
add
ret
add
in
es
dec
pop
sub
dec
in
mov
sbb
dec
clc
jbe
pusha
mov
or
fildll
jmp
jae
jecxz
js
je
mov
mov
out
or
push
pop
sub
push
add
ja
add
jne
pcmpeqw
in
fdivs
xor
in
andb
jmp
or
sub
push
sahf
jnp
lds
loope
call
popf
push
push
lods
sbb
ljmp
mov
repz
cmc
sti
dec
push
mov
rcll
inc
jbe
or
xorb
cltd
mov
ret
mov
mov
inc
cld
in
dec
mov
pop
push
add
rclb
aaa
mov
mov
push
mov
sti
dec
lods
push
test
add
xchg
mov
shr
or
daa
adc
loop
je
push
add
imul
test
lahf
imul
lret
inc
or
cmp
sub
imul
mov
xor
jl
inc
mov
dec
xlat
or
push
add
dec
dec
ljmp
jle
add
mov
int3
mov
cmp
inc
das
int
cmp
cmp
out
mov
fisttps
xchg
pop
stos
add
loope
push
gs
daa
mov
add
das
mov
xor
cwtl
sub
jle
jmp
sub
cmpsb
inc
jno
or
loopne
push
dec
cmp
les
and
mov
push
pusha
sub
mov
aad
enter
loopne
dec
adc
dec
sub
dec
jecxz
xchg
mov
mov
out
jge
daa
aas
lock
jbe
xor
cld
sbb
mov
cs
jne
testl
or
es
inc
xlat
sub
iret
inc
jmp
mov
shl
clc
mov
sub
lds
out
pop
shufps
pop
pop
inc
lcall
pcmpeqb
dec
out
icebp
add
inc
cmp
mov
sbb
mov
or
jle
pop
pop
out
inc
ret
add
fcoms
or
or
sahf
adc
and
or
push
add
push
pop
inc
jmp
push
cmp
cwtl
inc
mov
test
jne
push
push
xchg
jb
ja
jns
aas
shrb
pop
inc
lea
mull
push
bound
leave
and
stos
adc
push
xlat
and
mov
fdivr
adc
sbbl
or
pop
xorb
sub
in
push
dec
aas
addr16
popf
call
add
icebp
sarb
enter
jbe
dec
jns
adc
push
stos
jg
fisubrs
inc
sub
ficoml
or
cli
inc
cld
adcb
negl
add
mov
push
push
cmp
and
out
je
outsl
xchg
out
rorb
andb
dec
stc
mov
cmp
push
ss
mov
aam
push
add
loope
in
jg
cmpsb
push
fwait
sti
dec
and
xchg
imul
xchg
dec
add
ret
add
mov
push
sub
icebp
and
fs
add
xchg
pop
mov
cmp
cld
or
mov
jb
xor
sbb
push
add
xadd
insl
jp
pop
or
mov
push
pushf
test
jge
inc
mov
push
cmp
adc
xchg
add
jmp
movaps
ret
sarb
push
arpl
stc
in
and
adc
inc
or
jecxz
jl
cld
cs
daa
sub
lds
xchg
pop
add
aad
adc
pop
sub
insb
jmp
jp
jno
loop
pop
jle
sub
xor
cmp
jmp
add
mov
push
daa
jnp
shlb
out
push
scas
call
jno
cs
aas
in
inc
subl
insl
add
pop
push
stc
sahf
lret
dec
xor
cmpb
imul
xchg
jmp
pop
shr
lcall
cmp
xchg
xchg
xor
pop
aaa
adc
and
aam
jmp
add
or
mov
inc
bound
add
adc
mov
cmpsl
inc
enter
or
fldl
popf
mov
push
push
inc
cmp
jmp
stos
sub
test
and
fcomps
nop
adc
sub
cmp
out
sub
clc
inc
inc
and
je
or
pop
imul
cld
inc
ficompl
enter
call
jmp
cs
mov
sahf
iret
or
pusha
sbb
imul
add
xor
in
xor
ss
test
sub
lock
nop
xor
cmp
pop
cs
nop
fcomps
mov
pop
push
jbe
enter
add
jg
push
mov
ret
pop
push
movsl
mov
ffreep
jb
outsl
movsb
add
rcr
jge
roll
inc
jle
xor
lret
or
arpl
rorb
leave
insl
fabs
add
repnz
popf
adc
ljmp
sub
or
mov
sub
gs
andl
mov
shlb
bound
xlat
int3
adc
lods
sub
clc
inc
in
dec
lret
das
fiadds
aas
arpl
pop
cli
mov
cmp
imul
xchg
loop
inc
push
pop
adc
jp
mov
adc
adc
cwtl
cmp
rolb
add
js
test
mov
test
push
bound
mov
xor
mov
cmpsb
jne
jle
inc
ja
sbb
pop
push
xchg
cmp
mov
jmp
mov
mov
jmp
mov
pop
flds
mov
out
not
mov
lods
ss
mov
enter
addr16
dec
js
cmpb
dec
add
push
psllw
outsb
jae
pop
xchg
lds
push
and
or
fcom
jl
add
rcll
stc
popa
add
or
or
jl
push
jg
sbb
jae
jle
dec
cmc
xchg
mov
dec
sub
insl
pop
test
mov
lret
dec
pop
sti
inc
shlb
fistps
push
add
jmp
ljmp
inc
leave
lret
cmp
nop
ljmp
in
js
pop
push
movsb
jl
fstl
xchg
xor
mov
dec
test
cld
mov
test
fdivl
jmp
sub
dec
push
imull
lret
xchg
or
push
loop
test
cmp
mov
push
pusha
inc
mov
dec
mov
cwtl
outsb
or
push
roll
scas
add
sarb
mov
rcrl
fildl
in
xor
sub
push
cwtl
jecxz
mov
cmp
mov
sbb
movsb
push
or
pop
and
fists
ficomps
xchg
subb
cmpsb
push
xchg
loopne
loope
adc
adc
stos
dec
nop
jp
jmp
push
jae
daa
cmc
xor
push
add
inc
jno
xor
mov
mov
inc
cmpsl
inc
jae
mov
mov
xrelease
mov
fidivrl
and
mov
jge
incl
or
and
idivb
jecxz
inc
sub
cmp
movl
or
xchg
jge
lahf
or
fs
sbb
ljmp
sbbl
sub
xchg
add
add
xor
punpcklbw
loop
shll
insl
mov
mov
outsl
pusha
jo
mov
pop
adc
mov
or
mov
js
mov
sub
xchg
add
add
pop
add
cmpsb
inc
insb
xchg
mov
cmp
out
add
add
mov
push
and
sub
mov
idivl
dec
cmc
jmp
inc
and
mov
push
xchg
cs
xlat
mov
aam
xor
add
push
mov
push
in
mov
inc
loop
repnz
push
fsts
js
mov
inc
and
daa
shrb
mov
call
test
dec
pop
pop
ret
fidivrl
out
dec
roll
dec
sbb
cmpsb
pop
mov
or
mov
outsb
lock
hlt
lock
cmp
pushf
aaa
push
inc
pop
inc
push
jl
dec
sbbl
xchg
pusha
pusha
and
fdivrs
sub
sub
or
mov
mov
imul
sub
cmp
sub
or
test
test
cli
add
test
or
cwtl
add
push
or
ja
inc
dec
add
pop
xor
pop
les
jle
es
clc
add
push
aam
add
inc
es
test
shrb
stc
adc
testl
pop
add
in
mov
mov
aam
mov
jl
mov
jmp
mov
iret
sbb
jo
mov
mov
push
cmp
and
jae
cli
pop
or
loop
cmp
sbb
jg
sbb
decl
outsl
in
out
mov
xchg
inc
add
filds
jle
push
pusha
jle
mov
sbb
rolb
dec
sub
mov
xlat
or
dec
cmp
add
cmp
aaa
rcll
inc
scas
neg
mov
add
add
sbb
push
or
sub
dec
push
movsl
mov
adc
loopne
pop
mov
ffree
in
fcompl
icebp
out
push
enter
in
or
push
or
loopne
cwtl
sub
xor
in
popa
pop
in
jmp
xor
mov
std
pop
sub
jns
inc
xchg
xchg
xchg
pop
dec
daa
and
pop
pop
repz
ret
jmp
or
and
xchg
fists
jl
sub
push
mov
fistl
gs
icebp
orl
or
sbb
ds
sbb
cmp
push
addr16
ret
mov
add
dec
and
or
push
push
or
xchg
subl
cli
mov
movsb
mov
repnz
rolb
leave
sub
xchg
jl
lahf
and
or
mov
push
jno
push
insl
xor
loopne
jl
jg
mov
cmp
or
test
mul
pop
jle
mov
into
and
xchg
push
subl
jmp
outsl
adc
arpl
cmp
mov
add
xor
jge
arpl
js
scas
subb
mov
insl
pop
push
das
ja
sub
pusha
pop
pop
jge
jmp
cli
cmp
pop
jmp
or
mov
pop
divl
pop
or
into
mov
out
xchg
adc
out
pushf
xor
add
int
jmp
add
mov
or
push
xchg
add
cmp
and
cmp
mov
xor
xchg
lahf
sub
fwait
cwtl
or
sub
notl
out
mov
add
jmp
add
movsb
dec
pop
jne
mov
jg
shrl
sbb
test
xor
cmc
xchg
ficomps
shlb
and
call
ret
sbbb
shll
dec
sub
cmc
test
or
pop
inc
outsl
xchg
stos
test
fs
dec
pop
rcrb
mov
cmp
cmp
xchg
mov
jmp
and
add
je
out
in
hlt
inc
mov
in
lahf
lds
push
jmp
loop
cmc
jns
dec
pop
sbb
cwtl
pop
imul
or
daa
sbbb
or
push
outsl
loope
xchg
aas
add
jg
dec
stos
in
add
or
das
push
push
mov
data16
in
mov
xor
mov
lret
lahf
iret
cltd
movsl
jb
mov
push
jmp
in
ret
sub
cmp
pop
mov
inc
cli
neg
in
mov
jle
lds
sti
and
imul
movsb
mov
cmp
hlt
dec
addb
xlat
or
pop
pop
mov
inc
push
das
pusha
dec
stos
and
mov
jbe
rcll
dec
sbb
mov
mov
push
inc
aad
repnz
lods
sahf
pop
adc
inc
pop
or
lret
ljmp
cwtl
fistl
addl
insb
lret
push
loopne
loop
cld
mov
bound
in
cmpsl
push
popf
adc
pop
clc
ret
add
call
push
sbb
inc
jl
and
push
pop
and
orb
push
jecxz
ret
lret
pop
jo
xor
xchg
inc
dec
shlb
call
in
push
mov
mov
out
xor
iret
stos
jmp
pop
cmp
cmp
xor
incb
lock
sbb
mov
fcmovnb
lret
shll
loop
addl
fs
int
sarl
andl
jle
pop
pop
rorl
dec
dec
add
pop
insb
fucomp
jae
daa
push
jmp
loope
push
das
add
ja
adc
shll
sbb
inc
cmp
ds
push
aam
repz
jmp
pop
shr
and
pop
mov
xor
loopne
add
loop
je
pop
fldl2t
inc
push
mov
mov
cmp
xor
push
mov
test
jecxz
repnz
fmull
and
push
fstpl
and
aas
pusha
fmull
ljmp
xchg
stc
clc
call
outsb
shrl
inc
nop
lock
mov
pop
lret
or
ret
xor
or
mov
inc
cmp
inc
sub
or
in
mov
add
fs
fsts
cwtl
loope
cmp
in
testl
out
mov
pusha
dec
gs
clc
xor
sub
jbe
mov
fbld
dec
add
jmp
mov
adc
loop
call
push
scas
jle
arpl
or
jmp
call
cltd
les
push
test
les
insl
add
jmp
jns
pop
xchg
ret
inc
cmp
ss
add
dec
ljmp
stos
jmp
cmpl
inc
and
ffreep
ljmp
es
shrl
sbb
js
jns
fnop
sub
dec
xchg
dec
sub
inc
shrb
in
and
out
add
pop
out
inc
push
fs
xchg
cwtl
mov
shl
sub
add
dec
and
inc
out
and
sahf
fidivs
inc
dec
sarl
xchg
push
xor
mov
mov
cmp
mov
lds
ja
mov
sub
lahf
xchg
xor
ret
int
bound
jo
add
movsl
adc
ss
out
add
pop
testl
sti
mov
xor
mov
sbb
add
mov
inc
call
jmp
test
cmpsl
test
mov
cmc
add
pop
rclb
add
dec
bnd
dec
addr16
sub
mov
mov
fisubrl
ret
das
int
jmp
or
xchg
clc
in
add
dec
fwait
push
add
inc
repnz
jmp
adc
mov
sar
inc
add
sub
dec
cmp
and
cld
mov
adc
or
pop
pop
push
xlat
mov
cmc
xchg
add
and
sub
push
shll
and
mov
movsl
dec
cli
xchg
test
cwtl
stos
jb
add
scas
mov
daa
pop
push
and
jmp
imul
mov
adc
mov
cmc
or
mov
fildl
xchg
fwait
xlat
loop
jl
add
and
sbb
push
ja
sub
add
jmp
xchg
push
in
insb
jno
sub
andb
mov
adc
clc
std
sub
leave
nop
adc
andl
cmpsl
je
dec
enter
out
jno
rorl
clc
add
stc
jns
jb
add
mov
add
outsb
clc
adc
cmp
sub
and
pop
xor
jmp
mov
add
fs
push
pop
pop
mov
mov
mov
xor
add
lock
fisttpll
or
addr16
add
out
xor
jl
pop
push
lcall
orl
sbb
cmp
and
mov
inc
loope
cmp
ss
cmc
add
jmp
inc
cwtl
cmpsb
add
aas
int
orb
shlb
or
mov
add
jge
add
add
mov
sub
cli
jl
andb
adc
in
add
sbb
inc
push
inc
sbb
jg
jno
pop
adc
add
mov
add
adc
jmp
cmc
push
pop
jmp
add
stos
mov
add
enter
aad
cmpsl
adc
push
jg
adc
andb
fadds
inc
xor
mov
ds
xchg
out
outsb
repz
xchg
movsl
adc
pop
pop
clc
cltd
loope
stos
cmp
dec
adc
add
cltd
es
or
sarl
jp
mov
xchg
test
loop
ja
insl
xor
das
test
sarl
add
sub
and
sbb
ss
jbe
jo
sti
cmpsl
xlat
aam
inc
iret
push
divl
adc
xor
push
rorl
lmsw
das
movsl
pushf
rcrb
lret
pop
dec
or
popa
out
movsb
add
xchg
push
or
push
mov
push
lock
ljmp
fadds
sub
inc
stos
outsl
pop
outsl
clc
out
pop
orb
cmp
in
lcall
pop
cld
mov
gs
rcrl
lods
dec
stos
pushf
cmp
dec
mov
gs
sbb
punpckhwd
stos
sub
sarl
das
nop
fnstenv
push
pusha
push
scas
inc
jge
pop
mov
sub
jg
test
or
pop
shl
pop
push
shl
sub
xchg
adc
cmp
mov
mov
dec
mov
sub
mov
or
pop
xchg
add
cli
cld
sub
pop
repz
mov
in
add
or
loope
push
inc
ja
scas
push
pusha
pop
lret
or
mov
inc
xchg
fnstcw
rcrb
pop
ds
sub
js
or
jmp
xor
mov
push
cmc
mov
fsubl
dec
lds
sub
lret
xlat
cwtl
xchg
push
cmpl
jg
lods
and
xchg
inc
adc
xchg
stc
mov
dec
jno
push
lock
sub
je
stos
lret
mov
adc
jge
mov
pop
push
test
pop
daa
mov
ficoml
testb
or
ret
fsubrs
rcl
aas
bndstx
mov
outsb
mov
out
insb
sbb
notb
les
inc
mov
repnz
inc
pop
push
test
and
xorb
jo
js
in
mulps
cmp
lret
sarl
push
push
cld
icebp
jmp
pop
test
push
into
pop
sbb
jnp
js
aam
incb
sbb
fbstp
jmp
jno
mov
add
cmp
lods
sub
fimull
fcoms
or
add
aad
icebp
sub
pop
pop
and
jmp
lret
pop
mov
mov
idivl
addr16
jmp
loop
enter
int
rol
popf
mov
dec
mov
mov
cmovg
push
iret
fidivrl
icebp
loopne
bound
xor
test
cs
std
mov
xor
rorb
jbe
pop
or
sub
test
mov
dec
adc
sti
add
xchg
inc
jl
push
add
pop
jmp
fstpl
mov
adc
push
pop
push
in
dec
outsb
and
popf
fiadds
dec
aam
cmpsb
stos
sub
cmp
je
pusha
sbb
mov
nop
sbb
cmpsb
incb
xchg
and
int3
push
jmp
mov
pop
stos
scas
jg
out
push
push
fs
adc
test
jl
int
das
test
jnp
cmpb
xchg
pop
or
push
stc
das
jne
mov
fiaddl
or
fwait
cvtps2pi
pop
pusha
jmp
inc
push
stos
mov
xchg
adc
or
imul
or
mov
imulb
arpl
in
cs
and
and
nop
push
adc
and
cmp
add
flds
lcall
test
inc
fs
je
or
xor
in
pop
mov
mov
dec
in
aas
pop
dec
push
stos
data16
andl
add
sub
loopne
push
push
mov
jo
sbbl
rorb
cld
std
leave
stc
rcll
inc
orb
dec
call
fs
rcll
mov
loope
sahf
insl
add
inc
dec
fldt
enter
push
or
leave
xor
pop
lea
pop
push
sbbl
aam
adc
inc
pop
add
add
lods
add
pusha
pop
or
in
pop
scas
mov
jg
lret
dec
dec
dec
cmp
sbb
xchg
sti
pop
repz
pop
ss
lock
enter
adc
pop
jbe
subb
sub
mov
jg
aas
movsb
adc
push
push
pop
push
pop
add
pop
push
mov
dec
and
jmp
mov
addl
or
sti
out
sub
aaa
xchg
push
mov
adc
or
and
jle
xor
repz
dec
add
lds
mov
in
xchg
arpl
out
mov
cmc
and
arpl
push
scas
mov
popf
shlb
or
mov
rcrl
sbb
xor
and
push
adc
stc
sbb
mov
cwtl
clc
in
or
jle
push
inc
test
push
popf
add
add
xor
inc
or
shl
popf
fcomps
pop
out
mov
jp
mov
and
and
jmp
push
add
push
dec
add
add
mov
mov
outsl
push
ss
test
or
or
mov
fdivrp
inc
stos
xor
test
dec
shlb
in
pop
sbb
shrl
pop
push
inc
push
test
cmp
add
mov
mov
call
add
inc
xchg
outsb
scas
and
inc
in
addb
lds
xor
pop
xchg
pop
cmp
xchg
shrb
rcll
or
aaa
mov
stos
int
das
inc
outsb
lock
pop
xchg
inc
fldcw
call
pop
bound
sbb
add
inc
adc
movsl
jge
enter
sub
cmpsl
and
das
divb
lods
loope
ret
test
sub
test
and
in
aas
add
adc
sbb
call
jecxz
xchg
mov
inc
jmp
icebp
mov
mov
daa
cld
je
rolb
push
push
repnz
daa
xchg
rcr
push
push
add
xchg
jae
sub
scas
shrb
xor
and
inc
aad
rcrl
push
ret
je
rolb
rolb
popa
data16
nop
xchg
or
jnp
daa
add
fstpt
pop
add
inc
mov
or
xor
popf
jo
xor
imul
push
jmp
mov
jl
jl
dec
stos
icebp
cmp
or
mov
fwait
pop
pop
leave
ret
aam
jmp
inc
xor
lret
mov
dec
push
jno
in
test
cmp
dec
jmp
out
xchg
hlt
lcall
insl
insb
pop
mov
iret
push
dec
jmp
repz
lcall
rorl
addb
jl
xchg
jne
cwtl
pop
jle
jmp
xor
push
sti
pusha
test
push
mov
push
inc
jb
add
pop
pop
shr
popa
lock
push
call
loop
push
popa
and
xor
loop
in
fsubs
setnp
xchg
outsl
mov
lea
inc
rclb
mov
pop
ds
xchg
addb
mov
jnp
push
pop
clc
out
das
call
xor
and
inc
flds
jmp
mov
ret
je
filds
sub
jmp
orb
lock
push
push
jne
mov
cmc
stos
repnz
dec
or
fldpi
jb
pop
push
dec
push
pop
and
loop
in
cmp
cmp
push
jg
popf
xchg
bound
and
in
cmp
daa
les
pop
mov
push
aaa
push
repz
jl
add
or
jne
scas
or
mov
outsb
xchg
popl
push
in
xchg
lret
fsubr
testl
xor
js
sti
inc
adc
or
testb
inc
push
jnp
push
adc
and
add
outsl
movsl
or
jg
inc
cmp
jae
mov
lea
push
pop
enter
pop
jb
xor
push
neg
clc
dec
or
pop
insl
sbb
adc
imul
sarl
rclb
inc
mov
je
lock
lods
in
out
or
push
cmp
aad
call
mov
clc
mov
push
arpl
int3
test
cmpsl
insl
test
imul
jle
ljmp
neg
sub
aad
pop
dec
mull
gs
xchg
mov
xor
outsb
in
les
pushf
pop
adc
insb
push
xor
aas
fadd
mov
xchg
inc
fadds
sbb
arpl
popa
push
or
dec
jnp
pop
inc
pop
sbb
and
sar
push
push
in
lahf
mov
pushf
adc
or
inc
imul
lahf
dec
jmp
fld
movsb
inc
loopne
or
add
repnz
outsl
aas
or
pop
jnp
faddl
and
pop
jg
test
push
mov
mov
ret
rolb
scas
dec
push
mov
inc
out
cwtl
adc
jecxz
xchg
mov
movsl
xchg
and
sub
mov
sub
cld
pop
adc
jns
in
iret
pop
ja
sub
or
dec
jns
jns
mov
pop
xor
push
mov
jmp
push
pop
test
mov
or
cmp
ja
int3
or
stc
dec
xchg
inc
sbb
adc
test
test
sub
push
cmpsl
inc
ss
shl
pop
pop
sub
lahf
repz
xor
cmpsl
jp
nop
out
jmp
pop
xchg
mov
jg
and
imulb
push
fsubl
pop
push
dec
and
call
xor
cmp
cmpb
dec
jecxz
mov
pop
xchg
not
test
sub
emms
imul
movsl
mov
adc
pop
mov
ss
pop
addr16
push
push
sbb
daa
jbe
scas
pop
sbb
mov
or
push
pop
inc
dec
bound
pusha
sub
test
mov
xor
outsl
push
sub
jmp
inc
add
adc
pop
nop
mov
sti
pop
push
dec
mov
jnp
and
popf
jnp
arpl
sub
movl
xor
fiadds
push
mov
dec
push
mov
xchg
mov
push
mov
cmpsb
or
adcl
mov
and
sbb
xor
ds
inc
fwait
cmc
cmp
push
scas
lret
xchg
cld
adc
lds
popf
mov
ljmp
sub
push
sub
cwtl
pop
xchg
xor
pop
add
jp
mov
or
mov
or
push
push
leave
repnz
and
sahf
js
repnz
nop
cmp
jbe
jns
xorl
in
cmp
pusha
adc
dec
add
pop
jp
or
pusha
mov
jns
stos
mull
je
int
mov
cmp
mov
add
pop
push
sub
cmc
scas
mov
sub
xchg
dec
mov
lret
cmp
stc
xchg
out
aam
js
je
push
rclw
xchg
and
cs
int
sub
das
and
push
sahf
popf
add
outsb
mov
ljmp
inc
enter
cmpb
xor
lods
int3
sub
insb
xchg
jne
sub
dec
pop
fsub
psrld
pop
push
sar
adc
ljmp
testl
lock
push
jae
daa
push
pop
ret
loopne
loop
or
or
push
pop
jo
sahf
adc
sarb
or
pop
mov
cmp
addr16
push
lea
mov
add
sub
divl
and
mov
shll
shll
and
jp
loopne
les
adc
inc
jmp
shlb
cmpsl
popa
ret
dec
jg
jno
rorl
call
sub
es
dec
jo
rcrb
add
push
pusha
not
test
leave
addb
adc
incb
or
add
sub
push
mov
mov
ret
and
cmpsl
jg
mov
sbb
das
out
mov
mov
push
pop
pop
cmp
add
pop
push
test
jbe
inc
jnp
inc
out
popa
jmp
and
cmpsl
loop
mov
dec
pop
ret
pop
or
int3
sbb
push
pop
push
jo
dec
add
pusha
mov
pop
xor
sub
cmp
sbbb
dec
daa
call
or
pop
cmpsl
add
xor
cmp
inc
daa
mov
int
les
push
push
clc
adc
jmp
xchg
mov
push
pop
pop
mov
notl
cld
xchg
in
xor
rorb
jmp
jbe
mov
ss
int3
jns
push
ja
es
lret
or
cmpsb
and
aad
call
repz
mov
dec
or
sarb
push
mov
repz
cmp
jge
pusha
out
mov
xchg
inc
out
sbb
lods
or
mov
out
loop
jle
mov
nop
sbb
arpl
aad
push
jmp
mov
jmp
lcall
and
dec
pop
push
jmp
icebp
jle
sub
out
or
addb
aas
and
xchg
jmp
pop
inc
nop
xlat
cmp
mov
pop
fists
in
idivb
adc
jb
jb
sub
loopne
shll
ds
xor
jo
mov
lret
js
out
jne
dec
xor
pop
sub
cs
addb
fistps
test
ret
ret
adc
add
jecxz
or
jbe
int3
test
subb
dec
lea
popa
fldenv
lret
mov
push
adc
shlb
in
daa
or
or
jb
inc
leave
int3
jmp
fisttpll
adc
pusha
lahf
and
inc
push
addr16
pop
inc
mov
xchg
mov
adc
pop
lods
stos
add
lret
in
stos
sahf
or
mov
stc
in
mov
jo
jmp
and
sub
aas
lret
insl
fs
loopne
or
ds
mov
push
xchg
jne
icebp
mov
aaa
sub
push
sbb
int3
jge
jecxz
adc
and
fcos
dec
mov
inc
stos
cmp
pop
xor
bound
jo
sti
sbb
or
adc
lahf
ret
out
jne
sub
mov
out
les
mov
hlt
push
sub
cmp
sub
adc
movsl
pop
outsl
cld
test
imull
fnstcw
cmp
sub
xor
inc
mov
pop
push
loop
mov
les
mov
inc
mov
add
sub
add
pop
pop
cli
roll
push
icebp
adcb
popa
adc
bound
cmpsl
push
jns
inc
or
push
in
imul
rol
mov
pop
cmc
mov
outsl
loope
scas
insl
ljmp
xorb
daa
stc
add
movb
lock
repz
ljmp
adc
and
out
dec
lret
adcb
and
iret
jmp
inc
sub
out
into
adc
or
decl
jnp
add
sub
dec
ja
add
neg
jmp
mov
test
loopne
jnp
cmp
clc
daa
sbb
dec
int
push
outsb
inc
pushf
test
add
cmp
inc
outsb
inc
pop
test
jg
lret
adc
into
popa
dec
and
test
jbe
clc
not
rorl
jmp
push
movb
lods
push
push
mov
std
xchg
inc
add
jmp
jae
in
cmp
jb
add
xor
cmp
jg
push
pop
add
int3
xchg
jmp
mov
aam
add
aam
ja
push
cmpsl
sub
push
adc
sub
rorb
lods
sarl
jge
inc
mov
sub
into
int3
sbb
mov
test
add
gs
adc
movsl
out
jns
loopne
mov
xchg
push
pop
and
ds
sub
mov
movsl
fs
xchg
dec
scas
jge
sub
or
popa
inc
fstpl
pusha
mov
pop
push
push
rolb
sub
stos
cmp
jno
push
fcomps
dec
xor
inc
jge
in
pop
fnstenv
adc
jbe
mov
mov
push
jle
or
add
inc
xor
mov
cmc
jmp
cmpsl
das
pop
mov
inc
add
push
push
inc
or
sub
int3
sbb
in
rcl
mov
xor
inc
pop
mov
bound
mov
xchg
jmp
sbb
pop
mov
mov
sbb
gs
dec
adc
and
loope
or
iret
push
lahf
nop
sarl
add
or
dec
pop
hlt
in
mov
test
daa
dec
inc
notb
push
mov
dec
aam
rorb
jmp
dec
mul
aam
cmc
dec
cmp
popa
mov
aaa
inc
pop
or
ret
push
inc
jnp
sub
movsl
jmp
ja
xor
ret
and
pop
mov
stos
icebp
sub
js
ja
xchg
cmpsb
stos
lock
das
insb
cmp
loope
adc
aas
mov
cmp
xor
push
push
lret
pop
outsl
hlt
pop
inc
or
pusha
or
and
insb
dec
sub
mov
sbbl
dec
mov
mov
imul
cli
insl
and
cmp
mov
pop
test
jmp
and
jge
lods
xchg
xchg
fcoms
push
push
pop
mov
jno
inc
xor
adc
lods
dec
mov
dec
push
bound
sbbl
testl
push
push
sbb
jmp
xor
pop
ja
dec
invd
stos
rcr
ret
das
in
push
adc
pop
or
mov
pop
mov
mov
mov
fidivs
in
pop
mov
clc
ljmp
ret
xor
xchg
cmc
addb
lods
roll
xlat
cwtl
sub
subb
outsl
pop
push
pop
dec
xor
jmp
dec
test
hlt
shlb
scas
into
inc
dec
inc
pop
inc
and
fcoms
jmp
test
xchg
and
adc
dec
pop
and
pop
xchg
cmp
fucom
in
fists
and
sub
sub
pop
push
icebp
pop
push
aam
pop
cmp
adc
fbld
mov
mov
clc
pushw
mov
add
add
dec
ret
cmp
mov
push
inc
into
sbb
add
push
fsts
aaa
jne
and
shrl
loopne
adc
ljmp
mov
sbb
push
and
inc
sbb
push
aad
cmp
rcrl
mov
add
pop
mov
ja
scas
sarb
mov
add
les
push
jmp
rorl
pop
jmp
pop
add
inc
scas
mov
mov
rcll
lret
inc
dec
xor
sbb
in
cmp
jno
jp
pop
push
push
test
mov
out
inc
xor
add
pop
jle
test
fstps
lahf
jbe
inc
jmp
add
fcmovbe
shll
add
and
push
test
or
add
push
repz
jmp
hlt
lock
adc
lret
cld
loop
loope
sub
mov
sub
jnp
pop
lret
aas
popa
adc
fadd
jns
rcrl
nop
jg
notl
or
inc
test
daa
enter
jmp
push
xor
and
pop
adc
pop
pop
aaa
push
cmp
aaa
and
out
mov
xor
mov
add
repz
or
xchg
jl
push
jns
adc
in
dec
push
pop
sub
adc
clc
inc
sbb
xor
or
adc
mov
outsb
and
pop
popf
data16
jmp
inc
mov
xchg
pop
pop
sbbb
je
and
pop
adcb
lahf
fistl
out
pop
and
mov
clc
xor
dec
roll
xor
popa
aad
ret
and
inc
sbb
cmpsl
adc
mov
loop
push
xor
loop
mov
xchg
repnz
adc
aad
inc
mov
mov
pop
icebp
cmp
push
push
mov
stc
pusha
add
xor
jg
gs
xlat
sub
js
or
add
and
in
or
cmp
mov
or
and
jnp
cltd
and
mov
or
add
sub
dec
inc
or
sbb
daa
pop
movsl
test
insl
dec
cmp
adc
sub
push
xchg
sahf
or
add
add
testb
xchg
imul
insb
scas
xchg
test
add
mov
out
popa
jmp
fildl
mov
dec
pop
sub
out
stos
out
jge
mov
bound
lcallw
mov
pop
movsl
mov
push
mov
dec
pop
mov
inc
insb
add
cli
mov
dec
hlt
ja
jge
repnz
leave
lods
mov
in
sub
mov
fsts
and
or
ja
int3
xlat
out
mov
dec
enter
jmp
pop
pop
stos
xlat
rorb
xor
lcall
push
and
add
movsl
data16
adc
aaa
pop
addb
pop
je
lahf
in
and
xor
pop
std
add
push
mov
sti
jno
fdivrs
mov
add
and
xchg
leave
sbb
je
das
call
mov
inc
xor
call
sar
shr
lea
push
shrb
jne
test
mov
add
neg
push
push
or
and
push
xchg
jbe
add
fadd
mov
cmp
out
cmp
jo
adc
leave
dec
pop
mov
xchg
push
xor
cmpsl
pop
inc
stos
xchg
add
repz
out
test
pop
call
adc
sub
mov
into
inc
lock
lret
lret
sti
pop
mov
ljmp
stc
push
push
fdivl
rorb
jecxz
addb
jnp
scas
jle
add
icebp
and
out
push
mov
stos
add
mov
adcb
push
lock
push
mov
add
negw
loope
push
push
ds
ds
test
push
lock
pop
add
mov
popa
sub
hlt
cmpsl
icebp
negl
push
jne
cmc
push
push
push
jmp
nop
pop
push
pop
test
mov
pop
leave
pop
shlb
iret
dec
mov
mov
dec
mov
lret
mov
add
stc
pop
outsb
inc
sub
ss
jns
inc
in
icebp
aam
cli
data16
or
sbb
jmp
repnz
fidivl
into
enter
adc
in
mov
xor
scas
xor
or
or
out
dec
pop
call
xchg
push
mov
adc
call
mov
lahf
cs
sti
outsb
adc
je
add
mov
jmp
add
decl
fiadds
movsb
call
add
aad
mov
test
mov
icebp
sbb
add
popa
jo
or
xor
imul
or
push
call
popf
daa
shl
lret
mov
xor
jmp
aam
cmc
cmp
jmp
cmc
adc
jl
into
mov
push
mov
inc
xchg
out
imul
add
repz
add
cmp
pop
ja
xchg
pop
mov
add
mov
inc
mov
mov
pop
jne
cld
jmp
push
or
pop
je
or
ficomps
repnz
adc
mov
pop
je
or
shll
mov
movd
xor
xchg
xchg
in
cmp
dec
fsubr
je
mov
push
rol
call
test
gs
add
ss
in
pusha
rcrl
daa
outsl
pop
ret
pop
insl
cmpsb
mull
test
jne
popf
inc
jmp
sub
dec
and
xor
pop
xorb
scas
push
bound
push
sub
xor
inc
and
xor
xor
add
mov
cmp
xchg
inc
sbb
pop
pusha
inc
mov
mov
sahf
add
jl
enter
cs
mov
stos
push
gs
clc
mov
mov
push
mov
add
adc
xlat
test
jmp
pop
mov
shr
push
out
idivb
adc
cs
xchg
hlt
ljmp
loope
stc
imul
add
sbb
inc
jmp
js
or
out
or
mov
add
pop
adc
pop
jns
pop
push
push
jmp
test
jo
dec
push
inc
push
jmp
in
sub
subl
data16
popa
or
hlt
into
push
xor
fiadds
push
scas
nop
pop
movsb
xor
adc
cli
lret
pop
dec
addr16
mov
jbe
repnz
rep
inc
std
and
cmovl
insl
stos
call
mov
add
inc
orl
pop
xor
push
test
add
push
mov
sub
or
shll
jmp
push
add
mov
and
pop
push
or
jle
cmpsl
xor
push
or
sub
pop
mov
stos
pusha
push
stos
pop
cmp
sbb
mov
or
bnd
push
pop
sbb
adc
and
test
decl
push
jmp
test
add
roll
dec
inc
scas
mov
mov
cmp
inc
cmc
je
jno
sbb
pop
or
inc
loop
cmc
rorb
or
jne
xorl
daa
arpl
jmp
ret
sub
ljmp
adc
call
clc
gs
mov
ror
add
xor
fidivs
add
sub
mov
push
push
sahf
sub
cmpsb
push
imul
xchg
loopne
push
add
adc
jnp
cwtl
mov
cwtl
sub
lahf
xor
rol
xor
test
lret
sbb
pop
shr
roll
iret
in
lea
sbb
push
pop
shll
cmp
add
arpl
adc
add
out
fs
xor
icebp
jp,pt
stos
ret
outsl
stc
push
mov
pop
jl
adc
pop
or
dec
rolb
sub
insl
or
jmp
sarb
jmp
fstpl
mov
push
pop
fbld
shll
enter
call
lds
push
test
and
adc
sub
arpl
clc
lret
push
xchg
jmp
lods
pop
test
jecxz
xchg
xchg
xchg
jle
jle
pop
andl
jne
jg
ret
loope
jnp
jmp
add
mov
aaa
adc
mov
xlat
cmp
mov
mull
in
add
jmp
hlt
adc
push
dec
sub
stos
xchg
adc
jg
mov
or
loop
push
xchg
and
lahf
pop
inc
push
inc
dec
mov
movsl
push
pop
inc
xor
dec
and
lahf
pop
jb
cmp
cmpsl
testb
pushf
inc
push
inc
mov
and
xorb
out
sbb
add
nop
mov
loopne
add
pop
dec
sub
pop
cmpsl
xor
pop
cmp
adc
cmp
sbb
mov
decl
mov
das
sub
cld
imul
or
xchg
or
daa
jmp
das
mov
pop
imul
jg
or
insb
or
dec
or
dec
xor
cmp
std
sahf
jnp
loop
pop
or
or
fmuls
inc
mov
jnp
ja
ret
lcall
push
jne
add
repz
mov
mov
fwait
sub
inc
out
arpl
es
add
add
cli
adc
sub
push
or
test
div
add
sub
push
notl
lahf
add
push
push
adc
test
fstps
jmp
pop
pop
xchg
mov
or
sbb
adc
mov
jmp
xor
or
and
xchg
lock
into
jb
mov
inc
push
adc
dec
fstl
test
add
xchg
jmp
ljmp
adc
ja
jmp
add
sub
fstpl
sbb
ja
lds
adc
cmp
pop
mov
pop
mov
add
sub
insb
mov
bound
jmp
add
out
adc
fmuls
into
pusha
iret
fidivrs
scas
mov
rclb
add
fidivrs
fnstcw
push
roll
push
clc
insb
fimuls
mov
das
loope
jb
pop
push
jmp
mov
loopne
cwtl
push
mov
enter
cmpsl
xchg
insb
not
xchg
cmc
inc
sbb
pop
or
push
jmp
push
inc
jmp
and
fcomip
cltd
outsl
leave
sub
inc
push
or
rorb
mov
or
sub
adc
fdivrl
imul
movaps
test
rorb
pop
pop
jno
jmp
adc
inc
stos
pop
inc
call
dec
xor
sub
push
push
xor
jmp
repnz
pop
hlt
mov
inc
xchg
push
or
daa
sub
jmp
out
rcrl
add
push
flds
pop
inc
rorl
dec
notb
imull
pop
sub
push
cli
clc
dec
mov
into
outsb
test
sti
sub
pop
ja
push
pop
lret
loop
jg
xor
sub
and
ja
or
add
inc
rcrb
pop
lods
fcompl
add
stos
xor
mov
dec
pop
jmp
scas
pop
leave
push
aas
mov
jge
jmp
mov
mov
pop
jo
notb
xchg
dec
mov
imul
ret
cld
inc
imul
push
mov
inc
repnz
fcomps
int3
cli
dec
cmp
or
jl
stos
je
cli
adc
mov
jle
ss
xor
fstl
or
sub
pop
movsb
pop
fisttps
and
sub
push
jp
push
jg
subl
in
mull
push
frstor
mov
clc
insl
xchg
cmp
in
xlat
dec
clc
push
mov
test
cld
aam
mull
and
and
sub
or
pop
cmp
out
jo
xchg
jbe
pop
or
jne
aam
shrb
pop
pop
repnz
mov
sbb
daa
cmpl
sub
xchg
sub
jg
add
bound
jb
push
ret
fcoml
cmpsl
test
xchg
scas
fsubrs
dec
jbe
nop
in
dec
pushf
scas
xor
leave
sahf
ret
jecxz
sub
cli
jge
adc
jmp
out
ret
jne
mov
xor
in
lds
sbb
pop
dec
lea
jno
push
ljmp
and
dec
adcb
out
inc
add
in
lds
jmp
push
sbb
push
ret
mov
adc
jmp
or
add
cs
push
ljmp
mov
mov
cwtl
test
xlat
sub
push
es
mov
push
push
jnp
jmp
insl
adc
fdivl
and
and
sub
push
in
jle
jl
lods
jle
sub
ret
das
inc
adc
jno
cmp
ret
sbb
adc
adc
scas
sarb
fsubrs
int
outsb
iret
sub
push
or
fadds
nop
mov
push
jnp
das
insb
scas
xor
notl
addb
divl
cmpsl
jbe
or
jb
inc
push
fs
xchg
cltd
test
add
adc
out
sbb
stos
imull
add
movsb
dec
sub
jae
aam
sahf
jne
cmovnp
cld
cmp
jno
scas
stos
cmp
push
das
lock
negb
jmp
nop
aad
cwtl
lahf
mov
test
add
andl
adc
dec
jmp
pop
pop
repz
lret
inc
into
adc
mov
adc
mov
add
sbb
rolb
push
add
sti
add
mov
and
out
cmp
rcrl
push
enter
jnp
lods
movsb
lret
lea
push
push
mov
sub
lds
jnp
or
dec
adc
cmp
test
insb
pop
dec
daa
add
or
fidivrs
or
adc
xor
add
jl
flds
add
pop
mov
vdivsd
inc
adc
paddd
mov
and
push
push
push
cmpsl
rolb
jl
push
cmp
loopne
std
mov
mov
lcall
dec
push
les
gs
inc
loopne
loope
cmp
add
aas
insb
sub
les
push
nop
mov
dec
lock
inc
mov
sbb
or
mov
cmpsb
sub
cmpsl
add
pop
jnp
jmp
dec
stos
lods
inc
leave
sbb
jmp
sbb
mov
aas
sub
aas
bound
lods
jne
in
dec
add
divps
int
mov
fs
out
imull
mov
adc
xchg
sbb
iret
push
div
add
jp
push
in
in
mov
dec
loopne
add
add
cli
adc
pop
add
adc
jp
push
jbe
repnz
pop
dec
jmp
mov
ret
pop
cmp
or
mov
hlt
lods
call
jns
adc
cmp
mov
add
mulb
lret
push
mov
cmp
loop
sar
pusha
shrl
pop
loope
loop
xchg
rolb
mov
jne
rcrl
and
jb
dec
or
outsb
sub
loopne
xor
jb
test
jmp
lret
clc
rorw
adc
sbb
push
into
push
shl
es
add
ljmp
and
pop
mov
daa
loopne
popf
sub
jbe
fcoms
mov
dec
mov
dec
push
add
inc
mov
push
in
add
or
sbb
pop
push
or
test
push
xor
imul
mov
in
push
mov
dec
xor
inc
loop
or
mov
and
xorb
cmp
mov
dec
out
gs
stos
out
and
fldl
xchg
call
stc
mov
push
mov
or
jg
jg,pn
movb
out
mov
sub
hlt
ja
and
xchg
sub
sti
or
ja
and
js
aad
jmp
sbb
jnp
je
xchg
jmp
call
jbe
pop
sub
dec
test
push
movsb
jmp
ljmp
dec
mov
sub
pop
test
inc
das
push
xchg
push
add
inc
int3
or
push
add
and
sub
xchg
push
pop
dec
sbb
enter
or
addb
and
inc
mov
pop
add
adc
mov
push
add
inc
xchg
xchg
sub
dec
ret
cmp
loop
pop
iret
push
xchg
out
add
in
add
xor
jmp
jmp
lret
jge
jo
negl
dec
insb
decb
in
aas
mov
add
jmp
jecxz
xorb
push
mov
sbb
sub
call
int
sub
xchg
sbb
cmp
or
sub
mov
mov
inc
dec
xor
pop
cmp
loopne
pop
and
pop
mov
into
rcll
lcall
enter
adc
jle
sub
sbb
jmp
nop
xchg
flds
pop
jmp
jno
mov
outsb
out
jae
mov
xchg
movsl
cld
pop
bound
insl
add
push
dec
das
sahf
adc
jmp
lahf
add
push
clc
cmp
mov
cmc
mov
mov
pusha
testb
xchg
inc
add
adc
or
pop
sub
push
mov
mov
cmp
push
test
or
aas
pop
lods
adc
scas
gs
jmp
out
jo
xchg
pop
adc
pop
sbb
sub
push
pusha
jmp
adc
mov
pop
hlt
jae
aas
or
pop
inc
mov
mov
test
push
xchg
lcall
pop
jp
sahf
dec
jge
das
add
jb
test
adc
jge
mov
pop
dec
xor
outsb
push
or
ret
add
dec
mov
adc
jmp
add
aad
sbb
pop
in
and
mov
pop
out
fwait
fwait
pop
lods
test
add
mov
adc
lcall
jl
jge
pushf
push
pop
cmc
jo
setge
lcall
cmpsb
pop
add
pop
sub
sub
lret
js
push
mov
jmp
mov
dec
add
pop
mov
js
clc
jp
insl
or
cs
sub
pusha
pop
loopne
and
leave
push
add
jnp
arpl
rcl
or
popf
xor
or
lds
cmp
stos
xor
test
cmp
cmp
aas
push
stos
ljmp
mov
mov
push
insl
imulb
cmpsb
ljmp
loope
aas
pop
sub
icebp
jbe
daa
adc
je
cmp
pushf
imul
push
push
mov
and
or
pop
pop
ja
push
mov
push
jae
push
push
dec
pop
xchg
frstor
mov
sbb
pop
inc
scas
add
pop
les
test
dec
cmp
fsubl
and
jmp
and
inc
movl
pop
or
sar
push
sub
xchg
or
shrb
iret
ljmp
sub
add
stos
jl
add
stc
sbb
mov
jns
add
into
fistpl
adc
frstor
mov
and
xchg
pop
xor
shl
push
shrb
add
rcrb
in
cmp
pop
mov
pop
in
stos
push
lock
jo
xchg
push
mov
sub
bound
fcoms
sbb
mov
in
push
cs
clc
sub
cmovns
stos
and
scas
adc
aad
push
xorb
cmp
loop
mov
pop
cmp
push
or
pop
xlat
add
xchg
jb
add
cld
or
inc
xor
cmp
jns
shrb
push
faddl
imul
shr
adc
icebp
push
adc
jnp
cld
or
mov
inc
js
loopne
mov
cmp
lods
das
pushf
xchg
lahf
les
and
mov
fstpt
in
and
jecxz
out
inc
inc
cmp
jmp
dec
jo
jne
adc
or
ret
ret
jmp
inc
insl
iret
test
push
xor
fistpll
in
mov
push
bound
notb
daa
cmp
lahf
movsl
mov
add
insb
ljmp
fwait
xchg
test
push
cmp
lds
sbb
push
into
mov
mov
rcrl
stos
divl
leave
push
lret
dec
pop
shrb
jno
in
ret
or
push
xchg
mov
cmp
mull
xor
jns
mov
mov
imul
faddp
jae
hlt
or
js
add
pop
push
mov
sbb
idivl
jmp
sbbl
ret
dec
loope
gs
push
inc
cld
and
sub
xchg
insl
cltd
pop
add
adc
mov
or
subb
pop
xor
shrl
call
out
or
add
jo
mov
sti
sub
push
imul
nop
sqrtpd
or
pop
pop
push
ret
int
movsb
adc
and
jae
adc
adc
ret
or
pop
jmp
mov
nop
sub
add
cs
pop
int3
ret
xlat
dec
dec
repz
mov
add
icebp
js
inc
fistps
inc
jbe
add
pop
lret
int
popa
xor
pushf
push
dec
push
rcll
cmp
jmp
dec
pop
rolb
cmp
cmp
dec
ficoms
sub
sbb
sbb
mov
into
xchg
cs
jnp
rorb
scas
in
add
test
and
push
push
pop
shll
sbb
dec
sub
bound
or
into
cli
jg
inc
subb
jae
sub
and
ljmp
enter
imul
xchg
iret
test
daa
xchg
fstp
inc
jne
add
xor
push
push
scas
int3
ja
popf
pop
shll
jmp
mov
fistps
and
add
hlt
sub
push
fildl
pop
mov
jmp
das
or
push
into
add
pusha
icebp
shrl
rorb
daa
pop
pop
pop
mov
fldl
add
sub
push
ror
cwtl
pop
add
enter
jle
cld
fs
leave
pop
loope
imul
cmp
sub
jl
subb
adc
lahf
mov
add
fcomps
daa
sub
gs
adc
fdivl
dec
aaa
mov
fdiv
mov
ja
mov
pop
jle
xchg
js
fs
mov
sbb
inc
loopne
mov
and
jmp
push
mov
cvtdq2ps
push
addr16
repz
sub
push
loopne
pop
stos
fnstcw
ljmp
dec
loopne
add
sub
jmp
pop
mov
mov
sub
lcall
shrb
or
dec
fadds
ds
add
out
icebp
sub
loopne
sbb
fldl2t
push
cli
sbb
mov
pop
imul
pop
pop
mov
dec
push
popf
stos
cs
movsb
orl
add
pop
push
insl
mov
mov
sub
xchg
and
sub
lods
mov
xor
xor
sahf
and
leave
inc
xchg
imull
shl
cs
pop
and
in
push
adcl
sub
jo
add
inc
cs
aad
sub
xchg
movups
cwtl
jg
icebp
pop
jbe
or
adc
shll
adc
sahf
dec
lods
jp
std
xchg
ds
push
mov
aad
mov
xchg
inc
jnp
dec
sub
hlt
mov
mov
bound
ds
push
je
lds
stos
cmp
dec
add
inc
dec
jge
add
xchg
sub
pop
test
push
in
push
add
inc
call
sub
lcall
lock
xchg
in
call
js
pop
push
cmpsb
push
lahf
or
or
repz
push
icebp
xor
push
out
movsl
int3
sarb
iret
dec
add
mov
shl
inc
jb
lfs
int3
pop
popa
in
neg
movsl
or
jo
xchg
pop
xor
es
mov
test
jl
in
inc
add
mov
sbbb
pusha
nop
or
nop
pushf
mov
sbb
xchg
scas
iret
je
test
mov
cmp
icebp
push
add
imul
adc
cmovne
xchg
push
je
scas
out
pop
pop
or
mov
jl
mov
inc
mov
mov
push
pop
dec
xor
cmp
idivl
sarw
lock
repnz
mov
add
gs
test
adc
mov
popf
and
adc
or
or
in
loope
jecxz
ret
cmp
and
push
adc
push
pop
aaa
sub
movsl
add
or
stos
testl
push
pop
dec
inc
or
or
push
shl
popf
faddl
push
mov
lods
add
sbbb
fisubrs
xchg
or
or
xchg
mov
jge
add
std
stc
xor
out
imul
out
pop
test
adc
call
in
xchg
ret
adc
mov
lods
into
xlat
mov
sub
xchg
mov
popa
out
mov
outsb
lods
sahf
add
orl
addb
jae
cmc
pop
fprem1
dec
imul
mov
xchg
pop
fs
ljmp
adc
sub
loop
xchg
add
loopne
jmp
mov
push
mov
jbe
popf
shlb
mov
inc
out
loope
daa
data16
hlt
orb
xlat
outsl
xor
sub
add
iret
sbb
outsl
outsb
sbb
sti
test
mov
adc
add
mov
xor
push
mov
xchg
pop
dec
and
pop
shrb
repnz
fwait
loope
test
adcb
sub
and
outsb
jmp
ret
sub
cmp
sub
sub
rorb
mov
push
pop
inc
adc
loopne
mov
movsl
rcr
mov
gs
scas
ljmp
outsb
stos
adc
mov
or
push
dec
jg
mov
dec
xor
mov
fcmovu
cmc
mov
sbb
push
ret
adc
pop
pop
sub
cmpb
sub
adc
pop
lcall
clc
pusha
and
rorl
sub
in
imul
movsb
js
push
and
dec
pop
xchg
es
iret
out
xchg
or
fcomps
dec
xor
fsubr
or
cmp
or
test
mov
mov
fbstp
push
ret
adc
or
adc
mov
shl
pop
push
or
mov
rcrl
out
cmp
or
pop
xchg
addr16
movsl
inc
inc
mov
into
or
das
xchg
push
icebp
sub
cli
cs
jb
sub
pop
add
jg
lcall
enter
das
mov
jnp
lret
bound
test
mov
call
scas
xor
ljmp
jg
xor
inc
dec
dec
push
cld
push
mov
add
shl
ret
push
adc
jne
aas
add
mov
add
fwait
out
cmpsb
inc
ret
xlat
decl
fldt
pop
xor
pop
mov
and
pop
sbbb
mov
fcomps
inc
mov
insl
add
ret
xor
jmp
dec
mov
jo
push
pop
push
push
or
lret
popf
dec
xchg
cwtl
outsb
inc
fs
stos
push
popf
xchg
add
dec
mov
inc
push
and
jmp
cmc
adc
jne
das
jae
popa
xchg
xchg
jp
dec
pop
pop
push
mov
dec
dec
inc
out
or
add
jmp
adc
add
mov
and
testb
pop
jae
dec
xor
jno
and
out
sub
and
push
or
cmp
xor
shr
sub
negb
cmp
sub
or
pop
arpl
in
mov
mov
dec
das
xor
je
sahf
mov
data16
ret
xchg
dec
push
and
shlb
nop
ja
ss
dec
lds
subl
subl
push
jmp
int3
popl
hlt
in
insl
dec
push
mov
mov
and
jmp
enter
mov
sub
pop
pop
inc
subb
push
imul
xchg
movsl
and
andb
dec
add
push
sbbb
adcb
push
dec
xlat
pop
or
and
sbb
push
jp
mov
sbbb
or
pop
mov
or
add
adc
add
jo
cmp
push
push
pop
pop
ss
add
sti
testl
or
push
push
jmp
imul
inc
roll
jp
imul
fs
mov
in
in
int3
mov
dec
shrd
jp
les
das
or
shrb
ss
data16
loop
cmp
stc
mov
xchg
mov
scas
adc
sub
xchg
add
nop
cmpsb
test
xor
in
jle
dec
add
pop
lds
push
or
pusha
dec
in
mov
sub
cmc
sub
or
sub
dec
add
add
jmp
enter
sub
mov
sbb
andb
cmp
and
inc
xor
cli
sbb
xchg
sub
mov
sub
xor
fildll
dec
fdivs
movb
add
cmp
out
or
mov
sti
mov
fiaddl
aas
test
fidivrs
dec
ror
push
rcrb
movsb
cli
jae
pop
in
xchg
or
push
int3
stos
test
pop
out
cmp
push
or
pop
fucomip
xchg
outsb
xorl
fisubrl
or
inc
orb
push
mov
cmp
es
mov
repz
aas
pop
push
push
pop
ret
sub
push
add
stc
pop
and
icebp
pop
fstl
add
and
pop
add
fdivr
lcall
shlb
cmp
inc
dec
pop
fmull
out
inc
fs
add
pop
test
push
dec
sub
xorl
or
xchg
repnz
xor
stos
jno
bound
sahf
leave
scas
add
popa
pop
pop
insl
outsl
in
rcl
mov
test
mov
adc
jae
pop
pop
adc
out
fnstsw
faddl
cli
jg
xor
test
push
mov
ret
or
loopne
icebp
std
adc
cmp
sub
pop
rorb
dec
add
js
out
jnp
cltd
subb
adc
push
jmp
push
pop
push
mov
push
rcl
dec
mov
xorb
jmp
dec
jmp
push
lods
ds
push
mov
loope
xchg
mov
in
xchg
cmpsb
mov
mov
pop
ret
lds
add
jmp
inc
push
outsb
int
mov
push
inc
push
add
sti
ret
sbb
jg
dec
cmp
sbb
fstpt
xchg
and
dec
push
xor
movsl
jns
push
xchg
xor
insl
rolb
jmp
cmpb
mov
cli
or
test
test
rolb
shll
push
aam
jbe
sub
xor
inc
and
addr16
add
inc
aas
scas
adc
cmp
adc
xchg
sub
repz
push
xor
xchg
jle
xor
ret
add
xchg
adc
adc
rorl
fadds
sahf
or
movsb
stc
xchg
sbb
or
outsb
icebp
mov
mov
into
push
push
lret
roll
imul
xor
scas
push
mov
icebp
or
sbb
adcb
shlb
xor
dec
pop
pusha
jl
adc
movsl
iret
or
sbb
jg
pop
imull
pop
dec
outsb
xchg
fisubrl
push
jg
add
cmp
addl
and
loope
sbbb
push
pop
adc
or
push
sbb
xor
dec
or
ljmp
xor
push
and
pop
out
xchg
sub
jns
lret
repnz
xchg
xor
cld
push
into
andb
cmpsl
or
stc
pop
sub
std
xor
mov
jmp
jno
ret
pop
fistl
pop
push
xor
ds
push
xchg
pop
popf
test
add
loop
sub
pop
and
and
outsb
pushf
pop
adc
dec
inc
xor
rorl
add
push
push
mov
cmp
ja
inc
add
icebp
dec
or
mov
fwait
dec
sti
jnp
movsl
jg
push
movsl
xchg
imul
or
outsl
cwtl
xchg
and
xor
or
repz
arpl
test
or
jg
xor
mov
jmp
push
fsubl
sbb
pop
mov
sub
dec
and
jne
xchg
jmp
and
fnstenv
fstpt
es
leave
and
ss
clc
adc
sub
dec
int3
jb
cmp
jmp
sbb
mov
nop
or
cmp
sti
psubsw
int3
mov
add
dec
push
jmp
addr16
and
jo
mov
push
cmp
pop
adc
cmp
and
and
adc
inc
pop
aas
dec
pop
jo
addr16
sbb
mov
dec
out
loope
pop
push
ljmp
shrl
clc
std
lret
or
adc
mov
push
out
add
add
mov
addl
aaa
je
pop
xchg
je
fcmovb
loopne
sub
pop
xor
pop
add
mov
aad
stc
popf
dec
and
push
adc
out
add
adc
mov
cmpsl
out
xor
fucomi
fstl
jmp
sub
movsb
adcl
sbb
push
out
dec
inc
sub
push
push
mov
loop
mov
cld
pop
inc
push
mov
inc
iret
daa
fbstp
adc
sub
pop
cmp
or
xor
repz
ljmp
inc
cli
xor
dec
pop
pop
jns
jbe
pop
adc
loopne
inc
jae
in
push
mov
xchg
push
cmovl
add
push
cmp
outsb
push
adc
push
mulb
sub
jmp
repnz
jl
mov
add
xor
sbb
lret
das
fldt
out
push
ret
hlt
and
adc
adc
aas
mov
and
mov
call
pop
in
cld
fsts
or
pop
pop
or
js
add
sbb
jbe
or
jb
adc
mov
jmp
mov
add
call
inc
sbb
or
xor
push
sub
cmp
add
dec
dec
inc
sub
add
adc
add
xor
outsl
add
lcall
inc
or
cmpsl
lret
and
popa
ja
cmp
popf
xor
mov
lret
jecxz
test
fists
and
or
push
movsb
je
cli
js
ror
fsubrs
inc
loope
cmp
push
sub
subb
sbb
mov
xchg
and
lds
mov
jmp
ret
jl
imul
shlb
inc
add
call
cmp
ret
mov
lahf
rclb
xchg
dec
pop
rcl
push
or
mov
pop
repnz
lahf
mov
rcrl
sub
add
push
inc
pop
insl
mov
pop
dec
fwait
xchg
inc
pop
pusha
adc
fisubrs
xor
add
push
or
out
adcb
cmp
push
mov
xchg
dec
lahf
xchg
mov
sub
mov
sbb
repnz
sbb
push
push
mov
pop
ret
mov
pop
fistps
cmp
daa
xchg
ja
or
cli
mov
jmp
icebp
xchg
leave
add
in
add
fstps
insl
rorl
xchg
pushf
gs
mov
mov
dec
daa
push
jno
ss
add
sbb
in
pusha
mov
push
pop
mov
test
sub
out
ds
mov
lods
add
or
in
out
sarb
stos
sub
inc
sub
stos
pop
pop
addr16
jae
push
clc
xchg
aas
push
movsb
sbb
cmpsb
or
sub
aaa
jno
icebp
adc
aam
leave
add
imul
cmp
jg
add
rcrb
int
inc
xchg
lds
imul
mov
test
jle
jo
xor
sbb
pop
push
mov
sbb
jo
out
idiv
in
xor
subb
or
or
pop
pop
rol
push
test
rorl
jne
inc
hlt
es
xchg
xchg
push
mov
dec
add
das
inc
pusha
cmp
adcb
stos
pop
pop
shrl
fnstsw
sub
xor
and
cmp
loope
push
push
cli
jne
pop
pusha
or
jmp
inc
and
sahf
sbb
sub
aad
incl
ja
fcomi
xor
imul
sub
push
cmp
inc
fucomp
mov
dec
cmp
loopne
or
cmc
adc
aad
mov
add
add
loop
ja
mov
pop
dec
test
or
add
sar
xchg
and
mov
fcoml
add
cld
mov
imul
or
rclb
shr
push
jle
fs
add
fidivrs
or
lret
adc
sbb
push
mov
jl
pop
push
rorb
cmp
inc
mov
lock
out
mov
daa
sub
adc
sub
jns
pop
mov
sbb
fimull
in
push
and
mov
push
and
lock
mov
imul
cli
jae
les
loopne
popa
cmp
xor
xchg
jmp
jge
orb
jb
and
fldt
mov
or
cmp
testl
lret
rcll
pop
je
cmp
or
fs
xchg
inc
testl
pusha
loop
mov
inc
jnp
pop
in
stos
mov
out
dec
cmc
xor
pop
cmp
pop
push
push
jmp
roll
mulb
or
lret
enter
push
xor
and
das
sub
andb
mov
or
fstl
add
pop
mov
call
or
leave
ja
adc
sbb
push
movsl
test
mov
icebp
xchg
sub
ja
pusha
ljmp
xor
mov
pop
shlb
cmp
jno
mov
std
jg
and
incb
in
push
and
popa
mov
cmp
xchg
sbb
jl
ljmp
in
sbb
imul
in
or
and
in
scas
xchg
and
bnd
mov
jno
lret
push
test
xchg
insl
stc
push
popf
push
sub
outsb
das
and
mov
push
dec
jns
in
js
cs
inc
movsb
add
jnp
inc
inc
das
lods
aam
imul
jg
flds
icebp
or
shlb
or
insl
pusha
sub
xlat
inc
add
mov
enter
dec
fldenv
mov
jns
jl
dec
movl
inc
sti
cmp
loopne
push
push
ds
dec
repz
popa
jmp
into
repz
out
jne
adc
cmpsl
lds
decb
xor
je
jmp
inc
das
movsb
xchg
pop
pop
jb
jmp
lcall
bound
mov
push
popf
sub
outsb
pushf
mov
push
push
jmp
sahf
out
call
daa
mov
and
cmp
ljmp
mov
adc
and
pop
mov
mov
dec
les
add
repnz
mov
fs
orb
hlt
inc
jmp
insl
mov
jl
das
mov
fdivl
testb
jns
sbb
cmp
roll
push
add
incb
dec
and
daa
push
test
push
pop
or
or
add
adc
scas
sub
push
jmp
mov
mov
or
jp
nop
or
lea
ds
testl
sub
sub
test
sbb
jmp
sbb
test
or
adc
mov
dec
mov
outsb
xlat
adc
je
mov
aaa
xor
leave
aad
pop
push
out
or
in
mov
popf
or
adc
xor
add
pop
add
movsb
arpl
inc
sbb
ret
and
mov
xor
cltd
enter
je
and
lods
rcrb
jl
fmuls
ja
mov
mov
repz
or
arpl
adc
repnz
mov
inc
add
aas
subb
xor
sbb
mov
jne
fiaddl
xor
dec
aas
xor
mov
in
or
and
shlb
push
xchg
cmp
dec
pop
inc
add
push
push
jmp
test
test
out
aaa
rclb
dec
test
pop
ljmp
sbb
push
cmpsl
adc
adcb
imul
je
divb
sbb
mov
das
add
in
xchg
out
psrlw
inc
add
fwait
mov
das
add
inc
mov
jne
sarb
sub
sbb
out
sub
in
xchg
jl
xchg
loopne
pop
es
inc
mov
and
popf
cli
fists
push
and
dec
mov
push
adc
or
in
xor
fwait
push
ljmp
jnp
xor
jge
xor
mov
push
xorl
pusha
or
dec
or
lods
in
adc
imul
shlb
out
or
out
sub
sbb
ret
push
sahf
cmp
js
xor
cmp
out
lock
lret
adc
mov
scas
std
jge
test
rolb
push
add
mov
mov
mov
sub
push
pop
xor
imul
add
xchg
out
xchg
dec
jmp
xor
sub
add
pop
jmp
hlt
aas
pop
push
pop
mull
mov
xor
dec
sti
pop
inc
adc
xchg
mov
pop
test
or
jo
push
and
inc
sub
into
mov
push
jo
das
sbb
setb
push
jle
lods
incl
movsl
imul
jns
pop
push
ss
ja
rorl
imul
push
xor
adc
cmp
sbb
std
dec
add
scas
mov
stos
lock
lods
insb
and
icebp
popf
inc
add
jmp
out
lret
dec
pop
inc
daa
push
into
jo
loope
iret
mov
sbb
mov
lods
sbb
lret
xchg
shr
dec
addl
and
repz
test
sbb
pop
or
pop
dec
xor
cmpsl
xchg
cli
lods
and
dec
or
vmwrite
test
fcmovnbe
jmp
pop
xor
xchg
xor
out
xchg
pop
cs
add
sarl
inc
jb
imul
add
bnd
inc
jmp
mov
adc
pop
adc
jg
cwtl
adcb
and
pop
lods
add
sub
mov
stos
dec
mov
inc
push
sbb
push
imul
imul
mov
nop
in
add
rolb
mov
push
je
jle
cwtl
and
pusha
stos
mov
inc
fs
scas
inc
sbb
sub
loopne
mov
cmp
xor
xchg
adcl
xchg
push
inc
cmp
sbb
ljmp
xlat
int3
push
mov
out
or
and
sahf
mov
dec
xor
in
bound
jecxz
push
mov
mov
and
outsl
pop
aas
arpl
xchg
pop
and
fisubrs
jge
ds
push
xchg
cmpsb
adc
sub
cmp
pop
jecxz
or
insl
outsl
jbe
aaa
ret
cmp
pushw
jbe
cltd
add
mov
stos
lret
add
loopne
not
shl
push
cmp
cmpb
int
mov
push
ret
shl
out
pop
pop
cmp
add
push
cmp
push
adcl
push
add
mov
xor
imul
mov
mov
push
sbbb
jg
jecxz
loopne
or
mov
xchg
cmp
jmp
repz
or
mov
out
movsl
stc
jl
mov
fsub
inc
push
leave
mov
jmp
call
lods
and
outsl
pop
dec
outsb
cmp
aaa
test
adc
inc
xor
ljmp
js
sbb
and
push
jmp
movsl
mov
add
loop
and
ret
dec
addr16
sub
repnz
and
aad
or
push
sub
test
pop
cld
pop
xor
push
fimuls
push
inc
clc
inc
vmovntps
mov
fs
inc
xchg
xor
jns
dec
in
dec
xchg
pop
filds
ret
mulb
cs
dec
add
fildll
lods
aaa
cld
mov
sbb
popf
mov
inc
enter
lahf
mov
push
xchg
negb
dec
lock
and
push
pop
pop
xchg
and
aas
std
hlt
test
inc
popa
mov
cmpsl
aad
xor
pop
and
push
call
or
adc
xchg
add
call
mov
jecxz
pop
push
sbb
not
inc
mov
sub
das
aad
pop
and
repz
lds
xchg
das
ret
inc
filds
add
ret
lds
mov
mov
arpl
shrl
cmp
inc
out
test
incb
mov
jmp
xlat
push
push
popf
jge
mov
mov
dec
movsl
jle
mov
into
mov
jmp
xlat
repnz
pop
aad
rcl
or
push
mov
outsb
fwait
pop
add
movsb
pop
insl
push
sar
adc
pandn
mov
outsl
mov
out
testb
sub
popa
sub
imul
jecxz
pop
cmp
decb
ds
jge
pushf
pop
das
cmpsb
cmp
mov
int3
dec
mov
sub
pop
xchg
pop
push
lahf
jnp
add
ret
js
push
mov
pop
das
mov
mov
bound
pop
pop
pushf
sub
or
mov
dec
jg
cmpsb
jb
and
dec
push
pop
xor
or
add
std
adc
push
pop
add
sti
lret
jmp
leave
jg
scas
jl
push
daa
jmp
adc
xor
cmp
pop
sbb
pop
mov
mov
push
ljmp
push
push
imul
dec
pushf
pop
push
lcall
testl
jns
loopne
pop
jge
arpl
xor
cmpb
test
cld
rorb
pop
cs
jl
jmp
in
addr16
push
add
int3
pop
pop
and
add
pop
arpl
inc
mov
stos
xor
outsb
lret
add
jnp
shrb
inc
dec
push
mov
push
and
sbb
out
ds
inc
mov
in
dec
rclb
mov
mov
cli
cli
ljmp
or
mov
dec
pop
stos
xchg
add
pop
and
pop
xorb
push
movsl
cmp
popa
pushf
jmp
cli
lret
repz
out
lret
mov
pop
ljmp
add
in
test
lahf
inc
sub
add
add
orl
cmp
repz
push
cmp
mov
dec
sub
cli
inc
icebp
clc
pop
adc
push
push
mov
xchg
mov
push
mov
and
pop
xchg
test
test
mov
out
aad
outsb
loope
and
cs
std
and
cmp
jo
aaa
stos
subb
and
or
jmp
add
jg
cmp
mov
out
push
cmpb
xor
into
and
add
jge
mov
xchg
cmpb
push
push
xor
les
dec
icebp
lock
or
aad
ja
inc
adc
mov
dec
cmpsl
add
adc
dec
ret
mov
pop
jnp
and
cmp
out
aam
push
adc
dec
mov
pop
loopne
pop
aaa
pop
inc
lock
pop
pushf
or
aas
inc
mov
rcrb
cmp
scas
mov
divb
inc
call
mov
popf
fildll
sub
test
xor
into
mov
sub
add
xchg
sbb
in
jge
lock
ds
cwtl
stos
popf
sbb
out
or
or
add
inc
mov
jo
js
leave
daa
dec
test
cs
inc
adc
fsubrp
fidivrl
call
mov
leave
mov
sub
push
lods
pop
outsb
dec
mov
test
leave
pop
in
mov
jmp
outsl
cmpsb
pop
imul
sub
mov
mov
aaa
not
jmp
shr
or
rcll
and
pop
sbb
push
imul
lret
inc
and
out
pop
jne
not
in
nop
and
pop
cmc
mov
jne
mov
out
insl
sub
add
cs
pop
sbb
or
pop
pop
push
jne
mov
push
testb
in
call
sti
nop
scas
ds
mov
or
insb
std
int3
jmp
xor
push
dec
cli
mov
icebp
data16
je
sti
mov
dec
into
or
mov
or
push
dec
jge
sahf
xor
jno
outsb
and
cmp
jbe
dec
loopne
out
pop
add
cmp
clc
mov
add
push
mov
out
stc
sbb
pop
cwtl
movsb
mov
jg
push
mov
jno
jecxz
or
add
call
inc
cmpl
lods
shll
jle
lods
inc
cmp
xor
inc
test
push
lods
dec
test
mov
mov
sahf
ds
adc
mov
inc
mov
lock
adc
and
jp
orb
lret
insl
dec
xchg
int3
push
lret
movnti
add
mov
out
dec
mov
sti
int3
pop
jecxz
push
push
adc
inc
or
aaa
stos
fdivrl
cs
movsl
dec
add
xchg
aam
or
push
pop
hlt
inc
jmp
lods
cmp
cli
aad
pop
loop
xor
ss
xchg
imul
mov
push
and
jb
sarb
in
shlb
add
enter
lods
lods
rorb
dec
jg
add
scas
adc
jl
cmp
jl
lock
push
pusha
cmp
xchg
repz
pop
sub
xor
cmp
pop
mov
test
mov
cld
pop
mov
or
imul
push
adc
add
shr
rcrl
scas
lods
adc
lods
cmc
lret
pop
or
clc
call
sbb
sub
popf
xchg
loop
mov
test
xor
mov
xorb
inc
push
jns
adc
sbb
mov
jecxz
adc
rolb
push
ss
data16
sub
nop
and
cld
sbb
imul
addb
mov
test
dec
pusha
leave
test
dec
dec
dec
call
mov
movsl
dec
outsb
mov
mov
add
mov
cmc
push
jmp
sbb
not
or
in
jle
vpblendmd
push
cmp
adc
lret
jne
sub
push
and
lock
lahf
mov
or
mov
fstpl
inc
aas
pop
subb
not
dec
xchg
aad
mov
cwtl
cli
jb
fs
daa
out
pop
ja
mov
push
dec
push
push
pop
jbe
push
xchg
lret
ret
call
cmc
adc
xchg
sub
inc
ljmp
repnz
and
inc
pop
push
push
jge
inc
push
xchg
out
cmc
cmpsb
into
daa
testb
inc
xchg
dec
cmp
push
adc
pop
mov
rol
cmp
cmp
mov
adc
sub
test
lahf
push
cmp
dec
stos
or
aaa
lahf
jnp
pop
add
mov
shl
data16
add
inc
les
dec
jmp
lea
ss
addr16
mov
es
push
jmp
iret
stos
cs
mov
cmp
inc
xchg
xor
sbb
divl
sub
cltd
ret
sub
popf
sar
rcr
call
inc
jnp
nop
pusha
aaa
lods
sub
das
scas
jl
jmp
mov
popf
pop
nop
mov
fildl
daa
mov
xchg
lds
mov
out
subl
add
call
lcall
pop
jl
es
pop
ss
sbb
sbb
mov
addb
pop
and
fs
push
adc
jp
push
or
pop
icebp
arpl
je
gs
scas
hlt
outsb
adc
xchg
push
mov
xchg
and
fsubrp
dec
ljmp
mov
xor
stc
ret
push
orb
adc
leave
push
stos
leave
jbe
bound
je
ret
shll
stos
dec
push
out
int3
pop
jmp
es
rol
orb
out
pop
sbb
outsb
mov
push
jo
push
sbb
inc
pop
out
sub
adc
stos
cmp
cmpb
or
test
shl
sub
pop
sbb
push
mov
jmp
std
jnp
inc
add
jo
mov
data16
push
mov
ret
mov
or
xor
mov
bound
pusha
lea
icebp
jmp
testl
jg
and
or
add
xlat
push
mov
lds
pop
mov
sub
pop
xor
push
mov
not
loop
add
push
sbb
mov
jmp
inc
les
dec
add
sub
add
inc
out
add
xor
and
inc
add
dec
xchg
dec
sbb
pusha
fdivp
pop
push
push
pusha
sbb
xor
aam
xor
int
jl
es
add
or
clc
push
int
dec
and
data16
push
shlb
dec
inc
bound
sub
call
xor
insb
test
fsts
cmp
nop
leave
add
push
inc
ja
cwtl
adc
mov
dec
in
sbb
push
outsl
shlb
call
push
pusha
insb
ds
pop
inc
cmpsl
mov
stos
cwtl
fistpll
inc
rcrb
in
ret
js
rorb
and
je
pop
push
push
pusha
dec
push
pop
sub
sub
sbb
jg
notb
or
sbb
divb
add
inc
dec
mov
cltd
jp
cmp
jns
fadd
adc
dec
dec
xor
mov
outsl
pop
test
push
pop
xchg
pop
mov
mov
insb
outsl
xchg
or
int
leave
jp
shrl
pop
incl
xor
out
dec
cld
or
cmp
add
push
testl
and
mov
sbb
pop
jg
ds
jl
movsl
inc
popf
push
insl
psllw
in
loop
jb
mov
daa
push
mov
je
inc
add
data16
sahf
adc
movsl
pusha
es
push
add
aas
rcll
nop
dec
jg
adc
sbb
mov
xlat
sbb
push
push
mov
mov
ret
mov
std
inc
ljmp
dec
xor
add
adc
dec
mov
test
sbb
push
in
and
mov
push
push
push
or
adc
xor
dec
int3
sub
add
stc
inc
or
aas
jmp
out
icebp
push
cmpsl
and
bound
outsb
adc
adc
jp
imul
jmp
ds
sti
pop
adc
stos
mov
push
out
xlat
scas
and
popa
out
mov
xor
jecxz
xchg
roll
xchg
and
sti
xor
ds
mov
mov
fucompp
lret
gs
mov
jb
mov
pop
in
push
jle
jmp
movl
dec
jnp
jmp
and
shl
shrl
cmovg
push
xchg
mov
ret
daa
or
repz
and
mov
mov
ffreep
add
xor
or
and
data16
mov
mov
outsl
cwtl
fcmovnb
rclb
fbld
movb
or
nop
sub
push
sbb
inc
test
and
jmp
shl
or
and
arpl
jmp
cli
add
push
lods
scas
adc
lods
imul
idivl
xchg
jg
frstor
stos
mov
sahf
jno
push
jg
sti
and
add
cmp
leave
in
out
xor
mov
stos
jb
and
or
loopne
je
cs
and
or
imul
test
mov
inc
xchg
filds
xchg
sub
jl
or
cli
and
dec
xchg
jns
loop
pop
lret
pop
add
mov
lds
bound
icebp
fs
outsb
add
xor
inc
scas
lock
or
adc
sbb
inc
test
push
pop
lds
xchg
push
adc
pushl
je
pop
movsb
xchg
cmpsl
repnz
es
les
pop
loopne
mov
fs
sbb
pusha
sub
or
or
pop
mov
push
mov
out
lods
adc
push
jmp
popf
add
pop
popa
lahf
out
clc
aas
sbb
jmp
jne
xchg
pop
add
int
or
jp
popa
pop
mov
dec
rcrl
lea
inc
scas
xor
out
in
cmpsb
or
arpl
push
in
xchg
sarl
sbb
adc
mov
xor
push
dec
mov
stos
add
pop
and
jnp
xchg
sub
shrl
in
outsb
call
call
aam
or
sub
arpl
sbb
stos
push
add
dec
dec
jle
lret
ret
mov
and
aad
iret
push
outsb
mov
dec
adc
pusha
dec
add
lret
pop
sbb
and
and
adc
or
xchg
test
loop
pushf
inc
fsubr
push
mov
shrb
dec
mov
ret
sub
xor
cmp
xor
icebp
xchg
imul
xchg
jne
test
ret
pop
shr
mov
shlb
sbbl
lret
pop
push
fildll
int3
out
xchg
push
mov
or
pusha
je
addb
dec
dec
mov
les
enter
mov
aam
add
loope
pop
out
mov
call
push
jmp
inc
push
push
pop
xchg
mov
jns
test
dec
adc
mov
jns
pop
clc
in
xchg
pop
mov
mov
lret
movsl
sbb
mov
fisubs
cmp
pop
test
or
push
stos
xchg
jbe
mov
and
jns
push
out
mov
aad
push
dec
into
imul
in
jmp
lret
push
add
pop
adc
loopne
cld
pop
mov
test
imul
mov
rolb
mov
jle
and
add
push
push
jmp
cltd
jp
mov
sbb
inc
mov
dec
xchg
jne
dec
cld
in
push
dec
adc
add
std
subl
sub
inc
cltd
sbb
bnd
adc
mov
dec
mov
cmp
movsb
repz
cmpsl
loope
push
in
push
loope
push
jl
xchg
mov
push
test
inc
lea
les
inc
jle
nop
in
or
push
push
or
adc
mov
sbb
add
lods
mov
test
scas
orb
xor
cs
pop
js
push
pop
push
mov
pop
aam
scas
cmp
xlat
mov
pop
push
pusha
jbe
sub
jecxz
inc
andb
pop
inc
movsl
and
pop
cli
jb
mov
cmp
and
pop
cmp
clc
cmpsb
dec
stos
rolb
add
sub
sub
ds
xchg
add
inc
sub
pop
add
stos
sub
jns
sbb
stos
inc
sbb
pop
pusha
jb
adc
dec
xchg
addr16
xchg
and
and
mov
repnz
push
pusha
movsb
ret
mov
popf
mov
xlat
sub
pop
sbb
rorl
or
add
mov
pop
ds
pop
cli
inc
adc
popa
jmp
in
push
pop
mov
loopne
addr16
dec
dec
inc
adc
aad
jmp
jmp
cli
cmp
popf
ret
repz
into
out
pcmpgtd
psubw
pop
icebp
daa
mov
jecxz
test
xchg
stos
mov
adc
cmp
lcall
cmp
adc
fisubrs
add
xchg
jo
rcll
adc
mov
sbb
xor
pop
xchg
push
mov
add
jmp
jmp
adc
std
daa
jl
push
mov
sbb
fnsave
test
pop
arpl
ficoms
sub
jnp
jge
lds
lds
adc
inc
jb
or
dec
jnp
pop
xchg
repnz
push
sbb
cltd
cmp
orb
pop
lret
dec
jl
ds
push
into
pop
xchg
sbb
ja
dec
pop
push
mov
sub
andl
xor
lea
sub
movsl
dec
add
inc
add
inc
rcll
rorb
in
loopne
fsubrs
push
add
jmp
dec
lret
shrl
add
push
call
or
add
sub
jmp
cld
psrlq
jo
mov
imull
je
xor
fsts
sub
sub
and
scas
pop
pushw
outsb
adc
ret
add
dec
jo
adc
repz
push
inc
ffree
adc
dec
in
ljmp
fs
push
sbb
cmpsb
pop
mov
sbb
adc
in
add
add
and
jp
andb
xlat
adcl
andb
clc
fcom
or
dec
mov
jne
call
or
pop
push
pop
loop
shlb
das
mov
sbb
xchg
insb
popf
bound
pop
push
jmp
jbe
iret
cli
sub
bound
push
test
xchg
xchg
cmp
mov
rcrb
add
push
sub
and
push
pop
jmp
in
inc
jb
push
add
lahf
clc
mov
add
gs
sar
rorb
sub
sbb
add
jmp
pop
push
int3
sbbb
pusha
cmp
hlt
fbld
rcll
mov
pop
xor
mov
mov
loop
lds
push
jae
jmp
xchg
mov
loop
mov
and
xchg
add
imul
sbb
xor
lret
enter
dec
pop
mov
ljmp
xor
or
cmc
push
imulb
mov
fdivs
jo
jge
pop
arpl
pop
cwtl
adc
add
rolb
xor
fnsave
cltd
jge
jle
jbe
xchg
test
adc
adc
dec
sbb
pop
or
mov
popf
and
push
dec
or
push
das
adc
mov
push
dec
das
imul
mov
shll
inc
in
stos
or
insl
dec
xchg
jl
xorb
xchg
lock
adc
lret
jae
js
dec
dec
xor
push
mov
push
shr
subb
out
ss
stc
jmp
ds
int
ret
push
mov
adc
mov
push
adc
mov
cmp
xor
outsb
lret
lds
cmpsl
loopne
push
or
xchg
lock
in
imul
gs
mov
fidivrs
adc
jecxz
cmpsb
jnp
mov
test
sub
push
mov
loop,pn
mov
dec
and
leave
pop
fs
cwtl
mov
sahf
mov
sbb
repnz
les
lock
in
sbbb
test
pop
or
subb
test
jmp
mov
je
inc
mov
jmp
dec
xor
test
add
imul
pop
gs
xchg
clc
push
dec
sbb
les
aam
pop
ret
jl
outsl
rcrb
daa
or
push
lcall
jl
xor
sub
mov
push
mov
js
add
sub
mov
xchg
sbb
movsb
pop
xchg
mov
mov
ja
push
xor
pop
cmp
sbb
push
imul
mov
sub
ret
jnp
mov
sbbb
push
ret
pop
xor
dec
sbb
push
push
adc
outsl
mov
mov
cmp
add
jl
mov
and
in
roll
shlb
aam
data16
loope
inc
jbe
add
insb
dec
xchg
insl
sbb
and
rcr
daa
mov
shrb
xchg
in
push
add
ret
test
pop
mov
jp
inc
mov
out
xchg
repnz
hlt
sahf
xchg
lds
imull
in
adc
pop
push
mov
mov
push
xchg
or
xchg
sbb
icebp
cmc
cmp
mov
xorb
pop
adc
aad
shl
inc
add
push
xchg
jns
fs
jno
fsubrp
add
fisubrl
test
movsl
add
xchg
sbb
aad
xchg
outsl
in
add
dec
cmp
sub
push
in
pop
jp
inc
hlt
rorl
sbb
dec
adc
mov
add
add
xor
scas
jmp
push
mov
into
sbb
cmp
jmp
push
add
aam
test
inc
sahf
jge
or
and
or
push
popf
xlat
cmpsl
shlb
clc
or
or
inc
xbegin
inc
in
and
sbb
jge
andnps
mov
loope
jbe
add
fsubr
ret
movsb
sub
int
movsl
xor
xor
or
ja
add
mov
popa
mov
and
pusha
clc
ljmp
and
cmp
aad
jnp
pop
es
jne
negl
insl
add
cs
fwait
mov
inc
ljmp
shrl
mov
les
adc
add
mov
or
jno
movsbl
push
dec
push
mov
dec
add
cmc
add
jne
lret
or
adc
mov
inc
push
in
arpl
add
dec
jnp
pop
fwait
and
and
rcll
lret
icebp
sub
add
mul
or
cltd
push
data16
loop
setg
orl
enter
add
xor
add
dec
add
and
sbb
or
cmp
clc
sbbl
jo
lcall
out
dec
lcall
or
cwtl
and
gs
jge
dec
mov
adc
pusha
dec
or
out
pop
push
push
and
push
adc
cmpsl
cmp
sti
and
out
add
xchg
clc
outsb
cmc
jne
push
pop
idivl
or
out
cmp
pusha
std
dec
sbb
push
jmp
lds
stos
xor
pop
into
pop
dec
sub
pop
scas
fs
mov
add
push
adc
xor
mov
shrb
adc
orb
dec
pop
inc
pop
sub
cwtl
data16
mov
push
jmp
lahf
bound
insl
es
xor
fistps
jmp
lods
jmp
adc
orb
fisttpll
pop
push
mov
loop
dec
std
dec
adc
add
neg
jg
add
mov
jecxz
push
add
or
ret
mov
and
xchg
mov
push
or
test
call
add
cmp
mov
push
stos
movsl
lock
inc
cmp
mov
mov
dec
adc
outsb
adc
sub
gs
adc
add
cli
pop
in
test
mov
loop
jmp
outsl
sub
pop
pop
mov
inc
dec
xlat
cmpsb
xchg
pop
adc
ljmp
xchg
ret
pop
inc
cmp
add
mov
lock
fstps
or
adc
imul
lock
leave
push
push
pop
sub
jmp
cwtl
ljmp
ja
das
popa
cs
stos
orl
sbb
xor
sub
loop
cmpsl
mov
jne
and
pop
rcr
inc
jns
aam
cli
addb
push
mov
mov
jns
mov
inc
add
xchg
sbb
add
push
or
outsl
pop
push
jmp
and
shll
daa
xor
push
insb
test
cmc
or
xlat
out
or
aam
sbb
sbb
cwtl
push
xlat
dec
and
fimuls
add
jle
rolb
dec
es
clc
push
shrb
mov
or
inc
in
dec
add
aad
cmp
test
test
add
addr16
or
jmp
sbb
push
test
and
adc
add
icebp
jno
inc
push
mov
leave
cmp
arpl
cli
lret
das
push
xor
mov
push
jmp
shrl
loop
fisttps
add
inc
add
sbb
out
push
shl
out
xor
test
jg
sbb
jecxz
lcall
mov
jmp
push
push
stc
cmpsl
movsb
mov
pop
ficoms
call
lea
pop
add
xchg
push
add
and
out
cltd
sbb
into
push
jmp
push
iret
arpl
cmp
dec
sub
clc
adc
ljmp
jae
inc
push
inc
push
imul
outsb
daa
pop
push
test
out
adc
roll
xchg
sbb
add
cmp
repz
pop
sub
push
je
sbb
add
mov
flds
inc
mov
sarl
mov
adc
daa
cmc
mov
push
push
mov
dec
in
incb
inc
sub
mov
push
or
inc
push
pop
mull
in
push
lahf
jle
pop
push
jmp
rol
into
cmp
pop
dec
sub
jmp
push
lret
loope
sbb
push
sbb
jl
or
int3
leave
nop
aam
lret
pop
inc
stos
cli
add
inc
xchg
cwtl
push
rcrl
test
jno
jo
xchg
adc
cmp
mulb
mov
add
and
xchg
jecxz
rol
push
out
out
lret
clc
cmp
adc
or
inc
stos
popa
shr
jb
ret
sub
movsl
inc
mull
pop
stos
xlat
hlt
movsl
mov
mov
enter
addl
inc
jge
jns
stc
add
jle
cs
or
xchg
fcmove
ljmp
add
mov
or
sbb
or
aaa
dec
loope
fnstcw
dec
iret
loope
sar
mov
pop
push
cwtl
std
dec
sub
shlb
sub
sub
or
mov
or
jle
daa
push
sub
in
je
cs
inc
out
repz
cmp
rorl
xor
std
and
mov
idivb
daa
mov
call
push
inc
pop
pop
fisubs
sbb
rolb
outsl
in
stos
cmpsl
bound
mov
in
aaa
add
imul
das
stc
add
mov
and
sbb
cmpb
mov
jmp
out
sbb
js
data16
clc
sub
inc
sbb
sbb
xchg
adc
aam
jl
sub
push
es
cmc
cld
pop
add
inc
and
lea
xchg
ret
inc
cwtl
shll
mov
jmp
adc
sbb
sub
jge
es
ret
mov
cwtl
das
add
sub
jl
xor
enter
shrl
insl
add
mov
cmc
push
push
xchg
pop
jbe
pop
loopne
enter
mov
icebp
pop
mov
push
mov
pop
popa
imul
jg
push
inc
mov
jge
test
jno
jns
aaa
jmp
pusha
cmp
xor
popf
mov
adc
leave
push
cs
dec
fwait
ss
jae
sub
dec
mov
push
add
add
push
push
or
ljmp
adc
testb
adc
mov
inc
pop
sub
mov
cmp
dec
mov
sbb
xchg
ret
mov
jmp
cmpsb
pop
mov
arpl
dec
lea
sbb
dec
or
cmp
fiadds
and
pop
push
sbb
fwait
and
int
rcll
cmpb
lds
and
iret
and
sbb
xchg
add
out
sahf
jae
sbb
xlat
lds
test
ds
xor
adc
sbb
sub
sub
jmp
ret
or
jne
cmc
xor
dec
push
nop
pusha
jle
out
fisubrs
adc
dec
jmp
xor
cmp
insb
xlat
xchg
lea
adc
adc
scas
mov
loopne
rorl
out
jmp
cmpsl
inc
cmp
sti
sub
push
and
popf
out
scas
enterw
push
imul
sti
movsl
cmp
imul
cmp
data16
or
and
cmp
test
shlb
jmp
in
jecxz
mov
inc
push
subb
rolb
or
xor
repnz
lret
xor
mov
mov
xor
pop
dec
xchg
sbb
push
daa
jmp
sub
jbe
dec
xor
xchg
and
rolb
fiaddl
xor
xor
lea
add
repz
aas
add
or
es
adc
adc
push
inc
fnstenv
jne
pushf
jno
sub
lret
sub
inc
mov
je
jecxz
mov
pusha
sub
jmp
jno
int3
cmp
mov
pop
sbb
push
jns
adc
ljmp
rcrb
lret
es
push
loopne
and
inc
cmp
decb
mov
lods
insb
sbb
mov
call
out
mov
das
clc
into
mov
lret
jle
les
dec
push
lds
cmpsb
cmp
pop
inc
cmp
add
push
adc
shl
mov
ret
inc
popf
inc
sub
cld
roll
pop
push
cmc
icebp
lock
out
outsl
out
xchg
add
lcall
fsubrl
cmp
push
adc
inc
in
sbb
jmp
scas
lds
jg
cmp
pop
movsl
dec
cld
inc
push
out
cli
pop
jle
pop
out
loop
les
mov
mov
pop
push
pop
adc
testb
sub
xchg
add
out
jnp
rclb
dec
ss
dec
inc
mov
mov
pop
sbb
lock
sti
add
inc
xor
jmp
fcoms
adcb
mov
pushf
xchg
mov
mov
sub
rorl
enter
out
push
jmp
or
sub
iret
inc
add
inc
sub
inc
loopne
xchg
scas
jl
jge
push
mov
pop
push
je
mov
ret
adc
jg
aam
push
inc
add
xchg
orb
add
sbb
pop
sub
ret
xor
dec
and
gs
and
or
and
add
push
mov
mov
mov
jae
ss
call
push
mov
add
dec
sub
inc
hlt
test
push
inc
mov
lock
and
pop
xor
data16
insl
test
ss
mov
and
and
shl
add
pop
sub
cli
daa
push
in
ds
or
pop
jae
lods
dec
std
lahf
aaa
cmpb
imul
cli
enter
push
mov
and
dec
xchg
out
test
ja
test
popf
icebp
popa
mov
sarl
mov
sub
lods
js
out
aam
xchg
mov
push
mov
shl
icebp
jo
gs
insb
movsl
mov
pop
jae
hlt
cli
out
loop
in
cmp
adc
es
cmpsb
orb
xor
daa
xor
cmp
scas
test
mov
dec
jne
popl
adc
ljmp
mov
adcb
and
push
add
push
mov
push
or
ljmp
xor
sti
jno
jmp
add
sbb
dec
lds
mov
and
std
sarl
push
push
mov
shll
or
pop
orb
xchg
add
xor
mov
insl
add
inc
mov
movsb
pop
lret
pop
imul
js
div
jg
mov
sub
jg
jno
and
mov
push
inc
ljmp
adc
adc
rolb
xor
adc
iret
mov
mov
adc
inc
or
push
mov
and
repnz
jbe
pusha
fidivs
mov
shr
pop
xchg
add
dec
push
xor
dec
mov
jae
add
and
xchg
scas
das
xlat
pop
pop
shlb
dec
aad
shlb
xchg
call
movsl
jl
fnstenv
cli
cmp
push
shll
hlt
jno
jne
or
pop
mov
xchg
or
lahf
jno
outsb
mov
push
imul
dec
jns
xchg
jae
enter
ja
push
lret
mov
xor
dec
cli
adc
sbb
or
or
in
xchg
jle
push
jmp
pop
ret
std
blcmsk
push
call
add
pop
push
dec
dec
cmp
ja
or
sub
rclb
xor
mov
mov
bound
movsl
loopne
inc
mov
pop
rcl
insb
mov
das
loopne
repz
shr
xchg
jo
and
nop
rclb
and
sbb
adc
daa
mov
jbe
mov
les
push
adc
add
xor
fmul
jp
dec
dec
in
orb
push
shlb
dec
push
jmp
jae
pop
mov
ljmp
repnz
push
inc
roll
fadd
cld
pop
fisubs
pushf
xchg
push
inc
inc
push
mov
gs
dec
clc
sbb
ret
push
pop
pop
or
adc
mov
pop
mov
rcrl
mov
adc
sub
add
out
dec
leave
loop
xor
test
dec
stos
fsubrp
push
cmp
pushf
cmc
and
jp
sbb
push
mov
dec
adc
or
sbb
xor
adc
movsl
cwtl
push
cs
mov
iret
jns
dec
pop
repz
jg
ret
pop
pop
add
lahf
rcrl
loope
out
jb
pusha
inc
ret
ficoms
pop
mov
aad
ret
dec
std
js
push
nop
subl
rcrb
push
jno
and
jb
xor
iret
sbb
or
addr16
jmp
mull
jmp
mov
and
push
stos
daa
dec
rcll
leave
mov
cmp
push
pop
push
sub
adc
lods
jle
or
ret
lcall
fisttpl
and
pop
into
mov
add
sbb
mov
test
in
lret
js
push
es
or
jns
inc
scas
dec
jl
jo
dec
loopne
es
push
cmp
enter
subl
in
es
push
imul
add
rcrb
dec
gs
cmpsb
popf
mov
ja
jns
push
out
loopne
dec
sbb
or
addb
cli
pop
sub
mov
data16
and
xchg
fstpl
ret
push
sub
orb
pop
mov
das
push
inc
jecxz
dec
pop
icebp
xchg
xchg
in
mov
mov
inc
and
push
dec
gs
clc
inc
neg
cwtl
loopne
ljmp
pop
adc
test
jne
sub
add
pushf
lret
add
std
cmp
or
mov
xchg
lock
and
es
cmpb
arpl
jecxz
push
notl
mov
les
repz
or
jecxz
in
push
push
sbb
insb
gs
push
fs
mov
push
push
cld
lock
shll
dec
add
jl
mov
mov
push
or
dec
addr16
pop
push
imulb
push
add
add
daa
lret
dec
popa
jns
mov
inc
mov
push
dec
in
je
ja
rcll
inc
fldenv
xorps
xchg
push
xor
sti
testl
repnz
jg
mov
sub
inc
stos
shl
push
notl
mov
fwait
sub
and
pusha
jmp
cli
mov
cmpsb
sbb
in
int
xor
aas
in
add
pop
cmc
outsb
cmc
and
insb
or
add
jno
jne
push
fldl
pop
les
fstl
ljmp
imul
out
adc
sbb
add
repz
or
and
sbb
mov
inc
push
ret
jno
and
add
adc
ja
mov
xchg
dec
out
shlb
cmp
cmp
or
push
jo
push
loop
repz
repnz
sbb
xor
popf
pop
lds
add
sub
int3
fs
arpl
xor
push
dec
push
or
xchg
popa
or
sbb
das
dec
aaa
cmp
js
pushf
repnz
or
mov
sbb
cmpb
or
pushf
or
mov
fiaddl
mov
jb
cmp
push
cmpl
xchg
xor
dec
movsb
add
inc
js
sbb
lret
push
push
pop
adc
ja
cmp
mov
inc
outsl
roll
je
ds
or
dec
jmp
out
in
bound
clc
cmp
mov
mov
jle,pt
clc
push
mov
xor
pop
nop
andb
push
add
add
jmp
lcall
pop
pop
andb
jbe
sub
add
pop
xor
mov
scas
cmpsl
fsubrp
loop
fimull
add
popf
fsubrl
mov
testb
xor
mov
cmp
std
dec
dec
and
push
or
das
je
ljmp
stos
add
insb
scas
add
inc
das
dec
pop
repnz
mov
mov
cmp
stos
loope
adc
andb
cmp
arpl
jmp
mov
js
add
aaa
jmp
or
into
and
shlb
imul
dec
push
in
movsb
xchg
or
shrb
je
jno
cmp
sub
inc
ret
cs
xor
lret
adc
sbb
pop
pop
pop
arpl
scas
andb
lods
push
pop
imul
cmp
cmc
outsb
add
pop
in
jmp
jae
jne
add
xor
push
mov
xchg
jle
push
fnstenv
jmp
sub
ret
mov
fsts
test
pop
adc
test
ja
jnp
push
cmp
xchg
pop
aas
dec
push
mov
iret
mov
cmpsl
sub
in
or
lcall
cmp
pop
pushf
int
std
lahf
test
fisttpll
push
pop
dec
push
jmp
cmp
xchg
mov
jmp
xor
not
xor
sub
lahf
pop
cmpsb
dec
mov
sub
out
fs
icebp
ljmp
push
sbbb
or
sub
mov
xchg
jne
mov
jnp
pop
pusha
lret
add
jo
mov
inc
sysexit
dec
jmp
loope
cmp
jno
fadd
or
lds
or
push
pop
pcmpeqw
subb
dec
ja
pop
push
cmp
lock
pop
incl
jp
rorl
lock
push
mov
lret
std
mov
push
fiadds
jmp
addb
pop
or
or
pusha
dec
lret
adc
popf
xor
cmpsl
cs
dec
ja
sbb
lcall
sbb
push
add
das
jmp
xor
imul
arpl
push
mov
jle
imulb
sbb
add
jg
inc
or
fsubrs
stos
sbb
or
inc
jge
xor
bnd
mov
sub
int3
sub
xor
xchg
jmp
inc
in
std
pop
cmpb
aad
xchg
pop
inc
mov
mov
sub
xchg
lea
push
jbe
test
fimuls
pop
mov
pop
dec
mov
cmp
mov
pop
pop
imul
pop
pop
cmp
iret
js
popf
fisttpll
dec
mov
add
xchg
pop
cmc
ds
xchg
mov
mov
inc
mov
dec
pop
subl
repnz
mov
jle
cwtl
add
jo
insl
aas
hlt
enter
repz
add
jne
std
jmp
repz
push
hlt
cltd
push
mov
into
dec
mov
imulb
dec
add
std
cmpb
jp
lock
cs
imul
mov
jo
add
into
ja
add
mov
push
sub
in
adc
test
aam
pushf
scas
pop
mov
repnz
fwait
and
mov
adcb
or
adc
dec
sbb
aad
mov
or
push
inc
and
dec
mov
jnp
add
cmpsb
sub
adc
dec
lret
shll
adc
push
xchg
imul
stos
inc
popa
dec
push
popf
mov
mov
cmp
out
cmp
clc
cld
mov
adc
and
add
outsl
mull
fcompl
cmp
lahf
ja
ss
hlt
mov
and
shlb
sahf
xor
jno,pn
add
arpl
or
push
lcall
inc
lods
sbb
or
dec
xchg
dec
add
and
lods
xor
sub
xchg
pop
sbb
mov
adc
dec
sub
aaa
add
jae
xor
dec
subl
mov
pop
push
mov
cmp
rorl
adc
or
test
repnz
sar
and
ret
or
push
out
fcmovb
orb
scas
pop
sti
mov
xor
sbb
push
push
into
out
ret
dec
push
and
mov
push
loopne
aaa
out
jo
push
pop
push
ret
pop
imull
mov
das
cmp
in
je
sub
stos
adc
sarl
sbb
ret
pop
add
dec
add
add
pop
loop
push
jl
mov
or
jle
cmp
add
push
push
add
outsb
push
pusha
stos
bound
ror
iret
addr16
ret
mov
pop
mov
add
and
dec
addr16
aam
mov
or
pop
std
or
ljmp
push
push
ret
pop
xchg
neg
mov
packssdw
xor
jmp
cmp
mov
mov
cli
std
int3
mov
add
add
and
add
pop
add
sub
pop
mul
push
or
hlt
jmp
stos
addr16
pusha
jecxz
jmp
cmpsb
test
xchg
lret
lahf
rcll
jne
cmp
add
jb
fsubr
pop
in
loop
adc
std
push
je
sbb
jle
sub
fs
pop
push
jno
pop
pop
rclb
xchg
movw
negb
push
das
push
sar
add
call
lock
or
aam
dec
add
neg
xor
popa
mov
outsl
sar
jmp
pop
push
fildl
dec
xorl
incb
imul
push
xor
mov
pop
gs
cmp
int3
stos
cmp
std
adc
iret
push
iret
push
xor
pushf
orl
xchg
out
lea
push
add
pop
fdiv
lret
not
add
xor
dec
push
rorb
fs
jmp
cli
aad
adc
out
inc
subb
dec
push
cmpsl
ret
add
or
das
push
jnp
push
bound
lahf
adc
jmp
pop
push
sbb
push
or
addb
push
mov
iret
push
mov
cmp
add
push
lock
add
into
jmp
roll
insb
jmp
cs
lret
ljmp
orl
jne
mov
gs
jmp
pop
stc
movl
cmc
and
roll
rcr
push
outsb
mov
xor
cs
add
xchg
push
dec
xor
das
inc
mov
lcall
cld
shrb
jmp
adc
imull
sub
imul
inc
outsb
xchg
jb,pn
mov
sbb
test
scas
add
adc
cmp
fbld
loop
je
xchg
xchg
lret
add
insb
test
aam
pop
andl
dec
fadds
sub
mov
loopne
loope
pop
pop
pop
sub
add
push
inc
inc
push
mov
inc
xor
dec
test
aas
push
dec
jmp
push
push
or
pop
leave
and
out
xchg
flds
mov
mov
dec
fsubr
push
rcrl
sbb
pop
inc
es
or
inc
jecxz
push
not
enter
mov
ret
and
gs
sub
pop
and
cmp
hlt
pop
popf
imull
cwtl
out
icebp
pop
mov
mov
iret
jmp
add
stos
mov
rolb
jb
and
mov
mov
dec
aad
add
jmp
mov
pslld
pop
cmc
loope
ds
sub
xchg
jl
adc
dec
ja
stos
jmp
adc
mov
push
inc
add
mov
call
jmp
add
xor
orb
jg
inc
add
inc
add
inc
or
cli
bound
pop
jp
adc
jl
or
xor
dec
xchg
clc
adc
insl
cmpsb
stc
push
add
mov
aam
ljmp
jp
or
jmp
loopne
idivl
aas
pop
pop
out
mov
outsb
add
repz
mov
out
mov
mov
rorb
cmp
adc
jno
mov
aad
mov
outsl
adc
repnz
jecxz
jmp
add
hlt
loopne
inc
sbbl
push
std
mov
pop
repz
rcll
pop
imul
or
sarb
inc
xor
ds
in
enter
faddl
shl
inc
xchg
sbb
cld
testl
xchg
cmp
test
out
test
sub
xchg
ljmp
pop
xchg
inc
adc
cmp
jmp
pushf
dec
dec
cmp
add
and
or
jmp
push
pop
dec
mov
pop
and
in
inc
mov
in
test
push
xchg
ja
es
jae
adc
dec
movsl
add
mov
popf
clc
stc
add
push
std
gs
nop
add
mov
cli
xchg
outsl
or
sbb
and
jmp
lds
jmp
dec
mov
out
adc
mov
stos
mov
ret
into
sti
pushf
cli
xchg
sub
and
sbbl
das
fisttpll
jno
xor
mov
leave
xchg
in
outsl
adc
push
in
movsl
mov
pop
daa
ficoml
push
adc
jg
cmp
add
loop
outsl
test
mov
scas
mov
sahf
adc
es
or
popf
loope
mov
pop
call
cmp
test
mov
pop
dec
int3
sub
add
pop
adc
subb
les
inc
filds
adc
xor
mov
mov
insb
adcl
arpl
push
mov
dec
in
loope
out
xor
adc
sti
jbe
pop
inc
cmpsb
push
aas
rcll
sub
or
insl
push
dec
jb
xor
add
pop
adc
push
dec
xor
fmull
out
mov
adc
push
cmp
test
jmp
addr16
mov
movsb
xorb
fs
mov
dec
jae
rolb
add
pop
jp
out
rclb
add
push
enter
mov
out
mov
je
andl
stc
adc
pop
adc
sub
lea
xchg
imul
imul
or
dec
movlps
repnz
mov
push
adc
test
cmp
dec
mov
out
daa
push
repnz
jne
dec
fdivr
nop
inc
and
out
out
mov
dec
daa
or
vmovaps
aad
rorb
jnp
jmp
dec
mov
sahf
mov
insl
sub
or
sbb
add
into
or
jg
call
mov
nop
inc
add
fnstenv
dec
push
inc
xor
cmpsb
or
push
lret
pop
test
imul
out
cli
and
push
sbb
scas
jl
aas
in
xor
adcl
xor
cli
imul
push
jo
pop
cmp
loopne
jmp
sub
or
push
or
inc
adc
test
or
xor
sub
insb
movsb
or
pop
pop
jge
in
aas
call
add
loop
or
push
rorl
dec
xchg
stos
ja
inc
testb
loopne
lret
ret
hlt
rolb
add
shr
xor
scas
std
lods
pop
out
push
sub
icebp
dec
sub
lock
popf
call
test
pop
andb
xor
mov
andb
pop
pusha
inc
sub
xchg
push
notl
add
aam
or
sub
sti
xor
loope
sbb
jmp
push
jmp
push
mov
test
scas
scas
mov
das
stos
sub
pop
cmpsl
fistpl
cmp
mov
inc
cwtl
ljmp
inc
push
jnp
fcmove
data16
test
inc
sbb
pusha
mov
mov
insl
adc
pop
ret
hlt
int3
sbb
pop
or
mov
or
push
add
das
jg
sbb
add
xor
push
addr16
add
imul
mov
push
or
pop
es
push
mov
dec
adc
in
or
add
das
cmp
sarb
jmp
pushf
arpl
inc
shr
adc
lcall
jmp
cs
rcll
bound
daa
xchg
push
je
outsl
xchg
scas
add
sub
fwait
dec
sub
mov
jle
js
pop
push
stos
imul
fbstp
inc
cs
sub
add
daa
stos
mov
mov
pop
push
es
nop
add
mov
aaa
pusha
out
sub
lods
in
add
dec
cmpsb
jle
mov
aas
test
push
out
or
mov
data16
xor
sbb
pop
mov
push
mov
mov
and
pop
or
xor
repnz
jle
addb
daa
adc
mov
jge
sti
jmp
or
and
adc
jmp
cmp
mov
arpl
cmc
inc
pop
sub
jmp
xlat
out
ljmp
das
leave
jg
and
push
push
add
mov
jmp
loopne
push
jns
add
or
imul
fmull
mov
push
dec
test
pushf
popf
loope
jo
stos
sub
loope
insb
jl
pop
sbb
add
sbb
jmp
call
outsl
sbb
je
scas
pop
sarl
mov
adc
fdivrl
shlb
and
or
pop
and
add
sub
les
and
loope
push
sub
rorb
sub
out
cmpsl
xor
pop
test
push
loopne
add
mov
loop
jle
sub
cmpsl
mov
dec
aam
out
inc
test
fldl
gs
inc
jo
jo
neg
inc
add
jmp
pop
mov
mov
pop
rol
push
jb
and
hlt
testl
add
inc
add
push
push
aam
adc
adc
pop
stos
inc
aam
pop
scas
mov
xor
daa
ret
pop
mov
fldz
iret
mov
cmp
test
inc
in
pushf
add
test
lds
pop
test
fisubs
sbb
or
mov
pop
push
icebp
pop
gs
dec
jmp
fimull
cmp
addr16
ljmp
dec
and
xlat
testl
outsb
mov
mov
pop
push
xchg
cmpsl
sbbl
or
dec
pop
adc
mov
cmp
push
xchg
add
movsb
sbb
aaa
pop
incl
filds
cs
push
sbb
add
jo
or
clc
fidivl
dec
pop
in
je
adc
loopne
mov
pop
xor
xchg
mov
and
mov
lds
inc
pop
add
adcb
pop
pop
aad
lret
sbb
mov
push
mov
and
nop
sub
aad
and
cli
xchg
loopne
imul
add
iret
rcrl
xor
or
push
push
adc
jno
push
sbb
pusha
pushf
out
mov
and
mov
mov
mull
pop
sub
jne
outsl
out
into
sub
xlat
popa
dec
icebp
ja
xchg
dec
push
sar
movsb
push
and
scas
mov
ja
or
fwait
push
mov
xchg
push
daa
addr16
rcrb
js
arpl
test
jnp
fistpl
jp
popf
clc
sub
aas
cmpsb
lock
out
jmp
cmp
int
push
push
pusha
in
imul
outsb
inc
stos
mov
test
add
dec
mov
orb
cmp
push
sarl
addr16
mov
fildl
and
sub
sub
push
rcrb
negb
or
out
test
aam
out
lret
cmp
adc
loop
pop
bnd
jg
mov
test
xchg
cli
lret
inc
call
cli
int3
es
sbb
scas
sbb
jne
jg
or
add
push
xor
dec
imul
add
std
adc
jne
cwtl
xor
dec
or
cmpsb
mov
dec
in
xchg
push
dec
bound
mov
pop
jbe
ret
inc
sbb
mov
pop
sub
lret
jmp
lods
add
repnz
and
mov
jb
lahf
jle
push
sub
lahf
cli
xchg
lret
xorb
sbb
shl
hlt
pop
pop
inc
mov
sti
adc
or
mov
cmp
das
pop
xor
in
cmp
fmul
or
adc
mov
push
mov
dec
add
xorb
outsb
mov
add
inc
jmp
dec
orb
in
or
jmp
sti
fcmovbe
jge
and
loopne
aaa
push
push
js
cmp
pop
stos
add
ds
fdivrs
add
lret
adc
mov
cmp
aam
fsubrs
adc
sub
xchg
cwtl
sbb
dec
adc
add
inc
dec
inc
scas
inc
or
das
ljmp
int3
loopne
arpl
movsb
mov
imul
movsb
mov
scas
stc
mov
push
scas
jle
pushf
lock
pop
in
jmp
add
adcb
fs
and
negb
mov
add
xchg
loope
sbb
add
push
out
loop
nop
push
test
cld
jmp
scas
jecxz
sbbl
stos
and
add
jecxz
adc
ss
adc
adc
sub
push
cmp
push
push
mov
push
push
push
repnz
mov
jmp
xchg
push
or
xchg
jge
popf
repnz
and
hlt
mov
inc
mov
mov
es
sub
cmp
sub
pop
adc
add
arpl
cmp
jb
dec
jmp
push
out
mov
add
js
push
jmp
mov
inc
adc
pop
jmp
add
jmp
shrb
push
pop
cwtl
stos
pop
mov
pop
and
push
jl
add
subb
dec
sbb
or
stc
pop
lea
push
pushf
push
das
cld
pop
mov
push
orl
pop
sub
adc
nop
sbb
lret
mov
xchg
push
jmp
inc
sbb
pop
dec
inc
incl
shrb
loope
jl
lret
subl
mov
mov
sub
jge
stos
aaa
orl
add
movsl
cmp
sub
sub
lahf
in
lock
or
call
cs
or
cmp
test
xor
mov
mov
imul
ret
dec
fsubrl
push
iret
rolb
adc
aas
xor
jno
movsl
push
fldt
hlt
adc
jmp
xchg
sbb
shl
push
out
sbb
dec
ljmp
fwait
jge
jle
add
cmp
hlt
jmp
dec
gs
mov
inc
int3
popf
inc
movsb
mov
mov
push
add
add
lcall
cmp
or
jmp
pop
pop
pusha
ja
sbb
dec
push
push
add
fnsave
loop
mov
sti
movsl
out
add
dec
movsb
push
out
mov
and
sub
and
bound
ficomps
mov
sub
dec
out
push
in
ljmp
incl
pushf
pavgb
push
adc
addb
and
pop
cwtl
inc
ljmp
addb
mov
cs
dec
dec
add
lock
es
js
js
pop
pop
push
push
or
out
sub
sarb
pop
ljmp
add
ret
or
cwtl
and
rclb
mov
sub
push
repnz
xchg
or
movsl
jne
lahf
add
loop
sub
shrl
ljmp
mov
daa
leave
jbe
and
iret
and
cmp
sbb
ljmp
fsubs
inc
subb
jl
inc
push
mov
push
lods
xchg
sub
cmp
imul
lods
das
mov
mov
divl
jae
or
jmp
leave
dec
add
xor
call
sub
pop
cmc
mov
jnp
xor
push
mov
fsubr
pop
add
iret
pop
neg
stos
mov
outsb
add
jp
mov
xlat
frstor
push
imul
jo
or
inc
idivb
xchg
fstpt
std
daa
push
arpl
mov
adc
push
imul
add
jecxz
push
add
sbb
jecxz
push
fsubrs
jmp
add
stc
inc
shr
cmp
inc
push
pop
aaa
mov
push
inc
xchg
loope
add
outsl
into
jmp
ja
lds
mov
lock
popa
call
or
and
mov
cmp
lret
pop
xor
jg
scas
jo
jmp
incl
mov
lods
mov
mov
out
push
mov
cmp
idivl
shr
adc
cwtl
xchg
call
hlt
xor
jp
xchg
push
inc
hlt
pop
fwait
and
mov
dec
sar
es
out
cmp
test
int3
dec
out
sub
jecxz,pn
xchg
stos
mov
xor
inc
push
push
mov
mov
daa
pop
jo
mov
dec
adc
sbb
inc
mov
or
dec
xor
sub
mov
push
sarb
add
mov
je
loope
leave
xor
sub
push
mov
or
push
test
out
xlat
rcr
pop
xor
int
push
adc
or
jg
shl
sub
sub
icebp
in
idivb
add
pop
cmp
jo
sub
xchg
cmp
cmp
and
add
negl
dec
xor
xchg
add
dec
add
addb
add
pop
xchg
dec
int3
push
shrb
addr16
pop
sahf
dec
cmc
add
arpl
sub
dec
repz
imul
jmp
lret
push
addb
or
aaa
add
xchg
notl
adc
add
pop
adc
test
xor
mov
xor
jmp
inc
jb
fcoml
leave
inc
lcall
shlb
pushf
or
shl
or
popa
add
or
test
mov
ljmp
pushf
ss
enter
xchg
movb
push
push
sbb
adc
mov
jmp
mov
call
lret
nop
xor
shr
jmp
out
sahf
mov
leave
cmp
dec
add
jae
aaa
inc
cmp
in
out
push
push
mov
fs
loop
lahf
in
jle
and
xor
xor
je
pop
xor
dec
repz
lret
ret
push
sub
std
push
pop
sbb
rorl
clc
mov
jmp
mov
je
pop
lahf
jecxz
dec
in
lea
jl
mov
and
push
push
add
rclb
and
jbe
add
sub
adc
inc
lods
fadds
xor
daa
xchg
jo
pop
jmp
push
lds
fdivrs
icebp
pop
cmp
and
adc
loope
pop
js
insb
int
popa
or
std
mov
or
ja
es
loope
imul
add
pop
dec
mov
daa
pop
sub
sbb
daa
mov
jecxz
repnz
icebp
mov
daa
mov
ds
mov
mov
or
gs
and
pop
enter
inc
dec
pop
add
adc
xchg
add
ja
xlat
inc
jmp
dec
pop
xchg
add
mov
or
push
add
jns
xor
jo
jl
popa
dec
mov
rorb
mov
mov
mov
hlt
add
mov
jmp
add
test
movsl
xor
js
popf
fists
jo
cmp
test
int3
mov
popf
nop
cmp
xchg
mov
fisttpl
mov
add
imul
ss
mov
push
movsl
mov
mov
je
addl
clc
pop
das
cmp
jb
sbb
inc
sbb
js
push
mov
ja
fsubl
jecxz
dec
pop
mov
loopne
push
jmp
fisttpl
fcoml
outsl
add
push
jmp
shll
jmp
add
add
insl
xor
cmp
jl
fsubrp
out
add
mov
xchg
in
lock
cmp
adc
and
mov
lea
dec
addr16
loop
cwtl
dec
mov
add
mov
ja
fldl
cwtl
lock
clc
or
add
stc
dec
rcrb
push
ret
out
mov
cmp
add
lahf
loope
jmp
cld
inc
push
aad
dec
test
jmp
push
push
push
cwtl
ja
xchg
fists
ds
pop
jne
jmp
sub
push
sbb
hlt
and
stos
lret
xchg
dec
lods
xor
out
cmp
jge
test
test
iret
popf
ja
cwtl
xchg
pop
rolb
jg
outsl
or
pop
push
js
dec
xchg
push
ljmp
notl
push
pop
and
mov
cmp
xor
scas
adc
sbb
imul
iret
hlt
sub
sub
fwait
and
add
mov
mov
test
inc
or
out
hlt
mov
xchg
and
mov
push
add
inc
sub
test
or
or
insb
and
ret
or
into
cmp
nop
ss
ds
adcb
push
mov
pop
jmp
dec
test
mov
add
fnstenv
jmp
dec
pop
adc
ja
push
mov
shrl
mov
mov
jl
pushf
push
ret
jmp
into
pop
sub
lea
dec
jmp
lahf
or
enter
mov
and
aaa
jp
inc
or
push
pusha
outsl
test
movsl
mov
insb
popf
icebp
aaa
mov
mov
inc
jns
dec
add
mov
sbb
push
mov
xor
add
movsb
imul
dec
push
call
xchg
rcll
pop
jno
push
sub
inc
mov
shr
outsl
pop
popf
cld
int
adc
loope
addb
jae
ds
ret
shr
sti
ret
not
pextrw
aas
in
mov
in
test
push
mov
sub
adc
out
test
int3
sub
jnp
mov
imul
xor
xlat
pop
fnstsw
int3
popf
ret
inc
or
push
inc
leave
push
add
pop
movsb
pop
scas
mov
sti
test
mov
push
sub
jmp
int3
push
jg
in
hlt
jmp
std
mov
test
inc
orl
push
push
cmp
xor
lods
xchg
test
stos
je
scas
jge
dec
adc
inc
sub
loopne
adc
add
jecxz
jl
xchg
add
jg
cmp
out
mov
jg
mov
jecxz
xchg
add
push
xchg
loop
dec
xor
fcompl
shll
push
daa
pop
pop
cwtl
push
fcmovb
pop
pop
gs
pop
sbb
mov
mov
add
clc
test
pop
fs
xor
test
mov
movswl
notl
mov
loope
mov
dec
mov
aas
or
outsl
xchg
sbb
aas
popf
pusha
fwait
inc
orl
into
add
and
xchg
add
insl
push
adcl
adc
add
inc
lods
daa
add
push
push
push
outsl
pop
shr
jne
js
jge
daa
rorl
imul
test
movhps
sbb
scas
movsl
out
enter
sub
adc
mov
cmp
or
sbb
sub
jge
leave
pop
iret
or
push
lock
add
or
or
addb
fdivr
loop,pn
gs
push
aad
stos
adc
or
lret
sub
rorb
mov
jae
dec
pop
adc
jle
add
inc
adc
pop
push
sub
mov
jecxz
jne
push
xor
pop
daa
sbb
loopne
adc
lret
repz
cld
push
cli
push
out
cmp
bound
testb
js
dec
movsl
icebp
mov
adcl
stos
ret
cmp
push
pop
inc
push
mov
and
cmp
mov
ficoms
mov
arpl
push
jo
roll
cmp
push
rorb
iret
pop
mov
popf
or
sbb
daa
and
push
inc
add
jmp
jmp
xchg
sete
push
mov
loope
sub
dec
jecxz
mov
pop
inc
add
jae
push
test
pop
inc
cld
and
aad
aaa
outsb
dec
or
shll
adc
sub
push
rcl
xor
out
inc
mov
add
sub
orl
cli
pop
and
jo
xlat
sbb
jnp
push
sbb
push
mov
arpl
pop
lcall
fwait
inc
add
add
xchg
sbb
xor
xor
shr
shll
out
cmp
stos
sbbl
add
std
add
int
or
leave
jmp
rorl
add
pop
pop
ljmp
inc
fcmovne
sbb
sahf
sbbl
or
pop
add
icebp
in
nop
cmp
fcmovb
out
pop
mov
je
cs
jle
xor
dec
jle
sub
push
jmp
add
in
add
sbb
add
xor
fisttps
fildll
xchg
aad
jne
inc
in
and
js
mov
stos
cmp
add
pop
ret
js
xor
dec
push
call
xchg
repnz
mov
add
xchg
pop
lods
loopne
xchg
jnp
outsb
inc
ljmp
lret
pop
daa
cmc
or
loop
dec
inc
adc
rolb
jecxz
mov
lds
add
adc
push
push
in
mov
dec
jmp
lahf
or
sbb
es
xor
fwait
mov
stc
or
push
push
cmp
mov
fmuls
pop
jmp
mov
jmp
adc
stos
cmc
je
stc
in
test
mov
mov
pop
sar
jmp
cwtl
pop
imul
mov
mov
xchg
add
mov
pushf
sub
cmp
cs
pop
push
jns
into
rol
inc
stc
cmpsl
xor
mov
sub
jl
js
cli
imul
pop
or
lods
push
mov
sub
repz
in
inc
mov
ljmp
jecxz
mov
add
inc
addl
sbb
xchg
shrb
les
xchg
xorl
add
push
imul
filds
lret
aad
pusha
cwtl
inc
add
jae
xchg
or
es
lea
and
in
rolb
lock
pop
icebp
inc
mov
jg
sub
cmc
inc
leave
jge
js
repz
inc
xchg
mov
pop
out
push
mov
mov
pop
mov
stc
push
adc
dec
push
mov
test
mov
pop
jle
or
sub
test
mov
pop
jae
movsb
inc
sub
leave
jecxz
ja
rcll
dec
lret
dec
jne
sub
push
mov
add
mov
sbb
and
xchg
push
push
push
loopne
sub
sub
dec
add
mov
xchg
jns
dec
lret
into
inc
jne
or
test
ret
inc
sbb
and
shr
ficomps
js
xchg
into
shlb
ret
mov
icebp
in
clc
jnp
in
mov
dec
std
loopne
push
dec
dec
mov
clts
xlat
nop
mov
es
sub
int3
dec
loope
add
or
jmp
add
insl
dec
cs
daa
xlat
std
lds
push
mov
inc
pop
shll
jno
adc
add
push
dec
cmpsl
mov
bound
and
inc
scas
sbb
pop
pusha
call
mov
push
int3
xchg
out
daa
ds
in
mov
mov
aaa
cmp
subl
scas
adc
mov
jmp
mov
pusha
mov
inc
or
hlt
and
rolb
dec
pop
mov
jg
mov
pop
and
add
imul
mov
dec
lods
and
sub
or
jge
mov
mov
rcll
scas
inc
and
fwait
push
cmp
mov
adcb
and
add
push
inc
fsts
mov
or
jno
lock
and
popf
hlt
dec
push
int
lahf
in
mov
and
add
sbb
ds
and
loopne
or
add
movsb
sub
mov
push
cmpb
add
dec
inc
mov
sbb
mov
mov
jp
pop
jns
mov
arpl
das
push
dec
pop
xchg
dec
stos
mov
test
xchg
xchg
sub
sahf
jp
loopne
shl
pop
aas
jmp
enter
test
add
call
arpl
lock
push
push
dec
adc
sbb
test
pop
jnp
pop
cmp
xchg
mov
or
mov
add
adc
pop
cmp
scas
fdivl
push
cmp
shrl
sub
lcall
xor
call
in
scas
fstl
leave
jno
xor
push
icebp
adc
cmp
push
xor
jnp
imul
xor
sti
repz
outsb
pop
add
sbb
icebp
or
cmp
push
and
xchg
std
mov
mov
ret
mov
xor
jg
pop
std
repnz
add
jp
out
mov
xor
in
fildll
imul
xor
dec
or
repz
in
adc
daa
sub
mov
arpl
or
push
xchg
pop
rcr
into
push
push
in
repz
inc
pop
movsb
jge
mov
pushw
sub
inc
popf
ret
jnp
or
negl
mov
out
xor
out
repz
xor
jns
push
in
add
mov
hlt
or
cli
pop
pop
jmp
add
stc
lods
add
push
sbb
pop
bound
lahf
jge
mov
add
jae
das
push
mov
pop
xchg
or
add
and
sbb
xor
push
test
test
xchg
add
hlt
adc
mov
or
sbb
data16
mov
mov
lds
pop
mov
push
push
sub
xchg
sbb
pusha
in
push
out
cmp
clc
jne
push
pop
push
insl
leave
push
cs
inc
xor
int3
jge
leave
xor
pop
cs
jp
mov
pop
dec
dec
negb
mov
mov
in
push
add
enter
data16
and
xor
mov
shrl
mov
jns
mov
pop
daa
jmp
jecxz
pop
mov
xor
imul
push
push
aas
mov
ljmp
add
add
stos
std
enter
add
xchg
mov
mov
mov
sub
je
rol
cmp
adc
sub
adc
or
push
lock
sbb
cmp
or
inc
lds
rolb
fimuls
mov
or
sub
cli
std
xchg
cmpsl
sub
dec
add
lods
jge
sub
lret
jg
loope
in
jge
pop
xchg
or
dec
sti
iret
or
sbb
sbb
mov
inc
decb
or
je
or
mov
xchg
leave
cld
pop
lods
xchg
adc
xor
push
mov
sbb
ds
pop
in
add
or
or
pusha
xlat
test
test
sbb
sarl
rcrl
push
leave
into
call
push
dec
dec
push
xchg
xchg
jmp
inc
adc
out
jl
sub
out
lock
fildll
lods
mov
mov
push
jb
pop
jmp
sahf
mov
int3
xor
lock
xor
jbe
push
loope
push
xchg
dec
mov
mov
hlt
adc
mov
cs
add
mov
jge
dec
dec
push
loopne
icebp
out
adc
add
ret
jmp
dec
xchg
lds
jnp
and
shl
xchg
loopne
pop
movsb
cltd
je
aas
fs
pop
xbegin
repz
adc
xor
jmp
arpl
push
adcl
mov
mov
outsl
or
push
add
pop
sti
fildll
and
js
mov
pop
pop
sub
fs
sbb
add
push
push
je
mov
aad
adcl
ljmp
mul
xor
cld
inc
pop
lds
daa
xor
and
mov
add
push
popl
std
pop
sbb
call
jmp
mov
cmp
rdmsr
xlat
clc
lret
les
lret
jmp
adc
lret
jge
pop
pop
pop
pusha
mov
push
out
or
xchg
jp
cmpsl
aas
daa
shl
pop
jns
add
lods
stc
mov
jmp
add
leave
sbb
sub
scas
pushf
lahf
and
mov
add
mov
sbb
sub
outsl
mov
jns
imul
cmp
inc
xchg
clc
or
push
push
add
arpl
out
mov
jge
outsl
adc
add
or
fimull
hlt
mov
inc
dec
sub
mov
pusha
shll
sub
cmp
jmp
push
inc
dec
dec
pop
std
aas
inc
or
rorl
jmp
fidivrs
mov
imul
nop
shlb
es
cmp
dec
mov
adc
add
add
push
or
pop
gs
out
popa
jg
dec
outsl
mov
push
dec
xchg
iret
add
add
jle
sahf
push
es
sub
jle
and
cli
sub
ss
jne
mov
lea
push
sub
push
fsubp
int3
cmc
xlat
adc
popf
sti
mov
xor
adc
cltd
mov
imul
or
jecxz
or
adc
outsb
rorb
aam
sti
out
leave
or
icebp
pop
jmp
rclb
cmp
aam
or
fstps
push
or
pop
pop
mov
dec
xor
jl
or
roll
sub
mov
jmp
sbb
sbb
add
jno
cs
add
jmp
xor
push
xchg
imul
jbe
and
shll
jle
pop
mov
fdiv
cmp
sub
xor
in
pushf
test
dec
sarl
cmp
xor
push
js
jno
jl
inc
jo
add
mov
add
adc
xor
lods
and
add
ljmp
rcll
and
push
cmp
mov
adc
xchg
bound
or
hlt
pop
jmp
mov
jmp
mov
dec
inc
mov
jae
inc
pushf
jl
xor
or
jmp
push
xlat
xor
shl
jecxz,pn
adc
push
mov
ret
inc
inc
xor
pop
pop
xlat
xchg
mov
and
sub
cmc
out
and
and
lods
mov
subl
imul
pop
repnz
xchg
out
dec
clc
xchg
les
push
sti
adc
mov
push
imul
add
lods
daa
repz
jo
jmp
scas
cmpb
pop
neg
sbb
xor
mov
push
push
ss
hlt
mov
add
push
shr
not
nop
push
adc
sahf
add
cmp
dec
xor
push
jge
pop
lods
xor
and
div
bound
dec
jb
adc
scas
add
sub
inc
mov
leave
lcall
rorl
shrb
push
ds
jno
jmp
mov
inc
rclb
or
out
add
adc
push
shrb
adc
or
dec
mov
shld
sbb
pop
add
mov
sbb
aad
subb
jge
clc
cli
add
jno
lea
lock
sbb
sbb
hlt
or
xchg
outsb
pushf
inc
imul
or
nop
sbb
or
std
dec
add
add
ss
daa
add
adc
test
xchg
add
pushf
nop
and
js
push
xchg
xor
push
dec
out
andb
jne
push
xor
pop
jns
sbb
sahf
stos
add
pop
inc
lods
cmpsb
mov
add
add
push
add
pop
push
mov
or
mov
mov
mov
pushf
mov
ret
and
std
and
push
push
push
mov
push
add
and
adc
mov
mov
arpl
fwait
lock
andb
add
adc
sub
or
mov
push
or
or
or
xchg
int3
or
es
adc
nop
cmp
loop
xor
scas
mov
mov
mov
dec
mov
and
inc
or
sti
movsb
add
xchg
add
adc
add
add
mov
in
inc
xchg
sub
dec
in
stos
pusha
adc
jo
dec
cld
inc
movsl
xchg
inc
jns
inc
inc
es
sbb
lods
in
mov
js
push
inc
pop
pop
inc
push
cmpsb
les
cltd
xchg
xchg
add
cmc
in
add
cli
push
out
testb
mov
pop
push
loop
push
test
and
xchg
dec
jno
fwait
and
bound
jns
add
mov
ss
add
insl
dec
rolb
lret
inc
aaa
pop
inc
pop
stc
pop
add
mov
repnz
std
test
insl
add
inc
add
or
aad
pop
ret
jnp
cld
xor
sub
std
sub
popa
icebp
movsl
movsl
imull
cmp
outsl
mov
out
or
push
sbb
pop
ljmp
daa
mov
sub
into
push
dec
rol
sub
jo
inc
xchg
sarl
sub
pop
pop
push
mov
shlb
loopne
mov
mov
add
pop
jmp
push
mov
outsl
mov
mov
jbe
sbb
rol
sub
mov
subb
outsb
add
cmp
insb
xor
loope
add
sbb
add
ds
cmp
popa
jg
push
xchg
dec
and
fcoml
jns
and
outsb
jmp
push
pop
sti
mov
dec
test
or
push
pusha
and
xor
cmp
sar
push
mov
mov
dec
jmp
negl
inc
xor
out
fildl
clc
jmp
add
push
add
xchg
lds
aaa
shlb
rorl
mov
jne
adc
pop
ret
mov
add
jmp
mov
mov
push
mov
xchg
mov
or
pop
or
in
std
jnp
adcb
pop
scas
jno
mov
push
cmp
ds
dec
int3
dec
mov
add
sub
dec
fsubrs
jmp
mov
ljmp
inc
stos
daa
pushf
adc
pop
movsb
gs
jmp
fildl
rorb
fnstsw
push
fsubrp
leave
pop
xor
pop
sub
in
jmp
xchg
inc
mov
ffree
inc
mov
or
add
push
std
add
jmp
and
add
jecxz
sub
and
and
dec
aad
push
mov
sub
in
js
cld
cmp
mov
lea
mov
push
scas
mov
or
lods
adc
cltd
mov
call
add
sub
ret
ja
imull
in
movsb
mov
add
sub
pop
lret
shll
out
or
xchg
pop
jmp
mov
rcrl
add
fcomi
cmp
sbb
out
daa
clc
inc
or
scas
cltd
lods
add
in
incb
cmc
jg
data16
xchg
outsl
gs
sbb
cmp
stc
push
aaa
mov
jmp
or
outsl
mov
mov
ss
inc
add
movsb
sub
jae
inc
repnz
loopne
pop
push
mov
dec
loopne
pop
and
pop
add
add
sbb
add
inc
pop
push
push
mov
jge
nop
push
in
push
data16
or
push
mov
sbb
jne
mov
call
ret
lds
aam
add
mov
testl
je
es
sub
xor
aam
dec
sar
mov
lcall
call
ja
lock
or
mov
out
mov
clc
push
test
rcll
shr
int3
push
sub
mov
jmp
add
cmp
outsl
jmp
inc
cmp
pop
or
pop
push
into
andl
jmp
pusha
add
mov
rdpmc
jecxz
or
rclb
inc
in
repnz
add
loope
scas
js
repnz
pushf
cmpsb
mov
je
xchg
dec
cmp
pusha
mov
fisttpll
pop
add
jmp
cld
sbb
aaa
xchg
mov
mov
stc
pushl
cmp
jmp
push
mov
pusha
pop
xchg
not
and
mov
mov
test
and
xchg
sub
pop
add
stos
sbb
add
add
mov
rorl
nop
addr16
mov
aad
and
inc
daa
inc
orb
jmp
out
dec
gs
mov
xlat
and
mov
mov
dec
adc
dec
push
fildl
popa
push
lcall
repz
push
lcall
add
nop
or
lret
jle
loop
aaa
push
push
xchg
pop
decl
ljmp
std
xchg
in
pop
jp
subb
rcrb
in
testb
inc
xchg
sub
scas
pusha
add
into
xchg
aaa
xchg
sub
xor
inc
cmp
shll
inc
xor
adc
xchg
sub
arpl
in
add
addr16
loopne
dec
or
sbb
sti
insl
int3
in
jmp
and
jmp
mov
dec
sub
shr
inc
jge
cmp
les
sarl
movsb
push
fadds
push
push
mov
roll
enter
dec
sub
lods
mov
xlat
jbe
cld
xor
mov
mov
adc
hlt
ficoml
add
xor
mov
ret
inc
test
or
scas
es
out
push
sub
jo
push
les
out
push
xor
push
pop
enter
test
sbb
xor
or
fidivrs
cld
flds
pop
pop
ljmp
push
xor
push
mov
movsb
xor
xor
inc
loopne
je
xor
and
pop
pop
adc
adc
adc
mov
inc
and
pop
xchg
hlt
mov
fistpll
pusha
add
sti
ljmp
lcall
sub
sarb
icebp
pop
mov
push
js
jb
das
mov
jle
and
imul
je
bound
mov
test
push
mov
sbbb
fucomip
add
scas
iret
inc
or
sahf
sti
and
xchg
cmpsl
push
xchg
adc
adc
mov
je
sbb
dec
bound
lock
add
cmp
mov
dec
pop
or
push
mov
and
clc
adc
xchg
xchg
inc
sysret
adc
ret
add
in
mov
ret
ljmp
xchg
lcall
pop
mov
add
pop
or
lock
das
stc
jb
pushf
js
add
lods
pop
jmp
in
stc
dec
movsl
and
jnp
push
je
ret
mov
add
mov
jmp
pop
add
lahf
mov
subl
loopne,pt
push
cmp
xchg
mov
daa
faddl
or
xor
ss
add
ret
lds
jnp
or
adc
out
rcrb
xor
add
jno
loopne
mov
sbb
mov
in
push
cmp
push
pop
lcall
xor
cli
push
push
mov
mov
sub
pop
cmp
lret
shr
pusha
push
sbb
outsb
daa
ja
inc
add
lods
add
push
dec
cmp
divl
or
jne
enter
inc
jmp
das
enter
cmc
shl
sbb
mov
test
std
outsb
pop
cltd
mov
or
sbb
mov
jmp
stos
xchg
fbld
add
or
jmp
push
adc
add
lahf
or
outsb
push
daa
movsb
aaa
or
sub
dec
add
pop
jne
pop
push
ljmp
adc
and
xchg
or
icebp
inc
ret
add
or
nop
cli
arpl
cld
and
loop
stos
or
push
js
lahf
pop
out
imul
cltd
pop
imul
rorl
push
dec
cwtl
xchg
add
mov
stos
imul
jmp
jmp
mov
nop
sub
stc
xchg
push
lea
inc
pop
mov
push
repnz
enter
add
push
or
aas
addb
and
jge
sbb
int
inc
lock
pop
xchg
pop
das
push
sub
clc
add
add
jmp
mov
and
sub
pop
in
cmp
push
mov
inc
fldl
cli
pop
and
or
dec
inc
and
jb
add
push
mov
es
les
push
jl
gs
or
pop
mov
stos
mov
sub
mov
iret
dec
mov
ret
lret
mov
cmpsl
sbb
mov
pushf
cltd
imul
daa
movsb
jg
mov
addr16
lcall
sbb
mov
mov
cltd
dec
loopne
inc
dec
jg
arpl
sbb
sub
add
je
ja
cmc
sbb
cmp
dec
insb
jnp
inc
add
cmp
hlt
add
xchg
aad
jle
and
das
cld
cmpsb
lds
jge
sub
out
shlb
or
enter
jno
mov
nop
pop
repnz
aad
or
rorl
lret
push
sub
cmp
rol
pop
jmp
ret
cs
popa
dec
inc
push
pop
adc
add
add
sub
out
jns
pusha
and
dec
sbb
pusha
mov
movswl
lods
pop
mov
cld
pushf
mov
movsb
call
stc
xor
addb
push
jo
stc
cmp
sub
out
and
xchg
push
cmpl
sti
sbb
loop
or
shrb
mov
jbe
add
mov
fwait
and
into
repz
call
add
sub
icebp
mov
and
sub
pushf
and
out
iret
push
pop
lahf
mov
pop
sbb
xchg
js
pop
movsl
popf
fdivrs
pop
repz
jmp
xchg
sub
insb
push
push
jmp
pop
test
mov
cld
mov
add
xor
lds
push
push
and
push
jno
cmc
mov
or
push
bound
add
outsb
and
pop
push
and
jmp
inc
push
andb
enter
test
shrb
push
sti
imul
pop
dec
stos
mov
cmpb
lods
mov
divb
xchg
nop
rcrb
add
cmp
push
nop
dec
or
sbb
pop
and
dec
dec
jmp
lock
pusha
int3
mov
add
mov
pop
pop
adc
mov
roll
inc
pop
aas
and
jmp
jp
outsb
sub
scas
sarl
bound
in
lock
int3
psadbw
dec
sub
bnd
sbbl
mov
mov
or
xlat
pop
stos
jl
adc
or
xor
push
or
sub
fisttps
mov
mov
add
cli
or
ljmp
pushw
bound
out
inc
pop
cmpsb
shrl
push
jbe
push
or
arpl
je
cmp
jne
fsts
push
mov
cmp
mov
not
add
push
test
jae
adc
repz
pop
or
jle
lret
decb
add
cmp
stos
add
aas
lods
repz
jg
inc
icebp
xchg
add
pop
arpl
adc
lret
sub
or
cwtl
xlat
int3
das
push
outsl
dec
mov
loopne
push
sub
mov
jno
js
shlb
push
mov
push
lods
add
sarl
lods
pop
push
mov
adc
insl
inc
xor
sbb
pusha
loopne
cmpl
dec
nop
scas
test
push
adc
push
mov
pusha
jmp
sub
sub
cmp
add
loope
orb
add
pop
mov
not
ror
bound
mov
add
xor
lock
jmp
fbstp
xchg
notl
popf
jbe
xchg
and
or
inc
jno
mov
hlt
jle
pusha
mov
shl
add
movsb
or
pop
sub
jns
bound
dec
nop
sub
mov
jmp
popa
xchg
stos
pusha
insb
push
sbbl
inc
jmp
and
push
inc
out
add
cmpsb
sbb
sbb
mov
shl
neg
xor
inc
sub
cmp
add
pop
or
cmc
insl
insb
lcall
push
nop
call
fs
je
and
icebp
jmp
data16
and
shlb
out
add
xchg
scas
pop
mov
fistpll
out
fiadds
outsl
scas
or
out
pop
and
jno
add
jbe
cli
xor
xchg
les
in
or
pop
aad
xchg
aas
ret
mov
sub
dec
sub
inc
loopne
icebp
jmp
out
outsl
fdivs
insb
mov
enter
pusha
sbb
dec
dec
jg
or
repz
fxch
insb
mov
push
gs
sbbb
push
inc
pop
inc
jb
push
in
sbb
je
jg
subl
popf
jge
push
mov
and
inc
frstor
xor
dec
xchg
stos
rcl
pop
aaa
pusha
inc
ss
add
pop
add
jne
scas
jne
in
divps
xor
push
inc
in
and
bound
icebp
in
loop
sbb
and
rorb
pop
insb
movsl
std
inc
sub
add
ja
imul
inc
rclb
aaa
mov
lret
addr16
mov
jmp
mov
jg
mov
add
xor
addr16
leave
out
adc
movsb
jae
push
push
add
lret
mov
fs
clc
loope
inc
pop
push
jb
jmp
loope
mov
mov
and
inc
or
push
rolb
stos
addr16
nop
test
add
arpl
and
std
or
test
stc
add
pop
add
sub
jne
jne
jo
call
orl
adc
add
jmp
shr
negb
ficomps
inc
lods
inc
subb
mov
sbb
xor
lahf
shrb
cmp
in
pusha
sbb
jmp
push
sti
and
xor
enter
xor
sbb
out
mov
sub
in
pop
orl
cmc
add
mov
cs
test
mov
jge
rolb
lahf
lock
out
nop
fldenv
and
lahf
das
sub
mov
mov
push
add
xor
dec
jnp
add
push
push
jp
xor
pop
inc
fiaddl
aaa
sbb
cmp
pop
and
cmpsb
out
or
jns
jbe
sub
push
inc
es
sarl
fldl
imul
decb
scas
sub
fmull
iret
xor
add
sbb
stos
lret
jne
fwait
xor
sub
call
adc
jmp
popa
arpl
pop
jnp
pop
pusha
pop
imul
or
sbb
mov
lds
bound
or
fisttpll
and
jmp
mov
outsl
jmp
fldl
cmpl
push
jmp
out
mov
outsb
add
js
ja
clc
mov
jns
mov
sbbl
adc
xchg
scas
in
cmc
pushf
sub
pop
cmp
popf
clc
add
pusha
leave
inc
cmpb
and
pop
pop
pop
movups
inc
mov
imul
mov
mov
xor
push
cli
inc
clc
les
or
pop
loop
add
cs
jmp
leave
mov
or
pop
test
adcb
clc
xchg
dec
out
fisubrl
pop
fsts
shr
call
loope
mov
pop
pushf
ss
lret
pop
push
nop
pop
cmp
jbe
outsb
inc
mov
pop
nop
add
dec
mov
and
test
mov
jmp
push
sub
push
inc
pusha
mov
fildl
jb
inc
dec
pop
sbb
out
je
imul
dec
loope
in
jg
es
push
mov
lea
or
mov
data16
mov
ret
jb
add
inc
icebp
stos
aaa
jae
add
outsl
sbb
adc
lahf
add
popa
data16
scas
in
sbb
cltd
lock
nop
jne
insl
and
jp
daa
mov
out
aam
inc
insb
adc
test
addr16
loop
adc
inc
sbb
mov
lahf
ret
pusha
push
xor
xchg
cld
pushf
add
sbb
jmp
outsb
adcl
mov
lea
adc
lods
push
jge
adc
repnz
add
jnp
xor
cmp
jmp
adc
cmp
mov
pop
leave
or
data16
and
xor
or
cmc
js
outsl
sub
add
sub
popf
mov
inc
iret
jb
in
repz
lock
adc
mov
and
das
movsb
addl
rorl
test
pop
sub
cwtl
jmp
dec
and
dec
inc
sbb
ret
or
xorb
xchg
inc
xor
cmp
dec
mov
call
daa
sub
jmp
or
das
call
daa
pop
testb
jo
add
lahf
jl
add
sub
jns
decb
cwtl
gs
sub
adc
jae
pop
push
add
xor
es
ja
ds
dec
loopne
adc
dec
gs
or
pusha
sub
testb
adc
aaa
hlt
int3
ds
fmull
jecxz
dec
stos
add
mov
sti
loopne
adc
push
sub
rorl
iret
sub
mov
adc
sub
inc
xor
ljmp
pop
and
lods
xlat
adc
and
pop
adc
xchg
sub
in
cli
sbb
or
orw
fsubrs
outsl
xchg
pusha
inc
xor
mov
int
pop
mov
ja
add
cmp
int
sub
pop
mov
pop
pop
push
cltd
ja
inc
push
push
push
mov
mov
sub
test
jl
xor
leave
sub
jmp
dec
xchg
pop
ret
pop
imul
dec
inc
test
jns
cmp
inc
or
mov
jmp
and
xlat
dec
inc
mov
pop
mov
movb
in
shrb
in
push
shrb
inc
enter
sub
and
cmp
dec
or
movsb
inc
add
adc
or
popf
mov
dec
mov
lds
cmpsb
push
mov
cmp
rorl
jae
notl
les
jnp
cld
sbb
leave
or
stos
push
jp
jns
pop
ret
loopne
mov
and
shr
push
mov
sarb
daa
int3
test
les
push
sbb
mov
sub
pusha
cli
pop
loope
loopne
int
clc
add
dec
dec
push
pop
pmullw
aaa
bswap
fsts
movl
xchg
icebp
mov
sub
jmp
ficompl
jbe
jge
icebp
scas
fistpl
out
fmuls
movsl
push
movsl
lcall
mov
add
pop
sub
lods
pop
or
shll
fimull
nop
sub
push
push
pop
xchg
adc
popl
push
pop
jle
or
mov
add
ret
adc
rcrb
push
out
xchg
fdivrl
daa
jmp
add
pop
add
les
into
das
cmp
bound
stc
xlat
push
std
daa
pop
dec
loopne
or
aad
adc
scas
xor
out
jle
fmull
jmp
rcl
jecxz
idivl
icebp
hlt
jge
decb
adcl
mov
inc
sbb
sbb
jg
enter
cmp
ds
mov
push
adc
loope
movsb
push
out
xchg
add
xor
inc
call
in
ljmp
fs
into
push
and
dec
pop
cld
les
fsubrl
int3
and
xlat
mov
add
add
pushf
and
dec
xor
sbb
data16
or
xor
jns
sti
pop
insb
adc
adc
cwtl
mov
clc
dec
xor
out
sub
sbb
repz
push
insb
sbb
cmp
add
out
imul
rcll
cld
cs
aam
jle
xchg
dec
push
xor
nop
jmp
mov
sbb
or
lret
inc
adc
lods
sub
out
in
fidivl
dec
xchg
cli
jp
test
cmp
stos
adc
out
push
add
add
xor
enter
mov
and
cmc
inc
and
add
jnp
push
aas
dec
sub
mov
sub
cmp
dec
adc
adc
add
sub
pusha
mov
dec
stc
cmp
pop
scas
pop
lahf
pop
nop
sahf
frstor
or
dec
insl
adc
mov
push
jl
cmpsb
mov
inc
cli
loopne
dec
sub
adc
ret
nop
scas
jmp
add
pop
jp
mov
ja
cmpb
addr16
mov
sub
test
dec
mov
inc
jno
pop
jmp
call
xor
add
addl
pop
mov
add
pusha
std
mov
lahf
xlat
or
inc
mov
and
add
or
xor
push
or
stc
filds
jg
xchg
ret
mov
push
mov
data16
hlt
mov
stos
push
fstps
pop
inc
mov
pop
sti
inc
out
das
fistpll
inc
repnz
adc
cwtl
fs
pop
mov
xchg
negl
lret
mov
pop
mov
jg
mov
jle
dec
add
dec
jbe
stc
add
cli
sub
cmp
dec
and
mov
push
mov
rolb
or
jmp
loopne
enter
pusha
and
aam
add
movsb
aaa
or
out
cli
ljmp
fs
fsubp
pop
xor
loopne
repnz
js
add
dec
and
or
cmc
mov
push
jo
xchg
push
shrb
dec
jo
mov
adc
xor
xor
ret
jp
cli
adc
or
inc
add
popa
idivb
je
arpl
mov
aad
xchg
pop
pop
mov
sarb
std
in
cld
mov
jecxz
sbb
add
xchg
add
lods
inc
add
pop
adc
es
outsl
ret
or
decb
cltd
pop
int
and
ljmp
loopne
pop
cld
dec
xor
add
xlat
call
or
aad
jmp
fbstp
or
out
and
inc
loop
ret
test
fstl
push
push
push
vpackuswb
stos
dec
pop
lds
cmp
pop
push
sub
hlt
mov
ss
push
push
icebp
bound
adc
sub
jl
lock
rcrb
pop
sbb
negb
sub
xlat
fcoml
notb
mov
loope
push
out
bound
push
push
sbb
or
pop
movsb
mov
cmp
jmp
sbb
or
jbe
dec
push
mov
adc
cmp
sub
jmp
or
ja
xchg
inc
out
ret
repnz
or
scas
or
jmp
and
push
ret
or
shrb
push
js
out
dec
sub
dec
call
loop
rcr
inc
loopne
repz
into
inc
sub
rorb
sub
or
pop
mov
mov
aam
mov
pop
sub
add
sti
enter
lahf
mov
mov
stos
or
ja
dec
push
call
mov
pop
in
js
mov
mov
cmpsl
or
jbe
cmpsb
mov
mov
mov
cs
dec
add
ds
scas
mov
add
das
hlt
mov
jg
jmp
out
adc
pop
arpl
mov
push
mov
adc
jmp
xchg
and
jnp
sahf
sarb
mov
jno
inc
push
adcl
jnp
push
push
sub
sarb
fildll
mov
daa
jg
outsb
fwait
cli
mov
stc
push
and
mov
or
or
cs
add
sbb
pop
xchg
fdivrl
test
mov
jb
dec
xor
ljmp
cwtl
and
inc
sbb
in
mov
in
adc
std
push
mov
add
cs
jae
insl
orl
xor
inc
push
sub
or
push
notb
xor
mov
pusha
pop
mov
xor
push
pop
mov
shl
mov
dec
in
addl
mov
ljmp
push
sbb
push
pusha
or
push
cmpsb
push
out
rolb
sub
test
sbb
add
imul
jecxz
int
xor
mov
inc
dec
insb
dec
int3
dec
inc
mov
scas
cmc
push
mov
mov
shlb
out
dec
ret
jnp
mov
lods
jo
dec
jmp
push
jnp
push
aam
add
icebp
pop
and
push
xchg
push
and
das
leave
xlat
pop
loope
inc
flds
mov
push
add
or
jmp
push
popa
add
fwait
into
push
or
xchg
shr
fcmovnbe
jle
sub
aam
clc
add
add
jmp
mov
push
add
jmp
push
fsubrl
shr
and
push
xor
add
into
cmp
mov
pop
shrb
daa
sub
jmp
std
imul
cltd
mov
mov
data16
mov
ds
dec
cmp
pop
push
push
popa
in
add
nop
out
lods
push
dec
pusha
dec
or
and
pop
jb
fldt
mov
scas
push
lret
jmp
jmp
sar
sub
xor
mov
dec
mov
fistpll
es
subb
mov
and
xor
out
sbb
push
inc
les
inc
pop
inc
xor
or
sbb
xor
subb
scas
mov
pop
pop
mov
mov
jo
xchg
fstl
movsl
push
lret
les
pop
mov
sbb
sbb
xor
xchg
and
lcall
xor
dec
add
aaa
dec
pop
orl
push
and
out
mov
cmc
pop
aas
xchg
fsubrp
mov
xchg
loop
xor
jmp
mov
add
sub
push
fwait
mov
sti
or
jle
pusha
mov
inc
in
adc
sarb
add
stos
fs
and
dec
enter
roll
adc
jns
sbb
dec
sub
push
mov
shr
or
inc
mov
add
add
mov
and
popf
test
mov
not
outsb
test
cmp
fimuls
fcoms
insb
mov
inc
ds
pop
push
mov
xor
rorb
mov
push
stc
and
arpl
add
inc
mov
in
aam
xchg
push
xor
jecxz
int
push
ja
add
sub
xor
lds
fnstsw
dec
xchg
out
jno
xor
leave
sar
sub
pop
mov
neg
lahf
add
ss
ja
mov
or
xlat
repz
gs
mov
adc
aad
mov
add
pop
cmc
aas
cmp
subb
dec
movsb
and
mov
subb
mov
add
xor
pop
std
push
test
sub
dec
scas
mov
xchg
fnsave
pop
mov
push
enterw
aaa
dec
in
jnp
push
sbb
cwtl
push
push
sub
add
fisubl
or
jmp
jge
sub
sub
lea
xor
aam
xlat
push
dec
pop
mov
xor
cmp
sbb
add
ljmp
mov
repz
test
mov
ret
add
test
dec
hlt
into
rolb
js
pop
dec
sub
adc
fs
stc
aas
pop
popa
sbb
clc
aas
shlb
push
push
daa
jmp
and
jmp
mov
push
push
jo
or
dec
xchg
lea
loope
fldcw
stc
je
ljmp
in
cmc
cmpsb
daa
dec
mov
mov
mov
test
and
pop
mov
fstl
mov
out
xchg
pusha
test
mov
jmp
std
xor
jmp
scas
lret
mov
pop
mov
push
pop
mov
iret
pop
xor
mov
sti
adc
add
out
and
and
inc
cmp
dec
mov
mov
and
jno
frndint
mov
xor
mov
pop
mov
mov
mov
and
hlt
jl
ds
test
push
jg
xlat
mov
cmp
std
leave
pop
push
pop
push
repz
mov
mov
sbb
xchg
leave
inc
jo
pop
insb
clc
filds
fldl
ljmp
jnp
or
add
sbb
or
adc
rorb
in
sub
xchg
iret
shrb
outsb
mov
pusha
add
push
xor
jmp
sub
jle
dec
push
ds
out
lcall
mov
sub
orb
fldt
dec
xor
push
xchg
cmpsb
dec
cmc
inc
outsl
enter
ss
jmp
push
out
adc
andb
es
add
repz
jmp
loop
inc
mov
pop
mov
pop
mov
cmc
mov
sub
mov
dec
or
les
push
mov
mov
sub
clc
jmp
add
loopne
sub
mov
add
mov
push
push
mov
jmp
push
andb
jmp
iret
pop
out
push
daa
std
xchg
cmp
jle
fcompl
movsl
vandps
test
or
pop
pop
scas
xchg
cwtd
sti
popa
jmp
fdivl
inc
or
cmp
mov
mov
push
cmp
ja
sub
xchg
leave
or
and
mov
mov
add
aam
or
cli
repz
or
into
das
aad
ljmp
jmp
fnsave
jmp
inc
jmp
pop
add
sub
sub
pop
iret
loopne
mov
cwtl
pop
cwtl
cltd
and
sbb
xor
sub
or
loope
addr16
or
add
dec
add
enter
mov
repnz
movsl
or
mov
hlt
pop
dec
mov
push
push
push
mov
shl
dec
cwtl
imul
jno
add
in
sbb
cmc
push
fwait
or
ds
add
push
mov
divl
das
jle
cmp
xor
rorb
push
push
inc
test
call
jg
fnstcw
movsl
pop
enter
cmc
popa
stc
mov
call
inc
xor
adc
es
scas
gs
or
jmp
lret
filds
push
push
std
inc
orl
fdivrl
and
lret
xlat
push
mov
ja
and
push
test
leave
dec
lock
and
jb
push
pusha
jne
cmp
lret
mov
adc
adc
or
jecxz
les
ljmp
dec
mov
pushf
dec
shll
andl
jg
sbb
movsl
adc
stc
add
sub
pusha
icebp
mov
or
pop
jge
aam
movl
cmp
cmp
iret
leave
pop
xchg
xchg
mov
mov
sub
stos
inc
lahf
mov
jmp
push
dec
test
arpl
xlat
fwait
mov
arpl
ja
and
jno
dec
fstps
or
sub
sub
sub
scas
icebp
inc
pop
jmp
les
movswl
leave
es
pop
roll
test
add
je
std
shlb
not
mov
add
or
out
insl
sub
cmp
repnz
and
sub
sbb
idivb
sbb
push
loopne
inc
jbe
sahf
enter
icebp
push
sahf
int
push
push
pop
dec
insl
jmp
dec
adc
lds
inc
pop
push
jne
add
xor
push
inc
inc
jne
rcrl
jg
aad
lahf
mov
test
cmc
mov
xor
mov
push
push
mov
or
sub
cmp
dec
bound
cmp
jge
or
in
xorb
xchg
jle
das
pop
aaa
lret
and
cmpsb
mov
cmpsl
jmp
xlat
dec
pop
lea
mov
ror
pop
outsl
adc
sub
mov
push
or
xor
dec
popf
add
jo
xchg
jae
hlt
orb
xchg
pop
es
cmp
jns
dec
add
push
push
arpl
and
pop
add
pop
shl
add
pop
inc
sbb
js
cs
cmpsb
pop
outsb
cmp
add
mov
adc
dec
cmpsb
test
and
cmp
ficomps
inc
push
mull
xchg
inc
adc
adc
movsl
cmp
jl
cld
push
mov
shrb
sub
mov
scas
aad
jmp
dec
pop
ret
mov
pop
das
ja
je
push
pop
add
lret
mov
sub
mov
or
mov
out
add
in
loope
aas
mov
sarb
clc
sbb
xchg
lds
sbb
or
popf
and
sub
loop
je
xor
mov
clc
mov
add
and
out
mov
push
repz
test
test
daa
in
shll
arpl
orl
insb
jmp
push
and
jbe
aam
push
sbb
push
xor
loop
or
jne
xor
add
and
sub
sub
lds
and
movsl
imul
cmp
push
jecxz
loopne
dec
mov
fbld
cmpl
xor
sbb
stos
mov
imull
sub
pop
or
jmp
fcoml
dec
or
add
dec
shl
pop
dec
adc
dec
orb
js
sub
pop
pop
fcmovb
fs
roll
mov
mov
les
sbb
adc
lahf
sarb
call
leave
xlat
in
mov
fisubrs
mov
push
mov
sub
mov
sub
fs
popf
lahf
mov
lret
subb
das
neg
fdivl
orl
xor
add
out
clc
jg
jns
out
pop
dec
rorb
sahf
mov
cwtl
or
xor
pop
mov
mov
leave
aad
fcomps
rclb
ljmp
and
test
arpl
or
dec
sarb
push
adcl
jns
insl
sub
pop
xor
push
incl
xor
and
add
decb
test
neg
fisubs
fwait
adc
rolb
jb
jmp
test
adc
clc
repnz
sti
push
jecxz
jnp
inc
push
add
dec
rorl
fdivrs
bound
insl
sbb
push
sub
pop
push
mov
add
xchg
rcl
mov
popf
dec
xchg
push
inc
pop
jo
lret
cmp
cs
mov
sbb
out
dec
leave
out
jg
insl
into
or
aas
add
sbb
mov
add
movsl
jno
pop
jnp
imul
dec
xor
jae
and
mov
pop
repnz
mov
loop
add
stos
fstps
nop
ror
mov
or
push
xchg
cli
xor
andl
sub
mov
lret
fcompl
gs
or
sahf
jmp
rcll
add
loop
xchg
or
mov
sbbl
js
push
adc
sub
add
jmp
sti
sub
and
sub
inc
outsb
xchg
pusha
sbb
cmpsl
je
ss
inc
sbb
push
mov
sbb
dec
push
sahf
xchg
xor
add
int3
adc
fcomip
and
sub
sbb
inc
mov
decb
iret
sub
sub
sub
nop
hlt
and
pop
add
sub
mov
push
mov
pop
shl
int3
insb
and
pop
add
or
or
inc
inc
insb
vmread
pop
sti
gs
push
rcll
iret
data16
fisubrl
and
addl
sub
ucomiss
jmp
push
or
aas
scas
in
adcb
inc
addb
jge
dec
dec
into
mov
aas
push
jge
adcb
outsl
mov
mov
fstps
popa
ficompl
jp
jle
mov
pop
mov
movsl
je
lock
xor
jmp
add
pop
mov
pop
andb
psadbw
stos
shlb
xor
lock
pop
add
inc
or
inc
pusha
int3
mov
or
addr16
pop
leave
inc
add
incl
mov
inc
push
add
ss
push
cmp
and
pop
stc
test
out
mov
and
xor
mov
push
inc
push
aad
out
sbb
shlb
dec
fs
and
adc
push
and
xchg
jo
xchg
jne
iret
mov
xchg
push
sbb
add
orl
pop
pop
out
pop
xchg
jns
bnd
rolb
mov
call
cli
filds
ret
mov
add
xchg
push
popa
daa
jmp
dec
out
rcrl
jno
into
xchg
xor
xlat
arpl
pusha
xchg
xchg
sahf
push
add
pushf
loop
xlat
jmp
add
inc
aaa
push
sub
dec
mov
jmp
mov
out
pop
cmp
pop
stc
push
shl
enter
ss
push
sbb
lret
lock
insb
shll
xchg
loop
xor
les
ss
sbb
cmp
cli
loopne
in
pop
cwtl
int3
repnz
test
les
pop
stos
mov
dec
movsl
jnp
or
in
sub
jmp
mov
inc
clc
jno
add
sbb
inc
pop
mov
call
outsb
sub
roll
pop
jmp
push
push
mov
inc
fisttpll
popa
xor
rolb
shlb
ja
pop
cmpsb
loopne
jns
dec
push
add
pop
dec
cltd
js
mov
fwait
cltd
xlat
leave
xlat
ret
pop
mov
mov
dec
inc
fcomps
add
xchg
pop
mov
inc
jmp
into
or
in
push
loop
fcoms
xchg
xorl
or
sub
jl
pop
add
dec
push
ljmp
cltd
cltd
or
ret
and
jnp
out
xor
sbb
pusha
gs
data16
dec
pop
xor
pop
mov
mov
leave
pusha
add
pop
xor
dec
lock
pop
xor
aad
sti
ficoml
jmp
shll
fxam
insb
icebp
pop
jnp
iret
in
mov
pop
add
int
neg
jge
jmp
mov
xor
jmp
and
sarb
add
pop
add
jmp
jo
xor
imul
dec
in
xchg
mov
pop
ret
notb
add
jmp
aas
jecxz
sbb
mov
ret
lahf
insl
add
out
mov
adc
in
cltd
cmp
gs
cli
mov
or
mov
hlt
cwtl
push
push
mov
dec
ljmp
fcoms
or
sbb
jns
sub
sub
cmp
inc
pusha
cmpsb
notl
sbb
jmp
fdivrp
adc
test
or
les
and
dec
dec
mov
loope
clc
mov
inc
add
mov
enter
xchg
xor
sub
in
pusha
xor
push
or
jmp
popl
outsb
out
add
sub
js
call
mov
cs
test
addb
cmp
or
sub
scas
int
sub
shl
add
push
adc
lea
mov
aaa
or
in
mov
add
mov
in
dec
mov
das
xor
test
imul
adc
mov
mov
arpl
pop
das
rorl
fwait
call
inc
mov
sbb
test
in
inc
mov
sarl
sub
rorb
dec
dec
dec
push
scas
sbb
ret
movsl
sarb
imull
xor
jmp
pop
stos
fnstcw
pop
sbb
inc
das
call
adc
lret
push
sbb
stc
test
ret
mov
dec
pop
push
fs
xor
fistps
mov
lods
scas
add
data16
add
aam
dec
mov
stc
xchg
ds
test
add
popf
fidivs
and
dec
pop
lret
jmp
in
gs
cmc
stc
hlt
insb
add
mov
fstp
mov
and
xchg
cmc
push
ret
adc
pop
or
rolb
jnp
cmp
push
mov
mov
inc
call
add
mov
int
jo
jle
faddl
jl
push
sub
in
shr
push
and
or
mov
call
sahf
lods
cmp
inc
sub
fistps
movsb
clc
mov
push
jge
add
pop
mull
dec
xchg
mov
push
push
inc
push
pop
mov
mov
push
sbb
add
add
mov
add
nop
ret
sub
add
ljmp
xor
outsl
pop
fldl
adc
std
clc
sub
or
loop
test
pop
rol
push
int3
setl
push
jle
mov
and
sbbb
add
or
dec
or
push
pop
adc
mov
pop
mov
popa
add
aam
jno
mov
js
stc
mov
sub
into
xchg
aad
mov
int
xchg
pop
mov
lods
xchg
clc
filds
cmpsl
dec
imull
mov
xchg
lea
push
or
cmp
jmp
dec
xor
pop
mov
cmc
lea
sub
sub
push
mov
add
inc
jmp
aad
xchg
into
push
mov
push
add
test
pop
pop
xlat
aad
sbb
stos
adc
jne
xchg
test
jmp
mov
add
jno
scas
jne
add
sarb
cmp
mov
ds
sbb
jbe
das
mov
ljmp
fdivrs
cmp
lret
call
lea
or
adc
dec
lret
testb
sub
push
mov
sub
cmp
sbb
push
add
jmp
lods
mov
cli
inc
add
push
rcrb
or
fadds
lock
aam
mov
negl
dec
loopne
mov
jmp
and
ret
loope
out
shl
hlt
decb
hlt
adc
mov
movsl
sarb
inc
add
pop
lods
aas
iret
push
inc
and
inc
sub
in
xor
mov
sub
pop
sbb
inc
inc
push
lret
leave
popf
push
fcmovb
push
fidivs
mov
outsl
fidivl
or
inc
les
xor
or
mov
imul
loopne
stc
sbbl
push
fidivrl
push
and
mov
nop
test
mov
pop
push
add
enter
add
not
pop
dec
jbe
in
outsb
pop
nop
and
daa
lret
les
and
ljmp
idiv
push
addl
add
pop
xor
pop
cs
dec
push
lods
or
test
xor
imul
scas
repz
test
aad
jb
xchg
lds
loopne
push
xor
xlat
faddl
cmp
sub
xchg
into
scas
sub
ss
int
jge
pop
or
ds
adc
icebp
xchg
cmpsl
jle
and
enter
mov
repnz
das
sub
xor
cs
test
push
das
testl
in
dec
add
inc
into
outsl
rcrb
adc
mov
inc
sub
rolb
push
sbb
mov
pop
aaa
inc
mov
je
fstpt
dec
mov
jbe
sub
xlat
adc
xchg
not
sbb
or
jmp
mull
fdivr
loop
or
dec
dec
pop
xchg
into
fwait
addb
mov
shll
insl
ja
fldl2t
xchg
scas
fnstsw
add
or
ljmp
mov
push
lock
shrl
sub
add
xor
jnp
test
adc
data16
xor
lahf
or
pop
or
xor
pop
cld
xchg
and
dec
sbb
add
arpl
pop
sbb
lds
rorb
stc
mov
repz
aas
mov
adcb
xchg
add
testb
adc
loope
mov
sub
mov
fcompl
adc
mov
xchg
pop
ret
insb
inc
dec
lods
shlb
mov
xchg
out
dec
gs
xor
aam
adc
sbb
mov
in
dec
push
jne
xchg
xchg
inc
cmp
imul
jmp
lcall
lock
cmp
gs
cmp
scas
aas
hlt
lret
and
and
stc
popa
sub
or
sbb
ret
ja
push
mul
in
lock
adc
sub
int
ja
jmp
push
push
inc
mov
mov
daa
adc
dec
lret
jae
pop
xor
movsb
and
mov
rcr
adc
scas
out
pop
das
or
and
pop
mov
dec
sti
rcrb
adc
sub
push
pop
stos
jge
jl
test
ret
pop
loop
aad
jmp
incb
push
mov
in
or
pop
sbb
mov
xorl
mov
and
mov
mov
sbb
fidivrs
loopne
lds
mov
mov
mov
lods
push
lds
cli
sub
mov
mov
add
pop
and
hlt
repnz
adc
mov
inc
inc
pop
pop
loope
or
jmp
and
adc
adc
inc
mov
icebp
cld
ret
ret
mov
repz
jmp
mov
lcall
jmp
into
sub
cwtl
ljmp
je
dec
sub
jns
pop
mov
cli
cmp
jmp
js
out
pop
inc
push
mov
mov
xor
and
cltd
bound
adc
in
xchg
les
out
adc
shlb
cmpsb
movsb
mov
idivl
loopne
or
ret
xchg
xchg
push
inc
inc
sbb
cmc
sti
add
pop
push
fs
popf
pop
sub
std
mov
xor
insb
popa
sti
dec
and
sti
add
jmp
outsl
in
les
adc
das
jno
push
inc
push
jns
pop
dec
dec
and
add
mov
push
and
push
fwait
xchg
jmp
dec
sbb
das
arpl
clc
xor
push
mov
pop
bound
in
add
cmp
push
cmp
inc
adc
pop
aas
dec
add
and
sub
rclb
je
and
jp
dec
popf
push
pop
inc
cmp
mov
stos
mov
negl
repz
repnz
shrb
inc
or
pop
fwait
jmp
bswap
xchg
rorl
push
test
cmpsb
xor
sub
gs
int3
or
pop
mov
pop
das
jmp
push
hlt
fidivrl
mov
pop
mov
push
in
stc
adc
or
ret
leave
sub
xor
pop
lret
xchg
dec
mov
inc
add
sbb
adc
inc
add
or
mov
add
insb
not
push
mov
and
cmp
pop
lods
cmp
mov
pop
mov
inc
sub
or
add
pop
rcrb
subb
arpl
test
add
sbbl
movsl
dec
daa
adc
and
pop
pop
lcall
imul
mov
cli
rcll
xor
pop
or
adc
xor
dec
add
insl
inc
pop
jp
int
aas
pop
xchg
in
xchg
push
inc
lods
lds
shl
pop
movsb
scas
dec
aas
jmp
cmp
fildll
and
or
insb
loop
jg
movsl
xchg
rcl
xor
add
out
nop
js
cld
add
insl
jl
mov
cmc
lahf
in
adcb
mov
push
or
popf
pop
jnp
or
mov
outsb
xor
pop
hlt
bound
ret
push
or
fcoml
push
pop
push
mov
ss
cmp
call
icebp
cmp
dec
adc
xrelease
popf
lock
jno
flds
sub
insl
dec
push
sub
mov
repz
fucomp
and
mov
je
stos
pop
roll
push
xlat
mov
add
std
inc
jns
jge
inc
or
cld
push
bound
and
daa
icebp
mov
cwtl
lock
pop
jecxz
imul
test
inc
addb
xor
xchg
adc
jmp
out
sub
loope
bound
xor
pushf
shll
lds
daa
dec
pop
push
cwtl
xorl
popa
push
add
lods
xchg
pop
scas
test
add
dec
inc
add
xchg
and
dec
inc
scas
add
das
pop
mov
xor
fildl
leave
call
icebp
pop
or
fldl
pop
dec
jno
jle
mov
inc
mov
cmc
or
cmp
add
lcall
dec
inc
cmpsb
pop
inc
loope
aam
jmp
addb
add
or
adc
add
mov
cmp
xchg
sbb
mov
hlt
or
sub
add
jbe
add
out
scas
and
adc
dec
loopne
adc
jmp
push
out
nop
ds
lahf
cmp
aam
repz
or
cmp
mov
xor
test
mov
std
mov
sub
inc
pop
sbb
idiv
lds
jp
and
rorl
iret
xchg
push
xor
testl
into
cmp
pop
sti
jns
lock
xchg
jno
inc
dec
jp
add
jp
ss
fnsave
xor
fidivs
mov
adc
in
jnp
sub
fsts
jmp
pop
jmp
loopne
cli
addb
ret
not
jns
in
lcall
cmp
cmp
and
push
push
jmp
push
adc
sbb
into
test
mov
pop
jbe
push
test
adc
xor
mov
test
je
pusha
mov
xor
jae
outsb
cmp
dec
xchg
mov
jmp
pop
jp
jnp
mov
imul
aas
cltd
idivb
xchg
jg
aad
in
xor
jns
repnz
lods
push
negl
imulb
mov
pop
add
addl
shr
lahf
and
push
add
pop
cmp
inc
cmp
push
leave
pop
add
xchg
dec
mov
mov
pop
add
add
repnz
and
fildl
ljmp
loop
push
pavgw
inc
inc
pop
mov
sub
mov
add
fistpll
fisttpl
pop
out
sub
push
rol
sub
jmp
test
cmc
mov
push
adc
sub
adc
or
fbstp
aam
mov
xchg
pop
sub
nop
dec
mov
xor
scas
xor
mov
and
cltd
mov
lods
jg
test
stos
popf
jne
mov
add
imul
sub
icebp
mov
ja
pop
loopne
mov
jmp
or
sar
icebp
xor
and
mov
push
dec
push
mov
sub
nop
sbb
jo
sub
and
scas
jno
stos
dec
sub
and
adc
jg
xchg
movb
pop
dec
jmp
lds
and
pop
ja
lea
xchg
iret
dec
mov
pop
pop
jge
mov
xor
sub
cld
test
jle
xchg
push
inc
std
sub
daa
sub
ja
bound
fcomps
inc
inc
xor
lods
pop
cmpsl
jae
pop
push
mov
aad
sbb
xor
dec
inc
or
test
loopne
pop
pop
add
pop
pop
jns
je
push
cmp
mov
dec
sub
cmpb
daa
daa
ret
and
jmp
jl
addr16
sub
repnz
xor
dec
sub
add
cmp
fidivl
fcmovnb
push
fcmovnbe
xor
lods
fmull
fldpi
aaa
test
fwait
xchg
xchg
ljmp
mov
mov
and
add
mov
insb
enter
xor
dec
neg
push
mov
stos
jecxz
add
add
lret
jmp
mov
pop
jecxz
jmp
jl
fsubr
rclb
bswap
push
sbb
jns
add
adc
leave
jnp
add
cmp
nop
push
add
jns
test
test
add
sti
sbb
orb
mov
adc
hlt
inc
nop
mulb
sbb
or
js
add
test
out
xor
loope
inc
outsl
push
xor
add
mov
adcb
mov
push
cmp
daa
mov
das
out
pusha
out
push
mov
cmp
and
add
div
mov
ror
aas
jne
jnp
out
lahf
daa
cmp
fcmovnbe
out
jmp
cli
lret
jne
xchg
hlt
push
push
mov
arpl
or
adc
out
sbb
mov
jmp
sub
adc
js
and
dec
fsubr
in
xor
in
push
mov
pop
lret
mov
cmp
jmp
nop
out
and
dec
aaa
xchg
xchg
jmp
pop
loopne
out
add
pop
xor
pop
or
lock
pushf
add
call
das
cmp
repnz
mov
xchg
fldenv
das
test
je
sbb
int3
adc
movsbl
cli
push
or
jnp
sub
in
dec
add
fdiv
fldcw
push
dec
inc
xchg
add
or
and
mov
xor
jo
inc
mov
add
cs
fsub
xchg
mov
sub
ret
jge
mov
xor
jle
add
pop
push
and
cmp
neg
sub
inc
dec
and
push
mov
ret
ds
icebp
push
push
mov
lahf
or
sub
pop
lret
ljmp
clc
mov
test
pop
stos
add
sub
ss
and
mov
pop
push
test
pop
jo
stos
mov
in
into
sub
jmp
xchg
xor
jge
push
stc
add
sbb
or
test
mov
push
or
loopne
sub
rclb
fs
add
sub
cmp
ret
sti
pusha
stos
pushf
paddb
aas
or
pop
ret
jle
mov
xchg
jg
out
mov
sarb
cmc
aas
and
sub
sbb
push
push
mov
sub
out
jg
pop
es
or
sbb
cmp
lods
sti
std
sbb
xchg
or
lahf
out
sbb
daa
jo
aad
aas
test
mov
mov
dec
xor
stc
aaa
sbbb
ss
add
std
mov
xor
lock
inc
andl
fcoml
jle
add
push
enter
dec
dec
xor
insl
jmp
lods
sbb
imul
jg
lcall
and
nop
or
jmp
aad
adc
mov
push
add
mov
sbb
mov
jmp
push
jmp
cs
sub
and
mov
fisttpll
mov
imul
movsl
fs
sub
sub
or
in
lds
sub
and
add
in
xor
add
add
test
pop
test
pop
inc
test
dec
add
leave
pop
push
add
mov
pop
push
pop
add
ja
or
push
mov
repz
push
xchg
inc
xor
je
daa
mov
enter
andb
mov
inc
add
not
mov
rcrl
xor
jmp
inc
addb
jge
lods
or
jae
pop
test
out
lods
movsb
sti
adc
cmp
data16
push
aad
outsl
repz
lahf
mov
rolb
pop
sub
ficoml
iret
xor
fs
loop
add
mov
mov
and
or
jne
lock
hlt
mov
mov
jle
in
les
adc
popa
rcrl
push
adc
push
jno
inc
xchg
jle
or
jmp
jp
pop
sub
adc
inc
mov
add
mov
push
aad
das
mov
sub
jmp
nop
faddl
xchg
outsl
and
add
cwtl
scas
sub
mov
lds
mov
lcall
inc
adc
or
sbbb
inc
xchg
arpl
mov
mov
pop
xor
sti
cmp
jmp
cli
flds
clc
push
add
push
jmp
fsubs
sbb
mov
aad
call
jo
lods
into
cld
inc
mov
sahf
ss
and
pop
pop
xchg
jbe
mov
mov
bound
mov
mov
imul
push
data16
js
or
fdivl
add
popa
mov
les
dec
data16
or
mov
and
add
jl
icebp
cltd
and
adc
stos
cmp
loope
inc
jmp
cmc
add
dec
ficoml
icebp
mov
inc
sub
test
inc
sarl
push
stos
dec
push
ret
jne
cmp
and
sub
xor
add
add
outsb
push
pushf
out
das
loopne
test
add
ss
jmp
shlb
mov
adc
dec
ljmp
jmp
pop
inc
dec
dec
mov
jge
test
adcb
adc
sbb
or
inc
and
cmc
jns
mov
push
iret
int3
sub
cmp
fnstsw
jmp
mov
mov
cmp
lock
or
ss
je
inc
push
xor
subb
mul
pushf
sub
pop
xor
push
outsl
daa
lds
notl
test
sbb
add
lret
cmp
push
cmp
out
ljmp
icebp
sub
cmpsl
rcll
add
adc
add
sub
push
mov
push
add
jbe
popf
fildll
lcall
inc
cwtl
mov
jmp
pop
iret
push
repnz
lods
sarb
imul
add
mov
add
mov
and
and
ds
add
xor
pop
adc
inc
popa
lods
mov
add
mov
xor
insl
pop
mov
dec
jecxz
dec
in
jae
or
sbb
ljmp
les
sub
out
mov
dec
mov
pop
inc
xor
scas
sarl
mov
pop
pop
mov
repz
inc
sahf
push
xor
mov
out
call
adc
inc
lods
jmp
movsl
aam
addr16
icebp
add
movsb
enter
neg
iret
sbb
pop
or
cli
sub
jg
push
add
adc
out
jl
push
popa
or
inc
je
sarb
or
dec
enter
scas
cli
pop
push
push
dec
push
or
inc
insb
adc
cmp
pop
push
push
mov
cmpsb
jmp
pop
inc
das
cld
inc
add
xchg
or
je
nop
lods
pop
mov
dec
pop
dec
xchg
das
xchg
rolb
mov
cmp
mov
xor
push
ds
push
test
inc
loop
pop
cld
jge
gs
add
pop
jge
jle
jl
mov
jnp
cmpsl
mulb
icebp
add
adc
add
jo
pop
adc
pop
cld
mov
push
push
ljmp
xchg
adcb
test
popf
adc
push
cld
ds
es
fisubrl
mov
add
push
push
das
jmp
sub
sub
faddl
jnp
mov
incl
jmp
pop
pop
aam
jno
and
les
cli
and
stos
andb
sub
sarb
adc
cmpsl
enter
loopne
sub
push
imul
pop
mov
dec
pop
fnstsw
mov
pop
sbb
mov
dec
mov
sahf
jns
adc
stc
loop
or
pop
push
mov
int3
loop
and
jmp
es
sarb
les
dec
cmpsl
rclb
ret
and
xor
test
js
jmp
mov
mov
sub
in
and
sub
xlat
inc
add
lahf
aas
fcmovnbe
scas
ljmp
mov
mov
sub
sub
push
mov
jmp
not
mov
cltd
and
scas
mov
mov
add
fdivr
or
and
cmpsl
sbb
or
mov
stc
inc
adc
or
push
sub
mov
xchg
pop
out
or
dec
daa
add
mul
cmp
sbb
inc
cmc
mov
pop
in
jg
sbb
imul
hlt
cmp
xorl
jns
mov
das
add
icebp
jmp
add
pop
sarb
push
ret
mov
loopne
inc
dec
and
push
xor
or
fwait
xchg
clc
mov
or
dec
lahf
jle
loop
xor
xchg
cmp
aas
lods
into
testb
loop
out
dec
and
cli
add
inc
bound
push
add
add
sbb
fs
mov
call
fsincos
and
sub
inc
pop
mov
add
movl
mov
mov
mov
nop
add
push
inc
out
popf
decb
adc
adc
out
mov
mov
jp
nop
call
mov
jo
mov
push
cmpl
pop
sub
aam
sub
sbb
xchg
aaa
and
mov
hlt
nop
cmpl
mov
icebp
push
call
mov
push
nopl
xor
sti
mov
dec
stos
mov
lahf
fdivl
shll
pop
sub
push
and
imull
mov
sub
adc
push
jge
ret
notb
sub
fisubrl
ficoml
cmp
add
xchg
mov
dec
in
lahf
shrl
dec
popa
loop
inc
add
jae
cmp
in
and
push
jmp
maxps
inc
mov
test
mov
and
sti
nop
mov
jae
loopne
das
stc
push
dec
std
sub
add
das
lret
stos
jns
les
mov
lock
push
test
mov
xchg
mov
mov
add
push
orl
xchg
pushf
mov
push
faddl
and
jo
add
sbbl
jo
push
and
mov
scas
loop
adc
mov
and
inc
leave
jae
dec
mov
jo
or
add
inc
and
sbb
repz
pop
sub
mov
sub
jl
push
push
or
or
dec
push
mov
push
push
add
adc
lods
xchg
dec
jbe
mov
lock
dec
fisubrs
jg
cltd
xor
decl
push
push
fsubrl
add
cmp
popa
imul
xchg
stc
popf
stos
mov
adcb
or
loope
dec
and
inc
adc
sbb
sub
push
lock
ret
andl
pop
push
cld
orb
ja
xchg
push
stos
mov
or
dec
push
mov
mov
leave
sub
sub
or
fmulp
jmp
call
and
fwait
jns
add
pop
sub
inc
or
add
jecxz
or
aad
mov
jge
dec
or
adc
cld
xchg
icebp
push
mov
pop
div
add
popa
push
dec
and
adc
loopne
daa
leave
pop
xchg
jo
mov
jmp
add
test
sbb
push
or
gs
das
aad
dec
pop
wbinvd
enter
adc
imul
pop
repz
xchg
cmp
scas
cmp
dec
mov
or
lcall
andb
leave
ja
mov
add
sub
in
push
cld
push
jmp
xor
xor
sub
add
inc
icebp
adc
jne
mov
sub
jb
mov
and
shll
loopne
sbb
mov
push
inc
dec
pop
inc
adc
data16
xchg
push
stos
dec
pushf
test
lret
xchg
dec
mov
pop
popa
or
cmp
pop
xchg
mov
pop
mov
mov
jp
out
rep
add
mov
xor
hlt
stos
pop
mov
subl
pop
cmpsl
dec
int
nop
xchg
cs
ret
aad
mov
add
into
cmc
inc
push
ja
xchg
jo
jl
rolb
adc
neg
push
clc
shl
cmc
pop
mov
cmp
and
shl
aaa
ljmp
push
dec
or
sbb
fldcw
repz
adc
or
pop
test
sbb
pusha
cmp
jo
sub
sub
popf
add
fs
int
iret
cmpb
lea
fcompl
or
sub
ljmp
inc
out
insb
outsb
orb
ret
loop
or
xor
fs
add
xor
popl
mov
lds
dec
sbb
rorb
inc
out
cld
fistpll
cmpsl
add
xor
or
cmp
fnstsw
dec
pop
scas
mov
mov
ds
dec
inc
mov
stos
cwtl
mov
and
push
nop
addl
sbb
pushf
xlat
pop
pop
shl
inc
xor
enter
leave
jnp
jae
or
mov
adc
xchg
cmpsb
jmp
movl
repnz
adc
imulb
shll
push
mov
jmp
sbb
adc
cmp
popa
cmpb
xor
ret
xor
jae
cs
ficoms
sub
jp
and
lahf
fsts
inc
push
sbb
add
ljmp
xlat
jnp
sbb
and
push
jecxz
mov
ja
sbb
xchg
mov
in
jmp
xor
pop
or
std
mov
fwait
sarb
pop
add
mov
mov
sbb
or
push
add
and
jmp
mov
xchg
add
out
enter
dec
mov
loopne
fbstp
mov
push
xchg
scas
xor
pop
push
cwtl
and
mov
enter
inc
pushf
dec
cmp
leave
pop
fstl
add
sarl
sti
xor
mov
cmp
arpl
rcpps
xor
stos
fadds
les
lods
jne
stos
ret
lock
xor
push
add
pop
and
popf
fmuls
mov
dec
inc
shlb
jmp
adcb
jmp
in
scas
test
mov
jg
test
mov
daa
push
in
push
out
push
push
push
ds
dec
pusha
mov
and
arpl
jae
sbb
add
xchg
fidivs
aam
xchg
xchg
lods
add
test
cs
sarb
cmp
push
fwait
sbb
or
jmp
dec
cwtl
adc
adc
jmp
frstor
out
lock
aaa
and
incl
sub
fbld
or
cmp
dec
cmp
push
push
xchg
ja
mov
fisubrs
sbb
mov
insl
addl
push
adc
mov
push
loope
adc
push
rolb
and
sub
lods
fsubrl
jbe
sbb
ret
sbb
mov
out
add
jmp
int3
gs
adc
inc
jp
repnz
or
arpl
xor
push
inc
into
mov
add
or
add
rclb
add
jo
or
jle
push
sbb
push
stos
jmp
adc
push
push
cwtl
sbb
aaa
xchg
mov
xor
loop
sub
lret
testb
dec
mov
xchg
sahf
cmp
aas
push
pop
adc
and
adc
add
cmp
xchg
push
pop
adc
sub
jmp
pop
in
into
or
fisubrs
xor
add
in
mov
les
shl
inc
popf
imul
add
sti
fdivrp
and
add
mov
mov
sub
loop
cmp
data16
incl
nop
wrmsr
ljmp
test
fs
push
or
dec
jl
mov
stos
inc
xchg
dec
mov
popf
push
aad
repz
popf
cmpsl
repnz
jl
les
shr
jecxz
pop
xlat
pop
gs
xchg
jno
loopne
mov
les
ret
or
adc
xchg
rol
and
sub
sbb
lahf
push
mov
rclb
sub
xor
imul
or
mov
inc
mov
xor
adc
sub
jbe
sbb
and
inc
pop
out
and
mov
add
loope
ds
aas
in
pop
mov
js
stos
scas
mov
xor
xchg
mov
mov
outsb
add
jmp
add
push
push
arpl
loop
inc
sub
xchg
fsubrs
adc
add
out
push
and
fs
fdivr
aaa
push
sbb
sub
or
int
pop
adc
das
inc
fsubrl
push
xchg
lea
xchg
and
push
lods
stos
loopne
jmp
pop
xor
dec
pop
notl
xor
inc
adc
add
loope
insb
loopne
push
shlb
mov
lcall
stc
out
in
jle
jmp
mov
or
xchg
iret
repnz
add
xlat
mov
addb
mov
outsl
mov
add
push
xlat
pop
push
mov
inc
mov
mov
or
and
add
mov
mov
add
jmp
add
adcb
xor
or
subb
inc
loopne
int
adc
adc
pushf
add
scas
pop
shrb
add
sub
push
ja
jno
in
cmp
mov
add
push
push
jns
add
add
jno
fdivrl
add
or
test
aam
stos
jecxz
xchg
loope
ds
sub
pop
push
and
icebp
push
add
pop
out
das
in
pop
push
js
iret
dec
pop
sbb
mov
adc
pop
rcrb
add
cmc
jb
jl
pop
sbb
ds
cmp
pop
nop
aam
cmc
mov
mov
movsl
push
rorl
add
stos
dec
jg
dec
test
rorl
jle
and
pop
pop
imulb
add
fnsave
cmp
cli
and
mov
jns
dec
pop
mov
xchg
adc
jge
mov
push
cld
sub
or
lock
nop
daa
sti
adc
stos
popa
inc
mov
sbb
sbb
and
aam
and
js
inc
jmp
jne
aaa
test
xchg
fsubr
xchg
push
add
nop
and
daa
mov
inc
jg
push
mov
add
xchg
ficoml
imul
pop
add
xchg
orb
xlat
loope
jp
adc
jle
outsl
jmp
jns
dec
adc
xchg
add
xor
inc
add
inc
add
jnp
mov
cmpb
add
dec
hlt
sarb
imul
pop
push
sbb
fsubs
xlat
out
imul
jmp
adc
hlt
imul
hlt
push
pushf
add
inc
or
jb
rclb
dec
call
push
jmp
fstpl
xchg
jp
shll
push
adc
addr16
js
jmp
and
neg
inc
adcb
dec
sbb
or
add
cmp
js
in
testb
dec
adc
sbb
push
xchg
sbb
in
pop
push
lods
jbe
or
inc
stos
xor
cmp
outsb
mov
jl
in
xchg
mov
push
xchg
jge
push
mov
inc
jne
sbb
or
subb
xor
ret
dec
cmpsl
adc
adc
xor
mov
insb
pop
add
cbtw
std
and
aad
addb
rcrl
add
fstps
add
xor
arpl
daa
pop
and
lea
mov
xchg
xchg
xchg
inc
fiaddl
fists
jmp
mov
mov
push
pop
jmp
push
pop
mov
dec
or
push
into
in
mov
dec
rorl
hlt
mov
nop
push
mov
out
sahf
pop
ds
cmp
es
ret
or
dec
push
add
adc
lods
sub
jmp
popf
lahf
and
cmp
push
jmp
sub
jo
or
prefetchnta
rorb
xor
mov
loopne
adcb
adc
add
add
cli
lods
imul
pop
jp
jae
mov
ljmp
adc
in
and
or
call
add
pop
cmc
call
pop
inc
xor
jne
xor
add
jle
sbb
addr16
int
push
fadd
jmp
sub
lods
ret
jno
lods
xor
jmp
int3
aas
push
mov
addl
lds
je
push
mov
add
add
mov
aaa
add
imul
int
jle
jns
pop
into
stos
mov
pop
outsl
sbb
jb
pop
jmp
mov
mov
add
ficoms
ljmp
add
mov
jmp
xchg
roll
jbe
xchg
xchg
push
pusha
mov
adc
xchg
mov
or
mov
frstor
jg
push
adc
or
push
ljmp
sbb
pushf
gs
aaa
fs
mov
les
inc
pop
in
cmp
adc
push
and
dec
xor
notl
lahf
xchg
inc
jmp
je
jecxz
lret
or
mov
clc
mov
scas
cwtl
sti
mov
pop
mov
add
data16
test
dec
cld
pop
xchg
xchg
push
stc
mov
sub
add
xor
out
dec
neg
cwtl
cmp
popf
push
xor
jmp
sahf
pop
mov
sbb
ret
cmc
jne
adc
mov
es
ds
jmp
cmp
popa
jmp
mov
dec
xor
add
xchg
mov
je
pop
or
pop
dec
sub
iret
ret
stc
test
cli
loopne
dec
icebp
pop
jnp
fadds
rcrb
adc
mulb
push
pop
xchg
jne
dec
mov
dec
mov
inc
pop
lods
in
pop
adc
push
add
jmp
add
ja
xchg
or
jmp
pop
ret
add
icebp
xchg
fcoml
push
pop
jne
incb
cmp
and
hlt
daa
ss
jbe
pop
mov
not
pop
push
mov
psubsb
pop
mov
ljmp
iret
or
sbb
mov
imul
push
pop
sbb
imul
dec
imul
lds
jge,pn
xchg
int3
jb
mov
ficompl
or
rclb
pop
adc
aad
pop
or
imul
push
mov
shl
sbb
xlat
inc
test
jmp
and
sbb
insl
pop
mov
add
hlt
cmp
js
pop
push
test
mov
adc
rcr
or
cmp
fcmovb
or
out
dec
inc
sub
mov
and
inc
xchg
std
or
in
xor
movsb
popa
icebp
add
hlt
add
sub
and
repnz
inc
adcb
xchg
cmp
pop
shl
cmpsb
add
dec
adc
push
add
sub
dec
repnz
mov
pop
icebp
cmpsb
decb
mov
and
mov
add
and
adcl
adc
jmp
dec
ja
loopne
xchg
push
pop
sub
fldl
mov
sarl
xchg
dec
add
mov
int
jp
sub
inc
jmp
scas
cs
mov
dec
dec
pop
pop
pop
bound
mov
mov
jo
dec
add
lods
stos
arpl
fwait
dec
loope
mov
or
hlt
and
scas
and
cmp
jp
pusha
hlt
int
xchg
shll
sub
inc
pop
push
xchg
lea
pop
push
xchg
leave
add
sub
loopne
jns
mov
outsl
sbb
ja
mov
push
stos
jge
dec
inc
dec
or
jno
pop
fcmovne
push
push
or
mov
dec
ret
push
inc
mov
cmp
mov
ficoml
push
or
repnz
sbb
or
pop
fdivr
ja
std
cmp
dec
mov
cs
aad
mov
jg
lea
aad
adc
xor
loope
jmp
mov
ds
cwtl
hlt
scas
mulb
lea
outsl
inc
xchg
mov
adc
and
xor
xor
or
outsb
insl
dec
xchg
call
inc
jp
and
dec
pop
mov
pop
push
add
push
jb
test
xor
mov
adc
rorl
adc
add
and
iret
jmp
das
add
mov
mov
lds
cs
or
add
pop
into
add
pop
add
add
ds
add
pushl
jl
mov
xlat
sti
mov
ret
jmp
lds
out
fidivs
ljmp
adc
movnti
bound
rorb
pop
addr16
push
ret
leave
mov
or
aas
jmp
jnp
test
xor
sar
jae
dec
xchg
mov
add
lret
jmp
cmp
sbb
enter
rcrb
iret
jle
xchg
sub
pop
mov
or
mov
cmpsb
mov
xlat
out
add
dec
mov
push
sbb
and
addr16
nop
push
jmp
fmul
js
xor
out
jmp
and
push
sbb
pusha
dec
dec
or
xchg
les
sub
push
in
stos
push
add
adc
int3
je
dec
pop
or
cmpsl
and
cvttps2pi
sub
negl
idivb
out
popa
out
les
fdivrl
test
out
daa
jp
and
push
xchg
aam
pop
out
lcall
push
fisubl
adc
add
mov
xor
xor
loope
push
movsb
scas
mov
ja
daa
pop
mov
mov
and
jecxz
mov
testb
or
cmp
adcb
ljmp
andl
in
fidivs
lret
sub
mov
jmp
dec
nop
out
in
push
sub
insb
mov
sub
xor
cmp
imul
cmpsl
aad
cmpb
imul
js
aas
sub
add
divb
add
mov
aas
shr
or
sub
xlat
cmpsb
stc
adc
lea
adc
xor
jne
sti
bound
jne
mov
aas
loope
push
jo
jecxz
mov
inc
xor
adc
sub
fldenv
push
jo
mov
rclb
aaa
js
outsl
add
dec
adc
sub
in
test
xchg
xchg
fldenv
dec
sbb
jnp
loop
out
or
lods
call
xorl
faddl
pop
test
js
int
sub
in
decb
pop
xchg
xor
sub
mov
inc
int
xchg
add
into
push
and
rorb
aas
sub
pop
jns
mov
add
jne
dec
mov
add
iret
pop
add
mov
pop
lods
or
insl
dec
sub
sbbl
mov
scas
dec
xor
pop
movsl
out
and
das
mov
lock
pop
mov
lcall
xor
pop
xor
loope
js
cwtl
pop
jmp
push
data16
mov
push
sbb
mov
mov
pop
pop
es
dec
loope
out
aas
test
stos
mov
xchg
scas
sub
int
xor
ljmp
mov
stc
push
mov
push
inc
cmp
lahf
cmp
pop
outsl
clc
cmp
inc
scas
addb
sub
mov
stos
adc
das
push
js
cmp
sub
aas
add
mov
mov
dec
mov
cmpsl
xchg
xor
in
adc
xchg
sbb
pusha
and
xor
aad
nop
push
imul
sub
push
jmp
jle
call
hlt
pop
jmp
repnz
dec
sti
add
push
adc
jmp
and
jae
pop
jge
pusha
popa
inc
mov
dec
pop
mov
pop
loope
pop
daa
push
jnp
add
xchg
sub
or
lahf
je
mov
popf
ja
cltd
mov
mov
inc
adc
lret
sbb
lods
jg
aad
lods
push
nop
test
cmp
es
sub
icebp
daa
ret
sbb
hlt
leave
je
pop
inc
gs
xchg
or
xchg
adc
pop
mov
scas
sub
add
ja
pop
pop
pusha
mov
andnps
pusha
lods
ret
add
cld
pop
push
mov
psrad
shll
mov
insb
xor
hlt
div
inc
shrb
imul
jge
lods
inc
out
int3
xchg
repnz
lahf
pop
xor
dec
dec
inc
dec
repnz
data16
add
repnz
rclb
out
sub
xchg
outsb
push
and
js
cmp
lock
pop
jmp
dec
mov
jmp
icebp
push
xchg
jg
mov
push
jl
mov
add
fs
out
and
mov
outsl
imul
addr16
cmpsb
jo
fldl
mov
sub
push
int
jl
daa
push
repz
insl
bound
push
mov
fs
rol
pop
aad
dec
xor
fiaddl
add
mov
stc
nop
adc
and
idivb
test
xor
dec
sub
and
je
ds
daa
sar
rorl
sbb
pop
ret
pop
cmpb
inc
mov
pusha
xchg
lret
insb
cmp
add
sti
insl
jg
int
movsl
pop
xchg
xchg
sahf
dec
mov
outsb
fidivl
and
and
lods
test
cmpsb
or
jmp
cmp
das
fcoms
in
loope
xor
cli
push
xor
jge
inc
mov
push
or
add
je
pop
dec
sbb
xor
lret
jno
popf
outsl
mov
cmc
jl
jl
push
jge
or
fstps
or
sbb
add
sub
imul
adc
pop
scas
lret
loopne
rcll
inc
pop
cltd
adc
cmpsb
addl
sub
cwtl
sub
inc
aad
leave
push
push
jns
adc
add
pop
add
cmp
mov
jb
in
lods
lods
movsl
das
jmp
data16
add
xorb
sbb
inc
rol
adc
pop
cmc
or
sub
xchg
push
mov
popa
mov
mov
xor
or
inc
out
in
xchg
jno
or
push
add
adc
push
sbb
pop
std
out
jle
addb
or
rorb
cmp
jbe
in
add
xchg
xor
fs
adc
add
rolb
sbb
rcll
dec
add
test
fwait
jbe
xchg
add
es
sub
imul
out
daa
pop
inc
pop
arpl
nop
movsl
sub
call
or
and
stc
xlat
orb
jecxz
adc
enter
adc
pop
pop
daa
mov
push
xor
jbe
sub
out
jp
cmpl
shrb
icebp
or
pop
xchg
and
push
inc
and
push
push
add
jno
sbb
xchg
add
add
movsl
jge
cmpsl
pop
sub
inc
add
aad
push
pop
mov
lds
test
sub
or
mov
pop
sub
xchg
dec
nop
test
mov
lcall
pop
jmp
adc
lock
pop
cld
nop
hlt
les
xchg
cli
out
sarl
orb
adc
sbb
lea
inc
cmp
push
rcrb
cld
aaa
pop
pop
pop
stos
and
idivl
jp
inc
mov
sarl
dec
popf
inc
negl
xor
jmp
pop
stc
ret
repnz
je
lods
hlt
inc
pop
add
adc
repz
push
cmpsl
fs
mov
ljmp
outsl
lahf
cmp
das
jmp
sarl
dec
fmuls
pop
shrl
pushf
adc
pop
push
out
ss
push
stos
leave
popl
cmp
ljmp
outsl
inc
icebp
dec
inc
movl
xchg
push
and
cld
mulb
push
rorb
or
mov
jmp
mov
or
pusha
and
ds
xor
fwait
push
or
sbb
sub
add
push
add
push
je
insl
xor
push
aas
pop
jbe
outsb
or
push
mov
jae
push
fisubrl
leave
push
pop
mov
push
and
lods
dec
push
fmulp
pusha
repnz
out
or
jmp
lock
and
mov
sbb
or
int3
orb
call
dec
mov
insb
mov
ja
shl
mov
inc
sub
loop
cmpsl
add
add
frstor
push
cmp
xor
nop
je
or
loopne
in
pop
xchg
pop
stos
sbb
fsubr
jmp
sbb
addb
and
and
std
add
cmp
inc
add
sub
faddp
popf
add
xchg
and
xor
cmc
in
xchg
push
aam
scas
aam
out
in
divb
xchg
add
jl
pop
add
jmp
outsl
sub
filds
xchg
nop
pop
add
or
in
in
fildll
push
push
push
pop
test
out
into
pushf
and
inc
int
lea
sbb
pop
insl
cltd
leave
jae
pop
lret
jbe
movl
jmp
orb
add
test
or
pop
icebp
int
clc
adc
add
nop
adc
mov
cld
add
sub
leave
pop
loope
or
xchg
sub
or
mov
ret
sti
pusha
sbb
ret
mov
outsb
xchg
jne
or
mov
xchg
xchg
and
iret
dec
adc
cltd
inc
test
add
out
and
mov
and
das
adc
dec
mov
popa
lods
sbb
jmp
out
sahf
imul
shl
inc
es
popf
mov
out
mov
ja
add
sbb
lea
mov
adc
in
pop
xor
push
mov
mulb
pop
push
sti
push
mov
daa
js
push
sub
and
lahf
insb
dec
ret
mul
aad
adc
dec
idivb
or
les
stos
jmp
xor
and
push
pusha
pop
pop
adc
mov
cmp
mov
xchg
dec
jmp
outsb
xor
in
std
dec
sti
or
cmc
cs
sahf
sub
push
les
push
mov
push
daa
pop
lods
jo
or
or
int
dec
ror
sub
pop
sar
adc
pop
inc
sub
and
pop
je
sub
push
es
daa
cwtl
notl
mov
rcrl
jae
in
fs
das
pop
lret
or
sub
pop
testl
lods
or
pop
std
push
and
or
div
and
add
jmp
or
xchg
sub
xor
sub
adc
ret
movzwl
stos
xor
ror
mov
cmpxchg
xor
imul
push
rorl
push
adc
or
mov
mov
push
jmp
cmc
iret
movsb
adc
cld
add
jmp
push
mov
not
add
or
pop
and
push
add
ja
adc
push
sbb
xor
and
flds
roll
cwtl
cs
add
dec
addb
repnz
mov
repnz
faddl
sbb
pusha
lea
mov
or
and
sbb
aaa
and
inc
xchg
push
or
inc
in
mov
ljmp
pop
inc
add
or
jmp
pcmpeqb
enter
test
pop
dec
or
cld
fcoml
fcoms
lahf
push
add
push
xlat
cs
in
sub
dec
add
pusha
dec
rolb
stos
push
add
shl
rcll
aas
ss
out
jge
imul
clc
mov
sbb
xchg
in
mov
in
xchg
rcrb
or
mov
enter
dec
mov
pop
xor
fisubrl
xchg
fucomip
mov
ss
pop
cli
popa
xor
enter
or
neg
inc
or
pop
push
test
sub
add
dec
sub
test
scas
cmp
call
pop
scas
jp
mov
dec
xchg
inc
rorb
mov
imul
mov
int3
add
sbb
jmp
pop
clc
sub
stc
inc
adc
push
jmp
ret
cs
pop
push
cld
jg
test
mov
int3
add
test
lods
jmp
mov
rolb
pop
add
sub
add
add
inc
or
mov
sub
outsl
and
mov
jne
stos
xor
data16
loope
push
outsl
iret
pop
sub
scas
xor
mov
cmp
pop
in
adc
xchg
fidivrs
dec
test
sub
dec
outsb
enter
mov
mov
push
shll
shrb
lret
sbb
and
shrl
pop
loop
push
sub
sub
inc
cwtl
in
add
adc
or
jb
orb
xor
je
push
scas
jp
test
or
out
call
inc
addr16
dec
inc
mul
call
int
in
inc
or
ds
xchg
pop
xchg
hlt
xchg
loopne
mov
push
mov
xor
and
pop
jle
push
push
and
adc
or
or
sub
pop
push
loopne
cmp
push
xchg
mov
add
cmp
or
filds
aas
and
test
inc
and
cltd
out
and
fdivrs
push
and
or
xchg
xchg
jo
add
mov
cmp
pop
nop
bnd
out
out
sbb
inc
fwait
ror
mov
adc
or
lods
ret
sub
push
mov
out
adc
sub
ret
adc
jo
pop
jmp
leave
sub
push
les
add
dec
jmp
xchg
das
mov
add
lock
push
sub
dec
add
stos
jge
sbb
mov
fs
or
aas
call
mov
jmp
push
push
pop
lahf
dec
xlat
orl
xor
pusha
sub
jmp
call
jge
sbb
loopne
das
fists
cmp
xor
inc
inc
jl
cmp
add
pop
push
ljmp
sub
lret
mov
jnp
pop
and
cmpsb
movl
and
xor
and
sub
add
ret
ds
jmp
inc
and
inc
inc
add
pop
out
add
aaa
push
jmp
push
or
mov
mov
add
les
xor
movsb
pop
out
add
shlb
push
mov
data16
pop
mov
negl
nop
aad
daa
cmpsb
cmp
flds
icebp
lea
insb
aam
and
test
insb
sbb
in
sub
sbb
jmp
clc
mov
les
lods
jl
mov
push
add
repz
daa
jmp
mov
sub
pop
out
neg
push
push
mov
or
or
or
clc
jl
pop
xor
mov
and
orb
push
jnp
cmpsl
dec
lcall
jno
std
test
cwtl
mov
cmp
push
sub
cld
neg
mov
mov
lret
lea
xlat
push
jmp
test
mov
mov
add
jg
xchg
mov
into
cltd
jmp
push
sbb
dec
sbb
inc
pop
add
je
mov
and
mov
sbb
mulb
xorb
ror
leave
inc
mov
push
sub
mov
xchg
lds
xchg
imul
jae
movsb
subl
gs
add
shl
xchg
popa
jg
jmp
xchg
rcll
lds
jnp
lcall
or
or
mov
pop
scas
cwtl
push
push
push
sub
jge
cmp
mov
inc
jmp
repz
rorb
daa
adc
pop
and
or
xchg
imul
jecxz
jbe
push
repz
dec
xor
ja
sbbb
scas
xor
dec
cli
push
and
push
jne
sub
and
loope
lock
xor
or
jno
imul
cld
sub
mov
sbb
popa
push
adc
ds
shrl
add
addl
daa
pusha
jmp
sbb
pop
push
pop
dec
pop
mov
and
cmp
or
jb
add
mull
inc
adc
shrl
idivl
daa
and
xor
popa
sbb
cs
xchg
loop
lds
pop
push
loopne
cmp
pop
das
jmp
fstpl
lret
arpl
stos
ret
jmp
push
outsl
les
pop
mov
push
lock
stc
push
imull
icebp
adc
jo
mov
inc
jecxz
pop
shrb
cmovle
sbb
cmc
das
or
pop
loope
js
jae
js
lret
push
pop
jmp
pop
push
mov
cmp
and
or
pop
and
adc
cmp
add
cmp
std
pop
add
pop
scas
jne
stos
aad
cli
das
mov
lods
hlt
fisubrl
pushf
pushfw
jae
daa
xor
mov
pusha
mov
popa
xchg
mov
xor
gs
ljmp
push
std
push
cmc
and
dec
pop
aaa
int3
ret
jb
loope
sbb
outsl
in
mov
fs
xchg
daa
icebp
or
or
inc
jl
ljmp
ficompl
or
adc
scas
fstpl
int
add
ljmp
loope
ret
cmp
loopne
sarl
fbld
pop
or
insl
aad
rcl
daa
adc
adc
aas
xchg
inc
push
xchg
mov
sub
mov
dec
sub
sbb
mov
loope
loopne
jmp
push
rolb
pop
pusha
lea
gs
mov
movsl
mov
addr16
das
sbb
push
popw
jmp
add
xor
sub
into
iret
fs
push
jg
sbb
lods
adc
das
sub
xchg
inc
add
jbe
ljmp
and
dec
mov
lret
jle
mov
jge
add
adc
loopne
faddl
sbb
lea
jg
xor
movsl
sbb
insb
aaa
and
jg
pop
inc
fisubrl
ret
adc
out
sbb
out
adc
jmp
mov
cmp
jmp
ja
wbinvd
jge
adc
incb
jecxz
jns
sbb
push
lret
shrb
sub
add
push
jecxz
add
add
push
call
inc
popf
push
in
lock
fistl
add
xor
mov
lods
xchg
cmp
and
push
jbe
aas
jmp
pop
push
pop
cwtl
xchg
push
xchg
mov
push
adc
xor
out
in
sub
clc
xchg
and
pop
push
mov
neg
mov
add
insl
sbb
mov
and
sub
mov
outsl
pop
sbb
mov
and
iret
lret
push
pusha
sti
push
or
insl
pop
sub
loop
jl
orb
ret
mov
out
sbb
mov
dec
out
or
stos
das
push
std
mov
out
roll
add
and
sub
pop
mov
ja
and
out
imul
mov
test
mov
xor
imul
or
inc
xchg
fcompl
or
pop
jmp
ljmp
lcall
popf
mov
clc
leave
inc
in
mov
inc
add
dec
sub
push
mov
ficompl
sub
mov
stos
pusha
loopne
cmp
pop
cli
inc
in
arpl
push
mov
fists
pushf
jmp
aad
out
inc
xchg
push
cmpsl
imul
add
xchg
push
pop
xor
pop
outsb
cli
cs
jmp
idivl
je
mov
xchg
mov
rcrl
imul
nop
jae
and
pop
add
dec
aas
fdivr
jne
insb
pop
mov
sub
pop
push
push
ret
test
out
andb
sub
pop
fmuls
call
add
add
jmp
or
imul
mov
shlb
jge
add
mov
jmp
cmpb
loopne
inc
mov
cmpsl
mov
in
test
stc
dec
sarb
shll
fiaddl
imul
cli
mov
jns
adc
aad
jmp
cwtl
xor
push
js,pt
lock
mov
sub
adc
push
jle
xchg
nop
subb
popa
cmp
push
jmp
push
sub
adc
xor
xchg
out
add
cmpsl
push
mov
ffree
hlt
adc
and
and
mov
cwtl
sub
sub
sub
std
sub
mov
mov
aad
pop
xchg
orb
lret
add
inc
mov
pop
mov
xor
pop
jae
out
sub
lds
sbb
in
mov
add
xor
jmp
jg
jns
aam
fwait
inc
movsl
add
insb
xchg
clc
test
add
sub
mov
push
sub
js
clc
mov
into
aad
pop
data16
insb
and
repnz
xor
xchg
sub
adc
dec
and
push
andl
arpl
xor
lea
subb
rorb
mov
rcl
je
loop
ret
shlb
clc
sahf
lret
nop
push
insb
and
add
push
sub
loopne
mov
lods
dec
sbb
ljmp
pop
push
xchg
ja
stc
cmp
nop
je
ret
or
popa
daa
ret
out
cmp
jns
lret
push
aad
push
mov
pop
dec
pop
out
nop
or
pop
xchg
rorl
add
cld
nop
inc
dec
icebp
pusha
data16
gs
xor
add
inc
mov
xor
xor
push
push
adc
pop
jo
or
sub
cmp
adc
stos
popa
mov
mov
cmp
mov
sbb
es
sahf
dec
mov
pop
movsb
xor
mov
ljmp
xor
mov
cmpsb
and
pop
lds
das
add
repnz
cmp
add
pop
jmp
jns
lret
xlat
xchg
lock
cmpsl
xchg
call
add
outsb
add
inc
mov
pop
adc
shll
imul
rorb
or
les
es
dec
cwtl
pop
xchg
adc
aam
ret
jae
push
sub
in
les
xlat
mov
sti
pop
and
dec
aaa
stos
test
sarl
lock
bound
shr
pop
call
ss
mov
sti
mov
mov
mov
lret
push
mov
aad
lea
ds
jns
add
adc
sbb
popa
or
xor
into
xlat
jns
cmpsb
xchg
or
rolb
dec
scas
add
jmp
repnz
addr16
lcall
into
push
inc
outsb
add
repnz
mov
call
enter
pop
sub
arpl
add
jo
mov
sub
mov
or
and
add
test
gs
mov
pusha
subb
sub
inc
adc
dec
lods
and
loopne
fcmovu
add
adc
arpl
test
lea
or
adc
lock
adc
daa
adc
mov
push
fisttps
dec
push
add
mov
ret
jbe
jno
lret
sti
jmp
mov
movsl
loop
dec
fs
or
jge
je
dec
mov
movsb
jge
shr
or
sbb
dec
mov
leave
ret
dec
lds
adc
add
rcrl
roll
push
add
add
or
outsl
mov
pop
shr
xor
clc
out
jne
jae
or
pop
pop
jo
add
cmp
jmp
lahf
push
pop
outsl
lock
cli
cmpsl
or
lret
ja
pop
sub
xchg
scas
popa
push
ficompl
mov
dec
nop
insl
add
jo
enter
dec
cmp
fcmovne
stos
int3
test
or
pop
jo
jno
mov
jecxz
pop
adc
jl
add
mov
mov
pop
ds
add
pop
adc
daa
jmp
mov
das
pop
or
nop
or
out
stc
mov
pusha
pop
or
sbb
loope
gs
iret
sbb
imul
dec
adc
jp
or
ret
or
call
imul
jmp
xor
test
outsb
ret
ret
xchg
add
mov
fcom
xchg
hlt
jecxz
sub
in
jmp
ret
push
push
stos
mov
out
cs
push
jge
cltd
and
int
push
push
pop
sahf
ret
adc
notl
inc
rcrb
inc
push
sti
das
mov
add
fcomps
call
or
lods
jbe
test
in
rcl
sub
pop
dec
cmp
in
push
mov
jmp
pop
or
enter
fbld
movsl
xchg
adc
mov
test
mov
pushf
inc
out
xor
push
lods
xchg
lcall
xor
mov
pop
pop
mov
imull
mov
lret
std
loopne
popa
pop
pushf
lods
int3
xor
inc
jo
pop
in
jno
or
enter
push
or
xchg
sub
or
sub
sbb
add
je
mov
mov
lods
dec
xchg
and
cmp
xor
test
ljmp
push
jbe
sub
mov
nop
pop
jne
dec
jbe
test
in
notb
fs
push
or
sub
add
loopne
jmp
inc
push
rorl
inc
pop
mov
jge
push
sub
ljmp
mov
sti
cmp
test
pop
jo
movntq
mov
sub
je
mov
mov
mov
stos
or
or
negl
mov
fsubr
icebp
scas
and
decl
fadds
sbb
cmp
add
dec
add
mov
fdivs
sub
daa
sbb
push
clc
mov
mov
loopne
push
test
and
xchg
push
cs
es
cmp
fwait
jae
movsl
mov
ficoms
or
rorl
rolb
call
pop
inc
mov
and
xchg
ja
lret
jne
jb
mulb
or
cmp
cld
pop
sti
xor
sbb
adc
ljmp
mov
xchg
add
push
xorb
addr16
jno
or
mov
sub
adc
add
cs
js
jmp
xchg
movsl
cwtl
enter
outsl
movsl
movups
dec
mov
dec
mov
imul
pop
aam
daa
jns
bound
pop
mov
and
jb
fdiv
shll
mov
xchg
ss
sbb
scas
fidivrs
and
fstps
push
mov
push
pop
pop
sbb
shrb
test
movsb
jmp
sub
pop
mov
sub
pop
add
mov
stc
mov
lock
mov
cmc
mov
ret
or
jmp
pop
pop
pop
jg
or
cwtl
cmp
enter
sub
adc
ficoml
xor
push
xchg
and
adc
sbb
rorb
pop
push
jns
popa
inc
gs
les
jmp
inc
stc
lahf
outsl
pop
repz
mov
jmp
outsb
or
aam
sbb
sub
hlt
out
mov
add
mov
les
mov
mov
cmp
sbb
sti
imul
and
addr16
mov
pop
push
or
push
xor
push
int
jo
sbb
push
add
lret
push
enter
dec
rorb
hlt
jl
sub
sbb
cmp
jno
lahf
jae
adc
cli
push
inc
into
orl
pop
jle
sbb
dec
jbe
push
subb
arpl
aas
das
mov
scas
loope
sbb
nop
je
sub
das
push
sbb
std
lahf
scas
jecxz
push
imulb
sub
adcb
dec
nop
mov
and
out
xchg
enter
xchg
mov
out
je
rcll
loop
inc
xchg
mov
adc
sbb
inc
jno
xor
iret
jp
addl
pop
jmp
fnsave
add
jnp
out
rcl
cmp
cmpl
das
add
jns
jb
adc
pusha
loop
cmc
add
add
jns
in
sub
mov
into
jp
push
jmp
xor
pop
or
push
test
or
adc
mov
sbbb
add
daa
jg
cmpsl
fwait
push
add
stos
popf
sysret
xchg
mov
mov
adc
lods
enter
pop
imul
pop
xor
clc
mov
sbb
cltd
insb
sbb
lods
sbb
stos
out
add
fcoml
test
xor
adc
sbb
les
cmpl
test
sub
mov
and
lahf
sbb
xchg
push
cli
gs
stos
movsb
cs
pop
sub
imul
and
mov
stc
aad
mov
fadds
rorb
lret
pop
pop
incb
xor
adcl
mov
clc
and
pop
cmp
ss
push
repnz
div
test
shl
icebp
lret
addr16
jbe
fadds
add
cltd
loop
inc
in
cmpsb
push
add
dec
mov
aas
sub
dec
divb
push
movsw
aad
lahf
outsl
adc
pop
pop
or
sub
cs
jmp
popa
insb
iret
out
sbbl
jbe
push
std
jmp
inc
and
xchg
rorb
pop
jmp
lds
jmp
mov
mov
mov
add
test
shr
xchg
push
add
pop
loop
sti
cltd
aad
push
pop
data16
add
push
mov
or
cltd
mov
jmp
mov
ss
xchg
fsubr
aaa
ret
inc
push
sub
pop
jne
inc
xchg
push
fistl
adc
mov
adc
lret
pop
mov
cld
movsl
pop
mov
inc
jbe
dec
xchg
rolb
decb
inc
xchg
xchg
jmp
inc
xor
xor
pop
out
sbb
into
shr
scas
fimuls
push
add
mov
rolb
fmuls
inc
sub
ds
jae
pushf
jmp
mov
xor
jge
insb
ret
mov
test
ljmp
and
stos
ret
jne
sub
dec
inc
inc
mov
sub
add
cmp
popa
ds
movb
pop
fiaddl
sub
mov
mov
daa
outsl
or
outsb
jmp
or
fucomp
outsb
in
jne
rorb
cli
mov
into
cmc
dec
mov
ret
leave
add
pushf
sti
addb
outsb
mov
dec
std
aad
add
ss
das
jmp
jns
es
add
pop
sbb
pop
mov
inc
fcmovbe
add
cli
mov
and
imul
pop
ret
test
lods
in
shl
or
hlt
les
or
jl
and
inc
inc
fdivs
scas
shlb
ja
lahf
int3
sub
add
jle
das
jne
push
or
cwtl
int
cmp
cli
pop
lds
mov
mov
sbb
mov
out
add
jecxz
add
aad
jmp
ss
loop
andl
rolb
testl
jnp
dec
pop
xchg
cmpsl
not
hlt
mov
cltd
loop
jmp
stc
xchg
fcoml
mov
scas
int
nop
aam
pop
stc
test
push
mov
add
mov
test
scas
repnz
ffreep
lahf
jmp
fdivl
push
xchg
cmc
add
in
xor
lds
sbb
cwtl
cmpsl
xlat
loop
insl
pop
pop
test
inc
inc
jl
imul
sub
push
aaa
xchg
mov
and
orl
mul
and
mov
mov
icebp
cmpsb
sub
pop
push
mov
adc
cmp
js
pop
sub
pop
xor
je
rcl
or
or
ja
mov
popa
es
rolb
pop
aaa
cli
add
in
jmp
shr
repnz
inc
lea
add
sbb
and
push
xor
sahf
movsb
insb
fcmovne
jecxz
fists
dec
repnz
pop
sub
mov
ljmp
test
or
jg
pusha
pop
in
arpl
sub
adc
out
fiadds
xor
icebp
add
mov
jmp
loope
fnsave
lcall
fnsave
add
dec
xchg
aad
xchg
push
je
cmp
call
xchg
popf
xlat
sahf
fisttps
push
push
test
mov
jle
add
js
dec
jmp
loopne
jbe
mov
lock
sub
jecxz
mov
ljmp
cmp
call
bnd
lea
pop
pop
dec
adc
add
jbe
dec
inc
orb
xchg
dec
xor
shrl
ja
mov
jnp
fildl
sub
mov
pusha
addb
dec
fsubp
inc
or
add
rol
icebp
sahf
jle
inc
das
mov
sub
negb
jns
into
js
push
sub
pop
loopne
cmp
pusha
fsubrp
daa
in
shrl
pop
xorl
bound
adc
add
pop
inc
push
jmp
cmpsl
les
jmp
push
mov
inc
push
lret
popa
xchg
out
or
fnsave
mov
push
push
jmp
mov
add
jmp
xchg
add
mov
mov
fisttpl
les
push
jb
outsl
stc
repz
int
xchg
push
lock
pushl
and
add
dec
mov
movsb
jnp
sub
jmp
jge
cmp
std
pop
pop
sti
cmpsl
adc
imul
or
xor
and
mov
xor
xor
dec
into
mov
pop
push
dec
int
pop
mov
out
test
stc
loop
xchg
cmp
pop
mov
or
dec
enter
or
neg
xchg
sbb
cmpsl
xor
pop
int
xchg
sub
aam
scas
ret
shr
cmpsb
jbe
mov
cli
adc
imul
in
add
add
in
mov
mov
sbb
rcrb
add
sbb
jmp
cmc
pop
mov
inc
testl
cmp
loope
rolb
neg
das
test
mov
add
insl
add
jg
js
inc
cld
test
add
test
pop
adc
jno
fisttpl
stos
lcall
pop
xchg
add
and
xchg
adc
sbb
les
aam
jecxz
mov
fldl
mov
outsb
cwtl
xor
int3
int3
outsl
mov
cmp
sub
jle
pop
loope
jb
test
addr16
jmp
arpl
adc
imul
pop
std
jo
and
pop
out
pop
ret
int3
out
pop
add
dec
test
loope
jp
mov
test
sub
leave
adc
cmp
sub
pop
and
xlat
das
adc
aam
xchg
dec
or
mov
jg
insb
sbb
sub
orl
push
xchg
dec
dec
rol
inc
aas
jg
cs
jmp
pop
and
sub
decb
and
mov
fdivs
pop
repz
pop
aad
or
push
mov
jmp
lret
mov
adc
and
das
jmp
outsl
daa
aaa
aam
push
push
in
pop
sbb
inc
out
xchg
sbb
inc
imul
mov
add
out
jmp
add
fwait
addb
stos
stc
push
add
push
lahf
xorb
sub
popf
cmpb
xorb
jb
inc
add
sub
pop
jle
das
fdivrp
jnp
imul
or
int
jo
pop
es
and
inc
cmp
ja
ss
inc
sub
lea
push
jmp
mov
xchg
add
scas
sarb
daa
add
push
pop
xor
inc
and
adc
add
pop
jg
mov
xchg
es
adc
scas
xchg
dec
lret
add
nop
lock
add
pop
dec
push
icebp
in
mov
into
orb
add
add
cmp
dec
lea
mov
pusha
gs
adc
jbe
add
cwtl
adc
fsubs
xchg
enter
xor
out
ja
cmp
push
hlt
or
push
jmp
das
clc
ljmp
repnz
sub
nop
dec
inc
xor
daa
pusha
sub
sub
sbb
lock
jg
inc
sub
in
add
mov
jmp
cld
mov
inc
mov
iret
and
jmp
lret
movsl
xchg
movsl
and
and
add
inc
test
add
push
xor
mov
scas
test
adc
jge
mov
inc
addb
lods
or
lea
mov
icebp
add
sbb
adc
into
sub
leave
filds
or
cmc
xor
mov
adc
add
sbbb
dec
fbstp
test
hlt
dec
jle
mov
push
or
cmp
sub
stos
pop
dec
jo
mov
mov
xchg
out
out
ret
cmpsl
jmp
insb
stos
negb
xchg
pusha
clc
xchg
add
add
xor
mov
nop
cmp
repz
push
add
aaa
shrl
out
push
fldt
and
inc
fnstsw
xchg
and
inc
mov
xor
adc
adc
and
into
jmp
out
in
loope
bnd
je
push
pop
int
lods
mov
mov
mov
adc
cmp
add
jl
dec
push
cwtl
rcrb
mov
loop
mov
and
or
sbb
pop
jmp
pop
dec
out
fcomp
prefetch
inc
sub
aad
out
mov
test
stos
fstps
add
jle
mov
xchg
std
xorb
mov
mov
je
cwtl
rclb
pop
adcb
lcall
or
dec
daa
dec
arpl
aas
cwtl
cld
cmp
not
inc
mov
dec
lahf
lock
into
bound
adc
cmp
test
sbb
add
mov
sub
mov
push
je
lods
scas
fiadds
dec
mov
xchg
push
or
xor
inc
cli
das
outsl
das
pop
popl
mov
bound
es
lds
cli
and
xchg
xchg
pop
inc
stc
push
repnz
daa
mov
jo
and
pop
add
lret
faddl
or
cltd
add
xor
add
add
cmp
sub
fmuls
inc
pop
adc
out
cwtl
je
push
dec
mov
push
or
std
sbb
xchg
sub
sub
dec
ret
xor
push
cld
push
pop
or
out
add
clc
jmp
jmp
jo
mov
and
add
xchg
push
push
inc
aad
std
pushl
add
push
xor
insl
js
addb
jmp
std
pop
lahf
pop
imul
sbb
gs
and
and
into
pusha
or
stos
das
mov
add
fmull
iret
jecxz
mov
mov
mov
or
dec
sub
in
cmpsl
fcmovnbe
scas
rcl
xchg
les
ja
mov
enter
xchg
fbstp
add
sbb
dec
sub
cmp
adc
rolb
xorb
or
cmc
xor
lods
aam
pop
adc
adc
push
push
dec
sub
push
xchg
mov
nop
sbb
pop
inc
dec
mov
pop
add
mov
inc
mov
or
fs
fdivrl
imul
adcl
cli
aaa
pop
in
mov
cmp
gs
aad
int3
lods
sub
add
ficomps
pop
loop
mov
xchg
ret
lock
add
mov
or
add
dec
inc
xor
aam
mov
mov
movsb
and
mov
jle
jmp
call
pop
jbe
sub
add
and
push
bound
cmc
ret
and
push
or
test
add
fimuls
push
push
xor
pop
test
push
scas
add
dec
sti
add
nop
dec
dec
lds
mov
push
mov
or
outsb
notb
jmp
repnz
loop
adc
adc
out
ror
mov
push
pop
lret
or
cmp
neg
imull
pop
mov
push
lods
fsubs
cli
add
add
insb
xor
test
xchg
adc
or
cmc
es
aad
jbe
divl
mov
sbb
rclb
sub
adcl
cmp
jo
adc
push
mov
rolb
not
push
nop
popa
mov
sub
jg
js
push
push
inc
leave
outsb
loope
test
icebp
popl
cmc
push
test
sub
out
popa
or
xor
pop
or
or
xchg
and
pop
add
rep
mov
test
jmp
ja
and
mov
dec
push
inc
dec
pop
lret
inc
subb
xor
pop
xor
jge
test
ljmp
fstpl
jmp
push
xchg
lahf
ret
int3
mov
inc
fisttps
cld
shll
xchg
in
push
pop
sub
adc
es
mull
mov
repnz
inc
andb
adc
jmp
mov
mov
dec
out
cmp
repz
or
testl
push
outsl
pop
std
inc
cmp
xor
mov
test
xchg
test
imul
pop
and
xchg
xchg
add
fbld
lahf
mov
inc
frstor
mov
pop
cmp
fcmovb
jb
inc
or
jo
dec
test
mov
dec
push
mov
xor
aad
mov
jmp
inc
inc
aam
and
inc
cmp
jo
mov
xor
in
inc
mov
dec
jmp
pop
and
outsb
sarl
sub
push
push
out
sbb
jg
ja
and
xlat
jle
jge
pop
dec
and
push
push
popf
js
inc
stc
ds
negl
stc
jb
fstpl
shl
lahf
push
pushf
leave
add
jb
and
push
and
shrb
idivl
sub
mov
add
sbb
movsb
daa
cmp
add
maxps
movb
cmc
cmp
jo
hlt
xorb
dec
xchg
mov
dec
jne
fdivl
pop
pop
arpl
mov
xor
scas
adc
xor
mov
out
pop
jmp
push
push
cmp
out
lods
xor
roll
insb
jb
xchg
rol
jge
jmp
out
jle
dec
add
loopne
push
lahf
push
cmp
cs
sti
mov
sub
xlat
cmc
test
mov
add
mov
shlb
call
xor
fs
popl
inc
inc
push
int3
push
dec
cmpsb
or
dec
aad
or
test
ja
inc
pop
lods
add
inc
rcr
cld
push
inc
lods
adc
adc
mov
mov
inc
stos
adc
and
xchg
or
and
mov
add
dec
pop
aaa
xchg
sub
mov
push
movsl
ds
sub
push
and
pop
icebp
jno
imul
inc
mov
sbb
push
clc
add
xor
sbb
adc
xor
loopne
mov
cltd
popf
mov
das
or
stos
not
sub
sbb
cmp
cli
out
add
enter
cmp
pusha
add
outsl
mov
rorb
scas
jmp
pop
add
jnp
add
jae
cmp
and
push
adc
push
mov
repnz
mov
mov
fucomi
push
cmc
cmp
pop
jo
push
mov
out
xchg
jecxz
mov
dec
mov
fisttps
gs
lds
cmpsl
and
sbb
jl
pop
push
enter
jmp
sbb
adc
shlb
push
pop
mov
movsb
pop
sarl
dec
mov
rolb
mov
push
fisubl
xor
mov
jbe
dec
test
vmread
jg
inc
lock
test
sbb
ret
xchg
mov
jnp
mov
cltd
ucomiss
lds
add
ss
and
xchg
or
mov
scas
jo
adc
inc
pop
push
inc
mov
jbe
loope
add
outsb
adc
in
mov
inc
mov
mov
mov
ret
mov
loope
aas
in
aad
pop
mov
lea
push
xor
popf
inc
add
push
hlt
xor
add
dec
lcall
cli
sub
add
repnz
or
sarb
xor
fdivs
fldl
and
das
out
push
in
xchg
add
negb
sbb
outsl
pop
mov
jno
std
lods
push
inc
and
add
je
add
andb
adc
out
mov
push
push
cmpsb
aas
add
xchg
outsb
pop
test
popa
mov
xor
or
push
ret
lret
cmp
test
mov
push
add
das
mov
aaa
rorl
les
lahf
shrb
adc
in
mov
jle
jle
xor
pop
and
add
notb
mov
jo
adc
mov
rcl
loope
adc
ret
add
and
pop
mov
subl
add
dec
xchg
mov
scas
aaa
dec
fnstsw
pop
psubw
and
jno
fnstcw
mov
xchg
cwtl
or
ficoml
sti
dec
daa
sbb
jle
and
gs
pop
xchg
sbb
lods
jge
cmp
jle
and
jne
loopne
adc
pusha
mov
push
int3
inc
add
mov
into
adc
sub
mov
xor
cmp
jp
ljmp
xor
mov
bound
fistpll
or
and
add
cwtl
test
movsb
popf
xor
push
dec
sub
fisttpl
xchg
sbb
adc
sar
repnz
in
or
outsl
cmp
or
cli
das
cmpsl
add
push
xor
shrl
cwtl
dec
add
lock
lret
sbb
roll
repnz
pop
inc
mov
jne
mov
fs
dec
les
out
dec
out
and
add
cwtl
mov
aad
push
shr
push
sti
cld
dec
jb
test
and
adc
mov
dec
xchg
jo
jbe
add
push
iret
aas
cs
mov
inc
fstl
add
mov
subps
rolb
lahf
or
out
cwtl
push
movsl
test
xchg
xor
insl
clc
add
daa
jb
cmpsb
add
pop
call
xor
xor
popa
add
addr16
cmpsl
cld
xor
add
mov
ljmp
push
sub
roll
popf
das
fadds
and
fcomip
mov
in
mov
andb
or
pop
insb
dec
cmpsb
in
add
fistpll
leave
cmp
fiadds
fsubl
cs
or
rorb
and
pcmpgtw
or
cs
fsubrl
clc
xchg
loopne
repz
sub
add
ljmp
in
fmull
push
mov
xchg
in
ds
mov
pop
mov
or
push
mov
inc
cwtl
or
lods
pushf
std
loope
lds
dec
sbb
shll
scas
in
pop
std
cmp
pusha
push
xchg
jo
jl
xchg
mov
cmp
lret
nop
pop
sbb
and
and
sbb
jecxz
or
mov
push
in
add
xor
xlat
aad
dec
dec
cmp
imul
xchg
movsb
imul
pop
jnp
adc
push
mov
pop
xchg
adc
repnz
jb
cmp
rorl
add
push
mov
push
add
jl
sub
daa
insl
ret
inc
add
jge
sbb
add
rorb
add
loopne
ret
lcall
mov
sarb
shrl
add
movsb
adc
add
cwtl
add
jmp
mov
call
pop
cmp
lea
add
xchg
repnz
fldl
test
les
pushf
f2xm1
inc
push
fimuls
jns
out
mov
decb
ret
clc
push
cmp
sbb
lods
xchg
mov
push
scas
add
lods
push
add
andl
mov
lret
adc
daa
fnstsw
mov
mov
arpl
aad
xchg
pop
mov
cmp
jo
and
cmpsl
inc
add
stos
push
adc
rcrl
loopne
mov
and
pop
push
push
cmp
fnstenv
push
lods
xlat
jl
add
arpl
lret
mov
mov
stos
push
xchg
sahf
mov
or
pusha
lods
cmc
add
xchg
sbb
orl
out
mov
jmp
mov
cmp
and
adc
lcall
add
mov
cltd
ds
fdivrs
fmull
add
jecxz
or
inc
in
popa
stos
add
fcomps
ss
shlb
bound
or
lret
and
dec
dec
test
movsl
sbb
or
enter
mov
nop
lds
add
sqrtps
cmpb
cmpsl
add
add
rcrl
inc
mov
sbb
pop
jns
mov
pop
xor
pop
sub
push
jo
xor
dec
out
or
jp
mov
pop
or
rep
or
lahf
cli
sub
loop
mov
fs
ds
lret
sbb
adc
pop
cmc
call
mov
pop
movsl
ss
xchg
jmp
outsb
popf
pop
mull
pushf
inc
orb
and
push
pop
jg
sub
test
leave
push
rcrb
call
popa
pusha
adc
add
not
xor
fsubs
stos
push
cli
int
and
les
mov
cltd
addb
ds
iret
sbb
and
mull
or
jbe
adc
sub
pusha
or
adcb
push
mov
cmp
sahf
das
test
cmp
push
jg
je
rcr
popf
adc
ret
dec
pop
push
in
dec
lahf
cs
inc
call
ret
or
cmp
mov
add
add
sub
push
ret
xchg
aaa
retw
mov
icebp
leave
push
push
sub
call
clc
sub
rcl
imul
dec
xchg
add
lret
push
scas
shrb
aam
dec
or
and
adc
add
sbb
inc
adc
add
scas
rol
xor
dec
jp
cmp
add
pop
cltd
push
dec
push
sahf
add
jbe
stos
orl
test
mov
test
movl
mov
cltd
pop
push
andl
stc
jno
push
add
fnstcw
add
gs
lods
dec
jecxz
sub
or
and
fmuls
arpl
fwait
movsb
adc
repz
jp
sub
sbb
add
xlat
call
test
add
andb
lock
pop
aaa
lea
add
push
mov
aaa
sub
jo
pop
insb
out
cmp
cmp
xorl
aam
mov
dec
cmpsl
mov
out
cmp
adcl
in
lret
shlb
or
les
sbb
sbb
std
xchg
jle
cmp
pop
cmp
in
fisubs
mov
mov
dec
mov
out
adc
sub
aas
mov
adc
jno
ja
ljmp
je
fildl
in
pop
lret
inc
sti
sbb
mov
in
fs
fiadds
pusha
dec
pop
mov
jae
sahf
push
cmp
xchg
bswap
test
mov
mov
addb
enter
inc
jmp
roll
and
nop
int
mov
jp
or
js
or
mov
mov
pusha
insl
add
dec
sub
adc
sarb
xor
jbe
nop
push
lock
neg
orb
aam
push
dec
negb
jge
add
push
pop
mov
pop
jnp
xor
add
pop
rorl
xor
orl
fsts
lss
rcrb
stos
and
nop
lcall
rcrb
mov
jmp
mov
in
xchg
sub
mov
or
inc
xchg
aad
adc
mov
mov
cltd
out
push
push
ret
or
roll
add
mov
adc
inc
out
sbb
imulb
pop
push
inc
jne
xchg
stc
sub
cmpsl
add
cmc
xchg
mov
shlb
movb
jp
je
adc
push
int
jo
push
push
jno
mov
jge
xchg
cmp
popf
movd
mov
lods
and
push
xchg
sbb
andb
mov
mov
icebp
xchg
test
rcrl
sbb
xor
push
cli
add
int3
add
cmp
js
sbb
add
dec
push
js
addr16
es
pop
iret
push
setno
test
mov
addl
and
ret
push
fidivrs
jmp
pop
mov
pusha
or
push
add
lds
xor
ficoml
mov
imul
mov
sub
mov
test
inc
push
js
hlt
cmp
xor
incb
push
push
mov
fs
add
jnp
arpl
add
or
mov
xor
and
sbb
jecxz
pushf
xor
mov
xchg
inc
movsl
inc
in
leave
cmp
mov
add
aam
movsl
ja
pop
fsubs
fwait
cmp
loop
test
loopne
test
decl
into
es
rcrb
and
pop
sarl
clc
sbb
imul
mov
mov
test
popf
rclb
add
imul
nop
psubsb
sub
xorb
sbb
inc
imul
enter
or
and
dec
add
jge
nop
inc
pop
dec
jp
add
xor
push
lock
or
add
in
dec
fwait
jnp
jb
mov
in
leave
daa
outsb
mov
add
fnstsw
pop
test
jecxz
sti
add
decb
cmp
out
lods
xor
add
arpl
add
mov
rol
push
add
pop
add
movsl
add
xchg
xor
jg
dec
or
mov
mov
and
mov
lock
aaa
cwtl
adc
pop
cmp
push
adc
add
mov
inc
mov
les
jbe
in
aas
daa
int3
adc
jae
lahf
add
outsl
or
es
loop
cmp
add
adc
lock
ret
dec
dec
cmpsl
push
or
mov
ljmp
cmp
pusha
data16
mov
cmp
jle
mov
sbb
pop
and
scas
ja
mov
out
in
sub
imul
cmpsb
push
mov
pop
add
pop
lret
inc
sub
stos
pmaxsw
push
sub
push
or
jmp
clc
jae
jp
pop
add
adc
mov
ljmp
lods
xchg
cmp
sub
mov
jp
pop
adc
mov
inc
mov
jo
mov
int3
xchg
push
sub
mov
jae
insb
fmull
jg
ret
pusha
loope
test
add
inc
out
mov
sbb
cld
add
add
iret
xchg
bound
push
icebp
push
ss
arpl
subl
cmp
mov
add
les
add
xor
pop
mov
es
cmpb
sbb
out
and
pop
movsl
fidivrl
add
jnp
push
xchg
push
xor
lahf
jle
xchg
push
out
leave
repnz
sub
sbb
mov
inc
rorl
push
mov
and
dec
push
and
arpl
aad
add
jle
xchg
add
neg
add
roll
pop
jmp
inc
or
jmp
inc
popl
jnp
mov
sub
lret
cld
incl
inc
insb
mov
cmp
xlat
mov
lods
bound
mov
jl
loopne
lock
and
sub
jecxz
xor
pop
jge
jnp
popf
roll
stos
enter
mov
nop
adc
clc
dec
push
add
lahf
popf
pusha
xchg
incb
or
fsubs
outsb
lret
jne
and
cmp
movsl
jl
or
stos
inc
add
mov
add
std
adc
pop
movsl
in
ja
add
push
push
mov
int3
add
icebp
and
push
clc
loopne
mov
cwtl
or
imul
xor
xchg
sbb
js
jne
pusha
pop
push
xchg
je
push
sbb
mov
mov
addl
sub
push
and
jnp
fdivrs
push
push
push
rorb
adc
sbb
incb
jo
addr16
sti
add
xchg
add
adc
inc
out
mov
pop
push
mov
popl
dec
clc
call
mov
push
xor
push
pop
jb
pop
dec
add
mov
dec
jne
rorb
out
sub
sub
cmp
sub
sbb
push
pop
sbb
xchg
out
xchg
mov
and
add
inc
xlat
push
fiaddl
aam
clc
mov
or
pop
cmp
xor
and
adc
rorl
and
insb
sub
and
cli
and
outsb
lock
push
mov
cmp
cmp
adc
sbb
movsb
sbb
push
sbb
and
xor
adc
mov
xorl
xchg
repz
xchg
mov
cmc
popa
xchg
lret
or
mov
or
push
add
adc
jb
inc
das
aad
es
jmp
ret
loope
out
push
imul
pop
mov
adc
ja
or
adc
xor
cmpsl
rcl
aas
cmpsb
push
and
roll
js
inc
popa
cmp
sub
sub
adc
pusha
out
jl
xchg
out
xor
mov
xchg
mov
adc
outsl
test
fsubl
in
pop
inc
les
movsl
mov
add
and
test
sarb
lcall
xor
mov
loop
jo
inc
test
sahf
and
jmp
subb
hlt
out
xor
add
mov
pusha
add
je
xchg
inc
mov
ljmp
or
in
jo
pusha
cmpsl
icebp
sbb
mov
dec
icebp
jns
cmp
fldl
add
sbb
mov
aam
fs
or
xchg
inc
adc
adcb
stos
push
cld
adc
loope
pop
jbe
js
cmp
add
orl
xor
pop
xor
and
nop
cmp
inc
add
xor
add
cmp
dec
push
loope
movsb
outsb
and
add
in
sub
lea
add
int
gs
sbb
inc
xchg
jge
cmp
adc
je
push
nop
add
add
mov
xorb
roll
pop
sahf
lock
jb
mov
ss
dec
add
loop
and
xor
jecxz
call
stos
jl
inc
sti
inc
dec
push
clc
shlb
ljmp
push
lds
sbb
add
add
leave
mov
sti
xor
push
lret
sub
rcll
xlat
add
rcrb
data16
inc
fwait
jmp
mov
push
or
xor
nop
jl
sub
adc
idivb
jo
add
inc
in
jno
rorl
sub
inc
shlb
push
add
add
rolb
xchg
call
fnsave
mov
pop
cli
sbb
repz
xchg
push
addb
fwait
adc
add
xor
jmp
jno
inc
add
pop
xchg
mov
jno
add
xchg
or
into
xchg
xchg
adc
fsqrt
scas
jecxz
xorl
imull
stc
dec
sbb
addl
mov
in
pop
fdivs
add
add
movl
inc
fistpll
xor
cmp
js
imul
jl
jl
hlt
cli
mov
xor
push
in
or
cmp
mov
fcmovnb
sbb
xchg
mov
shlb
in
xchg
add
jae
add
lods
jecxz
jbe
push
ret
mov
lret
add
xor
inc
dec
lret
loope
pop
cmpsb
push
add
xchg
push
xor
xchg
jne
in
jle
out
jge
xor
pop
in
shlb
hlt
fidivl
loopne
or
inc
add
nop
shl
sti
sub
jo
aam
jmp
jmp
test
sub
loopne
clc
scas
jb
push
xchg
pop
push
popf
mov
or
jl
add
jb
test
rclb
or
xor
scas
xchg
or
in
rorl
dec
jp
lea
add
sbb
xor
cli
jns
iret
out
ss
out
inc
cmp
and
and
mov
push
and
lock
enter
pop
mov
adc
or
xchg
sbb
and
icebp
fsub
jns
mov
icebp
push
insb
add
test
cmpsl
mov
fistpl
mov
mov
dec
int3
sbb
fldenv
inc
mov
inc
jle
cwtl
loope
dec
mov
mov
push
aas
sub
pushf
mov
dec
sub
pop
divb
repnz
mov
xchg
xor
mov
inc
sarb
mov
jnp
add
filds
aas
mov
dec
adc
dec
pop
add
cwtl
sub
mov
pop
adc
shlb
jo
push
add
lret
inc
inc
dec
ja
add
test
push
add
pop
lret
adc
addl
mov
push
addb
pop
jge
aas
mov
inc
and
add
test
fcmovnb
mov
sub
and
jo
cmc
xchg
sub
sbb
or
push
movsb
lock
ds
adc
dec
mov
xchg
inc
pop
inc
test
add
lret
jb
pop
shll
push
mov
add
addr16
push
adc
and
arpl
sti
and
sbb
xor
dec
test
pop
mov
leave
out
and
dec
and
add
lods
push
add
mov
mov
sbb
dec
push
ficoms
loope
mov
adc
jb
mov
popf
mov
xchg
push
in
call
into
pop
ss
dec
out
inc
dec
int
and
rcrb
push
insl
faddl
dec
add
mov
andb
and
shlb
add
gs
js
sbb
push
sub
xor
add
or
add
popf
je
add
fucom
shl
in
jle
mov
jmp
dec
icebp
dec
js
add
mov
mov
adcb
cmpb
xchg
dec
xchg
adc
fidivs
pop
pop
lods
xchg
mov
jne
sbb
ret
pusha
int3
pop
xchg
cmp
in
sti
jg
add
push
orb
cmpsl
and
orl
daa
test
lock
sbbb
adc
int
jae
sub
adc
inc
add
pop
std
clc
push
arpl
aam
fadd
push
dec
addb
jmp
sbb
imul
dec
hlt
pop
cmp
pop
adc
mov
xor
pop
lcall
cmp
ljmp
xchg
adc
xorb
bnd
mov
add
ja
add
in
ljmp
in
mov
rcl
and
int
adcb
dec
or
jo
mov
and
push
dec
fs
subb
pushf
orb
add
add
cmpb
lods
movsl
sbb
xchg
inc
fcoms
aas
mov
sbb
adc
out
add
loopne
in
into
cmp
cmp
and
or
ljmp
sti
or
aas
cmp
xor
in
pusha
mov
mov
lds
pop
adc
aaa
mov
cwtl
inc
pop
push
and
dec
mov
mov
iret
mov
loopne
shlb
push
scas
fcompl
or
and
adc
mov
out
cmpl
push
daa
push
push
cmp
jp
iret
mov
pop
mov
or
aad
loopne
out
cmpsb
push
jne
pusha
push
mov
dec
and
inc
mov
adc
insl
pop
test
adc
sahf
jne
add
add
shl
push
mov
mov
loopne
clc
add
push
clc
dec
push
das
bnd
push
or
adc
insl
outsl
add
gs
cld
dec
xchg
xor
jp
push
pop
repnz
pop
xor
inc
add
fdivs
jae
xor
adcb
jno
stc
mov
insl
add
addr16
fists
imul
rorb
stos
cli
ret
ja
sbb
pusha
dec
jno
push
add
push
sarb
push
ja
out
jne
or
dec
fs
fldenv
out
push
test
dec
sub
and
cmp
pop
push
xchg
dec
mov
push
and
or
movsl
or
idiv
out
or
jmp
pop
xor
or
push
inc
call
sub
and
xchg
daa
mov
sbb
mov
push
into
sub
sub
ret
dec
or
xchg
mov
mov
push
pop
mov
sbb
mov
call
pop
inc
inc
repz
jmp
pop
dec
pop
das
mov
add
or
cmp
movsb
popf
mov
sti
dec
pop
in
lret
xchg
pop
das
adcl
cmp
hlt
pop
outsb
shll
and
sbb
nop
sub
loop
nop
mov
pushf
in
ljmp
loopne
insb
mov
cmpsb
sub
sub
add
shl
mov
imul
test
jecxz
push
cmpsl
fs
jle
in
ret
test
mov
jnp
dec
dec
push
loopne
lds
xor
outsb
ja
fwait
clc
cmc
add
dec
pop
ret
adc
xor
inc
sub
jp
pop
add
outsl
push
in
push
sub
inc
je
jl
cwtl
out
adc
js
fsub
scas
cld
push
dec
sub
lcall
push
test
movsb
es
inc
sub
push
loopne
popf
mov
test
or
cltd
mov
sti
sub
sub
dec
push
dec
push
sbb
hlt
test
sub
enter
pop
mov
in
jg
enter
jbe
xor
scas
mov
inc
inc
scas
adc
mov
or
jecxz
pop
push
pop
push
sub
and
push
hlt
es
les
inc
orb
mov
mov
sub
dec
mov
jg
adc
inc
and
popa
jl
mov
and
test
or
fcoms
repnz
pop
sub
mov
mov
jno
pop
je
mov
aam
cmp
inc
jbe
add
pop
pop
inc
repz
push
xchg
dec
lods
sub
rcrl
movsb
adc
rolb
pop
xlat
dec
mov
pop
stos
sub
and
int3
sub
sbb
inc
test
cmp
adc
ret
call
pop
sarb
sbb
cmc
adc
jbe
loope
sbb
rclb
or
jbe
sti
push
jp
push
repnz
sbbb
pop
push
shlb
test
test
aaa
dec
xor
pop
and
add
push
sub
mov
bnd
popf
add
sbb
or
lea
adc
shr
int3
popf
push
stos
mov
aam
pop
in
roll
addl
inc
test
lret
repnz
sbb
or
daa
or
mov
lret
jmp
faddl
mov
insl
sbb
sub
add
cli
outsl
dec
or
dec
test
cmpb
xor
cmp
xchg
popa
dec
sub
sbb
jae
add
sub
mov
call
cmc
push
add
jno
icebp
mov
push
xchg
mov
ja
gs
dec
call
pop
rorb
dec
add
lock
add
cli
divl
std
xor
dec
cmp
int3
push
mov
roll
mov
push
mov
push
mov
push
cmp
pop
loope
in
lods
or
stos
sub
pop
cmp
mov
sbb
cltd
in
cmp
add
popa
sbb
ljmp
xchg
xor
dec
xor
aas
nop
inc
add
addr16
gs
sub
and
pusha
in
mov
sbb
adc
jae
add
mov
mov
add
fmul
scas
cmp
xchg
add
fidivs
loopne
mov
cltd
adc
sub
shll
imul
xor
jbe
iret
xor
rorl
adc
fnstsw
add
mov
xchg
into
sub
cmp
pmaxub
xor
in
xorb
aam
mov
shll
xor
and
into
mov
sbb
aam
sub
and
mov
sbb
inc
ret
fmuls
dec
inc
in
jge
add
jp
flds
jno
call
addl
mov
aad
xchg
sbb
jnp
pusha
jmpw
out
cmpsl
dec
add
xor
mov
inc
lock
inc
adc
add
lods
cwtl
shlb
inc
movsb
stos
rolb
fdivrs
sarl
xor
rorb
jl
jbe
test
jnp
insb
lock
lret
pop
pop
sti
xchg
xchg
mov
test
push
aam
mov
sbb
pusha
aas
orl
and
mov
pop
rclb
lods
stos
push
lcall
js
roll
mov
add
mov
and
sbb
cmpsl
sub
cmp
shlb
test
sbb
mov
in
mov
jge
insb
ds
shrl
sahf
mov
jbe
loope
xor
xchg
add
sub
mov
push
mov
push
clc
arpl
jmp
fisttpll
leave
pusha
shl
int3
cli
fsub
jbe
dec
mov
dec
test
or
xor
je
and
js
loop
xor
out
fldenv
insl
or
rclb
cmpsb
sbb
and
sub
inc
add
std
rdpmc
jecxz
pop
and
and
mov
pushf
popa
insl
jb
or
push
push
inc
push
and
push
add
xor
loopne
in
out
or
and
inc
call
xor
dec
das
xchg
ret
inc
sar
and
dec
flds
sbb
jle
jp
shll
test
movsl
add
push
inc
or
enter
in
aad
mov
les
cmp
loopne
in
rcrb
sbb
adc
dec
add
in
imul
cmp
loopne
xor
and
jmp
mov
cmc
jns
adc
and
cmp
sbb
jne
or
add
das
add
mov
inc
ljmp
push
rolb
cmp
and
inc
sub
sahf
jnp
sbb
nop
adc
lahf
cmp
add
pop
xchg
lcall
push
in
sub
push
jecxz
inc
mov
add
cmp
outsl
cmpsb
add
je
inc
mov
mov
push
loope
scas
add
xchg
or
jecxz
daa
add
stos
into
xor
test
add
jge
adc
in
into
add
push
cmp
jg
push
cwtl
mov
outsb
jne
xor
sbb
cmp
in
mov
fiadds
and
jns
inc
loope
mov
js
loop
ret
xor
fistpll
push
sbb
scas
add
das
xchg
in
in
pop
cmp
lea
or
xchg
aad
mov
or
cwtl
sbb
repnz
dec
sbb
mov
sbb
out
add
lea
adc
xor
add
rorb
mov
into
sub
sub
mov
cwtl
sub
dec
adc
push
or
bound
call
add
ds
sbb
icebp
adc
nop
add
int
imul
in
mov
inc
and
mov
mov
mov
sub
inc
movsb
mov
std
adc
push
fcmovb
fcmovnbe
lods
addps
das
xchg
jg
add
scas
pop
sbb
sub
sbb
popaw
push
shr
int
movsb
iret
xor
outsl
cld
cmp
scas
sbb
xchg
xor
xchg
lods
orb
pop
test
inc
loope
test
and
sbb
cmpl
cltd
les
sub
pop
dec
push
sub
mov
mov
sti
or
adc
sub
push
dec
lds
and
insl
rorb
and
jg
subb
ret
pop
test
adc
daa
mov
and
repnz
lea
pop
js
and
sti
inc
and
mov
enter
enter
mov
push
jne
push
adc
inc
sub
mov
or
push
xor
xchg
mov
add
ret
aam
mov
pop
test
add
adc
lods
or
mov
lcall
adc
and
mov
dec
shll
cltd
mov
sub
xchg
in
add
rol
inc
mov
mov
sbb
mov
cs
cwtl
lahf
mull
jno
pop
enter
dec
lcall
xchg
sub
mov
push
add
imul
sub
push
dec
add
das
jae
mulb
jae
fmulp
loop
ds
jge
add
lock
add
popa
or
mov
out
sub
ss
push
pop
stos
lods
and
mov
push
popf
dec
add
jbe
js
xchg
aaa
push
push
aad
imul
jecxz
mov
lods
fildl
dec
into
lcall
push
sbb
fimull
pop
das
roll
out
mov
cmpsb
into
inc
test
pop
and
pop
inc
jecxz
push
nop
xchg
movsl
add
push
jno
push
pop
push
insb
into
or
cmp
nop
sbb
jle
sbb
jae
outsb
add
setns
dec
nop
inc
push
add
in
sub
nop
sbb
mov
adc
repz
dec
aad
add
stos
scas
pop
dec
push
pop
and
sbbl
mov
push
sub
fmul
adcb
add
insl
sub
inc
jecxz
dec
sti
adc
flds
dec
xor
xor
pop
xchg
mov
aas
xchg
add
push
outsb
add
push
mov
aad
lock
arpl
test
ja
add
cmp
mov
add
mov
sub
pop
push
sbb
push
pushf
mov
push
popf
int
cmc
cld
rcll
fisttps
dec
add
cmp
in
add
loope
bound
repz
incb
add
sahf
in
xorb
dec
mov
push
or
or
cld
pop
test
adc
mov
jnp
add
cwtl
sub
incl
dec
repnz
sbbl
call
add
xor
ja,pn
inc
xorb
jle
cmp
dec
sbb
xor
lods
and
mov
add
push
fcomps
mov
call
fwait
shr
cmp
ret
fcmovu
jns
push
pushf
pop
and
dec
cmp
cmpsl
or
jbe
pusha
es
add
rcr
and
enter
mov
out
push
shrb
dec
sub
mov
xchg
es
adcl
je
add
int
data16
pop
and
inc
xchg
mov
adc
cltd
int3
add
bound
mov
cmp
outsb
into
cmp
out
repz
popa
idivb
fcompl
sbb
loop
hlt
nop
js
mov
and
cmp
jne
prefetch
jmp
push
shrl
add
xor
push
jge,pt
movhps
or
loopne
mov
imul
loop
rolb
fnop
fistps
out
stos
push
jno
sub
sub
sbbb
xlat
or
dec
add
jo
mov
insb
pop
pushf
xchg
xchg
mov
dec
cli
mov
ja
insb
icebp
dec
or
jg
push
gs
sub
insl
mov
cltd
push
repnz
pushf
add
mov
sub
in
jecxz
or
fisubs
jo
dec
xor
add
xor
add
les
cwtl
pusha
adc
scas
sub
mul
add
jl
adc
test
jns
pusha
xor
int
data16
add
test
and
clc
cli
cs
adc
rcll
add
sbb
pop
inc
imul
inc
mov
and
or
in
add
insl
data16
adc
or
jae
vpmacsdql
bound
or
addr16
in
shlb
jmp
push
or
mov
pusha
in
add
mov
sub
test
rorb
test
daa
add
data16
pusha
rolb
or
mov
out
mov
add
sub
into
xchg
aaa
in
in
das
push
cmp
jge
dec
pcmpgtd
adcl
dec
push
sahf
cs
sbb
and
fidivrl
repnz
cs
loope
pop
push
imul
add
ss
adc
sti
cld
add
or
xchg
sbb
test
add
add
or
jmp
lea
cwtl
push
mov
cmpsl
and
inc
and
subb
rorb
add
jg
xchg
leave
lea
push
lock
add
jae
mov
test
out
and
or
or
inc
mov
loopne
and
stos
iret
sarl
sbb
adc
into
inc
jns
dec
ficomps
inc
jle
xchg
pop
dec
or
add
sahf
mov
push
fsubr
loopne
into
in
adc
or
add
inc
scas
inc
js
lea
adc
adc
mov
sub
inc
sub
or
sti
inc
sub
add
sub
outsl
jge
cmp
cmp
jbe
es
add
inc
mov
call
repz
andb
fdivr
in
adc
aaa
cwtl
mov
mov
sbb
movsb
cwtl
dec
loopne
or
mov
testl
or
add
sbb
and
push
gs
in
mov
jno
test
notl
add
xchg
dec
loop
add
pop
repnz
push
lods
add
std
stos
mov
shrb
fidivs
or
add
inc
adc
in
dec
add
outsb
add
dec
adc
cmpsl
mov
push
sub
adc
test
leave
mov
xor
and
add
or
dec
inc
hlt
cmp
xchg
mov
pop
pop
cmp
dec
inc
add
test
fldl
sub
add
or
push
jno
add
sarb
in
lods
push
and
aam
xchg
jns
dec
ss
andb
sub
nop
mov
and
and
add
sbb
je
sbb
jb
dec
sub
add
rclb
cli
xchg
movsb
loop
push
xchg
add
jns
jb
fbstp
or
and
ret
push
adc
fimuls
xchg
cmp
jl
lods
xor
daa
inc
shl
cmp
jo
cmp
fnsave
aad
inc
nop
adcl
or
es
fsubp
scas
inc
andl
es
rolb
sbb
xchg
into
dec
sub
adc
jecxz
mov
ds
add
cltd
cmp
test
scas
cmp
jnp
dec
adc
inc
add
roll
sbb
and
aaa
push
sub
dec
ljmp
daa
je
sbb
add
mov
and
movsb
add
or
push
subl
cmp
loop
pop
lcall
ja
inc
push
add
mov
shl
xor
push
insb
test
mov
push
pop
je
cmp
mov
push
les
push
call
cld
add
jnp
nop
imul
sub
cmp
adc
add
loope
outsl
rclb
stos
les
xchg
sarb
sbb
adc
js
cwtl
andb
cmp
jo
cmp
dec
data16
in
mov
adc
les
test
lods
andl
jl
int
fnstsw
push
scas
je
arpl
cmp
rcrl
xor
xor
pushf
popa
cmp
sub
xlat
lret
scas
cmp
cmp
cmpsl
mov
sahf
sbb
or
cmp
and
jecxz
jmp
cmpsl
and
mov
xchg
dec
fsubr
add
push
sbb
or
scas
cmp
add
jecxz
and
or
mov
rclb
sub
xchg
test
and
mov
into
in
arpl
sub
or
rcrb
cmp
outsl
xchg
and
adc
loopne
or
jl
in
add
shl
xor
and
sbb
scas
loope
rcl
cmp
adc
jbe
mov
cmp
mov
mov
xchg
int3
mov
cmpb
nop
push
push
xchg
in
mov
adc
sbb
scas
cmp
adc
cmc
mov
sub
dec
rclb
daa
push
mov
into
addb
xchg
cmp
in
daa
jp
jecxz
add
shll
xor
jns
in
je
hlt
xor
pop
bndstx
or
xchg
sbb
xor
xor
in
test
loopne
movsb
adc
add
scas
daa
repnz
dec
xor
lods
push
jg
xchg
fdivl
xor
iret
push
lods
into
fstpt
mov
movsb
push
loop
sub
enter
cwtl
stos
cmp
into
loope
jns
add
js
cmp
imul
add
mov
in
or
test
scas
cmp
loope
movsb
sbb
shlb
dec
inc
fdivrl
xor
mov
in
mov
inc
xchg
int3
hlt
aad
push
adc
addl
lock
mov
sub
je
adc
xchg
sbb
xor
sbb
loopne
andb
int3
mov
sub
sub
or
test
sbb
jbe
fsub
xor
cmp
add
pusha
sbb
mov
jne
fcmovne
or
arpl
scas
in
jl
int3
jno
jl
arpl
sbb
mov
mov
xchg
sub
add
and
scas
inc
adc
hlt
rcrb
xchg
and
in
sub
sbb
call
test
das
in
aad
mov
add
pop
icebp
add
in
push
test
loop
sub
mov
cli
cmpsb
xor
cld
sbb
xchg
or
ss
add
arpl
xor
jne
jmp
stc
test
sub
inc
add
inc
js
sbb
add
outsb
stos
pop
cli
push
add
faddl
iret
mov
rcrl
cli
rorl
mov
sti
testl
dec
sbb
int
or
mov
test
filds
xor
stc
dec
es
leave
xor
test
xchg
ljmp
and
jg
add
aaa
int
mov
sahf
dec
scas
sub
pop
enter
xor
mov
adc
rcrb
pop
sbb
stc
adc
inc
jne
in
inc
mov
in
mov
cmp
shlb
in
or
add
inc
loope
out
push
mov
aam
push
fadds
jnp
movsl
xchg
mov
add
mov
pushf
jle
inc
mov
iret
cltd
xor
ret
xor
cld
mov
std
add
mov
or
cmp
negb
xor
mov
inc
xchg
enter
or
je
ljmp
add
in
shrl
cli
lea
popf
sbb
movsb
mov
adc
cmp
push
sub
scas
pop
push
xor
hlt
mov
xchg
pop
cwtl
les
dec
clc
sub
movl
cmp
and
imul
dec
add
test
push
stos
cltd
fdivp
xor
inc
pusha
jle
pop
pusha
mov
pop
aas
xchg
jl
add
and
mov
dec
adc
push
outsl
add
or
sub
lea
pop
movzbl
in
popf
mov
outsb
add
mov
cwtl
mov
mov
mov
or
push
pop
or
shlb
dec
insl
and
and
mov
daa
mov
add
and
add
movsl
add
andl
dec
jne
cmpsb
add
jmp
or
je
add
mov
mov
sbb
mov
lret
add
call
add
cmpl
adc
icebp
out
sbb
push
jp
fsubrl
push
and
ret
dec
mov
leave
pusha
sbb
inc
push
ret
addb
out
xlat
cmp
test
jmp
es
mov
and
sub
out
sub
push
jmp
in
in
push
int3
add
out
push
cmp
cltd
xchg
mov
sbb
sbb
adc
inc
popa
call
es
cmc
adc
call
add
ja
add
push
ret
pop
ret
xchg
mov
mov
add
je
inc
mov
lds
push
push
push
xor
in
inc
push
and
add
ret
adc
xchg
jge
xchg
xor
and
push
pop
ret
inc
mov
inc
pusha
push
and
daa
mov
mov
cmp
mov
pop
and
cmp
adc
inc
push
ret
add
hlt
inc
sub
pusha
inc
jae
mov
xor
jo
nop
mov
xchg
mov
movzwl
and
pop
insb
pop
test
fdivr
jge
xchg
pop
xor
or
bound
daa
and
repz
add
jecxz
add
jg
add
push
xchg
in
sbb
ljmp
int3
out
addb
repz
lods
fwait
leave
gs
mov
loop,pt
and
ds
fldenv
test
lods
sub
adc
mov
add
adc
fidivrs
rcl
testl
push
adc
inc
aaa
add
adc
and
pop
mov
sahf
cltd
inc
jmp
jmp
xor
out
shlb
mov
pop
ret
mov
inc
push
ret
add
outsl
sbb
shrb
mov
sub
add
adc
pop
mov
sub
fildl
inc
clc
push
xchg
pusha
push
xchg
and
push
ret
mov
xor
or
add
and
sub
mov
add
dec
sbb
pop
pop
adc
jle
test
sbb
or
out
dec
cmp
adc
add
push
pop
not
adc
repnz
add
mov
imul
mov
jb
mov
add
repz
addl
sbb
and
sbb
push
in
jae
inc
and
xor
push
push
add
pop
push
repz
pushf
icebp
push
sbb
adc
and
test
push
loop
cmp
mov
sub
jno
sbb
jns
or
cli
sub
add
and
mov
push
push
and
dec
xchg
mov
and
or
popf
jecxz
inc
add
pop
push
mov
sbb
mov
and
add
mov
call
gs
mov
add
fwait
mov
or
sub
sub
rorb
and
mov
sbb
mov
add
stos
mov
in
add
mov
xor
cmp
mov
add
and
movl
push
mov
mov
sarb
out
loopne
icebp
cmp
divb
call
call
icebp
call
pop
in
and
mov
mov
and
xchg
pop
xorl
jb
jge
add
jne
and
je
add
mov
mov
lret
jecxz
fcmovnb
bound
sbb
dec
call
sbb
adc
cmp
int3
inc
mov
enter
sub
test
loopne
add
mov
mov
mulb
push
leave
imul
pushf
mov
add
add
adc
mov
pop
push
mov
ja
aaa
sub
popf
cmp
add
mov
push
mov
cmpsl
dec
jbe
pusha
mov
mov
cmp
je
ret
mov
lret
fistpl
and
xor
leave
add
or
and
orb
cltd
rorl
dec
fistps
lods
or
push
mov
stos
lds
add
cs
cld
mov
sbb
add
push
mov
push
pop
adcb
jmp
push
cli
cmp
xor
jmp
mov
popa
xor
mov
add
test
sub
insl
jns
push
jo
int
xor
imul
les
pusha
jne
cltd
dec
roll
imul
outsb
sbb
jne
testl
nop
sarl
inc
push
fs
pusha
fidivs
lds
and
jle
icebp
subb
test
xor
aaa
add
out
add
add
mov
addr16
and
push
cwtl
push
add
sub
mov
dec
mov
call
xor
xchg
jnp
push
sub
mov
mov
xchg
sbb
ud2
mov
pop
cmpsb
and
pop
pop
notb
dec
sub
bound
dec
adc
adc
add
pop
pop
xchg
stc
mov
add
push
pusha
jecxz
arpl
pop
and
add
std
test
and
xor
roll
cmp
mov
adc
pop
cmpl
bswap
mov
sbb
add
insb
andb
jmp
inc
test
add
out
push
jo
bswap
and
ljmp
sahf
fs
inc
push
or
leave
lea
mov
mov
and
daa
pop
mov
lea
jne,pn
inc
lds
or
nop
push
and
inc
les
pusha
xor
fwait
aas
les
mov
sbb
call
out
dec
xorl
shlb
inc
sbb
pop
int
mov
pop
dec
adc
push
rcrl
das
add
cltd
dec
test
mov
or
mov
sub
mov
test
test
dec
cmpsl
popa
add
add
roll
add
xchg
hlt
sbbb
mov
pop
jl
fsubs
ret
push
addb
sbb
stc
sbb
mov
jecxz
push
les
mov
pop
adc
adc
lea
and
in
int
sar
fiadds
mov
adc
mov
mov
adc
aas
stos
inc
pop
jno
cli
lret
sbb
pop
ds
fwait
mov
mov
mov
cmc
out
add
add
mov
mov
daa
mov
inc
arpl
lods
clc
mov
shr
aas
cwtl
and
mov
fs
xor
int3
jb
adc
inc
jne
pop
repnz
sub
mov
sbb
push
push
mov
xchg
and
xor
xchg
rcl
sub
stos
rol
ficoms
jbe
dec
fldcw
or
xchg
leave
jmp
inc
mov
mov
sbb
xchg
mov
add
popa
push
inc
mov
or
add
push
add
mov
les
push
push
add
popa
and
push
mov
dec
ljmp
lock
and
les
push
roll
push
add
pop
mov
push
outsb
mov
inc
loopne
pop
mul
mov
push
jl
cmc
data16
rcrl
xchg
ret
call
jae
mov
or
cmpsb
jo
add
push
inc
mov
pop
cmp
subl
inc
xchg
stos
dec
fsubl
push
into
jmp
jg
pop
aaa
adc
cmp
or
out
sub
xchg
popa
add
and
lds
pusha
push
testl
fmull
ds
xchg
push
mov
mov
mov
iret
popa
inc
outsl
lea
aad
rorl
or
dec
imul
popa
adc
mov
clc
roll
int3
sarb
movsb
mov
pop
out
dec
ss
and
jmp
fwait
adc
je
push
popa
pop
and
sbb
sbb
ret
int3
or
adc
frstor
or
js
sub
subb
popa
mov
dec
inc
jo
dec
add
push
fmuls
inc
adc
adc
adc
rorb
dec
mov
mov
sbb
pushf
xchg
pop
icebp
cwtl
mov
mov
das
add
mov
mov
dec
push
outsl
add
test
mov
add
ds
push
in
mov
stos
lea
adc
addr16
outsl
in
cs
data16
enter
in
aaa
stos
into
lods
add
xchg
jne
add
out
xchg
jo
jmp
or
mov
mov
repnz
xor
and
rcrl
insb
cltd
cs
insb
fidivrs
or
push
mov
pop
mulb
jp
lahf
loop
repnz
cltd
pop
adcb
imul
and
mov
inc
sbb
addl
push
jne
add
stc
mov
pop
inc
add
aas
mov
jp
cmp
xor
aas
inc
les
cmp
es
loop
mov
minps
nop
sub
push
xor
mov
imul
add
rolb
sbb
push
jge
jns
lcall
aas
nop
sarb
stos
ds
mov
cs
inc
xor
mov
mov
enter
xor
push
cwtl
lcall
mov
sub
inc
lods
out
push
cs
and
push
adc
mov
jnp
push
adc
les
aam
sub
or
adc
sbb
sti
addl
lret
cmp
xor
std
sbb
cmp
mov
shrb
scas
jnp
dec
and
add
ret
int3
cmp
xchg
xor
push
repnz
push
pop
push
add
adc
xor
add
cmp
mov
push
shll
inc
and
add
cmp
nop
leave
jno
mov
out
cmpsb
pop
xchg
adc
jmp
ret
push
xor
js
in
push
mov
dec
push
mov
and
pop
pop
pushf
gs
and
inc
mov
adc
or
lock
or
shl
jb
jmp
mov
lahf
outsb
movsl
and
jge
mov
jno
and
insb
sbb
das
sub
push
push
outsl
adc
sub
mov
sbb
in
ljmp
add
je
hlt
or
out
or
xor
roll
loop
xor
cmpsb
add
adc
mov
xor
std
fldenv
cwtl
inc
mov
sub
fimull
andl
call
dec
movsb
dec
pop
sbb
xor
nop
dec
test
dec
push
dec
mov
stos
xchg
daa
push
sub
mov
xchg
jl
test
sbb
sub
jecxz
dec
push
push
cmp
xor
inc
xor
xchg
cmc
inc
mov
sbb
adc
push
cmp
sub
incb
push
add
cltd
pusha
cmp
addb
xor
add
outsb
inc
rorl
daa
popf
mov
into
push
mov
xor
pop
or
mov
pushf
or
mov
mov
pop
inc
inc
cmp
sbb
adc
push
mov
popa
push
dec
arpl
and
mov
sbbl
push
inc
adc
aad
sbb
sbb
sbb
add
mov
je
sub
add
sti
ljmp
or
sbb
shlb
jo
addr16
sbb
xor
push
xchg
cmpl
jg
call
add
xchg
mov
sub
fsubrl
rcrb
popf
xor
dec
stc
shll
int
or
aam
int
jb
outsl
jmp
mov
push
push
jo
push
dec
xor
mov
adc
and
divl
stos
mov
jmp
xchg
mov
pop
shl
mov
mov
rcrl
lret
inc
orl
xchg
stos
jne
mov
lret
dec
push
sub
and
sub
jo
les
adc
jl
ret
popa
mov
arpl
cmpsl
cmp
or
cmpb
scas
mov
test
or
das
les
pusha
gs
xchg
adc
gs
mov
mov
jmp
lods
insl
push
mov
inc
mov
loopne
fwait
mov
pop
xchg
shlb
std
sbb
sub
push
mov
mov
sarb
xor
mov
or
pop
rorl
mov
push
pop
mov
shll
test
icebp
xor
jae
add
fs
push
daa
arpl
mov
aaa
lock
movsl
rcrb
clc
outsb
add
imul
popf
push
add
aaa
les
das
or
add
sahf
pop
lods
jmp
mov
xchg
jns
fld
dec
mov
fiadds
fwait
adc
push
inc
cmp
sbbl
or
cltd
sarl
mov
and
icebp
sbb
jns
clc
cmp
xchg
or
lea
lret
out
es
adc
and
inc
sarl
test
pop
je
adc
imul
pop
int3
or
xchg
sub
push
call
fs
cmpl
dec
mov
popw
lock
sbb
jp
adcb
xchg
mov
lods
insb
lahf
push
clc
dec
adc
mov
or
testl
mov
lods
sub
xchg
cmp
inc
dec
pop
lds
pop
sub
jge
xchg
and
lods
mov
push
xchg
push
pusha
out
cmpl
add
cltd
sbb
in
jnp
sub
cmp
stos
or
xchg
aad
adc
mov
push
call
add
add
xchg
jnp
add
je
cmovl
inc
sbb
mov
add
or
lcall
jbe
test
sbb
xlat
push
sbb
fldenv
out
decl
push
cmpsl
and
sbb
rcrl
or
cmp
sbb
mov
mov
push
adc
test
lea
addb
sbb
add
xorb
iret
enter
aam
loop
adc
cmp
push
jnp
pop
add
xor
repz
jo
or
jb
or
subl
leave
xchg
add
fcmove
imul
push
sbb
sbb
insl
and
out
lea
mov
xchg
and
mov
test
mov
lret
imul
rcrb
mov
mov
fidivs
push
cmp
idivb
jl
sub
mov
addr16
and
insl
jp
push
loope
repz
jne
add
adc
mov
pop
aam
xchg
mov
push
add
mov
data16
push
leave
add
cmp
call
or
aad
xchg
add
jle
add
leave
lds
mov
inc
add
mov
mov
xor
icebp
das
inc
or
push
xor
add
xor
lret
outsl
lahf
cmp
dec
xchg
cwtl
incl
sbb
popa
push
arpl
push
push
in
jecxz
add
xchg
in
aam
add
jmp
pop
sahf
test
in
call
jbe
loopne
jle
pop
fldl
mov
iret
or
sub
mov
pop
adc
mov
xchg
cmpsb
jmp
outsb
xchg
push
std
rcl
adc
xchg
in
adc
xor
stc
and
jmp
sti
xor
in
cld
sub
dec
pop
mov
daa
in
add
lods
cltd
xchg
sbb
repz
push
sbb
daa
insb
lcall
and
sub
dec
push
inc
pop
inc
adc
xor
push
pop
adc
xchg
sbbb
into
jne
xchg
jbe
cmp
int3
add
dec
in
push
ja
dec
cmp
dec
and
sub
in
push
add
lret
jae
rep
adc
xorb
mov
dec
jno
mov
lret
pop
adc
sub
bound
lds
add
cmp
lds
and
add
sbb
xor
sahf
mov
push
test
jb
mov
add
mov
add
mov
mov
adc
mov
mov
add
inc
rcrl
sbb
pop
popf
push
pop
adc
test
iret
pushf
enter
stos
cmp
icebp
cmp
sbb
mov
mov
mov
ds
rol
xchg
or
sahf
mov
lea
sub
sbb
jg
add
or
cmc
sub
out
xor
mov
out
loop
mov
dec
add
push
mov
add
outsl
out
fnsave
fdiv
int
inc
or
es
syscall
sti
pop
gs
jmp
add
sub
push
push
jns
inc
push
clc
mov
mov
fcoml
das
dec
mov
mov
and
stc
fdivrs
sti
adc
inc
sbb
mov
cltd
aam
push
pop
dec
pop
fistpl
adcb
mov
ja
xor
in
jecxz
adc
sub
dec
pop
and
testb
outsl
or
mov
ss
lahf
mov
inc
inc
xchg
push
xchg
subb
dec
xor
dec
xor
sbbb
add
mov
push
cs
mov
das
pop
into
mov
mov
fs
mov
xchg
add
inc
lahf
sbb
insb
out
lcall
or
adc
cmpb
mov
dec
pop
ucomiss
xor
dec
push
popa
jecxz
push
mov
and
pop
adc
mov
mov
mov
pop
clc
movups
adc
insl
mov
push
add
rcr
xchg
aam
lock
adc
mov
mov
inc
push
push
faddl
mov
dec
inc
pushf
je
in
xor
sub
daa
test
add
mov
popa
dec
pop
mov
add
cmp
imul
js
out
movsl
push
sub
and
push
pop
and
add
dec
ljmp
xor
add
cmp
pop
fadds
jo
or
or
hlt
mov
cmp
adc
adc
pusha
sub
ret
call
push
dec
push
std
nop
cmp
inc
icebp
push
cld
mov
leave
push
fidivrl
pop
aaa
popa
mov
rdpmc
push
pop
sub
and
or
cmp
enter
mov
xchg
xor
nop
sub
sahf
and
dec
pop
add
xchg
pusha
sti
loop
dec
sbb
xchg
repnz
cmpb
lahf
jmp
nop
sub
xor
adc
popf
push
mov
and
add
shrb
ret
adc
cmp
pop
mov
movsl
add
add
ljmp
sbb
and
scas
xchg
into
lods
xchg
mov
push
es
adc
cmp
or
mov
xor
xchg
and
sub
out
mov
add
jmp
fdivr
pop
sub
cmp
dec
and
push
sub
mov
daa
sbb
mov
push
jbe
sub
cmpsl
lods
jge
nop
out
test
fnsave
aaa
in
sbb
inc
sbb
push
jmp
ljmp
pop
mov
pop
mov
out
nop
sub
mov
fstps
mov
mov
push
sub
rcr
inc
popa
insb
in
and
scas
pop
aad
shlb
daa
lea
or
repz
xorb
movsl
ss
or
sti
pop
xor
push
mov
ret
addr16
mov
adc
add
and
stc
aam
or
or
jg
cmpsb
mov
sub
add
movsb
cmp
lods
add
int
sbb
insl
outsb
mov
xchg
push
adc
or
dec
adc
decb
push
add
dec
xchg
and
or
mov
sbb
push
leave
gs
inc
push
fstl
inc
enter
arpl
clc
and
dec
pop
cmpsb
adc
sub
dec
stc
dec
daa
add
mov
push
and
pop
add
out
shrb
icebp
sub
dec
push
out
loopne
loope
add
xchg
inc
lcall
add
ret
inc
inc
js
mov
push
xor
cld
repnz
jo
cmpsl
pop
mov
inc
push
or
push
mov
enter
cmp
and
outsl
mov
push
loop
push
jle
cmp
mov
mov
xchg
xor
lods
shl
fsubrp
bound
xor
push
es
sti
add
mov
push
push
mov
test
xchg
ss
xorb
mov
lret
test
popa
add
xorb
and
leave
sub
loope
nop
inc
pop
push
adc
enter
mov
or
add
sbb
add
rcl
add
pop
jp
cmp
push
xor
clc
cmp
or
int3
dec
mov
adc
add
jecxz
pushf
add
mov
and
outsl
or
cli
jg
int
mov
push
iret
insb
or
hlt
mov
sbb
add
mov
jo
ret
add
stc
popa
into
mov
mov
out
aam
imul
or
or
or
pop
xor
inc
mov
movsl
cmp
loop
mov
jmp
pop
sar
push
mov
xor
and
push
cwtl
icebp
sbb
add
jmp
jg
cli
add
pop
add
movsl
mov
lea
sbb
sub
sub
dec
scas
add
xchg
mov
or
popf
or
test
out
jmp
cmp
pop
mov
push
out
sbb
pop
test
out
subl
or
mov
pop
cld
pop
fnstsw
cmp
sbb
out
setle
mov
add
pop
dec
outsl
roll
pop
imul
sbb
gs
mov
cmp
popa
push
push
les
icebp
and
lock
ljmp
add
pop
xchg
mov
fwait
xor
xor
dec
mov
sub
xor
xor
das
dec
lea
and
mov
mov
sbb
gs
add
push
mov
pop
add
and
out
filds
sub
dec
add
lods
sbb
jns
add
lock
inc
dec
push
mov
dec
cmpl
sub
sbb
inc
push
fucomi
add
dec
push
pop
and
mov
dec
or
adc
fadds
mov
and
lcall
rclb
lret
dec
pop
and
inc
push
xchg
fsts
jmp
push
or
adc
cmp
rolb
cli
xor
push
sub
scas
mov
pop
stc
cmp
mov
nop
mov
adc
ret
cmpsb
cltd
jecxz
fsubrs
repnz
in
add
enter
xor
adcb
mov
xor
sbb
scas
jb
dec
cld
adc
data16
jmp
repnz
xor
stc
cmp
cld
xor
and
and
popf
loopne
lret
inc
fldl
enter
insl
ret
add
gs
add
fistl
cs
sub
js
mov
adc
mov
mov
cs
mov
sub
inc
pop
or
add
add
push
cmp
push
and
mov
xchg
and
add
test
inc
mov
aam
imul
lock
rolb
aaa
jno
ljmp
add
insl
pop
jmp
movsl
mov
loopne
repnz
push
mov
mov
and
add
add
ret
xor
ret
sub
mov
adc
dec
cld
lock
out
aas
xor
sub
mov
out
lret
fcmovbe
xchg
pushf
int
xor
jnp
pop
sbb
push
jns
xchg
mov
scas
sub
add
push
dec
add
or
pop
xchg
mov
or
cmp
pop
dec
push
jne
cmpsl
stc
sub
int3
pushf
out
popf
pop
pusha
sbbb
inc
dec
jae
adc
mov
push
sbb
movsb
iret
pop
mov
xor
push
mov
dec
xchg
jbe
dec
push
les
mov
mov
clc
cltd
or
and
mov
mov
int3
jno
and
hlt
inc
xor
push
stos
cmp
add
xor
add
mov
dec
pop
int
mov
add
mov
cmp
adc
mov
add
xlat
pop
lcall
test
dec
daa
or
pop
xchg
or
mov
jae
add
mov
xor
xchg
add
mov
or
mov
xlat
add
adc
mov
cmp
mov
repz
xor
lret
push
cld
shl
xlat
mov
add
imul
in
cs
pop
mov
imul
pop
dec
and
fcmovne
mov
in
push
popf
bound
leave
jp
repz
jae
pop
ficoms
mov
imul
xor
into
and
testl
inc
sub
call
push
addb
jo
mov
mov
or
ret
xchg
stos
es
cmp
adc
in
loop
iret
in
dec
int
mov
cmpl
mov
adc
xor
pop
add
rorb
push
xor
inc
test
pop
test
ffreep
sbb
pop
fst
adc
pop
fwait
or
sub
jle
mov
js
pop
sbb
enter
movsb
and
mov
js
inc
loopne
rcll
sub
pop
mov
or
xlat
repz
add
fcoms
add
loopne
inc
add
enter
xchg
out
cmp
out
mov
fists
rolb
xchg
cli
mov
hlt
sbb
add
mov
popa
pop
push
jo
sub
pop
inc
mov
cmp
and
dec
in
lret
icebp
mov
pop
int3
sti
inc
cmpsb
stc
inc
mov
test
and
mov
add
mov
jmp
mov
xor
xor
add
add
mov
push
pop
jge
xchg
je
inc
inc
js
gs
pop
imul
popa
jb
popa
inc
or
or
jae
sub
arpl
je
mov
clc
jae
data16
jb
fs
jbe
insb
cmc
jo
ja
mov
insb
lea
addr16
jecxz,pn
push
jns
jne
or
sbb
jo
jae
outsb
inc
push
push
dec
sub
jmp
js
inc
cmp
fs
jmp
or
clc
fisubl
ss
inc
push
filds
repz
push
inc
call
dec
cmova
push
push
loope
jb
decb
cmp
inc
repz
mov
xchg
and
outsl
sub
xor
jo
dec
push
dec
cmpsl
rdtsc
sbb
vmread
add
ss
sbb
push
sbb
addb
movb
inc
xchg
lds
and
mov
and
pop
jg
lods
sbb
push
xchg
xor
jo
adc
cltd
xor
xor
push
xor
or
sub
in
aas
outsl
and
and
sub
adc
daa
adc
mov
sbb
cmp
mov
fdivl
add
ret
pop
in
push
xor
sub
aam
orl
in
or
adc
dec
dec
test
xor
bound
push
adc
and
repnz
adc
and
dec
add
xchg
enter
cmp
cmp
xor
xor
nop
sub
sub
sbb
sub
adc
pop
xchg
pop
xlat
or
push
inc
and
sub
push
add
popf
mov
and
cmp
popf
xorb
cmpsl
in
add
inc
leave
pop
add
add
pop
pop
je
mov
pop
adcb
lods
movsl
add
out
int
push
jo
add
xchg
je
sbb
pop
pop
add
sub
mov
jp
aas
add
xor
jo
shl
call
and
rcrb
pop
pop
push
push
pop
cwtl
cmp
inc
add
pop
popa
add
cmp
add
push
sbb
insl
push
and
dec
imul
pop
adcb
dec
sub
call
leave
call
sub
add
jbe
add
dec
jmp
notb
dec
fdivl
adc
add
mov
jno
jl
dec
movsl
add
hlt
push
mov
inc
jno
andb
xchg
push
pop
test
sbb
adc
jp
jae
inc
cmp
ja
popf
enter
push
cld
dec
cmpsb
push
push
stos
jae
fs
and
mov
test
or
popa
dec
or
cmp
pop
push
inc
std
sbbl
popa
in
outsl
shll
push
xchg
sub
test
aam
jle
insb
ljmp
and
int
dec
loopne
xchg
push
push
inc
aaa
sub
push
mov
jg
outsb
rorb
mov
sbb
addl
push
sbb
sub
mov
add
pop
inc
ja
in
push
jbe
dec
add
movl
adc
xlat
jge
mov
popa
pop
xchg
loopne
adc
pushf
sbb
cli
add
push
lods
stos
out
jl
pop
push
jb
sbb
aad
lds
and
mov
je
sbb
sbb
sbb
jb
push
fs
mov
push
mov
xchg
add
dec
adc
and
cmp
loopne
inc
mov
lds
int
and
leave
jmp
add
mov
cmp
lret
inc
push
cmp
aam
shr
xor
adc
movb
gs
inc
adc
dec
xchg
loopne
mov
je
adc
data16
mov
jns
cmpsl
add
adc
mov
inc
ljmp
nop
sub
arpl
push
movd
fcoml
pop
imulb
rorb
sub
pop
lret
lea
xchg
bound
stos
dec
sbb
out
mov
pcmpeqd
xchg
loop
adc
jmp
fidivl
test
push
lods
pusha
aas
cli
xchg
pusha
and
shrb
pusha
inc
add
xor
xor
andl
mov
pusha
xlat
fcmovnb
add
inc
pusha
adc
in
icebp
inc
xor
cmp
and
add
lcall
movsb
and
sub
add
add
add
bound
sub
mov
sub
push
fs
shl
dec
dec
xor
sub
aam
pop
jg
adc
sysenter
movsl
mov
xchg
jns
sbb
cwtl
ss
or
inc
dec
nop
sbb
les
and
or
cmp
and
xchg
add
test
mov
lods
mov
mov
sbb
sbb
xchg
fmull
pusha
sbb
jge
imull
xor
aas
or
and
jo
pusha
jbe
iret
fbstp
push
lcall
mov
xor
dec
jl
cmp
xchg
dec
jnp
ficomps
add
adc
sbb
xor
and
add
loope
leave
add
fwait
push
cmpl
test
xorb
or
arpl
push
js
sbb
mov
leave
cmp
xor
lea
push
push
in
popa
addb
or
add
lahf
or
mov
cmp
jge
pushf
adc
pop
push
xor
mov
mov
add
xchg
mov
dec
cld
push
and
jns
add
or
sub
loop
mov
stos
fldcw
jbe
addb
pop
pop
rorb
subl
sbbb
mov
loop
or
and
arpl
sub
push
add
sbb
mov
or
ret
cmp
cs
nop
adc
add
ljmp
jae
pop
or
cltd
pusha
mov
add
out
xchg
fucomi
push
jge
or
outsb
jmp
inc
decl
pushf
fs
popa
xor
les
fwait
or
sub
pop
jns
add
addr16
in
sub
mov
movl
insb
mov
jno,pn
scas
add
stc
daa
subb
pushf
andl
cmp
xchg
mov
add
adc
call
inc
cltd
jl
pusha
jg
in
scas
push
push
std
fsubl
add
test
lahf
push
xchg
rcrb
and
pop
addr16
in
add
bound
enter
lahf
mov
and
push
xchg
add
jecxz
add
sub
inc
add
adc
sti
pop
pop
lcall
inc
jnp
add
rcll
mov
cmc
xor
test
mov
or
dec
adc
shlb
adc
lods
sbb
add
mov
stos
loop
and
inc
bound
mov
sbb
cli
cmp
sub
or
sbb
sub
push
sbb
cs
rol
inc
cmpsl
lods
pop
cmp
dec
pop
add
enter
mov
in
bound
mov
jne
sub
repnz
mov
pushf
or
cmp
hlt
xor
add
mov
js
mov
push
out
mov
inc
fdivs
cmp
pop
inc
fcoms
arpl
xor
adcl
cmp
and
popf
sbb
inc
add
shll
jo
sbb
push
adc
shrb
dec
pop
and
xchg
loopne
stos
lods
enter
fs
and
shrl
mov
sub
jecxz
movsb
stos
xor
loopne
sub
xchg
les
ss
insb
popf
cwtl
lock
imulb
add
cmp
cwtl
mov
jne
lea
movsl
add
sbb
in
pop
std
sub
add
cmp
outsl
inc
inc
add
xor
add
sbb
and
rolb
xor
or
fs
bound
sbb
ds
lock
ret
mov
inc
add
ds
xor
add
call
cmp
add
mov
pop
fwait
add
or
jmp
push
and
cmp
sbb
jge
pushf
rolb
add
in
sub
mov
adc
les
mov
mov
and
xchg
fcomps
and
dec
push
arpl
jg
pusha
out
mov
sbb
fsubrl
dec
lods
push
stos
repz
xor
xor
pusha
mov
shr
shr
pusha
aaa
add
lcall
int
sbb
out
push
es
and
mov
sbb
xchg
sbb
xchg
jg
roll
shlb
push
jl
or
int3
mov
pop
gs
adc
inc
or
cmpsl
cmp
mov
add
popf
push
push
sbb
sub
test
adc
addr16
or
test
mov
pop
enter
outsl
mov
add
sbb
leave
add
push
aas
dec
sub
dec
add
mov
in
add
jnp
int3
aaa
popa
jl
add
stc
pop
dec
sub
jmp
loope
rolb
sarl
in
es
out
mov
fcoms
sbb
jp
cmp
dec
icebp
push
mov
inc
mov
test
pop
cmp
xorb
mov
add
subb
sub
int3
inc
es
add
and
and
adc
pop
pop
sahf
cmp
cmpsl
ret
inc
and
jg
add
mul
or
pop
add
aad
mov
add
ja
pop
sbb
or
cmpl
mov
add
xchg
enter
add
cmp
dec
sbb
and
out
dec
mov
push
jae
pop
das
mov
pop
div
jge
sarb
in
clc
dec
scas
sbb
pop
xor
jge
and
push
sbb
cli
aad
outsl
jl
sarb
sub
add
jo
cmc
out
xor
add
or
add
inc
and
ret
adc
add
push
dec
mov
icebp
mov
jl
shlb
add
mov
mull
ja
pop
add
xchg
subb
add
loop
add
lret
inc
add
pushf
mov
add
xchg
sub
shlb
jae
mov
sbb
add
sub
push
add
stc
adc
add
rcll
mov
cmp
mov
fldcw
enter
repz
push
loope
sbb
loopne
daa
hlt
push
cmp
xchg
inc
and
jne
push
inc
push
pop
pop
outsl
push
inc
pop
fidivs
cmp
push
adc
out
add
stc
mov
or
inc
jne
fs
es
addl
orb
loop
lahf
push
mov
add
call
inc
add
mov
repnz
div
daa
push
or
ret
xor
cmp
push
decl
fcmovu
fdivs
mov
shll
dec
mov
sub
xor
ja,pt
call
repnz
cld
cmp
add
loopne
js
mov
add
mov
mov
mov
and
or
and
mov
sbbl
mov
movsb
cmp
jnp
add
xchg
out
push
mov
pop
cli
mov
add
xchg
pop
fwait
sub
test
call
leave
cmp
test
xchg
out
mov
pop
cli
aaa
add
subb
dec
push
fadd
add
push
add
ret
test
sbb
aaa
pop
lods
testl
cs
xchg
cmp
push
push
cli
or
and
in
sbbb
add
xor
insb
add
aam
inc
or
pop
inc
les
addb
repnz
fxtract
mov
adc
xor
adc
jae
push
cltd
test
adc
movsl
addb
add
push
xor
jmp
or
adc
rol
add
shlb
ficompl
inc
add
loope
in
add
cmc
les
and
pushf
sbb
stc
sbb
or
in
xchg
lret
jb
bound
push
cwtl
adc
pop
add
ss
sbb
sbb
cwtl
xor
dec
mov
push
insb
aam
add
test
pop
pusha
adc
ja
add
ljmp
add
mov
ffree
sbb
sub
add
mov
push
add
ds
out
imul
inc
fs
or
lea
mov
fcomip
add
add
adc
xor
stos
mov
adc
push
adc
mov
inc
repnz
je
out
pop
cwtl
jl
inc
add
mov
add
popl
out
or
mov
cmp
mov
pop
xor
divb
add
xor
cmp
inc
inc
test
enter
sbb
sbb
xchg
ljmp
add
in
cmp
sub
mov
sbb
fisttps
xor
push
cmpb
xor
mov
popf
subl
mov
inc
sbb
sar
adc
xchg
jbe
jne
add
cmp
push
push
mov
jle
clc
loop
shr
fidivrs
popf
add
pop
push
add
pop
ss
push
cmp
hlt
xchg
push
mov
sahf
cmp
mov
inc
cmc
jo
mov
fsubr
sub
sti
xor
dec
mov
or
add
cmpsl
push
pop
dec
ret
mov
inc
mov
push
loope
out
mov
rolb
fadd
lcall
jne
hlt
fwait
jae
add
ds
mov
mov
xorb
cmpsb
xor
shlb
in
daa
out
xchg
sbb
push
aaa
xchg
rcll
push
cwtl
adc
inc
jae
movsl
fs
add
inc
std
arpl
jne
pop
pop
je
dec
jg
shlb
in
pop
ja
sbb
fwait
test
sbb
enter
cmp
jbe
inc
sbb
fimull
mov
leave
sti
stos
sub
cld
jno
push
cmp
adc
add
push
add
call
cmpsl
add
ss
cmp
sbb
outsl
push
dec
push
mov
mov
inc
adc
call
mov
lds
add
mov
mov
test
scas
add
xchg
seta
sub
insl
imul
rcrb
fildl
fwait
mov
aam
testl
sbbb
roll
lods
mov
mov
dec
push
inc
test
adc
mov
shl
fwait
push
add
cmpl
add
popa
mov
jmp
es
inc
dec
ret
or
push
add
movsb
and
inc
pop
dec
push
add
push
inc
imull
inc
mov
xchg
mov
and
into
add
ds
loop
inc
bound
mov
lds
push
mov
outsl
mov
shrl
out
mov
adcb
sbb
add
das
cmp
adc
and
push
mov
sub
sbb
xchg
mov
dec
mov
inc
adc
je
add
movsl
mov
add
jle
mov
mov
add
dec
and
pop
and
add
fsubrp
mov
icebp
mov
int
add
test
movsb
add
xchg
push
pop
cli
jb
lret
stc
repnz
call
inc
add
les
iret
femms
adc
push
rorb
lds
push
dec
and
and
dec
mov
ss
into
jl
add
push
jmp
cwtl
or
lea
inc
sub
mov
cmp
fwait
push
lret
sub
leave
out
dec
mov
dec
sahf
sub
subb
jbe
pop
push
jmp
movsb
das
xchg
xor
ljmp
faddl
testb
push
sbb
cmp
out
pop
or
add
iret
cmp
inc
inc
scas
sbb
in
and
and
add
mov
xchg
cld
push
push
mov
adc
add
aam
mov
cmc
add
cli
stos
fisttpl
mov
jne
dec
les
pop
add
ds
jno
addb
sbbb
dec
and
test
pop
testb
add
jg
mov
and
loopne
xchg
imul
mov
jl
jl
mov
pushf
push
or
pop
jle
cwtl
les
test
cmpsl
cmp
add
movsb
clc
mov
leave
rorb
mov
xor
cmp
sarb
and
jno
add
mov
popa
addb
and
jp
dec
mov
stos
loopne
test
xor
push
mov
add
andl
sbb
and
fs
xorl
adc
dec
or
mov
imul
and
and
clc
adc
and
jb
add
xlat
push
mov
add
sbb
pusha
popf
cmp
inc
or
aas
clc
mov
imul
cmp
mov
jle
add
je
cmp
ljmp
add
pop
mov
cmp
jp
decl
in
xchg
mov
das
cbtw
add
call
out
add
mov
mov
adc
xor
movl
dec
in
mov
xor
movsb
test
add
add
mov
dec
sar
stc
push
add
icebp
ds
ljmp
push
std
stos
in
lods
das
xchg
push
pop
jns
pop
push
adc
pop
cmpsb
xor
add
dec
test
add
lods
and
rorb
adc
cli
movsb
in
pop
in
mov
cmc
mov
in
jp
arpl
adcl
mov
lret
add
outsl
lods
sub
ret
add
or
or
inc
test
add
push
sub
push
js
nop
mov
in
or
andl
clc
inc
out
ret
jge
add
lods
popl
in
mov
stc
icebp
cld
mov
xchg
sbb
xchg
movsb
mov
ja
outsl
leave
or
xchg
pop
sbbb
pusha
mov
or
add
pushf
xchg
cmp
ret
inc
testb
ret
adc
in
aas
and
cmp
mov
ljmp
push
pop
out
jno
or
add
stc
ss
mov
mov
mov
mov
imul
rolb
xchg
ror
mov
jae
xor
mov
mov
nop
push
xchg
cmp
rcl
lock
jle
add
or
pop
lods
fimuls
add
outsb
bound
pop
aad
adc
adcb
popa
sbb
cmpsl
xlat
add
pop
add
xchg
cltd
nop
leave
lahf
arpl
dec
inc
je
adc
data16
jo
loope
push
add
cmp
in
ds
insb
sbbb
or
ret
jo
add
jl
daa
push
pop
inc
mov
stos
cmpsl
icebp
mov
dec
add
negl
mov
add
cs
push
sbb
insb
push
data16
push
jg
xor
dec
lock
lea
fsubrp
repnz
mov
pusha
imul
negb
xchg
movsb
push
push
push
mov
cmp
outsl
pop
popa
je
push
cld
lds
push
sbb
fisubs
repnz
mov
adc
mov
mov
sub
sar
inc
or
add
sbb
insl
add
dec
inc
push
adc
lea
push
xor
scas
add
push
inc
jmp
fmuls
jmp
cmp
mov
aaa
sbb
into
sub
fucomip
xor
in
movsb
mov
stos
add
into
jbe
add
mov
fsubs
mov
rcl
jecxz
push
pop
adc
add
out
mov
in
and
dec
into
sbb
in
dec
loopne
shrb
add
lea
mov
icebp
stc
les
mov
rcrl
fistps
sbb
mov
mov
clc
push
lahf
mov
out
adc
out
inc
or
cmc
insl
je
xor
inc
xlat
lcall
add
leave
in
repz
aam
sbb
pop
cld
out
andb
fmul
xchg
push
test
repz
rorl
jp
test
std
pop
xchg
add
push
push
inc
stc
or
insl
test
fmulp
sbb
icebp
popa
push
adcl
scas
loope
jae
push
add
adc
jnp
xor
and
insl
in
pop
repnz
mov
testl
jl
xchg
and
sbb
loope
jp
mov
add
call
adc
pop
movsl
andb
rolb
data16
add
inc
in
adcb
aas
pop
xchg
add
shr
ret
add
push
sbb
pop
add
jnp
jecxz
stos
fs
add
pop
pop
mov
mov
or
and
lds
jo
ret
mov
fisubrl
incb
loope
call
scas
push
lock
xchg
imul
or
push
and
lods
out
repz
divb
test
xor
enter
cmpsb
iret
subb
sti
jns
sbb
adc
add
push
mov
sahf
add
std
push
outsb
cmp
add
jae
pop
mov
dec
dec
jecxz
add
je
sub
into
dec
add
jne
jb
add
je
int3
std
aam
sub
rcll
xor
pop
clc
xchg
cli
mov
inc
xchg
sbb
shrb
jle
add
inc
xchg
adc
xor
fidivs
mov
push
pop
dec
test
pop
frstor
jle
dec
out
test
xorb
in
pop
add
into
xchg
enter
jo
adc
add
inc
loopne
in
sbb
mov
sarb
sub
jnp
add
fdivs
and
cmpsb
imul
add
inc
push
loopne
loopne
push
adc
lds
dec
sbb
push
pop
add
push
jbe
inc
sub
hlt
loop
push
icebp
mov
dec
sbb
pop
cli
mov
pushf
sahf
mov
loopne
xchg
and
xor
sbb
xor
rorb
add
fstps
testb
jg
cmc
adc
movsb
pop
mov
fxch
addr16
xor
sub
jge
mov
lock
or
add
add
sbb
pop
fwait
sbb
out
lea
int3
and
mov
jno,pn
inc
cmp
fmuls
or
and
js
lods
mov
add
orb
push
lds
add
mov
fcomip
in
mov
dec
sub
cwtl
mov
add
mov
jl
xor
adc
mov
pop
sub
xchg
int3
inc
xchg
popf
cli
pop
pop
and
pop
filds
mov
aas
in
push
shll
mov
fadds
adc
or
cwtl
push
inc
cwtl
sarb
adc
adc
pop
ss
adcb
mov
add
push
aas
sbb
sub
mov
add
das
bound
push
fs
jge
inc
push
int3
jmp
inc
mov
addl
cltd
jbe
inc
xor
in
nop
push
xchg
push
dec
add
sub
xchg
stc
add
jns
jmp
or
mov
movsl
and
mov
lcall
add
inc
rolb
sub
aas
aam
in
jmp
lcall
add
mov
mov
sarl
sbb
shrl
movsl
push
loope
sub
cld
xor
dec
aaa
and
add
sbb
adc
add
int
xor
shll
jnp
dec
sub
insb
mov
adc
push
aas
incl
mov
jecxz
xchg
lea
lods
shrl
add
mov
rorb
lds
inc
movsl
push
sbb
dec
aam
pop
js
inc
lret
jecxz
repz
adc
add
or
pop
push
lods
pop
add
sbb
pop
jle
dec
lahf
daa
jl
inc
jo
push
xor
sbb
sbb
cmp
xor
mov
fidivrs
push
push
and
pop
cmpsl
add
adc
aaa
lock
push
shlb
pop
ret
pop
andb
sbb
cs
inc
hlt
movsb
fwait
and
cmp
imul
or
mov
test
sbb
or
daa
or
jp
add
arpl
jge
cmp
out
ds
and
and
xchg
mov
js
add
lcall
loopne
sbb
sbb
inc
jo
cmp
ljmp
pop
incb
popa
push
inc
mov
arpl
lock
lods
out
addb
aaa
in
insb
sub
mov
repnz
test
add
jl
xchg
pushf
add
cwtl
or
or
push
enter
push
sbb
rolb
pop
dec
test
iret
shl
cs
pop
gs
loop
mov
add
test
sub
rorb
mov
in
sub
pop
pop
lock
and
je
mov
sarb
sub
add
inc
pop
or
scas
shl
mov
add
aaa
xchg
es
cmpl
inc
stos
add
jo
lods
add
aad
inc
cmc
imul
test
out
nop
jne
je
movsl
adc
aam
add
les
xchg
and
pop
adc
in
jge
sbb
and
jg
pop
mov
loopne
aas
push
add
hlt
inc
lea
add
push
test
add
movsl
mov
shll
inc
decb
pusha
sbb
xchg
imul
or
fdivl
jecxz
dec
stos
popa
pop
or
aam
push
jl
and
push
sbb
fidivl
jle
or
sarb
icebp
pop
outsb
shl
cwtl
inc
and
out
loop
push
sub
pop
sub
push
movq
fmuls
dec
sti
daa
xchg
xchg
pusha
or
push
dec
mov
outsb
add
popf
mov
bound
sarb
jp
or
or
sarl
mov
shlb
loopne
cmp
mov
xchg
xlat
pop
push
cmp
mov
cmp
insb
xor
push
dec
loopne
sbbb
push
subb
jnp
rolb
scas
mov
jo
pusha
leave
xor
push
pop
es
dec
sub
cmp
pop
dec
pop
repnz
mov
mov
imul
add
adc
nop
popf
sbb
in
add
inc
mov
add
mov
gs
pop
loope
in
enter
cmp
int
mov
dec
fcomps
je
add
popf
mov
andb
rcr
pop
lahf
sbb
push
add
ret
and
mov
sbb
add
jl
pushf
xchg
popa
inc
and
add
shll
stos
or
xchg
nop
mov
js
xlat
and
pop
les
test
test
add
inc
out
adc
scas
and
sbb
inc
dec
into
dec
pop
inc
sbb
rcll
xor
mov
mov
and
fsts
pop
adc
std
inc
fmull
and
mov
push
inc
mov
sub
mov
xchg
mov
arpl
pop
fsts
adc
mov
mov
ljmp
rcll
adc
mov
scas
ds
incl
dec
cmp
sub
add
loopew
xchg
fidivrl
int3
or
cmpb
cmpsl
loope
mov
jp
sub
je
outsb
add
pop
ja
xchg
pop
call
mov
sbb
dec
and
ret
dec
mov
fcomps
cmp
add
xor
cmp
or
dec
scas
in
int
in
les
xchg
ret
or
nop
gs
fs
jle
adc
je
add
xchg
dec
mov
fisubrl
cwtl
pop
loopne
sub
pusha
xor
dec
push
fnsave
mov
aam
stos
dec
mov
lods
lcall
sub
adc
dec
data16
add
jns
mov
and
add
mov
icebp
add
setb
sbb
mov
add
mov
sub
repnz
xor
cmp
mov
js
push
pop
adc
call
mov
fldt
xchg
ds
jl
pusha
push
je
inc
test
repnz
xor
into
fsubs
push
jo
pop
arpl
add
fdivrs
in
in
leave
add
or
and
add
inc
cmp
inc
sbb
cli
xor
enter
push
add
jae
cmp
inc
fsubrl
pop
lret
ds
sub
inc
movsb
xchg
in
jge
sbb
push
adc
shlb
ret
sbb
sbb
roll
out
push
lret
daa
sub
addr16
faddl
test
sbb
cmc
out
add
shll
mov
in
cmp
sub
std
mov
mov
arpl
dec
add
into
addl
fadds
xor
popa
repz
add
push
and
in
arpl
mov
pop
bound
and
cld
fbld
sarl
movsl
jno
add
mov
loopne
jnp
fmuls
sub
or
mov
sbb
movsb
faddl
mov
insb
and
mov
push
cmp
add
sub
inc
or
push
xchg
and
inc
adc
lea
fnop
addr16
ret
test
and
enter
addr16
rcrb
add
fsubr
and
add
xchg
and
in
add
out
sahf
mov
sarb
clc
push
aas
add
inc
cmp
pop
jb
jmp
add
or
fstpt
insb
mov
pop
or
xor
sarb
sub
sub
adc
data16
push
pop
out
cs
and
inc
xor
js
cmp
xchg
xchg
mov
lret
add
or
mov
pop
shrb
rclb
mov
cmpsb
ss
cltd
dec
add
into
lock
aaa
ds
mov
sub
cmpsl
ret
jb
imul
clc
fsubrs
sbb
daa
out
inc
sbb
add
fwait
les
push
xor
in
aaa
jb
dec
inc
shr
dec
pop
add
mov
add
gs
add
mov
pop
aas
fadds
notb
loopne
repz
leave
push
dec
xor
jp
orb
xchg
fdivs
adc
xlat
stos
pop
mov
lods
pop
xor
mov
cmp
outsl
es
push
pop
call
jmp
xor
lock
xor
adc
push
pop
lret
sbb
xlat
inc
lcall
ja
nop
jge
mov
jecxz
mov
call
in
jo
insb
adc
arpl
and
cmp
mov
or
sub
test
call
add
pusha
xchg
movl
jg
lret
cmp
add
xchg
add
out
sar
add
mov
cwtl
test
mov
popa
jb
stos
add
lock
sbb
or
push
arpl
push
popf
loope
lock
jne
push
cmp
aam
adcb
xchg
and
cmpl
mov
icebp
jg
shl
sub
and
loop
mov
push
jns
lea
loopne
aad
decl
add
add
sbb
jbe
cmp
add
inc
ficoml
xchg
aam
cltd
sti
imul
nop
lret
push
ret
add
adc
inc
pop
stos
jns
add
push
enter
dec
roll
aaa
in
sahf
jle
jno
add
lahf
fsubs
dec
ss
ja
adc
jmp
sar
xchg
test
or
inc
inc
in
mov
cld
clc
mov
dec
bound
push
gs
inc
mov
mov
testl
pop
aaa
mov
sub
xor
loope
or
jle
jge
inc
js
shrl
add
add
mov
aam
test
add
je
fldl
daa
aam
and
addr16
inc
add
adc
jecxz
inc
sbb
call
mov
adc
pusha
or
dec
cmp
mov
push
sub
data16
mov
cmp
call
shrl
inc
or
sarb
push
or
dec
ficoms
push
push
add
cli
xor
lock
push
ret
rolb
sub
cmp
cmpb
mov
mov
repz
sarb
lock
fsubrs
adc
cmp
roll
repz
mov
scas
or
and
movsb
jnp
add
push
sub
add
sbb
add
gs
sbb
pushf
add
xchg
pop
sub
cmpsl
sub
add
xlat
enter
adc
add
mov
mov
jl
sub
mov
mov
and
fwait
mov
les
adc
cmp
data16
rcr
insb
xchg
loopne
adc
pop
int
adc
xchg
mov
stc
outsb
xchg
cmp
push
pop
xchg
ljmp
mov
mov
adc
loope
dec
lods
cltd
mov
ret
fwait
or
rclb
inc
cmp
push
ja
mov
aam
add
shl
dec
pop
loop
add
mov
mov
or
xchg
sbb
sbb
movsb
notb
mov
push
and
and
add
leave
data16
out
outsb
add
jbe
mov
add
sub
sbb
mov
cmc
sti
mov
sbb
xor
out
dec
adc
call
sbb
add
push
cltd
leave
jne
xchg
mov
add
push
mov
mov
sbb
pop
jmp
jnp
mov
enter
ss
scas
adc
test
cmp
xchg
push
enter
and
jno
adc
and
mov
xchg
shlb
imul
jns
out
add
adc
jb
add
pop
mov
ja
movsl
add
popa
push
mov
mov
xchg
into
xchg
add
and
mov
int3
jge
dec
sub
xchg
loop
add
pop
and
add
decb
nop
jno
xchg
push
repz
pusha
add
str
xchg
jns
mov
sub
imul
and
insl
enter
mov
fcomps
adc
xchg
sbb
push
mov
sub
cmpsb
mov
jp
add
xor
je
xchg
gs
call
hlt
cmp
add
rcll
pusha
imul
add
out
lock
push
jmp
mov
mov
add
das
mov
sub
xchg
out
pusha
sbb
repz
pop
inc
inc
or
frstor
mov
and
cmp
jns
jge
sti
fisttpll
int
or
shrb
pop
sub
and
mov
add
xchg
fnstsw
aam
test
outsb
std
fsubr
fwait
add
inc
test
xchg
and
pop
mov
and
jecxz
shrb
add
shr
gs
jo
jae
add
mov
mov
pushl
repnz
push
cmpsl
lahf
sbbl
and
aad
int3
pop
jle
jo
add
push
call
adc
js
xacquire
push
les
inc
cmpsl
pusha
fcomps
add
fcoms
fldl
out
adc
aaa
add
loope
cmc
add
pusha
in
bsf
icebp
nop
adc
push
in
fiaddl
mov
add
out
clc
lea
jb
sub
pop
aas
or
cld
add
inc
out
mov
lock
and
test
sbbb
push
roll
and
ds
sub
mov
enter
jge
out
lcall
xchg
cmpsl
inc
aam
and
out
ljmp
dec
and
add
cmp
shr
mov
cmpsb
loopne
add
subl
jmp
sub
jl
jo
add
stc
fldt
add
xchg
push
mov
fadd
pushl
xor
adcb
jmp
or
xor
aas
xchg
bound
adcb
sarb
add
jnp
outsl
aad
sub
pusha
adc
in
hlt
add
out
es
mov
lcall
mov
ss
xchg
fiaddl
repz
push
pop
add
mov
outsl
std
adc
cld
jb
sti
xchg
mov
loope
and
mul
mov
mov
call
aaa
test
adc
aas
shrl
jmp
les
add
or
lcall
add
out
push
sub
add
push
xchg
shrb
and
ss
inc
mov
arpl
shlb
mov
scas
enter
ljmp
or
das
push
add
ret
lods
push
cmp
pop
push
fiadds
or
clc
out
mov
inc
mov
push
arpl
subb
cmpsl
in
in
xor
adc
push
lret
dec
pop
aaa
xchg
xlat
ret
add
cmc
or
fisubrl
scas
sub
roll
xorl
add
addr16
nop
test
call
dec
shrl
pop
xchg
add
clc
push
mov
fcomi
lret
cmp
stos
movsb
jnp
psraw
xor
insl
mov
adc
test
std
pop
inc
add
insb
mov
mov
jecxz
jl
jne
mov
scas
adc
dec
ret
sub
add
dec
jmp
add
aam
push
cmp
mov
xor
jp
sub
push
or
mov
add
sub
sarb
mov
pop
data16
fsts
test
xchg
sub
mov
xlat
sub
sahf
mov
test
jno
jb
test
sbb
cmp
insb
in
push
aam
addl
sbb
aad
icebp
add
mov
out
mov
xchg
cltd
add
push
add
loop
sub
shll
mov
jle
inc
fimull
movsl
xchg
mov
push
loopne
aas
mov
mov
add
loope
loopne
inc
xor
mov
adc
mov
or
loopne
rol
add
sahf
mov
repz
shlb
sub
fstpl
mov
or
lock
mov
inc
movsl
dec
or
andb
adc
mov
outsb
andl
pop
add
adc
loop
and
add
xor
xchg
mov
or
shr
jle
pusha
pop
shlb
subl
sbbb
push
inc
or
pop
lret
xchg
add
add
test
inc
pushf
jl
add
dec
pop
aam
sahf
mov
js
sbb
fildll
add
rolb
mov
jnp
es
fdivrl
and
test
add
inc
pop
sub
mov
pop
in
sbb
cltd
dec
add
ss
mov
or
aas
xchg
sub
add
inc
mov
stos
sbb
popa
rolb
pop
pop
cmp
mov
inc
filds
cmpsl
xchg
xchg
sbb
jp
mov
xor
les
and
push
into
loop
es
xor
jmp
mov
fdivrp
aad
lcall
test
inc
cmp
pop
xchg
push
fstl
jl
mov
jle
inc
rcl
cmpsl
push
and
shll
sub
or
bound
dec
cmpsb
test
stos
cmp
out
pop
push
mov
shrb
cmp
insb
mov
imul
jp
pop
call
ror
xor
push
add
loop
js
movb
add
les
jecxz
call
pop
outsl
cmp
mov
js
in
mov
push
pop
jmp
and
roll
add
mov
dec
jae
js
popf
add
cmp
mov
lret
fiaddl
jle
adc
loope
inc
pop
lds
lock
cmp
jp
or
lock
inc
outsb
loopne
mov
mov
add
ljmp
or
std
mov
jbe
pushf
xor
add
inc
push
push
inc
hlt
test
add
adc
push
flds
scas
jne
lds
xor
xchg
add
mov
mov
add
mov
and
cmp
icebp
xor
pop
cmpsb
add
sbbl
enter
push
mov
dec
mov
jnp
les
shll
aam
int3
mov
adcb
std
add
lahf
into
add
popf
mov
xchg
clc
out
push
add
or
out
clc
dec
or
cmp
xor
pop
jo
out
test
add
ds
or
jl
add
cmp
adc
dec
cmp
lods
pop
push
daa
aam
cmp
loopne
in
push
out
imul
jp
hlt
lds
add
mov
mov
cmpb
add
mov
loope
mov
cmp
add
sbb
add
mov
fucomip
in
cwtl
sub
add
and
xchg
inc
hlt
pop
loop
xchg
add
int3
mov
xor
push
inc
inc
hlt
lock
inc
xchg
and
test
lret
cltd
insl
pop
push
fdivs
sub
inc
xchg
xchg
mov
add
lahf
loop
add
cmp
dec
bound
fldl
xor
or
loope
cmpb
xchg
and
popa
dec
loopne
inc
cs
int
add
mov
cmp
add
sbb
add
mov
or
or
clc
inc
dec
aaa
cmp
leave
sbb
ss
jmp
fnstcw
add
aad
cld
loop
arpl
cmp
cmp
ja
mov
out
sub
jbe
das
xchg
add
pusha
pop
popa
add
stc
js
jae
jbe
dec
mov
adc
push
out
jmp
jle
or
popf
and
idivb
mov
shlb
xchg
aad
or
pop
inc
in
adcb
scas
lret
aaa
jno
int
push
dec
adc
inc
fwait
jl
call
adc
roll
and
and
popl
fcoms
xor
inc
push
dec
mov
movsl
or
push
shlb
jl
mov
cwtl
call
dec
adc
add
fdivr
imul
insl
cmp
loopne
pop
mov
popw
out
push
mov
js
add
inc
ret
clc
lea
add
rcrl
inc
pushf
dec
incl
cmpsl
and
mov
cmovns
jo
data16
sbb
addl
add
jb
fimuls
sahf
js
pop
mov
fst
add
dec
repz
js
jmp
insb
test
dec
bound
loopne
out
shll
sbb
jecxz
fs
outsb
push
lret
je
out
and
pushf
inc
jne
dec
pop
rolb
jmp
cmc
inc
fisttpl
add
inc
ljmp
add
daa
add
xor
and
movsl
sbb
shrb
ja
add
sub
fildl
mov
adc
jo
in
or
out
push
mov
pop
clc
xor
in
arpl
push
enter
cmp
inc
in
adc
aas
dec
adc
mov
int3
jno
mov
add
rol
out
add
cmp
add
add
push
test
cmp
test
dec
mov
push
xor
mov
aam
lods
add
subl
fistps
pop
out
sti
sbb
insb
jo
fcomps
add
int
push
mov
lods
cmp
imul
daa
add
jp
int
leave
sub
add
stc
jecxz
dec
or
add
sub
cmp
push
cmp
cmpb
jmp
add
jns
xchg
mov
sbb
repz
sub
in
cld
push
pusha
mov
xor
pusha
xchg
inc
jle
shll
xchg
inc
jno
add
dec
mov
mov
ja
inc
stos
sar
in
imul
hlt
rorb
adc
mov
sub
pop
xor
in
mov
push
add
in
ret
out
mov
jns
imul
cmc
push
popw
xchg
stc
add
pop
pushf
push
rorb
add
fs
div
dec
rorb
rcrb
gs
ret
addr16
test
mov
in
ret
pop
lret
and
adc
pop
aas
and
pop
pusha
xchg
pop
cwtl
scas
add
adc
negb
jmp
add
adc
xor
or
ljmp
rol
mov
xchg
add
mov
push
adc
adc
adc
testl
jle
jb
popl
mov
es
xchg
xlat
lret
lea
sub
push
jns
idivb
cli
inc
push
andb
add
lret
push
cwtl
dec
popf
or
push
dec
test
xchg
pop
xchg
add
gs
in
popl
sub
lcall
mov
push
pop
inc
roll
idivb
fldl
mov
cmp
enter
or
test
nop
outsb
add
lea
mov
mov
add
cmpsl
aam
add
ret
sbb
lret
cmp
shrb
jl
add
or
lods
inc
jne
cmp
add
lret
in
adc
add
push
xor
mov
add
add
mov
arpl
adc
add
mov
mov
fcmovne
add
insb
mov
add
add
in
sarb
push
imul
pushf
and
inc
push
aad
aam
out
jno
jg
cmpsl
dec
mov
faddl
inc
sbb
cmp
je
popa
mov
sbb
iret
test
icebp
sub
test
mov
pusha
add
add
cmp
pinsrw
sahf
push
aad
adc
movsb
add
in
jno
test
xor
fldl
sub
clc
jecxz
add
mov
aam
icebp
ljmp
cmp
imul
icebp
iret
xor
es
lock
fimull
vmovss
sbb
in
inc
push
add
dec
lods
pop
xor
clc
rolb
aaa
addr16
ror
popa
cmp
lds
ja
sbb
or
cli
sar
cmp
cwtl
add
pop
sub
aaa
sub
sbb
pop
sbb
into
add
sbb
jmp
shll
add
dec
sbb
cltd
fcomps
xor
push
int
out
jmp
divl
jnp
and
sbb
add
dec
add
lock
pop
sti
nop
push
pop
lds
xchg
mov
cld
dec
sbb
add
movsb
ja
lcall
mov
push
js
xchg
addb
pop
dec
test
push
cmp
push
adc
inc
movsb
mov
add
and
stos
mov
mov
or
push
bound
pop
jp
out
lcall
mov
add
clc
popf
neg
test
ud2
daa
movsl
pop
sbb
enter
sub
clc
or
xchg
mov
or
xorps
fcomps
ljmp
add
cmpsb
arpl
or
sub
cmp
or
dec
in
push
adc
mov
xlat
jae
mov
je
add
add
leave
out
fcomip
push
nop
adc
mov
ds
sbb
lock
push
adc
dec
ss
add
cmp
mov
pop
mov
sub
fiaddl
loop
pop
and
into
pop
mov
test
icebp
push
xchg
data16
mov
cmp
orb
jnp
mov
push
aaa
pop
daa
sbb
loope
dec
dec
test
xor
push
add
test
sbb
sbb
mov
les
test
pop
lret
movsb
adc
stos
es
xchg
or
je
loope
daa
pusha
or
xor
sub
ret
mov
mov
or
xor
leave
loopne
xchg
dec
add
and
das
stos
arpl
imul
jae
push
enter
sar
inc
arpl
pop
int
shlb
jo
jle
and
outsb
inc
js
or
dec
mov
mov
push
mov
mov
addl
mov
test
push
mov
mov
js
add
push
push
pusha
adc
into
icebp
fdivp
cld
jo
ds
push
psadbw
fstp
add
pushf
jnp
fiaddl
xchg
xlat
ss
cmpsb
pushf
mov
mulb
jle
mov
lds
or
addl
mov
sub
mov
movq
adc
pop
addl
js
xchg
call
pop
out
sbb
mov
push
ficoml
mov
in
cmpsb
inc
paddq
fists
mov
ja
cmp
std
aas
jo
pop
or
lds
lcall
push
and
mov
jle
push
arpl
pop
adc
in
push
pop
bound
dec
dec
je
add
mov
add
inc
stos
cmpsl
xchg
test
sbbb
jge
bnd
testl
lods
je
pop
outsl
aad
cwtl
pop
sbb
out
nop
or
dec
lahf
sti
push
mov
ss
test
sarb
jo
mov
call
pusha
leave
adc
xor
cmpsb
test
or
test
int3
lds
jno
sbb
add
mov
mov
cmpsb
mov
mov
push
int
push
fbld
dec
addl
mov
pop
popa
mov
add
inc
mov
cmc
xor
add
cli
cs
add
mov
xchg
add
arpl
adc
pop
adc
xchg
jmp
frstor
adc
call
or
fidivs
jg
add
xor
je
loop
int3
inc
mov
and
xchg
sbb
xchg
sbb
mov
add
pop
inc
or
xchg
shlb
cld
lds
ljmp
popl
leave
or
push
add
xlat
cld
in
sbb
fstl
pusha
push
adc
ret
pushf
adc
es
jb
int3
in
incb
jp
adc
pop
mov
adc
pop
adcb
sub
ret
push
rcr
cmpsl
add
inc
and
cmp
rorl
or
pop
push
pop
inc
and
mov
cli
or
ljmpw
sub
pop
cmpsb
ret
lret
lcall
add
in
cmp
mov
sub
ret
jbe,pt
mov
pop
lret
mov
jp
xchg
in
fs
add
dec
scas
adc
jmp
les
sahf
add
iret
dec
adc
rorb
sbb
ud2
pop
push
mov
mov
hlt
mov
dec
sub
inc
adc
loope
sbb
out
ret
xor
push
shrl
xchg
pop
lds
add
mov
shlb
add
stos
mov
loopne
pop
add
mov
pop
pop
pusha
imul
leave
sub
or
test
sub
int3
mov
pushf
xchg
mov
aam
or
jl
stc
lock
mov
test
lock
les
fucom
pop
outsl
jbe
cmc
inc
add
xchg
dec
arpl
sahf
adc
xchg
movsl
fsubrs
push
in
sti
int
mov
dec
inc
cld
into
add
xlat
pop
ljmp
cmp
xor
xor
pop
sub
cmp
jnp
add
pop
mull
xchg
lret
cs
add
enter
fsubrs
or
fiadds
sub
js
xorl
adc
test
insb
add
dec
negb
add
mov
mov
out
add
xchg
stos
mov
rol
addr16
popa
or
insb
lock
add
mov
jl
push
pop
inc
sbb
add
xor
ss
add
inc
shlb
idivb
and
pop
stos
jne
out
add
sub
test
bound
add
cmp
mov
add
fbld
sarl
cld
add
mov
test
pop
inc
lods
jle
mov
dec
imul
add
mov
shlb
mov
inc
dec
mov
jle
pusha
push
movsl
and
add
or
mov
fists
xchg
in
clflush
and
das
jp
fnsave
add
fs
and
sub
out
ret
add
inc
xchg
lods
or
add
scas
les
xor
jno
cmp
xor
or
mov
fadds
ss
scas
es
sub
sbb
cmpsb
and
cmp
stc
xor
inc
in
rorl
fidivl
or
or
mov
sub
dec
xor
out
int3
pop
and
cmp
stos
adc
lret
pop
in
cltd
jmp
inc
mov
sbb
inc
je
mov
aam
add
pushf
loop
lock
hlt
and
mov
cmp
out
aaa
or
mov
lahf
mov
in
and
fwait
push
mov
sub
sbb
or
lcall
xchg
mov
cmpsl
inc
add
mov
dec
cmp
call
sbbb
int3
outsb
sbb
sub
les
jmp
addb
sub
ljmp
in
orb
adc
xchg
xor
out
mov
add
iret
jmp
pop
lret
fwait
pop
xchg
xchg
js
aam
push
cmp
dec
push
push
jns
sub
outsl
and
ljmp
sbb
inc
vmovss
xchg
add
xor
je
pop
sub
add
js
ds
leave
daa
pusha
sbb
scas
test
xchg
sub
xor
fnstenv
xchg
push
pop
call
loopne
bound
lock
mov
or
pusha
jle
inc
popf
dec
outsb
add
lahf
sarb
imul
sub
insb
repz
mov
xor
pop
xchg
aam
jecxz
xchg
adcb
scas
andb
pop
loop
hlt
popa
int3
pusha
push
mov
cmp
in
iret
jnp
mov
orb
ss
ljmp
mov
outsl
mov
cwtl
decb
mov
jge
pop
rolb
aaa
movsb
int
js
shll
loope
lret
repnz
mov
mov
std
ret
je
mov
cmpl
imul
in
shlb
pushl
add
dec
sarl
add
ror
or
push
leave
fmuls
mov
out
lock
syscall
aas
xchg
jne
lahf
stc
sarb
cmp
mov
rcl
loopne
xor
dec
cmp
cmc
mov
add
mov
call
add
or
push
sahf
push
xchg
aam
dec
nop
nop
mov
ret
hlt
icebp
push
shrl
add
sahf
imul
subl
dec
aam
push
leave
lods
int3
test
shlb
push
addb
imul
push
insl
lea
leave
add
imul
aaa
adc
nop
pop
adcl
xor
jecxz
nop
jns
andb
ret
mov
sbb
xchg
jbe
lcall
popa
add
mov
mov
add
test
lods
ljmp
sub
jnp
out
xchg
add
mov
mov
push
data16
pop
pop
mov
loopne
lea
push
xor
push
loope
sub
gs
jb
mov
lock
test
or
inc
lock
test
ret
out
and
cmp
cmp
div
cwtl
lods
adc
mov
fldcw
cmp
xor
scas
dec
fs
mov
loopne
rcrl
add
xchg
out
fmuls
scas
test
push
out
iret
out
push
push
lcall
loop
add
hlt
push
pushf
jb
add
push
movsb
outsb
out
cmp
fistps
roll
pop
int3
sbb
push
in
add
push
lods
bound
push
dec
cmp
cmp
pop
sub
jmp
add
cs
pop
or
mov
mov
stos
dec
mov
mov
add
cld
jnp
iret
stos
ret
or
imul
jmp
dec
mov
lret
add
pushf
nop
push
add
movsb
or
sbb
test
das
gs
push
sbb
pop
push
mov
add
scas
cli
inc
dec
jmp
orb
dec
mov
add
inc
dec
bound
stos
cmovbe
loopne
push
sub
jne
add
cltd
xorb
xchg
fiaddl
jecxz
jb
jl
rolb
or
add
stc
jb
cmp
sub
adc
and
cs
fdivrs
outsl
mov
enter
pop
or
std
dec
and
fcomi
addr16
cld
mov
fwait
add
mov
sbb
cmp
insl
or
cltd
pop
sarb
pushf
imul
outsb
jae
xor
mov
and
add
into
cs
mov
repz
push
inc
add
les
jp
or
les
or
mov
xor
xchg
int
push
loop
insb
inc
ret
sbb
dec
cmc
fnstsw
sbb
xchg
mov
push
or
push
mov
fmulp
jg
push
bound
dec
or
or
dec
jo,pt
sbb
js
sbb
sbb
adc
pop
shl
dec
mov
or
xchg
pop
mov
mov
add
pop
movsb
or
dec
dec
mov
comiss
pop
sbb
adc
or
mov
leave
jne
in
ljmp
pop
xchg
js
add
lahf
xchg
mov
sub
adc
je
shr
lods
xlat
sbb
jo
push
sub
pushf
add
mov
sbb
jge
pushf
jno
add
inc
pop
mov
out
or
jmp
or
sbb
lahf
jo
cmpsl
mov
out
nop
add
mov
out
fnstcw
cmpsb
int3
jo
loope
add
and
lahf
push
xchg
push
push
sbb
clc
test
push
dec
lret
test
mov
jg
and
cmp
jo
add
mov
sti
adc
add
xlat
out
jb
cltd
pop
out
xor
xchg
add
leave
lock
or
movsb
add
and
sub
test
mov
xorb
cmp
cld
add
pop
notb
in
daa
mov
call
mov
scas
add
jmp
clc
int
in
jbe
push
stos
xor
scas
mov
shlb
sti
add
daa
out
add
pop
push
push
cmpxchg
ret
mov
mov
loop
add
sbb
add
icebp
or
movsb
push
test
add
pop
mov
mov
repnz
nop
add
cld
inc
mov
xchg
push
lea
push
push
jg
add
icebp
jl
pop
aaa
mov
inc
fs
mov
popw
jmp
and
add
jnp
xchg
pop
pop
das
jne
mov
push
cmpsl
push
mov
loopne
pop
cmc
add
call
pop
out
mov
jbe
add
mov
mov
xor
pusha
cwtl
push
push
sahf
mov
or
stos
jno
add
int
push
fistpll
shl
shll
xchg
dec
add
add
sbb
aam
cs
sub
cwtl
xor
inc
loop
hlt
enter
sub
test
mov
mov
adc
add
sbb
fwait
inc
or
adcb
add
sbb
sbb
daa
inc
pusha
fnstenv
add
outsl
pop
loop
xor
cmp
add
rclb
add
cmp
sub
mov
shr
nop
cmp
imul
push
idivb
fisttpll
push
jg
subb
push
lock
sub
pop
inc
push
pusha
or
xlat
or
sbb
sub
mov
add
aam
dec
pop
mov
or
lods
lods
addl
shlb
and
mov
add
movsb
into
daa
and
push
loope
outsb
mov
aaa
add
or
sbb
scas
mov
sub
fisubs
pop
xchg
push
rcrl
add
add
in
imul
int
jecxz
cmp
add
xorl
nop
inc
sbb
rolb
and
popf
push
shll
push
addl
pop
xchg
mov
enter
or
test
aas
call
xor
ret
jno
sub
fiadds
loope
xor
sub
lea
xor
arpl
shlb
push
xchg
add
sbb
mov
addl
pop
jecxz
sti
es
pop
dec
inc
and
jl
xor
jg
and
xor
push
add
xorl
mov
jno
cmp
hlt
lret
popa
and
jge
mov
add
pop
cwtl
mov
add
adc
clc
mov
lcall
sbbl
add
pop
and
loop
int
add
jle,pt
pop
jns
and
jl
add
int
call
dec
divl
add
xchg
cs
push
les
std
pop
lcall
sbb
fsubp
dec
fiaddl
sbb
cmpsl
into
scas
dec
insb
add
or
mov
add
cmpsb
add
insb
dec
daa
mov
lock
cld
sbb
jnp
push
or
mov
add
daa
xchg
call
pop
clc
jo
jo
add
push
inc
or
gs
hlt
inc
pop
mov
js
xchg
cli
mov
and
or
mov
add
ja
dec
lret
xor
add
idiv
js
mov
popf
faddl
outsb
xchg
mov
mov
sbb
cli
push
sbb
or
lods
mov
fcoms
cld
test
push
xchg
cmc
dec
call
sysret
sbb
inc
sub
and
mov
or
clc
xor
cmp
mov
cmp
bound
shlb
push
clc
and
movsl
mov
out
xor
add
mov
xchg
lret
or
leave
jne
mov
cmpb
add
mov
fmuls
in
add
into
hlt
mov
adc
add
int3
gs
add
out
add
cmpsb
pop
iret
adc
imul
inc
lcall
xorb
push
sbb
add
mov
mov
loope
dec
nop
pushf
add
enter
fists
jle
jo
pop
cld
inc
or
mov
mov
xchg
mov
add
cwtl
icebp
add
test
stc
jns
outsl
inc
sti
daa
pop
adc
mov
add
loopne
push
fsubr
pop
jnp
xchg
incl
nop
popa
inc
cmc
outsb
xlat
xchg
subb
push
jle
push
xor
mov
subb
clc
mov
loop
xlat
loopne
jne
push
shrl
pop
jns
add
andb
test
inc
mov
fistps
xchg
repnz
addb
pop
dec
or
cwtl
pop
lock
std
loopne
sbb
lcall
shl
add
cmp
mov
mov
pop
cmp
incb
roll
test
mov
sbb
shl
and
dec
add
test
pop
add
sbb
test
shrb
push
scas
imul
ss
loopne
sbb
sbb
lret
adc
je
sbb
stos
xchg
lret
xor
cs
and
sbb
jl
push
arpl
mov
call
xorb
cmp
movl
sbb
adc
call
mov
in
lock
pop
xor
data16
mov
cmp
aas
and
add
jb
cmp
sbb
add
in
cmpb
pusha
aad
cmp
add
les
imul
sub
xor
repz
jmp
clc
popa
ljmp
mov
test
adc
dec
push
cmp
xchg
addr16
xchg
add
das
sbb
lahf
fisubs
add
outsl
mov
andb
pop
filds
add
add
repnz
mov
mov
jb
xor
int3
arpl
or
xchg
and
mov
adc
sbb
dec
add
sbb
mov
imulb
adc
add
mov
or
repz
lods
sub
pop
cmp
dec
rolb
fwait
xor
push
pop
lea
push
lahf
push
psubd
adcb
sub
into
cmp
and
icebp
and
popa
xchg
clc
inc
test
loopne
mov
aad
emms
sbbb
sarl
shlb
cmp
pop
jl
cmp
inc
in
repz
lods
lcall
test
ret
push
out
rcl
add
push
ret
dec
and
fmul
outsb
add
lea
aad
cli
insb
ret
in
rol
ja
addb
jge
lea
sub
mov
mov
addb
int
sub
add
sbb
call
mov
ss
jo
jbe
js
stos
ds
jae
imul
hlt
pop
rolb
sub
dec
ljmp
mov
lods
lock
movsb
int
outsl
mov
or
cli
xchg
sarb
add
pop
adc
inc
lea
clc
aam
dec
js
add
xor
adcb
loop
mov
sub
fidivl
call
outsb
add
jae
mov
and
inc
cmp
xchg
jg
pusha
das
test
lods
jecxz
xor
dec
rolb
arpl
rcrb
mov
xchg
outsl
test
pop
fiaddl
mov
xor
cmp
xchg
mov
into
add
dec
ja
test
mov
andb
add
cs
mov
mov
sub
pmulhuw
repz
outsb
loopne
add
xchg
mov
pusha
push
rolb
pop
cmp
dec
xchg
mov
scas
sarb
xor
ljmp
sbb
mov
xor
mov
push
xchg
mov
add
pop
sub
fadds
dec
add
pop
push
pop
test
push
and
cmpsl
pop
inc
iret
dec
push
mov
adc
add
sub
and
cmp
mov
or
push
dec
out
repnz
add
and
cmovb
mov
xchg
adc
fcomp
int3
popa
add
push
sti
inc
rolb
jo
pop
fwait
inc
rcrb
daa
pop
mov
test
mov
dec
cmp
sti
sbb
faddl
sub
movsb
add
cwtl
mov
lea
mov
fwait
lock
lods
add
inc
xchg
fidivl
and
mov
lahf
pusha
jecxz
fdivrl
pop
cmc
xchg
insb
cmp
sub
mov
adc
sub
mov
inc
rcrl
inc
mov
cli
jae
add
leave
add
add
arpl
pop
inc
jge
repz
loop
hlt
inc
in
adc
repz
jecxz
pop
cmp
ret
adcb
pop
sbb
enter
es
popa
ret
int
or
mov
or
adc
outsb
rclb
push
mov
push
jl
es
les
lcall
aaa
pop
popf
jbe
lret
add
xor
sub
lret
or
dec
add
sbb
cmp
mov
bound
inc
jl
mov
clc
fbstp
xchg
add
scas
loop
repnz
dec
andb
sub
fadds
mov
sbb
je
popa
mov
test
loopne
or
mov
mov
inc
ret
xor
incb
push
sbb
or
pop
push
test
loopne
ficomps
xchg
jp
dec
dec
and
and
fdivs
xlat
xor
jle
call
aad
pop
sub
in
lock
mov
out
loop
rolb
and
mov
pop
arpl
xlat
or
cwtl
call
cmc
add
fidivl
test
aas
jg
adc
les
scas
push
add
idivb
jb
fstpt
jge
xor
aaa
loop
and
jl
pop
cmp
imul
leave
cmpsb
and
mov
lods
add
mov
cmpsb
push
outsl
inc
test
sub
pop
mov
adc
sar
adc
clc
and
imul
or
inc
xchg
mov
sub
mov
ss
nop
shlb
imul
aam
jns
sbb
fmul
xchg
jle
pop
push
sbb
lret
out
mov
add
int3
pop
jnp
repnz
popa
pop
adc
xor
es
popa
sbb
movsb
adc
insb
pop
in
push
and
or
inc
add
stos
ret
and
xor
inc
adc
sahf
insl
cltd
shll
test
pop
add
pop
xchg
lahf
sub
mov
push
xor
fisubs
mov
cmc
lret
add
push
xor
xchg
mov
js
pusha
and
cmc
aam
and
add
or
pusha
push
cmp
lret
xor
adc
cld
sub
mov
leave
add
ret
aam
popa
pusha
js
inc
dec
mov
xchg
add
pop
xor
pusha
pop
and
insl
dec
inc
cli
ret
jnp
jl
adc
inc
or
test
dec
shl
dec
cmpsl
inc
add
pop
pop
hlt
xlat
dec
ja
aaa
scas
pop
add
adc
sahf
test
lods
lds
dec
insb
dec
sbbb
xor
mov
add
aas
push
jge
mov
dec
cld
rorl
das
nop
push
inc
ret
mov
decl
in
adc
sarb
inc
cld
cld
call
xchg
sbb
pop
pop
xor
inc
in
add
out
lahf
dec
lds
xchg
fadds
pushf
push
jnp
dec
ret
rcr
pop
add
or
mov
xcrypt-ctr
cmpsl
sbb
lcall
stc
dec
inc
in
dec
int3
and
fcoms
sub
mov
or
clc
add
daa
cmp
loope
arpl
mov
adcb
mov
cmpb
adc
jge
dec
push
repz
mov
inc
push
dec
loope
add
adc
add
stos
sbb
adc
add
xor
xor
xchg
cmp
inc
call
mov
push
dec
stos
loop
xchg
icebp
adcb
mov
push
inc
pop
iret
aad
inc
sbb
mov
mov
jecxz
xor
add
xor
cli
or
cltd
add
insb
pop
mov
fcompp
xchg
enter
cmc
xchg
shlb
cmpsl
add
sub
push
adc
mov
inc
test
test
or
ficomps
sbb
cmc
jo
add
sbb
repz
ljmp
add
push
fsubrs
sub
mov
popa
add
repz
addr16
adc
fcom
int3
add
imul
movsb
jnp
pushf
or
sub
ja
cli
jl
push
pusha
pop
cmp
add
jne
rcrl
sar
fnstenv
jae
daa
mov
and
pop
sbb
out
inc
pop
and
loope
in
rclb
dec
mov
adc
aas
movsb
xchg
leave
add
inc
stc
imul
daa
jns
add
test
cmc
or
imul
nop
push
shl
mov
mov
cwtl
das
add
or
lock
pop
mov
jne
mov
rcrb
add
jne
pop
add
xchg
jns
in
imul
xchg
ss
jmp
repnz
popa
pop
add
add
mov
sarb
or
xor
pop
mov
enter
and
out
lahf
lock
int3
pop
push
add
pop
jecxz
call
or
aas
mov
xor
and
push
lahf
dec
repnz
loopne
jge
jne
add
sub
push
mov
rorb
out
add
jns
mov
test
jae
ljmp
sbb
cmp
stos
add
lock
dec
dec
mov
lds
and
in
sub
add
hlt
pop
sbb
sub
orb
shrl
icebp
hlt
adcl
sbb
xchg
loopne
or
out
jp
ds
push
dec
push
cmp
push
jns
adc
cs
add
scas
inc
xor
xor
movsl
push
adc
push
cmp
sub
sarb
pop
ljmp
rcr
push
ss
sub
inc
fcoms
cwtl
lock
cltd
test
fldcw
orb
lock
xchg
and
mov
add
out
jb
cmp
xchg
add
mov
leave
inc
or
or
adc
xchg
subb
jmp
jge
inc
pop
shr
lds
cld
cmpb
xchg
push
cltd
sbb
push
pop
ret
jl
xor
clc
jp
mov
rcll
push
rolb
lock
push
push
inc
pop
cmp
add
dec
xchg
push
test
push
push
mov
int
flds
in
dec
sahf
push
and
fstpt
jb
xlat
rcrb
and
ljmp
add
add
sub
adc
add
push
jns
jmp
adc
xchg
je
jae
inc
fstl
and
lock
sahf
xlat
jo
out
push
enter
nop
lret
cmp
scas
mov
inc
sub
xor
xor
je
push
lea
ret
mov
out
add
or
popa
lret
add
fucompp
cmpsb
add
rorb
popa
sar
pop
insb
clc
mov
sbb
sahf
sbb
loopne
iret
push
sarb
sub
mov
xor
cld
lods
shlb
and
les
pushf
in
outsb
addr16
es
lahf
add
mov
fdiv
shll
or
xlat
add
fdivp
repnz
add
fstps
pop
xor
xlat
roll
js
mov
test
push
clc
mov
jp
adcb
cmp
pop
jnp
sub
dec
jmp
dec
and
xchg
pop
push
cmc
popf
push
pop
ret
sbb
jbe
add
into
adc
jp
mov
cmpsl
mov
daa
jae
shll
test
adc
add
subl
push
and
shlb
scas
pop
push
iret
mov
cld
cli
jo
arpl
push
mov
pop
add
shl
icebp
mov
dec
pusha
fistpl
and
fdivrs
xor
hlt
add
in
rorb
pop
adcb
pop
imul
ret
fsubr
aad
xor
aaa
pop
sbb
jl
jns
daa
inc
rcr
sbb
inc
adc
js
xor
das
lret
inc
pop
cld
mov
sub
imul
addb
mov
test
adc
out
mov
mov
mov
loopne
fdivrl
mov
les
mov
add
sahf
cmp
and
cmp
push
out
xchg
mov
test
mov
inc
or
sahf
jge
and
mov
push
mov
and
mov
or
pop
cmp
stos
add
mov
and
add
lret
add
or
in
roll
movsb
loopne
loop
push
ret
mov
into
imul
insb
cmp
icebp
pop
pusha
push
outsl
rcrl
ret
or
inc
cli
es
add
test
ds
inc
jb
adc
movsl
movntps
jecxz
call
add
hlt
cmp
popf
push
pushf
daa
out
clc
rclb
fsubl
cld
cmp
sahf
push
popf
mov
rclb
popa
sub
mov
add
dec
ja
sbb
mov
xor
aad
out
add
ror
arpl
sub
push
push
rolb
adc
xchg
rclb
add
mov
cmp
inc
sarb
aam
in
lahf
mov
addr16
inc
lods
out
mov
mov
adc
outsl
push
orb
add
sbb
mov
mov
ds
cwtl
inc
pop
cmpsb
inc
test
clc
maxps
cs
test
cld
push
pop
xor
fmuls
dec
in
ret
in
adcl
mov
subb
sbb
pop
inc
push
int3
test
and
gs
or
add
pop
les
cmp
ja
andl
mov
mov
sbb
enter
adc
shl
test
cmp
cmp
jp
testl
outsl
push
add
cmpsl
lret
cmp
add
dec
fs
imul
mov
xor
jmp
push
xchg
aas
ret
sub
cwtl
stc
jge
add
jg
sub
mov
push
out
pop
xor
shll
mov
in
rolb
stos
mov
lret
add
ret
jle
shrb
rdtsc
xchg
stc
mov
popa
dec
xlat
pop
hlt
mov
cmp
mov
jb
add
aas
pop
cmp
mov
dec
adc
ret
shlb
add
add
cs
es
mov
and
add
out
xchg
inc
lahf
mov
add
jb
add
xor
imul
inc
xor
xor
push
inc
adcb
and
add
test
test
dec
push
jge
add
sahf
sbb
mov
inc
cmp
cmp
je
xchg
sti
push
hlt
dec
jge
or
je
add
mov
mov
insb
rcl
mov
add
inc
ja
xchg
push
xor
movsb
pop
push
dec
mov
es
xlat
push
movsl
sbb
mov
popf
fisubl
sti
push
add
push
lock
int
or
test
sbb
mov
loope
mov
adc
lock
nop
fwait
xchg
mov
shlb
xchg
sub
mov
pop
sub
int3
lcall
testb
pop
daa
pop
jp
and
repz
xor
inc
mov
shl
rorl
or
lods
sarb
hlt
das
and
sti
aad
stos
sub
test
pop
xchg
adc
and
add
dec
lock
jbe
add
je
aas
or
jle
adc
add
xor
int
test
mov
inc
rclb
cmp
dec
loope
mov
add
or
sub
seta
pop
dec
jb
or
mov
insl
sbb
push
stos
lods
push
pushf
int3
psubusw
das
inc
sub
cs
loope
and
add
mov
fdivrs
fs
loop
mov
or
sbb
push
scas
fmull
adc
outsb
add
clc
std
cmp
mov
sbb
cwtl
lret
add
fidivs
dec
fstl
inc
nop
rolb
xchg
sub
je
pop
lods
push
mov
arpl
pop
aas
and
lods
cmp
pop
jecxz
pop
dec
add
pop
nop
pushf
repnz
mov
lods
inc
jb
icebp
add
sub
sbb
pop
enter
xchg
sub
fwait
sbb
and
fsubrs
dec
push
adc
lods
rcll
mov
xor
call
adc
xor
dec
push
add
pop
pop
sub
inc
lock
out
scas
cmpsl
lods
in
or
je
pop
sbb
adc
xchg
xor
mov
push
push
push
mov
cmp
add
add
cwtl
ja
dec
int3
jnp
les
aas
insl
sbb
sbb
mov
rclb
clc
ss
das
push
imul
jmp
fstl
sub
addr16
pop
push
loop
clc
or
orl
add
xor
add
in
out
pusha
xchg
mov
add
adcb
lret
or
fisubrs
es
push
add
in
in
and
adc
dec
add
cwtl
call
add
and
and
cmpsb
dec
dec
test
push
mov
mov
push
and
cld
pushf
cli
sbbb
jge
pop
test
cmp
cld
cmpl
dec
xchg
roll
jmp
or
in
cmpsl
in
sbb
bound
ss
dec
add
outsl
push
or
repz
das
cmpsb
jg
add
xchg
push
outsb
xor
pop
mov
add
rorl
cmp
push
stos
or
sbb
jbe
lcall
push
jge
push
out
shlb
imul
sbb
cld
hlt
jb
popa
mov
pop
divl
lods
add
and
aad
xchg
enter
pop
leave
stc
sub
into
jne
fmul
adc
inc
movsb
arpl
mov
es
movsl
bsr
xchg
popf
cmp
add
mov
dec
pop
mov
sbb
pop
sarb
nop
mov
push
mov
jmp
loop
mov
add
push
in
dec
or
lods
adc
lock
daa
inc
add
in
mov
mov
mov
lods
add
and
sti
ret
adc
mov
dec
insb
mov
testl
loope
testb
hlt
rorb
mov
icebp
mov
sub
mov
sbb
cli
add
and
mov
int
aaa
imul
push
movsl
cmc
cmp
sbbb
jp
add
inc
add
mov
aad
in
jl
movsb
subb
pop
xor
lcall
add
dec
push
es
sub
adcb
cmp
aas
adc
sub
loopne
imul
inc
xchg
test
xchg
xor
push
lret
jne
push
sbb
add
mov
outsb
push
sub
clc
daa
addb
into
incl
mov
aam
hlt
and
xor
repz
pusha
movsl
xor
add
jmp
inc
shlb
add
or
pop
cmp
enter
xchg
cld
mov
add
mov
mov
movsl
loop
sbb
dec
xchg
push
aas
daa
and
cmp
inc
add
adcb
ljmp
jae
and
sub
cmp
pop
jnp
fists
jecxz,pt
dec
daa
stos
sbbb
iret
pusha
out
jbe
popf
into
xchg
xchg
lods
lret
mov
adc
and
push
inc
frstor
insl
hlt
add
mov
ret
cmp
nop
test
fcomp
push
add
add
cwtl
comiss
mov
loop
and
pop
and
fists
push
daa
fildl
sbb
aas
add
popf
mov
and
inc
push
fprem1
es
je
xor
push
test
push
xor
daa
dec
pusha
stos
in
lret
inc
mov
adc
ret
addb
mov
fisubl
xchg
fmuls
and
fldl
push
je
lea
xlat
in
push
add
sbb
aad
cwtl
and
fisttps
scas
scas
outsl
inc
mov
mov
or
arpl
cmp
mov
sub
out
jmp
sub
or
pusha
push
mov
aam
sub
mov
dec
pusha
mov
fwait
push
mov
enter
faddp
adc
popa
mov
xlat
xchg
push
mov
sbb
push
pop
add
cmpsl
fs
mov
fadds
lahf
mov
seto
std
jno
add
stc
mov
icebp
es
xchg
inc
jecxz
cwtl
push
push
test
xchg
in
xlat
and
lds
dec
call
add
fisttpl
add
loope
mov
aas
repz
adc
addb
dec
sub
fisttps
sbb
rcpps
stos
pop
lret
adc
sub
push
inc
int3
add
mov
mov
daa
ljmp
shlb
add
imul
dec
fdivrl
mov
fwait
add
out
rolb
cmpsl
cs
or
iret
and
sub
and
lahf
pop
sahf
lock
rcrb
fwait
test
add
xor
xchg
xor
jae
icebp
in
pushf
pusha
adc
xor
pop
mov
and
jo
dec
pop
mov
add
xor
dec
inc
jbe
jb
mov
xchg
fsubrs
adc
dec
mov
jg
add
movsl
lret
xlat
out
ja
ss
sti
xchg
scas
mov
adc
cwtl
sub
imul
push
data16
outsl
out
or
jo
lret
add
push
icebp
xchg
rorl
xchg
add
roll
pop
mov
add
testb
add
mov
mov
add
mov
bswap
or
xchg
sbb
enter
xchg
adc
add
xor
lret
cmc
dec
lods
imul
dec
jnp
mov
fwait
repz
or
inc
push
add
ret
cwtl
inc
push
jmp
push
pop
and
lcall
stos
add
mov
pushf
shll
adc
add
dec
fiaddl
sbb
push
sbb
jnp
push
repz
leave
add
cmpb
aam
dec
jge
fisubrs
xsave
pop
pusha
addb
sub
inc
fsubl
jg
fisubrl
mov
adc
dec
xor
pop
pop
push
mov
into
xor
mov
add
fistps
push
sbb
andl
xchg
in
jge
xor
sub
xlat
and
repz
ss
cmp
jno
hlt
sub
xor
lods
xchg
mov
or
or
sub
cmp
jle
mov
xchg
stc
pop
mov
les
sahf
ret
pop
add
mov
stos
fbstp
sbb
lods
mov
jmp
data16
decb
mov
cs
js
xlat
push
or
mov
jmp
xchg
repnz
sub
xchg
movaps
out
mov
in
or
or
cltd
test
and
xchg
push
add
mov
sub
adcl
lods
cwtl
data16
arpl
test
dec
mov
nop
je
adc
add
xor
xchg
shll
in
inc
shrb
push
popf
and
push
rcr
mov
push
add
cmp
adc
mov
sbb
or
add
daa
scas
push
adc
andb
and
sub
lcall
jg
cltd
or
dec
leave
fbld
in
add
cmpsl
sbb
xchg
add
xor
add
and
repnz
push
fsubs
lahf
shlb
das
pusha
jb
fbstp
mov
shrl
add
xor
out
push
lods
imul
aas
jne
cltd
fsubrs
push
lret
xchg
lds
fs
push
sbb
sbb
bound
mov
adc
sub
ret
repnz
adc
jg
mov
cmpsb
ret
in
incb
push
sub
sbb
dec
adc
sub
pushf
inc
add
jp
xchg
pop
jbe
fs
fld
nop
mov
inc
mov
loopne
or
push
sahf
mov
sub
xchg
pop
jg
bswap
fimuls
inc
arpl
out
fcmove
jnp
adc
push
or
inc
pop
mov
mov
xchg
pusha
cli
adc
test
sub
add
xor
mov
pop
add
mov
jl
and
nop
cmp
mov
ss
fs
add
sub
js
mov
jbe
sbb
sub
xor
adcl
fdivrs
adc
in
add
mov
sbb
jns
repz
cmp
out
add
sbb
nop
test
ss
inc
inc
jno
leave
sub
add
loopne
xor
and
xchg
dec
notl
xor
sbbb
add
add
sbbb
scas
fs
add
push
jae
cld
adc
sbb
and
lock
add
inc
mov
ret
shl
pop
cmp
or
jle
cltd
inc
sbb
dec
sbb
gs
cmp
pop
lods
test
sbb
adc
xchg
cld
or
adc
push
adc
stc
xor
sahf
inc
js
mov
push
jg
jmp
in
inc
mov
std
testl
cmc
cmp
test
sahf
inc
fdivrp
pop
sbb
add
dec
mov
scas
test
push
xor
loopne
shll
pop
mov
bound
and
loopne
sub
mov
ds
aad
out
xchg
subl
lcall
and
loope
popf
mov
lods
mov
ffreep
add
sub
iret
repz
xchg
sbb
add
sarl
add
int
repnz
jmp
pop
adc
cmp
add
aas
stc
pop
jno
rol
or
jge
sub
cmpb
add
repnz
and
or
ljmp
xor
xor
mov
add
in
xor
mov
cmp
imul
je
inc
add
lahf
or
out
or
cmp
movl
bound
cmpsb
lock
mov
stos
mov
add
loope
jg
adc
cmp
mov
out
inc
bound
adc
pop
jle
or
push
enter
jbe
pop
pop
ret
lods
loopne
xchg
dec
add
mov
add
frstor
shrb
add
add
and
mov
mov
cmp
mov
or
xchg
or
lret
sbb
loop
inc
add
push
jmp
imul
imul
insl
aam
pop
loop
ds
xor
loope
rcl
jno
out
push
int3
xor
or
call
lea
scas
aaa
icebp
sub
add
or
jp
lock
in
mov
cmp
and
adc
stos
push
rcrl
sub
sub
pusha
mov
push
add
mov
fdivrp
and
fstpl
in
rorw
rcrb
sub
push
test
scas
xor
rcrl
inc
jmp
cmp
pop
js
push
xchg
sbb
rep
add
mov
xchg
into
mov
adcb
add
cmpsb
jmp
sub
lret
dec
test
push
bound
fists
loopne
mov
or
xor
adc
inc
mov
pushf
push
in
cmp
lcall
sbbb
dec
pop
add
pop
push
lcall
pop
and
push
and
dec
sbb
xor
unpckhps
pop
and
pop
sbb
cmp
test
roll
and
imul
jb
ret
cmp
or
lcall
xor
fildl
xchg
mov
jb
mull
mov
add
hlt
data16
sbb
jg
xchg
cli
mov
sbbb
xor
xlat
sub
les
pop
mov
orb
jbe
out
insl
and
insb
js
shlb
mov
xchg
and
dec
push
add
loop
es
or
dec
and
sbb
stos
and
mov
in
mov
lret
lods
dec
and
mov
dec
jo
add
mov
xor
lods
jge
xchg
dec
sbbl
inc
xor
sub
mov
repz
and
lret
daa
outsb
loop
add
xor
pop
aas
orl
les
dec
jbe
loopne
cmc
testl
inc
fs
mov
fnstcw
movsb
sbb
xchg
xor
dec
nop
add
jo
not
pop
cmc
outsb
lahf
test
inc
xchg
xor
mov
lock
mov
fdivrs
xor
push
mov
addb
dec
addr16
ret
jno
divps
cld
add
xchg
xlat
push
add
hlt
pop
mov
add
pop
mov
mov
xor
push
iret
pusha
repnz
fwait
xchg
mov
test
in
xchg
or
fists
pop
cwtl
mov
loopne
xor
sub
xor
pusha
cli
pmovmskb
and
popf
into
adc
arpl
shl
pop
cmp
add
out
test
mov
pop
pop
testl
insb
xor
mov
mov
mov
add
in
add
xor
or
iret
adc
out
jae
mov
out
das
mov
out
pop
or
fdiv
mov
xor
xor
mov
cs
hlt
movsl
and
xor
cmp
cmp
jle
hlt
out
sub
fmuls
pop
cltd
push
jmp
lock
add
mov
mov
aaa
imul
lock
jb
add
pop
adc
dec
xchg
movsb
sbb
aam
sub
pusha
in
out
add
out
jne
dec
cmpsb
add
call
lea
leave
or
addb
imul
packuswb
pusha
cmpsb
add
repz
or
jbe
mov
add
mov
or
push
add
mov
jae
xchg
cmpsb
clc
push
and
and
xlat
imul
lret
xchg
sbbb
pop
xchg
dec
add
pop
fwait
in
frstor
inc
cwtl
lahf
cmp
nop
add
cltd
and
jo
or
and
mov
or
in
std
iret
pop
push
or
jg
dec
push
xchg
lock
pop
imul
icebp
mov
add
xchg
enter
sub
push
mov
mov
imul
pop
subl
xchg
xchg
add
ror
jnp
in
add
sahf
imull
adc
add
ret
mov
in
imul
ret
sub
adc
xchg
add
dec
cmp
xchg
xchg
mov
cwtl
inc
add
push
lods
mov
or
faddl
insb
jmp
push
mov
aam
mov
push
aaa
loopne
inc
adc
xchg
mov
iret
pop
shrb
sbb
popa
xchg
ljmp
dec
stc
cmp
lods
mov
or
mov
mov
adc
mov
jno
mov
movsb
push
cmp
sbb
int3
and
jl
cmp
xchg
in
push
dec
testb
adcb
sti
jb
xchg
add
or
cli
pop
push
mov
mov
mov
or
jb
pop
jl
jno
adc
in
fisubs
test
or
pop
mov
push
outsl
lds
cltd
fldcw
mov
sbb
call
sbb
cmp
rolb
push
lea
sub
fdivrs
jecxz
xor
imul
pop
bound
cmp
mov
add
cmp
and
xor
xchg
sub
push
push
xchg
aad
mov
sub
cwtl
push
jb
and
jg
nop
push
mov
dec
add
lock
mov
das
lods
adc
mov
and
fs
ds
push
into
mov
shll
hlt
aas
repz
add
arpl
jl
inc
push
icebp
movsb
clc
mov
lahf
add
xor
mov
jae
rorb
pop
jl
mov
adc
jae
xchg
add
push
xchg
scas
add
movsl
aas
je
add
jl
aaa
inc
addl
stos
mov
inc
add
daa
jecxz
loopne
arpl
cmpb
mov
mov
aas
push
popf
add
add
dec
add
mov
mov
or
add
pop
push
pop
hlt
or
add
leave
nop
push
push
xchg
mov
sbbb
into
lock
jmp
std
in
dec
mov
jo
push
pop
pop
or
mov
test
xor
pop
sbb
shlb
imul
lret
popa
clc
pop
dec
cmp
sbb
or
cmp
jle
push
adc
sub
cmp
adc
mov
aam
sbbl
mov
idivb
fwait
ret
or
mov
adc
dec
xchg
jg
lea
xlat
sub
call
mov
jne
insb
mov
les
mov
mov
sub
subl
stos
addr16
aam
pop
rep
push
cmp
push
aad
sbb
push
mov
jns
inc
or
and
cld
imul
adc
jp
xchg
iret
cmc
dec
dec
or
lock
push
sbb
pop
cmpsl
xlat
pop
jne
fisttps
imul
out
lea
or
or
jle
lcall
mov
xchg
xorb
hlt
pop
add
mov
jns
dec
xor
inc
or
fimull
sbb
loopne
push
jmp
es
and
loope
pop
test
xor
jns
inc
iret
stos
or
or
pop
test
xor
mov
shl
add
cmova
mov
add
jmp
cmp
sbb
xor
inc
arpl
sub
cwtl
mov
xor
mov
adc
stos
mov
dec
out
mov
test
push
je
pop
sub
das
sti
xor
cli
call
mov
loope
pop
push
cs
jae
push
repz
popl
dec
pop
scas
lret
adc
inc
sbb
fsubrs
hlt
sbb
rolb
sub
filds
lret
xchg
aas
add
je
adc
add
imull
imulb
dec
pop
xor
sub
gs
fcomps
loop
stos
pop
xor
jmp
rcrb
push
mov
div
add
pop
pop
inc
xchg
imul
lock
xchg
pop
pop
pop
mov
lds
or
sub
in
pop
push
cmp
add
insb
fisttpll
scas
adc
pop
pushl
sbb
pop
add
or
inc
inc
or
adc
and
xor
xchg
mov
sbb
mov
xchg
jmp
pop
into
lods
outsl
sbb
mov
sbb
sub
pop
sti
or
ficoms
pop
ds
mov
popa
orl
cmpsb
incl
add
lea
pop
mov
out
shrl
mov
xor
jnp
jne
jmp
push
daa
adc
add
mov
adc
jbe
clc
add
mov
push
jge
aam
xor
push
push
lret
xor
ss
bound
mov
add
push
xlat
hlt
jno
fucomi
loope
cltd
enter
sub
inc
and
cmp
adc
aam
sahf
add
sub
das
ret
adc
sub
mov
push
repz
dec
mov
daa
jp
leave
ss
add
push
dec
mov
push
xorb
cmp
jecxz
cwtl
sbb
loopne
push
popa
add
push
xchg
sub
inc
add
or
test
add
push
inc
mov
add
add
sbbl
addl
fwait
mov
roll
push
pushf
add
movsl
push
sub
sahf
and
mov
outsb
lods
add
in
addb
mov
dec
jmp
mov
xor
adc
popf
add
mov
lret
dec
pop
imul
push
test
xchg
xor
pop
add
popf
rcll
daa
xor
add
xchg
ss
lods
icebp
dec
or
adc
add
xor
dec
insb
jns
jp
xchg
fs
sar
sbb
test
clc
lods
imul
sbb
push
adc
ja
add
inc
lcall
popa
xor
arpl
adc
push
xor
repz
jl
xchg
cwtl
sbbb
lahf
jb
mov
add
outsb
mov
add
jne
jb
push
in
cmp
sub
mov
adc
das
cwtl
jmp
add
or
and
mov
push
mov
or
enter
in
les
pop
stos
imul
push
mov
enter
ss
or
rclb
mov
scas
mov
dec
or
sub
add
outsl
inc
test
sub
icebp
int3
or
mov
outsb
sub
pop
push
aad
pop
loope
xor
sti
or
fs
nop
jmp
pushf
inc
mov
jmp
ret
push
ficomps
sbb
sub
repnz
sbb
pushf
add
mov
dec
lds
cltd
xorl
add
out
stc
mov
insb
mov
or
andl
mov
inc
or
sbb
xchg
in
add
or
lods
out
cmp
das
push
cltd
inc
mov
jo
pusha
xchg
stc
movsb
and
repnz
stc
cmp
loopne
inc
jl
arpl
sbb
inc
xor
dec
pop
lahf
dec
cmc
ss
cmp
dec
test
add
mov
lods
push
stc
mov
add
push
pop
add
out
pop
xor
pop
mov
or
test
xchg
rorl
add
dec
dec
mov
aam
pop
cltd
ljmp
cs
or
jno
aam
xor
scas
and
add
mov
mov
jp
sbb
or
fisttps
xor
fwait
mov
jns
jnp
testl
sub
xor
mov
sub
cwtl
ds
incl
sbb
cmc
scas
test
cwtl
je
mov
push
mov
jbe
mov
lcall
jle
flds
cwtl
addr16
in
pusha
dec
sbb
or
mov
pop
sub
inc
fcoml
clc
and
scas
popa
or
and
pop
push
imul
dec
je
bound
add
and
lret
enter
adc
repnz
in
out
daa
fadd
ljmp
sbb
sbb
fistpll
cmp
push
xchg
popa
jbe
adc
stc
xor
sub
sub
out
clc
add
sub
lea
xchg
test
mov
adc
loope
inc
cmpsl
jo
jp
outsl
xchg
cwtl
shrl
sbb
insb
jmp
mov
and
inc
pusha
dec
rolb
sbb
mov
mov
cmp
add
or
xchg
pusha
add
push
shlb
pop
push
xchg
insl
lods
cmpsl
aas
fisttps
mov
outsb
test
mov
pop
or
dec
in
iret
xchg
add
je
pop
std
push
stc
mov
xor
dec
rcrb
mov
mov
mov
add
xlat
call
or
arpl
fsubs
movsb
test
add
aad
aas
xchg
sub
mov
incl
nop
test
push
jmp
lods
sbb
mov
pop
dec
adc
je
ljmp
push
popf
mov
xchg
push
add
and
sub
inc
jle
ss
in
mov
pop
imul
dec
add
jbe
adcb
add
xor
adc
jb
pop
sbb
jno
add
mov
mov
mov
add
push
mov
dec
sbb
and
jo
or
lfs
add
js
lea
int3
adc
jmp
scas
add
sbb
push
cwtl
xchg
js
sub
mov
mov
xchg
stc
or
sub
in
popf
stc
nop
lret
pop
mov
ds
sbb
add
stos
loop
inc
sub
nop
pusha
xor
movsl
or
push
or
mov
mov
inc
pop
mov
lea
rorb
lods
cld
mov
cmp
rclb
in
adc
loop
test
mov
push
push
pop
inc
out
sub
adc
jl
add
roll
shrl
sti
cli
mov
push
jns
xchg
xor
mov
into
push
add
mov
fs
outsl
jns
stc
lcall
mov
inc
cltd
xor
or
sub
push
add
psllw
bound
cmpsb
fisubs
rep
cmp
xchg
sbb
sbb
movsl
jmp
lods
insb
sub
add
mov
or
add
jno
push
icebp
fstps
mov
push
or
test
nop
jb
test
pusha
push
sub
cli
mov
cmovs
sbb
imul
xor
inc
inc
sahf
add
cwtl
add
mov
movsl
adc
or
lds
mov
int
sub
imul
mov
inc
rcrb
repnz
imul
add
xchg
lea
rcl
push
cmpsl
xchg
push
lock
xchg
enter
inc
scas
sbb
shll
popf
pushf
add
xchg
insl
cltd
sbb
je
xchg
inc
cmc
xchg
data16
jno
inc
mov
clc
std
or
cmc
out
sbb
in
sub
add
jmp
adc
mov
loope
adc
mov
xchg
pop
clc
xchg
and
sti
adc
jbe
sub
adcb
into
and
orb
rolb
push
shl
decb
das
cmp
imulb
call
mov
xorb
jg
rcrl
add
and
ficomps
xor
popf
or
cmpb
mov
sbb
dec
mov
pop
pop
int3
mov
cmp
dec
mov
add
inc
lea
stc
pop
add
shlb
mov
nop
add
add
jo
pusha
xor
inc
pop
lock
mov
push
test
add
dec
jg
out
xchg
adcl
adc
xor
mov
xor
sbb
lods
pop
imul
mov
imul
cltd
push
jne
aas
or
cmc
push
repz
leave
jg
orb
jp
dec
add
mov
pop
pop
pop
fs
ljmp
jecxz
jne
sbb
lret
adc
test
adc
add
adc
scas
es
test
pusha
mov
test
gs
dec
insb
loopne
xor
ret
dec
test
pop
jg
xchg
cvttps2pi
scas
pop
add
loope
mov
xor
aam
adc
dec
add
ja
mov
push
je
fs
add
lock
test
adc
dec
fwait
fwait
jmp
lock
rclb
jnp
outsb
bound
push
dec
out
adc
shrl
pop
mov
sbb
inc
pop
lret
xor
jmp
pusha
add
in
push
lock
fmull
in
sbb
or
push
cmpsl
ljmp
xchg
add
push
mov
mov
ret
lret
in
add
mulb
js
jmp
insb
aas
and
mov
adc
xor
jbe
lcall
sub
mov
xor
jae
and
sub
push
sahf
xchg
push
repz
ret
sbb
add
movsb
inc
into
sub
cmp
negb
cmpsl
jl
test
mov
add
sbb
jge
pop
cmpsl
sbb
sbb
cmp
add
pop
pop
ljmp
clc
sbb
inc
into
ds
pop
mov
cwtl
and
push
roll
lret
enter
pusha
xor
cmc
mov
mov
mov
int
bound
xor
jnp
jmp
loope
dec
pop
add
xor
rcrb
xchg
cli
mov
mov
fdivrs
ja
cmp
adc
pusha
or
fs
add
dec
loopne
movsb
xchg
sub
and
sub
inc
add
push
test
jmp
xchg
out
mov
push
lret
cmp
hlt
mov
imul
popf
cltd
aaa
adc
addl
adc
inc
dec
xor
xchg
faddl
or
nop
arpl
mov
cmp
int
and
cli
xor
mov
pop
mov
adc
js
sub
aas
arpl
add
and
popa
mov
or
cmp
push
adc
push
imul
add
push
and
mov
add
adc
cmpb
fisubrs
jg
add
dec
push
bound
out
push
call
test
cli
add
repnz
add
jnp
jge
push
cmpsl
test
enter
int3
imul
pop
fdivs
adc
xchg
add
xchg
inc
jo
adc
pop
loope
pop
inc
aam
add
add
xor
pop
sub
lods
out
loopne
fdivp
daa
je
pusha
mov
cmp
pop
shlb
bound
xchg
fsubr
inc
jne
push
or
or
lcall
fistpll
add
xchg
out
inc
jo
jg
cmp
pop
lds
and
mov
mov
popa
inc
xchg
fdiv
pop
and
mov
sahf
inc
xor
sti
ja
test
add
sub
adc
pop
ljmp
add
adc
addb
mov
inc
test
xor
popa
cmp
data16
pop
jno
mov
sbbb
mov
add
cli
add
jno
jmp
and
adcb
ds
add
fwait
filds
sub
pop
daa
inc
cwtl
gs
iret
arpl
xor
jns
sti
xchg
sarb
or
rclb
int3
push
bound
es
adc
xorb
pop
dec
test
je
mov
pusha
mov
mov
and
lods
adc
addr16
add
orl
sbb
scas
bound
jge
test
ja
int
mov
into
test
adcb
add
sti
sub
jbe
xorl
dec
shrl
inc
movsb
outsb
push
jmp
mov
jno
push
or
push
addr16
stos
adc
pusha
jmp
mov
pop
inc
insb
psllw
xlat
test
sub
sbb
dec
cs
pop
dec
adcb
leave
mov
sti
add
mov
sbb
mov
cwtl
add
inc
bound
sbb
push
popf
or
xchg
arpl
and
jp
add
stc
jmp
pusha
subl
es
pop
cmc
mov
add
std
arpl
into
mov
and
adc
or
adc
dec
and
push
or
lds
push
inc
mov
pop
add
mov
jecxz
push
movsb
pop
cmp
cs
mov
imul
nop
jmp
bound
in
sub
dec
lcall
push
pop
ret
adc
cmpsl
pop
push
xor
ss
movsb
sarb
fstpl
shll
cli
nop
add
ja
mov
lret
aaa
xor
sarl
jne
fsubrl
aad
scas
push
cwtl
pop
add
cmp
fdivrp
mov
add
arpl
lret
sub
mov
jae
lock
xchg
mov
sbb
or
fcoml
loope
add
mov
sahf
mov
iret
mov
inc
jp
in
cmp
rcr
lret
lahf
adcb
addb
mov
shrl
orb
je
add
lea
mov
rolb
dec
sbb
mov
and
xchg
rorb
icebp
mov
inc
jecxz
mov
inc
xor
lea
mov
testl
repz
xchg
pop
sbb
xchg
mov
xchg
ja
inc
test
mov
pop
add
mov
add
cmc
pop
xchg
cs
arpl
add
cmc
add
xchg
push
fidivrl
adc
inc
pusha
mov
xchg
mov
or
sbb
mov
push
or
test
adc
inc
xchg
fmul
add
cld
pop
cmp
and
cmc
mov
push
addb
jnp,pt
dec
js
add
mov
in
pusha
icebp
fnstsw
jbe
stos
ja
adc
push
gs
mov
dec
cmc
les
fwait
and
jnp
mov
imul
cmp
add
pop
movsb
dec
roll
mov
add
mov
aas
jecxz
in
fs
rclb
sub
test
in
add
fucom
mov
add
jge
xchg
or
mov
and
adc
add
sub
sbb
outsb
enter
shrl
adc
and
pop
sub
popf
popa
addr16
mov
mov
sbb
mov
jmp
adcb
test
or
mov
fsub
repz
add
jnp
cmovbe
lds
ja
pusha
cmp
pushf
les
inc
xor
pop
xchg
and
das
adc
cwtl
push
mov
pop
mov
add
icebp
mov
jns
add
arpl
adc
out
nop
or
scas
mov
imul
sub
adcl
cmc
xor
jno
sbb
or
inc
lret
enter
mov
mov
sbb
in
add
test
int3
aas
xchg
add
jnp
or
jg
jl
fiaddl
int
shrb
sub
or
jno
cltd
and
sub
jmp
inc
fwait
push
add
mov
cmc
dec
subb
in
insb
sti
daa
mov
outsb
testb
dec
cmc
pop
and
orb
fadd
pop
add
inc
sbb
pop
movsl
out
js
adc
mov
cmp
pop
arpl
jmp
outsb
call
lret
repz
xchg
into
rorb
or
jmp
dec
push
xor
inc
mov
aam
das
add
xor
adc
movsl
roll
aaa
jge,pn
test
test
mov
sbb
push
loopnew
inc
add
daa
cmpb
insl
ret
cmpl
pop
or
dec
mov
jne
cs
jo
pop
add
arpl
jno
adc
repz
and
sbb
shll
cmp
imul
mov
arpl
push
insb
sub
lods
pop
loopne
in
mov
cmp
adc
pop
sbb
push
test
fxch
push
pop
jno
xchg
sbb
mov
sbb
lret
mov
xor
xchg
add
jmp
or
pop
jns
jns
sbb
add
in
xchg
xor
loopne
jno
rcrb
das
sub
roll
pop
mov
jb
dec
push
dec
add
dec
sub
ror
nop
mov
cmp
jecxz
std
sbb
scas
add
pushf
inc
cmp
sub
or
sti
arpl
int3
inc
pushf
dec
fistps
sub
add
clc
inc
xor
pop
cmpsl
and
jg
test
cmp
add
mov
test
dec
hlt
dec
inc
jae
dec
mov
push
cli
les
add
fildll
stc
dec
loopne
shll
and
lcall
pusha
sub
sbb
pop
adc
call
dec
scas
add
pusha
sub
pop
xor
gs
popa
out
mov
adc
sub
loopne
pop
call
sbb
movsl
jecxz
xchg
das
xchg
lcall
sbb
or
pop
cwtl
pop
add
adc
mov
inc
into
add
xchg
and
enter
jo
xorl
addl
add
or
add
fcomip
arpl
test
fistpll
cwtl
pop
clc
adc
xchg
dec
add
ds
and
ret
dec
sbb
outsl
fisubrs
add
mov
movl
jne
push
xor
mov
add
repz
mov
outsl
jmp
test
stc
dec
test
mov
mov
iret
inc
inc
cwtl
mov
mov
les
adc
add
add
rcrl
pop
push
test
sub
fldcw
dec
sbb
adc
cmpsb
mov
rorb
test
mov
lahf
enter
adc
int3
sub
inc
adc
add
add
mov
clc
aam
mov
lock
mov
bound
mov
sbbl
test
mov
test
jg
sbb
xchg
icebp
or
jmp
push
push
addr16
fistl
xchg
push
add
popf
jne
lret
xchg
stos
je
movsb
and
lods
inc
sbb
cmp
rorb
jae
xor
inc
outsb
mov
dec
push
jnp
or
or
xor
xchg
mov
add
mov
int
lods
and
xchg
fwait
mov
inc
cmp
cld
dec
mov
pop
add
push
addr16
insl
mov
lret
mov
nop
push
int3
outsb
xor
pusha
fstps
shll
roll
fs
in
pop
test
and
nop
inc
mov
cld
xor
loop
rorl
mov
xchg
int3
outsw
pop
int3
pop
in
cmp
add
adc
loope
sub
dec
les
aam
xchg
mov
or
sarb
fcmovnbe
cmpsb
js
add
inc
cmpsl
outsb
icebp
rorl
or
sbbb
push
scas
jmp
push
mov
mov
add
clc
test
push
pop
mov
insb
add
mov
xchg
ret
aam
ja
xchg
ror
nop
or
jo
outsl
andps
pop
in
lock
push
mov
scas
sub
in
adc
inc
jo
and
xchg
jle
sti
inc
jo
sahf
aaa
or
shrb
xchg
dec
rolb
mov
sub
das
int3
and
add
sti
add
push
mov
mov
iret
scas
jo
mov
inc
lret
xor
mov
add
add
test
nop
ss
pop
dec
mov
xor
pop
mov
clc
movsb
inc
aad
loop
pop
sbb
sbb
sbb
es
movsl
scas
mov
mov
addb
add
inc
fneni(8087
jmp
sub
add
mov
mov
nop
mov
jae
pushf
mov
gs
sbb
repnz
or
fsubs
pop
push
mov
add
loope
cmpsl
add
lret
in
call
inc
cwtl
inc
mov
js
or
arpl
cmp
mov
sbb
or
pusha
adc
jg
enter
andl
sub
stos
gs
out
sbb
push
sub
das
and
mov
es
adcb
jle
arpl
fldl
adc
or
lret
out
lock
or
pushf
sbb
cmp
mov
xorb
dec
cmc
inc
dec
pop
ret
or
add
mov
cmp
es
lret
lock
mov
jne
add
orb
or
pop
fcoms
lcall
xchg
movsb
push
test
cld
adc
call
imul
sar
lret
dec
or
jb
jg
adc
xor
mov
and
jno
sub
imul
cmp
cli
je
inc
shrb
daa
call
inc
inc
add
icebp
pop
xlat
addr16
js
pop
lock
pop
sbb
in
stc
insl
lock
xlat
jl
mov
mov
push
xorb
sbb
lcall
enter
xchg
mov
xchg
inc
ror
xor
push
cmpsl
mov
adc
pop
je
add
jo
test
or
cmp
imul
out
clc
orb
or
inc
outsl
jno
add
sub
lahf
pop
inc
sub
and
jnp
add
imul
inc
popf
push
adc
and
movsb
aad
divb
sarl
inc
hlt
mov
sub
adc
and
push
sbb
mov
cwtl
sub
fldcw
add
sub
scas
mov
dec
nop
mov
into
mov
arpl
mov
cmpsl
jo
mov
loop
mov
pusha
inc
scas
fadds
cmp
lret
rolb
in
ja
bound
pop
ljmp
int3
incb
adc
mov
jo
adc
push
inc
inc
mov
jp
or
and
adc
lcall
and
push
push
fwait
enter
inc
repz
push
clc
cs
push
clc
lock
add
pop
pop
adc
mov
jmp
mov
lahf
cld
int3
xchg
mov
cwtl
push
mov
cmp
icebp
mov
cwtl
mov
cltd
rol
ror
into
adcl
xchg
xchg
js
adc
xor
pusha
push
cwtl
and
xor
add
pop
push
sub
dec
loopne
lret
cmp
lahf
mov
xor
mov
inc
jl
pop
jno
and
inc
xchg
cmpb
pop
sbb
aas
mov
daa
xorb
and
scas
les
lods
repnz
iret
bound
daa
clc
rcrl
int3
fisubl
add
inc
xlat
push
stos
dec
lods
mov
fiadds
rol
adc
add
cmp
fxch
out
fstp
sub
add
xchg
xchg
call
ljmp
push
les
and
inc
bound
and
adc
rorl
fiadds
scas
xor
jne
mov
sbb
mov
jne
inc
xor
push
and
out
add
mov
pushf
sub
lods
mov
inc
iret
cli
mov
hlt
aam
addb
pop
addl
cmp
mov
adc
pop
popf
cs
xchg
jb
dec
sub
inc
and
int3
xchg
add
mov
push
push
add
loope
sub
fildll
insb
sbb
orl
mov
dec
stc
aad
repnz
add
shlb
into
mov
dec
mov
inc
sbb
popa
cmc
or
aaa
cmp
or
jno
cmpsl
cmp
movsb
test
sti
fcomps
addr16
insl
clc
dec
nop
mov
xchg
dec
insb
rorb
popa
inc
pop
add
sbb
pop
movsl
test
hlt
mov
add
inc
gs
adc
cld
in
leave
stc
mov
cs
sbb
pop
mov
inc
aad
sarl
jo
loopne
mov
and
jmp
aad
pusha
and
jo
mov
scas
sub
add
stc
lods
cmp
aad
xor
imul
cld
jmp
add
loopne
mov
mov
ret
loope
test
inc
fdivrl
lds
into
mov
pop
ret
mov
arpl
ret
sub
push
dec
xchg
aas
dec
push
push
push
push
inc
out
movsb
jp
add
mov
mov
add
cwtl
mov
and
fstpt
inc
add
adc
sarb
lods
mov
movsl
pop
sub
push
jno
or
push
leave
mov
out
sub
sub
or
add
fdivs
mov
cmc
in
arpl
dec
jle
jb
je
mov
and
lea
adc
mov
or
add
cli
iret
sub
xchg
cmpsb
mov
in
xchg
add
mov
cli
or
std
int3
xor
mov
in
sbb
imul
add
jnp
pop
push
mov
mov
add
adc
cmp
pop
enter
dec
xchg
xchg
jb
addr16
and
fadd
fimuls
lods
sbb
ja
xchg
cmp
add
and
adc
push
scas
movsl
outsl
or
fsubs
sbb
mov
mov
jae
jo
mov
js
int3
shrl
mov
adc
jo
xor
lea
xchg
loopne
data16
movsl
sub
cmp
xor
and
lret
dec
xor
cmp
jmp
pop
add
movsl
std
stos
mov
inc
adc
movsb
mov
mov
mov
mov
and
in
mov
nop
add
cmc
add
pop
pushf
jo
cwtl
lcall
fcoms
mov
nop
push
push
sub
dec
loopne
or
addb
and
shll
jg
or
inc
sub
cwtl
jb
cmp
arpl
iret
sub
mov
in
mov
movsl
int3
bound
shl
dec
filds
cli
sbb
scas
scas
setle
inc
ret
add
fdivrl
mov
inc
jo
cmp
push
add
das
lods
pop
jl
inc
mov
mov
push
fsts
mov
lret
adc
cmpsl
dec
repnz
aam
bound
add
mov
jmp
addr16
pop
popa
loopne
repz
jno
mov
mov
cwtl
stc
xor
inc
sub
lock
mov
call
pusha
lods
leave
rol
es
notl
das
in
fs
dec
mov
loop
or
xor
lods
sbb
divb
cwtl
pusha
inc
mov
sbb
pop
mov
mov
mov
add
and
mov
jecxz
clc
adcb
push
xor
outsb
mov
mov
add
jl
pop
lret
sbb
xor
xchg
cs
fmul
cmp
movsb
xor
int3
cmc
mov
fs
push
pop
fistpll
sbb
hlt
mov
inc
jns
fmuls
arpl
sub
xchg
fdivs
xchg
insb
inc
pmulhw
xchg
hlt
aad
lret
cld
push
scas
shrl
bnd
pop
clc
jg
sub
add
cmovp
xchg
mov
div
cmp
sbb
or
stos
pop
add
out
lock
xorb
add
xor
xchg
adc
shl
mov
imul
cmc
dec
popf
ret
mov
push
call
mov
shll
sub
xor
bound
cld
jbe
adc
sub
sarb
nop
mov
cmp
addr16
mov
or
pop
mov
add
roll
dec
pop
fsubl
rclb
pop
mov
and
stos
jnp
jo
add
das
mov
sbbl
dec
ja
push
xor
adcb
int
adc
xor
fstpl
cmpb
and
mov
cli
je
aaa
push
jnp
in
jl
add
int3
jbe
mov
movsl
daa
mov
sbbl
add
mov
jae
push
jge
xorb
adc
jl
pop
loop
adc
mov
xor
mov
aad
lea
jl
mov
fsts
sbb
fildl
pop
push
nop
add
pop
inc
pop
push
shlb
fs
add
dec
pop
or
pop
fs
sub
xchg
sub
adc
push
jno
and
jo
or
mov
mov
adc
movb
fcomps
notb
cmpsb
or
cmp
pop
pop
dec
mov
bound
subb
inc
add
mov
imul
xor
addr16
hlt
in
sbb
xlat
mov
test
inc
sub
imul
sub
mov
rolb
mov
jle
add
mov
in
xor
lock
add
jne
cmp
leave
cmp
aaa
es
aam
cld
pop
add
testb
push
test
clc
push
mov
in
xchg
pusha
pusha
lods
xchg
rcrl
fsubs
repz
push
pop
or
add
or
lret
mov
add
stc
cmp
xchg
outsl
add
in
add
xchg
sbb
int
leave
mov
adc
inc
ds
add
xlat
mov
cwtl
lahf
lea
cwtl
imul
cltd
adcb
pop
jo
repnz
add
lret
shll
xor
pop
pop
inc
mov
daa
add
outsl
pop
sahf
outsb
mov
add
fs
int
mov
insb
pop
xor
inc
xcrypt-ctr
cmpsl
sbb
jle
mov
and
fbstp
mov
jb
add
mov
in
or
hlt
dec
add
xor
jae
adc
mov
movl
lahf
add
add
push
js
xor
xchg
scas
mov
scas
add
pop
arpl
mov
ljmp
pop
sti
wrmsr
and
add
pusha
sarb
getsec
add
mul
ja
add
push
mov
dec
jo
cmp
xchg
mov
mov
mov
addb
fs
or
dec
push
fwait
add
jp
pusha
adc
jle
dec
aad
cmpb
bound
xchg
inc
pop
sbb
jmp
movb
xor
adc
add
pusha
jno
push
sbb
insb
push
rcrl
add
cmp
fwait
iret
pop
and
mov
int
mov
or
insl
stc
loopne
jmp
mov
xchg
imul
idiv
shrb
repnz
inc
inc
cmpsb
add
inc
mov
jno
add
adc
dec
mov
fadds
xor
adc
pop
sub
popa
xchg
fstps
jae
ficomps
ds
xchg
stc
add
pop
mull
ss
stos
add
adc
in
xchg
pop
sbb
push
push
xchg
xchg
mov
add
jmp
adc
and
jbe
nop
mov
ja
push
mov
lcall
in
pop
fcmovu
mov
add
pop
sbb
int
mov
push
loop
pop
and
flds
mov
sub
mov
add
cmp
mov
fwait
push
loope
sarl
add
data16
in
call
sahf
cmp
cmp
int
shrl
sbb
stos
pop
leave
mov
add
cli
popl
cltd
mov
jae
fstpl
cmp
push
lcall
sub
push
mov
sahf
fcmove
aaa
add
insl
out
and
pop
mov
mov
scas
loop
jb
repnz
incb
out
or
sbb
push
nop
enter
mov
repnz
add
fmull
mov
push
mov
inc
add
mov
or
cli
and
xor
pop
xchg
cwtl
push
stos
add
clc
mov
cmpsb
cmp
xor
push
mov
add
enter
xor
orb
rclb
clc
and
add
push
dec
add
rorl
xchg
or
std
dec
test
orb
push
es
lock
dec
mov
mov
add
xchg
nop
push
out
sub
jle
add
cmp
xor
fcoms
inc
add
int
pop
xor
and
add
sahf
push
jbe
jb
pop
or
pop
mov
inc
pop
dec
ret
add
sbb
add
lods
lock
cmp
fiadds
dec
jp
fwait
jmp
scas
call
add
lds
pxor
fsub
pop
add
std
mov
adc
add
out
and
es
ret
out
add
mov
inc
rol
adc
je
add
mov
je
or
lea
add
in
jmp
push
test
insb
stc
pop
das
inc
adc
xchg
mov
nop
test
std
subb
mov
add
ficoms
outsl
mov
jmp
add
adc
add
lods
sub
setle
loopne
mov
and
and
push
les
add
sub
gs
loop
add
mull
lret
addb
ret
movsb
dec
pop
sbb
leave
add
imul
jo
cs
fs
sar
push
add
mov
int
add
inc
push
cmpl
push
mov
jb
int3
mov
es
cmp
movsb
insl
dec
cmpsl
pop
popl
pusha
inc
inc
mov
mov
subb
das
rolb
mov
rorb
push
mov
inc
insl
test
add
out
dec
jl
push
cmc
sti
cli
fiadds
dec
insl
cwtl
pop
cmp
shl
and
pop
icebp
mov
jmp
inc
mov
dec
push
xchg
push
loopne
add
push
shrb
arpl
popa
int
xchg
call
sub
mov
jno
xchg
mov
xchg
and
or
jge
je
pop
in
adc
push
and
into
pop
addr16
mov
sub
scas
jmp
add
sub
pushf
hlt
cmp
dec
aad
xchg
cmp
push
les
stc
pop
sbb
mov
lea
and
out
add
fistl
lods
aam
jnp
add
inc
dec
movsb
test
add
cmp
push
mov
cmp
lret
pop
cmc
or
jo
sbb
lds
cld
xchg
xor
add
adc
pop
xor
push
cmp
inc
jae
mov
stc
repz
mov
mov
or
add
xchg
test
mov
add
sub
bound
filds
or
add
xchg
xor
and
inc
aas
ret
scas
push
orb
and
das
iret
jne
dec
imul
insb
sahf
mov
jl
add
jno
jp
push
push
out
fisttpll
test
lods
xchg
xchg
orb
popa
iret
js
adc
push
cmpsb
int
inc
lcall
or
jne
push
popa
testb
arpl
adcl
and
and
hlt
leave
add
push
sbb
mov
add
movl
fstl
add
cli
lock
pop
jge
ja
jo
jnp
pop
ret
add
mov
add
jg
jnp
outsl
cvttps2pi
fdivrs
jmp
loopne
sub
and
pop
fldcw
sbb
adc
add
cwtl
dec
pop
sub
mov
daa
outsl
mov
stos
pop
and
js
jnp
pusha
cmovbe
xchg
xor
data16
gs
push
mov
dec
rol
or
or
add
mov
xchg
es
cmp
nop
add
push
stos
in
xchg
add
mov
mov
movsl
mov
fsubs
es
and
add
inc
xchg
inc
xchg
mov
jp
xlat
add
push
inc
add
mov
add
sbb
into
pop
je
or
pusha
jno
ret
mov
stos
aas
or
repz
sub
mov
mov
xchg
add
pcmpeqd
fsts
mov
xlat
mov
pop
add
daa
mov
sbb
cmp
test
cmp
cmp
mov
lahf
pop
popf
cmpb
xor
inc
neg
stos
mov
fs
pop
pop
jns
sbb
aam
pop
outsl
clc
sbb
cmpb
xchg
test
push
mov
jno
push
stc
cmpsl
mov
loopne
mov
inc
push
add
cmp
pop
fcoms
fidivrs
add
dec
ja
jno
addb
aad
sbb
add
cwtl
add
popa
les
lods
and
bound
pop
adc
ja
mov
cmp
push
scas
cmp
nop
pop
jp
mov
mov
out
aad
aas
loop
push
dec
in
fldl
popf
jno
pop
pop
icebp
push
test
sub
pop
mov
jg
xchg
in
adc
pop
xchg
and
xchg
dec
add
mov
lret
add
in
jge
xchg
push
and
mov
hlt
jl
add
clc
std
cmp
add
in
das
mov
xchg
cmp
fisubrl
dec
mov
addps
test
mov
iret
push
lret
sub
in
jnp
add
mov
popl
add
mov
in
daa
in
into
or
inc
mov
mov
ret
pop
add
aas
xchg
jl
cmpsl
add
int
or
add
or
movsl
pop
jae
fwait
add
fs
into
adc
xlat
cmp
mov
xchg
sbb
and
cmp
and
test
xchg
pop
cwtl
push
jecxz
testb
pop
xchg
or
add
cld
out
cmp
add
popl
js
cltd
loope
jo
test
cli
pmulhw
mov
push
rclb
mov
push
pop
aad
rorb
sub
add
or
outsl
push
je
dec
add
dec
stc
cmp
add
sub
and
ret
sahf
push
icebp
arpl
push
ja
push
adc
aas
pop
cli
cmp
and
adc
cmovo
js
and
mov
popf
stc
add
pusha
andl
in
rcrl
lock
movsl
cmpsl
jns
aas
adcb
fidivs
pop
inc
mov
mov
dec
mov
in
add
lret
jne
and
in
mov
psubb
mov
xor
cmpb
rolb
xchg
xchg
inc
clc
push
pop
cmp
adc
dec
add
into
mov
and
enter
popa
push
cld
mov
movb
pop
xchg
adc
inc
or
in
ror
cmp
jge
lret
xor
sub
xor
or
pop
scas
xchg
dec
gs
mov
orb
add
fnstsw
add
and
add
jg
mov
je
iret
add
add
fstps
daa
cmc
popl
push
mov
xchg
mov
pusha
dec
and
rolb
pop
lcall
cwtl
xchg
fwait
mov
jne
int
cld
sarb
pop
ljmp
or
inc
movsb
iret
int
rorl
pop
add
and
leave
test
add
jmp
or
ret
loope
or
dec
mov
stos
sub
rol
dec
fidivrl
add
int3
popa
sub
and
add
cmp
pop
mov
add
cltd
mov
or
adc
mov
add
mov
inc
scas
lds
fnstsw
xchg
popf
roll
add
loop
verw
aaa
push
lret
xchg
sbb
dec
in
jo
lock
add
sub
loope
movsb
add
into
jae
jbe
xchg
cld
add
sbb
sub
adc
shl
addl
mov
rorb
pop
cltd
pop
pop
lods
and
cmp
pusha
add
or
mov
sub
dec
fwait
hlt
pop
add
jns
mov
dec
mov
cs
adc
add
cli
and
and
out
cmp
ret
add
or
jns
mov
inc
std
xor
cmp
cmp
sub
xchg
jecxz
pop
inc
or
adc
ja
shlb
xor
sbb
lock
pop
or
adc
add
add
in
xor
loopne
mov
rclw
pushf
fistl
or
or
push
clc
add
cmpsb
add
enter
add
lcall
sbb
xorl
add
repnz
popf
mov
xor
loope
sbb
shlb
add
pop
les
scas
add
or
jmp
test
inc
insl
dec
jl
pushf
pusha
out
or
in
shll
or
pop
push
pop
pop
stos
ljmp
clc
xor
mov
add
jno
dec
ret
cmp
mov
pop
mov
movb
jp
or
jnp
xlat
iret
xor
add
ja
movsl
faddl
aaa
dec
cmp
add
lret
mov
xchg
nop
sub
pop
mov
idivb
ja
pusha
iret
mov
movsb
jle
fucomp
out
lahf
add
es
xchg
in
test
or
adc
adc
pop
rcrb
inc
inc
repz
mov
mov
les
inc
mov
dec
repnz
adc
fwait
mov
sbbb
push
mov
add
fcmovne
cmp
stc
jbe
js
lret
je
dec
out
mov
imulb
jno
pop
loope
jnp
hlt
popf
add
sub
pop
mov
xchg
xchg
xchg
in
movsl
inc
andb
ja
sbb
filds
rcr
enter
cmp
stc
push
dec
gs
aam
pop
loopne
add
add
and
add
and
loope
add
gs
adc
adc
dec
jge
and
fldl
sub
fmull
mov
out
add
pop
pop
lcall
jns
sub
frndint
xor
push
jp
repnz
mov
aaa
mov
rorb
mov
add
jg
jo
popa
out
add
test
push
out
add
jp
imul
sbb
in
insl
cmp
sub
adc
clc
pop
pop
test
cli
and
pushf
rol
pop
pop
outsl
xor
jl
out
test
xchg
or
jae
sarb
push
push
movsb
unpcklps
sub
test
insl
add
sub
je
add
ror
xor
adc
xchg
jge
mov
add
jmp
cld
cwtl
ss
and
cltd
subb
inc
cmp
push
bound
cmpb
xchg
add
add
push
push
pusha
add
enter
fwait
in
sub
and
add
lods
add
cmp
xor
ja
inc
inc
add
es
or
add
and
cmp
cld
imul
xchg
xchg
cmp
rcr
and
movl
mov
test
out
testl
mov
movups
jmp
subb
insl
cmp
mov
ja
and
enter
pop
pushf
mov
xor
add
mov
and
sub
pop
dec
and
or
insl
add
pop
xor
push
jl
adc
lcall
jmp
add
sarb
mov
pop
pop
pop
cs
add
testb
arpl
aam
lret
fmul
pop
outsl
cmp
cmp
lock
adc
xchg
nop
add
addb
repnz
test
cmp
mov
add
popf
int
push
addr16
ret
add
push
sub
into
inc
add
cwtl
hlt
xor
add
fisttpl
add
sub
loope
les
add
int3
test
sti
add
rcrl
add
or
jp
adc
add
cmp
push
xor
loope
addb
rorl
inc
les
inc
movd
arpl
mov
bound
ret
popf
ja
daa
add
push
jae
outsl
sbb
xor
sbb
lods
mov
jmp
sbb
push
stc
dec
and
pusha
je
test
xor
push
sahf
jecxz
sbb
sbb
pop
inc
mov
dec
iret
jg
add
xchg
aad
inc
cmc
dec
and
adc
xor
mov
xor
stos
test
lret
addr16
lock
pop
enter
test
mov
imul
push
aaa
or
cmp
mov
pop
insb
or
push
stos
mov
sub
sub
lods
ljmp
add
xchg
test
movsb
add
int
mov
xor
mov
roll
push
add
movsl
imul
jns
loop
repnz
fs
xor
add
mov
fldt
pushf
add
insb
mov
cmc
test
mov
add
outsb
mov
fsubs
inc
xchg
fildl
mov
add
cmp
cmp
out
out
mov
xchg
cli
cld
fldl
jne
xchg
and
xor
stos
in
jo
xchg
mov
loopne
enter
add
push
xchg
add
out
jo
pop
mov
add
mov
push
popf
leave
ljmp
stc
mov
std
ret
subb
cmovo
pushf
mov
testl
mov
add
jle
cmpsb
jg
rolb
push
inc
fs
xor
jno
mov
ljmp
aam
sub
outsb
mov
ret
sub
mov
movsb
push
xchg
lret
add
call
sti
and
repz
rclb
jno
sub
test
imul
pop
ret
xchg
or
sbb
lcall
push
push
jl
add
std
fs
add
push
shll
add
test
sbb
movsb
cld
and
add
test
mov
dec
in
outsb
cmp
sub
dec
jle
sub
add
dec
pop
cmp
sbb
xor
adc
mov
outsl
daa
addr16
sbb
icebp
xchg
clc
cmp
rclb
add
sub
push
pusha
cmp
loope
cmc
mov
jl
or
xlat
push
pop
out
nop
mov
mov
stos
push
pop
lahf
stos
xlat
and
mov
add
int3
ds
xchg
rclb
ret
push
cmp
lock
jge
clc
sub
cmp
subb
xchg
or
adc
and
cli
dec
jg
roll
mov
adc
add
in
jnp
loop
cmpb
in
xor
ret
testl
add
aaa
pushf
or
ficoml
mov
adc
jle
scas
enter
shrb
xchg
mov
add
rcll
add
in
ja
loopne
call
sub
cmp
out
add
orb
add
mov
mov
jb
jbe
insl
mov
ret
cwtl
add
pushf
mov
pop
movsb
sahf
jnp
adc
xor
mov
jae
xor
in
adc
popa
gs
imul
scas
lahf
test
negb
test
push
add
xchg
addl
dec
xor
lods
in
mov
lea
mov
push
inc
cmp
push
mov
outsb
out
pop
mulb
mov
das
inc
pop
dec
mov
in
cmpsl
add
scas
loope
add
sub
pop
in
mov
cld
mov
pop
notb
add
shll
add
mov
mov
and
dec
lea
dec
pop
hlt
add
adc
push
das
mov
out
cmc
push
test
add
popf
jl
add
fsubs
out
clc
mov
pop
out
cmp
xor
hlt
ja
fwait
in
add
sbb
insl
outsb
iret
data16
outsl
adc
pop
add
jg
fwait
pop
sbb
mov
cmpsl
call
add
imul
mov
lods
push
sbb
flds
lods
pusha
add
orb
cltd
mov
lret
shll
pop
sbb
imulb
jmp
push
add
push
xchg
sub
adc
pop
jns
sahf
pop
ljmp
stos
add
sub
sahf
add
mov
push
adc
cmp
arpl
and
or
push
cwtl
mov
jp
add
ficomps
lock
std
neg
sub
add
into
leave
call
or
mov
sub
xchg
jge
xchg
jecxz
xchg
cmp
sub
cmp
sbb
sbb
in
gs
xor
mov
aaa
std
xor
adc
pop
dec
inc
mov
add
ret
es
je
add
into
pop
xor
mov
xchg
test
sbb
shrl
sub
stos
fldenv
push
pop
or
mov
add
push
lods
cwtl
add
mov
pop
push
xor
sbb
shr
xor
dec
push
out
imul
arpl
mov
loopne
inc
je
add
pushf
ja
mov
mov
popf
sbb
push
add
pusha
mov
and
pop
fs
push
rolb
mov
jecxz
jmp
pop
cmp
loopne
outsl
roll
test
ret
jl
sub
add
sub
ss
clc
push
int3
dec
mov
shlb
dec
test
cltd
shll
loope
push
xchg
xor
nop
into
add
cwtl
push
inc
out
xchg
clc
jb
add
popa
inc
cld
xor
jp
test
pop
sub
int3
jg
sub
mov
dec
es
mov
aaa
mov
imul
and
dec
push
ljmp
adc
fmul
mov
xchg
xchg
push
sub
xor
mulb
add
cmp
repnz
mov
daa
sbb
push
cwtl
mov
push
jno
add
imul
mov
stos
add
mov
xchg
ss
dec
stos
cmpsl
and
sub
dec
out
sbb
fdivrs
inc
sbb
pop
and
sbb
movhlps
mov
scas
stos
cmp
pusha
sbb
in
push
add
rolb
sarb
andb
cmp
pop
mov
or
loopne
lods
jo
add
repnz
mulb
inc
mov
test
popa
and
movb
xchg
sbb
jo
jge
aaa
or
in
fwait
add
loopne
call
cltd
pop
jl
and
dec
push
in
xchg
inc
add
out
xor
sub
nop
xor
add
sbb
das
mov
sbbl
xor
jge,pn
mov
mov
lret
sbb
pop
dec
inc
je
pop
mov
adc
and
sarl
pop
or
mov
testl
mov
pop
jno
in
mov
add
cmp
or
mov
and
imul
es
xor
out
cmp
ret
and
fadds
pop
adc
xorl
stc
in
cs
push
out
jo
shlb
sbbl
cmc
add
les
rolb
jns
xor
sar
mov
cltd
hlt
mov
cld
daa
pop
mov
sbb
pop
mov
sbb
fsubr
int
inc
dec
sbb
xor
loopne
pusha
jo
push
ja
xchg
pop
cltd
cwtl
lock
fcoms
sub
pop
jp
nop
xorb
cmc
jmp
and
mov
dec
jl
shlb
stos
mov
mov
add
je
mov
repnz
pop
pop
sbb
in
jg
cmp
mov
pop
shll
sbb
lods
or
aad
inc
orb
sub
lcall
add
ret
mov
push
loope
cmpb
lahf
push
mov
sbb
or
push
jl
and
mov
lods
std
jge
adc
scas
int
pop
movsb
push
test
pop
push
dec
loop
pop
or
xorl
or
and
cli
in
sub
nopl
xor
add
add
mov
sti
add
push
in
test
cmpsl
rolb
add
mov
xchg
cmp
sbb
sub
add
mov
lock
or
addb
sahf
add
sbb
pop
enter
add
jg
inc
loopne
and
aad
or
push
add
arpl
pop
pop
les
sbb
or
push
jbe
pop
xchg
push
fsts
lock
mov
mov
sub
aad
mov
push
pusha
sar
mov
jne
inc
jecxz
push
adc
jb
stos
xor
sbb
add
push
imul
cltd
add
out
enter
inc
xor
sbb
mov
les
je
jge
add
divb
lods
pusha
push
dec
movsb
sub
je
mov
bound
stos
pcmpeqb
add
movsl
rorl
inc
jp
inc
test
cmp
mov
iret
out
aad
lock
push
popl
aas
add
or
in
rclb
push
lock
pop
pop
fs
int3
retw
dec
pop
adc
fwait
pushf
mov
stos
adc
mov
xor
sub
test
lods
in
jge
and
adc
xlat
adc
or
adc
dec
sbb
sbb
or
xor
push
inc
icebp
sbb
sbb
test
pop
xchg
lods
mov
sbb
into
std
mov
pop
dec
mov
adc
inc
lea
mov
imulb
pop
mov
in
jo
sub
mov
add
sub
stos
cmp
shlb
mov
arpl
pop
jo
cmp
incl
jae
call
sar
sbb
inc
add
pop
add
lods
cmc
mov
add
idivb
daa
andb
loop
imul
aas
push
mov
add
pop
or
xor
xchg
imul
int
loop
adc
fsubs
push
imul
sahf
jle
sub
cmp
nop
scas
add
push
test
sub
xor
and
movsl
test
push
loopne
push
push
or
nop
int3
es
push
nop
inc
punpcklbw
mov
sbb
aam
add
jne
cwtl
cld
mov
test
add
push
loope
xchg
pop
sub
sub
test
popf
inc
movb
cmp
and
call
int3
add
push
mov
add
dec
movsl
add
mov
dec
sub
pusha
sub
lds
add
xchg
rclb
scas
std
and
sbb
or
pushf
jo
add
ret
add
mov
pop
pop
push
scas
nop
add
cmpl
cmp
pop
pusha
mov
xor
pop
and
add
test
push
sbb
lds
dec
dec
mov
or
add
scas
stc
mov
les
cmp
mov
loope
out
roll
shrl
mov
dec
rolb
icebp
mov
aam
shrl
pop
and
add
add
inc
in
xlat
mov
jnp
inc
fmull
adc
aad
shlb
xor
push
add
jbe
loopne
jge
js
test
mov
sub
int
or
sbb
call
or
jno
ljmp
jne
addr16
iret
add
adc
jo
mov
scas
add
pop
jp
lods
and
xor
xchg
add
rolb
les
push
xor
ficoml
pop
push
mov
ret
mov
pop
popa
jge
rorl
out
xchg
lods
add
ficoml
lret
adc
mov
in
push
cwtl
mov
and
cmpsl
push
or
push
lods
add
dec
or
sub
xchg
push
push
inc
pop
cmp
and
je
test
ds
pop
push
push
push
ja
xchg
inc
inc
fs
sub
and
jbe
in
testb
or
andl
mov
subb
pop
std
sub
xor
inc
add
gs
sub
js
push
popa
sbb
sbb
add
lea
cld
es
mov
dec
sbb
imul
cmpb
jge
sbb
out
repnz
push
push
pop
mov
and
sbb
stos
dec
xor
and
lret
subl
pop
push
scas
and
aam
sub
js
jae
or
or
jl
cld
xor
int3
add
repz
mov
add
adc
subb
cltd
fadds
and
adc
adc
sub
mov
mov
xor
pop
adc
ss
sbb
subl
and
test
mov
cltd
or
sub
inc
push
mov
inc
inc
fst
inc
xlat
add
push
test
sarl
add
testb
sbbb
push
mov
xchg
inc
add
ret
shlb
jmp
movsl
push
add
movsb
clc
jecxz
push
adc
es
inc
cmp
add
sbb
add
lods
test
in
or
push
shll
rolb
loop
inc
int3
sub
pop
and
cs
mov
cltd
addb
jns
jb
repnz
data16
mov
lahf
cmp
cld
addr16
add
cmpsl
in
les
xlat
imul
sub
sarl
sub
pop
cwtl
iret
inc
inc
pop
lods
cmc
mov
repnz
inc
mov
xor
clc
xor
in
ret
cmp
nop
ret
ja
add
shll
stos
mov
push
mov
sarb
mov
xor
rorb
ret
adc
add
xor
xor
mov
jg
dec
pushf
adcb
shll
je
mov
cvtps2pi
cli
cmpl
sbb
mov
xchg
mov
dec
fidivs
and
outsb
repnz
mov
mov
jg
xchg
or
bound
test
dec
sub
add
scas
ret
dec
jl
sub
and
inc
sbb
add
adc
in
and
adc
clc
and
pop
sti
ja
sbb
lods
adc
imul
xor
jno
sbb
or
in
pusha
jnp
add
stc
stos
lods
aad
insb
fsubrs
movsb
dec
das
and
add
pop
dec
and
dec
add
je
push
pop
pop
aam
pop
rorb
pop
inc
movsl
into
ret
nop
inc
call
adc
xor
sub
sbb
pop
ds
subl
test
mov
sub
cmp
jg
andb
dec
sti
andb
add
ja
in
sub
addps
cmp
or
dec
inc
das
inc
jbe
add
pmulhw
loope
push
enter
add
negb
fisubrs
hlt
mov
xor
add
mov
mov
ficompl
loope
dec
inc
loop
sbb
fcoms
imul
pop
mulb
lods
jnp
add
pop
das
xrelease
jg
inc
push
dec
push
mov
xlat
test
test
adc
fiadds
add
fwait
or
mov
jge
and
cmp
jle
pusha
adc
in
lods
xchg
js
lock
daa
test
push
in
pop
and
lea
xchg
mov
cmp
js
mov
pavgw
cld
rcrb
and
push
ss
test
push
ja
nop
decb
push
test
mov
inc
test
enter
mov
sub
sbb
cmp
jl
pop
push
jmp
add
and
int3
pop
rclb
lea
dec
or
sbb
test
loopne
dec
mov
gs
mov
inc
mov
dec
mov
jl
rcll
jno
sbb
add
lea
adc
xchg
sub
mov
or
insl
cmp
mov
fcompl
loopne
pusha
push
cmp
and
les
xchg
les
insl
add
and
lcall
cld
sbbb
push
out
push
sbbb
rorl
adc
enter
push
insb
faddl
add
pop
cmp
les
dec
je
jne
pusha
push
and
inc
gs
add
xlat
sti
sbb
fisubrs
pop
lahf
daa
lds
add
and
pushf
cmp
popf
xor
addl
jbe
xchg
test
mov
jmp
mov
adc
xchg
insl
jp
daa
data16
jo
mov
adcl
fiaddl
or
sbbb
and
xor
pusha
nop
add
inc
sub
imul
pop
sub
cmp
shrb
mov
ficompl
je
jae
ret
mov
push
sub
out
mov
push
mov
mov
lods
mov
mov
push
and
add
sbb
adc
inc
dec
pushf
sub
add
add
loope
mov
sbb
push
mov
push
mov
fiaddl
sti
les
stos
jns
add
jp
cwtl
adc
imul
pcmpeqw
add
xor
push
inc
cmp
adc
jns
repz
sub
add
or
add
hlt
jge
jecxz
and
jb
add
lcall
les
sahf
test
gs
shll
clc
push
rclb
and
mov
mov
scas
addb
aad
pop
add
adc
fimuls
jecxz
dec
cmp
add
out
lea
dec
ret
add
mov
and
and
in
scas
add
bound
rcrl
outsl
xchg
cmp
add
inc
into
mov
or
data16
cmp
dec
sub
rcrb
pop
or
push
les
xchg
mov
inc
mov
or
test
cmp
xrelease
add
and
into
sub
cmpsb
and
dec
add
repz
mov
push
add
in
stos
pop
rol
hlt
cmp
icebp
and
add
insb
les
add
stc
pop
push
push
add
inc
ja
fdivrp
addl
insb
stc
add
roll
mov
das
outsb
imul
jge
cmpsl
out
mov
nop
dec
pop
sub
fidivl
pop
scas
and
loop
lock
xchg
aam
adc
jb
pusha
mov
add
faddl
in
xchg
scas
in
sbb
xlat
test
sub
divb
and
gs
into
adc
pop
or
and
aam
inc
xorl
dec
stos
lods
ret
mov
or
xor
inc
push
add
and
mov
and
cs
add
filds
push
cmp
std
add
cmp
sub
sub
pusha
aad
pop
je
push
lret
orb
xchg
push
xlat
std
lret
rorb
sbb
loop
or
push
dec
inc
mov
dec
icebp
sahf
or
es
ret
movsb
loopne
xchg
sbb
add
pop
xor
add
orb
jo
mov
fisttpll
lods
mov
and
mov
and
mov
or
sbb
ljmp
test
xor
jle
fildl
int
sub
add
popf
mov
adc
into
sub
rorb
push
dec
add
mov
inc
gs
jnp
mov
add
in
push
mov
cwtl
adc
xchg
mov
inc
nop
add
xchg
sbb
sub
xchg
subb
push
xor
jl
lock
or
aam
call
hlt
adc
sub
xor
in
jl
mov
or
dec
fst
adc
fiadds
addb
mov
adc
cli
jecxz
mov
gs
mov
push
cltd
daa
dec
xor
aad
add
std
in
loop
sub
cmpb
cmp
adc
xchg
dec
incb
jno
and
or
adc
add
imul
inc
les
pop
sbb
popf
aaa
mov
inc
add
std
xchg
mov
int3
loope
or
xchg
xlat
popa
or
iret
and
sub
fwait
add
mov
aaa
int3
xchg
shr
loopne
mov
xchg
cmp
fiadds
jae
mov
imul
sbb
lds
xor
mov
enter
dec
and
mov
adc
mov
jo
jge
fcmovnb
scas
jo
mov
sbb
ja
or
sbb
ss
xchg
xchg
outsl
jno
ljmp
lahf
xchg
pusha
and
xor
shlb
xorb
pop
or
mov
ds
push
mov
mov
sahf
nop
add
insl
outsl
mov
adc
jecxz
test
adcb
or
stos
fcoms
dec
push
enter
or
loope
mov
adc
enter
movsl
inc
je
mov
cmp
mov
shlb
add
rorl
mov
cmp
mov
jns
sbb
adc
push
mov
or
push
cmp
sbb
mov
jb
inc
sub
adc
icebp
pop
xchg
or
add
icebp
mov
ror
sbb
add
nop
es
das
jnp
andl
xor
fcoms
fs
sbb
cmp
adc
out
mov
arpl
cmp
in
pusha
inc
or
inc
arpl
push
sub
rorb
and
stc
xor
cmp
addb
push
mov
mov
mov
add
and
rorb
mov
imul
adc
cs
jb
xchg
add
call
sbb
icebp
mov
sub
gs
mov
popf
fcoml
aad
dec
lret
dec
into
jb
or
scas
add
cwtl
mov
aam
lret
sub
xchg
xchg
jge
xchg
add
lcall
fdivrl
sbb
in
or
addr16
or
pop
mov
pusha
nop
mov
dec
ljmp
add
and
rorb
test
in
sbbb
lock
in
mov
inc
hlt
std
mov
or
cli
ljmp
adc
sbb
fwait
outsb
cmp
jl
dec
jnp
xor
mov
aad
or
add
jae
insb
or
mov
or
mov
fcmovb
insb
shl
xchg
pop
cmpsb
push
test
jo
ficoml
push
push
dec
sbb
mov
add
mov
in
jbe
push
repz
or
add
jmp
jne
sbb
add
call
adc
subb
fidivrl
cmpb
in
push
ret
add
mov
push
add
sahf
adc
test
nop
clc
push
adc
xor
gs
clc
and
jl
dec
adc
push
pop
add
pop
jmp
imul
andb
dec
movl
push
adc
stos
shrb
je
inc
add
cs
add
push
mov
pop
mov
repnz
jnp
adc
jno
sbb
and
xlat
add
into
add
mov
xor
jecxz
mov
push
mov
cmp
xor
pushf
in
jp
repnz
repz
mov
test
stos
dec
stos
sbb
mov
cmp
sub
cs
cld
xchg
rolb
sbb
xchg
in
adc
idivl
pop
mov
mov
xor
mov
lahf
push
pop
fsubl
movsb
lcall
loopne
pop
xor
inc
xchg
pop
imul
repnz
jo
mov
daa
fiaddl
pop
mov
cli
dec
sbb
pop
sbb
push
call
int
roll
rol
js
cmp
mov
push
push
add
popa
add
ret
addb
sbb
add
dec
ret
jge
mov
adc
xchg
dec
cmp
or
mov
xchg
pop
jl
add
or
dec
bound
les
insb
mov
jl
dec
add
cmp
shrl
jbe
and
rcl
xlat
cmpsl
xor
mov
or
jmp
and
mov
pop
jle
pusha
mov
mov
add
and
jns
divb
push
cld
cmc
add
cli
iret
loopne
sbbl
cltd
test
cmp
loopne
adc
add
mov
dec
les
mov
daa
mov
cmp
or
lahf
notl
aas
jne
rcl
dec
add
dec
loop
jbe
adc
pop
xor
test
loopne
xlat
lock
mov
jbe
jno
leave
movsl
cwtl
in
pusha
xor
ljmp
out
scas
fwait
xchg
add
mov
sahf
inc
ret
cmp
jo
lret
mov
add
das
push
sbb
jo
shlb
test
push
pop
inc
stos
xchg
add
push
adc
push
add
aas
movl
cmpsb
addl
repnz
loopne
popf
pop
pop
ja
and
inc
fstps
ret
aas
jb
jns
xor
outsl
hlt
ret
dec
cmp
jle
or
xor
data16
test
or
dec
nop
adc
test
mov
nop
xchg
and
inc
movsl
add
add
int3
and
call
xchg
mov
es
cwtl
add
pop
arpl
out
inc
add
dec
movsb
popf
je
pusha
daa
sub
ljmp
fneni(8087
and
fiaddl
cmc
sbb
stos
out
pop
movb
inc
div
sub
xor
sub
jg
loop
and
shrl
repnz
mov
and
inc
outsb
push
or
enter
rorl
outsb
jl
push
decb
loopne
sbb
xor
cmp
jge
mov
xchg
aad
ss
adc
out
outsb
rcr
testb
jae
addr16
insb
jnp
sub
xor
sahf
test
stos
pop
jle
loopne
daa
add
test
rclb
sahf
testl
test
cld
jo
test
shrb
sbb
mov
ss
ret
mov
subb
sbb
push
pop
push
and
aam
pop
inc
js
stos
sbb
mov
jmp
repnz
or
cltd
insb
xchg
xor
ret
je
mov
imul
movsl
cltd
jo
fs
sbb
mov
mov
pop
add
mov
mov
sub
fs
addb
in
mov
adc
loopne
call
inc
cwtl
adc
xchg
and
sub
cwtl
mov
dec
stos
sbb
lods
lds
int
jnp
daa
in
iret
lcall
in
incl
push
aas
mov
mov
imul
mov
add
fldenv
jge
hlt
sub
arpl
das
xor
adc
or
mov
xchg
cs
add
lods
adc
in
in
adc
jecxz
scas
cmp
fdivrs
cmp
lods
lds
enter
jge
in
mov
sbb
lcall
cld
add
leave
add
pop
bound
sar
pop
loopne
add
dec
cmp
call
sbb
clc
test
cmp
dec
and
sub
add
dec
inc
repz
add
loopne
pop
pop
cmp
or
andl
push
rcrb
add
or
add
jp
add
cmp
in
testb
xlat
enter
xchg
jbe
or
sbb
jg
pusha
call
incb
scas
mov
jle
add
aad
jp
jbe
sbb
in
inc
or
add
inc
mov
je
add
or
popa
dec
adc
add
lock
icebp
orl
jl
add
mov
inc
add
jb
popf
outsb
clc
lods
mov
mov
sbb
pop
pop
dec
cwtl
out
jns
jecxz
adc
fcoml
or
sbb
and
add
jne
out
lods
mov
mov
faddl
shlb
lcall
or
shr
jne
jl
mov
sbb
addb
int3
dec
inc
test
or
push
xchg
and
lock
mov
fwait
add
xchg
and
mov
movsb
mov
mov
cmpsl
loop
imul
lret
shrl
push
ss
dec
cmp
mov
and
jecxz
mov
mov
stos
xchg
lea
stos
lcall
inc
pusha
pushf
in
xor
push
pop
mov
shrb
or
rclb
hlt
shl
xchg
in
popf
shll
xchg
pop
decb
add
data16
dec
push
mov
mov
jl
test
or
hlt
push
push
or
dec
addb
pushf
jg
out
add
push
jmp
stc
rcll
mov
addb
dec
mov
pop
and
adc
cmp
add
shlb
lcall
roll
shlb
mov
xor
dec
loopne
pusha
and
cmpsl
sbb
shll
outsl
adc
int3
sbbb
push
je
xor
ror
inc
test
cmpsb
or
dec
xchg
xchg
pusha
push
popa
jmp
pop
pusha
pop
push
aad
test
xor
addb
lcall
dec
xchg
push
test
or
repnz
pop
mov
movsb
pop
nop
add
mov
das
out
sbb
cmp
xchg
rolb
add
sub
inc
fadds
cmp
xchg
sbb
push
andb
xor
mov
and
add
push
out
mov
push
or
arpl
jecxz
and
pop
cmp
adc
std
push
mov
pop
enter
or
inc
pop
pop
gs
outsl
loopne,pt
push
sbbl
cmp
pusha
rorl
int
pop
fstpl
adc
insb
or
dec
mov
pusha
divl
push
or
mov
sahf
outsb
inc
movsb
ljmp
lock
add
inc
mov
jno
loopne
mov
push
shll
out
divl
mov
ret
jnp
jl
push
ror
dec
test
mov
add
dec
cmp
mov
mov
je
or
fisttpl
push
fdivrp
imul
and
shlb
push
call
inc
sbb
fcoml
je
mov
adcb
scas
add
daa
loope
testl
cmp
cmc
dec
mov
subl
icebp
jecxz
adc
lock
bound
shll
inc
push
add
inc
add
sbbl
jp
test
ss
xchg
cmp
cmp
push
cs
gs
mov
jb
or
rcl
or
addb
jge
push
or
aaa
insb
dec
mov
inc
mov
mov
and
mov
xchg
mov
or
xor
push
pop
push
outsl
and
or
xchg
and
inc
aas
add
out
fcmovb
sub
rorb
jae
adc
nop
rdpmc
add
jne
int3
loop
sbb
sbb
js
push
lock
sarl
out
cmp
mov
ds
cmpb
in
shl
pop
pop
cltd
insb
or
subb
lea
add
out
sub
and
mov
cwtl
pop
pusha
fcmovbe
cmp
lcall
add
icebp
and
out
jns
in
mov
inc
xor
inc
mov
clc
adc
pop
mov
inc
mov
sbb
outsb
stos
mov
xor
js
inc
aam
or
lods
dec
xor
sbb
in
outsl
and
jmp
pop
jle
dec
push
hlt
in
cmpb
pop
xor
cmpsb
mov
call
popa
inc
add
lret
or
fwait
adc
inc
mov
sahf
scas
or
or
xchg
loopne
mov
ret
int3
out
xchg
std
push
fucomi
out
mov
xor
or
lds
and
inc
repnz
loopne
ja
int
adc
xor
mov
inc
jbe
lcall
pusha
imul
insb
adc
dec
jne
mov
fnstcw
popa
scas
or
andb
pushl
add
clc
loopne
mov
push
loopne
xor
cmpsb
in
inc
mov
jmp
cld
lret
or
mov
js
pushf
mov
test
gs
in
pusha
faddp
int3
add
mov
pusha
mov
sarl
add
test
and
push
mov
mov
xchg
xchg
xor
int3
and
mov
mov
pop
aam
pusha
cmp
and
xor
stos
jns
faddl
xchg
inc
in
int3
jecxz
out
jo
loopne
inc
and
mov
pop
inc
fwait
nop
or
push
xor
add
adc
adc
xor
test
xchg
push
mov
add
lods
nop
add
add
sub
data16
and
jmp
and
add
mov
push
jg
shll
ss
add
jle
mov
loope
lods
adc
addr16
filds
out
inc
and
or
cltd
popf
fwait
or
xor
orb
inc
push
adc
nop
shl
test
xor
dec
adc
mov
idivb
mov
xor
cmpsb
sub
rcrb
dec
push
mov
or
out
mov
roll
int3
sbb
inc
aam
loopne
mov
sub
or
and
pusha
sbb
add
xchg
sub
mov
filds
push
enter
dec
sub
sbb
incb
stc
add
nop
loop
xor
pop
add
out
test
pop
loope
sbb
add
xlat
shll
dec
inc
adc
jne
in
add
repnz
mov
popa
push
into
cltd
push
decl
divb
inc
or
add
adc
hlt
stc
add
push
call
jl
inc
repnz
mov
cli
sub
outsb
xor
sbb
mov
cmp
xchg
xor
xor
add
pushf
xchg
fwait
push
adc
cmp
outsb
dec
cmp
mov
mov
add
xchg
push
pop
fwait
sbb
cmp
cmpsb
ja
xor
mov
test
fcomps
cmpsb
mov
mov
lret
inc
adc
sbb
jecxz
cwtl
push
push
insb
pusha
in
icebp
mov
mov
pop
or
or
jno
sbb
or
adc
dec
orb
movsb
incl
adc
add
jmp
dec
xchg
out
and
shrl
sub
sbb
shrl
or
cmpb
sbb
ljmp
dec
nop
pop
or
push
sub
inc
inc
aam
daa
lcall
mov
pavgb
jne
inc
ret
and
out
repnz
mov
mov
mov
hlt
add
cmpsb
bound
cld
mov
lds
arpl
pop
add
jbe
out
mov
and
nop
pop
mov
add
jmp
lea
mov
pushf
fistpl
mov
insb
push
push
jnp
sub
jecxz
xlat
mov
cmpsl
add
js
subb
clc
add
jns
sbb
add
push
daa
cwtl
mov
lods
dec
jbe
js
and
jg
out
or
push
pop
sub
mov
adcb
imul
jecxz
and
sub
xor
mov
pushf
sbb
add
xlat
lahf
data16
adc
rcr
dec
jg
xchg
test
add
sub
xor
mov
enter
adc
jno
or
mov
insb
js
aam
dec
pop
inc
lret
movsb
cmp
inc
inc
sbb
cmpsl
adc
test
pop
pop
push
add
xor
icebp
mov
enter
cltd
and
add
enter
add
cmpsl
call
cmp
pop
test
or
test
dec
pop
out
dec
leave
gs
es
stc
test
sbbb
jae
pusha
es
adc
fwait
sub
arpl
sbb
or
add
outsl
xlat
and
pusha
popf
push
pop
cmpsl
addb
fidivrs
cmp
jnp
fdivrs
xchg
fldl
adcb
add
xor
sub
pop
xor
xor
inc
mov
mov
mov
mov
jmp
pop
nop
and
repnz
xor
and
decb
jg
push
push
js
cmpsl
and
psubsb
pusha
sbb
lock
mov
ficoml
xchg
ja
lahf
bnd
pop
add
xchg
add
mov
test
movsb
cwtl
out
push
lcall
das
mov
repnz
and
call
add
adc
rcrb
or
in
pushf
daa
mov
imulb
sbb
imul
repnz
xor
fcoms
xor
psrad
or
mov
fptan
sbb
push
fcmovne
test
sbb
mov
loopne
cwtl
sbb
and
hlt
leave
pop
hlt
adc
add
cmp
shlb
add
pop
and
nop
or
decl
jns
pusha
inc
cltd
cmp
add
movsl
out
xor
dec
enter
adcl
or
and
mov
sub
int3
push
jno
decb
xchg
add
xor
jb
inc
sarb
jmp
or
hlt
xchg
or
add
push
and
cmpl
cmp
cli
out
dec
jmp
jg
or
mov
mov
jbe
aaa
or
mov
add
pop
pop
sbb
push
dec
icebp
inc
adc
and
add
popf
jns
imul
pusha
scas
test
call
test
js
mov
pop
inc
jle
sub
adc
xorl
sub
int3
inc
popf
out
lds
das
lret
ret
frndint
add
sbb
xchg
icebp
sbb
inc
xor
imul
pop
mov
or
es
inc
push
fdivrl
lock
sbb
test
jns
sub
pusha
shrb
scas
push
insl
push
push
dec
fcoml
xchg
ret
mov
cmp
push
dec
xlat
inc
int
scas
es
dec
lds
inc
test
clc
cmp
sbb
push
or
andl
xchg
fldcw
shll
mov
stos
lea
test
divb
inc
mov
sub
faddl
nop
sbb
fadd
loopne
and
loopne
loope
sbb
fsubs
fimull
lret
sarb
or
and
fiaddl
pop
in
xchg
mov
lock
push
adcl
lods
mov
addr16
divb
rclb
fsubl
andb
out
lmsw
and
inc
nop
fcos
push
xchg
and
xor
fcoml
fs
andb
inc
xor
push
sub
mov
push
aam
imul
int3
test
push
dec
xor
xor
and
js
shrb
xchg
add
ret
pavgb
mov
clc
div
nop
jl
sub
addb
fwait
pop
lret
dec
mov
push
mov
adc
adc
out
cmp
xor
fimull
inc
pop
and
push
subb
or
outsl
dec
push
inc
add
lcall
rcll
push
push
mov
add
adc
inc
pop
rcrb
push
push
adc
aam
nop
add
xor
inc
loope
cwtl
mov
and
xchg
mov
mov
add
fisubrl
mov
mov
loope
add
pop
ljmp
in
orb
jno
nop
fsubrs
cmp
sbb
popf
or
repz
mov
sti
sbb
and
in
mov
or
sbb
pushf
out
stc
inc
mov
cmp
sbb
outsl
pusha
pushf
idivb
shlb
or
fildl
mov
sbb
sub
cmp
shl
outsl
pusha
es
adc
or
outsb
sbb
jl
add
mov
mov
lret
adc
shlb
fiaddl
inc
subl
test
sbb
jno
or
fidivs
xchg
adc
mov
pop
jg
out
pop
add
test
mov
hlt
dec
and
lods
xor
hlt
xchg
out
outsl
sbb
mov
ret
incl
push
mov
push
jo
add
inc
pusha
add
incb
in
sbb
mov
imul
add
push
mov
and
pop
or
int
mov
cmp
rol
clc
and
fwait
add
jbe
push
and
sub
sti
sub
xor
mov
add
push
pop
lea
addl
push
addr16
roll
mov
daa
mov
out
push
dec
mov
cltd
adc
jb
bound
in
xchg
jno
addr16
mov
push
push
jne
inc
dec
mov
lret
dec
xor
outsl
orb
fadds
pop
cmp
popa
pusha
add
lret
scas
add
dec
and
jg
repz
sbb
loope
jecxz
inc
es
fstpl
add
arpl
push
out
inc
and
add
or
add
roll
sbb
cmpl
pop
andb
jno
or
mov
push
xchg
or
and
or
aam
push
stc
lock
stos
xchg
adc
xchg
cmp
xchg
mov
imul
movsl
mov
mov
mov
popa
ja
loopne
sbb
mov
je
rcrb
cmp
mov
push
jp
push
dec
insl
add
repnz
int
and
aam
mov
cmpb
and
add
push
in
mov
ret
bswap
lock
and
add
cltd
push
inc
repz
lret
shlb
sbb
lret
xor
outsl
jns
sub
and
test
jle
jmp
jo
pop
cld
mov
rcrb
cmp
clc
fnstcw
add
jae
mov
dec
mov
les
daa
inc
xchg
push
xchg
sub
jo
imul
pop
shrb
popa
dec
xor
xor
adc
adc
push
xchg
mov
jb
test
and
push
jl
or
fdivrs
cltd
cld
jl
insl
or
imul
push
cmp
adc
push
mov
insb
lret
popa
icebp
enter
fldenv
jb
adc
fs
cwtl
jo,pt
push
in
mov
out
shr
stc
stos
mov
xor
and
add
xor
push
shrb
sbb
jo
sti
mov
add
dec
aam
pusha
or
xchg
mov
cmp
popl
mov
mov
enter
mov
pop
cmc
aaa
sub
adc
sbb
mov
add
stc
pop
jnp
jp
inc
cld
mov
pop
and
stc
dec
insb
jge
outsb
adc
inc
or
cmp
add
loopne
aas
mov
dec
or
jle
aaa
pop
adc
lret
sbb
das
sarb
aam
and
sbb
and
sbb
popf
xor
cltd
jns
shl
mov
jge
mov
mov
mov
jns
cmpxchg
jmp
gs
push
add
push
shlb
mov
adc
std
outsl
in
pop
sbbl
loopne
jo
movsb
add
inc
dec
popa
sbb
dec
je
jl
shlb
test
sahf
sbb
xlat
or
push
inc
jle
mov
orb
outsl
mov
or
fbld
rol
pusha
or
ljmp
sbb
outsb
push
imul
mov
mov
jp
aas
push
jb
imul
add
push
sub
push
sahf
jno
mov
call
orl
sub
jno
imul
in
sub
adc
ja
or
inc
in
sbb
jns
enter
cwtl
mov
inc
in
and
jl
jge
testb
das
mov
add
lcall
mov
add
jg
lret
push
xchg
xorb
inc
jb
cltd
sub
cmp
add
sbb
and
movsl
mov
add
es
sahf
mov
js
stos
and
daa
mov
jle
ficompl
rolb
aas
mov
or
enter
jp,pt
pop
test
xchg
cmp
xor
mov
inc
int
hlt
decl
add
jo
xchg
mov
add
add
mov
aad
mov
js
add
outsl
sbb
sti
and
or
addb
sbb
mov
and
ret
lods
repnz
mov
cmpsl
loope
popf
test
inc
es
add
into
dec
icebp
hlt
ficoms
imul
ret
xchg
adcl
daa
fdivrp
xlat
pop
mov
shlb
mov
xchg
les
dec
fsubp
push
lret
jle
outsl
adc
inc
pop
pushf
inc
push
arpl
ret
inc
or
sbb
add
mov
xbegin
int
add
sbb
aad
test
fdivrs
jno
in
cmp
movsb
mov
push
mov
mov
inc
add
sbb
arpl
add
mov
adc
sbb
cltd
xor
pop
sub
pop
insl
and
push
pop
ja
pop
cmp
movsb
out
int
jno
mov
sub
sbb
insb
loopne
jmp
mov
mov
push
lods
fcomps
mov
cli
adc
jge
or
insb
xor
sbb
cs
ret
sbb
call
outsl
rcrb
and
pusha
mov
popa
shll
jmp
push
sbb
xor
adc
rcrb
mov
shl
hlt
mov
js
hlt
push
pop
jns
push
clc
cmp
hlt
jle
adc
enter
leave
notl
pop
dec
add
dec
cmp
sbb
das
sbb
andb
fiaddl
jecxz
aaa
and
xchg
push
mov
mov
out
shlb
in
mov
cltd
lcall
xchg
pusha
sbb
insl
test
jns
inc
mov
mov
mov
shr
mov
in
sbb
or
mov
add
cmp
clc
inc
lcall
add
mov
mov
adc
sub
outsb
and
xchg
jmp
sub
add
push
mov
sarl
sbbb
faddl
dec
xchg
mov
add
jb
jl
cmp
subb
push
inc
aad
dec
lret
nop
adc
rol
loope
xchg
jnp
jb
add
mov
int
cmpsl
lods
mov
andb
adc
loopne
mov
jns
inc
push
test
pushf
lods
faddl
adc
testl
jae
out
add
and
xor
sahf
adc
inc
or
shrb
pop
pop
sub
mov
je
loop
insl
push
mov
cld
add
les
mov
in
jmp
mov
or
pop
pop
xchg
movsb
andl
mov
sbb
in
in
aam
add
fs
fadds
xor
pop
loopne
sub
and
jns
add
and
add
retw
les
lahf
xchg
aam
ja
inc
les
mov
xor
mov
inc
in
sub
movsb
add
addr16
adc
pusha
jmp
jg
and
decb
push
stos
add
mov
repnz
push
rcll
xorl
in
nop
aam
cmp
bound
sbb
add
jns
loop
add
clc
fwait
push
cmpsl
adc
xorb
test
add
cmp
and
add
pop
dec
fnstcw
mov
rcl
loopne
push
add
clc
insl
pusha
sbb
push
incl
movsb
ds
loopne
test
add
mov
test
dec
leave
dec
shr
add
hlt
sub
mov
add
test
or
aam
fsub
in
pusha
ret
jae
xor
inc
sbb
pop
xor
dec
xadd
jb
adc
mov
shlb
dec
add
xchg
in
in
aam
push
add
xchg
push
out
ret
jno
sub
andl
rclb
pop
inc
call
mov
xor
pop
aam
add
repz
mov
dec
add
fwait
sbb
sbb
sbb
mov
add
fldl2t
add
out
add
repnz
cmp
mov
or
push
lds
mov
cmp
scas
add
rcrl
cwtl
sub
call
mov
pop
cld
call
rcll
mov
enter
jae
orb
lds
add
cld
add
cmpsl
pop
cmovbe
pop
out
dec
cltd
add
lret
and
push
shlb
nop
mov
or
sbb
mov
adc
sbb
pop
leave
mov
sub
jl
mov
mov
shrl
cltd
push
mov
push
xor
stc
jg
nop
inc
or
inc
xor
mov
or
ficoms
ljmp
lock
xchg
rcl
xchg
fcoms
popa
std
and
call
add
push
push
xchg
das
xor
xor
stc
movsb
pop
xor
sbb
or
sbb
clc
into
push
clc
push
pop
push
dec
push
fmuls
enter
add
sub
inc
sbb
mov
sbb
sarb
in
add
orl
mov
lock
mov
cwtl
push
sbb
inc
mov
fstps
push
lods
pop
int3
lret
aaa
repz
mov
dec
jl
push
popf
or
sub
xchg
enter
mov
das
add
sub
out
and
rcl
testl
mov
lods
dec
mov
test
insb
aam
nop
bound
mov
xchg
inc
aad
sbb
or
xor
in
mov
push
ljmp
clc
mov
and
leave
sbb
add
and
cmp
call
inc
fisttpl
rcrb
jle
mov
inc
dec
cmp
cmp
sbb
das
add
cmc
and
repnz
xor
subb
or
shrl
clc
add
popa
or
stos
mov
cmp
and
orl
and
outsb
add
divb
fadds
ret
hlt
mov
stc
in
or
add
jbe
lret
daa
movsb
inc
jle
adc
stos
mov
xor
inc
sbb
xchg
sbb
mov
sub
jns
mov
ds
xchg
repz
int
loope
xor
in
mov
shll
jg
push
pop
jns
test
pop
nop
hlt
xor
jno
fstl
sbb
add
popa
out
push
adc
mov
arpl
in
in
add
and
push
lahf
and
pushf
pop
dec
xchg
rclb
push
imul
add
pop
std
pop
incl
or
push
push
mov
and
xchg
into
add
jne
sub
and
or
js
mov
xor
pop
mov
test
pop
xor
jle
add
mov
jge
xchg
add
and
cld
cmp
fs
xor
add
pushf
scas
adc
sbb
add
cmp
cmp
inc
xor
sahf
push
add
out
test
push
xor
or
in
mov
xchg
loopne
xchg
jo
in
xchg
insl
test
xlat
dec
xchg
xchg
jl
inc
je
and
add
add
lret
pop
rolb
call
in
inc
sub
push
pop
pop
add
adc
xor
add
push
pushf
inc
fimull
dec
adc
mov
imul
in
jg
mov
add
xchg
das
or
add
fnstcw
xor
cmp
test
and
imul
pushf
inc
mov
stos
push
inc
xchg
pop
cmp
into
cmp
je
inc
fldenv
js
cwtl
sub
in
shrb
jno
sbb
add
push
adcb
stos
or
cmp
mov
push
pop
rcrb
es
lmsw
cmp
lods
cmp
mov
rolb
mov
loopne
movb
mov
dec
adcb
cmc
cmp
in
shlb
mov
verw
jmp
int3
and
lahf
add
mov
inc
dec
fcmove
jo
testb
jns
inc
adc
adc
jbe
or
jmp
xchg
pop
shlb
orl
xchg
mov
fcoml
ror
dec
and
mov
clc
xorl
mov
fadd
movsb
notb
mov
dec
mov
repnz
mov
add
aam
clc
test
dec
stos
pushf
nop
lods
adc
cmp
fs
rcl
pop
clc
js
add
inc
sarl
and
aas
rorl
inc
mov
mov
shrb
clc
mov
adc
push
roll
je
jmp
jnp
jo
mov
cltd
cmp
call
lock
dec
ss
sub
cltd
sbb
lock
in
sbb
rcrl
clc
or
add
repnz
cmp
les
call
jbe
or
js
xor
sub
push
mov
pop
or
xor
inc
cli
xor
rcll
inc
xchg
xor
jbe
cli
jecxz
int
cwtl
inc
out
adc
mov
push
emms
xlat
mov
lock
jae
cmpsl
insl
and
imul
cmp
add
jle
push
pop
fwait
sub
dec
mov
add
das
add
daa
mov
dec
xor
jg
jae
leave
cmp
inc
mov
int3
pop
push
jbe
add
insb
sbb
jns
dec
stos
sbb
xor
sub
push
hlt
pusha
jl
sub
les
xchg
mov
fcoms
lds
ret
mov
mov
pusha
adc
mov
sub
sarb
cli
add
mov
push
ret
add
jno
imul
jae
imul
fs
push
ljmp
mov
xor
and
sti
or
mov
mov
cmp
dec
insb
sahf
cmp
ds
nop
icebp
scas
add
in
pop
adc
add
sub
das
and
pop
xor
push
repz
dec
pop
outsb
jne
into
pop
cmp
jb
inc
inc
inc
mov
jge
adc
jbe
mov
enter
or
add
stos
mov
mov
mov
mov
call
scas
sbb
dec
and
add
jg
pop
fs
and
dec
pop
shrl
insl
jae
sub
jmp
popf
mov
test
pop
adc
fs
sub
ret
xchg
hlt
add
xchg
sbb
mov
xor
inc
add
lods
push
inc
sub
add
add
pop
or
push
adc
test
icebp
mov
orl
xchg
jmp
jmp
in
mov
cmp
clc
dec
mov
push
andl
mov
jmp
pusha
pop
stos
jne
pusha
adc
ret
ljmp
mov
xor
or
add
jb
dec
scas
fisubs
pop
xor
loope
mov
mov
lcall
jg
jmp
push
push
pusha
xor
xor
pop
push
pop
mov
sub
jo
jmp
jmp
arpl
push
or
adc
mov
pusha
jmp
call
mov
enter
int
xor
popa
inc
and
sub
cmc
mov
in
pop
pop
mov
and
test
imul
out
stc
fsubs
pop
int3
mov
ffree
or
pop
dec
movzbl
sbb
mov
stos
lock
push
sbb
and
leave
ret
aad
pop
lcall
push
sub
pop
scas
enter
inc
out
shr
repz
int3
xor
and
pop
ret
loop
fildl
in
bound
sub
pop
hlt
sbb
inc
cmp
daa
push
mov
loop
adc
inc
mov
nop
cmp
push
pop
addr16
int3
push
mov
les
pusha
aad
das
push
inc
push
mov
subl
jbe
mov
mov
cmp
cmpsb
push
movsb
out
jmp
test
sarb
push
add
out
mov
inc
lret
and
xor
aam
sbb
mov
scas
int
inc
mov
mov
dec
mov
rolb
xor
mov
mov
jmp
adc
es
sub
fldpi
idiv
mov
stc
dec
adc
xchg
mov
inc
jmp
push
loop
adc
push
or
dec
jae
mov
pushf
in
xchg
push
inc
and
xor
ucomiss
dec
cmpsl
shrl
hlt
dec
cmp
add
fmul
xor
popa
mov
add
out
mov
sti
add
pop
or
rolb
fildll
jbe
lock
clc
mov
or
test
mov
xchg
mov
mov
stos
shll
pop
cs
mov
ljmp
add
jg
clc
sub
test
and
or
mov
adc
insl
nop
test
mov
push
add
cmp
push
loop
adc
add
mov
notb
sub
inc
fcoml
adc
dec
cli
stos
nop
fs
fcoms
sbb
add
pusha
movl
mov
pop
sahf
aad
or
cmovnp
sti
adc
scas
and
sbb
mov
scas
pop
insb
bound
push
mov
jnp
icebp
xor
lds
fcom
shll
sub
incl
cmp
mov
inc
xor
in
xchg
or
cmp
inc
add
pop
mov
xor
mov
iret
jmp
sub
js
popf
and
stos
out
icebp
clc
mov
loope
insb
mov
pop
or
jmp
into
xor
outsl
add
pop
xor
mov
or
and
xchg
cmp
pusha
push
jg
sbb
mov
adc
push
xchg
jb
orl
rcll
sbb
call
sarb
add
or
imul
xorb
pop
push
pop
int3
lock
jno
mov
js
inc
add
adc
addr16
add
jo
ret
mov
jg
xchg
das
pusha
sub
pop
and
push
add
dec
lock
aas
sbb
inc
xlat
arpl
add
jg
push
dec
ret
jbe
mov
mov
pop
adc
popf
and
mov
data16
jge
jno
push
jmp
out
lret
mov
daa
addb
or
lea
ffree
adc
add
mov
lahf
inc
jle
pushf
pushf
xor
imul
xor
cs
jmp
test
dec
lcall
aad
cmpsb
add
cmp
pop
cmc
push
in
adcl
pop
push
jb
and
loope
xchg
rcrl
sub
cwtl
mov
jge
push
orl
pop
jb
call
cmp
add
mov
adc
rorl
push
mov
mov
or
dec
repz
jmp
cmpsb
icebp
sub
cli
dec
mov
cmp
xchg
movl
inc
outsl
mov
pop
popa
mov
dec
adc
add
mov
lods
call
leave
jg
test
jecxz
sbb
jecxz
add
xor
mov
in
adc
fistpl
es
sti
addps
add
dec
cmpl
xchg
popa
popf
pop
mov
addb
pop
icebp
mov
sbb
mov
in
or
xchg
mov
bound
xor
ltr
lahf
in
cmp
fistpll
sahf
std
loop
lock
or
sub
rcrb
bound
outsl
or
sub
dec
mov
add
and
xor
add
jmp
mov
pop
and
dec
out
les
inc
or
je
sub
sub
lcall
sub
int
or
dec
and
lock
js
lea
fsubl
xchg
dec
mov
mov
push
cmp
sbb
idivl
add
cmc
cmp
repnz
or
xchg
xchg
sub
insl
std
fs
loopne
sub
stos
pusha
mov
sbb
test
mov
jl
pop
ret
dec
pop
outsb
fcoml
cmovg
add
jmp
clc
adc
cmp
dec
ljmp
mov
fsubs
push
mov
arpl
mov
jno
cli
xchg
sub
and
idiv
ret
add
out
es
pop
mov
test
mov
inc
arpl
pop
add
lods
inc
hlt
push
clc
pop
and
fsubs
add
xchg
ret
push
push
cltd
pop
pop
jno
sub
subb
in
imul
repnz
lcall
scas
sub
outsb
push
pusha
mov
add
les
icebp
std
pusha
stos
jb
out
and
popa
push
aaa
add
das
stos
mov
xor
inc
std
cmp
outsb
cwtl
or
pop
popa
xchg
lret
or
gs
lods
mov
add
addr16
fiaddl
orb
pop
mov
mulb
arpl
jge
pop
cmp
enter
popa
add
shrb
inc
stos
jbe
faddl
testb
dec
adc
sub
jle
mov
lods
out
addl
lea
add
or
sar
fdivl
push
push
pop
pop
leave
add
and
dec
lods
out
in
daa
mov
add
inc
test
arpl
ret
xor
enter
and
sub
call
dec
fiadds
mov
pop
pop
repnz
mov
pop
aam
lea
lods
call
hlt
stc
adc
in
pusha
ret
clts
repnz
mov
pop
and
mov
and
sti
add
int
cmpb
insl
mov
in
fldt
sbb
stos
pop
insb
shll
adcb
adc
je
mov
or
xor
xor
add
push
pop
movzwl
mov
pop
mov
pop
pop
pop
outsb
jle
push
pushf
lea
js
mov
mov
sub
movsl
pop
int
shlb
pusha
add
xchg
js
js
dec
pop
sti
ficoms
sbb
or
cwtl
clc
les
cmp
hlt
andl
or
xchg
pop
xor
add
bound
push
test
decl
cld
rorl
ffreep
test
or
mov
mov
mov
jno
mov
int
aam
shrb
popa
dec
popa
gs
sub
cmp
or
stc
xor
dec
nop
stos
lcall
xchg
push
popa
test
inc
add
add
push
mov
clc
pop
pop
lret
or
testl
aaa
inc
leave
mov
mov
dec
test
jmp
sbb
pop
cmpb
orb
adc
mov
repnz
or
mov
inc
adc
push
push
jmp
inc
add
xchg
insl
pusha
data16
jg
loopne
lea
push
pop
xor
inc
imul
pop
popa
xor
leave
or
movsb
add
lret
jns
adc
mov
loopne
fistpl
fwait
pop
rclb
add
sarl
outsl
test
jne
es
pusha
addr16
stos
idivb
scas
sub
xlat
mov
xor
xor
mov
inc
adc
orb
cltd
xor
sbb
inc
andl
sub
leave
push
jne
into
add
xchg
xchg
pusha
mov
mov
imul
popa
mov
dec
outsb
mov
stos
ljmp
sbb
adc
pusha
fstps
mov
xchg
and
jnp
lds
in
cmp
mov
mov
imul
xchg
ret
or
inc
xchg
xchg
inc
aas
xlat
and
add
js
sub
pusha
xchg
popf
jne
cmpsl
insl
dec
les
add
jno
sub
sub
mov
fstps
cmp
adcl
sbb
mov
jbe
mov
or
xchg
in
add
dec
and
and
jg
cltd
mov
and
pop
popf
iret
test
push
in
aam
mov
mov
aad
pop
push
les
shll
pusha
cmp
mov
testb
addl
jb
pusha
xor
push
mov
mov
mov
pop
aam
mov
sub
sbb
repz
sbb
outsl
in
dec
sti
xchg
shrb
jo
in
or
push
and
ja
gs
mov
pop
pop
cmp
cwtl
xor
mov
stos
add
xor
or
sbb
cmp
daa
icebp
mov
lods
mov
lcall
sub
pop
loopne
enter
daa
outsb
std
mov
pop
xchg
shl
or
adc
pop
lahf
shlb
jno
fdivrl
xor
daa
les
pusha
sbb
mov
mov
sub
xor
sub
and
incl
mov
dec
xor
inc
mov
or
mov
divl
pop
add
fcoms
dec
xchg
enter
lret
inc
add
das
cli
xor
bound
scas
push
add
jb
pop
loopne
sbb
add
mov
adc
pop
iret
loop
push
xchg
push
aas
nop
push
and
das
push
pusha
nop
fadd
fidivs
sahf
es
or
or
push
sahf
or
xor
mov
aas
sub
add
les
and
sti
sub
adc
roll
push
divl
mov
sbb
lcall
rclb
mov
add
xchg
dec
dec
lds
xchg
lea
lds
xchg
sti
dec
int
push
xor
xchg
inc
xchg
cltd
xor
xchg
sub
push
rcll
push
dec
lret
mov
ds
mov
or
scas
lock
xchg
fnsave
xchg
xchg
bound
or
add
stc
push
xor
insl
push
push
sbb
int
out
xchg
ficompl
mov
add
insl
add
cmp
fiadds
and
xor
repnz
and
adc
xchg
xor
lock
enter
mov
aad
data16
and
aas
in
xor
mov
xor
jge
add
mov
pushf
inc
inc
xchg
inc
and
sbb
xchg
adc
cwtl
sub
loopne
sbb
ja
mov
sbb
pop
jb
push
xchg
jns
jle
or
sbb
cmp
push
add
adc
mov
xchg
push
push
dec
jbe
mov
lods
jle
lahf
rcrl
adc
nop
add
dec
xor
clc
fidivrs
jmp
mov
mov
and
cld
sub
jmp
int
loopne
pop
xchg
imul
add
xor
hlt
loopne
add
push
or
mov
sub
imul
xor
mov
or
mov
xor
and
adcb
cmp
arpl
lret
and
inc
mov
loopne
aad
mov
and
fwait
shlb
mov
sub
out
addr16
ja
scas
jecxz
xchg
jl
ss
xorl
cmp
test
lret
mov
pop
sub
jnp
jb
mov
pop
pusha
jno
in
gs
jb
mov
and
fcoms
pop
bound
xor
inc
sbb
imul
out
jmp
mov
out
daa
xorl
and
mov
fcomi
or
lret
jno
push
xchg
or
adc
add
sbb
pop
or
mov
cmp
xor
stos
sub
cmp
in
jmp
and
jp
bound
jne
dec
js
loopne
or
sub
popa
fldcw
and
xchg
xlat
mov
dec
out
cli
sahf
addl
scas
test
inc
inc
and
xor
aas
mov
inc
dec
jmp
hlt
mov
mov
and
sbb
dec
cmc
out
jmp
repnz
add
xchg
cli
loop,pn
in
push
sub
fildl
rcrl
cmc
jb
and
cmp
movsl
bound
outsb
add
cmp
xor
ds
push
sub
stc
pop
dec
adc
lock
mov
xor
daa
daa
iret
and
hlt
jne
lods
cmp
ja
imul
rorl
popf
jno
and
repz
negb
mov
push
inc
cmp
xchg
mov
push
sbb
aam
movsb
gs
jbe
push
sub
popf
inc
push
cmpsl
adc
popa
jo
adc
inc
mov
mov
cmpsb
leave
dec
sub
clc
or
adc
jg
or
mov
cmpsl
jg
adc
sti
mov
xor
jmp
add
mov
push
and
mov
sub
outsl
fstpl
mov
loope
mov
inc
lock
and
jne
ret
push
clc
aad
ljmp
add
ljmp
mov
push
fsub
daa
xor
mov
pop
popa
popf
jmp
pushf
and
shr
or
mov
add
push
jl
pop
repnz
fisubrl
pop
mov
xor
push
add
mov
ror
pop
ffree
pop
sub
pop
aas
cmp
cmpsb
adc
clc
adc
mov
and
adc
imul
adc
cmp
out
or
sarl
je
shrd
mov
pop
das
bound
ret
les
test
pop
add
jge
add
stc
outsb
stos
add
sti
fs
sub
adc
mov
pop
popa
mov
and
xor
pop
jmp
mov
out
mov
test
and
cli
add
in
adc
shrb
xor
mov
pop
push
mov
mov
cs
push
jmp
or
or
xchg
rorb
mov
inc
fucomip
fwait
add
add
or
mov
inc
cmp
push
pop
hlt
lahf
push
inc
adc
rolb
and
or
mov
mov
mov
sarb
gs
jecxz
mov
mov
loope
sub
cs
addr16
es
test
push
and
add
push
xor
out
pop
pop
or
ret
jo
inc
add
adc
pop
cs
xchg
mov
jge
adcl
int
popa
xchg
jnp
sub
rcll
inc
sub
mov
scas
sbb
and
dec
mov
sub
and
mov
add
pop
pop
push
jle
push
shll
jns
popa
mov
and
xchg
jg
stos
rorb
mov
and
mov
adc
inc
incl
cmp
mov
sahf
push
add
xor
xchg
movsb
leave
popa
add
and
push
pop
pop
push
cmpsb
inc
mov
cmpsb
mov
xchg
adc
in
xchg
repz
popa
mov
cmp
ljmp
add
punpckhwd
adc
add
adc
daa
lcall
sbb
mov
xor
fisubrs
jae
jo
cmp
int3
sbb
lds
xor
in
lahf
test
imul
jns
xor
mov
cmp
call
cmpsl
lcall
dec
jmp
mov
mov
cmp
push
mov
adcb
lcall
dec
xor
popf
fdivr
add
push
mov
adc
mov
jbe
push
xchg
test
pop
scas
add
stc
in
xchg
and
pusha
js
xor
jbe
mov
cmp
push
out
loopne
mov
mov
push
pushl
jae
dec
mov
add
dec
mov
rolb
jae
out
xor
and
add
cmc
orl
loop
xor
fwait
lret
out
add
adc
cld
iret
add
mov
out
adc
mov
pop
int3
push
cld
repz
add
imul
xor
mov
cmc
jns
mov
mov
pop
add
lds
enter
fs
fwait
add
xchg
dec
push
out
fnstcw
push
adc
push
pop
cmp
jmp
xor
mov
ja
loop
leave
shl
jo
add
lea
mov
pop
sbb
aad
dec
scas
enter
or
sub
mov
data16
push
mov
loopne
pop
fnstcw
inc
cmp
insl
pop
aam
adc
inc
adc
xor
push
loopne
lods
cmc
imul
pop
xor
cltd
dec
pop
sub
lock
mov
dec
and
sbb
xor
xchg
push
sbb
dec
and
dec
loop
dec
dec
pop
push
leave
push
fldcw
fstpt
xchg
or
adc
xchg
test
pop
pop
mov
mov
mov
or
movswl
mull
jmp
or
rolb
mov
pop
sbb
int3
dec
and
clc
add
xchg
xor
lds
dec
sub
leave
adc
faddl
jnp
adc
loope
adc
aam
ficompl
mov
inc
sub
lcall
adcb
call
dec
cmp
push
add
add
outsb
jle
push
lods
sbb
push
out
out
adc
test
add
hlt
jmp
es
sub
mov
add
cli
fisubs
mov
and
sarl
es
cmp
push
pusha
mov
into
and
mov
in
mov
testb
addl
add
pop
pop
xlat
lahf
adc
arpl
js
cmp
inc
mov
pop
mov
add
dec
repz
addl
aaa
pop
mov
add
inc
cli
mov
movsb
dec
cld
sbb
lret
js
and
push
in
subl
add
icebp
and
cs
jecxz
adc
pusha
cmp
push
mov
dec
adc
in
popf
in
xchg
xchg
add
adc
lret
add
movsl
repnz
das
fimuls
mov
es
dec
and
xor
pop
out
sub
mov
mov
pop
cmpsb
and
pop
loopne
cmp
dec
sub
xchg
lods
push
les
jno
xchg
divl
mov
cltd
add
dec
call
loop
add
mov
dec
jnp
pop
mov
jne
push
pop
movl
or
test
pop
mov
test
sub
push
and
push
je
mov
and
jae
jp
or
adc
add
mov
inc
sbb
xor
and
add
mov
cs
dec
sub
pusha
loop
sbb
cmp
scas
mov
sub
or
mov
addr16
pusha
fwait
xchg
lock
nop
ficoml
adc
notl
js
mov
andb
add
xor
and
sbb
push
fildl
sbb
sub
inc
nop
cmc
lea
out
xchg
jnp
jo
icebp
add
xor
and
test
dec
pop
pop
int
fcoml
cltd
jno
in
push
mov
push
xor
enter
icebp
aas
add
dec
cmp
or
pop
lods
sbb
or
add
subl
xchg
push
hlt
add
jl
sbbb
push
insl
les
jle
or
xor
fs
stc
and
das
sti
and
or
pop
sbb
stc
cmp
ljmp
inc
sbb
aad
mov
mov
jmp
mov
lret
add
out
lea
cmp
pop
lods
cltd
movl
add
mov
add
inc
dec
and
xor
sbb
mov
rorl
insl
mov
popf
pop
sarl
dec
sub
gs
int
stc
mov
inc
sub
xchg
adc
mov
mov
nop
or
add
mov
jbe
faddl
lcall
xor
test
daa
jle
pop
or
dec
mov
mov
pop
movsl
adc
loopne
in
shlb
ja
ret
xchg
pusha
test
je
or
jne
inc
sti
pop
xor
aaa
shll
xchg
mov
cmp
arpl
out
mov
imul
dec
xor
rolb
jl
xor
ret
and
push
decl
test
lock
and
pop
jmp
mov
clc
inc
cmp
and
push
into
push
cmp
push
test
mov
add
or
mov
das
hlt
leave
adc
fs
xchg
imul
out
test
add
sahf
or
pop
arpl
inc
cltd
lea
call
popf
aad
daa
lcall
jns
shl
xchg
and
push
fadds
fildll
adc
sbb
inc
scas
aaa
pusha
mov
pop
mov
call
jno
ja
pop
adc
out
or
lock
test
sub
push
jmp
inc
loopne
dec
dec
xchg
push
add
dec
mov
add
pusha
jo
into
shlb
jnp
add
xor
and
sbb
bound
shlb
or
jo
jb
adc
clc
adc
pop
aas
arpl
fcmovnbe
and
jmp
xor
add
push
lret
add
cs
adc
pop
adc
cmovo
xor
lods
sub
mov
adc
cmpsb
rcll
notl
mov
mov
dec
push
cs
xchg
lret
xor
nop
jns
cmpb
ficoms
sbb
jge
js
mov
fsubrs
lret
aaa
lea
lcall
add
pop
mov
inc
mov
mov
or
jns
sub
scas
lock
sub
mov
orl
push
push
lea
mov
aaa
push
add
sti
movsb
aam
push
add
pop
push
xor
loop
jl
imul
pop
lds
push
pop
adc
mov
js
inc
and
push
mov
stc
push
cld
sti
addb
xchg
leave
xchg
aam
mov
hlt
int3
add
in
push
and
cwtl
xor
xlat
jg
lcall
enter
lock
mov
pop
shrl
jne
bound
test
xor
mov
inc
nop
jecxz
leave
leave
stc
ds
fsubrp
lds
xchg
cmp
lahf
adc
lahf
pop
cwtl
xchg
xor
mov
lea
rclb
cmpsb
or
repnz
add
les
pop
pop
xchg
stc
outsb
pop
mov
aam
fiadds
pop
aad
push
das
fiadds
jecxz
flds
add
movl
fs
jno
adc
sbb
adc
mov
bound
pop
pop
push
fsts
add
pop
push
jecxz
and
xchg
lods
and
push
mov
inc
xor
rclb
pop
add
sub
jmp
hlt
add
cmpsb
xchg
or
addr16
fsubs
adc
and
add
testl
push
mov
jmp
shlb
mov
repz
test
or
mov
les
mov
and
adc
lods
pusha
adc
scas
movsl
or
ficomps
into
sub
dec
push
mov
andb
xor
sbb
dec
pop
das
sti
sbb
subb
mov
ja
lahf
testl
sbb
loop
adc
lds
add
ss
fisttpll
dec
lcall
push
cwtl
fimull
xchg
cmp
add
lret
or
outsl
adcb
int
cmp
popf
jg
and
sbb
cmp
sub
into
jae
dec
or
lret
cmpsb
mov
sbbb
flds
dec
sti
push
add
pop
repz
or
aas
sub
jl
in
mov
mov
xchg
data16
into
dec
lcall
mov
enter
test
add
xchg
int3
lret
jnp
subb
dec
cmp
xor
hlt
sbb
sub
out
loope
xchg
rcll
pop
aad
sub
test
jnp
or
push
jle
pop
or
jo
out
dec
and
movsl
mov
ds
scas
decb
add
cmc
lds
xchg
and
xchg
enter
jbe
xchg
aad
pop
cmp
cmpsl
sbb
jo
ja
mov
jns
or
xor
bound
bound
pop
jae
mov
adc
inc
bnd
adc
mov
ret
nop
sbb
lahf
lcall
repnz
inc
xchg
popa
and
sysret
sub
add
ds
lock
inc
push
or
outsl
jno
adc
and
outsl
and
add
outsl
test
imull
xor
sbb
jbe
jle
loope
stc
add
lahf
notl
mov
cs
pop
push
sub
cmc
push
and
fisubl
add
dec
mov
pop
mov
idivl
lahf
aad
and
loope
jns
mov
repnz
cwtl
pop
add
cmp
nop
xchg
imul
jbe
add
sti
cmpsb
and
test
sub
mov
dec
test
and
cwtl
dec
xor
mov
shr
push
xchg
and
push
rorb
sbbb
mov
push
inc
inc
fbstp
lds
aas
sub
push
pop
push
adc
add
add
shl
pusha
add
sarb
repnz
out
aaa
sbb
or
sub
subl
cmp
and
cmpsl
jne
call
sub
xlat
fdivs
test
rcl
sub
dec
sub
je
loope
jns
mov
test
jo
roll
mov
fiaddl
hlt
popf
ret
cmp
mov
les
popf
dec
fldl
inc
call
in
adc
xchg
lahf
add
inc
fsts
add
int3
adc
ret
testb
jl
popf
cmp
add
ss
fadds
add
adc
testl
jae
rorb
repz
lock
and
adc
xor
cs
jg
call
leave
add
jp
clc
das
lods
cmp
movsl
jb
push
call
call
repnz
test
shrl
jns
adc
fwait
movsb
adc
in
sub
mov
add
pop
fnstsw
xor
stc
and
or
rcr
push
jae
andb
jg
lea
and
push
dec
push
in
adcb
dec
pop
add
or
es
mov
imul
mov
pop
jo
outsl
xor
daa
aad
fadd
fwait
mov
and
call
notb
dec
fmul
and
mov
push
andl
jp
add
call
xor
mov
imul
jnp
shlb
or
push
flds
add
es
lds
scas
popa
xor
pop
les
add
negl
in
jae
jl
jae
imul
fdivrs
xchg
or
idivl
je
and
scas
xor
leave
icebp
call
and
fmull
mov
inc
jne
dec
hlt
add
pushf
dec
jp
stc
adc
call
iret
daa
sbb
pop
add
sbb
mov
or
add
add
arpl
call
in
sub
in
pop
xor
fs
out
mov
dec
psraw
jmp
mov
cs
or
ret
loop
xorb
jle
push
mov
repz
add
incl
jmp
clc
dec
lods
xor
push
or
aaa
sub
lret
daa
ja
push
mov
lods
filds
leave
pop
in
das
mov
jg
cld
xchg
adcb
xchg
sar
jo
lret
or
push
cwtl
lods
bound
add
push
outsl
loop
out
inc
sbb
sub
sub
xchg
push
pop
adc
jecxz
fcoml
imul
xor
enter
outsb
scas
sbb
in
add
nop
or
lods
fstps
cmp
leave
inc
add
outsb
aam
sahf
ds
mull
mov
out
shrl
lcall
mov
cltd
out
add
add
pop
call
scas
push
dec
jnp
rdtsc
mov
imul
cld
sti
sarb
lock
mov
xchg
jo
clc
imul
pop
or
popa
lcall
push
leave
push
xor
sar
sub
adc
xchg
lret
call
mov
pop
mov
and
fisttpll
jnp
in
orb
pop
push
xchg
pusha
xchg
mov
cmpsb
pop
mov
xlat
jne
mov
out
adc
inc
imul
adc
mov
imul
fsubr
insl
jnp
xchg
xor
cmc
or
das
shl
push
rcrb
mov
roll
pusha
icebp
xor
imul
fwait
jbe
and
insl
and
pop
mov
cmpsl
xlat
ja
dec
pusha
test
std
addb
cld
clc
call
add
cltd
inc
mov
cmp
clc
pop
inc
pushf
cmp
jne
inc
ja
dec
push
xor
and
mov
mov
push
incb
xor
out
adc
dec
inc
push
rcr
and
sahf
dec
imul
rorb
in
jg
push
xor
inc
outsl
scas
push
cmp
jne
inc
mov
sbb
ret
mov
mov
fwait
inc
jns
inc
sarb
or
xor
outsl
xor
repz
or
outsb
inc
jo
cwtl
ljmp
xor
push
and
sti
mov
aas
xchg
mov
add
push
mulb
call
test
inc
sbb
sbb
add
push
sub
mov
mov
rcrl
in
popf
das
or
and
push
mov
aad
mov
push
push
push
fs
jno
push
jne
inc
mov
mov
push
test
aad
and
lock
mov
xlat
fidivrs
pop
cmp
dec
add
loope
jg
dec
cmp
aas
into
test
call
into
sbb
cmp
sub
xchg
mov
jle
push
xorb
mov
xor
push
js
xor
loopne
pop
mov
pxor
adc
jmp
and
mov
faddl
das
sbb
mov
mov
adcb
popa
pop
lss
mov
or
pop
filds
sub
lods
scas
and
mov
dec
stos
or
add
cmc
popf
adc
add
js
sub
into
enter
nop
inc
cmp
dec
push
push
dec
mov
mov
sahf
xor
aas
mov
jmp
xor
subb
lcall
cmpsl
inc
mov
pusha
mov
rorb
das
xchg
pop
in
sbb
xchg
or
lock
lock
pop
into
adc
stos
ja
ret
fs
sti
das
outsb
or
stc
lahf
dec
loope
andb
dec
pushf
adc
jmp
mov
lds
pop
ss
in
push
jmp
int
leave
popa
adc
add
dec
add
rorb
popa
mov
mov
xor
mov
jo
jp
sbb
fcomps
out
pop
insl
inc
je
fisubs
hlt
add
sub
lock
cld
and
or
jno
pop
rcrb
or
add
pop
mov
xor
ret
loopne
xchg
sub
xlat
add
sarb
xorl
dec
cmpsb
test
aad
mov
data16
sub
mov
leave
or
push
push
cmp
mov
test
outsl
sub
add
push
xchg
add
dec
call
enter
mov
inc
mov
pop
imul
dec
add
pop
sub
test
adc
aam
nop
dec
lock
or
mov
mov
inc
adc
mov
push
mov
ror
daa
imul
lret
or
mov
fs
cli
inc
jnp
sbb
mov
cld
movsl
mov
jecxz
mov
sahf
mov
jmp
mov
xor
or
cli
test
mov
mov
repz
lods
stos
and
ds
dec
add
and
fcomps
pop
mov
in
mov
ss
fiaddl
int3
das
mov
inc
in
sbb
roll
jge
lds
outsb
mov
in
adc
sarb
and
lcall
shlb
test
dec
pop
mov
ja
add
loopne
sub
ret
rolb
jmp
mov
push
aam
scas
fwait
fwait
sbbb
xchg
cmp
gs
test
sub
sbb
data16
out
adc
rcrl
or
mov
and
add
mov
sbb
int3
iret
sub
add
mov
shlb
sbb
mov
sbb
xchg
lea
push
and
loope
xchg
mov
in
pop
shll
les
mov
dec
fldcw
push
in
sub
mov
ja
aas
out
cld
add
jp
add
jno
sbb
hlt
cmp
insl
clc
leave
xchg
dec
stos
incb
jge
push
loopne
push
sub
and
or
jbe
cmp
pushf
xor
adc
mov
inc
pusha
aam
fcoml
add
cmp
jbe
push
jle
jo
fsubs
stc
pop
lock
mov
inc
in
popf
adc
add
xor
aam
aas
addr16
add
mov
pop
add
add
dec
mov
push
leave
loop
rolb
mov
xor
add
cmp
xchg
leave
mov
or
lds
jg
jnp
imul
jecxz
sbb
inc
fld
pop
pop
xor
negl
jno
fisttpl
mov
pop
xchg
xchg
mov
arpl
sahf
hlt
scas
mov
sti
push
add
repnz
daa
add
jge
pusha
dec
push
mov
cmp
add
in
sub
loop
add
mov
es
jle
pusha
adc
pop
push
jnp
pop
inc
or
inc
daa
stos
inc
push
aam
xor
loope
adc
pop
fstl
movsl
pop
push
ret
filds
outsb
in
cld
sub
icebp
xchg
mov
and
add
stos
arpl
mov
push
mov
push
pop
jae
arpl
sbb
pop
pop
push
popf
fadd
cmp
mov
push
cmp
dec
daa
popa
pop
push
xorl
sbb
addb
adc
ret
testl
mov
pop
fcomip
dec
add
mov
sub
movl
add
lods
cmpsb
pusha
cmpsl
lahf
add
stos
adc
in
negb
int3
dec
or
or
ret
rcr
mov
adc
lods
sub
jmp
inc
add
and
cmp
inc
jecxz
sbb
adc
jns
cmp
xchg
xor
arpl
add
jb
xchg
inc
dec
aas
les
add
jae
cmc
jg
in
dec
xor
jno
leave
js
shr
std
insl
pop
jnp
sub
add
mov
movsb
lea
aaa
pop
mov
inc
imulb
xchg
lods
and
xchg
push
movl
js
xlat
push
repz
dec
add
in
add
jbe
in
sub
pusha
add
fistl
xorb
std
movl
mov
aad
xor
dec
mov
inc
adc
arpl
jmp
fbld
mov
dec
rorl
addr16
xor
mov
call
add
dec
mov
pop
push
ss
mov
push
lcall
adc
push
sbb
sti
sbb
and
or
aam
mov
sub
leave
sbb
int
inc
add
mov
add
adc
mov
jbe
shr
mov
sub
mov
jecxz
fistps
add
std
add
adc
call
test
sub
aaa
xchg
andb
cltd
scas
ds
pop
gs
mov
arpl
aam
cmpsb
push
sub
movsl
and
aad
outsb
inc
add
jmp
sub
push
jl
adc
jmp
and
mov
nop
and
repnz
lds
fwait
in
js
mov
pusha
bound
xchg
lods
inc
push
cmp
xor
push
cld
in
cmp
outsb
fwait
addb
daa
mov
testb
inc
out
mov
pushf
std
imul
jb
jecxz
mov
xor
xchg
xchg
inc
inc
incb
add
cmp
cld
mov
or
add
movups
sbb
mov
fwait
loope
stos
enter
dec
cmp
mov
inc
out
lods
cli
pop
push
dec
enter
js
stc
xchg
push
lods
dec
push
inc
stos
imul
cli
jp
dec
xor
cmp
popa
push
rorb
add
push
call
push
outsb
lock
sub
pop
xchg
and
aad
jmp
jg
sbb
mov
and
popf
lret
shlb
xor
in
or
and
pop
mov
pusha
push
jge
pop
pop
push
push
push
pop
pop
mov
cltd
lods
lods
test
pop
sub
add
pop
lahf
xchg
out
cwtl
daa
mov
sahf
mov
dec
xchg
outsb
inc
and
sub
cs
inc
push
sbb
xor
mov
test
in
ffree
std
adc
and
imul
lret
test
cmp
and
pop
pop
popa
dec
ljmp
pop
jmp
in
rcrb
out
inc
aas
xor
inc
sub
and
adc
jge
cmp
aad
mov
mov
test
lea
xor
jle
xor
shl
scas
pop
dec
jmp
add
iret
test
mov
sub
mov
inc
pop
lahf
mov
ds
pusha
cmp
xchg
out
push
sbb
stos
insl
and
int
push
aad
add
pop
nop
mov
or
in
xchg
push
stc
dec
jg
push
jmp
test
inc
sub
pop
sbb
jg
cmp
aas
xor
dec
les
push
mov
fdivrp
fsubrl
int
loopne
stc
mov
in
dec
push
popf
pusha
mov
jnp
popa
sbb
ret
mov
jmp
cs
adc
add
test
daa
fld
inc
or
sbb
push
push
xchg
nop
test
and
adc
pop
imull
fs
push
mov
mov
dec
add
fists
or
lods
mov
pop
rcll
push
xchg
fwait
xchg
adc
jno
adc
rcrl
and
mov
das
testb
cwtl
js
roll
mov
inc
mov
push
mov
add
mov
fnsave
lods
push
pop
sub
sub
sbb
pop
imul
sbb
or
popf
mov
add
mov
mov
adc
cltd
adc
popf
nop
xor
jmp
bound
ret
imulb
loopne
dec
mov
ds
mov
cmp
out
loopne
in
insb
add
lret
int3
push
xchg
shlb
or
adc
cmpsb
adc
int
loope
nop
mov
dec
fisttpl
mov
jnp
das
inc
outsl
dec
add
cmp
xacquire
push
hlt
mov
mov
rolb
inc
lea
mov
xchg
sub
addb
loopne
sub
xchg
dec
call
outsl
push
jl
icebp
arpl
push
pop
hlt
mov
mov
sbb
mov
sub
out
inc
cltd
aam
ljmp
fisttpll
pop
mov
xor
insl
in
and
popa
inc
push
or
or
sbb
inc
sub
sti
mov
pop
pop
shrl
aad
adc
mov
adc
sub
mov
push
mov
pop
pop
sub
adc
or
xor
pop
pop
jecxz
or
mov
pop
lods
cltd
rol
mov
je
cmc
andl
jo
loopne
inc
popf
inc
adc
add
test
sbb
imul
and
and
shll
mov
cmp
hlt
add
adc
inc
jne
or
popf
or
test
scas
outsl
leave
add
in
cmp
mov
cmpsl
inc
jno
fisubl
fs
sbb
and
mov
pop
mov
cld
or
cwtl
jg
aas
adc
call
add
sub
jmp
ret
pop
aaa
mov
stos
pusha
loop
aad
pop
add
jno
pop
ret
cmpsl
lcall
mov
mov
mov
outsb
push
add
or
mov
loop
std
jge
mov
test
adc
xor
test
lock
dec
add
aam
and
mov
int
xor
dec
xor
popf
xchg
cmp
jg
ret
mov
push
in
outsb
and
pop
cmp
fisttps
pop
pop
repz
sbb
adc
dec
mov
adc
imul
or
mov
aam
add
push
dec
shlb
xchg
imul
sbb
pop
push
pop
jmp
dec
inc
xor
jmp
dec
out
in
add
aam
fisttpl
push
fucomip
call
icebp
scas
enter
mov
add
push
jl
fistpll
repnz
jmp
mov
out
mov
pop
inc
fisttps
daa
xor
adc
push
mov
subl
add
sahf
sbb
fbld
sarb
push
add
mov
cmp
rorb
aas
add
and
push
pop
xchg
dec
adc
cwtl
or
cmpsb
cmp
in
and
mov
pusha
popa
popf
adc
lahf
xor
test
inc
xor
clc
mov
leave
xchg
fildl
xor
push
ljmp
sbb
popf
pop
xchg
outsb
adc
ja
nop
pusha
cmp
add
pop
lahf
andnps
push
xor
and
dec
cmc
push
shll
push
incb
addl
repnz
sbb
cld
cmp
mov
in
loope
push
lret
sar
test
xor
mov
sbb
repnz
leave
jmp
mov
adc
repz
andb
mov
sub
dec
pop
or
sbb
or
testb
stc
and
xor
push
fs
push
dec
pop
xor
testl
cld
js
dec
xchg
in
push
cmp
addb
and
inc
sub
movsb
js
adc
cmp
mov
mov
and
sub
into
sbb
sar
xorl
cmpl
xchg
push
or
out
add
or
nop
mov
movsl
cwtl
push
scas
mov
jne
xor
xchg
daa
adc
nop
clc
xchg
nop
pop
aas
stos
xchg
jle
pop
enter
pop
orl
rcll
xor
mov
adc
add
nop
push
pusha
sub
mov
adc
inc
std
xchg
mov
sbb
sbb
jnp
stc
nop
mov
push
jmp
mov
shll
popa
add
in
xchg
lret
pop
ds
sarb
adc
push
pop
popa
xchg
xchg
bound
xchg
imul
fidivl
push
clc
movsb
adc
push
out
jmp
sarb
jle
sub
daa
xchg
popf
pop
jb
inc
lahf
mov
outsl
jne
xchg
xor
popa
and
out
lods
add
adc
imul
push
push
or
mov
push
and
jno
xor
test
sbb
dec
add
xchg
pop
push
xor
add
mov
shll
insl
push
inc
sub
cwtl
adc
lds
xchg
in
pop
cltd
insb
call
push
das
jecxz
pop
mov
mov
sarl
add
aam
lret
add
loope
jge
rolb
pop
push
push
pop
pop
movsb
cltd
pusha
mov
add
ret
and
orb
ljmp
dec
pop
sbb
shll
outsl
cwtl
call
std
sub
or
inc
xchg
cmp
sub
jns
subb
sbb
dec
fmull
aas
adc
and
xor
bound
xchg
mov
inc
dec
notb
adc
lea
inc
adc
xchg
mov
mov
sbb
xchg
push
push
mov
adc
cmp
test
lret
insl
mov
xor
aad
insl
adcb
das
xor
cltd
aas
fcomp
int3
lahf
nop
add
fiaddl
imul
and
cs
xor
sub
or
jns
sbb
in
inc
aaa
xchg
enter
adc
mov
cmpsl
adc
jg
shrl
fnstsw
adc
mov
test
and
das
sbbb
push
push
push
pop
mov
add
pop
xchg
adc
add
pop
cwtl
test
push
fcoms
inc
add
xchg
orb
fcoms
imul
xor
or
push
inc
das
dec
imul
jae
jo
mov
dec
lret
cli
jns
jmp
sbb
stc
andb
sbb
pop
hlt
loopne
push
jmp
mov
daa
mov
shr
jb
cwtl
sbb
mov
xchg
dec
insb
fstps
int
lock
mov
outsb
dec
arpl
fadds
dec
pusha
or
and
outsl
mov
rdtsc
mov
aas
jp
add
shrb
rolb
cmp
popa
jb
sbb
mov
stos
jg
adc
add
jo
scas
add
das
and
mov
in
xor
cltd
add
stos
dec
loope
test
dec
mov
loopne
jnp
scas
fldt
jno
int3
pop
les
rcll
cmp
and
pop
adc
inc
movswl
jmp
or
pusha
sub
orl
xchg
mov
lock
add
xchg
and
xchg
inc
fidivs
mov
xor
xor
or
inc
add
enter
das
mov
fs
pop
inc
cltd
fadd
dec
loop
cld
or
push
or
das
fs
cli
mov
push
cld
outsl
bound
or
fstp
dec
dec
pop
pop
sbb
lods
test
dec
pop
mov
clc
mov
fdivs
mov
mov
mov
push
inc
xlat
cs
or
jo
movsl
add
push
dec
fidivl
repz
or
lds
jno
xor
imul
add
push
adc
orl
mov
jmp
lcall
pop
xchg
push
nop
lret
pop
xor
ret
mov
addr16
daa
jno
int
push
fstl
cs
pusha
pop
sbb
loope
fsub
jmp
testb
add
fisttpl
xor
push
pop
stos
jmp
xor
jmp
stos
inc
test
dec
fildl
stos
inc
dec
xor
add
aaa
add
shlb
pop
loop
dec
adc
out
jle
or
jno
xchg
rorl
std
and
int
push
sarl
add
fwait
in
in
test
jo
arpl
jno
add
ror
or
pop
das
and
pop
jecxz
shl
add
das
vmovhps
jle
pop
or
pop
mov
cmpsl
or
enter
push
adc
gs
cltd
sbb
mov
mov
clc
pop
jb
loop
or
out
jne
jl
add
mov
mov
or
and
fmuls
cmc
test
push
addb
and
inc
adc
pop
stos
xor
add
rclb
xor
xchg
xchg
lret
or
cli
dec
push
movsl
and
nop
sbb
sarl
jnp
xchg
jb
das
popa
cltd
sub
jmp
inc
dec
pop
int
test
and
test
lock
push
jo
pop
inc
lea
xchg
jns
inc
push
mov
xor
mov
pop
das
ret
idivb
outsl
aam
pusha
mov
rcl
push
popa
add
cmp
fsubl
mov
dec
mov
mov
mov
xor
shrb
push
das
insl
inc
cmp
popl
jb
fildll
pop
jmp
inc
out
insb
cmp
pusha
lds
leave
pop
jp
mov
sub
cmpsl
sbb
das
je
mov
emms
insl
leave
add
jp
adc
idivl
and
and
imul
jo
jne
divb
sti
loope
and
call
cmp
ret
aas
pop
sbb
adc
adc
pop
fildl
mov
and
movsl
sub
nop
jecxz
xor
push
mov
pop
add
dec
add
in
pusha
fimuls
dec
or
xchg
popa
stos
adc
push
add
pushf
decl
enter
jbe
sub
add
push
movsb
jp
scas
sti
or
cmp
mov
cmpsl
jecxz
cmpsb
mov
jbe
add
xchg
jge
sbb
add
rclb
inc
add
arpl
aas
dec
ljmp
and
loopne
cmpsl
mov
nop
jne
dec
mov
outsl
repz
add
lahf
fisttpl
and
ret
adc
cld
loope
jns
mov
xor
outsl
outsl
orl
ljmp
pusha
jg
leave
jmp
xor
or
mov
loope
add
mov
roll
daa
adc
mov
push
sub
push
mov
adc
movsb
add
push
jo
jmp
imul
mov
mov
mov
add
in
cmp
ret
sti
jge
bound
stc
dec
push
js
mov
sbb
sbb
mov
and
pop
cld
fstpl
fwait
insl
shlb
add
add
mov
adc
and
add
ret
push
pop
pop
movsl
out
jb
and
pushl
sbb
mov
andl
pop
add
popf
pop
imul
mov
or
mov
adc
mov
mov
inc
add
sbb
cmpsl
cmpsl
jae
js
popl
adc
xchg
cli
mov
out
or
mov
pop
push
pop
pushf
jo
lea
lcall
xchg
xchg
lcall
test
out
mov
andb
push
iret
icebp
add
xor
sti
sub
add
push
ret
pushf
int
movsb
ja
popf
rcrb
cmp
pop
movsb
shlb
or
push
stc
lock
add
cmp
popf
rcll
fistl
loop
push
or
pop
or
xchg
push
fcoml
adc
inc
iret
sub
dec
add
xlat
aaa
fdivrl
iret
ret
lea
sbb
push
jp
inc
sub
inc
fwait
push
push
mov
xchg
stc
xchg
ficomps
sub
daa
cmp
pop
and
mov
fisubl
popa
mov
and
jns
pushl
je
sbb
repnz
and
rol
inc
add
mov
outsb
pop
or
mov
add
xorl
jnp
adc
pop
popa
pop
sub
add
mov
lret
int3
out
and
add
andl
je
test
sub
cmp
repnz
loopne
mov
cmovg
pop
repz
popf
and
xor
or
xor
mov
icebp
rorl
mov
pop
xor
add
popf
daa
cwtl
repnz
outsl
mov
idivb
dec
sub
cld
fnsave
in
mov
sbbb
sbb
pop
mov
dec
add
outsb
outsl
call
pop
pop
pop
arpl
xor
cmp
out
repz
fs
adc
push
cwtl
pop
jbe
pop
lock
pop
adc
pusha
shlb
clc
cmp
and
mov
sbb
push
mov
push
jmp
pop
in
dec
ficoms
push
sub
pop
lods
ljmp
sub
aaa
or
cmp
lock
lcall
pop
sub
inc
adc
iret
jp
lea
push
movsb
jmp
test
xchg
out
sub
mov
and
lods
in
rcll
std
inc
and
xor
adc
dec
add
out
jns
lods
and
add
nop
icebp
outsb
sbb
in
mov
fmul
stc
and
repz
popf
or
aaa
xchg
outsb
jle
aas
xor
jns
lds
enter
lods
or
imul
mov
xchg
push
addl
subb
mov
push
cmpsb
sub
sbb
mov
and
insl
dec
popa
mov
into
push
fildl
addl
mov
int3
push
or
jb
adc
add
cmc
lahf
push
cmovb
mov
add
dec
push
subb
push
out
dec
mov
add
jns
imul
jae
adc
jns
addl
mov
test
push
loop
xchg
js
pop
xchg
fwait
sahf
xorb
loop
mov
lock
pusha
lods
repnz
js
xor
or
sbb
cmp
inc
sub
sbb
jnp
in
mov
push
rclb
lds
mov
das
fcmovne
sar
in
xchg
cwtl
pop
and
pop
xchg
jmp
cmpsl
xor
cmp
scas
push
dec
xor
xchg
mov
jmp
dec
or
data16
add
push
xchg
mov
jne
xor
test
add
out
imul
es
and
pusha
insl
lods
push
push
test
push
fs
insb
fcompl
mov
jecxz
pop
mov
cmp
mov
and
dec
pop
cmp
pop
adc
add
adc
jnp
mov
popa
mov
adc
dec
cmp
and
insb
sub
jecxz
out
xor
iret
xor
ret
pop
push
inc
sbb
pop
mov
mov
jbe
add
cmp
sub
shll
stos
dec
in
stos
cmp
jo
ja
mov
call
push
lea
stc
into
add
jl
cltd
mov
mov
mov
les
stos
outsb
pusha
add
dec
fdivl
adc
xor
fwait
mov
fsubl
add
add
pop
dec
inc
je
dec
hlt
pop
inc
repz
lds
or
pop
or
std
imul
lods
icebp
mov
sti
push
cld
in
repnz
fwait
push
rorb
push
outsb
out
or
mov
mov
pop
stc
je
xor
lea
in
adc
push
xchg
adc
add
pop
popf
mov
nop
mov
push
push
push
lea
ds
cmpsb
in
dec
add
pop
xor
std
mov
mov
jmp
or
sub
mov
cs
aas
faddl
fldt
add
pop
jl
dec
mov
jg
adc
nop
jecxz
dec
mov
push
rclb
adc
loope
stc
in
cwtl
das
nop
and
sub
adc
outsl
inc
inc
ror
icebp
inc
popf
xor
inc
push
pop
cmpl
daa
inc
add
pop
addr16
push
or
repnz
mov
adc
test
stos
xchg
push
outsb
daa
adc
gs
adc
and
mov
xchg
inc
and
xor
and
in
loopne
xor
adc
and
adc
add
mov
add
or
daa
mov
test
or
daa
jecxz
test
sub
pusha
sub
jno
ja
push
shll
out
mov
sbb
std
jge
xchg
adc
push
xor
jg
adc
mov
sub
sbb
push
push
sti
stc
dec
jmp
or
xor
xchg
mov
push
mov
idiv
mov
sbb
mov
scas
and
or
xchg
pop
push
inc
mov
rcll
fildl
sbb
loop
push
adc
xchg
loopne
push
pop
in
push
das
nop
mov
popf
and
add
ud1
fstl
mov
push
and
nop
out
xchg
add
push
dec
test
sarl
push
cltd
adc
pop
mov
int
in
cmp
mov
mov
and
test
mov
sahf
mov
jno
pop
mov
adc
jno
pop
push
ret
movsb
mov
imul
call
test
or
adc
inc
cltd
or
pop
test
loop
push
add
pop
call
xor
loope
add
add
jecxz
leave
cmp
incl
daa
inc
les
push
bound
insl
and
loop
pop
daa
cmc
call
scas
in
cmc
rorb
or
jl
xchg
xchg
cmp
mov
inc
add
pop
fiaddl
mov
xchg
shlb
xchg
aam
mov
lret
rolb
mov
popf
pop
dec
mov
mov
cmpsl
inc
jmp
xor
xchg
or
push
add
and
pop
movsb
les
scas
imul
push
and
fwait
adc
lea
pop
or
adc
mov
shlb
std
jns
fcompl
add
cli
js
loope
outsb
ljmp
es
mov
leave
movsl
stc
inc
imul
mov
icebp
ljmp
pop
add
lcall
inc
push
mov
data16
cmp
hlt
int
andb
aas
cmpsl
mov
cmp
fsubrp
les
mov
mov
adc
ficoml
push
mov
push
ljmp
jecxz
sbbl
add
stos
push
push
leave
cltd
pop
push
cmpsb
push
mov
adc
outsb
and
adc
scas
push
and
add
in
xchg
adc
jns
int
jne
gs
add
inc
daa
test
jge
sub
icebp
dec
pop
das
cmp
jecxz
sub
popa
js
inc
sbb
cwtl
lea
jo
xchg
fwait
mov
aaa
cld
mov
jmp
mov
xchg
mov
jae
lcall
dec
sbb
xchg
das
adc
mov
xchg
inc
andb
adcl
mov
movsl
add
jg
xchg
sub
cltd
mov
jo
adc
jne
lock
mov
ret
sbb
pop
jb
inc
pop
xor
pop
push
mov
pop
stos
cmp
dec
mov
xchg
xor
mov
inc
mov
mov
sub
add
mov
outsb
mov
or
fsubrs
insl
subb
add
in
cmp
das
dec
into
in
mov
loopne
jns
dec
leave
and
cmpsb
hlt
mov
sbb
les
into
or
nop
push
outsb
xor
dec
xchg
imul
dec
cs
inc
jb
nop
mov
sub
aam
sub
mov
mov
daa
incb
mov
popf
xor
mov
xor
mov
xlat
mov
sbbb
stos
imul
int
inc
js
shrl
cmp
push
add
mov
xchg
push
in
jle
jne
in
clc
dec
mov
daa
jecxz
je
inc
mov
roll
pushl
stos
clc
int3
push
xchg
pop
shll
je
lods
les
bswap
mov
mov
add
gs
mov
adc
mov
xor
cltd
add
jmp
xchg
push
lea
clc
je
sub
cld
mov
pop
movsb
sbb
cli
pop
mov
and
inc
dec
test
adc
xchg
pusha
xchg
mov
add
jnp
cmp
xchg
pop
shrl
in
pop
xchg
jns
xchg
or
not
cs
jbe
sarl
out
loopne
mov
lods
test
add
popf
sbb
adc
test
sti
mov
sub
sub
sbb
outsl
popf
xor
fiaddl
add
in
and
and
bswap
bound
out
in
insl
and
dec
add
sub
popf
inc
pop
iret
jg
or
rcl
mov
jp
dec
call
shlb
sbb
dec
mov
lahf
push
and
push
dec
repz
dec
mov
xchg
mov
pop
mov
add
pop
bound
mov
lahf
dec
sahf
out
add
or
cmpsb
jmp
negb
sahf
js
dec
xor
and
bound
int3
aad
xchg
jnp
shrb
jno
adc
outsb
mov
cmp
sbb
xchg
or
sti
mov
fstpl
imul
sbb
jns
xor
fldt
inc
pop
adc
daa
popf
xor
out
push
push
inc
iret
push
call
sbb
lods
sub
aam
inc
mov
orb
std
fistl
stc
ss
aam
xor
es
jge
push
cmp
add
sub
cmp
inc
or
adcl
stc
adc
cltd
xchg
idivl
dec
xor
push
dec
sbb
xchg
push
cmp
in
repz
orl
mov
pop
jg
cltd
cmp
add
int
cmc
cmp
add
adc
pop
and
scas
pop
mov
icebp
sar
mov
js
in
adc
xchg
mov
mov
out
and
xor
and
shll
cmpsl
xor
imul
pop
push
stos
inc
out
cmp
pop
pop
mov
mov
testb
sub
add
or
iret
add
cwtl
notb
inc
dec
cmp
test
or
cltd
mov
add
mov
add
add
mov
daa
xor
in
dec
mov
cmp
mov
lods
or
fcomip
lcall
fisubrs
pusha
and
jp
jb
jb
mov
test
mov
lahf
inc
adc
cmp
mov
popa
pop
xchg
add
mov
adc
das
call
aaa
les
sub
xchg
jns
and
dec
mov
jle
div
enter
mov
pusha
clc
andb
xor
push
jo
popa
sahf
daa
sti
inc
push
pop
xchg
sahf
add
mov
cmp
cltd
les
incb
sub
mov
jno
sahf
hlt
out
loop
xchg
or
ds
push
inc
jl
pop
out
popf
add
inc
ja
add
inc
or
xchg
inc
dec
pop
lods
and
mov
in
mov
idivb
push
mov
push
test
out
jns
xor
mov
movsb
cld
or
repnz
lcall
shl
sbb
push
dec
pop
shll
mov
mov
adc
scas
cmpsb
pop
and
mov
dec
ss
mov
add
xor
cs
roll
loop
in
pusha
or
mov
pop
xchg
pop
pop
jno
sbb
movswl
or
mov
inc
int
ret
mov
jl
bound
inc
call
imul
pop
lea
push
cmp
push
nop
mov
dec
and
xor
loop
das
pushl
les
mov
xor
push
testl
cmp
mov
mov
xchg
pusha
aad
lock
jmp
iret
add
fcomi
inc
sub
arpl
push
dec
shll
add
ret
add
mov
jne
mov
pop
clc
ffreep
les
push
xor
and
sub
mov
xchg
xor
je
dec
repnz
push
jno
xor
shll
sub
mov
enter
pop
cli
les
and
xor
stc
push
jbe
xchg
ljmp
aas
jecxz
add
mov
cs
adc
xor
push
xchg
pop
dec
pushf
xchg
popf
and
pop
pop
inc
xor
loope
and
fstpl
sub
jecxz
push
add
movsl
push
xor
in
and
mov
inc
inc
adc
sub
or
add
ds
jno
adc
dec
ret
mov
cmpsb
hlt
mov
addb
push
cmpsb
or
add
loope
pop
or
in
dec
add
test
inc
clc
inc
adc
cld
jecxz
loope
and
jp
add
xor
sarb
arpl
bound
mov
add
xlat
ss
and
clc
and
notb
pop
cs
mov
mov
inc
pusha
mov
xchg
sbb
mov
cmp
inc
stos
jp
jb
mov
mov
and
jbe
push
xchg
pop
cmpb
mulb
test
inc
sbbl
dec
sbb
daa
pop
clc
cmp
jle
test
sub
pop
cmp
mov
sbb
fistpll
adc
cwtl
test
xchg
into
pop
jbe
push
outsl
adc
popf
mov
adc
ja
imul
out
ret
inc
push
add
fsts
inc
jmp
or
pusha
mov
xchg
mov
push
sti
jne
in
sbb
int
mov
and
push
pop
lcall
mov
ljmp
lcall
dec
jg
cmc
mov
mov
je
pusha
mov
pop
nop
and
pop
das
xor
pop
out
hlt
or
movb
test
fcompl
jmp
es
popa
push
pop
mov
shlb
or
adc
sbb
inc
adc
aas
xor
push
cmp
mov
mov
or
rorl
js
in
cmp
aam
pop
sub
push
adc
pop
pop
iret
inc
nop
inc
cmpb
add
cli
cmp
cmp
pop
mov
js
out
and
call
or
ss
cltd
mov
xchg
scas
mov
push
pop
pop
mov
adc
stos
xor
ljmp
cmp
outsb
and
test
fdiv
lock
push
aas
lods
xor
add
es
stos
adc
pusha
cmpsl
inc
ss
xchg
addr16
mov
jg
or
dec
popa
jmp
xchg
fsubr
pop
add
push
cli
inc
stc
xchg
in
sub
mov
popf
adcl
insb
add
jae,pn
clc
sub
fucom
inc
sbb
adc
and
pusha
out
test
inc
add
mov
into
inc
add
orb
mov
xchg
mov
add
dec
fwait
movsb
hlt
lods
pop
lock
or
ret
insb
push
jbe
dec
popa
cmp
pushl
push
jl
push
xor
pop
xchg
data16
scas
mov
ja
inc
fs
sbb
imul
loope
inc
lret
jnp
cmp
xchg
inc
faddl
jbe
inc
test
jl
sub
jp
paddusw
insb
inc
fs
push
xchg
dec
cmpsl
and
cld
mov
ret
xlat
pop
sub
test
xchg
dec
pop
cmpsb
sbb
shrb
daa
jecxz
pusha
and
sub
lea
fwait
cmpsl
and
nop
add
and
mov
dec
cld
jno
test
je
pop
pop
daa
cli
mov
and
frstor
pusha
jno
in
xor
lret
or
lcall
adc
add
mov
xor
sbb
xor
inc
push
nop
ljmp
push
mov
in
mov
test
in
test
inc
mov
shll
cs
dec
out
or
popf
insl
or
cmp
push
addr16
or
popf
in
pop
mov
test
mov
push
aas
and
mov
out
mov
sub
sbb
out
daa
pusha
sbb
cmpsl
jb
sub
insl
out
push
jnp
popl
rcl
adc
jbe
mov
push
pop
xchg
add
add
cmp
clc
jnp
out
fcomps
fcmovbe
enter
sub
adc
dec
dec
idivl
dec
pop
shrl
leave
pop
adc
xchg
in
mov
lea
clc
cli
push
test
imul
push
daa
jle
xchg
fsubrp
daa
lods
xor
mov
sbb
scas
or
push
add
fisubs
mov
jbe
imul
add
jno
outsb
imul
push
add
jmp
loope
mov
xchg
fmuls
add
push
jp
add
outsb
cmpb
les
ss
cmpsb
clts
xlat
int
mov
mov
adc
es
loop
ljmp
cli
les
xchg
fcomps
add
jle
lahf
add
xor
jne
jnp
sbb
adc
shll
or
or
das
dec
aaa
cld
lret
sti
and
pusha
mov
mov
das
lcall
jle
cmp
dec
jne
fmul
sub
inc
inc
push
pop
add
adc
es
shll
pop
pop
pop
add
aas
inc
jae
xor
or
push
jb
or
in
fdivl
push
les
lods
movsl
nop
mov
clc
cld
movsb
add
rcr
mov
cmp
cs
mov
push
pop
fsubs
or
sub
xor
adcb
jle
dec
mov
test
in
dec
sarb
sbb
xchg
mov
mov
cmp
mov
addb
out
pop
push
push
test
xorb
dec
imul
sub
cmp
ret
cmp
and
fidivl
jb
mov
loopne
jnp,pt
xor
or
adcl
popf
push
out
mov
pusha
add
xchg
push
sub
cmp
sti
mov
cmp
pop
add
push
andb
filds
sub
or
cmpsl
xorb
nop
or
cwtl
stos
test
pop
dec
ffreep
out
or
js
jg
mov
ss
pop
cs
adc
adc
and
ds
fcmovu
mov
adcb
xor
icebp
xor
inc
mov
mov
loop
cmp
lcall
outsl
mov
pop
adc
mov
dec
jbe
fsin
push
aaa
pop
popa
mov
push
push
xchg
dec
jecxz
xor
cltd
repnz
into
fiaddl
mov
adc
mov
inc
inc
fs
movsb
shlb
jb
dec
pop
test
clc
call
fnsave
pop
add
mov
lock
mov
sbb
inc
addl
push
pop
dec
jmp
mov
cwtl
loopne
push
jns
popf
dec
dec
sub
sub
dec
hlt
jmp
add
repnz
sbb
das
add
dec
sbb
add
sbb
sub
xlat
sbb
arpl
call
jnp
das
popa
rcrb
add
adc
cmp
xchg
xchg
mov
xor
mov
inc
lock
dec
icebp
sub
test
test
push
lahf
insl
js
pop
add
out
xchg
xchg
sarl
ret
sbb
popf
adc
pusha
fsubrl
ret
sub
and
and
lea
mov
sarb
xchg
rorl
mov
pop
fisubl
xchg
out
inc
popf
cwtl
stos
test
lret
jo
stos
clc
ljmp
push
in
ffree
xchg
jnp
cmp
pop
sub
popa
mov
push
aas
push
repnz
xchg
scas
adc
pop
sub
xor
sbb
mov
or
inc
mov
cltd
push
push
xor
mov
xchg
mov
mov
or
pop
stc
dec
adc
ljmp
jae
movsl
mov
dec
mov
or
repnz
or
xor
pop
or
mov
enter
add
daa
jmp
icebp
inc
sbb
dec
in
xor
call
and
ret
sub
in
enter
shll
push
and
add
add
outsl
shll
mov
pushf
mov
dec
cld
movl
xchg
xchg
dec
sbb
mov
add
mov
adc
cmp
in
scas
add
bound
cmpsl
dec
popf
call
in
aam
gs
inc
sbb
sbb
shlb
jno
lahf
push
dec
xor
sbb
popa
jge
das
mov
rcll
mov
cmp
xor
push
sub
push
popf
cltd
cmp
ja
mov
ss
sub
stos
add
add
popf
incb
lds
and
pop
das
mov
lods
pusha
add
movhps
pop
popa
repnz
loopne
repz
xchg
mov
arpl
pop
push
sti
sub
test
dec
pop
enter
mov
fmul
daa
inc
bound
inc
sbb
push
jmp
rcr
push
fcoml
and
ja
xor
stos
add
mov
popa
pop
xchg
sbb
push
push
add
mov
dec
mov
aas
sahf
or
cli
stc
mov
jnp
test
mov
je
stos
push
jae
mov
out
cltd
xor
rcll
or
jno
imul
pop
mov
cld
mov
jp
xchg
cmp
out
dec
adc
xor
imul
test
lret
out
outsl
fadds
mov
sbb
xchg
mov
jg
sub
add
cmp
popf
adc
decl
aam
xor
out
sub
add
movsb
mov
pushf
es
lds
and
push
add
jmp
push
fwait
incb
cmp
fisubs
xor
mov
add
xlat
ljmp
and
shrl
into
inc
sub
repz
pop
dec
das
or
mov
dec
daa
mov
fcompl
mov
scas
xchg
jg
outsl
les
sbb
add
outsl
movsb
and
std
inc
xlat
lcall
add
sti
and
dec
nop
out
daa
and
mov
sub
mov
popf
stc
jle
bound
fdivs
in
inc
push
jns
clc
mov
xchg
or
and
popa
nop
mov
push
push
imul
mov
cmp
cli
movsb
mov
xchg
aaa
xchg
mov
pop
mov
lods
fcmovnb
fisubl
add
dec
cli
pop
adc
sub
stos
out
cmp
int
and
push
add
sub
imul
pop
in
fisubrl
push
jno
dec
sub
jge
rorl
lods
outsl
fwait
xchg
dec
int
xchg
sbb
mov
or
cmp
adc
jecxz
jns
out
and
rol
xchg
sarl
add
dec
dec
int3
adc
add
push
pop
inc
or
pop
mov
outsl
fistl
sub
out
pop
mov
lea
aaa
aad
pop
popf
iret
data16
jns
sti
jb
mov
lret
jne
push
mov
and
mov
bnd
fwait
or
xchg
cmp
jmp
mov
xor
ss
lock
cmp
roll
push
lahf
adc
aas
add
jnp
xchg
ret
adc
aas
xchg
je
inc
sub
push
test
dec
lret
push
test
clc
sbb
and
stc
dec
mov
scas
add
push
sbb
sbb
jbe
daa
je
divb
pop
test
popf
cli
inc
pop
push
cwtl
out
orl
and
orb
mov
pop
mov
adc
pusha
mov
aam
push
inc
cltd
adc
cmpsl
dec
lret
add
pushf
sarb
sbb
mov
cs
popa
dec
pop
xchg
stos
roll
mov
cmp
mov
sarl
pop
dec
popa
cmpsb
ret
loop
je
pop
mov
sbb
fsubl
lods
pop
lret
fiadds
adc
jmp
push
scas
test
cmp
cmp
insl
in
loop
push
pop
popf
sub
jne
pop
add
lret
stos
mov
test
loopne
fxch
and
ss
stc
mov
dec
push
pushf
jo
es
dec
push
or
add
arpl
fists
ret
sbb
subl
testl
cli
pop
xchg
add
mov
je
mov
pop
add
gs
pushf
ficoml
jge
sub
lock
call
rolb
mov
pop
dec
mov
pop
mov
add
jp
mov
cs
jno
inc
mov
push
sarl
es
sbbb
dec
scas
enter
adc
add
mov
pop
out
mov
cmpsl
cmc
cmp
sub
out
mov
imul
stc
dec
add
out
pop
add
push
adc
pop
fcomp
pusha
mov
jbe
in
push
jae
mov
in
jmp
inc
xor
popa
jge
jle
push
push
push
popf
int3
push
push
imul
sbbb
in
pop
sbb
mov
or
xchg
pop
mov
mov
adc
push
ficompl
sbb
push
pop
aas
mov
cmpsb
push
clc
sub
inc
dec
push
test
adc
enter
mov
mov
das
leave
inc
jle
mov
jg
push
sbb
cs
jle
into
pusha
mov
mov
mov
xchg
js
daa
or
xor
cwtl
inc
and
das
xor
popf
arpl
inc
sub
stos
push
mov
aam
inc
fdivs
pop
fstpl
popa
xchg
pop
gs
dec
mov
adc
add
shrb
popa
pop
sbb
int
ret
inc
jmp
xchg
pop
outsl
int3
loope
xchg
pushf
out
lahf
fnstcw
mov
mov
mov
stos
xor
in
and
and
psubb
jle
dec
push
test
lcall
or
repz
mov
ss
or
jmp
aas
push
addb
xchg
pushf
push
or
lcall
scas
ret
dec
test
js
cs
inc
cltd
ds
push
popf
sub
jbe
cmp
dec
sbb
clc
inc
adc
mov
pop
jbe
mov
adc
int3
add
fs
sbb
xchg
xor
jmp
inc
imul
dec
loopne
add
fistpll
hlt
adc
xor
fcomi
or
mov
add
insl
push
add
xor
ret
mov
or
ja
in
rol
add
test
imul
loope
add
je
cmp
jno
lock
or
jl
aas
inc
lds
call
fstpl
push
push
cmpb
sub
cmp
sub
dec
mov
outsb
into
test
dec
das
pop
cmp
or
jg
sar
jle
and
sbb
xchg
std
jmp
push
nop
dec
cld
push
rcrb
imul
mov
pop
xchg
jo
xchg
roll
shl
adc
outsb
testb
add
jo
pop
jg
cmp
inc
mov
daa
nop
pusha
sti
xor
or
xchg
jp
mov
fisttpll
push
insb
stos
orl
adc
cltd
dec
lahf
ljmp
pop
nop
ja
jo
mov
xorl
fldcw
xchg
push
mov
sbb
mov
faddp
lret
push
pop
loope
das
jmp
and
mov
mov
addps
sbb
add
les
loope
pusha
clc
rolb
sbb
es
and
outsb
lahf
lds
xchg
cwtl
jp
addr16
nop
stos
outsb
call
mov
in
push
mov
ljmp
mov
xchg
jge
lea
jb
mov
stos
mov
popf
mov
push
dec
ficoms
flds
mov
pusha
mov
add
ds
rcr
mov
popf
loopne
push
xchg
inc
add
pop
jmp
add
sbb
sbbb
or
sub
jo
push
in
push
pop
popf
es
cmp
xchg
call
gs
and
lods
stc
mov
pusha
add
xor
int3
addb
mov
mov
fwait
push
rcll
lcall
loop
ret
cmc
or
inc
aas
cltd
cmpsl
mov
jbe
xor
and
outsb
popf
and
pop
push
mov
pop
or
movsl
mov
or
cmp
and
add
bound
es
push
movsl
sbb
jb
mov
mov
lea
xor
cmpsl
pop
mov
outsb
pop
adc
sbb
add
dec
aaa
mov
xor
mov
rcll
push
cmc
pop
xchg
rolb
in
ja
nop
fisubl
xor
add
shlb
jae
aam
cmpsb
mov
dec
jg
add
mov
xor
mov
mov
imul
cmp
test
sbbl
sahf
cvtps2pi
adc
es
dec
xorl
push
mov
andl
mov
mov
xor
aad
pop
jp
jno
fsubs
daa
xor
jae
jge
int
cmpsl
js
xchg
fisttpll
in
negl
sbb
or
xor
scas
dec
fisubrl
adc
sub
loope
lods
sub
jne
add
dec
inc
pop
or
cmp
sbb
int
aam
add
or
mov
shll
aaa
in
or
popl
lahf
cmp
mov
nop
in
mov
add
push
xor
mov
sub
call
mov
jmp
xor
mov
pop
mov
dec
add
es
test
dec
sbb
xchg
push
xor
add
mov
or
xor
cmp
xchg
pop
fisubrl
testl
or
movups
adc
in
mov
and
sub
fimuls
lods
sub
pusha
clc
cltd
sar
push
stc
dec
sti
and
movsl
pop
enter
clc
cmp
lret
mov
cmc
jecxz
and
dec
mov
aaa
adcl
mov
mov
xchg
push
jb
adc
jecxz
mov
mov
mov
jne
mull
mov
jl
xchg
cli
ljmp
fsubs
add
aaa
test
jnp
cli
int
adc
xor
dec
sbb
int3
push
lcall
and
div
mov
repz
or
pop
fcoml
nop
sbb
mov
dec
push
or
lods
sbb
imul
add
out
and
mov
data16
push
adc
jmp
dec
or
shrl
mov
sub
pop
daa
fldcw
daa
xlat
outsb
lods
adc
mov
mov
sbb
pop
fsubl
push
mov
rcrl
adc
push
ficompl
cmp
mov
jp
pop
into
int
pop
mov
inc
xchg
out
fldl
push
std
lcall
lahf
add
aaa
rolb
adc
xchg
xor
popf
lcall
push
inc
inc
add
pop
stos
dec
data16
and
nop
cmp
in
add
jmp
push
int
pusha
lcall
pop
movsl
inc
pusha
mov
mov
mov
outsb
out
ret
pextrw
or
repz
enter
mov
repz
pop
and
imul
fists
sbb
cmp
int
loope
xchg
das
cmp
movsl
lods
mov
out
xor
and
aad
xor
frstor
jge
mov
adc
ss
rorl
xchg
out
push
and
addr16
and
xchg
mov
jge
add
mov
mov
divl
cs
adc
mov
cmp
jmp
xor
leave
cmp
ljmp
cmp
jno
mov
pop
fucomip
xor
mov
mov
scas
xor
or
aam
pop
push
mov
jge
xorb
mov
mov
add
xchg
sarl
lock
or
mov
test
adc
dec
test
inc
sbb
and
add
push
ficomps
addb
sbb
dec
repnz
sti
add
out
outsl
pop
and
jno
in
movsl
lods
loopne
xchg
xor
pop
sub
insl
dec
inc
sub
sub
mov
pusha
inc
pop
lea
rcrb
mov
lahf
xchg
cmp
sti
jp
jne
sub
stos
mov
lret
and
lahf
scas
mov
xchg
sbb
dec
xorb
gs
inc
dec
pop
enter
jg
dec
or
mov
jo
dec
sub
push
jle
sub
mov
les
or
xchg
lret
dec
xchg
fisttpl
sub
sarb
and
hlt
jg
add
das
mov
push
sbb
mov
jge
inc
or
hlt
jg
add
ficomps
cltd
rcrl
mov
sub
gs
inc
mov
mov
jle
pusha
push
push
sub
inc
push
and
sbb
dec
xchg
inc
push
cltd
cmp
nop
mov
lock
test
aaa
mov
jge
sub
xor
pop
repnz
sub
push
popf
ss
xor
sub
pusha
divb
jnp
popf
cmpsb
mov
rcl
bound
int
iret
lods
sbb
add
fwait
pop
int3
and
mov
scas
fsubp
add
in
fsts
xor
repz
sbb
scas
mov
add
push
mov
cmp
add
gs
std
sbb
loopne
lds
dec
push
mov
pop
push
jb
adc
gs
psubb
inc
lock
and
mov
mov
adc
mov
stos
adc
call
mov
lock
cwtl
dec
daa
push
bound
xchg
add
inc
sub
adc
nop
push
jge
fdivl
sub
scas
cmp
mov
nop
cmc
mov
mov
mov
jb
addr16
add
push
push
mov
push
lahf
jnp
movsl
aam
inc
popa
dec
fadd
add
cmpsb
xchg
or
test
roll
sbb
cmc
cmp
dec
or
mov
dec
jns
cmp
fbstp
mov
loopne
inc
push
add
dec
pusha
mov
movd
jbe
movsl
push
leave
pop
rolb
addr16
adc
lahf
bound
jo
lds
push
and
mov
std
pop
jb
clc
add
mov
jecxz
arpl
in
jle
pop
mov
mov
xor
mov
add
xchg
in
jecxz
les
cmpsl
leave
test
lcall
cltd
lcall
jmp
test
add
subb
shrl
mov
icebp
sbb
jecxz
sbb
aaa
xchg
push
xchg
pop
jo
inc
jbe
add
not
push
cli
adc
pop
push
cmc
daa
push
pop
fs
dec
movsl
hlt
jb
or
test
mov
shl
push
xchg
out
arpl
inc
lcall
inc
adcb
loope
adc
imul
arpl
cmp
cmp
in
daa
fadd
lods
push
divb
addb
andb
mov
inc
inc
cs
sub
fsubs
cmp
push
add
push
or
rcrb
or
out
cld
sbb
sbb
jno
pop
adc
mov
mov
add
pop
cmp
adc
insl
je
mov
rcrb
arpl
int
sti
xor
mov
adc
cmp
inc
push
or
mov
mov
push
or
mov
cltd
sbb
cs
jle
cwtl
cmp
or
in
out
push
imul
cmp
test
cli
aas
add
or
jmp
cmp
xor
push
out
les
cmp
sub
cmpb
dec
js
xchg
xchg
addr16
mov
adc
mov
mov
xchg
or
sub
pop
jge
add
xor
je
fisttps
jmp
xor
mov
or
lret
imul
sbb
flds
dec
add
aam
adc
out
outsb
cmpl
jo
add
push
pop
jb
jg
xchg
daa
jle
cmpsl
add
add
inc
push
sbbb
sub
add
cmp
and
mov
xor
pop
int
inc
xchg
sub
arpl
dec
dec
adc
fisttpl
je
aas
sub
cmp
setge
mov
xchg
adc
jae
movsl
in
imul
stc
dec
xor
pusha
lds
xorb
rcrb
movsb
or
lret
stc
add
nop
pop
aam
mov
fstpl
sbb
fiadds
loop
add
mov
popa
nop
fs
and
xchg
ror
fsub
add
sbb
pop
sub
popf
mov
dec
out
mov
out
inc
icebp
lret
aas
add
dec
jle
cmp
dec
ds
or
loope
std
daa
xor
addr16
or
add
adc
pop
cmp
aas
sub
or
mov
xor
movl
mov
std
cmp
je
popa
andb
mov
jb
bound
and
push
cltd
add
testl
loopne
mov
movl
leave
jbe
dec
add
popf
daa
jecxz,pn
and
dec
fcoms
in
rclb
popf
and
movsb
test
stos
jl
dec
mov
and
in
xchg
pop
fnclex
push
pop
pop
push
mov
add
push
pop
pop
fdiv
fidivs
add
pop
inc
clc
xor
inc
out
push
push
call
arpl
clc
dec
cmp
shl
cltd
mov
jg
in
or
adc
je
inc
add
xor
add
add
les
imul
sbb
out
stos
leave
mov
xor
jp
testb
push
dec
cld
inc
pop
lret
bound
jmp
call
in
or
insl
mov
jbe
push
or
sub
leave
fcomp
lods
sti
or
rcll
std
mov
cmpb
jae
push
mov
add
mov
test
sti
aam
out
loopne
mov
int3
jecxz
xor
add
xchg
fidivrl
outsb
mov
cmpsl
add
fisttpll
lds
mov
mov
mov
hlt
fidivrs
push
fstps
and
jmp
ss
loop
repnz
inc
push
mov
sbb
mov
lea
add
mov
cld
sub
pop
scas
loopne
add
mov
add
hlt
mov
out
pushf
or
pop
adc
mov
pop
xchg
xor
addl
fimuls
femms
xor
mov
mov
fstl
scas
lahf
sbb
nop
adc
shr
cmp
pop
enter
loopne
es
adc
jns
insl
pusha
ret
xchg
or
call
outsb
stos
sahf
push
add
leave
fcoms
add
mov
jno
add
sub
aad
in
xchg
sub
sub
xor
popa
pop
jbe
dec
jbe
inc
pop
add
xchg
dec
scas
mov
add
dec
test
sbb
mov
xor
add
mov
mov
or
je
leave
push
mov
fdivs
fildl
ficoms
mov
and
dec
push
in
push
mov
sbb
jg
add
add
adc
stos
jp
ja
lgs
ret
jge
ret
pop
add
or
dec
loopne
scas
cmp
into
mov
push
or
xchg
push
les
adc
in
sub
and
pushf
adc
mov
or
mov
fcomps
sub
sub
pop
pop
popf
cwtl
push
mov
xchg
xchg
mov
push
and
jbe
xchg
in
xchg
mov
or
push
out
push
cmp
fsubrs
mov
outsl
pop
jmp
adcb
ds
mov
fstpl
mov
test
xchg
mov
pop
xlat
into
addl
cmp
ss
or
ljmp
adc
push
mov
sub
mov
aaa
mov
push
pop
test
clc
sti
fsubr
xchg
sahf
adc
pop
cmp
outsb
inc
mov
sub
inc
add
sub
cltd
and
or
mov
push
movsb
cmc
fdivl
popf
in
icebp
pusha
pop
xchg
cltd
dec
int
sub
ficomps
addb
adcb
fcompl
add
divl
lods
sbb
hlt
in
pop
inc
cmp
lods
dec
xchg
jns
loop
xchg
add
loopne
jbe
bound
test
push
cmp
fisubrs
or
shl
mov
xlat
add
or
xchg
sti
js
push
jns
inc
xchg
lods
std
inc
mov
dec
adc
jle
adc
ds
aaa
andb
in
add
mov
pop
mov
sub
push
std
adc
and
in
adc
jecxz
in
or
decl
cmc
dec
xchg
idivl
je
mov
sub
adc
les
stos
add
xor
push
iret
mov
rorl
icebp
cmp
stc
imul
xchg
add
mov
lods
and
push
push
add
and
add
ficomps
dec
pusha
int
push
jg
inc
stc
mov
dec
push
xor
in
inc
sub
fnstenv
dec
mov
sahf
add
dec
es
subl
cmp
leave
out
xor
add
out
movsb
outsb
dec
pop
mov
push
push
movsb
int
mov
call
js
pop
fcoms
nop
or
lea
pusha
sti
xor
push
add
jnp
or
mov
pop
mov
loopne
aas
nop
add
das
mov
dec
xchg
xchg
xor
or
pop
xlat
cli
jno
rcrl
sbb
add
push
mov
lea
and
mov
add
mov
out
icebp
movsl
das
cmpsl
cmpsl
pop
dec
dec
enter
adc
dec
das
fsubs
fbld
stc
cltd
or
aas
mov
loop
fisttpl
push
sbb
jne
nop
adc
pusha
add
mov
inc
inc
xor
sbb
push
std
add
pop
stc
jmp
cmpsb
lods
xchg
push
push
stos
inc
jb
adc
pop
inc
lea
insl
and
pop
insb
adc
int3
or
add
ds
outsb
fadd
add
push
jle
scas
pop
jmp
daa
mov
negb
lcall
mov
mov
lahf
jmp
adc
or
ret
inc
ficoml
stos
push
ljmp
add
sub
or
add
push
nop
int3
mov
fucomp
std
iret
popf
xor
adc
add
dec
int3
add
jo
lock
in
mov
cmp
add
iret
mov
sbb
sbb
add
dec
test
xchg
or
pop
shrb
sbb
and
and
mov
push
sub
xor
test
dec
cmp
popf
adc
lods
les
dec
adc
jmp
mov
cld
add
push
in
lcall
dec
mov
xchg
xchg
enter
dec
pusha
mov
mov
popa
jne
mov
push
or
lea
rorl
notl
or
pop
jbe
push
sub
xchg
pusha
mov
pop
aam
loope
test
jl
sahf
xchg
les
incl
xchg
js
jo
mov
mov
rcr
xor
pusha
test
aaa
popf
cmpb
inc
xchg
xchg
dec
fdiv
imul
sbb
xchg
out
roll
and
rolb
add
aas
add
cmpb
es
dec
cli
pusha
inc
pop
add
add
imul
sbbl
adc
mov
add
add
jne
gs
dec
cmp
lret
nop
in
test
mov
pop
dec
or
adc
scas
subb
mov
xchg
adc
cmpsl
pop
gs
into
pop
dec
add
jb
imul
insl
mov
push
cltd
fcomp
inc
and
pop
xor
in
adc
out
mov
xchg
hlt
add
popf
push
iret
add
imul
sub
imul
mov
leave
das
das
das
movsl
dec
push
add
out
lds
imul
das
ret
jbe
les
cmp
ljmp
push
in
xchg
jmp
push
ficomps
xor
add
std
scas
repz
xor
inc
sbb
fmull
jp
stos
aad
push
faddl
outsl
jne
inc
cmp
add
lret
incb
pop
inc
scas
cmpsb
fiadds
int3
mov
and
std
mov
test
call
adc
jecxz
push
loopne
pusha
dec
cld
call
sarl
adc
dec
dec
mov
dec
pop
divl
cld
adc
mov
repnz
loope
cmpl
aad
in
jbe
es
jg
stc
cld
adc
adc
adc
arpl
fistps
stc
sub
push
push
imul
mov
incl
cmp
fisubrl
jnp
pop
call
mov
nop
add
sahf
sarl
inc
cmp
xor
rcrl
in
stos
push
lahf
mov
push
cs
fstpl
adc
mov
add
lea
repz
adc
test
out
lods
sbb
add
push
mov
adc
pusha
push
push
and
rolb
pop
mov
popa
lock
pusha
adc
mov
push
mov
fisubrs
pushf
rorb
jns
mov
ret
dec
lcall
adc
sbb
xchg
shl
dec
imull
adc
aam
addr16
iret
test
in
outsl
add
and
outsb
xlat
lahf
fs
aad
outsl
fmuls
sarb
push
roll
pop
dec
pop
jp
and
repnz
push
xchg
jns
jmp
shll
jge
cwtl
pop
inc
iret
imul
or
icebp
add
and
stc
mov
aas
pop
lahf
mov
ret
or
daa
hlt
inc
dec
jg
xchg
and
sub
mov
fcmove
nop
jl
addb
adc
push
push
pop
push
and
mov
cld
or
das
mov
in
mov
lods
ljmp
insb
inc
mov
loope
sub
cltd
loopne
mov
shll
fsubs
das
lcall
dec
mov
iret
mov
sub
cmp
stos
test
lret
insl
sub
in
das
cmp
in
xor
mov
add
and
pop
or
shll
int
repnz
and
cmpsb
sub
xor
mov
jecxz
add
xor
add
adc
rorl
or
mov
jl
lds
roll
sub
popf
das
pop
push
hlt
jecxz
mov
pop
inc
insb
push
mov
cmp
and
lret
fwait
pop
mov
test
fistpl
jne
repz
add
and
mov
into
fists
adc
sarb
test
push
cld
cltd
sbbb
test
cmpsb
pop
mov
ja
mov
stos
into
cmc
dec
pop
jbe
dec
jmp
sbb
subl
add
das
aas
push
loopne
fistps
xchg
or
push
test
sub
pop
xor
dec
jecxz
fildl
or
pop
dec
dec
ret
fnsave
out
mov
dec
jno
les
xchg
mov
sbb
xorb
imul
mov
lods
mov
mov
xchg
adc
xor
or
es
xchg
inc
nop
sbb
sahf
or
aas
or
js
jno
inc
inc
push
lods
mov
inc
mov
mov
xorl
popf
ficomps
out
ljmp
add
sbb
gs
es
cmp
push
movsb
sub
adc
inc
sub
decl
pop
pop
js
fiaddl
inc
pop
sbbl
fisubl
sub
aaa
std
xchg
adc
xchg
sub
mov
mov
fdivs
mov
lds
aas
mov
lcall
sbb
int
hlt
fld
xchg
pop
add
lret
lret
and
ja
pop
jmp
pop
lret
fisubs
fisttpl
mov
fildl
pushf
xchg
and
push
fdivrs
loope
ss
cmc
mov
jne
lods
inc
push
xor
decw
add
cmp
jl
and
add
xlat
xor
dec
add
cmp
add
mov
jg
sbb
imul
into
xor
add
hlt
push
divl
add
mov
sub
add
pushl
lods
add
mov
mov
shrb
jbe
scas
sbb
adc
mov
add
pop
testl
loop
in
xor
lods
pop
loope
sbb
mov
test
xorl
pop
cmp
push
mov
add
or
test
aam
adc
cmpb
hlt
add
fisubrs
filds
es
mov
mov
or
lods
js
fisubs
push
xor
or
mov
dec
pushf
jecxz
testl
jae
adc
fcoml
sbb
call
pop
js
lock
cmpsl
test
xor
lods
mov
add
or
inc
in
xchg
sbb
jle
sbb
add
pop
lcall
repz
sbb
mov
and
aas
xchg
cmp
hlt
jmp
shll
mov
pusha
sbb
int
xorb
pop
rcr
sub
loope
xorb
repz
scas
aam
mov
jnp
dec
movsl
push
or
notb
pop
push
xor
pop
rclb
xchg
add
mov
orb
shll
cmp
stos
scas
in
fldenv
push
call
xor
popf
in
clc
dec
add
fsubl
jnp
add
orl
sbb
ljmp
cmpsl
pop
loopne
or
dec
ret
leave
push
cmp
push
dec
adc
gs
add
cmp
movsb
adc
push
movsl
pusha
test
add
ja
cmp
pop
scas
notb
ss
sub
xlat
dec
pushf
jl
and
jns
or
sti
mov
shrb
aam
js
sbb
loop
inc
pop
cmp
cmp
xchg
pop
dec
pop
or
test
add
psubsw
in
inc
adc
or
scas
xchg
jbe
adc
fcoml
xor
rorb
bnd
add
and
mov
movb
adc
call
xchg
xor
adc
popl
inc
pop
std
fstpt
pusha
xor
movsl
mov
dec
repz
test
pop
sahf
pop
outsb
andb
out
adc
adc
mov
jp
out
sbb
ljmp
fwait
push
xchg
and
xlat
jl
sbb
jp
in
inc
jmp
pop
pop
movsb
cld
insb
in
mov
add
cmp
shlb
ret
cmp
fsubrs
or
mov
mov
icebp
ljmp
fs
shrb
push
add
dec
inc
add
ja
pop
insb
dec
or
xchg
nop
call
ret
or
and
sub
mov
and
incb
add
sbb
insl
fisttpll
pop
lock
or
pop
pop
sub
repz
or
xor
aam
mov
notb
add
fld
jp
leave
adc
popf
inc
outsl
xchg
jb
xlat
and
pop
cs
movl
out
int
push
add
pop
pop
mov
jge
dec
xor
pop
aad
push
xchg
mov
shlb
lock
andb
mov
adc
dec
pusha
xchg
ds
es
int3
add
in
push
push
cmp
es
sahf
out
or
out
or
add
or
js
or
and
mov
xchg
cmp
jg
add
mov
xchg
lret
inc
jecxz
nop
sbb
cmp
lods
bound
mov
inc
and
out
adc
push
jb
out
add
sub
inc
rcrl
js
sbb
clc
nop
mov
fiaddl
push
cmp
aas
xor
push
add
sti
xorl
mov
cltd
cmpsl
lahf
inc
push
push
lret
shl
cli
xor
add
out
mov
xchg
and
sbb
jns
cmp
popa
cmp
loopne
fsts
or
pusha
rorb
pusha
rcrl
jb
pop
ja
add
negl
or
jecxz
sarb
les
inc
pop
or
subl
pop
or
les
add
sub
inc
test
adcb
pop
mov
out
cs
cmp
lcall
sub
pop
add
mov
lea
push
std
mov
adc
add
sbb
cwtl
adc
data16
pop
cmp
add
sbbb
push
stc
cmp
sbb
lods
or
mov
rorl
sub
mov
dec
push
or
or
xor
push
stos
sub
xchg
adc
mov
jl
and
std
loope
test
nop
pop
inc
out
add
pop
jae
sbb
add
ret
pop
inc
push
xchg
add
ret
fdivrl
pop
add
mov
inc
and
testb
test
in
sub
dec
and
pusha
cmp
push
dec
cmp
mov
test
mov
imul
nop
call
jmp
test
fsubp
adc
gs
cmpsb
leave
lods
adc
push
into
mov
add
roll
dec
inc
add
ret
or
dec
leave
sub
or
movsl
orl
xor
xor
jnp
add
fbstp
cmpsl
pushf
and
add
es
xchg
ret
jge
inc
ret
sub
movsb
sbb
push
push
mov
cmpsb
xchg
dec
xchg
or
jb
add
add
inc
out
scas
lret
aas
fildll
add
int
je
std
cmc
jo
popa
add
cwtl
js
pop
adc
mov
cwtl
popf
cmp
loope
and
push
xorb
adc
pop
scas
cmc
jecxz
loope
les
mov
fwait
stc
inc
add
pop
cli
sub
mov
fwait
in
xor
sub
mov
add
and
lahf
and
mov
aad
jle
sbb
int3
aas
mov
sub
pop
movsl
std
mov
gs
in
push
add
into
loop
cwtl
stos
add
lods
stc
xlat
mov
push
out
and
roll
andl
iret
stc
add
pusha
mov
mov
dec
cmp
pushl
or
and
imul
sti
je
sbb
adc
lods
daa
adc
add
xlat
push
and
test
int3
pushf
mov
and
pop
pop
add
dec
movsl
jp
mov
fildl
inc
fidivrs
mov
dec
mov
shll
or
and
hlt
cmpsb
int
add
mov
pop
mov
and
clc
loopne
pop
cmp
aad
test
inc
mov
in
inc
mov
adcb
jecxz
adc
rorb
sub
mov
sub
sbb
and
mov
push
jno
fucomi
push
stos
in
pushl
mov
ret
xor
cs
adc
add
xor
add
bound
add
out
cli
sub
add
outsb
mov
lret
fsubrs
lret
cmp
jp
add
adc
adc
repnz
outsl
add
adc
lock
sbb
leave
dec
xor
inc
cmpps
adc
mov
add
inc
jae
jns
sbb
adc
cwtl
push
and
jns
mul
xchg
ffree
das
imul
test
daa
jne
dec
shll
xor
push
das
mov
add
mov
test
and
mov
push
mov
push
push
mov
jp
mov
outsb
add
lret
add
popf
or
jecxz
ret
dec
push
jmp
sbb
call
mov
mov
cmp
cli
mov
and
sbb
cmpl
pop
or
mov
pop
or
push
add
pushl
ret
lods
push
mov
loop
sbb
add
push
push
push
or
lds
pop
sub
or
add
cltd
gs
jg
push
add
xchg
insb
sub
aaa
inc
xor
xchg
fstpt
mov
js
mov
jno
inc
rcr
or
cmp
and
mov
push
or
push
and
das
shlb
lods
out
add
add
cmp
nop
mov
insl
push
jle
add
lds
sub
popf
loope
mov
mov
mov
push
stos
loopne
leave
or
adc
xor
and
in
add
das
gs
sub
cmpb
mov
xor
pop
push
repz
add
cmp
dec
push
in
sub
mov
cltd
cmc
pusha
mov
pop
mov
cmc
jnp
add
loop
rcrb
aas
mov
aam
or
adc
pushf
add
mov
push
push
subb
lcall
push
loopne
inc
es
js
inc
or
or
sbb
push
movsb
lahf
insl
push
inc
jle
mov
out
mov
lock
and
pusha
nopl
adc
jecxz
fwait
mov
sbb
cwtl
xchg
adc
and
add
or
jmp
xchg
pop
je
xchg
or
enter
mov
add
lods
inc
xlat
flds
int
ja
pop
or
xor
add
push
cwtl
or
inc
dec
jmp
ljmp
xchg
mov
subl
in
stc
gs
or
add
flds
mov
mov
ds
mov
mov
push
ds
pop
sub
add
shlb
xchg
stos
dec
test
pop
push
push
mov
ja
hlt
add
jg
int
inc
jno
jge
out
fidivrs
stos
push
je
pop
int
rorl
mov
push
ffreep
add
mov
test
daa
cld
xor
mov
pop
call
xchg
das
sar
fidivrs
add
lods
xchg
in
jnp
jge
jns
addl
mov
mov
xor
push
inc
mov
cmpsl
daa
inc
mov
push
push
sarl
inc
lea
pushf
push
xchg
gs
movntps
enter
call
out
pop
pop
sbb
shll
cwtl
daa
mov
gs
jne
aad
inc
lahf
xor
in
insb
and
mov
stc
and
xor
add
sbb
mov
sbb
mov
pop
pop
sub
mov
pop
add
xor
xchg
add
mov
mov
jbe
popf
aad
aas
mov
pop
fdivrl
or
ljmp
mov
stc
mov
popa
cmp
xor
push
mov
mov
add
notb
fmull
cwtl
sbb
add
add
mov
loopne
adc
and
das
bound
jl
movsb
sub
lods
mov
mov
xchg
mov
add
addl
rcr
dec
out
shll
sbb
and
sbb
dec
ret
inc
fimuls
dec
mov
lret
stos
sub
jno
or
jp
or
inc
pop
xchg
sbb
pop
bts
and
dec
push
subl
mov
outsl
xchg
pop
sbbl
or
pop
mov
adc
jbe
xchg
mov
jbe
mov
lods
push
loopne
stos
inc
jge
mov
jmp
popa
imul
outsl
sub
sub
cmc
mov
mov
pop
pusha
mov
loopne
sub
adc
jae
or
dec
aaa
mov
cmpl
pop
stos
mov
mov
addr16
popa
adc
sub
cmpsl
test
cmp
adc
push
and
insb
xchg
push
add
add
jg
icebp
clc
mov
out
int3
or
jno
xchg
dec
repnz
lret
mov
scas
jns
add
mov
push
rorb
xor
mov
mov
jle
dec
sub
add
adc
pop
aas
clc
mov
cmp
mov
dec
sub
ja
pop
mov
pop
push
dec
add
cmp
jmp
jae
jae
push
pop
mov
and
mov
fcom
mov
push
lock
add
lret
xorl
push
icebp
cmpsb
xor
stc
sbb
adc
das
cmc
dec
mov
test
jno
mov
cs
xchg
pusha
mov
adc
sahf
or
ljmp
xlat
sbb
mov
mov
leave
aad
repz
sub
ficomps
lret
cmp
cltd
repz
das
dec
ret
fsubrl
lock
add
xchg
or
out
xchg
sub
mov
mov
loopne
shlb
scas
adc
mov
inc
mov
push
cmp
scas
xchg
fsubs
clc
jmp
gs
xor
out
pop
cmp
xchg
add
xor
mov
cmp
scas
cmp
pop
cwtl
and
pusha
jle
sbb
out
mov
imul
mov
jle
mov
add
xchg
mov
jns
insl
mov
std
hlt
mov
jge
push
int
inc
sbb
adc
add
dec
mov
orl
or
int
ret
jg
popa
mov
insl
sbb
pop
test
add
and
test
add
jmp
mov
xchg
pop
test
jecxz
mov
pop
pop
imul
push
addb
mov
add
out
loopne
push
das
inc
and
add
dec
xchg
out
mov
jmp
and
in
fnsave
adc
pop
mov
mov
popf
in
scas
adc
adc
jp
add
or
dec
loopne
add
lahf
rorl
jge
fistl
scas
enter
dec
xchg
and
jne
movl
or
push
pop
pop
div
pop
jbe
inc
add
jp
roll
mov
test
test
xchg
and
in
flds
and
gs
inc
imulb
mov
ret
gs
add
mov
pop
test
mov
adc
iret
add
es
push
js
xchg
in
mov
addr16
fcoml
xor
daa
or
sub
or
sbb
test
dec
xor
add
lock
out
imulb
in
jge
mov
popf
push
das
aad
cmp
fsts
inc
aam
or
push
mov
test
pop
inc
lret
stc
pop
testl
dec
mov
cmp
dec
stc
cs
andb
into
bound
adcb
xor
js
mov
inc
sbb
add
jecxz
push
lods
ljmp
add
lods
outsb
pop
pop
std
das
jno
xchg
sbb
lahf
in
iret
cmp
mov
adc
mov
das
inc
jnp
les
and
mov
jg
cmp
and
shll
mov
mov
mov
sar
lahf
clc
adc
fidivrs
mov
sub
movsb
adc
pop
lret
movsb
sarl
adc
fstpl
or
inc
push
and
jnp
add
imul
xchg
mov
or
xchg
inc
sbb
jecxz
divb
add
cs
rclb
xchg
mov
push
ds
shll
add
jmp
mov
add
addb
or
shll
icebp
ds
mov
cltd
mov
jmp
or
sti
leave
nop
sbb
xchg
add
adc
sub
lods
fldl
pop
pusha
fcoml
pop
stos
int3
clc
inc
add
or
xchg
adc
test
cmp
or
cmp
fsubp
into
movsb
add
cmpsb
sub
leave
sbbb
add
mov
sub
fimuls
mov
nop
cwtl
out
sbb
stos
nop
arpl
and
jecxz
shrb
dec
xchg
lea
cli
bound
fcomip
adc
adc
push
jg
addr16
rcrb
leave
addr16
add
nop
out
loop
cmpsl
inc
inc
lock
inc
roll
dec
add
ja
dec
fsubr
outsl
xchg
pop
jne
enter
sub
jo
or
sub
fprem
jnp
mov
out
popf
fisubrs
push
or
xchg
lods
pop
rolb
jne
cmp
repz
aaa
test
xlat
test
sahf
stos
mov
frstpm(287
into
push
inc
and
loop
adc
and
lods
push
aad
int
mov
pusha
jbe
dec
push
xor
xor
sub
xchg
popf
pop
sub
jne
push
mov
add
dec
push
hlt
lea
push
xor
call
subl
xor
add
jns
repz
clc
cmp
ja
andb
jle
ficoms
enter
dec
mov
add
fldt
pushf
imul
xor
xchg
lods
out
xchg
mov
adc
jb
xor
mov
jg
js
sbb
pop
int
cltd
rcl
les
push
dec
pusha
xor
mov
push
mov
mov
das
mov
pop
arpl
mov
mov
fbstp
lahf
sbb
mov
aam
dec
xchg
pop
shll
mov
sub
add
jo
mov
adc
in
mov
mov
repz
outsl
mov
lahf
or
icebp
cmpsl
push
xor
or
in
pop
das
movsbl
and
sub
fildll
sub
sub
lods
jbe
cli
cli
lds
jg
push
out
add
sub
jnp
test
cmp
mov
into
lea
adc
and
sbb
std
lcall
imul
jge
xor
and
inc
lods
imul
loope
shlb
outsl
daa
stc
dec
lahf
sub
hlt
clc
sbb
lods
in
adc
cmp
jne
jge
test
test
cmp
jge
mov
in
pop
pop
orb
cvtps2pi
pop
mov
sub
stc
sub
sti
les
movsb
je
popf
sub
sbb
pop
xchg
dec
movsl
add
add
test
pop
mov
jae
pop
sub
jbe
cmc
mov
push
mov
mov
popf
or
aaa
je
insl
or
sub
idivb
pop
mov
mov
test
loope
jp
xchg
and
out
add
adc
cs
adc
pop
sbb
icebp
xchg
pop
dec
adc
mov
sbb
mov
dec
fdivp
adc
jae
dec
leave
fbld
flds
mov
cwtl
pusha
rcrb
or
mov
jmp
jne
mov
sub
lea
int
popf
adc
inc
mov
fiaddl
movsb
add
out
cmp
mov
xor
popf
adc
imul
inc
punpcklbw
mov
rorl
std
dec
xor
adc
add
imul
sbb
xor
sub
sub
pop
rorl
lcall
bound
push
inc
ja
rcrb
add
push
sub
inc
iret
dec
fimull
push
add
and
xlat
xor
xchg
repnz
pop
mov
ficompl
stos
xchg
jbe
fnstsw
loope
shlb
sbb
pusha
stc
fisubrl
push
push
pop
cmpl
ret
xor
mov
movsb
mov
repnz
inc
push
fildl
hlt
adc
pop
ss
shl
jmp
nop/reserved
sarb
aad
adc
popf
sbb
dec
sub
mov
or
test
mov
dec
stc
jg
popf
pop
orb
shr
sbb
push
sub
pop
mov
mov
sbb
xchg
add
dec
je
adc
fimull
and
cli
repz
add
test
dec
dec
xor
pusha
mov
dec
lods
fildll
pop
add
stc
jl
push
mov
pop
lret
or
scas
je
das
mov
add
mov
fsubr
jle
sarb
fs
pop
xchg
js
lahf
jnp
add
mov
dec
or
or
jno
subb
jb
or
int
jo
push
cmp
mov
pop
xchg
int
ljmp
sti
pop
out
clc
sub
push
adc
cmpsl
adcl
movsl
stos
add
jno
push
cmp
sub
rclb
movsl
dec
pop
xor
or
jnp
cmp
mov
ffree
mov
push
movsl
and
dec
sub
pop
ds
fsts
and
in
sub
pop
jmp
xor
repz
add
test
cmp
mov
popa
jnp
dec
mov
dec
lahf
pop
pop
das
roll
xor
mov
pusha
and
xchg
push
xchg
ret
fsubs
je
fnstsw
idivl
icebp
pop
adc
lods
sbb
sub
mov
cli
popa
jl
faddl
fstp
cmpsl
and
mov
mov
jp
cmp
test
and
jae
pop
and
inc
add
cmp
mov
sub
dec
sti
lret
xchg
cmp
out
mov
ja
or
or
cli
push
push
clc
sahf
xchg
adc
out
cltd
les
jecxz
or
and
adc
stc
sbb
test
jecxz
orb
cmp
repz
pusha
pop
mov
out
or
test
dec
lret
aad
or
mov
sbb
sub
js
test
pusha
notl
push
inc
in
cmp
mov
xor
lea
dec
fnstsw
fiaddl
push
out
fxch
out
popf
push
jg
leave
sub
daa
enter
int3
outsb
popf
es
into
add
int
sbb
dec
xchg
out
loope
sbb
in
mov
add
or
mov
xor
cmp
popf
in
sbb
add
dec
jnp
je
xor
jmp
maxps
inc
popf
push
shrl
clc
aaa
xchg
subl
adc
and
dec
and
sbb
xor
pushl
push
imull
clc
push
outsl
and
lods
mov
jnp
and
sub
pop
push
stos
rcrb
pop
or
mov
loopne
sbb
jle
pop
jp
inc
mov
test
lea
sarl
scas
imul
mov
cmp
cmp
andb
mov
in
dec
push
mov
jo
arpl
stc
pop
push
js
and
add
and
add
push
nop
aaa
or
insl
sub
rcll
adc
or
shll
mov
stos
mov
sub
cmp
push
lcall
rolb
jno
iret
movsl
lahf
xchg
xchg
mov
jge
add
inc
popa
lock
mov
or
sbb
inc
dec
push
stc
sti
imul
sbb
fisttps
xchg
jo
rcrb
mov
movsl
mov
ljmp
bnd
cs
mov
sahf
mov
xchg
jnp
jo
mov
push
je
imul
cmpl
lcall
sub
mov
sbbb
lea
sbb
inc
mov
jg
push
adc
push
je
or
sub
lcall
ljmp
jg
adc
shrb
and
or
xchg
jns
out
ret
aad
int3
xchg
jne
inc
adc
icebp
pop
pop
cmc
loopne
nop
mov
mov
push
pop
sbb
jns
lahf
popa
std
pop
cmp
mov
std
cwtl
fsubrs
icebp
loope
fwait
filds
push
cmp
jecxz
jne
sbb
cs
test
icebp
add
loop
add
sbb
push
mov
add
add
pop
fnsave
inc
shl
mov
mov
or
ss
shlb
mov
cmpsb
sub
push
sbb
cli
pop
mov
mov
mov
fmuls
enter
mov
or
push
iret
mov
les
sbb
xchg
cli
and
sar
dec
and
out
dec
dec
out
lret
call
inc
nop
test
jnp
sbb
xor
mov
outsl
std
add
fbstp
mov
outsl
mov
hlt
inc
pop
xchg
lcall
push
xchg
add
mov
jle
stos
enter
aam
out
mov
enter
sub
arpl
js
fbld
add
cmp
fs
scas
mov
cld
add
stc
arpl
in
mov
xchg
pop
mov
or
xor
xor
jns
adcb
jae
adc
les
sahf
sbb
cmc
in
shlb
mov
mov
enter
filds
stos
cmpsb
cmp
sub
rclb
add
xchg
inc
cli
pop
mov
dec
push
das
sub
stos
add
lea
xor
int
push
cmp
mov
cmp
and
mov
mov
stos
mov
jmp
imul
fdivrp
enter
xlat
inc
add
jp
dec
addb
jne
mov
mov
sbb
call
xor
mov
pop
movsb
dec
xor
sbb
adcl
push
das
mov
xchg
scas
test
cmp
and
adc
ret
and
cli
pop
mov
pop
loop
jle
xchg
xchg
lret
mov
xor
fisttpl
cmpb
mov
add
mov
pop
inc
push
add
push
aas
add
xor
add
fwait
addl
rorb
dec
xor
adc
mov
inc
data16
pop
sbb
scas
add
mov
mov
stos
push
add
popf
outsb
cmp
or
in
hlt
sti
repnz
add
scas
xlat
cmpsb
xchg
div
push
lcall
inc
and
adc
cli
flds
out
sub
das
xor
sti
xchg
cli
loope
rcrl
and
add
and
push
daa
mov
fsts
sbb
add
mov
stos
fimuls
subl
int
ffreep
imul
jb
incb
or
out
cmpsb
shlb
mov
adc
mov
jnp
mov
cmpsl
call
jge
in
repz
xor
loope
cs
test
add
mov
pop
jp
out
mov
dec
jnp
inc
inc
push
popf
xchg
push
in
mov
mov
outsb
inc
mov
stos
add
pop
fnstsw
add
cmp
ja
inc
fidivl
add
push
mov
mov
inc
dec
mov
inc
filds
loop
sub
nop
fistpl
jecxz
or
jp
mov
push
in
fldl2t
push
inc
xchg
cmp
and
push
subb
xor
add
mov
cmp
call
ficomps
insl
mov
bound
aas
clc
aam
and
or
enter
push
enter
lods
daa
xchg
scas
fdivrs
out
mov
xchg
pop
fmull
aam
sub
adc
cmp
rol
aad
add
negb
lods
sti
jmp
and
xchg
cmp
cmpsb
xchg
iret
adc
andb
pop
sti
or
pop
or
pusha
add
mov
data16
movl
mov
lods
stos
lcall
sub
out
jg
into
pop
mov
mov
ja
out
push
cmp
cs
icebp
addr16
dec
mov
outsb
add
addr16
and
push
inc
cmp
sub
adc
and
addl
mov
or
inc
daa
test
inc
pop
in
jmp
jp
imull
add
rclw
jmp
das
shlb
sbb
mov
sbb
mov
push
test
scas
out
shlb
jo
pop
insb
call
add
xchg
add
popa
iret
dec
adcb
xchg
xchg
hlt
jl
dec
push
and
pop
add
pop
mov
lss
imul
cmp
push
add
movsb
mov
adc
jp
mov
jle
sub
mov
gs
or
sbb
xchg
ja
xlat
or
js
xchg
fcomp
add
test
cld
hlt
dec
and
repnz
jne
rep
mov
std
sub
insl
adc
lds
xor
inc
add
inc
mov
cmp
xchg
inc
and
xor
mov
add
inc
pop
add
imul
mov
gs
sub
adc
out
add
repnz
cmp
cltd
add
mov
jmp
mov
add
jp
pop
mov
inc
sub
enter
mov
mov
cmp
add
push
pop
pop
cmp
mov
out
sub
dec
lock
sbb
rorb
divb
int
fs
mov
sahf
popa
test
repz
cmp
xchg
dec
mov
std
mov
pop
popf
cmp
rorb
adc
xchg
jecxz
add
sbb
or
fs
ja
or
testl
xor
cmp
add
lock
mov
popf
testb
daa
in
add
int
fstl
add
addr16
inc
xlat
dec
rclb
lds
out
mov
imul
pop
scas
lahf
in
int3
or
xchg
pusha
cmp
or
and
flds
mov
sub
cmp
in
not
mov
in
adc
sarl
xor
sub
aaa
add
mov
or
mov
in
sbb
mov
icebp
adc
xchg
pop
dec
and
or
loope
leave
cmp
add
scas
cmc
icebp
into
jp
mov
pop
or
cmp
push
and
or
xchg
jne
das
idivb
mov
xor
add
push
inc
aas
mov
xchg
sar
scas
add
dec
cltd
lds
addr16
aas
dec
push
jmp
push
arpl
test
mov
push
inc
jecxz
cwtl
push
or
push
jb
cmpsl
rorl
mov
jge
int
cmpsb
adc
mov
orb
pop
movsb
test
lock
sub
cmpsl
repz
dec
outsl
inc
mov
push
aaa
push
dec
into
adc
xchg
out
add
pusha
mov
cmp
xchg
scas
push
or
mov
mov
cmp
adc
cmp
adc
sub
dec
imul
or
xlat
xchg
in
cmpsl
and
cmp
jge
dec
js
xchg
out
js
or
lea
or
mov
jbe
ret
inc
push
cmp
cwtl
jns
addb
xchg
cwtl
aad
xor
dec
add
push
dec
in
imull
add
adc
data16
nopl
repnz
in
out
sub
jecxz
pop
roll
mov
hlt
add
nop
push
xchg
call
sbb
lods
and
subl
out
pusha
add
mov
sub
cld
mov
nop
in
adc
inc
adc
mov
repnz
jns
rcll
or
rclb
dec
fwait
add
nop
push
shl
int
aas
fistl
mov
enter
lods
push
xchg
jg
pop
std
jno
pusha
cmp
mov
lret
lods
fcoms
clc
call
outsl
lret
add
mov
xchg
pop
or
in
jnp
cmpsb
pop
movsl
call
call
lret
or
inc
test
mov
and
push
les
das
jns
aad
sarb
xchg
nop
adc
pop
popa
sbb
gs
or
lock
cs
pushf
mov
mov
std
jnp
xchg
mov
sbb
adc
and
gs
ss
dec
test
push
or
sub
push
sub
imul
mov
xchg
fdivrp
arpl
inc
fbstp
push
pusha
hlt
movsl
jmp
dec
js
and
or
fs
sbb
add
pop
faddl
stos
jbe
test
mov
stc
imul
loope
orb
movsb
jge
mov
subb
shrb
cmp
jl
add
xchg
rorb
inc
mov
cmc
or
in
push
nop
or
add
jo
sbb
dec
in
jno
jns
adc
sti
in
mov
cmp
cld
jmp
hlt
sbb
mov
and
test
add
xchg
sub
push
adc
add
push
jmp
mov
sbb
xlat
int3
jmp
mov
cmp
test
push
inc
ja
inc
xor
jae
push
pusha
mov
or
popa
pop
push
insb
lahf
add
xor
add
ljmp
ret
sbb
or
clc
jmp
xlat
fs
fs
mov
add
pop
ret
sub
and
lcall
adc
insl
imul
sub
andb
cmp
sbb
inc
mov
mov
pushf
sbb
mov
test
jbe
mov
out
fidivrl
sbb
cmp
imul
or
fdivr
jns
adc
mov
arpl
mov
shll
addr16
jl
and
addb
fcmovnbe
rolb
jnp
mov
xchg
pop
loope
cld
sbb
pop
add
adc
add
mov
or
mov
jnp
cmpsl
or
cld
pop
mov
add
pop
out
pop
testb
cmp
lods
cwtl
add
leave
and
out
in
inc
pop
mov
nop
cmpsb
add
sub
imul
test
bound
cli
test
inc
xchg
cld
adc
cwtl
push
pop
jbe
dec
pop
pusha
dec
into
push
cmpl
cmc
add
and
clc
lea
add
std
mov
mov
leave
daa
jb
outsb
inc
xchg
xor
xchg
sbb
xchg
sub
mov
in
add
repnz
aam
lock
stos
or
sub
sub
or
and
jmp
cmc
add
push
cmpl
sbb
mov
dec
adc
jne
mov
and
add
jne
and
shll
inc
loope
ja
stos
aam
add
pop
cmp
orb
daa
add
inc
js
in
call
iret
inc
loop
mov
andb
inc
pop
sbb
test
or
xlat
cmp
into
sbb
shlb
cs
ljmp
sbb
or
add
dec
sub
and
dec
adc
loope
sub
or
movsb
cmc
subl
cmp
rcrb
das
add
adcb
dec
cltd
out
jbe
mov
push
sub
outsl
jl
rcrl
out
loopne
pop
mov
push
cmp
fisttps
and
push
jmp
cmpsl
or
cmpsb
sub
je
in
sbbb
add
cld
pop
add
in
jle
ret
add
in
add
mov
fisttps
add
call
dec
dec
xchg
les
mov
mov
push
pop
mov
rcr
adc
dec
sub
add
mov
sub
xchg
out
or
push
das
dec
aam
in
pop
sbb
push
add
mulb
mov
push
loope
ds
lock
loop
or
xchg
pop
xchg
cmp
or
aam
jmp
cmp
cmp
stos
push
mov
cli
lret
out
sbb
and
xchg
sahf
into
faddl
push
ret
fstpl
call
in
mov
xor
lock
popf
pop
push
jle
lfs
add
xchg
in
repnz
fucom
cmp
push
pop
push
outsb
xchg
adc
jb
sbb
pop
in
je
push
jbe
cli
into
fcoml
dec
jle
and
inc
push
hlt
mov
xor
and
sbb
inc
sbb
aaa
in
adc
pcmpgtd
mov
push
push
in
jbe
jmp
imul
add
sub
js
cmp
add
pop
stc
fs
mov
bound
push
hlt
pushf
loop
iret
les
dec
cmpsb
sub
loopne
lea
testb
rcll
icebp
sub
pop
push
popa
xor
adc
sub
jns
push
jns
add
push
add
jmp
popa
inc
xor
xchg
les
mov
jmp
int3
push
int
jp
pop
mov
out
test
and
or
and
xchg
push
test
mov
daa
push
negl
mov
add
add
xor
lock
loope
loop
and
leave
inc
test
dec
add
mov
pop
mov
adc
int3
cmpsb
fnstcw
popf
movsb
sub
push
cli
mov
shr
push
outsb
incl
ja
scas
xchg
nop
neg
addl
xorl
and
mov
push
add
xor
sbb
pop
xchg
mov
and
sbb
sbb
add
or
out
mov
jno
or
sub
inc
sbb
add
test
xchg
jbe
outsb
lret
and
push
gs
jns
lahf
adc
and
sub
push
mov
mov
jmp
ja
cmp
xorl
fsubs
cs
push
test
sub
push
jne
lcall
adc
les
loope
outsb
test
and
xchg
add
mov
push
inc
lods
push
sub
std
int
stos
inc
pop
dec
inc
or
and
or
roll
push
jmp
sbb
jp
cltd
daa
inc
gs
mov
push
pop
pop
cli
arpl
aam
push
test
pop
dec
xchg
fwait
mov
adc
stos
sub
push
rorl
mov
daa
hlt
in
fs
popa
ljmp
rolb
pop
or
call
jbe
jmp
or
pusha
sub
lods
sub
test
sbb
or
adc
or
aas
in
call
inc
fisubs
xor
xor
scas
cld
popf
xchg
movsl
xchg
pushf
add
sub
imul
cmp
icebp
xchg
mov
testl
cmp
xlat
mov
or
pusha
clc
ffree
xor
adc
fimull
rorb
clc
pusha
add
daa
xor
xor
add
dec
and
scas
inc
jne
adc
jbe
orb
int
or
test
cmp
add
lahf
push
or
arpl
stos
nop
mov
and
js
stos
add
rcrl
in
stc
mov
imul
adc
mov
jns
mov
push
outsl
mov
notl
sub
subps
shrl
stos
rcll
pop
fnsave
dec
rclb
push
loopne
enter
push
push
pushf
mov
pushf
cmp
inc
dec
dec
enter
mov
mov
add
adc
pusha
mov
or
popa
dec
call
popa
scas
ds
addb
inc
ret
and
sub
dec
lret
add
mov
cmp
jge
sahf
push
jecxz
mov
push
add
outsl
fprem1
out
push
mov
lea
pop
lods
pop
jecxz
stc
mov
in
lret
pop
dec
mov
or
xlat
in
inc
jmp
or
filds
cmpb
in
mov
and
cld
int3
or
dec
fldenv
nop
or
mov
pop
add
push
add
cmp
cmp
or
sarl
pop
insb
insl
sub
stc
nop
mov
jmp
xchg
rcl
push
xor
lods
jns
push
pop
stc
jmp
idivb
and
jns
mov
ljmp
push
cmp
aad
pop
pop
stc
movsl
cmpb
rcrl
repz
jbe
xor
mov
inc
add
movsl
loopne
ret
adc
hlt
pop
inc
adc
jo
and
sti
and
add
pop
pop
call
fldl
jns
mov
faddl
or
cld
shl
inc
mov
test
add
int
fists
add
xor
xor
mov
enter
fiadds
call
movsl
or
lea
nop
cmpl
andl
enter
stos
out
push
jo
in
std
xchg
or
dec
lock
adc
les
jno
sbb
sbb
cs
add
addr16
stos
push
or
bound
pop
movsl
ret
sbb
mov
dec
fs
clc
fwait
pop
push
dec
nop
sti
inc
repnz
stc
pop
test
shll
in
orl
push
xchg
call
rorl
jle
add
ljmp
xchg
adc
les
orl
pop
xorb
or
test
xlat
mov
mov
faddl
xchg
cltd
dec
push
xor
dec
shlb
clc
sbb
adc
adc
push
dec
iret
xor
mov
insl
mov
pop
xor
daa
or
push
lret
sbb
mov
enter
pop
and
mov
imul
mov
or
lret
es
or
lods
sti
negb
dec
addl
stos
call
push
mov
repnz
xchg
fdivl
or
aaa
call
and
xor
stc
mov
xor
push
xchg
jecxz
dec
add
leave
mov
mov
das
and
addl
add
lret
add
lock
lcall
fcmovnu
repz
cmp
add
sub
inc
rorb
sahf
enter
xor
cld
mov
mov
xchg
add
inc
jmp
jl
repnz
adc
stc
cwtl
je
push
dec
cmpb
adc
and
dec
pusha
idivl
pop
add
and
movsl
leave
loope
sbb
mov
lock
daa
filds
dec
lea
lock
cmp
xorb
sahf
mov
add
jl
xchg
add
cmpl
fisubs
mov
dec
xor
mov
lods
imul
pushl
fnstcw
test
js
mov
jo
add
or
pop
lahf
ficomps
jg
push
scas
jge
jle
and
ret
mov
outsl
push
add
loopne
jae
in
jmp
inc
dec
ss
add
dec
jne
xchg
add
xor
pop
cld
lods
pop
mov
rorl
out
in
lret
sbb
push
in
push
or
adc
jg
sub
mov
and
cmc
or
addr16
mov
aam
xchg
push
mov
ret
adc
jle
pop
cli
ljmp
std
adc
dec
sub
inc
jmp
iret
std
js
and
ja
dec
mov
push
repz
pop
movsb
leave
jne
jg
mov
flds
xorb
mov
lea
pop
inc
dec
out
push
cwtl
mov
ret
sub
ss
pop
loopne
jge
sub
stos
int
arpl
out
imul
cmp
cmp
adc
jge
test
andl
pushf
fdiv
daa
jo
dec
xchg
ficompl
and
jecxz
gs
cld
fildll
add
dec
mov
add
mull
sub
cltd
dec
lret
lcall
mov
sbb
repnz
pop
aaa
dec
push
jge
cmp
cld
jae
dec
cs
pop
push
cwtl
fnsave
lahf
mov
inc
dec
pop
call
call
jg
xor
mov
xor
out
cmp
and
push
push
stos
sbb
repnz
add
icebp
push
mov
fsubrl
xchg
xchg
rol
push
add
jae
fcoms
nop
mov
int3
lea
mov
popf
in
dec
aad
mov
push
insb
sarl
movsl
or
adc
les
jl
mov
jl
add
loope
mov
orb
lds
pop
rcll
aad
inc
pop
mov
fdiv
jp
add
mov
or
or
je
or
sub
fisubs
add
fbld
cmp
lds
xchg
and
push
ja
push
jno
enter
outsb
push
jecxz
dec
mov
pop
popa
outsb
sub
sahf
shrb
push
or
mov
or
shr
sbb
sbb
adc
icebp
pop
lods
shl
lcall
stos
mov
call
jle
aam
xor
call
sbb
pop
cmpsl
mov
jae
negb
scas
lcall
push
dec
cld
imul
mov
fisubrs
fadd
aas
cs
sub
mov
xlat
ja
loope
imul
sbb
add
mov
cmp
add
js
cmp
cmpsb
sub
aaa
adc
outsl
cmp
mov
stos
push
inc
fs
fucomi
mov
js
jno
je
add
mov
popa
push
sbbl
pop
sbb
push
hlt
sub
adc
pushf
ja
jnp
mov
imul
sbb
inc
cltd
fistpll
push
outsb
xchg
daa
pop
inc
std
mov
test
dec
test
cmpsb
and
addr16
add
gs
stc
lods
mov
add
aam
fisubrl
into
or
dec
push
inc
push
test
ret
jns
mov
mov
pusha
sarb
jns
iret
push
add
roll
lods
jno
xchg
mov
mov
push
adc
sub
push
pop
insl
or
ffreep
test
popf
test
xor
ret
pop
pop
sbb
xchg
pushf
xorb
test
cmp
sub
adc
in
outsb
movsl
scas
mov
jbe
cs
mov
push
push
lcall
jle
cmp
cmc
sub
jp
daa
pop
add
sub
sbb
xor
sbbl
jmp
jl
jae
mov
push
xchg
adc
call
pop
xor
out
push
subb
jns
jbe
fiadds
add
xor
push
cld
cmovge
or
push
jbe
pop
adc
dec
aaa
sbb
iret
adc
sub
mov
repz
bnd
dec
fcmovnbe
add
mov
test
outsb
xchg
add
inc
dec
or
mov
add
test
push
inc
js
cli
in
das
ss
insb
cmpsl
jnp
push
loope
mov
add
xor
les
test
sbb
push
pusha
mov
xchg
orb
in
sbb
inc
jecxz
pop
mov
notb
shlb
pop
sbb
iret
mov
push
or
add
stos
pusha
pop
out
mov
fisttps
add
cli
ds
aam
cmpsb
loopne,pt
mov
add
cmpsb
call
inc
mov
sub
cmp
dec
nop
push
rcll
fmul
push
das
int3
loope
add
mov
lds
and
out
pop
nop
stos
mov
aaa
jne
pop
push
mov
or
sarl
and
mov
andb
pusha
in
repnz
test
rcrl
clc
or
inc
mov
mov
popf
xchg
sub
fnstenv
sub
adc
into
stos
push
sti
mov
jns
call
ja
lahf
add
mov
popf
ret
sub
add
in
push
das
in
lods
adc
add
jne
daa
call
and
and
mov
pop
lea
adc
cmp
mov
add
jp
cmp
inc
scas
dec
mov
movsl
push
popa
insl
sarl
sti
stos
lods
int
inc
sbb
fsts
push
ljmp
repnz
xchg
jno
add
andl
pushf
cli
or
lods
push
sbb
mov
add
aad
pusha
mov
jp
pop
andb
xor
jg
ficompl
movsl
data16
decb
add
scas
sti
shrl
rorb
pop
dec
std
aaa
popa
daa
xor
jbe
in
xlat
scas
sti
adcb
clc
lret
test
sub
js
in
and
add
xchg
lock
mov
pop
inc
adc
pop
or
mov
jno
jmp
fcomps
testl
enter
push
jle
adc
xor
jl
inc
mov
pusha
and
add
mov
dec
pop
neg
repz
ljmp
roll
sub
cltd
jae
int
je
push
sbb
sti
sbb
addl
inc
adc
sbb
adc
add
loope
iret
call
pop
or
in
jmp
int3
inc
push
push
jne
aas
cmpsl
data16
daa
xor
popa
and
daa
mov
popf
xor
sub
mov
mov
pop
pop
pop
push
mov
movsl
jmp
gs
push
mov
push
dec
pop
lret
repnz
rcl
pushf
testl
dec
int3
arpl
adc
scas
fwait
testb
jb
jg
add
out
mov
add
xchg
sbb
shrb
decl
addb
ja
inc
jp
add
or
xchg
hlt
and
xchg
data16
mov
or
ljmp
add
cwtl
insb
cmp
pop
mov
dec
lcall
xor
mov
lock
jl
imul
jle
out
aad
xor
insl
stc
sbb
push
cli
push
push
mov
test
lret
lock
shrb
push
mov
in
insb
sar
cmpsb
or
sub
add
outsl
lea
adc
stos
mov
inc
fwait
cmp
sbb
jae
inc
mov
adc
lahf
push
addb
daa
jge
adc
cld
sbb
paddw
add
push
and
mov
loop
das
pop
mov
mov
out
jp
jp
rclb
jb
or
dec
leave
add
fidivrs
add
call
cmp
and
or
lcall
add
mov
jbe
inc
nop
divps
lds
mov
aam
add
mov
cltd
sub
push
int3
fs
ja
mov
outsl
add
mov
xlat
scas
dec
push
mov
push
dec
jns
das
mov
jle
inc
nop
xchg
adc
adc
xor
loope
cmp
les
push
daa
cltd
pop
fcmovne
mov
pop
mov
pop
and
mov
mov
loopne
cmp
inc
add
insl
jge
adc
lock
push
pop
pop
aas
rcrb
call
icebp
ljmp
and
mov
pop
out
sbbb
pop
test
loopne
mov
js
xchg
mov
jp
pop
dec
cmp
jno
fs
mov
pop
mov
stc
adc
sbb
mov
lret
mov
dec
das
xchg
cld
push
jo
ret
leave
cmpsb
cmp
outsb
cltd
add
imul
pop
and
movsl
les
jg
enter
addl
add
add
pop
movsb
daa
xchg
movsl
mov
lock
fbstp
mov
mov
test
mov
jne
in
sub
xchg
jmp
shll
jge
mov
add
lods
fiadds
push
or
sub
sbbl
xchg
ja
push
fldl
push
jno
add
mov
enter
mov
decb
fs
add
adc
cmp
repnz
call
stc
adc
stos
inc
jae
jbe
int3
inc
testl
jle
and
ja
lahf
or
imul
mov
les
jle
pop
lock
fs
sub
dec
pop
mov
push
mov
test
push
pop
repz
jl
add
je
adc
xchg
push
cmp
jg
out
mov
xchg
jae
jmp
mov
or
ret
pop
jge
cmp
nop
mov
loopne
sub
add
xchg
aas
call
pop
mov
popf
xchg
jmp
daa
popa
in
ffree
loope
mov
es
jb
imul
test
mov
jecxz
pop
mov
rclb
sahf
mov
sbb
pop
or
in
adc
pop
std
sub
sbb
sub
out
add
scas
pop
lods
jae
add
pop
push
dec
adcb
push
mov
in
jl
jge
mov
insl
add
outsl
fadds
loopne
mov
cld
lcall
repz
and
mov
dec
fsubrp
mov
pop
xor
mov
cli
pusha
int3
xchg
push
pop
push
mov
xor
mov
xchg
mov
adc
in
fwait
les
cwtl
xor
in
ret
orb
push
out
add
sahf
aam
in
xchg
testb
test
or
xlat
movsl
pop
mov
loope
xchg
rcrb
ret
test
mov
xlat
lcall
aas
mov
int3
scas
xor
insl
add
cltd
in
jbe
in
or
cld
pop
mov
pop
mov
jmp
into
push
incl
mov
loopne
cli
and
insl
mov
jmp
addb
dec
pop
pop
cmpsb
adc
shlb
mov
fstps
sahf
and
mov
mov
les
dec
shll
stos
cwtl
test
xchg
aad
xor
sti
fwait
jle
cwtl
sub
dec
mov
xor
loope
and
mov
cmp
xchg
pop
jmp
mov
jmp
or
or
dec
outsl
dec
jae
pop
mov
out
lea
mov
mov
je
je
cmpsb
cmpb
adc
adc
pop
jle
pop
and
push
or
or
sub
jg
insl
dec
adc
add
out
sub
pop
test
xor
cmp
lret
fcoms
popa
mov
xchg
mov
add
out
fdiv
in
add
ds
notb
xor
negl
mov
mov
mov
mov
insl
idivb
outsb
iret
add
insl
push
sbb
dec
add
add
pop
or
jmp
or
fwait
inc
mov
test
xchg
fs
arpl
in
rcrl
outsb
mov
ljmp
unpckhps
jecxz
or
xchg
cs
int
ror
cmp
add
push
sbb
push
fdivrp
pop
mov
inc
adc
cli
lea
popl
imul
dec
mov
lcall
jns,pn
dec
mov
xchg
dec
add
adc
xor
xchg
push
mov
jmp
mov
hlt
add
bound
add
push
or
mov
mov
inc
pop
sub
mov
out
inc
scas
cmpl
jo
cmp
mov
fcomp
and
and
and
mov
movsl
in
and
ficomps
xor
push
cli
fcomi
xchg
stos
fnstcw
mov
in
sbbb
repz
xchg
aas
mov
test
jecxz
adc
mov
mov
rcrl
and
pop
xchg
pop
and
jle
in
push
call
lods
fs
pop
sbb
cmp
pop
loop
leave
sbb
mov
xchg
sbb
ss
rorl
mov
das
nop
push
ljmp
pop
push
std
mov
mov
sar
xor
nop
in
jl
es
inc
add
push
ror
jl
ror
jnp
sub
out
sub
in
dec
adc
ds
dec
push
rclb
mov
adc
cmc
int3
fiadds
stos
dec
loope
push
iret
std
dec
adc
cmpsb
aad
or
xchg
push
adc
mov
adc
add
test
test
mov
cmp
sub
lcall
xor
in
movsl
ss
imul
mov
cs
cmp
mov
mov
push
jmp
mov
and
test
dec
xlat
mov
pop
outsl
in
pop
jbe
adc
pop
xchg
sbb
jne
loop
xlat
mov
lock
inc
adc
pop
pop
enter
stos
fisttps
and
scas
test
mov
jp
nop
jp
aam
cli
cs
movsb
lret
pop
leave
popf
jl
push
pop
jp
push
sbb
pop
call
push
lahf
fistl
add
int3
clc
xor
aad
xor
out
daa
mov
out
or
add
sub
popf
and
xor
lock
stos
ljmp
popf
fdivl
iret
mov
mov
andl
push
jo
jle
push
das
sti
mov
cwtl
xor
sbb
pop
mov
and
jae
imul
add
repnz
pop
popa
inc
xor
sub
cld
inc
popf
mov
movsb
add
int
mov
icebp
das
ds
rep
daa
pop
push
push
movlps
pop
or
fstpt
add
popf
sti
push
sub
test
and
or
sub
das
adc
bound
add
pushf
inc
cmpsl
lods
stos
mov
movsl
pop
loopne
lods
movsl
mul
or
imul
mov
sbb
pop
test
addr16
cmp
add
inc
inc
cmc
pop
mov
and
or
push
cmp
push
sysret
pusha
je
mov
and
fldt
adc
push
pusha
xchg
or
dec
lcall
lock
das
inc
repz
add
inc
fiaddl
clc
mov
das
push
pop
mov
xchg
mov
ja
push
or
paddd
arpl
iret
and
mov
dec
or
pop
nop
clc
nop
cld
add
pop
sbb
pusha
cld
mov
pop
sub
add
sub
pop
add
icebp
in
repnz
inc
repnz
or
aad
xchg
js
mov
xchg
mov
sbb
inc
rcr
test
jle
xchg
jmp
hlt
cmpsb
push
xor
jno
imul
std
pop
scas
cwtl
icebp
addl
mov
shrb
pop
or
jecxz
cwtl
out
mov
imul
add
lea
mov
ds
mov
adc
pop
lods
sbb
xchg
sub
lock
xchg
aas
faddl
stc
or
inc
cs
and
mov
cmpl
lods
aam
xchg
mov
mov
dec
scas
inc
ljmp
cmp
fstpt
lds
add
stos
and
cmp
inc
cmp
or
fsts
add
lret
or
sarb
imul
cmp
push
ds
in
xor
xor
add
adc
addb
ret
es
pop
pop
pop
or
mov
roll
insl
jae
dec
inc
and
push
out
and
cmpb
scas
rcrb
icebp
stos
xlat
repz
nop
outsl
out
dec
mov
rorl
cmc
xchg
stos
jns
cs
and
xor
addb
jmp
sub
xor
fstl
mov
in
add
sbb
out
lahf
pop
cs
movsb
in
icebp
add
addr16
imull
lret
loope
std
sub
xchg
out
mov
or
hlt
jnp
or
pop
ja
add
mov
iret
pop
mov
aam
lds
push
push
jecxz
std
cmp
add
pop
ss
mov
pop
lahf
jl
add
hlt
movsl
dec
add
xchg
std
movsb
add
popf
xlat
inc
add
push
fldl
xor
mov
or
xchg
addb
cmpsl
data16
jmp
pop
adc
adc
or
sbb
aaa
adc
imul
adc
out
jg
add
pop
divl
jl
mov
inc
rcrl
xchg
mov
sbb
sbb
pop
sbb
push
sub
test
jne
push
fdivrs
add
xchg
jl
push
inc
xorb
popa
jbe
movsl
aam
add
popf
adc
jne
stc
mov
push
sbb
jns
addl
inc
xchg
movsb
insb
and
das
pop
cs
and
adc
push
mov
xor
adc
mov
daa
push
cmpl
mov
test
sbb
lds
scas
mov
add
dec
cmp
push
inc
mov
or
jg
popa
jne
adcl
mov
clc
cmp
mov
not
xor
pop
or
lods
or
frstor
repnz
cmpl
jno
sbb
pop
dec
ficoml
cmc
in
je
lds
outsb
jb
in
or
mov
repz
aaa
cs
xchg
pop
jae
jg
add
stos
movsl
dec
fiadds
add
jns
in
insb
or
cltd
xor
xchg
cmpsb
repnz
push
jno
inc
dec
push
jmp
and
xchg
add
orl
ret
xlat
mov
int3
inc
test
js
je
arpl
mov
and
mov
in
call
inc
fldt
add
lret
cmp
ret
mov
xchg
fcomps
sbb
xchg
jle
andb
lock
add
or
cmp
ret
pop
sub
mov
mov
sbb
push
out
mov
and
scas
add
movsl
and
lgs
in
shlb
mov
subb
dec
scas
mov
add
lds
gs
test
idivb
mov
adc
pop
xor
cmpsb
aaa
fs
jecxz
adc
insb
mov
push
pushf
mov
dec
pop
add
sub
in
in
sub
sub
dec
adc
stos
les
fucompp
test
add
clc
xor
pop
aaa
mov
jge
clc
inc
inc
inc
pushf
mov
adc
mov
lret
daa
mov
inc
cmp
sub
rolb
dec
ret
shrb
add
xlat
inc
or
mov
bound
arpl
mov
leave
rcr
add
add
lds
mov
or
sbb
cli
js
mov
dec
cmp
int3
outsl
cmp
inc
sbb
mov
add
sub
dec
add
add
test
sub
sub
das
pop
test
and
ret
push
cmpsb
cmp
cmp
out
flds
fisubl
push
leave
rclb
sub
cwtl
lds
xor
mov
sbb
lea
push
loope
and
sub
ror
aam
mov
js
sbb
mov
sub
or
sbb
ret
sbbl
hlt
pop
pop
xchg
inc
cmc
pop
add
lock
add
fisttpll
testl
mov
add
xor
inc
cld
inc
cmpl
cltd
or
sbb
add
push
movsl
pop
sub
xor
sub
sbb
dec
push
xor
in
sbb
sbb
xor
adc
lods
ret
inc
adc
pusha
mov
cmc
icebp
movsl
xchg
lock
js
adc
xchg
or
adc
cmp
sbb
and
push
pop
ret
cmpsl
adc
loope
jbe
test
leave
push
into
repz
sub
sbb
adc
mov
cmp
push
push
push
mov
add
pushl
rcl
mov
repnz
ja
cmp
pop
push
sbb
add
inc
dec
test
lret
mov
pusha
mov
inc
sub
imul
test
ret
imul
loopne
stc
inc
push
or
mov
push
call
clc
leave
mov
stos
lret
pusha
les
ret
or
data16
int3
insb
mov
push
fcoms
mov
push
test
popa
push
sub
das
push
inc
pop
mov
test
mov
cwtl
hlt
lds
fsts
inc
push
sub
orl
dec
add
xchg
mov
std
fdivrl
sub
or
add
das
daa
push
sub
mov
mov
mov
cmp
xor
pop
jmp
sub
xor
scas
jb
xchg
rolb
mov
lahf
scas
into
push
jg
mov
xlat
fnstenv
or
cmp
adc
lods
adc
cmp
sub
cwtl
rcll
lret
pusha
adc
ja
inc
lock
mov
lret
and
dec
mov
in
aas
dec
inc
inc
shrl
pop
add
add
aad
in
pop
lea
call
das
add
rcrb
add
lods
cmp
sub
sub
rol
enter
ds
mov
pop
adc
fcmove
dec
push
inc
xchg
in
or
pushf
xchg
add
mov
xlat
lods
cmpsb
mov
sarl
pop
mov
add
stos
enter
into
push
add
sub
in
movsb
loope
or
in
adc
sub
dec
cmp
mov
shrl
mov
xor
cmp
dec
andb
icebp
inc
adc
push
sbb
into
cmp
inc
rorb
inc
pop
inc
aaa
pop
daa
pop
rclb
push
sub
adc
stos
hlt
xor
mov
pop
push
ss
std
cltd
nop
or
ret
add
pop
inc
add
pinsrw
or
mov
and
nop
mov
cmp
scas
cmp
jns
in
dec
sub
ficoms
jno
lea
push
adc
sub
arpl
fucomp
leave
iret
cwtl
mov
loope
sub
clc
jl
and
push
cmp
dec
mov
adc
mov
loopne
leave
dec
mov
add
int3
push
pop
rolb
lock
inc
lock
add
pop
scas
dec
cld
ret
sub
pop
or
sbb
mov
mov
adc
shll
cwtl
add
dec
inc
div
insb
lea
mov
cmp
push
stos
mov
shlb
dec
lret
mov
repnz
push
sub
cwtl
pop
xor
pusha
adc
repz
testb
stc
les
lea
mov
mov
and
aas
mov
or
sub
fists
mov
jecxz
mov
mov
jl
js
mov
test
add
div
sub
xchg
xchg
pop
clc
mulb
lock
add
repnz
sbb
and
pop
rcrb
push
inc
mov
cmp
stos
pop
sub
mov
jo
daa
xchg
testl
push
inc
mov
mov
cmpb
xor
push
add
es
inc
cli
jecxz
out
pushf
jnp
enter
insl
arpl
adc
sahf
cmpsb
lret
xchg
lock
xchg
pop
and
or
push
sahf
dec
xchg
loopne
inc
or
push
hlt
xor
pop
sbb
xchg
data16
inc
je
pusha
push
and
cmp
add
add
cmc
adc
add
dec
mov
add
subb
addl
adc
and
cmp
xchg
push
cmp
cli
sbb
shll
xchg
out
jae
xor
xor
and
leave
decl
lds
ret
pop
subb
jns
add
fnstcw
lock
adc
or
jo
cmp
xor
or
mov
push
xchg
jg
cmp
or
mov
push
adc
cs
mov
or
addl
cli
mov
jl
cwtl
mov
andb
icebp
pop
rolb
fldl
sbb
out
xchg
rcr
out
and
dec
push
adc
js
gs
sub
fildl
cmc
ret
mov
add
push
addl
and
jb
push
push
mov
hlt
adc
add
out
ret
out
sbb
inc
add
cmp
add
sub
add
adc
xor
or
push
adc
test
dec
into
push
rcrb
cmp
into
loopne
cmpb
jae
jmp
shlb
jge
mov
adcl
inc
rolb
jns
outsl
mov
add
add
xor
les
jne
in
add
mov
xchg
rcll
int3
mov
hlt
adc
lock
adc
mov
push
or
and
stos
jno
and
mov
xor
mov
push
inc
cmpsl
mov
xchg
filds
sub
pop
add
stc
mov
and
mov
and
add
out
pop
mov
xchg
xcrypt-ctr
cmpsl
sbb
dec
mov
add
jg
xchg
in
andl
or
enter
aad
jle
mov
iret
mov
leave
mov
pop
in
sub
mov
mov
mov
mov
fs
mov
xchg
mov
loope
add
jle
mov
push
push
push
push
cmp
aaa
jp
ljmp
das
stos
adc
cli
int
push
or
icebp
movsl
inc
jae
add
jbe
test
cmp
shr
mov
adc
in
add
xchg
pushf
cmpsb
sub
loope
rcr
in
mov
shrl
repnz
mov
mov
sub
ss
outsb
daa
add
mov
xchg
nop
jp
lret
in
test
mov
add
ja
movsl
je
pminsw
dec
sub
int
in
scas
ss
mov
push
outsb
aas
sub
faddl
dec
pushf
or
std
test
inc
bound
cmp
xorb
in
pop
insb
repnz
xorb
cmp
in
lock
test
stos
mov
mov
sbb
cs
sbb
sub
or
iret
mov
cmp
cmpsl
lock
sbb
pusha
lret
add
mov
andl
cs
add
xchg
xor
sub
inc
mov
lock
cmp
pop
fldt
cmp
cmp
faddl
scas
out
pop
add
xor
mov
out
mov
add
pop
mov
addr16
sarb
cwtl
mov
adc
or
adc
daa
add
and
add
lock
jg
adc
adc
sub
les
repz
cmpb
sbb
inc
jo
jp
jns
std
int3
sbb
scas
fcompl
xor
clc
xor
inc
xor
mov
mov
or
enter
test
leave
sub
mov
mov
mov
xchg
es
addb
jecxz
movsb
aaa
sub
nopl
mov
cmp
cmpsb
xlat
mov
fdivp
inc
pop
inc
jns
push
cmpsl
movsl
mov
fwait
push
mov
xorb
inc
xchg
xor
pop
cmp
push
loop
ficompl
dec
and
out
flds
cmp
jl
add
sub
hlt
aas
popf
aaa
shl
mov
mov
aad
cmp
pop
adc
fwait
cmc
push
out
sbb
add
imul
mov
pop
scas
in
add
int3
or
xchg
fisttpl
testb
pop
pusha
cmc
fdivl
xor
mov
push
rorb
fsubl
and
lds
add
lods
scas
or
shlb
dec
imul
inc
push
insb
mov
dec
cmc
inc
sbb
jecxz
imul
mov
adc
pop
pop
or
je
cwtl
or
and
xchg
repz
or
pop
adc
popl
jno
jns
fwait
push
lcall
cli
dec
add
and
and
rcrl
in
add
push
iret
xlat
sbb
es
push
leave
in
popa
cmpsb
dec
test
fs
add
mov
out
rclb
push
lea
jg
pop
gs
in
mov
in
jle
sti
outsb
pop
sub
or
pop
mov
test
sbb
outsl
mov
shlb
int3
xlat
sub
push
xchg
stc
shlb
jg
cmc
test
xchg
fadds
push
jp
mov
ljmp
in
jb
cwtl
aam
gs
pusha
or
cmc
pop
jge
lea
jne
pop
cmp
lods
adc
out
and
pop
les
sub
data16
mov
mov
mov
out
std
pushf
pop
adc
add
incl
sub
fxch
clc
add
repz
repnz
mov
pop
jge
hlt
inc
jbe
add
mov
or
add
jge
jnp
adc
cmp
pop
sahf
dec
inc
dec
jmp
add
dec
and
out
cs
pusha
push
cltd
xchg
mov
flds
and
cmp
xchg
sbb
or
sahf
sub
lret
sbb
test
and
mov
roll
jl
add
popa
mov
ja
pushf
jne
push
xor
mov
mov
mov
pop
or
dec
pop
lret
lcall
mov
int3
out
into
add
mov
idivb
hlt
jl
sbb
push
or
mov
cmp
mov
mov
insl
add
outsb
arpl
sahf
push
jg
mov
or
xor
sarl
lcall
paddusw
jmp
push
dec
xor
xor
adc
dec
add
mov
cmc
inc
popf
or
mov
jae
sub
xchg
add
adcl
jbe
or
mov
adc
xor
enter
or
test
mov
jo
and
sub
add
jg
outsb
mov
pop
je
aam
adc
pop
mov
xchg
fldenv
popa
mov
sbb
int3
jmp
pop
xchg
test
push
cmp
dec
sbb
ja
dec
test
test
mov
dec
dec
int
mov
add
pop
lret
and
mov
nop
mov
jne
jb
sub
pushf
add
sbb
xor
or
clc
loopne
aaa
adc
mov
and
xchg
mov
movsb
popl
mov
push
mov
xchg
cmpsb
lds
loopne
jne
je
fcomp
stc
sbb
cmp
imul
aaa
adc
orb
movb
xor
dec
xchg
addb
add
push
sbb
sysret
push
dec
sbb
fnsave
push
lret
sbb
stos
shrb
and
in
jo
mov
jnp
push
lret
inc
pop
mov
out
add
cwtl
mov
and
xorb
or
push
push
and
orl
mov
lret
mov
push
add
push
pop
scas
pop
fnsave
in
pushf
add
sbb
jb
ret
jnp
mov
xor
inc
in
mov
cmp
push
add
sahf
xor
popa
lods
mov
push
ficompl
jge
rorb
and
insb
add
push
scas
aad
inc
ror
dec
sarb
adc
mov
adc
and
pusha
xor
push
outsb
call
xor
pusha
bound
scas
add
bound
push
cmp
fildl
inc
out
cmpl
dec
cmp
add
push
mov
cmp
rcr
adc
pushf
pop
ret
js
dec
mov
aas
das
mov
pop
add
nop
fsubl
setns
sbb
and
lock
outsl
test
insb
inc
sub
dec
xchg
mov
add
aaa
popa
nop
movsb
add
pop
test
add
test
orb
loopne
mov
decb
xor
filds
stos
test
dec
out
loope
cmp
test
mov
clc
xorl
and
jne
ror
daa
add
stc
lods
mov
test
cwtl
test
xchg
xor
add
add
mov
mov
and
add
jns
pop
sbb
mov
out
mov
and
or
and
push
addr16
gs
jg
add
mov
jmp
add
and
xchg
mov
sbb
pop
nop
push
jae
inc
test
mov
cmp
outsb
or
lea
add
pop
mov
roll
mov
popf
pop
add
mov
dec
int3
xor
loope
inc
cmc
jbe
mov
pop
outsb
sti
les
push
or
jno
cmp
enter
add
and
in
dec
mov
add
inc
test
pop
inc
sub
clc
divb
cmpsl
add
pop
sub
xor
cld
dec
jl
adc
mov
sti
lds
or
inc
and
mov
dec
add
test
push
mov
dec
mov
mov
push
bound
add
add
jno
stos
add
add
adc
popa
in
mov
xor
rcrb
into
lods
addl
je
or
xchg
ficomps
adc
mov
rclb
dec
pop
xor
xchg
inc
in
cs
mov
adc
into
push
call
lcall
lret
add
stos
add
push
push
fadd
jnp
inc
test
lcall
push
or
aaa
shll
ficoms
push
popf
or
cmp
nop
push
jb
add
add
aaa
jbe
roll
pop
push
cld
mov
mov
mov
dec
cmc
add
inc
jbe
add
imul
stc
xor
sub
mov
loope
in
and
pop
adc
je
mov
in
and
inc
lods
bnd
loope
je
or
mov
add
pop
scas
pop
jmp
sbb
push
or
adc
add
pop
jl
add
sbb
add
cmp
and
jle
mov
cmpsl
sahf
mov
jbe
mov
push
add
aam
popf
add
jnp
adc
insb
sbb
add
sbb
lock
xchg
push
frstor
add
mov
add
inc
js
sub
xchg
jno
iret
push
pop
xor
mov
cmpb
xchg
cmpb
imul
jnp
mov
imul
cld
stos
inc
or
pop
fistpl
nop
call
push
jge
push
push
lods
jne
and
inc
dec
add
cmpsl
mov
sti
cltd
add
cld
mov
add
mov
shll
lcall
and
mov
js
data16
xchg
int3
shll
add
mov
imul
push
out
scas
fdivrl
add
mov
mov
jne
push
pop
sbb
push
mov
add
test
fbstp
pop
add
subl
lods
dec
in
out
or
jbe
jg
jo
mov
inc
stos
push
pushf
repz
fildll
xchg
mov
dec
enter
rorb
lock
stos
pop
rcrl
sahf
cmpsb
pop
nop
add
rclb
and
cmp
testl
in
pop
mov
dec
mov
nop
add
xor
enter
jg
data16
clc
mov
filds
aas
rolb
add
cld
add
push
iret
aad
inc
enter
pushf
in
nop
add
lock
movsl
arpl
out
mov
mov
sbbb
cld
push
xorb
sbb
imul
test
xchg
mov
xchg
std
inc
ror
pop
dec
xchg
pop
cmp
faddl
daa
fstps
loop
dec
and
mov
in
outsb
in
push
jne
add
es
adc
dec
ffreep
mov
test
fldl
pushf
mov
push
sbb
lods
addb
call
pop
push
sub
cld
adc
xchg
xchg
aas
lahf
add
idivb
int
push
mov
movsb
xchg
pop
sbb
scas
dec
adc
pusha
jae
jo
cmpsb
addr16
push
or
rcrb
cmpsl
mov
pop
adc
into
addl
sbb
in
add
mov
xor
hlt
mov
xchg
fidivl
cwtl
push
or
cmp
imul
cmp
or
leave
rolb
ds
and
sub
into
mov
sbb
mov
neg
mov
add
inc
dec
or
mov
test
and
in
and
xchg
fadds
mov
mov
push
add
gs
push
mov
bnd
jnp
and
pushf
xor
stos
cmpl
outsl
mov
lea
dec
xor
cmp
mov
sbb
addr16
pop
xor
lcall
popa
add
int
fimull
and
sbb
cmp
sar
out
adc
adcb
out
nop
or
call
pop
xchg
lock
jmp
in
les
and
cltd
add
repnz
lds
cmpl
jle
sbb
or
fisubs
fadds
das
mov
xor
inc
pop
inc
xchg
mov
fcmovne
sbbl
inc
mov
out
outsb
xor
add
inc
and
xor
sbb
push
push
orb
add
ret
cwtl
cwtl
sbb
cltd
add
pop
nop
cli
adc
xor
lahf
inc
xchg
gs
loope
ss
or
nop
inc
add
adcl
jae
fwait
hlt
xlat
push
addb
lock
sub
incb
clc
push
inc
pop
mov
add
mov
adc
add
adc
imul
mov
ret
and
dec
add
pop
std
sub
jge
cmp
push
add
inc
test
sbb
enter
mov
jp
pushf
sahf
popa
into
lret
or
jns
push
and
mov
pushl
bound
rorl
xlat
jg
mov
addr16
inc
mov
sbb
mov
cli
sarb
dec
filds
dec
sbb
in
in
add
xlat
mov
rol
push
inc
push
mov
and
sbb
add
xor
cmpsb
xchg
add
pcmpgtb
stc
ja
test
xchg
jnp
cmp
dec
xchg
repz
add
sbb
xor
stc
bound
mov
add
push
jmp
inc
inc
pop
stos
push
jbe
or
jns
jnp
loopne
mov
ret
or
jmp
pusha
or
add
mov
and
aam
add
lea
aas
es
sbb
daa
ficomps
incl
inc
aam
jecxz
cmp
cmpsb
pop
into
hlt
add
or
xchg
adc
inc
loopne
outsl
pop
sbbl
in
lret
xor
sahf
rol
mov
jecxz
push
in
mov
andl
pop
mov
or
clc
add
es
mov
add
or
add
mov
xor
adc
pop
cmp
fcomps
movl
mov
sub
aad
lcall
in
mov
push
movb
lea
adc
mov
pop
imul
xlat
fs
pop
mov
pop
xchg
xorb
vpcmpeqd
call
sbb
adc
pop
xor
fiaddl
or
lcall
jae
ja
sbb
js
pop
clc
xchg
cs
jno
mov
cmpb
sti
sbb
in
sbb
cmpsl
add
and
enter
sub
lret
add
scas
xchg
out
pop
adc
add
or
leave
js
cld
mov
mov
mov
jne
int3
fnstcw
inc
nop
xchg
jb
or
inc
mov
add
outsb
cmp
jnp
bndstx
inc
int
mov
and
sti
pop
rolb
stos
iret
addr16
jo
add
or
lahf
xor
xorb
xchg
cmp
lcall
pop
cmp
mov
push
ss
pusha
push
shl
out
add
popa
outsb
loopne
add
clc
mov
add
lods
jbe
mov
cli
mov
cmp
movsb
and
xor
imull
outsl
sbb
ljmp
mov
negl
push
dec
mov
clc
mov
jge
test
in
stc
sbb
add
imul
mov
cmp
mov
imul
divb
fisttpl
mov
or
jno
xchg
pop
pop
mov
orb
and
add
sarl
imul
call
cmp
shll
shl
pop
adc
and
fdivl
pop
jae
add
xor
lahf
scas
icebp
push
add
inc
add
add
les
and
das
into
inc
xor
add
popf
lcall
in
and
test
clc
add
lea
pop
out
jnp
pop
xorl
push
sarl
or
call
cmpb
adc
aam
xchg
dec
clc
sbb
aas
jecxz
cmp
cmpsb
push
daa
add
fbld
jmp
xor
rorb
adc
mov
movsl
xor
stos
cmp
adc
dec
das
cmpsl
push
out
repnz
cmp
add
in
jns
add
and
ja
imul
movsb
jl
repz
testl
jmp
lds
movsl
add
das
or
and
mov
add
and
ret
mov
ljmp
jp
out
ss
addb
push
push
stc
jb
into
jge
shll
fdivl
and
or
xorl
lods
push
scas
xor
or
jle
out
inc
add
add
cld
mov
inc
xor
pop
jno
add
lods
dec
jg
aas
mov
rolb
icebp
mov
xchg
insb
sbb
and
jbe
subb
rclb
arpl
jb
sbb
and
inc
pushf
jecxz
loope
and
sub
out
sahf
jp
or
xor
loopne
jae
shrl
cld
jnp
into
orl
adcb
or
mov
add
lods
sub
pop
push
ja
add
call
outsb
inc
add
xchg
andl
mov
cltd
sbb
sbb
dec
pusha
and
incb
ja
das
hlt
out
mov
dec
mov
sbb
aad
mov
xor
jg
ljmp
pop
loopne
add
push
stc
mov
mov
dec
add
pop
adc
roll
xbegin
out
add
fcomps
fistps
xchg
lods
cmpl
pop
mov
add
mov
add
bound
cmpsl
aaa
mov
or
pop
sbb
in
bound
xor
add
loope
mov
out
add
mov
cli
add
mov
dec
cmp
movsb
std
clc
mov
add
sub
mov
mov
aaa
jae
pop
jge
jg
xor
dec
sbb
imul
aam
jecxz
cmp
jg
mov
add
out
dec
aaa
cmpsb
std
repnz
sub
insl
xchg
adc
enter
pop
and
pop
xor
loopne
out
add
or
stc
push
ja
inc
les
outsb
push
rolb
and
aad
loope
pop
cmp
xchg
or
mov
pop
push
inc
lods
or
inc
or
hlt
jbe
cltd
lret
call
or
sub
add
pop
inc
dec
cwtl
lret
add
xchg
ficoml
es
scas
add
jge
sti
cmp
mov
push
outsl
push
mov
cmp
fists
add
shl
dec
pop
add
adc
push
inc
adc
jnp
mov
stos
shll
add
adc
int
aad
mov
dec
mov
movl
jge
enter
pop
sbb
ja
sarb
mov
adc
fdiv
dec
add
popa
test
addl
inc
pop
pusha
inc
rolb
lcall
pop
add
sarl
out
je
in
xor
out
jmp
outsb
and
enter
mov
jbe
add
xor
das
sbb
inc
add
jg
or
mov
mov
and
inc
jl
pop
push
add
add
cmp
adc
aaa
add
xchg
addl
and
shlb
orb
xor
pop
andl
mov
push
jae
xchg
sbb
or
or
cmp
push
aas
or
mov
add
mov
rorb
std
add
repz
pusha
mov
filds
cltd
rcrl
shr
mov
adc
test
clc
mov
and
cs
cmp
jae
push
popf
roll
xchg
push
add
pop
xor
ret
leave
or
push
fnsave
dec
pushf
mov
sub
mov
fiaddl
sbb
rcl
test
daa
xor
imul
or
add
movl
test
sbb
ret
jecxz
addb
loope
push
inc
mov
and
test
call
or
cmp
jl
adc
mov
fstpl
add
and
adc
add
sbb
hlt
and
pusha
cs
cld
pushf
jmp
jns
in
popf
sahf
enter
xchg
ret
std
add
adc
es
or
and
add
inc
int3
mov
push
nop
mov
js
loopne
cmpb
or
cmp
in
pop
and
movsb
mov
fbld
sub
xchg
mov
lds
hlt
xor
push
iret
mov
mov
lahf
call
jnp
jo
inc
cmpsb
cmp
mov
cld
mov
js
add
jnp
sahf
mov
js
inc
icebp
sbb
pcmpgtw
fisttps
les
imul
sub
add
and
repnz
fldl
sbb
sbb
sbb
mov
cld
push
xchg
pusha
mov
push
and
push
loopne
subl
in
xor
out
cs
add
rolb
or
xchg
add
pushf
imul
stos
add
jg
int
xchg
sahf
push
das
fisttpll
sarb
mov
bound
lods
das
xchg
test
adc
add
ja
dec
out
adc
rorb
mov
push
dec
stos
adc
add
movb
in
cmp
adcb
jl
clc
testl
hlt
or
push
mov
jb
push
mov
mov
add
out
jne
add
sub
lahf
add
sub
pop
les
xchg
dec
sbb
add
ljmp
sar
aas
xchg
mov
jns
pushf
inc
xchg
sbb
call
imul
add
inc
test
adc
rclb
or
adc
add
out
stc
add
lret
pop
sub
lock
cmp
xchg
add
pop
jnp
add
setg
idiv
insl
dec
iret
loopne
add
repnz
sti
pop
shl
outsb
xchg
gs
int3
or
nop
mov
dec
push
pop
out
ret
gs
cmc
mov
sahf
dec
jo
lahf
dec
add
in
mov
mov
add
or
push
lock
movsl
fsubl
add
add
adc
add
xor
add
sub
jl
sahf
add
sub
faddl
ja
dec
jbe
cmc
cli
pusha
jmp
mov
fistpl
and
sti
out
pop
mov
out
daa
pop
xor
nop
push
sbb
in
jae
dec
add
hlt
into
cmp
mov
cld
lahf
ret
sbb
nop
je
xor
push
add
adcl
dec
adc
mov
adc
jp
test
nop
adc
add
daa
shlb
mov
jle
push
xor
mov
loopne
bound
cmp
adc
mov
shlb
xor
cltd
xchg
insl
fcompl
cmpsl
or
adc
lods
gs
cmp
imulb
jb
or
rcll
mov
or
add
inc
add
aaa
mov
mov
pop
roll
clc
syscall
inc
fwait
shrb
movsb
insl
hlt
add
or
jno
add
cmp
sbb
inc
add
dec
jbe
les
cmp
cmp
loopne
or
shlb
incl
jo
sbb
cltd
int3
mov
sub
stos
push
jmp
ret
subl
and
mov
and
add
cli
xchg
sub
dec
cmc
add
mov
stos
pop
sarl
add
sbb
mov
imul
xchg
insl
lods
mov
add
int
cld
out
lret
mov
adc
lods
pop
hlt
add
out
mov
popf
sahf
addr16
movsb
add
inc
or
loope
mov
inc
lret
jle
push
fs
jo
testb
lcall
add
mov
nop
mov
jnp
sub
xchg
push
shl
das
add
movsb
pusha
je
xor
xchg
dec
popl
movb
push
mov
mov
mov
cmp
int
in
sarl
inc
add
test
add
push
xchg
add
mov
lret
orb
popf
mov
add
sahf
pop
std
adc
dec
bound
jge
mov
pop
cmc
add
cmp
icebp
rclb
out
aas
sahf
iret
jns
mov
test
push
ret
lock
rolb
push
push
js
cmpsb
out
mov
andb
mov
or
pusha
cmpsl
mov
and
add
mov
push
push
pop
cmp
add
mov
inc
ljmp
addb
stos
sub
add
mov
add
dec
adc
pop
mov
push
rorb
repz
jg
inc
mov
add
sbb
sbb
push
or
dec
js
test
or
add
mov
and
cwtl
adc
xor
mov
xchg
adc
push
xchg
add
test
popf
mov
int
fisttps
inc
and
test
data16
std
and
bound
pop
stos
cmp
int3
fdiv
sub
iret
and
fisubrl
dec
push
ret
std
nop
hlt
and
sub
movsl
sub
out
jecxz
andb
adc
add
mov
mov
push
hlt
add
adc
sar
add
cs
in
jl
mov
or
shll
xor
dec
mov
push
jg
add
mov
pop
filds
jae
lahf
cmpsb
dec
jg
lock
push
enter
add
cwtl
scas
cmp
int
mov
insl
inc
mov
rorl
add
int
add
repz
adc
add
dec
pop
neg
cmpsl
mov
push
push
mov
and
add
js
ss
ret
jp
add
jnp
and
cmp
rolb
fxch
sub
xor
hlt
fwait
xor
or
jae
pop
clc
and
add
es
sbb
inc
repnz
cld
lods
cmp
cmpl
pop
pop
andl
mov
pop
sete
mov
ljmp
rcrl
fs
xor
adcb
ljmp
push
ret
cltd
das
mov
pop
mov
mov
rol
popf
in
adc
cwtl
push
add
xchg
mov
mov
cmp
ret
pop
fs
jb
add
mov
insl
xchg
ljmp
pop
inc
adc
sahf
pop
or
jecxz
jno
add
add
fadds
jge
or
xchg
clc
xor
pop
mov
xchg
xchg
pavgw
xchg
pusha
and
push
and
shrb
add
lock
mov
cmpsb
or
movb
jp
push
add
mov
adcl
add
xchg
out
jae
daa
push
iret
mov
jo
sbbl
mov
jo
cld
add
push
in
mov
bound
cmp
incl
loopne
adc
scas
xchg
add
and
iret
inc
mov
mov
inc
xchg
addr16
sbb
int
mov
push
jns
mov
xor
and
out
xchg
add
add
je
testl
push
jo
sbb
or
mov
imul
dec
jl
repz
shlb
int3
mov
je
daa
jb
popa
xchg
dec
mov
es
adc
or
add
repz
pop
stc
mov
mov
cmp
sahf
push
add
gs
sti
xlat
xchg
cmp
jnp
mov
add
mov
es
xchg
xor
arpl
rcrl
add
test
sub
out
dec
add
mov
add
xchg
es
cmp
mov
add
in
dec
incl
and
push
popf
jae
roll
push
add
icebp
aaa
add
lret
mov
xchg
mov
aam
cmpsl
into
add
cwtl
jl
in
xor
adc
jp
add
xchg
sub
test
out
add
idivb
mov
shl
cli
sahf
repnz
and
push
add
shrb
inc
add
sbb
daa
xchg
add
repz
scas
call
sti
and
rcll
add
inc
enter
add
jg
mov
jp
lahf
je
imul
dec
add
addr16
mov
inc
cld
add
call
pop
divl
jle
adc
sbb
ss
cwtl
bound
nop
mov
roll
icebp
sbb
add
scas
sbb
mov
stos
jnp
push
mull
adc
push
cmc
mov
into
orb
adc
dec
pop
cld
leave
sahf
inc
push
jp
test
add
xchg
sub
mov
cwtl
les
out
rol
ljmp
inc
cwtl
loope
add
sub
mov
cmpb
addr16
and
cwtl
inc
add
std
sub
sbb
outsl
cmp
jmp
sti
cmp
dec
or
orb
arpl
pop
push
add
pop
movsl
xor
dec
sub
xor
ficoms
in
fstps
pop
lcall
mov
shl
popf
push
sub
sub
repz
lahf
add
xchg
mov
add
mov
lock
fs
stos
xor
and
jns
dec
pop
mov
jbe
inc
jl
sbbb
lret
dec
cmp
mov
pop
arpl
mov
push
clc
push
jbe
add
addr16
sahf
dec
scas
jle
or
stc
dec
mov
mov
sub
scas
cld
adcb
cmp
add
and
sub
leave
mov
jge
pusha
repnz
xchg
sahf
inc
jno
inc
add
and
add
add
cmp
sbb
andl
push
fwait
aam
jno
int
frstor
dec
arpl
sbb
jecxz,pn
mov
shrl
pop
in
dec
push
repnz
xor
in
es
pop
cwtl
mov
lods
clc
lea
enter
add
ret
mov
mulb
add
cmp
or
testl
sti
push
add
pop
xor
repnz
icebp
loope
imul
ret
jnp
add
jecxz
bound
dec
sub
add
sub
jnp
pop
mov
mov
sarb
push
adc
movl
sub
add
lods
fs
dec
and
fsubs
add
ljmp
ja
jnp
outsl
loopne
test
arpl
cmp
fcoml
dec
flds
dec
add
xchg
je
iret
sub
add
popf
lret
sub
and
cmpsl
daa
fistps
roll
test
mov
js
cld
adc
mov
jo
mov
dec
sub
testl
sub
iret
sub
add
push
shlb
xlat
or
sbb
mov
fistpll
test
inc
out
mov
sbb
test
loope
mov
and
push
dec
cmpsl
mov
adc
add
andb
sbb
sbb
sti
fldl
mov
mov
jge
pop
imul
lock
rolb
jnp
fbld
jb
and
fiaddl
insb
cli
sbb
jp
add
dec
icebp
idivl
jg,pt
adc
dec
sbb
sub
jle
add
negl
push
jo
jbe
inc
scas
add
xor
jae
enter
or
sbb
dec
mov
dec
sahf
push
add
lret
loop
gs
push
jae
cs
mov
flds
ficoms
cmpl
add
add
xchg
pop
push
mov
pop
fcomp
movsb
fbld
add
fwait
insl
rolb
xor
adcb
xor
jp
sub
pop
insb
int3
mov
xchg
mov
and
shrb
add
fldcw
sbb
and
add
xor
push
clc
leave
neg
add
sbb
lahf
sbb
push
dec
mov
jle
sub
dec
mov
dec
inc
push
xor
xor
inc
fnstenv
inc
jns
sub
lret
xor
sbb
cltd
add
inc
lods
mov
je
cmp
add
mov
and
add
mov
add
or
pop
scas
test
test
jl
jge
insb
adc
loope
push
adc
cmp
cmpsb
sbb
push
xor
add
out
clc
push
xor
and
ficompl
movsb
in
stos
imul
or
xchg
add
sub
mov
test
movsl
shrl
pop
push
pop
xchg
jno
add
inc
pusha
jg
sarb
add
jae
adc
cmpsl
cmp
mov
xor
push
fdivs
gs
cmp
adc
or
mov
add
inc
inc
ret
push
add
sub
and
lods
inc
in
add
pop
mov
adc
popl
out
cli
fsubp
mov
push
mov
fidivl
cmp
insl
or
inc
add
cltd
add
ret
sub
and
add
pop
mov
pop
shll
in
push
sub
cwtl
push
or
dec
dec
sub
inc
xor
js
mov
cmp
dec
imul
hlt
sahf
inc
xchg
clc
and
insl
mov
mov
cmp
or
loopne
add
cltd
cld
or
cmp
mov
mov
jg
adc
sub
mov
xor
les
dec
jmp
inc
iret
mov
xchg
jnp
push
or
pop
loope
push
cld
pop
out
add
push
in
int
xchg
add
dec
rcrb
lret
cmpsl
popf
dec
mov
add
pop
movsl
addl
loopne
adc
mov
pop
push
fimull
pusha
add
push
inc
mov
jecxz
lret
xor
lods
dec
mov
and
pop
or
pop
push
cltd
mov
push
xor
add
pop
xor
pop
xchg
data16
pop
inc
dec
fadds
fisttps
imul
lret
leave
rcl
lahf
sub
subl
fdivrs
fmull
cmp
ret
dec
pop
shrl
sahf
out
cmpb
scas
add
and
das
shl
add
jecxz
add
cld
fs
in
aam
push
add
mov
outsl
sub
push
cmp
and
cwtl
cmp
mov
jbe
sub
jae
adc
icebp
mov
aam
iret
xchg
inc
add
pushf
inc
mov
xlat
jne
sbb
inc
out
lss
insl
int
int3
movsl
jb
add
loopne
arpl
or
pop
add
stos
pop
pop
jo
add
dec
or
repnz
xchg
push
dec
add
cmpl
cmp
sub
cmc
jle
into
jns
inc
jb
imul
jmp
xchg
add
mov
lcall
add
lret
fildl
and
gs
fucomip
scas
repnz
add
jg
or
add
in
roll
add
addl
jae
dec
out
je
int3
sti
in
push
mov
aad
pop
popf
clc
jo
add
jno
mov
fs
into
nop
addr16
out
add
fldt
sbb
sub
divl
sbb
movsl
pop
sub
add
into
jae
dec
and
pop
sbbb
add
cltd
cmp
add
jl
push
add
jge
fidivrl
cli
pop
andb
pop
sbb
adcl
into
add
jecxz
mov
add
and
fadds
shl
mov
outsl
repnz
lock
aad
bound
cs
orb
lods
push
push
adcb
fistps
xchg
outsl
shll
inc
sti
cld
lahf
add
bound
jmp
and
adc
jo
push
ljmp
clc
scas
decl
movsb
iret
nop
jo
sbb
add
pop
ja
add
outsb
and
pop
inc
jo
add
shll
adc
filds
test
push
rcrb
push
xchg
lds
push
das
pop
jmp
cwtl
sbb
or
hlt
sbb
sbb
pop
daa
sbb
ss
insb
shr
xor
mov
jmp
cmpl
sbbb
add
addr16
loopne
mov
int3
add
js
and
std
dec
loopne
or
hlt
cmpsb
sub
or
insb
adc
test
cmc
mov
push
dec
sbb
in
add
int
adc
push
add
flds
scas
test
ds
add
mov
std
mov
subb
sub
nop
lods
and
arpl
out
inc
ja
add
out
test
cmc
fiadds
lds
movd
mov
out
call
in
mov
add
fs
test
and
sbb
mov
lods
xchg
scas
xchg
push
mov
int3
loope
scas
pop
incl
mov
lcall
push
test
push
pushf
and
in
jmp
popf
add
sub
sbb
sub
push
leave
popf
sub
rorb
add
pop
mov
loope
add
xchg
jmp
push
adc
in
pushf
add
pop
or
enter
setne
jae
adc
push
aas
or
sti
add
adc
int3
mov
fbstp
add
or
mov
mov
jle
shlb
pop
pop
inc
and
into
lcall
pusha
fs
movswl
and
mov
out
push
inc
jo
in
lret
mov
ljmp
popa
jl
cmpsb
xor
jbe
sub
cld
inc
shlb
adc
sbb
mov
add
xor
pop
ja
mov
orb
or
add
pop
jecxz
inc
fs
or
dec
and
cmp
or
xlat
mov
in
nop
jb
inc
movsl
addl
jg
pop
test
lahf
sbb
adc
xchg
dec
cli
roll
stc
cli
adc
cmp
sbb
adc
inc
mov
mov
push
pop
pop
pushf
add
xor
mov
push
add
mov
sbb
popf
cmp
cltd
xor
adc
add
xor
imul
mov
test
rclb
inc
in
add
jb
icebp
adc
std
jns
fstp
ljmp
pop
pop
add
sbb
push
xchg
mov
stc
jg
add
sub
xchg
and
add
ljmp
test
inc
xchg
add
jg
fs
cmp
push
xor
sub
fst
in
push
mov
mov
mov
ds
int3
mov
jb
sbb
inc
lods
call
mov
pop
pop
xor
mov
mov
mov
mov
flds
mov
inc
add
dec
xlat
pop
add
adc
cmp
dec
fmull
and
nop
inc
add
outsl
jb
add
sahf
enter
xchg
mov
jnp
push
add
in
aas
inc
stc
mov
add
adc
cmp
loopne
mov
dec
mul
dec
pcmpeqd
sub
call
add
into
loop
or
add
add
bound
call
sbb
or
xchg
loopne
in
test
pushf
gs
pusha
adc
mov
adc
jle
mov
rol
cld
mov
ss
loopne
scas
cmp
idiv
add
sbb
outsl
xor
insb
call
orb
push
int
add
popf
es
xchg
adc
xor
push
mov
movsl
jo
or
push
je
arpl
mov
mov
push
shlb
mov
fldenv
or
push
add
xchg
sub
mov
shr
add
push
xlat
add
and
xchg
xchg
push
rolb
add
dec
pop
gs
cli
cmp
je,pt
insl
sbb
imul
adc
cli
mov
arpl
imul
ljmp
xor
jb
inc
push
mov
cmp
scas
or
enter
jae
xchg
mov
adc
dec
sub
cmc
pop
repnz
test
out
push
xchg
dec
inc
add
pop
bound
add
push
sbbl
xor
jl
cs
mov
idivl
repnz
add
repnz
and
inc
sub
out
or
cmp
subl
lods
xchg
stc
and
cmp
clc
movsb
add
sbb
les
lret
pop
push
adc
xor
mov
xor
or
add
pop
sarl
clc
movsb
add
insb
fldl
add
fs
and
add
cltd
arpl
jg
loope
dec
in
stos
fs
aam
rol
rolb
add
test
imul
pop
push
movsb
adc
arpl
cwtl
movl
cmp
mov
test
push
xor
adc
gs
ror
lds
lock
hlt
jmp
sbb
add
inc
pop
mov
inc
xchg
scas
push
lock
jmp
push
add
mov
shrl
imul
sbb
mov
loopne
outsb
dec
loop
leave
sbbb
add
gs
lds
nop
loopne
or
inc
aaa
pushf
jne
jecxz
push
cmc
or
push
pop
movsl
sahf
out
js
inc
dec
adc
add
cmp
pop
xchg
inc
jp
hlt
int
and
std
mov
daa
es
into
add
or
push
cmpsb
pop
pop
js
pusha
adc
add
aad
imul
mov
pop
loope
sahf
js
add
sbb
pop
dec
add
mov
cmpsl
sub
adc
ret
loopne
adc
add
adc
cmpsl
mov
rcrb
pop
arpl
daa
or
pop
out
outsb
jge
jbe
testb
inc
push
dec
pop
inc
sub
add
test
ja
jae
xor
dec
inc
and
das
pushf
ret
push
push
mov
test
out
pop
repnz
popa
fs
imul
out
in
dec
sub
add
pop
add
cwtl
mov
maxps
dec
push
in
lret
add
pop
mull
pushf
adc
out
mov
push
add
sbb
pushf
and
xlat
pminub
repnz
mov
mov
out
call
icebp
aam
jmp
fdivrs
mov
dec
test
sbb
add
and
ljmp
movb
dec
push
add
pop
inc
call
decb
mov
cmp
iret
orb
or
inc
push
sbb
test
popa
sub
into
sbb
fwait
cs
add
stc
inc
insb
testb
in
pop
cmovno
mov
add
std
cmc
mov
lret
pop
push
sbb
shrb
es
dec
pushf
and
fildl
lahf
xor
pop
rolb
ret
lds
call
jns
es
sbb
inc
cmc
shrb
ja
add
cltd
mov
adc
xor
repnz
out
mov
inc
or
add
mov
jne
sar
das
add
loopne
bound
out
xchg
in
loope
add
in
adc
cmp
repnz
ja
jl
jle
jmp
add
in
pop
or
cmp
add
stos
rcrl
fmull
cwtl
pop
add
daa
imul
xchg
enter
or
add
add
mov
mov
fwait
pop
add
add
cmpsb
and
jnp
icebp
mov
clc
sbb
sub
add
aas
add
mov
add
call
xor
shlb
cld
xchg
mov
fldt
loopne
mov
mov
loop
sarl
inc
mov
loope
int3
xor
mov
add
addl
pop
lds
jmp
push
stc
push
xchg
add
movsb
mov
int3
mov
mov
scas
push
aas
or
add
das
cwtl
add
pop
cli
aaa
lea
fisubs
inc
in
add
jae
hlt
sub
fdivr
adc
mov
dec
push
add
xlat
cli
jno
cld
cmpsb
add
sbb
jp
mov
or
testl
dec
dec
sbb
add
flds
pusha
sbb
pop
xlat
pop
mov
add
cmpsl
int3
enter
data16
pop
jns
add
pop
fisubs
movsl
ret
lock
mov
repz
bound
out
add
add
or
add
add
mov
insl
push
js
sub
pop
add
jbe
jp
jnp
out
daa
xor
enter
or
jne
lea
push
scas
jecxz
pop
rolb
and
sbb
sbb
xchg
int
push
add
pusha
mov
in
push
add
inc
imul
sbb
mov
jae
push
pop
push
hlt
dec
clc
push
outsl
mov
jg
pop
mov
mov
dec
jo
add
pop
sahf
int
or
loop
sti
cmp
data16
sbb
dec
outsl
add
push
out
movsl
lock
sbb
mov
jnp
jae
add
ljmp
pop
data16
add
orb
jge
addr16
out
jl
pop
dec
movsb
jp
adc
inc
leave
mov
clc
fimuls
js
shl
test
imul
shlb
pop
pusha
pop
movsl
lret
push
or
sub
or
scas
mov
pop
mov
stos
mov
in
icebp
mov
add
fsubr
sub
imul
add
cmpsl
fistl
mov
cli
dec
aas
stos
xor
sub
xchg
dec
lock
out
cmpsl
in
fcoms
cs
adc
addb
ja
in
je
loopne
pop
adc
cmp
xchg
mov
and
gs
pop
add
ds
jb
inc
out
mov
sub
insl
pop
xchg
and
xorb
dec
xchg
test
gs
mov
jno
nop
lds
or
xchg
or
push
xchg
ficoms
xor
dec
les
push
repnz
pop
jno
pop
sub
pop
subb
setb
cmp
into
fidivrl
stos
mov
out
test
jmp
icebp
out
mov
mov
add
mov
add
insb
xchg
xorb
orb
and
add
xchg
mov
sbb
pushf
insl
adc
js
add
icebp
lds
flds
or
inc
pop
jmp
mov
inc
and
cld
dec
insb
ret
mov
fs
lcall
hlt
adc
add
jmp
add
pop
lock
pop
icebp
outsl
push
xchg
or
push
lcall
adc
jb
xchg
adc
jne
mov
rolb
int
jo
nop
clc
inc
pop
jb
imul
or
add
xchg
xchg
pop
sbb
jbe
pop
mov
push
jp
scas
outsb
pusha
test
stc
in
add
mov
and
jbe,pt
jecxz
pop
pusha
cmpsb
test
out
push
add
mov
stc
add
push
dec
push
or
js
xchg
insl
sbb
dec
sbb
out
call
aaa
adcb
fmuls
int3
fs
mov
add
rcrl
add
add
dec
xlat
mov
push
mov
mov
jle
loopne
int
mov
bound
fldcw
inc
dec
or
call
test
shrb
lods
imul
add
in
cmp
scas
int
add
or
pop
push
add
push
mov
gs
jle
not
and
lea
mov
stc
and
mov
push
or
cmpsb
jg
mov
xchg
xchg
test
ljmp
lea
jns
add
fsubrl
push
loopne
mov
inc
mov
pop
cld
mov
scas
push
mov
add
pop
popf
push
sar
cmp
add
or
jne
push
jbe
out
int
sub
adc
incl
adc
cmp
mov
push
or
repz
and
out
enter
push
enter
push
testb
xlat
ret
jp
out
insb
popa
add
add
jp
lods
mov
mov
clc
mov
outsl
testl
sbb
pop
pop
jmp
ret
mov
cmp
aad
cmp
les
add
stc
ficompl
movsl
mov
add
jg
scas
cmp
inc
add
std
inc
cmpsb
scas
jg
dec
pop
sub
mov
lock
inc
pop
in
jno
rorb
lods
and
js
sti
pop
lea
insb
jbe
xorl
and
and
cmp
pop
jl
inc
mov
push
popa
rorl
jno
dec
int3
movsl
add
pop
cmp
and
cs
iret
mov
nop
pop
add
push
xor
iret
add
data16
lret
jecxz
in
ret
add
add
adc
mov
jecxz
int3
repz
movsb
dec
dec
aam
dec
sub
gs
insl
add
test
dec
and
cli
mov
sub
jle
enter
dec
das
jno
jne
cmp
add
mov
aad
xor
adc
mov
xchg
or
insb
jmp
mov
out
in
in
sbb
sbbb
or
bound
jo
popl
pop
pop
dec
sbb
mov
mov
enter
les
sub
jmp
faddl
sub
rcrb
xchg
mov
add
cli
fidivrs
sub
imul
adc
dec
adc
and
pop
sbb
sub
mov
faddl
nop
mov
idivl
stos
lods
lret
mov
dec
das
add
fimuls
push
repnz
mov
fsubs
mov
jle
arpl
jmp
cmp
cwtl
inc
xor
shl
push
mov
dec
push
add
add
push
addr16
mov
mov
or
das
and
adc
scas
xchg
add
out
cmp
fimuls
cltd
pop
mov
adc
dec
in
adc
and
rclb
mov
mov
lea
adc
mov
dec
pushf
sub
fcmovb
cmp
cmpsb
icebp
flds
pop
nop
daa
push
mov
scas
data16
repz
inc
ret
mov
mov
pop
mov
mov
adcl
lock
push
loopne
cli
sub
fwait
dec
dec
jle
mov
add
xor
or
fwait
xchg
icebp
xchg
aaa
es
das
mov
mov
call
lea
sub
fildll
add
add
dec
fisubl
pusha
out
cmp
or
stos
flds
xchg
ficomps
and
adc
mov
lock
sbbb
ljmp
dec
imul
les
clc
outsl
pop
in
test
jno
add
shlb
test
cmp
repnz
add
andb
and
loop
mov
xchg
lods
cmp
add
in
add
and
mov
das
push
rcrl
shlb
add
enter
and
push
and
add
testl
movsl
add
outsl
and
adc
xchg
xchg
sbb
fnstsw
dec
xchg
scas
insb
lock
add
stos
xor
aas
adc
xorl
or
push
add
pop
sub
shlb
pop
loop
sahf
js
push
enter
jae
lret
push
repnz
cmpsl
and
mov
int3
rclb
add
sahf
pop
adc
cmpxchg
adc
inc
in
sti
or
es
jo
sub
mov
mov
jg
pop
cmp
nop
pop
rcrl
jnp
test
data16
je
adc
hlt
sarl
addb
bound
fbstp
or
outsl
cs
add
in
push
movsb
mov
pusha
fsubl
add
xor
movsl
clc
test
xor
mov
mov
das
popf
paddw
shl
xchg
aas
and
add
inc
push
adc
add
fildl
mov
or
mov
repz
nop
pop
fmull
sub
jge
test
cld
add
ss
imul
xor
add
jae
loope
scas
dec
dec
pop
cmp
icebp
add
or
aad
into
movhps
test
add
sub
call
push
pop
sbb
add
bsf
mov
inc
ret
enter
or
mov
js
lret
mov
add
xchg
sbb
repnz
xchg
dec
mov
dec
repz
out
add
mov
adc
jo
push
mov
add
sbb
int3
test
or
jle
cltd
loopne
xlat
pop
jnp
xchg
cmp
mov
std
add
jmp
mov
mov
aas
pop
or
jp
add
xor
or
and
xchg
in
loopne
call
dec
add
inc
jmp
pop
arpl
pop
jae
ret
add
cmp
stos
sbb
test
roll
jns
xor
add
xchg
sti
bound
inc
out
in
jns
mov
insb
xchg
sbb
and
push
pop
adc
add
cmc
mov
or
xor
arpl
pop
sbb
xchg
push
mov
add
jle
mov
xor
xor
cwtl
ret
and
mov
shrb
mov
ja
adc
popl
and
jecxz
cmc
or
notb
lahf
jmp
xor
add
je
int
cli
pop
xor
add
pushf
lods
mov
or
aam
cmpb
movsb
add
lds
div
sub
add
xor
lahf
sub
stos
push
nopl
xor
xchg
add
adc
mov
and
jne
out
out
clc
cwtl
nop
mov
popa
cli
shlb
jmp
orb
cmc
mov
es
outsl
adc
int
movb
and
jl
popa
gs
mov
or
push
dec
negb
sbb
and
roll
mov
adc
pop
pop
adc
adc
aad
movsb
pop
popa
insb
cmp
cmp
jnp
pushf
movl
mov
sub
ret
scas
shlb
or
aad
int3
cwtl
fistps
aam
shll
movsb
jle
pop
pop
xchg
lock
je
insb
add
xchg
mov
cwtl
lock
lock
lahf
xor
loopne
add
cmpb
dec
jmp
repnz
add
push
dec
add
mov
popf
xchg
mov
loop
push
fistpll
rorb
jae
xlat
xchg
dec
into
adc
pop
push
subb
insw
add
psraw
rorl
rclb
pop
add
cltd
jbe
adc
ss
adc
mov
adc
cld
cmp
jno
pusha
xor
jbe
or
mov
add
movsb
outsb
dec
daa
cmp
add
lret
stc
jmp
sbb
or
add
out
pop
push
inc
cmp
aad
or
notb
or
call
inc
outsb
mul
stos
push
in
mov
lcall
or
mov
push
clc
loopne
add
jmp
push
xor
mov
ret
and
outsb
add
add
sbb
clc
mov
pop
xor
cmp
int
imul
punpcklwd
mov
mov
add
das
leave
add
pop
clc
and
cmc
lret
add
and
ret
cmpsb
push
mov
stc
cmp
insl
push
ds
outsb
dec
add
add
mov
arpl
inc
pop
pop
fisubl
mov
shlb
lock
adcb
popa
inc
filds
push
push
jbe
lock
imul
adc
xor
scas
mov
push
jmp
cld
enter
mov
out
add
xchg
std
bound
aas
cmpsl
or
and
sub
dec
add
and
jo
add
mov
add
push
fimull
push
je
fcoml
pop
push
add
insb
flds
push
push
and
es
pop
cmp
icebp
add
jle
push
js
add
rcrb
jns
or
adc
inc
mov
xchg
add
not
enter
notb
adc
sbb
cmp
adc
icebp
scas
gs
mov
fdivrp
ffree
das
push
push
mov
addr16
inc
lods
jge
sbb
add
sar
dec
xor
xchg
push
mov
mov
add
dec
dec
bound
out
inc
rcrb
mov
cmc
lret
loopne
subb
and
push
mov
shll
mov
adcb
pop
js
lds
js
and
int3
out
in
sub
cld
mov
mov
xor
aad
and
pop
jae
add
or
nop
xor
lea
fs
mov
mov
clc
pop
mov
in
xlat
mov
or
xchg
jl
pop
scas
or
push
cs
imul
and
jo
or
hlt
xchg
push
dec
out
add
or
pusha
cwtl
sub
cld
mov
ret
push
enter
adc
add
push
lret
aam
adc
add
fs
enter
jns
popa
sbb
mov
sbb
inc
sbbb
clc
mov
add
les
cld
mov
pop
lods
test
pusha
dec
sub
push
adc
mov
out
inc
pop
push
dec
test
add
addr16
stos
jno
or
call
jno
inc
call
mov
dec
cmp
pop
add
mov
inc
jo
je
movsb
vmwrite
lret
push
fistpll
cld
mov
add
stos
dec
or
xchg
fistpl
inc
lds
mov
bound
fcomps
and
aas
mov
lret
mov
jg
shl
sarw
add
dec
sahf
ss
outsb
xchg
cli
and
pusha
mov
test
sbb
movlps
add
sub
lcall
out
pop
sub
pop
jp
fsubrl
add
sbb
orb
add
js
xchg
popa
push
mov
shll
das
mov
sub
es
add
call
mov
fiadds
push
subl
add
jmp
das
repz
push
xchg
push
daa
sbb
and
push
dec
out
inc
jae
scas
cmp
mov
test
mov
inc
inc
cs
add
sbb
fdiv
dec
movsl
call
dec
lcall
lock
sub
jno
add
mov
and
or
mov
add
sub
clc
gs
inc
add
into
pusha
scas
adc
pop
ljmp
push
push
pusha
inc
notl
out
mov
add
mov
enclu
int
push
test
loopne
popf
push
shrb
add
movsb
jge
in
sub
sub
adc
pop
sti
or
sbb
and
cmc
jnp
cmp
enter
push
lret
daa
lock
adc
popl
pushf
pop
fstpl
inc
dec
add
outsl
push
mov
mov
icebp
mov
hlt
daa
push
mov
mov
loopne
adc
in
push
in
pop
jmp
and
lea
add
cmpsb
xchg
mov
pop
popf
xor
icebp
arpl
stos
jo
push
repnz
push
lock
adc
inc
xorb
gs
dec
ret
mov
clc
sbb
rol
xchg
nop
enter
add
loope
jecxz
enter
xor
or
testb
mov
inc
pop
add
sbb
add
cmp
mov
dec
add
dec
push
lahf
adc
sbb
and
mov
sub
add
test
push
inc
sub
add
jb
arpl
pop
and
mov
add
test
add
decb
aaa
or
out
scas
add
jnp
add
jle
add
jecxz
dec
outsb
cwtl
adc
cmpl
test
mov
adc
lock
pop
add
and
cmp
movsl
cltd
add
push
add
out
outsb
and
int3
cmp
subb
push
mov
outsl
add
rorb
call
push
inc
mov
les
incl
je
or
cmc
mov
dec
or
xor
mov
add
sbb
xor
lcall
jmp
inc
cli
pop
pop
mov
sub
or
adc
aaa
test
or
leave
cmp
loope
push
icebp
xchg
xor
in
cli
add
add
add
in
cmp
movsl
mov
add
mov
cwtl
jg
insb
rclb
inc
aaa
mov
orb
nop
add
adc
or
je
mov
pop
aam
mov
fadds
std
inc
add
fcompl
add
iret
adc
add
je
divb
mov
shlb
mov
mov
scas
das
loope
rolb
into
sahf
xchg
jecxz
sbb
cmc
add
lods
test
dec
pop
loopne
mov
ds
mov
test
fnstcw
push
pop
addl
cwtl
pusha
andb
neg
ret
lret
push
add
xlat
xchg
cmp
mov
mov
ret
inc
and
cld
mov
pop
jl
pop
inc
addr16
lods
out
aaa
mov
ljmp
push
and
xchg
pop
and
sti
jl
or
je
and
push
sub
ret
outsl
nop
sub
add
testb
leave
or
pushf
cmp
mov
jb
inc
push
inc
sbb
popa
and
addb
xor
sub
add
xchg
imul
ret
in
ds
loopne
pop
aas
add
xchg
xor
adc
jno
stos
adcl
lahf
jge
ffree
push
cmpsb
js
jo
aad
or
and
fcomi
cmp
sbb
into
inc
outsl
xchg
and
aas
insl
xor
xor
or
pop
pop
mov
js
sbb
nop
pop
sbb
add
jmp
inc
or
je
lret
xchg
js
or
mov
sub
adc
adc
xchg
clc
clc
sbb
cs
pop
icebp
or
add
ds
push
mov
xchg
fisubrl
pusha
cmp
sbb
adc
loop
pop
mov
jmp
sbbl
push
cmp
mov
out
cmp
or
movl
jmp
pop
mov
arpl
imul
lock
test
adc
jl
cmpsl
add
adc
ds
or
push
fstps
aaa
sub
mov
add
ret
or
clc
sbb
jg
and
add
or
add
add
jns
mov
dec
cmpsl
add
sahf
jl
or
add
sbb
insl
jnp
in
pop
decl
insb
testl
mov
ret
test
xorb
fisttpll
fidivl
pop
dec
mov
add
xchg
out
add
inc
lods
fnstsw
cwtl
orb
lock
fistl
mov
aas
xchg
pop
add
push
xchg
add
sahf
inc
insb
mov
into
ret
push
clc
xorl
std
daa
dec
and
fistps
pop
add
leave
or
mov
lea
cmpsl
stos
mov
pusha
dec
jecxz
or
push
pop
push
movsl
xorb
cltd
mov
add
repnz
les
in
inc
outsb
mov
mov
cmpsb
cmp
xchg
pop
lret
in
dec
repnz
dec
aaa
jns
add
xchg
movl
push
cltd
add
lea
in
loopne
lock
add
das
push
loop
push
add
and
cmpsl
dec
lods
xorl
pop
pusha
add
fsubrp
rorb
shll
inc
movsb
jge
repnz
jg
jnp
loopne
stos
cs
add
mov
loope
pop
dec
lds
repz
test
jbe
jle
cs
fadds
hlt
fsubl
jb
mov
and
fiadds
and
add
cltd
imul
mov
fs
stc
cmpl
xlat
jns
fdivrs
add
jne
and
fisubl
dec
nop
push
add
seta
pusha
inc
ret
rcl
repnz
xor
insl
orb
add
mov
mov
ja
test
popf
add
loop
adc
fwait
lea
jne
nop
fdivrl
sbb
add
mov
cmpsb
mov
or
mov
scas
out
mov
and
pop
cmp
mov
out
into
push
addl
and
pop
inc
lret
jge
ret
das
sub
ficoms
daa
add
sub
dec
mulb
movsb
call
popa
imul
loopne
or
add
xor
push
or
fldl
inc
or
jae
add
cmp
pop
testb
in
push
mov
mov
sbb
into
cmpsl
dec
mov
mov
adc
test
pop
and
jno
mov
mov
add
pushaw
enter
sbb
addr16
xchg
mov
add
test
add
push
enter
sub
jmp
das
push
movsb
push
push
sbb
or
test
dec
shlb
dec
sbb
add
das
pop
mov
mov
push
mov
movsb
add
and
inc
fucom
push
inc
popf
outsb
mov
xchg
roll
pop
addr16
inc
add
lock
jg
es
test
test
loope
pusha
es
or
dec
sub
inc
xchg
mov
add
lahf
insb
test
jne
ss
js
lea
movsl
or
jb
add
fisttpll
xlat
sub
aaa
add
cli
std
fsubrs
sbb
dec
es
bound
push
push
lret
loopne
pop
loop
out
xchg
and
pop
add
mov
int
add
lock
and
adc
out
fs
sub
cwtl
mov
mov
xchg
dec
push
dec
sub
aam
sbb
ret
sbb
jns
add
xor
sti
xchg
pop
add
rolb
es
push
out
mov
outsl
mov
ja
enter
int
push
adc
cltd
bound
cmpsl
cmpl
add
xchg
daa
fcomps
test
out
add
sub
push
out
push
leave
push
add
repnz
ds
roll
cmp
or
pop
lea
add
mov
dec
lret
imul
jbe
jo
dec
mov
mov
lcall
xor
adc
arpl
loope
cmpsl
and
in
fnsave
sbbb
outsl
sti
dec
jecxz
sbb
sub
nop
je
pop
addr16
sbb
and
and
sub
cmp
dec
adc
testl
add
or
fs
js
cmp
or
xchg
or
jge
jg
inc
subb
adc
js
ja
testb
add
data16
add
int3
xchg
sub
leave
mov
sbb
add
aas
pusha
mov
pop
adc
adc
jno
push
cmp
fcmovnbe
shl
or
fwait
mov
scas
iret
mov
lcall
cmp
loop
pushf
jbe
xor
cmp
icebp
mov
nop
in
adc
push
xchg
fadds
inc
and
stos
in
mov
sbb
xchg
pop
neg
xchg
cwtl
sub
cwtl
add
push
mov
pop
jmp
fists
cmp
dec
faddl
or
xchg
shll
and
push
add
ds
push
adc
push
nop
icebp
sub
jmp
pop
daa
push
shll
xorb
cs
ror
cmp
and
adc
add
addb
add
pop
xchg
shrb
add
jle
loopne
daa
data16
das
aaa
fistl
mov
nop
sbb
std
mov
cmpb
push
fisttps
fimull
or
outsl
add
movsl
fstpl
mov
xchg
dec
hlt
push
add
outsl
call
es
push
mov
mov
insb
xlat
mov
jecxz
dec
popl
fnstsw
rclb
cmp
insb
xchg
mov
mov
sahf
movsl
mov
or
sub
dec
pop
rolb
add
fwait
mov
cltd
add
inc
inc
ss
add
mov
push
add
cs
test
xor
sub
addr16
add
adc
sar
sbb
sahf
test
sbb
lret
pop
pusha
jmp
sahf
gs
inc
push
lahf
jb
pop
daa
and
push
sbb
xor
push
adc
jbe
inc
cmp
push
out
adc
outsb
movsb
lret
push
and
fs
gs
loop
adc
and
add
dec
mov
sbb
aad
mov
int
add
test
adc
lock
mov
add
jge
mov
addb
cld
adc
arpl
xor
les
sbb
pop
dec
jg
inc
cmp
mov
cmc
pop
cwtl
mov
xchg
add
and
add
push
shlb
pop
push
xor
fmul
add
cmp
jae
cli
pop
in
mov
inc
in
imul
push
sub
data16
mov
dec
cmp
dec
add
jbe
pop
call
pushf
push
mov
loopne
in
add
jle
js
dec
sub
adc
or
std
cmp
nop
add
add
mov
jb
and
loopne
sti
inc
nop
insb
ret
sbb
gs
in
sub
xor
lock
sbbb
shlb
push
xor
hlt
dec
rolb
lcall
add
jl
ss
dec
in
je
jno
lcall
push
out
add
hlt
mov
and
jae
into
arpl
sbbb
xor
mov
cmp
add
enter
movd
decb
push
sbb
idiv
cld
add
lock
push
pop
cmp
aaa
mov
dec
add
sbb
shrb
mov
test
and
xor
dec
loopne
cmp
push
orb
push
dec
push
mov
addr16
sub
popa
add
mov
out
ljmp
cmp
mov
test
cmpb
test
cmp
mov
xor
lret
mov
lret
stc
inc
add
or
mov
sbb
push
sub
movsl
std
xor
xchg
invd
pop
xor
inc
rcrb
andb
insb
add
insl
xor
lcall
iret
mov
xor
add
fnsave
mov
sub
xlat
jg
pop
mov
dec
add
loope
shlb
bound
push
pusha
jmp
std
rcrl
testl
loop
jp
add
out
add
clc
push
faddl
test
lahf
sub
lcall
vaddsubpd
xchg
rcrb
jns
push
cmpsb
andb
jno
shlb
inc
pop
sbb
das
cmc
mov
rcll
aam
pop
sbb
pop
clc
or
add
inc
mov
lock
iret
add
fsts
add
rcrl
mov
jns
and
test
add
sbb
add
push
insl
inc
out
add
push
pop
lds
aam
add
dec
fs
in
ss
test
ljmp
add
mov
seto
clc
fwait
loope
cltd
add
push
loopne
add
cmp
jns
pop
mov
insb
cwtl
add
mov
add
pop
mov
mov
dec
lea
add
mov
aas
pusha
sub
add
ficoms
loopne
in
mov
or
mov
add
add
sub
out
mov
insl
addl
and
cmp
dec
sbb
push
cli
push
or
lret
mov
fwait
ja
push
mov
add
stos
mov
in
add
in
daa
add
mov
xor
lock
mov
pop
testl
popf
xchg
jnp
sbb
xchg
xor
rcl
les
cwtl
pop
sahf
inc
or
pop
cmp
dec
loopne
loope
add
add
test
push
popa
outsb
pop
mov
out
push
sbb
push
fdiv
push
rolb
push
lahf
pop
repnz
ret
dec
or
cmc
das
jge
cwtl
sbb
arpl
xor
add
test
sbb
push
cwtl
jno
push
push
jg
add
jl
mov
add
xor
les
jmp
push
test
and
push
mov
out
inc
pop
pusha
add
adc
lock
push
jno
xchg
rorl
pop
sbb
nop
cli
adc
mov
or
xor
and
mov
or
xorb
add
mov
sbb
mov
dec
aad
mov
enter
sub
cmp
inc
pop
jp
push
inc
inc
adc
push
cs
cmpsb
push
in
pusha
xchg
cmp
fiadds
lea
repz
test
in
mov
std
mov
add
cmpsl
fbstp
xchg
push
mov
push
add
fsts
xchg
andb
sahf
inc
or
add
mov
rolb
test
pushf
dec
movsl
out
sbb
push
inc
jo
fcom
mov
and
repz
insb
mov
ret
loopne
es
leave
sbb
inc
mov
addb
jbe
xchg
fcompl
xchg
inc
sbb
stos
cld
inc
rclb
add
pop
mov
and
mov
cwtl
jmp
test
es
push
xor
insl
cmp
mov
push
add
addr16
out
lcall
adc
or
xchg
or
daa
push
push
adc
cmp
call
movsb
xor
addl
inc
daa
fisubrl
jg
aaa
jp
sbb
fnstsw
aas
xchg
outsl
add
mov
push
xchg
pop
xchg
push
arpl
xor
rol
pop
cmpsl
les
pop
fcmovu
std
cwtl
push
cld
add
push
add
or
xchg
dec
sbb
cs
jle
rolb
mov
xor
loop
sbb
sbb
xchg
add
cmpsb
fsub
inc
cwtl
inc
aam
mov
into
loopne
inc
outsl
dec
pop
filds
cmpl
mov
gs
in
jo
add
das
mov
ficoms
fldt
xor
leave
jbe
add
sub
push
or
push
xor
mov
inc
cld
jp
and
cmpb
int3
pusha
xchg
clc
jle
lret
mov
shr
push
and
or
add
jp
jb
pop
out
xchg
mov
std
sti
insb
adc
int
enter
incb
adcb
sbb
jmp
cmpsl
in
xor
sbb
imul
inc
stc
adc
out
sbb
fcmovnbe
stos
imul
pushf
pop
inc
lock
pop
sahf
ljmp
mov
fiadds
xor
out
jne
sbb
sbb
adc
stos
mov
add
jmp
sub
and
dec
das
je
or
push
cmp
inc
and
mov
cli
or
add
sub
test
add
and
fs
mov
call
dec
ja
jp
add
daa
nop
decl
add
iret
add
or
mov
stc
adc
jge
pushl
push
adc
sub
iret
add
test
mov
or
or
imul
mov
inc
out
sub
mov
adc
xor
jns
mov
push
lea
cmp
or
lret
div
or
adc
adc
outsb
fs
incl
sub
hlt
and
repnz
rclb
nop
ss
movsl
adc
rolb
aad
out
incb
cmpsl
shl
push
loope
into
push
imul
pop
mov
push
or
mov
loopne
fildl
icebp
inc
aas
push
lcall
sbb
outsb
xchg
orl
les
add
out
fyl2x
str
jo
inc
push
ljmp
nop
es
add
cmp
out
stc
xor
push
cmc
adc
inc
add
adc
gs
and
adc
xor
testl
mov
fdivrs
cmc
stos
jmp
popf
rcll
push
imul
or
lods
jne
mov
push
mov
push
xchg
inc
scas
in
cmp
adc
sub
or
inc
jns
imul
inc
pop
pop
into
and
add
mov
jo
clc
add
mov
dec
sbb
lock
repz
daa
addr16
roll
decl
and
sbbl
ja
and
mov
add
outsb
push
out
mov
add
movsbl
mov
push
mulb
stos
cwtl
and
add
add
outsb
xchg
adc
out
je
bound
ja
pushf
and
stos
mov
push
out
addr16
mov
lret
aam
loop
stos
and
mov
rcrb
loopne
inc
out
or
sbb
push
and
add
repz
pop
lods
hlt
jle
je
pop
gs
inc
add
cmp
xchg
or
dec
xchg
inc
lods
mov
cmp
pop
add
sbb
out
mov
add
lcall
outsb
sbb
mov
cmc
add
push
inc
dec
mov
int3
push
es
mov
loope
jae
xor
addb
xchg
push
shrl
ret
cmpsl
fstl
inc
dec
jl
or
in
stos
stos
nop
hlt
add
cli
mov
aam
mov
scas
xchg
aad
sub
add
repz
loope
es
cmp
hlt
add
lods
inc
xlat
push
mov
xor
jnp
mov
imulb
nop
pop
pop
loopne
mov
loopne
enter
sub
mov
je
call
das
ret
or
leave
and
paddq
cmpl
jg
outsb
add
pop
dec
leave
add
inc
mov
push
sbb
loope
mov
add
add
or
fadds
sub
push
add
pop
cmp
pop
nop
popa
sub
je
jno
mov
in
cs
push
dec
cmc
das
xchg
fimuls
pop
iret
push
pop
pop
shl
xchg
push
add
xchg
jae
sahf
hlt
enter
dec
fwait
ja
mov
add
jno
inc
jo
mov
fucomi
push
das
fnstenv
add
int
enter
and
andl
jge
or
adc
sbb
mov
in
popf
mov
sub
inc
loop
mov
adc
inc
xchg
sub
mov
xor
aad
jnp
out
adc
push
add
mov
push
jne
cmp
push
dec
pusha
test
xorb
mov
sbb
lcall
shlb
lock
mov
test
inc
add
les
nop
js
mov
push
adc
adc
movb
or
add
cmp
fldl
xor
cmp
mov
jb
scas
inc
hlt
pop
add
push
stc
movsl
fsub
sub
adc
nop
lret
rol
or
add
and
mov
push
call
sub
pop
push
push
mov
add
in
cli
add
jecxz
push
jnp
mov
in
insb
ficoms
cmp
cmp
adc
add
or
pop
test
jmp
outsl
inc
fadds
daa
movsb
ret
lock
loopne
imul
jno
mov
add
add
push
mov
jp
lea
add
icebp
add
test
inc
lret
pusha
mov
mov
scas
iret
jmp
inc
aad
test
add
fcomps
push
pop
fldt
sub
sbbl
inc
lods
mov
aad
rolb
out
loop
in
or
lahf
add
lcall
lret
mov
inc
add
add
adc
insl
mov
xchg
out
les
xor
loopne
or
push
iret
push
psubsb
pushf
add
mov
mov
jae
add
jle
cmpsl
sub
aad
sbbb
push
mov
or
icebp
rep
cmp
push
in
adc
adc
rorb
out
jne
pop
add
pop
nop
jp
pop
rolb
sub
lcall
xor
and
or
xchg
or
mov
sbb
pop
pop
mov
loopne
aam
sub
and
jnp
xor
lds
sbb
xchg
aas
add
add
rcr
int
pop
insl
pop
jmp
jb
test
sbb
movsl
adc
popa
test
mov
clc
rolb
xchg
dec
mov
test
in
lds
add
mov
add
adc
icebp
jmp
add
ja
out
add
adc
fistps
pushf
push
adc
adc
mov
aaa
add
lret
stos
outsl
enter
ja
sbb
test
mov
mov
movsb
xchg
aam
mov
add
jmp
pop
adc
push
mov
movl
inc
js
add
pop
enter
mov
add
jb
pop
shll
sbb
in
repz
les
mov
bound
pop
adcl
incb
mov
add
ljmp
loopne
mov
sbb
add
shrb
inc
adc
fnstcw
or
mov
jmp
roll
pop
and
js
adc
jg
mov
enter
stc
aam
or
cmp
rorb
jb
adc
sub
xor
cld
lods
cmp
mov
es
loopne
int3
imul
cmp
push
mov
cmc
leave
add
in
shlb
add
cmp
stos
add
or
add
pop
adcb
jmp
out
jl
push
pop
dec
jg
data16
mov
enter
cwtl
xchg
or
cli
pop
add
mov
stc
scas
add
sahf
inc
shll
repz
xchg
js
mov
xchg
or
das
repz
adc
and
pop
mov
faddl
or
les
jb
inc
nop
dec
add
cld
jmp
or
cli
arpl
add
subl
add
add
fwait
addl
sub
sbb
pusha
or
out
push
flds
jp
sbb
inc
jmp
add
adc
inc
or
add
iret
loopne
rclb
sub
add
aaa
mov
or
call
mov
sbb
repz
pop
aam
cltd
mov
or
xchg
cwtl
sub
add
inc
fadds
pop
cwtl
or
and
add
call
cmp
dec
xchg
fiadds
inc
xor
nop
xor
cs
jp
outsw
mov
sbb
test
andl
cmp
call
shrl
adc
enter
gs
das
push
dec
add
push
in
jne
add
sub
jbe
xchg
push
call
mov
hlt
xor
int3
sbb
leave
cmpb
and
ss
movsb
lahf
pop
jl
xlat
test
test
add
sbb
mov
jb
pop
loopne
negb
push
and
sub
pusha
pop
push
sbb
ja,pt
lcall
sub
bound
insb
push
sbb
mov
or
popa
sahf
and
add
aaa
and
ja
add
and
sub
jae
cmp
mov
sbb
jne
xchg
call
mov
add
gs
push
arpl
add
sbb
adc
sbbb
inc
mov
sbb
sub
out
filds
xor
test
xchg
stos
mov
cli
cmp
xchg
xchg
mov
xor
adc
or
icebp
popa
pop
sbb
sbb
and
je
sub
pop
push
mov
cmpl
outsl
pop
jp,pn
shl
xchg
test
push
loopne
xorl
call
mov
xchg
add
push
sub
fildl
mov
std
add
add
lret
push
pusha
negl
jne
cmp
pop
inc
jae
in
mov
xor
fs
add
push
add
stos
and
xlat
mov
arpl
jb
add
scas
push
xor
mov
mov
iret
pop
in
inc
lahf
subl
pop
stc
lret
jb
adc
dec
adc
mov
sub
add
xor
cmp
add
adc
pop
cmpsl
push
lea
sbb
pop
outsl
jmp
jl
addr16
xchg
xor
jno
subps
loope
dec
dec
test
inc
int3
or
and
jp
add
sbb
mov
jb
and
sbb
jae
test
stos
adc
lret
test
into
mov
or
and
inc
xor
pop
addr16
fwait
inc
inc
sub
cli
pushf
jno
pop
call
sbb
xchg
jg
lods
push
sub
xor
or
jp
push
fs
inc
mov
leave
rcll
lret
and
loope
mov
mov
fsubrs
ret
movsl
xor
and
lret
ret
jg
movl
in
mov
enter
es
xlat
adc
mov
out
jmp
pop
addb
leave
push
mov
aam
jge
fisubrs
dec
add
xor
call
pop
out
iret
xor
filds
sub
inc
in
xor
sub
xchg
ljmp
inc
cmp
int3
jmp
lret
fisttpll
cmp
pop
arpl
out
insb
jbe
adcl
clc
jnp
popa
ljmp
stos
cmp
loopne
or
bound
fldt
xor
push
cmc
and
flds
std
pop
adc
mov
dec
xlat
shll
push
jno
ljmp
dec
fld
and
cld
imul
es
aam
les
arpl
push
jb
cmp
mov
aaa
scas
jo
add
push
mov
js
adc
dec
out
cmp
xor
mov
dec
jno
lret
adc
pop
add
xchg
loop
ret
push
jl
ja
or
out
stc
sbb
loope
lods
scas
cld
adc
xor
cmp
or
rorb
into
adc
out
jbe
jno
sbb
add
lcall
call
add
roll
ljmp
cmp
and
repnz
jo
add
aad
dec
lret
popf
dec
lcall
pop
add
xchg
aaa
incl
hlt
xor
mov
lcall
enter
sbb
test
pop
fsubs
jne
add
or
cmpsl
add
aas
fistl
cltd
bound
and
test
or
mov
jmp
and
dec
in
out
pop
addr16
xchg
scas
push
test
fimull
pop
or
xchg
ljmp
ss
hlt
fs
cmpsb
jmp
insb
sbb
mov
adc
sbb
mov
ret
xchg
mov
dec
pop
sar
add
mov
or
xchg
cwtl
add
mov
jle
add
fwait
rcrl
fnstsw
testl
sbb
aam
fs
aaa
test
imul
inc
jge
jns
cmc
mov
mov
jo
fsubrs
ret
inc
in
arpl
sbb
sbb
bound
mov
xor
add
data16
add
aas
push
cmc
adc
jmp
add
adc
leave
xor
rol
xor
inc
mov
scas
pop
inc
clc
cli
mov
dec
cmp
xor
mov
test
loope
sahf
ljmp
insl
adc
cmp
mov
push
adc
mov
xor
and
out
icebp
adc
mov
lods
dec
pop
inc
test
and
rcr
or
in
xchg
mov
cmp
aas
mov
add
push
sahf
sarl
mov
mov
pop
jecxz
mov
outsb
call
sbb
ret
sbb
push
xor
test
xchg
adc
fwait
leave
adc
dec
inc
test
adc
or
test
pushf
into
bound
mov
stc
cmpb
mov
pop
and
enter
pop
and
rcrb
aas
mov
xchg
adc
push
movsl
and
push
fidivs
sti
cmp
test
xchg
outsb
jns
or
dec
pop
pop
pop
aad
aaa
dec
adc
inc
push
jecxz
mov
xchg
adc
xor
rep
sbb
xor
pop
lods
pusha
shlb
bound
add
push
push
div
adcb
mov
int3
sub
push
iret
or
push
test
cmpb
and
popa
out
xor
in
jns
xor
fcoms
push
xor
push
ds
mov
dec
inc
add
mov
repnz
or
ja
xor
push
xor
push
cmp
dec
mov
and
mov
dec
push
push
add
int3
xor
inc
xchg
pop
push
ret
mov
out
adc
adc
ret
sbb
cmc
mov
popa
fwait
or
test
xchg
mov
push
nop
lea
lcall
dec
or
aaa
and
xchg
or
int
faddl
test
push
dec
std
inc
outsb
mov
xchg
adc
and
pop
mov
dec
add
fwait
sub
xor
cmp
xorb
faddp
rclb
or
int
out
xchg
shll
incb
loop
xchg
adc
sbb
aaa
nop
test
dec
jns
dec
out
mov
sub
pop
mov
cmp
lahf
or
fiadds
pop
dec
test
movsb
inc
push
outsb
xor
jmp
or
dec
mov
and
xor
inc
js
testl
scas
sub
add
jo
loope
sub
add
mov
pop
push
rcrl
push
jo
add
pop
push
mov
movsl
pop
cmp
addl
inc
fwait
ret
lret
scas
call
add
std
add
loope
inc
cmp
sub
inc
add
cmc
daa
jl
std
ret
cmp
adc
sub
sbb
fcompl
je
and
mov
pop
mov
push
out
or
imul
test
pop
sbb
mov
stc
push
add
in
ljmp
mov
mov
mov
iret
pop
ret
sbb
fists
ss
xor
sbb
setno
adc
mov
popf
test
sbb
add
loop
pop
pushf
loopne
xchg
sbb
add
sbb
jmp
adc
pop
pusha
adc
cmp
or
xchg
sbb
or
stos
mov
aam
jae
mov
cmc
mov
pop
shl
mov
popf
mov
cmpl
adc
mov
pop
pushf
mov
xor
inc
add
out
sti
cmp
adc
push
mov
add
sbb
cmp
add
mov
jnp
mov
icebp
add
dec
popf
mov
sbb
or
dec
aad
mov
push
jge
push
flds
in
ja
or
xchg
pusha
pushf
pop
cmp
jmp
cmc
and
add
pusha
out
aas
cmp
loop
bound
mov
repnz
lock
pop
add
mov
or
sub
xchg
lods
push
enter
push
inc
int
in
mul
pop
hlt
je
insb
in
dec
int3
sarl
stos
incl
mov
xchg
mov
rcrl
push
mov
psllq
sbb
xchg
adc
sub
testl
rol
add
daa
push
cmpsb
sub
test
inc
mov
cmpl
xor
out
mov
add
bt
sub
pop
or
arpl
xlat
mov
pusha
sahf
push
xor
xchg
mov
hlt
imul
push
sarb
int
mov
and
jl
and
mov
cmp
pop
inc
lods
push
test
cmc
xor
pop
mov
sbb
mov
mov
sti
add
jl
push
sbb
adc
mov
or
ja
push
inc
hlt
push
lret
aaa
mov
movsl
add
sub
add
orl
fimull
incb
imul
mov
mov
mov
ret
call
repz
adc
dec
push
add
push
jp
add
inc
outsl
loopne
fstpt
outsb
mov
adc
repz
jne
push
add
test
inc
lcall
sahf
xor
ret
mov
scas
aam
sbb
xchg
cmpl
adc
rolb
adc
les
xor
sbb
dec
movsl
loop,pn
add
xor
int3
add
and
dec
arpl
jno
insb
cmp
in
or
rorb
imul
not
mov
xchg
rcrb
sbb
push
lcall
insb
icebp
cs
add
sarb
stc
jecxz
das
out
je
xchg
cwtl
mov
clc
ret
jb
out
inc
adc
cmp
mov
loop
mov
mov
aas
pop
shlb
jp
test
and
in
mov
in
js
mov
mov
mov
xchg
mov
shll
out
or
inc
dec
in
add
cmp
lret
mov
inc
subl
xorb
mov
pop
adc
fildl
sub
dec
into
and
movsb
repz
or
mov
movsb
mov
dec
xor
jl,pn
lcall
scas
in
pop
xor
or
shlb
out
add
cmp
push
pop
and
pop
aaa
rorb
push
pop
pop
test
hlt
xor
mov
pop
jmp
test
or
lock
pop
jge
mov
nop
in
add
daa
out
add
and
push
xchg
or
es
cmpsl
inc
mov
ret
xor
sti
pop
addr16
loop
test
fs
sbb
inc
cli
push
mov
mov
scas
rolb
in
lock
add
sbb
push
xor
sbb
mov
in
jne
xchg
xor
lods
add
sbb
cmp
xor
xchg
cmp
add
push
push
dec
int
bound
xchg
add
jmp
and
xchg
add
pushf
cmp
in
add
movsb
dec
cmp
add
mov
cltd
testb
xchg
or
syscall
xlat
fsubl
insb
add
js
fucomi
aas
dec
cli
xchg
add
pop
sahf
roll
test
pop
dec
fisubrl
dec
inc
pushf
leave
addb
push
das
cmp
xchg
add
pop
lds
iret
cltd
shlb
int3
jno
push
push
and
test
js
push
mov
orl
jae
and
pusha
add
addl
xor
insb
in
sub
xchg
push
xor
insl
lods
test
bound
push
iret
pop
aad
add
push
or
daa
dec
xchg
mov
lds
mov
dec
add
cmpsl
out
imul
pop
inc
daa
pushf
cmp
inc
sbb
icebp
push
mov
mov
testb
mov
adc
or
mov
push
sbb
stc
and
or
mov
add
pusha
iret
adc
test
jbe
nop
dec
nop
jnp
dec
int3
testl
lea
cmp
adc
insl
mov
sti
pop
cmp
sub
push
sbb
sbb
xchg
xchg
mov
adc
ja
sahf
sbb
add
mov
or
adc
mov
adc
test
jbe
sbb
mov
lret
add
rol
and
xchg
nop
sub
repz
loopne
push
int
sbb
push
xchg
repz
xor
inc
inc
mov
push
mov
lock
or
pusha
aam
adc
cmp
jl
cmp
repz
inc
bnd
jmp
sbb
push
pop
lds
push
pop
sbb
mov
lcall
cmpsb
jg
ds
add
xchg
outsb
jp
mov
add
inc
in
int
xor
and
xchg
adc
cmpsl
repnz
jl
cmp
in
cld
xor
jle
or
icebp
pop
add
inc
mov
xchg
div
insl
adc
out
push
xor
into
outsb
mov
push
test
int3
cld
call
in
sti
push
sub
repnz
rclb
adc
js
and
xchg
clc
lods
xchg
pop
sbb
dec
insl
ja
in
push
push
adc
xchg
inc
mov
jle
ljmp
outsb
cltd
sbb
sub
xchg
or
cmpsl
js
jo
mov
mov
xorb
je
pop
cltd
mov
adc
dec
es
mov
mov
jle
jg
mov
jo
add
pop
aam
pusha
mov
std
arpl
inc
pop
cmp
addr16
mov
imul
adc
sbbb
adc
pop
fnsave
cs
cmpsb
in
jge
add
pop
loope
test
imul
sub
in
dec
lret
insb
out
or
dec
adc
xchg
das
and
call
les
arpl
sti
push
pop
add
imul
nop
hlt
sbb
xchg
add
pop
roll
dec
sbb
push
fwait
xchg
xorb
xor
loopne
fistpl
cmpsb
adc
shlb
es
cs
jb
inc
rcl
fbstp
mov
lcall
test
sub
xor
jne
add
mov
js
sbb
add
mov
add
in
mov
mov
xor
faddp
imull
cmp
and
mov
xor
pop
pop
sub
mov
cmpl
mov
pop
rol
jb
popf
inc
pop
ss
je
pusha
jmp
daa
sbb
data16
popa
neg
movsl
fldt
ret
decb
xchg
in
add
repz
add
imul
xlat
push
cmp
stos
sarb
mov
xchg
mov
push
jnp
popa
fmull
adc
add
ficompl
out
aam
les
xchg
daa
das
xor
pop
rcr
je
add
sub
add
inc
pop
or
adc
add
dec
dec
out
arpl
sbbb
je
clc
mov
loope
js
or
lahf
add
or
adc
cmp
ret
push
jo
loopne
movsb
mov
mov
rolb
add
mov
fistpl
add
scas
sbb
add
ljmp
cmc
test
jnp
adc
and
mov
mov
inc
push
add
adc
sub
enter
in
cmp
movl
mov
pop
and
sahf
ucomiss
mulb
pop
cltd
jne
fildll
mov
in
movsb
iret
adc
add
sub
pop
add
pop
mov
pop
push
sbb
ret
in
movsl
mov
lods
mov
roll
sub
cli
xor
and
mov
repz
mov
xchg
movb
ficomps
adc
inc
out
xchg
jne
mov
pusha
add
inc
sbb
push
lret
inc
xchg
daa
push
loope
sub
push
iret
sarb
add
pushf
adc
jb
add
dec
mov
and
shl
dec
inc
add
aad
sub
out
push
mov
call
or
dec
lods
int3
dec
sub
push
and
ss
andb
sub
rorb
add
cmp
les
inc
mov
fcomps
mov
repz
push
sub
xchg
add
add
ret
sub
cmp
mov
and
sarb
add
sti
add
lret
outsb
add
lret
jbe
popa
divl
cmp
loopne
xor
xchg
add
jmp
mov
mov
jle
test
in
jmp
pusha
sub
add
fisubrl
imul
cmp
in
es
adc
mov
out
ret
enter
add
movsb
xchg
jae
add
cmp
pop
pop
adc
mov
stos
cmp
faddl
scas
add
bound
arpl
add
js
mov
add
jns
sub
sarb
shl
in
add
aaa
std
mov
mov
add
mov
xchg
clc
popa
addl
sub
xor
and
gs
scas
mov
add
mov
add
mov
push
adc
sub
cli
push
lds
lcall
rolb
dec
xor
push
dec
mov
cmp
inc
add
fdivp
lretw
bnd
pop
imul
cs
leave
jge
mov
or
stc
pop
outsb
xor
decb
xor
cltd
hlt
add
sbb
test
push
xor
sub
ret
mov
mov
add
aaa
adcb
cmp
push
mov
xchg
mov
sub
fwait
push
add
shlb
cmp
jmp
mov
mov
add
mov
iret
sbb
jmp
test
popl
cmpsl
add
outsb
pop
add
mov
mov
adc
jmp
aas
addl
pusha
repnz
push
mov
dec
lcall
ja
fcmovnbe
mov
sbb
and
push
and
lods
cmp
aaa
jp
add
ja
enter
mov
dec
add
add
mov
add
or
xchg
xor
inc
add
or
lret
add
cmpsb
push
call
mov
cmp
iret
sbbb
inc
add
aas
mov
jp
mov
bound
bswap
dec
in
pop
and
fnstenv
pop
test
lea
inc
cmp
xchg
add
je
call
data16
inc
add
fs
test
adc
jecxz
push
jbe
jne
add
sbb
ljmp
mov
dec
jo
outsb
fwait
jp
push
xchg
sub
imul
mov
int
lods
inc
addb
xchg
xlat
add
ds
jp
dec
test
sarb
push
fnstcw
pushf
cmp
add
sub
fwait
rorl
adc
adc
sbbl
pop
add
outsb
add
ja
cmp
adc
stc
jno
dec
mov
mov
add
push
mov
xor
push
mov
xorl
add
ds
sbb
add
push
xchg
cmp
sahf
add
sti
mov
jge
adc
xchg
sbb
add
xchg
and
mov
hlt
fstl
enter
cld
into
loope
pusha
test
lods
cmp
fidivl
sbb
or
jecxz
jns
pop
jne
pushf
mov
and
pop
scas
jge
aad
test
subl
add
sbb
in
cmpsl
fnstenv
mov
loop
pop
mov
nop
jo
test
push
iret
faddl
int
cmp
pop
add
cmc
jo
repnz
jmp
inc
fildl
lcall
mov
sub
into
dec
stc
je
pop
push
in
ret
inc
add
daa
lret
sbb
loopne
sbb
adc
frstor
fxch
sbb
inc
push
movsl
jae
adcb
ds
add
scas
out
mov
xlat
test
adc
bnd
verw
notl
mov
js
stc
pop
ja
test
add
push
pop
jp
aas
fisubs
imul
stos
push
das
in
mov
xchg
pop
ret
dec
pop
push
cmpl
dec
ss
fsubs
cmp
andb
inc
loope
ret
sbb
xor
sbb
fimull
cwtl
andb
in
rorl
rdtsc
fstps
clc
popf
add
fisubrl
ret
add
xor
int
and
or
sub
jne
push
jno
xchg
add
ret
jbe
and
popf
sub
xor
xor
cmpsl
repnz
add
fidivl
pop
cmp
mov
push
adc
mov
fistl
ret
jnp
jge
inc
mov
iret
pop
pop
mov
ds
mov
sub
jl
mov
sub
mov
pop
mov
fisttpll
add
mov
jno
jne
cmc
jl
xor
sbb
inc
lcall
ss
mov
add
cmp
xchg
add
or
hlt
mov
jnp
xor
subb
adc
fisttpl
xor
scas
jmp
mov
in
mov
sub
add
sub
cld
roll
imul
jecxz
pop
loopne
cmp
outsb
push
sub
lret
call
pop
nop
and
decb
add
xor
jnp
and
lret
mov
repz
xchg
add
xchg
inc
adc
inc
out
push
loopne
dec
shlb
jo
pop
mov
lea
bound
add
mov
jmp
outsb
out
or
or
jnp
leave
dec
jle
sbb
or
stc
xchg
inc
inc
lcall
push
add
fs
addb
stos
pop
inc
lret
add
mov
jg
lock
out
popf
cmpsb
bound
xchg
loopne
cmp
xchg
mov
fsub
cmp
cwtl
sbb
mov
adc
lahf
add
dec
repnz
daa
std
mov
fildll
les
nop
out
xchg
add
push
jp
lds
mov
clc
mov
aam
cmpb
add
mov
or
push
inc
orb
cmp
cld
stos
jg
pop
adc
jmp
xchg
sbb
add
mov
faddl
loope
rcrl
mov
mov
mov
push
jmp
add
std
push
out
add
or
add
push
cmpsb
mov
xlat
mov
pop
sub
pusha
shlb
pop
ds
xchg
sbbb
mov
pop
cmp
icebp
psubsw
xor
adcb
pop
pop
mov
ja
cmp
es
xchg
por
add
mov
cmc
inc
mov
pop
add
or
iret
add
sub
popf
jle
js
xor
stos
or
push
xlat
imul
mov
mov
popa
pop
lds
roll
inc
xor
inc
mov
pop
das
or
fisubs
mov
mov
add
clc
dec
mov
daa
in
dec
nop
cmp
inc
mov
nop
popa
clc
adc
incb
pop
pop
fisubl
cmp
pushf
add
mov
pop
push
lahf
in
cmpsl
and
xor
shr
add
add
cli
ljmp
int
add
das
cmp
lock
add
push
cmpsl
dec
adc
out
dec
in
roll
adc
rcrl
shlb
cli
inc
sbb
movl
jae
add
into
repnz
mov
and
mov
push
push
imul
outsl
xor
add
lahf
lret
sbb
add
insb
mov
mov
xchg
fsubrp
push
scas
add
inc
lret
xchg
je
cli
mov
inc
and
add
sub
flds
inc
or
push
adc
mov
das
cmpsb
int
inc
bound
cmp
fs
fwait
push
push
mov
and
je
cmp
cmpsl
call
movsl
in
or
in
jne
mov
mov
mov
es
outsb
cmp
xchg
jp
ja
mov
xor
and
dec
inc
inc
cmp
out
andl
dec
inc
dec
sbb
cmpsl
xchg
mov
in
add
roll
jl
outsb
push
testb
in
sub
test
in
push
or
insb
fs
jb
inc
jge
add
fwait
pop
scas
add
dec
call
inc
stos
sub
shll
push
and
orb
test
mov
mov
dec
jbe
cltd
xor
arpl
lret
xchg
add
pop
or
divb
add
lret
fs
and
add
mov
fwait
cmp
dec
cmpsl
sti
in
movsb
sbb
and
mov
add
pushf
jp
xchg
jl
in
sbbb
push
call
jmp
pop
idivb
add
hlt
jle
fbld
orb
das
inc
pushf
lret
mov
inc
adc
test
mov
sbb
mov
es
and
pop
cwtl
psubsb
add
cmp
push
repnz
xchg
mov
or
xchg
cmp
and
and
mov
nop
add
inc
pop
loop
lock
push
in
std
pop
pushf
pop
js
xor
pop
push
test
jno
add
fildl
sub
xor
add
mov
and
xchg
add
push
ret
int
pop
test
xor
inc
aad
add
or
les
jmp
inc
add
mov
aaa
popa
or
adc
filds
aad
mov
add
inc
cmp
mov
inc
xchg
scas
cli
add
inc
shll
iret
push
adc
add
mov
or
mov
mov
enter
ss
or
fildl
sbb
movsl
fisubl
adc
pop
dec
jg
fsubrp
outsb
fsubs
aas
add
cld
cmp
fwait
add
je
xchg
lea
add
or
andb
add
add
inc
mov
test
ds
push
xor
lcall
cwtl
inc
incb
pop
adc
adc
lock
mov
test
sahf
dec
xor
mov
je
adc
mov
test
fwait
xchg
test
ds
add
bound
mov
xorb
roll
icebp
xchg
in
das
movsb
mov
mov
jl
jno
loopne
add
ss
lea
xchg
add
cld
aam
fisttpl
fcomip
or
andl
push
fisubrs
xchg
popf
js
pop
cs
jecxz
and
push
dec
push
jns
inc
ja
call
adc
add
les
adc
cmp
or
test
inc
add
ljmp
add
lcall
add
lds
mov
add
pop
sarl
dec
in
imul
push
aam
outsb
dec
push
and
jge
jnp
add
mov
sub
adc
add
inc
decb
and
push
pop
movl
mov
inc
lcall
icebp
stc
push
and
inc
popa
sbb
cmp
dec
aas
fisttps
add
aam
rcrb
add
jle
jo
mov
cmp
int
testl
clc
add
daa
cmc
sub
mov
stc
clc
mov
rorb
test
add
cvtdq2ps
add
negl
stos
and
dec
aaa
adc
sbb
jl
out
stos
pop
mov
inc
lret
cmp
movl
mov
add
fildll
movsb
inc
pop
lcall
addb
hlt
bound
adc
lcall
xor
cmc
out
adc
popf
xor
int3
fwait
js
icebp
or
add
lock
jecxz
add
inc
push
outsl
dec
push
or
mov
xor
mov
movsl
push
mov
cmp
add
popa
and
enter
sbbl
fcoml
loop
call
adc
pushf
leave
mov
xor
cmp
fsubr
std
lea
add
pop
push
ja
filds
dec
add
fs
jge
pop
lods
call
xor
push
sbb
add
add
jnp
and
add
pop
lds
jl
add
aas
push
push
imul
pusha
test
mov
sahf
lret
adcb
enter
add
mov
daa
xor
pushf
mov
bound
filds
cmpsl
fimuls
jg
add
sti
xchg
or
sub
cltd
mov
mov
xor
insl
imul
sub
cmpsb
push
add
jo
nop
adc
mov
sub
inc
imul
scas
mov
pop
rclb
fwait
outsl
stc
inc
pop
jp
aam
inc
lock
rcrb
jb
rcl
lret
dec
pop
jno
add
mov
mov
mov
mov
add
cmp
sub
pop
in
inc
pop
fistpll
shlb
rcrl
add
pop
xchg
add
test
mov
add
and
xor
stos
or
enter
add
jne
jp
mov
sbb
adc
movsl
inc
mov
xchg
add
xchg
pop
orb
adc
insl
mov
test
jle
insb
push
add
movb
inc
bnd
push
das
nop
cmpsb
pusha
sub
mov
xchg
roll
cmpsl
pop
std
jle
push
ja
add
enter
int
idiv
ret
adc
scas
in
mov
add
dec
sbb
mov
sbb
xor
cmp
lea
cli
or
jmp
add
fnstenv
add
dec
mov
or
fmuls
jae
and
push
pop
add
icebp
ljmp
mov
cwtl
add
add
mov
bound
das
pushf
inc
outsl
add
rol
ja
fiaddl
cmpsl
jno
adc
pushf
add
hlt
cld
mov
rclb
add
mov
mov
mov
mov
std
pop
outsl
cmp
inc
sbb
add
testl
add
mov
mov
pop
mov
xor
fdivrs
jl
nop
cld
add
fmulp
jnp
mov
sbb
add
fstp
dec
pop
dec
dec
andl
xor
jns
loopne
sbb
iret
mov
in
add
mov
mov
test
cmpsb
lea
clc
inc
ficompl
adc
shlb
cmp
cmp
push
jnp
out
pusha
daa
pushf
add
xor
pop
add
mov
rcll
inc
pusha
push
cmp
jo
push
add
xchg
jb
jno
inc
in
add
loopne
lods
mov
lds
xchg
jne
loope
outsb
add
cmpsb
dec
mov
and
sub
fildll
cmp
inc
jns
add
lahf
add
addr16
mov
inc
shll
add
push
add
pop
push
icebp
repnz
popa
xchg
sub
pop
cli
add
orb
cltd
add
mov
mov
leave
filds
xlat
mov
add
xor
xchg
add
add
push
icebp
push
push
mov
mov
add
add
jge
push
mov
cmpsl
xor
aad
sub
jo
pop
test
add
jbe
and
sub
xchg
mov
pop
inc
std
in
nop
pushf
inc
adc
cmp
data16
sbb
xor
mov
orb
int
insl
push
push
add
fldl
add
pop
pop
xor
add
lock
cmp
or
pusha
ret
and
in
push
inc
add
pop
shl
push
xor
les
pusha
ss
js
add
mov
sub
jno
pushf
mov
add
pop
stos
sbb
enter
dec
mov
push
sbb
adc
outsl
sti
inc
jge
inc
cmp
sahf
cli
pusha
sub
push
xchg
push
xchg
out
push
xrelease
lods
pop
popa
mov
and
jno
pop
sahf
add
nop
call
add
xchg
lcall
cmc
add
movsb
cld
adc
add
pop
sub
add
imul
ret
in
movb
clc
sbb
add
inc
fidivl
fcomi
dec
add
xlat
inc
ret
xchg
cld
lcall
sbbb
rcrb
lcall
add
inc
insb
or
push
mov
add
inc
mov
fs
jl
out
sbb
hlt
shr
and
or
faddl
and
int
or
inc
sahf
jmp
mov
adc
mov
sbbl
sbb
add
inc
inc
xchg
ja
pop
mov
testl
dec
push
cmpsl
repz
pop
in
sub
or
cmp
adc
mov
nop
or
mov
add
or
popa
mov
add
aaa
mov
adc
cmpsb
adc
xchg
fimuls
add
sbb
les
pop
fdivr
pop
add
dec
negb
inc
test
fidivrs
push
fcmovbe
pop
jns
xchg
add
jbe
popa
sbb
fistpll
loope
add
fsubl
add
stos
dec
add
dec
repz
jle
lret
dec
stos
sub
int3
or
pop
lods
fimuls
push
into
mov
fwait
nop
popl
adc
and
cld
out
xor
sbb
adc
jp
jns
popf
add
cld
sub
add
cmp
call
adc
mov
cmpsl
sub
add
fmull
hlt
xchg
out
mov
int3
std
jmp
cmp
cmp
push
xor
int3
fimuls
and
mov
rolb
das
andb
icebp
mov
loopne
xor
xchg
clc
std
xchg
add
fyl2x
fadd
movsb
loope
stos
cld
cmp
scas
jl
pop
jo
jb
xchg
mov
jecxz
lcall
mov
movsl
add
hlt
mov
or
mov
add
cmp
scas
add
pop
clc
bound
fcmovnb
add
hlt
mov
mov
lcall
add
jo
imulb
add
leave
and
pop
sub
xor
inc
xchg
mov
aas
xchg
cmp
xchg
sbb
and
cltd
addb
inc
pop
lock
pop
mov
jo
xchg
lahf
pop
add
push
fcompl
arpl
rolb
xor
jne
mov
add
les
xchg
fdivs
lret
rcrb
data16
xlat
push
add
pusha
dec
cmp
pop
cwtl
xor
jae
sub
outsl
and
bound
mov
scas
mov
jg
or
adc
inc
lock
mov
inc
idivb
outsb
pop
subl
mov
bound
xor
cld
lahf
xchg
jl
stc
lcall
add
add
add
push
dec
andb
out
push
sub
push
hlt
add
mov
mov
cmp
sbb
adc
mov
cli
adc
push
gs
into
inc
add
data16
sub
add
lea
add
or
data16
pusha
mov
mov
fdivl
sub
cwtl
pop
jle
movsl
and
loopne
add
pop
add
push
cmc
lahf
inc
mov
mov
add
xchg
mov
popa
jb
add
push
in
repz
mov
mov
sbb
insl
add
fs
outsl
sbb
jne
inc
push
cmp
xchg
fsubr
mov
jns
jbe
nop
cmp
outsl
orb
sahf
add
aas
mov
int3
add
mov
cltd
sbb
movb
or
pusha
xchg
shlb
negl
sub
clc
test
call
mov
add
mov
add
shr
in
lahf
cmp
pop
xchg
mov
and
incl
adcb
aas
xor
xlat
and
jo
add
dec
leave
or
jp
mov
push
sub
pop
push
lods
inc
xorb
or
push
jns
mov
test
cltd
mov
aam
add
jmp
ljmp
shll
test
pop
cmc
in
ret
pusha
or
test
push
mov
dec
fimull
fsubrl
ret
clc
jo
xchg
and
or
rcrl
lret
rol
pop
sbb
hlt
pushl
push
jns
pusha
pop
nop
xlat
out
add
pop
push
cmp
mov
call
repz
loopne
jae
add
xchg
jnp
lret
pop
sub
add
iret
sarb
fistpl
or
dec
cld
cltd
dec
push
in
pop
add
jl
mov
pop
cmpsb
add
mov
daa
fwait
pop
ret
les
push
and
add
jmp
xchg
std
sbb
jecxz
push
push
orb
cli
add
dec
add
in
xchg
imul
popa
sysenter
mov
and
subb
pop
in
xchg
sbb
aam
in
dec
jne
rcpps
repnz
dec
shrb
inc
lds
stc
loopne
add
fs
push
subl
pushaw
movsl
adc
ror
popf
notb
jns
inc
inc
mov
loopne
pop
or
xor
and
les
cmp
lods
aam
xor
sti
hlt
ljmp
cmp
mov
ret
sub
dec
adc
or
add
andl
ret
mov
push
dec
add
sub
pop
mov
mov
push
imul
aas
cmp
ret
sub
lret
add
push
adcb
inc
jb
nop
cmp
popa
xor
sub
out
outsb
pop
nop
xchg
mov
lret
add
push
add
test
repnz
and
add
xor
add
inc
mov
lock
pop
adc
lods
cmp
push
aam
push
dec
xchg
movsb
cmp
loop
js
out
fwait
rorl
pop
pop
add
lret
cli
jl
sub
inc
stos
inc
repnz
mov
sub
add
mov
movsl
cmp
lret
pop
pushf
addr16
sbb
mov
incl
jnp
add
es
clc
push
dec
xor
mov
mov
shrb
pop
pusha
dec
rcrb
cmc
cmp
push
dec
mov
jp
add
pop
and
fdivrs
inc
clc
dec
add
frstor
xchg
cwtl
mov
pop
fdecstp
or
rolb
test
dec
dec
shll
and
lahf
mov
in
leave
dec
sbb
add
out
fnsave
roll
pusha
mov
cmp
loop
jp
pop
scas
scas
iret
mov
rcrb
jnp
clc
hlt
and
fs
test
icebp
inc
test
stos
adc
adc
push
dec
fwait
sub
sbb
mov
repz
jnp
adc
pop
pop
cli
aam
mov
cmp
test
mov
push
push
in
test
add
repz
rclb
add
call
xor
xchg
add
xor
stos
xchg
inc
mov
ljmp
fucom
add
sbb
lods
xor
jecxz
out
cmp
add
mov
repz
ret
and
add
push
sub
les
mov
testl
test
inc
add
adcl
add
adc
popa
int3
int3
lret
inc
rcr
cwtl
jp
cltd
es
pop
xchg
dec
inc
mov
loop
xor
adc
popa
pop
xor
mov
sbb
add
rcrl
xchg
mov
lea
sahf
cld
add
cli
dec
jne
add
or
fcoms
add
jg
inc
adc
mov
sub
push
xor
inc
mov
mov
mov
daa
pop
lods
jb
inc
into
add
icebp
mov
std
divb
adc
dec
or
pop
or
cmp
add
dec
andb
js
push
sub
outsb
inc
dec
sbb
xor
pop
sub
mov
push
enter
nop
add
shlb
ja
mov
int3
add
mov
insl
orl
sbb
mov
inc
out
int3
data16
push
mov
loope
insl
add
in
mov
add
jno
adc
mov
cmpsb
mov
xchg
add
fisttps
fistpll
cwtl
inc
add
fisubrl
add
jle
mov
test
pop
push
sahf
pushf
and
shll
stc
xlat
add
sbb
popa
les
push
mov
adcl
cmp
enter
rolb
out
inc
push
sub
dec
mov
inc
sti
into
add
cmp
jge
add
inc
mov
jge
jo
movb
popfw
jmp
xchg
aas
sbb
sub
mov
int
fadds
add
and
xchg
pop
loopne
loope
xchg
call
xchg
mov
repz
add
ret
das
jno
pusha
push
sbb
jecxz
push
in
jo
sbb
pop
push
add
rcrb
cs
cwtl
loop
xlat
push
push
rorb
incb
cmpsb
std
add
jmp
push
daa
jle
dec
adc
loop
add
mov
out
jnp
dec
ja,pn
add
mov
repz
adc
rolb
inc
and
add
outsb
push
aam
daa
inc
adc
cli
xor
faddl
mov
icebp
xchg
stos
mov
sub
sub
in
pusha
mov
mov
push
sbb
rolb
push
cmp
mov
rcr
mov
enter
adc
push
add
jl
leave
add
fs
add
pop
mov
or
je
push
fadds
add
cmp
gs
jbe
add
pop
and
xor
add
outsl
pop
inc
pop
jl
divl
xchg
mov
lds
add
popa
lock
mov
inc
add
push
jle
or
push
repnz
add
cld
lock
test
cmp
fld
add
insl
sbb
xchg
cmp
cmpb
jecxz
mov
in
mov
ret
out
iret
lods
sub
mov
cltd
cmpsl
xlat
pushf
sub
addb
pop
lahf
fadds
add
iret
dec
mov
in
jae
test
jp
and
push
lcall
gs
aad
add
xor
repnz
sbb
scas
jge
dec
jmp
cmp
orb
push
outsb
insb
sarb
sbb
inc
mov
icebp
cld
inc
add
push
inc
mov
fstpt
push
in
add
out
and
iret
adc
movsl
mov
lret
aad
call
mov
add
shl
aad
add
inc
mov
dec
dec
or
adc
pop
loopne
sub
hlt
mov
adc
cmpsb
xchg
add
lcall
aaa
decb
adc
call
and
and
xor
sub
push
inc
insb
add
xor
cltd
bound
lock
sbb
push
sub
loopne
pop
xchg
add
push
popl
into
cli
pop
pop
stos
das
mov
add
fadd
notl
popa
mov
inc
add
mov
mov
pop
adcb
dec
dec
add
clc
repnz
add
sbb
push
ja
sub
add
imul
data16
lock
fisubrl
sbb
test
add
pop
add
jb
mov
mov
xor
addb
push
icebp
jbe
inc
mov
xlat
pop
outsb
sarb
mov
iret
push
xor
push
lcall
das
loop
loope
cmc
popa
nop
out
mov
or
das
add
sub
cmpl
jmp
sbb
icebp
add
or
add
les
rolb
cmp
sahf
lahf
push
sbb
sti
and
xchg
push
cmp
sar
push
push
mov
xchg
push
into
mov
imul
pop
add
cmp
mov
ljmp
out
mov
pop
adc
dec
inc
cli
jge
cwtl
mov
xchg
dec
repnz
sub
add
sub
xor
sub
pop
adc
mov
in
add
aad
test
or
add
push
xor
dec
aaa
test
pusha
sbb
mov
out
add
jo
fisubs
mov
inc
fildl
clc
cmp
xor
add
mov
sbb
ret
inc
inc
sbb
push
jne
pop
push
dec
enter
pop
jbe
adc
jp
push
fiaddl
xchg
adc
iret
lcall
sahf
jne
test
arpl
mov
sub
lret
cmc
sbb
ljmp
mov
push
mov
das
mov
pop
decb
rcrl
or
xchg
out
add
sbb
cmp
inc
movsl
sbb
pop
and
add
ds
int
in
pop
ja
push
and
fcompl
xchg
pop
stos
lock
mov
jb
pop
shlb
cmpsl
repnz
cmp
cmpb
das
test
popa
add
mov
lea
gs
and
add
cld
and
setg
inc
in
sub
int3
add
jae
or
sub
cld
add
jno
call
in
rcrl
sbb
lea
fwait
add
bound
xchg
mov
fs
shlb
dec
loope
lods
jle
mov
mov
and
cltd
pop
nop
in
sbb
jmp
leave
jmp
pop
ljmp
jl
sbb
cmp
arpl
aam
mov
sbb
icebp
cmpsl
push
js
inc
sbb
dec
add
jno
adc
incl
jmp
imul
loopne
xchg
movsb
scas
punpckhbw
dec
mov
rolb
sub
jge
les
add
inc
in
mov
icebp
sahf
fistl
sbb
insl
mov
inc
in
insb
mov
rclb
add
cmpsb
adc
mov
mov
add
jo
mov
pusha
push
jne
jle
inc
outsl
and
stos
jge
fs
mov
popw
dec
cmpsl
add
scas
call
and
insb
xchg
mov
add
iret
in
jg
and
push
movsb
add
loop
js
add
xchg
daa
pop
mov
and
cs
testb
sbb
loopne
jge
rclb
clc
repnz
test
int3
jmp
add
sbb
lock
mov
add
sbbl
sbb
cmp
icebp
cld
sub
sbb
pop
xchg
pop
stc
adc
shr
and
cmp
xchg
cmp
aaa
enter
ret
push
adc
jbe
add
mov
pop
push
push
cltd
aaa
mov
jg
mov
shlb
add
mov
sbbb
imul
sbb
lock
inc
push
test
lret
and
loope
nop
shlb
lock
add
insb
lods
popl
mov
fldl
push
bound
repz
icebp
inc
loopne
inc
ret
push
test
jno
sahf
lds
sbb
js
and
sbb
sti
ret
inc
adc
in
stos
pop
daa
or
test
insl
aad
out
dec
jne
aaa
sub
scas
imul
je
fcompl
push
and
add
lock
add
shrl
add
mull
mov
fsubl
dec
cmp
or
push
lret
push
xor
add
test
std
dec
jnp
rcrb
add
or
lea
in
jmp
ja
xor
bound
or
cmp
aaa
or
rorl
pop
sbb
leave
cmpsl
mov
and
push
and
fadd
test
clc
push
add
push
fsubrs
add
mov
mov
je
add
icebp
addl
ja
mov
ror
add
sub
int3
mov
mov
dec
int3
or
xor
mov
cmp
shll
inc
and
fiaddl
sub
mov
push
add
xchg
mov
dec
sbb
scas
imul
fwait
cmp
and
jecxz
icebp
sbb
loopne
je
mov
mov
imul
pop
sbb
std
cmp
xlat
movsb
cmpsl
and
mov
cmp
pushf
cmp
add
inc
insb
mov
xor
stos
add
iret
jns
ljmp
insl
push
loopne
mov
xor
ds
mov
mov
ret
and
push
mov
add
mov
or
in
lock
pushl
add
imul
xchg
or
or
daa
lods
jge
ljmp
test
out
pop
cmp
sahf
sbb
or
repz
popf
adc
add
in
fldlg2
xchg
add
imul
add
hlt
add
ja
aaa
sarb
insl
xor
loop
popf
add
mov
fisubrl
inc
cmc
in
fdiv
pop
ds
add
mov
xchg
mov
add
sub
out
cld
dec
add
dec
fnstsw
jge
mov
ficoms
test
inc
rcrb
frstor
pop
repz
enter
shlb
mov
xchg
or
xor
dec
mov
mov
push
adc
or
push
lods
jge
inc
leave
cmp
push
jnp
xchg
into
int
test
test
test
mov
mov
movsb
fdivr
loopne
and
xchg
add
in
ret
icebp
loopne
fs
sub
jnp
leave
pop
mov
nop
sbb
out
adcb
sbbl
inc
and
jge
pop
cmp
jp
and
pop
cmp
xorl
inc
cmp
xchg
andb
mov
movsb
rcr
pop
lret
aam
add
adc
pushf
xchg
icebp
sbb
cmpsb
jnp
add
idivb
or
cmpsl
adcb
les
add
shrl
xor
mov
fwait
push
push
orb
push
mov
stos
xchg
in
cmc
ret
or
push
pop
jle
daa
adc
mov
outsl
aam
cmp
ljmp
dec
dec
or
add
mov
ret
loopne
mov
add
in
inc
rcr
or
add
jl
cmpl
xchg
xchg
gs
add
add
ljmp
or
sub
adc
jnp
and
cmp
mov
pop
inc
dec
or
jae
push
adc
add
scas
cli
mov
movsl
lock
xor
aas
mov
mov
loopne
cmp
add
push
lret
ljmp
mov
cmpsl
push
gs
adc
add
adc
jne
cwtl
outsb
mov
pusha
xor
aaa
add
popf
shrb
mov
dec
sbb
adc
jle
add
push
sub
test
mov
cs
fwait
pop
jnp
cmp
mov
mov
or
cmp
add
xlat
icebp
cmp
and
repnz
sub
add
cmc
mov
fsubs
lock
loopne
jmp
ret
adc
xor
lods
rclb
loopne
aad
shll
pusha
jno
jl
cli
fwait
shlb
loop
cltd
adc
and
pop
mov
aad
mov
and
rclb
stos
lods
dec
mov
test
cltd
push
stos
sub
pop
push
xchg
lea
test
test
jg
loope
ljmp
and
mov
das
fidivrs
icebp
sub
pop
lods
nop
add
jmp
rorb
sbb
jmp
or
hlt
out
jle
sub
dec
or
stos
mov
cmp
mov
test
cmp
ljmp
and
or
sbb
sahf
sub
jp
add
jl
mov
adc
pop
sub
dec
inc
ret
mov
repz
xor
xor
ljmp
and
in
sarb
divb
adc
mov
adc
push
sbb
sbb
enter
mov
pusha
das
ljmp
mov
ljmp
push
mov
lds
dec
xchg
push
cmpsb
inc
std
fwait
out
xor
adc
cmpsl
add
incl
xor
mov
cmp
movsl
add
mov
push
add
sbb
outsb
sub
ja
bound
xlat
sahf
rclb
xchg
xchg
add
mov
dec
push
xchg
scas
xchg
jl
pusha
push
out
aad
push
icebp
jnp
xorb
popf
xlat
or
out
cmpsb
push
clc
and
sub
push
sub
mov
popl
xor
lea
test
cmp
pop
mov
lods
sub
in
and
and
aam
pop
sub
mov
add
int
xor
popa
push
add
adcb
loope
cmp
add
lahf
sbb
sbb
push
mov
and
pop
mov
sbb
loope
and
scas
and
and
xchg
push
ffree
sub
xor
aaa
push
add
jmp
cmp
fs
pop
xchg
sub
xchg
cmp
dec
sbb
in
jbe
shrl
or
scas
jmp
shlb
adc
mov
ret
insb
xor
adc
add
xchg
jl
sbb
andb
add
aad
xchg
in
aam
inc
cltd
outsb
repnz
in
adc
popa
or
mov
leave
sbb
mov
ss
loopne
and
aad
mov
stc
hlt
sbb
add
enter
mov
fwait
arpl
js
call
sbb
push
and
xor
es
test
dec
je
cmp
and
aaa
sbb
cmp
test
dec
lock
xor
pop
aam
iret
jmp
xchg
jmp
pop
inc
jecxz
mov
or
xor
test
scas
xchg
mov
push
pop
in
aad
cli
inc
inc
push
mov
push
fadds
cmp
in
mov
sbb
mov
sub
pop
fcomps
insb
and
xor
mov
adc
push
lret
xlat
ret
and
mov
test
adc
pushf
pop
mov
sbb
jne
in
fwait
sti
icebp
in
cmpl
roll
dec
lret
adc
lcall
cmp
and
sub
lret
dec
jo
fwait
xchg
ja
in
mov
arpl
mov
sbb
and
sub
jbe
loop
in
daa
xor
sarl
cmp
fistps
sbb
andb
push
jnp
repnz
xor
xor
shl
jo
mov
repnz
mov
es
jl
scas
xor
outsb
andb
pop
bound
mov
push
mov
stos
push
sub
push
mov
shr
mov
mov
aam
mov
xchg
mov
cmp
sbb
mov
pop
add
pusha
adc
add
mov
in
mov
test
xchg
lahf
cwtl
test
pop
fstl
shl
add
mov
mov
insb
xchg
out
push
decb
mov
jbe
mov
mov
and
add
fsubl
out
add
jne
jmp
test
cmp
sub
repz
testl
xor
and
jae
or
fmull
mov
mov
add
dec
add
jl
inc
mov
test
enter
or
sub
inc
lret
add
das
cld
pop
cmc
int
movsb
add
je
fildl
mov
pop
mov
mov
out
subb
negl
xchg
cmovns
cmpb
out
push
out
clc
arpl
outsl
loope
out
leave
add
mov
cmp
lret
andb
jo
js
or
in
add
jns
and
repnz
or
imul
add
dec
popa
cltd
mov
mov
pusha
pop
jge
out
movl
mov
push
sahf
or
aas
sub
fs
fistps
adc
add
xchg
push
outsb
call
mov
xchg
int3
push
push
add
pop
mov
cmp
cltd
outsb
jne
cmc
test
lret
jo
pop
fwait
or
add
add
mov
mov
cmc
mov
cmpsb
xchg
and
lahf
cmp
sbb
pop
inc
mov
leave
xor
lret
adc
dec
jl
jmp
mov
xchg
enter
ja
add
push
push
and
inc
sbb
out
imul
add
fcoml
stos
ret
fstpl
add
ds
aam
ficoms
mov
mov
clc
push
sarb
push
les
adcl
out
mov
lods
cmp
orl
add
dec
pop
pop
ret
push
xchg
cs
adc
clc
pop
sbbl
add
es
mov
xchg
or
frstor
lods
fildll
and
push
and
dec
call
inc
push
shll
push
in
notl
je
shlb
stos
jae
mov
incb
inc
jge
jmp
fucomi
and
or
add
out
repz
cltd
lods
adc
lods
pusha
negb
xchg
scas
daa
xchg
xor
mov
pop
stos
aam
lods
add
dec
xchg
sbb
popf
sub
loop
add
fsubl
arpl
sbb
inc
cmp
adc
fcoml
and
lret
adc
mov
nop
and
cmp
js
push
cs
cld
repz
mov
jns
clc
inc
sub
adc
pop
aam
dec
dec
adc
insb
mov
pop
int
adc
add
sbb
xchg
push
movb
imul
loope
inc
add
iret
fsubrs
int3
out
jle
adc
rorb
pop
addr16
push
cli
inc
imul
pop
mov
call
pop
pop
shrb
cmp
mov
mov
mov
add
je
loopne
pushf
out
cmc
add
mov
push
add
or
call
add
in
stc
sbb
cmpsl
sub
xchg
mov
call
pop
pop
stos
pop
das
or
add
lock
add
punpckldq
cwtl
mov
or
pop
outsl
xchg
mov
mov
jg
push
pop
nop
push
add
orb
jmp
xchg
insb
sahf
pusha
hlt
mov
inc
loop
pop
sbb
pop
insl
add
or
iret
das
cli
cwtl
jl
xchg
sbb
mov
mov
xlat
rolb
adc
cwtl
cmp
sbb
xchg
xchg
lea
adcl
nop
adc
dec
pop
fiaddl
sub
loop
test
mov
lret
add
xor
mov
data16
lret
dec
push
add
int3
push
into
or
out
loopne
ror
xchg
in
insb
add
dec
outsl
add
inc
jb
sub
inc
cmp
out
or
repnz
aaa
loope
sbb
inc
mov
mov
in
add
add
cmp
xlat
jne
popf
test
enter
arpl
adc
aam
shl
lcall
jmp
add
lods
js
jo
sahf
sarb
int
pop
jge
testb
mov
mov
add
jns
in
das
js
lahf
ljmp
lret
int3
add
cmp
xor
add
pusha
jecxz
jns
xchg
rolb
mull
bound
jno
add
jb
sbb
cltd
add
cmp
add
ljmp
jne
cs
mov
inc
and
pop
cwtl
mov
xchg
roll
lock
in
push
pop
mov
cmp
outsb
divb
lods
stos
inc
add
add
dec
add
cltd
aam
scas
sahf
sub
dec
out
mov
add
xchg
push
add
inc
jo
add
ljmp
adcl
roll
cmp
mov
sbb
jno
add
fwait
dec
cltd
sub
jb
test
add
fldcw
or
lcall
dec
push
fdivrs
add
jmp
and
sub
cmp
dec
scas
icebp
mov
add
mov
pop
xor
movsb
inc
or
into
loope
imul
movl
loopne
mov
add
movsb
xchg
aaa
mov
je
add
jl
cmpl
add
push
cwtl
shlb
and
xchg
cmp
lea
sti
sbb
mov
add
fs
adc
cmp
xchg
shll
lret
stc
iret
lods
shlb
fs
inc
inc
cmp
jmp
mov
lahf
push
stos
cmp
mov
add
sbb
inc
clc
jp
add
test
add
addl
adc
mov
dec
mov
jle
adcl
inc
mov
mov
push
not
add
push
xor
fdivp
fmull
mov
push
inc
inc
orl
and
jle
dec
xchg
add
loopne
gs
push
or
lock
rsm
mov
jp
mov
pusha
mov
mov
int3
andl
add
insb
sbb
scas
stos
jmp
int3
inc
push
push
adc
mov
xchg
out
nop
adc
ja
lahf
sub
out
pusha
add
ret
jl
xor
call
pop
pop
or
push
xchg
aam
add
aam
pop
or
adc
imul
dec
inc
mov
add
mov
xor
aas
push
test
lock
sbb
nop
addr16
xchg
add
push
inc
in
xor
and
out
mov
dec
fstpl
inc
push
es
enter
push
cmp
cmp
cmp
jae
push
add
and
pop
mov
repz
faddl
mov
mov
pop
dec
sarb
add
mov
add
mov
orb
lcall
pop
lock
xor
cld
cwtl
adc
mov
inc
pop
add
jno
insb
jns
lret
out
pop
addr16
loop
cmp
mov
add
dec
push
mov
ds
cmpsb
andb
dec
into
sub
or
pushf
xor
sbb
mov
loope
je
addr16
or
add
lds
and
dec
and
enter
cmc
dec
add
pop
shlb
jp
and
cmpsb
ljmp
jg
sbb
xchg
inc
xor
mov
jbe
aas
in
test
xchg
and
cmpb
test
sbb
add
stos
cld
js
jo
add
jne
mov
insb
in
add
sub
movswl
add
mov
sbb
jmp
adc
add
dec
and
add
dec
xchg
lods
mov
jne
jle
cmp
enter
int3
rcrb
mov
invd
repz
jne
nop
bound
push
add
lods
and
in
xchg
jle
xor
mov
int3
or
and
aam
out
push
gs
cmp
lds
cmc
rorb
or
lea
aaa
mov
push
mov
lock
mov
in
sbb
push
or
adc
mov
pushl
mov
pop
jae
sahf
add
pop
push
jecxz
das
xchg
pop
pop
add
call
cli
sub
pop
cmp
jae
jmp
dec
adc
ret
or
in
xor
and
subl
jno
mov
xchg
imul
mov
cmp
dec
jo
and
adc
adc
xor
cltd
pop
sbb
into
sbb
mov
add
rcr
movl
sub
dec
jo
add
mov
sub
sub
push
xchg
add
jmp
push
repnz
aas
lds
nop
outsb
lahf
or
cmpsb
sbb
and
sbb
mov
aam
ss
mov
mov
sbb
xchg
cmp
lds
out
or
cmp
inc
rclb
out
add
cmc
subb
mov
sbb
ds
fistl
dec
mov
push
mov
push
scas
jae
add
cmp
mov
std
lods
mov
xchg
dec
rcrb
cmpsb
sbbb
lds
jl
lret
or
add
test
inc
add
sbb
sbb
lret
add
push
and
call
add
lods
adc
add
lock
sbb
and
pop
add
add
inc
adc
sub
xor
push
outsl
cmp
pop
loope
pop
ss
rol
fcomp
mov
add
adc
cmp
lret
sub
mov
testb
dec
sub
mov
loopne
jae
test
dec
dec
pop
pusha
fwait
mov
pop
in
xor
ficoml
out
orb
addr16
sbb
sarl
sbb
xchg
stc
xlat
inc
or
sbb
sub
add
movsl
sub
jp
add
shrb
movsb
stos
and
cmpsl
push
sbb
cli
jo
xor
jge
add
jae
popf
cmp
repnz
les
fstpl
xor
out
mov
addb
addb
jl
jg
or
mov
push
xchg
imul
cmpsl
aam
jg
xchg
jecxz
jnp
add
fisttpll
imul
cmc
jge
push
adc
or
out
pop
inc
les
jbe
cmpsb
push
and
addr16
into
jmp
xchg
jl
jmp
push
xchg
add
or
add
cmp
dec
idivb
or
xlat
jle
or
sbb
pushf
and
xchg
cltd
add
xchg
or
add
xor
pop
aad
popl
xchg
leave
test
imul
adc
mov
push
add
add
push
rcrl
push
or
sbb
cmpsb
add
cmp
in
leave
scas
mov
in
sbb
jl
popf
and
in
mov
sub
cmp
loopne
test
jle
aaa
dec
push
fs
mov
add
jno
ds
add
adc
add
fs
int3
std
jo
js
jno
jmp
sti
popf
add
lds
add
mov
push
jno
or
cmp
cmp
or
mov
add
dec
into
repz
fisttps
imul
jae
jle
add
push
fdivl
fs
add
out
cli
cmp
rcll
loope
rolb
dec
jecxz
dec
xchg
fsubr
add
cli
mov
xor
cmpsb
std
add
mov
mov
jns
add
pop
in
cmp
sub
imul
icebp
je
adc
and
and
adc
pop
pop
ljmp
or
jmp
mov
jg
mov
xor
arpl
cmpsl
add
xchg
push
inc
xchg
push
push
int3
hlt
mov
cmp
fsub
sbb
xchg
out
or
lods
pop
jae
dec
add
mov
xor
lds
mulb
fs
or
mov
cmp
or
dec
mov
popa
cli
add
daa
mov
int
mov
sbb
adc
aas
es
add
out
fwait
inc
add
sub
leave
add
pusha
sub
xchg
add
iret
ss
int3
int
sub
jbe
add
dec
mov
out
add
cmp
mov
je
shrb
pop
xlat
add
push
add
sbb
jecxz
add
sahf
mov
vcvttsd2si
sub
add
in
add
imul
pop
cmp
cld
outsl
adc
add
or
lds
mov
lock
push
imul
call
add
jno
and
pushl
out
aam
hlt
sbb
push
mov
cmp
push
fistpll
add
fxch
pushf
fucomi
add
add
je
clc
xor
pop
sub
pushf
rolb
in
in
mov
inc
add
push
test
in
js
sbb
stos
sbb
aaa
ss
push
push
push
mov
movl
or
fwait
cld
cmp
fldenv
and
inc
hlt
add
sti
fsubrp
push
inc
add
sub
out
or
add
cltd
das
mov
cmpsl
sbb
adc
es
pusha
sub
mov
and
mov
pop
lods
sbb
out
mov
jns
sub
bound
mov
jle
and
cwtl
shll
jge
add
dec
cmp
stos
or
dec
or
sbb
or
jo
test
ja
mov
cwtl
xchg
es
xlat
jo
mov
cmp
in
adc
daa
jl
jle
ficoms
xor
in
xor
inc
add
mov
ds
or
sbb
outsl
das
add
aam
jp
sar
xchg
pop
and
mov
andl
xchg
add
fwait
adc
add
push
orb
jg
sbb
sub
push
cmp
jbe
clc
pusha
hlt
mov
arpl
mov
and
mov
adcl
lock
outsl
in
add
aas
insb
jmp
push
ja
rolb
mov
pop
push
mov
sub
jnp
in
inc
call
in
mov
add
ds
mov
or
fadds
idivl
mov
loope
add
inc
push
call
sbb
sub
icebp
add
movsl
cmp
lcall
mov
stos
push
jle
or
mov
mov
pusha
add
fcomps
fimull
and
loopne
cmp
cli
dec
xchg
and
sub
pop
lock
sbb
mov
fcmovnb
mov
ds
add
sbb
shlb
and
push
fidivrs
jae
jbe
mov
jae
lahf
or
dec
add
mov
xor
dec
shl
push
addl
test
cli
push
pop
sub
xchg
add
iret
add
loopne
fs
sahf
push
adc
data16
lods
add
loop
stos
add
enter
or
add
ljmp
push
test
popf
rorb
lahf
jle
add
stos
orl
mov
sbb
add
in
in
loop
nop
xor
fcomps
icebp
push
clc
add
xor
jp
rcl
nop
add
add
bound
adcl
add
or
lahf
push
jl
out
mov
add
lret
lret
movsb
or
add
je
loopne
stos
inc
add
pusha
sbb
jo
testl
je
mov
push
rolb
mov
inc
mov
xor
add
movb
mov
push
je
ret
stos
mov
inc
jne
arpl
rcl
adc
mov
test
sub
xchg
cwtl
orl
and
xor
pop
add
shll
sti
loopne
pop
inc
mov
cltd
ret
xchg
jmp
stos
das
mov
add
ss
inc
andb
add
lods
and
cmp
in
call
xchg
out
movsb
mov
push
iret
and
movsb
mov
push
aas
sbb
in
sbb
in
out
push
sbb
xchg
fcomps
sti
xchg
gs
outsl
mov
pop
mov
in
add
mov
add
push
xor
sbb
fwait
cmp
jne
add
ret
mov
add
mov
push
fimull
fdivrl
add
movq
push
add
scas
or
and
lods
add
add
cmp
mov
cmp
addb
addl
cltd
cld
adc
pop
call
sub
jecxz
cmpsb
sub
aaa
jns
rorb
sahf
push
loope
inc
add
sub
mov
pop
cmp
add
push
add
pop
or
addr16
shrb
in
xlat
loop,pn
pusha
jg
or
ljmp
mov
mov
lret
add
jg
in
pop
les
dec
rorb
push
sbb
inc
mov
je
add
mov
icebp
adc
enter
add
test
add
test
sbbb
add
xorl
push
insl
cmp
xorb
imul
mov
ja
jg
test
in
push
pop
mov
insb
pusha
into
fbld
roll
sbb
sbb
or
jo
in
jbe
add
dec
dec
out
pop
lret
jnp
icebp
out
cmp
jmp
rclb
push
add
mov
jne
lock
add
push
pop
mov
add
mov
add
dec
pand
insl
or
bound
out
add
or
orl
mov
sbb
add
add
lods
dec
adc
daa
cld
push
mov
push
ficompl
testb
orb
add
cltd
jmp
es
jp
add
add
sbb
out
outsb
add
int3
mov
jge
add
sbb
sti
inc
notb
dec
es
jge
stos
cmp
adc
inc
pop
ds
add
ret
fwait
jne
cmovs
cwtl
pop
xorb
das
fs
mov
std
mov
add
jecxz
xchg
sarb
or
push
dec
adc
mov
test
movsl
lods
rcr
mov
mov
cwtl
enter
cs
stos
add
cmp
mov
inc
push
sbb
add
addb
outsl
jecxz
xchg
out
fidivl
mov
fnstcw
pop
inc
add
sbb
add
inc
dec
adc
xor
xor
mov
in
pop
and
roll
inc
mov
int3
mov
mov
rcrl
mov
jae
mov
push
ja
fstpt
add
daa
movsb
mov
bound
pop
pop
add
lea
loop
or
add
sub
mov
jmp
xor
dec
jge
push
add
xchg
mov
adc
test
imul
pop
add
js
xchg
add
pop
flds
aad
mov
inc
cwtl
stc
add
or
imul
add
dec
push
call
sti
or
shl
add
fistl
xchg
cmp
or
popa
mov
mov
inc
outsl
jle
add
sahf
jnp
ss
pusha
out
add
pop
pop
xor
xchg
dec
add
insb
mov
inc
and
jns
shlb
dec
add
xor
push
add
iret
fnstsw
xchg
daa
mov
add
mov
lods
test
and
add
xchg
fiaddl
sbb
fdivl
insl
mov
xor
sbb
scas
mov
xchg
jae
dec
dec
pop
jmp
clc
add
imul
jo
in
dec
add
xor
or
adc
clc
lds
repz
inc
in
ja
mov
mov
cmp
rcl
nop
clc
add
cmc
mov
mov
out
sbb
lahf
jge
orl
jecxz
repz
mov
insb
cmp
ret
cli
mov
sbbb
adc
dec
ja
jmp
roll
pop
inc
add
pop
lods
cmp
add
jns
cmpl
add
stos
dec
loopne
jne
lahf
add
pushf
xchg
push
mov
sbb
loope
push
mov
sbb
in
add
sahf
and
add
adc
pop
mov
mov
sub
aas
int3
andb
std
fs
inc
add
adc
aad
cmp
outsl
xor
pop
rcr
lods
push
push
dec
or
jl
xor
pushf
je
push
rolb
sbb
ljmp
adc
ror
mov
enter
mov
cltd
mov
scas
dec
imul
dec
and
ja
xchg
orb
lahf
add
or
mov
jp
cmp
and
or
push
addl
loop
in
inc
pop
xor
sub
xor
cmovnp
dec
pop
out
adc
sub
and
lcall
mov
adc
aam
pop
cmc
mov
fs
inc
sbb
xor
adc
insb
sahf
rol
cmpsb
lods
in
jne
add
mov
and
pop
aas
adc
addb
xchg
lcall
dec
int
jb
cltd
add
mov
lds
mov
sbb
lret
jp
xchg
mov
mov
out
jb
pop
cmovs
push
sbb
popf
pop
inc
sbb
add
mov
cli
push
test
add
jp
fsubrs
xchg
add
pop
mov
loope
cmc
push
sbbl
fs
addr16
in
shlb
lods
stos
test
faddl
imul
or
das
inc
insb
and
orl
pop
or
in
jmp
inc
lods
xor
out
movb
and
mov
mov
and
add
xor
lcall
lea
inc
jl
mov
dec
mov
adc
mov
loop
lea
and
cld
mov
test
dec
inc
mov
shl
call
mov
add
sub
leave
sub
adc
enter
jg
push
cmp
shlb
mov
adc
xlat
fiadds
in
or
std
call
lods
mov
or
fisubrs
pop
sub
add
cmpl
xchg
lcall
in
lds
jbe
pop
add
xchg
enter
and
push
cmpb
adc
lods
es
sbb
outsb
decl
cld
jno
imul
cmp
add
fistpll
add
push
dec
out
cmp
mov
addr16
add
scas
add
je
les
pop
push
fadds
fstpt
in
jbe
sbb
out
sar
sub
out
add
test
mov
mov
xor
adc
and
add
outsl
add
adc
fwait
sub
mov
and
movsl
jb
push
inc
ja
inc
pusha
pop
xor
data16
mov
adc
cmp
rcll
cltd
push
clc
add
dec
push
data16
mov
orb
add
repz
lea
jl
enter
out
sub
dec
xchg
add
sub
cs
bound
scas
add
cmp
add
movsl
push
shlb
pusha
cmp
add
insb
stc
jp
xorb
push
add
out
pop
dec
lock
or
outsb
cmp
and
ljmp
xchg
int3
into
lahf
add
add
sahf
xor
mov
xchg
stc
pop
mov
push
add
bound
inc
push
and
in
or
jle
add
xchg
xchg
cmpsl
ss
mov
clc
gs
add
out
adc
inc
jl
add
dec
loopne
jns
push
add
lds
mov
xchg
add
in
and
mov
and
out
repz
enter
pop
inc
mov
mov
pop
dec
cmpl
pop
pop
sbbb
push
xchg
xor
mov
in
cs
push
shll
xor
int
add
adc
imul
cmp
inc
test
pop
push
or
inc
add
out
jp
jnp
inc
jnp
add
add
xlat
or
mov
push
stc
nop
xor
shll
push
movl
cwtl
daa
test
xlat
insb
jl
lock
xchg
fcoml
std
pop
cmp
and
in
add
sub
out
aas
mov
movsb
loope
pop
addl
push
push
nop
addr16
out
push
cs
in
add
dec
or
mov
or
mov
sahf
jp
mov
insb
imul
xchg
add
xchg
mov
hlt
dec
adcl
push
dec
bound
cmp
push
cmp
insb
pop
adc
add
sbb
mov
mov
sub
imul
mov
add
mov
and
xorl
mov
add
cmp
clc
cmp
cmp
or
stos
add
in
add
sbb
and
cmp
mov
adc
adcb
fcomps
popa
loop
shl
test
repz
addr16
mov
mov
dec
sbb
adc
fwait
icebp
and
and
inc
push
dec
sub
add
ret
cltd
flds
cmp
jno
mov
in
add
add
fisubs
jno
les
mov
pop
mov
add
cwtl
adc
repz
sbb
sahf
adc
sbb
pop
and
mov
testb
outsl
fisubrl
int3
add
in
adc
loope
mov
push
push
fnstsw
add
mov
jmp
or
ret
push
cwtl
stos
add
sti
arpl
fmuls
sub
pop
xlat
cmc
pop
movb
out
stos
lret
sub
popf
push
push
rolb
stc
mov
sbb
js
ret
cmp
push
add
push
adc
arpl
jo
jmp
lock
push
mov
addb
jae
lock
add
int
popl
addb
add
ja
add
add
or
add
int3
fisttps
and
es
cli
loopne
or
sbb
xor
and
push
jbe
mov
movsl
xor
add
js
aas
fwait
sbb
sbb
les
ret
lret
jecxz
jmp
sbb
mov
and
aas
je
mov
jmp
add
out
xlat
test
add
cwtl
mov
add
fisubl
add
mov
and
xor
jg
daa
call
push
out
and
fisubrs
sbb
nop
imul
add
repnz
repz
in
movsb
mov
xor
inc
outsl
pop
clc
es
lods
pop
mulb
add
pusha
dec
out
pop
jp
inc
pop
cli
fldl
add
jno
repnz
sub
or
and
adc
jg
add
sarl
add
jg
cli
mov
xor
jle
push
pusha
sbb
movsb
inc
iret
not
int
cmp
test
mov
pop
cmpsl
push
xchg
pop
ret
mov
xor
xor
xchg
add
and
inc
adc
mov
aaa
hlt
xchg
mov
add
ljmp
sub
dec
add
mov
jne
adc
jbe
andl
rol
cmp
pop
cld
push
jmp
add
imul
sub
hlt
xlat
push
out
stc
es
mov
insb
mov
add
jecxz
adc
xor
in
xor
test
xlat
fldcw
lahf
orb
nop
dec
push
sub
bound
loope
adc
cli
jmp
or
sahf
imul
xor
movsl
pushf
inc
or
push
in
add
popa
add
and
pop
ja
xor
and
jns
push
mov
push
add
repnz
lods
pop
ljmp
sbb
shll
push
mov
daa
or
jmp
cmp
faddl
adc
jb
add
addr16
sub
and
filds
fscale
rol
stos
adc
push
and
and
or
jg
hlt
data16
jle
add
fadds
into
mov
xor
psubb
adc
or
push
idivl
add
lds
cmp
rcll
or
xchg
and
jg
xor
cli
das
filds
push
mov
std
cmp
mov
mov
es
fnsave
sub
in
clc
gs
inc
add
pop
mov
jmp
sbbb
loopne
xchg
test
pop
pop
jmp
inc
and
mov
adcb
sbb
sub
aam
mov
mov
fisttpll
lods
cli
dec
std
addr16
mov
xor
movsb
cmp
dec
cmp
push
out
pop
lret
out
add
ret
sub
add
mov
repnz
push
dec
insb
imulb
add
inc
cld
sub
pop
and
cwtl
add
iret
imul
add
js
arpl
mov
xchg
testb
adc
mov
jae
outsb
add
lret
xorb
xorl
mov
loop
or
dec
out
sbb
pop
ljmp
add
sub
jl
jae
test
push
sahf
insl
add
int
loopne
add
stos
shll
mov
jle
sbb
inc
mov
lock
movsl
rclb
ror
inc
dec
xlat
add
and
aaa
rolb
push
mov
clc
rorb
jmp
or
scas
inc
add
sti
dec
and
mov
add
add
xchg
push
jb
incl
movsb
sub
xor
lret
loop
mov
add
out
xor
and
nop
cmpb
jnp
ficoml
div
mov
rolb
xlat
pop
jl
xor
inc
loopne
add
jb
sub
enter
daa
cmp
stos
add
sbb
jp
push
sub
xor
sti
adcb
or
dec
pop
cli
mov
add
inc
xor
add
sub
aas
adc
rorb
cmp
div
jnp
pop
cld
loope
andb
xor
mov
push
mov
or
pop
xchg
leave
inc
scas
rorb
add
push
iret
and
and
fnstcw
lcall
xchg
add
sahf
pushf
shlb
scas
iret
cmp
cmp
fildl
rorb
orb
add
ja
fiaddl
or
jo
xor
mov
add
lods
lahf
mov
out
or
cld
mov
sbb
lds
out
sarb
sub
pusha
ljmp
scas
and
sar
popa
loop
fdivr
in
add
ja
pop
mov
jmp
lods
jecxz
jns
sbb
or
jl
test
mov
inc
cltd
xorl
push
std
stos
popa
mov
add
call
xchg
sub
decb
mov
lds
pop
xchg
sub
fisubrl
or
mov
ret
movq
add
push
sub
mov
add
xchg
add
mov
dec
add
lahf
mov
add
test
adc
mov
enter
repz
shlb
pop
inc
fs
push
add
add
xlat
dec
lret
add
jmp
xchg
add
cs
push
cmp
fs
and
push
pop
pop
js
ret
test
or
js
sbb
sbbb
fs
add
inc
sbb
push
rcrl
cmp
add
push
movsl
mov
sub
imul
add
add
cmp
push
jle
popa
stos
cmp
subb
ds
add
xchg
dec
insb
stos
rol
sbb
add
cli
test
rol
dec
pop
cs
loop
add
aam
fdivrp
sub
dec
jg
out
xchg
pusha
jp
add
rcll
xchg
std
xor
push
sub
add
xor
daa
loopne
jmp
dec
lea
add
clc
adc
push
jbe
cmp
add
in
adc
out
pop
rorb
fldl
aam
pushf
cld
repnz
mov
jnp
filds
lret
popa
lods
outsl
add
sbb
push
arpl
jp
sub
adc
or
cli
pusha
and
je
clc
add
jno
icebp
fcmovbe
inc
loop
xor
into
jne
push
or
ja
leave
test
xchg
icebp
and
push
fstl
push
lret
xchg
sbb
out
pop
sbb
mov
mov
push
rol
pop
loopne
push
add
and
xor
leave
mov
out
xor
xchg
add
rcll
mov
inc
lahf
aaa
xchg
xchg
add
out
sti
or
insl
dec
xor
sub
addb
or
mov
sbb
add
inc
xor
add
aas
aam
push
and
xchg
pop
or
or
inc
inc
dec
add
push
cmp
sub
outsl
mov
adc
push
mov
adc
push
push
and
add
lock
add
adc
jae
in
add
les
add
push
std
mov
sub
in
sbb
xchg
cmc
cmp
cmp
sbb
xor
shrb
inc
lock
lods
orb
jp
mov
add
les
int3
pop
test
nop
in
inc
xor
sarb
fnsave
mov
xor
adc
or
cmp
mov
or
fidivl
mov
lret
scas
add
pop
lock
mov
pop
xchg
xlat
jge
loopne
out
add
mov
sarb
adcb
loopne
dec
jmp
add
test
sub
fildll
cmp
out
pop
cmovl
and
sarl
cmpsl
mov
push
clc
mov
cmp
and
insb
les
xchg
call
pop
fidivl
push
addb
xlat
push
push
rcrb
dec
movsl
movsb
outsl
add
repz
cld
push
icebp
ss
out
push
js
inc
jne
sbb
sti
aad
aam
add
insl
dec
hlt
test
add
in
jne
push
and
test
push
mov
pop
fimull
xor
push
adc
jbe
cmc
loop
jl
pushf
out
xchg
or
pop
mov
loopne
jecxz
cmp
cmpb
cmp
and
adc
cld
add
aas
push
push
sbb
inc
mov
add
cmc
xchg
std
mov
dec
out
add
and
xor
adc
and
cmp
dec
test
pushf
ss
sbb
in
ret
repz
scas
xor
cmp
and
lahf
pusha
jmp
jb
mov
leave
and
clc
cmp
in
or
lcall
rolb
xchg
sarl
dec
ret
hlt
add
mov
push
jle
mov
and
xor
push
pop
js
dec
mov
jno
push
jno
divl
incl
push
mov
add
pop
addr16
mov
movsb
loopne
mov
shrb
jne
or
notl
lcall
mov
add
cmp
jns
lahf
lods
adc
xor
adc
pop
xchg
lret
jno
sbb
add
fs
dec
add
arpl
mov
and
pushf
cmpsb
outsl
popf
jns
add
dec
add
dec
mov
out
test
push
add
lcall
mov
inc
mov
rolb
fisubrs
popf
das
cs
and
in
sub
pop
xchg
xor
push
add
push
mov
mov
lret
out
int3
lock
nop
stc
add
mov
and
add
cmp
dec
mov
lock
movsb
sub
adc
jmp
filds
mov
shrb
ret
xchg
xor
insl
in
jg
loopne
clc
dec
push
jno
pop
test
in
push
jnp
add
jle
add
repz
adcl
cmp
out
adc
add
add
es
pop
int3
pop
add
jo
cld
rcrl
mov
push
push
int
push
shll
ret
sub
cmc
add
outsl
out
add
lahf
add
mov
fists
notl
pop
lods
or
lret
jp
or
int3
or
mov
mov
test
xchg
stos
aaa
dec
add
xchg
cvtdq2ps
roll
or
cs
ret
das
mov
dec
sbb
jae
mov
dec
sub
mov
add
test
mov
into
dec
nop
loopne
push
ret
inc
add
fnsave
pushf
or
cmp
sub
sub
dec
cld
insb
pusha
sub
clc
mov
in
xlat
ffreep
inc
pop
sub
push
enter
call
dec
addb
sbb
mov
jo
xor
add
imul
inc
outsb
fisubrs
dec
add
fsubl
add
push
xchg
test
bound
jnp
repz
and
mov
pop
push
mov
and
or
fwait
add
mov
cmpsb
mov
test
pop
push
mov
inc
sti
mov
lea
xchg
rcrb
andl
pop
cmp
sbb
mov
aam
int3
in
or
test
dec
xor
or
inc
cmpsl
js
lods
js
iret
inc
push
add
fcomp
xchg
add
ret
or
scas
dec
mov
inc
inc
scas
and
xchg
adc
mov
rclb
add
or
js
mov
int3
sbb
sti
add
dec
mov
add
addb
lods
add
and
xor
add
xor
jno
stos
mov
sub
repnz
jecxz
rorb
dec
idiv
push
cwtl
inc
add
scas
fwait
outsl
jge
inc
add
and
movsl
sarb
repnz
cwtl
push
mov
add
test
aas
push
out
or
adcb
pop
jb
arpl
fstpl
insb
dec
stc
aas
jge
adc
enter
add
add
push
cld
mov
or
dec
paddq
call
add
ja
dec
ds
bound
roll
sub
pop
or
insl
inc
push
dec
incl
and
mov
inc
add
mov
add
popf
jno
jo
cmpsb
adc
seta
pusha
ret
jge
push
std
inc
inc
ret
push
mov
jbe
or
add
push
out
push
xchg
nop
xor
andl
mov
inc
mov
lods
pop
mov
cltd
pop
xor
stos
fmul
outsb
scas
dec
pop
ja
mov
and
mov
popf
mov
add
inc
icebp
in
fiaddl
repz
and
enter
push
idivl
add
lahf
aam
pop
jne
pop
in
int3
and
jg
cs
fdivl
xchg
sub
pop
add
rolb
ljmp
jle
jg
adc
pop
aam
or
lahf
repz
add
push
dec
xor
mov
pop
ljmp
stos
add
sbb
into
add
mov
xor
dec
dec
addb
add
add
dec
mov
mov
test
xor
sub
add
jnp
push
add
dec
mov
dec
cmp
fcomp
add
add
xchg
jno
fisttpll
cmp
xor
inc
mov
add
ret
add
push
fs
pop
mov
pop
xorl
cmp
fisubl
fs
out
mov
in
cld
std
mov
add
imull
xor
clc
iret
mov
add
dec
fsubl
sbb
enter
cld
xor
out
orl
cmp
xchg
mov
test
rorl
and
jp
movsl
ss
scas
lock
cld
jnp
jg
dec
or
add
jge
shl
hlt
add
mov
repnz
mov
sbb
dec
orl
jnp
mov
mov
mov
pop
mov
clc
mov
add
dec
adc
add
sbb
dec
je
mov
dec
mov
jp
rcrl
inc
add
cmp
clc
inc
inc
add
sbb
int3
notb
add
mov
ss
add
mov
push
add
add
jmp
jae
sbb
orb
scas
out
pop
xor
mov
mov
lock
fadds
xor
fnstcw
xchg
xchg
inc
hlt
pusha
shrl
pop
dec
xlat
inc
cmp
pop
leave
lock
xchg
add
sub
push
pop
mov
push
inc
fs
out
pop
add
aaa
jbe
and
add
jp
or
pop
adc
sbb
cmp
stos
or
add
aam
cmp
sub
pushf
adc
adc
rclb
sbb
sub
adc
stos
ja
and
jbe
clc
sbb
sub
or
enter
xlat
pop
xor
idivl
dec
push
sbb
and
mov
adc
mov
movsl
cmp
push
nop
xlat
orb
pop
ret
or
adc
test
push
dec
pop
lds
xchg
mov
fsts
and
mov
jle
jns
add
cs
popf
mov
mov
call
jns
rclb
mov
add
add
mov
mov
add
mov
or
shrl
jp
add
jo
or
lds
add
pusha
loope
mov
inc
xor
cltd
push
mov
data16
and
arpl
clc
pop
rol
lahf
jbe
or
fs
in
mov
sbb
push
daa
test
loop
add
mov
push
cmp
hlt
nop
or
scas
adcb
pop
fidivl
clc
mov
xor
mov
subb
mov
add
ret
in
xor
mov
jmp
xchg
or
repz
into
sbb
dec
sub
bound
pop
adc
inc
shlb
ja
xchg
std
xor
lock
rcrl
sbb
jmp
es
sbb
mov
jecxz
cmpsl
add
cli
dec
mov
aam
fildll
add
movsb
or
incl
pop
rolb
mov
scas
lcall
cmpsl
in
fs
roll
ljmp
add
adc
movsb
pop
je
jno
push
push
add
adc
push
ss
inc
xlat
xor
das
imul
dec
or
aam
in
stos
mov
push
rcrb
adc
cmp
push
aas
xor
shr
adc
shrb
mov
movsb
mov
cmp
es
mov
mov
cmp
sbb
add
push
sub
cmp
jle
fimull
lahf
push
cltd
pop
mov
add
in
or
inc
mov
pop
cld
jg
shrb
hlt
pop
add
shrl
xor
in
popf
fxch
cmp
fildl
or
ljmp
es
loopne
add
inc
shll
je
jns
test
int3
and
cmpsb
popf
lock
add
lcall
add
lock
data16
nop
faddl
pop
cmpb
sub
push
in
mov
test
xor
sbb
scas
add
cld
xchg
mov
inc
cmp
shlb
dec
ja
add
mov
lret
test
stos
mov
adc
iret
out
jo
push
mov
lcall
mov
testb
cmp
cltd
push
pop
or
mov
ror
clc
inc
stos
int
mov
push
jb
add
xchg
push
pop
mov
push
out
mov
gs
fisubl
or
mov
inc
and
mov
inc
cmp
adc
push
popf
inc
add
cltd
or
and
ret
aam
dec
xor
lods
inc
dec
add
add
stc
and
pop
setb
jle
jns
sbb
arpl
adc
jb
cli
add
mov
pushf
lahf
add
aam
in
lock
dec
pop
bound
loop
jnp
pop
mov
and
inc
cmc
orl
or
adc
cmp
pop
adc
jae
pop
add
inc
add
push
adc
inc
cld
je
add
lret
sti
addr16
aad
sarb
sub
incb
ja
rcr
loope
ret
lahf
jmp
in
aad
or
cmc
jl
fwait
sub
insb
call
fimull
mov
stos
push
push
add
mov
sbb
pop
hlt
pop
xor
xlat
mov
lcall
jbe
adc
lds
rolb
sbb
leave
cmp
xchg
cltd
xor
lcall
pop
sbb
les
jp
lahf
pop
adc
js
push
adc
sahf
cltd
sbb
fbld
push
cmpsb
add
push
test
cld
add
je
push
mov
enter
jmp
adc
cmpsl
inc
add
clc
cmpsb
cmp
jmp
pop
push
subb
jle
mov
out
dec
imul
mov
ja
push
add
xchg
mov
cmp
or
faddl
dec
jo
icebp
sub
repnz
in
add
in
pop
in
push
dec
ja
add
imul
or
xchg
jecxz
xchg
jp
add
sbbl
dec
xchg
xor
add
or
les
lods
xchg
mov
pop
jmp
mov
sbb
pusha
pop
adcl
and
add
not
push
add
stos
mov
outsb
add
bound
pop
add
or
jl
mov
xor
jb
dec
xor
adc
dec
lahf
add
jns
mov
mov
add
jbe
xor
dec
and
je
lods
pop
and
movb
dec
inc
ror
lret
pop
add
imul
mov
cli
cmp
ljmp
hlt
push
mov
lock
loopne
arpl
fwait
and
jns
xchg
roll
sub
push
add
push
in
inc
mov
jl
scas
add
lahf
movb
push
push
enter
pop
push
hlt
mov
sub
add
sub
cli
add
pop
in
mov
xor
adc
in
push
fcomip
out
add
push
shr
sbb
mov
addr16
mov
jo
mov
cmc
inc
int3
xor
hlt
xor
and
lock
add
das
xor
pop
dec
add
int
pop
test
mov
fsubrs
mov
test
shlb
test
stos
cmc
pop
pop
inc
jecxz
dec
imul
cld
mov
xchg
lret
nop
mov
in
sbbb
fcmovb
and
inc
mov
add
sarb
add
test
ljmp
cmpsb
cmp
cmp
rclb
inc
testb
xchg
adc
xlat
xor
and
inc
pusha
xchg
jmp
dec
inc
jb
add
xchg
daa
sbb
adc
stos
pop
outsb
sub
rorb
push
push
pop
or
sar
stos
lock
adc
inc
add
push
inc
iret
jecxz
lock
or
adc
bound
shl
xchg
mov
cmp
and
push
and
mov
stos
pop
ficompl
push
xor
xor
pop
rol
push
shl
lods
jp
mov
lea
dec
pop
shlb
add
jmp
testl
repz
test
loopne
cmp
pop
add
movsb
and
clc
fldcw
add
jno
clc
mov
adc
add
decb
mov
rcrb
push
pop
dec
inc
mov
rclb
sub
movsb
addl
xchg
leave
inc
push
hlt
div
stc
xor
sub
pop
xor
lods
add
xor
loopne
inc
ret
and
sbb
dec
sti
test
cmp
xlat
pop
popf
cmp
jne
ret
sbb
sub
aam
inc
mov
inc
mov
xor
pop
mov
std
pop
xchg
or
push
mov
xor
mov
les
andl
sub
or
cmp
cmpsb
fs
xor
sbb
sub
cwtl
call
jmp
inc
gs
and
lahf
or
push
add
jp
sub
leave
add
sti
clc
pop
mov
mov
hlt
testl
call
xor
dec
test
mov
jne
pop
push
ds
add
adc
shll
fmuls
add
das
je
jg
add
pop
pop
shll
xchg
inc
xchg
adcb
or
dec
sub
cs
sbb
cmp
mov
sub
repnz
sub
add
sub
loop
es
push
mov
out
add
mov
adc
mov
cmc
addr16
ret
rorb
or
popl
mov
fdivl
sbb
fs
and
jns
add
jmp
add
dec
loop
hlt
test
pop
out
js
add
loope
or
xchg
add
lods
cwtl
es
add
add
sar
xlat
add
or
pop
add
cmp
add
mov
mov
or
fdivr
int
and
sbb
push
mov
add
mov
add
mov
xchg
pop
inc
inc
inc
in
pop
add
iret
add
loope
pop
add
lret
into
jae
movsl
jp
xchg
mov
mov
inc
mov
xor
jg
addb
outsb
mov
mov
dec
adcb
add
or
cmp
aam
mov
outsl
loope
out
in
push
lret
or
add
cwtl
cmpsl
pop
xorb
icebp
cs
adc
jg
sbb
testl
in
push
mov
xchg
int
lock
cmpsl
stos
add
in
and
out
mov
push
rcr
mov
sub
imulb
and
jns
rcr
lods
jne
add
leave
jo
cmc
add
clc
xor
add
inc
pop
and
sarb
movl
test
mov
mov
xor
aaa
mov
or
inc
dec
jecxz
add
test
pop
cmp
jg
mov
add
mov
jns
cmp
add
mov
sti
call
push
pushf
pop
es
int
popa
popf
pusha
bound
add
push
test
add
out
or
xor
pop
inc
fmull
cltd
je
add
sbb
push
dec
push
loopne
loope
loop
add
rclb
mov
sub
jne
enter
sub
cli
imul
leave
jmp
dec
adc
bound
xchg
mov
orb
sti
mov
or
mov
scas
push
mov
cmp
sahf
lea
jl
fwait
cmp
jle
aam
roll
ret
fldcw
aad
dec
repz
movsb
scas
pop
stos
mov
jo
push
sub
adcb
data16
les
xchg
xlat
or
mov
add
add
sbb
lahf
add
xor
lret
cld
jae
repnz
mov
inc
fsubs
fsubl
in
xor
loop
jnp
add
push
inc
adc
add
push
mov
dec
dec
lods
data16
jecxz
add
pop
dec
xchg
push
sbb
clc
push
sti
jne
divb
sbb
mov
fiadds
mov
push
str
pop
dec
in
jmp
js
mov
cmpsb
jg
add
addb
add
xor
bound
sub
int3
mov
dec
xchg
ljmp
add
pop
add
repnz
add
mov
fwait
ret
aad
inc
test
fstpl
mov
or
mov
mov
mov
ret
mov
in
add
cmc
andb
jne
shlb
add
cmp
or
sahf
add
xchg
adc
dec
jbe
add
js
add
inc
add
push
and
cmpl
in
sub
outsb
loop
andl
sbb
cmp
std
inc
pop
push
add
jp
subl
ja
push
inc
add
mov
sbb
and
xor
xchg
adc
data16
xor
xchg
mov
add
mov
adc
add
pop
repnz
hlt
sub
xor
jo
add
clc
sbb
add
jns
dec
in
adc
inc
mov
outsb
insb
sbb
or
adc
cltd
rcrb
mov
in
ror
sbb
int
xchg
push
mov
or
test
lods
cli
or
adc
add
inc
movsb
fisttpll
add
adc
in
mov
push
add
vpsubusw
data16
add
fcompl
sbbb
outsb
into
in
add
mov
mov
fldl
aam
in
push
fwait
mov
pop
popf
sub
cmpsl
mov
pusha
jg
or
call
in
sbb
roll
dec
clc
jno
psrad
push
pusha
jl
icebp
out
std
add
test
cli
inc
add
adc
inc
sub
xor
fdivrs
sti
fdivrs
sahf
pop
js
cmpl
pushf
and
mov
icebp
and
and
roll
mov
sahf
xor
shrb
cmpb
lahf
ja
test
or
xchg
cmp
mov
mov
lss
inc
xor
inc
pop
xor
int3
insl
pushf
movb
push
mov
test
aas
repnz
push
pop
pop
ficoml
lret
push
adc
dec
out
xchg
and
jnp
fldt
mov
jg
pop
pop
adc
cmp
mov
cmp
add
sub
xchg
gs
sub
jle
repnz
add
mov
insb
sahf
cs
xchg
mov
add
fidivs
push
sbb
gs
push
or
jg
add
sahf
mov
ja
sbb
mov
adc
mov
incb
scas
rclb
add
sub
cli
dec
inc
inc
scas
add
imull
test
mov
jmp
mov
mov
shl
pusha
xor
jb
inc
xchg
dec
and
gs
mov
pop
cmpsl
add
hlt
fwait
outsb
add
push
jo
stos
addb
and
cmpb
dec
mov
sbb
jl
cs
enter
push
mov
push
pushf
out
movsb
cmp
shll
nop
or
repnz
sub
int3
dec
and
ud1
sub
xor
pop
inc
inc
add
outsb
adcb
mov
or
sahf
pop
add
lahf
mov
les
mov
leave
add
lock
push
enter
add
out
pop
cld
je
aaa
mov
in
jo
gs
add
and
add
push
add
xchg
repnz
jge
xchg
add
or
testl
lock
add
pop
je
sub
ds
mov
add
add
and
andps
pusha
push
lea
sub
dec
dec
ffree
in
mov
andb
and
mov
push
addl
pusha
inc
cmpb
jo
dec
popf
jmp
stos
add
cmpsb
dec
inc
add
sbb
insl
cmp
repz
cwtl
inc
and
add
xchg
dec
shll
scas
and
mov
xor
mov
cmp
cmp
iret
inc
leave
adc
add
pop
mov
mov
cwtl
dec
add
call
or
adc
inc
xchg
jbe
in
stos
iret
das
loopne
xlat
mov
popf
in
int
push
dec
mov
ja
test
loop
test
add
jecxz
out
xchg
and
out
loopne
inc
ja
mov
test
push
fwait
divl
repz
nop
mov
cmp
int
and
add
subb
mov
mov
add
popa
and
stc
bound
push
add
or
movsl
rorl
sbb
ss
sar
add
and
fwait
mov
lea
scas
lods
mov
and
es
add
idivl
sarl
add
insb
sub
xor
cmp
jns
loopne
in
lods
dec
dec
adc
arpl
xlat
push
nop
mov
dec
mov
add
mov
add
add
aas
flds
fdiv
jne
pop
inc
add
jns
sbb
adc
jo
daa
dec
sbb
sub
cli
push
subb
int3
cld
inc
aas
lret
mov
fisttps
loopne
stos
cmp
ja
jecxz
lcall
pop
rol
lock
pop
fildl
js
mov
sbb
push
and
inc
xor
das
test
fsubr
adc
data16
or
and
inc
icebp
pop
inc
rorb
and
jp
pusha
addb
pop
xchg
daa
cmpsl
sbb
add
and
lods
add
push
dec
inc
xor
divb
stc
imul
lods
and
sbb
add
outsl
inc
add
mov
and
or
fst
add
cmp
bound
pop
rclb
add
sarb
mov
sbbl
sub
push
push
shlb
nop
out
enter
pop
push
push
jge
pop
mov
inc
add
icebp
test
popa
addb
xchg
mov
movsb
call
addb
iret
mov
mov
sbb
inc
je
aaa
test
test
inc
adcb
mov
sub
mov
inc
dec
loop
mov
xchg
add
das
add
pop
cmp
ds
call
or
inc
cwtl
push
rcrl
push
add
mov
rclb
les
inc
mov
sbb
es
rcrl
fildll
enter
add
dec
testb
adc
mov
push
mov
clc
into
orb
insl
or
add
aas
push
cmp
push
movsl
fcomip
add
mov
imul
add
sub
push
cmp
pop
jne
mov
add
nop
daa
cmp
ret
hlt
inc
test
sub
adc
xchg
stc
dec
movsl
mov
pop
add
loopne
in
outsl
in
lret
add
in
stc
dec
shlb
mov
dec
cwtl
mov
sub
mov
leave
and
mov
cmp
sbb
arpl
cmpb
pop
js
arpl
fwait
iret
test
nop
and
outsb
cmpsb
add
dec
fdivl
cmc
insl
sbb
pop
or
sbb
lahf
fisttps
js
lock
je
popl
outsl
add
inc
out
iret
mov
add
xchg
addb
int
jg
push
dec
sub
sar
or
lods
and
push
test
out
add
test
add
sub
inc
dec
jne
push
push
push
push
jl
and
out
xchg
adc
cli
cmpsl
lret
lcall
cmp
push
test
mov
inc
lret
in
repnz
jmp
enter
add
jae
xor
mov
aad
pop
ror
inc
nop
loope
mov
mov
push
push
mov
ret
or
dec
out
mov
popa
lock
nop
mov
ja
divb
in
and
test
mov
add
push
and
call
adc
add
inc
push
lock
mov
mov
ss
push
inc
dec
pushf
je
fs
mov
pop
add
gs
jne
psrad
aaa
mov
sahf
in
adc
mov
out
shl
test
dec
je
fldcw
cmp
jb
aas
pop
mov
orl
ret
sbb
sub
or
jnp
pop
jmp
sarb
dec
cmp
jle
sbb
and
add
and
mov
jmp
jnp
out
fsubrs
add
imul
pusha
hlt
ret
dec
sbb
xchg
test
xor
out
mov
out
add
add
fcoml
rclb
mov
mov
sbb
out
add
pop
movsb
arpl
fistl
loopne
jg
add
cmp
lock
xchg
rclb
cmpb
insl
sbb
in
fisttpl
mov
pop
xor
push
loopne
xchg
ja
pop
int3
fisttps
push
insl
adcl
mov
enter
and
aam
add
mov
push
pusha
add
insl
pop
adc
mov
sarb
add
cmp
cwtl
sub
sarb
push
leave
xchg
addb
and
iret
pushf
outsb
icebp
pop
sub
ret
aaa
or
imulb
ljmp
pusha
mov
sbb
sarb
xor
dec
cld
add
xor
mov
cmp
test
dec
cmp
push
or
or
sub
insb
pushf
rclb
bndldx
or
or
shlb
push
outsl
jmp
add
cmp
jb
enter
jnp
fildll
xbegin
push
lods
mov
and
xchg
sbb
add
and
cmp
mov
orl
aam
pop
sbb
out
add
jbe
pop
push
jae
rorb
jge
add
add
add
add
pop
leave
jns
imul
clc
adcb
rcl
test
mov
pusha
dec
test
cmp
jp
out
in
push
outsb
push
fildl
xor
dec
xchg
sbb
add
ret
hlt
mov
subb
popa
sbb
adcl
jg
or
cld
andb
sbb
jne
mov
pushf
iret
das
add
add
loope
outsb
leave
or
add
push
xlat
shlb
popa
mov
lods
jl
jne
add
push
out
mov
mov
mov
lea
shl
fidivrl
mov
leave
sbb
or
jbe
scas
icebp
out
ja
adc
test
or
xor
mov
orl
adcb
mov
enter
push
sbb
jo
push
jb
fwait
sbbb
xchg
pop
push
imul
mov
push
jno
xorb
je
add
xor
fsqrt
dec
add
mov
mov
jne
cmp
cmpsb
add
dec
sbb
je
sub
movsb
pop
inc
data16
add
pusha
loopne
nop
pop
sub
jmp
out
in
pusha
loopne
aad
lds
call
in
test
pop
js
sbb
push
das
add
jle
movsb
dec
shll
add
push
or
add
mov
popf
xlat
jg
or
mov
outsb
nop
add
mov
popf
xchg
jecxz
out
pop
les
mov
sub
cmp
xchg
add
sbb
dec
into
xchg
je
andb
daa
inc
inc
int3
jo
add
fwait
out
pop
adcl
test
pop
sub
mov
sub
movq
aas
mov
daa
sarb
stos
lock
sarb
sahf
adc
mov
mull
test
add
jno
stos
mov
subb
imul
or
dec
es
push
inc
pmulhw
and
mov
movsb
pop
mov
sbb
mov
int3
or
cmpb
mov
add
test
inc
popa
add
cli
sbb
stos
fmuls
mov
addr16
mov
rolb
cmp
fdivrs
jbe
insb
stc
adc
lock
lds
pop
sub
sub
cmpsl
hlt
add
in
ret
aas
add
jle
mov
push
or
and
test
outsb
add
mov
sub
add
mov
sub
insl
loopne
jae
cmp
pop
or
into
loopne
xchg
push
jp
sub
add
jbe
dec
cmp
in
scas
loope
icebp
add
jae
mov
lds
dec
or
mov
cmc
xchg
mov
or
pushf
push
jmp
sbb
in
cmp
dec
xchg
lods
in
pop
pop
pop
add
shrb
push
xor
out
rcrb
add
sbb
xchg
mov
lds
adcl
fimull
scas
sbb
sub
aam
ja
add
repnz
add
nop
xchg
or
int
jno
mov
pop
mov
rol
pop
ret
xor
gs
push
or
inc
into
lcall
cwtl
xor
push
cwtl
fs
add
test
jecxz
mov
fildll
cmp
dec
push
xorl
fldl
or
scas
lahf
les
inc
cltd
mov
push
mov
jle
dec
xchg
mov
add
aas
mov
movb
das
push
jo
fdivl
add
pop
xor
push
adc
rolb
push
ret
clc
js
cmp
jmp
out
add
fldt
mov
js
testl
test
cmp
prefetchnta
mov
adc
decb
xor
test
nopl
add
jae
fdivrs
clc
mov
cmp
mov
cmc
lret
mov
das
mov
and
not
cmc
mov
inc
fcomps
mov
sub
fwait
jbe
add
fiaddl
push
in
sarb
add
mov
insl
shll
js
mov
enter
inc
fsub
xchg
adc
int
cmp
lret
pop
xchg
mov
imul
shlb
jl
sbb
test
mov
adc
push
xchg
jge
add
bound
cmp
dec
cwtl
or
addr16
dec
int3
jno
inc
cwtl
enter
scas
dec
and
and
adc
sti
out
and
and
inc
adc
addb
and
xlat
je
test
test
gs
push
ret
push
lods
mov
or
pop
scas
test
mov
inc
hlt
jbe
push
mov
lods
mov
mov
cmp
mov
mov
adc
sub
incb
test
jp
and
cld
inc
cmpsb
adc
push
and
pop
jge
ljmp
add
xchg
hlt
xlat
pop
data16
out
xchg
sub
enter
sbb
shlb
repnz
pop
xor
cmpb
add
sub
arpl
call
xor
jmp
cmp
adc
outsl
test
add
push
xchg
jl
lret
lret
sbb
repnz
pop
or
daa
xchg
loop
mull
xchg
and
sub
stos
push
test
mov
imul
and
jecxz
inc
ud1
push
xor
daa
in
imul
pushf
loope
in
sub
leave
mov
add
and
push
inc
stos
jb
xchg
sbbb
std
cmc
es
add
jl
outsb
fnsave
add
jae
inc
sub
insb
pop
imul
cmc
mov
aas
inc
push
or
lahf
pop
testb
jmp
sbb
sbb
rolb
sub
hlt
or
add
push
imul
punpckhbw
into
mov
cmp
and
and
pop
jns
sbb
push
stc
ljmp
mov
or
shr
sub
sub
les
cmp
pop
dec
mov
mov
xor
add
mov
xor
sub
lds
jb
test
xlat
enter
lods
leave
scas
rcll
iret
mov
add
xchg
je
or
add
inc
mov
cmp
adc
cmp
aas
mov
es
add
ljmp
push
xchg
pop
cwtl
push
add
insl
or
test
cmp
xchg
inc
mov
push
jae
inc
mov
scas
sbb
outsb
jo
rclb
cmp
add
fsubs
and
stos
xchg
jno
inc
and
inc
imul
xor
pop
and
add
mov
inc
test
pop
rclb
hlt
adc
fsubl
add
pusha
jo
hlt
and
and
jmp
dec
or
and
int3
fistpll
add
fwait
and
jnp
add
pop
lock
adc
jo
cmp
fwait
jp
sti
inc
testl
add
pop
movsb
push
push
fsubl
leave
xor
xor
push
lods
pop
push
and
sbb
inc
cmpb
add
xor
push
into
add
mov
jecxz
xor
mov
in
shlb
mov
scas
sub
daa
lcall
adc
xor
pop
add
push
sbbl
testl
sub
test
push
add
lods
xor
test
push
stc
pop
or
popa
pop
add
mov
push
add
testl
sbbb
xchg
stos
js
mov
mov
pushf
mov
cmpsb
lock
mov
push
xor
sbb
add
adc
aaa
mov
xchg
int3
inc
or
adc
fsts
add
xchg
idiv
lret
cwtl
add
lahf
jge
pop
cmc
out
xor
xchg
add
in
inc
pop
in
add
jp
insb
and
jo
pop
mov
xorl
or
cmp
ja
pushf
adc
rolb
mov
clc
loopne
lret
dec
cld
add
fimull
sub
jmp
pop
das
add
les
mov
xchg
push
dec
in
cmpsl
fwait
add
adc
divb
and
add
jl
inc
in
push
add
cmp
fsqrt
outsb
imul
rorl
mov
addb
cld
in
mov
mov
lods
push
nop
add
adc
mov
outsb
jno
mov
mov
add
push
inc
mov
mov
push
mov
mov
shll
das
pop
pop
lret
sahf
jns
cmpl
push
dec
bswap
rol
add
test
je
add
cmp
stos
add
bound
insb
mov
and
in
or
push
lea
add
clc
insb
mov
push
rcrb
testb
push
fisubrs
popf
and
add
lahf
pop
rorb
pop
fistl
test
pop
cmp
shll
cmp
adc
pop
js
sahf
mov
sbb
add
fldenv
or
mov
hlt
lock
and
clc
xor
sbb
in
and
inc
cmp
push
out
call
nop
xchg
xchg
add
mov
push
cmpsl
push
mov
dec
pusha
and
cmp
push
fsubs
stos
push
loopne
clc
iret
add
pop
and
mulb
inc
imul
cmp
xchg
add
mov
cld
inc
loop
mov
lcall
and
mov
add
jmp
test
ret
dec
jnp
add
mov
xchg
es
mov
push
ffreep
fdivs
out
and
and
cmc
dec
pop
cld
in
add
test
push
cmp
push
mov
imul
loope
in
add
jle
insb
test
pushf
int3
xor
out
pop
mov
hlt
rolb
mov
jmp
xlat
and
and
inc
lds
jo
rorb
add
adc
add
jecxz
push
out
sub
add
mov
loop
int
lods
add
stos
ds
xor
sbb
mov
jo
int3
lea
dec
adc
lret
pusha
sub
int
ja
and
cld
lret
add
jne
dec
xchg
cmc
popa
mov
sub
pop
inc
push
inc
rclb
mov
push
sub
pop
mov
loope
adc
shl
dec
out
dec
enter
cmc
jne
test
out
jmp
icebp
mov
ror
xor
add
lcall
mov
mov
add
xchg
cld
push
pop
xchg
jb
int3
cmp
cmp
popl
lods
and
xchg
mov
repz
rcrl
pop
pop
mov
pop
cmp
ret
cmp
mov
nop
jae
ret
mov
call
adc
push
inc
jge
ss
cmpsb
add
pop
sub
push
mov
call
mov
lret
or
push
sub
repnz
pop
sbb
push
mov
adc
jmp
adc
leave
lds
scas
clc
pop
add
or
inc
mov
incb
mov
push
or
testl
push
dec
mov
xor
cmp
jg
sbb
jnp
rolb
xorb
xchg
decl
cwtl
push
das
jp
mov
pop
pop
add
adc
arpl
mov
add
lahf
lcall
add
sbb
insl
xchg
aad
xor
push
adc
clc
add
mov
test
stos
nop
mov
mov
mov
jle
mov
mov
outsl
cmpsb
xor
fidivs
add
clc
push
jb
push
sub
enter
fadds
and
js
cmp
shrb
add
xor
es
in
add
sarl
pop
sahf
jbe
inc
test
add
ret
mov
cmp
int3
mov
sahf
aas
add
pusha
test
dec
ss
enter
sub
mov
sbb
aas
or
into
clc
mov
cmc
lods
add
fisubrl
mov
pop
or
or
cmpsb
jecxz
add
inc
sbb
xor
pusha
add
subb
add
decl
rcl
cmp
out
das
inc
sub
xor
fiaddl
fwait
loopne
pop
int3
adc
push
adc
or
cwtl
cmp
mov
cmp
rcll
int3
sub
lea
dec
mov
lret
add
insb
jp
ficomps
xchg
mov
jns
dec
add
stos
sahf
jg
jle
imul
cmp
mov
mov
shl
xor
fcmovb
and
call
push
jle
add
add
mov
add
add
adcb
lds
cmp
push
ret
xchg
add
mov
mov
popa
lea
add
mov
lock
adc
jo
mov
add
leave
sbb
arpl
je
cltd
adc
xchg
rcl
cld
xchg
pop
mov
sbb
cmp
scas
mov
inc
hlt
lods
aaa
sbb
cwtl
and
jmp
dec
es
ret
mov
dec
add
into
mov
adc
arpl
ljmp
insb
rol
or
sub
mov
mov
xchg
insb
sbb
or
mov
fimull
popa
xor
cwtl
cmpl
pop
dec
icebp
inc
add
jmp
cltd
pop
jns
imul
pop
in
mov
jl
sbb
add
jge
das
xor
scas
inc
add
cmp
jae
mov
jnp
inc
sub
stc
cmp
push
popa
add
pop
dec
cmp
pop
rclb
pusha
aam
xor
jl
pop
in
add
or
mov
clc
inc
and
sbb
jb
or
rcll
jbe
add
or
or
clc
fisubs
sub
sub
sub
jae
or
int
enter
inc
pop
jmp
add
adc
mov
scas
pop
and
das
fiadds
mov
les
add
pop
xchg
add
xor
ficoms
sbb
out
add
insb
xchg
sub
push
or
add
add
cmpsl
in
dec
pop
adc
add
xor
mov
jns
add
xorl
xchg
hlt
mov
int
pop
lahf
push
pusha
mov
imul
cmp
rolb
sbb
sbbb
arpl
imul
xor
insl
mov
mov
and
dec
inc
adc
mov
stc
ljmp
cmp
add
push
mov
mov
loope
push
and
das
mov
les
lcall
cmp
loope
into
mov
sti
lods
push
ret
and
popf
dec
xchg
add
fisubrl
inc
xor
add
dec
pop
roll
into
jl
pusha
xor
jle
loop
cld
in
add
fwait
dec
push
and
jno
add
mov
mov
aas
or
mov
inc
mov
scas
cs
add
sbb
add
out
iret
das
mov
hlt
pop
shl
loope
adc
dec
pusha
repz
push
fisubl
adcl
movsb
add
pushf
pop
add
add
pusha
mov
lods
lret
cmp
push
movsb
leave
and
push
cmpsl
test
insb
mov
add
fbstp
pop
sti
enter
push
xorb
in
mov
pop
sub
clc
push
mov
arpl
out
pusha
sbb
cli
shll
xchg
mov
ljmp
out
test
dec
test
mov
add
shrl
inc
and
ret
push
cs
mov
jle
and
add
in
inc
rcrb
add
dec
cmpsb
lret
sbb
sti
inc
stos
lods
jno
mov
andb
push
push
jg
cmp
adc
jns
push
inc
mov
jp
and
rcll
push
mov
ljmp
es
xor
xchg
jo
add
mov
into
add
ret
xor
lcall
xchg
movsl
in
pusha
or
xor
pop
test
add
inc
mov
fcoms
jnp
add
test
fisttpll
movsl
andl
mov
inc
add
imul
hlt
push
sbb
je
cltd
adc
add
pand
push
call
adc
test
mov
sub
add
arpl
sbb
pop
inc
add
sub
add
pop
scas
aam
lret
sarb
fs
test
dec
mov
call
and
and
add
inc
rclb
jno
add
rorl
mov
add
sub
add
sub
jl
mov
stos
fcmovb
fwait
in
dec
int3
cmp
xchg
jne
dec
mov
sub
add
fs
mov
jb
cwtl
add
and
sarl
lcall
js
mov
pop
inc
mov
add
pop
jecxz
ficoml
pop
das
push
push
loop
scas
sub
cmp
movsl
lods
or
xor
xchg
dec
cltd
inc
add
mov
add
or
jbe
add
jecxz
xor
fnstsw
xlat
and
sarb
out
push
add
dec
and
stos
jl
std
mov
mov
sub
add
push
pop
ret
add
cltd
xor
pop
sbb
pop
inc
sbb
or
pop
dec
test
leave
mov
add
in
mov
adc
xchg
ds
dec
out
push
stos
out
adcl
pop
mov
orb
jl
mov
cld
mov
xchg
add
mov
popa
cmpsl
xor
mov
sub
mov
outsl
shrb
mov
popl
std
pop
and
pop
shll
cmp
inc
add
lods
clc
cmp
push
gs
cld
addb
or
out
mov
add
daa
subb
out
jbe
mov
mov
fdivs
outsl
or
divb
test
or
lds
cmp
push
in
fxam
inc
add
and
nop
and
scas
pushf
jo
inc
xchg
adc
insl
push
inc
mov
gs
mov
add
sbb
ficomps
js
repz
mov
mov
dec
xchg
or
out
adc
sub
loope
push
rol
cwtl
lock
mov
out
iret
fs
add
jne
rolb
popa
aas
fxam
mov
jb
test
js
dec
push
sbb
mov
scas
sbb
sbb
sbb
js
jno
fstl
add
jbe
xchg
mov
rdmsr
push
in
test
negb
jmp
or
cwtl
mov
pop
or
or
add
ret
jne
mov
add
aam
sub
push
lods
xor
rclb
adc
inc
outsb
cwtl
add
test
pushf
add
mov
orl
mov
mov
add
xor
pop
xor
sbb
and
push
and
mov
add
cltd
in
inc
push
add
cs
dec
push
lods
in
add
fsubrl
outsb
shll
out
inc
and
xchg
add
sarl
push
loopne
xchg
add
movsb
out
xchg
adc
xchg
add
jmp
adc
test
mov
cmpsl
inc
sbb
sub
xchg
add
fwait
cmp
add
sub
pop
out
cwtl
pop
les
pop
aam
aas
and
mov
ljmp
and
mov
add
dec
out
shlb
mov
pusha
jno
jns
shl
mov
push
loop
pop
arpl
shll
rolb
xorl
mov
sub
lods
pop
jns
roll
mov
mov
pop
push
cmp
push
roll
jno
push
sub
mov
aad
mov
sbb
and
push
test
cmp
dec
adc
xchg
in
add
stos
pop
sbb
dec
sub
popa
insb
xchg
ja
fs
movsb
and
push
sbb
xor
dec
js
cs
lcall
pusha
mov
sar
or
mov
cwtl
popa
and
mov
xor
mov
push
sti
mov
pop
cmp
cmp
add
ret
les
shl
xorb
add
icebp
gs
lea
cmp
push
movsb
dec
sti
jne
les
dec
mov
insb
or
sahf
pop
sub
in
lock
jne
mov
pop
mov
cmp
add
nop
push
jmp
and
mov
sbb
add
sub
cmp
shll
in
mov
fildll
xchg
add
push
das
sub
ljmp
push
divl
add
or
sahf
jbe
ret
mov
fcomp
sbb
mov
xchg
adc
jg
mov
imul
sub
addb
jno
cmp
pop
cmp
xor
pop
add
xor
add
aad
cmp
out
andb
sbb
je
mov
pop
sbb
mov
std
mov
sbb
dec
jne
sub
and
add
adc
sbb
hlt
mov
jbe
fcompl
ds
into
cmp
mull
js
in
or
and
xchg
leave
cmp
dec
sub
imul
loop
cmp
add
dec
xor
inc
test
hlt
fimull
xor
mov
cwtl
add
ds
test
adc
add
add
fisubs
pop
lea
andl
xchg
xor
mov
jbe
dec
cld
jge
movsb
out
pop
in
int
and
xor
lcall
stc
insb
in
add
outsl
push
inc
flds
call
lds
mov
out
les
add
xor
mov
cmp
shlb
pop
add
stos
fldenv
int3
and
lock
sub
out
pushf
add
dec
mov
lahf
cld
xchg
or
lods
bound
mov
push
xor
ljmp
mov
lcall
int
push
mov
lods
add
lret
jp
in
pop
lds
inc
dec
mov
sbb
movl
clc
xchg
push
xchg
and
in
mov
pop
cmpl
rolb
jmp
mov
shrl
data16
mov
ja
jo
les
loope
rcrb
mov
xchg
add
test
mov
push
push
add
add
ficomps
shlb
mov
test
lret
data16
enter
testb
lahf
jecxz
sti
orb
pop
cmpsl
xchg
cmc
dec
std
xor
insb
mov
rcrb
pop
mov
rclb
xor
insl
mov
das
in
xor
stos
push
push
adc
sub
fidivs
xchg
xchg
add
dec
add
cmp
add
sti
jg
fldcw
pop
or
fcomps
or
loope
cmp
xor
push
push
add
pop
insb
mov
add
sub
and
or
addb
bound
or
push
mov
inc
xor
repnz
mov
mov
add
stos
xchg
dec
loopne
and
push
cmp
fadd
xlat
mov
shl
mov
or
xchg
jnp
xorl
jb
xor
icebp
aaa
mov
jnp
add
out
adc
add
jle,pn
xor
dec
sti
pop
cmp
into
add
xchg
jne
sbb
add
hlt
subl
pop
jnp
add
xor
sarl
cld
jns
push
mov
sbb
or
jle
ja
and
add
lods
sbb
inc
popf
xor
add
es
sbb
add
add
xchg
das
mov
dec
or
inc
lret
leave
push
lock
add
and
add
push
test
and
or
ljmp
jae
scas
dec
dec
inc
enter
in
test
ret
mov
mov
int3
imul
sbb
push
push
mov
mov
repnz
xor
pop
sar
addb
dec
lss
cmpb
loop
cmp
out
mov
add
cmp
mov
xlat
sub
pop
scas
shll
xor
cmpsb
nop
movsb
adc
inc
and
mov
loop
mov
and
pop
dec
add
xchg
ja
dec
jnp
push
aas
clc
aaa
jge
inc
stc
add
mov
push
int
xchg
nop
inc
add
sahf
sbb
or
add
cli
add
vmwrite
sbb
cmp
fiaddl
xchg
cmpsb
sub
nopl
add
adc
mov
add
sahf
jg
add
das
jne
cmp
mov
add
test
loope
xchg
dec
sti
adc
in
jo
mov
icebp
push
movsl
sahf
add
jl
add
ds
sub
jmp
shlb
and
hlt
xchg
add
sub
add
push
inc
loop
cld
push
cmp
test
movsl
push
lret
add
cwtl
xor
test
pop
mov
dec
add
adc
xchg
sbbb
xchg
mov
mov
bound
xchg
sub
push
inc
sti
pusha
and
bound
fidivrl
fadds
mov
es
xor
outsl
sub
das
add
cmp
xchg
adc
mov
pop
hlt
enter
mov
sub
addr16
and
xor
or
jno
mov
add
jp
pushf
stc
add
out
in
pop
push
mov
outsl
xlat
mov
lahf
in
sbb
pop
add
mov
pop
mov
jbe
fnsave
cli
jns
les
mov
or
cmp
xor
lret
mov
xchg
or
in
test
sub
jg
ficoml
popa
scas
pop
add
sbb
rcrb
add
leave
xor
jmp
add
xlat
bound
mov
faddl
add
inc
mov
push
add
dec
divl
add
rcrl
jb
imul
arpl
pusha
aam
mov
add
cmpb
or
lea
pop
pop
movsb
add
insb
inc
push
xor
mov
fdivs
mov
inc
xor
jno
add
lods
in
inc
sub
adc
cld
sbb
xchg
jne
cmp
mov
lds
sahf
in
jo
add
fsubrl
mov
xchg
aaa
add
mov
in
sub
pushf
adc
enter
adc
sub
and
rclb
loopne
iret
cs
add
mov
jle
add
and
imul
nop
add
call
pop
sbb
add
daa
fadd
fildll
dec
adc
cli
mov
pusha
push
or
fldt
add
insb
mov
xor
jne
out
jb
stc
inc
in
iret
jmp
mov
enter
cmp
scas
sarb
inc
xchg
jb
jns
js
add
dec
mov
jmp
xor
sub
inc
mov
or
stos
jge
and
add
enter
fs
je
fwait
es
lret
ds
cmp
xor
cmp
nop
push
ljmp
xchg
test
pop
test
xor
ljmp
andl
daa
sar
mov
and
ja
jge
int3
dec
mov
mov
inc
add
ret
les
add
mov
orl
mov
in
fwait
clc
mov
pushf
push
add
movsb
das
xchg
pusha
nop
cld
or
popf
jo
cmpsb
pop
mov
sbb
hlt
daa
shlb
add
sbb
popf
inc
lods
xlat
aad
jg
movsl
pop
push
xor
jl
std
sub
xor
or
outsb
push
add
jae
in
in
nop
jl
adc
or
loop
nopl
mov
dec
js
inc
rcl
jle
add
mov
mov
arpl
pop
repz
insb
dec
loopne
sub
xor
dec
fisttpll
iret
jp
jnp
enter
insl
cmp
imul
rclb
testb
pusha
add
sub
add
leave
and
fwait
adc
xchg
out
test
stos
jl
hlt
filds
jp
unpcklps
stos
sbb
push
add
aam
xor
rcrl
add
push
fmull
xor
mov
pop
sbb
lods
std
and
notl
cmp
mov
in
add
push
cld
add
iret
xchg
add
xchg
dec
sbb
les
cmpsl
jmp
adc
scas
les
xor
in
push
shrl
imul
sbb
inc
fildl
mov
mov
ret
xor
incb
and
popa
add
jle
addr16
jo
mov
jmp
pushf
cmp
add
mov
or
das
inc
sbb
dec
pop
sbb
call
outsl
xchg
add
and
lret
sbb
insl
shlb
or
mov
sub
xor
add
mov
test
daa
aas
xor
dec
shrl
stos
mov
jno
jle
cld
mov
inc
out
jl
andb
and
ror
call
int
add
ds
mov
jae
adc
out
sbb
mov
loopne
cmpsl
inc
add
mov
pop
dec
push
in
adc
xor
ja
aam
push
orb
nop
add
dec
aaa
inc
repnz
xchg
add
cmpsb
rol
enter
outsb
roll
icebp
sub
or
inc
mov
cltd
sub
xchg
cwtl
movntq
lret
add
inc
les
cmp
inc
mov
cmp
add
iret
xchg
pop
lahf
dec
add
lret
popf
dec
add
or
enter
mov
shlb
jns
sub
sbb
mov
fs
ret
lods
push
fcmovnb
xchg
leave
jo
hlt
push
jbe
roll
jnp
ja
pusha
xor
adc
fcmovu
adc
lea
pop
push
stos
jo
jg
out
shlb
sub
pop
repz
sub
test
ljmp
pop
enter
add
push
ss
jl
hlt
cmp
jg
xchg
dec
xchg
xchg
or
out
testb
push
pusha
add
loop
imull
push
sub
sahf
mov
or
clc
addb
xchg
cld
dec
sysenter
pushf
das
lret
add
jb
add
add
add
pusha
cmpsb
in
aam
push
add
inc
add
lds
leave
and
nop
andl
icebp
xchg
ret
out
add
dec
ss
rolb
cmp
ljmp
push
pop
test
add
sbb
ret
xlat
mov
push
mov
addb
cwtl
movsb
push
adc
fwait
or
scas
add
je
mov
outsb
sbb
cmp
in
push
inc
mov
shll
or
insb
dec
cmc
movsb
push
lods
je
mov
imul
in
mov
clc
cmpsb
sahf
shlb
inc
scas
push
rorb
ds
add
adcb
call
outsb
jb
adc
fadds
sarb
jne
stc
dec
mov
out
imulb
dec
push
setno
push
mov
xor
dec
cli
arpl
rolb
pop
hlt
sbb
in
ficomps
cs
inc
jecxz
shlb
std
jmp
sub
mov
add
lods
bound
add
jp
orl
add
xchg
dec
sbb
inc
cmp
sbb
jmp
and
add
jmp
mov
add
add
pushf
das
cltd
movsb
adc
bound
inc
mov
int
or
jp
roll
shrb
out
mov
mov
inc
push
mov
in
mov
jl
stos
jnp
cmp
mov
pop
or
int3
incl
mov
aam
mov
add
and
arpl
and
dec
xor
mov
movsl
cli
add
loopne
into
lock
or
dec
lret
stos
rorb
mov
stos
lods
pop
iret
sbb
or
and
jb
test
push
sbb
xlat
fmuls
pop
mov
add
cwtl
mov
rolb
loopne
push
mov
das
pushf
inc
or
out
jne
push
mov
mov
mov
pop
fstps
and
testb
fs
xchg
mov
push
imull
xorb
daa
cmp
cmp
jge
mov
xorb
adc
ret
adc
inc
test
arpl
jp
add
sti
pushl
pop
imul
in
mov
mov
icebp
notl
mov
shlb
cmp
popf
and
jecxz
test
clc
add
mov
rorl
add
imul
movsb
sub
and
nop
cmovo
mull
in
cmc
dec
repnz
movsb
pop
add
add
cmp
mov
adc
mov
and
add
fisubrl
out
vcmpsd
jge
pop
add
cmp
dec
pop
cmpsb
rcl
and
clc
and
cmpsl
add
fadd
xor
adc
lea
add
mov
outsl
push
pop
roll
mov
or
add
filds
mov
pop
mov
add
movsb
cmp
sbb
call
test
cltd
jp
call
int
xor
adc
pop
outsl
inc
pusha
sbb
in
or
jp
lret
int3
dec
mov
add
lods
xor
push
xor
mov
xor
sahf
into
popf
or
jo
in
dec
test
push
cmp
push
sbbb
enter
add
jbe
cltd
pop
outsl
inc
ljmp
inc
push
push
decb
mov
cmpb
cmp
out
arpl
test
mov
out
sarb
add
sti
pop
fimull
js
mull
jns
lahf
jae
mov
add
push
push
push
std
cwtl
mov
cmp
cmp
mov
inc
clc
add
xor
dec
or
or
int
jb
out
jle
adc
jb
push
xor
jne
and
aaa
ss
test
pop
loopne
ljmp
xor
push
fs
je
shlb
sub
imul
decl
jnp
outsb
pop
in
lahf
or
loopne
add
jl
cmc
ds
push
mov
xchg
inc
and
stos
add
mov
pop
insl
push
add
insb
push
rcrb
xor
scas
mov
gs
mov
test
add
sarb
cltd
jecxz
mov
int3
xorb
mov
push
jb
mov
push
sbb
lret
add
repnz
dec
sub
sbbb
pop
sbb
jl
push
in
shrb
pop
cmp
add
sbbb
or
pop
add
add
dec
push
add
mov
movsb
in
mulb
jbe
sbb
rcrl
stos
iret
fwait
leave
pop
sub
stc
jg
mov
in
cmpsb
fnstenv
add
insb
mov
testb
jnp
dec
lcall
mov
ja
cs
decl
subb
add
inc
inc
loopne
add
es
jge
or
lret
gs
les
gs
ds
mov
loope
in
jb
adc
jecxz
add
mov
les
ljmp
mov
loope
clc
mov
mov
push
add
jmp
popa
jg
in
movups
adc
xchg
movd
sbb
xor
pop
cltd
mov
xchg
lahf
xor
cmc
or
add
add
add
sbb
aad
sarl
cmp
dec
lret
roll
push
jecxz
add
mov
cmp
outsl
pop
aad
inc
sbbl
cmp
add
sbb
scas
aam
aaa
add
mov
mov
cmp
repnz
std
mov
add
jno
ja
inc
add
dec
faddp
or
mov
jmp
adc
mov
data16
add
mov
push
mov
ret
mov
adc
pop
pop
test
xor
push
ds
and
sbb
add
mov
sub
xchg
loopne
adc
loop
jle
mov
fs
test
mov
mov
decb
sub
adc
pop
mov
xchg
test
add
daa
or
addr16
sbb
test
add
push
inc
int3
ds
and
imull
add
inc
not
jbe
add
jbe
mov
dec
loopne
pop
xchg
insl
mov
addb
inc
and
out
or
or
fwait
adc
ds
call
test
mov
sti
add
or
pop
shrb
iret
add
shlb
add
loope
fistl
sbb
inc
add
jb
fcmovbe
sub
adc
adc
call
int3
or
cwtl
and
sbb
dec
or
stos
sarl
int3
mov
lods
mov
lret
jo
nopl
lcall
cmc
and
dec
mov
arpl
rclb
es
mov
add
cmpsl
dec
jp
pop
rep
nop
add
or
xchg
push
cvtpi2ps
xorl
cmp
push
jg
or
shrl
in
lea
push
add
inc
cmp
adc
orl
inc
and
pushf
add
mov
test
mov
lds
sti
cmpsl
lods
xchg
xor
xchg
add
cmp
pop
and
inc
xor
push
cmp
sub
mov
pop
in
xor
movsb
or
xchg
lock
mov
add
jle
xchg
pop
push
mov
pop
addr16
out
fdivrs
jmp
repnz
xor
aas
leave
xor
les
jb
add
in
repnz
pop
scas
jns
mov
jne
mov
mov
int3
mov
addl
dec
lock
hlt
dec
daa
iret
dec
adc
shrb
jbe
jb
inc
cmp
xor
sahf
ret
je
mov
pop
mov
xchg
ljmp
and
fwait
js
fs
mov
cltd
shrb
sub
pop
mov
sbb
adc
cmp
jbe
add
pop
rorl
push
out
cmp
add
mov
jl
test
scas
sbb
or
and
orl
or
aaa
out
pop
pusha
jo
jmp
dec
mov
add
cwtl
out
dec
xchg
xlat
and
jecxz
int
incb
jns
mov
data16
clc
add
in
mov
sahf
push
add
dec
adc
xchg
add
mov
cwtl
jnp
stos
add
pop
iret
xchg
adc
push
xor
stc
pop
rcrb
in
outsl
dec
incb
pop
cmp
les
ja
stos
and
adc
push
roll
decb
ficompl
and
xorb
jo
push
inc
lea
addl
mov
cmp
add
daa
cld
push
test
jb
push
xor
and
add
add
js
roll
jbe
jecxz
and
arpl
jne
loop
push
mov
vmwrite
xchg
in
adc
pop
inc
adc
test
ret
add
ljmp
call
cmp
mov
loopne
and
je
repz
push
repz
xlat
vpaddsb
ret
push
jg
movsb
fsubrs
add
fmul
push
jmp
aad
sti
cmp
rolb
xor
popl
and
or
sbb
add
fs
dec
xor
mov
enter
loope
lret
cmpl
leave
or
jne
add
dec
sbb
jge
add
repz
inc
mov
adc
mov
mov
lods
fs
add
mov
mov
lret
push
pop
mov
jecxz
es
icebp
xor
ss
loopne
sub
pusha
pop
jg
or
jge
pop
lods
add
cs
inc
pop
test
fidivrs
xchg
inc
idiv
out
cli
push
add
lahf
adc
rcrb
cmpl
and
dec
pop
inc
add
stos
repz
aam
mov
aaa
push
imulb
ffree
bound
js
leave
adcl
xor
dec
inc
pop
cmpb
add
mov
test
imul
xchg
inc
add
cmp
enter
or
aam
daa
add
adc
in
adc
dec
mov
pop
repz
sbb
jb
cli
lcall
jl
add
jle
fists
decl
add
push
cld
dec
and
add
stos
cltd
in
daa
repnz
test
adc
lret
stos
push
dec
jne
aad
adc
pop
test
dec
add
push
cmpsb
mov
loopne
jge
or
mov
mov
orb
add
mov
adc
mov
fistpl
push
and
jmp
pop
lret
and
loope,pn
sarb
xlat
and
sub
xor
xchg
or
les
or
jns
sbb
outsb
xor
and
sbb
jbe
xchg
cmp
and
mov
popa
sbb
jbe
nop
push
xchg
push
mov
iret
add
cmc
callw
fwait
jg
stos
add
stos
sbb
cmp
mov
add
sub
inc
insl
add
xor
add
aad
add
adc
add
loopne
mov
add
jo
imul
out
sub
add
pop
sub
push
pop
and
cmp
daa
nop
fimuls
pop
imul
movsl
pop
cwtl
jle
rcrb
mov
ret
adc
cld
jnp
jle
or
lock
mov
add
mov
or
mov
pop
clc
add
popl
cmp
inc
mov
xor
rolb
js
mov
push
outsl
inc
mov
or
add
push
mov
or
repnz
jmp
xchg
loopne
mov
cmp
lret
or
sub
mov
push
ds
repz
mov
or
negl
lret
sub
mov
cli
sbb
or
sbb
mov
loopne
add
fidivrs
pop
mov
mov
xor
stc
imul
add
int
fdivrs
inc
add
pop
fs
push
mov
add
push
loopne
jp
pop
mov
jmp
std
xlat
mov
rcl
dec
add
sbb
add
or
fs
out
mov
out
adc
jbe
jae
pop
jno
jo
add
stos
shrb
pop
mov
jbe
sbb
sbb
iret
int
sbb
mov
popa
pop
fidivl
test
dec
pop
insb
daa
rclb
cmp
add
sbb
daa
cmp
int3
or
mov
cmp
fisttpl
pusha
jmp
sub
aaa
xor
inc
cmp
popa
mov
mov
movl
ja
mov
pushl
iret
mov
shl
repz
push
fwait
pop
add
jmp
push
orl
lea
sub
addl
testb
shr
mov
xchg
ret
sbb
pushf
fnstcw
adc
add
sub
xchg
fs
pop
xor
push
sti
mov
rorb
add
lret
fsub
mov
in
pop
jb
call
pop
lds
int3
cltd
cmp
jne
icebp
adc
pop
jg
add
fcmovbe
fwait
jmp
sbb
nop
add
adc
scas
adc
rolb
sbb
and
icebp
cmp
imulb
jb
add
xorl
push
std
jg
lcall
insl
call
cmp
xchg
lret
ja
clc
jg
add
cltd
jne
filds
adcb
sub
pop
fcomps
int3
pop
cmp
lcall
sbb
iret
sbb
data16
pop
adc
js
iret
sbb
mov
adcb
mov
add
push
pop
cli
fstpl
pop
lahf
test
in
xlat
je
rorb
jno
loope
mov
push
push
xor
jecxz
cltd
pop
add
in
mov
and
ds
cld
test
cltd
push
dec
add
inc
mov
jl
mov
dec
jnp,pn
xor
adc
push
pop
add
shlb
lock
fldl
stos
mov
push
aam
mov
adc
mov
je
stos
and
add
sbb
jo
test
pop
sbb
negb
out
push
adc
adcb
ds
repnz
aaa
cmc
pushf
nop
sarb
and
pusha
loop
or
es
xor
fsubl
dec
xor
nop
loope
and
fsubs
into
mov
out
jo
cld
dec
or
sbb
adcl
in
pop
daa
in
in
leave
or
sbb
pop
push
sub
js
xor
adc
mov
addr16
adc
jecxz
inc
push
add
outsl
mov
insl
ja
js
cs
add
iret
push
adc
or
mov
or
rclb
dec
sub
stos
insb
push
lea
mov
repnz
or
cli
std
faddp
xchg
or
in
xor
xchg
push
mov
or
into
xor
adc
add
jmp
xor
in
fiaddl
xchg
adc
clc
sub
frstor
inc
shl
mov
push
pop
add
dec
popf
popa
sub
int3
stc
enter
shrl
add
pop
push
push
mov
and
jnp
popa
movsb
jno
xlat
and
pop
mov
mov
fimull
lret
ficoms
daa
leave
cmc
inc
loopne
push
and
out
add
xchg
mov
dec
jmp
push
out
das
cmpb
add
icebp
mov
pop
jg
stos
adc
outsb
adc
rolb
repz
popf
dec
ret
dec
scas
mov
sbb
leave
sub
add
mov
fldl
call
pop
adc
data16
xor
add
fidivl
add
push
lods
arpl
mov
mov
lret
imul
jl
enter
addr16
cli
fildl
ficompl
add
stc
jecxz
jnp
pop
jmp
dec
mov
sahf
inc
pop
mov
pushf
pop
pop
pop
stos
push
add
scas
roll
mov
pop
adc
add
mov
or
push
jo
mov
push
sbb
cmp
shrl
aaa
jns
sub
xchg
loopne
repnz
add
dec
xor
sbb
add
lds
cltd
xchg
cmp
test
jge
add
out
sub
add
add
ret
adc
mov
bound
test
mov
leave
movsl
movsb
inc
mov
or
pop
iret
inc
clc
aam
mov
and
lods
ror
stos
mov
aam
or
dec
mov
and
cmpsb
mov
fsubs
push
mov
movsb
and
add
fcompl
xchg
mov
and
xor
or
js
pop
dec
cmc
add
sub
out
fstps
inc
sti
lret
movsb
and
add
loop
and
mov
clc
mov
mov
cltd
stos
lahf
outsl
cwtl
sbb
insl
xchg
jne
fxtract
aam
jle
fmull
sub
rcr
nop
ljmp
sbb
mov
add
adc
pop
sbb
dec
call
rcrb
push
add
and
dec
add
push
add
jle
cmpsb
push
adc
add
fs
shr
jecxz
mov
shlb
xchg
and
nop
jo
outsb
jnp
jb
adc
test
jo
cld
idivl
in
sbb
outsb
das
shlb
push
add
inc
cmpl
rolb
jl
lcall
inc
nop
andb
lcall
stos
dec
mov
xchg
pop
fwait
call
jbe
adc
out
cld
add
sub
mov
add
adc
popf
lds
insl
mov
jbe
xor
add
adc
arpl
sbb
pushf
testb
mov
or
add
test
dec
add
outsb
xor
add
pop
les
push
fsts
jmp
pop
pop
cwtl
sub
jne
pop
dec
testl
cmp
clc
and
add
lahf
movl
fcoms
add
addb
xor
loop
inc
bnd
xor
sbb
or
or
sbb
push
icebp
lret
mov
add
cmpb
nop
out
or
push
jg
add
sub
add
xor
pop
push
repz
cmp
into
add
call
test
nop
mov
sbb
repnz
cld
mov
add
mov
jmp
xchg
xor
adc
cmpsb
outsl
adc
sbb
scas
adc
sahf
fwait
ret
xor
cmp
and
stos
add
sbb
in
cmpsl
xchg
addl
sub
sbb
dec
insl
push
inc
lret
mov
sahf
cmp
mov
and
divb
add
and
rcrl
inc
leave
jp
inc
push
addb
mov
mov
add
mov
dec
inc
add
inc
rolb
xor
mov
add
repz
pop
mov
rolb
insl
inc
lahf
add
insb
rol
jbe
fsubr
mov
jecxz
jns
add
cmp
je
add
cld
idivl
xor
clc
add
scas
ret
pop
mov
subl
pop
inc
neg
sub
pop
pop
mov
sub
daa
mov
fiaddl
loope
rol
jno
add
mov
or
hlt
test
adc
adc
or
aam
and
aas
adc
in
add
fisttps
in
daa
inc
add
pusha
xchg
mov
rolb
imull
adc
int
dec
pop
cmp
out
lods
dec
sub
in
ret
mov
aaa
xor
movsb
add
add
cmc
adc
add
test
jnp
movb
jmp
es
paddusb
in
nop
pop
outsb
pop
add
dec
pop
ja
loopne
adc
inc
push
fwait
mov
mov
testb
cmpsb
sbb
push
inc
in
shlb
sub
andl
cmp
idiv
add
xchg
int3
push
add
mov
mov
cltd
push
imul
add
sbb
jno
leave
scas
pop
push
mov
aad
push
add
test
add
sbb
iret
push
cld
loopne
dec
sub
push
or
cmp
pop
add
out
jmp
cmpsl
xchg
addb
dec
mov
jp
daa
fnstsw
xor
jno
and
push
add
fdivr
push
fldl
xor
or
cmpb
sub
push
push
iret
push
aam
imul
es
les
popa
mov
push
hlt
xor
cltd
mov
sbb
rorl
pushf
jbe
pusha
sbb
xor
aaa
mov
fcompl
das
mov
sbb
fisubs
leave
inc
mov
add
dec
nop
mov
outsb
xchg
xchg
push
sbb
fisubrs
in
jl
arpl
or
rorb
cmp
stos
jle
faddl
xchg
in
add
dec
xchg
cli
mov
add
out
and
sahf
pop
jl
jp
pop
push
lret
mov
mov
insl
add
mov
or
mov
jle
dec
add
call
push
xchg
lahf
push
sub
add
jb
pop
mov
pop
std
inc
rolb
add
scas
sub
lock
add
shll
cltd
jns
push
jo
inc
pop
inc
mov
mov
pop
lret
loopne
cmp
sbb
mov
sub
adc
repz
add
js
insl
sti
add
push
mov
pop
jg
stos
js
sbb
lock
cmp
jno
bnd
xchg
push
adc
test
or
xchg
mov
sub
add
hlt
loopne
xchg
jno
pusha
xor
icebp
loop
xchg
outsl
jns
add
lock
fidivrs
mov
imul
inc
das
or
sub
int3
scas
jnp
into
jl
cmpsl
cmpb
aas
add
cmp
add
xor
stc
and
daa
int3
int
lahf
imul
aam
adc
xor
das
lds
add
adcb
rolb
mov
xchg
addl
adc
mov
sbb
sub
rolb
push
xor
pop
add
and
outsb
jae
loope
cmp
pop
add
cmp
adc
add
loopne
sahf
mov
stos
jl
rcrb
inc
cmp
cmpsb
inc
pop
push
pop
dec
jle
and
fldl
fiadds
push
cmp
into
pop
mov
xchg
dec
imul
push
clc
xor
mov
jb
add
bound
push
jo
adc
lods
adc
cmc
gs
or
in
pop
pop
add
not
aaa
loopne
add
dec
rorw
cs
jmp
pop
and
shr
pop
jae
adc
lods
sbb
cmp
cmp
mov
rcrb
cld
xchg
cmp
rolb
adc
mov
or
hlt
lds
call
or
loope
hlt
mov
mov
imul
jbe
cmp
push
enter
lcall
jge
push
xlat
xchg
in
add
sbb
add
pop
dec
bsf
add
jne
or
popf
mov
add
or
add
jl
dec
jo
jmp
add
clc
or
jns
add
dec
jno
add
movsl
in
sahf
or
in
icebp
mov
push
and
aad
push
nop
inc
add
mov
out
cwtl
xor
adcl
add
outsl
push
mov
out
sbbl
cmp
xor
lock
into
insl
call
enter
jnp
add
jae
cmovae
inc
xchg
add
out
jne
faddl
xor
cmp
xor
add
lret
add
mov
popa
xchg
hlt
inc
pop
jne
and
imul
pop
hlt
cltd
and
add
aas
add
mov
or
add
sub
add
js
pop
enter
push
push
lahf
divb
notl
add
dec
aam
ret
cld
gs
push
add
mov
add
mov
mov
sbb
scas
mov
out
add
insb
inc
in
xor
mov
or
ja
push
and
gs
fs
add
and
fimull
xor
loopne
adc
sbb
mov
fmuls
dec
jae
add
pop
mov
add
nop
xchg
sbb
adc
and
and
mov
scas
xchg
std
imul
sub
dec
sarb
inc
jmp
stc
adc
fdiv
je
mov
sbb
pushf
mov
xchg
leave
inc
imul
sbb
xor
cmp
negl
mov
imulb
scas
add
pop
and
or
sbb
test
sti
jo
jns
sbb
add
addb
shlb
push
inc
adcb
cltd
jmp
mov
inc
mov
xchg
inc
add
outsb
cmp
out
or
fs
and
mov
decl
loope
jmp
sbb
movsl
pop
mov
jg
cmp
pop
inc
dec
lods
add
pushl
rclb
adc
add
outsl
loopne
out
into
pop
cltd
add
pop
xchg
xchg
stc
xor
cmp
cmpsb
jge
add
mov
aaa
hlt
pop
cmp
or
add
sub
pop
mov
sub
or
cmp
stos
inc
vmovss
adc
dec
inc
jle
into
cmp
dec
sbb
sbb
jp
addr16
adc
or
and
jnp
jge
pop
mov
cwtl
xor
xchg
xor
mov
cmp
pop
mov
push
add
add
out
mov
mov
sbb
push
jno
cmp
and
dec
pusha
in
lods
adc
or
hlt
xor
ficoms
inc
pop
and
cmp
sub
test
mov
loope
les
push
in
imul
loopne
arpl
incb
loopne
jno
or
cmp
xor
clc
aas
fnstcw
add
stos
cmp
repz
adc
adc
movb
daa
scas
cmp
movsl
xchg
push
and
push
repz
int
sub
rolb
shll
add
cmc
and
imul
add
xchg
xorb
adc
addr16
sbb
push
add
jmp
out
or
out
sub
outsl
jp
add
shlb
dec
sub
jmp
xchg
or
ret
jo
and
adc
mov
mov
sub
xor
popl
aaa
loope
cmp
cmp
adc
add
push
push
jns
xchg
sbb
adc
xchg
dec
add
add
mov
pushf
sbb
icebp
jns
jbe
scas
pop
jp
inc
and
lahf
add
mov
cmp
repz
int
in
add
mov
dec
std
or
add
loopne
or
sub
or
push
in
add
mov
add
lods
and
inc
fnstcw
sub
js
add
outsb
lret
xchg
push
xor
flds
sbb
sub
push
pop
or
mov
aas
add
shll
stc
lcall
pop
mov
clc
jnp
mov
inc
sbb
aad
mov
dec
cld
aam
fadds
jge
xor
sub
mov
test
rolb
push
pushf
add
push
pushf
add
fidivl
push
adcb
cwtl
subl
inc
inc
xor
repz
mov
lods
xor
mov
lds
push
pop
xor
jmp
fadd
or
xor
push
add
xchg
dec
xlat
jns
inc
rol
stos
mov
and
push
out
cmp
add
xlat
and
mov
and
shl
jae
and
xor
mull
fldt
out
add
or
adc
scas
cltd
and
int
jl
addr16
mov
rol
cld
in
ret
pushf
inc
xchg
cwtl
add
add
mov
sub
add
add
xchg
in
jne
push
jl,pn
cmpsl
cmp
gs
cmp
add
sub
fs
repnz
dec
and
sub
mov
add
lea
mov
cmp
add
xchg
incl
das
sbb
mov
stos
nop
jnp
les
int3
jo
mov
fsub
dec
jno
sbbb
dec
inc
add
lret
xor
enter
icebp
lock
adc
shl
sub
and
test
test
push
lret
ret
ds
subb
nop
int
subb
cmovp
imulb
pop
inc
or
popa
icebp
inc
pusha
cwtl
orl
out
add
xchg
cmp
adc
and
or
jno
sbb
scas
fsubl
stc
or
inc
sti
pop
inc
pop
cmp
sbb
mov
imul
xchg
nop
pusha
in
pusha
cmp
mov
add
mov
test
push
cltd
cmp
add
mov
js
ret
int
inc
or
xor
and
add
xor
xchg
mov
sub
inc
and
ja
inc
adc
js
fildl
test
nop
jne
out
or
dec
inc
aaa
sub
rolb
or
jo
xchg
in
mov
add
mov
sti
fs
int3
add
subl
loope
mov
repnz
or
jne
jmp
into
shl
push
mov
add
and
push
push
dec
pop
cmpsb
sbbb
cmp
jo
stc
cmp
out
dec
xor
xchg
mov
dec
addr16
and
add
push
mov
sub
pusha
mov
add
xchg
int
xorb
add
cltd
push
ret
popa
repnz
shrb
inc
ret
mov
cmpsl
jo
movl
clc
cmp
ds
mov
inc
cmp
cmp
roll
sbb
sbbb
pushf
and
inc
adc
add
ret
xchg
pslld
cmp
cwtl
sahf
repnz
sub
sub
add
outsb
add
jb
mov
imul
cmp
cwtl
ror
jmp
sbb
in
mov
dec
adc
and
les
pop
shr
mov
add
in
mov
jmp
add
dec
out
hlt
add
sub
dec
je
sahf
push
sbb
ds
pushw
adc
loopne
sbb
out
jmp
cld
aas
test
sbb
push
dec
lret
cmp
mov
shl
in
mov
nop
rorl
clc
fwait
add
sti
movsl
xor
pop
pop
xchg
jp
add
or
ja
loope
and
pusha
jge
and
sbb
fs
inc
std
movsl
add
jge
mov
add
sbb
je
ret
push
rcll
pop
sub
cld
shl
mov
pop
dec
push
lahf
dec
xchg
push
pop
jg
movb
int3
andb
int
divl
test
inc
imul
jle
add
je
stos
mov
rcrb
pop
add
jbe
rorl
lods
add
imul
sbb
loop
and
push
stos
add
push
and
sbb
inc
sub
push
jecxz
ljmp
adc
aam
in
es
pop
pop
orl
jp
adc
loop
ficoms
sbb
test
data16
nop
mov
fadds
fisttpl
add
add
mov
out
fstp
scas
jns
and
fisubrl
add
lea
mov
cwtl
adc
jmp
clc
jl
repz
mov
subb
mov
dec
fwait
add
adc
pop
add
cmpsl
jns
popf
or
inc
cmp
cmp
cmpsb
mov
mov
sub
mov
sbb
mov
sbb
push
movsb
cmp
jns
add
mov
rclb
les
push
jmp
andl
mov
xor
add
fdiv
es
jge
push
pusha
pop
int
jle
cmp
adc
mov
add
dec
loope
ret
lcall
mov
cmp
daa
gs
pop
xor
or
dec
mov
in
shrb
subb
mov
loopne
xchg
call
rcrb
and
loopne
sub
dec
jl
sbb
or
push
xchg
push
inc
xchg
jae
out
cmpsb
jb
data16
sahf
pop
in
popa
adc
xor
adc
insl
add
int
push
add
ret
jb
aaa
add
fdivrp
in
mov
cmp
add
mov
and
cmp
mov
sub
mov
dec
in
cmpsb
cmpb
pop
into
subb
jb
add
xor
xor
lahf
or
incb
pop
mov
mov
adc
mov
sub
mov
add
and
dec
jmp
mov
movsl
stos
mov
bound
add
out
mov
sbb
sub
fwait
inc
test
add
repnz
add
shll
inc
dec
push
shll
cmp
inc
andb
add
mov
shl
push
xlat
fs
cli
xor
add
js
scas
mov
cwtl
add
jle
aam
les
cmpsl
pop
xchg
adcb
sub
mov
testb
cwtl
pop
add
into
call
mov
mov
add
mov
push
andb
and
mov
cmc
inc
out
xchg
das
lods
add
testb
add
lods
je
mov
jle
cmpsb
pushf
ds
add
cmp
jl
insb
movsb
in
pop
add
dec
inc
add
or
push
or
jecxz
sub
cmp
mov
repz
mov
ret
add
lahf
lea
add
pop
loop
xchg
data16
in
jne
popa
rcl
mov
or
ljmp
add
mov
addr16
jp
add
mov
inc
nop
sbb
mov
jnp
dec
pop
sbb
sbb
mov
das
arpl
mov
cmc
sbb
test
add
loopne
icebp
xor
xchg
add
push
leave
mov
mov
inc
or
add
add
inc
ret
mov
lcall
add
fcmovnb
fs
repz
xor
push
push
add
out
inc
jo
cwtl
cwtl
or
movsl
out
jmp
sbb
jp
leave
add
jbe
push
rorl
or
pop
mov
scas
add
out
mov
push
loopne
lahf
dec
add
sbb
pop
mov
add
mov
repz
daa
jle
xlat
inc
add
fildl
sub
rcrb
or
lock
adc
mov
fildl
add
fsts
push
imul
jg
cld
xor
loop
inc
in
adc
dec
xchg
add
xchg
insb
push
inc
inc
jg
add
push
repnz
jae
sbb
loopne
mov
incb
jmp
sarb
xor
lcall
dec
add
fmulp
in
add
popa
stc
jg
cld
addb
sti
lret
mov
in
mov
out
jns
mov
dec
mov
sub
and
addl
inc
fstpl
inc
push
mov
fcomps
outsb
insb
inc
jne
fldenv
jno
cmp
mov
cwtl
xor
push
pop
scas
cmp
xchg
mov
imul
sbb
pop
xor
jmp
or
jbe
xor
in
leave
out
gs
mov
sub
imulb
in
or
mov
xchg
loopne
les
xor
sub
call
mov
pop
add
daa
or
push
addb
repz
jae
xlat
mov
in
cmc
pop
addl
sub
std
aam
push
in
test
out
xchg
cwtl
xor
out
roll
pop
je
repz
sub
insb
cwtl
dec
add
nop
mov
cli
push
jp
sarb
push
and
mov
loop
add
push
xor
or
fildl
lods
mov
or
xor
dec
sub
add
add
and
lret
jmp
push
testl
dec
pop
adc
lds
addr16
dec
add
cmp
cmp
dec
stos
icebp
hlt
cmc
pop
sbb
push
mov
mov
ljmp
add
inc
ucomiss
shlb
jmp
pop
testl
adc
leave
stos
push
mov
roll
xchg
jns
mov
push
les
orb
pop
sub
add
mov
pop
add
push
push
fsubl
xchg
jge
add
sbb
lock
sarb
dec
ficoml
shlb
popa
por
inc
out
mov
xchg
mov
js
jmp
add
and
dec
add
cltd
dec
outsb
adc
into
dec
mov
sbbb
flds
add
push
js
or
add
lahf
loopne
pushl
add
scas
mov
push
into
andl
sub
adc
daa
xchg
xchg
imul
sub
adc
popl
cmp
lret
sbb
loopne
push
jl
sbb
pop
gs
mov
mov
insl
roll
pop
xor
sbb
jae
dec
inc
pop
add
xor
pop
cmp
js
xchg
je
add
and
popf
and
hlt
add
or
je
rorl
pop
push
addl
jbe
xchg
call
add
insb
cltd
mov
push
jo
or
push
add
pop
add
and
jmp
js
lds
fcompl
pop
mov
pop
inc
jns
mov
jl
jp
pop
dec
inc
mov
in
or
or
lock
add
jae
shlb
sbb
stos
fimull
cmp
jnp
xchg
xchg
push
jmp
ret
add
mov
push
test
inc
and
add
ds
jno
arpl
enter
ds
scas
push
mov
sbb
cwtl
imul
pop
jg
and
push
or
add
rolb
ret
inc
add
insb
nop
sub
test
jl
lods
int
cli
scas
mov
in
sub
les
test
into
aam
shrl
mov
jg
push
add
mov
ret
shll
cs
dec
cmp
lods
rorb
movsl
jbe
add
mov
sub
push
mul
lret
mov
pop
test
pop
nop
add
insl
and
cmp
fisubl
imul
mov
and
shll
jno
cmp
inc
orb
adc
sahf
add
mov
cmp
fwait
into
xor
add
ljmp
in
rolb
dec
sub
ss
and
sbb
fldl
rclb
add
jp
cmp
add
and
stos
ret
test
ja
testb
push
jne
add
jae
jle
dec
mov
movsl
push
cmp
fneni(8087
cmp
les
les
pop
pusha
or
js
push
and
adc
sub
push
loopne
test
mov
scas
rolb
push
iret
lret
mov
add
fimuls
sti
ljmp
out
in
fadds
ret
or
call
xchg
add
pop
and
inc
mov
insl
mov
mov
and
mov
and
add
cmp
cmc
pop
pushf
add
ds
inc
in
imul
mov
adc
ss
mov
add
loopne
push
add
mov
outsl
cltd
mov
ret
daa
jb
or
jne
xor
mov
ds
pop
daa
clc
xorb
pusha
nop
mov
add
adc
lcall
ja
xor
add
sbb
pop
in
es
int
add
data16
or
push
outsl
iret
push
dec
cli
jl
jns
cmp
or
mov
out
adc
out
outsl
loopne
fiadds
push
ds
les
xlat
adc
mov
ds
ljmp
mov
xchg
enter
inc
ja
xor
faddl
pop
mov
pushf
cld
add
negb
and
aam
inc
mov
scas
subb
mov
add
mov
jbe
xor
add
dec
stos
pop
jmp
mov
scas
pop
and
int3
jb
add
pop
inc
jle
add
bswap
sub
xchg
test
cltd
push
adc
out
out
pop
aas
movups
mov
arpl
scas
ja
gs
add
mov
xchg
and
mov
cmp
add
es
dec
ret
scas
dec
cld
out
cmc
add
push
fs
inc
scas
fildl
arpl
push
cmp
adc
mov
mov
add
mov
push
mov
mov
stc
shl
inc
sub
js
mov
jnp,pn
leave
inc
int3
adc
scas
dec
cld
lret
jbe
enter
outsb
mov
aad
push
inc
in
dec
subb
cmc
test
dec
shlb
gs
mov
pop
mov
scas
cmp
cwtl
add
popf
dec
inc
clc
popa
add
mov
rorb
cmc
and
add
insb
mov
arpl
xlat
dec
testl
sbb
jno
jle
call
into
or
cmpsl
rol
mov
rcr
or
pop
out
test
jb
ret
pushf
mov
inc
lods
jbe
cmp
jnp
pavgb
popa
inc
add
sbb
jae
or
iret
mov
enter
aaa
jle
add
add
or
loope
mov
mov
ror
cmp
imul
pusha
shrb
sub
inc
in
xor
pop
les
cltd
pop
jb
pop
pop
push
add
lods
or
cmp
fisttps
inc
push
popl
sbb
jge
pusha
add
lea
push
xchg
mov
stc
mov
daa
or
cli
fadds
mov
jne
cmp
iret
push
lcall
add
sub
cmp
subl
ljmp
pop
cmpl
xor
dec
inc
dec
bound
push
es
or
aam
outsl
fwait
sub
cmpb
int3
mov
or
imul
xor
movsl
cmp
xlat
clc
add
push
in
loop
push
pop
repnz
and
cmc
jo
add
sti
xchg
hlt
mov
sbb
clc
xor
xor
cmp
or
push
mov
push
sbb
popf
add
jecxz
ror
lock
dec
jne
xchg
fcmovnb
mov
add
xor
sbb
inc
mov
add
mov
inc
add
or
add
push
sbb
repz
push
push
push
mov
mov
mov
pop
das
cmp
pusha
mov
test
js
sub
rolb
mov
pushf
mov
ds
adc
add
sub
add
sahf
stos
iret
dec
and
adc
test
pop
push
lret
cmpsb
lahf
dec
add
pushf
dec
cmpb
mov
mov
sbb
add
mov
dec
inc
push
loopne
fxch
in
jl
vmwrite
sub
aaa
stc
out
inc
add
mov
push
icebp
or
dec
imulb
and
daa
adc
sbb
call
add
pop
mov
outsl
mov
scas
fidivrs
sbb
xor
pop
adc
add
sub
movb
cmp
jo
mov
sub
sbb
xchg
adc
add
rorl
inc
pusha
lock
inc
xor
jnp
xchg
mov
add
ja
out
adc
in
pop
pop
fbld
inc
sbb
and
jg
add
mov
inc
jecxz
sbb
dec
jae
add
fidivrl
pop
out
sub
movsl
js
jns
les
mov
cvttps2pi
das
sbb
add
sub
je
pop
cmp
cmp
aam
cwtl
repz
xchg
aas
mov
in
push
arpl
dec
rcrb
and
mov
mov
dec
mov
lods
scas
or
aas
mov
lock
add
and
dec
stos
pop
mov
cmc
push
sbb
xor
inc
or
das
and
sub
test
sub
xor
call
int
xchg
pop
stos
outsb
xlat
retw
mov
jmp
or
and
pop
sub
jp
pop
inc
push
movsl
and
or
ljmp
add
jne
or
add
movsb
dec
adc
loope
push
cmp
enter
sbbb
mov
cltd
add
jbe
dec
inc
fiadds
je
sub
sti
add
xor
and
inc
addr16
inc
into
nop
xorb
mov
add
pop
pop
data16
mull
inc
cld
add
pop
mov
pop
add
push
dec
jne
loopne
cld
jbe
and
sub
push
fldl
add
mov
js
add
in
notl
add
iret
xchg
shl
jge
add
scas
into
mov
sbb
cltd
push
sub
add
push
cmpsl
cmp
leave
adc
cmp
dec
mov
add
dec
inc
xor
xor
sub
cmp
int
fnstsw
jmp
cmpsl
shlb
xor
out
int
ret
and
enter
rolb
mov
scas
mov
adc
aam
shlb
testb
add
fildl
or
call
std
nop
imull
sbb
cld
loop
cmpsl
mov
gs
mov
cli
fmul
rclb
lea
mov
scas
sub
stos
push
jnp
outsl
pushf
stos
inc
in
jl
xor
mov
sbb
dec
pop
out
fiaddl
lods
lcall
and
data16
mov
mov
jmp
cmp
cmp
loope
jno
pop
jno
out
pushf
inc
mov
out
jmp
sbb
mov
push
cwtl
dec
dec
in
add
or
jge
arpl
xorb
sub
add
sub
jmp
jno
lods
inc
jo
xor
pushf
lahf
jg
xchg
add
stos
pop
test
hlt
rcr
inc
push
mov
mov
jge
sbb
aas
mov
les
cld
push
or
fpatan
sub
or
mov
pop
popf
and
repnz
jo
add
orb
cmp
xchg
das
mov
adc
aam
add
pop
add
repnz
inc
lret
cwtl
inc
loop
nop
add
or
dec
popa
cld
int
out
sbb
sti
dec
push
je
dec
outsb
sarl
loopne
add
shll
sbb
pop
cltd
movsb
add
pop
push
xor
mov
push
cmp
add
jecxz
and
dec
ret
mov
out
xchg
jmp
adc
jns
inc
stos
adc
jmp
cltd
cmp
xor
subl
or
or
add
mov
ja
dec
sbb
add
adc
cmpsb
and
xchg
and
incb
add
xchg
daa
mov
mov
stos
jae
add
push
insb
orb
add
mov
ret
and
je
xchg
fs
ja
mov
in
adc
pop
insb
xor
jae
add
xchg
out
add
jnp
fsubs
data16
lahf
mov
pushf
pop
aad
mov
and
jp
adc
sub
dec
mov
in
adc
add
sub
jno
sub
insb
faddl
add
data16
xchg
cli
add
fbstp
dec
mov
bsr
mov
cmp
dec
sarb
push
pusha
dec
insb
add
sbb
pop
pushf
add
push
cmp
mov
sbbl
adcb
add
imul
add
bound
jns
bnd
add
mul
fcoms
sbb
pop
add
inc
mov
lahf
push
or
sbb
and
notl
add
add
mov
fcomps
mov
jle
add
repnz
cmpb
cmpsl
inc
scas
loop
add
fdiv
daa
fs
adc
scas
adc
add
mov
xchg
scas
add
mov
ffreep
adc
fcompl
and
xchg
adc
cs
mov
cmp
repnz
inc
and
pop
pop
push
cwtl
in
add
mov
and
inc
pop
and
pop
ret
push
iret
js
add
fistpll
movsl
mov
jmp
cmpb
dec
cmp
orb
mov
push
mov
mov
mov
inc
mov
add
sub
lds
inc
iret
adc
imul
pusha
in
xchg
int3
ds
add
fistl
dec
pop
add
aad
xor
adc
lods
inc
xchg
pop
pop
mov
inc
pop
mov
jl
dec
sbb
add
cmp
imul
inc
xchg
jg
push
mov
xor
fisubrl
jl
mov
add
dec
scas
movsl
jp
or
sahf
xor
fisubs
add
ss
les
pop
leave
jl
orl
pop
enter
add
mov
mov
xor
aam
movsl
push
fisubrl
xchg
add
idivb
jb
mov
dec
jl
mov
daa
movb
loopne
dec
xchg
mov
ljmp
sarb
sub
ret
adc
sub
dec
outsl
adc
js
or
sarl
adcb
loope
nop
xchg
xor
add
rclb
and
fdivrl
cmp
pop
add
ja
xlat
inc
pop
fsts
mov
pusha
ret
cld
sub
mov
add
sahf
dec
pop
rol
sbb
shlb
adc
push
int3
je
cmp
insl
addb
inc
dec
fildll
sahf
loop
lods
mov
int3
test
xor
mov
andb
add
fidivrs
jecxz
jle
dec
or
add
leave
or
dec
mov
or
sarl
xchg
cmovg
inc
cmpsl
pusha
bound
or
mov
jo
or
addl
xchg
fwait
dec
xchg
nop
jle
or
add
repz
pop
inc
pop
xchg
in
rcl
mov
ds
jg
push
jb
repnz
std
fsubs
pop
inc
sub
xchg
add
mov
push
add
cwtl
mov
pop
jb
pusha
movsb
incl
or
incb
leave
xor
pop
addr16
or
ss
add
xor
push
sbb
jnp
test
cmp
ds
inc
lcall
outsb
movsb
jns
jmp
call
loope
repz
jae
xor
add
jl
xchg
or
inc
mov
and
cwtl
std
pushf
leave
add
popa
dec
mov
call
dec
rcrb
sub
cmp
add
rclb
add
out
add
js
pop
mulb
sbb
fidivrs
mov
ret
stos
pusha
enter
das
push
rcll
repnz
jno
and
adc
mov
das
jo
pop
mov
js
xor
adc
jno
sbbb
rolb
adc
pop
vmovaps
jo
andl
push
dec
adcb
and
dec
lds
dec
and
add
out
sub
out
xor
scas
and
mov
xchg
push
jge
pusha
enter
jns
cmp
addr16
insb
out
mov
iret
add
xchg
popa
repnz
inc
jg
push
push
sbb
sahf
inc
cltd
xor
mulps
lret
add
mov
mov
add
sbb
fimuls
loope
lea
pop
jnp
push
or
test
mov
filds
mov
cmpsb
nop
or
xor
mov
add
mov
out
add
xchg
cmpb
dec
pushf
add
test
cvttps2pi
adcl
push
or
add
sbb
sarb
fsub
lar
pop
out
pusha
ret
mov
inc
test
jnp
pop
nop
add
sub
enter
jns
push
adc
rcrb
pop
sbb
in
cmp
jnp
xor
add
jmp
adc
lock
jg
push
loop
mov
aam
cmpsb
sbb
rorb
or
pusha
jecxz
iret
xor
movb
mov
popa
push
pop
xchg
scas
cltd
fistps
xlat
add
sbb
jae
hlt
das
pmaxsw
inc
fsubrs
data16
jne
or
fdivrl
aam
or
mov
pop
adc
pop
pusha
pop
sti
mov
xor
xchg
sbb
dec
sbb
jbe
add
fcomps
jnp
lahf
mov
ds
jge
mov
test
push
xchg
sarl
xor
loop
dec
xor
add
outsb
mov
rclb
add
inc
add
jge
jne
mov
jmp
inc
mov
push
and
jg
sbb
icebp
jmp
add
mov
jbe
mov
add
incb
add
test
sbb
sbb
fs
mov
pusha
orl
jo
movl
loope
or
sub
clc
sub
dec
jae
inc
shrl
out
adc
add
add
cmp
gs
dec
inc
test
add
mov
sub
push
iret
inc
or
movsb
mov
enter
inc
cmp
pusha
mov
jnp
clc
sub
cwtl
sbb
stc
mov
adc
jne
gs
pop
inc
sbb
movsb
lods
inc
cmp
add
in
mov
cmp
les
cmp
push
andb
pop
mov
lds
or
cmp
adc
loop
xor
sub
int
and
or
sub
and
scas
add
nop
das
add
mov
sub
pushf
and
fmull
inc
mov
sbbb
xor
fcomps
js
add
jg
lods
jp
add
fldcw
out
mov
js
je
xchg
faddl
mov
jno
adcb
cmp
enter
icebp
mov
xchg
add
jmp
mov
jo
or
movsb
shll
aas
pop
insb
add
mov
subl
ror
cltd
xor
mov
and
push
iret
add
repz
jb
dec
add
aaa
xchg
or
pop
arpl
pop
sarl
fisttpll
mov
mov
xchg
add
imul
jge
pop
ret
pmullw
mov
add
jle
cwtl
add
daa
les
sub
jns
jmp
cwtl
add
fidivs
outsl
add
data16
sub
and
ja
push
mov
insl
jmp
cld
sbb
stc
addl
sti
cmp
fnstsw
lret
movsl
add
sahf
add
ds
jge
xor
add
add
or
add
fdivr
in
xor
add
push
jl
arpl
pop
add
aam
test
mov
push
pop
sub
push
sub
push
lar
outsw
and
push
inc
lret
int3
jecxz
add
mov
lds
or
xor
movsl
add
popf
daa
popl
sub
lcall
cmovbe
adcb
fwait
add
sub
push
jo
cmp
repnz
loope
je
orb
lock
jl
add
inc
or
fs
mov
es
fsubp
testl
lahf
out
pop
add
popf
adc
fs
pop
notb
test
push
int
jnp
les
lret
push
add
xor
pop
xor
test
fwait
lods
xchg
cmp
mov
add
push
loopne
jle
and
add
push
cli
jns
lret
mov
cltd
push
loopne
mov
xchg
pusha
sbb
mov
hlt
add
cmp
inc
ss
test
out
jbe
jp
cmp
scas
jmp
add
iret
jecxz
rorb
pusha
cmp
xchg
pop
cmc
sti
add
xchg
out
lcall
in
mov
pop
add
rcll
push
add
enter
xchg
call
inc
cmp
sbb
idivb
add
mov
lea
inc
add
xor
fbstp
rolb
movsb
xor
add
into
jge
push
mul
loope
xor
jb
test
cmp
sarb
iret
sahf
add
dec
jg
lcall
cmp
cmp
sbb
insl
adc
fsubrs
mull
push
cmpsl
imul
sbb
add
mov
ljmp
dec
lcall
lea
push
nop
pusha
add
pop
lahf
cmp
int3
icebp
stos
and
jo
sub
andb
lock
xlat
daa
out
rolb
ret
shlb
pop
cld
cmp
out
or
orl
insl
stos
pop
testl
pusha
and
fisttpll
pop
test
push
popa
fwait
mov
addb
add
mov
mov
add
and
fs
mov
and
daa
xchg
fsubr
add
les
sub
sbb
dec
je
pop
xor
cld
aam
scas
xor
xor
in
or
test
mov
dec
xor
popf
out
inc
xor
mov
setne
jecxz
mov
add
pusha
stc
adc
pusha
jbe
mov
int3
clc
jns
repnz
or
cwtl
test
shr
ret
dec
add
stos
push
xchg
mov
jmp
aaa
call
dec
pop
mov
add
rcll
aad
push
ret
push
arpl
and
scas
add
pop
jmp
jge
pop
mov
push
add
xchg
adcb
add
out
mov
imul
add
hlt
lahf
pop
pusha
jae
stc
test
xchg
xchg
insb
roll
nop
fidivrs
shl
jne
mov
jmp
pop
adc
push
add
jno
add
cld
dec
jle
and
decl
jne
cmpsb
mov
xor
sub
add
loop
mov
xchg
xchg
mov
sbb
adc
sti
jmp
orb
inc
xchg
test
adc
fcomps
xchg
dec
xor
mov
fs
inc
push
push
test
add
sub
add
adc
fldl
lods
mov
outsl
push
mov
sub
add
push
sti
add
test
cmp
cmpsl
shl
sbb
cmpsb
pop
pop
add
ja
push
inc
jno
rol
loopne
or
add
xchg
clc
loopne
push
add
fsubr
arpl
pop
cmp
and
fisubrl
inc
pop
mov
fsts
pusha
aam
xor
imul
jecxz
mov
in
aaa
mov
lock
xor
adc
ss
inc
sub
jl
sbb
mov
call
sub
ret
xchg
jmp
or
sbb
mov
sbb
mov
cwtl
sti
cmp
jo
mov
loope
add
cmpsb
push
push
add
mov
call
icebp
xor
xlat
ljmp
jno
inc
add
lcall
mov
xchg
push
adc
add
pusha
aam
loopne
shlb
int
dec
mov
pop
jecxz
adcb
faddp
rclb
xor
push
xor
idivl
adc
rorl
addb
stos
sbb
and
add
lock
in
sbb
leave
mov
mov
sub
mov
das
jae
pop
add
push
inc
bound
dec
mov
adc
and
lods
into
scas
aaa
das
ds
repnz
punpckhdq
fadd
and
sbb
sarl
dec
or
jae
add
lahf
inc
or
cmp
add
adc
js
add
jp
and
je
jne
int3
dec
jle
jbe
addb
mov
sub
xchg
add
loope
clc
mov
cwtl
andb
in
das
add
sti
rclw
and
add
repnz
lea
mov
add
pusha
cli
sub
mov
repz
addr16
xor
loope
add
mov
sub
add
and
loopne
or
and
sbb
push
adcb
jae
outsl
ja
add
xorl
push
add
jmp
mov
cltd
add
pushf
add
sbb
xchg
in
ficoml
addl
jnp
cwtl
sub
rep
mov
mov
or
in
lock
gs
test
in
add
pop
pop
sahf
cmpsl
fneni(8087
pop
imul
inc
mov
xor
mov
test
sbb
andb
call
mov
push
or
mov
popa
add
cmpsl
xor
pop
cld
cmp
or
orb
in
cmpl
dec
mov
dec
mov
push
pop
psubb
cmpsl
ss
add
pop
mov
or
pop
clc
dec
jno
push
push
icebp
add
das
mov
xor
cli
add
sahf
or
mov
jl
jge
xor
or
adc
add
idivb
es
add
out
xor
fcompl
cmp
enter
shll
mov
push
inc
pop
popf
add
lret
add
add
mov
aas
gs
inc
push
sub
lods
sbbb
mov
push
push
test
lock
add
dec
add
xor
push
mov
cmp
and
and
mov
pop
sub
popf
jno
mov
ds
out
pop
rclb
fs
ss
jae
push
sbb
insl
fldl
add
inc
repnz
mov
xchg
lock
jno
and
cmpsl
cmp
test
xchg
xchg
leave
adc
pusha
lock
pop
bound
enter
add
ljmp
jo
jp
call
jnp
mov
fs
mov
adc
and
xchg
roll
sub
es
cmp
cmp
push
xchg
mov
mov
mov
mov
and
cli
pop
mov
lcall
out
divb
jne
add
jns
mov
add
ja
xor
icebp
lods
sbb
add
mov
mov
mov
and
add
and
sub
lret
sti
xchg
cwtl
jp
jge
pop
test
in
les
nop
sbbl
pop
jmp
add
cs
imul
pop
lds
xlat
xchg
rolb
jo
call
jo
jmp
dec
add
sub
pop
dec
and
inc
es
add
adc
loop
lds
jbe
dec
cwtl
sub
jmp
inc
and
add
arpl
xchg
and
or
dec
jmp
lahf
or
and
rcll
in
pop
adc
sbb
lds
jnp
xchg
jo
add
or
add
verw
adc
pop
inc
inc
les
mov
dec
aaa
xchg
inc
ja
jmp
xchg
mov
fsqrt
pop
dec
adc
sub
mov
inc
xchg
add
ja
adc
mov
addr16
test
xchg
test
scas
cmpb
add
mov
inc
inc
cld
mov
lods
inc
sub
push
clc
test
jno
or
mov
loope
sets
repnz
and
clc
arpl
add
add
or
lahf
xchg
adc
xchg
rorb
pushf
js
pop
xor
dec
movsl
shl
imul
decl
add
push
pop
add
fldl
int3
loopne
inc
test
les
add
popf
lcall
adc
and
pop
xchg
sti
test
enter
mov
pop
leave
jo
add
add
and
sub
cltd
add
and
xor
mov
dec
mov
add
push
fs
adc
adc
lret
int3
or
push
xchg
lods
dec
push
xchg
dec
sub
xor
rolb
mov
rol
in
pushl
stc
rcrl
cmp
pop
dec
mov
and
xchg
add
cld
add
dec
jge
movsl
and
bswap
mov
data16
test
subl
and
mov
in
adc
ret
cmpsb
or
sbbb
test
pslld
lods
mov
dec
mov
test
ljmp
dec
jge
daa
call
jmpw
add
mov
sub
arpl
push
insl
jmp
add
cmp
jne
add
test
clc
cmpb
and
mov
jp
fisttpl
leave
sbbb
inc
test
repz
jb
add
addr16
xor
test
and
fidivrs
pop
pushf
and
repz
cwtl
sub
repz
add
lock
sub
or
inc
and
add
int3
movsl
insb
lcall
push
pop
adc
mov
insl
cmp
mov
cli
sub
cmp
cmp
xor
and
add
mov
insl
aam
jbe
loope
pop
outsb
xor
add
fucom
mov
sbb
out
adc
cwtl
dec
adc
enter
jb
imul
icebp
pusha
sbb
xchg
js
push
popf
lods
nop
lock
mov
jmp
fadd
mov
jae
xor
pop
add
subb
loopne
add
xchg
xchg
mov
mov
dec
aaa
lods
push
sub
add
cmp
and
xor
mov
sub
cld
fcoml
addr16
inc
in
dec
imul
in
sub
mov
shrb
pop
sbb
sub
mov
imul
push
jecxz
popf
pop
stos
and
jo
xor
and
out
popa
and
ficompl
xchg
movsb
sbb
sub
mov
cmp
add
test
pop
xor
xadd
mov
xchg
add
sbb
sbb
jecxz
hlt
mov
shl
cmp
push
out
dec
insb
and
pop
xorb
add
push
dec
in
rcr
aad
jne
push
fs
call
imul
sbb
leave
popa
adcb
pop
add
cli
sub
pop
aad
les
adc
adc
jns
add
push
jl
add
cmp
mov
cmp
inc
andb
mov
jge
add
out
decb
scas
jbe
pop
sti
xor
mov
inc
xchg
in
xchg
add
ss
sub
clc
js
repz
push
xchg
in
jb
cli
xchg
fadds
pop
ds
insb
add
mov
xor
and
addr16
jns
dec
es
shll
mov
add
mov
cmp
dec
bound
xor
jle
add
repnz
sarl
and
mov
push
add
idivb
aas
cmp
enter
xor
add
mov
fst
mov
adcb
jo
xlat
adc
mov
or
inc
sub
mov
jbe
leave
stos
test
cwtl
add
icebp
jge
das
hlt
add
dec
popa
iret
mov
mov
ljmp
pop
add
cmpsl
mov
dec
shll
js
inc
jle
aad
cmc
add
pop
addb
add
sbb
int3
adcl
leave
add
jl
cmp
mov
mov
popf
add
mov
or
int3
inc
hlt
or
jnp
sahf
enter
call
adc
add
out
mov
dec
push
movsb
add
push
ljmp
in
and
jg
push
fistpll
test
dec
in
movsb
in
flds
mov
push
xor
mov
pop
lret
ds
loopne
fwait
mov
js
push
test
jne
loopne
push
or
xchg
sarl
or
jnp
mov
adc
pop
arpl
xor
js
jae
mov
pushf
cltd
pop
dec
movsl
add
gs
push
mov
aad
add
xchg
inc
pop
add
int
xor
and
fstpl
pop
lock
mov
ljmp
in
and
add
repnz
xchg
mov
add
les
push
add
xchg
inc
out
add
add
cs
icebp
cmpsb
aas
test
and
dec
and
hlt
out
jns
add
loope
mov
fyl2xp1
ret
and
sub
out
mov
push
mov
lret
mov
pop
jp,pn
xchg
test
test
xor
cmp
in
and
movb
mov
xchg
lock
jmp
add
mov
aad
lea
dec
sbb
inc
jae
lods
fsubrp
mov
add
jecxz
imul
push
cmp
shr
dec
dec
sub
push
cmp
leave
or
jns
mov
mov
add
test
cmp
add
xchg
jo
lea
hlt
adc
adc
pusha
imull
pop
mov
inc
faddl
add
icebp
ds
mov
xchg
jnp
jo
push
lahf
cmp
iret
add
xchg
xor
mov
loope
hlt
pop
dec
or
andb
add
add
dec
lret
lahf
das
mov
bound
and
test
lcall
sbb
pusha
add
lldt
pop
xorl
cmc
pop
sbb
nop
aas
pop
ja
imul
pop
test
cmp
push
in
cmovb
lret
pop
inc
call
add
fcmovb
fs
cmp
ds
xor
pop
imul
mov
lcall
add
lods
insl
inc
pop
xor
jno
jbe
inc
pop
xchg
imul
ss
icebp
jne
sub
aaa
testl
mov
mov
dec
add
xchg
popa
inc
lea
add
push
push
scas
es
test
add
loopne
and
and
add
ljmp
mov
mov
cmp
xor
mov
in
pop
fs
push
add
jge
leave
shll
xor
add
jo
rorb
ret
inc
inc
xor
mov
imul
xor
fsubp
popf
or
shl
xor
mov
out
movsl
xorb
cmp
mov
dec
popa
lcall
outsb
popf
xchg
and
arpl
jno
mov
stos
inc
add
and
sbb
push
adc
mov
arpl
push
cmp
dec
add
mov
jnp
pop
push
dec
jno
lods
outsb
lods
scas
xor
xor
shrb
fcmovbe
dec
add
fldl
in
add
add
adc
mov
fbld
test
inc
add
lods
lret
add
movsb
sbb
and
rolb
push
add
jecxz
mov
adc
mov
dec
sbb
xchg
cmp
adc
sbb
add
es
mov
mov
in
aad
jno,pn
add
and
mov
add
pushf
xchg
pusha
sub
int
adc
and
add
mov
movsb
adcb
cld
into
add
lock
mov
stos
ja
out
sub
sub
add
out
push
sub
icebp
call
sbb
call
xchg
lods
cmp
mov
cwtl
fnstsw
adc
punpckhbw
fcoms
xor
inc
adc
mov
lock
call
sub
xchg
cld
add
cmp
mov
cmp
xchg
mov
and
cmp
add
pusha
add
ret
mov
and
xchg
cld
arpl
aas
or
cltd
dec
sub
adc
iret
daa
btc
lods
mov
mov
xor
mov
out
adc
movsl
nop
pop
inc
sub
jg
jb
add
ljmp
imul
inc
outsb
fs
fwait
cmp
aaa
add
jnp
xor
sar
xlat
stos
push
inc
fcoms
pop
movl
push
fwait
adc
and
or
cld
sub
in
xor
lock
fs
push
addr16
jge
adc
push
mov
loopne
pop
add
dec
sbb
rorb
push
sahf
lods
ljmp
sbb
pop
loope
fadd
sbb
sub
and
adc
add
xchg
jns
add
mov
str
dec
pushf
lret
in
pusha
cmp
test
mov
mov
cmpsb
into
mov
pushf
jecxz
jb
rorl
mov
stos
mov
mov
ljmp
enter
add
adc
pushf
pop
imul
mov
jp
inc
sbb
xlat
mov
mov
ja
sbb
add
mov
push
pop
test
sbbl
aad
and
inc
rcrb
pop
inc
lret
test
addr16
sub
jmp
adc
out
add
sti
add
or
adc
and
add
mov
iret
xor
push
int3
pop
pop
nop
xorb
mov
adc
pop
xor
add
loope
and
repnz
add
cmp
jg
cltd
adc
pop
push
inc
out
out
daa
roll
pop
and
dec
cmpsb
subb
add
add
adc
add
insb
cmpsb
out
add
add
push
arpl
jo
mov
xor
lods
fwait
push
add
sbb
jb
mov
add
rclb
test
jmp
add
cmpl
adc
add
add
xlat
add
push
cmp
dec
enter
cli
jp
fldt
in
add
into
rcl
mov
adc
xor
test
and
movsb
hlt
dec
pop
pop
inc
pop
ja
xchg
nop
mov
add
jle
aas
fwait
xor
add
fdivrs
add
icebp
cmp
fwait
enter
jno
out
pop
sub
inc
sub
inc
int
loop
push
push
adc
adc
adc
int3
mov
aam
and
and
and
push
add
and
test
and
mov
call
js
cmp
sbb
jns
popf
adc
mov
pop
pop
dec
mov
rclb
mov
pop
iret
push
ficoms
dec
enter
mov
subb
add
pushf
add
sti
inc
pop
call
cmp
aad
insb
xchg
xor
and
sub
xchg
mov
mulb
cmp
out
add
lea
sbb
arpl
cmpsb
imul
jg
and
fidivs
cs
xchg
cmp
add
pop
pop
fistl
fimuls
rolb
loopne
int
push
push
enter
or
pop
jp
xor
push
xchg
add
mov
sub
add
aas
sar
jl
mulb
test
adc
shrl
xchg
cltd
imul
pop
hlt
lret
add
pop
cmpsl
push
popa
jbe
adc
out
into
roll
insb
insl
adc
int
add
lods
or
pop
xor
fstpl
scas
cmpsb
sbb
ja
add
mov
sbb
jo
push
push
adc
cmc
or
xchg
out
pop
rcr
lea
adc
fs
mov
mov
xorb
xchg
add
js
subl
rcrl
dec
es
repnz
add
push
add
cmp
xchg
incb
pusha
int3
or
add
mov
cmc
push
stc
xor
shrb
fisttpll
fldt
xor
jl
mov
sub
fcomps
inc
pusha
sub
es
repz
push
or
roll
push
inc
pusha
and
pop
add
mov
adc
aam
ja
nop
add
sbb
mov
outsb
fildl
push
push
add
in
sbb
lods
es
or
xor
outsb
cmpsb
clc
sub
dec
clc
fprem1
add
jle
push
and
push
push
mov
into
movsl
jle
sbb
lret
push
cmp
xor
add
mov
popa
xlat
inc
xchg
adc
cmpsb
pop
inc
add
lods
rep
lret
sub
js
and
jge
add
dec
inc
push
stc
str
into
lods
add
xchg
scas
inc
cmp
lcall
mov
dec
xor
jp
lods
mov
pop
sbbb
in
mov
enter
hlt
lock
mov
inc
mov
mov
mov
sub
push
in
add
pop
rorl
cs
in
roll
cmp
add
lret
dec
cmpsl
fs
xor
nop
inc
sbb
fsubl
mov
rorl
adc
seto
pop
outsl
and
insl
popa
stos
push
add
sbb
out
mov
fs
cmp
or
les
lret
imul
loopne
mov
xor
add
cli
mov
mov
outsb
add
iret
pop
lret
push
add
loope
add
aad
mov
add
or
nop
bound
and
push
jo
sbbb
sbb
pop
arpl
xor
sub
nop
imul
pusha
mov
sbb
xor
sbb
subl
js
sbb
das
jge
ret
jnp
or
lcall
gs
or
fmulp
add
data16
xor
sub
jg
cmpsl
mov
add
cmp
and
add
push
repz
ja
stos
add
inc
int3
lock
jo
add
pop
push
hlt
outsb
pop
ja
mov
jo
mov
sub
mov
mov
add
sahf
mov
push
in
xchg
push
lea
cltd
add
je
xchg
stos
push
movsb
add
insb
cmp
xlat
jecxz
add
push
out
xor
cmp
ja
and
jmp
mov
sub
dec
sbb
cli
popf
rol
js
ss
das
jnp
push
add
jns
add
lret
sub
push
pop
add
sahf
inc
push
xor
ret
mov
add
lock
push
popf
icebp
add
test
out
xchg
inc
inc
jb
arpl
dec
std
xchg
xor
push
in
mov
outsl
xchg
pcmpgtd
hlt
nop
loopne
pop
mov
out
push
jle
in
cmp
lret
aas
fwait
inc
cmpl
add
mov
mov
in
sbbb
cmp
add
mov
jle
dec
imul
add
std
addr16
test
nop
dec
add
dec
dec
or
mov
add
scas
xchg
add
inc
mov
inc
imul
ljmp
jo
out
add
adc
add
inc
cmpsb
cmp
fiadds
sbbb
stos
add
push
fnstcw
jmp
lds
xorb
dec
and
das
cmp
mov
jb
and
aas
push
popa
push
aas
adc
lods
loop
mov
fmul
xor
xchg
sbb
mov
dec
add
cmp
jno
jne
jb
idivb
cmp
call
push
cmp
lahf
adc
out
push
str
and
mov
mov
adc
sub
in
enter
out
jecxz
add
mov
adc
aad
add
ret
test
mov
add
cmp
ja
les
sbb
pop
add
orl
ret
add
jne
fdivp
pop
adc
call
inc
mov
outsl
cmp
and
mov
icebp
cmpsl
pop
cmc
lret
jmp
or
aad
or
add
jl
sti
adc
or
mov
add
bound
add
push
fidivs
or
leave
pop
add
xlat
mov
add
jmp
mov
cwtl
das
push
jle
dec
add
inc
jne
jg
aad
mov
push
adc
enter
sub
daa
xor
push
int3
arpl
mov
loopne
adc
ficomps
pusha
pop
repnz
cmp
adc
mov
scas
decl
es
or
inc
dec
shll
inc
or
movsb
aam
add
pusha
mov
add
inc
sbb
divl
mov
das
pavgb
cld
shlb
cmp
jns
add
adc
leave
pop
testb
fs
int3
adc
push
inc
adc
lret
add
clc
adc
mov
add
shll
insl
add
hlt
xchg
fsubl
and
test
test
push
packuswb
lret
push
push
jne
roll
in
sub
negl
mov
and
hlt
jl
lods
cmc
add
add
leave
movsl
inc
mov
cmp
inc
subb
cmc
push
andb
mov
jnp
sbb
or
popa
rdtsc
push
cmp
icebp
sbb
repz
outsl
inc
ds
mov
dec
sub
jbe
popa
rcl
cli
in
xor
enter
add
inc
loop
ss
fdivr
xor
pop
pop
sbb
fdivrp
sarl
mov
popa
cmc
fwait
push
es
mov
xlat
imul
mov
add
jl
cmp
mov
sbb
push
xchg
push
mov
add
cltd
outsl
ds
filds
movsb
sub
push
jb
add
jae
shrb
repz
in
add
popa
inc
test
inc
mov
pop
mov
stc
clc
xchg
imul
aaa
in
lahf
hlt
fs
fnsave
push
daa
xorl
jo
dec
ret
jmp
mov
lds
mov
xchg
add
cli
ret
out
sub
ljmp
pusha
ja
sbb
mov
mov
ret
jge
add
sbb
rclb
test
add
imul
in
nop
inc
scas
cli
std
push
cmp
ljmp
lock
inc
out
mov
movsl
dec
jno
or
mov
add
test
cmpb
mov
lods
xor
imul
add
inc
jp
mov
cld
push
add
jnp
pop
dec
lods
sbb
lcall
out
pop
add
aam
out
hlt
adc
fdivs
out
cli
movsb
cld
push
pushf
mov
cs
add
push
hlt
pop
adc
aas
jno
add
xchg
lods
pop
out
outsl
add
out
jbe
adc
outsb
push
add
or
add
mov
push
sbb
daa
mov
out
cmp
add
xchg
or
inc
add
sub
add
mov
inc
push
lret
and
sub
in
or
aad
lds
jo
mov
test
xchg
jge
mov
aaa
les
sub
jmp
rcl
add
or
sbb
pop
or
jp
psubsb
mov
sbbb
ret
loope
in
xor
push
shl
ljmp
jl
inc
rorb
imul
add
lods
aaa
jo
adc
push
inc
xchg
icebp
or
push
and
or
jmp
xchg
in
jle
cmp
shlb
movsb
insl
sub
mov
stos
add
icebp
push
sbb
pusha
lods
iret
outsl
lock
stos
loop
lods
das
xchg
nop
add
add
sbb
ret
mov
enter
dec
pop
fadds
shrb
iret
mov
loope
cmp
pop
jns
add
les
scas
ss
in
pusha
call
ret
xchg
add
push
mov
and
in
inc
jmp
add
jnp
addl
in
dec
inc
pop
cli
leave
sbb
push
lock
jo
add
lock
lods
mov
lret
int
movb
add
and
data16
loopne
arpl
pop
mov
and
mov
xor
jecxz
dec
pop
insl
enter
add
out
dec
or
insb
jl
add
ljmp
push
bound
adc
addb
sub
mov
notl
fwait
scas
mov
rcrl
filds
mov
les
cmp
push
enter
shlb
andb
push
pop
mov
add
xchg
lock
jo
adc
sub
mov
sbb
inc
movb
rcrb
xchg
dec
int
mov
push
mov
cmp
push
fcmovnb
js
and
ljmp
faddl
mov
adcb
cli
mov
push
cmp
jecxz
out
adc
inc
std
or
xor
je
xor
adc
mov
add
mov
adc
add
sub
jp
fmul
add
arpl
xchg
push
or
bound
push
adcl
push
dec
subb
inc
and
pop
add
cmc
xchg
das
jo
add
push
push
fnstcw
cmp
orb
push
inc
testb
add
lahf
adc
add
sub
lret
inc
cmpsb
in
aad
add
cs
jp
shl
in
inc
icebp
aam
and
aas
adc
pop
jle
add
dec
out
lods
add
adc
mov
call
mov
push
add
push
divb
mov
js
sbb
mov
rcrb
dec
sub
cmp
mov
add
int3
rorl
pop
mov
dec
add
xlat
test
test
add
mov
inc
cmpsl
testb
arpl
adc
dec
pushf
cmp
insl
jnp
adc
icebp
add
sub
pop
xchg
add
mov
call
and
sarb
add
fistpll
pusha
movsl
mov
lahf
xchg
inc
mov
nop
push
add
das
mov
pop
sbb
push
adc
jge
lea
lock
add
xor
stc
fs
mov
daa
mov
fcmovb
fdivl
lret
cmpsb
xchg
lahf
sti
sahf
ret
or
push
xor
jp
je
adc
mov
stc
xchg
mov
loopne
pop
inc
shrl
aaa
add
or
pop
add
mov
fs
fsubp
clc
add
sbb
sub
mov
push
aaa
pusha
cld
incb
xor
dec
push
dec
scas
xor
das
test
add
xchg
jne
xor
lcall
nop
push
test
imul
sub
inc
js
dec
test
sbb
loop
outsb
cmp
mov
lock
dec
out
or
sbb
or
add
std
insl
sbb
mov
addr16
rep
rolb
dec
cmp
or
scas
adc
sub
lds
jno
lcall
add
clc
push
fs
or
dec
pop
xor
jl
bound
adc
test
and
movsb
mov
push
push
ja
hlt
popa
outsb
jne
pop
and
add
testb
sub
test
popa
add
sbb
push
fdivs
jns
cwtl
in
aas
push
add
subl
xchg
test
sub
in
add
addb
jge
test
pop
lods
cltd
je
jmp
scas
add
in
fisubrs
push
out
inc
sub
hlt
xchg
dec
add
pop
cltd
hlt
movsb
sub
jp
cmp
imul
shr
or
clflush
mov
xor
dec
add
mov
sub
lods
pop
add
add
jge
dec
sub
cmp
push
out
mov
adc
pop
pop
mov
sbb
inc
dec
je
xor
loope
cmp
inc
mov
aam
clc
add
sbb
mov
outsb
push
push
fsubp
cmp
aam
out
add
icebp
test
repz
mov
push
int3
add
pop
nop
mov
aam
ljmp
inc
mov
rolb
aaa
fsubs
mov
mov
fldcw
pop
das
aam
inc
xchg
pop
dec
xchg
rolb
mov
jns
push
mov
dec
je
add
insl
pop
jmp
add
push
adc
xor
dec
dec
jo
add
aam
test
leave
sbb
cld
hlt
adc
arpl
push
aas
shll
jno
shl
gs
sbb
ds
lods
pop
stc
dec
mov
jmp
push
inc
fs
add
sbb
testl
imul
imul
cmp
in
mov
mov
add
aad
pop
or
gs
ret
je
hlt
rolb
out
in
pop
lock
push
sbb
xchg
mov
mov
fbstp
incl
scas
cltd
dec
xchg
jo
pop
xlat
dec
in
add
pop
sbb
add
ret
jecxz
cmp
stos
pushf
or
sbb
pop
add
mov
out
icebp
mov
mov
jne
sbb
aam
push
xchg
xchg
fstpl
pop
jns
stos
cmc
fcmovbe
push
dec
jmp
mulb
daa
mov
sub
cmp
xchg
mov
mov
add
nop
das
push
add
adc
rcrb
mov
arpl
clc
js
add
xor
je
jmp
adc
add
mov
mov
jp
and
mov
dec
adc
imul
fistps
in
or
lock
cmp
push
sbb
mov
add
lods
and
or
push
stos
add
out
mov
mov
std
sub
incb
cmp
test
pop
xchg
dec
mov
data16
pop
insb
add
sbb
mov
cmp
in
in
add
mov
inc
xor
lods
push
lock
ja
push
nop
lods
cli
pop
mov
nop
fwait
cwtl
fs
movsb
sti
shlb
and
lcall
adc
dec
int
push
sbb
sbb
fcompl
adc
jle
ret
xor
adc
pusha
scas
mov
xchg
mov
fstl
lahf
xchg
add
mov
dec
pop
or
xor
lods
push
pop
adc
pop
jmp
dec
push
lock
cmpsl
mov
mov
mov
add
cmp
lods
test
sub
xorb
fistps
sbb
add
rcl
bound
xchg
and
clc
xlat
sbb
jl
add
and
imul
loopne
out
add
push
adc
inc
shl
loopne
loopne
insb
jbe
add
mov
inc
in
push
mov
daa
add
dec
add
sbb
adc
cmp
cmpsb
add
inc
iret
cli
add
inc
cmp
mov
adc
leave
hlt
rolb
mov
jl
push
mov
sti
inc
hlt
cmp
stos
arpl
andl
repz
fcompl
filds
lea
dec
or
inc
jg
aas
push
cmp
mov
movsb
fwait
sub
mov
or
popa
test
pop
pop
or
add
adcb
arpl
divl
popa
inc
adc
test
add
or
bound
mov
jns
cmp
push
mov
lods
or
pop
loopne
mov
add
cmpb
lcall
jecxz
and
cs
lret
add
mov
push
and
aad
add
cmpxchg
inc
neg
add
cmpsb
sub
in
mov
fiaddl
lods
fs
insb
in
or
add
inc
test
cltd
sbb
les
add
loope
and
cmp
inc
and
add
aam
or
shlb
xor
cs
add
sbb
dec
cmp
jmp
imul
mov
scas
or
das
pop
fildl
adc
jbe
push
aam
push
mov
xor
mov
add
xor
mov
add
mov
jg
pushf
or
pop
mov
add
rol
xchg
add
jo
in
xchg
lock
add
xchg
fld
cmp
in
sbbb
or
adc
outsb
lock
arpl
enter
andb
dec
sahf
dec
rcrb
pop
jp
add
mov
add
pop
jmp
pushf
add
push
fidivrl
scas
data16
fsubr
mov
xchg
mov
xchg
add
in
or
rep
mov
pop
mov
loop
add
mov
cmp
cmp
iret
scas
popa
shl
pop
push
incb
cli
cs
loope
enter
mov
andb
add
fcomip
jae
mov
aad
mov
mov
jno
dec
push
scas
ret
xchg
repz
mov
jp
cwtl
addl
adc
dec
mov
movsl
add
addr16
or
inc
int
inc
mov
in
cmp
outsb
pop
sbb
fwait
ss
cmp
add
shrb
dec
cs
pusha
pop
push
scas
andb
add
inc
lds
cld
in
dec
pop
mov
add
xchg
ret
push
movsb
iret
nopl
lret
adc
jl
cmp
xor
mov
jne
mull
inc
jp
mov
xchg
stos
xor
andl
inc
add
fwait
cld
subb
add
fadds
ja
fisttps
loop
mov
fldcw
push
inc
add
mov
gs
add
xchg
je
pop
not
ret
shrb
test
sub
clc
adc
or
and
xchg
mov
cmpsb
mov
std
xchg
pavgb
xor
add
mov
mov
inc
rorb
fiadds
sbb
lods
inc
pushf
sbb
dec
jae
and
add
add
mov
push
xor
hlt
and
jmp
jl
jbe
xor
xchg
sti
cs
leave
pop
daa
xor
repz
cmp
add
push
test
mov
fisttps
adc
shlb
cmp
call
cmpl
hlt
add
xlat
jae
push
xor
sti
adc
cmp
das
xchg
cmc
daa
and
mov
orb
shll
jo
jno
loope
sbb
inc
iret
cmpl
sbb
add
cmp
adc
cmp
pop
out
clc
adcl
lods
sbb
dec
adc
aam
jbe
pop
adc
fwait
add
mov
cmp
sbb
hlt
or
enter
adc
inc
xor
add
push
mov
mov
cmovp
icebp
in
cwtl
rolb
stc
pop
addr16
sbb
mov
addb
fimuls
not
lock
shlb
js
add
les
jnp
or
add
adc
add
adc
mov
mov
lods
push
scas
jecxz
mov
ret
sbb
xor
movsb
push
test
cmp
mov
bswap
mov
cmc
xor
jg
add
push
dec
inc
adc
add
out
jmp
mov
ja
cwtl
mov
int3
aam
out
add
add
aaa
popf
sahf
cltd
fsubrs
add
imul
stos
hlt
fs
int
add
fldt
aad
das
adc
or
shr
test
inc
mov
ds
mov
xor
add
call
mov
aaa
push
xor
or
mov
add
out
lock
std
add
test
sub
jg
jno
add
andl
lahf
push
ds
in
into
or
or
loop
cmp
inc
inc
cwtl
hlt
xor
sbb
xchg
sar
pushf
cmc
aaa
decb
cs
lock
fnstsw
shl
sahf
loopne
add
inc
xor
pop
dec
in
and
inc
lret
inc
xor
sbb
and
repz
jmp
or
rclb
jecxz
add
add
adc
outsb
dec
inc
cld
mov
clc
cmpl
mov
pop
or
lock
sbb
inc
add
xchg
push
mov
insl
data16
jne
cli
movsl
aas
dec
fwait
pop
in
cltd
push
add
inc
stc
sub
pop
or
add
comiss
in
xchg
loopne
dec
cmp
pop
test
andb
mov
xor
mov
loopne
xadd
jno
add
xor
jmp
mov
mov
lret
sub
test
pop
movb
xor
data16
cmp
sbb
adc
jbe
push
std
add
or
out
cli
mov
add
mov
xchg
mov
inc
pop
add
adc
rol
push
pop
cmpsl
xor
jae
sub
imul
or
cmp
clc
mov
leave
pop
flds
adc
add
jae
aaa
insl
fisttps
js
shlb
or
mov
cs
int
adc
add
fildl
add
lcall
ljmp
add
mov
push
insl
add
sti
jge
inc
xchg
adc
add
jns
ss
test
adc
dec
pusha
inc
js
add
xor
mov
add
pushl
and
add
dec
sbb
int3
enter
jle
cmpsb
fwait
mov
xor
sar
push
nop
int3
loopne
add
lcall
add
mov
mov
sub
adc
and
jecxz
mov
aaa
movl
arpl
das
fdivr
sbb
push
add
daa
and
add
mov
lea
and
or
es
mov
pusha
cmp
add
ret
ret
pop
mov
xor
push
bound
fs
arpl
or
test
fldenv
cvtps2pi
dec
incb
xor
scas
add
mov
add
pop
adc
stc
je
scas
add
dec
pop
repnz
mov
in
pop
mov
sub
xorl
lahf
repz
cmp
dec
fwait
fs
rolb
push
mov
pushf
add
mov
dec
or
mov
repnz
std
push
pop
je
daa
lods
sarb
push
add
jmp
pushf
popw
inc
mov
add
pop
aas
clc
sub
add
outsl
inc
lcall
add
lods
mov
push
repnz
push
daa
pop
jo
fstps
pusha
fisttpl
and
out
pop
pop
test
repnz
xor
adc
jne
lock
iret
add
scas
ret
adc
jbe
push
mov
in
add
sbb
pop
sub
cmpl
cmpsb
test
sbb
out
lds
sbb
mov
loopne
push
fld
int
adc
inc
push
std
mov
push
js
or
lods
cmpsl
cwtl
push
xor
insb
mov
aaa
cmpsb
adc
add
push
mov
sbb
pop
shlb
ficoml
je
mov
sub
in
xor
xchg
mov
sbb
jecxz
inc
cmc
or
add
or
in
add
or
push
jo
mov
add
xchg
clc
js
pop
add
outsb
incl
in
jmp
sbb
sbb
jae
inc
push
inc
push
pop
xchg
orl
pop
fistl
inc
ret
jo
sti
outsl
push
add
sub
sbb
insb
clc
or
jmp
mov
inc
scas
jae
cmp
mov
or
rcll
in
cmpl
add
dec
ja
cmp
subl
movsl
add
popw
add
pop
ficompl
pop
xor
mov
pop
and
js
es
enter
in
xchg
incb
and
sbb
sti
mov
push
push
and
enter
dec
pop
loopne
push
imul
push
pop
pop
je
add
dec
sbbl
fsubs
fcoms
insb
mov
mov
sub
sub
mov
dec
fwait
xchg
add
mov
add
adc
sarb
cwtl
add
dec
jns
xchg
sti
out
aam
mov
or
daa
inc
adc
loopne
and
je
add
pushf
imulb
jle
int3
or
arpl
outsl
pop
cmp
in
adc
and
popa
out
cwtl
jns
cmp
jo
push
lock
jmp
enter
int
dec
dec
mov
push
es
scas
testb
rcrb
add
mov
jmp
jl
inc
pop
and
test
repnz
andl
loopne
xor
dec
mov
daa
and
aad
fstpt
ljmp
js
repz
fmuls
std
add
xchg
rolb
test
or
stc
adc
fsubrs
push
jne
lahf
aaa
xchg
mov
dec
pusha
fwait
dec
mov
add
mov
add
cwtl
xchg
sub
outsb
pop
add
gs
dec
hlt
add
jno
aaa
in
scas
sbb
int3
push
mov
add
xchg
fs
loope
or
add
mov
in
addb
nop
add
adc
mov
inc
call
popa
insl
stos
in
sar
iret
cmp
add
popf
push
push
loope
xor
adc
mov
adc
movsb
es
mov
mov
cmp
cmc
pop
inc
lods
jbe,pt
inc
and
sub
in
add
mov
faddp
sti
pusha
faddl
cmpsb
add
add
mov
add
ret
popf
outsl
jg
add
mov
popa
cs
insb
icebp
pop
jp
inc
nop
adc
jmp
add
ljmp
in
mov
jg
add
xchg
pusha
add
loop
cld
test
add
mov
or
stos
add
push
xlat
stos
inc
sbb
jns
orb
push
mov
pop
jo
sbb
push
dec
bound
rcll
pusha
insl
pop
aam
add
add
cmp
xor
lret
xor
cltd
cmp
pop
andb
lods
mov
push
or
cmp
mov
mov
pushf
in
test
adc
inc
xchg
imul
fcompl
inc
cmpl
pop
rcrb
mov
inc
xorb
cli
stos
je
add
sarl
int3
lahf
push
jmp
and
add
add
xchg
cmpsb
sti
wrmsr
push
lcall
jo
loope
inc
or
jbe
rorb
aad
jp
xor
add
hlt
or
add
sub
cmp
pusha
add
aas
les
jne
movsb
ja
mov
add
ss
add
jne
inc
mov
dec
or
popf
je
stc
push
xorb
fildl
mov
add
inc
add
push
lea
pusha
push
mov
rcll
ret
adc
inc
add
or
into
or
cmp
xor
test
stc
sbb
jb
cmpsb
mov
aad
test
jmp
imul
stos
sub
push
insb
mov
adc
mov
jg
out
enter
jbe
add
lods
in
xchg
popf
and
cmc
sub
add
cltd
dec
movsb
sbbb
cmp
mov
cmp
out
ficoms
xor
testl
or
jbe
addr16
jl
subb
rclb
sbb
insb
pop
push
xlat
test
cmp
pop
add
rclb
inc
add
dec
jns
arpl
push
sarb
jecxz
sbb
faddp
int3
ja
rolb
fs
popl
and
sub
push
mov
rclb
sahf
repz
movsb
cmp
xchg
or
loop
paddusb
ds
pop
add
push
sub
pop
xchg
ljmp
mov
sti
adc
jg
add
cmc
sarb
arpl
popa
notl
loopne
fmull
add
enter
and
pop
or
and
cltd
test
sbb
addb
and
mov
mov
cmp
mov
add
repz
sbb
stos
icebp
jecxz
mov
loopne
push
lock
ret
jge
mov
xor
push
out
mov
repz
xchg
lea
movsb
dec
mov
add
leave
cmpsl
andl
dec
add
xchg
loop
pop
orb
dec
ret
insb
mov
add
mov
inc
push
scas
jl
fistpll
popa
in
push
jbe
adc
stc
push
stos
push
mov
jmp
pop
ljmp
rorb
cltd
add
adc
jmp
push
addb
xchg
mov
sub
push
add
and
mov
fs
out
lock
jo
add
inc
imul
imul
or
adc
test
stos
adc
mov
sbbb
jge
dec
add
adc
popl
outsb
and
leave
inc
xchg
inc
lock
aam
push
xor
add
mov
nop
mov
xchg
aam
loop
cmpb
iret
cmp
jmp
int3
pop
sbb
cmpl
and
sub
sub
adc
cmp
mov
xchg
jb
add
xchg
push
lret
xchg
shlb
or
rorl
ret
jae
insb
popa
add
xchg
or
add
xchg
rcrl
dec
test
movsl
mov
mov
loopne
nop
push
jae
xor
mov
adc
cwtl
jb
or
stos
arpl
pop
xchg
xchg
into
add
rol
xor
daa
cmp
movsl
outsb
inc
addl
or
mov
lods
jne
je
xor
int
in
push
in
pop
ret
ja
test
or
jne
cmc
orl
mov
xchg
idivb
inc
inc
mov
fnsave
shl
ficompl
xor
or
mov
or
or
inc
loopne
xchg
lock
cmpsb
add
xor
int
test
rol
fcomi
pop
aad
add
push
add
iret
subb
gs
dec
pop
inc
pop
imul
dec
pop
pop
push
adcl
dec
je
imul
ja
pop
mov
and
int3
shrl
sbb
inc
add
in
push
xlat
sbb
cmp
inc
inc
push
out
add
test
test
jge
add
addl
outsl
ret
jae
adc
ljmp
push
je
loopne
test
sarl
clc
cld
jg
sbb
sub
repnz
lret
jl
sbb
out
or
or
add
std
xor
sbb
xchg
cmp
clc
add
into
rcl
dec
sbb
jmp
xchg
add
mov
mov
cmp
jp
push
pop
lds
orl
add
in
in
stc
inc
jnp
cwtl
fiaddl
shll
je
inc
add
mov
test
push
mov
filds
add
cmpb
xor
pop
sbb
jmp
add
jp
nop
add
xor
fildll
cmp
sahf
jnp
aam
add
adc
mov
jg
lea
mov
movsl
addb
enter
inc
cmp
add
push
adc
stc
push
mov
jne
loop
pop
xor
cli
mov
adcl
or
adc
sbb
cmp
addr16
test
dec
aam
pop
inc
cli
xchg
mov
andb
xlat
push
push
addr16
mov
mov
push
jp
push
sub
mov
mov
push
adc
lret
or
repnz
cmp
pop
cmpsb
testb
mov
mov
push
pop
popa
add
shrl
lret
andl
jge
lods
movsb
inc
add
enter
jecxz
pushf
adc
push
add
in
cmp
push
lock
sub
mov
lcall
outsb
add
push
mov
cmp
call
pop
fnsave
mov
xchg
push
jp
dec
pop
test
add
aad
xor
rclb
or
repnz
push
and
push
popa
ds
mov
or
insb
push
dec
cli
inc
sub
stos
mov
fwait
std
call
aas
mov
and
add
roll
jbe
dec
mov
push
in
cmpl
adc
cmpsl
frstor
jg
mov
mul
repz
fdivrs
stc
fstpt
push
test
add
loop
xchg
add
jo
or
nop
adc
hlt
movsl
in
shl
sbb
mov
mov
or
std
xor
mov
movsl
jge
fcomip
cmp
ja
or
mov
mov
test
mov
imull
and
sbb
add
or
push
sub
stos
pop
mov
dec
mov
stos
dec
xchg
gs
cli
loope
mov
pop
and
add
scas
or
mov
add
dec
aas
movsb
repz
hlt
add
mov
data16
cmp
mov
push
add
xchg
sahf
cmp
mov
sub
pop
add
pop
mov
xor
icebp
lahf
bound
popa
cmp
call
mov
and
add
sti
mov
adc
or
inc
push
insl
jp
fiaddl
push
int3
push
jne
push
dec
icebp
dec
cmpxchg
push
pusha
out
or
push
mov
fmul
nop
in
movsb
dec
shll
mov
and
pop
loop
jno
pusha
stos
jbe
cmp
arpl
out
clc
push
mov
add
mov
mov
mov
sbb
ror
lock
repnz
add
test
mov
mov
sbb
mov
pop
push
fisubl
add
or
xchg
xchg
adc
mov
in
lcall
add
data16
add
mov
xor
mov
push
add
das
stos
aad
cmp
scas
add
bswap
fimull
inc
xchg
add
je
push
std
test
cltd
mov
xor
jmp
add
pop
inc
mov
push
add
jb
jmp
das
test
lea
mov
pushf
mov
cmp
add
mov
pop
mov
sahf
add
fnstsw
add
cmpsb
pop
add
and
mov
lret
xchg
pusha
icebp
dec
fcompl
rolb
cmp
pop
pusha
dec
push
nop
add
jo
sbb
xchg
dec
out
in
sbb
or
lret
mov
dec
mov
int
mov
sub
inc
push
int3
push
fsubl
cmc
cmp
add
lea
iret
add
js
hlt
or
and
add
in
or
cli
lcall
or
sbb
inc
add
mov
add
inc
in
jo
add
mov
jno
movsb
add
pushf
add
cmp
mov
inc
sbbl
add
outsl
xor
xor
push
sbb
pop
jne
lahf
jmp
mov
and
mov
leave
adc
cmp
cltd
or
lret
xchg
and
xlat
int3
add
lods
test
mov
jp
pop
ret
stos
adc
sbb
dec
add
scas
imul
sub
inc
push
es
or
js
add
jecxz
pop
mov
int3
cmp
cmp
sbb
cs
push
cmp
enter
and
pop
cmp
jl
jp
add
mov
mov
add
fiadds
mov
insl
arpl
jle
call
xchg
call
divb
stos
jns
push
xchg
clc
sbb
jno
mov
xchg
mov
add
add
sbb
cmp
and
andb
jae
adc
mov
rolb
or
and
push
sub
cmc
add
hlt
shr
jmp
mov
dec
lods
and
add
addl
cmp
mov
mov
movsb
rcrl
int3
xor
mov
and
outsb
test
cmpsl
icebp
sahf
cwtl
or
insl
pusha
cmpsb
pop
pop
iret
sti
or
and
jecxz
insb
add
ja
sbb
scas
add
daa
mov
repnz
mov
cwtl
clc
jne
dec
sub
mov
stc
movsl
out
cwtl
inc
mov
aaa
bswap
pop
in
pop
and
cmp
mov
adc
push
xchg
dec
xchg
out
faddl
lock
push
flds
pop
add
and
cld
push
add
out
inc
cmp
dec
or
lahf
dec
sbb
inc
push
mov
mov
inc
out
pusha
add
pop
adc
cli
push
test
push
in
mov
nop
out
aad
add
int3
xor
sbb
js
dec
in
add
pop
jl
add
dec
rclb
ret
adc
sub
cltd
loop
cli
scas
add
or
xor
cld
jno
repnz
push
repz
sub
dec
test
cs
cltd
addb
xor
push
and
leave
lea
cld
pop
fimuls
cmp
nop
roll
xlat
push
cli
add
and
ret
sbb
fiaddl
leave
test
mov
call
aaa
addl
push
cmpsb
jns
out
lea
mov
cmp
inc
add
xchg
es
xor
out
ss
pop
cmc
data16
icebp
movsb
jnp
aaa
mov
fxtract
xchg
push
jns
punpckldq
insl
test
popf
add
xorb
pop
lret
add
xor
enter
test
int3
add
push
int
sub
hlt
adc
stos
adc
and
dec
push
sbb
xor
sub
and
frstor
stc
test
cmp
gs
push
adc
dec
in
or
sub
inc
nop
mov
mov
rcl
mov
xor
nop
xchg
or
jbe
xor
xchg
xchg
pop
testl
xchg
orb
add
sbb
sbb
add
add
sti
lea
jnp
add
lds
xchg
mov
push
loop
add
notb
jle
sub
and
sbb
int3
sbb
add
fadds
imul
inc
lret
add
pop
add
and
xchg
rorb
jge
jp
inc
lcall
in
jg
stos
sahf
mov
popa
adc
push
mov
add
adc
mov
push
dec
mov
and
enter
sub
filds
inc
pop
and
es
xor
rcrb
movsl
cld
xor
or
cltd
jnp
inc
aaa
add
in
inc
lahf
pushf
xchg
mov
jge
xchg
cli
flds
in
loope
pop
mov
jo
in
pushf
sbb
rorb
roll
push
sub
loope
push
xor
mov
ljmp
xor
clc
out
je
iret
popa
xor
jo
add
push
or
negb
stos
xor
rcr
ljmp
xchg
fwait
sub
je
pushf
add
pop
or
add
mov
out
push
repz
iret
mov
cmpsl
cmp
adc
xchg
ja
leave
rcrb
mov
mov
scas
pushf
aam
inc
sarb
jns
dec
or
sub
pop
add
out
fistps
mov
xorl
and
or
ret
ds
mov
push
repz
pop
adc
addl
mov
and
iret
pop
out
jno
js
ds
cmpsb
adc
add
lock
roll
or
out
fidivrs
testl
cmc
fs
or
hlt
lds
stos
js
add
mov
out
cmp
mov
cli
mov
rclb
add
shr
and
add
jo
fimull
sbb
xchg
xor
fstpl
push
mov
pop
repnz
add
add
ja
jo
add
inc
sbb
add
xor
add
inc
sbb
push
cmp
or
ret
add
or
mov
jnp
inc
lds
xor
mov
xchg
lret
repnz
sub
fistpll
add
roll
lcall
jne
pop
push
in
gs
inc
inc
and
pop
imul
ss
xor
clc
and
mov
aaa
jecxz
xchg
xchg
dec
add
sbb
fwait
loopne
jbe
add
mov
aam
sbb
mov
add
mov
mov
out
add
lret
fcomp
adc
add
mov
mov
pop
add
mulb
sub
sti
add
mov
mov
in
aad
orb
pop
jnp
pop
mov
pusha
dec
push
add
add
divb
mov
das
xchg
pop
into
mov
jne
call
lcall
xchg
stc
mov
mov
jp
jne
cmc
mov
in
sub
push
mov
rcl
gs
cwtl
shll
in
stos
aas
jg
mov
mov
mov
test
xlat
nop
cmpsb
add
jb
cld
popf
adc
inc
inc
lret
popa
stc
iret
mov
dec
mov
movsb
add
mov
fwait
cmp
xor
cmp
lods
sbb
jmp
fwait
cwtl
scas
mov
pop
inc
dec
lock
dec
sbb
jecxz
jb
or
sub
test
xchg
cmpsl
add
sub
ss
jne
and
or
jl
mov
movsb
insb
daa
outsb
cmp
inc
mov
and
jae
aas
sub
aaa
dec
add
mov
addps
adc
pop
add
jle
or
cmp
pop
jl
andb
mov
in
add
cs
xchg
dec
repnz
xor
adc
cmp
pop
jg
add
cmpsl
ss
add
loopne
loope
shrb
add
adc
lods
inc
xor
in
add
popf
xorb
jns
add
add
dec
or
ja
or
mov
add
lods
fyl2x
imul
mov
aam
add
in
and
es
bound
and
add
bound
sbb
out
nop
sbb
je
add
push
out
pushf
in
add
lcall
push
es
xor
loopne
js
arpl
rorl
push
mov
and
popf
call
outsl
adc
xchg
mov
shlb
hlt
dec
maskmovq
imull
dec
or
xorb
daa
push
test
jne
loop
dec
leave
mov
aaa
xchg
add
dec
je
mov
and
sahf
jae
adc
nop
sub
leave
out
lds
dec
xchg
or
stos
xchg
and
sbb
push
or
jno,pt
mov
add
pushf
add
mov
testl
adc
loope
sub
mov
movsl
add
lea
sbb
jp
pop
xor
aaa
cmpsl
push
xchg
add
mov
sbb
add
jmp
stos
add
sbb
inc
mov
mov
lret
add
les
in
jne
add
stos
test
add
mov
jle
ja
loop
add
push
push
cmp
ret
gs
in
add
inc
fstpt
insb
xor
jb
cs
xor
fwait
or
aam
adc
loope
not
pop
insb
cmpsb
leave
jge
add
mov
mov
adc
add
inc
hlt
fwait
out
jge
aam
call
xor
add
or
mov
add
xchg
adc
add
outsl
into
inc
add
adc
jne
fs
rclb
push
jnp
out
nop
dec
aad
sbb
or
pop
fs
or
add
mov
and
imul
fiaddl
jl
pop
out
gs
icebp
test
out
shl
add
hlt
pop
in
cmp
add
xchg
sub
xor
orb
loope
clc
and
push
pop
add
dec
push
lods
and
fsubs
adcb
rcll
add
stos
dec
jb
add
loop
ret
dec
ja
test
lret
cltd
icebp
inc
xorb
mov
int
pop
mov
adc
addr16
shl
std
bound
xchg
xor
gs
les
push
sbb
xor
and
jle
in
fwait
iret
inc
sub
addr16
mov
jp
ja
pop
add
xchg
push
popa
insb
ss
jl
movsb
adc
jp
xor
rolb
add
mov
jb
push
cmpsb
add
pop
jl
cmp
subl
leave
in
scas
div
add
std
fwait
out
xlat
popa
push
xchg
mov
xchg
lds
pop
pushl
in
stos
xor
dec
ret
add
fisubs
fisttps
fucomi
pop
pop
stc
or
push
pop
add
aas
fcom
cmc
pavgb
xchg
mov
jbe
jae
repz
mov
test
loopne
test
dec
or
bound
aas
mov
popa
aaa
sbb
pop
push
shrl
in
jns
pop
xor
push
adc
inc
out
loop
je
into
add
jmp
rorl
stos
and
jl
xor
roll
fisttpll
mov
add
int
dec
loopne
cmp
add
in
shlb
cmp
mov
mov
xor
sub
in
lcall
stos
add
shrl
bnd
add
dec
mov
pop
movsb
jge
or
mov
movb
jo
rcll
mov
adc
fsubrs
add
adc
mov
mov
add
sti
cmp
jno
mov
pop
imul
test
pop
gs
sbb
mov
sbb
inc
xor
mov
xor
push
sarb
fidivrs
adc
insl
xor
push
cmp
xor
jg
outsl
add
push
mov
std
int
es
stc
or
cltd
jmp
stos
mov
xchg
mov
pop
rolb
cmp
push
cmpsb
rolb
cmp
outsl
xchg
pop
sub
dec
pop
out
pop
and
aam
sbb
pop
pushf
mov
push
das
dec
inc
pusha
xchg
mov
sub
movsl
cmpsb
pop
test
scas
repz
outsw
cmp
add
adc
adcl
pushf
push
lds
in
or
pop
mov
push
or
jb
arpl
jbe
sub
cs
push
mov
inc
imul
clc
or
loopne
scas
mov
fldl
test
cmp
cli
andb
xchg
mov
int
nop
push
adc
gs
sarb
loop
jo
add
mov
sahf
pop
mov
mov
fsubl
pmulhuw
inc
mov
xor
inc
cmp
std
sbb
xor
mov
mov
sbb
sub
pop
loop
cmpsb
mov
and
add
or
cmp
in
adc
add
cmp
mov
pushf
jp
xchg
or
andl
dec
adc
pop
adc
or
lods
shll
lahf
mov
inc
add
loopne
pop
add
add
mov
or
cmp
inc
and
add
into
jl
add
add
add
jp
pop
mov
add
aas
insl
cmpsb
xchg
lret
xlat
cmp
cmp
aad
push
add
xchg
add
jmp
jae
maskmovq
testl
push
xlat
cmp
fldcw
and
add
xchg
push
cmp
mov
xor
xorb
add
leave
lcall
lret
mov
mov
add
icebp
xchg
scas
aad
adc
pop
cmp
jmp
pop
and
addb
cltd
or
inc
subb
jo
and
mov
xor
add
clc
mov
js
pop
add
outsb
and
or
mov
loope
mov
or
nop
mov
aas
sti
add
mov
stc
test
xchg
inc
add
xchg
orb
loop
cmp
lret
mov
fiadds
aas
inc
mov
sub
mov
aam
or
sbb
pop
add
jl
aam
xchg
push
dec
movsb
popf
mov
add
push
adc
adcb
add
add
cmp
leave
addb
sarb
pmulhw
and
rcrl
jg
add
daa
or
adc
push
sarb
adc
jg
jmp
sbb
mov
aam
cld
sub
cld
aaa
cmpsb
adc
jns
mov
sti
add
sbb
cmp
cmp
movl
in
pop
or
cld
cmpsl
or
add
stc
and
sbb
xlat
add
cltd
addr16
cmp
je
test
test
dec
add
jns
scas
ds
jge
mov
out
pop
add
aas
scas
inc
add
daa
xchg
mov
inc
adc
dec
ficoms
and
pusha
fldt
sbb
test
out
mov
mov
in
xor
xor
adc
add
outsl
jae
leave
pop
cmc
cld
inc
jp
push
push
imul
inc
xorl
cld
cmp
mov
mov
cmpl
or
orb
clc
mov
out
stos
push
dec
add
pop
dec
clc
pop
cmpb
adc
incb
cmp
cmc
pusha
inc
sub
pop
testl
movb
scas
inc
call
push
js
push
pushf
and
xor
rol
jb
sbb
loop
add
daa
inc
mov
mov
push
jne
mov
sub
sub
mov
xor
in
out
fmul
cmp
aaa
pushf
add
xor
or
addr16
js
shl
cmp
sarl
add
gs
data16
add
mov
mov
mov
push
loop
jle
cmp
add
inc
jl
mov
fdivp
orb
mov
out
shll
cmp
jne
test
adc
leave
sub
and
cmp
enter
sub
shlb
cs
jo
add
dec
nop
xor
add
rcll
mov
sub
addb
fadds
out
adc
lret
call
enter
imul
sbb
mov
cli
lods
cwtl
add
lret
jno
add
and
dec
pop
popa
insb
add
and
gs
jmp
pop
xchg
ja
pop
add
pop
lret
xchg
pop
dec
cmp
add
test
repnz
add
loope
sbb
and
add
inc
xor
inc
test
lcall
data16
inc
dec
icebp
sub
pop
pop
outsb
aaa
xor
fisttpl
add
fwait
orb
sub
fisttpll
xor
dec
int
pop
orl
fsubrs
sbb
mov
loopne
stos
push
jae
or
mov
scas
mov
mov
lock
cwtl
loop
lods
out
movsl
clc
push
jl
lock
fistpll
enter
or
or
xchg
sub
lock
inc
enter
in
push
add
inc
ret
adc
out
cmpb
lock
add
dec
sub
repz
clc
or
push
mov
sub
pop
das
xchg
nop
cmp
jl
push
faddl
cli
jbe
add
lcall
outsl
mov
test
into
pop
in
add
orl
pop
pop
add
push
mov
negb
roll
clc
cmp
push
dec
inc
jne
addb
pop
sbb
subl
into
xor
test
add
add
dec
xchg
add
push
mov
push
cmp
fcomi
add
les
js
loopne
adc
andl
sub
jl
in
cltd
je
call
rcll
fs
rclb
mov
xchg
mov
fadds
push
cmp
pushf
add
jg
es
ret
mov
add
and
add
out
mov
int
ja
fs
inc
mov
sub
adc
pop
push
add
cmp
pop
and
and
add
testb
inc
push
pop
mov
mov
or
sub
cmpsb
adc
andb
sbb
addb
fcoml
sbb
jmp
in
dec
cmp
mov
aam
or
sub
addb
jo
mov
aad
mov
decb
pop
and
rcll
icebp
ficoml
shlb
add
sbb
nop
mov
adc
add
inc
aam
nop
loop
add
and
jae
add
jbe
or
adc
je
mov
fiaddl
mov
jns
mov
stc
jl
inc
push
nop
stc
sbb
pop
inc
ficoms
add
pop
rol
cmp
push
mov
push
aam
and
inc
mov
and
mov
mov
cmp
clc
cmc
fldz
add
pushf
int
cmp
jno
mov
push
add
dec
enter
add
xchg
pop
mov
xchg
or
repnz
stc
es
fmull
inc
fwait
loop
and
xchg
sbb
xlat
dec
jecxz
rolb
mov
adc
jl
sbbb
mov
xchg
pop
xlat
push
jno
jp
lods
iret
xor
sbb
shll
mov
jne
or
push
fsubrl
test
sbb
add
xor
and
lds
popf
dec
mov
in
mov
shrb
ds
cmp
leave
cltd
xchg
in
mov
mov
imul
push
repz
popf
pop
dec
xchg
adcb
cmp
sbb
fisubrs
pop
xchg
pop
mov
loopne
hlt
pushf
outsl
cwtl
dec
cli
fucom
test
inc
leave
cmp
jbe
dec
inc
add
imul
fcom
mov
mov
pop
cmp
clc
add
cltd
loope
stos
xchg
xor
pop
shrb
ja
subl
cmp
and
orb
mov
mov
test
rolb
xchg
mov
ljmp
mov
sti
or
nop
push
mov
hlt
xorb
dec
xor
pop
and
scas
pshufb
inc
notb
sbb
nop
and
lods
jb
or
mov
jmp
in
xchg
adcb
inc
push
sub
or
sarb
push
or
js
scas
xor
and
sbb
and
hlt
inc
clc
ja
mov
mov
into
aad
xchg
iret
mov
sarb
sbbb
sbb
popaw
xorb
popf
dec
mov
add
jmp
and
add
cli
and
mov
stos
fwait
dec
aas
push
std
sbb
rolb
cmp
les
cwtl
pusha
add
mov
lcall
repnz
fldl
push
aaa
push
ss
addr16
hlt
dec
cmp
inc
mov
aam
movsb
add
cmpsl
scas
xchg
filds
xor
cmp
dec
add
flds
inc
fbld
cmp
mov
das
jmp
adc
sti
mov
mov
mov
lods
sub
and
popa
lock
push
xchg
pop
and
add
pop
xor
add
dec
push
pusha
sbb
inc
cmp
mov
insb
inc
fadd
dec
iret
add
fstl
mov
cli
aaa
cmp
cmp
scas
scas
add
adc
and
loope
sbb
inc
push
pop
rolb
xlat
stos
outsb
push
add
stos
pop
ljmp
loop
mov
inc
add
scas
outsb
lret
sub
cmp
xchg
fucomi
add
add
sti
xor
push
imul
xchg
imul
add
mov
and
add
add
sbb
and
pop
stc
stos
add
out
cltd
rcll
lea
loope
pop
or
sbb
leave
cmp
cmc
addl
mov
shrb
movl
add
jmp
and
and
idivb
adc
out
xor
cltd
push
mov
push
mov
icebp
add
js
mov
nop
jnp
jle
push
xchg
push
add
scas
adc
cmpsb
stc
add
cld
jmp
add
addr16
xchg
xorb
mov
xor
out
and
add
sub
mov
es
rcll
or
repnz
jle
stc
add
ret
and
push
xchg
rolb
xchg
mov
sbb
shr
xor
out
nop
xchg
das
mov
adcb
jmp
jae
mov
pop
add
adc
aaa
and
movsb
fadds
xchg
ljmp
dec
addl
cmp
faddp
or
daa
into
movsb
jl
shlb
pop
call
stc
testl
enter
call
inc
add
push
xlat
adc
fcompl
loop
into
or
daa
xchg
and
outsl
negb
out
rorb
add
xchg
into
or
jl
mov
bound
cmc
mov
pop
inc
test
or
cmp
mov
adc
jno
sbb
sbb
adc
hlt
push
cli
dec
movsb
rolb
add
flds
or
sahf
fcmovb
test
jge
sub
cmp
mov
sarl
ja
testb
add
adc
cwtl
rcll
fs
adc
pushf
inc
xor
ret
int
hlt
sbb
int3
xchg
fisubl
add
xchg
enter
xchg
inc
dec
mov
mov
add
mov
iret
push
or
pop
mov
push
mov
sub
lock
pop
loop
xor
adc
pop
leave
mov
loopne
subb
sub
fmuls
aas
adc
add
push
mov
push
insl
adc
hlt
add
outsb
mov
push
add
cmpsb
sbb
add
fldenv
sub
daa
xor
cmp
pop
dec
imul
loopne
punpckldq
jo
adc
mov
cltd
add
addr16
pop
jo,pn
fcomps
les
std
sbb
cmp
testb
pop
fadd
aas
sub
add
pop
rcl
test
add
jb
push
pop
xchg
lods
scas
add
ljmp
cmpsl
inc
std
iret
cmp
xchg
mov
nop
pop
out
add
push
ljmp
pushf
fildl
xor
cld
jmp
or
mov
mov
hlt
add
push
jmp
ljmp
dec
jbe
mov
and
shlb
andl
adc
arpl
ljmp
jo
sbb
fadds
pusha
jmp
push
sub
icebp
pop
adc
shll
push
rolb
std
ljmp
adc
add
xor
fists
insl
test
fdivrl
fs
scas
fmuls
push
mov
sarb
cwtl
dec
test
xchg
movsl
add
in
rorb
add
daa
mov
cmp
xchg
sub
xchg
addr16
insb
adc
adc
sbb
lcall
fidivrs
inc
enter
and
mov
mov
add
xor
push
cmp
dec
pop
push
adc
cltd
mov
add
dec
push
sbb
dec
orb
scas
test
sahf
adc
pop
mov
jmp
in
add
inc
loop
mov
xor
orb
outsb
inc
mov
and
add
xor
mov
jge
add
repnz
and
pushf
repz
jne
arpl
mov
cs
cmp
mov
addr16
repnz
fisubl
popa
shlb
sub
je
sbb
adc
mov
mov
push
jp
sbb
lret
jno
sbb
loopne
or
lea
mov
push
mov
xchg
pop
add
es
in
bound
add
mov
pop
xchg
dec
mov
mov
pop
adc
enter
fdivs
ftst
add
xchg
outsl
sar
lds
and
or
inc
jae
push
aad
jnp
jle
test
inc
out
mov
push
add
inc
pusha
sub
mov
in
pop
fldl
ljmp
fcompl
cmp
pop
andb
iret
pushf
loop
or
or
sbb
lock
and
adc
std
pusha
addb
inc
inc
mov
sahf
fs
lock
mov
pop
dec
ljmp
stos
xor
lahf
add
push
add
dec
in
or
fsubs
add
push
add
xlat
cwtl
mov
mov
test
mov
adc
inc
xchg
fidivrs
insl
mov
add
mov
frstor
add
ret
dec
add
rcrb
das
sub
lahf
stos
inc
cmc
mov
mov
jmp
add
cmpb
lahf
pusha
aaa
adc
xor
jo
je
mov
test
adc
mov
add
sarl
popa
lods
rol
pushf
cmp
mov
mov
dec
push
fstp
imul
sub
mov
fsubs
jp
jle
jo
push
jle
add
cmp
test
call
shll
push
jge
mov
fcomps
push
int
xor
and
mov
jecxz
stos
out
add
adc
test
mov
mov
add
ret
sub
cld
insl
push
cmp
push
mov
leave
add
jmp
sbb
push
test
clc
push
pop
pop
scas
sarl
push
mov
test
mov
xor
jnp
xorl
push
cmp
jle
cs
std
mov
inc
addr16
sbb
adc
loope
insb
popf
in
loop
add
jns
fwait
aam
dec
pop
push
imul
push
test
das
stos
aas
lock
add
pop
fcoms
add
cli
cltd
xchg
iret
out
es
pop
add
cmp
add
sub
mov
jp
mov
xor
add
stos
nop
jmp
andb
loop
add
mull
jmp
add
pop
aad
iret
jle
add
outsb
test
push
add
or
cld
xor
mov
addl
hlt
outsl
push
cli
ficoms
shlb
mov
fs
push
sub
add
add
cmp
xchg
ss
adc
xor
stos
lahf
inc
adc
mov
or
out
push
outsb
mov
negl
scas
adc
pop
pavgb
push
jmp
cmp
fisttpll
add
xor
inc
repz
repnz
sbb
addl
rclb
adc
imul
xchg
movlps
inc
fbstp
insb
add
or
dec
int
iret
outsl
das
repz
cltd
sub
enter
add
mov
jp
add
inc
outsl
add
adc
xor
iret
pop
and
pop
stos
les
shr
add
sbb
das
sbb
addr16
add
cmpsl
insl
xor
jle
pop
lods
and
clc
add
fldz
mov
ret
inc
out
dec
sbb
cmp
add
ja
stc
orb
sbb
adc
out
inc
cmc
inc
pop
loopne
add
and
cmp
addb
cwtl
aad
das
imul
mov
pop
hlt
add
jae
test
add
mov
cmpsl
pop
xchg
dec
int3
add
rolb
popf
aam
add
and
adc
lock
sbb
add
jae
add
movsl
outsb
imul
add
dec
mov
or
push
shr
rcrl
and
dec
mov
add
xchg
pushf
add
ret
fcmovnu
faddl
daa
xchg
lret
sbb
add
das
jns
ret
or
inc
adcl
or
cmpb
outsl
cmpsl
jno
callw
test
push
add
or
stos
test
rorb
test
jecxz
sbb
add
and
shlb
dec
test
iret
xchg
xor
add
cmp
ds
jmp
cmp
and
flds
mov
int
mov
ret
addr16
roll
jge
inc
daa
outsl
xor
xchg
push
sbb
and
jnp
xor
rcl
fistl
add
sbb
and
lahf
adc
cltd
popf
add
outsb
js
test
sub
mov
jle
mov
mov
add
rcr
das
add
nop
hlt
or
mov
add
pop
pop
fdivr
movl
les
add
cld
enter
xchg
add
mov
xchg
mov
frstor
pop
cmpsb
cwtl
popf
test
add
mov
test
cli
rolb
lds
ret
daa
pop
xchg
int
shrb
aas
add
cs
hlt
add
push
cwtl
mov
sbb
aam
xchg
test
add
testb
xchg
icebp
mov
mov
and
rcrl
jnp
fimull
mov
inc
pop
add
inc
divb
mov
shrl
add
push
pop
add
add
fists
xchg
dec
add
xlat
lods
or
push
xchg
xchg
je
adc
push
or
mov
inc
adc
pop
add
test
push
add
je
or
sbb
mov
stos
and
add
jnp
ds
addb
into
int3
push
jmp
add
pop
xlat
pusha
shr
sbb
adc
enter
int3
add
scas
into
bound
nop
and
mov
je
adc
pop
mov
cmp
adc
inc
add
je
and
repnz
adc
push
add
icebp
fidivrl
dec
lds
pop
mov
repnz
mov
pushf
add
dec
lock
mov
sbb
repnz
xor
out
and
es
pop
andb
add
mov
nop
mov
jo
inc
aaa
lret
mov
test
sarl
cwtl
push
mov
inc
add
enter
or
sahf
repz
into
add
inc
popl
cmp
dec
cmp
pushf
dec
jp
mov
ficoms
xchg
add
inc
cwtl
xor
enter
mov
js
mov
clc
pop
push
lock
push
shrl
xchg
push
or
inc
xor
adc
stos
enter
lret
inc
push
divb
in
jae
mov
add
mov
pop
xor
loope
add
insb
cmpsl
repz
or
inc
fildl
dec
pusha
mov
push
mov
test
lods
int
add
daa
das
push
ljmp
or
pop
test
add
in
aam
cwtl
es
adc
sub
leave
insb
test
js
jl
cmp
fwait
push
sbb
add
xor
xor
adc
pop
pop
add
push
fstps
add
sbb
mov
sub
mov
push
jge
sub
xchg
mov
adc
addr16
in
add
nop
xor
mov
cmp
pop
push
dec
cwtl
xchg
sahf
pop
add
shll
aam
or
sub
pop
pushf
jg
lock
pop
cmp
jo
inc
sti
push
aaa
push
rorb
mov
hlt
adcb
cmp
sbb
loopw
cmpsb
mov
push
sbb
add
push
xchg
xchg
jge
lret
cs
mov
pop
adc
cmpsb
scas
fstpt
add
out
negl
ror
dec
fsubs
mov
fldcw
es
popa
and
adcb
mov
fisubs
cmp
pop
dec
ss
add
or
in
or
aas
dec
cmp
out
stos
sbb
mov
push
aas
push
outsb
pusha
lock
add
cmpsb
mov
dec
pop
sbb
fldl
fidivl
jle
xor
dec
add
pop
mov
in
loopne
enter
add
or
ja
add
in
loopne
xchg
push
ficoms
out
inc
cs
inc
add
fcompl
mov
icebp
jle
add
mov
mov
sbb
hlt
rcll
pop
dec
mov
insl
cmp
cmp
sbbb
adc
add
push
xchg
aaa
fs
rcrl
int3
cmc
mov
adc
add
lret
in
mov
shlb
rclb
jno
int3
push
psubd
add
mov
jns
or
add
clc
cmpsb
out
mov
lods
adc
jns
xor
dec
inc
int3
call
repz
add
sahf
add
or
push
daa
loopne
lea
lret
xchg
lock
rcrl
mull
add
inc
rorb
mov
push
out
fidivrs
sar
adc
fadds
pop
inc
cmp
and
push
aas
push
and
lds
stos
sub
fnstenv
imul
ret
rcrl
pop
outsb
mov
hlt
gs
mov
jmp
add
stc
xchg
xor
imul
loopne
notl
add
mov
js
or
add
stos
push
and
nop
pusha
gs
add
cmp
decb
adc
call
dec
and
ss
jne
or
jp
pusha
stos
push
dec
cmp
adc
mov
adc
add
mov
inc
xchg
adc
fsub
fbld
add
out
loop
and
cmp
push
add
push
push
lds
adc
xlat
jns
dec
sbb
add
and
and
cmp
mov
dec
inc
into
pop
dec
in
add
nop
fidivs
jno
rcrb
ds
jl
lcall
adc
or
cmp
cld
andb
fwait
inc
and
test
jge
stos
pop
add
subb
mov
pop
adcb
mov
and
jge
inc
dec
fiaddl
adc
add
fcompl
jecxz
cld
pop
xchg
jno
add
cltd
sub
add
cmp
pushfw
andb
divb
add
jns
xchg
inc
mov
out
ja
into
pusha
or
and
adc
push
dec
or
lahf
out
add
clc
pop
cltd
mov
rolb
mov
adc
mov
sbb
inc
decb
pusha
adc
test
jg
enter
inc
and
js
repnz
xchg
aad
in
lret
push
in
add
sub
cvtps2pi
mov
push
add
jl
pop
sbb
rcl
sti
mov
adc
shl
shrl
ret
mov
push
add
mov
into
outsb
or
aad
testl
jl
jne
add
aas
insl
or
push
call
xchg
pop
mulb
jo
pop
mov
orl
daa
push
test
aad
stc
add
div
jg
bound
andl
mov
jne
add
stos
or
les
popa
cmp
addr16
shr
dec
ret
mov
push
inc
test
insl
cltd
cmp
int3
je
roll
inc
add
mov
dec
cmp
add
add
inc
mov
xchg
in
ficompl
sbb
sub
sbb
push
pop
mov
ss
sbb
pusha
arpl
icebp
int3
pushf
loopne
add
pop
int
inc
nop
jg
add
jl
insb
mov
dec
getsec
lret
sub
push
imul
dec
jg
fimull
test
shlb
xor
adc
mov
pop
out
or
sub
mov
dec
out
hlt
sub
add
iret
mov
into
push
cmp
jns
lea
les
roll
add
icebp
out
aam
aad
add
xchg
push
loopne
and
dec
add
add
repnz
sbbb
xchg
jae
xchg
xchg
mov
add
xor
cs
pop
lock
emms
sbb
int3
shrl
cwtl
inc
sbbb
inc
rcrl
movsl
sbb
sbb
sahf
mov
rolb
pop
arpl
and
mov
loope
aas
mov
scas
test
add
sub
enter
xchg
mov
sbb
arpl
fildll
sbb
aad
inc
ljmp
cltd
inc
sbb
cs
add
or
jo
mov
mov
add
mov
les
push
adc
repnz
fcoml
mov
into
add
pop
in
fisttps
xchg
add
shll
add
xchg
leave
jle
pop
hlt
arpl
mov
cltd
cmp
and
add
add
fimull
enter
mov
adc
rorl
fdivr
rorl
repz
add
jnp
adc
mov
scas
xor
ds
pusha
xchg
sbb
push
dec
pusha
mov
pop
add
mov
xor
and
add
adc
add
popf
push
lods
fldcw
ljmp
push
arpl
nop
xchg
fidivrl
adc
pop
add
ret
add
jmp
mov
mov
add
cmp
loopne
int3
pop
ds
int
std
rol
enter
add
notb
sub
dec
scas
insb
or
fs
add
jmp
pop
jecxz
imul
add
movsl
sub
jl
or
mov
in
sub
test
int
sbb
out
adc
pop
or
or
inc
sbb
xchg
jb
nop
jmp
fadds
and
insb
mov
pop
lock
sahf
pop
rolb
addb
xorl
cwtl
and
sub
add
cmp
shll
or
popl
sub
shl
xor
pop
jo
jns
lahf
pop
icebp
add
lret
add
sbb
and
fcmovnbe
stc
scas
pusha
sbb
sbb
add
inc
xchg
mov
aad
pop
sbb
mov
mov
add
add
movl
jp
ltr
xor
cmp
dec
add
fdivl
jl
mov
push
dec
pop
xor
rolb
and
mov
mov
add
out
and
add
jg
cmpsl
dec
or
jecxz
xchg
sahf
addb
cmp
add
add
repnz
xchg
add
pop
cmp
pushf
enter
add
call
add
decl
add
int
xor
es
minps
out
jae
stos
xor
inc
iret
es
int
add
addb
fildll
mov
cmp
icebp
roll
xor
and
cmc
jmp
cld
das
fnstenv
dec
clc
test
xchg
mov
lea
add
or
xchg
addl
adc
int3
mov
insl
repz
pusha
movsb
loopne
sub
lods
add
mov
xchg
add
and
or
nop
stos
ret
shlb
add
xchg
jp
push
cmp
push
fwait
add
push
ja
or
lock
popa
notl
dec
icebp
nop
add
mov
mov
add
mov
push
push
test
test
add
adc
ret
xchg
add
mov
orb
popa
imul
es
xor
call
or
jb
mov
inc
sbb
push
sub
xchg
stc
enter
add
aas
adc
andl
jmp
xor
xor
lret
push
add
pop
dec
inc
cmp
je
fildll
push
jge
or
out
cwtl
or
nop
and
inc
imul
push
and
int3
inc
add
add
fisubs
add
cwtl
dec
add
jb
pop
mov
enter
ja
add
adc
movb
in
add
movsl
mov
add
add
leave
cmp
jo
cltd
add
or
pusha
add
testl
movsl
rolb
mov
pusha
test
nop
popf
mov
inc
fidivrl
leave
or
cltd
add
pop
fwait
mov
add
push
popa
mov
mov
pusha
add
in
inc
insl
and
push
jmp
pop
mov
fadds
add
int
arpl
popf
outsl
mov
fldl
fs
push
push
dec
movb
lcall
dec
into
ja
xor
adc
add
movsl
or
xor
fwait
orb
or
and
das
pop
xchg
add
or
pop
mov
jne
jmp
push
push
sub
addb
ficoms
xchg
sahf
dec
rclb
and
inc
jl
lahf
add
in
jge
sbb
cld
dec
dec
adc
xchg
add
icebp
cltd
out
dec
cmp
add
inc
jge
pop
mov
mov
pushf
add
lret
test
xor
xor
scas
ret
sbb
sub
xor
fisttps
es
push
pop
mul
cmpsb
add
dec
test
add
xchg
shrb
iret
sbb
btc
es
or
imul
test
adc
fidivrs
loopne
pop
add
mov
pop
or
adc
loopne
idivb
repnz
pushf
gs
jne
jae
inc
andl
arpl
mov
sub
std
pop
pop
or
testl
dec
adc
add
das
test
xor
xchg
popf
or
sbb
xor
inc
sub
scas
fimuls
loop
xchg
orb
add
add
pushf
jnp
jle
nop
lcall
out
clc
mov
dec
in
stos
lret
xor
cmp
inc
stos
arpl
pop
loopne,pn
lods
mov
xchg
xor
daa
fimuls
mov
fadds
ror
and
adc
hlt
push
fists
push
mov
adcb
mov
xchg
enter
inc
jg
sbb
xor
pop
popa
stos
push
mov
outsb
pusha
inc
gs
mov
add
test
loope
paddsw
icebp
shr
ljmp
stos
aaa
mov
add
dec
sbb
xor
mov
je
sub
test
add
inc
push
pop
add
pop
subl
dec
add
nop
lcall
fldt
cs
lock
popa
mov
add
push
fisubl
sub
jmp
xchg
out
or
cmc
xchg
pop
jle
ja
rcll
ljmp
jno
sbb
mov
lea
les
out
add
mov
dec
sbb
lret
add
int
or
sub
pop
adc
bound
fimuls
popa
shrb
mov
rcl
cmp
lahf
mov
sbbb
outsl
sub
cmp
jbe
addb
mov
iret
roll
and
xchg
adc
or
mov
jge
dec
add
xchg
jbe
jae
std
subb
add
jb
lods
and
add
jg
outsl
xor
pop
and
sub
or
mov
jle
add
inc
push
push
orl
fistpl
cmc
nop
subb
pop
add
aad
sub
cmp
in
scas
std
jmp
mov
or
loope
cmc
mov
inc
push
fcompl
mov
sbb
rolb
arpl
pop
popf
xlat
movsb
add
ficoms
add
push
adc
pop
mov
or
daa
cmp
pop
stc
add
mov
int3
add
jnp
jno
adc
xor
sbb
xlat
leave
sbb
bswap
mov
sub
add
mov
add
cmp
call
test
rcl
movsl
insl
xchg
or
jle
cmpb
nop
adc
in
mov
ljmp
rcrl
jbe
cs
inc
mov
les
inc
mov
js
add
inc
sub
push
mov
test
imul
add
jnp
call
xchg
or
dec
lret
rolb
ret
and
in
test
pop
dec
out
add
mov
add
cwtl
add
std
mov
add
cmpsb
fwait
jne
outsb
push
add
mov
in
stos
lea
pusha
and
bnd
movsl
pop
push
cwtl
loop
out
adc
ds
aaa
add
and
jne
cmc
out
mov
stc
mov
push
mov
pop
push
inc
sub
test
out
sbb
std
push
jl
je
add
fwait
and
pop
test
ret
cltd
test
js
popf
add
lret
sub
jb
mov
testb
mov
js
jbe
nop
aaa
cmp
lods
dec
and
int
xchg
test
pushf
jae
pop
adc
addr16
add
jle
add
rcr
or
xor
inc
pop
add
mov
cmp
push
pop
faddl
xchg
bnd
mov
adc
mov
inc
lret
mov
pusha
and
bound
stos
mov
sarb
jae
sbb
cmc
test
pop
ss
pop
mov
inc
sub
adc
pop
scas
push
fwait
mov
mov
ds
ret
jnp
fs
addl
pextrw
inc
stc
add
mov
inc
test
jle
mov
in
sbb
repnz
sub
dec
jo
and
clc
lcall
jge
cli
scas
imul
xchg
fadds
std
pop
sub
inc
jns
das
in
bound
add
mov
ljmp
or
lds
aas
in
ja
test
xchg
add
sbb
pop
mov
test
cmp
je
jae
add
ss
mov
fsts
mov
fucom
mov
stos
pushf
lock
fisubrs
daa
inc
out
cltd
pushf
add
lods
pop
in
rcrl
adc
sbb
addl
enter
in
js
cmp
mov
xor
jmp
lock
mov
jecxz
cmpsb
lods
out
dec
mov
test
dec
addr16
add
mov
shlb
or
lods
out
pusha
add
add
sub
addr16
aas
test
cmc
fdivp
jmp
inc
add
lret
push
imul
cltd
add
pushl
mov
insb
or
lahf
push
imul
xchg
mov
sbb
push
cwtl
cwtl
ficompl
add
negb
cmp
add
inc
and
add
xchg
jno
daa
nop
fidivl
flds
mov
pop
or
sub
mov
imull
lahf
test
add
popa
lret
incl
cmc
add
fidivrs
mov
daa
sub
mov
sarl
fdivr
insl
test
fwait
sarb
add
mov
inc
add
test
sbb
push
inc
dec
jne
clc
cmp
fwait
test
fisubl
add
add
add
andb
jae
add
push
daa
cmp
jbe
push
aaa
mov
cmp
sbb
test
sub
mov
andb
sub
arpl
sbb
icebp
outsb
inc
or
pop
faddl
xor
mov
mov
out
push
push
sahf
mov
pop
cmpl
in
stos
push
arpl
add
adc
or
pusha
arpl
mov
js
push
imul
add
out
mov
gs
sarb
ret
and
adcb
cld
dec
mov
and
xor
insl
dec
mov
repnz
xchg
mov
cmp
push
lds
movsb
orb
aam
nop
insl
or
or
orb
or
test
and
cmp
rolb
lods
push
les
add
into
mov
add
mov
repz
add
add
add
jmp
daa
test
inc
repz
push
rcrb
lahf
sbb
ret
fwait
jle
add
scas
pop
xchg
mov
jno
pop
add
pavgw
sahf
in
rorb
lods
push
jo
xlat
js
add
or
mov
xchg
psllq
test
cmc
add
scas
jmp
popa
pop
dec
sbb
mov
out
sbb
leave
add
loopne
scas
add
cmc
in
ret
dec
pop
jae
mov
pop
iret
shl
rolb
cli
sub
sbb
mov
outsb
push
fdivrs
cmp
ret
sub
iret
dec
inc
cmp
call
mov
sub
and
and
js
stc
adc
inc
jg
test
aam
and
add
je
inc
rcll
inc
xchg
and
sbb
bound
adc
add
repnz
scas
sbb
add
or
adcb
cmp
fisttpll
jbe
cmp
inc
sbb
mov
sbb
mov
push
push
mov
in
add
xor
xchg
stos
cmp
andb
xor
orl
jns
push
leave
iret
add
les
pop
cwtl
stc
xlat
pushf
adc
pop
faddl
xor
jle
push
mov
bswap
roll
lahf
xor
jae
add
mov
es
test
mov
ljmp
out
cmp
xchg
rclb
mov
and
jno
popf
push
jns
push
pushf
pop
or
cmp
outsl
add
mov
clc
dec
lret
andb
add
cli
jns
pmullw
lock
xor
sub
add
imulb
mov
push
add
rclb
fcompl
add
test
mov
xchg
xorb
mov
add
mov
add
add
pop
xor
lock
sub
push
xor
clc
cmpsb
dec
pop
add
xchg
frstor
inc
xor
addl
lret
ret
shlb
xchg
add
bound
jmp
xor
or
or
int
fcmovnbe
out
lock
movsl
sub
fcoms
jg
jno
hlt
push
add
dec
incl
in
enter
add
adc
sub
ret
pusha
cld
and
push
cmp
jbe
jno
ja
add
jb
fsubl
xlat
in
leave
add
mov
sarb
ljmp
nop
push
mov
pop
inc
in
fcmovne
add
dec
rcll
aaa
aam
and
inc
xor
push
bound
add
scas
jnp,pt
mov
adc
fimuls
dec
sub
adc
pop
in
hlt
xor
rclb
lahf
inc
les
inc
push
adcb
sbb
into
jecxz
pop
rol
push
add
int3
xchg
pop
ret
lock
add
mov
cwtl
pop
jae
pop
and
jg
dec
push
outsb
jle
outsl
cmp
adc
loopne
pop
add
addr16
std
add
or
add
test
jle
decb
jae
add
test
jle
add
pop
xchg
inc
adc
cld
jb
mov
dec
incb
sub
int
scas
stos
dec
push
cmp
cmp
mov
sub
sti
jecxz
popa
out
add
fcoml
xor
push
adc
add
arpl
popf
xor
mov
jg
inc
and
popa
inc
rol
movlps
mov
lods
sbb
add
xchg
icebp
and
out
jb
add
jb
fwait
sbb
fildll
sti
jge
sbb
bound
and
pop
das
cld
xchg
add
jg,pn
push
cmp
nop
outsl
xchg
rcrb
pop
adc
jb
dec
imul
xchg
cltd
scas
push
pop
lea
pop
sub
je
mov
jno
add
in
sahf
mov
pop
repnz
rorl
push
sbb
xlat
inc
and
xchg
adc
clc
lahf
and
xchg
push
lds
mov
cli
add
insb
mov
and
xlat
add
insl
lds
ror
and
add
jo
jb
clc
add
xchg
imul
ss
loopne
mov
and
pop
push
xor
add
jo
jg
cmp
pop
sbb
je
nop
fiaddl
dec
lea
mov
stos
add
push
bound
mov
je
add
mov
or
add
fs
mov
jbe,pn
jb
cli
stos
lahf
pusha
addr16
xchg
int
in
and
out
int3
jns
mov
insb
jmp
and
in
xor
sahf
pop
adc
adc
add
jb
and
dec
cmp
psrlq
mov
dec
add
icebp
pop
ss
xchg
addr16
pop
pop
xor
mov
arpl
jno
in
push
popa
mov
xchg
jge
push
fs
imul
fstpt
xchg
loope
jg
fbstp
add
mov
movd
add
shrb
movsb
mov
aam
stc
pop
sub
add
pop
mov
lret
dec
stos
pop
inc
les
fisttps
stc
mov
addr16
in
mov
pusha
adc
out
add
push
out
jo
cwtl
mov
push
aaa
scas
fcmovbe
pop
or
jne
test
pop
jo
and
pusha
add
sarb
jo
rclb
inc
movsb
repnz
dec
xchg
inc
adc
in
enter
lcall
stos
fildl
negb
add
cwtl
shlb
les
scas
imul
xchg
repnz
fs
and
add
outsb
jge
sbb
je
add
fidivrl
push
inc
pop
dec
roll
movsb
mov
jnp
pop
dec
jle
add
orl
pop
cwtl
clc
pop
add
cmp
push
and
stos
push
cmp
rcll
sti
loopne
mov
dec
bswap
hlt
cmc
hlt
xor
lea
dec
adc
shll
push
and
ret
loope
std
fldcw
pusha
mov
jno
ss
and
xor
mov
push
add
sub
movsb
jo
dec
cmp
add
xor
adc
mov
inc
aam
add
cli
add
add
rclb
dec
and
je
mov
inc
jmp
push
push
ud0
xchg
cmp
loopne
push
or
add
int3
dec
lret
adc
mov
xchg
loope
or
add
std
push
jp
dec
xchg
leave
push
testl
mov
sbb
mov
push
icebp
add
push
orl
mov
cmp
popa
and
mov
movsl
stos
cs
into
add
and
add
mov
fwait
add
rcrb
add
xchg
pop
mov
mov
mov
xor
push
add
ds
ja
sub
call
pop
mov
sub
out
push
xchg
loop
sub
jl
pop
mov
cltd
xchg
ss
push
cld
add
enter
mov
arpl
in
int
mov
outsb
fimull
dec
add
pop
enter
decb
iret
pusha
or
aaa
add
nop
mov
push
mov
jp
nop
jl
lods
std
cwtl
cmp
popl
clc
mov
add
subl
add
sbb
jo
arpl
sbb
xchg
add
iret
fisubs
int
dec
pcmpeqd
and
lret
pop
sbb
mov
out
popa
adc
pop
add
add
mov
jnp
pusha
sub
add
dec
incl
imul
sbb
fidivrs
pop
out
add
subl
add
add
xlat
push
cmp
cli
test
int3
aaa
mov
pop
cltd
xor
enter
xchg
xor
add
jmp
push
pop
jp
add
push
xchg
movl
inc
dec
outsl
sahf
add
jecxz
add
add
or
mov
add
adcl
cs
pop
ljmp
pop
out
or
and
push
jno
pusha
imul
das
scas
jns,pn
push
stos
add
lods
sub
adc
xor
mov
pop
mov
add
leave
or
out
add
inc
lret
in
dec
out
call
pop
insl
test
jb
fcmovnbe
lock
pavgw
lea
jb
dec
add
fidivs
mov
dec
add
dec
or
pusha
or
or
ljmp
push
std
int3
sbb
dec
in
dec
test
push
cmp
adc
fldl
jl
pop
fistl
inc
add
lea
mov
dec
jge
fdiv
push
std
add
xchg
shll
aam
pushf
add
stos
aad
rorb
add
and
pop
adc
inc
add
mov
out
or
popa
in
add
clc
mov
or
fs
jl
test
jl
sbb
repnz
mov
add
mov
ja
hlt
loopne
mov
and
or
add
ljmp
mov
ds
outsb
jae
lds
push
mov
push
outsl
adc
xor
add
scas
pop
pop
sbb
nop
daa
mov
cmc
cli
aaa
pusha
adc
xor
shlb
xchg
fs
dec
rcll
and
xor
mov
out
pusha
mov
and
or
dec
ja
subb
push
ja
add
lea
hlt
insl
pop
lock
add
push
sbb
std
pushf
xlat
addr16
push
out
lock
outsb
add
inc
xor
mov
cmp
in
adc
add
adc
or
push
ds
mov
dec
rclb
and
fadd
sub
mov
cwtl
aas
mov
and
add
fistps
pop
xor
inc
mov
inc
or
shl
fisubrl
sub
das
jge
lcall
lret
add
pop
or
lea
dec
add
mov
stos
repnz
scas
pop
lret
jle
ret
or
imulb
rcl
jb
nop
cmp
xchg
sub
mov
add
or
sbb
imul
rolb
popf
arpl
mov
lds
mov
repnz
mov
and
int
lcall
or
shr
adc
fimull
or
pushf
shlb
fadds
scas
out
pop
adc
roll
sub
clc
ficoms
dec
mov
cs
mov
add
lret
mov
and
fldenv
pop
inc
add
mov
loopne
and
aam
xor
dec
pusha
add
sub
insb
mov
dec
or
mov
jns
inc
inc
ja
and
add
iret
andb
or
and
adc
pop
rclb
mov
aas
push
pop
test
push
ljmp
push
add
outsl
mov
inc
aas
ds
incb
loop
rclb
aaa
popa
adc
mov
cmp
mov
mov
add
cmpsl
cmp
pop
lea
sub
ja
add
les
ss
shll
sub
dec
out
les
dec
lret
test
test
push
sub
pop
pusha
loopne
jnp
and
int
rolb
add
orb
add
fs
xchg
dec
in
arpl
mov
gs
add
imul
jp
adc
das
jo
icebp
push
cli
and
dec
cld
adcb
pusha
scas
sub
dec
fsub
jne
add
js
add
and
pop
clc
lcall
testl
fdivs
cmp
cmp
add
enter
cmp
jmp
scas
add
sbb
shlb
bound
push
lcall
mov
push
lds
popf
cwtl
enter
jle
hlt
cmp
mov
push
je
mov
or
stos
dec
jp
pusha
push
cmp
add
xlat
idiv
and
rcrb
stc
ja
jp
out
adc
xchg
popf
mov
sbb
push
enter
add
js
mov
push
cmc
jge
loope
hlt
xchg
decb
xor
xchg
fs
sbbl
dec
add
xchg
xor
hlt
out
jne
add
arpl
add
out
fisttpll
aas
testl
adc
push
mov
jae
jbe
pop
push
sbb
mov
or
push
mov
xor
add
xchg
inc
stc
add
xlat
leave
mov
ret
roll
sub
add
ror
add
xor
sbb
popf
sub
in
xchg
cmp
ljmp
mov
mov
pop
in
or
sub
mov
or
ret
lods
inc
xchg
adcb
and
pusha
test
and
pop
icebp
ret
lods
xor
shlb
push
xchg
in
jg
pop
add
mov
or
aas
xchg
add
sbb
add
cs
clc
and
add
sub
add
stos
xchg
pop
out
add
cmp
pop
mov
push
jl
fildl
xor
pop
enter
dec
mov
push
into
andb
lret
das
push
mov
pop
adc
cmp
sbb
jb
cmp
mov
jmp
roll
mov
ja
sub
push
mov
or
mov
aam
dec
dec
add
cmp
inc
inc
add
lcall
push
mov
lea
pop
sarl
and
mov
add
fs
sarb
test
push
add
jns
jbe,pn
or
aam
add
xchg
lock
xor
insl
test
mov
enter
and
push
add
loop
sbb
mov
adc
jl
filds
sbb
sbb
pop
mov
jb
sub
rcrb
inc
psubq
mov
ficoml
or
in
inc
in
out
and
inc
push
add
iret
fs
inc
add
mov
pop
cmc
mov
imul
aas
sahf
faddl
shll
mov
pop
adc
pop
xor
aad
rorb
cmp
in
cmp
inc
int3
pusha
stc
jns
sub
jecxz
gs
cli
das
lcall
stos
stos
dec
les
repz
fcmovbe
add
ja
verw
addr16
int3
push
sti
fsubr
add
sub
cmpsb
je
ss
push
cld
jp
cmp
hlt
add
ja
mov
lock
xor
jne
int3
aad
add
jmp
mov
pop
lcall
mov
mov
pop
add
mov
add
inc
push
enter
cmp
leave
addl
rclb
sub
inc
inc
call
dec
add
xor
decb
and
mov
add
and
mov
pop
mov
xchg
aam
xor
rolb
adcl
jo
jmp
subb
add
lret
add
push
jb
mov
inc
add
stos
jae
pop
jb
shll
push
jp
lods
loopne
add
aaa
out
mov
movsb
pop
enter
jle
mov
mov
mov
pop
inc
sub
cwtl
faddp
or
add
mov
dec
sbb
jge
jno
lahf
xor
decb
fsubs
mov
push
cwtl
shrb
pop
nop
adc
cmc
dec
push
mov
jmp
push
es
sbb
inc
insl
imul
xchg
rorb
or
int
mov
pop
cmp
adc
pop
std
sub
test
xor
push
and
test
xchg
add
aas
jecxz
jg
xchg
add
mov
cmpsb
aad
lret
jmp
out
repnz
call
out
shlb
add
lret
shl
adc
jp
in
nop
mov
orb
mov
aaa
pop
add
fcoms
jae
pop
mov
movb
nop
cmp
out
add
push
ja
push
cmp
movsb
adc
js
add
jp
fcoml
jns
pop
sbb
jo
push
out
addb
and
inc
or
int3
popa
bound
adc
je
jbe
and
out
jbe
mov
sarb
repz
inc
filds
adc
hlt
or
push
and
movsl
rorb
sub
jns
es
or
push
mov
loopne
add
cld
pop
test
xchg
jge
lock
mov
cmpsl
cltd
push
mov
mov
push
lds
lock
mov
shrb
bound
xor
sbbl
add
pop
add
sub
into
push
push
sbb
pusha
mov
out
sub
cmp
add
movsl
mov
and
or
add
into
icebp
xor
sub
mov
inc
sub
lret
mov
insl
lods
test
and
xor
lock
dec
cmpsw
add
pop
mov
test
mov
jnp
pop
add
inc
or
rolb
xchg
sti
mov
ss
mov
xor
jmp
inc
lock
push
mov
sub
aad
sub
pop
test
xchg
push
movb
shl
xor
enter
add
xorb
or
in
incl
mov
add
xor
loope
ljmp
mov
out
and
jle
ja
add
jnp
or
inc
sub
insl
mov
xor
add
lds
aas
add
pop
jo
jne
shrb
add
push
lods
fdivrl
add
fildl
cmp
ret
mov
cmp
pop
and
lahf
div
add
jb
dec
test
jno
pop
xor
jge
add
sbb
iret
out
fwait
mov
adc
xchg
test
nop
and
adc
pop
sti
mov
scas
adc
loopne
je
loopne
negb
jp
scas
mov
loopne
xlat
pop
cltd
add
mov
add
mov
mov
adc
leave
int
adc
add
test
add
xlat
cmp
call
dec
lret
mov
adc
mov
xorb
cmp
repz
iret
test
sub
loopne
mov
jg
in
add
in
les
dec
add
xchg
jmp
test
dec
xchg
test
push
ss
adc
inc
cmp
dec
jae
push
inc
addb
mov
jnp
mov
pop
mov
jns
inc
and
add
adc
addr16
pop
movsb
shll
xchg
outsb
and
pop
pop
cmp
or
lods
add
inc
idivl
inc
dec
add
loope
add
mov
lcall
sbb
xchg
sbb
daa
popf
add
fwait
decb
rcr
mov
aas
mov
repnz
jae
cmp
aaa
jg
mov
add
xor
and
inc
mov
adc
ret
loopne
nop
bound
enter
cmp
jne
dec
shll
xor
add
inc
inc
lret
aad
add
fwait
xor
fstps
aam
cmp
aaa
xchg
xor
ljmp
addb
bswap
ds
dec
orl
call
arpl
sbb
add
imul
jo
repnz
add
repz
std
add
in
mov
add
in
es
add
testb
xchg
dec
jb
push
orb
call
jge
xor
pop
lea
sub
add
adc
cs
and
inc
addr16
add
mov
add
jae
test
push
cli
push
add
negl
pop
pop
xchg
xor
add
shlb
psubb
mov
jnp
add
dec
xchg
and
das
adc
test
shrl
xor
mov
daa
icebp
jmp
sbb
insl
in
xchg
filds
adc
xchg
jns
add
and
xor
pushf
xor
jmp
or
jle
add
push
pop
jns
icebp
stos
xor
add
std
les
mov
in
enter
add
pop
cli
ds
pop
adc
adc
mov
mov
js
and
xor
mov
ret
push
pop
pop
mov
pop
adc
into
sahf
pusha
pop
je
ret
add
push
add
call
cmp
add
fcompl
jno
add
int
add
pop
rolb
inc
add
pop
and
or
push
daa
movsl
xor
mov
mov
xchg
pop
aas
pop
fwait
out
sarb
push
cmc
orl
pop
jo
add
imul
jns
mov
lret
arpl
xchg
mov
sbb
sarl
jge
or
pop
lahf
mov
add
aam
lret
inc
pushf
and
mov
xor
mov
mov
dec
dec
test
sbb
xchg
add
fisttps
mov
add
mov
aaa
add
lods
inc
or
enter
cmp
or
rol
js
dec
stos
testb
push
mov
dec
mov
mov
push
loopne
mov
or
xchg
sub
mov
pop
es
push
dec
rcl
dec
add
nop
daa
imul
movsb
mov
xor
stos
jo
shl
sbb
inc
xchg
push
stos
adc
loop
jle
js
arpl
mov
add
or
in
mov
add
or
clc
loope
push
xchg
add
aad
int3
sbb
in
mov
push
mov
out
and
xchg
cmp
add
cmpb
clc
ltr
mov
lret
les
mov
sub
push
inc
arpl
add
cld
pop
out
mov
jg
addr16
insb
xchg
dec
jae
enter
cs
push
out
stc
add
lea
popa
add
mov
pusha
push
icebp
adc
mov
aam
add
add
fcom
sti
sbb
cld
stos
or
lret
stc
adc
push
cmp
lods
mov
aam
pop
loop
or
pop
out
pop
push
sbb
subb
pop
jnp
enter
pushf
std
mov
xor
mov
cmp
fisttpl
pop
mov
into
in
cmp
cmpsl
mov
testb
jg
out
imul
test
daa
subl
mov
push
and
fsubrs
sbb
pop
ret
pop
sbb
jmp
dec
les
nop
add
dec
adcb
inc
repz
test
adc
mov
lahf
add
mov
addr16
int3
and
mov
add
shrb
cld
stos
icebp
ljmp
adc
or
pop
cmp
mov
inc
loop
xor
push
sub
inc
mov
test
xchg
popf
sbb
andb
cmp
jp
add
mov
js
pusha
clc
jbe
cmp
mov
lods
xor
xor
xchg
shlb
mov
mov
js
iret
sub
orb
inc
cmp
pop
mov
fwait
cmpb
mov
fsub
mov
mov
jnp
or
dec
inc
das
add
pusha
scas
jge
jmp
test
rorl
ds
out
fsubr
sub
xor
mov
lds
and
pop
add
into
inc
jo
push
dec
add
cld
insb
push
mov
dec
lret
xor
hlt
xor
repz
add
jecxz
cmp
int3
in
sbb
fidivl
sbb
add
sub
pop
jmp
sbb
cmp
test
cmp
cwtl
adc
aas
sarb
sbb
test
add
xchg
cmpsl
push
mov
popf
pop
mov
test
lods
pusha
and
pusha
sub
cld
hlt
pop
sbb
rol
jb
xor
add
out
test
sbb
xchg
popa
ja
xchg
sub
jle
adc
jo
out
add
mov
aas
scas
sahf
mov
mov
cmp
adc
mov
add
scas
sbb
loopne
cwtl
fxch
add
fcomps
cwtl
add
ljmp
stc
xchg
push
mov
testb
and
jno
adc
or
jmp
push
push
xor
loopne
mov
clc
add
mov
push
jmp
hlt
fdivrl
mov
mov
sbb
mull
aam
and
in
icebp
rol
pop
mov
bound
in
incl
pop
mov
add
inc
test
push
jl
add
jp
mov
push
push
ja
leave
scas
add
movsl
test
mov
mov
les
dec
fnsave
loopne
nop
lods
add
movsb
test
and
pusha
cwtl
data16
sub
xchg
add
in
mov
mull
icebp
mov
or
ja
jno
and
pop
or
pop
ljmp
shl
cmpsl
and
in
out
enter
out
cld
sbb
or
inc
cmc
out
mov
call
cmovge
lahf
push
add
or
and
leave
sti
jbe
pop
addb
test
mov
addr16
push
mov
xchg
cld
pop
jae
fwait
add
shr
mov
or
inc
mov
add
jle
push
bound
add
popf
push
add
mov
jge
ds
aam
loopne
in
add
xchg
aas
sub
in
jmp
add
shrl
lea
add
sti
xchg
fmul
call
hlt
popf
call
in
test
add
or
push
add
adc
mov
dec
add
outsl
xchg
and
andb
les
add
push
cmp
xor
es
add
adcb
data16
add
addl
cmpsl
add
shlb
movsb
fsubl
fidivl
xchg
cld
rcrb
lds
imul
inc
sub
pop
cmp
push
mov
jno
data16
cmpb
pop
pusha
cltd
adc
inc
js
es
sbb
mov
stos
stc
pop
clc
lret
dec
add
imul
add
adcb
bound
xor
out
sbb
add
and
lds
outsb
cmp
push
add
adc
movb
enter
out
adc
roll
js
jecxz
fcmovu
aad
add
cmc
inc
lahf
sti
sbb
mov
add
adc
cmp
push
pop
out
mov
outsl
or
cmp
and
popf
jmp
jnp
js
pop
insb
sbb
add
pop
and
mov
leave
movsl
or
inc
or
and
pusha
sub
rol
push
out
scas
and
js
fs
push
iret
xor
out
sbb
mov
cmp
adc
mov
lds
ret
les
gs
jbe
inc
pop
cmc
clc
and
pop
push
frstor
enter
cmp
mov
add
idivl
cld
lods
sbb
das
mov
test
pushf
dec
sbb
enter
out
xor
rol
push
mov
or
cmp
adcb
icebp
push
sub
ss
cmp
mov
rcll
pusha
fiaddl
sub
xchg
cmpsb
ja
sti
add
mov
clc
push
dec
xchg
imul
jecxz
sub
shll
pop
incb
and
test
sbb
mov
subb
mov
adc
dec
pop
mov
mov
sub
jnp
jmp
imul
mov
push
dec
andb
pop
mov
pop
add
je
js
mov
push
mov
arpl
jne
mov
ret
sarb
pusha
xor
dec
adc
int3
sub
sti
adc
sbb
adc
mov
lret
aad
loope
push
imul
and
inc
adc
and
lods
test
dec
mov
cltd
daa
movsb
mov
and
arpl
xor
mov
lods
inc
pop
adc
dec
and
cltd
cld
nop
imul
sub
das
inc
sbb
and
jmp
adc
aad
and
adc
shll
aaa
or
mov
or
lret
or
cltd
cmp
ss
cwtl
pop
cli
mov
pop
push
adc
add
sbb
add
call
mov
roll
mov
mov
cltd
push
add
stos
adc
mul
xchg
jnp
add
adc
nop
push
push
mov
mov
add
call
mov
imul
xor
pushf
add
nop
lret
shl
add
mov
cmp
pop
mov
out
add
mov
push
xchg
jle
pop
xchg
add
adc
out
dec
jmp
jne
add
push
mov
sub
jg
add
packssdw
enter
add
int3
or
dec
lock
fiaddl
out
pop
jo
mov
xchg
push
cmp
int3
pop
adc
lret
dec
push
push
outsl
jg
add
rcll
addl
cli
inc
sub
add
inc
cmpsl
cmp
fsubs
lret
popa
add
add
test
addl
sub
into
cmp
ds
add
ret
inc
xor
mov
xchg
js
cmp
mov
cwtl
pop
add
and
or
cmp
fstl
ds
test
add
lock
add
sub
enter
cltd
add
scas
hlt
jae
push
sbb
stc
cld
test
rorl
rclb
add
stos
cmc
inc
shll
or
xor
filds
inc
repz
imul
sub
fists
data16
fdivrl
cmp
dec
fistps
cmpsb
add
jnp
pop
add
mov
and
mov
std
cld
dec
pop
mov
dec
xor
jle
sub
pop
sub
into
xchg
push
insl
cmp
testl
xchg
xchg
popf
add
push
pop
pop
ror
and
xchg
loop
add
and
int3
in
jecxz
aam
inc
rcrb
xchg
inc
jo
mov
push
push
xor
fisubs
or
iret
mov
add
adc
testb
movsb
imul
pusha
add
int
xor
sub
push
add
mov
sbb
add
hlt
jnp
or
xor
jno
xchg
js
jbe
dec
popf
inc
jmp
orl
inc
pushf
push
pop
pop
cmp
inc
and
and
mov
out
movsb
or
add
mov
out
add
leave
sub
rcr
xor
fsub
cmpsl
ljmp
test
add
aad
push
arpl
jno
clc
xbegin
cmp
ds
mov
xchg
loope
ficompl
sbb
mov
push
dec
jmp
sub
loopne
jo
jge
icebp
add
pusha
push
push
int
sub
inc
pop
pop
mov
orb
dec
js
testl
fwait
add
loopne
push
pusha
add
cli
add
or
add
cmp
add
out
dec
cwtl
std
enter
sub
roll
insl
inc
fsub
add
sub
add
lret
mov
add
addr16
fldcw
fldl
push
jae
fsubrp
dec
call
cmp
dec
in
icebp
mov
adc
dec
push
pop
push
jmp
sub
add
bound
jne
mov
fdivs
jle
add
cmp
sbb
icebp
add
movsl
cmp
pop
enter
push
popf
add
cwtl
ret
pop
test
loop
cld
push
clc
rsm
and
xchg
dec
jp
shll
jae
out
shrd
ss
mov
cmp
rolb
cmp
outsl
add
je
mov
add
stos
cmp
push
andb
test
mov
or
dec
outsb
inc
aas
jbe
addb
fstpt
cs
stc
mov
jno
xor
cltd
movsl
cld
stc
xchg
add
fsub
pusha
sahf
xchg
add
scas
add
div
mov
sbb
xchg
adc
push
fnstcw
or
pusha
pop
mov
lods
inc
sahf
adc
pop
pusha
popl
sub
jne
leave
scas
jge
add
clc
mov
mov
cmp
push
popa
adc
in
cmpsb
rcr
pop
nop
cmp
add
stos
adc
jo
dec
add
addr16
bound
ljmp
jl
and
xchg
xchg
cmp
pushf
cmpb
mov
loopne
sbb
and
dec
lods
add
xchg
cmp
mov
sub
enter
aam
sbb
mov
add
jp
dec
shlb
dec
sbb
lea
dec
out
sub
pop
dec
mov
add
dec
push
add
ljmp
sahf
mull
cld
loope
or
dec
lret
push
and
jmp
mov
mov
orb
dec
loopne
test
add
roll
xchg
inc
ss
jl
dec
je
or
xchg
lret
adc
es
or
loop
cmpl
mov
rcll
cmp
sbb
loopne
mov
cmp
nop
add
test
sbb
xor
movsb
xchg
and
pop
mov
pop
mov
loopne
das
or
ficompl
sarl
scas
add
mov
mov
add
cmpl
mov
add
pop
pop
inc
add
push
inc
repnz
and
xchg
mov
lret
jmp
dec
push
arpl
dec
popa
stos
les
pop
add
jecxz
or
mov
daa
pmulhuw
pop
lahf
add
insl
jnp
push
add
mov
dec
loop
jle
sub
dec
sbb
jo
outsl
out
fnsave
inc
movl
sub
mov
dec
insb
push
cld
mov
cmp
push
xchg
adc
into
mov
jae,pt
ds
sbb
sbb
pusha
cld
xchg
or
add
mov
shrb
pop
nop
xor
or
add
xor
imul
and
mov
add
pop
jbe
sbb
sbb
adc
mov
cmpsl
sbb
or
cmp
in
and
nop
sbb
cli
dec
dec
add
sub
shlb
or
out
jecxz
aad
jecxz
rolb
pop
xor
dec
adc
adc
mov
mov
xchg
jbe
pop
push
scas
rcrl
fcompl
add
or
pop
in
inc
hlt
loop
pop
xchg
xor
jg
pause
xchg
mov
cmp
pop
sbbb
pop
xor
pusha
add
in
mov
sbb
push
dec
inc
cmp
add
insb
arpl
ljmp
movsl
test
adc
inc
faddl
test
daa
stos
bound
mov
loop
xor
in
dec
push
push
rcrl
cltd
xor
cwtl
add
out
stos
add
test
jmp
fisubl
add
ret
repnz
hlt
daa
jbe
dec
jae
xchg
add
push
hlt
add
cmp
aas
mov
nop
filds
lock
ds
lds
dec
xchg
shl
je
in
ja
add
loopne
jno
sti
sbb
out
and
jo
aas
adcl
iret
sbbb
pushf
in
cmpb
push
fidivl
stos
aad
dec
add
pop
not
add
sub
shrl
mov
pop
add
mov
mov
push
imul
popf
jo
sti
sbb
jne
aaa
popa
jns,pn
add
iret
ljmp
sti
popf
andl
or
jl
jl
add
and
push
clc
orb
cmc
jnp
add
mov
add
popf
and
xchg
push
dec
fdivs
outsb
or
cmovnp
push
cltd
xor
add
test
clc
mov
aaa
push
ds
cmc
in
inc
test
and
cld
sub
imul
add
fdivrl
and
pop
mov
rclb
imul
jmp
dec
rorb
add
movsl
xor
xchg
faddl
push
std
dec
pusha
hlt
idivl
add
sbb
add
sub
filds
or
push
xor
xchg
das
push
xchg
sub
jge
or
aas
or
popf
repz
pusha
sub
jge,pt
mov
in
popa
sbbb
out
jl
ja
pop
aad
add
mov
xor
stos
dec
lods
adc
loop
loopne
sbb
cmpsl
das
inc
orb
mov
mov
rcll
add
xorl
cmpsl
adc
mov
sub
adc
add
lret
popf
xchg
add
inc
clc
pop
pop
adc
inc
cmp
lock
adc
ja
sti
jns
imul
nop
xor
adc
mov
stos
push
push
mov
cmp
add
dec
cmpsb
inc
add
es
jne
add
pop
mov
rorl
sub
arpl
rol
add
pop
imul
mov
stos
in
rclb
add
lock
lds
cmp
adc
dec
repz
push
mov
les
andl
clc
stc
sbbl
fstpt
or
xor
add
loope
scas
add
iret
add
ss
add
out
cs
pop
test
adc
jo
adc
sbb
xor
add
sbb
xor
push
pop
or
add
mov
pop
loopne
sahf
add
jg
stos
rolb
xchg
mov
in
lcall
repnz
icebp
mov
clc
lods
lock
jnp
jo
sub
dec
push
pop
dec
popf
mov
adc
push
ljmp
xchg
mov
es
pop
mov
add
xchg
test
out
push
or
and
add
inc
jo
add
cmp
test
xchg
xchg
cwtl
mov
inc
mov
add
shll
notb
fmulp
pop
repz
push
es
cmp
mov
loopne
or
fs
pop
mov
cmp
add
lret
pop
insb
gs
add
xor
pop
sub
pop
aas
inc
push
mov
test
clc
addl
imul
xlat
adcb
lock
jl
rorl
push
xor
andb
outsl
ja
pop
jno
cmp
loopne
fstpt
add
or
sbb
ret
mov
pop
cmp
inc
sbbl
fsub
xor
jmp
add
ret
subb
mov
dec
xor
movsl
add
lods
insl
push
pusha
mov
enter
fwait
sub
fbstp
jmp
sahf
imul
mov
inc
scas
test
lret
arpl
and
cmp
sbb
dec
sbb
stc
adc
jo
aas
and
add
mov
adc
push
push
push
inc
scas
cmp
test
add
pop
dec
add
push
sbb
jns
sub
add
into
loope
in
dec
inc
rorb
sbb
mov
stos
test
out
sub
xchg
adc
arpl
push
add
cmpl
add
leave
das
jb
lret
rclb
sahf
pushf
add
xor
adc
jle
pop
enter
sbb
sahf
lldt
mov
cmp
push
or
add
lahf
and
add
cltd
jp
adc
push
aas
xlat
cmp
xor
add
outsl
int3
bound
mov
aas
ljmp
rcl
test
or
popw
mov
push
lds
jmp
testb
push
mov
dec
or
nop
dec
sub
add
mov
int3
push
sbb
xlat
cmp
xchg
pop
push
add
sarb
jb
pop
inc
and
inc
hlt
in
push
jle
add
xlat
pop
xchg
movsb
mov
icebp
mov
xor
fcoms
adc
dec
scas
cmp
mov
sbb
jno
aam
pushf
rolb
jae
js
into
loope
mov
or
pop
push
mov
mov
fcoms
lret
add
in
call
mov
mov
stos
inc
inc
popa
xchg
adc
aas
push
scas
in
stc
xlat
add
pusha
add
sub
add
repnz
push
mov
add
enter
push
shl
mov
orl
shrl
ss
rolb
pop
cltd
sbb
movsl
jno
add
bound
add
sbb
in
and
mov
arpl
mov
add
jle
jae
mov
ds
out
add
jo
xchg
imul
dec
call
mov
shr
mov
or
addb
mov
int
mov
xor
jb
lcall
lea
mov
aaa
inc
add
loop
arpl
cwtl
jl
lock
je
adc
add
push
icebp
test
es
pop
std
ret
fisubrs
je
mov
jg
out
aas
add
and
rcrb
lea
gs
and
je
lods
ja
divl
rcrl
dec
add
inc
and
stos
dec
or
add
xchg
fwait
or
lret
add
nop
fildl
mov
adc
mov
add
pop
push
pusha
sarl
pushf
mov
mov
and
sbb
fidivrl
clc
and
push
ret
add
imul
jbe
idivb
bswap
mov
sbbb
jnp
test
xchg
cs
push
jp
stc
inc
mov
sub
mov
rolb
mov
std
shlb
ret
add
addr16
cld
xchg
lds
xchg
add
fiaddl
orb
push
popa
mov
test
enter
scas
test
mull
movsb
imul
int3
dec
push
or
fldenv
add
or
jecxz
jg
pop
sub
add
mov
xor
shlb
push
aad
and
mov
movsl
sub
out
pop
fs
roll
insl
jmp
popf
inc
jp
dec
hlt
test
inc
push
int
sbb
add
jmp
add
sbb
xchg
cmp
sarb
pop
push
sbb
cs
add
mov
push
add
mov
mov
xor
imul
cs
add
je
lock
aam
and
shrb
xchg
mov
faddl
xchg
add
ficompl
test
addl
daa
jp
cmp
sbb
call
sbb
hlt
movsl
out
nop
mov
and
imul
dec
add
je
push
mov
xor
pop
imul
xchg
jecxz
push
daa
nop
push
dec
push
ror
in
add
or
imul
leave
xor
pop
shll
push
xor
mov
jl
mov
and
lahf
loope
jecxz
mov
xchg
pusha
add
adc
popf
icebp
mov
add
pop
inc
jp
mov
cmp
cmpb
sbb
int3
and
es
imul
push
addl
sub
pop
leave
and
push
pop
stos
sar
inc
push
cwtl
adc
fcoms
js
mov
lock
add
inc
mov
add
loop
test
mov
cmp
filds
add
jno
fidivrl
add
loopne
mov
xchg
adc
in
or
mov
shrb
enter
jno
adc
rorl
out
xchg
ljmp
js
add
mov
add
push
sub
xchg
add
cmp
mov
aas
add
cmpsb
lret
jnp
mov
sti
stc
dec
sub
add
mov
aas
add
add
mov
sbb
push
push
cs
call
sbb
fsubrp
sbb
loope
add
xchg
mov
xor
popa
pusha
lods
clc
loop
leave
and
add
ds
push
nop
dec
push
or
jae
ret
push
jo
dec
inc
cwtl
sub
mov
mov
xchg
mov
test
xor
jb
ficomps
das
add
roll
push
mov
add
or
int
cmp
movsb
js
mov
adc
fs
mov
sub
in
mov
popa
test
cld
inc
out
mov
add
adc
rcrl
faddl
stos
aaa
sbb
mov
stc
add
sub
pop
cmp
aas
add
lds
and
test
adc
and
loop
lock
cmp
inc
ret
mov
imul
mov
xchg
sbb
dec
shlb
add
je
jne
sub
and
or
shlb
test
sub
push
cmpsb
js
add
mov
addr16
adc
pop
dec
mov
pop
in
stc
push
add
shlb
nop
jp
in
mov
and
and
pop
fstps
popl
adc
mov
nop
mov
push
add
push
pop
in
and
je
xor
mov
or
jae
add
aam
xchg
mov
jecxz
mov
pusha
aaa
out
push
aad
in
jle
cs
les
ss
mov
jno
jae
and
and
pop
push
bound
sti
inc
push
push
pop
dec
stos
pop
inc
xchg
and
add
divl
bnd
xor
repnz
lock
add
lahf
cmp
shl
mov
bound
push
call
mov
add
mov
pmaxsw
cmp
mov
cld
add
pop
mov
add
sbb
fidivrl
orps
dec
shlb
into
dec
sarb
push
aam
nop
add
jle
push
mov
sarb
cmp
orl
jns
gs
add
movsb
lret
loope
push
add
out
mov
hlt
int3
add
pop
nop
ret
add
fadds
jge
cmpsb
in
test
dec
sub
cld
sub
outsb
or
in
pop
adcb
jecxz
rolb
das
insl
imul
popa
inc
push
dec
cmp
push
pop
je
jns
jne
add
mov
mov
jns
pusha
lock
sub
lcall
jne
dec
mov
ja
add
loope
adc
cmp
adc
add
std
scas
loopne
dec
jo
add
test
cmpsb
add
and
fadds
inc
rcll
add
lahf
in
add
xchg
xchg
pusha
jb
add
ret
adc
add
int
pop
push
xor
fdivl
xchg
icebp
add
xor
xchg
add
test
dec
lds
or
lods
aas
sahf
in
add
testb
add
stc
mov
lock
in
aas
cmp
add
xor
jge
add
push
xchg
dec
adc
add
pop
adc
insl
in
xor
sub
cmp
xchg
out
add
gs
add
sbb
push
xchg
add
sbb
lea
add
lcall
pop
loop
rcll
and
jl
cmp
daa
jbe
or
popf
mov
arpl
test
mov
popf
add
sbb
mov
add
adc
sub
or
cmp
dec
dec
arpl
sti
mov
mov
push
sar
or
inc
mov
add
insb
js
add
sbb
mov
loopne
xlat
out
les
adc
subl
add
imul
std
xchg
popa
mov
mov
subb
adc
or
loopne
and
mov
add
test
push
add
inc
fsubl
lea
cmp
xchg
pop
ss
jns
mov
or
shrb
out
add
adc
xchg
and
jns
push
inc
insb
loopne
jl
mov
add
mov
add
dec
xchg
mov
into
mov
add
mov
xchg
lds
fstp
xchg
or
xlat
jecxz
xor
jb
add
fmull
jne
pop
cld
and
dec
sahf
ret
xor
sbb
cmc
and
inc
test
dec
loopne
mov
add
dec
out
mov
stos
jle
into
outsb
ret
scas
enter
test
cmp
out
iret
stos
pop
fdivrl
add
aas
das
clc
xor
insb
push
inc
sub
je
hlt
mov
xor
mov
dec
cmpxchg
or
in
add
jns
jne
add
cs
adc
dec
adc
imul
sub
out
dec
cmp
movsb
in
add
mov
pop
cmp
ja
jns
out
add
adc
mov
stos
push
mov
sahf
pop
faddl
aam
xchg
sub
js
sub
std
xchg
mov
dec
stos
mov
push
xor
inc
jnp
add
push
mov
repnz
jge
test
sbb
jg
aas
xchg
xorb
inc
add
mov
pop
add
jge
jbe
sbb
mov
mov
sub
add
cmp
ficompl
rcl
add
sub
repnz
push
mov
shr
loop
pusha
mov
add
push
mov
out
add
add
push
and
jnp
add
lea
aas
jmp
cmpsl
cld
mov
jg
sub
clc
sti
test
mov
inc
sub
ficompl
rolb
pop
pusha
fisubs
jne
xor
data16
bound
incl
and
add
jmp
adc
stos
cmp
sub
jl
push
mov
shr
int
or
xchg
mov
add
daa
cmp
push
mov
push
mov
icebp
pop
inc
mov
cld
xchg
add
test
mov
lea
pusha
jecxz
or
xor
shll
inc
add
daa
icebp
popl
jmp
insl
loope
inc
xchg
mov
enter
bound
adc
cwtl
add
sti
sub
aaa
jl
push
lock
xor
test
stc
aaa
pusha
nop
lahf
sub
push
cmpb
xor
pop
pop
aad
pop
add
addl
in
inc
push
sbb
adc
ret
and
stos
xchg
pusha
or
ja
out
cli
sub
mov
scas
sahf
loopne
rcrl
add
nop
cld
add
mov
xchg
dec
roll
xor
fadd
or
jns
mov
adc
ljmp
sbb
dec
mov
addb
push
xchg
dec
push
xlat
rcrb
pop
mov
dec
in
sbb
add
imul
mov
cmpsl
sbb
cmp
lods
sbb
lret
and
ja
pop
jne
test
hlt
xchg
add
cli
jbe
push
xor
or
insb
dec
dec
dec
pop
sub
dec
sub
add
jnp,pn
loop
lret
sub
adc
insb
cmp
sbbb
xchg
call
push
icebp
add
dec
cs
mov
add
shrl
fadds
sbb
daa
and
add
cmpsl
fs
xlat
cld
dec
jmp
cmc
add
xchg
xor
cmp
cmp
ljmp
call
loop
add
jne
mov
dec
negl
xor
sub
xor
sbb
out
sahf
cs
pop
inc
sbb
mov
out
data16
and
sbb
nop
insb
shll
repnz
mov
add
aad
iret
cmpsb
icebp
push
adc
push
push
test
mov
jl
std
ds
out
fdivrl
cmp
into
push
and
bnd
in
cmp
test
ret
add
lret
aas
fisubrl
shr
stc
ljmp
gs
pop
sbb
fcmovnbe
mov
push
push
add
cld
mov
lret
xor
mov
jg
xor
pop
push
pop
jbe
jae
or
ret
subb
jmp
add
or
dec
mov
and
pop
jns
pusha
dec
inc
mov
pop
ja
lods
cmpl
adc
jg
add
testl
mov
test
filds
sbb
clc
jbe
pop
jp
add
cli
shll
add
mov
and
add
mov
adc
fmul
loope
popa
jp
nop
inc
aas
xlat
popf
incl
lret
mov
in
rcrb
mov
rclb
out
pusha
pop
dec
ss
xorl
sarb
roll
push
dec
loop
push
cli
inc
rcrb
ljmp
add
loopne
dec
insl
add
xor
xchg
or
add
pop
jae
shrb
jne
add
sub
add
push
jnp
cs
sub
add
push
ss
and
add
outsl
mov
dec
add
sbb
jmp
jne
or
add
jb
and
fbstp
mov
sbb
popf
jp
std
sub
pop
inc
pop
cmp
pop
add
xchg
sbb
sbb
aas
ja
or
lret
mov
add
ret
int
dec
mov
xchg
inc
divb
sbb
popfw
add
pop
movsb
sarb
arpl
sahf
sbb
inc
xchg
push
push
push
ret
xchg
add
outsl
and
inc
fildl
sbbl
xor
hlt
pop
sbb
xlat
pop
inc
and
sbb
cmp
test
sbb
mov
cs
adc
popf
mov
dec
fisubl
inc
jge
mov
xor
loopne,pt
lcall
call
inc
add
pop
jb
adc
push
and
sbb
sarb
insl
mov
ljmp
cltd
popa
cmpsb
adc
arpl
mov
adc
lcall
xchg
add
or
mov
pop
call
leave
nop
sbb
add
dec
pushf
out
daa
push
cmp
push
xchg
mov
jno
shlb
imul
pop
cmpsl
lret
xor
mov
daa
dec
pusha
sbb
xor
xchg
subl
sub
jl
test
fisubrs
nop
mov
xor
in
cs
dec
and
movsl
add
in
add
fnstsw
mov
sarl
sbb
xchg
push
adc
add
mov
dec
mov
das
or
cmp
negl
hlt
js
aam
lret
test
or
pop
leave
cmp
popf
add
mov
int
or
jge
xchg
and
cmp
add
ja
shrb
pop
call
stos
add
inc
or
xor
cltd
in
pusha
push
scas
or
jnp
jecxz
lret
pop
xor
mov
ret
adc
jne
cmpsb
mov
sub
jae
mov
mov
mov
xchg
js
add
movsb
adc
xchg
clc
xor
lds
pop
jo
cmpsl
das
add
xchg
in
inc
xchg
sbb
and
mov
mov
push
sti
jp
push
dec
adc
addb
xor
je
adc
aas
mov
push
mov
fadds
nop
jmp
mov
xchg
flds
cwtl
dec
sarl
add
arpl
add
inc
xchg
lds
push
or
popf
push
fwait
cmpb
pop
mov
mov
pop
test
mov
pop
roll
dec
psubusw
lcall
mov
pop
clc
sub
adc
inc
add
addr16
sbbb
in
out
mov
pop
lds
cwtl
lock
pop
sbb
and
push
cmp
cmp
xor
in
xchg
inc
add
sbb
push
int3
xchg
xlat
cwtl
bound
xchg
cmc
xchg
sbb
std
adc
cwtl
push
sbb
data16
icebp
sbb
xor
add
sahf
jno
jne
and
add
cmpl
imull
rcrl
add
sbb
add
xchg
mov
add
cmpsb
hlt
fdivl
jg
cmp
mov
jmp
cltd
aad
jmp
add
sub
xchg
dec
mov
icebp
or
dec
sub
or
dec
inc
mov
or
shlb
push
mov
add
dec
and
xorb
in
xor
or
mov
mov
jmp
in
mov
mov
dec
movsb
add
xlat
cmp
stos
add
fisubs
add
pushf
les
inc
xchg
add
insl
negb
add
dec
sahf
iret
jmp
xor
xor
inc
and
arpl
rcrb
jge
add
pop
lods
hlt
je
add
js
ret
adc
xor
movntq
jns
or
aas
addb
popf
adc
cli
or
es
mov
push
scas
enter
lock
or
mov
movsl
jl
add
sbb
xchg
mov
orb
cmp
cmp
add
fists
push
js
std
sub
mov
add
test
adc
mov
mov
sbb
push
inc
add
xor
xchg
rorb
lret
repz
add
iret
ss
movsl
add
rorb
cmp
test
push
jno
add
push
ret
shr
lret
in
pop
mov
mov
scas
out
mov
adc
xchg
or
fsubl
pop
add
out
jns
and
cmp
loopne
rorl
jecxz
mov
mov
mov
fldt
aas
out
adc
enter
adcl
inc
inc
lds
xchg
outsb
addr16
mov
aaa
and
adc
inc
cmp
ss
pop
inc
mov
add
aaa
dec
xchg
xchg
or
add
inc
and
loopne
dec
nop
rcl
adc
aaa
lcall
jecxz
pop
xchg
cmpsb
add
fildll
andps
add
xor
push
iret
fsubl
cmp
mov
sub
inc
cmp
mov
addb
fldt
xchg
add
dec
lods
inc
inc
hlt
jnp
add
inc
or
ja
add
jle
mov
push
jbe
leave
jecxz
adc
sub
mov
in
les
fnsave
dec
add
arpl
fs
xor
dec
dec
or
push
jmp
lret
pop
sahf
dec
add
and
es
add
mov
add
jmp
adc
add
shr
gs
mov
mov
and
jg
add
push
lods
mov
ja
test
aas
or
inc
daa
sub
fbld
in
mov
aam
mov
out
adc
jb
loope
add
adc
or
and
xlat
call
stos
cmpsb
int
add
pop
xor
adc
mov
sbb
xor
add
xor
jb
lret
jp
add
jnp
orb
xchg
xchg
add
in
scas
pushf
add
jle
shr
and
test
sbb
hlt
sbb
add
xchg
mov
jg
pop
repnz
add
xor
sbb
cmp
lods
inc
dec
daa
jo
add
sbb
mov
fcmovnbe
pop
adc
add
add
inc
out
jle
les
ja
loopne
es
and
cmp
addb
mov
test
mov
cmpl
jb
mov
ret
add
xchg
mov
fidivs
in
movb
jg
adc
sarb
mov
pop
sbb
lock
sbb
roll
enter
or
add
mov
loopne
xchg
out
mov
xor
push
out
inc
shr
add
pop
xlat
or
xor
pop
lcall
jmp
dec
xchg
add
popa
and
inc
jle
jbe
add
mov
test
mov
mov
inc
scas
addr16
sbb
int
pop
mov
xor
mov
jns
jnp
ja
jne
fistl
add
mov
hlt
dec
cmp
cmpsb
sarl
mov
out
add
pushf
mov
cmp
mov
sbb
test
lods
adc
in
insl
xchg
adc
adc
movsl
shll
les
xor
inc
add
out
test
in
add
pop
or
push
adc
sbb
pop
daa
push
out
push
sub
pushf
jbe
mov
adc
repz
xchg
adc
mov
int3
push
cmp
mov
and
stos
clc
hlt
scas
pop
lret
add
mov
pop
in
push
mov
push
and
adc
imul
add
mov
sub
inc
xchg
adc
loope
adc
dec
hlt
fs
add
xor
inc
xor
in
push
sbb
cmpsb
or
push
add
mov
mov
inc
scas
fwait
gs
cwtl
shlb
fdivr
and
mov
shrl
mov
jbe
add
mov
dec
scas
add
mov
dec
inc
pop
xor
add
stos
daa
faddl
movsl
dec
push
xchg
fidivs
add
push
xor
add
xchg
adc
scas
flds
and
adc
inc
sbb
xchg
bound
std
xchg
mull
mov
sub
push
sub
int3
nop
xor
aad
pop
sbb
xchg
or
ja
test
sub
pop
hlt
add
adc
mov
scas
into
mov
xorb
clc
mov
imul
std
mov
sbb
test
inc
out
and
xchg
sti
aad
cmp
and
push
cmp
das
loopne
sbb
or
dec
cli
pslld
out
mov
cld
add
xor
ror
push
xor
sbbl
fadd
ds
and
cs
adcb
pop
or
jecxz
lock
ret
inc
in
mov
mov
out
sub
mov
fs
xchg
add
mov
mov
pop
addb
cmp
das
mov
lods
std
mov
mov
movsl
test
sahf
les
jae
es
je
jbe
inc
and
xchg
int
jo
mov
imulb
cmpb
push
inc
rolb
ret
xchg
jbe
push
sub
add
rcll
dec
pop
cwtl
mov
push
mov
insb
add
mov
es
mov
pop
push
psubsb
adc
imul
sub
add
repnz
jp
inc
lret
loop
add
mov
loopne
or
push
stos
icebp
fsubr
loopne
cld
jo
fcmovne
mov
mov
faddl
cld
sbb
mov
push
push
insl
aas
je
mov
inc
cmp
jo
pusha
adc
in
pop
shrb
add
subb
imul
outsl
inc
loop
push
lock
loope
dec
jno
insb
les
or
stc
sub
jne
jbe
mov
movsl
add
ljmp
int3
cmp
xor
dec
imul
addr16
mov
mov
rol
sbb
aam
test
loope
xlat
faddl
fimuls
ljmp
ret
add
add
mov
lods
add
arpl
inc
sbb
mov
pop
clc
mov
sti
pop
push
neg
cmp
mov
and
ss
ljmp
mov
cltd
push
andb
sbb
adc
and
bnd
xor
xor
pop
sbbb
insl
xchg
cld
push
pop
pop
adc
or
loope
inc
sarb
dec
pop
add
jnp
push
pop
cmp
fnsave
jle
fdivrl
add
jae
fwait
shrb
xchg
sbb
pop
daa
mov
jp
fstp
mov
iret
gs
cltd
xorb
pop
in
cltd
xor
clc
mov
hlt
add
add
popa
rolb
into
jb
fidivrs
inc
ret
sub
cmpb
pop
test
cwtl
xlat
adc
cmp
mov
iret
sbb
and
pop
shrb
into
xchg
push
mov
or
xchg
loopne
mov
loop
mov
push
es
inc
call
xor
mov
xchg
rolb
fsubrs
iret
push
jno
cmp
xchg
inc
cli
dec
add
pop
stos
out
push
push
jno
add
lods
ror
pop
inc
sub
mov
das
ss
add
adc
jle
add
test
jnp
cli
inc
push
cmp
fcompl
jg
inc
js
jl
jne
pop
push
add
movsb
pop
jge
mov
or
sbb
fwait
push
std
add
inc
jp
or
cld
out
add
xchg
ss
shrl
mov
ret
add
ja
push
push
lcall
jp
mov
jmp
pop
cltd
xchg
mov
and
and
pop
out
jmp
fcmovbe
add
or
add
sbb
mov
mov
insb
mov
sbbb
cmp
sahf
hlt
push
and
mov
xor
add
imul
push
sub
pop
or
jne
fisubs
std
inc
mov
outsl
fiaddl
mov
rolb
mov
jne
sti
cmp
icebp
int3
in
xor
add
in
bound
and
shlb
mov
pop
xorb
adc
sbb
jmp
mov
rorl
add
out
fbstp
jp
lret
cmc
jmp
cwtl
fldl
or
or
inc
je
add
fwait
push
idiv
rcrb
popa
add
shrl
cmpsl
stos
jbe
add
fs
lret
lcall
mov
pop
xchg
bound
popa
sub
xlat
jo
mov
sahf
enter
fsubrs
scas
fidivrl
ja
clc
js
xchg
decb
fucom
pusha
adc
outsl
add
dec
cs
fs
sub
push
mov
js
mov
or
and
add
sbb
imul
cmc
push
sub
add
fcomps
push
add
push
mov
sub
loop
or
fdiv
loopne
mov
cmp
repnz
adc
rclb
pop
xlat
add
fisttpll
dec
sub
sub
inc
rolb
and
inc
test
sahf
aam
inc
repz
add
xchg
inc
lds
cmpsb
jp
in
xor
jnp
gs
stos
rolb
shrb
add
leave
loop
mov
sub
add
mov
pop
mov
add
mov
or
ds
add
adc
push
fidivrs
in
xchg
loope
mov
inc
mov
or
add
jae
xchg
fcoml
fsubs
mov
push
movhps
outsb
cmp
cmc
rcrl
addb
push
sub
lret
mov
mov
stos
add
imul
imul
cmp
hlt
inc
mov
pop
enter
loopne
inc
mov
fabs
sub
negl
call
loopne
dec
shrl
clc
lea
cmc
or
xor
mov
mov
mov
fildll
or
cmpsb
xorb
addl
push
lahf
out
jns
push
add
mov
rcll
hlt
inc
pop
add
mov
stc
cmp
repnz
iret
fldt
add
cmp
pop
and
xor
sub
movsb
fincstp
or
push
inc
inc
lods
stc
pusha
ds
and
mov
or
insl
xor
add
sub
test
jb
adc
sbb
cmp
sbb
add
cmp
xor
xor
push
pop
jb
mov
data16
inc
in
dec
adc
daa
lock
inc
sbb
add
jecxz
dec
add
mov
jg
out
add
pop
cmpsl
mov
insb
push
mov
push
pop
loope
mov
mov
in
add
call
loopne
add
add
and
repnz
lcall
outsb
pop
mov
in
add
adc
cmp
xchg
lods
adc
addr16
inc
pop
push
aaa
xor
out
add
mov
in
sub
cwtl
out
mov
daa
push
shlb
data16
subl
push
mov
push
push
push
mov
sub
add
pusha
mov
cs
cmp
sub
aaa
cmp
push
movsb
dec
xchg
mov
jbe
dec
ret
call
xor
or
sarb
insb
and
iret
dec
nop
add
in
mov
aaa
and
nop
test
add
in
rcr
loopne,pn
push
lahf
dec
xor
rorb
and
add
call
sbb
leave
shlb
sbb
cmpb
nop/reserved
lret
js
in
fsubl
mulb
add
in
pop
add
xor
shlb
mov
cmp
insl
and
jmp
add
repz
dec
daa
jb
add
fs
add
xchg
lods
add
pop
movsl
add
adc
setns
aaa
push
jns
or
pushf
inc
cmp
sbbb
inc
notl
or
das
dec
and
dec
aam
add
inc
xorb
lds
pop
add
fwait
dec
in
sbb
nop
insl
sub
mov
mov
push
int
pop
mov
xchg
shlb
pop
fs
test
mov
or
mov
in
jbe
sahf
in
dec
jmp
and
psllq
popf
sbb
cld
push
leave
or
and
out
pop
add
or
sub
pusha
pop
push
sbb
shr
xlat
aad
mov
popa
mov
imul
mov
mov
addb
icebp
or
pop
cli
aaa
andb
or
xor
push
jno
push
fst
mov
pop
cmpsl
add
test
pop
mov
adcb
xlat
mov
and
xor
add
jo
xor
xlat
sbb
and
cld
xchg
stos
shlb
jle
arpl
mov
test
add
sarl
adc
adc
add
sbb
adcb
inc
stos
add
push
add
jno
les
mov
orb
mov
inc
out
xchg
xor
shrb
ds
data16
add
pop
hlt
test
xchg
or
push
pop
jp
in
adc
add
loope
cmp
dec
enter
pop
mov
add
mov
loopne
shrb
scas
stos
rol
enter
or
rolb
pop
cmp
mov
and
xchg
xor
and
lods
test
dec
mov
enter
push
in
adc
lods
and
cmp
ljmp
rolb
dec
orb
inc
jbe
push
sbb
push
xchg
add
push
push
sbb
aas
pushf
in
subb
mov
and
mov
test
sbb
add
dec
scas
add
jb
daa
ljmp
pushf
out
dec
jecxz
setae
lock
push
mov
sbb
popa
dec
pop
dec
mov
cwtl
inc
fstps
add
js
scas
add
hlt
dec
add
inc
sbb
and
mov
in
ror
ret
pop
dec
cwtl
rolb
les
cmp
mov
gs
mov
pop
sub
xchg
mov
pop
xor
js
icebp
adc
ss
cmpsb
imul
aaa
add
out
jo
outsb
es
rolb
test
gs
aas
into
pop
xor
add
mov
push
mov
mov
lods
jge
pop
stos
add
fwait
cli
jbe
xor
mov
push
scas
aad
lret
add
dec
add
pushf
js
add
sub
or
push
repnz
lock
pop
push
push
sub
inc
cmpsl
mov
and
lods
mov
push
sub
inc
and
sub
xor
rolb
sarb
add
sub
add
call
int3
add
shlb
shlb
jle
or
xchg
pop
incb
xor
push
les
lds
in
inc
cmc
outsb
dec
mov
fwait
mov
test
inc
adc
scas
clc
push
pop
jns
loopne
sbb
outsl
cmp
lret
stos
fwait
sti
testl
adc
dec
add
mov
outsl
jmp
lds
pop
push
call
mov
adc
popf
adc
mov
mov
adc
dec
roll
push
xchg
je
cmp
and
arpl
cmc
movsb
stc
mov
add
add
les
sbb
or
or
inc
mov
add
enter
pop
or
jae
roll
pop
stos
enter
es
add
push
inc
sbbl
ds
xor
mov
lock
add
js
loope
sub
insb
gs
leave
xorb
xor
cld
mov
sbbl
test
or
es
lock
push
lods
or
sbb
jl
jg
sbb
out
ja
or
mov
push
les
lods
or
insl
mov
jmp
lcall
inc
sbb
shll
sub
cmp
sub
xor
lret
out
icebp
in
cmp
and
sbb
insb
add
xchg
mov
jb
push
dec
nop
adc
adc
jmp
mov
rcr
pop
pop
adc
lods
adc
add
mov
cltd
mov
call
rep
daa
js
pusha
pushf
loope
mov
aam
pop
xchg
pusha
sar
dec
das
fdivl
pusha
or
dec
add
add
negl
push
add
mov
xchg
mov
jae
dec
mov
ja
adc
dec
or
and
add
lods
test
push
xor
adc
mov
push
mov
pusha
lea
add
sti
jge
jbe
in
mov
xor
pop
sub
jbe
jns
js
xchg
insl
add
inc
push
xorl
push
mov
push
sbb
int
mov
fists
inc
adc
addl
enter
push
ss
add
imul
sarb
divl
sbbl
add
jmp
mov
push
mov
jg
xchg
das
shr
jo
test
add
push
pop
mov
punpckhdq
mov
rolb
ffree
add
or
add
mov
jle
push
lahf
jmp
jp
sub
fwait
jl
cli
inc
ss
jb
mov
jae
and
add
jg
cmpsl
xor
icebp
add
or
mov
xor
cli
jle
lds
xor
nop
lods
orl
jns
sbb
add
jnp
jg
lock
aad
roll
hlt
mov
adc
add
push
push
and
lods
call
cmp
cmp
rcrl
shrb
dec
fs
dec
mov
lea
pop
xor
or
mov
mov
dec
push
repnz
pusha
and
pop
test
mov
push
imul
xchg
repz
jge
xor
mov
sarl
cmp
imul
shrb
and
or
out
jo
fadds
sbb
inc
and
out
shl
pop
xor
pop
leave
add
sarb
ret
sti
mov
scas
mov
add
mov
jnp
and
add
ss
hlt
xchg
neg
jle
push
adc
cltd
inc
je
or
or
push
and
xchg
push
cmp
incb
add
pop
rorl
cmpsl
loope
push
cs
je
adc
fs
sti
adc
cmp
cmp
mov
or
pop
stc
cld
add
std
pushf
add
hlt
fwait
js
or
test
xlat
daa
popa
test
shl
mov
fwait
mov
jo
popf
add
sbb
lahf
or
add
das
inc
mov
xchg
add
pminub
ja
out
xchg
imul
shlb
sub
mov
inc
sbb
movsb
call
mov
xor
add
lea
loopne
jno
cmpsb
mov
or
or
pop
jo
jns
enter
jp
add
dec
cmp
lret
test
hlt
sub
adc
in
neg
in
dec
cmpsb
pusha
xor
mov
inc
or
pusha
test
pop
and
in
cmc
pushf
cli
add
int3
sar
fstpl
add
in
cmp
jmp
loope
push
mov
dec
mov
std
scas
addb
mov
mov
movsb
call
stc
sub
ja
mov
into
adc
nop
fimuls
xor
pop
jnp
xchg
adc
and
add
loopne
popa
fisttps
dec
in
mov
add
adcb
cwtl
lret
pop
mov
pop
inc
mov
ds
and
repnz
mov
mov
push
and
imulb
jmp
fsubl
test
pushf
xchg
jae
sbb
xchg
jnp
in
sub
add
and
leave
test
add
dec
mov
add
orb
fs
cvtpi2ps
cmp
xchg
or
rolb
jl
rclb
mov
add
out
fstps
pop
and
xchg
push
add
pop
dec
mov
inc
pushf
mov
push
in
and
addl
add
cmp
xor
lret
and
andb
inc
adc
add
sbbb
adc
mov
xor
in
out
sbb
add
add
iret
mov
cwtl
mov
add
mov
pusha
cmp
adc
mov
or
js
insl
sub
or
mov
add
mov
rol
xor
mov
int
sub
or
rolb
sub
popf
lret
mov
xor
mov
push
adc
jno
sbbb
mov
fisubl
adc
and
mov
add
add
jecxz
int
call
xlat
mov
adc
icebp
push
ror
repnz
test
sbb
jle
in
inc
lds
and
add
hlt
cltd
add
adc
add
jecxz
push
fld
pop
sub
mov
or
rolb
add
out
ret
add
xor
and
mov
push
pop
cmpl
test
es
testl
sub
add
nop
sbb
pop
cmc
mov
loope
adc
push
popa
gs
ficompl
jns
mov
sub
and
add
cmova
fwait
shl
jnp
add
call
xchg
aas
repnz
arpl
pusha
out
mov
add
push
cs
aad
loopne
push
cli
adcb
insl
gs
sbb
xchg
imul
jmp
mov
into
sub
xchg
add
lea
test
mov
add
fcoms
jb
dec
and
add
jae
or
push
call
roll
movsl
test
cmp
clc
inc
scas
mov
dec
incb
std
mov
xor
into
ret
fsubrs
scas
xchg
sarl
xchg
mov
sub
daa
loopne
dec
xchg
outsl
add
cmp
lea
adc
mov
pop
add
nop
js
push
and
insl
popf
fadds
leave
ret
xor
lods
mov
lds
cld
mov
mov
fcomps
dec
add
add
xor
add
addr16
orl
jl
add
sbb
pusha
test
aas
sbb
cld
push
xchg
sbb
push
jbe
sub
data16
sti
ret
imul
add
mov
xchg
lret
xchg
cmpsl
jo
mov
test
push
mov
mov
pop
scas
cmp
call
stc
pop
push
fsubs
pop
mov
mov
nop
and
gs
enter
add
test
fwait
out
data16
add
add
cmpsl
and
shrb
int3
leave
inc
in
xchg
pushf
les
ficomps
bound
rcr
loop
add
sti
mov
mov
adc
mov
xchg
and
dec
pop
data16
dec
add
mov
adcb
jmp
in
sub
mov
jp
out
inc
cltd
sbbb
cli
pop
adc
outsl
xor
js
sbb
js
fdivl
add
push
push
nop
dec
pop
test
mov
enter
add
aas
cli
filds
pop
mov
push
push
push
mov
jle
xchg
icebp
pop
nop
sbb
push
adc
out
push
call
jl
pop
mov
dec
mov
ret
dec
xor
xor
pop
sti
adc
gs
push
add
add
rcrl
subb
fisubs
out
push
mov
stos
sbbl
mov
insb
enter
nop
sbb
dec
mov
pop
mov
dec
sbb
lock
cmp
repnz
out
mov
sbb
adc
loope
add
mov
add
arpl
adc
and
dec
imul
jge
daa
outsl
add
insl
lcall
aas
movsb
jo
inc
sbb
addr16
movsb
mov
xchg
add
scas
call
xor
push
lret
add
mov
mov
aam
xor
mov
testl
xchg
popa
inc
test
lock
jmp
mov
sub
inc
pop
aas
push
add
jb
clc
xor
mov
nopl
imul
add
xchg
push
mov
rcrb
sub
aad
dec
add
xchg
sub
ds
xor
pusha
dec
xchg
leave
xor
js
mov
inc
ror
push
pusha
adc
inc
enter
xchg
loop
and
cmpsl
xchg
outsb
or
out
add
jno
jb
and
sub
movsb
pop
mov
xlat
xchg
pop
and
dec
stc
stos
clc
mov
pcmpgtb
jno
jl
or
jb
inc
xorl
and
mulb
push
movsl
js
add
mov
or
pop
push
inc
pop
mov
in
mov
daa
pop
and
test
inc
sbbb
xchg
loopne
or
test
dec
mov
adcb
arpl
add
add
fiadds
insb
add
and
int3
imul
push
inc
xchg
scas
out
cmpsb
add
or
sbb
aas
xchg
cltd
lods
in
inc
add
mov
jmp
outsl
or
shl
jp
std
push
push
fucomp
pop
sub
sbb
lods
xchg
ret
pop
sbb
cmp
lock
pusha
jmp
cmp
xchg
shlb
xor
fsubrp
add
imul
sbb
ja,pn
mov
and
mov
xchg
and
fs
or
jp
or
jbe
adcb
inc
call
add
in
sbb
mov
sbbb
sbb
subb
clc
outsl
add
loopne
movsb
jae
xchg
loop
inc
pusha
add
in
leave
pop
dec
sbbl
or
sbb
cmpsb
inc
jnp
loop
add
shr
aas
ja
mov
pop
push
dec
inc
or
mov
fsts
out
dec
add
and
nop
add
fnstcw
mov
pusha
int3
clc
jmp
add
stos
aad
notb
roll
mov
push
sub
add
in
sub
addb
lods
xor
pop
add
push
mov
cltd
add
push
push
mov
int
clc
add
push
insb
push
call
add
bnd
pop
out
add
pop
mov
loopne
pushf
push
gs
out
xchg
call
jbe
imul
std
incl
int3
fmuls
xlat
inc
add
in
xchg
add
jl
mov
and
pop
shlb
movsb
in
rcl
pop
add
adc
add
or
push
inc
lods
dec
add
add
push
pop
aas
add
add
sti
cltd
dec
hlt
das
jmp
xchg
cwtl
out
rorl
cmp
inc
xchg
shlb
pusha
jns
jb
jp
dec
push
cmp
pop
fistpl
adcl
cmpb
mov
mov
pop
lea
sub
sub
arpl
iret
mov
cli
stos
je
adc
stos
lods
jne
sbb
xchg
xchg
roll
adc
pop
adc
adcl
sbbl
add
pushf
aad
push
scas
bnd
in
roll
pop
mov
incb
out
sub
pop
data16
movsl
and
push
in
test
insb
faddl
jo
add
xor
sbb
xadd
loope
jmp
add
lock
pop
push
add
jl
dec
repnz
or
mov
sbb
xchg
mov
lods
fimull
jbe
addl
movsb
std
adc
mov
mov
jge
hlt
in
flds
add
add
ret
and
adc
jle
rolb
sub
push
push
add
in
lahf
inc
addr16
mov
sar
lcall
add
or
xlat
jg
and
lahf
add
mov
stos
mov
call
add
movsl
jge
sbb
into
lea
loopne
dec
stos
pop
aad
je
xchg
mov
iret
fbld
mov
mov
jo
inc
push
pop
test
sbb
je
cmpsb
jb
adc
nop
imul
popf
add
push
loop
add
addr16
decb
add
pop
sbb
call
rorb
test
js
cmp
add
je
jmp
cmc
lods
or
adc
push
in
mov
stc
mov
movl
inc
cmpb
imul
xchg
clc
pop
ss
cwtl
or
xchg
mov
and
lods
push
xchg
xchg
js
jg
jl
xor
sbb
movsb
add
pop
mov
scas
mov
mov
ja
adc
adc
sub
inc
mov
jecxz
adc
dec
in
mov
data16
sbb
iret
inc
adc
mov
adc
shlb
cwtl
movsl
add
test
sub
mov
lcall
daa
imul
les
add
cwtl
sbb
push
leave
stos
add
nop
cli
icebp
and
mov
sub
and
clc
loopne
add
imul
add
cltd
rclb
cmp
inc
adc
pop
pushf
fmuls
or
fisttpll
and
sbbb
pushf
or
hlt
adc
test
adc
or
dec
in
push
enter
rcrb
cmp
add
lds
add
mov
and
aad
cmp
mov
and
and
sbb
cld
add
orl
test
push
xchg
add
xor
imul
and
in
add
xchg
xor
add
int3
push
rcrl
and
in
adc
pop
push
dec
or
add
mov
add
mov
jl
call
mov
dec
insl
push
idivb
adc
xchg
sub
rolb
movsl
cld
mov
add
rorl
filds
inc
inc
pop
es
inc
pop
aaa
mov
cmpsb
out
xchg
pop
pusha
push
repz
inc
sti
lock
push
xlat
fwait
cmp
sbb
nop
imul
rol
sub
jns
pop
imul
add
jle
aad
jne
add
push
bound
add
push
andb
cmc
adc
mov
out
pushf
mov
arpl
stc
mov
data16
lahf
inc
sub
shlb
add
inc
sub
mov
lcall
push
fsubl
add
pusha
xor
add
aad
adc
add
out
or
popf
sbb
das
mov
mov
xor
insb
push
inc
imul
mov
xchg
fcomi
pop
push
rolb
push
out
inc
imul
push
into
xchg
sub
or
jle
pmulhw
jbe
sub
fstps
add
call
or
xor
dec
in
sub
cli
jb
inc
nop
or
dec
and
adcb
mov
inc
add
call
lods
leave
aaa
insl
inc
pop
testl
icebp
push
push
repnz
add
leave
pop
pop
scas
add
add
js
xchg
pop
fdivr
xor
ds
add
dec
stc
jne
xor
push
xchg
fldenv
add
test
pop
xlat
clc
jg
add
mov
and
repz
pop
lods
call
movsb
stos
test
das
sub
adc
lret
pop
loope
rcrl
in
dec
add
xchg
ljmp
adc
int
aad
icebp
lock
or
pusha
sub
nop
mov
pusha
push
add
xlat
or
add
inc
es
pop
movsb
add
mov
mov
cltd
je
mov
in
addr16
add
pop
sbb
call
lahf
out
aad
xor
inc
int
jnp
cmp
add
outsb
insl
mov
stos
pop
cli
add
inc
sub
add
imul
add
mov
add
adc
jae
dec
adc
add
push
mov
cmpsb
call
add
sbb
in
pop
aad
ret
cmpsl
lret
inc
or
sbb
dec
iret
adc
xor
outsb
aam
cmp
push
rorl
daa
gs
scas
add
xor
in
incb
pop
cpuid
push
jecxz
shl
xchg
cltd
push
dec
outsb
sub
mov
xchg
les
add
rclb
arpl
push
dec
pop
push
inc
add
pop
sbb
add
je
sahf
shlb
mov
cmp
gs
clc
jbe
xlat
sub
xchg
xchg
add
jns
push
inc
and
in
addl
pop
aam
andb
add
mov
into
pusha
mov
insl
inc
add
shr
fs
out
call
fmuls
insb
lods
mov
add
shll
ss
jge
sbb
stc
xchg
add
mov
les
sarb
pop
js
fdivrs
rcl
jge
ljmp
imul
sar
jne,pt
sbb
adc
pop
filds
inc
jle
adc
jge
cmovnp
cmp
aam
div
inc
add
loopne
fists
inc
cwtl
sub
push
dec
das
jns
popf
mov
pop
pushf
lods
pop
mov
mov
pop
into
sahf
add
xor
shll
mov
cmpsb
mov
loop
mov
push
gs
lods
sbb
insb
ja
jnp
mov
jecxz
inc
aaa
sbb
push
inc
data16
inc
xchg
enter
cli
orl
aad
daa
pop
es
js
add
push
add
loop
jl
jmp
and
into
push
sbb
ljmp
inc
add
jo
inc
dec
fdivrp
add
iret
jnp
or
pop
mov
sbbb
mov
sahf
dec
sti
lock
mov
fs
jns
add
adc
or
mov
add
cmp
push
mov
pop
jp
add
shrb
and
hlt
push
and
adc
div
jo
pop
mov
or
mov
adc
dec
rcrl
pusha
jp
or
ds
sub
xlat
push
mov
sub
in
xchg
lahf
std
aam
xchg
jne
pop
add
and
loopne
pop
add
mov
add
inc
xchg
sbb
pop
loopne
loopne
and
gs
jg
pop
cmpb
xor
sbb
pusha
add
enter
or
jl
in
add
int
mov
push
repz
dec
jmp
fsubl
mov
dec
filds
push
cmp
in
xor
add
rorl
fs
add
mov
jle
xor
cs
stc
cmpl
lds
sbb
inc
xchg
add
stos
mov
dec
pop
add
rclb
lds
jmp
mov
sbb
orb
lahf
jbe
orl
mov
lods
cs
inc
mov
fs
cmp
in
pop
dec
ja
xor
xchg
pop
cwtd
movsb
inc
sbb
outsl
lods
cmp
mov
aas
xor
clc
mov
xchg
or
jne
xlat
inc
cmpsl
and
out
jo
and
inc
mov
dec
clc
out
adc
pusha
fneni(8087
and
mov
or
add
push
repnz
scas
jne
fistpl
jo
sub
push
xchg
adc
aad
push
test
push
int3
mov
add
inc
xchg
insl
add
pop
pusha
and
and
movl
pop
cld
sub
add
outsb
lret
movsb
xorb
mov
xchg
adc
scas
je
push
cli
add
decb
add
ja
iret
adc
xchg
int
lods
mov
rsm
inc
shr
mov
repnz
xchg
cmp
push
xlat
ja
dec
scas
cs
js
sbb
sti
cmp
add
dec
or
stos
or
nop
cmp
fs
add
xchg
fnsave
arpl
xchg
std
bound
add
rorb
out
mov
int3
clc
mov
xchg
sub
pop
lahf
mov
pop
fwait
sub
add
stos
mov
dec
or
int3
aam
add
das
sub
pop
xor
enter
or
xchg
into
nop
test
xor
ret
mov
rclb
int3
push
cli
out
xor
xor
dec
add
sub
mul
sub
pusha
enter
je
mov
dec
mov
or
add
icebp
idivb
add
sub
jae
out
or
xor
js
and
xchg
es
inc
xchg
cld
out
sbb
pop
add
push
sub
rolb
cmp
scas
add
cmp
ds
add
outsb
test
je
jb
sub
sbb
ret
test
pop
dec
jb
add
es
loop
data16
int
lfs
or
stos
jae
pop
imul
push
dec
loopne
and
lcall
cmp
xlat
jno
shlb
adc
sbb
ds
rcll
cltd
push
cvtps2pi
lods
sbb
inc
scas
add
inc
sbb
xor
cmp
pusha
xor
nop
xchg
jecxz
outsb
push
inc
jl
ds
push
mov
test
and
jne
mov
addr16
mov
inc
sub
push
sbb
popf
cwtl
mov
inc
mov
jnp
xor
mov
adc
sub
sub
xor
xor
in
inc
mov
or
inc
mov
xchg
leave
pop
pop
jmp
mov
xchg
and
or
shlb
data16
imul
add
das
jp
push
mov
repz
pop
push
cli
mov
or
adc
test
dec
adc
jecxz
push
fs
add
ja
clc
add
andb
mov
cmp
mov
inc
mov
inc
mov
scas
out
and
cmpsb
int3
add
into
ja
or
nop
jns
add
jg
fsub
subb
dec
in
loope
or
mov
adc
testl
test
xchg
stos
cmc
bound
xor
into
jne
mov
jmp
mov
cs
xor
add
outsl
push
ss
iret
in
xchg
add
loopne
cmp
jg
add
cmpsl
xchg
add
gs
inc
test
inc
pop
push
dec
lret
into
lock
push
lock
loop
mov
test
les
int3
pop
div
cwtl
cmp
out
cld
int
pushf
orb
inc
inc
or
sbb
fdivrs
xchg
sub
loop
add
jecxz
shrl
sub
cmp
jl
gs
movsb
add
lock
add
pop
lahf
repz
mov
loope
loopne
loope
aam
and
movsl
mull
cmc
dec
xchg
movsb
add
jae
sbb
pop
sbb
pushf
adc
inc
int
and
or
push
das
mov
bound
in
popa
adc
add
sbb
test
fisubl
add
jns
and
push
sbb
ret
add
mov
or
sbb
add
arpl
in
mov
add
cmp
test
or
xchg
push
lods
je
inc
xchg
daa
rclb
rep
jae
roll
lahf
repnz
cmp
movsl
fs
jo
sub
pop
add
cmc
ret
mov
loopne
mov
mov
inc
and
js
add
aam
cmp
test
mov
and
repnz
fsts
adc
jp
or
jne
dec
add
fwait
jle
add
mov
mov
add
data16
cmp
les
add
lcall
imul
sub
daa
mov
call
xchg
cmc
leave
add
mov
fs
pop
bnd
mov
add
and
fisttpl
gs
rolb
rolb
pop
cmp
lret
loope
outsb
push
fs
add
ret
shlb
je
push
nop
sub
daa
outsb
or
mov
mov
mov
cmpsb
adc
mov
fadds
sbbb
movsb
into
sbbb
jne
lock
incb
or
jae
stos
jge
stos
xchg
pusha
xor
add
mov
icebp
cs
cmp
jp
xchg
and
lds
sbb
or
outsb
ficoml
jo
popl
out
movl
insb
fcomps
cmp
jne
fcom
and
mov
ja
lods
test
cmp
mov
sbb
mov
sub
cmp
sbb
jo
mov
jnp
sarb
jae
cmovae
fildl
ret
aad
int3
push
inc
fsubp
pop
out
cwtl
pusha
cmp
xlat
mov
inc
sbb
out
rcrl
sub
into
inc
sti
jns
adc
int3
rolb
or
js
or
in
outsb
mov
ss
add
ja
push
enter
inc
cmp
push
inc
int
pop
es
insl
inc
movl
icebp
rorb
jmp
add
ljmp
insb
add
cmc
ss
movl
arpl
ds
movsb
mov
rolb
mov
out
test
cmc
icebp
add
cwtl
loop
or
jg
fdivs
dec
or
cwtl
xor
subb
in
in
push
cmpb
add
cmp
sbb
xchg
insb
rolb
scas
loope
icebp
loop
pop
add
orl
xchg
incl
int3
xchg
out
jmp
push
mov
or
imul
add
cs
ss
add
cli
cmp
test
add
sbb
mov
ljmp
jnp
add
push
add
xlat
add
add
mov
push
lock
inc
dec
cmp
ret
mov
push
movsb
mov
add
and
arpl
sub
inc
add
cmp
ds
and
adc
scas
jne
lds
test
push
ss
ja
sysret
dec
cmpsb
inc
and
add
sbb
adcb
pop
sub
or
add
mov
movups
testb
add
mov
sti
imul
sub
sbb
add
cwtl
dec
push
out
xor
addl
xor
stc
cmpb
mov
and
out
sbb
lret
adc
out
cld
add
add
pushf
inc
add
out
and
add
xlat
jne
aaa
ret
in
orb
loopne
imul
cs
jne
mov
subl
lcall
adc
dec
xchg
mov
cmp
dec
outsl
and
cmp
or
jle
sub
cmp
and
loope
pop
dec
push
imul
mov
sbb
and
out
adc
mov
add
dec
mov
jecxz
adc
arpl
test
pop
jbe
add
in
popf
ja
sbb
mov
sbb
jg
add
jne
inc
aaa
xor
out
incb
xor
lods
int
mov
es
sti
out
add
or
cmpb
push
pop
repz
add
ret
cmp
mov
inc
ljmp
add
xchg
repnz
std
movsl
cmp
mov
push
jmp
addb
pop
fs
cmp
push
insb
aaa
cmpsl
xor
call
pop
sbb
xchg
dec
jbe
fs
lret
cmp
mov
xor
test
jne
das
in
ficompl
or
add
insl
shl
mov
rcll
pop
mov
add
popf
aaa
ja
fimuls
daa
sbb
mov
and
mov
mov
push
xchg
cmp
add
repnz
or
adc
sbb
pushf
add
js
rcll
add
out
jmp
xor
jbe
mov
dec
adc
pop
add
xor
sbb
cmp
loopne
add
cli
jb
add
aas
in
pop
xor
adc
xor
sarl
adc
fimull
pop
sub
aam
stc
int
stos
shlb
adc
jp
add
fs
cmc
ret
push
add
sub
dec
xor
das
loopne
or
imul
pop
mov
scas
add
push
test
push
jnp
jbe
sub
popf
dec
mov
jg
fisttpll
andl
mov
pop
rorb
pop
xor
addl
cmpsb
xchg
fs
add
stos
je
sub
push
cmpb
out
sub
jns
stos
in
aam
call
adc
push
loopne
jo
or
gs
inc
pop
nop
jnp
lods
pop
ja
xor
jmp
addb
dec
mov
xor
pusha
rorb
push
popa
sar
lods
pop
jg
add
sub
rcrb
fcoml
xchg
inc
fistl
mov
pop
push
add
sbb
mov
add
and
pop
cmp
sbb
or
xor
jnp
or
or
out
hlt
adc
clc
cmp
test
repnz
pop
add
popa
mov
push
mov
cmp
lods
or
adc
rcrb
add
push
mov
cmp
cmp
imul
cld
xchg
test
pop
inc
pop
add
jae
sbb
clc
xlat
push
shlb
lea
sub
mov
add
idivl
mov
lock
push
push
mov
pop
rorb
dec
dec
dec
jmp
lea
push
call
cltd
sbb
loope
je
loop
sub
mov
lods
jbe
jl
outsb
insl
ja
add
sub
push
call
popf
push
jmp
push
aam
out
xorb
mov
faddl
add
lods
nop
fstpl
add
jnp
out
add
cltd
add
mov
inc
dec
ds
addb
adc
test
push
sbb
mov
jo
pop
lds
and
test
jmp
xor
pop
mov
mov
test
add
mov
aam
dec
xchg
mov
es
inc
add
adc
aad
cmp
bound
cmp
mov
repz
add
mov
dec
sub
lods
ss
push
mov
jl
add
notb
mov
push
in
into
sub
das
add
lahf
pop
ljmp
fldl
mov
add
sub
shr
loope
mov
mov
mov
mov
cmp
out
jo
dec
adc
pop
push
aam
add
mov
cld
mov
rcl
inc
push
popf
scas
lret
push
mov
cmpsl
enter
imul
sbb
or
ds
mov
popa
cmp
add
inc
sbb
mov
sbbb
mov
add
mov
add
inc
out
ror
test
add
xor
mov
js
shll
pop
hlt
jmp
push
nop
cmp
in
jno
add
cmp
jecxz
jle,pn
loopne
aaa
rorb
mov
sarb
xchg
add
dec
mov
mov
add
or
push
pop
out
cmp
sub
pop
sti
and
push
test
popa
jle
adc
rclb
add
loope
data16
add
push
into
js
adc
push
je
inc
out
push
outsb
or
cmpsl
jbe
add
dec
shlb
mov
sbb
loope
and
jbe
xchg
mov
inc
imul
mov
cs
push
add
cltd
pop
xchg
inc
test
cmp
push
mov
xchg
cs
test
push
add
pop
pushf
xor
cwtl
popf
nop
mov
fsubrl
jo
data16
test
dec
emms
adc
or
jg
subb
add
cmp
add
mov
jp
fcompl
into
or
pop
jmp
fdivs
add
hlt
sub
cli
in
out
lods
jmp
subb
sub
out
loope
inc
and
mov
in
lea
sub
out
push
mov
xor
push
loopne
pushf
jge
xor
jbe
stos
inc
xchg
ss
lahf
fbld
or
shl
sub
dec
in
push
leave
add
pop
push
fnclex
mov
add
sahf
xor
fidivl
adc
inc
pop
push
jns
adcb
pop
int
mov
sub
int3
push
cmp
adcb
jmp
inc
addl
fildl
xor
jo
pushf
adc
cltd
add
jmp
out
daa
arpl
ljmp
lods
xchg
into
jne
nop/reserved
and
clc
push
jmp
sub
idivb
pop
fstl
loopne
in
fiaddl
les
test
jmp
in
adc
mov
sub
sbb
add
daa
push
orl
adc
inc
ljmp
loop
insb
xorb
jnp
ja
and
mov
js
js
es
sub
add
faddl
jg
fistpl
mov
xor
out
in
int3
mov
icebp
shrl
nop
cwtl
mov
sub
pusha
or
mov
ret
mov
xchg
pop
ja
and
mov
je
inc
xchg
fmuls
sub
outsb
mov
rorb
or
sbb
aaa
loopne
insl
push
xchg
repz
mov
add
xchg
xor
fisttpl
sub
add
or
fs
outsb
idiv
pop
scas
mov
mov
cmpsl
lods
dec
ljmp
mov
iret
xchg
cmp
cmp
fwait
sub
fadds
lea
push
and
pop
repnz
loopne
jmp
mov
lcall
pop
scas
insb
push
cwtl
fs
xchg
dec
popf
fmuls
hlt
cmpb
mov
xchg
mov
repz
call
xchg
xchg
out
nop
mov
dec
inc
ljmp
rol
jo
add
lds
in
ret
mov
arpl
loope
test
or
dec
dec
outsb
add
daa
sahf
test
sub
fcmovnu
imul
mov
popf
insb
xor
stc
fisubrl
add
mov
adc
xchg
insl
push
inc
and
idivb
mov
inc
push
sbb
rolb
mov
or
leave
jo
hlt
shlb
movsb
ja
inc
repz
dec
mov
sbb
in
jp
adc
repnz
cmp
clc
mov
mov
xor
adc
aas
pop
add
xorl
ss
test
xor
inc
inc
lds
pop
cmpb
sbb
jecxz
cmp
add
mov
push
orl
or
adc
dec
xor
pop
xchg
and
add
jmp
mov
leave
sbb
sbb
stc
ret
jno
mov
add
pop
or
in
mov
das
repz
test
inc
xchg
push
hlt
sub
sbb
xchg
icebp
sbb
pop
movsb
int3
add
cmp
push
adc
pop
lahf
push
out
mov
rcll
and
mov
sub
add
jp
add
push
inc
fdivl
and
sbb
leave
mov
iret
and
sbb
stos
lret
mov
jno
add
and
sbbb
hlt
pop
cmpsb
sbb
push
xchg
test
mov
xchg
pop
pusha
call
jg
sahf
pop
add
xchg
fisubs
shlb
shll
adc
jnp
leave
js
inc
sbb
or
clc
mov
sbb
or
call
mov
jg
pop
push
arpl
sub
fnstsw
lcall
out
push
xor
dec
ret
push
cld
xchg
adc
sbb
or
out
dec
sbb
shlb
push
mov
jnp,pt
inc
in
fsubrl
jecxz
ds
filds
or
xchg
sub
inc
cld
cwtl
outsl
jo
push
arpl
jl
imul
lahf
js
xchg
add
ds
sub
cmp
mov
adc
test
mov
enter
addr16
add
dec
sub
cmp
add
popl
mov
dec
adc
mov
adc
mov
sbb
lods
inc
incb
imul
es
add
inc
test
jnp
dec
jl
mov
leave
xchg
jecxz
popf
mov
icebp
adc
or
test
dec
lahf
cmpsb
push
pop
stos
or
mov
and
xadd
sub
sub
in
inc
or
cmp
sbb
inc
sbb
adc
leave
push
icebp
xchg
cmp
aas
subb
sub
mov
int3
sub
mov
imul
xor
popa
add
push
sbb
push
pop
mov
inc
adc
sub
fucomi
nop
pop
mov
daa
rcll
andl
ljmp
movsl
adc
pusha
leave
ja
lahf
jnp
or
int
push
xlat
pop
dec
xchg
mov
sub
enter
pop
faddl
add
call
xlat
leave
add
iret
mov
lock
add
cmpsl
inc
xor
push
sub
fdivl
aam
xor
inc
cmpsb
add
std
mov
and
cwtl
out
xor
out
inc
mov
xor
mov
cmc
inc
les
mov
test
cmpl
lret
out
add
mov
sbb
pcmpgtw
aas
dec
out
or
mov
xor
in
outsb
test
lea
mov
addr16
mov
xchg
push
sti
cmpsl
dec
aam
lcall
repz
sbb
fisubrs
jp
and
inc
nop
jnp
sub
nop
hlt
jle
sahf
fwait
int
pop
mov
gs
pop
js
xor
push
int3
mov
inc
mov
mov
push
loopne
pusha
into
adc
push
cwtl
lahf
add
mov
ds
pop
cmpsb
xchg
in
push
xchg
inc
add
hlt
xor
push
pop
ds
mov
fwait
test
leave
add
ljmp
cs
shlb
rolb
and
aaa
fidivrs
sbb
mov
mov
xchg
decb
call
pusha
pop
enter
insb
mov
push
and
add
push
or
incl
sbb
mov
leave
sub
nop
xor
ljmp
jle
cmpsl
mov
xchg
stos
push
rorb
mov
push
push
repnz
and
imul
sub
or
jp,pt
add
jl
add
adc
mov
inc
push
jecxz
pushf
sbb
jge
lea
stos
xor
out
mov
into
adcb
jo
fiadds
ss
cmp
cs
addb
push
cmp
sub
jle
std
loop
dec
lock
push
xchg
xchg
cmp
rorl
testl
mov
nop
clc
cmpsb
or
xchg
in
mov
mov
cwtl
xchg
mov
mov
pusha
sub
adc
mov
xchg
dec
adcb
xchg
xchg
dec
add
or
mov
repz
mov
lret
pop
stc
enter
loop
dec
xchg
loop
insl
pop
pop
lret
push
jmp
mov
push
mov
je
sbb
inc
mov
xchg
scas
push
cmc
pop
imul
and
cwtl
out
push
lret
pop
movsb
mov
add
roll
and
in
cwtl
and
insb
adc
xchg
pop
rolb
xor
xchg
clc
dec
cwtl
add
mov
insb
inc
cltd
cmpsb
push
xor
cmp
sub
nop
adc
addb
or
adc
mov
rol
outsl
xor
sub
sub
mov
repz
xchg
mov
insb
xor
sbbl
nop
adc
sub
inc
and
out
add
pop
ficoml
fwait
mov
popf
or
sbb
es
mov
sbb
dec
sbb
or
imul
shrl
adc
out
jno
xchg
in
push
sbb
add
add
or
movsl
fdiv
mov
push
bound
loopne
dec
pop
sub
add
adc
int3
adc
jnp
notb
add
mov
xchg
xor
and
inc
test
pop
xchg
add
in
mov
sub
add
pop
pop
sbb
mov
push
mov
push
jne
enter
imul
add
lcall
aam
or
push
inc
sbb
add
cltd
adc
mov
inc
pop
inc
pop
es
and
mov
jp
clc
sub
sbb
movb
pop
shrb
sbb
fidivl
bound
jg
cmpsb
call
nop
adcb
enter
adc
push
add
xlat
push
xor
or
add
sahf
je
loop
and
xor
mov
mov
in
dec
cmp
or
fmulp
push
js
inc
rclb
and
push
or
sub
sbb
jbe
mov
adc
fmull
pop
mov
movsb
out
jl
inc
jnp
jo
dec
dec
sub
and
mov
in
orb
cmp
xor
pop
mov
jb
andb
and
sbb
jno
mov
rcrl
ljmp
in
call
popa
push
add
ss
int3
cld
xchg
add
dec
sub
cmpsl
repnz
adc
sbb
adc
lock
xchg
lret
cwtl
push
and
movb
or
dec
mov
push
push
add
cs
pop
mov
add
pop
das
inc
cmpsb
jl
iret
dec
and
mov
xor
je
jnp
bnd
nop
movsb
mov
lds
loopne
mov
mov
aas
lock
and
scas
mov
cmp
pop
fwait
gs
loop
sub
add
cmp
adc
outsl
leave
add
mov
mov
icebp
dec
and
sbb
push
nop
inc
sti
mov
std
ret
push
scas
cmpsb
adc
xor
fisubs
pushf
and
xchg
dec
les
mov
and
pushf
push
divl
imul
jns
add
fists
cld
add
and
loopne
pop
rcrl
sbb
push
sbb
sub
lock
add
pop
lahf
adc
mov
sysret
xchg
loop
repnz
push
xchg
cltd
fs
sbb
loopne
adc
inc
jge
pop
xor
in
jnp
or
cmp
insb
cmpsl
cmc
sahf
mov
repnz
shrb
sbb
adc
dec
xor
pop
or
add
aam
jl
adc
lock
pop
xchg
cmp
movsb
or
inc
xchg
mov
add
or
mov
inc
xchg
hlt
mov
and
repnz
push
mov
xchg
mov
adc
xor
mov
sbb
add
insb
dec
dec
pop
jg
sub
ret
adc
addb
adcl
orb
xchg
sub
xlat
loop
test
dec
sbb
xor
mov
pop
inc
sbb
or
mov
lahf
stc
mov
xor
mov
lods
push
mov
pop
or
jo
nop
ja
and
mov
movsb
adc
jbe
les
aas
add
xchg
pop
ret
and
push
fldl
add
cmp
pop
lahf
dec
jg
mov
pop
sbb
xor
push
cmp
xchg
add
sub
jmp
add
xchg
cs
into
mov
sub
cwtl
mov
sbb
jg
repz
cmp
sub
loopne
fiadds
xchg
mov
inc
leave
daa
sbb
shrl
adc
push
add
loope
andb
cld
pop
jne
mov
jg
shrl
lock
xchg
xchg
lods
adc
xor
dec
insl
cwtl
mov
inc
cwtl
repnz
dec
lock
add
jg
or
dec
stos
jb
xor
xchg
inc
aas
push
and
or
lods
nop
push
out
loopne
iret
push
outsl
dec
add
in
xor
add
add
jb
sti
sub
xor
adc
sbbb
add
les
add
push
orb
jg
ror
call
mov
add
das
js
pop
dec
mov
gs
inc
nop
test
out
cli
or
ret
ret
dec
ljmp
movsl
cltd
cmp
and
push
sbb
adc
and
dec
rorb
jb
dec
mov
fbld
in
sub
scas
test
xchg
inc
out
js
adc
les
jb
add
std
xchg
faddl
out
xor
mov
mov
adcl
aas
xchg
nop
mov
in
add
loope
and
sbb
pop
sti
pushl
add
push
push
and
dec
adc
cwtl
sub
iret
sahf
adc
xor
add
push
dec
add
mov
clc
rcrl
adc
dec
adc
pop
andb
enter
repz
cmp
xchg
mov
dec
cld
pop
cmp
ret
mov
sub
dec
jb
or
xchg
mov
dec
mov
add
aad
inc
pop
vpermilps
sbb
sbb
pusha
mov
or
fcoml
push
jge
add
cmpsb
lock
shrb
inc
adc
insb
inc
xchg
stc
jl
or
xor
fisubl
adc
into
add
test
add
shlb
and
mov
inc
daa
sub
jmp
lock
orb
inc
pop
popl
lods
mov
mov
lcall
mov
push
repnz
pop
push
data16
int3
les
push
jne
xchg
inc
inc
fnstcw
test
shrb
lods
adc
addb
mov
xor
jno
add
or
fsubrl
mov
daa
les
add
pop
je
add
push
sti
xor
rep
js
neg
and
cmp
adc
inc
int3
adc
xchg
cld
adc
mov
sbb
inc
addb
xchg
jmp
data16
dec
jg
ds
push
sbb
imul
cmpsb
sub
leave
lret
lock
dec
mov
and
push
enter
ds
loopne
filds
mov
push
cs
xchg
out
sbb
inc
ds
jl
sub
add
incl
arpl
xchg
mov
hlt
loope
add
lock
add
cmp
sbb
mov
aam
mov
sbb
cmp
movsb
fadd
pop
add
adc
add
xchg
add
dec
test
setl
mov
xchg
cmpsb
push
rorb
fisttpl
mov
movsl
add
andl
push
xchg
jns
enter
mov
aas
jno
and
movb
xchg
and
xor
in
add
mov
and
add
pop
xor
rcrl
xchg
mov
sbb
cltd
xchg
jo
ljmp
repnz
push
pop
movb
aas
dec
add
shll
aam
mov
hlt
add
mov
mov
xchg
les
and
inc
cwtl
leave
or
pop
pop
insb
xchg
cmp
add
mov
jbe
roll
lds
les
mov
sbb
mov
sbb
or
jmp
int3
add
shrb
loope
mov
cltd
fsubrs
dec
rorb
or
test
sub
test
xchg
scas
mov
aas
pop
icebp
add
sbb
cmp
mov
mov
cmp
or
and
lret
push
sub
fadds
xor
xorl
pop
sbb
xchg
inc
push
int
pusha
inc
push
js
push
lock
ret
icebp
lcall
jno
mov
roll
push
pop
cmpsl
hlt
cmp
andb
gs
ljmp
cmpsb
xor
push
int3
pop
insb
mov
outsl
jp
xor
push
and
test
push
sbb
scas
xor
and
je
popl
sub
mov
pop
sti
push
or
mov
sub
roll
pop
pop
mov
leave
add
out
call
popa
cmpsb
les
in
xchg
es
adc
push
loopne
sbb
pop
repnz
cmpsb
adc
inc
loopne
fidivrl
ljmp
mov
jns
fisubrl
jl
jne
add
pop
pop
js
addr16
push
enter
sbb
xchg
mov
pusha
add
sub
xlat
icebp
arpl
rorb
mov
pushf
add
pusha
sti
notl
mov
sub
adc
hlt
pop
pop
stos
add
push
adc
pusha
inc
aas
xor
xchg
fistpl
push
shlb
bswap
add
out
nop
lahf
movsb
add
push
enter
test
lret
out
pop
jo
jno
push
subb
jo
sbb
loop
and
out
sub
push
xchg
aam
xor
bound
daa
mov
out
nop
pop
inc
cmp
push
mov
stos
inc
data16
dec
or
jo
add
xchg
punpckhbw
push
or
imul
adc
fmuls
mov
add
and
repnz
lret
pop
mov
outsl
les
and
pop
push
push
inc
cmp
cmpb
dec
hlt
inc
jg
popf
es
push
lahf
sbb
imul
jge
sbb
cmpsl
cwtl
add
or
in
gs
adc
nop
pop
hlt
mov
lock
add
dec
fimuls
fs
out
mov
and
cld
insl
fs
pop
popf
aad
lcall
jl
ret
adcl
sahf
jecxz
repz
cmp
xor
sub
arpl
cmp
sbb
pop
aad
mov
adc
jo
adc
loope
xor
mov
sub
add
inc
jnp
je
fwait
mov
repz
inc
sub
in
cmpsl
push
add
xchg
push
dec
arpl
js
idivl
push
pop
gs
in
push
subb
mov
mov
xchg
loopne
stos
or
sbb
int
shlb
lds
rorl
pop
add
mov
dec
roll
mov
add
adc
add
jge
jp
movsb
mov
addr16
nop
adc
lahf
or
sbb
repz
push
xchg
int3
daa
fists
out
add
popf
jp
sbb
mov
in
pop
add
ss
sbb
mov
std
enter
jb
cltd
fcompl
bound
notl
and
and
and
je
cld
in
cmc
sbb
pop
inc
hlt
sti
xchg
shl
add
cmp
aad
sub
sbb
loope
mov
mov
test
sub
or
incl
cmp
fisubl
insb
xchg
add
mov
add
cmp
repnz
cmc
mov
cmp
iret
movsl
add
sub
scas
daa
dec
cld
int
cmp
adc
xor
cmp
stos
add
push
in
and
sti
mov
or
add
sub
arpl
fnstcw
hlt
inc
pop
or
cmp
ret
adc
push
cs
addb
inc
add
sbb
imul
in
rolb
add
push
lahf
scas
mov
cltd
movsl
sbb
sub
subl
xchg
jg
sub
data16
adc
mov
rolb
shll
inc
in
loop
imul
std
cli
mov
and
in
sub
sbb
pushf
xor
imul
add
test
adc
push
mov
rcl
and
dec
dec
leave
mov
lds
arpl
rcrb
lock
xchg
pop
loopne
or
jmp
fs
pop
add
add
xor
xchg
outsb
out
jo
arpl
pop
pop
lock
sub
std
in
sub
sub
add
aam
or
or
or
add
add
jmp
xchg
sti
aad
pop
sbb
mov
fnstcw
dec
xor
lods
enter
jp
add
sub
cmpb
mov
sub
and
mov
add
mov
pop
cmp
das
or
add
in
cmp
aas
addb
inc
adc
push
aas
sbb
pop
sub
cmp
insb
mov
scas
or
rcrb
out
add
je
or
add
add
pop
int
dec
sub
shll
xchg
sbb
gs
adc
push
mov
mov
lahf
add
xor
pop
jl
or
dec
sbb
iret
push
rcrb
int3
inc
jns
add
dec
cs
and
or
fisubrs
int3
push
ljmp
push
bound
bswap
adc
pop
mov
loope
mov
mov
ss
push
into
mov
inc
adc
iret
shlb
add
clc
cmp
test
mov
pop
and
adc
or
push
jl
loopne
add
xor
addb
aas
pusha
pop
sub
fwait
push
pop
pop
ljmp
dec
inc
xor
add
jecxz
add
out
mov
aam
pop
mov
add
push
adcl
cli
and
mov
xchg
movsl
ds
lret
int3
mov
add
popa
test
inc
mov
test
cmp
sbb
ficompl
or
in
push
out
orb
fisubl
mov
add
and
in
pop
adc
std
pop
push
push
aas
push
pop
test
int3
xor
cmp
out
sbb
test
inc
add
lock
testl
add
add
addb
aam
sub
in
cwtl
add
inc
mov
inc
add
push
jns
sbb
inc
cmp
mov
ds
pop
pop
pop
add
stos
mov
cld
shl
add
filds
sbb
xchg
xor
sub
fisttpll
movsb
add
lds
add
mov
loopne
jnp
cwtl
mov
inc
scas
cmpsb
xchg
fisubs
mov
aaa
mov
cmp
jl
loopne
lock
and
pusha
insb
mov
lret
cmp
mov
jl
movsb
test
xchg
fiadds
fsts
hlt
ljmp
cmpsb
xor
add
es
cli
out
sub
rcrb
pop
or
xor
fnstcw
enter
add
insb
in
mov
mov
mov
cli
call
cmp
cmpb
add
add
push
adc
mov
cmc
push
rclb
mov
pushl
push
add
fldenv
sub
aad
cld
clc
sub
ss
mov
out
add
xor
add
es
push
push
mov
add
push
test
call
sti
pop
fistps
sub
dec
cmc
push
jl
ret
enter
dec
cmp
imul
sbb
mov
xor
mov
aam
and
std
iret
enter
or
ror
add
or
mov
sbb
movsb
jbe
insb
cld
rorl
pop
xor
pop
shll
and
jne
add
xlat
pop
ret
js
or
inc
push
aaa
in
sbb
cmp
fs
ja
mov
inc
push
xchg
jge
pop
js
ret
push
add
mov
cmp
or
in
add
sbb
sbb
push
iret
enter
cmp
xchg
or
mov
dec
pop
sub
loope
ficoml
popa
cli
call
iret
and
fsubl
out
jb
je
push
pop
xchg
inc
push
pop
pop
add
outsl
adc
sub
out
fsubrl
arpl
pshufw
jmp
int3
pop
cli
incb
imulb
xlat
scas
push
mov
and
push
push
addb
inc
test
out
cmpsl
push
test
imul
js
lret
mov
inc
add
mov
loope
lret
jl
adc
scas
xor
call
addb
dec
jo
xor
push
and
lcall
pushw
push
fwait
or
pop
sbb
push
xor
inc
dec
pop
jns
sbb
je
fstl
ss
or
mov
xchg
sub
xchg
cmpsb
sub
std
mov
dec
pop
sbb
cmp
cs
or
or
or
out
roll
sbb
and
scas
xchg
or
and
loop
lahf
inc
add
sbb
push
mov
lret
icebp
push
fildl
mov
cmc
mov
repz
imulb
mov
rolb
xchg
loopne
cs
loopne
pop
mov
test
punpckhdq
push
or
and
out
push
lock
inc
cltd
shlb
in
out
pop
mov
movsl
sub
inc
loopne
sub
inc
or
push
lds
add
mov
jle
lret
dec
mov
push
popf
sbb
mov
add
xchg
into
add
insb
push
jno
pop
cwtl
insl
pop
add
mov
push
in
jge
sub
sbb
and
add
lods
xchg
fildl
roll
push
enter
push
add
icebp
call
adc
mov
mov
lret
pop
adc
mov
mov
pushf
push
lods
es
add
aad
pop
add
adc
add
adc
es
paddsb
fstps
mov
mov
fmuls
cmp
add
call
pop
nop
add
jo
sti
sub
cmp
pop
test
inc
rcrb
add
cmpsl
sbb
stos
lds
cltd
pop
popf
pop
inc
sahf
in
leave
rorb
insb
sbb
fisubl
shll
mov
ret
sbb
shrd
cltd
and
push
add
rolb
add
add
addb
int3
xor
flds
cltd
pop
insb
imulb
inc
add
in
or
mov
lock
xchg
in
push
loopne
xchg
scas
je
orl
es
hlt
xchg
or
ds
loope
lods
rolb
pop
xchg
add
pop
scas
movsb
enter
lock
mov
mov
mov
rcl
and
iret
adc
mov
add
or
xor
sub
enter
jl
push
cmpb
int
mov
nop
out
adc
add
fxch
repz
ljmp
pop
loopne
negl
add
iret
and
mov
ljmp
or
and
psrlw
mov
cwtl
sbb
ret
enter
rolb
lock
jnp
cwtl
fstpt
in
std
addr16
mov
test
inc
sarl
hlt
loopne
dec
mov
pusha
lea
mov
pop
push
adc
xor
cmp
leave
jo
add
sbb
ret
lcall
enter
xchg
sbb
add
cs
ret
add
jmp
and
add
call
nop
add
jl
jno
xor
inc
addr16
rorl
lahf
mov
clc
test
and
add
sub
dec
enter
outsb
add
dec
icebp
sub
fstps
push
ret
or
sar
int3
push
lsl
test
dec
pop
scas
nop
adc
aad
mov
xchg
dec
xchg
pop
inc
dec
sahf
sub
add
jb
jl
in
sbb
sub
inc
jle
insl
xor
jno
jp
adc
sti
dec
sub
xor
subl
fs
pop
push
fnstsw
adc
mov
notb
add
dec
mov
addr16
mov
push
jae
loopne
xrelease
xchg
inc
insl
lret
push
jnp
pop
loopne
mov
mov
enter
xor
jge
xorb
filds
in
pop
jno
add
mov
pop
addr16
pop
leave
mov
in
push
and
dec
sbb
stc
mov
insl
call
iret
or
push
add
cwtl
mov
add
sahf
out
out
pop
stos
prefetcht1
scas
push
jl
int
push
jns
and
cmp
call
sub
mov
jge
shll
push
call
add
xchg
dec
jecxz
mov
test
xchg
sbb
loope
mov
xchg
popa
jnp
or
xor
add
inc
push
into
test
adc
pop
inc
or
mov
test
inc
aas
mov
push
and
fsubr
xor
mov
pop
mov
inc
hlt
jp
dec
movb
in
faddl
fcmovnbe
jns,pn
popw
aam
pop
sarb
out
cmp
xor
cmp
xlat
mov
in
hlt
in
mov
or
add
xor
pop
pop
xchg
test
add
fsub
pushf
sarb
test
dec
xor
test
push
jl
inc
and
jne
fmuls
sub
repz
js
adc
stos
std
loopne
call
adc
aaa
mov
xchg
xchg
adc
psllw
lods
orb
mov
pop
adc
std
add
out
fs
lea
lods
push
mov
std
incl
scas
enter
stc
add
sbb
out
testl
popf
xor
mov
jbe
sub
shlb
or
dec
pusha
xor
outsb
cmp
xchg
sbb
iret
push
jnp
clc
and
add
stos
push
clc
add
adc
and
adc
and
cld
inc
sub
pop
pop
inc
insb
mov
xchg
xor
mov
or
add
lea
add
dec
inc
push
push
lcall
add
out
enter
sbb
adcl
mov
mov
adc
mov
sahf
shlb
and
jo
jne
enter
add
in
ja,pn
fwait
loopne
out
dec
cld
and
clc
dec
out
vcvtss2si
cld
in
xor
add
stos
repnz
lret
into
pop
test
rorl
loop
mov
jbe
movb
aas
pop
dec
decl
enter
inc
subl
filds
inc
rcl
xchg
and
mov
popa
push
add
mov
mov
repz
adc
lock
aaa
aam
dec
fdiv
push
push
pop
lahf
or
in
jo
sub
jb
add
popf
lcall
out
push
add
iret
cwtl
mov
fbstp
jne
cmp
cmp
pop
insl
rolb
stc
and
add
pop
inc
push
int3
and
adc
ret
scas
xchg
repz
arpl
loopne
xor
push
shll
test
mov
cmpb
or
push
push
add
std
sahf
xor
dec
clc
adc
mov
ljmp
or
inc
pop
int
inc
or
jl
push
push
jp
mov
jno
imul
xor
push
add
daa
loop
das
dec
pop
adcb
cmp
lds
jne
or
jle
pop
mov
aam
or
sbb
inc
mov
mov
bound
sub
dec
lea
inc
or
imul
scas
push
or
mov
push
shl
dec
hlt
lds
or
mov
mov
xor
mov
bound
jns
xor
cmp
mov
and
roll
bound
jmp
push
addl
push
mov
xchg
add
dec
jae
enter
and
adc
pause
pop
je
rclb
rolb
or
mov
mov
or
mov
sbb
sarl
and
xchg
inc
add
out
add
outsl
outsb
jle
lods
movb
negl
xor
cmp
cmp
movsb
push
xchg
mov
mov
test
fcoml
and
push
adcb
inc
insb
cmp
ss
cltd
loopne
sub
add
mov
enter
out
faddl
testl
and
loopne
loopne
xor
mov
cmp
add
je
fcomip
call
scas
ja
test
js
add
aam
loopne
ljmp
insb
adc
adc
cmp
cmp
iret
adc
or
enter
sub
add
repnz
cmp
pop
mov
add
cmp
out
xchg
in
dec
push
int
and
pop
es
push
sub
outsl
fisttpll
pusha
add
cmp
imul
pop
mov
and
mov
dec
call
dec
inc
xor
orl
adc
std
xor
xor
and
mov
add
es
data16
add
loopne
dec
lcall
add
test
sub
mov
mulb
insb
call
in
ret
ret
add
cmpsl
lcall
pop
dec
and
lahf
fnstcw
shll
std
mov
mov
xor
bound
add
lea
cmp
sbb
mov
lock
cmp
int
dec
add
mov
loope
cmpsb
shlb
mov
or
leave
and
outsb
xlat
add
call
add
repnz
mov
add
or
xor
clc
push
gs
inc
roll
cltd
loop
add
lahf
adc
decb
aaa
fdivrs
push
xchg
js
icebp
in
add
leave
in
xchg
cmp
xchg
repz
fisubs
sub
aam
aas
xor
popa
lods
sbb
inc
adc
leave
cltd
inc
mov
sbb
mov
mov
add
or
roll
outsl
inc
pop
jp
aam
test
xlat
cmp
scas
js
mov
out
cmp
mov
pop
mov
loopne
adc
cmpxchg
lahf
sbb
inc
push
or
mov
inc
add
aas
jbe
adc
inc
adc
pop
mov
push
test
stc
fwait
lret
xor
adc
fbstp
mov
cmp
nop
push
pop
ds
mov
and
add
dec
lea
fsub
and
sub
loop
call
fcoms
jno
add
inc
jbe
ljmp
flds
nop
add
ja
pop
sub
adc
mov
xor
stos
mov
imul
movsb
add
pop
add
lea
int
clc
addl
and
and
loopne
aas
lods
aaa
and
and
dec
bound
cli
leave
jmp
dec
cwtl
jns
add
inc
mov
cpuid
dec
fisubs
jl
mov
movsb
jbe
add
cmp
pop
xor
pop
jb
lds
mov
adc
or
addr16
fcoms
inc
sub
cmp
jb
push
movsl
loope
or
mov
lds
sarl
faddl
xchg
and
inc
adc
out
lock
imul
jae
add
and
sub
shlb
mov
xor
jnp
mov
pop
nop
test
jne
push
add
adc
test
or
add
push
sbb
push
push
scas
add
hlt
movsb
lahf
xchg
popa
pop
mov
ret
xor
mov
das
adc
sub
cli
into
mov
xor
pop
and
bnd
test
xchg
mov
test
pop
or
sub
or
or
das
push
or
push
stos
ja
out
pop
push
out
cmpsb
mov
sbb
or
stos
int3
cmpsb
aas
add
insb
sbb
call
stos
loope
out
sub
inc
xor
pop
lock
inc
dec
movsb
dec
jns
xor
cmp
push
jne
push
or
in
rclb
shrl
add
jge
xor
xchg
and
cmp
scas
add
cmc
pop
push
sahf
ss
test
loopne
add
adc
test
or
push
add
lods
pusha
push
push
pusha
addb
sub
jnp
call
or
popa
icebp
dec
mov
lock
mov
add
daa
sbb
and
xchg
test
lds
bswap
dec
pop
push
fs
das
orb
cwtl
mov
dec
sbb
shl
mov
add
fcompl
mov
sub
add
sbb
sbb
dec
inc
xor
nop
jge
pop
mov
add
jo
push
mov
jo
hlt
mov
hlt
ljmp
out
inc
lock
inc
fisttpl
popa
inc
pop
push
jne
xor
mov
push
bnd
add
mov
je
lds
inc
xor
xchg
xchg
in
loopne
xor
sbb
pop
dec
mov
add
icebp
shrb
inc
mov
pop
outsl
inc
jne
pushf
push
pop
js
push
push
dec
mov
cli
sahf
inc
adc
shl
test
mov
jb
and
jns
daa
mov
outsl
scas
cli
in
addb
movsb
push
inc
loopne
pop
popl
add
mov
xor
fmull
sub
mov
and
hlt
sub
adc
push
xor
mov
nop
add
test
xchg
xchg
leavew
and
out
outsl
fcmovu
test
and
adc
mov
test
push
mov
test
fistps
aaa
xor
movl
push
dec
pop
mov
sahf
les
pop
inc
sbb
in
ljmp
jmp
cmpsl
icebp
sbb
pop
push
pop
into
lods
andb
arpl
add
mov
dec
rolb
loope
pop
push
or
inc
sbb
xchg
aam
or
jg
repnz
insb
mov
xor
push
pop
jp
dec
mov
push
movsb
dec
push
add
js
les
add
pop
dec
loopne
mov
or
mov
xor
adc
add
lods
mov
cltd
inc
dec
add
dec
add
mov
jl
imul
sbb
add
adc
shl
sbb
test
and
stos
xchg
sbb
mov
out
shl
mov
add
jne
test
sbb
add
fsubs
inc
clc
stos
cmpl
sbb
iret
aaa
icebp
mov
fcoml
movsl
and
movsb
out
rclb
inc
jae
mov
sub
jns
and
dec
testl
pop
and
lcall
push
mov
cs
ficoms
add
cmp
cmp
cmp
test
mov
mov
jg
push
xor
or
rolb
out
push
orl
addl
pop
push
inc
pop
pop
scas
jb
add
adcb
push
lahf
lret
stc
lock
mov
pop
and
add
incl
and
dec
ljmp
add
repz
andl
mov
pcmpeqb
cmp
add
push
ret
aam
jno
or
mov
lret
adc
cli
stc
clc
cmp
inc
lock
mov
test
hlt
inc
add
insl
cli
lds
pop
aam
sub
add
sbb
adc
cmp
shr
adc
jnp
lcall
sbb
push
sub
inc
xchg
add
cld
sahf
mov
pusha
inc
subl
cmpsl
addb
rcll
pusha
testl
ds
fmull
xchg
dec
lret
int
rolb
data16
inc
add
mov
loope
mov
mov
pop
insb
fmuls
inc
lock
dec
repnz
and
dec
rorl
ds
fdivl
jl
bound
push
xchg
and
aam
inc
push
fildll
sbb
add
mov
loopne
cmp
add
dec
sub
nop
lahf
imul
clc
xorb
lret
push
jge
ret
cmp
dec
push
stos
lods
jg
test
out
ficomps
call
rol
sub
test
fsts
adc
cmp
add
mov
push
cmpsb
dec
aam
rcrb
jnp
pop
mov
or
lock
pop
push
push
cmp
aas
adc
out
push
mov
cmp
test
inc
iret
mov
and
sarb
pop
fldl
popf
icebp
addl
iret
cmp
mov
aas
pop
sbbb
push
cmp
dec
mov
hlt
in
test
sbb
dec
pushf
in
xchg
mov
pop
test
push
push
mov
imul
add
push
inc
sub
jecxz
mov
fcompl
adc
cli
inc
subb
inc
nop
jl
mov
cmc
stos
and
pop
mov
shlb
and
fcompl
cmp
out
add
sbb
push
push
and
and
insb
and
mov
sbb
fwait
add
je
adcb
enter
test
add
mov
mov
or
les
and
int3
aad
add
adcb
sub
cwtl
aam
or
mov
neg
icebp
aam
xchg
iret
add
in
orl
pop
enter
cld
and
pusha
hlt
imul
add
jns
bound
in
adc
push
xchg
or
xor
les
jmp
aas
add
cmp
jb
pusha
jl
push
daa
pop
out
sub
inc
add
mov
push
popf
mov
jmp
xchg
add
pop
mov
and
or
cmp
xor
adc
enter
adc
mov
add
repz
jae
mov
fiaddl
nop
pop
fidivrs
and
rcrb
xchg
out
sarl
test
xor
push
out
dec
in
imul
out
and
in
lock
cmp
add
mov
mov
sub
add
cld
test
dec
iret
jp
das
jb
popa
xor
adc
nop
js
mov
mov
xorb
lods
shrb
pop
xchg
adc
lret
pop
movsb
push
loopne
xchg
adc
test
jmp
cmp
fadd
out
add
mov
or
cmp
mov
xor
pushf
cmpb
test
loope
add
lcall
nop
cld
aaa
jp
add
xchg
dec
repnz
imul
stos
addr16
inc
cmp
lock
rcr
mov
sbb
xchg
sub
and
inc
mov
out
lret
jl
pop
lock
xchg
sbb
scas
and
lahf
insb
add
es
sbbb
or
and
xor
pop
loopne
push
cmp
xchg
aam
shl
adc
or
pop
add
std
iret
cs
into
les
mov
inc
add
pop
mov
and
pop
sub
movb
stos
xor
rolb
addr16
push
dec
adc
add
inc
xorb
dec
leave
sbb
add
or
sub
xorb
and
xchg
push
aam
stos
movsb
cld
popf
adc
cli
add
outsl
or
add
hlt
push
movb
insb
pusha
imul
rolb
and
aam
and
insb
pop
nop
inc
add
fisttps
cmp
loopne
and
cmp
add
popa
mov
adc
ja
pop
dec
es
das
sbb
test
push
test
sub
xchg
pop
pop
filds
outsb
and
dec
les
dec
pop
dec
push
enter
loopne
sub
inc
inc
pop
bound
cmp
add
divb
mov
loopne
and
or
pop
mov
orb
ds
fsubs
andb
mov
inc
inc
cmp
clc
shlb
and
or
aas
mov
pop
adc
lret
orb
cmpsb
sbb
sub
aam
cmp
cli
push
add
xor
leave
inc
add
pop
xchg
daa
and
inc
shrb
les
and
roll
lea
cld
sar
xchg
mov
pusha
addb
mov
repnz
sub
test
xchg
rolb
mov
jl
pop
add
xchg
sub
test
inc
or
and
test
xor
cmp
jo
and
orb
aaa
mov
add
cmp
xsaveopt
jecxz
mov
shr
add
fiaddl
out
int
jne
xchg
clc
inc
addl
cmp
in
fstl
cmp
int3
daa
lock
decb
add
jecxz
sub
out
sahf
xchg
inc
xorl
jmp
xor
sarl
mov
mov
js
fldcw
push
add
pop
cmp
add
adc
pusha
das
and
mov
subb
sahf
shrb
jge
fs
jl
xor
popa
aad
pop
repz
cmp
dec
pop
jne
mov
cmp
cmpsb
xchg
and
jo
lret
add
call
enter
pop
rcrb
sub
loopne
xor
add
jne
pop
sub
add
pop
adc
add
loopne
cwtl
add
xchg
push
pop
shrl
mov
sahf
jle
pop
roll
pop
sub
add
or
and
push
add
lods
mov
add
mov
sbb
hlt
outsb
fildl
push
xchg
popa
dec
lret
negl
add
cmpl
inc
push
addb
jo
pop
xchg
inc
ss
ljmp
pusha
add
loope
push
mov
jo
shll
jbe
push
movsl
push
rorb
add
sub
and
outsl
pop
inc
int3
je
add
xor
add
lahf
test
je
pop
movb
mov
cmp
loope
jbe
jno
cs
or
push
adc
fwait
mov
add
push
mov
cmp
cmp
mov
and
lret
and
cld
adc
and
imul
mov
mov
push
mov
out
push
jp
add
pop
shrl
cmp
and
jns
lds
cmp
imul
out
mov
dec
les
lods
rclb
pop
loopne
rcrb
jnp
xchg
add
test
lods
hlt
inc
mov
mov
shlb
ljmp
add
pop
pushf
xchg
cli
fs
das
mov
fadds
add
sub
add
or
add
xchg
dec
mov
dec
imul
xchg
pop
add
inc
add
roll
clc
je
inc
or
fs
imul
imul
add
pop
jbe
inc
out
push
test
xor
pop
cltd
pop
les
mov
or
test
orb
jl
mov
test
adc
rcrl
test
mov
psraw
mov
add
sub
push
jmp
notb
sub
xor
jnp
cmp
push
lret
push
mov
jl
sub
mov
jle
mov
sbb
push
dec
fs
xchg
sahf
mov
lods
mov
xchg
mov
mov
jo
sarb
jg
out
je
rcr
sub
int3
push
movsb
bound
pop
add
out
lret
and
ror
cmp
jle
rolb
fsubrs
xchg
repnz
push
sbb
sub
es
shll
push
ss
je
inc
add
dec
out
std
jecxz
mov
popa
sahf
sub
mov
and
pop
cmp
les
add
push
pop
test
stos
or
push
cwtl
push
loopne
insl
stc
jno
add
and
cmp
mov
push
rcr
pop
or
test
add
in
loopne
push
add
js
add
sbb
cmpb
cmp
pop
ret
lret
add
aaa
and
ret
cmp
scas
xchg
jno
dec
inc
test
mov
pop
enter
mov
ficoms
andb
fstpl
pop
pop
in
aam
es
hlt
sub
adc
jge
or
pop
sbb
fbld
xchg
cmp
negb
mov
sahf
adc
inc
sub
jbe
jnp
add
dec
push
testb
fmull
cmp
add
gs
cwtl
add
pop
sarb
xchg
add
ficoml
jecxz
shll
jae
add
enter
add
dec
dec
icebp
add
cld
xchg
dec
mov
push
dec
psrld
jmp
jne
test
adc
mov
fsubl
loope
sbb
jmp
testl
std
and
jns
xchg
pop
mov
add
sbb
xchg
int
fmul
adc
add
jl
sbb
sbb
pushf
jo
jnp
adc
xor
lods
cmp
test
and
xor
and
insl
shlb
arpl
in
cmpsb
push
jb
fs
pusha
cmp
jmp
push
mov
stos
js
lds
or
das
pop
mov
rcrl
mov
add
jge
xchg
push
out
add
mov
les
jne
cmp
ret
jl
add
inc
mov
dec
push
xchg
sub
cmp
mov
imul
lret
adc
jp
push
pusha
adc
push
bnd
xchg
mov
xchg
les
fsubr
lret
popf
jo
pop
xchg
fstps
js
aam
pusha
enter
mov
push
push
mov
adc
ret
mov
loopne
notl
sub
sub
les
int
or
inc
mov
xor
adc
ret
call
cmp
hlt
mov
mov
test
pop
or
adc
leave
aaa
inc
mov
dec
add
gs
xor
fldl
dec
and
xchg
adc
clc
loope
push
push
or
adc
add
fimuls
pop
add
mov
and
xor
into
por
imul
sbb
mov
scas
xchg
and
loopne
pop
call
xchg
or
pop
movsl
clc
lock
les
mov
dec
arpl
or
or
or
dec
je
fimuls
and
pop
scas
add
test
mov
mov
jmp
mov
call
push
jb
cmpl
fists
ja
pop
sub
pop
inc
clc
leave
jmp
insb
add
dec
in
mov
roll
insl
call
add
bound
inc
sbb
xchg
adc
mov
fs
add
call
inc
stos
pop
lods
dec
addb
mov
xchg
inc
adc
and
popa
push
in
xor
shll
lahf
arpl
lock
add
pop
mov
out
pop
add
loope
fnstenv
int3
sbb
mov
add
stos
mov
cld
les
pop
pop
stos
mov
add
aas
lods
push
dec
mov
cmp
sbb
jnp
xchg
cmp
xchg
test
mov
test
mov
xchg
push
movb
sarl
or
testl
sbb
or
cld
adc
enter
scas
mov
jecxz
dec
mov
scas
pushl
dec
pop
xor
gs
jbe
push
arpl
add
push
ffree
push
pop
jb
add
out
adcb
jl
dec
mov
add
mov
mov
add
cmpsb
cli
lahf
xlat
mov
dec
stc
hlt
dec
addb
add
lods
ficoms
in
and
add
xor
mov
insb
pop
in
cmp
cwtl
or
test
xchg
in
cld
mov
sub
adcb
add
jae
xchg
mov
inc
pop
cmp
sub
sahf
and
leave
mov
push
fwait
dec
out
in
sahf
outsl
ljmp
mov
sub
into
and
add
test
sbbb
stos
test
jp
gs
inc
dec
repnz
jnp
mov
test
xchg
xor
test
lret
lar
cmp
pop
inc
ret
add
aam
push
hlt
inc
or
cwtl
insl
int3
add
psrlq
andl
shll
data16
dec
fistpll
ja
inc
int
add
and
mov
je
adc
gs
clc
mov
jecxz
ret
push
xchg
add
lcall
or
add
cmp
or
inc
loopne
insl
popw
mov
loope
mov
lret
inc
repz
sub
sbb
push
pop
or
adc
sbb
aam
stos
out
pop
push
movsb
inc
pop
dec
daa
into
mov
js
lahf
pop
sbb
or
or
or
or
addl
sbb
or
inc
cmp
adc
cmp
adc
pop
sbb
jg
fstpt
or
call
pop
scas
dec
sub
enter
or
sub
pushf
lahf
mov
push
add
xorps
ja
ret
push
push
nop
sub
jmp
mov
or
sarl
inc
push
fcomip
inc
popa
and
shlb
mov
xchg
fnstenv
sub
mov
push
inc
fs
xor
mov
insb
testl
push
out
inc
test
bswap
push
xor
mov
fbstp
or
aas
add
add
clc
xlat
aam
lahf
inc
cmp
mov
mov
add
pop
dec
sete
cs
add
xchg
popf
nop
shrb
pop
cmp
ret
push
test
add
pop
in
and
roll
and
int3
push
inc
sahf
pop
add
sarl
xor
adcb
rcrl
mov
cmpsb
sbbl
bound
mov
ret
lods
xor
cmc
lds
in
xor
aam
jle
or
sbb
and
adc
pop
pop
cwtl
add
xor
into
les
faddl
daa
mov
xor
jb
add
jl
add
push
jne
aas
jge
insb
mov
mov
push
js
xor
inc
pushf
imul
addb
push
pop
pop
push
xchg
shl
or
mov
jne
mov
xorb
add
add
shrb
push
dec
mov
mov
add
icebp
pop
cmp
les
sbb
mov
cltd
test
xchg
push
loop
cmp
pop
push
iret
inc
repnz
mov
add
icebp
sub
lock
mov
pop
call
loopne
add
filds
lods
and
jle
push
push
inc
adc
aaa
add
cmc
mov
data16
push
out
jg
cmp
add
sub
rcll
test
xchg
pusha
nop
cmp
roll
faddl
lds
mov
pop
testl
pushf
push
mov
or
shl
adc
fdivrs
pop
push
push
jne
shl
xor
push
add
int
gs
dec
rolb
xchg
jae
cmp
sbb
lahf
popa
les
pusha
stos
and
dec
mov
movsb
movsb
jecxz
and
test
int
add
or
mov
push
call
adc
test
pop
jns
sbb
test
add
and
pop
add
pusha
out
hlt
popa
clc
movsl
add
push
stc
and
pop
stos
sub
call
cmp
inc
mov
inc
add
mov
mov
mov
cmp
fadds
push
mov
adc
xchg
sbb
xchg
ret
or
int3
add
psubusb
add
ss
push
mov
js
pusha
ret
rorl
and
fmul
jno
jne
add
xchg
outsl
cmp
cmp
popa
mov
fistpll
sbb
pop
sbb
test
sbb
out
dec
xchg
lds
pop
sbbl
addl
call
mov
mov
xor
and
xchg
xor
dec
std
mov
rcrl
mull
sbb
dec
dec
test
sbb
mov
in
pop
add
mov
xorl
mov
add
fdivrl
das
cld
sbb
mov
push
sbb
inc
outsl
mov
sbb
xor
jmp
add
cmp
call
or
add
imul
cwtl
xlat
push
gs
int
test
hlt
cmpsl
add
or
std
lret
xor
jle
in
cmp
or
orb
cmpsl
mov
sbb
dec
cmpsb
cwtl
and
into
sbb
mov
sub
xor
inc
fiadds
shlb
loope,pt
pop
xchg
jmp
in
popa
sbb
sarb
nop
addb
lcall
add
pop
roll
xchg
sbb
loopne
xchg
stos
jae
mov
xorb
lock
add
mov
ja
add
pop
inc
mov
and
and
movsb
adc
add
loop
mulb
add
and
jmp
and
rorl
dec
pusha
sub
int3
cld
add
outsb
mov
pop
dec
inc
lods
xchg
jbe
sbb
sbb
push
add
sub
xchg
lds
inc
aad
cmp
arpl
cld
cmpsb
pop
push
sub
push
lret
xchg
push
xchg
jns
add
dec
fisubl
add
and
lret
lods
xchg
xchg
and
inc
xorb
shrb
mov
push
les
push
cwtl
pop
or
sbb
in
mov
movsl
jg
loopne
lss
roll
inc
pushf
push
xorl
or
add
xor
cmp
mov
mov
ds
call
adc
arpl
jns
pop
negl
out
jg
dec
jmp
retw
enter
nop
jp
xchg
iret
in
aas
mov
imul
or
movnti
into
xor
pop
mov
inc
out
jg
in
icebp
inc
popa
mov
scas
or
andb
xor
pusha
mov
rclb
ret
filds
sbbb
cmpsb
cmpsl
xchg
jge
push
in
jae
xor
add
daa
adc
mov
nop
xchg
or
roll
sub
sbb
and
add
loopne
mov
sub
and
mov
ret
movsl
push
ss
xor
mov
lret
leave
add
fs
in
add
dec
dec
orps
repz
fdivl
mov
inc
fs
add
push
insl
jb
fcomip
add
cmp
sub
inc
lahf
roll
mov
sub
xor
fcoml
cmp
rolb
fmuls
adcb
xchg
pop
lock
repz
adc
lock
jno
dec
xor
adc
pop
aas
cwtl
std
sub
mov
or
add
call
je
add
jae
inc
jno
dec
mov
mov
push
cltd
cmp
dec
jb
repnz
mov
mov
add
inc
xchg
cltd
movsl
xor
arpl
cmp
inc
xchg
es
add
dec
pushf
mov
bound
xor
imul
mov
inc
dec
hlt
or
or
dec
movsb
ficoml
add
fucomp
adc
dec
inc
dec
jmp
adc
and
and
inc
jo
dec
or
xor
or
adc
sub
cmp
inc
push
scas
pushf
and
test
ljmp
pusha
inc
dec
test
add
mov
and
scas
jmp
enter
jo
push
add
sbb
bound
or
arpl
add
fsubs
ror
mov
mov
fs
leave
pusha
out
and
lret
sbb
inc
mov
mov
nop
or
sti
sbb
dec
jge
fidivrs
pusha
lahf
call
xchg
add
pop
pushf
add
dec
pop
sbb
xlat
mov
inc
inc
inc
fsubrp
mov
pusha
fisubl
and
jp
out
dec
xchg
xchg
repnz
add
adc
test
add
pop
fmul
pop
ret
aas
outsl
sbb
inc
mov
adc
cmp
loopne
pop
push
or
enter
jg
pop
bound
movsl
stos
pushf
add
pop
inc
pusha
push
dec
add
test
add
xor
cmp
add
nop
jmp
mov
repz
jo
fnsave
enter
das
mov
xchg
rolb
jl
push
add
pop
inc
std
test
fs
inc
shrl
pop
xchg
add
jp
and
jnp
shlb
xor
mov
fwait
add
xor
rolb
adc
push
mulb
add
test
mov
fdivrs
dec
inc
clc
dec
inc
xor
int
or
ljmp
mov
xor
pop
dec
dec
xchg
cltd
je
in
pop
pop
fidivs
lods
adc
inc
and
out
bound
hlt
mov
cmp
inc
pop
add
lret
jmp
mov
add
cmp
mov
insb
sbb
xor
xor
out
mov
xorb
adcl
inc
fbstp
insl
dec
mov
or
faddl
inc
lret
inc
sahf
xor
ds
out
jmp
mov
adc
rcrb
fimuls
add
div
in
jmp
mov
push
addr16
test
inc
xorb
push
mov
push
adc
roll
mov
adc
xor
sbb
mov
push
jnp
faddl
jne
add
mov
out
inc
inc
faddp
or
mov
xor
xorb
clc
testl
repz
gs
inc
sarb
ret
test
sbb
test
or
stc
sahf
add
lea
and
repnz
push
add
cmp
flds
filds
mov
lods
cld
cmp
sub
mov
xorb
xorl
push
adc
pop
mov
cmp
dec
sub
ret
adc
lahf
clc
adcb
mov
aad
shll
mov
call
inc
add
adc
inc
ror
repz
pop
mov
pop
push
mov
push
sbb
pop
in
push
jg
addb
add
sub
add
xlat
or
jmp
inc
mov
mov
mov
fdivrs
push
clc
scas
xor
roll
je
jecxz
rorl
add
inc
jmp
hlt
pop
mov
add
inc
inc
jns
jp
mov
cwtl
xchg
pop
dec
in
inc
add
jno
ret
xlat
arpl
and
rclb
mov
data16
cmp
dec
add
aaa
cs
nop
test
add
loopne
cli
add
mov
nop
movsl
inc
add
push
fdivl
jecxz
add
cmp
dec
pop
jnp
mov
js
fists
cmpsb
in
push
scas
enter
mov
insb
add
clc
or
add
fimull
cmp
and
mov
lcall
les
ficoms
cmp
das
xchg
ret
xor
push
je
pop
stos
cmp
fldl
test
add
aas
inc
lret
dec
add
pop
xchg
enter
popa
or
sti
adc
mov
add
pop
sahf
out
cmp
mov
xorb
loopne
push
sti
and
or
fimull
test
stos
push
add
jle
sahf
cs
ds
int3
add
cmp
ret
adc
sbb
test
mov
cmp
add
filds
push
cmp
push
inc
cmp
cmc
out
jmp
sarb
ljmp
addr16
xchg
rorb
or
or
aaa
inc
xor
clc
mov
add
fnstenv
movb
adc
cmp
rcrl
pop
pusha
adc
mov
stc
mov
int3
or
test
jl
scas
push
mov
shr
add
fiadds
arpl
fsts
pop
cmp
andb
fninit
adc
dec
cmp
sbb
sub
pop
cmp
test
mov
lds
ss
pop
xchg
jb
test
shll
mov
pushf
mov
xchg
add
loope
int3
cmp
in
call
mov
jmp
shlb
mov
xor
aas
ss
add
xor
sbb
xchg
insb
stc
and
or
add
aam
popf
shrl
movsl
dec
repnz
push
inc
cltd
call
enter
and
dec
add
ja
push
stc
pop
and
push
jne
or
outsb
and
int3
stos
pop
sbb
cmp
pusha
loopne
mov
xor
imul
mov
jae
lods
add
mov
xor
dec
xchg
sbb
pushf
push
mov
imul
pop
bound
jns
xor
mov
and
inc
add
ret
rolb
pop
repz
sbb
arpl
cmpsb
mov
test
ficoms
addb
or
and
push
xor
add
inc
cmp
sub
mov
mov
bound
dec
push
push
out
inc
mov
movl
add
call
shrl
pop
jl
xor
sarb
fld
sub
mov
jg
push
popa
and
push
xor
pop
dec
les
ret
clc
mov
sub
bound
lret
jae
add
inc
dec
push
add
jno
cwtl
nop
add
out
push
add
jmp
push
cmp
sbbb
sub
add
cmp
imul
pop
dec
and
outsb
nop
stc
subb
jmp
orb
push
cmpsl
xor
and
inc
mov
mov
push
xchg
in
mov
sbb
int3
fidivrs
add
push
data16
jmp
movsb
nop
mov
scas
clc
hlt
rorb
les
test
ds
add
aam
dec
into
in
outsb
add
test
xchg
dec
lea
mov
cmp
aas
xchg
push
mov
dec
aam
shlb
gs
pop
rcrl
out
mov
fsubrs
add
jns
js
mov
pop
je
pop
bound
mov
in
test
cmp
int
fstpt
add
lahf
jge
ja
cltd
hlt
adc
lret
mov
sahf
pushf
ret
dec
fs
in
mov
rolb
mov
pop
add
xor
push
adc
xor
in
hlt
sbb
and
test
in
adc
rcll
aaa
ds
mov
and
insb
push
and
xor
xor
mov
sti
add
cmp
pusha
xor
ljmp
mov
push
dec
add
push
xchg
push
jge
dec
mov
inc
out
sahf
in
add
rcr
xor
or
add
or
jns
dec
pop
ss
cmp
cmp
pop
adc
popa
cmp
mov
xchg
add
mov
call
jbe
add
and
loop
test
xor
push
mov
je
sub
inc
jno
cmpsl
adc
outsb
lret
add
jecxz
mov
out
bound
int3
mov
mov
repz
ja
add
ljmp
repz
inc
xchg
in
or
and
add
mov
or
dec
xchg
mov
adc
pop
or
mov
std
js
sub
cmp
xchg
rorb
adc
or
push
rorl
push
mov
sub
imul
xor
cmp
cwtl
dec
fidivs
aaa
insl
jge
or
and
add
stos
lods
adc
nop
clc
int
add
test
insl
adc
clc
pop
add
rol
add
xchg
dec
mov
xor
pop
push
pop
mov
fs
mov
cmpsb
add
in
inc
popa
adc
and
add
movsb
mull
cmp
pop
lcall
movq
fcmovnbe
mov
inc
xchg
adc
add
out
je
rclb
xor
aam
into
arpl
inc
fucom
xchg
testb
mov
test
xor
sub
insl
sbb
push
dec
add
jo
push
mov
pop
mov
add
in
add
xor
pop
fwait
ljmp
add
dec
outsb
add
loope
ret
test
int3
add
xor
ds
or
push
into
and
jle
pop
enter
adc
dec
xor
mov
in
jnp
pop
add
xchg
shr
jno
sub
push
imul
adc
xor
pop
fs
pop
leave
jge
add
pusha
pushf
dec
add
dec
push
add
or
aad
add
lods
adc
sub
lock
add
xchg
repz
orl
pop
dec
popf
js
add
rolb
outsb
cmp
jmp
dec
add
or
inc
out
add
xchg
adc
daa
rorl
lock
scas
mov
insb
dec
xor
test
push
mov
push
enter
cli
shrl
leave
dec
add
inc
fs
mov
notl
sbb
mov
dec
lds
sbb
scas
pmullw
icebp
outsb
cmc
mov
jecxz
push
pushf
or
cmp
mov
inc
xchg
pop
sub
cmpsb
xchg
fnstcw
add
out
jg,pn
les
dec
fwait
xor
cmp
aaa
mov
pop
xorl
pcmpeqd
pop
inc
imul
push
push
aad
pop
jo
sub
mov
mov
or
loope
add
sti
je
out
sbb
rclb
xor
inc
fadds
sbb
lock
and
ror
pop
fisttps
sub
jle,pn
fst
or
add
outsb
push
jl
inc
aaa
add
or
jmp
fnstcw
hlt
pop
stos
add
arpl
add
test
imul
mov
jl
xchg
sub
push
push
add
dec
pop
inc
xlat
pushf
and
adc
adc
mov
mov
xor
or
cmp
icebp
pop
aas
in
enter
bound
lret
das
arpl
ret
jb
mov
lret
shlb
fsubl
stos
decl
jno
mov
mov
mov
cmp
call
push
not
lds
adc
repnz
jo
pop
sahf
scas
push
test
pop
scas
enter
lret
inc
xor
push
in
mov
add
add
xchg
lea
add
mov
add
mov
mov
sbb
mov
addps
ret
mov
jnp
movsl
sub
mov
sub
xor
add
pop
push
mov
xor
sbb
push
aam
cmpsb
aam
rolb
inc
repnz
dec
or
daa
ljmp
mov
lods
dec
jne
test
insb
imul
popf
mov
fiaddl
imul
adc
xor
sbb
fbstp
or
add
xchg
push
lahf
cltd
shll
cld
dec
mov
cwtl
fnstenv
std
clc
jae,pn
and
and
adc
add
mov
int3
lock
sbb
cmp
xchg
add
adc
daa
adcb
inc
cwtl
mov
and
or
xor
bound
cmp
adcb
sub
nop
mov
repz
sub
xchg
sub
int
jae
pop
cmc
inc
add
test
das
movsl
add
in
pusha
mov
mov
add
and
xor
add
xor
push
sub
add
push
adc
mov
or
xchg
shll
push
push
test
add
mov
adc
lret
inc
mov
mov
std
add
pop
loopne
push
repnz
xor
add
push
pop
jo,pt
add
xchg
cmp
sarl
pusha
shrb
add
push
push
divb
orl
or
xchg
add
cwtl
out
loopne
add
sbb
push
pop
dec
imul
pop
xchg
addb
mov
mov
mov
fsts
mov
cmc
les
sub
adc
push
xlat
add
push
data16
pop
pop
addr16
or
in
cmp
add
xchg
arpl
psubusb
pusha
inc
pusha
jge
sbb
add
mov
mov
cmpsl
mov
loopne
sbb
test
add
test
push
flds
js
mov
sub
gs
add
push
pop
addr16
int3
fs
ljmp
js
das
jp
xchg
icebp
sbb
push
test
add
arpl
add
mov
pusha
dec
push
add
sub
jp
ss
jb
aas
mov
rolb
pop
add
jae
mov
add
xchg
shrb
xchg
iret
decb
cwtl
add
xchg
daa
sub
add
xchg
mov
jbe
es
add
data16
mov
pop
int
faddl
sbb
lods
out
inc
push
test
mov
addr16
les
ret
jb
or
ret
inc
shl
inc
inc
hlt
aam
xchg
sub
mov
addb
add
xchg
cs
lea
or
jno
add
jb
stc
dec
sti
divb
aas
cmp
mov
push
scas
add
xchg
cltd
mov
data16
nop
adc
icebp
add
aas
lock
add
lcall
or
fcompl
or
add
or
lods
jl
cmpsl
add
and
pushf
out
mov
out
or
lock
pop
fcoml
inc
cmp
imul
push
add
out
jmp
jae
ss
xor
sbb
and
or
add
jo
loope
pushf
mov
xor
cmp
ret
sub
and
add
sbb
push
repz
sbb
shrb
clc
jg
pop
fidivl
ret
adc
or
enter
je
and
xchg
fildl
outsl
fimuls
loop
push
lea
cmp
pusha
jmp
daa
and
mov
and
pop
mov
jle
add
icebp
cmpsb
add
int
add
pop
into
rcrb
dec
cmp
push
sub
mov
sbb
xor
jae
add
into
int3
roll
mov
repnz
and
test
sub
cmp
adcl
push
les
add
imul
ret
push
and
lock
jmp
lea
pop
clts
jns
adc
enter
mov
cmpsb
pushf
addr16
dec
add
out
pop
sbb
sub
add
stc
xchg
xchg
es
addr16
push
add
mov
jae
add
inc
adc
mov
pop
aas
movsb
hlt
cvtpi2ps
cmp
les
push
pop
imul
movsb
dec
dec
push
sbb
orb
pop
dec
addr16
mov
lock
add
popf
ret
divl
cmpsb
loopne
add
dec
es
add
je
cmp
daa
add
xor
add
addr16
popf
sub
xchg
andl
fiadds
jo
shrl
or
in
sub
pop
push
in
nop
or
cmp
fnstsw
subb
push
aas
mov
inc
sbb
loope
xor
addr16
stos
sub
add
or
mov
add
inc
pop
test
pushf
pop
add
lret
lahf
push
add
out
rcll
jge
push
popa
imul
ja
mov
push
add
and
inc
jnp
repnz
aas
mov
enter
add
and
fisttps
outsl
cs
or
dec
fs
push
sub
ja
iret
and
or
xchg
xor
data16
sbb
es
or
push
mov
fisubl
lds
sbb
or
data16
jge
les
outsb
add
lcall
call
movhlps
and
ljmp
sbb
dec
fisttps
jg
cltd
adc
add
and
xor
dec
sbb
dec
adc
icebp
pop
pushf
add
lret
push
int3
add
sub
aas
test
sbb
cmpsb
cmpb
subl
inc
and
inc
xchg
cmp
and
loope
movsl
add
rolb
mov
xchg
mov
dec
pop
fs
add
cmpsl
insb
repnz
les
icebp
rcl
sbb
add
add
xor
pop
addl
and
mov
inc
add
sub
add
jae
and
mov
cmp
and
sbb
pop
out
incb
shlb
cli
push
aas
dec
mov
sbb
jae
movsl
inc
and
pop
icebp
hlt
test
jp
xor
std
hlt
add
stc
shl
cmp
mov
jge
add
jae
lock
ret
dec
adc
lahf
shlb
mov
cmp
add
mov
cmc
je
xor
imul
xorb
add
jle
and
sub
add
cmc
es
mov
sub
add
lods
sbb
mov
sbb
pop
iret
jb
add
sub
nop
pop
push
mov
repz
sub
mov
push
sub
test
cwtl
mov
and
pop
fisubrs
loopne
sbb
cmp
xor
movsl
pop
dec
jo
cwtl
mov
xor
addl
ror
xchg
jns
lcall
bnd
pop
push
mov
add
jg
jl
divl
sub
dec
xor
push
rcrb
aas
add
daa
hlt
je
mov
aam
and
mov
stos
sub
rolb
mov
pop
lcall
idivl
xchg
sbb
loop
subb
mov
xor
push
shrl
jl
mov
pop
push
mov
xor
add
cwtl
mov
clc
xor
xchg
aad
fistps
fsubl
adc
sub
inc
push
int3
xchg
incl
push
out
call
in
add
out
mov
outsl
out
nop
int3
sub
add
testl
mov
daa
mov
lock
bound
push
adc
push
sub
and
or
xor
loop
cmp
fmuls
mov
nop
push
cld
ds
in
mov
xor
add
divb
in
fmul
sarl
inc
cld
jb
out
cmp
or
xor
cmp
jl
filds
jbe
xchg
mov
lods
ja
into
in
cli
pop
insb
cmp
int
inc
push
out
adc
xor
fmuls
mov
fwait
in
enter
or
or
mov
cmp
and
add
and
push
jbe
add
cmp
cmp
xor
test
xor
nop
ljmp
cld
cmpsl
or
xchg
arpl
xor
cmp
xchg
sbb
dec
popa
sbb
cmp
add
jecxz
mov
inc
or
pop
cmpsb
pop
pop
sbb
jmp
or
cs
test
xchg
add
in
in
dec
cld
mov
add
mov
inc
jl
jbe
push
out
add
ja
cmpsl
dec
xchg
add
enter
arpl
or
lds
lret
scas
sub
je
xchg
arpl
mov
out
cmp
lods
sbb
xchg
inc
mov
inc
ds
add
push
inc
vcvtdq2ps
or
add
or
stos
add
dec
inc
pusha
popf
jo
fdivrl
mov
sbb
mov
imul
mov
inc
xchg
shlb
std
fimull
jle
xchg
add
sbb
xor
and
aam
hlt
fmull
sbb
fwait
mov
adc
dec
jmp
scas
jb
dec
addb
out
ds
or
push
add
int
jnp
imul
test
sub
cmpsb
lcall
adcb
lea
loopne
push
xchg
sub
sbb
fdivrl
aad
add
and
or
xchg
adc
add
mov
mov
dec
sbb
rorb
dec
loop
add
repnz
and
negl
jle
cmp
mov
add
sub
xor
shr
out
add
rcl
xorb
ret
sub
and
xchg
andl
int
adc
inc
adc
adc
mov
cli
js
sbb
add
rolb
jp
sbb
fs
popf
test
cmp
mov
adc
adc
aas
xlat
in
pop
inc
dec
loop
call
in
mov
adc
xchg
push
inc
xchg
add
out
sbbb
rorb
lock
mov
cltd
xor
std
sti
fs
ss
add
cmp
cld
les
rcrb
push
insl
mov
adc
jbe
addb
add
aas
cwtl
repnz
addr16
movsl
and
mov
add
mov
repz
sar
and
mov
and
out
data16
stc
add
popl
add
ficoml
sti
cmp
add
test
fbld
sbbl
nop
cmp
popa
data16
test
inc
inc
jnp
add
fstpt
add
mov
jns
mov
xchg
adc
jmp
adc
mov
or
in
adc
pop
mov
mov
shlb
push
add
rorb
pop
dec
lods
add
insb
push
xlat
popa
shrb
push
stos
sub
ljmp
xchg
xchg
add
out
cmp
inc
mov
add
xor
ss
loopne
and
add
js
push
lea
add
insb
or
and
add
popf
xchg
cmp
or
pop
cmpsl
mov
push
and
dec
loop
xor
jg
into
sarb
jno
mov
xchg
scas
dec
mov
add
cli
xor
out
nop
test
int
pop
sub
sbb
psrlq
out
je
add
cmp
xor
push
stc
mov
adc
insb
push
sbbl
and
test
scas
jle
popf
sbb
js
shlb
cltd
mov
inc
xor
rcl
mov
enter
mov
push
lahf
sbb
lret
addl
nop
or
jbe
notb
add
push
jmp
pop
roll
subb
cld
or
cwtl
sbbb
jle
add
jbe
add
push
lods
add
ffreep
push
dec
xor
mov
sub
subl
pushf
sbb
add
hlt
in
adc
insb
sbb
insl
sbb
cmpsb
mov
dec
je
pop
dec
imul
mov
mov
lret
adc
sbb
jge
rclb
aas
add
xchg
adc
adc
xchg
ret
fwait
add
push
mov
jns
add
mov
decb
push
add
fwait
pop
inc
fdivrl
rolb
lahf
pop
push
inc
ret
jnp
sub
cmp
add
mov
add
dec
mov
hlt
fmulp
je
lds
jne
sbb
leave
imul
xchg
add
into
sbb
add
popa
pusha
mov
cmp
add
leave
stos
cmp
test
mov
jge
popf
fs
mov
add
ss
xor
testl
or
xchg
xor
icebp
pop
in
in
stos
add
lcall
pop
jne
sti
mov
inc
jl
cmp
mov
loop
add
not
xchg
cmp
add
dec
bound
mov
xchg
sub
lock
sbb
add
repz
scas
pop
dec
add
and
mov
out
mov
cld
mov
cmc
dec
addr16
shl
add
rolb
push
fnstsw
dec
out
out
inc
aas
and
add
adc
nop
enter
jl
add
sub
dec
cwtl
pop
cwtl
cmp
fdivrl
repz
lea
or
xchg
xchg
or
add
xchg
push
inc
adc
add
lea
je
pop
mov
out
popf
xchg
push
jnp
add
mov
sub
fisttps
xor
mov
shr
jb
rep
sbb
mov
xchg
pop
add
and
adc
lret
das
movsb
mov
pushf
dec
jb
shlb
add
jnp
bound
add
pop
add
cmpsl
add
jae
xor
mov
stc
movsb
pusha
loop
push
xor
mov
loop
stos
adc
cld
or
arpl
incb
fs
das
sub
fistps
movl
dec
dec
add
cmpsb
sbb
bound
pushf
add
dec
ret
xchg
add
popf
popa
mov
enter
fistl
jmp
or
imul
cmp
xorb
sub
push
push
les
ds
inc
adcb
enter
iret
add
in
jmp
test
adc
mov
cwtl
pop
xor
xorl
je
mulb
fadds
add
push
inc
dec
sbb
add
mov
out
pop
jl
add
pop
ret
or
add
pop
les
cltd
test
push
pusha
adc
in
mov
add
mull
pop
leave
cld
insb
sbb
std
mov
mov
shrb
push
adc
fdivs
mov
movhlps
pop
xchg
adc
dec
mov
xchg
test
adc
pop
mov
mov
add
xor
sbb
adc
lea
adc
add
lret
push
pusha
jg
xchg
inc
scas
fbld
mov
dec
test
add
adc
jae,pn
add
aad
hlt
std
pop
add
jb
clc
adc
rolb
out
popf
add
push
ja
or
mov
stos
mov
data16
sbb
inc
or
divl
leave
bound
pop
mov
mov
cmp
nop
and
inc
test
add
ret
push
rcrb
fisttpll
daa
add
lahf
loopne
add
test
mov
cmp
rorl
into
add
jg
pop
out
test
pop
jge
mov
insb
sub
cmp
addb
cmpsl
pop
xor
mov
mov
aad
lds
add
or
aam
testb
int
pusha
sbb
xchg
call
scas
or
ljmp
xchg
jb
loope
test
or
xchg
inc
sub
aad
jp
jno
pop
decb
add
sub
sbb
addb
jns
outsb
xor
inc
rolb
rol
pop
js
add
jb,pt
fcomps
or
loop
xchg
and
sbb
pusha
add
add
mov
and
dec
call
lret
and
rolb
sub
pop
mov
or
loopne
mov
iret
mov
test
sbb
scas
push
aaa
outsb
ds
xchg
add
dec
orb
mov
adc
in
jno
add
pop
out
push
adc
pusha
rolb
cltd
in
mov
pop
push
outsb
add
addb
mov
add
jne
stos
push
xchg
adcb
ja
xchg
cmpsb
testl
pop
dec
mov
inc
xchg
roll
cmp
pop
inc
and
popf
sub
mov
adc
sbb
mov
inc
shlb
push
or
int
imul
ret
pop
sub
dec
inc
orb
and
fwait
iret
aaa
test
add
cmp
adc
add
mov
fcoml
add
xor
jg
ljmp
in
add
and
aad
fwait
xchg
pop
pushf
clc
loopne
and
jne
add
call
loopne
add
cltd
fs
jno
cs
out
jne
nop
lcall
push
aas
testb
cmp
mov
push
aaa
and
mov
sub
cld
sub
jle
nop
or
loopne
add
inc
pushf
movsl
test
mov
lahf
mov
pop
sbb
mov
sbbb
add
ja
adc
daa
cmc
in
xchg
mov
sub
pop
mov
adc
mov
pop
mov
divl
add
mov
mov
ret
cli
test
es
lods
xor
jg
rolb
jecxz
and
adc
js,pt
lret
pop
sbb
or
xor
enter
add
pop
les
lret
xchg
aam
xor
jg
lds
arpl
ja
push
jae
rol
jle
sti
jo
pop
add
jecxz
je
ss
xchg
and
inc
add
mov
addb
test
mov
sub
leave
ja
das
add
xchg
rcl
sbb
mov
push
sahf
cs
es
mov
pop
psraw
jns
add
sub
fdivrs
xchg
negl
dec
rcr
pop
jbe
add
rol
dec
xchg
mov
outsl
add
fbld
add
xor
stos
lock
addr16
push
mov
lcall
into
xor
js
dec
inc
cwtl
pop
add
lret
xchg
shlb
mov
add
fdivp
rolb
insb
push
dec
sbb
rcrb
push
mov
sbb
sahf
loopne
int3
inc
sub
enter
push
push
or
dec
jle
mov
jg
add
jb
pushf
int3
inc
jns
mov
gs
mov
jmp
add
sbb
push
pop
add
mov
cld
add
setl
mov
or
pop
sahf
js
xchg
ljmp
sbb
push
shrb
and
movsb
adc
sub
pop
js
mov
loopne
or
test
je
out
lcall
mov
mov
loopne
repz
in
pop
and
mov
add
scas
xchg
sub
xchg
ljmp
bound
cmpsl
testl
mov
xchg
add
call
mov
cmpb
sbb
and
loop
ljmp
lods
outsb
adc
cld
cmpsb
sbb
add
int
int3
push
add
xor
jg
nop
popf
test
pusha
incb
mov
outsb
adc
cld
mov
push
stos
xchg
xchg
inc
lds
dec
pop
inc
out
mov
mov
add
inc
or
xor
out
jg
mov
cli
pop
xorl
and
imul
add
push
mov
dec
sub
in
add
add
addl
and
jb
inc
lods
and
add
and
push
addl
mov
lcall
xchg
inc
add
imul
pop
or
xchg
and
mov
mov
pop
cmp
xchg
pop
cli
inc
xor
aam
sub
call
jle
movsl
pop
clc
add
cltd
inc
int
aad
add
push
in
sub
jecxz
xchg
and
imul
in
loop
icebp
addl
fwait
mov
add
popa
and
inc
mov
pop
negl
push
loope
add
ss
cmp
jecxz
jg
pop
xchg
push
inc
add
lret
movsb
jl
add
adc
int
dec
lea
sbb
rorb
scas
pop
movl
dec
add
mov
add
sbb
mov
icebp
test
stos
add
out
cmp
in
adc
popa
push
aaa
mov
outsl
add
aam
int3
add
push
cld
in
mov
xchg
fwait
and
pop
add
mov
loope
mov
jne
or
or
xor
lahf
and
rolb
push
jmp
inc
jae
and
sarl
add
sti
or
xchg
loopne
pop
ficompl
push
imul
iret
scas
cmp
jb
add
or
inc
sub
mov
add
or
loopne
enter
nop
shl
jecxz
mov
sbb
sarb
add
or
inc
xchg
stc
repz
add
cmp
push
or
pusha
xchg
out
mov
add
lea
insl
xchg
outsb
mov
imul
enter
inc
scas
test
nop
sub
inc
mov
fmull
pop
leave
or
add
inc
mov
xchg
push
inc
and
add
das
mov
add
insb
add
ror
mov
mov
mov
adcb
test
push
mov
adc
test
or
int3
lea
aaa
add
mov
test
sbbb
add
xor
in
push
das
jge
andb
mov
cltd
or
inc
cmpsl
adc
pop
xlat
mov
aaa
push
push
loopne
mov
or
xor
pop
in
sbb
pop
xchg
push
aaa
mov
loopne
orl
shl
cmp
ss
scas
mov
inc
add
inc
loop
popa
data16
pushf
jle
dec
xor
add
arpl
xchg
mov
jno
js
add
mov
mov
add
mov
add
and
jno
loope
push
add
dec
adc
shrl
xor
pop
out
sbb
push
or
test
push
adc
leave
add
int3
dec
fisttps
sbb
cld
push
add
pop
imul
std
dec
popf
mov
repz
xchg
inc
jbe
pop
adc
inc
sbb
mov
test
xchg
mov
sarl
inc
push
ds
aaa
pusha
mov
pop
dec
jmp
mov
cmp
adc
inc
and
loop
or
aad
inc
repz
cmp
mov
xchg
ss
push
leave
sahf
adc
jmp
popa
dec
push
aas
pusha
pushf
xor
and
icebp
pop
pop
xchg
out
jecxz
xchg
pusha
repz
push
stc
jne
pusha
andb
lds
cmp
ljmp
lcall
mov
add
sub
add
xchg
pop
test
fisubrs
orl
jecxz
add
cli
push
add
mov
add
mov
xchg
add
sbb
adc
pop
pop
pop
add
in
out
inc
sbb
add
jb
push
dec
jle
mov
add
popf
test
lahf
fadds
loope
je
pop
int
pop
add
push
fiaddl
push
mov
add
sub
xchg
push
rcrl
add
incb
jmp
clc
fldpi
xor
mov
lods
add
test
push
add
add
xor
mov
mov
data16
cmpsl
gs
add
addb
insl
mov
push
test
jo
call
ret
cwtl
cmp
in
andb
stc
cmp
add
rolb
add
aas
pop
sarl
pusha
fwait
push
add
sub
mov
lea
idiv
in
loopne
sbb
or
int3
pop
clc
add
dec
cld
jno
popa
data16
shrl
outsb
dec
cmc
add
iret
mov
add
mov
inc
lods
dec
dec
dec
daa
cmp
cmpsl
mov
cltd
and
aaa
outsl
sub
and
pop
mov
je
push
cs
pusha
clc
int3
loopne
pop
aas
cli
outsl
add
ret
pop
adc
les
inc
shr
fs
roll
icebp
push
rcrb
pop
pop
push
aaa
xchg
fisubrs
in
nop
add
mov
cli
mov
add
aaa
rclb
addl
rcrb
fidivrs
call
ja
jae
addl
adc
insl
xor
or
xchg
div
ret
dec
add
pushl
or
shlb
jmp
dec
add
aas
xorb
xchg
add
pop
insb
add
push
stc
sti
pop
outsl
jge
jbe
dec
js
inc
clc
jle
jbe
mov
dec
cmc
orb
test
sub
rolb
shl
mov
xor
add
adc
mov
aam
inc
sbb
cmp
add
sahf
jg
sbb
mov
sub
pop
fdivl
pop
addl
add
adc
pop
out
fsubs
mov
fst
add
hlt
or
sub
cmpsb
and
insl
dec
cli
out
lcall
test
stos
dec
and
xchg
push
call
lds
pop
jb
das
iret
scas
jbe
repz
movsb
in
adc
gs
out
xchg
es
cmp
call
shll
jle
adc
sbb
lret
mov
mov
shll
icebp
mov
xor
int3
lea
sub
pop
push
lds
mov
lahf
add
nop
pop
dec
mov
inc
pop
inc
clc
add
dec
pop
int3
lods
adc
lret
xchg
add
int
add
sbb
push
sub
push
out
scas
fisubl
xchg
lea
cmp
loop
jnp
or
push
inc
pusha
and
pop
mov
and
fistps
adcb
xorb
cwtl
test
push
add
test
pusha
iret
push
mov
push
adc
mov
ds
adc
dec
in
mov
cmc
push
jo
rcrb
sarb
jp
sbb
inc
and
out
cltd
pop
sub
jmp
insl
into
cwtl
cmpsb
lods
into
pusha
push
add
loopne
hlt
or
jo
add
xchg
jmp
mov
and
push
pop
pusha
mov
inc
mov
add
lcall
cmp
jl
sub
add
stos
lock
adc
sub
adc
mov
inc
jbe
loop
jmp
mov
int3
aad
lds
xor
push
pushf
sub
aas
popl
push
push
xchg
cmp
mov
addb
xchg
add
lcall
sbb
push
scas
sarb
testl
fmulp
xor
jp
ds
mov
jnp
pusha
and
xchg
add
int
sbb
jecxz
cmp
or
addl
test
mov
ret
pusha
xor
sbb
fsubrs
rorb
add
fiaddl
ljmp
adc
fiadds
inc
cmc
pop
pop
xor
movsb
pop
lock
mov
add
repz
ja
cld
mov
add
pop
je
scas
add
cli
adc
out
arpl
fldt
cltd
mov
ja
in
mov
loop
or
fnstsw
push
pop
addb
aad
lock
pop
jmp
inc
in
push
sti
dec
outsb
negb
lods
faddl
jo
sub
add
jbe
cmp
add
stc
cmpsb
or
mov
sub
enter
add
push
aaa
fdivs
add
mov
xchg
push
jne
test
sbb
repz
jmp
lds
fs
jecxz
and
jmp
push
add
nop
adc
mov
ret
idivb
mov
and
dec
jns
adc
repz
andb
mov
loopne
incb
inc
std
push
stc
cmp
push
add
loop
add
fstl
sbb
insb
adc
add
add
or
aas
inc
and
mov
sbb
jns
cs
movl
inc
lret
loopne
and
mov
sar
push
mov
andb
aam
int3
add
or
daa
add
add
pop
inc
mov
add
and
pop
add
das
push
push
push
dec
rcll
xchg
loope
daa
sbb
sub
adc
sub
or
add
jp
add
and
in
lds
and
cvtps2pi
shl
cltd
leave
sub
lods
mov
mov
adc
mov
movsl
and
cmp
aad
movb
rorl
fldenv
adc
mov
xchg
adc
jno
js
add
cmp
xchg
pop
dec
lds
add
popf
jge
add
shl
ror
mov
lock
in
ds
fsub
add
jecxz
mov
xchg
mov
push
cmp
aaa
jae
xor
add
inc
mov
inc
loope
xor
adcb
in
and
add
in
lock
add
push
mov
or
mov
ds
and
add
fwait
sbb
lret
ljmp
add
bound
or
aam
mov
push
mov
or
inc
popa
add
subl
add
andb
leave
pop
fwait
pop
cmp
pushf
jle
jb
pusha
fidivl
test
or
push
or
pop
mov
jl
cmpsl
cld
add
push
stc
cmp
orl
fmull
sub
mov
testb
psubsw
cvtpi2ps
jle
orl
add
sub
inc
mov
fiaddl
inc
xchg
xchg
mov
rorb
jge
add
cltd
mov
xchg
popf
test
dec
rclb
subb
pop
stos
out
jo
inc
jp
movsb
add
cmpsb
push
jmp
data16
mov
cwtl
add
mov
cld
fadd
lret
cmpsb
outsl
add
lods
push
pop
lock
les
add
pusha
arpl
movsb
rcrb
add
xor
icebp
push
pop
fs
mov
push
add
out
push
andl
push
ret
pop
and
mov
sbb
inc
dec
mov
testl
loope
sub
ja
adc
mov
adc
adc
int
xor
sbbb
add
xchg
leave
dec
roll
cmp
mov
or
roll
sbb
inc
out
insb
test
mov
xor
xlat
ficompl
leave
ret
das
cmp
jp
imull
adcb
fidivrl
pop
rcrb
add
xchg
or
sbb
iret
add
xchg
popa
mov
push
mov
inc
mov
jl
pop
xchg
lock
sub
pop
mov
sbb
mov
jmp
dec
out
ljmp
add
iret
jle
scas
jo
in
clc
verw
jmp
add
cmp
loope
xlat
sbb
lret
ror
mov
arpl
shrl
aaa
cmpl
mov
mov
sbb
cmp
xor
add
mov
add
int
pop
bound
inc
sbb
bsf
fptan
mov
add
insb
daa
subb
add
or
std
cmp
cmp
es
push
out
push
mov
add
out
fisubrl
add
dec
inc
lock
mov
in
gs
rcrl
xor
dec
lret
cmp
sti
sub
push
out
cmp
dec
sub
mov
lahf
xchg
testb
xchg
adc
or
movsb
es
arpl
sub
fsubl
and
rcll
adc
lods
sbb
inc
std
mov
loope
push
outsl
ficoms
pop
add
xchg
mov
sub
push
sbb
xor
nop
pusha
add
jo
mov
mov
sbb
fists
add
dec
push
popa
loopne
jbe
add
mov
add
adc
pop
push
ljmp
lds
imulb
movl
add
mov
and
into
ja
clc
mov
daa
test
add
add
pop
sub
popa
add
jle
shlb
or
jns
mov
push
add
pop
cwtl
fldl
test
enter
sbb
sahf
aad
mov
and
das
cmpsb
add
add
ss
xor
addr16
cmp
adc
shll
add
cld
hlt
push
lcall
sub
popa
cwtl
inc
popl
sarb
andb
pop
xor
orb
sbb
xlat
mov
adc
push
enter
fmuls
sti
js
xor
lods
sbb
xor
push
xor
add
js
add
inc
jge
add
pop
notl
insl
rol
adc
in
lcall
enter
dec
pop
scas
js
sub
pop
adc
lret
rolb
in
mov
outsl
dec
pop
imul
ss
xchg
scas
pushf
pop
pop
test
and
es
sub
inc
scas
xor
int3
add
mov
pop
xrelease
push
sbb
rorb
js
push
test
or
add
cmp
imul
xor
roll
add
jb
fs
hlt
in
lock
add
leave
mov
movsb
add
das
mov
add
pop
adc
add
cmp
sbb
pop
stos
dec
add
movsl
xor
shrl
lods
add
push
je
in
ja
dec
jbe
mov
sub
add
mov
testl
test
out
add
xor
nop
int3
xchg
add
xchg
inc
or
mov
and
mov
inc
sub
xor
cmc
and
lds
jge
in
sbb
push
mov
aas
test
les
push
jecxz
in
mov
dec
or
daa
mov
out
sbb
inc
add
fwait
pop
imulb
les
add
loopne
pop
sub
aas
popa
int3
xchg
daa
les
cmpsb
pop
sub
pop
add
arpl
mov
pop
inc
add
leave
cmp
iret
repz
je
inc
sub
popl
dec
popa
sub
in
mov
add
mov
js
mov
and
push
in
stos
mov
adc
and
jbe
mov
pop
push
aaa
repz
add
lock
pop
adc
in
imul
sbb
mov
ds
jnp
add
and
adc
out
sub
mov
sbb
add
movsl
add
sbb
shlb
xor
pop
and
in
ret
push
mov
inc
addr16
mov
sti
stc
call
xchg
xor
in
and
sub
add
popf
clc
mov
add
sub
and
push
rolb
les
and
mov
jo
and
pop
andb
mov
repz
inc
dec
imul
fmul
inc
add
sbb
icebp
or
js
jp
lods
adc
mov
fs
cmpsb
pop
gs
in
push
repz
ret
mov
lcall
sub
movsb
mov
gs
sub
mov
sub
push
jge
mov
getsec
or
sub
sqrtps
int3
xorl
outsb
push
rcl
dec
mov
sub
fsub
push
lret
loopne
ret
pop
stos
lock
mov
ss
xlat
sar
pop
fcoms
jp
jne
cld
lea
adc
mov
dec
add
ljmp
adc
jns
cmc
cmpsb
dec
mov
into
imul
iret
data16
loopne
not
add
outsb
hlt
mov
fcomi
fwait
or
mov
dec
jl
shll
dec
add
mov
mov
fdivrs
filds
adc
testb
scas
cmp
sub
enter
or
mov
jp
add
repz
lret
ret
sub
and
dec
jmp
add
and
sbb
push
test
dec
sub
loope
push
xchg
dec
push
add
xchg
out
fwait
movsl
pushf
push
mov
mov
inc
shlb
sub
arpl
outsb
idivb
mov
cmpsb
xor
inc
lock
push
push
xlat
mov
pop
pusha
clc
push
inc
in
aad
add
xchg
pop
mov
mov
mov
xor
test
push
sbb
or
jb
movl
sti
fildl
xchg
mov
cmpb
fnstenv
cmpsl
inc
jno
lods
add
jl
jo
pop
jbe
add
adc
mov
and
xchg
scas
sub
int3
mov
and
in
fadd
das
arpl
xorb
push
into
push
cmp
cmp
or
mov
lahf
adc
inc
jb
add
out
call
loopne
mov
adc
outsb
add
mov
add
cmp
icebp
arpl
xor
cmp
or
mov
xchg
xchg
dec
idivb
dec
sbb
or
shl
loopne
shlb
pusha
stos
fmull
add
sahf
into
pop
jnp
jno
add
mov
leave
movsl
adc
sbb
jmp
mov
aad
add
inc
std
bound
shr
pusha
ljmp
fwait
lea
es
jecxz
mov
jle
icebp
movsb
add
pop
add
jno
clc
dec
pop
stos
mov
inc
rolb
xchg
nop
mov
mov
test
jo
xor
dec
bound
add
sbb
je
add
xchg
in
add
cmp
jns
add
dec
cmc
jecxz
aas
inc
pusha
roll
xchg
imul
or
and
jbe
xlat
arpl
scas
xor
cmc
jl
add
call
out
rcrl
ret
fistpll
ds
push
add
dec
push
xor
iret
jnp
inc
push
mov
test
in
rcr
sbb
clc
xchg
add
jo
push
leave
pop
inc
inc
es
push
pop
test
bound
add
jle
add
sub
or
pop
and
mov
and
faddp
mov
cmp
les
jle
pop
add
lods
xor
stc
xchg
testl
push
xor
cmp
rolb
insb
dec
mov
xchg
lahf
psubq
pop
jne
fsts
stc
in
xchg
xchg
jmp
xchg
add
lds
enter
add
mov
cmp
mov
test
popf
xchg
push
pop
shll
xor
mov
ror
add
cmp
cli
add
mov
sar
or
or
rcll
fs
subb
test
andl
inc
shrb
das
xchg
push
sub
xchg
mov
push
rolb
push
or
sbb
or
ja
outsl
xor
js
hlt
jl
pop
out
mov
cmp
xor
or
mov
mov
stc
mov
shlb
mov
pop
add
aam
es
or
pusha
nop
mov
mov
cmp
movsb
push
sub
aam
int3
add
inc
inc
daa
orb
and
push
shrb
add
or
and
aam
adc
mov
mov
mov
js
mov
add
out
imul
mov
mov
shll
ficompl
add
popf
lods
mov
add
addb
fwait
add
jns
lret
shrb
jae
inc
test
dec
aaa
cli
sbb
lock
dec
das
int3
ja
xor
xor
jnp
adc
sbb
out
and
lea
add
out
mov
xor
add
cld
das
add
mov
insb
add
lods
pusha
adc
xchg
or
subl
dec
das
or
fstps
xorl
out
add
in
xchg
adc
faddl
push
mov
sbb
push
stc
in
xchg
mov
jbe
rcrb
insl
add
mov
and
ja
dec
or
push
cmp
iret
subb
sub
loop
aas
sub
pushf
xor
mov
mov
add
xor
adc
fcompl
xchg
imul
fcoms
jae
pop
xchg
or
mov
stc
add
fldpi
adc
stos
ret
cwtl
es
xor
jecxz
push
or
sub
movsl
clc
arpl
int3
loop
xchg
imul
or
xor
adc
or
mov
nop
sarb
cmp
test
sub
inc
pop
add
mov
stos
test
add
cmp
sbb
fcomp
push
xor
mov
aas
add
add
addl
push
aas
sub
decb
pop
pop
subb
orl
pop
xchg
repnz
popf
xor
rol
pop
xchg
int3
mov
add
xchg
sbb
in
ffree
adc
xor
and
xor
es
into
and
mov
push
inc
icebp
out
add
out
movb
add
jae,pt
lret
or
push
pushl
dec
add
pop
flds
mov
aam
stc
add
lods
jnp
loopne
xor
add
mov
pop
xor
push
and
mov
test
or
add
lcall
mov
rcl
mov
add
inc
push
jno
add
stos
inc
sbb
sbb
nop
and
test
in
add
lock
ret
dec
stos
repz
out
mov
out
bound
sti
cwtl
and
mov
push
or
aad
jns
icebp
mov
scas
iret
into
pusha
mov
repz
negb
add
divl
ljmp
sub
dec
iret
popf
pop
inc
add
push
inc
xor
mov
xor
add
cltd
arpl
sbb
mov
imul
push
sti
cmpsb
add
dec
aas
js
fdivrl
mov
or
loope
lret
jge
or
movsl
rclb
inc
lock
xchg
pop
out
pop
int3
pop
xor
cmp
loopne
scas
hlt
orb
test
icebp
or
loop
and
iret
mov
loopne
sti
outsl
push
iret
nop
xor
sbb
addr16
jmp
leave
mov
dec
add
xor
pusha
adc
add
dec
push
sub
add
xchg
push
and
mov
push
aas
sahf
and
mov
fs
cli
mov
mov
cmp
cmp
sub
rolb
sbb
push
mov
xchg
sbb
xchg
rcrl
inc
mov
ja
xchg
xor
shrl
xchg
inc
jb
add
test
mov
and
jno
popf
cli
dec
imulb
mov
test
dec
dec
insb
add
andl
adc
push
rorl
push
mov
adc
mov
pop
hlt
movsl
add
addb
push
lahf
aad
jne
mov
leave
inc
add
fsubrp
add
mov
stos
fcmovu
dec
cmp
xor
push
rolb
mov
fucomp
add
push
add
pop
aam
mov
xchg
mov
dec
add
mov
test
mov
pop
pop
movsb
rcrb
int3
adc
rcl
sbb
sub
inc
popf
mov
loopne
add
lcall
adc
push
xor
sub
outsl
cmpsl
xor
jmp
pop
adc
mov
add
jo
and
pop
push
sub
add
dec
outsb
stos
and
or
ror
mov
aam
pop
ror
mov
dec
pop
add
inc
addl
mov
pop
xchg
sbb
clc
xor
and
and
and
int
adc
mov
cmp
add
into
add
int3
movsl
fildl
cmp
add
jge
xchg
leave
mov
stc
pop
and
mov
cwtl
add
xchg
xorb
sbb
add
mov
cmp
call
dec
sub
inc
inc
inc
and
sbb
push
aam
imul
lret
js
adc
mov
mov
rcll
add
ss
pop
jp
dec
mov
mov
mov
cs
addb
movsl
rcll
xor
pop
daa
cli
stos
mov
pusha
sbb
lcall
fsubrs
pushf
pop
cmp
jecxz
in
add
xor
add
add
inc
cwtl
sti
jno
lds
jecxz
cmp
ljmp
cli
shr
aad
pop
and
mov
jg
xor
sbb
push
and
icebp
fbstp
mov
xor
mov
mov
cmp
je
in
fsubs
add
mov
fsts
push
nop
lahf
into
jae
push
add
and
xor
jo
push
aaa
mov
setnp
das
pop
iret
std
xlat
add
xor
or
pop
mov
test
add
push
mov
add
iret
or
add
loopne
sbb
int3
jbe
add
bnd
inc
scas
mov
pop
sub
or
cmp
xchg
aad
shrl
add
cld
xchg
pop
or
and
repnz
incb
add
aas
add
sub
or
jo
add
and
mov
cmpsb
in
xor
sbb
xchg
sahf
insl
add
push
dec
filds
inc
and
or
pop
test
push
ljmp
ret
or
andb
call
jns
and
sbb
es
xor
je
sub
cmp
lcall
addr16
mov
mov
fiaddl
shll
fldl
iret
add
popa
cmpsb
lcall
mov
fdivrl
xor
nop
cmp
xor
fadds
in
pop
jp
pop
addr16
add
jecxz
in
cwtl
add
movl
dec
cmpsl
inc
cmp
bswap
mov
jbe
cmpl
shl
sub
pop
pop
cmovne
divl
pop
dec
test
mov
push
add
call
xchg
es
xor
add
mov
imul
loopne
pop
or
sti
cmpsb
and
jo
pop
add
xchg
lods
jbe
enter
add
psadbw
pop
adc
mov
xchg
adc
dec
sbb
shrb
mov
add
cmp
xor
pop
cltd
popa
jg
xchg
inc
lods
stc
jns
add
mov
push
fucomip
mov
jmp
push
popf
and
sbb
dec
rcrl
lods
dec
js
add
xor
lock
ja
cmp
mov
lahf
push
add
cmpsb
pop
cwtl
sar
jmp
cmp
mov
fcomps
roll
pop
mov
mov
add
add
sub
sbb
arpl
cmpb
jg
ds
xlat
xor
xor
pop
cmp
xor
cwtl
add
fwait
cmp
add
cmp
inc
pop
dec
xlat
rorb
or
xchg
rorb
mov
fisubs
repnz
adc
mov
push
ja
add
pushf
sbb
clc
jl
popa
dec
adcb
das
call
adcb
and
int3
jne
sub
decl
loopne
les
fildll
setno
call
or
add
stos
push
ficompl
faddl
sbb
xchg
iret
fsub
nop
jmp
pop
test
dec
ret
sbb
mov
je
test
push
daa
leave
imul
bound
sahf
jns
shlb
pop
add
or
arpl
adc
and
add
loope
imul
andb
push
orb
push
push
call
inc
mov
test
pop
sub
movsb
inc
xor
add
sbb
or
add
loope
hlt
pushf
pop
jo
popf
xor
push
cwtl
add
lods
loop
cmpsb
mov
jnp
jb
xchg
sti
out
adc
movswl
push
roll
jns
cwtl
push
leave
adc
lcall
pushf
call
scas
push
addb
inc
and
add
push
test
lcall
lds
rolb
cmp
rcll
sbb
mov
into
push
lret
push
mov
inc
loope
rol
xor
rclb
add
pusha
fisttpll
ret
cltd
sbb
imul
test
aam
sub
or
cmc
movsb
xchg
push
adc
repnz
sahf
xor
cwtl
out
jge
mov
add
and
mov
roll
mov
mov
sahf
add
out
ds
and
test
add
mov
dec
loop
mov
xchg
or
add
jnp
ss
push
add
cmpl
in
sbb
pop
in
dec
mov
js
add
or
jl
repnz
push
mov
push
adc
adc
test
jl
add
outsl
enter
into
xor
xlat
sbb
jl
rcrb
lods
or
clc
cmp
imul
ret
loopne
jmp
arpl
pop
adc
je
ret
iret
add
into
cmp
add
xor
or
stos
insl
popf
add
xor
and
jl
jl
into
enter
and
sbb
xor
aam
add
lock
mov
xchg
pushf
lea
outsl
adc
cmp
mov
jle
inc
mov
mov
test
add
fmuls
test
jo
add
and
push
loopne
xlat
fildl
xor
inc
repz
imul
std
test
data16
adc
repz
pop
add
or
fmuls
int
cmp
mov
dec
add
push
mov
mov
adc
ss
or
mov
add
mov
and
cwtl
jo
repz
push
or
add
loop
pop
mov
push
add
addr16
jle
jns
fildl
xchg
or
cmp
popf
add
sbb
pushl
pop
stos
dec
xlat
cwtl
jo
add
icebp
outsl
xor
mov
cmp
jl
or
sub
ja
cs
mov
dec
pop
adc
imul
int
pusha
je
cmpb
out
add
and
and
push
out
xor
dec
xor
or
call
in
push
add
aam
sub
add
nop
repnz
and
sbb
xlat
add
push
xchg
and
push
mov
sbbb
aaa
es
pop
add
out
and
fucomp
xor
mov
imul
adc
pop
add
out
or
aaa
add
ficoml
cmovns
xlat
aaa
sub
mov
xor
rolb
xor
sbb
aaa
repz
add
daa
cltd
mov
jne
scas
inc
aad
mov
xchg
leave
int3
dec
add
pop
lea
inc
rorl
aas
insl
mov
in
dec
add
fldl
dec
push
mov
inc
mov
adc
sbb
adc
fcomps
add
cli
add
jbe
jecxz
add
pop
icebp
push
and
imul
sub
mov
jno
dec
scas
add
push
xchg
test
add
lret
pop
in
clc
movsl
xor
mov
cli
out
jbe
xchg
add
pop
dec
cld
add
push
jbe
pop
sub
inc
cld
xor
setl
jnp
add
inc
cmp
jge
adc
sbbb
adc
in
add
dec
imul
test
xchg
mov
outsb
dec
add
cmp
sar
mov
in
lock
and
push
fwait
mov
mov
mov
movsl
cmpsb
shl
out
or
addl
es
inc
js
push
xchg
sub
aas
stos
sbb
int
stos
clc
int3
sub
jo
pop
call
xchg
jo
daa
xchg
shl
inc
add
pop
jmp
rorb
enter
cmpsb
dec
pop
int3
or
fdivs
mov
ffree
push
push
pop
and
or
data16
jo
or
hlt
lds
add
jle
arpl
adc
ret
xor
dec
add
xor
cli
stos
add
jg
lret
add
push
and
sbb
xchg
cld
out
fisubs
xchg
xor
pop
or
insb
and
push
mov
or
sbb
cld
push
and
push
jp
hlt
subl
push
pushf
sbb
stos
add
jno
lds
adc
sbb
repnz
dec
add
xchg
mov
rcr
lahf
xor
test
and
sub
dec
mov
adc
or
or
pop
and
fucomi
repz
dec
out
push
cwtl
cld
gs
sbb
mov
jbe
das
jmp
in
orb
insb
sarl
lds
pusha
inc
cli
inc
cmc
xchg
cmp
js
iret
mov
ret
adc
test
nop
cmp
inc
sub
sbb
pusha
aam
shrb
mov
iret
loopne
out
stos
cld
movsb
out
inc
les
shlb
pop
in
cmp
inc
test
push
add
call
or
icebp
cmp
jo
add
cmp
mov
fildll
fsubp
cmp
rorb
xor
xor
call
add
hlt
sub
jne
enter
and
and
add
dec
and
fldt
sbb
add
rcll
push
ret
add
lds
aam
or
pop
jmp
sub
dec
pushf
add
jecxz
add
mov
enter
clc
dec
shll
fdivrl
xchg
dec
sbb
add
push
roll
mov
clc
xor
mov
adcb
inc
sbbb
popf
and
pop
adc
aas
nop
decl
add
xchg
push
xchg
cmpsb
and
cld
mov
cmp
pop
rcll
cmpsl
xor
imul
adc
add
sbb
jae
pusha
pop
cmpb
lds
js
or
rcrl
lock
mov
in
push
xchg
push
inc
ret
lea
test
sub
fsubrl
out
jge
cmp
je
inc
or
mov
sbb
idivl
pushl
sbb
pop
sub
and
push
push
xchg
pop
jno
or
or
bound
je
ljmp
stos
fisttpl
xchg
or
inc
xchg
lret
cmc
loope
lea
dec
hlt
mov
xchg
add
dec
clc
push
add
lcall
cwtl
iret
or
sbb
je
add
addb
inc
cmp
add
iret
cli
rolb
subb
mov
pop
test
mov
xchg
in
add
hlt
cld
je
cli
call
dec
inc
not
xchg
gs
add
xchg
adc
cmp
add
jbe
jne
mov
inc
and
jb
mov
cld
push
test
fsubrl
lret
or
hlt
test
imul
mov
popf
aas
mov
jmp
xor
add
add
or
sbb
and
xor
add
jg
inc
imul
lods
and
adcb
mov
sub
out
rclb
enter
add
stos
push
add
pop
sub
scas
or
lret
lahf
call
js
ret
mov
test
sti
push
in
loope
xchg
xchg
mov
mov
add
pop
sbb
ss
notl
sbb
jg
cltd
movb
and
repnz
shl
mov
dec
sbbb
call
ficoml
js
inc
sbb
push
add
push
enter
or
add
push
nop
in
inc
cmp
cwtl
push
mov
mov
movsb
sbb
ret
and
jl
lock
int3
adc
jg
inc
sbb
or
rolb
jae
push
or
pop
mov
push
mov
je
sbb
dec
adc
pushf
push
stos
cmp
stos
leave
jp
cli
rorb
adc
loope
and
xchg
mov
lods
sbb
ret
sub
jno
and
scas
cwtl
dec
xorb
push
and
mov
stos
push
shr
loopne
fmuls
in
testb
add
mov
lods
sbb
add
nop
icebp
mov
fsubrl
call
sbb
or
xor
les
sbb
test
pop
mov
arpl
pop
add
adc
rol
mov
add
xor
sub
addl
aaa
inc
scas
xor
outsb
add
lds
add
gs
dec
lfs
pop
cmp
pop
pop
mov
shll
std
cmp
lock
sbb
sbb
xchg
inc
xor
mov
inc
mov
loope
sub
ja
jnp
add
adc
or
mov
add
lea
hlt
jl
add
icebp
xor
xchg
test
add
push
insb
adc
push
or
add
sbb
inc
ljmp
popf
sbb
outsl
jo
subl
add
pop
aas
repz
push
push
movsb
orb
push
xor
fnsave
sub
adc
push
push
add
xor
mov
stc
sti
aad
jle
mov
int
pushf
mov
inc
sbbl
popf
loope
data16
xor
jbe
add
sbb
fildl
adc
rcrb
and
inc
imul
adc
stos
add
and
lahf
cmp
sub
lods
sarb
data16
outsb
loope
xchg
push
push
fcmovnb
adc
or
shll
xor
add
push
sahf
push
add
mov
mov
fadds
sub
adc
jp
pusha
sbb
mov
jae
sub
cltd
loope
cwtl
sub
jl
cmp
add
pop
icebp
mov
xchg
outsl
lret
pop
pop
add
push
adc
inc
add
adc
icebp
push
push
out
fcomps
inc
pop
sbb
and
std
push
jmp
push
lret
xor
push
dec
imul
jg
or
xor
and
xor
out
sbb
mov
pusha
add
cmp
adc
fmuls
or
lret
mov
sbb
and
push
sarb
out
push
or
popa
testb
mov
push
inc
and
adc
subb
out
pop
push
mov
hlt
xor
std
cmp
out
clc
ret
paddw
lcall
and
sub
roll
movb
push
push
pushf
hlt
mov
shlb
sub
jp
jg
add
dec
mov
aad
fdivs
lret
push
in
sbb
sub
pop
int
call
js
add
popf
or
and
ja
inc
push
mov
dec
pop
cmp
popa
sahf
out
fiadds
and
addr16
add
outsb
fldenv
jl
jl
add
ljmp
jbe
and
sbb
fildl
mov
push
xchg
int3
or
xor
andl
sub
cmp
add
xor
subl
cld
bound
cmp
enter
cmpl
loope
out
vmptrst
xchg
ret
dec
mov
test
mov
sub
add
mov
dec
outsb
insb
and
loopne
sub
xchg
ja
add
call
mov
xchg
aam
clc
sbb
jmp
repnz
lahf
and
pop
fnsave
xor
sbb
add
push
sbb
sub
into
push
test
add
push
imul
pop
lret
push
add
pop
scas
sbb
leave
add
rclb
lret
fdiv
fidivrl
daa
add
push
pop
add
xor
or
in
call
mov
call
jg
orl
outsb
or
xchg
mov
popl
cmc
test
pop
push
sarb
pop
add
stos
cmc
and
lods
mov
popf
testl
or
insb
fdivrs
lods
out
and
aaa
lcall
push
test
arpl
mov
sbbl
push
add
sub
loop
sub
push
dec
xchg
mov
jge
lret
mov
dec
pop
xchg
push
mov
sbb
pushf
push
xor
hlt
icebp
jne
ret
test
in
arpl
dec
fstpl
dec
rcll
and
xor
push
scas
mov
pushf
add
mov
in
bound
mov
scas
xlat
cmp
fcomps
inc
movsb
shlb
ldmxcsr
mov
xor
in
nop
stc
jns
push
pop
add
inc
rorb
push
add
popa
mov
jns
pop
rcrb
xchg
stc
mov
out
enter
sub
add
push
pop
and
add
notb
aad
les
inc
sub
mov
ss
mov
cmp
outsl
mov
inc
fucomi
adc
rclb
sbb
jecxz
mulb
cmp
inc
dec
clc
sub
add
es
test
into
out
push
mov
aam
add
xchg
divb
mov
mov
mov
push
orb
push
or
rcrb
jae
add
dec
pop
add
and
pop
add
or
xchg
mov
jp
add
mov
into
push
cmpsl
fimuls
cmp
xchg
push
lods
pushf
add
out
scas
jbe
pop
and
and
add
xchg
stc
mov
pusha
jo
xlat
in
dec
add
arpl
dec
out
inc
fdivrs
adcb
fisubrs
or
xchg
lret
fcomp
add
add
int3
enter
push
or
dec
mov
daa
jg
inc
add
sub
cmp
add
and
add
add
mov
gs
pushf
add
loop
sub
adc
ds
faddl
mov
push
add
ljmp
or
or
and
pop
call
insb
or
add
cmpsl
enter
ret
mov
out
pusha
sbb
inc
and
adc
test
movsl
les
bound
scas
mov
dec
hlt
inc
pop
jmp
mov
cwtl
lods
xorb
inc
add
and
adc
push
daa
dec
push
dec
mov
jg
leave
pushf
xor
adcb
scas
sbb
hlt
movsb
nop
mov
mov
dec
jge
pop
out
pushf
jae
push
add
or
or
add
dec
sarl
add
movsb
in
jle
push
add
sbb
xchg
stc
imul
adc
lahf
in
add
repnz
sti
xor
dec
adc
pop
shrb
test
mov
iret
sbb
jg
dec
cmp
lods
jge
insb
xchg
inc
sbb
pop
cmp
mov
stc
cmp
add
repnz
add
jle
push
inc
fwait
or
pusha
xor
mov
les
xchg
push
fstpl
inc
mov
xor
jno
add
mov
sub
aas
insb
cmpsb
add
cwtl
add
out
inc
call
inc
push
sahf
loopne
and
and
flds
mov
sbb
aad
mov
pushf
mov
mov
push
add
lea
mov
or
mov
shll
push
pop
repz
xor
push
add
leave
add
add
clc
lds
out
mov
sub
mov
pop
pusha
cmp
aad
dec
mov
xchg
push
jae
cmp
add
add
sahf
movsl
mov
sbb
shrb
xchg
add
jns
iret
adc
cmp
orb
mov
xchg
je
es
loop
sbb
inc
push
data16
in
inc
add
outsl
sub
mov
in
mov
shl
hlt
push
pop
xchg
movsb
scas
nop
add
add
pop
insb
pop
add
cmpsb
outsl
pop
dec
mov
jle
ret
push
add
sbb
fldenv
and
imul
sbb
sbb
inc
mov
jg
or
sub
bound
mov
scas
cmp
aad
bound
mov
jns
add
mov
jb
cmc
jno
jp
add
mov
push
pop
add
sub
addr16
or
inc
jno
jbe
cmp
adc
add
add
inc
lret
jl
or
mov
shlb
cmpsl
dec
or
test
add
test
aas
dec
test
fmul
test
jle
mov
in
add
aaa
scas
jmp
mov
push
cmc
lock
nop
aaa
add
inc
test
mov
inc
xchg
xlat
push
push
lds
in
in
lock
mov
push
push
sbb
cmp
rcl
jbe
adc
cld
aas
ljmp
xor
or
add
sbb
fbld
mov
xchg
jns
cmp
add
sahf
or
push
into
pop
cmp
xchg
rol
inc
inc
pop
and
pop
mov
push
fldl
es
in
mov
adc
mov
dec
sbb
jae
add
aas
push
rorb
add
or
test
pop
insl
bound
push
pop
mov
pop
sub
rorb
add
xor
cmp
add
icebp
bound
dec
mov
dec
push
add
sbb
pushf
clc
shl
jb
cmp
xchg
push
add
sarb
and
jo
dec
push
rolb
das
mov
lret
ds
je
add
sbb
lahf
xchg
add
jge
fdiv
lock
add
loopne
mov
and
ficoml
mov
inc
adcb
add
popl
add
mov
add
dec
mov
sub
loop
add
pop
pop
loope
mov
test
sbb
xor
imul
inc
add
cld
clc
aad
sarl
scas
push
cmp
es
mov
popf
loope
cmp
add
jmp
addr16
test
cs
cwtl
sbb
jmp
add
fimull
sub
jl
sahf
adc
xchg
or
and
mov
neg
add
pop
sbb
add
dec
xchg
pop
outsl
loopne
inc
int3
in
sub
mov
adc
or
pop
mov
xor
enter
pusha
mov
mov
movsl
mov
fsubr
cmp
mov
add
jl
lock
pop
add
sbb
dec
add
cmpsl
dec
stos
mov
adc
subb
lret
decl
std
inc
in
sub
xor
xor
data16
mov
add
test
in
cmp
inc
mov
movd
sbb
fisttps
cmpb
xor
xchg
pop
pushl
out
bswap
dec
push
xor
fcmovbe
mov
xchg
es
adc
inc
sub
cmp
verr
clc
fcomps
inc
jmp
repnz
mov
adc
cmpsl
mov
adc
leave
xor
sub
incl
out
push
stos
shll
dec
add
lret
add
repnz
daa
stos
std
les
into
xchg
divl
sub
sbb
lds
add
and
enter
stc
shlb
int3
dec
pop
ja
add
mov
sbb
stos
pop
push
pop
movl
add
sub
nop
cld
xchg
push
nop
mov
or
aas
xchg
push
sti
daa
push
push
rorb
mov
sbb
mov
pop
xchg
loope
inc
xchg
inc
mov
aam
enter
and
xchg
sub
add
out
loopne
lcall
pop
mov
inc
fistpll
icebp
mov
and
or
dec
pop
sbb
inc
arpl
mov
aas
icebp
jo
jle
add
sub
out
push
mov
cmp
aaa
push
jp
sbb
outsb
pop
adc
xor
inc
repnz
xchg
repz
adcb
add
xchg
push
ss
push
pusha
mov
add
in
shr
enter
add
iret
in
clc
add
fsubrl
scas
adc
mov
mov
arpl
sub
sbb
jne
pop
pop
pop
or
cmpps
xchg
xchg
sbb
adc
repnz
mov
inc
jecxz
jmp
les
mov
push
add
adc
cmc
cmc
mov
and
bound
mov
aaa
mov
cmp
add
push
sub
pop
cmp
add
pusha
aas
xchg
cwtl
mov
pop
jo
movsl
insl
xchg
nop
cmp
iret
push
in
in
cli
xchg
out
loopne
or
add
gs
xchg
mov
xlat
jbe
mov
xor
jl
add
mov
sbb
jmp
movsl
inc
xchg
mov
and
mov
push
lock
aad
psubq
fsubrs
sbb
fidivs
cli
imul
add
adc
nop
sub
pop
add
popf
or
adc
pusha
jno
gs
adc
push
stc
or
sub
sbb
sub
insb
inc
rclb
cmc
orl
pop
sub
jnp
push
adc
mov
lret
add
xchg
add
sub
add
roll
in
out
lods
fistl
in
cwtl
gs
les
fs
pop
xchg
lret
arpl
push
mov
add
and
outsl
jnp
add
push
push
fisubrs
test
adc
xor
dec
cmpsb
and
ret
aad
sti
push
dec
and
fidivrl
aam
jo
je
mov
push
jl
negl
shlb
jmp
mov
cmc
add
sub
imul
cmovbe
cmc
xchg
pop
test
sbb
or
jl
pop
dec
loope
fists
adc
aad
xlat
xor
lcall
sub
mov
sbb
mov
call
sub
sbb
cmc
and
add
mov
jg
shrl
mov
andb
xchg
pop
aas
or
xchg
and
repz
addr16
dec
add
xor
pop
lret
test
mov
rorb
xor
add
rcll
inc
pop
leave
pop
jl
mov
push
xor
sahf
xchg
mov
out
call
jo
sbb
or
ss
inc
fists
xor
mov
andb
les
add
daa
nop
mov
or
mov
adc
sbb
cmpsl
dec
mov
pop
push
loopne
pop
xchg
cmpsb
sbb
fcoml
out
aad
mov
jecxz
cld
scas
andb
mull
pop
add
adc
lahf
push
cmp
sbb
js
movsl
rol
dec
mov
cs
push
add
adc
hlt
cmpsb
dec
add
call
mov
sbb
cmp
test
and
pop
sub
mov
clc
mov
jle
mov
dec
lcall
dec
inc
add
push
pop
in
mov
loopne
insb
xorl
cmp
push
jg
shrl
hlt
add
or
xchg
es
xchg
add
add
cmp
fdivrp
ja
inc
add
push
jmp
cmp
mov
mov
sbb
in
sti
lar
jmp
lods
daa
orb
imul
jb
in
les
pop
fbstp
push
sbb
cmp
rcrb
push
lcall
jo
pop
out
gs
xor
sub
add
shrb
mov
ja
hlt
xchg
jmp
jo
inc
mov
add
xor
sbb
xchg
js
add
pop
mov
fldenv
loop
sbb
rcrb
dec
vaddsubps
rorl
in
mov
icebp
out
cltd
or
add
push
add
mov
xor
cwtl
mov
jg
inc
das
outsl
add
pop
push
push
mov
inc
sub
jl
xchg
andb
dec
mov
push
fwait
call
fdivs
add
ret
jmp
xchg
add
shr
push
sbb
mov
orb
clc
dec
add
test
add
daa
aaa
mov
pop
sbb
js
loop
adc
sbb
mov
stos
sbb
out
lcall
sub
add
es
add
push
sub
add
sbb
jp
jno
stc
xchg
inc
ret
mov
xor
sbb
cwtl
mov
add
lret
xor
ja
outsb
pop
xor
dec
xlat
pushf
xchg
xor
stc
out
add
add
mov
adc
mov
dec
push
push
jne
add
xor
xchg
add
pop
mov
fsub
and
push
test
loope
add
inc
loope
out
adc
clc
cmpsb
jbe
aam
ljmp
add
das
xor
jno
add
push
cmp
dec
xchg
mov
loope
add
in
frstor
jae
mov
and
cld
sahf
data16
or
add
inc
pushl
ja
and
addl
ficompl
cmp
inc
sbb
faddl
test
jne
add
sahf
jb
sub
test
das
add
xor
add
inc
jb
dec
je
sub
add
dec
mov
add
aaa
xchg
int
ljmp
into
pop
int3
lret
movb
aam
pop
std
ljmp
jns
jecxz
dec
cmp
xor
incb
loopne
lahf
push
mov
add
mov
sub
ret
and
mov
pushf
outsl
mov
ss
daa
mov
cwtl
mov
pusha
adc
cmp
movb
imul
mov
test
push
and
aas
or
cmp
fadds
dec
arpl
loopne
flds
jbe
add
aas
sub
add
pop
and
dec
push
adc
loope
push
add
add
cmpb
std
jnp
rorb
adc
mov
lcall
pop
pop
lea
bound
dec
or
lock
movsl
xor
cmp
mov
or
mov
xchg
push
ljmp
inc
mov
cmp
inc
lahf
test
or
test
cmp
repz
sub
and
insb
dec
negl
push
scas
add
call
inc
push
mov
mov
clc
in
jnp
add
sbb
lock
add
and
xchg
cmp
push
stos
addb
sub
testl
add
pop
mov
call
xchg
inc
stos
push
push
xchg
hlt
sahf
xor
fmull
sub
popa
cmp
sub
add
inc
pop
clc
outsb
jnp
les
ljmp
add
push
add
popf
add
cmp
pop
dec
push
lret
xchg
xchg
lret
add
rcll
int3
dec
mov
xor
adc
sub
sbb
cmc
outsb
ret
test
add
out
adc
cmp
leave
add
and
aad
clc
jl
cli
les
pop
mov
mov
scas
pop
jne
stc
ja
out
in
call
pop
push
mov
add
nop
jecxz
cmp
push
or
hlt
cmpsl
push
add
add
in
add
pop
or
add
aam
xor
and
add
adc
push
jg
push
fsts
add
cmp
les
cmpsl
jns
test
add
repnz
fsubrs
add
sub
sbb
add
nop
xor
shl
je
add
sbb
mov
cmovno
mov
mov
add
mov
repnz
add
sub
fdivr
inc
orb
xor
add
pusha
shll
pusha
push
adc
sub
mov
and
testl
xchg
test
aaa
repnz
push
andl
popf
cmc
add
jne
rcll
inc
add
xor
scas
adc
aaa
call
dec
jg
or
xor
pop
hlt
xchg
lds
imul
mov
lret
add
mov
sbb
add
or
popf
sahf
xchg
add
and
std
lret
nop
insl
add
mov
sbb
test
stc
xchg
jle
mov
std
stos
fbld
ja
popa
mov
jge
add
cltd
out
mov
outsl
ljmp
pop
js
dec
or
das
jecxz
stc
lcall
roll
sbb
mov
inc
jbe
push
popa
stos
mov
scas
js
enter
mov
and
xor
loopne
imul
cmpl
xor
add
hlt
mov
sbb
pop
jns
add
movsb
add
lods
add
popf
fcomps
mov
add
jl
xchg
jno
add
jle
cld
mov
push
xchg
add
stos
pop
dec
jge
sbbl
adc
dec
lret
icebp
jno
addb
add
jb
push
inc
mov
and
stos
jo
add
cmp
aaa
je
dec
pop
faddl
shlb
inc
and
xchg
int3
test
jbe
or
pop
sbb
ja
xor
cmp
push
push
enter
jmp
loopne
or
xor
push
or
mov
cmc
xorl
cli
cmpsl
pushf
stos
lock
xchg
jne
jge
je
and
testl
mov
jle
mov
pop
add
inc
add
inc
js
add
fmull
and
cmp
cmp
xchg
in
push
sbb
fiaddl
cmp
adc
pop
outsl
xchg
stc
inc
xor
add
stos
rcr
into
cld
mov
scas
call
dec
sbb
xchg
inc
pop
push
bound
ret
shr
add
outsb
xor
sarb
jne
pop
jg
xor
push
je
add
xchg
xchg
clc
pop
jl
sbb
jbe
push
add
imulb
std
in
push
jbe
add
xchg
stc
cmp
xor
je
add
mov
fisubrl
and
call
ret
mov
push
add
movsb
cmp
lahf
add
clc
fldcw
add
leave
xor
add
aam
or
and
imul
ljmp
jne
add
pop
xchg
rorl
loope
andb
sar
mov
dec
mov
mov
inc
pop
fs
addl
jp
push
call
xchg
sbb
add
jnp
inc
les
sub
es
sbb
jns
add
imul
add
jp
cmpl
ds
xor
dec
sbb
lock
adc
or
mov
push
mov
push
cmp
mov
inc
stc
movl
aaa
push
movsb
clc
add
mov
xor
aas
popf
cltd
ljmp
out
ja
cmpsl
dec
add
sub
or
lock
dec
repnz
add
inc
out
aam
mov
test
outsl
dec
fnstsw
sub
jmp
xor
cld
ret
je
pop
add
addr16
rcll
in
add
jbe
scas
lcall
gs
sbb
cmp
fldl
lds
cmpsb
data16
incb
test
mov
pusha
cmp
fcmovb
sub
fnstenv
hlt
lock
std
test
int
sbb
add
icebp
es
dec
xchg
push
loopne
cmc
sbb
jg
sbb
add
lcall
pop
xor
inc
jae
clc
add
out
pop
js
loopne
decl
cmpsl
jae
mov
mov
push
pop
sbb
mov
jle
add
rcrl
add
inc
and
inc
arpl
fmul
test
and
leave
and
mov
mov
and
test
add
pop
pop
jb
add
or
inc
mov
xchg
cli
add
inc
mov
lret
mov
add
pop
inc
and
sbb
dec
icebp
aad
inc
test
pop
push
add
scas
jnp
push
lods
sbb
dec
add
push
test
mov
in
and
les
inc
cmpsb
int3
cmp
scas
stos
and
dec
jmp
repz
mov
test
dec
mov
sub
in
inc
add
and
lds
inc
fcomps
movsl
cli
mov
xchg
add
aaa
out
dec
sbb
xor
sti
mov
mov
add
jecxz
testb
in
jnp
loop
sbb
add
clc
xor
mov
pop
push
mov
arpl
xor
sahf
cmc
add
mov
or
inc
sub
push
imul
stos
and
fadds
into
xchg
cmp
mov
lock
sub
dec
sbb
mov
fnstsw
pop
scas
add
cmp
loope
dec
push
pushf
or
sarb
sub
insb
repnz
shrb
das
inc
cmpsb
pusha
add
lret
insb
cmp
in
nop
fmull
movsb
in
and
adc
lea
sbb
inc
xor
add
adc
ret
scas
sarl
sbb
xchg
dec
sbb
fiadds
adc
push
push
push
adc
sub
inc
add
push
and
jo
fwait
ret
add
xor
cmp
and
addr16
scas
add
ret
sub
jge
jmp
loopne
aas
insb
add
xchg
or
out
adc
push
pop
add
fildll
pop
dec
add
clc
cmpl
adc
push
sub
push
inc
add
push
popa
pop
cmp
adc
testl
fdivs
loopne
iret
adc
mov
addl
scas
pusha
xchg
fiadds
sub
pop
loope
ret
add
mov
xor
mov
idivl
xor
inc
push
out
popf
add
xchg
mov
int
push
add
xchg
jb
jg
sbb
mov
add
pop
rcrb
imul
add
ja
jp
mov
lock
cmpsl
mov
cld
ds
push
shr
aam
mov
sbbb
mov
add
subl
nop
fidivs
aaa
pop
mov
and
jmp
rolb
movntps
xchg
rorb
stos
repz
push
int
clc
cld
or
testl
lea
repz
shlb
pop
lock
add
jbe
push
push
pop
xor
mov
add
adc
mov
xchg
dec
add
sub
mov
add
add
push
adc
mov
mov
add
sub
shrl
jl
fdivrs
pushf
xchg
inc
pop
test
movsl
mov
pusha
fimull
ljmp
push
xor
loop
mov
pop
mov
out
lock
sub
arpl
jnp
pop
testb
xchg
nop
add
sbb
sbb
popf
cs
dec
cld
out
or
aas
push
push
add
jle
add
add
jb
mov
sub
sub
jne
ja
xor
inc
insl
or
js
push
std
pop
mov
push
pop
jg
push
push
shrl
dec
cmp
inc
fistpll
sti
add
dec
shll
repnz
add
out
lret
push
test
xchg
and
sub
ret
add
push
push
mov
dec
and
jb
mov
add
loopne
push
mov
dec
add
popa
outsb
pop
in
and
or
adc
cwtl
mov
jecxz
scas
inc
sbb
lcall
push
callw
mov
jne
push
fwait
popa
mov
js
scas
cli
dec
mov
mov
fld
cmp
cmp
andl
and
cmova
inc
fistps
sub
cmpsl
test
and
add
setns
loopne
add
nop
fnsave
add
pop
test
int
mov
cmp
xchg
dec
xlat
mov
stos
add
add
das
loope
xchg
dec
iret
clc
nop
mov
inc
pusha
aam
or
sub
jb
add
das
jo
imul
sbb
js
ja
add
or
add
jns
cmp
mov
sub
mov
or
xlat
outsb
push
adcb
cmp
sbb
sub
pop
adc
movsb
add
adc
loopne
mov
aaa
psubsw
adc
jnp
das
ds
je
push
or
mov
mov
adc
mov
pop
iret
adc
pop
dec
popf
add
mov
sbb
mov
gs
xor
stc
or
xchg
pop
add
and
and
add
adc
add
add
add
sub
jns
leave
enter
cmpsb
shrl
adc
clc
push
cwtl
mov
cmp
inc
mov
push
add
fimuls
ret
shlb
cld
add
mov
insl
insb
rolb
inc
add
mov
xchg
inc
xchg
std
add
js
lds
or
pop
bound
mov
push
dec
pusha
cmp
cmp
dec
and
mov
sti
fsubr
insb
add
das
iret
mov
adc
sar
and
pop
dec
mov
lock
test
pop
xchg
add
lods
pushf
in
mov
push
les
push
jns
mov
fildl
lock
fwait
sbb
or
jecxz
and
fldl
add
pop
dec
add
adc
add
dec
cmp
shlb
roll
push
mov
popw
and
rcr
mov
push
pop
cmp
inc
jb
xchg
xor
add
adc
leave
sbbl
push
scas
rorb
iret
cld
mov
aas
aad
jne
sbbl
sbb
or
dec
hlt
sub
xorb
xchg
lret
add
cmp
mov
dec
scas
ja
test
icebp
push
dec
in
mov
aam
aad
cmp
lock
push
adcl
mov
jge
add
mov
out
push
sbbb
lea
mov
or
xchg
int
and
inc
loope
lds
mov
or
adc
js
xor
ficompl
xchg
inc
add
push
xor
and
sti
xchg
ret
mov
cmc
imul
jmp
inc
scas
fsubrs
adc
mov
or
or
nop
mov
mov
cmp
insb
jge
pusha
rclb
push
incl
adc
pop
xchg
cmp
nop
cld
add
loop
aad
jne
fsubr
and
lds
outsb
inc
dec
xchg
push
mov
loopne
shll
lcall
hlt
and
aam
inc
orb
test
subl
popa
out
jle
pop
orl
in
into
dec
icebp
xchg
dec
testb
and
pop
je
dec
mov
sbb
rolb
cmpsl
ret
jae
roll
cmp
mov
lahf
repnz
mov
mov
inc
xchg
cmpsl
push
test
adcb
inc
add
insl
cmp
push
add
mov
iret
subb
cld
ffreep
adc
nop
outsl
pusha
add
mov
push
cmp
add
dec
dec
popa
aad
clc
pop
mov
add
in
adc
add
jne
mov
cld
ds
nop
dec
cmpb
add
shrd
add
stos
rolb
sahf
push
inc
js
inc
shl
jle
mov
and
lret
inc
out
scas
int
sbb
outsb
in
rolb
shll
test
mov
les
lock
or
jnp
daa
add
or
dec
mov
test
lods
add
add
or
testb
rolb
cltd
daa
int3
loop
push
leave
jns
test
outsb
sbb
jbe
sub
add
aaa
mov
dec
xor
push
xor
lret
inc
pop
cmp
fs
dec
sub
es
int
pop
mov
jnp
mov
xchg
xchg
inc
lcall
add
cli
imul
add
sbb
mov
mov
add
jnp
test
pushf
mov
push
pop
add
add
jnp
push
adc
sbb
out
lods
jb
mov
add
mov
dec
ucomiss
loopne
mov
pop
repnz
mov
mov
add
sbb
cmp
je
scas
rcll
lock
rolb
sbb
add
testl
out
ds
push
dec
pop
xchg
loopne
pop
pusha
pusha
mov
outsb
inc
arpl
mov
adc
add
rcrl
cmp
aaa
add
bound
add
add
les
loop
scas
aad
dec
out
push
cmp
cmp
test
andb
repz
dec
in
test
lds
inc
jno
jnp
aas
pushf
aaa
pusha
test
add
icebp
inc
add
add
jmp
adc
xor
xchg
add
call
addr16
hlt
iret
add
in
xor
add
xor
cwtl
push
das
lea
insb
adc
mov
mov
xor
mov
cmpsl
into
mov
jp
mov
add
push
sbb
jl
add
jge
add
sbb
jmp
rorb
mov
or
xchg
ret
bound
imul
ljmp
pop
cltd
data16
adc
mul
out
pop
mov
mov
sub
sub
bound
enter
mov
lret
xchg
clc
xchg
sub
stos
stc
add
jle
pop
add
mov
inc
or
lahf
add
push
inc
leave
push
fsubrl
imul
adc
in
scas
dec
or
pushf
outsl
setno
lcall
push
lods
mov
mov
ja
adc
aad
cmp
mov
hlt
daa
out
scas
mov
xor
xchg
cmp
aaa
pop
push
cmp
add
js
nop
lret
fdivs
repz
push
adc
mov
mov
ds
loopne
enter
sub
dec
jno
dec
aad
add
fiaddl
xchg
lock
add
loope
jo
sub
push
loopne
rcrb
cwtl
mov
mov
int3
push
push
lock
cmp
scas
add
cmpsl
dec
cmp
inc
mov
sbb
iret
adc
out
enter
add
xor
arpl
add
sbb
js
xor
add
inc
inc
mov
xchg
hlt
pop
add
jmp
jl
and
add
je
mov
pop
cwtl
add
cmp
clc
cmpl
inc
mov
out
loope
mov
inc
or
das
pop
orl
stos
sub
out
filds
jmp
mov
cwtl
add
adc
iret
push
push
gs
insl
fildl
notl
xchg
cmp
add
popa
jg
sbb
cmpsb
cmp
and
in
lcall
shll
sbb
push
add
lods
xchg
fincstp
repnz
fmuls
ss
and
test
mov
push
jp
cmpsl
into
gs
add
push
xchg
add
mov
jnp
mov
lock
inc
add
or
jns
add
and
divl
push
and
imul
rcrb
mov
add
mov
inc
sarb
cmp
pop
and
add
out
sub
add
push
shrb
leave
adc
es
mov
test
scas
add
pop
push
adc
dec
jbe
adc
mov
xchg
ljmp
add
jo
pop
js
add
xchg
stos
leave
jnp
fwait
shrl
test
jmp
cmpsb
add
cwtl
pusha
jno
cmp
add
add
inc
clc
popl
outsl
add
jns
in
add
mov
push
int
sbb
repnz
xchg
xchg
xchg
jle
mov
jno
mov
fwait
incl
cmp
cmp
push
sahf
gs
add
into
cli
dec
aas
add
or
inc
add
sub
in
inc
push
cmp
sbb
js
dec
subb
add
jnp
mov
fidivrl
fdivrs
and
mov
scas
addb
ret
insb
pop
jl
cmp
into
mov
pop
jnp
xchg
or
roll
xor
lods
push
fstpl
pusha
dec
and
add
xor
mov
arpl
inc
dec
push
out
jle
pusha
data16
test
movsb
lock
mov
xchg
arpl
pusha
push
mov
jne
push
shl
sub
fsub
cmp
mov
cld
movsb
jg
out
repnz
adc
lret
sbb
push
mov
je
cwtl
ljmp
lcall
and
xchg
int
inc
fcoml
mov
sub
andl
flds
sub
jno
addl
cwtl
outsb
outsl
cmp
jle
clc
or
mov
add
aad
in
mov
insb
sub
fs
mov
add
outsl
aas
outsb
shrb
jo
jae
add
jmp
jle
push
in
out
lock
and
aas
adc
shll
jbe
lea
push
mov
cmp
add
or
scas
sbb
mov
stos
inc
loopne
scas
jle
fstl
mov
jp
add
adc
pusha
add
icebp
pushf
pop
and
bound
add
mov
pop
js
add
cld
xchg
add
test
mov
add
sub
hlt
mov
clc
sbb
adc
add
xor
push
outsb
test
add
or
cs
mov
pop
orl
imul
dec
insl
push
shlb
add
pop
rol
je
add
sti
outsl
lea
add
popa
push
jno
sub
cmc
ljmp
punpckhbw
cmp
dec
lahf
icebp
sahf
jg
fs
out
xor
orb
hlt
shll
adc
xor
clc
sbb
iret
push
ret
or
bound
add
jns
fmul
and
adc
lret
loope
cs
ja
add
and
mov
inc
stos
loop
cmp
jl
and
aam
add
dec
imul
daa
xlat
add
fucomi
sub
call
inc
ja
fwait
aaa
insl
popl
int
xchg
sub
mov
in
lds
pop
adc
lock
cmp
xchg
loop
add
das
mov
add
pushf
adc
lock
and
negb
xor
insl
cmp
outsl
stc
add
pop
cs
mov
or
ret
and
jecxz
push
or
adc
inc
cmp
inc
mov
sti
push
aad
push
pop
shl
pop
ja
mov
cmp
testb
and
jnp
xchg
in
add
imul
popf
outsb
jae
jbe
add
dec
movsb
sti
xor
push
push
int
jmp
mul
fs
enter
add
xchg
lods
ljmp
pop
inc
fistpl
pop
cld
aam
adc
lret
jbe
jl
add
xchg
sub
popl
into
xchg
js
pop
push
ret
filds
pop
or
xlat
adc
jecxz
aam
add
inc
in
push
lcall
adc
mov
jecxz
adcb
xlat
pusha
xchg
aas
mov
dec
add
arpl
add
mov
mov
mov
movsl
bswap
rcl
lods
pusha
lods
rcr
clc
mov
sbb
jle
push
mov
push
pop
shlb
int3
or
enter
das
xchg
add
iret
xor
add
cli
dec
xchg
cmp
out
add
outsb
sbb
push
or
xor
or
shrl
ja
rcrb
add
mov
xor
add
and
pop
jbe
dec
gs
mov
xchg
xchg
mov
mov
in
or
call
lods
xchg
xor
xor
and
ds
mov
test
fldcw
mov
and
fdiv
icebp
lcall
xchg
subb
jl
push
inc
andb
mov
cmpsl
jg
mov
cmp
inc
pusha
cmp
lock
add
push
pusha
adc
lods
jmp
mov
or
jle
roll
inc
pop
je
xchg
jbe
loope
dec
pop
push
fsubl
cltd
pop
or
xor
and
mov
aad
in
pusha
cmp
or
test
pushf
mov
or
mov
mov
jne
adc
cmp
cmc
add
xor
filds
lahf
inc
lods
mov
pop
cld
mov
cmpb
pusha
mov
add
lcall
outsb
sbb
sbb
mov
adc
inc
cmp
xlat
add
or
jns
jmp
pop
jnp
mov
cmp
into
movsb
loopne
ret
add
cmp
cld
dec
push
add
test
imul
movsb
mov
add
xchg
sarb
push
sbbb
imul
fstpt
jb
add
ret
fnsave
cmp
ljmp
dec
add
vpunpcklbw
ljmp
xor
mov
aas
pop
sti
test
mov
mulb
inc
push
push
jmp
dec
xor
mov
or
btc
jnp
out
aam
ja
rorb
cmp
imul
hlt
shrb
and
fs
xor
aad
mov
and
sbb
aad
pop
push
icebp
int3
pop
inc
pushf
movb
jnp
mulb
adc
out
cmp
xor
nop
orb
or
inc
push
xchg
imul
adc
les
mov
add
xor
xchg
btr
sbb
arpl
rorb
adc
mov
in
sub
xchg
fs
push
add
or
pop
add
ret
add
mov
hlt
outsl
add
imul
push
inc
sub
bound
cmc
cli
sbb
xor
sahf
cld
or
test
mov
bound
addr16
call
mov
xchg
and
scas
iret
sbb
pusha
arpl
faddl
fs
xor
or
repz
test
xchg
stos
mov
ficompl
testb
mov
or
cmc
js
or
lahf
mov
fsubp
mov
lock
push
cmp
dec
mov
mov
arpl
data16
jg
into
push
adc
pop
dec
mov
and
mov
jg
add
add
mov
jo
fcomi
cmp
adc
lret
mov
or
pop
jmp
andb
cmp
add
inc
inc
lret
xor
aam
bound
inc
addr16
dec
test
add
sub
in
das
add
outsl
dec
xchg
lcall
fsts
test
jnp
and
push
mov
push
clc
pusha
add
sub
jne
fldenv
pop
mov
addl
fsubrl
movq
xor
faddl
add
rclb
inc
cmp
add
jecxz
in
and
les
loopne
pop
loop
shll
jmp
and
add
push
and
iret
inc
mov
pop
cmp
mov
lods
fcmovu
and
cmp
sbb
hlt
xchg
call
clc
popa
inc
cmpsl
pusha
testl
or
push
jns
out
add
enter
add
mov
sub
rolb
push
jl
addr16
ret
xchg
jne
add
adc
add
imul
or
lds
leave
pop
add
pop
fwait
cmp
sub
cmpsl
popa
xor
mov
pop
add
push
push
cmp
add
addr16
cmpsl
jl
pop
test
mov
push
xor
or
shll
out
insb
cmp
rclb
mov
cmp
xor
jbe
xor
movb
cmp
add
hlt
roll
xor
or
outsb
repz
repnz
push
fstl
pop
adc
repz
shll
or
and
aas
add
or
jo
sbbb
cmp
inc
imul
repz
addb
rorl
adc
push
nop
divb
xor
adc
out
mov
xchg
mov
andb
cmp
add
sub
push
add
mov
loope
sti
push
adcl
cwtl
add
sbb
mov
or
mov
jbe
ja
fdivs
mov
lret
repz
shrb
xchg
add
sub
cmp
je
xchg
fcomps
fldl
enter
pop
fsubs
lock
cld
movb
or
mov
addr16
aas
adc
in
inc
out
in
outsl
add
rcll
pop
inc
xor
jb
add
test
jo
cmp
or
fs
nop
hlt
pop
out
fistpl
jbe
push
push
in
dec
jo
mov
push
inc
dec
add
aaa
xor
push
jmp
lock
add
mov
repnz
daa
icebp
in
fdivrs
jmp
xchg
and
push
pusha
mov
add
xchg
mov
arpl
or
gs
sub
pop
lahf
sbb
push
orb
andb
mov
mov
and
mov
mov
or
jge
pop
sbb
add
testb
jnp
mov
fnstsw
sub
iret
mov
cs
or
mov
cmp
xchg
xor
rorb
aad
imul
repz
pop
adc
ljmp
sbb
and
out
add
jge
lea
push
xlat
pop
inc
inc
push
test
add
lret
out
xor
lahf
xchg
out
dec
push
push
inc
push
addr16
sti
stos
test
or
add
sbb
aas
add
std
arpl
push
dec
or
jmp
loopne
rclb
nop
add
jnp
jp
push
cld
inc
pop
mov
cld
dec
gs
into
jmp
pushf
add
inc
mov
add
stc
jbe
inc
and
cmpsl
and
mov
add
arpl
out
rcrl
dec
add
dec
xchg
stos
cld
and
and
add
test
sbb
jne,pn
outsb
dec
mov
inc
pop
pop
and
loopne
ret
fsubrl
jl
add
mov
in
xor
popf
in
jl
xchg
sahf
lret
sbb
or
cmp
mov
mov
jnp
cmp
sbb
sbb
mov
clc
adc
add
mov
fsts
xor
and
cmove
jo
add
fcoms
loop
rclb
lds
mov
or
add
ljmp
outsb
sbb
fidivs
sbb
mov
cmp
and
stc
addr16
inc
push
mov
dec
cmp
pop
cmpsb
daa
loopne
js
aam
mov
fmull
add
rolb
scas
rcrb
cli
mov
adc
and
lock
addb
aaa
call
ljmp
mov
lahf
push
sahf
add
loop
add
repz
faddl
jb
push
push
insl
mov
or
out
pop
scas
stos
in
jg
out
test
add
cmovp
xchg
mov
test
mov
or
subb
push
test
jge
push
je
add
lea
mov
pcmpeqw
push
aaa
push
push
xor
or
outsb
add
es
cmp
jb
add
jmp
pushf
add
sbb
fs
add
push
lea
jg
add
push
subb
or
int3
lret
add
jo
add
mov
lock
pusha
push
and
add
addl
mov
lods
sub
jle
cs
inc
test
inc
sbb
cli
sbb
and
or
test
es
fistpll
mov
pop
cmpsb
sub
push
hlt
push
fbld
cmpsl
adc
xchg
je
adc
mov
adc
adc
adc
inc
sub
xchg
xchg
add
xor
jb
xor
jbe
sub
add
ds
cltd
dec
aaa
lret
jnp
sarl
fcmovu
add
add
std
xchg
dec
divl
out
addl
sbb
inc
sub
xlat
call
jle
xlat
dec
pop
xor
cmp
lea
lret
sahf
test
inc
lds
cmp
jg
test
loopne
cwtl
xlat
pop
add
fs
bnd
ret
cli
mulps
mov
and
hlt
add
add
cmp
imul
pop
mov
cmp
pop
add
pop
adc
call
push
add
and
mov
pop
repz
adc
sbb
add
ljmp
dec
or
add
stc
js
rol
xorb
inc
push
loopne
adc
jae
add
insl
push
pop
sub
out
add
fimull
shrb
add
sub
das
and
sbb
pusha
ja
mov
add
outsl
xor
addr16
xchg
loop
add
xchg
sahf
adc
iret
aam
inc
xchg
cltd
shll
pop
sti
pusha
adc
insb
lret
add
int3
adc
adc
jbe
add
adc
aas
or
sbb
jge
sub
xchg
push
push
das
pop
mov
inc
mov
repnz
repz
stc
push
and
in
jg
add
adc
aaa
cwtl
add
sbb
lea
inc
inc
ds
roll
movsl
cld
test
pop
lock
into
pop
movsb
adc
aas
add
cmpsb
out
repz
fldl
add
xor
lock
sbb
fst
mov
mov
ds
sti
xorb
out
dec
mov
stos
test
jb
mov
dec
ret
xchg
pop
mov
add
xchg
rcrl
cmp
inc
cmp
adc
add
lea
outsl
sub
add
pusha
add
pop
add
add
scas
mov
pop
daa
sub
jmp
push
sub
test
test
dec
popa
pop
adc
cmpsl
cmpb
add
mov
adc
jo
das
ljmp
add
popa
bound
dec
ror
add
push
pop
clc
pop
or
inc
jbe
ja
push
cld
jb
add
and
ret
sub
jo
mov
mov
sarb
imul
lea
push
fsubs
repz
leave
mov
sbb
inc
add
test
mov
add
aam
push
ds
test
popa
in
pusha
add
cmp
movl
popa
sbb
cmp
mov
add
repnz
mov
flds
shr
cmp
add
mov
mov
push
jne
xchg
sub
add
mov
aaa
aad
pop
push
jle
call
bound
outsl
test
dec
cmp
mov
or
push
push
xorl
mov
mov
sub
fimuls
sbb
mov
add
mov
add
in
cld
jnp
fwait
cmc
imul
or
loope
in
cmpsl
xor
add
adcl
in
lds
test
jo
push
movsl
push
pop
pusha
sub
jne
out
lds
push
jl
shlb
and
ds
movl
out
scas
outsl
push
dec
add
jns
pusha
gs
in
sbb
sbb
stc
xchg
push
dec
pop
cmpsl
add
leave
or
daa
add
getsec
ja
loop
mov
add
in
nop
jno
cmpb
in
add
lods
add
in
scas
out
add
stos
iret
mov
or
stos
cld
loope
push
push
adc
sbb
mov
lods
jmp
push
sub
test
and
ljmp
les
sbb
cmc
dec
inc
out
xchg
sahf
xchg
or
cli
insl
and
addb
les
sti
pushf
cmp
push
idivb
loopne
ror
xchg
mov
andb
insl
scas
shlb
std
loopne
add
data16
movsb
pop
or
loopne
cmp
shrd
cmp
pop
inc
testb
rorl
inc
add
iret
sub
adc
mov
mov
cli
or
jecxz
test
and
or
and
adc
mov
xchg
mov
xor
or
add
mov
aam
jo
loopne
test
pop
sub
add
pusha
or
pop
xor
test
cmp
xchg
add
stc
sub
mov
xchg
mov
cmp
pop
addb
sahf
mov
push
adc
jecxz
cmp
xchg
inc
xor
add
jno
pusha
clc
bound
add
jb
out
stc
mov
sahf
sub
sub
push
push
sbbb
push
xorb
out
jge
add
sbb
add
pop
xor
add
xchg
fwait
pop
mov
add
mov
jecxz
dec
lea
mov
cmp
daa
add
addr16
adc
jne
orl
cltd
aas
lahf
add
pop
mov
add
subl
mov
inc
sub
dec
and
or
cmp
in
fsubrs
test
xor
push
imull
cld
cmp
xchg
ret
ss
push
loopne
sbb
hlt
je
cmp
cmp
add
mov
sbb
mov
cmp
inc
cmc
pop
imul
pop
add
cmpsb
xchg
push
mull
iret
lret
add
fstl
sbbb
sub
mov
lods
imul
mov
aam
pop
js
loope
stos
mov
cmp
mov
stc
ret
push
pushf
xlat
mov
mov
add
mov
imul
loope
cmp
insl
in
roll
jno
fistl
cmp
pop
push
in
test
sbb
add
pshufw
stc
adcb
cmpsl
in
pop
es
in
push
mov
loopne
enter
cmp
adc
out
cmpsl
cmpb
nop
sbb
imul
mov
cmp
fadds
lds
arpl
es
repnz
daa
xchg
jne
jo
movsb
imul
cmp
aas
sub
mov
add
cmc
ss
mov
push
lahf
ja
and
cmp
add
or
push
dec
cmp
xor
insl
je
out
add
outsb
add
add
in
fiadds
iret
ret
cld
add
pop
inc
mov
inc
xor
std
pop
sbb
push
fildll
das
pop
mov
mov
pop
add
out
inc
or
ds
orb
dec
dec
out
jbe
add
nop
add
test
xchg
mov
pop
ja
mulb
add
push
inc
jle
in
nop
clc
int3
fwait
adc
test
xchg
pushf
movsb
cltd
add
sub
add
cwtl
cmp
jmp
cmp
push
xchg
shrb
repnz
jmp
adc
shr
jnp
jno
adc
pop
ja
mov
arpl
jo
cmp
addb
std
push
sub
enter
aaa
jo
in
add
mov
test
and
mull
dec
sub
push
cmpsb
aam
sti
jo
jno
dec
cmpb
sbb
sub
rcrb
add
xor
fiaddl
push
outsl
out
je
or
add
in
popa
jge
mov
rorb
add
sbb
inc
mov
add
jge
stos
sub
mov
cld
sbb
add
cmp
loopne
std
shlb
aaa
and
push
add
cmp
sbb
sbb
adc
daa
xor
mov
mov
xlat
mov
cmp
fwait
outsb
test
adc
add
xchg
lds
mov
add
jnp
jecxz
xor
sbb
cli
sub
stc
mov
cmpsb
jmp
sub
xchg
mov
in
dec
adc
imul
cmovne
out
mov
mov
mov
add
mov
mov
jbe
sarl
push
jle
dec
cmp
movb
shlb
fnsave
fstpt
clc
inc
add
pop
lods
mov
fmull
out
or
push
pop
aad
popf
testb
dec
addr16
insb
ja
add
fs
in
or
sti
movl
jbe
pop
xchg
inc
into
ret
insl
add
out
cmp
movsb
or
add
lods
add
pop
lahf
int3
jo
sbb
add
lret
push
jl
bound
dec
icebp
sbb
in
adc
jp
testl
test
xor
outsl
decb
shrd
pusha
sbb
jb
add
xor
mov
add
cmp
rolb
arpl
int
push
adc
sub
ficomps
imul
stc
fadds
fstps
std
mov
outsb
cli
adc
or
mov
scas
ljmp
push
in
add
ds
xchg
nop
out
cmp
int3
add
lar
stos
jp
add
inc
inc
add
lret
cmp
in
popf
or
imul
push
hlt
and
xchg
mov
xchg
call
cwtl
pusha
add
fwait
mov
ljmp
cmp
lcall
sbb
pop
add
inc
shl
ds
add
mov
movsb
in
push
out
fnstenvs
jl
andb
jns
mov
dec
jp
add
or
add
sub
mov
xor
movsl
or
lods
mull
frstor
fiaddl
xchg
mov
sub
mov
cmp
aad
sub
adc
lahf
lds
adc
jmp
cmp
orl
pop
flds
sub
inc
add
jecxz
jmp
add
mov
push
inc
sbb
aam
add
jmp
jne
cmp
pop
and
pop
mov
popa
mov
cltd
xchg
cmc
fiadds
rcrl
stos
mov
arpl
push
and
jae
clc
sar
push
pushf
sub
aas
sub
cmpsl
add
cs
ja
dec
decl
add
roll
sub
mov
shlb
ret
jae
ds
or
inc
cmp
ja
add
fmuls
nop
push
xlat
jp
cmp
lods
rclb
inc
popf
sti
mov
inc
scas
sbb
add
jnp
sbb
push
dec
lcall
cmp
jmp
in
sbb
in
int
movl
mov
clc
jle
add
in
sbb
add
sbb
imul
xchg
out
cmp
adc
xchg
jmp
test
in
cmc
add
adc
movsb
add
xor
cmpsl
lods
loope
or
jo
sbb
adc
ja
add
sbb
loope
dec
cltd
jecxz
in
push
or
frstor
add
fldenv
push
fs
aaa
pop
inc
mov
pop
jb
push
add
popf
fxch
in
mov
sub
jo
add
mov
pop
popf
std
mov
adc
pop
jg
dec
add
call
dec
pop
enter
addr16
jae
mov
add
insl
movsb
xchg
add
std
daa
sbb
imul
adc
jle
add
mov
mov
push
outsb
pop
sbbb
add
push
loop
push
cmpsl
dec
hlt
inc
push
std
movsl
push
orl
mov
adc
dec
dec
pop
fdivs
xchg
add
es
movsl
ja
add
lods
mov
in
fcmovnb
cmp
cwtl
mov
add
cmpsl
adc
sahf
das
push
sbb
cmp
mov
push
pop
add
sbb
cld
xchg
lock
jmp
xchg
ret
sbb
repz
loope
test
movsl
mulb
cld
cs
or
jecxz
dec
das
pop
mov
rol
cmp
test
or
nop
fldl
inc
mov
int3
sbb
xor
push
push
pop
pusha
rolb
mov
sub
add
inc
stos
fs
test
arpl
jmp
add
and
mov
add
loope
add
xor
rolb
bound
push
mov
lcall
ja
push
pusha
sti
add
stc
aad
xor
mov
pop
cmp
adc
fld
lock
mov
add
fbld
inc
loop
add
jle
dec
repz
dec
sbb
add
xchg
dec
pusha
mov
clc
enter
add
pushf
sbb
add
outsl
xchg
xlat
xchg
or
ljmp
mov
repnz
and
mov
pop
mov
adc
push
jb
sbb
add
mov
movb
sbb
inc
add
inc
addr16
add
xchg
cld
jae
push
fs
sbb
ret
int
notb
test
push
add
cmp
mov
push
inc
movsb
dec
xor
loopne
add
sub
jae
insl
dec
add
push
push
je
enter
fdivrl
pop
cmp
add
pusha
jns
and
push
aaa
or
inc
icebp
sbb
ljmp
sbbl
arpl
ljmp
push
lret
lods
repnz
push
jmp
add
hlt
push
dec
cmpsb
cld
stos
add
inc
icebp
xchg
out
arpl
jg
lock
pop
dec
loope
dec
xor
jo
shl
adc
insb
lea
popf
in
mov
add
pop
mov
cwtl
mov
xlat
ucomiss
lahf
or
std
mov
dec
jmp
xchg
lahf
cmpl
aam
add
jne
mov
inc
je
xorb
lods
and
cs
cmp
nop
rorb
push
int3
pop
loopne
dec
add
lea
xchg
add
nop
xor
test
mov
pop
icebp
popf
adc
cmp
mov
aad
stos
mov
push
cwtl
rcrb
pop
cmpsb
mov
add
push
add
fistpll
and
jbe
gs
pusha
and
xor
push
pop
mov
add
popf
fstpl
pop
add
leave
add
mov
push
pusha
add
fisttps
add
mov
push
fidivrs
add
imul
xchg
add
mov
test
out
cmpsl
ss
fcoms
in
and
or
ss
mov
lea
arpl
add
or
je
add
xchg
loop
ret
mov
pop
scas
xchg
push
cmpsb
call
add
into
repnz
mov
cmp
test
xor
subb
add
sub
test
cli
xchg
sbb
pop
fcoms
rol
fisubs
sbb
or
mov
into
mov
out
bsf
int3
mov
jns
add
mov
pop
jmp
or
pop
push
push
cmpsl
mov
mov
or
test
pop
jecxz
cmp
add
pop
ror
inc
outsb
mov
add
sub
mov
popa
add
xchg
aad
rcr
xchg
add
pop
cmpsb
inc
lahf
mov
pop
fs
dec
add
std
outsb
push
cmp
repnz
mov
cs
add
inc
out
add
jmp
sarb
mov
aas
ds
push
or
ljmp
out
inc
jg
sbb
jle
scas
rclb
and
mov
sbb
sub
mov
or
incl
jmp
ds
cmpb
xor
lods
stos
test
mov
xchg
add
add
add
pop
push
xlat
push
or
into
pop
je
ficoms
push
sub
and
jge
mov
pop
cwtl
push
add
and
push
push
mov
mov
add
insl
mov
add
lret
negl
mov
sbb
add
movsb
imul
ret
dec
xor
pop
sub
into
sbb
add
mull
mov
dec
cmp
xchg
sbb
sbb
jp
jmp
sbb
hlt
or
mov
jecxz
mov
xchg
xchg
iret
lock
jnp
add
mov
mov
iret
lock
ljmp
ja
subb
sub
add
mov
add
test
add
sbb
loopne
orb
les
out
xor
mov
popf
add
sbb
mov
testl
adc
adc
jns
mov
mov
add
dec
fisubs
jne
fisttpll
ds
sahf
cmp
cmp
and
cmc
add
mov
scas
mov
ljmp
sub
cmp
jg
pop
ror
sbb
clc
out
dec
mov
xor
pop
mov
fcmovnbe
pop
add
dec
stc
xlat
and
sbb
add
insb
mov
fidivrs
lds
cmp
mov
imul
push
leave
and
push
mov
add
je
adcb
stos
add
cmp
mov
fistpl
sbb
clc
pop
out
dec
add
push
xchg
cld
cltd
xorb
cmp
aaa
fists
pop
shr
xor
pusha
jmp
loope
xchg
push
rcl
xchg
ljmp
pop
nop
loopne
iret
subl
mov
mov
lds
xor
push
movsb
into
mov
and
std
cli
adc
lock
fiadds
sub
and
push
sbb
inc
pop
pop
sahf
pop
stos
scas
jbe
cltd
sbb
mov
and
adcl
cmp
clc
mov
lock
repnz
or
xchg
dec
ss
adc
add
ja
mov
iret
mov
pop
sub
mov
gs
add
lods
add
mov
adc
xchg
ret
xchg
add
adc
jno
mov
mov
mov
mov
repz
flds
push
mov
je
add
out
sahf
or
dec
push
ljmp
adcb
cmp
add
push
inc
pop
int3
out
fwait
add
popa
js
roll
jno
out
ljmp
test
aas
sub
mov
jecxz
add
mov
jg
cmp
pop
gs
ja
clc
mov
out
popf
add
or
pop
jecxz
orl
movsb
loope
push
dec
xchg
xor
add
les
xor
sub
dec
test
aam
lds
sub
cmpb
popa
pop
loope
out
dec
inc
pop
push
mov
add
test
cmp
scas
mov
add
push
add
pop
cwtl
outsl
push
add
inc
push
shlb
pop
fdivl
and
aad
cltd
cmp
loopne
mov
scas
mov
je
mov
add
xor
dec
dec
pop
mov
sub
pop
call
push
dec
push
cmp
loope
add
xor
push
inc
jno
out
jns
test
stc
push
cmpb
aad
scas
mov
je
mov
add
fimull
jo
loopne
or
insb
es
mov
pop
leave
dec
add
add
in
push
sbb
vcomiss
jle
hlt
int
inc
push
js
push
sbb
xorl
and
cmp
dec
jae
lock
adc
push
sbbb
add
jne
dec
add
adc
jo
dec
bt
push
outsb
and
jg
sub
pop
pop
or
jbe
rolb
push
fdivrs
out
sbb
scas
sub
pop
nop
dec
arpl
push
add
push
xor
add
mov
jecxz
sbb
shrl
mov
jl
sbb
gs
leave
outsb
int3
shrl
in
loopne
jno
fsubrl
das
sub
inc
xor
xor
sub
add
lock
cmpsl
xor
add
aad
imulb
sub
lock
incl
jmp
sbbb
jecxz
mov
fwait
jbe
iret
mov
pusha
sbb
mov
mull
mov
loopne
popf
sbb
ljmp
jnp
jecxz
call
sbb
cmp
out
out
lea
adc
lods
movsb
or
sbbb
test
ret
test
push
int3
cltd
inc
aaa
dec
sub
xorb
aas
lcall
push
icebp
out
out
or
sbb
test
mov
clc
push
fldl
leave
xor
lret
ja
nop
push
or
or
mov
add
xorl
xor
out
mov
clc
xchg
xlat
outsb
dec
add
fwait
push
movl
ss
push
loope
cmpsl
adc
es
jo
pop
mov
mov
add
inc
fcoml
mov
les
lods
inc
sub
arpl
add
add
in
add
sbb
dec
and
fsubrs
rorl
loopne
add
jnp
ja
ljmp
divl
aas
add
pop
lds
jb
add
jae
push
or
xchg
add
fmuls
pop
add
pop
jno
dec
addb
scas
jns
or
jecxz
cmp
xlat
scas
rolb
sti
jae
dec
cli
sbb
sbb
sub
testl
lock
xchg
aas
jle
add
push
flds
xchg
lret
cmpsl
inc
imul
pop
mov
lret
nop
adc
dec
sub
cmp
sub
rorb
add
jmp
or
cmp
cli
into
push
and
inc
push
dec
fsubs
ss
sub
add
rol
mov
pop
mov
xor
pusha
mov
jno
pop
je
stos
fdiv
adc
mov
test
pushf
int
rorl
loope
fimuls
sbb
stc
enter
add
jo
dec
clc
or
insb
dec
or
in
aam
pop
add
pop
add
sbb
stc
or
add
mov
aas
out
ret
or
out
pop
mov
xor
push
cmc
div
scas
jecxz
mov
xor
out
mov
in
cmp
mov
les
add
lret
add
leave
jle
xor
mov
scas
out
add
add
dec
loop
push
push
jns
into
nop
push
aaa
or
add
jbe
mov
lods
dec
in
sti
adcl
jne
pop
insl
or
pusha
addb
scas
popf
nop
add
mov
xchg
out
lock
cmp
ds
sbb
xor
xchg
xor
pop
ja
push
in
rcll
fnstenv
nop
sbb
add
sub
icebp
out
lock
mov
jb
nop
mov
ret
xor
inc
cmp
sbb
cmp
add
dec
cwtl
pop
adc
mov
push
cmp
leave
and
mov
mov
repnz
dec
nop
inc
add
clc
js
jbe
xchg
or
adc
mov
jne
movsl
in
cwtl
rorb
add
out
mov
and
or
xchg
push
sub
sbb
mov
out
dec
pop
cmp
test
fs
or
into
std
pop
mov
add
ss
cmpsl
jg
jbe
or
aaa
js
push
inc
add
and
sbb
add
jg
mov
test
addr16
add
inc
mov
movl
jo
jp
pop
fs
sbb
fwait
add
in
cli
dec
push
mov
negb
cltd
dec
mov
iret
jne
add
lds
xchg
dec
jne
dec
jg
push
cmpsb
inc
mov
hlt
add
mov
jmp
push
pop
push
jb
sbb
inc
and
inc
sbb
add
jp
pop
pop
xchg
movsl
shll
ret
cli
and
sbb
cld
shlb
je
cmp
jg
imul
aam
xorl
scas
jbe
cmp
add
loop
cmp
push
stos
add
pushf
add
xor
icebp
push
jae
rorb
mov
call
and
fs
fcoms
add
push
mov
lods
cmp
push
add
loopne
pusha
andb
jmp
jb
and
inc
loopne
jnp
jae
add
or
cmp
fbstp
mov
lds
cmpsl
jne
add
scas
bound
mov
mov
adc
rorl
daa
rolb
jecxz
or
movsb
sub
adc
jo
sbb
pusha
scas
cmp
add
xchg
addr16
xlat
pop
add
jl
adc
jle
shlb
mov
test
inc
cmp
cmp
pusha
in
add
mull
shl
je
loop
add
dec
fsubrl
mov
xor
call
loopne
sbb
rcrb
aam
shr
add
out
sbb
add
cli
sarb
clc
add
fistpl
or
add
pushf
shll
mov
or
xchg
sbb
aas
iret
flds
cmp
aad
and
sub
sub
fisubrl
adc
xchg
mov
xorb
cmpsb
insl
ss
movsb
pushf
dec
adc
fs
jae
fnstcw
jnp
fimuls
mov
das
push
add
inc
push
out
aad
testb
push
filds
xor
lret
add
aad
push
push
out
push
bound
xor
mov
insl
mov
into
lock
add
mov
and
mov
inc
pop
mov
pop
add
fcoml
pop
mov
fisttps
fs
rcrb
clc
sbb
push
sub
add
gs
push
rorb
xor
sbb
les
shl
or
xchg
dec
jmp
add
adc
pop
in
arpl
mov
xor
and
or
add
das
mov
mov
or
inc
std
push
pop
je
ret
movl
ljmp
cld
add
lret
inc
aam
mov
pushf
mov
int
sbb
leave
dec
bound
add
inc
pop
xchg
push
shrb
jecxz
sub
dec
mov
sub
xlat
adc
add
push
xchg
sub
mov
dec
xor
xorl
jns
out
pop
add
jbe
adc
dec
jo
test
inc
cmpsl
sbb
ja
sbb
adc
push
scas
pusha
ss
cltd
mov
outsb
test
aad
movsb
ficoml
ds
out
neg
inc
jne
dec
or
mov
cmp
add
adc
cmp
ds
push
push
mov
les
or
cli
cmp
jmp
mov
ja
dec
sbb
adc
pusha
dec
cmp
dec
xchg
mov
shrb
rclb
and
in
adc
and
add
mov
adc
out
or
sti
xchg
add
xchg
adc
xchg
xor
pop
or
rcrl
cld
inc
add
and
sub
test
pop
dec
fdivs
add
sbbl
stc
xchg
adc
rcrl
mov
pushf
fsubr
jmp
inc
out
push
leave
add
jmp
push
insb
add
xor
cmp
cmp
loop
imul
rcr
xor
cmp
iret
cmp
xlat
scas
dec
add
popf
test
push
lret
dec
sub
sub
outsl
inc
dec
pop
movb
out
cmp
scas
adc
gs
add
jne
push
add
ds
lods
sarb
insb
rcll
sbb
out
ficoml
cld
pop
stos
add
push
add
icebp
pop
call
xchg
sbb
inc
mov
push
lret
add
das
push
jbe
xchg
dec
rcr
mov
add
sbb
loopne
dec
out
xlat
incb
sub
mov
sub
add
cmp
jg
add
clc
adc
push
sub
mov
movsb
push
pop
mov
push
dec
cmp
popa
add
je
into
add
pop
addr16
mov
andb
xlat
cwtl
jmp
mov
imul
add
imulb
push
add
clc
and
bound
jne
sbb
adc
repz
cltd
nop
add
mov
ss
lret
cmp
xchg
cwtl
nop
add
pop
cmpsl
in
test
push
rorb
lcall
sbb
sbb
loop
call
or
call
jmp
cmp
pop
cmpsb
inc
xchg
js
jae
ds
or
inc
sub
hlt
adc
out
xorb
loop
add
dec
mov
mov
and
loop
add
ret
lock
mov
in
nop
pop
or
js
mov
cmpb
repz
sahf
mov
xchg
sub
inc
in
xchg
xor
dec
push
jb
mov
mov
lods
shr
cmpsb
call
mov
adc
in
push
mov
xchg
fdivp
fistpll
add
lret
ljmp
sbbb
loope
mov
popf
call
dec
stc
dec
mov
xchg
add
adc
cmpsl
pop
leave
and
jnp
xchg
add
mov
orb
pusha
ret
loopne
stc
lods
add
jl
push
mov
rcrl
pop
shl
test
xchg
clc
cmp
mov
jno,pn
xor
enter
sbb
inc
jp
jbe
jle
add
aad
mov
add
mov
cmp
cmp
test
push
loopne
rcrb
push
dec
test
cwtl
outsl
mov
movsb
aam
add
jnp
shl
stos
hlt
sub
mov
pushf
std
mov
push
js
fwait
push
lcall
in
push
outsb
add
daa
sbb
stc
jo
jae
cmp
movsb
es
addr16
ljmp
add
mov
dec
cmpsb
stos
add
cmpb
add
and
xchg
aaa
imul
sub
sahf
les
loop
sbb
add
jb
das
add
les
fwait
sarb
lret
dec
push
test
cmp
mov
mov
sbb
insl
pop
inc
and
cmp
sub
repz
cmpsb
pop
add
add
mov
lcall
and
jns
cmp
inc
add
lcall
sarb
add
in
mov
jne
add
cmp
pop
es
or
fidivrs
andb
enter
xor
fcompl
js
adc
and
add
xchg
fistpll
dec
fsubrs
push
xchg
jo
fwait
ds
lahf
dec
xor
out
mov
push
imul
pop
mov
push
add
xor
push
lahf
movsb
int
add
scas
cmp
pop
push
mov
into
mov
in
jl
add
jmp
add
xor
fadds
lret
aaa
sbb
jae
pop
cmc
nop
or
in
push
popf
shrb
add
xor
movsb
jbe
out
mov
test
addl
mov
jmp
dec
add
aam
aad
inc
xchg
cmp
cmp
sbb
adc
push
xor
push
cmp
dec
fcoms
mov
xor
int3
add
scas
in
ret
mov
je
js
dec
das
inc
pushf
xchg
pop
add
cmpsl
rcrb
loopne
ds
sub
push
jl
adc
push
stos
inc
mov
ret
mov
mov
gs
rcrb
lods
add
mov
stos
mov
add
test
jle
xor
call
sub
dec
imul
hlt
pop
add
pop
push
and
add
bound
or
fstp
mov
les
xor
sub
adcb
push
jmp
jns
mov
adc
fnstsw
xchg
movsl
xor
or
push
add
jne
stc
adc
orl
adc
popf
roll
add
rolb
cli
add
test
sbb
test
cli
stos
inc
pop
cmp
sub
dec
add
push
mov
mov
mov
pop
add
bound
es
cmp
mov
cmpsb
test
push
sub
pushf
mov
adcb
popf
jbe
std
sbbl
into
mov
jle
add
jnp
push
cmpsl
add
jo
add
jno
pusha
jg
mov
xchg
loope
inc
push
jne
ror
cmp
sbb
cmp
pop
out
mov
mov
push
add
cmp
mov
popa
sbb
mov
or
out
push
mov
add
xchg
test
sti
movsl
xchg
subl
pop
add
mov
cmp
stc
inc
into
aad
js
xchg
popa
loope
sbb
pop
push
pop
adc
add
sbb
jnp
pop
call
jno
add
cli
mov
add
jle
push
mov
movl
pusha
add
and
add
in
aad
or
xchg
movsb
add
push
in
orb
adc
sub
xchg
stos
or
in
sub
call
pusha
push
cli
pop
and
add
pop
add
jl
jno
xchg
or
add
rorl
jno
mov
mov
mov
iret
insl
add
mov
xchg
cmp
pusha
repz
mov
addl
push
lahf
mov
add
adc
adc
icebp
add
dec
mov
add
xchg
lret
pop
add
and
pushf
sbb
add
jo
cltd
stos
push
ljmp
imul
mov
fsubrp
mov
add
xor
mov
mov
ret
dec
mov
cmc
int3
sub
imull
add
xor
ds
movsb
cmp
xlat
sub
jns
es
inc
sbb
push
flds
jmp
into
add
or
cmc
add
dec
adc
add
and
lcall
repz
out
lds
leave
mov
push
jecxz
loopne
sub
mov
mov
push
xchg
je
sub
out
add
fwait
pop
andl
add
ror
jno
mov
cwtl
push
jo
add
incl
jmp
sub
in
or
sub
pop
mov
pusha
addr16
mov
push
xor
and
pop
cmpsb
cs
add
test
xchg
mov
adc
adc
and
dec
jmp
shl
and
lret
pop
lea
pop
in
inc
movsl
cmpsl
lock
jae
push
adc
mov
add
pusha
movsb
xchg
mov
add
or
push
pop
xlat
es
ss
and
add
inc
pop
in
ljmp
movl
xor
mov
jmp
adc
inc
jae
pop
add
xchg
inc
mov
out
add
stos
imul
inc
inc
scas
inc
pushf
aaa
jg,pt
add
lea
shlb
dec
pop
inc
dec
loop
and
xchg
sarb
lahf
add
pop
rclb
lock
sub
dec
cli
repnz
cmp
and
push
frstor
ret
push
stos
push
aas
nop
inc
imul
mov
pop
arpl
pop
jp
add
insb
lea
push
push
scas
aad
xor
or
pop
or
pop
add
push
orb
push
or
xor
insl
jecxz
dec
lods
aam
jne
dec
arpl
add
push
sub
jno
xchg
add
fmuls
xor
add
ds
mov
js
dec
add
mov
pop
loopne
ljmp
lea
push
shrl
sbb
sub
ret
jnp
call
add
cmp
mov
jnp
add
dec
sub
jno
adc
lret
cmpl
pop
mov
lock
mov
dec
adc
pop
movsl
aas
fldl
adc
lea
sub
mov
sbb
pop
pop
test
xchg
mov
mov
or
enter
dec
daa
xorb
cmc
add
inc
out
sbb
addb
inc
cmp
or
add
dec
fcomi
and
push
jo
outsb
jb
stc
inc
flds
test
jge
cltd
dec
ror
pop
sbb
nop
test
add
movsl
pop
pop
mov
add
xchg
xchg
jb
add
lock
sbbb
pop
dec
or
mov
iret
mov
xor
outsb
in
pop
loopne
xchg
pop
xchg
mov
xor
cmp
les
daa
push
add
push
jmp
mov
das
pop
cld
jle
testl
les
std
push
xchg
or
push
mov
mov
ljmp
pop
add
add
sbb
divl
push
in
fdivl
mov
add
add
mov
inc
int3
lock
dec
ja
pop
dec
fsubl
cli
mov
jb
adc
lods
cld
dec
incb
push
pusha
mov
add
lea
xchg
inc
xchg
andb
xor
push
dec
and
and
stc
filds
inc
push
inc
add
add
in
cwtl
test
push
cld
roll
clc
stos
pop
mov
ljmp
adc
add
adc
jge
sub
ja
and
repz
add
push
inc
or
push
cmp
repnz
test
ret
insl
or
jmp
or
cmp
pusha
inc
add
sub
jo
int
leave
inc
aad
jo
pop
xchg
popa
dec
add
call
cmp
scas
popa
jecxz
je
divl
std
ret
js
add
mov
sub
xchg
xchg
test
inc
pop
nop
xchg
popl
das
sahf
mov
stos
loopne
adc
mov
icebp
movsl
sbbb
dec
cmp
inc
mov
in
mov
out
sub
pop
mov
add
jnp
js
lea
in
add
cmp
mov
cmp
jg
scas
test
jbe
dec
add
cltd
lahf
lods
pop
les
push
int3
cld
xchg
xchg
add
roll
push
inc
in
push
mov
cwtl
add
loop
in
movsl
stos
pop
ret
ja
sarb
xor
in
dec
lds
aam
addb
push
ret
in
testb
ja
int
dec
sub
adc
adc
enter
add
fcomps
cli
div
das
test
pop
dec
sahf
stos
out
int3
enter
mov
fmuls
mov
aaa
pop
or
adc
or
mov
test
frstor
rorl
adc
adc
and
pop
fcomps
sbbb
sub
scas
lock
aaa
xchg
push
push
push
mov
ret
mov
popa
jbe
xchg
std
lods
aam
cmp
subl
ja
shlb
lahf
mov
mov
add
fsubp
insb
int3
roll
push
push
jno
enter
and
insl
subb
addb
lret
mov
add
mov
rcrb
fcomp
xchg
lock
sahf
sbbl
js
scas
xchg
xor
scas
enter
nop
adc
mov
test
shlb
pushf
stos
cmp
cmp
mov
mov
loope
add
xor
sbb
pop
adc
push
sti
push
xor
sub
inc
pop
adc
ja
sar
xchg
xor
xchg
lret
dec
mov
cld
and
jl
rclb
movb
sbb
push
mov
leave
lods
pusha
ficoml
lds
mov
xchg
sbb
dec
js
add
cmp
xchg
add
mov
inc
repnz
stc
fldenv
clc
sti
add
rol
lods
mov
and
mov
and
and
sbb
adc
pop
pop
dec
add
lods
pop
jbe
or
add
jnp
dec
add
hlt
xor
dec
sti
push
adc
iret
ja
xchg
mov
push
pop
pop
mov
icebp
mov
shrb
mov
lcall
sub
lods
inc
icebp
subl
js
add
push
xchg
inc
adc
mov
xor
mov
add
mov
mov
pushf
stos
cmpsl
or
faddl
sub
popa
mov
cli
sahf
lds
jo
xchg
add
inc
clc
cli
mov
fildl
fs
rolb
into
push
sbb
orl
lcall
mov
fildl
lahf
pop
ds
or
filds
test
mov
add
adc
imul
pmulhuw
mov
test
lds
add
add
cwtl
sbbl
clc
add
sub
sbb
mov
stc
sbb
and
mov
rolb
jl
daa
mov
add
imul
pop
mov
xor
clc
loopne
add
inc
in
cmpsl
add
cmpsb
dec
and
dec
pusha
test
loopne
flds
sarl
cwtl
adc
je
setbe
int3
or
adc
adc
loopne
push
jg
aad
xchg
xor
jbe
ffreep
and
adc
and
jle
xchg
cltd
adc
push
mov
cmpb
in
enter
xor
pushf
enter
add
mov
scas
cwtl
adc
shl
jno
xchg
push
add
outsb
and
sahf
subb
adc
adc
adc
xchg
or
sbb
movsb
mov
sbb
popf
xchg
adc
or
pop
xchg
int
lds
int3
adc
inc
xchg
push
ljmp
and
or
sub
push
nop
fdivr
sbb
xor
ret
out
xchg
movups
mov
pop
mov
mov
jmp
adc
xchg
les
push
jp
jnp
xor
mov
cld
adc
or
or
js
dec
add
pop
sti
cmp
push
jo
xor
cmp
add
pop
sbb
adc
and
xor
out
pop
jl
and
sbb
adc
sahf
push
jp
mov
adc
adc
lods
and
jne
xchg
adc
jbe
push
and
incl
loope
mov
inc
adc
pushf
repnz
adc
and
adc
cld
nop
xchg
jmp
pop
mov
es
push
xor
lret
sbb
lods
or
mov
loop
add
or
pop
shlb
xchg
push
cmpsl
adc
loope
repz
adc
and
push
jg
xorb
mov
out
roll
sbb
icebp
scas
rcrb
and
lret
icebp
xlat
dec
xor
pop
lahf
and
aaa
ja
sbb
jne
or
jno
and
lock
xchg
test
push
nop
clc
xchg
cmpsl
xor
jae
or
jmp
and
sbb
imul
cmp
daa
fdivr
xlat
in
xchg
pop
inc
popf
push
into
aaa
popf
and
addr16
sbb
jmp
ror
pop
enter
cmpsl
jae
rclb
xchg
xchg
and
dec
les
mov
scas
cmpsl
sbb
int
or
jl
pop
lret
mov
lds
dec
adc
lret
clc
inc
xchg
ja
pop
pop
cmpsl
adc
mov
popf
xor
mov
jl
out
lock
mov
test
idivl
add
les
clc
lods
inc
fwait
out
fwait
jne,pt
fwait
in
nop
das
sub
es
sahf
and
adc
inc
cld
lock
loop
lea
stos
and
inc
lea
and
stos
push
add
pop
lcall
push
and
sub
jl
adc
jb
test
xor
das
sub
andb
mov
add
test
cltd
mov
mov
adc
ds
push
adc
adc
das
jno
inc
out
lea
inc
iret
mov
mov
loope
and
js
jb
arpl
adc
mov
inc
mov
lret
mov
mov
cmp
out
jne
mov
je
ja
int
push
jp
cmpb
int3
inc
xor
xor
sub
subb
leave
push
inc
push
xchg
lock
push
xor
mov
repnz
push
movsl
and
ret
add
cltd
jb
stc
or
inc
sbb
mov
imul
iret
inc
or
add
pop
les
arpl
add
ret
arpl
leave
cmp
xor
clc
je
cmp
sbb
pop
fcomp
enter
sbb
xchg
or
or
jo
scas
jl
and
or
lds
mov
sbbb
inc
cmp
je
push
pop
movsl
insb
sbb
sbb
xchg
jb
int
mov
xchg
es
jo
sbb
jmp
jecxz
idivb
sub
sarb
sahf
add
test
mov
cmp
int
movsbl
jecxz
inc
gs
lds
sbb
cmp
cmpsl
xor
andb
inc
loopne
cmp
movb
mov
push
outsl
fwait
inc
arpl
push
xchg
sub
xchg
cmp
push
cmp
push
mov
fsubrl
xchg
xchg
dec
mov
fnstenv
mov
loop
sbb
inc
xchg
sub
cltd
into
movsb
cmp
fcoms
test
stos
dec
andl
popf
adc
loope
nop
inc
lods
bswap
cmp
push
aam
popa
mov
sbb
xor
mov
push
pop
xchg
fmuls
mov
fwait
jns
or
dec
inc
add
ds
mov
scas
add
rclb
xchg
xor
icebp
sbb
andl
movsb
lcall
mov
nop
aam
bound
add
mov
sbb
mov
sbb
psubq
inc
sub
iret
test
xor
daa
add
cltd
int3
leave
nop
aam
dec
add
mov
jbe
cmpsl
add
mov
hlt
cltd
addl
add
ja
call
arpl
mov
add
cmp
push
push
dec
call
fbstp
add
cli
lret
or
cmpb
xchg
pop
stos
add
enter
mov
add
mov
jae
mov
lock
faddl
jo
or
add
lods
rcll
ss
fmull
testl
jecxz
fiadds
movsl
inc
mov
jns
rcl
arpl
mov
aas
xlat
xor
in
jecxz
inc
clc
imul
cmp
mov
xchg
adc
loope
xor
xchg
adc
mov
pop
cmpl
rcrb
hlt
push
and
sub
clc
jecxz
test
aaa
add
mov
sbb
cmp
add
jmp
clc
and
stos
es
dec
lock
popf
cld
in
add
sbb
loopne
verr
sti
test
add
jg
xchg
xchg
dec
adc
movsl
add
mov
js
cli
testb
cmp
cmpb
inc
add
lods
stos
in
mov
mov
pop
sub
or
mov
sti
scas
ljmp
fbstp
or
mov
xchg
rcll
test
add
add
push
aas
pop
ss
pop
pop
pop
push
adcb
cltd
mov
stc
add
pop
sbb
in
xorb
cmc
divb
fwait
aad
xor
jmp
adcb
fwait
aam
ds
xchg
rclb
push
cmpsl
pop
pop
outsb
xchg
push
add
dec
mov
add
push
jecxz
call
add
aad
dec
mov
cld
xor
int3
popw
gs
dec
fdivl
add
out
dec
ret
push
pop
add
xchg
sbb
pushf
dec
mov
mov
outsb
jnp
add
ss
pop
fs
mov
mov
adc
data16
pop
add
pop
sbb
push
mov
dec
mov
outsb
mov
ret
xor
push
das
adc
xor
add
test
add
iret
or
pop
ror
sbb
xchg
cmpsl
loop
push
stc
add
movsl
jns
mov
add
das
bound
lea
cmp
popf
sub
adc
jp
mov
notb
push
mov
hlt
push
jmp
pusha
fistpll
mov
pop
dec
or
push
mov
xchg
xchg
stc
xor
mov
rolb
pop
sahf
inc
sbb
or
xlat
dec
xchg
js
add
addl
jno
mov
scas
jl
popl
call
std
ret
imul
lret
sub
and
mov
test
loope
sar
inc
fldenv
add
mov
ss
add
fnstsw
int3
push
jge
test
push
and
mov
push
sbb
dec
or
push
bound
stos
mov
pop
or
daa
ja
add
loopne
push
jbe
sti
fldcw
push
shll
out
aad
sub
mov
inc
push
mov
out
inc
sub
add
mov
or
push
pusha
lock
xor
jp
mov
inc
jmp
cmpsl
and
add
xchg
sbb
ficoml
mov
out
inc
aad
out
add
mov
and
mov
adc
je
stc
lods
movb
adc
lock
xor
call
cltd
in
cwtl
nop
nop
pop
cmovbe
add
add
dec
pop
ljmp
mov
and
cmp
dec
push
jnp
sub
dec
rcrb
sub
and
inc
inc
sbb
add
mov
ds
cs
lock
jae
aas
mov
mov
xor
add
push
mov
xchg
ja
add
ffree
pushf
fildl
jle
enter
imul
cwtl
ja
add
popf
test
add
daa
pop
add
in
lods
outsb
call
add
sub
lock
or
add
enter
sub
cmp
jbe
fwait
rclb
add
out
jle
xchg
stos
mov
mov
jae
sbb
sbb
or
les
jne
jo
mov
jno
xchg
push
sahf
mov
je
jne
jns
fcoms
movd
inc
mov
repnz
sub
out
clc
pop
nop
fildll
bound
sub
pop
pop
jg
dec
lods
mov
repnz
mov
push
inc
sbb
or
scas
ss
sahf
add
mov
fwait
insl
pop
roll
or
inc
xor
dec
jns
add
andl
in
not
shrb
add
fldt
pop
cwtl
mov
aam
cmp
add
jae
pop
add
cli
fcmovnbe
inc
jecxz
jl
add
stos
mov
popf
or
mov
xor
movsl
cmp
dec
add
adc
es
fldcw
inc
and
and
mov
mov
rcl
in
jg
add
test
lahf
dec
cmp
jns
sahf
fwait
in
adc
push
rorl
and
inc
sbb
aam
push
fwait
add
je
jo
mov
cltd
mov
push
fdivr
add
add
push
hlt
jne
mov
lea
and
add
cli
xchg
ret
loopne
mov
adc
aam
hlt
push
jae
lock
jnp
add
sbb
sbb
cmp
or
sub
fadd
xor
adc
addr16
mov
sarb
xor
push
add
lds
les
jp
pusha
and
out
mov
fistpl
sti
lret
inc
add
fld
rcll
cltd
rolb
push
inc
or
notb
xchg
ret
add
xchg
aaa
in
mov
push
jp
dec
add
xchg
mov
cmpsb
loop
stc
mov
popa
sub
sub
xor
mov
lods
jecxz
scas
add
or
add
mov
xor
movsl
scas
test
add
add
sbb
in
add
jecxz
fsubl
in
lds
xor
sti
push
mov
cmp
add
add
pusha
pusha
das
rcll
dec
out
jne
mov
fwait
roll
sti
dec
xchg
or
xchg
jmp
aas
lock
add
push
out
les
hlt
sahf
jl
testb
mov
loopne
cltd
mov
pop
loop
add
cs
sub
test
in
or
dec
cmp
mov
das
dec
xchg
or
xor
sbb
movsl
aas
jle
push
lods
add
and
enter
push
add
js,pt
arpl
in
adc
add
in
adc
lahf
add
add
pop
adc
out
aas
adc
lahf
mov
mov
mov
push
or
roll
repnz
scas
call
jb
add
jae
xchg
mov
ds
jns
lods
jl
inc
cltd
add
xchg
dec
lods
cmc
jge
fcomp
test
cmp
mov
pusha
loopne
or
cmp
inc
pop
pop
mov
fldenv
mov
nop
add
adc
fnstsw
bts
or
jl
add
pop
xor
decl
pop
addr16
cmpsl
pop
pop
push
add
inc
testb
movsl
and
fstl
xchg
inc
imul
adc
push
es
jecxz
add
sbb
add
ljmp
mov
xor
add
dec
ja
xor
icebp
push
or
shll
pop
cli
jl
out
add
in
mov
cmp
and
mov
sbb
jns
es
stc
loopne
clc
jo
cmp
mov
test
or
sbb
in
les
xchg
add
outsb
jno
das
lret
jnp
jmp
add
pushf
lock
ror
divl
stc
push
sbb
or
pop
cltd
push
pop
ss
mov
and
adc
mov
leave
enter
xchg
cwtl
loopne
push
hlt
jmp
stos
fistpl
in
or
jne
jbe
adc
jb
nop
push
sub
jns
cmp
ss
aam
in
mov
sar
dec
add
push
les
push
test
int3
es
mov
cwtl
sti
and
lods
push
fs
add
mov
add
clc
fcomi
insb
aaa
and
sbb
cmp
test
jg
sbb
add
out
sbb
pusha
jp
sub
mov
and
js
imul
add
push
sbb
mov
test
and
scas
addr16
or
divb
jg
add
mov
sub
mov
stos
xor
ljmp
add
stos
les
cli
sbb
xchg
mov
add
jbe
push
clc
mov
mov
jae
bnd
inc
push
insl
add
inc
cmp
cmp
jge
loope
jecxz
push
jmp
xchg
mov
add
or
add
push
test
in
mov
cmpsl
mov
call
ja
in
cltd
ret
les
xchg
stc
andb
inc
add
push
mov
aad
testb
loop
movsb
in
icebp
pusha
imul
addr16
test
cmc
jae
xor
add
and
mov
lret
add
mov
xor
lcall
rol
xlat
pushf
add
ja
xor
lods
mov
jmp
aad
jl
idivl
stos
scas
scas
out
test
inc
inc
push
or
xchg
or
mov
ja
mov
jbe
ljmp
or
xor
cmp
insl
inc
nop
sbb
jp
call
pusha
sti
add
pushf
and
aas
sbb
push
dec
sub
aad
and
jbe
add
adc
clc
rorl
inc
dec
dec
mov
cltd
or
lock
jne
rorb
add
adc
std
pop
adc
mov
stos
packsswb
scas
mov
jns
cmpsl
stc
test
jg
jae
repnz
subb
xchg
mov
or
jbe
movsb
sbb
enter
xchg
imul
rolb
dec
push
stos
xor
jnp
ss
dec
push
cli
jg
sbb
dec
imul
add
imul
test
sbb
jge
mov
pusha
xlat
pop
push
pop
jle
mov
icebp
push
xchg
pop
mov
adc
loopne
mov
add
cmp
add
xchg
push
jge
inc
test
sub
add
and
inc
sbb
add
dec
shll
inc
in
into
icebp
dec
add
sahf
jle
rclb
adc
out
add
nop
lea
push
xor
js
popa
gs
fldl
mov
enter
daa
sub
adc
icebp
xor
sti
mov
fistl
wrmsr
repnz
sbb
mov
adc
in
jno
mov
mov
loopne
sub
add
ret
cli
insl
add
adc
aas
mov
pop
ja
out
das
nop
mov
adc
add
mull
xchg
rcr
mov
nop
loope
icebp
pop
out
ffreep
sarl
push
mov
cli
fnstenv
pop
cwtl
gs
fcmovb
pop
or
cld
addb
dec
dec
outsl
ret
sbb
sti
add
or
aas
jl
or
ja
cmpsl
add
add
cmp
add
cmpsb
inc
cmp
pop
fwait
arpl
pop
out
push
fistpll
pop
sbb
mov
cmpb
sti
jmp
test
not
jns
pop
js
fxch
loopne
faddl
jnp
cmp
cmp
jns
cli
loope
xchg
add
cmp
xchg
popf
or
or
stos
in
push
in
mov
add
sub
dec
movsb
mov
add
mov
andl
add
cli
faddl
pop
xor
inc
into
sbb
push
sbb
sub
insb
push
pop
xor
add
in
in
fildl
jl
add
mov
xchg
or
jo
sbb
aas
fwait
add
dec
dec
jle
or
popa
call
orb
pop
cwtl
rorb
out
fwait
add
dec
in
push
and
nop
sbbb
dec
or
dec
div
mov
pop
mov
mov
jmp
add
sbb
call
loopne
add
daa
adc
pushf
sbb
stos
sub
les
cmp
push
inc
pop
fdivrs
fimuls
call
xchg
mov
mov
push
add
mov
inc
popf
test
sbb
cmpsl
std
jo
add
pop
lock
shlb
int
fbld
pop
pop
das
lahf
jl
hlt
in
lods
add
inc
arpl
mov
push
rolb
inc
shrb
arpl
and
cmp
jno
outsb
in
std
add
sub
jmp
cli
ja
push
mov
or
add
xchg
jnp
sbb
inc
xchg
and
add
inc
dec
cli
add
popf
inc
outsb
add
and
in
and
cmp
adc
xlat
mov
mov
lds
lret
rolb
mov
jmp
cmpsb
xchg
call
inc
shrb
out
add
xchg
das
rorl
add
xchg
movsl
es
jmp
loopne
pusha
sbb
sub
xor
jae
add
je
stos
add
sbb
scas
negb
lds
aaa
imul
cmp
lret
mov
push
and
addl
repz
jle
sbb
sub
cmp
push
inc
test
out
add
lock
xor
jnp
sub
xchg
nop
xor
test
add
aas
addr16
cmpsl
dec
add
in
cmp
push
push
out
jbe
popf
fstpt
inc
push
and
movsb
add
lods
mov
out
imul
stos
and
adc
cli
mov
mov
outsl
push
aad
cmp
add
dec
xchg
daa
hlt
or
inc
pop
lcall
enter
or
add
outsl
xchg
mov
fnsave
cmp
pop
int
stos
mov
pusha
mov
out
pop
lahf
add
loop
stos
add
out
mov
adcb
dec
fsubs
add
push
mov
add
orb
cltd
jmp
pop
cmp
push
roll
ja
mov
out
fildl
shrl
push
or
aad
cmp
out
test
sub
ficoms
filds
add
or
in
iret
jge
pop
xchg
mov
cmp
xchg
cmp
out
ja
sahf
pushf
cld
sbb
mov
out
imul
inc
add
and
and
lods
add
push
sub
pop
mov
shll
popa
std
ljmp
push
js
sbb
icebp
dec
add
jecxz
cwtl
mov
ret
nop
pop
jo
sbb
mov
mov
dec
push
mov
inc
dec
dec
jg
stos
and
mov
fmull
sbb
dec
iret
add
dec
mov
subl
jl
add
push
push
scas
jg
add
push
inc
jnp
add
cmp
dec
scas
sub
cltd
out
or
cmp
sub
push
std
add
xchg
push
int
add
cs
jno
pusha
icebp
movsl
out
push
cli
add
in
call
ds
cli
add
dec
insl
adc
push
das
inc
push
cmpsl
fildl
add
jl
push
mov
rcl
add
cmc
mov
leave
add
lahf
arpl
std
clc
inc
pop
add
call
jno
jp
cmp
jae
xchg
ret
sub
out
call
movl
jb
add
and
pop
mov
aam
test
into
add
dec
enter
fs
add
notl
aad
and
add
push
xchg
inc
xorl
mov
test
mov
adc
dec
fbld
lock
jg
pop
stos
push
clc
sub
adc
in
cwtl
xchg
lahf
cmpl
jmp
adc
sub
ja
sbb
fdiv
add
mov
jmp
add
jb
inc
push
insb
sbb
lret
cmc
lods
sub
fsubr
adc
clc
pop
mov
sbb
les
xchg
js
mov
rorl
pop
mov
and
xor
push
add
add
mov
add
jnp
add
rclb
push
add
popa
xchg
push
cmpsb
lds
mov
cmp
add
outsb
push
xchg
sti
xor
mov
pusha
jae
hlt
ds
mov
cmpsl
lock
add
mov
add
fwait
outsl
push
sub
rorb
jmp
nop
pop
mov
add
shll
popf
pop
popa
stos
sbb
add
rorb
and
out
push
push
pop
sbb
add
sbb
aam
inc
scas
mov
adc
rol
fsts
xor
mov
mov
aas
pop
cld
mov
sub
and
lods
loope
in
push
pop
cmp
or
shll
mov
push
add
fwait
repnz
out
add
fistpll
mov
test
jb
add
push
inc
pop
ffree
and
add
in
add
cmc
pop
jl
rcrl
add
dec
jecxz
clc
jp
add
add
add
fwait
lcall
xor
loopne
es
mov
cmp
dec
lret
pusha
xchg
adc
push
loopne
sub
movsl
jns
and
test
inc
inc
lods
outsb
lret
in
rclb
lea
lcall
dec
shlb
mov
cmp
add
xor
lret
nop
dec
add
mov
in
bound
shll
add
cmp
pop
add
pop
or
and
shll
add
sarl
cmp
fldl
stc
inc
sub
fdivrp
jnp
xchg
lret
sbb
sahf
mov
xchg
loop
push
daa
lahf
sbb
inc
popa
or
mov
pop
add
xchg
mov
inc
xchg
fimuls
fbstp
add
movsb
xlat
dec
pop
lods
nop
xchg
inc
or
lods
addl
jmp
or
lock
add
insl
fwait
add
loop
inc
jae
cld
inc
cmp
dec
popa
mov
cmc
adc
popl
jno
or
sub
imul
mov
inc
outsb
inc
popf
sub
sbb
aaa
add
cwtl
cli
outsl
clc
nop
lcall
xor
ljmp
fistpl
aaa
inc
inc
nop
and
cltd
insl
mov
add
divb
jl
rcll
jle
and
fstpl
xchg
inc
clc
mov
add
iret
bswap
cmpsb
in
fstps
mov
or
xchg
mov
push
inc
nop
ljmp
scas
xorb
add
inc
mov
filds
adcb
add
sahf
cmp
and
jmp
popf
pop
scas
and
test
push
jl
dec
lret
xor
cld
adc
lcall
enter
jp
cld
cs
xor
adc
inc
and
pushf
inc
adc
js
popf
and
jmp
incl
leave
test
sub
test
sbb
loopne
jo
add
xchg
pop
adc
push
test
jge
cld
movsb
inc
add
dec
ror
nop
and
or
jb
sub
pop
xor
cmp
sub
mov
mov
adc
add
into
pop
lods
cmp
fnsave
jnp
xchg
jle
movsl
mov
mov
shr
mulb
fidivrs
nop
pop
adc
test
outsb
jbe
add
outsl
sub
xor
cltd
add
loop
or
add
jecxz
mov
std
in
cmc
jo
loopne
mov
daa
and
in
xchg
mov
adc
mov
enter
dec
out
add
bound
dec
cmp
sbb
cmpsb
add
incb
rcrl
push
add
push
nop
popa
mov
mov
nopl
pop
popf
inc
dec
lret
insl
movsb
flds
icebp
sti
adc
rcrb
outsl
mov
sub
fs
inc
cmp
inc
subb
sarl
out
pop
repz
and
add
cld
pop
bound
fsubrs
fcomip
and
aas
push
jno
add
scas
cmp
add
andl
int3
std
mov
mov
cmp
dec
xchg
add
and
aam
xchg
mov
pop
out
pop
add
jle
jecxz
xchg
lret
inc
lods
or
loopne
js
scas
mov
stc
nop
pop
and
pop
xor
into
add
pop
faddl
mov
in
inc
divb
adc
add
sbb
cmpsl
lods
faddl
pop
mov
divl
push
out
mov
fildll
andb
inc
pop
xor
ret
xor
cmpsl
add
xchg
sub
insb
test
mov
adc
das
sti
inc
cld
xor
sbb
dec
test
mov
dec
mov
add
repnz
add
repz
call
rorb
shrb
jle
push
mov
add
xchg
lds
xor
push
xchg
pop
jbe
js
pop
xor
ret
sbbb
sar
out
subb
push
dec
int3
lret
mov
fadds
push
sub
add
sub
les
sub
add
lods
inc
inc
stos
outsl
jp
sbb
rorl
xor
sbb
popa
ds
pop
xchg
add
roll
in
mov
adc
jae
push
out
test
dec
gs
push
addl
call
popf
inc
int3
push
clc
cmp
xchg
addr16
cmpsl
push
faddl
adc
jno
negl
lahf
xorb
cmp
repnz
jo
js
aam
clc
not
dec
add
insl
sub
cmp
xor
inc
sbb
daa
pop
cmp
xor
dec
test
test
xchg
sbb
fidivs
pop
aad
loopne
adc
push
cmp
dec
imul
daa
ds
inc
add
jbe
in
cmp
inc
jae
das
loopne
or
lods
fidivrl
call
xor
or
repz
add
sbb
or
std
add
mov
jae
xchg
jg
daa
aad
fwait
push
cwtl
mov
repnz
pop
sysexit
and
filds
dec
in
sti
pop
pusha
jbe
pop
add
xorl
imul
cmp
popl
ret
mov
rclb
push
or
xor
cmp
negl
and
in
arpl
xor
add
cmp
js
rolb
std
in
mov
mov
inc
mov
cmp
fwait
popa
insl
pop
sbb
inc
xchg
push
xchg
add
add
mov
je
sti
loop
xor
or
ss
push
sti
mov
cmpb
stos
mov
imul
inc
cmpsb
aas
loopne
add
jnp
cmp
cli
fiadds
inc
adc
xchg
ret
jmp
push
push
sldt
add
lahf
stos
add
jp
pop
xor
enter
jo
sbb
ljmp
lret
jmp
insl
pop
xor
xor
loope
adc
test
bound
xchg
adc
sahf
ja
add
push
negb
jl
cmp
sbb
pop
out
adc
jno
mov
inc
mov
dec
aam
cli
cmp
gs
stos
add
clc
sahf
or
dec
pushf
fwait
mov
add
xor
lret
andb
and
iret
popa
xor
loope
mov
mov
sar
outsb
add
adc
jo
in
dec
push
dec
les
sbb
push
pop
lret
jp
or
icebp
loopne
adc
pop
shrl
sub
xor
xchg
push
mov
into
vpavgb
cmp
xor
mov
or
es
sahf
push
in
add
xor
sbb
cs
jl
xchg
mov
add
mov
loopne
cmpsl
mov
jno
testb
dec
jl
cld
roll
pusha
jnp
push
ss
mov
call
and
push
imul
ds
pop
adc
rclb
addr16
xchg
lods
jecxz
fdivrl
js
push
rcrl
cmpb
add
cmp
push
inc
movsl
out
mov
rcrb
into
jmp
in
or
dec
adc
pop
cmp
push
add
test
add
lahf
insl
xchg
int3
subb
pop
movl
mov
xorl
pusha
sarb
das
mov
out
lcall
xlat
push
cmpb
mov
mov
shl
pop
mov
pop
xor
sti
lock
or
shl
sub
loopne
mov
ss
jbe
out
add
ret
gs
mov
xchg
cmp
adc
test
pop
dec
fwait
push
clc
mov
cmp
loopne
pusha
ja
or
ret
push
loope
fcoms
and
loope
fimull
in
inc
rol
add
xlat
pop
js
push
hlt
arpl
test
jbe
dec
movsb
cmp
fdivrl
stos
pop
mov
je
mov
test
adc
add
pop
xor
mov
fstpt
adc
add
lods
cs
popf
ret
add
icebp
sub
xor
or
pop
pop
les
mov
scas
or
ret
cmp
das
jnp
mov
sbb
xchg
ss
lds
inc
inc
int
push
lret
aaa
mov
inc
cmovb
sub
and
mov
and
sbb
push
and
bound
push
ret
clc
aas
stos
jno
push
and
push
test
pop
in
inc
je
xor
mov
fdivrs
aam
add
xlat
mov
push
ret
enter
push
or
or
std
jb
cmp
pop
outsb
dec
push
push
mov
xchg
out
jle
popa
imulb
cld
xlat
shl
sbb
and
jmp
shl
stos
cwtl
jp
outsb
mov
xor
mov
add
repnz
add
nop
jno
xchg
jae
cmp
loopne
movb
push
add
lods
sti
mov
jmp
push
mov
call
cmp
pop
sub
mov
call
push
shl
and
xchg
lods
add
push
add
xchg
in
fistps
les
mov
dec
aam
xlat
or
inc
and
cmc
sbb
ss
ja
jle
int3
int
jge
sub
push
push
add
push
rep
or
mov
sub
sbb
pop
mov
adc
jl
push
loopne
shrl
add
loope
add
mov
subb
roll
dec
jo
mov
inc
xchg
sbb
and
adc
pop
xchg
mov
xchg
cmp
sub
mov
rorb
call
mov
adc
push
xchg
addb
pop
sub
push
dec
mov
idiv
cmp
pop
call
lock
push
pusha
ljmp
cld
adc
inc
xchg
sub
xchg
add
ret
push
stos
push
sbbb
pop
push
mov
int
lods
jnp
cwtl
out
and
jmp
nop
adc
int3
dec
dec
aam
lods
or
test
test
jno
and
add
jmp
xchg
add
stos
mov
pop
nop
daa
xchg
inc
orl
cld
dec
fmull
enter
adc
xchg
loop
rolb
fsubrs
hlt
andl
scas
pop
test
sbb
fcoml
mov
or
push
in
adc
cmp
sbb
mov
decb
adcb
inc
sar
pop
sbb
fs
adc
sbb
mov
adcl
mov
into
rorb
lods
adc
js
inc
mov
dec
xor
andb
scas
pop
call
inc
cld
scas
sbb
mov
fcmovne
cli
cmpsb
hlt
add
xchg
test
movsl
cmpb
lods
int
loop
jne
call
inc
cld
xchg
daa
dec
xchg
sti
loopne
pop
push
push
adc
ds
js
xchg
out
lea
fs
fwait
icebp
sbb
jmp
cmp
sbb
js
fs
std
pop
clc
mov
out
ds
or
push
inc
sbb
sub
adc
mov
xor
xchg
lock
dec
pushf
xor
adc
push
aad
roll
and
inc
lock
add
les
je
add
pop
jno
ss
jmp
inc
adcl
dec
in
nop
enter
xor
push
jo
mov
push
fdivrl
mov
and
pusha
mov
dec
dec
js
add
cwtl
fcoml
xor
or
cmp
mov
and
les
inc
xchg
cltd
sahf
sbb
push
add
nop
mov
add
xorl
adc
std
lret
jne
push
sbb
add
dec
cmc
adc
dec
test
xchg
and
sbb
and
pop
and
enter
sbb
cld
and
sbb
test
test
mov
push
pusha
inc
mov
and
leave
or
inc
push
sub
adc
mov
xchg
adc
loop
jo
mov
inc
push
lahf
sbb
sbb
inc
daa
mov
out
and
out
cld
iret
add
or
lahf
xchg
add
adc
cmp
pop
fdivp
scas
cmpsb
sbb
xlat
nop
or
insl
push
mov
dec
xchg
outsl
inc
and
inc
frstor
test
mov
lods
fdivr
sbbb
xchg
mov
insl
add
and
inc
push
fwait
inc
pusha
shll
out
mov
jle
xor
or
pusha
and
sbb
imul
test
add
test
mov
push
sbbb
not
mulb
lock
lea
mov
add
xchg
movb
out
adc
insl
rolb
adc
mov
hlt
ss
js
or
lock
push
xchg
mov
mov
sbb
outsl
xor
add
in
fwait
int
in
add
xchg
lcall
xchg
mov
fwait
push
repz
lock
adc
scas
dec
jns
aam
push
lea
out
aaa
scas
mov
add
sub
mov
adc
hlt
icebp
xor
stos
sbb
popa
push
andb
jge
repz
aas
jno
xorb
hlt
add
and
mov
sbb
xchg
or
inc
sti
orl
cwtl
js
jne
mov
cmp
stc
adc
sbb
xchg
frstor
adc
xchg
call
push
rolb
loope
sbbb
int
fwait
adc
xchg
test
xor
sub
cld
push
mov
cmpsl
cmp
pop
mov
cld
inc
shlb
icebp
stos
mov
lret
test
iret
add
xchg
enter
aam
out
cld
mov
push
adc
mov
stos
xchg
inc
cmpb
sub
mov
cld
les
pop
cli
xor
inc
out
sub
fsubrs
mov
sti
add
mov
rorb
mov
je
pusha
repnz
enter
cmp
and
and
dec
xor
js
pusha
es
mov
add
scas
mov
and
aam
in
out
test
adc
scas
add
sbb
pop
dec
add
add
mov
imul
test
lea
stc
adc
sbb
or
call
sub
sarb
mov
or
push
and
in
sub
mov
hlt
push
mov
push
push
or
aas
repnz
lcall
andl
stc
sub
mov
shrl
aas
sbb
jp
xchg
dec
es
xchg
ljmp
cmpl
ret
mov
or
add
inc
out
les
push
mov
push
sbb
cmp
cwtl
xor
adc
mov
xor
adc
sbb
mov
dec
adc
push
cmpsb
in
or
add
call
into
add
movsl
or
mov
stos
add
shll
sbb
cmp
or
pmaddwd
push
add
pop
andb
pushf
add
ss
xchg
push
ror
nop
pop
add
and
loope
add
cld
and
cltd
test
xor
adc
or
sbb
or
cmp
idivl
add
out
lods
inc
mov
inc
mov
add
roll
sahf
add
rolb
in
ss
mov
push
sbb
fwait
or
jae
andl
sub
mov
add
push
xlat
dec
pushf
shlb
jl
fsubrl
mov
call
cmp
stos
inc
and
adc
mov
and
jo
cmp
cmp
insl
ss
pop
add
daa
fsubl
pop
stc
das
imul
cmpsl
adc
and
pop
dec
lock
xchg
lea
add
cmp
and
mov
dec
mov
lret
sbb
fiaddl
sbb
bound
movsb
mov
ja
nop
movsl
mov
mov
add
shlb
sbb
loop
lret
jno
pop
or
fcmovb
clc
hlt
and
outsb
inc
add
push
dec
lock
in
add
push
pop
jno
aad
sub
or
and
ds
or
dec
loope
aad
pop
mov
cmp
inc
xchg
push
dec
mov
add
inc
outsb
add
shrb
add
add
push
loope
inc
add
hlt
or
inc
dec
pop
cmp
inc
dec
and
or
sub
add
mov
test
mov
out
sub
pop
lods
out
in
inc
mov
xchg
pop
leave
mov
mov
add
inc
in
inc
xchg
addl
sub
test
aad
mov
lret
insl
add
xchg
jo
sahf
filds
push
mov
repz
mov
cmp
mov
fisubrs
cmp
aas
or
sub
and
call
add
loop
mov
pushf
add
andl
in
lods
fs
fsub
shlb
pop
jl
mov
or
testl
xor
mov
or
aam
add
fbld
cld
addl
test
ror
out
push
ss
push
push
jl
sbb
aaa
add
dec
mov
lock
xchg
jne
pop
add
inc
rol
lock
cwtl
add
cmp
cltd
add
xchg
add
inc
pop
mov
rolb
push
sub
sbb
push
push
or
psraw
jecxz
add
stc
sti
adc
repz
cmpsl
adc
lock
cmpsb
add
std
mov
and
sbb
add
repnz
repz
mov
addb
or
sub
add
shlb
push
or
data16
iret
dec
or
loopne
lds
inc
mov
mov
pop
xchg
sbb
sbb
add
xor
or
pop
shrl
loopne
jo
inc
mov
mov
or
push
add
inc
sti
andb
rclb
pop
jg
add
pop
outsl
inc
hlt
pop
aam
pop
xor
add
pusha
ret
pop
push
cmp
nop
cmp
sbb
nop
xor
pop
sahf
add
jmp
je
sbb
sub
out
cmpsl
arpl
add
ficomps
ljmp
lret
dec
fwait
je
shrb
das
daa
into
scas
pusha
mov
add
gs
push
arpl
ds
add
xor
ljmp
aas
add
mov
jmp
pop
pop
movsl
test
outsl
add
mov
mov
aas
clc
jb
pop
shl
pop
fmul
sbb
inc
jne
out
jae
mov
rorl
add
lds
sbb
nop
xchg
dec
out
add
inc
jge
add
call
add
repnz
jo
mov
cmp
inc
push
in
adc
fmulp
sbb
repnz
lahf
mov
pop
add
loope
pop
cmp
sahf
pmuludq
sti
test
and
pusha
pop
shlb
andl
sub
add
jbe
pop
int
dec
mov
notl
pop
xchg
jno
xor
sub
std
data16
cld
mov
add
test
xor
pop
sbb
imul
add
sub
xor
xorl
inc
pop
pop
sbb
add
cmovns
mov
sbbb
inc
mov
fiadds
xchg
jne
fwait
int
shlb
and
in
xchg
add
pusha
jecxz
popa
test
pushf
dec
das
adc
pop
sub
xor
sbb
je
out
cmp
aam
addr16
cwtl
inc
je
add
sub
int
out
pusha
fldl
push
inc
cwtl
rol
inc
test
add
daa
add
dec
mov
ja
mov
or
mov
int
cmpb
adc
xor
pop
add
or
loope
mov
cmpl
mov
adcl
sbb
fldenv
fiaddl
enter
pusha
add
mov
sbb
movb
add
mov
std
add
or
sub
add
sti
pop
pop
xlat
popa
int3
cld
push
rol
dec
jae
add
mov
incl
cli
inc
lcall
mov
loop
jnp
cld
in
fsubs
push
sub
inc
cmp
int3
add
jp
pop
xchg
popf
fwait
add
orl
jnp
decb
roll
sbb
iret
xchg
add
int3
mov
les
pushf
hlt
mov
popa
push
push
xchg
dec
nop
lods
test
dec
mov
sbb
je
subl
imul
sbb
arpl
int
xchg
add
mov
out
adc
testb
loopne
int3
sbb
sbb
gs
mov
add
sub
stc
jae
jg
add
daa
cmpsl
jns
lock
rolb
or
dec
cwtl
loopne
roll
loope
mov
jo
add
and
cltd
lcall
add
mov
jl
divb
stos
pop
xchg
push
dec
fldl
push
popl
jbe
imul
and
int3
lret
jge
das
arpl
push
mov
xchg
add
arpl
nop
inc
aam
xchg
addr16
adc
jne
jp
dec
adc
aam
lldt
jo
ljmp
int3
mov
pop
neg
call
in
test
mov
test
mov
js
push
xchg
sarb
mov
xor
clc
mov
ret
aad
rolb
push
pop
add
aam
cmp
cmp
or
leave
mov
add
sub
mov
in
mov
add
inc
rorw
aaa
int3
rcrb
dec
ljmp
jnp
out
mov
mov
lods
psrld
shr
pop
add
dec
lret
test
add
mov
or
add
and
push
add
cmp
mov
jb
mov
loopne
and
repnz
sbb
pop
sarb
cmp
or
add
stos
repz
pusha
fnstcw
lahf
cmp
push
or
add
aaa
xchg
jo
push
das
adc
sbbb
or
outsl
fs
int
aaa
test
roll
mov
sbb
mov
mov
push
ljmp
shrl
bsr
jno
add
push
jo
adc
jl
popf
add
out
mov
inc
add
daa
pop
push
inc
outsb
or
das
loop
and
mov
sub
push
imul
cmp
hlt
cmp
lods
add
addl
cli
or
or
addb
or
xor
outsb
sbb
jnp
inc
push
out
lea
cli
add
or
adc
cmp
dec
ljmp
sub
and
mov
and
inc
and
sbb
popf
adc
rorb
cmp
pop
and
push
add
into
aas
hlt
cmp
inc
rorb
imul
add
daa
dec
xor
adc
push
stos
inc
nop
je
ss
add
pop
mov
mov
pop
xchg
dec
add
into
push
sub
push
xlat
out
jo
add
mov
arpl
aas
outsl
aas
adcb
in
rcrb
cmovb
mov
lds
aaa
and
daa
sbb
pop
sarb
call
data16
jno
jne
push
pop
in
lahf
add
in
xchg
mov
dec
add
es
add
pop
ret
cmpsb
jle
roll
jp
in
mov
mov
add
add
lret
inc
jmp
ficompl
stos
pop
and
xchg
mov
into
or
ss
mov
push
push
frstor
int
adc
mov
ss
lea
mov
push
test
pop
push
shl
dec
add
imul
rorl
jo
add
xor
push
insb
test
shr
pop
xchg
inc
stc
xor
mov
mov
fstpt
fnsave
or
and
fucomp
aas
and
inc
inc
outsl
test
hlt
lds
loopne
push
jecxz
dec
jecxz
inc
sbb
shlb
andb
icebp
inc
xor
enter
cmp
mov
fst
and
add
jg
xchg
or
cmp
add
push
cmpsl
ret
cwtl
scas
xchg
inc
jl
jns
xbegin
and
addl
testb
stc
pop
gs
pop
and
add
lock
or
push
and
fs
aaa
xchg
add
cmpsb
test
mov
ljmp
add
jae
sbb
add
loopne
adc
jo
orb
xor
jno
push
add
or
jl
loop
pop
icebp
pop
mov
push
cwtl
add
int
movsl
adc
das
popf
pop
in
ljmp
add
add
jbe
in
xor
add
idiv
inc
test
xor
push
sbb
jo
lods
fbstp
es
rolb
xor
push
push
dec
sbb
fs
iret
or
repz
mov
mov
lcall
fsub
str
lods
fs
mov
testl
mov
cltd
add
imul
int3
adc
out
ficoml
add
inc
mov
sbb
outsb
add
mov
ds
sub
lds
adc
pop
lock
add
movsb
cmp
es
punpcklbw
pop
mov
inc
test
add
icebp
mov
pop
into
xchg
pop
mov
sub
inc
xchg
push
fidivs
push
stos
and
add
daa
add
dec
pop
xor
mov
sbb
jo
xchg
andb
xor
pusha
es
out
push
add
push
divps
xchg
push
stc
add
xchg
loopne
insl
sahf
fmuls
inc
add
insb
mov
inc
xor
scas
add
incb
mov
movsl
mov
repnz
and
faddl
cmpsb
mov
mov
pop
popf
push
inc
test
push
loopne
mov
sub
inc
insl
xor
in
mov
dec
cmp
ret
popf
pop
mull
xchg
push
gs
adcb
adc
push
in
mov
movsl
sbb
xor
ret
or
add
es
mov
mov
mov
dec
roll
pop
push
dec
add
mov
in
xchg
push
and
jecxz
out
lods
test
ds
sar
int
cmp
add
xchg
add
add
insl
sub
sub
cmc
xrelease
icebp
push
jne
adc
xor
enter
ds
jo
and
lock
hlt
add
cmpsb
adcl
pusha
xor
jle
push
aad
sub
loop
add
aaa
aas
xchg
cmpsb
scas
add
popa
xchg
pop
push
xchg
add
testl
cmp
add
es
lret
lods
add
mov
cwtl
rclb
jo
add
and
adc
pop
and
notb
add
adc
jno
movsb
outsl
hlt
mov
add
or
outsb
adcl
dec
aam
add
inc
mov
pop
lds
pop
je
ljmp
ret
push
mov
push
or
ficomps
ds
cmpsb
es
mov
xchg
add
or
jle
jnp
jle
jne
or
scas
das
jp
imull
mov
loop
xor
jb
add
addr16
or
or
inc
xor
mov
mov
rclb
loop
inc
sbb
ds
movsl
orb
push
les
xchg
pop
sub
loopne
push
pop
stc
add
in
jp
mov
subb
mov
and
std
ja
pusha
jle
pop
imul
jl
cmc
aam
popa
add
arpl
xlat
push
movsb
shrl
cmpsl
les
xchg
sbb
mov
jno
adc
push
fcoms
pop
sub
and
mov
mov
xor
test
or
mov
or
xchg
ret
rcll
cmp
jmp
add
popf
lcall
inc
and
lds
repnz
mov
shrb
or
popf
clc
lcall
sti
or
add
and
pop
pop
dec
jg
jle
mov
xor
xorl
dec
gs
and
jne
push
call
ret
pop
sarl
mov
sub
ds
add
dec
push
scas
jecxz
mov
mov
outsb
push
movsl
test
fwait
mov
out
cmp
incl
xor
pop
pusha
xchg
add
or
sub
lret
mov
loope
xor
mov
cmp
pusha
xor
les
loop
xchg
maskmovq
sbbl
push
test
mov
inc
fdiv
lahf
movb
mov
cmpb
xor
and
push
incl
lods
lcall
int
xor
jo
mov
fwait
ret
aas
insb
bswap
call
add
mov
jb
mov
movsl
fsub
add
ljmp
fcoml
cmp
out
push
ficomps
test
cli
mov
sub
add
sbb
add
jae
mov
dec
jbe,pn
loopne
or
and
add
jmp
lcall
das
icebp
mov
pop
jae
std
repnz
and
add
imul
pusha
pop
dec
jo
xor
push
dec
adcb
stos
add
xchg
stos
mov
mov
mov
push
fwait
sub
fsubr
add
mov
mov
add
pop
popfw
xchg
adc
fstps
or
pop
inc
iret
mov
cs
push
lods
adc
mov
push
repnz
andl
sbb
push
mov
mov
sub
ljmp
out
jmp
add
je
add
mov
add
sub
sbb
pop
xor
adc
add
addr16
jle
jno
add
or
in
stos
icebp
add
aad
mov
out
mov
data16
add
xchg
cltd
jg
aaa
out
add
lahf
inc
es
daa
add
pop
dec
scas
popf
cld
idivb
sbb
inc
sub
push
mov
fsts
clc
cltd
verw
ret
xor
add
mov
or
sbb
das
xor
aam
mov
hlt
mov
inc
daa
and
in
push
sbb
mov
dec
add
fistpll
data16
adc
cmp
inc
enter
xchg
sbb
div
clc
inc
pop
pop
in
or
arpl
or
pop
cli
lds
and
pushf
adc
mov
test
add
add
test
add
filds
add
repnz
jnp
inc
in
add
stc
out
push
add
mov
fadds
or
aas
inc
rcrb
push
mov
pop
add
call
mov
sub
cltd
jecxz
push
add
icebp
lock
sub
mov
fldenv
push
ret
push
inc
gs
inc
add
xchg
testb
daa
push
jns
scas
and
add
pop
xor
mov
movsl
sub
pop
fisubrs
daa
leave
jmp
push
add
or
jo
jg
sbb
mov
aam
hlt
fucomi
add
add
mov
mov
lcall
dec
add
movsb
xor
add
loop
out
mov
pop
lret
ret
dec
sarb
jns
add
hlt
add
pop
js
push
in
xor
out
cltd
mov
pop
push
mov
add
icebp
imul
lcall
mov
in
jg
outsb
shlb
jmp
add
fwait
and
test
add
push
sbb
int3
add
add
cmp
mov
xchg
daa
fdivs
and
xchg
lods
iret
pop
adc
add
sbb
cmp
xorb
out
das
add
mov
popf
and
add
cld
cmp
mov
daa
inc
push
out
loopne
add
sub
and
popf
hlt
add
in
dec
jl
in
shlb
add
add
push
add
nop
test
jb
out
insb
add
ds
jmp
xor
push
push
mov
add
and
stos
addr16
pop
bnd
push
ja
add
push
add
add
adc
mov
cmp
mov
arpl
mov
test
add
fcoms
push
push
andl
jno
dec
pop
lcall
jo
jns
adc
xchg
addb
fldl
jmp
push
dec
mov
xchg
adc
ret
xchg
cwtl
add
movsl
or
adc
das
aaa
cmpsb
add
push
cltd
sbb
xorb
mov
or
leave
lea
loopne
push
test
lock
das
arpl
add
rcrb
out
repz
insl
add
cmp
adc
into
add
mov
out
repnz
mov
ljmp
movsb
adc
movups
movsl
mov
or
cmp
adc
jbe
lds
ret
pop
mov
or
add
jae
add
xor
xlat
add
add
pop
or
xchg
pop
adcb
pushf
adc
rorb
cwtl
cmovns
call
pop
gs
add
sbb
repnz
leave
mov
cmp
loopne
jl
bound
add
ret
loop
xor
ja
cmpsb
faddl
dec
repz
test
aaa
push
push
iret
jecxz
jmp
add
jb
pop
add
fdivrs
in
das
pushf
scas
and
push
negl
inc
pop
ds
cmp
mov
jmp
jne
or
daa
cmp
xor
add
fsubrl
jp
mov
or
lea
pop
mov
and
stc
xchg
test
imul
fbstp
pop
fcoml
mov
imul
mov
mov
imul
cld
xchg
iret
add
repz
imul
add
sti
pop
cmp
mov
push
or
inc
movsb
lods
mov
mov
cmc
sti
repnz
adc
add
in
fistl
clc
push
les
add
adc
jp
add
inc
flds
jle
xor
push
sar
or
add
cmp
enter
les
mov
loope
mov
jns,pn
out
aam
cmp
sub
jmp
add
pop
scas
test
clc
add
call
jge
rcl
or
push
jo
add
jp
add
and
mov
push
sbb
add
jecxz
ljmp
xchg
pusha
jnp
add
jle
lahf
xlat
or
in
adc
cs
add
push
inc
jns
daa
add
sar
mov
push
mov
add
pop
inc
aas
dec
add
adc
fldcw
push
mov
dec
mov
add
jg
pminsw
and
roll
dec
xor
pop
cmp
cli
pop
gs
outsl
imul
add
flds
hlt
adc
pop
arpl
mov
and
nop
mov
add
out
pop
lret
adc
shrl
and
aad
and
add
push
mov
add
arpl
enter
loopne
jg
add
mov
std
xchg
sbb
in
add
jns
pushf
and
pop
daa
sub
push
mov
and
mov
adc
add
mov
mov
adc
rclb
aad
movsb
add
movsl
mov
loop
push
pop
shrb
adc
mov
sub
mov
addb
in
add
ljmp
add
arpl
add
test
add
cli
out
mov
call
rcrl
push
movsl
inc
div
sbb
sahf
lcall
pop
adc
out
insb
inc
enter
add
cmp
jle
sbb
cmpb
push
xor
inc
adc
adc
xchg
jae
xor
inc
dec
add
scas
cwtl
mov
fcompl
lods
jl
nop
dec
xor
jbe
sub
popf
mov
cmc
push
pop
dec
mov
add
push
jae
inc
mov
add
jmp
xchg
cmp
cmp
mov
sub
sub
testb
ljmp
enter
jo
adc
int3
or
dec
cmp
push
pop
loope
jg
loopne
lea
add
add
stos
adc
push
xor
add
les
jno
mov
mov
push
inc
sbb
mov
and
das
push
out
cmp
push
pop
ret
enter
inc
test
fwait
scas
add
pop
popf
cli
pop
or
mov
lahf
fcomps
es
inc
cmp
pop
push
add
adc
or
enter
test
shr
cmp
sbb
call
daa
or
add
push
pop
call
rcrl
mov
sub
pop
mov
sub
xchg
jo
mov
inc
sar
in
adc
add
mov
std
jge
add
call
push
mov
or
ret
xchg
popa
add
cmp
push
aaa
div
jp
sbb
dec
incb
loopne
push
daa
mov
sbb
mov
push
fimuls
sub
or
movsb
jns
add
jmp
test
gs
add
mov
sti
js
push
clc
adc
adc
es
ret
push
lods
mov
pusha
mov
fs
mov
fidivs
xlat
jmp
filds
mov
out
add
push
stos
mov
sbb
mov
jb
sarl
add
popf
test
cmp
mov
rcrb
push
pop
xor
pop
fnstcw
fcmovbe
xchg
sbb
push
xor
pop
cmpsb
dec
outsb
adc
xchg
pop
mov
and
inc
adc
add
xchg
icebp
xchg
popf
sbb
sub
sub
sbb
add
xchg
imul
mov
push
je
dec
frstor
mov
xor
add
add
sub
jb
jecxz
add
sbb
dec
mov
add
adc
pop
pop
add
xchg
ffreep
fs
adc
daa
imul
adc
lret
inc
xor
push
aaa
pop
stos
mov
mov
mov
add
add
flds
pop
xor
cmp
enter
jg
xchg
pop
inc
popa
xor
mov
pusha
not
mov
pop
inc
out
add
sbb
fmull
inc
adc
xor
fnstcw
push
fs
iret
stos
mov
cmpb
aaa
or
fs
xor
sbb
cmp
add
stos
and
jns
xchg
cld
cltd
mov
add
movsl
js
cmp
cmp
dec
pop
jmp
add
mov
xchg
cmp
aaa
jb
dec
push
jae
mov
or
xor
sbb
sub
push
mov
jge
aas
push
mov
add
in
dec
add
lds
test
cwtl
int
and
jae
leave
sbbb
add
adc
push
dec
sbb
loopne
and
mov
int3
flds
jmp
xchg
fbstp
fbstp
jl
jg
add
xchg
mov
adc
xchg
add
jmp
push
mov
dec
rolb
in
test
test
xchg
jae
test
adc
loope
loopne
hlt
flds
pusha
icebp
xor
daa
inc
push
dec
xchg
jb
enter
fnstcw
sahf
add
dec
jmp
fwait
sbb
aas
xor
shll
cmp
push
mov
or
cmp
or
fisubrl
int3
push
and
imul
dec
xor
add
imul
xchg
adc
push
push
lods
pop
or
mov
add
sub
sub
jo
fiadds
daa
cmp
mov
enter
fisttps
xor
push
loope
filds
pop
mov
sbb
shll
xchg
xor
sub
pop
push
js
cld
shll
xor
ret
insb
inc
inc
shrl
xchg
xor
loopne
cltd
dec
push
popa
mov
roll
pushf
test
mov
xor
cld
loop
cmpsb
xchg
mov
daa
pusha
shl
xor
mov
mov
in
pusha
fsubr
mov
adc
idivb
or
mov
or
js
xchg
arpl
inc
sbb
mov
arpl
xchg
nop
out
arpl
mov
push
or
fs
sbb
test
push
dec
or
movsb
sub
in
inc
or
inc
loopne
seta
orl
jge
and
repz
loopne
push
repnz
mov
adc
xor
xchg
cmp
bound
mov
lock
xor
icebp
test
outsl
xor
lock
rcrb
jle
es
add
xor
hlt
divb
gs
push
repnz
idivl
or
push
int3
jmp
rclb
scas
push
xchg
mov
sbb
xor
adc
shll
dec
scas
dec
cmp
add
aam
jl
sbb
scas
icebp
or
rcl
cli
sub
mov
cmp
in
jp
movsb
mov
lds
lock
or
xor
rcll
cmc
mov
test
pop
in
cmp
push
int3
inc
adc
test
rcrl
push
lahf
incb
or
lods
cmp
mov
jae
or
shl
jecxz
mov
cmp
or
bound
jnp
or
sub
xchg
test
jne
push
arpl
je
divl
pop
pusha
cmp
push
ja
pop
push
lret
adc
push
add
jo
add
lcall
ds
nop
out
push
testl
aas
dec
xor
xchg
mov
inc
shll
pop
add
int
mov
add
ds
icebp
orl
sbb
call
lods
pusha
cmpl
enter
jno
cmpsb
inc
pop
xor
call
jp
dec
lds
imul
cmp
or
test
clc
sbb
dec
out
pusha
push
jl
cltd
scas
icebp
sub
pusha
arpl
shlb
cmp
and
jl
or
add
insl
and
inc
rorb
jge
popl
outsl
lahf
fs
adc
push
add
adc
and
add
loopne
mov
cmp
cmpsb
and
out
inc
int
cmp
fwait
lcall
js
or
lods
ss
xchg
int
orb
lcall
pusha
inc
call
mov
insb
push
daa
adc
dec
mov
jno
enter
iret
call
lods
adc
push
dec
sub
fwait
or
cmpsl
mov
lods
pusha
cmpb
and
sub
lret
pusha
pusha
xchg
mov
pop
cwtl
or
jo
xor
mov
xor
pop
pop
loopne
test
xor
sti
push
test
out
or
cmp
cs
or
xchg
nop
or
out
popa
sub
pusha
movsl
sub
lock
xor
int3
and
inc
push
dec
call
stc
lea
mov
stc
pop
hlt
mov
popl
lcall
xchg
adc
jae
adc
pushf
or
iret
jo
mov
enter
jo
fcoml
repz
or
iret
jo
sbb
call
rolb
push
and
icebp
mov
loope
sub
adc
add
daa
push
clc
leave
jnp
push
loope
cmc
popl
leave
adc
ds
scas
mov
adc
lock
or
adc
roll
icebp
sub
cmp
rep
pusha
cld
adc
xacquire
inc
rol
mov
mov
xor
add
sarb
dec
std
fdiv
popa
enter
add
or
inc
incl
idivl
inc
mov
lods
pusha
sbbl
push
mov
ja
lods
pusha
subl
push
sub
xchg
mov
adc
sbb
nop
xchg
notb
aam
test
hlt
dec
fdivrs
adc
cs
rclb
xor
pop
pusha
add
inc
test
jl
sbb
or
inc
push
adc
loopne
pop
bound
xor
iret
mov
adc
lret
sbb
in
xor
sub
lock
mov
pusha
fisttps
test
lock
int3
push
adc
rol
mov
lcall
sub
dec
dec
popf
pusha
xor
mov
or
enter
fmuls
pop
bound
call
push
js
cltd
lret
fwait
jl
or
test
pusha
fdivs
push
add
dec
push
leave
pusha
rclb
int3
subb
lahf
or
hlt
lds
xchg
mov
test
mov
and
xchg
repz
pop
add
jl
or
imul
inc
insb
or
mov
pop
add
and
jl
or
lock
inc
sub
pusha
test
adc
adc
lcall
fidivrs
add
repz
and
loopne
incl
popl
and
popf
ds
or
pushf
clc
lahf
int
subb
js
xorl
adc
ds
push
repnz
stos
xchg
mov
and
repz
mov
xchg
and
clc
sbb
xchg
clc
jo,pn
pop
sbbb
add
add
imul
pop
push
add
cmp
and
and
adc
push
frstor
xor
stos
pusha
fcoms
xor
adc
add
in
mov
aad
pop
pop
hlt
rorb
jno
xor
adc
cli
xor
test
pop
add
dec
sbb
cmpsb
sub
imul
adc
fcomi
push
mov
and
push
out
and
scas
test
add
stos
mov
inc
mov
jl
sbb
lods
pusha
orl
add
pop
push
jo
pop
cmp
pusha
and
in
mov
loopne
lcall
in
add
pusha
rclb
dec
sub
pop
pusha
and
dec
sbb
call
lret
mov
mov
pusha
mov
sbb
test
mov
jp
and
out
mov
xor
lahf
jo
jae
pop
clc
push
shlb
out
int3
std
dec
rcrb
imul
mov
cmpsl
xlat
enter
jo
add
mov
sub
add
call
jne
clc
mov
pop
sbb
fmull
lock
inc
and
testl
mov
mov
xchg
and
js
mov
out
loopne
call
in
vorps
js
xchg
dec
fisubs
adc
sub
icebp
dec
cmc
mov
jnp
popa
ret
xor
mov
cltd
nop
clc
lock
adc
jl
sub
xor
jg
pushw
testl
sub
or
adc
lcall
fadds
cmp
inc
or
das
scas
leave
xor
into
rorb
mov
inc
int3
shll
into
adc
adc
adc
clc
bound
add
xor
inc
enter
push
sbb
cmpxchg
or
test
xchg
jl
adc
push
xor
adc
inc
fmull
xor
xor
mov
sub
xchg
rclb
shrl
xchg
pusha
fcompl
inc
mov
mov
xchg
rclb
ror
les
push
cmp
mov
stos
xchg
je
loopne
jne
add
lds
xchg
pushf
ds
sub
nop
outsl
andps
aam
cmp
loop
inc
or
xor
popl
adc
cmp
and
fdivrs
rclb
lock
jl
lds
test
pusha
sarl
xchg
inc
movsb
rcrl
or
mov
scas
and
and
and
mov
hlt
jl,pn
or
mov
or
in
mov
and
jbe
dec
adc
pop
dec
adc
into
jecxz
nop
aad
scas
inc
dec
xor
test
xchg
xchg
sub
or
sub
pop
xorb
in
pop
pop
add
lret
pop
pusha
or
cli
xor
hlt
negb
fsubrs
sub
jecxz
inc
adc
test
mov
mov
ljmp
inc
cmc
shll
imul
popa
je
clc
sbb
push
hlt
sbb
loope
inc
jp
mov
pop
add
inc
test
repz
sbb
movsl
icebp
hlt
decb
mov
lock
outsl
out
loop
xorb
orl
add
lea
mov
je
or
xchg
cld
clc
sub
and
loopne
and
jl
or
cmc
xchg
hlt
sti
icebp
adcb
add
movsl
popa
xchg
and
jecxz
inc
xchg
mov
push
push
icebp
nop
jae
xor
je
loopne
xor
insb
sbb
adc
out
fadd
mov
sbb
xchg
cmp
movsb
rclb
iret
nop
inc
in
popa
and
push
loopne
aas
xchg
jae
xor
xor
rolb
fsubr
loopne
push
cmc
and
dec
cs
mov
cmc
pop
dec
jo
data16
cld
mov
jl
sbb
jae
xor
push
popl
incl
add
xchg
call
pop
add
pop
lods
or
cwtl
std
sti
adc
adc
sbb
mov
imul
adc
xor
loopne
jne
bound
xor
add
jne
popa
fs
xor
adc
xchg
adc
pop
das
pop
bound
nop
fnsave
dec
jmp
test
jg
push
xor
jl
pusha
js
idiv
inc
adc
and
shrb
and
mov
adc
es
aad
or
pusha
and
out
mov
adc
sarl
cmp
and
push
push
testb
popl
push
adc
call
adc
arpl
jae
popf
sbb
lods
pusha
lahf
ror
or
or
push
outsb
ficoms
rolb
push
sbb
inc
jbe
lcall
sub
add
popl
out
repnz
or
xchg
test
push
add
sbb
loopne
insl
xchg
inc
sub
loope
or
xchg
popf
fs
xchg
lods
mov
or
dec
mov
loope
test
popa
in
nop
insb
pusha
mov
inc
or
xchg
ds
or
aad
push
xor
sub
dec
sbb
add
add
aas
dec
decl
cmp
mov
aas
pop
or
or
dec
xor
cmpsl
push
and
in
enter
shlb
repnz
lds
in
xchg
insb
pusha
xor
loopne
lea
fdivp
add
outsl
xor
xor
int
xchg
jo
add
dec
mov
add
mov
jecxz
aaa
add
push
push
adc
adc
cmpsb
lock
testl
pop
pop
in
mov
inc
pusha
ror
cmp
pop
movsb
or
or
sbb
test
mov
pushf
sbbb
add
cld
mov
jbe
les
push
sbb
popa
and
popf
punpcklbw
jg
ret
push
or
xor
mov
aam
xor
mov
inc
mov
xchg
or
call
add
cmp
jb
cmp
xor
jg
push
sub
sbb
dec
xor
fwait
lods
pusha
sbbl
cld
and
and
pusha
adcb
xrelease
add
ret
inc
xrelease
mov
pop
test
js
or
inc
xchg
push
cmp
push
lret
mov
dec
dec
and
jl
xchg
in
insb
pusha
ret
adc
icebp
orb
es
out
call
aas
test
mov
das
mov
adc
rcr
mov
mov
cwtl
adc
mov
pop
jmp
je
mov
adc
sbb
jno
sti
fmuls
xor
cld
testb
and
ret
push
inc
jmp
adc
js
inc
pusha
rcl
push
add
pusha
loopne
sbb
mov
xorl
popa
cwtl
pop
shl
ds
inc
sbb
pop
loopne
adcl
inc
scas
pop
popl
scas
adc
jg
add
lods
lds
es
sbb
push
je
mull
xor
sti
test
ljmp
inc
scas
ljmp
mov
popl
jg
push
push
mov
ljmp
enter
cmp
mov
inc
out
mov
js
dec
push
sbb
loopne
sahf
pop
stos
inc
test
out
sub
push
lret
mov
loopne
cwtl
and
adc
inc
xor
or
or
adc
insb
mov
shll
fsubs
clc
dec
dec
xor
add
cmp
pop
push
xor
movsb
mov
lahf
call
test
or
enter
add
aam
int
mov
cld
inc
cmp
mov
sub
loopne
lds
loope
adc
cmp
and
cwtl
roll
addb
dec
cld
sub
xor
es
dec
xor
mov
adc
or
xor
mov
imul
popl
and
mov
loopne
popa
dec
scas
sbb
enter
xor
addr16
sbb
test
dec
adc
xchg
fs
or
roll
xor
sbb
push
add
popa
and
adc
add
cmpsl
ret
push
sbb
and
and
mov
xor
test
push
and
pop
adc
in
adc
xor
mov
subb
jae
repnz
orb
add
insl
sbb
mov
js
cmp
lods
pop
or
iret
jns
or
adc
adc
lock
roll
pop
jl,pt
and
fsub
add
xor
add
pushw
sub
es
sbb
sub
gs
in
and
jb
shr
popa
dec
inc
sbb
fwait
add
xchg
jecxz
fldl
lahf
gs
add
out
outsl
movsb
imul
test
pusha
dec
cltd
dec
cmc
test
nopl
xchg
cmovl
in
add
je
jb
xor
sbb
or
add
subl
jo
rcll
fnstcw
mov
insl
test
jle
xor
add
lds
xchg
je
xor
call
push
or
xchg
test
jmp
gs
add
dec
rclb
push
rolb
xorl
xor
roll
xor
push
jmp
fld
pop
bound
mov
xor
dec
sbb
jae
inc
jb
push
jle
pop
cmp
or
add
add
insl
xchg
es
add
xlat
adc
jo
cltd
test
push
inc
test
iret
repz
jns
add
dec
out
mov
jo
sbb
jecxz
call
add
or
push
add
mov
sbb
fdivl
dec
add
xchg
jle
and
test
imul
addr16
aam
push
push
sbb
test
stc
add
push
repz
xchg
mov
add
dec
out
jl
sbb
call
pop
cmpsb
addr16
test
push
sbb
push
pop
popa
fcmovbe
jnp
ret
dec
push
dec
shll
or
jl
sub
and
dec
fdivs
pop
rcrl
sub
mov
call
xor
xor
mov
cltd
dec
enter
sub
jae
adc
xorb
lods
jo
cmpsl
ds
jb
xchg
insb
mov
adc
add
xchg
sub
mov
outsb
add
jmp
add
aaa
fwait
push
pushf
out
jle
add
and
or
pop
jmp
scas
and
jb
add
stc
inc
in
int
mov
cmpsl
fidivrs
test
push
xchg
add
loope
pop
mov
inc
ret
in
cmc
test
fldt
jle
push
and
mov
rcl
ds
add
stos
fildll
sbbb
add
in
push
push
add
mov
pop
adc
loopne
or
jl
and
sbb
pop
lcall
adc
add
jo
test
mov
add
and
filds
out
push
push
jns
ficomps
sub
add
mov
xor
mov
jnp
scas
jae
movsl
jb
sbb
addb
cwtl
or
mov
add
scas
inc
adcb
jbe
cmp
and
add
mov
loopne
das
rol
lods
outsl
int
sbb
mov
or
leave
push
pusha
orl
xor
rolb
stos
in
rorb
xchg
sbb
js
movsl
iret
pop
pop
xor
cmp
call
add
inc
push
mov
add
je
pop
cld
dec
dec
add
and
push
sub
loopne
scas
push
fsubrs
iret
mov
test
scas
in
inc
andb
add
xchg
push
mov
arpl
insb
mov
push
fiaddl
and
cwtl
xor
or
mov
sub
jno
or
sub
sbb
xchg
and
ja
fmul
fsts
inc
push
enter
ds
lea
mov
inc
outsb
pop
lods
jecxz
call
inc
xchg
jecxz
jmp
xchg
add
sub
push
fcoms
and
mov
sub
xor
addb
or
int3
shlb
jo
lret
pop
sub
pusha
mov
repnz
add
push
int3
in
mov
insl
cmpl
jl
rcrl
aas
cmpsb
jne
pusha
and
jge
add
sbb
inc
mov
push
push
add
out
cmovp
lock
mov
je
xor
xchg
mov
fmul
popl
adc
inc
mov
nop
add
and
sub
push
sarl
jne
outsb
mov
mov
enter
ds
lods
dec
or
pushf
lcall
xorl
mov
xor
fs
push
jo
and
shl
add
sbb
jp
call
lret
fs
pop
sar
incb
in
jns
add
and
sub
cmp
sbb
test
or
and
repz
mov
add
outsl
sub
cs
iret
repnz
xor
xor
dec
lods
jno
mov
pop
lea
stos
mov
jge
jno
scas
xchg
pop
mov
into
xor
fidivrs
or
inc
mov
jbe
add
dec
add
push
int3
pop
push
cmp
or
roll
push
arpl
test
loope
mov
lock
inc
fsts
mov
adc
mov
mov
cmpsb
loopne
inc
pusha
pop
cmp
sbb
add
xchg
pop
std
add
cmp
push
or
fdivrs
rclb
xor
call
inc
iret
add
clc
arpl
pop
pop
sbb
es
pushf
mov
adc
mov
jae
sub
arpl
cld
popf
and
jg
add
xor
addb
cmp
dec
out
sbb
jbe
and
push
add
rolb
ret
add
inc
jnp
ss
iret
out
sbb
shlb
pop
add
fs
jg
mov
test
and
xor
pusha
mov
and
mov
mov
inc
xorl
mov
scas
sub
cs
jmp
adc
add
inc
mov
xchg
pop
pop
sarb
fwait
andl
jno
mov
sbb
jl
add
call
nop
add
shll
push
jnp
call
fcoms
dec
adc
fwait
pop
sbb
les
clc
cmp
out
add
scas
daa
stc
mov
out
addl
pop
imull
xchg
pop
push
sbb
jg
mov
mov
leave
testl
adc
cmp
pop
fnsave
jns
jb
jge
dec
fsubrl
mov
mov
rcrb
fimuls
bound
pop
sbb
jmp
add
xor
mov
ret
test
mov
fsubrs
cmp
pop
mov
aad
out
dec
add
stos
call
add
in
inc
ss
popa
dec
jo
cmp
mov
fsubrs
ret
add
lods
inc
push
scas
push
fdivr
add
test
inc
jecxz
in
test
incb
dec
mov
mov
mov
mov
add
cmp
push
movsb
popf
adc
sbb
je
jle
push
rorb
sahf
jns
add
adc
inc
push
jecxz
mov
add
dec
xchg
int
xchg
pop
jl
sub
add
pop
and
add
imul
jbe
inc
dec
push
jne
jmp
rclb
arpl
out
cmpsb
xlat
push
jb
enter
push
lcall
add
cld
fisttps
cmc
mov
rolb
jo
mov
ret
dec
movsb
lods
test
aas
mov
add
in
sub
stos
cmpsb
loope
jns
ss
xor
add
sbb
xchg
lods
or
push
shll
jb
adcb
jne
dec
andb
pop
repz
or
add
cmpsb
in
jnp
add
fdivrp
cld
stc
add
mov
jg
out
pushf
pop
negb
jno
jl
inc
jnp
add
ficompl
in
mov
pop
push
dec
add
jle
jp
js
push
push
or
addl
mov
jnp
xchg
test
inc
cwtl
adc
cmc
add
loopne
pop
jg
push
outsl
push
cli
mov
jle,pn
sub
push
add
inc
and
clc
fneni(8087
loopne
cmp
xchg
add
shrl
push
cmp
jge
scas
add
xchg
xor
adc
jnp
jo
and
mov
pop
xchg
insl
pop
xchg
cli
lds
add
repnz
adc
shrl
mov
xor
or
fsubl
mov
jmp
sub
and
mov
pop
das
int
sub
jnp
mov
cmp
dec
ja
hlt
add
push
mov
sub
faddl
or
pop
xchg
add
xchg
add
sbb
or
cmp
aad
add
in
gs
xor
push
add
cmpsb
jne
stc
inc
sbb
xchg
xchg
xchg
jl
lock
loope
xchg
loopne
fmull
repz
sbb
xor
jmp
xchg
int3
mov
add
or
cmp
popa
and
rclb
inc
gs
xor
mov
jmp
sti
stos
es
ret
jg
add
cmp
xchg
inc
cmp
sbb
sub
aas
pop
in
xor
mov
add
out
addr16
decl
lahf
stc
scas
pop
out
jb
lods
and
and
or
call
add
fsts
push
dec
mov
add
fwait
andb
inc
add
out
sub
jge
add
ret
sbb
jmp
add
pop
xchg
xlat
inc
push
add
popf
into
jns
sbb
iret
pop
popa
nop
fwait
out
add
out
cmp
jns
add
jb
xchg
mov
fistpl
mov
outsl
jno
incl
push
cltd
lods
mov
add
in
movsl
test
add
push
push
bnd
jbe
push
cmc
mov
inc
jbe
je
jecxz
lock
add
clc
loope
pop
jb
sub
xor
add
add
out
add
push
push
shll
ds
sub
in
rclb
rol
pop
adc
mov
repnz
add
sub
or
jno
pushf
xchg
lock
jl
sbb
add
int3
ja
int
cmpsb
sub
mov
rorl
add
add
jmp
add
sub
aas
fwait
mov
inc
enter
pop
push
dec
adc
test
mov
loope,pt
andb
jl
or
push
pop
mov
bound
add
in
add
mov
jmp
mov
push
roll
xchg
jns
jae
pop
aaa
mov
subb
pop
jg
add
xor
sub
xchg
ds
js
pop
add
pusha
or
fstl
out
mov
add
and
and
leave
and
adc
stos
loop
add
sbb
or
rorl
imul
cmp
push
cli
cltd
cmp
rolb
es
movsb
daa
je
push
jle
fisttpl
dec
das
in
cmpb
bound
jae
or
add
test
add
xor
jle
into
pop
inc
push
sarl
mov
cmp
adc
mov
ficoms
inc
adc
loop
imul
out
dec
pop
mov
dec
pop
rolb
setge
ljmp
cmpsb
mov
push
add
or
insl
data16
sbb
andl
add
test
add
lea
pop
pop
insb
rclb
call
cmp
aad
xchg
inc
and
xchg
icebp
mov
add
ja
out
test
ret
fisubl
daa
mov
pop
lds
push
push
mov
nop
xchg
inc
xor
mov
dec
je
add
out
dec
cmpsb
cmp
inc
mov
jb
sbb
fdivrs
in
push
add
dec
loopne
testl
je
pop
xor
aas
pop
add
push
test
repnz
sub
sbb
mov
in
ljmp
cmp
lret
lods
cmp
add
or
sub
dec
add
add
mov
test
stos
jecxz
mov
enter
add
push
int3
out
push
add
inc
mov
clc
sub
fcomi
adc
push
push
xlat
or
hlt
or
xchg
loope
add
icebp
adc
pop
xchg
and
shll
add
sbb
mov
loop
or
pusha
sbb
daa
insb
dec
xchg
add
shr
popf
mov
pop
dec
ja
iret
mov
jbe
movsb
cmp
sti
jl
clc
in
movsl
incl
add
call
es
repnz
xchg
xchg
add
stos
ja
jmp
lahf
jmp
add
push
or
and
loopne
sbb
mov
push
xor
nop
mov
mov
roll
int
mov
mov
adc
sub
add
add
or
nop
cmpl
jae
add
or
das
add
out
mov
inc
or
add
jae
dec
cmp
fsubp
sub
inc
xor
int3
pop
add
xchg
dec
lods
add
jl
rorb
popl
test
jge
sub
roll
clc
icebp
enter
push
xchg
ja
arpl
ds
mov
adc
in
icebp
outsb
popa
call
dec
add
sbb
dec
push
cmp
sub
movsb
adc
test
mulb
xchg
sub
add
decl
xor
mov
adc
inc
fwait
rsm
push
xchg
fldenv
sub
lds
xchg
mov
mov
add
push
inc
push
aas
and
mov
push
pop
mov
add
sarb
popf
test
jnp
in
mov
push
int3
addr16
scas
xor
and
shll
add
popf
xchg
cmp
hlt
add
pop
sarb
and
push
iret
repz
mov
cmp
add
insl
jg
pushf
push
pusha
cld
mov
cmp
sti
pop
push
pop
xlat
je
loope
orl
add
and
sbb
call
mov
cmp
add
cmp
xor
pop
mov
cld
arpl
push
test
push
loopne
pushf
jp
cwtl
pop
xorb
xlat
add
dec
push
aad
testb
mov
add
sti
ror
add
icebp
ror
push
inc
cmpsl
dec
add
add
dec
xor
pop
clc
xchg
cmp
add
or
daa
fistpl
push
push
lock
jnp
arpl
adc
iret
adc
push
testb
cmp
add
int3
mov
mov
add
pop
insl
fistl
out
adc
sub
nop
sbb
push
sub
imul
add
sbb
mov
hlt
js
add
push
jns
sbb
inc
sub
call
mov
lea
or
cmovbe
xor
lods
ret
pop
enter
cltd
movsb
aam
aas
fldenv
push
jnp
mov
pushf
shl
popa
xor
in
and
and
call
pop
dec
xchg
adc
cmp
scas
sbb
ljmp
pusha
xlat
dec
iret
sub
jnp
jne
add
and
sub
scas
push
lret
insb
testl
jl
xlat
xchg
aas
xor
popf
cld
or
repz
cmp
leave
add
fiadds
dec
add
push
mov
xlat
cmp
sbb
sarl
mov
or
outsl
aad
sbb
loope
add
das
dec
and
sub
call
add
movsl
mov
jnp
add
add
xchg
xchg
cmp
and
ljmp
pop
xchg
loop
pop
inc
mov
test
imul
add
lcall
add
add
cmp
push
and
adc
pop
mov
sbb
xor
add
mov
xor
add
clc
loopne
es
addl
mov
or
pop
or
adc
add
fwait
add
loope
cltd
and
cmpsl
pop
add
dec
sti
cmp
jp
xchg
adc
notl
nop
js
out
in
xor
fldcw
pop
sahf
lahf
sub
xchg
rclb
mov
add
pop
sbb
jns
les
xor
sbb
mov
push
bound
inc
sub
xlat
nop
cmp
and
loopne
add
lea
dec
push
aas
fmuls
cmpsb
push
mov
inc
leave
sub
xor
inc
or
push
dec
mov
adc
nop
pop
push
ss
mov
mov
push
arpl
mov
in
cwtl
aam
mov
inc
test
inc
test
adc
mov
into
push
xor
add
negl
in
pop
subb
mov
into
add
xor
cmc
pusha
test
setge
mov
and
xchg
psllq
out
movsb
mov
xchg
and
add
xor
add
aad
sbb
dec
iret
mov
clc
adc
sbb
mov
dec
jp
adc
out
push
shlb
adc
pop
dec
in
mov
insb
leave
sahf
mov
icebp
adc
cmp
pop
fdivl
cmp
loope
jl
inc
in
ss
inc
dec
or
pop
sbb
shlb
sbb
sub
sbb
or
cli
cmc
or
stos
rcl
adc
out
add
in
add
sbb
sbb
ret
jne
filds
or
add
or
pushw
add
add
dec
dec
nop
mov
test
dec
cld
add
push
sbb
push
int
sbb
cltd
rorb
jno
add
or
xchg
cmc
or
cmp
push
mov
inc
dec
repz
lods
les
xchg
add
out
movmskps
clc
ss
lcall
and
dec
add
xor
fucomip
push
sub
leave
movsb
push
clc
xor
outsb
xadd
dec
mov
fisttpl
and
push
sub
push
jno
call
pop
push
out
stos
inc
js
repnz
push
add
mov
inc
sbb
jnp
in
sbb
nop
mov
jmp
fsubl
cmp
ffree
and
pop
push
out
push
lods
std
ljmp
sbb
pushf
add
icebp
jae
cmpb
pusha
lcall
es
fcoms
mov
xchg
pop
cli
cmp
mov
mov
cmp
stc
orl
pop
std
xchg
add
xchg
pop
dec
push
lret
fbstp
xchg
cmpsl
add
push
mov
push
loopne
add
cmpb
dec
mov
mov
mov
push
sub
mov
cmp
les
add
arpl
lret
push
xor
jecxz
dec
popa
xchg
addr16
lcall
pop
inc
add
cmc
jmp
jae
or
xchg
mov
push
cmp
pop
fisttps
mov
push
sub
out
push
sub
pop
les
stos
dec
cmp
aas
scas
cmp
loop
inc
loopne
push
add
push
mov
push
sub
stc
xchg
add
mov
push
and
adc
add
dec
sub
scas
ss
add
leave
mov
shl
pop
sub
add
dec
or
jns
push
pop
xchg
data16
push
pop
add
and
dec
and
mov
adcl
std
xchg
clc
lret
pop
add
sub
aas
nop
mov
sub
push
cli
xchg
lock
jge
push
sub
jne
inc
lret
sub
push
add
jp
icebp
movsl
pop
cld
andb
xchg
mov
jbe
add
xor
test
cld
int
cmp
pop
icebp
mov
nop
into
sbb
int3
pop
dec
add
dec
lret
adc
decl
ret
popa
andl
ror
outsl
or
cmc
bound
mov
leave
dec
pop
subb
sarb
xchg
jne
add
mov
push
push
arpl
jle
das
or
lods
movsb
pop
out
rolb
fldenv
add
out
sarl
mov
aas
push
jp
add
cmp
stc
lret
mov
sub
mov
push
hlt
jl
or
insl
sarb
pusha
dec
push
aaa
hlt
ljmp
les
pusha
dec
mov
cld
mov
lahf
out
adc
sbb
filds
push
int3
shrb
test
call
lahf
fucom
call
add
and
mov
andb
loop
es
fcoms
cpuid
lock
in
out
cwtl
or
cmp
fimull
jl
pop
test
in
dec
loopne
jp,pt
add
sub
imul
sbb
insb
dec
sub
add
mov
jno
int
sub
cs
stc
out
add
mov
add
pop
pop
insl
mov
pop
andl
mov
jl
add
das
leave
pop
cmp
es
xchg
inc
hlt
xchg
cmp
scas
clc
or
popa
outsb
push
add
sub
cmpsl
cmpsb
in
sbbb
add
popa
inc
test
add
lahf
adc
push
pushf
jno
cld
add
es
or
js
fildl
pusha
pop
inc
not
add
xchg
outsb
icebp
inc
mov
xor
jo
loop
jne
aaa
add
xor
pusha
ficoml
es
sahf
or
icebp
clc
enter
lods
cmp
sti
loop
xchg
mov
add
pop
dec
jle
add
jmp
std
int3
ljmp
push
pop
jge
inc
add
push
lret
pusha
add
imul
cmpsb
mov
mov
fnstcw
sbbl
mov
sar
push
cmp
ret
mov
stc
push
mov
cld
sub
rorl
rclb
add
and
add
neg
insb
jae
loop
jp
notb
mov
lock
ljmp
roll
adc
out
jge
mov
pop
add
add
xor
mov
clc
add
test
jns
in
add
rolb
sbb
cmp
sbb
sbb
fnsave
push
dec
inc
pop
mov
push
xor
icebp
sub
jno
cmp
fs
add
movsl
lea
fisttpll
in
jmp
stos
fadds
jo
iret
mov
lea
nop
ss
in
jle
dec
jl
stos
mov
mull
mov
adc
scas
push
push
sub
fnstcw
test
outsl
lods
dec
mov
cmp
clc
push
mov
jg
and
gs
push
pop
fnstsw
and
je
push
cmp
clc
imul
or
stos
dec
lds
xor
sbb
aas
mov
inc
mov
test
orb
add
cmc
mov
mov
lods
fists
add
in
xchg
inc
or
jae
and
push
add
xlat
nop
or
sub
ljmp
jecxz
cwtl
aas
sti
repz
test
mov
add
out
in
popa
jp
add
je
ficoml
push
or
mov
cmp
add
repz
cmp
add
adc
js
push
sbb
add
cmp
cwtl
add
fisubrs
xchg
pusha
dec
add
xor
loop
add
mov
dec
mov
jp
popf
int3
push
imul
adc
and
adc
jbe
mov
js
fildl
shlb
push
pop
mov
ret
xor
sbb
xlat
add
hlt
mov
jns
pop
add
maskmovq
notl
dec
xchg
push
or
pop
arpl
std
call
adc
cmp
dec
faddp
add
mov
push
rclb
or
bound
cmp
adc
mov
fildl
popf
pop
cmp
stos
sbb
lds
popl
rcrb
sub
or
movsl
add
mov
ds
cwtl
es
pop
ja
add
shlb
ljmp
push
mov
lods
dec
push
adc
enter
inc
loopne
test
jns
loopne
push
pop
out
jbe
add
aam
rcrb
cmp
scas
and
rolb
ret
add
ss
repnz
adc
cmp
and
and
sbb
fcomps
aam
fwait
dec
in
mov
jle
inc
jl
cmp
cwtl
inc
add
or
or
add
lds
add
popa
or
fwait
out
shlb
add
push
addr16
xchg
arpl
inc
xchg
rorb
mov
dec
je
cmp
in
mov
andl
ljmp
lea
push
xchg
arpl
sub
push
cmp
lods
test
or
push
or
xlat
push
sbb
xor
xorb
pop
adc
lock
add
lods
aam
aad
jp,pt
incl
pop
adc
cmc
pop
pop
ret
xor
aad
sub
add
popf
ficomps
and
or
lret
jmp
lds
in
popa
add
xor
insb
fldl
out
lods
add
pop
jnp
jbe
add
sub
aaa
jmp
push
cltd
loope
mov
enter
je
fs
rolb
inc
mov
mov
cltd
add
add
sbb
arpl
xchg
mov
jle
mov
cli
add
push
and
fdivp
daa
push
test
popf
roll
jle
gs
lret
mov
mov
loope
dec
pop
aas
idivl
and
mov
dec
push
jle
mov
inc
xor
or
loopne
jge
test
dec
xlat
mov
jno
orb
push
sbb
int3
jle
add
dec
mov
icebp
test
cmpsl
into
insb
add
jne
jb
xor
push
mov
loope
xchg
insl
pusha
lods
mov
jg
adc
mov
daa
adc
inc
adc
xor
pop
loop
ret
pop
lock
loope
xor
popa
mov
int
sub
push
ret
inc
movsl
lcall
test
in
inc
pop
or
xchg
fcomi
adc
cwtl
cwtl
movups
sub
js
dec
and
pop
cwtl
push
mov
and
push
test
jmp
nop
aam
push
sbb
pop
lcall
test
push
sub
cmp
add
add
sahf
lods
jmp
hlt
add
add
scas
adc
loopne
arpl
sub
sbb
rcrb
addb
cmpsl
xorl
mov
jge
mov
jp
lods
add
ja
pop
xadd
in
shlb
xchg
jmp
and
sbb
lods
lea
pushf
in
js
xor
push
jae
mov
add
out
or
mov
xor
push
push
and
add
cmp
add
es
cmpsl
adc
and
repz
pop
add
imul
sub
ss
adc
and
push
mov
jnp
stos
xchg
js
gs
testl
jno,pt
or
rcll
add
mov
pop
movsl
or
addr16
sub
aam
sbb
loop
cmpsl
add
movsl
mov
lcall
and
add
loope
mov
cwtl
scas
push
cmc
sbb
or
data16
mov
out
dec
stos
lret
pop
add
fwait
inc
iret
test
test
sti
enter
xor
xchg
fnstcw
push
inc
enter
negl
sbb
push
push
add
dec
cmp
inc
mov
in
andb
adc
jns
rorb
das
xchg
inc
sub
mov
pop
js
rcrl
mov
icebp
and
loope
add
inc
mov
add
js
std
scas
inc
adc
inc
add
xlat
and
add
fldenv
jecxz
push
dec
push
in
push
push
or
andl
cmp
fisttpl
push
sub
je
out
insb
jg
push
xchg
mov
out
sub
scas
lret
pop
jae
push
jnp
loopne
sarb
xor
mov
adc
rcrb
pop
adc
lret
in
nop
rolb
repnz
push
push
movsb
fisubl
mov
add
add
jecxz
add
dec
std
xchg
add
movsl
lock
dec
add
mov
ret
xlat
sub
or
and
cmc
add
arpl
lret
pushf
icebp
xor
add
movsb
add
mov
es
scas
adcb
pop
mov
and
icebp
sbb
mov
xchg
fsubrl
shlb
add
test
pop
mov
in
cmp
add
mov
dec
push
sub
shlb
inc
sahf
add
jmp
movsl
repnz
icebp
add
pop
or
les
lcall
fcmove
shl
addr16
add
xor
xchg
mov
stos
xchg
xor
mov
fs
pop
mov
and
push
push
mov
add
xchg
hlt
in
sarb
cld
int
mov
dec
xor
mov
sbbb
xor
xorb
fimuls
jl
adc
loopne
sti
add
loope
ret
divb
ret
add
test
sbb
xchg
dec
stc
mov
adc
dec
push
xor
cmp
cmp
mov
and
and
cli
push
inc
adcb
leave
ret
mov
pushf
adc
add
xchg
enter
push
bound
je
and
add
push
scas
dec
add
subl
call
adc
or
push
xorb
adc
loopne
xchg
add
das
nop
push
imul
inc
push
mov
mov
iret
std
icebp
jo
in
rolb
addr16
jne
lcall
dec
cmp
mov
sbb
jge
jnp
jge
into
mov
sbb
fadds
dec
cli
lret
rcr
jge
push
imul
pop
sub
inc
repnz
das
js
inc
arpl
loope
loop
dec
add
xor
test
sbb
and
aas
in
cmpsb
or
pop
push
scas
mov
subb
dec
rcrb
bound
pop
lods
andl
inc
movsb
stos
fwait
test
xor
mov
cmp
out
cli
mov
xor
pusha
clc
adc
adc
leave
fdivs
ret
movsl
add
icebp
out
adc
push
cld
adc
lds
sbb
mov
jno
les
lods
cmp
imul
fisttps
rorl
fcoms
adc
cmpl
add
fimull
inc
cld
xchg
xchg
mov
mov
or
cmp
outsb
add
pop
into
sahf
push
ret
lret
dec
mov
ja
movsb
fstpl
jl
ret
cmp
inc
in
add
pop
and
mov
ss
pavgb
aam
std
sarb
pushf
dec
lahf
or
mov
adc
subl
fdivrs
add
mov
add
std
pop
insb
sub
push
inc
stos
clc
mov
js
and
roll
jae
sbb
pop
in
mov
push
call
syscall
mov
ret
cmp
sti
loopne
insb
call
cmpsb
push
cld
sub
sbb
sbbb
sub
aam
sbb
jns
sbb
jne
pushf
rcrb
add
in
fidivs
insl
es
push
mov
inc
ret
dec
fnstcw
add
cmp
lock
cwtl
or
add
mov
fisubrl
arpl
cmp
xchg
cmp
inc
add
pop
mov
jae
inc
or
add
jle
xor
xchg
mov
push
mov
cmp
mov
stos
incb
sbb
add
out
add
push
and
nop
push
add
rcr
jle
nop
add
xorl
add
dec
jmp
add
jl
movsl
ret
repz
sbb
adc
add
sub
inc
adc
cltd
pop
les
push
inc
push
jbe
cmp
xor
xchg
loope
add
outsl
icebp
add
mov
and
out
add
cmp
sub
test
add
loop
mov
sbbb
and
sbb
inc
push
mov
mov
mov
and
pop
mov
sub
sbb
pop
add
faddl
lahf
xor
add
leave
loope
dec
hlt
cmpsb
mov
cmp
cmp
adc
cld
xor
mov
icebp
rolb
add
adc
add
xor
pusha
mov
into
pop
rolb
andb
cmpsb
add
out
in
sub
leave
fwait
inc
jno
add
cs
jl
repnz
xchg
dec
enter
add
add
or
jnp
or
or
lods
mov
or
add
and
adc
clc
mov
jmp
pusha
addl
inc
pop
je
and
add
pop
sbb
pushf
sbb
aaa
add
inc
mov
mov
arpl
dec
aaa
loopne
or
xor
dec
add
jp
add
mov
call
lcall
mov
mov
and
das
cs
shlb
sub
addr16
add
sub
ds
mov
movsb
or
add
test
rcl
push
add
iret
xchg
add
sbb
sub
les
nop
pusha
pandn
adc
icebp
push
jae
int
add
inc
dec
push
pop
jl
mov
in
xor
dec
lret
add
test
imulb
testl
pop
mov
out
jo
mov
dec
push
dec
sub
cmpsl
push
xor
pop
push
cwtl
addb
scas
nop
add
xor
sbb
movsb
in
imul
into
in
insl
add
inc
inc
lahf
in
stc
shll
jo
xchg
add
mov
sarl
stos
sub
mov
dec
jbe
cmp
mov
cmp
xor
add
jb
stc
mov
mov
movsb
or
inc
dec
shlb
mov
add
pop
cmp
repz
decb
add
js
jb
lahf
add
iret
adc
add
movsl
clc
mov
xor
jb
mov
pop
and
faddl
add
jle
rcll
add
dec
fidivrl
adc
push
pop
or
mov
sbb
inc
pop
cli
mov
or
add
add
sbbb
and
out
mov
pop
jl
jae
imul
xlat
add
xchg
and
dec
jno
cmpsb
cmp
outsb
add
mov
xor
aam
add
push
mov
jne
jl
stos
out
jns
mov
inc
mov
adc
fadd
out
dec
mov
push
push
xor
inc
adc
sbb
test
lock
cld
in
push
pop
bound
mov
aam
cwtl
jo
ret
sbb
dec
mov
ror
insb
push
rclb
and
jo
add
jbe
pop
sub
mov
add
das
out
xor
nop
mov
cmp
stc
inc
add
les
out
add
lods
in
rorl
pop
cmp
test
mov
cmp
gs
fdivs
mov
push
jno
sub
jb
inc
scas
fdiv
mov
es
orb
add
pop
divl
pop
and
mov
add
cwtl
adc
int3
sarl
mov
add
mov
xchg
sbb
pop
add
jecxz
outsl
aaa
adc
les
iret
mov
sbb
fisttps
int3
cmc
cwtl
je
add
pop
ds
mov
lahf
subb
aas
adc
ja
ja,pt
outsl
inc
push
stos
or
xchg
pop
add
test
adc
test
jbe
inc
jg
ds
cmp
ss
push
int3
cmpsl
aas
jg
insl
aaa
ds
mov
and
out
inc
mov
loopne
out
enter
xor
sub
pop
sub
test
add
add
icebp
mov
xor
in
lds
pop
add
leave
icebp
cli
add
dec
xchg
cld
and
int3
add
pop
lea
adc
xor
or
out
orb
cmc
add
push
cltd
mov
or
jbe
popf
rcr
into
add
dec
enter
add
lret
adc
jg
filds
inc
add
mov
xor
enter
mov
inc
push
movsb
sbb
cmp
pop
cltd
sub
mov
fs
jmp
cli
push
jne
cmp
inc
add
int
cmp
ds
dec
cltd
xor
jno
push
mov
mov
sbb
jne
hlt
fdivl
adc
sub
pop
pop
int3
test
outsl
push
xchg
cmp
xor
cs
pop
bound
add
ja
loopne
orl
xchg
adc
add
mov
mov
roll
push
add
sbb
fsubl
sub
inc
insb
rcrl
lcall
mov
or
jecxz
add
and
mov
fnstenv
adc
cmpb
std
sti
hlt
push
xor
shl
sbb
sbb
adc
cmpsl
lock
mov
push
mov
mov
cmp
push
push
testl
lods
mov
and
jae
push
sbbl
jbe
inc
add
jb
and
rolb
sti
stc
dec
jmp
lock
adc
xchg
and
shr
jae
add
adc
cld
cmpsl
cld
dec
add
xor
addl
int
xchg
mov
movsb
add
mov
adcl
add
jecxz
loop
leave
xor
sbb
xchg
es
add
add
push
push
sbb
mov
add
xor
int
add
jecxz
jmp
rorb
or
roll
add
ja
sub
cmp
add
shll
adc
xlat
add
dec
clc
aam
mov
call
pop
add
std
adc
insl
imul
push
dec
inc
add
je
push
mov
xchg
inc
pop
loop
jmp
xchg
aaa
push
sub
es
sarl
add
fdivr
or
dec
lds
add
cmp
lods
xchg
add
mov
call
dec
push
scas
add
mov
inc
call
aaa
popa
hlt
jo
jmp
add
mov
pop
test
adc
xlat
fsubrp
and
jmp
add
les
in
jg
add
mov
into
cmp
aaa
or
add
je
dec
lret
cli
sbb
mov
add
test
push
insb
scas
sti
fbstp
lcall
and
dec
jae
pop
xchg
pop
push
roll
mov
fs
sbb
and
sub
sbb
add
jno
xor
or
mov
mov
stos
add
aad
pop
cld
mov
movsl
adc
mov
xchg
dec
jmp
std
pusha
xchg
pusha
push
sbb
add
sub
xchg
int
nop
add
stos
push
aad
cs
aam
jns
cwtl
mov
cmp
pop
add
push
cmpsb
in
dec
stos
add
add
mov
add
mov
mov
sahf
jmp
repnz
cmp
hlt
aas
clc
std
jns
add
data16
xchg
popa
gs
fnstcw
insl
add
and
aam
jge
add
adc
in
aam
insl
data16
mov
cmp
push
fsubl
cmpb
adc
mov
aaa
lcall
pop
dec
daa
push
loopne
mov
mov
test
inc
add
pop
into
imul
filds
mov
mov
mov
std
jae
push
out
cld
hlt
add
sub
cmp
mov
add
fwait
cli
in
cmp
add
rolb
pop
lret
xchg
xor
int
or
add
add
ror
add
cs
sub
dec
inc
mov
inc
loopne
mov
mov
mov
xchg
pop
mov
test
popf
stos
fs
add
mov
jl
out
insl
movsb
insb
pop
lock
loop
add
jge
inc
add
cmpsb
mov
mov
fdivl
jge
add
cmp
jnp
and
sbb
pop
jbe
mov
cmp
and
and
add
jbe
add
nop
ja
iret
push
xchg
shrd
mov
jecxz
stc
jg
xor
jbe
add
and
cld
sahf
fmull
fwait
push
fiadds
andb
clc
inc
or
out
cltd
add
jecxz
test
hlt
jo
xor
xor
jbe
repnz
fs
or
enter
adc
push
pop
cmp
fcmovnb
jb
push
jle
in
inc
movl
mov
mov
insb
cmp
jns
push
hlt
and
pop
sti
lahf
adc
fsub
sbb
xchg
sub
xor
fstps
mov
clc
std
cwtl
add
lret
das
adc
je
jbe
mov
push
mov
out
jb
inc
inc
addb
shlb
cmp
shr
xor
or
mov
pop
xor
arpl
imull
cmp
jmp
ds
mov
adc
test
add
jecxz
shr
mov
sti
xchg
and
out
mov
pusha
shlb
mov
add
mov
nop
adcb
jae
push
es
adc
xorb
test
pop
ds
lret
sar
add
je
dec
ljmp
js
cwtl
push
mov
sbb
inc
jge
icebp
and
add
sbb
setg
dec
movsl
jg
add
scas
pop
ret
mov
jns
sahf
xchg
add
loopne
in
rorl
bound
adc
mov
lea
mov
mov
loopne
or
sbb
dec
jge
add
cltd
mov
push
dec
cmp
xchg
rcr
or
ljmp
or
les
mov
dec
add
imul
fildll
push
push
cmp
popl
sub
into
pop
idivb
add
xor
je
lcall
iret
mov
or
and
xor
lods
add
pop
lea
mov
jl
andl
movzbl
mov
xor
dec
cld
imul
in
add
mov
push
scas
mov
sub
jge
int3
lcall
xchg
sbb
daa
xor
or
movsb
and
leave
cld
mov
out
aad
icebp
mov
push
push
jb
push
jnp
xchg
add
lret
add
jbe
push
or
cwtl
clc
pop
into
cmp
cs
add
flds
mov
xchg
push
add
rorl
clc
loop
add
adc
arpl
mov
incb
dec
xchg
mov
sub
cwtl
pop
addb
push
pop
nop
movsl
mov
das
lock
mov
testb
js
icebp
cmpsb
or
add
stc
adc
std
push
add
jmp
dec
mull
or
xor
push
lea
test
rcr
add
in
or
shrl
and
pop
add
fwait
popf
jo
jp
dec
add
mov
adc
sub
lea
cmp
jmp
pop
movsl
icebp
ja
xor
push
das
mov
dec
mov
or
mov
nop
and
imulb
fwait
out
shrb
jl
jecxz
pop
mov
pop
call
mov
mov
das
add
stos
jo
loop
add
jb
or
cmc
add
jecxz
lahf
test
mov
xchg
jp
xor
pop
mov
jo
add
inc
pop
adc
nop
rorb
cwtl
mov
mov
fistpl
cmp
cmp
or
mov
lds
or
pop
je
orb
sub
add
cmpsl
or
cltd
dec
jne
push
int3
add
push
add
pop
xchg
es
fsubrl
push
popf
xchg
push
cltd
add
sarb
pop
xor
xlat
flds
sbb
cs
lea
xchg
push
outsl
pop
xor
addb
cs
inc
jle
pusha
adc
loope
mov
sbb
mov
mov
rolb
sbb
test
jle
cmp
xchg
xor
outsb
mov
incl
adc
jae
gs
xor
xchg
xor
lds
icebp
sub
add
cltd
insb
int
xor
lods
adc
or
mov
add
aam
sub
jp
inc
add
cmp
or
mov
or
mov
add
js
ret
jnp
push
jno
fwait
repnz
sbb
add
ja
lds
std
sti
pop
int3
pop
jo
lcall
push
cmp
xchg
les
adc
jo
cmp
inc
xor
stos
xor
sbb
mov
mov
mov
es
add
xchg
scas
test
add
push
adc
add
pop
std
xchg
hlt
bound
mov
mov
int3
xchg
add
out
lea
jl
push
stc
call
mov
push
rorl
inc
jg
xor
and
add
out
cs
sub
xor
mov
dec
mov
addb
jae
negl
mov
outsb
jnp
cmp
add
adc
push
cld
mov
jl
into
es
outsl
leave
mov
mov
lock
push
setb
and
and
cmp
mov
pushf
push
jo
add
insb
js
xchg
sbb
test
xor
dec
jnp
sbbb
popa
mov
cmpsb
and
sub
add
iret
inc
add
shl
sahf
sti
add
xor
mov
jg
fnstsw
test
add
and
lret
cwtl
shlb
pusha
add
push
mov
fwait
popa
std
sub
sub
jl
sub
out
add
xor
pop
add
push
lods
mov
and
ret
test
jae
add
lcall
jne
jg
and
int
add
dec
xor
or
xchg
pop
aaa
fdivr
adc
mov
xchg
enter
pop
and
outsb
shrb
and
push
testl
cmpsl
sbbb
shlb
and
in
mov
into
and
xchg
insb
jge
add
rcr
data16
or
aad
or
cmp
cmp
adc
fdivs
outsb
in
aad
imul
lret
cmpsb
sbb
push
out
scas
scas
mov
loope
lret
inc
in
add
inc
test
xchg
arpl
inc
ret
mov
mov
shlb
cmc
add
out
cltd
or
push
in
cs
pushf
imul
and
cmp
sbb
lds
jecxz
add
sbb
ljmp
push
xor
add
push
movsl
mov
loopne
aaa
popa
xchg
movb
and
add
xor
mov
cwtl
ss
mov
add
std
subb
jne
sub
add
mov
stos
aad
cmp
mov
xchg
xchg
std
stos
lock
dec
cwtl
pop
stc
mov
jl
xor
push
jb
add
mulb
xchg
orl
add
mov
nop
movsb
mov
add
aaa
jo
ret
lret
add
push
in
lock
or
sbb
add
add
and
je
mov
or
arpl
sub
mov
hlt
iret
add
shrb
outsb
add
inc
andl
shl
repz
adc
add
aaa
out
add
pop
sbb
push
cmc
out
push
adc
add
rolb
jno
nop
pop
add
jno
add
pop
and
fdivs
sbb
mov
adc
mov
add
aaa
add
add
daa
and
xchg
add
dec
mov
cmpsl
arpl
mov
xchg
pusha
dec
pop
add
cltd
jbe
sub
loope
ret
orb
dec
lret
jmp
sti
lahf
fwait
shr
mov
rclb
js
call
popf
ja
sbbl
jl
inc
movsl
add
hlt
aas
inc
dec
mov
gs
jmp
dec
adc
jne
mov
in
or
in
or
sti
ret
jo
xchg
out
inc
rolb
mov
aas
pop
add
mov
loopne
pusha
add
dec
dec
xchg
push
inc
and
push
mov
scas
mov
mov
mov
inc
jo
and
mov
pop
or
roll
mov
xor
sbb
mov
pusha
popa
lods
clc
push
and
insb
dec
ljmp
mov
jae
lods
test
mov
add
ds
shl
lock
add
shl
cmp
mov
inc
sbb
inc
aad
jmp
mov
popa
mov
fcomi
push
pop
or
punpckldq
sub
mov
popf
jmp
sahf
push
rorl
push
xor
inc
pop
xchg
or
push
lret
gs
and
push
pop
aas
stc
ret
sar
faddl
add
mov
push
rolb
aam
fildll
sarb
dec
jecxz
add
xchg
sbb
shlb
add
repnz
pop
sbb
mov
xchg
pushf
aas
mov
add
addr16
inc
bound
daa
in
inc
call
hlt
imul
mov
add
xor
jno
and
cmove
popa
pop
add
pop
iret
out
cmp
mov
and
adc
sbb
or
pop
mov
add
jle
jg
inc
outsl
dec
add
and
and
add
shrl
pop
movsl
or
fldt
int3
add
add
test
and
arpl
int3
movsb
add
lret
dec
xchg
and
ja
xlat
add
cmpsb
cmpl
mov
mov
adc
mov
dec
or
repz
shl
movnti
adc
js
shll
jae
loopne
dec
add
stos
repz
popa
adc
cwtl
insl
xor
arpl
xchg
lahf
add
cli
loop
push
xchg
roll
cmp
xor
xchg
add
subl
cmp
add
sahf
mov
sub
lods
and
push
cmp
adc
in
rcl
mov
testb
pop
addl
sub
cmc
mov
scas
out
pusha
and
sbb
sub
pop
fidivrs
je
adc
nop
jmp
fmul
dec
cmpsl
sbb
outsb
push
pushf
lock
andl
xor
jg
cmp
inc
or
int3
enter
xor
push
sbb
mov
jae
ljmp
sbb
xor
or
inc
push
into
pop
add
xchg
icebp
stc
jmp
or
push
and
sbb
addb
idiv
int3
xlat
hlt
adc
mov
repnz
jb
push
loopne
adc
xchg
out
ret
mov
pusha
add
in
mov
cli
jno
pop
popf
das
es
push
mov
mov
lds
sub
pop
testl
cli
push
clc
pop
cmp
out
xchg
cmp
dec
test
add
shlb
jecxz
fcomps
rolb
js
orl
imul
sbb
daa
mov
cmp
lret
add
dec
sub
mov
cmp
jns
shrl
jl
push
push
dec
pushf
and
sarb
hlt
add
add
sbb
cwtl
imul
add
push
pushl
cmp
add
in
stos
push
jo
lock
pmullw
sbb
push
lock
das
mov
mov
fs
sahf
lea
add
adc
add
in
sub
mov
clc
dec
dec
push
add
pop
hlt
push
jbe
push
mov
shlb
add
into
mov
mov
leave
shrl
test
and
mov
cmp
bound
sub
leave
and
xchg
pop
jp
das
orb
jb
add
push
movsb
sahf
sub
cmp
or
xor
xor
lahf
out
inc
iret
fidivrl
inc
cwtl
add
test
andl
lock
pop
jecxz
cltd
pop
sub
imul
stos
push
cltd
push
lahf
add
movsl
mov
cmovl
push
cmp
xchg
ficoml
sub
scas
loopne
sahf
pop
lock
push
ljmp
aad
jmp
stos
mov
lds
pusha
jno
add
addb
mov
out
rorl
inc
loop
fidivrs
daa
or
inc
pop
lods
push
cwtl
push
cs
or
push
jae
outsb
cmp
pop
inc
jbe
insl
sub
outsl
dec
jo
adc
je
xchg
bound
std
ja
add
mov
xchg
insl
pop
inc
xor
popl
ljmp
cmp
js
inc
cld
jecxz
lds
icebp
and
xchg
pcmpgtw
push
nop
in
sti
lds
ljmp
cli
js
and
movsb
lock
add
sub
mov
xchg
sbb
push
inc
sub
dec
hlt
gs
add
sbb
adc
or
adc
rcll
mov
dec
xor
mov
adc
fdivrs
incb
and
into
add
lds
sbb
push
notb
mov
add
outsb
pop
dec
jb
add
cli
rclb
test
sbb
xor
jbe
cmc
and
push
jle
inc
and
outsb
or
pop
decl
add
add
mov
leave
xor
adcl
aam
sub
xlat
test
popa
push
mov
add
call
sbb
push
or
inc
mov
nop
out
sti
jecxz
lds
cmp
mov
jmp
pop
inc
inc
loop
add
loopne
or
pusha
or
shrl
test
fisubl
dec
std
hlt
andl
addb
jmp
out
in
cld
pop
add
daa
add
xor
in
xor
ja
clc
dec
add
out
and
leave
negb
es
int3
inc
inc
fs
cmp
mov
adc
cltd
pop
mov
jnp
push
add
jo
in
cld
add
movsb
and
sub
lds
mov
stc
ljmp
hlt
jmp
inc
pop
dec
mov
pop
xor
fbld
fs
fadds
repz
shlb
insb
mov
fwait
xor
mov
or
adc
lods
mov
mov
mov
sbb
add
inc
mov
and
fucomip
and
std
pop
push
aas
int
icebp
and
lods
bound
jo
aaa
jo
inc
aam
mov
stos
addb
mov
inc
cmp
xchg
push
xchg
cmp
mov
cmpsb
mov
dec
mov
mov
nop
insb
arpl
add
sub
frstor
aas
or
push
or
movsb
std
leave
mov
rcr
pop
or
sbb
adc
jb
mov
ljmp
dec
xchg
xor
mov
subl
mov
add
repnz
aaa
push
out
jmp
mov
jne
lret
lods
pop
add
sti
adc
inc
fmull
lods
mov
sub
xor
mov
push
cmp
xchg
mov
add
jle
push
jo
insl
add
cld
pop
test
shlb
lds
jb
popa
pop
mov
dec
in
and
sub
add
fistps
loop
add
loopne
cmpsl
add
jp
lods
test
dec
add
int
xchg
popf
mov
test
ret
cmp
pop
mov
jmp
adc
ficoml
call
pop
dec
or
add
add
andb
lods
push
enter
lahf
add
aas
leave
sub
ret
add
jge
or
cmc
add
or
mov
lea
daa
mov
ljmp
arpl
pop
ret
mov
shr
xor
add
inc
enter
jnp
add
mov
pop
out
jno
xor
mov
fldcw
cmp
cmp
rorb
daa
mov
add
fs
add
adc
or
into
xor
je
add
test
pop
lahf
shrb
add
sbbb
sbb
dec
lret
cwtl
pop
sub
test
push
pop
in
add
or
aas
dec
mov
dec
daa
pop
jg
fistpl
jmp
sub
dec
int
jmp
add
jl
movl
add
add
cmc
push
lock
or
mov
push
or
inc
test
xor
pop
mov
or
repz
add
lret
dec
adc
push
inc
iret
mov
inc
jbe
enter
mov
mov
push
test
stos
cmp
rcll
icebp
lock
add
aam
aas
fs
xor
jl
add
push
mov
mov
xchg
insb
mov
and
inc
pop
fsubr
cmpsl
cmpb
xor
or
adc
jns
inc
jae
rclb
xor
ja
add
mov
orb
dec
jmp
scas
add
bswap
cmp
test
sbb
sbb
repnz
adc
loopne
cld
xchg
add
es
xchg
in
xlat
sub
mov
inc
adc
gs
stos
test
jnp
arpl
rclb
or
sbb
adc
pushf
jo
daa
lock
xchg
imul
and
bound
jnp
orb
jle
add
or
rcrb
lds
pop
add
in
or
in
lret
loope
mov
cmp
mov
or
xorb
addb
cli
mov
aas
lahf
pop
push
or
pusha
pop
mov
jmp
pop
jmp
mov
jne
push
or
shrb
cmp
outsb
add
pop
sbb
pop
xchg
and
xlat
icebp
loopne
xor
cmp
scas
loop
sub
adc
lds
add
stos
es
and
repz
into
add
mov
dec
jb
push
fldenv
sub
adc
mov
or
add
int3
sbb
fdivrs
and
cli
nop
add
mov
xchg
add
cmp
pop
dec
jmp
add
dec
and
push
sbb
inc
shlb
xchg
mov
cltd
add
mov
addr16
pop
ficomps
rolb
dec
pop
pop
shrb
lods
enter
stos
mov
xchg
cmp
shll
loop
ljmp
jle
cmp
enter
mov
hlt
dec
loopne
mov
ret
nop
and
out
sarb
and
mov
aaa
jmp
subb
rcll
addb
pusha
test
fdivl
hlt
test
mov
mov
jle
lock
cmc
dec
ja
add
rcr
lods
xchg
jo
add
inc
leave
out
mov
cld
js
sub
push
add
and
xor
or
pusha
pop
insb
fstl
es
es
or
add
cmp
xor
lcall
jle
add
mov
mov
and
adc
in
dec
sub
pop
repnz
sbb
mov
adc
lcall
jg
inc
inc
sbb
icebp
xchg
pop
add
inc
or
imulb
sbb
mov
ss
and
sub
jl
mull
mov
inc
cwtl
add
mov
test
sbb
das
mov
stos
push
inc
pop
sub
std
add
sub
dec
jne
out
add
rolb
ret
xor
cmpb
dec
mov
les
jne
rcl
ret
jmp
jmp
repz
pop
pop
push
into
mov
lock
arpl
xlat
mov
sub
stos
add
cli
out
mov
iret
jbe
je
lea
loopne
clc
push
mov
dec
sbb
cmp
sbb
pop
jg
out
pop
mov
aam
cmp
rcrb
mov
lahf
les
add
insb
cmp
sub
cs
push
nop
add
mov
jo
xchg
loopne
inc
push
cld
add
push
and
lods
rorb
xlat
add
dec
xchg
js
loopne,pt
or
pop
std
aad
in
mov
jb
orb
lahf
mov
ret
push
test
mov
add
gs
lock
stc
add
xchg
inc
pop
add
sahf
scas
xor
push
or
mov
neg
idiv
pop
pop
mov
xor
shlb
xchg
or
loopne
mov
cmpsl
push
inc
loopne
cmp
sbb
call
adc
push
nop
out
ds
fsubrs
into
call
add
cmp
xchg
rorl
and
nop
cmp
inc
into
pop
push
add
stc
jle
mov
lret
add
jg
mov
or
pop
out
inc
or
inc
inc
add
or
call
add
fidivrl
mov
pmuludq
shll
inc
insb
cmc
push
pop
mov
outsl
data16
sahf
orl
push
cmp
pushf
pop
jnp
aam
jns
adc
xchg
add
popl
push
loope
dec
call
pop
movsl
pop
add
ret
push
cmp
jmp
adc
add
aad
jb
cmp
sub
xchg
xchg
testl
shlb
fildl
test
call
dec
cmp
sub
add
inc
push
push
cwtl
test
lea
add
adc
and
jo
sub
mov
add
pop
lods
pop
mov
lcall
lds
pushf
add
daa
xchg
xchg
add
dec
inc
ret
jo
pop
mov
loopne
imul
fstpt
repz
bound
cmpsl
add
and
clc
sbb
xchg
test
fcmovbe
lret
or
mov
ss
mov
stc
inc
popw
jns
xchg
inc
insl
cld
push
adc
hlt
out
mov
cmpsb
call
leave
mov
and
xor
notb
inc
iret
mov
xchg
xchg
cmp
push
and
jns
add
pop
test
lahf
and
call
push
cmp
pushf
add
loope
mov
lret
xchg
aam
cmpsl
cmp
sti
xor
stc
add
or
mov
jno
aad
add
push
xchg
mov
cmpsl
xor
bound
pushf
or
fldl
cmc
mov
and
arpl
insl
leave
sbb
or
mov
add
or
mov
lcall
fisttpl
ret
pop
in
subb
push
out
xor
push
fsubrs
dec
dec
not
add
aaa
lea
or
jae
add
bound
insb
sub
fwait
repz
add
jmp
xor
push
les
mov
xchg
clc
push
or
jg
rolb
flds
daa
fsub
push
push
sub
xchg
gs
xchg
jae
or
cltd
mov
mov
or
sub
mov
fdivrs
push
inc
les
mov
xchg
adc
movsb
jno
and
mov
je
movsl
inc
shll
cmp
mov
loope
sbb
push
call
pop
sbb
aad
out
and
in
add
inc
in
or
add
mov
xor
add
xchg
jo
cmp
daa
cmpsl
cmp
cmp
scas
dec
mov
iret
add
sub
mov
loopne
lret
and
data16
in
dec
cld
and
mov
push
subl
sbb
add
in
mov
dec
lret
dec
dec
mov
sbb
or
mov
add
ds
pop
xor
push
test
rsqrtps
addr16
add
es
or
inc
jns
pop
or
fldcw
dec
cmpl
sbb
push
jo
mov
jg
int3
mov
movsl
jbe
cmp
add
ror
lods
imul
call
movsb
test
leave
pop
out
and
scas
fcomi
lock
mov
movb
push
add
pmaxub
lahf
and
aas
cli
jo
or
addr16
rolb
mov
or
or
fmuls
add
mov
fwait
pop
stos
cmpsl
fcmovnbe
out
js
rclb
mov
sbb
jo
test
add
inc
dec
mov
pusha
dec
dec
fdiv
sub
mov
jae
add
movsl
frstor
enter
sub
mov
fsubl
sub
sahf
pop
mov
and
jno
pop
push
fs
dec
inc
pop
pop
and
rcrb
mov
push
enter
inc
mov
add
fdivrs
mov
das
mov
shl
icebp
cltd
add
mov
mov
push
or
fisttpl
pop
xchg
mov
sub
add
inc
cmp
xor
fstl
sahf
movsb
dec
push
mov
or
shlb
pop
add
lods
jg
mov
inc
call
lret
repnz
fdivrl
xchg
cmp
jne
es
xor
loopne
movsb
popf
faddl
das
mov
mov
push
pop
jo
mov
mov
sub
xor
add
fists
in
pop
shll
add
push
addr16
shrl
push
sti
xor
lret
into
xlat
loop
fimuls
ja
rclb
or
dec
dec
add
sahf
and
add
rol
mov
jo
inc
lods
add
shl
negb
icebp
add
pusha
mov
cmc
jo
xor
add
jp
aas
insb
mov
pop
push
andb
xchg
pop
in
popa
fmul
jo
pop
out
cmpsl
js
stc
jno
shll
loopne
inc
add
mov
andb
outsb
in
pop
xchg
sbb
imul
mov
icebp
mov
out
or
lcall
push
sub
mov
cmpsb
int
lds
mov
mov
pop
pop
push
jo
dec
clc
in
add
xchg
sahf
fisttpll
add
dec
and
aas
inc
xorl
sbb
fwait
xor
test
xor
mov
xor
inc
push
or
push
ja
shl
lock
add
das
mov
push
pop
mov
adc
add
pop
push
xchg
mov
xchg
gs
sub
test
xor
push
repz
push
aas
and
lret
xchg
mov
in
aam
push
cmp
lock
xchg
sbb
imul
add
mov
inc
loopne
adc
daa
inc
add
loope
add
xor
mov
push
bound
in
mov
lcall
push
cmp
loop
vpackssdw
inc
or
and
mov
pushf
and
adc
imul
bound
jo
pushl
popl
sarb
jl
dec
clc
mov
cmp
std
pop
xchg
cmp
imul
inc
mov
scas
jb
xchg
mov
movsb
inc
jae
adc
int
add
ret
rolb
jb
sbb
in
push
jno
mov
addb
add
sub
call
pushf
enter
and
ret
add
mov
or
mov
test
inc
pop
rcrb
jmp
andl
sub
cmpsl
mov
hlt
test
xchg
mov
push
and
push
ds
js
insl
pop
outsl
mov
or
call
mov
aaa
icebp
sub
loop
add
inc
or
xor
gs
dec
fs
into
pop
push
cmpsl
jnp
mov
dec
cmp
mov
dec
lock
inc
repnz
jmp
inc
cmpsl
xor
dec
clc
or
xchg
fcompl
sbb
or
mov
ret
add
sbb
or
jb
mov
add
es
cmp
je
jl
and
cmp
cwtl
or
loope
repnz
ds
inc
loopne
std
adc
add
flds
test
test
push
jecxz
daa
mov
mov
xor
ss
sbb
xor
test
pop
add
sbb
and
mov
inc
aas
int
add
js
int3
test
mov
addb
inc
mov
test
fisttpll
pop
orl
iret
daa
add
sub
call
jo
cmp
mov
xchg
cmp
je
incl
nop
add
push
inc
and
sets
mov
inc
sbb
sbb
and
and
add
scas
jnp
sbb
inc
push
sbbl
jecxz
push
mov
mov
insl
inc
sub
mov
jb
rclb
inc
mov
mov
push
push
add
inc
pusha
xchg
aad
add
insl
lock
mov
icebp
dec
push
adc
xchg
sbb
add
and
add
ret
and
or
or
jns
xchg
movsl
inc
pop
add
mov
pushf
and
push
test
push
pushl
add
adc
add
xchg
loopne
xchg
popa
pop
aam
mov
xor
mov
sarl
pop
aaa
sbb
imul
pusha
xchg
rclb
cmp
aam
mov
dec
push
inc
add
cmc
shrb
lea
mov
ret
test
mov
inc
add
subb
adc
inc
sbb
sub
lods
mov
xor
add
mov
ja,pn
and
int
faddl
repz
add
mov
jecxz
sbb
in
sub
clc
mov
adc
pushf
aad
cmc
adc
mov
xor
cmp
mov
dec
gs
mov
hlt
jno
js
xor
cli
fs
sbb
mov
stos
or
cwtl
mov
roll
imul
outsb
adc
mov
mov
test
pop
xor
decl
mov
cmpsb
clc
adc
adc
ret
mov
cwtl
add
and
int
data16
inc
sub
lods
adc
pop
mov
and
inc
cmp
popf
ja
int
or
addl
nop
insb
jnp
xchg
pushf
and
subb
add
xor
xchg
jl
jp
mov
stos
jns
cmp
add
arpl
add
pop
dec
jmp
test
sub
fmull
repnz
jbe
or
mov
lods
movsb
jae
add
add
push
sub
out
adc
shrb
pop
pop
mov
rol
inc
aad
jecxz
popa
sub
clc
mov
daa
fs
rcl
adc
pop
sbb
iret
adc
sub
sbb
mov
add
and
xchg
std
hlt
mov
xchg
enter
mov
xorb
mov
add
jge
pop
jp
lahf
cmpsl
cmp
or
hlt
addr16
nop
jns
sbb
add
mov
loop
in
sbb
les
pushf
mov
adc
jno
mov
xor
scas
lock
inc
adc
add
stos
mov
dec
xor
leave
lock
mov
sub
test
addb
mov
mov
stc
or
add
dec
call
mov
cmp
xchg
jo
and
movsb
data16
mov
mov
inc
sbb
jo
repz
sbb
pushf
mov
xlat
sub
dec
popf
stc
call
or
loope
clc
adc
cmp
xchg
fadds
ret
inc
jbe
push
insb
mov
jb
fbld
push
xchg
bswap
rclb
pop
pusha
mov
xchg
cltd
mov
es
shll
mov
fsubs
dec
mov
xchg
je
push
stos
dec
push
sbb
mov
and
adc
sbb
out
add
xor
push
aaa
pop
mov
imul
add
jp
int
push
jg
jo
push
pop
stos
add
gs
xchg
js
imul
call
lods
add
xchg
dec
and
mov
pop
mov
fucom
stos
fwait
cmp
pop
pop
ret
dec
adc
loopne
int
push
add
fmull
and
and
add
jbe
es
lock
push
ja
mov
cmp
xor
lret
or
movsb
add
mov
lods
sbb
sbb
jbe
mov
dec
or
push
xchg
add
repz
pop
add
xchg
testl
aam
xchg
push
push
shll
enter
or
add
push
dec
push
mov
repz
mov
fsub
adc
push
and
mov
and
outsl
push
popf
cs
xchg
xchg
shlb
and
imul
lock
loop
test
cwtl
and
mov
jo
push
jae
enter
andb
dec
add
fwait
push
inc
into
rcrl
clc
mov
add
pushf
add
pushf
mov
fwait
xor
sahf
mov
or
mov
dec
or
cltd
je
sbb
add
call
inc
jnp
pusha
mov
xor
inc
or
nop
cmp
pop
push
push
mov
faddl
js
aaa
int3
jo
pop
lret
mov
in
adc
dec
pop
add
call
lcall
ret
pop
or
push
adc
xchg
leave
das
imul
arpl
mov
ja
ds
cmp
adc
inc
insb
ficomps
imul
inc
cmc
push
push
pop
int3
int3
dec
cmp
jo
repnz
aam
ds
out
cmove
add
xchg
inc
adc
jno
add
mov
add
popa
and
jp
sbb
mov
gs
add
test
and
test
pop
cwtl
add
pop
push
cld
mov
adc
xchg
and
inc
push
sub
es
and
mov
pop
jle
sarb
and
and
les
add
jge
jo
test
inc
push
push
and
enter
add
adc
lret
inc
cmp
pop
or
and
fs
fisttpl
xor
mov
sahf
nop
or
pop
inc
adc
sub
addb
push
mov
pop
sbb
sub
sti
lods
fldt
mov
mov
push
in
and
add
lret
fdivrl
jo
subl
sub
cmpsl
add
fildl
lds
or
add
aad
orb
jl
comiss
or
inc
cltd
mov
nop
adc
popf
dec
test
je
loopne
adc
or
mov
pop
rolb
mov
xor
and
sub
pushf
and
mov
or
push
mulb
push
pop
test
or
xor
je
call
cld
int3
adc
lds
mov
sbb
call
mov
addr16
cld
inc
lret
int3
mov
push
add
aam
cmp
lods
lcall
movsl
fmulp
cmp
inc
test
add
and
lahf
cmp
or
aam
ret
mov
adc
nop
cld
push
pushf
pop
sub
movb
inc
sbbl
or
ss
add
lea
mov
sbb
jo
jb
add
dec
rcrb
inc
push
fwait
sub
outsb
and
fsubr
in
adc
test
clc
dec
xchg
arpl
mov
lret
xchg
and
mov
xor
insb
and
mov
clc
inc
fstpl
jmp
loope
js
sub
mov
add
push
ds
and
mov
clc
daa
mov
mov
mov
mov
push
xchg
aam
test
pop
out
and
pop
mov
push
add
xchg
mov
fistl
xchg
and
gs
es
cmp
inc
xor
in
add
adc
daa
pop
push
mov
pop
mov
icebp
mov
mov
aas
and
mov
jb
stos
testb
mov
mov
mov
out
pusha
or
add
test
out
jp
jo
xlat
fs
fisttpl
cmp
push
adc
mov
jp
add
xor
movsb
pop
jmp
and
xchg
inc
adc
jbe
pop
adc
adc
pusha
addl
add
lods
das
int
mov
fwait
cmp
xor
mov
divl
test
add
or
inc
add
fcomps
mov
xor
movsb
xor
in
mov
test
scas
push
jmp
lret
adc
mov
out
pop
adc
adc
push
shr
pop
and
or
mov
and
imull
dec
je
push
pusha
add
inc
rcll
adc
pop
mov
fadds
add
sub
xchg
movsb
xorb
es
push
ljmp
ljmp
cmpb
dec
adcl
mov
add
xchg
mov
loopne
push
repnz
add
sub
sbb
cld
testl
subl
dec
and
mov
rorl
push
add
mov
movsl
out
das
fmul
mov
outsb
and
in
push
sbb
lods
xchg
aas
xchg
pop
push
je
xchg
shlb
je
dec
mov
aam
or
lock
xchg
push
lret
cmp
mov
roll
fiadds
mov
jp
or
popf
xor
cwtl
xchg
mov
push
addb
ret
add
mov
stos
enter
jns
or
mov
shlb
or
mov
add
lods
cmpsl
mov
lret
cwtl
arpl
and
or
test
enter
inc
push
addb
mov
sub
outsb
adc
in
les
add
or
mov
jb
dec
adc
movsb
or
adc
xchg
dec
mov
loop
pop
or
jo
mov
nop
add
test
aas
add
ror
mov
in
and
outsl
push
jmp
pop
hlt
jno
mov
mov
mov
lock
sbb
shlb
xor
cmpsl
inc
xchg
pop
mov
add
sbb
mov
rcll
in
adc
hlt
lahf
cwtl
add
dec
xchg
nop
fistl
dec
js
xor
adc
add
mov
arpl
rclb
or
xchg
xchg
and
mov
rolb
xchg
sub
push
cmp
mov
nop
pop
dec
pusha
xchg
hlt
sahf
les
xor
add
insl
push
mov
inc
mov
or
add
cmp
fs
cs
xor
sbb
or
push
and
xor
adc
or
mov
and
fcoml
mov
xor
sbb
mov
mov
or
or
xchg
push
inc
enter
rcrl
ss
divl
repnz
fadds
pop
or
aam
iret
sbbb
std
mov
hlt
jecxz
outsb
mov
xor
xlat
jo
adc
sub
mov
and
test
add
mov
mov
cmp
inc
pusha
sub
xchg
hlt
sbb
fisubrl
mov
je
fisubrs
add
rcll
lcall
fidivs
add
mov
cmc
das
inc
and
pop
shlb
xchg
sbb
test
or
cwtl
loop
movsb
mov
dec
cmp
mov
and
cmp
or
sbb
bound
loopne
int
mov
clc
cmp
sub
and
insl
cmp
mov
lock
xchg
test
repnz
inc
rolb
xor
xchg
mov
mov
in
cmc
xor
iret
xor
aad
push
add
pop
das
out
add
or
mov
lds
popf
adcb
jmp
mov
add
and
sbb
sbb
jecxz
or
or
inc
in
jmp
imul
pop
out
mov
sbb
insl
out
add
xchg
xchg
adc
xchg
jl
push
lock
push
add
jno
clc
xchg
mov
fcoml
in
ret
mov
cmp
pop
and
or
pusha
lea
ja
movl
sbb
jg
push
sub
cmp
shlb
xor
jae
push
das
jno
mov
dec
fadd
add
shll
int3
rcl
dec
adc
mov
add
sub
orb
add
shlb
je
cmp
mov
cmp
jo
mov
cmp
mov
and
mov
lahf
jns
sbbb
in
mov
rorl
or
add
xchg
jb
jbe
std
xor
dec
test
cmp
arpl
dec
gs
xor
push
cmp
movsb
enter
shrb
outsb
or
dec
push
cmp
sub
push
je
push
push
sbb
adc
rolb
stos
jl
fistps
mov
xor
and
lock
and
cmp
and
movsl
fs
push
add
mov
adc
jmp
pop
or
in
or
aas
mov
xchg
dec
adc
pop
pushf
inc
xchg
insb
inc
add
cmpsb
dec
mov
ds
pusha
inc
jb
add
divl
sahf
push
jl
popa
inc
pop
mov
adc
pop
add
jp
adc
mov
add
mov
xchg
jne
sub
nop
dec
rol
cmpb
adc
add
in
add
add
or
jno
mov
leave
in
aas
sbb
pop
fsts
rolb
add
movsl
lret
ss
loop
cwtl
clc
popf
cwtl
add
xchg
mov
roll
mov
push
or
mov
gs
adc
xchg
das
mov
push
inc
sub
fnstenv
adc
jbe
adc
push
cmp
popf
xor
cmp
pop
fs
mov
push
mov
int
cmp
subl
jne
xorb
leave
je
jo
jb
or
cs
popl
fdivr
pop
popa
por
and
jno
add
push
dec
mov
xor
nop
pop
mov
cltd
pop
outsl
lods
dec
lock
imul
repnz
fbld
stc
dec
orl
inc
insl
dec
movups
popf
addl
int3
pandn
fwait
mov
mov
stos
inc
inc
dec
out
movsl
daa
shrb
mov
add
cmp
inc
or
cmp
sbb
add
outsb
insl
pop
push
mov
aam
leave
xor
and
notb
mov
inc
add
xor
xchg
movb
push
popa
and
add
pop
add
sbb
arpl
sub
push
mov
xchg
fstpt
and
jge
test
loopne
int3
test
and
add
fwait
into
cli
mov
cmp
jo
add
push
cwtl
outsb
jnp
add
jns
test
inc
push
mov
outsl
xchg
cltd
pusha
scas
mov
dec
cmc
cmpb
shlb
or
pop
mov
shlb
add
fmull
mov
mov
push
xchg
xor
mov
push
push
mov
movsl
addr16
inc
jecxz
dec
xchg
sub
int3
iret
les
negb
fwait
pushf
imul
cli
adc
xlat
add
bound
popa
mov
mov
mov
mov
sub
xchg
xlat
lahf
mov
add
fildll
add
and
sub
cmp
sbb
and
adc
ds
test
loope
aas
sub
stos
js
sbb
daa
in
ja
or
aam
add
and
pusha
xchg
mov
xor
cmp
pop
test
popa
aam
xchg
or
iret
and
cmp
add
data16
out
pop
jp
jno
cmp
xchg
dec
sub
mov
popa
dec
cmpsb
push
and
add
loopne
test
in
xchg
in
mov
sub
dec
add
dec
inc
sbb
lcall
mov
sbb
mov
and
and
cmpsb
or
xchg
adc
xchg
pusha
mov
mov
dec
jge
jl
lret
clc
xchg
xor
adc
or
or
or
dec
pop
fistl
in
dec
push
add
mov
xor
xchg
jecxz
xchg
mov
push
mov
mov
pop
mov
jns
cmp
xlat
jnp
pop
dec
xchg
aam
pop
fisttpll
std
or
xchg
nop
sbb
repnz
mov
cld
add
les
add
shl
mov
sub
mov
adc
inc
adc
jnp
icebp
or
popa
nop
add
ret
add
pop
imull
jae
sahf
movsl
inc
add
hlt
loop
inc
push
clc
jmp
push
add
jb
gs
pusha
bound
in
sbb
sbb
enter
mov
or
push
and
sarb
jbe
xor
test
ret
adc
mov
mov
sub
ja
addb
cs
outsl
loopne
hlt
add
or
jno
sbb
fcom
jbe
lods
shrb
inc
clc
xchg
add
and
inc
or
jno
insl
cmp
push
data16
mov
or
pop
cmpsb
mov
and
add
stos
push
or
mov
add
mov
stc
sarb
mov
cld
in
mov
adc
and
add
gs
sub
ds
sub
mov
xlat
repnz
and
xchg
mov
dec
xorb
dec
xadd
out
mov
pushf
test
lock
push
cltd
and
lock
add
aad
lods
in
sbb
lahf
repnz
add
std
xchg
mov
cltd
mov
xor
pushf
and
inc
hlt
or
push
dec
int3
inc
mov
mov
or
mov
dec
out
rorl
add
mov
or
mov
test
xor
mov
or
pop
mov
adc
add
les
sahf
add
movsl
imul
mov
sbb
or
lock
xchg
mov
out
dec
lahf
hlt
fcoms
gs
ret
sub
sub
cld
ja
shll
push
dec
popf
loopne
mov
aam
push
xchg
jns
insb
pop
repnz
popf
outsl
and
add
ret
cld
xor
call
mov
dec
cmp
add
leave
mov
in
dec
lahf
mov
jp
pop
sbb
pop
test
lods
sub
cltd
in
sub
jnp
xor
pop
aam
fsubrl
pop
pusha
lret
sub
fsts
mov
adc
push
imul
mov
out
dec
daa
mov
stos
xor
dec
incb
and
pusha
lret
push
add
hlt
mov
mov
out
movsb
je
mov
xorl
shlb
cmp
arpl
xor
sub
outsl
repz
adc
fdiv
das
mov
lret
inc
test
pop
push
mov
fdivl
mov
add
push
jbe
sbb
rorl
loop
icebp
add
mov
adc
icebp
fldenv
ret
jb
adc
loopne
mov
gs
in
or
add
dec
pop
cmp
dec
lds
cmp
data16
mov
lahf
mov
adc
rcll
je
mov
add
popf
mov
dec
les
push
movsb
sub
lock
daa
cltd
inc
xor
push
cmp
dec
pop
mov
repnz
out
mov
inc
popa
mov
cmc
in
xor
jno
in
xor
jl
mov
cmp
add
mov
jae
pop
sub
jo
push
insb
test
pop
or
pushf
jo
add
movsl
aad
andb
mov
daa
imul
fbstp
cmpsl
aam
inc
jns
popa
sub
addr16
cli
inc
cwtl
push
add
in
ja
call
cs
mov
pusha
dec
xchg
add
movsl
outsb
fdivrs
inc
inc
ja
les
jo
roll
inc
sbb
lcall
call
pop
add
insb
sbb
adc
loope
jae
pop
js
dec
xchg
sub
inc
add
jb
cs
ljmp
push
imul
cwtl
xchg
fistl
inc
out
and
pop
sub
call
inc
mov
lahf
mov
clc
xchg
js
adc
iret
dec
jb
pop
adc
jno
push
imul
setns
out
push
add
test
bound
xor
shll
js
bnd
pop
lock
cmp
add
mov
inc
pop
out
sti
flds
outsb
shrl
iret
add
inc
mov
sbb
jne
clc
xchg
cmpl
nop
aas
inc
mov
pop
add
xchg
pop
cwtl
loop
mov
inc
mov
push
mov
add
mov
orb
jle
mov
mov
das
ds
add
xor
fistl
mov
push
int3
push
movsb
jnp
cmp
aas
xchg
jno
inc
mov
pushl
pop
sbb
xchg
flds
test
xor
fs
dec
add
xor
pop
mov
call
dec
add
push
add
in
sahf
push
sbb
sub
ljmp
sbb
mov
sbb
gs
jno
and
adc
adc
pop
adc
dec
js
push
test
les
lret
adc
es
jb
scas
nop
test
jnp
pop
int
jae
add
orb
add
adc
push
pusha
popa
andl
add
adc
push
dec
cli
mov
or
jg
repz
gs
lods
adc
mov
pop
mov
lock
push
rolb
lods
imul
sarb
out
push
cwtl
push
ret
dec
aam
adc
and
pusha
divl
cmp
jl
cld
push
add
incb
push
out
inc
add
mov
push
xor
pop
mov
cmp
das
sbb
leave
push
pop
inc
or
mov
add
je
sbb
push
rolb
cmp
pusha
xchg
add
pop
jne
enter
xor
in
jp
adc
pusha
jns
insb
sub
push
add
and
or
mov
add
pop
nop
dec
inc
or
add
mov
mov
xchg
addb
inc
push
add
dec
mov
test
insb
push
test
dec
and
int3
pop
mov
cmp
andl
sarb
and
and
sbb
popf
add
xor
mov
je
pop
adc
jnp
rorl
addr16
gs
sub
cmpl
pop
xchg
sub
pop
add
jecxz
push
in
outsb
leave
pop
repz
push
pop
pusha
out
xchg
and
add
sub
add
fists
add
add
repnz
add
adc
mov
faddl
lock
add
mov
daa
pop
sbb
imul
or
lods
mov
ds
aam
or
arpl
je
les
push
shll
out
inc
loopne
aam
add
inc
lock
insl
test
lret
js
inc
inc
test
pop
loope
pop
mov
inc
jno
add
jg
add
mov
test
sbb
push
or
push
xor
icebp
fildl
add
into
jne
push
xchg
xchg
das
pop
sbb
icebp
sub
faddl
dec
std
jecxz
dec
hlt
cld
pop
shlb
add
pop
sbb
les
in
adc
add
mov
or
fwait
clc
dec
inc
sarl
js
cs
pop
je
or
jecxz
add
xor
jae
mov
add
dec
fisubrl
popa
lahf
mov
fs
into
jl
mov
sbb
iret
je
ds
loopne
fcomi
add
mov
cmc
lock
add
movsl
mov
mov
xchg
xchg
leave
aas
adc
sti
add
xchg
in
mov
adc
sbb
push
mov
pop
mov
xor
inc
mull
mov
dec
in
adc
push
add
cmp
mov
divl
cwtl
sbb
aad
mov
cwtl
xchg
xor
add
pop
lods
inc
cld
out
mov
movsl
gs
mov
cli
js
jg
call
out
inc
loopne
mov
dec
popa
add
pop
mov
inc
mov
movsb
addl
inc
jmp
scas
rol
outsb
push
sti
daa
mov
cmpsl
adc
push
cld
mov
push
dec
push
add
pop
pusha
out
int
fidivs
outsb
out
loope
push
mov
adc
pusha
push
push
adc
and
cmp
add
jbe
mov
rclb
push
mov
cwtl
inc
ja
test
add
dec
add
push
pop
jne
add
xchg
stc
jnp
insb
sbb
lret
inc
lds
enter
add
out
jno
fxch
add
stos
cmp
shlb
add
aaa
adc
pfsubr
push
mov
jns
and
lock
lcall
lock
inc
or
popl
mov
or
mov
aas
xor
sarl
push
pop
repz
rorb
scas
xor
adc
mov
fcomps
mov
mov
test
imul
addb
dec
mov
data16
pop
add
jg
lods
gs
cmp
nop
inc
jno
inc
add
sbb
mov
cmp
andb
add
fcmovb
add
lea
cmp
inc
inc
jg
in
add
pop
mov
aad
adc
mov
enter
push
dec
jecxz
mov
add
mov
sar
add
in
sub
mov
ss
mov
push
ja
add
test
test
mull
iret
fistpll
pusha
pushf
add
ds
sbb
mov
ret
repnz
dec
and
xor
sbb
daa
aam
mov
arpl
dec
jb
mov
sbb
mov
les
mov
add
fs
and
movsb
pop
mov
sahf
pop
push
pop
cmc
jne
aam
shl
jl
pop
es
dec
push
std
cmc
mov
sbb
add
data16
enter
ret
loope
mov
mov
xlat
add
shll
cmp
call
sbb
mov
int3
out
mov
add
js
stos
adc
xor
mov
inc
mov
inc
addr16
sar
js
jae
dec
mov
push
pop
aas
jae
stos
fdivp
data16
sub
cld
stc
add
add
mov
lods
data16
int3
inc
js
ja
dec
loop
test
scas
sub
sbb
and
inc
inc
movsb
and
scas
mov
jo
icebp
gs
or
test
orb
aam
pop
add
mov
inc
movups
fdivrl
shrb
xor
pushf
push
cld
add
xchg
mov
xchg
jno
les
je
call
dec
cmp
les
roll
jmp
mov
ss
das
and
add
push
add
mov
aam
gs
test
js
adc
cld
icebp
mov
jb
push
imul
xchg
in
stos
or
xchg
bound
iret
mov
dec
je
enter
aam
jo
lds
pop
out
jp
mull
inc
sbb
pop
hlt
xor
mov
jecxz
sub
dec
cmp
and
and
or
xchg
mov
in
cmp
rorl
dec
add
add
rorl
ret
or
insb
jns
mov
js
xor
nop
inc
nop
add
leave
rclb
mov
add
add
mov
cwtl
clc
addb
pushl
pop
sbb
in
xor
xchg
lret
rcrb
mov
sbb
push
daa
loope
test
push
stc
sbb
inc
inc
leave
add
js
shlb
xchg
icebp
out
jb
ret
mov
cli
pusha
xchg
andb
pusha
adc
or
or
xchg
ds
adc
cltd
jl
pop
mov
sbb
sub
jl
sahf
int3
pop
push
clc
cmpsl
in
or
out
cld
cmp
dec
mov
sbb
fs
mov
loope
mov
push
xchg
add
cmp
inc
pop
sub
jns
sbb
pushf
in
leave
mov
inc
adc
push
ja
xchg
pop
mov
sbb
push
cld
pop
pop
js
mov
pop
fistpll
add
inc
sbb
movsl
mov
insb
push
xor
sbbb
pop
xor
nop
push
outsl
inc
enter
in
dec
add
mov
cli
or
das
sarl
je
dec
add
insb
and
push
int
movsl
pop
mov
bnd
mov
outsl
dec
je
fisttpll
inc
mov
xchg
lods
insl
test
jbe
jge
and
inc
std
int3
ja
sahf
sti
lock
push
push
pop
mov
adc
test
pop
push
adc
imul
add
and
adc
hlt
xchg
sbb
mov
pusha
dec
movsl
gs
cmp
inc
out
pop
ds
fs
mov
fs
add
leave
adc
cs
js
push
adc
xor
addb
cmpsb
push
data16
ret
xorb
aaa
or
aam
adc
nop
inc
cmp
dec
movq
call
and
nop
lods
out
fidivrl
lods
mov
sarb
jg
jle
loopne
jge
pop
push
dec
insb
dec
orb
mov
adc
or
clc
push
fcomps
push
xchg
jbe
or
sbb
dec
push
nop
test
fildl
mov
pop
xchg
jle
xchg
imul
inc
mov
mov
add
pop
ja,pn
jbe
add
inc
int3
push
insb
or
jmp
hlt
cmpsl
stos
or
pop
loopne
test
cmpb
ss
xchg
and
xlat
js
xchg
clc
sbb
jl
mov
xor
repz
add
cmp
sub
fcomps
lock
pop
xchg
shrl
pop
imul
rcrl
repnz
mov
fsubl
aam
cmc
or
inc
mov
test
push
mov
inc
fldcw
rcrb
and
adc
mov
inc
mov
dec
repz
mov
addb
jo
add
ret
mov
mov
jb
xchg
sbb
loop
shll
xchg
cwtl
or
or
xchg
jno
test
mov
inc
fmul
or
add
andl
pop
fdivs
xchg
test
lahf
pusha
and
mov
outsl
addr16
xchg
pop
jo
pop
xor
nop
jns
nop
mov
sub
andb
dec
in
add
loopne
xlat
jle
js
pusha
push
stos
js
pusha
fmuls
adc
lock
inc
adc
push
js
cmp
test
fs
jl
movsb
add
jo
mov
add
fildl
das
add
lea
add
jnp
outsl
sbb
push
adc
sbb
push
sbb
sti
je
push
in
repz
cmpb
jecxz
rcrl
xor
hlt
pop
jne
fimuls
fs
cli
imul
xor
push
mov
popf
addl
dec
outsb
loopne
lea
cmpsb
ss
xchg
cmp
movsb
lock
dec
pusha
jecxz
xor
fwait
push
push
xlat
cwtl
add
or
sbb
lds
xchg
push
mov
cli
mov
popa
push
mov
or
pop
mov
dec
les
pop
cwtl
sbb
add
jbe
dec
jnp
gs
adc
fs
add
dec
aaa
out
or
add
and
leave
movsb
shrl
rcl
nop
xor
add
cli
xchg
in
mov
lock
push
into
sub
mov
mov
cmp
push
cmp
fiaddl
test
test
rcrl
cmpsl
xor
xchg
out
addr16
loope
cmc
xchg
addb
inc
fmull
in
outsb
popf
gs
dec
ljmp
lret
pusha
or
jbe
xchg
pop
cmp
loopne
jne
adc
inc
or
nop
push
xor
inc
pop
lcall
dec
movb
daa
test
fimull
jb
push
push
push
jns
jno
adc
mov
test
enter
mov
inc
xchg
add
in
loopne
inc
adc
loopne
xor
sub
aaa
frstor
push
dec
jnp
sbb
adc
shlb
cmp
cs
adc
lods
add
gs
xchg
cwtl
push
test
mov
mov
loop
daa
jo
pop
sub
add
imul
or
inc
sub
in
sahf
mov
cmp
add
data16
daa
ss
mov
adc
pushf
roll
sbb
cmp
or
cmp
and
adc
ror
addr16
insb
inc
jns
mov
movsb
in
ficoms
out
and
xchg
js
mov
repnz
or
pusha
dec
push
arpl
add
xchg
or
push
pop
inc
in
hlt
mov
imul
andb
sub
mov
push
cwtl
add
mov
adc
inc
dec
jg
loope
mov
xor
push
and
cmp
mov
adc
mov
lods
cmp
xchg
cmp
test
xchg
cmp
sahf
mov
or
dec
mov
out
shll
aam
cld
test
sbb
out
inc
mov
insb
jmp
xor
jg
nop
pop
sahf
and
add
lahf
and
adc
mov
stos
mov
sbb
xor
std
pop
gs
pop
mov
shl
repz
popa
inc
or
cmp
fmull
pop
pusha
pop
xor
add
out
aad
lahf
call
adc
test
jmp
cltd
rol
push
pushf
push
jl
orl
mov
icebp
mov
bound
outsb
mov
push
push
push
inc
mov
jmp
adc
jno
iret
cld
mov
push
sub
inc
and
ss
sub
add
and
sbb
dec
cmp
outsb
cmpl
getsec
in
stos
and
js
adc
cmp
enter
mov
js
stos
loopne
popf
je
mov
and
and
pop
add
rorb
mov
inc
or
xchg
xor
pop
orb
add
in
jo
aaa
pop
inc
add
add
int3
adc
popa
imul
push
pop
pop
ja
dec
and
les
adc
jmp
inc
in
lods
add
popf
aam
push
add
stos
or
xlat
dec
sub
and
punpckldq
shrb
dec
mov
out
dec
cmpsb
mov
pop
nop
out
das
addb
das
mov
mov
and
xchg
hlt
jl
mov
jecxz
add
dec
sbb
lds
enter
mov
sbb
pop
test
or
mov
cwtl
add
push
dec
xor
and
loop
or
fs
enter
pop
jbe
push
jno
repz
mov
mov
roll
insb
inc
adc
ja
daa
arpl
jo
jns
cwtl
in
aam
mov
push
pop
hlt
adc
pop
aaa
orb
sbb
push
sub
push
test
or
mov
and
loopne
imul
mov
and
add
dec
add
imul
mov
add
fimuls
sbb
jmp
outsl
pop
fstps
pop
dec
mov
push
popf
xchg
mov
jne
adc
les
jno
aam
movsl
jmp
or
push
mov
add
xor
mov
lock
insb
movsl
int3
js
inc
cld
add
dec
leave
sbb
add
sarl
and
fisubrl
loope
mov
loopne
shll
frstor
addr16
incb
mov
sub
pop
daa
shr
add
js
mov
cmp
jmp
roll
es
cld
xchg
add
mov
gs
pusha
push
and
xchg
mov
jbe
sub
movsb
or
dec
adc
xchg
and
sbb
jo
add
out
adc
mov
add
and
cmpsb
inc
nop
lea
loope
jb
pop
mov
sub
popa
mov
stos
test
or
push
add
push
ret
adc
cmp
mov
insb
dec
cmp
xchg
int
out
dec
rcrb
push
pop
mov
or
add
add
adc
mov
jb
sbb
test
fs
fidivrl
and
jmp
aaa
pop
mov
xor
in
int
mov
loop
aaa
jae
xchg
pop
xchg
lret
mov
jbe
andb
orb
mov
int3
inc
cmpsb
pushf
add
add
js
loopne
or
mov
and
lock
ja
jge
cs
sub
mov
pop
fs
cmpsl
sub
pop
add
mov
cmpsb
dec
clc
pop
mov
fdivs
pop
outsl
xchg
and
xchg
mov
xor
test
cli
pop
jmp
sbb
add
inc
fs
add
negl
movsl
pop
mov
mov
add
pusha
push
push
fcoms
adc
and
test
dec
test
shrl
mov
push
pusha
sbb
out
repnz
repz
sbb
jecxz
in
cmp
pop
insl
insb
dec
mov
push
add
add
fsubs
jb
xchg
inc
lret
add
stos
sub
cmp
jge
out
inc
xchg
mov
dec
jne
call
aaa
dec
stc
sub
cmpsl
push
mov
push
xchg
fisttpll
out
xlat
add
lock
cmpl
sahf
pushf
cwtl
pusha
mov
outsl
xchg
movsb
inc
ret
test
dec
adc
outsl
add
push
add
mov
das
lock
mov
and
add
test
rcll
in
pop
sti
mov
fidivrs
inc
in
hlt
xorl
aam
add
inc
jp
push
lret
pop
push
and
pop
cmpsb
mov
push
jnp
adc
cmp
xchg
add
ljmp
mov
jecxz
add
xor
popf
add
iret
lret
and
jne
push
pop
loop
ret
cmc
sbb
ljmp
lahf
jge
inc
fsubs
mov
and
mov
or
mov
inc
test
cmp
xchg
aam
fisubrs
xchg
mov
loopne
mov
mov
add
pop
lock
andl
add
rcrb
inc
pop
dec
inc
and
inc
js
add
mov
add
sub
sub
test
mov
inc
repz
arpl
loopne
fiadds
lods
jb
ja
sub
movsb
cmp
add
jmp
mov
xchg
js
jecxz
rcrb
pop
jb
outsl
gs
add
mov
add
mov
dec
movsl
iret
or
cs
sub
or
pop
mov
pop
sbb
pop
rorl
loop
adc
call
jne
pushf
pop
clc
inc
jae
or
adc
dec
lock
mov
pop
pop
mov
scas
test
insb
loop
and
add
fiadds
ss
dec
stc
fstps
gs
xchg
xchg
push
add
mov
int
sub
in
add
mov
push
xlat
loop
adc
and
add
loopne
mov
push
add
loopne
mov
push
adc
mov
pop
add
call
inc
push
enter
mov
sbb
in
lock
mov
add
push
shr
hlt
int3
inc
jnp
clc
xlat
xor
add
add
xchg
push
mov
xchg
ds
test
cmp
arpl
dec
test
add
je
jbe
aaa
clc
xor
scas
jl
inc
loopne
add
pop
jae
mov
add
rorl
mov
outsl
pusha
cmpsb
xor
add
cmp
jae
sub
dec
and
int3
ja
sbb
jg
test
add
mov
and
mov
cmp
clc
adc
pop
int3
nop
xchg
cmp
mov
in
test
and
lret
aas
dec
xlat
movsl
pushf
sbb
nop
mov
and
int
inc
lcall
cmpsl
xor
or
andps
sbb
mov
aad
insb
add
leave
sbb
push
push
adcb
push
add
dec
cmpb
hlt
mov
sub
inc
ret
rcll
cmp
add
pop
gs
pusha
xor
insl
ja
inc
nop
add
inc
and
out
sub
jo
xchg
jbe
test
test
subl
sbb
int3
dec
js
fsubl
mov
daa
movsl
xor
pop
push
dec
xchg
data16
test
hlt
insb
insl
inc
cmpsl
mov
cmp
insb
loop
mov
pusha
cmpsl
lock
ret
mov
push
sbb
sbb
test
xor
sub
mov
mov
lea
add
in
pop
push
out
aaa
add
testb
push
add
orb
xchg
mov
pop
inc
dec
sbb
mov
and
dec
test
adc
mov
lret
dec
inc
push
add
push
mov
push
loopne
and
in
sbb
push
push
outsb
scas
add
les
shlb
ja
pop
adc
sub
add
loope
xchg
dec
lret
xor
adc
inc
dec
outsl
cmpsl
scas
inc
jne
mov
stos
sub
outsl
decb
dec
jg
add
rorl
or
pand
add
lea
jns
inc
jo
push
xor
notl
jno
popl
jg
nop
inc
test
mov
int3
jb
add
dec
dec
pusha
xchg
or
xchg
out
in
adc
clc
add
nop
test
pop
std
lret
mov
cmp
jb
mov
sub
ja
loope
pop
fadds
push
add
fidivl
insb
stos
pop
imul
adc
imul
inc
adc
adc
mov
ds
mov
insb
cmp
and
sub
lock
adc
mov
pop
pop
cmpsb
ret
inc
xor
xchg
in
addr16
adc
pop
xchg
outsb
aad
pusha
stos
hlt
mov
mov
or
adc
mov
jno
mov
pusha
and
scas
popf
mov
repnz
pushf
adc
and
mov
mov
inc
aaa
imul
pusha
aas
mov
rorl
shlb
add
hlt
add
daa
sarl
add
mov
enter
stc
push
shlb
mov
idiv
cmpsl
inc
cmpsb
or
enter
arpl
cltd
mov
dec
cmp
imul
add
mov
shlb
sbb
test
mov
inc
push
sbb
rclb
std
jg
fldenv
mov
jle
rcrl
or
mov
bound
iret
hlt
push
inc
aas
cmp
or
mov
shlb
pop
jmp
add
stos
xchg
xor
mov
inc
test
enter
test
leave
push
loop
test
insl
sub
mov
ds
nop
fildl
pop
jne
and
mov
push
mov
ljmp
jne,pn
mov
repz
add
fsubrs
mov
arpl
add
jno
popf
out
in
subb
sbb
adc
and
scas
add
mov
add
adc
shl
subl
push
jae
xchg
sub
loopne
sbb
or
inc
xor
xor
mov
add
pop
xchg
push
add
negb
imul
in
xchg
xor
pop
test
xchg
jae
inc
pusha
adcl
xorb
add
out
xchg
pushf
popa
push
mov
mov
sub
pop
push
mov
or
les
and
mov
jmp
dec
cwtl
call
jle
lods
int
xor
sbb
fwait
push
add
and
fwait
enter
or
add
adc
inc
mov
pop
loopne
test
shrb
inc
stos
adc
or
imul
out
and
adc
pop
in
insb
pop
adc
mov
mov
or
sbb
and
inc
ja
dec
xchg
xchg
int
xchg
sub
cmp
pop
fadds
and
sti
int3
jns
fisttps
pusha
xchg
xchg
jge
pop
xchg
jae
add
and
push
add
and
cmp
insb
dec
lea
subb
push
mov
js
ds
inc
mov
rcll
or
mov
push
pop
test
inc
insb
cmp
inc
addb
mov
hlt
sub
mov
adc
xchg
test
sub
pop
sti
negb
inc
xor
orb
es
loopne
mov
divb
pop
lret
add
fs
cmpsl
int3
mov
or
pop
add
sub
jl
lcall
mov
mov
test
adc
dec
lods
loopne
fdiv
pusha
scas
xor
pusha
cmp
imul
imul
xor
mov
pop
daa
aad
or
inc
mov
xchg
sbbb
jne
xchg
dec
and
pop
and
popa
add
push
mov
push
movsb
pushf
test
mov
or
sub
pop
js
in
or
pop
sbbb
and
mov
add
clc
pmaddwd
add
mov
test
xchg
lds
sub
sub
shlb
xchg
movsl
mov
mov
adc
add
inc
mov
lcall
pop
mov
cmp
adc
fisttpl
jno
xchg
das
and
sahf
movsl
fwait
bt
fildl
jbe
addb
add
inc
jg
add
push
aas
mov
dec
les
jle
in
cmp
and
inc
jnp
lds
lods
fiadds
cmpsb
adc
test
push
add
mov
sub
popf
pushf
mov
js
dec
cmpsb
and
hlt
incl
negl
mov
insb
cs
fcmovne
mov
dec
add
adcb
mov
xchg
and
mov
dec
mov
cltd
ljmp
test
aaa
mov
rorb
bound
shll
add
cmp
xor
loope
mov
sbb
xor
fstp
and
mov
int3
rolb
rcll
mov
add
add
mov
or
dec
in
mov
mov
pop
div
push
jg
dec
cmpsl
and
mov
int
inc
mov
push
xchg
mov
adc
leave
add
xchg
mov
sub
inc
sarl
mov
or
dec
lret
pop
jg
add
repz
mov
lcall
push
xor
sar
enter
jp
rclb
subl
lahf
xchg
inc
testl
data16
arpl
notl
pop
jo
mov
xchg
cld
movsb
pop
pop
shll
ds
add
scas
add
pop
sahf
fisubl
mov
or
stos
int3
inc
sub
mov
add
xchg
test
or
inc
int
jo
mov
xchg
add
sbb
add
stos
inc
cmp
sub
pushf
lret
cwtl
add
js
jl
or
add
sub
mov
add
pop
in
and
insl
inc
xor
sbb
lret
adc
adc
cmp
insl
je
jg
inc
mov
mov
push
mov
lahf
dec
inc
xchg
mov
fstpl
adc
cmp
push
inc
push
ret
sbb
mov
pushf
sbb
xor
xor
push
iret
mov
add
add
mov
test
aam
aas
outsw
push
cmpsl
roll
xor
xchg
cwtl
mov
outsl
fisubl
nop
clc
dec
mov
xorb
sbb
adc
push
add
sbb
and
addb
out
xor
loopne
das
data16
or
popa
xchg
fstpt
lods
nop
in
insl
js
mov
outsl
xor
cli
inc
xchg
lahf
xchg
and
jae
add
pop
lret
cmp
push
sahf
lods
loop
inc
sbb
leave
imul
imul
lcall
je
xor
add
and
dec
mov
lret
pop
orl
lock
ja
fildll
stos
icebp
hlt
or
rorb
inc
mov
mov
jp
add
sub
adc
jno
inc
cmp
fs
add
or
jecxz
mov
xchg
push
or
add
in
sbb
lahf
pop
xor
mov
sbb
ficoml
das
js
jo
mov
sbb
in
shl
js
popf
in
clc
jmp
push
les
imull
and
mov
jl
sub
daa
adcl
pop
or
and
xor
sbbb
imul
fiadds
data16
xor
mov
ljmp
pop
jmp
mov
inc
xchg
loope
sub
mov
xchg
fs
or
inc
and
cld
ja
call
pop
xchg
jne
orb
adc
xchg
push
call
mov
sub
mov
sahf
sub
les
push
dec
jns
xchg
or
rcr
adc
mov
pushf
push
popf
call
xor
ljmp
mov
add
cmp
push
movsl
inc
roll
gs
cmp
add
sbb
sub
nopl
fs
and
cld
mov
je
pop
mov
add
xor
lahf
adc
decb
and
ds
mov
cmp
mov
icebp
iret
or
call
shl
mov
xor
xchg
cmp
mov
fiadds
add
sub
mov
inc
jnp
mov
mov
jno
cmp
adc
subl
or
add
ret
int
cwtl
dec
push
subl
testl
and
rclb
add
bound
mov
mov
add
xchg
jmp
test
in
shl
jp
lcall
xor
cmp
inc
jae
add
mov
xchg
add
cld
dec
and
sub
cli
jno
push
and
lds
je
xor
mov
cmpsb
les
and
push
loop
add
cmp
and
add
movl
test
rol
cld
inc
ss
sbb
add
mov
xor
and
pop
pop
add
dec
push
lock
add
dec
mov
roll
mov
clc
cmp
cmp
or
sub
std
add
cmp
xchg
dec
ror
or
jbe
repz
cmp
dec
cld
cmp
ljmp
cmpsl
jecxz
sub
lods
add
or
inc
xchg
cmp
cli
popf
int
sti
xchg
fwait
add
icebp
xor
stos
xchg
cwtl
js
inc
sbb
loop
and
cs
mov
adc
add
leave
dec
roll
cltd
sub
ret
xchg
decb
pop
inc
mov
mov
add
ret
stos
dec
lret
int3
add
imul
jbe
rcrb
clc
cwtl
subl
or
and
sbb
mov
inc
pop
iret
enter
add
movsl
out
bound
in
nop
cmp
adc
add
adcb
or
js
sbbl
movsl
dec
cwtl
push
bound
loope
das
aaa
sbb
push
cld
sbb
les
cmp
xchg
int
add
mov
popf
xor
push
cmp
inc
cmp
jne
xchg
mov
xchg
add
add
fwait
test
fs
in
inc
and
adc
add
add
sub
leave
test
adc
sub
int3
xchg
add
aam
xchg
add
mov
cmp
and
and
int
xchg
xchg
xchg
xor
jge
and
ret
pusha
in
add
cmp
hlt
adc
and
fwait
pusha
cmp
jbe
gs
sub
in
add
mov
rcll
sbb
int
daa
pusha
add
or
fbstp
add
cmp
sub
cmp
into
xorl
pop
movsb
push
loop
mov
or
or
enter
xor
xorl
push
xchg
sahf
das
add
shll
add
jmp
cmp
test
rclb
hlt
pop
in
or
add
cmp
mov
dec
push
aad
sbb
inc
gs
mov
push
fisttpll
mov
sbb
push
mov
push
jo
adc
jl
add
hlt
adc
mov
dec
fmull
hlt
mov
or
and
xchg
sbb
jo
js
incl
xor
fimuls
dec
sub
inc
inc
gs
insb
test
loop
shlb
nop
mov
dec
add
imul
xchg
shrb
clc
subps
js,pt
mov
lds
xchg
jecxz
test
pop
lret
and
add
clc
xor
xchg
test
mov
test
cmpsb
cwtl
jns
scas
cmp
rorb
sub
rcrl
add
in
shll
jns
inc
jne
xor
sub
nop
stc
in
mov
mov
lods
rolb
mov
sub
aaa
cwtl
or
push
int3
sbb
push
mov
cmp
xlat
mov
aas
stos
rclb
je
jl
add
jne
jns
rcrl
in
add
popa
jg
setnp
dec
mov
mov
in
rolb
add
add
out
sub
adc
push
pop
lahf
mov
add
mov
adc
sub
call
or
ja
dec
mov
dec
mov
and
mov
add
and
in
iret
sub
adc
and
push
push
pushf
test
dec
push
xchg
iret
roll
dec
cmp
loopne
testb
lret
cmp
std
xor
dec
mov
faddl
and
in
add
push
fwait
inc
mov
in
jp
adc
gs
and
mov
xor
fstpt
pop
and
fldl2e
sbb
or
pop
jae
fs
jl
mov
ljmp
stc
or
cmpsl
ss
pushf
xchg
notl
jl
add
sahf
mov
lock
in
add
outsb
push
push
add
es
jae
fildl
add
push
mov
or
cmp
lcall
push
lcall
add
arpl
pop
pop
jno
pusha
xchg
and
inc
sbb
adc
dec
add
ret
push
push
xchg
inc
mov
add
popf
pop
xor
mov
lea
sbb
add
jbe
pop
sbb
add
xor
mov
lock
mov
out
mov
xchg
outsl
outsb
aas
mov
sub
lcall
sbb
rorb
cmc
pop
nop
xor
add
or
lods
fnstcw
scas
outsl
xchg
add
mov
mov
sbb
add
pusha
shll
cmp
add
lods
sub
lea
test
cli
mov
rorl
popf
in
insl
loopne
push
xchg
sbb
mov
in
dec
xchg
repnz
int
test
sar
fisubrs
and
loopne
jge
sbb
lods
fnclex
xor
xor
clc
and
int3
xor
and
jge
mov
xor
adc
popa
jnp
pop
dec
jne
add
aam
cld
add
cmp
mov
das
cmp
out
add
push
popa
inc
enter
add
pop
fidivl
pop
nop
orb
add
xchg
or
adc
decl
add
cld
mov
add
add
mov
and
loop
sbb
stos
fdivrs
aam
sahf
cmp
rorb
sub
int
add
xor
inc
adc
pop
bound
pop
adc
ss
add
pusha
cmp
dec
scas
xchg
add
mov
aad
pop
fsub
lods
xchg
movsb
loopne
bound
and
add
sti
jb
js
add
adc
or
rcll
jo
xchg
add
dec
cs
lock
xchg
adc
mov
lcall
in
cmovs
adc
scas
lea
adc
adcb
add
xor
push
jp
xor
leave
jnp
sbb
add
mov
mov
fisubs
pop
xor
sub
pusha
mov
pop
mov
mov
mov
loope
pop
inc
xlat
mov
dec
mov
jo
sahf
aaa
out
xor
lods
rcrl
test
inc
dec
sbb
add
adc
stos
insl
daa
repz
pop
xor
rclb
sbb
lret
ret
xor
in
in
call
sbb
scas
loop
mov
jmp
roll
imul
dec
das
hlt
flds
adc
popf
in
mov
jg
push
bound
adc
ror
dec
ljmp
add
mov
cwtl
addb
scas
xor
add
xchg
adc
push
and
testb
or
cld
cmp
imul
pushf
int
outsb
add
movl
add
inc
mov
jno
pushw
jae
pop
insb
adc
imul
adc
pop
add
and
xor
sbb
popa
mov
pop
sahf
add
cmp
pushf
add
cmpsb
add
dec
mov
pop
int
adc
xor
and
mov
inc
mov
fadds
out
mov
mov
add
frstor
xor
sub
and
aaa
jo
sbb
mov
add
jmp
out
or
sbb
push
and
das
push
adc
jmp
and
mov
cmp
sub
les
nop
cmp
lock
push
ret
nop
cmp
lods
shlb
mov
repz
js
pop
add
fstpt
push
sahf
xchg
and
xor
and
mov
imul
repz
push
mov
int
adc
ljmp
inc
add
cmp
cmp
inc
xor
nop
add
scas
rcrb
add
lods
add
push
inc
outsl
loopne
test
js
enter
dec
call
int
and
jp
cmp
fs
adc
xchg
xor
add
dec
adc
add
in
or
add
xchg
not
mov
add
pop
add
scas
add
je
daa
jp
inc
adc
xchg
test
in
jns
loope
jle
jmp
adc
cmpsl
les
sub
test
filds
lahf
ja
stc
add
sub
flds
aad
xor
push
sbb
mov
pop
inc
shr
mov
add
mov
add
addr16
mov
mov
shr
ret
sbb
cmpsb
mov
pop
scas
add
data16
test
aas
add
mov
mov
mov
add
sub
or
into
pop
mov
fnstsw
xor
adc
cmc
sbb
mov
sub
sub
sti
stc
mov
rol
jbe
inc
in
cwtl
push
inc
mov
mov
aad
mov
adc
jbe
popa
sbb
ljmp
jo
or
imul
int3
in
fadds
insb
mov
lock
or
pop
ret
and
jae
add
hlt
inc
add
lods
lds
xor
sub
ljmp
ret
mov
inc
add
addl
adc
fdivrs
or
in
inc
sbb
xor
bound
ret
jo
int3
add
in
mov
add
sbb
fiadds
push
shl
sti
add
jnp
xor
adc
fisttpll
mov
lds
pop
add
nop
add
ror
sub
movsl
aaa
add
sbb
scas
nop
sub
adc
mov
test
stos
add
and
or
mov
cmp
test
inc
jecxz
lea
sub
cmp
xor
cmp
shll
and
xor
and
call
xor
cmpsl
push
pop
mov
xor
push
lcall
rcll
add
loope
jg
int3
fmull
jl
fisttpll
test
mov
div
sbb
add
cmpsl
fwait
das
addl
add
gs
pop
sbb
cli
or
mov
inc
jp
mov
stc
fucomp
cmp
and
pusha
ret
push
xchg
fnstcw
or
xchg
sarb
adc
and
clc
fldl
addb
pop
popa
popa
dec
cltd
mov
xchg
cli
mov
aam
push
mov
mov
push
stc
pop
mov
dec
sub
enter
xchg
enter
testl
mov
aam
fstpl
pop
shlb
aaa
test
pop
hlt
das
jmp
movsb
int
add
mov
outsb
xchg
xchg
mov
sti
daa
add
mov
stos
jbe,pn
test
ret
push
cmpb
pop
add
dec
inc
sarb
or
and
mov
call
push
add
add
sbb
mov
push
jne
ret
test
pop
mov
into
mov
jae,pt
mov
shlb
les
jle
fstl
out
and
ds
add
xor
stc
jno
inc
and
or
hlt
outsb
pop
push
cwtl
push
cmp
mov
jo
and
push
add
popl
jp
add
dec
roll
aam
sbb
lcall
cmp
xchg
mov
or
pop
ljmp
push
add
cmp
sbb
jno
lock
mov
imul
cmpsb
ja
add
out
inc
mov
adc
mov
hlt
inc
add
xor
mov
es
pusha
or
adc
dec
inc
pushf
das
lahf
jbe
fidivl
add
lret
xor
pop
xor
pop
ljmp
subb
sub
mov
fwait
jl
or
rcrl
ljmp
fsubrs
cmp
xchg
ret
cmpsb
jo
add
outsl
bound
fmull
jp
add
fdivs
ret
push
cmp
push
xchg
dec
aad
leave
into
push
mov
mov
add
mov
lret
dec
push
or
test
fisttps
push
xor
cld
adc
xor
inc
xor
adc
and
icebp
mov
ljmp
cmp
test
pop
loope
outsb
push
inc
out
fstpt
add
xor
test
jg
mov
mov
inc
fimull
in
js
sbb
shll
add
lret
ss
pop
and
cmpsl
pop
scas
ficoml
push
mov
cmp
fcmovb
hlt
and
cmc
loopne
decb
orb
jecxz
xor
cwtl
dec
ds
clc
push
push
pop
adc
add
jl
and
add
std
xchg
xlat
hlt
jl
pop
cwtl
ret
and
jbe
loopne
pusha
or
dec
xor
add
sub
push
repnz
dec
loop
cmpsl
fiadds
test
sti
add
sbb
lret
add
add
clc
adc
ds
jl
xchg
jae
jge
lods
repnz
lds
sub
add
cltd
subb
pop
das
pop
inc
xor
mov
fdivrs
add
into
xchg
das
adcb
mov
xor
ds
adc
lods
in
adc
popf
fpatan
pop
call
jno
adc
insb
movsl
mov
leave
popf
add
or
add
or
add
mov
jo
xchg
or
adc
and
enter
mov
adc
jg
out
cmp
add
sub
mov
add
mov
in
lods
ret
out
push
popa
mov
in
mov
mov
addb
in
pop
lds
adc
call
ret
xor
fsubs
pop
inc
jbe
popl
mov
xor
std
mov
int
add
dec
adc
fiaddl
mov
add
cmpsb
mov
jo
es
ret
leave
inc
popf
or
sbb
inc
add
out
in
dec
ret
add
xor
jg
or
sub
ss
lds
sbb
push
fsubrl
in
nop
out
xlat
add
inc
add
xor
fucomp
xor
add
hlt
and
pop
xor
xchg
push
mov
add
mov
xchg
subb
mov
fidivl
call
add
int3
mov
pop
cmp
add
push
add
test
adc
cmp
pop
scas
stos
sub
add
sahf
push
inc
aam
pop
pushf
sub
xor
and
fldl
dec
lcall
pop
ret
je
cltd
subb
lcall
adc
ljmp
jge
fistpl
mov
or
add
adc
and
fcomip
mov
add
mov
pop
cwtl
sub
nop
mov
push
cmp
add
andb
xlat
mov
mov
addb
push
rcl
dec
popf
xor
dec
stos
mov
xor
cmp
mov
add
add
lret
mov
popf
fwait
cmp
or
sar
mov
add
fadds
sahf
std
icebp
stos
jp
fsubs
popf
cmp
push
xchg
xchg
mov
andl
mov
jle
mov
or
jl
cmpl
rorb
icebp
inc
add
push
jb
jle
test
xchg
addb
cmp
add
push
cmp
sbb
lods
shrb
or
mov
mov
aam
ret
mov
int
in
jnp
roll
test
inc
fnstenv
das
and
mov
add
cmp
bound
push
sub
ftst
inc
mov
xchg
pop
add
bound
test
dec
mov
add
ret
xor
adc
cmpb
scas
shlb
or
das
sub
dec
stc
adc
daa
and
adc
xchg
dec
inc
lds
repnz
push
mov
jno
add
jb
pop
adc
sub
out
fldcw
inc
add
ja
out
pop
mov
adc
ljmp
mov
pop
mov
mov
test
repnz
xchg
and
mov
add
and
jo
xchg
xchg
adc
nop
inc
cmp
enter
fsubl
test
cmp
add
les
fwait
push
pop
cmp
inc
mov
addb
lret
inc
adc
fsubrl
add
xor
add
sub
sbb
push
xchg
mov
inc
popa
pop
sbb
cltd
add
or
mov
add
jp
cmp
aaa
push
add
mov
add
or
into
imul
inc
lock
pop
nop
and
je
test
scas
aas
xchg
dec
loope
mov
inc
shrl
hlt
cmp
mov
lock
lock
ja
add
lcall
mov
xlat
fsubs
pop
test
jmp
mov
inc
add
fistl
inc
adc
add
test
std
mov
push
mov
mov
cmp
and
cmp
inc
dec
cltd
mov
sbb
add
lock
call
int
cwtl
mov
mov
testl
push
cmpsl
pop
and
push
shrb
push
imul
add
fcmovu
addb
adc
push
and
lret
inc
rorb
mov
xor
shrb
add
and
jbe
and
int
je
cmpsl
add
or
sahf
data16
sbb
pusha
jb
pop
mov
aam
adc
or
lods
add
inc
out
adc
dec
iret
adc
faddp
xor
fucomip
lret
add
fs
jl
add
adc
add
mov
ja
add
xorb
in
loope
cmp
mov
ret
or
loop
xchg
mov
push
fs
inc
pop
xchg
fnsetpm(287
add
add
mov
imul
adc
enter
add
jno
cmc
and
mov
xchg
adc
ja
stc
jp
add
push
daa
push
add
xor
pusha
lret
mov
imul
jno
and
inc
adc
inc
or
push
cld
add
cmp
inc
and
repnz
aam
fs
rolb
movsl
or
dec
mov
out
mov
fdivrs
test
jo
lock
movsb
ret
dec
cmpb
subl
mov
out
imul
and
add
add
dec
in
shlb
aad
pop
aam
int3
ja
cmp
lahf
jmp
xor
sbb
jae
clc
push
add
and
mov
push
gs
sub
jmp
pop
xor
xchg
jo
adc
add
fldcw
dec
fisttpll
xor
mov
add
jae
jle
and
jo
rorb
or
rdmsr
mov
and
lock
aas
mov
aas
subb
pop
inc
xor
dec
push
pop
xor
jne
imul
jle
leave
cld
pop
inc
pop
repz
scas
lea
add
push
sub
imul
cmp
lcall
pop
cmpb
cmp
adc
push
cmp
int
jl
push
dec
insl
test
outsb
ljmp
daa
add
inc
lcall
sti
inc
xchg
adc
outsb
fists
xchg
jnp
insb
loop
push
mov
fmul
jns
add
loopne
mov
or
mov
inc
adc
adc
mov
or
rclb
sbb
sbb
sub
pushf
and
cmpsb
ja
cmp
scas
pop
enter
shrb
xor
shl
jl
mov
mov
xor
add
lret
jnp
pop
or
pushf
add
call
shlb
les
or
scas
movsb
mov
pusha
pop
inc
jp
mov
clc
inc
out
out
out
add
adc
jg
add
fcompl
inc
stc
push
add
bound
xchg
cmp
cltd
cmpsb
pushf
cmp
xor
popl
and
add
fsubl
in
addl
es
stos
je
xor
or
jnp
add
jno
push
jp
notl
pop
inc
and
xchg
inc
and
cmp
rorb
imul
inc
test
popa
mov
enter
mov
sarl
mov
xchg
add
movsb
mov
hlt
push
jl
mov
dec
jbe
add
pop
lret
jns
xorb
or
jl
aad
mov
mov
cmp
sub
jo
daa
fstpl
inc
les
push
nop
cmp
dec
inc
add
pop
scas
xor
mov
movl
add
sbb
popf
xchg
clc
clc
xor
sbbl
mov
cmp
push
arpl
add
add
fcomp
nop
lods
mov
fdivrs
test
push
add
jns
pop
mov
inc
dec
lret
sbb
sbb
adc
add
aaa
rolb
bound
xchg
imul
or
dec
or
loopne
jno
jae
pop
mov
xor
push
xchg
or
sbb
push
add
int
xchg
push
outsb
add
sub
aad
add
cmp
ret
aam
test
and
sbb
stc
popf
xchg
add
inc
ljmp
mov
mov
js
pushf
cmp
gs
add
shrb
test
outsb
add
dec
jb
inc
test
rclb
mov
ja
adc
lcall
cmpsl
pop
cld
jmp
mov
rolb
sbb
pop
or
mov
xor
cltd
rclb
sbb
add
sub
dec
test
mov
lea
add
aam
mov
add
jae
sbb
pop
add
adc
lods
pop
aam
call
test
mov
jmp
sub
add
and
or
adcl
hlt
adc
mov
jns
add
mov
xor
and
addb
shrb
cwtl
jnp
lods
lock
bound
dec
add
push
pop
and
xor
push
pop
cwtl
inc
push
mov
cmp
sbb
fsubrp
shrb
pusha
cmp
jno,pn
mulb
ret
mov
cld
ret
mov
sbb
icebp
addr16
inc
nop
je
and
adc
add
rolb
lods
bound
cwtl
xlat
xor
pushf
xor
add
cmp
mov
stc
push
jne
test
sub
xor
jne
cli
fldln2
inc
out
lods
add
add
and
popa
movsl
pop
mov
and
push
push
fistpl
mov
ds
les
inc
xchg
add
mov
dec
bound
mov
inc
cmp
hlt
popf
pop
cmp
pop
es
jbe
or
sbb
dec
add
pop
push
push
xchg
adcb
mov
js
and
inc
jmp
ja
push
push
pop
sub
push
push
sub
jo
jbe
cmp
aam
push
push
dec
sbb
insb
or
pop
movsl
out
nop
aam
movsb
xchg
dec
jo
xchg
lret
es
cmp
fsubrp
and
call
push
push
fsubr
out
inc
jb
jbe
and
cld
dec
xor
adc
add
cmpsb
loopne
push
int3
aas
push
add
subl
fisubl
andb
fxch
adc
testl
xor
sbb
cmp
addb
adc
mov
add
sbb
add
lea
lock
testb
sbb
jmp
add
and
icebp
or
jno
test
add
xchg
sbbb
push
nop
pop
adcl
mov
les
pop
data16
pop
push
mov
scas
dec
adc
mov
lock
dec
push
xlat
inc
jnp
add
cs
jl
add
xchg
add
ds
sub
movsb
inc
jns
push
mov
stc
and
mov
add
sub
jbe
fistpl
cmp
call
pusha
xchg
into
iret
loop
or
lret
pop
mov
mov
hlt
cmp
push
lods
sbb
rol
sbb
cwtl
enter
insb
fmul
xor
mov
and
movsb
add
lock
adc
xor
fldl
les
cwtl
xor
cmpsl
in
add
xchg
shrb
fucomp
lods
xchg
clc
pop
cmp
sar
xchg
jg
rorl
xchg
lret
sub
jo
adc
mov
add
xlat
sbb
in
sub
call
add
or
inc
cmp
push
or
int3
daa
pushf
cmpb
mov
mov
xor
dec
js
in
sub
and
cmc
xchg
mov
insl
sub
cmp
mov
int3
push
dec
add
mov
test
es
aam
fsubrl
add
inc
inc
add
loopne
cmp
mov
push
cs
imul
jl
add
imul
aad
cmp
sbb
ret
fcomps
ljmp
add
jl
inc
enter
add
imul
add
nop
push
das
mov
adc
mov
les
cmp
in
call
icebp
or
jo
clc
mov
data16
sbb
xchg
dec
das
and
mov
and
cwtl
xor
insb
sub
pop
add
fildl
loop
mov
ds
cld
add
loopne
in
iret
pop
sbb
xchg
and
mov
jae
add
pop
fisttpl
ljmp
sbb
leave
xchg
das
push
enter
popf
arpl
loopne
sbb
jo
push
pop
xchg
pop
pop
stos
outsb
call
sub
add
pop
and
or
enter
mov
outsb
inc
icebp
lods
add
sbb
ja
nop
clc
inc
or
int
sbb
ljmp
jb
add
or
adc
sub
xchg
arpl
das
push
sbb
gs
add
or
or
fldenv
sbb
and
inc
cmp
jle
cmpb
je
push
cmpsl
mov
lret
push
pop
xchg
or
fisubs
push
jmp
mov
loope
shl
dec
sub
loopne
mov
ret
sub
mov
sbb
dec
pusha
sbb
sub
fistps
repnz
mov
mov
es
add
pop
mov
add
or
add
ret
aad
xchg
dec
add
push
and
jl
add
sub
data16
lock
pop
pop
adc
xchg
or
mov
js
inc
scas
push
push
and
fwait
pop
pusha
dec
pusha
push
sub
dec
adc
add
lds
cmc
fisubl
jo
add
push
xchg
add
pop
mov
sub
mov
jge
add
jo
iret
addr16
adc
movsb
add
adc
pop
xchg
je
xor
lock
add
cmp
sub
pusha
inc
push
adc
ss
add
sub
adc
push
sbb
cmp
nop
add
mov
xchg
sbb
pop
sbb
lcall
and
xchg
cli
jae,pn
adc
inc
les
add
sub
or
enter
sbb
add
push
pop
push
add
stos
test
in
aam
adc
sub
pop
add
jmp
sub
xchg
fadds
mov
xor
mov
mov
push
mov
sbbl
xchg
ficoms
clc
sub
sub
pusha
adc
gs
out
xchg
dec
and
imulb
push
imul
bound
adcb
xor
fstps
xchg
pop
or
xor
ljmp
and
testb
fsubrl
insb
cmp
scas
flds
bound
jp
dec
jno
cwtl
lds
sub
rolb
loop
lock
add
pop
xor
add
and
loope
push
ljmp
push
sbb
clc
push
xorb
ljmp
xor
andb
mov
cltd
leave
aam
je
add
dec
jl
add
jg
pushf
imul
pop
push
popf
sub
mov
lret
cwtl
fnsave
or
push
in
scas
nop
sbb
cmp
push
adc
xchg
pop
pusha
testb
sub
cwtl
mov
and
iret
add
stos
js
enter
xor
or
adc
or
jecxz
mov
add
aam
fildl
fstpl
mov
aad
andb
adc
push
stos
add
mov
sbb
rolb
scas
sub
xchg
add
subl
add
dec
mov
ss
add
lds
or
rclb
fcmovne
jo
xchg
xchg
mov
stc
mov
fildll
cld
jae
jo
jbe
add
clc
insl
sub
adc
adc
addb
shlb
movsb
pop
cmp
fsubr
loopne
xlat
push
push
or
imul
pop
sub
jns
push
push
pusha
imul
mov
mov
pop
lock
cmp
ljmp
test
ret
loope
inc
imul
cmp
add
adc
mov
leave
mov
sub
sub
add
loopne
xor
jo
or
and
movsl
jb
mov
pusha
das
inc
stc
sbb
leave
inc
jno
dec
or
add
shrl
sbb
cwtl
ret
or
sbb
jp
int3
ret
gs
lock
xor
roll
mov
push
add
cmp
pop
add
sub
jg
inc
scas
inc
and
leave
pop
add
add
mov
lods
xlat
dec
pop
mov
jo
dec
mov
cmpl
test
inc
xor
sahf
call
mov
daa
sti
loop
hlt
int3
jo
xchg
add
push
mov
ret
dec
jbe
les
in
fs
pop
shl
fwait
call
cmp
stos
dec
arpl
fbld
push
mull
subb
imulb
aas
data16
inc
sar
add
ret
xchg
mov
adc
cmp
sub
add
adc
add
sub
and
xor
les
popf
aam
add
xor
xchg
add
js
fbld
add
mov
fistpl
int
cld
in
cli
add
push
fisttpll
cld
mov
dec
hlt
jno
cltd
lods
mov
jl
add
mov
rcll
rol
xor
js
cwtl
add
push
out
jl
shlb
aam
add
enter
adc
lret
sbb
cwtl
fadds
rcrb
ja
push
pushf
inc
cltd
pop
xor
inc
mov
fisubl
insb
dec
or
roll
sub
adc
mov
mov
les
mov
add
gs
sar
add
addb
sub
dec
jno
add
call
dec
fldl
push
xchg
nop
xor
in
pop
stos
push
dec
cld
aaa
mov
sbb
xor
mov
push
dec
rolb
leave
stos
and
adc
add
push
out
shll
jb
and
cmpsl
add
adc
sbb
push
jge
lock
or
loopne
add
and
xchg
and
rclb
xor
lds
push
rclb
daa
cmc
mov
mov
loope
mov
fucomip
adcb
fsubs
int3
cltd
add
adc
jne
pop
cli
push
mov
mov
mov
pushf
sub
fsubs
xchg
call
or
into
out
mov
neg
sti
push
imul
adc
cld
add
adc
push
loopne
inc
cmc
outsl
xchg
lods
loope
sar
insl
add
test
cmpb
xchg
add
jmp
pop
jne
cmp
lods
es
xor
sbb
add
hlt
push
dec
shlb
dec
push
in
or
pop
fs
insl
pop
loopne
and
inc
add
inc
fisubrl
add
ljmp
add
shrb
add
stos
or
test
xchg
inc
mov
es
pusha
cwtl
adc
inc
xchg
sti
jecxz
movl
into
xchg
add
jg
ret
dec
in
inc
mov
push
pop
ret
jnp
lock
xchg
push
dec
push
cmp
adc
repnz
gs
imul
cmp
add
ds
mov
addl
push
cmp
outsb
in
out
dec
lods
sub
sub
or
or
jo
xchg
outsb
pop
lods
inc
and
push
inc
add
out
or
stc
repnz
push
adc
or
mov
sub
stc
mov
aaa
aam
push
pusha
gs
fldl
outsl
rclb
xor
and
aad
shl
shll
pop
mov
and
add
cwtl
ret
and
outsb
in
cmp
add
imul
ret
add
fadds
add
shll
and
out
jbe
add
sbb
repnz
mov
or
jmp
xchg
jns
or
xor
or
out
xor
loope
add
scas
sub
sbb
dec
divl
dec
test
je
mov
data16
in
and
add
test
or
or
jae
sub
std
push
subl
dec
neg
shlb
add
inc
add
dec
mov
popa
push
cld
in
aas
add
adc
jp
call
loopne
cmp
test
push
jns
rcrb
pop
xchg
popf
repz
sbb
or
out
in
mov
and
add
mov
fildl
sbb
dec
in
add
fnstcw
lds
cmp
aaa
jns
or
pop
mov
mov
test
mov
lock
mov
aam
adc
or
add
sbb
add
fisttps
jl
inc
in
shrl
aaa
cmp
dec
roll
rcrb
pop
mov
addl
dec
and
popa
xlat
add
pushf
mov
add
ds
lret
lea
push
mov
sbb
pop
adc
in
ror
push
mov
jg
add
push
add
mov
pop
out
lock
ror
push
adc
xchg
sub
push
sub
inc
push
loope
dec
in
repnz
data16
push
idivb
mov
outsl
imul
fstps
mov
xorb
outsl
or
mov
cmp
adc
sbb
or
adc
push
jge
and
cmp
mov
dec
mov
pushf
add
jns
xchg
dec
sub
js
push
sbbl
in
in
stos
mov
stc
lea
pop
cmp
mov
aas
xor
cmp
aam
add
lods
testl
cmp
adc
cmp
in
pop
mov
xor
int3
notl
popl
push
cmp
sub
pop
xor
fists
xor
add
in
sub
sub
mov
xchg
sbb
push
cld
outsl
and
aad
mov
or
or
inc
inc
aam
jns
cs
add
cli
out
xor
into
hlt
add
inc
push
push
mov
and
outsb
divb
lods
sub
scas
mov
and
in
add
fs
mov
not
add
mov
out
push
dec
mov
add
mov
test
xchg
scas
dec
mov
add
push
add
dec
xor
incb
push
mov
jmp
test
xor
lea
cmp
in
pop
mov
aas
or
pusha
sbb
add
adc
xor
xor
xlat
mov
or
jl
jae
lods
add
mov
popa
ss
mov
or
mov
cmp
pusha
dec
dec
pop
push
rolb
filds
add
inc
push
adc
sbb
fdivrl
sahf
arpl
out
sub
out
push
add
filds
add
xor
xchg
jg
cld
inc
mov
orb
mov
aaa
daa
xor
sub
add
adc
imul
mov
inc
insl
sbb
pop
rcll
les
pushf
in
and
add
js
xor
sahf
mov
and
cmp
popa
sbb
pop
pop
adc
roll
add
sub
fisttpll
xchg
sahf
xlat
and
nop
add
aad
add
int
lds
add
fcoms
loop
sti
sbb
or
subb
fisttpl
lods
inc
mov
add
fadds
adc
movsb
mov
cmpsl
jo
add
in
sbb
notb
out
pop
add
dec
subb
push
lock
pusha
jb
mov
fsubrl
cmp
xorb
xchg
movsl
cmp
fadd
cmp
jbe
js
mov
shll
lods
mov
sbb
sarb
testb
dec
les
xor
xchg
test
pop
pop
add
jl
cmp
cbtw
pop
and
shrb
sub
dec
mov
in
sbb
or
popa
sub
test
js
in
mov
cld
adc
aad
test
adc
negl
adc
push
aam
mov
syscall
popa
jbe
add
xchg
in
cmp
xchg
push
aas
mov
or
jae
xchg
hlt
mov
xorl
add
mul
dec
lea
adc
adc
or
int3
or
add
sub
mov
outsl
inc
jns
mov
popf
js
add
pushf
fwait
test
sub
jecxz
gs
enter
sub
scas
push
insb
add
xchg
cmc
add
bound
sub
aaa
sbb
xchg
inc
lods
movsb
and
rorl
dec
cmpsb
mov
xlat
insl
sbb
incb
incl
aad
hlt
test
add
in
add
in
mov
and
inc
push
cmp
in
mov
inc
sub
inc
movsl
or
mov
jmp
adc
add
pop
inc
inc
and
jnp
mulb
cwtl
cwtl
adc
ja
add
sub
jb
in
xchg
mov
in
pop
out
sbb
aas
jb
sub
sub
or
daa
and
outsb
dec
cmp
pop
lcall
in
out
jb
jg
lcall
daa
dec
pop
jle
jns
sbb
cmp
in
repz
movsb
ljmp
sbb
nop
movsb
xor
or
jne
xor
addb
cmp
inc
mov
cmc
cmp
jl
inc
add
movsb
es
call
clc
and
aam
shr
aas
in
mov
cwtl
testl
insl
in
add
jecxz
aam
popa
lock
add
aam
fs
xor
xchg
test
in
jle
std
pop
pcmpgtd
addr16
sahf
sbb
out
push
and
out
jecxz
mov
stos
cmp
addr16
jno
hlt
sub
loope
rcr
dec
pop
add
adc
daa
mov
mov
sbb
loope
push
dec
in
loope
mov
or
jmp
adc
sbb
dec
jge
mov
inc
xchg
fdivs
cs
stc
xchg
inc
in
into
in
daa
mov
nop
mov
mov
mov
cmp
pop
add
das
pop
test
inc
cmp
mov
out
sahf
push
aas
and
cmp
test
aam
dec
or
jns
jne
cmp
rcll
fdivs
jnp
jae
test
add
test
sbb
enter
mov
stc
jp
push
push
push
call
inc
rcrb
xor
add
test
dec
mov
pop
imul
jb
cmp
nop
nop
and
les
out
lcall
jmp
hlt
xchg
sub
shl
std
or
aam
mov
add
jnp
jle
rorl
adc
push
xor
pop
outsl
nop
ljmp
and
fildl
jge
and
adc
pusha
sbbb
sub
stc
es
push
pop
push
jmp
pop
mov
adc
xchg
incl
cmpsl
inc
or
add
xchg
mov
jae
shlb
add
cltd
cmpsb
ficoml
dec
mov
pop
or
scas
les
les
mov
add
sbb
pop
popa
dec
dec
fcoms
inc
clc
and
adc
fcoms
add
test
cmp
sbb
xchg
pushf
push
loope
adc
and
enter
rcr
cs
insl
aad
out
add
adc
popf
inc
mov
pop
inc
jnp
push
lret
mov
and
movsb
fsubs
scas
jl
or
sarl
pop
xchg
into
scas
fwait
adc
mov
mov
dec
loop
and
cmc
sub
adc
sbb
pop
test
sbb
addb
adc
push
aas
aas
jae
dec
in
lods
adc
shlb
ljmp
push
aam
daa
add
push
ja
sti
mov
dec
addr16
clc
sbb
and
insb
mov
andl
jp
imul
add
dec
mov
mov
push
test
xchg
fidivs
pop
jb
adc
outsl
imul
jo
or
push
fiaddl
scas
in
or
js
popf
pop
sarb
jae
aam
push
jl
loopne
out
sbb
pop
adc
inc
outsb
mov
call
and
and
ja
pushf
xchg
rorb
incb
ror
in
push
jge
add
adc
mov
jb
lock
add
mov
jae
or
add
push
jo
repz
addr16
cld
insl
pop
xorl
aas
xor
or
adc
push
inc
lahf
add
or
nop
addb
les
dec
dec
sub
sub
pushf
clc
sbb
adc
loope
and
sti
dec
add
cmp
and
sarb
pop
inc
add
mov
push
xor
and
and
arpl
cwtl
xor
bound
aad
inc
hlt
add
adc
and
int3
int
jno
cmp
subl
sbb
nop
mov
jmp
xor
xor
test
adc
fdivr
shl
hlt
cmovs
or
sub
sub
loope
aam
cmp
add
push
add
xchg
mov
cli
push
fsubs
mov
clc
pop
imul
dec
add
lods
or
xchg
cmp
push
sub
sbb
das
imulb
pop
loopne
mov
inc
shl
lret
add
dec
sbb
in
or
push
and
pusha
aaa
inc
mov
inc
add
jno
jb
fs
adc
stos
testl
sarb
xor
xchg
test
and
adc
add
mov
rorl
cld
aad
add
out
mov
push
add
aad
mov
or
add
push
pop
sti
mov
mov
jo
orb
test
add
mov
and
pop
pop
test
sub
pop
es
loop
cmpsl
push
shr
lfs
in
dec
repnz
enter
rolb
in
hlt
js
mov
jg
add
int
lock
inc
sbb
imul
dec
cmp
jbe
nop
xchg
movsl
push
add
test
sub
dec
sub
iret
popa
inc
push
imul
rolb
inc
sbb
outsb
and
dec
xor
mov
pop
in
push
shrb
fcmovnbe
addb
or
repz
cs
pop
xchg
aam
xchg
das
inc
cmp
ja
js
add
mov
push
fiaddl
sub
enter
cmc
and
dec
aas
sub
adc
add
data16
push
in
dec
and
mov
stc
jae
fs
sti
jne
pop
pop
lea
popa
pop
dec
ret
sub
adc
add
aad
pop
mov
loopne
sbb
aam
sbb
mov
push
mov
leave
add
push
mov
jmp
in
add
sbb
test
in
push
pop
out
sub
test
pusha
mov
leave
mov
mov
sti
add
and
rol
add
or
movsl
ret
mov
dec
jno
rcrl
ret
dec
add
lret
xor
xlat
xchg
adc
sub
pop
push
aaa
divb
mov
rcl
xchg
or
fptan
add
rclb
sbb
in
xor
push
cmp
xlat
sub
les
xchg
lds
ljmp
rolb
shll
inc
cmp
sbb
add
orl
dec
test
or
xlat
xchg
add
jnp
mov
jae
mov
pop
cmp
in
ja
cmp
inc
mov
negl
dec
in
out
cmp
sub
outsb
fmull
pop
and
stos
int3
inc
inc
test
sbb
sub
push
pop
dec
mov
mov
out
outsb
idivb
lock
out
xchg
adc
add
add
ret
sbb
add
sbb
push
or
int3
mov
add
xor
outsl
sbb
hlt
fs
pusha
push
mov
jns
cmp
out
subb
imul
xlat
das
gs
loopne
or
lahf
pop
cmp
jl
sbb
inc
pop
dec
mov
jmp
pop
xor
mov
push
push
bound
inc
sti
adc
inc
lods
add
mov
xchg
mov
fwait
add
repnz
ljmp
les
nop
ret
mov
into
arpl
cmp
lock
pop
push
sbb
pop
das
mov
fdivr
dec
outsb
stos
clc
push
push
repnz
cld
sub
ds
sbbb
push
test
add
test
movsb
mov
inc
add
out
in
or
loopne
pop
mov
push
fsub
aas
hlt
push
add
dec
mov
repz
pop
test
sbbb
and
loope
mov
xchg
push
imul
mov
aad
mov
jmp
mov
pop
and
sub
jae
add
dec
mov
cwtl
adc
rcr
out
jl
and
aas
rcrb
inc
push
xchg
mov
test
dec
cmpsl
cwtl
lock
add
dec
in
movzbl
or
sbb
sbb
lcall
fmuls
cmpsl
add
test
popa
clc
or
loope
cli
pop
xor
xor
adc
lods
or
dec
and
sbb
mov
adc
in
add
push
adc
xor
ss
add
mov
xorl
adc
test
iret
add
or
xor
add
xchg
ja
cmp
add
xorps
aas
in
rorb
xchg
test
add
cmc
mov
cmc
adcl
adc
add
cwtl
outsb
xor
jno
cs
push
test
xlat
les
mov
or
iret
fisubl
stc
add
pop
mov
or
call
hlt
or
sahf
lock
xchg
dec
jmp
fs
dec
daa
add
mov
fwait
inc
xadd
jp
mov
pop
dec
and
xor
cmp
les
xorl
push
cmpsb
les
in
add
mov
xchg
test
adc
in
mov
adc
mov
dec
fadds
in
jle
xchg
jo
xchg
mov
adc
mov
mov
push
pop
push
jne
add
cmpsl
adc
rcl
xor
pop
mov
jno
js
add
and
loopne
push
and
iret
enter
lods
dec
fs
faddl
insb
add
in
and
pop
dec
mov
shlb
andl
shlb
mov
sub
inc
inc
push
sbbb
pop
add
xchg
outsl
repnz
js
fabs
or
adc
popf
dec
mov
flds
mov
call
cmpsb
add
js
ds
xor
pop
leave
adcl
jp
mov
shlb
rorb
fimull
xor
in
inc
insb
lods
and
and
cwtl
jbe
dec
jnp
or
movsb
imul
mov
loopne
add
dec
mov
out
jle
cmp
loope
test
popa
pop
cwtl
in
sub
les
je
hlt
cmp
movsl
add
xchg
push
lahf
mov
add
pushf
out
hlt
add
ljmp
mov
add
hlt
and
sbb
add
add
sbb
mov
inc
cmp
incb
and
mov
and
nop
test
ret
xchg
enter
test
sbb
aaa
cs
mov
dec
or
pop
add
out
out
sub
adc
fmuls
icebp
fs
or
push
add
filds
clc
jo
adc
push
andb
mov
inc
sub
jmp
cmp
adc
fstpl
pusha
and
popa
loop
dec
call
jno
loopne
fcomps
add
xchg
ja
or
adc
cmp
sbb
sbb
mov
mov
jl
cmp
xor
adc
sub
hlt
daa
repnz
mov
in
sbb
mov
jle
imul
push
cmpsb
xor
shlb
in
add
lret
cwtl
out
add
lock
or
or
fstl
mov
test
pop
lods
sub
mov
cmp
cld
add
push
out
push
cwtl
adc
mov
or
mov
mov
addr16
sbbb
xchg
lods
arpl
mov
lahf
aaa
jae
xchg
lock
xchg
fsubr
sbb
push
test
sbb
out
es
scas
call
pop
test
inc
pop
jbe
mov
xchg
insb
orb
push
xchg
test
sub
mov
add
pop
push
adc
fcompp
mov
rcl
shll
xor
cwtl
mov
sahf
adc
das
cmpsl
cmp
xchg
ds
cwtl
xchg
pop
int3
xlat
popa
add
fdivrl
out
jns
or
adc
and
or
xor
adc
and
ret
iret
inc
addl
xor
call
or
cmpsb
mov
jb
xor
xchg
and
push
sub
xchg
xorl
xchg
pop
rorl
cmc
lret
mov
outsb
leave
pop
dec
add
xor
add
lret
ss
faddl
stc
mov
lock
in
xchg
rolb
enter
mov
iret
stc
inc
jb
insb
adc
add
push
pusha
hlt
test
js
subl
dec
out
cmc
mov
rcrb
ss
push
jo
xor
mov
test
pusha
sahf
testb
sub
imul
adc
popa
fbld
addr16
inc
sbb
jmp
lds
add
sub
repz
adc
mov
pop
mov
add
call
in
aam
cmp
pop
test
sub
stc
pop
mov
mov
daa
notl
mov
insb
push
add
cmpsb
mov
cld
cwtl
push
imul
lret
icebp
sbb
subb
cmp
xchg
jno
or
mov
lret
xchg
sbb
push
std
cmp
adc
add
mov
in
xor
xchg
pop
sub
nop
xor
imul
inc
add
arpl
testl
pushf
mov
mov
pop
push
sarl
aam
inc
or
lock
cmp
inc
mov
xchg
xchg
enter
jge
inc
or
xor
pusha
loop
out
into
cld
lahf
pop
dec
pop
in
rorl
dec
mov
inc
inc
lods
loop
add
xchg
push
mov
xchg
mov
test
add
aaa
xchg
and
push
or
pusha
sub
inc
out
add
loope
repz
js
xor
repnz
cli
xchg
cmp
idivb
xchg
sbbb
or
or
js
mov
enter
div
aam
add
jmp
dec
pushf
cmpsb
mov
xor
mov
sbb
push
outsb
shrb
lods
in
inc
add
mov
mov
sub
add
cmp
popf
add
fdivr
sub
add
mov
loop
ficoml
mov
cmc
cmpb
pop
mov
jae
or
cmp
add
jns
nop
jg
sarb
mov
inc
stc
add
pushf
movsl
lret
lock
xchg
add
cltd
mov
mov
mull
repz
mov
ja
or
push
test
push
cmp
cmp
ret
and
mov
and
fsubr
nop
mov
dec
add
mov
push
or
sbbl
mov
and
fdivrl
shlb
subl
sbb
add
mov
data16
sbb
add
jno
addr16
and
pop
aaa
arpl
fbld
loope
test
xchg
and
push
dec
cwtl
rolb
negl
movsb
out
scas
loopne
and
cmc
mov
out
in
sub
inc
mov
jnp
add
mov
pop
scas
movlhps
mov
shl
jle
test
fmuls
sbb
and
push
mov
icebp
addr16
rolb
sahf
and
jg
insl
inc
ret
sub
addb
call
in
mov
daa
pusha
dec
inc
ds
sbbb
out
cmp
or
pop
in
jbe
js
adcb
icebp
cmp
and
mov
movsb
repz
stc
or
adc
ja
xor
or
pop
dec
bound
fidivs
ds
xorb
cmpsb
lock
xchg
loopne
or
push
pop
pushf
and
push
mov
lret
push
add
adc
mov
mov
jns
inc
xor
test
stos
adc
xchg
mov
lret
or
cwtl
loopne
xor
push
lss
adcb
add
scas
nop
rorb
jmp
add
push
fsubl
jmp
add
notl
dec
pop
mov
movsb
loope
inc
out
imulb
push
jo
mov
xor
pushf
js
orb
enter
pop
test
and
aad
cmpb
fstpl
lods
push
lock
nop
pop
and
outsb
xor
pop
flds
jne
add
jg
cld
mov
mov
std
add
aam
adc
lahf
ds
or
in
sub
inc
dec
xor
insb
lock
stos
gs
xchg
pop
jmp
das
push
out
sbb
add
add
pop
les
pop
rorb
add
pushf
lahf
and
cmp
aam
push
pop
push
enter
addr16
or
mov
nop
fdivr
cmpsb
cmp
or
xchg
mov
fadds
add
push
xchg
pop
mov
cmc
xchg
adc
mov
fisttpl
lcall
lret
jnp
and
inc
mov
test
sbb
jecxz
mov
or
sub
clc
or
adc
inc
mov
mov
jae
mov
and
jo
sub
jl
mov
dec
je
fstp
fmuls
js
xor
jo
sub
xor
jle
enter
fldenv
idivl
jl
pop
int
inc
mov
adc
mov
fdivl
ljmp
mov
pop
sbb
add
jno
add
outsb
lcall
mov
adc
add
cld
std
hlt
fstpt
or
ror
add
xchg
pop
dec
mov
sbb
add
add
das
add
neg
inc
or
pop
fwait
loope
repz
mov
xchg
pusha
roll
in
pop
lods
fistpll
test
cmp
mov
jne
sbb
in
cwtl
hlt
inc
mov
dec
insb
push
ljmp
push
mov
add
add
or
imul
outsl
jg
out
call
aaa
or
orl
pop
sub
fldl
rol
mov
mov
test
adc
cwtl
and
pop
add
adc
jbe
sbb
out
jmp
xchg
sub
cs
push
sub
lock
into
or
fisttpl
mov
je
fists
xor
js
add
jp
mov
push
nop
xor
ror
push
xlat
test
movl
popf
adc
neg
mov
xchg
inc
sbb
aaa
into
outsb
aad
add
scas
imul
enter
add
pop
adc
jb
mov
cmpb
loopne
xor
cltd
dec
add
bswap
jns
and
dec
pop
cmp
sbb
in
out
sbb
in
test
pminsw
pop
pop
jbe
push
cmp
ret
add
bound
dec
stc
addb
lret
pushf
andb
mov
stc
shrd
or
xor
test
fxch
push
test
push
add
fldt
dec
add
push
mov
ja
outsb
add
xor
pop
dec
lods
add
sub
add
jmp
sub
and
jmp
roll
or
push
push
and
in
cmpsl
iret
push
adc
adc
js
orb
test
xor
idivl
call
int3
adc
lahf
nop
add
loope
sarl
cmpsl
push
jbe
in
test
nop
loopne
imul
add
ret
dec
adc
jo
lret
cwtl
adc
outsl
push
sub
pop
es
add
pop
adc
xchg
movl
jns
push
dec
test
fadd
nop
cmpsl
and
loope
nop
lock
cmp
cmp
adc
mov
int
in
dec
dec
cmp
pop
out
ss
popa
and
ret
mov
data16
pop
mov
daa
cmp
mov
sub
dec
outsb
clc
push
and
dec
dec
addl
iret
cli
dec
test
aam
mov
add
dec
mov
rolb
mov
push
stc
fs
sahf
lock
push
int
sub
adc
dec
push
lahf
fldl
in
jnp
add
ret
sub
hlt
orb
movsb
orb
cld
lret
add
push
inc
mov
cmp
fsubl
aaa
cmp
les
and
fsubl
loopne
inc
adc
adc
push
xor
adc
sbb
cs
in
inc
test
lret
mov
or
dec
or
and
jl
jmp
add
hlt
sbb
adc
sbb
movsl
add
push
lods
add
popa
mov
or
loopne
gs
add
push
jnp
arpl
inc
les
outsb
mov
call
add
mov
push
jb
lods
out
shlb
mov
inc
mov
xchg
mov
add
pusha
inc
pop
dec
bound
cmc
mov
add
adc
idivl
cs
cmp
and
or
inc
fs
inc
fidivrl
xor
aad
fisubrs
fldt
rorl
aam
jno
lahf
sub
call
mov
lock
mov
jb
xorb
insl
aas
push
out
pop
jmp
sahf
xchg
add
es
mov
adc
out
rol
add
ljmp
rolb
das
cwtl
jns
mov
add
mov
mov
cmpsb
xchg
in
std
fwait
adc
lods
ss
cmp
xor
sbb
imul
and
cmp
mov
int3
sbb
shr
sbb
add
aas
mov
xlat
dec
aam
dec
leave
in
in
or
push
outsb
dec
inc
mov
xchg
add
test
jae
add
cmp
mov
data16
ror
sub
mov
imul
je
pop
push
out
rolb
add
pushf
out
jle
pop
mov
pop
jns
jne
pop
repnz
sub
and
add
sub
sbb
xchg
lock
fildl
aad
test
test
pop
adc
test
lea
out
gs
clc
push
fildll
add
repz
and
jmp
or
jecxz
adc
std
cs
addb
add
int3
sub
pusha
lret
mov
and
add
je
jae
stos
and
cmc
loope
call
adcb
andl
out
or
adc
mov
push
repnz
int
and
in
mov
adc
mov
into
mov
stos
add
jge
sarb
or
iret
cmpsb
mov
ljmp
std
or
and
add
xor
pop
adc
test
add
mov
or
dec
mov
scas
jae
add
mov
dec
cmp
jno
and
mov
add
enter
xchg
ret
and
and
dec
push
add
hlt
cmp
xor
and
add
sub
push
dec
lea
mov
sbb
push
adc
sub
mov
jecxz
add
mov
xlat
sbb
add
jns
or
xchg
lahf
sbb
pop
psubq
inc
mov
add
or
mov
and
or
and
pop
repnz
pop
add
pusha
cmp
movsl
adc
push
scas
add
xchg
adc
inc
xchg
pop
add
mov
pusha
pop
jl
and
mov
xchg
mov
add
shl
jge
lret
into
test
cli
push
sbb
int3
daa
loop
lea
fists
pop
out
stos
ljmp
and
xchg
out
scas
out
lea
mov
mov
pop
lods
cmp
mov
add
ret
test
and
dec
inc
cld
lcall
adc
and
stos
adcb
xorl
fwait
pop
xor
pop
jg
icebp
dec
push
pop
xchg
outsb
mov
jecxz
cmpsb
inc
mov
mov
and
xchg
cmp
dec
inc
add
inc
mov
add
dec
xchg
sbb
pop
jmp
mov
enter
repnz
mov
dec
cmp
addl
popf
inc
mov
add
inc
mov
ror
ljmp
in
ret
add
loopne
cmp
repnz
mov
mov
es
fiaddl
int
adc
inc
out
push
fidivrs
inc
add
bound
ss
nop
dec
add
mov
pop
sbb
inc
mov
push
test
cltd
lahf
fldenv
dec
xor
or
call
add
mov
xor
inc
leave
jp
test
xchg
pushf
add
cmp
xchg
push
xlat
xchg
add
push
outsl
sub
into
jno
or
push
mov
int
leave
adc
ljmp
inc
popf
out
or
lods
cmpsl
icebp
mov
or
push
in
push
pusha
enter
out
leave
jnp
inc
cli
pop
mov
flds
into
mov
repz
jle
jns
add
in
and
sub
cmp
add
fwait
push
rorb
add
add
jo
or
out
cmp
xor
hlt
scas
push
aad
repz
iret
inc
ret
mov
ja
xchg
ljmp
scas
loopne
repz
jle
nop
je
mov
pop
sahf
xchg
cs
xor
into
rcl
fsubrl
push
insl
das
imul
lods
test
jb
add
cmpsl
popl
int3
xchg
aaa
xchg
mov
add
jge
les
loop
jl
out
push
sub
mov
shll
or
sub
push
add
call
shrb
pusha
add
pop
jne
loopne
aam
punpckhdq
cmpsb
scas
jb
lcall
rcl
pop
into
sbb
jb
push
cld
aad
into
jmp
mov
cmpsl
sub
and
cli
add
mov
cmp
or
call
lea
inc
sar
cmp
xchg
jmp
outsl
rorl
sti
add
cmp
push
push
push
or
loop
js
cmp
dec
and
xor
cmp
clc
or
insl
fnsave
push
push
popf
repnz
cmp
stos
sub
push
jge
push
in
int
push
xor
je
cltd
ret
cmpsl
xorb
lods
and
inc
cmp
push
jg
test
pusha
sbbl
mov
add
ret
mov
mov
ja
iret
mov
push
push
stos
sahf
add
fisttps
cwtl
test
enter
daa
sbb
xchg
arpl
andb
sub
ja
popl
add
pop
bound
aas
popa
inc
call
loopne
or
fiadds
add
cmc
xchg
lds
rorb
xchg
fisubs
sub
push
sub
sbb
jb
pusha
inc
add
les
mov
xor
loopne
add
mov
inc
sbb
test
jecxz
adc
pop
movsl
test
mov
inc
xor
add
pop
mov
fwait
and
flds
dec
pushl
in
int
or
adc
test
loopne
leave
adc
add
push
sub
add
lret
push
pop
or
jle
mov
push
and
xor
xchg
adc
jns
mov
add
xchg
add
ficompl
add
icebp
mov
mov
jp
in
mov
nop
mov
cld
inc
out
xchg
add
xlat
jnp
or
pop
add
pusha
mov
jecxz
cld
lods
mov
cmpsl
lret
dec
aas
add
sbb
jbe
mov
hlt
push
or
arpl
inc
add
pop
xchg
jmp
dec
xchg
xor
mov
movsb
repnz
pushl
ffreep
cmp
and
mov
add
mov
adc
jl
aam
xchg
adc
xchg
mov
bound
push
jb
add
push
jae
adc
mov
mov
leave
add
cli
push
xchg
add
cmp
jle
pop
adc
or
movb
jmp
jo
insb
pop
fstpl
jge
xchg
subb
pop
add
pop
mov
dec
into
mov
jge
shrb
and
mov
cmc
add
repz
rorl
xor
dec
jb
arpl
or
or
fsubrp
movsb
add
ja
outsl
dec
add
gs
imul
sbb
add
movsb
lahf
add
cmpsl
fildll
pop
aaa
loopne
cmp
or
cmp
rorb
mov
push
push
lock
cmp
add
add
mov
mov
mov
test
dec
ljmp
xchg
or
dec
adcb
fistl
inc
rcrb
out
das
push
rol
in
push
cmc
cmp
stc
faddl
ret
cmp
add
or
mov
add
adc
pop
das
nop
inc
add
idiv
xchg
roll
add
xor
mov
jle
add
aad
push
add
jmp
sbb
std
and
pop
fwait
dec
add
add
out
adc
mov
addb
mov
push
shlb
xchg
sub
jo
xorb
cld
sbb
jmp
movb
xor
push
mov
sbb
cmpsl
std
orb
mov
fsubl
inc
pop
add
mov
mov
push
fwait
in
add
add
mov
mov
add
cmp
in
add
js
fiaddl
movsl
lcall
cmc
rep
xchg
jl
jp
fdivr
lcall
adc
adc
add
das
xor
lcall
gs
sbb
jecxz
xchg
sbb
xor
push
mov
imul
or
push
movsl
dec
out
loopne
cmc
sub
inc
xchg
roll
shr
mov
arpl
pusha
mov
fcoml
xor
mov
pop
sbb
sarb
addb
movsb
mov
sbb
push
jp
into
addr16
xchg
cli
cmp
in
add
inc
adc
js
les
jmp
mov
push
js
add
lods
pop
pop
inc
jmp
and
cld
or
jb
lcall
rorb
xchg
mov
push
int3
fidivrl
fmuls
add
test
xor
hlt
andb
mov
ror
and
movsl
or
gs
fildl
enter
jmp
jb
enter
xorl
or
cmc
clc
xor
arpl
adc
lods
adc
divb
es
test
inc
mov
and
arpl
or
add
inc
inc
loopne
testl
int3
outsl
lahf
add
mov
shrb
mov
dec
ljmp
sbb
or
into
xor
cmp
add
push
adc
sub
cmp
inc
adc
repz
loop
mov
shlb
adc
les
inc
mov
add
sub
mov
mov
cmp
cltd
add
cwtl
nopl
loop
ljmp
addr16
add
dec
leave
es
aaa
adc
divb
fsubrs
and
jns
cmp
addr16
popf
test
scas
std
add
jmp
iret
sarb
pop
mov
xor
js
bound
or
pusha
das
pop
inc
adc
mov
ret
add
xor
scas
loope
test
sbb
cmp
inc
rcll
pop
jo
lahf
pop
dec
jg
dec
mov
mov
inc
into
jno
imul
mov
flds
dec
cmpb
sbb
test
pop
sarl
enter
inc
fbld
add
jo
pop
inc
mov
rolb
mov
aam
sub
push
pop
mov
subb
in
pop
popl
push
in
jle
pusha
push
repnz
test
add
cmp
ja
pop
add
jle
pop
outsb
adcb
mov
in
jp
test
std
mov
shrw
jo
and
add
dec
int
jns
hlt
add
sub
add
out
mov
jbe
add
xchg
ret
test
ss
repnz
sub
jl
sbb
pusha
jp
fimull
xor
lret
sbbl
mov
adc
shll
pushl
lret
sub
lods
add
mov
aaa
pop
dec
dec
lret
add
cli
mov
pop
dec
jp
rorb
lret
push
pushf
ljmp
cld
cwtl
inc
pop
pop
icebp
into
sahf
loop
or
in
bound
xchg
scas
add
dec
fdivr
dec
rcl
shll
add
mov
lret
xor
fmuls
rolb
adc
mov
leave
mov
cmp
inc
jbe
enter
lods
lahf
pop
in
push
xor
orb
jle
lcall
add
xchg
cs
add
aad
mov
mov
int3
xor
mov
cmp
sbb
cmp
xchg
rol
jo
adc
adc
out
cmp
daa
xchg
aam
into
and
sub
jp
xor
add
call
and
int3
ficomps
jnp
pop
inc
xor
enterw
xchg
popl
mov
enter
mov
in
xchg
push
mov
add
fsubl
cltd
shl
ja
into
mov
push
jl
mov
iret
sarb
mov
mov
add
sbb
iret
frstor
xchg
in
dec
das
pop
mov
cwtl
and
out
adc
mov
pop
int
add
cmp
mov
push
push
outsb
push
or
test
popa
sbb
sub
inc
inc
loop
push
inc
cld
pop
cwtl
mov
add
mov
aas
mov
push
pop
xor
and
jle
adcb
mov
xor
xchg
and
mov
sbb
lods
add
adc
sarb
sub
sbb
add
popa
popf
xor
add
mov
pop
ret
arpl
jns
mov
sbbl
xchg
out
xchg
adc
scas
hlt
sbbb
jg
je
loop
or
push
ret
add
rcl
leave
and
arpl
adc
fistps
adc
lret
lea
int3
cmp
imul
add
arpl
orb
mov
jns
mov
xchg
les
sbb
pusha
cli
js
jge
scas
push
push
enter
andb
mov
sub
add
daa
cmp
loope
ror
push
mov
add
mov
mov
pop
ret
iret
sbb
add
rorl
in
imul
fnsave
ss
and
pop
or
sub
loopne
out
xchg
and
or
jnp
adc
jo
movsl
popf
int
fistl
push
and
ret
add
adc
fimuls
add
cmp
ja,pn
test
mov
sbb
fimull
sub
in
ud2
mov
loopne
push
and
ror
pusha
iret
cmp
in
pop
in
adc
ljmp
repnz
sbbb
rolb
or
jp
cmpsb
ret
push
or
inc
cmp
sarb
hlt
pop
call
xor
xchg
adc
mov
imul
mov
or
xor
wbinvd
push
and
bound
call
mov
lret
rcrb
pop
add
clc
xchg
aad
jmp
push
pop
fwait
sahf
pop
jno
adcb
mov
iret
ljmp
add
int3
sahf
nop
inc
adc
cmp
notb
inc
into
xor
and
cmpsl
lcall
cmp
adc
add
pop
jle
mov
outsl
sbb
mov
add
xor
mov
ja
hlt
add
sub
movsl
stos
fs
mov
dec
pop
test
pop
pop
sub
dec
xchg
nop
jmp
push
mov
std
jbe
ret
and
je
rolb
aas
cltd
paddusw
sbb
enter
inc
jne
add
aas
push
add
mov
cwtl
xor
lods
into
std
outsb
mov
fdivp
in
add
aaa
push
out
loopne
test
test
pop
xor
add
dec
js
sti
mov
xor
mov
pop
adc
nop
enter
push
outsl
xchg
xchg
in
add
sbb
iret
mov
test
je
add
xor
or
out
pop
lret
test
imul
push
call
loopne
sti
icebp
jecxz
pop
testb
mov
dec
sbb
xor
inc
hlt
int3
pop
ss
mov
add
inc
inc
repnz
shr
lods
add
pushf
aad
add
stc
push
sahf
inc
cwtl
notl
insb
push
imul
inc
es
dec
add
and
sub
cmp
dec
icebp
cltd
insb
bound
ds
pop
add
sbb
in
xchg
inc
ss
fisttps
cmc
mov
insb
push
cmp
test
cwtl
lret
push
jnp
fildl
cwtl
and
test
sub
es
outsl
mov
add
cli
or
or
add
daa
add
aaa
lahf
pop
sahf
sbb
subb
xor
fs
xor
stos
xchg
or
repz
xor
mov
scas
adc
cmpsb
stc
and
add
sysenter
sbb
push
add
lods
inc
push
enter
xor
and
cwtl
clc
stos
and
or
test
loope
sahf
pop
es
sub
incb
push
shld
or
mov
scas
mov
ficomps
jecxz
pop
repz
xchg
and
xchg
xchg
incb
adc
sbb
mov
add
repz
mov
dec
mov
rcr
shl
xchg
jo
mov
stos
pusha
out
and
sub
inc
decl
ljmp
cmp
pop
or
pushf
adc
mov
adc
sbb
dec
xchg
je
pop
xchg
cmp
xor
xchg
imul
fwait
pop
mov
fcompl
sbb
loop
mov
xchg
pop
scas
mov
cmp
insb
mov
jno
jg
adc
mov
sbb
push
pop
scas
rclb
mov
inc
movsl
sahf
add
jns
cli
pop
add
ja
mov
push
mov
cmp
mov
lods
inc
sbb
rolb
int3
jmp
dec
loop
faddl
hlt
add
dec
iret
pop
push
movsl
add
xor
pusha
les
adc
add
mov
push
pop
mov
add
das
nop
jle
aam
or
sub
in
inc
sbb
sub
decb
add
or
sbb
sahf
cmp
push
inc
mov
loopne
sarb
cmp
xorb
testb
sub
cld
popf
xor
insl
push
mov
pop
ja
sbb
cs
test
fbld
lock
pop
add
loope
clc
dec
dec
andb
adc
in
pop
gs
sahf
sub
or
adc
cwtl
add
mov
sahf
jle
imul
out
adc
pop
adcb
mov
cwtl
shrl
add
inc
adc
pop
sbb
jecxz
out
adc
rorl
fdivs
jae
fsubrs
nop
fiadds
popf
aad
xchg
shl
mov
xchg
jo
cmp
pop
scas
shll
dec
aas
dec
jbe
mov
cwtl
add
pushf
sbb
popa
and
cmp
int3
enter
out
ret
int
sbb
mov
cwtl
xlat
add
stos
push
enter
dec
fwait
cmp
out
or
sahf
pusha
sbb
clc
push
call
hlt
pop
mov
sub
mov
sub
inc
out
in
nop
adc
ret
rsqrtps
orb
enter
cmp
jge
mov
pop
outsl
dec
out
add
mov
dec
int3
dec
add
push
cmp
inc
mov
add
adc
pop
sbbb
shrb
mov
inc
mov
lock
sbb
repnz
inc
in
inc
fbld
add
add
lahf
adc
inc
dec
lret
test
cwtl
ljmp
jecxz
faddl
mov
sub
stos
arpl
push
xorb
movsb
mov
mov
adc
adc
sub
pop
out
xor
mov
sub
xorb
in
fldcw
filds
lock
imul
test
repz
inc
or
stos
jne
aaa
icebp
push
pusha
xor
add
jns
mov
fcomps
sub
leave
popf
cmc
push
inc
cmp
mov
mov
jmp
nop
outsb
jno
lea
pop
out
inc
add
in
outsl
add
sbb
sbb
scas
cs
pushf
jo
adc
inc
add
mov
add
or
pop
int3
cmpsb
inc
add
dec
sub
cmp
rorb
in
pusha
add
jge
jmp
add
fdivl
rolb
shrb
je
scas
xor
ret
cmpl
pushl
pusha
call
lret
sbb
lcall
add
out
sub
in
add
or
mov
cmp
sbb
sti
popf
daa
das
out
pop
dec
pop
add
stos
add
out
ffreep
xor
jns
push
push
lcall
add
mov
pop
cmp
adc
inc
loopne
sbb
test
and
mov
xor
rcl
mov
movsl
mov
push
ret
fsubl
mov
xor
call
sbb
inc
pop
shlb
push
test
add
gs
add
mov
icebp
loopne
jg
clc
fcom
clc
movsl
add
mov
loope
add
arpl
mov
sub
outsl
xor
add
loopne
ss
iret
and
popa
les
jae
sbb
mov
mov
lods
clc
jle
jne
scas
push
push
ja
loope
aad
jmp
adc
sbb
movsl
add
xchg
pop
sub
sti
lahf
add
adc
andl
mov
je
addl
faddl
ljmp
xchg
add
fwait
pop
mov
pop
popa
push
xchg
dec
sti
sbb
pop
jae
stc
lret
loopne,pn
adc
pop
rorb
pop
clc
mov
mov
inc
out
imul
xchg
push
subb
adc
push
popa
shrl
cld
add
ret
movsl
call
sbb
aad
out
and
divb
pop
and
adc
test
aaa
pop
add
shlb
jl
xlat
add
leave
decl
mov
or
cmp
add
mov
int
call
cltd
rcrl
or
inc
cs
adc
mov
or
sti
mov
sbbl
and
mov
jl
dec
ficomps
fs
stos
push
ret
inc
jno
int3
roll
xchg
and
dec
pop
jle
jno
andps
pop
fisubrs
cmp
push
add
pop
and
pop
mov
xor
jae
sbb
lods
cmp
push
sbb
mulb
cmpsl
inc
fistpl
sbb
adc
pop
test
sti
movl
xor
jns
mov
add
sub
mov
xchg
sti
push
ret
sub
or
sbb
push
in
es
lock
stos
dec
pop
cwtl
inc
mov
push
inc
jb
jnp
scas
and
add
cld
jns
dec
int
icebp
or
stos
sti
sub
push
push
mov
cmp
sbb
fadd
cs
cmovno
xor
cld
cwtl
sub
mov
adc
xchg
out
das
repnz
pop
xor
xor
subb
into
jae
add
lgdtl
mov
add
in
add
xchg
xor
mov
mov
add
mov
xor
repz
add
and
inc
jb
test
sub
adc
mov
frstor
push
adc
out
adc
jecxz
faddl
fistl
outsb
imul
sub
and
repz
aas
out
inc
ja
addb
jo
cld
popf
pop
cli
cltd
cmp
mov
push
pop
mov
adc
arpl
fildl
jne
js
in
add
sbb
in
loopne
sti
mov
xor
imul
jmp
arpl
add
jecxz
lods
sbb
mov
sbb
add
adc
cwtl
in
test
fstl
rorb
push
sbb
cmp
outsb
push
push
adc
adc
shl
jne
xor
dec
sbb
pusha
xchg
ror
sub
cmc
test
movsl
inc
lahf
stc
sub
inc
jp
loopne
repnz
add
clc
outsb
roll
cmp
mov
cmp
in
out
and
aaa
mov
pop
das
add
int
je
gs
mov
jb
into
cmp
or
dec
pop
pop
cmp
sbbl
dec
fsubrs
clc
repz
add
mov
outsb
insb
add
cmp
push
sub
xor
mov
call
cmp
dec
pop
or
adc
clc
addb
es
movsb
mov
pop
loopne
sahf
and
fildll
push
mov
lock
in
jo
sbb
add
cmp
fldcw
pusha
lock
add
xchg
adc
je
fdiv
push
cli
data16
mov
add
sub
js
mov
add
and
adc
lds
or
fwait
rolb
flds
add
lret
inc
add
dec
mov
scas
mov
add
out
es
aad
lahf
popl
jb
movsb
jno
dec
pop
mov
arpl
push
jmp
or
mov
xchg
lds
add
repz
repnz
sbb
xchg
dec
mov
add
jecxz
sarb
cmp
addr16
mov
mov
pop
mov
push
daa
inc
jbe
pop
mov
movsl
ljmp
daa
mov
dec
or
push
mov
icebp
ds
in
add
mov
jle
add
push
movsb
les
add
sbb
adc
push
xor
mov
and
cmp
mul
jp
jo
add
in
dec
lods
mov
or
jp
xorb
xor
fld
test
incl
scas
xchg
les
je
inc
and
mov
jle
cmp
inc
add
cwtl
cli
adc
lcall
or
iret
add
fstps
dec
ljmp
mov
in
inc
lods
mov
sub
pop
push
inc
test
xchg
dec
mov
xchg
cmp
adc
add
xor
scas
repnz
add
dec
cmp
mov
add
out
movsl
jmp
out
add
rorl
fisttpll
imul
jns
inc
push
add
jmp
adc
pop
sbb
mov
mov
pop
ja
and
or
test
and
nop
add
dec
icebp
cmpsb
aad
xor
and
int
mov
pop
aas
andb
add
mov
adc
ss
jecxz
loopne
into
cmp
pop
std
jp
mov
push
adc
xorl
cmp
fisubs
add
mov
pop
mov
add
fcmovbe
cmp
lock
popa
out
adc
outsb
loop
add
mov
add
stos
mov
sbb
sub
mov
push
mov
shrl
test
or
adc
adc
mov
leave
imul
mov
sbbb
or
outsl
fcomps
out
js
repnz
lock
call
jp
fiadds
dec
add
sub
mov
popa
sti
add
xchg
sub
stos
imul
xchg
pop
shl
pop
cltd
add
cmpsl
fiaddl
fisttps
add
xchg
ljmp
fs
loopne
scas
outsl
jmp
out
or
imul
sub
xchg
clc
jns
dec
aaa
pushf
sar
sbb
inc
xchg
ljmp
ss
jnp
sbb
test
movsb
les
test
ja
or
je
push
add
in
pop
jns
decb
in
imul
xor
repz
adc
lods
rolb
movsb
jge
ret
idivl
cmp
fldl
push
xchg
repnz
inc
sbb
cmp
xor
jmp
in
lahf
fdivrs
jecxz
cmpb
cmp
pop
xor
test
mov
int3
movsb
xchg
mov
dec
cmpsl
cmp
push
add
jb
add
dec
sti
leave
test
ror
sbbl
aaa
xchg
and
sub
mov
add
aam
rolb
or
aas
insb
movsb
add
inc
pop
addl
add
sarl
add
test
imul
subb
inc
jl
jbe
add
and
outsl
adc
jp
mov
mov
xor
sbb
fstl
stc
fimull
push
jle
dec
add
popf
loope
in
mov
cmp
jge
add
inc
or
push
sbb
jbe
inc
jmp
mov
shlb
push
cmp
sub
std
inc
dec
fmull
add
repz
mov
sbbb
sbb
sbb
xor
jns
add
and
fmul
je
push
scas
pop
aaa
inc
pusha
lods
sbbl
js
dec
lods
adc
add
cmp
sarb
ljmp
or
adc
fimull
scas
rolb
sub
movsl
and
aam
stc
rorb
jecxz
into
jmp
dec
jp
movsb
xchg
push
dec
mov
mov
add
fcomi
dec
adc
push
sub
enter
cltd
rorl
addl
loop
pusha
cwtl
in
ds
andb
cwtl
in
movntq
mov
sahf
mov
sbb
mov
jne
add
sub
jbe
pop
pop
adc
jo
sbb
inc
sti
cmp
add
stos
ja
pusha
mov
jnp
push
out
shl
mov
std
jl
add
inc
mov
and
mov
sbb
cmp
sarb
imul
mov
sub
in
nop
aam
inc
xchg
shl
hlt
clc
adc
js
push
imulb
mov
cli
inc
loopne
cmp
adc
sbb
insl
adc
mov
mov
pop
and
inc
je
adc
mov
cmpsb
add
fcmovnb
sarb
pop
add
in
mov
inc
notl
in
mov
stc
int
push
cwtl
je
add
lret
or
fsubrs
jge
test
mov
inc
shlb
sub
xchg
sti
mov
push
sbb
dec
testl
sub
ss
outsl
xor
in
repnz
in
mov
je
daa
jae
mov
pushf
scas
pop
xchg
notl
rol
subb
dec
pushf
add
ja
fldenv
or
xor
lock
fdivrs
leave
mov
add
cmp
setg
insb
inc
and
cs
pushf
movsl
ljmp
cmp
ret
add
mov
mov
xor
inc
fiadds
and
fsubl
mov
xor
cmp
sbb
jnp
cwtl
scas
stos
loop
and
xchg
add
rorl
mov
sub
ljmp
mov
sub
pop
inc
cli
lock
push
pop
inc
xor
adc
xchg
lcall
test
add
sbb
sarb
and
cwtl
test
mov
xor
pop
add
insb
ss
add
jb
add
adc
dec
add
je
push
movsb
fldl
loop
fcmovne
scas
or
add
or
sbb
and
mov
push
shrl
jae
add
in
cmp
add
repz
xor
sub
lret
bound
add
push
add
cmp
push
add
int
jae
add
aas
fwait
and
jge
push
imul
jg
nop
inc
mov
pop
or
fsubrl
inc
shlb
sub
imul
fdivl
cmp
jg
pop
fwait
shrl
xchg
lods
jns
add
arpl
bound
ret
xor
push
xchg
out
or
xchg
rolb
jecxz
adc
sahf
add
sbb
repnz
cli
add
xchg
aam
mov
jns
loopne
mov
add
push
call
add
add
movsl
jmp
sub
loope
call
dec
inc
and
xor
xor
xor
sahf
push
fstpt
mov
in
jnp
movsb
and
int
inc
loop
or
in
mov
out
fistpl
adc
mov
xchg
adc
pop
adc
push
xchg
or
aas
inc
mov
inc
add
adc
ds
hlt
push
setns
fsubp
int3
rorl
lods
xor
xchg
push
lret
fnsave
hlt
inc
push
fstps
pop
cmp
sbb
mov
mov
add
iret
mov
cmp
sub
rorl
cmpl
sub
adc
movsl
mov
pop
pop
stc
fisttpll
xchg
add
mov
push
out
ficompl
aam
in
push
mov
push
push
ja
and
pop
xchg
insb
mov
adc
jg
sbb
mov
shlb
xchg
cwtl
sub
sbb
aad
in
xor
add
adc
int3
ret
sbb
xor
mov
loope
popa
push
loopne
xchg
bound
rolb
jne
imull
popa
loopne
call
sub
xchg
rorl
in
add
rol
cmp
fucom
das
pop
xor
addl
jmp
inc
sbb
ja
sbb
sbb
cmp
xlat
pusha
pop
mov
push
wrmsr
pop
cmp
lea
add
adc
int
mov
xchg
cmp
pop
jle
call
enter
lret
adc
jmp
or
mov
sbb
inc
push
sub
mov
mov
call
xor
add
mov
aad
mov
jno
imul
mov
ja
mov
sub
out
push
adc
add
add
jmp
jo
jl
leave
or
daa
mov
mov
add
push
es
or
add
loopne
inc
sbb
add
scas
or
rorl
xchg
test
movsb
lret
mov
jbe
int
adc
xor
rcrb
shlb
add
cld
sar
and
add
das
stc
lret
icebp
push
pop
jnp
and
mov
pop
cmp
sbb
jbe
in
xor
xor
xchg
add
fldt
sub
hlt
dec
add
in
pop
nop
pop
cld
out
es
test
rcrb
mov
addr16
outsb
inc
adc
rclb
icebp
ss
out
jp
testb
shrb
scas
fnsave
sbb
mov
out
add
xchg
and
inc
adc
and
mov
or
outsl
cmp
lahf
ret
cmp
rcrb
push
mov
adc
pop
add
nop
add
data16
aam
mov
add
shrb
add
push
popf
push
lcall
testl
push
xchg
fnstcw
sar
insb
push
lcall
xor
fsubs
into
ja
cmp
mov
std
jo
sub
push
and
and
fidivrs
gs
cmpsb
pop
rorb
stos
sahf
jnp
mov
in
add
ja
fldenv
orl
dec
fbstp
jne
sahf
movsb
xor
data16
jecxz
xchg
jmp
and
adc
push
call
cmp
divl
add
or
jno
push
rolb
adc
push
call
and
add
or
dec
int
loope
pusha
dec
xor
inc
adc
lock
cmp
sbb
stc
arpl
in
scas
jmpw
cld
or
dec
mov
pop
sbb
ror
mov
movsl
mov
or
xorb
add
pop
lods
add
xor
pop
cmp
xor
iret
mov
mov
jbe,pn
adc
push
movsb
xor
add
das
jl
out
add
insl
sar
clc
dec
fisttpl
dec
fdivs
and
mov
out
sub
cmp
push
jge
xchg
xchg
cmp
mov
subl
mov
fsubrs
pop
imul
shl
ret
jno
and
fldt
jg
sub
and
inc
add
or
jle
mov
daa
scas
lods
in
xchg
add
add
pop
xchg
adc
cmp
add
push
sbb
mov
add
pushf
loop
fcmovnb
sti
int3
push
into
xchg
cmp
add
jle
mov
or
pop
cmp
dec
lock
cmp
int3
bswap
icebp
movsl
add
push
call
jbe
sub
add
mov
fadds
sbb
hlt
rol
pop
daa
movsbl
adc
push
dec
and
pop
cltd
adc
add
out
arpl
add
leave
xor
inc
inc
pop
push
push
lea
sbb
data16
lock
or
inc
pusha
sbb
inc
sub
mov
add
cmp
mov
clc
leave
not
push
movsb
aas
sbb
jnp
js
popa
mov
jl
and
pop
mov
and
insl
push
dec
lods
add
iret
data16
sbb
xchg
rclb
or
stc
xor
pop
mov
cmp
inc
pushf
rcrl
bound
jo
cmpsl
add
fs
cmp
mov
out
push
mov
pusha
movsl
andb
inc
xor
repnz
ret
cmp
dec
fstps
movsb
xor
jge
mov
jne
add
outsb
call
out
clc
mov
sbb
xchg
shrl
mov
ja
inc
out
add
dec
adc
inc
mov
arpl
test
cmp
clc
add
xor
add
add
sti
insb
mov
insl
inc
pop
daa
add
call
out
imul
push
cmp
cwtl
pop
xchg
ljmp
mov
shll
loopne
push
push
xchg
adc
mov
add
filds
add
add
lret
fsubl
push
jnp
pop
or
lock
pop
pop
inc
popf
repnz
mov
xor
stc
xor
adc
jmp
mov
push
mov
inc
jnp
lcall
and
ret
dec
xor
scas
mov
loopne
jmp
icebp
flds
jbe
mov
add
xor
lcall
xor
dec
pop
js
out
test
and
pop
pop
inc
imul
xor
jno
add
movsl
push
test
mov
push
sar
cli
adc
popa
or
jbe
fisttps
and
fisttpl
mov
add
pop
lods
pop
in
add
cmc
jecxz
repnz
scas
jl
hlt
mov
xchg
sbb
pop
dec
hlt
add
inc
call
mov
and
repz
xor
mov
pushf
jge
es
sbb
add
rcr
enter
sti
add
inc
mov
and
and
adc
imul
dec
jge
add
push
pop
push
lcall
mov
mov
fsts
pop
clc
xchg
add
jg
in
add
push
add
inc
xor
bound
or
pop
jg
sbb
push
insl
in
fst
add
stos
or
add
sbb
hlt
loopne
add
mov
pop
out
shrb
cmp
mov
mov
sahf
lcall
movsb
and
push
cmpsb
mov
jge
add
dec
decb
xor
jb
addl
stc
ret
add
in
in
je
xchg
jb
add
dec
int
pop
push
arpl
add
push
shl
or
xor
mov
push
test
adc
adc
call
les
sti
in
cmp
nop/reserved
fs
cwtl
xchg
add
iret
enter
cmpl
loope
fiadds
lret
sbb
jae
jo
cmpsb
sub
aad
hlt
inc
cmp
add
xor
sub
orb
in
sub
sbb
subb
inc
mov
mov
or
orb
shlb
pop
push
icebp
add
imul
or
int3
and
std
mov
mov
rcl
cmpb
dec
xchg
jmp
sub
jmp
mov
sub
add
mov
push
push
dec
fcoms
jns
add
push
lock
in
dec
or
pusha
ret
cmp
rcrb
daa
sub
add
mov
je
and
pop
adc
cmpl
jo
mov
add
and
arpl
test
push
add
pop
sub
or
les
cmp
pop
jl
add
and
cmp
ss
or
jnp
cmp
cmp
repz
test
enter
xor
rorb
add
hlt
jmp
cs
and
aam
add
push
stc
imul
mov
shrl
xor
add
aas
fdiv
stos
and
xchg
movsb
popa
fs
cmpsb
mov
xchg
or
loope
orb
pop
mov
sub
add
rcrl
add
sub
pop
cmc
lods
cwtl
pop
mov
aaa
mov
faddl
out
fistps
mov
add
mov
in
jmp
mov
pushf
daa
xor
movsl
sub
iret
adcl
nop
xchg
call
push
mov
sarl
insb
push
lret
jns
sub
add
push
rorb
push
roll
icebp
xor
shll
cmpsl
add
mov
inc
push
ficomps
mov
jge
sub
xchg
rclb
lock
mov
cmp
fnsetpm(287
or
and
pop
xchg
add
pop
adc
xor
mov
add
out
and
leave
int3
addb
daa
pop
xlat
test
loopne
iret
mov
xor
xorl
push
cmp
add
ja
iret
pop
xlat
add
push
cmp
aam
lods
add
xchg
jg
cltd
sbb
push
add
sub
xchg
inc
push
or
xorl
cmp
xlat
sub
push
or
pop
subl
cwtl
lock
stos
add
pop
jecxz
shl
or
out
mov
cmp
jecxz
jl
clc
add
stc
int3
loopne
cmp
rolb
xchg
xchg
gs
jmp
xchg
add
das
mov
add
push
inc
mov
lcallw
enter
pop
nop
add
adc
fdivrs
cmp
adc
and
cli
nop
add
fprem1
push
xor
movsb
add
fildl
add
sbb
fiaddl
cmp
fldt
mov
jno
icebp
sub
fadds
xchg
dec
mov
xchg
adc
or
add
pusha
xchg
dec
sahf
repz
add
lea
daa
aam
jl
movsl
jle
cmp
clc
divb
pop
add
push
dec
pop
xchg
fwait
or
inc
aad
mov
push
pop
cwtl
add
ss
outsb
cmp
jmp
dec
stos
sahf
push
sbb
pop
jns
mov
add
xor
out
add
xchg
test
jl
mov
ja
pop
mov
mov
imul
push
mov
mov
rorb
pushf
or
outsl
push
add
adc
into
jbe
clc
nop
inc
mov
pop
mov
hlt
jge
lea
in
sbb
cltd
xchg
dec
xchg
shll
mov
sti
clc
sbb
mov
inc
push
mov
add
or
xchg
adc
cs
inc
xchg
adc
in
adc
leave
cwtl
nop
adc
inc
cltd
int3
add
pop
xchg
mov
into
ss
leave
clc
out
stos
add
sub
sbb
das
add
shll
pop
add
mov
jp
cmpsb
scas
add
in
xor
add
inc
mov
incl
sbb
in
lret
mov
and
jns
ret
sub
dec
stos
in
add
fimull
je
adc
jle
push
mov
push
addr16
xchg
mov
ja
add
mov
jg
adc
lahf
sub
in
loop
ftst
sbbb
shrl
int3
jecxz
jo
jp
xlat
pusha
mov
bound
mov
add
leave
sbb
sbb
or
into
es
pop
aas
fisttps
dec
add
cmp
add
jo
stc
sub
in
pop
test
out
clc
mov
cmp
add
xor
movb
stc
ljmp
mov
xchg
mov
add
cmpsb
test
add
push
xchg
stos
mov
or
scas
xchg
xchg
cmp
in
cld
leave
roll
jne
shlb
cmpsb
dec
add
mov
mov
mov
iret
cmp
cmc
jge
add
pop
push
mov
and
sub
add
out
cld
cmc
ljmp
xor
mov
adcb
pushf
hlt
inc
add
pop
xor
jmp
lds
push
add
xchg
and
icebp
jbe
jl
pop
push
xchg
sub
add
mov
in
add
sbb
pop
push
add
inc
inc
leave
xchg
stc
add
and
jae
xor
cmp
mov
jne
out
jp
ret
add
loop
imul
xor
movsb
ja
dec
fdivrp
jge
hlt
stos
push
pop
mov
dec
es
mov
and
xor
nop
xchg
cmp
sbb
or
or
jmp
orb
push
xor
cwtl
push
mov
rcr
sbb
or
and
lcall
and
flds
shr
pop
add
inc
dec
mov
imull
fiaddl
scas
pop
add
je
xorb
pop
in
jo
lret
add
orl
fldt
push
xor
sarb
jge
add
insb
pop
int
fdivrs
lods
int3
shld
jnp
dec
loopne
test
ret
push
leave
inc
add
or
loope
push
fdiv
add
andb
add
mov
imul
and
jae
xchg
std
es
testl
sahf
sbb
clc
lret
add
jns
sbb
or
inc
out
dec
inc
test
sbb
xor
or
pop
out
add
fdivs
push
mov
adc
into
add
test
movl
and
pop
cmp
incl
jle
inc
aad
insb
out
sarb
push
pop
add
scas
xchg
and
add
mov
inc
xor
adc
inc
clc
sahf
push
mov
jno
dec
xchg
in
sbb
adc
pop
add
enter
xor
jl
or
ret
add
iret
call
pop
lods
outsl
inc
repz
out
or
mov
and
add
bound
jp
pop
dec
mov
lods
js
jno
dec
jp
add
xor
std
adc
ret
xchg
and
and
xlat
push
int
in
add
mov
mov
roll
cmp
out
jns
fwait
push
out
sbb
mov
repnz
sub
and
mov
mov
or
mov
add
into
adcb
inc
lahf
xchg
and
loopne
pop
icebp
dec
add
fsubr
sbb
mov
shl
loopne
arpl
or
and
stos
test
movl
and
mov
xchg
insl
jle
sbb
adc
loopne
filds
xchg
dec
fmul
pop
testl
cwtl
xchg
add
out
sub
lret
addr16
push
mov
or
mov
mov
cmp
lea
mov
sbb
int
loopne
add
dec
clc
adc
out
add
and
movl
sbb
decl
jne
std
cmp
jb
add
cmp
notb
pusha
sbbl
and
outsl
lods
jbe
lret
mov
repnz
dec
pop
add
dec
xor
andl
add
mov
jmp
cmp
jbe
sbb
inc
decb
dec
jp
add
int
inc
pop
shl
stos
cmp
clc
add
xchg
orl
mov
mov
jecxz
dec
lds
push
sub
push
mov
cli
xor
out
mov
fadds
mov
mov
inc
stc
mov
add
xor
out
add
fmuls
xlat
jo
xchg
xor
nop
pop
loopne
scas
push
out
ljmp
mov
lret
cs
and
and
fadds
jns
aas
lea
add
icebp
outsl
cmp
fsubs
mov
jb
std
ds
subb
push
sbb
movsb
ficompl
cmp
sbb
add
es
add
push
jp
sti
pop
adc
outsl
xchg
mov
popf
push
push
ljmp
adc
xor
iret
imul
add
mov
mov
jno
nop
mov
sti
adcl
sbb
mov
adc
sbbb
xchg
jg
sbb
cmp
sbb
sub
xchg
pop
xchg
fdivrs
and
popf
add
rclb
sbb
dec
push
lea
mov
sbb
mov
repnz
and
repz
push
inc
ret
movl
inc
out
addl
pop
xchg
lods
test
dec
arpl
jmp
clc
divb
add
add
or
push
hlt
and
mov
push
push
xor
int3
sbb
cmpsb
out
inc
cltd
subl
repnz
push
repz
add
mov
popa
mov
xchg
inc
sub
in
arpl
rcl
add
mov
jb
push
add
cwtl
ret
adcl
jae
pop
cmpsl
cli
stc
pushf
add
ja
adc
imul
sbb
jge
fpatan
add
adc
fisubs
lock
inc
xor
imul
insl
mov
faddp
cmp
or
add
hlt
sub
add
ret
inc
mov
pop
mov
push
add
xchg
jl
lods
add
ja
fdivr
add
cmc
lds
int
in
in
pop
lret
add
mov
add
add
dec
add
pop
xchg
jmp
loopne
mov
pop
jnp
pop
sahf
sbb
ret
in
adc
fcmovne
loopne
sub
mov
cltd
icebp
add
addr16
shrl
sub
in
mov
rcrl
add
mov
mov
cmp
add
sub
adc
aas
mov
add
cwtl
inc
mov
jge
mov
test
std
add
test
mov
adc
hlt
sbb
insl
add
out
lcall
xor
test
mov
rcl
push
push
sti
dec
cmpsl
sub
pop
pop
push
mov
mov
cmc
addb
cmp
cwtl
xchg
jge
jbe
sub
add
das
mov
bound
dec
lods
call
pop
mov
add
dec
scas
cmp
andb
sbb
or
cmp
cmp
jne
add
mov
mov
js
push
mov
xchg
push
shrl
dec
out
sub
push
test
andb
or
cmp
cmp
dec
inc
loopne
add
in
testl
cmp
js
and
aaa
sbb
adc
arpl
add
dec
stc
ss
cld
dec
gs
std
lret
enter
xchg
mov
popl
movsb
cmc
xor
pop
clc
in
push
xor
mov
mov
mov
imul
pusha
mov
and
add
loope
rol
idivl
pop
sbb
add
ljmp
add
out
or
push
push
and
mov
push
sbb
jg
pushf
push
cltd
nop
sbbb
mov
shr
push
fs
sbb
mov
add
jecxz
cltd
pop
mov
popf
popa
je
dec
stc
mov
addb
cld
pop
ljmp
add
dec
in
fdivrs
xchg
or
pop
fisttpl
mov
xorl
ds
in
or
jl
add
sahf
mov
iret
out
nop
or
les
xchg
mov
dec
inc
pop
adcb
je
cmp
js
add
dec
fldcw
dec
popf
cs
sub
dec
loopne
nop
pop
jl
cs
adc
pop
in
sbb
mov
mov
cmp
xor
addb
enter
ret
push
movsl
in
and
adc
and
inc
cli
loopne
pop
dec
add
ret
in
ret
mov
add
xchg
bound
les
xor
xor
add
or
sbb
inc
test
sbb
and
fs
mov
mov
mov
scas
push
pusha
pop
jge
add
outsl
test
int
mov
inc
adc
cwtl
out
call
mov
lea
push
add
and
mov
xchg
insl
sub
andl
mov
hlt
mov
icebp
les
cmc
inc
out
lods
ret
nop
repz
or
ds
rcl
test
andb
shl
adc
lahf
add
aam
bound
stos
mov
clc
pop
add
dec
jne
push
add
loope
in
cs
cwtl
inc
cli
aad
scas
ds
into
scas
xor
nop
fdivr
stos
sub
cmpsb
mov
add
inc
inc
jmp
jne
jge
rclb
jg
ds
movsl
aaa
iret
xchg
pop
add
jns
add
dec
dec
mov
fistl
add
sti
fnstcw
sub
cmp
add
add
dec
lds
or
jl
xchg
repz
les
cmpsb
push
cltd
push
lahf
out
jo
mov
call
lock
jnp
out
addr16
dec
add
out
and
lret
mov
loopne
sub
int3
scas
mov
fstl
imul
dec
out
lock
enter
aas
fmull
jle
adcb
repnz
mov
or
pop
add
inc
mov
mov
cmp
popf
add
gs
ljmp
daa
sbb
adc
repnz
clc
sbb
push
inc
jmp
xchg
daa
gs
sub
les
xchg
dec
jmp
add
arpl
mov
xchg
add
orl
add
int
jns
arpl
xor
mov
pop
mov
xchg
and
xor
or
add
test
adc
mov
cld
scas
int3
movsb
rcrl
repnz
adc
dec
dec
outsl
pop
push
push
push
inc
fcom
lret
scas
inc
mov
je
xchg
pop
stos
fcompl
jno
aas
cmc
and
mov
sbb
jmp
jne
add
ret
add
leave
aam
jnp
orl
and
insb
loope
pop
jnp
or
enter
sbb
sbb
les
pop
loop
inc
add
cmp
lcall
sub
or
xchg
test
pop
adcb
sbb
jno
rolb
addl
cltd
shll
shl
mov
mov
insb
mov
dec
dec
xor
push
ret
or
xor
and
insb
sbb
nop
mov
add
daa
loopne
pop
add
imul
into
adc
js
push
sbb
push
or
sbb
jo
movsb
call
sbb
orps
push
dec
hlt
pushf
in
arpl
or
xor
add
sarb
push
sbb
test
pop
jp
repz
xchg
add
mov
ja
jle
inc
cli
xchg
ret
push
lods
out
inc
pop
pop
mov
loopne
jb
or
test
pop
pop
fsubrl
dec
add
shll
push
jnp
repz
rolb
lahf
fidivl
sahf
in
loop
ficomps
es
fsubrl
cmpsb
cld
test
or
ss
push
sub
aam
movsb
xchg
lret
rcrb
jmp
lcall
bound
clc
sbb
ret
mov
mov
add
pop
insb
or
jne
mov
or
cmp
cld
xchg
sub
out
jne
bnd
or
pushf
lahf
in
cmpsb
loop
pop
sahf
lds
lock
xchg
pusha
fsubl
les
push
xor
movsl
and
ljmp
add
mov
jns
nop
sub
inc
and
xor
dec
jl
adc
mov
pushf
mov
data16
mov
ret
ret
dec
add
pop
and
call
leave
mov
lods
and
mov
das
push
inc
adc
and
mull
adc
mov
xchg
cmpb
lock
push
pop
imul
push
enter
pop
inc
rorb
sbb
add
push
sti
xor
mov
adc
mov
shlb
pushf
mov
loopne
xchg
push
popl
adc
push
in
push
bound
cmpsl
cmp
dec
mov
addb
sbb
push
ja
pop
roll
xchg
into
ljmp
pusha
or
mov
loopne
or
mov
in
pop
in
fdivrs
insb
push
fbstp
push
dec
rol
ljmp
sub
mov
cmpsb
loope
add
mov
cmp
out
psllq
loop
sub
orl
les
sbb
push
cwtl
or
andb
mov
xor
sbb
imul
sbb
cmp
stos
add
mov
and
test
aam
loopne
imul
sbb
mov
mov
push
or
bound
popf
in
orl
into
pop
and
scas
je
in
mov
cmp
ds
ds
mov
sbb
push
in
gs
or
sub
pop
outsb
add
push
test
xlat
add
fsubr
fiadds
cmp
insb
mov
inc
jbe
add
pop
lods
loope
testb
je
out
dec
fcmovnu
or
mov
movsl
add
add
leave
push
jl
add
loop
and
mov
insl
mov
add
mov
in
mov
add
lcall
cmp
dec
adc
outsb
pop
cmpsb
mov
push
mov
out
xor
adc
and
ja
mov
mov
mov
pop
pusha
aas
cltd
pop
out
repz
add
incb
cmp
js
cmc
rclb
aaa
in
pop
and
inc
xchg
sbb
or
orb
in
testl
xlat
sub
lret
faddl
dec
enter
xchg
or
jo
cmpsb
push
pop
push
mov
pop
adc
add
pop
mov
add
xor
test
mov
add
adc
adc
jl
jae
and
js
ja
stos
cmc
mov
mov
cmp
pop
xor
cmp
je
xchg
cmpsb
pop
ss
or
and
in
pop
add
sarl
in
xor
sbb
lahf
shll
aas
sbb
movsb
test
mov
out
in
push
add
ret
jae
push
add
je
das
inc
xor
enter
dec
lods
add
and
int3
dec
sahf
in
xlat
aam
int3
add
lods
cmp
adcl
enter
or
dec
push
push
les
xor
xchg
add
mov
lea
xlat
je
push
push
or
and
movsb
cmpb
mov
jno
sub
imul
xchg
sub
call
out
pusha
rcll
ds
pop
push
aad
xor
and
sub
std
pop
push
xchg
dec
add
pop
fs
clc
pop
add
mov
pop
and
inc
mov
or
cwtl
test
mov
mov
inc
pop
loop
or
and
mov
shrl
arpl
mov
fcomps
add
pushl
add
xchg
dec
push
mov
repz
push
clc
nop
in
scas
fisubl
add
xor
cmp
adc
icebp
loope
mov
xor
jne
ja
imul
and
lock
sar
icebp
xchg
xor
faddl
into
push
mov
lret
mov
add
lock
cmpb
mov
add
and
fiadds
or
lds
mov
mov
stos
sub
xchg
fs
and
or
repnz
cwtl
mov
xor
pop
call
test
std
pop
icebp
adcb
mov
adc
daa
inc
inc
enter
inc
xlat
and
dec
pop
mov
jg
adc
cmpsl
add
seto
xchg
push
mov
rolb
jno
ljmp
inc
aas
in
imul
jp
and
xor
ja
add
clc
or
push
out
jno
fwait
popl
mov
or
or
sub
sub
dec
mov
outsl
sbb
imulb
and
imul
sub
pop
cmp
mov
inc
sbb
call
cmp
fimull
cltd
xor
lret
dec
hlt
mov
cmp
jno
jp
sbb
mov
or
loopne
xor
cmp
cmc
icebp
add
add
cmp
pusha
mov
dec
mulb
xor
mov
adc
fsubs
pusha
push
mov
xchg
negl
push
decb
add
mov
xchg
add
mov
mov
push
dec
sub
stos
and
ss
nop
sub
mov
outsb
add
pop
jb
xor
inc
sbb
ret
dec
adc
popa
pop
add
stos
aam
push
fadds
inc
sbb
add
mov
jb
pusha
fsubrl
clc
ret
lret
cmp
cmp
adc
pusha
lcall
ficoms
inc
shl
inc
pusha
in
mov
add
sub
cmp
sahf
push
arpl
cltd
repnz
dec
or
push
insb
cmc
dec
and
adc
dec
xor
jge
ret
pusha
pusha
adcl
xlat
mov
mull
rolb
adc
js
sub
or
adcb
scas
out
shl
fidivrs
mov
adc
inc
test
adcb
xchg
out
add
xchg
jp
jg
fstps
xchg
xchg
loopne
and
popa
test
push
movsb
mov
mov
hlt
jns
mov
andl
lcall
xor
pop
add
add
xor
cld
je
loopne
lods
jge
add
xor
pop
subb
push
sub
roll
mov
inc
xchg
es
and
inc
adcl
jmp
mov
sbb
push
insb
and
xchg
push
subb
cmp
test
xor
dec
nop
faddl
push
mov
call
dec
pop
mov
fildl
push
daa
jp
or
inc
fcoml
dec
pop
xor
adc
or
out
cld
push
sbb
adc
in
lock
ljmp
stos
mov
cmp
jp
push
inc
rorb
adc
lahf
jnp
xchg
inc
lock
sub
xor
adc
or
dec
mov
and
inc
xor
hlt
or
loope
cld
dec
into
cmp
insl
cmp
adc
test
jle
xor
adc
mov
das
subb
add
or
mov
mov
and
fbstp
in
in
sbb
push
sbbb
fistpl
es
andb
lods
cmovp
insb
jp
add
loopne
cmp
inc
bound
add
dec
push
jbe
add
jl
ret
addl
arpl
xor
mov
repnz
add
or
das
cmp
add
pushf
cmp
xor
push
in
push
jp
movsb
and
xor
sbb
sti
add
mov
out
sub
aam
test
inc
jp
xor
xor
add
sbb
push
xchg
int3
dec
bnd
mov
cmp
mov
leave
ss
sub
push
cmp
push
fnstsw
inc
push
xchg
mov
pop
mov
ja
es
dec
test
dec
dec
add
mov
out
popl
loop
push
fbstp
js
daa
mov
fsubrs
xchg
push
test
sub
shrl
test
xor
adc
mov
out
mov
adc
dec
or
and
dec
lods
je
sbb
mov
shrb
push
pop
incb
adc
mov
js
mov
test
push
jl
push
sub
pop
dec
and
repnz
insb
xchg
ljmp
add
test
icebp
xlat
ss
cld
push
dec
andb
add
add
js
popf
and
jge
push
jcxz
btc
pop
mov
jbe
adc
jae
lock
stc
add
out
arpl
adc
push
mov
js,pn
mov
push
add
shrb
mov
in
xor
loope
and
stos
hlt
pusha
or
mov
ja
xor
lcall
cmp
hlt
jne
out
adc
js
iret
or
mov
jo
or
pusha
pop
nop
test
sbb
subb
mov
inc
stos
es
sbb
dec
cmp
xchg
pusha
stc
rcrl
sub
lahf
jnp
add
cltd
in
xlat
jb
and
testb
leave
mov
mov
in
sti
add
lods
mov
rcll
int3
mov
nop
mov
mov
add
push
cmpsl
sub
jno
add
mov
cli
adc
push
lahf
add
xlat
sub
fwait
js
xor
xchg
ljmp
xchg
lcall
lret
add
loopne
push
cmp
cs
loopne
xor
add
add
pop
jnp
inc
aaa
int3
add
xchg
jbe
ret
cmp
jno
adc
and
addr16
in
loope
cs
pop
jo
insl
add
cmpsb
dec
ret
in
mov
pushf
loopne
in
scas
add
jno
test
das
inc
out
mov
ljmp
out
scas
iret
cmp
add
cmpsl
xchg
mov
in
imul
in
fwait
mov
or
add
push
push
cld
int3
lods
add
sbb
pop
sub
icebp
hlt
dec
cmc
pusha
jp
adc
pop
or
sbbb
test
fisttps
xor
fdivl
add
in
push
mov
and
fwait
repnz
lret
jmp
cmp
sub
add
stc
xor
emms
xchg
jb
mov
adc
add
mov
dec
lret
and
adc
lea
mov
dec
imul
sub
mov
inc
lock
mov
das
sbb
add
cwtl
mov
divb
add
pusha
aad
or
data16
push
xchg
cmp
jno
xchg
jecxz
test
arpl
insl
in
jmp
cltd
mov
jle
mov
and
rcll
cmp
push
add
test
mov
stos
in
andl
push
pop
pop
data16
cmp
lret
loop
pop
pop
iret
aad
jnp
xor
or
in
jecxz
mov
int3
add
test
enter
jns
iret
push
insl
lret
cmp
add
cmp
add
mov
or
leave
mov
mov
in
repz
or
dec
addr16
mov
jnp
cwtl
js
or
dec
inc
add
fcompl
add
jmp
stos
dec
fldt
enter
daa
stc
xchg
test
pop
add
fwait
imul
loope
mov
cli
adc
call
rcrb
inc
add
sub
rcr
push
pop
pop
aas
jne
lock
negb
sub
shl
std
add
scas
pop
jl
push
addr16
pop
mov
lock
xchg
and
push
pop
add
sar
popf
mov
xor
arpl
adc
in
or
add
xchg
loopne
mov
cmpsl
int
jle
or
ss
push
rcll
fisubrs
loop
adc
ss
sbb
icebp
pusha
or
dec
and
loopne
add
pushf
push
add
xor
add
push
and
in
inc
nop
sbb
jg
jae
sbb
inc
xchg
rclb
insb
jns
add
xchg
sub
add
out
negb
insb
xor
add
inc
sbb
sbb
adc
enter
or
jnp
sub
inc
add
and
jmp
and
jnp
mov
xor
repnz
lods
xor
mov
inc
jo
pop
ljmp
xchg
iret
add
and
cltd
mov
lock
fimuls
xor
cmp
xchg
sbb
stos
lods
add
sub
add
sub
and
cmp
inc
add
loope
rcrl
movsb
cld
cmp
mov
sub
arpl
ret
shrb
add
lds
test
push
mov
movl
popa
shlb
and
jge
mov
add
stos
push
mov
mov
lea
cmp
mov
push
inc
test
fmuls
cmpsl
dec
pushf
adc
lcall
mov
out
mov
lcall
xor
mov
imul
sbb
xor
add
mov
xor
test
inc
push
jl
add
sbb
fmull
adc
add
inc
cltd
push
leave
mov
mov
jmp
sub
sbb
xor
fisttps
mov
das
add
xor
push
xchg
scas
inc
and
xlat
bound
mov
repz
dec
pop
jnp
rcrl
ret
xchg
in
add
mov
xchg
jne
sub
in
test
mov
mov
mov
add
dec
cmpsl
gs
fs
sub
clc
into
sub
jp
add
and
jo
inc
in
pop
incl
repnz
push
inc
fcoms
aaa
ljmp
adc
push
movsb
xchg
mov
fdivs
add
xor
pinsrw
mov
int
add
mov
fwait
cmp
loop
insb
mov
mov
int
andb
mov
je
mov
and
pushf
xor
cmc
jecxz
fmull
fldl
sub
lea
test
hlt
jno
mov
rorb
xchg
lret
jae
lods
jg
in
mov
es
fiaddl
xchg
pushl
jo
and
sahf
or
data16
repnz
push
in
pop
add
rolb
and
add
mov
mov
lret
iret
jae
or
es
and
gs
inc
pushf
lahf
or
mov
sub
sub
xchg
jl
add
jnp
or
inc
xor
mov
mov
xchg
push
push
xorl
jns
outsl
and
popa
cmp
push
add
fmul
push
in
lcall
rol
out
adc
scas
pop
push
and
or
cmpsb
fstpt
fwait
jno
mov
stos
mov
jne
int3
lds
shll
lcall
add
push
xchg
repnz
cltd
mov
adc
inc
add
or
into
push
les
hlt
loopne
test
push
aaa
fnstenv
sahf
ret
pop
ret
sarb
mov
cli
arpl
pop
cmp
mov
vminps
fistpl
outsl
shll
cli
int
shrb
aaa
jne
dec
jb
pop
fadds
ds
xchg
add
inc
gs
add
sub
jne
jmp
mov
aad
xor
xor
xor
cmp
cmc
mov
jl
cltd
cmp
pop
out
cli
adcb
cmpsl
cmc
add
push
jns,pt
and
icebp
dec
add
incl
or
mov
pop
jae
bound
xchg
pop
pusha
xchg
sbb
ljmp
aaa
cli
jmp
in
or
mov
push
cs
inc
xor
int3
lods
pop
inc
xchg
mov
fneni(8087
cli
add
sub
into
fs
out
pop
sub
lods
sbb
daa
pop
push
xor
add
xchg
icebp
xchg
xchg
inc
cmp
loop
cmp
hlt
je
ret
insl
dec
rcll
fsubrl
mov
negl
lret
aas
imul
cmp
push
xchg
cmp
push
push
fldcw
push
incl
test
cltd
stc
ds
lods
sub
jne
dec
cld
add
cmp
xor
rcll
in
inc
adc
outsb
or
mov
add
jge
dec
repnz
lods
fwait
sub
sub
dec
and
sbb
jecxz
ret
xchg
add
inc
cmp
adc
pop
xchg
and
add
cmc
push
nop
jno
jne
dec
jle
mov
cli
sub
and
adc
notb
pop
cmpsl
mov
jg
inc
hlt
loopne
add
mov
xchg
mov
lock
xlat
jge
shll
out
jle
cwtl
add
push
pop
mov
in
inc
decl
in
scas
cmp
dec
inc
xor
lret
mov
xchg
jns
lcall
test
mov
scas
jle
add
sbb
cmp
dec
or
jp
adc
addr16
add
jne
add
add
push
popf
inc
js
mov
add
inc
add
cmp
jecxz
mov
mov
lcall
jl
pop
notl
movsl
dec
stos
adc
pop
add
ss
loope
shll
jecxz
add
sbb
mov
inc
mov
cmp
out
add
mulb
add
bound
xor
sbb
repz
xchg
jle
or
xor
fcom
fs
mov
add
inc
inc
rclb
jo
jo
pop
inc
in
xor
loop
add
xor
scas
mov
mov
jns
mov
pop
jno
rol
xchg
mov
pop
popa
adc
mov
sub
fucomip
in
aas
xor
and
lods
adc
fwait
jns
add
out
lea
pop
inc
pop
push
xchg
and
pusha
mov
test
lods
in
adc
lods
hlt
ljmp
or
int3
sub
lea
js
pop
push
sbb
xor
pop
add
adc
dec
icebp
add
imul
mov
mov
out
shrb
adc
ja
shrl
xor
jae
cmc
add
sub
mov
add
test
or
ja
jae
or
fadd
push
add
and
sub
push
or
push
test
popf
mov
sbb
fists
dec
mov
mov
push
mov
scas
pop
adcl
push
cmp
ret
cmp
mov
fisttps
in
loopne
add
popa
movsl
push
push
inc
addl
and
xchg
das
psllw
add
jecxz
dec
add
and
mov
lret
sbb
shlb
lahf
add
jmp
lods
mov
cmpsb
sbb
or
stc
pusha
arpl
rclb
scas
add
orl
insl
add
and
sub
std
pusha
sub
push
dec
insl
xchg
add
push
iret
pop
xlat
test
add
nop
lcall
jno
dec
stos
mov
adc
flds
or
push
or
sbb
mov
sbb
push
xor
xchg
nop
hlt
cmp
mov
sbb
xor
das
add
orb
add
fcmovnbe
pop
nop
mov
imul
negb
mov
incb
mov
mov
jo
rorb
adc
mov
push
fwait
xor
xchg
xlat
add
stc
mov
dec
sub
push
stos
sti
xchg
and
imul
aas
std
mov
jnp
add
loopne
scas
add
popf
bnd
mov
in
mov
roll
adc
enter
loop
nop
push
push
arpl
add
mov
gs
in
pop
push
push
jle
lcall
andl
inc
push
xchg
insb
rclb
test
cwtl
cmc
and
add
inc
ret
mov
nop
test
pop
add
inc
out
jno
shl
jge
hlt
js
je
inc
mov
call
mov
mul
out
xor
push
add
data16
stc
daa
loopnew
test
adc
filds
mov
loope
cmp
mov
jbe
push
mov
movb
jnp
enter
mov
xorl
shlb
cmp
loop
add
and
or
mov
inc
sub
loope
xchg
pop
or
das
mov
add
rolb
jnp
or
push
cli
and
loop
clc
aam
add
adc
mov
enter
sbb
sbb
jle
int3
lds
cmpsl
nop
cli
add
ret
add
lea
int
aaa
adc
les
dec
pop
pop
and
fdiv
add
mov
insl
repnz
inc
pop
insb
add
pop
sahf
push
cmp
push
pop
pop
mov
inc
outsl
mov
or
call
icebp
or
mov
js
or
nop
push
inc
cwtl
ret
imul
std
ds
and
add
inc
jl
mov
adc
std
xchg
jns
lock
add
or
jne
dec
mov
loope
cltd
shl
fsubrp
add
lods
and
adcl
sbb
pusha
sbb
jle
int
jne
and
or
dec
add
lret
outsl
adc
popa
add
leave
int3
hlt
imul
pop
sbb
fs
clc
sahf
bound
add
dec
cmpb
inc
out
mov
add
insl
xor
sub
stos
cli
and
jne
jae
add
jmp
pop
icebp
inc
ljmp
pushf
cmp
subb
adc
lock
sub
jnp
mov
or
xlat
rolb
arpl
inc
and
loopne
sbb
push
inc
es
adcb
adc
shl
jmp
dec
dec
das
shrl
push
add
negb
mov
orl
mov
mov
add
and
pushl
sub
fiadds
and
add
inc
cmp
adc
xor
xlat
fiaddl
nop
jle
repz
lret
arpl
hlt
and
inc
data16
jbe
adc
imul
pusha
rolb
push
call
mov
in
mov
pop
or
in
imul
dec
push
jge
jae
xor
dec
adc
lcall
xor
adc
sbb
lea
std
clc
add
and
inc
or
or
je
arpl
ret
ds
mov
addr16
fwait
ljmp
in
int3
or
mov
movsb
push
addl
sbb
frstor
jo
xchg
cmp
repnz
arpl
andl
pusha
gs
add
cmp
dec
loopne
lret
pop
xchg
out
cmp
cltd
ret
inc
daa
or
test
mov
enter
rorb
cwtl
push
popa
loopne
xor
adc
in
movsb
xor
xorb
mov
testb
jns
inc
test
cmc
jg
xor
roll
loop
or
mov
mov
xchg
add
jp
sub
lock
fmull
mov
add
ret
fsubs
cmp
push
and
add
cmp
xchg
pop
push
sbbb
out
insb
mov
xchg
lret
test
enter
xchg
pop
testl
and
add
nop
unpcklps
imull
cmp
hlt
iret
add
loope
inc
mov
out
stc
sbb
daa
arpl
sub
inc
rolb
in
aad
add
mov
push
loop
xor
xor
mov
cltd
out
xlat
bound
test
mov
adcb
add
cmc
push
inc
or
xchg
sbb
roll
xor
dec
fistpl
pop
push
push
add
jns
mov
add
push
and
cmpsl
int
inc
inc
clc
add
cmp
xchg
ret
and
subb
adc
lret
orl
pop
add
mov
xor
add
in
mov
roll
push
call
arpl
hlt
mov
add
jnp
jns
jae
aas
inc
lret
repnz
push
out
pop
jno
push
sbb
lods
int
jb
loopne
jecxz
add
mov
dec
ss
add
xor
jns
add
cwtl
or
jle
adc
std
xor
add
mov
cmp
cltd
lods
inc
insb
shlb
cmpsl
jle
flds
jae
push
pop
sub
sub
jb
roll
mov
push
les
lret
insb
or
mov
aas
sbbb
xchg
xlat
inc
cmc
cmp
scas
or
addl
and
pop
push
xchg
outsb
add
mov
jae
stos
add
xor
lahf
jns
jmp
and
mov
or
loop
scas
push
add
dec
test
into
pushf
ljmp
lahf
ja
popf
test
inc
in
xorl
inc
lds
cmp
push
sub
xchg
mov
xchg
ds
fistps
aam
cli
add
imul
add
subb
xchg
fsubs
jp
iret
pop
fistpl
nop
leave
add
xchg
sbbb
jmp
lock
add
in
pop
cmpsb
jl
ror
in
incb
lea
ja
sbb
or
lock
inc
ljmp
cmp
test
sahf
sbb
fcmovne
pop
sbb
and
bound
hlt
popf
add
cmpsb
clc
add
test
jmp
aaa
and
mov
sub
cmp
push
sub
jo
stos
mov
xchg
mov
shrb
cmpsb
ret
dec
pop
andb
negl
add
jecxz
add
in
lret
pop
mov
push
sahf
or
sub
and
movsb
es
push
mov
xchg
or
or
add
and
filds
cwtl
ja
dec
push
lcall
or
mov
out
xor
pop
or
adcl
imul
cmp
lock
push
jecxz
mov
iret
jae
add
pop
loop
xor
add
test
dec
hlt
lret
push
dec
icebp
sarl
xchg
add
fcomps
cli
pop
mov
sub
dec
shrb
sub
andb
add
pop
add
mov
push
popf
dec
lahf
xor
pop
loope
add
or
push
decl
cmp
sub
loop
inc
push
mov
testl
test
stc
fdivl
or
push
pop
scas
cwtl
rorl
inc
daa
pop
ja
mov
xor
xchg
sub
gs
push
adc
fld
movl
ret
orl
adc
adc
jo
xchg
or
stos
loopne
ficoml
and
ret
mov
add
push
and
add
inc
cmpb
add
outsb
or
sbb
aam
adc
xchg
add
shlb
sbb
jg
push
fidivrl
icebp
stc
cs
xchg
and
push
pop
test
pop
ss
loop
outsl
cld
jecxz
push
xchg
xor
inc
mov
xor
pop
into
mov
icebp
jns
fldl
jo
in
add
ret
fildl
arpl
cld
mov
jne
sub
leave
das
repz
or
sbb
lds
inc
xchg
inc
sub
sub
ds
add
lock
lods
adc
and
das
inc
or
mov
xorb
inc
push
and
cmp
cltd
add
mov
or
into
jo
and
iret
xchg
popf
sbb
nop
sub
push
jecxz
stos
add
inc
sbb
mov
movaps
daa
dec
sti
add
sbb
push
cli
add
push
mov
adc
xlat
cmp
add
fistps
cwtl
je
in
pop
out
shlb
xor
add
cmp
jecxz
insl
loopne
push
xchg
je
adc
and
inc
daa
xor
mov
movsl
push
cmp
adc
add
sub
add
sbb
add
mov
xchg
inc
pop
add
cmpsb
add
add
xchg
cmp
cmp
add
je
jg
outsb
cmp
insb
pop
mov
fisubs
out
dec
jmp
add
mov
loopne
add
adc
movsl
add
fmuls
xlat
cld
pop
add
sbb
pop
hlt
loope
add
xlat
mov
iret
scas
mov
adc
cmp
sbb
cwtl
movsb
cld
inc
add
incb
aaa
adc
repnz
add
cmp
add
add
sub
xor
push
add
pop
sbb
dec
dec
inc
mov
cmp
push
adc
stos
add
in
push
add
dec
je
repz
sbb
add
or
adc
jl
je
add
out
push
pop
mov
or
inc
jo
in
stos
mov
ljmp
dec
mov
dec
xor
mov
jp,pn
mov
or
mov
sbb
lahf
pop
xchg
mov
push
rorb
dec
pop
pop
pop
lret
cmpsl
push
add
and
dec
aad
insl
bound
or
fsub
mov
cmp
add
insl
test
fcomps
mov
dec
ss
sub
faddp
xchg
int3
nop
mov
push
movsl
mov
fisubl
popf
repnz
and
jl
add
dec
or
mov
sub
jp
sbb
xchg
and
sahf
popf
cmpsl
mov
add
ljmp
xorb
loopne
add
fidivrl
pop
movsl
cmc
sarb
push
fiadds
push
sahf
ficompl
jecxz
cwtl
test
inc
pop
sbb
push
cmpsb
rolb
shll
mov
add
and
fwait
mov
ja
cmp
jmp
pusha
inc
sbb
jbe
mov
adc
not
dec
jmp
dec
mov
enter
mov
cmpsb
in
rcll
les
lret
sar
movsb
push
mull
add
lret
dec
inc
cmp
dec
nopl
mov
or
out
mov
sbb
andb
cmp
push
icebp
add
jns
out
push
mov
fisubs
ror
sub
cmp
outsl
push
jo
mov
mov
into
and
inc
sbb
int3
cmp
lock
cmp
xor
pusha
cmpsb
imul
and
pop
xchg
out
dec
lock
push
daa
loope
das
dec
jo
add
ss
fwait
add
dec
addr16
and
jg
les
pop
imul
pop
xor
and
xchg
or
cmc
fs
sti
push
in
and
rolb
pop
xchg
flds
daa
cwtl
or
call
lea
stos
out
loopne
pop
push
mov
sbb
add
cltd
lcall
lret
mov
leave
pop
jnp
add
sbb
jae
pop
stos
jl
std
mov
add
mov
mov
lock
sbb
sub
push
scas
sbb
add
les
sbb
rolb
enter
cld
or
inc
movsb
lods
lcall
add
add
add
test
mov
add
push
stos
cmpsb
cltd
fldl
cli
movl
lds
add
mov
mov
and
scas
add
lea
int
cmp
sbb
mov
mov
jg
add
add
add
test
inc
jg
pushl
pusha
push
jno
enter
xor
sar
in
rolb
xor
pop
push
repnz
mov
xchg
dec
cmpb
inc
pop
into
sub
inc
sti
rorb
jp
and
push
icebp
in
mov
adcl
jae
mov
dec
mov
mov
out
fcoms
in
ror
popa
and
inc
les
jg
or
add
or
add
popf
xchg
fists
addb
les
add
jmp
enter
sub
call
sbb
jl
and
subl
inc
test
add
sub
andb
lret
sub
or
adc
loop
add
inc
repnz
inc
xchg
sbb
cmp
push
je
popa
loop
rol
movsb
fwait
out
sbb
call
push
xchg
jnp
imul
lods
mov
shlb
ret
out
out
xchg
add
mov
jne
outsl
lcall
mov
jno
add
push
mov
test
jl
in
add
inc
cs
add
outsl
adc
inc
sbb
cmc
jle
aaa
mov
stc
out
cs
inc
inc
rcrb
out
dec
push
mov
xchg
add
pop
sub
or
add
clc
test
call
int
jae
and
fcoms
push
add
add
cmp
cld
andb
mov
inc
aam
or
out
mov
loopne
inc
dec
sbb
imul
dec
std
repz
cli
add
mov
mov
inc
jg
aaa
add
icebp
jmp
push
dec
push
add
daa
inc
dec
test
sar
scas
pop
sbb
in
out
cmpsb
inc
loop
and
adcb
fildl
push
inc
add
mov
xor
ret
mov
pop
cmp
repnz
dec
mov
shl
in
or
cmc
inc
daa
ja
rolb
add
inc
push
roll
xchg
popf
mov
lods
add
cmp
sub
xchg
aam
sbb
xchg
jbe
gs
add
jae
xorl
outsl
jge
testb
sarl
fisttpll
jle
add
mov
and
inc
in
or
lds
jmp
nop
or
sbb
test
mov
sarl
cmpb
xor
and
mov
jmp
jbe
add
xor
dec
mov
sub
add
pcmpgtd
mov
xchg
enter
push
cs
enter
xor
lret
mov
jmp
into
jno
sar
add
scas
and
jnp
adc
sub
push
js
pop
push
xor
ret
add
jl
lods
pop
pusha
add
rcrb
push
push
aaa
and
xchg
xlat
mov
push
ret
mov
pextrw
jle
push
and
mov
inc
dec
mov
lock
gs
addr16
repnz
mov
xor
js
mov
call
add
push
mov
push
mov
mov
movsb
mov
sbb
adc
push
andb
mov
popf
cmp
nop
clc
add
iret
mov
add
push
scas
push
push
cmpb
repz
imul
int3
xor
mov
data16
and
push
dec
cmpsl
xchg
dec
xchg
push
leave
jb
xor
push
arpl
add
xlat
aas
jae
push
cli
add
lock
inc
mov
add
mov
add
imul
mov
xchg
int
cmp
andl
xor
int3
xor
push
in
xchg
or
inc
or
lods
or
mov
jo
and
adcb
add
loopne
add
mov
and
inc
mov
adc
jl
mov
add
jae
ss
outsl
sbb
shrl
ljmp
in
mov
cs
ljmp
jno
push
pop
mov
cld
shll
xorb
stc
adc
ja
pop
sti
push
pop
lods
inc
jne
bound
sbbl
addr16
mov
std
addb
jb
or
hlt
fnsave
ret
jbe
inc
add
and
mov
xlat
imul
stc
sub
or
or
mov
pusha
repz
imul
mov
es
outsb
add
adc
lock
fistpl
orb
outsb
test
push
fs
dec
push
add
xor
pop
loope,pn
xor
sbb
xor
mov
cmp
scas
jo
inc
mov
push
adc
mov
int
adc
lods
mov
lods
add
jbe
popf
cmp
movb
xchg
js
aad
sbb
xchg
cmp
es
loope
icebp
adc
xor
dec
mov
xor
pop
cltd
pop
sub
inc
and
imul
test
cmp
push
add
mov
pop
dec
add
pop
std
arpl
loope
movsl
xlat
cmp
pop
and
adc
push
dec
and
lret
subb
leave
mov
sbb
dec
in
rcr
and
xchg
cmp
cmp
inc
and
add
or
push
add
add
sahf
shll
mov
sub
scas
mov
cmp
or
or
jg
xlat
nop
int
loop
scas
hlt
cmp
movsl
add
inc
mov
sbb
jl
out
lock
adc
cld
cmp
add
fdivr
mov
cmp
ror
popf
es
hlt
mov
adc
out
in
xchg
in
mov
stos
or
icebp
fwait
dec
cmp
or
ljmp
push
sub
and
test
mov
fimull
add
cmpsl
and
ja
and
dec
xor
cmc
dec
out
mov
ret
pop
cmp
xor
std
mov
arpl
add
das
or
sub
sbb
dec
fimuls
sbb
mov
add
cmc
push
negl
cs
add
xor
cwtl
push
inc
test
pop
inc
out
nop
pushf
add
dec
lcall
xchg
jle
jae
xor
cmp
cmp
jmp
xchg
mov
add
xor
inc
push
add
push
mov
aaa
xchg
mov
pop
push
stos
fadds
dec
mov
push
dec
cwtl
adc
lahf
sbb
bound
pop
jmp
out
mov
pop
scas
hlt
push
ret
sbb
test
mov
stos
pop
cmp
dec
jmp
sbb
fs
adc
jle
or
cli
push
cmp
mov
pop
cmp
jo
push
xchg
pop
add
les
push
push
sahf
imul
inc
pop
lcall
or
icebp
add
mov
and
push
and
adc
repnz
pop
inc
pop
xchg
mov
dec
fcoms
adc
or
outsb
test
ret
or
pop
ss
inc
iret
push
push
sti
cmp
inc
mov
aam
sub
test
dec
add
add
outsl
aad
mov
and
add
arpl
sbb
cli
add
mov
push
push
mov
pushf
leave
ret
sbb
out
inc
outsl
push
add
jle,pn
push
sarb
jo
das
adc
divb
cwtl
jle
add
jecxz
and
mov
sbbb
xor
hlt
insb
adc
pop
leave
jne
xor
lret
orb
mov
fcomps
or
addb
pop
push
scas
jbe
lds
ror
into
es
dec
pop
pinsrw
xorb
sbb
jmp
or
femms
test
xchg
add
fwait
mov
pusha
push
mov
add
mov
inc
mov
call
mov
loopne
jnp
and
mov
push
adc
bound
mov
add
push
inc
mov
cmp
iret
sbb
into
sub
fildl
addr16
push
xor
lods
push
sahf
js
inc
push
mov
cltd
xor
add
xor
aam
cmpsb
and
mov
cmpb
mov
add
add
cwtl
xchg
add
es
pop
fcomps
mov
xor
mov
cmp
or
xchg
mov
xchg
es
sbb
arpl
test
add
mov
add
daa
mov
pop
cwtl
into
dec
inc
in
rcrb
pop
cmp
mov
movsl
pusha
pop
stos
add
inc
sbb
cmp
pop
add
jbe
jge
aaa
add
xlat
int
iret
nop
and
add
ljmp
sub
push
pop
sub
testl
rorl
add
cmp
nop
hlt
mov
pop
mul
lret
sar
subb
adc
mov
add
test
dec
scas
jb
dec
mov
mov
sub
add
scas
lret
push
adc
gs
or
fnop
pop
pop
insb
push
sbb
aam
dec
push
es
clc
cli
outsb
jp,pt
add
leave
xchg
push
insl
hlt
das
adc
loopne
enter
mov
push
mov
and
cmp
add
cltd
mov
add
add
cmp
mov
loope
popa
cmp
stos
xchg
fcoml
add
dec
lds
add
js
or
push
lods
sbb
insb
rorb
lret
xor
ljmp
aas
mov
imul
loope
daa
pop
push
mov
pop
ret
pop
xor
cmp
lret
inc
jo
out
imul
repz
std
mov
rolb
jg
add
add
outsb
in
cmp
dec
mov
dec
mov
aam
sub
adc
push
ds
popf
test
xchg
enter
xorl
push
popf
insb
mov
add
and
cmp
popa
cwtl
adc
rcrl
sub
cmp
xor
or
or
test
add
test
out
loopne,pn
adc
sti
mov
rorl
aas
scas
call
outsb
add
cmp
jno
add
push
pop
or
je
pop
rolb
add
push
push
lods
add
outsl
pusha
sti
iret
mov
add
mov
repnz
add
je
xor
imul
mulb
add
add
jnp
dec
popf
push
jno
add
notl
aad
add
add
scas
pop
and
cmp
jmp
or
pop
fcmovu
add
mov
mov
pop
roll
pop
scas
or
inc
or
xchg
dec
xchg
pop
xchg
or
sahf
sub
mov
add
push
inc
push
adc
xor
adc
add
cmc
iret
add
xchg
pop
in
pop
loopne
sbb
orb
dec
mov
dec
push
mov
pop
fwait
mov
add
mov
fldcw
es
fidivrl
call
mov
add
push
mov
and
adc
es
pop
dec
pop
mov
inc
addb
icebp
or
xor
enter
dec
pushf
pop
xchg
or
mov
test
push
cmp
andb
scas
ret
sub
stos
inc
bound
das
lcall
inc
sbb
push
dec
andl
test
inc
rorb
in
sbb
pop
shlb
pop
lret
mov
ljmp
sbb
mov
jmp
push
enter
pop
clc
rcr
push
test
mov
stc
pop
js
pusha
orb
mov
add
push
mov
mov
add
sub
jnp
sub
rol
imull
mov
add
test
inc
stc
cld
jle
add
add
inc
popa
add
ret
sbb
nop
xchg
cld
sarl
adc
aam
or
mov
sub
mov
repz
cmp
and
std
mov
push
xor
addb
sub
add
divb
mov
roll
movsl
out
push
outsb
pushf
testl
hlt
adc
in
cmpsl
movl
sbbb
jmp
inc
push
popa
mov
popf
pop
jbe
dec
push
fistps
orl
xchg
movsb
add
xor
mov
push
nop
push
add
aam
xor
test
pusha
call
clc
pop
ja
dec
add
outsb
mov
and
adcl
arpl
js
add
xchg
jns
pusha
fidivrs
add
inc
mov
xor
lcall
mov
popa
and
leave
xchg
ds
stos
scas
jnp
cmp
js
pop
xor
add
addl
test
add
sub
sbb
adc
jae
cmpsl
out
adc
and
movsl
lret
enter
mov
dec
cld
xchg
add
loop
sub
cmp
popf
push
dec
adc
jl
shlb
push
fiaddl
test
xchg
inc
cmpsb
leave
inc
rcrb
jl
icebp
jae
push
arpl
in
dec
sub
test
sti
cmp
int3
push
pop
shl
pusha
sub
shrb
andl
mov
hlt
pop
ret
mov
fwait
lds
pusha
in
mov
aas
mov
test
enter
xlat
movsl
sbb
push
add
mov
adc
mov
push
clc
icebp
add
xchg
stos
xchg
push
idivl
xchg
pop
add
cmp
add
mov
mov
sbb
xchg
xor
inc
popa
push
and
pop
xchg
push
push
aam
test
cmc
mov
xor
adcb
or
dec
das
shrl
and
add
dec
xchg
lea
insl
add
test
jmp
movsl
sar
or
jae
cmpsl
adc
push
xchg
push
dec
mov
fnsave
add
pop
mov
mov
xchg
add
gs
mov
dec
sahf
imul
add
mov
addr16
push
adc
ror
mov
adc
hlt
arpl
xor
icebp
dec
std
insl
mov
test
in
push
mov
shll
rolb
ret
and
imul
in
aad
test
in
fidivl
test
xchg
mov
add
pushf
pop
jno
movlps
xor
out
out
lods
cmp
cld
add
adc
addl
xor
lds
xchg
sbb
adc
mov
fnsave
popf
mov
ret
or
xor
sbbb
dec
divb
and
mov
xchg
pop
push
add
adc
cmp
xor
lcall
ja
pushf
jb
dec
bound
jae
or
mov
add
lods
xchg
push
lock
sub
scas
sub
xchg
add
xor
or
mov
cmp
jae
xchg
dec
aas
jo
add
out
mov
xor
add
mov
push
add
dec
divb
xchg
hlt
push
adc
adc
jg
dec
shr
adc
adc
pop
mov
aam
test
arpl
out
jl
add
aas
or
xchg
test
push
imul
int
and
inc
dec
dec
fpatan
add
sub
cmp
cmp
popa
hlt
std
out
stos
mov
aad
cwtl
stc
out
fbstp
inc
jns
mov
imul
jo
add
xchg
xor
sti
mov
hlt
mov
xor
stc
sub
insb
imul
add
pop
and
jbe
mov
addr16
add
flds
and
add
add
push
xchg
loopne
adc
popa
les
xor
fwait
adc
cli
add
add
ljmp
sbb
outsb
dec
push
hlt
or
add
xchg
add
xor
stos
add
iret
cmp
add
dec
xchg
dec
xchg
insw
subb
fimuls
rcrl
or
pop
sbb
fisubrl
test
fwait
jmp
in
jo
cmp
dec
lock
jae
cmpsl
add
and
call
adcl
or
and
mov
jns
clc
add
mov
roll
xor
dec
and
leave
shrb
add
pusha
or
sahf
jae
sbb
add
loop
push
mov
hlt
xorb
mov
and
mov
add
jecxz
jns
test
lahf
push
dec
popa
push
popf
jnp
inc
cmp
mov
add
mov
sbb
mov
mov
dec
sbb
lods
jmp
dec
add
loopne
push
sbb
loope
lret
add
mov
arpl
dec
xchg
push
push
dec
fistpll
xchg
insb
xor
in
scas
push
xor
adc
clc
mov
jae
mov
cwtl
loopne
hlt
sbb
gs
jnp
mov
sbb
xchg
add
gs
cltd
pop
adc
incb
rorb
mov
jne
aas
stos
cli
mov
sub
mov
faddl
mov
pusha
lret
sbb
ja
adc
adcb
andl
add
pop
je
shlb
xchg
and
sbb
arpl
fdivl
jmp
test
and
xor
in
xchg
pushf
xor
lret
mov
mov
cmpsb
and
hlt
lods
pop
xor
or
in
cmp
pushf
mov
out
orb
mov
and
push
add
cltd
or
jo
and
cmp
in
notl
btr
fnstsw
pop
add
mov
dec
add
jl
mulb
clc
add
mov
insb
testb
adc
cltd
fbld
push
cmp
popl
lds
ds
jbe
add
inc
sub
scas
push
and
and
les
repz
mov
add
jg
fsubrl
stc
sti
inc
adc
push
divb
rorl
push
in
sub
flds
int3
add
pop
push
and
sar
cmpb
in
fsubl
negb
add
mov
mov
lcall
jae
mov
and
adc
jle
mov
cwtl
sahf
dec
or
mov
inc
roll
add
and
jmp
jne
xor
pop
pop
ljmp
daa
inc
scas
push
repz
sarb
xchg
dec
or
aad
mov
inc
imul
cmp
pop
sbb
ret
nop
add
out
cmp
dec
push
adc
push
jge
sbb
mov
arpl
insl
call
lock
lods
das
lds
shr
mov
sbb
add
inc
loope
js
cmp
out
push
inc
pop
imul
push
cwtl
push
inc
pmuludq
push
pushf
xor
test
ja
xchg
sub
psubw
push
cmovo
push
mov
popa
or
fstpl
test
ret
lods
addb
sub
mov
repnz
add
mov
pop
fucom
sub
add
xlat
mov
mov
ss
shl
dec
push
cwtl
test
clc
add
sub
cmp
ret
hlt
fucomi
enter
add
mov
loope
sbb
lock
lret
addl
jns
lds
icebp
loopne
cmc
inc
push
lcall
stos
out
aad
in
sub
dec
std
jno
ret
push
imul
sub
jg
mov
insb
negl
pop
mov
jb
jns
inc
inc
dec
pop
pusha
ds
mov
mov
ret
mov
lods
pop
rcll
add
out
aas
pop
jo
loopne
stos
inc
mov
push
dec
imul
imulb
out
inc
push
mov
arpl
and
mov
ret
sbb
imul
jae
add
lret
adc
jle
loopne
and
jno
popf
out
sysexit
xchg
add
add
dec
inc
inc
jl
into
add
test
cmpl
mov
dec
add
hlt
xchg
jmp
andb
inc
sub
into
pop
sbb
and
pop
mov
loopne
hlt
mov
loopne
push
push
loop
rorb
mov
sub
add
xorl
add
or
clc
cmc
sarl
lret
sbb
and
leave
lcall
cmpsb
mov
and
sbbb
or
xchg
repz
sub
test
mov
dec
sarb
dec
xchg
xchg
orl
fldenv
lock
orb
loopne
add
test
loopne
mov
push
pop
aam
data16
mov
sarb
lret
sbbb
lea
subb
int
mov
jg
addr16
ficomps
insb
ret
into
xor
sbb
movb
jle
mov
gs
sbb
pop
or
popa
add
rclb
adc
cmp
mov
inc
arpl
xchg
outsb
add
aam
cmp
aas
cwtl
mov
add
das
mov
mov
ret
pop
js
push
push
xchg
adc
nop
adc
fldl
jg
lea
aas
dec
addl
jns
ffreep
pop
lock
or
jmp
popa
movsl
push
mov
add
and
push
lret
push
push
push
jae
fisubrl
shrb
add
std
sbb
bound
fildll
or
mov
addb
aam
divl
jmp
jmp
inc
xchg
and
push
push
add
imul
mov
js
add
inc
jno
jne
inc
or
adc
adc
mov
inc
ss
mov
orb
add
iret
fstps
jo
pusha
add
sub
and
and
add
pop
out
pop
xchg
andb
push
xor
xor
pushf
jnp
add
addr16
ljmp
fsubr
movb
cmpsl
add
jg
xlat
sbb
scas
icebp
in
iret
pop
and
ja
add
jo
mov
and
jmp
add
scas
pop
std
aaa
lcall
and
mov
cmp
or
adc
xor
fcoml
mov
jae
cmp
shll
pop
sub
dec
in
add
sbb
repz
jne
pop
push
sub
xlat
add
lea
lock
lret
and
mov
sbb
lods
jecxz
mov
js
dec
jmp
xchg
adc
ja
test
xchg
add
notb
repz
je
rorb
or
mov
push
add
mull
adc
xor
call
imul
mov
sbb
adc
test
rep
or
and
lret
bound
or
stos
js
sbb
test
in
mov
subb
addb
adc
pop
test
add
fldt
pop
add
popf
jecxz
rcrl
hlt
ret
push
xchg
ret
bound
fisttpl
add
enter
or
aad
dec
ja
outsl
push
aaa
stos
jo
xor
inc
ret
test
jne
add
push
add
mov
pop
mov
push
movsl
ljmp
cltd
add
push
mov
hlt
or
inc
xchg
and
add
lret
add
add
into
and
rcll
movsb
push
add
jb
pop
xchg
add
sub
outsl
sub
xor
push
sbbl
add
mov
and
fdiv
jno
pusha
mov
test
mov
loopne
add
sbb
mov
movsb
je
or
add
jg
nop
imul
test
nop
mov
push
loop
add
cmp
repnz
jne
in
add
sub
in
pop
stos
xchg
cld
int3
dec
jo
sub
mov
rorl
ret
cld
jl
movsb
pop
pop
cmp
pop
gs
cmpb
inc
cli
sbb
daa
xchg
lock
or
jns
stc
stc
xor
xor
push
pop
jmp
clc
push
xchg
imul
add
push
movsl
dec
loopne
jne
adc
jnp
add
fstpt
es
mov
dec
ljmp
xor
pop
cmp
gs
xchg
cmp
mov
sub
stos
sti
xchg
jo
mov
add
sarb
add
add
sub
add
inc
shlb
add
push
xchg
xchg
aaa
les
add
leave
xchg
xchg
sahf
cld
mov
dec
jo
or
add
jno
push
orl
pushf
dec
inc
pop
add
mov
rcll
add
jns
pusha
dec
pop
aaa
dec
stos
fs
xor
push
xor
es
rcll
adc
add
out
mov
imul
cmp
inc
add
leave
inc
iret
fildll
add
pop
cld
add
repnz
sbb
add
pop
or
sub
or
inc
xchg
inc
push
sbb
push
or
lods
xor
scas
push
je
dec
fs
adc
test
jne
insl
imul
push
add
fsubr
xor
add
push
aaa
push
in
jnp
push
scas
ljmp
add
hlt
adc
div
aaa
mov
cli
lret
icebp
xchg
add
ret
stc
xchg
xor
sbb
inc
pop
xchg
dec
xchg
xchg
sti
mov
push
icebp
and
paddq
adc
jge
mov
mov
lock
add
cmpxchg
pusha
xchg
adc
add
lea
sar
cmp
add
jno
scas
dec
jb
es
sbb
cmpl
and
test
pop
inc
out
orl
push
and
and
js
shlb
fsts
arpl
pop
aas
mov
inc
xchg
leave
lods
cmp
fwait
or
dec
cs
jl
mov
inc
call
mov
cltd
mov
xor
mov
pop
vcvtsi2ssl
inc
in
enter
add
scas
push
fdivl
call
add
popf
inc
mov
repz
fwait
test
adc
ffreep
mov
push
push
inc
dec
mov
cwtl
ret
fnstenv
popl
test
sbb
add
out
mov
xchg
cltd
pop
ss
or
in
rolb
lcall
inc
and
gs
aad
add
jns
dec
add
cmpsl
lods
xchg
sti
pop
mov
cmp
add
jb
fwait
mov
rcrb
mov
insl
mov
and
fs
add
dec
loop
inc
lret
jne
sub
popa
cld
inc
and
pop
dec
add
insl
data16
insb
mov
lret
and
mov
push
dec
repnz
adc
add
dec
sbb
sar
sbb
mov
mov
pop
sub
call
or
mov
add
enter
dec
cmpsl
and
popf
mov
adcb
pop
or
cmp
pop
sbb
add
xor
push
mov
jge
push
adc
mov
pop
pop
inc
push
mov
std
out
or
nop
lods
add
pusha
ss
pusha
hlt
add
add
pushf
bound
pop
test
cmp
mov
push
push
or
das
insb
fwait
dec
sbb
mov
pusha
iret
inc
enter
adc
pop
push
mov
bound
dec
das
xchg
inc
and
repnz
lcall
jge
inc
pusha
xor
mov
xchg
fimuls
pop
add
popa
cwtl
ljmp
inc
jnp
add
cmpb
lea
shr
push
add
sarb
sbb
push
or
jne
cmc
mov
cltd
mov
xchg
nop
add
popf
push
repnz
out
out
shll
push
or
shll
push
into
pusha
or
push
test
cltd
mov
pusha
xchg
push
xchg
rolb
mov
pusha
rorb
adc
xchg
pop
sub
push
jp
sub
ss
cwtl
adc
add
mov
not
push
add
mov
add
je
sbb
inc
sbb
stos
add
cmp
xchg
lock
jge
test
mov
hlt
aaa
add
mov
push
xchg
adc
popa
hlt
push
test
inc
sbb
adc
fsubrs
out
push
push
mov
jmp
leave
mov
ljmp
and
mov
inc
sub
or
adc
loope
call
adc
jnp
xchg
push
pop
pusha
cs
adc
pop
or
mov
pusha
aas
ret
dec
inc
xor
and
adc
mov
addr16
or
mov
pop
jl
add
pop
inc
lock
into
mov
jo
jns
or
stos
cmp
cmp
fcomp
mov
add
add
outsb
in
mov
jo
das
jno
stos
add
out
push
add
ljmp
cmp
pop
insb
dec
in
adc
sbb
test
ljmp
in
mov
jl
inc
out
add
inc
popf
loop
clc
mov
push
inc
cwtl
pop
arpl
stc
js
out
xchg
rcrb
push
jge
jno
cmp
add
mov
adc
aaa
push
jnp
ss
inc
lock
testb
add
je
xor
mov
add
mov
enter
mov
or
inc
int3
lock
mov
test
inc
js
cli
ret
and
mov
adc
sbb
push
xchg
jae
add
fsubr
and
jae
fistps
inc
ret
add
push
shrb
adc
adc
xchg
icebp
popf
mov
testb
jg
mov
aas
dec
pop
sbb
mov
xor
popa
push
inc
lcall
dec
and
cld
rolb
test
fnstcw
add
sbb
pop
inc
mov
adc
cmc
mov
xchg
ret
pop
aas
hlt
add
sbb
or
pusha
adc
aaa
and
mov
loopne
jnp
and
add
push
stos
sysenter
inc
insl
and
pop
aaa
and
into
inc
cmp
popa
jae
add
mov
movsl
out
loope
incb
xlat
orl
mov
imul
test
std
repnz
jns
mov
pop
or
sub
sub
pop
inc
push
mov
pop
popa
mov
leave
mov
out
test
push
cmc
test
xor
inc
lock
mov
leave
xchg
lea
js
or
mov
xor
add
dec
xor
dec
frstor
push
mov
repz
add
movsl
mov
into
and
pop
les
je
adc
stos
add
add
daa
cmpsl
aaa
sbb
in
inc
xchg
pop
or
das
adc
inc
push
add
fiadds
pop
inc
nop
getsec
add
mov
pop
lock
sti
sar
pop
lds
adc
jne
mov
cld
arpl
sbbl
shr
adc
nop
test
movsl
add
iret
fistl
out
pop
xor
cmpsb
sub
movsb
repnz
inc
sti
push
hlt
fdivr
add
mov
xor
in
dec
and
push
shr
fadds
popf
jg
sbb
xchg
jbe
mov
push
jmp
cmp
out
or
fs
xor
ja
jge
outsl
pop
popf
dec
cmpsb
and
imul
dec
add
and
pusha
mov
add
fbstp
cmp
pusha
add
inc
in
loopne
fadd
pop
rcrl
adc
mov
mov
jge
fldl
or
cmp
loopne
std
jne
add
adc
movsl
add
int3
mov
push
push
lods
or
mov
or
mov
add
and
rcll
jb
add
cmc
add
imul
fbstp
pop
pop
rcll
mulps
push
push
inc
inc
les
stc
fwait
out
mov
fistpll
xor
out
add
adc
outsl
std
mov
mov
andb
inc
iret
mov
cmp
aad
leave
pop
repz
sbb
mov
inc
mov
popf
scas
aam
je
pusha
or
xlat
js
add
rcll
or
mov
jge
pusha
call
mov
pop
push
insb
cmc
les
inc
inc
adc
in
out
sbb
dec
cmc
movsb
adc
add
pop
pop
mov
imul
add
xor
and
sbb
insl
jo
jle
jecxz
pop
add
jmp
test
and
xchg
in
dec
adc
or
shlb
int3
xor
lahf
mov
add
ret
mov
repnz
inc
lock
push
and
xorl
je
jge
rclb
mov
stos
outsl
pushf
add
sub
pop
jne
iret
pusha
in
imul
cmp
rclb
add
scas
pop
xchg
add
stos
jmp
sbbl
mov
pop
pop
mov
pop
push
push
mov
sbb
and
and
or
incl
ret
xor
leave
in
enter
add
push
jnp
cmp
jnp
jo
lea
cs
movsb
clc
sub
push
push
in
in
add
repz
pushf
jle
push
call
test
mov
enter
jl
pop
cld
push
add
or
xchg
mov
rolb
inc
push
add
or
out
roll
gs
fs
jg
je
andb
xor
mov
cmp
dec
sbb
test
int
jp
cmpsl
adc
cmp
mov
cs
dec
xchg
aam
cld
add
or
dec
mov
add
addl
push
or
and
daa
push
cmp
cmpsl
lds
sub
ss
mov
cmc
add
pusha
xor
loope
popf
inc
movsl
jne
push
adc
pop
sbb
dec
mov
js
mov
cmc
test
int3
sub
add
sbb
mov
pop
shlb
mov
xor
mov
jl
lds
xchg
sub
and
sbb
dec
addr16
in
push
jmp
push
mov
jge
xchg
fistps
dec
push
xor
or
add
loop
cli
adc
adc
rcrl
or
flds
push
nop
or
push
ss
fmuls
pop
inc
mov
dec
subb
push
popa
add
fiaddl
mov
rorb
adc
in
xchg
test
mov
xor
push
or
fsubl
scas
data16
out
out
testb
dec
rorl
dec
lock
jle
movl
daa
adc
jne
insb
fiadds
xchg
push
jbe
push
push
pop
xchg
mov
movsb
push
push
movsw
ret
popa
add
in
lock
je
sub
sbb
loopne
dec
rol
pusha
hlt
sahf
fwait
mov
adc
push
cli
js
cmp
pusha
add
jne
sbbb
mov
add
inc
jle
pop
int3
subb
je
mov
dec
xor
arpl
rcll
test
pop
xorb
cmp
and
jb
add
or
mov
push
add
add
mov
sbb
cmpsb
sarb
inc
orb
mov
xor
imull
xchg
lahf
lods
cmpsb
rolb
cwtl
ror
mov
push
loopne
insl
add
xchg
sbb
in
cltd
sub
repz
sbb
add
mov
jae
add
xchg
pop
cltd
dec
pop
jecxz
scas
jmp
dec
cmp
cmc
call
rorb
ret
and
add
or
ficomps
jns
cld
and
mov
pop
loope
or
enter
add
lds
adc
inc
push
fildl
enter
jo
iret
add
xchg
push
push
aaa
add
mov
dec
bound
ret
call
mov
mov
xor
bound
out
sub
add
jns
pop
in
mov
sub
mov
cmp
loop
pusha
jbe
aaa
cmp
fwait
push
jae
mov
hlt
les
lods
adc
inc
enter
jp
add
repnz
pop
and
mov
jmp
data16
jp
mov
mov
push
es
fdivs
cmpsb
std
sub
addb
cltd
ret
gs
ljmp
in
mov
nop
cwtl
inc
xorl
popf
dec
lret
in
xchg
cmc
pusha
scas
xor
mov
hlt
sub
pop
push
nop
ds
ret
aam
iret
enter
filds
push
mov
jae
mov
fisubrl
dec
cmp
gs
mov
sbb
dec
xchg
js
stos
push
dec
xor
mov
out
sbb
mov
in
pop
repz
add
ret
inc
pop
mov
inc
mov
movsb
add
insb
scas
iret
push
mov
sbb
inc
or
add
mov
ret
mov
mov
repz
push
add
pop
push
popf
push
ror
mov
inc
pop
push
pop
add
lock
out
or
and
sbb
sub
fsub
add
pop
push
test
sbb
shlb
shl
nop
lods
mov
fbstp
fidivrl
add
push
sti
adc
mov
loopne
out
test
push
add
sub
test
daa
xchg
fcomps
add
xor
cmpsb
orl
std
sub
add
xchg
ss
cltd
and
or
into
inc
mov
rorb
sbb
pop
insb
add
scas
lock
popa
push
test
stc
daa
adc
sbb
rolb
outsb
popa
add
push
ret
pop
cld
mov
test
or
pop
or
js
ds
sbb
xor
add
inc
jge
xor
add
imul
andb
push
fwait
cwtl
dec
push
imul
add
mov
stc
mov
jmp
sub
cmc
inc
testl
pusha
jg
add
jge
xchg
js
insb
lock
push
out
mov
das
mov
dec
loopne
add
mov
and
jo
adc
add
add
imul
mov
add
sub
cmpsb
push
fisubrs
std
sub
xor
hlt
loopne
pop
sbb
jmp
jmp
and
test
clc
out
data16
dec
sub
mov
out
mov
jge
jl
push
sti
and
mov
push
pop
inc
sub
add
sbb
bound
enter
jl
outsb
pop
notl
dec
push
mov
in
fs
mov
fnsave
add
and
mov
jb
push
or
es
dec
inc
addb
mov
adc
jecxz
adc
fisubl
je
adcl
mov
sar
icebp
inc
sarb
add
or
adc
daa
imul
lds
out
cwtl
stos
xchg
cs
mov
add
je
xchg
jae
pop
orb
shll
xor
sahf
in
adc
in
arpl
jne
inc
lahf
mov
je
jo
nop
cmp
test
or
js
jo
add
jge
out
inc
mov
or
loope
mov
pop
xchg
ds
or
dec
xchg
xchg
aaa
jp
sahf
fcoms
shll
mov
inc
push
jge
jp
add
xor
pushf
mov
xorb
sub
xchg
shr
add
pusha
in
mov
and
inc
icebp
add
sub
nop
push
das
icebp
add
mov
jae
sbb
rorl
jp
mov
je
and
cmp
xchg
inc
inc
adc
out
out
and
jle
pop
push
arpl
pop
push
mov
inc
jl
pop
lds
mov
sbb
rorb
ficoml
test
push
push
xchg
pushf
andb
xchg
push
sbb
out
push
push
sub
in
pop
hlt
loopne
iret
adc
add
mov
frndint
icebp
add
and
push
mov
cmpsb
xchg
lahf
mov
add
jge
mov
call
mov
stos
insl
loope
or
iret
dec
cmp
xlat
flds
add
mov
sbb
adc
xor
pop
dec
lret
pusha
out
test
daa
repnz
inc
mov
xor
jbe
dec
sub
shl
push
xor
mov
dec
xchg
dec
push
inc
roll
ret
pop
movsl
gs
fucomp
push
loopne
iret
add
push
or
pusha
and
pop
shll
xor
imul
sub
or
inc
add
pop
rorb
sub
push
inc
ljmp
lahf
mov
dec
mov
and
mov
or
ljmp
call
in
neg
sub
mov
imul
mov
shl
mov
dec
xor
and
loope
add
in
enter
nop
lcall
test
addl
push
or
lds
jno
arpl
enter
mov
cmpsb
inc
cwtl
xor
push
bound
lret
xchg
adc
arpl
add
les
jl
leave
ret
cmp
inc
clc
call
shlb
ds
bound
or
call
pusha
test
dec
mov
add
aam
or
xor
faddl
adc
arpl
aad
test
fiadds
pop
addb
aas
pop
popa
je
cmp
dec
push
test
and
lret
push
cli
add
les
imul
je
push
fiaddl
xor
data16
lahf
popa
jae
ljmp
lret
push
push
cmpsb
push
sbb
jp
scas
mov
scas
push
and
cmpsb
call
or
adc
es
add
das
dec
clc
dec
jno
into
lret
imul
mov
pop
jmp
jmp
sbb
sbb
dec
out
cmpb
pop
cltd
inc
add
sbb
add
ror
cmp
jno
push
cmpb
lds
pusha
push
cld
pop
xor
les
or
fmuls
pop
add
mov
jp
inc
out
out
sbb
ja
push
and
lock
mov
fwait
ss
jecxz
dec
mov
test
xchg
outsb
dec
or
sbb
mov
mov
popa
es
mov
clc
cwtl
les
xor
push
jge
loope
jp,pn
test
and
iret
dec
or
and
and
sub
adc
ss
dec
inc
pusha
add
mov
and
scas
inc
mov
sbbb
and
dec
xchg
fisubl
sbb
adc
add
mov
clc
cmpl
jo
shrb
seta
xor
orb
adc
pop
ds
ss
xor
je
in
daa
or
cmp
test
popf
in
and
test
ljmp
push
in
aad
dec
out
push
pop
or
out
add
in
aas
mov
add
or
adc
outsb
fs
test
xchg
pushf
pop
sarb
and
jg
cwtl
inc
push
loope
or
sarb
xchg
mov
mov
psubusb
rcll
ret
cli
xchg
push
xchg
pop
mov
scas
jg
dec
inc
imul
fistpl
sub
rclb
add
mov
cmp
pop
mov
fidivrs
int
and
clc
shlb
movsb
add
dec
pop
lahf
jecxz
or
add
shll
popf
daa
mov
nop
mov
inc
and
test
movsb
add
pop
ljmp
pusha
popf
dec
or
test
add
adc
xor
jl
add
push
movsb
cli
mov
arpl
jmp
inc
sub
adcb
outsb
adc
add
jg
add
and
or
in
add
imul
dec
mov
mov
leave
ret
iret
stos
jne
add
arpl
lods
mov
add
add
lock
movsb
je
pop
call
fs
mov
mov
mov
add
cmpl
mov
stos
jae
loopne
out
ds
inc
adc
arpl
add
lods
sahf
mov
add
push
in
inc
inc
jg
lds
and
cmc
pusha
or
iret
enter
cmp
incb
push
rcrb
sbb
rclb
imul
add
jne
cmp
repnz
pop
pop
sbbb
loop
add
inc
inc
dec
or
jno
adc
mov
pushf
sbb
push
stc
xor
out
sbb
aaa
sti
shl
cmp
sbb
and
movsb
pop
rolb
or
andb
add
adc
dec
fisttpl
loopne
mov
scas
mov
push
repz
dec
pusha
sub
adc
stos
dec
dec
gs
es
or
pop
cwtl
mov
lods
cmp
add
inc
cmpb
xchg
insb
push
sub
pusha
add
pop
out
testb
shrb
subb
in
jne
mov
jmp
mov
clc
out
loopne
rolb
fxch
out
add
in
mov
push
lods
jns
mov
rolb
add
xchg
cmpsb
daa
loop
or
inc
ffree
fmull
mov
popf
push
and
jmp
dec
sbb
aas
pop
inc
xchg
mov
mov
shrl
jo
jae
in
or
fwait
dec
adc
mov
fsub
push
insb
xor
mov
push
imul
stc
lcall
ficoml
sbb
jg
inc
pushf
mov
rolb
mov
daa
mov
popa
aam
pop
call
inc
add
add
adc
mov
sub
pop
out
mov
js
ret
cmc
and
add
call
test
fistps
jne
sbbl
add
and
sbb
sub
inc
cmp
loope
mov
addb
dec
adc
inc
inc
or
hlt
add
jg
mov
pushf
add
sub
sbbb
add
test
xlat
pop
add
stos
das
push
inc
and
pop
loop
fsubr
jnp
xor
clc
mov
in
jp
dec
add
cmc
sbb
mov
in
out
aam
jl
push
pop
push
in
lahf
add
adc
lret
negb
in
idiv
and
or
adc
into
dec
xor
lock
popf
jns
add
add
cmc
or
negb
pop
lock
jl
add
xor
and
js
inc
ljmp
sbb
idivb
push
fwait
add
adc
or
adc
pushf
leave
outsb
shlb
and
cli
sbb
popa
add
aad
int
push
and
cmovl
loope
add
js
add
and
dec
xor
pusha
ja
xchg
pop
inc
cli
repnz
mov
stos
cmp
add
stos
call
rorb
mov
add
jb
push
inc
mov
icebp
fsts
lea
mov
add
int3
inc
in
sub
inc
jns
add
aas
stos
movsl
mov
les
inc
sbb
push
incl
int3
pop
aaa
aas
cmovo
xchg
xchg
inc
push
orb
outsl
jns
push
fdivl
pusha
shlb
repnz
jecxz
into
cmp
and
push
lahf
sub
or
ret
imul
adcl
xchg
dec
andb
xor
jge
xor
pop
ljmp
adc
jle
mov
add
adc
mov
data16
add
inc
rcrb
add
imul
and
pushf
adc
dec
add
leave
shll
out
jl
inc
xorb
add
es
cld
xchg
movswl
repz
mov
mov
call
imul
push
cmpsb
xor
push
mov
mov
roll
cmp
jl
bound
popf
inc
jne
in
movsl
xor
push
push
add
jo
dec
xorb
lret
and
mov
je
inc
nop
sub
pop
sbb
mov
pop
je
lahf
inc
jecxz
scas
call
rcr
add
mov
fsubrl
cmp
add
xchg
fs
or
and
pusha
dec
sub
jno
cmp
dec
nop
dec
push
fiadds
aas
vmovhps
out
add
stc
lret
jg
pusha
sbb
jns,pn
aam
ja
pop
cmp
inc
sbb
mov
fsub
rolb
add
adc
jnp
xor
and
mov
fstpl
dec
in
ret
pop
loopne
adcl
jp
add
fiaddl
leave
stc
pop
cld
and
jo
mov
call
add
dec
dec
clc
push
addr16
add
out
movsb
or
clc
cld
testl
xorb
rorb
lret
jmp
pop
gs
xchg
jg
loopne
addb
mov
xor
xor
loope
pop
std
sbb
leave
xchg
jbe
pop
popf
push
or
insb
xchg
push
in
add
shlb
inc
shr
pusha
out
adc
repnz
iret
comiss
stc
push
daa
push
xchg
xchg
cmpsb
and
cmpl
cmp
lock
adcb
inc
sbbb
movsl
add
push
mov
ljmp
adc
or
xchg
test
inc
xor
sub
mov
jb
call
jl
lret
jo
add
and
nop
or
das
dec
xchg
test
xor
je
push
add
cmp
inc
hlt
cmc
movb
in
imul
pop
daa
or
div
sbb
call
mov
ret
inc
add
lcall
jg
push
lea
add
xlat
push
pop
add
cmp
lahf
mov
mov
and
in
add
jle
stos
shlb
or
push
dec
xor
enter
sbb
jge
cmp
mov
jnp
cmp
mov
cmp
add
add
je
pusha
inc
and
fldenv
fs
sarb
popf
add
jge
cwtl
call
adc
dec
dec
jnp
mov
add
lods
pop
sbb
imul
add
inc
adc
out
js
xchg
idivb
add
cli
andl
ret
add
mov
and
or
pop
mov
idivb
or
mov
and
add
das
insb
lcall
outsl
pop
fdivs
jno
cmp
xor
mov
or
dec
mov
stos
add
and
lods
shl
xor
pop
add
sub
sbb
pop
mov
push
movhps
lahf
or
or
mov
sarb
les
insb
mov
insl
scas
or
xchg
cmp
mov
setp
add
push
push
xchg
inc
flds
pop
jns
dec
cmp
cld
fadds
icebp
or
adc
pop
pop
test
lcall
out
jl
mov
mov
pop
xchg
mov
push
inc
add
push
xchg
or
fisttpll
movsl
out
or
mov
mov
inc
insl
add
in
sbb
jmp
pop
inc
cwtl
sub
xchg
mov
dec
clc
jns
mov
les
sbb
filds
loopne
call
push
inc
in
dec
or
lahf
jge
lcall
sbb
addl
data16
aam
dec
sbbb
fcoml
scas
and
and
jo
cmp
sbb
or
lods
inc
cmp
mov
or
push
mov
jns
pop
loope
movzwl
cmp
sahf
xchg
pop
mov
inc
out
cmp
popf
fstps
sub
orb
clc
add
repnz
or
lods
or
mov
dec
pusha
pusha
cli
mov
add
lret
rorb
imul
shrb
add
ret
dec
ds
fsubrs
push
fcoml
jmp
iret
and
fwait
mov
fistps
push
inc
xorl
cltd
loop
cmovl
dec
jmp
test
in
pop
sub
cmp
out
xor
push
mov
mov
movsl
sbb
sbb
xchg
stc
mov
mov
je
fnstenv
jbe
adc
in
pusha
enter
lret
loop
loope
insl
cld
out
xlat
pop
jl
les
mov
jmp
jno
je
mov
in
pop
lock
in
mov
enter
jae
add
dec
ljmp
pop
add
repnz
adcb
mov
pop
pushf
push
roll
sahf
mov
push
jge
addr16
add
mov
add
inc
das
imul
mov
insb
divb
lods
hlt
cld
mov
jp
mov
pop
cmc
mov
cmp
popf
inc
rcrb
sbb
mov
out
pmaxub
sub
inc
adc
lock
mov
push
lock
or
add
daa
xor
jp
xor
sub
into
sbb
mov
ljmp
pop
cmp
subb
cmpsb
adc
fldl
popf
inc
mov
pop
mov
or
pop
sbb
add
pop
mov
stc
outsb
rcrb
cmp
frstor
mov
and
or
add
mov
mov
test
add
je
jg
add
ret
out
inc
sbbl
ds
add
and
jl
pusha
sbb
add
lods
mov
dec
or
jge
jl
cmp
pop
jo
shrb
xchg
pushf
pop
iret
fldl
xchg
test
jecxz
dec
push
jae
push
ret
jne
addb
add
jge
rcl
test
add
iret
movsb
sbbb
push
jo
fistps
out
dec
mov
jno
and
add
push
push
xor
ja
sub
jno
in
movsb
int
fcoms
test
fs
aam
mov
add
aas
add
int3
movsl
dec
or
flds
add
mov
in
add
mov
push
test
movb
mov
orb
cwtl
mov
sub
mov
dec
push
dec
push
add
and
pop
xlat
xchg
cmp
test
out
hlt
mov
jmp
ja
pop
lods
inc
arpl
add
push
mov
mov
and
push
pop
or
in
cli
mov
pop
scas
pop
subl
das
add
or
pop
leave
out
inc
lods
es
xor
and
sub
push
into
inc
jb
adc
sbb
mov
add
xchg
sbb
cmp
stc
ds
int
xchg
js
cmp
sbbb
faddl
adc
rorb
lods
out
mov
rcrb
jge
push
push
add
cmp
in
add
add
mov
shrl
push
clc
sbb
shl
mov
xchg
mov
rorb
add
mov
testb
aas
movsb
inc
subb
cs
and
mov
fistl
sub
add
push
dec
test
es
xchg
lret
scas
pop
cmp
push
add
sub
adc
sbb
mov
jo
lods
xchg
ja
add
pop
jecxz
jne
pusha
adc
in
stc
lea
sub
jge
int
jnp
sbb
aad
decl
dec
mov
lods
stc
inc
jns
cmp
shrb
add
aad
pop
movsl
lock
ljmp
or
shrb
xchg
xchg
jns
hlt
pop
add
frstor
movsl
pop
ret
and
dec
mov
add
stos
add
sti
jle
push
mov
cmp
icebp
xor
add
roll
fistps
inc
push
jno
insl
add
lret
push
pop
movsb
nop
sbb
cmp
mov
orb
mov
orl
nop
loopne
and
cwtl
test
repnz
in
mov
or
outsb
test
fiaddl
xor
hlt
in
push
lret
cld
jae
repz
clc
aas
pusha
dec
mov
inc
cld
in
xor
cwtl
mov
pop
test
movsl
adcb
ret
lods
movsb
jle
or
push
xor
inc
dec
pop
in
sbb
ss
test
pop
add
pop
leave
cli
dec
rorb
ds
sbb
sahf
int3
roll
test
jmp
sbb
or
jmp
inc
imul
inc
pop
add
xchg
cli
adc
fisubrl
mov
inc
mov
adc
mov
sar
aas
cmp
jecxz
add
cltd
insb
or
mov
push
loopne
xchg
mov
in
sbb
xchg
les
cmc
fldl
pop
or
add
xchg
or
aas
sbb
pop
int
jno
push
pushf
jo
ja
or
out
pop
shr
test
movsb
les
push
mov
inc
aad
iret
shlb
mov
adc
mov
or
cmc
xchg
mov
jo
inc
add
fcoms
imul
andb
movsl
dec
inc
js
mov
cmp
adcl
or
or
mov
mov
pop
nop
test
inc
rorb
sub
sbb
popa
jle
pop
push
cmpsl
test
push
add
shll
xor
push
dec
divb
add
and
loopne
cwtl
and
testl
mov
push
fstpl
mov
or
sub
sbb
mov
add
orb
fwait
cmpsl
stos
add
dec
ret
test
fldl
jnp
cmpl
add
test
dec
pop
addl
ss
scas
aaa
sbb
adc
jno
adcb
in
out
cmp
adc
sbb
xor
in
cmp
jmp
pop
mov
sub
inc
sub
addb
cmc
shrl
pop
pop
mov
adc
in
xchg
call
ficomps
pusha
in
pusha
sub
xchg
fadds
mov
mov
mov
cmc
shlb
jb
xor
mov
xlat
add
test
mov
sbb
xlat
je
call
dec
mov
sbb
jl
fsubp
scas
sbb
or
es
or
or
pop
cmp
dec
mov
mov
add
loope
cwtl
mov
xor
scas
stc
js
xchg
sub
inc
mov
xor
test
mov
mov
sub
outsb
sti
shl
jl
bswap
mov
dec
inc
add
mov
nop
cli
add
cld
sub
dec
loop
js
jecxz
test
mov
xchg
int3
subb
xlat
int3
scas
add
lods
shl
in
mov
mov
ret
sarl
add
dec
push
adcb
mov
stc
mov
or
nop
je
subl
jmp
inc
sbb
imul
or
add
adc
fdivrl
push
jmp
inc
add
xlat
out
or
inc
pop
mov
adc
sbb
cwtl
loopne
inc
xchg
rorb
iret
and
sbb
add
loopne
sahf
or
mov
ss
or
adc
mov
mov
jge
push
pop
jle
push
fsubl
pop
add
or
xorb
inc
hlt
fcomps
mov
test
cmpsb
mov
pop
push
dec
int3
fdivs
or
scas
sete
or
nop
dec
inc
sbb
xchg
in
jge
leave
jp
sbb
repz
stc
rolb
and
xchg
mov
xchg
sbb
cmp
adc
xlat
mov
pop
shlb
xor
pop
nop
in
push
into
or
push
or
and
rclb
fiaddl
add
aam
add
std
mov
adc
int3
into
mov
fdivrs
dec
add
outsl
or
fistpll
add
js
sub
inc
dec
xchg
lods
mov
inc
movb
outsl
lret
sbb
jmp
jnp
mov
xor
in
xchg
jmp
adc
jno
add
or
imul
mov
test
xor
jecxz
andl
mov
ss
xchg
lcall
inc
fwait
dec
movsb
in
push
int
cwtl
add
add
jb
add
rcl
cmp
andb
frstor
aas
test
je
sar
cltd
sub
in
cmp
fs
cmp
xchg
mov
pop
add
jae
add
pop
sbb
out
jle
pusha
adc
adc
xor
dec
xchg
pop
in
jnp
imul
mov
add
icebp
fdivs
push
push
aad
add
mov
gs
and
mov
dec
adc
mov
push
sub
or
push
pop
in
insb
stc
mov
pop
add
sub
mov
add
repz
mov
adc
rolb
cmp
sbb
call
enter
jg
or
mov
loopne
mov
add
xor
adcl
nop
jo
dec
dec
dec
ljmp
mov
add
fs
push
inc
cmc
hlt
xor
adc
xchg
and
or
push
adc
add
lods
lock
add
and
jnp
add
movsl
mov
movsb
and
pop
cmp
xchg
jnp
xor
inc
cmp
call
insb
ljmp
sbb
cmc
ret
loopne
add
out
jge
testb
aas
adc
sub
cwtl
sub
out
ja
dec
mov
pusha
push
pop
dec
sbbl
js
rcrb
xchg
pusha
mov
add
and
incb
test
xchg
and
dec
sub
add
sbb
lret
add
or
fsubp
adc
pop
pop
movsb
sbb
xchg
into
movsb
mov
and
or
test
shl
add
int3
das
add
pushl
add
push
dec
add
dec
