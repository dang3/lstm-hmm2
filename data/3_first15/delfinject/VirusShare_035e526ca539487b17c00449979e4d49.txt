rol
push
pushf
bswap
mov
push
push
push
lea
jmp
cmc
push
xchg
or
cmc
bts
mov
neg
lea
sub
mov
cmc
shl
movw
movw
pushl
popl
sub
movl
not
mov
clc
sub
clc
pushf
cmc
mov
rol
jmp
mov
pushl
jmp
mov
call
push
bswap
mov
pusha
lea
mov
call
call
pushf
pushf
mov
push
jmp
mov
pushf
pushl
mov
lea
jmp
sar
pushf
xor
test
movzbl
cmp
add
pushf
call
mov
pusha
jmp
add
pushl
shld
movl
pushf
mov
mov
pushf
popl
call
mov
push
pushl
mov
movb
lea
jmp
movw
lea
jg
push
pushf
mov
call
stc
sub
pushf
test
pusha
cmp
add
call
pushf
pushf
pushl
popl
push
pusha
push
mov
lea
jmp
movb
call
mov
shrd
mov
neg
not
inc
bt
mov
neg
and
movzbw
and
pushl
popl
cmc
movl
neg
cmc
mov
cmc
call
pusha
pushf
call
movsbw
das
mov
rcr
add
call
btc
bsr
stc
mov
mov
push
bsf
mov
pushf
stc
clc
bt
add
mov
pusha
pushf
push
mov
movb
lea
jmp
stc
test
mov
call
shl
pushf
mov
call
jmp
test
xchg
bsr
sbb
movzbw
mov
shld
bsf
cmp
bswap
mov
btr
shrd
bsr
pushl
popl
add
movl
btr
mov
clc
pushf
test
sub
movw
rol
pushf
bswap
mov
pushl
movw
pushf
lea
jmp
inc
push
lea
ja
decl
pusha
pushf
call
pusha
push
pushf
mov
mov
pushl
call
push
pushl
pushf
mov
mov
pushf
pushf
jmp
jmp
mov
call
cmp
add
cmc
cmp
cmp
bt
add
call
pusha
aam
lea
pushf
bt
pushf
cmc
cmp
mov
jmp
push
movb
mov
pushf
popl
push
cmp
mov
jmp
jmp
movzbw
cwtl
pushf
mov
jmp
cmc
call
mov
call
pusha
pushf
jmp
call
mov
jmp
mov
pushl
lea
call
test
cbtw
bt
cwtl
movb
cmc
sub
pusha
call
pusha
mov
jmp
stc
mov
cmc
test
test
jmp
pushl
pushl
popl
movb
push
mov
movb
lea
jmp
bswap
mov
lea
jmp
cmc
pushf
cmp
sub
movb
clc
cmc
stc
rol
jmp
pushf
sub
pushf
rol
pushf
movl
bswap
pushf
mov
pushl
lea
jmp
mov
pusha
movb
lea
jmp
push
movzbw
pushf
cmc
mov
and
push
bsf
push
cmp
sub
rol
push
btc
pushl
xor
sbb
push
movsbw
push
inc
clc
mov
setno
neg
sub
cmc
rol
shr
bt
xadd
bswap
lea
neg
mov
inc
sub
shr
xchg
mov
movsbw
add
mov
clc
clc
rcr
add
pushf
pushf
mov
shl
or
add
bsf
add
cmp
shld
btc
bswap
xor
pusha
jmp
call
push
pushf
pushf
popl
cmp
mov
clc
sbb
btc
not
mov
bts
rol
mov
shrd
clc
pushl
popl
neg
shl
movl
add
mov
clc
call
jmp
shr
mov
pushf
rcr
pushl
popl
inc
movl
not
pushf
lea
ror
mov
bt
sub
clc
rol
jmp
xchg
jmp
mov
push
push
pushl
lea
jmp
call
lea
movsbw
mov
jmp
or
movzbw
mov
stc
mov
pusha
call
rol
sbb
mov
call
test
mov
ror
pushf
xor
sub
mov
clc
movw
movb
sub
stc
pusha
shl
movb
call
jmp
pushf
popl
pusha
bt
jmp
mov
mov
not
call
cmp
call
mov
rol
jmp
jmp
pushl
mov
sub
cmc
bt
bt
rol
push
bswap
pushf
movb
pushf
movb
lea
jmp
push
bt
sub
call
pushf
pusha
mov
movb
call
pusha
jmp
mov
pushf
push
pusha
lea
jmp
jmp
push
jmp
jmp
movw
movl
pusha
jmp
mov
pushf
push
pushf
mov
call
pusha
mov
mov
mov
pushf
pushf
popl
stc
mov
test
mov
shrd
pusha
mov
add
stc
sar
mov
dec
shl
rcl
bsr
pushl
popl
sub
movl
rcr
sub
mov
stc
sub
call
seto
bsr
stc
notl
or
shl
not
mov
cmc
pushf
cmc
pushf
sub
jmp
add
jbe
push
bts
shr
jmp
bswap
pushl
mov
push
pushl
lea
jmp
inc
pusha
bt
jmp
movzbw
jmp
call
and
neg
not
push
not
rol
mov
pushl
cmc
rol
add
or
mov
and
test
shrd
bswap
bsr
mov
cmp
add
call
call
movzbw
cmc
ror
movzbl
ror
pop
add
not
movzbl
pushf
movzbl
bswap
movsbw
dec
mov
call
call
pushl
popl
mov
mov
lea
jmp
bswap
pushf
lea
jmp
push
lea
ja
rdtsc
mov
cwtl
xchg
cwtl
lea
sar
ror
bswap
jmp
add
lea
jnp
pusha
mov
pushl
push
push
lea
jmp
movb
mov
push
movb
mov
pushl
mov
pushl
jmp
pushf
add
pushf
pusha
lea
jmp
neg
sar
bsf
call
jmp
push
push
lea
jno
pushf
test
test
call
pushf
call
mov
pushf
popl
pushl
jmp
jmp
push
jmp
mov
pusha
mov
push
lea
jmp
movl
pushl
popl
mov
push
lea
jmp
push
pushf
jmp
pushf
push
push
mov
movb
pushf
pushf
push
mov
call
push
jmp
pushf
pusha
pusha
mov
push
lea
jmp
xchg
movl
lea
jg
push
call
pushl
popl
push
lea
jmp
push
bswap
push
lea
jmp
pushf
jmp
test
shl
call
stc
pushl
bt
add
std
popf
pusha
mov
pusha
mov
lea
jmp
stc
inc
mov
dec
clc
mov
cmc
cmc
call
mov
pushf
lea
jmp
movb
mov
call
pushf
popl
mov
push
jmp
call
mov
jmp
rcr
mov
mov
shld
seta
test
mov
pushf
stc
call
clc
rol
push
mov
bswap
movl
pushf
mov
movw
lea
jmp
bt
sub
movb
lea
jb
push
pusha
mov
movb
pusha
pushf
push
lea
jmp
lea
cpuid
cmc
jmp
movb
bswap
pushf
mov
pushf
push
lea
jmp
pusha
movw
pushf
divl
mov
call
pusha
movb
jmp
pushf
popl
call
pushf
pusha
jmp
call
call
pusha
test
mov
cmc
cmp
pushf
shl
pushl
clc
pushf
shr
pushl
bt
bt
or
mov
cmc
xor
pushf
call
add
push
lea
jmp
mov
mov
push
pushf
mov
mov
pusha
mov
movb
call
movzbl
rcr
movb
add
lea
jg
neg
rcl
ror
movsbw
jmp
push
movb
call
mov
call
mov
pushf
pushf
lea
jmp
call
push
call
jmp
call
mov
call
inc
push
pushl
call
pusha
mov
mov
pusha
mov
jmp
push
shrd
call
daa
movzbw
xadd
mov
cmp
cmc
mov
mov
push
sub
bt
clc
call
mov
call
pushf
popl
test
pushf
xchg
neg
and
sar
mov
btc
add
and
mov
shld
sub
pushl
popl
shl
rcl
movl
shld
mov
stc
bt
push
sub
cmc
call
rol
pushf
bswap
pushf
pushl
movw
lea
jmp
mov
call
xorb
lea
bswap
jmp
mov
mov
mov
lea
jmp
call
jl
pusha
push
pushl
mov
jmp
mov
pushf
push
pusha
mov
pushl
ret
pusha
push
shld
call
cmp
test
add
push
mov
movb
push
lea
jmp
bswap
pushf
movb
pushf
lea
jmp
movb
mov
push
call
dec
btc
das
adc
mov
call
bt
rol
pushf
pushf
bswap
pusha
movb
push
pushf
lea
jmp
mov
pushl
popl
mov
push
lea
jmp
dec
rol
mov
ror
mov
stc
pusha
add
movb
movb
lea
jle
mov
pusha
pusha
lea
jmp
sub
call
call
push
rcl
bsr
mov
clc
cmc
sub
pusha
rol
push
bt
bt
xchg
bt
rol
bt
pushl
sub
sub
js
bt
sub
clc
cmc
cmp
pusha
add
pusha
push
jmp
mov
pusha
pushf
movb
lea
jmp
push
push
add
pushf
clc
mov
mov
jmp
test
bt
pushf
sub
bt
mov
rol
jmp
pushf
mov
bswap
call
call
add
test
cmc
jmp
pusha
call
call
movl
pushl
popl
movb
lea
jmp
push
mov
movzbl
mov
pushf
push
pushl
pushl
ret
sub
cmc
call
mov
movw
push
lea
jo
pushf
mov
pushf
push
pusha
lea
jmp
pushl
popl
movw
movw
lea
jmp
pusha
mov
jmp
sub
call
push
pusha
mov
push
mov
mov
jmp
add
lea
jle
pusha
pusha
mov
lea
jo
pushf
mov
mov
pusha
pusha
pushf
movb
lea
jmp
test
neg
mov
pushf
pushl
clc
cmc
sub
stc
bt
cmp
cmc
shr
call
jmp
mov
push
call
call
pushf
mov
pusha
mov
pushf
mov
lea
jmp
movw
mov
jmp
sub
cmc
rol
push
bswap
pushf
movl
pusha
push
lea
jmp
mov
pusha
mov
call
stc
jmp
mov
mov
movw
mov
pushf
popl
call
lea
pusha
jmp
jmp
clc
cmc
cbtw
pushl
cwtl
bt
cmp
movb
bt
sub
test
mov
test
pushf
call
pushf
popl
call
shrd
shr
movl
sub
shld
mov
call
mov
mov
mov
pushl
mov
pushf
pushf
pushf
lea
ja
push
pushf
jmp
sub
call
lea
jne
sar
sub
sbb
bsf
mov
bt
pusha
and
mov
stc
cmp
push
movb
pushf
call
call
cmp
cwtl
push
aam
mov
bswap
neg
mov
stc
add
pushf
call
movw
pushf
popl
sub
jbe
cmc
bt
bt
push
sub
push
adc
push
shrd
or
rol
clc
pushl
bswap
shld
push
btc
jnp
sar
cmc
mov
jmp
call
pushl
popl
pushf
lea
jmp
test
stc
add
pushf
call
call
stc
shl
xor
mov
rcl
inc
movzbw
mov
or
btr
pushl
popl
or
shr
add
pop
movl
shrd
push
shrd
mov
cmc
stc
sub
bt
rol
movb
bswap
pushf
push
pushf
lea
jmp
add
je
cmp
push
add
jmp
push
push
mov
btc
rcl
call
pushf
pusha
push
bswap
pushf
push
pushf
lea
jmp
pushf
popl
push
pushl
popl
movw
push
movw
push
lea
jmp
mov
bt
pusha
sub
cmp
pushf
test
shr
call
or
adc
bt
bsf
mov
cmp
push
call
pushl
push
push
bswap
pusha
pushf
pushf
lea
jmp
adc
sub
mov
shr
pusha
shl
rcl
add
not
pushl
setg
pusha
mov
mov
mov
push
pushf
mov
lea
jmp
jmp
rol
jmp
pushf
bswap
pushf
pushf
movb
lea
jmp
pusha
pushf
mov
pushl
lea
jae
pusha
mov
pusha
pushf
mov
call
mov
stc
test
jmp
jmp
pusha
call
xor
adc
inc
jmp
xadd
rcr
rcr
mov
jmp
call
pusha
mov
mov
pusha
pushf
mov
movb
pushl
lea
jmp
movl
bswap
pushf
pushf
lea
jmp
mov
jmp
jmp
pushl
mov
jmp
jmp
lea
mov
pushf
mov
call
mov
pushf
jmp
mov
neg
mov
clc
mov
bt
bt
bsr
pushl
popl
test
push
add
cmc
movl
inc
shld
mov
test
test
push
sub
push
pushf
stc
bt
rol
push
jmp
jmp
jmp
call
push
lea
je
pushf
call
pushf
mov
call
cmp
rcl
mov
cmc
pushl
popf
mov
mov
movl
mov
lea
jmp
mov
clc
call
clc
sub
jmp
push
mov
pushf
pushf
pusha
pushf
lea
jmp
mov
movsbw
mov
xchg
movsbl
call
call
jmp
pushf
pusha
sub
jmp
cmp
call
bsr
shld
neg
setl
rcr
stc
ror
not
push
inc
sub
sub
shl
add
ror
sub
and
stc
mov
pushf
test
pusha
call
aaa
btc
mov
rcr
xor
push
mov
jmp
lea
jge
mov
pusha
pushf
popl
push
jmp
pushf
popl
pushf
jmp
cmp
call
neg
mov
pusha
add
push
pusha
clc
bt
not
test
neg
cmc
rol
jmp
mov
call
mov
call
call
push
jmp
pusha
mov
push
push
mov
mov
pusha
pushf
mov
call
mov
pushf
popl
jmp
add
movw
mov
pushf
lea
jmp
pushf
popl
call
call
cmc
pusha
add
clc
jmp
call
mov
pushf
mov
jmp
xor
or
mov
test
test
sub
pushf
pushf
rol
pushl
bswap
pusha
lea
jmp
pusha
add
push
lea
jmp
bswap
mov
mov
lea
jmp
push
push
mov
pushf
pusha
mov
lea
jmp
pusha
pusha
push
call
jmp
and
push
pushf
mov
pushf
popl
push
call
clc
pusha
ror
rdtsc
call
shl
aam
mov
cmc
clc
test
call
pushl
popl
movb
pushf
pushf
mov
lea
jmp
add
pusha
jmp
rol
jmp
ror
mov
rcl
cmc
add
dec
movsbw
inc
pushf
pushf
pusha
inc
sub
bsf
xor
and
bts
shl
bswap
add
rcr
sar
add
cmc
mov
inc
inc
mov
test
clc
call
mov
pushl
pushf
mov
jmp
pushf
mov
pushf
popl
jmp
jmp
pushl
mov
pushf
call
bswap
movb
pushf
lea
jmp
stc
bswap
pushf
rol
jmp
cmp
call
call
pushl
mov
pushf
popl
jmp
mov
jmp
push
pusha
movw
mov
call
push
mov
movw
pushf
pusha
lea
jmp
jmp
pushf
popl
call
mov
mov
pushf
popl
mov
call
dec
rol
mov
bt
sub
pusha
rol
pusha
mov
push
xchg
pushf
movb
bt
rol
stc
jmp
mov
pushf
pushf
popl
call
pushf
mov
pushf
mov
lea
jmp
pushf
pushf
popl
bt
push
mov
not
adc
mov
bsr
mov
ror
pushl
popl
shl
movl
bswap
mov
test
cmp
call
bswap
push
lea
jmp
test
movl
pushf
mov
adc
or
movzbl
shl
mov
cmp
pop
mov
rol
sub
ror
pushl
popl
btr
movl
inc
or
mov
cmc
sub
clc
rol
mov
lea
jbe
pushf
pushf
bswap
mov
pushl
pushl
mov
lea
jmp
pushf
popl
jmp
pushf
jmp
movsbw
call
mov
call
mov
jmp
pusha
call
sub
movl
movl
cwtl
stc
jmp
cmc
add
jmp
push
jmp
mov
movl
pushf
push
pushf
popl
cmc
push
mov
cmc
add
shl
sub
mov
pop
cmp
and
mov
test
shr
pushl
popl
add
dec
not
movl
adc
mov
cmp
pushf
stc
sub
movb
rol
pushl
push
pushf
bswap
pushl
movl
movw
mov
lea
jmp
jmp
jmp
jmp
not
stc
not
test
cmc
stc
test
and
movw
mov
jmp
inc
movzbw
setge
btc
add
push
movsbw
movzbw
sub
bsr
or
mov
jmp
rol
call
shr
bsf
adc
mov
neg
mov
stc
cmc
cmc
add
push
call
bt
rol
jmp
movw
movw
mov
mov
pushl
mov
jmp
push
mov
push
call
test
add
pushf
call
mov
jmp
pushf
mov
jmp
push
clc
rol
jmp
lea
jne
shld
shld
mov
call
jmp
sub
xchg
lea
test
bt
and
push
and
pop
sub
pushf
pop
push
mov
push
not
pushf
popl
jmp
sar
or
setl
neg
rol
not
bt
setnp
rol
cmp
and
not
clc
dec
mov
jmp
mov
add
adc
shld
shl
mov
inc
mov
bt
pushl
popl
shrd
movl
rcr
mov
stc
push
jmp
pushf
push
movl
pushf
popl
jmp
and
aas
mov
neg
inc
shl
mov
bt
pusha
test
stc
sub
test
movb
pushf
stc
shr
jmp
pushf
mov
pushf
lea
jo
push
pusha
call
mov
pushf
mov
call
pushl
add
pusha
pushf
mov
push
lea
jmp
pushf
mov
mov
jmp
sub
movb
movb
movb
lea
jmp
clc
xchg
stc
mov
cmp
mov
test
cmc
pushf
cmp
sub
pusha
lea
jle
pusha
pushf
lea
jne
bt
clc
xor
call
aas
mov
bsf
pop
cld
rcl
cmc
ror
pop
cwtl
rdtsc
rcl
aaa
pop
setl
xor
cmp
pop
pushf
mov
mov
pushl
popf
cltd
seto
mov
rdtsc
setp
lahf
call
and
movl
call
pushf
popl
cmp
jmp
jmp
shld
bt
adc
mov
je
rcr
xor
mov
adc
mov
pusha
call
call
shrd
ror
btr
mov
adc
btc
sar
btr
mov
clc
push
mov
call
call
pushl
push
mov
lea
ja
pushf
mov
push
pushf
popl
pusha
xchg
ror
shl
mov
cmp
sub
add
mov
or
pushl
popl
inc
sbb
shl
movl
bt
shld
pop
lea
mov
jmp
inc
clc
mov
pusha
mov
xor
call
xchg
jmp
mov
shrd
lea
jge
mov
jmp
pushf
popl
movb
mov
pushf
clc
xchg
not
lea
call
mov
pushf
pusha
jmp
pusha
mov
pushl
mov
jmp
pusha
sub
clc
stc
stc
add
jmp
push
lea
mov
push
lea
cld
push
lea
movl
pusha
mov
mov
movsbw
cld
bswap
mov
pusha
cld
pushf
cld
movb
pushf
rep
shl
shl
mov
call
jmp
push
mov
push
lea
jmp
mov
pushf
call
call
xor
rol
rcr
mov
call
cmc
pushl
popl
shld
movzbw
lea
push
test
shld
rcl
bts
mov
clc
push
sub
clc
call
not
pushf
call
bswap
mov
jmp
pushf
pushf
mov
call
push
jmp
pushf
mov
movl
pusha
mov
pusha
pushf
mov
pushl
pushl
ret
pusha
pusha
seto
mov
rcl
neg
rol
mov
cmc
call
neg
movzbl
shl
xor
add
bts
rcl
add
movsbw
neg
ror
not
pusha
neg
sete
rol
pushf
movzbw
rol
lea
add
mov
sbb
inc
movzbl
test
mov
cmp
or
call
clc
bt
pushf
rol
call
movb
mov
pushl
popl
push
lea
jmp
call
mov
pushf
pushl
ret
add
mov
icebp
xorl
test
push
lcall
mov
jo
call
jg
incl
outsb
mov
add
mov
add
mov
dec
jns
jmp
mov
sbb
mov
add
mov
lock
mov
xor
mov
sbb
outsb
mov
lds
mov
mov
outsb
mov
jecxz
mov
jecxz
mov
mov
xorl
jno
call
cltd
mov
mov
jno
incl
xchg
mov
dec
jns
ljmp
cwtl
mov
xor
mov
lds
mov
xchg
pushf
mov
sbb
mov
dec
xchg
mov
cmpsl
mov
sub
mov
sub
mov
movsl
xchg
mov
jbe
mov
dec
xchg
mov
inc
outsl
mov
movsl
xchg
mov
movsl
xchg
mov
and
push
xorl
jg
ljmp
mov
mov
mov
movsl
xchg
mov
mov
mov
xor
mov
inc
outsl
mov
mov
sti
xchg
mov
xchg
mov
lahf
mov
sbb
mov
push
xchg
xchg
pushf
mov
mov
sahf
mov
lds
mov
lds
mov
in
mov
mov
outsl
mov
lds
mov
icebp
xorl
xchg
mov
push
mov
lods
mov
cmpb
lahf
mov
cmpb
cmpb
sti
xchg
mov
or
mov
xchg
pushf
mov
sbb
mov
mov
test
sbb
mov
stc
cltd
mov
jo
decl
mov
sbb
test
mov
outsb
mov
icebp
xorl
xorb
xchg
mov
cmpb
xchg
call
jns
incl
xorb
jns
inc
xchg
mov
or
mov
sbb
mov
jecxz
mov
lds
mov
imul
mov
lds
mov
xchg
mov
lds
mov
mov
mov
mov
mov
icebp
xorl
jg
incl
outsb
mov
dec
xchg
mov
sbb
mov
mov
mov
mov
and
pushl
mov
rcrl
mov
add
mov
sbb
mov
jbe
mov
sbb
mov
fmull
incl
xchg
mov
cmpsl
mov
lods
mov
call
mov
cmpsl
mov
icebp
xorl
xchg
mov
fmull
push
outsb
mov
cmpb
and
mov
mov
pushf
mov
lods
mov
lcall
lcall
cwtl
mov
sbb
mov
mov
jo
call
popf
mov
mov
sahf
mov
lds
mov
lcall
mov
jns
incl
jo
push
xorl
xchg
mov
rcrl
mov
xchg
pushf
mov
sub
mov
jbe
mov
push
lcall
xorb
mov
push
mov
sbb
mov
or
mov
add
mov
add
mov
xchg
pushf
mov
push
mov
call
js
ljmp
cwtl
mov
lds
mov
lods
mov
mov
mov
call
sub
bt
lea
jne
test
cmp
sub
push
pushf
pushf
mov
pusha
mov
pushf
lea
jmp
push
mov
pushl
mov
push
movb
mov
pushf
mov
call
push
mov
mov
pusha
pushf
pushl
ret
pushl
mov
call
not
clc
pushf
not
pusha
stc
sub
pushf
pushf
stc
pushf
and
pushl
jmp
mov
pusha
mov
pushl
movw
lea
jmp
mov
call
pushl
popl
inc
movl
btc
sub
mov
call
pushf
push
mov
pushf
push
lea
jmp
xchg
shr
btr
push
bsf
cmp
push
stc
pushl
call
movb
mov
pusha
pushf
pushf
push
lea
jmp
mov
mov
adc
shrd
mov
jmp
add
cmp
sub
test
sub
mov
pushf
movw
mov
pushf
lea
jmp
bswap
pushf
movw
lea
jmp
sub
jmp
mov
movb
movb
mov
pushf
mov
pusha
lea
jmp
push
pusha
pushf
mov
call
cmp
mov
call
pushf
pusha
mov
call
call
jmp
pusha
mov
mov
pusha
pushf
movb
lea
jmp
pushf
call
jmp
movl
shr
bsr
mov
call
push
mov
mov
pusha
call
stc
add
pusha
jmp
movb
mov
movb
jmp
xchg
sar
cmc
movw
mov
xor
stc
mov
bsf
adc
pushl
popl
rol
and
movl
call
pushf
mov
pushf
mov
push
pushf
popl
call
shr
sar
xchg
mov
mov
add
mov
call
mov
pusha
call
movw
mov
movb
pushf
call
sub
jmp
xor
cwtl
btr
mov
push
call
cmp
add
bt
push
sub
call
jmp
push
mov
jmp
movb
pushl
popl
pushf
mov
push
lea
jmp
push
cmc
add
pusha
cmc
sub
jmp
jmp
pusha
pushl
bswap
pushf
lea
jmp
mov
call
bts
rcr
cwtl
rol
mov
bt
clc
add
push
jmp
add
add
mov
pushf
call
pushf
call
call
push
movb
mov
pusha
call
pushf
mov
pushl
lea
jmp
pushf
mov
push
push
jmp
mov
inc
movsbl
mov
btc
or
pushl
popl
rol
movl
rol
mov
call
pushl
popl
pushl
lea
jmp
pushf
push
jmp
add
movb
pushl
call
mov
movb
mov
pushl
lea
jmp
pushf
pusha
mov
pushf
pushf
pushf
mov
mov
pushf
jmp
movw
pushf
popl
cmp
push
mov
sbb
btc
btr
add
push
shld
clc
stc
inc
push
lea
jmp
pushf
mov
pushf
add
movl
pushf
popl
pushf
jmp
call
mov
sub
test
cmp
call
call
pushl
mov
call
push
test
sub
clc
jmp
pusha
call
call
mov
call
clc
pusha
movb
sub
pushf
pushf
mov
mov
mov
lea
jmp
mov
movb
movb
pushf
lea
jmp
cmc
rol
push
movb
call
pushf
popl
pushf
pushl
popl
pushf
movb
lea
jmp
not
movsbl
mov
test
pushf
sub
cmc
jmp
mov
pushf
popl
pushf
mov
btc
bt
bsr
mov
shl
movsbw
sbb
btr
push
sbb
bt
adc
stc
pushl
cmp
push
shld
dec
cmp
sar
mov
cmc
test
cmp
sub
pushf
jmp
mov
mov
jmp
jmp
push
push
call
push
mov
jmp
pusha
pushf
mov
pushf
push
pushf
popl
pushl
pushf
jmp
lea
jae
pusha
mov
movb
pusha
movb
lea
jmp
jle
push
bswap
pushf
pusha
mov
lea
jmp
clc
sub
pusha
pushf
rol
jmp
pushl
popl
movw
pusha
movw
lea
jmp
mov
pusha
movl
call
lea
js
pushf
inc
test
bt
bt
add
cmc
stc
test
mov
call
mov
movw
movb
pushf
lea
jmp
pusha
mov
pusha
mov
mov
mov
call
bswap
pushl
mov
lea
jmp
cmc
cmc
sub
pushf
mov
movw
lea
jmp
mov
pushf
mov
mov
pushl
pushf
mov
pushf
pushf
mov
push
pushf
push
call
mov
mov
push
mov
jmp
pusha
mov
call
pusha
movb
bswap
push
pushf
lea
jmp
pushl
pushf
popl
cmp
movl
clc
push
xchg
pushl
cmc
mov
push
bsf
movsbl
neg
mov
shl
stc
pushl
popl
sbb
stc
lea
lea
movl
ror
and
or
mov
pushl
jmp
pushl
inc
mov
xor
pushl
bsf
mov
rcr
cmc
btr
pushl
popl
or
bswap
movsbw
bsf
movl
movzbl
mov
pushf
sub
call
jmp
mov
jmp
pushf
mov
pusha
movb
mov
jmp
pushf
pushl
bswap
pushf
push
mov
pushf
lea
jmp
sub
call
pushl
popl
shld
btr
push
bt
rcl
clc
mov
pushf
call
jmp
stc
mov
stc
and
adc
or
mov
add
neg
mov
sub
jmp
test
shl
mov
mov
mov
call
pusha
rol
call
mov
movb
pusha
jmp
mov
pushl
movl
pushl
push
mov
push
pushf
movb
call
dec
sete
mov
test
shr
adc
mov
push
cmc
pushf
call
sub
movb
mov
cmc
rol
pushf
jmp
lahf
sar
mov
mov
clc
call
pushf
ror
pushf
jmp
mov
push
pushf
lea
jmp
push
pusha
mov
pushf
pushf
movb
pushf
popl
mov
mov
jmp
push
pushf
popl
test
jmp
pushf
popl
cmc
xchg
push
sar
neg
shrd
mov
pop
shl
mov
sar
shl
not
cmp
pushl
popl
pop
movl
shr
pop
sar
mov
bt
sub
jmp
lea
jne
push
mov
push
push
lea
jmp
pusha
jmp
mov
call
clc
mov
adc
rol
bts
bt
add
rol
stc
movsbw
sub
and
jmp
pushf
mov
push
lea
jmp
sub
pushf
push
pushf
push
lea
jmp
mov
mov
call
call
call
pop
cwtl
mov
call
mov
pushl
popl
pushf
pushf
pushf
lea
jmp
pusha
mov
pushl
pusha
jmp
lea
jne
test
pusha
sub
pushf
call
test
mov
mov
pusha
stc
test
pushf
sub
mov
test
cmc
add
call
pushf
mov
push
lea
jmp
pushf
popl
pushf
pushl
popl
movb
push
lea
jmp
sub
push
pushf
rol
pushf
jmp
pushf
inc
mov
not
pushf
test
test
movl
neg
cmc
pushl
rol
cmp
clc
jmp
mov
mov
push
mov
mov
pushl
pushf
popl
test
mov
rcr
mov
bt
shrd
mov
bsr
shl
pushl
popl
jmp
mov
call
call
aaa
sbb
stc
btc
mov
dec
mov
stc
sub
call
call
pushf
movb
pusha
push
decl
movb
pushf
lea
jne
call
pushf
pushf
mov
pushf
pushf
mov
push
mov
push
jmp
and
mov
inc
or
mov
push
pusha
clc
push
sub
pushf
jmp
mov
pushl
mov
mov
movl
pushl
call
sub
pusha
cmc
movb
bt
cmpl
jmp
pushl
mov
pushf
pushf
call
adc
push
neg
shld
mov
push
rcl
movsbw
pushl
call
mov
pusha
pushf
movl
call
or
mov
sar
stc
shrd
adc
mov
clc
sub
pushl
shld
push
neg
movsbl
mov
clc
stc
sub
jmp
stc
shl
and
movzbl
stc
cmp
pushf
cmc
add
clc
bt
stc
neg
mov
call
jmp
pushf
pushf
movb
mov
push
lea
js
pusha
push
lea
call
movw
xchg
not
mov
pushf
call
lea
movb
call
pusha
pushf
call
pusha
nop
pushf
pushl
call
call
pushl
mov
push
call
movw
pushl
mov
call
mov
mov
lea
push
mov
push
mov
xchg
pushf
pushl
ret
mov
call
movsbw
movsbw
mov
push
mov
pusha
mov
push
pushf
lea
movw
xchg
push
mov
pushl
ret
lea
jae
xchg
push
xchg
pushf
pushf
seto
jmp
mov
pushl
push
push
lea
movw
xchg
movb
movw
mov
mov
pushl
ret
jmp
xchg
push
pushf
movw
pushl
ret
lea
js
xchg
push
pushf
pusha
pushf
pushl
ret
call
mov
jmp
movw
pushl
mov
push
lea
pusha
xchg
pushf
pushf
pushl
ret
pushf
pushf
pushf
lea
jmp
jmp
lea
jmp
movb
mov
jmp
pusha
pushf
nop
call
call
push
call
xchg
pushl
pop
lea
mov
mov
mov
pushf
mov
pushf
mov
call
movzbw
mov
call
jmp
nop
push
pusha
jmp
mov
pushl
push
pushf
mov
jmp
mov
push
call
push
call
push
mov
call
mov
jmp
pusha
nop
push
push
call
mov
pushl
lea
jmp
call
pushf
cwtl
push
call
pushf
lea
mov
xchg
pusha
pushf
pushl
pushl
ret
jmp
pushf
call
mov
call
mov
jmp
xchg
pushf
pushl
ret
setb
nop
not
movsbw
mov
pusha
mov
pusha
jmp
pushf
mov
call
mov
jmp
push
call
stc
dec
sbb
pushf
pushl
xchg
pushf
movl
mov
pushf
pushl
ret
pusha
jmp
nop
pusha
push
mov
mov
mov
call
mov
jmp
movw
mov
xchg
movb
movb
pushl
ret
push
nop
call
xchg
movb
pushl
ret
xchg
movw
pushf
pushl
ret
call
mov
pushf
pushl
jmp
lea
jb
pushf
xchg
push
mov
pusha
pushl
ret
movb
mov
mov
mov
mov
call
push
pushl
pushf
mov
movzbw
pop
mov
mov
pushl
mov
pusha
mov
mov
lea
jmp
pusha
pushf
pusha
lea
jmp
pusha
push
nop
lea
jnp
pushf
push
pusha
xchg
movsbw
pushf
jmp
mov
movsbl
movzbl
push
mov
movb
mov
pushf
jmp
xchg
push
pushl
ret
mov
pushf
mov
call
pusha
xchg
push
movl
mov
pushl
ret
pusha
nop
pushf
mov
setp
jmp
mov
jmp
lea
pushf
xchg
push
push
push
pushl
ret
add
movsl
sub
jl
and
loope
pop
mov
pushf
call
nop
jmp
push
pushl
pusha
pushf
nop
pushf
push
mov
lea
movsbw
jmp
jmp
mov
not
movsbw
mov
pusha
mov
call
nop
pushf
call
lea
jmp
pusha
mov
lahf
lea
not
push
mov
pushf
mov
pushf
movb
pushf
jmp
call
lea
pushf
jmp
mov
pushf
not
call
call
lea
mov
call
pushf
call
call
push
mov
pushf
lea
call
push
push
nop
pushf
mov
pushf
call
jmp
pushf
xchg
movsbl
mov
call
push
xchg
pushf
mov
pusha
push
pushl
ret
call
pushf
jmp
push
push
xchg
pushl
pushf
pushf
pushl
ret
pushf
xchg
pushf
pushl
ret
pushf
push
nop
pushl
call
push
pushf
mov
jmp
call
call
bswap
lahf
call
lea
jmp
and
fsts
add
nop
movw
call
pushf
xchg
movsbl
push
lea
cwtl
mov
movw
pushf
mov
push
jmp
pushl
mov
lea
jne
not
mov
not
mov
jmp
xchg
movb
movw
push
pushl
ret
mov
xchg
pushl
push
pushf
push
pushl
ret
push
call
nop
call
xchg
lea
jp
mov
pushf
jmp
call
call
xchg
pushf
push
movb
mov
pushl
ret
jmp
xchg
pushl
push
movb
pushl
ret
push
movb
mov
mov
pushf
mov
lea
pushl
call
mov
call
xchg
pushl
movb
pushl
ret
mov
lea
jno
push
movb
lea
jmp
push
xchg
pushf
pushf
mov
pushl
pushl
ret
xchg
push
mov
pushl
ret
pushf
pushl
pusha
nop
call
xchg
push
mov
pushf
mov
pushl
ret
push
mov
pushf
jmp
push
push
movb
nop
movw
pusha
mov
pushf
mov
pushl
mov
push
mov
push
pushl
jmp
mov
pushf
pusha
call
call
push
pusha
mov
pushf
nop
call
xchg
push
pushf
not
mov
pushf
push
mov
pusha
lea
jb
push
mov
lea
jmp
push
pusha
push
nop
pushf
jmp
push
nop
pusha
mov
mov
mov
pushf
lea
mov
push
call
pusha
nop
pusha
mov
pop
movzbw
setno
movzbw
mov
pushf
mov
jmp
call
not
movsbl
setns
mov
jmp
lea
push
xchg
mov
pushl
ret
jmp
xchg
bswap
mov
push
push
jmp
pushf
lea
jae
pushf
nop
pusha
lea
jle
push
movzbl
call
call
xchg
pushf
push
pushl
ret
xchg
pusha
pushf
movb
movw
pushl
ret
push
xchg
jmp
call
push
pusha
xchg
push
pushl
ret
lea
pushf
lea
jge
pushf
xchg
push
pushl
pushf
mov
pushl
ret
xchg
pushf
lea
mov
call
call
xchg
pushf
movb
pushf
pushl
ret
pusha
nop
call
call
call
call
call
pushl
xchg
pushl
pushf
movb
mov
pushl
ret
mov
mov
jmp
pushf
call
xchg
mov
pushl
ret
lahf
call
lea
pushf
jmp
call
pop
call
call
mov
push
jmp
push
push
jmp
nop
call
nop
jmp
pushl
mov
jmp
jmp
xchg
pushf
movb
pushl
ret
push
call
lea
mov
xchg
pushf
pushl
ret
pusha
pushf
xchg
push
call
pushf
xchg
movb
mov
mov
pushl
ret
xchg
movw
pusha
mov
mov
pushl
ret
mov
call
jmp
pusha
xchg
pushl
pushf
pushl
movw
pushl
ret
call
nop
pushf
call
call
lea
call
call
push
jmp
not
mov
push
mov
call
jmp
nop
pushf
pusha
pushf
call
mov
xchg
lea
lea
pop
mov
call
jmp
pusha
pushl
mov
call
pusha
pushf
pushf
jmp
mov
pushf
lea
push
pushf
xchg
push
push
push
pushl
ret
push
pusha
lea
call
movb
xchg
mov
pushl
ret
call
nop
call
push
pusha
call
push
jmp
and
movl
pushf
push
pushl
ret
jmp
jmp
pushf
lea
movb
xchg
movb
pushf
mov
mov
pushl
ret
pushf
pushf
xchg
pusha
pushl
ret
movb
xchg
not
jmp
movb
xchg
mov
push
pushf
pushl
ret
jmp
push
lea
mov
pusha
jmp
mov
mov
pushf
mov
movb
movw
pushf
lea
jmp
mov
mov
jmp
xchg
mov
movw
pushl
ret
push
pushf
nop
jmp
push
pusha
call
jmp
pop
mov
cwtl
add
movw
nop
movb
mov
movzbw
mov
call
pusha
push
nop
pushf
call
pushf
jmp
jmp
lea
pushf
mov
xchg
push
mov
pushl
ret
bswap
mov
push
pushf
call
pushf
mov
jmp
pushf
xchg
pushf
movw
pushf
pushl
ret
mov
mov
push
pushf
mov
push
pushf
pushf
call
call
mov
call
lea
nop
bswap
movsbw
movzbw
movsbw
pop
jbe
xchg
pusha
pusha
call
xchg
pusha
not
jmp
mov
jmp
mov
xchg
push
pushf
pushl
pushf
pushl
ret
mov
movb
mov
call
xchg
mov
movb
pushl
ret
lea
jmp
lea
push
call
xchg
pushf
lea
movzbl
pushf
mov
call
nop
jmp
nop
movb
pushf
pushl
call
push
mov
pushl
push
nop
call
jmp
lea
pushf
push
xchg
mov
push
push
mov
pushl
ret
jmp
movb
lea
jbe
nop
jmp
jmp
push
nop
pushf
call
xchg
push
push
push
movw
pushl
ret
mov
push
pusha
pushf
lea
jae
lea
jmp
push
mov
pusha
call
mov
jmp
pushf
lea
jbe
mov
pusha
pusha
lea
call
push
nop
jmp
lea
jmp
pusha
pushf
pusha
pushf
nop
mov
pushl
mov
jmp
pushf
xchg
push
pushl
ret
mov
jmp
jmp
call
call
call
pushf
mov
mov
pushf
movsbw
mov
jmp
movw
call
call
pusha
push
jmp
xorl
cmc
cld
sti
out
lea
call
pushl
xchg
jmp
lea
pushf
jmp
pushf
nop
call
mov
call
pushf
pushf
pushl
pop
nop
mov
mov
pusha
xchg
pushf
call
jmp
pushf
lea
pusha
mov
jmp
mov
setbe
mov
pusha
mov
call
mov
jmp
pushf
push
lea
pushf
pushl
call
lea
movb
pushf
call
movb
pushf
mov
pusha
pushf
pushf
lea
lea
jbe
pushf
mov
mov
xchg
movb
movb
pushf
pushl
ret
pushf
movw
mov
nop
jmp
pusha
mov
nop
jmp
pop
in
and
add
push
lea
ja
pushf
xchg
pushf
mov
pushl
pushl
ret
pusha
lea
pushf
jmp
call
pushf
nop
pusha
jmp
pusha
jmp
pushf
lea
lea
jb
xchg
push
movw
pusha
pushl
ret
pusha
jmp
movsbw
jmp
pushf
xchg
mov
pushl
pusha
xchg
pop
lea
movsbw
mov
pushf
jmp
pushl
push
lea
push
call
lea
pushf
mov
xchg
pushf
pushl
ret
pushf
mov
call
push
lea
call
push
jmp
mov
movb
pushf
mov
lea
push
jmp
push
nop
pusha
pushf
jmp
pushf
lea
movb
xchg
pushf
mov
pushl
mov
pushl
ret
mov
pushf
pushl
pushf
pushf
mov
push
mov
push
call
xchg
pushf
mov
push
pushl
pushl
ret
push
nop
mov
mov
not
mov
mov
movzbl
mov
pusha
pushf
call
jno
insl
dec
push
mov
movb
lea
pushf
push
pushf
pushl
xchg
mov
pushf
pushl
pushf
pushl
ret
xchg
mov
pushl
pushl
ret
lea
jmp
pushf
mov
call
mov
mov
pushf
lea
pushf
push
xchg
mov
movb
movb
pushl
ret
mov
jmp
pushf
pusha
pusha
mov
jmp
jmp
jmp
lea
jmp
xchg
movl
pushf
pushl
ret
jmp
mov
dec
dec
mov
movw
pushf
lea
jge
lea
pusha
movw
xchg
pushf
pushf
pushl
ret
mov
mov
lea
movb
xchg
push
pusha
pushl
ret
push
push
jmp
pusha
mov
pushf
pusha
movb
lea
call
pushf
xchg
call
xchg
movb
mov
mov
pushl
ret
call
mov
pushl
call
jmp
nop
jmp
call
xchg
jmp
pushf
jmp
jmp
out
and
popf
mov
movzbl
pusha
mov
movw
jmp
pusha
mov
mov
jmp
lea
jo
lea
call
push
lea
mov
jmp
call
mov
movb
mov
bswap
movzbw
mov
push
jmp
pushf
pushf
pushf
movb
nop
call
xchg
movw
mov
mov
pushl
ret
pushf
pushf
jmp
bswap
movb
pop
mov
mov
jmp
nop
jmp
nop
pushf
jmp
call
jmp
push
lea
mov
jmp
mov
xchg
pushf
pushf
push
pushf
pushl
ret
jmp
pushf
pushf
nop
push
lea
pusha
mov
pushf
jmp
mov
jmp
lea
jo
push
push
not
mov
pusha
call
nop
push
call
lea
movsbw
mov
push
pusha
call
pop
mov
pushl
mov
mov
jmp
xchg
pusha
cwtl
movsbl
mov
mov
pusha
pushf
push
mov
call
bswap
pushf
nop
pop
pop
pushf
pusha
xchg
movb
pusha
mov
pushf
mov
pushf
call
pusha
pusha
call
call
mov
pusha
mov
call
lea
call
jmp
movsbw
lea
jp
lea
mov
call
jmp
call
mov
mov
pushf
pushl
mov
movb
pushl
pushf
jmp
jmp
call
nop
movsbw
pushf
movw
mov
push
call
xchg
movb
push
pushf
push
pushl
ret
lea
pushf
call
call
mov
mov
call
push
push
pusha
xchg
pushl
pushl
ret
movl
xchg
mov
pushl
ret
jmp
leave
int3
inc
jp
add
and
pushf
xchg
push
pushf
pushf
movb
pushl
ret
xchg
pushf
push
pushl
ret
call
push
mov
pushf
nop
jmp
xchg
push
mov
movb
pushl
ret
pushf
lea
call
mov
xchg
pushf
movb
movb
movw
pushl
ret
mov
call
jmp
nop
mov
mov
mov
jmp
mov
lea
jno
push
lea
jmp
call
pushf
lea
pushf
jmp
jmp
jmp
setbe
movzbw
nop
push
movzbw
call
jmp
pushf
movw
push
push
nop
pusha
pushf
pushf
mov
lahf
mov
setl
pop
mov
mov
call
pushf
movb
nop
mov
mov
mov
movzbw
jmp
pusha
pushf
mov
nop
jmp
pushf
nop
jmp
push
xchg
pusha
pushl
pushf
pushl
ret
push
mov
mov
pushf
push
movb
lea
pushf
jmp
xchg
movb
pushl
ret
pushf
jmp
mov
pop
call
jmp
adc
mov
push
add
rcrl
add
sbb
and
mov
ja
inc
mov
movl
mov
mov
push
jmp
push
push
pusha
xchg
pushf
pushf
mov
pushl
ret
movw
pushf
lea
movb
xchg
push
pushf
push
pushl
ret
xchg
mov
pushf
pusha
movw
pushl
ret
mov
jmp
pushf
call
lea
js
pushf
lea
pushf
pushf
call
lea
jnp
pushf
push
lea
call
pusha
movw
lea
mov
pushl
xchg
push
movb
pushf
pushl
ret
jmp
mov
jmp
mov
call
mov
mov
call
call
call
pushl
call
jmp
jmp
call
jmp
pushf
pusha
lea
mov
xchg
pushf
movb
pushl
ret
jmp
mov
xchg
movzbl
jmp
xchg
mov
setge
mov
jmp
lea
push
lea
je
pusha
pusha
xchg
push
pushf
push
pushf
pushl
ret
xchg
movw
pusha
mov
pushl
ret
push
pushf
pushf
pushf
nop
pushf
mov
sets
not
movsbw
mov
pushf
mov
pusha
lea
jmp
mov
call
mov
call
jmp
call
jmp
imul
inc
push
pushl
ret
call
mov
movw
pusha
lea
jmp
xchg
mov
pushl
ret
xchg
movb
pushl
ret
pushf
call
pushf
push
mov
mov
push
lea
pusha
mov
pushf
xchg
pushl
pushf
pushf
push
pushl
ret
lea
jmp
nop
call
lea
call
push
mov
nop
push
mov
pushl
mov
mov
mov
mov
movb
mov
lea
pushl
call
mov
pushf
mov
jmp
jmp
jmp
lea
pusha
mov
jmp
nop
movb
xchg
not
bswap
cwtl
movzbw
mov
pushf
jmp
mov
pushf
call
movw
lea
pushf
xchg
push
mov
pushl
ret
call
xchg
mov
pusha
pushf
push
pushl
ret
xchg
jmp
mov
mov
call
jmp
push
jmp
pushf
mov
pushf
jmp
jmp
pushf
xchg
jmp
jmp
pusha
pusha
mov
pushl
nop
pushf
mov
xchg
pushf
mov
movb
call
mov
pushf
lea
call
pusha
xchg
mov
mov
mov
pushl
ret
mov
lea
call
call
call
movb
push
pushf
mov
pushf
mov
call
mov
jmp
movl
movb
xchg
lea
lea
mov
jmp
push
mov
jmp
pushf
lea
pushl
movw
movb
pushf
xchg
movw
movb
pushl
ret
mov
call
jmp
movb
xchg
call
pushf
movb
mov
pushf
pusha
movb
pushl
lea
mov
push
pushl
pushf
xchg
pushf
mov
push
mov
pushl
ret
mov
call
movb
call
push
call
lea
jo
xchg
pusha
mov
pushl
ret
mov
call
lea
call
mov
call
call
xchg
lea
mov
lea
pushl
mov
pushf
call
xchg
pushf
pushf
pushl
pushl
ret
jmp
pushf
xchg
pusha
pushl
ret
pushl
xchg
movb
mov
pushf
push
pushl
ret
pushf
push
mov
nop
movw
jmp
mov
pop
mov
call
call
movsbw
jmp
mov
pushl
call
bswap
mov
mov
call
pusha
call
pushf
pushf
nop
call
call
pusha
mov
mov
pop
bswap
pop
mov
pusha
mov
push
jmp
xchg
movsbw
pushf
pop
mov
mov
jmp
pop
lea
jb
pushf
mov
jmp
mov
movb
lea
call
jmp
xchg
movl
pushl
ret
mov
pusha
jmp
push
nop
pushl
movb
lea
jnp
push
jno
mov
pusha
jmp
xchg
push
push
pushl
ret
push
mov
pushf
lea
jne
push
lea
mov
mov
mov
xchg
pusha
push
mov
pushl
ret
xchg
pushf
bswap
lea
call
mov
jmp
nop
push
pushf
pushl
pusha
mov
not
lea
pushf
mov
pushf
push
pushf
mov
call
jmp
mov
or
push
lea
mov
pushf
lea
jge
push
mov
pushf
pusha
lea
push
call
xchg
pushf
pushl
ret
call
pusha
movb
mov
not
mov
mov
lea
jle
pushf
mov
call
pushf
pushf
lea
jmp
movl
xchg
pushf
push
pushl
ret
push
jbe
ljmp
nop
jmp
movw
mov
jmp
mov
movsbw
bswap
movzbw
mov
pushf
pushf
pusha
lea
ja
mov
pusha
lea
pushf
jmp
xchg
mov
movb
pushl
ret
lea
jge
pushf
pusha
nop
call
mov
pusha
pushl
jmp
mov
pushf
mov
pushl
mov
push
mov
mov
jmp
call
movb
movb
mov
mov
mov
call
pushf
nop
call
movb
mov
mov
jmp
nop
pusha
xchg
not
lea
jmp
jmp
nop
pusha
push
xchg
lea
not
mov
jmp
mov
call
xchg
pushl
mov
pushf
pushl
ret
pushf
jmp
xchg
pushl
push
movl
pushl
ret
push
nop
pusha
movb
mov
push
mov
pushf
mov
call
mov
mov
push
push
add
pushf
lea
jl
lea
jmp
nop
pushf
pushf
jmp
pushf
nop
movw
xchg
movsbl
mov
push
jmp
pushf
jmp
not
mov
call
pusha
pushf
pushl
nop
pushl
mov
jmp
pusha
mov
movzbl
push
lea
lea
jbe
mov
jmp
xchg
pushf
mov
pushl
ret
xchg
movzbw
not
mov
jmp
lea
mov
call
mov
pushf
pusha
lea
movw
call
xchg
mov
pushl
ret
call
jmp
push
pusha
mov
nop
pushf
pushf
xchg
pushf
jmp
lea
call
push
mov
mov
jmp
pushf
nop
pushf
push
xchg
call
lea
jo
pushf
lea
call
mov
pushf
push
jmp
mov
pushf
lea
push
jmp
pusha
call
jmp
call
nop
movb
pushf
xchg
pop
mov
pusha
mov
lea
js
lea
call
pusha
push
jmp
mov
push
movw
jmp
nop
push
jmp
lea
pushf
xchg
pushl
pushl
ret
mov
not
movsbw
lea
mov
pushl
pusha
mov
jmp
jmp
call
mov
call
jmp
nop
call
mov
jmp
push
jmp
jmp
movb
push
mov
call
pusha
pusha
push
nop
call
call
jmp
xchg
pushl
mov
push
push
pushf
push
mov
mov
pushl
pushf
jmp
pushf
lea
pushf
pushl
push
push
xchg
pushf
pushl
push
pushf
pushl
ret
xchg
pushf
pushf
pushf
pushl
ret
lea
jmp
xchg
not
mov
pushf
pushf
jmp
call
pushf
mov
pop
movsbw
mov
jmp
call
call
xchg
movb
pushf
push
pushl
ret
loope
adc
jne
movb
jmp
pusha
pushl
nop
pushf
mov
call
push
nop
jmp
pushf
xchg
movb
movb
pushl
ret
call
movb
call
mov
jmp
jmp
xchg
mov
pushl
ret
pushf
mov
mov
pusha
pushf
mov
lea
jmp
jmp
push
lea
pushl
xchg
push
mov
pushl
ret
pushf
mov
nop
jmp
pushf
push
pushl
xchg
movzbl
pop
pushf
cwtl
mov
pusha
call
jmp
nop
jmp
push
nop
movb
movb
mov
pushf
mov
pushl
pusha
mov
pushf
call
call
mov
pushf
jmp
bswap
bswap
mov
push
pushl
mov
movb
push
lea
pushl
jmp
call
pushl
pushf
xchg
push
pushl
ret
lea
pushf
call
xchg
push
pushl
ret
jmp
mov
pushl
pushf
push
movb
mov
jmp
lea
jno
lea
pusha
xchg
push
pusha
push
movw
pushl
ret
nop
pusha
xchg
call
test
lea
call
mov
xchg
push
pushl
ret
nop
call
pusha
lea
jmp
xchg
movb
pushf
pushl
ret
call
xchg
pushf
mov
call
push
nop
jmp
pusha
nop
pusha
xchg
lea
js
bswap
movzbw
pusha
mov
movb
mov
pusha
lea
push
movw
jmp
lea
jmp
lea
push
mov
call
pusha
lea
pushf
call
jmp
lea
call
push
lea
js
xchg
pushf
pushf
pusha
pushl
ret
jmp
pushf
push
jmp
call
lea
jl
push
lea
jmp
xchg
pushf
movw
pushl
ret
call
mov
pushl
pop
pop
pushf
mov
jmp
lea
jbe
nop
js
push
push
lea
jp
not
pushf
mov
call
pushf
lea
call
nop
call
pushf
pushl
nop
jmp
pushf
pushf
xchg
movw
pushf
pushl
ret
pushf
lea
movb
push
xchg
pushf
movb
movb
pushl
ret
movw
xchg
jmp
xchg
pushf
movb
pushf
mov
pushl
ret
push
lea
call
pushf
xchg
pushf
pushf
pusha
mov
pushl
ret
call
nop
call
jmp
lea
jle
xchg
pushf
jmp
pusha
mov
pushf
push
mov
pushf
call
pushl
xchg
pushf
pushl
ret
call
call
pushl
call
lret
jge
cmp
pushl
push
movb
pushl
ret
jmp
pushf
call
jmp
push
pusha
pusha
nop
call
pushf
mov
pushf
pushf
mov
pushf
call
nop
mov
jmp
pushf
mov
call
push
mov
mov
bswap
not
mov
call
nop
pushf
call
push
lea
jne
nop
jmp
push
lea
jae
pusha
nop
movb
xchg
seto
pop
lea
mov
pushl
call
mov
mov
pushl
lea
mov
pushl
pushf
call
pusha
nop
pushl
pushl
mov
mov
pop
bswap
pushf
mov
call
pusha
nop
push
pushf
call
call
jmp
lea
jmp
jmp
xchg
pushf
pushl
ret
push
lea
jmp
nop
lea
jae
push
pushf
mov
pushl
mov
call
mov
call
jmp
setle
setnp
seta
nop
bswap
mov
pushf
movzbw
mov
jmp
pushf
jmp
push
mov
pushf
nop
pushf
jmp
call
call
mov
call
pusha
mov
call
pusha
xchg
not
mov
movb
call
jmp
push
xchg
pushf
movw
pushf
pushl
ret
pushf
nop
pushl
mov
movw
call
pushf
lea
mov
xchg
pushf
pushl
pushl
pushl
pushl
ret
mov
movb
lea
call
movb
mov
bswap
jmp
pushf
jmp
imul
js
test
and
lea
pusha
push
jmp
push
nop
pushf
pusha
xchg
pop
movzbw
mov
pushf
pusha
jmp
sets
mov
pushf
mov
call
sti
cmp
add
call
nop
mov
movl
xchg
lea
jmp
jmp
mov
mov
jmp
xchg
push
push
pushl
movb
pushl
ret
mov
ss
add
pushl
mov
call
lea
jmp
jmp
xchg
movw
call
push
nop
jmp
push
nop
pusha
push
jmp
xchg
pushl
pushl
ret
pushf
pushf
pushf
mov
call
pusha
pusha
call
push
push
mov
lea
push
xchg
pushl
movl
movl
pushl
ret
pusha
lea
pushf
jmp
push
nop
pushf
xchg
lea
pop
movzbw
mov
pushf
pushf
pushf
mov
pushl
pushl
lea
call
call
call
mov
mov
push
pushl
call
jmp
mov
jmp
call
and
inc
and
pushf
pusha
xchg
not
call
nop
call
pusha
lea
jg
push
nop
jmp
mov
jmp
mov
xchg
movb
mov
mov
movb
pushl
ret
mov
lea
jmp
call
xchg
pushf
pusha
push
pushl
ret
xchg
pop
movsbw
not
mov
pushf
call
lea
call
mov
call
xchg
push
movb
pushl
ret
lea
call
call
mov
pusha
call
nop
call
lea
mov
jmp
call
push
jmp
movb
xchg
movw
pushl
ret
pushf
nop
jmp
movl
xchg
movb
pushl
ret
call
seta
mov
pushf
mov
call
call
push
nop
jmp
push
lea
pushl
call
push
mov
bswap
jmp
lea
mov
pushf
xchg
pushl
push
pushl
ret
pushf
xchg
not
mov
jmp
jmp
jmp
xchg
pushf
pushl
ret
call
mov
not
movzbl
mov
jmp
mov
push
mov
push
mov
jmp
pusha
nop
pushf
mov
bswap
push
jmp
jmp
mov
call
pushf
xchg
pushf
pushl
ret
push
jmp
pushf
lea
jns
nop
pushf
mov
lea
mov
pushf
mov
jmp
mov
push
call
mov
bswap
push
mov
pushf
push
call
call
xchg
movw
pushl
movl
pushl
ret
inc
adc
inc
xchg
mov
mov
mov
pushl
ret
nop
pushl
pusha
mov
movsbw
setl
movsbw
mov
pushf
pushf
pushf
mov
call
jmp
pushf
movw
xchg
pushl
push
pushl
ret
xchg
pushf
jmp
pushf
mov
pop
movzbw
mov
jmp
mov
jmp
movb
pushf
xchg
pushl
pushf
push
push
pushl
ret
lea
ja
push
xchg
pushf
pushf
push
pushl
ret
mov
mov
movb
movl
jmp
nop
call
jmp
call
jmp
call
push
push
not
mov
call
jns
push
nop
movw
pushf
xchg
lea
mov
pushf
call
call
push
nop
jmp
pushf
mov
xchg
push
push
movb
mov
pushl
ret
mov
pushf
lea
jno
lea
push
pusha
xchg
pushl
pushl
ret
nop
call
jmp
mov
mov
call
call
lea
push
call
push
lea
jbe
push
nop
pusha
jmp
jmp
xchg
movsbw
bswap
mov
push
mov
pushf
call
call
xor
mov
call
pushl
push
mov
call
pushf
jmp
movw
mov
call
call
push
xchg
pusha
pushf
pushf
pushl
ret
call
jmp
mov
setg
jmp
call
nop
movb
mov
xchg
push
mov
pusha
pushf
call
pushf
jmp
movl
bswap
mov
call
push
pushf
pusha
nop
movb
call
mov
jmp
call
xchg
mov
movb
mov
mov
pushl
ret
mov
pushf
jmp
call
pusha
mov
nop
pusha
mov
xchg
jmp
pushf
nop
call
setne
setge
not
mov
pushf
push
pushl
push
mov
jmp
jmp
jmp
pushl
lea
jle
lea
push
call
pusha
nop
jmp
pusha
jmp
lea
jmp
lea
push
movb
pushl
xchg
pushf
mov
mov
pushl
ret
nop
push
movw
xchg
pushf
mov
push
pusha
movb
pushf
mov
push
pushf
lea
mov
xchg
push
pushl
ret
call
pusha
nop
jmp
xchg
movsbw
push
lea
mov
pushf
push
mov
mov
call
mov
pushf
bswap
not
mov
push
mov
jmp
movw
lea
pusha
push
xchg
pushl
mov
push
mov
pushl
ret
jmp
pushf
push
nop
pusha
jmp
xchg
push
pushf
movb
pushl
ret
pushf
pushf
pushf
lea
push
xchg
pushf
pushf
push
pushl
ret
movb
call
nop
pusha
movb
mov
pushf
xchg
pushl
mov
pushf
call
pushf
jmp
xchg
pushf
pushf
mov
pushl
ret
lea
push
push
call
pushf
lea
jmp
pushl
pusha
mov
lea
mov
push
mov
mov
mov
pushf
lea
mov
mov
xchg
pushl
pushf
mov
pushl
ret
call
push
lea
pushl
pushf
jmp
jmp
push
jmp
pushf
pusha
xchg
movsbw
mov
push
movl
push
movb
mov
movb
lea
pushl
mov
call
pushf
mov
xchg
pushf
movb
push
pushl
ret
jmp
not
mov
jmp
jmp
jmp
nop
push
movb
pushf
call
xchg
mov
movb
movb
pushl
ret
pushf
xchg
movb
pusha
movb
pushl
ret
push
call
pusha
jmp
call
pusha
mov
pusha
nop
jmp
jmp
pushf
mov
not
call
nop
call
xchg
pusha
mov
mov
pushf
pushl
ret
jmp
mov
pushf
push
lea
pushf
pushf
xchg
push
pushl
pushf
mov
pushl
ret
pushf
nop
jmp
jmp
jmp
pushf
call
mov
pushl
push
lea
push
movb
jmp
lea
jmp
push
xchg
mov
movl
pushl
ret
pushf
pushf
xchg
pushf
jmp
nop
call
xchg
movb
pushl
pushl
ret
lea
mov
xchg
pushl
pushl
pushl
ret
pushf
mov
setbe
mov
lea
jo
mov
pushf
pusha
jmp
call
pushf
jmp
jmp
movw
xchg
movw
mov
push
pushl
ret
pusha
xchg
jmp
lea
call
xchg
mov
jmp
pushf
pusha
mov
nop
pushf
pushl
movl
pushf
mov
lea
mov
jmp
call
push
xchg
call
mov
pushf
nop
movw
pushf
xchg
pushf
pushf
mov
movsbl
mov
pushf
mov
pushl
jmp
lea
jns
mov
pusha
movb
pushf
jmp
mov
mov
call
mov
push
call
xchg
call
lea
push
xchg
mov
pushf
push
pushf
pushl
ret
xchg
movb
movw
mov
movl
pushl
ret
movb
pushf
mov
pushf
movw
jmp
lea
jmp
pusha
pushf
mov
call
push
call
jmp
mov
mov
movl
pushl
lea
jmp
lea
pushf
jmp
pusha
xchg
push
pusha
movb
movb
pushl
ret
pusha
pushf
pushf
jmp
pushf
pushl
pusha
nop
push
push
push
xchg
bswap
lea
movzbw
bswap
mov
jmp
pusha
pusha
pushf
nop
movw
pushf
call
mov
jmp
pushf
nop
push
call
or
push
inc
and
pusha
pusha
movb
pushl
ret
jmp
push
movw
lea
pushf
jmp
pusha
lea
call
or
add
jmp
xchg
push
mov
call
movb
jmp
mov
pushf
pusha
pushf
xchg
jmp
call
nop
jmp
call
mov
lea
jmp
pushf
mov
lea
movzbw
jmp
jmp
daa
aaa
mov
and
movzbl
mov
call
jmp
jmp
pushf
xchg
push
pushl
ret
mov
pop
not
call
lea
jg
nop
push
xchg
mov
mov
call
pushl
movl
lea
call
nop
jmp
push
pushf
jmp
push
pusha
call
pusha
call
jmp
lea
push
movb
push
push
xchg
movw
movb
pushl
ret
pusha
mov
pushf
lea
mov
call
push
pushf
push
jmp
pushf
mov
nop
mov
jmp
pusha
lea
jmp
mov
setae
call
mov
xchg
movw
pushl
ret
jmp
pusha
jmp
push
nop
call
lea
jmp
nop
pusha
call
xchg
movl
push
pushl
ret
xchg
movsbw
bswap
push
mov
call
nop
pushf
call
mov
call
nop
push
jmp
mov
jmp
jmp
call
xchg
pusha
pushf
mov
push
pushl
ret
nop
pusha
call
xchg
not
mov
pusha
movb
pushf
mov
mov
jmp
mov
mov
jmp
lea
mov
jmp
push
call
call
call
movb
mov
pushf
pushf
push
lea
call
jmp
movw
lea
jmp
xchg
pushf
movl
pushl
ret
pusha
jmp
push
pusha
nop
mov
xchg
movzbl
pushf
movl
movzbw
mov
mov
pushl
movb
movl
mov
jmp
push
jmp
lea
mov
jmp
mov
jmp
nop
call
call
xchg
lea
mov
mov
pushf
push
mov
push
lea
mov
call
movsbl
pop
jmp
pusha
pusha
nop
call
pusha
xchg
pushf
pushf
pushf
push
pushl
ret
call
pushf
call
xchg
mov
lea
pushf
movzbw
mov
call
pushf
pusha
jmp
call
jmp
jmp
pushf
mov
pushl
jmp
call
lea
call
jmp
lea
push
jmp
movw
push
jmp
jmp
jmp
jmp
call
movb
lea
mov
call
push
push
lea
call
push
mov
nop
mov
push
pushf
mov
lea
jmp
lea
push
xchg
movb
mov
mov
mov
pushl
ret
pushf
jmp
mov
lea
jmp
movw
mov
xchg
bswap
pop
lea
mov
pushl
mov
push
jmp
pushf
xchg
lea
pushf
not
movzbw
mov
movb
pushl
movw
mov
pusha
pushl
lea
jno
pusha
lea
pusha
xchg
mov
movw
pushf
pushl
pushl
ret
jmp
call
mov
push
call
mov
pushf
mov
call
jmp
jmp
adc
imul
test
dec
inc
add
call
pushf
push
call
xchg
lahf
mov
pop
mov
jmp
push
movb
push
xchg
mov
pusha
movb
pushf
pushl
ret
not
movzbw
mov
call
push
xchg
movw
pushl
ret
push
lea
jne
pushf
nop
movb
xchg
pusha
mov
jmp
push
call
pushf
push
pusha
nop
mov
mov
movb
xchg
pusha
call
pusha
lea
mov
pusha
xchg
movb
jmp
lea
pushf
movb
jmp
push
nop
push
xchg
not
pop
movsbl
mov
js
pusha
pushf
pusha
mov
lea
ja
lea
push
push
xchg
mov
pushl
pushf
pushl
ret
push
xchg
lea
jge
movsbw
pusha
mov
jmp
mov
jmp
call
jmp
pusha
xchg
movzbw
pusha
bswap
pop
mov
call
pushf
pusha
nop
jmp
pushl
xchg
pushf
pushl
pushl
ret
jmp
pushf
pushf
pusha
mov
movzbw
mov
mov
mov
jmp
push
call
call
xchg
mov
pushl
ret
pushl
call
xchg
pushf
pushl
ret
pushf
lea
pushf
movb
xchg
push
pushl
ret
movb
xchg
movzbw
call
xchg
mov
push
mov
mov
pushl
ret
pushl
nop
movw
xchg
not
pusha
mov
call
call
pushf
push
pusha
nop
lea
jg
push
movsbw
mov
pushf
movb
lea
jp
pushf
mov
call
pusha
nop
push
pusha
pushf
mov
pushl
not
movsbl
mov
push
mov
call
movsbw
call
mov
movw
pusha
nop
call
mov
bswap
movsbl
bswap
mov
call
pusha
nop
call
mov
jmp
call
pushf
pushl
mov
jmp
pushf
lea
jmp
jmp
xchg
push
pushf
pushf
pushl
ret
lea
jno
nop
jmp
lea
call
jmp
jmp
pusha
mov
push
call
jmp
pushf
mov
mov
mov
mov
movsbw
call
xchg
pushf
pushf
mov
push
pushl
ret
lea
pushl
xchg
movb
pusha
pushf
pushl
ret
lea
movl
call
pushf
jmp
push
push
lea
jmp
push
jmp
jmp
add
mov
push
push
popf
movb
xchg
mov
pushl
ret
movw
lea
mov
movw
movb
movw
xchg
pushf
push
push
pushl
pushl
ret
lea
pushf
call
call
call
pushf
nop
call
pushl
xchg
movb
movw
pushf
push
pushl
ret
movb
xchg
call
lea
je
push
mov
mov
push
mov
mov
push
movb
call
jmp
lea
pusha
push
pushf
xchg
pushl
pushl
ret
mov
mov
mov
movl
pusha
call
call
pushf
pusha
nop
pusha
xchg
movzbl
mov
jmp
call
pusha
push
pusha
jmp
xchg
mov
mov
pushf
mov
pushl
ret
mov
jmp
lea
jo
pusha
mov
cwtl
lahf
pushf
mov
pushl
movw
movw
mov
pusha
call
movb
movb
mov
jmp
pusha
nop
jmp
lea
call
movw
xchg
pushf
lea
jo
mov
mov
pusha
call
mov
push
pushf
mov
pusha
push
mov
lea
ja
pushf
lea
movw
xchg
mov
pushf
mov
pusha
pushl
ret
nop
pusha
mov
not
mov
lea
je
pushf
mov
mov
pushf
pusha
lea
jmp
call
push
call
xchg
lea
bswap
jmp
jmp
call
pushf
pusha
jmp
mov
call
xchg
push
cmpsb
lea
jo
xchg
push
mov
pushf
pushf
pushl
ret
xchg
mov
mov
mov
pushl
ret
call
movzbw
mov
push
call
call
pushf
mov
pushf
call
jmp
lea
pushf
xchg
mov
pushf
movl
pushl
ret
pushf
mov
pusha
push
mov
call
call
bswap
mov
pusha
jmp
mov
jmp
mov
pushf
call
mov
movb
xchg
movb
mov
movw
movw
pushl
ret
push
pusha
call
lea
pushf
mov
lea
jae
xchg
pusha
pushf
push
pushl
ret
pushf
nop
movb
pusha
xchg
movzbl
mov
push
call
pusha
pusha
pushf
jmp
pushf
xchg
mov
cwtl
mov
jmp
movw
lea
js
pusha
xchg
pushf
pushl
pushl
ret
lea
mov
jmp
xchg
pusha
push
pushl
ret
nop
pushf
mov
pusha
mov
call
xchg
pushf
mov
mov
mov
pushl
ret
pushf
mov
pushf
mov
mov
movb
lea
pushf
call
jmp
push
pushf
mov
mov
push
push
push
pushl
lea
push
movb
xchg
push
movl
pushf
mov
pushl
ret
mov
movw
mov
pusha
lea
jmp
push
movl
call
lea
push
jmp
push
push
not
lea
pop
mov
jmp
jmp
mov
movsbw
mov
lea
je
pushf
push
pushf
mov
movb
push
jmp
jmp
mov
lea
push
jmp
nop
push
mov
pushf
not
mov
push
pusha
pushf
xchg
lea
jae
push
xchg
jmp
mov
call
movw
xchg
movb
pushl
ret
lea
movb
mov
mov
xchg
mov
pushf
push
pushl
ret
mov
xchg
pushl
pushf
movb
pushl
ret
pusha
pushf
call
pusha
movb
lea
jge
lea
jnp
push
pusha
movb
xchg
push
movb
pushl
movw
pushl
ret
push
nop
pushf
mov
lea
not
pop
bswap
mov
push
push
mov
pusha
lea
pushf
mov
xchg
push
pushf
pushl
ret
mov
movw
mov
mov
call
mov
pushf
lea
call
jmp
movw
mov
lea
jg
movsbl
mov
push
movb
mov
mov
pushf
lea
pusha
push
call
xchg
push
pushf
push
pushl
ret
lea
push
jmp
mov
mov
pushf
jmp
call
jmp
mov
pushl
lea
movb
xchg
pushf
pushl
ret
xchg
call
jmp
mov
push
lea
pushf
mov
xchg
pushf
mov
pushl
pushl
ret
xchg
pusha
pusha
movb
pushl
ret
pushf
pushf
nop
pusha
pushf
xchg
lea
bswap
pop
lea
mov
mov
movb
pushf
mov
mov
mov
pushf
lea
pushl
push
lea
jno
xchg
pusha
pushf
pushl
pushl
ret
xchg
pushl
pushf
pushl
ret
mov
pusha
push
jmp
pushf
call
lea
pushf
movb
xchg
pushf
pushl
ret
xchg
pushl
push
pushf
pushl
ret
xchg
call
pushf
call
pusha
pushl
mov
mov
pusha
push
jmp
call
jmp
lea
jne
pusha
pushf
mov
pusha
pushf
call
nop
pushf
call
mov
pusha
pusha
lea
push
push
xchg
pushf
mov
movb
mov
pushl
ret
mov
jmp
xchg
movb
push
pushl
ret
movsbw
call
xchg
movb
pushl
ret
jmp
lea
push
xchg
pushf
pushf
pushl
ret
push
call
push
jmp
pushf
mov
nop
call
lea
movb
jmp
push
bswap
bswap
pushf
mov
call
pushf
xchg
push
movb
pushf
push
pushl
ret
mov
call
mov
mov
pushf
lea
movb
call
pushf
xchg
pushf
pushf
pushf
pushl
ret
xchg
movzbw
jmp
pusha
jmp
movb
movb
jmp
nop
jmp
jmp
call
nop
call
pusha
jmp
push
mov
movb
jmp
lea
push
mov
xchg
pushl
pushf
pushl
ret
lea
call
nop
push
call
lea
pushf
xchg
push
push
movw
pushl
ret
not
pushf
mov
pushf
pusha
call
mov
nop
pusha
pushl
xchg
call
mov
pushf
xchg
push
mov
push
pushf
pushl
ret
mov
mov
lea
mov
xchg
pushl
pushl
ret
nop
pusha
xchg
call
lea
pushf
pushf
xchg
push
movb
movb
mov
pushl
ret
jmp
sub
and
add
decl
xor
add
pushf
mov
pusha
call
pusha
lea
jl
xchg
pushf
pushl
ret
call
push
pushl
nop
lea
jns
push
mov
pushf
cwtl
mov
movb
mov
call
movsbw
jmp
call
pusha
pushf
push
xchg
bswap
mov
jmp
mov
jmp
mov
movw
xchg
movw
pushl
ret
pushf
mov
jmp
call
pusha
call
mov
push
lea
push
mov
mov
xchg
mov
pushl
ret
pushf
lea
jmp
nop
mov
mov
call
pushf
pusha
call
jae
pusha
push
pusha
lea
jmp
pushf
lea
pushf
push
call
mov
movl
lea
push
call
mov
lea
jmp
pushf
movl
xchg
pushf
pushf
pushf
pushf
pushl
ret
pusha
pusha
pushf
nop
jmp
mov
jmp
jmp
dec
addb
mov
add
xor
push
pushf
lea
pushf
pushf
push
xchg
push
pushf
pushl
ret
xchg
push
push
mov
push
pushl
ret
call
nop
pushf
mov
jmp
xchg
push
push
pushl
ret
push
pushf
pusha
nop
push
pushf
mov
pushf
xchg
pushf
call
lea
jge
push
xchg
movl
call
jmp
pusha
mov
movzbw
movsbw
lea
lea
mov
push
push
movw
pushf
mov
mov
mov
jmp
mov
jmp
movb
push
nop
pushl
xchg
movl
push
mov
pushf
pushl
mov
pusha
movw
jmp
jmp
pusha
pusha
nop
pushf
jmp
mov
pushf
lea
jmp
call
call
push
lea
pushf
pusha
pushf
jmp
jmp
mov
push
pushf
xchg
pushl
movb
pushl
ret
movb
mov
mov
pop
push
pop
mov
mov
pusha
mov
jmp
push
jmp
call
pushf
movzbw
mov
pusha
call
push
pusha
pushf
jmp
xchg
mov
movb
mov
movb
pushl
ret
lea
pusha
xchg
pushf
pushl
mov
pushl
ret
xchg
call
nop
movw
xchg
movsbw
cwtl
pusha
mov
pusha
jmp
jmp
pushf
jmp
jmp
mov
in
out
sub
lea
jge
lea
jmp
nop
call
mov
mov
call
push
push
nop
pusha
jmp
push
lea
jns
pushf
mov
jmp
jmp
push
push
mov
bswap
cwtl
mov
lahf
mov
push
call
pusha
push
xchg
lea
mov
lea
jbe
push
pushf
mov
pusha
lea
call
xchg
mov
pushl
ret
push
call
mov
push
xchg
setns
pushf
movsbw
mov
pushf
mov
pushf
mov
movw
lea
pushl
pushf
jmp
call
call
jmp
mov
mov
movb
lea
call
pushf
jmp
mov
xchg
mov
mov
pushl
ret
pusha
nop
pusha
pushf
pushf
movb
mov
movzbw
mov
pushf
jmp
push
bswap
mov
jmp
mov
lea
call
lea
not
mov
pusha
call
jmp
xchg
mov
movb
movw
movb
pushl
ret
not
mov
jmp
pushf
pushl
xchg
pushf
pushf
push
xchg
movsbw
movsbw
movsbw
pop
mov
movb
call
call
xchg
pushf
pushf
mov
pushl
ret
push
mov
pushf
lea
call
movb
mov
pushf
pushl
jmp
xchg
movsbw
push
call
pushf
jmp
pusha
nop
jmp
pushf
pusha
nop
pushf
mov
cwtl
bswap
pushf
movzbl
mov
mov
mov
push
push
movb
lea
call
pusha
nop
lea
jbe
push
pushf
movw
xchg
pusha
mov
call
xchg
pop
not
movzbl
mov
push
pusha
mov
pushf
pushl
pushf
lea
jmp
call
pushf
pushl
xchg
push
mov
pushf
movb
pushl
ret
lahf
mov
pusha
lea
jno
mov
jmp
mov
lea
jg
pusha
lea
mov
movw
xchg
pusha
pushf
pushl
ret
pushf
nop
call
push
jmp
call
mov
mov
lea
push
push
push
movb
xchg
pushf
pushf
pushf
pushl
ret
pusha
push
push
nop
push
lea
jp
pusha
xchg
pop
mov
pusha
call
lea
pushf
push
jmp
mov
jmp
push
nop
pushf
call
push
jmp
push
mov
nop
push
pusha
movb
mov
xchg
push
jmp
lahf
mov
pushl
push
pushl
mov
jmp
nop
pushf
push
pushf
push
mov
pushl
pusha
mov
pushf
call
call
mov
pushl
jmp
push
lea
jge
pusha
mov
call
nop
pushf
call
pushl
jmp
push
push
xchg
pushf
mov
movb
pushf
mov
push
mov
call
call
mov
call
pop
mov
mov
push
pushl
pusha
mov
jmp
call
nop
push
call
call
call
lea
call
mov
xchg
not
mov
push
pushf
pushl
mov
movl
pushf
call
push
xchg
movw
pushl
ret
pusha
nop
jmp
movb
xchg
mov
pushl
ret
movl
jmp
xchg
push
pushl
ret
call
jmp
mov
call
call
nop
push
call
call
call
mov
not
mov
jmp
movb
lea
mov
pusha
push
xchg
pushf
pushf
pushf
pushl
pushl
ret
pushl
movb
call
pusha
jmp
jmp
mov
mov
mov
jmp
jmp
xchg
pushf
pushf
pushl
ret
xchg
movb
push
mov
pushl
ret
mov
pushl
lea
pushf
jmp
jmp
xchg
pushf
pushl
ret
call
lea
jns
pusha
pusha
xchg
movb
pushl
pushf
mov
pushl
ret
mov
movl
call
jmp
movb
call
mov
pushl
jmp
lea
pusha
jmp
push
push
pusha
nop
jmp
pusha
xchg
not
mov
call
xchg
push
xchg
lea
jmp
lea
pusha
call
mov
jmp
push
nop
call
pushf
pushl
xchg
mov
pushl
ret
pushl
jmp
pushf
pusha
lea
pushf
movw
jmp
pusha
xchg
movw
pushl
pushf
pushl
ret
pushf
pushf
lea
pushl
mov
pushl
xchg
push
push
pushl
ret
jmp
movw
jmp
pusha
mov
pushf
mov
mov
pushl
mov
mov
call
jmp
mov
movb
push
call
xchg
pushf
pusha
mov
movb
pushl
ret
call
call
xchg
pusha
pushl
pushl
ret
pushf
pushf
xchg
pusha
push
call
lea
jg
pusha
pushf
lea
jmp
dec
xchg
arpl
pushf
lea
jmp
call
mov
mov
call
xchg
movw
movsbw
mov
jmp
call
push
pushf
movw
call
mov
movzbw
cwtl
movzbl
pushl
mov
movw
push
pusha
call
mov
lea
je
pushf
pusha
lea
movw
lea
jle
push
pusha
xchg
pusha
movb
pushf
pushl
ret
xchg
push
push
pushl
ret
lea
call
push
xchg
mov
pushl
ret
jmp
jmp
nop
jmp
lea
call
push
mov
push
lea
pushf
lea
jge
xchg
pushf
pusha
mov
pushf
pushl
ret
mov
not
jmp
xchg
pushf
movw
pushl
ret
pusha
xchg
mov
pushl
ret
mov
pusha
lea
pushl
xchg
mov
pushl
ret
call
push
not
pusha
lahf
lea
mov
call
lea
pushl
jmp
pushf
push
mov
xchg
movw
movb
pushl
ret
call
jmp
call
pusha
pushf
call
pushf
pusha
lea
jmp
lea
call
mov
pushf
mov
pushl
pushf
call
jmp
pusha
pushf
call
lea
push
mov
call
mov
lea
mov
pusha
mov
pushf
jmp
mov
pop
bswap
mov
push
mov
lea
je
pusha
lea
jmp
pushl
movb
xchg
bswap
pushf
setge
mov
call
mov
xchg
call
mov
or
xchg
mov
movw
movb
movb
pushl
ret
push
pushf
call
call
lea
pushf
pushf
mov
jmp
push
xchg
lea
movzbw
movsbw
mov
pushf
mov
mov
call
xchg
push
pushf
mov
push
mov
pusha
mov
jmp
jmp
not
mov
call
not
mov
movb
push
mov
pushf
pushf
jmp
call
pusha
xchg
pushf
pushl
ret
mov
push
not
pushf
mov
pushf
mov
jmp
movb
call
pushf
jmp
not
nop
lea
jl
movzbl
pop
jne
xchg
push
jmp
lea
call
mov
mov
lea
jmp
mov
mov
jmp
lea
pushf
xchg
push
push
pushf
pushl
ret
push
push
nop
call
pushf
push
mov
jmp
lea
pushf
xchg
pusha
mov
pushl
pushl
ret
nop
call
push
jmp
xchg
pop
cwtl
setbe
mov
jmp
lea
movb
call
movl
lea
movb
xchg
pushf
mov
pushl
ret
mov
lahf
mov
jmp
mov
call
push
mov
mov
call
push
mov
movw
jmp
lea
mov
push
push
xchg
pushl
push
pushl
ret
jmp
xchg
pushl
pushl
ret
mov
nop
jmp
mov
pushf
pushl
pushf
jmp
jmp
pusha
call
pushf
jmp
pusha
pushl
pusha
nop
lea
jb
pusha
pusha
mov
mov
cwtl
mov
movb
call
movw
mov
xchg
pusha
mov
call
mov
call
call
pushf
nop
movb
xchg
movsbw
mov
mov
push
pushl
mov
jmp
pusha
jmp
jmp
jmp
call
pushl
lea
pusha
xchg
push
push
pushf
push
pushl
ret
push
nop
push
push
pusha
xchg
movsbw
mov
pushl
jmp
mov
movb
xchg
bswap
mov
mov
push
pusha
mov
call
xchg
mov
push
mov
call
call
push
xchg
bswap
mov
movb
jmp
mov
push
xchg
push
pushl
ret
mov
push
lea
jno
pushf
pusha
lea
pushl
call
pushf
call
call
lea
jmp
mov
call
call
jmp
xchg
lea
call
pushf
pushf
mov
movw
mov
lea
pushl
call
mov
push
xchg
push
push
movb
pushf
pushl
ret
mov
push
bswap
mov
call
pushf
pushf
mov
mov
pushf
pop
mov
call
lea
jl
movzbw
movsbw
mov
push
pushl
pusha
mov
mov
lea
jmp
call
pushf
xchg
push
mov
xchg
pushf
pushl
not
lea
jl
mov
jmp
pusha
push
xchg
lea
not
not
pop
mov
jmp
lea
movb
xchg
pushf
push
pushl
pushf
pushl
ret
pusha
pushl
jmp
call
pushf
mov
movw
pop
mov
push
movl
mov
pusha
call
xchg
pushl
pushf
pushl
ret
lea
lea
js
xchg
push
push
pushf
pushl
ret
jmp
push
pusha
mov
pushf
nop
lea
ja
push
mov
pushf
push
jmp
call
pushf
mov
jmp
js
pusha
pushf
push
nop
movb
xchg
pushf
pushl
not
lea
mov
lea
jge
pushf
push
mov
call
xchg
mov
lea
lea
mov
push
pushf
pushf
pushf
mov
pushl
lea
mov
xchg
pushf
pushf
mov
movw
pushl
ret
xchg
movb
mov
xchg
movzbw
movzbw
lea
pop
mov
movw
mov
push
jmp
mov
pushf
lea
movb
pushl
xchg
pushf
pushf
push
pushl
ret
push
pushf
lea
pusha
xchg
mov
pushl
ret
pusha
movb
pusha
jmp
pushf
xchg
jmp
jmp
pusha
xchg
movb
pushf
pushf
pushl
ret
push
call
call
jmp
nop
call
gs
adc
adc
xor
or
or
popf
add
mov
mov
call
pusha
mov
jmp
movb
xchg
mov
movb
movb
pushl
ret
pushf
mov
not
mov
pusha
pushf
movw
mov
lea
jb
pushf
pusha
lea
pushf
xchg
pushf
pushl
ret
push
jmp
call
mov
mov
lea
pusha
push
mov
xchg
pushf
mov
pushf
pushl
ret
lea
call
pushf
call
pusha
xchg
pushf
pushf
pushl
ret
movb
xchg
jmp
jmp
call
mov
call
pushf
pushl
mov
pushf
not
mov
push
pusha
mov
pushf
pushl
lea
pushl
xchg
mov
pushf
mov
pushl
ret
mov
xchg
mov
pushl
ret
pushf
pushf
lea
jmp
nop
call
mov
pushf
pushf
mov
pushf
mov
mov
mov
lea
mov
jmp
pusha
movw
xchg
pushl
push
push
mov
pushl
ret
pusha
pusha
call
call
lea
pusha
pushf
xchg
pusha
pushf
movl
mov
pushl
ret
mov
jmp
pushf
jmp
xchg
push
push
pushl
ret
xchg
push
pushf
pushl
ret
jmp
pusha
nop
pushf
push
mov
push
xchg
movsbl
not
pop
not
mov
pusha
movb
pushf
push
mov
push
lea
jmp
push
pushf
pusha
lea
mov
xchg
pushf
pushl
movb
movw
pushl
ret
xchg
movw
movb
pushl
ret
mov
push
mov
call
pushf
xchg
pop
mov
call
xchg
movb
pushf
pushl
ret
push
nop
jmp
call
lea
call
mov
push
call
nop
mov
push
call
mov
push
lea
call
mov
pushf
push
mov
mov
jmp
pushf
jmp
xchg
mov
pushf
pushl
ret
push
xchg
movb
mov
movb
pushl
ret
pushf
call
xchg
push
pushf
pushl
ret
pushf
call
jmp
pushf
call
cmp
mov
call
mov
jmp
lea
push
xchg
push
pushf
pushf
pushf
pushl
ret
lea
jmp
call
pushl
push
pushf
xchg
call
jmp
lea
pushl
movw
xchg
mov
pushf
pushl
ret
mov
pushf
push
pushf
mov
movw
lea
jle
pusha
pushl
lea
pusha
jmp
cmc
data16
mov
call
pushf
call
lea
pusha
jmp
call
mov
pushf
movl
movb
jmp
lds
outsl
mov
pushl
call
movb
call
pusha
pushf
nop
push
mov
movzbl
mov
pushl
jmp
pushf
pusha
pushf
xchg
pushf
pushl
push
movb
pushl
ret
pusha
lea
jo
pusha
push
nop
pusha
jmp
movb
xchg
pusha
mov
pushl
pusha
call
mov
movzbl
push
mov
pushl
mov
jmp
mov
call
call
pusha
jmp
push
lea
pusha
jmp
not
movzbl
pushf
push
nop
pusha
movzbw
mov
push
jmp
nop
pusha
pushf
mov
jmp
call
lea
pop
mov
movw
pushl
mov
jmp
pushf
pushf
lea
movb
xchg
push
pushf
pushf
pushl
ret
jmp
call
pushf
jmp
pushf
xchg
call
mov
pop
mov
push
pushf
pushf
jmp
call
jmp
mov
push
push
lea
push
call
pushf
movb
xchg
mov
pushl
ret
push
nop
pushl
jmp
jmp
call
pushf
jmp
mov
push
pushf
mov
lea
push
pushl
xchg
mov
mov
pushf
pushl
ret
movl
mov
pushl
xchg
pop
jmp
lea
pusha
call
pushl
nop
pushl
movb
pushf
mov
lea
pushf
pop
movw
mov
call
xchg
pushl
pushf
movb
movb
pushl
ret
mov
xchg
pushf
pushl
pushl
pushl
ret
mov
jmp
call
push
pushf
pusha
nop
pushf
call
lea
call
pusha
nop
pushl
pusha
call
xchg
push
pushl
ret
xchg
pusha
movb
push
pushf
pushl
ret
mov
pushf
xchg
push
pushl
ret
jmp
nop
lea
jnp
pushf
mov
pusha
xchg
jmp
lea
call
mov
xchg
movb
movl
pushl
ret
push
pushf
lea
mov
xchg
mov
pushl
ret
pushf
xchg
pushf
pushl
pushl
ret
lea
jo
push
push
pop
mov
movzbw
mov
jmp
nop
pushf
jmp
call
pushf
movl
mov
movb
call
xchg
pusha
jmp
xchg
push
pushf
movl
pushl
ret
pusha
jmp
nop
jmp
call
push
mov
pushf
pushf
nop
call
call
movzbw
setns
mov
pusha
push
movb
jmp
xchg
movw
mov
pushl
ret
call
pusha
movw
mov
jmp
pusha
bswap
movsbl
call
pushf
mov
call
pushf
mov
pushf
pushf
lea
movb
pushf
xchg
mov
movb
pushl
ret
mov
xchg
push
pusha
pushf
pushl
ret
pushl
push
lea
mov
pushf
pushf
pusha
xchg
pushl
pushf
pushl
ret
jmp
push
pusha
push
nop
movb
mov
lahf
lea
setae
mov
mov
call
mov
pushf
mov
jmp
push
mov
jmp
pusha
call
jmp
jmp
mov
mov
call
push
pushl
pusha
mov
pushf
jmp
mov
call
jmp
call
lea
call
nop
push
lea
jb
pusha
xchg
pusha
movsbw
mov
pushf
jmp
pushf
movl
xchg
pusha
pushl
ret
xchg
mov
mov
pushl
ret
lea
pushf
call
movsbl
call
lea
call
call
movb
pushf
xchg
movzbw
movl
movzbw
mov
jmp
mov
call
call
nop
push
pushl
pushf
push
mov
lea
lea
mov
movb
pusha
mov
pushf
jmp
pusha
pushf
push
mov
call
pusha
call
lea
jmp
mov
jmp
mov
xchg
pushf
push
pushl
ret
call
lea
call
pushf
xchg
lea
movzbw
mov
push
mov
pusha
lea
pusha
call
pusha
pusha
push
call
lea
ja
pushf
xchg
push
pushl
pushl
ret
mov
push
pushf
lea
jmp
call
pushf
pusha
nop
pusha
movb
pushf
pushl
mov
lahf
jmp
jmp
pushf
call
call
call
mov
lea
jae
pusha
pushf
movb
mov
pusha
pushl
pushl
push
lea
call
nop
pusha
mov
pushl
seto
not
mov
mov
pusha
mov
jmp
movsbw
not
jmp
mov
mov
jmp
pushf
mov
pop
mov
call
mov
lea
jb
not
movsbw
mov
jmp
call
xchg
movw
movw
pushl
ret
mov
call
jmp
nop
pushf
jmp
mov
nop
movb
movw
movw
pusha
xchg
call
push
pushf
pushf
nop
pusha
mov
movw
call
lea
push
xchg
push
push
pushl
pushf
pushl
ret
xchg
movb
movb
mov
pushl
ret
mov
movzbw
mov
push
call
xchg
pushf
pushl
ret
mov
movzbw
mov
jmp
push
jmp
xchg
call
lea
jns
xchg
pushf
pushl
ret
push
pushf
nop
push
mov
jmp
xchg
jmp
call
jmp
lea
jnp
lea
call
call
pushf
nop
push
mov
lea
push
mov
call
jmp
pushf
xchg
pushf
movw
movb
pushl
ret
xchg
push
pushf
pushl
ret
pushf
lea
pushf
call
pushf
mov
xchg
mov
pushf
pushf
pusha
pushl
ret
lea
jl
pusha
mov
movb
pusha
mov
movb
lea
mov
push
movw
xchg
movw
mov
push
pushl
ret
jmp
daa
xor
and
fwait
xor
shll
mov
pushf
xchg
pushf
pushl
ret
pushf
lea
movl
xchg
push
push
pushl
ret
pusha
mov
pusha
mov
mov
pushf
pushf
mov
pushf
lea
push
xchg
movb
movw
mov
mov
pushl
ret
push
xchg
pushl
movb
pushf
push
pushl
ret
nop
pusha
mov
movzbw
not
mov
lea
mov
jmp
movb
call
jmp
nop
jmp
movb
lea
jmp
push
nop
call
pushf
movw
pusha
nop
pusha
jmp
pusha
xchg
jmp
pusha
lea
jp
pusha
nop
jmp
pusha
nop
call
pusha
push
call
pusha
call
pusha
push
nop
call
mov
mov
jmp
movb
lea
movw
xchg
movb
movw
mov
movb
pushl
ret
jmp
mov
call
lea
jmp
call
pusha
pushf
xchg
mov
push
pushl
pushl
pushl
ret
call
int
push
mov
push
mov
call
pusha
jmp
mov
movsbw
bswap
push
mov
pushf
pushf
mov
movb
mov
pushf
call
push
mov
movb
mov
call
pushf
pusha
nop
jmp
pushf
mov
mov
movb
mov
push
jmp
mov
pushf
nop
mov
jmp
pusha
pusha
xchg
pushf
pushl
ret
xchg
mov
jmp
pusha
pusha
push
nop
pushf
movb
xchg
not
pushl
pop
movzbw
mov
call
mov
jmp
jmp
xchg
lea
lea
pushf
mov
push
mov
movb
mov
call
movsbw
jmp
jmp
sets
nop
setge
cwtl
pop
pusha
call
pusha
call
xchg
call
push
nop
jmp
call
movb
call
xchg
push
pushl
pushl
ret
call
mov
jmp
pushf
pushf
jmp
mov
xchg
pushf
movb
movw
push
pushl
ret
mov
call
movb
xchg
pushf
pushl
ret
jmp
call
mov
jmp
pushf
push
nop
pushf
pushf
mov
push
mov
pusha
pushf
movb
pushf
mov
mov
lea
call
xchg
movb
pushl
ret
call
pushf
jmp
pushf
lea
jmp
lea
call
call
lea
jmp
movb
lea
movb
xchg
mov
pushf
push
pushl
ret
xor
push
rolb
add
cld
and
add
fwait
pop
mov
inc
and
out
call
pushf
lea
pushf
jmp
pushf
nop
pushf
jmp
call
mov
xchg
mov
pushl
ret
mov
call
jmp
nop
pusha
mov
pushf
push
mov
pusha
movb
call
call
jmp
jmp
call
lea
jmp
jmp
jmp
cmp
aam
add
lret
and
add
lock
call
mov
pusha
call
push
pusha
nop
movsbw
not
mov
movb
push
call
pushf
pushf
pusha
nop
call
lea
lea
jge
pusha
xchg
push
push
pushl
ret
xchg
movzbl
lea
push
mov
call
xchg
mov
pushl
ret
pushf
pusha
jmp
pusha
jmp
movb
mov
jmp
aas
jecxz
les
and
pusha
pushl
ret
xchg
pushl
pusha
mov
pushf
mov
mov
pushf
pushl
lea
jmp
xchg
lea
jg
mov
jmp
xchg
mov
pushl
ret
pushf
pushf
lea
jmp
out
es
nop
pusha
movb
pushf
xchg
push
movsbl
bswap
mov
pushf
pushf
mov
push
pushf
lea
jmp
xchg
push
pushl
ret
pusha
nop
pusha
push
pushf
jmp
mov
mov
mov
lea
ja
pusha
lea
pushf
mov
xchg
push
pushf
pushl
ret
call
jmp
pushf
xchg
pusha
pushl
ret
jmp
jmp
pusha
pushf
nop
call
xchg
pushf
pushl
ret
pushf
nop
pushf
pusha
call
pusha
mov
pusha
jmp
xchg
mov
mov
pushl
ret
jmp
call
nop
pushf
call
pusha
push
pushl
nop
mov
pushf
push
pushf
xchg
pushf
call
push
mov
pushf
push
lea
push
xchg
pushf
mov
mov
movb
pushl
ret
pop
mov
mov
pushf
mov
mov
pushf
push
pushl
lea
movb
xchg
movb
pushf
pushf
pushl
ret
lea
pushl
xchg
pushf
pushl
ret
jmp
pushf
jmp
push
movb
nop
pusha
xchg
mov
jmp
xchg
mov
pusha
movb
pushl
ret
nop
pushf
pushf
mov
push
xchg
not
lahf
cwtl
pop
mov
pushf
pushf
push
mov
jmp
call
push
pusha
pushf
lea
jmp
push
jmp
pusha
lea
movb
jmp
lea
ja
nop
jmp
call
adc
test
add
call
mov
call
call
push
nop
push
mov
bswap
push
mov
call
mov
movzbw
nop
pusha
mov
not
pop
mov
pushl
jmp
movb
pushf
xchg
lea
mov
jmp
in
cmp
je
add
mov
cmpsl
in
jl
insb
and
jmp
call
jmp
pushf
jmp
mov
xchg
setle
mov
lea
jge
push
mov
pusha
pushf
push
jmp
lea
js
push
xchg
pushf
pusha
pushf
pushl
ret
nop
pusha
push
call
mov
pushf
mov
movzbl
pushf
mov
call
jmp
call
xchg
push
push
pushf
pushf
pushl
ret
call
push
movb
pushf
mov
pushf
pushf
movb
lea
mov
xchg
push
mov
pusha
pushl
ret
push
push
pusha
nop
jmp
lea
pushf
xchg
movw
push
pushl
ret
lea
lea
jno
push
pushf
xchg
push
pushl
push
pusha
pushl
ret
lea
push
mov
xchg
pushf
push
push
push
pushl
ret
xchg
mov
movsbw
not
mov
mov
jmp
xchg
mov
pushl
ret
mov
xchg
movb
mov
movl
pushl
ret
lea
jmp
movb
mov
jmp
seto
mov
pusha
jmp
mov
movb
mov
movb
call
pop
mov
movb
pusha
mov
push
jmp
call
pusha
pushf
pushl
call
pushf
push
lea
movw
xchg
pushf
pushf
movb
pushf
pushl
ret
call
pusha
nop
mov
pushf
jmp
call
xchg
movl
pushl
ret
xchg
pushf
pushf
pushl
push
pushl
ret
pusha
pushl
xchg
push
pushl
ret
movsbl
mov
nop
bswap
movsbw
pop
pushf
pushf
xchg
pusha
pushf
push
pushf
xchg
jmp
xchg
push
movb
mov
push
pushl
ret
call
xchg
movsbw
mov
movw
movb
pushf
movw
mov
call
movb
push
mov
call
jmp
xchg
pushl
pushf
pushf
push
pushl
ret
xchg
pushl
pushl
movw
pushl
pushl
ret
pushf
pusha
nop
pusha
jmp
lea
call
jmp
pushf
lea
push
pushl
jmp
pushf
movw
pushf
nop
push
call
xchg
jmp
cmp
aam
mov
call
not
seto
nop
movsbw
setae
bswap
pop
call
push
push
lea
call
pusha
nop
pushf
call
xchg
pushf
push
movb
push
pushl
ret
pusha
movb
xchg
pushf
mov
mov
push
mov
push
push
jmp
pusha
nop
jmp
lea
jno
pushf
xchg
pushf
push
mov
movw
pushl
ret
push
xchg
movsbw
mov
pushl
mov
movl
call
xchg
movl
pushl
ret
movb
lea
movb
pushf
xchg
mov
movl
mov
mov
pushl
ret
pushf
pushf
pushf
mov
mov
mov
bswap
bswap
mov
lea
ja
push
mov
lea
jg
pushf
lea
call
call
lea
jae
push
lea
pushf
pusha
xchg
mov
push
pushl
ret
mov
pushf
not
push
mov
mov
pushf
mov
pushf
lea
call
mov
jmp
jmp
mov
mov
mov
jmp
lea
push
mov
mov
call
pushl
lea
pushf
pushf
jmp
push
call
jmp
mov
lea
lea
mov
pushl
call
nop
jmp
push
push
pusha
call
call
call
mov
push
call
mov
movzbw
bswap
jmp
xchg
call
xchg
push
pushl
ret
push
pusha
pushf
nop
jmp
xchg
pushl
pushl
ret
lea
push
pushl
call
mov
not
pop
mov
mov
jmp
nop
pushf
movw
pusha
xchg
call
mov
pusha
call
mov
push
pusha
mov
lea
jg
xchg
call
pusha
call
push
jmp
lea
mov
xchg
push
push
pushl
ret
jmp
lea
pusha
movl
xchg
pushf
pushf
pushl
ret
pusha
push
nop
jmp
push
jmp
pusha
mov
pusha
pushf
call
call
jmp
pushl
lea
jmp
mov
lea
pushf
movl
xchg
pushl
pushl
ret
pushf
jmp
pushf
lea
call
pushf
pushf
mov
xchg
push
push
pushl
pushf
pushl
ret
mov
lea
pushf
mov
xchg
pushf
pushl
movw
pushl
ret
pusha
xchg
mov
pushf
push
pushl
ret
lea
nop
movzbl
pop
jmp
jmp
nop
pusha
call
lea
mov
mov
movb
push
pushl
mov
movb
lea
movl
call
push
lea
lea
jne
push
xchg
pushf
pushf
pushl
ret
mov
pushl
push
lea
mov
mov
xchg
pushf
movl
pushl
ret
lea
mov
jmp
xchg
pushf
pushl
pushl
movb
pushl
ret
mov
pusha
bswap
pop
mov
jmp
pusha
lea
push
pusha
push
call
nop
movb
pushf
call
pusha
movsbw
nop
jmp
jmp
xchg
pusha
seto
pop
not
mov
call
xchg
pushf
pushl
pushl
ret
jmp
nop
push
mov
pushf
mov
pushf
jmp
jmp
mov
mov
mov
lea
movb
movb
mov
pushf
xchg
pushf
movb
pushf
mov
pushl
ret
call
lea
jmp
lea
call
push
xchg
push
pushf
pushf
movb
pushl
ret
push
mov
call
jmp
pusha
mov
mov
nop
jmp
lea
pushl
push
mov
xchg
mov
mov
movb
mov
pushl
ret
xchg
movsbw
mov
jmp
lea
pusha
mov
xchg
push
pushl
ret
call
mov
call
push
mov
call
push
mov
movzbw
mov
not
movsbw
mov
call
pop
sbb
xchg
pop
add
pusha
movb
mov
call
jnp
ds
sub
cmp
mov
pushf
call
xchg
movw
mov
movb
pushl
ret
call
xchg
movw
mov
pushl
ret
pushl
lea
jmp
pushf
lea
jle
push
mov
movw
push
lea
call
mov
jmp
call
mov
pusha
mov
pushf
pushf
lea
call
pushf
pusha
nop
movb
mov
jmp
pushf
lea
pushf
call
xchg
movb
pushl
pushl
ret
movb
pushl
mov
xchg
movb
pushf
pushf
pushf
pushl
ret
pushf
mov
movzbl
mov
push
call
xchg
push
pushf
pushl
push
pushl
ret
pushl
jmp
push
nop
call
movb
lea
pusha
jmp
mov
pushl
mov
pushf
pushl
lea
jmp
jmp
push
jmp
xchg
movzbw
pop
push
pusha
mov
movb
jmp
movl
call
pushf
push
nop
pushf
xchg
pop
mov
movzbw
mov
pushf
call
xchg
pushl
pushl
ret
call
xchg
push
not
jmp
call
mov
push
call
jmp
jmp
pusha
pushf
pusha
nop
mov
call
mov
call
push
pushf
pusha
nop
pushl
call
pushf
movw
mov
mov
mov
call
pushf
push
lea
pusha
push
call
call
xchg
jmp
movzbw
push
movzbl
mov
nop
lea
mov
mov
pusha
xchg
pushf
push
movw
pushl
xchg
call
jmp
lea
call
movw
xchg
pushf
push
pushl
ret
call
pushf
lea
call
pushf
xchg
mov
call
xchg
pushl
pusha
pushl
ret
mov
lea
movzbl
mov
pusha
mov
movw
jmp
jmp
mov
xchg
mov
mov
pushl
ret
jbe
pushf
pusha
nop
pushf
mov
call
nop
push
jmp
mov
pusha
lea
mov
pushl
push
xchg
movb
pushf
mov
pushl
ret
call
movb
nop
jmp
mov
call
pusha
nop
call
pusha
mov
lea
mov
push
jmp
xchg
movb
pushl
ret
pusha
movl
nop
pushf
jmp
jmp
pushf
mov
jmp
movb
xchg
movl
pushl
ret
lea
pushf
lea
jbe
xchg
pusha
pushl
ret
xchg
pusha
pushl
ret
jmp
not
movsbw
call
movb
nop
call
pusha
pushl
call
pushl
call
mov
pusha
jmp
lea
jmp
xchg
call
pushl
xchg
pushf
movb
pushf
pushl
ret
lea
jo
pushf
mov
lea
pushl
call
pusha
push
lea
jb
pushf
nop
call
lea
mov
push
call
mov
mov
pushf
push
movw
lea
lea
jno
push
pusha
xchg
pusha
pushl
ret
mov
pusha
nop
push
mov
not
push
pop
mov
pushf
jmp
call
pushf
pusha
nop
call
lea
jle
mov
pushf
pushf
lea
jmp
cwtl
setp
mov
call
call
pusha
pusha
movw
lea
call
jmp
pushl
mov
pushf
mov
jmp
pushf
xchg
pushf
pushf
pushf
pushl
ret
pushl
pusha
xchg
movb
pushl
ret
pushf
push
nop
movb
call
xchg
mov
pushl
ret
push
mov
movb
jmp
pushf
pushl
nop
movb
pushf
xchg
movsbw
mov
call
lea
mov
pusha
lea
jbe
mov
pusha
lea
call
movw
xchg
pushf
push
jmp
lea
jmp
movb
push
xchg
pusha
pushl
ret
push
xchg
movsbw
call
call
jmp
push
push
push
push
nop
push
push
call
pushf
mov
nop
mov
call
pusha
mov
nop
movl
call
pushl
mov
movsbl
pop
mov
movw
mov
push
jmp
mov
pushf
mov
lea
pushf
call
mov
bswap
mov
pusha
mov
mov
pusha
lea
jmp
nop
pusha
call
mov
call
mov
movb
movw
lea
pushf
xchg
pushf
pushl
ret
int
stc
sub
or
add
lea
mov
xchg
movw
mov
movw
movb
pushl
ret
push
mov
lea
mov
jmp
mov
mov
pushf
movb
pushf
lea
call
nop
push
lea
jle
pusha
xchg
bswap
movsbw
mov
push
mov
push
mov
lea
jmp
pushf
mov
mov
call
mov
mov
call
jmp
pushf
xchg
push
pushl
ret
mov
pushf
call
pushf
nop
push
xchg
not
lea
call
mov
movw
push
xchg
push
pushl
ret
mov
call
movb
pushf
pushl
xchg
push
pusha
xchg
bswap
jmp
pushf
jmp
pushf
call
mov
pusha
pushf
lea
jmp
pushl
mov
jmp
jmp
pushl
xchg
movb
pushl
ret
mov
xchg
mov
pushl
ret
pushf
lea
push
push
jmp
pusha
movb
nop
call
xchg
pushf
pushl
pushl
pusha
pushl
ret
xchg
push
pushf
pushl
pushl
ret
lea
call
push
pusha
mov
movb
mov
call
lea
call
nop
jmp
call
lea
mov
call
lea
push
movb
call
lea
jmp
mov
xchg
pusha
movzbl
movzbl
mov
push
mov
pushf
lea
call
pushf
nop
mov
pusha
xchg
movsbw
movzbw
movl
mov
push
call
push
xchg
movb
pushl
ret
xchg
cwtl
pushf
mov
jmp
lea
jmp
pushf
lea
jmp
xchg
movl
pushl
push
movb
pushl
ret
pusha
mov
nop
push
pusha
xchg
movzbw
call
pushf
mov
movsbw
not
movsbw
mov
pushl
mov
push
pushf
push
lea
push
call
jmp
lea
jl
pushf
pushf
nop
pusha
call
nop
mov
call
push
pusha
pusha
mov
call
pusha
movb
nop
pushf
jmp
pushf
mov
pusha
call
dec
int
shlb
adc
jmp
mov
pushf
movb
mov
jmp
jmp
jmp
xchg
pushl
pushf
pushl
pushl
ret
movb
mov
lea
lea
jo
lea
mov
push
pusha
mov
call
nop
jmp
call
pushl
pushf
call
push
call
mov
call
pusha
mov
jmp
xchg
lea
mov
push
movb
pushf
mov
jmp
pushf
mov
not
mov
movb
lea
jl
pusha
mov
jmp
jmp
lea
jmp
pusha
nop
pusha
call
pushf
mov
xchg
pusha
mov
pushf
movl
movb
mov
mov
pushl
jmp
xchg
push
pushl
ret
pushl
lea
pushl
call
jmp
mov
call
pusha
lea
mov
xchg
movb
pushf
push
pushf
pushl
ret
pushf
mov
lea
jo
mov
pushf
mov
call
jg
nop
pusha
pushf
mov
xchg
bswap
lea
jl
mov
push
movl
mov
pusha
lea
call
mov
push
call
xchg
push
mov
pusha
push
jmp
lea
je
push
mov
movw
lea
jne
push
lea
push
jmp
mov
call
jmp
jmp
push
pushf
mov
jmp
mov
jmp
xchg
pusha
pushl
ret
lea
movl
pushf
pushl
call
nop
pushf
call
xchg
mov
push
push
movl
pushl
ret
jmp
lea
movl
call
movl
xchg
movb
mov
pushl
ret
jmp
movw
jmp
mov
lea
pusha
push
jmp
mov
pushf
pusha
lea
jnp
mov
call
nop
jmp
pushf
pushf
pushl
nop
pushf
pusha
jmp
mov
call
pushl
xchg
mov
pushf
movb
pushl
pushl
ret
mov
xchg
movb
pushl
ret
sete
call
xchg
pushf
mov
mov
mov
pushl
ret
lea
movl
lea
ja
pushf
xchg
pushf
pushl
ret
jmp
lea
lea
jg
xchg
pusha
pushf
mov
pushl
ret
jmp
push
jmp
call
pop
mov
xor
nop
mov
jmp
mov
pushf
jmp
call
movzbw
mov
jmp
lea
mov
jmp
decl
popa
ds
nop
not
movsbw
pop
lea
pop
call
movb
lea
mov
mov
xchg
pushl
pushf
pushl
ret
nop
pushf
jmp
xchg
call
lea
pushl
pusha
pushf
pushf
xchg
pushf
movb
pushf
pushf
pushl
ret
pushf
jmp
mov
movzbl
movsbw
mov
mov
movb
pushf
mov
push
lea
pushf
lea
ja
pusha
xchg
push
pusha
pushf
mov
pushl
ret
lea
call
jmp
push
nop
pusha
xchg
pop
mov
pushl
mov
mov
call
jmp
nop
jmp
mov
pusha
pushf
movw
lea
jmp
lea
call
call
xchg
mov
pushl
ret
pushl
pushf
pushf
lea
pushl
pusha
pushl
xchg
pushf
pushl
ret
lea
nop
pusha
pushf
movzbw
mov
call
push
mov
pushf
mov
pushf
pusha
lea
pushf
pushf
jmp
jmp
call
movl
mov
movzbw
jmp
nop
mov
jmp
pushf
call
push
xchg
movsbl
pushf
not
mov
pushf
call
pushf
pushf
push
lea
pushf
pusha
jmp
pushl
movb
xchg
movw
pushl
ret
movw
movb
mov
jmp
pushl
pushf
mov
pushf
lea
mov
jmp
movw
pusha
movb
mov
pushf
movb
lea
lea
jge
pusha
pusha
pushl
xchg
pushf
pushf
pushf
pushl
ret
push
push
nop
push
call
movb
xchg
not
mov
jmp
pushf
movw
nop
pushf
pusha
xchg
pushf
lea
jmp
push
xchg
pushf
mov
push
movw
pushl
ret
rorl
fwait
or
xchg
mov
lret
mov
pushf
pusha
lea
pushf
push
push
push
xchg
movb
pushl
ret
call
xchg
pushf
push
push
mov
pushl
ret
lea
pushl
pushf
xchg
push
mov
pushl
ret
pushf
pushf
pushf
mov
pushl
pushf
lea
movb
call
mov
push
push
lea
jnp
pusha
xchg
pushf
pushl
call
call
push
jmp
mov
push
movb
lea
call
call
mov
lea
pushf
pusha
jmp
push
jmp
mov
push
jmp
pushf
call
call
pushf
pushf
mov
mov
pushl
jmp
pusha
nop
pushf
jmp
xchg
pusha
push
mov
pushl
ret
pushf
nop
jmp
lea
movb
jmp
push
call
lea
push
jmp
jmp
jmp
movl
pusha
mov
movsbw
push
pushf
push
mov
call
pusha
nop
pushf
call
pusha
push
mov
mov
lea
jae
lea
jmp
lea
mov
pushf
xchg
pushf
push
mov
push
pushl
ret
jmp
pushf
lea
push
pusha
xchg
push
push
pushf
pushf
pushl
ret
nop
pushf
call
call
movzbw
mov
lea
jbe
pusha
pusha
mov
mov
jmp
jmp
mov
jmp
pushl
nop
call
pusha
xchg
lahf
mov
mov
jmp
pushf
xchg
movb
movl
mov
movw
pushl
ret
xchg
movw
movb
push
pushl
ret
push
call
xchg
movw
movsbw
mov
pushf
pushf
mov
jmp
movb
xchg
pushf
push
mov
pushl
ret
push
xchg
movl
pushl
pushl
ret
push
movl
lea
jmp
push
movb
nop
jmp
lea
mov
mov
xchg
mov
pushl
ret
call
movb
lea
pushf
xchg
push
movb
movb
pushl
ret
call
mov
mov
push
push
pushl
lea
call
call
pushf
xchg
pushl
pushl
ret
pushf
pushf
nop
pushf
movb
mov
pushf
setp
not
mov
pusha
mov
call
movb
xchg
pusha
pushf
movw
mov
pushl
mov
mov
movl
mov
pushf
jmp
pushf
lea
jmp
mov
xchg
movl
lea
pushf
mov
lea
jge
pusha
mov
pushl
call
lea
jbe
nop
pushf
pushf
pushf
mov
pusha
pushl
movzbw
seta
mov
jmp
xchg
movb
push
pushl
pushl
ret
xchg
pushf
movl
pushl
ret
pushf
xchg
mov
movb
mov
pushl
ret
mov
jmp
jmp
pushf
pushf
nop
pushf
mov
pusha
jmp
cwtl
mov
jmp
pushf
lea
jle
mov
pusha
jmp
push
jmp
pushf
movb
pushf
lea
push
jmp
lea
pushl
xchg
movw
pushf
movb
pushf
pushl
ret
mov
lea
jnp
mov
jmp
mov
call
jmp
movl
xchg
push
pushf
pushl
ret
jmp
xchg
jmp
xchg
pushl
pushl
pushl
ret
nop
pushf
mov
xchg
pop
mov
pushf
call
mov
call
pushf
push
xchg
pushf
mov
lahf
push
lea
call
push
pushf
lea
jmp
mov
pushf
call
call
lea
pushf
pushf
movl
mov
xchg
pushf
pushf
pushl
ret
movw
call
call
pushl
pushf
xchg
pushf
pushl
ret
mov
jmp
mov
pushf
mov
call
mov
not
pusha
bswap
mov
call
lea
pushf
xchg
pushf
pushf
pushl
ret
pushf
nop
pushf
mov
mov
movsbw
jmp
nop
pushf
pushf
call
pusha
pushf
mov
bswap
movzbw
mov
call
pushf
pushf
call
lea
jo
push
mov
pusha
mov
pusha
pushf
lea
mov
jmp
jmp
nop
pusha
pushl
jmp
pushl
pushl
mov
call
push
mov
jmp
xchg
lea
mov
pusha
pushf
push
pushf
mov
lea
jg
pusha
pusha
mov
lea
lea
jo
xchg
pusha
push
pushl
ret
call
pushf
xchg
pushl
mov
pushf
pushl
ret
jmp
jmp
call
call
mov
lea
lea
jb
pusha
xchg
push
pushl
ret
call
pusha
pushl
mov
pushf
pushl
call
jge
pushf
push
nop
pusha
mov
movzbw
call
pushf
pushl
pushf
pusha
nop
pushf
call
pusha
nop
pusha
mov
bswap
jmp
nop
jmp
xchg
push
movb
pushl
ret
mov
push
pushf
lea
pushf
jmp
push
push
lea
jmp
jmp
xchg
call
jmp
call
push
nop
push
push
movb
mov
bswap
mov
push
call
xchg
pushf
pushl
pushf
pushl
ret
mov
call
pushf
movzbw
pop
mov
call
jmp
jmp
jmp
nop
pushl
call
mov
mov
movw
jmp
pushf
mov
movb
pushf
lea
pushf
call
jmp
mov
pushl
lea
jl
pusha
pushl
lea
jmp
movb
lea
call
pushf
pusha
nop
pushf
mov
mov
pusha
mov
pushl
pushf
mov
push
jmp
pushf
pusha
lea
movw
push
mov
jmp
xchg
pushf
pushf
pushl
ret
push
movl
lea
movw
pusha
xchg
push
movb
pushl
pushl
ret
mov
setnp
nop
setp
call
jmp
mov
movb
lea
movw
xchg
movb
pushl
ret
push
movb
nop
push
call
pushf
mov
movzbw
mov
movb
movw
pushf
mov
movb
call
push
lea
pusha
jmp
push
lea
jo
push
mov
call
pushf
push
nop
pushf
lea
jns
push
movzbl
lahf
mov
pushf
pushl
jmp
xchg
movb
mov
mov
pushl
ret
call
call
xchg
pushf
pushf
movb
pushl
ret
call
jmp
push
push
pusha
xchg
pushl
mov
pushl
ret
pop
mov
jmp
call
xchg
push
pushl
ret
pushf
xchg
jmp
pop
mov
call
jmp
call
movsbw
movzbl
movzbl
jmp
call
movb
pushf
lea
pushf
pushf
xchg
pushf
pushl
ret
call
mov
xchg
mov
mov
pushl
ret
lea
movw
xchg
push
pushl
ret
push
xchg
movl
pushl
ret
mov
movw
pushl
mov
jmp
lea
jmp
jmp
movb
xchg
lea
mov
pushl
jmp
push
mov
jmp
jle
pushf
pushf
nop
pushf
pusha
mov
lea
push
movsbw
pop
mov
mov
mov
pushl
call
mov
pusha
jmp
xchg
push
movl
mov
movw
pushl
ret
jmp
movl
mov
jmp
movl
lea
pushf
call
call
mov
pushf
pusha
lea
lea
ja
pushf
pushf
pusha
xchg
pushf
push
pushl
ret
jmp
pushl
jmp
call
pushf
mov
nop
movl
movw
push
mov
pop
mov
pusha
mov
pushf
pushf
lea
jbe
pushf
mov
push
pusha
mov
lea
pushf
lea
jg
pushf
xchg
pusha
pushl
ret
jmp
push
lea
pushf
xchg
push
pushl
ret
jmp
xchg
pushf
movb
pushl
ret
pushf
pusha
pushl
xchg
pusha
mov
call
jmp
bswap
movsbw
not
nop
mov
bswap
pop
push
jmp
xchg
mov
pushf
push
pushl
ret
lea
call
xchg
push
mov
mov
pushl
ret
jmp
xchg
movw
pushf
pushl
ret
xchg
pushf
push
pushf
pushl
ret
nop
jmp
push
pushl
pusha
call
jmp
xchg
pushf
mov
pushl
ret
jmp
xchg
pushl
push
pushl
ret
mov
movb
call
call
xchg
mov
movl
mov
movl
pushl
ret
call
jmp
mov
pushl
jmp
movw
mov
lea
push
mov
call
pusha
jmp
pushl
movw
lea
pusha
mov
call
nop
call
jmp
lods
into
ret
cmp
pushf
nop
pusha
pushf
mov
not
mov
movw
call
pusha
nop
push
pushf
jmp
jmp
jmp
pushf
setge
nop
pusha
movsbw
mov
pushf
pushf
xchg
pushf
pushf
mov
bswap
sets
mov
push
push
movb
mov
movl
lea
push
push
pushf
call
lea
js
xchg
push
movl
movb
push
pushl
ret
xchg
movb
pushl
ret
movb
mov
movzbl
movsbl
call
push
mov
pushf
call
xchg
movw
mov
movb
pushl
ret
setns
mov
pusha
xchg
pushf
mov
movzbw
jmp
lea
call
pushf
xchg
pushl
push
push
pushf
pushl
ret
call
xchg
movw
movb
pushl
ret
push
pusha
jmp
call
pusha
jmp
lea
pushf
xchg
pushf
mov
movl
mov
pushl
ret
pushf
push
lea
js
nop
jmp
pushl
call
push
push
movb
nop
pushf
jmp
xchg
pushf
movw
pushl
ret
pusha
jmp
push
call
call
mov
push
nop
pusha
pop
setbe
mov
pusha
pushf
pushf
xchg
push
jmp
movb
mov
pushl
call
jmp
push
push
pusha
push
lea
call
mov
lea
jmp
call
jmp
pushl
lea
mov
xchg
pushl
movb
pushf
pushl
ret
movb
call
pushf
mov
pushf
jmp
pusha
pushl
nop
pushf
pushf
xchg
lea
ja
mov
pusha
push
call
lea
jmp
jmp
jmp
movw
nop
pushf
push
xchg
lea
mov
pusha
push
mov
pushf
pushl
lea
movb
call
pushl
xchg
pusha
pushl
ret
pushf
nop
movb
pushf
call
xchg
mov
pushl
ret
xchg
push
pushl
pushl
ret
pusha
xchg
movzbl
pushf
call
jmp
xchg
pushl
movw
pushl
pushl
ret
mov
jmp
xchg
lea
pushf
call
call
call
mov
xchg
mov
pushl
ret
call
movw
xchg
push
lea
jnp
push
pusha
mov
mov
jmp
movsl
sub
in
mov
mov
cmp
stc
call
mov
call
pushf
push
xchg
pushf
movw
pushf
pushl
pushl
ret
mov
jmp
bswap
mov
pushf
push
movb
mov
push
pushl
lea
mov
xchg
push
push
pushf
push
pushl
ret
jmp
push
nop
jmp
mov
movb
xchg
push
pushl
pushf
pushf
pushl
ret
pusha
call
push
mov
jmp
dec
xor
jmp
add
pushf
pusha
push
nop
pushf
movb
call
push
nop
jmp
call
call
call
call
mov
mov
call
xchg
bswap
pushf
call
jmp
movb
lea
mov
xchg
mov
push
mov
push
pushl
ret
xchg
pushf
pushl
pushl
ret
jmp
jmp
pusha
mov
nop
call
jmp
pushf
movzbw
pushl
pop
mov
call
movzbw
pusha
pusha
mov
call
push
movb
xchg
pushf
pushl
pushl
ret
mov
pushl
not
sets
mov
pushl
mov
call
pusha
call
call
mov
jmp
pusha
movb
mov
push
jmp
call
nop
jmp
pushf
call
movb
lea
call
call
mov
call
jmp
mov
lea
jl
pusha
pushf
lea
pushf
pushf
jmp
lea
push
lea
jle
pushf
pusha
xchg
pusha
movb
movb
pushl
ret
pushf
xchg
pushl
mov
pushl
pushl
pushl
ret
pushf
nop
pusha
pusha
push
pushf
xchg
lea
pop
pushf
pushl
mov
mov
pushf
jmp
mov
pushl
mov
mov
jmp
jmp
movl
nop
call
pushf
mov
push
pushf
lea
call
pusha
pusha
xchg
mov
push
pushf
pushf
pushl
ret
call
movb
lea
jne
nop
js
pushf
mov
jmp
bswap
mov
pusha
call
push
pushf
mov
push
pushl
bswap
movzbl
mov
push
jmp
jmp
jmp
pusha
xchg
pop
lea
mov
jmp
call
pusha
pushf
push
pushf
lea
pushf
pushf
xchg
push
pushl
ret
xchg
pushf
pushl
mov
movb
mov
mov
movb
lea
call
xchg
pushf
pushl
ret
jmp
pushf
pushf
pusha
pushl
nop
jmp
xchg
pusha
pusha
push
pushf
pushl
ret
jmp
push
mov
pushf
call
mov
pushl
lea
movb
push
xchg
push
mov
pushl
ret
lea
jl
pusha
mov
xchg
movl
mov
push
push
pushl
ret
xchg
pushl
push
mov
movw
pushl
ret
nop
pushf
call
call
mov
movb
call
call
pushl
lea
jmp
mov
push
xchg
pushf
pushl
ret
jmp
sets
nop
movzbw
bswap
bswap
pop
call
xchg
mov
setnp
pusha
mov
push
mov
mov
lea
pushf
xchg
pushf
pushl
ret
mov
jmp
movb
mov
pusha
movsbw
mov
pushf
jmp
nop
movw
push
xchg
pop
not
not
mov
movb
movb
mov
movw
mov
call
jmp
call
call
call
jmp
lea
movw
xchg
pushf
movb
movb
pushl
ret
xchg
mov
movsb
or
mov
lea
mov
movb
xchg
mov
pusha
pushf
mov
pushl
ret
lea
mov
xchg
movw
pushf
pushl
pushl
ret
call
not
mov
pushf
pushl
call
call
push
xchg
push
mov
pushf
pushl
pushl
ret
call
pushf
call
push
push
mov
push
pop
mov
jmp
jmp
lea
call
mov
mov
pushf
movl
mov
movw
pushl
push
jmp
lea
jmp
jmp
push
push
pushl
lea
jno
nop
push
jmp
jmp
xchg
pushf
push
mov
lea
jo
pusha
pushf
mov
call
pushf
nop
call
xchg
pop
pushf
setne
pushf
mov
movb
mov
push
lea
js
pusha
lea
pushl
call
mov
push
movb
lea
pushf
push
movb
xchg
mov
pusha
pushl
ret
push
mov
pusha
call
mov
pusha
mov
jmp
pusha
jmp
mov
mov
movb
xchg
pop
setg
movsbw
mov
push
mov
pusha
jmp
xchg
movb
pushf
pushl
ret
pusha
lea
call
pusha
mov
pushf
push
lea
call
call
mov
pusha
xchg
jmp
call
pushf
xchg
pushf
movb
movb
pushl
ret
mov
xchg
pushf
movb
pushl
pushf
pushl
ret
call
movzbw
pusha
nop
movsbw
bswap
lea
mov
mov
jmp
pusha
call
mov
movl
mov
lea
jge
mov
pushf
lea
pushf
mov
pusha
jmp
jmp
mov
pushl
xchg
pushl
push
pushl
ret
int
imul
jmp
push
push
mov
push
mov
jmp
jmp
mov
jmp
jmp
jmp
jmp
pushl
jmp
movw
mov
mov
mov
pushf
movb
mov
mov
pushl
movw
lea
push
xchg
mov
push
pushl
ret
xchg
movb
pushl
ret
jmp
pushf
movb
call
nop
pushf
pushf
pusha
mov
push
lea
mov
push
pushf
mov
jmp
pushf
xchg
pushf
pushf
pushl
ret
pushf
lea
jb
xchg
push
pushl
ret
jmp
movw
pushf
pushf
nop
call
pusha
mov
call
pusha
movb
nop
push
mov
mov
pusha
call
mov
jmp
xchg
push
pushf
mov
pushl
ret
xchg
pushf
pushf
push
pushl
ret
pusha
mov
jmp
call
push
pushl
pusha
call
lea
pusha
xchg
pushf
pushl
ret
lea
jl
xchg
pusha
pushl
ret
pushf
call
jmp
lea
jbe
nop
jmp
pop
test
lahf
nop
pushf
xchg
call
jmp
push
xchg
call
jmp
push
lea
pushf
xchg
mov
push
push
pushf
pushl
ret
mov
call
jmp
mov
call
mov
call
push
mov
lea
ja
pushf
push
lea
movb
call
jmp
pushf
mov
movl
nop
pushf
jmp
sbb
int3
add
nop
movl
call
call
movw
xchg
movw
mov
pushl
ret
xchg
setp
movsbw
not
mov
push
mov
mov
pusha
push
lea
jmp
xchg
push
push
pushf
push
pushl
ret
jmp
jmp
xchg
mov
mov
pushl
ret
pushf
nop
movl
jmp
mov
pushl
lea
jmp
pushf
lea
call
pushf
push
pusha
nop
call
push
xchg
pusha
bswap
mov
pusha
pushf
pushf
mov
mov
lea
pushf
jmp
jmp
lea
lea
call
call
jmp
movzbl
mov
pushf
lea
jo
pusha
movb
mov
pusha
push
pushf
lea
mov
call
mov
mov
call
jmp
xchg
push
pushl
ret
pushl
lea
call
jae
dec
cmpl
movl
mov
mov
pushf
jmp
pusha
mov
lea
call
push
pushf
movw
nop
lea
jae
pushf
mov
mov
push
lea
movsbw
mov
call
pushf
pusha
nop
push
xchg
pushf
lea
mov
push
mov
call
movb
pushf
jmp
sub
add
loope
push
dec
xchg
pushf
movb
push
movb
pushl
ret
nop
lea
ja
push
pushf
movsbw
call
jmp
mov
pusha
call
pusha
pushl
nop
pushl
mov
movsbw
not
mov
pushf
call
lea
lea
lea
mov
push
mov
movb
push
mov
lea
call
lea
call
mov
pop
mov
pusha
mov
jmp
push
push
movb
xchg
pushl
push
pushl
ret
call
mov
jmp
pusha
pushf
lea
jae
push
nop
call
xchg
movw
mov
push
movb
pushl
ret
mov
call
jmp
not
bswap
jmp
pushf
lea
call
xchg
bswap
pushf
mov
jmp
call
lea
jns
pushf
xchg
pushf
pushl
ret
jmp
mov
pushf
jmp
mov
mov
pushf
movw
mov
push
movw
movb
lea
jmp
mov
lea
jmp
push
call
pusha
pusha
pushl
nop
push
movb
mov
bswap
movzbw
movsbw
bswap
mov
call
xchg
pushf
pushl
ret
jmp
jmp
call
pushf
pusha
nop
call
call
pushf
mov
jmp
xchg
pusha
pushf
mov
pushl
ret
jp
nop
push
mov
call
call
pusha
pushf
mov
pushl
lea
call
call
mov
movzbw
cwtl
mov
jmp
lea
nop
lea
pusha
mov
pushf
xchg
call
lea
jmp
pushl
xchg
lea
mov
pusha
jmp
mov
jmp
movb
xchg
movb
pushl
ret
lea
jbe
push
pushf
xchg
pusha
push
pushl
ret
movzbw
pusha
jmp
xchg
call
pusha
lea
call
push
mov
pusha
call
pusha
pushf
xchg
pushf
lea
jge
pusha
xchg
push
movsbw
mov
pusha
mov
pushf
mov
mov
jmp
pushl
push
pushf
xchg
pusha
pushl
jmp
nop
movl
xchg
bswap
not
mov
pop
mov
jmp
call
pusha
mov
pushf
pushf
push
lea
pushf
xchg
mov
pushl
pushf
pushf
pushl
ret
pusha
movb
pushl
nop
pushl
push
call
movb
movb
xchg
mov
mov
movb
mov
pushl
ret
ja
pusha
push
push
nop
mov
pushf
pushf
movb
xchg
movb
jmp
lea
mov
jle
pusha
pusha
pushf
mov
push
movb
jmp
pusha
xchg
movw
pusha
movl
pushl
ret
lea
call
nop
jmp
call
lea
jmp
jmp
jmp
sbb
or
mov
mov
pushl
push
lea
movb
pushl
xchg
pushl
push
mov
pushl
ret
push
mov
mov
nop
push
call
pushf
nop
jmp
push
nop
push
mov
movzbl
mov
pushf
push
movb
pushl
mov
pushf
lea
push
pushf
mov
pushf
xchg
pushf
pusha
push
pushl
ret
pop
movzbw
bswap
pop
call
push
mov
call
call
mov
movsbw
movsbw
mov
setno
mov
call
mov
movsbw
push
setle
jmp
mov
xchg
pushf
pushl
ret
push
lock
std
std
mov
in
adc
push
mov
add
pop
cs
jp
mov
in
mov
xor
add
out
and
test
rorb
ret
pusha
test
pop
and
xchg
push
mov
push
mov
jge
and
in
ror
jmp
adc
inc
push
xchg
lea
pop
jmp
jmp
pusha
mov
nop
pusha
mov
mov
push
call
mov
cwtl
call
mov
movl
movw
movb
lea
call
lea
call
movb
call
jmp
mov
push
lea
pushf
xchg
pushf
pushl
ret
call
movsbw
lea
mov
movb
movb
mov
pushl
jmp
jmp
mov
jmp
bswap
mov
pushf
mov
call
movw
mov
movw
call
pushf
xchg
push
pushl
push
pushl
ret
nop
push
xchg
pushl
mov
pushf
call
mov
pushf
jmp
pusha
jmp
mov
call
pusha
nop
pusha
mov
mov
pushf
pushl
xchg
mov
mov
movzbw
not
mov
pushl
call
mov
rolb
sub
xacquire
movb
mov
mov
movb
pushl
ret
xchg
pushf
push
pushl
pushl
ret
xchg
call
nop
movb
mov
mov
pushf
pushf
pushl
call
pusha
nop
push
pushl
xchg
not
mov
lea
js
mov
js
pusha
lea
movw
push
xchg
pushf
pushl
ret
lea
jg
push
pushf
xchg
movb
pusha
pushl
ret
jmp
xchg
pushf
pushl
pushl
pushl
ret
lea
jo
xchg
pusha
pusha
pushf
mov
pushl
ret
xchg
pushf
pushf
movw
pushf
pushl
ret
lea
pushf
call
lea
movb
call
pusha
nop
pushf
mov
pusha
movsbl
setae
movzbl
mov
call
push
call
xchg
movsbw
mov
call
jmp
jmp
call
lea
push
movsbw
pushf
mov
jmp
jmp
xchg
push
push
movb
pushl
ret
push
movw
jmp
lea
mov
mov
pushl
movw
xchg
pushf
pushl
ret
mov
pushf
pushl
xchg
movb
pushl
ret
pusha
pushl
nop
jmp
jmp
inc
cs
leave
pushf
pusha
pushf
push
mov
movzbw
mov
call
pushf
mov
jmp
push
movw
push
pusha
nop
push
mov
xchg
call
mov
jne
pusha
push
pushf
xchg
pushf
pushl
ret
nop
jmp
pushf
call
call
rcr
mov
pop
and
jmp
pushf
pushl
pusha
movb
xchg
pushf
pushl
ret
dec
faddl
inc
add
int
add
pushf
push
lea
mov
jmp
lea
movsb
mov
jmp
xchg
pushl
pushf
push
pushl
ret
jmp
mov
push
mov
xchg
pop
not
movzbw
mov
pusha
jmp
mov
pushf
push
push
pushf
lea
pushf
xchg
mov
pushl
ret
push
mov
movzbw
bswap
mov
call
movb
lea
mov
mov
call
lea
call
lea
call
jmp
call
pushf
movb
pusha
nop
push
call
pusha
pushf
xchg
movw
pushl
ret
xchg
mov
mov
pushl
ret
push
lea
call
pusha
mov
jmp
xchg
mov
mov
push
mov
pushl
ret
jmp
lea
jo
push
nop
pushf
pusha
jmp
pushf
pushf
xchg
movb
mov
push
mov
push
mov
call
xchg
pushf
push
pushl
ret
mov
call
mov
call
lea
pusha
jmp
call
movb
jmp
lea
call
call
pusha
push
pushl
mov
xchg
push
pushf
push
pushl
ret
mov
mov
pushf
call
xchg
pop
mov
pusha
mov
mov
movb
mov
jmp
pusha
mov
xchg
movw
pushl
ret
jmp
lea
movb
call
jmp
movw
jmp
call
mov
mov
pushf
mov
lea
pushf
xchg
movb
pushl
pushf
push
pushl
ret
push
pushf
mov
pusha
call
xchg
pop
mov
lea
js
pushf
mov
call
call
jmp
xchg
mov
movw
pushl
ret
push
lea
push
xchg
pushf
pushl
movb
pushl
ret
xchg
movb
push
pushl
ret
pop
bswap
mov
jmp
pusha
pusha
pushf
movsbl
nop
lea
jns
not
pushf
mov
mov
pushl
call
nop
pusha
mov
lea
je
bswap
mov
call
pushf
movb
lea
mov
xchg
pusha
pusha
pushf
pushl
ret
lea
mov
push
mov
jmp
pushf
xchg
mov
pushl
pushl
pushf
pushl
ret
pushf
pushf
xchg
push
pusha
pushl
ret
pusha
call
nop
call
pushf
xchg
pushf
pushf
pushl
ret
mov
pushf
pushf
call
pop
lea
mov
jmp
call
pusha
nop
jmp
movl
lea
jmp
nop
pusha
pusha
xchg
pushf
mov
mov
mov
jmp
push
jmp
call
pushf
pusha
nop
mov
xchg
movw
pop
not
mov
pushf
mov
jmp
mov
jmp
xchg
push
pushl
ret
call
mov
jmp
push
xchg
push
push
pushl
ret
mov
pushf
movzbw
movzbw
mov
movb
lea
jle
mov
jmp
nop
movb
mov
mov
push
cwtl
setge
mov
pusha
pushl
call
mov
jmp
pushf
movb
lea
pushf
push
pushl
lea
jae
xchg
pushf
push
movb
pushl
ret
jmp
lea
pushf
jmp
pushf
mov
jmp
push
nop
jmp
xchg
mov
mov
movb
pushl
ret
call
pushl
lea
pusha
jmp
pushl
call
mov
call
call
call
lea
call
mov
jmp
jmp
xchg
not
movsbw
not
mov
mov
mov
jmp
call
call
pushf
pusha
movb
xchg
pushf
pushf
pushl
ret
xchg
pushf
jmp
lea
lea
jb
push
push
xchg
pusha
pushl
ret
jmp
xchg
movb
mov
movb
movb
pushl
ret
lea
bswap
nop
push
mov
call
xchg
mov
pushl
ret
call
movw
lea
jmp
call
call
pushl
xchg
movb
pushl
ret
movb
pushf
lea
pushl
jmp
nop
push
pushf
pushf
pusha
mov
push
not
mov
jmp
pusha
movsbw
nop
movsbl
jmp
xchg
push
mov
mov
pushf
pushl
ret
push
jmp
xchg
pushf
movb
pushl
ret
mov
pushf
movb
pushf
mov
lea
pushf
xchg
push
pushl
movb
pushl
ret
push
pusha
xchg
call
mov
pusha
push
lea
movw
movl
call
xchg
pushl
mov
push
jmp
mov
jmp
mov
movw
pusha
pushf
jmp
pusha
lea
jmp
mov
lea
movzbw
movsbw
mov
mov
mov
mov
push
jmp
pushf
movzbw
nop
lea
mov
jmp
pushf
push
nop
jmp
lea
push
xchg
pushf
mov
movl
movw
pushl
ret
pusha
mov
pushf
mov
mov
lea
pushf
xchg
push
mov
movb
mov
pushl
ret
nop
jmp
pusha
nop
jmp
lea
ja
pusha
pushf
mov
jmp
pushf
pushf
movl
nop
movb
movw
jmp
pushf
movl
mov
nop
push
xchg
not
bswap
mov
pushf
pushf
jmp
nop
pusha
call
lea
mov
push
jmp
lea
jle
mov
ja
pusha
push
lea
movb
xchg
pushl
pushl
pushf
pushl
ret
nop
call
pushf
xchg
movw
pushf
movb
pushf
pushl
ret
push
jmp
xchg
bswap
pop
mov
call
mov
mov
push
lea
call
lea
jne
mov
pusha
pusha
jmp
mov
movzbw
mov
pushl
movw
mov
push
pushf
call
call
push
movb
nop
pusha
push
mov
xchg
movsbw
pop
call
xchg
push
pushl
ret
call
bswap
mov
jmp
push
pushl
nop
call
pusha
push
movb
jmp
pushf
nop
jmp
pusha
movb
pushf
nop
jmp
mov
mov
mov
setle
call
call
lahf
not
movsbl
pusha
mov
jmp
mov
nop
bswap
pushf
call
mov
call
pushf
mov
pushf
pushf
call
xchg
pop
movsbw
pushf
mov
pushf
jmp
xchg
movb
movb
pushl
ret
mov
movb
jmp
lea
push
pushl
jmp
movb
pushf
lea
call
mov
push
pushf
mov
mov
pushl
lea
call
xchg
pusha
push
movb
pushf
pushl
ret
call
pushf
mov
lea
push
pushf
call
lea
jp
push
lea
jmp
pop
mov
movb
pushf
pushf
movw
mov
movb
lea
push
jmp
push
jmp
jmp
repz
and
mov
push
movzbl
mov
push
mov
movb
lea
jmp
pushf
jmp
mov
call
lea
push
jmp
mov
call
mov
pushf
call
push
nop
lea
jge
pusha
pushf
push
mov
lea
pop
mov
call
jmp
pushf
push
movzbw
mov
pusha
pushl
push
mov
mov
push
call
pushf
call
movb
lea
pushf
call
jmp
pushf
pushl
xchg
push
xchg
bswap
mov
lea
je
mov
jmp
xchg
pushf
pushl
ret
movb
lea
movb
pushf
xchg
movb
pushf
pushl
pushl
ret
xchg
pushf
pushl
ret
jmp
mov
lea
jae
pusha
mov
pusha
pushf
movl
call
pushf
jmp
pushf
jmp
pusha
pusha
lea
call
jmp
pusha
jmp
mov
xchg
pushf
pushl
ret
mov
pusha
pusha
push
lea
call
push
lea
call
pusha
pusha
jmp
jmp
push
mov
pushf
push
lea
jg
lea
call
nop
push
jmp
pushl
xchg
pushf
movw
pushf
mov
pushl
ret
call
pushf
pusha
mov
call
mov
call
jmp
mov
movw
call
mov
pusha
movb
jmp
jmp
xchg
push
pushl
movw
pushf
pushl
ret
call
pusha
push
call
pushf
call
jmp
jmp
mov
call
jmp
lea
call
pusha
call
call
pushf
pushf
xchg
pushf
pusha
pushf
push
pushl
ret
movb
call
nop
jmp
mov
pushf
mov
push
movb
call
jmp
push
jmp
mov
xchg
movb
pushl
ret
lea
pushf
xchg
push
pushl
ret
pushf
nop
jmp
push
lea
jb
pusha
pushl
nop
pushf
call
lea
push
movw
pushf
xchg
push
movw
mov
mov
pushl
ret
call
pusha
xchg
movzbw
pusha
mov
jmp
jmp
movb
xchg
pusha
lea
jne
push
pusha
mov
movzbw
jmp
pushf
jmp
nop
jmp
movb
xchg
lea
jns
lea
pushf
lea
mov
pushf
movb
jmp
xchg
push
pushf
mov
pushf
pushl
ret
nop
mov
mov
pusha
jmp
lea
pusha
pushf
jmp
pushf
lea
push
xchg
mov
movb
pushl
pushl
ret
mov
call
sbbl
ds
pusha
lea
jmp
movl
call
mov
push
call
pushf
lea
call
push
xchg
mov
movsbw
mov
mov
call
pushf
pushf
call
lea
push
xchg
mov
pushf
mov
pushl
ret
pop
push
pusha
mov
xchg
jmp
xchg
movl
movb
pushl
ret
call
mov
call
pushf
pushf
push
jmp
lea
jmp
mov
call
jmp
pushl
xchg
pushf
movb
pushf
pushl
ret
xchg
push
mov
mov
pushl
ret
mov
pushf
mov
push
mov
pushl
lea
push
xchg
pushl
pushl
pushf
mov
pushl
ret
push
pushf
xchg
movb
pushl
ret
nop
pusha
lea
jb
pushf
pop
pop
jmp
jmp
pusha
xchg
mov
pushf
pushl
ret
lea
jo
push
pusha
pushf
pushl
mov
mov
jmp
lea
push
xchg
push
mov
push
pushl
ret
mov
push
mov
jmp
mov
mov
call
lea
mov
xchg
movb
pushf
movw
pushl
ret
nop
jmp
xchg
push
pushf
movb
pushl
ret
pushl
jmp
pushl
mov
mov
jmp
pushf
movb
pusha
nop
jmp
xchg
call
movb
mov
pushl
bswap
mov
mov
jmp
jmp
push
jmp
push
pushf
pushf
xchg
pusha
pushl
ret
push
pushl
pushl
lea
jg
nop
pusha
mov
pushf
movl
xchg
call
movb
pusha
mov
movb
mov
pushl
lea
jns
lea
call
lea
pushf
call
pushf
pushf
lea
pushf
pushf
mov
xchg
mov
pushl
ret
xchg
pushf
movb
pushl
ret
jmp
movb
lea
pushf
call
jmp
xchg
cwtl
mov
push
pushf
mov
pushf
lea
movw
pushf
mov
xchg
pushf
push
pushl
ret
jmp
mov
mov
mov
jmp
mov
xchg
mov
movb
pushl
ret
push
jmp
push
call
call
push
mov
call
push
xchg
push
movw
pushl
ret
xchg
movw
mov
movb
mov
pushl
ret
call
xchg
pushf
push
mov
pushf
pushl
ret
jmp
jmp
call
mov
pushf
mov
pushf
call
push
pushf
pusha
mov
nop
pushf
push
xchg
bswap
setns
pushf
mov
jmp
mov
bswap
mov
pusha
mov
movl
call
jmp
nop
push
pushf
xchg
not
pushf
mov
jmp
pushf
push
lea
jmp
call
movb
lea
pushf
call
jmp
jmp
push
mov
pusha
movb
mov
push
lea
jmp
xchg
pusha
mov
pushl
ret
jmp
pushf
nop
push
pusha
mov
call
push
call
push
call
jmp
pusha
mov
nop
pushf
xchg
pusha
movzbw
pushl
mov
jmp
pushf
pusha
movb
nop
jmp
not
bswap
nop
lea
pop
push
xchg
jmp
call
pushf
pushf
mov
pushf
jmp
sub
push
divl
pop
pushl
call
pusha
mov
mov
mov
jmp
pusha
pushl
mov
lea
jne
mov
call
call
call
pushf
xchg
push
pushf
pushf
mov
pushl
ret
call
call
jmp
lea
movw
jmp
jmp
jmp
call
mov
call
pushf
movb
pushf
mov
jmp
push
pushl
push
call
pushf
nop
pusha
jmp
mov
jmp
xchg
movb
mov
movw
pushf
pushl
ret
jmp
pushl
jmp
mov
push
lea
pusha
mov
xchg
mov
pushl
ret
mov
call
xchg
dec
lods
or
jmp
mov
pushf
mov
jmp
call
push
call
call
pushf
xchg
pushf
pushf
movb
pushl
ret
movb
pushf
lea
pushf
call
pushf
jmp
pushf
jmp
movb
push
jmp
movsbw
bswap
mov
pusha
call
movb
movl
mov
movsbw
not
mov
mov
pushf
mov
movb
jmp
push
jmp
lea
pushf
pusha
xchg
push
push
mov
pushf
pushl
ret
mov
push
lea
call
push
movb
lea
movb
call
jmp
mov
mov
call
pushf
mov
mov
lea
jmp
jl
push
pusha
nop
pushf
movb
pushf
mov
lea
not
pushl
bswap
mov
jmp
push
movb
xchg
pushl
push
push
pushf
pushl
ret
push
pusha
jmp
movb
pushf
pushf
mov
mov
lea
pushf
lea
jge
pushf
push
xchg
mov
pushl
ret
pushf
lea
pusha
pusha
jmp
jmp
jmp
jmp
pushf
pop
nop
movsbw
mov
pop
jmp
mov
push
movb
push
lea
pushf
movb
call
jmp
call
pushf
mov
xchg
pusha
pushf
pushl
ret
pusha
nop
movb
xchg
bswap
mov
call
push
mov
pusha
pushf
mov
movw
lea
pushl
jmp
mov
call
pushf
movl
call
pushf
jmp
xchg
movb
mov
pushl
ret
mov
push
mov
mov
pushf
mov
mov
pushf
jmp
mov
call
lea
jae
xchg
pusha
mov
pushl
ret
movb
lea
jl
mov
pusha
pushl
lea
pusha
push
pushl
jmp
call
mov
xchg
pop
call
push
pusha
push
xchg
pushf
mov
pushf
pushl
ret
mov
pusha
call
movb
push
pushf
mov
pushf
lea
mov
pushf
jmp
xchg
call
pop
jmp
xchg
push
pushl
ret
pushf
mov
mov
pushl
pushf
pushf
mov
push
jmp
push
lea
push
movb
mov
xchg
movb
push
pushf
pushl
ret
pushf
nop
call
jmp
xchg
pusha
pushf
movb
pushl
ret
pusha
push
pusha
call
pushf
mov
nop
pusha
movb
pusha
mov
movsbw
lea
mov
pushf
jmp
lea
movb
pushf
push
xchg
push
pushf
pushl
ret
jno
pusha
push
movw
nop
call
jmp
call
call
xchg
mov
pushl
ret
mov
jmp
call
call
jmp
push
movb
pushf
lea
mov
xchg
pushl
mov
push
pushf
pushl
ret
push
push
lea
jns
nop
push
pusha
pushl
push
xchg
call
movb
jmp
pushf
lea
call
push
xchg
movb
movl
push
pushl
ret
call
mov
pushf
call
push
pusha
nop
pushf
xchg
movsbw
pushf
mov
mov
lea
jnp
pushf
mov
pushl
pushf
lea
pushf
jmp
mov
jmp
movb
mov
lea
bswap
pusha
mov
jmp
push
movb
pushf
nop
jmp
pushf
push
jmp
nop
jmp
pushf
lea
jl
push
mov
mov
push
mov
push
call
pusha
pusha
pushf
nop
call
jmp
mov
call
setno
mov
pusha
nop
pushl
setp
mov
movb
push
mov
pushf
xchg
jmp
lea
jnp
movsbw
setae
mov
jmp
movl
jmp
pushf
pusha
nop
pushl
movb
xchg
not
mov
lea
mov
push
mov
call
pusha
pusha
jmp
pushf
mov
movb
call
pushl
mov
push
movw
jmp
pushf
pusha
jmp
bswap
nop
mov
lea
pop
pusha
xchg
pusha
push
mov
bswap
mov
movl
pushf
lea
jb
pushf
mov
pusha
pusha
mov
lea
movb
pushf
xchg
pushl
pushf
pushl
ret
mov
pusha
pop
mov
movb
push
mov
jmp
mov
xchg
pushf
lea
jnp
pusha
pushf
mov
sets
pushf
mov
mov
pusha
mov
mov
lea
call
jmp
call
cwtl
call
lea
call
jmp
pushf
mov
mov
push
pusha
lea
call
jmp
lea
pushf
jmp
xchg
movw
push
mov
pop
movsbl
mov
pushf
call
pushf
pushf
nop
jmp
pushf
call
jmp
mov
pusha
movb
mov
pushf
lea
call
pushf
xchg
not
pop
not
mov
call
push
call
mov
movsbl
mov
jmp
lea
pushf
xchg
push
pushl
ret
pushl
pushl
pushf
lea
push
jmp
pushl
lea
pushl
xchg
pushf
pushl
ret
xchg
call
mov
pusha
jmp
mov
pop
mov
push
pushf
call
nop
call
call
mov
push
jmp
call
pusha
pushl
call
jmp
mov
pushf
pushf
lea
mov
xchg
pushl
pushl
ret
lea
jmp
mov
mov
mov
jmp
pushf
jmp
lea
jne
push
mov
lea
jno
pushf
pushf
mov
lea
jmp
nop
pushf
xchg
pop
pushf
bswap
movsbl
mov
mov
mov
pusha
lea
jbe
push
pushf
lea
pushf
pushf
push
xchg
pushf
pushl
ret
call
pusha
movb
nop
pushl
pushf
xchg
lea
mov
pushf
mov
pushf
movw
lea
push
movw
xchg
pushf
pushf
pushf
movb
pushl
ret
lea
push
call
lea
pushf
jmp
lea
movb
xchg
pushf
mov
push
push
pushl
ret
jmp
mov
jmp
xchg
movsbw
pusha
call
mov
pusha
pushl
lea
movb
xchg
pushf
pushf
push
mov
pushl
ret
push
pusha
mov
push
pushl
pushf
pushf
lea
call
push
pushf
nop
mov
pushf
xchg
mov
pop
bswap
mov
pusha
lea
jg
pusha
pusha
mov
jmp
jmp
push
movb
jmp
mov
nop
pushl
mov
lea
pusha
mov
call
xchg
push
pushf
pushf
pushl
ret
jmp
mov
not
mov
pusha
push
push
movl
mov
push
mov
call
nop
mov
movb
mov
bswap
movzbl
movzbw
mov
pusha
mov
mov
mov
jmp
mov
xchg
movb
pushl
ret
pushl
lea
jmp
pushf
mov
pushf
jmp
pushl
push
mov
jmp
lea
mov
call
xchg
push
pushl
ret
call
jmp
call
pusha
pusha
jmp
mov
movb
lea
movw
mov
xchg
movw
pusha
push
pushl
ret
jecxz
push
push
add
xchg
add
cmpsb
or
add
adc
add
pushf
lea
call
bswap
lea
mov
nop
pushf
not
pushf
mov
jmp
jmp
push
xchg
pushf
pushl
ret
pushf
mov
call
jmp
pushf
xchg
push
pushl
pushl
ret
nop
jmp
call
pushf
xchg
setns
pushf
pusha
mov
pushf
push
mov
movw
push
call
pushf
mov
call
call
lea
mov
xchg
movb
pushf
movb
pushl
ret
nop
push
xchg
movsbl
mov
mov
pushf
pushl
call
mov
call
mov
push
mov
jmp
mov
jmp
push
xchg
pusha
movb
pushl
pushl
ret
lea
call
lea
jmp
push
pushf
push
nop
call
push
movw
nop
push
xchg
setno
bswap
bswap
mov
jmp
jnp
pusha
pushf
nop
call
pushf
mov
nop
push
xchg
lea
mov
pushf
movb
mov
call
pusha
pusha
xchg
jmp
push
xchg
movw
pushl
ret
pushf
pushl
pushl
call
jmp
push
movb
nop
movw
xchg
call
movb
pushf
call
mov
mov
jmp
pushf
xchg
not
lea
pusha
setns
mov
mov
mov
pushf
jmp
call
call
call
jmp
pusha
mov
push
lea
movb
xchg
movb
pushl
ret
mov
xchg
movb
mov
mov
mov
pushl
ret
xchg
movl
pusha
mov
mov
pushl
ret
movb
movl
xchg
movb
mov
mov
pushl
ret
movb
movb
mov
pushf
pushf
call
jmp
pushf
lea
movb
pushf
xchg
mov
pushf
push
pushl
ret
jmp
call
mov
push
jmp
push
pushf
nop
movb
xchg
push
mov
pushf
mov
lea
jo
pusha
lea
pusha
xchg
push
pushl
ret
call
nop
jmp
xchg
movw
pushf
mov
pushf
pushl
ret
jmp
jmp
pusha
call
jmp
jmp
mov
pusha
call
lea
jmp
pusha
jmp
mov
pushf
mov
lea
jmp
jmp
jmp
mov
nop
pushf
xchg
pop
bswap
mov
pushf
jmp
mov
jmp
pushf
not
bswap
mov
call
not
movsbw
mov
push
mov
pushf
pushf
pusha
lea
pushl
lea
jle
pushf
pusha
xchg
pusha
pushf
pushf
pushl
ret
xchg
pushf
pushl
ret
in
es
xor
ss
add
lea
call
xchg
jmp
pushf
mov
movsbw
push
not
pop
mov
push
mov
call
pusha
mov
pushf
lea
pushf
movb
xchg
push
pushl
ret
movb
pushl
pusha
xchg
mov
pushl
ret
xchg
movl
pushl
ret
mov
mov
mov
pushl
lea
pusha
jmp
pushf
call
push
push
mov
xchg
pushf
mov
pushl
ret
mov
bswap
pushf
pushl
pop
mov
jmp
call
pushl
pushl
call
xchg
pushf
push
pushl
ret
pushf
mov
nop
pushl
mov
bswap
movb
lea
mov
mov
jmp
push
jmp
movzbl
mov
call
call
lea
ja
push
mov
pusha
push
push
movb
lea
jmp
mov
mov
jmp
jmp
pusha
xchg
movw
push
pushl
ret
pushf
push
pushf
pusha
nop
push
call
xchg
pushl
pushf
pushf
mov
pusha
lea
jb
mov
mov
push
mov
push
pushf
push
lea
push
pusha
pushf
lea
jno
xchg
pushf
pushl
ret
call
movw
lea
pushl
movb
jmp
pushl
lea
pushl
mov
xchg
pushl
pushl
ret
jmp
jmp
pusha
nop
push
mov
movzbw
movsbl
lea
mov
call
pushf
pusha
nop
pushf
mov
pushf
movb
mov
pop
mov
mov
jmp
mov
call
jmp
pop
pusha
push
jmp
mov
movb
movw
pushf
lea
pushf
jmp
xchg
movl
pushl
push
pushl
ret
jmp
call
pushf
nop
call
setl
movsbw
movzbw
setg
mov
jmp
pusha
nop
pushl
push
pushf
jmp
mov
mov
push
jmp
jmp
pusha
nop
pusha
push
lea
jae
push
mov
not
mov
pushf
pusha
mov
push
call
mov
and
not
not
bswap
mov
pushl
jmp
xchg
movsbw
not
lea
bswap
mov
call
mov
lea
jg
pushf
mov
pushl
pusha
call
lea
pushf
xchg
pusha
push
movl
pushf
pushl
ret
call
call
mov
lea
push
movb
mov
xchg
pushf
mov
pushl
ret
cltd
ds
pushf
xchg
push
jmp
pushf
jmp
mov
mov
movb
lea
call
nop
pushf
call
pusha
pushf
nop
jmp
setne
call
pusha
pushf
nop
mov
movw
call
push
pushf
mov
pushf
call
push
nop
pusha
jmp
mov
push
and
pushf
xchg
movw
movw
mov
movb
pushl
ret
lea
jns
push
mov
call
pushf
mov
push
seto
setbe
mov
pushf
mov
mov
call
nop
pusha
pushf
xchg
bswap
push
lahf
jmp
call
lea
call
nop
pushf
pushl
xchg
movzbl
pop
mov
movb
mov
pushf
jmp
pusha
push
xchg
push
pushf
movb
pushl
pushl
ret
xchg
mov
movw
movb
pushl
ret
push
xchg
bswap
call
lea
pusha
call
mov
jmp
pushf
push
pushf
nop
jmp
pusha
push
nop
movw
xchg
lea
mov
call
xchg
push
pushl
ret
mov
jmp
mov
call
mov
jmp
call
pop
mov
pushl
movb
call
movb
call
pusha
xchg
jmp
lea
jne
xchg
pusha
pushf
movb
push
pushl
ret
xchg
call
xchg
pushf
push
pushl
ret
call
je
lea
pusha
xchg
pushf
pushl
ret
push
jmp
mov
pushl
movl
jmp
call
push
pusha
nop
pushl
lea
jg
push
mov
movzbw
pushf
mov
call
push
mov
movw
xchg
movsbw
lea
mov
call
mov
call
call
mov
jmp
pushf
nop
movb
pushf
pusha
call
pushf
pushf
push
mov
call
mov
lea
mov
mov
pushf
xchg
mov
mov
pushl
ret
push
nop
call
jmp
pusha
mov
jmp
pushf
jmp
pushf
mov
pushf
push
lea
pushf
xchg
push
movb
pushf
mov
pushl
ret
call
call
nop
pusha
push
mov
pushf
xchg
movzbw
call
mov
lea
movsbw
call
push
nop
jmp
nop
pusha
pusha
pushf
pushf
mov
jmp
mov
mov
lea
jmp
push
nop
movb
movl
xchg
pushf
setnp
mov
call
call
jmp
jmp
nop
mov
call
pushf
xchg
mov
pushf
pushl
ret
pusha
nop
mov
pusha
xchg
lahf
pop
push
movsbw
mov
push
pushf
movw
mov
jmp
mov
call
lea
call
lea
jo
mov
pushf
mov
pushf
lea
call
pushf
xchg
push
pusha
pushl
ret
movb
mov
movb
pushf
mov
movb
lea
movw
pushf
call
lea
call
push
xchg
pushf
mov
movw
mov
pushl
ret
pusha
jmp
jmp
nop
push
mov
call
mov
jmp
pushf
pusha
push
nop
call
jmp
lea
mov
xchg
movw
pushl
ret
call
jmp
ffree
popa
je
ds
add
pushf
pushl
movb
mov
bswap
movzbw
movzbw
mov
movb
mov
jmp
nop
movsbw
mov
pusha
pushf
pushf
jmp
xchg
not
pushl
movsbl
lea
mov
jmp
nop
jmp
lea
mov
jmp
fbld
imul
or
movsbl
mov
mov
jmp
jmp
mov
movb
xchg
pushf
mov
mov
pushl
ret
pushf
jmp
mov
push
push
call
jmp
push
pushf
nop
movb
jmp
push
push
nop
call
mov
jmp
jmp
mov
push
jmp
pushf
pop
mov
mov
pushf
pushf
mov
push
lea
pusha
push
xchg
movw
mov
pushf
pushl
ret
lea
pushf
pushf
jmp
push
jmp
pop
mov
call
mov
not
mov
jmp
xchg
pushf
pushl
ret
pusha
nop
push
pusha
mov
push
pop
not
pop
mov
call
call
jmp
push
lea
jle
xchg
pushf
pushf
pushl
ret
nop
movw
pushf
mov
bswap
setbe
push
not
mov
push
pushf
call
push
lea
pushf
push
push
xchg
pushf
pushl
ret
push
lock
std
std
daa
xchg
insl
xchg
dec
in
ret
into
out
mov
mov
pop
fdivl
xor
cld
pop
pushf
popf
jge
sbb
cmp
scas
aam
pop
roll
das
adc
test
push
lods
xchg
adc
inc
add
push
inc
xchg
in
xchg
push
out
mov
fnstsw
pop
adc
aad
enter
fmuls
pushf
cmp
push
nop
pusha
call
call
lea
push
call
xchg
push
pushf
pushl
ret
pusha
call
jmp
xchg
sets
setle
mov
jmp
pusha
nop
pushf
movb
mov
mov
pushf
not
not
mov
jmp
mov
lea
movb
call
mov
loope
call
pushf
push
call
movzbw
push
lea
mov
jmp
push
xchg
mov
pushl
ret
push
xchg
push
pushl
ret
jmp
mov
mov
pushf
lea
push
push
mov
xchg
pusha
movb
pushl
movw
pushl
ret
pushf
mov
pushf
nop
call
jmp
xchg
jmp
movb
pushl
xchg
not
mov
push
pushf
pushf
mov
pushl
jmp
pushf
lea
pushf
call
lea
jns
xchg
pushf
pushl
ret
lea
pusha
xchg
movb
pushf
push
pushl
ret
jmp
nop
jmp
call
mov
jmp
push
xchg
push
setp
pop
mov
mov
mov
call
xchg
not
mov
lea
jp
mov
jmp
pusha
pusha
nop
push
movb
pushf
call
nop
pushl
pushf
pushl
pusha
mov
lea
movsbl
movzbl
movsbw
mov
movb
mov
mov
call
mov
jmp
lea
jo
mov
pusha
movw
pusha
call
pushf
push
pushl
xchg
pushl
pushf
push
pushl
ret
jmp
xchg
mov
mov
pushl
ret
not
mov
call
jmp
push
pushf
xchg
push
mov
movb
pushl
xchg
pop
mov
pusha
pushf
push
push
mov
pushf
jmp
pushf
jmp
pushf
jmp
pushl
push
mov
movb
lea
jmp
xchg
mov
mov
mov
call
movzbl
pushf
lea
mov
call
push
call
pushf
xchg
movzbw
push
mov
jmp
call
mov
call
lea
pushl
call
mov
pushf
mov
jmp
pushf
call
movsbw
jmp
xchg
pop
mov
pushf
mov
pushf
pushf
lea
movb
jmp
jmp
jmp
push
jmp
call
nop
push
lea
mov
movsbw
mov
call
mov
pushf
pushf
lea
movb
xchg
movb
movb
pushl
pushl
ret
mov
pusha
pusha
bswap
nop
bswap
setl
bswap
movsbw
mov
call
pushf
lea
push
call
lea
call
pusha
call
jne
pushf
pushl
push
nop
call
lea
movb
xchg
pushf
mov
movw
pushl
ret
movb
pushl
mov
pushf
call
movb
mov
lea
jnp
lea
pusha
call
call
jmp
pusha
pusha
nop
call
movb
mov
jmp
pushf
lea
mov
pushf
pushf
call
jmp
jmp
pushf
mov
pushf
movb
lea
pushf
xchg
pushf
pushf
pushf
pushl
ret
push
pusha
xchg
push
mov
mov
pushf
mov
call
call
jmp
mov
pushl
movw
lea
movb
call
xchg
push
mov
push
pushl
ret
call
sbb
rcll
add
mov
add
mov
movb
jmp
pushl
mov
call
mov
pushf
jmp
js
push
nop
call
jmp
mov
movw
mov
pusha
jmp
nop
jmp
movsbw
movzbl
not
nop
movzbw
pop
call
jmp
jmp
mov
lea
mov
jmp
push
mov
mov
pushf
push
lea
jmp
push
call
jne
push
nop
push
mov
lea
pop
bswap
mov
push
mov
pushf
pushf
pushf
lea
pushl
call
mov
jmp
aad
mov
jmp
xchg
call
pusha
movb
nop
jmp
pusha
push
mov
lea
setl
mov
call
pushf
jmp
pusha
call
mov
mov
mov
mov
jmp
not
not
mov
jmp
lea
jbe
pusha
lea
call
nop
jmp
xchg
push
pushl
ret
push
push
nop
mov
jmp
push
pushf
xchg
not
mov
pusha
mov
mov
pushl
pushf
lea
push
pushf
xchg
push
pushf
push
pushl
ret
nop
not
mov
pushf
pushf
call
call
call
push
movb
jmp
pushf
nop
push
pusha
xchg
bswap
mov
pusha
lea
jnp
mov
push
pushl
mov
movb
lea
jmp
std
notb
add
in
jmp
adc
ds
call
push
mov
jmp
jmp
pushl
mov
movb
call
nop
movb
pushf
pusha
mov
call
movw
xchg
lea
mov
pusha
movw
mov
mov
call
movb
lea
jmp
mov
mov
mov
jmp
nop
mov
push
lea
mov
pushf
call
xchg
mov
pushf
mov
call
pusha
jmp
pusha
nop
pushf
movb
pushl
mov
lea
bswap
mov
pushf
mov
mov
call
lea
jmp
pushf
pushf
xchg
pushf
pushf
movb
pushl
ret
xchg
movb
movw
mov
movb
pushl
ret
pusha
push
pushf
lea
jmp
pushf
mov
jmp
jmp
pusha
mov
jmp
mov
push
mov
lea
jmp
mov
call
lea
jmp
lea
movb
call
jmp
jmp
xchg
mov
pushl
ret
call
movl
xchg
mov
movl
movw
pushl
ret
pusha
push
lea
mov
mov
pushf
call
call
xchg
pushl
push
pushl
ret
mov
bswap
not
not
mov
movl
mov
push
lea
jmp
lea
pushf
xchg
push
pushl
ret
push
lea
jmp
lea
jo
push
mov
movsbw
push
pusha
mov
pusha
mov
mov
movb
jmp
lea
call
mov
movl
xchg
movw
pushl
ret
lea
mov
call
push
call
call
mov
mov
lea
jbe
pusha
lea
movb
pushf
xchg
pushf
pushf
push
mov
pushl
ret
pop
setg
mov
jmp
push
mov
push
lea
pushf
jmp
nop
pusha
mov
lea
pusha
lea
mov
call
xchg
push
pushl
ret
pushf
lea
jp
pusha
push
nop
pusha
lea
jo
pushf
xchg
pusha
mov
call
call
movsbw
mov
jmp
nop
push
xchg
lahf
push
push
movsbl
mov
pushl
mov
call
pusha
pushf
nop
movl
push
call
movb
xchg
movsbw
pushf
pop
movsbw
mov
pushl
mov
call
lea
pusha
push
pushl
xchg
pushl
pushl
ret
pusha
nop
jmp
jmp
pushf
mov
movw
xchg
push
movb
pushl
ret
call
pusha
jmp
mov
mov
pushf
mov
pusha
pushf
call
xchg
mov
pushl
ret
push
lea
call
call
stc
mov
call
xchg
pushf
pushl
ret
jmp
mov
pusha
pushl
lea
pushf
pushf
xchg
mov
pushf
pushl
ret
xchg
jmp
mov
lea
pushf
xchg
pushf
pushl
ret
pushf
jmp
jmp
pushf
jmp
jmp
mov
pushf
mov
pushl
jmp
pushl
xchg
pushf
pushf
mov
call
jmp
pushf
lea
push
pushf
push
mov
xchg
pushf
movb
push
pushf
pushl
ret
push
lea
jnp
nop
pushf
pushf
push
xchg
pushf
pop
pop
not
mov
jmp
call
nop
call
mov
mov
movzbw
mov
jmp
pushf
xchg
pushf
push
push
pushl
ret
movsbw
jmp
mov
lea
jge
pusha
pusha
mov
lea
lea
jp
xchg
push
pushl
pusha
mov
pushl
ret
pushf
pusha
nop
call
xchg
movb
mov
pushf
pushl
ret
mov
pusha
pushf
call
lea
jmp
push
lea
jmp
not
call
pushf
jmp
pusha
pushf
pusha
nop
movl
push
push
call
xchg
setnp
setb
jmp
mov
lea
pusha
pushl
xchg
movl
pushl
ret
call
pushf
push
xchg
push
pushl
ret
mov
pushf
call
pushf
jmp
jmp
mov
push
pop
mov
movb
movw
pushl
mov
mov
pusha
push
pushf
jmp
push
mov
pushf
xchg
pusha
push
mov
pushl
ret
call
pushf
pushf
push
xchg
movb
pushl
ret
push
xchg
pushf
pushf
pushf
pushl
ret
pushf
nop
call
pushl
mov
pushl
push
call
pushf
lea
jp
pusha
push
nop
pushf
pushf
mov
pop
movsbw
push
mov
mov
call
nop
call
mov
pushf
mov
push
movw
lea
jmp
jmp
call
lea
movl
jmp
movw
mov
movb
jmp
pushf
nop
jmp
movzbw
nop
pushf
bswap
mov
jmp
pushf
nop
push
jmp
push
pushl
movw
xchg
mov
pushl
ret
pushf
movl
xchg
pushf
movb
pushl
ret
xchg
pushf
pushl
ret
call
and
mov
mov
movsbw
mov
pushl
pushf
call
mov
push
pushf
call
mov
xchg
add
pushf
pushf
xchg
pushf
push
pushf
pushl
ret
nop
pushf
pushf
mov
pop
bswap
mov
jmp
lea
pusha
xchg
movw
pushf
push
pushf
pushl
ret
jmp
sub
out
mov
pushf
pushl
movb
lea
mov
jmp
pusha
xchg
jmp
lea
mov
xchg
mov
mov
pushl
ret
pushf
pushf
xchg
push
push
pusha
pushf
pushl
ret
nop
push
call
mov
push
pushf
mov
call
lea
jmp
mov
and
xchg
call
jmp
xchg
lahf
mov
mov
mov
pushl
push
pushf
jmp
lea
pushf
pushf
call
push
push
nop
pusha
jmp
xchg
mov
movw
mov
pushf
pushl
ret
xchg
movzbw
lea
mov
call
nop
pusha
mov
jmp
call
push
movb
pushf
jmp
pushf
lea
ja
lea
pushf
pusha
xchg
pusha
push
push
pushl
ret
pusha
push
pushf
nop
jmp
nop
push
pushf
call
pushf
mov
pusha
lea
lea
jg
push
xchg
pusha
movw
pushl
ret
pusha
push
mov
jmp
xchg
pop
bswap
movzbw
mov
pushl
jmp
push
call
call
call
lea
call
lea
jmp
lea
mov
xchg
mov
mov
movw
pushl
ret
push
push
lea
pushf
xchg
movb
mov
pushl
ret
je
pushf
mov
push
nop
pusha
mov
call
pusha
jmp
pushf
pusha
pushf
nop
mov
lea
jle
pusha
pushf
mov
movsbl
jmp
call
call
call
push
lea
call
jmp
pushf
mov
call
pusha
mov
call
jmp
push
movb
lea
mov
call
mov
jmp
pushf
jmp
mov
xchg
push
movb
pushl
ret
call
push
movb
call
pushf
lea
movl
xchg
pushf
push
pusha
push
pushl
ret
push
nop
push
mov
pop
lea
mov
call
mov
bswap
movsbl
push
mov
call
pusha
nop
call
push
nop
pushf
pusha
jmp
lea
mov
mov
call
call
pushf
lea
pushl
mov
call
xchg
movb
mov
pushl
ret
xchg
pop
mov
mov
pushf
call
mov
pushl
pop
movsbw
call
pushl
push
movw
lea
call
xchg
movb
pushl
ret
mov
movb
pushf
jmp
jmp
jmp
pusha
mov
mov
lea
lea
jne
pusha
pushl
push
xchg
mov
pushl
ret
xchg
movl
pushl
ret
movw
lea
pushf
jmp
mov
movsbw
mov
jmp
xchg
mov
movb
mov
movb
pushl
ret
movw
lea
jnp
lea
je
pusha
xchg
pusha
push
pushl
pushl
pushl
ret
pushf
call
mov
push
pusha
xchg
pushf
pushl
ret
jmp
pusha
nop
pushl
not
mov
mov
lea
je
pusha
xchg
pushl
mov
pop
lea
bswap
mov
jmp
push
xchg
call
mov
jmp
mov
mov
xchg
jmp
jmp
pusha
nop
pusha
mov
pushl
pushl
xchg
call
push
nop
mov
movb
jmp
call
mov
push
lea
jmp
jmp
lea
jns
mov
pusha
pusha
movb
call
call
pushf
pushf
call
jmp
xchg
pushf
pushl
push
pushl
ret
xchg
lea
movzbw
mov
pushf
call
call
xchg
mov
mov
movb
pushf
pushl
ret
call
jmp
pushf
mov
jmp
mov
push
lea
call
push
lea
movb
call
pusha
pusha
jmp
xchg
movw
pushl
ret
xchg
push
mov
movb
pushl
ret
push
pushf
xchg
push
mov
mov
call
xchg
pusha
pop
movsbw
call
pushf
xchg
movb
pushl
pushf
pushl
ret
call
nop
lea
jno
pushf
movb
xchg
not
mov
call
call
lea
jmp
movsbl
cwtl
not
call
nop
lea
je
pushf
xchg
setns
bswap
call
pushf
push
xchg
pop
pop
call
aaa
xchg
into
jmp
pusha
mov
push
jmp
mov
pusha
xchg
pusha
mov
pushf
mov
call
push
xchg
movw
push
pushl
ret
pushf
movb
jmp
call
mov
mov
mov
lea
jmp
lea
pushf
lea
jle
push
xchg
push
movb
movb
push
pushl
ret
push
seta
mov
push
pusha
pushl
mov
jmp
jmp
push
lea
pushf
xchg
pushf
pushf
pushl
ret
mov
movb
lea
jnp
pusha
lea
jmp
xchg
push
push
movl
pushl
ret
mov
call
jmp
xchg
mov
pushl
pushl
ret
nop
pushl
xchg
push
pop
lea
mov
jmp
xchg
pushf
push
movb
pushf
pushl
ret
push
pusha
pushf
nop
jmp
lea
pushf
push
push
xchg
push
pushf
pushl
ret
xchg
jmp
xchg
pushf
pushf
pushl
ret
movb
call
xchg
pusha
mov
pushl
ret
movl
movzbw
lea
mov
movb
call
call
pushf
push
push
xchg
pushf
lea
pusha
lea
mov
jmp
pusha
pusha
call
mov
movb
pusha
lea
movb
call
xchg
bswap
call
mov
push
lea
call
setb
nop
lea
setnp
push
mov
pushf
xchg
pushf
pusha
pushl
call
movl
jmp
jmp
nop
call
movl
nop
lea
jo
pusha
mov
xchg
mov
mov
jmp
jmp
xchg
pusha
movb
pushf
pushf
pushl
ret
aaa
pop
lods
outsb
pushf
xchg
movw
mov
mov
movb
pushl
ret
push
pusha
pushf
nop
call
push
movw
jmp
mov
movw
push
pusha
call
movb
jmp
pusha
pusha
call
mov
jmp
pushl
xchg
pushf
pusha
not
lea
jo
mov
call
pusha
pushf
nop
movb
jmp
jmp
lea
pusha
jmp
pushl
mov
movb
pushf
push
movl
lea
call
jmp
lea
jae
pushf
mov
pushl
pushf
jmp
nop
jmp
bswap
mov
call
lea
mov
xchg
movb
pushl
ret
push
lea
pushf
lea
js
pushf
xchg
pusha
pushl
ret
xchg
push
pushf
pushl
ret
mov
xchg
pushf
pushl
ret
pusha
push
pushl
nop
pushl
jmp
movl
push
movb
xchg
mov
pushl
ret
lea
push
call
pushf
jmp
pushf
xchg
push
pushf
pushl
ret
jmp
mov
call
xchg
mov
mov
pushl
ret
xchg
movw
movw
movb
pushl
ret
call
push
mov
lea
jle
nop
pushf
mov
pusha
bswap
mov
pusha
jmp
pushf
lea
jmp
movb
push
lea
pushl
pushf
call
call
push
pushl
lea
pusha
xchg
movl
mov
pushl
ret
xchg
movw
push
pushl
ret
push
mov
call
push
jmp
call
push
mov
mov
setle
pushf
mov
mov
call
lea
jno
push
not
bswap
bswap
bswap
mov
pusha
mov
mov
call
pushl
xchg
pushf
pushl
ret
push
lea
movb
call
pushf
jmp
jmp
push
pushl
pusha
call
nop
jmp
jmp
lea
movb
xchg
pushf
push
pushf
mov
pushl
ret
pushf
xchg
pusha
pushf
pushf
push
pushl
ret
pusha
mov
lea
jno
pusha
mov
call
call
push
pusha
nop
call
pusha
call
xchg
call
nop
pushf
xchg
movsbw
mov
pusha
mov
lea
jbe
push
lea
movb
mov
xchg
push
pusha
pushl
ret
push
lea
pushf
xchg
pushf
pushf
movb
pushl
ret
mov
pushl
call
jmp
xchg
pushf
mov
pushl
ret
call
pushf
nop
pushf
pusha
xchg
lea
setl
mov
pushf
push
call
pushl
call
pusha
lea
jno
nop
push
push
jmp
mov
imulb
add
xchg
and
mov
pusha
pushf
mov
pushl
ret
call
mov
movw
jmp
push
nop
mov
pushl
jmp
jmp
lea
mov
push
push
xchg
pushf
pusha
pushf
pushl
ret
mov
push
lea
mov
xchg
movb
pushf
push
movb
pushl
ret
jmp
nop
pop
pushf
mov
pushl
xchg
push
mov
pushf
xchg
not
bswap
mov
pushf
mov
call
movsbw
not
mov
jmp
pushl
call
jmp
push
pushf
nop
pusha
lea
ja
push
not
mov
push
jmp
push
mov
pop
mov
jmp
push
call
mov
mov
lea
movb
xchg
mov
pushl
pushl
ret
pusha
push
mov
xchg
pushf
pushl
ret
xchg
pushf
push
pushl
ret
pushf
lea
pusha
mov
pushf
pushl
xchg
push
pushf
mov
pushl
ret
push
pushl
jmp
lea
pushf
call
push
pusha
nop
lea
jno
pushf
pushf
xchg
mov
movsbw
mov
push
movw
push
mov
push
push
jmp
call
xchg
shl
push
call
pushf
xchg
not
mov
lea
jns
pushf
pusha
mov
call
movzbw
mov
pushf
call
mov
push
pusha
mov
call
nop
pushl
lea
jle
pushf
mov
movzbw
movzbl
mov
pusha
jmp
push
pushf
nop
movw
jmp
jmp
jmp
jmp
push
jmp
mov
pushf
pushl
lea
pusha
mov
jmp
jmp
mov
pushf
movb
lea
pushf
call
call
pushf
movb
xchg
mov
push
pushl
pushl
ret
lea
jmp
mov
pushf
call
lea
jmp
mov
pushf
pushf
movb
lea
jmp
mov
lea
jmp
pushf
pushf
mov
mov
movb
mov
pushf
push
pushf
mov
call
pushf
push
push
nop
movb
mov
call
call
movzbw
mov
pushl
mov
movw
mov
push
movw
mov
call
jg
push
pusha
nop
jmp
lea
call
mov
pusha
lea
mov
call
pusha
nop
mov
pushf
pushf
xchg
mov
not
mov
push
jmp
jmp
lea
nop
movsbw
bswap
pop
pushf
pusha
pushf
pushf
xchg
call
lea
jmp
pop
mov
mov
call
call
push
mov
push
mov
jmp
push
jmp
fnsave
mov
enter
movsbl
nop
lea
setb
mov
movzbw
pop
call
call
mov
pushl
xchg
jmp
jmp
call
jmp
call
bswap
movsbl
mov
push
jmp
jmp
pushf
mov
xchg
push
pushl
pushl
ret
xchg
jmp
call
call
push
mov
movb
pushl
pushf
pusha
lea
mov
push
call
jge
xchg
push
fs
ja
mov
jmp
jmp
call
pusha
nop
lea
jae
push
pushf
pushf
mov
movw
push
call
call
call
jg
push
pushl
pusha
nop
jmp
lea
jmp
call
pushf
lea
push
jmp
push
pushl
mov
nop
pushf
movb
mov
jmp
mov
xchg
setae
push
not
pushf
mov
call
mov
out
pusha
pushf
nop
jmp
call
mov
push
lea
pushl
pushf
xchg
pushl
pushf
pushl
ret
xchg
pusha
mov
pushl
mov
mov
call
jmp
mov
mov
lea
call
pushf
xchg
pushf
pushf
mov
pushl
ret
jmp
lods
sbb
add
push
lea
jmp
call
pushf
pushl
jmp
jmp
jmp
push
pushf
nop
push
xchg
pusha
pop
mov
pushl
mov
pushl
lea
movb
call
mov
setge
mov
pushf
push
mov
call
call
pusha
pusha
nop
pushf
pushf
xchg
lea
push
movsbw
mov
push
push
mov
mov
call
sbb
scas
jb
nop
call
call
xchg
pushf
pushf
movb
pushl
ret
nop
movb
call
pusha
pushf
call
pushf
call
mov
xchg
pushf
push
pushf
pushl
ret
pushf
push
xchg
mov
pushf
pushl
ret
jmp
lea
pushf
pushf
xchg
mov
mov
mov
pushl
ret
lea
mov
pushf
movb
xchg
mov
pusha
movl
push
pushl
ret
lea
movb
xchg
movb
movb
pushf
pushl
ret
nop
jmp
xchg
jmp
not
pop
mov
call
jmp
xchg
movb
movb
pushl
ret
jmp
push
xchg
push
push
mov
pushf
mov
mov
jmp
call
jmp
lea
jg
push
xchg
pushf
pusha
pushf
xchg
movsbw
pushf
call
mov
lea
jns
mov
call
not
pushf
mov
pusha
call
push
pusha
push
nop
call
jmp
call
pushf
pusha
xchg
push
mov
push
pushl
ret
call
mov
jmp
pushf
pusha
mov
not
jmp
pushf
pushf
nop
push
mov
mov
pop
pushf
mov
push
pushf
pusha
pushf
mov
pushl
jmp
xchg
push
movw
pushf
movb
pushl
ret
call
pushf
lea
push
pusha
xchg
pushf
pushf
pushl
ret
lea
movb
push
xchg
pushf
push
pushl
mov
pushl
ret
xchg
push
pushf
pushl
pushl
ret
pushl
xchg
pushf
pushl
pushl
ret
mov
pusha
pushf
mov
call
pusha
nop
jmp
pusha
movb
pusha
nop
jmp
jmp
lea
pushl
pushf
pushf
xchg
pushl
pushl
movb
pushf
pushl
ret
pusha
lea
movb
jmp
pusha
mov
call
call
nop
pusha
movsbw
movzbw
push
mov
push
xchg
mov
xchg
lea
bswap
movzbw
pushl
mov
jmp
push
mov
pusha
pushf
pushf
pushf
lea
movb
pushf
movb
jmp
pusha
jmp
push
nop
jmp
push
pusha
call
push
push
xchg
pushf
pushf
push
pushl
ret
mov
jmp
call
call
jmp
pusha
pushf
lea
pushf
movb
push
mov
xchg
movb
pushl
ret
mov
mov
movsbw
lea
jb
setne
mov
mov
call
pusha
xchg
lea
jp
pusha
movw
push
mov
pushf
call
movw
jmp
jmp
xchg
pushl
pushl
mov
bswap
pushf
pop
mov
call
jmp
xchg
jmp
nop
call
mov
mov
pushf
mov
call
lea
mov
movl
mov
push
jmp
movw
lea
pushf
xchg
pushl
pushl
ret
push
call
push
push
mov
mov
pusha
push
mov
lea
jl
lea
pushf
pusha
xchg
push
push
pushl
ret
movb
push
call
pushf
nop
pushf
xchg
pusha
mov
jmp
mov
push
mov
movl
movb
movw
lea
pushf
xchg
pusha
movb
pushl
ret
push
pushf
nop
pushf
jmp
movb
xchg
pushl
pusha
mov
pushl
pushl
ret
mov
push
call
mov
mov
jmp
pushf
xchg
pushl
pushl
pushf
pushl
ret
jmp
jmp
lea
mov
pop
push
mov
jmp
pushf
pushf
mov
jmp
push
call
push
call
pusha
push
xchg
lahf
mov
movw
pushf
pushl
call
pushf
push
mov
movsbw
bswap
mov
lea
js
mov
pushf
pushf
lea
pusha
call
lea
jno
pushf
mov
mov
jmp
pusha
jmp
lea
movb
xchg
pusha
pushl
ret
mov
pushl
push
push
lea
push
xchg
pushf
pushf
mov
pushf
pushl
ret
mov
pop
mov
call
jmp
jmp
xchg
push
call
call
pushf
pushf
mov
mov
lea
jp
push
pushf
lea
pusha
push
movw
xchg
pushf
pushf
push
mov
pushl
ret
call
xchg
pusha
mov
lea
mov
push
mov
pusha
jmp
lea
jmp
xchg
pushl
jmp
and
pusha
jmp
pushf
pushf
nop
pushf
pushf
xchg
movsbw
movsbw
not
mov
pusha
push
jmp
nop
movb
pushf
call
jmp
jmp
movb
mov
lea
call
mov
pushf
movb
jmp
pushf
call
mov
mov
pusha
movb
mov
call
movb
movl
call
call
mov
setp
not
mov
pushf
mov
push
movb
lea
je
lea
call
lea
jmp
lea
call
jmp
mov
pushf
pushf
mov
pushf
lea
pushf
push
pushl
jmp
pushf
nop
mov
xchg
jmp
call
pushf
mov
nop
pushl
mov
lea
mov
jmp
lea
push
jmp
jmp
push
lea
pushf
jmp
xchg
not
pushf
mov
jmp
pusha
xchg
mov
pushl
pushl
ret
xchg
pushf
push
pushl
ret
jmp
lea
jmp
call
mov
call
push
pushf
mov
pushl
mov
jmp
jmp
movw
mov
pushf
lea
call
mov
pushf
jmp
mov
pushf
movzbw
pusha
mov
push
call
lea
jl
nop
pusha
xchg
call
mov
nop
not
pop
jp
pushf
pusha
push
xchg
jmp
xchg
pushl
pushl
ret
nop
jmp
call
pushf
xchg
pusha
pushf
pushl
ret
jmp
pushl
movb
jmp
push
jmp
lea
movzbl
bswap
cwtl
nop
lea
not
pusha
lahf
mov
pusha
jmp
push
nop
call
call
jmp
bswap
movw
bswap
mov
pushf
pushl
mov
call
pushf
jmp
pushf
jmp
mov
push
lea
pushf
mov
mov
jmp
push
jmp
jmp
jmp
lea
mov
call
mov
pushf
lea
jmp
nop
push
pusha
call
jmp
lea
call
push
jmp
xchg
pushl
pushf
pushl
pushl
ret
mov
pushf
lea
jo
pusha
pusha
mov
pushf
jmp
xchg
pushf
pushl
ret
pushf
lea
jmp
mov
lea
jns
lea
call
lea
pusha
jmp
movb
movb
call
cltd
shl
inc
nop
pushf
mov
lea
jae
movsbw
mov
jmp
mov
call
jmp
push
mov
nop
pushf
jmp
mov
pusha
pushf
mov
lea
jo
pushf
lea
call
pusha
push
nop
jmp
jmp
mov
call
jmp
lea
push
xchg
pushf
pushl
pushl
ret
lea
push
xchg
pusha
pushl
ret
pusha
mov
lea
jp
xchg
pushf
lea
jnp
pusha
pushl
mov
movsbw
movw
bswap
mov
pusha
movb
call
movl
movl
jmp
pusha
movzwl
btr
mov
test
cmc
jmp
pop
mov
int3
mov
mov
ficompl
mov
pop
xchg
dec
in
dec
sahf
mov
addr16
jbe
push
adc
jecxz
dec
fsubl
cmc
mov
fidivrl
mov
cmp
fidivs
rcrb
faddl
sbb
aad
in
divl
pop
xor
ja
test
icebp
mov
mov
filds
cmpsb
xor
push
and
mov
not
mov
imul
jo
push
loope
xchg
cltd
mov
jmp
dec
andb
mov
xlat
incb
xchg
jg
mov
and
pop
push
lcall
je
sahf
mov
subb
mov
insl
popa
addr16
imul
add
fsubrl
dec
jge
pop
ret
or
aam
mov
adc
lds
pop
mov
mov
lock
jge
enter
or
ror
lret
lcall
cmp
lret
ljmp
out
mov
data16
push
add
dec
adc
outsb
mov
inc
lret
xchg
and
scas
and
aam
add
scas
imul
bound
xchg
lods
aaa
fimull
int
repnz
push
sub
cld
mov
jmp
divb
cwtl
push
add
sub
sbb
cmpsb
pop
mov
pushf
movsbw
not
mov
mov
lods
bt
sub
movb
neg
mov
movw
push
dec
cmc
bt
call
movsbw
pop
mov
movl
push
lea
movw
rep
pushf
xchg
mov
movsbw
mov
setnp
bswap
pushf
lods
shl
rcl
jmp
mov
lea
call
jp
adc
push
pushf
lea
jb
pushf
bt
cmc
xor
mov
test
pushl
pusha
call
das
inc
dec
pop
lret
faddl
test
jnp
mov
cli
movsl
stos
inc
inc
push
insb
mov
out
mov
xor
or
pop
mov
in
pop
adc
jne
pop
jo
jbe
dec
fistps
add
iret
xor
or
sub
arpl
mov
push
xchg
mov
scas
lcall
mov
lret
mov
jmp
add
lret
push
and
sub
mov
push
xchg
call
scas
jl
pusha
rol
call
pusha
pushf
call
pushf
call
jl
ficomps
fcoml
xchg
sbb
mov
into
push
sarl
loope
dec
jp
cmp
aaa
ss
ficompl
and
lahf
daa
scas
jo
xor
inc
rcl
pop
ja
pop
data16
mov
into
mov
outsb
nop
jg
dec
xchg
dec
inc
ss
inc
popa
data16
popf
int3
adc
imul
sbb
push
gs
sbb
incl
pop
ljmp
fsubr
adc
pop
lret
test
add
imul
aam
sbb
data16
jl
sbb
mov
or
mov
dec
mov
sbb
add
xchg
aaa
jne
cmpsb
cwtl
sti
dec
pop
cmp
loop
rclb
mov
sbb
int3
xchg
clc
in
outsb
xor
into
xchg
inc
cltd
aad
das
test
add
pop
push
fisttpll
testl
pop
lret
faddl
rcll
cs
fs
mov
into
inc
push
imul
mov
aad
sub
in
out
gs
add
in
jp
sbb
mov
sbb
mov
sbb
jecxz
mov
mov
pop
inc
push
lret
popa
and
movsl
scas
xor
mov
cmpsb
sbb
inc
sub
stc
bt
mov
inc
or
jmp
push
fldcw
orl
mov
in
pop
or
push
std
jg
add
int
fidivrl
sar
aaa
movl
pusha
lea
jmp
out
add
jge
mov
mov
cmp
jge
sahf
fcompl
pop
mov
sti
fnstcw
shrb
ds
sahf
jns
mov
aas
jecxz
in
mov
xchg
push
mov
mov
jne
pop
jbe
out
xchg
arpl
push
pop
pop
cmp
outsl
shlb
in
in
xchg
or
pop
xor
out
aad
ret
arpl
stos
pop
leave
sbb
push
sub
stos
std
idiv
fldl
lock
adc
jb
and
cld
fdivrl
lea
not
movzbw
pop
call
jmp
adc
xchg
je
jmp
lds
and
popf
clc
scas
push
inc
out
movsl
insl
mov
inc
jo
pop
sub
mov
pop
sub
jae
pop
adc
test
test
dec
cmp
std
mov
pop
xchg
mov
jp
out
ret
repnz
dec
test
jno
push
test
mov
cmpsl
push
pop
lret
mov
cmpsb
sbb
je
jecxz
fiadds
in
mov
fnstenv
push
pop
ss
shrl
es
cmpsl
sub
lds
and
data16
and
sbb
popa
xchg
mov
je
jmp
ja
in
imul
out
mov
add
mov
pop
or
cmpsb
sub
pop
pop
mov
sub
inc
pop
jecxz
mov
xchg
sbb
xchg
in
push
ret
sub
xchg
or
pushf
adc
cmpl
lret
sbb
into
mov
fdiv
inc
js
inc
nop
xchg
sahf
dec
cli
out
movsl
pop
lret
fdiv
test
mov
mov
test
rolb
inc
jno
stos
sub
sbb
or
push
xchg
nop
pop
pop
adc
ljmp
add
xchg
adc
ss
mov
gs
jecxz
popa
push
add
pop
push
call
stc
dec
adc
bound
mov
sub
cmpsb
call
nop
inc
lret
daa
and
popa
sbb
jle
js
dec
in
imul
ret
lods
cli
dec
popa
or
cmp
xchg
push
jno
pop
xchg
mov
faddl
jg
sbb
enter
dec
mov
clc
sub
movsb
push
movsl
mulb
getsec
in
and
mov
sub
mov
cltd
rorb
inc
cmp
scas
xchg
sarb
xchg
out
xchg
and
jl
lock
adc
enter
aaa
ret
out
xchg
jno
push
xchg
dec
dec
or
fcoml
jecxz
lcall
adc
out
cmp
jmp
fsubr
int
xlat
dec
inc
lahf
cmp
pushf
repz
add
popf
push
cld
inc
mulb
xor
repnz
outsb
jbe
and
in
div
push
test
dec
dec
add
add
jno
mov
int
mov
push
movsb
inc
mov
nop
cs
pop
jno
add
jbe
add
jecxz
adc
jnp
int3
pop
sbb
sbb
mov
ja
sbb
adcb
hlt
cmp
push
or
and
testl
out
xor
out
shlb
pop
cmpsl
jae
insb
mov
repnz
test
lcall
rclb
fcompl
aam
dec
jle
test
cld
xchg
movsb
adc
mov
push
pushf
std
cmp
ja
dec
or
in
mov
jno
push
inc
scas
add
sbb
push
sti
popa
sub
mov
repz
xchg
mov
push
or
sub
lret
test
dec
scas
movsl
push
add
and
pushf
adc
fmul
mov
fisubs
inc
test
sbb
adc
mov
int
adc
or
scas
dec
lock
xor
cmp
int3
fwait
pop
jne
pop
jmp
cmpsl
jge
fnstenv
xchg
aas
scas
sub
js
ret
push
jmp
ret
jnp
loopne
aad
add
sbb
imul
and
and
arpl
jmp
iret
fdivr
test
mov
adc
call
incb
popa
add
lahf
sahf
in
mov
pop
adc
test
outsl
mov
movsb
jb
lret
lea
lret
fdivrl
push
jo
lods
push
pop
loopne
sbb
adc
test
fistpll
cld
pop
lea
mov
mov
cmp
rcl
out
mov
in
dec
lds
addr16
fsubr
xchg
xchg
cli
scas
add
mov
stc
out
lea
xchg
mov
stos
mov
outsb
mov
bound
cmpsl
push
push
lret
fsubrl
lods
loope
dec
pop
jns
mov
lods
shrb
or
jne
lods
dec
aam
or
add
adc
dec
shlb
or
mov
xchg
adc
mov
pop
fxch
mov
ljmp
mov
scas
mov
push
mov
or
jecxz
cmp
cli
aam
pop
mov
mov
and
xchg
fldl
push
and
mov
aas
cmpsb
popf
pop
out
push
aam
out
imul
iret
stc
stos
aam
push
rorb
ds
rcll
dec
mov
std
pop
adc
out
jmp
cmp
mov
lods
dec
inc
cmp
fisubl
loopne
pop
enter
mov
push
mov
jmp
mov
pop
je
sbb
push
rcr
push
es
popf
movl
rolb
or
rcrb
jnp
ss
jbe
mov
inc
mov
iret
pop
ljmp
xlat
idivb
cmpsb
out
pop
dec
xchg
push
std
mov
or
adc
sbb
or
filds
test
loop
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
and
lea
call
jmp
add
bt
stc
clc
bt
sub
mov
call
mov
call
mov
fdivl
or
jne
adc
push
fcoms
ja
push
in
mov
push
xor
or
sub
mov
ror
push
xchg
mov
mov
icebp
das
imulb
orl
out
pop
loop
sti
xor
fldl
mov
cmp
mov
lcall
push
jmp
push
sahf
add
ss
cltd
cmp
adc
rorl
mov
out
dec
lret
dec
cmc
push
loopne
imulb
lret
fdivrl
out
xchg
xchg
rolb
ror
mov
xor
inc
scas
in
and
stos
push
ljmp
xor
mov
fiaddl
inc
orb
fs
jnp
add
in
jo
divl
xor
mov
dec
xor
shll
std
push
push
xchg
movsl
fstpl
popf
xchg
fisttps
movzbl
lea
pushl
lea
mov
mov
movw
jmp
test
repnz
mov
pushf
pushl
lea
jne
bswap
movb
pusha
cwtl
bswap
movsbw
mov
pusha
lea
lea
movl
pushf
lea
ja
push
push
jmp
inc
lcall
out
jbe
mov
jns
cmpsb
push
push
mov
jbe
sub
jnp
in
sub
dec
or
sbb
repz
jp
das
aam
out
and
jne
xchg
xchg
add
jb
mov
int3
add
push
cmpsl
icebp
xchg
mov
mov
and
lret
mov
inc
jmp
sbb
add
dec
gs
subl
fdivl
sub
lret
loopne
push
sti
lcall
adc
in
xchg
inc
dec
clc
xchg
inc
subl
fcomps
fsubp
inc
test
cmp
add
adc
repz
aad
aaa
push
incl
loope
sub
aaa
arpl
add
sbb
shrb
jae
jmp
insl
rolb
xchg
mov
cmp
rorl
push
xlat
add
or
and
push
lret
fmul
outsl
jb
add
and
sub
in
pop
movsb
push
sbb
xabort
lea
jne,pn
and
mov
sahf
pop
xor
test
cs
lods
sub
pusha
pop
xchg
push
push
lret
popa
and
inc
test
or
push
jns
ficomps
fwait
out
stos
testb
jl
mov
mov
cmp
lds
push
lea
je
cmc
add
pushf
cmp
pusha
pusha
lea
jb
push
pushf
jmp
lea
sbb
insb
outsb
dec
jmp
or
fisubrl
fdivrs
cmp
lock
outsl
pop
pop
xor
sbb
push
jle
sarb
cltd
inc
mov
hlt
insb
add
cmp
lcall
mov
hlt
es
icebp
cmp
jo
jb
lds
jg
dec
mov
insl
repz
ret
stos
fbld
and
xor
xor
imul
cmp
dec
lret
mov
add
korw
jge
inc
out
unpcklps
lret
fcoml
push
or
out
inc
mull
cmp
in
xchg
sub
das
pop
sub
inc
rclb
add
add
jmp
inc
call
jne
add
mov
pop
test
notb
mov
iret
ljmp
jb
stc
out
xchg
call
or
inc
mov
sahf
sar
xchg
imul
test
mov
or
push
dec
mov
outsb
sbb
sbb
enter
or
call
pop
insb
xchg
stc
push
loope
xchg
loopne
call
out
jno
filds
lahf
pop
or
std
pop
fnstcw
cmp
scas
out
push
cmpsb
sub
stc
stos
push
adc
mov
ret
rcl
push
lcall
mov
mov
in
adc
clc
scas
loopne
adc
ljmp
jl
sahf
in
nop
ss
inc
jecxz
adc
fcompl
ljmp
xchg
push
test
xchg
movsl
adc
xor
and
mov
jno
cmp
pop
test
ret
mov
in
push
mov
in
sahf
add
push
ret
cmp
and
sub
in
fstpl
scas
jmp
cmp
stos
loop
addr16
push
sub
sub
sub
jg
fildl
cli
rcr
xchg
adc
lock
xlat
sarb
xor
fildll
push
pop
inc
andl
je
movzbw
pushf
movzbw
mov
seto
mov
call
ss
dec
lret
fcoml
mov
insb
sub
lock
rolb
mov
xor
neg
cltd
outsl
cmpsl
mov
xor
dec
cmp
pop
repz
mov
or
dec
jb
add
aas
sub
or
es
xor
pop
out
pop
xor
fimuls
dec
pop
add
inc
es
jp
and
std
cmp
fistpll
mov
je
adc
rclb
ljmp
imul
dec
lret
fsubl
test
lret
xor
imul
out
mov
dec
aas
int
mov
rol
add
rclb
and
jmp
push
jge
fistps
addr16
cmc
mov
mov
pop
and
or
push
mov
xchg
jae
or
jns
ljmp
mov
or
imul
das
fdivr
les
fldt
or
lods
mov
js
sbb
mov
dec
sarb
push
sti
mov
pusha
push
pop
adc
cmpsb
cli
cs
cmp
xchg
out
int
xorl
test
or
mov
pop
outsb
push
xor
sbb
pop
pusha
pop
add
xchg
outsl
test
inc
pushf
inc
push
cmp
ret
js
jnp
cld
inc
add
inc
je
hlt
out
push
je
push
hlt
inc
xor
rorb
mov
add
fsubrl
jo
xchg
aaa
cwtl
mov
test
push
adc
and
mov
push
push
cmpsb
adcb
or
mov
fistl
xor
inc
jle
inc
add
std
lahf
lock
js
insl
xchg
mov
and
pusha
cmp
lds
fldenv
mov
fwait
inc
movsb
add
push
mov
fidivl
sbb
jo
mov
add
jo
sub
push
call
fst
js
cmp
jle
cld
jmp
in
loope
xor
push
js
nop
push
and
mov
jecxz
rcll
dec
xor
das
push
outsl
hlt
fwait
jnp
inc
mov
inc
push
das
pop
push
cmpl
notb
popf
das
jmp
scas
xor
call
scas
test
inc
or
setle
pop
add
sub
push
jns
frstor
out
xchg
dec
lret
faddl
xchg
cwtl
sbb
jns
imul
pop
es
movsb
push
leave
and
push
mov
or
jg
jnp
sbb
add
push
dec
add
inc
test
xor
ja
fdivrl
test
scas
sti
pop
and
imul
mov
cmp
xchg
inc
imul
aad
mov
test
dec
sbb
sti
stos
xor
cmp
test
xchg
pushf
aas
lods
push
aas
jp
stos
icebp
cltd
les
lcall
fadds
lret
fcoml
dec
clc
in
push
mov
mov
and
dec
adcb
pop
inc
orb
test
imul
ja
push
pop
xchg
cmpl
and
jae
cmc
test
and
adc
shlb
addr16
pop
in
dec
fistl
xor
stc
xor
mov
lock
jecxz
scas
fdivs
or
in
std
jne
inc
lret
push
push
arpl
scas
pop
in
aaa
ret
push
stos
stc
jae
push
sub
call
lret
faddl
adc
adc
mov
lahf
shlb
push
dec
hlt
fnsave
mov
pushf
jb
or
inc
out
pushf
xchg
fnstsw
mov
scas
or
inc
fcmovu
adc
dec
or
rcrl
pop
adc
jno
addr16
out
insb
inc
push
xchg
stos
cmp
leave
xor
jmp
insl
mov
push
push
adc
xchg
pop
pop
xorb
sub
clc
in
inc
ljmp
cmp
divb
xchg
lret
or
mov
bt
pusha
cmc
cmp
pushf
mov
lea
jb
btr
mov
add
shr
stc
mov
call
lea
ja
sar
shl
sbb
sub
rcl
shrd
bt
add
bsf
cmc
mov
seta
call
dec
out
out
lret
fcompl
mov
pop
insl
jo
inc
push
jbe
imul
ret
add
test
mov
jg
dec
je
push
dec
out
mul
jecxz
cld
aas
movsl
push
shll
and
cmp
scas
loop
mov
xor
insl
in
xchg
dec
imul
push
mov
mov
lds
cs
sub
inc
mov
push
xchg
xor
or
sbb
loope
in
dec
xor
fidivrl
sbb
imul
xchg
adc
pop
daa
dec
mov
faddl
cmp
adc
fidivs
and
mov
lcall
or
cmp
and
shll
push
mov
add
xor
mov
jle
mov
mov
rcll
fdiv
lret
call
lea
sbbl
loopne
jne
ds
test
nop
sbb
cld
adc
jns
sbb
pop
stc
loope
and
cmpsb
mov
arpl
cld
popl
jmp
add
fdivl
and
jae
push
nop
icebp
and
jecxz,pn
inc
dec
popa
sub
clc
shl
in
jmp
adc
sub
ret
out
push
iret
add
sub
sbb
data16
pop
mov
aad
das
mov
fsubl
xchg
dec
push
adc
in
mov
push
xchg
jno
imul
xlat
push
mov
xor
push
sub
data16
add
xor
cmpsb
xor
nop
xor
lods
jnp
fdivr
push
dec
mov
xchg
mov
bound
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
cs
outsl
xchg
add
mov
jmp
ljmp
fprem
jg
sbb
inc
sub
xor
flds
std
sar
fidivs
loopne
stc
scas
xchg
fcoms
jne
mov
mov
jecxz
xlat
lret
pop
imul
in
inc
jmp
sub
das
iret
repnz
mov
cmp
repz
cmp
or
jecxz
fdivl
push
dec
add
or
pop
sub
arpl
fs
inc
mov
mov
lret
fstpl
inc
pop
bound
mov
subl
or
insb
lret
mov
mov
lds
movsb
inc
lret
fcompl
imul
sub
or
xchg
lret
imul
es
mov
adc
push
jbe
dec
pop
inc
inc
leave
int3
push
xchg
clc
cmp
int3
bound
rcr
dec
repnz
add
mov
into
xor
adc
fwait
sarb
adc
out
sub
pop
loopne
ljmp
inc
mov
xchg
lods
push
popf
ds
or
add
pop
mov
jmp
sahf
mov
call
push
test
int3
insb
repz
out
fildll
fstpt
push
mov
test
lahf
adc
adcl
sub
loopne
pop
jae
and
xchg
rolb
pop
std
jnp
lcall
fisubl
and
mov
sbb
add
loopne
data16
jecxz
or
pop
pop
popa
mov
hlt
pop
pop
adc
daa
enter
xor
xchg
pop
repnz
jmp
mov
dec
ss
sti
cltd
mov
fbld
call
icebp
mov
dec
ljmp
jge
loop
adc
jge
jge
je
xor
jge
and
aas
sub
movsl
mov
fs
popa
push
pop
pusha
je
push
out
std
insl
dec
add
dec
jae
cmpl
and
int3
add
ja
ljmp
xchg
sbb
cli
or
mov
mov
in
in
xor
ss
sbb
into
jp
out
push
cwtl
insl
out
fsubp
jno
cmp
sub
xchg
cmp
lret
mov
orb
and
xor
scas
std
pop
or
add
adc
adc
movsl
push
insb
insl
or
stos
data16
mov
adc
arpl
and
or
mov
mov
data16
pop
xor
jg
cli
mov
loop
dec
cs
or
imul
pop
pop
xchg
xchg
ljmp
scas
mov
bnd
movsl
mov
push
mov
std
or
sarb
or
mov
fadd
pushf
jge
dec
mov
and
pop
jno
sbb
dec
inc
in
aaa
sbb
dec
inc
push
hlt
and
mov
addb
mov
jbe
out
sbb
and
add
add
mov
subb
add
pop
sub
push
int3
pop
pop
xor
test
stos
dec
push
add
push
popf
pop
dec
int3
rcll
inc
in
and
push
xchg
dec
mov
popa
mov
adc
rol
data16
jo
xor
mov
into
add
push
mov
call
sbb
inc
lret
fsubl
add
xchg
popf
movl
sub
out
shlb
test
cmpsb
push
cmpb
bnd
outsl
popl
stc
and
outsl
cli
in
inc
test
add
add
test
mov
fcompl
sub
adc
mov
push
dec
loope
adc
push
mov
dec
dec
mov
xchg
dec
lahf
jecxz
push
pusha
pop
fdivrs
push
aam
adc
movb
sub
push
pop
mov
rol
inc
decb
push
lea
jmp
cltd
pop
push
inc
lret
fcompl
add
mov
lcall
xchg
data16
clc
sbb
cwtl
andl
lock
test
push
inc
inc
add
xchg
inc
add
adc
cs
cmpl
int
lahf
daa
xsaveopt
daa
mov
cmp
cwtl
or
or
jae
sbb
fistpl
mov
add
test
lret
jle
fbld
and
aad
cli
or
dec
mov
lret
lea
jae
and
sar
bsf
bsf
mov
shl
pushf
xadd
mov
bswap
bsr
not
mov
cmp
cmp
cmc
xor
clc
repnz
pushf
pushf
pushf
lea
jne
push
adc
test
mov
clc
bts
sub
sar
btr
lea
call
mov
fdivrl
fistps
mov
sahf
mov
enter
repz
push
in
es
imul
lods
sub
xor
pushf
stc
adc
sbb
dec
or
xchg
pop
cld
fildl
js
push
lret
jmp
or
das
aam
dec
pop
pop
in
inc
pop
mov
inc
adc
bound
and
mov
push
invd
sbb
pop
daa
loope
push
lea
fcmovbe
sbb
test
aas
xchg
push
dec
nop
jnp
mov
mov
out
dec
mov
loop
pop
add
add
daa
pop
inc
lret
mov
inc
loope
int3
mov
stos
sbb
add
mov
sbb
addr16
sub
mov
jl
hlt
call
mov
xchg
int3
sub
mov
aaa
jbe
pusha
adc
call
lea
lea
movzbl
lea
movzbw
mov
call
sbbl
sub
jb
xor
jmp
lock
jle
xorb
pusha
jl
mov
push
cltd
outsl
xor
inc
out
add
xchg
pop
add
cltd
or
in
add
inc
mov
lods
jno
jb
mov
adc
mov
sbb
int
and
or
ret
ret
push
imul
dec
iret
adc
push
pop
jo
outsl
and
mov
mov
loop
es
insb
icebp
sub
xchg
inc
lods
xchg
hlt
push
mov
in
fidivs
repz
adc
pushf
leave
and
sub
xchg
popa
iret
rcl
pop
cld
ljmp
push
mov
or
push
inc
fmull
in
repz
imul
jnp
movsl
scas
mov
inc
push
ds
inc
shll
xchg
sub
outsb
cmc
sub
lock
addr16
scas
mov
mov
sbb
test
add
xor
in
js
sbb
icebp
mov
data16
xchg
pusha
sbb
pushl
mov
lea
pushf
mov
pushf
lea
jmp
cmp
jmp
xor
cmp
xchg
xchg
jbe
cmp
fmull
lea
clc
in
cmpsb
cmp
mov
daa
push
inc
inc
rorb
add
push
in
and
add
push
cld
push
test
rorb
call
pop
jns
mov
pop
loopne
jno
push
mov
pop
push
movsb
dec
xchg
dec
outsb
movsl
dec
lea
push
sbb
fs
or
fbstp
sti
xor
mov
xor
rorl
push
sub
add
bt
stc
jmp
bt
shl
cmp
mov
add
movw
movsbw
pop
lea
jmp
cmp
cmp
fs
shl
call
ds
jo
jp
andb
sti
leave
sbb
jb
pusha
into
popl
push
fimuls
dec
inc
test
push
mov
dec
scas
daa
in
push
dec
out
and
das
insb
not
lcall
pop
scas
pop
xchg
addl
repz
test
ret
aaa
jle
arpl
nop
pop
dec
aaa
xchg
xor
jo
scas
imul
hlt
cmp
test
sub
adc
mov
dec
mov
pop
das
xchg
jmp
mov
add
sub
nop
sbb
jg
lods
inc
test
ds
fdivs
shlb
cmpsb
add
div
mov
and
inc
xor
repnz
lock
cmpsb
jmp
or
in
ret
ds
mov
mov
sub
sbb
lea
jae
pushf
jmp
add
test
cmp
mov
movb
lea
jb
pushf
cmp
call
xor
add
mov
pop
mov
lret
jp
subb
fldenv
adc
mov
pushf
outsb
xor
adc
daa
mov
or
adc
ret
into
cmp
faddl
mov
mov
adc
negl
fiadds
rorb
inc
sbb
dec
pop
mov
mov
mov
add
icebp
mov
and
lahf
lds
xor
ret
or
aad
dec
dec
outsl
add
sub
aad
int
cmp
inc
shll
xchg
fistpl
mov
push
adc
push
cmp
adc
mov
lea
call
jmp
jno
mov
lret
fmul
cwtl
sbb
aad
jge
dec
stos
and
jmp
div
xchg
cmpsl
or
pop
popf
jns
scas
cmp
inc
sbb
cwtl
subl
mov
test
mov
inc
add
ret
xchg
dec
cltd
ret
pusha
lock
add
cmp
popf
xor
or
insl
hlt
cmp
inc
inc
inc
jecxz
iret
bound
mov
push
addb
add
adc
cmp
fadd
imul
fstpt
stos
jge
push
dec
inc
loop
popf
dec
insb
dec
ret
mov
sbb
cmp
mov
sahf
test
daa
xlat
roll
mov
pusha
stos
pushf
jnp
cli
lea
xor
add
mov
mov
sti
xchg
jle
inc
imul
mov
mov
scas
cmp
in
jmp
lods
test
and
jmp
icebp
add
dec
mov
jmp
push
xchg
and
js
nop
mov
jmp
js
xchg
dec
iret
cmp
fsubr
movb
jge
aaa
sbb
imul
cmp
aas
ds
and
pop
enter
or
or
fs
movsb
test
add
pop
xchg
and
rol
add
pop
and
dec
xchg
cmp
xchg
aas
mull
repnz
rorb
hlt
aas
ret
aad
arpl
sahf
mov
xchg
loop
jp
into
mov
mov
jecxz
cmc
add
fwait
adc
and
imul
jge
mov
mov
lcall
stc
movsb
shll
popa
xor
test
push
out
pop
xor
in
ja
test
mov
mov
mov
mov
add
jno
cmpsl
lock
sub
sbb
push
jo
mov
lods
and
int3
sti
adc
xlat
imul
push
and
and
out
loop
out
fiadds
adc
shl
cmp
clc
add
push
call
stc
pusha
cmp
jmp
movb
mov
bt
clc
bt
test
pushf
pushf
mov
pushf
lea
je
clc
test
add
cmp
cmp
jmp
fdivrl
insb
push
xchg
clc
aad
fdivl
out
pop
xor
inc
mov
lahf
imull
jno
addr16
repnz
es
fistl
pop
add
or
imul
imul
in
mov
jb
popf
rorl
mov
or
jbe
sbb
push
adc
push
mov
insl
pop
mov
jmp
and
imul
leave
test
jb
rolb
fsub
int
fsubrl
pop
lea
test
push
arpl
je
add
fs
jne
or
clc
mov
pusha
test
call
cmp
pushl
pusha
pushf
pushf
lea
jae
jge
clc
cmc
add
push
pusha
jmp
lea
je
test
stc
clc
sub
stc
push
cmp
cmp
pusha
pusha
mov
push
lea
jmp
xadd
or
xor
not
lea
jmp
lahf
cwtl
cwtl
push
setae
mov
lea
pusha
push
movl
call
pusha
movb
pushf
lea
jne
bsf
call
cmp
pushf
jmp
cmpb
pusha
pushl
mov
lea
jne
shld
movsbw
movzbw
bswap
mov
jmp
movsbw
mov
adc
btc
mov
adc
and
mov
neg
and
push
btc
sub
neg
shl
lea
stc
mov
bts
mov
bts
ror
sub
rcl
and
rcr
and
mov
push
pushl
jmp
fdivs
sub
lret
faddl
jno
push
inc
jmp
jecxz
cltd
sub
cli
rcl
xchg
mov
pop
mov
mov
add
xchg
inc
dec
inc
int3
insl
test
testb
stc
xchg
hlt
cmp
pop
and
ja
add
pop
fcoms
and
lcall
scas
push
out
xchg
jb
popa
jb
inc
sbb
jge
mov
add
test
ret
popf
or
inc
lret
or
ss
cmp
jns
cmp
call
mov
fwait
add
push
mov
adc
mov
mov
insb
icebp
sti
lods
pop
loopne
sub
mov
movl
add
cmp
and
outsb
mov
call
xchg
or
cmpb
cmpsl
sub
cmp
jbe
dec
mov
mov
into
lret
mov
xor
dec
imul
mov
dec
xchg
pop
stos
ss
adc
ss
fcoml
or
xor
push
mov
fidivrl
cmp
std
scas
pop
fiadds
fwait
add
int3
or
or
das
or
out
add
in
addr16
ret
add
xor
add
push
faddl
sub
and
mov
add
mov
push
and
int
push
repz
inc
dec
leave
aam
lret
fmull
stos
sub
mov
mov
mov
push
addr16
fnstenv
push
fiaddl
enter
xchg
sub
jns
orl
in
shl
inc
test
icebp
mov
pop
ss
lds
hlt
jge
push
pop
xor
lahf
lds
inc
mov
stc
add
rcll
jecxz
adc
sbb
jecxz
mov
clc
cmp
call
adc
pushl
call
lea
jb
movzbl
mov
pushf
sub
call
mov
push
ss
fdivrl
push
fs
pop
dec
inc
les
sub
sti
add
arpl
stos
add
xchg
arpl
inc
sub
shll
mov
out
mov
ror
popa
mov
or
fucomp
cltd
jecxz
sub
mov
sbb
pop
xchg
pop
sub
fmuls
xor
popf
mov
and
pop
lds
cwtl
sbb
pop
mov
sti
cltd
dec
nop
mov
fcmovbe
push
ret
cmc
int3
pop
fs
or
mov
xor
popl
test
test
xor
add
lods
or
into
sbbl
add
or
pop
sbb
xor
mov
insb
out
inc
repnz
sahf
pop
push
imul
xchg
dec
mov
xchg
loope
ret
stos
lea
xor
fdivl
in
add
jne
test
and
or
mov
and
inc
add
pop
cmp
or
xor
dec
test
rcrl
add
stc
adc
push
sub
ds
and
pop
push
inc
ds
mov
inc
sub
repz
mov
mov
lods
push
cld
dec
out
jae
shl
fistl
mov
dec
jle
pop
sbb
adc
push
xor
fcompl
pop
outsb
imul
popa
add
ret
push
adc
inc
ficompl
xor
sbb
aam
mov
jnp
lds
xchg
jge
in
xchg
std
lods
inc
push
xchg
mov
mov
rcll
adc
jmp
dec
movsb
pop
xchg
rcll
rorl
jbe
in
in
jl
mov
mov
push
pop
in
test
or
adc
nop
xchg
push
gs
mov
loop
sti
fwait
cmp
mov
stc
push
pushf
cmp
mov
jmp
pop
sub
xor
fdivrl
shl
fidivrl
popf
lahf
jo
mov
and
sti
mov
mov
and
mov
gs
inc
int
push
push
sahf
cld
ror
loop
cmp
movsl
sub
dec
lock
or
jne
arpl
jl
jge
mov
mov
inc
sbb
aad
sbb
jns
inc
lock
sbb
mov
jno
push
mov
cmp
jmp
cmp
mov
in
and
rolb
jmp
imul
gs
xor
cs
insb
add
add
sbb
add
add
lds
add
add
test
sbb
add
add
jp
sbb
add
add
lcall
add
sbb
add
add
add
add
add
add
adc
add
add
sbb
add
pop
adc
add
in
add
add
add
lret
sbb
add
add
stc
sub
add
inc
sbb
add
adc
das
bound
add
sbb
xor
sbb
add
add
add
loopne
add
cmp
fs
je
jmp
cs
pop
xor
fcoml
scas
hlt
les
test
popf
ljmp
rorl
jp
orl
dec
test
cltd
dec
inc
add
sbb
pop
mov
test
sbb
daa
test
or
push
repnz
subb
mull
mov
and
jmp
enter
or
inc
xchg
mov
mov
jnp
sbb
add
fs
jne
shr
sub
shld
mov
shr
add
sbb
sar
mov
test
bt
cmc
test
pusha
jmp
lea
jb
shrd
btr
test
cmp
not
mov
call
mov
lea
pushf
pushf
pusha
call
lea
jb
cmc
call
bswap
mov
movb
pusha
push
pushf
pushl
ret
mov
mov
lea
movb
pusha
call
adc
dec
jmp
cld
sarb
mov
stos
rcrl
test
out
fwait
mov
repnz
into
ret
mov
jnp
dec
in
das
xor
cmp
insl
movsl
pop
fcmove
sub
mov
pop
popa
mov
ss
popa
in
fistpll
mov
xor
adc
decl
sarb
outsl
call
cmp
fiadds
jnp
lds
xor
xor
inc
dec
dec
add
fsubl
mov
aas
cltd
or
mov
bound
adc
mov
xchg
data16
jmp
fstps
lret
mov
ja
std
sbb
aaa
xlat
out
in
mov
sbb
testb
push
mov
xlat
sysexit
pop
outsb
cmpsb
out
and
jne
arpl
test
in
inc
push
mov
jbe
mov
xchg
ss
pop
or
pop
sti
sub
pop
iret
je
pop
sbb
inc
push
dec
sti
stos
xchg
pop
inc
push
xchg
nop
pushf
sub
iret
clc
mov
das
daa
lea
mov
sub
cmpsb
cltd
cli
or
or
aam
adc
sbb
daa
inc
ret
push
adc
pop
fistps
jno
in
aad
in
mov
xor
iret
das
mov
pop
or
imul
dec
xor
xchg
das
arpl
jne
mov
pminub
mov
mov
lock
push
mov
xor
adc
sbb
daa
add
inc
divl
sahf
inc
stos
dec
cli
cld
xor
inc
fcoms
mov
sbb
in
xchg
pop
outsl
inc
ret
lret
faddl
dec
lock
lahf
sbbb
leave
add
adc
sub
test
pop
test
ljmp
jns
sub
arpl
out
fwait
add
jle
adc
dec
lods
vmovlpd
mov
add
jnp
pop
lds
stc
sub
adc
rorl
jae
jns
addr16
lcall
andl
sbb
test
bound
add
add
add
pop
sbb
add
add
test
sbb
add
add
jp
sbb
add
add
lcall
add
sbb
add
add
add
add
add
add
adc
add
add
sbb
add
pop
adc
add
in
add
add
add
lret
sbb
add
add
stc
sub
add
inc
sbb
add
adc
das
bound
add
sbb
xor
sbb
add
add
sub
aam
lret
fsubr
lret
cmp
push
int3
jae
test
jb
xchg
sbb
aam
ficomps
mov
sbb
repnz
les
push
push
ds
loop
mov
ss
xor
sarb
lea
leave
fwait
and
pop
xchg
dec
cmp
sahf
cmp
dec
cmpsb
test
das
mov
fbstp
or
int3
mov
ss
mov
mov
jae
jl
adc
mov
inc
mov
into
jne
es
cli
movsb
fwait
sub
das
dec
cmp
adc
xorb
add
push
adc
add
ljmp
fdivl
or
inc
mov
adc
fildl
aam
jb
fwait
subb
addr16
push
sarb
js
popl
fcompl
inc
test
mov
add
test
stc
jmp
sahf
mov
lds
jnp
jbe
or
mov
jle
and
push
fs
push
les
xchg
ja
lea
jae
test
bt
stc
pusha
sub
pushf
call
lret
sub
into
ss
mov
daa
push
fidivrl
mov
push
or
ljmp
dec
mov
xor
insl
inc
lock
inc
test
das
add
mov
jo
mov
popa
push
mov
rclb
push
pusha
mov
xor
pop
pcmpgtd
push
call
lds
jb
hlt
rol
test
sub
dec
into
insb
js
movsb
pop
inc
mov
sbb
dec
inc
add
in
fidivrs
jl
call
push
push
push
xchg
dec
lock
mov
ret
test
repz
cwtl
mov
cld
aas
stos
mov
dec
mov
popf
cmpb
mov
lods
xchg
imul
dec
inc
int
lret
jg
cmp
call
js
scas
dec
fnstsw
pop
xor
inc
imul
mov
imul
int3
xchg
pop
repnz
and
cmp
mov
xchg
lret
push
push
sti
xlat
mov
cmp
lret
fdiv
xchg
sarb
into
inc
and
fstcw
loopne
hlt
insl
mov
in
or
xchg
xchg
jns
xorb
loop
fwait
add
push
mov
in
adc
mov
inc
enter
into
ret
dec
add
cmp
mov
cmp
loopne
push
movsb
sti
test
sub
adc
mov
or
pop
pop
dec
enter
fmull
mov
in
and
xchg
push
gs
js
std
jae
add
sub
call
in
mov
outsb
pop
inc
pop
and
shrl
and
out
pop
sbb
das
lcall
jg
cmpsb
out
sti
lcall
mov
xchg
pop
sub
mov
out
sub
rolb
xchg
jns
jnp
jmp
mov
loop
mov
pop
inc
sarl
cmp
cmpb
mov
or
xor
imulb
push
sub
fcompl
push
mov
push
lock
xchg
lods
inc
arpl
add
inc
test
scas
rorb
dec
ret
jo
adc
cli
mov
sbb
clc
add
inc
lret
push
push
ffree
xchg
xchg
sbb
adc
lea
inc
inc
insb
jecxz
cmp
repnz
pusha
push
movl
lea
jmp
cmp
xlat
bound
fdivrs
jno
mov
xchg
pop
cwtl
mov
push
sbb
adc
test
call
inc
insb
push
rol
movsb
push
dec
push
add
test
mov
ret
sbb
jecxz
adc
lcall
or
cs
mov
add
subl
lcall
shr
into
jmp
pop
inc
jge
es
lods
cli
mov
push
mov
sahf
or
cmpsl
or
sbb
ds
dec
jo
mov
lcall
jmp
cmp
push
jle
stos
mov
repz
fsubrl
jae
aam
ss
out
sti
mov
xor
jl
dec
ss
inc
sbb
and
push
mov
jmp
scas
cmp
loope
or
lds
cmp
dec
pop
clc
mov
sbb
xchg
addr16
jae
aas
inc
cmc
aad
cmp
subb
add
hlt
and
int
fdivl
sub
into
nop
inc
adc
mov
addb
cmp
pop
ljmp
pop
adc
movsb
pop
mov
xchg
pop
push
das
adc
lret
fdivrl
adc
sbb
rcrb
ja
mov
or
and
sub
fcomi
jp
mov
jnp
or
push
add
fs
mov
out
lods
loope
lret
cmc
add
sbb
ficoms
icebp
inc
lret
and
mov
pop
add
inc
popa
mov
sarb
and
dec
pop
sbb
jno
jle
addr16
mov
jge
cmc
test
sarl
sbb
add
insb
sbb
rorb
sub
fdivr
mov
ret
das
mov
lcall
fisttpll
leave
add
pandn
or
addl
loopne
mov
sbb
pop
xchg
fnstsw
add
lds
mov
inc
hlt
mov
push
cmp
mov
dec
and
sub
call
sub
adc
mov
mov
pop
repnz
faddl
scas
arpl
sub
les
fmuls
std
mov
sub
pop
in
sub
out
xor
pop
push
xor
xchg
sarb
pushf
mov
sub
in
mov
pop
enter
dec
loop
pusha
push
mov
lret
fdivrl
dec
push
dec
xchg
mov
mov
sbb
hlt
cmc
test
jecxz
dec
jbe
sub
mov
scas
inc
pop
push
or
adc
pusha
jg
bound
jl
adc
leave
out
int
aam
push
ret
sarl
dec
push
push
pop
leave
lock
sub
fldenv
repnz
pop
or
xchg
adc
es
dec
cmp
inc
stos
mov
and
sbb
mov
and
push
call
xor
push
mov
call
into
rcr
es
fdiv
lret
ret
fmull
repz
sbb
adc
and
ret
lods
adc
pop
adc
in
xchg
cmpl
test
mov
mov
cli
flds
xchg
lods
and
in
shll
jne
or
cmpsl
pop
ficompl
test
jnp
fs
push
movsl
test
cmp
sbb
ret
bt
cmpb
pusha
lea
jne
bsr
ror
call
dec
rolb
lret
fsubl
insl
jecxz
pop
xchg
out
mov
clc
lret
push
mov
test
rcrl
or
movsl
jbe
ljmp
mov
mov
mov
rcrl
jno
loop
mov
pop
adc
dec
pop
bound
cmpsb
rorl
enter
mov
inc
insb
sub
stos
xorb
xchg
lret
aad
xchg
adc
or
adc
pop
popa
aam
cld
push
hlt
lock
nop
xchg
fwait
sub
stc
in
popa
int
and
sbb
orl
mov
inc
dec
rcl
rol
sbb
xor
movzbl
mov
pushf
mov
lea
pusha
lods
pushf
sub
jmp
jmp
popa
in
mull
fsubrl
and
shrb
arpl
imul
call
aam
mov
or
out
aaa
lahf
outsl
push
push
das
iret
mov
leave
jle
movl
rep
js
dec
out
push
rcll
sub
mov
mov
add
mov
mov
xchg
sahf
mov
mov
daa
xor
mov
mov
and
adc
push
add
mov
sub
mov
lods
shlb
xor
mov
dec
jae
enter
imul
or
mov
fdiv
mov
xchg
fsubs
mov
subb
lods
add
mov
dec
cmc
dec
inc
jbe
repz
jl
in
repz
es
ljmp
test
inc
xchg
xlat
aad
stos
mov
outsl
xor
push
xor
push
pusha
and
popf
movsl
push
in
lods
pop
out
jb,pn
jge
mov
push
jns
cmp
jbe
call
mov
shrb
cld
xor
fadd
pop
mov
dec
mov
sbbb
clc
ret
pop
clc
cmpsl
test
test
frstor
cbtw
js
sub
adc
xor
dec
adc
int
aad
mov
pop
sub
in
cmpsl
and
outsl
cmp
mov
call
add
ss
jne
clc
push
mov
fstpl
adcb
mov
scas
mov
inc
aaa
push
iret
or
mov
repnz
loope
pop
mov
xchg
adc
inc
clc
icebp
jp
mov
fmull
fsubr
movsb
aam
jp
aas
sub
test
loopne
nop
pop
sub
popf
jae
add
fwait
test
outsb
jne
loop
inc
test
push
jnp
add
lahf
mov
mov
adc
fmull
sub
mov
inc
in
cltd
fcompl
inc
es
mov
pop
jmp
movaps
pushf
aad
ja
mov
xlat
fs
xor
mov
jmp
call
sbb
mov
cmpsb
aas
pop
andb
lea
ficomps
mov
mov
jae
xchg
jle
shll
and
and
pushf
inc
xor
pop
xchg
pushf
cmp
les
mov
enter
xchg
and
scas
and
adc
jge
mov
fs
push
push
pop
iret
aam
jb
inc
dec
enter
repnz
xchg
std
popf
xlat
js
loope
in
sub
adc
xchg
inc
pop
fucom
clc
mov
pop
pop
bnd
xor
out
sahf
inc
pop
int
rol
nop
mov
cmp
adc
pop
test
or
lret
fcoml
clc
or
inc
int3
les
and
out
lcall
hlt
sbb
dec
mov
dec
cltd
mov
inc
inc
sub
fsubl
sub
arpl
lods
into
xorb
loop
sbb
aas
daa
nop
dec
or
cmpsl
sbb
jecxz
xchg
cwtl
fwait
and
repnz
test
imul
sub
movsl
test
incl
and
fdivrl
push
inc
ret
push
aad
push
adc
out
dec
dec
fucomi
jg
mov
cmp
in
test
dec
push
adc
mov
scas
movsb
xchg
jae
stos
into
mov
or
xchg
out
stos
jae
xor
enter
std
push
hlt
repnz
xchg
pop
fadds
sbb
mov
les
cmp
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
insl
pop
push
lret
fcompl
lds
fbld
inc
inc
and
roll
inc
and
xchg
lahf
cld
mov
mov
incb
sbb
push
adc
lret
fsubrl
ret
stos
xchg
mov
iret
add
das
mov
and
lahf
and
xchg
push
xor
fs
dec
inc
in
dec
fldenv
inc
push
out
xor
stc
cmpsb
jmp
push
dec
and
fsubl
adc
adc
out
push
arpl
shr
call
insb
inc
pop
jo
jne
loop
xchg
arpl
sbb
orb
orl
mov
aas
sbb
aaa
push
push
daa
cs
adc
imul
lock
fsincos
push
out
mov
mov
jle
lods
xchg
ror
pop
out
lock
mov
repnz
insb
jp
push
test
js
scas
arpl
icebp
inc
dec
into
out
xlat
cld
inc
cmp
cmpl
arpl
push
and
faddl
scas
pcmpgtb
sub
pushf
sbb
add
lret
addr16
pop
shll
adc
inc
shrb
cmpsl
ja
pop
xor
cwtl
sbb
xchg
scas
fs
and
out
mov
sbb
lret
adc
and
icebp
icebp
rclb
dec
cmp
sub
cmp
mov
loop
cli
js
cltd
pop
pop
out
xlat
adc
fiaddl
push
inc
test
setbe
ss
movsb
or
xlat
cwtl
lea
jb
clc
bt
push
cmp
pushf
call
pushf
pusha
jmp
mov
stc
repnz
pusha
movb
jmp
cmpb
add
xor
shlb
sbb
mov
lock
test
daa
pop
sbb
xchg
fstenv
adcl
jns
out
dec
test
sub
add
and
mov
jl
enter
negl
call
lahf
dec
jo
mov
sub
push
ja
outsl
cmp
jg
movsb
ds
mov
adc
inc
movzbw
add
add
pusha
mov
mov
test
pusha
mov
movb
cmp
repnz
pushl
lea
jmp
ss
mov
xor
leave
mov
push
out
xlat
mov
xchg
xor
shr
imul
shl
jle
dec
mov
cmp
fimuls
call
lahf
mov
in
add
aad
test
clc
sub
pop
leave
push
negl
aas
mulb
pop
inc
into
mov
cltd
dec
push
push
mov
imul
cwtl
neg
out
pop
pop
repnz
jg
dec
inc
movsb
xor
mov
mov
dec
pop
add
sbb
das
or
cli
imull
pop
dec
jl
xchg
lea
ret
repz
jg
jl
in
and
push
lret
faddl
mov
pusha
adc
scas
mov
dec
ds
ret
jae
pusha
xor
mov
dec
mov
push
stos
xchg
aam
or
lahf
pop
cmp
ficoms
sub
lret
faddl
cmp
int3
or
mov
dec
imull
popa
fadds
stos
or
dec
es
fiadds
cmp
je
sbb
inc
add
fmuls
pop
jae
out
lcall
push
outsb
pop
sub
jl
sub
std
sub
lods
lods
jns
rcll
and
scas
or
dec
push
adc
jo
adc
leave
out
mov
sub
adc
xor
inc
mov
push
aad
push
pop
cmp
or
lock
fnstsw
inc
sbb
jns
ja
xor
and
mov
cmc
outsl
test
and
dec
sbb
ss
test
hlt
mov
xchg
xor
negb
and
sbb
jl
push
jg
ret
repnz
imul
jne
gs
pop
stos
xchg
dec
xchg
inc
add
jecxz
aas
jmp
jl
mov
inc
adc
or
xlat
add
add
and
imul
in
aas
out
js
push
call
call
bswap
bswap
movzbl
push
movsbw
movzbw
cwtl
jmp
mov
pushf
sbb
fsub
mov
and
mov
cmp
cmp
fs
or
repz
add
jno
xchg
sub
or
pop
pop
shrb
lret
fdivrp
test
or
mov
orb
pop
xor
fistl
fwait
cld
lret
out
push
jecxz
pop
lods
sub
out
loopne
sub
push
push
lret
and
push
add
jae
jo
jne
lcall
or
or
fadd
outsb
jl
stos
mov
cmp
mov
xchg
dec
inc
pushf
xor
xor
mov
orl
ret
das
xor
rcrb
push
push
ss
std
fsubs
cmp
xchg
mull
sub
jo
lahf
add
pop
daa
out
cmp
popl
std
lds
xchg
int
bound
insb
pop
test
icebp
mov
jb
lret
fmull
jnp
mov
test
rol
jo
call
jb
adc
sub
ss
push
push
dec
push
movsb
lods
mov
into
jmp
sbb
insb
sub
pcmpeqb
mov
or
mov
out
xlat
mov
cmp
mov
imul
add
inc
mov
add
sub
lret
test
dec
sub
mov
in
in
jge
adc
push
mov
and
rcrb
loope
aas
loopne
into
cs
or
les
shlb
addr16
mulb
fidivs
adc
imul
mov
mov
cmpb
mov
pop
out
pop
push
out
in
mov
daa
test
push
sbb
cmpsl
addr16
or
out
push
sub
cmp
mov
loope
or
mov
repz
test
jo
add
or
lahf
lea
ja
call
mov
sbb
fsubrl
nop
mov
xchg
ljmp
sbb
fidivs
iret
jl
inc
push
jnp
jo
add
movsb
das
out
inc
test
out
inc
add
imul
pushf
push
or
lcall
out
cmpsb
adc
mov
stos
xor
and
mov
xchg
add
inc
or
cs
push
lahf
sbb
and
jmp
stos
rorb
inc
pushf
call
and
pop
xor
push
xchg
les
and
cmpsb
sub
and
push
push
xlat
stos
mov
xor
mov
xlat
add
mov
xchg
xor
dec
movsb
pop
and
out
imulb
cmp
jmp
dec
mov
in
ljmp
xchg
push
lret
aad
pushf
out
and
aas
addr16
idivl
inc
xor
cmc
outsb
and
into
dec
rol
nop
fcmovnb
pop
cmpsl
mov
add
std
mov
imul
mov
popa
adc
cmp
add
cmpsb
stos
jnp
xor
lret
fdivrl
mov
mov
mov
jbe
out
mov
stos
push
lock
pop
outsl
mov
cmp
dec
stc
pop
push
out
aam
pop
xor
xchg
icebp
jl
jmp
ret
jnp
loopne
aad
add
inc
cltd
pusha
mov
jmp
and
cmp
adc
xchg
ret
mov
lcall
add
adc
fcmovu
jp
mov
mov
setne
push
add
lea
test
shrd
cwtl
das
sub
btc
not
or
push
bsf
stc
push
shl
cmp
aad
push
sub
xor
xor
cwtl
cwtl
pushf
lea
push
push
pushl
mov
pushf
mov
bswap
pushf
mov
jmp
movl
push
movl
movl
pusha
mov
pushf
lea
jmp
sub
bt
test
shl
pushf
bt
pushl
mov
test
pushf
cmp
cmp
jmp
movsbw
movl
lahf
bswap
movsbl
lea
mov
jmp
xchg
jmp
cmc
mov
cmp
jmp
call
push
mov
jmp
jmp
movl
pusha
lea
jmp
push
movsbw
stc
add
shl
push
xadd
cmc
test
shrd
lea
rol
shl
mov
seta
rol
not
sub
pushf
add
push
call
lea
pushf
pushl
mov
pushl
lea
jmp
jg
repnz
lret
fmull
mov
jl
les
stc
movsb
das
clc
stos
dec
and
inc
add
into
test
sub
sub
ret
js
sahf
mov
leave
sbbl
enter
fmull
xchg
mov
aad
mov
mov
mov
loopne
ret
push
test
dec
dec
inc
out
test
push
add
push
inc
movsb
pop
cmpsb
cmpsl
inc
push
adc
or
sub
scas
shl
movl
pushf
jmp
mov
bts
btc
rcl
mov
btr
cmc
neg
mov
shl
bsr
bsf
mov
rcl
pushf
adc
cmp
mov
rcl
lea
sub
neg
shld
bt
lea
mov
lea
movsbw
mov
mov
sub
bts
stc
daa
and
movzbw
mov
call
jno
sub
lret
fdivl
ret
addr16
jno
les
fs
mov
sbb
adcb
push
fcmovnu
lret
push
repz
les
outsb
or
jb
shl
cmp
xchg
addr16
dec
pop
mov
push
lret
fdivrl
test
xor
inc
mov
dec
push
notb
push
in
mov
or
rorl
xor
leave
scas
cmpsb
push
or
add
lds
fwait
pop
jo
sub
cmp
or
jg
cmp
mov
pop
xor
mov
mov
and
add
mov
dec
movsb
pop
lods
pushf
or
xchg
call
mov
jnp
pop
mov
xchg
pop
or
dec
push
push
lret
fsubl
cli
nop
ret
mov
ds
in
mov
int
push
ret
data16
mov
jae
pop
in
iret
inc
mov
mov
xor
fwait
lock
js
xor
dec
cmp
sub
in
pop
push
lahf
xchg
icebp
jmp
fnstsw
pop
adc
in
fwait
mov
push
push
mov
shll
mov
repz
cmc
out
repnz
jns
mov
mulb
push
pushf
daa
sarb
push
adc
mov
ret
adc
enter
call
in
and
or
clc
bound
clc
mov
adc
or
xchg
fwait
push
dec
hlt
mov
es
imul
sub
push
scas
push
cmp
hlt
fiaddl
adc
and
cltd
push
cmpsl
es
add
negb
cmp
cmp
mov
cmp
in
sbb
adcb
lcall
push
addb
mov
fwait
stos
stc
rcrl
mov
mov
rol
fdivs
out
sbb
ljmp
and
clc
cmp
xor
cli
mov
or
xbegin
xor
mov
call
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
or
fdivl
in
lods
addr16
addb
xor
or
je
test
stos
cwtl
push
jne
mov
or
pop
scas
push
xlat
scas
sbb
mov
incl
mov
jle
cs
pop
and
fstpt
stc
gs
pushf
mov
jl
pop
sbb
or
rolb
mov
sahf
jmp
dec
fimull
nop
mov
mov
push
clc
ja
icebp
jbe
sub
sbb
xchg
sub
mov
pop
or
cli
inc
cmp
pop
mov
and
jno
add
xor
add
inc
int3
icebp
arpl
sar
lods
pop
mov
pop
xchg
fs
fisttpll
mov
xchg
mov
mov
or
inc
jg
shll
mov
add
sbb
xor
imulb
gs
mov
jmp
sub
rol
stc
lea
test
cmp
cmp
jmp
setle
lea
push
bswap
movzwl
call
lea
jb
not
cltd
aam
movzbl
bt
neg
jmp
lea
sub
not
pushf
stc
clc
mov
movzbw
ror
push
add
push
and
and
mov
bsf
cmc
test
mov
pushf
cmp
pusha
jmp
test
fstl
mov
aad
xchg
mov
stc
lahf
cmp
xchg
lcall
jo
mov
sub
fs
imul
xor
out
pop
sbb
and
inc
xchg
test
ret
mov
test
sbb
inc
push
gs
sti
lcall
jl
and
xor
stos
push
pop
or
pop
cs
ret
fdivl
dec
and
movsb
insb
movsb
push
imul
sub
negl
mov
push
or
jno
fbld
imul
int
dec
jmp
cld
xor
das
iret
shl
mov
popl
pusha
test
shl
shlb
xorl
mov
add
pop
scas
loope
ljmp
mov
flds
inc
push
push
ja
sub
lds
sbb
insb
xchg
inc
sub
push
outsb
les
pop
imul
push
lret
mov
lcall
cmpsb
out
jp,pn
dec
lret
mov
imul
sti
mov
pusha
and
mov
das
sahf
sbb
shll
jp
sbb
push
fwait
mov
bound
or
push
pop
cmp
imul
icebp
ret
jmp
and
pop
mov
mov
cmpsb
aam
or
jb
push
or
leave
shll
inc
and
sbb
pop
stc
jmp
mov
mov
insb
push
adc
jno
in
push
jns
cmp
inc
fwait
xor
jge
ds
jp
dec
repz
adc
mov
sub
iret
xchg
cs
pop
shl
jp
shll
cltd
jno
addr16
mov
xchg
ficomps
pop
xchg
leave
or
insb
or
add
pop
aaa
xor
dec
popa
or
jb
pusha
call
mov
sbb
mov
mov
nop
sbb
dec
sbb
mov
loop
jle
sub
dec
dec
xchg
hlt
imul
cmp
inc
jne
xor
movsl
in
aaa
cs
inc
sbb
mov
je
add
jmp
add
dec
outsl
popa
fs
imul
add
xchg
mov
pop
push
pushl
movl
movl
movb
pushf
lea
jmp
cld
sub
lcall
testl
inc
movsb
jmp
push
pop
or
and
fistps
icebp
sahf
outsb
sub
jp
cmpsl
or
fstl
mov
jns
jbe
push
xor
test
xlat
test
inc
xor
arpl
jl
mov
repnz
inc
cmp
xor
inc
ret
sbb
adc
lret
repz
mov
lea
jne
btc
mov
sbb
neg
test
lea
sub
movsbl
or
shr
shl
mov
call
call
xor
fcoml
les
test
add
not
cli
int
xor
movsl
mov
sbb
ds
inc
push
ja
je
cmpsb
gs
test
sbb
jge
push
test
push
adc
cmp
lret
xor
xlat
push
xchg
jg
sbb
sub
into
imul
pop
dec
daa
outsl
or
into
sub
mov
cld
adc
mov
fsub
shrl
out
mov
mov
pushl
lea
call
xchg
stos
mov
cmpsl
pop
xchg
aaa
lcall
pusha
dec
jg
pop
xor
inc
mov
movb
fs
in
inc
pushf
hlt
jg
shll
jae
jb
xchg
fdivrs
mov
jmp
aad
add
lret
push
xor
cmp
cmp
das
sub
mov
hlt
insb
jl
out
outsb
xlat
and
int
data16
pop
and
jae
lret
fsubrl
rolb
lahf
movb
imul
pushf
add
in
mov
dec
pop
or
filds
jb
cltd
push
push
cmp
call
imul
shl
sbb
ret
push
dec
add
dec
sti
repnz
lahf
frstor
and
xchg
sub
nop
xor
test
add
or
pop
orb
or
insl
lds
add
out
or
movsb
test
mov
imull
rcrb
dec
cld
push
gs
sub
shrd
not
shl
add
sbb
mov
clc
adc
or
cmp
mov
bt
clc
clc
repnz
pusha
pushf
jmp
pusha
or
jmp
pushw
xchg
or
fsub
push
cmp
push
cmp
lahf
sub
aaa
addr16
lcall
lds
add
lret
jecxz
cmpsb
iret
mov
push
out
and
lcall
or
mov
repz
cltd
int
sarl
or
shr
stc
mov
jbe
test
jp
or
jmp
xchg
or
int
jg
nop
mov
xchg
or
lcall
or
add
insl
xchg
dec
xor
sbb
mov
push
push
iret
pop
add
add
mov
push
mov
pop
cwtl
and
mov
jno
xchg
outsl
jp
in
ja
les
xor
cmp
lret
faddl
pop
sbb
std
jno
mov
daa
lret
mov
inc
test
stos
cmp
hlt
lea
ficoml
insb
stos
test
dec
dec
push
sbb
and
or
and
mov
movsl
jl
push
pop
std
clc
std
jle
unpcklps
sbb
dec
cmp
mov
cmp
xchg
call
shlb
push
add
xchg
cld
mov
or
out
sarl
add
enter
cmp
sbb
cs
mov
insl
movsb
dec
inc
scas
lea
xchg
xor
pop
push
xchg
mov
cmpsl
adc
mov
test
das
jo
repnz
lods
cltd
mov
fistps
lods
pop
fwait
push
xchg
sbb
push
mov
aas
add
je
or
mov
pop
lea
push
lods
sub
sub
dec
push
jl
xchg
mov
daa
icebp
ficompl
pushl
jmp
inc
mov
adc
lret
sub
xor
add
push
out
add
test
push
pop
push
fidivrs
xor
and
pop
popf
xchg
inc
rcrl
cmp
mov
mov
imul
mov
orl
pop
dec
pop
icebp
out
jb
add
test
hlt
call
xor
and
jg
push
mov
nop
mov
push
pop
sbb
dec
daa
jmp
dec
out
aaa
out
sub
cltd
popl
push
push
fcomp
dec
sub
enter
or
fsubrl
jae
setne
xchg
ss
pop
inc
pop
inc
adc
pop
rorb
mov
mov
enter
int
add
adc
ja
fs
test
rolb
adc
test
loop
fcomip
ss
lock
adc
scas
mov
neg
gs
and
ja
adc
nop
or
and
adc
jbe
mov
loope
test
iret
insl
call
call
jp
push
or
fmull
cmpsb
in
mov
aaa
stc
inc
push
pop
pop
mov
add
addb
mov
push
dec
shlb
inc
xor
out
nop
in
xchg
cwtl
push
fdivs
adc
cli
ss
int
sbb
mov
gs
lods
push
stos
add
lods
pusha
cmp
mov
cmp
inc
jns
push
pop
mov
xchg
inc
pop
ret
aad
jp
fs
pusha
push
sbb
call
cltd
sbb
and
push
pop
test
movsl
popf
or
fdivrl
mov
sub
dec
test
mov
mov
xor
add
jb
shll
jp
mov
in
sbb
sbb
sub
lea
mov
pop
push
jb
ljmp
leave
test
pop
adc
aam
dec
ja
mov
mov
dec
out
loop
out
dec
je
loopne
rcll
stc
popf
dec
xchg
scas
adc
std
sub
leave
in
add
mov
mov
out
jmp
movsl
pushl
ljmp
in
mov
push
pop
jae
xlat
repnz
cmp
cmp
faddp
ret
xor
pop
fisubrl
bound
inc
mov
inc
js
movsl
scas
xchg
adc
pop
push
lods
lea
jb
push
stc
cmpb
jmp
jecxz
lods
or
fmul
cwtl
lds
fistpl
ss
in
mov
loope
rolb
movsb
pop
imul
dec
mov
sbb
std
es
in
push
sti
lret
mov
repz
gs
jge
jno
inc
out
sbb
add
cltd
jae
ja
xchg
pop
inc
mov
mov
in
sbb
xchg
dec
mov
clc
test
sub
push
jo
orb
fs
dec
in
jmp
jmp
jmp
inc
test
aad
pushf
imulb
push
and
in
cs
jns
movsl
sub
aad
sbb
jno
xchg
int3
cltd
mov
aam
inc
and
fcomip
cltd
lods
imul
popa
push
cld
je
mov
mul
jg
inc
xchg
sbb
jp
test
jmp
lea
mov
ss
out
jno
adc
ficoml
divl
hlt
lret
bound
test
xor
xchg
jge
arpl
and
fcmovu
xchg
or
stc
call
xorl
enter
jo
xchg
xor
or
ja
inc
and
es
gs
cmc
sub
clc
pushf
btc
pushf
lea
jmp
test
test
mov
lea
jmp
mov
add
lret
fdivrl
hlt
rol
xchg
cmpsl
mov
add
scas
mov
xor
mov
xchg
sahf
test
mov
pop
ss
enter
xchg
call
inc
lret
mov
and
mov
mov
ret
aam
fistpl
ja
and
push
or
mov
sbb
loopne
inc
dec
rorb
fcmovnbe
mov
sub
push
pushl
popl
jmp
pushf
lea
jne
not
shr
xadd
xadd
mov
lea
shl
test
sub
bt
shl
mov
push
clc
sub
pushf
pushl
popl
movb
call
test
sub
nop
mov
sbb
pop
xor
bound
call
icebp
ret
ja
cmp
lods
gs
imul
test
dec
inc
add
cmpsl
gs
push
pusha
insb
iret
notb
pop
cld
jle
sbb
cmp
xorl
cmp
pusha
arpl
lret
not
cmp
shrb
lods
inc
adc
add
pop
lods
mov
shlb
out
jbe
mov
cmp
out
xor
lahf
std
cmp
dec
or
clc
sub
xchg
bsr
shld
sub
inc
test
adc
mov
lea
bt
or
mov
xadd
xchg
add
and
js
not
rol
shr
adc
mov
add
ror
add
not
mov
pushf
jmp
test
fcoml
mov
movsb
xchg
xor
add
jne
outsl
jge
sub
in
cltd
fmul
jno
ror
loop
xor
lods
xchg
pop
xchg
xor
cmp
mov
xchg
pushl
pop
das
cs
cltd
and
dec
daa
mov
adc
mov
sub
mov
jl
jb
or
cld
mov
and
in
call
outsb
out
mov
dec
mov
mov
pusha
ret
std
fstpl
mov
push
repz
push
data16
push
int
lret
fcompl
mov
lods
xor
cmp
jmp
rcrl
xor
inc
mov
adc
and
imul
push
repz
add
mov
add
push
jl
lahf
mov
sti
cltd
into
and
and
in
insb
add
in
aaa
rcrb
pop
in
pop
add
gs
mov
jne
shlb
xchg
pop
and
loope
cs
xor
jb
repnz
lahf
and
mov
mulb
outsb
add
fmull
mov
inc
jo
ret
imul
insb
gs
lret
xlat
aas
in
mov
fs
pop
adc
test
cltd
dec
sub
in
cmp
dec
pop
add
fsubrl
mov
xor
fnstsw
fwait
push
xor
stos
hlt
ljmp
fiaddl
adc
outsl
std
fs
jae
or
or
rclb
push
cmpsb
out
inc
dec
mov
inc
pop
test
mov
xlat
mov
paddusw
xorb
fsubrl
lahf
movsl
sub
rclb
xlat
fwait
popa
leave
add
cltd
adc
lret
sbb
and
pop
mov
in
ficompl
adcb
mov
into
int
add
sub
xor
mov
shl
jnp
pop
jl
int
movsb
fldt
loope
adc
mov
cmpsb
sub
aaa
sub
cmp
cmp
jmp
popa
add
add
faddl
mov
pop
je
es
xor
pop
jno
jg
icebp
sub
inc
inc
jbe
punpckhbw
dec
mov
dec
jg
loope
or
inc
xchg
out
mov
lods
adc
dec
inc
cmp
insb
sahf
push
lods
push
push
sahf
ret
ljmp
rcrl
dec
loop
or
add
fdiv
lahf
test
imul
adcl
add
lahf
imul
lahf
js
aaa
and
cld
and
add
nop
mov
imul
fs
adc
mov
shr
insb
mov
sbb
clc
mov
pushf
test
cmc
stc
test
jmp
test
add
faddl
mov
push
push
jp
ficoms
pusha
xlat
add
xchg
xlat
loope
int3
cmc
lcall
xor
pop
pusha
dec
mov
mov
adc
lods
xchg
daa
mov
jle
mov
test
push
xchg
push
scas
test
or
clc
pop
lock
push
cmp
sahf
aam
pmaxub
out
mov
fdivrs
icebp
pusha
shlb
out
push
or
mov
add
dec
shlb
clc
std
sbb
loope
jp
addr16
testl
call
sbb
dec
cld
loope
adc
mov
push
aaa
push
xor
cltd
les
movb
and
test
xchg
add
xchg
xor
loop
xor
mov
ret
orl
clc
stc
bt
clc
cmpb
pushf
lea
jne
pusha
pusha
jmp
push
lea
jne
shl
bt
rcr
xor
aaa
cwtl
shrd
inc
mov
push
add
pusha
cmp
mov
clc
test
call
pusha
pushf
add
push
cmp
movw
call
xor
mov
test
xor
mov
jp
dec
xor
push
mov
jg
imul
out
ret
subb
mov
addl
mov
pushf
cmp
mov
adc
sti
fs
mov
cmp
les
and
mul
or
sub
popa
jns
test
fstl
xor
imul
adc
pop
sbb
cmp
aas
adc
cmpsl
pop
sbb
divl
or
les
jae
test
stc
sub
cmp
cmp
cwtl
movsbw
push
movsbw
lea
lea
jmp
jmp
push
daa
pop
add
fsubrl
outsl
jno
sub
fisttps
ja
or
jbe
sub
shl
pop
xchg
mov
sub
cli
int3
jmp
test
loopne
insl
mov
arpl
outsb
push
xor
pop
or
cmpl
cmp
fcompl
adc
cli
xchg
scas
dec
repnz
addb
repnz
ror
xchg
repnz
cmp
mov
dec
fsubrl
int
icebp
cltd
xchg
or
test
jo,pt
sub
sbb
shlb
loopne
jg
pop
inc
pop
nop
bnd
dec
xchg
xorl
test
sbb
ret
sbb
out
jne
add
adc
out
pop
imul
loop
lahf
dec
push
pop
push
out
jmp
aas
out
nop
orb
int3
sbb
sbb
pop
pushf
cmp
mov
lea
jmp
dec
orl
or
add
arpl
push
sbb
cmpsb
pop
push
cmp
jns
scas
or
not
clc
call
cmp
pop
ret
lods
mov
jl
imul
add
lods
pop
call
ss
cmp
mov
loop
repnz
xchg
sub
inc
jecxz
mov
or
testb
mov
ljmp
adc
ja
loopne
sbb
in
ret
sbb
fs
jb
test
dec
shld
clc
cmp
lahf
cwtl
mov
pushf
mov
call
test
pusha
call
jmp
jno
ret
std
lret
iret
sti
dec
arpl
mov
mov
and
dec
mov
js
xlat
pop
mov
icebp
xchg
inc
pop
orl
popf
adc
mov
and
or
cmp
sbb
dec
ljmp
xor
adc
fistpl
cmp
mov
cmp
sub
pop
sub
loop
int
mov
lock
jbe
xor
fdivl
dec
out
and
pushf
fsubrl
xlat
dec
je
pusha
pushf
and
enter
push
cmpb
pushl
or
js
test
std
lret
clc
add
fisttpll
popf
stos
repz
out
popf
add
sbb
and
push
cld
fnstcw
adc
dec
test
jecxz
pop
adc
push
push
jbe
scas
rol
into
cwtl
into
int
clc
lock
repnz
cmp
nop
and
pop
sar
adc
pop
mov
sbb
hlt
mov
push
inc
cs
push
data16
pushf
fucomp
and
or
ret
xor
not
lahf
movsbw
mov
lea
jae
push
movsbw
lea
push
pusha
pushf
movl
push
push
pushl
popl
pushl
pushl
pushf
mov
pushl
ret
call
fdivl
jmp
jb
xchg
scas
push
jno
ljmpw
ret
test
and
aas
lods
stc
xchg
shrl
imul
push
dec
or
int3
aas
xchg
gs
ficoms
xchg
and
into
xor
adc
sti
sarl
pop
push
popf
pop
cwtl
cltd
cmp
mov
xchg
cmp
xchg
push
mov
push
loope
test
mov
mov
mov
ret
lcall
repz
lret
pop
dec
lret
enter
call
cwtl
bnd
dec
shl
mov
xchg
cmc
sub
loope
lcall
cmpsb
cmpsl
inc
loope
dec
insb
xchg
mov
mov
loopne
cwtl
int3
cmovs
pop
popa
shlb
pop
sbb
lahf
inc
aaa
pop
xor
bound
xchg
popa
orb
scas
fnstenv
lcall
push
add
out
jo
cs
jns
xchg
jbe
je
cwtl
mov
mov
xchg
sub
ret
std
mov
cmp
mov
clc
xor
mov
movsbw
stc
mov
shld
test
push
shl
sub
bsr
pusha
shld
adc
mov
sub
shl
not
pushf
mov
not
inc
aaa
sub
neg
sbb
cwtl
and
movsbw
lahf
mov
mov
jmp
jge
mov
pop
aas
icebp
cli
stc
adc
push
jns
dec
pop
mov
daa
lret
xor
cmp
lds
mov
outsl
jmp
dec
add
clc
pop
xor
push
dec
loop
dec
aad
xor
ffreep
inc
and
out
dec
nopl
fs
ja
jmp
or
jge
lret
test
or
out
sbb
or
ljmp
pusha
pop
or
or
lahf
mov
scas
dec
mov
in
ljmp
mov
mov
in
mov
mov
scas
cmp
sbb
mov
dec
push
cmp
int3
loope
dec
pop
stc
mov
lea
imul
sbb
jmp
lcall
fs
jmp
xchg
pop
sar
lret
sub
fidivs
loopne
xor
push
int3
xchg
push
lods
sub
stos
mov
lea
inc
fwait
inc
lret
insl
and
adc
adc
jno
fwait
pop
jnp
mov
out
inc
or
sub
jecxz
dec
mov
aad
stos
xor
icebp
pop
adc
dec
aam
ljmp
mov
sub
xchg
or
ljmp
add
ja
popf
or
cmp
lret
test
jp
lret
loope
in
insb
aas
enter
int
in
fwait
mov
sub
fistpl
sti
xchg
int
das
loopne
push
mov
xor
mov
aad
mov
push
lods
movsl
mov
sub
insl
mov
test
out
rolb
add
dec
adc
std
add
push
rclb
mov
test
cmp
cli
and
js
adc
dec
xor
mov
mov
mov
dec
cmp
stos
popf
cmp
popf
aad
enter
pop
or
inc
jno
and
add
jb
jne
in
push
pusha
stc
lret
dec
fldenv
adc
xor
mov
pop
pop
enter
adc
imul
fisubrs
xchg
into
xchg
out
sbb
jmp
xchg
stc
mov
cld
movsl
sub
push
and
in
add
sbb
xor
jge
leave
pushf
rcll
adc
ret
lret
shrl
hlt
sti
orl
and
dec
push
dec
dec
adc
push
ja
xchg
gs
test
out
sub
dec
negb
imul
dec
stc
lret
inc
int3
out
cli
in
stos
outsb
loop
daa
scas
xchg
push
push
dec
sbb
insl
xlat
mov
xchg
orl
jo
test
ret
inc
add
xchg
push
testl
aas
xchg
push
adc
pushf
cmp
add
pushf
out
push
jmp
and
testb
push
loop
push
ljmp
jmp
lea
andb
and
jne
rol
mov
clc
add
call
lea
jne
bts
or
mov
and
stc
movzbw
movzbw
sub
bswap
mov
call
xor
sar
aam
pop
mov
cmp
shl
not
cmc
add
pushf
ror
mov
push
test
lea
jmp
ds
lret
fwait
or
adcb
push
sub
add
loopne
pop
rcll
xchg
xor
xchg
out
fdivl
sbbl
inc
test
mov
mov
inc
cmpb
hlt
jns
ficompl
sarl
out
adc
gs
cmp
out
fisubrs
mov
jmp
dec
sarl
insb
xor
or
mov
adc
jecxz
mov
push
lds
lret
mov
popa
sbb
adc
push
mov
xchg
mov
and
xlat
pusha
push
es
nop
sbb
jmp
dec
jmp
cmp
sub
mov
xchg
jb
stc
ret
loop
ret
and
scas
jbe
push
push
outsb
movnti
outsb
push
xchg
orl
mov
mov
shl
lea
call
pop
ret
xchg
loopne
or
test
xor
aad
mov
aam
xor
xor
xor
mov
mov
or
lds
adc
xor
subb
sar
xor
adc
stc
adc
xor
mov
xor
fsubrl
adc
xor
ret
test
jl
cmpsb
jnp
sbb
cld
xor
mov
jmp
cmpsb
or
sub
aam
xor
in
adc
aad
xor
sbb
incl
jnp
sub
sarl
jmp
in
rorl
cmpsb
adc
and
test
mov
mov
mov
pop
mov
aam
xor
inc
cmc
test
aam
xor
cmc
inc
adc
xor
fdivrl
test
cmp
cmpsb
jnp
sbb
popl
test
cmp
cmpsb
jnp
test
test
cld
xor
ljmp
mov
or
xor
or
add
sar
xor
cmc
cs
adc
xor
cmp
test
jl
cmpsb
jnp
test
je
sub
mov
ret
xor
jle
lods
jnp
and
xchg
jge
xchg
stos
stc
jle
push
or
sbb
cmpsb
hlt
lret
xchg
mov
fsubrp
and
scas
push
loop
in
pop
icebp
imul
jne
fmuls
cmpsb
dec
orb
stc
pop
out
dec
andl
sub
ljmp
sub
lret
sarl
sbb
aam
sbb
pop
mov
push
fsubl
call
lea
ret
pop
sub
cmp
adc
std
pusha
sarl
gs
aaa
test
lods
mov
mov
lret
aam
ret
test
push
int
sarl
hlt
repnz
sub
aam
pop
int
arpl
cmp
push
fiadds
xor
and
or
aaa
jp
enter
push
pop
ret
and
mov
fdivrp
mov
ss
sbb
add
stos
loopne
or
cmpsl
sbb
xor
imul
lock
dec
push
jecxz
testl
stc
push
jmp
divb
data16
jno
cmp
dec
fidivs
sete
movsbw
mov
pushf
mov
pusha
call
sbb
fdivl
fimuls
stc
xchg
dec
lods
shrl
pop
jb
fs
inc
push
xchg
rcll
ret
adcl
mov
dec
test
int3
push
inc
add
lock
mov
xor
xorb
ret
push
mov
loope
dec
test
dec
imul
ret
jp
sub
dec
test
xchg
lods
mov
rolb
loop
add
xchg
aam
hlt
lret
lods
fcomps
sub
mov
mov
push
rorb
mov
add
std
push
mov
and
aam
push
insb
mov
cs
mov
xor
jle
mov
test
xchg
movsl
xchg
mov
gs
incb
pop
xor
std
jle
inc
mov
je
das
and
daa
rolb
or
int
dec
lock
and
pop
cli
xchg
ljmp
sahf
mov
in
xorl
inc
aad
fmulp
jp
sbb
lods
adc
popf
test
lret
xchg
mov
test
mov
test
mov
mov
cmpsl
xchg
inc
inc
lret
icebp
jecxz
push
enter
mov
test
and
decl
sbbl
jp
adcb
scas
outsl
xor
rcl
movsl
cwtl
adc
xchg
aam
mov
stos
mov
aas
or
scas
adc
xchg
shrb
xchg
lods
sub
xchg
jmp
push
cltd
inc
dec
in
push
push
or
mov
mov
jmp
dec
push
movl
pushf
pushf
pusha
mov
lea
jmp
dec
stos
mov
out
jb
mov
cmp
stos
cmpsb
jmp
stos
cmp
sub
loopne,pt
jmp
daa
jnp
inc
fnstenv
adc
mov
jp
sbb
jns
dec
dec
std
xchg
gs
mov
shll
jae
xchg
jns
pop
addr16
mov
pop
add
inc
mov
pushf
stos
dec
out
mov
mov
je
in
and
addr16
dec
or
jno
cmpsl
sbb
int3
pop
in
mov
pop
int3
mov
in
adc
sbb
lret
mov
sarl
sub
je
sbb
push
enter
imul
xchg
sub
lods
adc
fdivs
gs
sbb
xchg
inc
pop
mov
addb
sub
jg
and
insb
aas
inc
aaa
pop
call
lcall
imul
outsb
popf
mov
out
out
cmc
pop
fmull
xor
mov
mov
mov
jae
sub
add
lret
dec
cmp
and
pop
int
jle
jle
pop
or
leave
cmp
shr
push
repnz
jno
inc
pop
push
lcall
inc
adc
arpl
in
pop
icebp
cli
notl
push
or
hlt
mov
cmp
cmpsl
push
lock
xor
jmp
test
jne
and
push
loop
add
jl
cld
lret
mov
aaa
cmc
lods
shll
inc
xchg
int
jmp
and
jp
jns
jge
mov
lret
xchg
popf
mov
and
mov
cmp
jbe
mov
repz
and
mov
ficoms
test
leave
cmp
daa
scas
mov
mov
jp
cli
mov
lahf
xor
mov
add
mov
sub
dec
arpl
sub
ss
push
sub
push
xchg
inc
adc
mov
jge
fdivrs
jae
add
jg
icebp
xchg
jne
popa
imul
clc
and
cltd
out
push
test
adcb
dec
rcll
test
popf
mov
out
xchg
push
adc
cmp
cmpsb
xor
cmp
repz
sub
jbe
inc
lods
inc
out
and
adc
insb
lock
pop
lods
out
mov
pop
fstp
jl
lea
or
shll
lods
mov
repnz
mov
sbb
mov
rolb
push
sarb
sti
repz
lret
std
jg
fiadds
xchg
push
push
push
pop
test
lds
loop
inc
mov
dec
or
cmpsb
gs
popl
pusha
and
scas
hlt
or
push
jne
or
fdivrl
test
les
gs
aaa
out
adc
movsb
fisttpl
adc
orl
bnd
subl
mov
repnz
data16
daa
ror
cmp
cmc
mov
pushf
bt
stc
jmp
jmp
jge
stos
mov
adc
mov
mov
jl
xchg
push
loop
loop
clc
mov
fadds
bnd
add
test
scas
out
cmp
inc
mov
and
jo
mov
arpl
aad
int3
ss
jg
jns
xorl
dec
test
dec
pop
jmp
xchg
es
js
jbe
push
mov
mov
mov
sub
nop
mov
adc
and
out
jl
xlat
or
pop
sarb
mov
cmp
icebp
and
dec
or
push
rcll
cmpl
mov
fistl
lret
inc
cmp
repnz
in
das
in
pop
mov
call
xchg
mov
loope
push
add
mov
or
xlat
sbb
out
sbb
stos
pop
sbb
dec
mov
inc
mov
mov
mov
inc
pop
call
inc
sub
mov
xchg
bound
iret
arpl
test
rcll
mov
les
popa
cltd
rclb
cli
cmp
dec
sub
mov
jb
push
adc
cs
ret
stos
pop
into
js
in
pop
xor
movsl
or
push
dec
lret
and
pop
pop
fidivrs
jne
ds
je
icebp
sbbl
mov
imul
push
dec
lods
sub
dec
add
std
sbb
jns
psubq
mov
leave
daa
push
sub
mov
lods
jg
dec
and
pusha
pushl
popl
push
mov
call
outsl
addr16
lret
pop
and
fisttps
andl
mov
mov
mov
push
scas
pop
cmp
pushf
dec
fiaddl
or
aaa
bound
xchg
sub
cld
cmp
andb
sub
loopne
jl
ss
in
int
mov
push
push
push
push
fstps
pop
mov
cld
stos
sbb
cs
popf
dec
adc
xchg
sub
cld
lret
jecxz
fldcw
je
xchg
add
nop
bound
lret
inc
pop
sbb
aaa
ja
mov
push
inc
iret
mov
xchg
cwtl
mov
inc
sbb
rep
imul
jl
loopne
lahf
scas
into
adc
add
sub
mov
and
rcr
sub
stc
xchg
loope
dec
loop
into
xor
lret
jae
pop
fwait
adc
or
inc
gs
pop
orb
stos
psrlq
sbb
xor
mov
je
mov
sti
movsl
or
aaa
in
roll
mov
sbb
sub
xchg
adc
fcompl
addl
out
mov
imul
popa
jns
push
stc
loope
dec
repz
aaa
out
std
sbb
sti
outsb
xchg
cmpsl
rcl
pop
shlb
pop
insl
push
push
jecxz
inc
lret
jne
inc
adc
movsb
pop
in
insb
maskmovq
negl
in
add
rolb
mov
mov
sbb
outsb
add
cmp
mov
xor
xchg
xchg
sbb
inc
xor
xor
mov
out
sbb
and
sbb
movsb
push
lds
xor
push
mulb
out
shr
hlt
xchg
in
div
gs
fidivrs
les
mov
cmp
xor
insw
jb
sbb
xchg
in
lods
jecxz
sbb
pushf
mov
or
mov
lahf
push
lock
pop
cmc
push
stos
jne
mov
sbb
dec
jb
or
xor
frstor
dec
cmpb
jne
shll
shll
push
lods
sub
neg
dec
rol
mov
pop
ret
enter
lret
aaa
push
js
adc
inc
cmp
cmp
or
jge
mov
test
jg
mov
addr16
push
add
daa
pop
lea
or
bound
lahf
jge
and
sub
add
or
fnstenv
pop
push
push
mov
mov
dec
loop
jmp
jmp
cltd
xchg
out
sbb
lock
pop
or
cmpb
aas
inc
imulb
hlt
cmc
fcmove
sbbb
popa
add
adc
hlt
or
adc
and
lea
or
pop
mov
loopne
arpl
lret
imul
push
sbb
sbb
push
push
aas
cmp
and
lea
mov
fwait
sub
lea
push
fs
adc
pop
cld
lcall
inc
ljmp
outsl
adc
out
ja
ds
inc
jnp
jg
cmp
mov
sbbb
dec
test
inc
push
data16
jae
les
repnz
scas
in
mov
mov
push
pop
xor
stc
in
out
push
inc
insl
lahf
loop
mov
sub
pop
pop
xor
in
pusha
popl
or
jecxz
pop
lock
pop
mov
repnz
fucomp
cwtl
push
dec
data16
pop
xor
cmp
les
mov
nop
es
fs
je
sbb
pusha
mov
rcr
bsr
add
shld
pushf
mov
cmp
test
test
pushf
pushf
lea
je
btc
shl
setg
bt
add
clc
mov
jmp
out
sarl
roll
ret
mov
mov
aaa
jmp
data16
addr16
mov
sar
scas
mov
jbe
jge
cld
xchg
sub
iret
xchg
orb
adc
inc
add
mov
mov
mov
arpl
test
repnz
movsb
std
mov
adc
iret
sarb
jns,pt
in
jmp
mov
sub
lds
imul
sub
mov
movb
push
push
pushl
ret
pop
mov
call
inc
andb
out
lret
data16
ljmp
repz
mov
shlb
add
mov
aaa
push
push
mov
xchg
jg
jae
or
jo
add
rcrl
xor
pop
adc
dec
imul
jnp
mov
and
popa
les
movsl
mov
pop
aas
add
push
mov
add
mov
call
add
pop
ret
movl
movw
movl
pushl
popl
pusha
pushf
pushl
ret
sahf
sbb
out
fsubrl
add
inc
and
jo
xchg
cltd
sahf
push
mov
push
rcrl
jno
jo
inc
inc
jne
ss
adc
or
xchg
add
stc
push
jge
repz
cld
pop
jo
jp
jle
inc
adc
xchg
mov
xlat
in
or
xlat
lret
jg
fstpt
push
add
in
sbb
pop
test
outsl
dec
iret
imul
cmp
adc
lret
scas
pop
sbb
popf
pop
fldl
lea
jne
push
cwtl
not
movb
movsbl
push
jmp
shll
mov
mov
sbb
push
jb
xor
fcos
xor
sbbl
or
das
add
adcb
xchg
sahf
test
dec
test
imul
iret
mov
add
jb
lahf
scas
loop
fsubl
stos
inc
aaa
jmp
push
mov
dec
mov
mov
stos
push
and
leave
adc
popa
fs
push
and
out
fsub
xchg
andl
inc
fwait
sbb
cwtl
imul
adc
cmpb
jmp
or
ds
movlps
sbb
mov
dec
lahf
xor
addr16
les
inc
call
dec
or
or
sub
aaa
call
mov
xchg
add
jmp
adc
das
lcall
arpl
add
addr16
orl
imul
out
fmull
stos
jnp
scas
sti
je
out
mov
cmp
xor
xor
ret
xor
rcrl
sub
popa
xor
jb
lods
jecxz
inc
add
fisubl
push
jmp
mov
sbb
sbb
push
sbb
iret
cmp
sbb
movb
pop
dec
and
rolb
ret
xlat
cmpsl
repnz
dec
out
les
dec
push
dec
in
fsubl
sub
rol
xor
sbb
inc
xchg
push
in
insl
cmp
cmp
add
inc
adc
orl
inc
test
jae
ds
xchg
cvtpi2ps
pop
out
inc
in
psubd
mov
dec
in
movsb
repnz
or
mov
lock
adc
mov
aaa
cli
cmpsl
imul
push
cmp
sub
andl
and
or
push
adc
lret
add
cmp
insb
dec
xor
mov
adc
add
lret
mov
mov
jo
and
xor
clc
jb
pop
andl
or
fisubs
ss
ret
sti
inc
and
inc
adc
loop
adcl
push
repnz
ficoml
add
into
mov
mov
cmc
pusha
add
ficoml
jb
insb
cwtl
or
sbb
mov
pop
inc
mov
jecxz
sbb
mov
xchg
aaa
cltd
lret
jnp
xchg
ret
fnstenv
push
jnp
bound
pushf
cmpsb
icebp
sahf
dec
std
lcall
mov
jmp
into
push
adc
jns
nop
mov
sbb
scas
ficoml
js
ss
push
sbb
pop
filds
int3
fnstenv
mov
push
xchg
sub
mov
stos
movsb
lret
jg
fwait
and
es
insl
jne
shlb
ret
mov
jp
rdtsc
nop
pushf
jmp
mov
push
stos
pusha
lea
jmp
jmp
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
xor
lret
and
pop
imul
xchg
decb
and
xchg
or
mov
scas
inc
jae
xor
inc
xchg
pop
fstpt
iret
repz
ret
and
xor
and
ret
sub
inc
xor
pop
jo
pop
push
mov
dec
push
cli
fidivrl
in
and
fsubrl
or
lods
test
pop
sub
push
dec
sbb
lret
jge
lea
mov
xchg
out
std
in
cmc
pop
xchg
inc
sbb
cmp
dec
and
addl
insb
sbb
test
cwtl
add
cmpb
in
mov
xchg
mov
imul
fwait
sbb
imul
leave
test
sub
es
inc
in
sub
jp
inc
decb
aas
jns
loopne
in
xor
repz
ljmp
out
js
xchg
ljmp
into
jmp
dec
dec
push
loop
fmull
mov
mov
in
cmpsl
scas
xchg
jg
adcl
mov
and
fptan
insb
add
cmp
loopne
mov
pusha
push
xor
aad
hlt
xchg
dec
add
sub
rolb
fs
pop
xorb
lods
xor
fisubs
jecxz
ret
mov
sti
in
xchg
fildll
imull
dec
cmc
arpl
jge
xlat
out
leave
push
fnstenv
inc
cli
mov
sbb
frstor
int3
xchg
xor
jbe
insb
sub
call
scas
sub
loop
fsubr
mov
inc
adc
divb
scas
fs
xor
xor
scas
jl
xchg
lods
adc
jae
jno
fiaddl
das
add
sbb
push
aas
dec
mov
xlat
mov
insl
jp
shrl
sbb
mov
imul
mov
aas
roll
inc
clc
mov
test
sub
and
maxps
loop
imul
cmc
mov
jecxz
jmp
and
fcoml
rcll
test
inc
testb
mov
popa
sahf
cmp
xchg
add
loopne
fmull
inc
popa
mov
push
ret
filds
inc
pop
pop
in
std
xlat
push
inc
sar
aas
xor
mov
mov
push
mov
xor
xchg
mov
hlt
or
pop
mov
and
mov
shll
outsb
in
sub
cmp
push
inc
lds
inc
pusha
or
xchg
out
cltd
cmpsl
leave
push
sub
int
das
cmp
iret
iret
jo
rorl
scas
sbb
push
scas
pop
sub
outsb
cs
jo
jns
sbb
arpl
pushf
std
mov
sbb
jb
and
fdivl
ss
jmp
mov
dec
push
mov
sub
xchg
movsl
jmp
insl
push
sub
push
fimull
jl
loop
jmp
cmp
and
test
fidivrl
insb
mov
lock
int3
adc
popa
mov
scas
stc
mov
daa
pop
mov
mov
aaa
loop
push
data16
pop
lock
cs
jecxz
pop
jl
lret
arpl
add
movl
aam
out
cwtl
sbb
out
cmc
jl
inc
insl
push
inc
pop
sbb
push
mov
dec
pop
orl
sub
push
ja
add
xchg
arpl
xor
or
lods
daa
adc
nop
xchg
mov
cmp
mov
jl
je
lods
out
push
mov
js
lods
shlb
push
lds
call
popa
movsl
inc
loop
ret
mov
int3
xchg
out
jae
add
and
mov
cmp
dec
addr16
ja
push
xlat
out
mov
xchg
ss
add
adc
inc
and
call
pop
jp
loop
sub
and
aaa
adc
sub
mov
push
call
adc
pop
cmp
jle
jnp
jne
cs
cmpsl
cmp
and
dec
sbb
js
cli
movsl
fisttpll
mov
pop
aam
jecxz
cmp
push
xor
test
lret
popf
clc
jl
jbe
lret
insb
cmc
pop
lds
jmp
int
fisttps
loope
das
mov
pcmpeqw
jb
push
xor
mov
dec
xchg
mov
fcmovbe
mov
flds
push
sub
push
mov
cli
xchg
sbb
pop
stos
loopne
jmp
jle
xor
jns
mov
das
scas
ret
jne
pushl
popf
jmp
cmp
xor
push
and
lds
or
popf
aam
sti
in
cmp
out
popf
mov
or
lods
fsubrs
inc
pop
xchg
in
lahf
cwtl
scas
sahf
jbe
stc
pop
xor
scas
sbb
lea
inc
pop
mov
lcall
nop
inc
test
mov
insb
pop
roll
data16
xor
mov
add
pop
imul
fidivs
sbb
cmpsb
js
mov
inc
loopne
mov
inc
dec
sbb
sub
notb
pop
inc
xor
lods
mov
dec
mov
sbb
sub
ret
cwtl
add
or
xchg
mov
int
mov
shrb
or
mov
loope
push
mov
mov
sbb
jno
xlat
mov
inc
lea
xchg
inc
cmp
cwtl
inc
sbbb
iret
cmc
in
mov
subb
movsb
out
jmp
add
lret
xchg
das
scas
push
imul
ja
jp
jb
sub
loop
inc
sbb
repz
faddl
fistpll
dec
mov
aaa
fucomi
mov
call
inc
mov
inc
dec
and
popf
xchg
aad
xor
popa
cmp
lds
push
ss
ret
jno
jnp
sbb
sbb
popl
mov
bound
or
add
aam
test
pop
mov
enter
lahf
cmp
insl
mov
xchg
aad
inc
xor
popa
inc
sub
adc
iret
mov
ljmp
js
popf
sarb
rorb
ret
insb
les
xchg
xchg
out
movsl
mov
pop
push
dec
push
daa
fdivp
jbe
outsb
inc
cmc
lret
lock
dec
jne
xorb
test
into
jl
sub
dec
cmp
jo
push
inc
mov
push
xor
test
mov
lock
mov
cld
xchg
or
xchg
loope
ret
sub
fiadds
fwait
dec
jns
dec
sbb
repz
cmpsl
aas
mov
xor
ret
xor
iret
bound
mov
jns
xchg
clc
push
ds
jge
or
gs
sahf
rorl
test
insb
jp
push
cld
push
adc
sqrtps
jns
subb
sbb
int
and
aaa
outsb
movsl
xor
fwait
int3
mov
pop
icebp
aad
aas
jg
ret
stos
loopne
adc
mov
xchg
addb
add
mov
inc
popa
push
mov
mov
repz
ljmp
jb
insb
mov
add
mov
mov
fs
insb
daa
jecxz
add
movsl
adc
ljmp
rorl
call
out
rcrl
enter
mov
pop
or
pop
push
stc
call
pop
adc
out
mov
stos
das
insb
push
jbe,pt
cltd
xor
stc
and
push
scas
dec
enter
lret
cmpsl
or
aaa
cmc
jl
in
and
shlb
and
scas
or
inc
and
pusha
das
adc
xor
xchg
cmp
pusha
jo
sbb
add
outsb
dec
mov
mov
int
mov
lea
les
iret
push
sahf
xchg
push
and
nop
pushf
sbb
jge
xchg
or
cmp
mov
xorl
stos
jl
loope
mov
hlt
dec
mov
or
cmp
dec
lock
dec
in
sahf
fdivs
lods
sub
mov
int3
push
adc
sbb
push
jle
or
test
ss
bound
cli
add
add
jo
scas
mov
or
aas
fs
jne
adc
dec
and
push
imul
jle
divb
jb
ljmp
jecxz
adc
int
pop
or
mov
push
adc
fidivl
fldl
in
enter
pop
mov
cmp
fnstcw
ja
ja
jp
shrl
loopne
sbb
jecxz
push
shlb
jl
xchg
or
pop
adc
adc
jo
dec
mov
sbb
or
mov
jae
sbb
ljmp
div
lret
shlb
mov
test
sub
or
mov
enter
sub
push
lds
xchg
jl
adc
stos
mov
and
aam
movsl
push
lea
xor
aam
ss
xlat
add
push
and
scas
cmp
push
xor
dec
add
inc
adc
adc
decb
xchg
push
pushf
test
jmp
jge
sbb
xchg
ss
fildll
jg
add
push
jae
cltd
dec
sub
dec
jb
xchg
loop
push
sahf
out
out
xor
std
or
shrl
mov
sbb
movl
fidivs
and
jae
repz
flds
mov
adc
outsb
push
hlt
fs
add
mov
inc
mov
add
mov
mov
adc
dec
jb
fs
mov
movsl
push
add
hlt
cld
sub
push
and
inc
lods
pop
jnp
test
inc
pop
inc
call
xchg
pop
adc
fst
mov
sbb
inc
inc
popa
sti
push
ljmp
shl
arpl
fidivrl
inc
rcrb
or
dec
in
and
inc
xchg
ljmpw
jg
addr16
xchg
call
pop
test
pop
ss
dec
sbb
incb
hlt
popa
mov
lods
sub
mov
sub
outsl
cltd
dec
push
das
cmp
xchg
cmpsl
add
xchg
mov
mov
xor
insb
insb
jmp
shll
push
mov
xchg
aas
pop
mov
mov
sbb
sbb
lock
dec
test
push
nop
jmp
mov
xor
and
clc
xor
push
and
test
dec
mov
mov
jne
stos
push
dec
push
fwait
jge
outsl
outsb
shlb
jo
shrb
in
sub
lock
out
pop
xchg
jl
or
cmp
dec
or
sbbl
jb
mov
cmpsl
cmc
inc
jp
out
xor
sub
and
mov
imul
or
ficomps
xchg
xor
ret
xchg
movsl
cmp
pop
add
mov
sbb
jns
bound
xor
cmp
ret
and
out
or
les
xor
cld
dec
jns
pop
ljmp
aad
in
mov
leave
mov
xor
pop
inc
pop
ss
pushf
xlat
es
mov
stos
sbb
mov
ja
pushl
ljmp
mov
mov
jne
jg
bound
icebp
cwtl
int3
cmc
add
pop
push
add
addr16
sbb
mov
inc
fisttpll
and
mov
cli
mov
xor
in
leave
pop
fidivrs
fistpll
mov
adc
scas
xor
pop
je
movsl
or
dec
repz
mov
into
mov
mov
xchg
mov
push
std
ffreep
roll
out
stos
sbb
pop
add
cmpsl
es
in
cwtl
cs
push
xor
jae
mov
pop
pop
jecxz
sti
jle
fmull
pop
hlt
vmread
or
mov
xchg
sub
mov
rcr
sub
popa
xor
loop
mov
or
fistl
mov
outsb
sub
aas
push
lods
mov
jne
shll
pop
mov
dec
popa
or
mov
or
push
leave
mov
je
xor
mov
stc
test
std
cmp
xor
jae
ss
push
and
out
call
jnp
adc
scas
mov
adc
aam
sub
and
mov
sbb
stos
jb
aaa
ljmp
frstor
pop
js
std
push
outsb
cld
loop
dec
mov
push
aad
push
or
cmp
mov
xor
dec
subl
jo
adc
hlt
mov
mov
dec
xchg
mov
data16
sub
scas
mov
loope
cmc
mov
lret
daa
shrl
xor
mov
aam
test
adc
pop
xchg
not
inc
in
xor
sbb
jle
adcb
loope
cmpsl
adc
xor
pop
test
jns
mov
scas
ja
dec
inc
cli
xchg
mov
test
pop
fimuls
loope
rcl
and
dec
scas
dec
mov
jbe
bound
rcll
mov
clc
icebp
add
and
or
xor
cmp
dec
xorl
xlat
cmp
cmc
xor
sub
aam
in
sbb
push
mov
pop
lret
sbb
es
and
idiv
jbe
mov
mov
notb
mov
stc
loopne
push
aaa
stos
mov
xor
fdivrs
out
pop
adcb
out
stc
jb
and
dec
notb
and
fildl
inc
mov
dec
insb
insl
int3
lret
pop
xor
jns
push
out
jl
clc
fwait
inc
xor
add
adc
es
int3
jmp
dec
out
pop
mov
decb
dec
pop
sbb
clc
mov
xchg
cld
sub
cmp
push
pop
fistps
mov
xor
jp
push
jae
dec
mov
fwait
lcall
mov
ljmp
movsb
push
jo
mov
pop
in
add
cltd
add
sbb
mov
xor
and
push
loop
adc
std
cmpsb
lahf
xchg
testl
and
aad
xor
lcall
and
xor
inc
or
inc
jg
fsubrp
mov
xchg
lods
aas
lods
pop
push
mov
cmp
dec
push
dec
sbb
add
mov
xorl
cmp
jg
loop
cmp
push
jle
sub
xchg
movsb
js
or
mov
mov
imul
test
outsb
adc
inc
sbb
xchg
xor
mov
sbb
daa
loop
roll
push
push
outsb
and
add
lods
cmc
adc
jb
add
inc
cs
xlat
dec
inc
sti
jecxz
fstpl
rclb
repz
shlb
push
dec
jmp
lea
mov
enter
lea
in
lcall
push
sbbb
aad
mov
jne
lea
lock
add
dec
or
test
cs
lahf
xor
and
les
jno
push
std
dec
scas
ljmp
mov
mov
and
fwait
subl
xor
arpl
mov
iret
lret
scas
and
add
sti
or
mov
cs
or
mov
call
pop
push
mov
push
mov
xchg
inc
pop
adc
mov
pop
cmp
inc
fisubs
xchg
cmp
movsl
arpl
fxch
addr16
rcl
push
and
repnz
xchg
inc
and
cmp
pop
jp
jns
pop
jecxz
cmp
mov
orb
ss
xorb
sbb
mov
inc
jle
jb
adc
aas
mov
lds
sti
xor
pop
fisttps
movsl
sahf
scas
test
push
add
int
loope
push
fstp
pinsrw
imul
in
xor
dec
or
insl
lods
fwait
jg
push
pop
inc
jecxz
insl
jecxz
mov
out
sbb
or
xchg
loope
dec
stc
aaa
xor
lahf
or
fnsave
pop
sub
pusha
movsl
xchg
mov
insb
mov
inc
jg
xor
inc
mov
cmp
mov
xor
adc
sub
mov
pushf
jge
addr16
shl
loopne
movsl
pop
adc
mov
xor
jne
movsl
adc
mov
cli
xor
shr
iret
fwait
lds
or
std
scas
jnp
inc
insb
out
inc
orb
dec
int
add
pushf
xor
es
sub
out
ficoms
sbb
adc
shrl
in
inc
dec
das
shr
aad
mov
mov
fbld
out
ljmp
jge
jmp
out
fldcw
pusha
inc
add
xor
lods
jo
add
or
mov
inc
and
and
cmc
mov
fiadds
mov
out
inc
cmp
outsb
sub
mov
add
out
pop
outsl
push
push
icebp
js
imul
mov
mov
clc
sub
xchg
pop
hlt
arpl
inc
outsl
cld
lahf
cmpsb
xchg
jge
mov
aad
sbb
clc
aam
dec
icebp
in
sbb
les
dec
hlt
mov
push
mov
mov
cmp
dec
adc
fwait
adc
or
mov
xchg
ds
int3
xchg
mov
mov
push
push
mov
adc
fistps
mov
sbb
clc
icebp
add
push
push
adcb
andl
leave
adc
fldl
in
inc
cmp
xlat
icebp
sahf
jmp
xor
xchg
add
cmp
or
pusha
or
ljmp
icebp
fwait
shr
lret
lret
mov
push
mov
or
inc
xchg
call
add
xchg
mov
inc
push
add
loop
dec
stos
js
bound
pop
in
decb
inc
insb
notb
in
inc
lock
xchg
fidivs
mov
fwait
cltd
pop
lods
fnstcw
or
in
mov
dec
add
js
mov
out
jb
lcall
ljmp
movb
in
mov
sar
pop
xchg
shll
repz
sub
or
std
push
lret
das
ds
mov
test
notb
mov
xchg
fucomi
imul
xor
jp
jp
stc
jno
push
inc
daa
aad
add
stos
push
pop
cmp
jge
imul
xchg
xchg
lret
pop
xor
adc
jmp
lcall
mulb
and
popa
lahf
xorl
mov
xor
mov
mov
hlt
das
repnz
daa
leave
xchg
call
data16
mov
mov
add
jno
mov
out
pop
jno
jecxz
push
xor
scas
dec
jmp
out
xchg
inc
push
aad
inc
popa
pop
add
xchg
decb
mov
jmp
xor
cmpsl
xorb
mov
mov
cwtl
cmpsb
push
mov
cmpsb
xor
push
nop
cmp
lock
in
out
sub
subl
cltd
adc
idivb
loop
ret
sub
adc
fmul
push
fmull
nop
out
add
pusha
add
jne
popa
adc
push
mov
dec
mov
ja
into
icebp
fwait
jmp
jp
xor
sarb
adc
mov
sbb
cwtl
jg
pusha
cs
into
mull
outsl
dec
mov
mov
and
mov
test
shrb
inc
sbb
cld
popf
sbb
pop
inc
push
and
push
dec
dec
dec
mov
or
dec
fstl
mov
sub
mov
sarb
add
outsl
mov
inc
loopne
cmp
cmp
pop
inc
pop
dec
cltd
sub
inc
ror
sahf
in
inc
cmp
xor
jecxz
nop
inc
mov
enter
mov
lock
movsl
jmp
test
test
lahf
dec
pop
hlt
movsl
ficoms
cs
arpl
mov
inc
lods
cmp
push
cmpsl
test
xchg
jae
pop
or
pop
leave
mov
adc
fsubrl
jne
pop
mov
imul
or
add
push
lds
mov
sub
xor
pop
mov
mov
fdivl
dec
scas
sub
mov
adc
jbe
fistpl
lds
or
inc
repnz
scas
mov
jge
and
lea
add
sbb
adc
adc
in
add
jns
in
cmp
pushf
mov
dec
icebp
movsb
popf
lods
cmc
fisubl
stos
lcall
jne
push
je
ret
add
xor
jnp
inc
cmp
ret
xchg
dec
jb
pop
movsb
daa
cltd
sub
mov
xor
popa
mov
cmp
daa
cli
fdivrl
movsb
pop
xlat
dec
xchg
bound
andb
je
dec
jnp
xchg
push
or
mov
lea
cwtl
adc
adc
jae
lods
into
andl
push
inc
mov
cmpb
adc
adc
sbb
dec
std
lret
out
sub
xchg
jecxz
shlb
pop
mov
jmp
xor
sub
imul
push
push
popa
jge
push
shll
ljmp
rorl
mov
push
sub
mov
inc
out
fnstenv
pushf
or
stc
shl
enter
in
push
pop
mov
aaa
outsb
and
inc
push
cmpsb
fdivrl
imul
lret
std
sbb
sbb
enter
push
push
sub
and
popa
fnstcw
dec
jmp
add
adc
xchg
dec
test
enter
xor
mov
cmp
pushf
fiaddl
cmpb
js
add
mov
iret
ds
fldcw
jl
clc
xor
roll
das
andw
sub
cltd
imul
repz
data16
xchg
mov
jecxz,pt
cmp
inc
push
lods
sub
sar
xchg
and
outsl
and
sbb
out
cmp
scas
fidivs
insl
cmp
stos
out
jne
sub
jnp
loop
das
rcr
lret
ficompl
add
sub
adc
in
sbb
fidivs
add
icebp
pop
fists
mov
aaa
and
pop
sub
xchg
pop
fsubl
das
es
xor
nop
call
fsts
inc
jl
and
repnz
and
in
sub
xor
aas
out
sahf
arpl
jbe
inc
xor
loop
pop
pop
stos
in
nop
xor
xchg
mulb
bound
pop
test
pop
enter
mov
fdivr
xchg
mov
rol
dec
jl
insb
dec
clc
pushf
pop
xchg
mov
outsb
ret
xchg
xchg
test
cmpl
enter
cmp
push
or
rorl
mov
dec
inc
ja
subl
dec
negb
push
dec
repz
cmp
add
dec
xchg
ret
or
lret
pusha
imul
cmp
push
out
jge
insl
push
idivl
sub
adc
test
xor
inc
ss
mov
outsb
les
scas
mov
or
test
test
sub
gs
add
push
sub
inc
into
add
test
sahf
xor
add
push
loopne
rolb
dec
mov
lds
dec
xor
jno
sub
test
mov
mov
push
movsl
jecxz
in
iret
int3
xor
and
sbb
movsb
mov
and
sahf
push
push
in
fwait
inc
scas
pop
subb
jmp
sub
hlt
jne
int3
push
and
add
loop
enter
imul
repz
lods
imul
sub
adc
pop
xchg
pop
dec
mov
pop
fdivrl
cltd
mov
cli
cmp
cli
arpl
dec
ret
adc
inc
js
sub
cltd
jne
lahf
push
outsb
dec
jl
insl
or
and
fistps
fimull
sbb
jmp
adc
push
pop
jg
sti
jno
or
lret
sub
sub
outsb
cmp
add
outsl
xchg
scas
cwtl
xchg
cld
icebp
cmpsb
pop
add
add
inc
call
inc
cld
cmpsl
push
adc
mov
and
sbb
clc
jmp
cwtl
test
mov
dec
test
cmpsb
dec
inc
mov
repz
adc
sarb
adcb
inc
pop
mov
loop
ds
push
mov
add
decl
leave
pop
fnstenv
in
mov
push
mov
adc
pop
and
mov
test
es
js
arpl
inc
ret
adc
push
insl
jnp
loop
fcomps
push
imull
push
mov
mov
push
mov
aaa
lods
je
or
or
fwait
and
outsl
aaa
adcb
sub
sbb
sbb
insb
push
das
sbb
pop
test
sub
test
movsl
fwait
out
xor
dec
repz
mov
jge
in
mov
in
cmp
cmc
insb
ret
pop
adc
add
xor
jg
ficompl
sub
test
es
dec
loop
ret
add
mov
xor
push
pop
sub
ss
sbb
jecxz
es
add
and
std
scas
xor
xor
pop
or
and
xorl
jmp
lods
push
sub
test
neg
call
out
sub
lret
xor
mov
sbb
aad
insb
xchg
push
jecxz
dec
mov
pop
cmp
lods
dec
repnz
cmp
rcr
icebp
in
divl
test
xchg
xchg
xchg
dec
in
mov
sbb
movsl
imul
sahf
sub
imul
jnp
je
hlt
sbb
shlb
and
fmul
mov
add
sbbb
add
cmc
stc
cmp
pushf
lea
ja
test
push
add
sub
cmc
mov
bt
cmp
pusha
pusha
jmp
lea
ja
call
movsbl
call
sbb
or
lret
out
bound
pushf
test
xchg
fidivrl
in
mov
xchg
cmp
cs
js
xor
fdivrs
push
lods
xchg
jle
stc
shll
test
aas
out
arpl
ret
mov
xchg
adc
int
pushf
cmp
or
rclb
movsl
stos
xor
rcrb
outsb
fnstcw
adc
sbb
and
imul
ficomps
lock
dec
dec
lcall
ljmp
push
cltd
insl
icebp
pop
mov
es
out
sbb
cmp
lock
xchg
in
in
lret
in
icebp
sub
jae
dec
test
sarb
dec
inc
ret
loope
in
xor
inc
bound
push
loop
mov
dec
movsl
inc
and
nop
sbb
sbb
adc
mov
cmp
fstps
in
faddp
xor
inc
pop
pop
bound
adc
xchg
aaa
push
jnp
xor
mov
push
mov
sbb
cmpsb
mov
movsb
cmpsl
xor
outsb
dec
jmp
stc
inc
lcall
loopne
cwtl
movsb
ret
add
cmp
aam
mov
or
push
in
shlb
imul
insb
add
stos
mov
mov
ja
insl
sub
push
mov
gs
or
inc
jle
shl
dec
lahf
frstor
into
ficoms
mov
adc
push
or
frstor
pop
mov
repz
iret
mov
inc
das
bound
rcrl
or
push
loopne
sub
fisttpll
or
cmp
push
enter
repnz
std
test
mov
push
jno
push
xchg
pop
cltd
mov
xchg
stc
push
cli
cs
xor
daa
je
add
jae
inc
push
jmp
pusha
lea
ja
clc
setae
call
adc
ret
lret
stc
stc
testb
jecxz
adc
test
xor
sarl
sbb
shlb
xchg
movsl
scas
inc
rcrb
lods
sbb
mov
jg
mov
push
cltd
mov
ret
pop
fsts
lret
jg
test
sarb
mov
movsb
and
out
or
push
push
mov
ss
or
je
add
or
imul
inc
cli
xor
xlat
jg
mov
cs
xorl
mov
lds
adc
test
shr
and
loopne
pusha
push
movl
mov
pushf
pushf
pushf
lea
jmp
outsl
insb
gs
jne
xor
cs
insb
add
ret
and
std
mov
pushf
adc
pushf
test
inc
cmp
js
xor
stos
push
lock
xchg
and
fs
cmpl
push
dec
dec
and
pop
pop
and
dec
cs
int
std
ret
mov
fistpll
movsl
jle
xor
adc
cmp
xchg
mov
adc
ds
ds
mov
in
out
sub
jmp
lea
call
call
lea
ret
lea
call
jmp
cmp
test
call
call
lea
jae
rcr
movsbw
pusha
mov
cmc
cmp
sbb
ror
mov
shl
inc
mov
pushf
xor
call
ja
push
ret
sub
fdiv
dec
push
sbb
inc
sbb
pop
xchg
push
pop
aaa
aam
hlt
stos
repnz
xchg
pusha
lahf
aaa
mov
loope
pushf
imul
mov
test
pop
cmp
dec
push
pop
bound
cli
mov
or
lea
int
push
pop
dec
aam
mov
addps
andb
sub
push
mov
imul
inc
push
lea
jne
rcr
mov
shr
sub
bswap
neg
pusha
lea
bt
sub
clc
pusha
clc
call
push
bt
cmp
pusha
pushf
sbb
test
test
stc
lea
lea
clc
bt
jmp
pusha
pushl
lea
jb
shl
pusha
lahf
aas
movzbl
cmp
shr
lea
jl
imul
pushf
call
pop
leave
rol
fmull
pop
clc
push
xlat
jmp
arpl
orl
aad
outsb
in
mov
and
imul
inc
lock
sbb
filds
cwtl
add
cmp
cmp
jns
dec
xchg
enter
pop
divl
loope
dec
lods
int
repnz
out
mov
cmp
fisubl
idivl
out
aad
xor
test
lods
cmp
andb
mov
out
in
lret
inc
lahf
and
xor
cli
ret
stos
loop
mov
popf
pusha
sub
mov
ret
pop
aam
mov
xchg
mov
test
insb
fisubs
xor
shr
into
fisubrl
dec
jne
daa
push
cmp
pusha
clc
fs
mov
mov
ret
mov
xor
insl
mov
adc
add
xchg
cmp
sbb
pop
loop
fists
adc
jecxz
push
push
jecxz
jo
adc
testb
shll
mov
lods
cmc
lahf
es
add
lret
push
cwtl
fstl
scas
xchg
negl
sbb
insb
iret
js
jbe
xchg
xchg
cwtl
imul
pop
or
mov
ret
or
xchg
daa
cld
add
sti
popf
pop
fcompl
cwtl
js
push
adc
mov
lods
sbb
mov
fdivrl
nop
xor
scas
cwtl
jbe
lock
jne
sub
sub
xchg
cmp
lds
out
divl
test
mov
js
arpl
mov
inc
sbb
sti
xor
inc
lahf
insb
sbbb
popa
push
sbb
xchg
sub
add
int
fadds
pop
cmp
lea
je
call
jge
pop
mov
mov
push
mov
cmp
pop
lds
aaa
adc
fiadds
pop
ja
pop
mov
nop
xor
aad
pop
pop
jo
dec
xchg
movsb
xchg
xor
repnz
inc
test
xor
xor
mov
push
mov
iret
scas
in
movsb
rcrb
testb
mov
push
rclb
mov
rcrb
mov
jmp
aas
out
sar
push
cmp
xor
mov
cltd
std
add
mov
cmp
shrb
add
loope
xlat
and
cmpsl
dec
mov
mov
cmp
jmp
lods
dec
mov
pop
int3
jg
in
cltd
ret
or
sbb
cmpsb
jbe
inc
cwtl
mov
pop
pop
cmp
cmp
xchg
jl
mov
pop
movb
aaa
int
loope
pop
jmp
in
lcall
ss
sbb
sar
in
mov
sub
jno
in
movsl
gs
push
or
dec
mov
flds
lahf
jo
mov
cmp
mov
jle
scas
mov
mov
pushf
and
pop
pop
inc
outsb
int3
push
dec
dec
mov
xor
nop
lods
fsubrp
pop
jle
push
ret
jo
shrl
in
scas
xchg
xchg
mov
mov
hlt
por
and
scas
data16
iret
int3
push
cmp
incb
jnp
jecxz
scas
addr16
jae
fcomp
adc
out
lods
dec
fmull
or
test
pop
sub
xor
dec
mov
or
mov
jae
cmp
aad
dec
mov
fwait
stos
sub
flds
pop
andb
jle
ficompl
jmp
pop
sub
sbb
cltd
out
popa
scas
mov
xchg
stos
mov
xor
ja
je
lds
push
test
sbb
shlb
je
or
addb
cmp
add
loope
jb
mov
and
adcb
mov
dec
xchg
pop
xchg
push
inc
scas
mov
jmp
insl
or
call
inc
sub
push
stos
repnz
push
sbb
loopne
and
movsl
aaa
rorb
xchg
clc
dec
push
adc
dec
aad
push
nop
mov
roll
out
adc
fistps
sbb
loopne
icebp
pushf
arpl
ja
pop
jmp
pop
jge
outsb
ds
stos
aas
mov
push
dec
mov
mov
inc
rcrl
mov
pop
mov
out
dec
aam
stos
lcall
js
lods
mov
adc
sub
int
push
out
push
std
dec
xchg
and
mov
fsubs
push
cwtl
das
icebp
enter
faddl
add
gs
insb
inc
js
arpl
gs
add
add
out
fucomi
mov
inc
and
pop
jnp
and
mov
mov
lea
jmp
mov
mov
push
pushf
lea
jmp
test
sub
test
pushl
popl
pushf
test
cmp
pusha
pusha
lea
ja
cmp
sub
inc
lea
dec
add
rcr
mov
xor
mov
call
or
or
xchg
jge
and
in
xlat
add
and
mov
fs
push
sub
inc
dec
call
fucomi
inc
mov
ljmp
push
adc
fistpll
lret
add
ret
pop
popf
add
add
sub
inc
jge
sub
xchg
lods
out
sbb
les
inc
jb
xchg
outsl
jo
sbb
xchg
sahf
push
sub
dec
cmpsb
ds
je
dec
lods
sti
bound
icebp
in
dec
aad
insl
xchg
inc
es
push
mov
push
mov
nop
push
aad
and
mov
sub
cld
fcompl
pop
ss
cmc
mov
adc
lods
mov
dec
out
or
in
cmp
les
pusha
int
mov
dec
orl
cmp
cmc
pop
xchg
sub
addb
sbb
dec
sub
popf
hlt
into
push
pushf
mov
lahf
sti
imul
out
pushf
add
pop
xchg
jmp
movl
push
push
jmp
ja
outsb
imul
insb
add
mov
repz
jl
pop
mov
mov
mov
jae
push
pop
stos
out
sbb
cmpb
fdivrl
push
sbb
pop
ret
mov
mov
cmpsl
push
sbb
subb
mov
push
enter
xchg
add
in
dec
push
xchg
xchg
in
mov
test
mov
adcb
push
dec
fadd
xchg
mov
mov
xchg
out
jg
pushl
popl
pushf
mov
movl
pusha
pushl
ret
or
mov
jmp
push
cmp
push
jno
xchg
sbb
add
shll
mov
call
mov
add
inc
inc
and
das
inc
push
loopne
jnp
es
xor
cmp
out
cmp
fsubrl
jge
sbb
and
or
ja
jne
add
add
jbe
dec
outsb
push
gs
je
mov
faddl
mov
mov
lret
jnp
pop
add
pop
mov
cli
call
fldl
jo
iret
loop
hlt
cmp
jmp
xor
hlt
mov
mov
ds
pop
fld
push
add
popa
pop
mov
dec
cmp
pushl
push
cmpl
es
std
push
sub
xchg
ljmp
cmpsb
cmp
inc
nop
imul
cltd
adc
fcmovnb
xchg
mov
pop
pop
and
addr16
shrb
adc
or
std
push
pop
sbb
inc
dec
cli
add
adc
out
sub
aam
ss
pop
sbb
divb
test
and
test
add
lock
add
adc
dec
pushf
loope
repnz
and
mov
mov
movw
lea
jmp
mov
aam
lret
lds
fists
cmp
out
sub
les
or
cltd
pop
movsl
push
cmp
in
and
pop
out
lcall
mov
icebp
gs
in
andb
xchg
icebp
inc
test
sub
dec
or
and
inc
jno
outsb
mov
rorb
lcall
cmp
cmpsl
dec
int3
maskmovq
negl
mov
aaa
sarb
iret
popa
or
mov
push
jbe
dec
sbb
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
cld
out
stc
mov
fsubrl
xor
imul
push
jae
scas
dec
or
adc
ret
xchg
stc
jns
cld
aas
data16
loope
sub
in
adc
out
xor
imul
je
inc
add
mov
and
dec
sbb
mov
sbb
out
mov
push
push
sub
sub
xchg
and
push
jmp
lahf
add
daa
stos
je
fidivs
popf
add
lret
lds
add
add
mov
mov
sbb
push
call
subl
cmp
push
xchg
mov
popa
push
mov
dec
loop
out
cltd
imul
movzwl
fadd
jp
lods
shll
lods
sbb
pop
add
stc
fcmovbe
mov
mov
adc
dec
cmpsl
out
add
addr16
or
gs
pop
cmp
push
and
xchg
cld
jb
int
jmp
loope
and
mov
xlat
insb
xchg
cli
adc
mov
or
pop
outsl
and
mov
push
orl
pusha
pop
stos
pop
or
or
cmpsl
cmp
stos
fstpl
or
sbb
push
and
push
cltd
cwtl
xchg
out
das
out
xchg
jmp
inc
xorl
fiadds
jno
jle
lock
xchg
sbb
xor
add
lret
or
xor
mov
xor
pop
insl
pop
iret
sbb
mov
and
lock
mov
in
adc
inc
ljmp
movsb
lea
mov
mov
mov
pop
pusha
setg
xchg
mov
jmp
call
cli
jno
lret
rcrb
or
in
lret
rolb
push
mov
loop
push
mov
lods
mov
xchg
mov
jmp
dec
scas
adc
lret
scas
pop
jmp
test
pop
rclb
jae
mov
aaa
push
das
inc
and
leave
out
xchg
pop
cld
repnz
mov
sub
xchg
in
xchg
ret
mov
test
jns
xchg
pop
push
outsb
ss
push
push
fwait
dec
add
sbb
ljmp
cmp
mov
mov
fcompl
inc
loopne
ds
cld
sub
fidivs
ja
adc
ss
adc
sarb
stc
addb
inc
mov
movsl
jmp
out
cmc
mov
sub
pushf
pop
fadd
lret
adc
mov
jnp
enter
dec
pop
or
and
repz
pop
idivl
inc
repnz
mov
test
xchg
shlb
insb
js
lret
mov
xchg
adc
pusha
imul
into
pop
popa
lret
lret
ret
xchg
or
rorl
pop
std
inc
fcoms
xlat
xor
adc
jbe
push
dec
sahf
mov
cmp
sub
daa
adc
rclb
lods
ret
out
rorl
cmp
mov
call
push
mov
sbb
daa
sti
or
das
iret
adc
xlat
pusha
mov
add
bswap
movzbw
movzwl
movsbw
call
movl
pusha
jmp
dec
push
dec
mov
fsubl
adc
je
mov
xor
mov
ds
subl
adc
mov
repz
push
mov
out
lcall
dec
clc
aam
pop
fs
dec
and
mov
push
mov
mov
loop
cli
and
aad
mov
dec
cmp
push
or
lods
adc
out
imull
push
mov
arpl
mov
cs
sbb
movsl
xor
sbbl
sbb
and
xor
int
mov
jnp
push
adc
popfw
and
ja
out
cmc
jns
shll
fmull
or
dec
mov
sti
andb
nop
push
adc
inc
shl
mov
pop
ret
into
jae
sarl
xchg
dec
mov
adc
enter
das
sub
or
daa
push
aas
lret
jmp
mov
aam
das
test
lret
inc
add
iret
out
iret
stc
ret
test
andl
lods
js
pop
insl
jmp
gs
sbb
test
dec
mov
lahf
movsl
fstpt
sbb
adc
mov
fadd
sbb
add
inc
sbb
sbbb
mov
push
ss
push
ret
push
stos
xchg
in
out
ja
mov
pusha
push
and
pushf
je
xor
das
out
push
div
or
or
xor
pop
out
std
xchg
fcomps
rep
hlt
jmp
adcl
mov
shr
mov
xor
mov
ret
movsl
push
mov
sub
lods
pop
xor
aaa
loop
lcall
mov
shrl
pusha
pushl
popl
pushl
pushl
mov
pushl
ret
data16
mov
fsubl
divl
push
cltd
jns
test
in
scas
fsubrl
mov
cmp
push
xchg
or
scas
cmpb
push
dec
repz
lds
sub
mov
mov
pushf
push
jmp
ret
loopne
int3
pop
adc
sbb
dec
mov
shll
lock
push
cltd
sbb
daa
scas
orl
xor
push
ds
aam
adc
ficoml
mov
inc
mov
pop
or
xor
movsb
loop
adc
aad
adc
cld
adcl
xor
in
mov
fwait
mov
stos
aas
cs
and
jge
add
daa
out
push
fcomps
lret
hlt
ret
mov
mov
aam
pop
or
mov
pop
or
mov
mov
mov
pop
or
out
or
push
xchg
jbe
xor
mov
or
lock
out
mov
cmp
mov
jmp
jo
pop
call
sbb
jno
popl
jp
sbb
cltd
sti
xor
loopne
jbe
ds
mov
movsl
inc
inc
ja
jae
nop
mov
sahf
mov
xchg
andl
xchg
pop
mov
mov
rclb
or
mov
les
fld
xchg
inc
iret
inc
and
adc
mov
cmp
in
cmc
popf
sub
pushf
lea
jb
call
ret
enter
fdivl
fwait
or
pop
das
lahf
adc
sahf
loop
xchg
cltd
cmp
rclb
adcb
fsub
ljmp
inc
test
adcl
adc
shr
fst
pop
xchg
ficoml
rcl
test
mov
and
mov
pop
imul
dec
arpl
jnp
push
xchg
lods
sbb
sahf
outsl
fldenv
xor
pop
xor
pop
mov
fsubrl
jle
jg
addb
push
scas
or
scas
imul
pop
sarl
aaa
xchg
add
mov
cltd
stc
mov
fcomp
addb
fmuls
es
leave
stos
lcall
movsl
jbe
inc
testl
pop
jle
call
xchg
cmpsb
jno
inc
jnp
or
mov
test
mov
xor
fadd
or
xchg
cmc
sbbb
ret
or
outsl
pop
xlat
and
test
call
inc
or
pusha
lea
ja
stc
stc
shl
pushf
sub
stc
push
rcr
sub
add
dec
mov
cmc
mov
test
pusha
repnz
movl
lea
jne
push
pusha
setle
bswap
movb
setb
pushl
pop
mov
not
pushf
lea
mov
movl
jmp
and
fldcw
adc
add
mov
xor
jnp
pop
dec
or
mov
lcall
inc
xlat
xchg
dec
cmpsl
lods
movsb
mull
mov
dec
cmp
xchg
sub
scas
dec
hlt
jle
pop
mov
test
mov
cmp
fsubp
mov
insl
mov
ss
jge
sbb
jl
loop
lods
lahf
sub
ror
or
test
out
fnstcw
movsl
scas
mov
out
ret
pusha
mov
and
sub
aas
leave
test
inc
in
lcall
inc
jl
loopne
mov
jl
and
aad
lcall
inc
arpl
out
ret
or
cld
push
popf
sbb
sub
push
pop
inc
outsl
gs
add
lahf
push
mov
xchg
dec
out
fildll
and
fmuls
int
out
dec
sti
adc
xchg
aas
jne,pt
pushf
pushf
lea
je
cwtl
lea
pushf
push
jmp
and
scas
lret
pusha
andl
dec
cld
pop
mov
and
cmpb
xor
adc
xchg
ret
pop
insl
mov
adc
das
shll
aas
fcmovne
sbb
stc
xchg
js
je
or
scas
cmp
dec
fdivrs
in
fildl
mov
sbb
not
add
push
shll
adc
adc
mov
adc
push
test
lds
push
push
inc
into
fnsave
mov
xorb
lods
lret
fstpl
fs
daa
push
mov
jg
jns
pop
fimuls
dec
test
push
adc
xchg
subl
push
in
outsb
dec
test
roll
xchg
cmp
mov
ret
in
repnz
sbb
push
jno,pt
inc
push
pop
jle
in
jl
out
add
xchg
test
dec
ret
mov
cmp
das
or
push
mov
sub
addr16
jnp
aas
imul
test
clc
ljmp
push
pop
rorl
mov
test
and
mov
jnp
ja
dec
push
mov
jmp
xor
mov
sti
mov
pop
mov
cmpb
addr16
pushf
sub
rcll
lds
mov
jp
fs
mov
nop
add
mov
pop
jge
sub
es
cmpsl
push
lods
lret
jne
xchg
and
enter
cmp
fstl
mov
pop
enter
lret
fisttpll
test
and
pop
dec
test
mov
aaa
aam
arpl
jmp
push
loope
mov
in
je
inc
rclb
outsl
mov
mov
mov
xchg
xchg
repnz
sbb
mov
daa
adc
push
aam
mov
lret
fcomp
imul
aad
jle
nop
jno
xchg
call
inc
test
test
sbb
insb
sub
xchg
jnp
mov
ret
jl
fwait
jg
sbb
push
popf
cmpsb
sub
jno
dec
fisttpll
fstps
or
pandn
add
mov
mov
ficompl
les
into
cwtl
pop
and
in
mov
mov
push
or
and
movsb
push
sub
sbb
lret
jno
pushf
jns
dec
mov
or
cwtl
repz
and
push
mov
push
push
sbb
xor
divb
out
mov
add
sub
add
jg
push
unpcklps
icebp
push
rcrl
jnp
cmp
mov
add
scas
lods
outsb
sub
sahf
add
xor
add
sbb
and
pusha
mov
cmp
push
push
jb
aad
data16
jno
and
repnz
cmpsl
shrl
pop
adc
inc
sarb
mov
ret
jb
add
inc
mov
push
cmp
cltd
arpl
insl
insl
or
rcrb
testb
sub
pusha
jmp
pusha
pushf
movl
pushf
pushf
mov
mov
lea
jmp
pusha
jmp
push
jmp
pushf
jmp
pop
dec
inc
stos
lret
popf
cmp
lods
cmovs
cmc
ja
sahf
dec
push
imul
mov
in
arpl
out
inc
outsl
iret
sbb
or
in
aaa
and
adc
pop
jns
fldenv
dec
cld
mov
pusha
xorl
sub
jbe,pt
inc
add
mov
lds
and
xlat
scas
out
lahf
pop
dec
les
sti
jmp
fstpt
out
shrb
ret
sti
dec
cmp
into
adc
cmp
pop
test
cmpsb
mov
push
out
xchg
mov
xchg
hlt
fisttpll
push
sbb
pop
nop
ret
into
push
jge
roll
shlb
adc
jmp
dec
sbb
dec
jmp
adc
mov
imul
jo
stos
lock
clc
and
mov
xchg
daa
push
das
repz
or
cmpsl
arpl
sbb
in
ja
decl
insb
test
sbb
cmpsb
mov
add
add
pop
xor
ss
xchg
mov
push
mov
jb
cmc
xor
push
mov
popa
push
cvtps2pi
lcall
jae
lret
incb
dec
jle
push
popf
jne
inc
mov
xchg
jmp
pop
push
cltd
jp
xor
sbb
cmp
jo
lods
imul
shrl
add
mov
push
mov
mov
movl
pushl
movb
mov
pushf
mov
pushl
ret
cmc
clc
pusha
pushf
add
push
lea
je
stc
push
add
pushf
movb
lea
jmp
cmc
sub
jmp
bswap
call
push
jmp
sub
dec
or
test
and
inc
aad
aaa
sub
pushw
inc
lods
push
nop
in
rorl
mov
push
cmp
imul
in
xor
test
sti
pop
pop
mov
inc
push
pop
shrb
push
fimuls
xor
cmpb
fistps
pop
lret
pop
dec
add
xchg
sbb
mov
faddl
mov
cltd
jae
pushf
pushf
xchg
in
js
push
cmp
xchg
dec
testb
into
push
push
or
and
rclb
xchg
xor
test
xchg
mov
loop
dec
out
dec
mov
sub
mov
call
push
add
cmc
push
iret
mov
hlt
mov
xor
xor
xchg
mov
pop
dec
scas
shll
inc
les
repz
bsf
inc
stc
push
clc
mov
aam
rcl
sub
cmc
sar
bsf
push
aam
aas
push
neg
movzbw
btc
push
cwtl
push
shrd
sbb
rcr
mov
test
test
cmc
jmp
adc
in
cmpsb
lret
inc
and
outsb
imul
repz
or
mov
mov
je
push
xchg
mov
imul
adc
add
aas
dec
jb
mov
inc
mov
cld
jne
sbb
es
leave
pop
out
fwait
dec
and
sbb
xor
cmp
test
in
stos
dec
cwtl
pop
out
mov
push
aas
roll
xchg
and
inc
mov
push
leave
daa
mov
pop
jo
sahf
movl
pusha
pushf
pushf
push
lea
jmp
outsb
jmp
movsl
lret
ss
fiaddl
les
cmp
popl
aam
xchg
cmp
mov
cmpb
mov
ds
dec
rcrl
or
jmp
adc
aam
cmpsb
jmp
push
in
xchg
mov
mov
leave
add
lret
xchg
in
mov
arpl
notb
mov
fs
add
addr16
cmp
cmc
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
or
pushf
movsb
lret
pushf
mov
ljmp
outsl
ja
xor
sub
cmp
call
mov
ds
mov
xlat
xor
stc
ss
adc
xchg
push
xor
outsb
fsubrp
out
mov
out
adc
xor
add
sbb
mov
jg
sub
or
jb
xor
mov
sub
movsb
xchg
ljmp
std
sbb
adc
mov
xor
or
add
ja
outsl
arpl
xor
fs
insb
add
xchg
adc
add
test
adc
add
addr16
or
push
call
out
pop
movsl
lret
stos
or
xchg
ja
mov
xchg
cmpl
fldenv
test
inc
jg
add
adc
fwait
in
pop
lods
cs
loopne
aam
sbb
mov
push
and
dec
hlt
fimull
test
and
mov
cmp
cmp
xchg
xchg
jl
xor
fs
pushf
je
sarl
sbb
dec
call
pop
xlat
iret
mov
ret
sbb
lock
pop
fstps
jo
or
jne
push
dec
or
push
adc
adc
popl
sbb
inc
test
icebp
cmp
or
pop
pusha
pop
bound
insl
dec
aad
fidivs
add
das
mov
jg
lods
and
mov
push
repz
xchg
and
adc
sbb
aas
and
pushf
pusha
push
pushl
popl
push
mov
pushl
ret
call
stc
test
stc
add
pusha
movb
mov
pushf
lea
jmp
movsb
xchg
mov
mov
clc
push
lds
out
push
inc
inc
in
inc
stos
jmp
add
mov
push
nop
xchg
jns
mulb
ret
dec
lds
or
scas
lahf
popf
ret
mov
cltd
mov
repz
dec
inc
rcll
cmp
clc
mov
lea
in
mov
out
ja
cmpb
push
mov
inc
das
pop
mov
jp
in
and
arpl
push
cli
cmp
popf
sbb
mov
xor
pop
dec
inc
loop
inc
jle
out
dec
outsl
and
cmpsl
jp
inc
mov
movsl
jne
loopne
jno
fstpl
cltd
aas
shrb
loope
mov
lods
inc
inc
add
fists
das
cmp
inc
js
adc
hlt
pusha
sbb
pop
daa
in
mov
stos
sahf
cmpsl
call
jp
mov
inc
stos
punpckhwd
shlb
bound
subl
mov
out
cli
fsubrl
dec
or
or
jns,pn
sbb
cmc
xchg
mov
je
fwait
pop
jbe
pushf
lea
jb
movzbl
shr
lahf
mov
cmc
and
pusha
adc
mov
clc
bt
movb
shl
mov
jmp
adc
faddl
xchg
inc
stos
rorb
jbe
lds
mov
sti
xchg
mov
inc
jae
cmpsl
xchg
cmc
pop
and
cli
and
movsb
xor
arpl
dec
cmp
mov
mov
jns
test
rcrl
repz
rol
ljmp
loop,pt
adc
insl
into
lret
sahf
pop
mov
cmp
pop
insb
test
std
or
sbb
add
shlb
jmp
and
scas
repnz
adc
jge
fisttps
stc
lods
mov
sub
test
or
pop
insl
cmp
nopl
lcall
es
leave
dec
arpl
xchg
loopne
pop
push
shlb
xchg
xor
nop
jbe
nop
or
dec
scas
mov
in
push
nop
lcall
xchg
jmp
in
arpl
in
lea
mov
xor
mov
inc
cld
adc
mov
xchg
lods
push
clc
push
pop
push
sti
push
dec
mov
mov
popl
call
xchg
xor
fisubrl
or
xchg
clc
adc
testl
jmp
jae
in
enter
test
xchg
inc
in
or
mov
sbb
inc
mov
push
sbb
in
bound
enter
insl
stos
push
pop
sbb
fisttpl
sub
dec
xchg
and
jl
mov
mov
mov
xor
les
call
jo
pop
mov
lret
sti
xor
cmp
cmp
repnz
push
iret
addb
cs
sub
mov
addr16
cmpsl
add
jb
xchg
lock
sbb
dec
mov
aam
adc
xchg
mov
adc
repz
stos
in
adc
pop
mov
xchg
lahf
insb
pop
dec
cmp
es
outsl
clc
lret
mov
or
popf
or
rorl
lds
mov
sub
xchg
bound
sbb
shr
btr
cmc
shl
mov
rcr
rcl
call
ror
mov
xor
movzbw
bsr
test
mov
mov
sub
neg
not
mov
push
test
mov
stc
cmc
cmp
bt
add
push
jmp
jg
rcrl
ja
jae
jecxz
addr16
inc
jbe
movsb
fcmovb
and
and
sbb
sub
inc
inc
loope
pop
cmpsl
test
inc
sbb
fistpl
inc
inc
fwait
loop
and
jbe
mov
sub
or
repz
into
out
jae
mov
inc
repnz
cmp
mov
add
pop
test
arpl
test
push
push
rorl
push
push
inc
lret
cmpb
cmc
loope
call
xchg
xlat
inc
stos
sahf
aaa
cmp
xor
add
dec
pop
sar
pop
sahf
lret
les
cmp
sbb
ret
sub
adc
xchg
push
jl
out
and
imul
mov
cmpb
fs
pop
jbe
jns
mov
mov
add
jnp
xchg
ds
mov
xchg
or
mov
je
lods
sbb
insb
and
popf
ret
add
jle
lret
cmpsb
repnz
mov
xor
cmp
arpl
je
cld
pushl
popa
push
sahf
in
data16
aam
popf
lret
aaa
lods
sub
mov
push
adc
xchg
cld
fstps
xchg
not
push
loopne
fwait
inc
insl
inc
xor
mov
icebp
fidivl
lds
fists
or
js
xchg
ds
mov
ljmp
push
and
push
dec
adc
or
push
add
xchg
cmp
mov
aas
lahf
jmp
loope
jb
out
mov
test
fistpll
mov
push
mov
mov
inc
mov
jg
and
movsb
rorb
movb
rol
jmp
cmpsb
aad
sahf
lret
dec
pusha
xor
sbb
das
pop
inc
add
shl
das
lret
push
pop
add
sub
rorb
push
aaa
adc
mov
test
ret
add
jle
jns
out
jns
adc
js
clc
inc
bound
push
jne
or
decl
inc
cltd
push
decb
out
adc
sub
insb
jbe
add
fisubs
fs
mov
push
mov
pushf
pushf
pushl
ret
mov
movb
call
push
jmp
lret
jmp
mov
or
test
leave
xor
dec
imul
fsubrs
fcoms
insl
pop
mov
testb
das
push
jge
sub
push
cmp
pop
icebp
xor
dec
mov
dec
pop
scas
mov
sub
and
add
lret
nop
and
pop
lcall
loop
imul
in
jecxz
fiadds
imul
sbb
xor
les
dec
cmpsl
xor
mov
or
ret
mov
mov
sbbl
movl
pushf
movl
pusha
pushf
lea
jmp
pop
pop
push
pushf
lret
push
scas
and
ficompl
jmp
adc
int
clc
int
xor
cwtl
push
inc
je
andl
cmpl
inc
test
push
add
addb
xor
push
jge
pop
rcr
in
mov
mov
pop
imul
bound
sbb
pop
sub
dec
into
js
stc
fs
inc
pushf
lret
stos
addb
mov
scas
popa
iret
dec
cmpsl
ljmp
jno
cmc
fldt
aad
xchg
cmpsb
sub
mov
xchg
cwtl
add
add
jecxz
mov
jb
in
imul
inc
add
insl
mov
and
dec
pop
xchg
out
fdivr
or
test
push
mov
push
sbb
adc
jne
mov
sub
xchg
out
pusha
data16
mov
scas
push
xchg
sahf
inc
and
pop
int
hlt
inc
test
and
push
imul
daa
testb
lret
pop
sti
subl
stos
pushf
jae
push
pop
adc
jo
je
daa
xchg
sub
push
icebp
lock
fs
cltd
jmp
mov
dec
js
cli
sbbb
push
fs
ljmp
in
mov
scas
or
ret
push
and
mov
data16
and
into
inc
jae
imul
outsl
mov
xor
enter
mul
mov
pop
jbe
pop
mov
in
and
push
add
push
jns
push
add
repnz
icebp
mov
ror
dec
xchg
sbb
push
jecxz
in
ret
shll
fistpl
lods
in
inc
mov
or
clc
insb
push
mov
and
inc
xchg
fs
dec
dec
insb
sahf
inc
into
mov
ret
and
mov
loopnew
cmp
int3
ret
mull
xchg
into
xlat
sbb
pop
movsl
dec
jnp
xchg
xor
jb
call
nop
test
out
sub
jns
inc
sub
call
xchg
add
stos
or
jge
push
and
loop
add
rep
std
cmp
lret
add
xchg
dec
cltd
sbb
sbb
arpl
pop
insb
sbb
xor
mov
mov
test
adc
mov
jl
mov
cmpsl
jns
xlat
sub
xchg
mov
push
adc
pop
jg
mov
cmp
fsubrs
test
mov
mov
mov
or
mov
hlt
xchg
je
mov
lret
mov
inc
cs
add
imul
adc
clc
pop
xchg
imulb
int
lods
push
fstps
test
xchg
repnz
sbb
mov
xlat
and
out
pop
enter
fwait
es
popf
fst
fsubr
cmpsb
push
xchg
xor
inc
orb
pop
lea
push
orl
cs
pop
sbb
addr16
jno
rcrb
movw
pushf
lea
jne
bts
or
ror
dec
mov
jmp
int3
add
or
scas
xor
sbb
int3
sahf
fs
pushf
out
daa
add
inc
sbb
sbb
test
ret
es
leave
mov
pop
and
mov
push
daa
xor
lcall
inc
adc
mov
jmp
pop
push
pop
pop
mov
cmp
push
inc
sub
clc
mov
in
xchg
sbb
xor
lea
xchg
lret
mov
dec
pop
mov
in
imul
int3
lcall
movsb
rclb
mov
xchg
lahf
mov
xchg
dec
dec
test
push
mov
sub
mov
incl
xchg
sbb
sar
mov
sbb
dec
mov
scas
dec
js
cmp
adc
mov
imul
add
sbb
cmp
loopne
testl
and
jae
setne
movzbl
pushf
pusha
lea
mov
pushf
pushf
lea
call
pusha
jmp
call
sub
lea
call
mov
iret
mov
xor
outsl
jae
pop
sbb
or
in
xor
xchg
lcall
shl
push
mov
push
in
js
sub
xchg
add
pop
loopne
mov
loop
cmp
adcl
mov
pop
ror
and
adc
sub
inc
cmp
insl
push
cmp
dec
xchg
arpl
lea
ds
mov
into
shlb
cmc
mov
cwtl
bound
cmp
iret
push
dec
int3
cwtl
sub
xchg
mov
scas
les
or
popa
jns
mov
test
sbb
stos
cltd
pop
int
cmp
aas
addl
lds
jae
pop
xor
jns
call
or
mov
inc
xchg
lret
cmp
fstpt
andl
in
jmp
loope
pop
push
ljmp
cmp
ret
pop
movb
mov
or
pusha
sub
call
leave
pushf
add
in
xlat
inc
filds
mov
movsb
push
scas
sbb
mov
mov
int3
push
push
and
clc
inc
cltd
jp
ljmp
rcrl
jecxz
lret
xor
sub
iret
xor
addr16
out
xchg
scas
pop
jge
jbe
or
push
pop
push
inc
mov
mov
adc
xadd
jno
cmp
inc
sti
int
xor
fs
push
mov
dec
push
xor
test
push
std
pop
jle
jne
or
leave
subb
test
add
push
sbb
sar
mov
out
in
push
aas
pop
inc
dec
add
int3
pop
into
sbb
sti
inc
xchg
mov
add
lret
sahf
ja
lds
xor
jecxz
mov
push
scas
and
inc
pmaxsw
dec
inc
mov
jns
push
adc
imul
dec
pop
jae
xor
enter
mov
xor
je
int3
imul
imul
gs
fidivrs
and
mov
leave
test
add
mov
es
or
push
cld
or
xchg
push
mov
add
jl
test
ret
pop
pusha
sbb
leave
mov
jns
pop
pusha
xchg
mov
lret
lret
xchg
inc
sub
add
xor
stos
xchg
dec
arpl
push
scas
sub
push
mov
xchg
pushf
mov
xor
stos
sbb
data16
xor
xchg
nop
push
cmp
or
push
call
fldenv
or
xchg
repz
insl
mov
adc
shlb
loop
test
icebp
imul
out
js
xchg
call
push
sub
jbe
pusha
and
pop
and
lods
sub
pop
xor
pop
xchg
lret
add
pusha
inc
fcmovnu
out
xchg
ljmp
sub
inc
lcall
pop
xorl
ret
cmpb
cmc
int
test
ds
xchg
arpl
jnp
mov
test
je
test
rorb
out
int
in
mov
clc
sbb
out
jo
add
jmp
ljmp
in
push
pop
xlat
cmp
pushl
pushf
call
jmp
movw
push
lea
jb
bt
cmpb
push
call
mov
fdivrl
cmpsl
inc
inc
mov
mov
mov
xchg
jnp
jp
pop
xchg
xor
adc
cs
loop
mov
call
inc
xor
adc
jmp
sbb
daa
mov
iret
pop
mov
fst
and
fisubrl
in
addr16
in
arpl
or
pushf
lahf
lcall
jae
ds
cmp
ficompl
incb
push
push
fisubl
mov
push
fnstenv
les
icebp
jb
dec
adc
movsb
push
notl
lret
jb
cmc
das
rcrb
and
xchg
dec
push
add
loope
int
lret
int
ja
inc
insb
sub
inc
fisttpll
imul
inc
xchg
adc
cmp
fnsetpm(287
push
lret
mov
arpl
jb
inc
add
mov
jl
jae
aad
fists
sbb
cwtl
xchg
ret
cmp
xchg
popl
test
mov
jmp
or
xlat
cmpxchg
das
cltd
add
sahf
addr16
mov
mov
xchg
lret
push
xchg
mov
jge
adc
mov
inc
mov
js
xchg
pop
jb
loope
jl
cmp
jmp
fld
add
je
push
addr16
mov
sbb
repnz
xor
decb
cmpsl
call
mov
xchg
shl
andb
adcb
sub
lock
mov
in
mov
fstpl
or
call
push
pop
test
push
or
push
mov
jo
imul
insb
addb
aas
xchg
lret
aaa
in
mov
jl
adc
push
dec
mov
adc
pop
rorb
stos
push
and
mov
and
cli
xchg
int3
cmp
jle
ja
inc
test
push
push
push
mov
mov
shlb
jae
and
in
popa
xchg
adc
lret
out
mov
or
rclb
cmp
cmpsb
rclb
das
inc
or
das
imul
imul
inc
outsl
shl
and
mov
lea
sti
out
daa
jb
push
rep
add
stc
cmc
clc
push
movzwl
clc
pop
cmc
mov
push
bt
add
call
jmp
pop
jo
nop
lret
in
mov
push
stos
jnp
jg
fsubl
inc
pop
repz
negl
out
push
mov
mov
push
in
imul
js
jb
sub
jno
mov
pop
icebp
mulb
or
loope
jne
dec
or
dec
lods
dec
loop
in
nop
inc
vcmpnless
stc
mov
mov
xchg
mov
hlt
jmp
js
not
adc
sarl
arpl
jno
add
out
inc
cmp
imul
popf
inc
push
test
push
ficoms
and
xchg
ret
xor
lods
fwait
jl
stos
dec
loop
or
pop
ror
lret
and
fwait
xchg
cmpl
and
stos
push
sti
add
in
push
out
add
ds
cmpsb
scas
std
cmpsb
mov
jg
stos
and
sbb
mov
mov
shl
pusha
ds
je
mov
push
mov
stc
mov
and
xor
pushf
arpl
popa
push
clc
lcall
es
mov
xchg
mov
aas
int3
or
in
fwait
jae
jbe
sbb
adc
fmuls
adc
or
mov
adc
ljmp
push
push
fistpll
pop
dec
cmpsl
inc
push
adc
mov
faddl
movsb
ds
test
fwait
jbe
xchg
arpl
cmp
call
out
es
imul
and
lcall
mov
xchg
shl
shl
enter
jns
xor
xor
jmp
popa
test
adc
lret
inc
cmp
cltd
js
daa
cwtl
pop
mov
fcmove
add
pop
jle
mov
outsb
ss
cmp
sub
jae
xor
lea
ja
call
pushl
jecxz
cmp
mov
xchg
in
insl
inc
movsb
ljmp
ds
jge
addr16
pop
jmp
mov
mov
iret
sti
jnp
int
cli
xchg
dec
mov
fcmovne
insb
cmp
jecxz
sbb
dec
ret
jp
xor
mov
pop
jge
sbb
insl
in
out
sar
adc
aam
daa
mov
mov
jmp
fsts
incb
jne
sub
adc
leave
pushf
in
int3
loope
xorb
lods
jmp
flds
sub
mov
mov
lcall
sub
sbb
fdivs
roll
push
adc
inc
mov
adc
push
add
idivl
repnz
lahf
mov
xchg
and
sahf
fmull
jl
dec
cs
jmp
xchg
clc
movsb
loop
les
pop
push
pop
lea
or
push
xor
sbb
xor
bound
or
pop
push
dec
add
adc
lods
rolb
adc
push
jb
in
mov
sbb
mov
inc
fidivrs
mov
out
pushl
cmp
xchg
aad
in
mov
sub
xor
fucomip
mov
sti
push
scas
sbb
mov
add
jge
cmc
cli
sti
lods
mov
sub
into
xchg
adc
test
gs
movsb
test
je
pop
sub
ds
pushf
inc
outsb
out
add
xor
bound
das
ss
call
js
fsubs
jno
test
adc
mov
jo
daa
mov
cs
addr16
push
idivb
xchg
ja
jecxz
jne
fwait
shr
cmp
inc
push
cli
out
mov
fsts
mov
in
decl
inc
add
cmpsl
cmpxchg
inc
dec
repnz
out
or
sti
inc
mov
cld
jge
cmp
xlat
inc
dec
lret
test
mov
aas
xchg
arpl
mov
test
imul
lret
mov
jnp
adc
mov
loopne
lock
lret
out
stos
inc
test
std
cmp
adc
imull
xchg
and
lahf
xor
lods
frstor
and
les
shlb
loop
inc
pop
cmp
lret
push
or
xchg
repz
xchg
sahf
cmpsb
das
push
repnz
dec
es
enter
hlt
push
pushf
lea
jmp
xor
lea
jns
pushf
pusha
dec
movb
rol
cmp
cmc
sub
test
cmp
lahf
lea
push
push
mov
call
sbb
lahf
mov
fcoml
dec
mov
imul
loop
lods
mov
or
adc
js
push
mov
pop
xchg
xchg
sub
gs
dec
test
out
inc
out
ja
or
ss
outsl
jb
cmp
jne
fstp
push
fbld
jb
adc
mov
cli
lcall
orl
shrl
sti
mov
inc
mov
gs
push
popa
add
lea
movb
pushf
mov
jmp
pushf
movl
pushf
pushl
mov
movl
mov
lea
jmp
pop
dec
inc
mov
fcompl
popa
pop
jp
jg
jo
stos
xor
cli
dec
inc
dec
add
adc
lock
fcomi
cmc
fisubrl
fs
faddl
xlat
in
fwait
in
lcall
add
shr
push
sub
mov
outsl
cmpsb
ss
pop
cli
lock
icebp
push
cltd
pusha
lcall
or
xor
jbe
in
rol
cmp
in
xchg
lods
mov
in
ficoms
sti
mov
decb
pop
out
mov
andb
das
mov
and
pop
iret
mov
faddl
add
pop
mov
arpl
dec
enter
mov
ret
andb
mov
xor
xchg
xor
dec
das
push
jp
and
mov
push
shl
ret
adc
adc
leave
test
nop
jmp
sbb
test
lahf
mov
or
xor
sarl
sub
or
scas
dec
pop
lds
nop
imul
int
test
stos
repz
sbb
mov
fdivrl
es
cld
sahf
push
dec
mov
data16
sub
popl
dec
loop
les
mov
push
inc
clc
pushf
sahf
out
int3
aas
ret
leave
imul
std
adc
add
sub
sbb
sub
gs
loopne
xadd
push
or
xchg
push
les
push
add
and
test
ljmp
bt
pushf
push
sub
bt
pushf
cmp
push
mov
push
lea
jmp
xchg
insb
jecxz
lret
loop
adc
hlt
push
ret
aam
sbb
and
lea
jg
mov
mov
rcr
and
jo
mov
or
push
test
call
and
push
pop
lods
sub
rclb
daa
in
call
pop
inc
inc
sarl
ret
fs
mov
js
xchg
leave
iret
jl
rolb
xorl
xor
lcall
mull
cmp
mov
out
xor
and
rep
push
fstl
ficoms
pop
jo
and
jb
xor
push
popf
sbb
and
fsubr
fs
inc
pop
rol
int3
dec
aaa
mov
shlb
dec
loope
push
pandn
stos
loope
repnz
fstps
sub
movb
mov
lea
jmp
movsbw
not
movzbw
lea
jmp
xchg
in
in
lret
fadds
push
dec
fldenv
jl
sbb
push
sbb
into
addl
sbb
int
jge
std
xchg
loop
xor
mov
mov
popa
dec
test
fnsave
vcvtuqq2pd
adc
push
aam
sbb
xlat
test
cmc
jo
inc
insb
jmp
clc
or
movb
pushl
pushf
lea
je
jmp
push
pop
push
mov
fmull
aad
cmp
js
les
fwait
jb
inc
fs
mov
cli
lcall
push
sahf
push
arpl
add
ljmp
push
sub
insb
cmp
adc
sub
movsb
cmp
inc
and
pushf
in
inc
sbb
jnp
add
loop
adc
lret
testb
jg
pop
ljmp
clc
xlat
inc
sbb
stc
ret
jne
push
fistpll
cltd
or
jbe
repz
mov
jns
aas
xchg
jns
stc
pop
iret
sub
je
movsl
pop
mov
dec
testl
cmpsl
test
mov
or
cmpsl
mov
dec
xchg
test
fwait
cmpsb
xchg
fcompl
add
in
push
nop
cmp
addr16
push
decb
push
adc
push
sbb
jae
test
mov
les
sub
add
add
imul
mov
inc
or
sbb
test
sub
lahf
mov
es
movsl
sti
adc
jae
loope
push
cmp
mov
testl
and
int3
icebp
dec
dec
sub
push
pop
lret
jnp
mov
fsts
rclb
into
addr16
mov
aas
inc
daa
and
xor
nop
xchg
lea
push
in
push
xchg
inc
insb
mov
movups
into
icebp
aad
mov
fadd
adc
mov
jecxz
xchg
jne
mov
jmp
cmpsl
or
rclb
jo
mov
rclb
jmp
les
sbb
sahf
adc
adc
sub
or
xchg
and
call
sar
mov
fisttps
stos
push
cmp
jmp
push
enter
gs
fsubl
sbb
pop
push
xchg
fmull
mov
and
daa
lret
pop
xorb
xchg
xor
mov
xchg
cmpsl
jbe
divl
scas
aam
stos
inc
push
mov
xlat
add
lds
int
sbb
rolb
pusha
jo
cmpsl
jo
out
xchg
imul
test
jb
mov
mov
outsl
out
daa
jmp
adc
mov
mov
sub
ret
dec
mov
or
pushf
sbb
mov
arpl
mov
and
mov
out
and
adc
jmp
into
outsb
or
pop
dec
roll
dec
mov
fcompl
pop
loopne
jg
xor
lahf
inc
mov
into
inc
xor
enter
xor
std
xchg
or
and
and
pop
aas
pop
ljmp
xchg
rcrb
push
fidivs
pop
in
lods
mov
clc
les
cmp
cs
js
popa
cmp
int3
notb
push
pop
mov
add
cmp
jmp
stos
pop
out
lea
cmpsl
andl
jns
bound
inc
pop
lea
xchg
dec
mov
inc
xchg
in
cmp
cld
mov
aad
and
mov
mov
or
aaa
xchg
movsb
rcr
ret
push
push
add
xchg
ds
flds
dec
mov
push
call
sti
jnp
xchg
orl
dec
xor
ljmp
lods
out
lock
cmp
jl
cmp
inc
sbb
dec
out
pop
sub
ja
and
rcrb
lea
lock
adc
fsubrs
in
pop
subb
mov
cmp
popa
push
iret
pop
je
dec
pusha
mov
cmp
lods
cmc
sbb
add
xchg
pop
jo
enter
test
out
inc
lock
jno
test
leave
movb
pop
xchg
mov
test
mov
jnp
mov
sub
mov
jae
xchg
stc
loopne
popa
push
inc
aam
mov
ret
shll
inc
inc
and
movsl
stos
movb
lea
jmp
mov
pushf
jmp
mov
int
lret
cmp
mov
jns
loopne
bound
sub
mov
ret
pop
iret
mov
mov
mov
push
jmp
jbe
mov
cmp
insb
push
xor
call
pop
jne
xchg
stc
mov
push
aas
fcomps
pop
insb
and
movsb
push
out
cmpsl
mov
dec
out
lea
lret
jbe
add
and
pop
adc
cmc
pop
and
mov
shr
popf
shll
pop
sub
add
sub
pop
test
es
daa
cwtl
repnz
inc
push
mov
rol
xchg
je
mov
ficomps
or
lds
push
or
jnp
push
pushl
fistps
or
inc
cmp
inc
cli
xchg
push
mov
pop
imul
cld
out
cmp
add
inc
repz
sub
pop
mov
inc
test
push
cmc
clc
pop
repnz
lret
pop
mov
aam
hlt
xor
sarb
inc
lock
jmp
insb
jmp
cld
fdivrs
fstl
mov
in
push
or
mov
enter
mov
cmp
lea
or
outsb
push
sub
or
adc
ja
add
leave
imul
outsl
cltd
dec
test
call
cmp
sub
aad
fdivs
pop
jns
or
rorl
xchg
mov
xchg
shrl
push
mov
repnz
insl
in
dec
or
std
mov
cmpsl
test
xchg
or
sub
xor
out
mov
xchg
add
gs
jle
popf
adc
add
addl
mov
test
mov
cmp
xchg
ret
and
push
dec
scas
and
repz
into
inc
push
pmaxsw
inc
andl
and
cwtl
inc
inc
mov
or
fstps
repz
xchg
mov
add
mov
mov
inc
push
adc
test
dec
push
cmp
loop
subl
cld
insb
mov
push
pop
aaa
inc
inc
push
inc
add
das
push
mov
leave
fcos
aaa
mulb
cmpsl
mov
and
xorl
fstl
push
out
pop
cmp
stc
mov
dec
bound
jmp
test
jecxz
in
add
jmp
pop
daa
popa
add
pusha
push
call
lea
jae
btr
pop
cmp
aaa
push
bsr
mov
xor
bt
mov
xor
and
neg
not
cmp
movsbw
push
mov
call
movb
dec
bt
cmc
pushf
call
mov
or
imull
jp
lds
inc
add
test
mov
or
lret
jnp
addr16
pusha
and
push
insb
and
ffree
popa
xor
pop
mov
adc
scas
jge
push
test
je
rolb
lret
mov
xlat
in
pop
out
pushf
dec
loop
xchg
sub
jg
or
movsl
jg
cmpsl
mov
cmp
pop
cmp
push
out
push
lea
test
jl
mov
xor
int3
dec
mov
in
rolb
adc
push
xor
sbb
mov
insb
add
popf
and
jo
jae
out
stos
mov
xchg
mov
cmc
jb
je
inc
sbb
jns
mov
pop
test
jmp
push
mov
dec
stos
fs
imull
aam
nop
inc
cmpsb
mov
iret
ficoml
jo
mov
mov
add
ljmp
cmp
fsubr
mov
les
clc
cs
fcoms
test
mov
and
popa
pushw
xchg
scas
and
xor
ja
into
push
int
push
insl
sbb
les
cltd
push
je
sub
xchg
bound
cs
pop
icebp
mov
pop
fiaddl
xchg
mov
cmc
mov
fnstenv
cmp
cmp
out
mov
clc
xchg
cmp
lods
xor
push
pop
lret
add
ljmp
and
xor
clc
pop
popa
cli
icebp
aaa
push
call
enter
fidivrs
mov
xchg
cmpsl
jne
repnz
mov
orl
inc
test
xchg
in
pop
push
xchg
lcall
sub
xchg
xor
ficoml
mov
or
and
push
arpl
cli
stos
xchg
lea
cmc
data16
aam
aas
push
or
fdivs
loop
movb
clc
stc
repnz
push
pushf
movw
pusha
lea
jmp
movb
pushl
pushf
lea
jb
call
and
lret
mov
std
sub
int3
sub
jo
jg
js
ficompl
push
or
adc
cmp
shll
cs
shrb
adc
sub
mov
jle
outsl
cmpsl
or
pop
xor
and
inc
push
mov
or
pop
sub
imull
imul
mov
pop
outsb
push
push
movsl
jno
movsb
sub
jmp
pushf
aam
out
mov
fsubs
lret
out
sub
sti
scas
mov
cmc
movsb
str
push
pusha
movl
pusha
movl
movw
push
movb
lea
jmp
gs
jge
fdivrl
loope
idiv
push
pop
pusha
imul
push
popa
lret
mov
and
inc
aam
adc
mov
mov
fimull
adc
fsubrs
inc
inc
mov
xor
sbb
add
test
and
ret
int3
imulb
sub
jnp
xor
sbb
xor
fsts
push
leave
push
cmpsb
nop
add
jl
adc
add
adc
test
icebp
add
jnp
out
in
adc
bound
mov
mov
insl
or
add
cld
movsl
movzbw
pusha
xchg
mov
pushf
push
mov
bswap
push
mov
movb
mov
bswap
not
call
lea
jae
pushf
lea
jmp
jb
stc
cmp
call
fs
aas
jl
fdiv
xchg
xchg
sub
repnz
jmp
out
mov
imul
loope
notl
pop
pop
inc
jp
das
dec
xor
adc
push
cmp
mov
fisubrl
dec
jmp
xchg
cmp
mov
cmp
bound
xchg
ljmp
cmp
hlt
repnz
test
rolb
clc
out
mov
aaa
xchg
popa
add
mov
das
dec
push
sbb
fs
mov
std
adc
xor
add
subl
pop
sbb
das
or
ret
adc
mov
pushf
gs
cmpsb
sub
push
push
int3
sub
jge
mov
mov
popa
sub
ret
sub
xchg
cmp
mov
mov
and
cmp
lret
lods
pop
pop
out
lods
mov
inc
cmp
dec
std
mov
xchg
aaa
xor
in
pop
push
xchg
xor
add
add
add
add
add
add
add
add
adc
jo
adc
add
add
add
jbe
adc
or
bound
inc
lret
xchg
and
xchg
pusha
fstps
cmc
rcrl
bound
syscall
insb
mov
int
pop
mov
mov
mov
push
jecxz
cli
sti
rorl
and
in
sub
sbb
xchg
das
data16
jecxz
pop
pop
sti
lods
mov
in
daa
cmp
jp
hlt
cmpsl
loopne
add
inc
movsl
inc
test
dec
inc
adc
jbe
cmc
xor
pop
iret
jo
nop
aam
in
add
sahf
call
repnz
lret
push
cmp
pop
pop
mov
out
pop
mov
fsubrs
cmpsl
mov
fdivl
fimuls
enter
jl
adc
push
cli
cli
jno
je
enter
xchg
cltd
cmp
or
mov
pop
jno
push
sbb
or
mov
or
push
hlt
inc
cmp
sub
decb
push
ja
bnd
std
mov
push
sbb
push
movsb
leave
mov
repnz
inc
dec
xchg
repnz
mov
cs
gs
fbld
shll
pop
lret
mov
cmpsb
aaa
cmpb
sbb
movsl
jne
sub
mov
jns
xor
outsl
jne
xchg
ficoms
and
insb
mov
out
push
xchg
stos
out
ja
mov
in
dec
sbb
cmp
jge
in
shlb
xor
mov
ss
jno
cmp
and
pop
push
or
xchg
stc
mov
xchg
fildl
orl
repnz
mov
scas
fwait
shlb
push
aas
popa
mov
stc
jb
mov
pop
imul
or
cld
inc
outsl
cmpsb
pop
movsl
inc
enter
int3
imul
xor
jecxz
jl
movb
mov
stc
cli
sbb
or
nop
jmp
test
or
repz
rcrl
and
cmpl
pop
xlat
les
inc
dec
cmpl
in
repnz
movsl
mov
jae
andl
mov
sub
rcll
lret
es
cmp
out
lds
std
dec
xchg
fcomip
cltd
mov
mov
shll
or
xor
test
ja
pop
ret
in
jae
adc
adc
dec
lar
dec
xchg
lods
adc
xchg
sbb
lahf
add
adc
loop
not
xor
mov
addr16
cmp
jo
or
cmp
int
pop
xchg
cmpsl
ja
and
push
mov
lods
dec
inc
adc
shlb
rcrl
call
mov
mov
nop
cmpsb
cmpsb
movsb
lret
in
cmpsl
mov
push
outsb
mov
xorb
push
jae
and
add
xor
and
call
push
push
mov
insb
shll
not
mov
add
leave
push
inc
icebp
xchg
jo
pop
or
test
and
adc
adc
xchg
sahf
dec
out
fsubrl
jne
lods
adc
mov
das
shrb
and
push
pop
xlat
rorb
int
jbe
adc
fnstenv
lahf
shrb
stc
pop
icebp
mov
imul
or
les
cmp
pushf
or
jbe
mov
subb
mov
lea
xor
lcall
push
pop
and
ret
arpl
gs
insl
daa
mov
xchg
fst
testl
mov
jno
jo
sbb
adc
cmpsl
xchg
mov
sbb
adc
dec
pop
lods
and
aas
js
popf
fcmove
adc
cmp
mov
mov
insl
out
xor
mov
mov
push
daa
pop
sarb
adc
out
mov
or
and
pusha
lods
lcall
in
pop
lret
mov
loopne
push
clc
dec
insl
ds
xor
adc
push
push
out
mov
std
adc
loop
es
dec
cmp
add
jbe
insb
cli
inc
repz
cmpl
daa
outsl
and
jp
sarl
adc
dec
adc
or
push
ja
lret
dec
inc
cs
fdivrl
and
fadd
sbb
into
sbb
fidivl
inc
dec
push
push
sti
xchg
mov
enter
cmpsl
mov
sub
jmp
es
or
test
inc
in
fdivrs
repnz
setg
stos
lcall
or
in
dec
test
mov
loopne
mov
call
mov
leave
dec
push
jae
sbb
ds
notl
xor
sub
push
js
negb
repz
popa
dec
mov
push
xchg
dec
mov
imul
jl
mov
xchg
inc
adc
inc
ret
inc
repz
inc
imul
sub
inc
mov
pop
bound
ja
mov
in
or
jae
mov
xchg
cmpsl
hlt
loopne
sarl
sbb
add
pop
mov
rcr
jne
pop
and
sub
adc
jno
sbb
mov
and
jnp
mov
ror
push
inc
lahf
ffreep
xor
cld
addr16
mov
and
dec
ds
in
loope
mov
cwtl
pop
xchg
adc
fadds
cltd
mov
scas
push
mov
les
les
push
stos
leave
addr16
filds
sub
cmovo
xor
sbb
lret
xor
fstps
loopne
test
xchg
es
sub
and
aas
out
dec
push
mov
sbb
imul
lods
dec
pop
cwtl
mov
ret
xchg
frstor
sub
and
sbb
mov
out
subl
adc
ret
outsl
sub
jl
sahf
and
inc
idivl
and
lds
xor
mov
mov
sbb
xchg
xor
mov
xchg
xor
rcll
outsb
incb
es
fst
push
mov
inc
imul
inc
in
imul
dec
cwtl
adc
dec
jb
cmp
jmp
jg
pop
adc
scas
ja
fisubs
or
ds
and
cmpb
int
mov
sbb
jmp
sbbb
xchg
jp
cmpsl
icebp
sbb
icebp
test
jecxz
dec
and
orl
aas
dec
cli
cmp
aas
ss
and
dec
or
jle
lcall
push
jb
inc
cmpb
xor
dec
xchg
cmc
data16
xor
and
insl
push
mov
ficompl
insb
push
nop
adc
nopl
mov
ret
rcrb
cmp
or
sbb
mov
fs
rcrb
outsb
subb
call
mov
xor
stos
in
inc
or
xor
iret
pushf
mov
gs
mov
movl
test
lret
push
sub
push
and
sbb
and
test
inc
mov
call
push
sbb
lods
xchg
xor
sub
or
sarb
jb
sub
and
push
lret
xchg
jo
mov
mov
cltd
bound
loopne
movl
lds
xor
dec
fcmovne
cmp
mov
shrb
pop
mov
fisubrl
test
mov
xchg
fldt
xchg
test
mov
mov
sti
sahf
add
cmp
mov
push
mov
cmc
sub
push
repz
aas
je
shlb
mov
stos
insb
shrb
push
and
xor
jle
lods
decb
push
mov
rcrb
fisttpll
imul
add
sub
sub
xchg
rcrl
mov
das
lret
add
push
std
addr16
or
shl
push
mov
mov
cbtw
into
dec
fidivrs
dec
hlt
sub
cmp
mov
mov
mov
fists
test
into
repz
pop
lcall
jle
test
fimuls
inc
lcall
scas
sub
insb
subl
xor
mov
sub
sub
in
mov
fwait
int
push
pop
cmc
pop
subl
ja
cmp
fwait
push
cld
imul
push
push
pop
jno
out
cmp
xchg
xchg
cmp
cwtl
shll
push
or
jg
adc
repnz
pop
addr16
xor
ret
push
js
pop
mov
push
pop
out
jecxz
xchg
shll
shrb
daa
lea
loopne
jns
sahf
and
out
in
popa
cmp
inc
fcomps
fdivs
pop
add
mov
mov
sbb
das
mov
add
arpl
in
in
mov
lock
mov
ret
cwtl
lods
jmp
jge
or
popf
popa
into
lcall
lcall
jns
in
into
xor
push
push
sbb
mov
mov
add
mov
outsb
dec
jns
and
mov
sub
addr16
and
cmc
jmp
inc
xchg
add
jb
mov
add
daa
aam
xchg
lods
ds
jbe
idivl
cli
adc
rcl
pop
pop
mov
addr16
out
insb
nop
mov
adc
mov
jle
les
addr16
out
push
xor
ret
cmc
cwtl
lahf
lcall
or
xchg
lods
test
adc
xor
out
mov
aam
movsb
inc
mov
outsb
rcrb
test
stos
insl
aad
xchg
scas
push
jb
hlt
aam
arpl
push
inc
stos
frstor
push
das
clc
jns
jno
mov
ds
or
pusha
nopl
fwait
testb
mov
call
pop
or
arpl
fldt
mov
ja
lret
jnp
xchg
lock
arpl
cmp
aas
mov
and
stos
sub
sub
and
lahf
dec
push
sub
xor
mov
loopne,pt
int
dec
outsl
add
adc
pop
mov
push
fcmovu
adc
aaa
push
dec
adc
sbb
out
bound
mov
in
jg
cmp
clc
push
push
adc
jne
shlb
out
ja
mov
in
hlt
into
push
xchg
into
add
into
cmp
lds
sahf
push
es
lods
jmp
sbb
sub
popf
pop
and
pop
pop
arpl
fiaddl
dec
xor
add
add
bswap
lods
cmc
movsbw
sub
neg
xor
neg
movzbw
xchg
dec
movzbl
ror
rol
sub
bsf
bt
xor
pusha
jmp
pop
shrl
fsubr
mov
test
xchg
pop
dec
sbb
mov
pop
out
mov
sub
mov
popa
in
push
push
xchg
mov
repnz
mov
dec
test
lcall
sub
pop
add
push
sbb
xor
stos
pop
sub
outsb
lret
lcall
movsl
fxtract
imul
pop
es
sbb
jns
inc
repz
or
and
inc
pop
mov
inc
hlt
add
fldl
mov
outsl
sub
add
cmpsb
sub
imul
repz
pop
gs
push
mov
xor
mov
das
shrl
sub
out
mov
outsb
rorb
in
outsb
dec
jb
mov
xlat
or
jo
std
ljmp
push
stc
cltd
loop
jge
in
lret
aam
arpl
fbld
jnp
movsl
jmp
mov
sbb
jecxz
dec
lods
jmp
out
inc
mov
jl
jno
cwtl
push
stos
inc
sub
pop
in
mov
cmpsl
pop
push
ljmp
push
dec
cld
and
aam
ret
repz
insb
cmp
addb
pop
push
sbb
dec
nop
in
mov
jecxz
or
int3
cld
mov
fs
jecxz
stos
in
sahf
sahf
pushf
pop
nop
inc
clc
mov
sbb
popf
cwtl
push
mov
pop
and
xor
pop
sub
xchg
push
int
cmp
cs
push
icebp
scas
jl
in
mov
or
lcall
xor
jae
cmp
add
inc
insl
lret
nop
in
lods
in
sub
adc
push
into
cmp
push
mov
jo
sbb
sarl
ja
test
pop
xchg
mov
push
xchg
imul
rclb
das
sete
sub
andb
adc
cmc
daa
inc
xlat
outsl
clc
fcmovnb
pusha
out
jl
xorb
push
sub
pop
addr16
push
xor
sbb
mov
or
add
xorb
out
movsb
loopne
out
xor
in
xchg
mov
flds
imul
imul
or
loop
add
fistpll
lods
mov
bound
cmp
cmpsl
mov
mov
mov
sub
sarb
add
jle
xchg
mov
fwait
adc
jmp
outsl
sbb
fisttpl
add
movsl
lods
cmp
das
ja
fwait
cmpsb
xor
and
bound
in
insl
xor
push
dec
push
dec
cltd
outsl
mov
cltd
sub
cwtl
out
or
xchg
cmp
fidivrl
ds
out
mov
shrl
fcompl
lret
jp
iret
sbb
dec
push
mov
ret
cmp
cmc
mov
insl
jbe
jnp
int
or
mov
adc
jae
in
jmp
rdpmc
data16
xlat
inc
popa
sub
or
lcall
mov
pop
and
int
mov
pop
mov
mov
jg
and
fisubl
outsb
inc
stos
pop
sbb
testb
xor
cmp
insl
mov
mov
xchg
icebp
scas
call
and
fdivl
cmpsb
sub
cs
mov
sbb
shrl
add
mov
repnz
dec
mov
adc
shl
push
divb
jno
cld
gs
sti
or
cltd
pop
test
cld
xchg
push
jne
push
sbb
in
out
mov
jb
clc
push
rolb
ds
test
imul
and
jbe
mov
subb
mov
loop
cmp
aas
push
mov
xchg
fnstenv
in
roll
mov
cs
pusha
fsts
sbb
xor
movl
cmp
sub
int
js
adc
hlt
mov
push
jmp
or
pop
xchg
js
pop
and
data16
lcall
pop
repnz
mov
aaa
psubusw
aam
jg
push
pushf
pusha
movl
pushf
push
call
mov
lea
call
call
jmp
fdivl
add
dec
mov
scas
jp
jle
adc
loope
jns
push
arpl
outsb
inc
push
mov
dec
rorl
cwtl
sub
push
adc
flds
fcompl
cmpb
test
cmp
js
mov
test
cmpsl
cmp
cmp
cmp
sti
pop
or
xchg
popf
out
adc
vmovshdup
add
and
dec
hlt
mov
adc
xchg
push
cmpsb
pop
jge
jmp
jp
sub
xchg
or
roll
xchg
fbld
ss
inc
pop
push
and
mov
movsb
push
lea
cwtl
cmp
pusha
inc
and
cmpsl
clc
in
xchg
fcmovne
inc
push
xchg
push
enter
inc
jo
mov
sub
and
mov
shr
lcall
mov
xchg
mov
xor
fisubs
jmp
lds
mov
out
jo
dec
add
and
in
shrl
je
mov
sbb
inc
mov
xlat
jle
push
popa
leave
lcall
xor
jmp
mov
dec
clc
or
adc
push
out
inc
and
adc
cmp
xchg
cmp
mov
xor
inc
push
outsb
pop
orb
or
cmp
test
cmpsb
push
adc
pop
test
ljmp
pop
mov
int3
daa
mov
inc
ss
jbe
cwtl
xchg
cmp
gs
shl
ret
dec
in
cmpsl
movsb
int
jo
cmc
push
mov
cli
leave
dec
or
push
jno
fnstsw
mov
mov
mov
inc
mov
sbb
ds
fldt
pop
xchg
inc
int3
mov
bound
push
pushf
ret
scas
add
out
in
mov
or
dec
nop
scas
loopne
es
and
pop
add
push
je
jbe
cmp
xchg
xchg
xchg
outsl
sbb
cmp
ja
sbb
clc
add
mov
insb
imul
stc
and
sub
lds
loop
xchg
push
enter
sbb
or
mov
ss
mov
les
xor
repz
dec
ret
mov
imul
test
lock
push
sahf
fcmovnb
push
inc
iret
inc
add
jecxz
fsubrl
xchg
cmc
adc
xor
cmp
repnz
add
jns
sub
ret
push
or
movsb
lds
sbb
jl
add
js
mov
and
rcrl
in
mov
add
into
lret
outsl
lods
outsl
out
lcall
mov
inc
out
add
enter
filds
movsb
xor
lods
pusha
leave
adc
arpl
out
call
lcall
addr16
lods
xor
adc
test
sub
pop
jns
adc
push
push
xchg
mov
loope
sub
movsb
lret
dec
adcl
dec
stc
ret
mov
sbb
xchg
je,pt
lds
xchg
mov
xor
mov
mov
adc
jnp
repz
jg
adc
dec
pop
inc
lods
jmp
add
lock
cld
mov
divb
pop
adc
lcall
inc
pop
jno
cmp
jno
icebp
xchg
fstpl
arpl
shll
push
repnz
divb
test
cmp
pop
lahf
lahf
not
lea
jb
push
mov
push
mov
mov
lea
js
ja
pusha
jmp
add
faddl
idivl
fcmovne
imul
lret
add
jge
shr
mov
cmpsl
jge
sbb
test
lahf
mov
clc
cwtl
cmp
aam
insl
adc
jno
xlat
in
add
cmpsb
gs
in
xchg
sarb
scas
lods
jnp
cmpl
adc
out
dec
enter
push
inc
mov
inc
pop
fists
fcmovbe
xchg
mov
xchg
test
xchg
pop
mov
cmp
lock
mov
jb
mov
dec
pop
mov
fwait
push
push
pop
cmpsl
ja
push
adc
add
mov
add
xor
push
clc
bt
rol
jmp
into
push
sbb
inc
or
jmp
lcall
or
sbb
push
lock
je
or
cmp
call
in
or
or
and
push
xor
push
lods
out
enter
jg
push
pop
mov
cmp
sbb
xchg
ret
rcrb
cmc
in
fisubrl
imul
jmp
pop
rorl
fs
inc
shll
cltd
sbb
pop
dec
mov
and
pushf
scas
jg
movsl
xor
addl
popf
hlt
call
out
mov
pop
sub
jle
mov
fcompl
sahf
lahf
inc
popa
pop
out
xchg
in
stc
mov
das
sub
cmp
cmc
shl
or
clc
popa
mov
and
jge
mov
pop
dec
mov
dec
mov
fwait
cmp
pop
cmpsl
xchg
push
test
scas
scas
vmulps
dec
movb
inc
insb
dec
jp
cwtl
into
push
jg
mov
add
inc
sbb
dec
xlat
lahf
lret
jbe
push
mov
mov
pop
mov
mov
rcrb
dec
fldpi
sbb
ljmp
adc
and
sbb
jbe
into
test
imull
mov
mov
movsb
arpl
dec
lods
scas
push
xlat
add
push
add
test
cmpsb
sbb
push
mov
movsl
pusha
fmuls
xor
pushf
in
fcomip
lods
and
push
pop
cmc
xor
bnd
push
jle
or
pop
push
mov
add
inc
stos
sub
push
fmuls
lea
inc
xchg
dec
pop
stos
jmp
cmp
cmpsl
jbe
sbb
lret
aad
mov
mov
fdivrl
mov
lret
sbb
adc
subb
jmp
aas
or
push
test
xor
xchg
or
dec
and
aam
jg
lret
jne
or
push
daa
call
push
dec
das
add
jo
icebp
scas
jns
cmpsl
and
sti
jbe
lahf
inc
loope
cmc
xchg
test
nop
in
cli
inc
mov
adc
fnstcw
mov
pop
in
ret
pop
ds
push
dec
cld
dec
lahf
cltd
ds
lahf
mov
mov
xor
ljmp
inc
cmpsb
add
sub
out
pop
das
mov
lds
test
movsb
jb
pop
out
jle
xchg
mov
ds
pop
in
rclb
iret
xchg
inc
gs
adc
add
pop
sbb
lret
adc
and
scas
out
push
mov
negl
pop
dec
add
scas
pop
fisubs
f2xm1
lock
add
rorb
mov
pop
jbe
fisubrl
inc
sbb
ja
sbb
jge
icebp
pop
add
mov
out
pop
roll
jp
frstor
and
std
addr16
adc
sbb
xlat
pop
adc
stos
push
les
lock
and
pop
sub
lds
and
add
jne
cmpsb
push
lods
jmp
shl
pushf
repz
out
cmp
shl
cmp
lahf
mov
icebp
es
mul
imul
into
xor
mov
and
pop
stos
addr16
nop
lahf
aaa
sub
xchg
pshufw
sub
arpl
mov
xlat
fadd
shlb
pop
loop
lods
jb
test
jnp
cli
push
mov
pop
outsb
in
scas
int3
sub
mov
push
sub
mov
mov
and
or
fdivl
push
and
call
inc
mov
in
mov
xlat
shl
ljmp
cmp
mov
insl
xor
rclb
push
cmc
sbb
mov
add
call
jg
sbb
clc
adc
stos
jne
inc
sbb
xchg
out
cld
jbe
add
es
or
out
scas
jbe
adc
xor
ljmp
sub
mov
icebp
iret
inc
movsl
adc
cmpsb
push
mov
pop
aaa
outsb
dec
popa
sbb
pushf
mov
sbb
fcomps
xchg
out
cmp
pop
popa
shlb
add
ret
es
inc
mov
push
movsb
or
add
arpl
sbb
rcrb
and
dec
in
or
bound
add
ficomps
les
xchg
out
cld
mov
stos
popl
push
aam
fcomps
push
jp
out
gs
xlat
cltd
pusha
test
xchg
xchg
lock
push
inc
lods
jg
fsts
int
inc
rorl
add
fiadds
ret
pop
insl
out
cld
push
js,pn
mov
mov
jle
bnd
pop
mov
repz
or
das
filds
push
repnz
mov
mov
mov
sub
movsb
mov
push
repnz
je
insl
xor
jbe
fists
jg
fsubr
std
test
xchg
dec
mov
shrl
jb
mov
or
in
or
jmp
fimuls
push
icebp
add
push
shrb
test
fidivs
cmp
jb
add
sub
fmull
test
sub
sub
xchg
jns
xorb
daa
dec
stc
lret
in
mov
scas
inc
mov
add
testb
jb
lret
inc
insb
and
add
outsb
push
xor
rolb
int3
and
and
data16
jae
mov
jge
sbb
dec
lcall
mov
imul
mov
rorl
ljmp
inc
mov
jl
test
jne
mov
jle
icebp
jge
clc
xchg
jp
js
jbe
mov
push
pushf
sahf
data16
push
lahf
scas
das
or
dec
sub
sub
pop
and
icebp
jb
jmp
ja
sbb
lds
lods
mov
dec
pop
xchg
or
mov
sbb
enter
imul
repz
jo
inc
mov
xchg
mov
loopne
aam
addl
inc
stc
jne
xor
lret
mov
bound
mov
xchg
jnp
in
daa
xor
jp
add
test
mov
xchg
fstl
mov
loope
movsl
xor
repz
mov
bound
mov
push
push
sub
mov
movsb
scas
ljmp
cmc
pushf
imul
fxch
stos
out
sbb
sbb
outsb
mov
mov
mov
shrl
cmp
aas
jl
or
jge
jbe
or
sub
jmp
test
mov
and
nop
stos
int
cmp
fmuls
mov
mov
fstl
cs
testb
jb
lahf
loopne
repnz
aas
aaa
push
cli
jno
and
outsb
mov
adc
push
mov
xchg
mov
mov
push
mov
hlt
icebp
mov
lret
xor
xchg
jg
loope
cmpsb
js
sahf
inc
jge
mov
dec
push
jns
pop
in
sbb
repnz
mov
dec
mov
insb
adc
and
add
lea
add
movsb
xchg
iret
xlat
xchg
mov
jmp
pop
dec
cmp
loope
push
dec
xchg
popf
ss
bound
subb
inc
shl
mov
shrb
jmp
leave
je
push
imul
dec
mov
pop
fcompl
mov
fstpt
jg
jb
xor
dec
mov
lret
adc
dec
insl
pop
xchg
loope
sub
test
lcall
js
jmp
pop
jle
adc
test
fwait
mov
and
jae
add
aam
test
and
sub
cmpsb
lcall
call
out
adc
inc
enter
data16
xchg
std
xor
xlat
scas
inc
cld
ret
insl
je
pusha
add
ljmp
adc
mov
rolb
adc
xlat
jnp
leave
add
and
leave
xor
xchg
xor
jo
dec
sti
outsl
jmp
or
sbb
inc
iret
sbb
sub
inc
pop
jg
insb
jnp
push
sahf
mov
xor
fnstenv
testb
clc
pop
imul
mov
dec
jp
leave
and
jmp
in
ss
rclb
xchg
orb
lods
xchg
pop
add
gs
mov
icebp
push
xchg
jbe
xor
add
int
pop
loop
and
push
das
testl
and
lea
cs
popf
ja
push
loopne
dec
mov
cmp
and
dec
addr16
jno
xrelease
and
das
fisubrs
cmpsl
mov
repz
stos
or
jge
mov
jo
mov
and
ja
add
je
sub
push
fdivr
mov
adc
or
sarl
inc
lock
jae
and
push
jg
mov
stos
xlat
inc
fwait
lds
jge
sub
pop
mov
push
push
movsl
cmp
repz
dec
leave
or
in
leave
mov
mov
add
or
pusha
fimull
sarl
cmp
into
sbb
push
cmpsl
std
in
and
jb
jb
pcmpgtb
icebp
scas
push
mov
pop
cmc
sub
cwtl
fs
sbb
push
repz
stos
out
xchg
xorl
add
sbb
xchg
fistpll
sbb
les
sub
sahf
adc
add
jae
push
das
shl
lcall
lcall
dec
cmpsb
js
add
loopne
movsb
and
xor
mov
popa
loop
or
xchg
add
lds
imul
sbb
mov
adc
ret
mov
dec
xchg
pop
push
enter
sub
sbb
sub
scas
xor
aad
mov
and
jo
mov
pop
mov
out
jnp
dec
add
enter
mov
clc
adc
outsb
es
mov
out
out
mov
scas
or
scas
jp
in
inc
leave
mov
or
jne
stc
add
addr16
subb
cs
fisubrl
cwtl
lods
iret
pushf
bound
adc
pop
dec
ds
pop
fidivrl
inc
fidivrl
or
popf
idiv
addb
mov
popa
out
cmc
mov
cltd
movsl
add
dec
or
out
cmp
xor
inc
dec
push
stc
sbb
inc
fucom
lds
hlt
xchg
adc
or
es
fidivrs
sub
js
cmp
pop
xor
fldl
shrl
or
and
mov
xor
add
add
add
jecxz
in
icebp
mov
sbb
jmp
cmp
dec
repz
mov
adc
ds
lcallw
jae
leave
mov
lret
stc
push
mov
out
scas
clc
and
dec
inc
call
hlt
xchg
loopne
lods
adc
inc
loope
sub
lret
outsb
and
adc
add
jae
mov
jo
mov
adcb
out
aad
unpckhps
adc
ja
cmp
mov
and
out
sbb
scas
out
sub
xchg
ljmp
and
fsts
pop
mov
daa
ja
cwtl
mov
push
ss
mov
mov
sub
lock
sbb
pop
dec
lahf
push
and
jmp
movsb
sbb
test
or
mov
les
and
add
in
jb
and
add
enter
adc
enter
iret
shlb
cmc
xor
sbb
and
fisttpl
idivl
pop
inc
aad
xchg
adc
inc
mov
roll
test
and
clc
mov
cli
cs
stc
lcall
stc
inc
adc
inc
dec
xchg
nop
sub
cmpsl
adc
xchg
rolb
xlat
adc
insb
popa
xchg
ds
dec
rorb
sbb
test
push
in
aam
cltd
sub
jg
pop
dec
andb
adc
xchg
mov
lea
add
fstpl
cmpb
dec
in
and
lods
add
pop
and
jo
push
dec
inc
cld
sub
in
sbb
stos
fs
into
roll
cmp
xchg
sub
test
jnp
or
pop
dec
mov
xchg
adcb
nop
adc
inc
xor
sub
bound
jecxz
ret
jns
add
inc
clc
xlat
lods
xor
add
or
inc
mov
loop
or
scas
pusha
mov
into
movb
int3
ds
out
jne
jne
mov
add
test
lret
push
xchg
push
add
faddl
fistps
jg
and
add
dec
shll
pop
jge
aad
push
cmp
enter
sti
lahf
dec
shrl
iret
ja
aam
clc
sub
fcoml
nopl
aam
push
insb
mov
jbe
daa
dec
or
addr16
add
xorl
ljmp
cli
or
repnz
jnp
imul
xchg
mov
repnz
lods
push
adc
dec
call
imulb
loop
sbb
js
dec
jle
sbb
inc
mov
adc
mov
imul
jle
mov
push
div
adc
mov
sbb
cmp
xchg
data16
daa
push
movsb
jmp
cmpsl
out
sub
jns
mov
pop
sbb
fimuls
popf
or
mov
lahf
mov
add
xlat
fimuls
lods
fidivl
mov
pop
and
movsb
andl
insb
repnz
pop
adc
mov
out
xor
dec
sub
jno
imulb
mov
cld
jae
pop
jle
xchg
fcomi
and
imull
pushf
xor
les
xchg
shrl
pop
ret
bound
or
rorl
and
daa
pop
mov
inc
jb
sahf
adc
loop
pop
mov
cmpsl
sub
es
movsb
in
pushf
mov
xchg
imul
fincstp
ret
xor
lahf
sub
jl
push
jnp
and
rcl
pop
popf
pop
inc
scas
xor
fistps
xchg
jbe
test
sub
push
push
mov
lods
jecxz
xor
lods
push
jle
shr
scas
push
xchg
push
add
sbb
mov
sbb
ljmp
sbb
mov
jne
lret
rcl
inc
xor
fcomp
add
jg
cmp
cmpsl
add
cmpsb
and
nop
test
sub
nop
lahf
sub
mov
rcrb
inc
dec
push
and
sbb
push
stos
dec
pop
lods
repz
sti
popf
mov
leave
xchg
xor
in
mov
loop
in
mov
inc
lds
enter
clc
cli
gs
mov
aaa
jle
mul
sti
xlat
cmp
add
dec
inc
xchg
ds
push
pop
push
outsb
pop
sbb
mul
stos
filds
ret
iret
ret
cltd
mov
ja
cmc
push
sar
inc
sbb
mov
sbb
arpl
fsts
push
ds
shrb
add
cmpsl
ret
cli
lret
movsb
inc
imul
loop
xor
fidivl
adc
mov
inc
add
call
das
xor
movsb
cmpsl
cmp
cmp
filds
push
mov
or
xor
xchg
jle
iret
mov
sahf
mov
mov
gs
lock
fucomi
fcomi
and
jg
mov
shll
push
and
icebp
cmc
push
add
xlat
mov
add
bound
int
dec
cmp
daa
mov
mulb
addl
cltd
push
xchg
dec
outsb
sbb
arpl
and
stc
mov
mov
pop
outsb
ss
mov
add
fisttps
cld
adc
push
add
icebp
dec
mov
xorb
lret
jle
xchg
cmp
mov
mov
mov
adc
leave
pushf
inc
jl
add
mov
jecxz
xor
popl
pusha
imul
mov
repz
clc
or
cmp
lret
cs
inc
mov
and
inc
jecxz
mov
xchg
popf
lret
xchg
fldenv
mov
out
adc
shrb
call
out
jg
or
jnp
stos
loopne
xor
movsb
test
mov
loop
fisttpl
das
xchg
negl
idivl
stc
enter
sbb
fcoms
and
dec
or
push
pusha
int
into
dec
cli
pusha
adc
pushf
mov
jmp
xchg
mov
test
frstor
nop
es
jge
out
leave
adc
mov
std
mov
xchg
inc
sti
es
cltd
xchg
mov
inc
and
ffreep
pushf
arpl
in
out
push
cmp
call
getsec
inc
stos
jecxz
mov
or
je
shlb
mov
xchg
xchg
jb
scas
ljmp
inc
mov
xchg
push
add
or
or
push
adcl
das
repz
rcl
xchg
imul
mov
scas
imul
xlat
mov
lret
cmpsb
xor
mov
rol
add
fwait
lea
mov
lods
push
add
xor
cmp
dec
div
je
insb
lret
xchg
xor
aas
add
jns
cmp
popa
adc
push
clc
sahf
xor
test
push
add
pushfw
add
scas
and
push
or
dec
inc
xor
cmp
jno
in
cmp
pop
mov
pushf
xchg
sub
fbstp
dec
outsb
lods
mov
clc
jb
cmc
adc
push
mov
mov
xchg
sub
hlt
inc
pop
test
lret
pop
inc
ret
xchg
test
call
subl
xchg
fadd
aaa
mov
shlb
pop
fcoml
inc
add
adcl
jl
xchg
mov
mov
lea
pop
jmp
out
jmp
fildll
movsb
jmp
pop
int
sub
rorl
add
subb
into
test
inc
clc
dec
pop
xorb
ret
adc
pop
stos
jge
fnstsw
nop
into
outsb
mov
shl
enter
jnp
mov
pop
cmpsb
cmp
dec
sbb
mov
outsl
or
loop
mov
mov
rclb
jmp
add
lcall
imul
cmp
popf
cmp
jg
jp
xchg
inc
adc
icebp
mov
fisubrl
fldt
roll
xor
mov
imul
mov
rcr
jns
xor
xchg
sub
xor
dec
cmpsl
sub
xor
ret
pop
and
xchg
jmp
ja
xchg
mov
fcmovnu
and
mov
push
pushf
nop
shl
lcall
ror
je
out
adc
add
jecxz
jo
push
jp
dec
jl
jg
fucom
lods
dec
inc
jnp
clc
pop
adc
sub
int
cmp
scas
adc
das
add
fiadds
rclb
pop
xchg
mov
and
das
pop
pusha
in
xchg
jl
jmp
xor
lds
xchg
shr
imul
push
les
scas
das
jecxz
push
mov
push
xor
adc
add
pop
jne
cmp
cmp
push
mov
push
mov
jl
jnp
mov
fisubl
movl
xchg
testl
cmp
popa
jle
push
inc
fs
or
inc
jge
inc
or
jp
cmp
mov
lds
incl
push
and
gs
sahf
in
fimull
mov
ljmp
cmpsl
pop
cmpsl
mov
lcall
xor
mov
out
lock
lret
shlb
ret
xor
sub
loope
push
leave
stos
jp
inc
addl
out
scas
testb
clc
mov
mov
and
dec
insl
sbb
jl
leave
fdiv
and
hlt
or
fs
pop
outsl
push
imull
or
test
inc
or
sub
ds
sub
mov
mov
inc
xlat
mov
add
jb
enter
mov
cltd
mull
in
cli
push
out
and
call
cltd
pop
dec
repz
jge
xlat
jl
andl
xor
std
repnz
leave
xor
inc
mov
adc
pop
fistps
mov
insb
mov
add
movsl
sbb
ror
fwait
lret
andb
mov
out
in
xor
outsl
xlat
or
fwait
in
leave
loopne
test
nop
xchg
add
and
sub
loop
mov
nop
shrl
mov
lods
call
push
outsb
sub
jo
jl
pop
shl
mov
lret
imul
jl
add
or
adc
repnz
sahf
xchg
ja
not
imul
test
fiaddl
inc
lods
and
dec
sub
jg
repnz
mov
aad
mov
pop
imul
and
push
pushf
mov
cmp
iret
data16
adc
lret
add
dec
push
daa
push
pop
inc
inc
add
add
iret
lds
cmp
push
sbb
es
invd
cwtl
pop
xchg
xchg
pop
pop
pop
mov
into
das
cmp
dec
pop
sbb
pusha
into
pop
loop
out
in
push
ret
xlat
fistpl
int
xor
pop
jecxz
arpl
mov
mov
cmpsl
repnz
lock
cmpsl
into
mov
jge
mov
xchg
loopne
cmpsl
icebp
ljmp
dec
repnz
xchg
inc
mov
mov
mov
mov
std
iret
jp
jge
aam
mov
xor
das
mov
or
roll
repnz
jg
bound
jbe
gs
fsubrl
ss
pop
jne
sti
xor
xchg
push
ds
daa
cmp
lods
add
or
mov
xor
inc
popf
test
js
imul
test
xchg
scas
inc
push
push
jmp
xchg
cmp
in
daa
sahf
push
addr16
icebp
fldenv
xchg
xchg
ljmp
adc
jecxz
pop
mov
fdivrl
fidivl
lock
enter
xchg
lahf
repz
out
test
ret
out
pop
ret
imul
jl
mov
pop
xchg
pop
mov
jo
mov
inc
mov
xchg
dec
pmaxsw
in
fldl
pop
ja
pop
sub
push
mov
add
pop
dec
xor
ljmp
mov
jo
sub
enter
mov
push
sbb
cmp
bound
fiaddl
xchg
das
pop
nop
inc
lock
mov
or
sub
add
dec
add
in
pop
aas
fs
dec
aaa
mov
xchg
outsl
inc
inc
or
sub
rorb
daa
imul
imul
jmp
bound
hlt
inc
insb
stc
fnsave
sarl
je
into
fcompl
mov
dec
sub
adc
pop
out
lds
inc
inc
rcll
xchg
push
movl
xorl
mov
inc
test
sub
xor
jae
push
xchg
sub
cwtl
xchg
aaa
or
int
mov
pop
pop
cmp
jb
or
fnsave
push
test
inc
icebp
push
gs
push
inc
mov
or
adc
lock
mov
pop
out
pop
push
jno
scas
test
pop
add
test
xchg
loope
push
sbb
shlb
xchg
es
cltd
cmp
xor
ja
fstpt
xchg
pop
or
ljmp
jmp
push
ja
cmp
dec
xchg
lea
mov
clc
mov
cmpsl
ret
arpl
and
jecxz
cmpsb
jno
sarl
leave
fsubr
jecxz
push
inc
and
xor
and
mov
in
lahf
shl
js
dec
out
aaa
cltd
outsb
gs
cltd
pop
pop
imul
cmp
inc
xchg
cmpsl
ds
pushf
enter
add
jns
out
enter
in
pop
ficoms
xchg
adc
jae
cmp
cmp
mov
or
fstl
gs
mov
call
sub
mov
inc
jae
repnz
mov
ds
push
mov
mov
inc
lcall
outsl
es
or
pop
rcll
mov
scas
sarl
mov
jno
adc
xor
dec
sub
out
sub
add
dec
and
pop
dec
lds
jmp
and
stc
lods
jns
fstpt
out
mov
mov
adc
insb
xchg
ja
pop
adc
pcmpeqb
hlt
cli
daa
cmp
sub
xor
push
std
push
ljmp
sbb
ret
ret
jo
xchg
adc
jp
sti
fsubp
loope
xchg
mov
cmp
es
add
out
lret
push
push
testl
aam
adc
pop
add
movsl
in
xor
jge
iret
shrb
test
or
aaa
xlat
cli
out
mov
ss
push
add
clc
out
clc
fwait
xlat
repnz
dec
pusha
jge
mov
and
xor
push
sbb
rorb
sbb
lret
subb
insl
jae
rcrb
xor
or
xchg
into
daa
cwtl
test
std
outsb
lahf
orl
iret
repnz
test
arpl
jne
in
xlat
inc
daa
sbb
fnsave
mov
cmpsb
fsubl
push
lret
push
lods
out
scas
les
push
arpl
mov
pop
hlt
mov
push
sub
cs
inc
push
loope
sbb
inc
lea
leave
outsl
shrb
outsl
inc
adc
xchg
stc
daa
xchg
test
mov
add
mov
or
insl
leave
lahf
test
xchg
mov
jae
out
lock
ret
dec
push
xchg
int
jo
inc
fiadds
add
insl
xchg
push
mov
xchg
nop
scas
rolb
fidivl
mov
cmp
jae
pop
add
inc
push
je
xchg
mov
stc
stc
mov
std
cmp
push
xor
lea
test
stc
push
cmp
stos
pop
fidivs
repz
cmc
pop
mov
fdivl
push
call
daa
push
sub
int
inc
loope
aaa
mov
mov
movsb
rcl
mov
xor
aas
jns
movsb
xor
mov
push
movsl
inc
cmp
inc
jae
xor
lcall
ret
jmp
add
repnz
sub
subl
bound
mov
test
cmp
ds
sbb
jo
push
data16
and
aas
mov
leave
jb
iret
push
loopne
shlb
cs
fildll
imul
out
in
jecxz
test
xchg
xchg
or
jo
mov
mov
mov
ret
daa
dec
scas
xor
push
cwtl
xchg
sbb
mov
test
mov
mov
inc
pushw
test
outsb
pop
xor
sbb
loope
xchg
ljmp
mov
adc
pop
ljmp
push
insl
loope
sbb
xchg
jbe
jns
cmc
dec
jae
pop
xor
jae
clc
into
xor
dec
dec
add
fcompl
rcl
sbb
and
jle
fimull
dec
inc
jns
mov
push
mov
dec
ja
jl
iret
fwait
sbb
nop
movsl
xor
adc
adc
in
cli
loopne
js
dec
jns
test
mov
shlb
sti
and
in
push
shr
inc
push
aas
in
pop
adc
push
or
jle
xor
flds
scas
mov
add
icebp
cmpsl
pop
jbe
into
dec
sbb
jo
push
lret
mov
mov
pop
inc
or
adc
mov
jns
into
xchg
sub
mov
lahf
scas
xchg
mov
cmp
dec
cmp
in
popf
jnp
lods
fwait
lret
and
add
and
adc
icebp
pop
xchg
adc
sbb
cmp
xchg
xor
push
repnz
push
mov
add
adc
xor
jg
mov
icebp
mov
xchg
or
xor
aam
dec
sub
popf
dec
push
xor
mov
les
sub
imul
mov
in
lods
cmc
scas
aaa
jmp
iret
sub
subl
push
test
xchg
mov
sbb
xchg
notl
lock
push
jecxz
add
clc
mov
push
mov
xlat
fcomip
nop
mov
pavgb
movsl
xchg
js
sbb
mov
out
insl
sub
xorb
mov
inc
pop
lahf
out
mov
jo
std
pop
mov
jnp
pause
or
xchg
sub
lahf
shrb
stos
imul
adc
jmp
cs
dec
mov
or
hlt
sbb
xchg
sbb
pop
icebp
nop
dec
or
push
pop
rorl
gs
push
lds
ret
or
cmp
push
dec
test
sbb
test
out
adc
jl
lcall
faddp
or
jge
mov
mov
xor
popa
aaa
and
clc
jecxz
pop
scas
cmpsl
ds
mov
std
sbb
lcall
int3
sub
shl
cmp
xchg
je
fisttpll
out
xor
jno
inc
dec
xlat
add
dec
cwtl
fwait
mov
cltd
cmpb
inc
sbb
imul
cld
cs
lcall
inc
in
scas
push
repz
cmp
dec
nop
or
push
jb
loope
push
adc
sbb
cli
xor
pop
push
mov
les
cmp
mov
insb
jae
push
or
dec
mov
mov
push
jb
xchg
daa
movlps
mov
das
xlat
mov
idiv
sub
push
and
mov
mov
mov
movsb
jge
sbb
out
jp
divb
pop
sahf
sbb
jl
les
add
mov
andb
xchg
insl
xor
iret
out
push
enter
imul
xor
inc
add
cmpsl
aam
lea
out
aaa
mov
notl
stc
and
mov
call
aad
adc
lret
psubusw
les
xor
lret
add
cld
aad
push
cld
mov
add
out
fdivr
and
insl
bound
pop
mov
fldt
fisubl
mov
lret
mov
or
idiv
or
dec
aam
loopne
and
add
push
jo
loope
cmp
sbb
stos
mov
in
xchg
out
mov
mov
xorl
mov
shll
jp
les
jecxz
mov
cmpsb
push
add
lahf
mov
movb
lahf
nop
pusha
jl
pop
inc
xor
push
clc
push
mov
adc
cmp
xor
or
imul
mov
dec
out
int
std
add
cs
push
stc
pop
cmp
sti
xchg
jmp
mov
push
sub
je
and
and
in
sbb
pop
repnz
pop
pushf
jmp
enter
adc
or
fidivrl
cmp
push
mov
cltd
out
pop
pop
pop
mov
pop
fnstcw
mov
mov
int
lret
popa
xchg
shlb
sti
faddl
inc
lahf
sub
sbb
xchg
fidivrs
cmpsl
fsub
sub
gs
push
stos
sbb
repnz
add
int
stos
adc
xor
les
inc
lret
xchg
sbb
inc
mov
out
cmp
mov
cli
ret
xchg
jnp
movsl
and
filds
xchg
arpl
cmp
movsl
clc
mov
xor
pop
push
ds
push
mov
pop
ficompl
hlt
popf
lret
jp
push
mov
jle
in
fwait
push
xchg
mov
mov
jmp
and
notb
cmpsl
inc
sub
mov
mov
sbb
subl
inc
imul
movsb
xlat
mov
jne
cld
cmp
mov
addr16
dec
jns
xlat
rcrb
ds
pop
jns
jmp
lock
sub
add
aaa
jp
push
xor
fstpt
inc
adc
push
push
mov
xor
add
fwait
jmp
in
mov
bound
mov
jnp
push
xchg
mov
dec
mov
cs
and
sub
cmp
data16
mov
movsb
pop
addr16
jecxz
push
stos
test
sarb
roll
or
lods
push
adc
inc
dec
in
rolb
mov
fidivrs
sbb
or
js
popf
xchg
daa
mov
orl
iret
vcmpps
aam
popf
call
sbb
roll
pop
int3
dec
jle
pop
cwtl
shll
pop
sub
push
push
sbb
push
push
xchg
dec
push
test
iret
fstps
fs
add
and
lods
lahf
subps
clc
fsubp
and
mov
xorb
sub
pop
out
or
dec
aad
shl
push
subl
mov
push
push
stc
dec
fldenv
mov
in
mov
or
inc
pop
in
jle
xlat
outsb
das
inc
loop
add
and
rcr
sbb
push
scas
jnp
cmp
lret
and
mov
jle
sar
mov
shlb
dec
daa
je
mov
jmp
mov
test
xchg
push
out
add
cld
jg
fs
jl
lret
mov
bound
sti
inc
aam
iret
call
or
pushf
ds
jmp
jmp
and
pushl
mov
outsb
fwait
repz
outsb
test
les
pushf
add
popf
mov
or
mov
sub
xorb
sti
add
cmc
xor
and
aas
push
push
push
lock
lret
mov
mov
pop
push
jno
push
and
mov
and
movl
cld
icebp
and
jo
dec
jns
iret
sbb
xor
loope
mov
out
xor
popa
test
mov
rcrb
aad
cmpb
lods
std
mov
sub
mov
pusha
add
test
shlb
jns
popa
mov
xchg
fisubrs
leave
dec
outsb
jnp
mov
fisttpll
inc
pop
ds
test
jmp
sarb
and
test
sahf
jl
push
adc
ja
lahf
adc
inc
mov
adc
mov
imul
hlt
cmp
inc
lods
inc
and
jmp
or
xchg
sbb
and
jno
out
xchg
bound
stc
cmp
loopne
cmc
xlat
add
lods
mov
leave
push
icebp
sete
push
mov
jbe
pop
outsb
add
loopne
js
ljmp
sub
dec
cld
push
lret
push
mov
jp
lods
lods
fwait
pushf
mov
and
mov
inc
xorb
jle
push
or
adc
lds
xchg
arpl
es
or
jmp
jle
daa
loopne
fimull
lahf
nop
out
cwtl
imul
dec
cltd
add
push
push
hlt
mov
inc
scas
stos
cs
sbb
xlat
xor
pop
and
mov
out
mov
mov
push
push
inc
push
rolb
leave
call
xchg
inc
jb
and
aam
push
loop
jae
sub
jbe
pusha
or
mov
jns
ret
jle
ret
push
sub
in
enter
js
fcoml
mov
decb
mov
cmp
cmp
mov
sub
insl
push
in
sbb
xor
aaa
dec
out
and
jns
xchg
cmpsb
aam
sub
jl
jno
pushf
bound
lcall
sarl
add
cmp
or
in
inc
jmp
imul
push
or
shrb
or
stc
adc
adc
add
nop
aam
hlt
pusha
leave
add
mov
lods
and
adc
mov
pusha
lcall
stos
into
dec
mov
mov
shll
sbb
or
pop
pop
aam
enter
jecxz
mov
cmpl
cltd
pushf
mov
into
dec
jbe
dec
cmp
xchg
movsb
lret
je
ret
xor
jecxz
aaa
or
gs
stc
jno
fs
xor
pop
loop
mov
ljmp
je
in
imul
xchg
xor
mov
stos
les
pushf
test
adc
stos
les
dec
sbb
or
cld
mov
test
add
push
xchg
scas
ds
int3
xor
xchg
movsl
out
add
cli
cmpsb
adc
mov
pop
aas
pop
test
pop
xchg
test
xchg
pop
cltd
mov
cmp
nop
xor
jle
clc
shrb
adc
aad
std
inc
sbb
xchg
mov
out
cmp
out
cmpsb
aaa
icebp
push
fbld
pop
jg
lret
lret
pop
or
mov
stos
push
loop
push
insb
in
fs
or
ficomps
sbb
mov
stos
sarb
push
mov
xchg
cmpsl
jbe
push
mov
nop
adc
xor
adc
add
jns
dec
adc
mov
or
sti
dec
mov
ret
mov
inc
mov
inc
adc
push
fwait
jl
inc
aad
arpl
sub
xor
xchg
inc
dec
dec
push
add
adc
popf
lds
push
jg
dec
inc
cmp
mov
enter
jmp
adc
arpl
arpl
je
testl
inc
dec
dec
sahf
idivl
std
gs
push
sbb
je
scas
rorb
and
bnd
xchg
stos
push
xchg
mov
in
mov
lret
cltd
fwait
mov
jo
lds
sarl
jb
sub
jecxz
push
xor
stos
sbb
loopne
sub
lret
mov
push
inc
fistps
pusha
outsl
out
sbb
negl
or
cltd
loope
aaa
xorl
popf
mov
pop
and
loope
lcall
cltd
repz
pop
add
sahf
mov
inc
xor
mov
and
pop
lcall
popf
and
leave
jmp
push
jge
mov
ja
dec
dec
lret
repz
and
pop
cmpsb
lret
cmp
loope
stc
sbb
mov
sahf
and
sub
mov
jb
xchg
jp
fistps
add
mov
and
or
imul
or
push
pop
cwtl
ret
imul
cmpsl
test
repz
mov
shll
ficomps
pop
loope
sbb
test
sbb
push
iret
fwait
dec
mov
loope
push
jb
push
sbb
push
dec
inc
dec
fs
jns
pop
push
std
insb
inc
sbb
sub
push
fnstenv
push
jns
ds
sub
pop
mov
iret
pop
and
push
cli
in
mov
shll
dec
test
and
xlat
add
std
mov
aad
mov
jl
shll
mov
push
push
in
jbe
push
ficompl
mov
and
into
insb
or
mov
dec
jle
add
cmp
mov
out
mov
bound
jge
aas
mov
imul
in
mov
sbb
stos
push
jno
fldl
mov
sub
xchg
sub
sbb
sbb
push
adc
scas
repz
add
xchg
adc
jbe
icebp
push
inc
iret
fsubrl
jp
pop
xchg
mov
push
data16
xor
push
je
push
fadds
mov
jecxz
aas
lret
dec
sub
mov
sar
inc
pop
push
push
or
arpl
inc
gs
mov
shrb
mov
repz
pop
pusha
insl
jo
and
xor
sub
mov
sbb
add
add
ljmp
fcmove
popa
iret
popf
and
or
nop
shrl
sarb
sti
push
dec
sbb
lcall
mov
inc
xchg
inc
push
pop
shrb
pushf
sarl
nop
je
addr16
jg
jns
dec
cmpsb
inc
jp
imul
or
push
dec
mov
mov
ret
mov
es
push
cmpsb
mov
test
sbb
rolb
xorb
jae
fsubr
fisttpll
stos
outsl
mov
lds
aad
pop
pop
mov
lea
jmp
pop
add
cmpsl
lods
pusha
scas
or
cltd
imul
enter
std
push
insb
and
mov
cmpsl
insl
aas
mov
cmp
xchg
fists
jmp
aam
cmpsb
mov
push
ficoml
daa
int3
roll
cmp
jne
dec
int3
cwtl
aam
insl
mov
sahf
and
hlt
xchg
push
jo
mov
fbld
xchg
mov
add
lds
xchg
jle
jmp
pop
mov
into
js
pushl
mov
std
add
sub
in
xchg
pop
mov
add
jns
push
test
inc
in
inc
ret
sbb
push
test
inc
jbe
mov
xchg
cld
jl
stc
pop
jmp
jne
bound
lret
out
mov
mov
adc
popf
pop
jns
adc
lods
xor
mov
sbb
and
daa
jecxz
add
sbb
mov
inc
imul
ret
loope
mov
pop
gs
stos
sbb
sub
and
cmp
inc
lea
fdivrs
pop
sbb
sar
cmc
mov
sub
add
jb
cmc
popa
and
jecxz
fidivl
int
pop
jle
call
or
or
in
enter
jnp
sub
mov
pop
sub
cmc
in
pop
or
clc
mov
shlb
sub
test
jbe
movsl
ret
fldenv
xchg
jge
fdivrs
pop
pop
sahf
test
mov
dec
add
pop
mov
jge
in
inc
adc
xor
pop
lret
xor
mov
mov
mov
mov
scas
add
dec
sbb
and
loopne,pt
and
mov
sub
mov
sub
sbb
sub
scas
sbb
out
in
test
daa
in
repz
ds
out
sarl
mov
xchg
push
out
insb
add
mov
jmp
pop
lods
cltd
dec
pop
cmpl
pushf
xchg
popa
sub
imul
sbb
sbb
jmp
fsubs
adc
xor
push
xchg
xchg
in
in
jne
lret
xchg
pusha
xor
cmp
sub
xchg
push
or
and
in
push
cmp
mov
xor
mov
in
test
loopne
xlat
ss
pop
lds
out
jns
adc
jle
shr
lds
cltd
subl
xchg
adc
cmpsb
xchg
mov
mov
jnp
les
dec
popa
cmp
lds
push
ret
es
fists
jns
fcmovb
pushl
mov
dec
push
cmpsb
fst
push
addl
inc
cmp
mov
mov
pushf
mov
rolb
fwait
sbb
cmp
xchg
popa
xor
add
lods
xor
imulb
inc
dec
xchg
mov
adc
sub
jmp
add
or
push
popa
or
cmc
lea
je
in
bound
es
out
dec
stos
lahf
inc
push
xlat
loopne
ss
push
lds
repz
cmp
mov
aam
enter
call
in
notl
icebp
adc
aaa
jns
xor
cli
mov
and
xor
push
or
les
lods
lret
repnz
call
pop
fsts
jmp
push
fcmovnb
sub
test
mov
inc
jae
mov
mov
popf
pop
in
and
push
sti
dec
jmp
and
xor
sti
test
sub
cmp
call
inc
cmp
pop
or
and
ljmp
xor
int3
and
dec
dec
fstps
aad
xor
repnz
pusha
out
lds
js
mov
and
std
je
aad
xor
call
mov
jmp
lock
mov
out
nop
push
push
cmpsl
dec
sti
bound
out
push
add
repz
outsl
aas
push
and
cld
add
movsl
pop
xchg
inc
in
stos
dec
pop
scas
pop
cld
sti
fwait
sub
and
stos
inc
add
jbe
sub
cwtl
cwtl
xchg
in
xor
mov
cmp
fnstsw
cmp
push
jmp
enter
pop
adc
cmpsb
adc
push
fisttps
cmp
push
pop
push
lock
outsb
pusha
inc
je
mov
movsl
imul
dec
cmp
mov
sti
or
cmpsl
call
into
out
je
xchg
mov
cld
and
xchg
std
cmpsb
lds
mull
pop
dec
sbb
outsb
mov
insb
xor
aad
sarb
fimull
mov
fmuls
mov
out
lea
int
shll
push
das
lret
add
imul
xchg
rcll
jl
xchg
out
arpl
and
bound
dec
xchg
sbbb
out
mov
addb
cmp
sbb
stc
iret
test
out
mov
fdivp
idivb
in
fst
mov
shll
lret
aam
xchg
decl
sub
dec
popf
dec
lds
pop
or
jge
adc
push
ret
sbb
out
out
push
pop
lods
roll
add
insb
adc
dec
orb
imul
fisubrl
inc
cmp
mov
out
sub
mov
movsb
ret
pop
enter
cld
dec
mov
push
jno
movsl
lahf
out
fisttpll
mov
gs
in
dec
mov
popa
and
cmp
jecxz
cmp
adc
sub
hlt
dec
fs
mov
pop
pop
mov
call
cli
pusha
loope
sahf
xchg
push
jecxz
push
out
mov
mov
das
shl
cmp
pushf
jb
push
xchg
mov
lods
addb
pop
or
cmpsl
push
jmp
xor
stos
mov
test
pop
xchg
inc
cld
lret
sbb
loop
push
cmpsb
mov
xor
lods
enter
negl
test
mov
stos
stc
insb
adc
sbb
jb
fucom
aas
hlt
lds
add
aaa
mov
loopne
or
rolb
sarl
scas
cmp
out
xchg
jae
popf
out
popf
dec
push
lret
out
cmpsb
inc
pop
adc
scas
push
rorb
shrb
test
pop
push
xchg
pop
inc
push
or
mov
iret
xchg
jmp
pop
dec
mov
es
sahf
out
out
fstps
mov
fidivrs
inc
or
pop
cmc
push
dec
jle
test
push
jne,pt
sahf
mov
les
sbb
shrb
les
pushf
repnz
cmc
cmc
insl
adc
adc
or
dec
mov
mov
loopne
push
push
fcmovu
xchg
dec
idiv
mov
pop
add
fisubrs
dec
sub
out
aad
shll
jb
pop
loope
xchg
add
ljmp
or
jge
inc
mov
mov
out
cli
cmp
in
ljmp
loopne
add
fistl
pop
xor
cmpsl
add
mov
ds
xchg
pushf
xchg
mov
sub
mov
xchg
fisttpll
push
gs
mov
rclb
inc
mov
cmc
insb
cmp
or
add
scas
sti
xchg
lahf
out
fisubrl
pop
outsb
adc
in
aaa
leave
les
popf
jo
int3
ja
iret
test
jl
fld1
xlat
and
mov
mov
sub
sub
jge
arpl
xchg
mov
push
popa
xlat
jmp
in
ja
sub
in
sbb
lret
je
adc
xor
outsl
jmp
push
jg
lea
enter
in
mov
sahf
stc
mov
sbb
inc
inc
xchg
cld
fs
inc
xchg
clc
xchg
fdivrs
push
sbb
mov
imul
out
mov
sbb
mov
popa
mov
fsubrs
push
cmpsl
icebp
fcompl
mov
dec
push
pop
mov
inc
addr16
jb
ret
clc
lcall
jae
decl
sarb
es
pop
lret
lahf
push
ljmp
push
inc
ja
daa
mov
cltd
cmpb
jg
push
mov
ret
adc
icebp
int3
jnp
mov
psrld
pop
in
int
insb
push
int
cli
popf
mov
aam
cmp
dec
test
fidivrs
push
mov
mov
rcr
pop
clc
outsl
cltd
mov
arpl
xchg
test
stc
ds
in
inc
cmp
dec
xorb
mov
mov
xor
pop
pop
dec
out
pop
fnstsw
xlat
push
pop
mov
je
cmp
outsb
cmc
jns
adc
movsb
test
ds
hlt
and
rolb
in
push
idivl
dec
popa
jmp
popf
and
nop
incb
pop
in
jmp
jno
adc
jns
jns
cmp
ret
scas
in
push
mov
in
in
fstpt
inc
bnd
push
aad
push
dec
int
fbstp
cld
das
xlat
outsl
sbb
push
lea
xor
insl
pusha
sahf
push
dec
mov
sub
jo
and
mov
push
pop
pop
adc
inc
arpl
mov
mov
gs
inc
xor
aad
mov
push
mov
dec
jmp
dec
arpl
scas
push
aad
push
xor
sub
mov
jno
adc
mov
mov
es
jl
or
jecxz
mov
les
outsl
and
cmpsl
fstpt
outsb
es
in
insb
jge
cli
outsl
enter
cmp
or
es
clc
xchg
bound
stos
mov
and
sbb
xorb
push
test
mov
repnz
push
loopne
sahf
mov
dec
or
add
sub
je
pop
sub
addl
adc
fstl
int
sbb
pop
test
dec
sahf
push
cmc
fistpl
sbb
pop
dec
scas
cmp
jle
sub
scas
mov
rolb
pop
xchg
test
or
xchg
add
push
imul
aad
push
jp
mov
xchg
outsb
dec
iret
push
mov
popa
and
imul
cmpb
test
mov
sub
xorb
pop
pop
cli
jne
aas
sbb
es
cmc
xlat
mov
cmp
icebp
dec
js
iret
cmpsl
mov
fwait
lahf
push
pop
mov
enter
hlt
clc
in
in
dec
adc
pop
cli
mov
lock
jb
or
and
hlt
xlat
loopne
imul
sub
rcr
cmpb
out
lret
pushf
aas
nop
mov
add
inc
push
adc
sahf
mov
adc
lds
add
inc
icebp
mov
pop
xchg
nop
jle
scas
dec
jp
jbe
push
sbb
push
inc
xchg
xchg
push
nop
hlt
in
sbb
pop
or
cli
xor
sbb
and
bound
int
push
jnp
fs
sbb
cmp
mov
push
adc
mov
sbb
std
adc
addr16
inc
aam
ret
sahf
adc
inc
test
adc
loop
mov
and
into
fnstenv
add
xchg
fwait
mov
iret
cmp
stc
aam
add
push
mov
loopne
push
pop
mov
int3
movsb
jo
add
les
pop
pop
jecxz
adc
mov
in
loopne
cmp
shrl
shr
bound
pop
jge
mov
mov
sar
mov
pop
test
xchg
dec
adc
and
popf
out
int
insb
fistps
scas
ret
daa
arpl
daa
inc
cmp
xchg
cmc
ja
cltd
cwtl
dec
inc
jle
scas
insl
jns
stos
and
pop
mov
sbb
gs
not
into
ss
scas
mov
xchg
sbb
insb
mov
ds
push
or
adc
xchg
xchg
iret
mov
xor
loop
sub
lret
pushf
xchg
int3
and
hlt
inc
lret
xor
sbb
call
inc
mov
mov
rclb
cmp
push
lods
sbb
mov
mov
sbb
test
sub
xchg
sbb
mov
lods
lahf
fwait
andb
inc
inc
imul
imul
inc
imul
xor
mov
xor
cmpsb
es
mov
push
pop
and
sub
mov
dec
push
push
mov
aaa
jne
fwait
push
out
in
dec
call
fsubrs
mov
mov
clc
pop
inc
sahf
sbb
sub
loop
cltd
mov
test
aad
loope
adc
popf
negl
inc
rorl
mov
addr16
xor
inc
lods
loope
adc
mov
pushw
cmp
sub
mov
jge
lret
std
mov
fists
cmp
and
pop
pop
out
loop
aas
jo
cmp
cmp
mov
ja
fisubrl
es
mov
addb
sub
dec
push
dec
mov
in
out
arpl
mov
js
mov
mov
mov
lds
xchg
add
mov
aas
xor
rorl
mov
mov
ljmp
cmp
xchg
sbb
in
inc
data16
xlat
xor
push
lcall
xor
mov
xchg
out
jb
jo
scas
pop
imul
lods
movsl
movups
xchg
or
divl
insl
push
push
inc
aaa
in
std
out
jbe
mov
xchg
xchg
sbb
lods
and
daa
out
test
pushw
bound
addl
stos
jbe
mov
je
gs
mov
jmp
cmp
pusha
inc
imul
mov
test
insb
sbb
sbb
xor
das
adc
icebp
shl
inc
shl
pop
clc
sbb
mov
scas
cld
scas
in
aas
push
inc
subl
arpl
push
gs
pushf
out
les
sbb
sbbb
fxch
dec
rorl
sahf
rcrb
push
or
loope
dec
jne
ss
pop
jns
shll
pop
insl
pop
cmpb
arpl
jecxz
sbb
xchg
clc
pop
mov
jb
and
and
imul
rorb
xchg
popf
inc
and
rep
pop
mov
add
jp
cmp
pop
inc
mov
into
mov
mov
or
les
xor
push
mov
add
sub
cmp
pusha
fs
xchg
inc
jo
pushw
mov
mov
jg
cmp
in
sub
adc
sbb
cwtl
xlat
mov
or
cmp
std
popf
push
popf
push
mov
fidivrl
ljmp
jns
cmp
push
ffreep
popa
rorl
cld
push
test
test
pusha
dec
out
add
adc
jl
aaa
pusha
sbb
enter
mov
push
loop
jno
popf
xor
das
repnz
in
mov
test
aam
mov
pop
sub
ficomps
fldenv
daa
repz
fwait
movsb
jmp
mov
or
fisubl
js
int3
lea
mov
sub
adc
jb
fwait
pushf
mov
jo
and
jo
sbb
call
sbb
pop
xchg
int
scas
mov
adc
pop
mov
cmpl
pop
lcall
push
jne
mov
and
jle
ljmp
add
icebp
xor
or
dec
loope
add
fisubl
add
and
inc
add
push
xchg
cmp
pop
mov
fidivs
jno
sti
call
loopne
bound
outsb
pop
pop
cltd
fnstcw
sbb
sub
mov
jp
add
rorl
test
mov
ret
icebp
push
mov
mov
decb
fldcw
inc
in
mov
icebp
pop
rorl
sub
or
mov
test
pop
call
push
in
cmp
lock
inc
or
daa
fwait
rorb
inc
fmull
clc
and
dec
xchg
sbb
mov
adc
ret
outsl
enter
ret
pmullw
xchg
mov
ljmp
jae
and
pop
add
adc
popa
cltd
mov
clc
xor
aam
mov
inc
and
cmp
iret
adc
mov
stos
incb
addr16
dec
mov
into
ss
pop
cmpsb
adc
push
lret
sbb
cwtl
and
adc
dec
sub
sbb
and
popa
test
jg
lock
push
push
cli
cld
pusha
dec
cld
bound
cmpsb
shrl
add
mov
in
repnz
sub
shll
jno
aam
adcl
push
mov
dec
push
js
stos
pop
mov
test
daa
in
clc
cmp
fcomip
pop
add
xor
fs
pop
test
add
insl
in
push
mov
jp
or
outsl
js
shl
and
push
fs
dec
push
mov
mov
out
popf
addr16
loop
pop
pop
xchg
movsb
cmp
push
and
mov
xchg
push
jmp
fiadds
sbb
jo
repz
fs
jecxz
ror
les
iret
xchg
out
lcall
mov
jg
and
fildl
ret
cmovae
out
repnz
mov
popf
sbb
push
je
imul
or
ja
fistps
inc
repnz
bound
mov
jp
sub
sub
hlt
jns
lea
dec
into
pusha
lock
imul
inc
pop
mov
mov
xor
inc
jo
pop
addr16
push
je
mov
add
stos
mov
les
and
dec
dec
sbb
enter
pop
std
or
sbb
mov
and
jo
dec
mov
push
push
adc
pop
cwtl
xor
lods
es
jns
in
push
mov
test
push
bnd
sub
lret
rorl
sahf
insb
int3
xlat
mov
outsb
dec
sub
xchg
push
push
pusha
add
lret
in
and
mov
jae
fildl
cltd
jp
mov
sbb
lret
lods
insb
xchg
in
popa
fisttpl
out
cmpsl
inc
fnsave
out
push
cmpsb
popa
jmp
mov
imul
sub
add
xor
sti
dec
jne
mov
jo
mov
cmpsl
cmc
mov
in
xchg
sarl
xor
popf
int3
mov
shl
insb
dec
lret
push
les
bswap
sarb
and
push
dec
das
mov
push
inc
push
push
pushf
pop
dec
xchg
cltd
lods
dec
sti
insb
sbb
fs
mov
push
or
inc
clc
ret
sahf
sbb
jns
pop
pop
mov
push
imull
stos
jo
andb
inc
fadds
jmp
jo
and
xor
dec
xchg
mov
cltd
jp
rcl
jmp
or
cs
into
popf
sub
stos
js
and
mov
jmp
loopne
aaa
xchg
insl
pop
fs
lods
fwait
or
dec
sub
jns
inc
test
lret
out
js
int3
inc
inc
add
aam
mov
inc
xchg
faddl
and
mov
fists
sbb
popa
scas
das
outsl
xor
mov
mov
pop
push
xor
fmuls
dec
rolb
aaa
out
pop
int3
out
pop
mov
iret
ret
mov
je
gs
fcompl
or
pop
jle
dec
add
mov
lcall
rorl
push
push
cmp
fcomps
fs
mov
and
push
sub
rol
push
pop
jmp
mov
push
in
test
pop
jb
jecxz
ja
in
add
lds
dec
mov
cmp
dec
rcll
xor
aam
xor
pop
leave
outsb
and
xor
sbb
jns
inc
in
test
mov
cmp
adc
out
sti
mov
cmp
mov
sbb
movntps
fmul
je
xor
out
add
inc
gs
cltd
add
mov
add
outsb
leave
cwtl
js
ds
push
mov
mov
mov
ret
arpl
mov
jmp
lahf
sbb
pop
add
push
dec
dec
or
mov
mov
mov
shlb
add
rorb
mov
jecxz
mov
mov
and
jl
sbb
out
and
mov
sub
testl
enter
daa
test
jnp
cwtl
out
mov
mov
fdivp
shl
and
cli
mov
dec
sbb
aam
gs
and
test
add
jne
mov
push
jnp
or
inc
arpl
sti
in
adc
and
shr
dec
sub
ss
lds
ret
jp
sub
sbb
lahf
sub
nop
adc
mov
popf
sbb
popf
xchg
ja
orb
aam
aad
mov
mov
ds
in
hlt
aam
and
mov
loopne
insb
ss
add
mov
mov
fdivrl
xchg
lods
add
mov
jo
test
add
mov
inc
inc
jle
xchg
adc
dec
mov
ret
inc
addr16
out
xor
jno
mov
mov
dec
push
pusha
mov
xor
pop
sbb
cmpsb
arpl
xor
and
cmpsb
pop
imul
sub
mov
scas
je,pn
cmp
sub
pop
mov
pop
leave
cli
pop
jns
inc
mov
sbb
pusha
xchg
leave
push
pushf
sahf
mov
cld
dec
enter
mov
sbb
test
add
mov
fldenv
addr16
mov
int3
mov
mov
mov
aam
arpl
insl
inc
and
add
ss
stos
cmp
mov
push
xor
mov
bound
mov
lret
insl
aam
lea
repz
test
iret
fimull
int
pushw
jecxz
xchg
roll
or
js
dec
jae
push
ljmp
leave
push
shrb
xorb
mov
pop
pop
mov
pop
push
aas
mov
sbb
fists
ljmp
inc
jns
adc
sub
arpl
add
cmc
sbb
pop
sarb
cwtl
test
arpl
pop
mov
dec
scas
pusha
shll
dec
rcrl
inc
cs
sbbb
and
stos
movsl
arpl
pop
pop
fwait
ljmp
aam
movsl
xchg
push
arpl
adc
and
and
xor
js
mov
push
idivb
rorb
sahf
arpl
fs
xlat
push
pop
or
pop
push
push
inc
mov
les
sub
cmp
jbe
sbb
dec
int3
cld
jb
mov
pop
sbb
xor
xlat
jmp
mov
cmp
and
cltd
decb
cltd
cmp
push
push
nop
jbe
xorl
push
mov
xchg
mov
mov
push
push
inc
mov
xor
and
cmp
je
mov
sbb
dec
dec
outsb
pushf
data16
dec
xchg
and
xchg
mov
insl
js
sub
test
mov
divb
push
ret
xor
jecxz
mov
out
mov
loope
in
fisttpl
sbb
push
mov
jmp
jl
test
jo
mov
sbb
pop
push
test
cs
mov
sbb
enter
cmp
jmp
enter
test
mov
xor
or
adc
ljmp
and
or
xor
enter
mov
bound
add
and
lock
xchg
mov
std
adc
lea
fdivrs
cmp
add
insb
cmc
sbb
adcb
lock
mov
push
loopne
ficoms
cmp
insb
ffree
push
cmp
pop
xor
cltd
pop
mov
or
or
js
std
clc
ja
hlt
ja
das
pusha
mov
ret
mov
imul
and
rcrb
or
jl
jnp
repz
pop
test
lret
pop
or
clc
pop
mov
sub
mov
lcall
insb
xchg
enter
into
scas
cli
and
push
int3
loop
cmp
push
hlt
test
out
lds
loop
inc
sub
repnz
xor
dec
lock
mov
cmp
lock
fsubrs
jo
or
sbb
jne
cmp
mov
fldt
mov
jne
push
movsb
mov
rcll
jb
in
test
pop
incl
add
or
add
das
shlb
mov
lret
loop
and
adc
jmp
insl
divl
lods
push
sbb
xchg
sti
push
es
in
mov
dec
pop
ljmp
push
jb
movsb
test
and
int
je
sti
mov
sahf
xchg
loope
fnsave
jp
pop
shlb
fnsave
mov
push
or
loop
sarb
add
and
call
gs
call
test
cmp
add
adc
pop
pop
or
dec
nop
sbb
aaa
bnd
push
daa
arpl
cmp
cld
jg
push
jge
mov
cs
ficoms
or
xor
add
mov
jb
icebp
mov
aas
pop
push
inc
add
pusha
mov
stc
or
stc
mov
sbb
push
popa
ret
mov
popa
mov
push
xchg
pop
jae
sub
mov
push
scas
jnp
lods
cmpsb
repnz
enter
mov
pop
test
mov
pop
add
inc
mov
sarl
inc
dec
iret
mov
pusha
inc
xchg
mov
dec
or
dec
cmp
outsb
cmpsb
mov
loop
bound
lahf
cwtl
leave
cli
sahf
mov
cmp
leave
fbld
pop
jb
dec
xor
xorb
xchg
ljmp
in
loopne
push
test
in
fstpl
imul
fdivl
dec
pop
out
sub
stos
or
rclb
inc
sarb
cmp
and
int
jmp
sub
aam
xchg
mov
push
lret
jo
hlt
test
loop
xlat
leave
jge
cmp
push
out
je
cmp
cmp
mov
and
jae
jl
rcr
roll
rcrb
or
xor
push
sbb
pop
fcmove
push
xor
cmp
lds
mov
lock
and
popa
lods
or
shll
inc
mov
sahf
and
bnd
ds
in
add
pop
adc
test
cmp
and
cmp
and
inc
jo
fs
rclb
sbb
aam
add
or
jle
test
int3
imul
dec
push
imul
inc
notb
in
in
ror
lock
bound
js
call
jae
xor
push
mov
or
lcall
bound
push
rcl
xchg
addr16
out
sub
mov
mov
pop
loopne
xor
mov
jl
sbb
mov
xchg
jle
mov
mov
add
out
popa
loop
nop
jg
test
add
push
xor
xchg
test
mov
push
xchg
adc
stos
sbb
push
pop
pop
add
pop
cmp
xchg
xchg
push
jo
jo
out
pop
data16
imul
jns
out
xor
in
gs
popf
sbb
mov
in
push
and
fisubl
aas
hlt
mov
pop
adc
dec
loopne
daa
fstpl
xchg
sub
in
mov
sub
out
xchg
adc
inc
push
or
in
movsb
pushl
insb
push
outsl
scas
cld
dec
out
repnz
xor
popl
out
rorb
ret
push
adc
lods
out
push
sahf
dec
cmc
add
dec
mov
sub
inc
sub
jns
rol
push
inc
dec
dec
pop
mov
push
adc
inc
inc
jbe
shl
pop
adc
scas
pushf
cmp
cmc
cs
loop
fisubl
ljmp
lods
mov
xchg
sub
in
dec
fstps
addb
inc
mov
xchg
scas
dec
fsubrp
or
inc
sub
outsb
or
jp
in
cvtps2pi
mov
pop
xor
cmpsl
xor
fisttpll
pop
push
cmp
sar
stos
shll
jno
mov
daa
sarl
xorb
jo
ss
push
cmc
sbb
fwait
clc
mov
test
enter
fwait
push
xchg
lret
outsb
push
dec
es
xchg
call
cmp
pop
push
lods
sub
into
mov
add
es
pop
push
addl
or
lret
movsb
cmp
pop
icebp
cld
adc
or
ret
out
fs
jae
mov
out
data16
rol
fcomp
dec
pop
stos
stc
cltd
jns
push
fcompl
movb
cmpl
or
dec
xchg
aaa
cs
add
sbb
shlb
add
les
push
repz
jae
repz
shrb
ret
ljmp
mov
xor
mov
lods
or
cltd
test
cmp
sti
pushf
int3
jge
sub
insb
je
ss
xor
int
pushf
inc
dec
clc
add
xor
or
and
mov
popa
into
mov
rcll
addr16
leave
in
push
fisubl
jnp
push
inc
enterw
enter
and
scas
and
lret
loope
mov
mov
xlat
out
iret
gs
fwait
jg
pushf
jb
pop
push
scas
in
or
pop
mov
ja
and
cmc
push
das
lods
fcmove
cmp
call
daa
nop
sbbl
jns
jmp
cmpsl
dec
das
mov
in
cli
cs
enter
or
jl
adc
imul
scas
xor
mov
sbb
jno
pop
iret
jbe
mov
pop
lcall
sbb
fs
pop
mov
ljmp
ljmp
fstpt
jge
shrl
and
adc
mov
push
jbe
xor
inc
dec
int3
pop
inc
sahf
pop
push
fisttpl
pop
cwtl
add
mov
pusha
push
imul
outsl
sbb
gs
xchg
jmp
cmp
or
fnstcw
jns
and
fsubr
insb
bound
cs
sbb
and
pop
cmpsb
push
scas
push
dec
int
in
je
push
pop
add
rcll
mov
pop
cmp
daa
fldt
adc
scas
mov
pop
xchg
divb
pop
out
jns
std
iret
adc
lret
je
fisttps
je
lcall
imul
pop
inc
xchg
add
dec
pop
imul
nop
test
mov
xor
xchg
xchg
xchg
xor
mov
test
dec
into
loopne
pop
fdivr
inc
mov
pop
pop
dec
jmp
jns
or
pop
imul
mov
lret
test
scas
jne
cmpsl
xchg
xor
movd
roll
adc
dec
mov
add
bound
stos
sub
ja
out
fadd
pusha
xor
popa
add
negb
addr16
mov
xchg
nop
in
sub
and
lcall
lods
mov
aad
ljmp
cmpsl
cld
push
inc
subl
lahf
mov
loope
loope
mov
in
mov
std
call
mov
ret
pop
adc
sub
add
adc
in
cmpsl
mov
fldt
push
inc
xchg
sub
mov
and
mov
jecxz
loop
loop
jne
pop
daa
fwait
dec
inc
jns
repnz
in
iret
mov
mov
cmp
lock
cltd
or
hlt
fs
aaa
add
std
or
push
fists
das
mov
xchg
outsb
jo
test
cwtl
scas
js
push
stos
sub
dec
out
negl
push
adc
pop
xchg
dec
inc
push
cli
scas
sbb
jno
bound
ficoml
xchg
sahf
mov
cmpsl
mov
and
imul
inc
sbb
adc
jp
popf
aam
sbb
cmovo
dec
sbb
push
mov
mov
les
mov
orl
push
xor
loop
pushf
test
adc
ja
cmc
adc
stos
les
push
pop
pushf
pop
lahf
aas
mov
pushf
ficoms
dec
aas
jno
cmp
mov
adc
add
mov
cmpsl
fistpll
xor
push
gs
int
mov
test
fstpt
int
stc
rcll
pop
xchg
xchg
sbb
xchg
sbb
adc
mov
xchg
mov
sub
mov
sub
les
mov
pop
jge
in
mov
jae
jg
add
pop
mov
mov
mov
test
mov
cmpsl
fbstp
jg
stos
sub
in
xchg
ret
mov
pop
loop
arpl
movsl
and
jbe
xchg
imulb
les
mov
pop
in
out
adc
inc
adcb
lcall
stos
jmp
sarb
rorb
push
or
pop
sbb
data16
dec
jno
cmp
mov
ret
jb
adc
js
add
jbe
icebp
test
mov
and
insl
jecxz
rcl
and
ret
in
stos
jl,pn
int
jle
add
sbb
jbe
scas
aaa
mov
pop
xor
adc
sub
xchg
scas
cmp
cmp
pop
or
jp
outsb
mov
lea
and
or
sub
subl
in
mov
repnz
sub
inc
lods
ficoml
or
mov
dec
jle
sub
jmp
pop
out
xor
pop
stos
and
push
flds
dec
sub
add
dec
cs
out
in
pop
mov
loop
cmp
dec
mov
arpl
and
and
mov
lods
cmpsl
adc
xchg
jae
clc
in
lea
daa
clc
js
imul
pop
mov
xchg
popa
imul
es
sub
out
mov
aas
push
sti
icebp
push
das
je,pt
inc
fistpl
in
dec
aam
jnp
sbb
add
jo
ja
jnp
inc
add
xor
imul
ds
mov
daa
dec
xor
fdivrl
push
sti
out
or
mov
and
xchg
daa
dec
bound
adc
push
scas
mov
out
sub
mov
cmpl
mov
jge
sbb
outsb
in
adc
ret
testb
fs
sbb
add
sbb
lret
mov
loop
fmulp
cmc
ds
fucomip
xlat
pop
dec
mov
push
pop
adc
sbb
mov
inc
xor
jge
ljmp
mov
mov
inc
and
dec
push
cld
cmp
xchg
xchg
call
test
das
enter
sbb
mov
into
in
setge
xchg
push
cli
adc
es
subl
insl
and
mov
scas
in
inc
mov
ret
pop
cwtl
dec
imul
inc
ficompl
ds
dec
imul
pop
mov
adc
je
stos
rorb
xor
addr16
ds
dec
fiaddl
imul
pop
into
inc
das
loop
out
push
in
cwtl
add
push
jle
les
repz
mov
fadd
mov
sub
pop
mov
lahf
sub
lods
fcoms
out
pop
dec
imul
mov
dec
and
mov
fnstsw
aas
push
pop
ror
pop
aas
daa
test
subl
fsubrs
inc
popa
push
mov
inc
fs
jp
mov
ficompl
fsubrl
mov
mov
movzwl
fsubrs
ret
sub
enter
jp
fildll
pusha
aas
pop
lcall
vcvtsd2si
jnp
xlat
adc
pop
jo
cmp
sbb
inc
pop
lods
ds
repz
in
stos
fisttps
loopne
add
mov
das
push
ljmp
shrb
push
jp
dec
mov
jg
jae
call
out
daa
cwtl
in
imul
jb
sub
movsb
mov
cli
mov
lock
or
mov
fdivrl
in
scas
push
movsb
push
roll
and
call
cltd
in
rcrb
jmp
imul
mov
in
movsl
jns
sbb
int
clc
sbb
pop
cmp
jne
pop
and
lret
mov
cwtl
daa
dec
push
mov
pop
scas
inc
adc
jle
orb
sub
test
jecxz
movsb
icebp
fwait
xor
leave
xlat
out
inc
pop
pusha
repnz
shll
or
hlt
bound
cmpb
sub
lret
test
mov
lock
in
mov
test
xchg
mov
pop
shrl
jo
mov
fcomps
lods
addr16
adc
jecxz
and
or
ss
xor
dec
mov
jnp
mov
push
sub
cmp
nopl
jbe
mov
hlt
loopne
mov
add
cmp
pushf
repnz
and
inc
push
test
jns
stos
aam
movsl
mov
sub
xchg
lcall
cwtl
incb
xchg
pop
or
pop
xchg
jne
mov
fimull
repnz
sub
jmp
inc
lea
push
mov
jns
mov
pushf
inc
inc
pop
mov
loopne
mov
and
outsb
movsl
mull
adc
mov
and
in
je
out
or
lock
jae
mov
outsl
xchg
sbb
sar
sub
es
pop
xchg
stos
mov
or
sub
sub
xchg
sub
sarl
sub
mov
fstps
movsl
js
in
and
push
and
addr16
ja
mov
sti
lret
cmpsl
push
lcall
push
cmpsl
mov
cmp
scas
add
leave
pop
adc
in
add
inc
test
dec
xor
sbb
push
aaa
xchg
ljmp
push
pmulhuw
or
jb
je
inc
pusha
mov
lret
clc
or
enter
mov
fxch
mov
cwtl
aad
push
mov
cli
fmull
shll
or
mov
push
pushf
loopne
jns
sti
xor
cmp
mov
imul
jnp
and
pop
or
xchg
rsqrtps
in
xlat
std
or
call
dec
sbb
rcrl
test
or
sti
popa
cmp
sbb
add
lods
add
sub
roll
ret
scas
bound
or
dec
inc
icebp
jl
test
lahf
xor
mov
lahf
mov
nop
jb
stos
push
add
mov
inc
push
mov
mov
sbb
push
enter
enter
add
inc
jb
adc
adc
psllw
adc
inc
hlt
jmp
xor
cltd
repz
jecxz
and
push
incl
in
outsb
test
cltd
pusha
adc
fidivl
leave
dec
int
ss
adc
nop
jecxz
test
out
and
nop
cmp
filds
push
pop
push
adc
adc
or
lahf
movsl
sub
add
xor
cmpsb
mov
rcll
and
pop
int3
jnp
adc
pushf
cmp
pop
jle
addb
movsb
iret
or
mov
les
dec
test
mov
sbb
pop
adc
jg
mov
fs
fcoml
sahf
sbb
adc
stc
adc
daa
std
adc
das
lret
icebp
shll
addr16
mov
loopne
ss
push
dec
mov
rolb
push
jo
sbb
cmp
mov
and
jb
xor
push
shrb
jp
aad
popf
insb
nop
nop
rclb
pop
dec
repz
dec
ret
xor
cwtl
jmp
cmp
sub
clc
xor
adc
dec
fcoms
push
and
lret
je
ret
fdecstp
mov
mov
adc
ljmp
out
aad
cli
fidivrs
stos
data16
scas
negl
inc
inc
insl
xor
jmp
test
adc
xchg
int3
mov
push
cmp
lea
add
mov
scas
arpl
xchg
lods
lods
dec
pop
sti
cmp
insl
mov
insb
rcrb
dec
popa
mov
subb
push
inc
incb
lods
sub
xorps
addb
aad
jg
mov
sahf
jns
addb
in
sub
imul
call
loope
jl
mov
cmpsb
sub
fistpl
outsl
mov
pop
mov
or
stc
jge
int3
sub
inc
adc
add
jecxz
in
out
mov
dec
xor
mov
add
aam
xor
cmp
out
push
movsb
nop
mov
xor
js
cmc
sahf
pop
orb
aas
sbb
and
adc
sbb
sbb
push
dec
xor
cmpsl
push
jne
sub
jno
leave
inc
xor
pop
mov
mov
je
cmpsl
push
lret
mov
test
dec
nop
adc
sub
sbb
stos
es
inc
dec
or
adc
mov
adc
sbb
addr16
sbb
gs
push
adc
lds
test
scas
fwait
and
test
jb
fldpi
dec
jbe
add
movsl
add
adc
mov
add
xchg
mov
or
enter
mov
js
jo
je
out
ficoms
jl
gs
fcmovnu
jle
sbb
cs
fdiv
sahf
cld
movsb
loop
pop
out
ja
loope
push
mul
mov
push
addl
je
xchg
gs
hlt
roll
imul
mov
dec
insl
rcl
add
cmp
push
and
jg
outsl
jb
ljmp
stos
mov
je
mov
das
sbb
int3
push
imul
ljmp
out
outsl
cmp
and
add
push
inc
xchg
call
shrl
lods
pusha
loop
pop
movsb
dec
pop
int
mov
in
mov
lret
jg
stos
adc
nop
dec
shlb
adc
cwtl
sbb
xchg
jp
and
jle
pop
repnz
xchg
inc
and
mov
add
and
aas
notb
cmp
pushf
jg
sub
xchg
in
std
cmp
out
add
out
loope
mov
sbb
or
in
fwait
xor
dec
mov
dec
mov
sbb
inc
filds
adc
out
es
mov
sbb
scas
les
xor
sti
pop
mov
sahf
aam
add
jecxz
je
ss
orb
cmpsl
outsb
xor
aam
insl
mov
adcb
inc
sbb
lahf
mov
jno
xor
scas
add
xchg
xchg
add
std
jbe
loop
mov
sub
or
and
movsb
mov
push
fidivrs
hlt
xor
mov
adcb
es
nop
notb
lret
shll
add
int
subl
stc
mov
xlat
lahf
mov
jno
mov
push
in
or
fdivrs
mov
cmp
std
stc
rolb
xor
inc
decb
bnd
cli
aaa
and
push
pusha
inc
push
dec
pop
dec
xor
aaa
movsb
imul
rclb
adc
ljmp
jae
outsb
sbb
mov
ret
push
lock
lds
lock
mov
pop
popf
cmc
fsubrl
add
or
in
push
mov
dec
xchg
jno
lods
clc
je
aad
lock
ss
mov
mov
sub
adc
inc
pop
sti
sbb
hlt
enter
sub
mov
fcoml
mov
or
mov
cld
push
outsb
movb
rclb
lahf
mov
mov
jmp
shr
xchg
pop
lods
inc
and
insb
adc
mov
lret
dec
lods
mov
pop
sub
sbb
jo
push
cmpsb
lock
cmp
sbb
add
mov
or
mov
inc
mov
lea
mov
ja
cmp
pop
rclb
aas
loope
aaa
mov
or
pop
inc
push
mov
loopne
or
inc
dec
dec
sbbl
fwait
js
lcall
je
movsl
stc
xchg
insb
dec
into
xchg
add
sub
dec
orl
pop
push
lcall
hlt
imul
imul
cltd
cmpsl
inc
loopne
push
pop
jle
cmovb
and
cmp
sti
addr16
imul
mov
test
dec
imul
aas
stc
mov
mov
pop
mov
jae
push
adc
jo
and
stos
jo
cli
jmp
and
inc
xchg
mov
ret
outsb
dec
jb
pusha
or
packuswb
enter
push
xchg
idivl
jae
pop
adc
ss
push
dec
cld
sub
std
jle
loopne
out
ss
les
rclb
call
ljmp
jmp
test
jno
mov
pop
sbb
iret
pop
inc
jnp
std
jo
add
les
or
ficoml
xor
rcrl
popa
push
jecxz
je
cmp
roll
sub
movsb
mov
jno
icebp
rcrl
xlat
cmc
das
inc
jge
mov
int3
sub
fnstsw
xor
cmp
imul
mov
lcall
dec
sub
pushf
inc
dec
aas
mov
adc
mov
push
sti
cmpsl
dec
test
dec
pushf
and
jne
std
lret
shl
testb
test
xor
mov
call
cmp
setae
lods
cmc
aam
xchg
lods
push
addl
push
mov
call
lock
add
in
sahf
insl
dec
or
popf
outsl
dec
addb
sbb
fists
bound
jns
mov
sbb
loopne
dec
das
jp
dec
ds
mov
dec
or
mov
dec
and
xchg
ficomps
add
cmp
mov
mov
adc
xchg
fnstenv
fisttps
add
sar
bound
imul
sbb
pop
out
sbb
jmp
movsb
fs
in
into
add
mov
into
ja
out
outsl
and
jb
enter
sub
cmp
mov
fildl
shrb
lret
sti
xchg
mov
lret
iret
add
or
pop
pop
lds
inc
push
int3
movsl
or
xchg
nop
or
add
lret
in
mov
fcoms
negl
push
test
mov
push
push
or
xchg
aas
mov
cmp
inc
add
push
je
cmp
sub
xchg
pop
jb
jnp
add
jl
fs
push
inc
add
mov
outsl
loop
outsb
mov
in
dec
mov
jne
and
mov
mov
xor
into
adc
subl
jne
fildl
ljmp
xlat
sti
mov
test
adc
cmpsb
ja
adc
push
mov
out
dec
push
jns
cltd
and
scas
aad
call
push
add
or
mov
insb
mov
sbb
jecxz
fs
nop
push
out
sarl
pusha
cmp
ja
push
in
lcall
test
jnp
rorb
mov
xor
cmp
inc
adc
xlat
test
xchg
jl
aaa
loope
insl
and
inc
fidivs
shlb
or
push
dec
insl
mov
mov
fs
push
aad
mov
jg
ss
test
xchg
fmul
or
out
mov
arpl
data16
ljmp
mov
in
out
mov
mov
outsb
mov
pusha
imul
jge
xchg
xchg
xor
arpl
jbe
aaa
js
rol
insl
and
xchg
mov
or
xchg
xlat
push
bound
mov
aam
loop
bound
and
xor
mov
jne
mov
mov
inc
cmpsl
out
rcrl
js
or
sahf
adc
sub
mov
int
in
mov
jno
je
out
ret
jl
call
jp
movsb
mov
sub
pop
add
aaa
fcomps
and
push
incl
fiadds
int
add
pop
insl
js
jnp
pop
sub
cmc
push
push
jp
or
xor
mov
inc
sub
inc
add
rorl
and
mov
cmp
fs
adc
subb
ljmp
pop
test
orl
outsb
shll
inc
sbb
jmp
scas
imul
loope
lds
cmp
repnz
mov
jp
push
cs
mov
xor
push
inc
cmp
jns
mov
add
insl
ljmp
cld
push
inc
inc
ljmp
ss
pop
clc
movsb
in
pop
call
mov
inc
adc
cmc
ljmp
and
cmp
jns
arpl
dec
jle
pop
adc
or
imul
and
testb
shll
call
out
outsb
mov
test
or
pop
adc
mov
mov
ja
and
inc
mov
and
xchg
iret
jb
and
mov
or
mov
xor
inc
pushf
pushf
jae
or
push
cmp
jae
xchg
cld
inc
pop
sub
gs
pusha
hlt
push
movsl
xchg
mov
ret
arpl
cmp
ret
stos
sub
dec
and
pop
scas
inc
or
daa
push
inc
cmc
jae
jmp
push
stc
repz
or
pop
push
cwtl
das
xchg
mov
out
push
pop
stc
push
stc
and
inc
sbb
inc
imul
add
dec
decb
outsb
jb
stos
notb
pusha
jno
lock
repz
xchg
inc
inc
jecxz
fs
repnz
imul
mov
mov
fnstsw
subl
stos
mov
es
outsl
xchg
in
or
push
fcoml
das
mov
sub
stos
movsl
rolb
bswap
mov
clc
fistpl
cmpsb
hlt
pop
loopne
mov
mov
cmp
add
xchg
and
lret
mov
adc
nop
jne
mov
popa
cltd
mov
psllq
sbb
push
hlt
xor
fdivrl
adc
mov
das
pop
push
idiv
in
arpl
lahf
mov
lcall
out
sahf
fadds
dec
mulb
imul
inc
and
jne
cmpsb
or
fcomp
in
sub
cs
popf
mov
mov
or
pop
or
in
jnp
inc
sti
scas
jbe
cwtl
lock
sub
rolb
and
cmpb
fisubl
mov
fwait
sti
loopne
cmp
inc
push
jmp
mov
icebp
loop
mov
fnop
mov
dec
ja
fsubl
mov
int3
outsl
cmp
cltd
push
loop
jge
sub
mov
add
mov
add
loope
jae
cmpsb
mov
jns
cld
xor
jg
stos
popa
nop
cmpsl
push
icebp
insl
mov
mov
dec
pop
sbb
jge
cld
adc
mov
rorb
in
mov
mov
mov
mov
mov
out
mov
sahf
mov
mov
fdivrl
jecxz
ljmp
adc
or
jns
std
mov
sahf
sbb
jae
adc
es
mov
sti
adc
pop
jb
pusha
xchg
mov
push
xchg
shll
or
lods
ljmp
jo
adc
divb
int3
mov
add
cwtl
jbe
cmpsl
jne
cmp
les
shrb
iret
xchg
mov
push
mov
cmpsb
stc
das
jmp
inc
sbb
test
add
mov
fbstp
sbb
aas
pop
dec
xchg
xlat
lahf
jb
in
sti
xlat
jae
pop
or
sbbb
aas
stc
and
or
xchg
inc
xchg
add
inc
mov
andb
add
sti
mov
cmpsb
sbb
add
test
adc
cmp
out
lret
lahf
das
aaa
mov
ja
mov
mov
outsl
cwtl
movsl
xchg
hlt
cs
call
int3
dec
pop
pop
fstpt
js
jmp
sub
push
and
pop
mov
icebp
ror
mov
loopne
int3
push
add
sub
cmp
xchg
xchg
push
add
sar
fdivrp
test
or
and
cmp
iret
mov
into
dec
repnz
mov
stos
mov
xchg
mov
sti
jbe
xlat
in
notb
in
lea
jns
int
inc
pop
cmpb
sbb
in
scas
sbb
mov
lret
ss
xchg
push
dec
cltd
mov
inc
lret
mov
pushf
iret
cmp
or
pop
fisubrs
add
sub
movsb
mov
pop
mov
enter
jns
bound
cmp
fldcw
mov
add
adc
xchg
fstps
sti
dec
jg
push
xorb
jb
stc
out
jno
fistps
das
sti
insb
mov
add
sbb
push
iret
insb
cmp
insb
popf
cmp
or
xchg
divl
sbb
scas
sti
jg
sub
lock
cmp
pop
jmp
std
adc
cmp
hlt
rcrb
shl
fstpt
push
cs
dec
or
daa
pop
nop
scas
sbb
pop
out
popa
dec
adc
sub
jne
mov
sub
push
mov
data16
mov
ds
cld
dec
sbb
adc
or
mov
adc
loope
insl
mov
pushf
add
pop
sub
fisttps
icebp
std
jecxz
sbb
xchg
xor
or
pop
insb
ret
and
popa
cmp
pop
out
ljmp
lds
push
movsb
out
insb
xchg
bound
and
aad
cmp
shll
jbe
mov
jno
fbstp
pop
out
sub
sar
jns,pn
mov
je
sahf
bound
out
and
cmp
aaa
mov
push
push
popl
add
mov
xchg
popa
fisubl
imul
add
adc
and
out
ds
mov
ret
imul
fs
dec
gs
mov
fdivrs
rcl
out
xor
jecxz
cmp
cmpsl
iret
mov
int3
lcall
adc
clc
jae
pushf
dec
or
dec
pop
pusha
addr16
negl
lcall
pushf
jne
ds
jbe
inc
mov
loope
sti
lea
push
mov
pop
sbb
sub
inc
xor
orb
sbb
std
outsb
loope
jecxz
lcall
adc
and
lret
movsb
jbe
xor
fisubrs
push
out
jl
pop
cmp
stos
sbb
rcll
cmp
xor
data16
stos
cmp
sahf
ss
cwtl
push
ja
mov
push
or
push
in
push
daa
cmpsb
into
mov
fwait
xorb
adc
sbb
mov
sbb
sub
xchg
and
and
and
loopne
fcmovnb
dec
mov
scas
int
into
rorb
dec
bound
pop
into
repz
pop
stc
pop
aas
add
subl
add
pop
pop
pop
idivb
repz
shlb
mov
clc
lret
loope
xchg
pop
ficoms
lds
fs
mov
loop
pop
jg
das
mov
loope
pop
push
lods
bnd
jecxz
lret
mov
fnstsw
aaa
pop
out
jo
cli
cmp
pop
clc
mov
xchg
and
push
es
mov
cmp
mull
daa
add
adc
xchg
mov
lods
push
popf
lcall
fcomps
les
mov
adc
lahf
and
mov
xchg
insb
lods
adc
int3
mov
cli
mov
rcl
pop
outsb
xlat
jmp
pop
mov
pop
cwtl
cmp
lcall
push
dec
and
hlt
mov
xor
mov
push
xchg
mov
mov
xchg
jg
out
add
mov
ret
cld
daa
mov
and
cmp
pop
cmpsb
outsl
sti
icebp
fsubs
xor
hlt
cmp
cmpsl
wrmsr
out
out
xor
iret
push
mov
mov
je
lods
inc
mov
fists
or
arpl
sbb
in
push
outsl
jg
cmpsl
fisubl
es
mov
add
pop
push
xchg
adc
dec
sub
cmp
outsb
nop
push
les
pop
xchg
sub
ret
or
add
aaa
mov
lcall
or
jb
mov
shr
cmp
pop
stos
cld
mov
sar
icebp
div
jl
int
jno
int3
shll
cmp
inc
mov
pop
es
jmp
dec
cmpsb
cmp
mov
jo
inc
std
addr16
lods
iret
pusha
or
sub
sahf
test
fcompl
sbb
scas
sub
adc
xor
push
jno
mov
cli
sbb
adc
imul
pop
jecxz
das
cs
shl
or
dec
dec
mov
inc
xor
xor
addr16
rcrl
lds
pop
add
mov
loope
lock
hlt
or
xor
loope
jae
push
sbb
sub
adc
mov
jno
and
ds
mov
ljmp
and
inc
ljmp
jbe
sbbl
or
mov
xchg
insb
cmp
icebp
add
ret
cld
pop
sbb
bndldx
cmpsl
mov
push
mov
sbb
push
test
xchg
add
push
push
rcll
push
and
mov
and
mov
dec
test
xchg
and
push
inc
ficompl
gs
fldt
insb
fwait
test
sbb
fs
cmp
bound
repz
scas
out
adcb
mov
push
into
cmp
lods
inc
fs
and
or
mov
xchg
pop
fldt
ret
push
sbb
xchg
xchg
mov
mov
pop
mov
jno
lcall
jmp
sub
mov
mov
jae
cmpsb
inc
add
adc
jb
mov
pushf
rorb
and
and
sbb
nop
xlat
xlat
test
in
cmp
in
mov
int3
pop
out
xor
mov
and
insl
add
mov
cmp
sub
out
push
std
mov
pop
in
push
out
in
testb
jle
insb
mov
mov
xor
int
cli
insl
fldenv
sarb
fdivr
inc
cmpsb
push
or
xor
push
and
and
movsb
sub
xchg
sbb
in
orl
cwtl
popa
shrl
clc
jmp
cmp
push
lods
js
fbld
shrl
sti
mov
cmp
testb
and
gs
sub
pop
xor
sarl
lds
iret
lods
cltd
or
movsb
jle
lods
jne
add
mov
dec
jle
enter
subb
jae
push
js
repz
xlat
add
push
cltd
movsb
fldcw
imul
lds
aam
in
and
sti
dec
ljmp
fdivrl
mov
sbb
and
xor
inc
mov
jae,pn
or
daa
test
inc
cwtl
scas
jmp
lods
jne
push
xor
push
pop
inc
aaa
adc
push
mov
mov
push
jmp
push
or
fldenv
sub
aam
mov
icebp
sbb
jge
mov
inc
aad
and
aad
mov
and
int
adc
fcomps
sbb
xor
cmp
push
cltd
xchg
push
fwait
xchg
mulb
pusha
test
jp
push
aam
daa
or
repz
jmp
mov
jne
jns
jne
cmpsl
fistl
or
jbe
loop
sarl
xlat
jno
daa
mov
mov
scas
mov
rorb
mov
cli
mov
les
mov
mov
leave
mov
int
test
bound
add
or
and
scas
fildl
pusha
lret
sti
xchg
mov
cmp
inc
sti
xchg
outsb
repnz
repnz
xchg
jns
dec
mov
aas
sti
les
popf
imul
daa
mov
jge
sub
adcb
cwtl
das
loopne
xlat
or
cmpsl
mov
jnp
sub
xchg
mov
insb
loop
jae
dec
scas
in
and
std
xor
outsb
xchg
add
dec
dec
negb
xor
xchg
fdivrs
sub
dec
dec
sub
mov
in
in
sbb
and
inc
and
movsl
nop
jo
push
fdiv
in
inc
jno
jg
movsl
loopne
add
fstpl
adc
inc
ret
int3
push
add
inc
fists
lahf
in
xchg
ret
imul
mov
aaa
mov
xor
push
mov
mov
mov
pop
sub
jno
js
xchg
cmpsl
fisubrs
movsb
hlt
jo
mov
lcall
push
sbbl
adc
sub
lds
testb
inc
ficoms
cltd
xor
jmp
dec
or
mov
int3
xchg
cld
lods
daa
cli
and
mov
dec
dec
mov
and
popf
aam
aad
push
xor
data16
cli
imul
leave
pop
sub
fcomps
xor
jo
sbb
xchg
dec
jp
push
in
mov
lret
and
into
sub
jnp
je
sbb
jbe
repnz
xchg
or
rorl
dec
adcl
nop
or
das
cmp
icebp
jle
out
scas
xchg
dec
dec
pop
cmc
dec
push
push
je
jmp
jo
and
or
xlat
jge
push
xchg
imul
cmp
seto
xor
aas
enter
xchg
frstor
imul
adc
inc
jecxz
jp
dec
flds
lcall
cmp
sbb
loop
adc
lds
sbb
orl
enter
lock
sbb
dec
dec
inc
cs
mov
xor
push
push
sbb
mov
lea
inc
cmp
add
dec
cmpsb
data16
ljmp
xor
pop
inc
fucomp
dec
jge
fwait
push
jae
aaa
imul
xor
sub
xorl
pop
cmpsb
push
dec
fiadds
movsb
out
pop
cmp
xrelease
or
xor
test
fisttps
sbb
addr16
push
mov
and
dec
aas
dec
mov
pop
fidivrs
push
add
push
lods
jbe
pop
loope
test
inc
xor
xor
xor
dec
pop
cmpsb
insl
or
push
mov
stos
lcall
jo
or
and
mov
or
sbb
sbb
cli
push
insb
adc
sub
pop
gs
das
mov
mov
sbb
cmp
test
scas
jge
pop
aam
movsl
pop
mov
pop
gs
push
mov
lock
repnz
jbe
xchg
mov
mov
pop
pusha
xchg
pushf
sub
iret
cmp
fnstsw
add
out
stc
adc
cmp
sub
cmp
cmpl
add
mov
es
enter
popf
inc
push
add
pop
inc
bound
mov
lods
jl
iret
dec
daa
cmp
ret
jb
adcb
jne
ds
pop
and
icebp
cmp
test
mov
negl
jp
cli
inc
push
and
adc
mov
sbb
add
mov
xor
sarl
push
out
pop
int
jecxz
jl
arpl
inc
mov
dec
adc
xchg
mov
mov
and
add
hlt
xor
push
bound
loope
mov
push
pop
push
stos
loope
cld
iret
mov
push
popf
nop
push
sbb
stos
aas
pop
jbe
pushf
addr16
stc
xchg
aam
lahf
jg
push
rcll
loope
mov
pop
lods
int
add
push
fs
orl
mov
mov
push
add
nop
or
loopne
add
pop
mov
jg
cmp
xor
mov
add
cmp
push
movsb
daa
sarl
lea
lahf
cmpsb
in
clc
inc
cwtl
mov
adc
pushf
xchg
sbb
sti
negb
xchg
pop
ljmp
adc
adc
mov
dec
xor
dec
pop
cmp
pop
mov
sub
mov
hlt
test
mov
or
lods
fnstsw
cmpsb
push
jb
jge
dec
clc
enter
lock
mov
shlb
icebp
loope
cmp
pop
pop
daa
and
mov
lds
xlat
inc
and
dec
mov
data16
pop
xor
dec
fsubl
xlat
fs
ss
sbb
mov
lock
sub
mov
or
xor
cmp
cmp
dec
pusha
psubusw
sub
dec
loope
dec
enter
out
pop
fcomps
gs
sub
ret
fnsave
mov
out
push
xor
xchg
fs
insl
fldl
dec
repz
in
dec
and
dec
mov
mov
das
scas
stc
push
ja
decb
jae
loop
je
push
sub
in
ds
popa
pusha
into
add
jl
dec
out
das
stc
jg
cwtl
into
div
repnz
and
stos
xchg
fidivrs
add
aam
clc
lret
pop
push
out
mov
cmp
jle
sbb
dec
mov
mov
sarb
pop
lahf
sub
hlt
cmp
in
movsl
jl
inc
lret
repnz
mov
jl
mov
addr16
cmp
dec
in
sahf
jo
lret
or
pushf
push
popf
sbb
rcr
cmp
sbb
xchg
cmp
into
ljmp
push
and
mov
out
imul
mov
sub
xlat
mov
adc
xor
push
leave
add
fists
sub
push
aas
or
gs
pop
mov
out
pop
sub
daa
sub
push
adc
xor
cmp
inc
add
sbb
notb
scas
mov
push
mov
ret
cs
das
xor
addl
scas
scas
clc
sarl
out
inc
ja
sbb
or
test
or
dec
fdivl
adc
push
imul
ljmp
aad
sub
clc
inc
movsl
test
lahf
xchg
xor
and
insb
xchg
icebp
push
dec
jmp
dec
ljmp
push
sbb
das
pop
mov
xchg
and
stos
jnp
jmp
popa
inc
add
xor
xchg
stc
loope
jge
jnp
call
add
adc
mov
gs
daa
scas
mov
or
out
pushf
xchg
push
and
or
push
inc
inc
mov
xchg
cmp
dec
pop
lret
mov
cmc
lock
ret
sub
fidivl
or
dec
mov
in
ret
xchg
xchg
xchg
push
xchg
cltd
in
test
dec
jbe
loope
jns
inc
cmp
popf
jge
and
dec
adc
flds
dec
gs
lea
cmp
adc
out
cmp
inc
pusha
adc
daa
mov
pusha
lret
dec
xchg
push
fcmovne
shrl
and
clc
test
sbb
ss
out
add
neg
push
xor
incl
and
push
pop
jecxz
xor
pop
lahf
dec
pop
xchg
lods
movsl
mov
and
icebp
pop
cmp
mov
int
int3
jg
gs
or
movsl
popf
sub
inc
mov
inc
mov
mov
cmp
or
jle
sbb
dec
cli
jg
out
dec
or
xor
mov
ja
iret
cmpsl
jne
outsb
sub
sub
mov
mov
mov
xchg
mov
jns
jbe
or
sbb
mov
fidivrs
xchg
lcall
sbb
ljmp
fisubl
sbbl
dec
adc
scas
jbe
insl
js
mov
cmp
fnsave
add
in
cltd
lcall
cmp
inc
pop
adc
and
push
fstpt
ret
or
add
jmp
mov
test
xchg
ret
push
adc
cmp
xchg
sub
mov
push
bound
cmpl
repz
rcr
loop
addl
xlat
sti
fimuls
stos
ret
jg
lcall
fildl
xchg
enter
mov
fst
out
andl
mov
pusha
movl
push
aaa
pop
cmp
or
addr16
ret
jl
iret
adc
mov
in
nop
and
mov
mov
mov
cltd
push
inc
xlat
push
mov
push
out
mov
push
in
sub
or
outsb
sub
sub
aaa
in
xor
shll
xchg
lea
nop
js
jp
fdivl
cmpsb
lods
fidivl
hlt
jns
xor
push
xchg
aad
inc
sub
pusha
xlat
pop
mov
icebp
inc
xchg
outsl
outsl
leave
addr16
or
std
cmpsb
notb
dec
cmp
loop
jnp
add
ds
xchg
negb
stos
icebp
mov
xchg
xor
pushf
cs
popa
or
xchg
daa
sahf
in
push
pop
mov
mov
sub
jl
loop
cs
call
enter
xchg
call
stos
fldt
in
sar
stos
int3
dec
aaa
inc
xor
pop
in
push
xor
mov
gs
aaa
inc
inc
add
adc
cwtl
rclb
pop
lcall
int
scas
mov
mov
push
in
stc
dec
jecxz
nop
ret
sbb
gs
sub
jge
shll
cmpsl
inc
add
arpl
mov
cmp
xlat
ss
in
les
jle
and
fcoml
sub
scas
orl
jp
lock
pmulhuw
push
shr
pop
mov
cwtl
std
iret
jecxz
mov
mov
and
hlt
xchg
sub
mov
loope
mov
jmp
xchg
repnz
nop
inc
into
and
lcall
mov
inc
and
cmpsl
shl
sub
popa
dec
and
lret
dec
cmp
fdivs
aaa
adc
outsl
stc
gs
enter
xor
fdivrl
and
iret
jmp
test
and
cwtl
mov
mov
shl
dec
lret
leave
pop
movsb
scas
dec
mov
in
das
call
inc
cmpsl
or
arpl
push
jmp
loop
cltd
dec
js
call
and
lret
lea
dec
ss
inc
in
fadd
incl
xchg
les
out
scas
out
lock
xor
pop
add
mov
mov
inc
dec
aad
jge
and
jns
orb
in
rcrb
mov
imul
test
mov
inc
dec
lcall
xchg
push
mov
fistpll
jae
push
pop
cmpsl
insl
aad
xor
mov
jmp
cmp
leave
cmp
icebp
aas
or
lahf
lods
push
clc
sub
out
fcmovu
fwait
stc
imul
fcom
xchg
pop
dec
xchg
into
adc
mov
pop
mov
movsb
in
xor
jno
inc
lods
mov
xor
mov
push
jmp
pop
into
test
jns
mov
sti
or
jl
mov
test
mov
out
add
notl
bound
jnp
sarl
rcll
xchg
mov
out
sarl
test
lretw
int
ljmp
xchg
mov
andl
cli
ja
sbb
push
mov
bound
inc
pusha
call
jg
dec
imul
nop
sbb
inc
push
stc
pop
lds
xchg
rorb
pop
adc
call
repnz
xchg
sub
mov
ja
mov
js
iret
mov
adc
mov
mov
dec
dec
out
and
dec
jl
mov
ljmp
xchg
or
push
inc
outsl
decb
cltd
pop
jbe
inc
pop
fwait
outsb
das
negl
xchg
mov
xchg
hlt
jmp
mov
cmp
call
push
insl
or
and
test
pop
mov
pop
cmpsl
or
adc
jg
cltd
fstpl
or
in
loopne
mov
jge
push
or
daa
loope
movsl
inc
loop
mov
in
sub
cmp
pushf
cltd
cmp
and
and
pop
ja
pop
lret
je
xchg
mov
sub
or
loopne
cmpsb
and
nop
cmp
jge
or
push
mov
jecxz
sub
ret
add
mov
jmp
xor
in
or
pop
add
hlt
cld
xchg
adc
sti
pop
mov
cli
enter
jg
sub
mov
sub
shlb
inc
lcall
sahf
push
fcoms
gs
cltd
and
sahf
stos
cwtl
sub
push
mov
jg
test
in
dec
pop
ja
sub
sarb
push
pushl
adc
pop
jbe
lods
inc
fwait
pop
jl
notl
sbb
bound
jae
pop
pop
xor
enter
sarb
js
mov
sbb
ret
adc
iret
add
mov
mov
scas
loopne
adc
xchg
xchg
dec
xor
stc
add
out
adc
idivb
cmp
dec
pushf
movsl
push
aas
xchg
jo
dec
cltd
jbe
adc
push
aad
lock
loop
jp
sbb
jecxz
inc
inc
mov
lods
pop
mov
sub
cmp
mov
in
mov
inc
test
push
aam
dec
jae
mov
cwtl
push
mov
test
test
mov
outsb
rorl
adc
in
dec
cmp
add
scas
xchg
sahf
xchg
pop
cmp
push
cmpsl
push
lea
mov
out
int
dec
xor
pop
lock
fbld
mov
adc
loopne
xchg
xchg
jmp
dec
ss
jle
das
aas
sbb
push
test
mov
or
adc
mov
ficomps
xlat
ret
mov
in
sbb
push
push
nop
popa
jnp
lret
imul
or
mov
sbb
das
xor
jb
sub
jge
sbb
dec
cmp
xlat
sbb
out
rcll
xor
rcrl
jmp
push
dec
xchg
in
and
push
jecxz
cmc
icebp
or
stos
mov
fs
and
mov
loopne
sub
jnp
popf
add
ja
or
enter
xor
mov
es
mov
lds
push
mov
fildl
jnp
incl
mov
cmc
shr
mov
inc
pop
fstl
dec
sub
jb
pusha
js
or
jecxz
add
mov
pop
sub
aas
adcb
fwait
popf
xchg
lret
jb
sbb
or
push
mov
inc
jmp
outsl
cmp
scas
add
pop
repz
out
mov
dec
jo
cld
mov
jo
test
xor
out
mov
adc
push
out
cmp
cltd
jge
fwait
xor
xor
iret
inc
push
je
neg
out
add
test
shrb
ds
pop
xchg
in
lods
push
pop
adc
jecxz
dec
jle
cmpsb
lds
testl
in
add
xchg
leave
mov
sti
jb
xchg
repz
subb
push
jg
divl
lret
inc
mov
jmp
jnp
mov
inc
cli
dec
pop
jae
sub
js
inc
jge
lret
add
ds
inc
mov
pop
in
nop
push
inc
roll
insb
mov
pop
mov
leave
or
mov
dec
pop
cltd
imul
ret
bound
into
ja
cmp
push
fwait
jb
push
cwtl
mov
inc
inc
push
icebp
ss
xor
fsubrl
ret
in
xchg
adc
xor
add
cmp
add
push
sbb
push
jbe
mov
lds
mov
mov
mov
rol
out
cmp
rcrb
mov
std
add
shll
jnp
ficoml
jbe
jmp
pop
dec
testb
lahf
jecxz
in
mov
push
leave
xor
je
jnp
or
xchg
bound
xchg
or
xlat
jns
lret
lcall
jne
jl
mov
dec
sahf
fwait
add
xchg
dec
lahf
sbb
pop
out
sbb
jne
mov
call
sbb
xor
jne
cltd
jne
and
cmpsb
jns
xor
xchg
jp
pop
aad
dec
out
push
mov
add
mov
xchg
pcmpgtb
test
inc
cmpsb
cmpsb
clc
xchg
cmp
pop
loop
inc
icebp
imul
std
sarl
and
fwait
loope
push
and
das
sbb
sub
push
in
and
add
jns
nop
outsl
push
movsb
cmp
add
pop
mov
xchg
adc
outsl
mov
les
ljmp
or
inc
or
dec
sti
push
push
addr16
popf
sbb
push
imul
pop
or
paddusw
imul
sbb
xor
test
out
jecxz
dec
mov
popl
dec
add
cmp
xchg
mov
subl
rorb
cli
stos
sub
adcb
push
cltd
mov
and
push
mov
clc
jmp
mov
sti
mov
sub
idivb
sbb
dec
adc
xchg
pop
xor
scas
adc
jns
insb
lahf
test
pop
push
or
in
cmp
fcompl
in
cmp
aad
jns
dec
jmp
pop
in
test
dec
fldt
lods
pop
divl
or
ljmp
call
repnz
xor
and
pop
cli
jae
push
cli
jmp
inc
jo
jge
jmp
cmp
mov
mov
push
pop
leave
xchg
jmp
push
xchg
std
mov
push
sub
ret
or
dec
xchg
cltd
stos
scas
in
lea
dec
xchg
cmc
sahf
outsb
inc
fmull
or
jecxz
out
jge
push
dec
test
sub
jle
insl
orb
or
mov
and
pop
pop
sarl
xor
fwait
xorl
jge
outsb
mov
pop
mov
push
test
dec
stos
pop
pop
pop
je
out
lret
loope
add
push
cmpsb
test
xor
dec
mov
jmp
cmp
movsb
and
fcompl
inc
push
xchg
pop
jge
and
pop
test
cmp
dec
push
jecxz
aas
mov
pushf
jl
mov
inc
add
mov
jae
mov
pop
aam
call
jecxz
pop
shll
hlt
mov
xchg
mov
and
xor
test
out
subl
insl
cmp
sti
testb
dec
addr16
fidivs
icebp
in
loope
pop
les
dec
rcl
pop
sbb
cwtl
test
es
rorl
pushf
inc
in
sub
sbb
mov
jl
inc
jecxz
outsl
loop
in
sub
shl
ret
lret
jbe
in
mov
mov
adc
dec
xchg
loopne
mov
outsw
lds
rcll
xchg
or
movsb
pusha
insb
or
daa
stos
pop
mov
sub
popf
adc
sbb
je
ds
mov
jno
and
mov
pusha
js
xchg
and
dec
sbb
mov
push
std
mov
sub
shl
test
arpl
xchg
mov
push
mov
xchg
call
pop
data16
sub
inc
cmc
repz
in
lret
gs
rcll
gs
leave
cli
xor
loopne
fstpt
mov
data16
mov
jo
adc
jle
cwtl
jecxz
push
les
loop
jno
aas
dec
or
jp
xor
or
adc
adc
loopne
shll
dec
rcrb
or
mov
test
mov
ret
and
cld
js
js
cmp
mov
hlt
pop
xor
into
mov
aam
rcrb
fisubl
mov
repz
dec
orb
jnp
adc
test
out
or
pop
cmp
dec
and
dec
movsl
fmuls
push
insb
sub
idivb
push
sub
xchg
inc
dec
push
sub
fsubr
xchg
fadd
cmp
jl
inc
sahf
xor
aas
jge
popf
pop
adc
lret
mov
popa
pop
int3
insl
xor
subl
in
das
daa
sub
sbb
es
sub
mov
test
xchg
ljmp
dec
push
mov
add
jle
lret
push
pop
inc
jmp
popf
imul
stos
out
loop
add
pop
push
sbb
call
inc
in
add
cmp
outsl
push
dec
mov
ret
inc
jge
inc
test
xor
pop
jmp
xchg
mov
jl
fcompl
xorb
jnp
gs
cmp
and
pop
pop
sahf
mov
xlat
mov
xchg
sbb
movsl
add
xchg
push
test
cmp
pop
jmp
cld
xchg
loop
sub
jns
mov
imul
xor
inc
jl
cld
jb
sub
xor
mov
pusha
push
mov
repz
out
fistl
cmp
inc
jo
sub
stos
and
mulb
push
gs
xchg
add
lahf
mov
pop
out
cmp
jl
clc
lds
jmp
fdivrl
cmpsl
jecxz
in
icebp
cwtl
out
mov
mov
and
test
repnz
jmp
out
add
call
aas
adc
pop
scas
xchg
cwtl
xchg
inc
xchg
push
fwait
inc
or
xchg
lcall
sub
adc
add
pop
in
xlat
xchg
mov
int
adc
lods
xchg
addr16
loope
jae
out
xchg
sbb
leave
pop
cmp
in
add
mov
sbb
shr
pop
inc
mov
mov
out
mov
imul
xchg
flds
mov
dec
fimuls
adc
sahf
mov
ds
fistps
mov
sbbl
adc
mov
addr16
dec
sub
xchg
cli
popa
pop
test
incb
clc
add
repz
xchg
sub
jb
xor
or
cmpsl
test
jno
cld
jl
test
imul
mov
out
dec
xlat
xchg
sbb
fiadds
loop
mov
mov
jae
jle
pop
fadds
hlt
icebp
xor
imul
mov
sub
sarb
cld
and
rorl
pop
inc
and
es
sbb
xor
xor
int
xchg
cmp
cs
out
fwait
shrl
add
pop
push
and
mov
int
movsl
cmp
sbb
popa
imul
loopne
jecxz
mov
outsl
and
mov
add
scas
xor
pop
outsl
daa
mov
dec
movsl
xor
mov
test
sbb
add
insl
lcall
sbb
dec
lds
jp
push
lock
pop
jo
pop
adc
lock
orl
xchg
jmp
push
add
clc
scas
xor
mov
sub
or
xchg
int3
dec
in
insl
insl
sub
push
add
or
rcll
jge
icebp
pop
mov
insl
pop
stc
inc
icebp
mov
mov
xor
insl
add
jmp
push
jle
sti
daa
imul
inc
lds
pop
sbb
addb
cmp
inc
addr16
sub
mov
xchg
inc
iret
rorl
fistpl
mov
das
fwait
mov
popa
sti
adc
inc
out
rclb
inc
out
inc
fidivs
ret
fadd
sbb
mov
lahf
jmp
pop
adc
xchg
pop
repnz
xchg
xchg
mov
cmp
ret
dec
inc
sub
scas
enter
adc
xor
insl
pop
adc
inc
hlt
adc
mov
adc
inc
rcl
int3
jo
in
push
mov
cmp
mov
lds
in
into
xchg
sbb
xchg
and
mov
pop
in
pop
call
and
mov
xor
pop
loop
popa
pop
aaa
mov
or
dec
and
mov
rolb
mov
or
mov
out
jl
fdivs
int
xlat
les
hlt
es
pop
mov
sar
ds
subb
gs
mov
xorl
push
mov
adc
mov
into
pop
and
sbb
cld
jns
in
xor
clc
cmp
cmc
cld
xchg
pop
popa
or
push
call
mov
or
testl
loop
push
cmc
sub
mov
shlb
cmpsl
and
add
clc
jno
sub
jbe
xor
ror
mov
popa
mov
gs
jns
push
pop
pop
and
mov
imul
sbb
inc
pop
fwait
loope
cmc
mov
dec
scas
mov
ds
mov
sbb
adc
jmp
cmpsb
mov
and
int3
xchg
push
adc
push
inc
xchg
add
clc
je
in
fildl
push
sti
movsl
mov
sbb
out
mov
push
cmpsb
mov
sbb
fisttpl
movsb
push
or
in
data16
popa
repz
mov
pop
test
mov
dec
add
push
sbb
adc
adc
aas
jmp
pop
arpl
push
xchg
jg
push
pop
hlt
les
pop
lcall
mov
sub
sarl
ljmp
dec
and
iret
adc
int3
or
int
bound
jb
and
out
xlat
imull
cmc
pop
sub
cmpsl
add
sub
pop
sbb
dec
lahf
inc
pop
inc
pusha
lret
scas
sub
movsb
push
and
jo
into
outsb
out
aam
jg
and
sbb
sbb
aam
leave
mov
cwtl
addr16
xchg
test
outsl
adc
into
adc
orl
shrl
sbb
aad
mov
cmp
inc
rolb
mov
notl
pop
mov
loopne
std
fwait
in
test
xor
imul
xchg
test
mov
cmp
fbstp
pop
xchg
imul
sti
pushf
inc
mov
ds
jp
out
icebp
leave
xlat
iret
xchg
out
lahf
xor
cwtl
cmpsb
or
xchg
add
stc
addr16
jg
arpl
jbe
std
jmp
mov
inc
dec
fadds
cld
adc
or
int3
shlb
sti
rcr
test
pop
aad
stos
pop
popa
push
or
add
dec
xor
fcoms
push
lahf
xor
sti
push
push
adc
aad
sbb
sub
sbb
jmp
arpl
pop
rol
mov
imul
insb
into
mov
push
loop
cmp
in
push
cli
lahf
mov
xchg
push
mov
jp
insb
leave
ss
mov
aaa
cmpsl
xchg
test
lret
adc
ds
ret
and
outsb
sub
jle
push
maskmovq
cmp
fstps
mov
movsb
ja
push
adc
in
adc
push
sbb
pop
mov
pop
fdivl
adc
and
cltd
pop
jg
add
xchg
das
lret
fwait
je
imul
xchg
std
imul
int3
mov
pop
sbb
or
test
cwtl
stos
add
jo
imul
pushf
xchg
xchg
dec
dec
cltd
add
mov
mov
inc
ret
bound
xchg
cwtl
ret
jmp
shll
shlb
xchg
sbb
jbe
bound
out
inc
mov
test
mov
ret
cmc
aam
repnz
mov
pusha
sbb
xchg
mov
xor
mov
dec
push
out
sbb
mov
mov
fsubrp
mov
push
inc
dec
cli
push
mov
es
jle
xchg
adc
pop
cli
xchg
push
scas
into
loopne
movsb
dec
xchg
adc
in
lret
addr16
repz
call
popa
scas
in
xchg
mov
xchg
hlt
adc
in
mov
jns
lods
mov
dec
cli
cli
mov
mov
cltd
and
cmp
out
lahf
mov
ds
lret
mov
std
inc
frstor
cltd
mov
fists
sti
loop
fstps
iret
xchg
test
adc
jl
inc
or
mov
pop
xchg
inc
je
rcll
sub
or
and
or
int3
push
outsl
pop
arpl
mov
int
push
jecxz
fs
dec
lea
dec
jp
outsb
inc
mov
out
push
out
mov
mov
scas
fisubrl
push
inc
outsl
fwait
add
scas
leave
out
jns
stos
rorl
inc
xor
xor
inc
jnp
imul
dec
inc
in
dec
sahf
cmp
push
test
ss
jp
or
xor
lcall
lock
ret
jne
in
mov
ljmp
ja
pop
xor
je
int
mov
mov
std
or
add
jns
push
mov
and
mov
xchg
mov
mov
push
out
mov
push
add
sbb
aam
test
push
lcall
in
cli
cltd
sbb
xor
add
in
stos
movsl
xchg
aaa
or
mov
mov
div
add
sbb
es
out
jbe
aam
fs
std
push
jp
mov
and
es
xchg
jle
das
pop
jge
and
mov
cmpsb
mov
push
and
ljmp
loope
sbb
mov
sub
leave
push
outsb
lea
lret
xchg
lds
or
xchg
cmp
into
inc
js
cli
insl
outsb
dec
cld
cmp
jp
scas
adc
lret
inc
pop
sbb
int3
xchg
xchg
add
js
in
jp
fsub
shrl
movsl
lret
leave
int
fs
push
rorb
push
adc
fwait
loop
cmpb
dec
push
loop
mov
sysenter
fists
dec
jno
dec
ja
stos
xlat
cltd
sub
movsl
stc
jmp
iret
test
cltd
dec
sbb
xchg
in
fwait
les
test
lods
mov
push
dec
je
push
pop
xchg
sub
outsb
lcall
int3
xor
mul
jge
dec
mov
test
sub
jmp
aam
pop
mov
jnp
and
in
outsb
push
inc
adc
jecxz
cmp
and
dec
mov
outsb
sahf
popf
scas
xor
or
rcr
xchg
dec
dec
clc
rorb
cmp
sub
incl
and
shr
ret
cmpl
sub
jmp
mov
push
and
stos
les
or
push
cmp
xchg
ficomps
rolb
enter
xor
ss
mov
lret
mov
cmp
xor
push
test
inc
xor
sbbb
xchg
push
inc
mov
cmp
or
jge
push
xchg
fs
dec
imul
cmp
push
lret
aad
call
or
rcrl
fwait
and
sub
aad
arpl
jmp
add
mov
add
stos
iret
pop
cld
xor
popf
loopne
inc
adc
cmc
sahf
mov
push
jg
mov
imul
adc
or
mov
mov
pop
iret
lea
cli
push
mov
xchg
lds
mov
xchg
jp
inc
and
cwtl
icebp
test
dec
lahf
fs
in
lret
shll
jnp
or
shll
leave
mov
cli
fmuls
inc
nop
inc
xor
call
or
lea
nop
mov
sbb
jmp
inc
flds
das
mov
mov
scas
or
movsb
pushf
xchg
int
dec
push
ret
test
jne
jbe
dec
mov
imul
mov
ret
repnz
clc
out
pop
sbb
pusha
lock
pop
jnp
add
mov
push
lea
movsb
jmp
xor
enter
adc
push
test
mov
repz
push
mov
mov
and
inc
or
ss
mov
mov
in
movsl
sbb
or
xchg
stos
mov
and
mov
add
ret
pop
push
repnz
cmpsb
mov
in
cmp
inc
ss
mov
xchg
xlat
adc
mov
movsl
stos
sub
push
sub
scas
cld
fmull
jle
stos
data16
fldcw
inc
js
inc
cmp
lods
stos
pop
int
or
subl
mov
shll
adc
pop
mov
add
sbb
jbe
mov
jle
aaa
scas
xchg
push
movsb
dec
std
cmpsb
dec
cld
jnp
mov
mov
in
dec
inc
fwait
inc
loope
xchg
test
jo
xor
lea
xlat
mov
pop
lahf
jg
adc
rorl
add
aam
shr
fcoml
add
call
jnp
jae
ja
dec
gs
into
pop
and
and
push
dec
subb
cmp
xchg
sub
adcb
test
inc
sub
mov
xchg
jnp
adc
sbb
ljmp
cmp
push
scas
xor
ja
adc
jo
sub
xchg
adc
sbb
xor
cmp
and
lcall
mov
clc
jo
or
or
mov
and
loope
jg
lods
push
xor
pop
loop
cmp
xchg
lods
es
inc
loop
rcrl
sub
mov
cmpsl
add
and
test
mov
pop
ret
scas
jmp
popf
loop
mov
adc
xchg
or
adc
in
dec
adc
inc
sub
cs
stc
test
pop
xchg
in
int3
mov
aaa
push
xor
adc
jge
pop
pop
adc
in
lods
lcall
in
or
f2xm1
cld
cmp
jnp
mov
cmp
js
rolb
jo
mov
lret
pop
adc
fwait
stos
addr16
adc
push
adc
pop
lock
xor
shl
mov
mov
cmpsl
enter
in
inc
dec
cmp
inc
inc
jmp
out
rep
cli
add
push
insb
adc
add
jecxz
pop
and
xchg
cld
sub
aas
mov
mov
push
fstl
jp
jp
mov
lret
add
push
popa
sub
test
pop
jp
int3
in
or
scas
pop
sbb
jnp
shll
hlt
or
jnp
and
je
je
and
aaa
mov
hlt
sahf
sub
aad
faddp
cs
pop
jle
loope
sbbl
insl
ficompl
cltd
push
mov
push
cmp
ret
test
lock
lods
and
add
aas
bound
push
scas
sub
in
xchg
push
add
and
test
add
sahf
sti
xchg
xchg
adc
bound
pop
clc
aaa
xlat
adc
jl
jl
fistpll
outsl
movsb
sahf
test
fsub
pop
mov
or
dec
and
stos
shrl
scas
dec
stos
push
ds
mov
inc
daa
jle
jb
add
hlt
jb
fcomps
mov
out
loop
push
adc
ljmp
jge
divb
mov
jo
cmpl
mov
enter
or
adc
aam
and
fisubl
in
cli
lret
lock
jp
fmull
jmp
cli
mov
push
xchg
jns
pusha
movl
mov
inc
les
ss
in
lods
dec
into
iret
and
cmp
arpl
test
jge
ret
mov
je
jmp
adc
xchg
and
push
push
out
sbb
shrb
les
jo
jns,pn
inc
mov
xchg
dec
enter
adc
fimull
ja
enter
jmp
mov
mov
adcl
push
hlt
sarb
or
pcmpeqb
push
xchg
mov
xor
adc
dec
lret
movsb
mov
sbb
sub
push
fistl
je
dec
jmp
cmp
push
cli
sarl
mov
out
lret
dec
lds
jnp
inc
dec
mov
aaa
jle
pop
roll
inc
jl
xlat
cmc
pop
pop
dec
xor
xchg
inc
ficomps
add
cs
add
jmp
lock
push
mov
jno
mov
pop
adc
sbb
cmp
icebp
sbb
jecxz
shrl
add
push
imul
push
lock
sahf
inc
lret
push
fwait
inc
sahf
jle
mov
adcl
insb
xor
jmp
pop
fstpt
lret
mov
in
lret
xor
int3
stos
dec
stos
xchg
mov
cmpsb
inc
das
pop
mov
pop
daa
cmp
dec
cmpb
imul
fstpt
test
fs
leave
adc
test
mov
mov
or
adcb
in
fldt
std
adc
popf
or
fisubl
shrb
jne
orb
filds
mov
divl
xor
pushf
cmp
test
out
push
adc
push
cmp
cltd
aaa
sti
mov
jl
mov
pop
addl
cltd
mov
jle
rclb
int
in
mov
stc
dec
std
mov
rcl
movsl
fisttpl
xor
out
xchg
xor
rcrb
mov
outsb
fsubl
inc
adc
adc
mov
nop
mov
mov
out
lret
lods
ret
and
sbbb
mov
lret
iret
clc
push
notl
outsb
cltd
lds
stos
sarb
push
xor
pop
mov
fmull
sbbl
idivb
insb
rolb
inc
mov
les
divb
test
aaa
call
scas
and
jne
repnz
mov
mov
pop
dec
loop
shl
pop
inc
imul
lret
add
add
pushf
or
jecxz
lcall
vpunpckhqdq
inc
jmp
mov
call
jns
into
mov
jle
sbb
iret
adc
push
jns,pn
sbb
push
adc
jno
push
xchg
je
dec
roll
stos
leave
lret
cld
les
fisttpll
leave
sbb
jmp
test
loopne
out
data16
dec
fisubrs
call
out
sub
add
cmp
out
hlt
jo
jp
lcall
adc
mov
stos
mull
add
sbb
mov
fcompl
jecxz
add
lea
jmp
push
idivb
jae
idiv
add
mov
cli
cmp
dec
ficoms
mov
mov
sbb
in
adcl
shll
pop
aam
or
cmpsb
movsl
jp
push
in
aas
ja
sub
scas
adc
data16
sub
pavgb
stos
jle
in
mov
dec
ja
lds
es
push
ljmp
loope
mov
cmp
sti
movl
add
jge
fistps
imul
push
pop
inc
and
push
mov
dec
popa
mov
fstcw
inc
lods
xor
leave
fisubrl
aam
mov
add
ljmp
mov
imul
cmp
add
mov
jno
adc
out
dec
in
lss
push
and
mov
fucomi
jl
mov
fistl
es
push
add
jecxz
inc
mov
dec
mov
ficoml
jo
addr16
ret
movsl
iret
test
inc
push
rcll
pop
push
sub
mov
lret
xchg
lret
xchg
mov
dec
cli
out
ljmp
scas
dec
arpl
pop
insl
pushf
ja
pop
movsl
std
cli
loop
xchg
pop
xor
pop
xor
lods
out
xchg
push
mov
and
xchg
add
out
rclb
cmp
or
mov
sub
call
sbb
sbb
push
pop
cld
cli
enter
imul
stos
xor
cs
nop
aam
shr
dec
pop
dec
popa
lea
jmp
fldenv
and
jae
loop
es
add
stos
mov
mov
insb
and
mov
fstps
inc
ret
movsl
push
sub
mov
adc
cs
std
sub
daa
test
in
lret
loope
dec
icebp
or
into
xor
sub
and
push
jg
clc
inc
adc
mov
push
repnz
adc
adcl
mov
lea
aaa
add
mov
mov
daa
sbb
mov
imulb
mov
jo
adc
cmp
arpl
push
lods
cld
cmp
pop
fdivr
cmp
inc
fs
sub
mov
sbb
inc
add
cmovs
hlt
stos
lock
in
push
mov
or
jnp
rorb
xchg
pop
test
out
cmpb
lods
push
mov
hlt
xor
aas
push
or
inc
mov
arpl
xchg
negb
pop
ljmp
xor
xlat
test
mov
dec
repnz
pop
ljmp
xchg
xchg
lret
jecxz
fidivrs
push
push
test
pop
mov
loop
mov
rol
sub
push
data16
jns
mov
lods
push
xchg
inc
push
inc
push
dec
jge
cmp
imul
jne
int
mov
sub
or
sbb
dec
and
mov
adc
cmp
add
xor
cs
xchg
test
gs
xchg
push
push
cmc
loope
inc
imul
dec
inc
test
sub
mov
sbbl
icebp
sub
fnstcw
lahf
adc
mov
out
mov
nop
cmpsb
sub
int
fcomi
fisubrs
mov
push
xlat
inc
psadbw
dec
or
jl
aaa
cli
add
and
xor
sbb
movsb
popa
xchg
jnp
mov
sub
pushf
stos
push
add
jmp
cmc
fildll
adc
push
adc
stos
loope
fwait
mull
nop
or
out
mov
iret
je
mov
enter
ljmp
out
cmp
pop
clc
ret
sub
hlt
push
pop
mov
out
mov
and
dec
sti
notl
lock
jg
imulb
sub
xor
fwait
repnz
jge
mov
mov
test
push
inc
cwtl
das
icebp
or
rcrb
lods
pop
and
push
lea
ret
mov
jnp
dec
call
call
push
lods
xlat
cmp
cltd
sub
jae
push
dec
daa
lret
xchg
int3
jne
cld
pop
popf
mov
ficomps
or
or
pusha
sti
inc
es
mov
mov
leave
cmpsl
inc
mov
push
mov
xchg
test
les
cmp
adc
bound
leave
xchg
in
mov
pop
testb
sub
adc
icebp
in
pushf
pop
ss
movsl
cmp
mov
sub
loopne
dec
adc
js
fsubrl
sti
xchg
ret
imul
aam
inc
adc
inc
mov
fidivs
mov
cld
sub
int3
add
xchg
jge
mov
jb
xor
add
mov
hlt
nop
aaa
cltd
dec
dec
orb
push
das
pop
mov
jge
testl
jl
lock
jl
js
cmp
dec
dec
in
pop
nop
imul
das
mov
xchg
mov
xchg
out
mov
int3
ds
sbb
fildll
push
xor
leave
sbb
in
jp
paddsb
mov
xlat
das
inc
fdivs
stos
fidivs
lods
mov
test
arpl
std
or
sti
jb
mov
cwtl
sbb
and
fnstcw
xor
lods
negb
dec
pop
in
cmp
xorb
test
inc
lea
pop
repnz
stos
cs
out
jb
movsb
jns
stos
incb
and
lock
pushf
mov
sbb
aas
sub
movsb
mov
adc
or
cltd
lods
lods
bound
jne
cmp
sbb
xchg
dec
ljmp
sub
mov
inc
aad
sbb
sbb
xor
cs
lea
in
adc
jge
pop
aad
or
mov
cmpsb
fdivr
aaa
lret
roll
ret
cli
dec
sub
call
adc
fs
mov
outsb
repnz
jne
push
push
jp
adc
sub
mov
nop
and
int
subl
xlat
mov
mov
add
xor
das
icebp
push
pop
cmp
jecxz
cltd
xchg
adc
loope
fnstsw
push
cmp
pop
xchg
mov
je
jle
daa
ret
mov
into
gs
ja
sti
repnz
mov
insl
sahf
mov
rol
es
xchg
fwait
cwtl
aas
push
push
mov
and
or
jecxz
divb
jo
cmp
dec
xlat
aaa
jns
pop
sub
mov
pop
jo
mov
or
dec
mov
lods
xchg
dec
or
inc
sbb
cwtl
pop
aas
mov
pusha
imul
pusha
and
jl
adc
adc
xor
sub
mov
pop
sbbb
xchg
dec
insl
test
icebp
pop
lods
xchg
subb
xchg
mov
aad
inc
or
iret
pop
loop
cwtl
icebp
fcomp
sbb
fbstp
jae
adc
adc
ficompl
mov
sub
arpl
imul
loop
adc
mov
fsts
mov
addr16
or
and
jp
psubw
frndint
hlt
insl
xchg
and
stc
pop
and
rcr
inc
test
push
std
xor
dec
adc
sbb
jae
shll
rcll
xchg
add
xchg
prefetchnta
enter
insl
jae
dec
sbb
or
loope
dec
dec
xchg
dec
mulb
fdivrp
mov
cmp
in
jo
cmp
push
cmp
inc
arpl
out
inc
aas
mov
insl
out
ds
insl
cmc
movsb
in
mov
jbe
hlt
dec
roll
std
dec
xchg
out
fnstenv
repz
test
xor
call
lret
jne
add
int
sbb
loope
xorb
and
sbb
mov
push
pop
and
arpl
add
inc
imul
and
add
xchg
and
fidivrl
sub
fcmovu
movsb
fnstsw
inc
jg
cs
testb
enter
and
mov
int3
inc
push
push
pusha
add
mov
bound
mov
mov
testb
add
dec
std
fstpl
loope
icebp
inc
cmp
lods
mov
out
sets
add
fisubs
mov
xor
or
int
push
mov
adc
out
pop
cmc
test
mov
fs
in
xor
test
sbb
aaa
xchg
ja
ds
pop
cmp
or
pop
push
sti
movsb
movb
push
scas
nop
lea
xorl
sub
ficoml
adc
mov
repz
icebp
mov
ret
stos
lods
inc
daa
ja
aaa
add
push
mov
xchg
lds
sbb
sub
mov
mov
in
int
imul
into
push
lahf
test
dec
sub
pop
push
inc
xchg
js
add
and
arpl
shlb
push
mov
roll
ret
jae
loope
jg
pop
mov
xchg
pop
jmp
mov
cli
inc
push
adc
icebp
mov
jge
in
mov
aas
stc
xor
fidivrs
test
xchg
dec
push
xor
lods
and
repnz
jbe
int
lock
test
lret
mov
sbb
adc
cmp
xchg
push
dec
and
xlat
and
fimuls
mov
xchg
add
jmp
stc
loopne
clc
jo
aas
push
int3
mov
pop
push
cmp
pop
mov
adc
xlat
andb
and
je
jecxz
fdivs
aad
push
ja
enter
pop
and
inc
mov
mov
push
push
icebp
icebp
jno
pop
sbb
js
mov
dec
imul
mov
xchg
push
lret
ret
mov
mov
js
mov
mov
loop
roll
shlb
jle
inc
fnstcw
nop
imul
xorb
push
ljmp
xlat
sahf
arpl
jb
sti
or
repnz
add
shlb
mov
sbb
dec
in
add
add
int
inc
jo
jle
inc
or
sub
into
jp
test
or
call
pusha
lea
sti
fstpl
mov
mov
xor
and
add
cli
push
mov
sbb
sarl
lret
fildl
pop
inc
mov
aam
inc
arpl
or
fldcw
ljmp
daa
aaa
xor
in
and
mov
cmp
mov
sahf
mov
pop
sub
mov
ret
das
mov
xor
out
push
xchg
xor
sub
dec
xchg
mov
xor
nop
fldt
mul
mov
into
push
lock
jae
ret
or
mov
sbb
enter
inc
hlt
notb
lcall
add
pop
sub
mov
lock
fcmovnbe
shl
and
aam
popf
or
jnp
icebp
test
inc
out
or
pop
inc
ds
adc
loope
divl
dec
and
stc
adc
std
mov
aaa
in
xor
icebp
mov
push
xchg
clc
adc
push
test
dec
mov
and
ds
inc
xchg
pushf
sbb
mov
rcl
or
cmp
in
fmull
scas
pusha
sub
adc
in
push
xchg
jne
dec
loopne
jp
repnz
pop
in
mov
sub
mov
pop
aam
inc
out
adc
mov
call
lods
stos
push
mov
xor
and
sbb
jle
ja
push
and
add
pop
sahf
or
popa
push
sbbl
mov
push
add
push
push
test
mov
mov
xorl
adc
xchg
aas
inc
sub
imul
lahf
push
add
sub
loope
hlt
cmp
xchg
adc
mov
or
push
or
ljmp
pop
movsb
repnz
adcb
call
mov
mov
xchg
fnstenv
jnp
es
mov
sub
hlt
pop
inc
je
mov
or
jg
pop
fsubrs
sbb
stc
jle
mov
test
cwtl
and
push
pop
jbe
add
sarb
jle
sbb
int
cmpsl
lcall
jp
pushf
pop
pop
add
loopne
jns
or
add
lret
bound
aad
lea
inc
cld
movsl
lods
mov
cmp
ljmp
mov
sub
push
fwait
xchg
out
xchg
les
cmp
stos
cmc
out
xlat
pop
mov
inc
sub
mov
jne
lahf
push
imul
enter
push
hlt
outsb
cmp
aam
mov
shll
pop
testl
dec
je
popf
push
mov
enter
icebp
xchg
les
in
mov
stc
leave
ds
xchg
mov
cmpb
gs
mov
icebp
pusha
push
push
ljmp
gs
pop
test
inc
or
and
lea
cmp
pop
push
xor
add
lods
sbb
inc
xor
clc
xlat
stc
pop
push
pop
cmp
dec
mov
sbb
lods
repnz
mov
lret
pop
or
sub
mov
xchg
shrl
lcall
cmp
ret
fs
cmpsb
inc
add
shr
jb
lods
mov
mov
clc
negb
aad
movsb
adc
pop
fbld
sbb
inc
pushf
sbb
lds
add
dec
cmp
xchg
orl
adc
fs
pop
dec
addb
dec
inc
aad
push
inc
inc
push
lods
mov
push
shlb
lock
fldenv
in
fildl
add
pop
test
mov
hlt
sbb
push
stos
add
push
xor
daa
dec
out
xchg
lret
test
out
pop
fwait
je
xchg
inc
cmc
aad
mov
cmpsb
notb
add
cwtl
mov
faddl
ds
int
sub
cltd
incb
shrl
cmp
notb
movsb
jp
cmp
push
xor
xor
inc
sub
sub
dec
and
cltd
sarl
sub
xorb
aam
fiadds
int3
test
add
scas
inc
jmp
mov
xchg
stos
dec
test
test
adc
cmp
lret
mov
cmc
lds
sti
push
cmp
repnz
mov
sub
pop
sub
pop
out
mov
repnz
push
lods
iret
divl
cmp
mov
es
mov
cmpsb
ja
dec
gs
das
mov
dec
inc
data16
mov
sbbb
push
sub
iret
stc
jae
aam
ficoml
sub
xchg
out
inc
xchg
cmp
imul
adc
push
sub
add
aaa
negl
scas
cmc
ljmp
aad
clc
es
add
inc
pop
cmc
insl
mov
fxch
push
fcmove
sub
pop
std
repz
inc
mov
mov
dec
cs
shrb
shll
xor
xchg
xchg
lahf
jbe
mov
mov
mov
pusha
addr16
pop
bound
in
push
out
cmp
outsb
mov
add
cmpsb
jecxz
mov
stos
or
shl
push
int3
add
or
cltd
dec
add
push
xchg
mov
fdivl
ret
push
mov
out
repz
lea
fldcw
outsb
xchg
mov
xchg
fbld
fisubl
outsl
jnp
pusha
mov
cmp
adc
arpl
test
sbbb
sbb
or
aaa
mov
pop
xor
or
mov
addl
lcall
cwtl
jl
mov
sbb
inc
fidivl
js
push
xor
cmp
pop
addr16
nop
xchg
push
mov
mov
cmpsb
sbb
add
rcrl
adc
lcall
xlat
sub
sbb
jno
mov
pop
mov
jbe
fdiv
and
ficoml
or
cld
mov
mov
dec
fwait
popa
and
aam
pop
mov
jbe
clc
popa
xor
fistps
xchg
nop
lods
lcall
daa
adc
inc
imul
mov
enter
add
mov
data16
add
mov
inc
sbb
loop
dec
mov
rorl
dec
jmp
and
dec
mov
je
or
xor
xor
push
xlat
fnsave
fiaddl
bts
push
movsb
push
sub
sub
adc
push
jns
ds
sbb
and
in
fldl
addb
hlt
jmp
push
sarl
adc
mov
dec
outsb
push
cmc
repz
shl
and
fsts
test
les
cld
dec
pop
push
scas
mov
lahf
repz
out
jo
in
cwtl
cmpl
inc
hlt
hlt
add
pop
je
jle
mov
inc
push
je
popa
lahf
loopne
subb
cld
das
insb
push
push
in
cmpsl
ret
out
rcr
dec
sub
push
pop
add
rorb
dec
lret
jmp
push
add
jl
xchg
das
inc
and
jno
jae
inc
sbb
mov
dec
inc
pop
or
bound
adc
and
data16
pop
xchg
lcall
push
loope
sbb
insl
addr16
or
std
mov
adcl
sahf
or
inc
jno
or
nop
dec
sub
adcb
cmc
test
pop
les
test
pop
nop
mov
popf
push
cmc
arpl
ss
adc
retw
out
mov
push
push
test
pop
and
push
aas
outsb
and
mov
sbb
push
sbbb
addr16
scas
cmpsb
movhps
subb
push
fcompl
ljmp
mov
xor
add
sub
leave
jmp
xor
mov
js
shrl
cld
cli
push
and
cli
inc
test
out
mov
fsubrl
mov
js
add
jmp
mov
mov
pop
add
addl
push
popa
push
jo
mov
stos
pusha
std
xor
popa
fcmovbe
push
cmp
mov
das
pop
ret
mov
ficomps
aad
lock
repnz
enter
jns
js
push
inc
in
dec
shlb
rcrb
loop
aad
mov
std
sub
in
pushf
imull
lods
call
pop
mov
cmp
sub
cmp
cltd
inc
sbb
cwtl
pop
insl
pop
dec
sub
dec
fstpt
lcall
jb
adc
int3
jmp
adc
jne
pop
mov
test
fadds
cmpsb
mov
mov
arpl
ret
sub
dec
rcrb
xchg
js
inc
xchg
inc
pop
pop
vmwrite
dec
cwtl
cmp
out
push
or
push
mov
pop
add
lret
jo
mov
mov
subb
sahf
xchg
stc
adc
dec
cmpsl
jns
jmp
fstpl
ljmp
jle
enter
push
dec
mov
fisttpl
push
push
mov
in
pop
std
in
push
sbb
and
and
and
in
inc
push
and
and
jae
sti
adc
bound
fldl
and
fisubrl
mov
mov
fadd
sub
imul
test
adc
dec
inc
roll
or
jno
sub
jbe
inc
push
fistl
stos
jnp
pop
popa
jge
outsb
sbb
sbb
jmp
ficoms
in
ficoml
sahf
es
xor
mov
pusha
jge
cmp
imul
cmp
jl
cld
mov
addl
and
cmp
sbb
nop
jecxz
inc
es
dec
stc
mov
pop
push
mov
neg
fcomi
dec
lods
pop
xor
push
and
fwait
cmpb
cmp
movlps
xorl
rol
mov
dec
rolb
lahf
cmp
or
inc
loopne
or
mov
cmovno
xor
fistl
sub
push
mov
mov
cmp
xchg
in
mov
leave
jle
push
int
push
push
ficompl
popa
fs
pop
fwait
roll
mov
vxorps
mov
popa
pop
movsb
pop
mov
jnp
jo
xor
loope
push
lds
test
jp
adc
stc
inc
xchg
out
cmp
test
add
lea
sub
push
cmpsl
insb
cmp
mov
mov
or
mov
jbe
adcb
insl
and
sbb
pop
add
mov
inc
jns
or
mov
pop
mov
mov
aam
mov
call
das
pop
push
push
sahf
push
jecxz
fwait
sub
and
xchg
pop
imul
mov
call
fcmove
out
lret
push
xor
pop
sbb
cld
pop
jle
rolb
imul
dec
jmp
xor
adc
out
loope
loope
fiaddl
dec
or
jnp
push
mov
std
mov
lds
add
int3
adc
push
es
mov
jb
lock
dec
lcall
hlt
aad
push
in
mov
les
jl
stc
mov
mov
popf
cmp
shll
call
stos
dec
les
push
dec
loop
int
lret
sub
test
pop
xchg
or
adc
daa
fistps
push
fldl
sbb
aam
addr16
adc
mov
dec
lods
adc
mov
sahf
push
dec
sbb
inc
nop
ljmp
jle
xchg
mull
inc
mov
mov
pop
jge
mov
outsb
xor
adc
iret
cmp
push
repz
ljmp
lahf
or
mov
aad
cld
out
sbb
mov
incb
push
jno
sbb
shlb
or
cmpsb
add
push
lods
push
sbb
and
mov
pop
loop
repnz
xchg
clc
mov
out
in
pusha
inc
icebp
adc
fnsave
add
call
mov
mov
add
push
ljmp
mov
fisubrs
jle
push
ja
xor
xor
mov
test
cli
cltd
push
sub
pop
lea
mov
stc
mov
and
stos
lods
xor
xlat
add
jle
mov
and
pop
xchg
hlt
fists
jmp
mov
xor
cli
mov
fwait
into
vprotq
jmp
in
xor
stos
test
pop
rcrb
dec
call
xchg
sarb
mov
les
lcall
inc
push
adc
xor
inc
xor
stc
test
cs
fidivl
xor
mov
pop
mov
push
cmpsb
outsl
rorb
sbb
icebp
clc
outsb
das
dec
jmp
jno
mov
xlat
call
and
rcll
enter
or
push
or
fidivl
push
arpl
sbbb
jae
rcl
movsb
cs
inc
xor
push
dec
test
inc
stc
cmp
push
add
mov
jo
lret
test
dec
je
mov
add
pusha
mov
in
push
and
push
sbb
test
out
jb
and
ret
popl
fwait
push
lods
cltd
sbb
adc
scas
arpl
scas
sbb
mov
imul
sub
rep
int3
cmp
inc
fmull
add
xchg
fwait
dec
in
xlat
andl
pop
jecxz
inc
push
jnp
js
cmp
cwtl
jo
adc
lock
int3
or
xor
add
divb
pusha
cmp
push
pop
xor
sbb
xchg
xchg
gs
or
pusha
movl
and
mov
ss
negl
sub
rcrl
aas
out
stc
inc
adc
push
movsb
pop
sub
inc
cmpsb
pop
inc
subl
and
scas
fisttpl
push
mov
pop
jecxz
mov
ret
pop
push
jmp
leave
std
ror
add
aad
sub
and
or
mov
inc
cmpsb
jle
sub
and
pusha
adc
pop
fistl
and
fs
mov
xor
adc
nop
push
mov
pop
inc
fnsave
sbb
inc
imul
adc
aaa
lret
pop
inc
in
iret
push
insb
pop
jno
mul
out
cmp
dec
negb
mov
cmpsl
mov
cltd
mov
sub
insb
pop
dec
pop
or
fmul
and
ret
scas
mov
sub
je
jge
ss
data16
mov
xor
stos
sub
pop
loopne
mov
jnp
mov
mov
fisttps
fsubp
mov
mov
mov
adc
xchg
push
fcompl
xor
mov
add
cmp
aaa
adc
jecxz
mov
cmp
idivb
push
ret
lods
sarb
jle
sahf
inc
sbbl
add
jns
xchg
test
jno
in
cld
daa
fs
sub
mov
fidivrl
out
cmp
test
sbb
sub
stc
loop
xchg
push
sbb
add
fs
lahf
mov
mov
push
adc
mov
and
icebp
in
xchg
cmp
dec
jne
xor
push
sub
cmp
ret
mov
cmp
fwait
or
cltd
hlt
test
rclb
mov
jo
and
add
lcall
cmc
adc
lcall
lcall
lcall
adc
inc
sbb
adc
addr16
fdiv
mov
push
pop
pop
push
fs
fadd
lds
pop
pop
fisubrs
sbb
lea
xchg
int
xchg
lcall
and
lods
push
sub
inc
idiv
mov
xor
push
cmp
cmp
or
jns
dec
idiv
xchg
sub
jo
mov
mov
frstor
popa
enter
rolb
jecxz
mov
cmp
mov
and
inc
rcrb
mov
jnp
jp,pt
xchg
icebp
cs
adc
out
sbb
test
mov
push
push
aas
mov
fdivrs
enter
sbb
cmp
je
fld
or
aas
mov
cld
leave
adc
add
and
mov
lret
call
fsubs
xchg
movsb
xchg
aam
gs
aad
xlat
rcl
or
decb
push
and
mov
push
lds
pop
nop
ror
xchg
xor
sahf
mov
mov
push
cwtl
push
iret
mov
cltd
jb
pusha
push
mov
shlb
dec
icebp
and
mov
cmp
imul
xor
xor
fisttps
sub
cmp
mov
lcall
inc
xor
lock
cmp
mov
es
mov
pop
mov
mov
mov
and
lret
jno
stc
test
mov
mov
adc
pop
out
outsl
jae
mov
outsb
jno
sub
cmpsl
jnp
insl
aas
popa
or
pop
in
repnz
jmp
and
sbb
in
dec
sbb
or
mov
mov
cltd
mov
and
adc
mov
dec
adc
xchg
and
loope
addr16
jg
ja
dec
lods
jmp
movsb
xchg
stc
fstps
je
sub
push
mov
mov
lahf
add
in
incl
bound
rorb
out
push
xchg
dec
in
lods
sub
mov
and
and
lods
sbb
push
imul
cmp
flds
out
idivl
inc
loopne
dec
insb
arpl
push
addl
and
mov
pop
add
movsl
or
ds
jl
das
add
and
push
mov
adc
lahf
les
dec
mov
sbbb
lods
sbb
iret
inc
mov
adc
loopne
mov
pushf
adc
iret
pusha
lods
cli
les
sti
mov
cmp
loopne
and
push
push
js
repz
test
lcall
or
adc
and
cmp
push
fwait
jmp
jb
push
fnstenv
jne
loopne
loopne
jg
jno
dec
add
inc
andl
cmp
xlat
lds
ds
mov
subb
fdivs
repz
xor
setg
sbb
jne
jb
sub
outsl
add
into
loopne
cld
lcall
test
fldenv
out
sbb
mov
ret
push
outsb
data16
cmp
pop
mov
add
mov
push
pop
shll
scas
mov
mov
bnd
mov
sub
scas
imul
and
mov
inc
mov
test
js
shll
push
push
cltd
sub
ja
in
push
pop
pop
fwait
scas
aam
mov
orb
pop
in
xchg
mov
mov
ljmp
aaa
imul
std
outsl
xchg
lcall
and
xor
or
fdivrs
add
cmpsb
pop
mov
ljmp
cld
cmpsl
loope
test
test
shr
and
sub
jg
pop
add
clc
pop
xor
mov
jge
mov
fidivrl
jmp
out
jle
cmp
arpl
mov
insl
leave
ret
in
cmc
or
in
insl
mov
cltd
lahf
sbb
xchg
pop
das
dec
outsb
fdiv
iret
loope
sbb
dec
inc
mov
pop
sbb
test
pop
addl
repz
fbstp
pop
cld
mov
pop
mov
add
ljmp
in
inc
adc
daa
test
jmp
mov
pop
pop
jl
jecxz
add
out
cmpsl
jbe
ret
mov
je
mov
data16
jno
push
je
mov
pop
pushf
cltd
inc
jb
cs
jno
mov
inc
std
testb
jo
sub
adc
clc
aam
xor
xchg
mov
mov
out
insb
movsl
pop
xchg
fdivr
jns
pop
push
pop
rorb
add
pop
ljmp
push
lahf
dec
movsb
dec
stc
xor
imul
adc
mov
aas
and
es
mov
and
sub
fwait
or
iret
inc
fmull
ljmp
sub
mov
and
add
pop
dec
nop
iret
nop
sbb
sub
aad
mov
fdivrs
sub
lock
into
test
aas
push
clc
out
fstpt
mov
pop
lods
test
pop
cmp
pusha
pop
clc
stc
out
xchg
inc
sub
add
mov
pop
repz
lods
or
xor
push
and
or
xchg
mov
mov
push
rorl
add
mov
loop
xor
push
fld
or
fists
ljmp
pop
loop
sbb
or
notb
js
sub
dec
sub
outsb
fsts
in
xor
das
push
sub
sub
dec
push
movsl
inc
sarb
call
sub
mov
pop
out
mov
cmp
cld
fucomi
adc
fimull
jb
daa
outsl
scas
add
cmc
fistl
xchg
in
out
mov
pop
icebp
or
insl
ficoml
arpl
add
cld
mov
xchg
pop
daa
xchg
mov
jmp
cmp
mov
adc
dec
pop
out
lock
or
popa
xchg
pop
jo
xchg
cli
lcall
mov
bound
pop
movsb
adc
sub
push
cmpb
lret
inc
call
pop
fcoms
lock
and
iret
mov
addl
inc
jnp
lds
mov
aad
or
leave
jae
into
fcomps
push
addr16
sub
adc
imul
loopne
into
fwait
jg
mov
jno
push
inc
jl
inc
mov
shlb
pop
rclb
dec
cmp
adc
pop
mov
cmp
sbb
mov
data16
pushf
push
and
hlt
and
or
aas
orl
mov
fs
ljmp
mov
mov
lahf
inc
or
outsb
cmc
xchg
xor
inc
pop
pop
pop
andl
mov
cmp
cmp
cmpsb
faddp
js
dec
arpl
sbbl
push
sub
cmp
mov
cli
data16
mov
and
enter
xchg
sti
test
cmp
lock
shl
iret
cld
test
mov
outsl
ljmp
popf
flds
loop
jge
leave
inc
jne
mov
arpl
mov
sub
push
ret
dec
imul
mov
imul
scas
push
nop
mov
enter
dec
jl
aas
lds
bound
add
dec
insl
stos
dec
bound
add
jnp
loop
data16
sbb
sbb
push
int3
jge
push
gs
lods
push
push
scas
or
push
mov
aaa
push
hlt
push
loop
dec
mov
iret
daa
dec
in
push
push
pop
scas
xor
lret
mov
fnstenv
fwait
add
jne
or
into
adc
cmpsl
jg
mov
outsl
jo
fcmovnu
jne
arpl
mov
lret
mov
lock
insb
imul
popa
scas
rcl
lcall
shrl
and
add
pop
mov
mov
rorl
stos
addr16
dec
cltd
fistl
loop
xor
frstor
aam
lret
lea
inc
sahf
cmpsb
nop
sahf
lods
into
hlt
jno
pop
cmp
pushf
and
xor
and
inc
mov
jno
add
and
fstpl
test
fistps
xor
dec
lret
loope
jnp
rclb
fidivrs
adc
icebp
pop
aam
ja
lcall
popf
repnz
stos
test
inc
adc
into
sub
mov
lret
push
inc
xchg
fs
pop
jp
aaa
inc
leave
fistps
daa
movsb
fiaddl
ja
movb
test
in
rorl
jne
movsl
stos
scas
ret
sar
cmc
sahf
testb
jb
mov
mov
outsl
xchg
jo
mov
mov
push
fistl
and
ss
xchg
xchg
lods
int3
jge
nop
adc
ret
cs
stc
xchg
loop
mov
adc
dec
push
fwait
dec
mov
xor
pmulhw
push
push
negb
mov
lods
adc
cmp
call
imul
cli
jmp
sbb
jp
mov
jbe
addb
fdivrl
mov
cwtl
stos
and
rcl
cmp
or
std
cli
mov
stos
push
imul
or
nop
jl
or
dec
popa
rcrb
lods
pop
cwtl
lahf
push
push
dec
dec
imull
cmp
jle
lds
push
push
mov
icebp
xchg
fimuls
ljmp
sub
div
xchg
mov
xlat
inc
mov
test
sub
jo
std
jno
int
push
mov
push
mov
mov
sub
sbb
mov
mov
adc
pusha
std
lds
xlat
sbb
es
jne
pop
dec
cmp
pop
jmp
xor
mov
sub
push
mov
pop
cld
xor
add
pop
insl
jl
movzbl
cmp
fwait
into
fnstsw
mov
xor
icebp
sbb
cmp
jl
and
hlt
ds
sbb
inc
imul
pop
dec
iret
enter
sbb
mov
sahf
and
sub
and
jg
mov
popa
std
mov
sti
mov
insb
adc
mov
fisttpll
jns
std
mov
dec
mov
orl
pop
mov
xor
rolb
xchg
fildll
ljmp
mov
hlt
push
lods
loop
cmpl
test
scas
or
pop
cli
mov
jl
repz
aas
cwtl
loopne
test
lcall
pusha
jecxz
int3
loope
inc
mov
mov
lea
lods
push
pop
mov
or
inc
test
mov
popf
leave
pop
dec
add
jg
push
or
lahf
sub
sbb
push
lret
int
idivb
mov
imul
adc
insl
pop
fdivrs
leave
add
mov
aas
nop
insl
sub
sbb
sarl
stc
sub
les
mov
pusha
fmull
dec
pop
movsb
cld
outsb
push
pop
ss
int
arpl
dec
repnz
lahf
ljmp
in
pop
mov
mov
jo
bndstx
add
cmc
mov
xchg
xor
movsl
out
ret
out
popa
in
rcll
ljmp
in
hlt
push
rolb
xor
mov
repnz
ja
push
into
jo
cs
cld
mov
lock
stc
inc
test
add
dec
cwtl
stos
arpl
push
or
dec
xor
mov
xchg
mov
xchg
fs
sub
sub
cmp
rol
adc
mov
repnz
scas
cltd
push
test
and
inc
xor
insl
fdivrl
push
jecxz
mov
iret
cmp
push
dec
mov
jbe
sub
cwtl
mov
je
xchg
inc
and
mov
repnz
pop
mov
call
daa
ds
sbb
shl
mov
dec
lock
push
add
in
iret
mov
inc
into
fdivp
push
stos
dec
test
repnz
daa
cmp
xor
mov
nop
mov
or
adc
xlat
cld
fcmovu
xor
mov
cli
mov
sbb
adc
or
jae
sahf
jns
jo
rcrb
mov
xchg
jl
rcll
lcall
and
insb
arpl
mov
pop
bound
cld
lahf
in
shrb
lock
loopne
mov
mov
xchg
mov
pop
and
pop
aaa
push
push
add
inc
cmp
js
pop
and
sub
add
test
pop
mov
sahf
or
cmpsb
and
in
pop
mov
outsb
push
add
leave
testl
bound
cmp
enter
incl
insl
mov
out
sbb
and
es
out
popa
fs
jl
sub
xor
sub
jecxz
dec
stos
arpl
sub
pop
push
sahf
leave
sub
cs
or
lea
fisttps
mov
fdivrl
push
out
jbe
sub
inc
adc
pop
and
gs
aas
sub
fimuls
testl
adc
addr16
jbe
fsubrl
and
mov
aas
jo
ljmp
insb
ds
jns
lods
mov
ja
add
mov
push
icebp
mov
in
call
lds
jl
pop
xchg
call
xor
add
sti
cmp
stos
sahf
int
call
mov
orl
shl
stc
mov
xchg
and
imul
mov
mov
ss
fwait
clc
cmc
adc
xchg
lods
inc
mov
stos
cmp
mov
cwtl
and
shlb
insl
ljmp
test
lahf
sub
sbb
xor
push
out
add
pop
add
aaa
mov
or
stos
mov
cli
subb
sbb
incl
mov
sub
inc
xor
or
cmpsl
xchg
sub
cmp
or
lds
or
xchg
add
testb
push
mov
push
add
or
mov
pop
out
xchg
iret
jnp
xor
dec
daa
push
dec
mov
shlb
into
inc
iret
mov
push
repnz
jmp
xchg
or
test
cmpsl
dec
jo
lods
mov
mov
fdivrs
test
push
mov
and
ret
lret
push
testb
je
jno
scas
cs
div
inc
adc
icebp
mov
jne
leave
test
out
jae
xor
ss
ljmp
aam
imul
and
lods
lods
dec
push
mov
push
xchg
jle
insb
push
dec
cmp
or
or
in
inc
add
sti
or
cmpsb
push
loopne
sti
sbb
and
cmp
rcll
fstpt
aaa
movb
es
pop
lods
aam
popf
dec
loop
in
hlt
into
std
push
in
je
roll
pop
repz
fcmovnu
pop
and
sti
int3
or
popa
aaa
adc
rol
aam
push
fsubrl
mov
mov
dec
cmp
and
data16
pop
negb
lds
jge
stos
xchg
or
jnp
roll
lock
fs
loope
notl
out
inc
xor
mov
jbe
js
rcrb
ljmp
push
mov
xlat
loop
enter
dec
pop
sbb
out
mov
pop
xor
inc
push
jb
mov
cli
cld
lea
xor
push
lret
and
mov
adc
outsl
sarb
mov
fcompl
lds
or
jg
adc
stos
mov
dec
cmp
loop
repnz
in
mov
dec
mov
mov
popa
inc
int
or
test
or
inc
dec
in
sbb
jg
ret
push
nop
faddl
clc
mov
sbb
mov
lcall
test
pushf
sbb
mov
pop
icebp
sbb
or
int3
jp
roll
jp
mov
sub
jae
scas
fsts
inc
inc
loop
out
insl
jmp
loopne
inc
adc
xchg
lods
test
andl
mov
add
in
jae
jno
scas
jnp
shll
ret
nop
xchg
test
mov
sbb
mov
outsl
mov
push
aaa
shr
ret
pop
lods
jbe
andb
jl
lock
les
cmpsl
shlb
pop
out
outsl
std
xchg
dec
cld
test
sub
mov
daa
movsb
into
mov
jnp
pop
add
fcompl
and
jno
xlat
inc
xor
sahf
in
xlat
sbb
aaa
aam
mov
pop
mov
out
rorl
mov
int
std
bndldx
or
loop
dec
stos
int
sti
mov
and
cmp
dec
dec
test
inc
mov
pushf
mov
repz
loop
push
std
rclb
xchg
pop
lods
shrb
repz
mov
and
cmp
jae
or
inc
mov
cli
push
push
test
mov
ss
es
xor
fcmovne
movsb
into
icebp
addr16
inc
mov
dec
cmpb
mov
sar
cmpsl
shlb
xchg
movsb
cwtl
xchg
xchg
xchg
mov
jo
pop
and
add
insl
jbe
repnz
mov
in
jo
jp
cld
push
xchg
jge
sarb
add
insb
cli
in
sub
bound
imul
ljmp
and
and
dec
into
add
inc
out
outsl
and
loopne
es
push
sbbl
fs
into
das
pop
mov
cmp
add
movsl
rcrl
xchg
xchg
outsl
imul
in
inc
sbb
lock
push
mov
sub
cmp
dec
fistps
add
add
sub
adc
xlat
rclb
lret
test
pop
pop
add
lds
jne
cmp
mov
or
aam
cltd
sbb
mov
dec
jle
cltd
pop
mov
mov
jno
sub
or
lds
fwait
rcrb
and
xlat
or
leave
pop
lahf
and
push
dec
xor
sbb
je
pop
ret
sub
and
jo
cmp
xchg
sti
data16
or
bound
rolb
data16
or
jb
ret
xchg
mov
sub
cmp
cltd
scas
lock
xor
pushf
add
imul
lret
pop
stc
xchg
mov
mov
cmp
iret
cmpb
fcmovne
mov
lret
cmp
rorb
xor
mov
dec
ds
jo
lret
sub
out
xchg
push
fisttpll
and
jae
jne
dec
js
mov
jg
sbb
jle
sub
pmulhuw
mov
add
sub
add
xor
pop
faddl
inc
insl
psubsw
cmp
out
add
inc
ja
cvtps2pi
xor
dec
jg
call
je
cmp
and
jne
xchg
mov
cli
xchg
icebp
sub
dec
or
hlt
in
std
or
out
xor
stc
dec
mov
ss
mov
jnp
or
aad
jne
xchg
jne
mov
mov
xlat
out
out
clc
dec
int3
sub
mov
dec
sbb
test
sub
lods
shll
xchg
test
test
ret
loope
inc
sub
daa
xor
sbb
sub
je
xor
jno
sbb
jno
rcr
jge
in
out
jbe
mov
fwait
and
inc
es
sbbb
cwtl
add
push
dec
repnz
movb
aaa
mov
dec
shrb
or
leave
jo
push
xchg
mov
sbb
movsl
pop
jae
lods
repnz
jle
xor
icebp
in
scas
xchg
xchg
and
push
cwtl
repnz
mov
xor
lcall
es
roll
mov
jae
and
inc
cltd
xlat
into
or
push
dec
xchg
add
adc
mov
push
decl
mov
adc
daa
scas
mov
cmp
cld
into
xor
mov
jo
adc
or
andl
sti
mov
in
xchg
mov
lret
cwtl
xchg
push
mov
roll
popf
pop
fs
mov
mov
aas
orb
push
aad
adc
pop
stos
sbb
inc
nop
rcr
jbe
push
push
jo
pop
mov
fsubrs
aas
pop
pop
out
repz
test
mov
jb
cmp
dec
mov
rcrl
add
mov
popa
adc
xchg
push
xchg
das
sub
or
push
sub
xchg
sub
fisubl
test
mov
sub
enter
push
aas
in
sbb
cmpsb
jl
push
sub
mov
psubq
and
and
je
std
dec
jnp
pop
arpl
sbb
add
mov
int3
lods
xchg
or
add
adc
jbe
push
popa
mov
scas
and
pop
adc
insl
dec
add
sub
inc
mov
cmp
dec
stos
dec
test
sbb
js
xlat
jae
fistpll
hlt
loope
pop
push
loope
inc
mov
fst
add
mov
cld
dec
xchg
data16
lahf
clc
aaa
and
adc
fisttpl
fwait
enter
xor
ja
add
nop
adc
inc
imul
add
pusha
pop
jmp
loopne
int
fisubl
das
jmp
sub
shlb
addr16
outsl
imul
add
sbb
mov
mov
jecxz
cmp
shl
dec
or
aad
xor
mov
mov
xchg
pop
jne
divl
cltd
dec
pushf
sub
icebp
add
mov
nop
mov
test
ljmp
pop
inc
repz
leave
cli
xchg
sub
imul
sbb
popf
jns
mov
in
push
or
mov
pop
xchg
cli
push
cmp
sub
cli
jb
pushf
mov
jp
sub
iret
lods
push
dec
stc
mov
or
mov
adc
insb
movsl
cwtl
addr16
jp
jle
fs
mov
xlat
add
pushf
adc
ljmp
lret
adcl
test
mov
movsl
ds
movsb
add
cmp
pop
loop
push
int
mov
mov
xlat
xor
arpl
inc
test
sbb
and
lock
jp
loope
xchg
jnp
sub
test
ja
jbe
je
addr16
rorl
cmc
xlat
mov
xrelease
clc
ljmp
mov
push
addr16
fisttps
loopne
outsl
subl
in
fistpll
pop
sbb
loop
and
iret
cs
jg
aaa
mov
mov
inc
lock
mov
daa
lret
mov
jbe
push
loope
das
push
add
stos
inc
aas
mov
mov
mov
sub
fistl
bnd
and
cmp
bound
daa
and
test
or
mov
sub
dec
pop
out
popl
test
stc
adc
add
leave
stc
aas
or
in
aas
outsl
stos
push
shrb
lea
popf
adc
adc
aad
sub
leave
call
cmp
dec
in
icebp
insb
fmulp
out
mov
xchg
mov
mov
daa
jne
push
jae
mov
or
mov
in
pop
inc
pop
cmpsb
into
jno
add
mov
adc
fisttpll
pop
pop
popa
stc
xchg
subb
adc
mov
stos
clc
mov
bnd
add
xchg
out
test
into
test
shlb
xchg
mov
inc
and
xchg
or
subl
xchg
imul
adc
push
stc
pushf
rcr
in
and
sbb
movsl
mov
sti
push
sub
cmpsl
cmpsl
lea
mov
cmp
in
dec
xchg
adc
cmp
mov
out
lret
jbe
in
pop
out
inc
xor
xor
mov
out
int
pop
mov
int3
add
js
xchg
cmpsb
pop
or
in
jg
xor
inc
lcall
xor
stos
cmp
or
sti
mov
outsl
jge
rcrl
test
or
lret
pop
mov
cltd
jae,pt
push
mov
add
pop
push
inc
cmp
shrb
or
push
aaa
dec
pop
sbb
add
int
mov
jg
sub
test
ja
out
jp
xlat
xchg
xchg
or
jl
daa
das
cld
sti
cltd
aam
enter
mov
mov
aas
call
or
push
insb
jnp
fwait
mov
push
iret
mov
push
cmp
leave
loopnew
call
ret
or
mov
push
mov
xorl
pusha
rcr
daa
out
sbb
inc
and
movsb
rcll
xchg
xchg
pop
out
scas
pop
xlat
std
and
out
les
pop
ror
adc
add
in
dec
sti
lret
scas
mov
addr16
inc
cwtl
or
notb
fs
inc
dec
pop
ja
cmp
fsubp
je
adc
test
mov
jmp
in
out
ficomps
add
xchg
xchg
cmp
add
out
inc
in
rolb
popa
lret
mov
xchg
dec
pusha
mov
shr
jmp
xchg
mov
cmp
mov
fnsave
sub
jle
jb
inc
je
adc
inc
hlt
data16
pop
popa
adc
cmp
fisubrl
vaddsd
dec
lahf
push
loope
mov
pop
lcall
cwtl
adc
push
mov
lods
outsl
sbbl
inc
dec
lods
pop
jae
pop
dec
cmp
lahf
ljmp
stos
ror
pop
leave
cmc
and
mov
mov
lds
popf
cmpsl
cmp
in
xorl
inc
jmp
sub
cmp
jb
push
notb
jae
or
mov
adc
lea
jb
fwait
imul
shll
pushf
addl
xchg
clc
push
push
lret
push
int
jecxz
sub
dec
shlb
push
rol
into
jne
mov
cmp
jecxz
sub
mov
sub
pop
divl
and
neg
xor
add
mov
in
cmp
mov
dec
cmp
mov
pop
jbe
cmp
lock
lds
insl
and
or
inc
sub
scas
je
cli
adc
sub
jp
into
pop
mov
ret
push
jecxz
sbb
jns
mov
jge
call
cli
out
arpl
test
imulb
adc
add
pushl
aas
push
ret
mov
lock
mov
enter
mov
mov
or
or
mov
data16
jne
mov
sahf
xchg
jge
add
insb
adc
sbb
jno
push
sbb
pop
hlt
inc
cmc
dec
lods
mov
imul
daa
mov
cmp
andb
inc
lcall
xor
and
push
orl
mov
push
push
fs
jbe
inc
lcall
sbb
imul
out
sti
mov
js
mov
pop
lahf
mov
xchg
repnz
icebp
jae
dec
les
call
inc
xchg
jle
int
dec
or
mov
cmpsb
xchg
xor
fidivs
inc
mov
push
mov
xchg
test
xor
ret
les
in
loope
loop
enter
ret
or
jp
jae
dec
sub
xabort
orl
imul
xchg
cmpsl
xor
test
lret
jns
daa
mov
cld
int
mov
sbb
fidivrl
xchg
inc
push
mov
pusha
addr16
mov
movsb
jns
lret
movsb
fsubs
push
sub
or
ss
in
orb
push
cmp
xor
or
xchg
loope
je
xchg
xchg
jbe
jmp
cs
mov
pop
insl
and
cld
jle
jmp
call
movsl
fwait
jb
imul
push
sub
test
sahf
outsb
icebp
push
fmulp
js
xchg
inc
xor
mov
adc
lods
xor
mov
lahf
scas
inc
std
lcall
or
pause
sub
xor
or
popaw
jb
nopl
adc
repnz
dec
pop
cmp
jo
cld
imul
sbb
sbb
inc
jae
jnp
lahf
add
and
je
mov
dec
aad
mov
jne
pop
out
fwait
leave
dec
stos
cmp
nop
inc
xchg
push
lds
les
lods
lret
sub
aas
negl
sahf
shl
pusha
xchg
fimuls
or
aad
jae
scas
pop
andb
push
not
test
jle
cmp
lcall
xlat
mov
cmpsl
rcll
cli
repnz
lds
fsub
stos
and
out
int3
imul
and
shr
shlb
shlb
icebp
hlt
leave
ja
or
mov
cltd
stos
aam
adc
repz
mov
clc
aas
mov
sbb
movsb
aas
ret
aaa
mov
insb
in
jbe
dec
dec
mov
pop
xor
and
push
insb
or
aas
sub
repnz
divb
mov
gs
pusha
int
ja
lock
and
jo
mov
cmp
daa
cwtl
jge
and
jle
sar
push
lret
xor
xor
mov
jbe
jle
or
mov
nop
mov
cltd
out
add
fcmovnu
xchg
cmp
sub
out
pop
imul
xchg
jnp
add
mov
pop
xor
inc
lock
addb
repz
ljmp
sub
lahf
jle
jae
pushf
sbb
leave
cli
push
icebp
sub
aaa
loop
nop
and
ljmp
mov
cmovno
movsb
mov
add
insl
pop
push
mov
ja
loopne
adc
fcoml
mov
push
in
jns
xchg
pop
or
js
mov
insb
or
sbbl
pushl
mov
xchg
push
cmc
pushf
pop
movl
jb
mov
addr16
cmpsb
int3
outsb
lret
mov
aas
incl
fs
in
pop
jbe,pt
and
dec
dec
and
mov
xchg
inc
jp
testl
test
mov
dec
mov
pop
sub
sahf
dec
pushf
xlat
test
xor
mov
cmp
inc
or
jb
lods
xor
ret
adcb
daa
int3
xchg
mov
popa
or
ret
sarb
push
rcr
fcmovnbe
or
push
dec
lock
cld
pop
shlb
cmpsb
inc
cltd
mov
add
nop
loopne
pop
mov
stos
int
and
test
fcmovnu
add
and
repnz
xor
dec
mov
leave
imul
fs
gs
pop
repz
pop
jmp
add
mov
xor
pop
inc
enter
dec
out
cmp
jmp
cli
lahf
push
rclb
xor
pop
rcr
sbb
outsl
leave
jge
inc
or
jg
cs
sbb
push
test
in
mov
adc
sbb
shrb
jecxz
negb
out
sbb
mov
adc
adc
dec
bound
sbb
ret
scas
ljmp
mov
popl
jbe
das
insb
fisttpl
push
movsb
or
fwait
dec
leave
stos
adc
out
xlat
lds
popf
inc
shl
add
mov
test
int
lock
mov
mov
mov
mov
add
inc
inc
lods
xchg
pop
xchg
push
into
xor
scas
std
in
push
adc
ss
jg
out
mov
fmuls
iret
lret
iret
lret
dec
repnz
ret
sub
mov
js
lcall
icebp
icebp
outsl
sbb
sbb
cmp
std
lcall
jns
insb
sbb
sub
sbb
out
cmp
pushf
sub
lahf
ljmp
dec
insb
gs
jle
les
push
js
mov
xchg
mov
xor
and
je
mov
pop
inc
ljmp
or
jnp
adc
jno
push
push
gs
iret
and
mov
mov
icebp
rorl
push
cltd
bound
sahf
ficoms
add
xchg
pushf
xchg
mov
jbe
xchg
int
stos
jns
in
pop
add
testl
push
stos
push
sahf
js
sub
lcall
mov
movsl
xor
mov
jmp
push
popa
icebp
mov
mov
fists
sbb
popf
fistps
loopne
stos
out
add
das
sub
adc
test
dec
cmp
mov
pop
iret
mov
gs
xchg
jno
sbb
stos
sub
xor
sbb
negb
and
mov
shll
sahf
xor
div
mulb
adc
insb
leave
mov
xor
scas
bound
rolb
pop
inc
pusha
and
push
inc
xchg
movsl
sti
ljmp
dec
into
dec
cmp
xchg
out
imul
xchg
sub
push
leave
cli
aas
loope
and
dec
xor
cs
ss
outsl
pop
fadds
add
mov
cmc
jecxz
inc
sub
mov
lods
xchg
imul
sbb
mov
dec
rcll
insb
or
inc
dec
stos
sub
movsl
fisubrl
or
ds
jg
cld
cld
sub
aad
arpl
vmread
jno
push
lahf
push
loopne
adc
add
dec
add
repz
pusha
aam
cmp
mov
xchg
xor
inc
jno
inc
adc
adc
in
pop
ret
test
ret
dec
test
pop
mov
std
es
stos
scas
push
inc
inc
push
movsl
jmp
movsl
stos
pop
pminub
stos
and
dec
xchg
sub
outsb
mov
or
mov
mov
sub
push
movsb
or
lahf
inc
rcr
insb
lret
subl
insl
sar
popa
add
incl
dec
jmp
fsubl
dec
cmpsl
xor
push
pop
mov
jnp
in
jg
ljmp
repz
push
mov
mov
mov
adc
les
loop
mov
add
push
sbb
mov
or
add
mov
cmp
fwait
push
fdivs
mov
jp
sbb
pop
sbb
bound
pop
aas
or
mov
dec
mov
or
ja
call
daa
cmp
jnp
rcr
shl
pop
fmuls
es
test
stc
cmp
rol
in
push
adc
jns
push
add
leave
ljmp
xchg
sahf
ja
jecxz
mov
pop
out
pop
dec
loopne
xchg
ret
fisttpl
pop
ret
mov
ret
lahf
fimuls
pushf
loop
out
jl
jp
add
test
lds
aas
mov
push
dec
sub
imul
icebp
int
cs
sti
cmpsb
imul
cli
push
sub
cmp
fwait
push
and
sub
scas
add
lods
gs
xor
mov
dec
xchg
adc
roll
rcrb
push
inc
sbb
mov
movsb
iret
sti
jmp
in
and
stos
push
out
stc
mov
mov
icebp
xor
in
mov
fwait
cmp
gs
xlat
xor
push
sti
mov
mov
mov
test
fidivrs
stos
jns
dec
pop
mov
sbb
stos
jne
inc
movsb
test
leave
test
cmpsl
xchg
cmc
push
cli
outsl
nop
adc
lock
inc
push
push
into
xchg
ficoms
gs
mov
cs
inc
stos
int3
dec
jbe
fisubs
rcl
sbb
push
out
inc
xchg
lcall
xchg
das
mov
pusha
and
mov
out
jno
cld
mov
cmp
das
sbb
adc
lock
jno
and
dec
adc
loopne
xchg
clc
out
aam
cld
fwait
and
jle
lea
lea
gs
jmp
mov
imul
sbb
stos
cs
pop
dec
rcll
jnp
test
or
inc
loop
jge
test
in
arpl
cltd
clc
jle
push
sub
mov
or
mov
jl
into
xor
pop
leave
jecxz
out
mov
fisubs
test
adc
jecxz
xchg
nop
jl
xor
movsl
sbb
les
jbe
cmc
and
ljmp
push
movsl
jns
nop
int3
lret
enter
fldcw
lods
insl
jo
jns
rcrl
into
add
cmp
mov
inc
repnz
das
push
push
testb
pop
js
popf
imul
les
add
adc
dec
push
mov
jno
mov
or
mov
mov
pop
dec
fldenv
lcall
and
int
js
cmp
js
lcall
xlat
sahf
add
adc
clc
pusha
adc
ret
fdivrs
pop
xlat
js
dec
fwait
xlat
add
or
push
mov
xorb
int
xchg
cld
data16
mov
mov
adc
lret
fldl
incl
sbbb
mov
rol
lods
xor
popa
repnz
sarb
popf
insl
cmp
test
xor
mov
lret
fdivl
lock
cmpsb
sbbl
fsubl
in
cmp
jne
adc
lock
mov
aas
hlt
js
out
adc
add
ljmp
xchg
hlt
push
sahf
cmpsl
in
aas
lods
repnz
push
test
sbb
jecxz
stos
or
insb
std
lret
lock
dec
inc
mov
adc
or
adc
inc
dec
push
xchg
fwait
xchg
inc
and
or
sub
std
push
or
mov
stos
jbe
daa
pop
jae
sarl
mov
aad
add
push
faddl
sub
call
mov
aad
into
xor
hlt
out
gs
and
jbe
pop
mov
xchg
sub
xor
mov
mov
inc
daa
mov
insb
mov
or
call
jno
lods
ficoml
gs
ret
or
lea
andb
fidivrs
rorb
push
fwait
pop
fnsave
or
xor
push
jns
dec
stos
xor
cmp
cli
test
cmova
xchg
mov
jb
mov
inc
and
pop
out
or
call
or
ficompl
cltd
ja
in
mov
sub
ds
imul
jmp
and
pop
pop
and
test
push
fnsave
pushl
and
pop
int
cmp
test
adc
sub
popl
repz
push
add
lret
pop
jo
pop
je
xor
sub
pop
imul
ss
push
icebp
push
pop
dec
mov
mov
lret
and
movsb
ljmp
jne
dec
dec
jl
js
clc
daa
jmp
pushf
and
popf
push
xor
scas
push
stos
lret
or
mov
test
fstp
mov
xor
repnz
enter
aad
xor
sub
xchg
jp
mov
xchg
adc
les
leave
pop
sub
dec
imul
orl
mov
lret
stc
mov
jns
xchg
dec
pop
gs
popa
data16
cmp
or
fisttpl
add
mov
sbb
pause
icebp
cmp
dec
repz
adc
test
cmp
cmp
sub
icebp
pop
push
rolb
mov
je
inc
jmp
rol
ljmp
jno
fnstenv
and
sbb
xchg
sbb
comiss
and
ficoms
mov
mov
mov
push
pop
sub
mov
xor
int
mov
orl
xor
std
mov
xchg
rcll
jp
cmpsl
push
push
mov
pop
data16
outsb
out
fisttpl
outsb
pushf
mov
shll
sti
or
sub
jbe
test
mov
dec
add
loop
jo
ficompl
movsb
or
gs
insb
cmp
out
sbb
jne
data16
jmp
mul
loope
push
out
scas
out
and
mov
dec
add
pop
cmp
movsb
addl
in
out
ret
ljmp
jnp
adc
adc
cmp
test
push
gs
out
out
cmp
divb
lods
jg
lods
mov
mov
fsub
cmp
andl
cltd
sub
cmp
lods
stc
stc
sar
mov
ret
lret
in
adc
call
aam
jl
test
bound
lret
dec
xor
int
add
xchg
jg
push
sub
sahf
scas
in
lea
bound
cmp
dec
test
mov
jb
jle
and
dec
sbb
sub
mov
sti
jno
or
mov
pop
mov
movsb
sub
push
inc
lidtl
add
clc
inc
add
sbbb
mov
mov
push
daa
das
and
adc
dec
mov
pop
mull
inc
inc
or
fstpl
sub
cs
hlt
out
in
adc
dec
fwait
and
sub
mov
xor
loop
cmp
decl
inc
xor
cmp
pop
mov
mov
imul
jns
or
aam
lahf
add
push
stc
inc
add
cwtl
fildll
mov
cwtl
jns
jl
movsb
jmp
outsl
in
fwait
into
sti
dec
xchg
test
das
mov
push
xchg
jle
ret
test
jns
fs
int
xor
stos
and
pop
add
cld
popf
push
xor
jne
inc
fnstenv
insb
iret
add
fcomp
loope
jle
lods
pop
sbb
xchg
inc
mov
shl
into
lea
xor
cmpl
jbe
arpl
push
sbb
pop
adc
xor
cld
rolb
or
aam
push
aam
push
outsl
shll
in
into
cltd
sbb
lds
pusha
ret
xchg
in
inc
andb
pusha
inc
fwait
sbb
and
das
aam
push
fidivrs
pop
fmul
sbb
mov
lret
movsb
xchg
xchg
shlb
and
es
or
repnz
popa
andb
cmp
xor
outsl
cmp
push
movl
cld
aam
sbbb
sbb
aas
adc
or
sbb
mov
rcrb
jle
nop
scas
std
aaa
insl
insb
lods
sub
loop
mov
cmc
fs
sub
cmp
cs
fnstcw
pop
aaa
in
pushf
adc
insb
xor
add
int
fisttps
repnz
clc
or
or
add
or
ret
scas
xchg
mov
ja
fdivrl
inc
add
or
mov
and
mov
adc
aam
sub
cwtl
cmpsb
adc
push
jno
flds
std
pop
xor
iret
dec
pop
icebp
push
scas
and
xor
jp
popa
fisttps
repnz
stos
jbe
and
adc
xor
pop
cmp
aaa
jecxz
int
inc
lock
push
in
sub
imul
jp
out
lods
xor
and
jp
sti
add
ljmp
fstl
xor
or
sbb
mov
es
fwait
mov
jle
inc
xchg
pop
mov
std
clc
daa
xor
fdivrs
fstpl
fs
pop
adc
push
add
ss
dec
cli
sbb
dec
push
rcrl
pop
andl
mov
subb
xchg
rcr
stos
int3
jno
jmp
imull
adc
sahf
les
inc
xor
xor
add
adc
or
sarl
push
dec
mov
in
xchg
xlat
aaa
sahf
cmc
adc
pusha
mov
addr16
adc
push
loop
in
test
sub
jno
push
daa
fiadds
mov
pop
mov
std
add
mov
movsl
or
jbe
loop
jnp
adc
sbbl
push
imul
outsl
cmp
testl
pusha
aas
mov
sub
pop
mov
popa
dec
push
in
rclb
scas
lods
movsl
call
lods
cmp
lock
lea
arpl
jmp
decl
push
cltd
test
push
int
jl
test
mov
pop
mov
xlat
mov
xchg
pop
dec
cmp
cmp
outsb
and
ljmp
sbb
leave
adc
or
sub
adc
mov
sti
sbb
xor
in
addr16
xor
rcrb
dec
aad
mov
dec
icebp
sub
mov
mov
dec
adc
gs
test
lds
push
addl
ret
xchg
sbb
dec
pop
pop
icebp
test
adc
xchg
push
js
test
cwtl
pop
sub
enter
mov
pop
je
cld
stc
fwait
lahf
mov
push
pop
sbb
jns
ss
inc
shrb
aas
call
jne
adcb
xchg
jne
cwtl
pop
mov
pop
xchg
dec
sbb
xchg
test
jns
into
sbb
sub
push
sub
sbb
repz
insb
es
mov
popf
ds
scas
ficomps
rclb
mov
test
xchg
clc
cwtl
shr
mov
cmp
xchg
mov
inc
in
sbb
cmp
lock
mov
jns
mov
ljmp
push
pop
push
int
jno
imul
add
ror
mov
dec
jle
or
xchg
sbbb
push
cmp
fsubl
icebp
and
pop
dec
push
jmp
and
or
insb
jne
les
aaa
dec
pop
cmpsb
mov
aad
repz
daa
call
ret
pusha
pop
jbe
mov
mov
scas
into
inc
inc
or
pop
orl
rorl
xor
out
stos
cld
mov
or
rcl
ror
push
add
std
ficompl
pop
aad
lock
mov
or
fldcw
into
and
movsl
dec
sahf
xor
ficompl
mov
sti
in
or
xchg
loope
cmp
or
add
and
mov
lret
add
int3
xor
xchg
jle
sub
mov
shll
mov
pop
popf
sti
pop
push
xchg
stos
mov
lcall
int3
mov
sub
adc
adc
xor
mov
xchg
mov
lock
out
add
jnp
sti
insb
cmp
pop
mov
aad
pop
mov
cmp
mov
xchg
push
test
inc
test
aas
and
gs
sbb
sub
pop
xchg
jae
negb
sub
pop
fldt
dec
fimuls
dec
pop
and
add
test
ret
call
cmp
xchg
sar
jp
mov
cs
shlb
aad
daa
inc
movsl
fistpl
insb
frstor
rclb
mov
mov
dec
mov
stc
scas
adcl
orl
mov
jecxz
push
cwtl
insl
pop
sbbl
adc
cmpsl
sub
and
adc
es
sbb
push
adc
arpl
pop
mov
int3
inc
add
aas
loopne
pop
andb
int
imulb
xchg
dec
mul
push
cld
in
lods
sbb
insb
lods
mov
mov
inc
adc
test
xchg
mov
lret
cmp
sbb
je
cld
cmp
enter
lret
std
cmp
dec
mov
add
lock
push
adc
push
popf
lahf
stos
test
xchg
jae
push
cmpsl
daa
mov
in
movsl
mov
ja
addr16
adc
xchg
inc
mov
mov
push
jle
xchg
pop
div
sub
cmpb
lds
adc
fnstcw
sbb
ror
lods
jg
test
push
addb
out
xor
push
mov
adc
lock
in
adcl
fwait
mov
xlat
popf
push
repnz
adc
jle
outsl
ret
fimull
std
js
cmpl
mov
f2xm1
mov
xchg
cmp
dec
add
flds
mov
add
sti
ja
sub
inc
inc
xor
rep
mov
sbb
cltd
pop
add
jecxz
test
pushf
scas
cmp
dec
pop
jnp
jns
add
push
xchg
dec
cwtl
xchg
iret
dec
sub
sbb
roll
mov
sbb
aam
out
push
and
daa
cwtl
adc
dec
test
arpl
xchg
xchg
mov
push
leave
fsubrs
adc
insb
out
pusha
mov
mov
cmpsl
jb
or
lds
test
xchg
lcall
daa
xor
mov
mov
dec
push
adc
out
jo
mov
jl
jp
out
sar
imul
xchg
repnz
in
out
ds
cmp
fwait
jle
push
dec
in
dec
outsb
xchg
inc
aad
clc
sbb
rcr
pop
jns
push
push
enter
insb
cmpsb
aas
mov
and
aad
pushf
push
arpl
fs
sbb
sbb
ret
loope
insl
push
fwait
leave
lahf
inc
inc
enter
popa
cwtl
xor
insl
addr16
push
adc
mov
mov
aam
out
lods
loope
or
sub
pop
pop
popa
clc
ja
cld
jp
loope
jp
mov
hlt
out
xor
dec
aaa
inc
xchg
or
cli
push
mov
gs
loop
pop
es
add
mov
outsl
adc
movsb
pop
push
shll
inc
in
stos
loopne
pop
push
pop
out
imul
jne
scas
xor
mov
push
cmpb
xor
icebp
mov
sub
jg
and
mov
inc
push
test
stc
es
add
sbb
and
mov
les
pusha
popf
cmp
xor
outsl
mov
rcrl
imul
cmpsb
fcompl
push
pop
fdivrl
mov
getsec
jp
dec
pop
int3
cmp
dec
sbb
lods
out
sbb
cmpsb
sub
jb
lret
repnz
cld
into
or
pop
sub
insb
push
push
or
pusha
cmp
xor
test
out
jb
mov
mov
pop
cs
dec
jg
inc
cs
or
xchg
jno
test
nop
lods
xchg
sarl
testb
adc
mov
push
cld
mov
fdivr
int3
imul
dec
repnz
iret
lods
movsb
ss
cmp
sbb
xchg
stos
or
jecxz
adc
mov
pop
pop
idivl
arpl
push
cmc
jns
cli
add
adc
sbb
mov
push
mov
scas
lods
push
xor
sahf
data16
push
dec
and
push
ret
xchg
dec
lcall
jp
pop
dec
jae
sub
jmp
inc
jb
mov
int3
lods
mov
test
or
fwait
mov
lock
add
add
loop
and
and
aam
or
sbb
imul
rorl
mov
cmp
mov
mov
divl
cmpsb
loopne
rorb
cmp
lret
or
or
adc
jge
lock
and
pop
push
pop
fistps
icebp
pop
aam
sbbl
pop
fcoms
out
loop
lods
mov
mov
cmp
mov
dec
dec
leave
shlb
xor
or
mov
stos
adc
fs
sbb
cmpsl
push
jo
clc
mov
mov
sti
sbb
xchg
push
push
lock
outsb
call
ficompl
mov
cltd
jae
jmp
addr16
insb
pushf
lock
int3
push
loop
mov
popf
test
mov
out
repnz
fidivl
in
aad
rcll
scas
adcl
adc
mov
pop
scas
mov
add
cmpl
mov
xchg
mov
je
negl
cmpsl
cmp
sti
mov
dec
cmp
mov
int3
or
cmp
pop
imull
inc
sub
xor
data16
mov
out
cmpsb
mov
jmp
sti
or
fldt
icebp
adc
cwtl
mov
movsl
rcrl
cmc
mov
inc
mov
cmp
fadds
scas
stos
mov
aad
dec
mov
stos
movsb
inc
and
cmp
ret
mov
adc
popf
adc
inc
out
and
sti
cmpsl
clc
popf
pop
stos
lret
jns
xor
sub
jp
icebp
sub
leave
loope
fistl
iret
sbb
mov
jmp
out
jge
cmp
out
or
lret
jp
in
test
ljmp
sbbb
jo
xchg
movsb
jmp
scas
ret
add
and
jge
dec
test
xchg
scas
sub
lods
lods
add
mov
insl
mov
movsb
jp
arpl
ret
lock
outsb
xor
sub
xchg
orl
jb
pop
push
adc
cmp
ret
lret
mov
xor
int3
dec
push
add
loop
sub
movb
dec
js
movsl
sbb
inc
lahf
incl
add
push
cmp
xlat
xor
mov
mov
mov
jle
jnp
fildl
and
aas
lret
push
add
imul
sub
leave
bswap
and
ja
int
aam
jbe
ret
aas
ret
mov
outsb
push
rcr
dec
addr16
mov
mov
sbb
je
push
or
adc
lock
repz
lods
sub
scas
sub
mov
rcrb
jle
je
decb
rorb
int
xchg
jmp
cld
or
les
cld
mov
xchg
in
ss
cwtl
push
sbb
dec
push
xchg
xor
mov
sub
mov
shrb
add
cld
imulb
adc
xchg
sub
mov
xor
in
cmp
mov
ljmp
addr16
xor
out
jbe
sub
rclb
loope
jns
mov
loop
dec
cmpsb
lea
scas
add
mov
fisttpll
mov
jmp
mov
jbe
xchg
mov
bnd
dec
repnz
adc
inc
xorb
or
orl
mov
mov
mov
jno
jnp,pn
out
inc
sub
decb
push
add
test
sbb
nop
mov
inc
mov
push
clc
or
pop
je
ret
sub
dec
stos
lcallw
in
sbbb
cmp
add
inc
mov
mov
xchg
sbb
orl
push
lods
mov
cmpxchg
out
insl
stos
arpl
out
not
or
lds
push
push
adc
mov
in
mov
xor
in
pop
adc
mov
ret
and
mov
or
cmpsl
repz
test
xor
xchg
jns
aad
sbb
lds
daa
mov
xchg
rcll
ret
pop
sti
and
adc
pusha
add
dec
push
stc
cmpsb
fstpl
xor
mov
test
pusha
inc
sub
pop
lock
xchg
hlt
xor
sti
cs
popf
push
fidivl
mov
mov
xor
aam
push
xor
mov
leave
add
mov
aad
cmp
ret
dec
and
ja
sbb
lret
mov
jno
pop
xor
rorb
push
and
xor
leave
dec
mov
push
jbe
cmpsb
ret
mov
fprem1
stc
xlat
fidivrs
push
clc
ret
mov
sbb
mov
push
lods
mov
arpl
inc
fbstp
cs
nop
pop
jb
in
lods
rcl
jle
inc
xchg
mov
out
stc
push
pusha
loop
rorb
dec
push
adc
sbb
mov
sub
into
dec
inc
mov
and
stos
cmp
mov
jge
adc
push
pusha
sub
push
xor
rorl
add
mov
jno
push
shrb
push
sub
ljmp
jnp
js
dec
pop
cmp
dec
dec
pop
add
xor
or
add
push
outsl
enter
push
mov
push
sub
cmpl
jno
movsl
sub
mulb
je
xchg
xor
jg
mov
add
ss
jnp
mov
repnz
mov
push
jo
sbb
sbb
add
push
pop
loopne
xchg
das
xchg
popl
mov
add
stc
mov
push
ds
or
out
int
into
jge
stos
test
push
aas
addr16
ss
mov
shll
sub
jp
std
xchg
jae
add
shll
lods
xor
cwtl
mov
jae
popa
push
imul
or
jnp
popf
and
sti
jae
sub
in
lcallw
mov
leave
push
popa
stos
push
outsl
je
xchg
pop
push
loope
sar
push
dec
data16
jp
xlat
mov
inc
in
lock
test
out
arpl
cmp
mov
roll
xchg
add
xchg
fstl
test
push
cmp
cmp
xchg
inc
mov
mov
test
mov
cli
pusha
outsb
jns
mov
mov
dec
outsw
popf
jmp
fstl
jae
aas
xor
pop
mov
cld
pusha
jne
loope
sbb
ret
jne
lret
xlat
or
pusha
xor
xor
insl
sbb
mov
scas
push
xchg
dec
shl
xor
or
jno,pn
imul
jg
pop
inc
pop
incb
dec
add
cli
lea
dec
add
push
cld
jno
adc
into
xchg
imul
cs
cmp
in
jecxz
movl
pop
mov
inc
mov
sbb
je
aas
xchg
lret
scas
gs
xchg
out
mov
dec
sub
pop
fst
mov
dec
fldl
loopne
in
jnp
jo
push
dec
loop
pop
lds
jle
iret
cmp
push
daa
pop
sbb
mov
icebp
fsub
jne
xor
in
test
jg
in
sbb
xor
in
test
xchg
test
cwtl
mov
aas
mov
out
pop
out
sahf
stos
inc
mov
outsb
inc
outsb
dec
inc
cmpsl
mov
xor
sub
leave
mov
enter
jle
pop
jge
push
add
into
in
pop
cmpsl
leave
arpl
pop
int3
andb
inc
mov
sarb
sbb
push
mov
push
aad
mov
lcall
cmpb
jno
pop
xchg
or
cmp
inc
loop
ret
and
dec
inc
or
ss
call
arpl
dec
pop
repz
add
lods
jo
inc
loop
sbb
lea
in
xchg
insl
cwtl
mov
sbb
dec
inc
adc
test
in
insb
ljmp
insl
jnp
push
bound
outsb
outsb
dec
movsb
lock
push
movsb
adc
pop
fnstcw
movsl
out
push
cltd
ja
fsub
jmp
or
callw
movsl
pop
xor
insl
xchg
lcall
xchg
mov
lods
dec
sbb
push
dec
lods
jb
scas
cli
lcall
cmpsb
out
pushf
adc
addr16
xchg
pop
ds
jae
repnz
outsl
ret
inc
mov
sbb
push
popf
and
pop
sbb
movsb
inc
and
dec
int
dec
push
jns
out
inc
shlb
pop
jb
loope
add
adc
lea
lcall
ret
mov
out
es
lahf
stc
pop
std
loope
cmp
sbb
pop
jge
shll
and
xchg
js
ret
imul
icebp
push
ja
data16
rclb
lret
push
pop
and
es
in
or
push
insl
inc
pop
je
pop
push
mov
sbb
mov
mov
mov
mov
mov
push
shrl
mov
mov
pop
je
shl
data16
stos
fistpll
fsub
dec
mov
mov
push
push
jg,pn
cmpsb
std
outsb
movl
add
lea
test
ret
inc
jge,pt
aaa
ljmp
cld
test
in
push
insl
dec
stc
rorl
rolb
push
xchg
test
push
or
fiadds
and
cs
lret
cmp
and
jno
in
mov
repz
and
dec
push
lds
add
mov
or
push
out
lea
int
push
jmp
in
dec
push
mov
xchg
scas
test
and
out
xor
outsl
lea
popa
xchg
cltd
xchg
cmp
icebp
mov
aas
sub
push
pop
mov
ret
sbb
dec
jbe
lahf
in
sbb
cmc
mov
les
cmp
movsb
sub
loope
xchg
mov
addl
sbbl
and
loopne
cmpsl
lods
inc
loop
xchg
xor
sahf
mov
in
lock
cmpsb
or
cld
mov
push
flds
adc
insb
or
popa
push
dec
mov
and
inc
adc
cmpsb
mov
mov
sub
test
jne
xor
xchg
push
pop
mov
bswap
adc
and
and
push
mov
push
xchg
sub
test
pushf
dec
repnz
lds
es
iret
cmpsl
and
push
ds
out
insb
hlt
jecxz
mov
enter
sbb
fidivrs
pop
ds
ds
cmp
push
push
mov
mov
outsl
aad
jns
fwait
add
out
xlat
cmp
mov
inc
int
cld
mov
mov
test
dec
rcrl
loopne
pop
push
push
push
dec
lods
mov
negl
bound
push
sub
xchg
clc
in
das
in
daa
adc
jp
mov
movaps
rcll
mov
sbb
fwait
ja
mov
fsubs
aad
mov
xorl
cmp
in
mov
cmp
inc
pop
shlb
inc
lock
and
repz
xor
cmc
pop
push
add
adc
out
mov
lret
dec
data16
cmovg
jmp
ss
xor
push
int3
pop
mov
add
gs
fwait
das
scas
push
mov
loopne
fbstp
addl
clc
push
cs
scas
mov
shl
aad
mov
push
add
outsb
xlat
ret
push
mov
hlt
rorb
rcrb
push
jne
mov
xlat
and
inc
sahf
lret
dec
mov
leave
in
ja
sbb
fs
aam
jmp
push
in
pop
inc
ret
fiadds
aam
loope
ss
fidivl
dec
and
pop
dec
insb
sbb
lock
pushf
push
xlat
div
sahf
xchg
stc
pop
mov
add
iret
mov
les
sub
adc
ret
and
xor
xor
pop
and
arpl
aad
mov
cmp
pop
in
imul
or
out
incb
cmpsl
mov
sub
jbe
jecxz
lock
cltd
and
inc
ja,pt
ja
ret
js
xchg
jb
pushf
dec
lcall
mov
jo
adc
jg
and
aam
or
sbb
jo
inc
jg
rolb
dec
jmp
dec
dec
inc
cwtl
dec
mov
cld
stos
inc
push
mov
rcll
sbb
mov
inc
mov
popa
dec
ljmp
or
cmp
jge
cmp
shl
and
xchg
add
test
cltd
cmp
enter
sbb
ds
outsb
inc
aam
les
lret
adcb
pushf
sbb
xchg
jno
sbb
scas
mov
rol
bound
iret
ss
xchg
jp
xor
mov
adc
push
mov
shl
mov
dec
sbbl
daa
neg
sbb
or
arpl
dec
cmp
xchg
dec
aaa
jp
add
mov
outsl
pop
push
ret
cmp
xchg
pop
mov
iret
and
stos
sub
and
mov
jecxz
jo
jne
insl
pushf
inc
inc
mov
inc
lods
cs
dec
jp
mov
sbb
fistpll
sar
dec
mov
mov
jae
insl
dec
inc
movsbl
negb
and
bound
or
aad
xchg
sbb
cmpsl
ljmp
fucomi
push
and
test
testl
push
push
xor
add
pushf
inc
xlat
cli
push
aaa
mov
mull
rolb
pop
add
dec
rolb
mov
aas
shrl
nop
mov
loope
shll
dec
or
adc
add
pop
add
testl
lods
push
in
jb
xchg
inc
or
call
push
repz
sbb
aam
xor
pop
mov
sti
lods
xchg
add
negb
inc
add
push
mov
xchg
cmp
xor
cwtl
test
into
lock
or
add
hlt
jecxz
and
adc
inc
mov
sub
xor
mov
pop
shll
push
adc
nop
insb
shll
inc
mov
ljmp
push
xor
stos
sti
or
cmp
inc
loopne
loop
cmpsb
popf
popa
xorl
out
and
mov
sti
jb
add
push
or
cmpsb
add
test
decb
faddl
mov
ficompl
leave
xlat
cmp
mov
nop
mov
movl
xchg
fiadds
push
adc
and
and
or
test
cmp
test
movsl
push
ds
lods
pop
or
mov
xchg
mov
clc
inc
cs
clc
mov
popa
addr16
outsb
xor
mov
emms
sub
inc
mov
pop
ret
adc
xchg
mov
lcall
ret
inc
add
sbb
cmp
scas
push
sub
cmp
fsubl
pop
fisttpl
lds
dec
adc
sbb
sub
sbb
mov
movsb
xor
dec
dec
sti
int
sbb
xchg
addl
dec
sti
fildl
cli
popl
shrb
hlt
sub
mov
cmpsb
bound
jne
mov
clc
aad
push
inc
pop
jnp
sbb
mov
out
sbbl
pop
pop
xor
test
mov
daa
dec
cwtl
add
push
das
pop
daa
pop
std
adc
aad
fadd
add
mov
cltd
push
sub
inc
lahf
lahf
cmp
testb
or
lods
daa
jo
mov
and
into
aas
xlat
push
xor
mov
lods
mov
push
xchg
dec
aas
lret
jecxz
aas
aad
fsubl
cs
ror
mov
xchg
orl
mov
push
push
loopne
xchg
inc
adc
mov
adc
movsl
movsl
les
cmp
and
sbbb
pop
cli
mov
mov
sbb
inc
push
jmp
jbe
xchg
or
lods
and
clc
sbbl
mov
and
push
inc
call
int
xor
mov
stc
mov
xor
cli
dec
and
mov
std
mov
push
inc
pop
pop
fs
mov
jb
mov
ss
fsubrs
or
in
stos
outsb
in
decb
mov
loopne
inc
and
jo
in
mov
shr
enter
fst
pop
mov
lods
jecxz
adc
dec
add
stos
mov
stos
inc
inc
sbb
scas
xlat
ret
leave
sub
or
stos
cmpsb
xchg
xchg
stc
cmc
sub
ret
js
jnp
subl
cmp
movsl
dec
add
adc
test
cmp
imul
mov
cmp
mov
sarl
dec
adc
mov
dec
hlt
mov
inc
mov
sahf
jecxz
push
sti
lods
xor
dec
mov
sahf
lea
fucomip
add
pop
mov
mov
dec
addr16
xor
aad
inc
mov
push
pop
mov
mov
dec
pop
sub
lods
in
pop
call
gs
popa
and
loope
xchg
in
enter
arpl
sub
bound
jns
jno
loope
mov
pop
dec
cmp
adc
or
mov
sbb
out
jl
adc
shlb
xorl
popf
jno
sbb
mov
rcrl
lret
stos
mov
and
dec
insb
push
sbb
mov
shlb
xchg
dec
enter
sti
cmpsl
cmp
push
add
jmp
mov
sarl
and
jmp
jecxz
popf
adc
scas
add
fdivrs
dec
adc
stos
ja
fs
jo
xor
or
movsb
sahf
repnz
out
enter
andl
imul
or
mov
loop
flds
jo
cmpsb
sub
inc
dec
repnz
sahf
add
subb
inc
orb
mov
jns
loopne
mov
add
cli
sbbl
sub
add
loopne
test
jne
dec
fs
xchg
xchg
mov
jo
js
shr
pusha
pushf
add
jnp
jns
pop
into
or
mov
adcl
cs
mov
adc
dec
mov
roll
push
outsb
xchg
pop
popf
insl
das
xor
sub
outsb
cmpsb
jge
std
mov
mov
jns
movsb
rcrb
std
cli
jo
movsb
mov
movsb
aaa
jnp
loopne
inc
mov
push
test
ret
inc
mov
xchg
icebp
cwtl
cmp
iret
inc
ja
add
push
imul
nop
movsb
push
jae
stos
in
pop
rcr
std
insl
mov
jg
push
ret
int3
push
cmp
andl
and
inc
sub
outsl
sub
mov
ret
sbb
mov
pop
mov
imul
dec
lret
mov
push
rcr
and
dec
dec
sbb
sub
dec
les
push
call
loopne
rcrb
inc
jecxz
in
mov
lea
mov
je
lods
dec
fidivl
pop
jmp
loope
push
cs
mov
mov
mov
test
nop
cmpsl
xchg
aaa
jp
pushf
mov
subl
clc
adc
out
mov
imul
sahf
dec
and
mov
movsb
shll
add
mov
pop
imull
xor
je
scas
mov
or
mov
xor
into
fxch
in
fstps
or
mov
aam
out
int
outsl
mov
pushf
adc
roll
and
xchg
mov
je
pop
lds
les
enter
inc
and
mov
inc
iret
xchg
fwait
jmp
les
mov
push
lcall
clc
push
lock
or
xchg
test
std
clc
xor
aaa
pusha
mov
cmp
sqrtps
sbb
xchg
inc
xchg
fcompl
lock
or
fnstenv
cmpsb
jmp
dec
inc
jb
lahf
int3
loop
rclb
fimull
mov
dec
nop
xor
add
cmp
add
testl
and
push
test
jmp
mov
mov
aam
cmp
lock
stc
push
sub
push
popf
mov
cmp
xor
mov
mov
jae
jge
cli
dec
popa
in
out
mov
sbb
push
scas
test
test
xlat
adc
dec
jp
hlt
pushf
cs
fstp
shlb
popf
mov
gs
cmp
leave
arpl
xchg
test
fcoms
or
inc
test
loopne
jbe
fisttpll
push
jg
jmp
dec
xor
arpl
jne
mov
inc
push
insl
mov
xor
jle
jns
std
movlhps
pop
dec
adc
outsb
in
cmp
push
mov
mov
dec
mov
cmpsb
mov
cwtl
inc
inc
mov
cmpsb
ljmp
out
sarb
loope
je
fists
jbe
jecxz
roll
jno
add
xor
divb
and
sbb
out
bound
xchg
cmp
adc
daa
in
je
movsl
push
adc
sbb
leave
fldl
mov
movsl
lds
pushf
ficoms
repz
gs
daa
jl
push
mov
or
jo
add
mov
mov
push
ret
stc
test
lcall
xor
xorl
lds
fildll
push
loope
mov
scas
xchg
adc
aam
je
fwait
cltd
mov
or
pop
xchg
pop
dec
jno
loop
insl
xor
jne
outsb
sar
sub
mov
xor
testl
jl
insl
mov
lea
push
and
xchg
xor
ja
lret
mov
int
std
cld
mov
cmpsl
pushf
xchg
push
jp
mov
inc
nop
mov
cmp
dec
clc
dec
fs
ja
pop
enter
adc
mov
les
push
jl
repnz
adc
out
pop
imul
xor
sbb
mov
adc
dec
sbb
scas
xor
sub
rep
out
daa
jb
lods
xchg
fwait
loopne
fs
test
mov
jo
inc
test
push
add
and
out
das
dec
jbe
xchg
mov
test
and
lret
into
xchg
scas
fucom
push
jns
insl
mov
dec
mov
adc
push
lods
xor
aam
stos
mov
pop
adc
xor
gs
sahf
xchg
xor
cmpsb
sub
cmp
xchg
aas
or
lret
xlat
xor
popa
outsb
sbb
dec
les
mov
jnp
mov
outsl
pop
pop
jno
icebp
mov
andl
test
jmp
sub
loope
in
xchg
push
pop
xchg
mov
xchg
repz
jge
sbb
xorl
cmp
inc
cmp
sub
fs
push
sbb
pop
mov
das
pop
sbb
xchg
add
xchg
int
adc
call
inc
stos
loope
cmpl
xchg
adc
jg
jns
arpl
aas
push
push
in
fcmovu
mov
inc
or
mov
xor
jp
push
ss
cli
cmp
xor
stos
scas
fwait
sbb
xor
mov
jbe
sbbb
xchg
xchg
inc
loop
jbe
lods
mov
insb
xor
adc
hlt
pop
std
jne
mov
cli
das
mov
xchg
daa
or
les
mov
sbb
bound
aad
cld
sahf
cwtl
mov
jne
sub
sahf
inc
cmp
cld
mov
dec
mov
xchg
loopne
hlt
jmp
inc
scas
loopne
ss
mov
or
sbb
ret
aaa
inc
lods
jp
mov
ss
adc
xor
xor
and
out
mov
icebp
xor
int
add
mov
inc
xor
pop
push
add
sub
addr16
es
js
movsb
insl
xchg
shr
pop
cltd
insb
push
out
push
xorl
sub
filds
shl
mov
outsl
xchg
aam
xor
lret
pop
roll
fnsave
jp
lret
ret
fisubrs
loopne
ds
in
xor
add
fisubrl
insl
roll
fwait
push
inc
cli
stc
pop
lcall
test
inc
popf
stc
mov
lret
dec
mov
outsb
and
xchg
and
or
xchg
push
xor
mov
sub
es
adc
mov
xor
mov
push
into
shrl
cmp
mov
push
fs
in
add
jne
mov
adcb
pop
lea
jle
cmp
ljmp
xchg
sub
mov
insb
je
hlt
in
int3
jb
push
pusha
repz
and
hlt
cmp
call
mov
lea
clc
in
mov
mov
cmp
jne
arpl
xchg
pop
pop
lea
ror
js
das
cmc
sbb
push
das
fdivrl
insb
jo
jmp
add
leave
inc
pop
jbe
pop
mov
stc
add
daa
push
inc
stos
push
test
jmp
daa
or
inc
fs
fistl
loopne
dec
jle
pop
fists
loop
std
ja
in
je
cltd
movsl
sti
lcall
outsl
cmp
push
and
xchg
ljmp
xlat
repz
dec
cld
mov
pop
lcall
int3
adc
imul
cmp
sub
pushl
mov
lahf
mov
iret
mov
mov
dec
mov
clc
nop
cmp
ret
push
inc
mov
lcall
in
xchg
iret
mov
push
lods
xor
push
lea
dec
lods
pop
stc
jg
sbb
mov
push
pop
push
mov
or
xor
aam
push
cld
mov
mov
mov
inc
mov
cmpsb
arpl
jmp
sub
test
repz
push
lods
push
fs
jl
loope
sub
jns
scas
loope
add
out
int3
cmp
push
mov
pop
mov
sbb
call
push
in
rcr
jnp
and
test
xor
in
and
sbb
int
addb
sbb
jecxz
out
push
sbb
dec
push
fwait
xchg
mov
push
out
adc
adc
jecxz
or
es
addr16
mov
rol
insl
test
mov
lret
mov
shlb
mov
cs
ret
or
adc
jno
sub
push
das
insb
loopne
mov
push
and
stc
and
xchg
call
mov
fcompl
or
les
call
sbb
fld
in
mov
mov
pop
into
cltd
mov
sbb
mov
dec
or
adc
inc
push
pusha
adc
inc
dec
pushf
rcll
jnp
insl
into
xor
mov
in
movsl
scas
stos
stos
jne
popa
insl
xlat
push
dec
mov
jbe
cmc
jns
fs
pop
sub
jl
jecxz
dec
inc
ja
fsubrs
xchg
mov
in
adcl
dec
mov
mov
add
in
js
mov
sub
adc
les
mov
das
mov
jecxz
fwait
mov
jbe
imull
scas
and
daa
lret
lret
push
popa
xor
pop
negl
bound
mov
push
test
push
lret
jle
test
out
cld
lea
pop
call
aas
or
rorb
mov
sbb
ds
mov
push
or
push
mov
mov
push
xor
push
or
jb
lds
push
test
adc
in
int3
mov
push
pop
dec
jae
mov
lahf
js
movsl
test
push
dec
add
mov
fwait
test
or
jae
mov
cmp
enter
mov
insl
adc
push
xlat
push
dec
push
xor
stos
nop
pop
adc
dec
fbld
insb
movsl
mov
mov
sbb
aas
int
shlb
push
and
adc
mov
mov
imul
jae
enter
movsb
repnz
insl
sub
sbb
cmp
aam
or
jb
push
pop
xor
stos
loopne
push
dec
sti
in
xchg
int3
icebp
test
es
mov
dec
xchg
dec
mov
insb
arpl
cmp
mov
lods
mov
pop
pop
mov
xor
jno
sti
jo
xchg
xchg
or
cwtl
pop
adc
mov
inc
cmp
jp
popa
push
adc
into
pop
iret
sbb
xor
and
daa
inc
or
hlt
aaa
mov
aam
lds
lods
jno
mov
xor
testl
stos
rorl
cmp
adc
pop
fstps
in
sbb
incb
xor
sahf
repz
sbb
push
int3
xlat
test
shrl
jle
int3
cwtl
and
out
and
push
mov
xor
xor
shll
or
sub
stos
test
cmpsl
bswap
push
and
lret
stos
hlt
push
icebp
inc
nop
test
or
mov
push
pop
push
add
mov
scas
add
sbb
je
push
call
in
mov
in
xor
adc
cmp
dec
mov
inc
sub
mov
lods
pop
mov
fisttps
jne
outsl
xor
mov
loop
in
int3
or
xchg
lcall
xchg
out
adc
push
ret
lcall
loop
iret
dec
xchg
cmp
insl
jne
fildl
sub
pop
ss
sti
pop
out
stos
aad
aam
repnz
outsl
das
mov
xor
pop
mov
mov
mov
je
add
xlat
lock
jbe
gs
adc
cs
and
out
je
mov
mov
sub
xlat
rcll
push
sbb
xor
cmp
dec
jp
pop
js
in
icebp
aam
xor
fs
scas
add
cld
addr16
jl
dec
jl
mov
or
xor
cltd
mov
daa
jmp
ljmp
dec
js
mov
cld
cmp
in
div
push
sbb
bswap
insb
notl
imul
loop
add
jae
push
push
mov
nop
inc
fs
inc
and
arpl
mov
pop
sbb
lods
movsl
and
add
cmp
dec
mov
loop
mov
cmp
lret
xchg
stos
stc
out
lock
jo
pop
jecxz
pop
mov
mov
add
sbb
lret
lds
xlat
mov
fwait
aas
rorl
xchg
pop
xchg
or
or
hlt
xor
sbb
xchg
jo
dec
sbb
lods
mov
cmp
jbe
or
push
adc
jno
sarb
jns
cmp
xchg
fiaddl
fists
leave
mov
jmp
xor
lock
ds
aas
xor
push
jg
test
mov
test
out
in
inc
add
out
pop
dec
pop
jb,pn
ret
nop
xor
xchg
push
into
cs
xchg
stc
fidivrl
addr16
aad
push
mov
pop
in
and
dec
mov
mov
lcall
mov
jbe
cmp
inc
repz
add
pushf
sub
ss
lock
mov
add
repnz
and
shll
stc
jae
jne
push
push
sbb
and
cmp
out
shr
lds
int
jne
jne
lods
fcoms
add
jae
inc
mov
sub
popa
mov
push
fwait
lret
into
pop
ret
dec
gs
stos
sub
jb
push
xchg
push
mov
add
xchg
pop
dec
lret
addr16
adc
or
in
jae
dec
and
mov
in
and
mov
jmp
movsb
call
js
sub
xchg
arpl
mov
xchg
enter
rclb
fadds
adc
into
aam
ffreep
test
rcrb
fisttps
dec
mov
lods
lock
push
fdivl
add
xor
jg
mov
loopne
inc
jno
inc
aam
fcomip
cwtl
mov
mov
adc
scas
in
push
fistpl
subb
loopne
cmp
daa
mov
fcomps
into
push
add
movsl
xlat
dec
pop
fdivs
push
pop
mov
xor
jge
adc
cmp
cltd
pop
adc
imul
mov
cld
push
je
jmp
icebp
xchg
incb
imul
or
push
fimuls
mov
aaa
push
xchg
or
or
push
and
ss
mov
mov
stos
lcall
nop
sbb
test
rcll
out
sbb
inc
daa
pusha
push
std
xchg
push
aaa
scas
into
mov
inc
xchg
mov
cld
scas
clc
aad
cmp
mov
cmp
mov
pop
inc
jle
arpl
lcall
mov
or
lret
jecxz
adc
mov
push
inc
jp
or
js
mov
je
or
loope
jae
cwtl
dec
and
lods
pop
mov
mov
cltd
xlat
std
cmp
pop
movsl
mov
add
out
inc
fmul
test
cmp
stos
popa
bnd
and
sub
sub
fldcw
insb
arpl
adc
bound
push
xor
in
jge
stos
nop
rcl
mov
sub
dec
push
or
cmpsb
dec
pop
mov
daa
dec
fcoml
in
loopne
mov
mov
push
pop
jge
mov
mov
cmp
xchg
adc
and
imul
gs
fcoml
testb
cmp
hlt
jnp
test
push
lock
xor
pop
pop
test
loopne
loopne
sbbb
mov
lock
ds
neg
lods
rcll
scas
popa
push
xor
cwtl
cmp
test
movb
das
cs
mov
mov
fwait
jno
push
xchg
mov
fcmovb
bound
mov
popl
jnp
dec
jae
rclb
lock
push
pop
mov
out
add
xor
in
sub
sarb
push
daa
and
and
ja
jno
cmp
xchg
cmp
adc
stos
push
sbb
pop
and
inc
sbb
inc
add
inc
loope
adc
jns
inc
fsubl
push
cmp
push
xchg
pop
adc
icebp
daa
cmp
mov
pop
xor
icebp
pop
movsb
daa
sub
out
leave
stos
mov
int3
mov
dec
sub
sbb
jp
dec
std
adc
popf
insb
bnd
scas
sbbl
mov
mov
xor
jae
icebp
xchg
sub
mov
mov
orl
lret
in
pop
addr16
inc
cmp
jmp
stc
sarb
or
add
cmc
push
sub
fcoms
repz
mov
mov
iret
arpl
outsb
mov
fs
mov
or
das
repnz
dec
inc
jge
lret
into
pushf
pop
jno
sub
xor
test
jne
test
xor
pop
xor
mov
stos
mov
loope
or
pushf
sarl
xor
cltd
arpl
mov
dec
xor
mov
loop
test
leave
xlat
jecxz
push
xchg
outsb
dec
inc
cmp
lret
lock
mov
insl
mov
cmp
aad
stc
xchg
mov
push
data16
sub
and
imul
sbb
addb
inc
push
pop
push
push
aam
push
xor
sbb
adc
cltd
adc
dec
gs
xlat
pop
mov
gs
nop
sbb
shrb
daa
push
pusha
loopne
dec
mov
mov
pop
in
inc
mov
jp
dec
cmp
add
xchg
or
clc
jbe
add
xorl
mov
or
sbb
push
aaa
push
ljmp
cmp
sbb
adc
mov
lahf
movsl
rcrl
aaa
jnp
insb
mov
sti
and
dec
xor
mov
lahf
stos
inc
ss
fsubs
jno
rcr
cmp
out
pusha
inc
cmp
insl
cli
jb
jge
pop
pop
jge
cmpsb
adc
inc
fsubs
mov
arpl
cltd
add
adc
loope
stos
out
mov
roll
lret
cmp
out
pop
push
int
call
adc
inc
xchg
pop
movsl
sbb
loop
sbb
and
fisttpl
mov
jae
sub
add
jnp
jne
and
ret
cmp
call
fidivl
fidivrs
mov
out
push
rcl
cmp
push
or
push
or
push
dec
or
pop
lods
xor
lahf
cmp
clc
cmp
push
pop
notb
ja
jns
and
jecxz
or
andb
hlt
stos
sbb
lds
add
je
lahf
pop
mov
mov
inc
mov
pop
jp
jg
or
sbb
rorl
les
mov
into
insl
jne
or
inc
fcmovbe
cmp
das
movsl
pop
jo
insl
xor
call
pop
dec
decb
or
lods
rolb
aad
cmp
mov
movsb
inc
fidivrs
lods
add
push
push
mov
cmp
gs
mov
jae
in
int3
sub
fcompl
leave
dec
jbe
sub
dec
lods
mov
shr
push
testb
ljmp
scas
les
out
xor
outsl
mov
push
inc
imul
push
aad
sbb
push
mov
or
lcall
push
sbb
mov
lock
mov
shlb
push
insl
pop
push
jnp
lret
mov
fs
sub
or
std
test
sbb
dec
dec
rcrb
cmp
test
lock
cltd
xor
adc
inc
cld
scas
adc
xor
jle
pop
or
sub
push
aaa
mov
ljmp
fstl
pop
jns
addr16
pop
movsb
inc
ja
inc
ficomps
jns
mov
xor
push
pop
push
in
lock
add
adc
sub
addr16
test
iret
xchg
or
or
test
imul
pop
test
push
and
jecxz
inc
push
addr16
shll
shl
mov
scas
aas
mov
imul
dec
fdivr
add
ljmp
fbld
popf
cli
jb
inc
out
pushf
lock
gs
test
push
in
add
mov
sarl
adc
fmuls
adc
jno
push
cmp
mov
add
xchg
xchg
mov
in
push
and
movsl
jl
lret
addr16
mov
aas
mov
mov
or
mov
xchg
movsl
cmp
lea
push
lahf
in
fwait
loop
mov
lea
jl
xlat
jmp
ss
fisubs
cmp
cmpsl
xor
enter
mov
adc
push
jno
push
or
xchg
loop
fmull
loopne
addr16
test
icebp
mov
fdivr
and
je
and
jae
pop
mov
sti
movsl
and
dec
sbbb
fiadds
mov
fstl
mov
push
and
mov
pop
sub
jecxz
loope
sbb
fbld
fiaddl
cmpsb
popa
xorb
into
dec
mov
cmp
repz
jb
lods
mov
out
dec
add
add
in
pop
cmp
push
mov
inc
sbb
imul
iret
daa
aaa
sbb
xor
xor
xchg
mov
and
and
cld
fwait
cltd
call
andl
mov
mov
sarl
mov
mov
lcall
mov
daa
ret
sub
mov
lcall
pop
enter
xchg
sbb
fsts
loop
inc
and
cli
aam
scas
hlt
mov
stos
add
nop
add
lock
mov
xchg
xchg
pop
nop
mov
push
fldenv
cmp
or
mov
rcll
or
push
lahf
xchg
sti
sahf
roll
hlt
push
and
cmp
scas
mov
pop
dec
xor
fsub
adc
mov
sahf
pop
push
repnz
cwtl
sar
push
mov
pop
pop
iret
dec
add
mov
xchg
shll
arpl
pop
scas
imul
inc
jb
pop
in
xor
push
or
xor
mov
jp
cwtl
xchg
inc
fdiv
mov
jl
inc
mov
cmpsl
xchg
inc
fildll
insb
cli
mov
push
add
mov
adc
cwtl
jae
es
ljmp
mov
lea
dec
xor
adcl
sbb
lahf
popa
mov
or
pop
js
pop
int
mov
test
dec
insb
fnstsw
and
pop
bound
mov
andl
rorb
mov
adc
jg
dec
movsl
mov
aaa
add
cmpsb
dec
lods
fistpl
cwtl
add
jbe
sub
lock
inc
in
jb
stos
mov
sti
xchg
call
mov
jmp
push
inc
jl
add
test
pop
mov
sbb
repnz
shlb
xchg
lret
push
fistpl
adc
push
xor
push
mov
mov
fmuls
pop
bound
sbb
pop
nop
push
mov
xorb
and
loop
mov
inc
pusha
adc
repnz
mov
adc
data16
push
and
cld
and
addb
pop
xchg
jmp
add
repnz
jge
mov
sbb
sbb
ret
or
adc
cli
xor
push
mov
cmp
inc
inc
push
test
daa
lds
enter
sbb
pushf
sub
and
aas
bnd
push
inc
dec
inc
out
add
daa
sbb
in
das
gs
inc
xor
mov
jno
sbb
stos
push
push
jb
cltd
mov
add
mov
mov
mov
push
inc
inc
adc
xcrypt-cbc
cmpsl
adc
mov
and
fcoms
add
dec
lds
or
movsb
int
xor
or
test
in
in
in
sbbb
mov
xchg
push
es
mov
test
cmp
std
adc
push
sub
jl
lods
mov
sbb
insb
mov
repz
in
movsl
sarb
mov
and
pop
inc
jnp
xchg
xchg
into
and
int3
mov
mov
pop
test
icebp
shrl
and
jmp
jmp
in
movsl
inc
push
int3
jecxz
mov
cltd
ret
cli
jns
das
pop
ss
je
popf
xchg
daa
xor
mov
insl
push
sbb
lods
jae
loope
cltd
pop
push
mov
data16
pop
add
cwtl
cmp
cmp
mov
dec
lea
or
pop
pop
xor
xchg
push
test
jb
lcall
xchg
mov
inc
mov
mov
jae
pop
mov
jge
xchg
dec
loop
xorb
test
jmp
push
icebp
lret
jo
xchg
sarl
jge
or
cmpsl
mov
xor
dec
andl
mov
jle
flds
push
xchg
int
adc
cmpsl
rorl
push
sbb
mov
mov
shlb
out
or
push
mov
cmp
sub
fcompl
jo
sub
and
nop
dec
loop
out
aam
mov
and
lds
sbb
cli
xor
inc
shrl
xor
jle
and
pop
gs
repnz
in
push
adc
ret
inc
xor
leave
mov
xlat
not
test
and
jo
cltd
das
out
stc
scas
insl
mov
mov
xchg
adc
stos
pop
mov
add
outsl
cmp
stc
cmp
ret
pop
inc
and
cmp
inc
adc
sub
lock
dec
lahf
mov
mov
scas
xchg
xor
ljmp
imul
or
push
adc
push
sbb
mov
lcall
add
test
sub
push
mov
mov
jmp
dec
inc
fcompl
xchg
in
addb
push
outsl
push
aas
or
cmp
nop
fmuls
xchg
outsb
pop
mov
cmpsl
lret
dec
mov
sti
xor
js
dec
ja
stos
jmp
lock
jne
xor
mov
daa
clc
popa
pop
jbe
mov
mov
mov
loop
add
addl
out
xchg
shlb
mov
pop
das
repz
lcall
push
fistpll
mov
clc
push
lret
ret
repz
or
jmp
push
data16
stos
repnz
loope
aaa
pop
stos
push
pop
mov
xor
xlat
insb
jb
repz
and
mov
push
es
mov
test
je
fwait
movsl
int
repz
push
hlt
sahf
js
iret
inc
mov
mov
call
mov
subl
inc
mov
scas
jecxz
adc
xchg
xchg
sbb
mov
pop
arpl
xchg
lret
push
test
insb
movsb
add
movsl
add
or
fsubl
mov
in
das
call
sbb
jne
repz
mov
xor
sbb
shlb
cs
xchg
push
mov
or
ret
popf
out
jg
xor
and
daa
xchg
in
inc
imul
mov
lods
aam
arpl
insb
inc
es
mov
sub
pushf
or
dec
imul
lods
shlb
push
jecxz
pop
mov
cmp
insl
fldenv
sbb
lahf
jno
cs
cmc
mov
jmp
imul
ds
ret
popa
dec
jg
lds
push
outsb
mov
jnp
cmp
sbb
pushf
sahf
mov
adc
and
in
jg
fldt
add
add
fnsave
xchg
rorb
push
cli
test
ret
ret
stos
jle
sbb
int3
jge
cmpsb
dec
call
push
xchg
sbb
inc
jle
icebp
push
in
je
test
rcrl
addr16
fildll
mov
aam
fadd
push
or
jmp
push
inc
dec
inc
ss
pop
arpl
pop
sbb
jns
mov
dec
sbb
stos
mov
dec
push
and
sahf
add
je
sbb
int3
or
pop
je
aaa
sti
and
push
sbb
jp
adc
in
lock
sbb
nop
xor
lea
or
jg
test
in
stc
loop
mov
mov
out
pop
test
in
pop
sbb
sub
xor
iret
imul
loopne
push
jle
cmc
pop
ror
dec
cmpsb
adc
notl
mov
loop
outsl
sti
and
fsubr
and
outsb
lods
add
repnz
ret
stos
dec
sub
loop
test
insl
fistpl
sub
test
xor
pop
aas
jb
divl
pop
lcall
dec
cld
ss
jecxz
stos
mov
dec
insl
sbb
bound
adc
and
rorl
enter
push
ja
insl
mov
push
sub
mov
mov
push
loop
js
push
xor
test
cmp
fsubr
outsb
sub
icebp
xor
mov
icebp
xchg
or
push
imul
pushf
jnp
subb
mov
fsubs
jge
xchg
inc
popa
push
aam
out
mov
movsb
dec
popa
add
pop
nop
or
andb
adc
ficomps
loope
dec
pop
and
push
or
sub
xor
lea
clc
xor
xor
inc
test
rclb
dec
mov
fbld
cmpsb
loop
test
mov
leave
sub
mov
stos
fwait
lock
jo
xlat
js
dec
lock
dec
scas
and
test
xchg
mov
and
cmp
insl
pop
loopne
je
xchg
inc
lret
pop
loopne
sbbb
add
lds
push
xchg
das
aam
push
pop
call
cmp
out
cld
test
mov
xchg
push
test
sub
aam
and
cwtl
pop
mov
das
or
mov
daa
ja
jo
xchg
into
xor
fucomi
or
pop
inc
in
js
repnz
fprem1
ljmp
scas
outsl
insl
add
or
cmp
dec
out
mov
jecxz
sub
or
das
sub
clc
mov
and
out
jo
test
leave
cmp
push
push
fadd
out
cltd
roll
fcompl
dec
xor
jnp
mov
mov
cmp
mov
xor
shlb
cli
add
pop
mov
std
sbb
push
sahf
nop
out
jmp
mov
jp
lock
iret
faddp
ret
mov
std
movsb
mov
xor
clc
ljmp
dec
fs
xor
mov
mov
cld
inc
mov
ds
mov
dec
jmp
and
cmp
out
in
jmp
fdivr
fists
xchg
in
call
in
in
push
mov
mov
xchg
sbb
push
scas
xchg
xchg
outsb
popf
inc
xchg
and
loopne
pop
mov
xlat
mov
mov
sbb
lahf
es
mov
dec
sub
outsl
mov
addl
mov
fwait
das
pop
hlt
jp
or
jnp
lods
add
mov
pop
andb
mov
pop
xchg
mov
mov
mov
mov
xchg
cmpsb
sbb
cmc
data16
test
jle
jg
xchg
fisubrl
aad
test
insl
push
dec
inc
sbb
shll
adc
push
outsl
inc
enter
pop
jge
inc
push
mov
and
fistpl
add
in
mov
shlb
and
sub
cmp
xchg
xor
sti
pop
subb
xchg
mov
pop
arpl
push
fdiv
ss
jae
pop
mov
mov
insb
ret
out
cmp
das
push
jae
jg
in
incl
lret
adc
inc
mov
stc
in
dec
int
jnp
add
sbb
lahf
mov
fstps
push
rclb
add
loopne
test
sti
mov
andb
dec
or
sbb
lea
out
lock
mov
pop
dec
mov
shrl
mov
andl
pop
into
mov
cwtl
push
jns
mov
or
shlb
aad
push
and
adc
sbb
or
pop
cli
push
add
enter
imul
inc
inc
jb
push
sbb
lods
paddsw
mov
or
mov
adc
mov
das
jo
sbb
xor
push
inc
jno
jo
add
loopne
pop
mov
and
ja
mov
cmp
hlt
xchg
mov
sbb
out
pop
xor
arpl
aaa
dec
xchg
outsb
insl
mov
out
mov
or
insb
andl
lcall
lret
mov
or
mov
cmpsw
inc
sbb
sti
xchg
or
cmpsl
mov
stos
loope
test
inc
test
sbb
pushf
jg
cmp
xchg
xorb
push
cwtl
mov
mov
jne
int
adc
lods
stos
adc
or
push
xchg
xchg
out
ss
stos
sarl
inc
out
cltd
shlb
xor
mov
xchg
test
and
and
jno
pop
in
daa
enter
pop
sar
in
shrb
repz
lods
cmpxchg
pop
add
mov
xorb
add
add
sub
sub
push
xchg
mov
std
scas
ljmp
insb
pop
addr16
out
hlt
ds
sub
push
sahf
pop
ret
mov
push
fbstp
sub
arpl
cmp
gs
int
or
pop
scas
xor
and
cmp
dec
cmp
push
pusha
shrl
cli
daa
xor
sub
cmc
mov
lret
bound
insl
jb
fs
dec
xor
jnp,pn
shrb
xor
mov
stos
or
and
or
xor
sub
cmp
lahf
jb
or
dec
push
add
dec
dec
dec
xor
repz
inc
je
jmp
shl
femms
dec
fcmovbe
repnz
rcll
imul
jecxz
sbb
call
sbb
repz
mov
add
cmp
cmp
or
cmpsl
jb
pop
inc
sub
add
adcl
mov
xor
or
ljmp
xchg
adc
iret
fildl
outsb
xor
mov
das
daa
scas
xchg
cli
mov
aas
iret
repnz
subl
inc
cmp
add
stos
jno
in
lret
or
sbb
cmc
fucomi
loopne
or
pop
loopne
cltd
insb
or
out
inc
mov
fsubl
dec
jge
lea
ss
repz
jg
stos
outsb
adc
roll
xor
sbbl
or
and
jbe
lods
sti
ja
popf
movsl
xchg
out
and
les
sbb
stos
movsl
xor
xchg
jg
cli
cmp
xor
repnz
loopne
les
dec
or
mov
insb
cmp
jo
rcr
mov
xchg
sahf
xchg
out
xchg
dec
mov
add
cmp
repnz
out
fcoms
test
mov
sub
or
jb
add
scas
notl
pop
pop
out
push
out
jbe
sbb
adcb
pop
sbb
enter
mov
cmp
fldt
sub
jnp
cmp
push
inc
icebp
mov
stc
xor
adc
jp
xchg
xchg
pop
movsl
mov
js
fstcw
cmp
insb
pop
or
or
add
sub
int
shll
popf
iret
xor
ja
push
pushf
fildl
in
inc
cmc
mov
pop
mov
mov
add
adc
das
push
push
mov
push
in
adc
ret
add
push
loop
jo
cs
push
ja
lds
jecxz
je
shrl
movsl
sub
and
xor
fcoml
xlat
aad
out
pop
mov
test
es
push
or
add
insl
add
loopne
cmpsl
shll
lods
jne
cli
into
fisttpll
imul
inc
xor
cmpsb
rcll
adc
fisttps
cmpl
sbb
adc
push
mov
add
add
rcrb
inc
inc
jp
aas
xorl
or
sbb
lret
mov
repz
popf
lret
cltd
leave
inc
mov
shl
dec
xchg
inc
dec
inc
and
cli
loope
sbb
js
jmp
sub
dec
push
xor
jb
les
jmp
push
lret
xor
aad
pushf
test
loop
cmp
cs
inc
ds
pop
dec
or
loope
push
fwait
add
sbb
dec
in
adc
movsb
lods
add
or
mov
fwait
cmpsl
cmp
ds
cmp
add
loope
loope
and
mov
js
outsb
xchg
imul
decl
push
into
push
or
mov
pop
roll
cld
jne
or
scas
rclb
xchg
mov
sub
mov
sub
bound
mov
les
mov
ss
jmp
push
jns
mov
call
jle
fst
out
dec
jl
subl
pop
jl
jae
jge
push
sub
xor
ja
xchg
push
in
adcb
jg
or
add
adc
sub
popa
inc
das
mov
mov
fcomi
popa
lret
xchg
lahf
out
dec
add
fucomp
add
aad
outsl
arpl
lods
pop
dec
adc
hlt
xor
out
mov
dec
js
data16
mov
jl
fnstcw
and
and
xor
jo
pop
shrb
loopne
or
sub
mov
cwtl
jb
lret
xor
xor
out
lret
test
jl
arpl
orl
cmp
frstor
fcmove
jnp
pop
scas
fidivrs
pop
mov
inc
bound
lods
ds
sahf
pop
cltd
push
addr16
jb
mov
jl
add
rorl
mov
ljmp
daa
idivb
push
mov
inc
pop
jp
fnstsw
and
cmp
or
xor
mov
jg
popa
cmp
imul
inc
mov
push
xchg
cld
mov
sbb
pop
add
push
add
xchg
cmp
and
xchg
cmp
push
and
out
cmp
xor
loope
mov
ja
je
xchg
stos
lds
sbb
sbb
stos
in
fcmovne
inc
fdivs
mov
xor
out
std
std
xchg
lock
lret
out
out
fstl
cmpsl
pop
push
lcall
xchg
dec
cmpsb
add
popf
cs
push
sub
lcall
pop
in
addr16
cmc
lods
mov
test
sbb
ficoms
subl
dec
cmp
mov
loope
mov
hlt
xchg
mov
addb
in
xlat
shlb
or
aas
es
enter
pop
call
test
rcl
outsb
dec
cld
aas
xchg
add
aaa
out
js
jge
rcll
in
rcrl
dec
mov
faddp
clc
pop
mov
pop
inc
std
push
shl
mov
mov
or
add
jle
mov
or
fdivrs
test
imul
out
ljmp
sbb
jecxz
sub
xchg
add
xor
add
jl
insb
cmp
scas
stos
inc
dec
sub
pop
lods
adc
or
fucom
mov
clc
inc
aad
pop
icebp
fldenv
pop
adc
mov
mov
das
pop
ljmp
sbb
inc
std
sahf
xchg
popf
dec
cmp
push
lret
dec
adc
push
jnp
notl
or
in
shll
adc
movsl
in
cltd
js
dec
add
jnp
sbb
push
pop
rol
mov
cltd
sbb
in
or
addr16
dec
nop
lret
xor
outsb
nop
cmp
inc
and
mov
mov
pushf
fdivl
aam
test
jge
xor
xor
inc
jno
sbb
add
outsl
lahf
dec
test
sti
or
sti
mov
or
sub
and
dec
xchg
inc
push
stos
dec
andb
or
sbb
cltd
ss
sahf
pop
shrb
das
lea
scas
enter
mov
stos
movsb
xor
loop
lret
in
psadbw
fists
mov
sub
push
popf
mov
das
mov
adc
pusha
ljmp
mov
lea
call
jae
lods
stos
or
inc
outsl
pop
jg
lods
lods
das
pop
mov
lds
inc
test
mov
push
cmp
jno
cmp
xchg
repnz
sub
mov
js
push
push
lret
xor
or
scas
lods
add
test
cmp
outsb
fs
iret
mov
pop
inc
jb
mov
mov
lods
mov
fwait
xor
loopne
push
mov
add
and
add
stos
inc
add
mov
sub
xor
aas
pop
inc
xor
das
lods
xor
adc
vaddss
out
push
jecxz
and
inc
or
fstpt
mov
dec
pop
pop
das
andb
xor
add
or
test
cld
mov
nop
sbb
mov
xor
xor
cwtl
ret
mov
sbb
lods
xor
subl
mov
dec
scas
dec
nop
lods
in
ljmp
loope
ret
push
or
cmp
jbe
pop
sub
or
lahf
and
mov
add
insb
mull
jecxz
inc
mov
xor
jns
adc
cwtl
sub
movsb
fistps
jg
push
inc
xchg
dec
lock
cmpsb
movsl
fs
sbb
loope
dec
insl
aas
fistpl
test
push
push
lret
adc
in
imul
mov
lcall
test
mov
fs
mov
dec
in
mov
xchg
fsubrs
adc
stos
xchg
mov
cmp
repz
push
jle
fs
inc
cwtl
andl
addr16
dec
sbbb
mov
pop
idivl
mov
pushf
adc
ret
lea
lret
test
shrl
xlat
rolb
xchg
mov
xchg
scas
cmp
sbb
mov
cmp
arpl
sub
jge
into
dec
push
adc
sbb
add
xor
jno
lret
sub
lds
outsb
rcll
test
out
in
xor
fwait
sub
mov
jecxz
dec
jp
or
movsb
jns
or
adcl
sub
jnp
inc
icebp
xlat
mov
mov
loope
lods
sub
dec
aas
xchg
add
test
cmpsl
inc
or
lcall
pop
mov
in
adc
iret
cmc
andl
dec
fisubs
sarl
jbe
cmpb
xchg
xchg
add
ljmp
in
stos
xor
lcall
repnz
mov
push
jge
daa
decb
jnp
fnstenv
xor
test
cltd
cmpsb
andl
jmp
andb
addr16
rcrb
jno
sbb
jbe
jno
mov
je
je
xor
out
je
cmp
stos
push
ljmp
cwtl
adc
fwait
xor
xor
lods
test
scas
ret
int3
js
call
rorl
sub
or
test
mov
cltd
cmp
xor
lods
sarb
decb
movsl
ds
push
sbb
call
outsl
sbb
add
mov
fdiv
mov
inc
mov
xchg
out
cltd
push
fldt
xor
repz
std
mov
sub
test
scas
aam
out
sahf
sbb
or
pop
rorb
cmp
mov
lock
clc
sub
add
mov
mov
lock
xchg
sarl
cwtl
std
mov
fdivrl
icebp
mov
jnp
std
jb
xchg
cwtl
jbe
dec
out
les
xor
loopne
jle
mov
pop
mov
outsb
or
xchg
fadds
mov
out
aaa
xchg
fwait
aas
cmp
adc
jae
stos
ror
jg
lret
jae
insl
shrl
notb
mov
mov
scas
fs
aaa
or
jo
lret
cwtl
gs
repnz
pop
popa
in
jg
or
hlt
cmp
push
jp
mov
jge
inc
jbe
xchg
test
xor
push
outsl
daa
cmp
stc
dec
or
das
mov
xor
pop
jb
fs
movsl
push
insb
inc
dec
int
leave
jo
add
xchg
sub
add
ljmp
movl
lret
ja
movsb
repnz
lds
jnp
mov
fs
les
lods
lahf
or
push
idivb
add
xor
in
push
fstpl
inc
pop
xchg
inc
jne
add
mov
mov
mov
je
xor
call
sub
jp
fsubrs
shlb
nop
jnp
adc
jg
mov
jnp
jae
adc
pop
mov
lret
jne
add
jp
mov
gs
xlat
inc
jae
dec
sbb
lock
jno
data16
fs
aad
mov
fistl
repnz
push
push
stc
adc
inc
mov
clc
jecxz
sbb
jl
xlat
adc
xorb
or
lods
inc
pop
cmp
mov
aad
iret
cli
loop
hlt
leave
mov
pusha
xor
mov
sbbb
cmp
cmpsl
cmpsb
lods
sahf
inc
jno
or
aas
in
sarl
dec
rcll
addl
iret
jl
into
ljmp
pop
push
xor
push
pop
pop
shrb
std
sahf
push
and
inc
sahf
or
sti
sbb
lcall
cmp
mov
pop
popa
or
pop
inc
dec
lcall
fwait
cmp
cmp
add
mov
dec
lret
sbb
push
mov
mov
lret
pop
daa
decl
clc
push
mov
xchg
inc
inc
mov
xchg
int
xor
lock
pop
mov
imul
mov
sub
outsl
shll
repnz
sub
mov
mul
ret
mov
push
movsb
adc
dec
jg
fmull
mov
mov
adc
jmp
and
ficompl
cmpl
add
cmp
cmpsl
push
ja
test
xchg
das
mov
xchg
out
xchg
pushl
lods
push
or
dec
sub
pop
xor
push
imul
sub
leave
and
out
jae
shll
testb
or
cltd
dec
mov
inc
xchg
pop
xorl
popf
cs
pop
icebp
fwait
cmpsb
and
xchg
jmp
insl
jnp
cld
cli
int
repz
jg
mov
xchg
ret
addb
dec
lds
sub
fst
sub
adc
and
add
and
mov
cmp
mov
in
mov
inc
aad
test
xor
jns
add
inc
pop
pop
cmp
test
xchg
fldenv
aas
cli
push
cmpsb
ret
lock
or
pop
arpl
lods
rcll
cmp
jae
pop
cmpsl
and
mov
lods
mov
in
mov
mov
not
sbb
daa
mov
inc
mov
cmp
arpl
mov
inc
push
jmp
pop
mov
cmp
sub
in
jp
pop
cmc
mov
in
cmp
add
daa
adc
movsb
mov
inc
lret
xor
scas
xchg
push
or
int
mov
sbb
xchg
pop
jnp
jno
sub
jbe
sbb
cmp
adcl
mov
cmpsl
mov
and
sub
aad
or
fldt
and
stos
les
adc
call
mov
iret
mov
popa
out
pop
push
pop
mov
sbb
inc
test
daa
in
imul
fistps
loop
clc
or
sub
popf
dec
adc
cltd
stos
add
pop
cmp
xchg
testb
jbe
iret
inc
push
nop
dec
xchg
in
sub
jge
mov
imul
jmp
int
xchg
push
iret
lahf
jne
dec
pop
inc
roll
enter
pop
prefetchw
adc
ljmp
mov
xchg
adc
rcrb
dec
jnp
push
imul
dec
pop
negb
push
sub
repz
cs
sbb
mov
stc
lahf
testb
movsb
in
div
push
sbb
add
push
xorb
stc
inc
fildl
outsb
push
sub
jae
call
cmp
mov
popf
jno
nop
mov
test
mov
adc
jno
lods
out
dec
jns
mov
mov
xchg
mov
add
aad
in
push
sub
add
lret
inc
arpl
mov
mov
jnp
loopne
mov
lods
ds
sbb
fsub
lahf
dec
mov
mov
ljmp
jnp
mov
dec
cli
add
xor
xchg
jb
fildl
dec
mov
add
xchg
es
out
mov
arpl
movsl
sub
cmp
je
nop
lcall
xor
in
sbb
repnz
call
or
in
sub
lret
inc
cmp
fstl
mov
mov
leave
sbb
rclb
loopne
test
mov
inc
push
or
adc
mov
cmp
dec
inc
dec
mov
ds
jg
in
mov
idiv
ljmp
insb
and
pop
test
jecxz
pop
iret
je
fwait
jge
andb
pop
inc
imul
and
xlat
loop
pushl
add
mov
sbbl
cli
outsb
mov
shl
xor
jecxz
ljmp
pushf
jbe
lods
jmp
leave
cwtl
pop
pop
and
push
mov
push
out
adc
xor
cmpb
or
call
mov
dec
daa
jl
lds
push
mov
dec
push
sub
sub
scas
push
or
cmpsl
scas
sbb
dec
ftst
mov
mov
or
mov
das
push
sub
je
pop
ja
shlb
pop
inc
fsubrs
lret
out
cmp
into
sti
pop
sub
xor
mov
test
lahf
inc
addr16
inc
fstps
mov
mov
push
jne
sub
mov
bnd
outsb
xlat
iret
mov
or
idiv
xchg
ljmp
insl
inc
rcr
hlt
dec
in
push
dec
and
push
icebp
daa
mov
outsl
js
test
mov
mov
inc
xchg
and
repnz
push
jmp
xchg
jno
inc
push
adc
out
fs
int3
sbb
add
negb
pop
xorl
or
inc
push
inc
inc
stc
xchg
movsb
data16
push
adc
inc
cli
fiadds
or
cmp
cld
popf
pop
push
sub
push
jo
mov
pop
adcl
aaa
sbb
cmp
lods
mov
cld
pop
or
pop
sub
fdivl
enter
sbb
cmp
push
jns
add
shlb
lret
in
cmp
dec
sbb
lods
lds
push
push
aaa
cmpsb
dec
shlb
fdivrs
pop
mov
sarb
pop
dec
stos
xchg
lds
stc
mov
push
cmp
andb
in
imul
loopne
add
insb
aam
jg
test
in
loopne
sub
sub
pusha
idivl
dec
fbld
cmp
adc
pop
pop
pop
inc
pop
es
sarb
popa
pop
dec
inc
movsl
mov
inc
cmp
push
js
jbe
int
pop
jne
test
jne
fsubrs
inc
sub
je
dec
addr16
mov
xchg
jne
mov
xor
push
cmpsl
ljmp
adc
inc
adcb
mov
lcall
clc
in
lret
inc
ss
inc
or
inc
mov
es
mov
aam
xchg
push
aad
repz
jecxz
hlt
fwait
into
inc
inc
push
shll
or
mov
lods
inc
iret
sub
jl
push
dec
iret
push
push
ljmp
dec
xlat
mov
jns
mov
sahf
cwtl
xchg
aam
push
jp
scas
adc
adc
pushf
xchg
jbe
jne
and
mov
cmc
sbb
adc
inc
inc
data16
mov
iret
out
add
inc
xor
or
cli
or
mov
cmp
popf
out
icebp
int
xor
ss
out
jg
jae
dec
pop
popf
sahf
mov
or
loope
mov
stos
je
sub
mov
popf
lcall
inc
andl
fwait
dec
jg
in
les
dec
movsl
add
push
inc
and
add
dec
mov
movsb
lds
sub
jl
sbb
inc
sub
rorb
jb
stos
scas
xor
sub
data16
jbe
mov
push
mov
jmp
jle
into
imul
mov
loop
or
lds
stos
sbb
xor
pop
mov
inc
popa
movsl
jbe
mov
repz
add
fstps
xchg
xor
aaa
jge
cmp
xor
cmp
pusha
in
or
stos
js
or
test
jge
lods
sub
pop
dec
popf
int
pop
dec
into
sahf
xchg
cmp
rcl
outsl
rclb
popf
rcr
stos
cmp
mov
aaa
mov
mov
xchg
add
imul
pusha
cmp
ficoms
rorl
outsb
pop
test
leave
and
pushf
icebp
repnz
imul
test
aas
nop
cmp
in
ljmp
xor
int3
push
jecxz
push
test
mov
adc
cmp
xor
test
push
push
mov
xchg
inc
push
cwtl
arpl
jmp
int3
sti
add
wrmsr
push
adc
jmp
fs
js
jne
mov
push
gs
outsb
pop
imul
push
stc
push
das
inc
sub
outsl
je
stc
lret
or
pushl
pop
stc
call
movsb
push
and
mov
faddp
inc
adc
movsl
pop
push
and
mov
cmp
inc
mov
sbb
out
cmpsb
mov
aaa
jmp
push
ficomps
mov
ret
jge
je
shrl
or
test
push
arpl
push
cmp
lods
fcmovu
movsb
pop
pop
xorb
push
xchg
repz
out
fcomps
xor
xor
sbb
popf
mov
stos
mov
cmp
sub
push
in
sub
lods
push
pop
loopne
pop
rorb
inc
in
sbb
cmp
arpl
push
push
in
mov
mov
sahf
mov
mov
mov
mov
enter
dec
inc
movsl
in
test
mov
push
cmpsb
cmp
enter
xor
gs
jmp
pop
inc
push
scas
aad
add
stc
and
dec
fs
pop
movsb
sahf
mov
ficompl
imul
ret
inc
stos
pop
jge
mov
loopne
mov
dec
cmp
mov
int
dec
sbb
mov
rcrb
sbb
dec
lahf
xchg
mov
push
mov
mov
lods
aaa
scas
lea
cs
inc
rorb
cmp
inc
mov
test
stc
and
or
cli
in
shr
pop
push
or
rcrb
push
mov
xlat
mov
mov
jge
push
mov
scas
sbb
mov
jno
pop
js
inc
and
jo
aam
repz
movsl
cmpsb
js
xchg
test
rolb
lods
bound
sub
aad
popf
adc
xchg
shrl
in
cli
lea
aaa
les
inc
idivl
jg
lods
ljmp
add
pop
mov
test
mov
mov
fldt
iret
lods
lods
jecxz
icebp
loopne
test
mov
data16
xchg
aas
out
push
popf
out
pop
mov
lcall
aad
das
xlat
stc
mov
add
push
adc
ret
pop
arpl
popf
inc
test
orb
and
out
fdecstp
xor
xchg
or
stc
dec
lcall
sysenter
mov
insl
inc
test
arpl
and
in
adc
adc
addb
cmp
loope
pop
adc
sbb
divl
lret
push
or
lds
mov
cmpsb
fnsave
xchg
shll
push
cmp
xlat
pop
xlat
std
lods
sub
aad
pop
bound
fwait
and
add
lret
rcll
and
sub
cmp
das
fnstenv
fimull
jne
sub
int3
cwtl
and
subl
push
push
mov
gs
jle
aam
out
pop
cld
mov
dec
cmp
xchg
jecxz
sbb
mov
jp
je
xor
aad
add
fildll
xor
imulb
jae
xchg
in
or
push
push
add
push
imul
int3
fcomps
adc
xchg
push
ror
clc
cmpl
jbe
or
and
pop
test
enter
loope
aam
lcall
stos
jg
sub
aad
xor
loope
int
test
xlat
pop
pop
cmpsl
mov
movb
mov
seto
mov
or
cmpsb
mov
shlb
xchg
loop
add
bound
nop
pop
adc
lahf
dec
scas
push
fwait
inc
jp
imul
sahf
loop
ds
adc
call
cmp
loop
xor
sub
xchg
cmc
cmp
std
in
cmp
or
cmp
sbb
sti
add
lds
jmp
fdivrp
adc
addr16
stc
push
sub
adc
std
shll
aad
cmpb
xor
pop
push
mov
fnsave
mov
push
scas
int3
xchg
mov
dec
popa
xchg
fcompl
push
push
adc
cld
fnsave
cli
mov
xchg
lds
icebp
mov
dec
iret
mov
pop
xor
aam
jle
mov
sbb
rorl
inc
push
scas
mov
stos
jnp
nop
sub
xchg
dec
fucom
test
ds
sbb
ret
mov
xlat
mov
cmp
daa
das
push
popa
insb
ret
fsubrl
mov
jl
pop
cwtl
push
fisubs
lret
fs
push
push
mov
sarl
jno
out
test
xchg
ja
loope
push
pop
mov
cli
mov
inc
cmp
cmp
jbe
cmp
pop
push
xchg
xchg
fstpl
adc
sbbl
in
insb
jmp
js
fdivs
loopne
popf
les
jp
and
loope
ret
std
lret
ds
jl
and
mov
fsubp
popf
and
add
ds
push
push
das
sub
pop
add
test
mov
xor
add
xchg
in
or
sub
pop
jne
dec
sub
and
sub
pop
out
or
or
mov
mov
out
pop
dec
xlat
adc
cmp
fbld
mov
aaa
cwtl
lcall
jmp
or
cli
subl
xor
mov
dec
cmpsb
fwait
shlb
and
imul
mov
dec
sbb
adc
lods
imul
das
daa
sarl
stos
xchg
and
out
leave
hlt
cld
or
cmp
xchg
rolb
and
lcall
cltd
rcl
lret
aas
push
pusha
dec
xor
mov
faddp
addr16
aad
adc
and
ret
or
push
push
ret
fidivs
mov
xchg
stos
cs
xchg
sub
pop
pop
iret
lcall
jbe
outsl
push
lods
pop
or
sub
sbb
scas
addr16
cmpsb
mov
outsl
mov
and
and
into
outsl
dec
adc
cmp
cmp
jne
or
sti
fildll
stc
push
jp
mov
repz
dec
mov
pop
dec
add
sub
out
mov
xchg
mov
mov
mov
lock
dec
push
inc
mov
cmpsb
out
xchg
pop
mov
lock
lea
cmp
mov
push
dec
loope
repnz
jecxz
lock
adc
mov
popf
adc
shll
insl
cmp
and
dec
dec
mov
leave
mov
jno
pop
xchg
shrb
mov
sbb
jae
test
mov
cld
aad
mov
int
aam
inc
inc
pop
jl
cmp
bt
cld
and
sbb
inc
dec
sub
mov
dec
dec
mov
and
repz
pop
ret
push
xor
jnp
int3
push
mov
pop
push
shlb
in
pop
not
stc
xchg
ja
adc
dec
xor
enter
mov
mov
jnp
sbb
adc
add
stos
jle
ds
jb
bound
mov
pop
cmpsl
pop
sbbb
cwtl
leave
fbld
int
add
add
cmovl
xchg
mov
pop
mov
addr16
jns
xor
pop
repz
ret
in
stc
stos
arpl
and
mov
inc
or
and
cmp
lea
mov
ret
jg
dec
cld
shlb
inc
jge
dec
iret
scas
in
ret
mov
pop
repnz
aaa
xlat
sub
int3
mov
sub
sbb
arpl
mov
stos
cltd
dec
add
sti
adc
repz
lds
jle
sub
icebp
xchg
les
repz
rorb
jnp
sbb
in
addr16
or
loopne
add
aas
mov
xor
je
or
movsb
shl
test
arpl
clc
es
outsl
push
pop
sbb
scas
mov
push
mov
dec
sbb
add
pop
bound
call
test
jg
outsb
push
push
ljmp
xor
xchg
xchg
cmp
outsb
jb
in
mov
push
and
sbb
sti
cmc
popa
push
inc
rorb
xor
into
inc
ja
xlat
jg
mov
pop
pop
call
ficomps
movsl
sbb
inc
invd
dec
pop
xchg
and
ret
mov
dec
mov
out
sbb
jecxz
add
std
jns
movsb
fdivp
pop
sbb
cmp
adc
xchg
enter
push
inc
sub
inc
fwait
movsb
rolb
fdivs
call
push
fsubl
push
jg
xchg
or
cmpsb
jne
push
push
into
outsl
push
enter
test
xchg
cmp
push
push
fimuls
into
push
fsubl
push
mov
jecxz
enter
lods
cmc
xlat
dec
and
push
sub
push
jne
and
ret
jbe
jecxz
stos
fsubr
sbb
cwtl
xor
out
pop
sub
jno
inc
xchg
sbbl
mov
cmp
pop
mov
fisubs
mov
jecxz
mov
shlb
lahf
inc
test
cmp
pop
fcmovu
loope
movsb
xchg
push
cmp
xor
jae
adc
lret
rorb
pop
movsl
arpl
arpl
scas
mov
dec
mov
jne
fimuls
icebp
xchg
imul
stos
dec
xor
cmp
pop
daa
or
loopne
pop
mov
inc
mov
xor
dec
dec
mov
daa
leave
dec
int3
push
mov
call
mov
hlt
push
jne
in
xchg
xchg
pop
xorb
mov
int3
mov
jle
inc
push
aas
jle
in
roll
cli
stos
daa
xor
nop
push
mov
push
jnp
mov
in
in
loope
cmp
inc
int3
mov
test
pushf
jmp
call
cmp
aaa
mov
xchg
test
dec
xchg
loope
out
pop
out
mov
clc
enter
dec
js
mov
jae
hlt
mov
add
mov
popf
gs
fidivrs
xchg
and
fistpll
jae
xor
inc
xor
mov
cwtl
mov
jge
out
jmp
ret
xor
loopne
cmp
cmp
and
loope
jp
rcrl
das
roll
fsts
popa
pop
in
inc
ss
mov
lods
bound
hlt
stc
jg
scas
push
sti
push
jl
jne
rcl
and
sub
sub
ret
pushl
int
mov
cmpsb
jo
outsb
clc
out
and
out
repnz
and
jne
insl
mov
jmp
dec
inc
push
test
pop
shr
cwtl
and
pop
xor
mov
fnstsw
fsts
imul
mov
aaa
dec
jmp
sbb
adcb
loope
leave
daa
or
ret
aad
lock
dec
aaa
cmp
lds
sbb
hlt
adc
inc
popa
dec
or
faddl
push
xlat
lods
popf
pushf
push
sarb
in
dec
pop
sbb
sub
mov
popf
mov
insl
inc
mov
cmpsb
clc
adc
cmp
iret
inc
sub
ss
ds
int
pop
add
and
fstps
ret
repz
push
adc
dec
aam
sarb
xchg
rolb
inc
out
in
iret
pusha
repnz
inc
sub
or
mov
dec
ret
sahf
inc
cmp
stc
addr16
pop
mov
jne
xchg
sbb
aam
mov
add
mov
divb
sub
jmp
fdivrl
push
mov
xchg
mov
push
inc
arpl
pop
test
jmp
sub
cmp
or
cmp
aad
sub
mov
add
into
push
inc
ret
lahf
lods
and
mov
fwait
xor
cltd
xchg
loop
je
outsb
fildl
sti
repnz
mov
inc
jbe
pop
add
out
pop
es
stos
or
jns
hlt
sub
push
insb
aam
out
lods
or
js
xchg
idivb
call
mov
aam
data16
icebp
stos
or
hlt
push
out
sub
and
mov
scas
mov
add
xchg
sahf
stc
fsubrs
je
rcr
mov
push
js
fildl
icebp
shrb
mov
push
add
sbb
jmp
mov
ret
pop
xchg
pop
rorb
stc
add
fisttpl
push
dec
pop
xor
sbb
and
sub
xor
aas
jge
ds
mov
out
pop
ret
pop
out
test
call
and
jg
shrl
lahf
das
push
call
pop
je
out
mov
bound
add
js
fisttpll
loopne
or
jmp
in
outsb
push
rcrb
jae
cld
push
push
jae
out
jp
loope
and
or
sarb
xor
cmpb
cld
mov
add
shlb
int3
or
enter
adc
fs
mov
test
icebp
inc
jg
call
int3
ficompl
and
sahf
stos
pop
push
inc
stc
sar
aam
sbb
jg
aad
leave
pop
shr
xchg
xchg
xor
bound
push
rcll
das
mov
xchg
jecxz
xor
xor
rcr
xchg
rcrb
cmp
xor
inc
sahf
loopne
in
mov
add
push
nop
loop
pop
adc
push
data16
rclb
jle
bound
lods
adc
pusha
xlat
hlt
or
jb
sub
jns
lods
stos
rol
shr
insb
jge
ds
iret
dec
xor
sub
loope
dec
clc
xor
push
dec
int3
in
gs
mul
jle
dec
ss
push
push
or
call
test
fsubs
push
lods
shll
jmp
out
jl
dec
lea
push
aas
jae
iret
pop
mov
adc
fs
repz
pop
jle
test
push
fcoms
inc
xchg
inc
add
and
or
cmp
in
lahf
dec
pop
stos
inc
add
dec
or
adc
addb
ds
mov
xchg
lock
add
imul
push
mov
sbb
cli
loop
mov
arpl
push
fsubrp
mov
fucomi
aas
inc
mov
imul
test
fistl
pop
loope
int3
rcl
push
test
inc
xchg
jle
pushw
inc
aad
nop
in
cmpb
adc
mov
ja
cwtl
mov
repnz
dec
jecxz
sbb
mov
adc
je
inc
aas
sbb
xchg
add
mov
sub
dec
push
add
daa
sahf
xchg
xchg
hlt
cmp
test
dec
mov
iret
jl
outsl
loopne
ret
fsubl
or
fldt
rclb
push
test
cs
push
and
mov
cmc
rclb
fbstp
mov
arpl
mov
stc
ret
aas
test
fnstcw
mov
aad
movsb
fildll
xchg
fwait
add
pop
cld
sbb
mov
add
xchg
ds
popa
push
xchg
add
pop
cmpsb
push
les
ds
sahf
ficomps
or
test
loopne
and
scas
sub
daa
push
ret
sahf
pop
js
flds
adc
mov
xorb
lods
imul
cli
add
pop
and
pop
clc
idivl
push
inc
jmp
adcl
xor
mov
outsl
mov
adc
negl
out
pop
std
dec
fisttpl
idivb
adc
jge
in
out
sub
add
sbb
cltd
inc
and
adcl
xor
cmpl
in
xchg
mov
out
mov
mov
nop
mov
push
cld
test
jbe
pop
popf
xor
inc
mov
cmp
push
movsb
push
adc
js
and
lods
sbb
add
xchg
sub
inc
lea
pop
out
fimuls
stos
mov
loope
adc
xchg
sub
call
fstpl
outsl
jl
out
mov
push
ret
xor
mov
and
push
aam
hlt
xchg
and
cmp
out
and
mov
add
scas
aam
xchg
mov
xor
aaa
push
adc
sbb
mov
rolb
in
icebp
bts
xchg
out
insl
aad
fsubrs
loop
fwait
pop
adc
cltd
scas
dec
adc
add
push
cld
mov
repnz
negl
aaa
pop
repnz
xorb
fwait
push
xor
mov
fstp
or
cld
push
stos
shll
mov
push
mov
pop
cmp
std
into
sbb
push
adc
and
popa
hlt
test
mov
mov
adc
in
push
pop
sbb
cli
add
and
jb
out
pushf
cmp
std
jmp
in
shlb
std
movsl
adc
leave
jo
movsb
push
xor
stos
roll
sub
push
loop
std
in
or
jecxz
and
leave
xchg
popf
jno
cli
mov
ror
pop
dec
insl
outsl
repz
scas
aam
popa
ret
nop
scas
testl
push
int
push
gs
xchg
pusha
fcmovnb
jecxz
cmp
lret
nop
jg
lods
mov
jmp
ja
mov
movsb
jmp
mull
pop
add
ja
inc
stos
pop
xor
add
xor
sub
mov
push
push
movsb
aaa
xor
pusha
mov
push
cltd
xchg
push
jg
cld
int3
ret
mov
dec
cltd
call
ret
jnp
repz
cmp
push
cmpsl
in
lcall
pop
add
imul
ja
fwait
dec
negb
push
sub
mov
dec
sti
stos
in
mov
iret
aas
bound
cmpsb
cmp
lcall
fistpl
inc
pushw
cmp
xor
out
icebp
shrl
test
scas
hlt
ret
pop
movd
mov
sarb
add
mov
ss
sahf
ret
lds
add
mov
or
add
aaa
sub
adc
add
sbbl
loope
repnz
lret
push
xorl
push
xor
push
cmp
jl
pop
adc
sahf
fisubs
sub
cmp
jp
imul
mov
adc
bound
scas
or
jecxz
mov
stc
rorl
into
mov
mov
mov
and
aad
mov
xor
outsb
scas
xchg
testb
aas
iret
repz
pop
stos
push
js
push
sahf
lods
std
mov
insb
push
push
sub
push
out
cmp
or
mov
jp
dec
lret
and
push
jae
insb
sbb
sub
dec
dec
or
loop
mov
divl
divl
es
ja
push
movsb
dec
lea
sti
iret
ss
insb
call
mov
cmp
lods
das
add
jle
jne
mov
jne
and
adc
fisubrl
stos
jb
jl
fsubrs
adc
bound
scas
pop
ja
pop
cmp
cli
add
out
jo
loopne
push
add
leave
push
push
addl
and
sub
rcll
dec
dec
pop
pop
add
pop
push
mov
inc
xlat
rorb
adc
jns
push
jne
shl
pushf
cs
sbb
lret
leave
sub
insl
or
js
sub
cltd
rcll
push
or
mov
popf
mov
scas
lret
or
and
sub
pop
cmc
ja
mov
and
lea
jge
xchg
xor
inc
scas
dec
pop
pop
mov
roll
mov
fbstp
sub
jns
mov
inc
ljmp
cli
push
pop
jl
movsb
pop
aad
push
sar
je
xchg
testl
dec
fnsave
xor
xor
push
xor
mov
adc
je
out
ds
imul
add
rcrl
loope
mov
adc
adc
and
mov
jp
adc
add
xchg
lahf
aas
pop
dec
push
enter
scas
adc
push
test
jb
xchg
scas
xorl
cmp
sbb
pop
cmpl
ret
or
sub
popa
in
lods
xor
jmp
shl
lock
jae
imul
add
push
or
mov
push
and
add
data16
aam
out
pop
sbb
sub
dec
adc
test
cli
push
cltd
mov
repnz
js
xchg
lret
orb
out
ss
mov
jne
mov
pop
jmp
jae
dec
xchg
in
jns
xchg
jno
and
xchg
in
push
push
mov
lods
test
dec
inc
je
sarb
or
adc
dec
inc
fiadds
jmp
xchg
mov
xchg
mov
lahf
outsb
pop
shrb
or
jns
push
sub
pop
filds
divb
sub
test
inc
lret
cmp
hlt
shll
xchg
pop
mov
out
enter
mov
mov
cmpsl
rcrb
inc
clc
lret
xchg
rclb
and
scas
inc
pop
jg
mov
mov
mov
mov
packuswb
jle
enter
rcr
xor
jns
jns
imul
sbb
push
test
push
add
sbb
push
xchg
movsl
fs
in
clc
jns
decb
stos
jb
sub
jns
sub
fistpl
cmovp
pusha
icebp
pop
clc
dec
rorl
sbb
lret
cwtl
imul
and
sbb
push
sbb
and
mov
les
rcrl
test
inc
in
xor
pop
push
dec
into
mov
cli
movb
in
in
sub
fcmove
leave
stos
cmp
jnp
mov
cwtl
ja
inc
shll
push
lret
or
mov
mov
clc
cmp
or
push
or
je
addl
rorb
enter
adc
dec
cs
mov
sub
das
je
in
and
xchg
adc
sbb
out
ret
mov
std
loopne,pt
cmovbe
jg
xor
pop
dec
dec
ds
outsb
xor
cmp
cltd
sarl
dec
xor
loop
jae
cmp
sbb
test
adc
loopne
fisttpll
sbb
sarb
arpl
repz
outsb
mov
int
mov
mov
jl
jg
mov
add
mov
outsl
mov
jno
lahf
rorl
in
and
sbb
lret
lcall
lds
enter
in
sub
das
arpl
jo
mov
add
outsl
and
xchg
js
mov
mov
add
or
sub
xchg
sub
xchg
aam
mov
cmpsl
jne
xchg
dec
ljmp
lret
or
rcrb
push
push
mov
add
mov
data16
cmp
adcl
std
xor
loop
push
lea
xor
sub
stos
add
push
xor
int3
fs
fildll
mov
push
icebp
out
rcl
xchg
push
mov
les
aaa
jmp
int
aaa
push
xchg
lock
mov
cmpsl
inc
std
push
ret
test
dec
mov
pop
rorb
stos
push
jl
adc
jne
xlat
scas
jge
push
adc
repnz
xor
fists
insb
adc
pop
imul
cmp
add
add
orps
dec
lods
push
jb
aam
push
lds
dec
sub
pop
ret
mul
daa
jge
mov
and
imul
cmpsb
jp
imul
in
movsl
sub
stos
fimull
adc
adc
push
notl
mov
pop
bound
lods
lea
ds
imul
imul
or
xchg
mul
out
adc
mov
aaa
sahf
add
test
int
jno
mov
out
xor
roll
inc
pop
cmpsb
dec
repz
cld
dec
cs
and
mov
adc
xchg
adc
es
ret
dec
repnz
outsb
xchg
xchg
insb
push
cmp
bound
sub
testl
adc
jecxz
adc
hlt
push
sub
push
xchg
cwtl
fldt
mov
test
nop
adc
shrl
das
jns
ficompl
cmp
pop
pop
adc
adc
sbb
ja
adc
fistpl
mov
xor
jbe
sarl
adc
jbe
and
fildl
jns
push
movsb
adcb
mov
fisubs
pop
fcmovnbe
push
mov
mov
push
dec
mov
jmp
push
mov
rcrb
or
xchg
dec
shlb
shll
cmp
sbb
and
xor
xchg
adc
fwait
mov
and
jmp
jns
inc
ret
es
loope
xor
std
ljmp
push
lret
dec
loop
mov
or
ret
adc
push
sub
mov
aam
pusha
xor
adc
daa
xchg
mov
mov
adc
inc
fstpl
sub
dec
adc
nopl
sub
mov
ds
dec
mov
jl
push
jbe
and
jnp
in
or
cmp
imull
loope
enter
xor
test
jne
xor
push
cmpb
and
mov
cltd
push
inc
jge
pop
xchg
jbe
pop
sarl
imul
cmp
xor
jno
rorb
push
lea
loope
push
sub
loopne
stc
bnd
ficoms
mov
aad
aad
outsb
inc
lcall
rcrl
cmp
adcl
stos
jb
ror
out
leave
jg
sub
or
scas
nop
sub
mov
push
or
adc
xchg
movl
adc
mov
or
lahf
js
loopne
outsl
hlt
jae
dec
push
sbb
jnp
xchg
sub
into
test
div
sbb
mov
ret
mov
insb
add
mov
in
sbb
iret
pop
xor
rolb
mov
mov
sbb
addb
divb
adc
insl
or
es
or
sbb
imul
and
push
scas
mov
sub
cmp
push
outsb
xor
cmp
xor
jge
xor
in
adcb
xchg
daa
mov
inc
lcall
cli
call
popa
pop
cmp
xor
je
adc
inc
mov
mov
insl
sub
pop
cmp
mov
loopne
inc
gs
lock
popf
imul
sbb
pop
repnz
mov
outsb
enter
cld
nop
xlat
mov
cmp
dec
fwait
or
add
mov
cmp
into
sbb
sbb
xacquire
loope
jnp
jmp
jns
pusha
into
adc
out
pop
mov
cmp
or
push
jnp
adc
sbb
cmp
cmp
in
mov
mov
mov
orl
mov
add
cmpsb
scas
aas
ret
sbb
mov
mov
fdivr
xchg
subl
mov
jp
movsb
inc
xor
cmp
mov
or
add
stos
sarl
push
stos
push
loopne
push
addl
cld
mov
nop
popf
jle
ficoms
pop
xchg
ret
stos
xchg
jne
sub
test
dec
adc
jecxz
aas
fmull
fs
push
lea
mov
mov
popf
ja
orl
and
sbb
jo
push
notl
imulb
and
push
jl
lcall
add
xlat
sub
adc
cmpb
out
sub
sbb
sbb
sbb
lods
jl
jnp
popf
aam
movsb
movsb
jo
es
fistpl
int
cmp
cmc
dec
inc
push
jmp
imul
sub
lock
xor
dec
sahf
inc
jle
add
xchg
gs
sar
loope
test
pop
mov
lret
push
dec
mov
jge
cltd
pushf
fistpl
jns
jmp
mov
sbb
stc
mov
inc
inc
pop
lods
cmp
mov
and
add
jno
push
and
stos
sti
mov
ret
in
cmpsb
fucom
stos
xchg
movsb
dec
test
cwtl
xor
or
das
inc
xchg
and
cvttps2pi
add
shl
sub
jmp
fstpl
lock
push
push
data16
xor
pop
sub
mov
repz
into
aad
sub
ret
hlt
mov
mov
dec
xor
mov
lea
jo
aaa
notl
lret
rorl
aaa
sbb
lock
xchg
fdivl
pop
ret
loopne
push
int3
inc
out
sbb
jne
cmp
shlb
mov
das
testb
cld
sti
dec
cmp
push
aaa
jmp
jns
inc
lret
push
adc
int3
sub
pop
cmpb
xor
out
int
push
addr16
jp
add
pop
and
jae
popl
adc
addr16
in
push
xchg
push
dec
mov
mov
xlat
fisubs
pusha
stos
sbb
stos
mov
sub
out
sub
or
repnz
push
or
cmpsl
xchg
out
aaa
push
mov
icebp
adc
jg
rcrl
cmp
push
int3
fcoms
aas
pop
add
in
mov
push
loopne
xchg
rcr
nop
pop
jns
inc
aam
in
mov
push
aad
sahf
pusha
jp
and
icebp
ljmp
mov
inc
test
les
dec
popf
mov
cli
mov
sub
sbb
pop
mov
arpl
xchg
mov
rolb
adc
es
sbb
or
pop
insl
stos
outsb
js
loop
pop
mov
test
fbstp
aas
je
jg
ret
push
pop
push
mov
xchg
test
pop
lods
out
mov
mov
clc
and
aaa
xchg
mov
add
xchg
jp
dec
jns
mov
fdivl
stos
push
lds
xor
jo
add
fsubrl
xchg
adc
push
mov
ljmp
popf
xchg
xchg
repnz
jo
pop
pop
push
cmc
push
repnz
or
and
push
pop
js
inc
movsl
stos
or
inc
ret
xchg
and
imull
jecxz
pop
jge
iret
fcomp
dec
inc
sbb
hlt
inc
fbstp
push
push
jg
and
imul
mov
mov
mov
fidivrl
xchg
pop
push
movsl
mov
sahf
push
int
jno
out
bnd
jb
sub
mov
mov
fistps
pop
movsb
ja
jmp
fcmovnbe
call
daa
jge
xor
jp
in
cwtl
cmpb
push
xor
lcall
cli
lds
lret
sahf
lcall
dec
cld
jle
fcomip
lret
and
sti
mov
xchg
rcrb
ss
sbb
sub
mov
lock
ret
sub
mov
add
dec
cmc
cmp
xchg
push
mov
dec
or
sub
sbb
push
cmpsb
mov
mov
int
ffree
loope
sub
add
adc
push
lcall
pusha
inc
add
cmpsb
fstpl
out
leave
add
jmp
popa
push
test
mov
mov
outsb
iret
cmp
mov
arpl
adcb
sar
inc
push
pop
add
iret
pop
xchg
mov
push
adc
fs
pop
push
call
bound
jecxz
enter
addr16
or
js
cmp
mov
lods
adc
aad
popf
fbstp
and
out
add
imul
push
clc
mov
dec
hlt
or
outsb
sbb
sbb
sbbl
test
adc
lret
imul
mov
shrb
lcall
or
aad
sub
pop
xchg
sub
fadds
pop
mov
bound
or
and
add
jno
lock
mov
repz
jl
in
add
xor
pop
mov
in
pop
cmpsl
das
xor
addr16
mov
stos
imul
xchg
sub
inc
ret
pop
leave
jne
jbe
cmpsb
pop
mov
sti
xchg
cmpl
mov
test
nop
out
sub
out
into
test
xlat
bound
or
and
aas
ja
rorb
jne
loopne
call
dec
cltd
mov
xor
bound
int3
movsb
das
jl
pop
pop
lea
lods
jg
je
jmp
mov
stos
adc
enter
sbb
fimull
mov
stos
or
icebp
mov
mov
loope
and
fdivrl
dec
sbb
mov
mov
lret
icebp
inc
inc
jle
fiaddl
inc
add
jp
mov
je
hlt
and
rcr
les
adc
int
test
mov
testb
push
jno
lds
sbb
scas
dec
sti
push
out
jns
xor
lahf
lods
pop
loope
mov
pusha
cltd
loopne
adc
in
add
movb
mov
mov
pop
mov
aas
loop
jo
sub
xchg
dec
adc
mov
in
push
and
sbb
xchg
mov
and
daa
in
xchg
cmp
adc
fcomps
cmp
shlb
adc
xor
or
or
pop
jecxz
iret
call
dec
xchg
mov
leave
into
js
int
aam
rclb
jmp
xor
jae
sub
js
dec
lods
sbb
imul
mov
sub
psubusb
inc
jmp
fnstsw
cltd
aaa
flds
push
push
call
jb
movsb
loope
mov
and
shrb
mov
sbb
xor
dec
into
in
inc
fsubrl
std
scas
mov
cmp
cmp
lret
sub
cmpb
sbb
push
dec
in
pop
int3
ds
fstps
adc
cmp
cmp
xor
daa
movsb
push
pop
pop
cmp
pop
mov
loope
lods
adc
dec
jo
pop
jg
jl
mov
sti
dec
mov
pop
cltd
test
pop
cmp
loop
mov
popfw
popa
push
outsl
aam
mov
stos
inc
cmp
call
loop
sahf
mov
mov
mov
testb
mov
bnd
mov
mov
scas
sahf
lods
push
les
ret
inc
insb
sub
fsubr
arpl
fldenv
sub
push
xor
and
scas
jnp
mov
xchg
add
jecxz
inc
jl
push
ss
negb
fsubrl
jns
in
setae
data16
call
leave
mov
adc
dec
cltd
and
jge
sub
jge
test
xchg
adc
stc
arpl
repz
stos
sarb
repz
add
push
jecxz
add
cltd
mov
fistpll
and
push
lahf
push
cwtl
mov
push
cmp
test
push
or
jbe
mov
xchg
or
mov
xor
loope
fisubrl
cmpsb
movsl
or
enter
addl
adc
mov
pop
inc
mov
sub
cmp
jmp
add
jae
lods
fnstenv
cmp
mov
scas
bound
add
repz
mov
lea
inc
int3
xchg
xor
pop
daa
inc
mov
jno
mov
dec
outsl
mov
inc
pop
movsb
cmp
andb
jbe
inc
push
mov
xchg
mov
fdivrl
cmpsb
sub
pop
incl
test
sub
xchg
sbb
inc
repz
xchg
addr16
lret
ss
mov
loope
imul
cmp
jnp
mov
mov
push
pushl
jns
mov
inc
mov
sub
or
pop
stos
jecxz
push
in
out
push
push
repnz
pop
jg
inc
xchg
in
shlb
incl
movsl
sbb
ret
xchg
push
aam
les
js
call
cmpsl
and
xor
jb
sbb
notb
and
inc
sub
jnp
mov
mov
in
or
jae
mov
cli
push
insb
int3
enter
lds
lea
testb
rorl
push
pop
mov
xor
js
mov
sub
sub
and
sbb
cmc
call
imul
pushf
mov
sbb
sub
pusha
inc
stos
fnsave
ret
mov
ljmp
sbb
js
push
pop
les
aas
fstpl
pop
shr
adc
cwtl
sbbl
test
inc
shrl
lds
xchg
mov
mov
dec
xchg
jae
je
jmp
out
jg
addl
pop
sbb
std
mov
inc
outsl
pop
jg
arpl
jns
lods
xor
sub
mov
inc
and
and
insl
jno
repnz
scas
adc
inc
add
jo
add
pop
pop
or
xlat
loope
popa
jo
popa
in
dec
test
test
push
xchg
imul
fwait
mov
fwait
pop
jbe
pop
mov
add
cwtl
inc
ret
push
mov
fbld
xchg
ret
mov
scas
loop
jg
jecxz
xor
dec
or
adc
xor
jne
cmp
pop
mov
xor
cmpsb
inc
inc
xchg
das
cli
scas
cmpsl
test
and
mov
dec
and
mov
fistl
xor
cmp
inc
mov
call
inc
movsb
test
cld
xor
int3
shl
and
push
ljmp
sub
and
js
dec
fistpll
test
push
push
clc
popa
mov
pop
and
pop
loop
jmpw
jmp
je
call
ljmp
shll
dec
jge
aad
sub
adc
lock
loopne
clc
push
or
lahf
add
loope
add
xchg
pop
push
or
sti
sti
push
cmp
jmp
pop
in
cmpsl
xor
cmpsl
test
cs
iret
addr16
arpl
adc
push
mov
pushf
push
inc
gs
nop
mov
dec
add
xor
mov
jle
add
iret
aas
push
xchg
sbb
or
mov
jle
fimull
lret
or
movsb
pop
pop
sarb
dec
push
outsb
aad
js
shll
pop
xchg
cmp
xchg
or
mov
fisttpl
insb
inc
out
xor
sahf
push
inc
xchg
addl
jecxz
sub
ret
mov
out
xchg
aad
pop
mov
psubusw
test
or
xor
cmp
mov
ficomps
dec
call
fldenv
out
fwait
shlb
add
pop
adc
or
in
sbb
push
dec
adc
sti
aaa
cltd
addr16
outsb
or
fwait
nop
xchg
adcb
pand
xor
and
ljmp
ret
leave
cmc
popf
dec
dec
mov
fisubrs
and
inc
stos
andl
xchg
cwtl
outsl
inc
mov
rcrb
js
sarl
mov
mov
mov
jg
in
cwtl
fistps
nop
xchg
jl
mov
ficoml
cmp
movsb
inc
push
inc
pop
jl
jle
and
xor
mov
idivb
sar
cwtl
xlat
js
mov
rorl
cmp
dec
out
xor
xlat
inc
fidivs
mov
jae
sbb
or
rcr
jo
in
mov
or
add
cmp
ja
adc
stos
sub
xor
inc
cltd
cltd
leave
jecxz
clc
cwtl
shrb
xor
out
call
testl
jmp
xor
jno
mov
enter
mov
shlb
cmp
call
xor
repnz
rorl
insb
lds
jo
icebp
std
jne
nop
add
xchg
loopne
or
lret
push
fldcw
mov
insl
sub
scas
dec
and
xchg
add
pop
rcrl
scas
shl
pop
ljmp
push
arpl
outsl
add
ud1
inc
sub
sub
sub
insb
jnp
add
ret
jl
dec
sahf
and
daa
xchg
dec
add
push
or
pop
mov
jne
outsb
dec
or
inc
push
adc
std
inc
loop
hlt
scas
insb
push
push
or
pop
add
aam
xchg
mov
pop
adc
sbb
jecxz
and
daa
cli
movsb
mov
xchg
jge
sbb
aaa
jno
imul
xor
and
in
add
jb
pop
pop
dec
rcr
leave
ss
jmp
mov
add
scas
fnstcw
mov
fisubl
fstps
mov
xor
shr
pop
xchg
sbb
jp
or
xchg
loope
les
cltd
les
arpl
lods
mov
push
or
jecxz
icebp
jnp
aam
pop
popf
outsb
dec
pop
xchg
xor
fstpl
dec
pop
ja
adc
in
js
cmpsl
mov
aam
xchg
push
lret
out
pop
shl
xchg
shrl
lret
push
xchg
sbb
inc
or
loopne
mov
aad
xor
jno
xor
mov
pop
and
or
fdivr
add
mov
mov
pop
cmp
into
push
add
mov
stos
xchg
pop
jl
ficomps
iret
lcall
data16
aaa
sarb
lret
call
movsb
add
pop
pop
mov
fidivrl
neg
sub
push
cmp
out
das
sbb
pop
and
ficoml
sti
shl
push
clc
into
in
pop
call
inc
cmp
outsl
repz
push
sbb
inc
xor
sbb
gs
cli
shll
cmp
std
in
lods
xchg
add
sbb
fistpll
leave
aaa
fbstp
or
and
iret
mov
lahf
push
and
inc
jns
daa
pop
or
aas
mov
cli
adc
shll
mov
stc
inc
or
xor
ja
or
mov
popf
pop
nop
shlb
and
std
cmpl
insb
aas
gs
dec
std
bound
cmp
ficoms
jecxz
cwtl
divl
pushf
addr16
fisubrs
test
ss
pushf
icebp
ret
incb
cmp
incb
repnz
xor
ret
pop
add
dec
and
push
adc
pushf
sbb
in
mov
push
int
pusha
repnz
icebp
fcmovnu
push
sbbl
dec
push
adc
or
xor
movsl
mov
add
mov
fiadds
xor
mov
sahf
pop
faddl
push
inc
cmp
inc
in
testl
xor
jno
arpl
movsl
cld
sbb
nop
leave
cld
dec
cmc
cld
in
js
clc
add
sub
out
rol
push
nop
adc
pusha
addr16
mov
sub
enter
sbbl
lods
mov
dec
aaa
scas
imul
cmc
scas
mov
sbb
ret
out
mul
lcall
and
push
je
mov
xchg
popf
ljmp
aad
xchg
into
ret
pop
mov
in
sti
sbb
idivl
sbb
jne
push
out
mov
sub
inc
push
mov
mov
sbb
jmp
pushf
icebp
mov
sbb
xchg
imul
fs
ret
mov
jbe
in
pop
dec
outsl
mov
and
jne
fdivrl
test
xor
in
imul
iret
mov
mov
mov
loop
jbe
pop
enter
incl
daa
leave
inc
outsb
or
cwtl
mov
aam
xor
in
mov
pop
cwtl
lret
sbb
dec
fnstsw
stos
add
mov
cld
xchg
inc
repz
cmc
mov
fisubs
or
and
jne
cmp
repnz
sbbl
mov
sub
mov
or
push
push
mov
shlb
ss
cmp
hlt
jb
inc
and
mov
mov
xlat
pop
push
aam
and
sbb
adc
pop
in
cmp
int3
push
push
es
adc
sub
mov
push
bswap
scas
mov
xchg
imulb
int3
dec
mov
jg
jmp
mov
aam
dec
and
xor
addb
jbe
ds
or
out
jg
or
sub
lahf
xchg
adcb
pop
stos
xchg
pop
scas
or
adc
cs
push
movsl
ficoms
fstps
pop
pop
lock
and
or
cmc
or
inc
arpl
inc
cmp
stc
and
dec
xchg
jb
xchg
je
sarl
loope
popa
push
repnz
movsl
sub
stc
lret
jns
mov
insb
dec
xor
cmp
sbb
jno
push
pop
lods
or
push
mov
lahf
lock
fs
dec
and
pop
cmc
nop
aam
adc
sub
fdivs
mov
push
xchg
mov
push
ja
cmp
pop
js
jo
sbb
mov
push
mov
rcrb
mov
lods
mov
pop
js
or
jmp
mov
and
inc
sbb
cmpsb
sbb
mov
sbb
ja
cltd
pop
jmp
push
sahf
cmpsb
mov
outsb
mov
inc
push
or
pusha
dec
test
push
cmc
fadds
fisttps
cmp
shl
pop
mov
jge
xchg
pop
scas
xchg
cmp
in
out
push
pop
ret
and
lcall
dec
mov
cli
sub
xlat
add
mov
dec
jno
xchg
cmpsb
or
dec
push
shr
inc
add
add
shll
mov
sub
mov
das
into
int3
or
push
outsb
or
and
shlb
mov
mov
pop
xchg
imul
fcomp
out
inc
push
lcall
pop
rcl
dec
lcall
das
inc
repz
pop
or
cmc
mov
mov
pop
ret
aaa
mov
sub
mov
mov
repz
outsl
or
fwait
mov
gs
lret
sahf
sbb
pop
insl
orl
and
adc
inc
mov
and
dec
or
bound
xlat
or
enter
cmp
push
push
add
sahf
cmp
add
lods
loop
in
xchg
mov
fisttpl
and
in
call
mov
jle
fdivr
push
sbb
jo
divb
pop
adc
mov
cmp
mov
dec
or
popl
sub
xor
push
mov
pop
mov
push
sar
mov
push
movsb
les
adc
rcrl
andb
movsl
push
add
adc
subb
and
in
dec
fisttps
jns
jb
flds
adc
jle
mov
push
fistl
push
repnz
dec
daa
xorl
popf
outsl
cmp
test
icebp
into
es
xchg
adc
shll
loopne
mov
testl
mov
rolb
es
sub
jg
sbbb
jle
les
orl
out
push
fadd
add
mov
leave
aaa
scas
cmp
xchg
push
mov
in
mov
pop
cmp
mov
mov
mov
test
lods
cmp
fcoms
xor
mov
and
mov
adc
pop
and
in
lods
dec
push
lods
lcall
les
inc
arpl
push
mov
adc
and
push
imul
mov
jnp
xchg
adc
cwtl
mov
fidivs
jmp
mov
mov
cld
lret
pop
jno
or
xchg
les
push
cmpsl
mov
loopne
sahf
sbb
add
enter
dec
loop
mov
push
push
cmp
jmp
je
push
xor
sbb
stos
sbb
and
mov
sub
lods
xor
pop
push
cltd
mov
cld
jb
fists
lock
mov
inc
outsl
arpl
mov
sbb
xor
ja
out
push
into
xchg
sbb
cmc
lahf
fbld
aas
mov
ja
fsubs
adcl
add
dec
inc
or
lahf
imul
gs
cmp
test
push
out
sub
lret
jl
mov
mov
mov
mov
xchg
ja
dec
xor
cmp
sbb
mov
cld
jne
or
mov
orl
xchg
xlat
addb
data16
jae
das
jno
mov
stc
out
popf
rorb
or
cmpsl
push
jge
xchg
inc
and
inc
ret
sub
lret
sub
pop
jg
out
jno
cmp
cmp
int
shrl
xchg
enter
mov
js
xchg
std
mov
inc
xor
jae
inc
clc
add
out
movsb
dec
jg
push
lret
sbb
and
cs
dec
jnp
stc
movsb
and
push
lret
ja
add
xor
pusha
dec
negb
push
int
out
jo
push
nop
sbb
xlat
test
loope
clc
dec
pop
out
or
cld
jmp
or
mov
ja
icebp
inc
int3
pop
push
pop
ret
stos
mov
lock
aaa
push
inc
and
and
incl
cmp
lock
and
mov
cs
scas
or
mov
stos
clc
ja
ss
sbb
mov
jns
push
dec
jne
xchg
mov
jge
test
mov
adc
fs
xor
lds
and
jo
lods
xor
lds
loope
jmp
leave
loop
cs
dec
ficomps
ja
aam
scas
psubw
loop
cmp
lds
pop
or
cmp
fwait
shll
out
dec
in
ljmp
jb
subb
adc
inc
adc
push
sbb
bound
imul
and
lret
andl
aam
dec
fisttpll
adc
dec
and
and
push
or
push
aad
aas
xchg
imul
adc
xor
pop
push
inc
jp
push
subb
push
dec
fs
imul
push
jl
ret
jae
in
sahf
push
cmp
fs
gs
enter
pop
xchg
icebp
ljmp
dec
cld
add
and
loopne
adc
std
xchg
pushf
cmp
test
sbb
mov
rorb
repz
nop
jnp
loopne
test
pusha
mov
mov
jo
dec
cmp
je
sub
daa
fnstsw
cmp
inc
das
adc
adc
jno
xchg
rcrb
fisubrl
lcall
mov
out
shrb
or
movsl
fdivrs
rcrb
arpl
or
push
xor
sbb
jb
push
clc
cmc
mov
or
rorl
jbe
lock
adc
addb
and
adc
xchg
std
adc
inc
mov
lds
std
hlt
sbb
cmpsl
popa
ret
mov
pop
pusha
mov
sbb
movsb
mov
push
ss
imul
inc
mov
sub
insb
sub
dec
mov
movsl
daa
adc
push
cmpsl
mov
in
ret
push
movsl
inc
call
bound
data16
and
add
pop
rcll
push
stos
lahf
sti
dec
es
xchg
fdivr
push
pop
and
mov
cld
ficompl
hlt
mov
mov
test
mov
push
stos
repz
jl
push
and
pop
out
pop
aas
add
repz
ficoms
sbb
stos
adc
cmpsb
cmc
lods
pop
push
push
arpl
sbb
stc
push
dec
or
sub
or
push
jae
xchg
inc
mov
stos
jb
jnp
sub
add
dec
lds
aad
or
fsubr
lret
and
icebp
cmp
imul
mov
lds
inc
pop
mov
lahf
mov
sbb
push
pop
test
jbe
pop
cmp
lock
cmpsl
mov
insb
xchg
std
lcall
rcl
sbb
xor
int
mov
xor
xchg
andl
ficoml
fwait
out
push
pop
ss
shr
stos
addr16
std
inc
or
arpl
jb
dec
lret
sub
outsb
lahf
xchg
xchg
ficompl
jle
xor
inc
mov
or
cmp
xchg
cld
push
ret
movsb
test
xorl
bound
out
add
shr
add
out
test
ja
mov
push
daa
fdivrl
rcl
add
pusha
push
stos
loopne
cmp
cli
cmp
and
cmpsl
rolb
scas
int
xor
stc
test
add
dec
leave
call
push
scas
push
add
pop
mov
mov
nop
inc
add
cmp
xchg
pop
rcll
call
in
dec
mov
lahf
sub
dec
in
push
cmpsb
cld
flds
xchg
std
stc
fadds
mov
cmp
add
mov
sub
leave
out
imul
mov
not
ljmp
mov
push
sbb
out
pop
repz
pop
in
lods
ret
scas
mov
xchg
sub
add
xorl
cli
pop
sbb
gs
or
add
cs
iret
mov
addr16
mov
repnz
test
aad
jle
fidivl
sub
icebp
mov
into
lea
sti
insl
xor
sbbl
inc
xchg
jp
jae
pusha
xor
rorl
stc
mov
rorb
orb
popf
jmp
xlat
addr16
out
cmpsb
stc
aaa
mov
inc
daa
xor
test
mov
jno
lds
imul
out
xor
push
sbb
out
push
push
mov
push
dec
jp
add
and
aad
nop
shll
push
stc
pop
xchg
xor
es
jmp
jnp
daa
rcr
scas
xchg
cmp
gs
cmp
data16
push
inc
add
jo
pop
clc
mov
mov
out
mov
test
mov
add
cltd
into
jae
mov
inc
xor
mov
int
addb
rorl
repnz
loope
pop
outsw
sbb
pop
roll
imul
mov
fcomi
xchg
push
enter
adc
jbe
add
cmpb
imul
cltd
jae
loopne
mov
dec
loopne
ret
sbb
jno
sub
pop
fisubs
loope
mov
out
rol
inc
stc
fldcw
pushf
adc
sbb
das
pop
sub
add
pop
scas
ss
add
mov
icebp
sbb
adc
movsb
ficoms
std
je
ds
pop
pop
adc
mov
movsl
jb
jns
daa
xor
loop
mov
xchg
push
lods
lahf
insb
add
mov
leave
mov
dec
mov
sbb
sbb
fdivs
cmp
push
rorb
xor
inc
xchg
lret
aaa
aaa
dec
jl
ja
and
cli
mov
fwait
scas
sahf
jp
mov
mov
jge
std
xor
mov
cmp
jmp
mov
fs
mov
pop
aas
add
pop
xor
out
lock
xor
scas
jmp
loope
push
out
dec
pop
shll
test
xchg
pop
xor
ss
mov
mov
lods
mov
pop
mov
addr16
cld
add
test
fisubl
jno
xchg
jbe
sub
std
mov
and
jnp
inc
jb
test
cmp
jmp
mov
shl
cmpl
and
xor
out
mov
xlat
mov
and
and
repnz
add
not
fcmovnb
or
and
out
mov
shr
xchg
addb
std
dec
inc
je
flds
jmp
mov
cmp
and
movsb
std
pop
cld
mov
mov
popf
pop
adc
decb
sub
mov
arpl
xor
lahf
push
cmp
cmpsb
in
or
jo
sub
jl
jl
dec
cwtl
inc
scas
fisttpll
enter
xchg
lods
std
dec
leave
mov
enter
push
in
push
insb
imul
imul
stos
adc
loopne
scas
adc
cli
dec
sbb
jmp
roll
popf
adc
or
idiv
and
and
call
stc
repnz
test
mov
inc
movsl
mov
jl
ja
pusha
test
mov
adc
out
loop
mov
xchg
push
mov
sub
dec
popa
negb
sbb
ret
push
loopne
xchg
aam
fdivr
xlat
out
in
adc
mov
push
das
fsubrp
sub
sbb
les
repnz
rorl
aam
fwait
xor
xor
out
enter
dec
xchg
dec
cmp
rcrl
pop
pop
daa
or
fstps
hlt
daa
mov
cmp
out
inc
lar
out
xor
aas
fidivs
mov
inc
jns
aaa
in
repz
and
mov
arpl
and
xchg
icebp
in
scas
push
mov
repz
jo
fisubs
inc
mov
js
jb
repnz
cmp
pushf
rcrl
ss
nop
fneni(8087
stos
mov
outsl
ja
xchg
rcll
sub
adc
ret
js
jg
cmpsb
lods
rcl
les
icebp
insb
loopne
inc
idivb
jnp
jnp
jno
jo
sbb
scas
jo
adc
inc
ja
les
sub
mov
jnp
pop
movsl
sbb
xchg
jl
outsb
popa
dec
outsb
adc
enter
test
test
stos
aad
and
cmp
out
xchg
inc
cmp
mov
jl
xor
mov
filds
daa
lock
pusha
ret
mov
or
jmp
lods
lcall
jbe
pop
cmp
gs
ljmp
jmp
out
add
mov
lret
out
push
orb
cld
mov
push
dec
imul
out
cmp
pop
fsub
cmp
in
data16
xchg
out
pop
lods
aaa
ljmp
sub
bound
or
iret
inc
clc
or
ret
pop
fs
xor
dec
cmc
inc
and
test
les
inc
dec
mov
cmc
xor
shlb
pop
push
cs
cmpsl
mov
mov
iret
cmp
out
rorb
xchg
out
add
shrb
cltd
xchg
inc
in
push
in
or
jbe
fisttpll
popf
mulb
gs
xor
loopne
pusha
cld
popf
ror
push
and
and
lret
in
fwait
pop
dec
loopne
pop
mov
mov
flds
hlt
lock
mov
shrb
movsl
xchg
pop
mov
mov
mov
fwait
mov
loope
data16
jb
in
dec
stos
mov
dec
addb
pop
out
loope
inc
lret
jg
pop
mov
je
push
push
adc
add
popf
lods
clc
fwait
mov
dec
mov
stos
imul
out
or
pop
lcall
push
cmp
mov
inc
mov
loope
ret
mov
add
hlt
dec
das
dec
mov
gs
aam
mov
out
mov
fstl
jbe
call
mov
dec
sbb
outsb
sahf
dec
sti
mov
iret
sbb
aaa
sub
icebp
push
aaa
sub
adc
arpl
bound
ret
fsubr
mov
jae
push
push
cmp
jb
daa
fildll
pop
incb
jmp
push
or
add
mov
inc
sahf
mov
clc
or
out
dec
jo
ljmp
data16
hlt
cmp
outsl
mov
dec
cli
dec
out
std
bound
pop
mov
out
xchg
push
jl
loope
add
loop
insl
stos
push
into
data16
lods
xor
xor
stos
push
aas
mov
mov
sbb
mov
cltd
push
mov
dec
out
dec
js
mov
loope
mov
sbb
jp
sbbb
faddl
fs
sub
decl
mov
clc
or
xor
leave
popf
jae
add
daa
xor
popa
mov
pop
iret
fidivs
mov
xchg
mov
popa
mov
cmp
addr16
js
mov
sub
push
adc
icebp
xor
adc
into
jg
or
xchg
add
push
mov
insb
mov
enter
clc
sbb
jg
lret
cmp
aaa
lea
mov
jnp
pop
sub
out
inc
add
push
imul
arpl
inc
fs
lea
fdivr
insb
jns
mov
movsb
mov
push
divl
pop
mov
lret
push
push
adc
jns
je
xchg
lds
add
sbb
or
int
jbe
insb
dec
loopne
adc
adc
mov
enter
cmpsl
test
sub
inc
cmp
inc
push
cmpsb
jae
push
jp
push
mov
add
push
mov
or
lahf
pop
mov
and
pop
xor
std
jmp
icebp
aam
aas
aaa
aad
mov
sbb
dec
fs
add
xor
mov
outsl
in
jl
mov
inc
adc
fbstp
inc
cmp
loopne
xor
cmp
jmp
jmp
mov
push
movsl
mov
insb
xchg
sahf
mov
loop
addr16
stc
and
cld
sbb
xchg
movq
cmp
add
dec
jecxz
inc
sbb
lret
jge
js
adc
dec
xchg
or
cmpsb
out
lods
fadd
and
dec
lea
dec
cmp
fisttps
lret
xor
xchg
fwait
in
pop
pop
pushf
mov
dec
mov
iret
insb
pop
out
xchg
mov
or
lret
sub
jle
outsl
mov
fnstenv
shll
mov
pop
hlt
push
loope
js
jl
ror
movsb
dec
mov
add
repz
js
dec
shrl
xor
jmp
dec
in
inc
js
inc
idivl
stc
sti
les
rorl
fs
xchg
lods
insb
and
push
jno
pop
outsb
enter
mov
lret
mov
insl
mov
bound
inc
lahf
lret
xlat
push
sub
pop
add
xchg
xor
jae
lcall
mov
test
pushf
xorb
movb
out
mov
mov
add
cmp
or
mov
sahf
xchg
adc
aaa
fsts
mov
lcall
fsub
xorl
out
and
jbe
das
mov
dec
sub
gs
xchg
xor
mov
ret
scas
bnd
scas
mov
mov
lret
cmp
cmc
jae
xchg
movsb
or
mov
test
and
jp
inc
mov
inc
and
xor
cmp
lods
and
mov
cmp
and
test
mov
call
xchg
push
loop
pop
imul
add
jecxz
sub
xor
ja
push
addr16
or
and
dec
sbb
cmp
aam
aam
dec
pop
int
mov
pop
mov
call
pop
dec
mov
xchg
int3
adc
push
jnp
cmp
xchg
mov
imul
add
jnp
test
pop
pop
xchg
mov
frstor
sahf
insb
insb
data16
jbe
jp
sub
pop
out
sbb
add
sbb
dec
movsl
mov
cmp
aas
and
or
inc
jbe
lods
pop
add
xchg
mov
pop
mov
aas
jg
sbb
push
lret
ret
lret
enter
mov
inc
testb
jne
pop
test
pop
out
jecxz
adcl
push
loop
jmp
js
loop
scas
int
pop
adc
fsubrs
xor
cld
mov
cwtl
outsb
mov
mov
imull
fwait
mov
pusha
inc
jmp
call
lcall
push
iret
jle
aas
mov
push
mov
mov
js
inc
xchg
xor
rcr
movsb
lods
aaa
xor
xchg
inc
inc
jg
scas
push
insl
jnp
cmc
pop
test
lods
ljmp
and
cli
das
insl
mov
cwtl
roll
jne
cmp
gs
sub
lea
add
push
daa
cmp
mov
dec
mov
push
sub
outsb
dec
fwait
pop
inc
push
sub
imul
dec
call
lock
scas
inc
jns
scas
dec
stos
cltd
test
xchg
lods
jl
shll
adc
fstpt
mov
mov
scas
xlat
aam
in
mov
cmp
ja
xlat
add
xchg
cmp
icebp
test
andl
or
xchg
adc
bound
xchg
int3
add
xor
mov
loop
pop
std
mov
mov
push
shrb
loope
in
fdivrl
push
or
icebp
clc
or
and
dec
shr
inc
fstps
inc
push
int3
test
inc
cmpsl
pop
mov
daa
pop
and
cmpsb
xchg
push
addr16
or
pop
ss
test
outsl
or
cmp
xchg
dec
insl
cmpsl
mov
cmovo
xchg
add
push
mov
push
outsb
sbbl
inc
mov
sub
jle
or
fdiv
out
clc
adc
mov
jmp
sub
lcall
repnz
cmpsb
arpl
jmp
fucomp
mov
add
add
and
int
stos
cmp
mov
rcrb
sti
pop
out
lahf
int3
dec
les
outsl
or
js
aas
nop
mov
loopne
inc
inc
pop
sbb
sti
or
jecxz
ret
lret
call
dec
call
sbb
les
lret
clc
cmp
jnp
lret
inc
push
sub
mov
xor
in
negl
iret
xchg
dec
jl
out
inc
imul
push
cmc
pop
sbb
sbb
sar
inc
xchg
add
xchg
in
out
add
int3
ds
sahf
fwait
mov
sbb
jecxz
sub
lahf
call
push
mov
dec
or
xchg
ret
scas
es
push
xchg
dec
mov
icebp
inc
out
adc
mov
subl
xor
cmp
jle
arpl
cld
and
sbb
icebp
loop
faddl
inc
add
push
inc
pop
pusha
iret
xor
sbb
xchg
shll
shrb
pop
add
leave
imul
mov
xchg
cmpsb
sbb
nop
adc
fldt
imul
push
ss
gs
pop
aaa
mov
dec
out
bound
lcall
subl
push
sbb
testl
xor
jnp
int
test
mov
cmp
inc
shll
pop
push
stc
push
mov
adc
sbb
dec
jne
arpl
ljmp
fistl
jne
mov
lock
cwtl
pop
sbb
or
pop
in
and
cmp
sub
shrb
xor
xor
adc
call
add
push
push
add
mov
js
movntps
xor
arpl
dec
js
jne
ja
repz
push
incb
fisttpll
push
jbe
jle
sti
cwtl
cltd
sbb
push
xchg
in
mov
enter
pop
popf
lods
inc
sahf
je
jmp
pushf
cmp
xor
sub
mov
or
daa
shlb
inc
pop
sbb
mov
mov
lret
inc
push
mov
shlb
inc
stos
frstor
das
sbb
mov
dec
and
push
cmpsl
jbe
inc
popa
adc
xor
imul
out
shlb
mov
mov
dec
rcrb
scas
ret
mov
pusha
mov
cmp
push
aam
mov
mov
jmp
js
cmp
mov
cmp
pop
imul
mov
call
movsl
xor
pop
mov
xchg
push
or
xlat
cli
lock
jmp
mov
shlb
movl
imul
in
and
push
outsl
jbe
fndisi(8087
or
loopne
mov
xchg
add
shlb
xor
adcb
xor
test
add
add
out
cmp
jecxz
sub
stos
fnstcw
xchg
fdivr
add
inc
mov
mov
xchg
loopne
push
sbb
shrb
mov
cmp
out
jne
in
in
hlt
inc
mov
xor
cmpsl
adc
mov
iret
cmp
jns
and
es
pushf
nop
push
pop
pop
popf
push
xor
cltd
cmp
and
add
inc
xchg
bound
and
fwait
add
arpl
dec
adc
add
mov
cmpsl
cld
sbb
push
es
in
insl
xor
aaa
mov
jmp
pop
and
adc
leave
dec
xchg
mov
jae
jns
add
add
xor
xlat
les
xor
test
mov
dec
cwtl
pop
inc
inc
jecxz
sub
cmpsb
inc
mov
and
nop
sub
test
mov
xchg
sbb
xchg
add
mov
dec
xchg
mov
inc
or
or
fbstp
xchg
pop
sub
mov
push
frstor
scas
mov
fs
xchg
cmc
mov
dec
cltd
pop
psubsb
popa
pop
push
in
jbe
inc
jae
rol
xchg
xor
ud1
jmp
imul
inc
inc
cli
mov
incl
push
mov
call
xor
push
cwtl
dec
lret
movsb
stos
inc
and
test
adc
xor
lods
lcall
dec
mov
mov
cmp
mov
or
mov
inc
rorl
xor
stos
pop
das
subl
daa
jp
sahf
push
dec
and
inc
je
jp
mov
sbb
negb
jg
cmp
sbb
fstl
jnp
lods
or
push
jg
dec
rorl
mov
mov
test
fsts
mov
jno
int3
cmp
iret
pop
dec
adc
loope
insl
mov
jecxz
sbb
in
mov
cmp
mov
in
inc
push
not
clc
cmp
dec
bnd
bound
jns
fcmovu
iret
push
lret
dec
lea
adc
or
aam
out
push
sbb
xchg
int3
mov
cmp
mov
popf
and
sub
jo
and
pop
sub
sti
in
sbb
iret
push
aaa
adc
or
stc
jnp,pt
into
orl
and
mov
inc
iret
fcmovb
push
jae
jb
arpl
xor
sar
fldl
mov
rorl
mov
jne
addr16
pop
mov
cmp
mov
data16
repnz
int3
fcoml
movl
daa
add
adc
push
xchg
test
lret
lret
or
lock
push
inc
movb
pop
daa
dec
movsl
outsl
movsb
jg
push
enter
mov
inc
cli
arpl
enter
xchg
movsl
adc
dec
pop
and
loop
pop
call
dec
mul
pop
clc
sub
push
push
pop
sub
mov
int
mov
mov
lods
mov
add
sbbb
push
dec
sbb
loopne
stos
mov
repnz
xor
xlat
jae
testb
xorb
xor
add
fwait
hlt
xlat
pop
add
add
imul
jbe
jbe
push
cmp
fdivrs
lret
mov
dec
and
fwait
mov
int3
popf
movsl
pushw
cmc
fstps
push
cmp
dec
iret
mov
out
in
ret
mov
sub
sub
lret
shll
daa
out
mov
and
cmpsl
dec
push
std
mov
cmp
cld
repz
mov
pop
out
or
or
xor
dec
mov
lea
addr16
scas
loopne
jbe
cmp
pop
cmp
rolb
jmp
dec
and
push
clc
jbe
mov
dec
pushf
add
inc
sub
cmp
gs
inc
inc
cmp
test
daa
mov
mov
shll
shlb
dec
or
dec
and
fnstenv
and
pop
push
mov
dec
xchg
adc
and
lret
xchg
inc
lcall
sub
pause
jl
sbb
outsl
pop
push
int
out
clc
fdivl
int
rol
fwait
push
shll
mov
xor
or
inc
push
test
fcomps
xor
adc
imul
jmp
fstl
cmp
pop
sub
adc
lock
push
xlat
outsl
cmp
add
test
js
dec
xchg
pop
mov
dec
inc
lret
jno
iret
insl
cmc
jecxz
bound
lea
mov
jns
inc
loopne
insl
mov
popa
ljmp
stos
pop
int
add
dec
push
cmp
testl
movsb
and
cli
pop
and
int3
or
mov
outsl
and
lock
lahf
hlt
jge
shrl
inc
pop
sahf
dec
imull
push
and
jnp
call
cmp
gs
mov
lret
sbb
fsubrl
stos
sbb
ret
push
shrl
xchg
mov
pop
movsb
cmp
or
dec
jg
jns
cmp
mov
dec
cmp
xor
es
xor
xlat
mov
pop
add
ret
int
cmp
mov
xor
test
inc
faddp
ret
in
lret
xchg
mov
sbb
nop
rolb
sbb
inc
lahf
push
pop
jnp
cmpsl
pop
fldt
out
les
jbe
aam
dec
loop
data16
cli
shr
out
icebp
shll
mov
pop
js
xchg
inc
insb
arpl
fwait
inc
or
push
adc
jnp
cld
mov
and
mov
xchg
pop
add
in
mov
sbb
ret
sub
push
jle
mov
cmc
dec
hlt
mov
and
test
jb
iret
mov
dec
xchg
outsl
ss
cmp
xchg
ja
sarl
add
js
sbb
mov
jp
subl
push
sub
pop
dec
inc
daa
repz
test
cs
dec
movsb
sarb
aaa
push
mov
in
mov
cmp
in
subb
add
xchg
mov
leave
fimull
or
add
xchg
clc
inc
jle
das
pop
stc
nop
fnstcw
add
es
outsb
loope
xchg
daa
mov
jl
pop
add
sub
fnsave
push
out
mov
pop
data16
and
mov
repz
fisttps
outsb
leave
mov
push
clc
iret
sbb
and
out
mov
sbb
and
xor
mov
sub
lock
adc
sbb
and
push
imul
xchg
cltd
dec
pop
stos
aaa
data16
add
jae
xor
push
xlat
fsubrs
daa
push
sbb
cmp
lea
xchg
in
pop
gs
sbb
ja
ficoml
fiaddl
push
add
icebp
out
dec
and
ja
scas
sub
inc
add
or
pop
ficompl
jle
jecxz
jecxz
cs
leave
pusha
jns
mov
xor
pop
shl
xchg
or
cmp
xor
mov
add
cvttps2pi
es
mov
rclb
fwait
jb
pop
dec
aad
xchg
rol
fldt
xchg
daa
xlat
cs
xchg
das
shl
and
les
jg
add
nop
pop
dec
sub
insl
adc
jecxz
xchg
cld
cmp
mov
subl
and
stos
jecxz
and
jge
mov
sub
out
movsl
aad
sub
pop
sub
pop
or
in
dec
int3
pusha
and
mov
insl
mov
dec
lcall
popa
add
cwtl
add
push
insb
leave
sbb
mov
sbb
scas
movsl
xlat
sbb
lahf
inc
fisttps
icebp
xchg
xchg
cmp
gs
cmovs
and
pop
mov
sbb
mov
xlat
push
push
pushf
fdivs
push
fwait
push
or
xor
nop
sbb
mov
int
popl
ljmp
frstpm(287
mov
in
ds
and
and
cmpsl
mov
push
jmp
add
call
lods
ss
cmp
stos
cmp
adc
xor
adc
test
jo
adc
ds
sub
xor
push
and
pop
in
xor
popa
pop
lods
lods
addl
aaa
push
pop
inc
xchg
push
jnp
jl,pn
hlt
pop
dec
adc
mov
ja
call
mov
cmp
je
mov
inc
ja
dec
cli
mov
out
xchg
pop
xor
pop
lods
cs
cmp
mov
dec
adc
js
test
push
out
insl
cmp
fcompl
scas
cmp
pop
out
jne
aaa
pop
or
pop
fs
cmp
mov
clc
sbb
sbb
jmp
imul
dec
into
xchg
jbe
data16
push
xchg
push
sub
sbb
fwait
dec
sub
cmp
scas
popa
push
jp
pop
jmp
hlt
push
test
mov
call
mov
lods
cmpsb
pop
pop
xchg
mul
into
enter
popf
inc
push
jae
mov
outsl
mov
and
dec
imul
mov
cli
mov
hlt
sub
push
pop
stos
or
mov
dec
ljmp
dec
daa
or
xchg
js
push
add
loope
xchg
pushf
mov
out
iret
inc
xor
cmp
mov
mov
clc
loop
rclb
pop
mov
stos
into
pop
inc
movntq
xorb
arpl
mov
dec
imulb
sarl
ljmp
mov
out
js
sub
iret
cld
pop
or
xlat
xor
cmp
cmp
inc
cmpsl
sub
pop
sub
xchg
pusha
cmp
fwait
loop
shll
movsb
add
lea
mov
jle
cmpsl
inc
ljmp
fidivl
and
clc
das
or
adc
xchg
int
inc
fisttpll
out
stos
jnp
icebp
call
test
mov
add
test
jp
jl
std
mov
fsub
pop
dec
mov
sub
outsl
fidivs
leave
fsqrt
fcmovne
jae
shll
clc
daa
add
clc
mov
adc
pop
mov
lock
pop
les
inc
pop
stos
mov
or
or
daa
stos
push
push
popa
cwtl
xchg
daa
mov
and
xchg
lret
fisttpll
xchg
jge
pushf
jo
mov
shrl
sbb
insb
scas
je
mov
ror
repnz
cld
mov
into
dec
fmuls
xchg
sarl
scas
xchg
push
xchg
fdivs
adc
or
cmp
rcr
push
cli
inc
scas
hlt
inc
js
mov
test
nop
add
push
xchg
scas
pop
fs
push
jb
xor
dec
scas
jns
das
add
push
add
sbb
mov
es
pop
jnp
xchg
lcall
mov
test
push
mov
mov
pusha
sti
xor
push
addb
rorl
shll
push
mov
push
sbb
mov
and
fildl
sbb
ja
jns
jno
scas
popa
aaa
mov
push
mov
iret
inc
cld
push
add
cwtl
in
icebp
sbb
xlat
gs
pushf
mov
pop
jle
and
inc
adc
out
inc
cmp
loope
out
mov
adc
ja
push
cmc
out
lds
pop
dec
pop
push
or
mov
lcall
jg
es
iret
imul
adc
and
ret
mov
je
push
sti
rcrb
lea
cmc
or
mov
inc
bound
ret
and
stos
fiaddl
jns
rolb
fsts
sub
cmpsb
inc
push
fldl
mov
or
lds
xchg
add
movsb
pop
mov
in
add
mov
or
sbb
popa
jle
std
test
mov
pop
mov
rcrl
fstl
imull
sbb
adc
movsb
pop
arpl
in
dec
xchg
fs
push
mov
ret
cmpsl
adc
sbb
sub
bound
jl
fwait
shrl
cmp
mov
xlat
pop
mov
pop
or
jmp
xor
and
nop
iret
in
es
jle
notb
into
sub
leave
test
jge
jne
push
mov
iret
loope
adc
cmc
sbb
sarb
cmp
out
inc
rcll
arpl
insb
stos
jno
mov
adcb
je
outsl
jecxz
movsb
push
ja
cmp
push
loop
subl
ud0
xor
ror
test
mov
mov
cli
repz
mov
fcoms
scas
loope
sbb
jmp
mov
and
in
js
out
or
push
inc
test
push
dec
in
mov
mov
leave
test
inc
mov
xchg
mov
pop
xchg
mov
fisttpl
movsl
xchg
pop
xchg
sbb
adc
inc
inc
cmc
scas
add
insb
push
mov
popf
cmpb
insl
mov
add
jg
mov
cmpl
nop
sub
mov
add
sub
cltd
std
andl
std
mov
sahf
push
lret
in
sbb
in
add
push
lahf
sarb
fwait
test
dec
push
dec
add
mov
push
cmc
pop
sub
jno
mov
add
dec
push
pop
cmp
lods
shrl
mov
jge
and
mov
clc
enter
inc
lods
mov
imulb
inc
push
adc
lret
gs
bound
loopne
xor
leave
mov
sarb
adc
scas
push
mov
leave
adc
mov
cltd
mov
sub
sub
inc
mov
adc
loope
das
repnz
push
adc
sbb
mov
lods
popf
and
push
inc
adc
je
or
movsl
and
mov
repz
daa
mov
adc
push
jp
cmp
xchg
xchg
arpl
fisttpll
inc
add
lods
les
lret
aaa
mov
inc
xchg
orb
loope
jbe
ret
jae
xor
arpl
pop
fld
fcmovbe
sarb
flds
jo
fld
adc
andb
lret
insb
xchg
fwait
push
lcall
lahf
movsb
cmp
movsb
paddb
jno
xchg
adc
and
ficomps
into
ljmp
and
sub
pop
popa
add
shl
jnp
std
xor
rclb
loope
sub
lret
dec
insb
inc
pop
ljmp
cmp
xor
pusha
scas
dec
jbe
out
or
pop
mov
mov
cli
pop
cld
mov
adc
addb
dec
jle
lcall
jbe
cmp
xlat
sbbl
xchg
fidivl
xchg
sub
push
cmp
sbb
les
mov
cltd
sbb
inc
cmp
fisubs
aam
jmp
dec
out
cmp
test
data16
dec
imul
xor
and
push
negl
pop
or
dec
fld
mov
movntps
add
stc
cmp
clc
push
decb
cmpsl
ret
pop
stos
adc
cli
mov
push
repz
dec
xchg
cmp
sub
xor
out
outsb
sahf
lods
dec
std
mov
cltd
shll
push
cli
pop
ja
cmpl
inc
dec
push
xor
mov
mov
das
dec
add
sbb
adc
enter
ret
mov
push
jo
je
adc
mov
addr16
pop
flds
cwtl
out
mov
nop
xor
jo
pop
popf
jnp
out
cli
lock
sbb
stos
and
jnp
rcll
mov
aas
lret
push
mov
cwtl
sbb
cmc
pop
stos
pop
clc
ret
pop
mov
mov
or
mov
push
mov
jb
cmp
in
fistpl
jb
sub
leave
or
cwtl
and
and
mov
xchg
mov
pop
mov
pop
mov
mov
or
push
lcall
push
and
mov
insb
aaa
ja
movsl
cmpb
movsb
orl
addr16
mov
inc
dec
xchg
int3
sbb
xor
int
pop
and
std
or
test
inc
out
xor
mov
rol
xorl
es
in
mov
sbb
inc
scas
out
mov
mov
int3
jae
xor
xor
pop
andb
cld
jmp
push
mov
fistps
add
push
iret
out
xchg
and
fisttps
push
push
mov
sarb
stos
adcl
out
icebp
outsb
daa
fdiv
cmp
insl
out
ret
sub
in
push
push
add
leave
jne
add
push
push
hlt
push
adc
push
fiaddl
push
pop
pop
mov
in
adc
pop
and
xacquire
pop
or
mov
sub
jbe
fistps
leave
sub
xchg
inc
mov
idiv
inc
pushf
xchg
sti
push
aas
jge
xchg
gs
imul
loope
add
enter
mov
test
cmp
icebp
and
xor
pop
add
jge
inc
and
addr16
and
push
mov
or
insl
insb
sub
mov
push
dec
rcrb
js
test
leave
adc
or
loopne
popa
dec
scas
ja
outsb
xor
inc
xor
ds
clc
pop
mov
add
push
or
std
and
lods
popf
lea
lock
popf
std
pop
push
cli
pop
adc
pop
ss
js
jmp
and
or
aaa
dec
mov
fiadds
mov
ror
sbb
adc
xchg
jo
and
in
or
push
or
inc
inc
dec
inc
adc
add
fistl
push
sbb
mov
mov
push
mov
mov
push
fistps
fnsave
add
inc
jb
popf
dec
pop
mov
push
shlb
jnp
pop
or
jae
aas
jbe
jecxz
push
adc
clc
inc
out
cmc
mov
pop
add
dec
in
fnsave
clc
mov
popf
lods
push
cmp
mov
inc
stc
das
xchg
loopne
push
xor
pop
popa
iret
std
sbb
repnz
and
popa
out
into
pop
fistps
ret
out
add
fstpt
mov
jo
mov
andb
inc
loope
gs
xchg
rcll
test
stos
xchg
jb
and
aad
pusha
ja
nop
add
pop
pop
inc
out
shrl
cmp
int3
push
sbb
jno
mov
shrb
outsl
bt
or
or
fidivrs
push
pop
dec
lds
ss
jnp
push
rcr
inc
test
loopne
lods
out
push
inc
loopne
leave
int3
mov
push
aaa
pushf
push
or
daa
and
lahf
mov
xchg
push
and
adc
pop
out
jmp
pop
cmpsb
imul
push
jecxz
cli
add
in
fnstenv
cmp
aas
fcomps
dec
andb
sbb
gs
stc
es
xchg
iret
xchg
inc
cmp
adc
xor
add
xor
adc
inc
mov
and
pusha
push
sbb
adc
int
outsl
mov
mov
push
in
sub
mov
mov
ja
in
push
dec
fstp
xchg
icebp
cs
lds
repnz
push
sbb
xchg
mov
jo
lret
jmp
xor
rcrb
mov
test
rcrl
push
ljmp
sar
add
pop
ja
mov
out
push
pop
xchg
mov
stos
loope
sub
pushf
iret
push
shl
pop
lods
sbbb
push
xchg
mov
aas
cmp
mov
jmp
xorl
cmp
or
sbb
push
repnz
push
mov
jg
pop
cmp
enter
ret
adc
dec
and
fisubrl
fbstp
cs
lea
pop
fsub
mov
pop
dec
sarb
hlt
xor
sub
in
out
xor
rolb
mov
enter
push
cmp
push
negb
cmpsb
into
jle
mov
dec
ljmp
sbb
out
cmp
sbb
mov
imul
adc
outsb
das
xchg
add
inc
mov
popf
int3
ret
cmp
push
nop
adc
push
add
cmpsl
paddw
xor
sub
cmpl
in
ret
imul
stc
es
xchg
push
jno
int3
adc
jle
sbb
dec
inc
cmc
clc
out
test
int
mov
std
mov
loopne
lahf
xor
cs
push
cmp
ss
cli
mov
push
adc
in
divps
pop
mov
dec
lock
leave
ljmp
adc
mov
xor
adc
test
mov
scas
ja
or
ffreep
push
les
dec
cmp
mov
shrl
mov
lret
xchg
jb
ja
or
cltd
sbb
mov
js
sub
mov
cmp
sub
scas
les
pop
mov
mov
sbb
or
mov
jb
insl
addl
mov
push
enter
shlb
movsb
and
and
xchg
push
outsb
xchg
sahf
and
nop
push
mov
add
aas
inc
scas
pop
arpl
das
jl
popa
and
sbb
xor
fsubrs
xor
cmpsb
scas
outsb
adc
xchg
lcall
movsl
js
int3
dec
sub
test
inc
pop
out
out
mov
clc
dec
sub
jecxz
outsb
fs
mov
sbb
fisttps
aas
mov
lods
inc
or
stos
push
adc
mov
pop
lahf
enter
lods
mov
ljmp
xchg
mov
add
popa
dec
xlat
negb
or
into
imul
jae
sub
mov
xchg
into
xchg
sub
mov
push
cmpsb
sub
pop
imull
push
test
push
and
dec
js
add
sti
jnp
inc
addr16
xchg
aaa
mov
aam
xor
das
push
or
adc
add
imul
inc
mull
cmc
sub
mov
jno
fcoml
cmc
imul
es
mov
or
mov
outsb
push
in
xor
fcomps
lea
lods
and
loopne
xchg
lret
movsb
pop
lea
and
or
enter
jge
inc
fwait
push
mov
pop
jg
inc
rcl
xor
popf
inc
sti
rcll
imul
dec
stos
push
add
ds
jecxz
push
loopne
orb
pop
xlat
add
or
dec
lcall
loope
or
cmp
or
sti
push
pop
sahf
pop
and
pop
aas
add
sub
icebp
sub
cltd
mov
adc
data16
ret
in
or
and
cmp
loope
insb
push
pusha
inc
xlat
stos
movsl
pusha
sub
int3
fstpt
sti
push
mov
xchg
inc
dec
xlat
lock
movb
push
mov
jge
inc
and
push
divps
pop
xor
movsl
test
mov
ljmp
or
mov
je
adc
out
ret
dec
jle
mov
sbb
inc
xor
stos
imull
repnz
dec
inc
cmp
out
jecxz
xchg
cmp
fistl
jns
daa
rorl
cmp
push
daa
hlt
aam
test
test
add
fadds
clc
call
daa
lcall
mov
cmp
sti
xor
xor
sarl
pop
int3
enter
aam
lea
push
jmp
cmpsl
xlat
jno
into
clc
mov
out
into
pop
insl
dec
pop
out
sub
add
call
mov
xchg
setns
outsb
test
repnz
mov
out
adc
lret
fcompp
push
sub
sarl
loope
fistps
jecxz
mov
pop
ss
jbe
push
cwtl
stc
scas
pushf
and
xchg
or
mov
push
push
lods
gs
out
sti
inc
and
out
and
mov
pushf
xchg
imul
inc
jno
out
std
fwait
dec
mov
aas
subb
or
pop
aas
jo
dec
mov
js
or
xlat
pop
dec
jnp
clc
out
lds
adc
ss
xor
cmp
sti
dec
les
outsb
jmp
in
sbb
iret
les
shlb
jmp
cmc
sbb
movsl
test
in
push
loopne
dec
out
adcb
jae
inc
aas
lahf
mov
scas
xor
test
cmp
pop
ja
and
xor
jnp
push
inc
dec
rcr
cmp
les
jne
rolb
mov
sub
lds
out
lahf
scas
xchg
repnz
enter
outsb
add
mov
popf
or
hlt
xor
jp
mov
sbb
cs
mov
into
or
pop
jns
insl
adc
cmpsl
rcrl
jge
adc
xchg
ret
filds
pusha
mov
js
in
inc
dec
gs
dec
or
and
and
dec
stos
sbb
loopne
fstps
mov
les
push
rcll
das
jnp
je
in
std
int
xchg
mov
stc
adc
cmp
out
arpl
andb
lahf
xor
cmp
lcall
loop
out
rcrl
mov
outsl
add
jmp
pop
sbb
mov
outsb
xchg
jno
outsl
or
add
lret
sti
dec
les
jle
call
das
xorb
mov
stos
enter
out
pusha
xchg
mov
jns
pop
pop
lods
mov
jne
mov
stos
push
adc
xchg
out
scas
and
pop
repnz
test
xor
pop
xor
aas
jecxz
loop
sbb
test
ljmp
add
jecxz
cs
leave
sub
jno
xor
movsl
movsb
sub
shll
ja
pop
mov
sbb
loopne
mov
jnp
lret
cwtl
sub
or
cmpb
sti
fcmovnb
and
mov
mov
imul
mov
jmp
insl
syscall
ljmp
jg
or
cmp
xlat
sbb
sbb
cmp
push
jl
call
mov
imul
lock
int3
mov
and
pop
bnd
pushl
dec
cmp
or
pop
mov
mov
dec
incb
mov
dec
and
cmp
pop
shll
add
xor
test
fwait
jle
fdiv
and
xor
mov
inc
lret
mov
add
aaa
sbb
incb
mov
jns
out
outsb
les
inc
loop
push
jo
lods
lahf
fsub
push
sub
inc
mov
mov
test
dec
jle
cltd
jg
and
shlb
lret
sbb
loope
faddl
and
push
or
shrl
in
mov
and
fwait
mov
movsb
add
pushf
pop
cmpsl
dec
mov
add
xlat
dec
inc
aas
lret
jno
stc
or
jecxz
xchg
in
pop
pop
adc
push
sbb
popf
fistps
call
mov
pushf
cmp
push
adc
xor
inc
sbb
add
enter
cwtl
lcall
jge
inc
clc
arpl
add
imul
xchg
sbb
out
hlt
imul
fs
adc
xor
rol
and
mov
add
nop
test
xchg
cmp
movsl
dec
cli
mov
xorl
test
or
add
or
cmp
lea
aad
out
test
sbb
arpl
pop
jle
icebp
in
cmp
fistps
xchg
mov
dec
cmc
repnz
mov
leave
outsb
mov
mov
rcl
fdivrl
stc
ljmp
insl
stc
lods
out
add
pop
dec
rolb
imul
out
cmp
lds
push
jmp
call
leave
jmp
mov
ss
sbb
sbb
adc
movsb
inc
popf
inc
or
mov
xchg
add
or
cmc
sbb
mov
incb
jbe
jo
in
or
gs
js
pop
lds
jle
cmpsb
and
cmc
sub
dec
test
jb
adcb
mov
jo
iret
mov
sar
mov
rcll
sbb
mov
adc
std
xor
mov
adc
lahf
lods
mov
sahf
sub
out
fdivs
movsl
sbb
push
inc
lods
inc
roll
dec
pop
sbb
je
sub
jno
mov
sub
lods
add
scas
cld
push
and
mov
inc
mov
xor
call
fs
push
adc
ss
xchg
add
ljmp
inc
lret
lahf
ficoml
test
push
mov
xchg
mov
pop
add
pop
cmp
test
pop
sti
lods
adc
int
fmul
lahf
pop
orb
in
pop
pop
das
test
pop
pop
mov
jle
aaa
sahf
dec
dec
in
repz
mov
add
test
jo
and
sbb
int
fimull
cwtl
push
negb
loop
xchg
arpl
imul
iret
in
popa
jmp
ja
ja
push
mov
sub
mov
sarl
add
add
lret
pop
pop
xor
bound
loope
xor
cmp
shll
out
subl
mov
cli
cmpsb
inc
push
in
adc
sahf
outsb
adc
add
mov
adc
inc
fnsave
popf
in
ja
or
push
sub
fsubrs
lds
cmp
fcoml
xlat
dec
sbb
inc
iret
mov
push
mov
xchg
test
dec
sbb
stos
or
fiadds
or
pop
add
add
nop
jbe
inc
shrb
push
add
gs
cli
mov
ss
and
mov
inc
inc
in
imulb
stc
test
sbb
fisubrs
fbld
mov
cmp
jle
xchg
push
nop
jnp
push
sbb
movsb
cmc
mov
pop
ja
inc
fimuls
and
and
push
sub
push
in
popa
aas
fnstenv
sbb
cli
lcall
or
pusha
push
loop
xor
pop
fisttps
loopne
jp
add
hlt
inc
das
add
push
nop
xor
fwait
stc
jl
adc
push
inc
mov
int3
mov
jns
xchg
mov
leave
call
loopne
fisttpl
dec
popf
loope
repz
idiv
andl
pop
pusha
dec
adcb
jbe
cmp
push
mov
daa
push
mov
test
jne
and
pop
ja
out
inc
ss
leave
sar
sbb
pop
mov
pop
pop
nop
aas
lcall
lea
push
mov
sbb
nop
and
iret
bound
sbb
scas
cmpsb
mov
sbb
shl
iret
cmpsb
push
lret
iret
test
and
mov
pop
ja
lcall
fidivrl
push
jmp
stc
repz
adc
mov
fsubs
cmp
push
arpl
mov
xchg
aam
jp
sti
cs
cmpsl
sbb
jmp
fcmovnbe
insl
pusha
roll
addr16
test
mov
xchg
or
mov
rolb
jecxz
mov
lcall
sub
lods
adc
out
mov
push
cmpxchg
and
in
enter
inc
mov
pop
xchg
dec
out
in
push
insl
clc
cmc
das
fidivs
clc
lods
out
add
xchg
test
xor
cmp
in
dec
insl
push
mov
add
lds
stos
pop
popf
and
sub
xor
cmc
std
add
nop
pop
popa
pop
lods
insl
or
movups
add
frstor
fldt
mov
fsubrs
or
cwtl
cli
movsb
fwait
adc
pop
mov
sbb
icebp
nop
cmp
fs
bound
xor
decb
nop
stos
pop
repnz
test
lea
mov
dec
mov
aad
mov
pop
cmp
add
ret
fdivrp
lods
xchg
dec
pop
xchg
mov
mov
xchg
into
lods
arpl
rolb
test
push
mov
fwait
mov
mov
sbb
into
rorl
adc
push
adcb
ljmp
je
xchg
sub
mov
xchg
lret
cmpsl
and
loopne
push
xor
xor
sub
in
mov
inc
cli
and
sbb
movsl
and
cmp
jmp
or
mov
push
jae
or
xor
aaa
jge
repz
xchg
xchg
adc
les
das
push
ds
xchg
push
push
inc
adc
and
ljmp
mov
testl
cld
push
outsb
dec
push
sub
int
bound
das
cmp
rcr
and
cld
mov
fistl
fwait
cld
lret
push
decb
cmpsl
dec
test
mov
ja
jo
cmpsl
adcl
and
popl
cmp
mov
mov
mov
dec
sub
idivl
scas
lods
faddl
jecxz
mov
push
push
mov
repz
shll
repz
xchg
sbb
enter
stc
dec
push
subl
push
mov
lock
sahf
inc
pop
add
mov
xchg
mov
mov
adc
enterw
pop
and
xchg
lea
fdivrs
dec
pop
and
jnp
mov
cld
hlt
pop
dec
pop
insl
sbb
xchg
sbb
mov
push
mov
inc
bswap
enter
inc
gs
sub
xchg
xor
dec
xor
popf
frstor
dec
inc
popa
and
ljmp
cmp
dec
pop
sub
addr16
and
push
and
sub
push
and
sbb
shlb
cmp
mov
mov
mov
test
cmp
ljmp
sub
jb
jnp
and
std
or
jne
popf
and
andl
test
xchg
int
xor
mov
repnz
sub
mov
inc
jmp
mov
lcall
mov
in
mov
jge
and
xor
pop
hlt
dec
xchg
xchg
test
inc
adc
hlt
shll
xchg
xchg
cmp
inc
insl
fisubrs
mov
adc
rcrb
sbb
jl
ror
repnz
rcll
fsqrt
lcall
inc
xlat
ja
repnz
jne
cmc
outsb
lods
xor
xchg
dec
test
sbb
xor
jb
sub
inc
jae
sub
jmp
pusha
lcall
dec
cs
push
in
push
sbb
sbb
out
mov
rol
sub
mov
add
pop
sub
mov
xchg
cmp
daa
sbb
icebp
or
sbb
cmp
push
movsb
mov
fldcw
out
cmp
into
int3
aad
movsl
or
enter
or
pop
mov
sti
xor
and
fiaddl
notl
fmull
cmpsl
cmp
lahf
jmp
push
imul
and
fisubrs
mov
js
cld
stc
mov
out
out
hlt
mov
sub
pop
repz
pop
fnstenv
int
cmpl
int3
je
mov
insl
js
push
sub
pop
addr16
adc
roll
mov
in
stc
push
aam
xchg
das
je
stos
push
rcll
sub
into
out
test
addr16
into
jbe
push
mov
pop
jbe
mov
fs
dec
mov
stos
xchg
aas
out
xchg
dec
sbb
scas
fisubrl
xchg
fdivs
dec
cmpsb
das
lret
jno
xor
lahf
dec
push
sahf
js
or
and
rcll
lods
mov
shlb
fiaddl
lock
scas
imul
andl
mov
insb
add
test
mov
mov
sarl
cld
pop
lahf
mov
mov
or
aas
sub
clc
sahf
sbb
hlt
jg
mov
push
imul
adc
pop
std
out
lahf
rorl
push
cltd
aam
inc
push
in
rep
ret
cwtl
addr16
inc
pop
dec
sub
mov
cltd
popa
mov
nop
outsl
lea
lods
lods
and
sub
dec
xchg
push
dec
cmp
jne
mov
mov
jecxz
je
lods
scas
mov
cld
push
addps
inc
mov
data16
les
xchg
fiadds
inc
add
test
jecxz
pop
xchg
dec
jg
mov
iret
std
jae
mov
and
and
adc
in
inc
fs
push
mov
testl
xchg
mov
push
stos
xchg
shl
test
sarl
sub
ljmp
sbb
xor
mov
or
scas
pop
xchg
jb
mov
sub
or
pop
mov
add
scas
fs
aaa
test
outsl
ja
or
mov
sub
dec
lods
push
test
sub
mov
sub
or
mov
sahf
out
ds
fsub
add
std
daa
push
mov
dec
movsb
ret
xchg
push
add
pop
mov
fimull
lock
jg
cmp
inc
lods
roll
loopne
ja
xor
cs
xchg
ljmp
adc
jmp
jp
aam
jns
jb
lea
jge
adc
out
ss
dec
aad
push
or
sbb
mov
je
sbb
pop
sahf
hlt
pop
push
and
fstpt
jo
mov
mov
pop
adc
fcompl
imul
fwait
lcall
sub
inc
add
jbe
imul
pusha
cmp
int3
inc
std
mov
jl
sarl
dec
jb
mov
adc
bound
dec
xchg
mov
fs
jo
aaa
rcrb
stc
mov
arpl
mov
loopne
daa
std
outsl
sbb
jbe
or
adc
jns
cld
sti
mov
sbb
cwtl
lret
ret
stos
cmp
push
enter
lcall
jmp
push
outsl
cmp
fldt
adc
lea
fcomip
lcall
jae
lock
in
inc
dec
inc
or
push
pop
xor
adc
add
scas
aam
je
lcall
das
movb
and
push
adc
aas
and
icebp
cmpsl
sbb
sub
mov
dec
mov
add
cld
pop
xor
sbb
pop
inc
lods
sti
lock
mov
fiadds
pop
movsb
mov
insl
push
and
fwait
jne
mov
adc
push
pop
mov
pop
push
xor
subl
mov
js
inc
xor
inc
or
aas
js
mov
push
lret
mov
aad
sbb
gs
repz
aaa
pop
xor
out
cmp
shr
sub
rorl
testb
movsl
inc
jp
ljmp
shll
push
pop
xchg
lret
and
arpl
cmpsl
dec
ds
scas
mov
jb
dec
cs
mov
nop
adcl
mov
xchg
lret
xchg
pushf
push
fistl
push
pop
cld
push
pop
adc
mov
fdivrl
lret
xor
mov
fdivl
arpl
loope
jno
mov
gs
cld
fdivrl
inc
or
lea
pcmpgtb
jge
lds
adc
xor
add
dec
and
repnz
mov
xchg
out
cs
ja
daa
lcall
push
jl
lea
sahf
pop
cs
jecxz
ret
mov
add
mov
popa
mov
jbe
aam
fsts
test
or
nop
mov
push
mov
or
push
fwait
and
testb
addb
out
out
fdivrl
jo
sub
popa
mov
gs
xchg
push
hlt
jb
subl
shrb
js
data16
fucompp
fidivrs
movsl
imul
pusha
sbb
aam
out
xchg
sbb
movsl
inc
cmp
mov
lret
adc
dec
mov
fdivrl
xchg
sbb
lds
sub
daa
mov
inc
das
pop
and
pushl
leave
pop
cmp
cmp
shr
cmpsb
xor
loop
push
dec
and
inc
mov
out
jnp
icebp
aas
xchg
push
ds
test
sbb
xchg
inc
out
inc
xchg
shlb
jne
inc
loopne
cltd
sub
ja
mov
push
movsl
sbb
and
mov
mov
fidivl
push
clc
inc
pop
jecxz
pop
mov
xchg
mov
inc
or
imul
inc
cmp
sub
mov
adc
push
sbb
outsl
push
cltd
pop
push
fildl
insb
dec
fstp
pop
and
imul
mov
ret
push
test
jecxz
rorb
arpl
out
aam
xor
or
popa
lock
sbb
fnstcw
jecxz
mov
adc
filds
push
inc
sti
cltd
addr16
and
shlb
fcoml
pop
outsl
cmp
xchg
pop
dec
scas
pop
mov
push
fdivr
les
sub
sub
dec
cmpsl
iret
movsl
jno
sbb
mov
sbb
xor
lret
in
xchg
lds
insb
push
jbe
popf
pusha
cs
sub
ret
cmp
cmp
out
test
or
add
and
call
mov
ljmp
and
out
in
scas
sbb
lret
fisttpl
cwtl
aas
cmp
les
in
dec
jnp
aam
adc
jne
fidivrl
cmp
pushl
cmpsl
mov
ret
inc
aaa
and
fisubl
mov
jmp
adc
repz
jl
scas
mov
mov
clc
mov
call
cwtl
out
outsl
mov
xchg
fdivr
mov
sub
fwait
xchg
push
ficompl
and
lcall
mov
push
loop
int3
sbb
ljmp
jecxz
push
ljmp
daa
out
adc
lock
hlt
push
cs
mov
cmp
shrl
dec
insb
test
mov
jbe
jae
jp
pop
mov
jmp
xchg
cmpsb
jp
jb
sbbb
xor
gs
repz
inc
in
jl
jns
das
push
cli
lret
dec
xor
push
xor
ds
mov
pop
cmpsb
ret
cmc
xchg
add
leave
es
hlt
or
lds
inc
dec
jbe
and
pushf
icebp
dec
mov
outsb
cld
push
in
imul
dec
iret
lret
cs
or
mov
push
int3
mov
repz
lret
cmp
sbb
or
xchg
xchg
leave
fdivs
push
call
mov
adc
pop
or
xlat
data16
std
sarb
mov
push
cmp
ljmp
sbbb
into
cmpsb
bound
mov
push
mov
jecxz
inc
out
test
push
jnp
xor
stc
push
mov
divl
nop
inc
cmc
push
outsb
scas
adc
mov
mov
data16
cmp
pushf
inc
cmp
fnstcw
pop
test
jne
mov
mov
pop
leave
sbb
iret
xchg
adc
pop
ja
sbb
pushf
repnz
das
jnp
sbb
jg
repnz
xor
mov
cmp
hlt
mov
mov
cmc
icebp
cld
lret
addr16
push
sbb
scas
fidivl
inc
mov
imulb
cmpl
shlb
pop
push
jge
inc
cmpsl
mov
in
es
into
sbb
loopne
out
jns
ja
mov
lret
mov
cmp
jno
fdivr
movb
dec
loop
or
addr16
cmp
cs
movsb
jns
sub
mov
add
in
cmp
jae
lds
adc
xchg
pop
sbb
inc
out
inc
les
ret
pop
mov
sub
or
arpl
out
icebp
rcl
pushf
jmp
pop
cwtl
push
or
and
fistpll
orl
pop
push
mov
push
aas
bound
das
inc
and
rcrl
outsl
test
clc
or
add
push
les
stos
and
jne
int
mov
loop
inc
dec
xor
ret
loope
mov
icebp
inc
push
inc
rorl
mov
jne
out
repz
fcom
in
fisttpll
aas
xchg
jecxz
cmp
int
sbb
ljmp
sub
push
add
insb
dec
sub
add
mov
outsb
lods
fwait
dec
ret
push
dec
sbb
xor
jb
testl
test
dec
loopne
jmp
movsb
xchg
dec
leave
je
xlat
xor
fs
addr16
cwtl
mov
cwtl
adc
fbstp
add
inc
inc
test
stos
fisubs
lock
xchg
fbstp
adc
push
test
outsb
dec
jmp
jge
jp
cmp
test
and
sbb
mov
stos
insb
cmp
mov
or
pop
lahf
sub
jns
and
inc
mov
dec
repnz
lea
mov
clc
subl
mov
xchg
fidivrl
add
out
cmc
aad
dec
movsb
arpl
sub
dec
push
insl
ljmp
lcall
dec
leave
addr16
sahf
dec
out
and
data16
add
je
mov
adc
xchg
mov
ret
jnp
sub
icebp
mov
add
inc
jecxz
cmpsl
xor
imul
pop
fs
cmpsl
daa
pop
aad
pusha
fsubr
shll
inc
sbb
arpl
loop
and
out
jmp
sub
add
inc
push
inc
push
jge
daa
push
ret
mov
in
xor
sub
adc
mov
gs
fcmovbe
pop
fldl
dec
xchg
mov
sub
xchg
cmpsl
jno
inc
push
cmp
cmp
and
in
xchg
outsl
push
jno
xor
arpl
imul
adc
add
ds
pop
jle
rcrb
adc
mov
hlt
fisubs
icebp
gs
jge
jno
movsl
mov
cmp
aaa
sbb
cmp
outsb
dec
insl
adc
adc
fadds
mov
cmpsl
sarl
xor
adc
pop
jge
test
sar
mov
test
lds
and
jmp
xchg
scas
pop
inc
mov
int
mov
push
inc
mov
ret
dec
fcoms
mov
divb
sahf
lds
xor
mov
dec
mov
fs
in
rolb
fsubp
ret
pop
jo
xchg
mov
insb
dec
rcll
pop
and
je
dec
push
push
xchg
add
xchg
jno
loope
mov
xlat
jbe
mov
dec
test
outsb
cmp
imul
xor
jle
xchg
ja
mov
or
fistl
std
xchg
push
mov
mov
test
xor
xchg
cmp
jl
pop
jl
adc
add
mov
or
cmp
mov
cmpb
movsb
pop
mov
sarb
idivb
pop
out
sub
stc
prefetch
push
ds
add
or
dec
leave
and
bswap
repnz
enter
fwait
dec
or
xor
sbb
adc
fimuls
mov
push
shlb
mov
dec
aam
add
inc
std
jbe
int
mov
cmp
ja
aaa
and
push
adc
mov
fmuls
sub
push
xor
imul
fldl2e
mov
mov
test
cld
inc
stc
xor
int3
cltd
add
clc
cwtl
repz
mov
cmpsl
dec
push
jp
add
lcall
jp
add
fdivr
into
mov
pushf
mov
shrb
ret
pop
addr16
cmp
outsb
fs
fmull
and
repz
les
in
std
xchg
and
jle
pop
pop
fsin
xchg
lods
fdivr
xchg
fsubp
or
xor
or
iret
fs
push
daa
lret
test
lds
pop
jb
xchg
out
lds
sbb
scas
lods
sub
pop
fiadds
movsl
cmp
into
add
mov
daa
pop
popf
bound
jle
sub
mov
jecxz
fsubr
leave
inc
mov
sti
add
add
subl
repz
addr16
xor
cmpsb
and
aad
std
mov
movsl
push
dec
out
pop
add
das
movsb
cmp
mov
lret
mov
addr16
aas
mov
inc
in
es
outsb
fdivr
add
movlps
sbb
mov
push
push
je
jnp
pusha
add
mov
enter
mov
out
mov
hlt
push
mov
mov
xchg
cmp
test
mov
xchg
cmp
cmp
or
push
cs
popa
dec
xchg
inc
loopne
mov
sahf
pop
push
fst
cmp
dec
mov
jge
aad
jae
mov
sti
test
and
pushf
test
jne
sbb
mov
xorb
push
dec
and
lds
or
mov
push
and
daa
cli
clc
bound
in
and
mov
std
jb
into
data16
lock
icebp
push
or
jbe
pop
push
push
aad
dec
mov
fnsave
inc
jnp
pusha
test
jl
dec
clc
push
fwait
icebp
inc
inc
stc
jne
cmp
xlat
inc
fucomip
mov
test
cmp
popa
movzwl
fucomi
xchg
sarb
lock
cli
pop
mov
test
insl
out
push
mov
lret
roll
mov
mov
cli
sbb
mov
mov
push
les
outsb
dec
add
mov
mov
outsl
cs
rcrb
outsb
cmpsl
cmp
loop
sbb
pop
add
lods
sbb
mov
jnp
pop
mov
or
test
sub
out
mov
and
cmp
outsl
popa
cltd
or
pop
cmpsl
inc
rcrl
sbb
les
xor
adc
icebp
xor
jb
and
mov
add
sbb
xchg
ret
in
jne
push
lret
test
sub
pushf
scas
xor
cmp
popa
xlat
push
cld
mov
leave
rclb
dec
mov
pop
nop
adc
pcmpgtw
mov
cmp
mov
or
fs
mov
pusha
stos
push
xor
xor
cmp
sbb
push
xor
push
jg
xor
push
gs
xchg
ljmp
mull
dec
into
fnstcw
fistl
rcrl
test
loop
jb
pop
xchg
sub
test
cld
test
test
imul
dec
and
repnz
lahf
dec
addb
xchg
cmpsb
pop
test
sbb
addl
and
adc
cs
mov
inc
mov
dec
icebp
mov
int3
js
das
push
out
sti
adc
popa
jge
xlat
ret
stos
cmp
lret
ret
sub
int3
and
adc
mov
fadds
stos
jle
xor
mov
lock
daa
movsb
pop
dec
stc
outsl
jmp
add
jle
movsb
iret
adc
inc
inc
jbe
inc
jg
loop
sbb
sbb
add
out
cmp
jne
add
gs
xchg
sub
dec
and
movsb
jecxz
clc
rol
out
xor
xchg
jge
sub
lds
fiadds
popa
mov
int3
les
sub
jmp
mov
imul
cmpl
stos
aaa
stos
lea
stos
lret
fsubp
and
xor
out
into
insl
out
ds
jno
sti
sbb
inc
std
jg
sbb
jl
imul
loop
xchg
push
jne
and
das
rclb
xor
cmp
int
inc
mov
xchg
mov
hlt
push
inc
xlat
mov
outsb
inc
mov
icebp
inc
pop
int
or
jbe
ljmp
dec
jmp
or
leave
xor
test
lea
or
push
mov
es
or
jp
mov
loope
and
sbb
inc
dec
pop
pop
lds
dec
rcll
or
jbe
js
pop
out
push
fcmovu
jp
mov
push
inc
in
fistl
cltd
shlb
iret
xchg
cmp
cwtl
dec
outsb
dec
mov
pusha
mov
cmp
lock
pop
shrl
outsb
jns
xlat
pop
call
add
xchg
dec
push
mov
inc
pop
mov
decb
test
negl
bound
dec
aaa
test
cltd
or
pop
ret
add
pop
push
outsl
add
sbb
sbbl
dec
cli
cmp
rol
dec
movsl
mov
loope
nop
sub
or
pop
jle
aaa
mov
fstp
cs
and
push
adc
lahf
fdivs
inc
mov
or
incb
es
call
jae
fcoms
popa
ss
call
xchg
push
mov
adc
in
adc
ror
in
fs
inc
adc
push
test
aaa
jae
and
shrl
cmpsb
cmp
out
sbb
es
and
pop
insl
out
dec
adc
lock
push
xor
dec
mov
xchg
sbb
xchg
in
sbb
lods
mov
push
mov
sahf
push
cmp
dec
div
scas
ror
cmpsl
mov
add
mov
adc
lods
mov
inc
inc
lret
cmp
test
data16
or
xchg
sbb
test
mov
das
dec
lods
sub
jge
orl
scas
inc
ss
pop
fisttpll
jbe
pop
dec
fwait
pop
addr16
xor
insb
insb
sub
test
movsl
or
rcr
das
iret
shrl
adc
adc
and
push
mov
les
pop
dec
mov
push
out
dec
pop
js
jns
les
xchg
sbbl
mov
pop
divb
int3
arpl
insl
cmp
fisttps
movsl
add
test
icebp
ret
lock
sbb
clc
mov
adc
jns
and
pop
push
add
add
sbb
sub
jmp
lret
rcll
dec
sbb
out
push
xor
lret
add
xor
cmc
outsb
in
lds
popf
jno
push
orb
pop
mov
jle
js
ja
ljmp
jns
inc
mov
or
in
int3
ret
xchg
xchg
jmp
test
aas
sub
or
out
sub
inc
add
mov
push
int
sbbl
movl
push
mov
test
cli
xlat
and
add
mov
and
pop
pushf
and
jle
cs
es
es
fbld
mov
fstl
xor
icebp
fwait
pop
test
imul
push
mov
cmp
jae
jbe
scas
in
push
lret
adc
loopne
sarl
inc
push
sarl
push
xchg
dec
mov
push
outsb
stos
inc
mov
je
pusha
sbb
xchg
ja
popa
fmulp
cmp
shlb
mov
xor
out
daa
or
outsb
or
xor
mov
adc
iret
addr16
push
add
leave
ret
out
sbb
decb
mov
jle
xchg
lods
add
imul
mov
sub
inc
xchg
dec
dec
aad
in
jns
les
push
out
movsb
popa
fidivrs
test
ljmp
add
inc
pop
testb
lcall
insb
xor
pshufw
jmp
int
enter
sbb
inc
popa
xchg
fwait
call
imul
mov
or
or
cmp
adc
xchg
xor
inc
pushf
jns
ljmp
pushf
xor
aaa
jno
sub
sbb
adc
addl
inc
ja
jp,pt
imul
clc
fimull
mov
in
fstl
aas
xchg
mov
sub
xchg
cwtl
lahf
mov
imul
or
push
dec
adc
rcrb
insb
faddl
es
pop
ds
lock
jp
fldl
xor
fisubl
adc
adc
pop
dec
inc
es
mov
mov
push
rclb
or
xchg
inc
inc
repnz
cld
xor
repnz
jp
out
inc
dec
jbe
mov
mov
in
jb
adc
pop
adc
stos
sti
mov
addl
adc
sbb
movsl
dec
shll
nop
and
repnz
pop
ret
addr16
inc
jecxz
add
sti
out
pusha
jp
scas
adc
sub
sbb
scas
movsb
adc
das
arpl
imul
mov
adc
sarl
dec
fwait
cmp
lea
pop
enter
insb
inc
dec
xchg
scas
jmp
ret
push
scas
push
and
aas
sti
fsubr
push
shrl
xor
mov
pop
pop
pop
mov
mov
test
lahf
xchg
std
repnz
dec
adc
insl
mov
pop
jg
fcmovu
mov
call
mov
int3
sbb
test
fcmovb
cwtl
into
dec
pop
in
in
rorb
cmp
lahf
add
dec
xchg
sarb
pop
cmp
in
jae
jb
or
jno
add
test
mov
out
push
push
push
sub
push
inc
mov
or
dec
xchg
loop
pop
sub
ret
inc
add
shlb
mov
cmp
rcll
cmp
sub
push
mov
sbbb
pop
mov
add
mov
scas
sbb
in
hlt
add
shlb
mov
rcl
imul
xor
and
xchg
sub
cwtl
xchg
scas
pop
enter
push
mov
mov
packsswb
mov
mov
push
loope
xchg
pop
mov
adc
jg
xchg
cmpb
inc
cmp
sbb
pop
sbb
enter
lret
outsl
add
stc
mov
gs
rolb
pop
inc
pop
cmpsl
sub
mov
jg
mov
insl
xorb
mov
rcrb
fldenv
shll
mov
add
dec
pop
rol
int
xor
or
lds
mov
cmp
dec
pop
loopne
push
mov
sbb
adc
pop
push
decb
cmpsb
push
aas
rcr
imul
aas
pushf
push
xor
int
xor
sub
cmp
add
pop
jp
jbe
or
insl
adc
mov
dec
pop
xor
jbe
sbb
imul
inc
sub
mov
jbe
stos
into
lahf
ds
cmpsb
mov
daa
mov
popf
jns
js
pop
inc
fsubrl
je
ret
cltd
loopne
fildl
push
fsubl
adc
xchg
nop
mov
fwait
push
jmp
xchg
push
loopne
aas
xchg
adc
out
dec
sub
fs
aam
mov
sbb
cmp
mov
aas
push
push
xchg
xor
mov
jmp
test
icebp
std
sub
das
xor
int3
jmp
adc
lret
dec
jmp
out
into
movsl
dec
or
mov
sbb
fwait
in
pop
inc
aas
cld
and
outsb
les
push
inc
sarl
fadd
je
in
push
dec
gs
stc
xor
repnz
adc
mov
push
test
xchg
sub
mov
mov
clc
lds
out
xlat
add
jno
cs
xchg
dec
sbb
sub
inc
dec
cmp
je
sbb
dec
fmull
mov
or
test
fldcw
xchg
cmpsl
daa
ja
andb
pop
add
ficoml
into
adc
sbb
test
cmp
aaa
sbb
call
push
insl
cmp
sarb
fdivrl
and
sarb
in
cmpsl
aas
and
and
int3
xor
mov
scas
mov
notl
dec
imul
hlt
lds
dec
flds
mov
scas
sbb
adc
push
adc
popa
sarl
mov
sub
rorl
xchg
cld
xor
adc
sub
sub
hlt
mov
cmp
cs
cs
mov
push
rcrb
stos
les
mov
or
cmp
xchg
cs
fidivl
ret
popf
mov
pop
ret
mov
enter
pop
pushf
dec
sbb
fdivr
call
fisubs
loope
in
cli
push
ja
scas
push
jmp
ret
mov
cs
xchg
xlat
std
ljmp
jno
test
lret
sbb
sub
cmpsb
xchg
fld
mov
inc
jmp
inc
dec
nop
popa
out
scas
add
mov
test
mov
cmc
scas
pop
push
addr16
test
fstpl
insb
dec
pop
xchg
stc
cmp
stos
sbb
mov
les
mov
push
add
mov
out
mov
push
adc
xchg
xor
or
out
mov
lea
or
in
loope
outsl
rcl
jnp
filds
or
jl
xor
inc
xchg
sub
imul
fimull
stc
cld
imul
adc
call
inc
je
pop
sbb
cld
mov
sub
out
mov
loop
fdivr
ret
fstpl
push
sar
or
test
add
lret
rorb
cmp
int
aam
or
push
sub
dec
in
outsb
jecxz
mov
mov
addr16
pop
inc
sub
and
mov
mov
xchg
mov
insb
std
pop
dec
or
jmp
sahf
fcmovu
outsl
insl
jnp
fisttpl
lahf
push
dec
aas
nop
sub
pop
inc
ret
aad
pop
add
inc
xchg
clc
xchg
mov
in
gs
dec
fs
lods
das
ret
mov
add
pop
push
in
add
and
leave
rorb
push
lds
xchg
iret
jl
sub
cmp
cwtl
pop
scas
cs
xorl
mov
push
lods
mov
jb
aaa
xor
lcall
stc
xor
jnp
mov
dec
pop
es
xchg
xor
fdivrl
adc
or
div
repnz
mov
xchg
mov
loop
cwtl
push
add
xlat
lds
fmuls
inc
mov
out
push
test
cltd
cmpsl
pop
sub
pop
cmp
fwait
cmp
sbb
push
shl
push
cli
insb
jl
cmp
stos
adc
in
mov
xor
in
cwtl
insb
add
cltd
stc
clc
ret
mov
lahf
outsb
sbb
out
and
xchg
lcall
xchg
jno
es
adcb
push
bound
movsl
dec
mov
mov
fsubl
call
pop
mov
xchg
mov
mov
sahf
push
add
push
mov
fbstp
stos
jge
push
pop
sbb
adc
es
add
push
cmpsb
and
cmp
notb
imul
xchg
or
adc
or
shlb
mov
test
xor
cmc
push
or
add
or
fdivrs
cmp
addb
lret
test
cs
push
test
mov
sbb
mov
sub
dec
xchg
movd
aaa
fmul
xlat
xchg
adc
mov
pushf
cmp
shl
aam
push
mov
sahf
icebp
iret
ss
xchg
or
fidivl
nop
mov
jge
or
pop
inc
adc
jp
inc
sub
sbb
sub
inc
sub
lahf
cmp
push
call
push
fstl
mov
and
loop
stos
cs
pop
filds
pushf
outsb
stc
in
push
mov
iret
js
dec
test
cmp
pop
cltd
insb
shlb
mov
pop
cltd
inc
in
sahf
sbb
mov
mov
sub
mov
and
enter
adc
or
loope
or
xchg
and
or
out
inc
movsl
fs
ljmp
scas
sbb
cmp
adc
pmaddwd
test
pop
cmp
pop
cmp
divb
bound
mov
outsl
cmpsb
mov
jo
sbb
jb
sub
lret
dec
jo
into
sub
in
mov
mov
repnz
shll
test
sub
popf
dec
adcl
cmp
inc
iret
push
cwtl
adc
fisubrs
mov
popf
xchg
jns
ljmp
test
cs
mov
out
pushf
mov
cmp
sub
pushf
add
scas
dec
add
xchg
rclb
int3
pop
in
test
mov
sbb
xchg
ret
cld
in
scas
decl
mov
push
inc
fisttpll
dec
push
int
fcoms
call
popa
imul
je
xchg
jbe
xor
jns
xor
and
int3
xor
dec
fwait
inc
xor
aad
test
jmp
notb
arpl
xchg
push
shrd
bound
jl
add
mov
adc
mov
out
cmp
pop
mov
or
rcrl
insl
adc
loopne
scas
sbb
jecxz
sbb
add
pop
ficoml
int
dec
sub
lock
mov
test
and
jnp
push
loopne
xor
sbb
sbb
mov
mov
dec
subb
rolb
cwtl
lock
faddl
mov
je
mov
ss
outsb
push
jp
std
test
scas
inc
sub
sub
mov
and
xlat
xor
hlt
inc
lcall
push
xchg
ret
mov
cmpsl
add
jno
cmc
enter
jp
xlat
fstpl
hlt
xchg
pop
fldcw
out
sbb
cwtl
jno
cmpsb
icebp
and
xor
into
sbb
ja
sbb
cmp
scas
sti
add
and
or
xchg
jg
mov
mov
in
rcll
jecxz
pop
add
idiv
xchg
mov
and
scas
fwait
in
jb
xor
add
fs
mov
mov
mov
jno
adc
out
popf
les
into
in
sub
lret
ret
push
or
test
pop
inc
or
pop
xor
into
mov
je
ja
sarb
cmpsb
xchg
jle
and
clc
imul
jbe
or
add
sub
mov
xchg
ficoms
pop
pop
mov
jmp
ret
pop
sahf
add
push
scas
sbb
repnz
dec
js
dec
pop
adc
sbb
push
ljmp
fdivs
sub
stos
dec
xor
pusha
mov
dec
mov
leave
test
dec
outsl
cli
adc
cmp
jp
jne
lds
fistl
push
pop
aam
push
orl
ja
mov
les
add
pop
ja
int
shlb
push
addl
repz
dec
ja
addr16
movsb
rorb
add
pushf
ss
mov
push
adc
movsb
ja
lahf
sbb
lahf
xchg
ret
popa
adc
mov
xor
cs
outsb
outsb
sub
xor
mov
lods
sbb
xlat
xorb
pop
cld
mov
cld
pop
inc
stos
int
add
or
inc
cmp
jns
mov
lds
mov
pushf
aaa
repz
push
repnz
lock
mov
add
loop
xor
pop
mov
or
and
sbb
insb
mov
pop
pop
fisubl
out
pop
or
popf
pop
or
jmp
testb
xor
jne
out
cmp
icebp
stos
ret
or
stc
and
jae
lret
adc
neg
mov
inc
xchg
outsb
mov
aas
push
mov
mov
subb
adc
push
mov
adc
jae
hlt
xchg
jmp
xor
pop
rcl
insb
arpl
xor
sete
push
add
mov
add
fnstsw
pop
cmpsb
in
mov
fisubl
sbb
sarl
push
mov
idivl
mov
push
insb
es
test
loop
je
pop
pop
repnz
push
adc
popf
outsb
jl
jne
out
inc
mov
cld
jp
fwait
cltd
movsl
xlat
adc
shlb
jne
or
ret
lret
mov
push
out
lea
inc
mov
jne
popf
xor
or
sbb
xor
loop
xchg
roll
scas
mov
sbbb
in
loope
dec
or
gs
lock
fistl
xor
jecxz
por
addb
inc
mov
into
mov
lea
clc
inc
mov
xchg
add
jne
loope
sbb
sub
aaa
lock
sub
push
gs
inc
inc
in
xlat
cmp
xchg
fmuls
inc
neg
pop
je
mov
adc
sub
mov
mov
adc
xchg
cli
lods
insb
movsb
or
mov
ret
clc
xchg
inc
jecxz
mov
aas
sbb
push
aam
pop
push
sarb
jne
mov
jno
aas
lods
xchg
pop
mov
sub
or
ds
add
mov
jne
into
mov
loope
xchg
sbb
jmp
fs
jmp
pop
xlat
addr16
xchg
fcmovnb
movsb
rcll
pop
or
test
sbb
jo
fsubrp
adc
pop
je
add
aaa
sti
nop
mov
sbb
rclb
pusha
xchg
sbb
in
test
fldcw
sub
movsb
lahf
loop
ret
lods
add
sub
pusha
push
sbb
mov
in
and
lcall
stos
pop
movsl
leave
ret
fs
push
es
sub
sbb
aas
push
aam
mov
pop
pop
subps
mov
add
test
out
cmp
mov
mov
inc
cltd
fcompl
shlb
scas
or
scas
test
mov
cmp
cmp
jmp
cmp
and
mov
mov
mov
inc
aam
lods
iret
clc
dec
mov
sbb
push
adc
mov
cmp
xchg
sub
dec
pop
rolb
and
mov
jae
loope
push
sbb
negb
mov
and
push
push
pop
push
fistpll
dec
nop
inc
bound
cwtl
pushf
lahf
fwait
xchg
mov
les
xchg
sub
mov
pop
dec
jae
add
and
or
push
push
add
std
mov
int3
jecxz
dec
mov
fsub
xor
inc
mov
push
jle
int3
or
push
popa
shlb
mov
mulb
ljmp
and
sti
js
aaa
cmp
adc
mov
and
in
out
ss
mov
mov
ror
call
scas
jmp
jb
std
je
cmp
pushf
mov
aad
aas
shrb
das
xor
xor
mov
fs
aaa
cmp
leave
mov
xor
mov
and
cmpl
out
mov
sub
sub
in
lret
in
mov
adc
in
cltd
enter
mov
iret
jg
mov
push
repz
in
cmp
out
push
test
sub
out
jae
sub
jg
inc
jp
lods
mov
nop
mov
fnsave
fisubl
mov
mov
sbb
cmpsb
xor
jns
jmp
fisttps
adc
jp
shrl
popa
mov
xchg
out
dec
shl
pushf
pushf
pop
and
das
xor
pop
and
in
arpl
xor
jmp
fildl
push
dec
mov
pop
add
stos
bound
cmc
jecxz
xchg
lock
movb
add
inc
jecxz
setne
xchg
xchg
loopne
dec
mov
fisttpl
je
sub
test
xor
rcr
iret
outsb
clc
pop
nop
dec
mov
dec
fptan
sarb
cs
cmc
fsubp
sub
ret
stos
hlt
lret
imul
cmp
xchg
testb
cmpl
lret
ss
cmp
call
cmp
jg
ficompl
push
cli
orl
mov
sbb
mov
aaa
test
sbb
hlt
popf
dec
mov
sbb
dec
jge
icebp
or
mov
inc
mov
inc
out
leave
dec
ss
jae
test
xchg
xchg
jg
test
cmp
je
fs
add
sub
mov
clc
inc
sub
subl
or
sub
ljmp
sbb
mov
mov
sbb
push
shll
pop
sbb
out
jl
mov
push
dec
pushf
lret
imul
lods
test
push
lock
rcr
jnp
test
hlt
mov
bound
rcll
adcb
aad
hlt
clc
and
pop
ja
mov
sub
je
mov
or
xor
daa
inc
push
pop
add
add
sbb
addr16
repz
sbb
movsb
inc
xchg
pop
in
mov
inc
addr16
push
or
jecxz
clc
fsubl
sbb
pop
lret
pop
std
int3
sub
jno
int
js
popf
imul
ret
adc
js
bound
out
popf
jb
dec
xor
fucom
add
dec
mov
enter
dec
js
int3
xor
cld
lret
stos
jge
mov
jno
leave
inc
cmp
into
dec
scas
cld
xor
ss
cmp
fimuls
xchg
or
sti
pop
insl
xchg
lods
jbe
xor
xchg
mov
imul
ds
mov
sub
jne
or
fisubrs
and
cmp
pop
dec
cmp
das
stos
testb
scas
stos
inc
pop
pop
das
rcrb
pop
mov
dec
out
test
shl
int
inc
stos
outsl
ret
jmp
add
xor
xlat
lret
mov
dec
xlat
xchg
mov
pop
xchg
jg
push
mov
jns
mulb
call
mov
lds
push
cmp
shrl
add
nop
xor
pop
movsb
aad
sbb
dec
mov
insl
sbb
push
mov
out
fdivrs
int3
and
inc
sbbb
scas
fisttpll
pop
sbb
inc
out
jb
jne
dec
and
sub
into
insl
or
sub
adc
xor
dec
inc
jnp
cmp
jmp
stos
gs
push
lahf
sbb
jnp
cmp
repnz
mov
pop
mov
iret
xchg
clc
or
inc
mov
std
in
cmp
and
or
push
push
dec
arpl
mov
xor
sti
pop
out
cmp
roll
xor
sbb
and
pop
outsb
mov
mov
outsb
adc
pop
je
or
seta
push
test
cs
or
xlat
test
rcr
mov
sbb
mov
leave
and
gs
loope
rol
out
jl
sahf
adc
xchg
jle
sbbl
rcl
sub
fbstp
idivb
lods
inc
add
inc
inc
xor
orb
decb
jmp
mov
in
repz
or
aam
aas
jp
out
ljmp
jnp
or
jne
inc
outsl
addr16
inc
rolb
gs
iret
xchg
imul
je
jbe
js
cld
stc
dec
sahf
movsb
push
add
push
stc
sbb
mov
pop
das
movsl
das
mov
cmp
or
fdecstp
cmp
out
mov
loopne
cmp
and
xlat
or
test
push
mov
sbb
bound
mov
xor
jmp
xchg
mov
lods
and
outsl
shlb
int3
lcall
in
add
mov
mov
lds
outsb
mov
sbb
rorb
cmp
std
out
mov
xchg
ljmp
xchg
nop
sbb
out
mov
sub
xchg
lock
stc
pop
sub
jl
repz
lods
iret
stc
enter
fiadds
cmc
push
fwait
adc
dec
xchg
rcll
jge
sub
addr16
inc
call
shrl
addr16
cwtl
mov
outsl
mov
icebp
outsb
insl
pop
aas
jno
movsb
lds
ss
jmp
jl
jg
sarl
clc
mov
test
inc
and
dec
jecxz
pushf
pop
pusha
out
lea
stos
jo
lods
in
divb
int
xor
in
fwait
add
imul
mov
ljmp
inc
xor
xor
inc
push
mov
sbb
aas
cmp
lods
fwait
jmp
js
lcall
fbld
lods
cmpl
lahf
mov
and
std
je
sub
lods
mov
cmpsb
int3
adc
xor
bound
xchg
imul
movsl
sub
dec
adc
xchg
stos
icebp
push
push
ss
push
cwtl
dec
lcall
cs
dec
in
in
fwait
scas
sub
jmp
sub
mov
stc
mov
std
popf
pop
dec
into
pop
outsb
aas
ds
sarl
es
mov
pop
das
sub
cmp
xor
lods
sbb
into
xchg
sub
stc
xor
mov
cltd
and
push
int
stc
std
cmp
dec
jp
cmp
dec
sbb
aad
mov
xchg
fdivr
ret
es
ds
scas
and
jne
ret
adc
jecxz
inc
mov
repnz
das
mov
fistpll
or
into
inc
adc
mov
pop
andl
test
out
mov
dec
lcall
mov
int
incl
mov
hlt
sbb
jae
enter
shl
jl
sub
enter
rcll
inc
fs
fistpll
pop
stc
dec
fsubs
inc
pop
mov
outsb
pop
mov
mov
popf
mov
outsl
out
aad
mov
fwait
pusha
push
mov
xchg
clc
dec
pop
mov
fisubs
add
add
pop
dec
jbe
sub
aas
movsl
cmp
push
cmp
jl
lahf
aam
pop
mov
xor
mov
xor
imul
cld
or
mov
xchg
cmp
sbb
movsl
mov
xlat
call
xor
xor
out
xchg
lcall
dec
adc
or
cmp
insl
xor
in
push
data16
hlt
rcll
mov
je
out
pusha
jae
jp
inc
lds
and
es
mov
stos
mov
in
adc
xor
loopne
sub
pop
push
pop
xchg
movsl
in
sub
add
lret
enter
imul
addr16
mov
daa
cmp
xchg
sub
mov
leave
xchg
adc
sbbb
jp
cwtl
and
insb
int3
xchg
inc
pop
iret
enter
je
pop
adc
into
xor
mov
mov
and
mov
sbb
adc
enter
sbb
mov
cli
insl
ret
and
cmp
jns
pop
or
add
adc
ljmp
loopne
sbb
movsb
mov
or
movsl
jle
fimuls
sub
pop
cmc
push
rcll
fsubl
int
bound
in
mov
pop
mov
scas
dec
aaa
inc
out
cmp
jle
mov
js
leave
pushl
lods
iret
and
in
dec
mov
pop
bound
leave
xor
imul
fwait
jnp,pt
mov
enter
stos
pop
or
ret
test
cmpsl
imul
lds
mov
jb
or
shl
lcall
push
fsubl
rcl
pushf
pusha
data16
mov
out
lods
dec
sbb
flds
jp
in
aam
sbb
int
jl
pop
xchg
inc
sub
mov
mov
jne
fisubrs
stc
jns
push
out
jle
mov
pop
in
xor
test
dec
push
push
imul
sbb
jp
loope
push
jbe
adc
clc
or
sbb
test
cmp
jg
out
pop
jecxz
inc
and
insb
xchg
fprem
ss
inc
inc
lock
sub
add
jnp
fistpl
sub
in
out
or
jno
add
cld
stos
mov
add
clc
in
push
mov
outsl
jnp
das
aad
pop
dec
outsl
stos
stos
lock
mov
pushl
das
sub
popf
imull
cltd
mov
clc
inc
cld
pop
insl
rcll
sbb
nop
adc
add
faddp
dec
mov
roll
call
dec
jo
or
cs
fimull
les
jmp
sub
inc
add
push
subl
js
jecxz
inc
pop
dec
ljmp
clc
push
jecxz
or
sub
rol
repz
cmp
xorl
push
test
sub
lds
push
push
add
mov
push
outsb
aaa
test
ret
enter
cltd
data16
mov
vminss
add
jl
xor
mov
shll
pop
jmp
scas
in
push
add
call
mov
and
ja
ja
inc
jo
pushf
xor
sub
flds
push
mov
shrb
adc
jns
movsl
je
enter
fisttpll
jmp
mov
mov
movsb
ds
sub
xorb
dec
in
loope
or
xor
mov
xor
jno
pop
aad
jae
sbb
lea
enter
or
mov
jo
pop
mov
hlt
sarb
and
inc
inc
cmp
int
dec
je
add
dec
pop
rcrb
cmp
fstpl
jbe
mov
lods
push
xor
std
jns
cmp
test
xchg
xor
test
es
cwtl
sbb
inc
pop
nop
ljmp
pop
je
nop
pop
scas
les
iret
sub
fcomps
mov
sbb
cmp
rclb
jnp
jle
cmpsb
ret
gs
das
and
test
jmp
stc
sbb
inc
xor
mov
jae
xchg
les
cli
add
jmp
sarb
lret
push
fcomi
dec
sahf
int
mov
push
loop
repnz
sub
adc
imul
sbb
mov
lret
jne
cwtl
and
ret
arpl
sbb
outsl
stos
cmp
ja
notb
mov
dec
mov
daa
mov
std
outsl
imul
push
push
push
ds
js
jnp
dec
cmp
sub
shll
lahf
in
dec
xchg
push
subb
hlt
lret
xor
pop
imul
pushf
les
rorl
loop
sbb
xlat
inc
arpl
xchg
or
sbb
dec
out
inc
mov
repnz
xlat
mov
dec
push
mov
jmp
lea
pop
stos
leave
adc
push
lahf
jl
inc
cmpsl
ret
outsb
dec
or
mov
call
loop
xchg
imul
movsb
lods
mov
out
adcb
loop
cwtl
pop
cmp
jne
test
jle
and
fcompl
insb
mov
in
cmp
cmp
bound
mov
jbe
notb
jno
lahf
xchg
movsl
mov
into
jbe
mov
sub
adcl
movsb
or
cs
and
xor
ds
addr16
dec
xlat
add
jg
mov
xchg
in
scas
mov
mov
out
out
lcall
pushf
stos
aam
adc
ja
add
jl
xchg
lock
mov
mov
mov
mov
imul
test
repz
mov
dec
sbb
push
jo
and
cmpb
repz
xchg
popf
shl
nop
xchg
pop
fcompl
sbb
add
cwtl
or
mov
push
push
pusha
out
cmpsb
out
and
pop
jo
and
xor
out
aam
ret
push
ljmp
out
cmp
out
cmp
adc
bound
dec
mov
addr16
xchg
jge
lahf
lcall
sub
pushf
stos
cmc
push
icebp
fcoms
aad
mov
fs
xchg
mov
push
add
sahf
adc
and
enter
push
test
enter
xor
xchg
pop
sbb
jge
lcall
xor
xor
pop
inc
mov
inc
mov
lcall
insb
and
mov
cltd
je
mov
rclb
or
dec
cmc
lcall
daa
gs
adc
and
decl
dec
adcb
xchg
out
jb
jg
mov
popa
xchg
arpl
pop
aad
test
cmpsl
jle
stos
and
lcall
or
call
dec
test
cmp
fdiv
js
repz
orl
shlb
sbb
addr16
into
out
aaa
mov
nop
pushf
xor
mov
mov
mov
xchg
xchg
add
pop
mov
cmp
imul
stc
push
cmpb
sub
xor
outsb
lret
mov
cmp
xorl
mov
sub
fisttpl
push
nop
mov
jo
cld
int3
jp
xchg
movsb
mov
cld
outsl
cmp
aam
xor
xlat
lods
sbb
inc
mov
and
push
pop
das
out
cmp
push
cmp
out
inc
enter
add
add
sbb
lea
out
push
clc
push
rolb
push
jnp
sahf
jl
stos
int3
dec
aaa
jbe
fisubrl
cmp
mov
movl
jne
add
xchg
std
loope
and
add
sub
aam
out
mov
lods
adc
xchg
mov
leave
sbbb
xchg
push
stos
cwtl
jge
in
sahf
or
aas
ficoms
cs
iret
cmp
ds
lea
das
mov
inc
shl
lcall
cmp
sub
jle
testl
adc
mov
loop
popf
outsb
outsb
push
andl
push
adc
and
test
jo
dec
pop
mov
or
sbb
sbb
dec
iret
and
mov
cmp
subl
mov
add
push
cli
addr16
repz
aaa
popa
loop
jmp
in
fiaddl
addl
int
adc
out
mov
jne
hlt
mov
movsl
les
pusha
push
adc
gs
xor
test
out
push
frndint
movsb
js
lods
faddl
repz
xchg
pusha
sub
filds
stos
jmp
dec
int3
sbb
adc
xchg
cltd
imul
nop
lea
cmp
pop
xor
cmc
cwtl
pop
push
add
jg
popf
mov
clc
js
rorb
sbbb
fimull
jae
movsb
inc
add
repz
scas
push
sbb
and
enter
daa
das
aaa
add
mov
mov
jb
mov
jo
pop
jmp
ljmp
data16
jnp
pop
xchg
xchg
insb
pop
jl
or
out
pop
adc
popa
xchg
daa
push
pop
call
cmpsb
jnp
nop
jns
sub
xor
sbb
lock
aaa
movsl
cmp
aad
imul
cmp
ljmp
add
loop
adc
sbb
cmc
data16
and
test
fs
xor
fdivl
imul
push
inc
cmp
dec
add
into
push
ja
pop
stos
std
shrl
aad
ss
jg
inc
out
ss
push
aas
pop
sbb
adc
add
push
scas
inc
fcompl
adc
cmp
mov
aaa
cwtl
pop
fsubrp
mov
and
mov
pop
aas
mov
in
outsb
sbb
and
in
add
pop
jae
in
or
mov
in
push
adc
aas
adc
adcl
sub
xor
jnp
in
repz
mov
push
fiaddl
xchg
mov
popa
dec
inc
repz
dec
fnstenv
ja
dec
mov
insl
outsb
mov
stc
jae
int3
cmp
xchg
or
add
clc
aaa
icebp
je
hlt
outsl
movsb
inc
movsb
and
clc
add
jmp
xchg
rorl
outsl
and
ret
fcoml
fwait
sbb
fwait
sub
sub
inc
jmp
xchg
adc
push
inc
push
jg
in
test
pop
repnz
lret
ljmp
mov
int
rclb
xchg
adc
hlt
xchg
test
out
fsubr
cld
out
pop
mov
xchg
lret
popf
mov
pusha
xor
pop
add
leave
xchg
cmc
lods
loopne
pop
xchg
rclb
xor
les
movsb
xlat
dec
mov
sub
push
addb
mov
je
rcl
add
pop
sbb
xchg
or
add
ds
ret
fs
mov
or
fnstenv
pop
out
out
leave
mov
clc
cmp
arpl
aas
mov
iret
lret
or
les
daa
pop
and
sahf
sub
mov
mov
push
mov
pop
xlat
cmpsb
inc
or
sbb
push
lds
jnp
mov
xchg
insb
aad
mov
mov
jp
lock
ja
insl
scas
outsl
imul
std
addr16
mov
paddusb
stos
jbe
imul
mov
cmp
cwtl
xorb
hlt
iret
dec
insb
int3
xchg
mov
imul
jle
push
pop
pop
jl
fidivs
xchg
xchg
jnp
push
add
imul
sbb
orl
or
lret
lods
push
out
mov
push
sub
cmpsb
repz
xchg
mov
popa
cmp
scas
adc
aad
xor
or
fnsave
inc
loope
fldcw
call
fwait
adc
add
mov
sbb
je
std
stos
mov
sar
xor
mov
and
sbbl
loope
mov
iret
push
dec
push
adc
xchg
xor
fimull
test
in
movsl
xchg
jecxz
jg
rorl
xor
add
sub
or
mov
data16
hlt
aad
and
dec
popf
cmpsl
dec
clc
pusha
xor
cmp
jae
movsl
inc
cmp
pop
bound
adc
leave
mov
sbb
clc
sub
out
and
cltd
dec
add
push
int
pop
inc
mov
and
ret
mov
sbb
jge
mov
iret
int3
jnp
pop
sbbl
lock
cltd
and
dec
inc
out
cltd
dec
or
std
movsb
les
shl
sub
jmp
lock
pop
scas
test
and
inc
ss
push
cmc
lret
jae
or
ds
push
rclb
testb
lahf
mov
loop
ss
push
sarl
xlat
cli
in
jl
xchg
mov
pop
in
inc
pop
cwtl
scas
or
in
leave
clc
cmpsb
and
pop
mov
xor
cmp
mov
sub
out
mov
xchg
popf
push
xlat
sti
mov
mov
dec
sbb
bswap
iret
sbb
dec
add
pop
inc
addr16
xlat
mov
pop
inc
mov
dec
mov
jb
jmp
movsb
push
and
sub
and
fwait
or
aas
or
inc
fadd
xor
sub
repz
out
into
pusha
xchg
out
xchg
stos
xchg
int
jb
adc
mov
xlat
or
cmp
ljmp
dec
adc
outsb
jle
out
mov
and
test
mov
xlat
test
into
pusha
cmp
lahf
cmp
iret
stc
cltd
xor
push
mov
nop
cli
fsubr
sbb
mov
das
xor
add
jns
and
push
sarb
cld
dec
or
mov
jo
adc
jmp
inc
pop
push
pop
mov
jae
decl
pop
out
xchg
jg
inc
pop
lahf
fsubs
mov
push
ss
test
in
ds
jno
fmull
mov
ss
cwtl
cld
in
and
pop
mov
sub
dec
and
adc
frstor
inc
mov
dec
ss
out
movsb
cmpsl
jns
cmc
shl
jge
xchg
repz
mov
cmp
xor
adc
and
and
cs
dec
inc
pop
inc
inc
rcrb
xchg
lods
push
push
and
xor
mov
hlt
mov
bnd
cltd
aas
stos
push
push
repnz
movsl
scas
inc
sarl
push
jb
xor
cmp
pusha
stos
xlat
mov
sarb
add
dec
test
push
mov
out
icebp
sub
notl
xor
adc
es
jbe
rol
xor
push
push
inc
adc
test
mov
mov
dec
mov
test
xchg
adc
pop
and
sbb
pop
xchg
clc
shll
addr16
mov
fs
mov
fcomp
inc
ja
pop
pop
adc
push
mov
mov
lahf
out
adc
aas
xor
push
push
inc
push
jecxz
sbb
imull
mov
fisubrs
xchg
and
dec
and
sbb
sub
lods
je
cmpsl
bound
ss
dec
mov
mov
xchg
stos
jo
push
mov
fiaddl
mov
and
add
or
stos
testb
and
mov
movsl
fisubl
sub
outsb
and
jne
adcl
or
fs
jg
xchg
lcall
pop
mov
aas
stos
lods
cmpl
xor
xchg
jecxz
outsb
or
jbe
ljmp
iret
jns
push
xchg
pop
or
add
in
gs
mov
lock
sarb
sub
dec
dec
fisttpll
mov
aas
rorb
xor
sbb
leave
fdivr
xchg
and
pop
fsubl
mov
lods
stc
lods
mov
roll
add
bound
cmp
dec
outsb
jne
fldcw
imul
sub
sbb
das
jnp
shlb
sub
or
stc
pushf
xchg
mov
or
fnstsw
cwtl
sahf
out
aam
pop
push
popf
andb
les
or
sbb
push
insl
xchg
dec
test
mov
push
fimull
mov
xchg
cs
ljmp
mov
arpl
sub
loope
sub
mov
cmp
mov
sbb
lret
in
mov
fwait
or
insb
jnp
lahf
dec
sub
sbb
je
sbb
jge
and
lea
jbe
add
outsb
in
lret
adc
in
testb
and
push
cmpsb
mov
and
aad
xchg
mov
or
inc
sbb
jnp
notb
jnp
mov
test
ficoms
incl
clc
cmpsl
stc
pop
dec
out
add
add
cmp
sbb
ja
clc
or
mov
out
pop
inc
js
add
pop
fidivl
stc
nop
aaa
or
inc
mov
sahf
es
popf
fldenv
dec
sbb
out
adc
popf
or
fdivs
ljmp
and
pop
pop
fsubl
aam
and
or
cmp
pop
movsl
xor
mov
dec
xchg
ljmp
fs
insl
push
push
xchg
or
adc
in
ror
outsb
gs
dec
lock
leave
inc
jne
add
adc
inc
out
xor
into
or
cmp
jg
xor
test
fdivs
cmp
sub
jns
sbb
or
inc
fadds
push
pop
adc
andb
out
repz
test
xchg
ds
pop
adc
push
psllw
icebp
repz
and
addr16
shlb
inc
inc
test
ret
lods
xchg
ret
iret
int3
push
jnp
lods
fsub
leave
lock
jne
stos
out
fsubr
jbe
cwtl
lds
aas
sbb
and
xchg
cmpsb
call
pop
cmp
mov
ret
cmp
pop
lret
push
xlat
xor
in
pop
subl
push
fcompl
mov
mov
aad
sbb
and
or
enter
testb
mov
add
mov
add
sbb
add
dec
orb
mov
lret
scas
jae
icebp
pop
jne
lea
xlat
ds
je
mov
loopne
mov
rorl
addl
jns
int
sbb
mov
jo
jbe
enter
bound
push
sub
pop
and
cmp
and
push
sub
jg
je
push
fcmovu
in
rorb
loope
fisubrl
push
or
pop
cwtl
cmpsb
dec
xchg
int
xor
xadd
inc
mov
jmp
aad
mov
jmp
add
lahf
adc
out
shrb
cmp
adc
or
pop
xorl
test
cmpsb
ja
inc
enter
push
lea
add
faddl
pop
add
push
jle
out
mov
jno
jbe
dec
pop
dec
out
loop
xor
jno
stos
pusha
mov
fs
repz
add
cmp
dec
inc
repnz
xchg
lock
repz
enter
jae
mov
sub
mov
fistpll
aad
shll
push
adc
popa
push
xlat
push
out
inc
ficoml
je
out
negb
adc
mov
test
pop
ret
push
add
dec
rol
sub
nop
adc
xchg
cli
or
loop
mov
cmp
mov
push
nop
lock
cmp
jne
call
xchg
xchg
repz
addr16
push
pop
bound
pop
outsb
and
dec
sbbl
inc
adc
add
ds
inc
sbb
xchg
inc
adc
and
cmp
inc
xchg
imul
jae
bound
leave
outsl
or
and
fadds
xor
mov
add
xor
lods
add
repnz
inc
mov
add
mov
dec
outsb
jo
out
lret
call
imul
push
xchg
adc
inc
cmp
cmp
ds
test
icebp
popf
cmp
in
mov
adc
aaa
sbb
testl
sub
fidivrs
mov
mov
repnz
enter
cmpsl
call
lcall
pop
sub
mov
sub
sbb
and
pushf
add
adc
jns
sbb
sbb
jmp
je
lret
jecxz
inc
pop
mov
pop
adc
addr16
cmpsl
mov
pop
js
jne
mov
xor
js
enter
jno
mov
mov
mov
sub
iret
push
mov
lock
sub
push
push
ljmp
scas
rcl
fcmovne
jge
sahf
int
pop
push
pop
adc
push
punpckhbw
negb
rclb
daa
das
stos
sub
pushf
sti
sahf
pop
and
fcmovbe
jmp
test
inc
andl
xchg
lcall
inc
mov
dec
inc
sbb
xchg
bound
loopne
push
out
push
xlat
adc
ds
pop
xchg
mov
sbbb
xchg
push
and
or
imul
mov
rcll
mov
push
jmp
push
mov
pop
insl
shrl
pop
das
or
scas
enter
ss
fsubs
mov
iret
dec
lahf
or
pushf
pop
add
jb
outsl
lods
pop
ds
iret
mov
mov
aam
inc
test
sbb
into
dec
mov
lahf
in
hlt
sti
push
pop
push
mov
fs
inc
sbb
xor
fs
or
mov
daa
xchg
add
or
into
movsl
scas
loopne
rcrl
mov
cmp
cmp
lret
pop
pop
outsb
xor
scas
pop
cmpsb
add
add
inc
lock
ljmp
pop
inc
hlt
fildll
clc
jmp
jge
movsl
clc
and
daa
clc
ja
or
arpl
test
sub
jp
inc
pop
sbb
xchg
dec
sbb
cmp
and
xchg
mov
ja
jb
fsubrs
ret
stos
mov
rorb
test
scas
daa
into
jbe
std
sub
stc
arpl
test
rcr
popa
jmp
and
xor
pusha
inc
jecxz
mov
xor
imul
mov
jb
aaa
pop
add
or
and
ja
pop
push
jb
ja
cmp
arpl
cmp
sbb
cmp
rcll
mov
xor
movsl
jg
xor
in
sbb
sti
push
jae
push
scas
out
mov
fldcw
clc
sub
mov
cltd
sub
scas
xor
xchg
inc
cmc
sbb
or
inc
xor
mov
sahf
fisubl
iret
test
aas
push
orb
push
pop
jmp
inc
es
in
or
ljmp
xor
out
dec
jbe
imul
or
leave
mov
loop
fisubl
mov
sub
sub
dec
imul
aas
mov
push
pop
pushf
imul
push
lret
scas
mov
pop
xchg
cmp
adc
lret
mov
mov
pop
sbb
mov
lret
add
lret
adc
cmpsb
xchg
mov
frstor
lock
sbb
xor
es
sub
jbe
jp
outsb
sarl
add
out
inc
movsl
xor
add
jg
mov
cwtl
iret
jmp
cmpsl
sub
xchg
inc
pop
out
repz
push
iret
jnp
mov
lods
bound
or
out
push
pop
js
mov
imul
mov
movsb
mov
pop
push
cltd
lods
icebp
in
sub
arpl
add
das
or
adc
shlb
int3
pop
mov
stc
loope
mov
or
mov
arpl
stos
scas
cltd
hlt
negb
push
pop
sbb
sbb
lret
jae
mov
pop
sbb
push
gs
rorb
sbb
mov
mov
das
xor
inc
mov
movsb
sub
mov
mov
jle
push
cmpl
sbb
pop
jno
jecxz
mov
adc
leave
jae
mov
cmp
inc
aad
mov
es
fiaddl
mov
push
popa
lds
jb
or
inc
dec
jmp
pop
inc
mov
jne
movw
sbb
mov
pushf
aas
push
rcr
cmp
repnz
or
jmp
into
push
mov
insl
mov
test
adc
lods
movb
pop
add
jle
daa
dec
pusha
incl
fcomi
inc
imul
lods
push
cs
xor
fnstsw
mov
push
aaa
call
call
mov
xor
sar
dec
push
push
cs
and
push
xor
out
les
scas
mov
or
pop
enter
insb
enter
sub
jns
adc
out
cmp
inc
stos
or
adc
sub
lcall
arpl
enter
out
fstpt
mov
push
add
leave
xor
cs
scas
cltd
insb
mov
inc
inc
js
ficoml
mov
cmp
psrld
sbb
xorl
hlt
dec
jecxz
cmp
inc
push
pop
cld
cli
sbb
mov
loopne
sub
test
mov
sarb
push
js
pop
sbb
push
jecxz
inc
inc
xchg
in
subb
cs
bound
or
stos
mov
xor
mov
xlat
xor
scas
lcall
xchg
push
aaa
in
xor
loopne
push
js
fidivl
jo
pushf
mov
hlt
jmp
stos
add
sarb
jl
sbb
fcmovne
pop
sbb
imul
aad
jns
jle
fisubs
jbe
xchg
movsl
sbb
data16
into
ss
mov
stos
std
mov
pop
mov
cmp
or
cwtl
imul
xchg
sahf
xor
jne
outsb
pop
aas
mov
jo
sub
lahf
in
xchg
fwait
movsb
pusha
mov
sub
dec
in
jecxz
cmp
xor
es
push
outsl
cmp
movsw
and
xchg
pop
loopne
mov
test
jno
pop
jbe
jbe
dec
outsb
and
ret
mov
test
xchg
andl
jge
mov
pop
pop
stos
jae
push
cmp
imul
out
xor
popf
sub
jae
sub
mov
adc
push
push
add
in
in
jecxz
out
insb
call
insl
out
inc
das
mov
xchg
xor
inc
cmp
cmpsb
stos
mov
xor
jae
rcll
or
jno
add
push
xchg
fs
dec
mov
out
adc
aad
add
mov
pop
in
leave
push
push
int3
sub
test
sub
sbb
cmc
lahf
sub
xor
adc
push
xorb
jge
pop
aaa
and
push
sbb
dec
inc
dec
mov
mov
in
shrb
jae
sbb
ficoms
mov
outsb
sub
test
mov
push
outsb
paddsw
xchg
dec
pop
xor
jae
outsb
int3
add
call
lea
call
negb
lret
push
addr16
dec
add
and
das
lods
xchg
les
pop
pop
jg
mov
sbb
lahf
mov
push
jns
js
mov
aam
adc
jnp
pop
cld
test
push
in
push
test
addr16
xchg
dec
push
inc
inc
push
pop
ds
push
pop
adc
jp
mov
fwait
test
pop
cli
test
adc
pop
dec
mov
jnp
enter
dec
cmc
push
xchg
loop
shrl
dec
xchg
push
stos
pop
jbe
shr
in
in
xchg
add
loop
movsl
inc
cwtl
cmp
push
cmpsl
notb
flds
adc
cmp
sub
adc
leave
fdivl
sbb
into
leave
and
sar
out
insb
ret
hlt
aam
psrld
or
loopne
add
addl
iret
repz
adc
pop
movsl
push
jb
mov
jl
or
out
out
pop
mov
pop
sbb
in
adc
inc
dec
push
fisttpll
mov
mov
sarb
pop
add
out
and
mov
pop
push
jnp
push
sub
sbb
lahf
sub
sub
ljmp
xchg
fisubl
test
sub
pop
cs
pop
pushf
psubusw
popa
jne
gs
xchg
xchg
sbb
ja
adc
push
insb
cmpsl
outsb
loop
xor
std
xor
xchg
sub
ret
nop
pop
pop
ja
xchg
push
and
sbb
push
inc
nop
andl
in
lds
mov
xchg
arpl
or
leave
les
sbb
push
fneni(8087
xchg
xlat
cs
repz
cmp
fidivl
mov
pop
xchg
shrb
mov
cmp
xchg
cmp
outsl
xchg
inc
int3
cltd
sti
or
pop
into
xchg
and
dec
xor
pop
jbe
xchg
popaw
mov
scas
or
adc
xchg
xchg
nop
sub
fcoml
sbb
insw
es
push
xchg
out
dec
adc
or
adc
popf
pop
mov
mov
mov
xchg
dec
int
xchg
add
xlat
cmp
sbb
bound
or
xor
das
inc
xbegin
fstl
in
aad
sbb
lock
icebp
adc
xchg
icebp
jns
ret
test
addr16
mov
in
adc
mov
int
bnd
pop
testl
loopne
pop
push
mov
push
sub
mov
mov
push
fmul
mov
push
sub
popl
arpl
inc
adc
or
cmc
pop
pop
inc
push
cli
mov
mov
and
das
xchg
pop
or
xchg
cmc
rorb
ret
ret
mov
dec
mov
data16
dec
movsl
mov
xor
xor
add
jo
adc
mov
mov
inc
ret
xchg
jns
push
sub
out
call
hlt
jle
cmp
ret
pop
shr
mov
adc
mov
jle
and
icebp
mov
inc
jg
gs
sbb
adc
push
ds
divl
incl
add
repz
sahf
imul
mov
stos
hlt
lea
in
sbbb
sub
pop
inc
aaa
arpl
fcoms
cmp
outsl
sbb
out
push
dec
ret
sbb
pushl
outsl
ss
aad
cld
leave
test
insb
sbb
jp
testl
pop
out
test
lods
push
mov
daa
mov
adc
mov
pusha
out
mov
mov
dec
lea
out
dec
sbb
cmp
popa
cmpsb
rcl
mov
punpckhdq
test
push
int
or
add
loopne
lock
jo
adc
out
jle
push
inc
and
inc
xchg
mov
add
and
jns
loope
mov
lret
sub
sub
xchg
lcall
add
mov
insl
int
int
or
repnz
dec
dec
rcl
jmp
mov
std
add
sub
out
sahf
sbb
push
push
adc
jno
movsl
frstor
hlt
cmp
or
int
push
sub
shl
xor
rcrb
jl
cltd
jp
movsl
sbb
push
jo
xchg
mov
mov
push
test
add
imul
fildl
dec
and
lahf
cmp
pop
popf
pop
divl
loope
sbb
lret
and
pusha
scas
dec
pop
aam
mov
aas
lods
popl
outsb
cmpsb
shlb
lret
jge
in
nop
jecxz
pop
push
push
xchg
mov
aas
popa
and
into
push
sub
out
bound
sbb
add
mov
or
ret
orb
dec
mov
cld
pop
repnz
xchg
xchg
cmc
mov
lret
sbb
dec
mov
xchg
mov
out
jne
xor
adc
lea
mov
sub
mov
pushf
cmpsl
mov
xlat
mov
lock
push
add
pushf
add
mov
bound
out
and
xor
add
dec
bnd
shl
les
cmp
dec
sbb
mov
xor
dec
pop
out
int
mov
cmpsl
mov
jmp
pop
push
popa
lea
mov
dec
jp
xchg
push
xchg
jo
or
ret
leave
orl
aas
adc
and
sub
lahf
xor
dec
push
or
cmp
insb
dec
bt
mov
fists
xorl
lahf
jns
cmp
xchg
dec
popa
repz
loop
cmp
das
mov
inc
inc
lds
ret
or
inc
and
push
sbb
xchg
lret
or
cmpsb
jae
test
push
mov
stos
into
ljmp
mov
sbb
fcmovnu
mov
repnz
in
fstl
cmp
out
add
push
pop
clc
inc
inc
push
push
mov
scas
inc
decl
mov
ret
ljmp
xor
jo
repnz
addr16
pop
in
test
in
or
test
adc
loop
test
add
mov
sub
or
or
inc
stc
mov
dec
pushf
xor
loopne
pushf
push
and
adc
imul
icebp
mov
cld
popf
outsl
cmp
xchg
mov
sahf
sbb
xor
lea
cmp
jno
out
inc
gs
lods
mov
int
sub
cli
or
push
sub
int3
sbb
loop
sbb
and
test
sbb
inc
insb
jp
pop
dec
in
inc
cli
sub
mov
mov
jo
insl
or
push
lods
or
ja
jno
inc
or
dec
lretw
mov
and
cmc
cmpsb
mov
cmp
or
add
xlat
lea
cmpsb
xor
je
popl
es
stc
adc
arpl
add
bound
mov
adc
adc
cwtl
or
addr16
call
mov
add
inc
popl
push
decl
outsb
out
sbb
into
arpl
xchg
cmc
lds
xchg
xor
aas
jno
jne
leave
scas
out
lret
pop
pop
data16
sahf
jo
lahf
push
dec
xlat
outsl
cltd
and
mov
dec
xorb
and
in
mov
loopne
mov
into
shl
pop
nop
inc
xchg
push
rolb
fadd
pop
push
jg
cmpsl
jae
xor
mov
outsb
mov
lods
jp
adc
dec
stos
es
aaa
lret
jb
adc
xor
xchg
lcall
and
popa
adc
mov
inc
scas
lea
xor
inc
cmp
dec
sbb
mov
idivb
jne
mov
jns
push
sbb
sbb
movsb
fdivrl
arpl
or
lods
jmp
test
dec
inc
add
sbb
adc
ret
std
xor
and
inc
stc
sbb
cmp
inc
pop
cmp
and
aam
fcomps
pushf
lret
push
out
out
adc
mov
sub
fcompl
inc
cwtl
mov
sbb
scas
xchg
mov
sub
sahf
outsl
fwait
cmpsb
loop
nop
xor
gs
xor
add
insb
jns
mov
inc
cmp
shrb
cwtl
sub
lret
dec
ljmp
xor
inc
inc
inc
call
xlat
mov
cmpsb
leave
out
int3
mov
jb
mov
jmp
je
in
jns
outsb
in
iret
outsl
outsb
clc
inc
ds
cltd
mov
mov
xchg
ja
inc
inc
or
pop
push
repz
ss
mov
inc
jae
nop
cmp
xchg
bound
mov
jb
imul
mov
xor
jno
mov
jmp
movsb
or
sbb
mov
std
mov
adc
push
mull
mov
hlt
mov
movsb
dec
lea
nop
repnz
jne
inc
shrl
rclb
mov
popa
adc
call
fadd
sbb
cs
dec
or
aaa
pop
into
add
cmp
rolb
shl
ret
test
dec
cmp
adc
jg
cmpb
shlb
jbe
or
stos
pop
movsl
pop
and
test
jecxz
sub
popf
test
rcrl
cmp
ja
loope
call
scas
xor
iret
mov
jg,pn
or
jnp
xor
jl
dec
and
ss
push
dec
enter
popa
or
or
xchg
or
and
int3
cmp
sbb
outsb
outsl
sbb
in
icebp
jmp
icebp
out
mov
jne
inc
and
sbb
pop
cld
in
pop
sbb
adc
add
andb
jl
addr16
rorb
mov
push
shrb
jge
shl
ret
cwtl
imul
jne
mov
sbb
rol
sub
jnp
add
les
jnp
mov
repnz
inc
bound
pop
adc
push
pop
shrb
and
sub
mov
mov
cmp
inc
sub
mov
xchg
insb
lret
into
iret
stc
lahf
mov
ficoml
xor
or
cmpsl
or
sarl
cmpsb
icebp
jle
inc
arpl
popa
jp
int
sub
fwait
add
dec
cmp
push
ja
nop
jbe
fbld
sub
inc
cld
lea
cs
or
insl
cmc
and
jle
scas
cmp
cmp
cltd
and
jl
inc
mov
push
icebp
pop
imul
mov
int3
in
imul
scas
repz
xchg
xor
test
push
inc
sub
mov
mov
idivb
in
mov
add
bound
imul
pop
je
adc
xchg
mov
xchg
out
jmp
and
and
jecxz
mov
clc
call
push
push
out
dec
dec
xor
iret
rcrb
jb
mov
sbb
imul
inc
xchg
mov
imul
push
pusha
popf
dec
mov
lods
pop
pop
cmpsb
xchg
idiv
loop
jge
rcrl
aas
fs
sub
inc
aam
and
adc
adc
lcall
nop
leave
rcr
bound
cmp
push
jo
mov
fnsave
mov
rorl
jge
adc
das
cmp
cmp
add
push
sbb
repnz
loop
xchg
mull
in
or
popa
lcall
dec
add
jo
mov
push
or
daa
popf
mov
popf
cmp
pop
xchg
inc
imul
mov
inc
stos
pop
mov
xchg
call
and
mov
push
adcb
outsl
into
lcall
loopne
fwait
scas
fistl
pop
and
cltd
sbb
dec
les
stc
pop
adc
sbb
fs
xchg
mov
or
shrb
dec
sub
adc
mov
mov
enter
shll
inc
inc
das
pushf
and
jns
add
push
ljmp
pushf
and
leave
or
fwait
in
dec
into
jnp
cmp
xor
stc
test
sbb
push
pusha
lret
lret
frstor
addl
sbb
jns
in
cmp
insb
inc
in
in
xchg
xor
cmp
outsl
sub
inc
push
daa
int
jecxz
cmp
int3
pop
push
bound
sbb
mov
xchg
std
sub
scas
push
std
bound
ljmp
out
mov
jl
ljmp
scas
xor
and
insb
pusha
inc
mov
jnp
add
sbb
push
push
push
mov
inc
faddl
stos
lods
mov
in
orl
lds
movl
mov
cli
inc
sbb
outsl
imul
push
push
pop
fisubl
xchg
xor
out
bnd
shlb
and
dec
pop
out
xor
push
es
sub
pop
dec
icebp
pop
push
or
push
scas
and
push
ss
xchg
clc
negb
pop
xor
jmp
pop
std
insb
ss
pop
xchg
int
mov
test
pop
or
movsb
pop
ja
mov
int3
int3
stc
xlat
mov
in
xorb
ljmp
jle
sbb
jne
insb
movsl
push
imul
fdiv
inc
mov
jg
dec
add
imul
stos
pusha
sahf
scas
or
xor
icebp
shr
and
hlt
in
sarl
add
aaa
adc
dec
lea
xor
mov
fistpll
filds
test
dec
sub
or
inc
mov
into
pop
test
ja
cmc
repnz
push
mov
jle
jl
stc
dec
das
enter
cld
arpl
and
jbe
aad
hlt
push
nop
mov
int3
test
and
aam
xchg
nop
xor
pusha
ret
jp
and
xor
outsl
stos
jb
mov
xor
in
out
push
out
sub
dec
sbb
scas
mov
aaa
aad
push
je
jg
add
fdivl
aad
and
pop
lss
push
and
rorb
mov
push
xor
dec
pop
fistpll
rcr
pop
pusha
inc
jae
sti
dec
and
mov
mull
scas
mov
push
sbb
sti
dec
movb
ljmp
outsb
stos
pop
enter
pop
repz
dec
jns
jp
mov
xor
cmpsb
insl
aad
xor
cmp
int3
push
ljmp
mov
comiss
insl
mov
push
insb
es
xchg
xchg
mov
fnstsw
xchg
sbb
mov
dec
mov
add
ja
adc
dec
add
ja
mov
cmp
shlb
adc
xchg
push
shlb
dec
clc
adc
fcmovu
mov
jge
push
fwait
xchg
popa
shrb
mov
and
xchg
rorl
dec
aas
loopne
mov
test
add
in
sbb
mov
pop
pop
push
xor
cltd
pop
cmpsb
stos
or
lahf
lods
inc
sbb
lahf
sbb
out
sub
jns
sbb
sbb
rorw
outsl
fisttps
xor
sbbb
dec
or
and
cmp
rorl
lds
out
lcall
cmc
insl
push
and
into
call
das
arpl
jmp
fdivrl
push
insl
inc
xchg
pop
stos
adcb
je
xchg
shl
mov
ret
sbb
xor
cmp
fimull
shrb
jmp
lahf
shlb
leave
call
mov
mov
push
sbb
cmc
cli
xor
mov
les
and
xorl
jg
add
xchg
test
cmp
lcall
mov
arpl
sub
aad
loop
xor
adc
push
or
ficompl
jb
lahf
or
xchg
test
hlt
mov
decb
mov
and
xor
push
cmp
mov
add
lret
mov
mov
andl
dec
adc
popf
sub
or
cmp
test
inc
icebp
in
js
adcb
cmp
adc
jle,pn
iret
aas
mov
outsb
sbb
and
mov
adc
push
mov
jmp
sbb
mov
pavgb
cmpsb
mov
push
jnp
lods
mov
call
xchg
pop
inc
dec
jnp
loop
push
or
lcall
mov
jg
sarb
testb
outsb
cmc
movsb
dec
inc
pop
mov
rolb
push
out
xor
push
jo
test
std
sbb
inc
mov
push
mov
rorb
push
or
imul
ret
or
push
xchg
jle
and
or
dec
mov
adc
xchg
jmp
nop
dec
mov
mov
jae
lods
xchg
incb
push
xor
push
je
call
jle
add
insl
jno
fdivl
mov
stc
jle
sbb
jge
ljmp
and
sahf
adc
mov
push
ret
loopne
in
ds
mov
loop
and
je
mov
sti
jl
out
xor
cmp
cmc
push
ljmp
mov
rclb
fildll
aaa
push
xor
insb
test
aam
adc
stos
test
jo
and
into
mov
jecxz
jnp
and
push
ds
and
cwtl
add
loopne
jl
pop
adc
sub
bound
sbb
pop
mov
dec
pop
aaa
xor
xchg
out
adc
cmp
jns
flds
stc
out
cmp
mov
nop
and
pop
pushf
pushf
ja
and
dec
mov
dec
pop
jo
add
cmp
xchg
inc
fisubrs
nop
inc
inc
jo
add
shll
push
ja
push
iret
mov
lea
sbb
jne
inc
pop
add
dec
push
loope
dec
pop
pop
bnd
sahf
test
fistps
cmp
hlt
jp
cltd
lea
mov
inc
scas
dec
push
ret
cmp
dec
dec
fistpll
push
scas
ja
mov
std
idivb
pop
int
in
cmc
and
cs
repz
fwait
jg
xor
or
mov
mov
dec
gs
ret
mov
adc
adc
push
cmc
cmpsb
sub
inc
add
lock
lahf
adc
arpl
mov
or
mov
mov
pop
jns
jmp
in
inc
add
sti
mov
pop
insb
inc
test
xor
jp
cltd
adc
add
lret
fxsave
popf
and
loop
add
cli
cmp
fneni(8087
loopne
in
xchg
push
orl
xchg
shlb
mov
cmpsb
jae
cs
mov
shl
jo
or
mov
js
ss
lods
popa
mov
jbe
jmp
mov
xor
lods
fstl
bound
jne
dec
xor
mov
mov
xor
shrb
dec
and
xchg
ss
adc
call
sub
iretw
or
rep
lret
stos
stos
jmp
adc
std
cmpsb
jecxz
loope
std
xor
sbb
push
repnz
arpl
lods
subl
or
inc
movl
inc
mov
jne
and
pop
repnz
mov
add
add
sub
out
push
cmc
in
add
jnp
sub
sub
sbb
mov
cmpsb
js
not
adc
push
push
push
push
or
pop
loop
jp
push
cltd
pushl
das
pop
subb
push
int3
addl
aam
dec
arpl
cmp
cwtl
adcl
outsb
or
cld
jbe
in
add
inc
add
push
js
cmpb
push
adc
notb
lea
jp
mov
sbb
push
aam
stc
mov
insb
ret
outsb
inc
dec
mov
mov
inc
out
lret
fisubl
hlt
aad
mov
call
inc
fucompp
mov
inc
aas
and
outsl
and
adc
push
call
shl
shr
mul
enter
mov
and
inc
add
pop
jno
sbb
xlat
je
stos
test
fadd
cmp
cmp
mov
mov
out
adc
push
lods
fyl2x
xor
xchg
jo
imul
jmp
or
fcompl
test
fsubs
frstor
sbb
mov
fwait
in
push
pop
fwait
mull
xor
fsubrl
scas
ret
cmp
test
inc
cmp
dec
fcoml
cs
roll
pop
jge
push
dec
xchg
imulb
imul
test
imull
xchg
xchg
xchg
fmull
ja
mov
jnp
xor
mov
or
sbb
xchg
popa
mov
test
pop
add
inc
cs
pop
cltd
jp
mov
movsb
dec
pusha
jmp
loope
mov
dec
xchg
repz
aam
mov
stc
mov
dec
jno
roll
sub
inc
mov
dec
daa
popf
sub
mov
jg
rorl
aam
sub
lds
fs
stos
das
sub
sub
loop
xchg
enterw
jg
cld
lods
aaa
add
lahf
pusha
xchg
cltd
adc
lahf
faddp
inc
les
test
add
or
and
xor
fmuls
lock
xchg
insb
mov
jmp
hlt
pop
sbb
movsb
pop
fdivp
pushl
shrb
imul
mov
adc
xchg
inc
pop
cmpl
cld
pop
mov
sbbl
test
sti
les
in
ret
in
into
mov
push
jle
cli
add
jo
jp
jno
adc
fisttps
mov
mov
xchg
dec
pop
push
xlat
stos
daa
xchg
sub
cmp
into
sbb
inc
outsl
out
sbb
ss
push
sbb
call
cmpsb
test
outsl
push
jne
subl
sub
and
inc
xchg
retw
aas
fcoml
xor
out
xchg
add
movsb
mov
fstl
mov
jnp
ret
inc
or
stos
jbe
jp
dec
inc
push
dec
xchg
jae
test
maxps
insb
in
leave
xor
mov
dec
lods
push
imul
ret
xor
inc
cmp
repz
loopne
mov
sbb
push
lret
dec
enter
shlb
and
and
loop
cmp
mov
dec
push
push
mov
decb
aas
push
pushf
ffreep
lahf
fwait
push
rcrl
je
je
cs
xchg
xor
icebp
aaa
and
xor
out
cltd
cmpsl
lahf
and
pop
je
fisubrl
in
pusha
pushf
aas
data16
inc
mov
mov
and
movsb
push
cld
cmc
andl
push
sub
aas
sbb
arpl
xchg
pusha
cmpsl
jecxz
rcll
lods
add
sbb
dec
lahf
dec
sbb
or
fisubl
inc
je
push
mov
pop
enter
subl
dec
lcall
add
or
and
mov
mov
flds
jb
cmp
repnz
add
and
push
cmp
pop
incb
div
sub
or
add
dec
iret
movsb
dec
add
fsubrs
icebp
imul
inc
xchg
jecxz
xchg
push
lahf
adc
sub
cmpsb
xchg
in
push
fistl
scas
in
out
fucomip
cli
cwtl
in
imul
pop
inc
lods
jb
insl
xor
push
insb
pop
fisubl
pop
cmc
lods
and
scas
sahf
mov
push
and
out
mov
xchg
repz
enter
fsubp
outsl
int
xchg
icebp
cmp
mov
insb
popa
pop
inc
sbb
in
mov
or
stc
stos
adc
enter
and
jl
push
aaa
cmove
test
inc
repz
inc
pusha
int
gs
les
xchg
ret
dec
jmp
adc
inc
jge
sbb
jge
je
rep
jb
cltd
xchg
out
cmp
and
push
mov
pop
enter
push
adc
pop
scas
aaa
pop
loope
sub
out
fdivrl
sahf
xor
cli
mov
mov
imulb
and
daa
xor
mov
pop
cmp
call
mov
xlat
dec
sub
and
rcrb
mull
stos
adc
pop
outsb
lret
test
lcall
movsb
inc
sbb
push
std
mov
sbb
sub
pop
shll
push
out
jge
or
sub
cmp
cmp
lds
jno
mov
adc
mov
jno
stc
aaa
or
pushf
mov
add
ljmp
push
jecxz,pn
je
cmp
fcoms
xorb
add
adc
xor
add
mov
mov
pop
int3
sub
mov
cmp
cltd
sbb
adc
dec
xchg
jns
movsl
decb
mov
fs
in
and
dec
int3
pop
in
mov
adc
adc
scas
pushf
std
xor
add
enter
adc
mov
rcrb
adc
mov
xor
cs
push
lahf
nop
pop
fnstcw
inc
mov
xchg
sbbb
gs
and
push
aaa
cmp
inc
inc
hlt
movsl
mov
aam
mov
sbb
mov
pop
or
dec
sahf
scas
cmpsb
repz
mov
test
data16
or
loop
test
mov
sbb
push
int3
loope
mov
loop
push
cmc
out
addb
mov
mov
cmpsb
push
js
pusha
das
pop
cmp
ret
push
ja
test
sahf
mov
pop
mov
pop
mov
mov
sbb
dec
and
jo
out
jne
sahf
add
lods
dec
jb
or
les
in
mov
push
lret
mov
and
das
stos
adc
lahf
jno
or
jge
cli
jb
xor
test
push
data16
sahf
test
imul
test
sub
mov
rcl
or
pop
jnp
inc
scas
mov
popa
sub
rcr
dec
fcoms
loopne
movb
cmpsb
test
in
lret
jne
xor
aad
outsl
inc
sbb
and
push
cmp
pop
sbb
ret
pop
hlt
aam
push
lahf
jae
inc
movsl
test
push
cld
fsubrl
out
push
stc
push
sti
sub
ds
dec
pop
cmp
pushf
movsb
xor
sbb
mov
aad
int3
jmp
pop
pop
addr16
addr16
push
ficomps
pop
hlt
mov
jns
jecxz
or
dec
rcl
je
mov
xor
inc
jmp
sub
dec
inc
in
gs
arpl
std
inc
and
jle
push
fisubs
dec
dec
into
jle
sub
test
inc
push
inc
pop
loopne
sbb
lea
add
dec
mov
adc
int
mov
dec
orb
divb
mov
stos
push
ds
pushf
repz
mov
arpl
aaa
pop
pop
fiaddl
popa
pop
adc
into
add
jbe
jne
icebp
pusha
shl
cmp
mov
mov
jns
ss
cmc
and
jne
mov
add
jecxz
sub
mov
imulb
daa
ror
jle
mov
xlat
out
testb
push
popf
mov
imul
je
loopne
fldz
xorb
subl
imul
mov
das
adcb
flds
mov
loop
dec
out
in
mov
jl
aam
sub
cmp
inc
jge
fdivrl
jle
in
push
mov
cmp
adc
lahf
data16
jmp
scas
pop
jns
sub
test
mov
sbb
and
and
je
sub
add
inc
bnd
outsl
fdivrs
xor
in
and
mov
fisubrl
cmc
mov
popf
add
movl
scas
rcll
in
adc
push
jl
ret
sub
sahf
aas
ds
pop
adc
in
repz
jae
dec
jecxz
jmp
outsl
or
mov
ficoml
jg
push
push
sub
idivb
and
xchg
push
and
xchg
and
das
xchg
arpl
repz
out
test
adc
xchg
ret
jbe
add
aad
dec
lfs
push
pop
shlb
mov
dec
push
jp
imul
mov
ret
adc
in
mov
test
cli
mov
hlt
add
filds
jno
insb
orl
lds
mov
mov
fcmove
in
and
dec
test
mov
lea
and
outsl
sub
divb
mov
bound
or
nop
scas
and
push
fnop
in
dec
ss
and
and
jae
xchg
mov
and
dec
pop
or
stos
movsb
cmp
mov
imul
push
mov
cld
or
xchg
cmc
sbb
mov
push
dec
jl
cmp
repnz
xchg
jbe
clc
dec
pop
hlt
cli
mov
test
loop
mov
xchg
loopne
cmp
or
pop
push
xchg
ret
dec
cmp
stos
xchg
adc
out
in
pop
add
sub
das
sub
ds
les
insb
and
imul
inc
pop
mov
aam
mov
ja
mov
or
inc
push
lock
les
cltd
mov
fwait
lcall
cmp
imul
cs
ljmp
inc
repnz
idivl
sahf
push
popa
test
jb
loop
repz
pop
cmp
ljmp
mov
xchg
mov
repnz
cld
push
outsl
and
sub
mov
fmuls
dec
adc
lds
bound
push
mov
std
xchg
mov
xor
aas
xchg
pop
shr
fwait
insb
repz
js
jno
incl
cmp
scas
cltd
in
and
jge
loopne
outsl
xor
data16
imul
fbstp
les
sarl
fdivr
jecxz
dec
rorb
cmpsb
mov
push
aaa
bound
fcomp
aam
add
out
xor
dec
inc
cmp
sub
pop
xor
push
add
aam
mov
and
push
lods
inc
sbb
adc
cmp
ljmp
cmpsb
cmp
adc
and
stc
sub
or
pop
divl
adc
ret
pop
sbb
mov
pop
push
push
xor
pushf
mov
fwait
outsb
sbb
mov
dec
stc
pop
inc
push
push
mov
lods
rcl
mov
loope
and
adc
int
jmp
or
aas
xlat
adc
or
sbb
xchg
ss
add
aam
faddl
mov
sub
xchg
in
mov
adc
pushf
adc
fwait
icebp
incb
cs
shll
clc
mov
int
dec
cmp
shrl
jo
ss
lahf
or
in
push
arpl
sub
inc
hlt
inc
fs
repnz
jecxz
xor
popa
or
outsl
cmp
stc
xchg
mov
push
imul
add
push
in
mov
in
xor
sbb
iret
lahf
lea
hlt
fadds
pop
ds
or
mov
cmp
dec
cmp
cmp
in
rclb
bound
pop
in
pop
sub
jb
add
inc
fs
inc
lods
leave
mov
mov
sbb
adc
mov
jge
add
or
ret
and
dec
cmp
add
stc
scas
arpl
into
jmp
sbb
in
or
ds
jl
mov
push
or
mov
adc
adc
jae
push
mov
js
fcom
cltd
mov
mov
ret
repz
dec
sub
pop
imulb
or
mov
bound
aam
incb
mov
mov
xchg
or
mov
and
pop
nop
jg
ret
ja
mov
scas
xor
call
les
adc
pushf
or
mov
push
add
stc
adc
inc
sbb
push
insl
inc
push
sbb
out
and
mov
xor
std
test
rol
push
sub
out
cmp
cmp
jae
lock
mov
push
das
mov
sbb
xorb
push
mov
ret
mov
jl
sub
dec
pop
scas
inc
and
sbb
sub
fcmovb
fimull
xchg
lea
pop
gs
stos
jnp
ja
adc
mov
stc
sbb
cmpsb
xor
or
in
lods
xchg
jo
adc
push
aas
int3
fcoml
push
sbb
jne
mov
dec
sub
std
or
test
pushf
push
pop
fisubrl
cmp
adc
fistps
inc
in
and
push
jl
sub
jl
push
aaa
mov
and
pop
jne
aad
xchg
repnz
cmp
int3
movsb
nop
lret
movsb
divb
and
int3
xor
lret
cwtl
nop
rcrl
xor
mov
xchg
lahf
in
add
and
jns
aas
sub
inc
xor
pop
add
xlat
es
mov
pusha
iret
push
xchg
inc
cmpsl
xor
cmc
adc
mov
addb
pop
cmc
negl
mov
jg
pop
push
clc
and
jp
fnstcw
push
hlt
mov
nop
insl
inc
inc
addl
mulb
fwait
sahf
pop
add
sub
outsb
pop
pusha
mov
fs
icebp
cmc
cwtl
pop
jg
mov
iret
cmpsb
sub
fsubrs
andb
ss
xor
popf
mov
jnp
mov
and
xchg
pop
push
pop
enter
leave
hlt
subb
cmp
cmp
shll
cmpsl
adc
dec
sbb
andb
pusha
add
fdivl
add
jge
popa
mov
push
jo
pop
mov
adc
jg
aaa
add
jle
lock
adc
scas
sub
mov
dec
addr16
xor
sub
fistl
jge
push
mov
sbb
add
mov
mov
jns
mov
add
nop
fwait
and
dec
dec
sub
xor
outsl
mov
push
lret
out
sub
jns
push
push
jecxz
inc
cmp
xchg
test
out
sbb
sub
pop
rcrl
fsubrs
xchg
xor
arpl
test
mov
movsl
iret
pop
subb
sub
jp
push
out
cli
mov
adc
sub
xlat
mov
or
mov
pop
xor
iret
or
cmpsb
xchg
pop
sbbb
movsb
and
into
ss
push
pinsrw
psllw
clc
hlt
testb
sub
mov
and
pusha
sti
ret
gs
or
frstor
dec
xchg
mov
sahf
and
push
imul
les
dec
sub
push
pusha
mov
xchg
scas
xor
push
cltd
xor
adc
and
mov
ficoms
xor
sub
mov
cmp
xchg
fbstp
popf
xor
pusha
rcr
ljmp
ret
cmp
mov
fwait
stc
jb
inc
subb
sbb
sbb
movsl
xor
mov
sbb
push
dec
adc
test
pop
clc
cvtdq2ps
test
outsl
sarb
out
in
adc
mov
xchg
inc
sbb
cmpsb
jmp
fidivrl
cmp
push
mov
inc
inc
lret
imul
outsl
jmp
outsl
jp
or
popa
pop
in
popa
xor
xchg
adc
sub
insl
test
clc
pop
lret
inc
xchg
xor
loopne
stc
lcall
in
and
jae
test
je
fsubrs
setns
pop
xor
stc
imul
sub
push
lahf
call
pop
pop
arpl
dec
cmc
and
in
imul
sti
xchg
inc
cmp
sub
std
inc
addr16
mov
imul
aam
add
lcall
cli
adc
sbb
mov
push
or
sub
pushf
pop
lds
xchg
mov
pop
jmp
lret
sbb
adc
and
push
nop
sbb
nop
and
and
out
mov
mov
add
fidivs
xchg
je
push
push
adc
pop
lods
jno
ret
push
dec
xor
imul
xchg
mov
loop
pop
loopne
scas
or
push
mov
es
mov
in
mov
lar
mov
mov
lcall
inc
pop
dec
out
jo
sbb
xchg
les
mov
adc
bound
in
fs
dec
sbb
push
push
loop
or
adc
repnz
xchg
pop
stos
inc
rep
xor
inc
and
inc
repnz
stos
add
movsb
divl
adc
hlt
jmp
mov
jne
arpl
repz
daa
push
pop
adc
movsl
jmp
xor
fidivrl
sbb
imul
into
xchg
subl
xor
fcomps
enter
aam
aam
sbb
das
cwtl
mov
adc
push
lret
cmpsb
cmc
mov
pop
mov
sbb
pop
out
dec
in
push
mov
pop
in
xchg
push
pusha
or
enter
inc
mov
sbb
inc
or
pop
push
in
mov
test
nop
inc
mov
cmpsb
xor
xrelease
mov
push
mov
mov
pop
fwait
and
dec
and
mov
pop
movsl
bound
xor
mov
add
adc
inc
push
rorb
rcrb
cltd
or
int3
incl
push
movsl
mov
xchg
xchg
mov
add
jmp
aad
mov
js
movsb
stos
xor
test
and
jno
mov
mov
mov
inc
sbb
subb
stc
inc
jmp
mov
inc
or
nop
loopne
dec
add
push
repnz
adc
jmp
dec
xchg
pop
roll
sub
sbb
push
mov
mov
cmp
leave
jb,pt
addr16
sti
add
mov
sbb
cwtl
sub
hlt
sar
insb
push
or
push
pop
loope
ficomps
push
mov
cmp
ret
mov
or
loop
or
add
dec
mov
out
pop
enter
adc
sbb
lods
mov
jmp
add
mov
sbb
pop
fsubs
dec
dec
add
mov
lds
jnp
mov
sarb
insl
add
fs
lcall
out
push
pop
lea
pop
subl
in
outsb
and
add
xchg
pop
mov
sbb
jnp
pop
rolb
and
xlat
lret
or
sbb
and
mov
mov
out
adc
xchg
mov
dec
add
popa
aam
mov
pop
push
pop
addr16
jg
cmp
hlt
ss
test
jo
pop
pop
push
xchg
icebp
fdivr
cmp
mov
lahf
cmpsl
mov
push
incb
xchg
mov
test
in
rcr
mov
mov
les
sub
dec
push
cmpsb
mov
scas
leave
cmc
stos
sub
pusha
pop
adc
xchg
jp
mov
into
mov
pop
js
lock
mov
or
xlat
xor
ljmp
mov
mov
cmp
out
ss
negb
loopne
pop
mov
mov
jmp
repz
shl
xchg
lods
mov
int3
adc
jb
lock
pop
loop
push
push
jg
jecxz
out
add
dec
movsl
push
shrl
push
das
fstps
jns
push
lods
divl
andb
xlat
xchg
cwtl
lds
mov
fisubl
inc
faddl
fwait
jns
enter
push
out
lock
cld
inc
scas
lods
loop,pn
into
jne
jae
push
mov
cmc
movsl
and
mov
and
cwtl
adc
jecxz
out
fcompl
idivl
add
jbe
xor
dec
xorl
mov
xor
add
xlat
rorl
daa
xor
popf
scas
sub
loopew
repz
movsl
mov
jge
aam
icebp
xchg
jne
pusha
imulb
mov
cmp
and
mov
ret
popa
dec
push
and
push
push
outsl
lcall
dec
out
orl
jbe
mov
adc
pop
dec
test
icebp
or
pop
ds
popa
imul
out
xchg
insb
push
scas
mov
mov
shll
mov
mov
movsb
xor
nop
cli
mov
enter
inc
xchg
pushf
xor
pop
cli
daa
bound
and
int
adc
fsts
or
cmc
inc
add
imul
outsl
push
xchg
adc
xor
movsl
xchg
mov
xor
and
fucom
or
pop
xlat
sbb
jge
cmc
mov
into
mov
leave
scas
into
out
sub
adc
das
int
push
out
push
jge
ret
and
divl
je
jp
inc
adcb
pop
mov
pop
daa
xchg
mov
xchg
xchg
outsb
or
clc
out
outsb
dec
insl
scas
sbb
xchg
push
pushf
jne
jmp
push
pushf
icebp
in
cmp
loop
insl
cmp
sahf
mov
in
enter
js
mov
cmpsb
or
inc
andl
sbb
lods
decb
adc
in
jg
fldt
and
mov
cs
cltd
mov
shll
outsb
cmp
sbb
rcrl
mov
xchg
xchg
jle
aaa
add
or
scas
adc
pushf
sbb
inc
sti
in
jbe
out
mov
call
pusha
aaa
movsb
jl
inc
ret
pop
jmp
and
or
sub
cli
data16
cmp
dec
mov
push
push
test
stos
pop
pop
xor
lds
clc
rorb
fidivrl
ss
mov
fadd
pusha
subb
add
sbbb
pop
adc
mov
fwait
fwait
jg
or
cltd
lods
xchg
pusha
dec
mov
and
xchg
dec
cmp
in
cmpsb
inc
insl
aaa
movsl
sbb
rcrl
add
fyl2xp1
frstor
scas
les
stc
lods
mov
out
dec
jo
imul
call
add
dec
scas
in
lea
icebp
inc
push
jp
or
cli
arpl
cltd
mov
mov
fsubrs
lods
nop
daa
cs
test
inc
sbb
adc
lods
lods
pop
div
insl
push
ljmp
lahf
lock
push
cmp
push
jnp
dec
push
lret
add
mov
ja
mov
cmp
and
in
xchg
cmp
xchg
cmp
adc
mov
nop
lcall
xchg
fldcw
into
xor
inc
mov
and
iret
xchg
dec
sub
adc
shrb
pop
das
mov
cmpsl
xchg
cli
out
in
sub
fs
inc
repnz
xchg
mov
sub
pusha
int
insb
aas
dec
xchg
loopne
or
out
xchg
enter
sub
and
cmp
pop
icebp
dec
leave
cmp
jae
mov
rol
cmp
fildl
and
call
fwait
jnp
mov
fbld
and
jns
and
addr16
hlt
add
inc
mov
repnz
out
shrl
repnz
xchg
lods
fsubrl
andl
ficoml
xor
xorl
lock
xchg
out
adc
cmp
xchg
pop
inc
ret
fwait
cwtl
adc
push
insl
fs
mov
jne
mov
pcmpgtd
mov
imul
xor
out
or
jns
inc
push
cmpsl
js
test
mov
cmp
mov
addr16
rclb
mov
pop
lock
mov
xchg
or
jmp
fisttps
inc
insl
push
xchg
bound
bound
push
jbe
popa
aad
push
inc
add
rolb
jp
push
jo
je
rorl
scas
in
mov
stc
push
pop
add
sub
jge
push
xchg
cwtl
push
and
adcb
cmp
pop
outsl
and
add
dec
push
or
mov
sub
mov
fnstenv
mov
ja
mov
inc
xor
repz
sbb
dec
and
add
js
fsubp
or
js
filds
int3
in
lcall
fwait
jne
jge
sbb
xchg
jnp
stos
in
pop
outsl
adc
jg
xor
scas
div
mov
stos
out
ds
pop
dec
add
cmp
repz
jb
rcrb
mov
inc
mov
addr16
jns
out
sahf
jecxz
shlb
lcall
aad
jnp
cmp
insl
lods
xor
leave
dec
jl
mov
shr
cmp
sub
adc
out
push
jo
fs
movhps
lods
mov
hlt
cmc
mov
sub
iret
dec
add
adc
cltd
xchg
pop
mov
mov
dec
les
sub
add
xor
test
mov
push
dec
mov
ss
lcall
push
imul
and
lea
std
push
xchg
xchg
push
mov
lea
cmp
arpl
popa
cmp
fwait
cli
sti
arpl
dec
push
jecxz
lods
into
push
or
lods
xchg
out
mov
outsl
cmp
jp
inc
adc
insb
adc
jge
pop
aaa
lds
jnp
push
insb
add
cltd
in
cmpsb
mov
scas
int
out
rol
mov
mov
fimuls
jbe
imul
int
ltr
test
mov
add
xchg
add
sub
imul
frstor
shll
je
repz
sti
outsb
jp
jne
mov
repnz
jecxz
inc
cmp
jne
mov
ss
mov
icebp
into
daa
jg
mov
inc
aam
loopew
xor
xlat
cltd
cmp
sbb
adc
lahf
outsb
or
lahf
xor
lock
scas
jg
push
out
adc
jne
das
out
insb
and
xchg
icebp
adc
adc
dec
test
test
adc
ret
add
stos
or
ds
data16
jns
repnz
dec
push
add
sub
xor
xchg
pusha
dec
mov
inc
fadds
test
jns
out
popa
cmp
inc
adc
inc
push
test
sbbb
repnz
cmp
mov
movsb
pop
lea
and
pop
loop
ds
fistpll
jo
mov
and
xor
filds
xchg
or
pop
dec
insb
cmc
mov
call
sub
in
cmp
subl
bound
les
and
enter
insb
clc
sahf
shl
das
addr16
test
sub
mov
fimull
adc
fnstcw
xor
js
popf
mov
mov
imul
ja
xchg
stos
sbb
xchg
lods
add
cwtl
pop
add
push
add
jmp
jno
mov
cs
call
jp
and
sarb
ja
xor
mov
fisttps
ret
dec
nopl
cmp
push
call
xor
pop
stos
out
jne
xchg
enter
cld
repnz
aaa
fwait
in
adc
xor
push
xchg
subb
mov
inc
pop
into
xlat
iret
pop
lods
add
stos
fidivrl
sbb
push
sub
pop
push
or
sbb
pop
popa
ds
movsl
jmp
and
lock
jecxz
pop
js
scas
out
fnstsw
push
mov
mull
sarl
and
mov
les
arpl
xor
mov
xor
adc
xor
les
aas
pop
add
loop
adc
cmc
mov
mov
mov
outsb
xor
sub
jecxz
jb
lods
sbb
repz
inc
push
test
imul
mov
inc
xor
add
xchg
pop
add
cmp
xor
movnti
and
ds
inc
cmpb
insl
dec
ja
pop
mov
stos
mov
mov
xor
fmul
push
lds
add
fidivrs
movsl
mov
inc
ror
push
loopne
pop
cmpsl
push
shrl
jp
pop
in
mov
out
movb
stos
daa
icebp
sbb
sub
sub
int3
mov
insb
arpl
xchg
dec
pushf
xchg
pop
lahf
adc
shrb
int
cmp
gs
mov
ds
mov
dec
mov
test
sbb
popa
je
pop
fs
cs
xor
mov
mov
or
repnz
pop
and
mov
and
fsubrs
xchg
mov
add
imul
es
out
movsl
mov
cmp
out
in
imul
fcompl
ficompl
add
push
mov
mov
sti
mov
and
iret
mov
xchg
xor
push
or
jge
lea
fisttpl
jge
and
push
xchg
cmp
push
test
xchg
jns
xor
jno
arpl
cmp
addr16
mov
mov
divb
dec
clc
subl
mov
fnsave
jmp
jecxz
lahf
dec
jbe
add
xor
jle
dec
inc
ret
mov
ret
xchg
jns
pop
lahf
cmpb
xor
push
pop
mov
mov
jne
pop
and
gs
push
xor
adc
leave
test
cli
push
fiadds
cmp
in
dec
pop
dec
fs
xchg
push
mov
push
and
adcb
or
pusha
mov
fisubs
fcomps
lea
or
cmp
cmpsb
xor
shrl
or
mov
ret
xlat
lret
loopne
into
cmp
ja
loope
addr16
jge
jns
mov
push
sbb
pusha
adc
pop
testb
pop
inc
loop
dec
xchg
addr16
xlat
je
cld
inc
jmp
ja,pn
xor
scas
push
test
push
gs
mov
push
push
dec
imul
pop
push
cmpb
cmp
push
imul
jmp
adc
jbe
adc
xchg
and
mov
fwait
int
pop
adcb
or
or
or
jecxz
dec
shll
decl
push
mov
das
imul
pop
repnz
jno
out
xchg
dec
lret
mov
xor
mov
lods
mov
test
shlb
bound
push
xchg
pop
xor
mov
cmp
or
cltd
xchg
sub
xor
xor
dec
push
mov
lret
xor
adc
mov
mov
cld
add
std
push
mov
hlt
push
call
mov
scas
aam
sub
mov
sub
std
sbb
pushf
cmp
mov
sti
movsl
flds
inc
push
xchg
or
or
and
push
push
gs
cld
add
push
ds
loopne
mov
or
dec
test
decb
jp
mov
je
cs
std
sbb
xor
test
inc
popa
repz
xchg
hlt
adc
out
cmpsl
xchg
mov
push
mov
movsb
popf
out
or
sub
test
loope
test
aaa
jae
sarb
adc
test
enter
clc
mov
add
ds
sbb
or
and
inc
call
xchg
insl
or
mov
adc
iret
dec
sbbb
xchg
jno
mov
sub
les
inc
cs
mov
pop
dec
inc
flds
loop
test
call
mov
jmp
enter
and
mov
mov
push
cmp
add
pop
arpl
in
mov
stc
nop
xchg
jo
mov
cmp
or
sub
dec
outsl
int
js
xchg
mov
jae
push
jmp
xchg
popf
jb
xlat
cld
cmp
movsb
inc
imul
fimull
xlat
popa
out
jns
jb
pop
je
mov
add
test
push
mov
xlat
add
inc
dec
push
mov
scas
nop
cltd
ret
in
mov
movl
and
mov
loope
cmp
xor
fldenv
int
xchg
clc
mov
sti
mov
mov
mov
mov
fwait
mov
negl
imul
shrl
lods
xorl
imul
xchg
or
mov
outsb
pop
pop
and
movsl
jbe
cmp
xor
push
enter
lret
data16
push
inc
faddl
pop
cmpl
int3
push
jmp
mov
rorl
lcall
shr
mov
jo
hlt
pop
cmpsl
mov
lods
aas
dec
movsl
inc
insb
in
aad
dec
ja
xor
adc
cmp
into
dec
aas
adc
pop
jl
shlb
shll
sbb
loop
or
cmp
sub
sti
dec
shrl
jo
sbb
std
adc
loop
jg
addr16
dec
xor
ja
mov
push
fwait
rolb
jl
push
out
repz
pop
xchg
ret
rcrl
pop
push
frstor
imul
insl
jne
lods
adc
data16
mov
addl
dec
mov
or
adc
dec
xor
lahf
lods
call
fistl
push
cltd
sbb
jns
dec
cmpsb
pop
pop
out
dec
sbbl
sbb
mov
sbb
sbb
pop
and
and
mov
push
add
adc
dec
push
cmp
and
mov
push
dec
adc
inc
xor
inc
inc
pop
out
loope
push
int
mov
cmp
push
and
push
cltd
das
insl
mov
decb
xor
outsb
lds
cmp
ja
dec
in
mov
test
xchg
ja
clc
sti
pop
daa
mov
mov
push
ds
je
subps
add
fstpt
or
pusha
mov
mov
pop
clc
imul
pop
cwtl
or
lcall
mov
xchg
sbb
pop
adc
xor
pop
aas
lret
jnp
ss
inc
les
out
mov
call
nop
xor
addr16
outsb
insl
push
sbb
push
mov
pop
cmp
mov
mov
sbbb
push
push
roll
int3
sarb
cmp
or
stc
xchg
mov
push
fisttps
inc
lds
mov
or
sub
adc
inc
cltd
sub
popa
iret
mov
int
pop
inc
enter
shr
pop
sub
addr16
sub
pop
xchg
or
test
or
mov
mov
pop
lock
cli
lret
mov
cmp
or
sub
inc
or
out
xchg
fdivrs
cmp
out
and
push
or
pop
in
in
push
test
ret
jmp
fwait
mov
and
iret
bound
inc
outsl
fcompl
pop
xor
sbb
sub
call
les
and
daa
mov
movsb
ds
cld
ds
jae
xchg
xchg
push
shr
jno
pop
popf
dec
mov
xchg
sbb
jne
test
xchg
push
jne
test
push
iret
fs
mov
test
pop
xor
jmp
rcll
jb
fstps
imul
rcr
pusha
sti
adc
xor
cmpsl
clc
inc
mov
or
cmp
cmc
mov
fs
fisttpll
jmp
jbe
mov
stos
dec
das
rclb
add
hlt
sti
and
mov
outsl
loope
shll
lods
test
fisttpl
mov
cli
mov
test
and
ret
orl
shlb
ljmp
in
daa
outsb
push
mov
jne
and
mov
mov
adc
jae
in
addr16
sbb
xor
xor
lea
pop
rorl
push
cmpsb
add
icebp
testl
cmp
and
jbe
pop
data16
sti
jns
adc
loopne
mov
loop
outsb
loop
int3
sub
adc
daa
sar
psubusb
lret
adc
frstor
es
ss
movsl
pop
mov
enter
pusha
into
idivb
or
sbb
lea
cmp
lock
jbe
adc
jge
cwtl
jo
cmp
mov
xchg
btr
fs
and
dec
mov
cli
pushw
pop
xchg
in
jbe
lahf
push
push
jge
out
addr16
push
iret
inc
outsl
push
dec
adc
xor
cmp
and
cli
inc
xor
mov
fsts
add
lods
clc
call
xchg
or
repnz
shl
jle
pop
ficoml
fs
outsl
xchg
pop
pop
lea
xor
fists
in
rcll
cmp
popa
repnz
das
mov
mov
setbe
xchg
insb
jbe
das
jo
mov
or
ss
sbb
pop
ss
add
mov
negb
ret
leave
add
inc
dec
add
mov
push
adc
inc
in
mov
and
dec
push
shr
int
push
cs
int
jmp
adc
test
mov
pop
rcl
xchg
xchg
push
call
sub
lcall
nop
ljmp
jmp
mov
jmp
mov
jne
dec
insl
mov
stos
imul
push
cltd
xlat
xor
jge
jle
mov
repz
jecxz
in
scas
add
in
std
push
or
movsl
jl
pop
iret
inc
xchg
adc
and
cwtl
xchg
in
jmp
pop
test
ja
inc
lods
or
lea
adc
adc
xchg
mov
lock
jecxz
sbb
add
fldt
adc
push
mov
or
mov
ficoms
cmp
mov
stos
les
xchg
sbb
pop
mov
sbb
add
and
xor
add
lret
jb
lea
xor
or
add
or
sub
jmp
loop
add
enter
pop
mov
cs
mov
das
bound
je
iret
mov
mov
jle
push
jp
sbb
lret
jl
ret
ret
sub
add
aad
mov
push
and
mov
cwtl
cmpsl
cmp
pop
pop
lea
pop
test
mov
add
or
push
mov
imul
jne
fldenv
xchg
lods
cmp
loope
and
in
dec
pop
out
fwait
jle
mov
movsb
test
test
and
shrl
sbb
aas
cmp
lods
dec
ret
test
imul
stos
inc
fwait
lods
int
or
or
mov
out
imul
idivb
xchg
mov
push
ret
lcall
xor
xor
dec
sub
pop
xor
jno
jbe
add
movb
lods
add
or
addl
pop
insl
les
fiadds
aaa
repz
xchg
mov
enter
iret
mov
enter
push
adc
inc
stos
mov
out
into
les
rcrb
enter
aas
push
xor
aaa
pop
call
xor
or
aam
and
aam
enter
loopne
push
bound
test
imul
mov
call
ss
push
imul
iret
icebp
add
cli
mov
pop
mov
adc
leave
into
repnz
and
xchg
das
jge
mov
imul
cmp
cmpsb
jmp
or
mov
pop
push
cmp
gs
daa
xor
mov
sub
xor
push
push
or
xchg
test
mov
pop
dec
out
push
stos
push
mov
into
hlt
xchg
test
ret
fsubrs
lahf
xchg
fs
pusha
ss
es
adc
sbb
incb
mov
sub
jle
inc
arpl
addl
out
pop
xor
inc
push
mov
or
movsb
dec
push
scas
push
ret
pusha
jno
fisubrs
push
arpl
pop
dec
xchg
fidivrs
paddq
or
mov
cmpsb
mov
mov
std
pop
pushf
rolb
adc
pushf
outsl
sarb
rorb
subl
mov
mov
ss
dec
testb
daa
shrl
cld
scas
addr16
xchg
orb
jae
es
sahf
bound
cmp
scas
mov
mov
pop
mov
add
xor
fsubrs
arpl
jge
fninit
sub
imul
dec
bound
fiadds
fcmovnb
sbb
push
pushf
test
add
jl
dec
std
jno
stc
dec
push
fildll
pop
push
ja
ja
jnp
insl
mov
addr16
out
div
jno
add
cmp
xor
push
into
cmpsl
mov
inc
mov
jnp
inc
push
mov
movsb
into
aas
lret
fcom
push
jmp
rcll
dec
outsb
cs
jp
fwait
cmc
data16
insb
inc
enter
cltd
fdiv
insl
push
dec
rcll
in
adc
dec
fstps
or
fimuls
enter
testb
cmpsl
movl
in
or
sbb
fwait
cld
adc
fiaddl
inc
shll
dec
xorl
or
dec
or
jne
lret
inc
sub
cs
lock
or
pop
sbb
inc
push
sti
adc
add
cmp
push
cmpsb
or
ja
mulb
ret
cmp
xchg
mov
adc
test
call
fistpll
repnz
sbb
mov
gs
subb
mov
in
xchg
into
jle
mov
xor
xor
shlb
jnp
sub
pop
or
lret
test
aad
pop
scas
jle
jbe
cltd
fwait
gs
xchg
bound
jns
push
je
or
and
ficompl
xor
pushf
out
pop
inc
jns
fists
dec
mov
andb
sub
dec
mov
in
xchg
or
inc
leave
lret
jnp
mov
movsb
mov
lahf
orl
dec
inc
sbb
fldenv
lds
push
mov
in
fbld
mov
fistps
jns
push
stc
ds
xchg
xor
cmp
adc
in
lock
push
xlat
push
and
test
mov
aam
add
lds
gs
test
adc
cmp
stos
loope
jne
adc
test
xlat
push
test
shl
adc
sbbb
push
clc
xor
and
jg
mov
pop
xchg
mov
inc
test
loopne
ret
xor
mov
test
dec
lods
rcll
je
aad
subl
mov
data16
inc
or
ret
jge
mov
testb
mov
xchg
mov
enter
mov
fistl
nop
int3
movsb
outsb
sub
cltd
mov
add
dec
pusha
push
lret
aad
sub
in
dec
pop
stos
xchg
lahf
mov
dec
gs
cltd
in
bnd
out
mov
or
pop
and
iret
or
or
stos
ss
in
sbb
xor
shll
rorb
mov
jecxz
adc
rorb
nop
push
xchg
js
xor
xchg
mov
mov
pop
push
or
ds
sbb
das
xchg
mov
stos
pushf
fbld
cltd
cmp
cmp
loop
divl
xor
jecxz
loopne
or
clc
cmp
ja
repz
ds
adc
outsl
inc
fcmovne
or
movsl
pusha
mov
inc
jae
je
sbb
lds
jnp
or
jns
loope
outsl
mov
inc
xor
mov
and
decl
push
loopne
xchg
sub
or
cs
idivb
mov
adc
or
mov
sbb
out
fbld
sti
repz
cmpsl
and
fildl
jb
leave
fildl
xchg
push
mov
jmp
pop
xchg
adcb
das
xchg
add
inc
mov
inc
inc
add
iret
sbb
pop
add
movsl
in
mov
adc
je
jmp
jns
adc
dec
out
in
shl
jnp
call
cmp
fsub
cmp
mov
repnz
inc
call
push
insl
popa
xor
lcall
pop
mov
xchg
sbb
not
mov
out
ret
scas
out
mov
fldcw
mov
adc
cmp
test
xor
adc
xchg
inc
mov
int3
dec
or
leave
pop
scas
jae
jle
ljmp
into
xlat
in
inc
jg
pop
out
testb
lds
or
adc
adc
int
pop
jge
jo
rcr
bound
cli
js
enter
sub
mov
sub
cld
repz
pop
das
iret
idivl
arpl
imul
in
into
mov
into
lods
scas
call
cltd
adc
fs
mov
lock
fcmovnb
andl
adc
fnsave
je
push
cmpsl
mov
push
mov
cli
es
int
push
or
int
stos
push
pop
fwait
mov
mov
push
xor
in
mov
add
mov
or
ss
ss
mov
inc
add
push
test
mov
aas
and
dec
icebp
aam
mov
jae
sub
push
lret
cwtl
fs
aam
pop
in
or
jge
mov
sub
out
and
push
mov
dec
cmp
sbb
mov
xor
dec
mov
push
and
inc
mov
ss
inc
cmp
int
mov
dec
outsb
xchg
jp
lods
cmp
notb
xor
aam
inc
fiaddl
jge
ret
mov
or
pop
mov
dec
dec
mov
sti
in
insl
dec
add
and
jg
shlb
inc
xchg
loopne
stc
mov
movsl
push
loope
hlt
bound
pop
mov
aaa
jg
sbb
test
ds
pop
movsb
xor
pop
aam
add
sbb
mov
dec
mov
cmp
xchg
sbb
orb
mov
lods
jae
cmp
cmp
popf
jge
sub
add
mov
das
fldt
push
loopne
jmp
xor
imul
jne
mov
leave
fstps
sbbb
push
arpl
inc
stos
adc
rorb
xor
jo
push
outsb
xor
stos
clc
sti
es
hlt
les
inc
enter
xchg
frstor
pop
push
scas
es
icebp
push
pushl
push
dec
dec
pandn
sub
jnp
dec
in
pushf
int
mov
orb
sub
pop
out
ss
divb
mov
adc
mov
push
mov
aas
xor
movsb
sub
push
mov
mov
cltd
mov
fldt
rcll
mov
push
cmc
in
jmp
insb
daa
jp
nop
fsubl
mov
cmp
dec
rol
mov
push
xlat
add
addb
jmp
inc
adc
xor
cli
inc
fnstenv
or
pusha
cwtl
mov
adc
push
adc
mov
sbb
add
push
cmp
add
adcl
push
ja
sub
pop
in
cmp
xlat
outsl
insb
xchg
jo
insl
cmp
rclb
adc
daa
jecxz
push
dec
xor
loop
inc
pop
mov
hlt
sbb
push
lods
in
ja
sub
mov
test
adc
ret
cltd
cmp
in
pop
fisubrl
mov
shll
and
jo
lock
jne
lahf
push
into
lret
jl
inc
scas
fs
sti
jmp
or
fcmove
lds
ja
dec
and
mov
fnstcw
add
movsb
call
test
aas
sti
fldcw
dec
lea
cmc
mov
insl
addr16
mov
cwtl
adc
out
cli
insb
das
pop
addr16
or
mov
cmp
std
xor
jp
add
push
mov
adc
movsl
xchg
or
sub
mov
adc
les
out
cltd
sub
ljmp
dec
cmp
mov
mov
pusha
mov
pop
ja
push
sub
fnstcw
push
xor
and
mov
sbb
and
push
scas
mov
lcall
add
jl
imul
jns
mov
mov
sbb
and
mov
xchg
pop
fimull
dec
daa
rcrb
pop
ljmp
int
cwtl
insl
mov
cmc
jne
aad
int3
idivb
xor
roll
mov
out
push
sub
pop
clc
mov
sbb
jnp
bound
test
dec
or
fnstcw
mov
int3
jmp
fimuls
test
lea
mov
fiaddl
pop
aaa
and
adcb
imul
jae
cmp
jg
addl
lret
pop
sbb
mov
lock
daa
popa
out
ds
icebp
std
fisubrs
loop
xorl
imul
out
sbb
xchg
and
pop
dec
push
fs
xchg
scas
sub
jge
cmpsl
enter
cmc
lret
mov
push
ret
mov
js
ds
jns
int
lahf
lret
aad
push
sbb
pop
pop
das
movsb
pop
ds
popf
jb
cmp
leave
mov
cmpsb
sub
addr16
pop
stc
clc
rcrl
pop
int
sub
scas
dec
sub
inc
mov
mov
lcall
cmp
sub
mov
sbb
sahf
mov
imul
movsl
nop
idivb
stos
repnz
inc
das
jp
adc
rcrl
xchg
pop
xchg
mov
sarb
mov
push
mov
ljmp
dec
push
cmpsb
daa
sbb
cmp
push
rorl
adc
aas
popf
stc
pop
movsl
loop
push
mov
adc
mov
int3
addr16
cld
jmp
mov
pop
outsl
pop
jb
cmp
outsl
aaa
push
xchg
xchg
mov
addr16
int
andl
jle
cmp
push
iret
cld
pop
xchg
insl
xor
sub
mov
or
push
push
pop
movsl
rolb
inc
push
adc
imul
pushf
arpl
rol
loop
lret
mov
fildl
out
push
dec
jae
call
xchg
mov
out
mov
mov
mov
mov
mov
mov
xchg
cmp
lcall
enter
icebp
cli
lcall
call
hlt
hlt
ffreep
lods
test
in
sbb
pop
fs
aas
or
lret
popa
inc
data16
pop
in
xchg
push
ljmp
out
pop
dec
dec
mov
mov
loope,pn
mov
or
shlb
clc
test
xchg
ror
mov
js
mov
loop
push
pusha
and
cmpsb
xchg
mov
sub
imul
aad
inc
fnsave
jecxz
add
jb
xchg
in
lret
pop
push
movsb
mov
push
stos
dec
push
mov
sahf
movsb
and
jae
pop
sub
mov
dec
add
cwtl
shl
add
mov
bound
pushf
scas
and
imull
lcall
pop
test
and
decb
push
imul
sar
fbstp
mov
xor
movsl
pop
dec
shlb
pop
mov
sbb
sub
inc
pop
xorl
scas
flds
arpl
mov
mov
jne
dec
xor
xor
xor
js
push
pop
nop
sar
int
faddp
dec
inc
mov
inc
outsb
shl
pop
rclb
mov
rcr
test
outsb
dec
bound
nop
mov
daa
cmp
call
inc
xlat
fs
popl
adc
fcomps
pusha
jae
stos
mov
add
jne
and
test
inc
outsb
movsl
cli
shlb
fwait
sub
xchg
negl
mov
inc
or
fdivrs
ret
sub
enter
cmp
in
mov
in
loopne
idivl
popf
mov
mov
outsb
cmc
adc
hlt
jle
mov
es
sbbb
cmpl
cmp
inc
pop
out
adc
ret
mov
enter
push
jnp
cmp
sub
mov
iret
jbe
pop
mov
jle
in
ret
cwtl
test
jns
mov
ret
inc
push
out
inc
sbb
mov
jle
andl
les
adc
mov
dec
test
loop
outsl
pop
add
sub
cld
cmp
test
clc
adc
mov
sahf
scas
cld
daa
or
adc
sarl
insl
dec
mov
out
in
call
popa
add
pop
cmp
adcb
mov
lods
mov
mov
jp
xor
xlat
dec
pop
ret
fnstcw
mov
outsl
xor
xchg
cmp
cmp
imul
das
and
cmp
push
or
add
jo
or
dec
pop
pop
pusha
xchg
mov
loopne
pop
pop
mov
das
push
cli
mov
es
dec
fmull
inc
loop
jbe
sbb
test
sbb
jbe
test
cmpsl
adc
fstl
lahf
stos
mov
lds
adc
cmp
sub
cmp
dec
add
dec
xchg
push
or
jne
outsb
jle
cmp
cmp
sbb
xchg
test
jp
sbb
cmpb
sub
test
add
mov
jb
jecxz
adc
mov
mov
cmp
fadds
ja
mov
sub
jge
mov
xchg
iret
push
ret
int
cmpsl
mov
lcall
nop
xlat
in
in
lret
mov
imul
cmp
mov
inc
xor
mov
push
insl
mov
mov
neg
ret
in
mov
flds
and
loope
int3
cmpsb
xor
pop
mov
clc
lods
add
aam
jae
jg
icebp
insb
das
scas
dec
xor
mov
add
in
dec
push
mov
and
aad
adc
push
mov
cli
dec
ds
xchg
dec
sub
fsubl
insb
aam
mov
add
jmp
mov
insb
sub
icebp
out
loopne
lds
pop
dec
pop
push
out
fcmove
lcall
mov
mov
xor
mov
mov
outsl
shlb
call
add
pop
popf
mov
aad
pop
sbb
sub
xor
mov
scas
in
out
push
loop
les
push
mov
arpl
dec
push
popf
jg
bound
aam
pushf
shl
mov
sub
insl
mov
test
bswap
pop
xchg
xor
imul
shl
pushf
out
xchg
xor
aaa
jle
inc
int
or
popf
push
cmp
lock
xor
add
fldl
fwait
push
xchg
int
xchg
loop
gs
iret
ret
mov
sub
mov
cmp
sub
enter
adc
inc
ret
jne
push
mov
or
lock
ja
cmp
xor
xchg
enter
sarl
dec
jnp
mov
sub
daa
add
add
pop
ja
clc
scas
notl
jo
xchg
jnp
addr16
lods
push
and
jbe
inc
xchg
fsubp
inc
andl
sahf
ss
popa
adc
jp
cwtl
or
cmp
mov
lea
adc
jnp
sbb
gs
fwait
ret
push
mov
cmp
fwait
inc
call
pusha
adc
ret
aas
aam
dec
mov
out
cmpsl
icebp
bound
js
dec
mov
cmpsl
dec
mov
ljmp
jo
mov
inc
and
inc
mov
pop
movsb
cwtl
insl
out
inc
jg
icebp
xchg
lods
mov
pop
insb
mov
fcomi
inc
movb
test
stc
ret
and
adc
mov
fists
data16
mov
in
test
or
fmull
ss
repz
inc
movsl
sbb
test
mov
pop
dec
dec
mov
mov
in
insl
and
nop
xchg
mov
xchg
movsl
es
dec
xor
rolb
sbbl
out
sar
mov
or
xchg
add
pop
push
je
roll
cmp
loop
insl
mov
adc
mov
jmp
add
adc
sub
test
aad
aad
sub
mov
ljmp
dec
aaa
sbb
imul
adc
cmc
pop
jno
jge
insb
jno
ficomps
ret
ljmp
fwait
loopne
inc
daa
mov
popf
sub
fistl
or
cmp
jbe
lods
mov
and
outsl
push
sbb
jge
and
sub
push
jg
mov
int
mov
mov
jae
adc
imul
sbb
iret
sahf
add
push
pop
adc
inc
mov
push
outsl
sarl
iret
stos
adc
inc
sbb
add
adc
dec
flds
or
xchg
int
dec
fst
pop
fcmovnbe
setns
mov
int
arpl
adc
pushf
and
daa
hlt
mov
inc
xor
cli
push
xor
xor
inc
jg
dec
cmp
cmp
arpl
mov
loopne
and
push
rorb
cmpsb
dec
cmp
jmp
and
pusha
add
push
popf
xchg
dec
bound
loopne
mov
fucomip
mov
insl
in
or
pop
in
aas
hlt
jl
inc
shlb
adc
xchg
test
outsb
call
push
lods
push
nop
push
xchg
mov
loop
sbb
scas
xchg
cmp
jmp
mov
mov
inc
mov
stc
int
mov
xchg
add
push
pop
les
cmp
jp
aas
das
or
dec
push
xchg
iret
ret
dec
in
sub
jecxz
mov
push
sbb
jmp
cltd
mov
dec
sbb
xor
dec
nop
cmp
mov
rcrl
or
mov
loopne
lds
jl
push
or
pushf
ret
and
daa
pop
ja
mov
test
or
lret
test
dec
in
jg
sahf
pusha
lret
aaa
imul
cs
cmp
mov
inc
sub
xchg
jb
mov
xchg
sub
inc
andb
repz
les
mov
dec
call
push
mov
cmp
and
mov
dec
hlt
pop
daa
mov
cmp
lcall
dec
pop
fwait
jno
dec
jp
nop
sub
add
mov
fdivrs
bound
les
cli
or
andb
daa
jmp
decb
adc
shll
mov
push
jl
lret
pop
jnp
out
insb
pop
in
shrl
in
stos
pop
lods
xchg
hlt
adc
xchg
out
out
pop
and
cmp
push
mov
mov
dec
adc
jae
addr16
jl
xlat
xlat
outsb
subb
sahf
loope
scas
lcall
call
push
mov
aad
mov
mov
xor
repz
push
gs
pop
xor
add
andb
testl
adcl
repz
aad
arpl
mov
and
jg
jecxz
lds
cmp
stc
dec
mov
push
jae
sub
jle
mov
dec
jmp
add
test
test
xor
jbe
aam
or
shrb
xlat
lret
mov
sarl
push
call
out
cmp
or
iret
vcvtps2pd
dec
xchg
aam
nop
or
movsb
lock
push
rcrb
jns
push
lret
pop
sub
das
dec
repz
ds
mov
ds
lcall
ss
test
mov
xchg
jmp
xor
inc
pop
fisubs
cmp
js
cltd
sbb
aas
sub
call
subb
adc
mov
cmp
jecxz
pop
loopne
loopne
cmp
outsb
and
cmp
xchg
sbb
jecxz
cmp
aaa
mov
int
push
cmp
imul
inc
jo
testb
outsl
cld
es
ljmp
or
out
cmp
mov
and
mov
or
fimull
shlb
ret
cmp
sbb
fadds
mov
mov
movsb
idiv
das
add
and
loopne
and
mov
push
xchg
arpl
mov
dec
mov
xchg
pop
pop
jb
inc
mov
imul
jbe
inc
mov
movsb
dec
fwait
outsb
add
pop
jo
icebp
pop
repz
jns
fucomp
cmp
or
fxch
push
mov
nop
mov
gs
cmpsb
inc
mov
cld
dec
in
cmc
loopne
out
add
pop
fnstsw
ret
andl
and
jmp
outsb
add
xor
cld
dec
dec
mov
cld
lods
or
push
jecxz
or
popf
push
repnz
ljmp
xchg
mov
adc
scas
sahf
out
xor
sub
mov
or
inc
xor
es
stc
mov
shll
lahf
adc
xchg
lods
enter
mov
add
daa
jne
lret
inc
sub
push
jecxz
cmpsb
lock
repz
out
pop
iret
xlat
mov
mov
int3
cld
pop
fwait
icebp
push
xchg
lcall
pop
mov
fadds
inc
imul
xchg
xchg
mov
jle
aam
or
inc
and
negb
bnd
ret
mov
pop
xchg
push
call
jp
arpl
or
jno
call
mov
idiv
adc
inc
nop
filds
and
shlb
jno
fildl
jmp
lcall
mov
nop
inc
cs
rcr
or
xchg
les
or
je
addr16
xlat
mov
xchg
xor
pop
dec
imul
es
int
add
lcall
pop
nop
mulb
jae
lcall
xor
mov
pop
enter
pop
sub
mov
adc
dec
xchg
test
pop
add
xor
and
or
push
add
or
xor
mov
mov
insb
loop
clc
les
adc
inc
adc
mov
ljmp
test
sub
fcoml
movsb
sti
xor
rcrl
leave
jno
adc
dec
mov
lcall
jp
repz
scas
sbb
fistps
sub
mov
enter
fists
sub
sub
inc
pushf
add
shr
mov
icebp
pop
adc
bound
push
adc
jnp
movsl
pushf
leave
scas
fsubs
pop
push
mov
xchg
or
push
scas
dec
sbb
fs
cli
jne
add
negb
hlt
bound
sbb
pushf
push
cwtl
shl
rcrl
movsl
mov
lcall
in
testb
xor
int3
xchg
and
gs
dec
int3
aaa
pop
sub
ret
int
mov
push
push
aam
fnstsw
ss
pop
lods
push
hlt
insl
or
push
add
mov
adc
sbb
jmp
int3
data16
iret
cmp
outsl
pop
adc
gs
adc
int3
inc
add
stc
or
inc
xor
sbb
add
loopne
mov
lods
testl
push
shll
lret
subl
xor
scas
jo
mov
in
adc
jae
sub
mov
cmp
scas
sub
add
bound
mov
sbb
cltd
test
mov
add
inc
xor
into
nop
frstor
add
mov
lods
lock
mov
sahf
sub
rclb
cmp
imul
sub
adc
data16
pop
adc
arpl
pop
and
jno
in
mov
mov
cmc
jnp
ja
pop
dec
icebp
repz
jg
lret
je
in
push
lret
out
xor
shll
xor
sub
dec
jmp
andb
js
sbb
ja
and
push
mov
in
ficompl
sub
jp
fistpl
mov
test
and
sbb
lock
dec
or
imul
cmp
int3
imul
adc
mov
cmp
nop
iret
scas
inc
xor
popa
mov
fldenv
sbb
int
ljmp
test
daa
imul
cmpl
mov
sbb
stos
cmp
imul
loop
push
scas
mov
mov
dec
loope
add
or
insb
dec
mov
or
pop
daa
shl
xchg
add
mov
push
imul
xchg
pop
sub
push
mov
sbb
xchg
jno
aad
pushf
lcall
and
iret
jmp
mov
xchg
mov
dec
movsb
push
loopne
xlat
cmp
repnz
lahf
adc
push
mov
jns
add
ds
adc
sub
shrl
cmp
ret
xchg
xor
mov
add
or
or
pop
stc
sti
lcall
enter
adc
cwtl
cltd
adc
scas
filds
mov
push
or
mov
lret
dec
inc
test
stos
data16
movsl
fwait
add
test
jno
lods
fdiv
jg
push
sbb
jecxz
ret
mov
int3
adc
rcll
inc
xchg
lret
mov
mov
out
or
mov
addr16
or
and
push
dec
test
xor
xchg
push
in
pop
sbb
or
xchg
outsl
aam
lret
in
rep
out
aas
cmp
sub
add
cmp
popf
mov
sahf
hlt
scas
pushf
and
push
and
jnp
xchg
xchg
mov
xchg
add
inc
mov
loope
rol
push
test
cmp
div
push
mov
push
jnp
xchg
mov
pop
ss
inc
cwtl
cwtl
or
adc
cmp
lahf
dec
movsl
das
addl
jbe
sbb
xchg
scas
out
pop
inc
push
mov
in
arpl
mov
cmp
ret
decb
lods
lahf
mov
sub
jge
adc
leave
or
cmp
or
in
push
je
mov
jle
mov
iret
inc
and
movzbl
pop
cmpb
cmpsb
movsb
lcall
sub
jge
ds
and
hlt
jmp
xor
adc
flds
lret
loop
pop
movsb
in
mov
mov
pop
ret
call
adc
sbb
fistpll
lcall
stc
mov
push
mov
mov
jmp
adc
fwait
shufps
lahf
lret
imul
and
cmp
add
pop
ja
sub
xchg
pop
into
add
mov
adc
cmp
imul
scas
repnz
cwtl
cmp
lahf
xlat
ljmp
sub
mov
roll
hlt
jnp
push
rorb
stos
jne
and
sbb
rcrl
pushf
mov
icebp
dec
aaa
lock
xchg
pop
ror
jp
sbb
das
sbbl
mov
xor
mov
js
cmpsl
sbb
jno
sbb
cs
icebp
pop
aam
into
adc
mov
mov
fstpl
lahf
pusha
jne
adc
mov
hlt
test
jecxz
jle
loopne
add
mov
roll
pop
test
decb
mov
std
dec
xlat
scas
fucomip
ja
shrb
mov
and
pop
cmp
mov
pop
jl
jnp
sbb
xor
push
pop
adc
jmp
xchg
jns
sbb
popf
xchg
jl
sahf
jns
dec
shl
shl
subl
ud0
mov
inc
fbld
pop
xchg
sbb
adc
pop
imul
lahf
aas
in
pusha
push
mov
add
or
mov
pop
lret
roll
ds
inc
into
mov
xor
movsl
add
adc
nop
andl
cmp
push
adc
fmull
loop
pop
or
cmp
push
aam
and
in
in
test
mov
and
dec
aaa
das
cmp
jmp
nop
push
out
aad
daa
xor
loopne
negb
mov
fidivrs
pop
xchg
clc
add
ret
lds
mov
test
outsb
jne
or
sub
out
mov
xchg
shl
pushf
jmp
jmp
cli
or
push
std
dec
ficoml
mov
cmp
repz
and
scas
mov
sti
xlat
mov
and
cmp
scas
xor
pop
jb
fadds
lahf
ret
movsl
pop
push
sbb
xchg
xchg
test
mov
inc
fnsave
xlat
lods
mov
adc
movsl
ljmp
out
cmp
nop
fbstp
mov
jae
push
lret
in
addr16
pushf
pop
add
push
fcmovu
dec
into
popa
sub
cli
in
popf
jbe
sub
andb
inc
addb
add
mov
data16
roll
push
add
add
fildll
mov
sbb
mov
pop
push
cld
int3
dec
shlb
jge
stos
inc
xchg
cmpsb
mov
adc
nopl
rorl
cltd
mov
sbb
andb
test
push
jg
sub
daa
data16
in
push
sahf
xchg
out
scas
and
cmp
out
loopne
ljmp
icebp
dec
inc
hlt
mov
sbb
cmp
pop
pop
pminub
xchg
js
test
shrl
nop
vmwrite
dec
and
adc
in
pop
in
popl
cmp
fcmovu
cmpb
mov
stos
add
xlat
add
jnp
imul
sahf
cmp
jl
mov
cwtl
xchg
ret
pop
ja
cmpsb
inc
sub
out
add
push
xor
loopne
out
enter
int3
ss
repz
pop
js
ljmp
iret
das
bnd
mov
dec
sub
test
sbb
mov
in
cs
xchg
ja
test
repnz
dec
dec
aas
test
dec
dec
push
mov
sub
pusha
les
pop
xchg
cmp
shrb
movsl
fbld
daa
shl
cmp
adc
dec
adc
hlt
fstps
adcl
les
inc
mov
out
push
sbb
pop
fisubs
loopne
rorl
add
cli
and
adc
add
cs
jne
leave
xchg
rorb
sub
lcall
xor
inc
testl
mov
pusha
mov
repz
inc
pushf
int3
ja
mov
and
mov
adc
push
lods
out
fidivs
dec
adc
xchg
daa
shl
inc
mov
ss
frstor
xchg
and
xchg
inc
test
enter
outsl
iret
scas
mov
aam
xchg
inc
pop
cmp
ss
or
scas
mov
jno
push
adc
ret
mov
jge
xchg
xlat
sbb
mov
inc
lret
dec
imul
ljmp
or
aas
ficomps
jmp
or
dec
cmc
adc
mov
cld
jmp
inc
jg
mov
xor
popf
mov
out
cmp
addr16
pop
mov
adc
lods
dec
aaa
sub
and
mov
mov
cld
outsb
dec
jb
sbb
fwait
das
inc
or
inc
jecxz
or
repnz
add
aam
cmp
pop
add
push
cmpsb
iret
pop
lea
ljmp
test
jp
sub
mov
hlt
js
xchg
outsl
es
cmp
mov
cmp
fidivrl
outsl
out
mov
jae
ror
mov
sbb
jns
cmc
mov
stos
or
fadd
shll
cmp
xchg
setge
cmp
repnz
xor
fs
rol
test
fisttpll
xchg
xorl
push
dec
cltd
js
or
das
adc
lret
adcl
dec
jg
adc
insl
das
imul
or
adc
loopne
sub
cli
mov
divb
loopne
mov
jmp
lock
test
inc
adc
int
movsb
aaa
dec
cltd
test
push
sub
adc
push
mov
popf
mov
mov
push
lods
jno
popa
mov
jecxz
xorl
outsb
imull
arpl
add
xlat
dec
enter
aas
jo
nop
orl
test
enter
call
int
out
dec
inc
mov
pop
jp
mov
call
mov
dec
mov
sbb
mov
cmpsl
xchg
je
out
test
cmp
jb
or
sbb
das
ja
into
lock
adc
mov
cmpsb
seto
pop
pushf
into
ret
cmpsb
lds
xor
push
jne
lock
clc
insb
test
dec
sbb
adc
jg
in
shrl
xchg
std
scas
add
pop
arpl
popf
rol
push
mov
out
xchg
int
xor
iret
movsl
mov
cmc
or
push
adc
add
jno
sbb
xchg
jae
outsb
xchg
fs
rcll
add
mov
out
sbb
pop
fildl
mov
sbb
cmp
add
jnp
imul
xchg
fisubrl
rcrl
loopne
mov
dec
jp
addb
jp
sarl
sub
adc
inc
sbb
hlt
sub
je
in
mov
aas
pusha
cltd
test
mov
out
fiaddl
jmp
jecxz
fists
cmp
idivb
xchg
xchg
mov
aad
sahf
loopne
mov
sti
mov
mov
sub
call
cltd
aas
pop
push
aam
push
push
jnp
pop
leave
mov
test
fnstsw
xbegin
clc
sti
jnp
cld
pop
lods
lea
dec
inc
repnz
sub
xchg
adc
push
mov
mov
jmp
leave
push
out
sbb
insb
push
mov
cwtl
mov
and
xchg
push
xchg
fidivl
xlat
test
adc
pop
mov
or
adcb
ficomps
or
push
ja
inc
or
mov
adc
sbb
in
adcb
aad
push
jo
aam
sbb
out
sub
jo
mov
push
push
xchg
mov
stos
or
mov
inc
aam
pop
inc
or
sbb
pop
outsb
push
xor
fwait
jge
addr16
add
test
inc
les
cli
stos
xor
xchg
mov
cmp
adc
stos
movl
inc
pop
addl
movsb
lret
out
or
loop
xor
insl
pop
push
adcl
xchg
test
into
lds
fildl
into
js
icebp
pop
std
loop
std
push
cmpb
sbbl
push
cmp
push
aad
push
xchg
rcrb
fildll
cmp
add
cmc
data16
adc
jno
and
in
inc
xor
ret
mov
repz
and
pop
jno
add
xor
jns
push
xrelease
scas
ljmp
xchg
jno
scas
mov
stos
pop
clc
mov
scas
rcl
jmp
repz
bound
insb
rcll
lock
js
cmpb
movsb
jl
dec
test
jae
xor
pop
js
jge
movsl
dec
pusha
in
and
out
sub
mov
sub
push
mov
sarb
adc
jb
lods
xchg
push
adc
dec
aam
popf
sbb
mov
decb
and
add
pop
xchg
filds
pop
cmp
adc
add
js
push
test
rolb
or
dec
push
fcompl
mov
out
loope
xchg
sbb
pop
lds
add
les
jo
adc
stos
test
sub
sti
lahf
adc
rorb
into
and
hlt
shlb
sahf
lcall
jge
mov
stos
xchg
frstor
pop
adc
mov
adc
mov
inc
sarl
mov
ja
xchg
jne
pusha
fs
cmpsb
into
sbb
mov
jl
lahf
bnd
aaa
lret
pop
pushf
arpl
stos
jae
mov
addr16
stc
cmp
arpl
adc
repnz
jp
push
mov
out
jp
call
sbbl
dec
cwtl
sbb
cmp
fwait
scas
inc
jl
test
mov
xor
xchg
inc
test
or
loop
jo
add
popf
das
leave
mov
push
add
xor
jne
test
pop
cmp
sub
and
pop
rol
icebp
in
or
aam
data16
shrb
jle
xor
cmp
add
outsl
insl
out
mov
das
iret
int
add
sub
fld
xchg
adc
xor
fwait
bound
negl
aad
std
dec
adc
xor
loop
jp
pushf
int
cmp
addl
ficoms
sahf
std
or
xchg
cmpsl
jmp
nop
add
inc
xchg
ror
les
movaps
mov
add
lea
lcall
ds
pop
dec
outsl
ss
lea
dec
sahf
insl
dec
xor
mov
jnp
ljmp
mov
push
pop
xor
adc
loopne
test
mov
outsb
push
sbb
xchg
pop
sarl
aas
xchg
aaa
pop
roll
push
mov
cwtl
add
clc
int
mov
scas
mov
testb
imul
push
popa
packuswb
push
pop
jbe
cwtl
mov
pop
pop
fbld
mov
jmp
xchg
sbb
and
nop
xchg
xchg
mov
jl
mov
loop
ljmp
and
jo
into
push
out
dec
out
dec
adc
jp
test
adc
aas
sub
lcall
fidivrl
subl
cmpsb
ljmp
cs
xchg
pop
adc
enter
or
aad
xchg
mov
xchg
cli
test
add
mov
ja
and
in
or
mov
loop
test
inc
ds
pushf
iret
jecxz
iret
hlt
mov
arpl
outsl
mov
scas
hlt
addb
popf
inc
int
mov
int3
jnp
je
inc
mov
ror
mov
stos
jne
je
add
mov
xchg
rol
stos
adc
out
popf
sub
in
or
fimuls
cmp
sub
jnp
into
add
or
fiadds
mov
xchg
inc
mov
inc
jmp
pop
mov
mov
insb
rep
jg
mov
or
jle
inc
insl
ret
jmp
mov
mov
push
jg
jp
icebp
ds
sbb
outsl
adc
mov
inc
shl
cmp
add
repz
xchg
rcrb
out
les
insl
fisttps
adc
lret
push
rolb
xor
jo
mov
cltd
push
decl
inc
lods
push
fcompl
adc
push
and
je
pop
out
push
lock
aam
mov
cmp
push
int3
fisttps
pop
loope
push
mov
leave
jns
cmp
push
clc
xchg
pusha
inc
mov
inc
mov
xchg
hlt
in
leave
inc
ljmp
lahf
mov
push
fisttpll
loopne
movsb
lds
dec
cmpsl
dec
push
loop
jo
pop
sti
xor
dec
xchg
or
sarb
xchg
orw
aad
hlt
push
cmp
or
fwait
and
or
mov
add
mov
ss
pop
sub
test
mov
lcall
stos
hlt
mov
sub
jb
aam
push
mov
aad
or
popa
iret
sbb
push
movsl
push
rorb
fmull
pop
enter
mov
addb
mov
js
pop
bound
shlb
ss
mov
dec
popa
bound
inc
pop
out
pop
idiv
shrl
dec
loopne
fs
call
loope
cmp
andb
push
xchg
out
data16
mov
lahf
jb
lahf
mov
scas
mov
mov
psadbw
repz
xchg
adc
loop
movsb
pop
cmp
xchg
pushf
adc
addr16
mov
inc
add
mov
int
idiv
adc
jnp
adc
fildll
ja
inc
pushf
lods
add
pop
xchg
enter
sub
jmp
aam
inc
jmp
add
mov
shlb
out
cmp
imul
inc
pop
imul
xlat
jp
add
mov
xor
jmp
gs
out
sbb
jno
xor
push
jno
je
das
mov
mov
xchg
sub
sahf
subl
lea
dec
repnz
push
leave
mov
in
mov
outsb
and
inc
aas
dec
cmp
and
repnz
out
or
xchg
adc
inc
sub
mov
xchg
adc
lret
jl
cmp
push
int
pop
ret
jge
int
outsb
pop
dec
negb
lahf
jp
shl
lahf
sbb
push
mov
fnstenv
jg
push
mov
ja
mov
mov
repnz
cmp
sbb
jge
inc
inc
daa
aaa
and
add
stc
fdivrl
or
out
mov
ret
in
jne
in
shlb
pushf
push
push
popf
cmp
int3
inc
add
mov
imul
jmp
pop
mov
inc
pop
loopne
insb
out
pop
cs
push
hlt
repz
mov
cmc
pop
sbb
subb
and
imul
out
andl
pop
sub
pop
mov
fdivr
mov
repz
pop
lods
hlt
add
std
jg
scas
enter
loop
divl
fstpl
xorl
mov
lahf
hlt
push
loop
fcoms
cmpsb
pop
push
into
int
data16
ljmp
into
ficoms
daa
inc
popa
cmp
and
jl
jmp
inc
jl
dec
jmp
xchg
pop
sti
or
dec
imul
in
inc
jecxz
js
mov
les
dec
sub
pop
and
adc
and
cmp
mov
cmc
push
pop
repz
add
add
fsubl
mov
mov
cmp
das
xor
push
std
push
aam
mov
mov
int
and
repnz
cmp
mov
mov
jle
fwait
call
xchg
sub
mov
movsl
add
ret
int
stos
sarl
out
je
mov
inc
mov
mov
add
dec
jmp
rcrl
sub
in
dec
adc
mov
cmc
push
push
pusha
cs
adc
jo
int
pop
iret
sbb
mov
pop
fistl
es
push
rcrl
pop
fsubrs
cmp
jmp
xor
insl
aas
dec
mov
xchg
je
jno
inc
cld
jle
push
mov
mov
popa
cmc
cli
or
call
mov
shll
into
xchg
pop
xchg
ret
vxorps
lret
cmp
mov
xchg
pop
test
cmpl
sti
sbb
imul
dec
adc
lcall
pop
movsl
movsl
lods
sbb
insl
out
mov
or
rcrl
mov
cwtl
sbb
dec
call
sub
aam
add
or
cmp
daa
jo
xlat
lods
les
cmp
stos
pop
xchg
mov
and
cmp
adc
mov
cmc
neg
push
xchg
enter
sub
or
loope,pt
lods
and
pop
mov
idivb
jnp
inc
or
lock
stc
jae
xor
dec
cmpl
jecxz
xchg
outsl
jno
sub
arpl
and
mov
push
insl
xor
fsub
cmp
pop
cmp
adc
fdivrs
pop
mov
bound
mov
sub
mov
popa
mov
and
sub
cmc
clc
mov
mov
mov
jb
xchg
jl
lcall
mov
jo
cs
mov
aas
int3
push
and
pop
push
xor
jae
scas
movsl
pusha
fadd
mov
adc
int3
inc
outsl
fcomps
aam
jg
scas
test
cmp
adc
insb
and
out
mov
fdivs
fs
xor
insb
scas
mov
aas
lds
out
mov
fbstp
add
cld
xor
push
pop
mov
sub
rolb
ds
pop
xchg
or
sar
mov
and
pushf
add
repnz
pop
roll
cld
sbb
loopne
push
or
ret
popa
xor
and
pop
lods
mov
test
sahf
push
mov
cs
jp
add
mov
dec
popf
mov
pop
shlb
pop
and
and
jg
fucomi
loop
test
es
mov
das
lret
hlt
in
aam
flds
mov
fiadds
loope
bound
test
jb
push
iret
push
adc
ja
push
fcoms
sub
adc
divl
push
xor
mov
push
xchg
lahf
add
les
leave
jb
pop
shrb
les
mov
pop
xor
int
adc
inc
fs
xlat
jle
aad
push
xchg
xor
clc
xchg
xchg
pop
jbe
cltd
jb
cmp
dec
inc
adc
test
xor
mov
xchg
jl
std
aaa
mov
fucompp
ror
add
ss
mov
imul
dec
jno
adc
xlat
jecxz
divl
test
leave
aad
add
push
jl
std
lea
xchg
xchg
pop
pop
sub
adc
addr16
in
xor
mov
push
sub
mov
popf
xor
cmc
sarl
stos
cld
pmuludq
add
xchg
out
fcmovnb
xchg
mov
fucomi
and
sbbb
lods
inc
inc
icebp
push
jmp
fbld
xchg
mov
or
inc
shrl
sub
xchg
mov
lahf
sub
mov
adc
dec
jmp
cmpl
cmp
outsb
sub
dec
mov
fldl
scas
out
cmp
shlb
aad
cmp
xor
push
inc
dec
test
pop
mov
mov
or
sbb
xor
and
mov
mov
incb
cmp
ret
pop
jne
dec
sbb
out
imul
cmpsl
sbb
cs
or
mov
dec
ret
aad
jp
mov
icebp
inc
outsl
lods
xlat
jl
dec
bound
sbb
imul
xor
push
dec
mov
lods
sub
pushf
mov
subb
out
test
or
push
jne
lcall
dec
in
pop
mov
aas
int
xchg
lcall
push
add
mov
mov
cmp
sbb
aas
outsb
mov
push
js
fisubl
mov
mov
push
xchg
scas
es
movsb
ljmp
int3
fsubrs
fstl
dec
push
mov
lock
pop
mov
lret
jae
mov
xchg
movsb
or
jo
add
push
jae
jp
sub
xchg
dec
xchg
and
jecxz
push
inc
pop
mov
mov
sahf
mov
push
dec
cld
dec
and
aaa
aaa
repnz
push
addr16
sub
lret
into
mov
jecxz
aad
outsb
test
rorl
cli
mov
in
rolb
mov
xchg
leave
pop
mov
push
xchg
cmp
adc
xor
or
pop
add
dec
test
stos
inc
pop
or
push
in
lods
sti
jl
out
lret
mov
jle
das
jl
push
dec
sub
scas
push
cmpsl
icebp
xor
loopne
fstpt
test
cmp
call
icebp
xor
ret
movsl
cmpsl
mov
pusha
testl
sbbb
in
adc
adc
sbb
adc
js
dec
cwtl
inc
xchg
dec
dec
jmp
jp
add
mov
jb
int3
cmp
jns
push
push
xchg
push
and
push
jmp
lret
insb
adc
in
dec
aas
pop
push
sbb
xchg
jle
shrb
mov
adc
fldcw
cmc
jb
push
popa
sti
cld
mov
xor
lret
inc
jnp
pop
xorl
lea
lret
push
and
push
dec
add
jl
mov
test
or
push
test
shlb
pushf
clc
shll
insl
insl
dec
adc
mov
rorl
insb
cltd
mov
mov
mov
mov
jb
pushf
ja
xor
xlat
outsb
add
popf
arpl
jecxz
or
bound
sub
rorb
in
adc
add
xchg
cld
mov
mov
je
not
or
push
mov
dec
arpl
or
dec
pop
xchg
sub
mov
pop
fnsave
sbb
dec
fiadds
cli
xchg
jg
cwtl
negl
aas
cwtl
xchg
cmp
clc
sbb
shrl
out
shlb
movsl
sub
lods
bound
inc
xchg
mov
inc
aaa
int
loopw
gs
fildl
cmp
bound
dec
ja
inc
sub
cmc
rclb
mov
call
push
mov
lret
sbb
mov
stos
or
out
mov
cmp
push
std
mov
or
pop
orb
cs
ljmp
pop
outsl
inc
pop
push
subb
xor
xchg
decl
aas
lock
mov
data16
loopne
pop
jno
sub
mov
push
cmp
pop
cli
mov
lock
loopne
stos
pop
arpl
and
ret
jg
imul
and
mov
je
in
xchg
dec
aaa
sbb
jbe
xor
or
dec
les
test
adcb
sbb
pop
jne
push
movsl
je
jne
mov
icebp
xchg
sbb
popf
push
hlt
jg
mov
xor
adc
xchg
out
das
fcmovnu
inc
xor
loope
and
mov
ja
mov
sbb
std
jmp
push
pop
or
imul
ljmp
leave
cmp
arpl
add
pop
frstor
aas
jns
pop
add
and
jge
mov
sbb
xor
cld
add
pop
enter
in
popf
ret
mov
jb
sahf
or
xor
mov
jnp
push
xchg
dec
divb
inc
sbb
mov
idivl
mov
outsb
mov
add
sub
popf
inc
adc
inc
inc
and
test
pop
imul
cmpsl
rcll
push
xor
sub
cltd
xor
cmp
xor
push
mov
imull
sub
test
mov
nop
mov
hlt
cld
inc
fs
jne
in
lahf
or
lahf
xchg
rcll
and
lret
in
inc
sub
cs
repnz
push
dec
imul
mov
pop
out
js
dec
add
xor
pop
xchg
outsb
lods
enter
sbb
inc
lea
mull
jb
push
sar
mov
add
push
hlt
aaa
data16
lds
andl
dec
repnz
sbb
icebp
mov
into
lock
pop
push
pop
in
adc
sbb
push
inc
mov
shl
hlt
jl
add
sbb
popf
roll
pop
int3
into
aad
or
inc
daa
mov
mov
mov
push
jmp
xor
jns
stc
jnp
push
pop
mov
daa
test
dec
dec
lods
adc
xor
mov
pusha
stos
jb
sahf
pop
dec
aam
scas
and
rcr
inc
xchg
in
jns,pn
cmp
cltd
sub
sub
xchg
sbb
out
or
ror
sbb
in
dec
sbb
and
aad
jmp
lock
mov
jle
cli
subl
push
out
jle
fs
sbb
leave
shlb
aas
lock
stc
gs
mov
repnz
inc
rcrb
jae
addr16
int
adc
pop
loop
sbb
lret
sbb
adcb
mov
jns
pop
addr16
dec
adc
or
int
daa
lcall
dec
inc
and
xor
mov
hlt
xor
inc
inc
fidivrs
aaa
sub
push
mov
hlt
call
pusha
out
std
mov
pop
and
sub
aad
cmp
sub
std
enter
sub
ja
fsubrs
lds
ret
xchg
ret
add
xchg
jno
dec
lock
adc
shlb
out
jge
lods
in
sti
or
mov
xchg
lret
cmc
inc
aaa
int
scas
xchg
xchg
push
loopne
cmp
outsl
pop
mov
jecxz
add
lea
faddl
dec
fwait
sbb
jle
popa
jns
divl
xor
aad
into
out
loop
pop
sub
pushf
ret
cmp
pop
fldcw
and
ret
test
jne
sub
jbe
dec
js
dec
test
call
nop
out
inc
cmp
loop
pop
notl
sbb
mov
pop
mov
sub
dec
add
and
cmp
mov
xchg
icebp
dec
rclb
out
cwtl
adc
add
adc
push
pop
ja
enter
jne
outsb
push
adc
push
movsb
lods
and
in
test
jno
fidivl
lods
js
pop
test
pop
mov
push
sub
mov
mov
lds
push
push
andl
movsb
int
add
cs
mov
cmp
or
xor
scas
cli
dec
int
xchg
add
and
mov
or
and
cmp
sub
sahf
xchg
test
fstl
inc
lock
adc
xor
lahf
rcrl
pusha
mov
mov
push
or
jbe
imul
cs
lcall
mov
push
mov
mov
fdivrs
daa
lods
stos
cmc
les
int
lds
add
icebp
adc
lret
xchg
xor
dec
loope
andl
adc
es
out
mov
clc
and
clc
mov
xor
js
das
fldl
jb
std
fwait
add
test
push
pop
lahf
push
aas
sbb
cltd
inc
mov
rorb
je
mov
or
outsb
sub
xor
jns
call
cmp
test
push
rcrb
jae
arpl
push
jl
xor
jnp
mov
scas
mov
vpunpcklwd
dec
push
xchg
cmc
push
sub
jmp
pop
mov
addr16
lea
popf
insb
adc
ret
out
movsb
daa
xchg
iret
and
pop
in
sbb
in
ja
pop
loope
in
push
mov
icebp
movsb
and
arpl
popf
and
sbb
lods
cwtl
inc
jo
xchg
inc
jle
sbb
scas
out
insl
in
jno
push
les
inc
jo
jp
xor
movsb
push
sub
xchg
out
jno
mov
inc
sbb
inc
mov
mov
sbb
mov
in
xorl
in
es
cmc
negb
push
jmp
cltd
adc
pop
out
sti
loopne
nop
inc
xchg
adc
insl
pop
sub
popf
dec
mov
jbe
inc
xorl
lret
scas
pushf
incl
lret
imul
or
sbb
jb
cwtl
sub
nop
lds
cmpsb
mov
cli
in
pop
ljmp
sbb
cmp
rorl
nop
clc
sub
aas
adc
fs
mov
outsl
mov
adc
and
dec
push
jb
cli
shll
inc
xchg
les
scas
pop
hlt
mov
mov
movsb
test
shll
push
addl
push
jns
sbb
adc
dec
gs
push
mov
push
loop
out
jle
cmp
push
and
sahf
outsb
aaa
mov
popa
jb
add
cmpsb
orb
ja
hlt
mov
xchg
movsb
xchg
add
loope
sub
cmpl
dec
adc
imul
fistps
or
cmpsb
add
or
add
lock
jmp
fcmovu
sbb
insl
pusha
dec
inc
xchg
paddsw
sahf
adc
rcrl
inc
push
push
hlt
pop
cwtl
stos
mov
cmpsb
sbb
cltd
je
icebp
in
adc
in
push
nop
and
aaa
paddd
rorb
add
push
insb
xchg
or
repnz
test
cmpsb
cmp
gs
pop
int
jnp
fildl
adc
clc
cltd
addr16
aaa
xor
mov
pop
insl
dec
push
shr
push
mov
int
movsb
pop
aaa
xchg
pop
push
gs
xor
int3
sbb
fistpll
int3
add
fnstcw
sub
dec
jge
sahf
mov
pop
inc
and
and
sti
fadds
jg
jbe
and
jbe
sbb
daa
fs
arpl
into
jl
lds
int
loop
mov
mov
cli
jnp
cmp
mov
xor
sub
adc
dec
jo
aam
out
addl
in
fwait
push
dec
sbb
and
or
jnp
out
outsl
mov
fsubrl
sbb
add
push
adcl
movsl
or
pop
test
fst
movsl
lods
jae
mov
jmp
mov
sub
mov
push
shrb
mov
in
ret
icebp
loop
inc
xchg
cltd
or
pop
mov
mov
movsl
push
sub
icebp
ljmp
arpl
mov
cmp
cmp
push
jne
mov
push
jp
jp
insb
lds
adc
xlat
pop
add
pop
rol
ret
cmp
lahf
rorb
pop
dec
xchg
inc
rorb
nop
out
rcrl
out
mov
lods
jo
fidivl
ret
mov
mov
insl
pop
mov
loopne
jnp
mov
outsl
ss
pop
stos
in
fbstp
in
adc
fucomip
enter
mov
add
aaa
adc
subl
adc
cmp
and
ljmp
mov
aam
sbb
mov
iret
insl
add
cmpsb
insl
popf
sbb
in
push
rorb
mov
insb
push
ret
stc
jp
stos
das
daa
lahf
in
and
stc
rorb
std
sahf
push
pop
and
mov
sub
jo
mov
daa
loope
ds
in
insb
ficompl
repnz
ffree
adc
sub
jl
xor
add
cmp
jbe
xchg
jg
shlb
pop
mov
in
push
sbb
mov
mov
jl
add
xchg
jne
mov
imul
lock
sahf
bound
sbb
mov
sbb
out
xchg
clc
hlt
shr
xchg
lret
sbb
mov
cli
sub
not
xchg
repz
push
jbe
cmpsl
repnz
dec
daa
mov
aad
add
outsl
imul
popf
push
adc
jecxz
pop
jns
arpl
icebp
jg
adc
sbb
les
fucomp
mov
pop
rcll
je
fwait
aas
in
ss
sbb
mov
jle
cld
arpl
push
jp
ds
xchg
push
xorb
cltd
mov
mov
push
add
out
jg
dec
rcll
cld
mov
inc
pop
sbb
xchg
scas
cmp
inc
inc
cld
fldenv
outsl
out
fnsave
and
fcmovnb
add
repnz
loopne
ja
repnz
sub
jno
out
stos
into
sub
inc
hlt
iret
push
pop
cmp
and
shl
or
lret
fwait
xchg
adc
xlat
sub
leave
inc
ficoml
and
iret
notl
out
cmp
pop
inc
or
inc
and
mov
mov
xor
add
lret
lahf
sti
jl
icebp
push
int
fildl
and
frstor
cmpsb
je
cmpsb
pop
sbb
std
sub
add
cmp
out
and
inc
mov
jne,pn
push
lcall
pusha
inc
xchg
imul
sub
fcmovne
adc
inc
pusha
xchg
into
add
arpl
js
arpl
outsb
push
push
inc
sbb
and
xchg
decl
sbb
pop
mov
mov
test
out
scas
out
lcall
pop
and
xchg
cmpsl
mov
popf
pop
outsb
sub
jmp
stos
cs
jb
push
mov
addr16
xor
mov
pop
outsb
cmp
adc
sbb
adc
dec
add
pop
aaa
push
sbb
xlat
lea
mov
mov
inc
mov
test
cmp
adc
loopne
xchg
add
lds
xchg
fiaddl
pusha
cmp
add
mov
fld
xchg
mov
stos
aaa
nop
lea
mov
loopne
mov
test
or
fsub
shr
ljmp
and
icebp
mov
mov
dec
mov
inc
insl
cld
mov
sbbl
pop
aad
outsl
mov
aad
movsb
scas
xor
mov
adcl
dec
gs
dec
push
imul
cmpsb
add
push
mov
outsb
xchg
adc
roll
jne
add
lods
push
data16
test
mov
pusha
adc
dec
jae
or
shll
sbb
stc
pmaxsw
push
jns
pop
adc
jb
push
push
enter
xchg
lret
outsl
adc
pop
push
push
inc
jmp
sub
jle
scas
cld
ret
push
push
fstps
faddp
xchg
mov
cmp
cmp
mov
jmp
mov
and
insb
das
aam
jno
xchg
add
nop
fnsave
movsb
into
push
mov
sub
jnp
ret
iret
mov
cmp
push
sub
pushf
fidivrs
or
nop
sub
xor
int
enter
pop
movsw
pop
movsl
pop
jb
push
rcr
popf
icebp
dec
and
jnp
mov
outsb
cmp
sub
fadds
ljmp
pop
push
cld
lods
cmp
jae
je
shll
pop
mov
in
cmpsl
or
sub
mov
and
sahf
outsl
sahf
mov
fsubl
cmp
loopne
fisttpl
idivl
lock
lret
popa
jns
mov
imul
push
fbstp
and
cmp
stos
dec
sbb
sti
pusha
jmp
inc
outsl
adc
and
sub
shl
pop
mov
sub
inc
add
inc
dec
dec
mov
movsb
xchg
xchg
idivb
outsb
mov
clc
push
div
add
into
dec
xchg
les
push
cltd
sahf
fisttps
test
negb
cld
mov
icebp
aam
mov
gs
repnz
loope
sub
in
and
pop
test
rcl
cmp
mov
add
sbb
in
dec
mov
inc
ficomps
mov
test
xor
xchg
lock
ret
nop
sub
das
lret
and
pop
jmp
mov
lea
ret
dec
fisttps
lods
add
cs
daa
sub
fsubrl
dec
pop
cmp
test
aas
ja
outsl
out
jne
inc
out
mov
sbb
jp
or
mov
mov
bound
imul
ror
sub
in
stc
in
shrb
sub
add
adc
mov
fs
cmpl
iret
lock
int
popa
mov
mov
add
xchg
andb
xlat
fisttpl
cltd
in
loop
aad
mov
xlat
shl
je
sub
sti
std
repz
arpl
gs
and
push
out
out
insb
fiaddl
andb
mov
xchg
out
out
xchg
loop
inc
adc
adc
std
cmpsl
mov
pop
xchg
arpl
inc
cmp
xor
ljmp
in
in
les
or
dec
out
mov
jb
insb
xchg
pop
mov
push
mov
lea
xchg
jecxz
mov
cmp
jbe
arpl
dec
aaa
enter
fisubrl
addr16
fidivs
scas
or
in
inc
dec
fwait
sub
inc
and
pop
pop
jmp
mov
sbb
ja
mov
jnp
jae
aad
stc
lea
mov
test
cmpsl
mov
ds
adc
xor
das
sbb
jnp
sbb
xor
or
push
mov
mov
lcall
loope
test
ret
ret
xor
cmpsl
push
dec
add
nop
daa
and
dec
loope
mov
mov
push
std
mov
dec
xchg
dec
jnp
xchg
cmpsl
cwtl
or
enter
mov
push
lcall
lds
je
mov
pcmpeqd
stos
mov
fdivl
lods
stos
sbb
lret
addr16
fs
or
mov
out
mov
dec
imul
and
pusha
data16
cmpsb
sub
adc
loopne
lret
mov
ret
inc
mov
mov
pushf
xchg
bound
sti
fnstenv
arpl
push
mov
jge
xor
not
mov
cmpsb
sbb
ret
out
cmp
lahf
add
in
xorb
loopne
ja
push
dec
arpl
ja
push
cmp
stc
inc
notl
pop
movsb
sbb
mov
loope
andb
push
neg
push
imul
add
mov
fstpl
jl
lret
add
negl
or
repz
push
mov
sub
fsubs
xor
xor
arpl
lret
and
outsl
jl
mov
inc
cld
cli
add
pusha
mov
inc
pop
push
bound
xchg
outsl
outsb
fcomip
or
xchg
mov
or
sub
adc
cmp
inc
add
xor
fwait
sub
mov
cld
inc
leave
xchg
pop
cmp
cld
idivb
ds
insb
push
xor
sbb
push
inc
out
and
xchg
es
jno
xchg
incb
inc
leave
pusha
and
mov
jns
sar
cmpsl
insl
in
lock
push
sbb
int
repz
int
movq
loope
mov
cmp
scas
loope
mov
push
jo
rolw
imul
or
or
xor
sbbl
adc
mov
dec
inc
mov
dec
add
xorb
sarl
lods
out
sub
ss
test
cli
in
mov
xchg
sbbl
fstpl
pop
cmp
pop
lret
adc
push
inc
push
cmpsl
adc
or
mov
mov
mov
mov
out
mov
stos
test
fwait
decl
pop
pop
xor
inc
add
rcll
push
xchg
and
enter
mov
cli
push
lods
inc
push
and
lea
cmp
test
push
xor
pop
aas
jl
push
rcrl
scas
jecxz
mov
loope
movsl
insb
mov
inc
jmp
pop
or
iret
test
leave
sub
iret
xorl
sbb
xor
jno
mov
lea
push
sub
jnp
sub
das
cwtl
pop
in
into
dec
sbb
mov
arpl
fdivr
inc
and
pusha
cmp
call
adc
lock
fmuls
lret
cmp
push
int3
aas
ss
push
flds
inc
sub
fwait
negb
into
pop
mov
aad
fnstsw
cmp
add
scas
nop
das
icebp
fidivs
pop
add
mov
jmp
dec
inc
cwtl
mov
fistpll
stos
daa
das
cwtl
je
loope
push
dec
cs
xchg
mov
sahf
add
or
in
jbe
addr16
dec
jl
sub
pop
sbb
fistl
push
sahf
mov
adc
xor
pusha
insl
aas
sbb
scas
aas
push
add
xchg
mov
mov
icebp
cmpl
out
mov
mov
test
sub
cmp
fistpl
imul
dec
repz
rorb
insl
add
int3
imul
cltd
add
loope
inc
sbb
int3
or
sbb
push
mov
mov
mov
adc
cmp
and
fiaddl
jp
int
or
mov
and
push
or
in
cwtl
pop
pop
jp
sub
jg
insb
int
push
nop
dec
addr16
adc
jns
cmp
pop
addr16
or
mov
ret
adc
sti
and
jl
adc
adc
pop
sbb
fcoms
outsl
pushf
jbe
repz
fstpt
movsb
pop
or
xor
mov
mov
loopne
jne
je
jle
xor
fs
cli
mov
dec
mov
mov
inc
and
sbb
dec
cli
or
in
pop
mov
mov
iret
pop
sbb
mov
dec
mov
mov
adc
and
mov
addr16
lock
leave
mov
cltd
fildll
shll
stos
cwtl
test
call
stc
sbb
lret
sbb
into
ret
les
out
push
fstpt
fdivrl
xchg
mov
jp
cs
addr16
aam
cmp
movsb
and
mov
inc
sbb
xor
xorps
jo
dec
mov
jno
shl
mov
mov
mov
cwtl
je
mov
mov
inc
jnp
cmp
jp
repnz
pop
sbb
lret
push
movsl
sbb
lds
ficompl
addr16
cli
xor
pop
mov
dec
les
and
inc
dec
iret
pop
sbb
xchg
cmpsl
cmpsl
push
push
mov
shll
int3
adc
aam
bound
andl
push
int3
mov
andl
inc
cltd
aaa
fs
add
pop
cmp
test
enter
call
xchg
jb
lcall
mov
sbb
aam
and
mov
bound
push
jg
fwait
insl
gs
xchg
sahf
jb
add
or
push
push
bound
jb
test
mov
jle
fwait
cmp
mov
rcrl
cmp
and
inc
push
fcomps
shlb
push
mov
cmp
fwait
out
cmp
popf
inc
push
cmpsb
dec
pop
test
cmp
mov
inc
and
and
and
pop
repnz
xchg
xchg
xchg
adc
in
fcoml
inc
addb
inc
repz
notl
enter
rcrb
xor
mov
sbb
sbb
xchg
sub
sbb
iret
push
rcll
adcb
sbb
jle
adc
xor
or
clc
xchg
cld
jmp
mov
adc
popa
xchg
in
in
xchg
aaa
call
and
repz
cmpsl
xlat
imul
pop
cwtl
enter
clc
ret
push
movsb
fists
cmp
fbld
aaa
pop
inc
aam
push
bound
shrl
dec
imul
das
inc
mov
mov
jae
pop
aad
les
xchg
jle
jae
push
cli
ret
and
mov
push
or
adc
push
mov
rol
jmp
push
inc
pop
xor
xor
or
mov
sbb
sti
rcrl
and
push
inc
mov
insb
rorl
ret
lcall
mov
cmp
mov
add
leave
cli
bound
xor
dec
loopne
imul
dec
mov
dec
sbb
mov
push
inc
hlt
xchg
add
or
dec
pop
addr16
xor
push
cmp
xor
xor
rcrl
pop
std
neg
ret
push
sbb
mov
in
pop
sbb
stos
push
pop
inc
testl
dec
inc
mov
add
int3
sbbb
ficoml
dec
lods
xlat
outsb
adc
repnz
jb
cmp
mov
pop
cmp
stos
lods
and
push
rcll
mov
loope
sbb
mov
mull
pop
lret
or
cld
mov
and
add
test
jp
mov
jns
cltd
or
divl
mov
cli
shrl
sar
in
cmp
sti
add
add
lea
sbb
scas
push
mov
enter
jge
cmpsb
and
pop
in
imul
sbb
hlt
popf
mov
cmp
mov
and
cmp
and
icebp
mov
adc
pop
negb
shrl
call
jne
xchg
testl
fidivrs
mov
enter
pop
inc
jne
adc
inc
test
cld
shlb
sub
mov
mov
dec
cmpsl
hlt
enter
filds
push
fisttpl
mov
add
and
stos
pop
push
or
sbb
arpl
xlat
jno
sbb
push
icebp
ret
add
mov
xlat
leave
lret
nop
bound
lret
ja
add
ror
lea
mov
test
lods
sahf
imul
fwait
push
mov
fnstcw
movsl
adc
fwait
in
imul
sti
lea
sti
ss
push
sub
pop
inc
cltd
or
pop
pop
stos
adc
or
lcall
int3
push
imul
jp
jb
jg
ret
sub
std
mov
cmp
ja
in
arpl
aam
xor
jo
std
mov
test
aas
ja
fadds
cmpsb
fsubl
outsb
jge
inc
or
xor
and
out
scas
imul
inc
push
hlt
popf
bound
jae
pushf
pop
push
shlb
mov
popf
movlps
sub
imul
cmc
into
xchg
popa
or
repz
les
and
lods
outsb
pop
inc
and
ljmp
mov
pop
sarl
pop
stc
mov
and
cltd
adc
outsl
hlt
inc
fmull
push
ja
mov
daa
sbb
add
filds
sub
sbb
cs
ret
jg
sahf
call
js
sarl
cld
ret
mov
hlt
add
cmpb
insb
movsb
ret
in
dec
test
mov
leave
mov
jp
cmp
cli
test
mov
pop
mov
sbb
rol
repnz
xor
mov
xor
xchg
cwtl
and
xor
aam
outsb
icebp
pop
stos
filds
mov
cmp
js
jbe,pt
push
cmpsl
mov
addr16
ja
pop
test
mov
xchg
cmc
ret
jmp
ljmp
xor
lock
call
xchg
into
rorb
xlat
daa
jg
cli
jp
mov
aaa
jle
mov
std
add
mov
into
add
popf
push
fsubr
inc
enter
nop
scas
xchg
lods
daa
loope
or
icebp
fimull
movsl
sbb
cmpsl
aas
add
sahf
jecxz
xchg
mov
dec
in
adc
and
call
sub
cmp
mov
iret
mov
leave
adc
xchg
mov
sub
mov
inc
add
iret
pop
in
jg
sbb
cmp
inc
loope
fmull
jge
xor
inc
loope
mov
aas
int
mov
mov
sar
push
add
aas
mov
clc
mov
test
aaa
or
stc
inc
cld
adc
loopne
push
xchg
mov
cmpsl
lahf
or
push
loope
test
dec
in
rcr
arpl
sub
lods
jle
pop
and
pop
je
pop
sub
hlt
lcall
sahf
int3
mov
fwait
inc
pop
call
jno
cs
cmp
jle
sbb
push
psubq
pop
loopne
aas
cmp
sbb
inc
outsl
lods
or
jp
sahf
loope
mov
push
in
shll
fwait
loope
and
push
shlb
mov
call
pop
jl
cwtl
xlat
inc
sbb
fmull
cmp
popa
int3
pop
mov
mov
loop
sti
rcl
dec
or
repnz
cmp
test
das
pop
dec
xchg
adc
pop
movsb
push
divb
out
xor
adc
mov
fwait
out
mov
pop
aam
mov
cli
out
mov
out
mov
leave
hlt
es
fmulp
je
push
inc
add
repz
dec
pop
or
sub
insb
insb
sub
adc
jne
sbb
lret
push
repnz
adc
icebp
loopne
out
lret
scas
loop
js
xor
xchg
arpl
daa
sub
dec
lods
mov
jns
mov
in
mov
mov
lods
cwtl
xchg
jnp
or
imul
xchg
adc
sub
stos
sbb
or
sti
mov
nop
sub
aad
cmpl
je
adc
mov
pop
xchg
mov
loopne
sbb
pusha
mov
jmp
or
inc
xchg
mov
sub
mov
enter
jb
inc
adc
and
xor
fistpll
adc
mov
inc
lcall
das
mov
lcall
aad
sbb
sub
pop
mov
push
out
add
ret
shl
int3
scas
dec
mov
lahf
jge
int
aas
adc
xchg
mov
pop
push
pushf
sub
out
int3
xchg
add
cmp
cltd
ret
pop
add
cs
fisubs
jmp
stos
jmp
cmpsl
ljmp
sahf
je
dec
jnp
jp
insb
jb
mov
push
repz
stos
mov
mov
add
sarl
push
sbb
xor
mov
fidivrs
and
cmp
mov
pop
cmp
xchg
lret
test
and
mov
inc
dec
repz
jle
cmp
cmpsb
add
fmuls
add
mov
xor
pop
push
mov
sbbb
push
cmp
outsb
ret
mov
icebp
xor
push
movsb
pop
jle
adc
inc
lret
cmc
jp
ret
lods
stc
jae
push
pop
repnz
push
test
inc
in
idivb
rcll
jae
mov
lret
sub
fmull
mov
sbb
cmp
scas
xor
mov
xor
nop
pop
ret
lock
pop
jno
rcll
bound
cld
rclb
xchg
jno
cld
xchg
adc
leave
ja
cltd
sbb
and
pop
cld
cwtl
ljmp
add
or
and
and
sti
negb
ja
aad
adc
add
mov
repz
push
or
dec
loope
insl
cmp
add
mov
sbb
adc
push
inc
jno
push
call
sub
mov
mov
aam
add
fisubl
and
and
lods
xlat
fdivl
jge
add
lahf
nop
cwtl
xor
loopne
jp
jbe
pop
into
xchg
popa
fdiv
outsb
rcl
xor
cmp
jne
jns
pop
aaa
push
mov
push
mov
inc
pop
jp
xchg
aaa
in
inc
jge
loope
xor
scas
sub
mov
sbb
inc
cmpsb
jb
adc
jne
push
mov
mov
jle
lcall
jmp
int3
mov
inc
jns
popa
jno
jno
pop
jle
cmc
xchg
ror
cwtl
xor
fcompl
addr16
fdivrl
shrb
jne
xor
insb
subl
mov
pop
daa
dec
add
std
testl
xchg
fidivl
mov
dec
nop
std
mov
jg
jle
lret
pop
adc
lret
dec
mov
gs
cmpb
fcomps
add
sub
adc
andl
mov
mov
cmc
ds
sbb
and
gs
insb
xstore-rng
cmpsl
ret
add
rol
sub
mov
inc
dec
out
or
insl
loopne
push
cmp
test
clc
pop
sub
out
inc
sti
repnz
in
in
test
sub
shrl
xchg
cmp
ror
fdivl
pop
dec
jge
cmp
int3
add
pop
add
fs
cli
add
pop
mov
imul
ja
pop
jmp
jmp
mov
xor
push
push
adc
in
stos
xor
xor
jge
test
loopne
cltd
mov
jg
and
dec
pop
inc
pop
cmpsl
lock
cmp
je
movsb
pop
push
dec
aad
lahf
dec
in
mov
or
add
push
stos
out
jge
insb
mov
cmpsb
xor
insb
jns
popf
mov
sub
lods
and
push
shlb
sub
in
cmpsb
rcr
daa
jno
mov
into
cmp
out
ss
add
fcoms
mov
push
rcrb
movsb
inc
loopne
adc
pop
ds
sti
lea
xor
or
mov
negb
das
jle
popf
cmp
sub
loopne
popa
sub
pop
sub
xchg
cmp
pop
xchg
sbb
repz
gs
out
pop
xorps
cmp
dec
cmp
es
popa
xchg
jno
mov
xchg
incl
jg
pop
lods
xchg
cmc
imul
outsl
push
stc
xor
lret
cwtl
sub
movsl
sbb
mov
lea
stos
push
dec
inc
aas
roll
mov
data16
push
scas
enter
mov
push
inc
stc
jge
sub
test
push
xor
inc
mov
je
rolb
mov
getsec
insl
mov
dec
dec
jle
mov
pop
pushf
mulb
cmp
xor
in
lods
inc
inc
dec
mov
mov
sbbb
mov
dec
dec
std
stos
mov
adc
enter
into
das
fcmovb
and
inc
cmpsl
fldt
mov
fmul
push
cmp
inc
pop
pop
imul
loop
cmp
lock
dec
insl
cmp
shl
outsl
xor
push
add
inc
cmp
cmp
xchg
inc
dec
gs
mov
popf
jo
pop
mov
cmp
leave
pushf
adc
inc
pusha
daa
mov
addr16
xchg
dec
push
cmp
imul
lds
inc
out
xor
frstor
outsb
notl
into
xchg
filds
sub
push
pusha
sub
mov
xor
sahf
push
jecxz
in
fcom
out
divb
aaa
std
add
push
xor
les
enter
or
cmc
hlt
xchg
nop
stos
psubsw
mov
push
dec
ss
cmp
fisubs
pop
sbb
lea
push
cmp
popa
cmp
inc
cmc
mov
xchg
aad
mov
xlat
mov
cmp
lods
ss
clc
jmp
add
sahf
push
jp
es
fwait
adc
xchg
dec
lods
cli
fisubrs
inc
fdivrs
mov
lcall
add
and
shll
dec
aam
iret
imul
rcrb
add
arpl
js
jo
xor
ja
xor
sub
jns
outsl
leave
add
pop
add
mov
xchg
sbb
pop
or
or
gs
arpl
xchg
fnstsw
ss
push
ja
add
adc
psllw
jecxz
pop
pop
push
sbb
jge
sub
or
jns
cli
sahf
fsubs
out
cmp
das
mov
jo
xchg
jle
ja
cs
dec
stos
je
pop
lahf
mov
mov
mov
in
dec
xor
sbb
js
sbb
pop
aaa
cli
jmp
xchg
push
mov
sbb
roll
dec
or
xor
mov
xchg
pop
sub
fldcw
rclb
cwtl
mov
scas
rcrb
push
incb
repnz
fstl
mov
cld
xchg
movsl
cmp
sub
sbb
cli
and
fsubrl
iret
jb
lods
sub
call
pusha
in
jae
xor
fwait
jb
aam
test
ja
addr16
sub
fistpl
sub
mov
push
mov
out
jmp
cs
rol
adcb
cli
imul
mov
scas
mov
and
ja
aas
push
sbb
and
pop
repz
pusha
hlt
in
sub
icebp
mov
push
push
mov
fdivrl
adc
lret
adc
mov
movsl
shlb
inc
insl
push
loope
out
shlb
jns
push
sbb
sbb
hlt
cltd
cs
or
out
xchg
insl
addl
out
mov
sub
pop
or
push
inc
cmpsb
dec
lret
out
idivl
in
out
push
or
dec
xorb
lahf
push
ret
lret
fcomps
sub
inc
rorl
in
lods
cli
insl
push
push
adc
xlat
jb
sub
fsub
rcrb
out
int3
mov
add
push
cmp
inc
icebp
mov
jmp
mov
decl
jp
leave
hlt
mov
dec
shl
lock
divl
loop
outsl
mov
hlt
push
dec
mov
pushf
adc
jnp
pop
decb
lahf
mov
xchg
xor
std
pmullw
scas
push
nop
adc
or
lea
shll
mov
lods
xchg
or
pushf
cmp
ljmp
add
adc
mov
imul
xchg
sti
pushl
in
dec
xchg
adc
lret
cld
push
lret
inc
cmpsb
test
insb
mov
icebp
mov
inc
scas
sbb
pop
outsb
sub
js
shl
jg
xchg
push
daa
leave
stc
cmp
lret
stc
aaa
jne
inc
pop
call
fbstp
inc
xchg
cli
icebp
incb
shrl
jge
dec
and
fildl
fstp
sub
adcl
mov
stc
xor
mov
vpunpckhbw
mov
scas
inc
push
test
out
sub
leave
ljmp
cwtl
outsl
lds
lcall
inc
cmp
pop
pop
sub
inc
enter
fs
lods
jl
xchg
mov
mov
mov
lcall
dec
and
cmc
add
cmp
adc
dec
ja
adc
inc
cmp
sub
out
cli
xor
fisttpll
inc
and
and
stos
mov
cmc
add
mov
mov
pop
test
idivl
cltd
mov
cli
outsl
and
sub
ljmp
movsl
xor
repnz
ficoml
leave
inc
xor
inc
test
inc
adc
push
rorb
test
xchg
sub
clc
and
pushf
std
loope
push
mov
addr16
mov
ret
test
fists
testl
mov
mov
jno
jmp
insl
add
cmp
nop
js
dec
movsl
mov
pop
ret
push
mov
inc
or
cmp
adc
jge
out
gs
jle
mov
popl
jnp
add
movsb
or
dec
stc
push
inc
aam
scas
ret
cmp
jp
sub
out
mov
pop
les
sbb
push
cmp
pushf
addr16
aad
mov
in
lcall
or
pop
ljmp
jae
stc
sti
mov
lods
jecxz
and
mov
lock
das
into
mov
add
jo
xor
mov
pop
je
or
orl
mov
or
dec
push
pop
sub
and
and
insb
jmp
inc
add
cwtl
les
xchg
push
jo,pn
js
jp
out
adc
or
pop
out
mov
stc
cli
pop
pushf
jo
pop
sbb
add
and
incl
push
loope
xchg
popf
lock
in
push
ds
pusha
xchg
xchg
dec
dec
inc
popl
movsb
hlt
jne
out
xchg
jno
inc
bound
test
jbe
pop
int3
inc
mov
ficomps
movsb
out
fisttpl
pop
and
adc
or
sub
out
sti
xor
scas
xchg
push
hlt
imul
mov
mov
pusha
popa
pop
adc
cltd
pop
std
dec
xchg
pop
cmp
xchg
shlb
popa
movsb
aam
rolb
jmp
push
aam
leave
inc
jecxz
mov
in
jnp
cmpsb
ljmp
push
mov
mov
sti
call
jg
ret
sbb
pop
mov
dec
xor
int3
xchg
imul
fidivrs
outsl
jne
inc
int3
jb
adc
aam
dec
lret
je
sub
outsl
cwtl
xchg
dec
and
mov
sbbb
into
push
push
lods
cwtl
mov
adc
lret
push
outsb
sub
mov
xchg
dec
mov
popa
cmp
dec
lcall
dec
or
add
adc
fcomps
push
aas
mov
ja
jns
cmp
lret
out
sbbl
aam
test
inc
dec
pop
xchg
add
mov
es
sahf
mov
xor
jbe
lret
push
cmpsb
inc
dec
xor
pop
pushf
inc
cmpsl
push
push
lods
popa
mov
adc
dec
sub
sub
das
xchg
cmp
int
sub
jo
xor
and
mov
sbb
pop
xchg
repz
repz
roll
xchg
xchg
ret
es
rcrb
dec
xor
lahf
mov
cli
mov
lahf
daa
lret
push
scas
daa
pop
push
jo
cltd
arpl
xor
repnz
movsb
je
stos
adc
mov
clc
repnz
adc
dec
and
xchg
mov
ret
dec
pop
add
xchg
test
mov
adc
test
popf
adc
dec
test
cmp
pop
dec
aaa
rcrb
test
cli
fdiv
nop
pop
test
addr16
lahf
icebp
mov
and
test
and
sbb
cltd
jns
pop
sbb
sti
and
xorb
cwtl
xor
pop
loopne
pop
mov
repnz
or
sbb
and
fdivs
mov
sub
stos
xor
shlb
repnz
mov
and
pop
lock
pop
xchg
fs
inc
call
mov
inc
jno
int
jae
lock
lea
mov
in
fadds
lcall
cld
jge
sbb
push
je
mov
xchg
aam
out
lahf
xchg
lahf
jns
sbb
aam
imul
xor
lds
push
test
cmp
je
mov
fidivl
into
call
push
mov
std
sti
es
insl
addl
fmulp
mov
das
mov
push
pop
push
hlt
mov
xchg
repz
inc
inc
xchg
cmp
cmc
sub
into
or
popf
pop
jb
fwait
shl
aaa
jns
xchg
push
les
in
add
adc
jae
insb
sahf
test
inc
push
jmp
or
pop
imul
leave
cltd
add
xlat
pop
insl
or
adc
cmpsb
iret
xchg
adc
jne
ljmp
std
ror
out
pop
jo
sti
nop
add
shl
hlt
or
fcomp
pop
jl
mov
notb
shrl
xchg
sub
cmp
jg
jo
daa
jbe
jne
push
enter
imul
dec
mov
cs
inc
jns
xchg
movsb
lods
mov
out
js
das
lret
cwtl
adc
pop
inc
in
jmp
mov
movq
sbb
aad
xor
sbb
xchg
jecxz
popf
cmc
adc
mov
inc
cld
cmp
adc
sahf
repz
movsl
dec
lods
ss
sub
jl
and
outsl
jmp
rcll
je
adc
in
dec
shll
dec
fwait
iret
adc
mov
imul
inc
inc
pop
add
add
jg
js
jnp
pop
or
out
inc
mov
ds
cmc
pop
ficomps
pop
fstl
ret
cwtl
lret
loopw,pt
ss
jl
add
xlat
inc
ss
icebp
enter
aaa
inc
int
adc
movsb
push
out
mov
sub
repnz
out
push
inc
fcomp
xchg
mov
fwait
aad
dec
das
sahf
outsl
or
add
jecxz
out
jmp
push
in
inc
push
jle
push
push
int
mov
add
adc
lret
in
cmpsb
jecxz
scas
add
add
inc
push
mov
insb
in
adc
out
xlat
mov
aam
mov
sahf
adc
rcrb
push
cmp
jne
cmc
xlat
fxtract
cmp
fists
aaa
add
test
notb
mov
or
or
lock
mov
add
and
push
inc
push
outsl
sub
add
mov
mov
cmp
lcall
lods
insb
mov
and
cmp
push
pop
mov
inc
xor
xchg
and
xchg
and
shll
out
scas
xor
inc
adc
out
test
js
xor
mov
mov
inc
adc
mov
cmpsl
pop
cld
fsubr
stos
jo
lcall
and
aad
in
stos
nop
dec
push
mov
rcll
inc
xor
jle
pop
jne
repz
xchg
jmp
pop
xor
cmp
insl
std
mov
or
adc
fwait
repnz
push
cmp
cmpsl
ja
pushf
in
loop
lods
fimull
dec
xor
aaa
rorb
outsb
push
sub
push
inc
add
sahf
sub
sub
and
mov
push
xor
pop
aam
add
jmp
mov
loopne
add
sbb
inc
repz
stos
mov
lea
fstpt
adc
into
jbe
arpl
mov
push
test
or
out
mov
adc
or
dec
fs
sbbb
xchg
jo
roll
add
in
out
aas
lock
mov
pop
xchg
mov
add
shlb
push
daa
ss
mov
dec
test
push
movsb
inc
inc
cld
subb
in
shlb
jge
xor
int
mov
pop
xor
data16
dec
jp
rcrl
mov
xchg
mov
xor
out
inc
es
test
out
mov
add
xlat
or
cmp
cmp
lds
lods
addl
sbb
mov
cmp
clc
imul
jo
inc
test
jmp
dec
notb
xacquire
in
sahf
fistpll
cmp
out
popf
jp
out
adc
or
mov
in
push
repz
in
jne
rolb
out
arpl
fistpll
jb
and
mov
push
lret
xor
mov
popf
loop
pop
jmp
hlt
dec
push
mov
push
lods
or
aam
cmp
es
aaa
add
jae
xor
popa
add
shll
aad
cmp
xor
push
mov
add
nop
pop
dec
incl
xlat
push
repnz
cwtl
inc
rcrl
fwait
pop
xchg
jns
cmp
stc
mov
lret
rcll
sub
std
push
out
lcall
iret
mov
int
call
pop
mov
lret
pop
dec
lock
fidivs
in
scas
inc
outsb
adc
enter
packsswb
fstps
or
and
mov
shlb
add
addr16
pop
ret
push
adc
push
mov
xchg
repz
clc
and
outsb
dec
das
pusha
lcall
lcall
mov
cli
mov
push
mov
adc
jbe
int
sbb
xchg
cmpsb
incl
pop
gs
mov
js
sbb
imul
out
ficomps
xchg
fimuls
sbb
cmp
cmp
mov
or
pop
sub
cmc
add
pop
aaa
pop
mov
fisubrl
repnz
mov
jae
push
push
cmp
aad
int
daa
ss
fisubs
dec
aas
outsl
pop
orl
cmc
adcb
cltd
push
cmpb
mov
cwtl
xor
jmp
fcomp
and
xchg
mov
xor
pop
jae
sub
lret
jp
sub
push
jne
push
jns
daa
mov
pop
es
or
movsl
mov
bound
mov
sbb
fcompl
out
pop
mov
add
jmp
pop
add
leave
js
sbb
xchg
outsl
fldcw
mov
out
xchg
mov
push
into
xlat
dec
pop
int
fbld
enter
and
test
mov
or
and
ret
arpl
mov
scas
out
outsl
das
push
fstpl
sub
rcll
aad
pop
ficomps
loopne
call
mov
adc
push
cmp
xchg
inc
xor
out
ds
sbb
pushf
sar
pop
loope
sahf
adcl
test
add
lea
adc
mov
inc
lcall
adc
imul
cwtl
and
in
pushf
and
mov
decl
and
sbb
mov
jae
lcall
xchg
jge
andb
loope
jge
jg
cmp
out
push
xchg
jo
xorl
icebp
jmp
mov
xchg
mov
adc
fidivs
xor
cmp
arpl
xchg
int3
sub
fs
stc
or
cmpsl
scas
dec
fdivs
push
sbb
sbb
push
sbbb
adc
xor
mov
add
sbb
lret
mov
xchg
push
icebp
mov
adc
push
inc
add
dec
iret
out
cmp
rorl
out
add
lret
sub
jecxz
sub
push
scas
sbb
xor
mov
stc
push
movsl
insl
in
cvtdq2ps
pop
sub
cltd
ret
xor
and
sbb
in
inc
vpsllw
dec
mov
aaa
dec
mov
sbb
mov
mov
dec
test
test
push
add
loop
push
sbb
sahf
jo
xor
adc
cmp
add
mov
std
loopne
subb
fwait
jp
cwtl
adc
mov
mov
sub
sbb
pop
dec
inc
stos
scas
xor
adc
jns
inc
dec
mov
push
jmp
enter
iret
sub
mov
lret
nop
lcall
loope
inc
pop
cwtl
cwtl
aad
sub
les
cmp
or
push
or
aam
push
daa
stos
test
dec
loop
mov
jbe
ficomps
jb
mov
push
int3
cmpsb
faddl
xor
mov
fstps
addr16
add
mov
scas
jmp
mov
enter
imul
xor
jae
cli
mov
mov
cmpsb
mov
or
push
lcall
pop
jecxz
mov
cmp
push
jle
das
add
imul
jne
js
sbb
dec
ss
push
lock
push
orb
sub
cmp
inc
lock
nop
pop
pop
fadd
xor
stos
add
mov
push
adc
or
add
aad
test
subl
fwait
cmc
inc
hlt
lea
mov
sbb
imul
mov
les
push
sarb
rcll
xchg
divl
and
lea
cmp
dec
lock
adc
cmp
sahf
outsl
mov
xchg
inc
pop
push
daa
adc
lds
pop
bnd
out
lock
cmp
adc
int3
push
aam
js
in
add
pop
cli
mov
pop
add
aaa
jnp
mov
mov
aad
adc
pop
das
mov
jns
xchg
add
dec
out
adc
ds
mov
mov
mov
xchg
jecxz
pop
jns
adc
sbb
pop
mov
outsl
xchg
sub
mov
push
cs
out
fistl
out
cmp
outsb
repnz
pop
das
push
dec
scas
push
cli
stos
scas
cs
or
nop
jp
dec
mov
imul
pop
sbb
mov
insl
shll
les
sbb
xor
addr16
flds
or
pop
cmp
xor
jmp
loope
jl
mov
lods
dec
out
es
xchg
cltd
jmp
cli
into
ret
fxch
xchg
lods
push
xchg
push
insl
in
dec
mov
jns
xor
lods
and
xchg
loop
cltd
dec
sub
enter
sti
mov
jno
add
and
jns
push
js
mov
popf
and
push
inc
cli
pop
mov
add
pop
cltd
cmc
outsb
loope
rolb
out
sbb
test
xchg
and
stos
pop
adc
adc
sub
jp
fst
or
adc
out
test
xor
xor
xor
mov
sbb
ljmp
ret
push
or
fistps
lods
mov
xchg
sub
cmp
stc
inc
ret
push
sti
jbe
or
ficoml
fildl
xor
jnp
jge
mov
dec
mov
mov
stos
xchg
ja
xchg
push
cli
xchg
mov
push
insb
stos
movsl
sbbl
stc
adc
aaa
mov
cmpsl
aas
cmp
push
push
sub
insb
mov
jb
push
sbb
xor
mov
pop
adc
xchg
adc
cmp
loop
push
jge
xor
mov
jne
in
mov
and
pop
daa
pusha
cs
xchg
rorl
xor
jecxz
mov
push
aam
into
pop
daa
push
dec
dec
int3
into
mov
aad
cmpsb
cmp
lret
stos
push
push
pop
add
mov
lds
enter
daa
scas
mov
sbb
jne
sub
loopne
sar
int3
add
loopne
pop
fldt
popa
orb
gs
pop
mov
nop
dec
push
shl
lret
jno
jmp
dec
repnz
mov
cltd
or
aad
push
sbb
repz
pop
je
xor
lods
jl
mov
xor
ljmp
mov
jecxz
in
mov
mov
mov
mov
cmp
repnz
fbld
add
outsb
sbb
fninit
jbe
add
rcll
jp
xchg
test
js
inc
fdivrl
fists
sti
xchg
add
mov
jb
and
out
fucom
jne
push
cmc
ds
andl
pop
scas
jp
lcall
into
test
inc
xchg
icebp
pushf
mov
outsl
push
push
aam
ss
imul
insl
js
push
push
gs
xor
setg
imul
cmpsl
or
stc
mov
cmc
adc
mov
movsl
dec
cmc
lods
lock
iret
jge
sbb
mov
mov
pop
mov
or
xor
push
dec
adc
mov
xor
mov
stc
repz
cli
sbb
ja
mov
ret
test
in
mov
xchg
enter
inc
jo
stos
jmp
test
stc
std
in
int3
or
mov
jg
fmuls
call
push
ds
jae
test
ljmp
mulb
add
xchg
fcoms
and
sub
aam
sub
lds
repz
push
icebp
loope
mov
fmuls
sbb
repz
add
std
daa
aaa
in
sub
xchg
xchg
enter
jl
dec
inc
aas
aam
pop
sbb
arpl
sti
mov
xchg
mov
add
dec
mov
fidivs
insl
lods
sub
cmp
loop
dec
jl
push
call
xlat
jmp
jno
xorl
int
sbb
push
lock
ret
push
adc
int3
pop
mov
out
scas
sbb
aas
push
aaa
dec
lret
push
sbb
and
inc
push
sbb
inc
xchg
inc
xchg
cwtl
jo
out
fcompl
fsubrs
cmp
test
add
cmc
add
pusha
inc
mov
jg
push
cli
pop
push
cmp
mov
in
cmpsb
sbb
int
add
dec
pushf
pop
sahf
imul
mov
rcr
push
scas
scas
pop
out
andl
lea
test
jne
mov
and
cmp
mov
mov
xor
icebp
cmp
int3
jae
imul
push
xor
sub
daa
lret
xchg
ss
or
lods
pop
cli
mov
arpl
mov
and
pop
es
or
hlt
xchg
aas
hlt
inc
mov
mov
mov
push
jnp
mov
pop
dec
dec
pop
das
jmp
stos
inc
call
cwtl
cs
arpl
jl
xchg
or
pop
jle
pop
push
adcb
pop
sar
push
mov
push
add
jne
xor
outsl
cli
adc
pushf
ret
jne
outsl
cmp
xchg
jo
jecxz
dec
pop
nop
pusha
cmp
push
jb
lcall
sub
and
jns
xchg
arpl
pop
mov
incb
fwait
sub
cmc
mov
push
mov
fwait
push
cmpsl
sub
jae
lret
adc
jo
pop
popa
sbb
out
sti
add
pop
jecxz
fs
dec
mov
jno
push
add
fdivrl
jge
pushf
xchg
mul
adc
cmp
inc
aaa
mov
and
mov
cmp
or
imul
add
push
xor
and
push
outsb
arpl
push
and
out
adc
sbb
xor
or
push
mov
pusha
jmp
es
scas
or
inc
or
xchg
push
ret
aas
repz
xchg
testl
push
mov
mov
jge
mov
sahf
lret
cs
or
push
inc
fwait
add
push
iret
xor
bound
mov
and
or
push
push
xchg
fsubrl
push
ret
jbe
add
mov
popa
jns
sub
insl
addb
imul
mov
jge
pop
mov
arpl
pushf
push
xor
dec
in
cmp
inc
sub
mov
mov
in
jge
add
jp
sar
fs
pop
notb
sub
inc
mov
mov
cs
cmp
ljmp
movb
je
mov
mov
test
jns
or
out
or
sarl
sbb
sbb
push
fnstsw
push
in
sbb
push
out
xchg
and
add
sub
sti
sbb
mov
and
ds
xor
dec
xchg
fiadds
int
or
xchg
adc
adc
bound
pop
pop
pop
test
cwtl
jns
add
pushf
les
mov
mov
pop
push
inc
inc
dec
sbb
jns
or
rorb
cltd
push
jmp
and
jns
pop
cmp
xchg
push
mov
outsl
movsb
cmp
ret
add
mov
rcrl
mov
cmc
jle
adc
xor
insl
cmp
cmp
sbb
sbb
arpl
cmp
test
xchg
pop
imul
cltd
mov
sbb
dec
call
adc
and
dec
push
xorb
pusha
lret
int3
inc
stos
subl
pop
mov
pop
and
mov
fsubp
mov
push
push
lods
and
push
das
xlat
pop
adc
lock
fldcw
fcmovb
jns
notl
fdivrs
mov
push
int
daa
loopne
outsl
icebp
dec
pop
pop
repnz
loope
and
add
add
pop
mov
notb
mov
cmp
mov
icebp
lock
lret
stos
jl,pt
pop
ss
in
lret
jae
roll
int
insb
dec
rol
fisttps
pop
movsl
push
jl
mov
xor
xor
aad
outsl
ja
rcr
push
insb
inc
cmp
aas
mov
or
mov
pushf
outsb
fldt
scas
rclb
loope
lods
jg
popa
aam
ds
jge
sti
test
add
pop
shrb
and
mov
sub
aad
cmp
dec
imul
stos
mov
stos
popf
into
ljmp
pushf
xchg
es
int3
das
sub
cmp
adc
lods
call
mov
leave
repz
mov
shll
pop
es
lea
and
aaa
dec
adc
movsb
push
cmp
inc
add
sub
inc
jl
mul
addb
in
push
mov
sbb
push
enter
push
fisttpl
sahf
dec
cmpsb
stos
cltd
ds
push
sbb
out
imul
xchg
jne
mov
imul
or
xor
cmpsb
js
dec
mov
out
push
pop
jp
sbb
mov
lods
pop
mov
rcll
adc
pop
in
sub
adc
cld
movsb
test
and
arpl
int
lcall
mov
xlat
sub
daa
mov
sub
mov
or
out
or
push
dec
push
sahf
xchg
lret
cmp
or
xchg
into
xor
test
cmp
jns
mov
shlb
or
out
mov
mov
mov
cmp
enter
pop
loopne
jg
and
in
xlat
fcmovne
inc
shrb
bound
jmp
inc
daa
jl
dec
lret
shrb
inc
push
aam
add
cmpsl
jle
mov
sub
jmp
bound
scas
test
jle
fwait
mov
xchg
lods
inc
pop
or
xchg
fwait
push
sub
ds
shll
sbb
das
lock
mov
aad
leave
dec
cld
jne
movsl
pop
fisttps
pop
sub
mov
out
daa
aas
mov
jo
mov
xchg
outsb
int3
inc
and
scas
cmp
lds
mov
popa
xor
or
cmp
cmpsl
lea
adc
arpl
popf
add
arpl
mov
shll
dec
mov
pop
jecxz
sti
push
inc
lcall
arpl
rclb
in
mov
sbb
loop
mov
push
fisubrs
inc
cmp
cld
jle
or
movl
lret
or
loopne
mov
mov
mov
bnd
lret
mov
add
inc
cltd
std
adc
dec
call
xor
or
jg
dec
xor
movsl
imul
mov
inc
bound
push
cld
push
mov
outsl
mov
sub
inc
push
int
adc
mov
test
outsb
sbb
scas
sbb
dec
aaa
fimull
and
xchg
mov
xchg
orl
xchg
enter
cmp
lock
or
adc
push
xchg
hlt
test
adc
mov
int
lds
inc
cmp
inc
rcrl
jb
push
js
adc
js
sub
xor
push
sarb
dec
cmp
pop
cmp
cmp
mov
imul
push
ja
pushf
movsb
pusha
loop
sub
lret
mov
pushf
lret
inc
push
add
sti
mov
fnstsw
les
test
xchg
popa
xchg
jo
inc
insl
imul
cmpl
in
push
jl
fbstp
test
xchg
shrl
dec
sub
sub
jo
movsl
bound
incl
loopne
push
mov
pop
jae
data16
jge
xor
sbb
popf
negb
call
pop
fisttpll
sti
inc
gs
adcb
imul
or
xchg
adc
mov
adc
dec
imul
imul
iret
push
por
xchg
scas
call
push
add
shl
xor
out
sahf
xor
insb
pusha
out
popf
stos
ljmp
mov
mov
mov
mov
or
xchg
clc
fucomp
in
aas
lret
icebp
hlt
or
add
mov
je
lods
lea
into
mov
stos
cld
add
aam
xchg
sub
mov
fwait
loop
cmp
jae
push
and
shll
mov
pop
mov
stc
push
sbb
add
mull
dec
inc
dec
out
jmp
imul
lods
sbb
cld
dec
xchg
inc
push
pushl
sub
fs
clc
cmp
and
pushf
out
les
mov
inc
inc
add
dec
pop
les
push
mov
mov
sub
mov
test
ljmp
testb
and
xchg
xchg
sub
cmp
xchg
mul
pop
cwtl
pop
or
sbb
pop
orl
in
jnp
bound
xor
or
cli
jmp
je
or
rcll
pop
ret
test
pop
xchg
mov
fwait
test
mov
mov
xchg
mov
cmpsb
fdivr
rclb
or
test
fdivl
sbb
test
lahf
outsb
add
hlt
nop
into
popf
sub
mov
pop
mov
dec
mov
fs
and
cmpsb
sahf
adc
and
xor
adc
push
dec
mov
adc
mov
sbb
mov
sbb
inc
out
ror
sub
sub
xchg
sbb
adc
mov
lcall
dec
frstor
bnd
in
insb
xchg
shl
mov
adc
mov
mov
add
pushf
pop
aad
adc
jae
imul
xor
lds
test
and
pop
or
lret
or
add
iret
cmp
pop
in
cmp
pusha
iret
push
xor
inc
das
or
push
pop
imul
imul
add
fists
push
pop
rol
or
xchg
mov
mov
sbb
cwtl
test
aam
ret
push
in
and
xchg
cmp
xchg
fisubl
fisttpl
fisubrl
int
fs
pop
aam
cmp
sbb
scas
jmp
jle
and
xor
xor
mov
popf
call
cmp
mov
int
pop
pop
xchg
sbbb
dec
mov
and
shrl
inc
jns
push
fdivrs
clc
adc
repz
fsts
add
mov
fsubrs
arpl
cli
pusha
out
stos
jne
test
lea
cmp
add
adc
sub
pop
lcall
inc
scas
test
rcll
or
insb
in
decb
cwtl
mov
and
and
pop
aaa
lods
sbb
sub
lret
and
fmull
ja
mov
cwtl
mov
pop
int
mov
dec
pop
sbb
adc
mov
cs
pop
mov
clc
push
jbe
xchg
repnz
push
mov
jnp
rclb
cmc
in
cmpsl
jo
mov
shll
cwtl
jmp
repnz
sbb
or
pop
or
add
shlb
sub
mov
aam
js
jae
lods
mov
add
add
aad
or
and
and
jns
jmp
mov
pop
fsubl
test
clc
xchg
mov
aad
adc
fidivrl
aad
and
inc
aas
cmpl
jns,pt
sub
inc
int
mov
rclb
rolb
mov
jg
jecxz
mov
jmp
rcrl
mov
test
test
enter
aad
push
js
sbb
fcoml
test
fimuls
scas
mov
push
xlat
lcall
add
inc
jnp
xor
rclb
cli
shl
aad
fsubp
imul
push
test
fs
dec
jge
dec
jmp
adc
or
pop
outsb
test
xor
pop
cmp
les
inc
jg
dec
push
sbb
mov
fs
fwait
mov
stos
test
mov
pop
cmp
es
and
jp
fildll
jmp
push
and
mov
xlat
pushf
in
or
lret
inc
inc
mov
scas
in
das
push
mov
pop
cmp
sbb
cmp
xorl
pusha
arpl
mov
loop
mov
xor
xlat
and
push
xchg
test
inc
fnstsw
jo
jns
insb
cs
jle
mov
inc
fwait
pop
jge
inc
in
add
xor
pop
xor
popf
outsb
add
add
sbb
and
jbe
clc
repnz
push
jne
js
cmp
mov
sahf
cmpsb
xchg
xchg
int3
mov
lcall
lret
add
mov
ficoml
mov
xchg
pop
inc
lods
dec
cmp
fdivrl
insl
insl
dec
in
inc
xor
ljmp
cmpsb
dec
dec
cmc
xchg
jg
mov
ficompl
xchg
pop
pop
call
sbb
jl
fwait
mov
adc
dec
ret
pop
std
out
and
mov
out
fld
jb
test
stos
jnp
mov
push
lea
mov
mov
lret
jae
ss
and
dec
ss
jecxz
lods
push
out
sahf
sbbl
in
lods
fiaddl
out
loope
pop
repz
sub
jp
ret
sbb
int3
mov
jnp
call
ret
cli
ret
jno
stos
dec
adc
stos
aam
or
push
push
xor
xchg
lcall
ljmp
stos
jae
int
jne
insb
mov
aad
and
inc
enter
pop
lea
pop
les
ljmp
sti
sub
dec
repz
mov
out
inc
stos
imul
add
push
jns
mov
pop
cltd
mov
jle
cld
lods
lea
pushf
push
loop
or
mov
int3
and
push
jo
dec
scas
mov
lock
cltd
fs
sbb
add
repnz
lahf
jo
sbb
sbbl
mov
sub
mov
and
shrb
jae
sub
sbb
adc
es
xchg
xor
push
aam
mov
cmp
std
jle
inc
inc
inc
loope
fisubs
aam
push
jp
ret
je
push
int
add
jecxz
jnp
mov
jmp
mov
jns
lret
mov
dec
jecxz
jbe
xor
jl
enter
loope
std
int3
lcall
pop
inc
pop
je
fs
jns
xor
mov
pop
outsl
pop
mov
push
xor
jp
fdivrs
movsl
out
ss
add
xchg
cmp
insb
cmpsl
cli
out
cmpsl
sbb
scas
dec
push
inc
imul
jb
mov
or
out
cmpsb
cmpsb
lods
jno
cld
aad
sahf
sti
adc
mov
jg
cltd
cmp
cltd
push
nop
sbb
daa
xchg
jb
or
mov
ret
sbb
mov
cld
and
fmull
pushf
cltd
insb
lcall
js
sub
test
insl
mov
je
out
rolb
fs
cmp
in
aaa
dec
add
inc
inc
lds
mov
sbb
out
leave
stos
push
and
addr16
lahf
outsl
add
imul
iret
push
jecxz
out
sub
jmp
and
push
jne
cmp
push
mov
push
mov
mov
loop
in
imul
mov
jp
mov
and
icebp
jno
test
jae
pop
cltd
inc
sub
fsubrs
mov
add
cmp
or
mov
rcrb
in
cmp
pushf
jb
vaddsubpd
add
andb
jg
inc
ja
lea
mov
push
push
int
add
sahf
ljmp
repz
fisttpll
cwtl
fmull
repnz
jg
je
and
jo
je
shll
test
dec
loope
adc
sbb
mov
subb
mov
or
repz
scas
mov
ss
pushf
jecxz
adc
movsl
or
mov
pop
cmp
lea
aam
pop
jg
xchg
popf
xchg
aad
cmc
mov
sbb
pop
icebp
cmpl
pop
dec
repnz
pop
pop
xchg
scas
pop
push
ret
and
mov
adc
mov
ror
movsl
sbb
mul
xchg
mov
movsb
or
jb
in
or
inc
pop
and
and
push
mov
loopne
or
sarl
xor
mov
adcb
xor
mov
mov
lods
jno
dec
pusha
int3
std
jl
out
push
fs
stos
mov
std
popa
jne
icebp
jb
jmp
imull
into
dec
inc
cmp
push
mov
sub
xor
jle
dec
jbe
pop
sar
stos
cmp
xor
sbb
aas
lock
sub
jnp
fstps
je
fs
xor
daa
repz
add
movsl
ljmp
movsb
bound
xchg
bts
out
sahf
bound
xchg
cmpb
sub
sub
test
aad
outsl
sbb
jmp
leave
and
xlat
repz
and
sub
sbb
lods
shr
aaa
mov
add
subb
leave
push
aaa
push
inc
dec
push
inc
and
out
cmp
mov
aad
mov
xchg
jno
outsl
sbb
sar
jbe
icebp
int3
iret
cmpsl
pop
inc
addr16
adc
or
pop
xchg
bound
sub
dec
lods
imull
test
pusha
cmp
pushf
shll
pop
shll
dec
fsts
nop
and
add
mov
cmp
pop
fisttps
mov
xor
cld
push
leave
test
out
loopne
sarl
mov
aad
add
mov
lock
mov
lret
add
sub
push
mov
nopl
add
lcall
out
imul
jbe
xor
mov
jmp
and
bound
mov
dec
mov
div
and
mov
aad
jmp
adc
pop
addr16
dec
sbb
mov
mov
out
andl
fs
pop
pop
pop
rcll
dec
mov
sub
jnp
mov
push
xchg
cmp
dec
imul
cmpsb
dec
jo
sub
push
inc
sbbb
push
dec
push
xchg
dec
pop
jbe
cmpsl
test
jae
cmp
dec
xor
adc
cmpsb
push
fiadds
sbb
pop
dec
pop
xchg
inc
sub
and
mov
sub
xor
imul
inc
aas
mov
mov
cmp
es
xchg
loopne
xor
jno
dec
or
dec
test
mov
movsl
testb
xchg
sahf
adc
fsts
sahf
mov
or
sub
push
or
arpl
popw
and
jmp
jg
add
scas
ret
pusha
imul
jns
adc
movsb
inc
and
push
or
or
lcall
inc
adc
into
ds
or
fidivrs
js
dec
jge
test
and
imul
mov
enter
negl
xchg
sub
xchg
sub
jp
or
sbb
pop
dec
divl
or
dec
sbb
cmp
xlat
lahf
dec
and
pop
sbb
mov
pusha
ljmp
sub
cmp
xor
neg
leave
shl
jae
arpl
adc
aas
mov
clc
fdivrs
mov
lods
xlat
lret
sbb
jmp
mov
hlt
mov
mov
loop
loope
lods
lret
xor
outsl
adc
mov
mov
or
pop
hlt
adc
or
or
xor
stc
xchg
sbb
adc
pop
mov
mov
mov
dec
push
out
jb
or
xchg
xlat
shll
inc
pop
inc
sub
and
stos
int
cmp
mov
inc
lret
xchg
xor
es
and
adc
mov
jmp
imul
adc
mov
sbb
push
adc
or
push
insl
clc
fs
fnsave
xchg
lods
ror
sub
inc
push
hlt
movsl
or
adc
outsb
imul
cltd
add
add
sub
jbe
stos
xchg
mov
jge
lds
in
xchg
cmp
arpl
pushf
mov
movsb
and
push
sbb
and
add
das
mov
out
jns
enter
xlat
js
idivl
sub
fldcw
std
inc
xor
lahf
xchg
mov
dec
orb
push
mov
lahf
and
stc
das
push
stc
in
jl
sbb
int3
mov
and
xor
js
movsb
mov
inc
and
lret
inc
push
outsb
xchg
jg
mov
adc
shr
xor
xchg
inc
mov
popf
test
cltd
add
xchg
sbb
mov
lds
xchg
xchg
push
push
mov
sub
or
call
mov
push
movsb
mov
pop
notb
dec
stos
jmp
sbb
xor
ss
sub
clc
int3
les
push
bound
push
nop
iret
out
lds
scas
ja
and
les
sub
sub
jle
or
cmpsb
cmpsl
lahf
lods
nop
daa
lods
iret
mov
ja
adc
es
add
cwtl
push
cmp
add
rclb
pop
or
lock
les
lock
std
mov
push
cmpsl
mov
jecxz
adcl
inc
mov
loop
or
xor
jg
push
arpl
jg
shufps
dec
push
jno
or
loop
outsb
lods
jne
test
std
cmpl
ret
xchg
xor
loope
lods
or
sub
dec
fwait
xchg
cmp
pop
inc
ret
mov
call
outsb
jno,pn
das
test
out
into
sub
pushw
ffreep
mov
test
mov
lret
cli
icebp
cmpsb
push
movsb
push
push
pop
loop
sub
insb
xchg
cmp
in
or
imul
and
add
cmpsb
imul
jo
jne
nop
xlat
nop
arpl
insb
ret
xorl
test
test
lret
std
lret
dec
mov
jp
addr16
jno
repz
rcll
outsb
mov
jl
in
aad
dec
ja
xchg
loopne
xor
rclb
ja
xlat
test
leave
aad
sbb
mov
cmp
add
les
jle
cli
xor
scas
fdivrs
or
inc
cmp
inc
imul
nop
sahf
and
dec
xor
cmpsl
jo
jmp
ror
push
cmp
xor
pop
mov
iret
test
pop
inc
shrl
cld
mov
pop
pop
xor
xor
pop
xchg
xchg
jbe
push
push
arpl
add
lea
jmp
imul
test
out
lret
das
cltd
pusha
ficoms
pop
icebp
stos
sub
imul
push
bound
cmp
and
out
movsb
fwait
sbb
mov
jecxz
xchg
sub
pop
movl
mov
sub
jmp
jbe
push
jns
loope
neg
mov
pop
sbb
mov
push
loope
adc
mov
movsl
call
ret
add
cwtl
clc
shll
loope
cmpsb
mov
dec
xor
mov
pop
or
sub
and
or
sub
ja
xchg
push
in
inc
rorl
ljmp
jge
leave
ds
movsb
add
pop
addr16
jb
in
inc
sbb
jmp
xlat
test
jbe
xchg
mov
sbb
fimull
dec
notb
mov
dec
insb
and
dec
fstpt
ficompl
insl
or
push
push
jns
addr16
add
mov
push
push
cs
mov
jns
mov
fiadds
sub
sahf
jo
mov
xlat
idivl
orl
imull
loopne
test
out
adc
xor
addr16
adc
xchg
jecxz
sub
add
pop
pop
hlt
idivl
or
and
dec
xlat
mov
lock
je
aas
mov
xor
cs
ror
out
mov
pop
lcall
fmuls
sub
cwtl
push
sbb
movsb
lret
inc
sahf
jnp
neg
add
pextrw
or
jmp
jg
jno
jmp
lds
add
mov
lahf
cli
adc
andb
pop
pop
jns
mov
nop
mov
cmpsb
loope
mov
mov
push
push
and
scas
and
jmp
dec
cmp
sahf
pushf
ds
scas
arpl
testl
mov
mov
mov
xor
aad
inc
add
pop
mov
mov
mov
push
mov
pop
adc
sub
stc
mov
lcall
jmp
jmp
arpl
add
push
sub
in
and
cmc
das
cmpsb
mov
dec
enter
or
mov
roll
mov
insl
inc
push
push
or
sbb
pop
shll
xchg
adc
sbb
jnp
scas
adc
adc
ljmp
call
mov
mov
pop
cs
das
sbb
lods
addr16
xor
es
pusha
rcrl
adc
mov
adc
pop
pusha
add
and
dec
arpl
adc
sbb
and
pop
hlt
jle
fwait
popf
push
aaa
xchg
dec
sub
pop
clc
jo
mov
imul
dec
cs
sbb
mov
push
movsl
and
or
push
xchg
cmp
pop
daa
rcrb
clc
addb
aas
scas
es
in
movsb
in
push
sbbl
imul
psubw
xchg
fdivp
fwait
jp
icebp
bound
rcll
lret
or
scas
sbb
xchg
mov
xchg
ds
jne
loope
and
stos
push
mov
mov
loop
add
sub
repz
mov
cld
ficoms
jns
movsl
les
inc
jbe
jecxz
loopne
pop
xor
loope
loopne
clc
aam
stos
lret
rorb
pop
mov
and
cmp
lcall
cmp
fistpll
shr
xchg
mov
int3
aas
xchg
inc
imul
cmp
mov
loop
pop
dec
xchg
cmp
enter
mov
pop
shlb
repz
xor
xchg
cmc
sub
les
sarl
je
jge
pop
cmp
push
cmp
cmp
push
push
inc
inc
xor
int
inc
xchg
lds
pop
jne
in
jae
lret
enter
or
xor
xchg
loope
mov
cli
or
iret
push
xchg
ret
cmp
fistpll
lcall
flds
sbb
sbb
clc
and
sbb
addr16
sarl
pop
shlb
test
je
cltd
notb
out
fcoml
sti
mov
popa
dec
mov
lcall
ja
in
cmp
jae
ss
pop
out
xor
lahf
adc
mov
push
mov
aam
cmp
xor
test
pop
ret
sbb
inc
adc
jb
pop
jmp
push
dec
std
mov
adc
pop
sbb
pop
jl
cmp
scas
aas
add
sar
inc
push
enter
jmp
jae,pn
orl
arpl
jb
inc
push
scas
pop
and
outsl
fstps
adc
jmp
shrd
shlb
insb
test
push
cmp
fsubs
push
or
pop
and
fidivs
cmpsl
pop
cld
lods
mov
push
or
pusha
cmc
cs
xchg
clc
xchg
sub
mov
push
push
dec
mov
adc
cmpsl
mov
or
and
push
push
lahf
dec
cmp
cmp
xor
or
lock
xor
mov
cs
out
and
das
adc
cmp
cmc
aad
mov
frstor
out
sti
dec
cmp
subb
jl
and
fisubs
inc
jnp
sub
push
xchg
add
lds
icebp
cmpsl
jno
push
sarl
loope
mov
lods
mov
test
int3
mov
je
jl
xor
dec
mov
cmpsb
xor
jg
int
lods
dec
fnstcw
or
rorl
fisubs
es
fcmovne
pop
add
ret
dec
arpl
dec
and
jecxz
mov
cmc
fwait
inc
pop
and
rorb
aam
jns
cmpsb
push
jecxz
ret
lret
je
mov
pop
fs
and
test
mov
loopnew
xchg
or
addr16
mov
add
adc
fdivs
std
mov
outsl
int3
jge
mov
and
pop
cmc
fwait
in
mov
adc
mov
jo
test
push
mov
and
jg
je
insb
and
or
lods
fs
mov
test
push
push
mov
cmpsl
mov
rol
imul
popf
adc
scas
lea
je
xchg
sub
mov
jl
jbe
cltd
pop
mov
or
fsts
lret
jno
cwtl
sbb
lods
and
mov
fisttpl
aas
jbe
mov
jecxz
jnp
xor
jle
sub
push
jle
jnp
dec
add
aam
mul
fld
adc
insb
xor
pop
les
in
es
mov
in
insb
mov
mov
loopne
or
jmp
lds
jp
cltd
adc
sti
scas
mov
js
in
cld
mov
xor
pop
or
aas
das
mov
xor
pop
push
mov
ret
int
inc
popl
pusha
push
test
repz
inc
xchg
fsubs
add
cmp
push
insl
int3
lcall
cmp
fs
mov
mov
jecxz
push
sbb
lret
je
mov
inc
jle
cmpsl
mov
into
int3
xlat
jne
movsl
xor
mov
outsb
and
lahf
sbb
xor
sahf
in
das
ljmp
add
test
test
mov
xlat
data16
test
or
lea
pop
sub
push
xchg
xchg
add
adc
mov
adc
add
addr16
lds
mov
ret
ret
repz
fstpl
mov
xchg
sub
stc
mov
stos
cmp
fs
jne
inc
inc
in
inc
jns
sub
xchg
add
loopne
mov
shl
aaa
adc
push
lret
pop
jbe
fwait
rsm
push
repz
add
push
repz
arpl
or
fcomip
mov
jnp,pn
int3
add
xor
jb
pop
movsl
jecxz
sbb
cmc
lock
mov
dec
adc
adc
xor
in
or
andl
mov
js
out
aas
sub
ja
mov
fildl
or
pop
mov
adc
lret
popf
mov
negl
mov
push
cwtl
xchg
bound
jl
shll
in
fucom
mov
push
repnz
adc
in
shl
xchg
push
sub
or
bound
and
push
out
sti
rcl
lea
loopne
xor
scas
sub
mov
and
add
in
xor
sub
xor
stos
int
and
and
push
loope
jmp
adc
movb
inc
imul
push
sub
pop
pop
xchg
repz
rol
mov
out
and
loop
pop
push
ja
pushfw
add
addr16
idivl
orl
jnp
lret
repz
lahf
lds
pop
cli
outsb
shll
jo
mov
hlt
sbb
mov
sbb
ud1
in
sbb
popl
pop
repz
pushf
mov
jbe
scas
push
cmc
fwait
xor
sahf
aaa
fs
in
mov
jecxz
into
into
test
out
stc
repz
mov
subb
daa
psraw
jge
xor
movsb
lock
out
pushf
xor
and
adc
add
popa
mov
loopne
mov
inc
push
cli
scas
and
mov
dec
inc
sub
mov
outsl
decl
dec
add
lds
add
mov
test
nop
mov
mov
dec
push
push
inc
jle
out
dec
outsl
or
imul
pop
pusha
gs
pop
adc
in
jmp
or
daa
xchg
or
shrb
insb
orb
push
sbb
and
add
mov
cltd
mov
fs
imul
mov
push
aaa
sub
inc
push
push
and
ds
ret
push
push
xchg
sub
mov
inc
mov
sub
pop
divb
scas
add
xlat
and
cs
cs
stc
lret
andl
dec
xor
cmp
pop
addr16
mov
fidivrs
xor
add
sub
xchg
jo
xchg
jo
subb
inc
lcall
pop
and
and
std
arpl
jmp
imul
inc
repnz
mov
divb
push
mov
add
mov
pushf
idivl
nop
inc
fwait
or
cmp
pop
out
jns
jae
and
mov
in
loope
mov
xchg
outsb
leave
mov
xor
idivl
sarb
add
add
sub
mov
add
add
mov
mov
adc
test
sbb
outsl
call
mov
sahf
in
lods
mov
push
pop
mov
rcll
add
mov
int
insb
fcomps
xchg
test
pop
ja
adc
jle
push
sbb
xchg
nop
lahf
negl
pusha
sbb
pop
add
mov
adc
loopne
icebp
inc
adc
mov
pop
mov
lods
shrb
mov
pop
inc
lahf
les
sub
sub
mov
sub
fwait
xchg
inc
xchg
out
mov
js
dec
stos
and
push
pop
sti
in
push
movsb
cld
cmp
in
sti
xor
and
xor
scas
orl
and
mov
jno
es
stos
lcall
in
xchg
mov
stos
jns
lods
ret
or
xchg
cmp
pop
jns
fildll
inc
in
and
cmp
mov
and
call
cmp
lea
add
dec
fisttpll
cmpsb
pop
scas
xchg
and
fiaddl
enter
cmpsb
adc
adc
pop
push
lods
adc
jae
scas
mov
push
pop
test
mov
fwait
mov
add
bound
pop
dec
je
mov
sub
pop
jmp
push
push
icebp
pop
popf
int3
cmp
sub
xor
mov
mov
adc
add
mov
lret
dec
lcall
in
arpl
push
mov
sbb
inc
pop
and
and
stos
fstpt
ljmp
addr16
fisttpl
push
addr16
xor
leave
in
cld
pop
sbb
inc
mov
lahf
mov
into
push
lret
push
pop
cli
inc
inc
das
out
cltd
scas
cwtl
sarb
jmp
xorb
ds
xor
cmc
cld
les
out
and
push
and
adc
shr
lods
adc
sub
nop
ret
test
mov
aaa
dec
mov
dec
pop
dec
xchg
and
or
inc
adc
ljmp
or
add
pop
les
daa
and
mov
push
lods
mov
cwtl
jno
cmp
dec
sbbb
xor
shll
daa
fwait
cli
pop
push
aam
ret
mov
out
cmp
xor
mov
movsl
lahf
jle
mov
jl
int3
sub
aam
add
xor
ret
dec
cmp
inc
add
cmp
pop
sbb
ret
sbbl
xchg
fldcw
out
pop
fadds
std
dec
sbb
cmpsb
idivl
jle
pusha
das
push
push
mov
shlb
dec
jno
popf
fs
subb
xor
ds
add
ja
cmp
and
xor
mov
je
cld
loop
adc
push
inc
cmp
mov
cmp
ret
cli
mov
cs
outsb
inc
mov
shrl
imul
idivb
imul
js
adc
in
mov
dec
pusha
cwtl
mov
cmp
mov
dec
aad
ja
lahf
jmp
mov
mov
cli
jecxz
xchg
pop
ss
sub
sbb
mov
jno
jnp
cmpsl
jns
or
xchg
movsl
lret
gs
lods
loopne
cmp
sub
push
gs
out
sbb
repnz
loopne
fidivs
mov
pop
pop
xchg
loope
xlat
and
pop
aaa
jne
andb
sbb
out
sbb
jne
add
dec
mov
sti
cmp
pop
in
cmpsl
jge
pop
or
ret
jl
pop
cmpl
cmp
cmpsl
stos
or
push
mov
movsl
in
fdivrl
test
mov
jbe
mov
or
xor
pop
or
push
mov
je
addr16
dec
inc
cli
sarb
subl
push
dec
mov
add
fimull
push
enter
lcall
mov
xchg
test
sbb
inc
jecxz
mov
call
aad
push
sti
fcomip
clc
or
dec
pop
mov
cs
or
and
std
sbb
out
mov
rorl
inc
ret
data16
ja
dec
sub
adc
cwtl
xlat
enter
xchg
mov
jb
xchg
lcall
pop
cmp
pop
cli
in
or
pop
js
lods
xor
cmp
and
std
les
jl
xor
shrl
lea
icebp
inc
loopne
and
xchg
sub
mov
fdivl
neg
ret
jnp
jns
in
jns
or
imul
push
dec
mov
and
inc
and
icebp
scas
aad
push
in
arpl
lret
mov
mov
lahf
cmpsl
fldl
xchg
push
mov
cmp
push
mov
pop
int
or
or
aad
test
cmp
fsts
aad
xlat
mov
imul
sub
inc
push
lcall
jo
push
in
and
out
out
inc
mov
shl
dec
xchg
in
jo
in
gs
cmc
out
ljmp
jmp
scas
leave
push
jno
call
dec
or
int
in
mov
outsl
cmp
xchg
push
into
sti
mov
jg
jmp
and
out
leave
cmp
cmp
shll
cmp
fistpl
shlb
test
pop
mov
xchg
adc
cs
mov
mov
adc
andb
aam
pusha
xchg
test
sarb
lret
cltd
sub
add
in
outsb
int3
or
shr
mov
dec
or
lret
ret
frstor
cli
mov
ret
stos
fdivr
sbb
in
cwtl
leave
inc
lea
inc
mov
xchg
icebp
es
mov
jg
iret
cld
jmp
push
nop
lds
cs
out
xor
inc
out
gs
daa
cmpsb
dec
push
fcoms
cli
fcomps
leave
mov
mov
inc
popa
adcb
dec
fwait
adc
cmp
xchg
jmp
sbb
fsubr
adc
dec
inc
nop
call
in
mov
adc
hlt
sbb
pop
call
aad
adc
mov
popf
loop
sbb
fmuls
mov
mov
adc
mov
hlt
in
dec
notb
inc
sbb
jle
mov
insb
jecxz
stc
sbb
into
hlt
xor
xlat
popf
movsl
pop
pop
jg
dec
fstl
pop
lock
cs
xchg
fdivs
cmp
or
imul
push
jnp
ss
sub
cmp
sbb
jmp
ds
xor
pop
xor
fwait
push
pop
jge
cmp
movl
jbe
and
mov
test
insb
clc
dec
imul
jb
lret
test
fwait
in
dec
inc
loope
mov
clc
movsl
jo
cmp
sbb
push
lock
push
mov
nop
lahf
icebp
jmp
std
mov
out
les
fsubrs
sub
jl
in
push
arpl
scas
mov
repnz
jo
sbb
dec
nop
add
push
repnz
int3
add
jae
js
ficomps
push
jge
bound
cmpsb
push
mov
and
mov
in
icebp
hlt
xchg
pop
jl
push
packssdw
jb
add
inc
repz
xchg
mov
push
mov
data16
lcall
or
inc
sti
idivb
cs
dec
sbb
cmp
outsl
pop
or
or
or
in
addr16
adc
data16
lods
pusha
enter
out
xor
sub
fistl
cltd
jle
les
and
cmc
dec
fmull
out
sbb
nop
addr16
rcrl
push
pop
sbb
pop
test
and
les
clc
stos
sub
inc
clc
enter
dec
or
xchg
pop
jno
imul
lret
xchg
lds
dec
jg
popf
dec
dec
mov
daa
sub
aad
cmp
xlat
pusha
xchg
hlt
mov
jge
fwait
lock
and
mov
les
jg
gs
xchg
out
jge
mov
insl
lret
inc
es
pop
clc
daa
inc
cmpsb
or
jns
jo
cmp
mov
mov
mov
jmp
xchg
jb
stos
lods
ljmp
push
push
xor
mov
add
into
cltd
jnp
shrd
cltd
sbb
or
xor
imull
and
fsubrl
jg
lahf
notb
adc
lcall
cmp
sbb
insl
cmp
cli
jl
cmpl
pop
cwtl
sub
mov
push
repnz
xchg
mov
sub
cs
je
jb
xor
mov
or
adc
add
dec
adc
inc
lcall
daa
cld
xchg
mov
leave
sub
dec
dec
mov
leave
mov
adc
xchg
mov
push
adc
sarb
jp
repz
dec
pop
lret
sbb
and
test
mov
and
imul
add
add
std
fimull
and
jo
test
mov
or
push
sub
out
mov
push
cmpsl
insl
add
xor
stc
rorb
ret
mov
test
pushf
lret
add
add
sarb
sbb
lcall
fmul
inc
insb
mov
es
sti
or
pop
fcmovnb
adc
push
or
sbb
nop
or
lret
xlat
xor
je
in
xor
pop
rcrl
jns
add
and
cmp
cmpsl
lret
cmc
add
cmpsl
jp
adc
enter
sub
dec
stos
test
mov
cmpsb
mov
enter
inc
scas
or
push
rclb
xor
pop
aas
mov
mov
push
jp
mov
pop
mov
mov
inc
pop
push
mov
cmpsb
sbb
add
mov
and
aaa
test
inc
jecxz
flds
cwtl
test
cmp
push
xor
fcmovnu
mov
or
arpl
xchg
insb
fucomip
mov
imul
std
lock
add
int3
adc
insb
rorb
add
xchg
orb
inc
sbb
int
ljmp
and
sbb
sbb
shrl
xchg
adc
pop
pop
ljmp
adc
ret
shll
cmpsb
aaa
push
push
outsb
loopne
sbb
ja
mov
sbb
and
imul
xor
mov
bound
pop
mov
inc
je
dec
xorl
mov
shrb
inc
pop
adc
fiadds
or
jge
or
mov
xchg
repnz
lret
push
and
addr16
pop
fidivrl
xlat
push
hlt
push
pop
dec
adc
fwait
dec
shrl
pushl
adc
mov
shlb
xchg
outsb
mov
pop
inc
xchg
push
mov
dec
outsb
rep
int3
mov
cmp
adc
ret
pop
mov
enter
or
fdivrl
sti
add
cmp
aaa
lret
mov
rorb
inc
jp
lret
push
mov
xchg
aas
cmp
jmp
lret
sub
fnsetpm(287
cmpsl
jae
cmp
repnz
push
jmp
icebp
add
cmpsl
xchg
jae
mov
jg
push
inc
fsts
pop
xchg
mov
sub
or
push
jns
fnsave
ret
or
mov
cmp
mov
push
mov
pusha
dec
shll
jne
cmpsb
notb
leave
jle
mov
pop
loopne
rcrb
pop
sahf
testl
outsb
xor
test
shl
stc
icebp
and
pop
mov
dec
push
jns
add
push
ret
test
shrb
sahf
fistl
aam
push
mov
lea
pop
fimuls
out
dec
cmpsl
lret
push
push
pop
mov
enter
stos
sbbl
xchg
and
repz
sti
adc
push
das
cs
add
lahf
jno
adc
add
bound
cmp
cwtl
fs
loop
or
bound
cmp
ret
inc
mov
ds
inc
popf
js
jns
ficompl
cmp
adc
pop
sarb
lret
xor
or
lcall
leave
stos
mov
jp
data16
push
in
jg
dec
mov
cmp
dec
xchg
pop
mov
dec
imul
add
lcall
cmpl
hlt
test
cmp
pop
push
fstpt
inc
sbb
mov
pop
cmpsl
test
xchg
mov
movb
cli
jge
dec
mov
push
popa
mov
cmpsl
push
pop
mov
push
pop
sub
scas
int3
icebp
push
stos
pop
iret
push
mov
enter
or
adc
in
cmpsl
jle
movsb
mov
mov
adc
jge
push
adc
jnp
int3
pop
rorl
outsb
sbbl
call
clc
mov
sub
shll
pop
adc
jno
mov
push
mov
jmp
xor
out
test
push
xchg
dec
xchg
ljmp
lret
testb
sbb
lret
outsl
mov
mov
and
in
pop
xor
pop
inc
mov
pushf
push
inc
pop
cwtl
testb
cld
aaa
push
frstor
icebp
push
add
inc
call
mov
adc
xchg
sbb
jbe
shrb
mov
jnp
push
insl
stos
adc
jb
sar
sbb
mull
orb
sahf
push
mov
call
jle
and
add
sti
sti
adc
enter
mov
lods
add
pushf
lret
icebp
push
cmp
and
fwait
lods
aaa
jne
cmp
aaa
aad
repz
fld
push
mov
dec
insb
inc
push
mov
and
push
push
jg
add
ret
mov
mov
stos
movl
pop
out
sbb
cmp
mov
mov
dec
lods
jbe
sbb
or
inc
pop
ljmp
movsb
pop
inc
push
mov
cmovno
cmpsl
mov
mov
push
outsl
ffreep
addr16
stos
sub
add
fldl
cwtl
pushf
inc
pop
or
cmc
mov
sub
fldl
pop
test
dec
inc
dec
aas
pop
push
loope,pn
push
pop
xor
rclb
jns
jne
orl
add
and
fwait
add
pop
sub
mov
pop
xlat
sbb
into
cwtl
into
or
lcall
or
lret
movsl
or
ficoms
lods
movsb
lods
xor
pop
xlat
push
shll
add
shll
adc
sub
movsl
xchg
popf
jl
mov
outsb
arpl
pop
pop
cmp
inc
ds
sub
orl
mov
dec
add
push
out
ret
daa
loop
pop
les
sbb
or
outsb
jb
sub
pop
dec
jmp
cmp
fdivrl
mov
adc
data16
loop
inc
inc
push
push
dec
rcll
mov
jbe
mov
int3
push
push
add
mov
sbb
inc
mov
pop
out
cmpsb
in
push
ret
push
and
adc
dec
in
out
pop
filds
push
out
inc
adc
lods
pop
daa
mov
rcll
dec
pop
fsubrs
int3
xor
add
push
mov
add
dec
and
or
push
hlt
orb
out
and
sarl
push
pop
sub
cmpsb
inc
mov
mov
push
and
dec
mov
insb
inc
addl
jno
or
out
out
inc
mov
cmp
or
lods
push
in
and
inc
xlat
dec
pop
and
aaa
and
mov
fisttpl
outsb
dec
lods
cmp
cld
push
cmp
mov
push
sbb
sub
dec
or
outsb
adc
fwait
adc
xchg
cltd
inc
pop
scas
mov
cmpsb
out
into
in
es
adc
xchg
mov
xchg
sbb
sbb
mov
mov
nop
iret
add
or
data16
cmc
jp
dec
add
and
pop
dec
sbb
xchg
add
sub
imul
fcompl
pusha
xchg
jo
xor
insb
rclb
imul
scas
leave
push
cmp
mov
neg
sbb
aad
shrb
in
add
xor
xor
mov
sahf
ds
orb
mov
cs
loop
aas
test
ljmp
in
testb
lea
icebp
mov
cmp
mov
mov
add
cld
cmp
push
stos
push
mov
ja
xor
lahf
jo
push
iret
pop
sbb
cmpl
pop
push
mov
sub
sub
call
popf
je
jae
mov
jmp
pop
lret
scas
push
out
mov
sub
xor
loop
inc
sbb
pushf
or
lods
icebp
sti
jne
cld
lahf
fmull
movsw
mov
xorl
pop
repnz
inc
lahf
scas
dec
adc
fsub
xor
fs
xchg
push
iret
pop
sbb
cmpsl
fadds
or
mov
int3
ss
inc
lret
loopne
repnz
or
mov
xchg
fwait
pop
sarl
jl
push
aas
test
int
lods
and
push
xchg
xchg
lods
mov
hlt
sarl
sbb
adc
aad
inc
xorl
mov
inc
push
and
loop
or
pop
adc
jle
xor
xor
or
jg
out
lret
mov
clc
jo
call
popa
jb
lret
cmp
inc
and
rcll
vxorps
fs
push
imul
sti
pushf
int3
or
movsl
jne
mov
lcall
int
icebp
out
aam
dec
and
mov
out
lods
dec
xchg
adc
cmp
lret
xchg
inc
popa
mov
stc
jl
jne
mov
mov
arpl
pusha
mov
das
in
stos
pop
aam
sub
js
push
test
int
inc
mov
cmpsb
mov
sbb
pop
mov
add
and
jge
mov
das
leave
add
imul
xor
and
test
adc
scas
stos
aaa
adc
mov
or
insl
cmp
dec
inc
dec
shll
dec
inc
arpl
in
jle
adc
push
in
hlt
push
mov
aaa
mov
jo
add
das
cmp
inc
fists
in
enter
sub
gs
lahf
into
rcrl
push
movsl
enter
add
mov
stc
popa
lret
je
sub
fsubrl
rclb
jns
push
jge
cmc
iret
bound
xor
test
push
out
jecxz
in
stos
cmp
cs
repz
loopne
mov
pop
dec
loopne
inc
cld
push
inc
xor
out
sbb
stc
sub
sti
icebp
push
mov
into
divb
rolb
cmp
push
aas
dec
test
int3
xor
cmpsb
inc
es
cmp
cltd
add
mov
mov
xor
frstor
and
xchg
cmp
mov
pop
call
pop
repnz
pop
adc
rclb
mov
int
test
mov
ja
clc
jmp
in
shlb
xchg
aam
imul
jecxz
decl
xchg
test
mov
jge
inc
outsb
insb
bnd
stos
or
mov
mov
lds
enter
bound
pop
push
lock
sarl
orb
pop
insb
in
mov
scas
and
cmp
mov
xchg
fisubrs
add
mov
testl
cmp
mul
xor
cmpsl
das
fdivl
loopne
xor
mov
xor
and
movsb
pop
sub
mov
fxch
cmpsb
mov
xchg
or
push
addl
daa
inc
adc
lcall
mov
out
sti
mov
sub
cmp
outsl
js
dec
jno
jns
in
decl
xchg
jb
xchg
outsb
leave
lahf
sub
dec
jg
jno
jg
push
pop
das
add
int
mov
cmp
adc
push
inc
into
jb
cmc
add
aas
fwait
xchg
enter
pushf
or
mov
inc
push
lahf
cs
push
cmc
loop
sub
sub
mov
pushf
inc
jbe
xchg
fs
or
dec
movsl
inc
repnz
out
nop
xchg
insl
inc
sbb
ljmp
or
push
cmp
pushf
lods
test
lock
pusha
mov
push
adc
inc
dec
push
ljmp
jmp
pop
dec
xchg
das
stos
jo
icebp
inc
adc
sub
or
sbb
add
popf
dec
xor
mov
push
fld
in
ljmp
xor
addr16
mov
or
cmp
cli
mov
add
out
cmpb
repz
cmp
pop
cmp
sbb
ja
xor
or
ljmp
sbb
dec
add
jne
inc
test
add
jne
pop
call
cltd
jg
jne
fstl
lret
or
jbe
cltd
lret
sub
roll
lock
nop
dec
dec
mov
lret
in
aam
jmp
jp
lret
push
call
push
push
insl
fmull
dec
lret
mov
adc
shrl
fldt
stc
stos
punpckhbw
jns
xor
cmp
pop
insl
mov
into
inc
jb
into
mov
dec
call
push
loopne,pn
out
or
cmpsl
cs
aad
xor
fmuls
push
addb
pop
lock
test
leave
outsl
mov
popa
xor
mov
aam
dec
int
jp
add
inc
xor
cltd
dec
lret
push
cld
adc
std
fimuls
cmpsl
and
cwtl
scas
jge
pop
mov
lods
jmp
push
out
push
call
adc
cmpsl
push
insl
inc
adc
iret
dec
add
jmp
jle
mov
aad
cmp
call
jnp
jmp
in
xchg
and
xlat
rclb
out
xor
mov
xchg
xor
inc
addr16
adc
out
lods
mov
inc
jmp
fisubs
in
xor
leave
mov
jo
mov
mov
stc
out
popf
scas
cli
pop
gs
inc
cmp
jnp
xlat
mov
push
rclb
jl
dec
lcall
pop
dec
notl
adc
std
add
daa
fsubrl
stos
xor
cmpb
pusha
xchg
sub
sbb
sbb
pop
xor
mov
and
sub
jne
loop
mov
bound
mov
inc
sub
loope
data16
cli
test
outsb
fmuls
push
mov
xor
stos
loopne
ficoms
hlt
push
shll
mov
pop
push
sbb
mov
popl
or
mov
orl
push
ss
div
pop
dec
int
and
pop
cmp
or
inc
shll
ds
icebp
nop
ds
dec
jmp
out
add
loope
add
test
cld
shll
sbb
lret
loopne
lds
ss
xor
xchg
xchg
sub
inc
xchg
fistpll
cli
test
lods
mov
jge
mov
rolb
and
negl
pmulhw
lcall
jae
mov
add
ds
xchg
and
xchg
push
fwait
into
in
fs
cli
xchg
push
pushl
outsb
je
ret
jg
mov
jno
push
add
incl
sub
pop
loop
js
repz
pop
mov
adc
pop
xchg
fldenv
pop
push
test
adc
idiv
mov
movsl
jp
rcll
mov
loop
rolb
sub
sbb
sub
ret
cwtl
popa
add
out
addr16
popa
pop
aas
test
addb
loop
mov
sub
jp
pusha
jp
int
jecxz
and
sub
in
mov
fs
insb
movsl
mov
rclb
adc
adc
pop
or
mov
sub
loope
sbb
pminub
pop
setb
fisttpl
inc
les
xorl
lods
mov
mov
sub
pop
add
outsb
jle
jbe
pop
mov
popa
mov
jle
push
fnsave
jnp
js
clc
xchg
jnp
daa
or
out
pop
adc
ja
stos
clc
je
leave
ret
dec
mov
cs
mov
pop
mov
ja
leave
fldt
pop
dec
pop
cmp
ss
dec
mov
xor
les
xchg
aaa
mov
and
mov
ss
lret
sbb
push
sbb
push
pop
les
shrl
mov
pop
xor
lea
lret
jp
and
divb
or
in
mov
mov
jo
popa
inc
jne
insl
mov
in
cld
mov
lods
in
cmp
ljmp
fistpll
das
add
rclb
jmp
cmpsl
add
dec
xor
cmp
xchg
icebp
inc
push
pop
daa
gs
rorb
inc
sub
shrb
pop
subl
faddp
cs
sbb
fadds
or
xchg
mov
xchg
jp
xchg
add
pop
pop
dec
mov
xchg
jecxz
out
scas
ss
loopne
inc
jl
mov
xor
loop
sub
clc
test
jo
rcl
je
dec
sbb
outsl
push
js
or
cmpsl
cmp
stos
adc
clc
in
and
lret
das
loopne
push
js
cmp
loopne
dec
cs
jmp
lret
loop
iret
pop
add
jge
adc
test
push
stos
adc
cmc
mov
xor
pushf
sarb
lea
sub
out
outsl
js
daa
mov
es
into
adc
dec
xchg
neg
xor
pop
cltd
flds
sub
push
stos
out
adc
add
int3
pushf
pop
lods
inc
andb
dec
cltd
push
ret
jl
pop
lret
inc
inc
das
ja
pop
add
jno
sub
inc
adc
mov
test
pop
adc
mov
push
hlt
scas
xlat
sub
fcmovb
mov
mov
loope
xchg
call
adc
repnz
in
add
dec
cs
xchg
jge
dec
into
adc
add
call
pop
push
sub
or
push
testb
and
pop
mov
into
adc
push
int3
sbb
xor
pusha
bound
and
mov
push
imul
push
and
adc
inc
stos
insb
cwtl
xor
test
and
rclb
cmc
inc
loop
mov
and
imul
out
cltd
testb
mov
scas
scas
dec
push
ss
pop
clc
xor
je
insb
ret
adc
add
jmp
ja
shrb
xchg
jae
aad
jno
push
mov
daa
push
xor
les
pop
dec
and
fnsaves
in
test
dec
push
or
push
shll
cmp
arpl
mov
sarb
test
fyl2x
xor
out
jl
outsb
add
lods
jbe
xchg
xchg
mov
sbb
pop
jno
ja
dec
icebp
lods
test
loop
popf
dec
clc
adc
xor
mov
pop
add
fcomip
loopne
push
stos
aaa
sub
ret
aam
aaa
inc
sub
fsubs
lret
orb
test
push
inc
aas
nop
push
mov
mov
fimuls
push
int
sbb
push
xor
cltd
pop
mov
or
sarb
lds
sbb
cmp
sub
fs
pop
mov
out
adcl
sub
cld
xor
addr16
mov
pop
sti
mov
test
jns
sub
popa
sbb
jge
mov
in
or
mull
ret
add
mov
div
aaa
mov
idivl
dec
int3
ret
lcall
js,pt
into
jecxz
sbb
scas
clc
je
mov
inc
repz
lahf
cmp
dec
out
push
sahf
mov
iret
and
xor
test
out
dec
popf
dec
les
in
aaa
xor
cs
dec
mov
imul
arpl
flds
cs
sub
clc
xlat
sti
xlat
pop
jnp
aaa
dec
repnz
dec
and
push
sbb
loop
push
mov
jle
mov
sub
inc
push
push
push
mov
and
xchg
inc
add
lret
imul
push
cmp
mov
icebp
popa
inc
jo
sbb
movsl
repnz
add
push
into
int3
div
jnp
js
fsubs
and
or
lret
sub
xor
cmp
int
mov
mov
shr
fidivl
outsb
mov
jnp
insl
rcrb
pop
jno
fimuls
mov
pop
mov
sbb
dec
in
fsubr
scas
test
pop
mov
dec
mov
cmp
jp
js
mov
jnp
dec
outsl
shll
jmp
sbb
jmp
and
pop
inc
repz
gs
in
mov
or
sub
in
lods
fwait
and
dec
inc
jne
sbb
loope
jle
rclb
push
repz
mov
out
incb
push
push
test
je
or
stos
sahf
nop
jns
dec
cwtl
clc
ret
fnsave
dec
pop
mov
pusha
push
loop
inc
aad
stc
inc
push
inc
adc
adc
clc
push
sbb
out
mov
adc
inc
insb
andl
add
pop
sub
hlt
loop
jno
ja
lods
pop
je
jb
push
mov
out
fistpl
cmp
stos
and
ljmp
xor
pop
bound
jae
mov
mov
ja
stos
mov
lret
xor
iret
cmp
scas
push
sbb
lods
push
das
das
into
inc
jae
rcr
addr16
imul
adc
push
les
lods
mov
cmp
pop
pop
test
xchg
jecxz
mov
loop
sbb
or
adc
inc
ret
je
push
mov
ja
cld
xchg
jp
cli
sub
inc
mov
ss
push
cmp
or
dec
insb
subb
mov
in
inc
bound
add
rcrb
jbe
sbb
mov
inc
lea
jae
jl
repnz
cwtl
es
leave
out
inc
jecxz
pop
scas
jecxz
push
jnp
je
jns
add
stc
stc
out
jo
mov
sub
inc
pusha
xchg
cld
add
loope
mov
mov
adc
imul
inc
push
mov
mov
push
xlat
mov
jle
sub
dec
add
jge
adc
adc
fstpl
cmpl
cli
bound
addr16
mov
xchg
cld
mov
loop
aam
repz
rcll
fcoml
daa
pusha
xor
sub
mov
out
es
test
mov
cs
xchg
lret
mov
sbb
test
sbb
gs
cmc
jae
imul
dec
xchg
adc
insl
fadd
sub
mov
xor
out
fldt
xchg
jg
inc
push
aaa
nop
imul
shrl
js
jp
push
xor
scas
imul
cmp
pop
and
cmp
je
leave
mov
mov
es
aam
and
mov
sub
jge
das
decb
fdivrs
or
sahf
push
cli
adc
mov
out
js
sbb
call
loop
notb
cmpsb
lret
cmp
jmp
mov
rclb
cmp
outsl
inc
leave
arpl
cmp
movb
imul
lret
lahf
push
roll
mov
cs
loope
mov
jle
add
push
out
inc
scas
test
int
pop
sbb
push
dec
test
stos
push
fucom
sub
pusha
adc
xlat
jbe
pop
mov
and
xor
movsl
pop
xchg
fsubrp
mov
mov
shll
mov
xchg
insl
popl
push
adc
repnz
adc
das
push
sbb
movsl
arpl
and
cmp
push
pop
mov
cmp
xlat
push
mov
fidivl
add
sbb
and
push
insl
inc
jge
add
jle
xor
fnstsw
jmp
lea
push
add
popa
lods
xor
fwait
popa
inc
in
addr16
mov
jp
push
dec
mov
loope
xorl
xchg
adc
xchg
mov
scas
or
call
dec
imul
lods
dec
pop
data16
pop
frstor
pop
add
push
or
mov
adc
test
mov
cmpsb
hlt
xor
shrl
cmp
sub
adc
out
in
push
in
fstpt
rclb
clc
clc
rclb
dec
popa
in
arpl
mov
iret
push
cmp
sub
pop
xchg
out
xor
adc
in
mov
pop
inc
xor
sub
push
jecxz
and
lahf
jo
jp
popf
dec
test
fdivs
fdivrs
add
inc
lds
push
inc
daa
jge
adc
dec
jecxz
inc
mov
cmp
cmpsb
xchg
leave
dec
xor
pop
dec
inc
jl
addr16
jle
jbe
jnp
jle
mov
adc
mov
gs
fadds
cmp
adc
loopne
fcoml
in
jnp
inc
outsb
bound
dec
addl
fucomi
mov
dec
xchg
hlt
nop
out
inc
cmp
push
dec
inc
stc
or
adc
dec
adc
enter
jecxz
add
jp
adc
insl
inc
int3
pop
in
pop
aaa
insl
xchg
mov
prefetch
push
repnz
pop
push
cld
stc
xor
sbb
jnp
fdiv
sbb
sarl
jne
pop
fsub
sub
push
sbb
js
test
or
jbe
mov
mov
inc
pop
clc
ss
adc
push
std
outsl
int
add
fidivrs
push
insb
xchg
push
xchg
xchg
inc
movsl
lock
cs
out
stc
lcall
jns
add
sbb
mov
xchg
sahf
or
movsb
aaa
js
gs
rorb
jb
lahf
mov
mov
jno
add
enter
mov
enter
push
adc
adc
xlat
inc
inc
sub
outsb
and
rcrl
stc
hlt
mov
fidivs
lahf
sub
rolb
push
clc
test
dec
into
jb
mov
push
sub
loope
cs
add
jmp
or
push
cmp
out
andb
lods
les
mov
sti
add
cmpsl
fisttpl
lods
push
xchg
mov
mov
fwait
mov
add
mov
cmpl
and
xchg
or
daa
repz
insb
rcl
shll
mov
push
jbe
fimuls
and
inc
out
add
pop
gs
mov
inc
xchg
lret
popa
ja
jmp
dec
cs
sahf
sbb
lret
push
fldenv
mov
lahf
adc
ljmp
add
test
and
lcall
mov
icebp
or
aad
xchg
jle
pushf
repnz
xor
xor
adc
cli
mov
or
in
dec
test
loop
mov
popf
sbb
xchg
fdivs
stos
popa
mov
xorb
cmp
pushf
push
and
ret
inc
enter
idiv
push
dec
test
jge
jne
cs
push
xchg
push
test
js
xchg
sbb
mov
dec
lods
xor
ret
fmul
movsl
in
cmpsl
daa
lcall
fcomps
insb
imul
pop
fs
into
cmp
cs
fildl
in
outsb
xchg
jp
divb
aaa
imul
xor
cmp
mov
dec
sub
mov
loop
dec
lret
sub
sbb
shrl
mov
xor
push
mov
pop
xchg
xchg
je
sahf
adc
repz
xor
js
scas
adc
mov
add
push
mov
and
mov
mov
lock
aam
push
xor
xchg
push
ud1
imul
adc
int3
out
clc
incb
sub
mov
leave
andl
loop
cmp
pop
adc
mov
fildl
xchg
adcl
pop
nop
popf
scas
repnz
jo
add
lods
hlt
cmp
movl
xchg
rorb
fsub
pop
loopne
dec
outsb
mov
enter
mov
bound
cmpsl
mov
jns
inc
xchg
stos
repz
or
mov
out
sub
fdivs
fnstcw
je
xchg
inc
mov
cmp
cmc
out
imul
stos
cmpb
push
mov
push
lds
dec
jo
jmp
sbb
aad
and
sbb
cs
push
cmpb
mov
pop
mov
cld
popf
movsb
pop
jo
adcl
cld
dec
jbe
or
or
cld
repz
inc
enter
dec
cs
or
clc
sbb
jl
inc
mov
lcall
pop
cwtl
pusha
and
mov
or
fdivs
fsubrs
or
mov
scas
dec
xor
test
adc
adc
lea
sbb
fimuls
add
js
fimuls
fidivrs
imul
sbb
adc
fs
fcmovbe
jecxz
push
push
ret
and
push
xlat
mov
in
lret
jmp
setbe
push
test
mov
mov
lret
out
xchg
clc
movsb
xor
popa
cmp
mov
imul
cmpsl
ss
dec
pop
dec
test
pop
mov
mov
mull
inc
jge
in
adc
scas
ret
dec
jbe
lret
sti
and
leave
dec
push
or
int3
mov
andb
pop
bound
icebp
inc
mov
mov
adc
jns
mov
or
scas
sbb
adc
das
jbe
out
in
mov
lret
fisubrl
and
leave
in
cs
cmp
pop
addr16
out
push
lret
and
sti
cli
pop
js
neg
repz
sar
add
and
xchg
inc
mov
sub
dec
iret
cmpsb
add
cmp
comiss
xchg
popf
pop
inc
out
cmp
lock
xchg
or
adc
outsb
adcb
lock
insl
cmp
xlat
pop
data16
ret
sarb
sbb
mov
dec
mov
ljmp
ror
shl
cwtl
shlb
xchg
fnsave
inc
pop
popa
pop
mov
jns
jecxz
incb
dec
push
movb
lds
lods
subb
mov
fwait
sub
sub
mov
add
shll
insl
jne
stos
add
jle
adc
enter
push
rcr
pop
add
insb
movsb
loop
cmp
inc
adc
mov
shll
lds
dec
xorb
push
sbb
xchg
sub
sbb
sub
mov
es
data16
sahf
mov
mov
xor
subl
aas
testb
or
push
jo
xchg
fisubl
push
insl
hlt
xor
cmc
popa
adc
daa
mov
push
clc
or
jl
jecxz
out
gs
mov
pop
sbb
xlat
mov
jns
jb
arpl
add
or
lods
aam
dec
mov
lods
adcb
into
mov
xchg
push
movsl
incb
sti
insb
push
cmp
mov
dec
adc
ficoml
sub
movsb
in
mul
ja
push
movsb
dec
dec
movsl
push
sub
mov
jmp
scas
cli
sbb
mov
add
xchg
xor
rcrl
lds
mov
repz
negb
pop
jmp
loope
push
pop
mov
arpl
and
xchg
scas
loopne
je
push
jb
sarb
push
cmp
shl
sbb
push
or
and
fs
iret
xchg
sbb
call
cli
popf
mov
ret
inc
xchg
adc
cmpsb
pop
mov
sbbl
in
iret
or
imul
lds
and
cmc
btc
btc
mov
bt
call
sete
jmp
or
aaa
push
fsubr
sahf
push
add
dec
test
dec
cmp
nop
push
mov
insb
ret
aas
mov
cmp
out
xor
push
jmp
std
mov
repnz
mov
sbb
popa
jns
cmc
test
hlt
std
ds
mov
test
andl
cmp
scas
loope
cmp
mov
mov
dec
jmp
adc
sbb
rorb
test
int3
jp
pop
mov
test
mov
test
clc
repnz
pushf
pushf
call
jl
adc
fmul
jl
jmp
movb
test
movsb
mov
rcr
add
cmpsb
or
aaa
loop
std
fsubr
outsb
repz
or
movsl
or
lcall
fwait
scas
dec
jge
int3
jnp
ja
loope
mov
push
incb
les
xchg
loop
jl
sub
bound
xor
adc
test
orb
icebp
mov
mov
mov
aaa
addr16
sbb
aad
mov
push
fwait
subb
int3
sub
sub
mov
pop
sbb
cmp
and
sub
aas
sbb
mov
ret
mov
mov
mov
dec
cmp
insb
lods
sub
mov
leave
cmp
cmp
cmc
int
popa
pop
push
andb
push
push
out
loopne
ds
pop
orl
xor
add
add
jle
pushf
dec
fcoml
outsl
arpl
push
or
pop
inc
dec
repz
jae
lahf
stc
xor
mov
push
movsl
xchg
scas
nop
movsb
push
fisttps
mov
cs
push
adc
adc
movsb
leave
bound
lret
mov
push
dec
add
jmp
ret
mov
fwait
stc
and
jmp
shl
xchg
pop
pop
push
push
ffreep
jb
pop
sbb
ljmp
dec
push
out
push
xchg
fucomip
push
arpl
lods
outsb
add
and
int3
cmp
iret
in
dec
fdivr
les
mov
push
sahf
jl
cmp
popa
aas
stos
daa
push
jle
cmc
mov
lea
and
jnp
xchg
xchg
or
pop
xor
imul
fnstsw
xorl
push
push
popa
bound
test
stc
pop
push
xor
xor
test
out
jns
mov
insb
lds
fcmovbe
ds
xchg
cmpsb
pop
jp
xchg
dec
out
and
fld
adc
fdivr
cmpsl
rcrl
mov
mov
mov
jae
sbb
jmp
sarb
les
loop
jns
lods
dec
cmc
hlt
jecxz
pop
adc
cwtl
aam
in
pusha
jg
sti
hlt
mov
shll
arpl
inc
mov
stos
fnsave
js
sub
add
sbb
adc
pop
arpl
mov
pop
mov
sub
cwtl
out
icebp
jge
mov
iret
popa
mov
mov
jp
push
icebp
mov
mov
push
or
sub
aam
dec
fsub
iret
jns
or
movsb
test
ret
and
inc
fsubrp
cli
sti
sub
imul
je
and
xchg
ljmp
mov
xor
inc
in
ret
add
and
pop
cmp
in
xor
push
sbb
rcl
mov
mov
pop
jo
add
add
xchg
sbb
call
xchg
pop
xchg
mov
mov
xor
push
mov
mov
or
push
decb
fcompl
sti
sti
notb
xor
lods
pop
cwtl
cli
cmp
adc
adc
js
push
sbb
adc
mov
and
pop
repz
and
pop
mov
dec
test
jae
add
ss
adc
inc
xchg
es
call
imul
ja
and
fisttps
sub
shrl
cmp
xchg
mov
test
mov
mov
sbb
fcoms
push
push
rol
cmp
jmp
pusha
mov
jmp
jae
gs
insb
xor
cs
insb
add
fcoml
sti
pop
cmpb
jle
add
imul
mov
negb
fldcw
pop
or
inc
adc
cmpsl
adc
cmc
sbb
jecxz
mov
mov
mov
ljmp
repnz
scas
xor
gs
xor
fisttpll
and
sti
hlt
lods
cld
ds
cmp
ja
lcall
adc
and
enter
icebp
sub
sbb
dec
mov
or
pusha
stos
frstor
pop
jns
adcb
ds
bsf
ror
neg
pusha
call
out
scas
cmpsl
dec
fcompl
pop
adc
addr16
mov
cmp
add
mov
pop
pop
in
imul
repnz
adc
in
jne
dec
test
repz
add
jbe
sbb
and
sti
arpl
hlt
push
sarl
pop
jbe
cmc
roll
inc
cmpsl
stos
sub
mov
jecxz
mov
push
test
cwtl
dec
lods
mov
dec
shrl
dec
adc
xlat
movsl
or
rclb
pushf
mov
lea
jg
pushf
movl
call
dec
xor
dec
faddl
push
cltd
movsl
jno
fcomi
cmp
dec
cli
cmpsl
in
cmpsb
pop
xor
ror
inc
mov
iret
and
sbb
in
data16
fcoms
sbb
inc
notl
adc
inc
mov
and
jmp
push
in
xchg
push
xchg
fnsave
cmp
sbb
loope
aas
pop
filds
shlb
xor
fwait
bound
lret
xchg
mov
adc
jp
fadd
insb
jns
jno
pop
dec
scas
adc
push
icebp
les
mov
jbe
int3
add
mov
clc
sahf
sbb
mov
cmp
or
xchg
test
pop
shl
mov
setnp
mov
inc
fidivrl
movsb
mov
loop
dec
inc
test
pop
adc
leave
mov
shlb
jno
push
sub
xchg
sbb
out
loopne
call
pop
sbb
out
inc
jb
je
adc
outsb
adc
pop
lcall
mov
rol
xlat
pop
fwait
dec
repz
add
fdivl
sbb
mov
ret
sub
daa
push
subl
dec
in
sbb
cmp
loop
aas
test
pop
gs
test
cltd
mov
rolb
push
adcl
sub
add
xchg
pop
or
lock
mov
leave
mov
jnp
sbb
popa
dec
push
popf
int
imul
out
and
xchg
les
movb
pusha
mov
call
cmpb
mov
push
and
xor
aad
loope
adc
movsb
pop
repz
lea
cmp
aad
iret
pop
or
pop
and
cltd
pop
cmp
fxch
imul
mull
sub
adc
imul
inc
inc
enter
push
inc
ss
or
xchg
jmp
aas
in
and
push
imul
dec
mov
addr16
dec
jb
ret
ss
loopne
sub
dec
xchg
xchg
and
xor
divl
add
mov
xor
cmpsl
clc
mov
js
adc
jge
fs
data16
mov
mov
dec
mov
cmc
dec
loopne
ss
cmp
xchg
fwait
xor
adc
sub
xor
mov
loope
dec
cmpsl
rorl
or
xor
adc
cmpsl
sub
lret
pusha
push
xchg
jmp
mov
ficomps
repz
pop
mov
jecxz
popf
mov
sarl
jmp
stc
cmp
jmp
dec
push
push
inc
fmul
imul
push
lret
cmp
clc
mov
jg
mov
and
mov
dec
clc
inc
mov
mov
xchg
lods
dec
repnz
sbb
gs
cli
cmp
push
push
pop
ja
fstpl
and
jle
scas
push
sub
movsl
push
push
push
pop
cld
adcl
xor
adc
sti
pop
in
insb
jo
and
scas
push
cld
inc
mov
fsubl
sub
push
mov
mov
push
xor
jnp
in
sbb
mov
jb
test
das
ljmp
dec
test
js
aas
add
mov
imul
les
fcoml
mov
push
arpl
xchg
and
addr16
pop
cmp
inc
data16
push
mov
data16
inc
inc
add
bound
adc
sbb
in
sahf
cld
call
xor
pushf
pushf
mov
pushf
pushf
pushf
pusha
lea
jmp
lea
jne
jmp
adc
push
inc
mov
dec
mov
mov
or
mov
sbb
cmpsl
aaa
addl
out
xchg
and
xor
or
mov
xlat
xlat
push
sub
test
inc
mov
dec
sub
cmpsl
cmp
sti
roll
mov
shrb
lret
fwait
ret
push
adc
push
adc
nop
ljmp
pop
iret
test
insb
sbb
mov
outsb
fisttpll
pop
data16
cwtl
xchg
rorl
das
pushf
xchg
push
movl
jmp
add
push
push
inc
push
je
jb
jne
add
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
sti
inc
fdivl
das
fdiv
arpl
add
sbb
pop
test
sbb
je
mov
pop
test
cmp
push
insb
sbb
and
pop
mov
sub
insb
and
rcrb
inc
lods
dec
testb
push
in
jecxz
les
imul
orb
sbb
leave
jecxz
movsl
inc
dec
inc
faddl
fwait
out
adc
frstor
or
popa
mov
jl
sbb
adcb
mov
outsb
jae
and
mov
sub
pop
sti
push
jns
jecxz
test
hlt
sahf
push
jmp
fmull
or
roll
pmaxsw
aad
mov
das
aaa
lret
ret
jnp
daa
in
icebp
pop
jge
mov
adc
test
or
cmp
pop
call
clc
ljmp
fs
or
sbb
or
popa
out
dec
mov
dec
sbb
out
mov
dec
sbb
mov
movsl
mov
out
je
cmc
mov
mov
test
adcl
xor
jle
and
push
rcrl
jbe
pop
mov
jmp
and
xor
clc
dec
cmpsl
inc
pop
xchg
mov
xor
xor
push
xchg
dec
cmp
js
sub
popa
testl
and
push
push
inc
fcoml
filds
add
push
adc
movsl
jge
outsb
push
mov
cmp
movsl
subb
inc
js
sbb
movsl
and
imul
fisubrl
hlt
mov
leave
jb
xlat
imul
sbb
mov
mov
loopne
bound
jbe
test
jg
cmp
cli
sbb
repnz
pusha
push
out
ficoms
iret
adc
cltd
inc
push
add
add
jle
lea
call
test
jmp
jecxz
iret
inc
fsubr
rclb
adc
cmp
pop
push
dec
out
in
xchg
xchg
rorb
test
mov
stos
cmp
inc
or
int
jne
js
xchg
jo
mov
mov
xor
push
int
pop
loop
scas
inc
lea
repz
jl
fcomps
popa
fcmovnbe
push
jne
dec
incb
cli
jp
xchg
sbb
push
rol
and
in
cmp
ds
fsubs
jmp
adc
jecxz
add
int
mov
xchg
mov
jl
mov
jne
push
mov
cmp
cmp
pop
push
cmp
cmp
push
lea
jb
neg
shl
clc
cmp
mov
not
rcl
mov
bt
push
mov
push
shl
pushf
jmp
call
repz
or
es
loopne
xchg
in
push
andb
xor
fld
or
cld
mov
repnz
sub
jnp
je
call
mov
fiadds
lock
in
adc
pushf
cmpsl
je,pn
push
outsl
sbb
insl
jb
mov
orb
push
cmp
mov
xchg
mov
inc
or
inc
mov
sub
xchg
jne
loope
or
inc
mov
sub
icebp
dec
mov
xor
sub
add
add
in
add
adc
cwtl
lods
or
sub
xor
ret
test
rcl
popa
and
pop
cmpsb
faddp
dec
jbe
popa
popf
or
sub
hlt
inc
fsubrl
dec
push
loopne
mov
mov
adc
aaa
ds
in
dec
mov
xor
cld
in
xlat
lret
insb
ja
cld
dec
adc
jno
mov
add
jbe
lcall
cs
add
mov
lret
xlat
mov
popf
fnstsw
dec
stos
mov
lret
ret
ret
ficompl
xchg
jmp
inc
cld
repnz
jno
call
push
stos
inc
gs
dec
lea
sub
les
cwtl
xchg
inc
mov
lahf
mov
lea
jmp
pusha
cmc
clc
imul
pushf
pushf
lea
jl
lea
push
pushl
movb
lea
jmp
pushf
jmp
pop
bound
fdivl
adc
sub
jnp
dec
or
push
and
adcb
or
repnz
mov
outsl
or
xlat
sub
sbb
scas
jbe
pushw
mov
fldl
sub
push
xlat
fidivl
sbb
xorb
mov
xchg
repz
xchg
faddl
mov
fistl
rclb
js
loopne
rclb
lss
mov
aas
fdivrl
clc
xchg
cmp
daa
sbb
imul
push
xor
insl
fnstsw
int
push
mov
xchg
sub
sbbl
dec
addr16
jp
mov
movsb
mov
jb
fwait
cli
jecxz
popf
insl
jmp
stos
sub
gs
cld
pop
scas
pusha
bound
jmp
adc
pop
test
sub
outsb
sarb
iret
sbb
and
and
gs
mov
loop
lock
fs
mov
push
sub
popf
sub
adc
mov
jno
in
sub
xchg
andl
in
sub
outsb
dec
test
test
add
jl
xor
es
imul
lea
dec
nop
xchg
inc
out
cmp
sbb
ret
adc
out
outsl
icebp
dec
lea
call
clc
clc
pushf
cmp
mov
test
test
jmp
lds
fsubl
das
ret
xchg
push
push
push
fimull
pop
xchg
cmc
pop
pop
mov
sbb
shll
ret
push
pop
test
sahf
sub
inc
add
movsl
punpcklwd
adc
mov
mov
mov
pop
ss
aaa
sbb
cmpsl
mov
shlb
jno
pushf
in
mov
inc
leave
and
cld
enter
push
int
push
ljmp
pop
cmpb
inc
or
xor
leave
jo
stc
jnp
xchg
test
lods
jb
out
leave
into
push
loopne
cmp
sarb
repnz
jae
dec
xlat
jb
pop
jae
int3
mov
xchg
adcl
cs
mov
jae
das
adc
int
mov
rcrb
test
inc
loopne
or
inc
or
pushf
dec
daa
jae
iret
mov
and
sub
leave
cmp
sbb
or
mov
xor
mov
repz
fildll
and
pop
sub
mov
sbb
repz
dec
mov
gs
cmpsb
xchg
popf
dec
insb
xorl
cld
incl
add
popa
insb
inc
insb
insb
outsl
arpl
ror
neg
movzbw
mov
push
cmp
cmpb
jmp
aaa
dec
inc
cmp
inc
lods
xor
and
sarb
test
fsubrl
xchg
lret
pusha
cwtl
mov
bound
sub
mov
and
fildll
test
lods
js
sahf
orb
sbb
jle
dec
and
jmp
xchg
mov
adc
or
xchg
rorb
cmp
bt
bt
pushf
sub
clc
cmp
jmp
lret
scas
cmpsb
cmp
fdiv
pushf
jge
cmp
in
and
xor
mov
shlb
and
sbb
mov
xchg
push
aad
dec
xor
dec
push
repz
lock
test
out
call
scas
mov
mov
and
and
insl
jle
push
inc
ja
inc
cli
aam
sub
mov
xor
sub
dec
shrb
xchg
into
mov
sahf
xchg
or
push
ds
cmp
test
addr16
es
and
pop
stos
fisubs
iret
iret
repz
xor
cmp
fcoml
rclb
dec
xor
jle
cmp
imul
jp
jge
and
xor
imul
cmp
xorl
out
je
test
pop
push
jbe
test
pop
imul
out
cld
xchg
or
imul
fs
dec
xchg
cmp
or
fsts
or
mov
movsb
push
and
dec
into
add
stos
pop
pop
sub
movl
pushf
pushf
lea
jmp
lea
jne
movzbw
pushf
pushf
mov
pusha
push
movw
lea
jmp
bsf
shl
mov
mov
pusha
push
lea
jnp
bt
cmpb
call
pop
loope
cmp
fdivl
pop
in
mov
inc
jmp
pop
cmp
aas
xor
test
outsl
and
movsb
jbe
xchg
cmp
js
and
les
aam
pop
les
push
out
add
xchg
sarl
xor
xchg
fs
divb
cs
xchg
cmp
mov
xor
push
call
outsb
lea
inc
mov
aad
pop
push
das
jecxz
or
dec
pop
pop
xor
imul
aad
cmp
dec
cmp
jmp
cmc
cmp
call
mov
fsubl
into
scas
push
push
dec
mov
xlat
sub
mov
bsr
ja
ds
test
mov
andl
xchg
lcall
sub
test
test
jmp
cmp
repz
mov
aaa
cmp
or
movq
sbb
scas
xor
adc
sbb
popf
outsb
sub
cmp
fsubr
mov
fcoml
sbb
out
cmpsb
mov
mov
lock
pop
sbb
shrl
xchg
sbbl
out
lea
bound
int3
mov
hlt
mov
adc
mov
iret
lods
and
mov
and
sbb
sub
lea
pop
sub
shl
push
sahf
lret
and
aas
cmp
inc
jno
cmp
or
stos
add
popf
push
pusha
movl
pushf
jmp
popf
cpuid
nop
push
push
push
movl
pushf
mov
lea
jp
push
movl
pusha
mov
push
lea
jmp
arpl
cmp
fsubrl
in
fidivs
xchg
popf
es
scas
sub
mov
adc
test
fstl
sbb
neg
sbbl
pop
lcall
jmp
shlb
mov
adc
sub
icebp
roll
xchg
mov
xor
ljmp
dec
xlat
mov
mov
adcb
setne
mov
pop
sub
mov
int3
arpl
aas
loopne
adc
rcrl
push
add
lahf
sbb
pop
xchg
cli
call
mov
movzbw
jmp
call
mov
mov
mov
imull
xchg
stos
out
xchg
repnz
popf
shrl
jae
das
adc
sub
sub
mov
add
mov
inc
test
imul
idivb
inc
leave
lods
pop
cmc
shll
dec
ret
stos
sub
mov
outsb
pusha
lret
into
or
rclb
adc
pushw
scas
call
test
or
stos
arpl
cmp
call
movsl
sbb
add
sarl
les
stos
xchg
fistps
or
out
aas
gs
dec
ljmp
decb
ret
not
xor
pop
orl
call
dec
dec
adc
dec
in
pop
or
clc
mov
movsb
cmpb
sbb
pop
pushf
fcoms
repnz
sbb
pop
popa
mov
push
hlt
test
aad
dec
push
testl
fldcw
bound
jl
dec
pop
outsl
int
xchg
xchg
jae
cmp
ljmp
mov
xchg
movsb
adc
jge
test
addl
loopne
pop
nop
pop
dec
lods
sub
cmpsl
cmp
out
inc
out
ljmp
outsb
stc
clc
and
in
jge
jbe
lods
fbld
nop
add
xor
mov
je
push
pushf
ja
in
xor
jno
sbb
cmp
inc
outsb
sbb
mov
mov
sarb
or
addr16
mov
cmp
movl
lret
test
fwait
ljmp
pushf
dec
jmp
test
add
ss
fmull
adc
lret
push
jne
sbbb
xor
mov
xchg
jbe
xchg
or
jnp
push
adc
call
mov
adc
mov
fsubr
xchg
adc
jecxz
hlt
mov
push
or
pop
ljmp
cmp
sbb
popf
cmp
lahf
jno
sbb
xchg
dec
adc
mov
xchg
pop
lahf
pop
push
mov
movsl
jnp
xchg
cmp
cmp
outsl
cmp
or
inc
sub
in
inc
jecxz
xor
lods
adc
add
sti
in
sti
add
sbbl
cs
mov
mov
aaa
shrb
xor
sbb
and
adc
inc
cmpsl
pop
insl
mov
xchg
mov
adcl
outsl
cmp
mov
pop
pop
lahf
ljmp
cmp
push
mov
movb
stc
test
test
jmp
push
mov
mov
mov
lahf
push
jmp
repz
push
movl
pushf
movl
movl
push
mov
pusha
pushf
lea
jmp
jnp
stos
xor
fsubl
and
int
sub
call
mov
shll
ljmp
mov
jp
inc
in
cmp
fisttpl
test
mov
xorl
mov
jg
inc
jp
pop
popf
roll
mov
mov
adc
nop
inc
inc
mov
mov
sub
push
mov
dec
js
popa
sub
in
jnp
jge
int3
inc
xchg
pusha
jecxz
fwait
push
jecxz
xor
ljmp
pop
pop
cmc
xchg
push
and
and
sbbl
push
add
cmp
cmc
cmc
pusha
cmp
call
push
mov
setnp
lea
mov
setl
push
not
cwtl
mov
movsbw
mov
lea
jbe
rep
bswap
lea
mov
jmp
lea
jb
test
aad
sbb
shld
mov
push
call
mov
pusha
lea
call
push
call
pop
xor
xchg
icebp
dec
mov
sub
scas
inc
arpl
push
gs
aam
pop
and
xor
xor
mov
xchg
orl
mov
xchg
stc
into
shll
cltd
sub
dec
dec
cmp
inc
cli
int3
jo
loop
push
insl
jnp
rcrl
xchg
and
loop
dec
repz
mov
and
and
mov
or
push
pop
mov
mov
mov
fsubl
and
sbb
dec
xchg
sbb
cltd
sub
imul
ret
rolb
adc
daa
xchg
xor
cmp
movsl
dec
test
cmp
inc
add
in
add
push
flds
sub
cmp
jns
xor
rcr
subl
movsb
test
cmp
sub
add
cmpsl
adc
fs
jae
not
bswap
lea
bsr
mov
pushf
shrd
bsf
push
mov
sar
pushl
bts
bsf
mov
jmp
pusha
call
lea
jb
pushf
test
cmp
jmp
add
dec
clc
cmp
imul
xchg
outsl
orl
outsb
add
push
mov
and
push
adc
mov
pop
pop
sub
adc
test
xchg
mov
imul
cs
scas
cmp
in
int
inc
cmp
iret
push
inc
fisttpll
sub
in
sti
lahf
shlb
jbe
out
movsl
sbb
jnp
pop
jg
cmpsb
nop
add
fnstenv
fsubl
scas
jb
movsl
mov
dec
mov
pushw
or
imul
cltd
in
and
mov
and
xor
loop
dec
jb
popf
mov
and
subl
pop
das
mov
fcomi
das
mov
push
enter
sub
dec
sbb
push
pusha
jmp
ja
or
fisubrl
sub
mov
pop
dec
out
dec
enter
icebp
lods
fsubs
stos
mov
sub
or
fsubrl
pop
stos
pop
ss
xor
push
and
loop
daa
icebp
lods
ja
inc
lock
push
push
gs
stos
add
or
pop
pop
popl
inc
out
xor
mov
sbb
fimull
jo
loope
dec
pop
test
fistpll
inc
adc
mov
sahf
imul
insl
fadd
or
jecxz
push
adc
xchg
mov
aaa
pop
rcrl
fs
loop
add
cmp
movsl
shl
test
in
push
les
insl
xor
fsubr
int3
cld
adc
aad
push
xchg
clc
leave
aas
into
popa
or
jecxz
inc
fldt
xchg
pop
insl
xor
sbb
cwtl
mov
and
out
icebp
xchg
sarb
shll
pop
mov
push
xchg
mov
push
in
cld
xchg
push
aaa
mov
cmp
xchg
jle
add
nop
mov
sub
or
xchg
mov
mov
mov
icebp
lret
fmuls
scas
pop
fnstsw
adc
jae
inc
jno
add
mov
outsb
jae
or
cmpsl
push
mov
xchg
mov
push
mov
and
sbbl
lds
icebp
add
leave
cmpl
or
outsl
cltd
xor
mov
outsl
pusha
xchg
ds
in
xor
jnp
imulb
test
ja
sub
pop
xor
cmp
cmp
lds
addr16
xor
fcoml
ret
mov
in
xor
xchg
jns
lret
add
js
push
insl
xchg
cmp
add
xor
fmul
jne
mov
xchg
hlt
mov
stos
sub
or
ds
fldt
mov
cld
pop
ficoml
cwtl
pop
dec
sbbb
fbld
sub
cmp
cmp
dec
or
movsl
out
jnp
addr16
clc
pop
fdivs
jnp
int
fwait
rclb
dec
dec
call
xlat
jbe
xor
fmull
push
jle
adc
fstpt
dec
xor
pop
stos
mov
jb
mov
jge
mov
insl
outsb
fidivs
gs
cmp
imul
daa
int
or
cli
cmp
das
pop
sbb
pushf
por
pop
fcoms
insb
pusha
imul
icebp
test
mov
jl
int
sub
adc
pop
cmc
push
pop
dec
mov
pop
fucomp
sbb
jns
add
mov
jne
subb
rcrb
repnz
mov
cs
fmull
mov
dec
js
js
jle
daa
and
mov
mov
movsb
cmpb
pusha
inc
loop
pop
jp
mov
or
mov
jo
mov
or
movsl
hlt
push
xchg
and
rolb
mov
dec
add
xchg
stos
jl
pop
mov
gs
push
ljmp
adc
adc
inc
cmp
xor
movsb
test
pop
outsl
imul
shl
test
psubb
adc
in
push
test
sub
mov
or
mov
test
leave
dec
jns
xor
dec
jle
xchg
lock
cmp
sahf
xor
out
xchg
js
sti
insb
sar
stos
pop
out
pop
sbb
ljmp
xchg
xchg
inc
add
and
imul
inc
test
out
aas
add
push
xchg
dec
push
loope
dec
xor
push
and
call
ror
insl
add
mov
ficoms
push
sbb
xchg
fstps
pusha
mov
ret
arpl
fcmovb
call
clc
xchg
add
into
mov
push
push
adc
aad
jo
loope
and
add
call
or
push
mov
loop
mov
mov
mov
je
sarl
adc
shrb
and
aas
int3
inc
into
loope
adc
cmp
mov
pop
adc
inc
repz
lock
push
call
dec
jle
fcoml
xchg
xor
int
add
scas
pop
and
out
xchg
pushw
mov
shll
add
shl
inc
lods
sbb
leave
out
xchg
pop
xchg
loop
mov
cmp
cmp
adc
in
in
xchg
arpl
jge
test
stos
dec
xor
cmp
pop
aad
shr
fisttpl
ds
sub
add
sarl
mov
pop
shrl
dec
jb
mov
mov
mov
iret
xor
and
call
popa
inc
mov
stos
fwait
push
mov
or
insb
hlt
cltd
std
sbb
pop
xlat
dec
xor
mulb
mov
cmc
shlb
xor
roll
cld
lret
push
push
inc
loope
lds
pusha
ret
cltd
jbe
sbb
mov
test
es
lods
loop
sub
sbb
push
dec
lret
add
dec
insb
add
stc
push
aad
cli
or
xchg
js
sahf
mov
sub
lahf
cmp
sbb
jbe
clc
imul
jne
outsl
xlat
push
aaa
jne
fdiv
mov
mov
push
cmpsl
ret
pop
mov
stc
or
pop
scas
stos
push
cmc
add
aas
aam
and
or
mov
iret
movsb
iret
cli
xchg
cmpsb
outsb
insb
iret
daa
out
nop
mov
dec
movsl
push
mov
push
jl
or
pushf
push
and
pusha
shl
adc
push
push
fdivl
xor
bound
lods
scas
push
imul
dec
mov
mov
mov
out
stc
dec
test
mov
add
xchg
dec
jecxz
les
ret
sbb
sti
mov
xor
sbb
je
aaa
sub
leave
xor
es
iret
push
bound
fidivs
gs
out
mov
cmc
mulb
pop
push
sbb
jmp
cmp
push
jecxz
decb
aam
sarl
std
adcl
rcrl
dec
add
push
push
cmc
mov
sbbb
andb
ljmp
cmp
xchg
jl
loopne
pop
push
pushf
mov
sbb
test
add
cmp
dec
daa
sub
jge
notl
clc
stos
ljmp
nop
push
fistpl
movsl
push
pminsw
inc
and
pop
cmp
sub
lods
rcl
mov
pop
adc
push
push
cwtl
add
jecxz
in
mov
pop
dec
xor
pushf
rorb
stos
lcall
scas
jae
in
xchg
mov
les
sti
sarl
pop
sarb
rcrl
inc
in
mov
adc
sub
add
lcall
outsl
cmpsb
fstpl
mov
pop
lock
or
stos
and
fdivr
jno
xchg
jo
sbb
push
sbb
outsl
lret
push
sbb
decb
rolb
repz
testb
int3
dec
mov
sub
stos
xlat
cld
jne
mov
sub
pop
cld
cmpsl
jl
std
fsubr
test
and
add
std
add
mov
enter
fisubrl
pop
aas
xor
lcall
hlt
aaa
xchg
cmpsl
aas
xchg
or
and
ljmp
mov
xor
cmpsl
dec
inc
mov
test
daa
xor
xchg
cltd
pop
shlb
and
jbe
inc
mov
mov
push
lods
repnz
xor
or
push
lcall
pop
dec
dec
dec
int3
or
ret
mov
stos
testl
cmc
push
movsb
mov
xchg
movsb
addb
sbb
adc
xchg
pop
mov
sahf
cmp
mov
mov
jno
pop
mov
pop
cwtl
sbb
xor
mov
and
les
push
adc
lret
inc
mov
das
adc
insl
dec
roll
sub
cmp
jl
fs
ljmp
mov
into
fsubrl
ss
cmpsl
pop
movsl
mov
xlat
sbb
inc
loopne
lds
nop
out
mov
adc
sub
faddl
addb
inc
mov
mov
ss
add
lahf
sbb
fisttpll
pop
lahf
addr16
push
inc
popa
pusha
push
insl
xchg
xlat
or
mov
inc
fmul
and
cmc
pop
xor
stos
xor
or
inc
mov
or
mov
cltd
cmp
sbb
ret
lret
bound
rcrb
std
pop
std
xor
or
and
push
imul
insb
cs
pop
clc
push
jbe
push
jecxz
ret
mov
shrl
pop
pushl
fldenv
xchg
adc
push
push
clc
jnp
fsubl
inc
xchg
mov
mov
cmp
negl
or
push
lds
mov
push
clc
xchg
stc
cld
adc
mov
orb
fimull
xchg
xchg
cmp
cmc
outsl
xrelease
pusha
pop
ficomps
pop
xchg
pushf
jp
xor
popa
je
push
rcrl
cmp
in
jge
sbb
jb
sub
lea
ret
push
pop
sub
ret
xor
mov
dec
imul
arpl
repnz
xor
nop
sbb
xlat
inc
adc
pop
mov
mov
cmp
das
dec
test
movsl
aas
cwtl
xor
add
aad
push
sbb
jmp
inc
fildll
cmp
mov
adc
add
je
or
mov
mov
mov
out
rcrl
sbb
test
push
lahf
ret
outsb
and
ds
jae
mov
dec
push
insb
ret
cmp
sbb
mov
xor
pop
cli
jnp
sbb
popf
and
adc
shl
cmpsl
dec
lcall
or
pop
jo
ds
movsl
cmpsb
iret
jno
enter
add
loop
dec
jb
or
inc
test
sub
cltd
mov
and
pop
jle
pop
or
push
pop
xlat
aaa
jmp
or
enter
xchg
scas
out
shl
fisubs
repz
jmp
jecxz
xchg
mov
push
insb
sub
mov
mov
push
stos
mov
dec
xor
sbb
imul
add
inc
pop
xorl
dec
dec
std
loopne
stos
cwtl
faddp
lods
fisubl
pop
es
inc
std
jecxz
pop
jbe
lahf
jb
les
sbb
lea
orb
std
add
cwtl
call
test
mov
lods
gs
pop
repnz
or
ror
aad
lods
lods
lahf
mov
push
lahf
mov
sarb
rcl
inc
cld
cmp
lahf
and
fs
shll
fnstsw
jp
test
sub
loop
ror
inc
cmp
adc
mov
in
das
les
push
add
push
adc
push
and
das
call
xor
mov
lcall
pop
inc
adc
dec
psraw
push
in
je
jbe
dec
mov
in
imul
inc
or
insl
decl
fprem1
out
cli
daa
xchg
inc
and
sbb
push
cmpsb
push
clc
jp
das
lea
bound
insb
arpl
ret
dec
outsb
and
lods
or
xchg
push
lret
push
push
mov
push
pop
cltd
fildl
mov
imul
mov
jp
sub
mov
xor
arpl
mov
cli
xchg
loopne
mov
pop
xchg
xchg
popf
movsl
mov
sti
sti
fcmovnbe
insb
out
and
xchg
iret
inc
repz
mov
push
enter
leave
pop
pop
or
in
push
adc
pop
insl
cmpsl
nop
adc
pop
andb
jae
adc
or
data16
xchg
cmc
data16
mov
sub
jecxz
insl
sbb
xchg
xchg
daa
jl
add
dec
inc
in
imul
add
dec
pop
in
movsl
xor
es
pop
xchg
mov
jl
loopne
leave
mov
pop
cmp
ljmp
or
popf
shlb
aad
icebp
push
test
push
cwtl
jae
stc
jno
mov
std
and
popa
je
push
test
or
aad
shll
movsl
jno
mov
inc
idivl
pop
xor
and
or
pop
stos
enter
xchg
sti
btc
jno
sub
mov
mov
sub
ljmp
dec
sub
leave
pop
inc
mov
jg
sbb
jnp
jns
out
insl
cmp
gs
outsl
cmp
jl
cltd
pop
mov
sbb
fnstcw
pop
je
cmpsl
or
cmpb
add
sbb
adc
add
push
insb
push
and
movsb
push
ds
out
pop
js
lea
shlb
ret
pop
std
adc
xchg
lods
sbb
inc
out
sbb
dec
popf
mov
adc
or
call
mov
xchg
popa
fwait
das
sahf
fnsave
lahf
cmpsb
leave
jns
dec
jns,pt
addr16
sub
or
shr
jo
cli
test
cwtl
test
mov
ficoml
addl
inc
shl
loope
les
jnp
outsb
shl
scas
ret
lock
push
cmp
push
sub
jno
dec
pop
mov
cli
scas
jmp
fsin
jne
int
sahf
leave
mov
fidivl
xchg
bound
mull
push
pusha
dec
push
add
sub
xchg
popf
unpckhps
xchg
fisubs
pop
dec
xor
push
inc
repnz
push
sub
lods
cwtl
xorb
aaa
mov
aad
popf
pop
and
push
cmpsl
sbb
jb
arpl
popf
inc
insl
inc
add
scas
int3
ror
aam
mov
test
fdivrl
in
xor
add
xchg
dec
shll
outsb
xorb
mov
jns
daa
ret
cltd
and
test
cmp
imul
pop
mov
adcl
dec
pushf
aas
imul
pop
cmp
jmp
sbb
lods
push
imul
lahf
mov
je
mov
fs
sti
adcl
push
dec
cli
sub
pop
or
sub
lret
or
cltd
iret
sub
iret
js
lock
stos
test
popf
aaa
fisubrl
jo
es
xchg
popa
std
cmpsb
lods
insb
sub
cwtl
xor
and
outsl
repnz
cmpsb
ficomps
xor
cmp
mov
test
sub
lock
push
hlt
adc
cmp
aam
ret
or
push
es
jge
sub
sbb
pusha
lcall
inc
xchg
inc
inc
push
mov
sbb
xchg
xchg
sub
adc
mov
ret
push
outsl
pop
xchg
imul
daa
cmp
lahf
pushf
and
cltd
pop
mov
inc
orl
cld
dec
repz
pop
or
dec
popf
sbb
xor
jecxz
leave
adc
lds
sub
and
shl
stc
scas
mov
insb
pop
cmp
mov
jo
std
mov
adc
into
scas
adc
sub
mov
mov
pop
loopne
fmuls
addr16
mov
mov
outsb
push
add
rorb
cltd
xchg
add
dec
adc
or
adc
lahf
lods
and
pop
fdivrp
cmpsb
mov
test
push
cmp
mov
cmp
fsubrs
addb
pusha
and
push
mov
pop
sub
dec
in
adc
sbb
jmp
loop
mov
not
int3
add
pop
je
nop
xor
out
sti
sahf
aas
cs
loope
fstpt
fistps
adc
aad
bound
xchg
dec
rcrl
ds
mov
xor
xchg
add
popf
pop
insb
outsb
popa
dec
xlat
idivl
inc
dec
imulb
jno
call
push
out
mov
mov
js
std
xor
xchg
arpl
push
push
inc
outsl
and
leave
ret
cmpsl
cli
fsubrl
setns
inc
or
and
lods
mov
mov
mov
mov
jne
dec
scas
pop
scas
dec
xchg
xor
ljmp
jb
out
xchg
lahf
and
cwtl
in
pop
xlat
ljmp
xchg
cmp
sub
adc
cmp
jne
out
call
daa
pop
push
js
gs
sarl
in
test
repz
out
cmp
mov
xlat
bound
movsb
pop
mov
repnz
std
mov
call
jb
and
cmp
or
xchg
pop
cmp
lock
out
and
fwait
aad
aam
pop
mov
je
sub
cmp
mov
jbe
lods
jl
lret
push
lods
dec
push
adc
push
pop
scas
mov
mov
dec
xor
mov
or
test
adc
sub
add
jne
push
adc
mov
out
mov
popa
cmp
pop
sub
dec
adc
inc
sbb
lahf
idivb
and
and
imul
push
jecxz
cltd
into
push
jecxz
lss
ret
stos
or
or
decl
scas
out
and
fs
and
jb
push
in
xchg
add
adc
das
mov
jecxz
cmp
cmpl
push
adc
adc
ja
lahf
xchg
jl
cmp
call
pop
xchg
cmp
push
xor
lea
inc
and
clc
and
and
mov
pop
movsb
and
ret
stos
test
and
sti
repnz
scas
cmp
leave
adc
and
add
sub
push
fcomi
call
cmp
dec
roll
leave
repnz
dec
push
pop
icebp
loope
jne
hlt
jbe
daa
lods
loopne
pop
fmuls
sti
push
in
push
push
xor
testb
jmp
xchg
out
sahf
cs
sbb
imul
das
xor
aaa
add
nop
dec
mov
mov
xor
pop
bound
fmul
push
push
xchg
fisttpl
pushf
mov
xchg
iret
jbe
or
push
je
adc
mov
cmp
pop
mov
xchg
push
lea
das
jecxz
inc
jae
mov
fistpl
xchg
lods
cmp
mov
push
mov
insb
mov
ret
adc
sar
fdivrl
iret
je
push
jno
adc
jecxz
pop
pushf
or
push
inc
push
pop
scas
mov
jbe
cli
sti
add
movsl
ror
test
dec
cmp
lods
fwait
insl
or
jo
stos
inc
fucom
int3
xchg
enter
dec
mov
sbb
sarl
jg
or
xorb
inc
insl
mov
and
sbb
pushf
lret
ljmp
fildll
jno
pop
cli
pop
mov
pusha
pop
clc
lock
pop
popw
sbb
xchg
sahf
movsb
push
cli
mov
pusha
inc
add
mov
pop
repz
push
in
xchg
push
mov
js
rol
mov
repz
repz
sbb
loopne
loopne
mov
movsl
or
xor
test
lods
xor
adc
push
mov
addr16
inc
shll
inc
pop
mov
mov
filds
xor
pop
movsl
or
scas
pop
jo
stos
jmp
fldenv
inc
pop
push
lds
adc
jo
mov
in
cmp
mov
mov
xchg
cmp
jecxz
push
push
sub
movsl
dec
jne
xchg
mov
int3
pushf
jmp
inc
inc
and
ljmp
pop
push
add
aam
adc
aaa
out
mov
fildll
jp
mov
xor
aam
dec
jns
hlt
lea
lods
mov
movsb
andb
loope
adc
xchg
pop
jge
mov
sti
popf
movsl
testl
add
xlat
cmpl
lods
cld
inc
pop
mov
nop
decl
repz
push
add
lret
pop
xor
fisttps
je
nop
mov
xchg
icebp
pop
mov
or
shl
in
mov
fildl
adc
adc
scas
rolb
or
mov
jne
mov
aam
lcall
pop
add
push
out
sbb
adc
icebp
sub
mov
dec
out
aaa
mov
adc
mov
nop
lods
push
ret
fstl
mov
dec
enter
xchg
outsl
lods
sbb
lahf
inc
rolb
xchg
pop
inc
sbb
xchg
mov
fistl
cmp
lahf
stos
pop
mov
dec
ja
or
lret
cmc
test
pop
jecxz
inc
cmpsl
in
mov
or
out
cmpsw
mov
mov
pushf
movsb
pop
sbb
lahf
arpl
xor
addr16
jo
sti
imull
push
sub
jnp
push
or
pusha
icebp
xchg
push
movsb
and
cmp
push
idivl
sbb
mov
popl
pop
xchg
repnz
addl
ja
push
xchg
mov
jp
pop
fcmovnb
jb
rcr
cli
pop
lods
push
fldcw
jg
es
filds
loop
stc
gs
mov
xchg
dec
aad
xchg
cwtl
xchg
inc
xor
mov
inc
sub
das
adcb
dec
mov
pop
scas
rcll
std
stc
iret
cmc
movsb
and
or
gs
or
mov
dec
cmc
or
xchg
add
jmp
loop
or
int3
sbb
xchg
popf
sti
push
ret
and
push
xchg
movl
push
add
jg
cmp
movsl
incb
sti
mov
repz
pusha
sub
fistl
fpatan
add
mov
xchg
stos
xor
mov
sub
aad
push
push
test
dec
xor
jmp
mov
push
xchg
pop
test
dec
cld
pusha
icebp
subl
xor
mov
and
lcall
mov
pusha
xchg
ret
pop
mov
jge
mov
lahf
pusha
fnstsw
in
pop
xchg
aam
jg
test
scas
ljmp
pop
shr
push
add
and
lods
movsb
push
ljmp
lahf
aam
xchg
xchg
test
jmp
lret
shlb
jbe
adc
lods
adc
fistps
iret
pop
loope
pop
dec
shlb
loop
add
hlt
fsub
push
fbld
mov
out
filds
ror
mov
and
or
int
dec
push
int3
mov
inc
push
rcrb
cmp
mov
outsl
pop
popa
mov
xor
pop
push
fnstcw
lcall
jno
add
pushf
cmp
push
cmp
mov
std
ljmp
mov
cmpsb
push
xchg
nop
xor
jg
dec
sub
push
fldt
mov
push
push
rorb
jne
inc
ficompl
push
sub
test
hlt
xor
xor
lock
add
popf
ds
imul
adc
cmp
xchg
stc
mov
jbe
arpl
das
incl
pop
das
int3
mov
enter
leave
lcall
and
andb
or
jns
das
mov
mov
push
cmpsb
and
pushf
inc
dec
fnclex
inc
out
sbb
xor
xor
mov
mov
and
or
jmp
aaa
xor
jp
ja
inc
add
sbb
cmp
popa
and
jo
cli
jns
lahf
dec
test
push
mov
sub
xchg
and
push
mov
sub
and
nop
pop
out
mov
bnd
jmp
and
add
push
push
jmp
mov
pop
inc
jp
sbb
mov
popf
push
mov
add
adc
jl
push
iret
adc
push
test
shlb
add
jo,pt
int
cs
sahf
or
xchg
movsb
dec
fistl
ret
mov
mov
shl
adc
mov
mov
repnz
pop
mull
jne
ret
pop
add
pop
cli
pushl
push
xor
arpl
jns
xchg
mov
and
jg
inc
arpl
sahf
push
mov
jl
aaa
inc
lods
test
sub
dec
xchg
ja
mov
in
xchg
adc
les
inc
jecxz
and
mov
loop
push
jle
lock
mov
test
xor
cmc
fcoms
xchg
push
mov
mov
push
dec
xor
push
or
dec
mov
xchg
std
dec
in
dec
adc
out
imul
in
xlat
xchg
dec
sahf
mov
jae
shll
fcom
xor
push
iret
lcall
jg
sub
cwtl
movsb
jge
sbbl
push
dec
xor
fldt
loope
xchg
jae
fistps
scas
lods
addb
jmp
cltd
pushf
xadd
lret
cmp
sbb
xchg
mov
or
xchg
jnp
insl
pushf
pop
hlt
mov
pop
dec
jno
lods
and
adc
dec
jmp
and
movsb
shr
jb
push
sub
push
sub
subl
ret
fdivl
mov
imul
leave
push
aaa
aas
mov
and
push
jb
rcrl
icebp
xchg
addr16
fsubl
sahf
leave
ret
push
cld
mov
test
test
aas
inc
int3
jne
insl
sbb
pop
dec
and
imul
testb
imul
ss
neg
pop
jns
int3
adc
int3
and
cltd
ss
fsubrs
in
es
jbe
outsl
sbb
lret
jo
fdivs
fstl
fstpt
test
pop
xchg
jnp
mov
push
enter
cmp
pop
and
push
in
xor
push
call
ret
jnp
clc
lcall
dec
out
sub
rorl
jae
aaa
outsb
cmp
adc
mov
imul
push
addb
cmp
in
jg
pop
push
ficompl
adc
mov
movsl
aad
sub
xor
mov
outsl
mov
xchg
clc
cld
les
leave
push
test
mov
push
pop
dec
popf
or
cmc
call
call
jg
mov
call
mov
sbb
pop
sbb
lea
mov
sub
pop
jo
mov
dec
cld
cld
inc
stos
push
sbb
lahf
in
or
push
xchg
mov
int
aaa
es
loop
in
decb
call
jecxz
xor
pop
out
iret
xorb
jg
xchg
stos
jbe
adcb
cmc
jp
cld
sub
aam
xchg
inc
mov
add
lcall
or
iret
in
push
mov
xlat
nop
cwtl
dec
jge
push
pop
pop
mov
mov
daa
ds
shrb
adc
xchg
and
mov
outsb
imul
inc
push
in
xchg
enter
mov
std
retw
sarb
adc
jbe
jg
adc
testb
ds
mov
mov
adc
pop
push
push
or
xor
jne
loop
int3
and
pusha
call
push
sub
mov
inc
dec
andl
adc
jns
and
xchg
and
adc
and
je
push
push
sbb
push
push
movsb
push
inc
sub
outsl
mov
ret
std
mov
mov
out
mov
adc
jecxz
stc
repz
ljmp
push
mov
xchg
xchg
mov
in
inc
out
stc
cmp
xor
xor
inc
push
dec
push
mov
add
repz
xchg
pop
push
iret
cmp
xchg
mov
sub
add
sbb
fs
es
mov
lcall
sbb
cli
cli
xor
sbb
mov
mov
rcrl
cld
cmpsb
jnp
mov
and
fisubrl
add
adc
hlt
fs
insl
movsl
imul
hlt
pop
hlt
adc
xor
xchg
movsl
jnp
or
imul
dec
push
sub
add
pop
pop
adc
dec
pop
dec
adc
mov
jnp
pop
dec
std
fisubl
or
xchg
cmp
push
repnz
jbe
lods
add
fwait
popf
insl
inc
pop
sbb
mov
shl
repnz
daa
push
cmpsb
les
addr16
or
cmp
push
xor
loopne
cmp
dec
push
mull
je
mov
test
cmp
je
mov
mov
mov
jle
imul
cmc
inc
test
dec
jnp
ret
pop
mov
jae
popl
sub
inc
pop
cmp
adc
mov
inc
vcvtsd2ss
xor
ss
test
dec
dec
orb
lods
mov
mov
jb
xor
cmp
adc
loope
out
adc
push
or
in
mov
inc
and
dec
add
stos
dec
mov
call
das
inc
jmp
adc
popa
adc
xor
dec
lock
xchg
or
popf
pop
mov
dec
pop
xchg
mov
jne
jne
pop
dec
mov
mov
and
in
push
xchg
and
pop
movsl
repz
lcall
std
push
cli
push
pop
push
sbb
flds
aam
pop
mov
mov
inc
or
fwait
sbb
fs
and
out
mov
push
cmpsb
clc
inc
leave
and
andl
inc
lods
jns
fisttpll
xor
cmp
add
mov
insb
cmpsb
or
pusha
loope
repnz
jns
pop
int
es
xchg
shrl
inc
outsb
or
mov
fists
pusha
jg
ficompl
xlat
int
sub
cmp
mov
stos
insb
std
inc
push
int3
lock
mov
pushf
test
adc
add
cmpsl
jno
sbb
jl
xchg
cwtl
in
lods
imul
fmull
mov
mov
or
mov
jge
jno
jl
adc
dec
aam
std
ljmp
mov
mov
test
insb
push
cmp
cmp
and
int3
mov
in
test
repnz
jmp
add
pop
lock
push
imul
repz
sbb
mov
adc
mov
adc
orb
mov
test
iret
cmp
adc
inc
dec
shrb
fimuls
cmpsl
mov
dec
pop
push
pop
dec
mov
jg
aaa
and
jnp
xchg
daa
sbb
add
push
enter
xchg
mov
pop
aaa
imul
mov
push
and
jb
cmp
push
frstor
lock
cmp
andb
pop
or
fsubp
adc
inc
jmp
mov
icebp
cmp
dec
out
ret
or
cld
and
enter
sub
stos
pushf
daa
in
ds
aam
cmp
enter
int3
fistps
outsb
clc
pop
out
xor
imul
mov
repz
and
test
adc
jns
out
or
and
subl
cmpsb
mov
repz
cli
dec
ljmp
out
xor
push
xchg
fs
push
pop
pop
rorb
in
xor
aaa
mov
in
cmp
xchg
xlat
loop
push
jmp
jmp
out
mov
dec
mov
leave
cmp
jns
push
push
mov
adc
dec
ds
adc
popa
sti
js
xchg
cwtl
jmp
int
add
hlt
inc
leave
adc
xor
leave
mov
test
ret
xchg
nop
xchg
mov
stc
lahf
cmc
and
jle
sub
mov
gs
aaa
test
xor
lds
les
and
test
dec
jp
adc
cmpsl
lcall
mov
xchg
and
lock
xor
mov
fiadds
fidivl
lea
xchg
repnz
sbb
stos
cs
je
fidivrs
repz
out
cmp
lret
push
lahf
ja
stc
call
xrelease
mov
sub
popa
bound
insb
enter
jg
mov
lcall
iret
jmp
xor
lea
push
outsl
lds
inc
test
mov
nop
aas
repz
icebp
aam
lret
popf
cmc
inc
adc
rolb
rcll
cmpsb
xchg
and
loopne
jle
ds
lahf
test
fdivrl
lahf
and
push
cmp
das
cmp
mov
mov
jns
mov
jg
mov
and
arpl
add
adc
or
stos
or
stc
movsl
clc
jmp
mov
mov
adc
jle
push
mov
rol
prefetchwt1
or
and
jmp
adcl
dec
scas
push
xchg
outsb
sub
fstps
aaa
inc
addl
push
fidivrl
loop
mov
push
adcl
stos
int3
outsl
orb
dec
jg
pop
sbbl
shrb
in
mov
in
push
ds
xchg
fisttpl
inc
inc
pminub
jae
dec
repz
xchg
lods
mov
push
mov
mov
push
mov
out
jb
addl
insb
fwait
test
dec
mov
pop
out
sysret
aaa
lret
adc
xchg
out
dec
sbb
test
arpl
inc
fisubl
xor
dec
dec
stc
lods
xchg
ljmp
sub
fisubs
fstpl
push
iret
jg
mov
js
add
sbb
in
push
jl
or
nop
je
ret
shll
out
addr16
pop
inc
pop
ljmp
shr
mov
icebp
cmp
xchg
mov
push
jb
call
xchg
nop
add
lcall
jns
leave
scas
dec
daa
and
add
fnstsw
dec
jnp
add
xor
push
cmp
orb
enter
es
lcall
sub
inc
arpl
imul
dec
gs
adc
push
xchg
orb
mov
adc
stos
jno
lret
cwtl
sbb
dec
cmp
insb
inc
out
sub
dec
mov
xor
xchg
inc
repz
and
cmp
push
xchg
push
or
push
mov
sti
mov
adc
push
inc
cltd
cli
push
adc
movsl
xchg
xchg
in
sub
pusha
mov
stos
fs
push
mov
push
jl
sti
into
add
fisubrs
and
dec
shrb
jmp
or
jno
daa
dec
negl
pop
mov
nopl
and
scas
mov
mov
jmp
mov
insl
sub
repz
xor
test
mov
add
fs
jle
pop
int3
sbb
mov
mov
adc
dec
rcr
lods
pop
sub
fisubs
les
and
lret
cmp
pop
lods
js
add
or
loope
jmp
into
lods
das
and
cld
sarb
lods
and
addr16
in
xor
ljmp
sbb
leave
jb
adc
mov
sbbb
pop
sub
push
adc
vpminub
popa
addr16
mov
dec
jb
lret
ret
test
sbb
xchg
sub
cld
je
cs
enter
fisubs
stos
push
iret
jecxz
out
cmp
mov
out
or
test
push
jnp
inc
cmp
shl
outsl
mov
addb
lret
aad
aam
fcomps
popa
aas
add
lods
and
inc
push
add
pop
pushf
fisttpll
cmc
push
fwait
and
leave
out
mov
dec
movsb
or
pop
in
je
test
push
xor
movsb
sub
cmp
pop
iret
fwait
mov
xchg
cmp
ds
jno
bound
push
xchg
mov
jo
mov
cmpsb
sahf
sbb
inc
adc
or
fsubrs
gs
inc
mov
ja
cmp
clc
mov
jmp
sti
fisubl
js
add
dec
arpl
and
xchg
dec
out
inc
add
mov
lahf
int3
loopne
addr16
xchg
fimull
test
mov
dec
lock
xchg
dec
xor
lock
jg
test
and
scas
aad
sbb
pop
stos
les
rolb
fnstsw
mov
jns
out
add
bound
xchg
jecxz
bound
pop
imul
movsl
into
xor
mov
loopne
xlat
adcb
cwtl
jnp
repnz
and
js
shrb
mov
sub
lret
loope
mov
pop
push
movsb
test
movq
mov
shlb
inc
add
jo
mov
hlt
cmpsb
dec
xor
push
xor
cmp
adc
pop
mov
mov
imulb
pop
lret
xchg
push
sahf
inc
and
sub
leave
sbb
push
fdivrl
and
cmp
aam
and
sub
pop
daa
mov
adc
mov
faddp
jmp
or
mov
xchg
jmp
xor
xor
imul
cwtl
adc
fnstsw
ret
roll
cmpsl
lahf
cwtl
sbbl
adc
lret
ja
pop
ret
or
pop
or
cmc
loopne
push
and
and
inc
stc
xchg
movsb
sbb
jecxz
push
pop
jne
lahf
sbb
fprem1
repnz
or
psubsw
dec
mov
xacquire
xchg
inc
sbb
jnp
enter
aas
push
and
push
lcall
lds
pop
sub
int3
je
pop
cmp
loop
cmp
test
fcomps
insl
test
pusha
js
clc
jmp
adcl
pop
jbe
add
push
stos
pop
xchg
jae
addr16
mov
clc
ror
adc
mov
cmpsl
stc
pop
cmpsb
xchg
mov
jnp
adc
ja
pop
pusha
push
imul
ret
test
xor
call
movsl
in
jecxz
imul
dec
jns
jge
rorb
call
cli
xlat
lret
and
outsb
dec
xchg
outsb
xchg
inc
mov
cmpsb
addr16
mov
loopne
cmp
mov
push
adc
in
push
lret
mov
sarl
in
stos
arpl
int3
cmp
jecxz
add
lock
jae
cltd
cmp
ss
adc
enter
test
add
push
xchg
sub
xor
push
jbe
outsl
fst
loope
lcall
out
fbld
mov
hlt
aad
adc
fsubr
dec
jae
mov
mov
jo
ficompl
pop
xchg
cld
fcmovb
dec
jbe
inc
push
fs
jne
stos
nop
dec
popa
neg
inc
mov
jle
andl
inc
push
ljmp
sbb
mov
or
sbb
mov
add
movsb
xchg
aaa
aaa
divb
mov
xor
cmpsb
shrb
out
sahf
mov
push
push
cltd
call
stos
loopne
push
hlt
popa
sti
ljmp
ds
inc
push
add
aad
pop
hlt
jecxz
test
in
sub
ss
xor
lret
mov
push
dec
sahf
jno
aam
sarl
xchg
push
pop
repz
rep
add
jbe
cmp
es
cmp
js
repz
sub
ljmp
ss
loop
adc
or
jo
push
jno
xor
scas
scas
xor
lods
inc
out
into
rcll
lret
cmpsl
faddp
cmp
cmpl
sbb
cli
mov
mov
movsb
sti
or
dec
cmp
cld
jmp
add
loopne
in
or
mov
push
cmp
mov
sub
lods
daa
aas
mov
mov
push
adc
sarl
jg
out
out
adc
xor
xor
pop
xor
inc
lea
inc
push
in
in
cmp
out
fcomps
inc
shrl
cmp
jecxz
adc
pop
jo
ss
popa
jb
leave
inc
loop
inc
ds
jno
xchg
arpl
sub
in
mov
dec
jp
test
shlb
rcrb
in
and
arpl
xor
lret
rorl
xchg
cmpsb
shll
sub
pop
cmp
ficompl
cmc
notl
dec
pop
testb
inc
loopne
out
mov
dec
nop
mov
mov
xor
push
sub
cmp
into
mov
sub
rorl
xchg
sub
sbb
aaa
stos
test
pop
mov
insl
or
loopne
daa
out
lret
mov
sbb
adc
je
add
arpl
pop
cmp
mov
xor
pop
mov
push
ret
xorl
sarb
shlb
dec
jnp
adc
ja
in
xor
iret
xchg
aaa
dec
mov
mov
pop
adc
add
xchg
out
out
call
push
mov
adc
shll
push
push
lock
bound
cmp
iret
cwtl
sbb
push
pop
daa
gs
mov
inc
add
mov
pop
mov
push
or
add
in
jae
jb
cmp
mov
jl
jno
jmp
jne
out
mov
pop
push
test
push
mov
add
je
cmp
les
dec
fsubs
loope
popa
bound
pop
mov
dec
rclb
ret
fdivs
pop
mov
movsb
hlt
cltd
dec
inc
xor
push
add
loope
js
enter
and
push
pop
cwtl
enter
negl
rep
aam
int
and
mov
imul
test
in
loope
lea
jle
push
test
mull
jecxz
cmp
mov
adc
or
scas
imul
jno
out
inc
xor
mov
daa
sub
add
cmp
test
popa
push
fwait
xchg
xor
lock
jle
icebp
lods
pop
jge
pop
in
xchg
sub
addr16
stos
push
dec
push
cmp
xor
xor
cltd
xorl
and
outsl
iret
and
pop
push
ret
shl
les
lods
pop
gs
lret
pop
xor
pop
movsl
divb
daa
cwtl
mov
adc
cld
mov
out
stos
xchg
xchg
aas
push
sbb
cs
add
inc
dec
mov
lahf
fistpl
lea
fs
adc
cli
jmp
and
roll
cmc
test
pop
scas
or
xor
cmp
movsl
bound
int
push
push
pop
xchg
insb
incb
jmp
push
stos
mov
sbb
outsb
xchg
pop
pop
mov
fwait
add
adcb
mov
insb
outsl
mov
mov
jbe
inc
sub
stos
adc
sbb
je
outsb
hlt
xchg
inc
out
cli
pop
js
enter
cmc
repnz
je
daa
fstl
aas
popf
shll
jecxz
mov
dec
ffree
movsb
mov
xor
sti
adc
jmp
stos
arpl
cmc
adc
je
jo,pn
mov
rclb
jg
je
jns
lret
out
data16
subb
arpl
mov
mov
loopne
inc
adc
jmp
add
fildl
mov
mov
inc
xor
or
movsb
ljmp
es
dec
xorb
sahf
pop
test
or
incb
test
add
arpl
movsb
adc
xchg
mov
jl
cwtl
outsb
js
rcrb
cmp
loop
cltd
imul
sbbb
xchg
xor
enter
cli
mov
xchg
jae
add
hlt
push
mov
mov
psubb
sbb
pop
cmp
outsb
std
jne
pop
pop
outsl
fidivl
ja
sbb
loopne
js
sbb
outsb
dec
xchg
pusha
dec
mov
cmp
xchg
mov
pop
ja
cld
adc
cmp
pop
lock
xchg
jnp
jl
push
push
adc
sbb
cmp
add
fnsave
out
data16
hlt
pop
mov
test
pop
adc
mov
lock
flds
add
fsubs
sbb
dec
mov
mov
cmpb
fsubrl
mov
or
ss
gs
inc
aaa
iret
pushf
xchg
pop
lahf
sub
sbb
clc
jp
sbb
jne
nop
pop
jmp
mov
rcrl
jp
cmp
push
andb
adc
jp
jmp
ds
loope
lea
sub
dec
in
jle
mov
dec
mov
int3
inc
jmp
test
sub
add
lds
cmp
stc
mov
mov
sarb
hlt
jns
and
cmp
cli
pop
stos
add
insl
aam
daa
test
inc
or
jge
sbb
enter
sahf
jbe
aas
push
popf
sub
and
andl
repz
xorb
pushf
ficoms
xor
std
test
and
mov
xor
lret
cmp
pop
dec
xchg
and
xor
push
lods
add
fmuls
jo
adcb
adc
mov
popf
dec
sbb
sbb
jmp
xor
dec
outsb
in
inc
mov
xchg
icebp
adc
xchg
pop
cmp
xchg
and
pop
mov
out
xchg
loopne
cwtl
adc
pop
scas
xchg
fsubs
mov
mov
addl
rorb
in
repz
jne
pop
cmp
popf
inc
inc
call
jge
outsl
stos
out
jbe
outsb
shl
xchg
push
lods
push
enter
xchg
fsubl
xor
inc
cmp
jg
push
rorl
shll
sub
or
pop
shrl
fs
dec
mov
jo
es
cmp
mov
mov
mov
es
out
lea
hlt
cltd
in
in
xor
dec
adc
push
leave
xor
mov
mov
pop
stc
stc
sub
mov
popa
gs
fbld
fucomip
mov
call
fidivl
cmp
sub
sub
mov
aam
adc
stos
bound
aas
outsl
mov
insl
fisubs
jae
adc
mov
pop
out
mov
out
insl
sub
and
xchg
popf
iret
add
data16
dec
jge
dec
pop
or
out
pusha
adcl
rolb
push
sarl
inc
mov
jnp
sub
jnp
mov
and
sti
jae
ss
adc
add
inc
andb
pop
cmc
jnp
mov
push
scas
cwtl
hlt
mov
jns
stc
fucom
iret
std
mov
pop
test
clc
jae
xchg
adc
clc
fcmovbe
pop
repnz
xchg
adc
sbb
fldl
mov
loop
scas
mov
nop
adc
test
mov
ficoml
shlb
lea
ja
lret
rolb
inc
mov
int
mov
popa
jmp
test
inc
test
popf
insl
jge
subb
or
xchg
aaa
test
and
lahf
mov
add
push
inc
loopne
ficoml
popf
cmpsl
xor
idivl
test
outsl
jbe
push
les
sarl
lea
push
repnz
mov
pusha
push
cltd
xor
fsubr
loop
jl
xor
scas
mov
xbegin
mov
mov
or
push
jbe
mov
shll
in
mov
inc
xchg
and
leave
xor
into
sti
jno
jns
les
inc
sarl
rcrb
xor
jmp
xor
mov
rclb
in
mov
jo
inc
leave
pop
lock
xor
cmp
mov
pusha
mov
jb
das
test
or
sbb
sub
imul
les
fwait
repnz
inc
test
inc
xchg
stos
aam
dec
fistpl
cmp
or
xchg
or
stc
outsb
sbb
lret
scas
sahf
sbb
sub
out
xor
ret
lea
mov
test
or
fidivrl
mov
xor
mov
or
imull
pusha
pop
push
jb
sbbl
ljmp
sbbl
in
js
jnp
js
and
push
mov
mov
repz
stos
fiadds
and
pop
lods
out
xchg
cld
push
push
inc
lock
xchg
dec
outsb
hlt
sahf
arpl
and
dec
pop
xchg
icebp
mov
sub
out
xchg
xchg
push
sub
add
xchg
hlt
mov
add
xor
and
or
iret
fmul
jns
sbb
lret
sti
sub
add
jmp
mov
divb
fisubrs
xor
adc
xor
ds
lds
or
and
mov
leave
rolb
or
ja
in
dec
lods
ret
cltd
xor
es
popa
ja
xchg
lret
std
push
aam
cld
sti
pop
rcrl
inc
dec
andl
cld
popf
mov
jl
cltd
sahf
push
sub
test
ret
movb
mov
std
outsb
inc
repz
fldenv
js
adc
mov
mov
push
pop
cld
mov
in
dec
lret
inc
subl
jl
add
or
scas
mov
adc
cmp
mov
sub
xchg
movsl
and
mov
jne
adc
push
add
pop
ja
and
fnstsw
jl
mov
arpl
mov
mov
add
fst
test
push
ret
scas
popf
dec
repz
outsl
mov
fwait
das
mov
sti
and
sahf
mov
popf
fidivrs
cmc
add
adc
cmpsl
bound
mov
fdivrs
mov
orb
mov
jae
add
xchg
sub
insl
ss
push
mov
jne
fisubs
cmp
xor
pop
pmaddwd
das
mov
movsb
int
lahf
mov
scas
loope
add
pop
arpl
lahf
xchg
ret
cmp
fdivp
shrb
add
mov
sarb
mov
ljmp
inc
into
mov
sbb
scas
inc
scas
fstpt
adc
insl
and
push
test
fnstcw
sbb
jmp
dec
cmp
inc
lods
je
add
lcall
mov
popa
sub
sbb
dec
enter
sbb
in
mov
fs
fnstenv
loop
jecxz
push
andl
in
lods
hlt
test
adc
push
mov
test
xchg
mov
xor
data16
cmp
xchg
mov
sahf
pop
jne
cli
inc
mov
add
lods
mov
icebp
cltd
ja
sub
cli
pop
mov
fisubrl
xchg
adc
push
ret
xchg
mov
test
ljmp
sub
mov
adc
mov
sbb
stc
xchg
gs
test
sbb
xchg
mov
and
jle
push
sub
cmp
popf
sub
lods
xchg
mov
mov
lock
add
add
jmp
jne
jbe
push
mov
scas
lret
mov
mov
insl
stos
ljmp
cmc
xchg
push
cmp
pop
jp
test
add
lcall
lock
mov
add
add
jno
call
pop
test
lods
out
enter
cmc
aad
in
out
push
cmc
lret
inc
movsl
std
inc
xadd
or
and
sahf
aaa
pop
sbb
fcomp
add
sbb
xchg
fdivp
stc
pusha
insb
lret
jge
aad
scas
mov
movsb
rorb
inc
std
jmp
xchg
jle
push
std
cmp
shlb
clc
sbb
mulb
pop
jecxz
adc
cmp
int3
std
fstpt
add
inc
push
out
push
cmp
xorl
mov
cmp
cmpsb
int3
dec
scas
sarl
loopne
es
ret
add
insb
pop
add
pusha
pop
loopne
dec
in
jg
xchg
jb
inc
loopne
cmp
dec
loopne
mov
xor
fcompl
dec
inc
loope
mov
push
dec
cmp
cs
enter
sti
in
cli
jbe
in
inc
call
or
jg
mov
jmp
jns
and
jne
mov
xor
imul
sbb
jmp
aad
cmp
adc
push
scas
cld
push
jp
sub
jae
inc
fidivrs
out
xchg
adc
repnz
mov
push
and
shrb
xor
cmpsl
lret
pmulhw
cmpsl
xchg
jle
test
mov
mov
outsl
das
mov
mov
jns
mov
dec
or
popf
ror
cmp
xor
or
cmp
call
sbb
rcrl
inc
add
push
push
cmpsb
adc
push
add
lcall
push
std
jmp
test
fwait
mov
jecxz
mov
adc
lods
xchg
jp
insl
aad
arpl
outsb
roll
popa
dec
ror
mov
mov
scas
aaa
cwtl
out
and
xchg
out
ljmp
les
aam
mov
and
aam
inc
scas
sub
jae,pn
xchg
inc
in
cmp
outsb
fists
add
sub
push
mov
jnp
push
imul
push
ss
je
insl
fs
mov
inc
dec
fadd
xor
mov
mov
pop
cmp
adc
jecxz
mov
fucom
shrb
jnp
dec
outsb
xor
or
int3
pop
dec
in
arpl
pop
or
sbb
test
jl
mov
pop
clc
sbb
mov
adc
jecxz
jae
add
mov
insb
sub
push
add
jns
jmp
sub
sbb
push
inc
cmovge
into
cwtl
sub
jno
addr16
daa
or
icebp
jo
xchg
or
push
in
je
test
push
xlat
xchg
dec
mov
add
add
rcrl
ja
loopne
testb
cmp
lahf
pushf
cmp
push
aam
flds
pop
dec
popa
sub
and
aas
testl
mov
adc
call
add
xchg
mull
jmp
and
dec
push
push
shll
cmp
pop
adc
push
and
mov
push
int3
xchg
ja
addl
mov
lahf
add
mov
out
pushf
call
leave
popa
ljmp
xor
pop
dec
mov
in
pop
adc
data16
rcr
adc
mov
jge
jmp
les
lret
mov
add
aas
mov
or
movsl
mov
sahf
cmp
aad
pop
insb
fdivrp
push
jge
mov
jecxz
push
leave
js
lds
mov
mov
repnz
mov
mov
addr16
mov
pop
test
insb
add
subb
adc
pop
mov
decb
push
pop
das
jno
jno
adc
add
xchg
xchg
es
in
mov
sbb
cmp
cmpsb
popa
dec
inc
repnz
jns
xchg
jbe
pushl
shrl
ljmp
imul
idivl
lret
jle
cwtl
mov
sub
xor
sub
push
xchg
sar
lea
cmpsl
inc
stos
rcll
inc
int3
adc
inc
pop
and
mov
ljmp
jnp
mov
jecxz
xchg
sub
imul
xor
jmp
inc
add
cmp
cmp
push
lods
cld
sub
outsb
movsb
xchg
jmp
faddl
std
mov
mov
mov
adc
xchg
arpl
clc
cmp
pop
pop
ret
mov
mov
hlt
cwtl
push
lock
inc
or
aaa
bnd
call
or
push
and
jmp
xchg
lds
lods
xor
push
adc
add
ss
xchg
and
fidivrs
rcrb
js
mov
inc
jge
je
xchg
imul
popa
movb
adc
dec
dec
movsb
xchg
cmp
cmp
xor
xchg
loopne
loope
push
xchg
sarb
mov
les
sbb
xchg
loope
push
shr
repz
mov
mov
sti
cmpb
pop
clc
xchg
add
cs
push
or
mov
inc
dec
clc
stos
and
mov
hlt
mov
push
mov
mov
sub
sub
jg
push
jb
fwait
inc
xchg
popa
cmp
lea
mov
mov
sti
imul
test
pop
pop
cld
nop
loope
pop
sbb
push
push
mov
xor
mov
orb
mov
xchg
icebp
ja
rcrb
xchg
in
sub
jo
push
and
mov
ret
rol
je
bound
pop
push
gs
lods
mov
lret
ror
mov
subb
mov
repnz
mov
fimuls
iret
inc
das
icebp
lcall
loop
or
mov
faddp
add
fbld
pop
stos
movsl
ret
imul
pop
add
cld
lods
lea
aaa
sub
mov
notl
push
inc
jp
subb
rolb
pop
jle
int
adc
mov
repz
fldcw
es
jns
cli
lret
fldcw
test
nop
fmuls
mov
daa
in
cmpsl
sub
lods
imul
ret
andb
adc
dec
pop
loopne
adc
jae
mov
ds
enter
add
sub
lea
fmuls
push
shrb
enter
clc
mov
fisubl
incb
jns
sarl
sti
jo
into
cltd
call
popf
mov
inc
cmp
push
shl
sahf
fdivl
xor
out
and
push
push
negb
sarb
popf
adc
scas
jno
jns
sub
mov
xor
dec
or
into
mov
jecxz
mov
lcall
jl
mov
popa
in
frstor
subb
push
aaa
rcrb
sbb
lret
xor
test
lds
dec
test
popa
xor
sbb
jp
mov
movsl
push
dec
adc
je
imul
push
xor
sbb
stos
jns
inc
clc
sbb
push
call
mov
pop
outsl
repnz
push
dec
dec
push
scas
adc
setne
sbb
popa
iret
fistps
outsb
adc
gs
dec
jne
hlt
jns
imul
orl
clc
sbb
add
xchg
cwtl
pop
adc
lods
inc
shlb
add
addl
ret
inc
push
jb
gs
sbb
mov
lock
add
jmp
pop
xchg
dec
test
mov
adc
and
cmp
out
mov
mov
push
sub
inc
xchg
loope
or
shl
mov
fisubs
and
cwtl
cld
or
mov
les
cmp
xchg
lds
inc
or
sarb
xor
inc
jl
xor
sub
add
xor
insl
cli
jmp
inc
sub
aam
mov
inc
xor
mov
push
mov
fsubs
mov
ljmp
insb
cmpsl
insb
inc
and
sbb
ret
notl
loopne
cmpsl
add
mov
push
push
and
adc
pop
and
xor
pop
insb
in
push
sbb
cltd
cmp
scas
std
iret
loope
mov
nop
outsb
outsl
add
subb
lds
pop
jae
inc
mov
or
push
lods
sub
rolb
add
xlat
filds
xchg
and
call
jge
xor
test
xor
outsb
je
and
cltd
inc
push
mov
mov
sub
int3
mov
inc
lret
outsb
lahf
fsts
mov
cwtl
mov
sbb
jb
lods
lret
hlt
shrb
cmp
lods
inc
pop
mov
movsl
pushf
pop
jns
pushf
push
mov
add
sbb
mov
jne
cltd
jae
insb
xchg
xchg
movsb
pusha
cmpsb
jne
adc
mov
xor
fidivs
addr16
imul
ljmp
pop
sbb
ljmp
lea
cli
lds
sti
orl
dec
dec
xchg
dec
fs
mov
pop
push
incb
lcall
xchg
cmp
or
ret
mov
lcall
sbb
dec
leave
push
cmp
and
cmpsb
imul
enter
hlt
popf
js
js
scas
pop
cli
and
sarl
jns
mov
adc
bound
cs
movsb
xor
outsl
fiadds
cld
jo
adc
adc
and
adc
in
mov
pusha
cmc
cli
jo
rorb
jecxz
mov
hlt
loopne
shll
xchg
mov
lahf
jge
popf
jns
mov
cwtl
xchg
pusha
and
std
inc
pop
pop
les
push
in
xchg
mov
pop
add
mov
dec
hlt
lea
jecxz
push
cltd
xor
inc
xchg
or
xchg
insl
jecxz
xor
mov
xor
or
cmp
inc
dec
dec
xor
xchg
daa
sbb
sbb
jmp
loop
jmp
mov
test
or
and
adc
mov
xchg
lcall
lods
fs
imul
js
jo
jle
pop
pushf
xchg
mov
lock
clc
pop
inc
mov
cmpsb
or
ret
or
jo
mov
and
mov
fstpl
andl
in
mov
jp
push
pop
adc
mov
loopne
pop
lock
cmp
das
push
mov
dec
push
test
push
mov
jbe
and
mov
jb
outsl
lock
repnz
sub
sub
insl
test
icebp
nop
mov
sub
mov
and
add
add
push
addr16
out
in
call
cmp
cmpsl
mov
loop
test
or
push
pop
pop
sub
mov
lds
push
shlb
bound
lock
sbb
sarb
aaa
mov
stos
dec
outsl
sbb
xor
scas
in
mov
pop
insl
pop
aaa
aaa
pop
or
mov
in
stos
or
ja
mov
lahf
popl
iret
scas
out
imul
or
cs
adc
adc
cmp
sub
jns
stos
jo
sbb
dec
in
pop
movb
xor
popa
dec
or
aam
xchg
and
push
mov
push
adc
dec
jo
scas
test
jb
mov
lods
mov
xchg
xchg
or
je
stos
es
aas
lock
sahf
iret
xchg
lock
mov
jl
lods
push
mov
orb
movsl
scas
fimuls
cs
lock
sub
jb
das
out
xor
sahf
outsl
repnz
in
or
movsl
xchg
mov
or
jae
mov
jl
inc
add
push
icebp
jo
pop
into
outsb
movsl
mov
ljmp
cmp
add
cmp
cld
xlat
jge
les
pop
mov
clc
loope
adc
scas
jnp
pop
in
jge
scas
stos
ret
clc
cmp
mov
cmp
mov
add
jecxz
lods
ret
inc
pushf
dec
cld
pushf
jae
xchg
jnp
sub
ror
gs
repz
in
repz
cwtl
rcl
mov
add
imul
jno
xor
fwait
mov
imul
shl
mov
dec
jns
xchg
mov
mov
sbb
push
xchg
mov
inc
ja
insb
test
movsl
push
add
xor
ja
outsl
ja
lods
mov
movsb
popl
adc
icebp
ret
xor
or
int3
dec
daa
dec
rcrb
andl
push
leave
add
sbb
mov
outsl
pushf
fs
iret
ds
add
or
cwtl
daa
into
pop
sbbb
inc
xor
push
dec
ficomps
fcmovnb
adc
popa
out
or
test
pop
addl
pop
fstpt
pop
xchg
into
inc
stos
adc
leave
add
add
jmp
sbb
xor
dec
pop
xorl
insl
stos
int
or
test
scas
xchg
mulw
daa
js
idivl
sbb
pop
pop
mov
sub
insb
sahf
add
jp
xchg
pop
cmc
push
pushf
add
stos
popf
cwtl
mov
mov
mov
jno
stos
lods
lods
lcall
pop
xchg
fnstcw
mulb
jl
out
gs
rolb
xchg
iret
test
pushf
jnp
aaa
enter
and
outsb
cmp
inc
out
push
xor
iret
or
xor
out
pop
enter
loope
xchg
push
jae
das
stos
cmp
sti
scas
clc
shl
jecxz
add
mov
mov
pop
outsb
test
imul
dec
movsb
adc
es
mov
mov
jp
push
dec
and
push
lods
sub
sub
rorl
outsl
fsubrl
push
pop
mov
xchg
xor
cmpsb
dec
lcall
cmp
push
into
mov
mov
fsub
lods
fildl
cmp
ficoml
icebp
or
roll
call
jg
aam
pop
push
and
rcrb
xchg
nop
das
into
sbb
mov
jb
mov
or
out
or
adcb
shlb
cli
sarb
clc
sub
mov
hlt
pop
pop
or
bnd
lahf
leave
or
ret
test
xor
cs
loop
ret
stos
push
pop
jge
ret
or
stc
xchg
sbb
lret
xor
adc
popa
jecxz
xlat
sbbb
scas
fistps
cli
pop
xchg
mov
pavgb
std
outsl
ret
sub
sub
sti
mov
andl
cmc
push
lods
and
add
ret
dec
int
adc
lahf
hlt
andl
add
movl
movb
cmp
or
mov
xor
test
jb
push
aaa
mov
push
aas
test
mov
xchg
loope
pushf
cwtl
cwtl
jl
mov
popf
add
add
and
loop
mov
in
sti
xlat
lea
push
cld
sbb
xchg
nop
lock
jecxz
sub
push
vpsrld
iret
and
cwtl
loop
dec
mov
add
hlt
mov
adc
cmp
lahf
sbb
daa
cmp
out
sbb
dec
xor
test
movsl
mov
xor
pop
xchg
mov
shlb
xchg
jge
or
or
test
mov
daa
aas
push
fnstcw
xchg
test
out
dec
js
push
mov
add
pop
push
mov
mov
out
repnz
mov
push
into
movsb
out
push
pop
add
adc
mov
xor
inc
shrb
lcall
or
aam
xchg
mov
cmp
rcrl
daa
mov
xchg
dec
push
rcrb
sahf
mov
jmp
cs
ljmp
loopne
popf
fnstsw
push
aad
sbb
or
mov
inc
xchg
je
pop
movsb
aaa
sub
and
or
in
sub
outsl
aam
dec
push
out
jl
inc
adc
ds
pop
mov
xor
sub
aaa
mov
sbb
sbb
jns
sub
aas
xchg
shl
fldt
xor
std
add
lcall
sub
mov
nop
sub
stos
rclb
addr16
and
test
add
incb
cmp
cmp
sbb
fwait
loop
hlt
dec
pop
in
add
lret
cmp
pop
int
mov
mov
fsubs
jp
loop
cmp
pop
shl
lods
mov
stc
call
lahf
dec
inc
xchg
push
cmp
adc
adc
adc
cmpsb
in
mov
jl
push
xchg
add
call
sbb
scas
loopne
push
mov
jl
movsl
cmp
movd
fnsave
mov
dec
sub
aaa
dec
sub
addl
xor
mov
lds
push
jl
imul
mov
mov
mov
pusha
dec
adc
xchg
popf
int
inc
aad
xchg
shlb
mov
mov
scas
cmp
pop
mov
fildl
ss
hlt
jg
hlt
pop
mov
dec
push
loope
sub
mov
mov
bound
lock
insl
mov
ja
lods
int3
mov
test
inc
leave
sub
xchg
stos
int3
sarb
into
mov
js
jbe
mov
test
mov
dec
pop
lds
ja
sub
mov
mov
sub
xor
lea
shl
push
sbb
jl
imull
add
pushf
shll
aam
sub
and
fsts
mov
pop
push
or
jg
sub
dec
cmp
cmpxchg
inc
adc
push
push
push
mov
dec
cmc
or
jl
stos
mov
jae
jae
cli
in
shll
daa
xchg
mov
adc
scas
mov
addb
iret
mov
loop
push
mov
sub
stos
mov
test
sbb
sub
mov
sti
aad
out
fmuls
sbb
cs
push
mov
and
mov
outsb
sbb
insl
and
jo
pop
les
mov
push
push
mov
sbb
jb
dec
aam
or
push
lahf
ljmp
xor
or
loop
enter
jge
orb
out
mov
daa
mov
cltd
in
popf
xorl
pop
xor
adc
cs
in
adc
dec
sbb
andb
and
es
scas
in
jp
in
dec
sub
movsl
test
clc
cli
ljmp
push
mov
scas
incb
test
fwait
xor
imul
outsl
das
sub
movsl
mov
jle
jmp
cmpsl
movl
loopne
into
movsl
pop
arpl
cwtl
fwait
mov
sub
insb
jae,pt
cmp
mov
int3
adc
cs
inc
pushf
add
jmp
es
ss
js
frstor
push
inc
push
cwtl
xor
pushf
in
or
adc
jno
mov
add
int
mov
daa
adc
dec
sub
je
push
adc
gs
icebp
test
jne
repz
lds
aas
push
push
pop
icebp
lret
jle
in
outsb
ret
jg
cmp
mov
lods
mov
push
push
in
arpl
nop
sbb
jo
pushf
subb
out
xor
push
les
jne
pushf
mov
lea
mov
xchg
imul
dec
repnz
shl
jbe
mov
pop
lahf
cmp
sbb
mov
stc
cmp
pop
cltd
clc
dec
pusha
add
mov
jl
out
pop
insl
dec
jge
adc
add
pop
lods
sarl
add
adc
call
dec
pop
lock
xchg
insb
dec
pop
lcall
adc
cld
aad
pop
xor
jo
mov
add
push
aas
aaa
inc
nop
and
out
imul
gs
rcrl
iret
je
out
jl
mov
nop
mov
iret
push
pop
in
cli
mov
mov
mov
push
and
pop
clc
mov
test
xor
fadd
add
pop
cmp
sub
or
mov
mov
jg
xchg
mov
adcb
add
cltd
add
cmp
xchg
add
mov
sub
cmp
clc
pop
cld
lock
clc
mov
dec
cmp
insb
dec
outsl
mov
js
jg
push
mov
xor
fwait
xchg
xchg
sub
cmc
mov
loop
pop
int3
shlb
loope
adc
and
sub
into
scas
insl
xchg
fistl
jmp
xchg
mov
mov
xor
pushf
lea
inc
cmp
mov
mov
cmp
or
inc
outsb
fdivr
xchg
push
mov
mov
das
fcomp
sbb
xor
daa
out
push
fsubrs
scas
dec
xchg
js
jecxz
pop
and
out
adc
aam
jg
test
xchg
pop
mov
leave
pop
lret
xchg
push
mov
das
xor
adc
ret
jae
ret
jbe
leave
and
push
and
hlt
xor
mov
icebp
popa
outsb
outsb
mov
lcall
sub
or
adc
xlat
cmp
gs
stos
push
repz
push
mov
mov
jnp
imul
inc
and
pop
sub
stc
scas
xchg
cmp
push
insl
cmp
lcall
cltd
outsl
and
mov
push
mov
sub
test
adc
adc
push
sbb
cmc
nop
or
ja
movsb
xor
xchg
adc
lea
shrl
out
ds
shll
cwtl
imul
add
sub
push
push
incl
sbb
test
mov
lds
outsb
add
cmp
mov
ret
adc
cwtl
push
pop
add
mov
movb
inc
add
mov
add
fucomp
rorb
std
cmpsb
mov
orl
push
mov
fisubs
sbb
dec
xchg
pop
mov
ljmp
movsw
pop
jnp
mov
xor
lret
and
push
push
popa
fs
push
jae
jno
add
mov
push
sti
sahf
loopne
mov
lods
dec
add
aas
pop
sarb
inc
sbb
pop
push
movsl
add
xchg
shlb
add
add
mov
rorb
cli
pop
push
xor
lret
push
sti
gs
mov
adc
cmp
sahf
rol
setno
sbb
dec
jmp
add
sbb
lods
ds
push
push
mov
add
aas
mov
imul
lods
push
data16
cld
inc
and
or
pop
shrl
lock
dec
sub
pop
xchg
in
pop
icebp
dec
out
push
inc
lods
xchg
push
scas
loope
test
pop
bound
fistpl
inc
cmp
addr16
and
les
into
outsb
or
ret
pop
bound
dec
repz
sub
sbb
test
cmp
scas
dec
jnp
sti
scas
sub
mov
jmp
orl
mov
jecxz
shrb
aas
mov
lds
bound
ret
jg
fldenv
aam
out
pop
jmp
nop
add
stos
loope
nop
mov
loop
ljmp
jae
cmp
mov
push
lret
xchg
inc
push
xor
sbb
fldenv
incb
push
aad
jne
fidivrl
dec
add
mov
or
xor
std
lock
cmp
out
mov
and
mov
sarb
subb
sub
into
in
outsb
in
and
inc
loop
adcb
mov
cmpsb
push
outsl
adc
cmpsb
inc
fists
xchg
mov
sub
lahf
ja
inc
xchg
cwtl
cli
orb
nop
and
adc
nop
in
push
or
aas
mov
movsl
lahf
fbld
push
mov
lods
xorl
mov
jno
in
xchg
pop
insb
dec
dec
test
icebp
dec
dec
fists
repz
push
mov
mov
scas
adc
xor
inc
or
add
pusha
vpand
push
and
es
and
adc
mov
icebp
mov
mov
xchg
in
mov
adc
mov
inc
aaa
sub
add
dec
stos
lods
int3
jg
pop
call
mov
and
xchg
pop
pusha
jmp
mov
into
sbb
lret
testl
cmpsb
fs
add
sbb
es
movsb
cli
repz
cmp
jns
ret
aas
mov
aaa
dec
jmp
pop
dec
in
fs
xlat
inc
cmp
mov
seta
sbb
jne
adc
or
std
mov
lahf
mov
fsubr
push
test
pop
sub
aas
xlat
ficoms
cmp
sbb
test
mov
mov
in
lret
scas
xor
dec
cmpsl
jbe
insb
pop
jecxz
std
mov
clc
je
nop
push
push
cs
in
out
inc
adc
adc
dec
pop
inc
adc
rcrb
mov
mov
and
es
rolb
pop
inc
imul
mov
shlb
pop
mov
in
fisubl
movhps
pop
mov
fstl
faddl
xchg
lret
nop
enter
movl
xchg
aad
cmp
xchg
insl
test
je
cmpsb
cltd
mov
jbe
pop
push
dec
mov
mov
xchg
outsb
jb
push
data16
dec
mov
and
sub
dec
jns
sub
aad
popf
orb
cmp
push
cmp
mov
mov
in
push
out
xor
mov
cmp
ds
sub
movsb
add
sbb
mov
fimull
repz
iret
movsb
and
and
data16
mov
mov
mov
out
mov
imul
or
xchg
or
shr
in
inc
mov
fcompl
test
push
pushf
and
jecxz
xor
cwtl
mov
movsb
push
jle
inc
js
js
into
fs
int
jae
inc
js
xorb
or
push
arpl
dec
inc
dec
rcrl
je
pop
jae
mov
mov
outsb
hlt
jmp
push
dec
enter
sti
sti
dec
pop
jecxz
cs
aad
aam
inc
imul
mov
clc
fwait
daa
inc
sbb
push
pop
push
sbb
aas
mov
shlb
sub
enter
xchg
pmaxub
push
inc
aas
mov
pushf
aam
out
dec
mov
pop
pop
fs
cs
and
mov
gs
cmc
rol
ja
add
repz
jb,pn
sbb
insb
xchg
imull
ret
lods
cmp
mov
dec
lea
mov
bound
lea
adc
push
pop
push
je
out
sti
cmp
xchg
test
cs
outsb
subl
jb
and
lahf
mov
xchg
rolb
scas
cmp
mov
out
inc
dec
fsub
inc
mov
push
sbb
iret
xchg
mov
hlt
imul
inc
lds
cmc
and
aas
adc
repz
movsl
test
jle
orb
mov
dec
aam
xchg
fcomi
sbb
mov
lcall
adc
clc
adc
mov
daa
inc
pushf
push
mov
sbb
push
adc
sub
mov
je
fs
push
cmp
iret
add
add
mov
add
mov
mov
mov
mov
jae
cld
call
sub
jnp
lret
sub
and
jae
dec
jmp
test
call
jne
imul
enter
insl
aas
das
fs
scas
fsubs
clc
mov
mov
loope
roll
incb
sbb
mov
aam
inc
sbb
lock
pop
int
xchg
xor
notb
jno
inc
lret
dec
daa
fs
fisubrl
mov
cs
inc
fs
mov
fiadds
sub
dec
cmp
xlat
inc
sub
push
jnp
out
bound
fcomp
mov
sahf
jge
sbb
in
push
inc
jg
ljmp
pop
insb
mov
pop
xor
xchg
pop
pop
fstpl
pop
repz
inc
pop
sbb
imul
sbb
push
sbb
js
out
and
push
jecxz
cmpsl
popf
mov
cmp
xchg
adc
sbb
aas
jns
daa
inc
adc
push
insl
inc
scas
xor
pop
xor
mov
popa
ret
mov
pop
roll
jo
sub
cmp
enter
scas
and
push
cs
mov
cmp
xchg
js
movsl
cmp
mov
jbe
mov
call
sti
in
leave
mov
pop
inc
sahf
dec
scas
cmpb
jno
shrl
std
out
ljmp
or
cmp
out
jns
sti
cld
mov
sub
mov
adc
scas
out
mov
sub
les
lcall
arpl
iret
mov
ret
mov
mov
ja
sub
cltd
outsl
cmp
xor
adc
xchg
mov
inc
dec
outsl
mov
fucomi
daa
mov
inc
dec
push
and
sbb
add
xor
fsubrs
test
or
addb
xchg
sbb
pusha
sbb
popf
lret
inc
inc
test
mov
fcomi
inc
shlb
test
cmpsl
mov
adc
jne
jno
sub
xchg
mov
fs
mov
mov
dec
and
das
cmp
pop
fwait
loop
shr
and
xchg
dec
cs
rcrl
lods
les
mov
inc
nop
addr16
outsl
imul
xlat
jge
push
mov
dec
unpcklps
and
mov
ja
fildl
add
sbb
sbb
rcr
dec
div
xchg
int
fadd
xchg
cmp
push
pop
add
mov
mov
pushf
ss
cmp
loope
inc
sub
xchg
adc
les
cmp
lret
mulb
daa
mov
or
mov
cmc
ss
lods
mov
push
jb
cld
in
adc
push
mov
xchg
mov
insl
push
aad
or
xor
push
and
dec
xchg
rolb
scas
js
mov
mov
pop
cmc
and
xchg
pop
mov
jmp
cmp
rorb
repnz
fmuls
dec
mov
xor
mov
inc
divl
fstps
or
push
into
aam
jl
inc
sbb
push
push
jmp
sub
xchg
push
rolb
jecxz
insb
push
cltd
sbb
out
loopne
sub
pop
rcr
mov
add
insl
pushw
cwtl
mov
sti
adc
stos
call
mov
hlt
xchg
hlt
scas
lds
cmpsb
pop
lret
in
repnz
jno
xchg
negl
inc
adc
lock
add
js
cwtl
inc
xchg
dec
jmp
testb
and
adc
call
outsl
pop
pop
popf
or
clc
xchg
mov
dec
repz
stc
jb
mov
cmpsb
bound
fldt
inc
fisubrs
ret
cmp
sbb
shr
insb
inc
sub
push
or
dec
das
push
movlhps
pop
stos
mov
adc
and
les
mov
iret
cmp
outsl
out
mov
jp
xor
xor
das
push
pop
sub
cli
xor
test
inc
insb
push
mov
pop
push
sbb
scas
enter
fmuls
jno
lods
pop
pop
sti
mov
xor
adc
cmc
dec
sarl
cmp
xchg
lods
sbb
fs
lods
testl
sahf
ud2
stc
jge
dec
fbld
lahf
adc
push
dec
mov
js
popa
repz
or
jo
pusha
xor
or
into
mov
sbbb
lea
and
aam
adc
inc
and
sbb
aad
and
and
stc
int
dec
fsubr
roll
adc
call
mov
loopne
movsl
push
xlat
cmp
rol
lcall
mov
rcr
mov
int3
out
push
cmp
jb
lock
popa
roll
dec
fisubrl
mov
loope
xchg
push
loopne
cwtl
call
xchg
loop
xchg
orl
mov
push
fimuls
add
in
xchg
pushf
pop
stos
pop
cmpsl
add
push
push
xor
sub
std
xchg
fidivrl
cmp
rcr
lahf
cmp
int3
leave
pop
sbb
cwtl
pusha
pop
rcrl
lea
insb
sub
xchg
jae
sbb
mov
dec
cmp
adc
fildl
shll
stc
mov
push
icebp
mov
add
sub
xor
dec
jo
movsl
inc
jg
mov
xor
push
popf
xor
dec
lret
in
loope
mov
fistl
dec
sbb
sbb
mov
push
loopne
pop
fnstenv
imul
test
testb
sbb
popf
scas
ss
pop
pop
pop
xor
jbe
jecxz
shll
loop
mov
jne
sti
lock
or
mov
leave
sti
mov
mov
out
imul
push
jmp
rcr
cmp
and
adc
test
xchg
enter
ffreep
lcall
add
ja
pop
mov
adcb
mov
jmp
or
int3
sub
xor
cmpsb
adc
in
mov
mov
jae
gs
icebp
xor
adc
or
xor
and
fadds
clc
cltd
mov
mov
sahf
notb
lock
jno
or
pop
sahf
aaa
lret
and
push
int3
cwtl
ret
xor
aad
scas
jp
mov
lock
cmpsb
xor
ret
inc
jle
mov
xlat
mov
dec
push
push
sbb
js
add
pop
lahf
iret
in
out
les
or
cs
xor
orl
adcl
add
adc
fimuls
xchg
mov
cmpsl
xlat
and
in
aaa
sahf
cld
mov
daa
inc
sbb
sbb
dec
jno
adc
add
ss
hlt
mov
dec
js
mov
inc
add
add
fidivrs
mov
icebp
or
fisubs
sti
clc
ret
sub
push
daa
mov
ret
hlt
lret
icebp
mov
divb
int3
push
push
or
fwait
inc
pop
es
je
cld
push
jmp
jecxz
int
dec
pop
ljmp
scas
mov
xchg
std
mov
clc
lret
dec
and
icebp
insb
call
not
xlat
or
movsl
insb
mov
rorl
cmp
xchg
cmp
std
sahf
mov
add
jecxz
aas
imul
rol
or
add
pushl
push
jne
or
stos
mov
lock
mov
add
xrelease
sbb
cmp
jge
push
mov
sbb
aam
cmp
notb
mov
stos
ret
daa
into
dec
mov
imul
outsl
xor
out
arpl
and
xchg
inc
sbb
rcrl
lods
int
addr16
or
sub
xchg
cmpsl
pop
loopne
mov
push
jns
cmpsb
push
mov
mov
jno
aaa
imul
xchg
or
sarb
je
jno
jl
cmp
scas
push
les
mov
adc
inc
aad
mov
pop
fistps
ds
add
pop
lret
lods
cwtl
popf
fwait
add
pusha
xchg
mov
pop
xor
adc
jnp
sarl
push
mov
in
sub
xchg
cltd
js
mov
cmpsl
sub
pop
push
inc
loope
addl
mov
xchg
je
popa
jo
inc
and
dec
xchg
bound
lods
into
std
es
ret
out
adc
pop
or
mov
inc
in
cmpsb
aaa
arpl
push
gs
sub
xchg
or
les
adcb
into
icebp
pusha
shrb
or
das
jo
jg
dec
mov
aad
jno
out
adcl
adc
sub
or
popf
ftst
hlt
js
pusha
jmp
sub
sub
ret
ja
push
mov
movsl
sbb
and
mov
fs
adc
inc
inc
out
rcr
cmp
push
js
inc
add
adc
pop
std
loop
fwait
add
jns
out
jnp
add
adc
stos
divb
xor
test
insl
out
push
xchg
ret
lret
jecxz
sub
cwtl
sbb
xlat
sbb
xchg
rcrl
cmp
fcmove
movhps
jp
test
xchg
and
cmpb
in
sub
mov
test
push
push
mov
push
mov
mov
dec
inc
sub
mov
or
popw
mov
pop
mov
popf
ret
sbb
cmp
push
adc
fbstp
movsl
dec
fs
test
and
xchg
loope
sbb
sbb
and
repnz
sbb
pusha
shlb
mov
shlb
sbb
jno
stos
dec
push
ja
enter
pop
mov
sbb
pop
add
loop
pop
inc
xor
orb
sarb
sub
inc
rorl
cmpb
mov
iret
pop
xchg
xlat
mov
out
adc
test
div
adc
in
in
fucomp
pop
popf
jnp
pushf
int3
mov
sbbb
xchg
out
insb
enter
sub
imul
popf
ret
cmp
pop
xchg
mov
push
ds
into
insb
clc
loop
cwtl
lods
dec
or
adc
xchg
test
nop
lret
je
jno
fists
adc
xlat
add
std
outsl
jbe
jle
lea
or
lret
enter
or
or
mov
cmp
mov
pusha
psubsb
jp
addb
push
inc
cltd
cmp
mov
add
sub
subl
mov
sbb
xchg
ljmp
sub
out
cmp
mov
lock
dec
mov
pop
scas
pop
jnp
xchg
xchg
cmp
mull
fs
xor
clc
jb
cmp
sbb
dec
cmp
icebp
or
mov
push
jle
adc
stos
cltd
mov
jmp
inc
cmp
outsb
mov
push
mov
ds
pop
int
sub
roll
push
cmp
xchg
sub
mov
mov
inc
add
pop
xor
ja
loopne
pusha
pop
popa
sbb
mov
mul
stos
pusha
push
out
popf
das
cmc
or
fwait
mov
lcall
inc
adc
shll
in
push
mov
pushf
and
jae
pop
add
fwait
dec
cmp
shr
fldl
rclb
data16
inc
out
sbb
cmp
mov
sbb
ljmp
jbe
cmp
add
popf
xor
jns
push
jmp
sub
sbb
imul
jae
aaa
jle
xchg
dec
repz
aad
xchg
pop
push
fisttpll
cwtl
mov
and
scas
mov
mov
xor
ret
icebp
jbe
mov
sti
xor
xorl
ja
mov
inc
subl
inc
shrl
in
sub
sub
loop
out
call
cld
sub
mov
outsb
sbb
inc
push
fldenv
das
inc
lock
mov
sahf
jns
pusha
xor
popa
inc
pcmpgtw
test
xor
and
or
lock
ds
outsb
mov
jne
mov
mov
inc
jp
je
out
inc
icebp
pop
xor
fstl
test
jnp
or
xchg
cwtl
cwtl
test
sbb
mov
and
clc
das
xchg
sub
lds
cmp
das
notb
jg
fsubl
or
push
es
sub
or
fistpll
add
imul
push
mov
xor
push
out
ja
in
mov
and
push
in
cwtl
ret
push
imul
or
out
mov
cmp
test
negl
push
add
lea
btc
enter
push
add
scas
flds
mov
sub
cmp
bound
pop
xor
mov
xchg
push
aad
jno
test
into
jecxz
jne
js
lock
mov
sarl
in
enter
or
push
jl
mov
fnstenv
ja
mov
stos
mov
in
int3
js
dec
lods
int3
lods
or
inc
aas
ss
jl
jae
sub
outsl
pop
aam
repz
lods
dec
lods
sahf
mov
rcrl
bound
out
cmpsb
or
dec
cmp
jo
xchg
push
in
or
sbb
dec
push
push
hlt
pop
aad
insl
adc
insl
dec
xchg
adcl
push
enter
test
mov
pop
push
inc
mov
imul
and
stos
xor
fbld
xor
and
mov
sbb
imull
jl
aad
pop
or
in
sbb
sub
pop
mov
push
in
inc
adc
cmp
out
in
mov
mov
push
or
enter
sub
mov
mov
sbb
ret
lea
cmp
mov
mov
out
jl
rcrl
dec
mov
sub
dec
shl
iret
inc
sbb
mov
mov
in
jne
sbb
insl
pop
jo
adc
mov
rcll
idivb
sub
cmc
dec
repz
shlb
cmpsl
push
pop
push
xor
ret
shll
dec
lds
in
dec
loope
cmp
test
mov
rorl
push
xor
pop
and
lods
dec
fisubrs
push
dec
ret
stos
jno
repz
pusha
push
cmp
aaa
mov
pop
fiaddl
ret
std
nop
add
adc
sub
outsl
aad
mov
jle
cli
int3
loop
sub
sbb
in
adc
les
xlat
fs
jns
out
mov
cmpsb
mov
lds
and
popf
push
xor
inc
jmp
mov
inc
idivb
cmpsl
adc
jg
stos
mov
out
hlt
jae
rcl
movb
lock
adc
sub
ljmp
xchg
fs
or
lods
mov
jnp
not
pop
stos
mov
adc
mov
add
fbstp
push
pop
xchg
pop
dec
mov
inc
out
fwait
jb
lock
inc
insb
sbb
add
rolb
lea
pop
pop
add
jae
mov
cmp
mov
fsubrp
ds
out
fcompl
out
inc
jl
mov
pushf
data16
or
jl
loop
mov
mov
push
jge
cmp
pop
xchg
popf
pop
dec
and
xchg
or
lock
pop
loope
movsb
mov
aas
dec
sub
stos
lds
add
xor
push
mov
inc
subl
cmp
test
insl
pushf
xor
addr16
fists
aaa
cmpb
ss
int
pop
mov
xchg
into
cld
or
adc
mov
sbbl
icebp
sarb
out
popa
and
out
or
fdivrl
cmp
sub
adc
lahf
sbb
inc
and
mov
je
lds
jge
fucomp
dec
repnz
pop
xor
pop
mov
out
adc
arpl
or
lea
imul
repnz
cli
push
push
loop
push
mov
push
popa
cwtl
mov
fisttps
std
mov
push
ds
nop
repnz
cld
xchg
or
or
cli
movsl
cmpl
mov
cmp
mov
push
loopne
cmp
sub
xchg
push
sbb
mov
aas
repnz
or
in
jnp
fwait
sub
xor
lahf
das
mov
cmp
call
lods
push
xor
nop
sub
movsl
sub
addr16
dec
push
ljmp
mov
pusha
scas
sub
inc
push
imul
out
clc
pop
js
inc
imul
jae
jge
sbbl
enter
mov
outsb
add
pushf
or
fdivrs
icebp
ror
cltd
xor
pop
fadd
setnp
pop
shlb
lahf
in
outsl
and
mov
pushf
loopne
adc
jo
adc
jbe
add
scas
les
and
inc
dec
dec
mov
mov
outsl
push
xor
dec
int3
pop
test
cmc
leave
nop
cs
cmp
nop
cs
dec
and
adc
add
fst
and
das
or
sahf
in
inc
add
push
mov
cmpsb
and
mov
test
sbb
xor
movsb
pop
push
push
jecxz
mov
mov
out
jne
adc
imul
stos
lret
jnp
dec
aad
inc
and
adc
or
dec
sbb
and
or
jg
sub
lock
cmpsb
cmp
aad
adc
push
in
and
fwait
mov
adc
jb
sti
add
data16
sbb
mov
push
xchg
or
fstpl
adc
push
dec
sbb
xor
repz
push
cmp
cmp
inc
adc
inc
test
cmp
ret
aas
shrl
dec
cmpsl
dec
jns
in
hlt
sbb
adc
arpl
sub
sbb
sahf
mov
inc
testl
mov
test
push
push
xchg
add
cmp
add
inc
dec
insb
rclb
inc
dec
xchg
movsb
mov
cmpsb
mov
mov
mov
test
lret
dec
add
sub
xchg
inc
cmp
lods
and
jbe
repz
popf
pop
jmp
int3
in
clc
pop
inc
repz
and
dec
ja
push
or
cmc
in
inc
mov
push
mov
cltd
nop
pop
aas
xor
add
out
pushf
push
cli
sbb
pop
rclb
into
dec
dec
in
cmpsl
mov
outsb
xor
mov
icebp
pop
scas
inc
fidivrs
sub
xchg
jmp
aam
es
ljmp
in
pusha
rcll
mov
adc
inc
js
adc
fsubl
pop
cmpsb
jp
cmp
sarl
jno
lock
in
pop
ret
sbb
cmp
mov
mov
gs
in
js
pop
xchg
or
int3
pop
inc
or
mov
mov
insl
rol
push
cmp
mov
xor
cli
adc
rep
or
fsubs
bound
mov
ljmp
dec
stos
mov
push
jbe
pop
pop
adc
in
and
xchg
loopne
cmc
scas
out
scas
sub
clc
cli
mov
cmpsl
testb
lock
jb
push
stc
rcrb
xchg
push
shll
dec
add
mov
inc
sub
or
push
nop
cwtl
aad
xchg
into
dec
push
adc
mov
lcall
nop
ja
out
sahf
arpl
sbb
js
adc
or
mov
fimuls
scas
sbb
sub
sub
mov
fldcw
mov
jbe
rorl
bound
add
mov
call
xchg
pop
pop
bound
or
pop
loope,pn
sti
xor
pop
xchg
loop
mov
cmpsl
xlat
jmp
gs
stos
in
lods
cmp
add
pushf
es
inc
push
cmp
inc
movsb
xor
lods
sbb
cmc
out
lods
cmpsb
jge
push
imul
dec
mov
loopne
push
sbb
ficomps
mov
out
and
or
in
loopne
imul
or
mov
jl
test
jge
mov
pop
and
jmp
pop
negl
cmp
mov
and
mulb
in
fisttpll
outsb
out
fs
jecxz
pop
dec
dec
push
or
das
mov
test
mov
push
jecxz
hlt
lret
cld
scas
cltd
icebp
in
or
adcl
cwtl
imul
mov
insl
cmp
das
mov
push
js
push
stos
pop
negl
test
lret
pop
out
cwtl
sbb
jbe
insl
icebp
leave
mov
push
jg,pt
adc
pop
add
aas
pop
addr16
inc
addr16
jno
imul
pop
push
mov
sub
pop
adc
scas
ret
cmp
xor
mov
jno
mov
push
stc
inc
cwtl
arpl
adc
adc
in
repnz
mov
xor
in
jl
outsl
stos
sbb
cmp
stos
mov
push
outsl
inc
jns
xor
pop
in
lcall
sub
sbb
cmpsl
sub
cmp
cmp
push
scas
jnp
sarb
dec
push
jb
inc
clc
lods
loop
pop
cmp
sub
mov
lea
icebp
ss
lock
push
mov
inc
es
push
sbb
daa
xchg
mov
jnp
mov
jbe
or
push
out
les
add
sbb
clc
pusha
push
dec
ret
xor
fwait
push
xchg
lcall
xor
sub
cmp
bound
addb
lods
xchg
into
mov
in
push
aam
stos
add
aas
mov
pop
dec
jp
lret
fstp
cmp
xor
decb
mov
clc
cli
jbe
mov
mov
jmp
xor
ja
mov
jge
push
cmpsl
cltd
sbb
clc
cmp
mov
jns
test
loop
add
loop
arpl
scas
mov
das
sarw
dec
sarb
or
lods
pop
leave
xlat
mov
dec
inc
stos
in
push
pop
xor
out
mov
inc
xlat
dec
aad
mov
outsl
setbe
cltd
fildll
xor
cmp
fsubrp
ret
xor
lea
xchg
lret
mulb
sbb
mov
xchg
sbb
pop
add
int3
lahf
stos
icebp
dec
sqrtps
jg
cmp
ret
jmp
int3
xchg
push
pop
mov
cmpsl
mov
in
mov
mov
mov
jne
inc
push
rcl
jmp
ss
in
popa
dec
xchg
xor
xor
lds
add
imul
add
leave
sbb
cli
pop
or
shrl
sbb
sarl
mov
mov
or
leave
popa
inc
inc
ficoms
push
jne
sub
jp
lret
in
in
ret
fwait
sub
mov
sbb
jns
mov
mov
dec
arpl
pop
push
adcb
fstpl
push
mov
xorl
fwait
xchg
sbb
dec
xchg
int3
lcall
call
faddl
mov
mov
push
xlat
les
or
aad
pop
mov
int3
stos
mov
mov
mov
xor
mov
or
scas
mov
out
cli
inc
into
fsubr
mov
mov
cmpsb
dec
js
inc
orl
je
pop
dec
stos
sbb
jns
fidivl
cmpsb
lock
cmp
inc
sahf
push
arpl
shlb
test
and
mov
xchg
stos
jle
push
and
out
jno
jb
ficompl
mov
stos
lcall
mov
call
pinsrw
lock
add
or
inc
dec
enter
loop
loopne
mov
fxch
xchg
push
mov
pop
mov
sub
aaa
aam
out
ret
std
and
inc
sub
leave
addr16
das
pushf
lea
fs
mov
insb
divb
mov
iret
mov
dec
test
int3
or
sbb
xchg
fildl
sbb
xchg
jecxz
cmpsb
hlt
decb
arpl
repnz
lret
test
cmp
push
repnz
add
lock
bound
nop
pop
and
in
sahf
sbb
ret
jmp
xor
adc
sbb
jo
loopnew
dec
lods
xchg
clc
push
cld
push
jo
xor
leave
mov
movsb
test
and
pop
mov
hlt
ret
vmovups
mov
ja
cmp
adc
pop
lahf
mov
sbb
je
dec
lods
movsl
je
xchg
movsb
mov
cli
jmp
sbb
mov
test
push
mov
xchg
scas
jb
sahf
and
dec
cmp
and
call
mov
mov
insl
adc
xchg
data16
mov
or
ja
test
dec
enter
pushf
jg
mov
xchg
movb
cwtl
xchg
cli
rcll
push
mov
mov
xchg
cmp
add
jno
cmp
adc
shrb
enter
sarl
pop
adc
pop
dec
push
xchg
adc
das
js
xor
push
sbb
mov
cltd
lods
adc
add
sub
xor
enter
rcll
es
in
mov
mov
std
fisttps
pop
fwait
jno
gs
mov
sahf
enter
push
xor
movsb
test
add
nop
jb
xchg
fildl
dec
out
sbb
test
test
fiaddl
lock
jbe
xor
out
call
jno
jnp
inc
or
shrl
test
mov
xchg
lcall
aam
stos
cmp
mov
and
popf
mov
sbb
pop
jne
rcll
inc
fidivl
sbb
lcall
mov
negb
inc
add
cmp
adc
out
lock
push
outsl
push
adc
xor
xor
mov
jb
sbb
adc
test
fs
cld
aad
jg
mov
or
sahf
adc
sbb
cmc
popa
ja
push
shrb
shl
ljmp
gs
sub
add
shll
xchg
push
mov
js
push
nop
into
pop
insb
jae
mov
movsl
sub
cwtl
dec
pop
lods
add
xor
in
leave
fsubl
adc
sub
xlat
xchg
out
into
mov
inc
pop
and
clc
pop
std
xor
std
lock
add
scas
sub
addr16
mov
mov
sbb
xor
in
repz
std
adcl
push
dec
add
gs
dec
in
jp
lods
ss
cltd
lods
xchg
iret
addr16
or
jp
inc
and
mulb
push
pop
les
cmp
hlt
pop
inc
mov
mov
movsb
mov
adc
jl
stos
lock
push
dec
imul
test
and
rol
stc
push
out
sbb
and
dec
xchg
call
aam
pushf
repz
data16
push
push
sahf
int
jl
and
mov
mov
subl
popa
rcll
sahf
popf
mov
push
inc
in
push
fwait
mov
sbb
mov
les
dec
mov
aam
std
fidivrs
pop
inc
into
lret
inc
out
pop
sarl
ljmp
dec
or
mov
push
call
mov
cmp
add
out
fsts
jbe
movsl
fistps
jge
pusha
lock
jl
fsubs
jg
aam
push
push
adc
roll
mov
jp
sub
js
push
xchg
ds
push
dec
push
lret
arpl
bound
push
addr16
pop
push
add
out
xor
and
lret
xor
sub
lcall
in
and
sub
repnz
lods
mov
xchg
rolb
mov
imul
and
js
outsl
js
andb
cld
mov
xchg
push
fs
push
pop
cmp
repnz
mov
pushf
xacquire
pop
fists
pop
sti
pop
aas
rep
sub
test
fcomi
xor
int
popa
xor
int
jno
bound
arpl
mov
cmp
and
mov
icebp
pushf
push
xchg
leave
js
add
js
pop
lods
fucomp
sub
mov
mov
ret
lret
jmp
sub
mov
idiv
lock
subl
lods
out
mov
mov
pushf
mov
pop
sar
xchg
inc
mov
inc
lahf
fidivl
adc
cli
std
dec
and
mov
std
sub
lods
add
jg
mov
int
stos
jb
adc
dec
sbb
mov
xchg
adc
in
adc
push
push
pushf
movsb
pusha
daa
jl
push
add
ret
cwtl
std
aad
ret
push
jl
add
cmpl
xchg
and
xchg
pop
mov
xor
add
xchg
repz
clc
imul
inc
cmp
adc
dec
push
fisubrs
adcl
adc
push
scas
int
loopne
subl
ret
jne
sbb
das
fdivrl
loope
push
cmpsl
jmp
pop
or
xor
gs
aad
push
shlb
sbb
xor
dec
call
ja
adc
mov
pop
lds
jbe
xlat
aad
sub
cmpsb
jle
push
mov
insb
std
jno
xor
push
mov
mov
adc
xchg
lahf
sbb
popa
mov
loope
inc
outsb
sub
adc
fcoml
mov
add
pop
cmp
imul
fsubrl
dec
cli
imul
out
pop
clc
adc
xlat
fisttpll
pop
and
jp
pop
mov
xchg
push
lds
aad
xor
cmp
lods
sub
and
add
lcall
or
add
pop
imul
leave
mov
out
jge
subb
inc
sarl
ds
ja
in
shrl
lds
xor
jne
mov
xlat
push
and
xlat
jb
jmp
dec
or
push
xor
and
jnp
inc
lahf
pop
xor
xchg
aam
in
add
sbb
mov
and
addr16
cmp
lds
or
mov
stos
imul
sub
mov
test
pop
adc
mov
mov
fsub
sub
popa
or
mov
fisubl
mov
dec
hlt
int
pop
shl
adc
xchg
enter
adc
test
fnstenv
jecxz,pn
lret
inc
push
rcrl
jns
push
pop
cs
cltd
cwtl
mov
ja
xchg
push
fs
cmp
inc
pusha
mov
pop
inc
or
jmp
dec
arpl
push
test
sbb
icebp
xor
test
or
and
sub
push
in
or
mov
stc
daa
dec
mov
adc
cld
lea
inc
xlat
sub
or
jmp
out
std
jecxz
jbe
sub
xchg
fsubl
mov
lret
int
aas
js
ss
aas
out
cmp
jb
pusha
jne
inc
shl
inc
leave
in
xchg
and
nop
jnp
xchg
popa
outsl
cmp
ss
stos
les
test
loope
icebp
or
push
mov
inc
popf
jbe
notb
sbb
data16
fwait
lahf
add
enter
pop
mov
cld
ret
pop
or
scas
xchg
lods
cmp
pop
je
adc
mov
xor
fadd
xchg
mov
pop
adc
dec
test
mov
loope
jbe
jae
dec
jb,pn
cltd
lock
enter
jb
mov
popf
push
push
push
pop
daa
rclb
add
orl
jno
dec
push
lea
xor
jo
je
addb
dec
add
std
popa
test
ret
or
in
and
rol
sbb
sub
fldenv
addl
movl
rcll
sbb
xor
jns
push
add
incl
mov
pop
cmp
mov
enter
mov
iret
int3
xor
mov
mov
ret
and
sub
cmp
test
jb
push
stc
mov
xchg
subl
dec
push
push
ss
pop
ja
jg
sub
push
lahf
sar
fisttpl
lret
fldenv
mov
inc
xchg
mov
jl
xchg
push
mov
xor
aad
add
in
lds
inc
pop
add
cld
sub
ljmp
int
pop
ss
jbe
mov
inc
sahf
xchg
aaa
sbb
std
jg
jg
sti
lods
push
lret
xor
sub
jae
adc
lret
xchg
cli
mov
mov
out
imul
lret
test
push
rorl
jl
or
in
mov
movsl
stos
mov
pop
jbe
push
lret
cli
imul
ret
mov
fidivrs
xor
scas
jae
in
pop
sbb
adc
mov
cld
and
jge
loop
notb
rorl
jno
out
aas
mov
inc
loope
push
inc
outsb
lods
outsb
sbb
js
or
mov
pop
sub
clc
ss
mov
mov
jne
fdivs
xchg
xor
test
sbb
xor
jno
addr16
subl
pop
in
aam
int
fimull
push
mov
fnstenv
cmpsl
dec
pop
sub
mov
or
movsl
std
and
jne
mov
test
hlt
cmp
push
and
call
arpl
test
aas
sbb
into
add
loopne
xchg
lods
jp
test
arpl
incl
xchg
sub
lods
pop
lods
push
jo
aad
xchg
das
and
add
pop
int3
mov
mov
bound
push
sub
shlb
cmp
ljmp
popa
lret
pop
lods
sub
aaa
dec
or
pop
jg
ficoml
loope
sub
xor
mov
xchg
add
fdivrl
js
push
test
jl
imul
testb
out
push
cmp
jg
es
mov
pushf
sub
xor
and
mov
sub
and
lea
or
jne
push
daa
fs
stos
push
xchg
pop
add
ljmp
out
mov
ret
test
sahf
push
movsb
xchg
bound
cmpb
dec
push
out
movsl
push
mov
lods
cmp
xchg
pop
adc
bound
xchg
scas
jno
pop
pop
je
sub
cmpsl
negl
add
int3
gs
repz
sub
mov
int
lods
or
jge
pop
dec
movsl
push
dec
shr
sbb
call
or
out
divl
or
das
mov
mov
cmpsl
daa
sub
je
sbb
popf
in
arpl
jmp
iret
xlat
insl
fstl
sarb
out
mov
push
divl
xor
mov
outsb
cld
inc
out
fsts
lahf
mov
mov
sub
imul
push
popa
push
push
mov
add
pop
test
xor
popf
dec
or
jno
out
mov
insl
jno
and
loope
cld
out
adc
js
rolb
daa
xor
inc
and
aam
add
add
cmp
adc
jb
push
sti
lret
sub
dec
inc
push
push
scas
pop
mov
insl
aas
adc
dec
xor
jp
jno
inc
adc
push
jbe
push
pusha
xchg
mov
fs
pop
ffree
adc
iret
mov
mov
icebp
outsb
xor
gs
sub
jbe
mov
pop
std
adc
dec
movsl
cltd
pop
xchg
mov
cmp
rol
shrb
jg
rclb
mov
bound
mov
add
int
cmpsb
in
enter
and
and
popf
and
adc
scas
es
scas
iret
insl
shl
push
cmp
inc
sbb
inc
sahf
push
and
orb
scas
out
mov
adc
push
in
adc
rcrl
inc
jle
mov
leave
out
ja
push
push
in
lods
rclb
movsb
flds
insb
jmp
add
rcrb
rorl
lahf
shl
push
lock
fs
data16
or
out
dec
daa
jecxz
dec
lret
xchg
jns
addr16
or
and
stc
dec
addr16
cmpsb
inc
mov
fistps
lret
or
ja
loop
xor
and
sbb
subl
pop
jg
leave
xchg
insl
js
jl
cmp
jbe,pn
lahf
or
push
xchg
add
popf
lahf
imul
mov
push
inc
fsts
pop
imul
sbb
mov
fcom
out
xchg
testl
inc
testl
lahf
inc
rcll
and
sbb
pop
jne
jmp
or
jge
xor
mov
dec
fwait
cs
pusha
rcrb
mov
movsb
jecxz
mov
jle
enter
aaa
movsb
std
imul
pushf
cmp
or
aam
xor
int
adc
scas
pop
xor
mov
xchg
push
push
cmp
and
sarl
sub
jmp
xorl
add
jp
add
mov
sbb
xor
pop
mov
icebp
adc
data16
idiv
shlb
idivb
mov
sub
sub
jnp
aaa
jl
fiaddl
sti
xchg
addl
leave
rcr
mov
jg
xchg
push
hlt
mov
pop
fldcw
sbb
into
cmc
mov
sub
in
jl
or
fwait
test
xchg
arpl
mov
iret
dec
scas
lds
les
xor
arpl
or
je
nop
jno
or
push
outsl
sub
lea
fcomps
es
js
out
dec
cmc
outsb
lods
xor
push
inc
add
xor
mov
sub
sbb
xchg
mov
add
popa
loope
xor
add
inc
jbe
push
test
mov
test
test
xchg
and
cmp
sbb
mov
lock
or
dec
imul
addb
cmpsb
mov
lods
lock
mov
int
cmpsb
xor
std
mov
cmp
jno
sahf
and
sub
dec
shlb
insb
push
pop
adc
negb
mov
in
jmp
cmpsl
xlat
xchg
pop
xchg
insl
ja
add
mov
push
stc
mov
ss
insb
push
pop
out
jae
sbb
and
daa
sbb
nop
sahf
sub
dec
lret
add
fildl
ljmp
mov
sti
adc
mov
daa
mov
xchg
dec
test
or
mov
inc
nop
imul
and
repnz
mov
push
and
rclb
into
mov
cmpsl
fdivs
push
mov
push
dec
jg
jmp
push
lock
push
and
push
jecxz
pop
add
popf
popf
stc
adc
insl
repnz
arpl
rclb
es
push
and
mov
test
mov
jne
add
outsb
push
add
outsb
lret
add
fs
add
jne
pop
int3
mov
out
daa
jnp
dec
push
lock
pushf
xor
sub
fidivs
scas
inc
call
es
dec
jne
loope
sbb
sub
mov
adc
sbb
xchg
fistps
or
js
xor
lret
ljmp
xchg
jo
es
add
xchg
pop
testl
adc
insl
stc
dec
jnp
push
pop
xor
add
icebp
and
jl
jle
lds
and
mov
jmp
or
adc
mov
imul
cwtl
call
lret
out
add
mov
clc
sub
cltd
and
cld
xchg
repz
out
xor
ljmp
fdivrl
push
or
movsb
int
xchg
add
push
cmpsb
aas
xor
call
pop
sbb
jae
xchg
fimuls
add
bound
jecxz
repnz
in
xchg
outsl
arpl
add
mov
mov
cmp
daa
xor
js
mov
pusha
xor
insb
dec
mov
iret
movsb
xchg
lea
xchg
je
addb
jp
mov
out
xchg
lea
or
mov
xchg
stos
and
inc
in
fcoml
pop
jbe
or
ret
dec
clc
out
sub
inc
jg
popa
xchg
dec
ret
mov
cmp
dec
mov
cmpsl
adc
mov
mov
sbb
outsl
cs
loopne
sbb
in
push
pop
mov
xchg
repz
in
mov
or
push
lret
arpl
aaa
out
bound
aas
call
ret
inc
outsl
test
or
fldcw
sub
dec
cld
pop
inc
cmp
pushf
jg
imul
sub
lods
xor
mov
add
add
insb
push
push
sahf
mov
cmpsb
mov
sar
arpl
sub
nop
ljmp
cmpsl
xor
sub
fsub
cmpsb
in
dec
push
fists
sbb
rcr
gs
jns
call
das
jmp
lret
dec
push
push
dec
dec
add
cmp
push
xlat
mov
lock
lea
xchg
stos
add
lahf
push
shr
hlt
sbbb
and
and
add
mov
jecxz
popf
movsb
sub
dec
mov
sahf
jge
pop
lds
cmp
rcrb
dec
xor
test
les
or
push
mov
sub
pop
jp
das
mov
popa
mov
aas
add
test
dec
pop
cwtl
aaa
cmp
cwtl
das
out
movsl
test
es
das
roll
adc
leave
outsb
mov
cmp
fs
jg
ficomps
jge
dec
lods
scas
mov
cmp
lret
icebp
adc
ljmp
or
add
les
or
jmp
or
bnd
push
leave
xlat
cmp
in
lcall
cmp
mov
in
enter
jb
shrl
js
xchg
cmp
jp
ja
orl
sbb
jecxz
jo
push
inc
fnstsw
data16
xchg
cld
scas
iret
or
rol
inc
adc
push
es
out
xchg
add
mov
decb
scas
popa
jnp
out
aas
inc
mov
add
and
int
inc
dec
mov
in
push
insl
jo
adc
jl
xchg
jge
mov
inc
insl
les
dec
stos
enter
hlt
mov
in
repz
in
jns
jne
mov
enter
sbb
ss
push
cltd
cmp
sti
sbb
mov
sbb
mov
mov
sti
jb
mov
lock
xlat
fnstcw
mov
mov
cmovb
orl
xchg
push
jns
pop
movsb
pop
mov
jnp
aam
xor
int
les
sbb
push
ljmp
cmp
jl
sbb
sarb
out
inc
sbb
sbb
or
or
mov
inc
and
dec
in
test
mov
fdivl
jg
pop
add
xor
mov
adc
dec
es
inc
push
pop
ffreep
out
or
mov
fsubr
int
movsb
js
jp
xchg
icebp
out
xchg
test
xor
mov
mov
sbb
mov
lret
inc
popa
jecxz
icebp
mov
das
xchg
jmp
xor
loop
xor
iret
or
cmp
jb
fists
adc
jnp
jmp
cmp
jae
aam
xchg
xor
xchg
add
inc
sub
mov
fimuls
dec
imul
and
dec
ja
pop
mov
sub
lret
test
rol
loopne
fidivrs
mov
pop
mov
adc
xorl
xchg
inc
pop
mov
xor
lgs
xchg
lds
fnstcw
pop
cltd
lock
popf
or
push
dec
adc
xchg
cmpsl
xor
outsl
cmp
jge
cwtl
mov
int
inc
out
push
outsb
sub
mov
das
movsl
cmp
jne
pusha
xchg
jo
pop
sbb
sbb
mov
add
test
sbb
sti
call
roll
inc
dec
or
sub
cmpsb
mov
jecxz
ds
je
lret
push
nop
test
in
ljmp
dec
mov
mov
xchg
popa
mov
stos
mov
push
xchg
and
outsl
or
mov
in
jmp
mov
pop
in
fldenv
pop
movsb
aaa
or
aas
arpl
or
xor
sti
cld
scas
sbb
cs
jl
mov
negb
push
cmp
mov
sbb
enter
dec
imul
jmp
lret
cmpsb
mov
or
xchg
push
mov
fwait
or
insb
cmp
push
sarb
add
repz
lods
lahf
xor
adc
cmp
iret
adc
gs
xor
fcoms
repz
sbb
pop
and
xor
ljmp
sub
jb
add
movsl
dec
pop
mov
lods
fisttpll
sub
jp
movsb
xadd
xor
fdivr
iret
lahf
lods
iret
idivl
jo
arpl
hlt
in
out
push
les
fisubrl
pop
dec
adc
mov
scas
or
push
jmp
insl
mov
daa
fs
aas
xor
and
mov
dec
adc
cmp
adc
cmp
jl
mov
es
adc
lcall
jg
jb
stos
adc
out
inc
mov
cmpl
in
lea
cwtl
popa
adc
outsb
push
sarb
cmp
cmp
sub
jne
jge
cwtl
push
mov
outsl
mov
cld
mov
scas
testb
jae
int
lods
fstps
dec
xchg
pop
push
mov
aam
and
test
sbb
sub
mov
xchg
bound
jmp
cltd
repz
mov
pop
out
test
fstp
cmp
dec
mov
jns
outsl
pusha
loope
sbbl
jae
shlb
int3
or
inc
dec
add
or
mov
jp
cwtl
inc
sbb
testb
mov
jecxz
sbb
inc
fs
cmp
sbb
cli
cmp
push
lock
lcall
subl
jge
outsb
jb
ret
sbb
add
push
cmovne
aaa
sub
mov
xchg
loopne
int
jmp
test
gs
jecxz
jnp
add
jle
push
jae
add
stos
in
pop
xor
push
lock
enter
jmp
sarl
test
rclb
iret
sti
in
mov
xor
or
mov
imul
dec
sub
xchg
nop
jp
stos
sub
inc
andl
sbb
pop
mov
mov
mov
outsb
add
shll
es
int
out
sbb
popa
xchg
xchg
add
in
fs
cld
fdivrs
xchg
mov
push
stc
out
cmp
fidivrl
leave
sbb
int3
jmp
hlt
sbb
movsl
inc
mov
in
mov
jp
dec
xorl
push
jns
shlb
xlat
call
cmp
fs
cmp
or
xchg
cmpb
cmp
fidivl
pop
ja
fsubs
test
loop
mov
push
cmp
loope
insl
arpl
lret
call
fwait
in
adcl
push
mov
sti
ret
xchg
ljmp
sub
sbbb
les
das
inc
loop
cmc
lahf
and
pop
rorb
test
jno
jb
outsl
sub
std
fcompl
outsl
addr16
negb
mov
call
inc
rol
push
pop
movsl
dec
dec
or
add
out
insb
push
adcb
mov
repnz
outsb
sub
popa
lock
sbb
popf
xchg
call
push
repnz
imull
mov
fsubp
iret
stos
lods
mov
andb
clc
daa
pop
pop
push
lds
stos
ficoml
mov
incb
push
ficompl
jnp
into
adc
mov
xchg
loop
divl
int
popa
out
cmpsb
jmp
scas
jmp
jno
jp
push
jno
or
cmp
inc
mov
jp
shr
je
xor
xchg
sbb
or
mov
mov
mov
test
or
push
sub
loopne
inc
scas
popf
rcrl
xlat
fstpl
push
mov
lds
lock
sbb
pop
xor
mov
inc
in
mov
inc
addr16
mov
mov
out
xchg
add
inc
dec
cmp
mov
stc
mov
fisubs
push
mov
jne
adc
in
fistps
fadd
sub
mov
lret
xchg
cmp
dec
pop
or
xchg
sub
mov
movsl
dec
sbb
sub
imul
xchg
mov
mov
push
rclb
jl
cmpsb
xchg
notrack
rolb
jae
pop
sbb
cmp
bound
pop
push
dec
or
ret
loope
mov
arpl
pop
push
imul
mov
sub
sub
mov
shl
aas
fnstsw
and
and
sbb
mov
adc
insl
shl
or
pop
in
push
cli
pusha
and
iretw
loope
push
lods
dec
dec
mov
cwtl
mov
push
pop
dec
inc
xor
test
jo
popf
imul
lods
imul
les
pop
sub
test
add
into
jbe
sub
shrl
loope
mov
adcb
test
lods
stc
sub
mov
popf
orb
insl
fidivrs
loop
out
sub
adc
rolb
sub
cld
daa
negl
ficoml
sub
sub
push
mov
stc
sub
ret
ljmp
aas
repz
vcmpngess
sbb
dec
jl
adc
mov
add
pop
jns
xchg
mov
mov
lock
sahf
dec
clc
mov
mov
inc
popa
mov
lcall
mov
adc
pop
sti
test
jp
fbstp
adc
mov
nop
push
jno
shl
int
xor
push
push
rorb
pop
cmp
xchg
push
cmpsl
add
in
stc
cmp
add
lret
sub
mov
adc
cmc
sti
int3
sti
aas
cmp
push
ljmp
test
xchg
cmpsl
and
lods
or
pop
jae
mov
js
dec
sub
into
push
fisttpl
push
insb
xchg
sub
mov
jg
and
add
test
sub
arpl
jns
addl
jp
mov
add
or
mov
js
fsubrs
inc
in
and
pop
hlt
cltd
and
sete
insb
mov
push
mov
adc
mov
ret
leave
push
fdiv
xchg
icebp
xchg
divb
dec
xor
loope
xchg
jmp
cmc
xchg
movsb
pusha
jae
mov
jle
adc
push
push
dec
shrb
xchg
jle
jg
into
adc
fstpl
imul
mov
flds
dec
movsb
cld
dec
sub
and
scas
repnz
adc
jmp
lcall
movsb
mov
in
outsl
inc
jne
arpl
lret
push
jb,pt
sbb
cmp
sbb
call
test
pushf
jne
push
or
or
push
sbb
adc
cltd
cmpsb
lock
pop
dec
push
or
xchg
mov
fsubrl
int3
leave
adc
adc
fidivrl
sub
mov
cmp
leave
mov
mov
pop
lret
adc
xor
sbb
lods
pushf
nop
ret
repnz
aad
in
jo
dec
adc
dec
lds
pop
pop
int
mov
sub
stc
fisttps
or
add
aas
mov
lcall
loop
sti
mov
scas
add
jnp
sti
loop
lds
loop
add
inc
mov
pop
cmp
pop
das
ret
rcll
popf
inc
jb
push
sub
adc
or
dec
or
imul
shrl
pushf
fistpll
in
add
sbb
rcrl
test
repz
fcoms
xchg
out
outsb
mov
popf
pop
and
test
push
lret
dec
xor
nop
sbb
cmp
fiadds
loopne
int
les
cltd
pop
xchg
daa
adc
repz
fidivrs
pop
jle
push
movl
cwtl
fidivrl
sbb
dec
mov
lock
xor
xchg
sarb
test
inc
xlat
and
sub
cmp
mov
lds
mov
mov
sub
and
xor
jmp
pop
ret
arpl
and
push
pop
jnp,pt
stos
insb
pushf
gs
dec
mov
lret
adc
fwait
mov
adc
loopne
or
or
fcomps
dec
stos
loopne
lds
fsubrl
cli
lods
fnstcw
sbb
fwait
scas
cs
jo
into
jns
adc
sbb
push
cltd
mov
xchg
sahf
out
mov
sub
sub
jmp
push
lods
lock
cmpsb
cmp
jle
aaa
sbb
insl
jo
jae
movsb
sub
pop
aaa
cs
popf
mov
sti
andb
xor
mov
adc
pop
ja
iret
dec
mov
cli
pushf
sub
lock
rorb
add
in
xchg
and
and
mov
call
or
jb
mov
nop
arpl
rcll
cltd
js
cmp
shll
mov
xchg
sbb
pop
mov
and
jge
and
dec
addr16
pop
test
clc
loop
mov
cltd
aas
mov
pushf
xor
shrb
in
add
loope
mov
imul
adc
jnp
dec
pop
sbb
push
add
loopne
dec
mov
cmp
inc
xchg
dec
mov
dec
sub
jecxz
push
inc
lods
outsl
outsb
pop
and
hlt
dec
xor
and
mov
or
push
insl
xor
push
daa
pop
stos
cmp
insb
sbb
leave
push
and
and
jne
incl
leave
ror
and
call
sti
xor
or
popf
ljmp
cmp
pop
dec
xor
fidivrl
ret
pop
mov
popa
lret
push
gs
cmpsb
div
dec
scas
jno
loopw
cld
cmp
sub
stos
loope
sub
shrl
shll
cmp
imul
inc
add
lock
repnz
jecxz
add
pop
lods
shrl
insl
loope
test
inc
pushl
push
stos
addr16
pushf
cwtl
xor
lret
scas
sahf
inc
mov
in
cmp
push
loopne
add
mov
pop
jg
sti
mul
xchg
movsb
mov
pop
jnp
lds
push
sub
scas
fists
sub
pop
rolb
jnp
mov
push
loopne
lods
lods
cs
sbb
inc
popf
sub
call
sub
push
dec
fnsave
cmp
push
gs
ret
cmpsb
sarb
cmp
ds
fdivrp
push
into
mov
lcall
mov
in
jmp
sub
es
mov
pop
pop
test
repz
icebp
call
ja
jp
push
fildl
sub
pop
mov
dec
in
ss
inc
adc
pop
add
daa
pop
xchg
or
mov
sbb
sub
pop
xor
mov
and
outsl
or
mulb
sub
jl
pusha
inc
bound
dec
fwait
mov
sbb
and
xchg
or
cmpb
aad
inc
jp
jge
adc
jl
jns
xor
dec
mov
aaa
xchg
sbb
test
out
jg
push
das
pop
pop
ljmp
inc
push
dec
or
lret
das
ret
inc
notb
xchg
pushf
subl
ret
das
rolb
dec
cltd
sbb
fimuls
je
ljmp
and
stos
gs
jl
mov
inc
xchg
aas
dec
fdivrp
mov
lock
dec
data16
aas
mov
inc
xchg
inc
cmp
je
in
xchg
mov
lahf
es
pop
pop
icebp
pop
inc
adc
fs
push
dec
pop
xor
sbb
iret
roll
pop
fildll
inc
adc
jge
xor
clc
mov
xorl
mov
int
or
mov
mov
inc
mov
arpl
inc
repnz
mov
testl
sbb
cmp
mov
jns
subb
test
repz
jl
cmp
call
pop
jl
adc
inc
cmp
loopne
and
inc
outsb
dec
test
stc
xor
xorb
jno
dec
aad
pop
mov
adcl
cmp
dec
pop
or
mov
dec
jne
ret
mov
add
jle
or
inc
test
lods
push
cld
inc
xlat
lret
nop
adc
or
or
inc
or
pop
cmp
pop
add
stos
ret
sub
lock
adc
dec
add
or
enter
or
cmpsb
shrd
mov
test
fnstenv
and
frstor
test
and
jo
pop
jl
loop
shlb
std
js
shll
cmp
mov
xlat
xchg
out
test
mov
inc
pushf
xchg
push
out
mov
in
test
hlt
hlt
push
sub
jp
es
and
in
ret
hlt
dec
decb
pop
dec
cmp
rcr
clc
in
push
push
fldcw
xchg
lea
adc
sub
cmp
dec
fisttps
or
pop
fwait
adc
sbb
fwait
mov
adc
push
imul
cwtl
fisubrs
jae
pop
lds
fwait
leave
or
icebp
mov
loope
std
mov
jnp
or
mov
add
in
xor
sub
aad
adc
ffreep
mov
inc
pop
cli
ret
dec
adc
dec
sub
insl
cmp
stos
popf
ss
dec
cmp
xchg
mov
cmp
dec
and
std
push
cmp
push
je
mov
pminub
pop
mov
jmp
shlb
xchg
pusha
aam
add
sbb
xor
cmpsb
idiv
ret
mov
xchg
jo
clc
mov
dec
pop
push
repnz
pushf
aaa
xor
fwait
mov
iret
cmp
pop
push
cmp
outsl
sbb
in
pop
dec
dec
out
popa
push
sbb
pop
loopne
mov
or
adc
dec
xor
xchg
adc
mov
ret
in
and
sbb
stos
mov
clc
jb
stos
daa
cmpsb
out
cmp
add
dec
cmp
stos
les
xchg
pop
mov
dec
xor
cwtl
dec
fstps
pminub
push
andl
mov
sub
jl
cmp
dec
mov
repnz
push
xchg
stos
inc
ljmp
mov
xor
loope
mov
push
aaa
shr
jp
adc
mov
std
incl
jb
iret
fmul
mov
leave
popf
sbb
push
aaa
imul
push
stos
jl
add
xor
pusha
sahf
lock
rorl
into
repnz
pop
jae
pop
ds
pop
lret
add
shl
into
sti
mov
in
aaa
adc
pop
cmp
sbb
mov
jae
jo
pop
ret
popf
fstl
mov
into
xchg
push
sub
stc
ljmp
outsb
mov
mov
shll
insl
test
lcall
adc
cli
insl
push
xchg
inc
jae
sub
xchg
adcb
gs
inc
imul
adc
jmp
inc
mov
out
cmc
jmp
or
dec
jecxz
push
push
test
out
sahf
test
dec
rorb
cmc
daa
jno
scas
bound
pop
or
shll
sbb
es
mov
jp
jmp
popf
pop
xchg
out
lods
test
lret
aam
sub
jge
pop
xchg
lcall
shll
in
jo
jge
add
jnp
sbb
inc
jb
es
js
dec
rcr
jmp
mov
sbb
mov
std
mov
mov
mov
scas
loope
jno
push
pop
cmpsl
push
test
aam
je
daa
hlt
fistpll
inc
loopne
push
das
inc
je,pt
pop
clc
mov
outsl
je
daa
out
mov
outsb
adc
inc
xchg
jo
imul
fldt
xchg
push
ljmp
pop
sbbl
mov
test
and
loope
pop
xchg
or
imul
sub
int
in
test
arpl
fsin
or
push
ds
dec
xchg
imul
xorb
xor
adc
ret
repnz
jecxz
and
lods
cli
push
jl,pn
pop
mov
jne
push
inc
cwtl
add
std
pop
sbb
lcall
dec
mov
scas
sbb
mov
adc
hlt
sbb
pop
and
stos
push
xchg
lret
imul
jmp
sub
xchg
mov
fistl
imul
adc
inc
pusha
xchg
mov
sti
dec
inc
jmp
sbb
jg
out
adc
or
movsb
divl
aaa
push
push
stos
jnp
call
push
nop
popa
clc
pop
sbbl
adc
fldl
jo
fdivs
mov
mov
scas
cmp
inc
push
mov
cmp
outsl
aaa
sbb
mov
das
and
into
mov
jne
and
enter
pop
and
stos
rcrb
or
data16
out
outsb
insb
lea
jecxz
add
add
fmull
pusha
popa
and
pop
ret
jns
xchg
sub
jmp
into
inc
adcb
adc
jbe
jne
adc
outsl
into
inc
cmp
lods
stos
cld
or
xchg
mov
lds
imul
pop
iret
sbb
daa
sbb
sub
add
aad
inc
adc
jo
cli
wbinvd
add
cmp
jle
push
popa
or
ret
cwtl
lea
cltd
in
out
movsb
into
mov
mov
faddl
add
mov
out
cltd
in
popf
dec
je
add
rcrl
pop
bound
gs
pushf
lods
mov
push
dec
repnz
pop
loop
jmp
inc
iret
mov
js
add
xlat
stos
fdivrl
fildl
sbb
popf
or
mov
clc
inc
pop
inc
insl
aad
or
xchg
pop
div
inc
push
test
hlt
mov
rcrb
pushf
dec
inc
add
and
add
jecxz
nop
add
sbb
iret
push
sub
add
iret
jmp
call
inc
inc
push
adc
pop
cmc
adc
xchg
movsb
lret
jno
lret
addr16
movsb
movsb
sbb
std
lret
add
dec
jecxz
fdivrp
sub
stc
leave
push
repz
clc
movsb
push
arpl
sbb
or
xchg
lahf
clc
cmp
xchg
cmp
in
push
repz
xor
clc
dec
cmp
adc
aad
xchg
divl
es
cmpsl
cld
jl
mov
out
loope
sbb
outsb
and
cmpl
jle
bound
repnz
mov
mov
divb
out
cld
dec
mov
pop
clc
xor
outsb
cmp
test
pop
and
insb
adcl
sti
fbstp
fdivl
fs
mov
rcll
sahf
aas
std
repz
sub
mov
mov
push
xor
aas
movsl
fldcw
out
push
add
in
das
movsb
fidivrs
push
loope
inc
push
jae
mov
xchg
sbb
pusha
lretw
ds
cmp
int3
inc
xchg
xchg
pop
out
test
add
lret
inc
loopne
sub
stos
aaa
push
sbb
test
adc
cmp
pop
add
mov
push
dec
jo
jecxz
aad
mov
add
dec
mov
test
loopne
add
sub
test
mov
inc
stos
gs
adc
mov
std
jne
or
fsubrs
sbb
cwtl
test
fcoms
jmp
idivb
lds
inc
sub
dec
dec
push
out
fbld
imul
popf
fwait
xor
std
pop
sahf
mov
sbb
lds
dec
icebp
dec
pop
aaa
ljmp
in
fiaddl
subb
idivl
lcall
int3
push
or
std
xchg
std
sbb
jmp
jmp
push
enter
rol
rorl
mov
or
inc
mov
xor
mov
mov
stc
int
mov
xchg
ret
inc
test
test
inc
push
pop
pop
in
and
dec
cld
xchg
xor
and
and
mov
cltd
stos
mov
pop
mov
dec
cmpsl
stos
addb
mov
push
cld
test
cmp
int
xchg
aad
in
ret
scas
pusha
jnp
pop
jle
jecxz
stc
sbb
mov
sub
push
dec
dec
sbb
push
add
mov
cs
cs
rep
pop
dec
mov
call
xchg
pop
add
les
fstp
or
ds
insb
xlat
adcl
movsl
mov
mov
call
inc
add
sbb
adc
je
xor
inc
adc
xor
xor
hlt
dec
les
outsl
mov
or
scas
or
stc
cmp
ficoml
sub
jbe
int3
sbbl
addr16
sbb
mov
mov
cwtl
ret
ds
sub
mov
ret
loope
xchg
imul
pop
popa
xchg
stc
shll
adc
outsl
in
cmp
rcrb
pop
xchg
inc
inc
mov
mov
dec
movsb
push
xor
insb
xchg
sarl
mov
push
cmp
mov
mov
fcom
lret
and
lahf
ret
loopne
movsl
mov
pop
adc
jp
fdivs
or
int3
xor
ret
daa
bound
mov
sbb
push
jb
fdivrs
subl
out
dec
cli
adc
je
lods
js
inc
sar
ss
and
mov
push
dec
jns
iret
pop
call
aas
mov
xchg
repz
sbb
pop
or
dec
and
xchg
xor
xor
mov
addr16
fstpl
sub
fistpll
jbe
imul
jnp
call
cmp
scas
das
sbb
fsubr
xlat
jnp
push
adc
sbb
and
int
fs
sbb
xor
adc
in
push
sub
lret
mov
push
sbb
inc
lea
mov
mov
sbb
and
mov
rcr
xchg
pop
arpl
shl
push
inc
mov
lea
mov
mov
pop
xorb
lds
dec
or
imul
in
lods
fisttpl
das
aad
je
cmp
push
inc
push
add
rclb
cmpsb
fcompl
sbb
subl
push
lcall
sub
dec
push
and
pop
cmp
lret
imul
inc
mov
stos
cmp
ss
pop
sbb
pop
cs
sub
stos
inc
gs
aad
mov
sbb
ret
xlat
mov
rcrl
ss
dec
fwait
out
inc
push
push
ret
in
cmpsl
push
in
mov
lret
fldenvs
insl
std
sbb
adc
mov
push
xchg
mov
aad
fisttpl
sti
fisubs
outsb
fstpl
cwtl
stc
and
push
or
sub
sub
rorl
lock
adc
inc
movl
or
pop
dec
add
and
jae
loopne
stos
inc
out
aad
call
rcrb
and
lret
xor
imul
imulb
int
fidivs
idivb
mov
stos
bound
dec
sbb
pop
lods
test
in
lret
dec
mov
int
gs
jl
sub
jecxz
push
and
cmp
jne
pushf
ret
inc
mov
mov
rcrb
push
rcr
in
test
cli
ds
adc
repz
in
add
subl
mov
cmpsb
push
xlat
cli
dec
leave
ja
mov
push
push
mov
push
cltd
inc
ret
cmpsb
outsb
mov
sub
add
movsl
and
sbb
inc
push
pushf
jecxz
inc
jmp
push
in
or
add
add
cs
xchg
mov
jae
add
fisttps
imul
pop
push
loopne
sbb
jp
fcompl
pushf
stos
cwtl
cmpsl
popa
xchg
sti
fildll
ficoml
inc
push
insl
inc
fcmovbe
cmp
adc
adc
in
cltd
loopne
cmp
mov
jmp
outsb
pop
sbb
into
pop
insb
mov
pop
aaa
or
dec
push
sub
cmp
push
je
lods
aad
pusha
in
xchg
mov
push
int3
cmp
int
lock
daa
dec
lahf
push
js
rclb
sbb
cmp
arpl
cmpl
enter
xor
rclb
xchg
movsl
dec
imul
stos
in
and
dec
imul
inc
and
jne
mov
pop
inc
mull
push
bound
or
in
insb
mov
fimull
mov
and
dec
push
sbb
aad
lahf
es
mov
rorl
and
lret
in
sub
xor
mov
add
cmpsl
inc
retw
das
pop
out
mov
mov
xor
rcrb
cwtl
dec
xlat
push
or
mov
and
pop
sub
jg
lods
mov
inc
jns
andps
gs
idivl
cli
iret
fistpl
adc
orl
add
lahf
sub
push
sbb
adc
test
add
add
jne
repnz
stos
subb
xchg
aam
popa
jl
pop
cmp
in
sbb
cli
sub
add
mov
pop
dec
mov
fiadds
inc
mov
sti
mov
jp
pusha
stc
inc
sub
daa
dec
aaa
loop
xchg
enter
pop
leave
rcr
ret
adc
add
inc
pop
dec
sub
push
inc
inc
sub
rorb
bound
sbb
push
sbb
adc
mov
cmp
xor
add
add
cmpsl
push
sbb
fsubrl
xchg
cmp
add
cmp
sub
and
pop
insb
jns
push
lret
and
sti
loop
daa
mov
sub
inc
out
jae
movsb
popa
mov
aam
jp
xor
mov
or
fisubl
rorb
adc
inc
dec
lock
ret
movl
fwait
push
xchg
shrb
pop
push
xor
popa
icebp
sarl
idiv
pushf
ret
sbb
dec
sub
frstor
test
sbb
out
add
inc
ljmp
xlat
xchg
adc
push
adc
fdivrl
push
adcb
pop
push
addr16
xchg
or
shlb
jb
jmp
mov
xor
and
dec
and
or
ret
xor
jl
fnstsw
push
add
fdivs
test
shll
rol
shl
push
cmp
fcompl
and
cli
movsl
test
jge
add
push
daa
imul
in
clc
add
in
mov
cli
mov
mov
imul
mov
mov
scas
test
xor
outsl
pushf
add
cmp
sarl
icebp
testb
add
lock
sub
pop
jne
or
adc
in
out
ljmp
dec
mov
mov
and
imulb
push
jae
jae
nop
data16
add
jg
mov
shl
mov
xchg
stc
inc
mov
les
test
jo
outsb
adc
or
dec
pusha
jle
ljmp
sar
shlb
icebp
or
jnp
mov
out
mov
xor
mov
loop
bound
cs
inc
cmpsb
jle
push
fisttps
mov
loopne
je
test
test
mov
test
mov
mov
xchg
scas
xchg
arpl
sub
mov
sub
repz
lret
jl
rclb
jge
stc
fsubs
or
mov
push
and
loop
sub
insl
mov
jecxz
scas
cmp
mov
jge
inc
stos
xor
clc
mov
lret
gs
cmp
out
inc
push
mov
jns
iret
mov
jmp
xchg
cmp
push
inc
inc
arpl
xchg
fimull
dec
scas
push
jbe
hlt
ljmp
mov
pop
dec
mov
lret
adc
sbbl
int3
add
insl
sub
outsl
loop
loopne
fidivrs
cwtl
mov
cmp
xchg
and
popl
push
xor
push
jge
xor
dec
ret
jmp
cld
sub
out
mov
ja
cmc
xchg
call
add
hlt
mov
or
push
lods
cli
push
movsb
push
inc
out
mov
mov
push
movb
insl
or
sub
add
mov
imul
dec
cmp
ror
cmp
fmull
sub
out
testb
pop
std
rolb
push
adc
rcrl
push
divl
iret
mov
stos
adc
mov
jecxz
out
leave
out
stc
sahf
push
daa
and
call
popf
jg
mov
inc
aaa
je
jp
and
push
pop
lahf
push
mov
and
cmp
jbe
lods
fdivrs
xor
imul
fisttpl
cmpsl
orb
xor
mov
shr
pop
inc
add
aas
aad
gs
inc
divb
cmp
push
in
and
paddq
mov
imul
fld1
or
or
add
inc
divl
add
je
out
add
jg
cmovno
ss
stc
push
xchg
outsb
mov
fildl
dec
lcall
sbb
test
xchg
xchg
inc
mov
push
fimull
pop
ss
mov
pop
lds
mov
sbb
aas
mov
xchg
fsubrl
sub
aaa
notb
imul
test
mov
cld
cld
js
aaa
pop
fdiv
or
cmp
jnp
sbb
push
loopne
adc
push
rcpps
mov
jo
mov
and
sub
push
negb
fadds
push
jns
stos
dec
add
out
xor
ret
ja
jnp
push
sub
cmpb
test
lods
insl
inc
sub
adc
addr16
popa
or
imul
negl
adcl
mov
ret
push
sarb
stos
dec
fwait
or
pop
in
mov
movsl
fcomps
lock
in
xchg
pop
sbb
out
enter
in
jae
imul
add
and
stos
lret
cltd
push
inc
mov
jno
mov
xor
in
rcrb
or
adc
mov
xlat
fcomp
ja
pop
sub
adc
lods
jns
fsub
lods
inc
je
std
int3
push
daa
push
ds
sub
push
mov
int
bound
std
jae
aaa
mov
and
inc
mov
mov
pop
rorl
dec
js,pt
fmul
ror
jp
and
scas
nop
adc
sub
or
sahf
aad
cmpl
pop
adc
add
js
dec
hlt
iret
std
pop
or
sub
xchg
lds
xchg
xchg
push
cld
sbb
mov
imul
data16
fwait
aad
add
xor
aaa
lods
sbb
pop
cmp
jg
addb
adc
andb
lods
jno
or
mov
dec
dec
aad
xorl
inc
clc
push
adc
repz
jns
mov
sub
scas
jle
pop
std
jl
push
adc
jo
mov
dec
cmp
in
pop
mov
loope
jne
mov
jo
call
jb
sbb
or
into
fiadds
lret
mov
pop
mov
pusha
popa
pop
ss
sbb
in
sarl
incl
dec
lahf
and
adc
xchg
mov
ret
jge
dec
rorl
gs
push
jno
fsts
cli
ds
add
push
es
push
push
or
andps
xchg
into
stos
mov
dec
inc
inc
cwtl
cli
xchg
aad
out
out
fidivl
ret
icebp
pop
cs
cmp
jle
fucomi
push
cwtl
cmp
cmpsl
outsl
inc
and
xchg
adc
sahf
push
aad
xor
xchg
cmpsb
and
pusha
mov
jecxz
faddl
sarb
mov
into
ja
sub
inc
mov
cmc
fs
mov
out
or
out
dec
ret
xorb
jmp
and
stos
xchg
jno
sbb
jg
cli
jbe
in
pop
test
out
or
ror
sub
xchg
outsb
add
in
pop
mov
and
dec
in
xor
shll
sbbb
fimull
jecxz
push
pop
in
sbb
and
mov
add
ds
push
das
push
into
mov
pop
push
mov
fs
mov
cld
mov
test
aam
sbb
xor
fucomp
sbb
mov
pop
or
pop
std
add
xchg
lods
mov
nop
mov
pop
pop
andl
push
cwtl
mov
mov
mov
jge
fdivrs
push
and
lods
mov
and
pop
dec
adc
es
js
xchg
test
mov
in
not
int3
aam
test
in
adc
xchg
xchg
mov
xor
jl
cmc
enter
mov
sahf
adc
inc
push
movsb
inc
or
mov
inc
sahf
cli
cltd
jns,pt
pushf
push
add
pusha
mov
dec
shll
and
lods
out
mov
adc
or
das
sar
or
mov
lahf
aam
mov
pop
push
enter
dec
pop
pop
cmp
adc
sbb
in
in
in
xchg
xor
mov
and
fldenv
xor
push
add
cmp
and
jle
push
lcall
dec
lret
xchg
inc
mov
int3
lret
inc
adc
pusha
test
int
push
enter
jae
xchg
cmpsb
aas
insl
aaa
stos
jno
mov
inc
and
hlt
lret
int
dec
or
lret
adc
ret
jg
pop
cmp
loop
ds
jnp
jle
das
mov
inc
je
mov
lods
pushf
ja
test
inc
ss
shl
push
adc
dec
int3
mov
popa
out
pop
mov
and
hlt
loope
lahf
push
xor
aaa
xchg
in
mov
shll
aas
or
adc
mov
outsb
imul
and
mov
dec
pop
mov
and
clc
mov
pop
xor
femms
xchg
sub
rolb
push
ja
inc
xchg
push
and
xlat
mov
add
int
add
hlt
sub
xchg
sbb
xor
pop
lcall
addb
testb
mov
push
dec
sbb
insb
sub
pop
divl
fildl
xor
std
mov
cmp
inc
call
ljmp
cmp
aad
add
je
iret
test
loopne
push
cmpsb
cmp
fstps
fsub
inc
fdivr
sub
xchg
and
fdivl
test
lret
dec
js
or
push
lods
jmp
xchg
xor
mov
scas
xor
add
adc
in
cmpsb
lret
push
sahf
hlt
cmp
push
jae
int3
leave
lods
push
sbb
mov
test
in
mov
std
movsl
pop
or
adc
fcomps
mov
stos
and
mov
aam
xor
cmc
push
incb
lea
push
scas
add
test
pop
sbb
ljmp
enter
cld
mov
cmpsl
jmp
mov
cmc
ret
cmp
pop
mov
lret
fwait
sub
push
insl
dec
ret
fldl
into
ds
ds
ret
je
addl
popf
int3
mov
in
std
xchg
mov
pop
scas
sub
xchg
push
mov
mov
push
stos
ljmp
fimull
in
pop
jo
xchg
push
enter
mov
push
and
xchg
push
insb
jno
pop
or
xorl
mov
adc
scas
stos
pop
and
test
push
in
sub
pavgw
les
mov
ret
sbb
and
add
and
bound
and
and
das
pop
cs
jb
sbb
mov
adc
lahf
imul
repz
jnp
inc
mov
lret
and
inc
adc
in
clc
jo
cmp
dec
xor
ljmp
sub
ror
mov
enter
into
xchg
out
xchg
xlat
movsl
add
in
push
adc
dec
add
bswap
and
das
std
and
and
aas
fstpl
mov
nop
push
ror
cltd
cmp
icebp
add
jmp
es
add
fcmovne
mov
xchg
leave
iret
xor
push
xlat
lods
cmp
cmpsb
dec
scas
clc
jnp
andl
sub
mov
fsubrl
cmp
mov
ljmp
int
sub
inc
arpl
loopne
xor
aas
mov
lret
xchg
push
popa
mov
xor
cld
cmp
pop
push
imul
mov
cmpsb
shr
pushf
dec
out
and
arpl
jno
addr16
inc
loop
mov
rorl
das
cmpsl
cmc
scas
xchg
push
or
xchg
mov
mov
cmpsb
or
inc
xchg
xor
gs
insl
enter
lods
xchg
dec
rcl
pop
mov
dec
dec
inc
mov
or
mov
cmpsb
mov
or
jbe
test
mov
es
repnz
std
cmp
mov
and
aaa
repz
jns
iret
out
ret
dec
pop
inc
inc
cwtl
cmpl
aad
cmpsb
addr16
jmp
xor
mov
add
jmp
mov
sub
dec
add
cmp
mov
out
notl
jno
mov
mov
mov
cmp
sub
sub
aas
xor
mov
mov
ret
movsb
outsb
jp
je
push
mov
sbb
movlps
xchg
push
iret
clc
dec
sub
cmc
rorl
js
or
mov
add
insb
aad
mov
pop
mov
jne
movsl
aam
mov
adc
cld
pop
mov
call
sub
rorb
xor
repz
cmp
addr16
mov
add
jl
cmp
mov
or
mov
mov
jne
test
push
and
adc
mov
hlt
rcrl
fdivrl
shlb
or
dec
xor
cmpsb
jnp
ss
push
cmp
repnz
and
mov
xchg
movsl
sub
jo
dec
or
and
ds
aad
mov
cmp
jp,pt
addr16
scas
xlat
arpl
cmp
lret
test
cmp
adc
popf
jo
push
jne
inc
loop
repz
lret
sbb
push
iret
push
fldt
or
xchg
fidivrl
popf
orb
cmpsb
or
adc
ja
ljmp
adc
dec
movsl
aas
lods
xchg
jne
sarb
out
test
getsec
or
xchg
popa
mov
rcll
inc
hlt
daa
ds
jp
mov
xor
imul
test
jp
hlt
stos
or
mov
mov
out
fcomps
sbb
pop
cmpsb
xor
fwait
fwait
dec
aas
mov
inc
rcrl
mov
enter
pushf
js
out
fimull
xchg
push
std
add
rol
xchg
int3
lods
add
stc
into
je
jne
mov
or
cli
xchg
xor
mulb
and
xor
mov
pop
xor
fistl
mov
add
sbb
jl
sbb
sub
push
push
jmp
mov
cmp
xor
or
xor
scas
cmp
inc
negl
mov
xlat
jecxz
xchg
xchg
mov
sar
cmp
sbb
sbbl
or
fisttpll
stos
les
xorb
mov
mov
int3
rclb
pop
inc
shlb
jno
pop
push
inc
xlat
mov
xor
inc
ds
pop
mov
out
cli
sbb
aaa
mov
push
pop
mov
jp
js
cmp
fisttpl
inc
cmp
mov
xchg
call
or
and
loop
xor
cmp
sub
ret
cli
sub
ljmp
in
out
popa
je
aas
jge
jecxz
and
call
push
dec
pop
and
in
mov
adc
pushf
xor
imulb
dec
test
jmp
pop
in
and
clc
adc
push
sub
jns
aaa
sahf
stc
mov
mov
stos
sbb
cmp
mov
repnz
je
cs
xchg
add
loope
and
out
adc
dec
sbb
xor
mov
repz
inc
test
mov
loop
loop
pop
mov
insb
repnz
lret
aaa
cmc
dec
dec
fbld
popf
jmp
push
repnz
mov
mov
sub
pusha
mov
arpl
jg
out
mov
sub
add
and
pop
and
sub
adc
aad
mov
xor
es
cmp
cld
sub
aam
dec
sbb
jns
add
ja
lock
sbb
xchg
cwtl
xchg
mov
ficompl
movsb
jne
add
pop
push
mov
push
movsl
sbb
jle
or
insl
shll
adc
sti
or
dec
inc
xchg
test
and
jg
inc
adc
adc
and
mov
lods
pop
push
mov
mov
cs
mov
cmpsb
push
inc
lds
mov
inc
scas
pop
jp
add
fstpt
movsb
shlb
dec
push
adcb
ljmp
faddp
dec
data16
mov
inc
mov
cmpsl
pop
fcomi
xchg
cmp
inc
push
outsl
mov
cmp
sbb
cmpb
or
sbb
or
movsb
cmp
push
inc
fstps
lret
lar
push
jmp
lds
jge
insl
je
mov
jecxz
push
daa
jnp
out
push
sarl
mov
sbb
call
sbbl
int3
pop
jb
es
leave
xor
lock
cld
hlt
stc
test
fwait
push
push
jl
fiadds
adc
mov
dec
mov
add
jne
add
dec
mov
push
sbb
jae
outsb
lods
pop
ficoms
pop
adc
or
movsb
adc
cmc
pop
jp
adc
mov
jge
xchg
xlat
arpl
loope
push
mov
jg
xlat
add
mov
adc
mov
mov
call
and
add
jle
int3
lods
inc
mov
lcall
imul
xchg
add
out
mov
loop
lret
jl
out
mov
mov
cs
mov
lea
mov
shrb
repnz
or
ljmp
cmp
mov
push
jecxz
pop
enter
and
lock
push
mov
and
shlb
xchg
fs
mov
les
cmpsb
push
in
fwait
pop
stos
mov
push
mov
lret
pop
ljmp
rcr
cmc
int
pop
xor
mov
shlb
pop
sub
or
jnp
mov
gs
lods
into
aam
loop
insl
pop
cltd
ljmp
nop
jo
lods
sub
sarb
rorl
cwtl
fldcw
sbb
call
mov
in
mov
mov
ljmp
in
pop
pop
push
add
arpl
cmp
dec
adcl
mov
es
test
mov
or
pop
pushf
ret
push
rorl
dec
mov
es
push
loope
mov
push
cmp
and
loop
xchg
loop
out
std
add
cmp
mov
and
inc
int3
mov
popa
xor
jo
inc
out
inc
jae
int3
imul
push
push
dec
movsl
mov
jmp
jae
jge
leave
inc
clc
sub
jae
jnp
push
mov
mov
add
out
roll
xor
mov
aam
sub
sbb
sbb
dec
inc
pushf
popf
sbb
mov
fiaddl
or
push
gs
adc
outsb
fisubrl
xchg
insb
ljmp
fwait
ret
rcrl
add
js
add
inc
adc
add
or
or
jecxz
jno
pop
loop
les
xor
xorl
push
and
xchg
dec
icebp
dec
insl
repz
les
out
fstl
stos
lret
cmpsb
mov
mov
cwtl
dec
inc
scas
aas
test
inc
adc
aad
pop
pop
push
or
jno
adc
test
stos
mov
sub
pop
loopne
xor
aaa
loopne
push
sbb
test
mov
xchg
mov
push
cs
mov
dec
aaa
sahf
es
dec
stos
fisubrs
dec
push
jge
cli
mov
mov
and
jns
cmp
insb
xlat
xchg
ljmp
mov
mov
mov
xchg
movsb
mov
xchg
fscale
mov
push
mov
mov
rcl
or
mov
ljmp
adc
push
aas
and
xor
int
ja
sub
lcall
dec
mov
fidivrl
mov
or
insb
lock
cmp
ffree
mov
stos
mov
pop
cmpsl
lock
jnp
inc
mov
sarb
inc
rorl
fistl
call
and
pop
pop
mov
pop
cmpsb
pop
mov
imul
es
jno
mul
jp
push
imulb
dec
les
mov
icebp
js
shlb
push
cmp
mov
subb
and
dec
shl
dec
cwtl
jg
fdivr
pop
or
or
cmpsb
cmc
sub
loope
dec
mov
cltd
jl
mov
jmp
scas
or
push
pop
mov
push
test
fidivs
adc
leave
or
test
cmp
out
dec
dec
sub
mov
jmp
add
in
and
add
xor
sub
or
adc
in
mov
push
cld
mov
dec
das
dec
pop
mov
pop
jge
cmp
enter
jl
nop
pushf
adc
shrl
stc
xor
push
out
loopne
dec
pop
stc
ljmp
push
or
scas
mov
add
push
inc
mov
mov
xorl
mov
add
pushf
adc
add
sbbl
adc
outsl
orb
and
and
outsb
test
mov
call
enter
xor
mov
jl
ljmp
call
es
push
ds
pop
xor
push
arpl
andb
ljmp
gs
je
xor
cmpl
shlb
dec
test
jle
arpl
imul
mov
jecxz
mov
bound
cld
cmp
int
aad
lret
inc
pop
or
sub
in
sti
je
test
notl
in
repz
adc
sahf
lahf
xchg
push
pop
jnp
gs
jne
pop
fnstcw
adc
push
adc
xchg
nop
xchg
jl
subl
push
push
nop
test
push
ja
add
popl
popa
mov
pushf
pop
movsl
or
rcrl
sbb
dec
or
shlb
xchg
mov
loope
add
sbb
push
les
loope
std
dec
dec
mov
fisubrs
mov
js
daa
mov
sarb
push
sub
ljmp
mov
xor
dec
dec
cmp
rcll
insb
fsubs
and
popf
xchg
and
mov
scas
mov
clc
inc
out
push
lods
mov
adc
inc
mov
xchg
and
sub
shl
loope
ss
daa
jg
push
jmp
jnp
aam
mov
fildl
icebp
jo
push
call
cs
adc
ret
sub
push
loop
cs
inc
clc
xor
adc
lods
cld
jnp
nop
lahf
mov
fwait
insl
ljmp
test
add
xor
rcl
push
loopne
xchg
xlat
mov
cmc
or
add
cmp
pop
ja
dec
repnz
clc
sbb
enter
mov
mov
and
sarl
in
push
scas
jb
push
std
push
or
xor
mov
sahf
dec
sahf
push
mov
roll
pop
in
inc
lret
inc
clc
add
inc
jnp
ja
aaa
inc
dec
mov
lret
or
lock
enter
or
mov
xor
call
int3
sub
or
inc
xor
insl
mov
xchg
adc
pop
lret
in
cmp
jns
inc
dec
jge
in
je
push
push
fists
cmp
mov
adc
jae
jp
mov
and
nop
xor
dec
push
cmp
cli
and
xchg
jg
or
lods
mov
movsl
aad
stc
out
mov
into
stos
mov
inc
je
pop
iret
and
push
jge
cmp
and
mov
rcrl
sbb
scas
sub
outsb
pushf
sbb
idiv
outsl
stos
in
dec
sub
lods
adc
fldcw
outsl
into
jg
fstps
push
movsl
mov
jae
loopne
paddb
add
loop
pop
mov
sub
daa
add
push
mov
or
adc
cmc
out
out
sti
mov
mov
sbb
ret
scas
je
in
ss
mov
jp
mov
sbb
repz
outsl
iret
into
fdivr
inc
sti
mov
mov
scas
sti
mov
push
push
mov
dec
fadd
xchg
leave
and
adc
insl
push
jne
loop
jns
mul
lret
je
ret
sub
cmpl
mov
clc
xchg
adc
push
push
test
fs
pop
mov
lock
cmp
test
xor
stos
vmovntdq
js
jle
ss
sarb
stc
xchg
fs
sbb
imul
aas
dec
cmp
dec
cmp
add
mov
or
pop
pusha
cmp
jb
das
pushf
adc
jg
sub
adc
or
xchg
out
gs
xor
push
jne
ss
popa
xor
jnp
push
orb
add
xor
loop
int
push
jl
negb
out
mov
or
and
dec
decl
sub
out
neg
lahf
jo
mov
cmpsb
fdivr
into
push
in
jmp
inc
adc
xchg
cmp
adc
pop
dec
mov
movsb
jb
xor
inc
xor
mov
add
or
push
rorl
xor
stc
xor
xor
jae
js
sti
test
movsl
sub
cli
rol
fsubs
ljmp
movsb
sub
addr16
scas
cmpsb
fcoms
and
lcall
mov
jno
sbb
dec
push
gs
ljmp
xor
or
lcall
jb
sub
jnp
and
mov
sbb
add
mov
clc
negl
rorb
hlt
mov
fmull
xchg
jo
cwtl
mov
mov
mov
testl
xor
imul
das
std
lods
xor
jb
push
dec
mov
loope
cmpsl
jp
wbinvd
jae
xor
cltd
pop
es
push
insb
mov
or
test
ss
es
mov
sub
jge
rolb
shll
xor
jp
lea
pop
ret
mov
pop
xchg
pop
add
leave
jnp
or
push
aaa
arpl
mov
subb
mov
int
loop
and
lret
cld
and
xchg
push
xor
jl
sub
jle
int3
popf
out
movsb
and
jns
lock
std
jno
sub
jno
popf
mov
xchg
imulb
test
pushl
mov
xchg
vmulps
jne
aas
call
jge
mov
or
icebp
mov
ljmp
sti
std
jle
adc
ret
loope
fisubl
aad
sti
or
mov
cmp
mov
dec
pop
mov
cmc
sti
sub
push
call
add
sbb
pop
mov
xchg
aam
lods
sbb
sbbl
test
arpl
jnp
sbb
je
pop
leave
sbb
mov
cmpsl
adc
sub
pop
out
outsb
js
sti
enter
and
stos
data16
fldenv
pop
push
rclb
nop
mov
inc
inc
push
and
sub
mov
mov
or
cmp
bound
mov
rclb
cmp
pop
aas
or
sub
and
pmaxub
das
push
fadds
inc
cmc
add
fsts
inc
dec
push
cmp
push
addb
dec
mov
push
ret
mov
pushf
icebp
add
daa
lahf
pushf
xchg
cli
mov
sbb
sbb
lods
cmc
inc
xchg
sahf
cmp
xorl
push
and
dec
aam
std
dec
loope
ljmp
mov
ja
sahf
xchg
cmp
addl
iret
shl
push
jg,pt
cmp
pop
int3
movsl
scas
dec
mov
inc
popl
mov
bound
dec
sbb
out
sahf
jl
fisubs
mov
sub
xchg
mov
orb
movsl
pushf
jnp
clc
dec
cmpsb
mov
outsl
mov
lret
fsts
xor
xchg
jp
inc
bound
cs
and
jbe
call
cs
jmp
dec
push
in
xor
xchg
push
in
sub
xchg
dec
add
js
lods
mov
mov
ljmp
ja
scas
mov
cmp
mov
cli
cmpsb
shll
inc
std
pop
add
leave
lahf
dec
fnsave
jns
out
dec
cli
sub
push
xor
sbb
xchg
cmp
mov
sbb
pop
and
push
sub
xor
cli
dec
lds
xor
push
dec
mov
loopne
mov
ficomps
aaa
add
jb
xchg
inc
fmull
es
imul
test
jmp
dec
mov
int3
and
mov
sbb
mov
add
mov
xchg
je
sub
ret
push
mov
pop
mov
cwtl
rcrl
or
fistps
insl
pop
or
mov
sub
ljmp
and
repz
loope
aad
or
mov
ret
mov
sbb
push
jl
je
leave
jp
pushf
cmpsl
sbb
mov
cmp
pop
sub
fdivs
lahf
scas
jp
ror
mov
mov
mov
int3
sarl
scas
int
sbb
shlb
ljmp
lret
cmp
xorl
ja
and
mov
push
sbbl
inc
sarl
xlat
push
xchg
not
and
or
push
mov
mov
or
xorl
cmp
jecxz
dec
sbb
cs
mov
nop
cmp
push
or
cmp
and
imul
inc
sub
and
mov
pop
popa
jmp
int
pop
jle
pusha
ss
inc
xor
ss
ds
js
mov
sbb
daa
cli
jl
pop
jns
mov
imul
mov
and
insl
cmpsb
lods
std
faddl
sub
jns
adc
lock
and
test
rclb
or
icebp
adc
xor
movsb
sub
les
bound
out
and
into
pop
mov
cmp
int
cmp
add
cltd
mov
mov
xchg
lods
sarb
or
aad
adc
cwtl
or
stos
inc
sbb
daa
dec
loop
les
sbb
clc
mov
into
movsb
pop
xchg
mov
xor
push
clc
lock
sub
adc
lahf
neg
pop
dec
jns,pt
fisttpll
cmp
shll
repnz
jno
out
cs
cltd
push
xchg
and
gs
in
lods
add
and
fwait
xor
ficompl
jle
xor
sub
sbb
in
adc
andb
jmp
outsl
xchg
jge
sbb
mov
pop
int
arpl
idivl
xchg
scas
das
ss
xor
shll
sbb
mov
leave
xchg
cmp
mov
dec
out
test
les
fimull
aam
or
dec
call
inc
adc
int
xchg
stos
cld
out
imul
sub
nop
ss
cli
push
insl
push
cltd
pop
aas
sub
xchg
jbe
pop
mov
outsl
enter
lcall
les
ss
aaa
fdivl
mov
mov
mov
add
xchg
rcll
lret
lret
scas
pop
xchg
js
pop
and
xchg
stc
jecxz
jle
inc
or
fsub
inc
jge
or
rcll
xor
inc
sbb
jle
and
mov
dec
xchg
cltd
gs
cmp
push
nop
lods
mov
rcrl
daa
cmp
mov
cmp
mov
xchg
mov
ljmp
div
setns
loop
es
sub
jns
in
lret
or
inc
idivl
xchg
scas
fsubl
mov
or
outsb
xchg
fnstenv
adc
int
test
rclb
push
push
dec
cmp
jnp
je
ret
jb
sbb
movsl
pop
cltd
loope
jne
flds
ret
mov
cmp
lcall
pusha
mov
xor
adc
sti
arpl
stc
test
popf
imul
push
jne
loope
cld
mov
insl
adc
fldt
in
cld
mov
das
xor
pop
loopne
test
xchg
adc
pop
rolb
bound
out
insb
mov
roll
adc
and
stos
rcrb
pusha
and
js
xchg
cmpsl
inc
sbb
mov
adc
insl
int3
xor
mov
sti
loope
test
das
or
cli
fwait
mov
cwtl
inc
and
call
enter
mov
les
mov
inc
mov
sti
mov
jle
mov
xchg
mov
and
fimull
xor
in
mov
mov
xor
xchg
pop
fidivrl
mov
sahf
and
hlt
add
or
inc
fadd
inc
jge
inc
adc
sbb
out
pop
and
xchg
arpl
adc
sub
imul
rolb
pop
test
sub
sahf
fdivrs
fwait
mov
jle
push
jnp
sbb
movsl
cmpsb
fprem
aaa
cli
mov
sub
ror
jge
arpl
mov
push
dec
jnp
loopne
mov
xchg
je
test
addr16
shlb
gs
inc
jl
test
xchg
ret
jge
inc
dec
dec
xchg
popl
shll
lock
add
jb
inc
pop
cmpsb
jno
xlat
sub
or
dec
hlt
fistpl
mov
daa
loopne
adc
js
adc
add
or
xorb
into
inc
sbb
lret
mov
iret
rcl
push
push
xor
sub
das
imul
test
or
lods
pop
mov
mov
leave
popf
sub
and
sti
mov
sarb
mov
add
or
hlt
mov
push
fldenv
sbb
sahf
call
imul
mov
mov
jl
add
out
or
sbb
add
lds
lods
call
dec
mov
pop
ds
loop
xchg
and
xor
push
dec
or
inc
push
into
sub
stos
pushl
push
aam
pop
xchg
orb
sti
or
dec
mov
sub
lds
jb
push
adc
sti
stc
dec
lret
dec
adc
mov
xchg
nop
push
and
mov
lock
or
cli
ja
sbb
rol
push
je
pop
ret
xorl
out
nop
pusha
sbb
scas
rolb
sub
orl
mov
sub
mov
cmp
pop
sarl
adc
sub
sub
movsb
ljmp
mov
ds
sub
jge
xchg
testb
fwait
mov
sub
je
cmp
lret
sub
nop
cmp
dec
mov
loop
into
inc
push
or
sub
movsl
testl
test
xchg
sbb
add
xchg
call
cld
popw
mov
xor
mov
inc
fimuls
dec
pop
and
in
addr16
sub
fsts
sahf
js
sbb
cmp
xchg
mov
xchg
jmp
call
cmp
jbe
or
ljmp
add
ljmp
cmp
fisubrl
addb
enter
lods
out
xchg
outsb
pushf
aam
fsub
insb
or
xchg
xor
out
fs
loope
mov
fidivrl
dec
mov
subb
orl
jge
mov
xchg
cmpsl
push
stos
mov
cli
adc
adc
mov
sub
add
stc
pop
shl
testl
or
cwtd
xor
ss
or
push
fimull
ss
subb
sub
pop
out
int
repnz
out
lea
js
adc
jne
leave
sbb
fisttpl
inc
cmpsl
dec
add
pop
mov
adc
add
mov
cmp
push
jo
aad
and
push
out
and
mov
cmp
loop
rcr
pop
pop
sub
mov
xor
jne
imul
xor
popa
lea
sarb
sbb
cli
and
pop
xchg
imul
mov
mov
clc
sahf
sti
mov
dec
ljmp
mov
loope,pt
mov
dec
sbb
in
mov
pop
dec
mov
or
inc
jbe
adc
mov
clc
rcl
cmp
mov
mov
mov
in
add
lea
jns
es
cltd
mov
cmp
es
sbb
xchg
dec
dec
movsl
icebp
adc
mov
jmp
and
out
imul
fidivrl
cld
addb
xor
mov
jp
adc
mov
mov
jmp
adc
into
add
test
cs
or
push
lahf
jle
lcall
jp
jmp
lea
fdivs
jne
leave
cmp
inc
icebp
movsb
subb
push
cld
xor
mov
fnstsw
push
hlt
rcrb
stc
sarl
inc
push
out
mov
ljmp
jb
mov
loopne
std
mov
icebp
mov
pop
cmp
push
popa
add
push
dec
in
dec
test
pop
xor
imul
push
insb
mov
int3
pop
mov
xchg
sub
in
xchg
adc
mov
mov
rorb
fldlg2
xor
dec
cld
in
bound
cmp
clc
inc
aad
and
jmp
mov
sub
stc
into
inc
cld
loop
fdivrl
popf
shll
add
out
sub
stos
jne
leave
ud0
pop
subl
pop
sub
push
movsl
adc
adc
lret
sbb
outsl
loopne
add
jnp
push
sbb
push
bound
dec
pop
cs
enter
call
mov
sub
sub
in
adc
adc
ja
in
sbb
add
lret
testb
movsl
enter
adc
jmp
inc
repz
xlat
lcall
nop
jg
sub
or
jne
sarl
ds
xor
stos
push
scas
xchg
pop
insl
push
scas
xchg
sbb
sub
pop
cmp
cli
xchg
add
push
sahf
mov
add
in
js
subb
add
pop
push
sub
rep
ret
mov
jb
mov
push
pop
pop
xor
mov
imul
aas
cmc
or
xchg
sar
add
push
adc
dec
and
outsb
sub
rclb
ljmp
jne
inc
cltd
testl
push
daa
push
sub
xlat
xor
movsb
pop
jns
pop
sti
xchg
cmpsb
push
push
cmp
mov
aas
mov
popf
cmp
mulb
jecxz
dec
int3
test
push
cmp
scas
adc
lods
xlat
shll
dec
sbb
jp
or
dec
test
subb
scas
dec
cld
cli
cmp
or
push
mov
sub
push
cmp
pop
enter
and
lds
sub
out
dec
sbb
sbb
das
loopne
or
push
sti
adc
jl,pt
shrb
inc
stos
leave
lahf
pushf
ret
or
popf
fldt
dec
mov
mov
pop
pop
adc
xchg
mov
stos
jl
loope
add
fs
nop
dec
cwtl
popf
xchg
cmc
adc
enter
sub
cwtl
mov
mov
leave
push
or
dec
jae
daa
and
dec
pop
cmp
hlt
jle
dec
call
mov
or
push
sti
scas
jnp
rcrb
and
test
sub
iret
rcll
adc
idivb
std
xor
push
sub
xor
fldenv
mov
lret
ret
cmp
sub
sti
cmp
mov
xor
fists
jne
lret
mov
subl
adc
push
and
iret
rclb
stos
mov
cmp
sub
test
push
jle
popa
insl
dec
stc
mov
imul
adc
mov
push
ret
aaa
rcrl
mov
dec
cmpsl
mov
into
push
mov
dec
cmp
jge
loop
mov
lret
pushf
mov
outsb
loop
arpl
mov
jp
or
sub
sbb
mov
cmp
mov
jno
jae
cmpsb
dec
pop
add
or
iret
push
jle
dec
mov
xor
add
mov
sbb
mov
pop
test
mov
xchg
movsl
push
pop
mov
ret
test
notl
ret
cld
xchg
xchg
or
lds
sub
xchg
imul
push
popl
add
jb
bnd
jle
jne
pop
incl
into
dec
push
es
fwait
testb
cwtl
faddl
add
push
mov
inc
lret
insl
popf
pop
dec
insl
and
pushf
adc
xor
push
jo
fldcw
fimull
xchg
fisttps
pusha
fcmovb
out
xchg
sub
or
sub
out
cmp
cs
push
mov
ljmp
jmp
lahf
sbb
add
jbe
xor
inc
insw
mov
popf
lret
add
aad
lret
lret
out
clc
or
js
loope
push
pop
popf
roll
jmp
mov
cmp
inc
jno
add
sub
jl
jge
add
xchg
clc
movsb
mov
mov
xchg
lds
sbb
ss
std
ljmp
cmpsl
test
mov
int3
sub
in
ja
sub
and
jge
lcall
push
subl
inc
fs
outsl
leave
or
mov
mov
insl
out
movsb
mov
jbe
cs
ret
lods
mov
add
mov
out
repz
and
fldt
sub
or
sub
scas
divb
or
shlb
dec
jns
jp
iret
mov
adc
or
sub
jns
xchg
inc
rdtsc
xchg
div
jl
imul
push
std
add
sbb
addr16
push
mov
push
in
stc
je
xchg
and
lea
and
sarl
mov
dec
testl
in
bound
je
adc
and
rcrl
add
jbe
in
bound
cmp
xor
xchg
add
xchg
rcl
sarb
pop
jmp
or
cmp
fisubs
psllq
add
dec
je
cmpsl
xor
repz
fisubrs
rorl
cltd
pusha
jnp
push
xlat
or
mov
add
jne
dec
xor
inc
or
fidivl
push
sbb
sbb
xor
mov
adc
jns
inc
xchg
add
and
lods
sbb
mov
add
mov
xor
jge
adc
pop
loopne
or
lea
aaa
leave
jp
fstps
lds
or
subb
pop
hlt
movsl
in
into
lret
inc
out
mov
or
or
xchg
fsubrl
mov
cltd
enter
sarl
sbbb
les
fwait
lret
add
arpl
les
add
inc
enter
mov
iret
xchg
xchg
push
into
test
jl
stos
mov
stos
and
aad
fidivs
push
insl
fadd
adcb
sahf
ja
adc
lcall
cmpb
iret
sbb
or
or
push
push
push
test
stos
lock
xchg
dec
push
mov
push
sbb
adc
adc
jecxz
lock
push
je
sub
mov
push
loop
jnp
call
mov
adc
stos
negb
ja
arpl
and
push
faddl
aas
stc
insl
roll
push
outsl
ffreep
fs
call
test
fiadds
data16
xlat
cli
into
push
dec
push
jo
dec
inc
and
mov
and
add
ss
aam
pusha
sub
sbb
pop
aad
xor
push
cmp
jbe
push
cmc
ljmp
out
int
es
iret
mov
adc
jb
cmp
imul
div
mov
push
cmpsb
mov
cmp
cmpsl
out
insl
dec
sarl
or
and
test
adc
jns
xlat
mov
shrb
xchg
push
enter
or
and
pop
popa
sbb
mov
int
lcall
pop
aaa
mov
xchg
ret
stos
jge
daa
mov
rcrl
xor
adc
std
pop
pop
xchg
jmp
cli
push
inc
imul
sahf
shlb
jmp
loopne
push
dec
iret
add
je
sub
jne
fisttps
push
cltd
pop
inc
xchg
lcall
mov
sbb
or
or
jge
pop
rcrb
ss
imul
jno
inc
outsl
xor
enter
nop
mov
test
addl
sub
out
inc
mov
in
stos
addb
and
ret
mov
call
imul
dec
lods
jbe
gs
or
jns
and
mov
and
sub
push
cli
and
cmpb
test
add
and
in
fisttpl
dec
addr16
orl
mov
call
jae
fdivs
decb
call
aam
cmp
mov
dec
dec
jge
xor
das
inc
mov
pop
sub
xchg
sbb
in
lods
cmp
shl
pop
cmpb
or
inc
imul
out
fbstp
adc
rolb
insl
ljmp
or
pop
hlt
xlat
and
insb
mov
into
andl
jl
mov
es
push
sub
push
mov
in
mov
pushl
cltd
out
xor
xor
inc
stc
add
stc
mov
mov
pop
cmp
push
mov
dec
out
std
aam
in
test
sbb
dec
pop
ljmpw
xor
das
aaa
pop
hlt
rolb
cld
xchg
insb
xlat
loope
out
loope
loopne
mov
mov
stc
mov
in
mov
mov
cmpsb
cmpsl
insb
sub
and
es
outsl
cs
sbb
jge
out
fs
sub
push
jb
lcall
mov
out
push
mov
jle
lret
es
enter
cld
cmp
imul
cmp
pop
jge
insb
or
inc
js
mov
out
loope
mov
cwtl
mov
push
std
mov
notb
or
movsl
les
shl
mov
xchg
adc
mov
test
pop
outsl
test
xlat
push
mov
adc
es
out
and
add
std
loope,pt
jp
test
in
insl
dec
push
mov
pop
and
xor
outsl
mov
sub
or
insl
push
das
jg
int3
in
xor
or
xchg
jne
pushf
movsl
jbe
xchg
pop
enter
cwtl
in
and
inc
pop
cmpsb
push
repnz
xchg
mov
lods
lock
gs
inc
std
in
idiv
xchg
pop
repz
fadd
decl
and
mov
mov
inc
dec
subb
ja
pusha
test
sbb
adc
ja
mov
and
gs
push
pop
inc
jp
sbb
sarb
test
adcb
sub
clc
or
out
or
clc
repz
sbb
loope
push
cmp
fisubl
mov
jecxz
les
scas
sbb
in
jecxz
jne
into
test
adc
xlat
sbb
xchg
js
in
insb
or
push
ret
clc
into
jp
sub
or
mov
ja
mov
sbb
in
rorb
hlt
stos
xchg
out
sbb
add
inc
pop
addl
xchg
jno
mov
cmpb
add
push
adc
mov
pop
repnz
call
mov
xor
fisubrs
cmp
cmp
inc
jne
fcomi
pop
fistpll
add
movsb
fnsave
fsubrl
stos
pop
cli
and
fwait
pop
jae
push
jmp
adc
out
in
cmp
leave
dec
test
loope
add
in
cmp
jb
xchg
rcll
nop
sbb
xchg
add
xchg
es
cmp
lret
ja
xlat
ret
dec
lret
mov
jno
adc
mov
mov
dec
and
xchg
cmc
negl
mov
fldl
insb
xchg
dec
mov
pop
dec
pusha
jge
jae
jae
jnp
cld
cmp
ja
mov
fimull
das
out
gs
mov
dec
movsb
movsl
cli
fildl
cmpsl
je
add
ret
xorl
push
in
mov
nop
or
lods
xor
aam
or
push
cs
pushf
lcall
call
xor
shlb
jno
and
dec
filds
call
sbb
xchg
and
fwait
movb
loop
lods
push
xchg
lahf
int
cmpsl
cmp
sbb
pusha
outsl
out
sub
movsl
jnp
dec
adc
xchg
jl
lods
mov
jbe
repz
mov
ljmp
das
hlt
fsubs
enter
aaa
test
inc
lret
inc
bound
inc
ss
cmp
adc
dec
and
jno
daa
mov
or
stos
das
addl
inc
cmp
mov
pop
stos
push
jp
idiv
in
ret
es
push
push
in
jb
xlat
sbb
inc
loope
pusha
pop
push
push
push
ljmp
lahf
pop
mov
shrb
add
push
arpl
jbe
and
or
bnd
lret
push
imul
or
outsl
push
repnz
std
cmp
mov
jbe
scas
cmp
xlat
cld
and
jp
adc
jno,pt
inc
jo
movsb
out
repz
xchg
es
ja
lds
xchg
jmp
sub
mov
rorb
mov
lods
xor
fisubrl
enter
push
test
dec
cmp
add
and
fsubp
push
mov
lds
add
adcl
insl
cmp
or
lahf
shrl
andl
mov
push
popf
pinsrw
ja
sbb
scas
fs
test
inc
cmp
mov
or
pop
rolb
and
jbe
mov
enter
sub
daa
lret
mov
notl
jecxz
bound
pop
sbb
js
jns
ret
xlat
loop
out
jl
inc
pop
jge
lret
cwtl
xchg
and
sub
sbb
mov
pop
das
or
add
stos
sbb
loop
sub
into
ljmp
repz
pop
or
xor
cwtl
inc
jg
add
cmpsl
push
jns
inc
add
test
jne
cmpsl
add
sbbl
in
je
lahf
test
push
sbb
dec
xchg
rcrl
cmpb
sbb
mov
mov
or
mov
jnp
rclb
in
mov
popa
cmp
lcall
mov
and
xchg
push
sbb
fildl
cmp
loopne
repnz
testl
and
inc
xchg
or
lcall
pop
mov
sbb
das
daa
push
dec
rcrb
mov
adc
rol
mov
sbb
fdivr
xlat
ljmp
mov
mov
jge
cmpsl
je
push
adcl
rol
jmp
xchg
xchg
xchg
mov
aad
jp
mov
push
dec
push
mov
shll
or
mov
dec
jno
aad
adc
test
scas
inc
popf
pop
daa
push
test
movsb
loope
sbb
and
mov
xor
xchg
push
imul
test
mov
rolb
and
inc
sub
popa
cmp
and
bt
mov
mov
inc
aad
decb
push
mov
mov
mov
cltd
push
loope
jns
mov
fs
jmp
lock
aas
cmpsl
mov
movsb
dec
inc
in
add
notb
jmp
stos
inc
xor
cmc
push
dec
bound
cmpsl
add
lods
lahf
cmp
dec
ret
or
or
sub
je
pusha
cmpsb
inc
int3
mov
dec
xchg
xchg
mov
pusha
pop
mov
out
leave
outsb
sub
jne
aaa
addl
pop
out
dec
mov
cmp
pop
push
iret
idivl
movsl
sarl
cmp
dec
or
loopne
addr16
dec
mov
xchg
mov
jecxz
jmp
xchg
push
cmc
cmp
fnstcw
and
cmp
fdivrl
mov
xor
cmp
cli
xchg
add
subps
imul
or
nop
movsb
cmp
fldenv
sub
movsb
and
mov
add
sti
push
scas
aam
xchg
roll
dec
fldl
mov
icebp
jge
add
push
jg
jmp
imul
outsb
pop
dec
lods
mov
add
push
imul
sub
or
or
dec
fcoms
pop
dec
fdivr
mov
ret
mov
cli
mov
adc
pusha
add
les
inc
and
fwait
xchg
das
and
mov
jne
shrb
add
and
cmp
adc
mov
push
loope
clc
pusha
pushf
filds
sbb
push
loopne
add
lea
push
pop
and
or
push
add
sbb
dec
push
out
or
fisubl
fldenv
xchg
mov
mov
mov
das
imul
dec
pop
js
popf
sbb
xchg
bound
mov
cmp
mov
and
mov
push
out
sub
insb
pop
stos
pop
mov
cltd
dec
std
push
in
mov
sbb
inc
add
mov
daa
pextrw
jns
xchg
imul
cmp
jecxz
das
and
xor
adc
fimull
sub
rcrl
xor
stc
jle
inc
dec
sub
or
aam
aad
bnd
das
sbb
icebp
xor
dec
out
and
inc
shrb
fldt
cmpsb
xchg
pop
cwtl
test
loop
mov
in
xlat
pop
xchg
mov
loopne
mov
leave
js
add
call
dec
jo
shrb
int3
jp
ss
push
lods
shl
jb
iret
push
jnp
test
mov
sub
popf
jns
sub
mov
jb
mov
inc
push
push
pop
out
into
cmp
fadd
lret
leave
and
arpl
call
pop
scas
fadd
cmpsl
inc
jmp
pushf
mov
xchg
push
loop
fsubl
dec
and
jb
mov
push
and
add
push
pushf
dec
xchg
mov
cmp
aad
fiadds
cmc
insl
dec
pop
push
push
push
pop
adc
jmp
and
clc
push
cmp
pop
test
imul
stc
mov
insb
imul
lods
jns
bound
pop
fisubl
mov
cltd
je
enter
mov
fistl
roll
and
test
ret
mov
adc
mov
sbb
inc
jae
repz
shl
mov
icebp
gs
xor
loopne
sub
mov
cld
cld
out
outsb
loopne
or
inc
icebp
add
pop
iret
dec
cmpsl
xor
add
pop
arpl
adc
mov
mov
or
pop
fbstp
mov
dec
out
dec
rcrb
adc
inc
cld
jecxz
cmp
add
in
dec
mov
jne
movsl
push
xchg
das
lret
mov
push
lcall
notb
push
dec
push
es
jp
js
lahf
dec
arpl
js
aaa
pusha
cwtl
sub
push
es
dec
fnstcw
cmpsl
add
mov
jg
ret
mov
jnp
push
mov
jg
mov
lret
jae
scas
std
mov
push
mov
pop
popa
or
cmp
lahf
call
pusha
test
ljmp
xchg
mov
rcr
outsl
or
mov
les
pushf
insl
ljmp
lock
lcall
subb
movsl
inc
lea
cmc
jp
mov
jmp
cvtps2pd
push
shrb
rcrl
mov
jmp
adc
out
jne
inc
insl
cmp
movsl
movsb
shrl
bound
pop
sub
add
call
mov
enter
pop
in
xlat
xchg
jo
pop
mov
loop
decb
pop
push
jne
test
sbb
pop
es
js
bound
imul
daa
stos
cmp
ret
faddl
mov
andl
mov
push
adc
pop
fiadds
jecxz
std
int3
mov
fmul
stc
jmp
mov
mov
ja
das
jno
fs
outsb
xchg
mov
dec
and
in
mov
mov
rol
jp
pop
jbe
pop
jl
sub
fsubrl
lret
ljmp
sbb
adc
iret
and
insb
ljmp
repnz
mov
jle
inc
addr16
jl,pt
push
and
dec
lcall
push
xchg
sbb
cld
xchg
sbb
cmp
insb
sub
sub
pop
jae
mov
mov
in
imul
jle
xor
pop
das
addr16
fs
fmuls
daa
push
add
push
adc
shll
lahf
mov
inc
push
out
add
pop
les
mov
mov
sahf
cltd
pop
call
cmpsb
xor
rcl
sub
mov
cmp
sahf
sbb
stos
sbb
jp
mov
ss
push
popa
adc
push
cld
in
pop
loope
insb
insb
sub
xor
inc
pop
pop
fwait
aas
fcoml
enter
rcll
sbb
xchg
js
leave
mov
and
es
rcrb
xchg
adc
pop
jp
in
push
mov
inc
or
cmp
int
addr16
mov
jmp
inc
addr16
leave
push
xor
push
pop
test
out
cwtl
sub
dec
call
sub
or
sbb
xor
pop
aad
xchg
jb
pop
popf
fldcw
outsb
xchg
out
add
sahf
nop
lds
adc
jmp
nop
cwtl
xchg
jnp
mov
aad
adc
loope
inc
arpl
shlb
xor
insl
fldt
jno
xchg
inc
pop
mov
pop
inc
das
pcmpgtb
push
jae
scas
jo
and
sub
or
int
in
jno
lahf
xor
notb
imul
cmpsl
dec
adc
lahf
and
pusha
in
repnz
push
loopne
in
in
mov
pop
mov
mov
jno
mov
xchg
xchg
and
dec
and
jecxz
mov
insb
jecxz
and
xchg
xchg
adc
sub
xchg
and
pop
and
cwtl
int
aaa
jp
pusha
push
das
call
pop
movsl
sarb
jne
sub
xor
imul
pop
jbe
cli
dec
rol
aam
mov
sbb
inc
add
rorl
sbb
sub
sub
out
sub
cmp
mov
daa
bound
cmp
cmpsb
in
aaa
dec
movsl
lock
lods
push
sbb
pop
inc
adc
sub
negl
in
aaa
inc
mov
mov
hlt
sbb
and
cld
or
enter
mov
xor
cmpsb
inc
sub
jno
cmp
mov
mov
sbb
xor
mov
fcmovne
sub
int
lcall
js
lods
or
pop
in
stos
sbb
jns
or
pop
inc
es
mov
nop
sub
loop
int3
xchg
fisttpl
aas
out
repz
sub
ljmp
nop
add
or
sub
or
scas
pcmpgtb
dec
jnp
mov
sub
pop
add
aas
jmp
sbb
popf
lcall
popf
fadds
mov
sbb
cmpsb
test
jne
xor
cwtl
data16
inc
push
ret
xor
leave
das
in
daa
dec
mov
rolb
ss
mov
xchg
xchg
push
xlat
in
test
out
add
rorl
int
cmp
into
dec
sahf
stos
mov
mov
or
fisttps
and
hlt
aad
call
fisubs
ja
and
inc
lds
data16
call
fistl
insl
jmp
dec
xchg
mov
arpl
cli
sbbl
and
push
leave
pop
xor
sub
fstpl
push
negl
push
nop
lods
out
mov
sarb
adc
int
jmp
pop
daa
add
or
adc
xorl
xchg
adc
xor
mov
in
sbb
es
push
mov
popf
loop
xlat
or
mov
arpl
ds
mov
int3
aaa
in
jo
push
mov
scas
syscall
shl
mov
xchg
cmpsl
pop
out
pusha
test
mov
add
push
das
mov
pop
jge
loop
ljmp
lret
movsl
popa
sbb
mov
pop
adc
lret
xor
jle
pop
in
adc
dec
sbb
add
in
rol
jbe
xchg
ffree
loopne
ds
mov
arpl
cwtl
pop
pop
mov
mov
dec
jne
or
mov
mov
inc
jno
lea
inc
cltd
xor
push
xchg
call
jbe
popa
test
or
inc
es
clc
fldl
add
out
xor
or
jns
data16
lock
add
rclb
jnp
test
testl
push
pop
fdivp
lret
push
dec
jb
test
adc
xor
std
jge
mov
cmp
xchg
lret
sub
fwait
add
adc
adc
subb
hlt
xor
out
out
or
fmull
xchg
mov
jmp
into
xor
sti
stos
mov
mov
into
scas
hlt
pop
sbb
add
and
ss
clc
mov
test
imul
ljmp
inc
mov
ljmp
pusha
xor
push
in
lcall
fdivr
sub
mov
xchg
sahf
jmp
popf
xor
push
gs
es
and
insl
push
test
ret
pop
dec
xchg
sbb
sub
testl
cmp
push
test
mov
mov
jle
ss
and
push
in
sbb
pop
pop
je
js
test
jb
inc
fsubl
cmp
mov
add
dec
fadds
xchg
jecxz
cmpsl
orb
sub
fwait
cmp
cmpsb
lods
inc
xor
in
jmp
xor
clc
sbb
mov
imul
aaa
inc
pop
scas
clc
pop
inc
or
hlt
inc
test
mov
pop
clc
inc
push
xor
mov
mov
sahf
movsb
jg
push
jp
or
dec
dec
insb
push
or
dec
rolb
jae
adc
mov
inc
xor
mov
cmp
mov
jle
sbb
lods
mov
out
addb
sarb
arpl
dec
sbb
loop
inc
sbb
int
pushf
dec
pop
mov
je
push
movsl
cmpsl
or
and
push
movsl
test
mov
mov
int3
lahf
push
les
mov
subl
pop
out
leave
sbb
pop
xchg
or
lahf
in
or
shll
cmpsl
inc
in
pop
ja
mov
or
and
test
in
mov
cltd
aaa
loop
add
shrb
or
or
cmpsb
cmpsl
pavgw
cwtl
push
adc
add
shrb
std
inc
lods
aas
stos
dec
dec
adc
pop
mov
mov
jne
sub
and
in
jns
roll
mov
xorb
daa
outsb
xchg
add
scas
mov
mov
push
jae
xchg
xchg
ja
mov
es
mov
int3
pop
mov
arpl
out
jmp
adc
mov
push
cmp
jb
pop
jns
mov
rcrb
xchg
daa
xor
inc
fwait
shld
int3
sub
xchg
loop
push
rol
adc
sbb
push
test
xchg
pop
jmp
fbstp
cmp
inc
mov
or
push
cmp
loop
fwait
inc
pop
ja
pop
cmp
outsl
add
mov
test
fnstenv
shrl
add
add
and
aad
imul
imul
daa
push
shlb
outsb
sub
cld
sub
ds
xlat
mov
and
dec
inc
ja
sbb
out
fsub
adc
addr16
jp
add
sub
bound
scas
fxch
ja
xor
loop
mov
cltd
or
lea
xlat
mov
incl
leave
cli
loope
std
lock
flds
adcl
clc
cwtl
pop
iret
sub
popa
mov
cmp
ss
add
inc
cmp
icebp
enter
imul
daa
shrb
fs
outsl
dec
repz
mov
imul
jle
aaa
ja
mov
mov
mov
das
shll
fwait
jmp
rclb
repz
mov
mov
mov
popf
popa
test
imul
out
test
cld
lret
mov
jecxz
stc
ret
popf
psllq
cmpsl
mov
push
in
xchg
mov
inc
adc
ljmp
fwait
mov
daa
adc
pop
push
cmp
movsl
repnz
push
int3
pop
mov
lods
lea
push
dec
mov
sub
inc
inc
jmp
pop
jmp
shll
dec
pushf
lock
mov
push
jg
lcall
das
and
mov
in
jne
enter
pop
lahf
mov
pop
xchg
scas
prefetcht1
push
dec
test
or
pop
pushf
xor
cmp
mov
add
pop
pushf
aad
dec
minps
dec
jae
addr16
lret
jns
inc
out
mov
icebp
into
clc
xchg
adc
test
or
adc
add
imul
stc
pop
adc
and
test
sub
xlat
and
inc
ret
insl
cmovno
sub
lea
jb
dec
lahf
mov
adc
scas
xor
jmp
dec
xchg
jl
sar
adc
push
pop
shrb
mov
cmc
in
ljmp
mov
pop
stc
xor
gs
pop
mov
into
cld
pusha
jbe
fldenv
scas
push
inc
sbb
mov
jb
jmp
inc
mov
aam
pop
scas
incl
cmp
dec
sahf
ljmp
and
jb
imul
in
imul
pop
icebp
jmp
outsl
dec
pop
xchg
inc
movsb
fs
je
xchg
cltd
mov
cwtl
out
dec
popf
sub
fdivrs
repnz
or
outsb
repnz
scas
subb
out
cmp
imul
mov
cmp
fimull
out
dec
sub
jl
mov
mov
enter
loopne
jae
xor
mov
xor
das
pop
sub
scas
or
ljmp
jo
xchg
sub
or
cwtl
xchg
xchg
std
inc
lods
mov
sbb
nop
aad
xor
lret
cmp
add
out
fldl
pushf
into
mov
cmp
fwait
jo
hlt
dec
push
push
lcall
into
dec
lcall
xchg
add
addr16
or
push
std
movsb
sti
push
push
lods
std
xor
nop
pop
das
pop
mov
in
jo
add
insb
dec
shll
cmp
jo
test
popa
call
into
sub
xchg
addr16
call
clc
lret
xlat
stos
mov
adc
imul
mov
arpl
rcrl
mov
dec
jecxz
test
ja
outsl
xor
aaa
imul
sti
lcall
pop
sbb
cmpsb
gs
out
bound
jge
mov
dec
adc
lods
or
fsts
push
mov
cmp
les
xchg
imul
or
mov
int3
int
mov
or
or
and
les
mov
mov
xchg
mov
mov
movsb
add
test
sub
adc
pop
xchg
dec
repz
sbb
cs
dec
std
jmp
sbb
xorl
push
xor
jg
ljmp
lock
sub
jg
xchg
bound
xchg
sbb
pusha
push
loope
xchg
push
shll
mov
add
jns
xlat
or
jbe
sub
mov
int
xchg
lock
xor
ja
rcrl
inc
pop
pcmpgtb
pop
out
mov
cwtl
rorl
arpl
cli
out
lea
bnd
or
dec
fcoms
sbb
mov
mov
mov
pop
sbb
xchg
pop
testb
rorl
ret
cmp
cmc
lahf
jnp
pop
xchg
insl
sub
ds
lret
mov
xchg
and
push
add
jecxz
aas
dec
add
mov
jns
xor
mov
shl
dec
and
mov
mov
in
pushf
pop
in
int3
mov
sub
jbe
sti
mov
add
dec
xlat
into
inc
lds
dec
das
mov
addr16
roll
add
jmp
pop
enter
xor
jg
adc
sbb
in
js
outsb
test
jns
push
dec
pop
xor
insl
jg
sbb
mov
mov
xor
inc
adc
cmpsb
mov
insl
leave
inc
ret
lcall
cmpsl
lahf
ja
popa
mov
clc
sahf
nop
sub
sbb
cmp
imul
popa
pop
xchg
aaa
push
adc
xor
xchg
sub
insb
enter
pop
addb
add
rcll
fcoml
jbe
call
jae
andb
mov
or
dec
or
fistl
jnp
adcb
fistpl
push
aaa
lock
jno
lock
pusha
inc
outsb
outsl
pop
jp
int
pusha
dec
inc
or
test
lret
mov
jl
jmp
sub
fcoml
and
inc
pop
scas
sbb
insl
cld
inc
fistl
ja
imul
cmp
mov
inc
es
mov
mov
aad
jo
ficoms
in
aaa
mov
adc
cmc
mov
call
loop
pushf
std
pop
addr16
inc
fists
inc
sbb
ret
jae
pop
stc
popa
xchg
jns
loope
imul
mov
pop
pop
cmp
dec
icebp
es
add
jmp
clc
sbb
mov
enter
sub
xor
sahf
aam
add
aaa
scas
and
shl
jae
cltd
cmpsb
mov
out
mov
fwait
rorb
jle
adc
ja
jmp
jecxz
pop
mov
insb
cltd
inc
add
ret
xchg
sbb
movsl
jae
jno
and
popf
xchg
sti
aam
dec
and
xchg
outsl
ret
jnp
and
jno
in
mov
adc
loope
fwait
and
in
imul
jg
sbb
xchg
jp
xor
lret
fiadds
mov
push
movsb
inc
in
mov
sbb
std
xor
into
icebp
mov
or
pop
xchg
lret
ret
mov
ret
mov
xchg
jb
rol
adc
jno
and
mov
rcll
icebp
pop
add
shll
lods
ret
data16
fistl
sub
sbb
bswap
jmpw
adc
jp
cmp
xor
inc
cmp
out
jmp
lcall
lods
mov
insb
sub
fs
cmc
pop
js
xchg
jg
fstpt
push
push
cs
ljmp
pusha
xor
sub
mov
jbe
cmpsl
cs
pop
jo
aaa
push
es
scas
outsl
mov
hlt
mov
push
sub
sub
ficompl
es
lock
mov
clc
cld
and
ret
xor
jo
adc
and
xchg
ja
adc
dec
into
inc
and
mov
pushl
popf
jnp
or
je
test
jg
lcall
aad
cmpsb
in
pop
sbb
fidivrs
jg
add
shlb
mov
or
fisttps
sub
add
test
pushl
inc
mov
inc
bound
dec
xchg
int
sbb
mov
test
fcoml
or
mov
jmp
popa
not
arpl
daa
das
mov
and
pop
xchg
xchg
dec
mov
fildll
fstpl
inc
out
add
les
mov
adc
sbb
inc
loopne
cmp
popf
jbe
lcall
xchg
mov
jle
int
jbe
push
mulb
fs
sti
lods
jecxz
jb
adc
shrb
pop
dec
sub
stos
sahf
dec
push
push
dec
cmpl
mov
push
les
mov
leave
mov
or
xchg
mov
cmp
into
sbb
mov
scas
mov
mov
mov
daa
fnsave
mov
aaa
jns
xor
in
xchg
mov
mov
sub
and
xor
out
mov
pop
mov
bound
arpl
cmp
add
into
xchg
pop
push
popf
clc
int3
test
or
mov
rcr
lret
jp
pop
sub
jg
imul
lret
mov
aam
icebp
pop
popf
jge
dec
daa
insb
sbb
mov
loopne
mov
fdivrl
jb
lods
pop
daa
je
inc
mov
push
sub
mov
mov
stc
cmp
cli
push
repnz
cltd
sti
pop
aaa
adc
push
inc
popa
jge
loop
test
mov
sub
negl
lahf
jae
outsb
xor
arpl
mov
push
adc
pop
mov
sbb
fldcw
push
movb
jmp
sbb
pop
pop
pusha
imul
mov
es
inc
cltd
movb
sub
lods
xchg
sbb
cmp
lds
inc
daa
mov
push
lret
cmp
mov
pop
and
jmp
push
stc
fidivl
sub
cwtl
mov
push
or
divb
leave
cs
out
pop
lock
sbb
je
std
cltd
or
mov
arpl
inc
loopne
adc
out
xchg
aad
jge
push
imul
inc
push
jp
xchg
clc
subl
lret
fsts
ljmp
push
dec
int
adc
dec
jp
sbb
or
xlat
pop
push
into
int
push
lods
stos
mov
mov
ss
mov
ja
push
scas
pop
popf
aaa
cmp
or
repz
rol
nop
push
ljmp
fisubl
mov
mov
out
push
pop
push
push
xchg
dec
ds
push
cmc
enter
and
jecxz
ret
aad
mov
mov
mov
nop
pop
xchg
hlt
fadds
pop
das
push
push
sub
je
imul
stc
mov
xchg
mov
fisubrs
out
movsb
or
add
pop
or
or
insl
sbb
mov
andb
mov
cwtl
jnp
adc
stos
ss
out
sbb
xor
fs
dec
jp
add
or
xor
loope
push
test
add
andb
mov
addr16
hlt
sarl
dec
sbb
push
mov
adcl
xchg
adc
xlat
lea
inc
test
das
fs
bound
int3
daa
pop
add
dec
jg
jmp
sbbb
in
xchg
mov
add
add
or
jle
mov
mov
inc
xchg
ret
out
iret
scas
cs
out
pop
mov
jne
jnp
cmp
adc
push
xchg
mov
fs
lea
add
ret
jbe
out
cmpsl
add
mov
ds
xor
imul
jge
int
data16
loope
andl
aam
repz
outsb
test
or
orl
mov
lret
jl
jecxz
mov
jbe
adc
ret
getsec
popf
push
pop
mov
mov
movsl
idivb
sbb
dec
in
rolb
mov
push
clc
jne
cwtl
lret
or
lahf
inc
sub
adc
jmp
mov
xlat
xor
outsl
jg
je
add
shr
icebp
pop
sbb
sbb
loope
jbe
add
into
jb
testb
daa
loope
lcall
push
xchg
or
jle
sub
ja
dec
ficoms
xor
mov
push
push
iret
cltd
xchg
lea
lcall
xchg
fadds
push
inc
cmp
add
cmc
mov
dec
lahf
or
insl
add
sbb
inc
repnz
test
aam
lret
push
sbb
stos
mov
orb
out
cwtl
xchg
aam
fwait
stc
in
mov
das
lea
jmp
and
sub
push
mov
adc
push
jb
xchg
insl
mov
in
jge,pn
dec
pop
mov
movb
enter
jmp
dec
sub
mov
into
out
shlb
pop
xchg
sbb
pushl
mov
leave
lret
adc
mov
mov
sub
pop
fsts
push
clc
mov
lods
mov
and
jno
jp
mov
loop
pop
dec
xchg
add
fs
lcall
or
mov
rorb
jns
jae
cli
mov
sbb
sbb
add
adc
mov
push
mov
out
popf
add
mov
push
cmp
mov
inc
ret
js
mov
mov
adc
sub
rcrl
fsubrp
mov
test
imul
out
shlb
fiadds
pop
insb
jl
sar
or
add
stos
in
jb
sti
inc
fldenv
xor
add
out
push
cmc
jnp
adc
push
out
mov
xchg
sarl
dec
stc
jo
sbb
aam
inc
push
inc
push
arpl
rorb
jns
pop
loop
js
or
mov
jno
fucom
pushf
ror
jecxz
fsubr
roll
lret
es
popf
push
out
push
sbb
push
faddp
into
es
cmpsl
shlb
or
adc
cs
jmp
mov
lock
mov
pop
add
je
add
enter
repnz
movsb
or
insb
sbb
or
mov
jne
mov
fidivrs
and
lret
mov
push
mov
outsl
inc
cmp
popa
adc
in
xchg
in
add
push
in
in
mov
cmc
ret
hlt
cltd
popf
mov
mov
mov
pop
int
mov
test
xchg
xchg
pop
in
outsl
xchg
cld
loopne
sub
or
pushf
push
xlat
xchg
imul
xchg
cmpsb
shlb
sahf
push
cmp
outsl
lcall
xchg
adc
cli
push
aas
mov
push
jne
or
mov
fucomp
xor
add
idivl
push
gs
scas
jb
mov
stos
adc
imul
addr16
insb
add
jbe
ficomps
lcall
scas
fildl
sub
imul
not
outsl
repnz
inc
mov
sbb
pop
xchg
lods
jne
adc
inc
push
inc
xor
cmc
dec
dec
mov
mov
lds
xchg
movsl
mov
add
mov
leave
xchg
pop
andb
mov
les
inc
pop
aaa
and
mov
mov
cmpsl
push
xchg
shlb
jp
movsl
sub
mov
sbb
mov
or
fdivrs
mov
mov
mov
cmovge
iret
cmpsb
gs
dec
pop
mov
jae
sbb
push
cmp
mov
lret
nop
mov
push
adc
xor
sahf
or
sub
movsb
or
sub
popa
lea
add
test
out
aas
clc
inc
adc
popf
cld
pop
pop
fcompl
adc
or
or
lret
movsl
hlt
scas
and
mov
jmp
subb
sub
out
mov
mov
xchg
mov
jmp
stos
dec
cwtl
stc
jecxz
cmp
xor
cli
inc
lret
adc
jmp
mov
cltd
movsl
mov
cltd
rcrl
enter
inc
xor
arpl
inc
push
mov
add
sbb
pushf
pop
push
jl
pop
push
cltd
mov
cmpsb
call
lds
cmp
popa
adc
andl
aaa
mov
arpl
and
loopne
xchg
sbb
mov
push
das
adc
cmc
fstl
mov
enter
std
lock
adc
mov
sub
jbe
xchg
mov
inc
mov
idivl
daa
movsl
lcall
and
pop
mov
push
roll
ret
sub
orl
cltd
pop
outsb
add
movsl
subl
imul
jne
dec
imul
push
cmc
fs
mov
je
push
out
les
inc
loopne
and
pop
xchg
movsb
pop
paddb
mov
js
cld
adc
push
lods
pop
ds
iret
inc
cmp
out
int3
sbb
enter
faddp
mov
jmp
bound
mov
adc
add
and
cs
negb
sbb
icebp
mov
arpl
cmp
pusha
into
push
shlb
imul
sbb
jno
ret
dec
jb
test
push
add
xchg
xchg
or
jbe
pusha
sbb
into
gs
iret
fcoml
add
aam
dec
lock
lret
xchg
push
inc
test
rolb
cmc
rol
out
cwtl
pop
push
jecxz
mov
in
xor
ss
mov
fsincos
inc
add
or
sahf
hlt
sahf
clc
and
dec
in
add
std
add
push
xor
xor
rorl
imul
jecxz
test
shrl
mov
push
xchg
call
xor
mov
int
jne
adc
or
jmp
out
and
push
mov
xor
and
cwtl
xchg
jns
mov
ret
xor
leave
dec
enter
sub
mov
movsl
dec
adc
pusha
div
xchg
cmpsl
add
xor
sub
loop
aas
push
rcrl
sub
add
mov
dec
jno
je
shlb
scas
lcall
lahf
add
xchg
lahf
cmpl
add
int3
lds
mov
das
pop
push
je
mov
or
sbb
push
lods
das
js
outsl
jl
push
cmpsl
add
out
fnsave
adcb
bound
loope
je
add
daa
xor
jle
sub
enter
add
xchg
ss
adcb
xchg
popa
ljmp
imul
inc
sub
adc
rorl
mov
das
lea
jge
ss
xchg
push
mov
or
or
das
scas
pushw
mov
sbb
jp
mov
test
and
in
xor
scas
xlat
stc
mov
aam
lahf
out
xor
sbb
push
fildll
mov
mov
jg
xor
jecxz
jae
add
ret
cmp
sbb
inc
lea
cld
dec
jo
cld
iret
scas
test
cmpsb
push
mov
push
sbb
lea
aaa
xchg
sbb
pop
sbb
push
gs
and
mov
push
lock
clc
push
cmp
adc
or
std
cmpsl
dec
mov
mov
and
insl
mov
jge
loop
in
pop
loope
cwtl
xor
ljmp
inc
push
insl
nop
hlt
adc
xchg
sbb
mov
jbe
daa
sbb
mov
cmc
fs
add
sbb
aad
push
out
xchg
jle
test
cs
sub
push
inc
mov
imul
ds
or
cmp
rorb
mov
mov
into
adc
mov
icebp
or
sahf
nop
and
outsl
jae
loop
popa
popa
stos
outsl
push
jge
int
js
ja
xor
jne
add
imul
sets
push
dec
cmp
clc
xchg
inc
call
cwtl
mov
xor
loopne
out
sub
dec
sub
rclb
out
push
or
lds
mov
fwait
jmp
sti
rclb
sbb
movb
jle
jp
frstor
xchg
dec
leave
inc
cmp
repnz
xchg
mov
adc
jecxz
popf
push
in
pop
xor
and
lcall
js
add
mov
out
mov
pusha
cmp
xor
sub
sub
xlat
lds
xchg
out
je
aas
push
mull
aas
sbb
cmpsl
add
mov
cmp
xor
cmp
jg
aaa
push
xchg
fadd
adc
inc
push
rorl
idivl
sarb
lret
jg
adc
push
dec
jmp
testl
sarl
stos
mov
popf
scas
push
test
mov
je
int
sub
popa
or
push
sub
hlt
bnd
std
dec
push
ljmp
and
or
icebp
dec
mov
and
inc
and
cmpsl
and
ss
cld
jo
cli
call
daa
add
shlb
and
sub
stc
cmp
inc
mov
pushf
xchg
jl
mov
pop
outsl
mov
or
out
pop
xor
stc
in
insl
popa
daa
scas
in
test
jp
add
xchg
mov
test
mov
sbb
pop
in
mov
dec
test
stos
pop
cmpsl
jg
sub
sub
fistps
imul
dec
daa
test
mov
sahf
push
leave
fdivrs
cmp
dec
int
mov
cmp
dec
leave
jg
mov
in
shll
adcb
inc
xchg
jge
jecxz
add
pop
add
dec
jg
cmpsb
sub
mov
insl
sub
cli
jns
hlt
insb
outsl
dec
imul
sahf
icebp
add
sbbl
push
pop
mov
pop
out
test
in
rclb
cmp
lods
lcall
popl
xchg
pop
pop
xchg
ret
push
sub
cmp
xchg
xor
cltd
sbb
imul
and
ja
jge
icebp
mov
jmp
push
scas
leave
add
mov
shlb
cmp
push
fldcw
jle
ss
in
popf
cmpsl
test
outsb
es
popa
jmp
xchg
ja
xchg
add
add
stos
add
inc
adc
test
cli
call
cmp
dec
push
sbb
movb
push
sti
inc
pusha
ljmp
push
push
cwtl
push
dec
xor
mov
cmp
fmull
xcrypt-cbc
cmpsl
rcll
xor
xor
ds
cwtl
aaa
jno
sbb
ja
movsb
adcl
cmpsb
xchg
inc
xor
jae
sbb
push
inc
push
test
xchg
inc
in
mov
in
faddp
test
js,pn
sbb
jl
sub
jns
je
mov
xchg
adc
push
mov
jns
or
jle
pop
rolb
rcr
test
sbb
add
cmp
xor
dec
scas
in
ds
mov
stc
xchg
mov
pop
lds
xor
and
sahf
sti
adcl
test
inc
sub
pop
mov
sub
sbb
in
ds
dec
inc
mov
mov
and
bsr
mov
dec
nop
dec
enter
insb
cmp
xadd
pop
invd
pop
xchg
imul
xor
seta
shlb
sub
movl
fistl
sbb
xchg
lds
lods
jo
sub
and
jg
sub
adc
repnz
push
fld
cmp
sub
cli
pop
jnp
loope
pop
jae
jmp
inc
fsts
add
scas
shl
sub
in
insl
xchg
arpl
mov
mov
lcall
sti
push
add
and
inc
lods
mov
cmpsb
stos
popf
mov
pop
push
inc
arpl
loopne
imulb
inc
xor
adc
cmp
in
mov
fadds
ljmp
in
adc
pushl
sub
test
fmulp
add
std
outsl
into
mov
xor
rol
insl
sbb
pop
ljmp
icebp
xor
sub
and
mov
out
sbb
or
jecxz
sbb
lea
push
test
lea
mov
leave
or
scas
daa
push
jno
lret
ss
lea
mov
sbb
sti
mov
or
call
ss
jecxz
in
nop
cmpsb
pop
inc
cltd
in
mov
xchg
jmp
fwait
pop
call
dec
das
fisubrl
arpl
insb
rcll
fsub
sub
pop
mov
in
jns
lcall
sub
push
shl
lods
hlt
pop
mov
mov
cmp
fdiv
test
jne
cmp
lock
xorl
jg
xchg
cs
rclb
adc
fldcw
inc
leave
mov
dec
push
adc
mov
sti
fbld
ret
xor
xor
in
mov
pop
pop
mov
mov
aam
add
ljmp
hlt
dec
jg
add
rol
inc
in
dec
sbb
and
imul
ja
sub
lahf
adc
in
stos
mov
sbb
ret
jbe
data16
nop
xchg
and
icebp
pop
adc
cmp
cltd
mov
je
sbb
mov
and
repz
jmp
adc
cmp
dec
xor
aad
xlat
push
xchg
fxch
sbb
cli
pop
test
sbb
sbb
movsb
jp
inc
and
popa
jge
pop
inc
jno
or
jae
les
scas
out
imul
jmp
adc
aas
movsl
add
mov
ss
imull
push
dec
cwtl
sbb
test
sbb
sub
cmp
pusha
or
call
mov
negl
add
test
add
lock
jge
add
test
fmuls
test
mov
adc
jo
sarl
data16
mov
shrl
push
test
fstl
lcall
lahf
sub
cmp
sbb
outsl
jp
lahf
jp
andnps
jo
mov
sbb
aaa
in
jno
incb
xchg
dec
lods
add
push
pop
push
mov
out
xchg
dec
in
push
or
aaa
sbb
pop
inc
js
rcrb
leave
rolb
rorl
rcl
mov
outsb
cwtl
orl
push
mov
xchg
add
cld
dec
sbbl
jge
je
iret
movsl
adc
daa
sub
cmp
fidivs
and
pop
fs
cwtl
clc
inc
inc
xchg
out
in
cmp
fstpt
cmpb
jae
pop
cltd
mov
or
int3
push
test
jno
fmuls
xchg
sub
xor
pop
fcompl
leave
pop
mov
outsl
cltd
frstor
jae
cmpsb
xor
inc
out
test
jbe
dec
test
mov
dec
inc
fldenv
out
cmp
rcll
sahf
pushl
test
push
jb
popa
jl
outsl
or
xor
daa
pop
out
mov
data16
jns
fsts
sbb
cmp
mov
rcrb
test
loope
mov
sub
or
mov
dec
fcmovu
mov
fwait
mov
pop
mov
stos
sti
inc
aam
or
rolb
sti
mov
les
sub
inc
mov
add
or
stos
ds
lcall
aam
mov
dec
jb
test
add
test
sti
mov
mov
aaa
jns
xchg
inc
add
out
jae
loop
aas
sub
ficompl
jo
test
cmp
lock
inc
mov
stc
aas
test
mov
xor
jmp
mov
pop
movsl
addr16
mov
imul
repz
push
enter
mov
or
rclb
ret
xchg
sbb
sbb
or
and
xchg
push
jle
movb
in
push
fnstenv
mov
ja
loop
sbb
adc
jecxz
jp
xchg
dec
in
es
mov
cltd
mov
sarb
xor
sub
jno
sub
mov
or
push
enter
mov
xchg
imul
inc
les
cmp
int
stc
lds
pop
and
xor
nop
xor
pop
add
adc
ds
addl
pusha
sbb
gs
jno
add
xor
dec
mov
daa
imul
push
push
mov
jns
leave
hlt
mov
or
and
ret
das
sti
je
aas
imul
cmp
je
into
push
jnp
enter
or
loop
cmp
xchg
push
dec
sbb
inc
push
push
test
clc
cmpsb
push
jbe
aam
cli
pop
out
mov
fwait
out
gs
xchg
push
aam
adc
push
inc
std
sub
mov
inc
fwait
sarl
lods
lods
push
out
enter
mov
xor
fsubrs
add
and
loope,pn
sub
push
xchg
std
fistpl
xchg
ds
xchg
shlb
lods
rcrb
cmp
mov
push
xchg
sub
push
pop
dec
cmp
jns
cli
adc
mov
negl
mov
aas
sub
dec
ffreep
lds
xor
imul
inc
stos
xchg
sti
enter
gs
shrl
sti
inc
mov
ja
adc
push
jp
cwtl
mov
mov
sbb
xchg
rcr
cmp
std
out
scas
pop
push
daa
jae
lea
mov
popf
popa
pop
push
pop
xor
out
mov
aam
inc
mov
push
cwtl
imul
sbb
add
inc
loopne
out
testl
repz
lcall
lea
pop
cmpl
sbb
jecxz
into
push
decl
push
push
mov
fildll
je
add
adc
jecxz
xchg
cmp
mov
sbb
orb
push
xor
je
jge
sbbb
pop
mov
xchg
mov
dec
xchg
sahf
mov
or
std
gs
addr16
cld
test
cmp
xor
into
jno
gs
mov
and
and
xchg
push
xchg
and
out
cld
bound
aam
xchg
xchg
mov
cwtl
mov
lds
mov
cmp
lret
fildl
sbb
fwait
addr16
xchg
mov
cmp
xchg
movb
mov
icebp
sbb
mov
subb
mov
fsub
scas
js
rcll
lods
mov
cmp
sbb
adc
or
pop
and
mov
out
ljmp
xor
mov
mov
nop
or
insl
sub
loop
insb
enter
push
popf
imul
xor
int
or
jbe
insl
hlt
or
sub
pushf
xchg
sbb
aam
cmpsb
cmpsb
add
ror
stos
mov
push
cmp
daa
dec
sbb
push
inc
enter
frstor
jg
sbb
cwtl
stos
jo
push
xor
movsb
imul
cwtl
add
jmp
adc
lahf
cltd
cwtl
bound
sbb
scas
pop
das
dec
insb
orb
scas
jl
mov
fwait
sbb
in
fsubrp
jne
aaa
mov
xchg
test
jno
leave
sub
inc
aaa
das
xchg
and
sub
cmp
sbb
xchg
lods
mov
clc
cmpsl
dec
arpl
out
rcr
sti
loop
lahf
iret
inc
aas
xor
mov
int
cmp
shll
test
adcb
jge
lret
fdivrs
pop
lret
rcll
je
and
sahf
push
aam
dec
pop
xor
cmc
fisubl
push
imul
mov
aaa
mov
jle
xchg
jmp
into
ret
cmp
or
mov
out
mov
sbb
scas
jp
hlt
jno
jne
sbb
fs
movsl
xchg
adc
add
pop
cmpsb
push
xor
inc
popf
nop
fmull
popf
add
xchg
fidivrl
push
cmp
fcoms
popf
pop
xchg
pcmpgtb
xor
mov
mov
adc
pop
cmpsl
cmp
jns
je
xor
inc
das
scas
out
or
mov
sbb
sbb
test
mov
add
stos
sbb
inc
xchg
sbb
xor
ljmp
inc
jb
inc
mov
mov
pop
jge
jle
clc
lahf
sub
test
gs
add
rol
mov
divl
push
pop
add
xor
cs
lret
ljmp
jp
and
mov
ss
stc
xorb
jne
push
cs
cltd
push
mov
popf
or
movsl
test
mov
dec
cltd
outsl
addps
cs
push
push
add
adc
jne
repz
adc
adc
loop
xchg
and
icebp
ret
push
nop
or
pop
inc
mov
jo
adc
adc
mov
flds
mov
popf
add
and
cmp
repz
inc
and
aam
into
nop
dec
clc
push
cs
jnp
enter
sub
pop
push
and
sub
push
mov
pop
mov
imul
jge
subl
test
outsb
pop
shrb
jnp
push
dec
push
push
or
int3
subb
ds
insb
js
xchg
lock
or
and
stos
in
jo
in
cmp
mov
and
sbb
dec
push
gs
push
inc
xchg
and
jno
mov
xchg
rsqrtps
jns
jmp
jmp
inc
rcrb
into
lahf
mov
inc
ret
incb
mov
pop
mov
pop
imul
hlt
fistpl
sbb
test
lret
lret
pop
xchg
xchg
adcl
mov
and
roll
ficoms
cli
add
dec
add
mov
pop
push
hlt
cli
fstpl
leave
cmp
push
imul
aaa
xor
add
insb
fcompl
cmp
loop
push
and
adc
notb
lds
pop
or
sub
jecxz
iret
add
test
xor
mov
xor
or
inc
and
leave
xor
add
and
mov
mov
scas
jg
dec
sub
adc
inc
fldenv
mov
and
test
push
fsubrp
mov
mov
jle
cltd
lahf
fcoml
pop
loopne
pop
imul
and
orl
lcall
mov
hlt
dec
and
xor
xor
cmpsb
sbb
rcrl
mov
push
cmp
and
mov
lods
dec
jl
fistps
and
mov
in
and
fs
adc
pop
sub
cwtl
jne
push
xchg
and
repnz
popa
subb
daa
int
sub
out
inc
jecxz
lods
arpl
in
mov
jae
xchg
mov
notb
cli
cmp
xor
and
push
or
iret
je
pusha
int
adc
scas
out
mov
in
cmpsb
jbe
push
movsb
or
scas
inc
cli
pushf
adc
mov
add
scas
xor
loopne
xor
push
hlt
scas
cli
adc
ficompl
push
xor
imul
lret
and
loop
xor
cmp
xlat
push
test
sbb
xor
ljmp
cmpsb
scas
or
mov
imul
or
popa
jp
lret
insb
dec
jl
or
fld
and
pop
jmp
sahf
cmp
leave
cltd
addr16
jp
jbe
leave
push
loopne
ljmp
jns
insb
aad
pop
fs
jae
xchg
mov
aaa
inc
std
ficoms
and
mov
xchg
sub
test
inc
sti
sbb
cs
xor
aaa
insl
insb
ss
mov
popf
call
mov
movsl
sub
xor
cmp
add
inc
test
pushf
mov
add
pop
repz
movsl
mov
movsb
add
aas
lea
rcll
stc
leave
add
je
cmp
cltd
jecxz
scas
dec
imul
jecxz
push
fstps
nop
adc
push
push
inc
imul
mov
jne
pop
add
dec
enter
nop
xchg
outsb
mov
xor
shlb
jecxz
in
pop
or
std
lods
fidivrl
or
mov
push
sub
in
fnstcw
pop
and
dec
xchg
dec
data16
mov
in
mov
xchg
inc
flds
mov
in
or
cld
fcomi
scas
loop
mov
mov
lret
test
jo
xchg
ret
or
shr
sbb
sub
add
out
dec
and
sub
lahf
dec
pop
cmp
push
outsl
inc
push
push
push
inc
cwtl
lea
mov
xchg
aad
repnz
gs
out
cmp
iret
outsl
scas
rorl
xchg
dec
inc
test
pushf
inc
les
shrl
loopne
mov
repnz
inc
les
xchg
lds
cltd
sbb
mov
sbb
sub
jo
popf
in
enter
cmp
push
repnz
mov
lea
push
cmp
outsl
jno
jb
mov
pop
stos
mov
adc
aam
ljmp
out
pop
lahf
lods
lret
xor
fcmovu
es
and
xchg
adc
cs
sub
cmpsl
adcb
sub
dec
mov
js
mov
mov
arpl
mov
lods
jl
ret
sahf
xchg
mov
sbb
rcrl
roll
mov
jmp
pop
in
dec
sbb
bswap
das
inc
test
fdivl
leave
xchg
add
mov
loopne
lock
xor
dec
in
mov
lret
mov
iret
adc
sbb
jle
add
ljmp
mov
xchg
adc
int3
add
inc
pop
test
aas
xor
test
xor
or
inc
add
std
negl
adc
aas
cmp
xor
mov
and
ja
loope
std
mov
loop
insl
in
inc
out
xchg
inc
mov
enter
and
std
jne
enter
adc
imul
cld
fnstcw
mov
mov
jae
dec
int
lahf
fadds
call
jae
and
dec
jge
stos
into
imul
adcl
mov
add
aas
cmp
jg
ljmp
jge
adc
lea
xor
xchg
ret
inc
or
movsl
das
push
and
push
push
cmp
leave
rcpps
jp
in
jo
fucomi
out
jns
out
fldcw
mov
or
mov
xlat
xchg
jge
jbe
outsl
push
mov
sub
jno
inc
sahf
and
loope
popa
les
dec
leave
idivl
xchg
add
adc
fs
adc
mov
fistpll
sub
popf
mov
ljmp
or
ret
in
xadd
adc
jecxz
sub
movsl
sub
xchg
jns,pn
out
mov
mov
rol
push
loopne
stos
or
adc
movl
and
mov
push
cmc
aaa
aas
iret
add
rol
sub
arpl
push
mov
or
test
cmp
sub
pop
fsubrl
fstl
subl
xor
push
loop
mov
inc
pop
lcall
add
sahf
je
inc
jmp
inc
inc
inc
sub
cwtl
in
dec
fnstsw
scas
loope
ds
clc
mov
or
sub
add
xchg
mov
jnp
in
mov
mov
mov
rcr
dec
mov
push
dec
outsl
add
dec
sbb
xor
loop
inc
sar
push
inc
jnp
out
and
add
dec
js
andl
js
inc
out
orl
inc
cmp
movsl
call
or
sbb
pop
ja
and
pop
jbe
cmp
mov
sbb
cmpsl
fwait
or
sbb
sbb
pusha
mov
inc
aam
adc
test
sbb
xor
and
push
or
sub
mov
popf
jns
lock
arpl
sub
pop
sbb
cs
lcall
sti
ret
adc
lahf
adc
push
fs
movsb
cmp
mov
mov
test
adcb
scas
hlt
dec
mov
xchg
mov
ds
in
fldenv
insl
pop
cmp
cmp
out
add
mulb
pushf
mov
and
push
jns
jl
jnp
pop
sub
loopne
mov
insl
jne
out
mov
mov
enter
or
fisttpl
ljmp
fucomip
pop
jp
out
in
pop
mov
or
enter
iret
movhps
popl
inc
and
mov
popa
mov
add
xor
mov
xorl
jmp
icebp
xchg
and
jecxz
cmpsl
cwtl
lods
int3
out
cmp
inc
or
pop
dec
mov
dec
pop
adc
test
and
subb
cmc
push
pop
xchg
inc
jb
add
in
cmp
repz
popf
rcrl
mov
insb
cmc
mov
mov
in
dec
jecxz
xchg
jp
pop
fnstenv
mov
call
imul
and
push
scas
mov
in
and
mov
mov
push
lock
mov
mov
mov
sub
add
sbb
mov
inc
jne
sbbl
in
insl
and
out
mov
adc
fldt
jb
jmp
pop
out
loopne
or
sahf
ds
sbb
cmp
mov
dec
hlt
inc
imul
pop
adc
loopne
fmuls
int3
pop
loopne
hlt
pop
loopne
ljmp
or
pop
inc
in
fcoml
jecxz
jbe
aaa
adc
or
sahf
or
popa
mov
pop
ja
pusha
fstpt
call
stc
dec
ss
inc
cmp
xchg
jo
sub
dec
adc
jo
or
xchg
aam
mov
jae
cmp
mov
xchg
ret
dec
cmp
fnstsw
cs
cwtl
dec
xor
lret
jno
add
xor
sbb
repz
test
out
movsl
fbstp
daa
mov
or
dec
pop
cmp
lret
add
iret
rcr
das
inc
jns
cmp
mov
test
xchg
test
movsb
outsb
push
jnp
outsl
stc
sbb
mov
push
sub
pop
jnp
int3
lea
pop
fnstcw
cmp
jne
sub
sbb
mov
test
push
ds
mov
cmp
add
cs
cli
int
cli
inc
inc
xor
stos
lea
sbb
mov
loop
mov
sbb
enter
add
pusha
pop
test
mov
imul
add
inc
xchg
aaa
xchg
pop
stos
in
inc
fbstp
cmpb
xchg
sub
imul
pushf
mov
stos
aaa
dec
cmp
mov
ljmp
push
add
imulb
or
in
xor
xor
pop
scas
mov
add
mov
lds
xor
cmp
xchg
ss
repnz
sti
in
outsl
es
adc
xchg
int
loop
ret
or
outsl
pop
mov
mov
daa
dec
dec
xchg
mov
xor
sub
int
jge
imulb
scas
sti
ret
movsb
inc
sbbl
out
clc
mov
ffreep
into
pop
popf
aaa
dec
jae
bnd
or
push
push
sub
lret
jp
insl
jae
cmpsl
jae
dec
or
shll
test
lahf
hlt
jb
and
lahf
cmp
js
sarb
imul
pop
ret
xor
addr16
stos
sub
dec
push
push
mov
imul
sub
jne
xchg
aad
adc
push
test
hlt
or
push
push
pop
in
add
xor
inc
imul
fwait
cmp
push
push
sbb
scas
mov
leave
lock
mov
in
mov
xchg
imul
sbb
cs
pop
add
sbb
pop
dec
leave
std
pop
mov
jb
loopne
scas
mov
scas
xchg
xchg
lcall
pop
sub
enter
jg
adc
xor
pop
scas
add
adc
loop
push
iret
cmpsb
jae
iret
imul
inc
mov
in
cwtl
adc
scas
and
scas
mov
dec
ds
inc
sbb
cmp
aaa
xor
cmpl
dec
xchg
push
jge
xor
repnz
stos
call
sbb
in
fdivs
mov
addr16
lcall
dec
cmp
xchg
jg
push
mov
and
inc
xchg
cmpsl
int
andl
inc
adc
mov
shlb
dec
sub
jp
or
popa
cld
jo
insb
sbb
loop
mov
push
xchg
sti
add
out
mov
cmc
mov
mov
sub
sub
mov
sar
sub
enter
into
inc
cld
ja
xchg
shll
outsb
rcrb
jno
iret
xchg
cmpsb
sti
dec
les
shl
and
outsl
add
push
ljmp
in
mov
sbb
or
pop
jg
aam
stc
cmp
mov
fldcw
sbb
xchg
adc
mov
iret
es
adc
lret
mov
xchg
in
jns
jmp
jmp
inc
adc
test
add
out
movsl
test
or
fwait
xchg
xlat
adc
in
or
negl
vpmaxub
lea
test
out
add
mov
jl
in
sub
fcmovnu
jecxz
pop
loopne
std
negl
mov
pop
scas
in
rol
mov
movsl
loope
rorl
enter
and
xchg
insl
sti
xor
bound
hlt
jmp
idivl
xlat
ret
push
jecxz
ja
xchg
dec
int
gs
loop
scas
ret
call
ret
pushl
and
cmp
mov
mov
push
xchg
and
fistpll
jp
sub
xchg
and
int3
shll
out
pusha
push
mov
push
push
vorps
and
ljmp
xchg
add
mov
popf
sub
xchg
jnp
push
cmpsb
add
aad
xor
in
es
inc
loopne
xchg
test
in
test
call
add
xchg
popf
aaa
or
xor
scas
rorb
mov
jl
ljmp
or
inc
and
lods
cld
stos
mov
cld
nop
aas
mov
lcall
insb
sbb
mov
and
ds
lods
mov
aam
daa
out
in
mov
fs
add
cmpsl
jl
outsl
push
add
outsl
mov
hlt
fs
xchg
xchg
dec
inc
push
pop
ret
push
jg
popf
xchg
flds
cmp
add
int
repz
das
jp
sbb
or
ljmp
popf
or
inc
sbb
or
mov
jns
dec
pop
add
jns
addr16
inc
jo
mov
xor
ret
dec
lods
mov
test
sti
stos
loope
out
pop
es
sub
inc
test
cld
mov
push
daa
sbb
clc
sbb
fcmovu
icebp
mov
and
cmp
add
xor
test
lcall
jno
cmp
xchg
dec
sub
mov
inc
lea
stc
pop
cltd
jle
das
aad
lock
fstpt
es
xor
jmp
cmp
and
out
cmpsl
or
adc
inc
pop
sarl
gs
dec
insl
cmc
pop
das
cmp
lds
or
aaa
cli
aaa
ds
jl
int3
repnz
jno
lret
out
mov
add
push
mov
sub
cwtl
sbb
popf
adc
mov
mov
jmp
popa
cmp
mov
int3
scas
fisubs
add
pusha
xchg
inc
sbb
sarb
aad
mov
mov
inc
jno
stos
xchg
mov
pusha
mov
shl
stc
aaa
out
jecxz
push
mov
add
add
lcall
test
adc
inc
push
bound
cmp
imul
aas
mov
repz
adc
test
rorb
mov
xlat
lret
jl
leave
mov
jp
out
mov
pop
add
fstps
das
subb
ret
mov
xor
jp
mov
push
or
sbb
add
push
cmp
addb
adc
sbb
adc
repnz
mov
fiaddl
or
xchg
mov
aas
jbe
leave
jb
subl
jbe
icebp
xor
cmp
cmp
cli
jb
sbb
push
push
xchg
in
ds
jns
mov
xchg
fs
mov
mov
sbb
data16
pop
pop
repnz
pop
xor
aam
cld
cmc
fcompl
call
mov
popf
lock
inc
mov
arpl
inc
sub
push
lds
push
scas
xchg
dec
sbb
sbb
sub
mov
popf
repnz
sub
stos
add
pop
xor
inc
ja
fcmove
sub
cmp
pop
insl
and
stos
sarb
cld
push
sub
sbb
sub
out
test
inc
popa
pop
jecxz
insb
fucomp
int
clc
or
hlt
ljmp
aas
mov
in
gs
pop
cwtl
sti
or
pop
cmpsl
andb
in
addb
xor
jecxz
arpl
mov
xchg
jp
ds
jb
in
outsl
xchg
stos
xor
cmp
mov
shlb
bound
xor
inc
imull
push
lock
ret
icebp
cmpsb
mov
lahf
xchg
ret
xchg
int
into
ret
dec
fisubrl
call
xlat
test
mov
xchg
mov
cs
div
test
stos
mov
clc
push
xchg
mov
sub
jbe
jb
sub
sbb
insb
add
outsb
sbb
mov
mov
jmp
lea
rcrl
loop
scas
test
push
or
jne
cmpsb
push
inc
icebp
inc
xor
and
loopne
fcoml
fs
data16
ds
fcoml
movsl
lcall
cmp
repnz
push
mov
enter
ljmp
enter
mov
loopne
rcrb
mov
mov
int
test
mov
push
cld
negl
int3
inc
test
mov
mov
and
hlt
mov
mov
mov
and
int
sbb
sub
ds
les
and
sbbb
add
jle
out
leave
pop
push
sub
pop
shrb
push
rolb
xchg
lcall
test
cmp
sub
pop
and
jns
popf
jmp
testl
sub
dec
test
test
out
aam
adc
pop
sub
push
orl
cmp
add
cmp
aam
sub
ficompl
sbbb
orl
lcall
push
out
dec
cmp
rorb
mov
and
xor
sbb
insb
cs
push
xlat
fwait
xor
fst
or
repz
xchg
rol
aaa
cltd
sub
mulb
cmp
imul
pop
mov
xchg
jg
push
cmp
pushf
pop
cmpsl
pop
out
cmp
xchg
aas
mov
xor
mov
test
dec
pusha
adc
cmpsl
jge
pop
mov
call
push
jo
xchg
insb
sbb
push
jnp,pt
gs
sarb
outsb
aam
sub
jns
lock
lret
and
insb
xor
lret
mov
imul
ja
popa
insb
pop
sbb
movsb
adc
sbb
lcall
push
and
cli
jne
mov
push
dec
adc
dec
and
inc
cmp
mov
and
xor
iret
lcall
xor
adcl
cmp
or
pslld
arpl
push
xor
hlt
lahf
cmp
adc
cld
inc
pop
sub
icebp
roll
xor
sbb
pop
dec
inc
lahf
lcall
enter
pop
mov
sub
dec
pop
inc
test
fwait
xor
call
in
xor
fwait
aas
adc
out
aam
cwtl
pusha
movsb
gs
cmpsb
or
into
pop
aam
rcr
testl
orb
cltd
sbb
aaa
test
push
push
shl
push
fs
push
outsb
sub
mov
test
mov
aad
dec
scas
xor
call
hlt
lret
repnz
movsl
mov
cmp
dec
daa
fcmovne
bnd
push
shrb
mov
lods
cmpsl
ds
jg
or
lock
cmpsb
scas
xchg
nop
int
mov
in
sahf
jne
fistpll
lea
mov
jle
cmpl
sbb
inc
iret
sbb
add
cltd
pop
divb
mov
fmuls
mov
mov
pop
mov
jbe
jae
push
jbe
fiaddl
fnstenv
push
jb
jl
aad
xor
dec
int
xor
mov
cmc
shlb
popl
jmp
push
push
lds
pop
and
pop
lret
sbb
sar
enter
ja
fdivl
lret
jno
jl
mov
jbe
pop
mov
aaa
andb
lods
adc
mov
sub
pop
cmp
mov
jmp
mov
sub
dec
inc
push
push
jbe
js
repz
xor
aam
lock
jmp
orl
cmpl
lcall
xor
bnd
cmp
inc
push
mov
add
outsl
rcll
pop
jmp
sbb
shr
movsb
or
jae
je
mov
das
pushl
xchg
push
adc
fildl
and
fdivrs
adc
shl
jnp
sub
adc
jns
outsl
lret
mov
xlat
jo
or
xchg
xor
lahf
out
cmpsb
and
and
popa
std
sub
jae
ret
or
gs
jg
sub
dec
sbb
dec
adc
mov
dec
pop
jecxz
sub
rcll
cmpsb
ret
and
out
scas
iret
xchg
jp
jo
mov
in
rclb
aad
adc
and
hlt
imul
mov
dec
scas
adcl
jae
and
ja
xchg
dec
outsl
cmpsl
fisttpll
push
insb
pop
sbb
pop
es
mov
cmc
pop
sti
std
sbb
test
sbb
xchg
mov
sbb
ficoml
enter
imul
xlat
pushf
decl
pushf
pop
fstpt
loop
fnstsw
scas
imul
sub
sbb
dec
dec
mov
dec
and
and
arpl
cld
dec
cli
cmp
pop
cli
daa
cli
stos
pushf
shl
loop
xchg
dec
jno
xor
bound
clc
fwait
pop
mov
add
cmp
mov
sub
push
aas
nop
and
or
mov
cltd
xor
loopne
fcos
sbb
pop
or
mov
lcall
jmp
out
pusha
aas
repz
aas
aad
test
popf
test
test
xchg
lahf
jge
enter
int3
pop
sbb
push
mov
roll
or
scas
call
fstpl
repz
mov
dec
cld
xor
nop
inc
sbb
cmp
movsb
cld
xchg
in
sbb
sbb
or
test
femms
cld
call
daa
sti
fadds
sub
fwait
add
mov
xor
loope
pop
sbb
stc
aad
xlat
mov
mov
lds
sahf
xor
mov
mov
lock
sbb
fwait
and
int
mov
stos
mov
in
es
nop
or
sub
aas
xchg
push
mov
stos
cld
out
popa
add
cli
mov
inc
aam
shl
out
movsl
punpcklwd
jp
aad
movsb
mov
inc
stc
add
jge
push
loope
push
sbb
test
lret
jmp
adc
push
cmpsb
in
movb
mov
xlat
xor
pop
xchg
xchg
cltd
jae
adc
xlat
push
cltd
cmp
fisttpll
xlat
lock
in
cmpsb
in
inc
test
mov
add
arpl
sub
addl
idivb
and
test
push
xchg
and
bnd
adcb
xlat
bound
cmp
pop
inc
jmp
call
pop
and
sub
cli
outsl
dec
pop
dec
jne
sub
mull
addr16
shlb
sub
outsb
nop
clc
pop
pop
xor
scas
mov
jecxz
int3
gs
add
push
cmc
mov
inc
sub
outsl
inc
arpl
fdivs
and
inc
mov
imul
or
das
mov
stos
dec
insl
fdivrs
push
loope
pop
mov
mov
repnz
sbb
inc
mov
lods
add
xchg
xlat
or
rclb
call
clc
bound
popa
sbb
xchg
pop
movsl
popa
rol
push
loopne
jo
shll
mov
ds
ret
lret
in
jno
popa
jmp
mov
dec
pusha
es
pop
shrb
cmp
divb
jle
pop
xlat
imul
orl
test
aam
sub
cmp
mov
adc
xor
imul
arpl
lea
repz
mov
popf
jg
add
icebp
xchg
adcl
jne
mov
enter
push
loopne
or
aaa
lcall
sub
aas
xor
out
inc
mov
add
lods
nop
push
adc
sub
lcall
loopne
stc
inc
cmp
inc
loopne
pusha
pop
ret
dec
cmpsl
mov
shll
push
jecxz
movsb
adc
sbb
scas
jbe
mov
xor
aas
pop
dec
dec
xlat
add
xor
push
adc
sti
mov
nopl
pop
mov
test
in
lea
ss
or
test
mov
fdivrl
add
outsl
mov
inc
jb
lret
ljmp
cs
or
lea
data16
enter
repnz
enter
pop
mov
loopne
out
lret
sbb
add
mov
cmp
cmp
insb
mov
or
fisubrs
mov
daa
popa
das
xor
xor
ja
in
sti
mov
and
sub
inc
sti
bound
jbe
jo
mov
ret
push
inc
les
ds
ss
call
rcll
ds
ss
in
insl
je
in
jg
mov
inc
lahf
mov
inc
xchg
out
push
or
mov
scas
loope
int
sub
loopne
es
jae
adcl
mov
stc
mov
cmp
cwtl
and
dec
or
mull
je
in
out
call
repz
out
jge
sbb
xchg
mov
sub
xchg
fwait
push
repz
lea
lods
xchg
mov
mov
xor
fisubrs
ss
xchg
mov
or
lds
add
add
adc
or
leave
clc
es
loope
scas
or
fistps
pop
push
popf
pop
xchg
in
mov
push
mov
jno
jbe
mov
jge
and
lock
xchg
jno
mov
shr
push
gs
sbb
inc
jp
out
jnp
insl
cltd
mov
cmpsb
cmpsb
cmp
sarb
in
cmp
fmuls
add
mov
loopne
xchg
in
gs
aas
popa
xchg
in
loop
loope
adc
mov
xlat
sub
sub
dec
clc
push
fs
push
in
cmp
adc
push
sbb
pop
movsb
fnsetpm(287
outsb
insb
loope
jp
shr
leave
in
push
stos
pop
jge
mov
adc
loop
ret
fwait
ret
scas
mov
fcoms
jmp
jne
js
ds
leave
xchg
pop
dec
leave
xchg
mov
push
mov
fdivs
test
and
nop
sbb
int
cmp
xchg
lea
sti
cmpsb
pusha
jb
popf
sub
pop
jne
mov
data16
stos
mov
mov
jl
xor
cwtl
les
jp
push
add
les
rcrb
mov
fstp
mov
adc
pop
ret
cmpsl
sahf
jge
or
push
enter
int3
fsts
mov
pop
es
fwait
adc
dec
adcb
jne
lods
inc
sub
jae
rorb
test
mov
ret
int3
repz
loope
push
int3
add
fs
in
stos
sbb
aam
or
arpl
push
pop
int
int
add
popf
sbb
test
push
xor
lds
in
xor
push
icebp
ljmp
add
inc
das
fmul
test
pop
mov
or
push
movsb
nop
pop
inc
xchg
std
stos
pop
xchg
mov
inc
fimuls
mov
jb
iret
cmp
mov
popl
movsl
sub
pop
aad
ss
js
and
push
add
pop
pop
pop
ret
push
jnp
jg
xchg
fldt
es
ds
mov
test
inc
xchg
int3
adc
in
mov
push
repz
sub
or
cmpsl
add
ja
pop
pop
xchg
jno
or
and
inc
setge
and
sub
lea
pop
cmc
ds
mov
cmp
test
loopne
mov
jo
xor
cmp
pop
fwait
jle
mov
xchg
add
mov
lods
lret
test
cmp
inc
pop
cs
notl
mov
or
pop
out
in
rcrb
dec
repz
fisttps
into
outsl
mov
bound
pop
test
call
sbbb
pop
ja
cmpl
cmp
mov
add
scas
push
js
mov
in
test
mov
insl
aam
insl
lods
xchg
inc
popa
lods
cld
xchg
stc
fildll
jl
push
fldt
icebp
inc
lahf
sbb
stos
cmp
inc
int
loopne
xchg
movsbl
rorb
int3
stos
mov
push
mov
push
or
lret
xchg
mov
push
daa
xchg
xchg
in
mov
dec
sub
cli
dec
mov
ret
leave
int3
dec
test
jbe
shrb
lea
fdivp
adc
pushf
cmpsl
jge
rcll
jb
xor
idivb
and
sub
xor
out
jb
xor
addl
mov
neg
pop
dec
scas
imul
xor
mov
sub
sbb
clc
mov
addr16
cmp
push
push
aaa
sahf
xchg
dec
adc
xor
adc
and
cli
jmp
sub
ror
sub
iret
stos
loope
and
mov
iret
nop
addr16
mov
dec
test
movsl
fiaddl
test
jg
scas
pop
pop
adc
sti
inc
add
mov
xor
mov
loopne
in
aas
pushf
and
sbb
cmp
mov
sbb
mov
or
and
sub
push
popf
ljmp
mov
repnz
inc
pop
mov
mov
dec
cmpsb
loop
fwait
out
gs
scas
jmp
dec
in
inc
xor
fdivrs
and
dec
sbb
rcrb
jno
fwait
adcb
jmp
aam
mov
mov
cmp
xor
push
and
imul
mov
subb
lret
rol
daa
nop
incl
rcrl
jecxz
push
add
mov
rcll
in
or
movsb
leave
fwait
or
pusha
mov
jb
iret
mov
xchg
lods
shlb
shll
pop
sbb
inc
and
jo
sbb
mov
mov
pop
lods
mov
movsl
dec
pop
repz
sub
out
mov
jmp
lods
popa
mov
xor
jb
and
mov
subl
xchg
in
cwtl
mov
cli
leave
push
popa
jns
mov
xor
xor
push
mov
pop
push
dec
ret
push
int3
lret
outsb
mov
and
push
rcr
or
dec
dec
pusha
popf
repnz
out
bound
mov
sub
jb
jb
jl
mov
repnz
xor
mov
test
lret
mov
imul
ret
and
jo
sti
xor
pop
aaa
lock
addr16
xor
mov
sbb
lea
fs
inc
stos
adc
xchg
xor
sub
push
inc
and
das
adc
jb
movb
repz
clc
jge
mov
inc
pushf
bound
int3
xor
imul
cltd
jl
outsb
push
mov
scas
decl
loope
pop
das
lahf
insl
sbb
js
pop
adc
sbb
loope
sub
and
aas
aad
mov
mov
inc
pushf
xor
iret
xor
xor
pop
sbb
jnp
stos
and
mov
add
inc
mov
inc
out
jnp
push
xor
std
mov
xchg
mov
into
addr16
mov
hlt
sti
mov
pushf
maxps
cli
sub
ficoms
mov
lahf
mov
add
jecxz
dec
mov
loop
add
cmpb
pop
je
stc
out
push
jns
das
dec
push
imul
pop
pop
xor
mov
lea
imul
pop
jae
fmull
pop
aas
push
divb
popl
mov
popf
adc
mov
sbb
inc
in
movsb
or
imul
mov
jo
ret
sti
dec
js
pop
add
adc
mov
aam
lods
xor
outsb
mov
and
stos
cmpsl
pop
mov
jle
xchg
mov
cmc
add
dec
scas
jge
je
and
cmp
test
inc
sub
cwtl
ja
inc
js
insb
fidivrl
nop
aad
repnz
fdivrl
dec
sahf
pop
fisubrl
rol
ret
mov
mov
rdmsr
ret
xor
mov
xchg
xchg
test
xchg
sub
push
sub
jbe
out
cmpsl
or
adc
mov
movl
add
mov
ljmp
icebp
das
dec
push
sub
mov
shll
xchg
jmp
in
dec
adc
push
imul
lret
push
pushf
adc
daa
scas
push
xor
pop
jno
mov
or
incb
xchg
dec
jns
push
icebp
js
adc
insb
ja
cmp
fs
pminsw
out
outsl
movsl
xor
out
out
jle
fs
in
push
out
das
jb
inc
nop
imul
insb
movsl
push
pop
pop
sbb
cmp
imul
inc
mov
mov
xchg
jge
mov
dec
in
sub
cli
cld
pop
pop
cltd
aaa
sbb
sbb
push
or
ret
iret
xchg
fsubr
inc
sub
jle
mov
mov
dec
and
mov
fisttpll
add
mov
fisubl
mov
sarl
pusha
push
jno
clc
jo
addr16
push
inc
sub
sti
sbb
les
push
je
sub
and
jo
mov
out
push
rolb
out
cmc
hlt
cwtl
out
mov
inc
lods
loope
mov
jno
sbbb
addr16
lods
sbb
lret
repz
in
fcmove
mov
pop
out
rcr
mov
dec
test
jb
jmp
jmp
mov
adc
ret
mov
jbe
and
jne
cwtl
repz
lcall
cmp
xor
orl
stos
xorl
mov
lcall
fidivl
sbb
mov
inc
and
pop
addr16
lds
adc
icebp
inc
lret
pushf
or
andb
movsb
cwtl
loop
cmp
mov
jge
push
clc
stc
lock
xor
rorb
cmp
xor
fisttpl
cli
leave
push
sub
sarb
mov
xor
add
xchg
clc
add
fistpl
leave
dec
and
in
test
sub
ret
jbe
xor
xor
fsubrp
jne
aaa
pop
xlat
adc
mov
sarb
ret
mov
scas
shll
clc
sub
fcmovu
push
lahf
cmp
dec
jecxz
dec
push
cltd
test
adc
mov
pop
mov
fisubrl
adcb
sub
and
push
aad
xlat
in
ja
cmp
mov
sbb
xchg
fdivs
movsb
mov
mov
adc
mov
ret
mov
daa
daa
addr16
inc
jnp
sbb
pop
inc
lret
popf
jb
addr16
stos
push
in
xchg
rcpps
aad
out
out
ja
ret
rclb
sbbl
hlt
push
scas
jns
adc
xor
sub
nop
push
mov
push
aas
jne
mov
xchg
jg
bnd
call
cwtl
shll
jecxz
out
inc
std
loope
mov
call
in
lods
in
jno
insl
mov
cmp
or
mov
dec
sahf
xchg
sbb
or
int3
lret
vmovsldup
popf
cwtl
add
enter
push
pop
and
mov
add
fcmovnb
enter
es
cmp
pop
out
adc
xchg
enter
lods
out
xchg
bound
xor
jl
cli
xchg
sti
test
dec
pop
jne
jb
popf
loopne
mov
sub
addr16
arpl
je
shlb
bound
scas
inc
pop
xor
data16
stc
xchg
fwait
subb
aas
pop
cli
sarb
xor
sub
add
or
push
cmp
mov
xchg
adc
cmpb
popa
arpl
lods
mov
inc
fldcw
mov
xor
inc
sahf
or
mov
sub
xchg
adc
xchg
jne
out
cmp
enter
mov
mov
mov
movsl
aam
xchg
push
lock
int
in
pop
mov
sbbl
push
outsb
sub
int3
xor
xchg
jle
loop
imul
adc
jo,pt
and
jo
popf
dec
ljmp
in
cmc
mov
inc
push
in
cmp
mov
mov
and
in
sti
aaa
scas
push
adc
lods
rcrl
xor
dec
jg
pop
das
push
lds
loop
outsl
pop
push
xchg
mov
mov
or
ret
cmp
push
jbe
mov
mov
aad
insl
cld
stc
fidivs
dec
sbb
mov
push
push
repnz
inc
pop
dec
stc
push
push
hlt
sbb
mov
and
dec
xor
lds
sbb
mov
push
adc
push
dec
xchg
iret
xchg
rorl
pop
mov
fcompl
jmp
cmp
or
fisubrs
test
dec
xchg
lods
push
cmp
inc
movsl
ret
mov
jle
mov
addr16
lods
out
iret
lods
js
shll
push
bnd
xor
or
mov
xor
loope
lods
seto
fidivl
sub
adc
xor
pop
pop
fs
cltd
mov
pop
sbb
or
nopl
inc
movsb
dec
inc
paddusb
mov
jg
pop
movsl
sbb
pop
loop
cld
rcrl
add
nop
dec
jmp
push
jmp
jmp
jnp
cmp
xor
div
mov
imul
xchg
push
or
fstl
jp
cmpsl
cmp
push
clc
andl
into
ret
sahf
sti
aad
push
cmpsb
andl
cmp
jg
inc
jno
sub
add
mov
outsl
loope
mov
scas
rorb
out
sub
dec
sub
jno
xor
aas
andl
or
mov
test
mov
cmpl
cltd
fcmovnb
or
daa
dec
cltd
mov
cwtl
add
popf
push
mov
jo
test
mov
or
inc
push
iret
lret
aaa
orb
addr16
lret
xchg
int3
lcall
pop
jae
xchg
dec
outsl
imul
jb
pop
sub
add
dec
xor
addl
sahf
das
mov
pop
outsb
dec
and
add
call
mov
push
je
notb
cmp
dec
push
xor
stos
aaa
in
cmpsl
jnp
cli
fcoml
mov
sub
sarl
jno
stc
out
xor
mul
mov
stos
mov
shl
inc
pop
mov
outsb
test
and
repnz
int3
loopne
xor
xor
outsb
add
sbb
mov
addr16
sub
add
jno
pop
enter
xor
mov
ljmp
jecxz
cmpsb
push
mov
cmp
rorb
fimuls
xchg
xchg
add
jns
add
pop
inc
cmp
nop
cmp
jae
push
jbe
mov
das
cmp
xor
xchg
test
push
nop
inc
push
pop
out
icebp
outsb
idivb
scas
mov
aas
and
jnp
divl
xlat
ja
mov
xor
les
out
add
shl
lock
cwtl
sub
sub
sub
or
push
add
jg,pn
inc
mov
fwait
cmpsl
push
fs
imul
xchg
rcll
data16
adc
mov
xor
pop
pop
movsl
subl
or
inc
aas
and
and
fs
fwait
jnp
add
in
ljmp
aaa
lods
lret
test
mov
aas
sarb
adcl
push
sti
pushf
dec
ljmp
sbb
xchg
inc
mov
jns
scas
adc
push
iret
and
dec
and
ljmp
clc
shll
add
rcrl
cwtl
pop
fs
outsb
cmp
sbb
mov
jno
and
cmp
jmp
in
xor
fistpl
push
mov
xor
xchg
mov
add
mov
cmp
ficomps
push
sarb
dec
sub
mov
fcomps
daa
xor
inc
sub
xor
push
sar
scas
inc
subb
sub
jl
push
mull
xor
or
repz
leave
lcall
sub
in
outsb
outsl
cli
fists
icebp
or
and
test
enter
mov
popf
inc
fiadds
mov
sbb
adc
jle
adc
dec
cmp
cmc
jns
lcall
rolb
decb
fisttpl
or
addr16
loop
std
xadd
jg
repz
out
hlt
dec
cltd
sub
sbb
mov
xchg
sbb
push
add
stos
call
cmp
loop
dec
ss
mov
mulb
pop
lret
test
addr16
push
xor
mov
and
imul
out
cmpsb
subl
xor
es
add
sbb
pmaxub
ljmp
sub
icebp
cmp
loop
cs
push
cwtl
sub
sbb
lock
sub
movsb
xchg
fstpl
shr
roll
stc
outsl
jne,pt
sti
adc
or
pop
mov
xor
and
out
fisttps
mov
push
mov
or
pop
sub
fisubl
aaa
test
pop
sub
lcall
add
and
out
adc
add
pop
inc
daa
jo
and
mov
orl
jle
icebp
inc
daa
push
enter
dec
pop
dec
mov
add
mov
mov
sbb
sbb
popa
popf
cltd
cmp
lahf
int3
push
icebp
inc
adc
sub
movsb
sar
jb
or
push
out
cli
dec
mov
divb
xchg
sahf
mov
push
mov
rorl
faddp
dec
fistps
add
pop
call
inc
jnp
push
and
pusha
or
push
fxch
sbb
sahf
push
dec
cmp
and
push
dec
cld
insb
jns
fimull
aad
inc
cmpsb
sbb
out
cli
adc
flds
mov
lods
jne
mov
faddl
ret
xorl
into
scas
jbe
mov
movsl
aam
xchg
nop
add
lods
xlat
mov
pop
xabort
sti
in
rolb
jbe
enter
add
add
stc
packssdw
cmpsb
ret
andb
mov
cmp
sbbb
movsb
lods
sub
mov
movsl
pop
scas
out
insl
lods
scas
es
test
imul
bound
testb
and
fwait
out
shlb
mov
aaa
push
add
xchg
add
push
cmp
push
fs
mov
fidivrs
imul
ljmp
cmp
xor
xor
ljmp
lea
les
cmpsb
xor
jno
rorl
jo
fwait
mov
sbb
lods
push
sub
mov
pop
or
or
mov
jmp
js
mulb
sahf
addr16
mov
sbb
inc
pop
mov
outsl
pop
nop
or
dec
out
jmp
push
cmp
icebp
rcrb
xchg
lock
nop
insl
push
dec
iret
imul
test
dec
xor
fcomp
pop
addr16
cs
mov
pusha
sub
inc
lret
ss
sub
jl
push
sbb
or
mov
sti
mov
add
jle
ds
pop
mov
int
or
pop
mov
lods
loope
or
gs
divl
xchg
push
push
add
mov
xchg
int
ret
negw
mov
jg
add
and
test
and
push
add
bound
outsb
push
xor
pop
cmovno
lock
mov
sbb
mov
divl
mov
filds
mov
rorb
adc
and
inc
jle
jne
imul
rcr
cwtl
cwtl
or
or
adc
dec
ret
mov
rcll
xchg
in
mov
fwait
xchg
xor
xor
outsb
cmp
insl
push
aas
cmp
jmp
cli
pop
cltd
mov
mov
movsl
popa
lret
mov
out
inc
inc
adc
xchg
mov
mul
mov
xor
scas
or
lret
push
mov
aam
repz
enter
mov
sub
xchg
in
xlat
add
mov
and
std
sbb
jns
arpl
loop
xor
inc
icebp
jp
jg
mov
xlat
or
stos
fisubl
stc
cld
mov
cmpsl
out
rcrl
dec
pop
mov
pop
add
data16
mov
xchg
mov
scas
jmp
or
js
outsl
add
and
add
cltd
int3
add
js
and
outsl
mov
icebp
xchg
mulb
xchg
xchg
std
sbb
aam
sbb
push
lea
iret
inc
mov
lcall
data16
addl
xchg
jle
ja
ficoms
pop
push
les
sti
dec
add
cld
cmp
in
dec
inc
fldz
addl
and
pushf
sbb
les
inc
dec
mov
xor
inc
lret
iret
dec
mov
movsb
addr16
aam
and
insl
xchg
mov
push
and
leave
arpl
and
jno
nop
inc
cmc
push
mov
jecxz
pop
divb
and
andl
inc
xor
subl
jno
sti
sub
mov
imul
push
sub
movsb
xor
inc
aas
fstp
jne
cld
cmpsl
and
jae
push
leave
inc
fwait
cmovge
out
mov
stos
jmp
jns
nop
mov
hlt
hlt
and
pop
lret
xlat
movsl
mov
push
mov
mov
add
jge
movsl
aam
adc
cwtl
xchg
sarb
in
dec
inc
fidivl
ret
fdivr
push
mov
test
fcoms
inc
cmp
mov
inc
and
inc
xorb
test
mov
xor
aas
stos
adc
push
mov
add
mov
and
xor
mov
shrb
fisttps
repnz
and
cltd
mov
or
or
aaa
mov
in
mov
rclb
dec
testl
cli
push
loop
xlat
jmp
jle
mov
les
ss
cld
gs
lcall
pop
movsl
sbb
int3
inc
xor
mov
xchg
push
scas
jnp
je
jp
and
repnz
int
imul
jp
jne
fstpl
lods
andb
pop
aad
dec
cmpsb
mov
cmc
sbbl
lds
add
xchg
lods
pop
mov
jle
mov
pop
cwtl
lret
addr16
xchg
adc
data16
mov
xor
aam
test
mov
cmp
cmp
inc
inc
ret
cs
lret
push
aas
inc
cs
iret
loopne
out
jne
add
pop
pop
mov
dec
inc
xchg
push
iret
in
fmull
push
xor
sbb
and
mov
mov
ficompl
outsb
rcl
ss
lds
mov
and
ja
popa
xor
add
cmp
fwait
insl
pop
add
movups
ss
mov
jb
xchg
mov
movsb
add
repnz
test
outsl
pop
add
mov
adc
sbb
jecxz
cmp
std
xor
mov
push
jecxz
hlt
dec
pusha
sti
out
int
dec
movsl
mov
xlat
in
clc
scas
lret
adc
adc
sub
mov
ja
ret
insb
push
scas
xor
cmp
and
inc
jl
cmc
dec
sub
dec
inc
xchg
push
sub
xor
jae
ja
cltd
sbb
push
dec
gs
dec
sub
loope
xchg
fwait
and
hlt
adc
das
fists
aas
dec
lret
leave
pop
jae
out
push
and
shll
hlt
xor
dec
mov
sbb
and
sub
cli
and
pop
inc
jo
cmp
idivl
add
aam
inc
filds
lods
cmp
xchg
adc
sbb
iret
dec
out
or
jae
sbb
add
sbb
adc
daa
or
xor
and
jae
pop
or
and
ljmp
testb
sbb
clc
bndstx
mov
add
xchg
shrb
rorl
dec
aas
pop
fldt
jmp
mov
adc
cs
in
jae
inc
fdivrl
mov
std
cli
jo
sbb
imul
insb
loope
sbb
sbb
mov
pushf
mov
sbb
jbe
inc
loopne
mov
push
in
cmpsl
ret
test
push
mov
aam
fbld
ja
dec
mov
lea
test
adc
cs
aas
shlb
fdivs
xor
push
push
adc
push
lods
xchg
mov
push
lret
gs
xor
lret
in
add
ret
pop
stos
pushf
jecxz
loop
cld
jle
movsl
or
stc
int
mov
cltd
loop
dec
loope
mov
xor
mov
mov
cli
sbb
pop
sub
insb
ja
jl
mov
adc
cmp
mov
test
test
pushf
or
or
or
jbe
pop
inc
jecxz
sahf
jb
dec
aad
je
jmp
xor
add
gs
pop
pushf
xor
flds
aam
ret
jae
sbb
xchg
aam
mov
push
jne
mov
xchg
shrl
push
add
ret
xchg
mov
xlat
sub
dec
std
loop
jl
jecxz
lock
dec
xchg
sbb
mov
mov
sar
sbb
fldenv
mov
outsl
add
xchg
repnz
scas
and
or
ljmp
int
hlt
pop
xchg
cwtl
daa
icebp
add
mov
jo
iret
sbb
mov
cmpsl
movb
test
xchg
aam
pop
sahf
inc
dec
arpl
sbb
sbb
lods
xlat
les
in
jae
test
jmp
pop
movsl
inc
adc
xchg
mov
mov
push
in
aaa
jmp
dec
fidivrl
icebp
mov
adc
ret
mov
test
xchg
dec
cmp
ja
push
mov
sti
jne
mov
mov
loope
xchg
cmp
mov
push
xorl
mov
lret
xchg
or
rolb
fwait
jb
inc
loop
js
mov
pushf
stc
lea
fstpt
mov
sub
cmpsb
mov
dec
test
testl
lock
call
out
pop
jmp
jb
mov
adc
and
or
cwtl
out
imul
repnz
mov
and
push
cmpsb
cld
sti
or
cmpsb
dec
movsl
adc
push
xchg
mov
mov
out
sbb
xor
dec
dec
xchg
jno
out
push
mov
xchg
vpcomud
mov
in
and
cmp
jle
outsb
cmpsb
jb
mov
push
fld
in
or
jne
shl
jns
int
popa
pop
mov
mov
push
in
cld
inc
cmpsl
subb
push
sub
sbb
push
pop
iret
mov
dec
add
jmp
xchg
push
rorb
outsb
je
jne
clc
adc
int3
pop
outsl
sbb
andps
cmp
or
shll
cltd
adc
addr16
adc
push
cmc
out
cld
xor
dec
dec
sub
pop
mov
and
add
rorl
cmp
or
lds
push
arpl
insl
cmp
push
inc
jp
cmc
andl
and
ss
dec
mov
sub
rcl
daa
inc
jge
sbb
mov
test
in
out
mov
insb
inc
scas
jnp
scas
dec
fcos
mov
jg
insl
and
mov
stos
cmpsb
pop
xor
fsubrs
xchg
cmp
mov
dec
adc
dec
pushw
push
or
pop
mov
test
cs
in
xchg
cmc
pop
test
pop
and
pushf
xor
mov
mov
std
pushf
xchg
inc
arpl
lds
mov
sub
xorb
inc
cmp
cld
iret
adc
shr
lods
push
pop
stos
mov
jne
or
repz
push
push
mov
mov
movsb
sub
ror
pushf
dec
int3
dec
sub
sub
insb
test
fstps
lret
dec
mov
jmp
jno
push
sub
mov
imul
shll
mov
xchg
xor
dec
subl
je
fwait
cmp
out
pop
mov
in
push
or
fwait
pop
inc
mull
mov
push
bound
pop
inc
je
xchg
xchg
lods
push
pop
adc
push
and
xchg
or
pop
cmp
hlt
xor
out
pop
movsb
xchg
enter
lahf
xor
lret
aam
inc
and
dec
iret
cmpsl
jg
xor
and
add
jae
in
shrl
sahf
into
cli
push
lea
pop
cmp
and
xchg
inc
leave
xor
inc
mov
dec
mov
lahf
jp
pop
fsubrl
inc
dec
pop
push
in
js
xchg
loopne
call
jecxz
dec
add
icebp
dec
sub
push
mov
sbb
jae
pop
mov
fstpt
cmpsl
lock
add
cli
jno
sbb
add
testl
and
sbb
loope
xor
and
jno
sub
push
ret
outsb
loop
jno
dec
inc
popa
repz
xchg
sbbb
sti
ficompl
add
outsl
faddl
mov
ja
sub
and
xchg
shlb
mov
sahf
push
sub
pop
mov
jmp
xchg
mov
outsb
push
adc
stos
inc
nop
mov
lods
xchg
xlat
xor
or
pop
jl
xchg
push
xchg
xor
fisubl
add
fwait
ret
test
rcrb
mov
xchg
lock
push
inc
dec
decl
jnp
or
inc
repnz
ja
jnp
jnp
mov
notb
mov
mov
mov
cwtl
dec
inc
imul
push
inc
cmpsb
pop
push
ja
std
xor
xor
push
popa
and
mov
xor
cltd
xchg
and
lds
mov
sub
scas
pop
ljmp
sbb
js
std
mov
push
lcall
jae
mov
cmovo
fsts
iret
cs
add
aaa
mov
enter
cmpsl
loop
ss
es
and
clc
lahf
mov
inc
lds
int
mov
mov
jmp
ret
lret
ja
xlat
pushf
xchg
repz
jle
movsl
jne
mov
mov
xor
pop
xchg
fisubl
and
or
mov
repz
mov
ljmp
and
movsl
mov
aas
movsb
lahf
hlt
pop
pop
fadd
dec
push
test
push
jne
pop
push
popa
fisubs
push
xor
rol
cmp
lea
mov
sahf
rcr
xchg
ljmp
ja
ret
shlb
repnz
stos
pop
mov
lcall
in
repnz
enter
jl
xchg
fwait
les
ret
jg
rorb
dec
xorb
sub
dec
loope
dec
je
testb
sbb
or
pushf
pop
dec
call
mov
popf
movsb
mov
push
lcall
cmp
in
xor
cmpsb
das
arpl
inc
int
out
and
sbb
lock
sub
testl
fidivl
loope
std
and
jb
xchg
leave
lret
es
mov
ja
ja
pusha
add
les
sub
outsb
aas
sahf
es
jns
aad
les
adc
insl
bound
test
ret
rolb
shrl
xor
mov
xor
adc
jecxz
enter
xchg
jp
fimuls
add
aas
insl
fldenv
jae
nop
adc
sti
xchg
lock
or
push
xor
les
arpl
fldenv
xchg
sbb
push
sbb
mov
cmpsb
inc
je
insb
push
inc
je
in
stos
fs
cmp
and
pop
add
pop
jle
insb
cmp
lods
sbb
jb
sti
ljmp
pop
je
xor
sbb
mov
or
hlt
add
bnd
sub
mov
in
out
xchg
xchg
and
rcll
mov
push
loop
out
mov
test
addr16
pop
add
cltd
pop
fbld
xchg
dec
pop
inc
mov
enter
stos
leave
cmc
cli
push
jl
pusha
std
jne
lds
shll
push
cmp
sbb
ja
iret
mov
stos
pop
aaa
jb
dec
mov
sub
negl
mov
ja
or
dec
in
ss
jne
or
outsl
xchg
xor
out
clc
movsbl
jbe
or
inc
popf
inc
add
push
inc
dec
mov
inc
shl
jo
insl
inc
adc
roll
jno,pt
lahf
add
ja
mov
and
mov
mov
cmp
aam
aaa
and
test
loopne
fsubr
je
pop
mov
scas
cmp
push
dec
pop
movb
dec
test
in
imul
sbb
sub
pushf
mov
into
mov
jge
loop
cld
cmp
or
xchg
mov
loopne
mov
mov
out
and
stc
rolb
dec
and
push
mov
dec
shlb
sbb
mov
outsl
dec
pop
mov
stos
or
das
lock
sub
mov
loopne
bnd
cltd
xchg
push
mov
or
adc
lret
pop
adc
loope
pop
jns
xchg
and
ds
cltd
mov
lods
hlt
push
jb
shr
dec
jae
test
loope
dec
push
pop
pop
pop
jo
push
dec
mov
add
sub
pop
mov
xor
fwait
cmp
add
add
mov
ret
jae
xchg
icebp
call
push
pop
ljmp
sub
cmp
inc
sahf
rorb
fimuls
dec
push
lret
add
mov
pop
cmc
pop
mov
or
mov
int3
and
jle
xchg
inc
fwait
in
and
test
mov
je
jo
ret
adc
push
inc
sbb
xchg
negl
out
or
or
sbb
in
aaa
scas
or
pop
repnz
jnp
mov
jp
jb
jne
dec
lahf
jmp
inc
out
arpl
mov
xchg
xchg
mov
ret
les
in
std
les
pop
es
nop
push
fdivl
inc
jp
cmpsl
push
pusha
test
pop
jmp
shlb
push
jge
das
stc
add
adc
cmpl
stc
and
cwtl
cmpb
jge
xlat
sub
les
cmp
ja
out
in
cmp
test
cld
sbb
jb
movb
or
sub
sahf
in
fsts
fnstenv
cmp
sbb
jl
sub
mov
ret
adc
lret
int3
jecxz
mov
jl
xchg
in
jl
lods
outsl
or
xchg
mov
loopne
mov
bound
inc
aam
clc
test
push
jo
or
sarl
adc
pop
insb
mov
jo
mov
bound
arpl
inc
xchg
rolb
adc
mov
jns
or
and
push
outsb
faddl
aad
aas
inc
mov
mov
lahf
js
and
loop
inc
adc
scas
jns
dec
adc
shrl
pop
and
xor
inc
jno
jno
jle
cmp
test
out
jl
inc
push
xchg
xor
enter
daa
cmp
jmp
xlat
sbb
push
or
mov
inc
or
xchg
inc
dec
or
fbld
iret
add
xchg
je
lods
enter
cmp
mov
sahf
sti
cmp
das
cmc
call
dec
mov
sahf
xchg
push
bound
fldenv
std
nop
push
or
ret
mov
add
fsubrl
inc
mov
iret
mov
popf
enter
divl
nop
leave
ljmp
pop
mov
xchg
jmp
mov
mov
mov
rcrb
lret
js
add
lods
mov
lahf
lahf
push
mov
add
push
sbb
inc
xor
fstpt
mov
mov
imul
mov
iret
mov
xor
call
int
dec
inc
lods
mov
rcrb
icebp
dec
xchg
faddl
scas
fdivs
outsb
cli
jno
jae
nop
pop
adc
sarb
mov
adc
and
cmpsb
push
jne
in
push
rcl
enter
nop
cli
xor
test
adc
jmp
insb
dec
pop
int
xchg
add
bnd
xor
sbb
mov
adc
mov
mov
pop
jmp
jg
or
mov
sbb
stos
inc
in
pop
dec
adc
dec
mov
add
sbb
std
xchg
or
ret
repnz
in
pop
pop
insl
in
jb
shl
std
imul
mov
ficoms
insl
sub
cmp
fnstcw
push
clc
fstpt
sbb
ss
push
sbb
rclb
dec
sbb
cwtl
cmp
cmpsl
push
in
mov
imul
repnz
je
pop
jno
addr16
stos
jo
push
xchg
fldt
pop
loop
push
adc
cmp
out
popf
pop
xchg
xchg
subl
nop
xchg
mov
sar
sbb
call
ret
test
or
daa
adc
mov
sti
rcrl
aas
pop
inc
dec
xlat
jbe
xchg
mov
inc
iret
je
ret
push
pop
or
mov
scas
mov
adc
pop
and
fsubrl
ss
push
imul
and
xor
lds
inc
jno
mov
cmpsl
std
imul
fcoms
jmp
roll
xorl
mov
xchg
mov
movsb
inc
add
pop
pusha
add
sbb
lds
add
xor
rcrb
ss
xchg
mov
push
sahf
scas
adc
xchg
inc
push
cmc
out
add
rcrb
cld
jge
fisubrl
lret
xor
mov
mov
add
xor
cmpsb
mov
test
dec
jns
xchg
mov
cmpsb
xchg
push
push
in
fiadds
orl
sbb
pop
and
add
xchg
ja
pusha
ffree
negb
mov
mov
push
cmp
add
dec
stos
adc
bound
pop
outsb
cwtl
cli
sar
push
inc
in
xchg
out
jecxz
fst
imul
in
dec
xchg
es
pop
sbb
or
in
xchg
loop
in
aam
mov
negb
out
pop
sub
shll
stos
cltd
loop
jb
data16
movsl
xchg
pop
out
and
mov
dec
insl
cltd
stos
dec
inc
scas
xchg
xchg
adc
insl
fimuls
adc
mov
sarb
sub
cwtl
mov
rcr
in
lahf
push
push
insb
bound
or
fs
inc
dec
fwait
sbb
add
aam
add
sti
add
pop
jle
arpl
xor
xchg
mov
adc
imul
out
out
aad
icebp
lret
sbbl
jecxz
test
xor
adc
and
je
push
sub
cmp
add
xchg
push
mov
imul
pand
pop
and
mov
pop
push
inc
test
push
sub
jne
cwtl
aam
push
mov
outsb
xchg
test
scas
xchg
add
in
inc
movsl
movsl
or
pop
jl
in
popa
cmpsb
mov
sub
call
adc
inc
push
inc
jne
fidivl
fstps
into
pop
jmp
pushf
das
and
or
ret
jg
stc
int
pop
mov
loope
mov
pushf
data16
je
jecxz
dec
insb
fadd
lahf
xchg
inc
push
jnp
mov
fs
sub
hlt
out
cvtpi2ps
clc
or
fnstsw
je
jae
dec
mov
lret
icebp
sbb
xchg
ret
jno
fidivs
mov
sbb
decl
cld
shll
pop
xor
call
inc
imul
in
inc
sarb
inc
lods
scas
mov
cmc
mov
sbbl
xchg
in
stc
inc
cmp
int
mov
out
and
in
leave
xor
std
out
sub
jecxz
cmp
ret
mov
push
insl
outsb
std
xchg
lods
sub
arpl
js
push
mov
adc
ret
cli
in
repnz
test
dec
inc
fxch
enter
aam
or
xor
aaa
cmp
das
icebp
lock
shlb
add
fldcw
scas
test
arpl
jns
inc
jge
mov
pop
pop
jp
sub
cmp
or
cmp
es
mov
arpl
rorl
cs
pop
jno
jle
fs
mov
pop
into
mov
outsl
push
fwait
fs
inc
in
sub
fdivrs
repz
push
mov
sti
clc
inc
inc
lcall
insl
and
aad
mov
std
or
popa
xor
adc
or
jecxz
sahf
push
jmp
movsb
repnz
test
adc
mov
fiadds
in
push
outsl
lret
testb
lcall
cwtl
dec
jle
push
hlt
imull
cltd
mov
into
fsub
xchg
test
addr16
cld
movsb
data16
fdivrl
adc
cltd
clc
mov
and
test
fnstsw
or
xchg
cmc
subb
inc
sbb
cmp
sub
pop
xor
adc
fs
popa
pop
repnz
hlt
scas
lock
movsb
lods
jns
pop
mov
cmp
push
fwait
add
stos
imul
jecxz
andl
icebp
or
bound
leave
lods
imul
adc
xchg
mov
dec
pop
cmpsl
jecxz
mov
push
rclb
xor
adc
mov
popa
enter
movsl
insl
je
cwtl
nop
push
sahf
dec
inc
mov
out
test
or
stos
mov
and
adc
mov
inc
cmp
add
xchg
sbb
ret
adc
push
aas
mov
mov
inc
rolb
and
inc
ret
mov
fs
and
adc
jle
ss
sbb
or
gs
sub
pushf
into
imul
pop
sbb
rcr
cmc
inc
jae
mov
aam
sub
and
js
fisubl
xorl
mov
and
sub
jmp
ljmp
popa
mov
xchg
xor
aad
push
das
mov
fsubl
fstps
repz
pop
add
sbb
push
mov
test
mov
test
add
pop
js
xor
fsubrl
lret
mov
pop
dec
xlat
mov
cs
inc
push
pop
push
push
sbb
sbb
sahf
jnp
in
enter
sub
cmp
inc
leave
dec
es
in
je
jno
jmp
cwtl
and
in
in
jne
les
pop
clc
fimuls
pop
scas
rcll
xlat
ss
mov
fcmove
shlb
cwtl
push
in
mov
aaa
cmp
es
cltd
int3
imul
leave
mov
xor
fstpt
xor
mov
fldt
shll
cmp
or
ljmp
lahf
pop
pop
enter
cmp
sub
pop
adc
mov
sbb
addr16
out
test
lods
roll
mov
fwait
dec
add
scas
pop
mov
hlt
jns
dec
adc
xchg
ds
enter
dec
pop
dec
cmpsl
in
mov
mov
pop
fdivrs
ds
jae
rcrl
jg
mov
insb
cmp
push
aas
cmpsl
shl
jle
lods
xchg
cltd
fwait
loop
outsb
and
mov
sbb
cli
imul
sub
fucomp
mov
faddl
orb
add
inc
inc
sub
test
xor
jmp
xlat
std
jb
out
adc
push
icebp
inc
stos
insl
add
imul
iret
clc
cli
mov
cmp
inc
xchg
xor
push
or
test
pop
lret
lret
pop
sub
cli
adc
repnz
adc
sbb
test
cmc
fwait
push
test
out
mov
push
push
mov
outsb
xchg
aam
mov
jne
jl
lods
adc
mov
fadds
add
out
push
stc
pop
mov
aam
xchg
push
lds
xchg
stos
pop
fsubs
jb
lock
dec
jno
in
lcall
imul
mov
mov
jbe
xlat
and
lds
popa
xor
loop
cli
pusha
sub
jns
mov
leave
sbb
mov
jbe
frstor
and
lds
dec
pop
and
mov
dec
arpl
lods
outsl
and
pop
and
add
cmp
test
push
jl
pop
mov
test
inc
pop
cmp
sbb
xchg
hlt
in
xor
xchg
nop
push
fucomp
dec
pop
stos
mov
mov
inc
dec
dec
nop
les
push
repz
mov
fcomps
mov
ljmp
adc
imul
mov
movsl
js
fs
call
fwait
and
push
rorb
lahf
push
adc
push
jo
sub
std
dec
add
fistpll
ret
push
pop
call
adc
mov
sub
in
dec
cmc
lods
iret
js
lds
cmpl
cmp
add
mov
push
or
std
lret
call
add
stos
mov
push
das
mov
pop
push
outsl
pop
mov
cs
pop
ret
inc
pop
mov
inc
jge
cmp
sti
gs
mov
and
inc
jg
sub
lock
test
xor
xor
push
inc
ja
repz
mov
adc
adc
xchg
pop
in
outsb
enter
jmp
adc
aam
adc
inc
shr
lahf
mov
xorl
push
xchg
es
and
insb
sbbb
lret
aam
jg
push
leave
insl
jge
insl
ret
ds
lods
lods
inc
mov
es
ja
or
dec
test
jmp
gs
xchg
cmpsb
popa
and
stos
fidivrl
loopne
out
and
or
jl
xor
loope
mov
push
jb
sub
mov
les
push
movsl
lcall
ds
imul
dec
lods
lods
dec
push
sahf
mov
xor
adc
int3
xor
xchg
lods
fadd
scas
jno
ficoml
data16
ret
popl
fmuls
mov
jae
adc
cmc
xchg
push
mov
xchg
cwtl
mov
push
sub
insb
mov
out
xchg
mov
fidivl
mov
mov
sbb
jp
inc
push
push
sub
fidivl
mov
jg
scas
lock
test
xorb
insl
lods
xchg
xchg
push
push
or
inc
iret
fxch
mov
cmp
inc
inc
jmp
les
cwtl
sbb
movsl
push
xchg
stos
loope
loope
push
das
iret
fsubrl
adc
fwait
add
outsb
mov
sahf
in
jne
cmp
movsl
dec
sbb
dec
inc
test
mov
inc
jns
push
loope
rclb
orb
int
xor
lock
inc
push
and
pop
fmuls
fdiv
xor
sub
dec
dec
insb
dec
iret
pop
dec
mov
call
inc
push
mov
clc
movl
add
scas
adc
mov
add
jmp
cmc
pop
fwait
in
lods
in
pop
mov
push
fsubs
sub
int
mov
mov
aas
push
push
mov
hlt
mov
pop
out
xor
fcoml
mov
test
adc
lret
jno
shll
lods
or
out
lods
adc
stos
xor
jmp
repnz
xor
mov
fcmovnu
inc
lahf
xchg
xor
jmp
enter
enter
or
mov
pop
fdivs
xor
lcall
fldcw
je
inc
std
dec
daa
cmp
sub
inc
xor
mov
cwtl
sbb
and
inc
rcr
into
and
shl
xlat
jo
dec
add
lcall
jnp
lahf
fcmovnbe
dec
lods
jne,pn
ret
mov
shlb
push
imul
rcrl
sbb
ljmp
jnp
sbb
cmc
and
pop
push
cmpsb
outsl
pop
mov
popf
das
iret
js
daa
fst
in
popf
mov
aad
jge
fs
adc
add
xor
xchg
lcall
lds
push
add
jnp
mov
cwtl
mov
cmpsb
stos
mov
mov
sarb
mov
pop
shl
jle
jecxz
aas
xor
mov
scas
dec
and
xchg
xchg
xlat
fs
mov
or
shll
leave
jb
nop
adc
stos
and
testl
test
xor
jnp
pop
test
push
cmp
call
xor
push
push
movsl
pop
dec
scas
jnp
sarl
mov
xor
xor
mov
pop
add
push
bound
es
rcr
dec
dec
mov
xchg
xor
push
mov
mov
dec
out
jg
fildl
lret
out
test
push
int
ds
in
lahf
push
pmaddwd
mov
fsub
cmp
testb
stos
ss
call
test
jp
aas
mov
imul
ds
inc
mov
mov
pop
andb
dec
jecxz
cli
mov
test
lret
ficoml
cmp
add
dec
and
out
scas
mov
in
bswap
dec
sbb
lods
sub
sbb
mov
xchg
mov
mov
jbe
dec
sbb
test
pop
add
and
mov
add
shlb
dec
lcall
ficompl
add
adc
xor
mov
dec
lock
pop
sub
cld
aas
fisttpll
xor
js
cmp
mov
faddl
jecxz
outsb
shl
jb
add
and
roll
arpl
sub
enter
mull
xlat
daa
push
lock
and
mov
hlt
testl
inc
pop
sub
cmp
jle
in
ret
repz
inc
push
ret
xor
ljmp
pop
sbb
adcl
clc
pop
int3
or
jmp
jb
movsl
sbbl
mov
xchg
adc
test
xor
std
jp
cs
pop
aas
fildl
movsb
push
push
outsl
lret
push
shll
je
cmpsl
pop
mov
scas
lcall
add
divb
out
push
mov
imul
imul
push
mov
or
call
jae
lea
add
test
loop
sbb
adc
cmpsb
pop
xchg
jbe
test
imul
daa
jl
mov
jns
movl
out
pop
enter
jo
sahf
add
cmpsb
movsb
cmc
xor
and
sbb
jo
loop
aam
sbb
dec
mov
mov
in
cld
adc
lret
xor
int
cltd
sbb
stos
add
lahf
imul
sub
add
jno
fucom
aas
jne
dec
or
andb
jo
jo
push
inc
shl
inc
mov
and
push
jecxz
testb
das
pop
loopne
insl
lcall
xchg
mov
push
int3
scas
mov
inc
mov
ds
pop
imul
dec
test
jecxz
lahf
cltd
fs
outsl
sub
fsubl
adc
sub
pop
insb
mov
ds
test
adc
sub
pop
out
insb
popa
test
xchg
rcr
bound
jns
repnz
hlt
ret
dec
cwtl
pop
inc
popa
lcall
sub
dec
aam
imul
shlb
xchg
es
sub
sti
stos
cli
pop
pop
imul
pusha
stos
mov
mov
or
into
mov
cmp
divb
mov
aam
aaa
cltd
adc
or
jecxz
fiaddl
mov
cld
fwait
jmp
imul
add
pop
add
pop
pop
mov
adc
mov
pushf
fwait
adc
inc
push
movsl
sub
cmp
out
mov
pop
lock
fcos
imul
movsb
fldt
cmc
sbb
push
sbb
xor
push
adc
data16
mov
iret
cld
das
ljmp
push
stos
lret
jmp
xor
fcoms
mov
xlat
pop
adc
jno
into
xor
cmpsl
cld
mulb
daa
dec
mov
fwait
stos
scas
lods
adc
movsl
pop
adc
in
add
mov
xchg
rclb
push
imul
sub
mov
test
jmp
dec
mov
dec
pop
lret
leave
jmp
sbb
cltd
outsl
imul
adc
cmp
aam
xor
mov
lods
and
cli
cmp
dec
sbb
das
jp
mov
outsb
in
es
cmpsl
jp
std
push
cli
cmc
add
addr16
adc
push
jp
movsl
mov
jne
sahf
rorb
outsb
sub
cwtl
jnp
leave
push
repnz
data16
jno
jbe
xchg
lods
clc
push
inc
push
cmpsl
insb
mov
ljmp
lods
xchg
sbbl
test
loope
mov
testb
stos
popa
mov
sti
lcall
push
or
pop
pop
rclb
into
aad
das
mov
fdivs
xchg
test
outsl
xchg
adc
rcl
jbe
add
mov
pushf
pop
aam
mov
sub
loop
aas
sub
notb
xchg
adc
jle
jno
dec
cmp
sbb
pusha
mov
add
movsb
outsb
mov
lahf
aam
hlt
mov
dec
sub
mov
mov
enter
lcall
inc
mov
jno
aam
js
push
pop
jg
lahf
inc
fucom
xor
test
in
inc
adc
mov
inc
sub
adc
loopne
sub
jns
nop
stos
cltd
aam
pop
mov
mov
arpl
fimuls
or
ds
lock
sbb
pop
stc
ret
imul
decl
inc
movsw
fs
icebp
mov
dec
rep
jns
add
xor
lret
jmp
mov
rcrb
inc
jo
sub
dec
lret
and
cmpsb
scas
pop
inc
dec
cmp
fisubrl
jmp
sub
fildll
int
sub
js
aaa
gs
fnstenv
loope
int
out
sub
sbbl
sti
int3
push
push
lods
cs
mov
push
cs
jae
or
pop
icebp
je
insb
sbb
cmpsb
add
add
enter
clc
mov
mov
addps
or
fcomip
or
sub
movsb
mov
mov
movsb
add
lea
pop
mov
jp
sahf
gs
inc
aaa
jg
enter
xorb
xor
jo
daa
cwtl
mov
aaa
push
nop
jns
loopne
fbld
in
int3
xchg
lcall
or
vmwrite
mov
call
sbb
push
idivb
fiaddl
xchg
test
in
mov
cld
mov
rcrb
xlat
loop
push
sbb
jbe
cmp
mov
inc
popa
in
test
aam
lret
pmulhw
sbb
mov
xor
ljmp
lods
pop
or
add
lods
std
pushf
mov
xchg
xchg
sbb
mov
xor
icebp
xchg
xchg
add
push
mov
mov
fdivs
loope
insb
push
mov
sub
test
ss
cmpsb
in
push
mov
movsb
jecxz
cmp
and
jno
aam
and
adc
cli
xchg
jae
mov
push
ja
cmp
jo
call
ja
cmp
cltd
jecxz
std
imul
repnz
mov
test
xchg
jne
adc
xor
adc
in
and
xchg
mov
sub
and
inc
sub
shlb
clc
and
dec
and
xor
leave
pop
stos
mov
into
sbb
xor
mov
and
sub
out
xchg
inc
or
rorl
lahf
and
popf
icebp
lea
mov
and
dec
je
jg
int
lret
imul
push
sar
sar
lods
mov
jo
xchg
jno
scas
fstps
mov
scas
pop
loope
jecxz
pop
rcl
call
add
mov
jg
inc
pop
mov
shll
push
push
dec
inc
jmp
jb
arpl
ljmp
test
repz
pop
fnsave
sbb
repnz
xchg
dec
cmp
push
sbbl
pop
push
pop
mov
mov
xchg
pop
mov
or
cs
test
pop
jns
cmc
mov
movsb
lock
ret
mov
ja
pop
out
adc
js
pop
push
push
mov
lcall
ljmp
or
lock
stos
cmp
jmp
mov
loope
paddsw
inc
ror
iret
sbb
dec
and
or
xchg
in
jbe
inc
test
call
arpl
imul
adc
rcl
mov
gs
adc
frstor
jns
shr
movsb
adc
not
fisubs
cwtl
mov
das
ss
dec
lods
add
stos
or
dec
push
lods
jns
push
icebp
es
push
mov
lahf
in
mov
movsl
jns
out
jmp
lock
bound
push
ds
das
sub
ss
std
ret
push
sbb
pop
out
push
jl
jo
sub
push
jecxz
enter
cmp
call
mov
repz
xor
stos
mov
sbb
fdivr
outsl
lret
out
sti
mov
testl
sbb
xor
into
xor
and
mov
movsl
mov
into
imul
ret
lods
lea
cmp
sbb
push
andl
mov
and
test
dec
imul
push
add
jne
jae
and
es
cmp
mov
rclb
out
inc
outsb
cmp
xchg
imul
sub
pop
je
mov
or
jle
sbb
dec
cmp
jno
ret
lret
cwtl
outsl
add
out
jecxz
stc
icebp
leave
adc
pop
dec
push
aaa
shll
sub
cmp
jbe
dec
fwait
rclb
idivl
jmp
cmp
xchg
xlat
pop
hlt
inc
cli
cmc
ret
mov
adc
cmp
fwait
dec
test
cmc
or
out
movsl
jb
pop
stc
and
xor
dec
mov
inc
push
rorl
js
loopne
add
mov
push
callw
mov
xchg
pop
jmp
imul
clc
pop
in
sub
mov
stc
mov
mov
mov
cmp
pop
mov
inc
cmp
mov
inc
pop
es
mov
and
cltd
push
cwtl
dec
xchg
add
fidivrl
in
xchg
sbb
scas
push
adc
sbb
sbbb
int
in
in
cmp
mov
xor
pop
out
idiv
adc
loopne
pop
jg
xor
push
and
js
outsl
bound
sub
mov
movsb
ljmp
xlat
xor
mov
ja
lcall
iret
jne
out
push
add
mov
lcall
pop
jo
mov
es
adc
sub
test
dec
jbe
mull
ds
and
or
testb
fnstenv
push
notl
push
int3
push
stos
cmp
mov
jmp
and
lret
pop
inc
cmpsl
icebp
mov
jge
cwtl
out
xchg
lods
mov
into
xor
mov
clc
lods
ret
jnp
insl
stc
add
mov
hlt
inc
mov
iret
dec
arpl
mov
lods
shlb
lock
or
imul
in
cmpsb
fldcw
mov
push
sbb
sub
loopne
mov
xchg
lock
and
inc
and
jnp
sahf
outsl
sbb
push
jmp
sbb
or
or
test
inc
shrl
loope
lods
es
stos
lahf
push
and
sub
jne
xor
dec
xchg
sbb
shr
sbb
cwtl
hlt
out
inc
add
adcb
xchg
or
mov
movsl
mov
in
xchg
cmp
in
inc
aam
xchg
fldl
push
or
mov
jnp
mov
je
shll
loope
sub
scas
es
sub
mov
notl
inc
mov
enter
pop
out
lods
adc
mov
xchg
out
add
or
fstps
push
cld
pop
xor
jb
jb
add
xorl
and
push
cmp
dec
je
ret
fcomps
aad
mov
inc
jae
lcall
orb
loop
push
jns
fistl
popf
xchg
inc
cli
div
mov
xor
jmp
cld
shll
xchg
clc
mov
jle
mov
or
les
daa
call
fdivl
lods
push
fwait
scas
popa
mov
xchg
mov
lret
aas
add
into
repz
je
mov
cmp
pushf
and
adc
test
jle
dec
jl
push
xchg
emms
fimuls
push
andb
jo
add
or
in
pop
pop
icebp
cmp
data16
lret
sahf
inc
cmp
mov
test
shll
std
xchg
or
or
sti
mov
out
xchg
arpl
bswap
sbb
int3
aaa
cmp
add
ficoms
mov
or
es
sbb
cmp
fwait
ss
imul
xor
sub
cmpsb
dec
mov
or
dec
inc
jno
add
dec
add
adc
mov
ds
jecxz
loop
ljmp
outsb
jmp
jg
xchg
mov
mov
and
outsl
fldcw
xlat
mov
fsts
and
xchg
shll
imul
jnp
add
add
dec
faddp
out
adc
xchg
dec
call
pop
pop
mov
sbbl
out
or
in
xchg
push
or
xchg
cmp
ret
je
jge
les
xchg
nop
out
mov
add
clc
lods
xor
ficoml
and
les
sahf
call
mov
lods
orl
sbb
lock
in
jle
rcrl
ds
out
jmp
inc
jle
add
xor
xchg
js
pop
add
jmp
cmc
popa
or
aaa
push
imul
adc
mov
insl
mov
push
mov
pushf
mov
add
pop
dec
add
push
cmpsb
loope
jb
lds
scas
jne
mov
fildll
mov
xor
cmpsl
push
movsb
shlb
pop
push
dec
movsb
xchg
push
jmp
je
lods
pushf
les
and
push
nop
fdivr
insl
ja
subl
mov
rcll
dec
push
lods
pushf
sahf
cli
or
shr
inc
mov
daa
push
mov
scas
adc
pop
inc
popf
adc
jb
lret
iret
inc
mov
cmp
fbstp
outsb
fs
jmp
dec
pop
call
adc
cmpsl
cwtl
fldcw
jecxz
dec
mov
or
mov
out
adc
mov
data16
je
rcrl
inc
into
inc
sub
xchg
xchg
mov
xor
in
addr16
inc
jp
in
test
cmp
repnz
mov
inc
add
mov
jnp
lcall
gs
push
enter
jne
dec
pop
sub
cs
and
or
addr16
mov
cwtl
arpl
scas
mov
lret
mov
cld
data16
pop
or
in
sub
push
mov
aaa
adc
push
mov
rcl
inc
jae
fbld
add
scas
aam
inc
mov
mov
mov
fdivrs
jmp
dec
into
adc
sub
and
sarb
fcmovnu
dec
inc
sbbb
mov
movntq
mov
insb
ror
stc
pop
imul
mov
cld
rcrl
sbb
daa
mov
inc
mov
movsl
fadds
pop
bound
xor
mov
iret
inc
ficompl
push
pushf
lcallw
mov
test
std
and
hlt
jns
jle
adc
das
add
push
cmp
mov
mov
in
imull
pop
mov
inc
loope
sub
fidivl
subb
aad
icebp
inc
add
or
fs
incb
int3
test
ja
xchg
jne
push
push
repnz
sbb
dec
and
xchg
enter
dec
aad
dec
cmp
inc
mov
nop
jns
sub
cmpxchg
mov
sbb
mov
sub
adc
xor
sbb
push
xor
stos
lahf
inc
jnp
leave
push
ror
mov
icebp
mov
mov
pop
mov
clc
inc
push
adc
sub
imul
ret
rcrb
sbb
mov
repnz
mov
or
lods
lret
jb
mov
hlt
bound
jo
pop
and
mov
cmc
lcall
pop
jecxz
adc
mov
sub
stos
sti
jl
mov
jp
out
add
ficomps
not
push
jns
lahf
or
sub
cmp
mov
jnp
test
mov
ja
xor
rol
out
inc
mov
or
add
hlt
xor
mov
mov
mov
int3
movl
jae
jb
std
or
jo
movsb
in
cmpsb
cltd
subb
jne
popa
jae
out
or
pop
rorl
xchg
stos
lock
sub
test
out
lret
mov
popf
push
mov
rolb
jnp
mov
xor
sbb
or
les
pop
addr16
xor
cmp
cli
cs
mov
push
dec
mov
fs
in
lcall
cmpsb
inc
pop
inc
fsubr
fstpl
dec
lds
mov
andl
sti
jo
outsb
adc
jb
les
dec
cli
mov
and
adc
cmp
pop
pop
aas
pop
shll
push
cld
xchg
mov
adc
jbe
ret
cmpsb
push
cmpsl
addr16
jbe
bound
cs
add
ja
outsb
sbb
and
incl
xor
stc
inc
stos
or
pop
rcrl
jmp
negl
jne
sub
insb
dec
loope
pop
cmp
icebp
xchg
test
insb
mov
inc
lods
sahf
cmpsl
mov
bound
sub
sub
ficomps
lahf
mov
ret
mov
pop
loope
or
xchg
dec
pop
jnp
add
dec
mov
mov
sub
repnz
xor
mov
push
push
pop
adc
iret
fdivl
into
dec
mov
fwait
icebp
lods
bound
xor
inc
in
dec
hlt
add
dec
mov
out
lods
mov
imul
loope
jecxz,pt
loope
daa
mov
jl
mov
cs
or
stc
mov
dec
mov
add
js
sarl
imul
stos
sub
xchg
cmp
dec
mov
mov
adc
dec
rcll
mull
enter
mov
cmc
push
arpl
xchg
lahf
push
test
sbb
ret
jo
xchg
push
mulb
xor
pop
call
sub
aad
xchg
outsb
leave
shr
jb
jbe
fwait
mov
frstor
pop
or
inc
adc
mov
xchg
mov
and
insl
clc
sbb
mov
mov
push
cmp
mov
jmp
outsl
mov
lods
cmp
xor
dec
out
aad
mov
outsl
test
mov
sarl
nop
test
les
popf
dec
in
xchg
call
gs
jnp
inc
xchg
push
movsl
push
push
mov
daa
or
mov
push
dec
xor
pop
insb
mov
mov
shr
and
cs
arpl
scas
jno
imul
outsb
pop
and
adc
clc
mov
adcb
cmc
inc
enter
xor
and
push
int
sub
sbb
cmp
lds
les
das
add
pop
pop
jno
dec
outsl
sbb
lcall
test
mov
scas
and
adc
jg
push
jge
in
mov
sbb
push
repz
ret
fdivrp
jbe
push
pop
jg
mov
std
dec
daa
and
icebp
test
lea
sub
test
dec
mov
cli
shll
xchg
fnsave
int
in
in
push
adc
cmp
push
dec
mov
mov
mov
mov
sub
aas
ds
movsl
mov
xchg
jne
pop
push
mov
scas
xchg
test
mov
cmpsl
rcrl
cs
test
mov
lds
push
lahf
addr16
mov
insb
rcr
out
sub
fisttpl
sbb
cmp
dec
dec
cld
and
pop
test
sub
test
movsl
or
adc
xchg
cs
xor
insl
sahf
xchg
scas
mov
loopne
pop
cltd
ss
and
push
das
dec
rcl
sti
aad
sub
mov
mulb
fwait
inc
loopne
inc
stos
mov
mov
adc
leave
sbb
dec
mov
loope
inc
push
aaa
mov
inc
das
mov
add
dec
adc
sub
jns
inc
mov
cwtl
movsb
jmp
data16
inc
repnz
jl
sbb
mov
adc
jge
addr16
mov
in
cld
incb
pop
and
mov
and
repz
add
iret
addr16
mov
lea
mov
insl
add
jecxz
shrl
mov
inc
cmpsb
cmpb
sysret
lods
xor
mov
mov
addr16
mov
aas
test
add
cltd
inc
mov
sbb
gs
cmp
dec
push
pop
fldcw
pop
out
mov
out
les
push
xor
sbb
aad
mov
inc
dec
mov
lcall
jae
ljmp
in
cmpsl
or
fidivs
add
pop
lretw
xchg
imul
movsl
pop
xor
jb
test
into
jle
xor
cmp
cmp
test
push
sarl
dec
cmp
and
decb
mov
lds
cmp
in
or
test
pop
mov
stos
into
lcall
stc
add
lret
in
dec
mov
stc
popf
int
inc
dec
push
dec
das
pushf
adc
jns
pop
lret
daa
add
dec
enter
scas
sbb
popa
adcb
mov
insl
or
add
loop
in
iret
clc
add
and
mov
and
testl
aas
nop
cwtl
sbb
push
xchg
add
shll
out
xchg
std
repnz
jge
mov
data16
out
ret
ljmp
mov
mov
adc
sar
sti
xor
notw
fisubs
sti
enter
add
sbb
pop
pop
cmp
bnd
into
rcll
xor
xlat
fs
jns
xchg
pusha
inc
cmp
cmp
xor
test
xchg
shll
test
aam
inc
nop
int
xchg
lods
loopne
out
es
inc
inc
test
pop
and
add
xor
xchg
and
cwtl
fisubrs
mov
test
scas
lcall
mov
fcos
lret
fwait
mov
cmp
xor
not
pop
dec
leave
jg
sbb
mov
lock
gs
stc
stc
rorb
in
inc
sahf
dec
mov
cmp
pop
jo
push
pop
xor
icebp
or
ret
pushf
popa
orl
popf
push
faddl
adc
inc
xchg
add
arpl
adc
je
addl
lret
and
mov
lahf
jecxz
cmp
scas
add
inc
sub
fmull
jle
out
lret
aad
mov
mov
out
dec
scas
or
lret
mov
ror
lret
popa
test
dec
fsubr
jmp
adc
ficomps
mov
mov
shlb
pop
es
inc
rcr
orl
pushw
subb
sub
add
jno
push
cmp
mov
mov
jns
mov
cmpsl
cmc
pop
mov
es
dec
xchg
ja
fwait
sub
insl
cmpl
push
mov
pusha
pop
aas
loope
outsl
ja
lods
jbe
mov
adc
fisttpll
xchg
dec
mov
xchg
mov
insl
dec
xchg
test
fs
or
pop
aas
pop
mov
adc
fmull
fs
cld
push
ds
in
and
repz
ljmp
add
ja
mov
lea
or
enter
ficompl
adc
xor
repz
xorl
or
sbb
scas
mov
in
lods
adc
jmp
fimull
mov
dec
mov
cmp
fsubrs
inc
jge
bound
adc
sahf
pop
jne
and
and
sbb
sbb
dec
pop
ret
out
int3
aaa
xchg
sbb
stos
mov
cmpsb
sub
adc
mov
jmp
push
loop
inc
pop
mov
cwtl
inc
or
push
loop
pop
enter
in
sbb
lods
mov
pushf
ds
mov
ficompl
je
stos
mov
pusha
incb
lods
popf
xchg
jne
inc
sub
sub
outsl
or
or
sar
inc
daa
movsl
rcrb
aam
sti
sub
out
add
popf
pop
xchg
and
repz
shrb
jno
mov
fmul
lods
add
xchg
sbb
inc
fnstenv
stc
inc
jns
in
jno
add
add
gs
inc
negb
int
cli
test
hlt
imul
lds
mov
clc
orb
xchg
jno
cmp
push
out
xchg
xor
aad
mov
or
out
or
cmpb
js
data16
sub
lret
mov
inc
aam
jg
in
scas
sahf
cmp
pop
dec
push
sub
xor
pushf
inc
add
xor
imul
inc
jp
adc
addr16
pop
data16
dec
add
pushf
push
adc
adc
sbb
ja
dec
fcoml
dec
lcall
ret
mov
stos
xor
faddp
mul
pop
fisttpll
in
scas
xchg
mov
arpl
aas
mov
test
mov
inc
imul
xor
in
call
cmc
lahf
outsl
jno
push
adc
in
enter
mov
mov
cmp
mov
adc
fdivs
sbb
xchg
sub
sub
push
sti
popa
cs
dec
push
inc
push
adc
cmp
xor
daa
sub
nop
jmp
les
jnp
repz
jp
cmp
loopne
imul
pop
xor
int
sub
cmpsb
sbb
lods
lock
loop
test
sub
sub
sbb
pop
cmp
lea
fldenv
fimull
mov
pusha
scas
mov
mov
in
dec
push
add
push
cmp
fs
jo
push
outsb
sahf
lock
inc
in
stos
inc
inc
sub
add
dec
loope
push
push
lahf
jb
inc
stc
push
pop
mov
xlat
cmpsb
adc
mov
into
ljmp
scas
sbb
int
into
and
stos
xor
cmp
mov
rorb
stos
xchg
popa
mov
pusha
push
scas
push
mov
icebp
mov
pop
idivb
stc
notb
movsl
mov
adc
rcrl
adc
or
leave
cmpsb
jno
sahf
xchg
fildl
jne
imul
lret
iret
or
lahf
xor
call
negb
aad
mov
mov
mov
aaa
jecxz
jo
mov
lahf
in
das
sbb
mov
sub
cmp
jmp
mov
sub
or
scas
lahf
lret
cmpsl
sbb
pop
mov
std
jmp
rolb
add
test
subl
mov
jmp
lods
pop
fstpt
movsl
dec
arpl
mov
xor
xor
pop
rol
pop
push
add
inc
sub
sarb
mov
orb
rep
add
stc
dec
outsl
push
mov
in
loope
mov
sub
adc
jne
rolb
inc
loope
xchg
or
loopne
pop
pop
inc
push
jb
or
cmp
leave
push
dec
sbb
sub
enter
mov
sub
popf
xor
loope
add
repnz
ljmp
movsb
xor
int3
sbb
es
cmpsl
dec
and
or
test
cmc
sti
sbb
jo
pop
sub
ljmp
xchg
push
pop
fisttpll
pop
xchg
out
xchg
sbbl
jo
push
ret
mov
cli
push
or
cwtl
and
test
lea
ss
jno
ficoml
dec
ja
notl
in
pop
mov
jae
ljmp
out
outsl
lcall
inc
mov
push
hlt
aad
stc
into
dec
test
fsubrp
adc
xchg
add
lods
hlt
test
mov
jnp
popa
mov
or
pusha
inc
sub
adc
int3
and
lea
das
pop
loop
sub
and
addr16
jbe
xor
mov
inc
cmp
icebp
lea
js
or
jl
push
mov
mov
jo
pop
ret
mov
jge
jmp
in
sbb
sub
test
pop
insl
fsubs
pop
std
out
pop
repz
mov
mov
lods
dec
loop
mov
mov
adc
lahf
pop
and
mov
out
xor
pop
mov
daa
push
push
xlat
and
mov
jmp
sub
mov
push
xor
cmp
adc
sub
mov
aam
fcoms
mov
aam
shl
test
sbb
jge
push
push
add
in
and
and
and
dec
rcr
mov
arpl
sub
pop
or
jbe
dec
es
dec
cmp
fstpl
bound
xor
movnti
inc
icebp
inc
mov
and
jge
jl
les
int3
outsb
xor
dec
or
leave
or
out
push
jl
xlat
shlb
jge
xor
movsb
lods
xchg
adc
stos
push
decb
out
cmp
fidivl
dec
call
arpl
repnz
adc
adc
loope
lods
pop
pop
lods
mov
jns
jne
mov
mov
adc
lcall
movsl
jle
add
inc
push
mov
push
out
jg
hlt
mov
mov
inc
or
and
in
add
movsl
mov
negb
xlat
call
inc
push
xorl
xchg
sub
lcall
sahf
push
push
movsl
cmpl
jae
push
sbb
pop
out
mov
aaa
push
cltd
xchg
push
es
add
adc
rcll
push
ret
mov
rclb
and
aad
repz
mov
and
orl
add
daa
adc
cli
pop
out
mov
jbe
mov
add
shrl
mov
xor
jns
sub
sbb
jl
xor
das
push
scas
pop
pop
cmp
pop
adc
mov
in
sbb
loop
cmp
out
mov
sub
push
aas
sbb
popa
fs
rcrb
outsb
jb
pop
fcoms
xor
das
repz
fisubs
arpl
or
es
cwtl
dec
lea
jae
ds
sub
fstpt
adc
lea
push
jne
or
xlat
inc
cmp
or
test
cmp
adc
call
jne
loopne
hlt
mov
je
dec
pushf
stc
cli
fnstsw
jns
insb
lods
add
cli
call
lock
lret
add
stc
pop
addr16
add
std
sub
mov
dec
dec
imul
js
sub
mov
popf
imul
arpl
mov
jmp
fcmovne
mov
cmp
fisubs
inc
cwtl
and
mov
test
jmp
push
mov
or
adc
mov
and
inc
ss
cmp
lret
mov
stos
insb
mov
jmp
inc
jne
ret
dec
fdiv
push
xchg
daa
cmp
jmp
sub
lock
jns
pop
mov
xchg
xchg
fmul
mov
or
fucom
push
sbb
sbb
sar
cld
outsl
fmull
mov
pop
jo
mov
pusha
xor
dec
mov
push
mov
push
jno
ss
test
xor
in
inc
mov
mov
call
ds
or
je
pop
adc
push
mov
xor
push
outsl
mov
pop
jnp
adc
ret
dec
jbe
es
pop
lret
out
push
ret
aaa
mov
enter
xor
mov
mov
in
aad
and
dec
daa
xor
xchg
std
sbb
jo
inc
xor
outsl
adc
mov
punpckldq
subl
sti
loop
outsl
addr16
lahf
sti
pushf
lahf
add
fstpl
leave
xor
lahf
jbe
rorl
loopne
ret
mov
jo
cli
push
fucomp
mov
mov
cltd
fimuls
test
scas
movsb
aaa
xor
mov
sub
adc
cwtl
push
mov
sbbl
movsb
mov
pushf
in
test
jmp
inc
mov
mov
fdivrs
pop
in
les
dec
xor
pop
in
out
aad
xchg
js
jno
mov
ret
xchg
movsb
addr16
push
jae
sub
push
cmp
sbb
xchg
mov
fdivrs
inc
xchg
push
sbb
inc
push
lds
add
push
out
mov
xor
mov
mov
sbb
xchg
std
xor
xchg
sbb
mov
test
fildl
pop
xor
sar
lock
mov
jge
sbb
sahf
test
pop
xchg
roll
adc
jmp
pop
dec
addl
in
cmp
decl
dec
lahf
or
ret
cwtl
xor
inc
lcall
sub
insl
and
pop
pusha
and
inc
mov
xor
jne
out
pop
mov
xchg
mov
push
xchg
cltd
adc
popa
sub
sbb
sub
iret
sti
sub
xlat
inc
xor
lahf
push
mov
dec
repnz
xchg
jbe
dec
out
add
add
shrl
fimull
sub
or
xchg
test
sub
jnp
mov
imul
push
cltd
fildl
andb
or
dec
inc
mov
xchg
lods
jb
xchg
loopne
jb
or
mov
jle
dec
movsl
sub
bound
sub
pop
push
daa
repz
inc
outsb
xchg
inc
jmp
imul
cwtl
out
scas
popf
sti
mov
mov
xor
sub
inc
jg
add
cmp
test
push
fld
mov
aaa
pop
or
xchg
sub
push
lret
ret
repnz
sub
add
cmp
aad
inc
icebp
xchg
cs
lcall
in
xchg
cmp
xor
inc
scas
in
repz
aaa
dec
xchg
mov
xchg
inc
outsb
hlt
nop
fsubrl
gs
mov
ret
push
es
pop
lahf
fs
cmpsl
sub
hlt
mov
cmpsl
sbb
mov
push
lods
aaa
inc
add
pop
push
mov
lcall
sbb
mov
inc
or
pusha
std
inc
inc
test
add
scas
or
loop
dec
push
orb
adc
and
mov
rol
stos
jp
pop
test
insb
sahf
and
push
stos
mov
and
icebp
xlat
addr16
adc
test
adc
pop
and
andl
fwait
push
subl
test
jns
rorl
sub
loope
jne
push
aad
or
cmp
or
add
sbb
inc
ret
add
fadds
push
pop
cmovg
pop
mov
pop
fmull
iret
sub
popa
cmp
xchg
out
scas
mov
movsl
dec
movsb
push
push
mov
ficompl
xchg
pop
fidivrs
push
inc
inc
or
stos
xchg
and
lahf
lahf
stc
xlat
pop
xchg
mov
ljmp
dec
jnp
ljmp
xchg
add
aas
or
xor
xchg
jmp
in
xor
cld
mov
stc
inc
adc
rorb
repnz
jmp
loop
or
add
or
cmpsl
shrl
jmp
fldt
or
pop
and
sbb
dec
mov
jbe
adc
ror
fists
movsl
movsb
xchg
popf
aam
mov
inc
shlb
cwtl
push
and
dec
rolb
jb
shrb
mov
cltd
in
sbb
fidivrs
aad
inc
jae
test
outsl
lidtl
jb
aas
push
shll
mov
pop
stos
fbld
sti
nop
or
add
lds
sub
sbb
mov
sbb
add
test
jae
repz
repz
xor
adc
mov
mov
mov
aas
pop
pop
xor
mov
add
cmpsl
and
fs
jns
inc
dec
scas
adc
sub
mov
arpl
mov
xchg
mov
ja
lods
xchg
push
sub
lods
xchg
mov
mov
xchg
add
mov
bound
mov
jne
mov
adc
mov
xchg
jbe
pop
scas
push
and
lahf
jp
jmp
mul
ret
enter
xor
cmc
cmp
dec
pop
and
sub
in
xor
iret
hlt
add
pop
adcb
xchg
mov
rolb
daa
movsl
loope
jbe
xlat
data16
dec
into
rorb
xor
in
xchg
or
popa
cld
ss
xor
loope
pop
or
dec
jae
mov
cmp
ljmp
das
mov
mov
fs
test
mov
or
lds
test
mov
jns
pop
nop
lea
mov
jae
xor
scas
pop
cmp
add
dec
aad
dec
rorb
push
mov
imul
ja
pop
outsl
jp
clc
jo
add
or
xchg
mov
daa
scas
ss
out
and
pop
push
sbb
mov
xor
jmp
push
pop
lea
pop
and
loope
inc
jecxz
mov
push
sarb
push
xchg
xor
xchg
adc
sbb
push
mov
cmpsl
bound
add
and
dec
sbb
mov
lods
sub
in
cmc
call
repz
xchg
inc
mov
test
cmp
je
pushf
addl
pop
ret
jb
xchg
pop
shlb
mov
jge
cwtl
dec
cmp
cli
je
xlat
or
and
lds
movsb
adc
into
iret
jl
inc
xor
jmp
je,pt
xor
xchg
arpl
mov
shl
enter
cmp
cmp
test
cmc
jp
mov
cmp
jne
adc
orb
in
inc
lods
arpl
add
push
cwtl
sbbb
jge
in
adc
inc
sub
push
iret
fists
xchg
daa
clc
inc
loope
push
xor
sub
lret
xchg
movsl
mov
adc
jb
mov
ds
mov
orl
js
mov
cltd
ljmp
jl
push
push
lea
adc
je
shlb
popf
inc
cmpsl
je
lock
xchg
stos
cmp
jnp
mov
xchg
es
daa
repz
add
lea
jns,pn
inc
mov
fidivrl
sbb
inc
sarb
cmpsb
lods
push
aas
dec
iret
aaa
outsl
in
sub
mov
icebp
loopne
mov
push
mov
sub
cmp
pop
push
mov
int3
ret
div
insb
xor
outsl
inc
cwtl
addr16
adc
mov
dec
pop
lods
jb
push
gs
mov
pushf
sub
sub
sub
mov
lods
mov
add
ljmp
pop
mov
icebp
lcall
insb
cs
out
stos
mov
ja
sbb
and
enter
add
sub
push
cli
or
push
mov
popa
or
int
in
and
push
repnz
enter
aaa
push
xchg
xorl
jle
fdiv
das
push
pop
push
fidivl
dec
mov
insb
movsl
cmp
and
mov
daa
inc
sub
jle
sbb
xor
shlb
cmp
xor
or
inc
enter
ds
mov
xchg
das
sbb
jecxz
mov
add
dec
faddl
sbbl
std
sbb
or
add
jb
lods
xor
fcmovu
or
fiaddl
fwait
shll
in
adc
shl
inc
pop
mov
adc
push
add
iret
pop
jnp
ret
mov
sahf
jmp
int
adc
fiadds
mov
push
lock
push
jns
jae
push
add
fs
fimull
jp
pop
in
cmpsb
mov
and
jg
sub
out
cwtl
cmp
mov
jmp
in
cmp
inc
aas
sbb
scas
incb
and
jb
add
roll
jmp
mov
mov
or
push
and
test
movsb
and
dec
dec
outsl
dec
stc
das
dec
nop
add
add
lcall
pop
cmp
or
xor
inc
push
fcomi
pop
repnz
or
popf
enter
testl
push
pop
sbb
inc
repnz
dec
mov
iret
dec
jo
inc
xlat
inc
ss
push
pop
pop
aas
mov
aad
outsl
or
mov
outsb
mov
repnz
aas
pop
push
cmp
push
xor
mov
push
adc
jecxz
xchg
jmp
add
jl
rcr
mov
out
movsl
int
mov
pop
js
add
arpl
out
push
adc
adc
sub
lock
inc
push
cmp
mov
mov
cmc
or
fsin
fimull
mov
and
pop
fiaddl
inc
rcl
sbb
out
lea
enter
dec
enter
insb
mov
dec
sbb
and
nop
sti
je
adc
addr16
test
out
push
stos
jmp
and
cmp
sbb
sbb
sub
bound
pop
sbb
fwait
xor
mov
mov
mov
es
push
inc
out
fs
push
stos
call
scas
in
ja
xchg
jno
ja
movsl
fstl
cmpb
inc
stos
xlat
mov
mov
int3
data16
or
aam
std
outsb
mov
mov
mov
lea
pushf
gs
xchg
movsl
shlb
lret
scas
cmp
mov
mov
push
sub
rclb
add
sbb
pop
bnd
lods
lcall
dec
push
add
mov
loopne
nop
pop
cmpsb
aad
mov
stc
add
inc
xchg
mov
and
sub
push
sub
mov
insl
ret
incb
pop
mov
popa
jno
fwait
movsl
aaa
cli
cmp
ret
dec
jmp
lret
dec
jo
jl
test
inc
out
push
ja
aam
movsb
add
decb
movsb
xchg
xchg
adc
xchg
out
pop
push
mov
mov
xchg
sub
repnz
cmp
and
imul
hlt
jecxz
mov
ja
pushl
xchg
push
add
ds
sbb
mov
popa
pop
clc
pop
ret
add
cmpsl
int
push
pop
jg
aaa
inc
add
fdiv
xchg
mov
xlat
lret
mov
dec
out
sbb
jne
sub
call
push
push
jns
sbb
ja
mov
popf
add
and
push
sbb
cli
jmp
lahf
imul
xchg
sbb
sti
dec
out
mov
mov
dec
je
sbb
jae
mov
iret
jp
fsub
pop
gs
dec
mov
cmp
xor
lods
fsubl
bound
xchg
and
or
divl
xlat
xchg
popa
imul
out
mov
pop
mov
out
jmp
pushf
jmp
bound
bndstx
mov
dec
pop
mov
push
jae
icebp
out
cmpsl
fcom
jnp
in
nop
je
loop
fnstcw
xchg
popa
pushf
mov
fldl
inc
jb
pop
mov
pop
jnp
mov
add
popa
ljmp
cltd
insl
jg
mov
inc
test
adc
xchg
mov
mov
or
push
mov
andb
je
pop
cli
mov
in
and
push
jbe
and
subl
sub
icebp
xchg
fwait
cmp
fwait
dec
add
popf
mov
sbb
push
cwtl
lahf
cltd
outsb
inc
lds
out
xchg
mov
int3
mov
mov
int3
imul
mov
cltd
pusha
and
mov
lcall
shrl
in
push
mov
int
cmp
cmc
lea
mov
mov
add
jle
mov
ds
js
or
out
xchg
mov
aas
cmpsb
adc
fmuls
hlt
rcr
mov
in
and
clc
pop
or
lock
imul
pop
adc
pop
clc
je
pop
xlat
sbb
push
bound
push
push
mov
imul
xor
sub
ret
lahf
stc
mov
and
out
push
stc
repz
sub
cli
imul
fimuls
mov
stos
dec
jno
or
lock
xchg
bnd
cs
popa
cmp
sbb
add
mov
push
mov
or
dec
adc
fmulp
addr16
movsl
cmpsb
cmp
movsb
push
jp
push
add
jl
mov
lcall
pop
jmp
fidivl
jns
push
fmuls
stos
mov
movsb
ja
andl
jne
fistps
inc
repz
xchg
dec
ljmp
lds
es
push
xor
rorb
add
jbe
inc
std
jno
push
jmp
jle
sahf
popa
stos
aam
or
ja
sahf
aaa
xchg
outsb
push
mov
jmp
xchg
jo
ds
nop
push
cwtl
pop
out
stc
push
aas
mov
hlt
insl
test
ret
mov
lret
push
shll
jmp
pop
jp
loope
adc
lret
ds
inc
dec
dec
je
jo
daa
cmp
adc
outsl
xor
mov
add
jno
adc
fldl
dec
mov
jecxz
or
push
pop
xor
repz
pop
outsl
divb
rorb
cmp
sub
fsubrl
push
pop
mov
mov
rcll
int
xor
repz
lcall
or
mov
jnp
pop
sbb
into
out
shll
fdivs
sub
dec
loopne
rcrl
mov
sbb
in
mov
mov
pop
push
sti
pop
mov
jns
mov
stc
sbb
mov
js
mov
cwtl
ja
shrl
or
pop
out
cmpsb
icebp
repnz
or
adc
and
or
clc
cmc
pop
push
pop
dec
pusha
xor
clc
cmpsb
lcall
call
mov
inc
mov
js
xor
enter
sti
pusha
stos
ret
add
cltd
mov
mov
push
or
push
jecxz
inc
mov
jns
rcl
out
cmp
imul
popf
push
dec
jge
stos
fadd
lds
pop
xor
imul
punpcklwd
sbb
mov
mov
ss
xor
or
and
movsl
push
mov
pop
popa
shll
push
and
xchg
addr16
mov
test
sbbl
out
cmp
mov
mov
jg
popf
jge
pushf
jno
sub
and
movsb
jnp
repnz
xchg
sbb
push
or
add
jno
jae
and
cmpsl
stc
dec
and
ja
add
adc
sbb
fdivrl
dec
and
or
enter
clc
add
or
repnz
push
inc
fwait
xchg
addr16
sub
cs
sbb
cmp
int
add
xlat
ret
or
jle
ficoml
jnp
ret
in
cs
stos
pop
sbb
es
push
sbb
out
pop
scas
mov
dec
sub
xor
scas
popa
jno
mov
xchg
mov
loop
sahf
in
cmp
ljmp
aam
pop
mov
pop
pop
add
mov
ret
xor
clc
sbb
sti
and
cs
std
arpl
notl
outsb
jns
stos
fcompl
fists
mov
adc
xor
mov
sti
ret
mov
adc
rcrb
sub
movsb
fs
mov
jmp
jp
or
add
hlt
es
repz
or
push
call
inc
notb
mov
test
or
push
ret
xchg
call
cld
xor
outsl
lret
scas
loop
pop
cld
xchg
sbb
fildl
or
jne
dec
and
xchg
push
add
mov
sbb
pop
stos
push
xor
ret
sbb
mov
add
jns
inc
insl
movsl
in
pop
out
jg
mov
flds
jle
cmc
sar
cld
or
pop
dec
sub
mov
icebp
int
mov
mov
imul
inc
lods
outsl
in
loop
dec
ds
xor
aas
or
jnp
outsb
mov
ret
sbb
sub
scas
or
into
mov
mov
lods
and
pop
cs
ficompl
insb
sbb
sub
xor
jne
push
sbb
sbb
ret
call
xor
and
dec
js
xchg
in
jge
dec
dec
push
add
inc
repnz
shrb
test
mov
ret
aad
adc
cmc
cmc
or
clc
ds
scas
adc
int3
shr
or
mov
fwait
stos
adc
outsb
inc
pop
pop
lret
arpl
es
enter
hlt
and
jmp
int3
lods
into
leave
movsl
push
mov
mov
idivb
inc
sbb
cmp
push
push
pop
pop
jmp
xchg
push
scas
fsubrs
xlat
inc
ds
ret
sub
lods
and
int
jne
lahf
jnp
xchg
out
imul
lds
aad
xchg
andb
testl
adc
push
inc
xor
ret
mov
sub
inc
xor
nop
push
xor
push
in
lods
jne
ljmp
sub
push
hlt
cld
jmp
jo
fs
lds
pop
outsb
mov
dec
popa
sbb
inc
push
out
lods
daa
jl
sbb
or
sub
xchg
rorb
imul
lahf
or
pop
mov
in
in
jnp
and
fiadds
sarb
xor
cltd
rol
inc
xchg
sbb
inc
jge
dec
xor
das
scas
and
popa
addl
iret
fdivl
ljmp
in
fmuls
ss
inc
jle
cmpsb
fsubs
fsubr
mov
nop
mov
push
mov
scas
adc
mov
mov
out
aas
add
xlat
pop
mov
jle
in
int3
ja
or
jmp
cmp
or
aas
ret
push
mov
fsubp
ja
mov
cwtl
movsb
out
jns
mov
dec
cmp
mov
xchg
std
add
xchg
mov
leave
mov
mov
fistpll
pushf
pop
mov
cmp
cmpsb
icebp
sub
mov
iret
je
xor
inc
sbb
lcall
jb
xchg
add
pushf
out
mov
std
pop
push
in
mov
or
pop
jge
inc
fucomip
stos
add
xor
jb
cmpsb
scas
mov
leave
mov
roll
mov
push
mov
repz
test
mov
xchg
dec
inc
lods
ds
mov
hlt
bound
sbb
xchg
and
jecxz
cltd
sub
rolb
fcmovnu
les
test
je
push
test
cmp
cmpsb
cli
sbb
loop
pop
into
mov
std
call
lea
mov
xchg
sub
je
xchg
loop
adc
mov
pop
fiadds
mov
loopne
arpl
enter
cli
or
fisttps
inc
data16
or
xchg
repz
es
pop
jl
adc
dec
xlat
dec
jl
jle
dec
insl
sub
mov
fldl
jmp
add
mov
shlb
out
fsubl
in
movsb
mov
pop
aaa
lds
js
cmpb
add
repz
sub
outsl
sahf
es
shrb
mov
push
js
cld
pop
int3
in
mov
sub
sbb
sbb
and
mov
pop
dec
mov
adc
in
jg
popf
cmpsl
jg
pop
mov
and
xchg
loop
mov
das
jg
imul
dec
pop
mov
push
mov
addl
addr16
sub
lock
cwtl
and
outsb
popa
adc
pop
xchg
repnz
fs
out
sarb
loopne
xor
cwtl
mov
push
dec
rorl
fiaddl
or
stos
add
fs
shl
jns
push
add
dec
sbb
leave
mov
dec
inc
jb
adc
push
movsl
pop
fmull
mov
mov
jl
adc
sbb
movsl
in
lret
lods
popf
push
adc
insb
cltd
out
sub
lods
mov
imul
mov
test
mov
outsl
mov
mov
mov
fwait
pop
and
mov
icebp
lcall
xchg
or
cmp
xchg
cmp
lods
cmp
cmp
andl
jbe
push
roll
in
fdivrs
or
pusha
cmpl
mov
sbb
hlt
mov
aad
and
mov
dec
pushf
mov
ret
popf
movsl
sbb
jge
add
inc
imul
cmp
add
dec
add
cmpsl
xor
nop
add
sbb
in
test
mov
shlb
iret
dec
ja
sub
lret
xchg
mov
cmpsb
or
adc
xchg
push
or
pusha
cli
data16
xor
rcrl
inc
iret
cmp
sbb
sbb
loop
nop
fsts
xor
in
lret
rcrb
dec
mov
push
dec
cmp
inc
inc
jae
mov
clc
mov
call
adc
dec
cli
xlat
pop
or
sbb
add
xchg
leave
push
and
stos
or
or
pop
jl
jns
xor
push
mov
jl
sbb
mov
pop
data16
dec
cmp
jg
addr16
test
mov
ret
aas
notb
and
or
test
dec
xor
out
pop
push
add
fwait
xor
push
shrl
jbe
mov
scas
insl
or
xor
enter
adc
push
std
in
cmp
mov
mov
movsl
xchg
adc
jg
mov
sub
dec
dec
inc
xchg
mov
cs
dec
sbb
gs
popf
aaa
mov
inc
push
lret
pop
xchg
mov
lods
imul
pushl
in
mov
ja
jmp
and
sbb
mov
jae
add
pop
jbe
mov
movsl
lods
mov
fstl
or
fists
push
sbb
mov
mov
pop
cmc
and
pop
add
cwtl
jae
mov
pop
ljmp
xor
lcall
sub
mov
data16
fstl
rolb
and
outsl
jnp
push
add
push
lock
sbb
test
xor
adc
add
xchg
mov
add
dec
hlt
pop
xor
sti
jmp
hlt
xchg
push
jne
mov
adc
das
es
jnp
out
imul
cmp
mov
filds
jno
rclb
out
int
cld
repz
jl
push
and
jg
aam
inc
dec
jp
je
test
stos
jmp
xchg
mov
imul
fwait
rcll
mov
dec
pop
mov
jne
in
popa
mov
cmp
mov
xchg
pop
mov
jbe
pop
insb
mov
mov
mov
mov
mov
lret
test
sbb
sub
insb
mov
sbbl
adc
in
pop
movsb
mov
enter
int3
arpl
lcall
xchg
jbe
push
stc
push
and
orb
fmuls
mov
lret
hlt
clc
in
push
sarb
outsb
fiadds
add
fcoml
icebp
aam
jo
rcrl
sub
mov
push
mov
fadd
popf
sub
pop
out
push
lock
daa
mov
and
iret
out
cld
jno
clc
dec
jbe
and
xchg
decl
mov
in
sahf
sahf
dec
mov
mov
dec
inc
jns
xchg
push
es
mov
fistpll
dec
pushf
mov
push
mov
xchg
cmp
mov
out
test
jno
push
push
jecxz
divb
ja
aam
xor
mov
mov
mov
popf
aaa
xor
insb
pop
dec
add
push
jne
or
jbe
adc
mov
mov
sbb
add
out
or
les
fistpl
push
cmpsb
xor
fucomi
aaa
mov
outsl
mov
jae
cmc
int3
into
and
mov
rcll
shll
lahf
outsb
cmp
cmpsl
inc
test
and
outsb
cltd
out
cmp
popf
shrb
cmpsb
push
cmp
imul
sti
xchg
stos
adc
mov
gs
sbb
push
je
sbb
push
subb
movsl
xor
add
mov
loope
fwait
js
or
fists
mov
in
mov
jbe
lds
ret
dec
sbb
mov
adc
inc
sub
pop
cmpsl
rcrb
adc
repz
mov
sbb
gs
iret
psadbw
inc
mov
or
push
jecxz
imul
xchg
and
lea
sarb
jl
mov
inc
hlt
inc
std
push
jb
pop
pop
repz
je
sbb
loop
cs
sbb
mov
std
sahf
fisttpll
push
and
pop
and
out
push
sbb
push
data16
repnz
fnstcw
push
pusha
imul
cld
jp
orb
out
inc
les
ret
mov
in
repz
or
aam
enter
pop
inc
cltd
and
test
or
cwtl
fldcw
or
rorb
fwait
pop
mov
jo
push
pop
inc
or
lcall
pop
rcr
and
repnz
popa
cmp
push
out
ja
pop
and
pop
xchg
lods
add
pop
cmp
jmp
fstps
insl
pop
pusha
dec
lds
enter
adc
aad
push
push
mov
add
push
cwtl
lods
jae
dec
test
mov
jle
sbb
push
adc
and
fs
rcr
push
mov
or
scas
aas
mov
inc
ljmp
ficomps
test
jp
cmpsl
dec
sbb
fisubrs
adc
movsb
sbb
jae
jg
inc
adc
push
adc
mov
iret
xchg
cli
je
and
orb
cltd
mov
notb
in
mov
dec
shr
cwtl
shll
push
push
fwait
dec
pop
and
add
mov
push
rcll
mov
fisubs
inc
repnz
fst
mov
and
movsl
xlat
add
into
hlt
ftst
jno
iret
ret
shlb
cwtl
cmp
in
or
rcll
rcrb
enter
sub
icebp
xor
jbe
pop
fildl
pop
mov
outsl
clc
fwait
outsb
aam
cmp
adc
pop
stos
addl
decl
sbb
jp
pop
push
mov
xchg
dec
pop
sub
in
jnp
xchg
popa
in
fmull
push
xor
sti
lret
dec
orl
jl
test
ret
ficoml
push
test
mov
mov
test
das
mov
repz
inc
adc
add
add
mov
xchg
mov
sub
daa
sbb
xor
jnp
mov
cmp
xchg
fstps
dec
adc
fistl
gs
xchg
mov
mov
add
call
aas
cmpsl
adc
aaa
test
push
loope
cmp
adc
popf
push
pusha
add
bound
bound
js
dec
sub
mov
pop
jecxz
xlat
dec
clc
sub
scas
adcl
pop
fnstsw
mov
les
cmc
xlat
pop
jno
imul
push
pop
nop
in
neg
pop
daa
mov
adc
jne
mov
xchg
frstor
add
mov
fsubl
jp
cmpsb
or
dec
mov
adc
outsl
push
nop
push
push
add
jbe
or
dec
cld
cli
jp
mov
data16
mov
out
mov
ds
push
pop
mov
rorl
insb
ss
dec
xor
push
into
pop
daa
adc
push
stos
cs
sub
divb
fmul
cmp
jmp
scas
mov
pop
fildll
sbb
dec
cwtl
adc
xor
dec
jns
hlt
xchg
arpl
adc
movsb
push
insl
sbb
idivb
push
pop
jmp
push
fcomps
sub
test
lds
or
cwtl
pop
lcall
dec
jns
pop
pop
or
mov
mov
pop
stc
cmp
mov
push
jle
das
push
icebp
or
xor
icebp
dec
mov
out
push
jecxz
iret
sub
push
cmpb
inc
lods
dec
imul
enter
push
jmp
push
push
or
insl
fprem
fldt
dec
jne
ret
data16
push
ljmp
or
imul
aad
rcrl
mov
inc
scas
cmp
add
mov
repnz
mov
inc
out
jmp
dec
int
jne
inc
ss
jo
out
mov
ficomps
std
imul
je
lret
mov
jno,pt
xchg
mov
ljmp
mov
or
sbb
pop
call
mov
rol
fisubrs
xor
popf
repnz
dec
jmp
adc
dec
xlat
xor
mov
or
int3
movsb
dec
add
xor
pusha
add
pop
fs
mov
and
xchg
and
insb
negl
fnsave
sbb
aam
mov
es
sti
dec
push
sub
lret
scas
add
push
sub
push
push
add
sbb
ret
jb
pop
jns
fwait
xchg
mov
hlt
cmp
cmpsb
xchg
aad
loope
jmp
pushf
insl
pop
push
das
push
jo
push
mov
mov
clc
insl
fwait
out
xor
jmp
dec
pop
lock
inc
fstpl
adc
mov
in
inc
xorb
sub
shrb
lods
insl
hlt
adc
loop
dec
mov
and
push
cltd
out
ret
sub
jns
jecxz
andl
lock
xchg
add
test
inc
dec
fisubs
es
sub
or
xor
lret
bound
mov
mov
mov
mov
xor
sub
icebp
adc
or
mov
je
or
add
xor
sbb
xchg
xchg
fld1
xor
repnz
mov
add
lahf
sub
xchg
xchg
aad
mov
fnsave
out
push
daa
negl
sarb
mov
shrl
pop
push
fwait
cmpsl
gs
repz
repz
add
sbb
iret
outsl
imul
jns
imul
xor
cmpsl
push
les
push
enter
or
sti
inc
or
popf
imul
mov
mov
xor
adc
out
ds
jl
push
inc
dec
mov
gs
pop
lods
les
pop
test
or
nop
test
add
test
and
insb
xchg
subl
fdivl
push
or
ja
imul
sahf
insb
inc
jbe
inc
sub
popa
cmp
inc
dec
cmp
lods
test
mov
xchg
jecxz
fbstp
dec
arpl
sbb
seta
add
push
pop
mov
lahf
pushf
pushf
ficoml
pop
inc
xor
xchg
push
adc
int
scas
inc
mov
xor
cmp
movsl
enter
repnz
xchg
adc
pop
pop
add
xchg
fwait
cmp
out
dec
daa
sub
fs
sbb
xchg
sub
les
insl
push
cmp
lods
imul
lcall
in
aaa
test
sub
out
mov
enter
rcrb
mov
push
fnsave
or
enter
cmp
add
aas
ljmp
sbb
pop
mov
fadd
ficoml
mov
adc
mov
xchg
arpl
cmp
mov
xchg
fstl
cmp
sbb
adc
test
ficomps
shrb
dec
and
out
repnz
inc
and
mov
pop
rorl
xlat
repz
pop
adc
sti
mov
fisttpl
pop
in
jnp
loopne
fwait
add
scas
inc
dec
mov
loop
jecxz
add
xchg
mov
xacquire
jbe
pop
sbb
js
sbbb
or
mov
scas
lahf
ret
scas
cmpsl
out
pop
out
push
xchg
loop
mov
inc
bound
push
aad
add
test
pop
mov
or
add
mov
mov
jnp
pushf
repnz
mov
cmp
jne
push
loope
cmp
ss
mov
andl
xor
into
insl
or
mov
sbb
movsb
cmp
push
sub
cs
mov
mov
insb
mov
pusha
imul
sub
ret
or
mov
add
adcl
clc
pop
push
test
mov
out
idivb
loope
xchg
ret
jl
xor
and
sbb
sbb
es
xor
or
call
dec
inc
aam
les
loopne
in
pop
lods
add
pop
int3
std
stos
xor
movsl
xchg
out
inc
mov
pop
jbe
mov
insb
add
arpl
or
shrl
jne
mov
dec
push
insb
inc
pop
arpl
xchg
and
mov
xchg
cmpsl
xor
mov
out
push
int
lods
ds
or
dec
mov
mov
and
scas
mov
cli
sub
jecxz
push
push
xchg
xor
mov
pop
or
xor
cmpsb
out
sti
aas
jno
jl
mov
or
push
mov
push
mov
jmp
icebp
pusha
movsl
mov
jbe
ds
adc
lods
mov
imull
out
push
test
xor
mov
pushf
dec
xor
dec
cld
cmc
mov
jge
arpl
addl
idiv
inc
push
xor
clc
mov
xchg
mov
jl
imul
sub
fldz
popa
push
insb
mov
dec
call
mov
sti
adc
enter
add
lret
jo
push
jns
out
cmpsl
in
sahf
jecxz
inc
mov
push
test
mov
jmp
andb
pushf
ja
push
popa
pop
xchg
and
scas
negl
adc
scas
test
inc
movsb
push
sub
fisttps
aad
pop
vsubss
pop
leave
jne
lods
lea
pop
or
std
mov
cmc
sub
jae
xchg
fwait
gs
mov
add
ja
imul
arpl
ret
xchg
shrl
xchg
js
test
sub
push
ljmp
inc
push
push
ret
lods
cltd
dec
push
push
stos
hlt
stos
mov
lods
leave
les
push
jg
dec
cmp
movsl
mov
xchg
das
mov
jg
pop
mov
aas
pop
xchg
cmpsb
inc
mov
out
jl
dec
xchg
mov
inc
insl
sbb
dec
cmpsb
inc
adc
pop
cltd
push
idivb
call
bound
xchg
inc
pop
and
mov
cmc
dec
jbe
fwait
insb
adc
lods
jmp
xor
cmp
fsubrl
jb
mov
lock
out
mov
fwait
jmp
enter
and
fisttpl
aaa
ds
sbb
jge
pop
pushf
cli
or
pop
testb
aad
dec
xchg
ficoms
fcoms
adc
lea
push
rcr
mov
cmp
cmp
loopne
loop
fisubs
adc
adc
adc
loope
push
jae
xor
pushf
jns
cmp
add
pop
incl
outsb
push
pop
xchg
out
push
dec
push
dec
mov
int3
pushf
xchg
push
push
jne
sbb
jl
ret
mov
into
movsb
fidivrl
dec
dec
add
push
roll
mov
push
mov
sbbl
cmpsl
lods
jg
adc
loope
and
sub
jo
lods
xchg
nop
mov
es
ljmp
cmp
in
add
mov
push
faddp
or
and
xchg
xor
fucomp
imul
imul
inc
mov
cwtl
into
xor
add
cwtl
jnp
xlat
sub
jno
push
pop
jo,pt
sub
cltd
scas
test
rcl
xchg
rcl
xor
stos
jg
xchg
repnz
sbb
insl
sti
mov
xchg
ja
adc
or
mov
adc
or
sbb
rclb
pop
sbbl
test
sahf
imul
or
mov
or
in
ret
jl
dec
cmpb
xor
and
inc
mov
xchg
cltd
pusha
pushl
sub
mov
mov
xchg
fs
sub
cmc
pop
pop
push
add
in
jno
dec
jbe
xlat
cmp
pushf
inc
xor
xchg
sub
pop
xchg
sub
or
shr
push
sahf
xor
pop
inc
and
lcall
int3
and
jp
insl
or
ljmp
inc
scas
or
jp
cmp
lcall
xor
outsb
popf
les
mov
xor
or
dec
add
push
iret
mov
addr16
sbb
sbb
imul
bound
lahf
ja
shl
xchg
lods
or
jae
jne
repz
pop
add
jno
inc
imul
mov
mov
push
scas
jb
popf
xchg
ss
int
sub
rcll
mov
push
sub
fsubp
adc
lea
adc
add
pop
std
inc
addb
lods
or
mov
cmpsl
hlt
dec
push
sahf
push
mov
lcall
arpl
add
ja
cmp
pop
lods
out
jns
cmp
adc
xor
dec
sahf
push
push
or
pop
lods
cmp
cltd
filds
pushf
mov
ret
sbb
mov
mov
push
jge
jnp
andb
stos
stos
jno
push
lea
aas
xor
cmpsl
movsl
mov
jp
clc
inc
adc
inc
stc
lds
or
jno
mov
in
dec
ds
iret
nop
mov
bound
push
pushl
or
mov
ret
cmpsl
notb
cmovg
fwait
push
fs
mov
cmp
aaa
aas
inc
into
adc
adc
mov
push
jg
lods
lret
lsl
push
or
cmp
inc
inc
inc
mov
cmp
repz
inc
mov
enter
sbb
pop
sbb
fsubs
int
fwait
xchg
aad
das
dec
shlb
inc
fisttpll
hlt
sti
lcall
xlat
xchg
pusha
jle
je
lret
test
sbb
js
cltd
jo
rclb
mov
cli
and
cli
xor
xor
jbe
test
je
cmp
decl
pop
xor
dec
or
leave
rcl
test
pop
fsubrs
hlt
pushf
aas
rcl
jns
cld
add
ret
mov
ret
outsl
ret
pop
mov
pushf
mov
iret
or
and
xchg
mov
jge
negl
jno
inc
sub
int
imul
cld
repz
in
in
daa
mov
add
repnz
inc
aaa
lods
xchg
sbb
not
movsl
popf
mov
in
scas
pop
decl
fidivs
jle
in
cmp
add
pop
imulb
arpl
pop
js
mov
cmpsl
cmpsb
ds
adc
add
xorb
scas
push
sahf
int
movsb
cld
mov
or
push
xchg
inc
pop
rolb
iret
test
push
dec
jl
dec
xchg
das
xchg
pop
fwait
cmp
cmp
mov
xchg
inc
mov
mov
int3
mov
shrb
movsl
sub
in
adc
test
sub
test
fldenv
cmpsb
ljmp
xor
fmul
mov
aam
and
add
lahf
and
popf
adc
jle
mov
or
mov
shll
dec
and
xchg
and
push
out
add
mov
pop
xor
addl
mov
jmp
repnz
fdivr
ljmp
fwait
iret
add
sbb
or
cwtl
and
jg
jp
rcrl
shrl
addr16
test
scas
mov
sub
mov
push
scas
out
add
nop
outsb
add
mov
lods
mov
fst
mov
ds
movsb
aas
or
xchg
mov
adc
or
imul
inc
inc
jo
cs
out
jae
sbb
fisubrl
fwait
push
jns
out
and
and
ret
subb
inc
aaa
ss
sti
movsl
push
mov
outsb
push
adc
xor
add
movsl
jno
lods
int
dec
cld
pop
jno
hlt
sbbb
outsb
lret
xlat
add
dec
dec
and
stos
sbb
xchg
ret
repnz
inc
push
sbb
cmp
push
push
inc
loope
enter
out
push
cmp
sahf
jecxz
cmp
push
jo
mov
inc
mov
ficoms
sbb
mov
mov
or
imul
push
inc
mov
pop
lock
aam
rorb
xchg
out
xchg
and
dec
stc
mov
scas
stos
fistps
inc
sbb
outsb
hlt
and
or
mov
adc
mov
in
stos
mov
arpl
into
stos
push
iret
push
stos
push
and
sbb
mov
pop
repz
push
xchg
jle
stos
cld
es
icebp
or
dec
lods
jb
pushf
and
lahf
stos
sbb
xchg
xor
xor
mov
enter
arpl
pop
push
in
cwtl
push
jne
fldenv
push
push
repz
fisubrl
cs
sbb
inc
jle
loopne
pop
insb
add
jge
xchg
cmp
stos
lods
dec
xchg
jo
cmp
adc
xor
shlw
fst
daa
or
je
lds
test
test
cld
or
lret
add
inc
mov
and
out
out
sub
xor
xor
xchg
into
dec
aas
push
mov
aaa
add
jl
out
add
xor
cmpsl
sbb
shrl
push
push
loopne
mov
mov
pop
push
mov
adcl
lock
mov
jmp
ja
fadds
xchg
sub
jge
push
pop
xchg
mov
pop
clc
jno
test
jmp
scas
pop
push
pop
popf
xorb
popa
cwtl
movsb
notb
jnp
cld
cmp
push
and
sbb
shr
dec
lret
mov
xor
scas
int3
dec
mov
bound
fmull
call
mov
ja
jb
arpl
test
stos
xchg
popf
jo
cmp
push
fcoml
testb
sbb
orb
jb
mov
xchg
adc
decl
pop
sub
and
lods
lcall
cmpl
push
pop
jmp
xchg
xorb
icebp
cltd
sub
jae
sub
mov
aas
leave
mov
mov
loop
push
aas
mov
gs
inc
sub
je
movsl
mov
push
stos
mov
rcrb
xchg
add
xchg
test
test
js
inc
sub
pop
das
mov
cmp
xorl
mov
pop
je
cmpsl
cwtl
jne
jnp
inc
loope
sbb
pop
pop
push
in
jo
sub
fisttpl
cltd
xchg
dec
data16
inc
push
sbb
lahf
js
mov
add
lods
mov
rcl
sub
fdiv
dec
sub
mov
cmpl
mov
mov
mov
and
bound
es
mov
sti
inc
cld
jp
movsb
pushf
xchg
repnz
and
pinsrw
sarb
scas
inc
cs
lock
scas
movsb
scas
fnstcw
and
aam
sbbb
jbe
add
dec
pop
sbb
xchg
mov
sbb
add
inc
movsl
cs
std
fisttps
inc
loope
sub
sub
mov
pop
rcrl
aad
push
mov
pop
and
xchg
cli
xchg
jbe
push
sbb
dec
cmp
mov
orb
in
test
cmp
lock
cmp
sbb
sbb
cmpsb
mov
movd
dec
les
ja
aas
mov
pop
pop
push
cld
xchg
sahf
gs
inc
mov
iret
rcll
lret
subl
xor
cmp
xchg
xchg
stc
icebp
xor
mov
and
add
or
daa
std
mov
jnp
sub
mov
dec
pop
jo
add
jp
sbb
fdivrl
rcrb
fwait
xor
and
addr16
sti
fildl
xchg
sub
dec
daa
mov
pusha
dec
ret
lret
push
outsb
push
xchg
add
xor
es
fwait
aam
pop
cmp
mov
fdivs
jb
jbe
inc
xlat
clc
pop
jmp
andl
stc
lcall
mov
data16
mov
lods
int
gs
cltd
fldt
jmp
mov
dec
or
test
xchg
in
or
push
mov
scas
cmp
inc
sub
jg
out
or
push
mov
or
fnstenv
inc
or
ja
push
inc
ret
inc
jge
push
mov
incb
frstor
dec
xor
push
sbb
adc
jmp
movsb
pop
sub
push
xchg
aas
cltd
std
xor
fmuls
imul
fiadds
rclb
fsubs
push
fwait
inc
lcall
add
pop
jb
jne
imulb
xchg
in
das
fnstcw
test
and
lret
jo
or
mov
sbb
aas
mov
ficoml
mov
dec
jp
xchg
add
out
pop
movsl
mov
or
out
jl
shlb
in
mov
arpl
fnstcw
pop
jmp
mov
scas
mov
out
mov
xor
adcl
sbb
pushf
enter
cs
fistpll
jnp
jecxz
and
loopne
add
ret
inc
and
push
testb
push
mov
fs
sub
popf
mov
jl
sbb
jne
xor
xlat
imul
mov
xor
cmpsl
push
les
pop
push
sub
scas
adc
enter
lret
and
mov
and
pop
dec
lods
fsubp
cmp
xchg
dec
xor
sbb
xchg
ds
sbb
dec
mov
xor
mov
mov
jbe
cltd
xor
dec
adc
adc
jle
lcall
call
pop
imul
jle
arpl
mov
jns
add
mov
stc
push
xor
fstl
mov
mov
out
mov
sub
inc
jecxz
ljmp
mov
dec
mov
jbe
xlat
lea
cmpsl
cmp
test
mov
loopne
xchg
leave
and
xor
aad
fstps
loopne
mov
sbb
jnp
aaa
adc
xchg
addb
jle
aam
adc
std
mov
dec
jle
inc
gs
stos
jb
mov
cltd
sub
push
sub
aam
ja
mov
mov
or
rolb
adc
or
pop
and
add
jns
test
mov
sbb
pop
mov
mov
push
hlt
xchg
sbb
inc
scas
pop
and
lds
xlat
and
adc
xor
dec
add
out
std
fwait
rorl
inc
xchg
in
ret
xchg
std
jl
lahf
insl
test
xor
and
sti
in
call
inc
out
leave
pop
push
xorb
pop
lods
and
jne
adc
xor
fs
pop
mov
add
dec
jns
jo
ficomps
std
pop
out
les
xchg
iret
push
dec
dec
ja
push
ja
cmc
fwait
mov
insl
cmp
adc
scas
xor
loopne
hlt
xor
inc
xor
jmp
dec
cmp
mov
loopne
or
mov
sar
xchg
mov
sbb
les
mov
imul
adc
or
cmc
jnp
mov
imul
push
sbb
cmp
xchg
sbb
repz
xchg
and
or
jg
mov
insb
ret
or
adc
shlb
lret
in
js
das
xor
xchg
aas
and
addl
or
addb
sbb
pushf
cmp
pop
hlt
shrl
jmp
jno
std
sbb
xchg
loopne
test
test
inc
cld
cli
lret
das
cmc
mov
jbe
dec
movsl
pop
fisubl
pushf
jp
inc
daa
cmp
dec
leave
jno
in
test
fdivrs
ret
icebp
adc
leave
ret
cmpsl
mov
mov
add
pop
test
fidivl
js
in
and
xor
int
stc
push
mov
sbb
mul
je
push
stos
stc
lock
pop
in
fwait
dec
dec
ds
mov
push
imul
xchg
pusha
ret
in
xlat
aad
push
mov
in
imul
test
jno
inc
jmp
in
dec
cmpsb
ss
dec
jns
push
inc
jg
jno
insb
shrb
push
loope
lock
aam
outsl
sbb
jmp
mov
sbb
and
aas
cwtl
xchg
fs
pop
aad
add
data16
cmp
mov
sbb
insl
scas
add
xor
xor
xor
fsubrl
lahf
mov
push
ljmp
notb
jno
call
dec
stos
daa
jne
ljmp
sbb
fistpll
outsl
sbbb
in
jg
jg
xor
mov
push
dec
loop
and
loope
clc
fcomp
pop
adc
inc
popf
inc
sbb
adc
mov
lret
dec
mov
int3
out
andb
mov
pop
dec
repz
int3
pop
scas
scas
add
add
imulb
xor
pop
fmul
dec
testb
mov
dec
hlt
mov
jo
lock
inc
mov
rcl
int3
and
rclb
insl
loope
in
xchg
incl
shrl
push
dec
out
sub
aaa
xchg
addr16
xchg
cmp
xchg
out
or
popa
cmc
pop
imull
outsb
divl
xchg
jmp
out
xor
xor
sbb
js
mov
test
jecxz
adc
mov
cmp
cmp
and
fisubl
sbb
fistpl
into
jnp
xchg
mov
scas
cmc
lock
cmp
mov
xor
sub
std
clc
pop
mov
sbb
or
ljmp
inc
cwtl
int3
push
add
dec
cmpsl
push
push
cmp
int3
jmp
xor
xchg
ja
fiaddl
dec
or
push
lcall
add
out
xor
loope
sub
lcall
jg
lret
jne
loop
mov
pushf
or
pop
mov
mov
add
sub
sahf
rcr
or
shlb
adc
or
stc
arpl
imul
inc
shll
mov
ret
adc
das
repnz
fistpll
sub
push
xchg
sub
mov
or
and
int3
pop
add
mov
adc
xor
ds
or
es
lcall
pop
mov
adc
mov
add
mov
fdivs
imul
pop
add
insb
xlat
cmpsl
mov
imul
lahf
xor
in
sti
out
inc
lcall
xor
fcompl
adc
mov
sub
ja
imul
sti
rorb
aad
adc
sub
bound
mov
outsl
jmp
or
xchg
push
fidivrs
push
cmc
das
mov
inc
daa
cmp
pop
decb
sub
mov
inc
movswl
mov
in
cmp
or
inc
xlat
pusha
es
jno
mov
mov
fnstcw
pop
adc
fmull
jne
cmp
adc
ficoms
and
cmp
insl
dec
sti
push
shl
data16
int
fwait
jmp
outsb
jp
mov
pop
and
ret
clc
jbe
mov
cmp
pop
out
and
jno
inc
cmp
cmp
xchg
gs
call
scas
lret
mov
imulb
push
or
mov
daa
xchg
xchg
cmp
cmp
jge
sbb
mov
mov
leave
sarb
or
xchg
test
cmp
jmp
in
or
std
mov
stos
dec
pop
sbb
pop
inc
add
in
pop
pop
stos
mov
popa
fmull
xor
adc
push
outsl
jne
push
mov
pusha
add
decb
jb
sti
xchg
pop
lret
and
push
or
pop
in
push
shll
add
push
xchg
adc
inc
orl
xor
outsb
imul
fs
loopne
fs
lds
xorl
icebp
push
push
dec
loopne
je
out
inc
push
sbb
gs
inc
add
xor
rolb
xchg
jmp
mov
or
adc
adc
cld
pop
lret
adc
data16
ret
inc
inc
mov
enter
xchg
mov
add
mov
mov
push
sbb
ss
out
or
or
scas
cli
stos
xchg
jl
dec
cli
adc
scas
adc
test
dec
test
sahf
into
in
fdivs
scas
jg
mov
es
cmc
push
jnp
lock
xchg
mov
mov
pop
sub
das
inc
jne
xor
mov
mov
fwait
jno
bound
mov
rorb
inc
add
test
push
loop
pop
ret
imul
cmpsl
test
lret
jge
ljmp
shlb
int
scas
jnp
mov
adc
jl
and
add
mov
and
sub
popf
push
jnp
adc
sub
push
das
jp
lods
jecxz
aad
out
mov
adc
mov
repnz
jmp
adc
cmp
call
test
and
sub
test
vpsubw
xchg
stc
mov
or
test
push
mov
les
jl
jnp
dec
call
shr
add
fisttpll
fbstp
dec
in
adcl
or
fcomps
loopne
lods
push
orl
popa
lret
xor
jns
rolb
jae
jmp
and
cwtl
lods
push
inc
cmp
lods
xchg
fninit
xchg
xor
push
push
jl
cwtl
and
dec
cli
or
outsl
or
aam
push
ljmp
pop
stc
out
icebp
ret
pop
or
or
xor
divb
sbb
xchg
mov
movl
mov
iret
aaa
mov
xchg
aam
xchg
and
sbb
jbe
dec
cmp
xlat
sbb
out
sub
and
mov
loope
in
and
mov
sub
sbb
add
rcrl
pop
sbb
pop
cmc
insl
push
aas
jge
cld
push
push
add
fldcw
movsl
jg
in
lds
arpl
in
sbb
push
mov
mov
and
add
repz
push
test
out
repz
fistps
adc
mov
pushf
cmp
pop
sbb
cmc
pop
pop
in
lods
jbe
sub
scas
jmp
out
into
into
sbb
xchg
mov
xchg
subl
jns
fisttps
or
mov
push
mov
pop
movsb
lods
lods
jl
es
pcmpeqw
jae
es
mov
testb
mov
mov
fldenv
fwait
mov
jb
movsl
xchg
pop
dec
add
push
sbb
loop
jns
test
cltd
sti
notb
xor
and
stos
dec
pusha
adc
push
mov
dec
xchg
sub
in
int3
sbb
movsl
popf
imul
adc
ss
out
xchg
fnstsw
push
in
lcall
dec
push
test
cltd
mov
jne
in
adc
xor
jl
pushf
call
fnsave
lahf
xchg
push
adc
pop
add
mov
popf
pop
int
adc
or
loope
add
ljmp
mov
shl
out
push
addb
cmp
add
mov
dec
dec
aam
pop
enter
inc
adc
into
insb
test
and
and
pushf
dec
jge
sahf
xor
jl
push
xor
push
jb
inc
ljmp
test
push
clc
mov
mov
inc
jmp
mov
fimuls
push
lret
fisubrs
jecxz
stc
dec
jl
lcall
push
pop
sbb
repz
and
adc
add
jno
push
or
and
inc
push
sub
cmp
scas
ds
out
mov
test
mov
testl
push
push
mov
imul
push
int3
clc
sbb
ficoms
adc
iret
adc
imul
ss
sbb
addr16
lock
cmp
rolb
inc
pop
call
xchg
loopne
add
sbb
negb
add
rcrl
add
cmp
push
inc
cmpsb
cmpsl
mov
gs
lock
mov
push
scas
mov
sarb
inc
mov
scas
jnp
pop
pop
sbb
icebp
mov
test
push
mov
or
push
cli
inc
xchg
sub
add
mov
aad
xchg
jp
lcall
gs
in
lahf
mov
or
cmpsl
jae
mov
icebp
lret
cmp
sbb
rcll
loope
pushf
sbb
dec
pop
and
mov
arpl
mov
divb
xchg
jo
neg
jns
mov
add
fisubrl
mov
decl
arpl
inc
adc
inc
repnz
rorl
push
dec
out
cmp
push
lret
pop
lret
pop
sbb
pop
dec
setne
ret
push
or
popf
test
xchg
inc
movl
mov
add
push
add
add
lret
stos
mov
cmp
jecxz
popa
xchg
lret
cmp
pop
sbb
out
cli
sub
pop
inc
xchg
or
add
gs
repz
inc
inc
in
ljmp
pushf
mov
pop
mov
mov
dec
aam
sahf
sub
cmp
loop
sbb
test
scas
arpl
fildl
dec
jecxz
xor
lcallw
mov
inc
mov
jo
xchg
xlat
mov
arpl
fxch
je
xor
out
or
jmp
push
addr16
cmpsb
inc
xchg
leave
jnp
pop
dec
mov
mov
lahf
or
and
mov
sahf
out
lahf
outsl
out
cltd
addl
sbb
mov
pop
inc
xlat
push
pusha
movsb
adc
jp
and
insb
mov
inc
xlat
add
std
pop
push
mov
into
or
movsb
adc
and
jne
jge
jge
cmc
xor
jg
cmp
jle
or
xor
and
negl
cmp
mov
imul
das
xor
repz
pop
in
dec
dec
xchg
mov
pushl
inc
out
and
sbb
notl
jb
inc
cmp
pop
sub
in
pushf
push
xchg
lods
icebp
adc
mov
jg
into
leave
mov
outsb
hlt
out
mov
sbbb
aaa
andl
nop
shll
mov
out
movsb
pop
xchg
jge
cwtl
jmp
or
out
cltd
call
xor
dec
subb
or
out
adc
sbb
jne
adcl
fmuls
push
add
xlat
in
nop
add
lock
sbb
or
fcompl
jmp
test
mov
icebp
push
sub
xor
dec
sbb
fsubrl
scas
adc
sar
lahf
leave
repz
xchg
jle
and
test
test
leave
andnps
or
adc
sub
mov
movsb
push
cmc
fisttps
fistpl
and
outsb
mov
leave
jle
jle
test
sbb
jp
in
ret
sbb
jns
and
cwtl
enter
into
imulb
int3
inc
sbb
sub
js
xchg
inc
sbb
adc
outsb
push
cmp
popf
cmpl
rcrb
adc
je
cmc
sbb
mov
jnp
jb
jecxz
or
push
xor
and
lahf
mov
addr16
mov
dec
fldt
mov
daa
sub
jp
xor
nop
cmp
add
mov
lea
leave
aas
rcll
scas
loope
mov
fldcw
jle
adc
notb
mov
aam
out
and
jge
mov
jl
fstpl
leave
jno
push
ret
xchg
dec
andb
jmp
fs
stos
rcrl
sbb
and
xchg
test
popf
das
push
icebp
aas
or
jae
mov
cwtd
pop
leave
dec
mov
xor
cltd
pop
lock
fildl
jb
test
dec
and
adc
outsl
shl
dec
dec
jne
lock
jmp
push
push
cmp
mov
flds
push
popf
call
add
or
xor
and
lcall
mov
je
aaa
push
mov
sarb
adc
cmp
data16
mov
pop
lods
xchg
xchg
mov
lock
or
cmp
push
enter
push
ja
fsubrl
lock
loop
and
xor
xor
add
fs
mov
outsl
jb
notb
mov
js
in
jne
aam
add
adc
ja
sub
push
dec
inc
inc
lods
pusha
xchg
popfw
lods
stos
inc
xchg
xchg
inc
jne
gs
xor
dec
xchg
xchg
pop
add
adc
push
jge
stc
jbe
das
jp
xchg
inc
out
int3
inc
jge
sahf
or
je
imul
divl
pusha
nop
mov
sub
lret
out
mov
xor
inc
nop
out
std
repnz
mov
hlt
nop
ds
imul
jae
lret
mov
adc
ret
cmc
loop
jp
mov
jae
scas
sar
int3
sub
xchg
ja
mov
xchg
mov
stc
jno
fnstsw
test
pop
sbb
adc
cs
cmpsb
loop
mov
push
or
scas
lret
das
std
cmc
ds
adc
or
test
cmp
xor
sti
hlt
cmp
xlat
dec
mov
sahf
pop
add
sahf
fcmovbe
xor
scas
jmp
cld
lea
lea
cmp
popa
js
roll
or
and
fldt
push
and
xchg
and
scas
arpl
mov
in
ds
test
push
jmp
pop
mov
test
mov
mov
out
sub
adc
mov
jbe
test
inc
jg
std
push
and
es
ficompl
jnp
inc
dec
sub
lahf
inc
ss
jne
cmp
aaa
movsl
fdivrl
das
test
push
out
mov
pushf
push
sub
cmp
inc
sub
fsubrs
jb
mov
inc
ja
xor
inc
jp
or
sub
js
mov
cld
in
inc
inc
xor
jno
and
dec
lret
push
cmp
jo
push
jnp
mov
pusha
lea
pop
xchg
test
or
in
cmpsl
cmp
cmp
fldt
daa
loop
pop
cmp
lods
push
imul
dec
inc
mov
dec
int3
scas
inc
dec
xchg
pop
mov
test
sbb
mov
lods
sub
and
out
sbb
jne
insb
in
fidivrl
xchg
shll
mov
pop
sbb
push
scas
inc
jae
clc
jle
rorl
fs
loopne
aaa
push
xor
pop
mov
mov
sub
sbb
outsl
clc
loop
repnz
pop
xchg
inc
and
mov
jno
sbb
push
insl
adc
xlat
jbe
fstl
push
xchg
adc
lret
mov
fnstcw
bound
sub
aaa
cmc
pop
mov
jmp
or
out
mov
pop
lods
fistpl
int
mov
and
in
mov
or
je
adc
pop
add
ds
fcomps
insl
nop
dec
scas
out
outsl
and
sbb
adc
fsubrl
incl
icebp
test
and
push
push
lock
cltd
jle
push
add
or
mov
adc
cmc
fs
mov
mov
and
pop
add
dec
fbld
inc
divl
push
add
clc
push
push
les
xor
mov
leave
push
push
jecxz
fst
stc
adc
insb
insb
cmp
jno
mov
insl
xlat
aaa
xchg
clc
testl
es
pop
mov
or
dec
hlt
cmp
stos
clc
sbb
sbb
out
stc
loopne
testl
test
jne
xchg
enter
pusha
xor
outsb
rcrl
int
lea
test
mov
sbb
fs
mov
sbb
shll
bound
cmp
inc
add
enter
xchg
push
test
adc
push
push
insl
insl
enter
mov
fwait
mov
jb
scas
pop
in
aas
mov
xchg
cmpsl
dec
cmpsb
jae
daa
mov
xchg
lahf
mov
lock
fs
mov
rcpps
xor
lea
cmp
pop
jl
outsl
jbe
mov
sbb
out
push
insl
sbb
or
pop
sub
inc
lcall
mov
xor
cmp
insb
int
sbb
test
jbe
xor
cmp
sbb
lahf
pop
jmp
sbb
jg
movsl
jae
mov
fnstenv
inc
mov
divl
adc
int3
mov
fsubrs
sbb
sub
jmp
pop
lods
lods
repnz
mov
xchg
imulb
int3
push
dec
jg
fwait
daa
xchg
insb
push
jae
lock
ss
stos
sbb
shll
into
lahf
ds
cli
sbb
xchg
sbb
test
sbb
inc
push
cmpsl
pop
cmpsb
outsl
popa
sub
jl
fs
repz
addr16
pop
mov
inc
dec
jp
mov
movsb
cli
out
rcll
cmpb
outsb
je
stos
jmp
fcom
imul
sbb
gs
ret
xchg
pushf
push
mov
inc
subb
cmp
bound
jb
or
or
mov
push
push
ffree
and
or
call
fbld
cltd
sbb
jo
subb
stc
out
cmpsl
fldl
call
test
mov
adc
jbe
mov
cmp
jmp
ret
call
in
pop
cli
dec
dec
shlb
es
xchg
dec
fbld
push
ja
add
enter
dec
adcl
sbb
push
jecxz
inc
xor
cmc
mov
insb
test
mov
incb
les
adc
loop
arpl
sahf
xchg
xchg
xor
lret
jo
sub
push
pusha
dec
xchg
pusha
into
and
dec
cs
jg
testb
cmp
popa
stos
jmp
ffreep
jae
test
jo
xlat
jg
cmp
or
mov
ret
les
pusha
cmp
xlat
jae
jl
test
jecxz
sub
bound
pushf
enter
inc
and
and
ret
out
loop
pusha
andb
and
mov
lcall
sahf
je
data16
aad
mov
mov
mov
mov
stos
imul
mov
dec
push
mov
cli
repnz
aad
dec
mov
xchg
inc
enter
mov
fmul
ja
jbe
je
adc
mov
dec
push
xchg
mov
xor
mov
xchg
leave
jecxz
mov
inc
jmp
sub
fisubl
adc
sbb
jmp
dec
out
xchg
push
aas
sub
fwait
push
mov
lods
out
aad
rolb
mov
dec
sbb
or
pop
arpl
and
fwait
jbe
and
mov
inc
add
mov
mov
dec
arpl
stos
out
xlat
jae
lret
adc
imul
popfw
xchg
inc
dec
adc
aas
jb
add
fxch
lods
ja
pop
jo
movsb
mov
pusha
out
inc
xchg
out
shlb
iret
xor
xor
cmp
std
les
cmp
inc
xchg
pop
inc
lret
cmp
dec
test
push
sub
and
adcb
mov
bound
cld
in
mov
sbbl
and
or
sub
inc
push
sub
xor
jge
mov
imulb
fidivs
fndisi(8087
shll
mov
out
les
mov
jecxz
pop
scas
xor
sti
inc
or
cmc
xchg
add
scas
fdivrs
jbe
cmp
sub
sub
fs
pop
adc
popa
push
mov
call
mov
aad
mov
es
out
insl
outsl
cmc
sub
add
jns
mov
inc
loope
je
popa
mov
loopne
xchg
xchg
push
ret
rcrl
stc
mov
cmpsb
pop
or
ja
dec
push
sbb
ficomps
dec
fucom
outsl
mov
rcll
and
dec
lds
inc
fs
clc
lock
pop
movsb
subb
fwait
push
js
and
push
inc
es
std
into
push
push
test
adc
sub
icebp
cli
mov
leave
arpl
push
out
idivb
outsb
cmp
js
and
mov
sub
or
dec
aaa
or
ljmp
mov
sbbl
outsb
pop
mov
mov
gs
fiaddl
cwtl
inc
je
pavgw
test
xor
lahf
inc
sub
jle
inc
js
mov
jo
sub
fstpl
sub
adc
mov
imul
jb
and
xchg
sub
jb
inc
ss
lds
xor
xchg
fildll
nop
ss
xor
out
aam
sahf
add
sarb
mov
add
push
pushf
es
dec
movsl
idivb
scas
adc
clc
push
imul
hlt
add
mov
outsl
lret
dec
nop
adc
into
dec
in
inc
arpl
lret
cmp
sub
pop
sbb
xor
movsb
scas
andb
cmp
inc
mov
xchg
stos
jb
imull
jge
loopne
mov
aas
push
sub
jge
nop
test
movsb
jb
sbb
jne
inc
mov
or
lret
aas
sbb
cs
das
repnz
fnsave
aas
dec
es
jnp
push
clc
mov
mov
push
xchg
jae
add
mov
and
outsl
xchg
sbb
rcr
fs
insl
inc
mov
dec
sbb
pusha
ss
shrl
jg
cmp
mov
pop
aaa
xor
add
and
cmp
mov
ja
mov
stc
sbb
and
jo
push
sub
orl
fnstenv
mov
inc
shll
daa
lock
adc
jo
fdivr
adcb
push
xor
je
orb
or
adc
dec
and
add
andb
sub
mov
stos
or
lods
pop
iret
mov
sbb
das
popa
ljmp
lea
pop
push
fsubrl
push
push
sti
or
dec
cmc
dec
xchg
lock
hlt
mov
or
out
test
cld
jns
in
mov
dec
pop
or
sub
ja
outsl
jmp
and
cmp
int3
xchg
rsqrtps
ss
xchg
ss
add
ja
xchg
and
dec
aam
push
cld
and
scas
mov
shr
lret
or
cmp
push
outsl
cmp
bound
lret
cwtl
movsb
int3
hlt
cmpl
pop
inc
lods
ja
insb
in
cmovl
iret
in
push
mov
imul
mov
aaa
sti
push
es
pop
pushf
add
incb
jmp
xchg
loop
or
ret
jb
pushf
cmp
inc
jae
stc
sub
addr16
adc
inc
iret
pop
jl
xor
in
inc
loop
lret
mov
mov
out
dec
dec
mov
push
decl
push
add
mov
jecxz
sti
test
loopne
xchg
scas
lcall
repz
fs
rcr
or
and
push
int3
and
jmp
inc
xchg
lret
subb
nop
dec
cmpsb
add
ret
mov
fs
mov
and
lret
add
cs
bound
stos
imulb
testl
gs
sbb
pop
addl
clc
cld
clc
icebp
inc
add
dec
or
jae
pop
jmp
xor
xor
xor
mov
push
fisttpl
jae
push
cmpsl
jb,pn
sahf
mov
scas
popf
int3
sub
sub
push
sub
mov
sub
cli
int
jns
mov
push
mov
xor
mov
in
inc
jle
loope
mov
loopne
mov
mov
sbb
ja
add
fiaddl
dec
mov
inc
jbe
and
and
mov
mov
sar
nop
and
mov
cmc
pop
mov
fwait
ds
cmpsl
fsubs
push
cmpsb
xlat
aad
jl
push
sub
jo
mov
and
hlt
ret
pop
pop
outsl
lods
test
lods
fists
mov
js
dec
insb
dec
dec
add
data16
and
xchg
jp
xchg
push
test
nop
xlat
movsb
adc
xchg
push
js
pop
js
stc
scas
js
xchg
dec
shll
ror
cs
sbb
repz
fidivl
pop
sub
pop
rolb
js
jb
xor
or
dec
pop
ret
xchg
sub
mov
and
fldl
mov
add
fwait
cwtl
pop
std
add
or
cmpsb
ret
sbb
outsl
adc
jp
sub
xchg
pop
bswap
loop
inc
mov
outsl
pop
inc
mov
outsb
add
inc
jp
pop
xchg
dec
adcb
daa
in
stos
jecxz
jb
fistpl
js
fstpl
out
fisttpl
cs
sbb
addb
lret
lods
loope
pushf
inc
fmul
xor
imul
inc
pop
aas
ja
cli
pop
pusha
push
sbb
daa
fstpl
sub
cmpsl
inc
pusha
or
pop
fsubrs
loopne
xor
xchg
arpl
das
and
out
loope
out
and
mov
fldt
das
sub
cmp
push
xlat
stc
xchg
lock
xor
imul
inc
jg
sub
xchg
rclb
inc
in
sti
lods
mov
rolb
and
inc
ss
inc
cmp
sbbb
test
sub
ret
mov
push
ja
ret
hlt
pop
mov
in
pop
cmp
test
mov
jl
call
cld
insb
mov
fcomp
xchg
aam
push
inc
mov
bound
cmpsl
push
in
mov
lods
dec
xor
xchg
cld
sub
and
lods
pop
inc
mov
cltd
push
mov
frndint
adc
subl
jle
sarb
xor
int
inc
mov
add
fprem
inc
sub
mov
sti
mov
and
and
pop
je
jl
stos
xchg
jno
jbe
ret
xor
loope
loop
and
dec
leave
dec
clc
or
pop
mov
bound
cld
or
aas
fadds
cmp
inc
mov
mov
xchg
pushf
leave
and
daa
js
fnclex
adc
xor
mov
aaa
cs
pop
std
push
cmp
mov
push
scas
xchg
shlb
pop
gs
mov
add
sar
xchg
and
dec
cmc
movb
mov
pop
cltd
sub
movsl
aaa
cld
fsubr
scas
dec
jbe
add
andl
shr
jp
xor
mov
mov
inc
ja
adcb
add
mov
popa
sbb
or
jecxz
mov
mov
mov
or
dec
adc
add
pop
popf
cmp
fwait
dec
adc
nopl
jmp
sbb
cs
mov
aaa
fldt
outsb
or
xchg
add
les
fidivs
andl
or
xor
push
insl
push
pop
popa
sti
jne
or
dec
sub
mov
jge
data16
xchg
mov
popf
mov
xchg
and
and
xor
add
mov
or
mov
lods
adc
insl
mov
inc
subb
inc
stos
add
in
pop
cli
mov
stos
jae
imul
dec
fisttpll
push
pop
lds
out
mov
xchg
cs
xchg
sbb
ljmp
inc
jge
jbe
dec
adcb
xchg
push
adc
pusha
sti
mov
lods
cmpsl
in
data16
scas
or
jbe
mov
enter
mov
cmp
outsb
inc
out
into
pop
jl
lock
ljmp
fmull
dec
push
xor
dec
adc
sbb
scas
dec
call
xor
push
data16
fildll
test
inc
div
stc
adc
inc
mov
pop
add
lahf
sbb
into
jae
ret
add
iret
imul
mov
jl
js
sahf
sti
mov
adc
dec
push
test
fldcw
pop
xchg
and
sbb
inc
pop
int
stos
mov
inc
fisttps
and
inc
mov
jmp
inc
ja
sbb
ds
and
dec
push
test
push
sahf
and
jmp
and
in
out
or
stos
call
mov
mov
notl
adc
aam
or
test
push
lret
or
mov
mov
sahf
jecxz
or
mov
sbb
sahf
or
in
shl
mov
test
stc
jmp
xchg
mov
jg
mov
mov
inc
aas
cs
sti
dec
out
mov
or
xchg
sub
adc
adc
fsts
mov
jne
loope
ss
cmp
push
mov
lcall
adc
js
inc
leave
jge
jmp
mov
pusha
push
xor
jnp
and
arpl
dec
or
sbb
mov
repz
lock
sub
adc
out
lea
test
and
popf
movsb
sub
mov
scas
loope
lcall
ljmp
aaa
aaa
dec
les
addl
fisubrs
clc
jmp
push
sub
mov
dec
popf
insl
and
mov
lret
jbe
std
jp
int3
data16
push
shrl
inc
sbb
cmpsl
iret
scas
cmpsb
int
or
lret
adc
cmp
mov
adcb
ret
and
jg
mov
add
mov
mov
jae
jnp
daa
cmp
outsl
addb
sahf
jmp
sbbb
cmpsl
stos
mov
lcall
cltd
sub
sbb
add
jae
xchg
iret
or
mov
mov
jo
jo
dec
dec
cli
sbb
dec
pop
xchg
pusha
aam
es
mov
dec
out
mov
ss
push
inc
sub
sub
pop
mov
fidivrs
mov
adcl
xchg
add
jp
mov
mov
and
lods
mov
jns
sbb
dec
in
out
out
xor
mov
xchg
sub
js
outsl
repz
aad
jl
sti
xchg
mov
and
jo
dec
pop
les
jg
movsl
adc
movsb
stos
fcmovne
sbbb
pop
stc
pushl
inc
push
adc
push
daa
pop
adc
mov
sbb
jae
pop
pop
xchg
adc
jle
xchg
xor
mov
push
faddl
dec
test
sub
sbb
lods
jae
imul
sbb
and
repnz
and
sub
xor
scas
mov
mov
push
ret
call
mov
xor
or
repnz
jp
xchg
outsl
mov
frstor
movsl
xor
repnz
or
jae
cwtl
les
add
jmp
repnz
pop
aaa
mov
leave
add
stc
adc
adc
insl
sarl
shr
mov
inc
add
arpl
loope
dec
ss
xor
mov
mov
mov
jno
sbb
pop
xchg
xchg
bound
cmpsl
das
and
add
stos
push
out
sbb
push
xchg
cmp
lock
pop
xor
dec
inc
test
ss
pop
loop
mov
pop
mov
fs
fistpl
negb
xchg
popf
xchg
pushf
int
lahf
ss
sub
in
mov
mov
mov
lods
sar
jl
mov
mov
aas
movsb
insb
push
out
xor
adcl
in
ss
mov
push
mov
or
xchg
fs
and
push
xchg
xchg
mov
es
bound
xor
push
jno
lret
push
push
cmpsl
push
adc
cmp
shll
inc
jne
hlt
jge
xor
clc
pop
cld
add
ljmp
add
xchg
inc
out
add
popf
inc
and
loope
fwait
xor
mov
jl
cmp
pop
xchg
mov
mov
outsl
push
fstl
pop
adc
lods
out
push
lret
popf
ret
scas
imul
les
xchg
rorb
xor
test
xor
sbbb
bnd
inc
cmp
stos
stc
jg
imull
lock
jbe
mov
xor
stc
daa
mov
jb
enter
mov
lret
sub
es
and
xchg
sub
das
dec
pop
cmp
andl
add
stc
lahf
int3
inc
scas
lods
in
push
nop
cmpsb
sarb
inc
sub
lock
stos
or
add
in
arpl
push
insl
scas
fs
outsb
xchg
fistpl
lods
fstpl
mov
js
fs
in
and
jmp
movsl
insb
das
add
sbb
push
jbe
into
sbb
pop
push
and
xchg
pushf
sbb
and
jns
scas
adc
enter
pop
fwait
test
imul
cmp
in
dec
push
das
sbb
scas
and
arpl
push
cmpsb
cmp
iret
addr16
out
xchg
sbb
push
out
sub
mov
stc
cmp
xor
sub
fldenv
pop
inc
fnstenv
xor
mov
jge
and
mov
mov
test
xor
loope
ja
imul
add
dec
neg
cmp
js
adc
cmp
movsl
add
movsb
adcl
and
shrb
and
gs
xchg
inc
pop
cmpsl
push
pop
dec
out
cli
insb
bound
mov
nop
push
jno
adc
mov
inc
xchg
cmp
mull
cmpsb
lahf
dec
in
cmp
in
in
mulb
dec
sbb
in
rcr
mov
xchg
pop
adc
xchg
sbb
dec
mov
stos
sub
fstpl
cmp
scas
mov
jecxz
popf
inc
jle
repnz
sub
or
stos
jnp
mov
lods
stos
arpl
adc
pop
dec
xlat
pop
push
and
dec
mov
cltd
cmpsl
mov
stos
loop
sub
fcoms
inc
xchg
xchg
sti
pop
jne
push
cmp
sub
mov
movsb
inc
notb
sarl
enter
add
subb
inc
xchg
les
mov
xlat
xor
aaa
scas
repnz
fnsave
mov
bound
inc
or
adcl
lds
fs
inc
es
adc
jnp
adc
sti
loop
push
fcomps
pusha
movsl
mov
lret
mov
fs
sbb
xchg
mov
into
inc
or
adcl
insl
rcrl
inc
lea
inc
gs
pop
mov
popf
ss
mov
nop
lahf
outsb
and
in
dec
loop
jp
test
xchg
mov
push
aas
sbb
push
stos
or
adc
or
movsb
les
push
cmp
cmc
add
dec
mov
lret
push
int3
ljmp
les
lods
cs
jg
push
daa
leave
frstor
mulb
bound
or
cmp
mov
sub
daa
push
insl
daa
mov
push
inc
fdivp
and
add
leave
mov
xchg
push
pop
ja
repz
imul
leave
cmp
push
mov
and
inc
xlat
xchg
cmpb
int
push
xchg
popa
dec
mov
pushl
repz
into
mov
jns
and
add
iret
xchg
xor
cltd
repz
jl
add
pop
adc
std
int
push
stos
sarb
mov
loopne
fstpl
out
nop
pusha
xchg
out
cltd
and
mov
loop
dec
jg
arpl
enter
or
cmpsl
or
movsl
lea
ds
add
repnz
push
leave
sarb
popa
test
fidivrs
add
out
mov
mov
adc
pop
test
lahf
shll
movl
push
cs
push
leave
mov
or
fsub
test
out
popf
cs
cli
jge
int3
inc
fsubs
xchg
call
xlat
mov
insb
lock
je
push
xor
xchg
xor
das
testb
fldt
mov
push
aad
dec
sahf
bound
insb
mov
rorb
push
je
testl
cmp
jne
out
aas
jnp
hlt
and
fnop
and
add
clc
hlt
movb
iret
dec
rcl
cltd
pop
lret
mov
jl
mull
push
and
pusha
fwait
inc
inc
js
inc
cmp
aaa
xchg
movsl
inc
aas
adc
pop
outsl
test
test
in
inc
adc
movsb
jmp
int3
or
pop
jno
jne
mov
mov
pop
jnp
cmp
dec
pushf
push
mov
out
insl
in
cmp
dec
and
dec
cmp
out
jbe
add
xchg
adc
and
sahf
push
out
loop
jge
add
fwait
jp
sub
sbb
loopne
xchg
mov
pushf
jno
or
inc
mov
sahf
xor
adc
les
clc
dec
dec
test
movsl
dec
test
xchg
fldl
sub
mov
test
jl
xchg
aam
fwait
arpl
mov
push
scas
cltd
cmpb
or
or
aas
cs
pop
out
push
mov
mov
das
inc
push
mov
movsl
xchg
cld
loopne
lahf
xlat
ret
ficoml
cld
lods
jp
pop
fcmovb
cmp
jl
loop
xor
inc
mov
sub
and
mull
ret
inc
addps
shll
pop
sahf
push
mov
adc
idiv
fsts
sub
cmpsl
cmc
dec
add
fucom
and
adc
pop
xchg
repnz
dec
dec
xorl
stc
inc
push
push
gs
loopne
pop
xor
mov
bound
daa
cmp
sbb
lret
xchg
or
iret
vdivpd
xchg
xchg
mov
imul
fstps
repnz
mov
in
cmp
into
mov
dec
mov
sub
push
cmp
cmp
inc
inc
dec
and
inc
sahf
mov
dec
jo
cld
inc
or
xchg
cmc
dec
adc
push
jo
aam
addr16
je
jge
mov
test
and
je
jae
lret
call
xchg
pop
test
add
pop
std
subb
cltd
sub
jno
lret
mov
xor
mov
cmp
dec
xorl
rcl
xchg
daa
sti
int3
ret
cmpsb
inc
xchg
jno
xchg
mov
sub
movsb
jne
adc
pop
sbb
sub
cmp
cmp
sar
scas
jno
inc
add
inc
test
push
push
in
xchg
sub
add
inc
jo
xlat
mov
adc
stc
sahf
test
cmp
xchg
sbb
xchg
aaa
jns
int
popf
or
push
rcll
lods
iret
jns
aas
addr16
push
mov
stos
push
scas
std
push
push
and
and
pop
gs
push
in
imul
push
inc
notb
push
push
notb
ss
sub
push
inc
and
cmp
cs
jo
movsl
fdivrl
push
test
insb
xchg
mov
arpl
push
inc
in
lds
mov
je
inc
fs
and
push
xorb
lock
lods
cmp
push
imul
push
jo
popa
cmp
cmp
in
cmp
jo
rclb
int3
test
cmpsb
adc
cmp
popf
and
gs
mov
adc
adc
xchg
rolb
dec
bswap
push
add
out
mov
mov
in
cmpsb
xchg
je
mov
in
lret
test
push
rclb
icebp
stos
mov
divl
test
mov
lcall
mov
mov
jmp
repnz
xor
call
iret
xor
out
inc
or
clc
cmp
sub
into
les
push
orl
push
mov
cmp
adc
test
out
mov
mov
mov
ljmp
xor
and
test
push
mov
jb
add
dec
push
orl
or
push
ja
scas
adc
and
fists
xchg
cmpl
jecxz
add
xchg
inc
sbb
add
jp
xchg
pop
add
lock
repnz
in
call
cmp
and
sbb
enter
pop
cmp
fimull
nop
jmp
sub
decb
push
jae
lock
aas
mov
sahf
inc
mov
int3
sbb
add
inc
sarl
xchg
test
mov
inc
cmpsb
icebp
xchg
test
out
xchg
jne
adc
mov
xor
fcmovne
scas
cmp
popa
jl
in
into
nop
and
mov
adc
ret
lock
cld
and
out
pop
jl
repz
sbb
adc
repnz
pusha
in
clc
outsl
push
rcrl
scas
xchg
push
bound
pusha
jmp
iret
mov
jnp
fisttpl
push
inc
dec
jbe
jmp
or
out
jg
xchg
mov
sahf
pop
xchg
stc
mov
cmp
and
or
dec
jecxz
test
test
jo
dec
mov
mov
sahf
pop
test
das
ret
add
or
jns
imul
dec
roll
and
inc
mov
lods
mov
pushf
loope
inc
loop
push
rclb
mov
aas
outsl
popa
adc
int
cli
dec
sub
add
inc
in
xchg
imul
fbld
adc
int
and
sahf
mov
cmp
fmuls
pop
leave
les
cs
aam
scas
imul
inc
mov
xor
fmull
ffree
stos
cmp
mov
mov
lcall
movsb
jecxz
les
es
clc
loop
mov
in
xor
jne
int3
sarb
and
pop
clc
cmc
jp
movsb
pop
xlat
push
sarb
jo
bnd
sub
mov
out
scas
or
out
xchg
mov
in
xor
mov
mov
bound
or
in
fxch
dec
int3
les
mov
ljmp
jmp
add
xchg
loopne
aaa
lret
into
sti
fcom
xor
stc
add
stos
in
into
fdivrl
and
pop
pop
cmp
enter
xchg
mov
fstps
cmc
clc
cmp
mov
aaa
mov
enter
mov
cmp
mov
adc
int
jno
fcoms
add
test
in
repnz
sub
stos
or
aad
and
inc
sti
xor
cs
das
dec
xchg
mov
sbb
pop
adc
dec
jmp
cmp
and
dec
test
outsl
arpl
adc
pop
es
pop
xor
mov
sbb
pop
dec
xchg
mov
xchg
loope
xor
push
testb
addr16
stc
decl
push
cmp
call
sbb
out
inc
aaa
test
ds
cmp
push
push
ja
cmc
jae
or
inc
mov
sub
push
fsubs
imul
popf
jp
xor
roll
dec
jae
notb
es
xchg
inc
aam
pop
cmp
stos
clc
pop
or
loop
mov
sarb
mov
ficoml
mov
jmp
jg
out
and
jnp
int3
das
scas
xchg
sbbb
ja
in
movsb
mov
lds
cli
jl
ficoml
or
sbb
cmp
lret
hlt
xchg
push
int
add
sbbl
stos
sbb
loope
xor
data16
inc
gs
std
cmc
aam
add
mov
xor
sub
jne
imul
popa
and
xchg
mov
inc
cli
sbb
and
mov
pop
push
popa
xchg
out
int3
sub
adc
jnp
sub
sub
cwtl
pop
imul
scas
push
out
jbe
adc
and
inc
sbbl
push
test
or
push
push
push
lcall
lahf
jne
fwait
out
pop
xchg
mov
test
lea
shl
push
xor
int
dec
loop
fists
cmp
aad
addr16
jae
cmp
and
hlt
scas
sahf
insb
insl
idivb
inc
inc
jae
int
lret
adc
cli
out
decb
cmp
shlb
repz
mov
cmp
mov
lods
mov
fwait
icebp
push
aam
shlb
inc
jns
sub
gs
lods
roll
adc
aas
add
cmc
fcomps
test
loop
incl
arpl
cmpsl
sbb
xchg
test
push
loope
adc
jns
push
adc
mov
jecxz
push
lods
push
mov
aam
mov
mov
pop
pop
jns
xchg
nop
jns
popf
iret
mov
test
push
mov
push
sub
cmp
dec
and
int3
mov
dec
mov
sti
cmpb
xor
pop
mov
fistl
jno
dec
ss
decb
outsl
insb
and
dec
xor
pusha
pop
dec
pop
jl
icebp
leave
or
and
aad
mov
cmp
sbb
mov
dec
jno
js
jmp
add
inc
push
test
and
mov
in
ss
lret
jmp
add
add
cmp
adc
stc
mov
push
sahf
sub
enter
xchg
dec
xor
push
jecxz
xor
add
idiv
pushf
scas
dec
pop
cmp
pop
mov
js
adc
out
loopne
inc
mov
jmp
lods
cmp
in
call
pop
pop
push
pop
and
adc
jne
sar
lret
xor
jbe
out
pop
push
cmpsl
fisttpll
ljmp
mov
es
outsl
std
xchg
add
adc
pop
inc
mov
mov
adc
into
imul
xchg
rolb
pop
arpl
jmp
add
aas
ret
sub
inc
lods
mov
push
jle
dec
fwait
add
cli
nop
fisubrs
test
int
push
cld
fsubr
pop
nop
icebp
je
lock
andl
jmp
pop
ret
push
lret
xchg
fildll
push
leave
test
sub
push
xor
and
mov
scas
test
bound
int3
out
push
and
stos
inc
sub
lahf
daa
test
ljmp
and
or
fmul
pop
hlt
int
and
subb
mov
dec
sbb
fsubrs
cmp
push
cld
or
and
stos
cmc
inc
pop
mov
jne
pop
je
cmp
adc
in
jle
cmp
xchg
adc
ss
pop
adc
outsl
inc
jb
jnp
movl
xchg
adc
mov
mov
and
cld
faddl
or
xor
xchg
sbb
and
jle
mov
jge
mov
and
test
xchg
mul
mov
mov
inc
scas
jo
xchg
mov
addr16
adc
mov
fucomi
test
or
mov
cld
lds
xor
in
inc
or
rorb
sub
in
incl
sbb
stos
cmp
dec
cmp
mov
scas
sub
cltd
push
add
lcall
push
xor
sbb
sbb
xor
cmp
nop
ljmp
rolb
push
loope
in
cmpsl
aad
lret
mov
pusha
pop
cmp
push
fbstp
mov
fldcw
sbb
or
ljmp
jb
xor
popa
js
jae
sbb
push
jne
stos
orl
adc
pop
in
adc
sbb
loopne
jmp
in
rcrb
adc
lahf
inc
push
jmp
sub
lret
pusha
mov
lcall
stc
xlat
jns
mov
insb
pop
jne
orl
mov
sub
daa
nop
mov
or
sub
scas
xchg
and
sub
add
push
mov
add
lret
push
push
ret
cmpsl
faddp
sub
sahf
cmp
ret
add
fistl
cmp
lret
nop
jp
dec
push
mov
dec
pop
xor
movsl
mov
test
inc
sti
testb
negb
pop
jp
data16
pop
lods
pop
stos
aam
and
cmp
mov
loope
add
inc
inc
popf
arpl
jmp
rclb
jns
mov
mov
int
adc
push
mov
dec
dec
xor
and
pop
push
cs
xor
fldt
pop
jns
je
dec
sub
push
mov
movsl
jae
lods
push
adc
inc
mov
popa
in
cmp
hlt
iret
cld
dec
pop
mov
inc
ljmp
push
scas
add
repz
cmp
andb
int3
dec
or
pop
push
or
dec
in
mov
ja
sbb
jl
bnd
scas
pop
ja
jnp
sbb
xchg
mov
out
push
scas
mov
fsubs
into
mov
xchg
and
and
les
ficoml
imul
lea
mov
cmc
out
mov
or
in
sahf
pop
push
push
push
test
xchg
cmp
repz
and
xchg
push
fmull
rcll
mov
jp
xor
scas
roll
loop
movsb
mov
fisubl
cmp
out
outsl
xchg
jb
and
xchg
cmp
sub
xchg
adc
mov
loopne,pt
dec
add
xchg
jo
pop
rcr
pop
movsb
lcall
lahf
jne
inc
sbb
xor
data16
mov
incl
out
jge
stc
nop
shlb
out
cltd
mov
sti
cmpsl
rclb
cmp
aad
sbb
test
aaa
mov
mov
test
jb
sbb
jno
add
dec
adc
in
int
adc
pop
inc
scas
add
mov
cmp
xor
cmpsl
cmpsb
add
mov
fidivl
adc
jnp
dec
push
mov
jp
push
sub
cli
fnsave
xchg
fwait
fwait
ja
sarb
add
mov
dec
pop
out
push
jb
pop
mov
out
xlat
push
mov
xlat
lods
int
aas
xor
sbb
fistl
in
sub
pop
dec
arpl
sub
pop
loopne
test
add
xlat
push
sbb
xorb
bnd
sbb
dec
popf
xor
sub
jmp
add
les
dec
add
mov
jecxz
sub
sbb
sub
fisubs
stc
leave
xchg
xchg
mov
rdmsr
jbe
push
and
jp
daa
push
or
fiaddl
in
add
mov
sbb
add
fcmovne
adc
scas
sub
push
mov
insl
pop
adc
mov
sbb
out
xchg
adc
repz
mov
fsub
in
addr16
std
add
negl
lea
enter
adc
push
fwait
cmpsb
xor
xlat
bound
nop
in
sti
xchg
xchg
es
mov
xor
test
fcmovnbe
jo
jg
fldenv
loope
outsl
repnz
repz
insb
fsubp
outsl
dec
xor
loop
adc
xchg
pop
lods
or
aaa
into
andb
jp
in
testb
dec
mov
or
jns
cmpb
fldt
ret
adc
mov
addl
insl
jnp
pop
inc
pop
add
fwait
cwtl
push
lods
enter
aas
dec
mov
mov
adc
adc
xor
inc
pop
jnp
ljmp
mov
or
jno
jnp
mov
and
push
xchg
push
sbb
cmp
jb
jbe
or
mov
pop
sti
dec
and
and
rol
movsb
cmc
and
int
cmp
cmp
dec
sbb
push
xchg
lods
fimuls
in
ja
xor
pop
jb
outsb
inc
mov
out
in
jo
cmc
dec
xchg
cmp
mov
daa
adc
cmc
pop
xchg
out
mov
adcl
cmp
mov
sub
jne
pushl
xor
jg
pop
lcall
imul
push
mov
aas
neg
push
lock
sahf
and
mov
negl
mov
mov
mov
inc
shlb
incl
je
cmpl
or
or
dec
aaa
push
xor
adc
dec
dec
mov
mov
aam
dec
xor
mov
repz
sahf
fistpl
mov
ret
lods
jo,pt
cmp
jnp
jmp
pop
adc
mov
dec
or
mov
movsb
int
pop
fldt
sti
es
fwait
aad
subb
movsb
nop
movsb
push
jp
mov
ds
rolw
pop
sub
xor
cmpsl
decl
push
cmc
hlt
pop
imull
out
cmpsb
mov
shll
les
sub
mov
add
cmp
jnp
in
pop
cmp
fimull
mov
sbb
rorb
cltd
xchg
movsb
xchg
clc
dec
or
sbb
in
mov
sub
cltd
mov
clc
iret
jne
pop
cmp
adc
dec
fisubrl
inc
jl
out
popl
jae
shll
adc
pcmpgtw
xor
mov
lcall
push
and
stos
jle
dec
jp
nop
dec
pusha
pop
jo
adc
lea
xchg
lock
jmp
int
fcmove
inc
push
into
add
mov
pop
out
fld
xor
pusha
jbe
and
pop
mov
and
push
repz
fwait
sub
fldt
pop
xchg
imul
adc
add
es
cmp
popa
sub
mov
out
jne
stos
loopne
sbbl
mov
fwait
arpl
lret
push
inc
dec
push
sub
mov
rolb
or
insl
sbb
inc
and
stos
testb
out
and
or
mov
mov
loope
shl
pushf
mov
pushf
outsb
data16
es
pop
add
lods
lret
or
jns
clc
pop
movsb
jl
movups
add
add
nop
pop
adc
mov
jns
and
inc
in
mov
jbe
aaa
xchg
scas
cli
sub
faddl
orb
addr16
cmp
sub
or
dec
adc
pop
mov
or
add
pop
fmull
arpl
inc
sahf
lcall
outsb
cltd
test
xorb
bound
arpl
sub
fcompl
sub
or
pop
xchg
or
nop
sub
and
jl
pop
mov
ljmp
arpl
shlb
lods
jge
cmp
addr16
adc
lock
sbbb
jl
loop
mov
cld
add
xchg
sbb
sbb
clc
jno
dec
std
aas
adcb
cmpsl
push
cmp
add
lods
mov
rcrl
jo
lea
jns
outsl
ret
mov
adc
sbb
mov
orl
and
add
dec
test
mov
jl
sbb
in
mov
jge
cld
int
dec
mov
lods
stos
sub
add
leave
ss
rclw
fimuls
les
cmpsb
imul
fldt
pop
inc
loopne
fstp
sub
sbb
cmp
cmpsb
lret
out
sbb
imulb
je
mov
mov
cmp
out
and
mov
inc
bound
in
push
icebp
mov
add
dec
xchg
stc
cld
aam
shlb
test
loope
outsl
mov
sbbb
rcrb
sbb
sahf
pop
mov
mov
fnstenv
mov
stos
cmp
fwait
jo
in
inc
mov
push
pop
scas
cmpsl
xor
insl
and
xor
ss
pop
test
jecxz
cmp
lods
insl
cmp
adc
ljmp
jno
inc
jge
sbb
dec
inc
inc
fldcw
sub
shll
xchg
mov
xchg
ja
call
cmp
xlat
daa
pusha
fcmovnu
mov
sub
push
inc
popa
or
cmp
dec
dec
mov
loop
or
sbb
imul
mov
or
sub
clc
and
xor
insl
mov
dec
call
inc
sbb
add
gs
mov
pop
and
pop
fildl
imul
adc
add
dec
jg
inc
testb
and
xchg
nop
jbe
xchg
and
lret
sar
popa
insb
leave
fwait
mov
jns
dec
and
add
add
push
cmp
cmp
aam
stc
jo
lods
add
iret
outsl
into
test
or
repnz
pop
jb
insb
pop
stos
outsl
jp
imul
cmp
test
iret
ds
add
jmp
push
arpl
xor
add
in
fs
jae
push
movsl
xchg
sub
and
cmc
inc
insb
push
scas
add
fidivl
mov
jl
sbb
mov
stc
fwait
push
adc
stos
xor
ds
test
mov
xor
mov
jae
ja
xchg
jl
leave
pop
jp
enter
in
sbb
inc
or
das
mov
mov
add
lods
and
or
sahf
cmp
repnz
sub
push
cs
lods
adc
jno
or
std
dec
mov
int
pop
aas
and
sbb
repz
nop
out
or
pop
mov
std
rorb
jne
frstor
cld
xchg
and
and
loop
xchg
jmp
cmpsl
call
testb
mov
adc
es
lea
mov
mov
adc
jne
clc
mov
fdivp
cmp
in
nop
shrb
push
cmp
pop
xchg
fldcw
test
ss
ffreep
pop
push
lods
jmp
sbb
cmpsl
pop
mov
cmpsb
mov
mov
pop
fistps
pop
sahf
test
jno
mov
stos
sbb
enter
jp
mov
push
sub
push
push
adc
fwait
lcall
mov
xorb
adcl
adcl
outsb
push
inc
mov
data16
mov
inc
dec
push
sbb
mov
mov
sar
mov
cli
repz
cmpsb
push
mov
mov
outsl
jae
in
inc
dec
cltd
je
add
test
dec
iret
cmp
push
scas
rolb
add
xor
fisubrs
and
into
bound
mov
and
sub
iret
icebp
jge
inc
negb
push
mov
out
add
add
push
cld
xchg
ja
mov
cltd
sti
addr16
jp
inc
outsl
repz
adc
mov
lods
mov
data16
push
add
jo
or
pop
mov
or
neg
adc
sub
loope
cltd
test
push
mov
test
hlt
xor
das
add
test
and
dec
loopne
jo
rol
mov
adc
cmp
icebp
adc
xor
movsb
ljmp
lods
in
cmp
lods
cltd
stc
in
ds
dec
pusha
push
arpl
loop
stc
js
sub
icebp
mov
jb
mov
pop
pop
pop
les
ret
std
dec
dec
sbb
push
stos
sub
jg
lret
repz
mov
sub
jno
ret
pop
in
mov
dec
adc
cmp
xchg
pop
call
loope
test
cmp
lods
pop
ss
jge
imul
mov
popf
fildll
push
mov
cmp
cmp
push
test
das
mov
sar
sbb
rclb
mov
xor
in
pop
adc
xchg
dec
xchg
push
iret
add
mov
ret
xor
mov
sbb
imul
pop
adc
test
out
push
test
sbb
pop
mov
lea
add
xor
xchg
sub
mov
pop
xlat
xchg
popa
mov
xchg
xor
sbb
rol
inc
jle
pop
pand
out
fmull
lcall
xchg
add
jo
dec
movsb
or
push
inc
cltd
movsl
jle
xor
mov
jecxz
dec
jecxz
mov
pop
negl
jae
mov
mov
stos
jmp
mov
leave
push
xchg
mov
cmc
gs
outsl
pusha
in
pop
jge
into
subl
scas
sub
pop
xor
fadd
js
aas
lods
push
jb
cmp
sub
xor
bnd
jp
push
dec
push
or
mov
dec
arpl
jle
xchg
outsl
push
dec
sub
xchg
or
lcall
and
int
sbb
pop
imul
cltd
std
enter
fbld
mov
int
xchg
dec
inc
push
pop
and
fincstp
or
in
push
adc
andl
and
ret
ss
inc
adc
add
test
and
and
fcoms
push
pop
pop
or
mov
imul
cmp
mov
mov
std
jmp
jb
mov
testb
mov
push
insl
insl
mov
xlat
push
mov
adc
jns
popa
sub
iret
jp
pop
sbb
inc
js
add
aad
std
mov
pop
cmp
sbb
sbb
fbstp
movsb
and
mov
sahf
pop
mov
insl
out
xor
inc
xor
inc
jl
mov
adc
mov
loopne
and
xchg
mov
ss
mov
std
das
int3
cmp
cmpsb
and
addr16
mov
scas
sbb
and
or
mov
sub
push
adc
fstl
outsl
cmp
jp
in
jnp
aaa
adc
sub
xlat
add
orb
je
aad
dec
jae
pop
rclb
mov
in
js
in
sbb
out
popf
adc
mov
rcll
xchg
cmpsl
cmc
mov
pop
inc
lret
fwait
out
mov
lods
cmp
fstpl
sbb
stc
sarb
lods
pop
pop
xchg
scas
adc
push
int
push
xchg
shrb
or
stos
ficompl
cmp
xchg
sbb
or
cmc
out
cmpsb
push
fs
push
ja
mov
ret
inc
dec
mov
mov
cmpsl
in
inc
adc
loopne
and
out
and
lock
fdivr
push
xchg
sbb
lahf
mov
lret
mov
mov
inc
je
lds
jp
push
xchg
dec
xorl
pop
push
jo
scas
sbb
bound
push
int3
sbb
test
cmp
nop
jg
leave
aas
cmp
cwtl
lret
cltd
lcall
scas
movl
push
sub
inc
jle
jne
adc
xor
mov
cmp
inc
sbb
jb
dec
enter
xor
daa
lock
inc
es
dec
lods
mov
mov
push
sbb
fucomip
dec
push
pop
int3
test
repz
into
fnsave
pop
inc
mov
xor
stc
loopne
fisubrl
mov
xor
and
es
lret
pop
xchg
xchg
inc
push
nop
clc
mov
inc
scas
inc
pop
pop
call
sti
andb
xor
rorl
aaa
test
cmp
adc
sub
or
cs
xor
fnsave
mov
mov
insb
jecxz
push
mov
push
aas
dec
out
sub
and
fists
leave
xchg
pop
stos
aad
jg
push
push
aam
push
aam
stos
test
mov
in
outsb
mov
into
push
adc
sahf
xchg
jmp
push
mov
or
or
xor
test
psubsw
cmc
mov
and
movb
cmp
fnstsw
lret
roll
cmp
into
mov
cmpb
test
cld
int3
ret
push
movsb
je
jne
sahf
cli
xor
mov
loope
test
data16
cmpsb
pop
lcall
xchg
and
dec
or
les
jmp
xor
push
mov
les
pushf
mov
ret
cmp
pop
popf
lcall
pop
lcall
dec
mov
fcmovne
jne
pushf
popf
xchg
cmp
mov
sbb
mov
fcom
push
shlb
mov
das
adc
pop
outsl
cs
cli
push
pop
jo
mov
xchg
lret
mov
inc
incb
inc
hlt
adc
fs
shrl
xchg
inc
jmp
subb
iret
shl
arpl
test
mov
and
and
or
pusha
pusha
loopne
inc
and
or
sub
xor
daa
lcall
and
hlt
and
cmpsl
inc
cli
or
cmp
pusha
sub
dec
mov
mov
std
lahf
add
inc
sub
pop
jl
loopne
cmpsl
outsb
xor
jl
mov
push
xorl
adc
cmp
lret
je
add
push
div
fs
pushf
ljmp
das
mov
mov
pop
sti
daa
jl
dec
xchg
test
loope
call
rorb
pop
imul
popf
in
mov
xor
orb
gs
out
jle
lods
sub
jo
ret
cmp
stos
inc
mov
testl
mov
rcl
movb
data16
push
scas
xchg
iret
cmp
test
aam
pop
kandb
cmp
outsb
imul
jmp
xor
into
repz
add
cmp
or
test
xchg
jl
sub
xchg
pop
nop
out
ficoms
out
in
push
into
ficoml
enter
sub
repnz
ss
pop
icebp
aad
pop
sbb
fs
mov
xchg
rcrb
add
aas
cmp
pushf
xlat
dec
cmp
mov
mulb
movsb
ret
das
out
in
or
inc
mov
pop
jecxz
lcall
jl
jno
ret
stos
cmc
clc
loop
cli
loope
fsubp
mov
dec
pop
pushf
jns,pn
push
imul
sub
cmp
sub
jl
xchg
pop
mov
push
jae
sysenter
out
cmp
sub
sbb
loopne
insl
movsb
or
mov
lods
leave
push
sub
cltd
xor
popa
ss
pop
test
xor
pusha
nop
xor
sub
adc
sbb
mov
pop
mov
psrld
sub
leave
pop
fcmovbe
pop
inc
pop
xor
dec
fs
ja
lds
enter
mov
mov
dec
lods
sbb
and
adc
cmp
jge
loopne
xor
xchg
loopne
lret
cmp
mov
dec
jge
repnz
aad
mov
test
jecxz
jle
fs
shrl
lret
mov
adc
mov
out
jmp
xor
xor
shlb
pusha
or
mov
and
lcall
scas
lods
or
imul
dec
setl
jae,pn
pop
scas
jae
cmp
mov
ret
xlat
mov
add
sbb
outsl
bound
cmp
adc
fsubs
mov
pop
aas
andl
xor
scas
cmc
mov
stc
mov
out
pop
punpckhwd
xchg
psllw
into
shrb
push
ljmp
push
or
in
adc
pop
mov
mov
pop
add
sti
mov
roll
push
mov
pop
outsb
dec
call
sahf
xor
mull
daa
hlt
outsb
in
push
leave
or
dec
pop
int3
loope
dec
daa
jns
fisttpl
pop
in
cmp
lods
popa
fcoml
and
fisubrl
inc
add
xor
jbe
jnp
mov
stos
jne
pop
sbb
mov
int3
dec
mov
xchg
es
insl
add
cltd
ficompl
cmc
pop
jle
push
aaa
sahf
mov
test
mov
into
mov
pop
xor
or
mov
push
mov
jmp
pusha
aam
out
mov
push
popf
xchg
iret
nop
rcrl
mov
test
xchg
rorb
push
scas
and
mov
and
pop
mov
clc
pop
push
push
popf
xchg
fucomip
pop
imul
adcb
and
mov
pop
cmc
out
jnp
int3
adc
adc
lret
add
pop
pusha
dec
loop
fs
add
outsl
mov
pop
cli
inc
sbb
and
add
fadds
sbb
jecxz
test
stos
out
dec
lock
in
mov
mov
add
int3
cmp
sbb
adc
in
fcomip
jl
loop
div
xchg
add
mov
sti
insl
sub
lods
scas
jne
mov
addr16
lret
fisubrs
shlb
adc
jg
jecxz
mov
push
int
repz
ret
and
sbb
subb
int
xor
mov
addb
xchg
jecxz
into
out
inc
push
xchg
push
and
cmp
outsl
mov
and
sub
sbb
mov
daa
xor
idiv
inc
mov
into
sarb
sbb
sub
and
stos
cmp
jg
iret
push
fdivs
push
mov
lret
push
dec
mov
mov
adc
lea
sbb
ret
mov
cmpsb
sbb
add
ss
test
lcall
fcoml
in
je
pop
xlat
pop
or
call
lcall
fadds
sbb
rcr
mov
mov
pushf
mov
adc
les
dec
in
pop
fists
mov
lahf
xor
mov
mov
movsl
xchg
mov
sub
or
cld
cmovns
arpl
mov
fisttpl
xorb
xor
cmp
in
mov
jne
sub
dec
cmpsl
cmp
aaa
nop
and
shlb
xchg
rorb
mov
rcl
lcall
sbb
lret
lret
mov
addr16
jmp
bound
not
jmp
out
stos
stos
cltd
add
loope
push
xor
xchg
outsb
adc
adc
scas
push
aam
lret
or
mov
je
out
mov
call
mov
popf
dec
iret
out
fwait
rol
add
or
js
or
ret
push
sbb
sub
mov
repz
or
dec
or
cmp
inc
daa
lahf
jg
pop
cmp
sbb
xchg
jl
xchg
push
cmc
xor
scas
out
enter
mov
mov
jp,pn
fdivrp
inc
ret
fldt
xchg
jnp
jl
or
xor
mov
mov
ret
pop
cltd
push
fdivl
cltd
cmpsb
arpl
subl
cmp
pushf
sbb
pushf
arpl
std
sahf
rorb
and
movsl
ja
cs
mov
movsb
stos
or
inc
sbb
loope
movsl
call
mov
mov
sbb
notl
ret
popf
cmp
push
mov
js
mov
test
pushf
gs
in
inc
sub
sub
lret
mov
mov
add
shrl
incl
mov
outsl
jp
shll
or
shlb
and
sbb
clc
enter
icebp
jbe
dec
rcrl
ret
int
or
mov
pop
jae
cmp
arpl
ds
cmpsb
rolb
je
dec
cld
jno
adc
jnp
jne
jne
idiv
cld
data16
pop
aam
leave
les
in
mov
rorl
mov
mov
pop
aas
testb
dec
pop
or
jo
xchg
cmp
popa
outsb
xchg
and
push
test
sub
imul
stos
and
cltd
pop
fisttpl
push
mov
jno
mov
pop
jp
pop
hlt
cs
and
out
out
shlb
popa
add
lods
cmp
mov
sub
mov
fisubrs
pop
loop
xchg
pop
sbb
dec
push
mov
jno
jge
xor
and
pop
adc
icebp
mov
and
and
shrl
mov
mov
pop
push
aaa
cmp
adc
xor
xor
out
arpl
and
push
add
in
bound
movsb
outsl
xchg
mov
mov
in
ss
sahf
inc
xchg
push
mov
cmp
push
jge
repnz
in
inc
adc
fsubl
divb
mov
fisttpll
in
adc
cltd
fs
sahf
add
pop
adc
inc
mov
adc
xchg
lds
push
sti
adc
mov
jne
lcall
popf
movsl
cmc
push
in
push
dec
pop
out
xchg
aam
mov
sbb
jmp
out
andb
lret
cs
popf
loopne
inc
add
imul
jno
repz
cmp
push
stc
mov
and
jge
fimull
mov
jo
adcb
je
pushf
pop
pushf
xor
je
or
adc
inc
out
ss
popa
lods
push
enter
faddp
insl
bound
sbb
int
incb
into
iret
and
cmpsb
dec
push
movb
pop
mov
push
in
push
xchg
aam
iret
fnstenv
out
and
mov
arpl
inc
out
imul
enter
push
ss
inc
push
jp
stos
cltd
mov
xor
pop
or
aam
jbe
lock
shlb
push
push
out
cmp
out
pop
mov
fsubrs
sub
inc
pop
mov
add
das
xor
inc
sbb
mov
cmc
insb
cmp
mov
fldcw
lret
cmp
mov
scas
push
std
jge
aaa
push
lea
je
icebp
mov
cmpsl
les
aad
adc
and
in
xor
inc
bswap
aas
in
ljmp
lcall
pop
xchg
out
inc
lret
fcmovnbe
addr16
adc
aaa
stos
pop
add
push
push
add
mov
dec
add
cs
jl
cmp
adc
and
adc
push
nop
std
mov
cmp
sti
xchg
xchg
movsl
fsubs
movsl
std
inc
sti
clc
ss
pop
test
jo
fs
imul
xchg
pop
out
addb
inc
js
jl
push
mov
mov
repz
insb
fwait
inc
push
pop
test
dec
push
mov
aam
mov
pop
push
sbbb
cld
xor
fsubrl
in
sub
mov
and
cltd
adc
xchg
ss
fisubrs
sbb
adc
adc
in
call
dec
insb
js
clc
add
scas
test
loop
int3
inc
xor
inc
mov
andl
sub
xchg
xchg
mov
sbb
push
fmuls
insb
fcmove
fcmovb
mov
jle
popf
fs
fiaddl
jle
popf
mov
dec
add
popa
mov
mov
mov
xlat
push
xor
shlb
inc
push
xchg
adc
dec
repnz
sub
lods
or
repz
or
jmp
mov
xchg
arpl
out
rcrl
adc
in
fsubrs
ljmp
test
fdivrs
lret
jmp
cmpsl
cmp
dec
test
cwtl
mov
jns
cltd
xchg
test
push
jmp
push
push
andl
repnz
or
jbe
cld
cmp
mov
rcrb
push
inc
cltd
mov
add
pop
xor
outsb
push
dec
rcrl
outsb
jb
add
pop
xor
scas
dec
aas
pop
loop
dec
idivb
sub
lret
xor
fistpl
xchg
sbb
pop
into
jmp
lcall
inc
mov
jmp
dec
bound
sbb
push
fstps
inc
adc
stos
sbb
mov
dec
test
popa
dec
andb
push
aaa
lret
cmpsb
ss
xchg
inc
loope
pop
inc
pop
sbb
shrl
jecxz
fldt
adc
add
mov
mov
rcll
loop
xor
push
cmpsb
cld
addl
or
mov
push
in
icebp
in
dec
loopne
notl
cmp
xchg
out
jns
icebp
push
pop
mov
test
fnstcw
aas
jmp
adc
insb
stc
repnz
enter
cmpb
jecxz
cmp
mov
add
adc
lcall
int3
add
out
cwtl
mov
and
xchg
mov
aam
xor
mov
lds
mov
mov
ljmp
popf
cmp
mov
out
pop
mov
sub
aad
push
and
xlat
inc
push
out
lods
jb
pushf
and
in
jns
mov
cld
dec
cmp
dec
ret
lcall
cmpb
push
add
cwtl
and
cmp
ja
inc
mov
cltd
xor
aam
jb
jno
inc
jle
in
rcrl
sbb
or
or
aad
lods
pop
add
sub
fwait
mov
cltd
aaa
cmpb
inc
sbb
cld
sub
inc
outsb
cli
sbb
bound
pop
pop
and
js
incl
xor
or
xor
inc
adc
sub
inc
jns
repz
mov
rorb
mov
sbb
lods
pop
movsl
das
insl
jne
fcomps
into
xchg
xchg
add
mov
sbb
test
inc
push
pushf
dec
mov
popf
push
in
in
sbb
adc
dec
mov
cmp
lret
xlat
icebp
shr
xchg
out
mov
inc
mov
sub
sbb
add
xor
xchg
fstl
pop
sarl
divl
clc
ret
jge
mov
ret
sub
lock
xchg
sub
stos
xchg
add
popa
cmp
rorb
aaa
rorl
shlb
js
jns
stos
cmp
lods
stc
mov
fildl
push
or
cld
sbb
aam
sbb
aaa
adc
mov
xchg
pop
fnstcw
mov
mov
inc
add
sub
in
je
psrad
jge
cld
fistl
ja
repz
in
lods
push
pop
mov
fisubs
dec
imul
dec
in
pop
jp
test
or
dec
sar
daa
push
ss
adc
and
xor
into
mov
inc
xchg
scas
outsb
arpl
scas
jecxz
fldenv
adc
inc
add
mov
repz
adc
or
push
mov
cmp
add
or
mov
iret
adc
jne
test
das
out
mov
and
enter
scas
lods
dec
mov
fstl
sub
sti
rcll
pop
cmp
pusha
divl
stos
sub
gs
hlt
push
push
jecxz
push
jmp
mov
bound
insl
mov
push
adc
sub
lea
aas
jnp
cld
outsl
adc
ja
lea
mov
das
outsb
mov
push
adc
adc
pusha
sub
pusha
pop
stos
aad
or
es
jmp
adc
ret
pop
cmp
mov
test
cmp
das
xchg
jg
insb
xchg
inc
sti
jo
lock
inc
repnz
hlt
or
and
and
sbb
popf
in
inc
decb
loopne
aam
arpl
push
test
mov
mov
clc
add
push
xor
jp
mov
sbb
push
jb
dec
mov
mov
push
popf
xor
sub
xchg
loop
lods
push
xor
adc
pop
sub
adc
or
negb
xlat
cs
sahf
push
lcall
pop
sarl
ja
lds
pop
aad
es
cld
test
lret
or
cmp
sub
leave
inc
xlat
mov
xor
adc
pusha
mov
push
outsl
ss
and
rorb
inc
pop
cmc
ror
out
outsl
jp
add
sbb
pop
and
inc
push
jo
sbb
pushf
scas
pusha
dec
pushl
cmp
stc
insb
mov
pop
xchg
pop
xchg
call
and
push
pop
jmp
push
and
sbb
and
fs
pop
cwtl
lret
popa
insl
add
adc
mov
xchg
shr
fcoml
arpl
add
loopne
fscale
fsubl
in
sub
stos
cmc
sub
dec
mov
jle
jbe
inc
lret
call
mov
cmpsl
pop
ds
fistpl
icebp
shll
jns
inc
lock
inc
test
shlb
mov
sub
aam
mov
mov
stc
cmpsb
lahf
xchg
subb
fcoml
mov
mov
daa
sub
fiadds
cltd
pop
flds
sbb
movsb
ss
or
pop
addl
mov
nop
inc
in
cmpsl
stc
sub
pop
dec
jae
add
test
leave
insl
test
jge
filds
mov
mov
add
jecxz
sub
loope
lret
mov
loopne
clc
adc
out
push
xorl
pop
aam
push
and
xchg
jno
xlat
ss
out
fs
sub
clc
insb
jge
scas
fidivl
ja
in
addps
je
push
cmc
and
mov
aad
mov
and
seto
movb
or
in
sub
mov
imul
loope
enter
and
movsl
andl
stos
ss
xorb
js
rorl
std
dec
bound
test
mov
cmp
pop
push
mov
lahf
mov
ret
movzbl
loope
test
mov
jo
iret
or
sbb
test
pushf
lcall
pop
ljmp
decb
push
out
sahf
mov
in
sbb
ficomps
jae
sub
aad
sub
mov
cltd
sub
and
mov
stc
cmpsb
fucomp
mov
nop
cmp
sbb
push
jnp
add
or
icebp
mov
dec
push
aas
sub
jle
out
clc
jmp
int
movsl
out
adc
and
leave
outsb
jnp
xor
aas
jns
mov
jae
ds
fcmovb
roll
add
fisubrl
std
mov
icebp
out
popa
scas
leave
cmc
setge
movsl
sub
rcr
enter
cld
pusha
into
fs
clc
popf
xor
sub
or
mov
ljmp
mov
mov
inc
inc
inc
ds
cwtl
loopne
in
lea
aaa
pop
dec
int3
jb
pushf
adc
out
and
sub
das
int
mov
adcb
sti
cmp
jns
sub
enter
lahf
lret
test
arpl
and
lcall
out
dec
call
ds
sti
ds
negl
sbb
xchg
mov
out
out
jns
push
imul
fnstsw
je
das
leave
icebp
movsl
je
icebp
loope
jge
push
std
jnp
adc
out
aad
test
jae
sub
sbb
pusha
mov
sbb
mov
repnz
fwait
nop
inc
xlat
ljmp
mov
adc
daa
inc
mov
cmpsl
xor
out
in
and
mov
imul
xor
shl
arpl
cld
sbb
xchg
je
jae
lea
dec
and
pushf
lock
mov
dec
in
push
cmp
out
mov
or
rcrb
pop
lahf
pop
lret
mov
jnp
les
mov
and
jae
and
push
dec
fwait
push
pop
loopne
inc
mov
outsb
test
xor
cmp
and
add
push
sbb
scas
cs
cld
push
add
jnp
icebp
imul
ja
ja
enter
repz
sbb
add
jno
fsubrs
mov
fidivl
or
mov
pop
mov
repnz
push
imul
lods
call
mov
mov
cltd
lock
jmp
xchg
cmp
out
adc
mov
in
inc
popa
add
stos
gs
flds
loop
dec
push
movsb
movsb
xchg
jg
mov
imul
andl
mov
xchg
popf
aam
dec
xor
mov
xchg
push
adc
xchg
es
add
xchg
mov
les
cmp
rcll
push
dec
jb
nop
lea
out
addr16
dec
add
sub
ret
daa
mov
lock
mov
lea
dec
add
fdivp
jg
jns
mov
call
mov
inc
scas
adc
fcmove
xchg
pop
movsb
hlt
cltd
mov
inc
jb
sub
inc
add
std
pop
pop
inc
cld
movsl
pop
cld
jb
pop
push
mov
inc
aas
pop
inc
push
movsl
das
and
es
out
push
cs
fxch
and
add
sub
xchg
jnp
call
or
jnp
popf
imul
jecxz
pop
sub
dec
stos
ret
icebp
icebp
mov
push
push
mov
and
xor
mov
mov
cmp
fiadds
stos
cmpsl
or
push
jbe
out
ret
das
pop
lea
je
jo
in
iret
sub
push
loopne
xchg
mov
pushf
xlat
mov
xchg
test
fdivl
sarl
sub
aaa
mov
fs
out
sbb
fstl
lods
pop
popa
andb
insl
pop
bound
cmp
ss
jmp
and
dec
or
cltd
add
mov
add
in
sub
pusha
rolb
test
sti
fidivrl
out
jnp
cli
xor
and
mov
fscale
mov
mov
gs
pop
imul
notb
negb
xor
jmp
and
fs
cld
inc
pop
dec
jmp
inc
cmp
dec
stc
sarb
bound
movsl
in
out
in
je
or
xor
push
xchg
inc
jecxz
or
sti
mov
sbb
fsubs
mov
mov
decl
movsb
jbe
cli
lock
adc
jne
rcrl
jo
inc
out
pop
push
dec
cmpsb
leave
xchg
clc
xlat
mov
adc
and
add
std
push
sbb
push
ljmp
ret
cmc
sahf
fisubl
and
push
xchg
mov
dec
sarb
mov
popa
insl
xlat
xchg
cwtl
add
inc
pop
inc
sbb
mov
push
pop
dec
cmp
pop
mov
out
push
mov
inc
loop
rcl
nop
cmp
sub
mov
cltd
xchg
sub
fidivrs
xor
hlt
add
mov
addb
insb
and
das
jle
sbb
push
cld
sbb
repz
hlt
inc
loope
jmp
sub
fs
mov
mov
enter
push
xchg
lcall
push
mov
push
lods
popf
jae
xchg
and
pop
adc
fidivs
jo
in
popa
ja
fs
add
ficomps
sbb
loopne
jge
jne
int
mov
mov
mov
insl
ds
das
int3
lret
push
adc
mov
sahf
dec
fdivl
pop
gs
cmp
jnp
std
sub
pop
insl
and
or
xor
sahf
lret
and
test
repnz
sub
or
inc
cmp
push
pop
inc
jb
pop
jae
sub
fbstp
outsl
into
push
dec
sbb
add
jg
fsubs
jg
jge
fbld
sbb
rclb
xchg
and
add
fs
inc
dec
dec
inc
popa
rcr
mov
cmp
rcrb
xor
repz
lahf
xor
or
stos
jo
js
pop
mov
add
or
in
push
ss
cld
testl
mov
mov
mulb
aas
inc
andb
ds
rorl
xor
sbbb
jl
cltd
sub
icebp
das
cmp
ret
enter
jl
gs
inc
test
outsb
jmp
xchg
testb
cs
sub
sbb
jne
push
jns
mov
cwtl
sub
aas
push
pop
cmpsb
jle
push
mov
mov
push
jae
icebp
sub
std
xchg
std
aaa
mov
inc
mov
mov
sub
outsl
mov
rep
mov
mov
fldcw
mov
fs
jecxz
mov
pop
mov
mov
mov
movsl
pop
sbb
pop
cmp
sub
and
subl
shll
enter
cld
punpckhdq
popl
xchg
jno
lret
inc
aad
orb
xlat
test
lcall
push
cmp
push
je
jbe
out
xchg
push
sahf
jmp
adc
stos
mov
inc
sub
jno
mov
into
pop
mov
lcall
and
data16
pop
mov
in
ja
cld
int
mov
ss
pop
stos
pop
int
mov
pop
out
in
mov
scas
imul
imul
xchg
mov
aad
lret
jg
cmp
fildl
push
add
push
std
int
add
mov
bound
lret
dec
dec
cld
inc
cmp
in
cmp
in
sub
jp
punpckhdq
out
cltd
notl
out
scas
lods
add
cld
push
cmc
sti
pop
clc
xor
xor
out
push
mov
jp
stc
fistpl
xchg
fstpt
repz
jp
fbstp
add
jb
sbb
sbb
movsb
insl
loopne
push
or
pop
xor
pushf
out
dec
adc
adc
push
xor
subl
stos
sti
pop
jg
lods
mov
call
leave
push
mov
lea
shl
pop
xchg
bound
jl
cmp
and
mov
push
mov
out
js
idivb
iret
inc
mov
shll
aaa
call
xchg
cmp
subb
xchg
mov
push
dec
insb
mov
insb
mov
mov
inc
cmc
cmpsl
jg
out
in
add
int3
hlt
push
sub
movsl
jo
mov
popf
pusha
cs
or
int
adc
push
aam
pop
shlb
push
jne
push
adc
loop
mov
subl
int
and
pop
pushf
sub
mov
insl
jno
dec
dec
pushw
pop
push
xchg
gs
repnz
pop
cmp
mov
jbe
lret
and
sbb
test
jbe
xor
lock
sarb
mov
iret
je
add
in
adc
dec
push
into
sbb
xchg
in
sub
lahf
enter
dec
cmp
rorl
push
hlt
mov
aad
or
bound
clc
push
gs
xlat
into
in
je
and
outsl
and
jmp
inc
jne
and
call
fwait
xor
int3
test
cmp
mov
dec
pop
shrb
mov
bnd
ljmp
mov
xor
mov
adc
jmp
add
mov
cmpsb
subl
mulb
push
adc
inc
jns
or
and
mov
arpl
sub
lock
or
mov
fdivrl
sahf
dec
push
fnstsw
imul
aad
les
xchg
scas
pop
inc
xchg
popa
popa
add
out
stc
sub
sub
sarl
aad
repnz
fnstcw
pop
subb
das
fwait
jno
outsb
test
mov
mov
aas
dec
js
jae
inc
xor
sub
adc
add
clc
and
pop
fsubrp
faddl
cmpsb
stc
jae
fmuls
xchg
jmp
sub
into
xor
das
jb
js
stos
fdivs
sub
mov
xlat
cmc
orl
dec
inc
or
icebp
hlt
adc
xor
aam
les
popa
mov
add
cmpsl
repz
jne
stc
inc
aas
imul
mov
repnz
imul
push
inc
das
mov
dec
es
js
sbb
pop
imul
inc
xor
mov
mov
adcb
push
push
pop
sbb
lock
mov
add
push
dec
pop
xor
xor
mov
fldt
cmc
cmpl
fnstsw
mov
push
loope
addr16
test
leave
dec
sbb
aam
movsb
leave
fstpt
icebp
sub
arpl
mov
or
jecxz
fnstcw
mov
scas
imul
movsb
pop
mov
pop
push
pop
jnp
jb
sub
out
in
movsb
ss
add
test
hlt
cmpsb
mov
repnz
lds
mov
insl
cmp
aas
inc
xchg
or
or
in
lahf
lret
inc
loop
mov
sbb
into
in
iret
sub
cmc
testb
ljmp
int3
sarl
mov
mov
or
inc
dec
outsl
mov
pop
shr
jmp
into
mov
push
jnp
fcoml
mov
mov
sbb
pushf
in
addr16
fiaddl
pop
orb
les
inc
neg
mov
sub
adc
iret
fbld
mov
jbe
stos
ret
mov
outsl
out
push
lds
repnz
hlt
int3
mov
lahf
pop
ret
jmp
scas
push
jg
mov
test
in
in
mov
add
js
fsubr
int
ss
mov
cwtl
xchg
and
jmp
pop
notb
push
scas
cltd
lret
insl
out
and
add
rorl
pop
imul
pop
ljmpw
mov
imul
or
mov
inc
mov
call
ret
iret
in
pop
clc
xchg
mov
push
fstl
cltd
into
push
inc
in
cmp
xchg
out
xor
sbb
js
sbb
xchg
inc
inc
cmp
pop
adc
scas
cltd
mov
adc
xchg
imul
pop
jne
aaa
lods
inc
into
dec
clc
adc
movsb
call
mov
fimull
mov
xchg
pop
and
imul
push
mov
dec
dec
jbe
mov
add
pop
fs
ficomps
adc
or
imul
pop
sub
xchg
cmp
xchg
stc
mov
bswap
outsb
cmpsb
inc
ss
scas
dec
pop
stc
xchg
imul
sub
push
xchg
bswap
mov
lods
hlt
push
les
push
repz
cmc
push
imul
loope
dec
outsl
leave
cs
clc
loopne
mov
and
xorl
lock
filds
pop
test
jg
gs
mov
and
xlat
movsl
sub
inc
jae
mov
das
xor
cmp
xchg
and
pop
lret
clc
lea
movsl
cmpsl
push
inc
push
pop
sahf
xchg
pop
cmpsl
or
sbb
fistpll
movsl
stos
inc
psrld
cmpsb
mov
push
enter
adc
add
jmp
repnz
fs
lret
decl
jmp
into
xchg
xchg
into
jg
call
add
push
sbb
pop
or
hlt
int3
or
push
or
fstp
xor
jecxz
add
xor
mov
ret
addr16
std
popa
enter
iret
xchg
dec
push
jns
sub
pop
sub
sti
in
push
and
inc
fs
nop
mov
pop
les
int3
cmc
adc
cmpl
pusha
push
ret
pop
add
fcoml
popf
jl
in
shrl
orl
movsb
imul
fs
out
sub
movsl
xor
inc
push
mov
xor
lods
pop
dec
adc
xor
rolb
cwtl
mov
mov
leave
das
cltd
loop
dec
adc
aad
cld
sub
call
lods
jp
push
xor
sub
xor
sti
push
mov
lcall
add
push
subl
or
roll
lods
jl
dec
sahf
jb
gs
jecxz
lock
mov
scas
mov
pop
xor
out
add
out
cmp
or
std
mov
sbb
aas
mov
inc
cmpsb
repnz
cmp
mov
out
cmp
inc
rorb
inc
andl
cs
mov
jno
js
iret
jmp
enter
in
cli
or
outsb
lahf
pop
or
fisttps
lds
aaa
std
or
fmuls
cmpsb
dec
jge
imul
inc
adc
dec
mov
jl
mov
subb
add
movsb
iret
sbb
lret
xor
xor
xor
mov
mov
enter
lds
out
mov
ljmp
mov
js
cmp
and
mov
pop
add
sbbb
rsm
xchg
in
dec
scas
xor
jns
or
repnz
in
into
stc
jmp
les
pop
add
testl
push
repnz
mov
cmpl
rorb
and
adc
inc
jle
xorb
pop
out
mov
mov
repz
icebp
inc
imul
rorb
or
push
punpckhdq
sub
add
mov
cld
add
pop
outsw
cmpl
mov
and
push
dec
xchg
ffreep
dec
mov
lds
orl
xor
inc
push
push
out
xor
int
outsl
pop
push
and
mov
arpl
insb
and
adcb
fidivs
fs
mov
mov
inc
iret
sub
cmp
add
insb
ja
xchg
xor
mov
xor
mov
in
push
fdivrs
pop
fiaddl
rcr
push
fucomip
into
pop
pop
popa
addr16
rolb
mov
sub
inc
lret
push
pop
sbb
std
loope
imul
gs
or
xchg
jno
ja
jle
add
dec
in
shrb
mov
add
in
mov
xchg
out
xchg
hlt
add
gs
fcomip
xor
ss
jo
xor
pushf
mov
xchg
in
adc
icebp
and
aad
test
sub
imul
repnz
lcall
pop
fdivrl
cmp
jno
stos
lods
or
arpl
mov
nop
out
sahf
xchg
pop
jge
xchg
fs
jp
lds
inc
fnsave
sub
hlt
cld
mov
mov
mov
cs
push
pop
sbb
out
xchg
lods
jne
sahf
int
fs
gs
loop
out
or
repnz
cs
dec
mov
out
data16
sbb
lods
fildl
mov
or
sbb
xor
sub
sub
sbb
ss
push
push
jmp
inc
cmp
addb
mov
wbinvd
repnz
loopne
fld
push
cmpsl
pop
dec
ret
and
sub
pop
mov
or
mov
js
fildll
jb
sar
idivb
mov
lcall
call
sbbl
mov
movsl
inc
sbb
dec
or
aad
xlat
jo
jmp
jecxz
in
add
repz
xor
lods
mov
lods
xchg
inc
xchg
push
sti
cmpsb
dec
mov
aas
int3
pop
arpl
push
xchg
pop
cmp
ja
mov
mov
mov
dec
imul
and
xchg
mov
lods
leave
and
mov
add
mov
addl
dec
mov
test
sub
rcrl
push
inc
sbb
and
jecxz
jge
xchg
and
xchg
mov
cmp
andb
inc
repz
mov
lods
leave
icebp
iret
stos
adc
mov
mov
aad
loopne
jne
dec
lods
pusha
cmp
idivb
std
cmp
iret
pop
in
outsl
pop
sub
mov
sub
jge
pusha
adcl
or
adcb
inc
jae
xor
mov
add
push
ljmp
sbb
cld
imul
mov
ret
mov
cmp
mov
inc
fwait
adc
mov
cmp
icebp
jge
jno
jg
or
sub
mov
mov
xchg
cmp
xchg
fadds
repnz
jl
ret
jmp
fnclex
mov
subb
stc
cs
add
jae
cmpsl
adc
aas
xchg
gs
push
add
out
in
cli
arpl
sarb
lock
out
push
cmp
ss
mov
jnp
jmp
add
gs
xlat
mov
mov
lret
dec
mov
jle
inc
sahf
fidivs
cmpsl
popf
imul
add
aam
or
nop
cwtl
jns
sbb
inc
xchg
popa
push
xor
mov
cmp
pop
jge
sbb
adc
shlb
adc
mov
lahf
f2xm1
or
xchg
cmp
mov
les
pop
lods
cmp
ljmp
jne
mov
out
mov
aaa
jb
fnstenv
push
cwtl
ficoml
and
ret
pop
xor
mov
adc
les
insl
pop
aaa
sahf
orb
mov
cmp
popf
or
push
les
aaa
xor
cltd
sbb
js
shrb
bound
fisttpll
xchg
inc
lret
lahf
dec
stos
mov
mov
ljmp
inc
and
mov
or
bound
mov
into
enter
addr16
in
mov
and
xorb
mov
in
mov
test
xlat
lods
out
push
push
lods
or
je
popf
dec
in
cli
loope
shr
sbb
bound
insb
test
adc
lret
jne
pop
mov
cmp
push
mov
mov
aaa
xchg
xchg
cmp
clc
pop
xor
addl
xlat
and
cmpb
xchg
jmp
xor
adc
push
mov
mov
in
je
xchg
mov
or
mov
lds
pop
out
push
lods
insb
in
pop
push
pop
pop
mov
jl
sub
aad
popf
cmp
repnz
test
dec
bound
mov
ret
fimuls
cmp
ss
dec
jb
push
bswap
and
or
in
add
dec
adc
aad
xor
stos
or
addr16
out
pusha
stos
mul
or
out
adc
movups
push
nop
xchg
mov
mov
ds
or
das
in
fdivs
aas
adc
in
add
dec
and
dec
ret
cmp
mov
cs
cmp
mov
ficoml
lret
dec
mov
lods
out
clc
fistl
idiv
jmp
stc
jo
mov
cltd
fstpl
jnp
dec
out
and
sbb
iret
imul
adc
cmpsl
adc
aam
jo
mov
daa
or
sbb
lods
add
dec
pop
jns
loope
cmc
add
xchg
sub
stos
push
pop
add
rcrb
fbstp
sbb
stos
arpl
mov
in
mov
outsl
daa
push
xchg
mov
ljmp
sbb
push
adc
lcall
ficompl
push
xor
xor
lea
xchg
mov
into
pop
xchg
sbb
int3
es
ljmp
sti
push
push
lcall
shrb
adc
adc
clc
jmp
fidivs
ficoml
fdivrl
sbb
xchg
inc
inc
fwait
and
dec
jge
pop
jb
iret
mov
iret
push
icebp
jno
jns
pusha
out
dec
and
gs
xrelease
into
xchg
jne
push
sbb
lds
mov
aaa
loop
ret
dec
mov
pop
sub
test
shr
push
cmp
sahf
push
xchg
xorl
daa
xchg
cwtl
adc
xor
imul
imul
lahf
mov
in
and
and
int3
out
add
push
sub
gs
je
clc
mov
leave
or
mov
pop
imul
xlat
fwait
insb
andl
ss
sbb
mov
and
jb
stc
je
cmp
cltd
push
push
fsubrp
pop
je
leave
jnp
lods
jp
or
test
sbbb
and
adc
fs
jmp
add
mov
loopne
sub
into
cwtl
popa
out
out
cmp
rcll
repnz
sti
mov
sbb
and
inc
fdivrs
mov
sub
add
in
dec
je
and
and
mov
ret
imul
incl
pop
mov
sbb
add
shlb
cmp
cmp
cli
lock
or
lret
rcll
out
jnp
nopl
push
mov
ds
into
xchg
movsl
xchg
mov
mov
jae
add
lret
inc
jne
addr16
dec
mov
jmp
mov
nop
add
inc
dec
insb
jl
scas
add
out
mov
daa
sbb
push
inc
fidivl
inc
jae
xor
sbb
xor
je
cmp
ja
lahf
inc
cmp
sub
inc
push
jmp
insb
mov
jl
aam
cwtl
cwtl
testl
pop
inc
xchg
or
lret
test
fistpl
inc
or
cltd
jg
movsl
std
dec
ds
clc
ja
sbb
inc
push
lret
or
ljmp
mov
sbb
popa
fs
mov
adc
iret
movl
adc
sahf
out
je
lock
rdseed
mov
cli
addr16
inc
jnp
jns
cmp
push
mov
push
add
mov
lods
inc
rcr
fcmove
divb
push
adc
sub
pusha
xchg
jge
inc
mov
int
and
jecxz
pop
or
je
movl
insb
lds
pop
cs
add
mov
xlat
pushl
cmp
push
cmp
vmovups
push
lods
loop
and
adc
sub
out
pop
push
xchg
or
dec
dec
mov
sub
sbb
roll
shll
daa
pop
rcll
test
jl
adc
addr16
stos
push
push
sbb
leave
push
shll
mov
in
repnz
addr16
jne
adc
shrb
sbb
mov
dec
xchg
inc
or
cld
sub
push
mov
and
sar
int
xchg
adcl
cs
das
sahf
cmp
in
push
popf
dec
and
xchg
dec
pop
int
cmpsb
inc
das
aam
int
fists
inc
movsb
mov
dec
dec
xlat
or
insl
add
pop
push
shll
lods
mov
xchg
xor
dec
lods
mov
iret
fimuls
dec
or
lock
and
repz
movsl
sub
in
xchg
out
inc
fwait
dec
icebp
ja
pop
jge
lods
xchg
ja
insl
and
jo
hlt
mov
pop
add
mov
les
nop
data16
lea
and
ja
cli
outsl
cmp
mov
stos
xchg
fstps
aas
in
mov
fwait
es
inc
pcmpgtw
xchg
dec
pop
scas
add
add
in
sbb
and
ret
daa
ds
inc
loop
lret
mov
xchg
cmp
cmp
sbb
adc
dec
cs
cmp
sti
mov
add
out
adc
ret
out
cltd
cmp
adc
and
incb
das
jno
in
sub
test
sub
sbb
sbb
push
mov
sbb
jle
xchg
jo
dec
add
rcrb
fldt
add
hlt
mov
add
xchg
stos
and
mov
adc
rorb
add
mov
cmp
lret
fidivrl
xlat
loopne
mov
inc
mov
lret
fs
jmp
ss
and
sub
insl
ljmp
xor
test
cld
inc
push
notl
lods
adc
xchg
xorl
daa
les
inc
nop
ss
sub
pop
add
dec
or
shrl
or
pop
xchg
inc
lds
push
out
pop
movsl
xchg
movsb
jae
ss
and
jg
aas
stos
sub
inc
dec
push
outsb
adc
lock
or
cmp
rcll
ljmp
jecxz
xor
sub
lods
imul
out
mov
lahf
aaa
mov
xor
xchg
adc
jo
cmc
cmp
out
les
jp
adc
clc
mov
push
sub
mov
sar
mul
mov
add
cmpsb
xor
ja
pop
or
test
fisubs
sub
adc
cli
test
xchg
xchg
call
add
mov
fldenv
mov
aaa
fldenv
jge
cmpsl
sarb
mov
mov
mov
jecxz
gs
dec
xchg
adc
push
mov
cmp
test
adc
sarb
jne,pn
outsb
shl
fimull
cmpsb
and
testl
or
test
out
mov
nop
lcall
sub
scas
test
shl
aam
loop
sbb
adc
xchg
sub
je
sahf
ss
cmp
int
cli
div
mov
lods
sbb
dec
jae
jp,pt
jbe
sbb
scas
sub
mov
lcall
pop
mov
sub
shlb
std
popa
cwtl
and
jle
das
xor
push
xchg
dec
cmp
mov
and
pushf
sbb
sub
int
lds
adc
popf
ret
jp
test
popa
push
stos
inc
lret
jmp
icebp
inc
sti
sarl
jecxz
sbb
fists
push
iret
mov
push
ror
bound
fdivrl
sbb
dec
loop
sub
scas
dec
in
enter
subb
sbb
popa
js
dec
inc
mov
fisubl
dec
enter
jmp
jmp
enter
push
std
mov
das
pop
hlt
pop
imul
xacquire
add
push
xchg
icebp
inc
fcmovb
out
dec
div
shl
push
lods
lahf
sub
mov
insb
inc
dec
into
cld
push
shlb
sbb
jge
addl
and
decb
xchg
inc
loopne
or
xchg
inc
push
outsl
lret
jl
mov
mov
jae
lock
test
out
cmpsl
inc
pop
cmpb
sahf
xor
adc
mov
sub
movsb
movsb
hlt
fdivp
subb
sti
test
inc
xor
jl
mov
add
lea
out
data16
adc
push
ss
sub
repz
ljmp
jg
adc
cs
adc
cmp
or
loopne
popa
inc
js
inc
sbb
xor
push
in
mov
sbb
clc
call
mov
jbe
pop
mov
inc
jecxz
fsubrl
js
adc
pop
jns
leave
xchg
push
sar
add
pop
lds
mov
or
mov
jecxz
fsubp
popf
xor
sahf
ds
xor
mov
inc
idivb
jne
add
das
pop
pusha
iret
sbb
lcall
test
push
cmp
sub
testb
icebp
jns
ljmpw
or
icebp
mov
adc
jbe
xorb
idivl
lcall
or
sahf
ss
jbe
ja
jg
sahf
cmp
mov
imul
fadd
sbb
sahf
gs
mov
mov
jmp
dec
inc
int
dec
jl
mov
repz
aad
and
lods
aas
icebp
sbb
adc
enter
sbb
mov
inc
imul
mov
ss
adc
pop
jmp
pop
insl
addr16
lcall
adc
or
sbb
andb
sbb
aad
jge
insb
adc
and
dec
stos
jne
mov
fisubrl
pop
add
cmp
pop
pop
out
sbb
jle
dec
inc
imul
sti
xchg
push
pusha
dec
js
iret
xchg
add
sbb
aam
aas
sub
pop
imul
jg
add
sbbl
lret
inc
ljmp
out
movsb
push
cmc
in
inc
lret
push
mov
cmpsl
xchg
xchg
lds
and
xchg
cld
adc
mov
jg
mov
dec
sti
ss
repz
das
scas
aam
rcr
cmc
scas
sbbb
jmp
je
lret
frstor
cmp
and
or
in
adc
das
mov
loopne
pop
repnz
sahf
scas
das
mov
cmp
sar
jns
lret
xor
fnstenv
push
stos
add
fcmovnbe
sbb
push
aad
mov
fimuls
sbb
sahf
adc
pop
mov
imul
enter
inc
jno
lahf
mov
cmp
mov
inc
xchg
xor
mov
and
sbb
lret
push
jo
dec
ret
pushf
and
int3
mov
and
add
es
add
mov
shll
mov
mov
ljmp
dec
fcoml
test
push
out
xchg
push
pop
adcl
inc
adc
jbe
adc
jl
mov
stos
adc
pop
xor
insb
inc
lds
dec
sahf
mov
pop
pop
xor
jns,pn
test
gs
xchg
cltd
out
pop
or
data16
xor
lcall
and
push
andb
notl
jbe
in
inc
push
push
dec
subb
add
in
loope
hlt
test
jg
out
shlb
pop
adc
imulb
add
je
ja
cmc
jmp
mov
inc
shl
push
cld
sub
or
push
push
daa
jno
insb
push
mov
inc
shl
arpl
jmp
mov
rorl
loopne
aad
mov
xlat
xor
in
sub
pop
sub
out
pxor
repz
pop
je
dec
stos
add
pop
and
ss
jae
xor
mov
sbb
xorl
sub
lcall
inc
xchg
jnp
js
dec
or
sbb
sbb
and
inc
pop
inc
bound
dec
cld
lret
push
sti
in
sarb
mov
add
ljmp
lods
lretw
or
and
mov
push
cli
jecxz
fs
xor
push
mov
pop
orl
inc
mov
cmp
jo
scas
dec
jne
and
fwait
out
insl
or
out
movsl
in
stc
xor
adc
mov
loop
lea
les
pop
in
lret
mov
ss
mov
xchg
mov
push
jge
cmpsl
add
or
dec
call
mov
add
jecxz
inc
push
jle
adc
pop
xor
xlat
in
and
add
movsl
mov
icebp
xor
cmc
push
push
mov
mov
cmpsl
sbb
jle
imul
sbb
jmp
xchg
push
mov
scas
in
mov
insl
inc
je
dec
mov
mov
dec
int3
aad
arpl
or
or
jae
scas
das
inc
mov
in
test
xor
daa
push
inc
sub
in
mov
mov
jmp
mov
mov
test
push
lods
xchg
pop
sbb
cmp
fmuls
push
sub
and
xor
pop
inc
faddl
loop
inc
hlt
adc
mov
outsb
rcll
inc
pushf
cmp
insb
push
mov
das
call
fistl
and
jo
inc
je
mov
sbb
pand
sarb
inc
jg
pop
dec
sti
jg
cwtl
add
inc
fisubrs
ljmp
adc
xchg
stc
iret
xchg
and
ja
out
cmp
push
lret
mov
xchg
fimuls
sub
mov
jmp
adc
sti
mov
and
xchg
xor
dec
xchg
iret
dec
mov
pop
xchg
movsl
loop
enter
and
inc
stos
nop
adc
out
xor
push
push
in
jb
test
mov
gs
xchg
pop
mov
xor
pop
dec
fsubrs
sub
xchg
aas
jo
out
push
or
jb
jns
mov
imull
movsl
icebp
and
mov
push
js
mov
in
xor
cmp
jge
xor
cmp
mov
adc
sbb
sti
sbb
aad
shr
xlat
subb
lcall
lahf
sbb
outsb
shl
inc
into
xchg
jo
mov
xor
shrb
inc
or
les
popf
pop
xor
aad
xchg
cli
popa
movsl
push
sti
icebp
cbtw
sbb
dec
icebp
sahf
pushf
add
scas
daa
xor
push
or
leave
or
je
loopne
popa
insl
ret
mov
sahf
sahf
dec
bnd
mov
insl
pop
roll
xchg
add
adc
inc
sbb
out
bnd
lahf
iret
lcall
push
in
xchg
cs
icebp
dec
pop
push
jno
mov
nop
pop
jbe
and
fdivs
sahf
and
pop
adc
in
in
faddl
pop
jl
fnstcw
xchg
punpckldq
ret
shlb
cmovne
inc
out
fucomi
cltd
add
call
pushf
mov
mov
jne
mov
push
add
jno
std
mov
fildll
dec
cmpsb
push
pusha
lods
pop
ror
hlt
stos
push
mov
repnz
xor
push
xchg
cmp
dec
inc
jns
aas
xchg
ret
cmp
ss
dec
rcll
push
mov
xlat
cltd
call
movsb
cmpsl
jb
lret
add
mov
test
mov
fdivr
inc
inc
arpl
lret
add
and
cltd
jne
jns
adc
push
imul
cmp
xchg
aas
cltd
es
xlat
out
out
sub
fldl
enter
dec
and
sub
or
xlat
out
push
mov
lahf
cltd
aam
mov
test
pop
in
aad
pop
cmp
lea
cmpl
pop
imul
or
and
mov
out
out
mov
pop
jb
pop
add
push
ficoms
mov
jne
adc
xlat
push
dec
loop
out
ss
mov
jae
ss
xchg
xlat
int3
cld
push
cmp
pop
cmp
pop
lods
xchg
add
dec
push
popf
mov
jno
out
jnp
jge
fisttps
xor
mov
push
push
cwtl
push
adc
mov
lock
fwait
add
popf
je
mov
addr16
cmp
call
dec
fwait
xchg
das
js
and
lock
xchg
scas
push
push
std
mov
jb
sbb
movsl
fisubrl
mov
nop
fs
lret
jl,pt
ljmp
inc
call
push
jmp
lods
jmp
pop
mov
mov
pusha
jge
adc
cmp
jnp
jne
pop
dec
xchg
imul
insl
push
inc
xor
lds
sbb
fldln2
movsb
xchg
scas
cld
movnti
leave
jo
movsb
sub
cmpsl
rcl
jb
daa
inc
xlat
and
sub
and
int
sbb
jae
xor
push
and
out
fmul
das
mov
xor
repnz
dec
inc
mov
pop
sub
fcoml
cmc
jmp
scas
lahf
mov
lret
outsl
push
dec
cmp
add
cwtl
inc
repz
dec
push
daa
clc
adc
jae
loop
dec
jne
popa
pop
xchg
ret
jge
rcrl
push
test
xlat
fcompl
adc
sbb
gs
mov
dec
jmp
jbe
xchg
inc
push
mov
call
loop
push
in
mov
loopne
std
lahf
dec
lods
fdivs
sar
push
or
fcmovnu
cltd
push
fmuls
cmp
addr16
test
xchg
mov
inc
mov
ret
test
das
addr16
mov
pushl
xor
jecxz
mov
ljmp
jo
xchg
sti
dec
fnsave
dec
pop
out
xor
iret
int3
dec
mov
fs
cmovno
movsb
out
jae
cli
mov
cmp
pusha
lods
mov
jae
fadds
cs
loopne
imul
in
mov
cli
pushf
jg
jge
dec
popa
mov
push
lds
add
xor
jge
gs
mov
repnz
mov
mov
mov
lret
loop
inc
repnz
fwait
aaa
cmp
xchg
sub
lds
addr16
in
and
loope
jnp
cmp
fwait
or
lods
push
jecxz
stos
mov
jbe
arpl
sbb
sub
pushf
push
cmc
out
outsl
std
rclb
xor
lahf
out
lret
push
mov
push
cmp
sub
int3
mov
loopne
mov
test
push
xlat
lock
push
inc
inc
addr16
jne
jmp
and
cmp
pop
cmpsb
mov
std
ret
stc
pop
xlat
leave
xchg
lahf
lods
outsb
cmp
ficomps
cmp
enter
jmp
jmp
sbb
mov
pop
fxch
dec
fs
scas
int
fsub
lret
ret
stos
mov
data16
bound
pop
mov
mov
xor
shrb
sbb
loop
out
in
decl
gs
ds
jmp
dec
push
movsl
fbstp
dec
divb
push
mov
mov
int
test
test
xor
xchg
sub
test
sbb
cltd
fcoms
lods
xchg
fs
shr
lds
sti
ret
lcall
out
pop
push
stc
jnp
sub
add
cmp
loopne
push
xor
mov
inc
scas
pop
test
lahf
sub
inc
sbb
mov
int3
std
push
mov
jne
mov
loop
in
sub
xchg
lahf
mov
das
xchg
pop
insl
movsb
jne
xor
mov
pop
cmp
jne
mov
ss
or
fildl
lock
jl
jb
adc
mov
in
pop
lock
mov
xchg
sbb
paddusb
pop
addb
push
js
adc
pop
outsl
add
fsts
lret
sbb
fistl
push
push
xor
idiv
in
je
sti
dec
call
or
adc
cmp
aas
xchg
jmp
mov
filds
push
dec
push
lods
aad
xchg
push
sbb
mov
inc
xchg
clc
sub
stc
inc
xchg
loope
leave
int
adc
push
mov
iret
mov
int
sahf
out
out
and
cmp
clc
sbb
cmp
or
inc
inc
xchg
dec
movsl
mov
ffree
sub
mov
jge
xchg
push
xor
inc
repz
outsb
stc
xor
clc
popa
mov
aas
cs
inc
and
mov
cwtl
stc
mov
leave
mov
hlt
mov
mov
push
dec
mov
adc
jmp
in
call
aam
ret
push
inc
mov
jbe
inc
jnp
mov
sahf
inc
mov
fimull
enter
jl
stos
repnz
mov
imul
cwtl
push
pop
fsubs
mov
or
into
mov
dec
outsl
lock
mov
sub
add
mov
inc
mov
imul
pusha
sub
pop
xor
pop
mov
sub
pop
and
das
outsb
jp
push
test
loopne
and
push
cmp
divl
jno
cmp
es
test
adc
mov
loop
push
cmp
bound
push
addr16
xor
xchg
lret
fidivl
mov
pop
xchg
scas
movsl
loope
scas
mov
lahf
cli
movsl
fdivs
rol
pop
lods
mov
and
sti
imul
aam
adc
mov
lods
add
mov
jecxz
mov
insb
aam
cs
je
stc
sahf
jp
pop
mov
inc
jns,pn
ds
fwait
test
sbb
test
loopne
push
frstor
outsl
mov
dec
mov
mov
inc
daa
ss
imul
or
ficompl
lea
sub
xchg
pop
pop
cmp
jp
jmp
pop
dec
fwait
inc
jbe
xchg
adc
jno
std
leave
out
cld
mov
xchg
mov
add
ret
std
popa
mov
outsb
mov
jle
inc
adc
mov
jae
mov
out
cld
test
inc
test
fstpl
sbb
lret
fwait
aad
lahf
lcall
push
mov
or
push
push
outsb
mov
inc
xor
push
call
mov
adc
xor
pop
mov
push
lahf
arpl
nop
and
push
lcall
mov
les
cmp
mov
jb
pop
xchg
inc
mov
js
outsb
push
ret
mov
inc
jge
out
cmpsl
cmpsl
lea
mov
je
inc
xor
aad
mov
inc
les
bound
push
jmp
in
xchg
out
es
fwait
sahf
adc
fdivr
daa
push
pop
or
push
mov
xchg
inc
jae
out
mov
out
push
add
and
adc
jo
push
fwait
lea
jecxz
sbb
repnz
adc
mov
aam
out
sub
outsb
xor
xchg
adc
daa
inc
sahf
inc
pop
or
cmp
test
pop
mov
std
mov
inc
cmpb
test
or
mov
pop
jnp
or
push
and
mov
aaa
push
shrl
loope
adc
test
pusha
jb
aam
dec
push
dec
js
xchg
xchg
sub
push
push
xor
and
or
mov
xor
lret
jg
mov
scas
std
arpl
out
cli
cmp
lods
sbb
lret
or
jmp
shlb
adc
add
jl
jmp
mov
lcall
movl
adc
test
insb
movsb
fsubs
mov
scas
out
rclb
sbb
jecxz
mov
dec
xchg
mov
sub
inc
pop
mov
rclb
add
test
mov
push
mov
cmp
mov
push
pop
sahf
adc
sbb
adc
add
push
or
xchg
inc
das
sub
inc
push
sbb
sarb
rclb
movb
aaa
rcl
mov
sub
push
call
xchg
lcall
mov
sub
cmp
fstpt
cwtl
xor
push
mov
xor
dec
test
fimull
aas
lahf
adc
cmp
test
mov
push
fiadds
add
out
mov
aaa
hlt
nop
xchg
mov
adc
lret
add
leave
das
pop
daa
cli
xchg
sub
test
mov
scas
mov
loopne
and
xor
insl
cltd
inc
in
or
inc
inc
fidivs
fsubrs
jbe
shrb
ret
call
adcl
bswap
enter
and
and
sub
xchg
mov
pop
cmc
or
mov
jmp
or
fwait
push
es
cmp
popf
insb
cmp
outsl
push
mov
jnp
movsl
repnz
lret
fs
push
jmp
ja
int3
lods
jecxz
xor
sbb
rep
scas
into
sub
xor
loope
and
aaa
pop
mov
lahf
cmp
imul
inc
add
inc
inc
inc
lock
and
scas
popf
ljmp
nop
jge
ret
sarb
sub
jnp
push
addr16
mov
or
arpl
ljmp
les
mov
push
xchg
mov
fwait
je
jle
in
and
popa
or
adc
aad
int
cmp
inc
xchg
cld
jae
leave
loopne
push
in
in
pop
nop
mov
sub
jbe
bound
xchg
adc
out
inc
lret
sbb
in
pop
add
scas
out
lahf
lahf
insb
xor
xor
pop
mov
test
aam
dec
xor
mov
lcall
xchg
push
sub
push
xor
cmp
adc
mov
mov
mov
sub
adc
and
ljmp
and
xchg
bound
mov
jle,pn
mov
mov
out
outsb
lahf
scas
inc
ret
ds
in
lea
and
xchg
ret
aad
pop
inc
jp
or
ror
fidivrs
and
jb
imul
sbb
test
xor
out
pop
jl
or
inc
jge
jae
loope
sti
int3
dec
lods
mov
pop
nop
adc
sbb
enter
cmp
jp
subl
push
cmp
inc
lahf
xchg
idiv
mov
and
jle
dec
mov
cli
or
xor
mov
pop
jmp
fmuls
jbe
call
ret
aaa
cwtl
movsl
out
or
mov
cli
and
subl
dec
dec
and
push
in
jg
dec
jno
xchg
daa
in
fmul
iret
pop
lret
lods
adc
cld
cli
mov
in
push
mov
jbe
sub
push
jmp
shll
jp
outsl
mov
and
testl
pop
imul
imul
push
inc
insb
outsl
rclb
jle
insb
jecxz
sbb
mov
sub
push
imul
shll
outsb
push
mov
pop
ss
idivl
adc
imul
cmp
out
mov
pop
sahf
ss
add
jae
rclb
data16
outsb
and
call
jg
adc
pop
xchg
dec
pop
shrb
inc
out
adc
fidivs
push
push
push
pop
ds
push
repz
and
cs
mov
stc
cltd
xor
jbe
js
in
lahf
ljmp
jle
mov
jle
sbb
hlt
loope
out
sub
pusha
ss
ds
ret
cmp
ljmp
mov
cltd
cmpsb
mov
push
push
xchg
mov
sub
xor
inc
addr16
movsb
and
scas
aaa
pop
push
or
sbb
sbb
loop
rolb
mov
in
and
adc
jecxz
jo
je
dec
jno
and
jne
xorb
cmp
sbb
or
cs
dec
sub
jmp
ds
cli
push
inc
aas
testl
adc
adc
out
mov
sub
inc
mov
ret
cli
mov
test
andl
pop
push
leave
lds
mov
dec
fidivrs
popw
mov
arpl
sbb
jbe
sbb
xor
shrl
out
push
mov
mov
insb
lods
insl
addr16
dec
daa
jl
ficompl
clc
and
das
mov
xor
xchg
adc
pushf
xchg
add
stos
vandps
addr16
xor
add
inc
imul
and
adc
push
sub
pusha
cmp
jg
or
cmpsl
scas
mov
test
pushf
mov
mov
icebp
inc
data16
xchg
pop
jo
addl
jmp
jl
sub
jl
dec
shl
out
out
cli
sub
cmp
scas
in
and
sti
loop
dec
jnp
pop
cwtl
pop
push
test
scas
add
xchg
dec
out
jb
data16
mov
sbb
adc
mov
sub
inc
loop
push
jno
hlt
mov
sahf
mov
lock
call
jbe
inc
ret
cmp
popf
inc
addr16
leave
js
sbb
and
pop
xchg
stos
outsl
cwtl
stos
outsl
xor
rcrb
jp
cmc
cli
push
test
cmp
xor
ret
ja
repnz
xor
sub
std
in
sbb
dec
ja
mov
test
stc
lret
dec
mov
pop
popf
pop
popf
add
add
arpl
test
mov
mov
or
sahf
popf
jmp
pop
pop
mov
cmp
xchg
stc
pop
mov
pusha
add
stos
xchg
pop
add
mov
sub
sub
out
ja
inc
jmp
fists
out
pop
rcrb
xor
sub
jb
sbb
scas
movsl
push
das
pop
pop
int
ds
sbb
cmovns
jle
test
sbb
xlat
lds
outsl
jg
int3
mov
sti
std
cmp
scas
rcrl
jmp
mov
loopne
fistps
mov
jne
sub
pop
push
cmp
adc
stos
popa
data16
mov
mov
push
out
push
pop
movsl
add
js
insb
jg
leave
pop
out
comiss
popf
mov
cmp
out
daa
jnp
movsb
data16
dec
frstor
cli
xchg
add
fnsave
stc
push
fdivl
aaa
test
pop
lods
xchg
sbbb
fistl
ljmp
or
jnp
ljmp
xchg
mov
cmp
mov
add
xchg
mov
cmpsb
out
cmpsb
inc
push
nop
shlb
fwait
dec
in
sub
pop
or
mov
or
adc
pop
dec
jge
or
mov
mov
dec
int3
fld1
jge
jo
pop
jns
incl
push
cmp
movsb
xchg
mov
cld
push
enter
fidivs
movl
and
out
jne
dec
pop
xor
in
insl
repnz
rep
jnp
push
into
cld
and
xchg
fs
pusha
jns
stos
adc
mov
sbb
xor
xor
mov
daa
in
sahf
std
fdivr
push
outsl
enter
pushf
negl
lret
test
outsb
cwtl
xchg
in
test
add
mov
cs
cmc
xchg
outsb
xor
mov
lods
xchg
test
repnz
jle
cld
mov
push
dec
sub
repz
insb
pop
mov
movl
jb
cwtl
ret
dec
sbb
pop
js
xchg
sbb
adc
inc
stos
lcall
int3
pop
sub
pop
push
aam
or
ja
dec
fisttps
sbb
filds
fsubrs
adc
xor
jbe
insl
mov
ret
pushf
add
inc
cmpsl
stos
cmp
push
aas
fsubl
or
aad
ss
jge
mov
add
pause
js
cmp
xlat
aas
dec
popf
add
jno
and
jo
and
xor
test
aam
stos
pop
dec
fdivr
xor
sbb
xor
xchg
cmpsl
and
pop
mov
mov
pop
lea
fwait
inc
repnz
outsb
aaa
in
adc
dec
movl
sbb
rcrl
add
add
jle
xchg
into
mov
aam
insl
pop
dec
int
sti
xchg
fmuls
add
push
mov
outsb
hlt
jecxz
push
fidivrs
cmpsb
outsl
jno
inc
push
mov
xor
sub
aad
aaa
add
jnp
xlat
clc
imul
jl
daa
lret
push
cli
xor
in
push
jl
pop
inc
mov
push
and
notl
and
dec
inc
fldenv
mov
push
fstpl
cld
pop
jle
mov
fcomps
sub
testl
push
and
arpl
clc
ja
or
mov
inc
jp
movaps
bound
call
add
sbb
lea
loop
add
cwtl
aam
nop
fiaddl
add
ja
dec
xlat
std
fsubrs
imul
ret
shr
mov
ret
push
loope
dec
stos
sahf
or
add
cltd
in
inc
mov
sbb
sbb
xchg
fwait
mov
insl
mov
mov
pop
xor
loopne
out
sbb
test
add
ljmp
add
jge
xchg
pop
xor
hlt
rorl
add
mov
xor
sahf
in
jbe
sbb
outsl
xor
popa
hlt
cwtl
mov
push
inc
add
sub
inc
cmp
push
fistpll
cmpsl
cmp
repnz
aaa
mov
sub
in
pop
test
sti
and
inc
mov
pop
adc
jns
mov
test
imul
ss
fs
sbbb
movsl
rorb
and
mov
mov
lahf
pop
push
sarb
ret
push
and
ds
inc
xchg
scas
add
fsubrl
adc
add
out
mov
fsubl
mulb
inc
lods
adc
mov
sti
inc
adc
and
lock
scas
das
bound
jno
hlt
jge
or
adc
fcoms
sbb
cmpl
repz
dec
jmp
out
pop
cs
popf
fsts
inc
orb
pop
lods
arpl
push
sub
cld
mov
inc
enter
test
loop
push
cmp
movsb
mov
dec
mov
and
pop
inc
dec
pop
pop
sti
sub
cmp
test
mov
les
test
jbe
fstpl
dec
jae
sti
pop
and
inc
mov
test
fistpll
fstpl
cwtl
pop
pop
mov
dec
lds
xor
in
mov
jcxz
in
push
out
jb
and
mov
jb
xchg
sbb
xchg
dec
add
cld
in
repnz
push
mov
jge
dec
xchg
orb
pop
jl
inc
lods
cltd
pop
stc
loope
bound
popf
mov
stos
add
repz
lds
sub
jne
in
pop
test
dec
ja
and
jge
cmc
cmp
das
and
out
lcall
pop
mov
inc
int3
inc
adc
neg
sahf
adc
cld
pop
adc
sbb
mov
js
add
sahf
adc
in
adc
call
pop
fimuls
xchg
out
push
or
and
push
mov
ss
jnp
adc
leave
cmp
jno
fdiv
fidivl
gs
fldl
xchg
je
add
rcll
inc
leave
aad
mov
xchg
inc
dec
jp
xorb
cltd
adc
mov
lds
cltd
push
add
mov
xchg
mov
bound
popf
leave
jmp
pop
pop
sub
push
pop
lret
pusha
stos
add
aad
loope
mov
cltd
in
rolb
xlat
or
xlat
ja
mov
dec
xor
fsubrs
cmpsl
popf
sub
loop
out
xor
out
dec
insb
aad
add
mov
mov
xchg
and
xchg
fdivrl
sbb
je
nop
xlat
mov
xchg
flds
repnz
xor
and
cmpsb
xor
dec
sub
pop
pop
push
sbb
rorb
out
fisubrs
pop
xchg
jne
xchg
inc
sbb
test
sahf
test
std
ret
aam
daa
adc
and
mov
cmpsl
inc
data16
add
fsubl
dec
pop
inc
std
inc
push
or
xchg
push
aam
pop
lods
outsl
mov
cmp
xchg
leave
je
daa
popf
adc
in
mov
ss
jecxz
mov
mov
sti
stos
test
cmpsl
jnp
push
and
or
adc
jnp
lds
lret
es
xchg
ficoml
xor
test
les
push
jmp
pop
ret
fwait
pop
jno
pop
cmp
cs
mov
and
testb
mov
dec
loopne
das
jo
ret
movsl
xchg
clc
ret
cmp
jae
mov
pushf
push
mov
sarb
loop
adcb
dec
push
xorb
addr16
cwtl
gs
pop
mov
jmp
fildll
loop
inc
push
dec
cmp
sub
es
push
or
in
or
mov
nop
sahf
shrb
mov
dec
loopne
iret
adc
ja
cmc
xor
fldenv
ljmp
jg
or
mov
sub
cmp
jnp
or
nop
cmp
into
xchg
jmp
es
mov
dec
fwait
in
jne
lahf
stc
test
push
dec
leave
push
xchg
repz
push
data16
push
out
push
vpshufb
xor
pushf
xlat
mull
cltd
pop
add
pop
movsl
incb
mov
cmp
adc
je
cli
scas
mov
jp
ds
cmp
cli
jnp
cld
gs
cli
jmp
inc
mov
dec
xor
hlt
pop
xor
add
ljmp
lahf
pop
dec
dec
mov
ja
dec
sahf
cmpsl
mov
push
push
and
inc
pop
push
cmpsl
or
ret
fs
or
xchg
int
mov
jmp
xor
popa
jae
mov
and
cmp
outsl
inc
mov
mov
fwait
push
dec
push
adc
sub
shll
mov
xor
dec
sub
mov
and
lock
add
cmp
and
mov
add
in
ja
je
leave
icebp
clc
adc
nop
xchg
lcall
and
jb
sbb
repz
add
mov
loop,pt
rol
push
jae
movsb
add
dec
cltd
mov
rol
out
sub
sbbl
out
out
subb
or
in
dec
repnz
out
sbb
pop
call
rcrb
push
cmp
jge
popf
imull
dec
xor
pusha
cmp
jns
mov
sbb
inc
and
mov
out
inc
pop
adcl
mov
jne
ss
xchg
inc
div
mov
mov
dec
iret
out
test
cmp
fs
das
fsubrs
imul
add
mov
jb
push
add
aas
push
dec
jle
push
cmp
xor
xor
shll
bound
repz
inc
out
dec
mull
mov
ffreep
and
xorl
add
or
pushf
mov
cmpsl
and
repnz
pop
add
insb
mov
pushf
adc
push
addr16
cmc
lret
adc
es
gs
fstl
mov
not
jmp
imul
push
call
dec
test
lds
test
int3
bnd
mov
and
xor
int3
jmp
jno
fwait
or
scas
rol
mov
into
pushl
push
hlt
jne
sbb
and
out
testb
or
jp
sub
inc
ljmp
and
je
sub
sub
ds
mov
mov
aam
cmp
dec
ret
outsl
mov
jge
lahf
sbb
push
fucom
stos
loopne
enter
int3
hlt
adc
add
add
add
add
nop
int3
fisubs
xchg
push
xchg
xchg
arpl
aam
fimuls
ja
pusha
xchg
mov
scas
scas
scas
enter
lods
jne
aam
sahf
mov
gs
into
pushf
les
jmp
out
xchg
imulb
lea
outsb
cld
inc
adc
stos
dec
shll
dec
arpl
daa
cmc
mov
and
inc
ss
mov
sub
sbb
pop
mov
jns
sub
and
ja
daa
dec
shlb
dec
sahf
sub
shll
push
lcall
popf
popf
dec
dec
cmp
stos
cmp
xchg
aad
pop
aad
adc
cmpsb
out
sbb
mov
out
pop
orb
pop
xchg
mov
sahf
jge
jb
fs
jle
dec
leave
mov
sahf
inc
adc
loop
out
adc
inc
mov
sub
cmpsl
push
roll
das
clc
push
mov
cld
add
testb
test
mov
push
leave
push
push
and
les
cmp
in
jb
clc
jns,pt
shrl
es
test
xlat
subb
mov
enter
xor
imul
add
xchg
scas
loop
cwtl
sahf
je
test
aam
imul
int3
out
out
testb
and
lods
ljmp
loopne
repz
lds
mov
test
mov
push
xor
shlb
popf
popa
dec
ja
dec
sub
or
jmp
popa
or
out
outsl
jb
mov
dec
inc
hlt
cmp
pop
loop
inc
idivb
cmp
mov
fucomp
adc
sbb
mov
pop
movsb
push
lea
jbe
mov
notb
jge
mov
popa
push
xchg
sub
push
dec
ljmp
add
jg
pop
lds
pop
daa
push
out
roll
jge
and
into
mov
pop
mov
cmp
jecxz
push
clc
add
and
in
and
cmp
jns
and
in
jl
outsb
iret
ss
insb
cmpsb
pop
lahf
sarb
jb
imul
and
inc
and
clc
int3
dec
jecxz
in
incl
lcall
pushf
in
or
cmc
scas
fmull
out
nop
jo
js,pn
outsl
sahf
repz
add
jge
mov
ljmp
push
out
add
jge
jmp
jnp
push
adc
sub
dec
cwtl
jl
cmp
nop
mov
push
jmp
insl
lret
daa
sahf
add
push
rolb
add
test
push
iret
mov
lods
pmaddwd
popf
shlb
xchg
add
cmpsb
lcall
lahf
fmull
aas
lret
lea
inc
jns
aad
or
mov
lock
mov
insl
aas
nop
inc
lods
popf
mov
mov
inc
xor
sbb
lods
sbb
aas
inc
int
iret
cmpsb
push
jge
ret
shll
insl
mov
cli
push
pop
push
imul
cs
mov
out
popf
imul
loopne
hlt
shrb
sahf
movsb
in
jg
add
sub
xchg
jle
pop
fwait
popf
addr16
out
lret
stos
or
lret
stos
add
cwtl
cmp
pop
pop
add
mov
mov
loope
dec
mov
mov
and
sarl
cli
and
les
lock
test
ja
int
shrb
stos
ret
cmp
adc
inc
es
bound
or
add
ret
add
dec
dec
cmpsl
lds
out
addr16
shl
sahf
pop
mov
dec
adc
or
pop
enter
test
insb
mov
or
and
das
scas
int
cmp
or
add
push
cmp
aaa
pop
inc
sbb
sub
test
dec
mov
jo
xchg
xchg
int
shrl
xlat
loopne
inc
cltd
clc
inc
jae
lcall
insb
or
ftst
scas
mov
es
fcompl
dec
mov
xor
jne
add
sub
jmp
pop
push
or
fadds
js
add
negb
jo
ds
add
and
pop
add
jb
inc
or
daa
lods
xchg
or
push
aam
out
insb
out
push
jp
int3
mov
add
lcall
add
mov
cli
out
insb
cmp
mov
in
cmpsb
push
fwait
or
sub
fstl
aam
inc
push
pusha
add
sub
cmpsb
aad
test
jecxz
jge
push
xor
pusha
inc
rcrb
jo
lods
lds
aas
aas
stos
adc
lahf
pop
mov
lods
mov
xor
push
xchg
mov
inc
outsb
mov
decl
mov
jge
iret
mov
gs
pop
cmp
out
jecxz
push
push
scas
pop
cmc
shlb
ret
adc
sti
rorl
push
cmpsb
jbe
outsl
xchg
and
jecxz
mov
xor
and
mov
test
cmp
sub
addl
adc
sub
icebp
je
shlb
push
dec
pop
sbb
adc
mov
shrl
lea
lret
jne
pop
rcr
hlt
fs
inc
mov
mov
mov
ret
test
popa
insb
fdivs
jecxz
jmp
ja
insl
mov
into
or
mov
aam
enter
mov
xor
jg
cmp
cltd
mov
or
imul
xchg
dec
add
aaa
lea
loop
addr16
jb
stos
pop
jb
das
cwtl
xchg
enter
xor
adc
stos
popl
push
orb
adc
test
incb
fdivrs
shl
push
inc
imull
pop
scas
scas
rolb
cli
mov
pop
mov
cltd
add
xchg
cs
or
int3
test
stos
sbb
aaa
test
mov
cltd
jo
in
dec
adc
sub
les
fdiv
cs
sahf
frstor
mov
xchg
dec
shlb
mov
xor
mov
insb
inc
into
movsl
or
push
aam
rclb
pusha
psubusb
sbb
pusha
sbb
mov
xor
in
inc
cs
iret
lcall
gs
flds
jle
mov
push
cmp
nop
and
or
inc
and
jno
shl
lea
xchg
pusha
aad
scas
in
xor
mov
mov
mov
mov
mov
jne
and
rcrb
fwait
mov
lods
dec
adc
lretw
ss
ret
dec
push
out
mov
lock
mov
cmp
cmp
mov
mov
popf
shrl
insl
pop
scas
sub
push
in
in
rcll
inc
aas
out
or
gs
cmpsb
add
adc
mov
jne
jecxz
jge
cmp
push
cltd
adc
adc
filds
or
sub
std
test
jbe
push
sbbb
push
lret
addr16
fs
rol
dec
pop
pop
adc
test
push
imul
pop
sahf
insl
sbb
aas
add
and
fwait
xchg
aas
fnsave
int
iret
jl
push
push
mov
scas
push
pushf
add
cmc
shr
or
adc
pop
nop
jmp
pop
ret
push
and
sub
movsl
push
fs
fnstcw
adc
int
loope
add
sub
pop
and
test
rorb
daa
leave
mov
test
push
push
cmc
aas
mov
cmpsb
inc
leave
pusha
cltd
subb
es
cmc
mov
xchg
mov
decb
pop
add
sbb
dec
pop
inc
xor
xlat
xchg
sub
add
jecxz
outsb
imulb
jns
add
jns
out
fimull
inc
shlb
dec
and
sbb
aaa
dec
jmp
aas
pop
mov
jmp
cmp
ret
js
insb
nop
add
mov
cltd
xchg
repnz
lea
inc
lcall
mov
mov
iret
add
and
adc
sbb
push
aam
leave
sbb
xchg
test
mov
inc
insl
jge
add
aad
lret
jl
cmp
sbb
jns
stc
das
lret
mov
xlat
adc
push
imul
cmpsl
les
cmpsl
cwtl
vcvtpd2dqx
sbbl
movsl
stos
sgdtl
sub
add
jg
faddl
pop
push
stos
punpckhwd
sbb
adc
or
repz
push
jg
dec
sahf
and
int
mov
dec
and
push
pushf
cs
mov
shr
mov
aam
inc
out
adc
rorb
test
lds
add
adc
mov
pop
xchg
adc
jg
mov
push
sbb
mov
or
adc
xchg
jl
movsl
test
enter
cmp
int3
in
xchg
or
add
jo
or
shl
add
imul
fwait
es
je
dec
pop
jp
xor
popf
cmp
jecxz
and
mov
shr
mov
int3
pop
xor
aaa
cmp
sarl
cmp
xchg
fsubrl
notl
pop
insb
in
push
inc
cld
std
arpl
sub
jae
ja
push
add
or
xlat
mov
in
mov
pushl
out
add
hlt
inc
and
inc
mov
das
insl
loop
jecxz
es
xchg
popf
xchg
inc
pop
or
jmp
xchg
xchg
sti
sbb
pop
gs
pushf
mov
mov
push
mov
mov
aam
ss
sub
xchg
jo
mov
push
test
jno
and
mov
push
cwtl
add
cmpsb
add
lock
mov
cli
jg
lahf
rcr
js
sub
cmpsb
lea
insl
fisubrl
inc
stos
add
add
push
jno
arpl
jge
lea
sbb
lcall
fcompl
xor
insb
ficompl
loop
jg
lock
push
mov
lods
clc
xchg
adc
daa
sbb
inc
mov
add
add
xchg
pop
repz
jae
sub
pop
je
jns
push
andl
test
sti
or
add
lods
cmp
or
sub
jmpw
mov
lret
cltd
shlb
mul
add
mov
outsl
push
cld
lea
out
sbb
sbb
fucomp
mov
pop
jmp
stc
or
dec
cmp
pop
cmp
adc
sub
es
pop
sub
cmpsb
sub
popf
rorl
and
idivb
in
lret
pop
pushf
add
sub
push
adc
sub
mov
and
push
lds
and
xor
sti
and
push
cs
int
cmp
inc
lcall
lret
sbb
inc
pop
rolb
sbb
or
into
mov
sbb
sub
ljmp
xchg
call
mov
lret
push
push
and
dec
cltd
and
popa
or
mov
cs
les
add
test
sub
movsl
movsb
popf
lods
mov
dec
repz
data16
lods
ljmp
xor
push
jecxz
or
cltd
cld
and
js
stos
xor
shrl
mov
jns
add
xlat
xrelease
test
jne
jmp
ficoml
mov
add
mov
push
lret
jb
dec
lret
add
or
fimull
or
adc
imul
fdivr
inc
push
cmp
into
fldt
mov
or
in
xor
jno
pop
push
sahf
pop
mov
insl
add
arpl
popf
cs
mov
in
bound
test
mov
inc
push
xor
mov
mov
mov
mov
ljmp
add
and
ret
inc
enter
mov
push
or
xchg
pop
cs
pop
sbb
cmp
sarl
sbb
dec
cs
clc
and
sub
stc
pop
leave
scas
cwtl
and
call
mov
xchg
xchg
adc
push
lods
ss
inc
inc
pop
movsl
or
fcompl
mov
cmc
cmpsb
or
sbb
cld
push
mov
xor
xor
nop
shlb
scas
shl
mov
mov
mov
int3
jae
push
adc
jno
jl
ljmp
mov
mov
jmp
xchg
bound
ja
out
sub
pop
cmp
push
pop
dec
dec
pusha
es
outsl
push
add
int
stos
xchg
loope
test
dec
pop
scas
cs
xor
jb
lods
push
bound
pop
rorb
int3
push
movsb
mov
js
enter
fcoml
or
or
inc
or
dec
je
das
loopne
dec
fistl
mov
and
out
mov
xor
dec
pushf
das
mov
inc
pop
sub
cli
je
mov
sti
sarb
outsl
insb
fwait
inc
mov
sub
ljmp
xorps
xor
add
pop
les
mov
jo
dec
mov
push
bound
mov
loop
push
sbb
es
in
stos
loope
out
pop
lahf
out
dec
jb
mov
cmp
stos
fidivs
stos
cmp
mov
inc
and
cmpl
mov
xor
xorb
lcall
shll
loop
mov
xchg
lock
mov
clc
ds
mov
cmpsb
repnz
out
pop
pushf
push
test
jns
mov
push
and
repz
in
xor
mov
inc
imul
scas
jl
inc
add
inc
lahf
mov
push
shlb
or
sbb
sub
cld
or
add
movsl
xor
and
enter
mov
jbe
inc
fwait
push
push
repnz
pop
cmp
mov
pop
pop
fistpl
leave
mov
cmp
push
dec
faddl
push
arpl
push
js
std
das
test
nop
inc
out
xor
xorl
inc
sbb
mov
pop
xchg
or
jl
jmp
dec
sbb
call
xchg
ret
call
sub
sub
cmp
sahf
dec
out
xchg
aas
bound
sub
mov
adc
sub
mov
negb
mov
or
pop
popf
loop
mov
xor
push
xchg
call
addr16
sbb
imul
jle
mov
repz
dec
shr
inc
push
mov
xchg
xor
xlat
fidivl
divl
pop
or
bound
test
push
cmpsb
jp
push
sahf
out
push
notl
inc
lret
or
pop
lea
pop
mov
lret
and
sti
mov
xor
jne
add
test
jecxz
adcl
push
sbbb
sbb
lock
out
aas
or
sbb
test
cli
out
fstp
call
push
aas
adc
adc
add
or
sub
je
sbb
jg
jb
dec
push
jno
or
xor
fwait
push
adc
mov
dec
inc
rep
xchg
aad
add
insl
cwtl
cmp
fs
jae
scas
lock
xchg
lods
or
lret
jle
mov
pushf
push
or
and
fbstp
or
or
jle
pop
cmp
fdivl
sub
aas
adc
mov
out
fs
add
sub
push
jge
lahf
stc
mov
cs
jle
jge
ss
add
out
or
add
int3
dec
pop
and
outsb
shll
jl
out
push
inc
popa
ds
hlt
js
jg
inc
xchg
xor
lcall
lret
and
lds
push
inc
adc
aas
push
mov
popf
and
fistpl
imulb
stos
jmp
xchg
xor
mov
cmp
insb
lods
xchg
outsl
sub
shl
cmpl
repnz
xor
pop
fistpll
std
and
mov
xlat
arpl
nop
push
pop
addb
add
sub
dec
xorb
push
sub
minps
lock
sti
in
dec
jle
rcll
inc
aas
sub
les
or
in
adc
stos
mov
xchg
hlt
push
mov
mov
stos
or
sub
test
fistps
jae
int3
xor
mov
mov
jae
lea
mov
or
pusha
lock
lcall
outsl
cmp
lret
cld
pop
or
sub
pop
mov
push
out
or
push
cmpsb
fcmove
fucomi
in
mov
dec
mov
pop
aam
imul
cltd
testb
mov
xchg
scas
mov
lods
sbb
pop
cmc
sub
aas
out
fidivrs
jmp
ds
cmp
and
in
orb
subb
inc
sbb
pop
mov
cmp
or
mov
jbe
mov
xchg
inc
sbb
jbe
dec
xchg
pop
in
mov
push
mov
xchg
ret
out
pop
fimull
fs
mov
inc
push
push
addr16
adc
mov
xor
sbb
leave
pop
xchg
aaa
inc
and
out
aad
cmp
sbb
sbb
add
clc
mov
dec
into
shl
out
insb
repz
int3
movsl
daa
test
sub
and
std
loope
ss
pop
cmp
mov
sub
push
adcb
je
fwait
les
push
int3
mov
icebp
jbe
arpl
jno
lods
xor
inc
aaa
dec
add
fists
mov
push
pop
sbb
push
or
imul
mov
lods
test
pop
adc
dec
into
in
mov
or
sbb
adc
xor
sbb
sbb
mov
je
inc
xacquire
sub
cmpsb
popa
lret
jge
ljmp
cwtl
lret
clc
outsl
sbb
movsb
cmp
cmc
inc
dec
xor
aaa
mov
or
insl
cmp
fwait
mov
inc
scas
adc
aam
inc
sarl
lock
push
lds
cltd
xchg
pop
pushf
lods
subb
inc
pop
dec
cmpsb
mov
lret
les
shr
pop
xchg
in
ret
cltd
fwait
push
scas
add
push
sbb
mov
mov
ljmp
dec
add
xchg
xor
jmp
pushf
scas
sbb
call
movsb
fcmovu
loopne
push
push
jns
rorb
jmp
stc
test
clc
fucom
inc
or
fstl
in
arpl
and
jnp
cltd
xchg
pop
add
add
or
inc
mov
push
mov
test
mov
test
pushf
sub
xchg
mov
cmp
outsl
fs
push
clc
xchg
out
mov
repz
aam
iret
pop
jmp
into
mov
add
cmpl
or
lea
test
adc
popf
mov
jg
adc
movsl
push
jne
jl
imul
loope
pusha
cmpsb
jge
test
cltd
and
push
and
inc
jp
cmp
xor
lret
leave
aaa
pop
test
adc
insl
cmp
pop
or
lahf
pushf
popf
cld
pusha
int3
mov
cltd
lods
adc
mov
pushf
mov
adc
dec
lret
adc
sbb
fisubrs
jne
push
mov
dec
sub
pop
sbb
cmp
outsb
insb
int3
mov
pop
jnp
xchg
add
sub
or
adc
and
jbe
popf
fcmove
imul
pop
or
add
add
into
loopne
sbb
lods
sub
jns
leave
cwtl
sbb
in
mov
cmp
or
lea
mov
mov
pop
loope
dec
cmp
jae
mov
inc
xchg
sti
push
jg
daa
and
or
jns
pop
mov
pop
sub
hlt
push
dec
cli
in
push
sub
push
xor
sbb
adc
mov
push
das
cmpsb
xchg
dec
xlat
pop
pop
shll
jge
jmp
out
insb
mov
add
xor
fadd
ds
int3
cmp
scas
jb
mov
jl
fimull
xor
sbb
cmpl
or
psrld
mov
out
inc
sbbl
inc
je
in
pop
and
je
sbb
imul
das
and
arpl
inc
ljmp
dec
clc
pop
inc
repz
call
mov
and
shlb
subl
jne
sbb
or
push
stc
inc
popa
orb
pop
xchg
shlb
dec
inc
mov
cltd
inc
push
xchg
push
pop
fidivrs
mov
and
int3
fcomp
xchg
push
cld
loopne
lods
stc
testl
lods
gs
sub
push
insl
jmp
adc
xor
adc
or
pop
or
hlt
enter
or
incb
inc
lcall
pop
pusha
sbb
mov
dec
and
mov
das
mov
pop
cmc
test
add
js
lods
mov
in
mov
adc
iret
icebp
or
inc
cltd
push
pop
repz
mov
or
xchg
sbb
int3
lret
pop
pop
or
sbb
adc
lock
fidivl
xor
shrl
insl
lret
mov
aas
cwtl
icebp
call
and
hlt
dec
insl
cmp
mov
fistpll
mov
and
ret
mov
movsl
mov
pop
je
repnz
mov
icebp
fwait
iret
lods
push
nop
fstpl
lcall
mov
loopne
cltd
push
mov
test
jg
popf
aam
pop
pop
cmp
push
test
jge
sub
sbb
pop
sbbb
divb
in
jno
outsb
and
or
dec
xchg
cmp
out
mov
add
pop
out
sub
shlb
xor
add
or
bound
pushf
iret
lock
push
dec
cmp
in
xchg
test
mov
dec
loop
or
popa
fxch
xor
mov
dec
dec
pop
dec
outsb
mov
xchg
mov
and
sbb
shll
mov
jne
sbb
fs
xchg
push
mov
inc
dec
push
pop
xchg
push
addr16
in
call
add
out
int3
pusha
ljmp
hlt
sub
movsb
cmp
dec
orl
cmp
mov
adc
sti
xor
ja
jle
sub
out
lock
push
or
test
add
leave
loope
dec
push
inc
ret
pop
and
out
les
adc
mov
mov
xchg
aaa
decb
pop
mov
pop
jno
fildl
push
lret
mov
idiv
arpl
xchg
icebp
gs
dec
and
test
xor
loop
mov
xor
mov
scas
xor
dec
mov
add
dec
gs
fistpl
xchg
and
sbb
or
movb
test
cld
pop
nop
lret
data16
or
add
sbb
inc
aad
mov
dec
xchg
or
push
sub
out
fisttpl
dec
jo
vandps
idiv
cmp
popa
ds
adc
mov
xor
inc
mov
aam
in
sbb
mov
jnp
mov
lock
stc
bound
and
jle
sub
mov
or
aas
push
lea
leave
xlat
int3
mov
inc
iret
scas
insl
or
call
jno
hlt
jg
jne
cmp
jp
push
pop
jecxz
out
cwtl
push
add
xor
sub
xchg
sbb
push
pop
inc
xchg
fwait
or
in
jb
popa
xlat
sbb
jae
insl
inc
pusha
cmpsl
or
lds
test
sub
and
gs
mov
push
das
adc
stos
in
push
mov
push
xchg
stos
mov
mov
add
and
loopne
mov
push
movsb
inc
mov
out
mov
insb
rolb
aas
test
imul
add
movsl
cli
sbb
pop
es
imul
rcll
mov
and
inc
mov
add
fwait
dec
and
stc
mov
adc
jg
in
insb
stc
mov
sbb
cmp
mov
pusha
xchg
fisttpl
negb
fildll
imul
not
mov
je
cltd
cmp
loop
jae
mov
aas
jmp
cmp
stos
pop
lahf
imul
mov
cwtl
push
xor
push
dec
jl
lret
lds
outsl
push
cmp
lea
push
push
sub
shl
in
inc
inc
mov
mov
pop
and
clc
xchg
adc
mov
popf
add
popf
inc
inc
lret
pushl
add
add
xchg
adcl
out
dec
in
sub
int3
cmp
loopne
jae
inc
sahf
addr16
ret
adc
and
jle
push
dec
mov
int3
stos
std
sub
push
cs
sub
xor
dec
daa
in
push
push
shlb
lods
fwait
popf
and
je
adc
mov
cmpsb
mov
or
test
or
sub
int3
insb
mov
push
jae
out
jg
hlt
jge
nop
mov
jns
add
gs
mov
adc
fsubs
mov
mov
lods
ds
adcb
cmp
sub
cmp
push
lea
and
push
je
lret
add
push
ss
in
fldcw
lret
in
test
neg
rcrb
cwtl
add
lea
std
out
or
repnz
xchg
insl
mov
int
imul
mov
or
mov
dec
xor
push
int
push
cmp
stos
add
cmp
jmp
test
jle
int
repnz
stos
push
fnstenv
cmp
xchg
dec
pop
mov
sub
divb
jne
cmpsb
push
fistpll
mov
jnp
sbb
dec
mov
subb
sbb
pop
es
push
jp
push
mov
pop
in
mov
xor
xlat
push
gs
test
mov
test
addr16
aas
mov
and
sbb
int
rclb
mov
js
mov
sub
sbb
dec
adc
shl
and
ja
test
dec
je
mov
add
mov
jmp
sti
scas
cmovs
mov
add
imul
loop
shl
mov
xchg
sahf
scas
aad
into
sub
push
add
adc
movsb
dec
jg
xchg
mov
je
or
idiv
push
mov
into
icebp
jae
xchg
xor
or
ret
or
lret
push
cmc
in
mov
mov
nop
cmpsb
das
movsb
and
mov
jb
or
dec
adc
adc
je
inc
ffreep
dec
iret
and
mov
nop
arpl
call
cwtl
adc
add
les
mov
ret
imul
sbb
orb
adc
sub
or
mov
mov
dec
int3
jae
popf
jecxz
cmp
mov
mov
test
jno
xchg
pop
inc
outsb
push
xchg
jmp
xchg
push
lahf
sub
sbb
scas
ror
aaa
adc
add
add
fwait
pop
and
imul
int3
pop
aam
push
gs
arpl
pusha
adc
aas
or
adc
insl
cmp
lahf
mov
dec
into
jae
xchg
and
sbb
or
hlt
in
jg
lock
inc
in
push
filds
mov
fmull
js
sbb
aas
jle
pop
jns
call
mov
rcrl
inc
lahf
push
rorb
loopne
cmpsl
lods
jae
pusha
call
adc
fs
fwait
pop
jae
mov
mov
js
out
mov
push
pop
add
sub
adc
jbe
sub
pop
popf
hlt
mov
rcll
push
int
stos
adc
mov
cli
das
or
sub
sub
insl
lahf
jmp
push
aam
imul
mov
daa
lds
or
pop
movsl
ljmp
or
inc
lahf
in
in
xchg
pop
sahf
dec
fdivp
ljmp
fmulp
xlat
inc
cwtl
and
cmp
shll
add
pop
adcl
popf
lahf
ja
push
pop
dec
ds
mov
xchg
cwtl
inc
js
xchg
xor
mov
jne
inc
pop
xchg
push
ja
inc
cmp
stos
popf
xlat
pop
test
les
dec
clc
in
mov
test
pop
mov
jp
mov
jmp
push
lock
in
dec
cmc
ss
roll
push
jecxz
dec
loopne
popa
ljmp
dec
adc
test
jl
cmp
jmp
cld
pop
rorb
ljmp
out
int3
jb
lock
cmp
and
les
lea
outsb
ljmp
adc
jle
mov
push
or
push
dec
nop
repnz
aam
fs
movsl
arpl
mov
inc
pop
dec
push
dec
cmpsl
fstpt
cli
imul
cmp
or
xor
add
and
mov
mov
repz
and
sub
xchg
call
imull
mov
sbb
push
cmp
nop
and
lods
cld
es
sti
pop
inc
jo
mov
cmp
add
fsts
inc
dec
ror
subl
inc
add
jne
int3
adc
std
mov
jae
xor
jecxz
mov
dec
cltd
fxch
sub
out
xorl
and
loopne
dec
xor
mov
fcmovu
cmpsb
cmp
xchg
ds
jecxz
mov
test
pop
sub
sub
sbb
add
cmpsl
out
push
dec
adc
and
fnstenv
dec
and
lock
repz
push
sbb
fdivs
mov
nop
lret
dec
sbb
seto
loop
cwtl
jb
push
xor
std
fldl
enter
push
inc
inc
mov
adc
cmp
sbb
fnsave
movsb
xchg
pop
loope
cltd
add
in
xlat
xor
test
xchg
mov
cmpsl
and
repnz
cs
push
loopne
push
addr16
insb
xchg
xchg
xchg
stos
cmp
test
jg
imul
in
sub
aaa
sub
es
push
or
and
sub
inc
aaa
les
out
data16
test
out
int3
addb
add
je
sub
stos
stos
loop
fs
mov
xchg
ret
inc
jbe
lods
scas
or
mov
xchg
scas
sbb
loop
jnp
je
imul
and
jnp
das
pop
icebp
cs
test
test
sub
rcrb
aas
cli
xchg
sbb
insb
push
push
cli
movsb
adc
js
mov
pop
pop
lret
adc
add
xchg
mov
cwtl
clc
mov
repz
mov
and
and
leave
or
pop
sarl
in
mov
lret
push
ffreep
movsl
mov
das
pop
in
enter
mov
dec
out
scas
cmpsl
jmp
mov
aaa
push
lock
lods
mov
inc
sbb
and
lcall
adc
std
xchg
add
dec
orb
fs
scas
shr
scas
mov
pop
push
cltd
movsl
adc
xchg
out
roll
dec
test
aas
in
pop
inc
out
lods
out
loope
into
adc
jle
sbb
enter
sbb
mov
out
cmpsb
scas
xor
and
add
enter
push
xor
movsl
aam
cmp
pop
int
cmp
push
inc
repz
sbb
mov
int3
shl
push
dec
or
jl
mov
push
sti
adc
mov
jp
sbb
in
pop
jge
add
adc
int3
ljmp
pusha
xchg
jns
clc
mov
shrb
cld
ja
aas
xor
xorl
test
insl
jge
mov
leave
ret
movsl
push
es
sub
lret
inc
outsb
pushl
mov
out
sbb
insl
addr16
fwait
mov
inc
int
loope
popf
mov
dec
mov
roll
fisubl
add
inc
sub
into
jb,pn
lods
mov
jge
mov
add
cmp
icebp
out
orb
pop
rcl
lods
mull
aaa
setae
jne
sbb
out
loopne
enter
cltd
and
or
or
stos
sub
dec
sbb
aad
inc
aaa
mov
fsincos
aaa
hlt
add
sub
lahf
loop
mov
sarl
out
xor
jb
and
inc
push
inc
inc
lea
or
out
inc
cltd
pop
or
gs
xchg
adc
mov
sbb
dec
jle
loopnew
ljmp
mov
outsl
pop
sub
rcrl
lcall
mov
inc
iret
jmp
mov
es
mov
mov
jae
and
ret
xor
lds
xchg
sub
sbb
mov
and
test
hlt
fisubs
xlat
movsl
enter
sub
xchg
aaa
push
aas
rcll
sbb
xor
out
loopne
fcmovb
sahf
or
outsl
push
scas
icebp
mov
add
leave
mov
rorb
adc
cwtl
repz
outsl
fwait
and
call
xchg
xsha1
cmpsb
dec
mov
test
add
push
dec
xorb
nop
ja
adc
sbb
adc
testb
insl
je,pn
xchg
enter
mov
aam
adc
dec
or
int3
pop
jnp
cwtl
nop
xor
inc
lods
add
xor
dec
mov
mov
pop
inc
adc
xchg
les
adc
mov
mov
adc
or
out
xlat
xchg
and
xchg
sbb
icebp
jae,pt
sub
mov
imul
pop
jo
popf
jb
cmp
dec
mov
sar
mov
cmpl
jmp
jno
xor
push
jmp
jnp
cld
notl
fwait
pop
lds
cmp
mov
icebp
sub
add
inc
scas
or
sahf
pusha
pop
test
xor
lahf
bound
fcompl
or
mov
mov
lret
jbe
xor
mov
lods
xor
jecxz
lcall
dec
int
dec
fsubrs
mov
mov
mov
xor
je
fstp
jl
pusha
fiadds
inc
push
lret
add
shll
idivl
or
and
inc
idivb
push
push
aam
dec
mov
stc
inc
les
mov
push
andl
aad
stos
xchg
cmp
adc
mov
pusha
push
shll
jns
push
aad
xchg
ficomps
push
jmp
mov
cwtl
iret
or
pop
sbb
call
jmp
fsubrp
mov
repz
ds
enter
imul
lods
jb
orb
pop
sahf
inc
mov
int3
test
sbb
push
xchg
jne
fs
pop
push
adc
ss
push
mov
jp
xor
fstpt
sqrtps
mov
sbb
cmp
clc
clc
dec
loopne
testl
and
and
aad
pop
ret
out
fs
loopne
fcoms
in
iret
push
ljmp
push
decl
sbb
lock
out
sub
addr16
lret
lea
mov
ds
jbe
inc
xchg
popf
lock
int3
xor
dec
ds
xor
lret
test
jmp
dec
mov
dec
int
out
testl
das
and
outsl
fs
in
mov
xor
ret
div
mov
dec
vmread
inc
cmp
fistl
sbb
adc
add
xor
aaa
xchg
sub
sub
ret
fstl
test
mov
sbb
loope
pop
mov
mov
pop
cltd
jp
and
cli
das
repnz
adc
xchg
data16
cli
movl
cmp
test
mov
test
mov
pop
test
mov
arpl
pop
std
bound
lods
jge
jne
cmp
pop
or
or
imul
loop
push
inc
jle
mov
rcr
push
out
mov
icebp
or
xor
push
add
cltd
fsubr
push
mov
icebp
xchg
lea
roll
rolb
insb
rol
in
int
sahf
dec
sti
inc
and
das
cmp
outsl
jns
jns
mov
nop
insl
and
dec
pop
jo
jecxz
add
fiaddl
clc
sub
cs
and
add
aas
orb
subb
loopne
xor
in
fiaddl
pop
je
xor
dec
rolb
fwait
xchg
repnz
dec
or
and
arpl
movsl
sahf
mov
mov
sbb
popf
adc
adc
adc
pop
js
cmp
popf
jns
in
xor
push
lock
sahf
sbb
sub
cltd
test
mov
ds
mov
cmp
test
scas
and
mov
in
repz
movsb
hlt
add
leave
cwtl
fstl
insl
imul
cmpsb
add
das
lret
mov
data16
xor
notb
test
out
fdivrl
cld
lret
iret
sub
dec
jge
ret
pusha
sub
shlb
es
and
lods
lret
gs
aad
clc
out
lods
jno
jp
adcb
dec
jns
mov
mov
shlb
je
lock
lahf
lds
push
inc
data16
out
es
popa
in
aas
sub
mov
pop
out
test
sahf
iret
pop
in
mov
dec
push
push
push
into
ss
lods
outsl
or
xor
sbbb
or
imul
pop
mov
dec
lcall
sbb
int3
sub
xor
clc
arpl
or
pop
mov
cli
sbb
sbb
cmc
test
mov
mov
rcll
sti
leave
add
mov
pusha
jl
dec
dec
scas
inc
push
mov
push
push
aaa
aam
inc
sarl
adc
movsl
xor
sbb
fwait
pop
jge
mov
movsl
outsl
je
mov
xor
movsb
aas
cmpsl
mov
shlb
in
rcr
ret
sub
rolb
mov
or
je
loope
add
mov
lret
out
adc
xor
roll
jg
mov
xor
jo
popa
outsb
std
mov
push
fcompl
movsb
mov
pop
add
je
add
jae
mov
jecxz
or
cmp
stc
pop
cli
flds
icebp
inc
or
push
lds
inc
xor
arpl
dec
push
jl
push
mov
and
push
ja
imul
jle
icebp
sbb
fadds
leave
adc
inc
lea
les
fcoms
pop
fiadds
adc
hlt
sub
push
cmpb
or
outsl
shlb
mov
pop
mov
mov
mov
fidivl
outsb
or
call
pop
adc
call
mov
fwait
xchg
and
cwtl
add
test
mov
testl
mov
out
sub
das
inc
adc
test
cmp
sub
and
pop
not
push
adc
push
adc
pop
jne
and
enter
mov
xchg
mov
xchg
das
push
ret
sub
rolb
fldcw
jns
scas
sbb
xchg
sbb
xor
sub
repz
mov
sub
xchg
fbld
imull
sub
push
mov
push
gs
sbb
xor
pop
mov
xchg
or
pop
add
cmp
out
sub
mov
je,pn
dec
rcr
push
icebp
fldcw
insl
mov
jbe
jns
push
and
movsl
lret
movsl
out
outsb
cld
icebp
lds
imul
js
aaa
roll
xchg
pop
dec
jnp
imul
das
js
dec
sti
popa
fstpt
or
mov
fisubrl
insl
mov
adc
das
xor
sbb
jg
lret
repz
shrb
pop
xlat
jmp
inc
bound
mov
cmp
push
push
fwait
add
test
dec
pop
stos
inc
jne
push
int
push
in
push
test
leave
roll
lock
std
insl
add
sbb
aam
push
xchg
push
mov
or
dec
adc
aaa
xor
lret
ja
cmp
or
shr
cld
inc
stos
mov
mov
add
cmp
les
lea
scas
pop
or
idivl
fdivrl
popf
mov
leave
enter
aad
lock
mov
pop
ljmp
push
lcall
inc
sahf
cmpsb
xchg
decl
adc
test
dec
test
mov
xchg
out
or
push
popa
pop
iret
and
cmp
stc
cmc
mov
jno
loope
push
dec
push
stos
aas
call
ds
je
mov
aaa
stos
mov
push
fidivrl
cmp
pop
sti
shr
or
jne
rcrb
popa
cwtl
lds
jae
mov
sbb
call
out
loop
ljmp
into
mov
sti
movsl
je
or
xchg
push
loopne
jne
push
mov
iret
add
mov
aaa
xor
shlb
loop
mov
jecxz
into
sub
mov
mov
bswap
outsb
orl
dec
jb
pop
sub
je
xchg
push
leave
jb
and
mov
and
jl
pop
fucom
in
mov
xchg
movsb
gs
add
jmp
xor
sub
leave
fistl
ds
push
and
dec
or
cmp
fildll
or
dec
fdiv
inc
loop
das
jbe
sub
pop
fstps
inc
into
add
shufps
pop
dec
dec
pop
aas
fsubrl
dec
add
push
pop
loopne
gs
push
bnd
insb
xchg
jl
fwait
cwtl
clc
cwtl
push
and
popa
push
clc
popf
nop
cmp
fildll
inc
pop
gs
mov
jg
scas
sub
and
mov
pop
in
ficomps
jo
pop
mov
or
pop
movsl
inc
imul
mov
hlt
sub
or
pop
mov
adc
mov
xor
test
mov
cmp
jmp
loopne
mov
inc
push
addr16
pusha
or
pop
in
dec
xchg
mov
jecxz
gs
fldt
dec
test
scas
xchg
clc
dec
dec
aad
pop
add
push
push
cmpsl
insb
mov
and
movsb
shll
lahf
jnp
bnd
enter
add
mov
jb
mov
movsl
imull
sub
or
dec
pop
fidivl
and
loope
fidivs
int3
addr16
inc
in
fisttpl
out
scas
jb
out
ss
cmp
dec
add
dec
pop
rcl
pop
or
and
fcompl
sbb
aas
mov
jne,pt
pop
cmp
loope
mov
subl
jnp
cmc
push
pusha
fildl
insl
pop
xorl
dec
push
in
filds
sbb
xchg
fucomp
repnz
inc
repnz
lret
ds
daa
or
xchg
xchg
pushf
cwtl
out
push
roll
das
mov
int3
cmp
mov
pop
mov
divb
sbbb
pop
call
sub
adc
iret
loop,pt
ja
movsl
filds
iret
jg
lret
or
shrb
mov
outsl
aam
fistl
sbb
cld
dec
sub
aad
push
insb
mov
adc
jb
cmpsl
ja
mov
call
out
mov
jns
sbb
ret
pushf
mov
scas
mull
mov
or
inc
fnsave
dec
mov
jo
mov
insl
xchg
push
mov
mov
int3
shll
inc
mov
cmc
outsl
pusha
add
insl
mul
and
sub
decb
in
test
sbb
mov
add
inc
mov
sbb
push
es
addl
movsb
xor
xor
insl
es
es
ss
out
pop
pop
iret
clc
xchg
mov
mov
subl
orb
nop
scas
push
xchg
or
mov
jp
jae
or
sub
xlat
imul
fsubr
leave
xor
addl
or
xlat
sbb
jnp
ja
cmpb
sbbl
mov
xor
stc
repz
push
lcall
popa
pushf
adc
push
imul
mov
test
cwtl
lds
adc
mov
int
and
xor
mov
mov
jecxz
divl
je
lahf
int3
leave
aad
push
mov
ds
inc
daa
aam
and
flds
or
cli
gs
scas
fidivrl
jp
fmuls
js
cwtl
mov
jns
jnp
addr16
enter
idiv
mov
xor
jne
fnstenv
and
stos
aam
mov
pop
ret
repnz
mov
cmovg
dec
pop
bound
aaa
aaa
in
sub
and
xor
or
push
mov
pop
mov
xlat
rcl
inc
rdmsr
leave
sub
mov
push
or
cmp
inc
shrb
cs
fildll
aaa
in
mov
push
sti
movsl
repnz
lods
add
insl
sub
aaa
outsb
cmp
in
daa
sti
mov
in
jp
test
inc
test
in
push
ds
lret
movb
dec
jne
push
and
xchg
jno
ljmp
adc
sbb
lock
mov
push
pusha
sarl
cld
push
popf
fisubrl
popa
push
xchg
inc
adc
push
ljmp
int
sti
fistpll
pusha
push
fs
sub
mov
mov
arpl
push
xchg
pop
insl
dec
adcb
dec
sbb
add
es
lret
loope
gs
sbb
sbb
dec
xchg
pusha
insl
xchg
sub
push
adc
cmp
addr16
cmp
aaa
sub
jge
and
mov
inc
dec
xor
movsb
ljmp
pushl
call
hlt
or
xor
sarl
hlt
sub
movsl
and
popf
mov
pop
clc
add
fs
fldcw
sub
fxch
xchg
push
shrl
push
add
lahf
cmpsl
jl
sbb
or
movsb
cmp
or
cmp
loopne
or
dec
fs
xchg
xorl
rep
imul
add
icebp
cmpsl
aam
push
and
pop
movsbl
pop
mov
cmp
and
sbb
fiadds
mov
aaa
jecxz
xor
pop
dec
mov
cli
fdivl
jecxz
mov
imul
and
sub
xchg
xor
loopne
push
push
sbb
lds
loop
fmuls
gs
loopne
sbb
into
adc
add
dec
xchg
cmc
mov
fs
stos
and
shrl
jp
dec
mov
mov
lahf
adc
lods
sarb
lret
add
mov
pusha
push
ret
cmc
ret
cmp
out
lret
jge
or
popa
fucomp
fisubs
cmpsb
mov
cmp
jbe
pop
pop
dec
es
and
pop
sbb
sub
inc
bound
popa
jnp
add
lea
lods
sub
adc
pop
pop
mov
ds
movsl
dec
pop
leave
push
cmc
fcomip
mov
sbb
add
lea
xchg
test
adc
mov
jb
push
jno
aam
mov
insl
add
pusha
inc
cmp
pop
pop
sbb
std
jo
inc
cmpsl
jo
leave
sti
jg
stc
pop
adc
xchg
xor
shlb
add
adc
dec
push
lds
jecxz
popf
jbe
push
cmp
sbb
push
imul
cmp
sar
and
sub
decb
test
xchg
or
adc
ficoml
push
sub
mov
mov
jno
push
and
lahf
cmpsl
add
push
push
std
pop
xchg
jo
cmp
pop
push
push
roll
popf
stc
adc
and
inc
hlt
mov
aaa
sbb
test
pushf
jbe
xchg
jp
mov
lahf
add
scas
dec
das
ljmp
sbb
dec
pushf
lea
into
or
xchg
adc
mov
xor
cwtl
inc
jge
test
add
faddl
fisubl
cmpxchg
jl
insl
cmp
xchg
adc
xchg
sbb
or
jl
push
hlt
jmp
fbld
pop
jge
xchg
add
mov
pop
push
inc
pop
rcl
adc
mov
into
sub
gs
cmpsb
jae
sub
dec
shll
iret
es
pop
xchg
pushf
mov
adc
xchg
jmp
inc
loope
push
push
arpl
push
and
mov
mov
sbb
test
mov
outsb
mov
nop
out
xlat
inc
fstl
outsl
and
movsb
aad
dec
or
mov
mov
or
sub
push
xorb
testb
jae
subb
push
int
mov
in
mov
jbe
insl
mov
cmp
cmp
inc
xchg
call
mov
sub
dec
inc
loop
pushf
pop
pop
add
push
jle
xor
cmp
stos
sarb
fistpl
jge
ds
jnp
test
mov
aas
nop
or
stos
add
sub
add
cmp
add
dec
lret
stos
add
pcmpeqd
dec
xchg
sbb
mov
subb
fdivrs
enter
nop
addl
in
add
sub
sub
push
pop
adcb
jle
rcll
mov
pop
mov
dec
xchg
sbb
xor
mov
mov
and
xchg
adc
inc
mulb
repz
inc
mov
stos
inc
test
push
pop
cwtl
inc
std
mov
rorl
addr16
push
xor
repnz
std
xor
add
lret
mov
inc
or
push
arpl
push
js
adc
popa
adc
js
xor
mov
aas
fcomip
sub
sbb
jae
pop
lret
inc
in
jno
jmp
ljmp
ljmp
lahf
jmp
incl
cs
jo
ja
push
mov
push
inc
cmpsb
fidivrs
daa
insb
ficompl
mov
outsl
push
push
xor
outsl
stos
cmp
cs
lret
movsl
mov
repz
daa
adc
pusha
inc
movl
das
insb
and
push
and
aas
out
mov
js
xchg
mov
mov
fistpll
addb
fs
dec
cmp
fisubrl
push
xchg
or
jo
lcall
call
inc
jb
jns
jle
xchg
testl
inc
rcll
sub
or
pusha
push
stc
xor
jo
pushf
mov
push
push
xchg
push
ds
test
lods
scas
dec
bnd
jl
bound
data16
insl
adc
pop
inc
clc
add
xchg
pop
dec
mov
int
or
jmp
mov
add
popa
sub
dec
fwait
adc
mov
lock
mov
xor
adc
and
and
push
pop
sub
lret
xor
fdiv
das
dec
mov
fisttpl
mov
fwait
cmp
sub
fs
push
stc
adc
mov
add
sbb
sub
add
dec
add
jns
out
mov
mov
scas
dec
xchg
shl
dec
outsb
ret
and
add
sbb
mov
sub
adc
mov
inc
popf
sbb
push
xchg
rolb
sub
aas
or
inc
xchg
mov
gs
mov
cltd
rclb
aaa
jo
mov
int3
aas
int3
pop
jnp
jno,pn
push
out
in
jmp
jmp
scas
dec
xor
xor
dec
stos
gs
and
test
js
shrb
mov
sbb
gs
jbe
loopne
dec
adc
mov
js
pop
pop
insb
jb
hlt
or
cmpl
dec
lret
icebp
cwtl
jl
repz
xor
jecxz
subb
rep
lret
fwait
test
cmp
filds
arpl
pop
xchg
int3
adc
fldenv
into
add
xor
arpl
sahf
jnp
lods
je
adc
hlt
clc
mov
dec
and
loop
mov
dec
add
cmp
popa
hlt
push
pop
xchg
add
mov
xchg
jl
xchg
js
mov
mov
aad
test
lds
xchg
mov
repnz
std
mov
add
mov
sub
sbb
xchg
cmpsl
sbb
dec
dec
xor
jge
ret
loopne
sub
mov
out
adc
jo
mov
rol
dec
sbb
leave
insl
repz
cmp
sub
in
daa
loopne
fs
fsubrl
mov
or
mov
pop
mov
sub
mov
sub
add
repnz
mov
push
push
out
mov
push
jmp
fdivrs
ret
jno
movsb
aam
mov
arpl
inc
rorb
cmc
std
xchg
sub
lods
shrl
mov
in
and
iret
lods
pop
testb
cmpsb
pop
test
jnp
cltd
xor
push
jb
adc
dec
push
dec
or
cmpsb
lods
dec
bound
jne
ds
jmp
sbb
mov
jg
ret
mov
stc
in
jl
mov
aas
inc
jns
loopne
in
fwait
jb
shlb
ss
xchg
cmp
es
jbe
jne
aaa
jg
out
fistl
cmp
dec
loopne
test
or
loopne
dec
pop
fisttpll
les
out
test
sub
fs
mov
idivl
jne
movsb
lahf
fucomp
pop
add
jbe
sahf
lea
push
mov
roll
adc
fcmovnb
out
push
push
arpl
popf
mov
movsb
icebp
insl
sub
insl
jp
dec
cmp
cmp
cmp
iret
fwait
imul
xor
dec
jns
sub
loop
mov
arpl
and
cmp
aas
mov
dec
mov
push
jecxz
jmp
fisubs
loope
cld
fdivl
sub
mov
or
js
jb
in
or
cmp
lods
sbb
iret
push
pop
push
pop
ret
sbb
test
fwait
add
inc
enter
pop
xchg
faddl
popf
adc
sbb
or
negl
inc
lret
inc
ljmp
imul
adc
lods
js
adc
sbb
mov
sbb
shll
inc
jecxz
fisubrl
push
addr16
cmp
jecxz
xor
aaa
mov
xchg
pop
xchg
sbbb
mov
jb
and
xor
adc
pop
push
jno
mov
mov
adc
sub
cmpsl
ret
push
mov
lcall
xlat
cmp
push
aaa
mov
scas
pushf
mov
dec
push
jnp
pop
stc
mov
es
dec
dec
xchg
push
rcrl
repnz
mov
inc
push
cmc
mov
push
movl
adc
ds
into
rep
ret
push
xor
ret
clc
xchg
insl
shll
dec
or
jmp
cli
or
sub
repnz
mov
add
jo
cmpsb
outsb
sbb
pop
jg
fcmove
out
push
movsl
mov
mov
mov
bound
or
adc
ljmp
push
jb
std
daa
sub
jp
push
pop
popa
mov
sbb
inc
sti
pushf
lds
popaw
cmp
mov
xor
add
adc
leave
and
pop
pusha
push
xchg
insb
cmp
sub
dec
cmc
in
mov
mov
sub
cmp
inc
xlat
arpl
icebp
lcall
push
and
and
or
lret
lods
repnz
leave
pop
sbb
sbb
sahf
call
popl
mov
pop
pop
jne
add
sbb
dec
leave
pop
or
lahf
adc
inc
jle,pt
insb
jo
ror
jg
adc
push
add
out
cmp
mov
or
shl
fbstp
dec
out
mov
ljmp
insb
insb
pop
hlt
or
xor
jnp
shll
mov
imulb
mov
testl
nop
shlb
or
sub
add
je
and
test
push
mov
sbbl
call
and
lcall
je
out
aam
in
popa
int
jmp
hlt
push
and
stc
xchg
fmuls
insl
and
andb
jle
lock
mov
push
inc
les
cmpl
add
cwtl
add
leave
fs
sub
lret
out
jge
sbb
out
jmp
mov
cmpsl
insb
or
pop
sbb
jno
inc
lds
imul
push
mov
sbb
mov
cmp
fmuls
inc
lret
add
aad
cli
adc
and
push
sub
jno
dec
js
mov
lea
pop
dec
mov
aaa
in
mov
mov
dec
mov
dec
rcrb
scas
ret
mov
sub
fisttpll
cmp
mov
add
dec
cli
test
adc
mov
es
filds
jo
jecxz
out
adcl
mov
mov
pop
rolb
xchg
push
mov
repnz
xchg
add
mov
xor
sub
lds
outsl
aad
loope
das
imul
push
cmp
mov
dec
pop
or
outsl
xor
inc
mov
in
mov
jns
sbb
clc
cli
std
lods
mov
add
movsb
imul
jae
fxtract
push
int
xchg
icebp
xor
xchg
mov
jp
loopne
incl
add
outsb
pop
rorl
fistpll
and
iret
dec
neg
aas
test
dec
cli
pshufw
pop
ret
xor
mov
mov
add
lcall
lcall
sub
sti
fiadds
mov
mov
stos
pop
xchg
push
stc
and
adc
imul
sbb
xlat
jg
fnstsw
ljmp
xor
pop
mov
mov
in
adc
arpl
imul
stc
mov
scas
cwtl
stos
iret
les
cmp
into
jo
std
icebp
notb
outsl
inc
mov
hlt
jg
or
cwtl
fiaddl
xor
and
jnp
pop
jp
stos
movsl
mov
sub
sub
push
mov
and
jbe
lret
jg
lds
inc
xchg
ret
mov
add
pop
ret
xor
dec
jnp
add
lahf
arpl
or
sbb
in
or
sbb
gs
or
mov
shlb
mov
cld
lea
aad
arpl
jbe
loop
stos
xor
rcrb
adc
out
xchg
or
pop
mov
jmp
and
ret
ror
ja
xchg
das
clc
in
mov
fcmovnu
xchg
xor
sub
pushf
pop
cmpsb
push
mov
xor
mov
aas
outsl
int3
leave
push
pop
int
insl
xor
loop
pop
xor
stos
add
call
add
xchg
into
or
mov
dec
pop
js
into
icebp
and
imul
mov
or
ljmp
jbe
pop
xor
ret
fidivrs
cld
push
add
add
add
inc
pop
pop
mov
xchg
jl
add
mov
inc
or
lcall
jl
xchg
lret
xchg
lret
or
push
and
sub
mov
inc
shll
xchg
and
hlt
fnstcw
test
pop
inc
jp
dec
inc
cmp
jl
ljmp
mov
sub
sbb
call
mov
ret
jle
lds
xchg
mov
stos
les
cmc
add
lcall
inc
cmp
rcrl
mov
jecxz
inc
sbb
bound
push
negb
push
fisubrs
and
lea
int3
pop
in
add
sbb
adc
fldt
sbb
jnp
sbb
mov
mov
push
lcall
inc
sbb
lahf
iret
push
std
les
mov
ja
int
sbb
push
stos
js
mov
mov
jg
inc
lods
in
loope
adcl
jle
and
aam
mov
sub
xor
pop
enter
jae
ficoml
and
cld
popa
rcrw
sub
push
add
repz
inc
push
dec
nop
fstps
xor
shl
shl
pop
arpl
fiaddl
test
pop
mov
mov
xchg
je
js
push
mov
push
cmc
mov
cmp
xchg
into
push
bound
aam
cmp
sbb
push
ficoml
and
xlat
in
xor
xlat
outsl
push
xor
sbb
sti
dec
imul
fwait
sub
gs
and
repz
cmc
stos
int3
or
pop
int3
dec
leave
jne
push
stc
or
mov
jl
inc
adc
inc
out
xor
jne
loopne
test
sub
push
mov
cmp
popa
out
cmp
cld
xchg
stc
out
cld
xor
add
pop
orl
xor
pusha
cmpsb
jg
mov
test
cwtl
add
fdivrs
push
sub
xchg
mov
call
mov
test
adc
and
cltd
mov
cld
and
orb
and
dec
test
fnstenv
xor
push
mov
pop
adc
addb
je
hlt
push
or
mov
shl
or
popf
pop
fldcw
or
jmp
shll
dec
pop
inc
xor
xchg
xchg
add
add
sub
cmp
jg
pop
or
mov
mov
cmp
xor
add
mov
jne
scas
sub
mov
out
xchg
or
cmp
daa
mov
mov
jle
xor
inc
dec
adc
shll
mov
dec
in
pop
movsl
mov
push
cs
in
mov
scas
fwait
dec
orl
sahf
arpl
adc
movsb
xchg
add
adc
movsl
mov
cwtl
mov
adcb
mov
call
xchg
mov
jg
sub
outsb
out
pusha
jne
je
pop
movsb
iret
xchg
loop
nop
jno
xchg
in
and
sti
pushf
lods
mov
jl
repnz
in
movsb
xor
xchg
aaa
and
and
loope
shl
repz
mov
mov
nop
dec
pop
jbe
in
xchg
loop
negl
cmc
mov
xchg
fdivl
or
push
movsl
in
pusha
fincstp
pop
mov
pop
lcall
xchg
out
ret
into
ljmp
outsl
sahf
jle
insl
push
push
inc
cmp
pusha
imul
mov
pop
pop
mov
dec
loop
jns
lret
xchg
xor
jp
cmpsl
js
inc
and
gs
jne
and
sbb
hlt
nop
ss
pop
test
clc
out
push
in
mov
loop
lea
arpl
mov
lods
inc
xchg
fidivrl
cmpsl
ret
je
sahf
push
add
xchg
cmp
nop
fnstenv
ret
in
cmp
mov
and
fstpt
mov
mov
sub
mov
fcom
xor
push
sbb
in
and
in
dec
mov
pusha
pop
test
push
mov
out
iret
and
adc
cltd
sarb
lods
inc
jb
pushf
xchg
hlt
in
in
repz
ret
in
jmp
cltd
outsl
inc
push
or
xchg
aaa
out
xor
or
jge
arpl
sub
out
and
mov
adc
xchg
pop
mov
add
cmc
mov
adc
loopne
movsl
pop
or
aaa
xchg
rolb
mov
mov
scas
enter
aad
sti
mov
pop
and
arpl
lret
fsts
xchg
scas
inc
stos
mov
fnstcw
vphaddbw
loop
ss
mov
and
movsl
jmp
cltd
xor
jge
sub
lret
idiv
dec
xor
sbb
mov
sarb
gs
sbb
pop
xor
dec
clc
lods
outsb
xor
xor
les
repz
mov
pop
add
sub
xlat
movsb
mov
pop
dec
push
add
push
lea
mov
jl
and
iret
dec
insl
or
dec
push
lret
es
popa
xchg
or
pop
pop
mov
jb
pop
xor
jne
loope
pop
cmp
insb
and
shlb
xchg
cmpsb
es
xchg
in
mov
sbb
into
cs
xor
pop
call
lods
sbb
out
adc
decb
sub
stos
or
xlat
mov
repnz
xchg
std
std
insl
stos
or
push
imul
mov
imul
mov
clc
jmp
pop
jp
inc
dec
push
out
lret
sbb
jne
xchg
dec
cmp
movsb
repz
das
push
lds
mov
cmc
or
adc
jge
add
js
inc
jb
mov
out
jb
mov
setl
cmpsb
fwait
jb,pn
lcall
cmpsb
inc
mov
movsl
in
pop
mov
lock
xchg
lods
add
mov
in
mov
xor
pop
xor
andb
jecxz
jno
pop
popf
mov
insb
pop
mov
mov
mov
fnsave
dec
mov
xor
dec
nop
mov
dec
jnp
test
sbb
pop
pop
ret
mov
jmp
stos
push
cmp
arpl
xor
push
push
data16
and
push
lds
dec
or
xchg
scas
mov
test
mov
sub
push
sub
rol
dec
outsb
add
pushf
in
sbb
jb
in
outsb
sbb
out
in
jns
jo
jae
lret
adc
pop
jo
iret
sub
push
sbb
jnp
icebp
test
push
mov
aaa
cmp
dec
add
aaa
leave
das
fistl
mov
adc
lods
xchg
or
stos
test
lods
dec
mov
ret
daa
out
repz
in
sub
inc
leave
push
xchg
out
outsb
dec
push
xor
adc
inc
arpl
sbb
push
push
sub
push
shrb
insl
add
lahf
cmp
dec
hlt
ss
xor
push
sbb
or
divl
xchg
outsl
pop
xorl
sti
stos
adc
faddl
mov
icebp
cmp
or
imul
push
dec
xchg
cwtl
adc
out
add
mov
lods
movd
adc
jo
mov
sub
cmpsl
mov
hlt
mov
aad
xchg
sub
push
popa
mull
insb
jle
mov
dec
jo
and
adc
gs
push
out
adc
jge
fldl
mov
jno
fdivrp
mov
mov
rorb
iret
pop
icebp
pop
stos
rorl
sahf
mov
xlat
int
push
stos
je
lods
push
inc
imul
jecxz
xchg
mov
cmp
faddl
pop
adc
cli
fcomip
repnz
add
pop
cmp
sbb
fnstcw
roll
or
xchg
jno
mov
pop
push
sbb
push
xchg
nop
mov
push
lahf
pop
and
js
cmpsl
inc
sbbb
lods
out
ret
mov
out
or
or
mov
or
out
pusha
pop
jae
scas
jle
iret
subl
and
push
mov
jne
arpl
addr16
cmp
mov
xor
sub
mov
xor
cmp
fldl
loope
leave
movsl
pop
jae
adc
call
jo
jne
test
sub
cwtl
lcall
mov
int
cmp
lds
sub
push
push
cmp
outsb
stos
push
xchg
mov
lret
sub
push
pop
mov
int
pop
fdivl
loope
jb
aad
adc
lret
cmpsb
mov
in
lcall
movsb
sub
cmp
push
insl
jg
mov
xlat
xorb
sbb
idiv
arpl
gs
mov
pop
xchg
cmp
enter
aaa
cmp
aaa
and
fwait
or
sub
xchg
or
sub
lcall
imul
in
xchg
xchg
outsl
pop
das
into
xchg
xor
add
in
xchg
or
and
faddp
pop
cs
inc
and
rcrl
pop
dec
add
call
pop
shrb
daa
shrl
mov
mov
ljmp
xlat
adc
adc
ljmp
cmp
xchg
mov
ds
dec
sbb
iret
shrl
jnp
sbb
push
gs
xor
add
sub
pop
or
mov
cmc
mov
sbbl
mov
dec
shrb
and
xchg
inc
xchg
ud1
cmp
mov
inc
cmp
and
mov
shl
mov
scas
movsb
xor
mov
mov
nop
lods
push
mov
sbbb
pop
aad
inc
cmpl
jl
xlat
shl
sub
test
bound
popf
vcomiss
popa
lods
pop
scas
push
aas
js
cwtl
cmp
ret
jecxz
push
loopne
bound
or
inc
int3
mov
mov
repz
mov
sbb
add
sub
aaa
xchg
addr16
push
add
jle
jg
rclb
movsb
dec
popa
rcrl
fldcw
dec
orb
cmpsb
jl
jae
ret
pusha
iret
mov
cli
ljmp
lds
das
adc
inc
sub
inc
dec
xchg
ss
ret
and
repz
or
xor
gs
adcb
sbb
xor
inc
leave
xchg
cmp
pop
mov
mov
fists
hlt
inc
mov
call
and
add
and
repz
outsb
sub
sbb
jno
cwtl
mov
add
jbe
outsb
pop
cwtl
scas
icebp
cmp
fidivrs
mov
ja
jmp
shl
push
icebp
fidivs
pop
mov
jnp
mov
jp
in
outsl
je
popf
and
outsb
push
inc
cmpsb
mov
push
mov
paddusb
push
gs
dec
and
mov
lods
shl
inc
icebp
daa
sahf
addr16
push
mov
xchg
jp
and
mov
outsb
pop
xchg
mov
cmpsl
movsl
adc
mov
adc
lret
mov
mov
into
or
and
insl
outsl
popf
sbb
insl
ds
inc
mov
mov
mov
jl
popa
cs
imul
cli
dec
mov
push
mov
scas
test
imul
mov
ret
dec
mov
push
or
cmp
ss
inc
mov
add
js
mov
cltd
rorb
stos
fwait
imul
repz
push
or
and
cmp
into
dec
inc
mov
cmc
mov
daa
pop
ja
fstl
push
add
sub
test
xchg
sbb
dec
neg
and
int
push
cs
out
cmp
jp
into
pusha
inc
pushf
std
mov
xchg
subb
or
jbe
icebp
lret
push
mov
adcl
daa
push
cmp
pushf
adc
push
movsb
fldl
rorb
cltd
mov
mov
add
xor
pop
mov
push
mov
rorl
dec
inc
insb
pop
loop
mov
sbb
insl
in
ja
and
jecxz
scas
pop
xor
ret
int
cmpsb
mov
xchg
mov
mov
arpl
mov
in
lret
int
mov
dec
je
ret
nop
popf
push
test
pop
inc
orl
xorl
dec
mov
add
sub
enter
pop
incw
mov
stos
pop
dec
pop
mov
mov
das
std
clc
sbb
pop
in
aas
mov
push
lcall
jo,pn
xchg
fstpt
or
aas
xchg
fcmovnu
ljmp
frstor
lods
and
sbb
dec
jnp
xlat
mov
sbb
push
test
repnz
shrl
mov
xchg
stc
inc
inc
or
add
popa
pop
sub
fcoml
ds
push
xor
inc
imul
adc
xchg
fsubrp
sbb
fucomp
pop
sub
sbb
xor
aam
fs
mov
adc
xchg
lret
mov
lods
or
inc
jnp
cmp
aas
in
adc
add
fnstsw
xchg
fldenv
mov
xchg
and
subl
leave
shlb
or
aaa
cld
lods
ficoms
loopne
shlb
inc
sbb
jecxz
inc
dec
andl
xor
mov
imul
dec
mov
fistpll
push
int
inc
sbb
inc
xchg
xlat
fwait
repnz
jno
sub
sub
insl
loop
push
cmp
mov
cmp
cmp
xor
cmpl
out
xlat
xlat
xchg
mov
mov
loope
cltd
sub
pop
std
inc
stos
imul
cmp
inc
sub
and
test
jb
nop
mov
movsl
xchg
test
inc
addr16
or
popa
lahf
das
jmp
clc
daa
push
in
dec
cmpb
hlt
dec
sbb
mov
xchg
sub
out
dec
cmp
loopne
icebp
das
ljmp
mov
mov
push
fildll
and
mov
stc
or
mov
dec
mov
popf
hlt
mov
push
jb
xor
pop
pop
in
add
jae
cltd
jg
aad
mov
mov
mov
hlt
xchg
sti
in
aam
add
mov
inc
push
cmp
pop
dec
adc
lods
add
adc
addr16
ret
leave
notb
dec
pop
scas
inc
test
movsl
add
cwtl
outsl
ja
sub
dec
inc
aaa
pushf
sbb
stos
into
push
fildl
fcoms
xchg
clc
jnp
lods
enter
in
push
mov
ds
pop
lock
test
adc
xor
scas
pop
sbb
fwait
adc
ja
lds
push
sbb
xchg
push
orb
fnstcw
cwtl
lret
sub
dec
popa
xchg
pop
push
dec
rclb
adc
and
dec
lret
inc
jbe
and
push
fnsave
jp
jp
mov
out
jecxz
xchg
dec
mov
or
and
jo
mov
pop
mov
shrb
push
clc
jp
pop
bound
xor
pop
sub
and
jae
enter
mov
imul
and
xor
arpl
xor
das
ss
xor
out
pop
xor
jg
lcall
out
adc
sbb
icebp
jae
xor
mov
ja
mov
xchg
call
je
xor
inc
daa
lods
mov
into
add
xor
mov
mov
mov
setno
ret
jecxz
or
sahf
out
xlat
lods
aas
repnz
pop
mov
mov
jae
cld
xchg
iret
push
push
pop
aad
push
mov
sub
rcll
push
and
pop
test
shlb
insl
out
test
pop
out
pop
adc
jae
jae
iret
hlt
inc
shlb
adc
inc
jnp
inc
mov
sub
nop
pop
stc
andl
mov
aad
loope
cwtl
insl
adc
jno
neg
adc
lds
in
jmp
notb
nop
or
add
shll
dec
sbb
mov
rcll
mov
fdivs
mov
ds
daa
lret
pop
adc
rcrb
fidivrs
xchg
xlat
lret
test
sahf
out
mov
movsb
rcll
mov
adc
and
xor
push
add
int
rclb
out
add
xchg
jb
add
in
mov
into
and
mov
enter
push
or
xor
mov
je
jb
jo
ss
jp
pushf
dec
fdivrl
aas
test
out
scas
cmp
mov
jle
ficomps
push
jecxz
and
lcall
insl
jae
subb
mov
and
cmpsl
jne
mov
push
gs
inc
loopne
pop
push
jle
adc
pop
mov
push
test
repnz
xchg
sub
lret
inc
addr16
mov
pop
mov
in
xchg
pop
inc
test
adc
lret
xchg
in
adc
push
js
stos
mov
in
xchg
jns
popf
pop
je
mov
cmpsl
and
sarb
test
lods
add
dec
es
cmp
inc
xchg
pop
div
out
sub
popf
aaa
out
jge
push
icebp
xor
fcoms
xchg
mov
loop
movsl
pop
cld
and
ljmp
fisttpl
inc
xor
aaa
or
sti
inc
dec
pop
in
cwtl
das
jl
pusha
push
lea
hlt
jp
xchg
mov
arpl
outsl
cmc
enter
addr16
outsl
add
aad
cld
scas
sub
jmp
sub
out
jl
add
push
add
clc
std
loope
adc
cltd
and
sti
out
aad
cmp
loopne
sarl
popf
dec
jae
js
lock
dec
adcl
sahf
mov
pop
dec
cmp
xchg
test
sarb
inc
cmp
mov
out
insb
popa
sub
shlb
aad
mov
and
jmp
jne
push
repnz
roll
cmp
cli
pop
fwait
mov
imul
jae
dec
movb
push
inc
cld
bound
inc
stos
xchg
mov
or
addr16
int
and
lret
jl
and
test
dec
out
cwtl
xor
aam
push
iret
push
xchg
jno
pop
jge
dec
in
add
mov
cmpl
scas
xchg
dec
mov
sbb
addr16
cmpsl
pop
add
outsl
cli
into
ss
lods
mov
aam
shll
dec
jp
fdivs
in
push
stos
pop
hlt
lods
ds
xchg
in
ljmp
aad
loope
fdiv
aad
mov
sub
add
aas
lock
in
les
xchg
bts
hlt
pop
mov
mov
or
out
addr16
movb
mov
aas
inc
add
loop
sbb
pop
inc
icebp
jo
jecxz
and
sub
scas
dec
out
push
push
test
mov
push
dec
js
aas
jl
jbe
xor
adc
jbe
push
enter
popf
flds
cli
arpl
fisttpl
stos
or
shlb
je
dec
mov
aam
inc
xchg
push
cmp
and
loope
loop
sbb
xchg
add
icebp
or
xchg
mov
int3
loopne
adc
jne
scas
mov
shl
pop
jb
cmp
adc
repz
pop
aam
hlt
sbb
roll
push
les
stos
adc
jmp
or
dec
xchg
jbe
mov
fldcw
or
cmc
mov
les
lahf
adc
cwtl
xor
pushf
xor
rol
add
xor
lds
inc
je
push
sub
mov
insl
insl
sti
std
std
popf
cmpsl
sar
cmpsl
pop
add
cmp
pop
cmp
out
int
pop
adc
sbb
cmpsl
cmpl
mov
repnz
stos
inc
loope
jmp
adc
popf
cmp
sbb
sbb
sbb
fidivl
adc
pop
js
mov
sub
stos
out
inc
pop
scas
jp
jmp
jno
inc
push
push
adc
jne
xor
xchg
mov
idiv
mov
fisubrl
iret
mov
or
cmpsl
mov
mov
push
pop
add
jno
push
arpl
mov
mov
int
dec
and
shlb
sbb
pusha
adc
mov
sbb
nop
lods
sbb
jmp
popa
add
lds
movsb
jmp
adc
out
mov
mov
or
cmpsb
loop
fs
mov
push
test
std
mov
out
sti
stos
jmp
adc
cmpsl
fmull
push
mov
cmc
mov
fimuls
dec
xor
adc
adc
push
push
sub
movl
adc
mov
add
or
mov
xor
lahf
cmpsb
sbb
push
leave
lea
lret
ja
push
push
insb
jge
adc
ljmp
loope
inc
lret
andb
xor
jle
mov
fcom
sti
xchg
cmp
lret
punpckhbw
sub
sub
or
add
sub
daa
push
add
out
xor
fisttpl
push
iret
dec
push
fsubs
bound
hlt
loopne
or
xchg
inc
sti
sub
imul
or
mov
imul
mov
mov
add
lret
sahf
sbbl
or
popf
fstp
xchg
xorl
mov
mov
stos
cmp
mov
into
push
scas
cmc
hlt
mov
aad
pop
sbb
or
inc
imul
fsubrs
inc
mov
xchg
leave
cmp
repz
aas
mov
jo
out
sub
rorl
adc
addb
jnp
js
inc
mov
adc
imul
inc
bound
mov
dec
in
jmp
dec
les
lock
mov
sarb
je
fisubs
cmp
dec
fnstcw
lods
cld
stos
cmp
sbb
dec
push
jno
xor
iret
pop
and
aad
xchg
outsb
xchg
loop
cmpsl
stos
mov
or
or
cs
push
lret
xor
or
cmp
xchg
or
fbld
jo
add
mov
cmp
inc
ret
dec
js
pop
loope
daa
fcmovne
mov
jecxz
adc
rep
mov
pop
outsb
fistps
adc
fwait
and
sub
sbb
pop
jne
adc
ret
sbb
mov
stos
xchg
mov
xchg
push
out
dec
sub
repnz
dec
or
cmp
into
mov
xchg
mov
insl
insl
mov
push
aad
sub
lock
push
push
jns
mov
inc
and
xor
out
add
dec
subl
inc
cmp
sbb
int3
xchg
das
mov
sbb
iret
aaa
lret
cmpsl
or
in
ds
push
shll
rorb
mov
aas
inc
xor
scas
mov
test
es
mov
lret
std
stos
adc
xchg
std
cmp
pop
subl
pushf
pop
out
push
xchg
in
testb
adc
shr
aam
mov
jp
jl
mov
jecxz
sbb
inc
inc
bound
inc
inc
jne
jmp
test
cmp
cmp
movsb
ss
jg
cmp
jo
mov
mov
dec
scas
int3
inc
xchg
sub
or
add
scas
decl
scas
push
outsb
dec
sti
test
inc
sarb
mov
test
ja
and
mov
scas
lods
subl
arpl
and
es
data16
icebp
shrb
and
jp
push
mov
sahf
sbb
add
js
sbb
orb
cltd
stos
jb
jecxz
sbb
lods
ss
fldcw
insb
dec
andl
pop
and
dec
and
mov
and
cmp
loope
mov
inc
xchg
repz
xlat
subl
int3
pop
aas
pusha
inc
pop
jg
pop
iret
xchg
outsb
inc
xor
fsubp
fistpll
sti
mov
fdivl
xor
mov
xor
cmp
mulb
and
cmp
sbb
lret
fistpll
push
mov
movsb
test
adc
les
push
push
mov
sub
pusha
xchg
pcmpeqd
in
ds
sbb
mov
fdivr
js
lods
aam
xor
sahf
sbb
adc
adc
sbb
jge
ret
mov
out
and
adc
and
in
pop
jge
jmp
insl
sub
test
xchg
ljmp
push
or
lds
stc
aam
fwait
insl
mov
fs
inc
lahf
lahf
je
xor
or
iret
push
jge
jne
fs
jno
fadds
mov
daa
jae
imul
test
xor
or
add
jbe
in
xor
cmp
sti
repz
push
stc
jmp
sub
sub
push
adcb
push
jno
dec
iret
outsl
and
or
rcll
cltd
stos
or
int3
sarl
sbb
push
mov
rorb
inc
mov
cmc
sub
mov
or
inc
add
push
xlat
xchg
jmp
add
fimuls
pop
push
mov
and
inc
mov
fwait
imul
stos
and
cwtl
scas
add
iret
stos
test
push
dec
std
rcll
push
push
mov
mov
push
data16
push
jecxz
sbbb
out
jge
jns
pop
pusha
or
push
jmp
cmp
or
sbb
shrb
add
mov
mov
adc
jmp
mov
cmpsl
sbb
in
add
mov
fdivrp
fwait
dec
jo
mov
sub
das
pusha
sbb
pop
lods
je
int
cltd
and
out
and
addl
fcoms
cmp
sbb
mov
xor
rolb
and
ret
stos
pushf
iret
arpl
or
lds
in
lahf
jb
or
inc
mov
ja
addr16
arpl
mov
or
or
or
adc
push
test
adc
rolb
stos
std
cld
mov
add
and
aad
in
je
in
push
inc
mov
sbb
inc
jne
adc
adc
pop
les
leave
pop
jno
adc
les
stos
das
gs
ja
add
sbb
xchg
loop
and
dec
insb
scas
mov
mov
and
repnz
mov
lods
mov
test
xor
and
pop
repz
sub
inc
add
jle
pop
movb
mov
push
push
jecxz
push
pop
push
lods
jae
xchg
cmp
xchg
icebp
xor
lds
xlat
mov
sub
imul
or
mov
lret
add
pop
subb
iret
inc
inc
mov
rolb
mov
punpckhbw
sbb
sbb
leave
test
sbb
add
cmp
mov
lret
fst
es
cli
in
bts
adcl
mov
das
aaa
stos
xchg
in
mov
sub
jl
xchg
cmpl
adc
pop
dec
in
xor
pop
dec
into
adc
jl
mov
cltd
out
inc
dec
sbb
out
les
add
sbb
xchg
test
cmpsb
xchg
xchg
fwait
xchg
xor
jno
call
loop
lcall
mov
xor
aas
stos
xchg
cmp
adc
cmp
dec
mov
loope
inc
rorb
mov
xchg
shll
mov
xor
filds
xchg
push
jb
movsb
and
mov
sar
ret
adc
push
aas
out
mov
std
sti
call
pop
push
addr16
rclb
adc
push
and
sub
mov
inc
into
pop
add
std
fld
mov
ret
add
lcall
sub
fsubrp
lcall
xor
jecxz
ror
sub
lret
dec
dec
fcoml
mov
call
sarl
mov
shll
jbe,pt
pushf
pop
mov
pop
pushf
jmp
rcll
cmpb
mov
in
xchg
loop
shrl
loop
cmp
aad
int3
stc
mov
mov
push
push
insb
sbb
fdivrl
sti
dec
loop
test
loopne
icebp
add
inc
adc
fwait
sub
inc
repnz
inc
xor
out
xor
add
lods
sbb
int
lods
add
lea
arpl
push
fs
ret
stc
ret
out
mov
jge
lahf
gs
jge
push
lock
cmp
lods
lock
leave
loop
cmp
inc
fnstenv
arpl
pop
sbb
lret
int3
push
adc
setg
loope
pop
xchg
mov
jge
mov
dec
repz
outsb
cmc
mov
lods
mov
fldenv
lds
pop
outsl
bound
mov
mov
mov
dec
pop
adc
mov
cmp
cmc
cmpsb
and
or
inc
xorb
lcall
xchg
fmull
mov
sbb
push
jb
jecxz
or
inc
mov
lds
cmp
inc
xor
inc
popa
mov
loope
or
cmp
push
into
cmc
js
push
inc
mov
dec
movsl
lret
adc
or
data16
inc
push
scas
push
push
jae
mov
sub
pop
loopne
lds
cmp
lds
pop
cwtl
idivb
ret
cmp
int3
idivl
bound
scas
mov
sar
daa
adc
dec
dec
pop
pop
sub
xor
int
in
into
xchg
daa
rcrl
add
mov
lcall
insl
dec
mov
dec
push
xchg
pusha
int3
pop
int
sub
mulb
fists
mov
fimull
mov
jne
insb
js
mov
addr16
fmul
dec
cmc
dec
push
cmp
test
jge
jmp
fdivl
mov
sbb
push
fmull
inc
xchg
and
adc
add
jo
lahf
mov
and
daa
mov
out
add
pop
xor
into
sbb
das
int
lret
push
xchg
aad
pusha
jge
shll
les
and
xchg
and
dec
mov
or
add
add
dec
push
ret
sbb
mov
inc
and
fwait
pop
adc
mov
sub
sbb
inc
mov
pop
inc
outsb
adc
inc
mov
icebp
subb
or
cmpsl
xchg
dec
scas
or
scas
xorl
adc
push
and
push
inc
rclb
adc
out
daa
or
jmp
imul
mov
mov
mov
mov
test
or
and
sti
and
out
lods
mov
sbb
and
sub
sub
jmp
xchg
sbb
inc
jae
ret
cmp
xchg
mov
aas
mov
stc
pop
xlat
fisubrl
mov
mov
rcll
mov
ljmp
repnz
ret
in
lea
fldcw
pop
not
xor
push
hlt
mov
adc
fiaddl
js
adc
jo
push
pushf
adc
pop
mov
jns
adc
movsb
lcall
dec
stos
inc
sub
or
faddp
cmp
sbb
lcall
sbb
testl
xor
loope
mov
leave
or
cmc
mov
iret
xor
test
push
clc
lret
jp
jno
cltd
mov
sub
xchg
push
xchg
adc
lahf
movsb
in
andb
and
in
clc
out
mov
sbb
mov
test
aas
jnp
orb
bsr
mov
repz
inc
es
push
inc
jb
xor
test
movsl
ret
mov
push
fs
jnp
xor
imul
es
xor
mov
pop
mov
sbb
in
loop
rcr
add
lds
add
call
lea
in
push
scas
andl
outsb
imul
stos
push
sub
data16
out
jp
push
xchg
clc
adc
fcom
cli
mov
add
fwait
push
sbb
mov
mov
in
enter
sbb
out
loope
sbb
loope
imul
cld
and
xchg
leave
push
jmp
dec
outsb
outsl
mov
cmp
pop
push
inc
imul
adc
jne
fcompl
sbb
mov
scas
rorb
sub
loope
or
ret
shl
or
jecxz
mov
sub
jne
arpl
mov
std
lcall
inc
cmc
stos
wrmsr
push
or
mov
or
add
mov
je
lahf
lret
dec
pop
rcrb
mov
popf
addr16
mov
xor
pushf
mov
lret
push
push
lcall
loope
mov
and
or
test
sub
mov
adc
mov
pop
rcr
pop
mov
adc
push
fisubs
loopne
sub
stos
into
ja
cwtl
pusha
cmp
sahf
adc
lret
adc
jb
push
cli
adc
and
cld
in
lods
xchg
out
push
mov
sbbb
fbstp
addr16
int3
test
mov
sarl
lods
dec
or
sub
sbb
adc
or
popa
sbb
out
dec
lahf
jl
pushf
add
dec
xchg
adc
push
pop
pop
xlat
addl
xor
xlat
jl
mov
aam
cs
in
pushf
repnz
pop
out
or
movsb
mov
scas
sti
push
loop
lea
imul
jbe
sar
mov
inc
lea
dec
out
iret
mov
add
dec
std
jecxz
loopne
mov
lret
mov
popa
sbb
mov
icebp
leave
lock
gs
mov
inc
sbb
adc
inc
nop
shl
push
and
cmp
mov
loop
scas
rcl
mov
sub
idiv
dec
sbb
jne
addr16
jmp
scas
push
shlb
mov
mov
pop
ss
xchg
insl
push
loope
pop
test
jno
and
add
dec
movsb
in
in
clc
xchg
push
test
and
pop
xchg
xchg
inc
adc
inc
mov
sti
mov
insb
jno
and
xchg
sub
data16
push
add
mov
aad
hlt
sbbb
pop
inc
leave
fnstsw
sub
or
sub
rolb
push
xchg
fistpl
movsb
aas
addl
xor
pop
not
fistpll
push
mov
push
xchg
lahf
aam
arpl
sub
hlt
add
add
mov
scas
inc
test
data16
das
jae
fwait
mov
je
adc
inc
pop
outsl
pusha
movsb
aad
cmc
mov
fadds
mov
aaa
jb
sub
in
xchg
iret
sbbl
and
and
repnz
inc
rcll
std
ja
jge
or
outsl
and
jle
fcmovnb
ror
jnp
or
push
ja
sub
add
jae
add
mov
mov
or
cs
push
loop
add
mov
sub
xor
scas
std
and
xor
and
movsb
orb
or
sub
dec
repnz
mov
mov
pop
push
js
fnstcw
mov
pushf
jg
mov
adc
add
jmp
or
xlat
stos
push
imul
mov
popa
jge
popl
dec
mov
push
or
int
or
ss
in
loope
mov
mov
icebp
imul
jo
and
inc
mov
loopne
lahf
jae
push
and
xor
das
lods
faddl
push
sub
les
xor
push
arpl
scas
cmpsb
imul
jns
push
loope
pop
jae
adc
mov
mov
out
aaa
stos
and
and
pop
lret
popf
mov
and
and
cmp
imul
mov
jns
int
addr16
sbb
push
repnz
xor
pop
pop
sbb
aad
sbb
es
popf
sbb
mov
sbb
mov
pop
jg
movsl
sbb
dec
dec
sbb
adc
add
push
cmp
jl
or
adc
sbb
fdivs
jg
jno
fwait
aad
std
mov
cmp
movsb
add
addr16
pop
mov
jnp
jbe
mov
insb
xor
mov
aaa
les
push
arpl
inc
popa
cwtl
insl
iret
andb
lcall
imul
or
in
cwtl
xor
rolb
ret
fstp
cmpsl
icebp
shll
jg
xchg
lock
lcall
stos
cld
popa
out
or
shrb
inc
sub
ljmp
iret
xor
out
mov
scas
mov
es
mov
addb
adc
subl
fsubrs
lret
popa
xchg
dec
das
adc
mov
inc
sub
xchg
inc
insb
out
pop
ss
pop
in
call
or
jle
adc
mov
fsubs
jp
add
cs
and
mov
xchg
fsubrl
aad
mov
lcall
xor
lock
sbb
das
mov
inc
sbb
mov
mov
add
jno
arpl
loop
mov
xchg
popf
rcl
scas
dec
dec
daa
xlat
adc
sub
mov
xchg
cmp
dec
rolb
dec
test
test
mov
add
aam
sar
push
aas
cmpsb
adc
sti
in
ja
add
mov
fwait
add
add
das
pop
and
xchg
add
push
sub
js
sbb
xchg
jbe
imul
loop
outsb
ret
stos
fwait
psrld
lods
aas
sti
adc
fdivrs
in
pop
push
xchg
and
or
jecxz
and
push
dec
pop
sarb
scas
aas
dec
cmc
xchg
hlt
sbb
add
or
std
out
int3
pop
scas
jb
sub
aam
cli
and
inc
and
bndldx
and
cmp
jae
xor
push
hlt
and
fildl
popa
jno
cld
mov
adc
stos
int3
cli
inc
xchg
rclb
and
call
jo
fildll
add
pop
pushf
mov
cli
sar
lcall
or
push
lret
cli
outsl
push
jae
mov
sub
lcall
or
and
xor
add
bound
stc
outsb
push
notb
aad
sarb
stos
mov
ret
rorl
xlat
mov
data16
test
mov
push
fstps
jg
jns
test
xchg
adcl
out
xor
ljmp
stos
lods
adc
push
cmp
add
mov
sbb
lret
fidivrl
xchg
mov
mov
sbb
pop
mov
jbe
cmc
les
sub
pop
push
adc
loop
xor
dec
cmc
sbb
push
add
push
mov
jo
xchg
cli
or
inc
popa
fsubs
movsb
loop
mov
fimuls
mov
imul
xchg
pop
cwtl
repz
js
nop
or
pop
jecxz
dec
loop
hlt
push
inc
fmull
mov
mov
mov
or
les
mov
sbbl
push
leave
outsl
xor
test
lock
push
pop
std
add
cmp
sbb
and
int
cs
push
dec
cmp
mov
sub
xor
cli
daa
or
add
push
adc
cmpsb
test
mov
jae
or
mov
data16
mov
jp
icebp
repz
into
dec
mov
ljmp
test
aad
scas
fimuls
aas
or
inc
and
mov
dec
xchg
mov
mov
stos
aad
es
iret
and
dec
sbb
mull
mov
int3
imul
jle
les
pop
add
aam
sub
mov
and
das
hlt
sbb
dec
std
repz
rol
fcmovnbe
popf
pop
in
jmp
scas
xchg
or
stos
fdivrs
lcall
push
mov
lea
call
add
add
xlat
lea
mov
adc
ja
sbb
mov
cmp
sbb
repnz
cmp
dec
mov
stc
pushf
pop
pop
xor
test
mov
sbb
je
fwait
sub
fisubs
ret
popf
push
lgs
mov
icebp
ret
aam
cltd
data16
inc
cmc
pushf
pop
adc
xchg
mov
and
and
mov
gs
iretw
iret
lock
mov
xor
clc
lock
and
rcrl
and
lahf
enter
sarb
or
iret
push
xchg
and
jnp
imul
aaa
js
das
add
bound
sub
add
rcrb
mov
inc
jbe
sub
xchg
shll
fidivrl
push
and
fld
sbb
int3
stc
mov
outsb
cmp
push
mov
mov
decb
adc
pop
dec
mov
shll
sub
xchg
ret
int
int
jns
and
lret
pop
pop
push
push
insl
fs
and
leave
pop
sahf
fdivr
push
mov
or
mov
dec
pop
mov
daa
outsl
sbb
ja,pt
insl
hlt
test
pop
les
fwait
mov
or
fldcw
or
roll
adc
es
psubusb
dec
cs
popa
lea
add
jle
mov
aad
jb
in
fnsave
out
cmp
insb
cld
rcll
data16
es
fwait
or
mov
jo
enter
ret
out
rclb
ljmp
jp
dec
rclb
shl
cmp
pushf
inc
mov
push
xor
lods
js
pusha
xchg
or
jge
outsb
mov
and
push
xchg
and
and
fnsave
mov
adc
dec
mov
pop
or
inc
pop
aaa
je
popf
das
pop
and
out
xor
outsb
push
push
lods
jecxz
inc
push
jo
fcomi
aaa
popf
subb
int3
cmp
xor
dec
scas
lock
arpl
xor
or
in
inc
jp
lods
add
lcall
rcrb
pop
mov
mov
jle
push
push
fwait
in
lods
jmp
out
imul
aad
lahf
xchg
cli
lock
mov
sub
pop
sub
sbb
pop
add
mov
xchg
inc
scas
xchg
test
inc
loope
mov
mov
mov
scas
xor
hlt
push
add
inc
push
cwtl
fsts
jmp
cmpsl
faddl
mov
fwait
ss
cli
xchg
ljmp
addr16
xor
xor
pop
sub
fs
ja
adc
les
cmc
andb
ljmp
sbb
out
pop
dec
push
notb
sbb
pop
adc
xor
imul
cmpsb
mull
xor
fldl
repz
scas
xor
mov
rcl
mov
aaa
fadds
push
sub
pop
icebp
lahf
call
loopne
shll
sbb
xor
loopne
add
js
outsl
jno
mov
scas
lret
cmpsb
cli
loop
neg
push
adc
lret
inc
clc
test
jp
rcl
and
lcall
pop
pushf
insl
fisubs
dec
mov
xor
jns
xor
ficompl
iret
int
daa
inc
adc
imul
mov
pushf
cmp
adc
sbb
and
jle
outsb
orb
or
cltd
sbb
dec
mov
jmp
inc
shl
pop
movsb
ret
mov
inc
ret
cmpsb
outsl
adc
pop
insl
je
and
into
cmpsl
sbb
aam
test
pcmpeqb
ds
mov
mov
mov
stc
xor
mov
aad
mov
xor
sub
push
shl
into
mov
adc
push
andl
cwtl
xor
lods
xchg
adc
or
sbb
in
cmp
cld
arpl
roll
dec
xor
lea
mov
addr16
movsl
in
add
fadd
icebp
dec
jp
sahf
clc
es
cmpsb
or
pop
sub
push
xchg
js
cmp
or
adcb
adc
fstl
xchg
cmp
mov
cmp
xchg
daa
sarl
push
dec
sbb
in
iret
lds
or
inc
lahf
jne
fisubrs
arpl
pop
inc
dec
fdivl
mov
stc
sub
sbb
out
adcb
int
popf
popa
insb
pop
mov
mov
hlt
dec
dec
mov
out
sbb
xor
jle
dec
inc
test
ret
and
pop
jnp
mov
sub
mov
lods
sub
aad
ljmp
dec
inc
push
and
inc
adc
ds
dec
inc
sbb
dec
and
sbb
insl
inc
jno
cmp
pushf
fstl
rcrl
push
cmp
arpl
fstpl
jns
sbb
pop
jb
jns
aas
xrelease
mov
mov
hlt
mov
in
es
and
fisttpll
inc
mov
or
ss
xor
mov
mov
mov
stos
push
pushf
fcomp
icebp
or
cld
pop
inc
movsl
cmp
mov
out
mov
in
out
push
or
or
pushf
mov
insb
loopne
stc
lret
dec
xor
xchg
dec
mov
and
jnp
mov
std
or
ja
mov
mov
and
pop
clc
gs
adc
mov
test
aad
in
xchg
movsl
cs
add
cmp
dec
imul
hlt
call
and
aad
dec
lods
fmull
push
mov
fwait
lea
fcomps
in
inc
sub
in
mov
stc
jnp
and
cs
sbb
push
test
in
mov
xlat
fwait
sub
push
pop
loop
inc
lcall
test
rolb
mov
insl
ss
mov
or
mov
jg
into
sub
aaa
jle
test
std
dec
add
jns
lock
ja
ljmp
lds
mov
mov
into
sbb
pop
cld
adc
movntq
imul
push
sbb
cmpl
std
push
es
sbbl
sub
repz
cmp
mov
dec
xor
stos
fisttpll
cmp
nop
sub
adc
sbb
mov
cmp
mov
dec
in
dec
jecxz
or
inc
bnd
lock
cmc
adc
rol
mov
lods
lods
mov
push
cmp
outsb
cltd
sti
or
push
ret
mov
sbb
push
add
mov
xor
adcb
inc
mov
das
test
imul
mov
ret
push
pop
dec
shll
xlat
push
pop
jmp
jns
mov
xchg
sbb
mov
xlat
and
push
cmpb
enter
or
in
loopne
mov
gs
fmul
and
or
mov
lea
mov
div
sbb
pop
xchg
push
xor
mov
mov
mov
cmp
add
mov
push
pop
leave
cmp
mov
addr16
push
mov
dec
mov
sbb
add
fdivrs
cmp
pop
xchg
insl
push
cmpsb
fst
jnp
sbb
add
sub
lcall
and
inc
push
pop
cs
jae
scas
pop
pop
cld
fiaddl
out
int
push
imul
out
jge
cs
mov
jns
mov
sar
or
lcall
rolb
into
test
sarb
outsb
mov
push
scas
adc
and
push
test
ljmp
test
stos
dec
sbb
data16
push
popl
or
mov
sbb
test
not
jge
insb
loopne
pop
jg
xchg
and
clc
mov
and
aad
xor
or
andl
je
icebp
out
mov
cmp
push
in
decb
imul
ret
jbe
repz
rclb
push
inc
inc
inc
scas
orl
cs
jae
pop
sub
loopne
adc
aam
push
movsl
xor
test
scas
inc
or
dec
adc
jmp
xchg
int3
popa
push
test
out
pop
stc
inc
jnp
imul
lods
mov
add
in
pop
das
test
dec
push
inc
mov
push
aam
arpl
sub
mov
adc
adc
fmull
adc
mov
gs
jb
imul
icebp
mov
sub
fnsave
jg
cmp
cltd
adc
dec
pop
jb
scas
adc
ds
in
mov
insl
outsl
arpl
push
mov
mov
adc
rorb
repnz
in
pusha
cmp
cmp
dec
pushf
test
aaa
shlb
sub
cmpsl
add
movb
pop
xor
xchg
dec
pusha
push
test
sbb
aam
ret
stc
and
cld
or
or
mov
dec
or
mov
xchg
adc
jae
inc
scas
pop
xchg
in
lahf
es
pop
dec
inc
cmp
imul
xchg
mov
imulb
arpl
out
jnp
pop
cmp
test
cmp
inc
mov
out
fcoml
adcl
add
adc
pop
mov
mov
lods
ret
or
dec
push
std
fld
or
xchg
and
and
inc
xor
mov
cmp
and
das
mov
test
aaa
sbb
and
movsl
stc
and
fstpl
lcall
std
inc
loopne
imull
fistpll
xchg
mov
cmp
mov
mov
out
pop
cmp
pop
shlb
outsl
cld
rol
push
adc
xor
out
loopne
mov
aaa
add
sub
xchg
add
test
jns
repz
mov
xchg
fildll
cmp
cmp
pop
jmp
push
leave
push
jb
mov
xchg
or
mov
test
xchg
movb
mov
and
mov
cli
psraw
loop
sti
insl
sarl
xchg
test
cmpsb
xchg
or
out
loopne
ret
add
aad
fisttps
add
insl
fsubrs
adc
jb
mov
push
fcoml
icebp
cmp
or
aaa
jb
int
cmp
push
movsb
enter
and
pop
aad
test
fs
pop
and
push
and
dec
int
mov
sub
adc
ret
bound
or
jns
arpl
sbb
sbb
xchg
leave
cmp
orb
mov
bound
and
aad
out
cmpsb
ret
adc
jnp
xchg
notl
insb
push
mov
push
fs
es
out
add
in
outsl
dec
mov
inc
fsub
sti
int3
lods
add
hlt
ds
divb
or
xor
xlat
sub
ljmp
dec
add
ljmp
addr16
jns
sub
mov
lods
ja
push
out
ret
scas
shlb
scas
rol
mov
popf
jg
lea
lods
iret
inc
outsb
mov
jmp
rdmsr
pop
sbb
mov
rcr
xchg
pop
sbbl
je
test
ss
ret
cltd
clc
testl
mov
xor
sbb
ds
scas
std
mov
jp
xchg
shlb
sbb
aaa
sti
mov
push
outsl
inc
cmp
notl
sbb
or
sub
mov
enter
in
add
mov
sti
mov
or
xchg
inc
adc
hlt
icebp
add
les
mov
outsl
int3
mov
orl
cmpsl
in
out
movsl
jg
adc
push
mov
out
jno
cmc
jae
mov
push
shrl
add
pop
lcall
mov
mov
arpl
es
pop
cmp
mov
xor
push
jns
fcoms
mov
cmp
test
adc
aad
addr16
hlt
jl
dec
shlb
gs
xlat
pop
jns
cmp
dec
ja
mulb
subb
adc
iret
loope
in
mov
mov
out
dec
idivb
inc
roll
sbb
xchg
adcl
mov
jns
fisubl
lds
pop
fdivrs
cmp
push
in
out
push
push
xchg
inc
shrl
push
ds
xor
and
sbb
test
movsb
or
lcall
ljmp
mov
push
rep
icebp
mov
or
mov
pop
jno
mov
mov
push
imul
cld
adc
movsb
xlat
int
lret
lods
rolb
ljmp
and
or
xchg
mov
out
sbb
daa
je
pop
or
scas
xchg
jns
insb
sub
mov
cltd
pop
mov
mov
lahf
loope
lret
repz
jnp
in
lods
test
outsb
dec
decl
insl
pop
sti
jecxz
test
int
lcall
jbe
dec
xchg
sti
jg
cmp
les
xor
and
adc
insl
fs
pop
mov
ss
fidivrl
mov
repz
adc
push
push
lret
or
arpl
fiadds
jae
mov
les
add
push
scas
aaa
sbb
and
inc
xchg
mov
and
popf
nop
lret
dec
bound
popf
add
push
scas
jmp
in
das
jg
je
psubsw
ret
insb
adc
jns
ss
mov
mov
xor
cmpsl
mov
addr16
into
stos
aaa
dec
stc
jo
popf
jle
cwtl
push
sar
dec
push
mov
mov
or
xchg
add
fmuls
loope
xor
xchg
in
ljmp
std
cs
xchg
xor
xchg
call
jmp
fdivrs
jne
lods
mov
fistpll
push
sarl
jp
frstor
push
cli
dec
pop
shrb
sub
pop
cmp
fstpl
js
mov
in
dec
in
out
or
mov
mov
jno
pusha
loope
push
mov
mov
inc
and
inc
push
cltd
mov
ror
cmp
pop
inc
out
push
nop
jl
shl
sub
jbe
mov
sub
xlat
std
jl
and
dec
call
imul
out
test
mov
stos
in
push
stos
xor
shlb
inc
and
sub
cmp
aam
sub
or
mov
xchg
into
push
shlb
mov
hlt
push
sbb
push
addl
jp
mov
sub
dec
mov
pop
repz
and
movsl
imul
mov
mov
bound
jmp
mov
loop
pop
rolb
movsb
mov
mov
adcl
push
cmp
aam
mov
xchg
mov
aad
in
xchg
jae
xor
mov
dec
mov
int
pop
jmp
movsl
push
pushf
mov
or
pavgb
imul
cld
out
daa
fcomip
mov
or
dec
jmp
push
fnsave
inc
pop
xor
scas
test
dec
filds
out
mov
push
push
les
in
jge
hlt
mov
cwtl
dec
rcrb
rolb
cmp
imul
mov
or
pop
imul
aas
add
or
in
lock
mov
pusha
and
mov
or
mov
mov
sub
dec
fistpll
pop
movsl
push
xchg
jns
jg
cmpsl
jo
dec
jecxz
in
pusha
jle
or
addr16
cmpsl
pop
cmp
cltd
push
ja
pop
fwait
mov
xor
pop
lods
xchg
fwait
pushf
mov
rcrb
cmpsl
push
out
rolb
repnz
shll
daa
jno
add
dec
rclb
mov
test
cmp
mov
pop
cli
cmp
or
jo
int
scas
popf
mov
enter
in
xchg
jl
pop
xlat
mov
fs
xchg
je
jg
hlt
inc
sbbl
sub
xchg
push
pusha
call
ficoml
pop
stos
mov
sub
rclb
xchg
outsb
stos
or
ret
dec
pop
cs
pop
xchg
push
call
dec
sbb
push
add
imul
addb
nop
xor
cmc
xor
leave
mov
cmc
mov
int
pop
sbb
add
dec
js
cmp
push
xor
cltd
jo
leave
inc
in
aaa
fsubrp
es
ffree
ss
add
movl
push
ljmp
xchg
scas
sahf
nop
mov
aas
inc
jbe
loope
xlat
outsb
out
icebp
pop
sti
jecxz
add
pop
fsubrs
lods
orl
pop
insb
push
mov
cmp
mov
inc
sub
push
js
add
mov
sbb
add
dec
jg
out
inc
lcall
js
int
xor
jge
stos
or
push
jecxz
imul
fs
loop
scas
in
inc
adc
arpl
imul
or
mov
and
lret
push
cmpsl
aad
or
cmp
ds
add
or
outsb
cmp
rorb
loop
out
mov
iret
test
mov
xor
sbb
mov
inc
xchg
gs
aam
mov
sub
subb
mov
jp
add
loopne
jmp
pop
sub
divl
xchg
xor
daa
mov
adc
aad
cmc
movsl
test
outsb
lahf
xor
inc
imul
mov
rolb
stos
popl
push
or
cmp
fsubl
rdpmc
sbb
aad
jmp
test
gs
xchg
dec
xchg
xchg
xor
push
orb
cmp
push
mov
dec
and
rolb
lcall
ud0
imul
xchg
or
xchg
xlat
cmp
pusha
test
decl
lea
sbb
stos
pop
pop
fcmovbe
stos
mov
loope
xchg
orl
popf
les
call
and
sub
inc
adc
adc
add
mov
jmp
jno
add
iret
jb
cwtl
mov
jnp
pop
jl
lock
push
lods
add
sub
out
inc
imull
je
cmpsb
fisubrs
xchg
hlt
xchg
insl
sub
idiv
outsl
xor
es
cmp
jns
and
push
in
xlat
xor
mov
pop
push
pop
push
fwait
cmp
or
addr16
outsl
sbb
js
movsb
ds
push
or
inc
addb
push
scas
mov
fwait
cmc
fwait
and
push
mov
lods
test
inc
cmc
loope
add
push
mov
push
in
in
imul
xchg
pop
pop
adc
sub
pop
ss
xor
fwait
lret
sub
xor
xchg
inc
clc
xchg
iret
movsl
mov
ficompl
push
jo
das
or
outsl
mov
and
cs
insb
pop
mov
lret
sub
outsl
xchg
xor
lcall
addb
gs
shlb
imul
inc
addr16
push
fdivrs
fistps
cmp
xchg
mov
addb
push
movsl
enter
pop
mov
jp
div
ret
mov
pop
dec
mov
mov
xchg
or
addr16
loop
push
push
jmp
sub
and
dec
lea
xchg
mov
sbb
imul
fdivs
in
sub
movsb
fildl
inc
pop
mov
pushf
bound
and
and
mov
mov
das
loope
mov
sbb
ret
les
dec
and
clc
mov
lcall
xchg
pop
arpl
add
stc
add
xor
scas
mov
repz
mov
jle
jp
sbb
imul
mov
sub
lods
out
jbe
outsl
mov
mov
mov
mov
inc
inc
adc
cwtl
andb
loope
aas
lods
fisubl
test
movsb
repnz
shrb
lret
out
cmp
lock
inc
out
cs
adc
and
loopne
jge
repnz
lret
and
inc
lock
jg
fistpl
scas
call
inc
into
pop
scas
xor
movsl
jns
xchg
int3
pop
inc
fsubr
js
push
cltd
dec
aaa
in
cli
sub
mov
out
inc
or
xor
pop
mov
mov
test
aas
xchg
mov
in
xor
jns
jbe
and
cwtl
cld
lret
lcall
mov
or
cmp
andl
mov
movsb
dec
or
leave
sbb
movsb
ret
mov
dec
mov
sbb
pop
push
fcoms
test
adc
xchg
mov
jb
incl
outsl
fwait
popa
mov
rcl
add
mov
mov
jmp
das
shlb
xchg
icebp
les
repnz
xor
mov
jecxz
xchg
sbb
data16
sbb
pop
outsb
push
add
bound
push
cmp
xchg
dec
lret
testb
dec
repnz
les
ficomps
sbb
pop
and
int
imul
loope
pop
jle
adc
insl
outsb
and
insb
mov
in
mov
mov
xchg
cwtl
mov
loopne
jae
adc
or
cli
mov
cltd
cs
or
fstpt
push
stos
stos
pop
in
test
fistpll
push
pushf
rclb
cli
insl
push
mov
dec
iret
outsl
push
and
jl
mov
or
xchg
xorl
pop
mov
inc
push
fisubrs
jb
bound
je
mov
push
add
leave
jae
into
pop
rcrl
jb
mov
lret
jnp
mov
lods
dec
fstl
notb
scas
jp
lods
bound
or
push
fidivs
pop
and
arpl
cli
xor
mov
pusha
addb
pop
and
cmp
es
es
test
dec
mov
es
jno
inc
shrl
rcrb
sub
scas
or
aad
popf
xor
push
cli
mov
pop
imul
push
rcll
mov
cmp
add
imulb
ds
add
in
sub
data16
mov
push
jecxz
push
ds
xor
xor
aad
les
mov
fs
push
xor
push
subb
push
xchg
and
ljmp
idivb
and
xchg
and
sbb
xor
int3
xor
mov
in
push
jecxz
imul
mov
xor
test
mov
xchg
jp
xchg
fwait
movsl
add
add
jp
add
pop
pop
cmp
cmp
xor
pop
call
test
pop
xor
bound
test
mov
dec
pop
add
jae
movsl
xchg
jecxz,pt
mov
fbld
xchg
pop
dec
pop
push
idiv
mul
bound
mov
movsb
out
adc
push
mov
xchg
aad
popa
mov
dec
jae
std
push
ret
push
test
and
pop
rcl
sti
dec
notl
aas
ljmp
testb
sub
xchg
cmp
cmp
faddl
dec
jne
cmc
testl
addb
mov
xchg
inc
repz
mov
pop
or
cli
rorl
mov
and
cld
inc
jmp
dec
popf
add
sarb
pop
pop
int3
addr16
jno
adc
jae
scas
push
lods
inc
clc
dec
cmp
hlt
hlt
and
out
or
dec
add
adc
push
cmc
fwait
int3
cmp
ret
jg
scas
or
int3
jne
inc
mov
jmp
xchg
shl
push
movsb
popa
inc
addr16
jb
jno
mov
mov
outsb
lret
loop
mov
add
xchg
sub
ja
mov
and
cwtl
xor
stc
fbld
sbb
aam
ret
sub
mov
mov
mov
lea
inc
inc
push
stos
adc
int3
test
push
dec
inc
push
ljmp
rcrb
mov
outsb
push
push
jb
inc
pop
and
xchg
jmp
jl
aad
pusha
xchg
int
cs
imul
lret
mov
jge
jmp
shr
pop
std
dec
pushf
call
dec
scas
icebp
lods
jmp
and
inc
leave
jnp
stc
aam
sbb
sub
ss
leave
sub
insb
test
push
pop
cmp
pusha
xor
xlat
jge
shll
fmull
imul
xchg
test
inc
cmp
inc
jl
mov
dec
cmp
inc
cmp
outsb
push
int
je
fidivs
aam
arpl
xor
cmp
imul
xor
iret
sub
loopne
jp
in
ljmp
cmp
shrb
daa
push
daa
pop
int3
inc
dec
xchg
in
dec
push
das
mov
and
iret
movsb
mov
sahf
or
sub
aad
push
xor
scas
cmc
xor
shrb
outsb
test
push
int3
pop
xchg
inc
push
xor
mov
or
inc
lret
imul
xor
mov
les
push
test
loopne
inc
and
xor
pop
sbbb
mov
push
xor
dec
pusha
or
std
pushl
jge
js
mov
js
sbb
scas
ljmp
orb
adc
lret
sub
mov
mov
and
adc
jae
adc
sub
out
sub
cmp
and
mov
xchg
bswap
lock
and
dec
mov
int3
or
out
ror
xchg
cmc
aad
lcall
call
fwait
jno
scas
jmp
mov
mov
test
out
repz
daa
test
aam
pop
push
loopne
xchg
sbb
rcrb
pop
cltd
mov
clc
mov
scas
loopne
fwait
pushf
pop
cmpsl
daa
daa
pusha
fmulp
jnp
hlt
pop
push
fcos
xor
fidivrl
popf
push
sbb
negl
inc
pop
icebp
lds
nop
iret
xor
daa
mov
jg
jno
mov
jmp
js
movsl
int3
jnp
push
std
adc
data16
xor
in
in
lret
xor
in
sahf
mov
mov
inc
pop
sbbl
cmpsl
add
outsl
in
lahf
mov
xchg
stc
or
jbe
cmp
test
mov
fstpt
push
jp
cli
adc
or
lock
rcl
sbb
outsb
xor
xor
or
pop
push
jge
popf
js
push
hlt
mov
out
dec
in
cmpsl
cmpsb
add
adc
ror
inc
mov
dec
cmp
mov
jbe
add
xchg
sbbb
mov
pop
mov
jo,pt
into
shlb
or
lods
or
adc
shl
inc
in
or
xor
push
cmpb
push
add
negl
mov
jmp
cmp
daa
mov
ds
lea
fld
push
repz
push
adc
fisubrl
push
adc
sbb
lods
orl
mov
fnstsw
cmp
popf
les
insl
ror
stos
dec
int3
sarb
loopne
mov
xchg
lret
adc
push
add
sbb
pop
xchg
dec
dec
sbb
cmp
adc
out
mov
push
push
add
stos
test
std
lcall
jo
movsb
movsl
ja
jns
mov
testb
lahf
xchg
dec
dec
in
imul
xchg
inc
rolb
add
aam
scas
or
mov
popf
sbb
pushf
rcrl
pushf
jmp
lods
cmp
enter
mov
sub
frstor
mov
hlt
mov
push
rolb
pop
mov
cmpl
in
inc
jns
test
mov
sbb
jbe
add
pop
fmuls
in
sub
sbb
insb
xchg
adc
jmp
xchg
jmp
sub
das
cmp
test
sub
imul
jl
out
mov
xchg
mov
lret
push
movsb
mov
jae
nop
ret
push
pop
pop
xchg
outsl
dec
sbb
hlt
and
icebp
xchg
cld
xchg
fisubs
adc
push
pop
leave
call
mov
imul
out
sbb
pop
and
mov
push
pop
nop
pop
pop
sbb
adc
mov
lods
push
sub
or
xor
loop
jg
sbb
insb
enter
aaa
adc
mov
out
sub
repz
fidivl
xchg
add
sbb
fldenv
xor
adc
mov
ret
pop
imul
std
test
popa
fcompl
ss
in
in
or
pop
mov
sahf
add
test
dec
in
xchg
scas
loop
push
fs
push
out
push
imul
mov
enter
lret
cmpl
add
sub
jp
mov
in
mov
sbb
push
add
ja
dec
mov
mov
sbb
push
or
push
popf
pusha
mov
and
std
shl
pop
dec
in
fsubr
and
mov
adc
scas
push
xor
sbb
mov
or
jno
stos
movsl
leave
mov
out
in
mov
xor
xchg
out
xchg
and
cld
repz
xchg
mov
xor
into
add
mov
adc
inc
mov
pop
shll
push
xchg
push
mov
out
jmp
out
sbb
aas
cmp
push
imul
fstpl
add
inc
xor
in
xchg
jge
push
hlt
sub
stos
lret
das
test
add
sbb
in
dec
cwtl
mov
ljmp
dec
data16
pop
mov
lods
lret
scas
fisubs
or
adc
xor
lock
or
daa
sbb
out
push
inc
and
xor
ret
aaa
out
xchg
mov
shl
ret
pop
pop
add
cmp
loopne
cs
add
int3
cmp
rcrl
adc
or
int
popl
icebp
sarl
xchg
in
inc
call
lds
xchg
push
outsl
xchg
pushf
cmp
stc
and
cmc
sahf
cli
inc
mov
mov
rcr
test
das
stc
push
retw
rcl
std
je
fcmovne
jae
cltd
mov
sbb
pusha
push
jb
pop
jmp
sbb
or
mov
mov
cmp
cmp
dec
xchg
and
cltd
push
lods
cmc
stos
xor
inc
cmp
push
je
test
pusha
mov
pop
pusha
cmpl
sbb
dec
mov
dec
lcall
mov
lahf
mov
iret
jb
dec
aam
xchg
and
push
xor
adc
adc
enter
sarb
aad
out
cmpsl
mov
dec
dec
sarb
test
sub
lret
and
imul
jg
loope
lret
xchg
addr16
xchg
xchg
popa
mov
cmp
lret
cmp
repnz
sub
pop
es
dec
inc
clc
daa
and
push
push
jmp
fildll
mov
jle
cmpsl
sahf
adc
int3
lret
mov
inc
les
fcomps
lds
jbe
or
cld
fnstenv
inc
jl
movsl
in
push
imul
mov
loopne
hlt
outsb
jmp
mov
in
xchg
shlb
cmpsl
jmp
adc
push
loopne
xor
pushf
loop
inc
gs
xchg
or
inc
add
sbb
inc
dec
mov
push
xchg
mov
adc
adc
cmp
add
xchg
jp
scas
lods
mov
outsb
mov
es
jnp
cmpsl
adc
and
bound
pop
pop
fdivs
sbb
push
dec
xorl
aas
cmp
dec
je
out
pop
out
mov
lahf
fildll
sbb
outsb
cltd
sbb
push
cmp
pop
sahf
repnz
jbe
into
mov
mov
cmpb
mov
lea
mov
test
es
sbb
icebp
lret
inc
inc
xor
mov
ljmp
push
sbb
inc
and
loopne
andb
test
sub
push
rcrb
xlat
subl
rolb
fsubs
push
adcb
jmp
add
xchg
inc
je
cs
push
jmp
test
scas
cli
js
push
insb
xor
int3
sub
adc
push
loope
out
sbb
push
mov
dec
cmp
fsubl
dec
mov
cmc
cmp
jp
aam
shr
enter
stos
cmp
sbbb
mov
enter
out
mov
lea
jmp
pusha
jg
xorl
cmp
adc
mov
dec
ret
dec
xor
stos
mov
aas
cld
xchg
btc
addl
pop
movsb
jnp
mov
jb
adc
pop
js
pcmpeqb
outsb
push
add
clc
cs
add
pop
popa
ds
dec
pop
popa
mov
inc
xchg
xchg
mov
sbb
xor
push
shlb
or
or
test
xchg
aam
in
cmp
lahf
mov
call
push
ljmp
test
adc
fidivs
cmc
stos
add
jg
das
xor
pop
mov
rolb
mov
sub
jo
cs
jmp
mov
jne
sub
adc
xlat
push
sbb
and
and
dec
clc
push
or
sti
and
popa
cmpb
std
cmp
popa
xor
xchg
popa
mov
jl
pop
shll
pop
insb
movsb
iret
jecxz
sub
xor
sub
mov
and
dec
adc
test
loop
lcall
adc
lret
rcl
mov
outsb
fimuls
mov
sub
mov
fcoml
dec
test
jg
pop
in
movsb
out
hlt
and
push
or
int3
sbb
outsb
xchg
fisttpl
lgs
mov
pop
nop
mov
sub
leave
sbbl
xlat
add
dec
adc
sub
pop
push
pop
sub
push
lret
icebp
rcrb
jne
cmp
lods
sahf
mov
push
mov
mov
shrl
cmp
jo
call
lcall
mov
jne
and
out
inc
fildll
fsubrs
cmp
addr16
shrl
dec
mov
aaa
inc
push
dec
jecxz
adc
repz
add
cltd
sbb
into
add
push
addb
pop
lcall
fldl
std
int
mov
push
push
or
scas
jg
out
inc
push
pop
inc
fs
add
test
mov
ljmp
test
pop
mov
out
cmc
jbe
sub
data16
ljmp
xlat
addr16
inc
int
mov
das
dec
sti
arpl
stos
loope
mov
xchg
sbbb
ljmp
add
inc
ffree
rcll
insb
je
test
rcrl
ljmp
sub
or
aaa
sbb
pop
xchg
xor
jns
lcall
and
movsl
lahf
pop
pop
int3
sub
mov
loope
pop
repz
mov
int3
aam
mov
jns
idiv
jmp
je
std
int
and
shll
frstor
pop
dec
mov
mov
inc
mov
outsl
mov
and
xor
pop
mov
push
inc
inc
or
jns
jg
inc
std
push
pop
arpl
push
test
mov
xchg
clc
inc
xchg
jne
cs
icebp
mov
mov
imul
mov
add
ljmp
sub
in
ret
sbb
or
push
cmp
sti
xorl
sti
leave
adc
test
lock
shlb
ret
fcompl
lds
jbe
xor
fdivr
cltd
fmul
pop
mov
jbe
mov
outsb
cmc
rcrl
aad
mov
jge
flds
ficomps
cld
bound
xchg
mov
arpl
mov
jnp
outsb
adc
dec
push
aaa
rclb
aad
pop
pushf
sub
je
push
inc
mov
or
xlat
push
rolb
pusha
add
lods
dec
inc
out
xchg
xor
in
in
popa
jmp
xchg
inc
imul
sbb
cwtl
lea
sti
push
xor
cmp
push
lds
out
xor
ss
cmp
pminub
sbb
jmp
sbb
inc
mov
jge
daa
adcl
out
aaa
sub
nop
dec
inc
xchg
movsl
gs
lds
cld
cmpsl
sub
inc
jo
push
out
mov
addr16
pop
lcall
mov
pushf
mov
add
push
daa
push
jb
mov
jge
jbe
in
ret
rol
sarb
or
lcall
pop
mov
scas
pop
bound
jb
dec
cmpsb
sarb
sahf
dec
sbb
mov
mov
push
xor
jnp
inc
ret
mov
xor
fcmovu
arpl
inc
fwait
or
xor
inc
dec
out
adc
jecxz
fs
jp
pop
add
jbe
or
lods
bound
cld
and
lcall
xor
movsl
sahf
adcb
mov
repz
gs
sbb
and
out
sti
std
cvttps2pi
push
mov
in
cli
add
int3
imul
xor
xor
pop
jno
xor
cmp
stc
mov
push
jecxz
sub
pop
lea
add
in
add
stos
lcall
cltd
fildll
cli
pushf
adc
ja
loope
mov
fsubrs
mov
mov
ja
into
jle
adc
jge
xchg
popf
int3
std
push
inc
xchg
dec
jle
inc
ret
mov
pop
in
push
pop
cmp
movsl
mov
sub
jp
push
inc
xchg
fdivrl
jns
fistl
js
mov
push
cmp
lods
lcall
pop
test
add
sbb
mov
sbb
das
loop
push
lahf
jge
inc
dec
lods
add
add
in
lods
push
mov
xchg
mov
addr16
insb
sbbb
inc
pop
pop
pop
mov
push
mov
adc
imul
lock
pop
insb
or
push
orb
pop
movsb
mov
inc
pop
imulb
jns
mov
das
push
adc
mov
mov
subb
adc
mov
outsl
add
xchg
ja
adc
push
mov
les
xchg
repz
adc
call
push
stos
iret
sbb
push
loopne
iret
sbb
cs
dec
mov
aas
add
xchg
test
in
in
fmull
rorl
insb
mov
cwtl
sub
aam
and
inc
add
jecxz
dec
or
add
int
xchg
fmul
test
cmpsb
push
push
mov
and
imul
fcoml
cwtl
cmp
daa
jne
inc
lds
mov
out
dec
mov
loopne
inc
adc
pop
cmpsl
int
mov
or
test
aaa
fisttpl
outsl
mov
jno
jmp
in
aad
jbe
icebp
cmpsb
fs
mov
cltd
jle
xor
and
adc
or
lret
jae
fnstenv
aas
jle
push
out
push
mov
ret
mov
loop
in
std
sbb
repnz
adc
daa
fsubp
mov
push
xor
cmp
xor
mov
cmpsb
cmpsl
stos
popa
add
add
adc
hlt
ja
fwait
dec
jo
inc
imul
rcrb
sub
inc
mov
jl
mov
ret
out
scas
scas
fisubl
lret
adc
xchg
cltd
lock
test
and
push
xlat
inc
test
cmp
push
imul
jo
jmp
in
pop
int
mov
je
dec
dec
jl
dec
xchg
and
xchg
clc
out
ret
inc
outsb
popa
into
xchg
movsb
outsl
dec
adc
lcall
mov
xchg
dec
ficoml
adc
out
mov
dec
sub
or
loop
rcrb
outsb
jecxz
mov
pop
add
iret
mov
mov
lea
adc
test
sbb
and
iret
xor
and
int
leave
and
or
jnp
xchg
call
adc
popa
mov
jle
fisubl
arpl
pop
scas
or
ret
testl
xchg
dec
imul
add
std
scas
lret
lds
xchg
adc
push
cmp
mov
cmp
mov
stos
or
mov
mov
pop
lds
mov
pop
sub
lahf
test
mov
mov
dec
pop
pop
and
xchg
outsb
dec
lret
inc
adc
out
lahf
pop
loop
xorl
fwait
lret
ljmp
pop
jle
pop
push
mov
inc
imul
pop
test
xchg
adc
shrl
mov
mov
dec
xchg
or
pop
jmp
loopne
mov
insb
jae
cmp
push
jne
mov
inc
mov
jge
in
adcb
leave
inc
lret
js
fcmovnbe
pop
ljmp
mov
ror
mov
xor
subb
xchg
lds
jb
push
mov
int
add
subl
pop
xor
xor
inc
or
and
shll
jns
inc
imul
rclb
xor
out
xor
xlat
mov
popa
mov
movsb
pop
adc
aad
cwtl
push
inc
sahf
out
add
ds
ljmp
cmc
sbbl
bound
and
pop
mov
jb
cmpsb
popa
outsl
inc
loop
inc
fs
cmpsb
cli
mov
sub
mov
inc
popf
xchg
cmp
pop
lret
fs
psubw
mov
fucomip
push
sbb
xchg
ljmp
inc
and
mov
push
addr16
xchg
or
mov
mov
mov
add
aad
enter
loopne
movb
xor
pop
movsb
pop
xchg
sbb
dec
jb
cmp
cmpsb
ficoml
xor
out
repz
adcl
mov
sete
jle
mov
sub
push
mov
das
test
and
movsl
sbb
or
test
inc
cmp
pop
ljmp
ret
or
push
jecxz
sarl
cs
lea
insb
jp
jbe
gs
mov
sbb
arpl
dec
mov
inc
adc
shlb
inc
add
outsl
push
inc
jne
xor
jbe
xor
into
gs
iret
cwtl
and
adc
or
jecxz
fildl
add
test
push
xchg
xchg
add
fcomi
ret
or
and
imul
or
popa
cld
int
add
arpl
loopne
cwtl
adc
sub
pop
stos
or
sarb
push
in
stc
int
insl
pop
sub
push
cwtl
xchg
mov
jmp
movsb
sub
repnz
sbb
cmpsl
test
clc
addl
sbb
insb
js
lods
push
test
shrl
lods
jae
jl
mov
fiadds
pop
incb
ja
pop
jl
cld
adc
mov
adc
push
sub
adc
iret
cmp
push
scas
imul
dec
ljmp
add
xchg
fistl
jg
in
inc
aaa
loopne
lfs
pop
or
cmp
mov
lods
jg
mov
cmp
movsl
mov
cmc
out
je
je
push
pop
adc
add
pop
and
cli
and
inc
pop
pop
cld
push
icebp
out
sahf
aaa
out
mov
fistl
pop
daa
aaa
je,pn
mov
std
push
clc
push
adc
clc
int
pop
cmc
and
cwtl
inc
orl
lcall
add
push
test
arpl
cmpsl
cwtl
hlt
fcmovne
pusha
test
call
arpl
iret
and
rorb
ja
mov
test
push
fisttpll
rorb
adc
leave
push
push
rorb
into
xor
xor
test
stc
mov
lea
adcb
dec
cmp
shlb
int3
add
inc
add
add
mov
popf
sbb
fcmovb
adc
sub
mov
rolb
push
mov
sbb
sbb
repnz
and
out
inc
jecxz
ss
mov
fidivrs
xchg
pcmpeqw
xchg
jmp
fs
jns
xor
arpl
cmp
data16
pop
jmp
and
lret
jns
in
sbb
les
add
outsb
push
test
pop
ret
pop
dec
ljmp
iret
sub
mov
mov
mov
scas
loopne
bound
fs
hlt
divb
aas
mov
adc
and
cs
cld
xchg
popf
xor
sbb
or
nop
sub
push
mov
in
sbb
sub
int3
jle
nop
xchg
mov
mov
repnz
stos
xor
add
es
scas
lock
jbe
aad
push
push
sbbl
pop
mov
push
fwait
orl
test
mov
loopne
ret
xchg
mov
jg
pop
mov
inc
sub
les
shll
fistpll
inc
dec
bound
arpl
sbb
add
fcmovne
out
mov
inc
jnp
push
dec
dec
pop
ret
push
std
jae
fstps
ds
daa
icebp
mov
ja
add
jo
jb
test
fsubrs
mov
adc
cs
clc
mov
mov
fdivrs
sarb
in
mov
sbb
inc
cli
sub
cmp
cmp
mov
fidivl
and
test
cs
mov
adc
jnp
test
gs
cmp
add
fbstp
or
bound
pop
mov
es
push
in
xor
popa
mov
push
lds
adc
leave
ret
aam
jecxz
mov
mov
push
mov
repz
cld
popf
push
outsl
mov
ja
mov
fimull
pop
flds
insl
jmp
fildll
push
mov
es
pop
test
sbb
inc
or
sub
dec
popa
ret
cli
mov
sub
into
gs
je
xchg
xor
mov
mov
out
pop
dec
in
ds
adcl
stos
jae
stos
lret
jb
ss
add
cld
pop
jb
mov
dec
mull
imul
sti
inc
ljmp
inc
enter
add
or
in
int
xor
mov
pop
aas
sub
js
xor
add
and
test
lahf
adc
jbe
mov
dec
ds
or
mov
xlat
mov
push
ljmp
inc
jbe
lcall
pop
xchg
xor
inc
xor
jbe
pop
sahf
cld
jle
jg
or
push
push
mov
sahf
jl
and
ljmp
pop
aaa
fstp
cmp
or
jmp
lods
and
inc
les
adc
jno
stos
sti
aas
iret
cs
sub
sbb
and
pop
push
xor
lods
pop
es
inc
mov
cld
and
mov
mov
js
mov
loopne
pop
sarl
and
scas
cmp
push
mov
rcrb
cmpsb
loopne
add
mov
pop
negl
insb
imul
shrb
or
lods
push
cmp
mov
xchg
adc
or
cmpsl
loop
cld
pop
push
andl
std
hlt
rcr
loopne
push
and
and
inc
jne
sarb
pushf
cmc
push
int3
mov
sub
ficoms
sub
popf
fisubl
mov
out
lods
addr16
xor
ret
push
inc
add
sbb
orb
rclb
mov
test
inc
cmpb
mov
xorb
mov
jno
xchg
stc
lahf
inc
mov
sti
sub
cs
ja
nop
negl
push
push
in
fists
push
mov
outsl
xor
inc
push
mov
inc
ret
mov
out
and
pusha
je
enter
xor
pop
xchg
and
add
lret
push
dec
in
inc
jmp
mov
inc
jg
mov
adc
out
imul
mov
xchg
jns
mov
adc
jg
popa
out
rorl
icebp
xlat
push
mov
and
outsb
add
add
add
mov
xchg
loopne,pt
cltd
mov
cmp
ret
jae
push
sub
dec
fnstcw
jae
mov
or
mov
int
jmp
mov
adc
jmp
adc
xchg
mov
xchg
arpl
dec
xchg
dec
sub
movsl
ficoms
fsts
fwait
and
xchg
in
out
dec
rcll
mov
in
std
jnp
icebp
sti
sbb
sbb
adc
js
jle
dec
add
jo
mov
pop
jmp
cltd
daa
enter
hlt
pop
hlt
dec
push
movsb
adc
out
push
xorl
lcall
shrb
lret
xchg
fidivrs
pop
orb
jmp
fidivrl
pushf
daa
arpl
adc
ss
daa
or
loope
xchg
lret
out
adcb
or
cmp
xor
and
adc
sbb
mov
insb
pop
pushf
fsubrs
pop
mov
popa
sbbb
daa
fwait
mov
sub
pop
cmp
xchg
rcr
cmp
outsb
pop
mov
cmp
cmp
repz
cld
push
pop
xor
in
dec
addl
mov
insb
popf
aad
xor
jnp
fs
in
lcall
leave
repnz
iret
js
cmp
xlat
neg
fwait
orl
add
xor
lock
fsubrp
sub
filds
frstor
mov
clc
jmp
std
push
dec
mov
add
push
iret
inc
mov
roll
mov
cmpsl
sbb
out
sbb
test
push
stos
mov
popa
cs
ret
dec
int3
int3
sub
insb
dec
repnz
outsb
shlb
ja
fildl
leave
stos
lss
rol
jl
mov
fildll
mov
mov
cmp
xor
jnp
sbbl
jnp
pop
hlt
cmpsl
ss
shll
adc
jno
jmp
mov
shrl
jae
xor
rolb
aas
jne
loope
push
lds
dec
push
pop
loopne
lea
repz
rcl
ja
mov
xchg
addb
std
xchg
dec
cmpsl
sbb
lock
sub
in
or
cld
jno
mov
and
outsb
xor
adc
push
jnp
lock
fwait
sub
push
jno
mov
sbb
into
inc
aad
test
xor
sbb
mov
imul
dec
inc
pop
outsb
cmpsb
enter
and
jecxz
jl
adc
ret
outsl
sbb
lahf
wrmsr
cmp
mov
arpl
call
add
and
lock
jnp
inc
scas
xchg
fidivs
xlat
and
outsl
inc
sub
cmc
arpl
repz
inc
repz
dec
mov
lods
testb
adc
cli
out
into
cmp
cmp
bound
xchg
in
cmc
cmp
test
mov
push
mov
in
fnsave
test
jns
pop
xor
jl
jnp
fldt
addr16
ret
int3
int
sbb
orb
movsl
or
into
imul
cmp
cltd
lea
xlat
leave
int
mov
jp
cltd
xlat
push
jmp
int
into
pushl
dec
rcl
add
sbb
jl
test
xchg
and
outsb
aaa
addl
inc
xabort
push
ret
jecxz
scas
inc
cmc
pop
cmpsb
mov
js
sub
jae
call
aaa
xchg
mov
adc
cltd
movsl
loopne
adc
es
jle
std
outsb
xchg
arpl
jmp
rclb
data16
and
les
fdivrs
loope
jmp
insb
inc
idivl
pusha
sub
add
jno
lods
push
jb
xchg
xor
fs
cmp
jge
xchg
adcb
pop
adc
les
cmpsl
adc
data16
enter
xor
dec
int
fcomps
in
mov
or
icebp
int3
scas
out
mov
mov
push
repnz
cli
ret
mov
xchg
imul
sbb
testb
push
lcall
mov
inc
pop
fsubr
pushf
fimuls
iret
pop
push
push
inc
popa
lcall
and
and
adc
int3
mov
or
mov
and
xchg
inc
dec
mov
sbb
lods
mov
data16
mov
mov
and
testb
mov
xchg
loopne
or
push
mov
dec
mov
push
imul
adc
or
dec
or
add
cmp
or
jno
inc
sbb
test
push
cli
add
jp
add
notl
loopne
ficompl
add
fs
xor
inc
cmp
in
xchg
imul
int3
mov
cmpsl
mov
mov
rolb
mov
fs
push
add
sub
popf
push
js
sbb
cmp
pop
and
push
rcr
xchg
icebp
mov
rorl
sub
sbbb
fisttpl
dec
mov
scas
jbe
mov
sub
pop
test
leave
mov
mov
lods
mov
jns
arpl
mov
int
repz
xor
lret
pushf
data16
xchg
jns
mov
sub
ljmp
dec
fcomps
sbb
inc
aam
pushl
dec
stc
mov
insl
pop
add
jl
push
xchg
mov
arpl
pop
sbb
jl
pop
mov
inc
jns
pop
loop
stc
xchg
adc
test
cmpb
lahf
ds
cmp
pop
push
idiv
add
xor
sbb
ds
mov
out
cmp
daa
cmp
test
fdiv
dec
stos
lods
ret
adc
out
xchg
jl
add
fs
sbb
or
sbb
pop
or
xchg
inc
lret
xlat
inc
aam
mov
pop
int
js
sub
xorb
mov
int3
mov
jmp
add
out
sarb
pop
popa
mov
in
dec
lcall
andl
scas
addb
dec
and
loop
test
addr16
push
adc
movsb
ljmp
ret
adc
adc
call
push
cltd
mov
call
test
mov
pop
push
repz
lds
adcl
in
mov
test
cltd
xchg
xchg
scas
aam
daa
inc
in
xchg
js
jo
sub
pop
loop
sub
sub
sub
cmpsb
sub
mov
lret
pushl
jns
sti
fs
cwtl
mov
jno
rolb
dec
fwait
xor
scas
out
std
jmp
aad
push
sub
fwait
xchg
adc
dec
pop
xchg
mov
dec
xor
sahf
dec
sbb
imul
jnp
xlat
cmp
loopne
pop
outsb
jno
mov
mov
lret
shl
and
aaa
cmp
movsb
fadds
test
mov
stos
pop
sbb
mov
and
mov
js
sbb
and
iret
mov
iret
jno
jp
stc
mov
rolb
mov
and
mov
push
mov
mov
sub
out
jns
out
cmp
in
sbb
cmpsb
call
pop
aam
push
sti
or
mov
iret
stos
ss
pushf
xor
push
out
mov
sti
mov
dec
dec
popa
mov
scas
mov
xchg
fwait
pop
sub
adc
lock
icebp
enter
push
in
mov
or
ror
xchg
cs
xchg
rep
sbb
and
pushl
dec
mov
pusha
lahf
std
jae
sub
cld
jb
jns
sbbl
fidivrl
pop
enter
idivb
loope
cli
stos
repz
push
pop
pop
fimuls
cmp
inc
in
mov
add
cmp
lea
add
sahf
ja
jg
inc
repz
in
int3
pop
fwait
lds
imul
in
mov
daa
stc
insl
mov
cmpb
dec
hlt
mov
mov
cmp
rcl
mov
and
jo
out
mov
mov
jo
cmp
in
loop
sub
mov
xchg
in
jne
loop
xchg
push
and
std
dec
jge
sub
imul
mov
imul
cmp
rolb
push
cmp
jecxz
jo
inc
or
je
adc
or
dec
aaa
xlat
push
scas
cmpsb
in
inc
xchg
lea
fisubrl
test
cmpsb
mov
out
aas
shlb
insl
out
arpl
jnp
pop
pop
jecxz
outsb
mov
out
jge
mov
jg
inc
add
inc
arpl
pop
push
dec
in
fnstsw
jmp
xor
movsl
adc
lock
cltd
cltd
lret
in
jae
addr16
outsl
push
push
adc
scas
mov
std
movsl
and
lret
sub
mov
xchg
sub
mov
sub
mov
jp
repnz
mov
sbbb
add
bound
xor
das
cmpsl
push
pop
int
shrl
mov
xchg
outsb
fcoml
gs
adc
dec
pusha
mov
or
xor
orl
push
fs
fdiv
mov
in
sub
frstor
mov
xor
dec
adc
movsb
xor
and
mov
fldt
out
lret
mov
shlb
gs
testb
daa
sub
xor
mov
aam
mov
jmp
push
orl
xor
sub
cmc
and
mull
jle
jbe
adc
adc
mov
call
mov
or
rcrb
lahf
inc
into
out
loop
rclb
lods
mov
lret
rorb
mov
sub
ret
lds
add
sub
in
into
hlt
test
sub
pusha
mov
rclb
push
push
lods
js
cmp
shrl
push
add
dec
jo
mov
jmp
mov
cmp
mov
imul
xchg
dec
sub
mov
loope
leave
jns
repz
sbb
shrb
imul
mov
jecxz
push
dec
fcmovnbe
xchg
out
sbb
repz
jge
rclb
jle
cltd
add
jno
cmpsb
aas
mov
xor
cs
sbb
es
sbb
ret
movsl
pop
das
dec
aad
rcrb
fdivl
jecxz
jo
pop
cmc
pop
in
repnz
lcall
sub
adc
sbb
jo
movsl
mov
int
xor
repz
adc
xor
mov
aaa
idivl
mov
aad
pushf
dec
in
es
xor
je
bound
les
out
pop
lcall
outsb
lret
sahf
mulb
nop
cmpsb
call
aam
add
sub
shlb
cmpl
or
aaa
jbe
sub
in
daa
cmc
xchg
cmpb
inc
lea
es
lea
loop
push
popf
adc
addb
push
mov
xlat
add
sub
push
cmp
loop
push
mov
test
loop
fidivs
mov
sbbl
stc
daa
je
sarb
mov
test
fdivl
insb
orl
sbb
movsb
pusha
cmp
push
or
paddb
jnp
popa
or
lock
shll
idivl
or
negb
add
iret
dec
push
add
jmp
cld
and
std
cwtl
push
out
in
loope
lds
outsl
repnz
cmp
add
cmpsb
imul
mov
push
shrb
sub
iret
cmp
fwait
das
fs
push
std
shrb
pop
jno
shll
xchg
les
sbb
cmp
loop
ret
sub
repz
or
scas
fildll
outsl
lea
cmp
adc
icebp
rcrl
in
in
mov
loopne
les
iret
push
adc
xor
jle
and
add
out
sbb
ja
jg
pop
xchg
out
movsl
dec
push
test
fisttps
lock
ficoml
sar
fmuls
cmp
jg
pushf
lds
sahf
push
nop
and
mov
xor
clc
dec
inc
add
je
pop
pop
xchg
out
or
lcall
dec
or
addr16
popa
pop
mov
mov
pop
sbb
ds
enter
out
cmp
shll
xlat
xor
xchg
test
lret
mov
cld
push
dec
stc
xor
addr16
xor
scas
arpl
ret
dec
mov
mov
push
mov
ficoms
pop
out
and
dec
scas
das
xchg
mov
ds
rcrb
push
cwtl
sub
mov
jb
dec
jo
add
mov
push
xchg
adc
pop
inc
xchg
aas
bound
out
pushf
mov
mov
call
jmp
mov
dec
xchg
icebp
jg
sti
ret
out
fidivl
sti
mov
ja
test
jbe
pushf
movsl
and
scas
dec
inc
xchg
xor
movsb
stc
push
popf
push
icebp
iret
mov
call
add
hlt
mov
fmull
call
inc
adc
sarl
pop
jb
mov
push
ror
adc
dec
jns
dec
adc
gs
lea
ret
aas
roll
sbb
xchg
stc
ret
jge
xor
dec
jmp
dec
popf
or
dec
xchg
push
cmp
dec
popf
sahf
mov
fsubs
mov
adc
push
jo
push
push
fisubrs
dec
mov
lea
adc
fdivrp
dec
pop
test
lret
mov
inc
xchg
mov
push
rol
xchg
mov
add
sbb
rcl
imul
sub
enter
xor
xchg
aad
arpl
jecxz
xchg
adc
xchg
add
sbb
add
push
rcrb
adc
push
addr16
dec
and
lahf
or
cmp
mov
sbb
pop
xchg
sub
sahf
sbb
pop
push
ret
scas
sbbl
inc
cmpsb
lock
add
stos
fisubs
push
addr16
test
jae
mov
and
rolb
icebp
mov
or
jno
add
cs
pop
pop
sub
jge
jno
mov
adc
dec
push
ficomps
lret
div
dec
enter
add
lods
mov
jmp
insl
cmp
fwait
jle
nop
cmc
inc
rorl
das
mov
lock
int
andl
cmpsl
cwtl
movsl
sbb
cmp
aam
inc
andb
fcomps
jno
arpl
pop
shll
lea
leave
cmp
pop
inc
pop
movsb
and
xorb
lock
jns
xlat
sub
push
sbb
stos
jle
sbb
cmp
incl
mov
out
lock
sub
cld
cmp
cmp
mov
outsl
inc
je
add
dec
stos
inc
loope
cmp
stos
ss
dec
adc
pushf
sbb
mov
fstps
mov
jp
aad
xchg
mov
ret
or
adc
mov
push
sti
test
scas
mov
addr16
mov
aad
nop
mov
cmpsb
jmp
cltd
lcall
sbb
sbb
xorb
cwtl
shl
int3
and
mov
cmp
jb
scas
loope
aas
fldenv
lahf
jnp
out
pop
subl
movsl
dec
mov
cs
in
std
jecxz
sub
dec
pop
cmp
lods
sub
xchg
sbb
leave
mov
jl
mov
mov
cmp
adc
div
outsb
sub
test
and
cmp
daa
stos
or
cwtl
std
xor
and
pushf
fldenv
movsl
and
std
add
das
inc
sub
lds
dec
fnsave
push
lret
or
pop
std
shrb
mov
in
sbb
divb
aas
std
push
push
fmuls
add
mov
cs
pop
jecxz
mov
lea
aam
scas
fcoms
cltd
push
inc
sbb
push
jge
sub
lods
loop
sbb
enter
pop
push
loope
pop
mov
pushf
sbb
pop
dec
fcomip
imul
ret
popf
xchg
sbbb
hlt
lret
inc
jg
or
dec
pop
mov
into
sbb
cmp
xchg
pop
shll
add
daa
add
scas
sub
stos
cmp
aas
icebp
push
or
push
lret
cmp
cmp
sub
xor
pop
cmp
inc
out
mov
dec
push
cmp
push
cmp
mov
push
mov
jae
mov
pop
xchg
sbb
dec
or
push
inc
and
sbb
dec
iret
xor
fpatan
sub
shrb
mov
sbb
lock
cmp
repnz
ljmp
pop
mov
sub
dec
popa
push
xchg
adc
ja
fildll
shrb
inc
xchg
xchg
subb
inc
add
cmp
mov
mov
out
arpl
movsl
sbb
push
jle
mov
psubq
call
shll
push
bound
mov
pusha
test
add
sub
hlt
shlb
cli
and
jns
xchg
arpl
jns
fs
test
sahf
nop
sub
add
rcrl
fs
insb
pop
mov
push
adc
js
inc
push
dec
fadd
cmpsl
mov
add
arpl
dec
cltd
or
pop
inc
pop
mov
push
andl
aas
and
cmp
cmc
fisubrs
xor
cld
mov
sub
in
adc
dec
pop
lret
xchg
cmp
rorb
in
mov
sub
pop
xchg
ficomps
cmovle
push
loopne
int3
je
ja
mov
mov
cs
in
xorl
dec
adc
loope
add
sub
cmp
mov
push
das
fwait
mov
jne
xchg
mov
jnp
xchg
bound
sbbl
or
mov
push
fwait
lds
jl
test
fwait
insb
cmp
test
and
subl
mov
push
or
cli
in
test
push
pushf
test
mov
mov
imul
int3
pop
shr
popf
fdivrs
jnp
int
push
sub
or
push
or
mov
lahf
mov
test
mov
and
insl
aam
rclb
push
cmp
push
inc
inc
xor
int3
call
cli
jnp
pop
pop
aaa
xchg
loopne
add
mov
movsb
jnp
arpl
movsb
mov
roll
mov
sub
add
inc
pop
and
xor
popa
in
or
out
cmp
in
push
imul
and
lahf
popf
dec
xchg
or
push
fcmovb
dec
aaa
push
and
das
ss
enter
sbb
jno
push
out
icebp
sbb
les
test
cs
jb
sub
scas
xchg
mov
dec
rolb
dec
mov
push
loope
movsb
stc
jns
jae
xchg
out
sub
icebp
inc
and
aam
int3
pop
jno
cmp
in
rolb
fimull
rorb
mov
and
shrl
inc
mov
leave
in
push
push
adc
repnz
sbb
sub
fldenv
xor
adc
aas
imul
mov
cli
xchg
xchg
cmpsb
or
mov
cmp
icebp
xor
mov
push
fsubl
jl
repz
fimull
pop
lock
mov
idivl
in
repz
inc
repz
adc
mov
adc
adc
loop,pn
sbb
inc
out
cmpsb
aad
inc
pop
rorl
dec
nop
jg
sti
jmp
nop
or
push
pop
xchg
in
mov
xlat
icebp
iret
push
mov
xorl
cmp
jg
and
adc
cmpsl
enter
dec
mov
js
push
ss
mov
inc
xchg
jo
data16
div
cmp
pop
loope
xchg
data16
push
or
jp
cmp
int
fnsave
clc
mov
mov
mov
jl
into
cmp
mov
mov
mov
mov
dec
notl
sub
jns
sbb
es
sti
and
aaa
sbb
jecxz
sub
fs
mov
add
sub
xor
enter
push
mov
sti
gs
movsl
das
lret
stos
sub
stos
xlat
mov
xchg
sbb
push
pushf
ja
lret
dec
roll
push
mov
into
stc
push
mov
in
add
lret
mov
push
push
rcr
scas
aas
sarl
mov
adc
ds
mov
stos
cs
loop
std
sbb
lods
mov
mov
jne
lea
pop
jp
lds
fs
or
xor
insl
dec
mov
fwait
mov
sub
and
inc
fdivp
jo
in
fsubrl
lret
stc
shrb
add
inc
das
dec
xchg
jecxz
popf
neg
and
sbb
repz
jo
jns
test
sbb
pop
dec
xor
push
add
push
xor
in
mov
sbb
iret
nop
sbb
out
mov
int
inc
icebp
push
mov
daa
jo
shrl
xor
dec
hlt
lds
lret
out
ja
xchg
xchg
mov
and
jae
jbe
dec
mov
cmc
addb
xchg
jns
mov
pop
or
jmp
loop
in
imul
cmp
xor
cli
pop
nop
jne
aas
ret
xor
xor
cld
jmp
or
sub
jae
into
push
jmp
in
sub
sub
fiaddl
dec
sti
shlb
sbb
sahf
in
xlat
jbe
loop
icebp
leave
xlat
aad
aad
mov
and
and
ss
adc
adc
and
or
cli
sub
lock
ror
in
cmpsb
icebp
cmp
push
test
pop
pop
fcmovnbe
push
mov
dec
or
mov
jp
pop
cs
int
lods
lret
das
out
rclb
fdiv
shll
adc
pop
lds
jl
and
pop
bound
mov
dec
mov
cmp
xor
mov
push
push
adc
repnz
pop
repnz
or
and
jb
jno
shrl
dec
fimuls
inc
jecxz
sub
cltd
cli
cmpsb
jno
aad
mov
clc
sarl
xchg
and
xor
cmp
inc
add
jg
mov
or
or
push
mov
popa
jecxz
lea
add
add
jb
push
jmp
inc
pop
scas
pop
int3
aam
dec
shlb
jge
xchg
sbb
mov
jae
bound
xor
stc
push
sbb
pop
icebp
dec
add
sub
shrl
sub
rorl
imul
and
gs
sub
js
sbb
mov
cmp
ljmp
aas
test
mov
inc
push
mov
int3
xchg
push
test
out
adc
lods
imul
mov
pop
js
ja
mov
jbe
mov
out
cmc
sub
add
inc
stos
fmull
dec
xchg
mov
repnz
mov
ljmp
movsl
out
ds
mov
adc
jb
push
mov
inc
hlt
pop
mov
in
ror
popa
in
cmpsl
into
push
pop
dec
outsl
cmp
lods
gs
scas
sub
int3
or
dec
je
cmp
lret
cmp
jo
les
inc
push
int
insb
shl
dec
push
mov
push
add
aad
xchg
mov
fadds
jae
xchg
or
inc
imul
addr16
cmpsl
dec
xlat
sub
int
fs
out
fisttpl
dec
insl
decl
sbb
cmp
aaa
mov
xchg
in
cmp
push
cmp
jne
enter
sub
lds
test
sbb
mov
stos
push
and
mov
loop
int
sahf
lds
rcl
inc
testb
orb
in
int
inc
sub
sub
cmp
xor
fidivs
addr16
dec
jno
rcrb
bound
ret
popf
test
int3
repz
pop
dec
popf
ds
rorb
stos
notb
cmpsb
nop
test
inc
and
inc
lahf
popa
cmpsl
pushw
xor
push
sub
jae
pop
sub
push
inc
js
mov
stos
or
pop
dec
ds
mov
and
les
loopne
push
dec
jl
fstpt
push
inc
outsl
mov
fldz
sbb
sahf
and
into
movl
cltd
rol
ja
pushf
ret
cmpb
jno
cmpb
jne
xchg
inc
fwait
jae
lds
mov
loope
cmpsl
hlt
into
mov
sub
das
sbb
ljmp
int
pop
stos
cmp
fs
out
adc
sbb
jne
aam
sbb
pop
sub
cmpsl
xor
fnstsw
mov
xchg
jecxz
push
or
inc
push
push
add
mov
mov
scas
push
int
dec
test
push
adcb
mov
jl
les
aam
xchg
inc
roll
jp
ret
jmp
xor
xchg
fs
sub
add
adc
sbb
or
testl
repnz
mov
cmp
jle
cmp
and
lahf
cmpsl
xchg
ds
inc
enter
loope
push
xchg
push
movsl
sbb
jl
dec
xchg
adc
and
rorb
pop
out
repz
or
frstor
aas
mov
scas
dec
dec
add
mov
mov
or
icebp
or
sbb
inc
sbb
jp
mov
mov
in
mov
xchg
jb
out
js
sbb
out
jnp
call
push
lock
pop
jne
or
cmp
mov
adc
push
cmp
lods
call
push
mov
fucom
add
and
fdiv
enter
test
jge
outsl
dec
lock
pop
ret
sbb
mov
aas
sbb
or
jle,pt
divl
and
jmp
lea
scas
dec
sbbl
scas
mov
inc
ret
inc
popf
jge
test
in
dec
das
push
push
pop
cmp
adc
add
shlb
shlb
sub
pop
xchg
mov
orl
jno
cmpsl
add
inc
testb
into
pop
add
inc
xlat
cmp
in
jmp
test
mov
xor
push
pop
xor
jmp
insb
or
sub
mov
push
cld
mov
jle
cmp
adc
loopne
scas
cmp
test
insb
xchg
popf
imul
mov
arpl
mov
mov
lods
in
data16
sbb
jmp
xchg
and
repnz
dec
mov
pop
pop
jle
sbb
fsubrl
fdiv
aam
movsb
test
inc
pop
jg
xor
or
div
clc
jne
dec
xchg
sbb
mov
inc
mov
sbb
xchg
adcl
and
fidivs
sarb
std
or
fucomi
lea
sbb
sbb
jmp
xor
xor
jns
cmp
xchg
ljmp
arpl
jae
inc
in
cmpb
out
xchg
add
push
cmp
rolb
and
xchg
sub
mov
or
mov
mov
jmp
mov
sub
cmp
jb
or
fwait
inc
pop
notl
mov
in
or
xchg
roll
pop
jnp
xchg
and
dec
xor
movsb
pop
xchg
imul
dec
cmp
xadd
shrb
cld
adc
mov
cmpsl
addr16
fs
pop
mov
test
mov
mov
mull
jb
ja
mov
jmp
neg
mov
call
test
adc
mov
popa
pushf
iret
in
loope,pn
xor
addr16
cmpsl
and
cli
xchg
push
push
pop
adc
testl
ret
cmp
pop
pusha
xchg
mov
mov
push
inc
jo
inc
enter
stc
add
daa
ret
xchg
dec
xchg
sub
mov
sub
dec
or
leave
jns
shll
pop
cli
xchg
jnp
cltd
lret
push
cmp
pop
mov
cltd
jp
sub
outsl
pop
icebp
push
adc
sbb
ret
idiv
cmp
jecxz
aad
sbb
jmp
and
cli
inc
mov
movsb
push
outsl
pop
dec
pop
mov
shr
dec
pop
call
xor
mov
xor
cs
push
repz
sub
sti
and
rol
insl
dec
into
mov
arpl
cltd
or
das
pop
push
mov
stos
mov
popf
je
movsb
nop
add
mov
and
xorl
pop
add
push
xchg
cli
loop
lcall
aaa
inc
xor
repnz
mov
mov
ror
mov
xchg
or
or
fldz
xor
ja
xchg
jo
mov
shll
and
mov
add
in
xor
leave
in
add
add
mov
pusha
loope
jne
stos
cltd
gs
test
out
lahf
dec
mov
mov
pop
jbe
lods
xlat
push
jne
mov
loope
cmp
jg
dec
pop
xchg
icebp
je
fwait
push
lock
sbb
rorb
icebp
inc
daa
add
mov
out
iret
xchg
mov
test
je
sbb
int3
lret
iret
fs
jge
ja
outsl
leave
or
les
andb
jmp
icebp
in
jmp
adc
cmp
jg
lock
stos
int3
adc
lret
jno
loope
inc
lock
cmc
add
scas
insb
mov
rol
mov
push
mov
push
mov
xchg
xor
dec
mov
push
xchg
dec
iret
ljmp
dec
mov
aam
sub
jno
xor
and
imul
insl
cmp
xchg
pop
push
scas
sbb
loope
dec
lahf
movhps
inc
inc
pushf
xchg
pop
add
and
out
mov
and
mov
inc
jle
test
sub
lock
pushl
stc
dec
add
pop
testb
or
out
test
leave
cwtl
mov
mov
sub
rcr
std
aas
pusha
inc
daa
jge
pop
scas
inc
stos
ja
lods
jg
rclb
mov
adc
cli
sbb
push
int
mov
xor
mov
xorb
mov
dec
dec
sahf
mov
aam
add
pop
inc
test
jl
push
test
sub
jno
and
lcall
js
mov
out
cmp
nop
je
js
int3
mov
xor
lahf
ret
adc
in
mov
shlb
pop
push
shlb
lods
lcall
hlt
cmpb
mov
movsb
sbb
std
mov
aam
ret
push
and
lret
sbb
lock
jo
fs
orl
or
ljmp
inc
mov
mov
cwtl
push
dec
jmp
pop
fdivl
fs
add
xchg
out
arpl
add
sbb
mov
mov
cwtl
xor
mov
cmp
stos
and
jbe
xchg
bound
shl
xor
sbb
xor
lods
pushf
push
jo
sbb
cwtl
ds
or
scas
out
inc
clc
lds
lds
fists
lahf
inc
add
rolb
imul
arpl
jno
xor
data16
push
push
xor
push
in
jg
cmp
insl
mov
cmp
imul
dec
repnz
dec
add
gs
fistpll
push
xor
data16
push
lods
push
repnz
sub
adc
push
or
xchg
cmp
jmp
xchg
lret
outsl
repnz
pop
cmp
sahf
daa
push
inc
mov
enter
stos
shrl
mov
jge
addr16
dec
sbb
lds
lods
cwtl
cwtl
aas
aam
cmpsb
roll
and
add
sbb
stos
xor
mov
stc
mov
shlb
inc
outsl
into
pusha
lahf
test
xor
lret
xchg
mov
adc
in
test
out
adc
rol
pminsw
dec
add
push
inc
mov
icebp
arpl
mov
lods
and
out
stos
xchg
insb
lcall
test
ror
je
adc
cs
enter
mov
or
cmp
pusha
enter
mov
push
std
push
clc
mov
add
das
arpl
push
icebp
jecxz
ret
cmp
pop
mov
inc
ds
cltd
sub
movsb
adcb
sub
dec
insb
push
pop
mov
filds
ficompl
clc
cmp
mov
jb
andb
inc
dec
out
ss
inc
fst
or
arpl
mov
int3
insl
scas
ja
add
into
and
imul
sub
shr
push
ss
jae
xchg
mov
pop
pop
xchg
mov
mov
dec
and
jae
out
leave
push
xchg
fsincos
inc
clc
cmp
fmul
sub
faddl
or
roll
jmp
pop
lcall
mov
jns
jbe
jbe
repz
stos
inc
xchg
cld
push
sub
aas
sbb
ljmp
mov
aad
arpl
xchg
jo
nop
mov
int3
out
adc
add
dec
jg
xor
add
bound
cmp
jg
gs
aam
and
insb
enter
push
jecxz
and
mov
mov
aad
add
dec
insl
cmpsl
icebp
pop
es
pop
xchg
std
repz
dec
pop
sub
push
sub
pop
prefetchnta
in
inc
cmp
jne
push
or
fcomip
sbb
push
lahf
jnp
pop
dec
out
jns
or
dec
ret
insl
inc
jl
adc
pop
sub
insb
test
mov
testb
adc
movsb
mov
adc
iret
jno
and
xchg
pop
add
cld
int3
pop
sbb
cmp
fcomps
mov
fbstp
cld
pop
mov
and
loopne
fisttpl
mov
dec
pop
add
arpl
add
jmp
mov
xorl
cltd
and
ss
cwtl
push
aad
cld
mov
xor
cmpsl
jle
cmp
stos
adc
pop
mov
pop
stos
jmp
add
inc
mov
cmp
mov
pop
push
jp
adc
inc
repnz
jecxz
xor
out
cwtl
add
hlt
int3
imul
mov
fs
mov
in
int3
cld
sub
mov
gs
push
cli
enter
jp
int
or
insb
mov
or
lret
or
jmp
and
jo
int3
mov
inc
popl
adc
in
stos
leave
cli
mov
cmp
xor
inc
cmpsl
rorb
imul
sub
rol
mov
dec
push
ss
pop
out
xchg
std
add
movsb
mov
test
ret
and
add
push
mov
aam
call
fcomps
mov
push
and
push
add
push
mov
clc
push
ret
test
scas
push
lods
cmpsb
ss
andb
jmp
cld
push
sti
inc
mov
adc
xchg
add
jg
inc
xchg
or
xchg
adc
mov
add
xchg
mov
mulb
xchg
in
dec
xor
xchg
outsl
pop
push
pop
ficompl
imull
xorl
rcrl
jmp
int
sbb
fildll
divb
push
and
xchg
loop
outsb
movsl
xchg
mov
or
xchg
cmpsb
pop
aaa
adc
dec
xchg
and
ss
jg
outsl
pop
rcll
mov
call
ljmp
js
fiadds
and
jnp
into
mov
add
out
hlt
test
sbb
jmp
jne
push
int3
cltd
je
testb
and
sbb
ja
and
in
or
xchg
inc
mov
jo
in
std
mov
cmp
sub
pop
add
test
pushf
lcall
jp
mov
xor
pop
xchg
sbb
and
adc
cli
push
int3
pushf
pop
mov
js
inc
int
jbe
clc
or
imul
pop
push
jg
and
xlat
and
mov
ret
cltd
ss
shrb
xor
scas
jecxz
dec
xchg
inc
mov
es
adc
and
push
or
mov
les
lahf
or
inc
mov
int
dec
jbe
enter
add
divb
cmc
in
fdivp
fadd
sub
into
or
in
lea
dec
mov
push
jns
xlat
dec
xor
cltd
shll
pop
and
and
fidivs
ret
mov
movsb
add
ret
mov
mov
adc
or
aaa
mov
add
popf
push
shll
int3
pop
lcall
mov
test
addb
jns
sub
dec
es
scas
cmc
add
decl
leave
fstl
jbe
or
mov
xchg
mov
mov
dec
ds
jb
mov
dec
jno
add
adcb
sbbb
inc
stc
inc
sti
dec
hlt
or
mov
out
push
jno
sbb
mov
xor
and
xchg
xchg
xor
or
les
test
int
rcl
inc
push
xlat
call
inc
and
and
ret
add
jmp
dec
mov
inc
rcll
loop
leave
insb
pusha
mov
imul
push
push
push
shrl
imul
testb
in
push
fists
sar
je
pusha
call
sahf
bound
jmp
sahf
dec
lea
sub
out
pop
cmp
popa
dec
mov
sub
and
add
add
inc
shrb
cld
fistl
xchg
insl
sbb
aaa
fs
cmp
jecxz
jle
and
int
insl
jns
inc
add
stc
jmp
xchg
pop
or
cwtl
ss
mov
mov
push
xor
mov
jbe
test
inc
aaa
mov
xchg
fstpt
jecxz
enter
and
lods
je
mov
cltd
pop
mov
add
clc
mov
and
push
test
lock
dec
mov
jl
inc
adc
lea
sbb
int
mov
test
mov
fld
cmp
sub
cmp
xor
dec
lret
aas
push
mov
negl
and
push
dec
scas
in
aam
sbb
sti
inc
rcrl
mov
sbb
mov
dec
sahf
xor
mov
sub
in
jns
ja
inc
jno
sub
lds
jo
into
movb
leave
shr
xchg
mov
loope
jno
pop
and
out
xchg
loopne
cmp
dec
mov
int3
xchg
std
fcmovne
cli
inc
popf
lahf
mov
loope
dec
into
lret
dec
mov
jae
jmp
add
fcmovnu
xor
psllq
push
pop
push
test
shrb
and
test
push
xor
jo
dec
pushf
movsb
vpsrld
cmpsb
lock
jo
shl
out
int3
cmpb
gs
mov
lea
pop
jnp
adc
jo
dec
or
and
or
sbb
out
nop
jp
std
mov
inc
and
jbe
fcoml
jnp
push
sbb
cmpsl
daa
pop
xor
test
ljmp
out
mov
pop
movsb
mov
add
ljmp
xchg
pop
mov
clc
mov
add
ds
sub
add
rcr
fcmovu
adc
nop
or
aam
xor
cmp
sub
lcall
cmpsl
inc
jp
sub
outsb
fldenv
push
aaa
cmc
xlat
into
mov
fnstenv
mov
repz
mov
pushf
mov
outsl
jne
or
sbb
inc
mov
push
sub
adc
jecxz
ss
test
dec
jne
out
mov
add
mov
fcoml
sbb
int3
add
movsl
mov
jg
inc
ja
movsb
adc
stc
sbb
mov
std
dec
push
jnp
dec
in
into
insl
jno
or
pop
push
das
mov
insb
cli
scas
jg
sti
and
sti
lds
scas
jns
and
gs
mov
pop
sub
jp
dec
inc
xchg
js
les
ja
dec
pop
mov
cmp
loope
ljmp
jo
lods
es
or
test
pushf
mov
fwait
test
pop
push
jnp
mov
pop
pop
sub
mov
fldenv
int3
push
push
repz
jle
pop
and
mov
jl
mov
in
outsb
lods
ss
subb
inc
jns
pop
pop
out
test
mov
or
lds
cmpsb
adc
subb
xchg
lret
push
xchg
jb
jbe
jb
xor
fists
xorl
cmp
notb
mov
sub
repz
push
pop
mov
lret
icebp
aaa
lret
add
shl
jnp
xchg
cli
mov
xchg
xlat
cmp
fimull
inc
rolb
mov
xor
mov
stos
lods
cmp
subb
mov
or
add
lock
cmp
pop
pushf
test
rcll
movsl
aad
int
idivl
leave
aaa
or
lea
test
pusha
imul
xor
or
fwait
dec
ljmp
std
jl
addr16
out
cvtdq2ps
sahf
int
xchg
insl
mov
xchg
out
mov
mov
or
int
imul
ret
pop
push
pushf
into
lret
push
push
dec
movsb
cmp
xchg
gs
lret
mov
daa
aas
aam
sti
pop
add
mov
jle
add
js
les
dec
pop
mov
pop
sbb
fdivs
push
jge
sbb
xchg
jns
sub
xchg
sbb
stos
icebp
cltd
leave
je
aam
mov
xor
cmp
xchg
testl
repz
or
jbe
data16
pop
pop
sbb
cli
push
sti
push
sbb
andb
sub
into
jne
out
pop
loopne
in
inc
jl
pop
fsubrp
xor
insl
add
repz
hlt
jnp
mov
xor
push
mov
and
push
lcall
lods
pop
out
stos
sbb
adc
loopne
pop
or
cmpsl
lock
inc
cmp
cmp
xchg
orb
lock
cmpb
int
pop
lret
arpl
adcl
hlt
adc
aam
rcrl
lock
jp
fstps
lds
mov
push
jecxz
lret
lds
push
inc
dec
inc
jmp
shll
idivb
jl
mov
mov
and
std
sbb
push
out
in
and
push
pop
mov
lods
pop
sbb
call
aad
popa
fcompl
cli
push
stos
ljmp
leave
pop
bound
faddl
inc
mov
iret
mov
xlat
out
push
jbe
lods
or
xchg
jae
nop
push
ds
sub
cltd
xchg
mov
mov
jecxz
data16
xor
mov
outsb
call
fsubr
xchg
aad
cld
lods
adc
andb
sbb
loop
sub
adc
sub
jno
adc
push
out
pusha
jmp
mov
xlat
push
xchg
pop
fbstp
jnp
mov
pushf
lret
test
popa
pop
ret
lock
pop
pop
add
mov
cmp
in
iret
jl
in
cwtl
std
cmp
lods
nop
je
out
push
push
out
inc
xor
inc
stos
stos
push
dec
xchg
mov
mov
inc
es
push
fisttpll
sub
jno
dec
cmp
sbb
mov
fisubl
mov
or
xor
inc
data16
mov
loop
cmc
inc
in
hlt
cltd
add
sbb
mov
push
fwait
pushf
and
dec
add
lods
test
ret
aad
adc
add
push
mov
pusha
hlt
je
testb
loop
lea
and
into
and
push
mov
outsb
mov
popf
and
cmp
ljmp
pop
push
add
push
and
mov
adc
repnz
dec
fcomps
push
dec
jno
xlat
out
fldt
leave
imul
cs
pop
aas
jns
jl
dec
push
push
into
xor
jnp
xchg
sbbb
cmp
and
inc
mov
stos
jbe
jg
scas
into
adcb
in
ja
call
pop
jge
push
mov
imul
inc
dec
or
leave
fs
pop
rorl
sbb
repnz
mov
xchg
or
inc
inc
cmp
lahf
insl
fistpl
test
aam
xchg
std
movsb
mov
dec
jg
mov
dec
mov
push
dec
pop
inc
sbb
aaa
mov
nop
add
nop
das
aas
loop
pop
jne
push
and
inc
or
add
aam
inc
xor
loopne
rclb
pushf
pop
gs
xchg
sub
int3
hlt
mov
shlb
and
dec
lret
insb
subb
pop
sub
mov
xchg
sbb
push
sub
pop
xchg
aaa
aaa
cs
dec
mov
push
push
lahf
pop
test
pusha
cld
add
jb
dec
es
jbe
pop
imul
mov
mov
or
mov
imul
movsl
pop
inc
dec
jecxz
icebp
fdivrl
daa
xor
push
add
xchg
mov
push
jmp
mov
test
push
insb
sub
or
push
lds
lcall
lahf
jmp
pop
mov
lret
pop
adc
bound
sbb
fwait
ss
loop
xchg
hlt
lahf
int3
in
cmp
imul
aaa
lret
cltd
cwtl
add
add
stos
pop
enter
xor
xorl
jp
rcrl
or
je
jecxz
jb
stos
cmp
push
jp
insb
push
fbstp
loope
and
add
popa
ljmp
push
mov
and
cmc
mov
adc
cwtl
pop
add
xor
adc
aaa
lret
inc
sbbb
mov
push
int
fwait
lea
cli
popa
xchg
jb
adc
sub
stos
inc
push
adc
outsl
out
and
pop
and
clc
sub
js
test
shll
les
test
aas
imul
pop
imul
pop
pushf
sub
adc
sbb
je
inc
out
pop
or
aaa
jp
add
ret
adc
sbb
push
mov
dec
test
jmp
mov
cmp
fwait
repnz
mov
push
movsb
fcomp
sbbb
xchg
push
adc
mov
add
xlat
and
test
push
lea
adc
push
lret
inc
adc
xor
pop
adc
jg
lea
icebp
and
mov
or
adc
call
stos
add
and
test
pop
outsl
test
push
push
int3
cli
imul
rol
sbb
sbb
lcall
sbbb
mov
jno
jb
jae
lock
incb
popf
int
js
mov
dec
aam
lahf
in
mov
vdivps
or
or
inc
xchg
inc
rclb
mov
xchg
addr16
out
cmp
std
xor
pop
add
cmp
and
rolb
xor
inc
jbe
movsb
mov
xchg
imul
mov
cmc
mov
fnsetpm(287
pop
fiaddl
fsubrl
pusha
loopne
imul
or
test
and
cli
dec
cmp
cmp
mov
push
inc
add
jbe
int3
int
push
mov
addr16
sub
popf
test
loopne
pushf
pop
outsb
cmpsl
into
arpl
xor
into
or
xlat
fs
jae
mov
dec
stc
imul
repz
sub
dec
test
inc
sub
movsb
aas
adc
jecxz
xlat
xchg
out
xor
xor
jl
dec
xorb
ret
std
inc
mov
push
popf
negl
add
inc
add
adc
movsb
repnz
xchg
push
jno
aaa
cmp
sub
cmp
in
pop
sbb
jb
cli
fmul
mov
push
divb
cmp
lcall
push
roll
jne
int
lods
pop
xor
ss
cmp
add
jb
jb
mov
in
inc
inc
sub
inc
adc
xor
mov
ss
repz
lahf
lock
mov
cwtl
or
xor
stc
scas
and
mov
repnz
aam
jg
into
iret
inc
cli
sbb
or
leave
mov
ror
popa
inc
popa
mov
jecxz
fwait
mov
mov
jae
decb
pop
or
pop
sbb
negl
mov
cltd
push
push
in
addr16
jb
cmp
dec
mov
xor
push
aaa
pop
adc
mov
jmp
mov
sbb
cmp
mov
scas
aad
mov
fcmovb
xorb
jno
fdivr
test
xchg
dec
out
sbb
cmp
rorl
fisttpll
sub
inc
or
test
xchg
shll
lea
cmp
mov
add
fcoms
sbb
xlat
mov
add
out
ror
mov
cmpsl
xor
add
mov
cs
imul
ljmp
xor
xchg
std
and
lock
sub
pop
mov
push
mov
nop
js
adc
adc
cmc
mov
cmp
pusha
cmp
das
pop
mov
out
mov
jmp
jge
sub
clc
push
sahf
inc
mov
ret
mov
pop
test
sbb
scas
gs
movsb
jecxz
mov
mov
repz
or
bound
sti
xchg
push
xchg
pop
insl
fmuls
fdivrs
aam
cld
js
push
sbb
cmp
hlt
or
cmpsl
sahf
xchg
jne
sub
mov
ljmp
mov
inc
ret
sub
int3
jge
dec
push
push
fcompl
xchg
mov
sub
arpl
sbb
aad
aas
cmpsl
jle
sbb
pop
ljmp
in
sbb
xchg
jo
test
mov
std
lds
iret
ss
lods
xlat
jae
in
inc
mov
cli
cmp
test
jo
jbe
push
in
mov
stc
mov
lahf
setns
idivb
mov
pop
mov
and
test
je
fcomip
decl
std
fs
sub
imul
push
gs
gs
jne
ss
push
test
inc
xor
sbb
push
xchg
fisubrl
jbe
test
out
jp
cmp
or
xchg
or
clc
arpl
adc
nop
cmpb
mov
gs
sub
test
shrb
jge
test
cmp
cmc
jg
pushf
es
cltd
sbb
dec
test
xor
push
nop
into
pop
fs
inc
sub
in
lods
dec
test
pop
add
mov
push
dec
out
jnp
loop
jne
icebp
jno
rcl
pop
aad
std
or
sti
and
add
mov
push
in
jecxz
jmp
inc
test
jbe
movsb
inc
adc
sbb
xor
mov
mov
sahf
pop
mov
sub
lds
mov
daa
cmp
in
lret
leave
or
sub
fcoms
jnp
dec
lock
jl
push
rolb
unpckhps
call
inc
lock
lock
push
push
or
adc
sbb
fwait
lock
xchg
enter
pop
pushf
data16
xchg
push
in
add
sub
imul
bound
movsl
in
adc
inc
add
push
push
add
cld
hlt
mov
js
mov
xor
int
inc
inc
mov
call
mov
add
push
mov
cmpsl
negl
xlat
test
add
cs
out
mov
daa
leave
test
push
imulb
and
mov
mov
js
sub
jo
sub
fdivp
xor
mov
js
mov
arpl
ret
mov
add
imul
inc
jns
dec
mov
push
mov
push
xchg
pop
dec
loop
push
dec
adc
imul
icebp
ss
jg
or
cs
push
lds
scas
pop
stc
xor
mov
mov
push
sub
aas
rolb
cmpsl
scas
cmpsb
add
mov
add
cmc
and
mov
std
push
sub
call
jecxz
outsb
in
icebp
inc
fwait
dec
sbb
pop
push
xor
sub
xchg
ret
ret
xchg
xchg
js
fs
cltd
sub
mov
xor
xor
sbb
adc
test
aaa
subl
sub
in
test
sbb
mov
ror
mov
std
adc
aas
lcall
in
pop
cmpsl
into
dec
xor
out
pop
leave
into
push
in
adc
or
push
je
scas
push
outsb
ja
loop
mov
mov
pop
repz
inc
test
cmp
lods
xor
add
or
ljmp
push
in
outsb
in
adc
dec
add
ds
mov
syscall
loope
fmuls
or
push
xlat
and
mov
add
pop
std
mov
adc
fwait
jle
ficomps
int3
and
push
xchg
mov
sub
popf
test
pushf
arpl
mov
nop
test
sub
mov
and
out
pop
std
insl
push
jbe
shll
xor
jb
and
cmp
pop
and
jne
pop
pop
out
bound
popa
push
pop
mov
aad
lock
mov
xor
ret
mov
setg
mov
or
mov
or
dec
lcall
mov
sti
cli
lahf
pop
push
mov
sbb
outsl
stos
rcrl
sub
and
mov
dec
ljmp
das
add
jbe
or
pop
lods
sbb
shlb
jne
scas
hlt
imul
loopne
mov
shlb
or
pop
int3
adc
lcall
and
or
out
and
hlt
and
inc
in
das
pushf
arpl
leave
xchg
adcb
adc
into
jg
add
push
pusha
mov
out
and
fisttps
or
out
jo
enter
xchg
sub
movl
sub
mov
ficomps
add
movsl
add
xchg
call
jnp
cmpsl
je
push
or
pop
jns
iret
sbb
es
mov
jo
leave
fimuls
cmpsl
adc
out
pop
in
test
imul
dec
mov
sbb
mov
add
arpl
gs
jae
or
fwait
cltd
xchg
imul
rcrl
loope
pusha
dec
push
pushf
push
in
out
addb
mov
shll
push
sbb
xchg
jg
dec
hlt
sub
sbb
push
mov
loopne
jb
ret
leave
mov
fmuls
es
dec
rorb
or
ss
push
unpckhps
imul
jo
pop
pop
rcrl
popa
xchg
inc
ds
mov
popl
mov
mov
sti
sub
mov
cmp
jae
lds
add
cld
in
sub
xor
jo
ja
xor
fsubrl
push
sbb
mov
push
dec
lret
push
adc
pop
add
icebp
mov
in
xchg
mov
nop
jle
lods
or
insl
cli
xchg
mov
stc
mov
fstpt
nop
mov
and
jmp
sar
mov
mov
cmpsb
mov
and
shll
imul
dec
inc
jo
push
loope
aaa
insl
sub
xor
ljmp
cmpsb
cmc
pop
popf
call
mov
stos
mov
cs
data16
pushf
mov
cli
cmp
inc
cli
stos
xchg
movsl
pop
xor
xchg
out
pop
adc
and
popf
cmp
shl
out
xchg
inc
ja
push
pop
imul
out
adc
jl
mov
jbe
sbb
mov
cmp
add
push
pop
inc
pop
ljmp
mov
xchg
mulb
mov
jmp
add
shrb
push
pop
add
fstps
lods
lods
imul
int3
std
xchg
jmp
jne
jnp
sub
popf
ret
xor
out
in
xchg
push
subl
dec
sub
setb
test
out
ret
sbb
lock
xchg
loopne
lret
insb
push
pop
cltd
pop
xchg
nop
icebp
adc
cmp
add
ljmp
fincstp
in
adc
adc
stos
sub
dec
cmpsl
push
cmp
fsubl
xchg
xor
mov
add
andl
jge
sub
jl
mov
icebp
xchg
adc
mov
das
psubd
xor
xchg
mov
dec
faddl
mov
xor
test
roll
lcall
add
stc
ss
xor
dec
dec
cmp
dec
lahf
out
fcmovbe
mov
mov
shrb
test
js
mov
dec
loope
repz
cmp
fwait
mov
and
mov
add
jnp
fldt
cmpsl
mov
aam
out
out
sbb
fnsave
into
add
or
test
sbb
adc
mov
push
aaa
call
insb
and
and
mov
pop
and
outsl
cmpsl
adc
test
jnp
cmp
sub
arpl
jns
enter
popf
sbb
jb
mov
in
add
sub
mov
adc
push
pop
xchg
rorl
enter
xor
adcl
stc
int
scas
jl
jb
shll
xlat
or
adc
mov
emms
arpl
sbb
cld
xchg
mov
rorb
rcr
jno
jno
push
test
out
xchg
mov
dec
mov
pusha
outsb
mov
ss
roll
push
mov
pop
std
push
cltd
sub
inc
enter
and
mov
adc
sub
push
xchg
mov
addr16
cltd
sbb
jl
adc
cld
stc
dec
rolb
add
aam
inc
cltd
push
mov
mov
mov
pop
arpl
mov
lods
adc
xor
into
data16
cltd
push
orb
inc
cltd
sub
fnstsw
pop
in
push
out
mov
dec
orl
xchg
icebp
cmp
cli
and
int
mov
fucomip
mov
mov
roll
xchg
push
jge
jae
in
inc
add
in
xchg
pop
dec
lret
mov
mov
rcrb
or
push
mov
xchg
xchg
mov
dec
mov
adc
or
mov
in
mov
scas
loopne
les
xchg
movsl
xchg
xor
aam
adc
fwait
mov
inc
xchg
mov
sub
into
and
add
xchg
xchg
fsub
loopne
pushf
sub
sub
pop
pop
daa
mov
hlt
mov
push
scas
sbb
mov
push
xchg
jae
int
scas
loope
pushl
les
shlb
daa
je
mov
xchg
loop
js
dec
inc
xor
push
adc
fcomp
test
repz
cmp
dec
push
outsl
mov
xor
addr16
mov
pop
xchg
fcomps
int
dec
test
adc
or
dec
test
fbstp
dec
les
in
inc
pop
or
call
xrstors
adc
loop
adc
xchg
xchg
cmp
jp
frstor
sahf
xchg
pop
jle
pop
fidivrs
pop
add
sbb
xchg
cltd
mov
fs
pminsw
and
adc
aam
mov
loop
cli
out
js
mov
rolb
call
inc
add
dec
inc
mov
pop
movsl
lods
aas
aaa
mov
add
add
add
repz
mov
aam
negb
outsl
lret
push
inc
lret
xchg
rcrl
push
or
and
sti
xchg
bound
jb
gs
mov
inc
inc
adc
adc
dec
fs
insb
enter
rorb
inc
rclb
imul
rcll
and
lock
fldl
inc
daa
sub
imul
sub
fsub
ljmp
out
sub
adc
jle
xor
clc
je
filds
jl
lahf
imul
jb
dec
loop
movsl
punpcklwd
nop
jo
dec
sbb
hlt
cmp
xorl
das
movsb
loop
std
pushf
cmpsl
inc
push
cmp
nopl
fimull
or
push
faddl
pop
or
lret
mov
out
fbstp
cmp
sub
cwtl
and
push
add
outsl
insb
jbe
inc
hlt
inc
xchg
add
movb
mov
adc
push
test
rorl
cs
pop
push
lock
es
jl
mov
push
fdiv
lods
push
sub
fcomps
xor
adc
xchg
and
jg
fmulp
bound
movb
and
addr16
dec
mov
jmp
cmp
dec
ret
push
hlt
clc
pop
mov
pop
dec
loopne
pushf
and
sub
loopne
jl
das
mov
rcrb
mov
add
pop
lock
add
sub
xchg
lock
sub
repnz
dec
pop
mov
sbb
rcll
cmc
pop
mov
mov
in
pop
dec
sbb
shl
pop
or
cmp
push
sbb
mov
lods
push
inc
jbe
mov
add
inc
pop
mov
ret
cli
jnp
inc
pop
into
inc
aaa
push
sbb
xchg
mov
sbb
stc
xchg
push
and
lock
adc
mov
shl
addl
inc
sbb
cmp
fldenv
or
sbb
jmp
fdivs
int3
lods
out
pusha
mov
cwtl
pop
adc
hlt
xchg
imul
xchg
ret
cmp
cmp
push
mov
cld
leave
or
add
call
out
in
popa
cmp
lcall
lods
lret
jne
sub
shl
push
jp
mov
sub
dec
inc
or
jnp
aaa
xchg
test
icebp
and
out
jge
mov
or
add
cwtl
cmp
push
jno
mov
push
dec
pusha
test
xor
mov
xchg
jecxz
popf
enter
or
xchg
mov
dec
fisubrl
jecxz
fdivrs
mov
shrb
cmpb
xchg
sbb
push
dec
scas
ret
pop
cmp
loopne
shlb
xchg
or
movsl
adc
pushf
ja
loop
hlt
stos
jno
imul
dec
int
jns
pop
ret
sbb
mov
gs
nop
pop
jl
pop
loop
stc
js
push
mulb
repz
std
pop
lods
cwtl
aaa
jp
or
mov
daa
gs
push
cmp
fwait
sub
loopne
call
xchg
mov
in
dec
jne
fcompl
daa
adc
sub
mov
gs
fwait
std
loopne
mov
call
out
or
test
loope
mov
or
xor
push
jle
jg
jecxz
lret
test
xchg
fldenv
pop
loope
in
mov
inc
jp
outsl
mov
jno
push
sarl
jp
xchg
ljmp
xlat
pop
sub
in
cwtl
xchg
addb
and
adc
cmp
xor
pop
jno
cltd
xlat
or
in
lods
testb
push
imul
sbb
loop
jae
call
mulps
ret
cvttps2pi
pop
flds
mov
test
dec
lods
rcll
pop
push
pop
mov
loope
mov
adc
or
daa
lock
adc
or
das
xorl
popl
popf
dec
paddusw
rorl
andb
popf
dec
push
imul
jecxz
push
mov
jb
dec
add
xor
das
lahf
int3
adc
add
fs
ljmp
enter
cmp
aas
pop
sub
jl
push
outsl
jl
es
mov
push
repnz
pop
iret
data16
movsb
dec
adc
std
out
add
or
lea
jbe
shl
insl
es
xor
sub
mov
fnstcw
loopne
repz
cmpsb
mov
ljmp
jle
dec
dec
adc
popf
cmpsl
jl
mov
cmp
mov
dec
iret
sub
cmpsl
pop
cmp
add
movsb
push
stos
jns
pop
push
popa
cmc
or
or
sarl
fnsave
jno
pop
popf
add
hlt
mov
test
les
pop
dec
loopne
mov
cmp
xlat
shrb
mov
push
mov
stos
mov
icebp
les
or
dec
xchg
test
sbbl
test
xor
std
dec
inc
dec
push
sub
push
fistpl
cmc
dec
add
xchg
jne
rolb
jg
movsb
fcoms
inc
cmp
out
mov
out
mov
cmp
mov
dec
les
mov
adc
lret
push
repnz
adc
in
fldt
adc
xor
jmp
xor
mov
testb
cmpsl
sbb
dec
mov
mov
adc
mov
or
cmp
push
mov
int3
mov
in
or
jmp
outsl
and
mov
enter
sbb
mov
push
mov
in
mov
push
xchg
shll
cmpsb
out
mov
test
dec
pop
out
mov
pop
push
pop
clc
mov
mov
testb
pop
sarb
cmpb
xchg
int3
mov
adc
idiv
sub
into
test
jnp
pop
shrl
ret
sti
xchg
mov
aas
aas
movsb
clc
ljmp
clc
out
inc
sub
cltd
mov
mov
mov
rorl
sbb
and
xchg
ss
lea
popf
daa
mov
pop
fcoms
cs
xchg
dec
icebp
and
and
pop
imul
xor
dec
mull
jmp
dec
movsb
call
push
dec
adc
gs
push
mov
in
xchg
scas
mov
outsb
pop
push
pusha
pop
pop
pop
outsb
push
push
xchg
xor
sbb
mov
movsl
ljmp
mov
fcoml
pop
xchg
fwait
lods
pop
shlb
add
mov
jno
or
ljmp
xchg
cmp
mov
insb
xlat
push
adc
push
sbb
out
in
out
stos
pop
jno
and
xor
sbb
cmp
xor
mov
stos
test
in
int3
adc
inc
pop
mov
cmc
push
xor
test
xchg
xchg
ljmp
stos
outsb
push
xor
fcmovnbe
mov
mov
punpcklwd
jp
daa
mov
cmc
push
push
or
adc
mov
xchg
imul
pop
rcrl
ljmp
jp
push
pop
test
pop
xchg
pushf
mov
mov
outsb
arpl
jecxz
idivl
test
hlt
mov
add
ret
mov
insb
scas
xchg
scas
push
fistl
push
nop
mov
out
adc
push
shlb
adc
add
inc
pop
cmc
popa
fidivl
int3
push
ficoml
dec
push
pusha
lods
in
and
rclb
aam
mov
data16
cld
xchg
push
push
insl
jl
repz
inc
les
sbbl
stos
inc
cmp
imul
jecxz
xchg
ret
leave
push
sti
push
mov
sub
mov
divb
in
push
scas
das
sub
mov
push
adc
jb
push
pop
cmp
in
cltd
mov
mov
into
aad
aaa
lret
xor
or
mov
push
add
fildll
or
pop
mov
xor
xchg
dec
or
sub
push
nop
xchg
int
mov
mov
fimuls
aad
sub
lahf
les
mov
and
or
pushf
ror
pop
popf
mov
gs
cmp
mov
repz
iret
out
dec
and
add
adc
int3
pusha
xlat
insl
dec
sbb
loopne
sbb
sbb
push
imul
aam
cs
mov
gs
sbb
les
stc
sub
loope
cmp
roll
int3
aad
adc
imulb
lds
les
mov
jne
cmp
cld
push
cmp
inc
outsl
xor
sub
mov
inc
mov
jmp
je
cmpb
in
decl
in
js
iret
dec
push
adc
dec
push
inc
pop
push
pop
ficoml
jb
mov
sub
xor
out
jge
mov
stos
push
inc
js
in
jbe
les
add
cmp
mov
lret
mov
push
outsl
fnstenv
cmpsl
or
icebp
mov
xchg
jo
stos
pop
int3
dec
jle
fldcw
dec
push
into
and
inc
inc
sti
shll
cmp
fs
loopne
add
loop
movsb
sbb
mov
pop
and
arpl
add
sbb
pop
dec
adc
push
ja
push
fs
icebp
outsl
in
jge
mov
pusha
rcll
std
mov
movsl
popl
or
sbb
jecxz
mov
pop
aad
cmp
pop
movsl
lea
shrl
decb
pop
daa
cmpsb
out
jne
in
xchg
push
lea
and
sub
xchg
fldl
lar
movsl
jne
push
pop
repnz
lea
adc
std
inc
cmp
imul
fmuls
cmpsb
mov
xchg
xchg
xor
add
dec
je
outsb
mov
pop
mov
pushf
or
sbb
movsl
or
mov
push
js
or
pop
sub
loope
aad
scas
in
in
sub
xchg
xor
xchg
jmp
cltd
movsb
lret
sbb
xchg
adc
cmp
js
and
imul
sti
hlt
mov
scas
test
mov
aam
adc
lods
inc
mov
adc
cli
stos
sbbl
push
adc
jo
xchg
mov
mov
adc
inc
fldenv
shlb
sub
pop
mov
sbb
mov
jbe
sti
out
fnstsw
cmp
dec
sub
mov
loop
jmp
sub
mov
mov
pushf
sbb
add
ja
pusha
addb
or
jle
mov
mov
fucom
cld
cld
mov
stos
push
mov
pop
stc
subb
pop
shll
pop
mov
mov
mov
cmp
repz
add
push
movsb
stc
outsl
scas
dec
jno
or
in
movsl
pop
and
fisubrs
push
clc
sub
inc
mov
rolb
in
push
mov
bound
jo
sarb
fcoms
insl
add
arpl
fildl
subl
in
add
sub
push
sub
loopne
out
iret
cmp
pusha
cli
fldenv
cmpsb
dec
adc
popl
mov
sub
cmc
adc
mov
sub
les
pop
in
jmp
xchg
in
sar
stc
and
cmp
imul
test
subl
pop
and
xor
jg
cwtl
ds
imul
mov
fwait
incb
mov
add
pop
out
pop
aad
xchg
mov
xchg
inc
mov
lock
mov
aas
cmp
inc
mov
lahf
adc
imul
or
push
into
sub
or
js
dec
jg
test
repnz
divl
or
jl
lds
dec
addr16
andb
stos
jp
xchg
lea
stos
frstor
xor
icebp
mulb
sub
fcom
adc
mov
push
xchg
pop
mov
scas
dec
xor
pop
push
sub
pop
xor
popf
jp
sarl
mov
shlb
jnp
cwtl
sbb
cmc
test
out
ficompl
dec
flds
and
inc
sbbl
in
mov
push
inc
sub
inc
and
aam
xchg
xchg
ret
pusha
inc
pop
push
dec
or
inc
xlat
aaa
les
ret
sub
sbbb
mov
sub
jle
push
inc
in
push
repz
pop
adc
movsb
bound
dec
pop
pushl
js
jmp
popf
cmp
rorl
ret
sub
inc
stos
ja
movsl
lahf
ret
mov
pop
or
add
sbb
jge
and
mov
dec
fimuls
lds
and
incb
aam
and
push
test
xor
push
fcmovnu
std
gs
xchg
test
pop
sti
leave
mov
xor
enter
jns
jb
inc
xchg
mov
jmp
sbb
cmp
xor
sti
lock
push
hlt
imul
mov
test
mov
sub
stc
jge
push
pop
mov
out
inc
adc
pop
outsl
cmp
fbld
sub
stos
scas
dec
push
outsb
out
and
cmp
inc
xchg
test
xchg
cmpsl
sbb
fstsw
sbb
testl
pusha
arpl
aam
movsl
cmp
fs
jp
in
xor
ss
inc
pop
add
pop
pop
loopne
shrb
stos
out
pop
mov
cmpsb
xchg
pusha
and
imul
xchg
push
jg
mov
sub
inc
jb
icebp
stos
dec
popa
fisubl
xor
in
jo
xor
pop
ficoml
in
xchg
mov
cld
jecxz
mov
mov
pop
mov
sub
movsb
cld
push
sbb
ficomps
in
shrl
jns
aad
lcall
test
jp
imul
jecxz
sub
jne
xor
mov
cmp
ljmp
cmpsb
xchg
inc
sub
je
or
xlat
jae
pop
lcall
pop
xor
dec
ds
or
cmovnp
bnd
adc
pop
ret
inc
xor
add
loope
aad
rcrb
jge
test
lods
push
lods
push
hlt
mov
inc
inc
orl
mov
add
imul
jns
mov
or
mov
daa
push
into
cmpsb
dec
andl
es
mov
cmp
xchg
cmpl
adc
mov
inc
and
xor
cmpsb
xchg
adc
fidivs
fs
mov
push
sbb
popa
jmp
fdivl
shl
cmp
mov
cwtl
repnz
pop
subb
mov
mov
add
sbb
xor
mov
sub
out
insl
test
mov
add
adc
fbstp
xor
mov
inc
xchg
jnp
sbb
adc
dec
jns
rcll
push
sti
loopne
aas
push
icebp
stos
mov
jge
fidivs
les
mov
cld
push
lahf
movd
icebp
jp
sub
pop
inc
jge
je
test
pop
js
syscall
loop
mov
lret
xor
ja
xor
push
push
jne
or
cld
pop
adc
push
adc
and
fwait
sbb
add
push
imul
dec
push
cmp
es
xchg
jp
fdiv
imul
xchg
add
lret
xchg
mov
iret
sub
jne
lods
inc
stos
xchg
std
enter
xor
adc
js
inc
mov
mov
out
int
mov
sahf
sub
daa
std
mov
fimull
daa
xchg
pop
inc
sbb
outsl
lret
add
int3
cmpsl
sub
add
out
xchg
xchg
xor
movsl
or
bound
stc
ss
xlat
xchg
pushf
lea
adcl
stc
fcmovb
pop
push
xorl
dec
lea
test
scas
insb
or
out
sar
sbb
int
loop
jbe
fidivl
xchg
scas
xor
cmp
cs
mov
mov
loopne
or
or
and
rcr
outsb
pushf
aam
mov
and
aaa
mov
xor
test
gs
sbb
rcrb
in
jno
fmul
imul
and
push
pop
mov
xchg
xchg
test
push
sbb
sub
lret
fs
rcll
pop
and
test
mov
mov
cld
out
mov
les
mov
mov
stos
pop
xchg
mov
jnp
fdivp
sahf
ds
push
sbb
nop
shl
ljmp
dec
mov
and
cltd
xchg
test
and
mov
dec
lock
loopne
mov
push
add
into
enter
sbb
sub
mov
or
ret
jmp
xchg
mov
cld
pop
inc
out
rcll
cltd
add
cs
iret
xchg
imul
in
jbe
call
jecxz
das
adc
notb
inc
sbb
push
mov
jg
dec
push
xor
jp
mov
outsl
mov
inc
xor
and
sub
jns,pt
dec
enter
jae
sbb
in
pusha
jnp
mov
cmp
adc
std
std
adc
jno
sub
jb
negb
mov
ror
mov
xchg
sahf
pop
jge
and
pop
imull
sbb
mov
rolb
in
test
imul
sar
mov
and
lahf
sub
mov
dec
lret
test
cmpsl
inc
cmp
push
pushl
stos
jnp
mov
in
out
or
xlat
imul
in
or
inc
test
mov
pop
aaa
sbb
aam
out
lcall
shr
dec
mov
or
mov
mov
sbb
dec
mov
loop
lds
cmp
xchg
lds
cmp
mov
scas
mov
jge
dec
add
out
xchg
sub
dec
adc
jmp
in
cli
add
bnd
mov
out
ja
jle
mov
outsl
jne
push
mov
in
push
movl
or
movsb
jno
fstps
jecxz
dec
cmpsb
mov
sti
lods
push
lfs
xchg
inc
push
mov
shll
mov
aas
pop
je
lret
mov
jno
dec
xchg
cwtl
cmp
aam
and
push
push
lock
std
sti
dec
mov
jle
pusha
fucomi
push
dec
cs
pop
mov
ja
adc
bound
mov
cmp
cmp
lock
or
sub
test
push
subb
test
push
ror
inc
sbbl
jae
mov
adc
es
nop
pop
fwait
pop
sbb
es
mov
add
inc
push
loopne
jo
imul
pop
push
loope
xchg
jle
sbb
popl
xchg
dec
add
cmovno
mov
lcall
mov
add
xorl
test
das
and
dec
fadds
daa
les
cli
insl
dec
xchg
daa
iret
stos
out
insl
pop
jne
icebp
repnz
pusha
inc
xchg
lods
rclb
xorl
mov
rcrb
unpcklps
popa
gs
sbb
jne
dec
and
loop
aaa
jne
mov
jle
test
es
shlb
push
jle
enter
or
mov
pop
movsl
arpl
sbb
and
push
fstps
xor
inc
inc
xor
xchg
test
daa
xchg
fldcw
in
pop
scas
mov
addr16
sbb
icebp
and
std
add
cmp
sub
adc
data16
sub
daa
pop
pop
xlat
pop
add
and
jmp
adc
mov
das
ds
inc
sbb
lret
xchg
stos
mov
xchg
andl
push
mov
inc
call
jbe
adcb
incb
adc
js
cmp
stos
in
mov
orb
cmpsl
jnp
pop
xchg
stos
insl
mov
add
xor
add
setge
stos
mov
mov
xchg
and
movsb
mov
pop
or
ficompl
and
and
adc
daa
xlat
mov
es
push
push
add
sbb
pop
pop
subb
lcall
mov
and
cwtl
loop
repz
jo
sbb
mov
or
xchg
pop
xchg
xor
jg
mov
pusha
add
inc
jle
mov
mov
cmp
jne
mov
repnz
mov
ds
in
lret
mov
mov
add
out
jnp
pop
test
shr
and
or
imul
xor
adc
dec
xchg
or
lock
xor
aas
aam
and
fldt
jnp
lds
sub
int3
adc
cmp
cld
jne
mov
sahf
arpl
lahf
stc
rcrb
mov
ljmp
insb
mov
jge
or
shlb
loopne
push
lods
outsb
outsb
divb
mov
and
lods
int3
sub
and
ja
fists
push
scas
cs
shlb
add
and
adc
mov
or
jnp
sub
push
cmp
xor
sbb
fmuls
adc
pop
stos
cmp
add
mov
scas
dec
clc
lcall
cltd
mov
das
loopne
ja
or
xorb
jae
push
and
push
jbe
stos
push
ret
push
mov
mov
dec
cmp
filds
sub
cmp
jecxz
push
or
repz
or
inc
xchg
ret
in
sub
sar
int3
pop
sbb
mov
in
fisttpll
add
mov
sub
cmp
out
add
int
dec
in
jnp
jae
scas
mov
nop
divb
pusha
pop
out
push
ljmp
jle
jl
addb
sahf
mov
dec
push
sub
mov
sbb
aaa
xchg
movsb
push
mov
leave
sub
jnp
pop
adc
and
sub
fs
jne
repnz
inc
adcb
fadd
or
ficoms
sahf
add
mov
sbb
iret
pop
jp
mov
sbb
xor
push
scas
lcall
jg
movsl
jmp
and
outsl
push
pop
fistpll
or
or
pop
push
inc
mov
add
xchg
add
shlb
arpl
xchg
add
loopne
and
fisubl
adcb
jb
dec
cltd
jp
fldcw
add
mov
fildll
mov
dec
adc
push
inc
lahf
jbe
icebp
insl
sbb
push
insb
jo
xor
inc
xchg
pop
int
aaa
sarl
or
push
push
scas
lret
xor
add
cli
mov
test
or
or
pushf
in
jle
cmp
xchg
in
out
fstpl
and
jp
and
mov
dec
fsubrs
cld
sbb
cmpsb
call
mov
test
call
je
or
das
hlt
jb,pn
sti
scas
mov
loop
cld
call
xorl
add
sbb
addl
je
inc
jno
inc
adc
adc
cmpsl
push
mov
xchg
xchg
fld
inc
stc
testl
inc
rorb
hlt
jbe
adc
bound
fwait
cltd
jns
dec
lcall
jne
repz
mov
shlb
lds
add
leave
and
mov
repnz
dec
dec
int
and
lahf
cmpsb
mov
mov
xlat
or
cs
ljmp
lds
push
dec
rorb
je
push
cmpsb
mov
or
scas
xchg
dec
popa
and
push
push
jnp
test
cmp
loop
inc
adc
outsl
sub
mov
in
add
aas
xor
rcll
cmp
je
aam
jle
rcl
mov
leave
lds
jge
sub
loope
mov
mov
sti
int
sub
inc
std
mov
jb
pushf
jmp
cmpsl
pop
pop
pop
lret
test
sub
push
xchg
icebp
adc
andl
jno
addr16
nop
add
test
push
xchg
cmp
dec
lret
and
arpl
dec
inc
mov
daa
dec
sub
cmpl
clc
je
push
mov
in
ds
inc
add
sub
iret
cmpsb
iret
push
outsb
jmp
loop
lods
xor
dec
jnp
divl
inc
mov
cmp
dec
addr16
xchg
fisubl
fisubrl
sbb
xchg
test
jns
sbb
pop
stc
daa
jnp
add
adc
cmp
fwait
pop
jb
fwait
sub
push
adc
mov
add
mov
mov
adc
mov
jbe
jg
cli
jns
mov
call
jmp
add
das
xchg
adc
jle
or
sbb
insb
jnp
push
gs
ret
mov
loopne
hlt
pusha
lock
and
pusha
scas
dec
sub
test
dec
loopne
mov
mov
jbe
stos
stos
push
inc
in
jmp
jg
scas
jecxz
cmp
out
hlt
jmp
je
fwait
lds
xchg
push
or
addr16
insl
rclb
cmp
pop
push
pushf
lock
aad
sbb
jecxz
fcoms
push
jle
fistps
into
test
push
cli
jnp
or
jno
int3
dec
shrl
jb
cli
pop
lret
mov
jp
mov
mov
sub
or
out
inc
or
mov
call
inc
jns
arpl
loope
pop
fldl
pop
mov
push
loope
xchg
inc
cli
lahf
out
jne
push
inc
int
aad
rorb
xor
xchg
aas
mov
daa
pop
xchg
inc
add
sub
cmp
fldt
repz
mov
mov
mov
lcall
adc
and
adc
nop
cltd
aaa
test
mov
mov
mov
push
mov
or
pop
inc
mov
imul
aam
push
aas
sbb
int3
xchg
shlb
mov
sub
dec
cmpsb
ja
mov
jb
and
andb
test
mov
pop
stc
cli
hlt
les
out
std
sub
mov
xor
cld
leave
aam
cmp
in
bound
push
aad
fldcw
pop
test
add
adc
pop
data16
clc
addl
push
frstor
pop
sub
jl
les
cmc
sti
dec
sub
cmp
jnp
mov
mov
and
lahf
xor
cmp
stos
aad
clc
cwtl
popf
loope
lahf
out
sbb
mov
or
es
repnz
push
popa
push
or
xchg
pop
cmp
or
rcrl
xchg
push
sub
decb
int
push
add
mov
clc
arpl
test
ret
and
popa
jbe
add
mov
leave
inc
lret
leave
xchg
pop
adc
pop
mov
pop
jnp
sub
andb
sbb
insb
sbb
add
cmp
ret
outsl
dec
add
insl
movsl
out
aas
mov
movsb
inc
sbb
les
into
cmp
jp
pusha
aaa
in
lret
dec
adc
in
xor
and
adc
cmp
and
adc
push
mov
movsl
insb
xacquire
or
in
mov
rclb
es
fildll
push
and
mov
lea
lods
outsb
mov
out
cld
pop
inc
leave
pop
mov
xor
pop
ret
fildl
or
push
int3
loopne
sub
sbb
into
cs
dec
pop
mov
fldcw
push
add
leave
jecxz
push
daa
ljmp
sbb
pop
ss
stos
mov
loopne
movsb
mov
popf
inc
stos
or
cld
xor
cmp
xchg
pop
mov
scas
insl
xlat
mov
bound
push
push
dec
pop
mov
cmp
sahf
fadds
mov
pop
cwtl
sub
pop
mov
loop
or
sbb
fsubs
adc
sub
inc
rcrb
xor
popa
push
inc
dec
mov
xor
mov
push
sub
insb
test
mov
push
inc
cmp
sahf
cld
adc
iret
mov
mov
mov
mov
mov
adc
push
add
fmull
jne
gs
enter
shrb
mov
stos
sub
lock
dec
mov
imul
dec
jp
in
shll
inc
sub
sahf
and
fstpt
pop
in
sub
jns
out
sbb
sub
movsb
lret
mov
in
mov
sti
nop
adc
into
lods
add
lahf
aaa
notl
pop
cwtl
mov
movb
pop
lods
push
dec
add
shl
jmp
mov
or
call
shl
rcll
cli
addr16
in
sti
lods
or
cmp
push
mov
inc
iret
cltd
mov
sbb
xchg
adcl
imul
insl
out
mov
mov
dec
out
pop
lods
jl
push
aam
dec
imul
gs
fstps
or
scas
sbb
and
hlt
or
popa
rorl
std
nop
fdivl
fwait
cmp
mov
pop
add
dec
mov
pop
clc
jbe
pop
xchg
mov
adc
data16
and
push
ds
das
jecxz
popa
hlt
push
mov
dec
pop
push
or
fisttpll
mov
daa
jge
mov
aaa
push
sti
aas
stc
xchg
mov
lock
mov
cmc
and
xor
fiaddl
pop
inc
cmp
pusha
dec
cmp
rcrl
jge
cld
dec
xchg
mov
dec
sbb
out
push
repz
stos
sub
outsl
and
xor
xchg
xor
jo
push
cmpsb
movsb
mov
xchg
sub
push
push
sub
pop
arpl
and
xor
push
scas
adc
mov
call
cli
xchg
cmp
push
mov
cmp
fldl
add
call
cmpsl
xor
mov
andl
mov
insl
sub
mov
add
roll
scas
gs
loope
sti
shrl
fwait
lock
inc
sub
adc
mov
cmp
jno
addr16
xchg
das
out
enter
inc
call
sbb
push
jnp
loopne
fistpll
inc
idiv
cwtl
rcl
mov
inc
pop
sbb
sub
das
enter
icebp
mov
or
lret
push
xchg
fistpll
es
add
adc
push
lret
sub
mov
imul
mov
xor
mov
jns
or
add
pusha
sbb
mov
xchg
dec
in
in
mov
ficoml
icebp
push
mov
imul
inc
sarb
test
sub
stos
ja
and
sbb
jle
notl
loope
js
mov
adc
adc
daa
ret
adc
jne
clc
cmp
in
fsub
push
adc
cmp
and
cmp
mov
push
push
mov
repnz
cmpsb
pop
cld
xor
xchg
inc
sub
sbb
dec
add
push
sti
fnstenv
pop
shlb
imul
mov
call
lret
cmc
adc
ja
or
rcll
jmp
and
cmp
movsb
or
test
mov
pop
dec
fnsave
adc
inc
out
mov
xchg
xor
fcompp
add
and
mov
mov
aam
mov
xchg
fwait
or
adc
cmp
je
test
inc
cmp
subl
loope
pop
aad
jbe
decl
or
dec
jns
inc
mov
pop
scas
loop
jecxz
inc
jle
jmp
shlb
outsl
xor
and
es
mov
mov
xor
dec
mov
jle
jns
cwtl
and
dec
mov
mov
push
add
xor
mov
add
or
cwtl
dec
adc
sbb
jp
in
movb
adc
mov
lds
xor
imulb
mov
cmp
jl
xor
mov
and
mov
test
sti
cltd
test
dec
fnstcw
scas
stc
movsb
xchg
dec
mov
fs
and
add
outsl
cwtl
cmp
cmc
movsb
shrb
sub
jp
jmp
xchg
stc
repnz
hlt
mov
dec
out
pusha
cld
mov
push
dec
int3
decb
pop
xor
icebp
cwtl
ds
insb
imul
in
mov
fistpll
pop
or
stos
jno
cmpsb
xchg
adc
pop
pushf
jbe
mov
jle
imul
stc
out
mov
and
cmpsl
mov
sbb
int
fistpl
adc
pop
xor
push
push
jb
jo
lods
mov
jmp
or
jge
mov
test
pop
lret
sbb
cld
mov
loop
mov
pop
movsl
mov
pusha
bound
mov
pushf
fs
fmul
or
shll
cmpl
lret
out
repnz
mov
leave
xchg
int
imul
out
outsb
loopne
frstor
mov
es
iret
les
pop
stos
mov
lea
dec
ret
test
jb
dec
jl
sbb
jae
cwtl
and
in
fdivrs
sbb
mov
inc
push
or
into
repnz
aam
push
int3
hlt
cltd
inc
and
cmp
pop
and
mov
lods
aas
iret
outsl
int
jno,pt
fnstenv
xchg
push
and
pop
xchg
pop
dec
out
inc
enter
inc
xchg
dec
imul
cmp
addr16
loope
roll
xor
mulb
test
fwait
in
mov
pop
sbbl
addr16
stos
mov
pop
push
aad
pop
fldenv
dec
rol
sahf
fdivs
pushf
cld
pop
add
jl
push
dec
mov
inc
xchg
or
lret
faddl
add
cwtl
in
dec
lods
dec
pop
in
cmpsl
mov
jge
ljmp
xchg
add
scas
mov
icebp
sub
mov
jge
inc
popa
fs
jbe
xchg
ljmp
sub
clc
jb
pusha
xor
mov
cmp
pop
and
mov
das
int
ja
pop
dec
or
jae
bound
icebp
sub
inc
fs
test
jecxz
ljmp
pop
dec
sbb
inc
push
loop
jbe
sahf
xchg
addr16
scas
mov
pusha
dec
xor
xor
pop
shrb
or
push
inc
sbb
adc
movb
out
xchg
jmp
inc
add
out
lahf
xor
cmp
or
pop
mov
mov
or
and
push
out
jae
pushf
stos
and
mull
sbb
lahf
jae
fld
inc
sbb
xor
aam
call
and
out
fistps
inc
xchg
mov
mov
pop
jecxz
fdivrs
pop
or
lock
shlb
xchg
stc
push
pushf
jl
cli
mov
mov
dec
xor
fcmovb
add
enter
imul
sub
xchg
mov
xchg
adc
shrl
mov
push
adc
int3
test
pop
mov
mov
fcom
aad
ja
rolb
fsts
aam
mov
or
sub
fcmovbe
mov
fs
mov
shlb
pop
rorl
out
je
pop
les
dec
cmp
loop
mov
jae
mov
movsb
aaa
cmpsl
jmp
arpl
fbstp
dec
imul
fwait
out
js
mov
adc
fwait
mov
add
cmpb
xchg
ret
dec
in
mov
sbb
pushl
jb
call
adc
mov
jns
ret
mov
add
out
data16
pop
push
mov
mov
ret
into
inc
mov
aaa
xchg
ret
jmp
push
push
fildl
or
xchg
stos
in
loopne
stos
gs
dec
mov
mov
push
dec
pop
mov
aad
pop
adc
inc
mov
pop
push
mov
js
pop
mov
fs
jne
push
xchg
ss
push
cs
lods
mov
aaa
xor
mov
lds
les
icebp
cld
jecxz
push
out
xchg
inc
test
pop
fists
orb
adc
xchg
outsb
flds
dec
pop
js
jae
dec
ja
jns
push
lret
repz
mov
repnz
adcl
sbb
xchg
mov
mov
daa
xchg
mov
lcall
mov
and
insl
pusha
or
add
pop
adc
push
ja
cmp
push
cmp
mov
cmp
in
mov
or
neg
popf
push
jo
fs
push
push
std
mov
xor
pushf
xor
outsb
or
outsb
stos
movsl
loope
xchg
sub
push
adc
push
int3
push
sbb
out
ret
adc
into
jns
lea
or
pop
sub
adc
andb
push
sarb
mov
xchg
test
outsb
mov
pop
push
pop
int3
imull
pop
sbb
mov
aam
push
push
cmp
sub
cmp
or
clc
sub
je
lock
xchg
adc
int
fdivrs
stos
jge
mov
orb
icebp
adc
xchg
mov
iret
push
pushf
ljmp
dec
and
test
jp
pop
out
pushf
cmp
jle
stc
mov
mov
push
outsb
sbb
mov
jb
imul
lea
sbb
push
cmp
xchg
jns
sub
out
pop
mov
inc
push
mov
iret
arpl
inc
and
cltd
lods
je
push
ror
arpl
stos
or
data16
jmp
cwtl
sbbb
or
or
cmp
jge
movsl
inc
adc
movsb
xor
shl
and
sub
inc
mov
iret
jge
jmp
pop
adc
cld
mov
cmc
lret
out
stc
mov
add
inc
mov
and
bound
push
xchg
pop
pop
dec
mov
mov
sbb
mov
std
push
inc
sarl
dec
push
jne
jge
and
cmc
outsl
sarl
or
inc
out
jmp
test
sbb
xor
mov
push
notb
aad
jmp
pusha
popa
adcb
adc
stos
mov
mov
fisttpl
xchg
es
mov
mov
fsubrl
fwait
cmp
cltd
lea
xchg
push
add
cmp
adc
or
out
fisttpl
jl
or
xchg
inc
cmp
pop
mov
lcall
cli
in
jg
mov
rorl
jl
cltd
int3
lea
add
idiv
and
aam
xor
push
pop
jg
ret
pusha
loop
dec
daa
jmp
testb
cmp
jno
push
cmp
std
das
jbe
cwtl
xorb
push
jae
ret
movsl
imul
push
xor
rorb
aas
jmp
fidivrs
lock
fs
dec
mov
das
push
les
dec
std
jl
push
test
aas
pop
dec
jbe
lea
test
adc
sbb
cmp
ficomps
mov
pop
notl
loope
rorb
es
push
loopne
das
or
pushl
push
mov
mov
aad
outsl
mov
addl
ret
mov
inc
xchg
xchg
mov
mov
add
pop
mov
mov
push
fsubrs
and
inc
or
xchg
mov
lods
imul
adc
jle
mov
in
dec
in
jae
imul
jmp
adc
ja
ja
ja
outsb
push
jae
mov
mov
push
inc
inc
lea
fnstsw
sub
sbb
loopne
cmp
dec
dec
ret
or
inc
lea
and
cmp
call
int3
fstl
popa
subb
lahf
xor
js
clc
call
xchg
mov
xlat
dec
imulb
scas
lods
or
pop
imul
sti
jae
mov
sbb
mov
jmp
mov
sbb
adc
sbb
sub
daa
sub
out
cmpsb
ds
ss
fstl
ficompl
outsb
sub
sub
jmp
lods
add
sub
mov
pop
and
push
in
push
out
scas
arpl
mov
mov
jnp
mov
rol
sbb
test
adc
add
cmp
data16
jae
ret
pop
mov
ss
in
add
push
ret
xlat
into
pop
in
imul
jl
jmp
cs
test
jecxz
mov
mov
js
test
cmpsl
int
dec
in
insb
mov
mov
shll
sbb
fisubrs
pop
sub
inc
push
pop
push
dec
pop
out
data16
arpl
loopne
scas
movsb
bound
sbb
jge
fnstenv
outsl
popa
sahf
pop
mov
pop
and
xor
pop
cwtl
pop
js
pop
mov
push
int3
xor
inc
inc
jmp
mov
or
jg
fcomps
jmp
dec
scas
cmp
insb
xchg
insl
mulb
fisubs
insb
fldl2e
movsb
dec
nop
rcrl
les
int
push
test
int3
xchg
call
jb
fstl
push
dec
cmp
push
pusha
push
dec
sub
dec
mov
jle
sub
pop
cmp
push
xlat
pop
fisubrs
push
outsb
mov
hlt
mov
test
add
push
ret
push
outsb
fistpll
out
mov
xchg
mov
loop
jle
sub
js
cmp
push
repnz
jmp
jbe
popf
or
orl
cld
clc
in
mov
std
int
sti
pop
rorl
jns
popa
pop
xor
adcl
pusha
xchg
arpl
repnz
sbb
cmpsb
daa
mov
or
xchg
aam
dec
cmpsb
bound
test
jne
andl
cmp
mov
sahf
inc
fcmovu
or
lret
xchg
dec
cmp
and
cltd
jns
dec
pop
mov
or
into
adc
xor
add
out
fdivs
pop
test
scas
and
enter
rcl
add
das
and
inc
xchg
leave
icebp
ss
adc
mov
jns
xchg
sub
lcall
mov
mov
fsubp
adc
pop
loope
mov
mov
or
lret
xor
mov
fstpt
pop
add
scas
bound
mov
iret
push
push
fdecstp
cs
lock
or
pushf
leave
xchg
xor
jmp
xchg
add
jo
mov
jmp
or
int3
and
ret
cmpsb
cmp
mov
mov
mov
sbb
inc
pop
out
setp
pop
pusha
cli
data16
or
hlt
inc
fs
pop
or
lock
sarb
or
std
mov
lods
mov
pop
add
or
or
dec
loopne
jb
xor
scas
sub
lds
sti
lahf
mov
pop
call
push
push
inc
ret
call
jecxz
jmp
sbb
jo
mov
ficompl
sub
jne
add
mov
and
imul
inc
pop
int3
loope
xchg
clc
pop
sbb
xor
sbb
sbb
inc
mov
sub
cld
pop
xchg
xor
xor
movsl
cmp
or
or
dec
js
sbb
sbb
add
jmp
mov
xlat
neg
jae
sub
xor
out
adc
xchg
or
lret
fwait
insl
mov
mov
jbe
iret
and
cmc
sbb
xor
lods
and
dec
pop
xchg
mov
add
cmp
sub
pop
in
jb
xor
outsl
xor
mov
or
add
mov
lea
shlb
xchg
inc
cli
jnp
negl
sub
sub
cmp
add
mov
adc
or
or
sbb
mov
movsl
addr16
and
adc
dec
xchg
js
push
fildll
mov
das
bound
adc
test
aam
cmp
pop
xchg
mov
xchg
bound
enter
xlat
adc
push
mov
orl
mov
push
popa
inc
mov
push
into
leave
dec
mov
shrb
push
xor
mov
pop
pop
loopne
push
cs
xchg
lret
adc
mov
push
mov
mov
mov
sbb
in
dec
stos
mov
es
cmpb
test
loope
ja
sub
shl
dec
ljmp
or
jns
xchg
movsb
xor
cmp
sub
add
dec
add
sti
add
scas
xchg
lcall
pop
sbb
fdiv
in
add
bound
jge
ret
daa
mov
fsubrs
adcb
sbb
fidivl
je
mov
pop
outsl
iret
aaa
pop
pop
nop
cli
mov
out
stos
pop
sub
push
dec
jmp
inc
test
fs
mov
pop
and
jne
loopne
jo
jp
imul
cmpsl
out
test
and
or
popf
rep
aaa
sub
mov
sub
aad
pop
into
mov
xor
cmp
out
call
push
hlt
sti
popf
pop
or
and
push
mov
fwait
movsb
adc
inc
or
sbb
faddl
xchg
into
and
imul
sub
shlb
subb
dec
mov
adc
inc
add
add
call
xchg
xor
adc
insl
push
sub
es
int3
mov
or
popf
adc
mov
out
popl
xor
xchg
xchg
jle
jg
outsl
test
rcll
outsl
cmpsl
mov
mov
mov
mov
push
dec
jge
fisttpll
and
mov
pop
out
fucomp
or
mov
and
cs
xlat
mov
inc
stos
and
cmp
xor
aaa
sbb
aam
jge
lret
outsb
jns
xchg
cli
aas
and
scas
xor
loopne
ud2
mov
orl
adc
out
inc
hlt
fnstsw
push
sti
push
pusha
out
gs
xchg
xchg
faddl
fdivs
and
push
xor
mov
xchg
out
xor
aaa
gs
xchg
aad
arpl
icebp
mov
js
stc
or
popf
jl
dec
arpl
mov
aaa
xchg
adcl
stos
pushl
into
mov
decl
push
jo
push
inc
nop
bound
push
and
popf
bound
rcr
fdivr
pop
hlt
inc
xor
bound
mov
adc
mulb
add
arpl
mov
mov
xor
adc
adc
out
jns
gs
sub
stc
jae
pop
insb
or
or
in
push
ljmp
add
scas
mov
pushf
call
test
sbb
shll
mov
shll
and
push
mov
cmc
sbb
roll
loop
nop
cmp
xchg
cli
call
sbb
shrb
addr16
addr16
out
lock
sbb
mov
cltd
pusha
add
stos
push
cmp
pop
or
loopne
les
xor
jl
repnz
mov
insb
sahf
adc
xor
out
pushl
ss
jp
pop
and
call
xor
mov
add
clc
sarb
test
push
pop
push
aam
sbb
jmp
and
mov
pop
mov
int3
xor
into
scas
mov
std
xchg
iret
loop
push
nop
jae
dec
dec
test
scas
sub
mov
pusha
aad
xor
sbb
outsb
les
sub
push
ss
mov
add
xor
mov
cmp
out
cmp
insl
jecxz
fnsave
pop
pop
scas
sub
pop
test
sbb
and
mov
adc
lock
mov
fcoms
cmp
ds
sub
popf
cmp
mov
outsb
push
test
sub
add
sub
stos
xor
incl
insl
dec
jp
pop
push
or
fs
cmpsb
mov
cmpsb
cmc
and
mov
pop
push
out
dec
cmc
repnz
test
cs
and
addb
inc
push
sti
rorb
fisubrs
pusha
dec
outsl
fcmovne
rcrl
imulb
fnsetpm(287
mov
mov
adc
mov
int
daa
and
xor
lcall
and
sub
xchg
add
pop
bound
pop
xchg
rcrl
sub
cmpsl
repz
outsl
fsubrs
imul
mov
mov
sbb
rcrl
movsb
jbe
xchg
inc
pop
imul
lahf
pop
push
dec
pusha
xchg
stos
inc
cmpsb
xchg
fnstcw
cmc
les
in
fwait
and
pop
cwtl
pop
mov
nop
lahf
inc
rolb
xor
jl
lds
out
clc
jae
icebp
sub
jge
push
mov
xor
inc
inc
inc
adc
ss
shl
loope
and
mov
repz
mov
in
mov
mov
inc
xor
jae
fbld
xchg
gs
add
dec
sahf
inc
xor
pop
std
andl
lods
and
ss
xor
in
mov
adc
adc
cld
lret
cwtl
mov
mov
mov
and
mov
pop
inc
xchg
loopne
cs
sub
push
pop
xor
dec
push
int3
arpl
mov
cli
and
add
add
lret
xor
push
shll
data16
cwtl
mov
and
xor
mov
mov
mov
dec
pop
aam
cmpsl
movsl
mov
cld
jge
mov
pusha
stos
push
rorl
imul
int
les
xor
and
pop
add
xor
out
dec
mov
mov
mov
sahf
loopne
cli
inc
jnp
xchg
add
sub
insb
es
lds
and
add
and
cld
and
movsl
mov
xor
or
pop
imul
clc
aas
cmp
adc
sub
dec
push
rolb
out
push
scas
cmp
pop
xor
repnz
jmp
and
sub
divb
les
push
jae
fwait
ljmp
xor
cmpsb
test
xchg
push
popa
and
xor
jnp
sbb
pop
into
cld
inc
sub
faddl
and
mov
sub
push
aaa
fdivl
mov
pop
fs
movsb
das
and
sub
xor
insl
inc
sbb
mov
out
mov
andb
inc
stos
mov
pop
lret
mov
sub
dec
mov
clc
sub
jp
and
call
jmp
push
or
cmp
and
mov
icebp
and
enter
push
xchg
push
dec
push
out
ljmp
loope
or
je
jl
mov
push
xchg
fcom
xchg
jg
push
xchg
xor
xchg
pop
mov
nop
lods
sub
pop
out
out
pop
cltd
int3
mov
mov
aad
pusha
int
sbb
fcmovne
iret
mov
ret
pop
rolb
dec
clc
jb
imul
fwait
jmp
cmc
adc
jae
inc
add
iret
enter
and
nop
pop
rorb
inc
mov
das
mov
adc
aas
lock
jl
jb
add
adcl
icebp
int
rolb
pop
mov
cmp
xor
push
lock
xchg
mov
mov
cmp
mov
jo
in
nop
fbstp
ds
mov
xchg
adc
push
mov
xchg
pop
pop
inc
ljmp
fisttpll
addr16
push
push
adc
jp
ljmp
cmc
lods
inc
in
jle
stos
lret
fildl
push
out
push
push
dec
pop
mov
sbb
sub
or
dec
dec
xchg
fs
repnz
pcmpgtd
jae
sbb
sub
iret
ja
mov
cmp
or
xor
outsb
adc
xor
insb
mov
add
adc
pop
lcall
ret
leave
xor
or
insl
mov
xor
sbb
popf
cmp
add
je
popf
push
sub
and
inc
push
sub
aaa
inc
repnz
mov
int3
mov
jns
add
das
xchg
int3
mov
fistps
mov
mov
xchg
lcall
sub
mov
sbbl
jl
dec
xchg
mov
adc
jmp
xchg
mov
xor
adc
pop
test
repz
daa
cltd
cmc
mov
mov
jne
gs
test
in
xchg
cmp
pop
mov
push
sbb
sbbl
xor
ss
mov
push
mov
fiaddl
fnsetpm(287
sub
mov
cmp
inc
xchg
and
dec
arpl
mov
fiaddl
fs
imul
mov
adcb
xor
lahf
aad
mov
or
and
stos
nop
cmpsl
sbb
leave
and
sbb
fstl
aas
pop
jbe
shr
data16
test
and
sbb
roll
sub
pop
inc
jp
cld
mov
jge
add
pop
jb
addr16
mov
out
lcall
push
adc
ss
lret
js
in
stos
mov
imul
or
inc
sbb
adc
call
cmp
mov
mov
loope
sub
jmp
xor
cmpsl
add
pop
mov
sub
push
lock
call
add
lcall
jge
popf
cmp
adc
sbb
and
push
shrl
mov
pusha
sub
mov
add
inc
out
or
dec
shlb
popf
clc
jbe
out
lret
push
pop
insl
addb
popf
push
dec
xchg
les
jae
test
icebp
xor
test
pop
sti
stos
mov
inc
repz
or
sub
insl
cmpsl
jno
or
xchg
dec
jae
pop
inc
dec
push
sbb
mov
push
dec
ret
test
outsb
sub
lret
add
mov
xchg
in
or
xor
in
stos
jnp
repnz
xor
test
hlt
in
std
inc
pop
jnp
jmp
das
xchg
xor
inc
add
daa
push
dec
xchg
mov
push
mov
xchg
movsb
lcall
adc
mov
fwait
sbb
pop
push
stos
ja
jecxz
lea
xlat
aas
cld
push
sbb
jne
pop
pop
jne
call
mov
dec
adc
mov
dec
fidivs
or
movsl
test
or
cmp
in
sbb
cmp
dec
clc
jne
sti
dec
pop
out
mov
addb
out
pop
xchg
cli
cmp
stos
lret
lods
and
pop
sub
jmp
inc
in
jge
cmpsb
je
mov
push
dec
pop
mov
fisubrs
fisttpl
mov
fyl2x
pop
fiaddl
cmp
mov
in
enter
dec
pushf
pop
mov
cmp
sub
clc
imul
sbb
xchg
xchg
rcrl
inc
scas
jecxz
cmp
jns
sub
push
or
or
adc
cld
popf
sarb
cltd
push
push
scas
pop
pop
cs
mov
mov
sub
mov
roll
pushf
pop
mov
cmc
sbbb
data16
andb
aam
and
leave
jns
mov
xlat
test
cld
stc
lods
xchg
rcrb
lcall
xlat
mov
test
pop
adc
fstps
addl
cmp
sbb
sbb
ja
dec
push
mov
jne,pt
out
dec
rorl
xchg
cmp
cli
adc
insb
mov
popa
inc
notb
enter
out
mov
lock
add
icebp
adc
cltd
lahf
adc
outsl
dec
cmp
mov
das
inc
fistl
add
push
in
sub
stc
xchg
stc
mov
int
adc
lds
cmp
jo
push
or
repnz
sub
sub
push
into
aad
sub
mov
movsl
cmpsl
mov
mov
sub
adc
andb
pusha
inc
push
cmp
xor
add
into
xorl
sbb
add
roll
push
jp
xor
cmp
imul
cmp
lods
dec
stos
in
adc
nop
lahf
jae
jne
in
dec
scas
sub
mov
fsubp
inc
push
mov
mov
or
cltd
inc
jp
shr
cmp
cmp
sbb
sub
cmp
jp
shrb
call
decl
cmpsl
stos
dec
loopne
imul
out
mov
in
inc
movsb
dec
sar
add
and
scas
shl
hlt
mov
scas
jmp
adc
dec
or
outsl
cli
xor
and
inc
mov
fwait
cwtl
leave
call
loopne
andl
ret
stc
mov
fucomip
or
ja
and
jp
mov
adc
nop
adc
adc
pop
add
repz
inc
inc
xor
loop
dec
imul
lods
mov
shrl
adc
outsb
jae
pop
add
or
or
mov
cmc
adc
test
test
xor
aaa
push
xchg
inc
frstor
xlat
or
ret
rclb
cmpb
dec
inc
xchg
dec
frndint
sbbb
lcall
out
shll
imull
mov
std
std
dec
iret
bnd
sbb
aas
or
fsubl
outsb
sbb
and
scas
jno
fnsave
mov
popf
mov
fs
popa
jl
cld
or
jecxz
xchg
das
push
pop
xor
shl
mov
outsl
and
out
gs
aas
mov
cmp
daa
lock
xorb
sub
pop
sub
jmp
je
leave
imull
repz
jne
outsl
sbb
bound
aam
mov
or
loope
popf
ja
fstp
test
mov
mov
mov
add
out
push
or
rclb
loop
rolb
jb
sub
jg
out
pop
leave
mov
add
dec
sub
js
mov
ret
inc
or
xor
ror
dec
ret
mov
andb
sbb
fwait
out
dec
jae
loop
in
sbb
sub
push
and
adc
mov
shr
mov
scas
xchg
stc
and
lds
fstpl
mov
int
dec
or
jmp
sahf
andb
push
into
and
imul
nop
in
sbb
jmp
cmp
enter
cmc
jo
adc
lea
or
mov
push
mov
cmpsb
adc
mov
call
mov
sub
sarb
mov
adc
lret
jo
ds
jmp
sbb
cltd
out
mov
movsb
arpl
push
or
mov
mov
adc
mov
inc
je
and
andl
or
add
outsl
or
shlb
ljmp
pop
mov
mov
inc
pusha
stos
add
mov
dec
add
nop
jns
das
arpl
arpl
ljmp
or
jo
mov
stc
daa
adc
jmp
std
cs
or
mov
add
xor
cmp
daa
out
xor
or
insl
cmp
inc
clc
push
aad
or
in
stos
lret
push
enter
xor
fcoml
std
cli
sti
movsb
and
clc
aad
dec
add
jge
sarb
daa
lods
repz
xor
ja
or
daa
add
adc
movsl
ficomps
jb
fldl2t
pop
cld
xchg
in
xchg
stc
mov
adc
insb
mov
jl
sbb
mov
push
enter
dec
sbb
add
int
daa
jno
sahf
xchg
push
insb
pop
mov
inc
icebp
inc
in
xchg
lods
into
mov
mov
or
aas
mov
popa
cli
decl
outsb
icebp
inc
mov
clc
fdivrl
jo
sbb
rclb
aas
cmp
mov
mov
inc
gs
xchg
pop
add
loop
test
xchg
sub
lcall
adc
mov
das
sbb
repz
hlt
dec
cmc
scas
pop
jb
flds
in
adc
cmp
pop
sbb
nop
or
push
cltd
or
test
loop
and
ljmp
push
data16
into
subl
mov
pop
jnp
test
xchg
es
outsl
push
fidivl
movsb
xor
mov
xor
add
cmp
inc
outsl
sarb
daa
int3
mov
xchg
push
sub
pop
push
mov
jno
mov
cld
push
jnp
add
lret
xor
out
or
xchg
cmp
xor
pop
sbb
or
pop
shrl
fnstcw
mov
dec
loopne
xor
popf
movsb
sbb
lods
rol
cmp
divl
jecxz
les
test
leave
pushf
lahf
cmp
imul
xor
rcll
pop
mov
loopne
xor
popf
lods
push
orb
xchg
push
and
imull
pop
cwtl
xchg
adc
repz
outsl
jne
int3
ret
test
loop
aas
push
lahf
mov
out
sbb
jecxz
fwait
popf
clc
aas
mov
sub
and
enter
hlt
fldt
fabs
push
mov
iret
jl
ljmp
shll
push
fwait
test
pushf
mov
xchg
lds
and
cmpsb
loope
jae
lock
mov
out
xchg
and
sub
xchg
push
mov
loop
cmp
mov
pop
sti
and
aad
lahf
mov
ret
fsubl
outsl
cwtl
jp
adc
lock
pop
add
dec
dec
mov
mov
ljmp
jbe
cmp
xchg
mov
sbb
je
ja
inc
mov
add
xor
aam
dec
cli
loop
outsb
jp
push
dec
lret
clc
inc
mov
lock
lea
rol
mov
shrb
scas
pop
adc
inc
pop
xor
frstor
mov
addsubpd
int
xor
sub
mov
inc
dec
mov
je
in
fstps
and
imul
push
push
out
mov
mov
dec
mov
out
pop
mov
sub
sub
testb
sbb
add
leave
jb
ljmp
inc
mov
fidivl
xor
xor
pop
arpl
std
pusha
lds
xchg
and
dec
test
push
test
cmp
movsb
leave
xorb
inc
cmpsb
movsl
xchg
add
imul
pop
sar
xchg
mov
popa
pop
cmp
lods
push
jge
cmpl
mov
and
adc
daa
lds
test
mov
xor
add
pop
pop
cmp
cli
cmp
mov
cs
push
jl
xchg
jnp
aad
in
out
or
dec
lds
xchg
push
push
in
test
and
mull
loopne
fcoms
jno
pushf
dec
insl
or
pushf
push
adc
into
mov
hlt
insl
aam
js
or
aas
jp
scas
jne
cmp
sbb
mov
ret
movsl
stos
or
addr16
sub
sar
mov
sbb
jns
inc
sub
daa
popa
outsl
ss
push
adc
pop
inc
std
jecxz
mov
mov
gs
and
test
lock
ficoml
sbb
enter
mov
es
aad
jmp
xchg
ret
fmuls
pop
scas
mov
sub
or
xchg
sub
out
notb
xor
dec
inc
repnz
adc
push
cmpsl
fs
ret
push
test
xchg
jns
sbb
jg
sbb
lock
adc
insl
call
pop
cmp
pop
data16
rcrb
mov
sub
jno
stc
add
leave
mov
sbb
cmpsb
mov
out
cs
jnp
jp
ffree
hlt
pop
stos
jle
insb
mov
in
pop
sbb
fpatan
inc
lock
mov
mov
jg
xor
stc
test
add
add
popf
repnz
inc
out
fsubrl
pop
leave
test
fwait
xchg
dec
dec
cmpsl
sub
inc
dec
xor
test
rcl
lock
or
add
xchg
fcomip
ds
sahf
fnsave
mov
stos
cmpsl
mov
pop
adc
fptan
mov
add
ss
mov
outsb
dec
fs
jle
loop
inc
jbe
rolb
and
icebp
lahf
test
mov
int
mov
data16
adc
mov
rorb
inc
out
outsb
cmc
push
icebp
mov
movsb
inc
pop
inc
imul
push
out
mov
mov
das
aaa
inc
mov
push
ret
loopne
outsl
out
lret
pop
and
cmp
sbb
fistpl
cmpsl
outsl
cli
sbbl
enter
cmpsl
jne
add
cmp
out
cmp
dec
out
mov
fisttpll
cmp
aad
xchg
ja
mov
cmp
int3
jecxz
xchg
scas
out
adc
adc
or
adc
test
add
mov
call
push
pop
dec
push
imul
arpl
dec
insb
adc
in
pusha
loopne
movsl
inc
pop
sti
leave
sti
mov
adc
mov
dec
vmread
jb
shrb
loop
xchg
cwtl
pop
aam
jp
test
das
cmp
clc
shll
adc
call
mov
sbb
xchg
adc
adc
xchg
push
xchg
or
dec
add
and
arpl
xchg
fimuls
jle
in
pop
jno
int3
dec
movsl
scas
pop
jbe
or
mov
fnstcw
enter
sub
push
mov
jl
lock
xor
call
mov
sarb
lret
xchg
int3
and
in
dec
iret
inc
repz
push
aam
cltd
mov
sub
movsl
rclb
inc
fsts
add
push
jp
scas
dec
sub
ficoms
or
dec
out
and
je
add
imul
imull
ss
inc
and
xor
push
bound
mov
ljmp
shll
lret
rcr
mov
sahf
cmp
xor
pop
cmp
sbb
push
mov
adc
aaa
cmp
lret
mov
ret
in
shr
push
aad
fdivs
or
pop
push
sbb
imul
pop
adc
andl
les
sbb
pop
mov
inc
fmull
sbb
cmp
mov
mov
cld
pop
jns
push
aam
lret
mov
jae
iret
xchg
arpl
mov
lcall
jp
fistpll
xorl
out
test
imul
push
lods
pop
js
mov
jns
cmpsl
dec
add
popf
rcrb
repnz
jmp
addb
push
data16
xor
jae
pusha
jecxz
mov
aas
cmp
mov
pop
pop
ds
dec
xor
push
mov
cs
std
xorl
insl
adc
gs
int
cli
sti
mov
or
aas
add
mov
sub
repz
mov
pop
test
push
mov
jne
mov
popf
xor
scas
arpl
std
nop
and
cmp
adc
push
scas
inc
xchg
test
adc
pusha
lds
inc
std
movsl
sbbb
or
int
insb
in
scas
xchg
push
cmp
in
jg
jmp
inc
push
test
enter
or
dec
popa
out
mov
inc
sub
arpl
push
inc
mov
lahf
into
cmp
xabort
cld
mov
cmpsb
or
push
mov
rcrl
call
add
sbb
jnp
xor
aas
dec
xchg
push
mov
sbb
adc
mov
xchg
es
jle
add
add
inc
xchg
jle
into
add
mov
stc
push
iret
nop
sub
push
xor
rclb
sbb
mov
xor
jmp
push
inc
mul
jae
repz
andb
xor
inc
rorl
mov
jns
xor
addr16
or
sar
imul
jle
adc
call
bound
stos
dec
or
roll
rorl
mov
stos
cli
dec
push
xor
mov
sarb
aad
arpl
outsb
jmp
jnp
inc
out
cmp
push
in
in
fsts
add
daa
pop
out
pushf
pop
xor
aam
shlb
push
pop
sbb
outsl
int
popf
xchg
xor
mov
adc
inc
inc
ret
or
jg
lds
mov
mov
sub
or
testl
jp
movsl
enter
pop
xchg
bound
repz
mov
jmp
push
push
stos
fdiv
inc
add
popa
and
mov
sub
dec
add
mov
fisttpl
pop
enter
into
ja
cmpsb
fidivl
pusha
idiv
mov
jo
sub
push
ljmp
das
push
mov
sub
sub
add
dec
loopne
or
mov
lds
jne
push
hlt
mov
mov
lahf
lahf
mov
sub
mov
add
jnp
inc
cmpsl
sub
pop
out
xchg
in
mov
stc
pop
sbb
mov
mov
sub
sub
dec
xchg
into
cmp
sahf
cmp
loope
bound
mov
sbb
shlb
mov
jl
xchg
xor
jmp
mov
test
arpl
xchg
dec
mov
lds
enter
xchg
loope
dec
lea
add
das
inc
sbb
pusha
and
pop
and
daa
cmc
xor
shlb
mov
fadds
enter
mov
fwait
push
lret
movsb
cmpsb
int
inc
ja
insb
adc
push
es
jp
cmp
add
lea
jne
test
fs
test
dec
inc
ljmp
inc
xchg
or
mov
dec
pop
insb
stos
insb
scas
cmp
outsl
dec
inc
pusha
lret
xchg
pop
popa
or
xchg
add
outsb
adc
imul
mov
xchg
or
insl
sbb
or
lcall
inc
push
popf
or
dec
sbb
dec
jge
inc
xchg
out
out
or
inc
mov
add
cmp
cmp
leave
pop
pop
lret
out
add
scas
lods
inc
and
push
pushl
adc
aad
xor
add
add
je
dec
add
lock
pop
sbb
test
mov
ds
sahf
mov
std
lods
and
leave
dec
xlat
jl
scas
adc
inc
xchg
and
fwait
andb
sbb
pop
sub
aas
cmpsb
pop
add
imul
add
jnp
push
call
mov
ljmp
push
cld
add
data16
or
in
xor
xor
mov
xor
pop
adc
mov
mov
jp
and
mov
add
jle
pop
xchg
or
mov
push
fistps
jle
mov
insb
adc
daa
fidivl
mov
mov
fdivr
cmp
fmull
ss
add
mov
dec
lods
scas
popf
lds
rclb
pop
lcall
and
or
arpl
test
mov
sbb
push
xor
and
sub
cld
jo
test
sti
adc
int
cmc
sbb
cs
shlb
lea
sbb
js
inc
mov
sbb
fistpll
cmp
jl
jb
daa
aas
dec
jne
mov
cld
lods
popf
mov
xor
scas
pushw
xchg
push
jno
pop
mov
jg
testb
movsb
stos
push
mov
aaa
outsb
pop
mov
inc
ljmp
notb
nop
or
insl
inc
lret
fisttps
fcompl
fs
stos
lahf
fsub
push
push
pop
add
stos
push
fwait
je
cltd
sete
or
out
dec
repnz
bound
inc
repz
xchg
pop
push
bound
mov
inc
adc
mov
sbbb
sub
push
mov
jl
out
pop
jae
aad
jno
mov
out
jno
repz
jecxz
shrl
cmp
jmp
sub
mov
bound
cmp
inc
stos
es
iret
daa
push
outsb
pusha
mov
in
cmp
mov
mov
sbb
imul
xchg
and
mov
cmpsl
loopne
imul
std
scas
pop
imul
xchg
inc
mov
outsb
push
idiv
arpl
xor
dec
push
enter
nop
cmp
adc
or
and
es
pusha
bound
jle
rcr
fwait
ljmp
rorl
jle
pushf
fnsave
or
push
sbb
push
mov
xchg
outsb
mov
mov
mov
sub
mov
stos
pop
add
popf
imul
sbb
sbb
inc
ret
ret
out
sbb
inc
shrb
out
cmp
nop
dec
js
jle
ret
sub
pop
addr16
push
addl
cli
mov
sub
cmp
or
push
aam
pop
int
inc
add
inc
and
lret
adc
pop
repz
dec
pop
imulb
sbb
aad
cmp
jl
jns
hlt
inc
in
or
mov
add
and
push
mov
int3
inc
ds
js
rcrb
pop
imul
cmp
jae
sub
pop
dec
add
mov
insl
mov
imul
loope
loope
jbe
pop
push
loope
shlb
xor
push
das
repz
push
xchg
adc
es
sbb
mov
mov
adc
jne
jg
rorl
pop
data16
xor
pop
out
sti
dec
push
mov
push
jbe
sbb
stos
insb
jecxz
adc
pop
ret
lcall
lret
xchg
fmulp
dec
pop
mov
mov
fs
popa
xchg
data16
in
pop
jno
std
xor
imul
sub
pop
xchg
mov
data16
scas
mov
sub
loop
test
xchg
cmpsl
cmpsb
mov
cltd
and
sti
mov
cli
dec
ds
jo
fildll
push
in
orl
ljmp
mov
xchg
ja
pop
mov
popl
inc
inc
sahf
inc
loop
in
lock
mov
cwtl
xorb
push
adc
pop
test
into
fdivr
dec
cmp
mov
ja
enter
mov
adc
mov
bound
iret
rorb
cmpsb
xor
push
ror
aad
or
outsl
popa
addr16
sbb
cmp
jecxz
fcmovnu
nop
je
popl
lahf
mov
lds
ja
subl
and
or
push
mov
movsb
scas
out
inc
mov
xor
xchg
pop
push
sbb
push
jecxz
lret
push
mov
lods
mov
sbb
out
fisttps
outsl
xor
mov
adc
dec
pop
push
xchg
adc
jp
cmp
sub
hlt
ret
push
in
and
lock
xlat
pop
fsubp
inc
test
fdivs
jecxz
movsl
in
mov
rcr
dec
lret
xchg
fsubrl
sahf
into
movsb
jmp
shl
inc
mov
pop
pop
xchg
jb
sub
xor
push
mov
imull
into
fs
push
pop
popf
mov
into
das
and
int3
testb
out
js
fildl
dec
loope
xor
fbstp
leave
mov
bound
sbb
mov
out
sahf
clc
cld
and
insb
sub
mov
sbb
in
adc
pop
cld
je
test
mov
fs
mov
mov
sbb
or
sbb
cmp
jb
mov
xchg
xchg
xchg
sbb
jmp
sub
add
sub
pop
mov
mov
ds
mov
inc
sub
into
adc
mov
xor
hlt
mov
jns
enter
stos
mov
mov
shll
sbb
pushf
lds
push
mov
cwtl
movsl
xor
jbe
addb
jno
cwtl
xor
in
jl
jge
popf
js
bound
mov
dec
pop
ret
jecxz
and
push
pextrw
sahf
cmp
mov
and
rcr
cmp
push
pop
xor
in
inc
mov
push
cmc
arpl
mov
push
dec
shll
or
ret
xlat
mov
adc
xchg
sub
sahf
nop
out
in
mov
jmp
jmp
push
cmp
das
mov
mov
fs
adc
ss
jmp
arpl
std
fistl
into
je
sbb
imul
mov
xrelease
mov
jo
scas
jno
cmp
ja
inc
shrb
pmulhw
push
pop
adc
dec
fdivrp
cs
rclb
mov
ja
js
jo
xchg
je
fisubl
sub
out
in
hlt
inc
mov
inc
push
mov
push
pop
fisubs
mov
xchg
pusha
ret
pusha
pop
pop
push
mov
jo
sbbb
ja
in
imul
pop
out
mov
rcrl
nop
pop
jecxz
sub
jmp
mov
dec
faddl
hlt
insb
pop
pop
xchg
ss
fists
cs
jns
shrl
addr16
mov
push
jl
pushf
push
sbb
push
jge
jo
cmp
in
cmp
adc
inc
push
aam
sub
sahf
jecxz
fstpl
rcrl
mov
pop
ret
push
fadds
and
or
bnd
daa
into
inc
out
dec
xor
sub
in
hlt
loop
mov
inc
aas
inc
stc
aad
pop
repz
jo
and
mov
sti
iret
or
addl
push
aad
shrl
xchg
push
cmp
scas
dec
xchg
mov
in
xor
lods
push
adc
fsub
insb
sbb
pop
adc
inc
aam
imul
push
in
push
jnp
sarl
out
pop
cli
xor
xor
mov
inc
mov
jae
push
jmp
cmp
push
mov
push
pop
xor
add
dec
xor
cld
xor
js
in
in
mov
mov
sbb
xor
adc
cmp
ljmp
pop
dec
cmp
jl
lahf
jnp
xchg
fwait
rcl
sbb
jl
jle
pop
vcvtss2si
repnz
cmp
fdivs
mov
inc
mov
js
aaa
dec
adc
mov
adc
pusha
data16
addr16
adcb
push
pusha
outsb
lock
lods
test
xchg
mov
call
sbb
xchg
int
add
arpl
imulb
je
into
mov
inc
adc
inc
mov
xchg
out
cmp
jmp
loop
sbb
mov
scas
mov
inc
nop
push
inc
inc
lret
mov
out
stos
xlat
add
or
loope
and
sti
and
sbb
es
loope
sub
inc
mov
pop
adc
je
cmp
aad
sahf
mov
loopne
loop
inc
xchg
cmc
iret
stos
inc
push
call
push
cmc
in
mov
hlt
mov
xchg
stos
ficoms
jmp
notb
in
imul
push
ss
push
je
push
roll
test
subl
std
outsb
xchg
mov
mov
sub
adc
and
notb
sub
push
nop
mov
or
lods
imul
add
jg
push
pop
lret
lea
sub
rorl
mov
xor
lds
movsb
push
bound
nop
js
test
loope
push
in
jb
sub
rclb
insb
clc
cwtl
jmp
xchg
sbb
mov
pop
ret
and
in
dec
clc
xor
cmp
pop
dec
cmp
cld
and
mov
addr16
pop
in
sahf
push
cmp
mov
lahf
cwtl
mov
je
inc
dec
rcrb
sub
lods
jge
adc
lea
test
inc
fldt
out
inc
leave
pop
iret
ds
inc
aas
je
mov
adc
gs
jl
iret
xchg
adc
or
add
mov
xlat
sub
fisubrl
mov
mov
in
fsubrs
mov
add
mov
and
xchg
cmp
cmc
jp
sub
adc
add
nop
or
outsl
inc
scas
jbe
js
fsub
loopne
ljmp
push
lret
or
sti
out
inc
mov
daa
ret
pop
hlt
adc
pop
mov
aam
cmp
or
jge
test
lahf
cld
push
outsb
test
push
sub
inc
xor
fwait
jno
daa
outsb
in
loope
push
int3
test
cwtl
push
or
lea
bound
jg
sub
pop
xor
pop
lret
call
mov
mov
jp
clc
sub
xchg
popf
in
xor
dec
movsb
cmp
xchg
jmp
dec
int3
lret
in
dec
push
addr16
mov
dec
xchg
clc
gs
dec
pop
pop
xor
cwtl
xchg
call
push
pop
outsl
cmp
leave
loope
gs
into
mov
dec
outsl
out
pop
lret
pop
cmp
jb
pop
fstps
pop
sub
xchg
jne
push
xchg
fs
fwait
sub
call
jae
mov
push
fildl
jne
mov
fwait
testl
and
cmp
fmul
repnz
sbb
inc
add
inc
test
cmp
jmp
jge
adc
ffreep
jp
dec
fisubrs
push
aam
adc
stos
outsb
jo
inc
adc
dec
or
popa
or
dec
pop
mov
jl
push
cmp
xor
lret
and
push
jmp
xchg
popa
xor
sub
in
xor
cmp
lock
jg
pop
cmpsb
mov
inc
rcrb
sub
gs
push
test
mov
sarb
add
loop
sbb
hlt
imul
or
cmp
fnstcw
jmp
mov
sarl
mov
cmpsl
icebp
sub
sub
cmp
mov
mov
ret
inc
cmp
rcrb
repz
push
sti
icebp
cmp
out
pop
shl
scas
pop
hlt
cltd
pushf
adc
xor
out
fsubs
lds
movsb
jecxz
jbe
scas
xorl
push
pushf
dec
pop
stos
sub
into
daa
push
push
cmp
loope
inc
jle
jbe
push
lods
outsb
mov
pop
push
pop
sahf
daa
push
adc
dec
in
fists
jmp
add
sub
outsl
scas
test
fistps
int3
cmp
jno
loope
popf
sti
dec
scas
and
xor
adc
gs
pusha
test
mov
and
hlt
flds
pop
adc
dec
in
in
sti
and
add
jns
jmp
cmpsl
pusha
cmp
jl
fcompl
sub
out
inc
mov
les
fs
pop
leave
push
cmpsb
fwait
mov
or
test
mov
popf
ret
loopne
and
je
cmp
jecxz
repnz
dec
sub
lcall
stos
scas
jnp
cmp
push
jno
pop
xchg
repz
add
jo
mov
jl
sub
add
insl
or
xchg
cmp
or
add
dec
sti
push
lret
insl
fstps
scas
clc
add
scas
out
cld
cmp
push
mul
sti
fwait
dec
adc
stc
addr16
out
out
or
addr16
jo
ret
jno
insb
sub
fs
push
stos
lods
inc
add
xchg
jne
int
push
ja
loop
bound
stos
or
pop
adc
shrl
nop
mov
mov
or
mov
movsb
testb
stos
icebp
adc
outsl
in
inc
lods
xlat
mov
clc
int3
add
jle
xchg
int3
stc
dec
pop
jecxz
shll
cmp
lods
rclb
jae
mov
mov
fwait
dec
pop
mov
cmp
int
cwtl
adc
jo
fwait
lea
in
rorl
cmp
pop
jo
jb
dec
mov
adc
into
test
outsb
cs
das
bound
push
movsb
pop
test
dec
sbb
std
inc
add
aas
mov
sub
xchg
sbb
jae
icebp
push
call
mov
cmc
sbb
in
out
xor
sub
pushf
adc
push
notl
and
and
sbb
ja
icebp
ja
dec
jecxz
or
inc
mov
jge
mov
inc
adc
push
mov
into
loope
inc
test
and
mov
jns
push
inc
cli
ss
xlat
fisubl
xchg
imul
je
mov
xchg
mov
aaa
test
popa
aas
mov
push
adc
inc
mull
js
xor
ljmp
sti
or
js
mov
ds
mov
mov
mov
inc
lods
jg
pop
xor
fisttpl
sti
push
cmpsb
mov
and
pop
adc
ds
xlat
pop
cmpsb
call
xor
dec
xchg
addb
sbb
mov
dec
dec
or
mov
mov
and
mov
xlat
in
mov
out
dec
clc
push
add
mov
cmp
mov
cmp
loope
mov
jo
and
out
enterw
into
lret
xor
sub
push
cmpsb
mov
jmp
cmc
pop
test
inc
sbb
pop
scas
mov
fidivrl
imul
fwait
ror
arpl
push
cmp
mov
les
inc
pop
adc
ficomps
push
add
cld
insb
call
or
in
out
fcomi
adc
inc
je
xchg
sbb
add
pop
mov
push
addr16
imul
je,pt
mov
stos
push
and
lea
cltd
jns
aas
mov
lcall
fcoms
adc
xor
fucomip
xorb
mov
jo
push
mov
into
out
js
jp
add
lea
push
pusha
push
jae
lret
movsb
out
sub
jae
lods
jnp
inc
ja
or
filds
in
dec
ret
jecxz
loope
xchg
push
push
jno
add
or
cwtl
adc
mov
imul
xchg
jecxz
je
jo
lods
inc
fidivl
icebp
ja
pop
mov
stos
pop
mov
xchg
test
sub
lret
int
int3
pop
sub
ljmp
jns
test
aam
mov
aam
lds
ljmp
dec
jns
mov
xor
sbb
add
mov
sbbb
js
add
shrl
std
mov
mov
sti
dec
scas
jp
sbb
mov
iret
add
enter
gs
pop
int3
inc
out
jb
pop
out
adc
jbe
dec
sbb
sti
mov
and
dec
cmpsl
daa
mov
arpl
sub
mov
adc
imul
or
test
xchg
sti
daa
push
cmp
in
lods
cmp
out
sbb
repz
into
and
mov
fwait
stos
outsb
adc
jb
fadds
sahf
ja,pt
pop
enter
rep
cmc
jns
adc
mov
aam
popf
mov
cld
fidivl
aas
and
dec
dec
mov
gs
jle
mov
or
sub
adc
lret
pop
call
repz
xor
lret
xchg
adc
ss
mov
mov
addl
fnstcw
shlb
js
jb
sti
push
mov
dec
mov
xchg
cmp
imul
mov
mov
push
iret
sbb
fists
jno
push
mov
pop
sarb
push
pop
and
outsl
pusha
fldenv
js
imul
push
jb
xchg
sbb
scas
and
clc
cwtl
cmp
cwtl
dec
add
into
inc
sbbl
rcrl
movsb
in
and
das
stos
xchg
sbb
sahf
jle
dec
push
push
in
nop
pop
inc
ror
mov
test
cwtl
ret
outsl
mov
push
and
daa
test
sub
xorb
enter
mov
hlt
or
push
cld
pop
fisttps
test
in
fcomps
loope
cmp
icebp
mov
loopne
das
mov
jno
jns
fimull
pop
sbb
xor
repnz
and
xlat
gs
mov
inc
arpl
rcrl
ret
nop
xchg
mov
adc
xchg
or
hlt
ds
xor
push
icebp
jge
pop
mov
push
sbb
mov
jae
loop
sahf
push
es
mov
adc
insb
hlt
lods
push
ljmp
cmp
das
out
or
repnz
lods
mov
mov
sbb
jle
ss
inc
xor
dec
xor
dec
dec
xorl
inc
mov
aas
inc
jmp
fstpl
int3
add
jne
add
jecxz
push
push
js
test
adc
and
sahf
mov
dec
mov
ret
popa
cmp
lcall
roll
lea
call
push
mov
jp
in
push
lods
or
insb
mov
xchg
cltd
leave
or
enter
mov
push
fcmovu
fstl
mov
mov
mov
inc
jle
jae
lar
fimuls
repnz
adcb
cmp
xor
fistpl
and
mov
aam
mov
inc
jmp
mov
mov
jp
out
mov
into
mov
ljmp
push
jecxz
fistl
in
mov
in
icebp
int3
pop
repnz
outsl
incl
cmc
clc
sub
dec
sub
mov
call
jae
jp
aas
pop
outsl
scas
lods
fistpl
stos
xor
insl
and
inc
pop
fs
xlat
clc
scas
lds
ret
dec
bound
movsb
bound
dec
rcl
jne
aad
mov
and
jns
mov
add
cmpsl
mov
cltd
clc
sbb
pop
push
xchg
pusha
jns
xchg
pop
fdivs
stos
ss
hlt
andb
into
push
test
adc
sbb
dec
cwtl
out
jp
inc
bound
mov
mov
lea
jge
mov
mov
popa
lds
call
enter
xchg
enter
imul
pushf
add
mov
pop
mov
and
pop
jns
xor
adc
xor
sub
push
xor
dec
int
jbe
sti
dec
xor
jae
mov
dec
dec
or
adc
mov
sbb
enter
sub
popa
insb
cli
mov
lahf
repnz
xor
fstl
filds
jo
mov
cmp
mov
lods
fmuls
ljmp
sub
or
jae
mov
in
stc
notl
bound
pop
xor
lret
sti
arpl
inc
das
aad
test
subb
jmp
push
push
mulb
inc
xor
repz
jo
lahf
repnz
jnp
push
cmp
sbb
jno
call
ret
xor
aam
fs
fst
cmpsl
je
dec
push
ja
xor
dec
cmp
nop
mov
jne
xchg
cld
std
cmpb
mov
sbb
ds
sbb
push
mov
pop
push
orb
sbbb
data16
fcoml
push
mov
or
sbb
adcl
mov
adc
fidivl
add
pop
pop
jbe
call
leave
subl
mov
and
arpl
cmp
das
subb
inc
test
ret
fldt
xchg
mov
mov
mov
mov
les
mov
lret
iret
and
divl
sbb
shlb
mov
test
rsm
inc
pop
jmp
cmp
cmpsb
cmp
jecxz
popf
mov
mov
push
popf
and
repnz
cmp
add
inc
push
icebp
repz
xchg
push
mov
das
cmpsb
jl
pop
mov
add
add
cltd
stos
mov
test
stc
adc
mov
ja
mov
je
and
movsb
inc
arpl
sbb
dec
adc
sbb
cli
push
lods
xchg
addl
ljmp
dec
frstor
xor
jle
add
pop
call
dec
jl
fistl
push
out
jno
je
bnd
adc
movsl
in
adc
xchg
stos
ror
push
aam
mov
mov
into
mov
pop
jbe
push
lock
dec
testl
rcl
aam
cmp
inc
sbb
cmp
push
adc
aam
jno
pop
sahf
add
jl
sbb
stc
fdivrl
popf
aam
faddl
dec
leave
pop
sub
sbb
inc
xchg
inc
inc
xchg
or
push
cmp
lcall
inc
cli
and
pop
xchg
adc
pop
mov
mov
and
iret
fsubrl
cmp
mov
in
mov
adc
data16
mov
or
dec
jmp
out
cmp
pop
push
mov
pop
or
push
inc
xor
mov
movsl
or
iret
mov
cld
js
pop
repz
push
out
mov
movl
stos
and
jge
into
test
fildll
mov
xchg
cmp
xchg
sbb
xor
or
imul
jge
push
sahf
pop
and
movsl
test
ret
addl
xchg
inc
and
imulb
cmp
mov
xchg
push
sub
loop
or
popa
mov
mov
sbb
mov
mov
aad
mov
push
mov
sarl
xor
sbbb
loop
inc
xchg
jb
push
push
jmp
ss
mov
inc
adc
cwtl
mov
mov
cmp
in
lods
sbbl
in
jge
inc
scas
mov
filds
xor
sbb
push
jge
mov
pusha
add
fiadds
mov
out
imulb
xchg
xchg
sub
sbb
xchg
mov
fcompl
and
push
adc
cli
and
mov
inc
mov
mov
aaa
xor
cltd
ja
dec
je
inc
jb
mov
and
aam
dec
push
pusha
xor
mov
lret
xchg
mov
pop
lahf
mov
cmp
xchg
cmp
stc
add
push
in
inc
mov
in
out
in
sti
or
mov
add
movsb
mov
rcrb
js
mov
push
ret
daa
xor
mov
dec
lods
insl
aam
dec
ja
jbe
xor
fnstcw
or
xchg
sub
ret
add
int3
shufps
mov
pop
push
pushf
or
or
je
jnp
add
cmpsb
inc
xor
loope
inc
push
pop
add
loopne
sbb
mov
inc
lea
add
mov
jge
add
xchg
inc
movq
out
es
idiv
pop
mov
xchg
dec
std
test
and
movsl
add
int
cmp
mov
sub
fwait
or
sub
ret
xchg
jmp
lods
testl
inc
ficoms
cltd
out
and
jg
push
dec
lds
test
mov
adc
cmc
cmp
stos
ss
aad
shr
out
sbb
imulb
add
cwtl
idivl
add
lods
add
sbb
dec
imul
dec
pop
push
xor
mov
inc
dec
stc
js
xor
xor
repz
cmpb
out
loop
cmp
jg
jnp
cld
xchg
test
sub
inc
test
and
xor
cmp
dec
mov
stc
add
jnp
lret
rcrl
sbb
lea
push
sub
movsl
out
jnp
dec
je
push
inc
in
xor
aas
sbb
int3
lods
addb
and
jne
fbstp
jp
ja
into
inc
or
pop
sar
pop
int3
fistpll
and
cmp
or
int
xlat
dec
mov
cmp
lahf
iret
xor
jecxz
cli
aas
fwait
mov
and
cwtl
jge
jl
xchg
shl
fs
fistl
jnp
cmp
mov
adc
push
hlt
xchg
data16
mov
insb
in
sub
lret
into
jne
push
cmc
inc
mov
or
cmp
into
cmp
mov
dec
adc
xchg
fistpl
aam
mov
xchg
sub
mov
lcall
mov
pop
lcall
mov
std
sub
sarb
mov
mov
jno
and
jl,pn
adc
add
out
fsubr
push
jecxz
jo
cmpsb
push
sbb
adc
in
xchg
insb
xor
fmull
mov
aas
sbb
xchg
loope
ret
mov
loopne
rclb
adc
lock
adc
enter
sbb
leave
or
push
jne
and
pop
push
sub
jmp
stc
ja
push
dec
sub
pop
adc
xchg
mov
jmp
mov
and
repz
add
push
sub
mov
pushf
add
mov
test
orb
test
in
push
inc
and
shll
adc
int3
or
int3
inc
mov
pop
pusha
sub
pop
push
dec
xchg
xchg
jmp
rcrb
aas
dec
push
add
sti
jmp
cld
jp
adc
xchg
sbb
in
pop
push
mov
jg
cmp
xchg
sub
test
lahf
mov
inc
push
nop
icebp
adc
jnp
popa
outsb
cmp
inc
push
adc
loopne
mov
adc
cmpsl
or
or
pop
sub
test
or
or
lret
push
inc
dec
cli
dec
add
sub
sahf
pop
mov
mov
add
jnp
xor
cmp
sahf
cmp
idivb
jmp
cmc
add
movsb
jo
or
lea
scas
js
sahf
popf
xchg
stos
xchg
and
in
jno
imul
pop
dec
push
adc
mov
in
jns
arpl
bound
fwait
cmp
loope
jb
andb
mov
repz
jbe
fadds
jle
mov
lret
shlb
push
mov
cmp
arpl
push
test
add
and
pop
xor
dec
in
mov
adc
popa
mov
xchg
push
and
inc
cmp
shr
adc
lcall
pop
mov
and
mov
push
xor
ret
dec
rcrl
aad
aad
cmpsb
movsl
adc
cmpsb
inc
call
pop
std
add
or
fnstenv
sub
xchg
pop
or
data16
rolb
mov
lret
fyl2x
xor
fldl
mov
pop
stos
sbb
test
dec
mov
data16
inc
imul
test
lods
dec
or
lahf
popf
out
xchg
dec
decb
outsl
cwtl
xor
int3
dec
inc
insb
inc
inc
and
mov
aad
test
jae
jg
add
xor
popf
xor
ja
pop
xchg
jmp
mov
lret
mov
pop
daa
lret
inc
pop
cwtl
mov
mov
adc
jp
ljmp
add
movsl
push
pop
pop
mov
mov
dec
sar
pushf
mov
clc
adc
scas
test
jle
cli
push
push
fbstp
incb
pop
fs
xor
test
lret
fsubs
jb
adc
cmc
imul
sbb
inc
iret
push
test
outsl
jae
sbb
mov
fisubl
add
mov
push
pop
pop
cli
add
aad
in
jg
xor
stc
pop
push
movsl
in
push
loope
mov
xor
lds
rcrl
out
lock
and
daa
ret
lods
pop
add
push
fnstsw
aad
repz
mov
xchg
loopne
xor
fmul
push
nop
push
mov
jbe
int3
fwait
push
mov
gs
adc
test
mov
outsb
stc
mov
pop
mov
sarb
mov
addr16
and
xor
jb
dec
mov
push
push
mov
loope
cmp
push
dec
jnp
xchg
mov
rcl
push
in
mov
xor
mov
into
mov
xor
add
add
out
mov
cmp
mov
int3
dec
aam
lods
sbb
mov
stos
insb
inc
out
faddl
insl
mov
scas
push
std
test
mov
int
mov
cmpl
cmovp
decb
pop
mov
mov
testl
enter
sbb
les
pushf
xorb
dec
pop
scas
or
int
xor
or
jne
sbb
fildl
ljmp
jl
int3
mov
xchg
mov
fwait
inc
jge
movsb
or
je
aaa
mov
rol
cwtl
and
scas
or
in
fadd
mov
insl
out
cmp
dec
jne
inc
pop
int3
jb
scas
inc
adc
add
daa
or
xchg
stos
dec
or
fld
popf
stos
scas
fisubl
mov
pop
mov
iret
sti
roll
cwtl
insb
push
add
add
push
add
dec
pushf
movsl
jl
outsb
cmpsl
adc
pop
jg
fcompl
rorl
dec
shlb
mov
xchg
mov
cmp
mov
inc
mov
mov
fstps
mov
pop
xchg
shll
or
addr16
das
pushf
stos
pop
mov
pop
lock
cmp
inc
jo
push
faddl
fmulp
cmpsl
incl
lcall
push
fimull
pop
call
ss
mov
cmpsl
mov
sbb
xor
popa
inc
push
rorb
push
cmp
movsl
sub
or
loop
push
pop
clc
dec
adc
jle
repz
in
loope
outsl
ds
jmp
inc
cmpsb
add
movsl
orb
mov
sub
mov
or
iret
mov
daa
scas
mov
sbb
insl
mov
outsb
into
in
xchg
popf
xlat
and
push
ror
and
pop
lods
or
ret
jmp
push
je
or
gs
ret
pop
inc
push
mov
xor
nop
mov
add
int
popa
ljmp
sbb
cmp
cs
daa
mov
out
shll
mov
mov
xchg
xor
jbe
dec
add
xchg
adc
pop
aaa
daa
inc
sbb
in
jle
push
or
cld
push
mov
out
jle
shll
mov
cmp
xchg
sbb
xchg
xchg
ds
mov
ret
mov
adc
repz
mov
or
push
xchg
cmp
sbb
dec
stos
add
adc
push
mov
lahf
loope
mov
imul
jb
sahf
sbb
inc
inc
fnstsw
insb
clc
push
mov
mov
lods
insb
add
or
xchg
imul
adc
xor
popf
jg
mov
imul
sub
imul
sub
out
mov
lret
shrl
xchg
xor
int
and
test
ffreep
push
jmp
movsl
and
mov
or
jl
xchg
push
addb
fildll
lock
add
in
sarl
and
jne
gs
xchg
ja
cs
push
scas
sbb
in
push
dec
add
mov
mov
ret
adc
mov
xor
jmp
fcompl
cmc
pop
push
sbb
movsb
dec
and
push
hlt
std
lret
add
jo
sahf
push
cmp
fsubrp
push
aaa
mov
lahf
jbe
pusha
xchg
mov
inc
test
into
add
pop
cld
xor
dec
sahf
add
imul
xor
mov
and
mov
dec
cli
push
jge
jl
out
addr16
sbb
mov
add
jecxz
mov
push
test
loopne
aam
inc
dec
pop
icebp
push
jmp
popf
loop
mov
test
ljmp
les
adc
dec
add
jmp
cltd
arpl
push
sbb
push
out
arpl
sar
mov
sub
pop
mov
push
sub
imul
add
movsb
in
xor
outsb
gs
nop
aad
insb
frstor
movsl
out
sarw
cli
test
pusha
ja
push
int3
cmp
mov
stos
xchg
sbb
es
movsb
adc
xor
pop
test
insb
bnd
cmp
cmc
mov
sbb
xor
mov
sbb
push
mov
adc
scas
sti
cli
dec
sub
jns
fwait
jmp
in
icebp
scas
xor
adc
mov
dec
inc
ljmp
push
xchg
sti
jp
pushf
rorb
lock
outsl
pop
jne
imul
xlat
std
aas
outsb
in
sub
out
negb
daa
mov
mov
test
add
es
push
in
ds
ficoml
insb
mov
xor
je
lods
push
mov
adc
or
je
mov
jne
mov
popa
nop
cmc
fldt
sti
xor
pop
pop
sbb
mov
xor
cmp
sub
pushf
mov
outsb
jmp
sarl
adc
inc
clc
sbb
or
inc
push
inc
pop
push
hlt
faddp
dec
rclb
jmp
je
pop
stos
or
or
std
imul
gs
push
add
leave
mov
xor
adc
mov
js
push
mov
dec
popa
imul
mov
in
cmc
fwait
adc
jnp
mov
fbstp
fwait
xor
mov
or
adc
push
dec
mov
inc
cmc
dec
sub
mov
shll
sbb
push
loop
dec
and
imul
mov
pop
loopne
clc
ficompl
jns
mov
outsb
enter
push
jne
popf
js
insl
cmp
jg
lret
xchg
outsl
jg
pusha
push
insb
call
adc
inc
bound
out
std
pop
rcrl
push
mov
mov
in
mov
and
ds
pop
out
dec
ss
hlt
jo
push
mov
fdivr
pop
push
dec
adc
fs
add
mov
mov
push
into
push
adc
mov
orl
aaa
addb
jne
xchg
mov
lret
adc
dec
fisubs
scas
mov
mov
jp
mov
lods
dec
lcall
adcb
test
lcall
cmp
mov
imul
movsl
xchg
push
xchg
jnp
add
jnp
xchg
jecxz
fcoml
push
jne
jp
popf
jo
xor
mov
shll
inc
int
imul
rolb
mov
add
cmp
iret
dec
imul
push
jae
jns
divb
clc
aaa
push
into
cli
dec
jecxz
push
je
xor
lret
pop
enter
pop
xor
pusha
test
or
test
cmp
sub
adc
pop
data16
shlb
add
pop
dec
mov
push
push
fdivrp
push
sbb
mov
push
xchg
sbb
std
mov
fimuls
pop
adc
scas
mov
mov
out
push
dec
inc
jg
rorb
aad
aas
dec
jb
xchg
sub
in
push
sbb
and
xabort
pop
outsb
push
test
outsb
outsb
mov
sti
lcall
int
push
inc
sbb
call
mov
cs
dec
fistps
cmpsl
mov
add
mov
imulb
pop
xor
into
clc
loope
sub
inc
gs
into
mov
sub
dec
ja
stos
mov
bound
pop
sub
loopne
fsubl
xchg
je
dec
incl
outsl
add
jp
pop
fwait
mov
mov
pop
sub
nop
shrb
and
imul
pop
fistps
dec
fs
std
inc
push
cmp
mov
arpl
fcmovbe
stos
push
mov
loope
sub
out
inc
xchg
je
or
push
xchg
movsb
mov
and
push
jp
in
sub
push
cmp
jge
testl
call
test
or
add
jge
dec
lods
incb
jno
pop
sbb
ds
mov
movsb
lcall
xchg
push
leave
sbb
popl
pop
push
xchg
lahf
xor
cmc
pshufw
loop
into
adc
xchg
add
aaa
mov
jbe
pop
loop
fsubl
cmp
scas
insb
rorb
or
loop,pn
sbb
lds
dec
and
cli
sti
adc
pop
lahf
aam
mov
mov
add
imul
iret
add
stos
loopne
lret
cmpsl
loope
andl
dec
mov
test
inc
jmp
in
in
dec
or
pushf
daa
sbbb
jp
and
xchg
lds
inc
test
pop
pop
and
rol
and
in
add
mov
insb
sar
in
pop
repnz
cmp
lret
pop
std
addb
fwait
mov
cmp
hlt
cs
cmpsl
adc
mov
repnz
mov
pop
xchg
pop
and
mov
testl
and
ret
stos
repnz
cmp
mov
mov
push
aad
push
dec
xchg
mov
inc
push
in
fwait
mov
cmp
dec
lret
adc
nop
mov
mov
push
cld
in
imul
sub
cmpsb
lahf
jne
addb
cmpsl
ficomps
and
lret
dec
dec
xor
sbb
and
pop
xor
rcll
divb
rcrl
cmc
inc
fcomps
dec
jecxz
js
adc
clc
fwait
ds
jp
pop
jno
and
rol
xor
sbb
jmp
loope
shll
and
std
mov
mov
insb
mov
jno
inc
jp
add
iret
add
or
stc
test
jmp
xchg
enter
icebp
xor
ljmp
cmp
add
jecxz
jmp
push
loop
or
cmp
or
sub
mov
mov
adc
leave
les
gs
and
fisttpll
sbb
sbb
cmp
pop
pop
mov
add
stos
jl
lcall
lcall
ror
mov
push
mov
fsubrs
jb
mov
xchg
imul
mov
xchg
scas
shrb
dec
sbb
ret
cmp
gs
xor
popf
mov
dec
xchg
xchg
in
mov
mov
jecxz
rcll
insb
mov
clc
aaa
mov
mov
sbb
xlat
xor
pop
imul
mov
mov
dec
test
lock
inc
mov
stos
leave
stc
repz
cs
jl
fcmovnu
fisttps
xor
loop
imulb
int3
icebp
incl
sbb
inc
mov
mov
enter
dec
fldt
inc
and
mov
cmpsb
jecxz
xchg
lock
jl
dec
and
int3
mov
push
fists
mov
test
xchg
push
fcomps
testl
cmpsb
cs
jne
xchg
faddl
cs
pop
push
xor
out
push
jmp
jno
jmp
dec
push
xchg
inc
and
inc
jecxz
rcr
lret
into
push
iret
push
in
stos
adc
test
cmpsb
pop
rcrb
push
cmp
cmpsl
daa
loop
cmpsb
ret
and
sub
sub
inc
shl
test
jno
sub
bound
push
mov
mov
cmp
bound
fimuls
ljmp
sub
push
cmp
mov
pop
ret
cld
decb
inc
cmp
ja
stos
fst
add
adc
lahf
push
jmp
ret
neg
mov
aam
shll
mov
pop
inc
mov
mov
loopne
push
inc
pushl
dec
aaa
xchg
push
push
cmp
outsb
mov
adc
aad
sub
shl
in
stos
xchg
push
popa
inc
cmp
out
out
test
ljmp
fs
cmp
fcompl
mov
sub
or
xor
orb
pushf
jle
lea
sub
pusha
push
stos
lret
in
cmp
sub
add
or
std
inc
mov
inc
roll
jo
pusha
scas
in
je
popa
jp
les
sub
xor
or
out
adc
pop
ss
dec
imul
or
data16
xchg
iret
mov
in
jno
fbld
test
ret
push
shll
xorb
out
out
pop
in
mov
adc
jle
lret
sub
cmpsb
call
pop
cmp
pop
je
pop
popf
push
mov
sahf
xchg
rorl
cmpb
push
sub
cmpsl
in
and
mov
xor
cmc
dec
outsl
and
push
xor
fs
xchg
sahf
jo
in
das
xchg
jbe
enter
xchg
sbb
mov
iret
pop
call
repnz
push
sub
bound
dec
sti
ds
orl
push
inc
ja
pop
lds
add
and
popf
dec
sti
pop
in
into
negb
out
shr
mov
lret
inc
dec
iret
mov
ss
aad
or
mov
repz
jne
faddp
pop
adc
pop
stos
mov
mov
data16
xor
add
xchg
xlat
adc
cmpsl
cmp
idivl
push
insb
mov
xor
imul
test
ds
repz
pusha
or
retw
cld
mov
sbb
fnstenv
push
cmp
cltd
in
push
cmc
loop
out
iret
add
repz
and
mov
cmp
mov
xchg
xor
push
mov
mov
inc
adc
push
xchg
or
adc
mov
sbb
scas
movsb
or
int
cmp
sahf
ljmp
cwtl
pop
xchg
ret
test
adc
pop
xchg
fildl
call
mov
adc
mov
add
cmp
xchg
repz
mov
out
pop
jb
in
xor
dec
sti
ljmp
xor
push
ss
xchg
dec
out
ficomps
loope
cld
mov
cmp
and
fs
popa
lahf
lods
mov
std
int3
adc
sbb
pop
push
imul
and
call
movl
jmp
mov
lahf
inc
movsl
rorb
mov
lahf
push
pop
mov
add
push
inc
xorl
xchg
in
stos
cmpl
sub
ss
leave
in
sbb
and
sbb
std
lock
mov
rorl
inc
sahf
aad
hlt
dec
loop
bound
leave
popa
xor
bound
call
mov
insb
mov
stc
imul
pop
xor
ret
mov
inc
dec
dec
shll
or
gs
push
xlat
incl
insl
xchg
mov
adc
add
jns
fldenv
xchg
movsb
ljmp
lods
inc
rcll
jecxz
outsb
lret
lds
cmpsb
jge
stos
fcompl
loop
in
mov
sbb
jmp
insb
inc
ja
mov
jbe
xor
insb
int
inc
and
dec
mov
into
mov
ja
jno
jno
sahf
lds
pop
adc
or
pushf
sahf
cmp
adc
or
xchg
pop
mov
nop
clc
push
pop
das
xchg
push
imul
outsb
cs
rcrl
and
jmp
shlb
and
out
jno
pop
xchg
addl
pusha
notl
lcall
mov
sub
subb
lods
mov
iret
inc
xchg
mov
scas
rcll
cmp
cmp
out
jo
mov
stos
jge
add
pop
sbbl
and
push
fcompl
xor
mov
leave
sysret
mov
ror
push
xchg
push
xchg
jmp
sbb
into
adc
jo
lret
lods
mov
arpl
leave
inc
xchg
filds
cmp
ss
cmc
add
insb
jae
xchg
cmp
mov
lcall
leave
out
xchg
or
dec
mov
mov
sub
push
or
mov
and
or
inc
pop
xor
popf
pop
jno
test
dec
pop
push
js
pushf
repnz
cltd
ret
sbb
fadd
pop
cmpsb
test
dec
int3
push
add
jle
mov
enter
dec
arpl
test
nop
cld
and
popl
arpl
out
ja
stos
jb
clc
popf
cmpsl
je
shr
inc
mov
mov
fisubrs
sbb
out
mov
lret
and
push
sub
cmp
sti
mov
mov
mov
or
xor
inc
adc
les
pop
das
aad
add
mov
mov
xor
fwait
lahf
fucom
jb
and
inc
mov
stos
gs
dec
push
int
push
jg
and
add
mov
lds
xor
inc
mov
mov
int3
add
or
mov
pop
mov
mov
sub
fstpl
shll
iret
adc
pop
pop
shrl
addl
and
adc
stos
fwait
mov
iret
cltd
rol
jmp
mov
addr16
xchg
fadds
mov
insl
rolb
push
inc
mov
xor
scas
mov
jg
sbb
cmp
pop
jl
or
fsubl
stos
mov
add
repz
mov
lea
ficoml
call
out
sbb
pop
cwtl
cmpsb
aaa
jb
inc
pusha
stc
cltd
icebp
xor
pop
xor
mov
aad
stos
iret
hlt
sbb
dec
movsb
mov
cmpsb
mov
jge
out
gs
ret
xorl
out
insl
adc
loopne
dec
mull
xchg
fistpll
test
add
rol
loop
add
fidivrl
aad
fdivs
ja
sbb
enter
jne
in
out
pop
mov
mov
add
cmp
fists
push
push
test
fwait
movsb
cltd
lock
mov
into
push
rclb
cltd
test
xchg
fistps
popa
sub
das
pusha
sub
dec
push
enter
xchg
aaa
adcb
adc
int3
sub
int3
fstl
aad
fwait
and
mov
sub
push
push
push
ss
and
scas
cli
add
ljmp
push
push
xor
push
xlat
jp
cs
or
mov
jge
les
or
fisubrs
lcall
stos
jmp
je
add
cmpsb
pop
sub
movq
or
cwtl
xchg
mov
scas
mov
mov
addr16
loop
stc
or
push
mov
roll
lea
arpl
loopne
sbb
movsb
cld
jnp
lods
xor
mov
loopne
push
lcall
mov
adc
dec
mov
cmp
push
pop
out
dec
es
mov
adc
shll
cmp
mov
daa
adc
std
mov
std
pop
enterw
adc
ds
sbb
mov
sub
lret
inc
int3
pop
jae
sti
sub
fucomip
rorl
inc
or
aam
pusha
push
aad
lret
std
xchg
cmp
sbb
mov
insb
lods
arpl
and
icebp
mov
push
add
aaa
pop
mov
push
sub
loopne
movsl
push
sbb
adc
loope
lds
xor
sarl
inc
fcoms
pusha
jns
rcrb
dec
addr16
shrl
inc
pop
jmp
adc
mov
cmp
cwtl
clc
loope
test
addr16
add
into
mov
fdivrs
popa
inc
call
ds
test
inc
push
fildl
out
inc
push
jle
js
int3
xchg
push
cmp
mov
fwait
xchg
mov
stos
xchg
pop
ljmp
call
cmp
test
cmpsb
fdivrl
or
or
in
push
cli
loop
es
or
fs
arpl
xchg
pop
xlat
mov
insl
psadbw
jb
notb
dec
fsubl
in
xor
add
cli
cmc
sbb
repz
push
scas
clc
das
cmpxchg
jmp
jns
int
and
push
cmovle
xor
pop
out
push
lods
ret
aad
mov
xchg
arpl
inc
mov
add
pushf
adc
xchg
cmp
iret
sbb
pop
aaa
mov
cmc
icebp
xor
mov
in
das
xor
loopne
cld
sti
xlat
aas
sub
dec
jp
pop
cwtl
ret
mov
jmp
xchg
jno
xchg
inc
call
shrb
xchg
adc
mov
mov
dec
and
aas
jecxz
xor
cltd
jle
adc
loop
pop
cli
call
add
pop
arpl
sbb
enter
icebp
inc
inc
add
cmpsl
mov
iret
into
add
push
scas
outsb
in
pop
push
mov
push
stos
adc
mov
pop
pop
jae
dec
pop
sahf
pop
add
pushf
cs
push
mov
sub
mov
jle
jnp
mov
mov
dec
dec
sbb
sbb
movsb
push
dec
pop
test
jb
xlat
dec
rorb
mov
pop
imul
cmp
sub
call
cmp
cmpsl
fcmovnbe
dec
cmp
ret
out
xchg
xchg
lds
mov
jno
aam
dec
insb
outsb
push
lret
xchg
in
xchg
inc
sbb
jns
movsl
and
push
add
xchg
nop
xor
mov
cmp
ficomps
lds
rcrb
mov
mov
xchg
jae
jg
test
pushl
or
cmp
popf
cmp
inc
lcall
mov
add
inc
test
out
mov
std
insb
push
mov
cmpsl
cmpsl
fdivrl
inc
outsl
ror
inc
gs
jmp
into
pop
andb
push
in
push
sarl
js
test
push
iret
mov
cmp
call
push
adc
pop
ljmp
fidivs
es
sub
xor
mov
dec
shr
lcall
sub
repz
mov
cmpsb
pop
ret
inc
adc
sbb
mov
aas
andl
add
xchg
fbld
icebp
lret
mov
mov
pop
sub
jle
inc
sbb
lcall
push
sub
fisubl
je
adc
mov
popa
lcall
inc
mov
enter
shl
or
sbb
mov
lcall
dec
pop
push
push
movsl
test
out
add
gs
add
movsb
mov
pop
iret
out
lods
jecxz
and
mov
push
shrl
popa
mov
cmp
int
sub
ficoml
dec
pop
jbe
test
jmp
adcl
shlb
mov
jno
imul
cltd
push
adc
data16
mov
add
and
orl
inc
xchg
or
popa
movsb
aas
inc
pop
push
sbb
mov
mov
adc
clc
ljmp
mov
pop
outsb
dec
pop
lcall
lock
repnz
jbe
adc
mov
aad
lock
mov
jle
mov
xor
out
stos
pop
mov
mov
bound
loopne
jmp
or
cmpsl
mov
ret
sbb
mov
inc
inc
jne
cmpsb
sbb
adc
outsl
vptestnmb
aad
push
loopne
fwait
daa
xor
int
jbe
pop
jne
dec
pop
lds
out
mov
lds
mov
test
sbb
stc
in
insl
lock
shl
dec
and
jg
xor
pop
nop
push
cmp
and
xor
sarb
shll
sub
dec
movsl
rolb
lods
movsb
dec
lret
push
xor
gs
imul
adc
sbb
dec
iret
push
xchg
xor
jb
mov
sbb
inc
or
adc
fsubl
inc
mov
pop
jl
imul
push
popf
sub
mov
in
addr16
popf
and
lock
sub
jae
bound
jp
js
popf
outsb
aas
and
pop
cmp
cmp
push
das
cmp
divb
sbb
cltd
inc
inc
inc
ret
mov
in
nop
xor
mov
inc
pop
in
push
add
mov
push
mov
xor
aas
into
adc
mov
push
test
and
mov
push
in
jo
in
mov
dec
imul
jmp
outsl
pop
and
add
fcoml
mov
addr16
aas
fsub
xor
inc
repnz
in
stos
push
fs
adc
into
fwait
adc
jno
shrl
insb
subl
inc
dec
cmp
das
movsb
lods
jnp
popf
sbb
adc
add
pop
xor
adc
jbe
pop
mov
ljmp
push
call
call
mov
xchg
filds
cmp
dec
and
and
mov
lcall
lea
hlt
xchg
mov
sub
push
aad
jle
movsl
mov
lea
les
imul
or
aas
xchg
call
sbb
xorb
mov
mov
jbe
dec
adc
frstor
cmp
xchg
lea
jge
leave
ss
imul
push
dec
in
and
sarb
outsb
jo
mov
cmp
loopne
jb
or
xadd
add
jns
ljmp
fnstcw
push
jne
xadd
aad
mov
lods
shlb
es
in
mov
jg
cmpsl
leave
jg
movsb
inc
mov
jo
dec
pop
orb
movb
mov
pop
mov
icebp
sarl
popa
fwait
mov
add
push
insb
bound
ss
and
sbb
dec
lcall
xchg
sub
pop
push
cmp
iret
sbb
insl
lods
out
popa
pop
sbb
xor
jbe
pop
xor
jb
stos
popa
cld
xchg
xchg
aam
dec
mov
into
je
hlt
dec
pushf
mov
mov
arpl
sbb
jge
dec
repz
pop
movsb
rorl
or
ret
add
test
sbbl
fnstenv
test
and
xchg
sub
adc
cmc
aaa
pop
mov
lds
mov
sub
pop
ljmp
push
mov
aaa
pop
add
out
pushf
inc
lds
mov
lret
push
and
and
lock
repnz
subl
mov
divl
sbb
imul
fs
sub
sub
mov
pop
push
rclb
add
mov
outsb
xacquire
scas
daa
jl
clc
clc
cmp
push
or
outsb
mov
fdivrp
add
pop
test
fisttps
lcall
xlat
cmp
push
in
sbb
lock
data16
pop
mov
cwtl
inc
insb
in
in
aaa
cld
in
jbe
jge
mov
addr16
int3
cmp
sub
test
dec
call
jl
xchg
inc
mov
hlt
cmc
dec
mov
lds
and
pop
jbe
out
ret
pushf
and
sub
mov
test
repz
subl
mov
nop
inc
je
pop
leave
cs
imull
inc
int
push
mov
inc
mov
fstpt
enter
pop
and
jmp
cmp
test
inc
or
pop
cltd
xor
add
sbb
add
xor
or
fistps
add
hlt
test
adc
add
outsl
ret
fs
sub
sbb
and
mov
cmp
pop
cli
or
shll
sub
jecxz
fwait
xchg
ds
push
test
xor
std
cwtl
mov
xor
in
jecxz
inc
sbb
xor
inc
insb
and
popa
mov
outsb
subl
fidivs
sub
lods
sbb
je
sahf
lds
jnp
repz
push
aas
and
roll
push
dec
pop
xchg
fwait
jb
lods
dec
or
into
insl
imul
fistpl
pushf
in
stos
jp
mov
cmovp
movsb
or
mov
bswap
dec
inc
pop
mov
cltd
loope
sub
jno
push
out
test
push
test
dec
sbb
push
adc
lods
imul
sbb
mul
mov
ret
std
loope
sbb
dec
in
xchg
lods
int3
mov
out
jb
mov
or
outsl
js
fisttps
call
aam
cltd
inc
test
out
ja
push
mov
mov
xchg
and
dec
mov
test
jno
rcll
mov
mov
mov
imul
loopne
into
and
jmp
arpl
mov
mov
lret
add
lret
iret
mov
cmp
test
mov
xlat
fs
test
cmp
imul
std
test
bound
pushf
mov
add
mov
pop
inc
out
mov
mov
adc
clc
add
aam
sub
lock
push
out
mov
mov
adcl
stos
scas
insl
cmp
scas
or
jl
xor
inc
movsl
sahf
mov
mov
mov
hlt
cmpsl
push
ss
sbb
cli
xor
scas
sbbl
aam
mov
imul
push
rcrl
cmp
std
lods
ret
cli
jp
jno
dec
jmp
cmp
cltd
fidivrl
add
add
cmp
mov
mov
pop
inc
mov
pop
mov
std
test
jo
inc
bound
inc
inc
mov
insb
push
or
and
sub
lahf
and
sub
int
sarl
out
inc
xchg
push
inc
mov
mov
insb
xchg
inc
mov
adcl
das
nop
or
jne
mov
data16
and
call
repz
ret
loopne
jg
clc
test
xchg
mov
cmp
xor
and
jns
aam
rorb
xor
xor
ja
xchg
js
adc
ljmp
syscall
clc
pop
imul
xlat
add
mov
pop
jnp
lahf
jmp
mov
fildll
test
std
fcmovbe
dec
rep
push
out
stc
mov
pop
lcall
add
addl
add
pushf
mov
mov
mov
or
mov
sub
jmp
gs
sbb
jp
sbbl
sarb
clc
sbb
test
in
push
and
jmp
mov
call
adc
outsb
dec
jbe
pop
in
inc
into
add
pop
nop
add
add
rolb
xor
adc
test
mov
sub
sub
lock
mov
ljmp
std
ficoml
adc
mov
mov
loop
xor
jnp
fucom
mov
xchg
shll
mov
sbb
xchg
ds
ds
and
xchg
int
push
test
insl
xchg
or
movb
out
fistpll
push
jnp
sarl
push
lea
adc
mov
and
mov
movsb
test
stc
jp
fsubrs
xchg
icebp
jns
cmpsl
subl
ss
popa
cmp
loop
jmp
in
sbb
push
xchg
sub
loop
ss
lock
sub
inc
cmp
jbe
js
mov
mov
push
lret
mov
int3
dec
xchg
movsl
push
and
aas
stos
inc
inc
dec
popf
scas
fistps
add
cmpsb
sub
inc
stos
sbb
xchg
cli
xor
jae
mov
femms
rolb
popa
mov
sbb
mov
ret
adc
out
fnstcw
in
xor
push
movsl
mov
mov
rcl
aad
insl
sbb
pop
dec
inc
sub
in
in
aam
je
sub
sahf
mov
xchg
ss
mov
sub
push
insl
adc
xchg
addb
inc
fsts
inc
sub
cld
dec
jecxz
dec
insb
xchg
xor
or
pushl
adc
stos
nop
cli
mov
push
repnz
ffree
shlb
cltd
add
pop
push
dec
xor
into
nopl
jo
adc
sbb
stos
insb
sbb
and
jmp
call
mov
aam
pop
inc
mov
cmpsb
std
sub
movsl
ret
or
clc
mov
sub
cmp
dec
pop
sahf
mov
xchg
push
push
aad
aad
push
add
xchg
fimuls
bound
pop
or
cmp
mov
cltd
aam
add
push
js
cltd
jnp
dec
push
cli
aam
xor
sbb
cmpsb
lret
cmp
aaa
mov
cmc
mov
mov
js
fisubl
or
push
mov
scas
div
or
or
xchg
dec
xor
lahf
dec
decl
repnz
adc
mov
movsl
fcmovu
cmp
add
xchg
xchg
adcb
jbe
mov
mov
push
sar
or
pushf
cs
ret
addr16
int3
mov
cmpsb
inc
push
rorl
and
lret
sub
into
popf
in
inc
arpl
fmuls
rcll
icebp
cli
pusha
pop
jmp
loop
add
out
outsb
lahf
sbb
xchg
mov
jae
sub
adc
loopne
jns
pop
mov
repz
into
cld
and
mov
jge
addr16
loop
es
cmp
mov
push
push
inc
pop
daa
repz
repz
cmpsb
test
nop
add
jecxz
test
lcall
xchg
xor
add
fwait
lea
or
pop
cmp
fsubp
je
cli
xchg
dec
sbb
xor
xchg
sti
mov
mov
or
fistps
inc
imul
cmp
jge
lcall
jne
stos
mov
mov
call
das
cmpsl
in
leave
ret
lea
jge
pop
xchg
pop
mov
loop
push
pop
pop
sbb
jb
stc
ret
jecxz
xor
sbb
sahf
clc
js
or
sub
sbb
push
inc
sbb
mov
jp
gs
push
mov
aam
sub
imul
stos
dec
inc
les
je
mov
mov
pop
cld
inc
leave
stc
cmc
fstl
pop
loopne
mov
add
popa
push
scas
dec
stc
andb
jbe
jl
xchg
inc
dec
inc
adc
fwait
cmpsl
arpl
daa
into
push
mov
lcall
cwtl
mov
sbb
int3
jmp
rcll
mov
insb
mov
out
stc
das
push
lods
dec
mul
scas
push
nop
cmpsb
mov
mov
adc
clc
inc
or
and
mov
mov
and
sub
fldt
inc
pop
sbb
xlat
sahf
sub
xor
inc
dec
pop
push
repnz
cmpsb
enter
push
pavgw
aaa
aam
and
cmc
pop
insl
subl
lock
dec
adc
pop
test
lods
xor
jle
dec
daa
and
or
das
test
sahf
dec
fldl
leave
push
ja
pop
push
cwtl
fsubrp
ss
add
dec
xchg
cmp
ja
repz
adcl
idivb
xlat
push
mov
movsb
jmp
lds
dec
ljmp
subl
mov
ja
negl
jmp
mov
outsb
cmp
imulb
rolb
pop
out
stos
xchg
dec
test
xor
fidivs
inc
mov
les
dec
test
mov
xorl
inc
std
leave
inc
push
roll
aaa
fchs
jmp
add
pushf
or
sbb
or
cltd
fimull
jae
or
call
push
sbb
dec
movl
or
repz
not
push
xchg
jne
pop
stos
cmp
mov
pop
out
out
cmpl
cltd
adc
lret
aad
into
mov
push
xor
sub
shrb
pop
sbb
adc
or
rclb
dec
jo
mov
rolb
xchg
jb
adc
jbe
jb
add
rclb
and
push
pusha
cmpsb
xchg
pop
xchg
sub
insb
push
jnp
xlat
inc
in
or
jo
push
outsl
xlat
inc
fisubrs
push
add
jns
gs
cltd
fists
jo
aaa
lret
mov
repnz
xor
mov
ss
xchg
mov
mov
lret
pop
loope
xor
ficoml
idivb
sbb
enter
or
repnz
pop
mov
loope
dec
xchg
xor
jmp
inc
ret
mov
mov
dec
fstl
ljmp
sbb
movb
sbb
xchg
test
mov
dec
lret
out
inc
adc
sub
jl
bound
pop
sub
push
or
bswap
fsubrp
cltd
sti
mov
mov
mov
inc
dec
jecxz
add
fnstsw
xor
mov
sub
add
sbb
mov
cli
fldcw
or
pop
int3
popa
andb
daa
adc
jnp
xor
les
pushf
lock
sti
in
pusha
aad
test
aam
nop
inc
cmp
mov
stos
lock
or
mov
fisubs
jns
icebp
imul
pop
cmpsl
in
aad
add
iret
mov
scas
xchg
jg
mov
out
addl
pop
lods
jae
dec
int
jne
mov
int
push
jp
dec
adc
sbb
mov
test
sub
sub
mov
mov
pop
adc
pop
xor
scas
bnd
ret
ret
fsubrs
ret
movsl
es
fstps
xchg
mov
push
jnp
out
mov
mov
pop
xor
movsb
or
mov
test
sub
nop
inc
mov
pop
pushf
fcom
mov
xor
loope
cmp
fimuls
loopne
dec
lods
stc
xor
out
ret
sub
test
daa
ret
push
test
mov
ds
vpshufd
jmp
xchg
push
cmpsb
aas
pop
dec
ljmp
leave
lahf
fwait
movsl
pop
lea
pop
pop
dec
mov
data16
adc
int
jg
int
jge
dec
pop
imul
lret
call
sbb
idivl
imul
int3
ret
rorb
movsb
cmc
add
jecxz
insl
mov
out
adc
outsb
out
jecxz
push
mov
inc
bound
inc
add
jne
cmp
sbb
dec
push
insl
negb
mov
inc
push
mov
pop
jne
inc
cmp
andb
sub
xchg
aas
pop
mov
imulb
inc
rep
int
dec
hlt
jp
ficomps
jg
lret
fs
and
leave
lea
int3
push
repnz
adc
xor
mov
mov
mov
cmp
aas
outsl
fwait
mulb
and
ds
imul
cmp
push
inc
adc
mov
inc
add
dec
jmp
inc
push
sbb
adc
pop
mov
mov
ds
jecxz
aam
mov
and
loop
cli
or
jmp
aas
mov
cmpsl
ljmp
pop
cmp
jae
pop
je
ficoml
sbbl
sub
fadds
push
nop
outsl
rol
jg
cmp
xor
outsw
in
or
push
add
jo
pop
pop
pop
popw
rolb
sbb
mov
das
add
push
mov
scas
mov
rorl
es
popl
dec
pop
push
fdecstp
push
push
and
call
mov
addr16
aam
inc
arpl
pop
xchg
jb
insl
cmp
or
cltd
loop
sar
jl
pop
stc
cld
mov
xor
pop
push
mov
js
adc
or
add
sbb
mov
mov
mov
dec
jo
xor
sbb
scas
stc
adc
or
add
test
dec
iret
mov
inc
xlat
or
mov
mov
cmp
rcll
xchg
xor
pop
xor
in
stc
popf
cwtl
mov
sub
mov
adc
fldl
jp
loopne
dec
loopne
push
fwait
pop
mov
dec
insb
xchg
fdivl
xorl
test
aad
add
xlat
orl
pop
fmul
pop
push
mov
leave
pop
jns
pop
xchg
ljmp
xor
sbb
xchg
into
mov
int3
and
push
push
sti
jecxz
push
sahf
in
sbb
jge
fisubs
jecxz
mov
pop
bnd
insl
push
popa
mov
lgs
push
rcrb
ja
add
imul
jbe,pt
mov
movsb
lods
addr16
sub
xor
cmpsl
ds
mov
lret
add
mov
adc
xchg
and
pop
inc
jecxz
cld
mov
loop
inc
roll
andl
mov
outsl
add
and
fisttps
sbb
dec
cmp
test
repnz
sub
xchg
add
nop
lods
inc
sbb
sahf
jb
lret
dec
stc
adc
mov
outsb
lea
psadbw
jmp
pop
out
xchg
repz
inc
dec
repnz
mov
adc
popf
lock
add
cmp
dec
mov
push
adc
imul
jge
or
add
gs
jg
sti
xchg
int
mov
xor
sbb
in
cld
rorb
mov
cmc
pop
sub
icebp
mov
fiadds
sub
lods
ret
movsb
pop
shlb
test
out
out
shlb
adc
xchg
orl
movsl
xchg
push
pop
loopne
adc
jo
push
jno
ljmp
inc
ret
adc
out
xor
arpl
or
pop
pop
pop
cmpsb
pop
daa
xor
int
pop
jp
sbbb
stos
loope
push
lock
enter
test
pop
out
cmp
xlat
jle
mov
mov
cmp
addb
and
cltd
jne
dec
leave
stos
jmp
mov
mov
pop
inc
out
test
cmp
dec
leave
pop
mov
jae
loope
inc
fprem
stc
push
sarl
test
lahf
stc
sub
cld
jo
mov
mov
sbb
and
jle
scas
and
scas
es
xor
fists
xchg
mov
dec
add
jnp
dec
xchg
xchg
push
mov
mov
ret
movsl
xorl
dec
lret
out
or
ret
rolb
sbb
lock
push
stc
mov
out
mov
and
push
sbb
imul
inc
mov
adc
cld
cmp
jmp
pop
adc
ror
pop
inc
mov
rolb
arpl
push
dec
pop
xchg
cmc
imul
mov
outsl
fistps
int3
push
mov
loop
aam
inc
sti
scas
shll
push
imul
in
cmc
outsb
imul
mov
sarl
out
daa
test
xchg
and
movsl
loopne
xor
push
cmp
mov
push
movsb
jmp
inc
mov
add
ret
mov
mov
mov
enter
add
cmp
xlat
stos
into
pop
xchg
xor
ja
pop
and
imul
movsl
sbb
xor
ret
pop
xor
sbb
aad
and
cmp
out
fbstp
je
aam
lods
and
adc
inc
test
and
into
push
push
cmp
in
jo
ds
push
pushw
mov
cltd
repz
cmpsb
sbb
loopne
fnstenv
sub
enter
cwtl
push
mov
mov
cmp
adc
jns
repnz
xor
sub
cmp
xchg
add
decb
rolb
in
inc
popf
mov
lods
scas
call
inc
sarb
cmc
lcall
orb
loope
jne
mov
lods
pushf
fimuls
adcl
cmp
out
jp
push
mov
fmul
test
pusha
push
mov
inc
pop
push
mov
popa
sub
adc
scas
lret
fidivrs
mov
push
dec
push
ja
rcr
js
jbe
jp
xchg
jge
aaa
les
xchg
imulb
pusha
enter
mov
movsl
mov
ret
xchg
sub
mov
pop
xlat
aas
fnstsw
sbb
mov
adc
mov
inc
nop
dec
push
insl
or
adc
mov
adc
lods
push
lds
xor
sbb
adc
jne
out
enter
lret
cmp
xchg
es
mov
loope
xchg
xorb
or
xlat
lea
rcll
dec
jnp
cwtl
scas
xchg
outsb
pop
ds
sahf
js
adc
jg
leave
add
sub
mov
outsb
and
push
pop
test
mov
stos
bound
cwtl
js
jmp
mov
in
pop
fsubp
mov
call
push
iret
loope
fldpi
fsubrs
imul
inc
mov
shlb
out
in
xchg
pop
into
in
pop
fcmovu
ret
jne
cmc
and
mov
xchg
test
or
mov
push
sub
dec
jns
lcall
outsl
jae
in
xchg
sub
sub
lahf
aam
mov
test
xchg
mov
out
into
inc
fcmove
dec
addr16
out
rcrl
mov
lock
call
mov
pop
hlt
push
mov
rolb
ljmp
xchg
movsb
aad
inc
or
inc
int3
push
ja
lds
call
fmuls
in
sub
call
or
mov
mov
xchg
aaa
movsl
xchg
adc
xchg
cmpsb
push
sub
movsb
fs
inc
push
sub
push
pop
jmp
cwtl
lcall
sbb
push
push
in
jge
ret
adc
mov
cwtl
or
outsb
and
into
adc
ss
and
loope
rol
sub
dec
out
popa
in
dec
cmp
xor
jbe
mov
and
inc
out
bnd
mov
testl
and
xor
and
inc
jecxz
test
add
inc
dec
add
mov
dec
mull
push
pop
negl
stos
push
mov
cmpsb
insb
inc
pop
mov
push
jns
xchg
or
cwtl
sbb
orb
or
test
je
insl
mov
dec
mov
push
cmpsl
test
adc
and
inc
and
aam
inc
jg
insl
pop
sbb
enter
adc
and
mov
mov
jne
xchg
add
and
jnp
mov
dec
lret
hlt
movsb
out
out
jmp
shlb
sbb
jns
mov
dec
mov
testl
pop
test
cwtl
jbe
xchg
leave
pop
fisubrl
mov
push
mov
movsb
lea
sbb
lcall
leave
pop
insl
rclb
cmp
cmp
sbb
inc
inc
rcll
mov
or
fbstp
fucomip
clc
pusha
pushf
mov
add
sbb
mov
dec
clc
pop
loope
pop
jle
or
jecxz
add
int
inc
repz
call
sbb
push
std
push
cs
xor
add
mov
xor
enter
mov
in
pop
lcall
xor
and
mov
inc
rol
dec
pop
mov
inc
fldl
das
ret
es
lods
push
iret
std
push
xor
cld
rcrl
data16
xchg
jb
mov
flds
pop
subl
mov
push
cltd
test
testl
cmp
scas
fimuls
aaa
adc
neg
fmull
in
sarl
sub
mov
and
sub
das
loope,pt
and
ficoms
and
loop
sbb
pusha
adc
xchg
aad
cmpsl
add
incb
cltd
data16
and
or
jp
push
rcrb
mov
fnstsw
cs
dec
cmc
push
cmp
insb
push
lds
mov
lret
mov
xor
hlt
mov
lock
mov
paddusw
rorl
shl
fcoml
sbb
inc
mov
outsb
cmp
sub
into
js
or
jb
stos
mul
xor
outsb
repnz
mov
pop
enter
pop
mov
cltd
cs
test
add
les
jne
lock
popa
xor
ss
pop
ds
das
shll
call
cmp
cli
aas
test
fcmovbe
hlt
data16
jl
cld
pop
pop
xchg
lahf
movsb
mov
adc
xchg
int
push
cmpsb
mov
loopne
xchg
push
inc
je
fcompl
repnz
fwait
sbb
int
dec
mov
xchg
sbb
scas
xor
xor
lret
and
ret
and
inc
insl
push
loop
dec
pushf
js
arpl
jno
jle
adc
loopne
out
addr16
mov
sbb
stc
adc
and
add
add
mov
xor
loopne
mov
frstor
and
push
scas
cmp
push
loope
dec
imul
iret
mov
decl
scas
loop
or
in
andl
int
jge
xor
adc
cmp
push
lahf
sub
pop
inc
mov
inc
fcmovnu
jecxz
orl
add
mov
pop
mov
ljmp
test
out
loop
mov
sahf
sbb
xchg
inc
mov
imul
add
insb
roll
mov
or
and
and
popa
push
lcall
clc
pushl
ja
dec
push
fwait
push
lret
xchg
mov
gs
dec
sbb
dec
pop
adc
fwait
pop
cli
aam
push
sbb
lret
int3
enter
icebp
pop
in
cli
repz
hlt
ds
idiv
dec
ja
lods
lds
mov
orb
repnz
and
push
lret
mov
imul
mov
sbb
test
lahf
jg
adc
inc
fisttpl
pushf
sbb
mov
or
xor
jge
lods
ret
aam
adc
add
pop
cmp
sub
jp
dec
pop
xchg
lcall
jle
xor
add
adc
add
sub
shrl
dec
mov
xor
pop
add
fxch
sbbl
mov
stc
jp
in
cmp
popf
js
mov
or
loopne
lret
scas
arpl
and
repz
fsubp
dec
adc
loop
add
xor
fs
sbb
dec
mov
andl
insl
dec
int
in
out
aas
cli
push
sbb
push
cmp
mov
fsubrl
dec
loop
cwtl
adc
push
lret
cmp
hlt
jmp
ret
fwait
jne
repz
stos
push
and
cmpsl
xlat
or
xchg
push
arpl
addl
dec
adc
mov
cmc
xor
sahf
sti
add
mov
adc
adc
adc
fiadds
sbb
push
inc
cmp
inc
dec
popf
pushf
dec
lcall
ret
lcall
inc
fs
push
pop
shll
xor
stc
cmp
xchg
lahf
mov
sbb
adc
je
xorb
pushf
and
scas
sub
pushf
inc
sbbl
mov
push
jbe
mov
dec
push
adc
fists
arpl
or
mov
rorb
neg
ret
dec
fwait
push
mov
pop
inc
pop
in
insb
fbstp
push
ja
pop
pop
push
dec
flds
mov
cmp
out
in
es
push
mov
loope
adc
add
loopne
adc
in
adc
imul
hlt
xor
leave
adcb
jg
test
jno
out
xchg
xchg
xchg
int3
cmp
adc
mov
push
sub
cmp
mov
push
and
pop
cmc
add
mov
dec
dec
xchg
or
jne
inc
pop
std
out
mov
nop
popa
push
inc
cmpsb
sbb
mov
mov
xchg
sbb
popa
adc
jg
orl
repnz
movsb
adc
jo
lods
push
and
mov
ja
xlat
stos
mov
jecxz
push
xchg
sbbl
frstor
jbe
xchg
jb
cmpsl
in
shrb
out
xchg
jo
cmp
mov
cmp
add
test
jecxz
lret
shrl
xor
inc
or
leave
dec
ret
cmp
mov
sbb
outsl
push
sub
push
push
inc
mov
arpl
cmc
jle
inc
call
and
out
add
mov
mov
or
aam
cmp
xor
stc
xchg
adc
sbb
insl
mov
mov
adc
mov
xchg
adc
push
fcompl
mov
inc
and
pop
fcomps
test
into
inc
add
in
jmp
jmp
in
xlat
mov
xor
or
insl
dec
xor
sub
dec
insb
hlt
jne
addr16
mov
cmp
cmp
loopne
imul
fists
mov
mov
sub
out
add
cmp
cmp
lea
not
ret
nop
fs
mov
inc
aam
popf
add
int3
dec
push
sbb
pop
iret
cli
lds
cmp
add
mov
xchg
repnz
or
jmp
dec
mov
mov
sbb
cmp
add
out
jno
xor
aam
movsb
dec
les
and
push
or
mov
or
mov
in
arpl
jne
push
cmp
cld
hlt
xor
xor
pop
mov
mov
popf
enter
xor
xchg
lock
cs
out
or
jb
add
fisubl
out
dec
leave
int3
inc
xor
sbb
sub
andl
pop
fidivrs
rcl
scas
xchg
clc
add
cmpsl
stos
fwait
rcll
insb
add
int3
insl
leave
mov
jbe
ss
push
ds
jno
hlt
mov
lea
adc
mov
jne
roll
iret
xchg
lods
pusha
and
hlt
jb
popf
sbb
add
push
inc
sub
mov
add
mov
cmpb
mov
in
das
sub
cmp
scas
pcmpeqw
test
lds
jl
dec
cmp
ret
dec
fcomps
cmp
negl
inc
loopne
cltd
mov
cmp
xlat
ss
xor
cmp
cmp
and
pop
sbb
cmp
push
xor
cmc
mulb
fisubs
dec
outsl
arpl
mov
sub
scas
jle
ss
cmc
arpl
mov
lock
xlat
sahf
and
dec
or
sarb
pop
movsl
cmp
mov
fdivl
xor
jno
mov
inc
sub
pop
ljmpw
push
arpl
cmp
add
cmp
mov
mov
pusha
mov
mov
shlb
fnstcw
push
ss
push
in
xchg
ljmp
jmp
test
cmp
mov
adcb
jb
add
jne
test
xchg
xchg
mov
sbb
lret
or
sub
lret
push
jb
movsb
cmc
mov
push
lret
lret
push
sub
sbb
pop
push
mov
cld
dec
pop
pusha
xor
int3
scas
xchg
dec
sbb
sub
mov
mov
aam
out
dec
xor
dec
ss
test
popf
ret
fs
arpl
jl
cs
in
inc
pop
mov
stos
jns
fisttps
xor
inc
std
sub
push
mov
stos
cld
and
xor
faddl
imul
imul
cwtl
and
lret
inc
inc
fstps
fs
xor
xor
mov
test
xchg
jae
xor
cmpsl
enter
add
and
or
imul
dec
push
jno
xchg
pushf
stc
dec
jno
out
mov
mov
and
mov
mov
xor
lods
aam
push
repz
mov
push
jecxz
ljmp
xor
cmpsb
sub
xlat
stos
and
data16
xchg
shl
mov
roll
xchg
in
sub
int3
cmp
in
mov
mov
sub
stos
xor
in
aam
je
ljmp
inc
push
sti
inc
pop
jmp
adc
fxsave
daa
loope
insl
cwtl
jnp
divb
xor
loop
sahf
push
and
inc
mov
mov
pop
xchg
pop
scas
mov
adc
lret
sbb
outsl
xchg
ja
push
popa
movsb
clc
push
into
pushf
sub
mov
clc
dec
mov
aad
sub
inc
push
clc
rorl
icebp
adc
psllw
stc
into
mov
sbb
dec
pop
jl
out
pusha
lock
les
test
iret
rorl
mov
shrb
and
sub
xchg
aas
das
cmp
sbb
dec
loope
mov
mov
aaa
dec
mov
or
jp
cmp
dec
rclb
scas
ja
repnz
frndint
or
sbb
mov
sbb
aad
xor
shr
jnp
xor
out
pmaxsw
loop
mov
faddl
lret
inc
jg
jmp
cmp
push
movsl
lods
mov
mov
xor
enter
sahf
out
dec
pop
loopne
enter
lock
pop
loope
hlt
mov
jno
mov
in
xchg
rcrl
add
in
mov
xor
aaa
adcb
insl
movsl
daa
sahf
sub
lcall
subl
mov
pop
aad
or
sub
pop
loope
int
or
stos
stos
sbb
jb
sub
xor
test
sbb
pop
fadd
sarl
pusha
inc
hlt
jl
int3
pop
mov
pop
ds
pop
jg
hlt
and
fcoms
dec
add
lods
or
lods
scas
repnz
adc
jmp
or
xchg
mov
or
fimull
or
scas
pop
jge
inc
mov
dec
push
loope
inc
aas
lret
inc
xchg
mov
or
ds
push
or
or
sub
pop
add
and
pop
cmpsb
scas
ds
sarb
inc
inc
sti
bound
dec
and
sub
add
mov
adc
aad
mov
popa
jne
hlt
jmp
jnp
and
sahf
es
xchg
mov
push
mov
jno
stos
int3
aam
icebp
nop
mov
sbb
pop
ffree
sub
pop
insb
sub
pop
daa
push
dec
inc
cmp
loope
lret
fbstp
lahf
lock
dec
jg
out
xchg
or
and
iret
pop
decb
bound
inc
push
pushf
cmp
enter
sbb
outsb
inc
mov
js
jp
mov
sahf
loop
pop
pop
jp
outsl
out
hlt
mov
repnz
mov
cmp
call
jg
sub
xchg
and
stc
sbb
cmp
cmpsb
mov
inc
subb
out
lds
les
mov
lods
out
push
xorb
jbe
imul
inc
dec
inc
les
mov
or
jo
popf
in
adc
mov
xor
lcall
add
xchg
mov
xor
movsl
mov
cmpsl
pop
leave
push
sbb
sbb
enter
sbb
outsb
mov
mov
xchg
arpl
lods
lods
adc
xchg
int
pop
out
jo
jl
fsubr
fld1
enter
jg
hlt
add
lea
in
int
inc
in
call
psrlq
inc
jmp
popa
fcomi
pop
scas
lea
mov
mov
adc
cmc
and
adc
xchg
fbstp
hlt
sbb
jg
or
inc
lds
jge
xor
in
mov
ljmp
cmp
or
jno
adc
or
cmp
rcrb
sbb
scas
aaa
push
cmp
xchg
mov
fidivl
adc
xor
sub
mov
adc
pushf
loop
fucomip
sub
shrb
sbb
jmp
pop
pop
jl
jl
ss
push
xchg
negl
lods
jno
js
push
jbe
mov
jo
stos
xor
aam
xchg
pop
incb
dec
push
fincstp
or
and
stos
mov
hlt
push
ret
negl
jp
arpl
jecxz
arpl
sub
jo
mov
into
subb
jb
arpl
jae
jle
rolb
fldenv
hlt
dec
xchg
mov
mov
mov
orl
cmc
xor
repz
mov
jb
pushf
or
mov
in
mov
mov
bound
sbbb
xchg
xor
bound
loopne
les
jno
out
adc
imul
adc
shrb
data16
cld
in
call
push
mov
dec
mov
rdmsr
pop
in
fdivrs
sub
push
jp
aas
inc
dec
pop
jg
ret
xchg
cmpsl
adc
xchg
lcall
imul
or
repnz
ljmp
adc
add
cmp
xchg
rcll
jne
push
mov
sahf
and
scas
maskmovq
mull
pop
outsb
jo
pop
and
dec
jae
mov
cmp
jae
mov
adc
mov
data16
int3
cwtl
les
jae
shl
in
pop
out
in
fstpl
hlt
divb
mov
cld
cmp
sub
stos
add
mov
pop
stos
scas
shl
adc
add
fistpll
or
sbb
std
aad
xchg
and
daa
xchg
xor
enter
sub
leave
jo
dec
jne
ljmp
call
das
mov
outsl
mov
cmp
popa
dec
dec
lea
rorb
out
ret
cmpsb
jg
jmp
js
lods
outsb
pop
jno
ret
mov
loop
pop
out
and
adc
rorb
push
mov
rolb
pmullw
es
out
push
das
xor
xchg
mov
adc
inc
pop
push
mov
lahf
cmp
lcall
cmpsb
shr
fbstp
in
adc
scas
adc
cmc
adc
stc
cs
adc
and
js
insb
sub
jo
or
iret
out
adc
sub
mov
dec
push
pop
inc
pop
cld
adc
je
scas
push
pop
sub
sub
ret
add
adc
lret
jne
jle
movsl
stos
xchg
inc
mov
jbe
mull
out
and
in
jge
es
add
movsb
into
jg
idivb
mov
pop
or
xlat
out
lea
adc
mov
into
inc
test
movsl
call
hlt
jae
roll
dec
jmp
push
mov
popa
out
add
lret
mov
cmpsb
test
fs
test
jge
jne
push
fst
cmc
cmpsb
cmp
je
cmp
ret
jmp
jle
ds
or
xchg
jl
jae
inc
mov
jno
mov
xlat
imull
mov
xor
mov
or
test
cltd
mov
push
fistpl
addb
call
test
push
push
add
push
xor
push
ljmp
push
mulb
test
jbe
cmp
loop
sub
sub
pop
pop
aas
in
lea
neg
cmc
rorb
repnz
cmpb
jns
push
dec
testb
mov
jecxz
adc
mov
and
sti
sbb
sbb
dec
inc
cld
ja
xchg
mov
xchg
cmovg
les
mov
inc
push
lods
add
mov
pop
lods
inc
stos
dec
mov
in
mov
jns
cli
dec
pop
inc
lcall
xchg
xor
inc
daa
and
jp
sub
and
insl
cmpsb
xor
mov
dec
dec
push
sbb
xor
loop
ss
rorl
adc
movl
mov
push
int3
add
icebp
jge
mov
mov
xor
push
xor
or
push
xor
and
repz
pop
jns
adcb
push
test
sbb
mov
jg
mov
outsb
inc
aam
inc
dec
int
jl
push
insb
sbbb
adc
pop
mov
sub
dec
mov
xchg
jns
xor
fists
mov
jns
aad
xchg
mov
std
movsb
and
cld
fldt
jl
cld
pop
stc
xchg
lea
aad
pop
xchg
test
mov
jmp
cmp
movsl
pop
fwait
xchg
sti
inc
addb
sti
cltd
shr
cs
in
sahf
ficompl
sbb
or
repz
addr16
cmp
aam
cmp
imul
mov
add
pop
popf
jno
xchg
nop
or
in
push
insl
mov
and
sub
aam
je
xchg
or
rcr
xor
idiv
mov
data16
fisubrl
cmp
push
jo
push
inc
mov
ja
inc
inc
stos
xor
mov
fstps
fdivl
sbbl
push
outsb
arpl
or
inc
jl
push
out
or
js
dec
or
or
hlt
rcll
xchg
insb
jmp
inc
push
mov
jl
and
or
repz
ret
repnz
roll
sbb
pop
push
push
adc
inc
xchg
dec
stos
stos
mov
arpl
stc
lahf
mov
pop
add
mov
sub
jl
ljmp
push
or
push
jmp
cs
mov
clc
nop
mov
ret
out
phsubsw
push
outsb
daa
mov
xlat
or
fs
rolb
lret
shr
loope
mov
jne
fldenv
xlat
xor
rclb
aas
fcmovu
shrd
imul
stos
sbb
int
inc
jl
or
pop
test
lcall
pushf
std
sbb
and
pop
sub
add
lahf
pop
ss
aas
xorl
lds
sub
fadds
clc
mov
cmp
dec
int
mov
add
xor
fistpl
mov
lret
or
sub
sub
test
hlt
push
popf
or
adc
fsubs
sub
sbb
mov
lahf
xchg
popa
push
sbb
rcrb
pop
fcmovbe
mov
test
sbb
xchg
cmp
arpl
inc
sahf
loopne
in
jmp
xlat
mov
cmp
inc
xor
sub
push
std
xchg
lcall
xchg
push
add
outsl
cmp
inc
cmp
adc
mov
adc
xlat
cld
and
repnz
add
lods
bnd
loopne
lock
je
lret
in
mov
cmp
scas
jb
cwtl
or
lock
jge
jbe
mov
mov
adc
cli
jge
fucomp
xor
fwait
loop
pop
dec
cli
nop
pop
push
and
adc
popa
cmc
loope
fbld
jle
daa
int
ficomps
xor
mov
loop
sbb
or
lods
jmp
and
fwait
ss
sub
insl
jmp
sub
cwtl
insl
jg
sub
adc
fnstcw
push
push
inc
inc
test
mulb
push
pusha
inc
push
lret
cmpsb
inc
pusha
jmp
mov
dec
out
fisttps
adc
jp
js
inc
out
shrb
lret
scas
jle
mov
or
sbb
pop
shrl
scas
stos
fdivrl
cmp
fs
repnz
dec
push
dec
xchg
or
mov
xor
addb
or
and
shrb
lods
imulb
call
mov
pop
test
loope
ficomps
xchg
rorl
stos
inc
insl
pop
leave
xlat
jecxz
das
ja
sbb
add
or
data16
dec
test
cmpsb
cmp
inc
dec
repz
xor
je
push
push
loope
or
add
inc
stc
mov
jle
xchg
pop
push
leave
inc
xchg
icebp
dec
insb
xchg
dec
add
mov
fwait
loop
jecxz
mov
sbb
sbb
stc
popa
mov
insl
pusha
pop
inc
dec
sub
clts
in
sarb
lods
fwait
in
adc
push
jo
xchg
stc
jle
scas
inc
xrelease
lret
or
in
sbb
mov
push
lock
fstp
inc
mov
ffreep
and
adc
lret
hlt
in
mov
vprotw
fmuls
cmp
dec
dec
orl
stos
jmp
out
sarl
bound
in
leave
adc
lcall
dec
jmp
or
addr16
mov
push
sti
mov
popa
cwtl
outsl
sbb
lock
push
pop
mov
stos
add
pop
rcll
push
shl
mov
or
xchg
scas
dec
xor
jo
out
cmp
lret
repnz
rcrl
adc
or
mov
cmpsb
psllw
mov
loopne
inc
adc
mov
rcrl
addl
test
test
xor
fbstp
ficomps
cmp
add
adc
push
shlb
pop
test
ror
in
ss
out
jge
mov
dec
inc
loop
stos
out
pop
pop
mov
mov
sarb
popf
pop
inc
fiadds
icebp
mov
inc
and
lahf
lods
lds
test
xor
fsubl
jp
rcrb
pop
jg
loopne
sub
jmp
data16
inc
inc
arpl
sub
loop
mov
pop
xor
jne
xchg
aas
lcall
pop
cmp
inc
sbb
lds
cmp
aaa
push
jns
negl
jp
call
in
out
cmp
cmp
sub
mov
mov
out
xchg
movb
lret
add
lods
test
dec
inc
aas
lds
adc
lods
les
mov
mov
push
daa
mulb
or
aam
out
cltd
dec
push
aaa
dec
push
sar
enter
lds
dec
cs
loop
pop
jge
jecxz
dec
or
jne
popa
insb
js
pop
xchg
inc
xchg
xchg
mov
lods
sub
js
sub
nop
push
decb
dec
enter
push
inc
aam
sti
push
imul
daa
sahf
fbld
sub
mov
push
xor
add
lret
aam
pushf
xor
enter
rcr
rol
fsubs
lock
popa
xor
mov
mov
pop
fucomi
lcall
lret
test
mov
pop
leave
dec
add
pop
cmp
pop
fildll
aaa
lret
inc
out
push
in
movsl
aam
gs
jae
jns
lds
mov
jle
js
sub
mov
lds
sub
pusha
jbe
pop
lret
das
scas
dec
pop
aaa
cmpsl
ljmp
mov
nop
lret
mov
cwtd
jg
jno
adc
stc
insb
mov
loop
iret
or
out
hlt
dec
mov
sbb
test
mov
sub
enter
outsb
jl
test
xchg
xlat
stos
push
inc
loop
adc
out
fldcw
sub
in
mov
dec
mov
andl
jbe
cmp
fbstp
or
loopne
dec
and
les
sbb
jb
cmpsb
lret
xor
mov
scas
push
popf
xor
push
xor
pop
cmpsl
xchg
mov
mov
dec
push
loop
int3
lea
les
fdivrp
es
mov
gs
sub
add
mov
push
mov
jbe
mov
adc
mov
lods
test
inc
jge
jb
hlt
jo
mov
xor
push
dec
sar
pop
out
ja
cmpsl
xlat
imul
scas
pop
mov
adc
and
ss
daa
and
inc
pusha
lods
or
inc
dec
cmpsl
mov
das
adc
js
test
pop
lcall
mov
pushf
jecxz
cmp
call
xchg
scas
ss
fadd
xchg
sub
mov
adc
dec
fimull
push
pushl
push
xor
or
push
movsb
adc
fisubrs
mov
mov
jl
data16
js
xchg
sbb
sub
pop
js
out
out
mov
pop
and
mov
xor
fldcw
sbbl
mov
and
mov
inc
mov
rcrl
sbb
pop
shrb
and
in
or
mov
call
mov
push
jle
arpl
bnd
mov
mov
mov
insl
pop
add
or
push
scas
cmp
mov
adc
cmpl
imul
out
sti
jno
mov
cs
push
lcall
scas
je
or
and
lret
insb
and
jne
mov
out
add
mov
aam
fsts
outsb
xor
test
fcmovne
stos
ret
or
jmp
push
inc
jbe
jg
mov
dec
shrb
int3
jnp
fiaddl
movsb
adc
push
lods
movl
jle
mov
mov
jae
in
xchg
push
adcb
aam
lret
mov
adc
insb
mov
inc
outsb
fwait
and
or
or
nopl
cmp
jns
daa
stos
lods
adc
cmpl
call
push
iret
lock
cli
imul
adc
inc
and
stc
cmp
ja
loope
dec
divb
mov
mov
jge
out
mov
in
adc
xor
loope
and
mov
dec
repz
pushf
rdpmc
dec
mov
fsubs
sbb
add
xchg
jp
ret
iret
cmp
dec
dec
movsb
push
loope
inc
call
lret
mov
mov
subb
lods
shl
test
mov
xchg
rcl
ss
jbe
jns
jo
add
push
xchg
stos
add
sarl
or
scas
push
sub
lds
mov
test
imul
adc
iret
bound
sbb
arpl
push
jg
pop
sbb
pop
push
cwtl
test
xor
es
jp
lods
insl
in
sahf
adc
sub
and
inc
adc
imul
dec
mov
ret
scas
adc
inc
adc
mov
or
in
mov
sahf
jge
jae
jl
aaa
sub
gs
std
xor
push
jae
popf
mov
jno
mov
mov
xor
adc
fbld
je
adc
dec
dec
add
ret
xchg
mov
push
addb
push
mov
ja
js
mov
xchg
cmp
movsb
cld
jne
xor
pop
popf
clc
xor
push
pushf
lock
orl
dec
push
outsb
xchg
mov
sti
pop
enter
sbb
nop
sti
das
fwait
sub
cmovs
xor
add
lds
inc
lods
pop
ficomps
adc
mov
sbb
jne
mov
push
mov
mov
in
dec
add
pop
cmp
rcpps
mov
sbb
or
adc
xchg
xchg
call
xchg
nop
xor
gs
jne
xchg
dec
mov
mov
or
int
mov
cwtl
or
mov
pop
hlt
sar
popf
mov
out
jle
add
mov
sti
mov
loopne
sbb
mov
add
xchg
cs
jno
hlt
mov
jb
out
jnp
loop
mov
mov
cmp
push
jae
data16
pop
arpl
mov
xchg
mov
insb
lret
call
add
sbb
lret
mov
jg
loop
mov
dec
xchg
push
cld
pop
and
dec
inc
adc
add
inc
fidivrs
shl
inc
imul
jns
leave
fscale
mov
inc
into
stc
jecxz
ret
dec
or
jnp
push
gs
out
cmpsb
dec
out
xchg
mov
nop
mov
sbb
cmp
or
or
imul
or
mov
sarl
xchg
sti
in
pop
jne
repz
sub
nop
pop
adc
hlt
and
adc
push
dec
or
in
imul
leave
cmp
hlt
add
mov
sub
fidivs
sub
in
jecxz
ds
jne
xor
pop
push
or
jno
cltd
bound
mov
sub
movsb
add
xor
scas
push
js
jle
daa
call
cmp
mov
test
lds
jg
test
gs
mov
pop
jge
movsb
dec
jp
xor
sahf
xor
andl
xchg
iret
mov
mov
js
leave
mov
rcll
in
pop
leave
push
lods
rorl
xchg
cmp
push
dec
pop
xor
xchg
rorl
xchg
insl
insb
enter
pop
rolb
ss
jae
dec
adc
mov
dec
push
repz
mov
clc
add
and
adc
xchg
sub
dec
jmp
xor
out
sbb
testb
pop
or
mov
fldenv
dec
xlat
popf
in
ret
push
xchg
mov
adc
xor
idiv
out
in
mov
hlt
sub
xor
outsb
mov
das
iret
cld
dec
ret
movsb
mov
fsubrp
pusha
xor
and
jmp
or
jne
lret
jns
cmpsl
inc
rol
xchg
sub
movsb
jmp
rorl
pop
xor
and
pop
or
and
das
out
dec
or
scas
cmp
jno
cmp
and
movsl
clc
ror
out
je
sbb
int3
inc
sub
mov
idivl
lret
dec
sub
out
sahf
mov
add
cmpsb
and
xor
pop
mov
push
cwtl
shl
clc
xchg
add
addr16
cmp
shrd
test
dec
das
stc
xor
mov
out
fmull
push
int3
in
xor
or
jmp
xor
mov
or
xchg
inc
mov
mov
mov
cmp
insl
fsubr
pusha
push
adc
sbb
dec
xchg
cld
addr16
jbe
mov
out
je
jp
cmp
pop
enter
outsb
negb
ja
pop
or
mov
mov
int
lahf
lret
jge
jns
jecxz
mov
rclb
ss
out
or
mov
and
cmp
fs
push
sub
sbb
xor
addb
dec
xchg
mov
add
inc
adc
push
pop
es
sub
and
or
pop
or
in
xor
xchg
loop
daa
cmp
push
cmpsb
mov
fwait
and
inc
shrw
cmpsl
jge
lea
pop
ret
aas
xlat
fmull
jl
add
and
dec
xchg
adc
mov
xchg
and
and
add
insl
mov
dec
call
mov
enter
and
test
cmc
inc
pop
sbb
daa
or
aaa
push
lea
sub
jmp
clc
push
and
mov
outsb
push
sbb
and
sub
fldt
int
mov
push
gs
xchg
cld
pusha
shll
or
lret
push
push
xor
add
push
pop
iret
mov
orl
test
mov
and
dec
lods
imul
bound
xchg
pop
and
xchg
lret
movsl
jbe
cmp
xor
add
clc
jnp
inc
into
push
fs
sbb
popa
adc
mov
adc
cmovno
lods
fs
jg
mov
iret
hlt
adc
lds
mov
cmp
mov
aad
leavew
jg
sub
sbbb
test
imul
int
pop
repnz
aad
adc
mov
dec
pop
sahf
xlat
push
or
push
push
mov
and
roll
xchg
fs
or
jne
cli
ret
jo
es
or
mov
sub
lods
push
push
or
push
xor
and
adc
loopne
pop
add
cld
dec
insb
sti
xlat
inc
lcall
xchg
shrl
push
divl
fcoml
iret
mov
mov
aas
mov
test
sti
or
xor
mov
outsb
sti
mov
adc
ljmp
sub
inc
fcomp
pop
push
dec
add
lret
mov
mov
out
xchg
inc
cmp
fldl
clc
mov
jns
mov
bound
sbb
dec
mov
jns
test
lret
data16
xchg
sub
xchg
adc
jno
into
adc
dec
ljmp
xchg
mov
leave
dec
pop
mov
adc
sub
rolb
cli
sub
enter
ja
hlt
jecxz
adc
loopne
xor
arpl
xchg
push
int
fwait
sahf
mov
or
ljmp
arpl
xchg
inc
dec
jle
out
sbb
xchg
push
sbb
les
dec
popf
adc
lcall
jg
lods
push
ret
fcmove
push
out
adc
mov
movsl
not
dec
scas
in
cmp
sub
aam
sti
lahf
out
stos
repz
push
sahf
inc
pusha
gs
test
cli
sbb
dec
xchg
pop
mov
js
and
sub
sti
mov
adc
dec
data16
xor
ret
out
push
mov
dec
je
fwait
cltd
ds
inc
xor
stos
mov
lahf
xor
pop
rcrl
sbb
aas
dec
inc
or
nop
int
fwait
rcll
mov
lret
arpl
mov
sub
nop
xor
jge
aad
xlat
imul
and
dec
mov
cmp
mov
sub
lcall
mov
mov
xchg
jnp
mov
rorb
pusha
out
and
and
jp
and
inc
mul
dec
es
inc
in
cltd
push
fnstsw
cmp
inc
loope
mov
jmp
adc
lods
in
xor
lods
dec
dec
out
pop
enter
test
call
sub
fucomi
popf
mov
loope
jecxz
cmc
pop
adc
pop
out
and
outsb
jb
inc
js
jae
pop
cmp
daa
sbb
pop
divl
clc
arpl
mov
repz
add
adc
push
or
xchg
fldt
daa
xchg
push
mov
add
inc
add
cld
or
gs
cmp
outsl
xchg
fprem1
jae
sub
xor
sbb
and
addr16
xchg
cmpsb
popf
fwait
stc
pop
jnp
mov
rorb
mov
cltd
imul
fmull
xchg
jae
aad
stos
aad
mov
xor
mov
aaa
or
popf
nop
scas
insb
dec
rcrb
jp
or
scas
pop
mov
fwait
xchg
pop
pusha
ror
jle
les
les
mov
movsb
in
inc
adc
cmp
push
fdiv
loope
data16
aam
lcall
mov
mov
lret
gs
stc
mov
loopw
js
shrb
cltd
xor
mov
rcrl
in
aad
lret
sub
sub
fdivs
cmp
or
dec
fimull
lret
or
div
ljmp
daa
dec
in
mov
dec
aam
outsb
cli
enter
jae
or
add
movsb
dec
xchg
sub
xchg
into
jecxz
test
pop
sub
sbb
fwait
mov
rorl
pop
fdivr
call
or
int
mov
cmp
push
adc
jle
xchg
hlt
mov
dec
add
lcall
cmp
or
and
and
dec
mov
out
add
outsl
je
mov
cmc
je
mov
push
in
lods
and
icebp
orb
push
test
stos
mov
and
jne
cwtl
add
jle
dec
fstl
xchg
cmpl
mov
inc
cmp
mov
mov
mov
add
faddp
mov
inc
inc
gs
push
ljmp
nop
adc
jbe
or
sbb
push
jo
lds
jp
jnp
adcl
ret
outsl
cmp
pop
aas
mov
sti
mov
enter
lret
inc
dec
arpl
repnz
sbb
adcb
inc
cli
and
sti
shll
mov
leave
lret
cld
faddp
lcall
mov
dec
jg
push
mov
push
cld
mov
push
xchg
dec
dec
testb
add
mov
mov
fwait
lds
shrl
lea
int
repnz
jae
sub
dec
fadds
xchg
push
sub
movsb
jo
adc
xlat
or
mov
and
jo
sub
xchg
sbb
jmp
adc
dec
iret
cmpsl
jle
insl
aad
or
lods
or
jb
adc
rorb
sbb
stos
cmp
xlat
lods
loopne
subl
fsubs
mov
stos
rorl
xor
inc
sbb
enter
inc
xchg
mov
out
adc
dec
roll
loop
nop
shlb
push
test
and
inc
mov
icebp
scas
mov
and
mov
dec
test
ja
insl
dec
sub
mov
push
jle
filds
imul
sar
cmpsb
int
push
push
mov
mov
xchg
jp
outsl
xor
insl
mov
jno
xorb
sbb
and
jmp
jo
sbb
in
out
pop
cli
xlat
ljmp
adc
jne
xchg
sbb
cli
mov
mov
rcll
in
cmp
scas
repz
xchg
sbb
dec
pop
mov
and
push
movsb
movsb
xor
or
mov
mov
ret
andw
jb
cmp
mov
mov
shrb
xchg
sbb
push
loopne
ficoms
es
pop
xor
je
xor
fisubs
dec
aam
cwtl
adc
or
xchg
add
iret
cmp
pop
inc
push
int3
ja
adc
inc
sbb
aam
jae
lock
loop
cld
je
sbb
mov
sub
cmpl
cmpsb
xor
cmpsl
inc
les
loop
add
sub
jnp
loopne
lcall
pop
shrb
mov
pop
in
lods
sub
xchg
xor
je
jne
movsl
pop
rcll
lahf
jle
push
xor
inc
xchg
js
jl
pop
mov
jb
xchg
dec
mov
jmp
mov
push
mov
xchg
mov
adc
adc
mov
xor
movsb
mov
push
dec
and
imul
cmpsb
sbb
mov
add
dec
add
cmp
negl
dec
pusha
pushf
pusha
in
hlt
jno
dec
dec
inc
lcall
scas
jne
test
les
ljmp
shlb
in
sub
xchg
and
cmpsl
ret
mov
mov
fildll
arpl
out
loope
push
mov
sbb
cli
hlt
cwtl
iret
pop
mov
in
nop
pop
xor
jg
lcall
inc
out
push
icebp
or
leave
mov
fldcw
mov
fiadds
mov
and
jo
les
jbe
lock
das
ljmp
xchg
mov
jae
jo
push
pop
rorb
rclb
sbbb
sbb
scas
mov
xor
inc
xchg
clc
xchg
pop
movsb
and
lretw
dec
push
nop
notb
inc
jb
sti
xor
rol
lcall
mov
daa
jae
loopne
outsb
std
insb
aad
xchg
punpckhbw
dec
sbb
icebp
iret
mov
pop
icebp
pop
das
fistl
aas
xchg
push
int
inc
mov
xchg
mov
sbbb
pop
mov
and
jne
dec
iret
ljmp
hlt
gs
inc
jb
inc
loopne
push
es
pop
insb
orl
xchg
or
pusha
ds
fwait
mov
mov
shlb
cmpsl
dec
inc
xchg
gs
xor
insb
add
sub
push
pushw
jmp
jmp
pop
leave
mov
sub
mov
mov
jo
icebp
ret
loop
test
push
sbb
or
lods
pop
mov
shld
push
sbb
outsl
cld
sbb
fmuls
je
mov
nop
mov
fstpt
cmp
or
es
ljmp
sbb
fcmovnb
add
shlb
in
testl
pop
fldt
pop
out
jle
ss
sbb
inc
push
and
cwtl
ljmp
shl
nop
jmp
sti
mov
jbe
sti
shll
mov
inc
inc
fistps
jne
pop
mov
jnp
imul
mov
lds
mov
pop
fidivrs
adc
mov
pop
lcall
push
adc
inc
push
add
cmp
and
scas
cmp
repnz
pop
xor
pmulhw
scas
mov
test
xchg
or
jns
mov
cmpsl
popa
imul
movsb
jb
push
jg
jne
aad
mov
popf
pop
mov
xor
cmp
or
push
aad
popa
adc
in
stos
stos
scas
pop
loop
das
icebp
jnp
dec
xor
stc
jbe
jbe
sbb
icebp
sbb
in
pusha
nop
xor
outsl
push
js
sbb
in
fsub
mov
add
jp
fisubl
push
push
mov
jge
lock
mov
arpl
outsb
xchg
and
iret
enter
int3
jmp
lock
jge
orb
or
ljmp
cmp
push
lcall
call
mov
pop
push
cwtl
mov
adc
or
xor
push
in
mov
popa
loop
xchg
fidivs
stos
xchg
pop
dec
cmp
dec
imul
js
insl
mov
in
fistps
ret
xchg
punpckldq
xor
pop
enter
imul
jns
mov
ljmp
lods
xor
lods
add
dec
lret
cltd
add
mov
pop
aas
insl
negb
jns
sbb
lods
or
jp
lods
outsb
loopne
movsb
fisttpl
add
push
and
sbb
scas
sbb
push
scas
mov
hlt
repnz
inc
fisubrl
mov
cmp
dec
in
ja
movsl
cmpsl
cmp
jp
adc
cmc
test
repz
ret
cmc
dec
mov
sub
xchg
dec
inc
cmp
fisubs
je
and
mov
xor
push
outsb
dec
lea
mov
iret
xor
fsub
in
xchg
inc
out
lods
ret
nop
aam
sbb
cs
movsl
ss
push
and
push
jp
dec
jnp
sbb
jb
mov
mov
xchg
mov
sub
add
push
repz
push
cmp
xchg
jmp
stos
pop
mov
ds
or
in
adc
outsb
outsl
xor
dec
mov
jbe
xlat
test
mov
push
in
jl
cmpsb
mov
testl
loop
in
scas
into
cs
stos
jnp
fsubrl
push
adc
cmpb
stos
jmp
mov
mov
test
dec
jns
addb
or
clc
or
clc
out
cmp
pop
mov
push
fistl
push
sbb
push
scas
mov
xor
sub
sub
xchg
dec
and
jns
movl
imul
bound
sbb
mov
mov
dec
scas
sbb
arpl
dec
mov
inc
mov
shl
push
mov
dec
pop
stos
sub
ds
push
decb
mov
or
xchg
sbb
mov
mov
xor
dec
insl
and
xchg
sbb
lret
setp
xchg
pop
roll
or
mov
cld
and
aaa
inc
ja
add
push
scas
cmp
bound
push
aas
leave
aam
xchg
add
jbe
ret
add
fisubl
outsl
in
xor
popa
addr16
mov
int
mov
lea
jp
insb
adc
lea
dec
mov
mov
imul
int3
push
adc
mov
pop
pop
inc
add
cltd
sbb
jge
mov
sub
or
mov
ja
or
in
and
push
jb
movsb
in
xchg
add
and
decb
fisubrl
bound
in
or
jae
aad
sub
stos
adc
outsb
or
xchg
movb
je
fldt
mov
xor
xor
in
inc
out
in
mov
imul
jle
aaa
mov
dec
mov
clc
mov
ficompl
cmp
ljmp
loop
push
mov
incl
pop
push
cmp
enter
sub
daa
add
mov
fsubrl
pop
mov
dec
jl
or
fimuls
roll
stos
outsl
push
push
mov
popf
dec
pop
xchg
gs
insb
cli
jp
nop
sub
mov
int3
xor
test
lea
ljmp
fisttpl
pop
xchg
ficoms
pusha
rorl
sub
hlt
dec
mov
push
xor
mov
mov
in
sub
cmpsl
add
mov
adc
out
pop
cmp
and
rcl
in
and
aad
test
push
rorl
and
mov
lock
sub
iret
jae
inc
jne
jl
imul
les
inc
ret
movsl
fs
das
cmp
xchg
test
xor
push
jle
jne
sbb
pusha
lds
popa
aam
or
rolb
mov
mov
xchg
add
or
fcomip
jmp
rcrl
dec
ja
push
xchg
loop
nop
mov
mov
push
test
inc
adc
ret
addr16
inc
stos
pop
fldl
fwait
xchg
mov
push
clc
cmp
mov
stc
addr16
adc
lods
dec
jns
jae
mov
leave
mov
imul
mov
xchg
adc
fistpl
out
sub
lods
pop
jbe
mov
cmpsb
pop
daa
lret
test
mov
shlb
das
rclb
cs
mov
cmc
je
dec
sbb
mov
aas
or
rorl
insb
push
sahf
shrl
and
in
mov
idivb
pusha
sti
out
or
pop
push
cmp
push
lods
mov
jae
push
out
daa
mov
push
jecxz
inc
ror
icebp
test
dec
inc
rcl
and
cmp
icebp
cmpps
in
test
loop
mov
icebp
shll
or
or
push
jle
or
mov
out
hlt
popf
dec
jg
jno
pop
or
rcrl
jne
jno
dec
stos
nop
rolb
push
imul
loop
ficomps
xor
sub
inc
pop
add
cs
aam
flds
sbb
testl
or
or
sbb
jnp
in
cvtps2pi
in
adc
inc
mov
cmp
pop
lods
adcl
mov
mov
jp
or
push
inc
sbb
xchg
mov
or
test
xor
shll
cli
lods
loop
dec
aas
push
or
test
add
lods
push
imul
test
in
lea
pop
insb
push
aas
mov
cmc
xor
aas
jb
mov
mov
arpl
add
and
jle
in
mov
movsb
call
movsl
pop
mov
dec
ss
stos
cmpsb
xor
cwtl
xor
sub
sbb
jg
lods
push
inc
sub
rorb
in
or
lret
js
iret
xchg
in
fiaddl
mov
dec
bnd
jg
and
xchg
clc
int3
loopne
sub
jno
lock
jns
mov
jb
pop
push
sub
or
or
data16
es
and
js
aas
mov
inc
adcb
rcrb
es
cwtl
xlat
daa
addr16
xchg
enter
jecxz
mov
aas
mov
mov
or
movsb
bound
jle
xchg
daa
sahf
sbb
or
jmp
loopne
mov
sahf
mov
pop
arpl
pop
cmp
push
aam
mov
or
push
mov
add
test
out
push
in
sub
in
xchg
push
inc
push
or
push
sbb
test
ss
sbb
loopne
popf
pop
into
sbb
cmpsl
test
lea
or
cmp
mov
out
mov
cmp
xor
test
dec
push
xchg
roll
fisubrl
in
fisttps
call
jmp
je
aam
lret
pop
jle
mov
fcoms
add
mov
xchg
inc
jecxz
pop
es
subl
mov
movsl
adc
ja
mov
addr16
mov
xchg
jmp
fisubrl
dec
cmpsb
sbb
xchg
sub
insb
enter
icebp
or
push
mov
mov
lahf
add
scas
inc
loopne
fwait
jno
push
adc
fisttpl
out
push
stos
sub
ret
xchg
paddusb
popa
xor
mov
cmp
fsts
cmp
inc
insb
adcl
cltd
repz
cmpsb
xor
inc
xlat
xchg
mov
and
insb
mov
rclb
adc
stos
fsubrl
mov
imul
das
test
sahf
and
pop
cwtl
mov
test
lock
push
cltd
jmp
and
sub
imul
lea
pop
fidivrl
lahf
xchg
mov
clc
pushf
int
mov
gs
mov
xor
xor
ret
imul
mov
add
dec
outsb
adc
mov
aad
insl
mov
push
push
jl
mov
push
mov
leave
sub
inc
aad
in
leave
stos
lea
movsl
jbe
pop
notb
repnz
inc
rcll
sbb
mov
or
decb
aas
push
pop
daa
push
mov
lcall
add
mov
pop
fwait
cs
call
or
pop
div
xlat
jno
pop
out
jg
sub
imul
daa
fs
repz
push
mov
sbb
pop
lods
mov
sti
xchg
jp
ret
ret
mov
or
lret
inc
lods
mov
push
out
add
dec
aad
add
xchg
jnp
mov
or
mov
push
outsl
cmp
test
repnz
mov
cwtl
xlat
stos
mov
lahf
std
call
mov
inc
and
add
jge
je
inc
adc
inc
inc
ds
and
lea
mov
fs
mov
cmpsb
jg
inc
fwait
push
movsb
rorb
fadds
aas
cmp
sbb
xchg
xor
and
sbb
inc
mov
mov
out
cmp
rcll
insb
pop
xor
in
gs
mov
sub
xchg
pop
rcrl
cmp
sti
ljmp
lret
sarl
or
hlt
js
xor
in
clc
mov
sbbl
roll
mov
std
mov
inc
pavgb
xchg
ret
xchg
lock
loop
sbb
mov
push
stos
lods
adc
jne
inc
mov
fimuls
pop
js
inc
xchg
sub
xchg
xchg
sbb
pop
not
dec
mov
add
sub
xor
jo
es
pop
jbe
xor
pop
xor
imul
push
mov
lods
loopne
jg
add
imulb
jbe
sbb
loop
dec
data16
rol
gs
dec
pop
mov
daa
and
mov
imull
jbe
loope
mov
jl
rolb
xchg
and
or
jno
sub
adc
mov
add
icebp
out
outsl
dec
mov
add
dec
loopne
inc
adc
pop
jno
jecxz
sbb
test
sbb
dec
or
push
loopne
xor
sub
mov
or
dec
jecxz
sbb
adc
sbb
outsl
mov
pusha
pop
jp
pop
push
fs
sahf
in
jns
push
rclb
xchg
popa
lret
scas
push
je,pn
shl
adc
outsb
out
clts
aaa
cvtps2pd
sub
ret
sbb
hlt
cmp
jl
or
xchg
cltd
push
mov
test
call
cmp
sub
sub
lods
xor
cmp
lds
xor
mov
inc
sub
je
je
push
or
mov
sbbl
decl
movsl
cmp
cltd
out
call
pop
outsb
push
ds
push
das
pop
sahf
lret
test
add
pop
and
dec
inc
rcrl
or
push
xchg
mov
test
adc
and
out
mov
sti
lea
test
stos
sahf
cmpsl
in
icebp
jo
pop
jmp
out
jle
lods
add
out
loope
punpckldq
scas
mov
arpl
in
push
leave
mov
dec
fstpl
adc
stos
mov
xor
aam
xchg
and
pop
call
xchg
push
push
mov
adc
dec
mov
mov
icebp
es
fistpl
push
ja
repz
xlat
call
push
push
jno
mov
cmp
xchg
imul
fwait
pushfw
pop
scas
push
repz
subl
bound
and
lods
adc
adc
in
pushf
out
rorb
add
arpl
in
cwtl
cmpb
xor
mov
push
fldt
add
dec
mov
adc
enter
jecxz
test
aad
fcoms
pop
insb
jle
inc
sbb
dec
dec
sti
push
cmp
adc
shrl
push
adc
stos
pop
subl
test
and
in
lret
push
push
xchg
mov
aaa
jle
mov
cmpl
enter
sbb
jge
sbb
fdivr
or
test
lcall
cltd
push
cmp
ret
xchg
popf
adc
negb
lcall
in
or
rcrb
lret
enter
sbb
xchg
pop
cmp
sub
fisttps
dec
insl
pop
popa
sub
test
addb
jmp
jb
shlb
push
and
jmp
ss
push
xchg
sub
add
push
jmp
cmc
movsl
jbe
dec
push
mov
mov
mov
pop
test
xchg
flds
sbb
fwait
jl
std
ljmp
mov
xor
arpl
xchg
inc
sub
mov
icebp
cmp
mov
lcall
add
shrl
bound
pop
mov
mov
out
mov
int
dec
sbb
pop
popa
mov
jge
inc
cmp
jnp
sbb
sbb
lcall
lods
jmp
loopne
pop
push
xchg
push
mov
xlat
pop
mov
xchg
adc
xlat
adc
fdivrl
push
sub
test
push
dec
pop
pushf
ds
xchg
jae
dec
jnp
fs
daa
add
aaa
call
jb
test
jle
mov
in
mov
pop
mov
fstps
aaa
rcrl
adcl
jnp
sar
clc
pop
cwtl
jbe
add
dec
sub
inc
push
add
mov
fstpt
das
in
inc
mov
adc
dec
call
repz
add
jne
popa
xchg
push
lods
pop
in
pop
mov
dec
dec
pop
add
cmp
leave
pushf
out
ja
imul
or
aam
cmp
es
call
inc
sarb
sub
outsb
xchg
leave
sbb
push
dec
push
sbb
fwait
inc
roll
out
mov
push
or
sub
fcmovne
shlb
daa
jp
clc
add
adc
xor
insl
mov
fsubl
sub
repnz
inc
mov
stos
and
cltd
jbe
lock
cmc
mov
push
push
fwait
mov
mov
inc
cwtl
mov
icebp
mov
das
adc
jo
jle
int
xor
fs
jae
pushw
push
or
xor
and
and
addb
fiadds
dec
cld
adc
in
mov
mull
icebp
xorl
add
jge
and
cld
aas
sbb
xchg
mov
fs
pop
adc
jae
lahf
sbb
xchg
mov
jb
inc
mov
knotb
add
shrl
call
pop
pushf
into
jecxz
bound
std
mov
inc
and
push
dec
ja
shll
repnz
pop
addb
lret
call
repz
in
push
mov
adc
pop
stos
mov
fadd
jb
and
mov
and
fwait
pop
or
aam
ja
adc
dec
loop
mov
jnp
inc
dec
pop
mov
movsl
inc
inc
mov
aaa
dec
test
jo
aas
lcall
inc
pop
jmp
fst
icebp
insb
lods
aad
dec
fimuls
mov
shl
mov
xor
call
push
add
mov
lahf
fs
add
stos
xor
fstl
xor
gs
xor
mov
je
pop
sbb
das
test
sub
mov
jae
xor
fsubs
inc
stc
daa
inc
pop
cmp
mov
or
push
imul
push
adc
inc
push
neg
cmp
dec
fwait
imul
rol
insb
test
popf
mov
clc
dec
sub
nop
loop
rcrb
add
lret
imul
aam
mov
aam
cmc
insl
adc
mov
mov
stos
int3
ljmp
sbb
shl
test
repz
add
dec
pushf
mov
or
xchg
das
frstor
sahf
inc
stos
fisubl
inc
xchg
xchg
xor
data16
pop
lret
das
push
int
mov
add
int
sub
or
or
jle
lock
pop
pop
in
jg
push
pop
in
inc
into
cmp
subb
cmp
movsl
sub
outsb
sahf
in
mov
lock
sbb
dec
out
mov
fnstcw
sbb
div
aam
popf
mov
bound
mov
pusha
aaa
shll
inc
jns
loopne
mov
gs
out
cli
push
es
pop
fs
rcrl
mov
add
lahf
iret
xlat
dec
pop
pop
lea
call
movl
jmp
bsf
mov
cmc
cmpb
jmp
xlat
jmp
repz
pop
cmp
pushf
sub
and
icebp
cmovbe
push
pop
dec
cld
adc
mov
mov
fists
int3
adc
les
jne
or
aad
data16
mov
jno
xor
scas
cli
xor
cmpsl
or
imul
ljmp
leave
jb
dec
lds
ret
fmull
pop
imul
cmp
cltd
cmp
dec
lcall
test
inc
loope
inc
add
cmp
dec
lret
xchg
xchg
aas
ror
cmp
mov
js
lahf
pop
jmp
push
cmpsb
mov
inc
clc
push
cltd
fwait
pop
leave
inc
pop
xchg
pusha
out
push
and
xor
push
andb
xchg
loope
rcrb
jge
xchg
push
bound
mov
mov
cmpsl
pop
das
xor
jp
mov
insb
jp
movl
push
pusha
lea
jmp
lret
fwait
cmpsb
bnd
test
in
int
loope
cmc
icebp
sub
stos
testb
xor
lea
andl
adc
fimull
popf
fwait
xlat
arpl
jecxz
cmp
ret
out
loope
lock
mov
icebp
jge
or
pop
shl
popf
sahf
lcall
xchg
cmp
add
dec
pop
dec
insb
arpl
and
xchg
inc
loope
iret
leave
push
or
xchg
lea
sahf
or
shl
mov
cltd
jno
lret
dec
je
fistps
stos
push
lock
movb
clc
inc
cmp
jb
inc
push
out
notl
add
out
push
xchg
repnz
or
ret
jo
andl
xor
xchg
mov
inc
lret
mov
outsb
pop
pop
jmp
xchg
shlb
out
cli
scas
add
cmpl
test
mov
xor
jmp
mov
sbb
or
mov
pop
rclb
mov
cli
sti
lock
adc
and
xchg
verw
int
jns
sub
push
pop
lea
sbbb
jmp
lods
rorb
fisubs
rcl
test
add
jno
add
not
push
setb
jmp
pusha
fst
lock
int3
inc
push
xor
and
lods
or
insl
mov
mov
jle
mov
fidivrl
hlt
mov
popl
push
xorl
test
jae
add
add
or
stc
sub
mov
and
push
push
push
mov
xchg
test
mov
and
add
mov
in
cs
sahf
gs
mov
add
fs
jne
movzbw
setb
lahf
jmp
shrb
lea
sbb
xchg
icebp
insb
and
imul
fwait
fwait
aad
imul
out
sub
icebp
mov
pop
push
ret
lods
pop
push
mov
test
popa
in
push
pop
push
sti
jo
dec
mov
fcmovnu
fcoms
push
push
adc
call
mov
loop
mov
imul
lods
sbb
or
add
aas
cld
or
mov
jnp
cmp
subl
sbb
faddl
sbb
or
lret
cmp
fs
jo
movsb
ljmp
sti
xchg
in
in
daa
cmc
cwtl
add
push
test
inc
dec
mov
lcall
mov
lods
fwait
jae
cmpsb
jmp
inc
pushf
push
je
shlb
je
or
pcmpgtb
add
loope
pop
lods
sub
stos
pop
mov
xor
pop
idiv
roll
shlb
movsb
dec
mov
pushf
mov
icebp
out
ret
jmp
lea
lcall
cwtl
inc
mov
test
aad
push
shll
in
cli
popf
adc
loope
mov
add
rorb
and
lcall
mov
arpl
andl
pop
mov
sub
mov
dec
ficompl
out
inc
lcall
xchg
mov
movsl
pop
adc
cltd
lea
std
sbb
jae
sbb
add
addr16
fisttpl
mov
or
add
jae
call
cmc
lods
and
ret
test
mov
mov
jo
rorl
fnsave
bound
mov
enter
stc
test
inc
icebp
pop
into
cs
test
stc
cmpsl
movsl
or
addr16
sub
xchg
mov
push
hlt
adc
test
out
addr16
push
mov
pop
mov
add
adc
arpl
jle
and
push
cmc
enter
push
in
mov
xchg
aaa
adc
rorl
mov
subl
clc
mov
inc
std
xlat
dec
sub
pusha
aam
out
ret
dec
inc
aad
imul
lret
iret
lret
inc
jmp
xchg
xor
icebp
xor
lds
out
add
mov
loop
or
push
adc
pusha
je
mov
pop
test
mov
add
sub
test
movsl
and
cwtl
popf
add
pop
out
cmp
lods
popa
jae
add
jo
shl
enter
push
mov
jne
aam
wbinvd
jp
adc
out
ret
mov
push
push
not
pop
out
bound
mov
aaa
pop
aad
lods
adcb
fnstsw
mov
push
adc
sub
jnp
aad
setnp
rclb
jne
inc
loop
mov
cmp
in
ret
xchg
push
fwait
sarl
clc
xchg
xchg
rcrl
test
les
scas
sahf
movsb
pop
pop
mov
in
stos
hlt
ret
jmp
rorb
mov
popa
or
testb
xor
shlb
inc
mov
push
or
mov
mov
int3
jae
jns
imul
mov
ljmp
ret
inc
ret
and
adc
mov
arpl
xor
insb
das
pop
cmp
jae
jnp
mov
test
in
stos
jp
push
push
sbb
pop
mov
xor
les
stos
xor
mov
bound
push
xchg
leave
mov
test
aam
add
fisubl
adc
adc
mov
int
outsb
or
imul
mov
test
lret
jl
push
adcl
xchg
ds
movsl
and
mov
mov
movsb
dec
lods
push
mov
jne
syscall
jmp
dec
sub
shr
mov
jae
add
xchg
inc
add
mov
mov
mov
sbb
xor
push
in
ret
adc
mov
or
push
dec
dec
jp
sub
cmp
xor
lcall
addr16
rclb
dec
je
or
divl
repz
test
push
inc
add
push
aas
mov
push
fidivs
xor
jl
in
sbb
daa
and
roll
movsb
dec
int
out
pusha
ljmp
push
jg
leave
adc
test
jmp
fdivl
loope
mov
jge
out
ret
repz
pop
sbb
inc
and
test
mov
or
mov
push
jge
push
fmull
sub
push
and
sbb
je
inc
cmp
sbb
int3
jno
jle
mov
pop
push
xchg
imul
push
idivl
rcrl
push
sbb
and
and
loopne
ljmp
push
push
fisubrs
jg
mov
mov
xlat
dec
jmp
fcompl
sti
cli
loopne
scas
sbb
nop
cli
inc
int
int3
cs
cmp
popf
xchg
bnd
push
sub
add
fimuls
sbb
icebp
mov
insb
cwtl
fwait
popa
inc
xlat
dec
sub
pop
add
movsl
repnz
xchg
mov
out
clc
sti
sub
orb
icebp
sbb
and
les
xor
inc
xchg
cmp
arpl
fistps
inc
sbb
mov
mov
fstpl
in
and
xor
pushl
pusha
lea
jmp
push
lea
ja
push
add
add
pushf
pusha
cmp
cmp
cmp
pushf
push
lea
jne
push
pusha
mov
inc
call
dec
pusha
imul
fsubl
enter
bnd
sub
imul
and
hlt
xchg
mov
cmp
fnstenv
stos
test
sbb
movsl
cmpsb
dec
stos
inc
or
sbb
cmpsl
insl
cmp
push
sarb
sub
lea
rcl
or
push
xor
js
and
rorb
sub
pop
lret
les
cmpsb
mov
xor
sub
dec
andl
ss
add
fsubrl
push
pushf
lea
je
cmc
cmp
cmp
add
cmc
cmp
call
pushf
lea
ja
call
nop
cld
hlt
call
hlt
sub
pop
in
mov
cmc
pop
jle
sbb
dec
dec
pop
in
sbb
or
ret
repnz
sti
outsb
repnz
inc
and
mov
xchg
cmp
arpl
repnz
hlt
pop
pushf
inc
push
adc
push
aam
xlat
push
decb
cs
fisubrs
in
mov
pop
mov
in
jns
rcl
mov
add
dec
popa
xor
cmpsl
push
xor
mov
hlt
fs
push
out
fisttpl
movsb
scas
call
outsb
mov
push
mov
adc
hlt
scas
sbb
divl
sub
pushf
enter
or
inc
push
jne
js
testb
test
pop
add
jp
out
addr16
iret
lods
jns
stos
pop
mov
sbb
sti
push
sbb
cmp
mov
movsb
notb
dec
imul
shll
xchg
lret
xor
mov
ret
xorb
call
mov
add
and
test
mov
cltd
int
outsb
sbb
in
imul
popa
lock
lret
push
mov
add
pusha
dec
rcll
loope
shrb
push
je
rcl
push
cld
pushf
add
mov
or
movsl
cmp
and
xchg
mov
sub
mov
imul
ficoml
ret
xchg
decl
sahf
ljmp
xchg
pop
mov
out
dec
add
fsubl
xor
ss
lret
into
cmp
mov
mov
pusha
sub
jmp
mov
jns
xor
in
mov
jno
insl
and
inc
lods
xor
lcall
fstpt
and
mov
inc
jl
add
lea
add
sahf
pusha
jmp
xchg
add
in
adc
xchg
sub
mov
lods
fldt
orl
jmp
dec
imul
pop
test
mov
jno
out
fdivl
cmp
and
jp
iret
insl
lahf
xchg
loopne
sarl
xchg
and
rcrl
test
divl
rorl
jns
call
jns
aad
jb
mov
cmp
out
pushf
cld
sbb
xchg
in
push
mov
or
xchg
faddl
push
push
sub
std
dec
ret
lret
sub
mov
xchg
inc
add
popl
sub
lret
cld
inc
test
dec
icebp
cmp
push
or
iret
test
std
dec
mov
and
xor
lea
push
xchg
cmp
sub
lods
enter
shrl
push
mov
movsl
fdivl
loop
loope
insl
sbb
in
test
dec
scas
jbe
add
mov
xchg
xchg
popw
xchg
sub
mov
pop
lahf
mov
mov
movb
movb
lea
ja
jmp
cmp
out
fsubl
mull
testl
les
and
les
mov
sbb
and
test
inc
in
or
jbe
add
outsb
pop
jl
or
mov
inc
cmpsb
and
jae
xor
mov
clc
mov
inc
inc
bound
ljmp
loope
inc
loop
rorl
fmull
xlat
push
sarl
adc
pop
clc
mov
xorb
fldenv
ret
or
out
pop
mulb
clc
fisubrl
mov
pop
mov
fnstenv
xchg
push
jge
ret
lret
adc
test
mov
jb
rcr
std
inc
adcb
out
mov
rorb
or
in
cli
mov
popa
inc
xchg
add
les
shl
xchg
sbb
jmp
inc
shll
jp
push
inc
add
mov
aam
dec
xchg
insl
aaa
add
inc
rolb
sub
jo
mov
cmp
frstor
jp
iret
shll
faddl
les
cmpsl
shll
inc
dec
repz
add
lcall
mov
or
aas
jne
daa
and
in
inc
push
int3
mov
cmp
movsb
sbb
xlat
stc
push
jbe
inc
mov
je
je
xchg
mov
xor
dec
ret
sub
adc
mov
hlt
push
mov
xor
cmp
les
cmp
pop
pop
pop
addr16
and
je
inc
ljmp
push
imulb
xchg
into
lods
xchg
and
inc
in
fmull
mov
ja
popl
mov
sbb
cmp
leave
mov
cmpsl
sbb
xchg
lds
mov
fistl
inc
das
cld
arpl
ror
mov
je
inc
out
fistpl
push
iret
sub
sbb
pop
adc
jp
xor
pop
push
add
mov
pop
pop
xchg
dec
mov
pop
cmp
fistl
lds
mov
lret
inc
ficomps
or
in
fcompl
movsl
cltd
and
adc
and
jp
movsb
push
negb
fbstp
lcall
insb
popa
push
mov
push
out
xchg
lret
ja
movsb
add
xchg
add
push
jl
fsubl
dec
jl
and
xchg
addr16
sar
sbb
push
imul
fisubrl
lahf
addr16
aad
aad
imul
sbb
scas
pusha
adc
sub
or
push
frstor
xchg
sub
call
cs
and
xchg
jg
andl
xchg
fwait
pop
fcom
loop
fsubr
iret
mov
jg
xor
repz
lea
mov
xchg
mov
jg
xchg
xchg
enter
in
xor
and
pusha
push
cwtl
shlb
insl
mov
lret
or
nop
push
stc
aam
xchg
mov
mov
sbb
js
test
push
inc
or
mov
fiaddl
lds
cmp
lret
sbb
pop
jb
dec
and
ds
or
sub
and
sub
or
pusha
adc
cmp
cmc
shl
pushf
test
pushf
clc
add
jmp
ror
mov
bt
pusha
cmpb
call
mov
lea
jb
stc
pushf
xor
clc
bt
cmc
test
setne
call
popa
ja
loop
fdivrl
cli
bswap
mov
push
dec
stc
test
mov
add
fidivl
cmp
mov
dec
jmp
xor
mov
mov
stos
dec
lock
xchg
xchg
fcmovnbe
sub
jo
es
push
push
mov
call
lods
push
sbb
or
jle
add
or
aas
in
clc
in
lds
or
inc
add
sti
icebp
mov
jge
dec
xor
sbb
add
mov
sub
bt
repnz
movl
pushl
lea
jmp
cmp
or
pushf
call
call
mov
fsubl
into
int3
fldenv
mov
jl
int3
inc
or
cmp
cltd
jns
iret
pop
pop
aas
cmpsb
jg
aas
out
push
aam
gs
jno
xorl
dec
mov
add
mov
aam
ss
js
js
into
lea
mov
push
or
loopw
pop
push
ljmp
inc
push
push
sbb
cmp
cmp
add
pop
or
ljmp
sbb
xchg
callw
arpl
cmp
loopne
xchg
dec
test
icebp
adc
dec
push
jnp
jae
ror
mov
or
xchg
add
bts
mov
dec
rcr
rcr
and
mov
push
stc
xor
bt
clc
bt
repnz
movl
push
lea
jne
bsr
sbb
xadd
mov
test
btc
sub
push
pusha
lea
sub
bt
push
sub
call
xchg
jns
loopne
fsubl
fsubrs
out
pop
xor
stc
pop
jae
mov
pushf
insb
stos
cmpsb
inc
push
dec
push
fiaddl
sub
bswap
adc
in
mov
inc
arpl
mov
js
icebp
jp
int3
into
mov
sahf
in
adc
xchg
mov
sub
xlat
jmp
data16
mov
gs
sti
clc
cmpxchg8b
cmp
push
push
sbb
jecxz
or
insl
in
push
fstl
call
fimuls
insb
scas
into
in
add
loopne
fsubrl
adc
dec
lret
xor
addr16
inc
lock
cmc
fucom
ja
cmc
mov
and
fs
jb
or
cld
cs
or
hlt
sbb
sub
pop
mov
add
insl
xchg
mov
mov
sub
fneni(8087
cld
cli
dec
dec
fisubrs
loop
xchg
jnp
fwait
jne
arpl
rcll
fistpl
adc
ss
dec
adc
sarl
js
xor
push
outsl
daa
sahf
faddp
fdivrl
pop
icebp
cmp
les
ja
inc
pop
xor
fs
cmp
lods
imul
fcmovnb
mov
nop
in
jae
pop
pop
mov
pusha
mov
mov
sbb
mov
jns
mov
mov
inc
adc
inc
imul
je
mov
push
out
testl
pop
and
dec
into
cmp
out
repz
xchg
into
in
pop
push
jmp
dec
jg
les
mov
jnp
xchg
aad
ljmp
fistpll
adc
in
faddp
fsubl
bnd
mov
fsub
cmpl
jns
and
ja
or
pop
push
sbb
or
lea
cmp
jns
inc
pop
pinsrw
xchg
mov
pop
pop
sub
jb
pop
mov
fnstsw
pop
loop
and
add
sbb
cmpl
pop
mov
pop
jg
out
push
inc
mov
push
dec
movsb
pushf
ffree
fsub
xchg
xor
aaa
jb
push
imul
xchg
inc
or
loop
arpl
test
loop
bound
or
xchg
push
mov
dec
cli
inc
loop
or
mov
faddp
fdiv
mov
inc
xchg
lcall
xchg
cli
inc
sbb
and
dec
xchg
inc
mov
repz
orl
mov
das
mov
movsl
jo
aas
add
push
es
aas
xor
push
xchg
les
xchg
inc
lods
insb
addl
fmulp
adc
sti
pop
and
daa
cmp
std
sub
ret
enter
negl
mov
lods
adc
cmp
jbe
sbb
xlat
xor
aad
dec
movsb
dec
nop
adc
jmp
lock
test
lock
dec
movsl
cmp
cmp
jmp
xlat
arpl
dec
jg
push
sbb
push
push
rcl
sbb
outsb
pop
sbb
xchg
mov
movsl
mov
ds
sub
cmpl
int
mov
inc
mov
mulb
in
fs
pop
push
ffree
fdivl
aad
mov
mov
xchg
pop
into
inc
stos
mov
scas
pop
xor
lods
xor
sub
andl
stos
inc
test
jns
cmp
cs
and
aam
ret
enter
sbb
ljmp
mov
mov
arpl
add
jecxz
or
dec
into
iret
popa
pop
inc
push
pop
add
dec
jecxz
js
fcmovnb
fdivl
cltd
xchg
sarl
and
inc
and
rorb
subb
out
push
fiaddl
adc
fiadds
cld
es
sbb
ds
pop
scas
xor
push
ja
and
adc
mov
lret
mov
xchg
cmp
push
mov
fadds
fidivrl
or
divl
mov
dec
roll
sub
je
dec
cltd
lret
loope
ja
fst
sahf
mov
add
shll
mov
movzbw
mov
jmp
xlat
cmc
insb
fadd
faddl
push
mov
mov
bound
pusha
mov
dec
fdiv
test
gs
push
mov
or
mov
loop
sub
xchg
xor
sub
xor
sub
mov
dec
test
add
in
bound
hlt
fcmovne
xor
rorl
lds
cmp
shll
rorl
sub
push
sub
jae
or
push
clc
inc
and
loop
addb
mov
or
sub
aad
fildll
bnd
sarb
or
pusha
mov
push
jmp
and
fsubrl
call
lea
cmp
cs
mov
jl
insb
pmaxub
mov
mov
mov
cmp
dec
lret
fimull
xchg
lods
stos
ret
mov
dec
scas
mov
gs
call
fbld
cs
out
fdivrl
dec
in
outsb
mov
jle
jnp
mov
xchg
jge
in
imulb
sbb
stos
in
test
out
xchg
xor
mov
adc
in
or
call
push
stc
add
test
cmp
pushf
lea
jb
bt
cmp
pushf
lea
jae
sar
xchg
sbb
bts
mov
shl
btr
jmp
push
aam
fld
faddl
inc
mov
sbbb
jle
xchg
jge
mov
inc
dec
sbb
clc
outsb
push
loopne
pop
popa
lea
test
xchg
lret
xor
out
sarb
xchg
jp
push
add
push
pop
sbb
in
push
addl
mov
xchg
call
mov
fimull
add
mov
push
icebp
xchg
mov
and
fwait
test
jle
fidivrs
dec
ja
pusha
inc
xorb
and
sbb
movzbl
lea
pusha
call
rol
jmp
mov
fdivr
sahf
mov
stos
xor
mov
mov
cmc
int
push
fsubs
mov
jecxz
or
jbe
add
pusha
mov
test
aaa
fbstp
xchg
rcr
cmp
insl
pop
inc
addr16
rol
add
pop
push
pop
dec
push
rol
imul
or
cmp
xchg
loop
enter
add
lea
je
jmp
and
arpl
ret
mov
sub
pop
xor
add
mov
mov
lcall
cld
mov
mov
mov
push
adc
in
daa
lock
mov
pop
data16
add
int
aam
xchg
hlt
lds
mov
shl
dec
int
insb
mov
ja
mov
sti
push
mov
inc
enter
into
xchg
sti
in
pop
test
roll
mov
insb
mov
inc
fcom
xlat
ret
ficompl
unpcklps
sub
jecxz
leave
xor
idiv
fwait
jle
aas
data16
stc
jle
enter
daa
inc
flds
add
xor
inc
fsubl
sti
insb
lea
test
dec
inc
fbstp
jg
dec
loop
test
arpl
jne
pop
push
movsl
mov
fmuls
popa
jmp
and
test
ret
xchg
lock
and
and
sbb
push
dec
divb
mov
iret
scas
push
leave
jbe
jb
popa
insl
in
adc
rcrb
add
xor
jbe
xchg
jns
outsl
jp
push
jbe
mov
xchg
icebp
jg
loope
insb
cmp
adc
pushl
rcrl
sbb
pushf
mov
mov
pop
inc
icebp
in
mov
push
mov
lahf
or
jns
andl
cmpb
jae
and
lcall
fsubs
shll
fdivrs
sub
jp
lds
mov
jge
lret
sub
jecxz
dec
rcll
test
pop
mov
out
into
jle
mov
inc
mov
sub
push
rorb
fistl
pusha
repnz
jecxz
pop
sbb
cmp
xor
push
cli
sbb
ds
addr16
pop
movsl
inc
mov
add
mov
add
es
mov
int
pop
xlat
addr16
shll
jl
in
loopne
popa
mov
je
pop
sub
pop
xchg
dec
jb
jl
inc
loop
push
iret
mov
ret
mov
inc
leave
cmc
cmp
or
cli
jl
in
sub
clc
je
adc
jns
and
mov
das
jno
setae
repz
push
mull
lods
imul
lcall
jmp
jg
js
ret
out
sub
into
jnp
pop
sbb
jle
into
push
out
addr16
cmc
dec
or
add
loop
add
jl
repnz
mov
and
pushf
or
xchg
fwait
test
cmp
sub
mov
xor
mov
mov
and
push
inc
sbb
stc
cmc
js
pop
mov
les
rcrb
push
jmp
add
push
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
push
ret
int3
movsl
ret
clc
xlat
mov
les
xchg
nop
pop
loop
dec
lods
jnp
jb
popa
das
iret
mov
inc
fnstenv
rorb
xchg
stc
inc
out
inc
jnp
outsl
rcrb
xlat
cltd
fldl
shrb
test
inc
fildll
push
push
out
mov
ja
sub
mov
in
aaa
lea
pop
movsl
cwtl
sbb
mov
fs
push
inc
or
test
daa
js
fdivl
xorl
mov
or
fsubr
sub
mov
adc
inc
orl
pop
push
jbe
lcall
std
aam
fdivl
mov
int3
jno
or
pop
in
cmp
sahf
cvtps2pi
mov
and
shll
cmp
mov
jmp
sarb
cltd
push
scas
movsl
js
pop
cmp
dec
push
adc
mov
mov
loop
jge
or
shrl
xchg
dec
mov
dec
and
ja
aad
dec
test
stos
or
push
shrb
daa
or
dec
or
jno
rorb
sub
xchg
fdivrl
sub
bt
cmc
test
stc
sub
cmp
push
cmp
cwtl
cwtl
mov
call
lea
ja
call
add
inc
jb
ja
imul
mov
aam
fcoml
mov
mov
cmp
loope
hlt
data16
iret
test
ret
test
adc
xchg
inc
push
inc
scas
add
mov
outsl
or
aas
or
adc
test
out
and
hlt
cmpsb
add
add
scas
sahf
xchg
xchg
jecxz
js
aaa
out
fstps
pop
pushf
outsb
lcall
scas
mov
mov
xchg
repnz
shrb
xor
pusha
clc
pushl
repnz
pushf
jmp
out
sahf
xchg
rol
fmull
push
xlat
cmpsl
dec
test
ds
xor
outsb
insb
adc
jno
out
pop
xchg
bswap
inc
dec
xlat
ds
test
ss
xchg
jmp
fistps
movsb
jae
mov
ja
mov
push
or
add
mov
xchg
arpl
inc
int3
xor
mov
ja
cmpsl
and
fcompl
js
add
or
mov
lods
jg
rcrl
add
testl
int
inc
xor
pop
xchg
ret
push
xor
dec
mov
and
ret
xchg
dec
jle
ljmp
cmp
mov
mov
movsl
lock
test
sbb
out
out
sbb
push
push
rclb
mov
adc
imul
cmp
pusha
lea
jbe
bswap
mov
btr
setns
bswap
add
pusha
mov
shl
bt
add
add
shl
rcr
movl
mov
pop
sbb
mov
lea
cmc
cmc
bt
pushf
cmp
movw
pusha
call
call
cmc
bt
mov
sub
cmc
cmp
lea
pusha
lea
ja
jmp
push
imul
fdivrl
fiaddl
lret
mov
push
sbb
jne
rorl
sbb
jb
ret
push
mov
jmp
mov
cmc
popl
mov
jne
jecxz
add
loope
ljmp
test
ret
sbb
cmp
or
cs
test
out
xchg
int
enter
push
gs
loop
sbb
xchg
or
into
sbb
jae
outsl
icebp
jmp
test
add
push
adc
add
and
bound
xor
int
jl
bound
or
xor
das
add
sbb
insb
push
out
cmpsl
dec
sub
shrb
pusha
push
lock
ret
mov
ret
xor
mov
adc
jo
in
push
pop
scas
aas
and
jle
loop
adc
out
shll
xor
sbb
lahf
lock
in
adc
testl
bound
test
das
nop
testl
cwtl
xchg
pop
cli
leave
adc
mov
add
jns
idiv
mov
inc
push
decb
jns
cltd
out
jl
or
scas
fadd
std
cmpsl
std
lcall
ljmp
xor
subl
sbb
pop
lret
pop
and
ret
xchg
mov
outsl
bound
jp
pop
adc
test
sub
das
mov
test
lret
ja
ret
andl
cltd
jle
xor
and
cwtl
out
push
xor
push
imul
pop
fs
mov
js
lods
lods
int
aaa
and
stc
jle
or
shl
mov
gs
sbb
mov
out
dec
pop
shll
rcrl
push
mov
pop
push
pop
les
addl
imul
test
in
addr16
pusha
aad
stos
mov
test
enter
fadds
jmp
jns
dec
addr16
gs
movsw
sbb
adc
add
fildll
rol
cmp
les
ds
adcb
mov
mov
adc
sub
shlb
or
xlat
sti
xchg
jl
xchg
mov
sbb
cmp
movsb
test
and
adc
mov
lret
adc
mov
dec
fcomp
push
and
sub
cmp
stos
sub
sub
shr
mov
rcll
mov
inc
lods
imul
cmpsl
nop
adc
adc
mov
cmp
add
repnz
cmp
dec
loop
xchg
dec
in
mov
jmp
push
ja
sub
imul
cmpsb
sbb
jmp
add
ljmp
cltd
cmc
lea
cld
dec
xchg
sbb
cwtl
mov
mov
test
jmp
xchg
je
sbb
xchg
jecxz
push
lods
jmp
or
mov
xchg
inc
cmp
push
fldenv
dec
pop
adc
dec
jmp
shlb
test
mov
fbstp
or
inc
dec
and
aas
sbbl
mov
pusha
dec
xor
dec
add
ret
push
jecxz
sub
inc
sub
or
xchg
aaa
or
icebp
cwtl
cmpsb
mov
scas
dec
fs
insb
dec
stc
out
loop
je
inc
push
jb
sbb
pop
mov
mov
lock
int3
cld
ret
iret
mov
inc
int
mov
lret
xchg
repnz
or
xchg
xor
fisttpll
push
fs
shll
cli
lret
sub
inc
in
and
outsl
pop
pop
ret
imul
lret
lret
fwait
pop
pop
into
mov
add
inc
sub
scas
pop
gs
das
mov
stc
jne
mov
std
inc
xor
scas
fisubl
jno
mov
sbb
push
adc
xor
nop
test
test
nop
sub
pop
jmp
mov
jg
out
add
addr16
dec
ja
add
cmp
aas
sbb
sahf
cs
mov
mov
insl
cwtl
sub
rcll
cmp
popl
pop
dec
mov
jne
mov
sbb
ds
push
push
lea
or
js
inc
mov
out
icebp
fnstcw
xorl
xorl
cli
imul
shrl
rcr
push
push
mov
or
stos
mov
leave
pop
xchg
aad
push
add
outsl
jg
int3
xchg
or
jbe
sub
outsb
roll
cmp
stc
push
addr16
cmp
iret
cs
and
push
aad
dec
and
lods
jnp
push
das
push
cmovns
mov
aad
adc
cwtl
fistpl
or
dec
xchg
mov
enter
push
add
jne
dec
inc
mov
in
or
int
addb
lahf
popf
mov
hlt
lret
mov
outsb
mov
dec
jo
dec
jle
inc
or
ret
popa
or
xchg
adc
es
je
imul
jb
mov
jmp
out
mov
sbb
jp
push
cld
loope
cld
dec
add
sub
pop
or
pop
sub
push
pop
pand
xchg
pusha
imul
pop
pop
arpl
xchg
pop
xor
stos
xor
cmp
sbb
imul
mov
pop
dec
pusha
pop
adc
imul
out
arpl
add
pop
stos
lods
fprem
dec
cmpsb
add
ss
sbb
cwtl
mov
std
adc
in
mov
adc
dec
adcl
mov
cs
ds
or
xchg
xor
addl
fs
dec
mov
xchg
pop
bound
push
sbb
roll
fimuls
and
rorl
mov
cmpsl
dec
mov
pop
insl
outsl
ficoml
popa
fiadds
sbb
xchg
inc
jge
dec
xor
gs
aaa
mov
sub
fwait
lea
xchg
dec
mov
daa
stos
dec
sbb
mov
ds
daa
push
pop
xchg
inc
aad
lret
jmp
add
lret
mov
inc
add
xchg
dec
inc
jno
mov
mov
ret
mov
push
std
rcl
add
and
rcrb
inc
and
ss
jb
adc
inc
jecxz
aaa
xchg
push
or
imul
fisttpll
sti
xchg
sbb
rcrb
imulb
inc
hlt
out
test
ret
sbb
or
jno
pop
sub
push
insl
nop
mov
aas
into
addr16
shll
mov
sub
xchg
mov
sbb
dec
jo
stc
xchg
arpl
pop
push
iret
jmp
fsubp
into
std
es
mov
pop
mul
pop
dec
cmp
xor
mov
outsl
shlb
jb
lods
into
pop
mov
jbe
sbb
call
insb
xor
sub
cmc
mov
int3
pop
fildl
std
iret
cmp
sahf
je
push
dec
orb
jns
xchg
mov
cmp
aaa
sbb
movsl
repz
movsb
mov
and
mov
and
addr16
push
or
pop
pop
enter
lea
frstor
mov
nop
add
outsb
jne
stos
inc
dec
jb
cld
jbe
ljmp
jno
cmpsl
jp
add
mov
cmpsl
rcrb
or
movsl
mov
mov
mov
imul
imul
xor
mov
js
into
mov
jo
in
aas
insb
arpl
stos
mov
addl
imulb
outsb
js
jmp
adc
push
call
xchg
mov
clc
add
into
push
sub
imul
inc
sahf
cmp
lock
pop
xchg
xor
mov
hlt
enter
mov
lock
push
out
xchg
jge
mov
or
out
pop
xchg
or
and
out
sbb
mov
push
pop
xchg
pop
cmp
rcll
ds
mov
push
xor
repz
outsl
arpl
pop
mov
imul
outsl
in
mov
dec
lock
adc
sbb
mov
add
sub
imul
roll
iret
mov
xor
push
lahf
mov
jnp
push
fwait
mov
sbb
adcl
ret
or
and
and
repz
ror
inc
mov
push
clc
add
pusha
test
push
int3
adc
out
stos
shll
xor
sub
rcrl
aas
xchg
arpl
outsb
cs
sub
cli
lahf
fadds
movb
xor
xorb
dec
inc
shl
inc
pop
jl
inc
cmpl
popf
xchg
push
adcl
xchg
lret
and
pop
pop
mov
into
test
dec
xchg
test
in
imul
fidivl
shrl
pop
inc
push
jle
mov
mov
adc
pop
xchg
add
lret
mov
cwtl
cmp
inc
dec
in
mov
idiv
pop
lea
out
test
jbe
cltd
push
adc
mov
sbb
xchg
mov
sub
fildl
add
push
jecxz
cmp
pop
lahf
fmuls
inc
adc
cmpsl
mov
jb
cmpb
add
cmp
dec
mov
dec
frstor
popf
mov
test
xchg
cmp
cmpsl
push
pushf
dec
nop
dec
mov
sub
sbb
shlb
fisttpll
sbb
fcomp
andb
pop
sti
test
mov
jno
aam
sub
pop
mov
push
outsl
and
leave
dec
and
sti
enter
sub
add
xchg
adc
inc
inc
cs
daa
mov
xchg
add
es
ds
shlb
mov
dec
ss
or
ret
and
outsl
sahf
lods
aad
push
mov
jae
mov
jecxz
adc
mov
out
imull
xorb
or
cmc
sub
jl
cmp
cwtl
into
repz
ret
cmpb
mov
fsubrl
in
and
jbe
hlt
dec
pop
xor
xor
or
jo
push
cltd
in
sbb
xor
mov
testl
push
lret
and
inc
stos
xchg
pop
jno
mov
arpl
xor
adc
je
sbb
xchg
lcall
aas
mov
cmp
cli
cld
inc
push
divb
insl
into
mov
and
sahf
xchg
mov
cmc
xchg
sub
fldcw
pop
pop
insl
push
sbb
sarb
fadds
cs
add
jno
sbb
jp
xor
jl
inc
mov
xchg
or
mov
adc
je
clc
lds
daa
xor
hlt
out
dec
test
xor
jl
popa
loope
inc
sbb
rclb
mov
fcmovne
mov
out
mov
rclb
or
test
or
dec
insb
int3
cmp
dec
sbbl
loop
leave
jle
xchg
andl
fs
adc
rclb
cmpsb
sbbb
sbb
dec
aad
sub
add
or
int
push
cld
repnz
aaa
popf
std
stos
pop
adc
fidivl
push
and
push
pop
jno
adc
mov
lds
cmp
inc
ret
inc
push
out
insb
xor
push
push
or
mov
js
xchg
orb
insb
xor
push
sbb
aaa
mov
fnstcw
call
dec
jns
out
adc
outsb
lcall
mov
jle
sbb
je
and
pushf
sbb
sbb
insl
sbb
jnp
lock
and
mov
lret
mov
rcl
inc
ret
mov
inc
ret
cmp
sbb
and
jb
inc
int3
in
jg
cmp
stc
push
data16
mov
in
pop
xchg
mov
push
sbb
sarl
nop
inc
test
sub
daa
lret
movl
ret
dec
or
fistl
and
sub
aaa
out
or
push
scas
inc
aam
xor
jecxz
test
outsl
pop
test
imul
jecxz
addr16
adc
jbe
inc
mov
arpl
test
pop
push
repz
aaa
push
mov
jnp
imul
push
lock
lret
sub
mov
pushf
mov
jbe
lcall
push
out
xchg
pop
jp
mov
or
mov
inc
dec
fwait
pop
aaa
test
push
jecxz
mov
in
popf
push
in
nop
and
cmp
pop
adc
inc
and
test
pushf
scas
mov
mov
ror
test
or
mov
jmp
inc
xchg
in
mov
out
sahf
cld
mov
stc
xchg
loope
mov
test
mov
pushf
jne
jns
xchg
insb
sub
sbb
lahf
mov
ja
aam
sarb
aas
js
xchg
movsl
int
and
imul
add
addr16
push
pop
mov
xchg
mov
cltd
and
movsb
pop
mov
and
jne
and
insb
sbb
jns
mov
push
aam
fdivl
jg
xchg
sub
sbb
xchg
pop
aaa
mov
call
enter
in
sub
xchg
cmp
jecxz
inc
sub
pop
jo
lds
in
push
or
imul
xchg
dec
push
les
leave
test
xor
fwait
sti
pop
xor
pop
and
insl
sub
sbb
pop
adc
ljmp
lods
xchg
and
mov
pop
sub
sub
push
test
xor
aaa
xor
ror
lea
xchg
inc
pop
mov
leave
popa
test
ss
subb
ss
or
mov
in
ficoms
popa
in
mov
cmpl
adc
js
xor
dec
cli
addb
or
jg
jbe
mov
adc
xchg
xchg
xor
dec
and
int
push
xor
push
push
adc
test
bound
lret
mull
add
push
inc
mov
addl
jmp
push
loope
add
and
shll
pop
arpl
mov
mov
lea
adc
push
into
jbe
jno
jb
lock
lock
fcmovnbe
rcrb
pop
imul
mov
push
cwtl
cli
sub
jecxz
mov
lds
xor
rol
push
mov
aad
js
dec
mov
je
fcoms
add
adc
and
inc
sub
jg
fbstp
add
push
pop
push
daa
cs
ljmp
repz
lcall
mov
and
and
js
rcrb
ret
out
jge
or
cld
cltd
lret
or
push
shl
aad
fnsave
lcall
loopne
jmp
pop
pop
js
test
repz
loopne
aam
testl
mov
jp
loopne
mov
jnp
testb
cld
jge
data16
or
sub
das
mov
dec
add
nop
data16
mov
pusha
pop
add
mov
add
cmp
in
icebp
cmpsb
or
mov
shlb
sahf
sub
cmp
xlat
or
cli
or
sub
cwtl
popf
pop
loope
lahf
mov
dec
stos
popf
ja
movsb
sub
jmp
mov
xor
mov
sti
xchg
cmp
mov
add
xor
leave
fldcw
dec
mov
mov
imul
dec
shll
movsb
push
int
sub
out
pop
dec
pop
lea
loope
add
cmpsl
push
xchg
adc
arpl
jne
xchg
rorl
sub
lds
add
push
test
sbb
loope
cmp
sub
mov
lods
xchg
loop
xlat
mov
fnstcw
cmpsb
mov
add
push
or
xor
lcall
xchg
ret
jae
and
jo
xchg
popf
push
gs
cltd
cmpsb
addl
or
or
test
xchg
jb
jl
mov
in
in
inc
movsb
in
sbb
or
add
xchg
cmc
mov
cmp
add
ja
ficoml
ret
mov
mov
add
mov
ss
jmp
cmc
mov
mov
mov
incl
sbb
or
mov
xchg
push
iret
enter
or
test
pop
loop
insb
adc
push
xchg
cs
out
in
and
aaa
ret
popf
stos
jg
idivb
jb
mov
cltd
mov
int
pop
popf
sbb
and
xor
mov
inc
mov
enter
adc
xchg
jno
int
sahf
mov
jmp
mov
fucomip
prefetch
push
addb
cmpsb
xchg
push
hlt
fbld
mov
push
pop
mov
cli
adc
outsl
mov
adc
xchg
stos
lcall
cmp
cmp
or
xor
push
sub
xorl
scas
jge
push
or
movsb
shl
xchg
jo
add
mov
sub
xchg
outsb
add
pop
sub
xor
bound
and
shl
les
sub
out
sub
subl
out
addr16
out
popa
daa
ret
jbe
push
out
call
loope
sbb
jmp
mov
addb
icebp
push
lods
addl
push
pop
movsb
idivb
sarb
lods
jecxz
movsb
inc
sub
jbe
lret
jnp
mov
orl
std
or
pop
pop
sub
ss
adc
sub
pop
cltd
je
int3
jns
mov
iret
movsb
call
xchg
mov
leave
mov
aas
add
push
out
or
enter
rcr
aas
inc
xchg
in
cmpsb
or
or
pop
pop
adc
push
sahf
mov
loope
jmp
clc
cmp
shll
cwtl
int
cmp
les
arpl
push
mov
xchg
negb
cmp
cmp
cs
scas
dec
add
sub
sbb
pop
fmul
jae
xor
xor
add
push
adc
js
mov
or
jecxz
fsubrp
orl
adc
call
dec
xlat
dec
aam
shlb
or
mov
inc
shlb
cmp
ss
enter
inc
xchg
pop
adc
jnp
test
xor
mov
pop
xchg
sbb
test
and
ret
clc
setle
push
fldt
dec
pop
lret
lods
scas
leave
adc
or
jne
pusha
outsb
add
daa
sahf
inc
sbb
push
dec
sub
jae
imul
mov
cmp
mov
dec
or
adc
aad
jne
cli
idivb
ficomps
mov
cwtl
sub
dec
push
mov
sti
lcall
repnz
test
inc
mov
addr16
jmp
mov
lcall
jecxz
insl
sub
inc
xor
pop
xlat
sub
addb
xchg
dec
sar
daa
pop
sti
jo
cmp
out
mov
aaa
jo
mov
daa
out
adc
cmp
mov
repz
mov
xchg
andb
loopne
ret
push
lcall
sti
and
imul
and
lods
in
repnz
jne
lcall
lods
mov
out
int
xor
xchg
sub
jmp
std
mov
in
mov
lret
push
xor
push
xchg
repnz
ds
cltd
addr16
mov
outsl
push
repnz
mov
and
add
test
arpl
test
adc
lods
icebp
push
dec
stos
jae
dec
divb
or
mov
test
mov
add
push
mov
and
les
pop
inc
sub
lock
push
pop
sub
mov
push
jae
mov
js
xchg
dec
test
dec
fsts
and
cs
push
sbb
xor
cltd
mov
popf
jne
inc
dec
pop
sbb
or
xor
pusha
jno
sub
stos
pusha
push
cli
push
xchg
xor
mov
faddl
daa
imul
outsl
mov
pop
or
cmpsl
subl
ja
xchg
or
xchg
lahf
push
out
xchg
je
pop
mov
sbb
je
in
add
stos
adc
xor
frstor
rcrb
mov
mov
fs
mov
out
data16
les
mov
shrl
lcall
sub
icebp
fwait
ja
push
mov
cmp
push
mov
push
push
inc
cmp
dec
and
movsl
scas
out
loop
push
test
sub
push
hlt
cmp
insl
mov
mov
lret
ret
lds
in
push
xor
push
adc
int
sbb
mov
mov
cmpsl
xchg
adc
jg
sbb
dec
add
cs
mov
pop
out
out
addr16
out
lock
mov
and
sti
jnp
xchg
aas
xchg
js
cmp
push
mov
addr16
pop
testb
pop
das
jecxz
mov
les
cmpsb
mov
ja
xor
mov
and
xchg
cmp
sbb
in
push
cmc
hlt
fists
mov
sub
xor
fistpll
mov
inc
sub
mov
movsb
sarb
and
inc
or
mov
mov
fwait
adc
sbb
inc
stc
je
cmp
mov
inc
xchg
dec
daa
push
jo
and
test
mov
mov
mov
into
mov
sub
dec
push
lods
shll
shrb
ss
add
and
leave
insb
mov
enter
dec
out
popa
pop
in
dec
xchg
bound
xor
xor
enter
push
adc
pop
pop
rol
inc
pop
jmp
and
mov
mov
stc
call
mov
add
inc
mov
lret
or
mov
sahf
mov
inc
aas
xor
lcall
mov
fwait
and
dec
cmpb
mov
mov
push
es
mov
cmpsl
mov
lods
iret
mov
js
hlt
pop
popf
and
out
insl
lahf
imul
or
xor
cltd
push
sub
mov
fnstenv
inc
cmpsb
xor
push
daa
pop
out
popa
jnp
into
leave
add
jbe
lret
sbb
loope
insb
dec
mov
pmaxub
fiaddl
or
jbe
divl
push
and
push
scas
lahf
dec
and
scas
mov
testb
leave
sbb
pop
call
sbb
retw
out
clc
pop
push
xor
pop
mov
jmp
cmp
and
rolb
push
addr16
push
repnz
test
or
mov
lods
loop
fsub
les
stc
xor
iret
je
hlt
popa
add
aam
loopne
test
xchg
push
jle
cmpsb
cmp
mov
out
fcoms
in
xor
clc
movsb
hlt
seta
negl
loopne
movb
xor
add
mov
aas
aas
test
aaa
test
lds
adc
or
imul
xchg
inc
pushf
add
bound
js
push
das
pop
pop
push
call
enter
test
rorl
mov
xchg
pop
call
movsl
ja
pop
sbb
sarl
in
xchg
cli
fdivl
int3
sbb
mov
sbb
push
loop
test
loope
sub
add
xor
sti
adc
test
jmp
adc
fisubrl
aam
arpl
lret
addr16
and
xchg
aas
pop
nop
rorl
xchg
xchg
arpl
fisubrs
mov
int3
sub
pop
je
xchg
fucomi
push
push
rcrb
jb
test
test
inc
rorl
xchg
mul
xor
cs
add
gs
or
mov
sub
sub
stc
dec
test
cmc
cmp
int
movsb
mov
push
lahf
sbb
add
shl
out
ds
adc
sbb
mov
aaa
push
ret
and
push
insb
mov
data16
jb
adc
xor
adc
xbegin
pop
push
sbb
sub
into
clc
and
js
rcl
pop
adc
xchg
daa
and
inc
mov
cmp
dec
pusha
test
mov
mov
inc
cmc
and
aaa
aad
addr16
fisttpll
clc
mov
or
dec
rcl
dec
in
mov
mov
in
sbb
xor
xlat
jmp
cmpsb
rorb
add
addr16
lods
lcall
pop
sbb
stos
stos
push
test
aam
mov
push
stos
pop
mov
mov
add
pop
jb
xor
add
mov
loop
mov
inc
hlt
xchg
and
xchg
jne
pop
fwait
push
jne
pop
aam
imul
idivb
std
leave
mov
dec
push
rol
dec
add
addb
or
mov
push
loop
aas
and
std
or
adc
int3
xchg
dec
xchg
pop
ss
das
adc
test
jns
xor
mov
jmp
movsl
add
cmp
jb
jecxz
fst
pusha
out
push
xchg
mov
xlat
mov
aam
xor
outsl
push
pop
hlt
outsl
adc
mov
and
mov
and
or
dec
cmp
fiadds
jo
dec
sbb
rcll
cmp
push
inc
push
adc
neg
ffree
xor
push
pop
cwtl
ds
cs
jg
stos
scas
inc
mov
aam
dec
mul
push
jno
divb
xchg
jle
and
mov
add
test
adcb
out
dec
ret
ret
outsb
mov
sub
movsl
pop
les
xchg
cmp
ret
es
call
cmpsl
mov
sbb
pop
and
cmp
jmp
movl
adc
push
cmp
dec
cmpsb
push
adc
and
adc
loop
ss
push
arpl
and
cmc
out
add
out
es
bound
add
pop
add
mov
mov
aam
cwtl
jne
and
loopne
xor
imul
pop
addr16
gs
arpl
cmc
outsl
dec
insl
pop
into
push
push
jns
ror
or
testl
nop
dec
add
xor
out
add
in
out
loop
outsb
aas
imulb
loopne
std
data16
pop
dec
leave
scas
cmp
repz
sahf
mov
in
sbb
cld
pop
inc
jle
scas
je
pop
ja
shlb
lret
faddp
scas
mov
dec
xor
rcll
cmp
loope
sub
cltd
add
pushf
ficomps
cmp
or
popa
out
cmp
mov
popf
fildl
push
push
out
xorb
syscall
out
out
icebp
pop
test
addr16
and
cwtl
rcrl
scas
cli
fistpl
and
sbb
mov
adc
sub
clc
pusha
leave
rorl
mov
cmpsb
xchg
jp
or
pop
and
repz
pusha
adc
cmpsl
and
nop
pusha
or
rol
xchg
rolb
fmull
out
push
or
jmp
sub
dec
push
lret
stc
subb
mov
cmp
dec
stos
add
test
dec
dec
sbb
insl
aas
add
mov
outsl
pop
ljmp
sub
jl
cmp
xor
scas
mov
jecxz
pop
jmp
sub
cltd
sub
dec
int
sbb
stos
shll
cmp
mov
jae
add
inc
mov
mov
stos
ds
jl
xor
icebp
xchg
nop
sub
insb
jp
shrl
dec
add
add
in
fisubrl
je
cmp
dec
inc
cmp
insl
subb
shrl
lds
xchg
orb
sub
pop
jge
pusha
sbb
gs
das
movsb
xchg
sub
stos
inc
pop
and
outsl
xchg
dec
push
loope
dec
lcall
inc
xor
mov
mov
pop
enter
jno
hlt
js
push
push
stos
leave
mov
jae
pop
or
and
movq
sbb
dec
push
add
stos
loopne
sbb
add
loop
mov
and
push
and
rcr
cmc
xchg
data16
cmp
adc
jo
imul
dec
cmp
leave
cmp
add
cmp
aaa
jbe
imulb
jb
pop
ret
fmuls
pop
jp
jmp
in
lret
mov
lcall
mov
mov
negl
push
push
imul
bnd
xlat
lods
pop
pop
movsb
inc
dec
stos
pusha
push
ret
add
jnp
leave
adc
add
cmpsl
sarb
jmp
adc
cwtl
cmp
cld
ljmp
mov
jle
stc
insl
rcl
mov
push
and
adc
mov
mov
mov
ds
mov
sub
clc
push
sbb
mov
test
adc
xchg
jl
out
cs
sub
cmp
adc
sbb
imul
and
and
lods
arpl
fbld
inc
sbbl
stc
mov
cmpsb
add
rcr
or
lcall
fwait
pop
xchg
ss
scas
sub
xchg
or
aad
sbb
cmpsl
xorb
or
ret
mov
adc
add
lock
or
xchg
adc
mov
repnz
test
dec
or
jp
inc
ss
sbb
lods
sti
outsl
mov
adc
xchg
sub
mov
pop
inc
stc
push
rorb
push
mov
jbe
lret
dec
jle
xor
jmp
add
test
pop
test
jmp
gs
cltd
jle
mov
and
call
dec
out
mov
or
cltd
mov
call
push
or
je
mov
mov
jae
arpl
mov
and
mov
jno
lret
enter
sub
mov
pop
or
adc
push
in
inc
or
in
sub
dec
je
data16
pop
lock
inc
jae
roll
jg
fwait
push
xchg
stos
mov
scas
inc
or
jg
push
icebp
xchg
add
pushf
nop
sub
lea
scas
jnp
ljmp
xchg
cltd
add
in
enter
les
pop
stc
add
mov
lahf
and
stos
inc
and
addb
inc
xor
and
inc
int
jnp
mov
test
pusha
roll
decb
scas
out
mov
ljmp
fmull
inc
mov
or
scas
and
imul
push
aad
lret
fadds
shlb
imul
jg
push
repz
cmpsl
ljmp
pop
sub
mov
cmpsb
xchg
inc
xchg
jg
pop
ss
xor
int3
xor
xor
or
out
mov
jmp
cmp
cmpsb
gs
inc
aaa
lea
shll
mov
cltd
loope
fisttps
ret
cld
faddl
push
push
shll
cmp
mov
int3
push
sbb
mov
xchg
pop
lods
into
inc
mov
lcall
rolb
mov
push
shll
stos
xor
ja
mov
pop
pop
test
sti
div
and
icebp
pop
jp
loopne
xor
clc
jmp
lret
test
and
dec
adc
mov
cld
xchg
mov
pop
cmp
inc
aaa
lock
je
cmp
loope
sub
mull
filds
push
cmpsw
js
and
pop
outsl
add
and
jge
dec
jmp
mov
xchg
mov
sti
jb
std
cmp
lret
pop
aam
jb
mov
sub
imul
pop
xor
add
or
sub
mov
push
mov
cmp
push
adc
mov
mov
push
cmp
sub
sub
and
jno
dec
sbb
sub
jmp
cmp
movsb
dec
inc
adc
loope
add
jp
lret
int
movsl
stc
bound
adc
jae
cmpsb
ficoms
or
adc
cli
dec
dec
lods
sbb
pop
int3
xchg
pop
arpl
jae
clc
ret
push
fsubrs
pop
scas
or
imul
sub
movsl
and
sub
mov
into
mov
js
sahf
cwtl
sub
test
cmp
adc
jecxz
jg
and
lods
push
mov
in
pop
fsts
shrl
sub
xor
push
ret
xor
and
int
das
aaa
repz
pop
leave
outsl
or
and
add
jmp
ret
movsb
push
and
popa
cmp
xor
lret
out
jbe
sub
scas
sbb
pop
and
jg
inc
popa
dec
mov
cwtl
out
and
inc
ja
or
std
test
sbb
lock
jl
sbb
jecxz
inc
add
sub
leave
or
or
lret
ja
xor
sbb
leave
push
sbb
jl
rol
jmp
dec
cmp
shll
cli
push
shrb
ss
mov
sub
bound
add
out
negl
idivb
sbb
subl
sti
xchg
sbb
xchg
cmpsl
ret
dec
mov
sub
mov
add
push
mov
sbb
orl
push
mov
rcrl
mov
sbb
push
fistps
fists
lock
and
mov
or
movsb
cmc
xchg
xchg
and
dec
mov
inc
sub
ss
push
mov
sub
cmp
xchg
xchg
push
insb
adc
dec
ja
bound
scas
cwtl
xlat
mov
or
subl
out
sub
cmp
cld
orb
fdivrl
xchg
sbb
dec
and
add
adc
out
cmc
push
lds
outsb
jmp
je
ss
mov
jbe
push
int
add
leave
int3
cmp
js
sbb
mov
inc
adc
and
sub
pop
out
add
adc
int
cmpsl
jo
and
pop
mov
es
jbe
repz
adc
or
or
shll
cmp
scas
je
xchg
push
cmp
mov
fcomps
fidivrs
push
jo
ds
add
iret
fdecstp
fwait
ljmp
fildl
dec
int3
divb
mov
or
aam
mov
out
fcomp
or
in
dec
sub
mov
call
ja
add
xor
xor
sbb
mov
pop
mov
cld
xor
std
ds
pop
push
push
sub
xchg
jnp
pop
mov
sbb
and
cmc
hlt
push
jle
sarl
xorl
and
jge
mov
imulb
or
fisubl
inc
pop
in
push
or
mov
loope
ret
sarl
lret
movsl
pop
and
dec
or
stos
in
fldl
loop
scas
mov
int
arpl
stos
push
rcr
repnz
test
dec
push
and
mov
mov
repz
flds
clc
xchg
mov
xchg
and
test
xchg
das
mov
mov
jl
push
repz
mov
sarl
lea
popf
sti
dec
lods
es
cli
inc
into
out
dec
cs
xor
pop
fildll
movsb
dec
cwtl
mov
orb
push
mov
xor
mov
adc
xchg
es
ss
lcall
push
roll
or
pop
repz
add
adc
shld
push
mov
movsl
int
jl
xchg
mov
int
push
es
repz
pop
mov
ficompl
dec
sub
aam
rcrl
nop
aad
in
mov
nop
mov
xor
les
ret
fistpll
fisttps
mov
hlt
xor
cmp
and
cli
cmp
sub
add
cvtpi2ps
inc
mov
xchg
inc
xchg
inc
xchg
jne
push
leave
je
mov
xchg
lock
lret
js
mov
or
cwtl
xchg
outsl
adc
xchg
aad
and
xor
or
push
inc
mov
sub
enter
xchg
sbb
push
dec
dec
ret
imul
adc
lods
lahf
push
loope
mov
dec
rcrb
cmp
outsl
ds
cmp
lahf
xchg
push
mov
ffree
pop
divl
jge
inc
movsb
push
push
jl
repnz
dec
xor
or
arpl
scas
mov
lret
push
push
sub
cli
repnz
out
test
add
cmpsl
ja
push
push
or
sbb
int3
aas
mov
sbb
dec
push
rcrb
pushf
lods
ja
testl
lcall
nop
in
mov
lret
lret
jbe
les
in
push
cmc
imul
shlb
pop
pop
pusha
pop
arpl
dec
addr16
movsb
sbb
into
jns
stos
jp
insl
pop
pop
jmp
xchg
sbb
pop
mov
adc
pop
lea
pop
sahf
imul
push
ds
lods
jecxz,pn
mov
dec
and
sub
push
add
pusha
out
cmpsl
stc
in
aam
mov
leave
sub
cmovne
shl
xor
jbe
jg
nop
ja
sbb
mov
push
xlat
sub
and
sbb
push
imul
push
inc
ret
testb
ljmp
hlt
or
inc
cmp
imul
ljmp
test
dec
repnz
or
and
movsb
mov
pop
sti
jle
xchg
icebp
test
jns
popa
pop
test
sti
adc
add
inc
divl
dec
mov
rcl
jmp
mov
daa
sub
cltd
mov
mov
jae
push
mov
push
jno
cmp
sub
test
adc
mov
jo
repz
sub
in
add
loope
xor
jb
xchg
sub
ja
xchg
ljmp
sbb
add
pop
inc
rolb
gs
ljmp
jl
xchg
jae
inc
imul
adc
sbb
cltd
mov
cmp
add
jb
add
jmp
mov
inc
in
and
ds
push
mov
pop
cwtl
out
outsl
adc
and
push
in
ficoms
or
and
mov
movsb
adcb
mov
orb
add
jg
xchg
pop
enter
jp
and
adcb
add
lret
push
mov
test
arpl
idivl
repz
jg
enter
xchg
inc
mov
pusha
inc
das
mov
sbb
gs
inc
xchg
pop
inc
addl
jge
popf
nop
mov
ja
cmp
rolb
aam
pop
or
fcomps
lahf
bound
bound
sub
sub
ret
xchg
push
ret
sbb
pop
mov
fidivrl
sub
cmp
or
push
femms
pop
xor
sahf
sub
xchg
mull
sbb
lret
push
cltd
lret
adc
je
pop
jle
mov
cmp
mov
ljmp
dec
or
pop
inc
syscall
je
and
pop
pop
and
pop
dec
sub
lret
cmp
lcall
or
mov
cmp
in
xchg
jge
rcrl
pop
lods
or
ljmp
es
hlt
sbb
dec
pop
push
adc
xchg
sub
cmp
rol
inc
adc
push
sqrtps
imul
ret
leave
push
lret
ds
scas
icebp
fsub
sub
add
cmpsb
outsl
hlt
mov
aaa
mov
jg
popf
sub
push
mov
cmp
sbb
cld
imul
and
adc
xor
lea
mov
dec
gs
sub
lret
pop
push
fadd
outsl
iretw
je
push
sbb
ja
dec
test
addr16
pop
dec
or
sbb
adc
cmp
add
add
and
out
adc
aas
fistl
xor
addr16
adcb
push
mov
mov
cld
lds
mov
test
std
mov
filds
sbb
inc
push
loope
sbb
push
adc
dec
xor
stos
in
xor
and
xchg
out
cwtl
fwait
dec
into
push
popf
cmp
outsb
mov
sti
jg
scas
or
sahf
enter
mov
mov
push
lret
mov
jo
pop
push
pop
insl
test
loopne
fistpl
lods
add
cld
je
fisubs
push
push
ja
fsin
shrb
das
or
mov
mov
cmp
mov
or
xchg
aad
or
gs
cmp
pusha
clc
jnp
inc
xor
sbb
ss
lock
xchg
sbb
xchg
push
shl
xchg
nop
rcrb
push
js
cmp
add
std
out
sbb
jne
fs
or
shl
push
mov
pusha
xchg
mov
cmpsl
xchg
xlat
imul
mov
sbb
lock
inc
or
filds
xchg
jo
rcl
push
in
inc
jge
scas
sbb
das
aaa
ret
test
dec
xchg
aaa
cmp
out
into
adc
adc
fs
mov
cs
aas
fwait
jg
jnp
mov
sbb
push
lods
pop
add
outsb
inc
in
mov
cli
and
or
je
loope
test
cmp
je
xor
pop
pop
dec
sub
cmp
xchg
popa
fiaddl
add
aas
xor
push
mov
movsb
pop
ss
dec
lahf
into
aad
lock
jnp
add
xchg
mov
inc
and
adc
sbb
cwtl
xchg
movsl
rcll
mov
in
inc
dec
mov
inc
xor
sbb
add
testb
insb
pop
mov
daa
addb
mov
mov
or
sbb
les
cmp
js
adc
stc
jge
jp
cmp
fwait
dec
jne
idivl
loope
pop
pop
bound
int3
test
xchg
sub
loop
xor
pop
push
sub
xchg
xor
adc
lahf
jmp
cmpsl
aaa
inc
jae
sub
iret
push
imul
or
repz
inc
in
or
movsb
ja
lds
and
sti
or
mov
stc
stos
inc
xchg
sbb
inc
adc
ja
xchg
movsl
mov
push
push
cmpsl
inc
imul
adc
in
inc
fstpl
jmp
jg
pop
push
and
scas
add
and
rol
xor
jmp
jb
xchg
fsts
repz
call
cld
adc
xor
cmp
xchg
shlb
sub
rcrb
lcall
xchg
jg
push
or
and
pop
mov
jb
fwait
cwtl
gs
cmpsb
jns
push
idivb
ss
sbb
or
sbb
cs
inc
mov
push
mov
xchg
sub
enter
cmp
inc
ds
lret
fbstp
mov
adc
and
pop
inc
test
fbstp
cltd
imul
xchg
add
fs
inc
sahf
scas
mov
mov
or
ds
roll
adc
xchg
cltd
ljmp
xchg
xchg
xchg
push
insb
sbb
mov
inc
daa
xchg
cwtl
arpl
dec
mov
push
ss
push
mov
mov
mov
adc
cmc
into
stc
repz
into
jge
ret
push
scas
hlt
mov
ss
sbb
xor
fcmovbe
inc
jb
lods
scas
xor
xchg
mov
test
push
rcll
lcall
adc
fstpl
push
jmp
dec
xchg
std
test
loopne
jge
push
mov
pop
mov
lret
out
test
js
bound
inc
push
and
movsb
mov
outsl
rcrl
mov
pop
aaa
aas
xchg
cwtl
sti
filds
and
and
shll
scas
or
sbb
dec
imul
jo
xchg
fidivrs
and
divb
mov
dec
lds
sbb
or
inc
push
pop
sbb
pop
sarl
xchg
inc
cs
mov
test
cmp
shll
scas
int
ja
push
or
cmpsb
xchg
dec
dec
dec
adc
lods
jno
xchg
pop
dec
scas
mov
sub
cltd
inc
mov
aaa
jle
sbb
das
sahf
xor
xchg
jge
testl
and
pop
ficoml
xchg
mov
insl
adc
push
lea
sti
sti
adc
xchg
mov
xchg
add
and
test
mov
inc
xchg
fldcw
bound
xor
movsl
push
push
testb
adc
movsb
mov
lret
adc
push
lods
ljmp
xchg
pushl
jmp
sahf
dec
jmp
scas
frstor
lret
inc
insb
imul
add
mov
cld
cli
mov
loopne
stc
ss
imul
add
xor
push
pop
mov
pop
icebp
inc
mov
push
shl
and
fsubrp
cmp
out
sbb
aas
inc
outsb
inc
subb
lahf
cmc
pop
xchg
jecxz
hlt
inc
sub
mov
mov
sub
xchg
mov
mov
in
lods
jbe
test
pop
and
sub
loop
xlat
and
je
loopne
mov
mov
ljmp
fcomp
or
xchg
mov
insl
mov
mov
imull
dec
adc
jno
pop
jmp
fistps
adc
push
push
mov
clc
dec
adc
aaa
or
repz
mov
les
push
test
jno
stos
ficoms
out
push
test
into
mov
cld
xchg
sbb
dec
sbb
mov
dec
push
pop
cmpl
pop
cmpsl
dec
and
cmp
xor
ds
lods
mov
or
fadds
mov
pop
push
cmpb
jae
in
test
test
shl
fldenv
or
fcomps
ss
pop
mov
or
jle
int
loop
fsubs
xor
xlat
sahf
xchg
shll
dec
daa
fsubp
es
stos
in
lret
or
and
sub
clc
mov
ja
popf
or
push
xor
mov
push
nop
pop
insb
push
add
push
add
add
push
aad
mov
cwtl
add
cltd
inc
in
daa
aam
push
adc
sbb
pop
sub
jmp
lods
push
scas
push
mov
lock
dec
push
adc
push
inc
mov
mov
jl
dec
fildl
jle
mov
push
cwtl
shrl
out
and
xor
jmp
sbb
sub
mov
daa
pushf
std
lret
hlt
dec
mov
xor
je
std
scas
xor
das
scas
mov
or
clc
or
popf
pop
mov
or
add
paddw
test
jmp
out
mov
add
add
mov
push
pop
bound
or
dec
pop
or
lds
ja
push
jecxz
cmp
hlt
mov
cmp
jp
iret
add
in
pop
scas
cltd
push
adc
je
out
add
lea
or
cmp
testb
sub
push
fisttpl
pusha
ja
xchg
push
cmc
push
dec
ficomps
or
lods
movswl
outsb
jg
mov
ficomps
xchg
and
das
or
or
sub
mov
adcl
sub
stc
sub
cmpsl
jo
adc
fisubs
cmp
fldl
test
push
aaa
mov
cmpsb
dec
out
xor
mov
adc
add
std
lcall
testb
jl
dec
sbb
ficoml
repz
and
repnz
sahf
cmpb
pop
nop
jne
mov
inc
movsb
dec
jle
loope
aam
sub
ror
jge
sbb
cmp
int3
ret
jmp
imul
mov
jb
add
mov
lret
xor
rorb
into
inc
pop
or
sub
bound
push
loop
dec
push
testb
imul
pop
jecxz
iret
gs
addr16
ret
mov
sub
mov
pusha
cmp
fs
jl
or
roll
dec
sub
mov
hlt
or
inc
fwait
jl
pushl
mov
dec
jmp
test
cmp
and
xor
mov
idivl
fdivrs
in
pushl
cmp
and
hlt
xor
jg
aad
xchg
xchg
pushf
movl
call
clc
shr
pushf
movb
adc
stc
sub
movb
call
stc
bound
ret
mov
mov
pop
cld
scas
jge
pop
pusha
sub
mov
dec
js
pop
cld
fwait
or
jmp
dec
outsb
pop
push
popa
adc
lcall
mov
sahf
leave
mov
push
push
call
mov
pushf
lret
pop
dec
stc
sbb
inc
sub
mov
or
jmp
call
fcoml
test
fs
les
pop
stos
push
jb
cmc
mov
add
cmpsl
mov
mov
pop
and
loopne
xchg
clc
imul
test
xchg
cwtl
cmp
push
pop
push
or
xchg
sbb
pop
inc
shr
aam
stos
cmp
mov
add
push
xchg
inc
cmp
cld
mov
sbb
das
mov
inc
fbld
out
outsb
mulb
cld
xor
cmpsl
pusha
daa
icebp
xchg
or
sbb
test
xor
add
add
add
inc
add
jmp
pushf
pusha
lea
pusha
pushf
pushf
lea
jmp
rol
mov
or
lret
mov
xlat
movsb
cmpsl
dec
arpl
testb
push
std
data16
push
sub
fildl
test
push
mov
add
fs
or
lods
shrl
xor
ret
dec
xchg
xor
and
iret
icebp
xor
fsubrs
ret
mov
inc
out
sbb
mov
lds
cmpsb
push
push
pop
mov
jecxz
jne
fistpl
popf
and
or
push
add
dec
rorl
ret
ds
jle
scas
sub
or
aad
das
pop
or
adcb
sbb
fidivrs
adc
insb
dec
xchg
sbb
adc
mov
dec
movsb
jbe
in
jb
mov
faddl
cmp
rclb
scas
mov
add
gs
add
inc
cmp
adcb
sub
jl
mov
sbb
adc
cmp
out
sbb
bound
fdivrl
pop
fcompl
cld
inc
leave
repz
jg
pop
aaa
xchg
rorb
sbb
int
cld
mov
mov
push
std
dec
icebp
ret
add
out
cmp
xchg
adc
popf
inc
movsb
stos
lahf
push
or
sbb
data16
jae
cmc
lret
sub
ss
mov
push
mov
jl
dec
jge
test
fs
inc
add
or
push
ja
inc
pop
ret
jo
cwtl
ret
test
js
and
scas
ret
lods
pop
xor
mov
xor
sti
roll
aaa
sti
loopne
mov
cmc
cmc
inc
gs
xchg
dec
lds
cmp
sbb
lret
popa
pusha
and
nop
mov
pop
pop
push
mov
jae
cmp
xchg
fildll
xchg
push
xchg
aam
stos
imul
lahf
bound
fildl
pop
cwtl
ret
dec
push
mov
cmp
xlat
pop
dec
sbb
sub
hlt
lcall
jne
jb
inc
jbe
inc
push
inc
arpl
pop
adc
stos
xchg
and
pop
adc
xchg
push
test
jnp
pop
cs
orl
sbb
jae
mov
adc
repnz
pusha
les
outsl
mov
fsubl
icebp
inc
mov
jnp
bnd
pop
xor
cmp
push
movb
lea
jne
das
test
bts
xor
and
shld
pushf
mov
adc
shl
adc
add
ror
not
sar
mov
pusha
test
call
jne
gs
xor
fs
insb
add
stos
rorl
leave
ret
pushf
call
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
test
mov
ret
mov
dec
jle
push
xchg
mov
mov
xchg
ljmp
jb
adc
ret
popl
fistps
inc
test
xchg
add
pop
jmp
es
js
out
jbe
add
mov
pop
aam
sub
lods
addr16
das
xor
fidivl
cmc
mov
stc
jp
inc
jae
jge
xor
or
ss
xchg
roll
pusha
add
lea
mov
fstl
cltd
int
mov
int
loop,pt
or
xor
scas
and
hlt
loopne
pusha
pushf
jmp
bt
mov
stc
rcr
inc
mov
shr
mov
pushf
clc
sub
stc
repnz
push
pushl
movb
pusha
lea
jne
clc
bsf
inc
sub
mov
push
xor
jmp
jo
pusha
mov
lea
not
mov
movsbw
bswap
not
movzbl
mov
push
mov
movsbl
movzbw
movsbw
pop
pusha
pushf
pushl
ret
lea
jne
sub
movzbw
mov
call
pop
not
mov
call
add
add
cwtl
jmp
arpl
xchg
ret
lahf
add
mov
push
xchg
xor
adc
icebp
mov
test
jle
daa
out
cmpsl
cmp
xchg
push
push
sub
add
sbb
addb
js
mov
out
lcall
stos
arpl
pop
lods
mulb
fsubrs
ds
cmpsb
pop
push
xchg
cmp
sbb
loop
shr
jp
nop
dec
pop
dec
loope
cmpsl
repnz
push
std
mov
gs
add
jb
outsl
inc
stos
mov
dec
ret
xchg
xchg
inc
gs
lcall
mov
sub
jno
jae
sbb
cwtl
add
in
scas
sbb
push
std
xchg
mov
add
push
stos
ss
pop
int3
nop
loope
lods
rclb
pop
mov
int
add
inc
fldpi
ret
ret
cmp
jg
icebp
idiv
jmp
push
mov
xchg
ret
sub
pop
shr
push
fisubrl
bound
cmp
imul
add
stos
out
sub
push
xchg
gs
cli
push
popa
mov
push
mov
add
subb
mov
out
or
sbb
loopne
mov
lea
mov
es
movsb
imulb
in
sarb
aad
jmp
adc
mov
xchg
leave
fdivs
jmp
lcall
sbb
scas
mov
aad
imul
cmp
add
dec
shl
cmp
mov
ss
call
push
add
test
stc
stc
movzwl
lea
bswap
shl
mov
pusha
add
test
mov
mov
test
test
push
lea
je
stc
pusha
add
push
cmp
mov
lea
jb
jmp
mov
movb
pushf
pusha
call
jmp
xor
shrd
aam
sub
sub
mov
not
add
sub
inc
ror
mov
cmp
mov
test
test
movb
call
or
loop
ret
aam
cltd
mov
fisttpll
aaa
mov
push
xor
mov
loop
movsb
sbb
leave
rorl
out
mov
loope
dec
shrb
inc
sub
cli
fucomip
mov
cmp
sub
pop
sub
testl
jmp
int3
push
adc
repnz
or
lret
cmpl
add
pop
lods
les
loopne
les
push
aaa
cli
add
outsl
xabort
in
movsb
mov
shll
add
int3
and
and
bt
pusha
cmp
jmp
push
jmp
push
pop
xchg
ret
push
inc
or
inc
mov
aad
adc
ror
popl
xchg
lds
scas
mov
insl
test
cmpsb
cmp
insl
mov
subb
inc
mov
xor
inc
popa
mov
add
int3
loop
fsubl
addr16
std
leave
jo
sbbl
out
hlt
jno
adc
daa
fisubl
and
and
mov
loop
add
cwtl
jno,pn
ljmp
shr
es
sub
mov
clc
xor
frstor
loope
jns
call
jecxz
addl
jp
inc
test
pop
xchg
dec
cmp
ja
stc
and
and
mov
sbb
push
jae
pop
movsb
mov
add
imul
sti
sbb
daa
mov
stos
hlt
add
inc
js
je
jb
arpl
jae
pushl
jmp
pusha
jmp
inc
imul
nop
ret
out
push
cmp
add
out
sub
in
lcall
insl
push
js
arpl
and
mov
lcall
in
lods
testl
adc
data16
jne
rcrb
enter
enter
sti
jg
pusha
movsb
push
sub
push
dec
std
adc
xchg
lea
xor
sub
jne
fadd
xor
xchg
ret
addl
jb
lcall
inc
fs
xchg
bound
lods
xchg
fcomp
push
data16
push
mov
outsb
xchg
jp
sub
in
cwtl
dec
pop
popf
sbb
sub
cmpxchg
fdiv
sub
dec
dec
mov
add
fsubrl
in
sbb
mov
inc
mov
add
sub
imul
xor
mov
sub
jp
outsb
loop
lea
xchg
sub
call
imul
cld
mov
or
push
xor
imul
ret
adc
leave
aas
xor
loope
pop
addr16
in
popf
jmp
sub
imul
stc
call
pop
loopne
test
and
jmp
cmp
mov
inc
adc
dec
pop
mov
repnz
mov
pusha
aad
jb
and
fbld
inc
sti
mov
jbe
jl
out
mov
cmp
xor
xchg
xor
xchg
popa
cmpsl
pop
dec
ds
leave
add
mov
mov
cmpsb
adcb
xchg
mov
pop
fmull
cmpsb
mov
repz
ret
test
aam
in
outsl
jmp
sbb
sbb
and
test
loopne
loop
mov
xor
dec
imul
push
rclb
lcall
sar
dec
adc
xor
clc
xchg
stc
mov
jmp
inc
and
mov
outsb
mov
mov
push
loop
into
adc
xor
sti
ja
movb
mov
setnp
call
call
movb
xor
bt
pushl
push
ror
call
mov
pop
xchg
mov
jp
or
dec
push
pop
xchg
cmc
fnstcw
aas
mov
aad
cli
jp
mov
xorb
adc
pop
pop
pop
dec
inc
sbb
cmpl
rcrb
jae
sub
jge
int3
cmpsb
popf
aas
cmpsl
jbe
int
into
xlat
sbb
fcmovnbe
mov
aaa
adcl
out
mov
jle
lcall
pop
std
xchg
fs
ss
push
pop
lret
mov
inc
and
movzbl
lea
jne
push
push
mov
pushf
lea
jmp
pushl
popl
movb
pushl
ret
pop
and
mov
fdivl
or
inc
push
xlat
lret
inc
cmp
mov
push
fxam
dec
fstp
lods
or
push
iret
push
sarl
in
push
inc
fwait
leave
lcall
aas
in
test
dec
pop
dec
fstps
test
test
loope
lods
popa
mov
pop
jne
xor
sti
jl
sub
xchg
cmpsl
mov
ret
mov
arpl
fnstcw
jnp
pushl
lea
js
pop
pusha
not
call
nop
jmp
mov
fsubrl
iret
dec
or
popf
pop
call
inc
inc
push
jno
fwait
add
mov
mov
stos
jmp
outsb
test
or
inc
in
bound
andb
adc
pop
and
xchg
je
cmpsl
mov
loopne
push
jge
icebp
sub
scas
pop
loope
mov
js
xchg
pop
sbb
andl
push
orb
inc
dec
rorb
mov
mov
push
dec
dec
js
lahf
movsb
inc
dec
scas
dec
pop
xchg
xor
std
jecxz
jo
lods
cmc
xchg
fcoms
inc
jecxz
shlb
enter
sti
loope
xor
aad
jl
ret
cmp
ss
imul
mov
and
push
xchg
mov
xor
xor
inc
out
cmp
les
popf
aam
or
out
stc
dec
popa
in
lods
adc
in
mov
das
pop
jle
lods
xorl
out
sbb
out
sub
sbb
push
sbbb
out
mov
imul
adc
scas
js
mov
scas
imul
dec
and
add
cs
jmp
cmp
fdivrl
inc
jg
into
lock
imul
lcall
daa
je
jno
in
shrb
or
push
push
stc
mov
cmp
in
inc
jnp
jg
fldt
dec
or
xor
bnd
xchg
xchg
test
xor
lods
imul
movsb
push
jmp
dec
pop
repnz
push
cli
les
clc
fwait
shlb
pop
mov
fdivrl
ret
aaa
adc
insl
gs
add
in
ret
arpl
jl
adc
dec
or
mov
mov
push
sub
sbb
aaa
cmp
pop
stc
lret
mov
orb
shr
jmp
push
push
push
dec
adc
jnp
cmp
adc
mov
cmpsb
mov
mov
xlat
push
dec
mov
push
cmp
and
mov
push
roll
sahf
dec
mull
enter
lea
call
adc
add
rorb
sbb
sub
insb
push
ret
xlat
mov
lods
adc
mov
imull
jo
imul
fdivl
xchg
hlt
push
filds
add
popf
outsl
cmp
xorl
cltd
mov
cmpsb
js
sub
mov
sbb
in
jl
pop
cwtl
xlat
cmp
movsb
sub
scas
iret
sbb
pop
xor
stc
xchg
movsb
cmp
jbe
movsl
jns
loop
scas
mov
ret
cmp
mov
xor
lcall
clc
arpl
js
sub
add
out
pop
addr16
dec
fxch
sub
lcall
jecxz
imul
push
movsb
mov
movl
and
or
mov
int3
cld
cmp
data16
in
mov
fidivl
loope
xchg
cld
mov
pop
sub
mulb
adc
lcall
repz
call
jmp
add
mov
fcoml
sahf
xchg
sti
fstl
mov
push
into
ret
insl
mov
sahf
dec
mull
mov
scas
ds
mov
test
jb
add
mov
jno
mov
aaa
aas
lret
cmp
ss
xchg
cli
dec
aaa
inc
fsubrs
ret
lahf
push
xchg
addl
subb
xchg
adc
or
hlt
xor
cmp
sub
push
or
or
push
jno
out
mov
jns
mov
pushf
pushf
pusha
movl
pushf
movl
jmp
dec
int3
les
add
es
stos
mov
movsl
push
nop
movd
cmp
dec
add
popa
and
cmp
push
movsl
jo
cmp
pop
mov
lea
jbe
js
sub
mov
ficompl
push
inc
inc
or
lcall
loope
xor
sbb
loopne
in
aad
lahf
pop
push
scas
sbb
push
pop
inc
cli
inc
cmp
aaa
push
dec
test
xchg
cwtl
cmp
lods
movsb
mov
fsubr
stos
pusha
ret
mov
adc
sarb
popw
test
scas
jmp
rcrb
scas
outsb
sbb
repnz
pushf
popl
clc
xchg
addr16
int
rorb
aad
aam
or
add
mov
pop
cmp
cli
ljmp
hlt
xchg
daa
jmp
mov
cmp
inc
adcb
push
dec
ficomps
nop
das
rclb
adc
lea
pushf
jmp
aas
xchg
mov
add
pop
fistpl
sbb
aaa
in
add
mov
arpl
xchg
push
jne
leave
out
and
cmp
inc
pop
pop
ret
ljmp
iret
mov
rolb
insb
xor
inc
fisttps
shll
push
loope
addb
and
adc
test
push
dec
jno
and
jne
addb
dec
adc
pop
decl
or
push
add
fcmovu
xor
imul
data16
int3
jo
loopne
lea
mov
cwtl
pushl
mov
cwtl
lahf
mov
setp
lea
lea
jb
pusha
jmp
movb
pusha
pusha
lea
jne
or
bt
btr
rcl
mov
call
bt
bt
mov
ror
cmc
stc
test
call
and
xchg
fcompl
dec
xor
insl
int
mov
xor
cld
jecxz
lret
sub
mov
add
mov
leave
push
ret
xchg
and
jae
das
xlat
aaa
in
in
xchg
inc
or
push
lods
push
std
iret
xchg
mov
les
leave
add
out
push
xor
push
xchg
aas
ss
es
jmp
cwtl
sbb
sub
jle
pop
add
test
es
imul
pop
mov
add
ja
je
add
dec
call
xchg
stos
mov
ret
mov
lds
jbe
testl
lret
add
sbb
mov
popa
cmp
pusha
mov
clc
nop
mov
pop
fbld
pusha
xor
dec
or
xchg
out
inc
enter
push
pop
jl
mov
imul
notl
es
pop
mov
xchg
dec
cmp
loopne
js
xor
add
rcll
lock
and
sti
pop
movsb
add
aam
mov
mov
pusha
movb
mov
call
jecxz
lcall
sahf
xor
test
scas
outsl
jns
sbb
mov
loopne
inc
ja
jge
repnz
sbb
xchg
sub
ds
mov
add
fdiv
adc
xlat
imul
mov
leave
xchg
xor
jge
loope
movsl
shrl
fstpl
or
or
xor
stc
pop
insl
mov
lcall
decl
push
inc
push
xor
cs
dec
dec
add
or
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
test
fsubrl
les
push
out
ljmp
hlt
scas
xchg
ret
mov
les
and
lret
or
loopne
in
push
les
jne
mov
mov
negb
in
inc
popa
das
jg
loop
dec
xchg
pop
leave
inc
sub
jg
insb
pop
mov
pop
xor
mov
dec
pop
in
in
js
mov
sti
xlat
sbb
mov
inc
cwtl
scas
xor
pop
rcrb
or
pushf
fisttpll
adc
cmp
test
lcall
les
mov
sub
inc
stos
insb
inc
mov
bnd
xor
imul
fistpl
mov
xor
incl
push
loop
and
mov
not
pusha
xor
sahf
and
leave
inc
out
cmp
loop
push
pop
test
inc
movsb
sbb
adc
pop
movsb
cmp
ficoms
cltd
sbb
cmp
pop
sub
xchg
adc
mov
xor
adc
dec
cmp
bound
test
sbb
sahf
mov
stc
leave
nop
mov
je
loop
icebp
push
imul
pushf
stos
push
and
aad
movsl
xor
push
jg
push
arpl
lods
aaa
or
les
jmp
mov
and
jg
inc
sub
mov
enter
mov
es
lods
fsub
or
jae
fisubl
cltd
shrl
xchg
ljmp
inc
std
or
std
sahf
int
shlb
fs
call
jnp
pushf
pushf
lea
jb
pushf
shl
bswap
movzbl
stc
pusha
pushf
shr
bt
imul
pushf
movw
lea
pushf
push
movw
lea
jmp
xor
cmp
fisubrs
pop
jno
sbb
sbb
add
push
jl
mov
sbb
xchg
icebp
fsubr
xchg
gs
add
adc
in
ljmp
cmp
lret
or
mov
push
hlt
pusha
and
icebp
add
rcll
lods
inc
mov
pop
js
adc
jne
jle
mov
std
insb
nop
sub
ja
mov
inc
xchg
jne
fsubrp
movnti
je
dec
iret
xor
adc
scas
dec
rol
xchg
jb
add
cwtl
jo
cmp
shrb
push
adc
sbb
cmp
test
sbb
cmp
cmovno
or
xchg
fnstcw
push
push
or
shlb
push
jo
cmp
aaa
out
push
and
bound
pushf
xchg
fsubrl
fadd
std
add
adc
mov
xor
out
mov
ret
add
pop
aas
dec
call
adc
mov
or
fadds
inc
arpl
jmp
mov
push
inc
xor
xchg
test
scas
sub
or
add
test
stc
add
pusha
lea
jmp
push
push
movb
movl
mov
mov
mov
lea
jmp
mov
mov
ret
movq
lcall
cs
pop
mov
stos
sbb
fimuls
sbb
xchg
popa
sbb
lods
dec
hlt
jmp
push
inc
in
mov
in
inc
loop
jl
ja
movsl
in
and
test
mov
and
js
cmpsl
leave
pop
sub
pop
sub
mov
add
int
pop
adc
stc
out
mov
les
or
subl
imul
aam
xchg
test
add
add
call
add
dec
outsl
arpl
inc
jb
add
xchg
sbb
or
pusha
lea
jne
shl
shr
sbb
mov
cmp
call
pushf
lea
je
jmp
cmpb
jmp
ret
ljmp
mov
int3
mov
mov
or
mov
cmp
jb
and
in
mov
stos
aad
mov
aam
jle
pop
outsb
mov
outsb
dec
outsb
push
es
mov
mov
xor
daa
dec
fidivrs
mov
subb
jp
movsl
jae
cmpsb
ds
pop
out
and
iret
sbb
xlat
or
sbb
movsl
pop
cltd
mov
in
push
pop
and
inc
pop
jne
fadds
dec
call
cmp
imul
push
clc
call
push
nop
fwait
jg
fcoml
flds
sbb
pop
loop
and
xchg
dec
inc
dec
xor
aaa
jno
nop
incl
dec
int
testb
je
pop
mov
xor
ss
push
inc
jne
dec
adc
or
int
leave
outsb
sub
test
mov
jbe
or
jp
fs
pop
jmp
mov
daa
mov
sub
push
xchg
test
hlt
js
inc
push
mov
xor
inc
jns
mov
jg
fmull
mov
sub
les
push
mov
nop
cmpsb
inc
mov
test
rclb
adc
call
ret
fidivrs
sbb
and
xor
dec
insb
and
cli
and
mov
push
stc
mov
or
xor
outsb
dec
xor
jnp
mov
xor
scas
es
mov
pop
pop
fs
lds
fmulp
test
mov
popf
xchg
ja
fstp
out
fyl2x
addl
adc
mov
jne
push
push
in
mov
push
ja
popa
inc
notl
jbe
stc
pop
or
dec
cmp
dec
push
mov
mov
aas
jp
mov
mov
call
jle
fmul
lods
scas
lea
and
sbb
mov
adc
daa
stc
push
int
push
mov
sub
pushf
cmp
leave
jecxz
fisttpl
inc
nop
out
mov
push
fmull
push
inc
xor
mov
pop
fisttpll
clc
fwait
push
jb
pop
int
in
or
repnz
xor
rcr
mov
dec
pop
fnstenv
cmp
fisttpll
pushf
push
clc
insb
lds
xchg
pop
idiv
stc
cmc
call
mov
pop
pop
mov
call
movb
mov
push
pushl
ret
mov
jge
add
je
movsb
dec
inc
pop
pop
dec
inc
jb
aaa
and
mov
jmp
test
test
jns
scas
pop
or
loopne
dec
ret
arpl
pop
popa
xchg
xchg
inc
sbb
inc
cld
mov
mov
inc
adc
dec
xor
fxch
xchg
popf
lret
push
jmp
fdivrl
push
loope
outsl
mov
pop
popf
ficomps
or
xchg
das
xor
mov
mov
rorb
sub
call
inc
in
in
scas
in
movsb
mov
adc
in
or
sbb
mov
idiv
push
xor
jge
fmull
mov
jae
fs
fwait
out
pop
fdivr
fwait
xorl
xlat
daa
push
adc
fidivs
push
lock
pop
push
and
outsb
inc
test
sarl
xchg
fwait
push
cltd
jo
rcll
je
dec
xchg
test
inc
outsl
push
dec
cltd
xor
inc
adc
jmp
dec
movsl
sub
iret
daa
jb
adc
in
shl
addr16
fcompl
pop
cmp
mov
mov
cltd
inc
push
adc
and
mov
cmpsb
xorb
xor
pushf
out
dec
div
gs
push
cmpsb
xor
pop
outsl
add
repnz
or
inc
cmp
xor
popf
je
cmp
data16
inc
sbb
mov
mov
scas
xor
mov
jbe
or
scas
inc
mov
lret
addr16
inc
cld
inc
push
pop
pop
dec
ds
mov
pop
jo
sbb
inc
lock
std
cmp
and
ret
adc
or
inc
out
mov
mov
out
pop
test
icebp
pop
sub
mov
ret
pop
icebp
jns
add
sub
push
loopne
pop
xchg
jo
imul
or
and
xor
fisubrs
dec
inc
jne
jmp
dec
pop
psubq
out
stos
data16
fiadds
adc
gs
cli
jnp
fsubrl
jns
adc
cmp
cmp
push
ret
fildl
add
sbbl
xchg
das
popa
repz
mov
jns
or
out
ror
movsb
enter
adc
cmc
or
sbb
adc
inc
lea
and
sub
sti
sarl
xchg
and
aas
xchg
mov
mov
or
and
mov
test
loop
popa
mov
sbb
sub
repnz
dec
in
and
in
add
and
mov
stos
ja
repnz
in
lock
clc
iret
jg
sbb
sbb
rorb
insl
ja
aad
xor
insb
inc
int
and
inc
daa
inc
paddw
jns
mov
push
cmp
gs
push
rcl
bound
pop
sub
inc
dec
fsubl
push
push
sub
cmp
adcb
push
sbb
inc
popl
sarb
test
aam
fisttpll
pop
movsl
psrld
mov
cmp
push
sub
push
stc
cmpsl
mov
int
fs
jb
jno
clc
pusha
cmpb
pushl
call
fs
aas
jp
fcompl
xchg
add
adc
movsl
or
sub
mov
test
mov
mul
or
jmp
adc
loopne
and
jns
lock
pop
fwait
mov
inc
mov
fsubr
fwait
add
push
fwait
mov
xlat
movsl
cmc
jl
popf
cmp
and
in
xchg
dec
push
or
ljmp
lret
es
stc
mov
dec
orb
das
daa
loope
fs
aas
pushfw
pushf
lea
jne
pusha
bsf
mov
bt
test
mov
neg
xor
not
sbb
xchg
mov
pop
pushf
setns
jmp
xchg
rol
add
mov
pop
clc
shl
lea
clc
mov
jmp
imul
sbb
repz
jne
sbb
push
fldcw
pop
in
test
fwait
je
mov
cmp
int
push
fwait
sub
mov
mov
cmpsb
lret
out
mov
js
fcompl
mov
adc
xor
jg
xchg
pinsrw
and
jmp
inc
shll
rorb
lock
lahf
sbb
test
idivb
push
notb
es
test
pop
push
nop
xchg
lea
jns
xchg
mov
jmp
sub
jne
mov
inc
push
sahf
cmpsl
rorl
fbld
loop
push
or
aaa
arpl
dec
or
xor
or
orl
mov
adc
lods
xchg
inc
iret
xchg
mov
add
and
notl
test
and
cmp
dec
lods
pop
cmp
bound
jne
jle
pop
add
pop
and
lret
cmc
cmc
cltd
pop
sbbl
hlt
js
daa
xorb
cmp
mov
push
lcall
lcall
push
lods
push
pop
out
fwait
lock
cmp
jne
pop
push
std
pop
fdivs
data16
repz
push
jp
lock
ret
outsb
jmp
mov
cmc
and
out
es
fidivrs
or
or
cmpsl
cmp
ja
fsubl
inc
cltd
test
imul
jo
out
jp
pop
xchg
mov
shl
lods
imul
aas
outsl
add
jo
cs
jne
cmp
pop
xchg
arpl
inc
loope
add
popa
xchg
xchg
and
loopne
imulb
addr16
jle
xchg
cmp
mov
lret
popa
pushf
mov
inc
outsl
push
movsl
push
lods
orb
inc
adc
aad
shl
inc
add
mov
addr16
sub
cmpsb
cmp
cs
lea
bts
xor
setg
xchg
pop
jmp
push
push
dec
ja
fsubrl
cmp
sub
mov
pop
inc
mov
ljmp
fldcw
inc
or
sub
lods
xor
cmpsl
mov
in
jmp
sub
stos
movsl
cmp
mov
lret
sbb
inc
xor
fcompl
xor
fcmovnu
xchg
mov
adc
ror
pop
mov
ja
fs
ret
popa
and
in
daa
xor
popf
das
clc
cmc
stos
inc
loope,pt
repz
dec
not
sbb
sub
mov
jnp
inc
loope
movsb
add
xchg
mov
jp
scas
push
mov
xchg
ret
mov
data16
mov
sbb
push
xchg
scas
aad
add
lock
out
push
xchg
std
cmc
jns
sbb
pop
push
addb
cmpsl
rcrl
xchg
jb
js
les
push
or
mov
dec
in
jns
jp
adc
inc
movb
xchg
cs
gs
negb
cmp
in
inc
fisubs
push
pop
movsb
push
loopne
pop
stos
in
shrb
je
call
push
pusha
mov
pushf
mov
push
push
pushl
call
bt
pushf
stc
sub
cmc
clc
cmc
cmc
pushl
popl
movl
call
pushl
popl
cmp
mov
call
pusha
sub
pushl
pushf
pushf
mov
push
stos
mov
push
lea
jmp
lea
pusha
mov
pushl
lea
jmp
call
jnp
xor
ret
sub
mov
fistpl
fistpl
in
lahf
cwtl
mov
cld
loopne
push
adc
ret
pop
jecxz
jne
inc
loope
fistpl
call
jb
cmc
mov
dec
cltd
sub
sbb
aam
fwait
repz
cmpb
cmp
xchg
movsb
xchg
mov
jle
inc
xchg
icebp
sbb
loop
es
sbb
jle
mov
int
jns
add
shrb
and
shlb
xor
mov
idiv
cmp
pushf
call
ror
pushf
pushf
pusha
pushf
inc
call
mov
pusha
push
lods
pusha
lea
je
clc
rol
jmp
push
movb
inc
call
xchg
or
ret
jp
or
pop
stos
mov
mov
outsl
mov
dec
mov
addb
mov
jg
dec
out
mov
cmp
testl
and
mov
fcompl
jecxz
popa
fldenv
mov
push
adc
sub
push
sbb
in
lret
jle
jns
scas
jbe
sbb
iret
fsubp
pop
xchg
push
or
mov
dec
cli
ret
xor
out
pushf
lods
jae
lea
mov
andb
and
add
pop
bts
ror
mov
pushf
stc
bsf
ror
mov
sar
cmp
bswap
mov
pushf
call
iret
dec
inc
je
fcompl
and
mov
and
sti
cwtl
jne
push
repnz
sub
jle
push
xchg
out
aam
cmp
mov
lret
lret
or
ljmp
data16
popf
mov
xchg
add
dec
xchg
adc
lret
lret
adc
lods
lods
cmp
icebp
hlt
ljmp
adc
out
cmp
or
stc
popa
xchg
xor
jne
lret
mov
bswap
movl
pushf
bswap
bswap
movsbw
lea
push
movl
call
sbb
int3
test
cmp
lock
enter
movb
ret
rep
cs
mov
scas
cmc
mov
push
fstpl
push
test
xor
insb
int
jp
xchg
xchg
jns
test
dec
sub
orl
push
clc
pop
jae
sar
cmpsl
ja
add
mov
dec
dec
outsb
aas
fstps
mov
jmp
push
mov
mov
pop
jae
lds
inc
xchg
xchg
sub
enter
inc
xchg
cmp
push
pop
add
or
imul
std
adc
dec
test
clc
mov
ss
fsub
lods
jo
cmp
and
push
push
pushf
cs
or
jp
jge
or
dec
rcl
inc
rcrl
in
cs
cwtl
lds
lahf
negb
jb
call
jae
mov
lret
in
mov
ret
xchg
xchg
pop
pop
call
mov
out
cmpsb
pushf
xchg
sub
mov
jbe
or
xor
adc
icebp
or
and
xchg
iret
push
call
dec
ljmp
dec
sbb
push
jnp
insb
and
push
pushl
ret
pusha
movl
pushl
movb
pusha
lea
jmp
add
addr16
gs
bound
popa
insl
add
faddl
insl
xchg
cmp
push
ja
cmp
mov
and
inc
out
fwait
lods
xchg
aad
mov
adc
add
pop
jb
data16
xchg
popa
sbb
mov
cmp
adc
mov
jb
enter
stc
add
inc
inc
stc
ret
ljmp
jp
push
rcrb
cmp
and
jae
inc
sti
out
pushf
ret
lea
jb
pushf
cmpb
jmp
movsbw
not
jmp
neg
shll
faddl
lahf
mov
mov
cmp
loopne
lock
mov
movsb
ss
xchg
inc
inc
mov
pop
mov
xor
in
stc
adc
cmp
add
mov
xchg
push
dec
pop
push
jge
lahf
inc
fidivrs
arpl
xor
mov
aad
jp
aad
mov
hlt
movsl
outsb
jl
loop
sbb
andl
shlb
orl
stc
into
inc
adc
popf
lea
xchg
or
inc
stc
pop
loopne
iret
add
pop
loopne
cmpsl
jns
popl
jl
bound
sub
fdivrs
mov
xchg
stc
loope
inc
sar
cwtl
dec
je
inc
mov
je
dec
rclb
loope
fidivrl
push
cmp
jle
sbb
cmp
push
jne
sbb
bound
pop
or
sub
xchg
add
stos
imul
inc
push
cs
sub
inc
jmp
cli
xor
sbb
adc
xor
cs
jge
jg
pop
dec
out
ret
jmp
mov
inc
cld
ret
stc
mov
or
dec
pcmpeqw
lcall
mov
and
mov
or
leave
shlb
leave
mov
mov
and
std
int
mov
fnsave
inc
cmpsb
fstp
aam
and
outsl
gs
sbb
insb
das
mov
push
cltd
xor
adc
or
outsl
ret
or
or
add
in
xlat
inc
aaa
xlat
lea
repnz
inc
add
adc
and
out
movsb
scas
xor
push
mov
jbe
enter
dec
sbb
fisubrl
popl
outsb
add
lock
and
dec
inc
inc
fildll
jecxz
jnp
mov
xor
push
sub
add
clc
stos
leave
mov
pop
dec
pop
and
outsl
ds
mov
gs
cmp
cmpsb
bnd
mov
sub
sbb
xchg
or
push
testb
adc
movsb
scas
pop
jo
sbbl
adc
sbb
in
jge
push
mov
mov
lock
in
mov
and
stos
je
pop
push
inc
jmp
fwait
dec
aaa
aaa
push
xor
cmpsl
fstpt
dec
div
mov
js
mov
outsl
xchg
push
out
push
pop
js
add
in
jae
cmpsl
dec
hlt
mov
jl
add
jl
lods
es
adc
sub
call
loop
ret
loopne
xor
stos
mov
repnz
out
fldenv
sar
stos
push
js
lret
pop
enter
or
cmpsl
pop
rorb
sbbl
add
lcall
or
push
mov
and
xchg
test
or
fiaddl
or
xchg
inc
dec
mov
pushl
data16
mov
daa
inc
mov
xor
jle
test
add
pop
xchg
int
adc
add
add
pusha
pushf
pushl
jmp
int
outsb
ret
popf
pop
fimull
jg
sub
lea
sub
dec
inc
ljmp
ret
mov
inc
mov
inc
jge
mov
movsb
pop
test
pusha
mov
cmp
mov
xor
pop
xchg
xchg
in
mov
mov
adc
in
testb
jne
test
imulb
jno
push
insl
aaa
or
cli
sbb
rolb
cmpl
leave
int
fstpt
pop
inc
adc
leave
add
cli
jns
jb
xchg
inc
xchg
subb
push
pmuludq
xor
dec
dec
xchg
addr16
arpl
push
mov
xor
push
pop
dec
jb
icebp
push
add
andb
inc
mov
loope
aaa
adc
orl
in
aad
fdivs
dec
cld
jp
mov
cld
pop
insl
ret
data16
jge
sub
dec
sub
lds
cmp
gs
xchg
sub
lret
int
add
scas
dec
bswap
pop
push
push
test
xor
stos
jl
pop
dec
push
add
jno
jne
push
fdivl
jns
jle
cli
mov
push
int
pusha
and
xchg
xchg
pusha
popa
push
push
jo
inc
dec
mov
ds
daa
roll
and
jmp
ret
lock
lods
sbb
mov
mov
and
out
cmp
cmpsb
adc
gs
lods
sti
lahf
cmp
stos
cmp
cmp
mull
bound
jg
enter
xor
in
xchg
fcompl
shll
rcrb
mov
pop
ss
adc
repnz
sarb
notl
xchg
xor
nop
js
push
push
lahf
push
lret
push
or
and
push
std
or
leave
xchg
out
xchg
inc
aad
out
addr16
stc
imul
stos
mov
imul
add
jp
lret
lret
cmp
xor
sbb
jb
add
repnz
stos
xor
inc
sub
sahf
adc
push
xchg
xchg
scas
adc
int3
je
outsl
jne
shl
adc
add
mov
mov
push
negb
inc
mov
arpl
mov
shll
xor
je
xchg
xchg
loop
movsb
xor
xchg
ds
pop
popf
dec
xchg
and
mov
fildll
imul
sub
push
ret
dec
loop
jmp
jo
fwait
int
push
xor
stos
loope
shll
pop
jbe
out
mov
int3
int3
dec
jb
jae
mov
mov
popf
int3
jle
pop
lds
xlat
mov
mov
test
fcomi
sahf
call
sbb
or
jne
call
test
xchg
les
in
xchg
dec
cld
fsubr
aad
fldl
or
mov
gs
xchg
sbb
sbb
add
dec
push
push
push
fmul
jg
or
pop
scas
in
ss
addb
cltd
jbe
mov
fdivrl
lret
iret
mov
lds
mov
and
stos
adc
das
hlt
sbb
xchg
pop
sub
jnp
mov
imul
pop
jbe
adc
sbb
jb
cmpsl
and
out
in
ds
jae
dec
pop
lds
pop
pop
daa
out
cmp
shll
jl
repnz
adc
mov
mov
icebp
loope
mov
xchg
push
pop
mov
scas
cmpsb
imul
xor
jl
add
shrl
fldcw
test
fstpl
fdivs
mov
or
push
out
xorb
sbb
sbb
rcrl
cs
fldcw
aaa
ret
inc
outsl
mov
jb
jmp
lret
clc
out
mov
adc
pop
add
sbb
xchg
xor
fbld
out
dec
dec
dec
xchg
cmp
pop
jo
test
cmp
pushf
or
pushf
lea
je
jmp
call
sub
imul
jae
clc
jecxz
sti
jns
ret
jns
dec
push
jl
icebp
mov
out
cs
ret
sub
flds
push
ljmp
out
sub
pop
shl
inc
add
dec
jp
outsb
daa
dec
cmpsl
dec
lret
aad
mov
add
repz
fdivr
dec
outsl
push
inc
jb
jb
add
mov
xor
sti
push
movsb
mov
xor
pop
imul
or
insb
add
sub
xor
ljmp
cwtl
ljmp
push
fisubs
cmp
cli
jnp
ficoms
sbb
pop
adc
icebp
mov
pusha
pop
test
add
ss
lcall
fwait
aas
sti
icebp
dec
scas
es
mov
test
scas
addr16
insl
adc
loope
loope
repnz
lahf
adc
push
nop
hlt
fwait
lahf
ja
dec
das
push
adc
push
xchg
cmc
mov
test
es
dec
adc
xchg
lods
notb
jae
or
pop
inc
cmp
and
add
clc
pushf
sub
inc
add
adc
arpl
fwait
aas
daa
lret
outsl
add
and
enter
add
fldcw
movw
sub
jo
jmp
ret
bound
ret
push
jecxz
popf
cmp
mov
ljmp
insb
cmc
cmpxchg
or
sub
jle
jmp
hlt
fistpl
out
cltd
lods
out
dec
mov
les
push
jne
ret
mov
es
movsb
jg
sahf
jo
sbb
lea
lock
lcall
out
lret
rcll
cs
sbb
add
dec
mov
ffree
divb
jae
add
fwait
idivl
mov
fwait
stos
xor
cli
cmpsl
jg
add
inc
gs
imul
imul
jmp
lea
call
test
stc
stc
pusha
add
jmp
cli
xor
addr16
sahf
pushf
lods
movsb
and
mov
push
jle
add
jecxz
aaa
test
sub
rcrb
sbb
fnop
sbb
sbb
les
push
call
dec
adc
pop
cld
pusha
pop
cmp
hlt
mov
aaa
cmp
mov
fstps
xor
sub
cld
in
roll
imul
dec
push
les
shll
lds
in
cmp
lahf
ret
loope
ret
aad
sub
je
ds
shll
test
pop
sbb
retw
adc
add
movsl
lret
jo
addr16
or
repnz
ror
cli
xchg
xor
fwait
stos
adc
pop
loopne
lods
and
cld
es
xor
lods
daa
push
pop
cmc
jp
jp
mov
std
sti
cmp
or
sbb
jle
into
mov
mov
push
push
and
and
loopne
les
xchg
hlt
mov
sbb
lret
jmp
movsl
push
pop
add
or
or
dec
cli
fcomp
jmp
push
call
adc
ljmp
idiv
stc
pop
ret
mov
fmull
add
stc
clc
sbbb
pushf
shl
sub
in
add
clc
into
jg
push
aad
test
popa
nop
push
pop
les
push
fisubrl
in
inc
popa
push
push
aam
dec
or
je
test
xor
pop
xchg
sub
hlt
mov
or
shrl
pcmpeqw
and
sbb
xor
lret
pop
lcall
mov
sub
push
cltd
mov
fnstcw
add
psubsw
jnp
fs
jae
neg
xchg
shrd
mov
pushf
sub
shl
mov
shrd
shl
rol
mov
pushl
cmc
test
mov
sub
push
test
pushl
jmp
not
lods
bt
push
cmc
movb
rol
pushf
call
lea
jne
add
rcl
bts
push
mov
pushl
add
cmp
call
mov
pushf
call
stc
mov
clc
pushl
popl
jmp
jnp
adc
pop
adc
lea
sbb
mov
inc
add
push
or
lods
adcl
sub
stos
push
jae
mov
add
dec
mov
jbe
xlat
adc
leave
out
scas
dec
push
lods
call
and
push
xchg
xchg
icebp
mov
ds
or
lods
lods
add
sbbb
addb
ficoml
dec
inc
fs
xchg
and
call
mov
adc
or
lods
mov
cli
insl
test
push
xchg
ja
arpl
sarl
out
pop
cmpsl
jno
shlb
nop
mov
addr16
scas
lods
int
out
test
lods
test
xor
outsb
cmp
sahf
pusha
lahf
aas
jne,pn
imul
push
in
push
icebp
jne
and
sub
push
stc
inc
mov
mov
sub
mov
cmpsl
mov
jmp
or
add
mov
lret
lret
push
or
mov
adc
stos
cld
das
es
lret
hlt
test
out
xor
enter
hlt
insb
push
es
roll
push
push
xchg
jl
cmp
outsl
sub
dec
cmpb
mov
mov
xchg
mov
stos
push
jp
fs
decb
add
mov
xor
or
out
jae
cmpb
xchg
add
lds
push
popa
aad
mov
fiadds
pushf
out
cmc
imul
daa
outsb
cmp
and
xor
jge
mov
shrb
xor
fsubr
mov
jl
adc
fs
sub
repz
pop
cmp
fsubp
mov
cmp
mov
leave
imul
js
aam
xor
lods
and
mov
mov
push
push
cmp
test
cmp
xchg
daa
cmp
rep
jg
sti
cwtl
jmp
cmp
andb
adc
sub
xor
mov
fidivl
push
dec
pop
mov
movsbw
pusha
bswap
mov
pushf
mov
pushf
mov
call
push
lea
jne
movzbw
mov
stc
clc
clc
add
bt
bt
movzwl
ror
mov
cmc
add
pusha
cmc
bt
mov
test
jmp
pusha
pushf
pusha
test
cmpb
pushf
lea
jne
add
xor
adc
mov
test
or
clc
add
shl
neg
mov
mov
push
stc
clc
cmp
test
pusha
pushf
push
lea
jmp
clc
shl
test
clc
call
xchg
and
popa
ret
adc
cld
adcl
imul
fdivl
mov
push
es
jb
mov
cli
sbbl
inc
scas
int3
mov
jmp
and
dec
dec
pop
or
iret
jbe
pop
lcall
addr16
sub
push
out
sub
dec
xchg
out
mov
cmpb
movsl
sub
push
xchg
inc
sbb
mov
nop
hlt
out
mov
in
insl
pop
mov
ret
fwait
out
lret
idivb
inc
add
dec
add
lock
popa
ret
andl
cmp
xchg
mov
sbb
divb
stos
pop
je
icebp
push
and
xchg
hlt
sub
dec
ds
sahf
xor
push
pop
cmp
xlat
imul
push
scas
out
sub
inc
ds
lods
addr16
js
rcrl
lock
fcom
shlb
dec
test
sbb
and
fldenv
stc
sarb
push
jno
sub
test
push
push
or
mov
adc
cmpsl
daa
mov
lods
xor
fstpt
loope
cmp
stc
test
clc
pop
movsl
mov
or
adc
outsl
ja
add
ss
add
push
jge
dec
gs
jl
add
in
data16
pop
jecxz
cmp
sahf
inc
pop
sub
adc
mov
jp
xchg
lds
dec
fcoms
sbbl
fistps
int
jg
pop
sub
push
call
cwtl
add
int
test
nop
cmpsb
call
fcompl
sahf
out
push
popf
mov
or
push
inc
or
pop
xchg
add
std
mov
sarl
cltd
gs
fldenv
mov
fwait
inc
mov
mov
jg
xlat
mov
push
xlat
xor
push
fwait
arpl
pop
enter
sbb
mov
into
repz
or
adc
lods
popa
icebp
fs
mov
mov
add
cwtl
push
lea
jae
call
inc
ficoml
ret
mov
popa
sbb
sbb
pop
ljmp
xchg
or
rcll
mov
jmp
xor
cwtl
mov
mov
test
in
cmp
jmp
icebp
js
aaa
aam
jae
inc
xchg
cmp
sbb
leave
cmpsl
fcmovb
adc
jmp
pop
repnz
push
adc
sbb
mov
cmp
fildll
adc
fs
push
push
movsl
pop
cmpsl
mov
nop
pop
ret
out
xor
xchg
pop
adc
adc
adc
add
test
repz
pop
mov
fwait
stc
pop
fwait
dec
lds
inc
sbb
add
jns
jns
push
lcall
push
jg
pop
cmc
jmp
movsb
sbb
jp
jge
ja
cld
sbb
jge
sub
add
and
sti
fsts
std
inc
cmovg
stos
push
loop
pop
sbb
sub
pop
es
les
and
test
nop
cmc
call
movl
pushf
mov
pushf
movb
movb
pushl
ret
adc
aad
dec
stos
xor
in
aaa
inc
push
cmp
cmpsl
insl
jp
std
mov
gs
xchg
xlat
ljmp
inc
jns
cmc
rcll
lret
jo
rorb
cmp
adc
sbb
bound
pop
push
fmuls
testl
iret
dec
shll
mov
xchg
test
mov
add
jns
loop
push
andl
mov
mov
test
int
test
stc
imul
mov
mov
das
loop
stos
add
fwait
cmp
pop
inc
mov
jne
into
in
jmp
mov
jecxz
xlat
xor
push
cmp
mov
xchg
or
cmp
ljmp
sbb
pop
lahf
mov
or
mov
pop
scas
mov
xor
cmpsl
add
icebp
inc
and
movsl
ss
data16
dec
inc
jno
mov
dec
mov
ficomps
xchg
aaa
lock
scas
cltd
mov
shl
aas
xchg
sub
sbb
arpl
xor
xchg
out
ss
jle
test
fildl
cmpl
loop
push
mov
or
imul
cltd
dec
aam
dec
pop
push
ss
xor
mov
jle
xchg
xor
mov
mov
adc
cltd
popa
cmp
sarb
pop
inc
mov
jns
inc
jb
test
fwait
sahf
gs
cmp
cmpsl
inc
ljmp
push
push
sbb
rcrb
push
xchg
pushf
setne
mov
pop
call
push
aaa
das
pop
ret
mov
and
dec
sub
push
cvtpi2ps
mov
dec
and
rcll
jnp
sbb
cld
test
call
push
scas
cli
mov
sti
sbb
nop
rcl
jo
pop
and
out
sahf
pop
push
sbbb
jle
psrld
or
xchg
sub
addr16
adc
mov
cld
xchg
mov
cmp
popf
dec
dec
cmp
sub
scas
jecxz
stos
mov
mov
sub
xchg
pop
mov
movl
xor
fmull
mov
jae
pop
test
xor
scas
call
add
jb
dec
nop
xor
in
fcmovnb
inc
test
sbb
add
fmul
mov
mov
icebp
stos
cld
pop
les
test
nop
notl
ds
or
or
mov
andb
movsb
out
je
testb
adc
aad
das
adc
pop
ret
push
push
adc
ljmp
xchg
cmp
dec
lret
ffreep
int
cltd
adcl
repz
pop
ficoml
pop
fwait
inc
andl
leave
add
fcoms
add
test
fistl
cmp
mov
inc
xchg
or
and
dec
notl
lock
jne
int
inc
xchg
int
and
mov
lods
bound
xor
xor
insb
pusha
pop
mov
mov
lea
ja
pusha
pushf
xchg
pusha
pushl
call
xchg
lock
push
jle
jbe
and
fwait
xchg
rclb
mov
pop
push
in
fsub
cmp
leave
popa
stc
iret
pop
fistl
mov
fists
movsb
addl
adc
data16
push
adc
xchg
mov
call
pop
rcrl
dec
das
fdivrs
cmpsl
loopne
push
jmp
pop
negl
data16
cmp
jg
jbe
sbb
andb
shrl
js
dec
loop
ja
jne
js
mov
rclb
push
add
xlat
dec
pop
ret
test
cmp
or
lods
sub
pop
ss
pop
pop
ljmp
stos
aaa
fnstsw
fs
daa
ja
imul
jge
mov
and
xchg
push
xchg
cld
insb
adc
lret
sbb
jb
jo
mov
push
mov
xchg
js
adc
and
adc
dec
lods
loope
out
xorb
pop
insl
mov
repz
add
jp
cmpsl
pop
adc
inc
inc
push
pop
ret
aam
test
mov
inc
cmpsl
push
mov
and
lods
xorb
mov
sub
mov
mov
adc
jns
rcll
iret
sub
jae
and
jne
adc
movsb
in
loop
mov
ja
dec
adc
inc
adc
push
rorb
xchg
push
pop
sarb
sahf
mov
xchg
sbb
push
inc
jno
sahf
scas
push
cld
repnz
dec
leave
insb
imulb
fldenv
and
cmovg
xor
inc
cmp
adc
add
scas
lea
mov
jne
es
sarb
dec
jns
orb
pop
cmp
cmp
call
loop
or
ret
into
loope
sahf
scas
xor
dec
dec
jns
nop
stos
mov
fs
push
bound
push
sub
notb
push
adc
sub
std
xchg
imull
or
pop
mov
cwtl
lods
mov
pusha
adc
dec
sbb
popf
sti
out
pop
sub
cli
movsb
stos
sbb
push
mov
into
push
icebp
pop
gs
ret
pop
in
aaa
andb
sahf
adc
ss
fadd
cmp
leave
mov
mov
push
fidivrs
scas
mov
fcoml
int
mov
popf
sbb
push
pop
push
ja
fisttpl
pop
aaa
repz
adc
mov
push
aam
pop
btr
push
jecxz
jl
mov
insb
test
and
in
inc
add
in
pop
sub
push
out
jae
daa
insb
pop
pop
sub
icebp
pop
mov
out
out
xchg
into
xchg
cmp
not
rep
pushf
movzbw
pop
mov
call
cmp
inc
hlt
mov
lret
xchg
inc
lcall
mov
test
xchg
xchg
or
sbb
repz
hlt
cmpsl
loope
fsub
dec
or
or
adc
xor
add
jb
mov
and
push
cs
jno
jnp
sbb
xor
adc
sbbl
mov
and
popf
lods
aas
or
cmp
lods
in
lcall
icebp
popa
adc
pop
or
cltd
sub
cwtl
mov
inc
sub
jnp
jne
adc
and
xchg
fstpl
movsl
dec
dec
mov
loopne
mov
int
fs
in
imulb
int
or
xchg
jbe
loop
and
pop
cltd
loopnew
lcall
repnz
sbb
cltd
adc
push
push
fidivrs
adc
push
pop
jno
cs
das
xlat
das
sbb
insl
mov
clc
dec
out
fdivrp
mov
cs
mov
jns
sub
sti
mov
test
movntq
mov
add
jmp
movsl
pop
addr16
cltd
push
sub
jp
sub
scas
dec
add
cvtdq2ps
mov
mov
stos
jecxz
into
push
mov
cmp
es
sbb
lret
cmc
push
pop
jbe
mov
iret
rolb
addr16
repz
lahf
xor
jbe
ss
add
sarb
repnz
dec
cwtl
xchg
mov
jae
mov
insb
push
fimuls
cmp
loope
jbe
push
xchg
sub
out
pop
test
insl
xchg
lcall
inc
cmc
sub
push
fcomip
push
xchg
lds
inc
mov
push
fsubrl
pop
cmp
sbb
ret
cmpsb
in
in
adc
mov
movsb
xchg
xor
mov
repnz
dec
push
mov
xchg
xchg
sahf
in
shll
aad
icebp
je
mov
dec
lret
and
imul
fs
jp
push
pusha
push
lea
ja
dec
mov
sub
ror
or
add
jmp
lea
pushf
pushf
movb
lea
call
jmp
mov
fcompl
mov
repnz
add
leave
push
push
mull
jge
stos
in
das
jecxz
xor
inc
jno
inc
call
int
mov
push
mov
push
or
add
mov
pop
arpl
adcb
sbb
mov
sub
sub
adc
mov
jl
adc
orl
mov
pop
dec
mov
pop
stc
repz
out
sub
xor
jp
push
test
stc
add
inc
gs
jne
jb
outsb
je
push
dec
fs
aam
lcall
mov
test
jmp
add
faddl
icebp
mov
popl
push
pop
adc
mov
push
push
outsl
mov
into
jle
jp
fstps
test
mov
and
jno
loop
pop
sub
push
push
ret
popa
mov
lret
and
int3
stos
test
ds
cmp
mov
sbb
in
shl
lret
dec
sahf
shlb
stos
cmpsl
data16
fcomps
dec
pop
adcb
nop
xor
movb
test
ret
dec
in
btc
ds
lods
aas
insl
mov
ret
xor
or
push
jae
aas
mov
ret
pop
push
out
xor
pop
ss
arpl
mov
push
daa
jge
es
mov
stc
sub
loop
call
sbb
xlat
adc
lahf
inc
push
cmp
cwtl
xor
scas
out
lds
mov
mov
push
xchg
icebp
outsb
mov
icebp
inc
adc
xor
xor
push
mov
dec
and
sub
clc
movsl
pop
ja
pushf
xor
call
pushf
movzwl
bsf
mov
mov
pushl
clc
push
add
cmc
mov
bt
stc
mov
push
test
movb
call
xchg
adc
ret
and
pushf
js
and
push
mov
addr16
xchg
jge
jmp
adc
nop
das
int3
push
mov
loop
in
xor
test
jno
ja
fidivl
dec
lea
mov
pusha
sbb
int
xlat
pop
dec
mov
sub
fadd
jmp
nop
cmp
leave
arpl
lds
shlb
dec
xlat
xchg
mov
popf
leave
jne
gs
imul
add
aaa
scas
push
ret
pop
les
xchg
push
push
fxch
addr16
pop
and
mov
adcb
or
jno
test
adc
push
or
add
idivl
jp
cmp
vpsubb
cmp
dec
ds
scas
je
mov
add
test
or
dec
and
cmp
enter
cmc
iret
inc
cwtl
cmpsb
in
mov
sub
mov
mov
push
nop
cmpsl
lods
inc
mov
in
xor
xlat
jp
out
les
enter
clc
jb
jg
adc
les
lock
add
ret
add
push
repnz
dec
mov
idivl
add
jns
dec
pop
or
mov
int
xchg
mov
or
int3
lods
movl
insb
pop
mov
bound
jmp
pop
loopne
pop
fsts
push
push
flds
repz
sbb
les
fildll
inc
lods
inc
pop
sti
pop
dec
sub
dec
push
test
xchg
psllq
call
fsubl
cmp
push
mov
out
sbb
cli
das
cs
pop
aas
fidivrl
mov
push
jae
mov
lahf
popa
call
frstor
hlt
cwtl
and
inc
and
jg
pop
xor
test
repnz
inc
into
xlat
add
mov
imul
cmc
and
sbb
imul
xor
push
shrb
shlb
mov
lcall
leave
pushl
lea
pusha
pushf
lea
jmp
lahf
jmp
test
shl
clc
bt
bt
add
stc
cmc
pushf
cmp
sub
pushf
lea
jne
jmp
jmp
bsr
mov
clc
cmpb
jmp
push
out
dec
ret
pop
and
or
insl
inc
mov
push
out
xchg
movsb
pop
fld
adc
cmp
push
pop
cltd
in
andl
orb
cmp
loop
xor
xor
xor
push
sub
pop
sub
ret
sahf
inc
inc
bound
pop
sub
out
mov
ja
out
push
push
push
pop
or
out
sahf
cli
enter
sahf
sbb
dec
ret
insb
adc
mov
add
mov
xor
xor
test
pop
xchg
inc
and
jno
mov
scas
stos
or
sbb
sbb
sbb
add
aas
fsubr
popf
fildl
fwait
insl
cld
mov
jmp
push
ret
cwtl
mov
push
sbb
pop
or
fldcw
pop
push
jmp
dec
pop
mov
popf
lret
adc
push
or
and
sub
daa
jmp
das
cmp
xor
sbb
bound
call
daa
leave
sbb
mov
mov
sbb
bound
out
stc
jb
aad
rcll
jle
adc
cmp
dec
mov
adc
xlat
inc
les
mov
cmp
xor
xor
pop
sbb
subb
out
pop
ds
pop
and
sub
inc
jae
xor
lea
clc
mov
shrl
xchg
loop
jo
mov
cmp
ret
call
mov
rclb
btr
mov
sub
sbb
or
popa
mov
pop
pop
int
sbb
sbb
insb
mov
jbe
loopne
fwait
cmp
sub
mov
xor
cmp
xchg
cmp
insl
sub
sub
mov
cmp
mov
mov
pop
sbb
fcompl
sub
dec
mov
sahf
xchg
sub
sarl
insb
push
jmp
mov
faddl
xor
lret
xchg
call
clc
pop
mov
ret
mov
jl
mov
mov
sub
inc
jbe
into
jo
in
std
inc
sbb
out
mov
cmpsl
cmpsl
xor
mov
es
out
fucom
aam
js
inc
adc
ret
repnz
cmp
lret
pop
cmp
xor
mov
cmp
repnz
inc
mov
push
mov
pushf
jl
mov
and
ret
inc
in
push
hlt
jns
leave
lods
push
jns
das
inc
sub
and
fldt
adc
lods
pop
cmpsl
nop
push
dec
or
inc
icebp
mov
inc
test
pop
cmp
pop
test
mov
xchg
push
inc
cmp
loopne
sub
imul
imul
into
aas
mov
popf
xorb
cmp
sahf
in
xor
or
rorb
mov
cld
push
sbb
ret
inc
jecxz
sub
cltd
js
sbb
xchg
cmp
and
je
push
and
mov
fistl
incl
orb
xchg
mov
sbb
f2xm1
push
out
repz
mov
cmp
enter
cmp
pop
call
mov
push
xchg
pusha
ss
cwtl
pop
xchg
jno
jge
mov
xchg
nop
xor
mov
xor
jecxz
jne
jp
add
scas
jae
dec
imul
push
pop
mov
out
fcoml
sbb
test
dec
ret
stos
push
dec
rclb
mov
jle
jo
les
or
xchg
cld
into
xchg
xchg
pop
mov
test
divl
mov
aas
mov
fs
cltd
jns
xchg
push
leave
and
cmp
pop
sbb
lds
sbb
xchg
xchg
sub
push
cli
cmp
mov
int
cmpsb
out
arpl
fildl
ss
shrl
lock
lahf
cmp
jbe
jo
xor
cs
insb
add
fdiv
pushf
cmp
out
lods
jp
gs
pop
push
std
dec
popf
sahf
movsl
into
mov
fs
out
sti
insb
inc
xchg
mov
testb
mov
sbb
add
bound
pop
add
mov
nop
aam
cmp
ret
cmp
mov
scas
xor
js
cltd
arpl
test
call
xlat
jmp
push
xor
mov
xchg
inc
push
xchg
into
cmp
aad
imul
dec
push
dec
ret
push
cltd
pusha
lret
dec
mov
jb
leave
shld
adc
dec
push
jno
mov
ret
xor
or
sub
xor
and
adc
and
push
scas
and
out
in
pop
cs
mov
mov
jnp
pusha
adc
sbb
je
sbb
gs
out
ja
fs
pop
lret
xchg
jmp
inc
adc
daa
repz
addr16
pop
repnz
mov
mov
lret
xchg
movb
pusha
lahf
mov
jmp
pop
jl
dec
ret
jmp
addr16
inc
notl
xor
jno
call
mov
cmpsl
push
je
dec
flds
lcall
pop
ss
dec
jp
xchg
xchg
mov
jp
inc
and
dec
add
jg
push
insl
adc
push
cld
ret
adc
outsl
add
mov
aam
inc
out
test
push
sub
and
rcl
popf
lea
frstor
mov
sbb
sarb
cmpsb
ljmp
and
dec
ret
or
mov
cmp
lods
ljmp
les
neg
mov
xchg
add
nop
bound
ret
arpl
int3
fidivrs
not
aaa
daa
mov
punpckhwd
xchg
pop
ret
xchg
pop
test
lahf
loop
mov
adc
imul
sub
hlt
sub
xor
xchg
jmp
iret
test
sub
inc
ljmp
mov
mov
and
mov
mov
ret
cmpsb
jg
sahf
mov
movl
lods
js
scas
xchg
xor
adc
xchg
idivb
mov
push
ds
rcrb
add
add
dec
pop
xor
xor
push
mov
cmpsl
pop
pop
inc
scas
pop
gs
sub
aad
inc
rorl
inc
cmp
cmp
cmp
adc
xchg
xchg
ret
fs
jbe
push
movsbl
outsl
in
imul
mov
test
xchg
inc
es
fwait
xchg
dec
ret
addb
out
xor
lcall
lea
pushw
aas
lret
push
and
das
add
or
sahf
pop
adc
inc
test
adcb
fcompl
mov
mov
mov
and
jbe
outsb
mov
test
adc
sub
xor
ficomps
add
push
lods
xor
cmp
mov
rcrl
adc
jmp
inc
ret
in
adcl
push
mov
push
dec
inc
xchg
inc
incb
pusha
xor
mov
push
push
mov
mov
in
cmp
ja
stc
pop
pushl
lea
pop
mov
lret
xchg
fdivs
dec
push
sub
aad
and
xorl
push
test
jno
or
pop
sar
dec
adc
sub
js
add
push
push
sbb
fidivrl
pop
pop
cmp
jp
aas
pop
xchg
lea
call
push
not
mov
pushf
xchg
call
gs
inc
ret
insb
shll
cs
xor
xchg
mov
mov
out
push
sub
adc
push
gs
call
ds
mov
ja
cmp
sti
lea
jno
lods
cld
lods
scas
xchg
pop
and
lock
jbe
xor
or
call
mov
cwtl
jns
andl
push
sbb
mov
stos
jmp
shrl
inc
ret
xorb
hlt
cli
xchg
cmp
in
lcall
xchg
shrb
fmull
adcb
mov
jg
into
pop
sub
mov
xor
sarl
scas
iret
insb
mov
lods
inc
adc
cmc
add
pop
and
ret
shlb
mov
xchg
out
subb
test
xchg
push
add
inc
ret
arpl
test
sub
mov
add
cmpsb
pop
repnz
push
ja
sbb
icebp
jge
pop
pop
mov
fs
movsl
and
or
and
dec
jmp
pop
mov
xor
scas
dec
out
mov
inc
sub
neg
cmpsb
and
jg
dec
and
jbe
ret
insb
xor
dec
test
scas
stc
push
jae
lahf
cmp
xlat
fcoml
sbb
push
adc
gs
scas
dec
mov
dec
jmp
adc
mov
ret
xchg
orl
dec
es
mov
pop
sbb
loope
aaa
jne
pop
push
xchg
fwait
mov
pop
fwait
lods
std
pop
xor
adc
shl
add
add
popa
cmp
icebp
cmpsl
jmp
sti
xchg
mov
lods
clc
iretw
cmp
fldl
mov
mov
lea
pusha
pushf
lea
call
test
stc
mov
clc
stc
pushf
test
cmp
pushf
lea
jb
test
mov
cmc
xor
not
pusha
mov
test
jmp
push
fcom
inc
ret
xor
ficompl
mov
lods
jbe
cmpl
movsb
pop
sbb
fwait
push
mov
fcoml
push
and
dec
dec
popa
inc
imul
and
push
and
add
pop
jp
mov
add
and
test
cs
or
jae
sarb
out
mov
add
cltd
clc
std
push
pop
inc
push
loope
dec
mov
inc
cmpsl
mov
pop
pop
adc
jnp
push
inc
ret
cmp
cs
sub
sub
popf
adc
xchg
out
lea
pop
aad
inc
jmp
enter
std
pop
fdivrl
movsb
pushf
dec
push
jbe
jbe
jb
insb
ret
xchg
jo
push
mov
fwait
mov
mov
mov
inc
adc
cmc
jne
xchg
or
adc
outsb
roll
mov
mov
sbb
pop
out
addr16
roll
faddl
in
add
mov
xchg
cmp
and
pop
xchg
adc
outsl
ficompl
lods
xchg
shlb
ljmp
cmp
aam
fistpl
in
mov
mov
jg
sub
cltd
or
xchg
pop
sbb
lret
mov
mov
xchg
cmc
sbb
lahf
mov
pop
dec
fistl
fcoms
push
loope
aaa
pop
mov
mov
sbb
mov
lret
cmpsl
pop
jo
push
mov
or
fsubr
outsb
pop
push
pop
icebp
data16
stos
cmpsl
mov
mov
push
and
push
xchg
mov
cmp
xchg
pop
and
int3
mulb
stos
jp
in
or
jg
lcall
popa
mov
inc
ss
push
mov
pop
sub
test
je
push
mov
fisttpl
gs
and
xorl
jns
enter
insl
push
add
sahf
idiv
add
inc
gs
imul
outsb
addr16
add
insl
gs
ret
fs
clc
push
bnd
lahf
adc
sub
insb
test
xor
or
cwtl
pop
sub
arpl
scas
jno
fxch
mov
xor
xchg
sub
and
cs
test
mov
or
cli
mov
mov
fidivs
fwait
shll
dec
and
sub
xchg
in
xorl
push
mov
jno
std
mov
xchg
dec
xchg
imul
pop
repnz
test
xor
bound
pop
cmpsl
sub
or
mov
lock
pusha
pusha
pushf
xchg
mov
mov
call
lea
jne
test
bsf
rol
shld
mov
and
xchg
ror
mov
movzbw
or
stc
ror
xor
setg
push
mov
xchg
bt
mov
neg
bsf
btc
mov
sub
rol
jmp
movsl
pop
jle
ret
int
or
push
popf
dec
daa
or
adc
sub
mov
mov
in
mov
fmuls
or
and
out
xchg
mov
pop
out
xchg
and
fcoms
je
loope
xor
jb
lds
push
fs
xchg
add
dec
test
and
adc
js
sbb
mov
jge
or
lock
or
rclb
jp
mov
dec
fadds
inc
icebp
pushl
lea
call
call
or
mov
mov
jle
ja
xchg
jp
jbe
mov
cmp
fdivrl
aas
xor
adc
cmp
fndisi(8087
mov
lret
sub
vgetmantps
push
mov
xchg
subl
call
repnz
pop
and
pop
outsb
xchg
cmp
imul
cli
push
hlt
mov
push
inc
ret
scas
push
push
sbb
shlb
push
aad
dec
mov
or
mov
pop
loop
jnp
mov
pushf
sbb
adc
lahf
addr16
sub
dec
jne
lcall
dec
ss
test
jl
xor
cmc
or
mov
adc
cmp
int
cmc
jbe
jecxz
adc
mov
jae
push
fdivrl
cmpsb
xchg
popa
bound
test
dec
addb
pop
sub
jl
mov
jmp
pop
fistps
ja
test
add
cmc
test
sub
bt
add
ror
push
rcl
btc
mov
rcl
mov
cmc
push
repnz
pusha
jmp
cmpsb
lcall
or
sub
push
popf
mov
pop
lods
mov
int3
mov
daa
xchg
or
mov
or
cmpsl
movsb
xchg
stos
push
and
in
icebp
mov
fcomps
ss
jnp
loope
inc
mov
or
sahf
jge
sub
popf
jecxz
adc
daa
xorl
jo
mov
mov
sub
or
fdivr
add
insl
gs
ret
mov
insb
adc
popa
dec
lea
popf
inc
test
push
cmp
xchg
cltd
adc
sbb
xchg
add
aas
loope
mov
repz
cmp
pop
idivl
ja
pop
js
mov
loopne
or
mov
popa
dec
sti
mov
cmp
jbe
cs
pop
xor
xor
add
xor
loop
mov
add
lds
sub
sub
jecxz
sub
mov
xor
shrl
movsb
scas
in
dec
cld
sarl
jne
or
ret
repz
add
pmulhw
pop
cld
mov
mov
add
inc
mov
out
insl
lds
and
imul
jp
add
aam
ljmp
jmp
fisubl
jbe
es
in
xchg
mov
add
out
push
xorb
cmp
or
xlat
arpl
xor
movswl
sarl
scas
xor
repnz
stc
push
mov
loopne
cli
xor
jg
xor
add
mov
xor
lret
jnp
orl
aad
inc
test
ss
add
insb
incl
movsb
cmpl
sub
pusha
add
push
xlat
sub
int
leave
pop
lock
jno
adc
bound
fistps
dec
xchg
int3
pop
and
and
dec
and
lea
jb
clc
pusha
jmp
test
cmp
inc
sbb
repz
arpl
cmc
stos
lret
ret
inc
out
inc
mov
ror
jne
add
or
arpl
and
cld
rorl
int3
jg
sti
pop
fisttpll
lret
jmp
xchg
mov
int3
push
sub
cmpsb
popl
and
jne
int3
mov
cmpsb
jp
pop
dec
fstl
cmp
call
sbb
or
adc
or
ja
jns
push
xor
push
xchg
dec
aad
xor
inc
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
in
pushl
movl
pushf
pushf
movl
pushf
pushf
lea
jmp
mov
fsubr
les
movsl
iret
cmp
mov
icebp
mov
xchg
or
lea
dec
cld
in
pop
lret
jle
jo
mov
test
mov
push
xor
outsl
cs
sbb
xor
push
jbe
popf
add
sbb
fidivrs
std
fdivrp
mov
add
pop
cmpsl
sbb
cltd
ljmp
shrl
adc
pop
push
mov
ss
sbb
inc
mov
lcall
dec
push
enter
jno
add
lret
pushf
pushl
lea
jmp
sub
daa
cmp
fdivl
scas
imul
inc
clc
movsl
add
jo
or
aad
pop
mov
rcl
ror
push
shrl
mov
ds
cli
icebp
sbb
cmpb
xchg
roll
data16
fadds
dec
lahf
aaa
or
jl
icebp
js
push
imul
mov
inc
loop
jo
iret
nop
mov
fdivrl
lcall
xor
pushl
call
aaa
or
sub
jmp
sahf
or
mov
outsl
test
test
das
cmp
jb
mov
push
repnz
in
sub
cmp
pushf
cmp
ret
inc
cmp
inc
mov
lea
xchg
test
ds
lret
dec
push
into
outsb
decb
sti
xchg
data16
jl
in
mov
jl
jnp
fisttpl
mov
adc
out
pop
clc
std
cwtl
or
arpl
sbb
in
shr
lahf
adc
mov
bound
clc
fadds
mov
dec
orl
sbb
mov
insl
movsl
cmp
loopne
adc
push
popa
lcall
mov
jmp
lret
cmp
fsubrl
mov
cmp
aad
or
and
or
std
inc
fstpt
jg
or
sbb
mov
cmp
inc
or
push
movsl
int3
aad
leave
push
into
jns
nop
or
mov
outsb
sub
jbe
cmpb
jno
xchg
push
clc
bt
cmp
add
pusha
test
pusha
movzwl
or
mov
push
cmc
call
jmp
shr
movb
jmp
call
movl
movw
lea
jmp
adc
movb
pushf
push
jmp
and
cmp
fadd
je
incb
imul
or
xchg
xchg
xor
xorl
fnstenv
test
outsb
ljmp
andb
jae
jecxz
push
mov
movsl
int3
dec
cld
lcall
test
jge
mov
loope
mov
lods
scas
pop
fnsave
clc
or
sbb
and
jo
xor
push
mov
jns
dec
mov
cmp
fmull
jne
cmp
push
cmc
mov
inc
cwtl
pop
clc
jne,pt
push
insl
mov
jmp
dec
mov
rcll
addr16
ss
loop
jae
push
imul
icebp
mov
pushf
inc
lea
add
nop
stos
sbb
loopne
sbbb
pushf
out
shr
sti
mov
xchg
sub
xchg
mov
clc
cld
lods
dec
hlt
adc
mov
in
adc
loopne
or
jl
or
mov
pop
jg
push
std
hlt
sbb
data16
or
mov
aaa
xor
daa
out
pusha
cs
ss
mov
xchg
mov
mov
out
xor
inc
loope
ljmp
mov
adc
leave
in
ljmp
sbb
push
push
pusha
movl
pusha
lea
jmp
mov
push
push
push
pushl
ret
sub
aaa
ret
aam
test
fdivl
std
fdivl
jp
mov
add
and
cmp
pop
xchg
into
scas
mov
mov
in
pop
inc
jo
sub
jne
dec
int
in
mov
add
shrb
jecxz
cmp
mov
int3
cli
sbb
popf
adc
cmovb
add
inc
mov
fwait
inc
mov
call
pushf
not
xor
mov
and
add
jmp
add
push
gs
insb
outsl
jae
dec
gs
out
lea
jp
or
cmc
loop
stos
or
les
enter
mov
xchg
leave
pop
add
out
xchg
adc
pushf
outsb
pop
and
das
imul
int
inc
mov
mov
dec
xor
dec
lret
dec
divb
cmp
hlt
mov
xchg
push
push
adc
andb
scas
jns
xchg
dec
mov
insb
cwtl
xor
int
ret
mov
mov
addr16
cli
repz
inc
and
into
dec
movsl
dec
aam
insb
pop
scas
es
inc
jne
push
repnz
sbb
dec
ficoms
xor
loop
sub
inc
dec
ficomps
push
lea
in
jne
movsb
inc
sti
ss
int
sub
dec
mov
ret
cwtl
jmp
or
mul
or
or
lret
icebp
pusha
scas
cmp
ljmp
lock
xorb
push
out
mov
xchg
xchg
lea
jne
pusha
sbb
mov
xor
call
push
push
jmp
pusha
cmp
lahf
movb
lea
pop
lahf
pop
push
mov
push
call
lea
ja
setne
add
sub
bsf
test
bswap
btr
add
jmp
mov
mov
add
cmp
test
jmp
push
xor
mov
movsb
inc
pusha
xor
or
xchg
xor
push
inc
cmp
fwait
sub
push
add
mov
lock
jge
mov
xor
add
addr16
test
jne
jl
fs
sbb
popa
dec
or
clc
lock
cmc
mov
jae
xor
orw
pop
cld
out
sbb
hlt
xchg
lds
push
xchg
or
test
test
mov
cmpsl
mov
loop
outsl
xchg
add
pop
sub
push
dec
adc
and
cmc
ret
inc
ffree
xor
xchg
gs
xor
jecxz
push
inc
loop
mov
dec
xchg
adc
xor
js
mov
lds
pop
int3
jne
or
pop
cld
out
add
push
movsb
fs
xchg
movsl
xor
enter
sbb
mov
adc
jnp
int
divl
mov
dec
adc
cmp
dec
mov
pop
jae
and
sub
fs
call
mov
iret
cs
fstpt
fdivrl
push
lret
cli
mov
add
sbb
or
pop
push
rorl
xchg
jb
cmp
cmpsb
add
cmpsl
xorl
sbb
aad
movsb
cmp
sub
stc
push
mov
nop
pop
es
push
inc
loop
mov
and
xor
or
out
jae
cmp
sub
push
mov
mov
iret
popf
arpl
lcall
mov
or
mov
sub
adc
jbe
dec
mov
add
mov
in
aad
push
mov
push
adc
imul
sbb
adc
imulb
xchg
pop
test
xorl
out
mov
movsl
out
icebp
mov
sbb
jecxz
xor
loope
dec
leave
loope
stc
mov
cltd
ja
ds
sub
cmp
cmp
jmp
mov
push
hlt
jne
jnp
cmpsl
stc
mov
mov
add
popf
cmp
shlb
decb
pop
push
dec
test
pop
pop
dec
add
pop
xor
fdivrl
icebp
mov
sbb
test
into
fcoms
js
sti
cmp
dec
inc
dec
inc
icebp
adc
jge
in
ret
subb
sub
sbb
jno
push
xlat
inc
rcrb
clc
mov
sub
or
out
sub
cli
daa
std
add
push
pop
jb
pusha
mov
jle
mov
mov
in
add
fwait
dec
sahf
cli
cmpsl
push
xor
jae
mov
lods
jbe
dec
arpl
dec
movsb
pushf
xor
fdivl
enter
sbb
aas
mov
adc
xchg
cli
in
mov
push
lods
mov
jmp
idiv
pop
push
push
jmp
sahf
pop
and
aad
inc
add
decb
or
push
nop
ja
ja
push
out
scas
sub
mov
lea
js
or
xor
xor
stos
or
fsubp
in
mov
lods
xor
fmul
stos
scas
pop
push
jl
jecxz
and
mov
ret
scas
in
cmp
adc
addr16
pushf
push
jecxz
jne
out
out
out
push
dec
mov
shr
orb
inc
in
dec
adc
inc
adc
add
cs
mov
sbbl
pop
mov
addr16
fwait
out
xor
mov
push
imul
xor
mov
and
pushf
ret
cmp
lods
adc
or
inc
mov
inc
fcompp
gs
jo
imul
mov
push
mov
push
es
ficomps
jle
adc
cmpsl
jbe
xor
fucom
movsb
or
loop
popf
or
add
mov
inc
cmpsb
inc
or
sbb
insl
lret
xchg
movsl
aas
mov
call
test
jbe
sub
xchg
add
or
ljmp
cmp
ret
jo
cmpb
inc
orl
shlb
and
and
inc
xchg
sub
sbb
sub
mov
shll
fwait
xchg
mov
std
mov
pop
addr16
popa
and
cmp
je
mov
inc
sub
dec
loopne
mov
nop
pusha
ret
mov
out
or
ss
fs
and
jmp
lds
cli
imul
jno
xchg
je
xor
fsub
mov
inc
dec
mov
cmp
mov
mov
gs
test
stos
jp
std
mov
fmull
pop
dec
cmp
xor
add
xor
push
data16
repnz
subl
adc
lods
push
in
push
les
aad
dec
lret
xchg
sub
cli
ljmp
lahf
jp
adc
cltd
out
rol
inc
imul
lods
xor
or
loop
pop
lret
push
inc
fisubs
ret
shr
xor
dec
mov
xor
fsubl
ljmp
je
lock
sbb
cli
pop
mov
ss
ja
cmp
loope
xchg
xchg
lock
ds
arpl
xor
or
sbb
arpl
in
imul
sub
fcmovne
pop
outsl
dec
pop
sbb
xchg
sub
lods
mov
jecxz
ret
loope
addr16
mov
mov
xor
or
push
and
mov
mov
mov
addr16
sbb
sahf
or
mov
pop
mov
stc
movlps
sub
movsl
rcrl
shrb
cli
add
pop
adc
icebp
in
lds
push
ret
push
test
jg
push
xchg
std
cmpsl
fidivl
fisttpll
inc
orb
pop
pop
lret
jp
sub
mov
out
and
divl
sbb
lea
sub
rorl
sub
sbb
rolb
test
mov
pxor
or
faddl
pusha
enter
pop
xor
push
pop
add
xchg
call
fstpl
xchg
cmp
std
adc
jg
dec
dec
and
rol
push
bt
shl
test
add
mov
jmp
cmc
cmp
jmp
push
mov
mov
jge
bswap
mov
fs
mov
pop
adc
add
xor
ja
or
stc
add
inc
test
add
add
std
mov
add
inc
int3
out
aas
fiadds
sbb
sub
xchg
arpl
jo
jmp
ja
push
out
xchg
jmp
mov
push
and
push
dec
das
ret
dec
push
fwait
inc
movsl
subl
fcmovu
cmc
adc
fnstcw
xor
loopne
enter
aaa
dec
fstps
gs
add
fmull
test
pextrw
mov
fisttpll
inc
sbb
in
mov
ljmp
mov
add
ja
and
jno
ret
inc
pop
pop
jmp
xor
enter
jb
sub
loop
lret
imul
mov
fisubrl
xor
addr16
insb
mov
sub
test
out
fs
jb
btc
cmc
cwtl
mov
cmp
jnp
test
sub
not
call
mov
cmc
sub
bt
push
stc
cmp
lahf
cwtl
lea
lea
not
mov
mov
pushf
mov
pushf
lea
ja
call
test
jmp
fnstsw
ret
jb
fsubrs
xchg
sbb
pop
add
push
mov
mov
push
pop
mov
int
test
adc
pop
and
repnz
mov
cmp
mov
xchg
mov
lcall
aad
fadds
xor
out
dec
pop
vpsubb
movsl
xor
repz
fucomp
dec
mov
test
inc
cmp
hlt
clc
les
test
add
push
subb
mov
in
jb
mov
mov
jmp
fs
jne
movsbw
pop
pusha
setnp
pop
lea
mov
pushf
bswap
call
adc
fdivrl
pop
mov
leave
dec
insb
mov
push
mov
xchg
jne
mov
add
adc
inc
dec
xchg
push
in
fcomp
xor
bound
mov
pushf
int
test
xor
pop
cs
fcomps
insb
movb
leave
int
add
rcr
add
and
inc
das
sub
sbb
insl
ja
jmp
leave
dec
push
sahf
lods
mov
jne
out
rorb
popa
test
call
jle
jp
ret
popa
fisubrl
jne
inc
fsubrl
dec
push
cmc
push
and
int
ds
fstps
call
push
mov
fdivp
push
mov
jae
xchg
mov
pop
jmp
lods
iret
xchg
ljmp
xchg
fisttps
add
pop
adc
cltd
adc
and
hlt
xor
scas
xcrypt-cbc
cmpsl
xchg
pop
das
dec
popl
push
jge
popf
cmp
inc
test
push
add
fnstsw
into
jecxz
mov
sbb
popa
mov
test
lahf
in
adc
aas
cmpsb
jb
mov
repnz
pmulhw
pop
xchg
ljmp
adc
jns
mov
iret
ds
test
pop
movsb
jge
pop
inc
call
sub
fmull
xchg
imul
fdivrs
jbe
es
mov
or
cli
mov
jmp
mov
idiv
or
mov
or
inc
les
cli
lret
shlb
xchg
lahf
jne,pt
push
jne
push
push
and
xlat
cmc
jmp
cwtl
or
and
xlat
adc
push
xchg
fists
inc
sub
mov
mov
inc
aam
outsl
sub
push
add
sub
and
stos
pop
fcomps
clc
xlat
imul
push
aad
outsb
push
scas
test
mov
cmp
push
push
out
popa
ds
lret
loopne
jne
hlt
arpl
xor
aad
pop
fstl
daa
xor
insl
outsb
adc
sbb
mov
and
mov
aas
push
bound
adc
roll
jae
xchg
iret
mov
idiv
rol
stc
xor
call
adc
call
mov
dec
sub
fcoml
xchg
push
and
fucom
lea
pop
mov
dec
ljmp
pop
cs
xchg
jp
fs
movsl
ds
and
xor
lahf
xchg
stos
adc
pop
out
mov
enter
jno
aad
mov
testb
notl
mov
iret
or
add
scas
lods
lock
fstl
pop
stos
add
adc
cmpsb
sub
fadd
popf
add
mov
ds
call
scas
adc
andl
int3
enter
test
adc
out
push
xor
inc
push
repz
mov
or
and
mov
fadds
cmp
clc
sti
iret
out
jl
pushf
or
xor
mov
sub
lods
imul
sub
fsubl
fsubrs
xor
out
add
mov
push
frstor
jbe
or
iret
mov
sahf
nop
xchg
sub
jne
jns
fst
icebp
fisubrl
lds
sbb
sbb
rcll
testb
cmc
ss
mov
mov
iret
xchg
movsl
push
leave
push
sub
lret
cmp
xlat
aaa
jmp
cltd
xor
cmpsl
adc
shl
out
push
lret
outsb
imul
sub
fildl
mov
icebp
jb
flds
lods
jb
pop
add
dec
adc
adc
shlb
jecxz
je
das
fbstp
je
loope
pop
jecxz
lahf
js
mov
insl
insl
cs
insb
add
sbb
xor
not
mov
pushf
call
lret
pop
push
sub
faddl
test
pop
mov
clc
cmp
ljmp
dec
xor
fwait
in
mov
inc
fbld
stos
aad
cmp
mov
subb
inc
sbb
mov
sti
mov
push
cmp
lods
jl
sbb
jecxz
inc
rcrb
sub
adc
jmp
xlat
loopne
stc
inc
sub
outsb
jno
popl
aam
loop
bound
push
insb
notl
pop
cmp
jns
cmc
jb
mov
jne
pusha
movb
movsbw
movzbw
setae
mov
bswap
movb
lea
pushf
lea
call
cmc
iret
inc
sub
fdivr
cmpsl
xlat
jmp
and
movsb
call
lods
inc
and
jo
std
mov
mov
sbb
sub
jl
pushl
pop
cwtl
shll
ss
stc
add
push
cltd
pop
sbb
mov
cmp
jmp
sbb
shrb
shl
leave
ret
inc
dec
shrb
jle
fists
mov
adc
ja
jno
outsl
cmp
sbb
out
add
fstpl
scas
es
mov
cmp
dec
mov
fldenv
push
mov
std
cld
pushl
lods
subb
mov
dec
subb
cmpsl
mov
sub
push
sub
inc
cmp
pop
jae
xchg
aam
ret
mov
ficoml
dec
fs
inc
and
push
adc
popa
test
mov
fwait
mov
into
aaa
mov
and
push
sub
call
aad
daa
daa
ret
xchg
push
leave
xchg
lahf
leave
das
sbb
dec
cmc
xchg
adc
push
add
xchg
loop
ret
or
jae
mov
test
in
es
xchg
ss
lcall
sbb
xchg
popf
xor
in
test
push
pop
sub
cmovne
cmp
or
movsb
enter
mov
lock
insl
ss
popa
mov
lret
adcl
mov
sbbb
mov
and
or
mov
pop
mov
push
mov
jnp
cli
mov
ds
xor
test
and
mov
pop
and
mov
push
in
mov
sbb
sub
not
hlt
add
rorl
pop
pop
loop
es
roll
mov
cltd
js
popa
mov
js
out
pusha
jmp
pushf
movl
mov
mov
pusha
pushl
ret
rorl
fmull
jo
jmp
sti
push
pop
xor
jns
xchg
ljmp
icebp
dec
xorl
mov
mov
and
inc
mov
call
push
inc
sbb
ljmpw
mov
in
pop
leave
fcompl
mov
aaa
cltd
mov
movups
pop
sub
push
iret
scas
or
subb
gs
or
enter
pop
sarl
repz
push
lahf
gs
into
imul
xor
xor
xchg
negb
ja
bound
lea
cmc
test
pop
sar
bsr
pop
dec
pop
stc
shrd
pop
cmp
push
mov
test
mov
sub
add
pusha
pusha
movsbw
mov
mov
movb
pushl
ret
jb
cmp
push
cmc
pushl
cmpb
push
lea
jne
btr
and
neg
btc
mov
stc
bt
add
cmc
call
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
sbb
and
fmull
add
gs
adc
sti
rcr
mov
push
xchg
cmp
cmp
or
stos
arpl
gs
mov
fs
in
ds
cs
arpl
movsl
xor
arpl
je
insl
inc
adc
jae
loop
fwait
cmpsl
jno
cwtl
jae
inc
into
mov
adc
repnz
pop
mov
shrl
fcompl
sbb
xor
sub
test
xor
ret
xchg
lcall
loope
into
add
pop
pop
xchg
or
popa
icebp
push
add
movsl
int
fcmovnu
arpl
and
fmull
loope
outsb
in
mov
js
cmc
xchg
push
or
fadds
mov
jp
mov
out
mov
pop
xorb
push
push
mov
rorb
mov
push
je
dec
out
int
pop
imul
loopne,pn
jle
shlb
inc
imul
fisubl
pop
ja
dec
cmpsb
sahf
and
fcoml
repz
jl
xchg
ljmp
ror
add
push
jl
rclb
inc
mov
aam
popf
leave
push
dec
jmp
clc
push
adc
pop
mov
push
add
repnz
xor
mov
aaa
pop
sbb
mov
mov
mov
mov
pop
into
add
or
int3
push
xor
mov
cmp
and
dec
and
add
loopne
jmp
ret
add
mov
dec
fs
lahf
or
je
mov
adcb
or
sti
or
cmp
shl
fldenv
aad
jb
adc
push
ret
pop
cmc
xchg
imul
sbb
lcall
adc
ds
loop
or
ret
mov
xor
cmp
xor
jns
jb
pop
push
call
xchg
ds
pop
nop
push
test
jb
mov
sub
andl
pop
cmp
cmp
and
dec
or
jmp
adc
setnp
das
nop
bound
cld
xchg
fs
mov
into
outsb
mov
mov
test
mov
jno
shll
lcall
fs
add
xchg
push
out
jmp
xor
fnstenv
adc
xor
and
fdiv
cltd
sbb
or
loopne
cmpb
subb
insb
sbb
in
and
push
cwtl
cltd
push
and
lahf
push
mov
into
mov
nop
sti
sbb
sub
inc
push
mov
and
stos
int3
push
inc
insb
fistps
sub
out
mov
xor
sub
xor
in
inc
mov
add
adc
xor
sbb
mov
cs
sti
mov
push
aas
es
sub
mov
inc
xlat
xchg
sbb
int3
scas
lods
ficoms
call
movl
pushf
movl
push
lea
jmp
jmp
pusha
movw
pushf
lea
jae
shld
setg
jmp
bt
push
sub
setp
lea
movb
mov
lea
call
push
add
add
mov
mov
mov
cmc
test
cmc
cmp
jmp
mov
pop
ret
mov
rcl
xchg
push
push
aad
insl
push
mov
test
out
pop
lods
subb
inc
movsb
add
mov
aam
lret
adc
lret
adc
aaa
lea
pusha
mov
fcoms
fsub
rcrb
push
test
push
xchg
scas
ja
fnstsw
jmp
dec
arpl
jo
fldl
jle
ja
xchg
pop
adc
lds
outsb
fs
jno
inc
dec
xor
dec
xchg
loop
mov
in
rcl
imul
dec
ret
pop
ret
sub
shl
and
xchg
sbb
mov
in
jecxz
mov
adc
xchg
jno
adc
roll
aas
subb
enter
daa
adc
aaa
insl
xchg
jnp
cwtl
add
insl
add
push
loope
sub
rcl
popf
add
jle
add
movsb
xchg
addl
test
enter
popa
sbb
adc
push
loopne
xor
mov
dec
inc
loop
out
lret
icebp
in
mov
loopne
cs
outsl
sbb
dec
in
or
push
inc
inc
addr16
out
inc
mov
push
sub
test
xor
sbb
outsl
adc
ja
mov
pop
pop
sahf
jmp
lahf
mov
fcmovb
jl
insl
divl
repnz
sbb
inc
xlat
jecxz
lock
mov
jmp
pop
out
jmp
sbb
push
push
lea
jmp
repnz
push
ret
pushf
jnp
iret
sbb
xchg
sbb
sub
mov
cli
xchg
and
shll
dec
and
sarb
lcall
dec
enter
lods
mov
fs
jo
mov
mov
sbb
push
xchg
sub
xor
rclb
dec
mov
sub
inc
push
pop
add
cmc
negl
add
movsl
inc
ljmp
dec
jp
enter
test
out
cmpsl
jmp
movb
jmp
add
inc
gs
outsl
fs
gs
imul
add
fstps
leave
int
jnp
scas
sbb
cmp
cmp
in
add
cld
xor
pop
into
hlt
in
sub
bound
inc
sbb
and
ja
mov
jb
enter
jg
repnz
mov
pop
loop
mov
out
pop
fsubp
jae
into
aas
xlat
stc
mov
xchg
into
push
popa
push
sbb
rorb
add
xchg
sbb
fnstsw
cmp
js
pop
inc
mov
add
mov
jo
add
insb
adc
in
jo
add
insb
adc
hlt
jo
add
push
sbb
fsubrs
cld
jo
add
adc
loopne
adc
add
adc
mov
add
insb
adc
or
adc
mov
adc
lock
adc
adc
adc
imul
adc
sbb
adc
call
add
insl
adc
and
adc
shl
adc
or
add
adc
add
insl
adc
xor
adc
stos
jbe
add
insl
adc
cmp
adc
xor
sbb
and
add
add
insl
adc
dec
jno
add
insl
adc
add
jle
pop
sbb
fdivl
jg
mov
stos
lods
jb
sub
mov
stos
jmp
cmpsl
pop
add
cs
xchg
in
jnp
leave
repz
nop
inc
lods
pop
xor
pop
cs
stos
dec
cmpsb
mov
loope
jo
mov
aam
or
sbb
js
push
cmp
ret
dec
pop
sub
sub
pop
sbb
xchg
fsubr
hlt
das
xlat
ret
ror
pop
loopne
jmp
in
xchg
loope
ds
xor
ret
jge
push
lret
loopne
inc
jno
test
test
repnz
sub
jns
nop
ljmp
and
mov
push
das
cmp
pop
jo
outsl
stos
dec
test
je
mov
out
into
ucomiss
pushf
shlb
negb
and
mov
mov
negb
cmpsb
mov
mov
int3
dec
push
sbb
pop
pusha
in
ss
cld
je
xchg
cmp
addr16
jp
int3
jo
mov
push
and
and
outsb
cwtl
repz
pop
test
lea
mov
setns
setnp
pop
setae
pushf
mov
bswap
mov
movb
mov
call
pop
dec
pop
sbb
fmull
lods
mov
fiaddl
mov
fwait
jne
add
and
or
cli
xchg
stos
or
sbb
pop
jp
addb
inc
iret
dec
push
jno
mov
test
cld
sub
or
add
and
push
sarl
sub
and
mov
mov
lcall
jge
fldcw
test
and
push
sahf
sahf
loopne
push
cmpsb
push
arpl
jp
inc
lcall
je
sbbb
fdivl
in
insl
loope
mov
cmp
lahf
sbb
and
ss
sub
mov
popf
add
push
pop
mov
mov
mov
add
fnstenv
jge
loope
xor
xchg
mov
jbe
notl
js
ret
add
sub
cld
jl
or
andb
jne
stc
cmc
cmpb
push
lea
jne
test
cmp
rcl
mov
jmp
sti
mov
jns
mov
rcrl
mov
mov
xchg
mul
mov
jge
pop
pop
pop
out
push
sub
pop
cmp
xchg
inc
in
aad
popa
outsl
sbb
jbe
inc
aad
cmpsb
jns
push
pop
lcall
jo
lret
movsb
orb
test
mov
lcall
lea
cmp
or
popf
pop
mov
cmp
cmpsl
insl
leave
shl
leave
push
and
scas
jp
inc
mov
and
mov
mov
dec
movl
mov
movw
pushf
movb
pushl
popl
push
pushl
ret
aaa
out
sbb
fcoml
sub
scas
aaa
pop
jne
mov
jmp
sbb
and
pop
or
mov
dec
popa
adc
mov
dec
mov
mov
mov
inc
and
inc
mov
mov
stc
movsl
call
push
pop
jmp
cmpsb
pusha
fstpt
add
data16
shll
test
imul
cmp
lret
cmp
inc
or
scas
dec
jle
mov
pushf
dec
icebp
aad
push
iret
mov
aam
fs
ja
push
lea
jb
pushf
call
bt
movzwl
or
bt
movsbl
neg
mov
stc
pushf
pushf
mov
add
stc
movb
mov
stc
test
pusha
jmp
lea
je
test
jmp
or
mov
sbb
and
bts
movzbw
mov
rol
not
movsbw
xor
inc
not
mov
add
mov
call
std
xor
js
mov
stos
mov
sbb
jo
push
cltd
out
cli
inc
pop
mov
push
push
or
push
cmp
or
mul
mov
movsb
enter
inc
or
mov
push
mov
sub
add
adc
xor
pop
adc
jbe
jae
or
into
xlat
sbb
fcoms
mov
sub
cld
add
jnp
dec
xor
lods
add
pusha
in
sub
fs
add
pop
inc
push
or
sub
inc
iret
imul
not
mov
bswap
pusha
lods
bt
bswap
ror
sub
pusha
add
neg
inc
dec
movzbw
rol
adc
call
sub
rcll
ret
xor
jl
mov
test
call
mov
rolb
out
fwait
cld
mov
mov
pop
es
jbe
xchg
xor
mov
stc
sub
aad
into
in
imulb
cmp
dec
xchg
aaa
jne
inc
cli
mov
jp
or
lods
sti
ficoms
test
adc
xor
xor
xchg
xchg
dec
xchg
or
repnz
sbb
jns
orb
ret
fwait
cmp
mov
rorb
rorl
pushf
movb
call
add
bt
bt
movzwl
xor
mov
pusha
movw
cmc
add
clc
pushf
test
push
mov
stc
jmp
movl
push
jmp
call
aaa
jle
push
ret
adc
dec
loop
fnstenv
cmpsl
fdivrl
stos
push
sub
fucomip
add
jecxz
jo
cmp
xchg
ret
cmp
cmp
sbb
nop
bound
loopne
stos
or
cltd
adc
inc
sub
adc
and
sub
dec
popl
lock
mov
scas
and
imul
aad
ret
or
inc
inc
pandn
fisubl
les
mov
loop
lcallw
and
push
xor
push
pushl
pushf
jmp
mov
pushf
call
mov
shl
mov
cmp
call
pushl
jmp
test
adc
adc
jb
sbb
rol
iret
xchg
jmp
dec
sarl
push
mov
mov
pop
in
jmp
dec
pusha
out
mov
imul
cmpsb
shlb
cs
mov
pop
scas
cli
daa
push
pop
scas
push
aas
fistpll
sbb
mov
and
mov
push
sbb
outsl
jno
cmp
sbb
adc
or
adc
push
cmpsb
andb
cs
imulb
pop
rclb
lcall
mov
daa
or
adc
pop
mov
adc
sti
addr16
push
add
test
loopne
jno
or
xchg
mov
mov
pop
xor
sub
sbb
or
or
leave
test
xor
call
nop
push
cmp
roll
ss
dec
pop
xor
insl
dec
push
push
mov
test
pusha
bt
pushf
movzwl
shrd
adc
sbb
shr
mov
movb
pushf
add
stc
cmp
jmp
inc
popf
xchg
adc
fmull
mov
jmp
xlat
repz
mov
mov
stos
lods
jbe
or
pop
mov
mov
hlt
xor
in
cltd
sub
or
enter
popa
sbb
out
and
jmp
cmpb
bound
dec
push
xchg
popa
inc
imul
fmuls
cmp
mov
ljmp
pop
int3
jnp
push
fucomip
push
cmp
addr16
or
pop
mov
xchg
adc
cmpsb
push
mov
sbb
es
pop
addr16
fdivl
pop
lret
xchg
jno
stos
sbb
sarl
and
pop
push
bound
pushf
add
mov
cmp
mov
mov
loop
cmpsb
dec
movb
aam
pop
and
scas
ret
jbe
loop
jne
inc
jg
gs
and
sbb
jbe
jo
sub
in
call
jns
sti
outsb
dec
and
outsl
cmp
push
mov
pop
jnp
jg
pop
bound
icebp
movb
push
and
xchg
pop
push
add
mov
jns
and
or
stos
cltd
xchg
add
xchg
les
pusha
add
xorl
sub
or
inc
std
push
add
mov
push
not
test
mov
push
mov
mov
sub
cmc
repnz
jmp
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
jl
std
mov
jnp
mov
std
leave
mov
scas
in
sub
int
dec
xor
cmp
add
adc
push
mov
lods
stos
push
mov
pop
test
xchg
mov
pop
pusha
jecxz
adc
xchg
lods
imul
lods
scas
mov
int
fmull
stos
dec
fisubs
je
sbb
and
ror
push
add
cltd
negl
xchg
out
iret
shl
clc
add
push
lea
jmp
push
mov
push
fs
into
shlb
sub
dec
lcall
push
cmp
roll
icebp
and
sub
pop
popl
ljmp
cld
xor
hlt
dec
inc
pop
mov
fs
push
cwtl
mov
and
push
outsl
out
mov
pop
sbb
mov
jo
stos
dec
jl
add
xchg
notl
add
dec
push
mov
inc
stos
outsb
in
outsl
aas
lret
jbe
jnp
test
data16
int
mov
jo
arpl
call
ljmp
xchg
sbb
sub
cmp
cmp
add
or
or
outsb
sbb
mov
or
fstpt
repnz
insb
jge
xor
lods
add
dec
xacquire
mov
dec
push
sbb
add
add
aam
dec
fstpt
fiadds
loope
and
jmp
icebp
cmp
decb
dec
jmp
pusha
pushf
jmp
fnstcw
adc
fsubl
jae
or
rcrl
pop
sub
pop
jecxz
and
inc
adc
jl
push
add
es
repz
test
and
ret
sub
add
xchg
cmp
test
popa
nop
fisubl
mov
addr16
jg
adc
lods
pop
and
scas
jo
jge
sub
add
outsb
lock
adc
movsb
out
cmp
jb
aas
in
ror
aas
mov
mov
xchg
mov
or
aas
incl
in
imulb
cmpsb
pop
fisubrs
ror
and
fdiv
loope
imul
or
mov
inc
inc
sub
out
je
mov
mov
mov
mov
cmp
repnz
push
dec
out
je
jge
hlt
push
fmul
pop
cmp
jmp
xor
mov
lea
es
jl
pop
test
cmpsl
outsl
repz
sbb
cs
xor
pop
rcr
adc
das
repz
dec
adc
push
push
mov
fisttpl
adc
push
jae
outsl
das
fistpl
jns
lret
adc
cltd
jne
es
cwtl
je
jns
in
and
push
gs
int3
xchg
jl
inc
icebp
enter
data16
mov
lret
or
jmp
mov
adcb
sbb
arpl
xor
leave
or
inc
into
jne
gs
inc
inc
in
lahf
test
movl
pushf
pusha
movb
lea
jmp
push
addr16
cmpps
pop
popl
scas
cmp
mov
jns
jecxz
jbe
nop
cmp
insl
or
ficoml
xor
fprem1
push
mov
out
xchg
idiv
lods
arpl
and
adc
into
lock
pushf
sbb
test
gs
xorb
pop
jnp
popf
pushf
popl
and
js
lods
add
cmp
push
repz
cli
ja
adcb
mov
rcll
dec
in
xchg
ss
cmp
ja
lea
call
jmp
add
mov
mov
push
pushf
test
pushl
mov
lea
je
call
movb
lea
je
pusha
cwtl
lea
mov
lea
call
jmp
call
xor
fcompl
lock
dec
orl
out
sub
and
mov
xor
lea
daa
aad
movsb
and
jb
cld
adc
hlt
xchg
nop
or
cwtl
push
and
dec
repz
mov
outsb
sbb
jg
mov
cmp
addr16
and
cli
push
out
and
jns
into
in
dec
add
jno
cmp
and
push
gs
adc
lret
fwait
push
push
mov
popf
and
lcall
and
add
xor
mov
mov
sahf
icebp
xlat
push
fdivrs
mov
outsb
insl
cltd
outsl
xor
inc
sbb
fs
sar
and
js
adc
jbe
sar
adc
stos
jo
xor
clc
or
les
imul
cmp
stc
jbe
or
add
loope
jl
in
pop
pop
mov
push
ret
cli
fs
mov
push
mov
testl
and
loop
jbe
pusha
lea
push
pushf
jmp
mov
lea
call
push
bt
test
mov
call
je
call
cmp
add
push
stc
mov
shrd
add
mov
jmp
lret
ret
or
fdivrl
adc
ret
dec
test
inc
rorl
and
mov
pop
mov
add
jbe
dec
insl
loope
dec
push
jns
js
in
into
stos
aad
pop
insl
or
lahf
stos
sub
hlt
cmpsb
mov
mov
je
xchg
or
mov
insl
mov
insl
dec
cmp
inc
ds
stos
xor
mov
sbb
in
stos
pop
rcrl
mov
add
sbb
addb
inc
js
icebp
cmc
xchg
inc
pop
dec
ss
sbb
inc
or
or
jb
or
fdivl
pop
vrsqrtss
lret
icebp
cmpsb
call
jae
ficomps
dec
rorb
inc
jmp
repnz
xchg
add
inc
jno
sub
inc
cwtl
lock
push
pop
mov
das
cmc
aam
pop
adcl
dec
mov
jecxz
into
and
mov
mov
js
xor
or
mov
sub
mov
add
sarb
popf
xor
or
pop
jmp
sub
cmpsl
out
cmp
aas
filds
fwait
xchg
or
fmull
dec
ret
iret
les
add
loopne
psubusw
call
xchg
popf
sahf
cmp
lcall
inc
or
ds
sub
ja
xor
insb
mov
cltd
orb
sub
pop
pop
adc
je
cmp
jno
jle
or
es
lock
fsubl
or
out
add
pop
push
mov
ja
mov
dec
lods
orb
add
sahf
rclb
push
push
adc
out
js
inc
hlt
dec
fs
adc
xchg
or
xor
lret
call
scas
xchg
dec
inc
adc
inc
jno
pop
lcall
xor
pop
adc
shll
ret
out
cmp
insl
dec
lcall
xchg
jo
mov
pop
mov
fs
es
ret
mov
insl
cmc
rcl
popa
jae
xchg
dec
les
sub
faddl
mov
in
push
out
ja
cs
sbb
sbb
add
pop
push
movsl
jl
je
jbe
clc
mov
sbb
cwtl
daa
cmpsb
fs
and
cs
popa
sub
mov
leave
lods
xchg
push
lds
in
xchg
inc
push
push
int3
push
adc
and
mov
mov
mov
push
cmp
jmp
adc
add
fs
jae
clc
call
and
shrb
push
fdivrl
adc
sub
test
mov
rclb
mov
adcb
daa
pop
mov
out
out
push
adc
adcb
adc
cmp
aas
dec
adc
xor
add
aas
pop
push
or
and
pop
int
jmp
xchg
jbe
mov
and
mov
sbb
mov
push
push
mov
gs
or
scas
repz
out
inc
xchg
mov
jg
or
and
or
fdivl
test
aaa
mov
popf
pop
cli
cmp
push
rorb
add
cmpsb
mov
inc
test
outsl
lea
fwait
add
inc
lock
or
jg
xor
ja
push
fnstsw
hlt
inc
sub
or
outsb
fsubp
shll
test
lods
out
in
cmpsb
lret
mov
xor
jle
jmp
fdiv
xchg
push
add
addr16
cmp
inc
inc
das
mov
loope
mov
xor
inc
test
addr16
loop
jecxz
rolb
adc
xchg
es
lods
dec
push
pop
jbe
dec
fwait
inc
push
mov
aam
sbb
jmp
xlat
cmp
dec
pop
push
and
xor
popf
imul
cmp
lcall
dec
stos
gs
pushf
dec
add
push
xor
in
out
repz
dec
clc
add
jb
push
lods
stc
subl
sub
adc
mov
in
sub
in
jbe
test
loope
out
nop
aad
jnp
movsl
adc
cmpsb
and
and
ret
jle
scas
jmp
push
mov
mov
outsl
ljmp
lods
cs
aam
mov
loopne
out
and
addr16
xchg
sub
push
jne
push
in
mov
test
dec
adc
mov
outsb
xor
gs
in
gs
repz
je
jns
fwait
adc
push
sub
frstor
lret
push
jecxz
jo
hlt
stos
inc
jns
sbb
gs
rcl
sub
pushl
or
cmc
lea
add
pusha
sar
mov
jmp
je
addl
pop
lcall
repz
shlb
mov
movsb
or
aaa
daa
sbb
push
pop
dec
sbb
clc
push
push
in
lret
std
inc
popa
or
sbb
adc
xchg
push
push
mov
jmp
cltd
mov
repz
pop
push
pop
mov
int3
push
out
ret
jmp
dec
push
jg
imul
push
mov
dec
leave
pop
xchg
mov
fldt
int3
sub
jmp
jecxz
or
mov
jne
fcmovu
jb
push
ret
push
fcmovu
vxorps
or
testl
dec
cmp
or
ret
xchg
mov
loope
push
movsb
rcrl
das
and
add
sbb
xor
xorl
mov
xchg
xor
ja
cmc
gs
stos
sub
xchg
cmp
push
ds
lcall
xchg
mov
dec
mov
dec
dec
loopne
sbb
jns
decl
inc
ficompl
cmp
ja
movsl
jns
sbb
push
pop
clc
loopne
cli
sbb
push
rorb
mov
mov
call
sbb
xorl
xchg
cmp
xchg
sub
lret
mov
dec
inc
dec
iret
jbe
and
cs
pop
aas
mov
sbb
imul
mov
imul
cwtl
and
ret
mov
add
in
mov
sbb
cmpsl
mov
lock
int
pop
push
sti
clc
ds
lock
test
mov
mov
mov
test
std
adc
mov
mov
add
shlb
sete
cmpsb
jl
leave
xor
fs
jb
jno
xchg
xchg
mov
icebp
sub
rorl
or
push
xchg
xchg
das
pop
int
add
sbb
xchg
fwait
imul
shrb
xchg
out
lcall
pminub
mov
xor
xchg
aaa
dec
mov
mov
dec
mov
lret
cltd
fs
hlt
and
sub
cmc
stc
repnz
movw
call
lea
jb
stc
cmp
pusha
lea
jae
xadd
shl
btr
mov
push
xor
bt
call
pushl
stc
sub
test
pushf
clc
cmc
pushl
popl
mov
movb
movb
cmp
movw
pushf
lea
ja
adc
ror
sub
neg
add
shld
clc
mov
stc
call
pusha
mov
sub
clc
pushl
repnz
jmp
jnp
lcall
mov
push
xchg
xchg
ds
mov
jb
sub
and
scas
mov
cld
rclb
andl
and
inc
pop
clc
dec
daa
push
and
lods
mov
push
pop
xchg
cld
shrl
push
andb
in
ret
lcall
test
pop
sub
jmp
imul
out
test
lods
in
adc
ret
xor
adc
fwait
jb
adc
js
daa
jns
mov
imul
push
out
imul
cwtl
push
cmp
add
fsubrl
insb
movsb
adc
jne
pop
idivl
mov
mov
adc
mov
lret
out
cmp
repnz
xor
push
inc
repnz
sbb
imul
push
loope
daa
test
sub
add
testb
lds
mov
ss
mov
dec
pop
fdivs
idivb
xchg
sub
movsb
sub
loop
pop
inc
cmp
sti
cmp
test
sbb
and
jg
cmp
bound
and
dec
test
aaa
das
add
fsub
jle
mov
jl
cmp
repnz
addr16
icebp
loope
jle
sub
stos
inc
add
mov
xchg
out
cs
fcoml
in
cltd
mov
in
ds
pop
mov
pop
std
add
fstpt
lret
loopne
xor
imul
push
xchg
xchg
mov
lcall
mov
pushl
popl
pushf
push
mov
pushl
ret
jmp
lahf
bswap
jmp
repnz
pusha
pushl
pushf
lea
jne
lea
neg
mov
cmp
push
sub
push
rcr
bsr
adc
lea
cmc
bt
mov
push
sub
push
pushl
popl
test
movw
movw
cmc
cmp
jmp
sub
sbb
ret
or
outsl
lds
mov
push
bound
and
sub
out
mov
cmc
xor
cmpsl
sub
sub
jl
and
gs
adc
dec
out
or
adc
add
loopne
or
fucomp
mov
pop
sbb
inc
mov
pop
or
xchg
rcr
rcrl
mov
add
fiadds
xchg
sub
push
or
jae
add
pop
aam
ja
dec
cmp
aad
outsl
mov
pusha
dec
into
inc
jno
mov
dec
dec
pop
sbb
adc
loop
fidivrl
out
add
ret
stos
xor
pop
data16
cli
dec
push
mov
ret
mov
aas
lods
xor
push
mulb
movsb
cmc
cmp
scas
std
xchg
nop
and
pop
mov
in
pop
cltd
mov
mov
insb
and
sub
aas
adc
xor
jle
cwtl
pop
arpl
mov
add
dec
add
mov
add
add
add
add
xchg
adc
add
add
adc
in
add
fsubl
flds
mov
mov
idiv
xor
cltd
or
je
adc
bswap
cmp
xchg
aaa
hlt
into
mov
sar
ret
xchg
nop
ljmp
decl
ljmp
fdiv
push
fnsave
or
ret
das
test
js
jno
push
xor
jns
mov
inc
out
sub
jp
mov
bound
sbb
lcall
and
cwtl
inc
stc
mov
dec
adc
cs
pop
or
add
fmul
jle
addr16
xor
pop
out
mov
push
sub
sub
fmull
and
inc
rorl
rorb
inc
mov
pushf
dec
ljmp
ret
inc
sbb
scas
shll
ror
mov
stos
jne
mov
insb
adc
sub
subb
inc
mov
jmp
pop
insl
mov
inc
and
int3
rcrl
add
fdivl
in
pusha
xchg
test
inc
mov
mov
push
clc
out
sub
jg
pop
mov
jnp
imul
add
sbb
shl
pop
and
xchg
aas
aad
mov
and
xor
add
push
dec
daa
aas
lods
xor
inc
pop
ds
imul
and
aaa
out
mov
xchg
das
add
mov
insb
icebp
pop
sub
push
ds
insb
rolb
dec
add
cmc
and
leave
cmp
pop
scas
jecxz
repnz
sub
and
fsubr
and
into
cmp
repnz
call
and
dec
push
inc
in
xor
mov
sbb
aas
inc
iret
xor
test
mov
xchg
mov
dec
dec
mov
jo
adc
roll
push
testb
out
aam
xchg
cmp
in
out
sub
mov
add
inc
fsubrl
dec
incb
orb
ss
adc
movsl
push
push
call
push
out
cmovb
inc
sbb
insb
sbb
js
inc
lahf
adc
ret
pop
pop
push
jmp
negl
xchg
add
call
and
out
pop
daa
daa
mov
sysexit
pushf
push
cld
push
int
mov
aaa
jo
jl
dec
repnz
scas
cmpsb
pop
sub
lock
sbb
and
inc
fmul
push
in
das
data16
fldl
leave
xchg
push
mov
das
inc
lret
lods
cmp
dec
out
fs
jg
jg
aad
or
sbb
sti
aaa
jae
aaa
add
sbbl
lods
mov
lret
ss
into
lods
les
ret
cmp
in
push
sbb
pop
xchg
sub
sbb
sti
xchg
sbb
push
out
test
and
dec
les
sti
andl
add
lods
stos
mov
xor
adc
cmp
bound
in
out
fdivs
dec
outsl
mov
and
mov
mov
mov
out
cmp
cmc
mov
cmp
loope
bound
pop
sbb
xchg
stos
pushl
frstor
enter
sahf
fmul
lds
jge
ljmp
xor
mov
sub
pop
loop
clc
cmp
outsl
fadds
push
sub
sarb
cmp
in
cmc
xchg
int3
jo
push
and
rcr
sbb
outsl
add
insl
andb
push
and
push
and
cmp
mov
push
aas
ficoml
pop
cmp
leave
mov
push
faddl
hlt
cmp
mov
push
movsb
rorl
adc
mov
push
movsl
subl
push
mov
mov
push
in
add
adc
mov
lret
jbe
xchg
jae
insl
enter
xchg
movsl
arpl
out
or
inc
add
cmc
mov
lods
lods
cmpsl
hlt
pop
add
int3
dec
test
insb
jmp
les
daa
fsubp
shl
insb
cmp
rcr
popf
jp
pushf
adc
jae
sbb
sbb
mov
sbb
ds
jmp
dec
mov
pop
add
xchg
fdivs
cwtl
xchg
inc
inc
imul
sub
xchg
dec
add
sub
rol
rcll
dec
sbb
or
outsb
into
insb
icebp
mov
daa
daa
sti
jge
outsl
dec
inc
loopne
cwtl
dec
sbb
notb
and
js
mov
fs
cwtl
pop
bound
ret
xor
mov
cmp
mov
pop
loop
add
arpl
fisttpl
jno
mov
ja
imul
repz
mov
add
add
push
lret
das
sbb
pop
mov
arpl
xchg
mov
lret
aad
mov
lods
and
sbb
stc
loopne
outsb
iret
dec
popa
mov
ret
mov
loope
mov
push
into
movl
and
push
push
fistps
jl
scas
jns
movb
daa
mov
insb
std
lock
movsb
and
lret
notl
popa
sbb
outsb
outsl
shrb
idivb
push
and
dec
inc
stc
clc
adc
push
cmpsl
jl
ret
loope
push
testl
cmp
mov
addr16
gs
dec
pushf
mulb
ds
mov
fucomi
mov
fiadds
push
pop
stos
mov
js
add
xor
loope
jnp
push
ljmp
push
mov
stc
ror
sbb
cmp
int
xor
stos
imul
dec
pushf
sub
aad
mov
in
movsb
sbb
nop
and
mov
stos
dec
das
push
inc
jo
cmp
in
in
dec
popa
repnz
cmc
pop
bound
jl
push
push
sbb
pop
das
mov
pop
pusha
pop
sbb
aaa
repz
lds
adc
repnz
xlat
or
mov
mov
clc
stc
mov
jo
scas
es
or
iret
or
push
sarl
xor
mov
xchg
pop
lods
cld
hlt
shl
xchg
aad
mov
jne
mov
stos
cmp
mov
ja
xor
mov
clc
or
jecxz
pop
mov
inc
loope
fadd
int
sub
push
pop
push
lret
cmp
and
add
icebp
sbb
mov
sub
dec
push
or
jns
and
repz
xchg
adc
movsl
and
xchg
std
xlat
inc
jb
pop
je
lret
push
push
mov
xchg
mov
mov
cli
push
fwait
sbb
insb
or
jge
adc
addl
rcrl
mov
cld
and
insb
jne
rol
js
jo
repz
lock
fdivrs
mov
pop
push
xchg
cmp
add
xchg
dec
iret
xchg
dec
loopne
and
sahf
push
jp
add
and
xchg
cmp
sti
ret
dec
jge
push
jmp
sbbl
cltd
call
push
insl
movsb
stos
cmp
add
mov
ljmp
mov
out
sub
cmp
scas
lods
sbb
gs
cmp
mov
and
andb
enter
movsb
mov
vaddsubpd
adc
daa
sub
aaa
jmp
mov
lret
xchg
orl
enter
outsb
push
int3
call
mov
inc
sub
mov
ret
sub
rorl
fisubl
jl,pn
mov
rorb
lahf
outsb
adc
jle
inc
mov
mov
insb
in
insb
jmp
push
ljmp
testl
data16
or
scas
xor
dec
orl
xor
fs
dec
divl
in
pop
mov
shlb
repnz
repnz
lods
ljmp
loop
out
outsb
dec
pop
ljmp
sub
or
jl
mov
aas
mov
mov
into
mov
push
js
inc
cs
jg
jmp
xchg
xchg
jnp
xchg
int
jp
jbe
mov
mov
cmp
push
sbb
xchg
sub
and
stos
inc
mov
mov
ljmp
in
decb
dec
sbb
push
fdivrl
cli
mov
mov
adc
pop
pushf
jg
sbb
jb
mov
ja
jnp
xor
inc
add
jns
dec
insl
pushf
and
dec
sub
and
pop
or
lcall
mov
into
adc
pop
insb
xlat
flds
ljmpw
imul
inc
push
dec
addr16
addr16
sbb
ficomps
pushl
rcl
adc
push
jo
lods
lds
push
sub
xor
mov
sti
lret
lea
mov
aad
scas
jo
aas
stos
mov
sbb
cmp
push
mov
mov
repnz
xchg
cmp
loope
mov
xor
shr
xchg
fsts
leave
aam
imull
enter
pop
std
fnsave
xor
mov
mov
cmp
cmc
push
stos
fstp
or
mov
push
mov
mov
pop
jg
cmc
das
icebp
icebp
and
cmpsl
jmp
pop
mov
cwtl
pop
mov
sbb
pop
xor
jnp
dec
mov
test
fsub
clc
lcall
sub
add
lea
jmp
mov
dec
aad
mov
mov
cld
inc
fsubrl
mov
movsl
sbb
pop
sti
jnp
sub
outsb
rolb
add
push
into
testb
sahf
lcall
andnps
cltd
mov
mov
ret
jae
mov
push
cltd
sahf
add
cwtl
push
push
int
dec
xor
cmp
push
test
movsb
insl
in
mov
jmp
mov
aad
and
xor
test
ljmp
adc
mov
mov
xor
loope
xor
push
push
pop
mov
cmp
sbb
mov
in
lret
jne
xchg
pop
cmp
in
inc
dec
xchg
lds
jae
cmpsb
mov
push
cmpsl
xchg
je
daa
repz
rorb
or
or
jbe
xor
dec
in
sub
mov
xchg
ss
cmp
ja
dec
inc
call
rorb
test
pop
movd
insb
jl
fistpll
add
lods
ljmp
mov
jne
mov
es
test
dec
repz
xor
pop
jecxz
negl
fmull
cmp
aad
cmp
jge
leave
jns
xchg
push
in
cmp
jae
dec
out
mov
and
inc
mov
and
icebp
js
cs
pop
rcrl
fildll
ret
mov
sbb
pop
inc
xchg
push
dec
inc
adc
movsl
aam
dec
out
ja
xchg
mov
sar
pop
sti
mov
out
push
xchg
adcl
and
xchg
mov
stos
fisttps
mov
hlt
mov
div
shr
fcomps
or
jecxz
lods
mov
sbb
pushf
mov
and
lea
adc
mov
fisttpl
jo
sbb
xchg
test
xchg
movsl
bnd
add
and
outsl
cmc
xor
repz
pop
mov
imul
repz
inc
jns
ss
mov
jge
cmc
or
mov
mov
fdivr
xchg
filds
outsb
iret
insb
inc
je
dec
movntps
mov
cmp
shrb
iret
shl
sti
mov
shll
sti
mov
bound
pop
inc
bound
adc
inc
pop
inc
in
pop
cmpsb
outsb
push
xchg
arpl
popf
in
enter
mov
ds
faddl
sub
inc
aad
sbb
inc
divb
mov
inc
inc
add
fisubrl
jae
int3
sub
inc
aam
jmp
cmp
insl
sub
mov
test
inc
inc
fldt
xchg
jl
repz
jae
lret
pop
orb
push
repz
mov
shl
outsb
and
or
fmul
push
mov
addl
repnz
outsb
mov
sbb
fldl
mov
pushl
sbb
popf
and
xlat
leave
ret
hlt
mov
add
pusha
cli
mov
and
mov
bound
sbb
pusha
fcmovne
scas
fwait
add
lods
xchg
jbe
push
xor
int
mov
outsl
mul
ret
shr
dec
jno
and
add
inc
adc
xchg
cmc
or
cmpl
or
dec
push
rcrl
pop
mov
sub
test
outsl
je
lds
gs
or
or
ret
xor
xchg
orl
hlt
add
cmp
and
mov
out
dec
dec
andps
inc
xchg
push
popa
mov
inc
jge
into
push
leave
das
inc
xchg
into
xlat
dec
xor
xchg
repnz
andb
xchg
push
aas
sbb
cld
pop
movsl
ret
sbb
pushf
push
ret
push
push
inc
mov
jo
sbb
loope
pop
xlat
add
mov
cmpsl
sub
inc
xchg
jno
cmpsl
sbb
mov
cmp
mov
test
fbld
call
in
add
mov
bound
sbb
lret
jb
jb
jae
jmp
dec
ret
lret
adc
pop
sbb
cmp
ret
add
mov
das
mov
dec
loop
out
sub
cld
ja
inc
or
divl
lcall
out
cmpsl
jl
cmp
inc
add
nop
mov
out
popa
cmp
into
inc
repz
popf
icebp
sub
hlt
lret
mov
pop
pop
inc
fcomp
stos
ret
cwtl
push
stos
push
aas
outsb
add
cmp
test
dec
xchg
jb
inc
xor
ss
hlt
sub
call
popa
jmp
pop
mov
subl
into
negl
mov
pop
mov
sti
ss
jecxz
mov
pop
xor
push
mov
sbb
cwtl
shrl
sahf
rol
mov
scas
loop
ret
dec
sbb
xchg
push
jne
pop
push
mov
cld
cmp
mov
fimull
sub
and
ja
or
pushl
in
hlt
cmp
cltd
cmp
push
jb
dec
je
icebp
lock
addr16
add
xor
cmc
in
sub
lahf
sar
pop
jge
xchg
xchg
sbb
xor
ljmp
and
out
adc
sbb
cmp
addr16
repnz
insb
imul
mov
add
out
hlt
mov
scas
jno
sarl
pop
push
mov
lret
lret
scas
mov
fs
leave
loopne
inc
js
adc
ljmp
addr16
pop
add
dec
fs
or
lret
cmp
inc
jb
dec
hlt
xchg
jge
cld
mov
dec
push
push
hlt
xchg
jne
adc
cwtl
test
lea
inc
pushf
sbb
orb
push
add
and
fistpll
test
add
sbb
mov
xor
test
mov
adc
pop
test
outsl
push
lods
mov
pop
xor
xor
pushf
rolb
orl
mov
adc
ja
mov
scas
scas
xchg
and
pmullw
xlat
push
stc
stos
inc
lea
test
loopne
bound
push
jno
jne
jae
daa
imul
lods
pop
roll
xchg
inc
sbb
xchg
mov
pop
inc
sbb
inc
dec
jge
and
es
jmp
dec
and
add
add
movb
sbb
or
and
gs
jge
fstpt
mov
daa
add
xor
adc
call
and
mov
add
incb
ret
sub
xor
sub
test
addr16
aaa
ret
cmp
fists
jo
leave
loop
mov
js
iret
das
xor
pop
cltd
sub
fdivs
adc
fildll
int
xor
test
mov
push
stc
xchg
lods
pop
arpl
sub
jns
rcll
inc
enter
mov
and
jbe
cmp
pop
adc
push
add
push
adc
cmp
aam
sub
repz
cltd
addr16
inc
std
push
push
mov
arpl
leave
jnp
dec
xchg
test
dec
mov
xor
inc
out
imul
xor
jge
fwait
add
adc
adc
out
out
out
aad
mov
pop
fs
in
out
aaa
jbe
int3
call
inc
jnp
rolb
ret
sbb
and
rcl
mov
scas
sub
out
enter
cli
outsb
sub
stos
fwait
inc
mov
sub
popf
cmp
cmp
fisubs
out
arpl
into
leave
scas
add
mov
adc
or
inc
xchg
fcmove
mov
pop
lret
leave
loopne
pop
sahf
mov
pop
fistl
adc
xchg
out
movsl
imul
data16
repnz
movsl
int3
call
jb
imul
sbb
add
clc
jns
dec
std
leave
push
push
pop
cltd
mov
fisttps
pushf
inc
sub
pop
enter
jmp
push
cmp
cli
out
push
push
lds
cld
idivl
push
push
lcall
cld
clc
add
push
or
dec
mov
out
push
cs
shll
push
lahf
cmp
jmp
push
add
add
pusha
xchg
lret
xor
jecxz
aam
pop
loop
cs
mov
push
addr16
fwait
xchg
or
mov
xchg
test
test
mov
mov
adc
cmc
es
movsl
jnp
jle
clc
jne
pop
enter
scas
mov
adc
pop
imul
cmp
jne
loopne
fsubrl
mov
loopne
sbb
clc
pushl
dec
mov
mov
pop
and
test
xchg
push
mov
jo
mov
and
xor
xor
adc
push
sbb
jmp
mov
mov
pop
fs
push
xor
jne
movsb
add
mov
and
jge
jne
in
fdivr
insb
xchg
aam
mov
mov
push
ljmp
testl
or
mov
daa
jp
jae
mov
pop
push
loope
cmp
mov
mov
orl
int3
cmp
and
push
pop
push
mov
ret
mov
push
sbb
xor
loope
adc
int3
lods
mov
sbb
icebp
int
arpl
or
scas
xorps
mov
sub
rclb
cmp
fimuls
mulb
add
shlb
pop
jp
aam
mov
xor
mov
xchg
dec
or
mov
aad
dec
fistl
adc
pop
add
lcall
stc
fistpll
push
aam
jnp
psubw
lock
xor
imul
push
out
stos
gs
dec
push
push
mov
inc
cmp
lret
enter
mov
mov
sbb
mov
mov
push
movsl
mov
sub
xlat
into
pop
es
sbb
push
and
fmul
pop
imul
xchg
aas
mov
pop
mov
js
andl
fs
pop
scas
lcall
and
sbb
loop
mov
jns
pop
sub
add
outsl
push
xor
dec
add
enter
gs
sub
add
push
inc
mov
sub
pop
sbb
lock
js
inc
fs
xchg
push
cmp
vpsubq
jge
loope
jno
ss
and
data16
int3
sbb
je
add
mov
sbb
sub
loopne
push
jne
sbb
lods
mov
adc
out
xchg
inc
aas
movsl
sub
or
xor
dec
xor
xlat
addr16
enter
fidivrl
adc
fs
notl
pop
rorb
roll
mov
roll
lret
and
in
mov
sub
fdivr
xchg
and
adc
int3
or
jo
mov
xchg
shlb
out
or
lods
leave
stos
push
data16
mov
sub
and
pusha
incb
test
pop
cmpsl
dec
sbb
jge
jne
pop
push
dec
inc
xor
scas
loope
and
in
das
sub
push
inc
popa
or
pop
out
sbb
pop
inc
popa
cmp
pop
push
lds
ja
sub
test
scas
shlb
lahf
or
int3
jg
cwtl
rorb
xchg
in
lds
mov
push
mov
sti
mov
neg
push
popl
or
dec
mov
fisttps
xchg
fisubs
aam
daa
test
add
xor
jns
xchg
loop
adc
arpl
fwait
arpl
jle
sub
in
aam
fwait
xchg
xchg
repz
pop
stc
mov
push
rcrb
lahf
pusha
push
sbb
in
pop
sbb
or
push
xchg
enter
dec
and
fadds
js
popf
pop
pop
lret
add
push
maxps
icebp
fdivrp
lock
aad
and
xorl
fisttps
fdivl
scas
stc
ss
das
fnstcw
push
sbb
pushf
jno
or
cmp
cmp
xchg
push
jp
adc
sbb
cmp
or
enter
pop
in
pop
es
push
data16
popf
jg
push
loop
orb
push
repz
sbb
inc
mov
out
mov
aam
push
adc
stc
rorb
shl
cltd
sbb
cmp
leave
lret
cld
mov
sbb
mov
sbb
int3
leave
and
arpl
sarl
xchg
sub
insb
mov
fildll
cmc
jge
fsubs
lahf
es
inc
mov
addr16
xchg
mov
outsb
mov
cmp
aad
lds
dec
loop
jle
les
in
clc
dec
nop
addr16
mov
jo
inc
fs
jnp
xchg
popf
cmp
xor
sahf
lea
ds
sub
popf
leave
outsb
push
in
jne
or
les
adc
in
fwait
add
xor
and
lcall
jp
adc
dec
xchg
pop
pusha
inc
jbe
push
push
repz
jbe
inc
cmp
ret
jle
in
incb
add
cmp
sub
adc
shr
cmpsl
xchg
aas
push
ret
inc
sub
test
loope
mov
push
fs
mov
xchg
mov
mov
lds
enter
unpcklps
pop
std
mov
push
in
pop
mov
fld
cli
icebp
fisubrl
push
mov
dec
imul
pop
pop
mov
dec
pop
mov
sahf
dec
mov
sar
mov
xor
sub
insl
mov
idivb
insl
jnp
sbb
gs
jne
std
fldenv
push
jne
xchg
sub
mov
sbb
dec
movsl
sub
pop
mov
jmp
and
loopne
add
dec
nop
adc
mov
mov
clc
into
fidivl
inc
xchg
icebp
xor
js
loopne
icebp
hlt
and
mov
std
sub
mov
mov
shll
jle
adc
lock
pop
in
adc
mov
shlb
xchg
sub
adc
lock
inc
repnz
inc
gs
popa
popf
adc
mov
int3
adc
addr16
inc
ss
add
cmp
inc
popf
cmpsb
push
xor
pushl
mov
div
pop
jmp
xchg
sbb
test
repnz
lret
mov
or
idivb
mov
fwait
jp
cmp
xchg
nop
inc
push
loope
filds
shr
pop
adc
inc
push
jl
mov
jg
pop
jo
or
jae
andb
xchg
lods
fdivr
adc
fiaddl
es
dec
mov
add
push
sti
pop
rcrb
pop
sub
jno
lahf
insb
jnp
lea
scas
out
es
fisttps
pop
lds
pop
mov
fisttps
inc
into
xor
jno
jp
mov
mov
subb
ret
or
int3
clts
or
stc
cwtl
fwait
je
bound
lcall
xchg
aas
lods
mov
mov
xlat
inc
icebp
pusha
scas
pushf
xchg
jo
jns
mov
push
mov
out
xor
mull
and
stc
shrl
rclb
mov
jl
pop
pop
mov
dec
fsubs
stc
inc
out
sbb
adc
add
bound
cmpsb
int3
loopne
adc
mov
dec
call
pusha
xacquire
jl
xchg
scas
imul
lret
call
pop
sub
sarl
cmp
or
out
add
dec
xor
iret
out
adc
and
mov
mov
adc
jmp
jae
or
cmp
cmc
daa
add
xchg
shl
das
leave
das
add
faddl
push
mov
jo
cmpsb
ja
xlat
rorb
mov
mov
xchg
rclb
push
xchg
and
mov
dec
xor
cld
subl
dec
pop
sub
sti
lret
in
iret
dec
and
cmp
dec
arpl
push
loop
rorl
add
cli
fcmovnbe
inc
xorl
aaa
cmp
mov
ja
pop
test
xchg
out
cmp
mov
ror
adc
adc
int
fucomp
adc
cmp
and
fildll
jp
sbb
cs
dec
jo
cmp
push
popa
mov
pop
mov
jmp
test
mov
push
xchg
fsubs
test
js
or
loopne
or
add
cmp
dec
stc
lret
mov
mov
ds
sub
cmp
mov
scas
aas
pop
xchg
jno
adc
lods
inc
fcmovnb
scas
sbb
mov
movsl
dec
out
arpl
xchg
mov
aam
jno
icebp
lret
cmp
testl
addr16
sub
into
leave
rsqrtps
add
push
mov
push
outsb
cli
sub
aad
xor
and
mov
dec
fxam
jb
sub
cmc
pusha
add
sbb
sarl
sbb
dec
sbb
cld
add
or
movsb
cwtl
inc
xor
fldcw
pop
adc
sub
inc
dec
jno
xchg
fiaddl
dec
out
insb
xor
sub
pop
rcr
es
pop
shll
iret
push
xchg
hlt
aas
dec
je
xchg
sahf
int3
iret
pop
cmp
xor
ljmp
repz
push
lods
push
jp
xor
ror
mov
in
xchg
sub
add
xlat
push
mov
dec
fisttps
repnz
cmp
jmp
lcall
ljmp
scas
ds
lods
xchg
pop
sub
jno
nop
flds
dec
mov
or
lods
cmpsb
in
pop
and
sub
imul
xchg
add
cltd
popa
push
lret
xchg
add
aaa
div
jae
jle
and
outsb
inc
cmp
cmp
jo
push
orb
lds
sbb
push
ja
xchg
jns
dec
pop
mov
and
sahf
hlt
movsb
lods
das
and
mov
cmp
hlt
sub
mov
mov
cld
jg
cmp
pop
xor
mov
cmp
and
jne
mov
sbb
outsb
xchg
sub
inc
and
mov
mov
js
mov
jmp
aaa
mov
fs
cmpsb
or
cmp
jbe
dec
iret
mov
repz
inc
in
inc
mov
push
adc
arpl
xchg
mov
push
jne
int3
adc
icebp
hlt
mov
cld
int3
rcll
lea
xor
cmpsl
in
scas
inc
push
sub
adc
mov
xchg
repnz
mov
lret
jno
push
sti
outsl
or
notb
jbe
stos
ds
jle
push
ret
lods
aaa
push
enter
dec
in
cmp
push
loope
scas
pop
testb
fistl
sahf
lods
testb
sbb
hlt
cmc
nop
int3
test
cld
imul
pop
adc
add
xchg
sub
inc
jns
scas
add
xchg
add
aaa
sub
mov
mov
into
mov
js
or
int
pop
mov
sub
xlat
mov
sub
shl
shl
pop
and
lods
dec
dec
fstpt
addb
xchg
js
pop
mov
cmpsb
push
mov
push
cmp
out
dec
dec
fldenv
std
orb
adc
subl
outsb
loopne
jmp
xor
scas
mov
mov
or
ret
loop
clc
in
aaa
pop
jns
inc
cwtl
repz
data16
push
insb
imul
add
mov
icebp
sahf
orb
fsubr
cmpsb
and
rorl
adc
cmp
inc
add
xchg
arpl
sub
pushf
inc
mov
ss
fildl
inc
cltd
lock
xchg
ds
mov
adcb
xchg
mov
cmpsb
stos
xor
aam
sbb
repnz
cmp
or
mov
mov
leave
sub
pop
inc
scas
scas
ds
jnp
mov
add
mov
sbb
leave
mov
pop
lods
js
insb
sbb
jp
add
xor
cmp
xor
rorl
sarl
add
icebp
inc
jae
ss
sbb
sbb
pop
outsb
in
test
xor
add
and
add
cmp
or
roll
or
jo
fs
push
mov
jl
mov
pop
jbe
mov
xchg
inc
lret
cmp
adc
scas
xchg
fldcw
push
sti
xchg
mov
in
je
inc
adc
imul
mov
test
cmpsb
orb
lret
cmpsb
jae
call
call
push
cs
xor
or
xor
daa
stos
outsb
dec
fimull
je
push
mov
scas
nop
int
pop
mov
es
cmpsb
cwtl
test
mov
pop
add
pop
adc
dec
test
jo
sbb
mov
adc
sub
rol
movsl
jmp
mov
jle
jmp
out
call
idivb
je
aad
add
pop
jmp
testl
push
jl
jae
cwtl
icebp
cmp
mov
jmp
push
or
lcall
into
out
xor
test
push
sub
xchg
clc
leave
inc
es
cmc
mov
inc
icebp
stos
ret
add
into
mov
push
and
jmp
or
cli
add
sub
ret
cmp
mov
stos
lods
loope
test
cmpsb
js
addr16
xor
mov
mov
in
lcall
push
xor
jae
decb
pop
loop
jne
cli
jo
nop
push
adc
adc
pop
ds
fdivrs
xchg
out
add
jo
fisubl
pusha
pop
mov
mov
outsl
push
cmpsl
icebp
lods
loope
imul
je
sbb
shlb
mov
push
mov
cmp
rorb
imul
js
mov
lods
pusha
cmpsl
push
adc
cltd
mov
out
out
lods
sbb
insb
sub
inc
fstpt
pop
and
lods
ja
inc
pop
or
mov
cmp
dec
jno
in
ffreep
jl
dec
hlt
outsl
sub
or
jb
fistpl
cltd
inc
mov
cld
in
mov
pop
dec
mov
jno
imul
mov
xor
pop
loopne
movsl
xchg
mov
adc
loopne
lea
push
das
sub
and
and
inc
sub
push
cmp
push
xor
cmpb
sbb
push
stc
mov
mov
cmp
xor
mov
jle
dec
pop
cmp
je
out
push
fcomps
inc
inc
enter
jb
clc
pop
scas
jp
mov
or
int3
and
daa
lock
mull
js
xchg
ja,pt
into
mov
sub
ja
ficoml
sub
pushf
nop
cmp
out
push
cmp
xchg
sub
roll
pop
jecxz
bound
lcall
mov
pop
lods
mov
sbb
jmp
hlt
sbb
adc
sbb
sbb
mov
push
hlt
pop
jl
mov
inc
nop
ficompl
outsb
icebp
ss
push
xchg
aaa
jge
mov
xchg
jmp
movsl
dec
xorl
les
mov
insl
mov
sbb
ret
jnp
add
out
pop
sub
push
xor
shlb
push
ss
dec
out
inc
shrl
mov
test
aaa
xlat
nop
and
rorl
add
inc
inc
push
in
mov
mov
in
mov
cli
inc
shrb
jns
iret
cmp
nop
aad
lahf
scas
mov
mov
lods
jne
sub
cmp
fwait
aas
mov
repnz
repz
or
push
and
fwait
daa
cmpsb
or
dec
test
lods
rorw
sub
lods
and
stos
adc
push
lret
cs
rcrb
movsb
scas
push
pand
call
add
jmp
ja
cmp
insl
xor
or
ljmp
push
imul
push
mov
jns
negb
call
or
jae
adc
mov
aad
pop
mov
mov
pop
sbb
daa
or
pop
fdivrl
call
andb
movaps
inc
xchg
adc
push
and
xchg
mov
jae
ret
cwtl
cmp
aaa
jo
inc
cmc
sbb
cli
mov
rclb
sbb
cli
faddl
push
enter
insb
mov
mov
stos
xchg
cmp
out
xor
and
pushf
push
sahf
test
stc
sbbb
and
jb
mov
subb
lods
lods
aaa
sti
add
das
push
add
dec
jne
adc
sti
cmp
xor
xchg
add
xor
out
push
into
jo
cld
lods
mov
aas
in
idivl
push
adc
cmc
repz
pushf
subb
stos
jns
ret
lcall
pusha
stc
pop
fisubl
inc
cld
int
pop
in
sahf
add
and
cmp
mov
call
sbb
scas
insl
sysret
adc
inc
loopne
loopne
jg
enter
inc
arpl
xchg
dec
addr16
mov
pop
mov
movsl
imul
xchg
inc
sahf
or
add
adc
adc
or
add
adc
push
test
pop
mov
xor
or
cwtl
mov
out
ffreep
incl
dec
movsl
mov
add
xchg
lock
popa
mov
xor
mov
xchg
lods
daa
movsb
rolb
mov
fdivrs
pop
clc
push
mov
addr16
adc
test
jo
jb
add
push
or
jo
in
xchg
sub
push
arpl
mov
stos
js
mov
ljmp
dec
scas
push
dec
mov
mov
leave
ret
test
outsb
fimuls
ljmp
add
adc
add
ss
lret
orl
xchg
adc
ja
ret
shl
cpuid
mov
js
gs
movsb
cmp
adc
iret
jo
push
movsb
mov
and
push
nop
data16
adc
sbb
sbb
mov
cmp
orb
div
out
cmc
xchg
mov
je
jp
sbb
int3
in
push
cmp
push
inc
xchg
mov
test
pop
and
xchg
stos
cmp
insb
sti
cmp
loope
sub
fsubrs
scas
test
in
sub
adc
mulb
test
push
add
add
sbb
mov
push
in
ret
cmc
sbb
push
inc
mov
add
stc
mov
popa
movsl
popf
jns
adc
sbb
xchg
cltd
aam
xchg
xor
aaa
xchg
movsl
rolb
adc
mov
pop
cwtl
mov
mov
mov
test
ret
int3
out
fldt
jnp
aam
inc
stos
je
mov
addr16
add
aad
call
mov
jb
dec
in
es
mov
dec
test
sbb
pop
dec
mov
cmp
loope
xlat
xor
das
in
mov
inc
or
out
mov
mov
mov
mov
fbld
sub
add
xchg
sbb
and
adc
out
push
addl
rorb
icebp
jae
mov
lea
jecxz
or
and
fsts
mov
dec
dec
in
xchg
jmp
insb
movsl
int3
mov
pop
lcall
xor
dec
push
daa
scas
and
push
rolb
jb
sub
fcomps
jne
lea
and
movsl
cmpsb
or
or
add
push
das
subl
out
rsm
adc
inc
inc
mov
xchg
stos
hlt
jnp
fidivrs
jp
cld
push
out
xchg
icebp
repz
fistpll
rorb
cmp
jp
movsl
mov
loopne
pop
mov
outsb
sbb
int3
fwait
push
jnp
mov
add
jns
mov
and
pusha
xor
push
daa
mov
push
aas
xchg
xchg
setnp
push
push
sbb
cmp
push
int
mov
add
or
sti
add
sti
sbb
pop
dec
push
int3
pop
pop
jge
pop
jne
adc
pop
adc
jge
push
xchg
mov
popf
sub
mov
mov
movsb
xchg
mov
shlb
lret
sbb
out
shll
sbb
sar
pop
mov
cmc
pushf
xor
inc
push
loope
fidivl
inc
mov
loopne
repnz
adc
jns
inc
adc
lds
hlt
lahf
dec
xchg
pop
insl
sub
ret
pop
insb
fdivrl
jmp
incl
scas
push
hlt
xlat
fwait
ja
or
dec
shr
inc
mov
adcb
sub
sub
sbb
leave
mov
fsubr
repnz
pop
into
sbb
out
fists
mov
push
rcrb
ss
out
fcmovb
xor
repz
mov
test
call
sbbb
pop
xchg
cmpsb
push
ja
add
jp
xchg
out
or
mov
jbe
cmp
orb
xchg
cmp
and
push
pop
jl
mov
push
push
xchg
xchg
rolb
xchg
push
int3
shl
xor
popa
add
mov
xchg
adc
mov
nop
in
icebp
mov
and
dec
cmp
fnstcw
out
jmp
out
das
xchg
ja
jo
sub
lods
xchg
fists
jmp
pusha
push
sbb
js
cmp
pop
cli
insl
dec
xor
fsubrl
dec
inc
dec
sbb
push
xchg
push
push
iret
fistpl
out
lods
inc
dec
pop
mov
hlt
outsb
cmc
mov
and
insl
lea
mov
sbb
movsb
dec
aaa
pop
aas
adcl
or
je
popa
jbe
adcb
sarb
add
fadds
jmp
ja
or
sub
cmpl
ja
pop
push
gs
mov
enter
lods
pop
mov
mov
xor
cmp
mov
clc
mov
inc
and
icebp
sub
enter
dec
enter
sub
mov
or
add
leave
jns
imul
insl
adc
jecxz
mov
sbb
loope
sbb
jnp
xchg
pop
fbstp
push
add
aad
stos
jb
push
cld
push
xchg
stos
enter
push
fidivrl
stos
daa
js
mov
fisubrl
in
outsl
iret
pusha
andl
dec
xlat
mov
outsl
outsl
ret
cltd
test
aam
pop
dec
int
jge
jae
imul
divl
jno
in
test
and
incl
in
cmpsl
pop
iret
int
push
xchg
rcll
dec
cmp
pop
pop
jnp
pop
sbb
pop
and
inc
push
sti
and
add
or
jge
icebp
dec
xchg
and
loopne
sbb
add
stos
push
addr16
pop
and
mov
add
push
mov
xchg
and
mov
and
outsb
das
mov
lahf
imul
cmp
lret
dec
shlb
clc
icebp
pop
insl
pop
inc
test
sbb
cmp
enter
jp
mov
add
inc
leave
adcl
or
add
sub
dec
lods
cmp
lea
out
mov
xchg
xor
insb
imul
shlb
insl
fcmovnb
adc
sub
adc
gs
outsb
test
pop
sbb
or
gs
sub
inc
mov
mov
mov
inc
loop
adc
sahf
rorb
dec
rolb
mov
andl
std
aam
xchg
dec
adc
movsb
lock
jmp
dec
mov
xorl
jno
xchg
xor
cmc
jnp
lods
bnd
stos
mov
xchg
pop
test
adc
mov
inc
jp
mov
aam
lret
in
or
mov
ficoms
nop
fbstp
inc
dec
stos
dec
sahf
or
mov
jo
addr16
jo
fstl
pop
loope
adc
mov
and
repz
push
enter
out
cli
lods
pop
js
sbb
jecxz
pop
xor
out
pop
push
pop
ret
ret
movb
jle
jnp
push
loope
scas
js
les
pop
push
xor
pop
inc
fcmovne
and
pop
or
jge
fimuls
cmp
or
mov
ds
lods
sbb
rolb
jl
scas
lcall
fstpt
aam
mov
shll
jns
xchg
lret
popf
sbbb
or
sti
jle
scas
dec
sub
stos
adc
into
popf
push
mov
xor
ret
loop
imul
std
ljmp
ret
inc
jns
lcall
scas
jae
sbb
test
xor
imul
shll
pushf
repz
loopne
xchg
push
mov
loope
pop
shl
mov
cmp
jl
rep
fistpll
pop
adc
cwtl
mov
aad
sti
adc
mov
push
cmpsl
dec
pause
jecxz
xchg
nop
jns
fwait
adc
mov
fbld
ret
outsl
cmp
xchg
adc
xchg
out
mov
fimull
repz
jo
fisubrl
or
push
pop
scas
jnp
pusha
shll
movsb
gs
cmp
ja
stos
mov
icebp
or
pop
stos
ret
pop
out
and
xor
repnz
inc
jle
mov
xchg
sti
shlb
lods
inc
lea
xor
jmp
inc
lret
pop
jge
push
sub
fs
pop
or
push
sbb
std
mov
sub
pop
pop
sbb
cli
inc
adc
sbb
popa
stc
mov
push
add
in
adc
addr16
test
pop
xchg
mov
stos
xchg
cmp
into
cmp
js
add
je
add
mov
ja
cmp
sbb
shll
fsubs
inc
test
mov
pop
sbb
fbld
or
sub
ds
jae
cmc
mov
in
sbb
andl
daa
scas
sbb
lods
ds
mov
sub
inc
and
mov
add
and
adc
fisubl
shlb
xor
sub
sbb
dec
push
or
pop
mov
aad
sarl
mov
lret
jge
push
inc
cmp
pop
mov
fwait
lods
or
jb
xor
fucomip
or
sub
jmp
stos
or
scas
xor
clc
fwait
movsb
int3
insb
xchg
addr16
loop
roll
test
or
cmc
cmp
sarb
incb
inc
xor
dec
cwtl
addr16
out
das
xchg
sub
pop
inc
mov
stos
notb
ds
jne
sbb
loop
pop
inc
jmp
adcl
jno
inc
sub
lahf
xchg
adc
mov
mov
lds
shrb
push
ds
add
lcall
push
call
jbe
mov
aam
cmp
data16
xchg
xorb
lods
mov
mov
mov
adc
fsubs
and
lods
outsb
mov
mov
jle
lds
aas
std
mov
or
adc
mov
push
jle
mov
cmpsb
pop
in
rcl
stos
push
push
cmp
scas
call
add
push
sbb
pop
clc
pop
mov
fstpl
add
iret
lret
or
imul
inc
sub
cld
xchg
push
xchg
add
or
movsb
adc
cwtl
jns
rorb
lcall
jg
jg
or
dec
mov
or
fstl
dec
mov
ds
cmp
adc
test
pop
sub
jp
dec
subl
cmp
sbb
mov
int
add
loope
scas
xchg
mov
mov
sub
pop
cmp
jne
scas
pop
push
into
rcr
lods
lahf
inc
test
mov
mov
sbb
pop
mov
fsubrl
mov
stos
push
insb
sbb
cmpl
pop
imul
mov
pop
or
fsub
cmp
mov
cltd
fmull
popl
pop
addr16
out
ds
and
lret
xorl
lods
pop
xor
aad
sub
aas
out
sar
fsubl
or
mov
push
scas
call
push
movb
xchg
call
movzbw
bswap
cwtl
mov
lea
push
jmp
lea
call
movw
movb
not
call
lea
jae
movzbl
xchg
jl
mov
pushf
pushf
xchg
mov
lea
setno
movzbw
cwtl
movzbw
lea
call
call
movsbw
bswap
lea
push
lea
call
or
add
aam
and
sar
bswap
pop
cmp
shr
sub
bts
pop
cmp
cmp
pushf
call
dec
cmc
pusha
pushf
xor
clc
rol
jmp
push
inc
push
int3
rcr
cmp
and
xchg
pop
inc
cwtl
sahf
sub
jo
jl
cli
xchg
imul
dec
lcall
outsl
mov
mull
fbstp
arpl
in
or
out
rcrl
js
das
aas
rcll
inc
std
wbinvd
mov
or
pop
mov
dec
popa
mov
xchg
or
cwtl
cltd
js
nop
add
sahf
inc
dec
push
mov
sahf
sub
and
rorb
popa
push
xlat
adc
xor
mov
cmp
cmp
inc
pop
jns
ds
sbb
inc
adc
jns
jne
xor
shll
sbb
mov
rcr
cmp
mov
inc
imulb
shr
bound
xchg
call
outsl
bound
inc
lahf
es
push
xchg
or
jo
movsl
push
dec
mov
or
cmpsl
icebp
cli
and
sysexit
flds
cli
mov
cmp
jmp
ja
fsubl
sbb
add
or
mov
scas
xchg
fs
sbb
ret
lret
fisubrs
repnz
outsl
and
pushl
cltd
scas
xor
adc
mov
pop
xchg
lahf
add
cmp
nop
sub
mov
fcomps
jg
push
mov
push
push
dec
push
mov
loopne
movsb
sahf
xor
jmp
mov
inc
cmp
addr16
adc
xchg
xor
mov
fdivl
out
push
mov
adc
out
jmp
repz
pop
ss
insl
out
mov
mov
sbbl
pop
imul
jmp
fwait
cmp
cmp
xor
jg
jno
jmp
lea
xchg
mov
daa
add
outsb
and
in
push
scas
cwtl
jae
fiadds
adc
cli
sti
adc
xchg
test
fidivs
fisttps
xchg
call
stc
push
icebp
dec
push
daa
faddl
popf
xchg
leave
rcr
call
repz
xchg
adc
mov
ret
int3
clc
movb
daa
ljmp
mov
push
popl
movsl
out
loopne
fwait
inc
test
in
out
cmp
or
xchg
out
fdivrs
orb
push
jge
outsl
ret
adc
or
jg
mov
add
or
dec
lea
and
mov
pop
jp
push
scas
mov
sub
into
hlt
movsb
xchg
dec
leave
rcr
mov
std
out
xchg
jecxz
cmp
xchg
bound
mov
push
int
scas
scas
push
bound
js
lods
daa
dec
xchg
dec
inc
gs
xchg
mov
push
jl
flds
sbb
ds
pop
mov
fisttpl
push
push
loope
cmpsb
leave
xchg
out
in
in
rorl
ror
sbb
and
dec
loope
jl
or
push
pop
fs
repnz
movsl
cmp
movl
adc
jmp
xchg
lahf
enter
in
insl
mov
icebp
cmp
push
mov
or
imull
lods
andb
fidivl
push
dec
les
mov
push
dec
cmp
xchg
mov
arpl
jb
or
dec
in
add
mov
sub
ljmp
enter
add
shll
add
call
lcall
call
dec
xor
jp
add
add
divl
xchg
ss
add
dec
or
popa
push
and
fisttps
dec
pop
mov
dec
pushf
jmp
movb
imul
or
cmpl
jae
xchg
ds
mov
dec
push
jge
inc
pop
mov
jo
sub
jmp
jae
cmp
xchg
pop
jge
push
cwtl
sub
jecxz
loop
nop
xor
rcr
cli
jo
push
pop
cmp
dec
popf
push
inc
outsl
pushf
sub
fnstcw
push
sbb
and
sbb
outsl
or
mov
cltd
shll
inc
es
dec
repnz
rclb
mov
jnp
jb
test
and
mov
insb
dec
dec
push
inc
mov
dec
stos
push
mov
scas
cmp
adc
or
pop
aas
orb
mov
insb
lret
push
adc
pop
xor
iret
test
adc
sbb
xchg
sub
cmpsl
mov
popa
jl
cli
insb
xchg
lods
mov
js
mov
daa
jg
or
mov
notl
lds
outsb
sub
aas
cltd
inc
add
in
mov
push
xchg
pop
dec
inc
out
stos
aaa
xor
fadd
rcr
inc
out
jecxz
xor
imul
stc
aas
jecxz
cmpsb
cmpsb
ficoml
decl
jmp
lock
mov
movsl
jae
in
or
mov
mov
push
je
mov
popa
ss
push
andb
pop
jg
mov
cli
sahf
movsl
lods
mov
xor
jg
inc
js
int
nop
mov
lret
dec
and
inc
push
jbe
add
lods
mov
pop
xchg
loopne
adc
jb
inc
imulb
push
test
push
imulb
lea
je
push
mov
call
nop
jnp
vpaddusb
repnz
ss
mov
mov
push
test
mov
enter
sbb
aam
pop
notl
xchg
fwait
and
and
call
addr16
inc
dec
cmp
cmp
mov
mov
xchg
xlat
and
adc
movsb
cmp
loope
jg
movsb
xchg
xchg
jnp
sbb
mov
sbb
xorb
mov
sahf
mov
jnp
jge
lahf
imul
jl
lret
pop
rcll
loopne
pushf
dec
xchg
or
imul
xor
pusha
pusha
lea
jb
not
and
pushf
mov
jmp
mov
imul
fdivl
scas
xor
mov
shrb
arpl
cmpb
psrld
push
mov
and
jb
movsl
jbe
pop
add
lret
pop
inc
and
or
nop
dec
addb
push
loop
sbb
jns
lret
add
jne
xchg
adc
inc
adc
xlat
xchg
and
daa
clc
out
xchg
mov
loope
cmpsb
push
outsb
out
pop
pop
mov
xchg
push
or
dec
hlt
mov
xor
jg
repnz
cwtl
pop
orl
add
test
movsbl
setne
mov
push
push
lea
jmp
call
push
push
movb
pusha
movl
call
lea
call
jmp
fcmovbe
and
psadbw
aad
fs
xor
arpl
stc
adc
mov
rclb
mov
rol
sub
test
mov
cmp
push
aaa
sbb
dec
mov
mov
or
lds
push
jne
imul
adc
arpl
mov
jmp
dec
popa
and
add
pop
aad
or
pushf
insl
push
aad
hlt
insb
and
xlat
in
add
mov
lea
cmp
sub
pop
push
sub
in
fdivs
pop
mov
outsl
sarl
leave
loope
sbb
call
ret
dec
call
and
dec
mov
daa
fildl
and
fidivrs
iret
rorl
lods
mov
stos
notl
cs
fcomps
test
inc
cmp
jmp
jle
test
sub
pushf
jmp
mov
fdivl
and
mov
mov
arpl
pop
sub
push
stos
mov
adc
or
pop
rol
push
fmul
int
fsin
lahf
popf
ret
and
scas
pop
xor
in
mov
pop
adc
xor
dec
mov
mov
cltd
cmp
jae
jns
pop
pop
fistps
lahf
les
sbb
push
scas
dec
test
shl
jmp
movb
pusha
lea
jb
call
arpl
arpl
xor
fs
insb
add
loope
pusha
movl
pusha
lea
jmp
lea
call
mov
pusha
mov
call
mov
mov
not
call
movsbw
call
pushl
mov
pushf
popl
jmp
jmp
sub
movl
movl
cwtl
stc
jmp
jmp
lea
jge
mov
pusha
pushf
popl
push
jmp
pushl
mov
call
seto
bsr
stc
notl
or
shl
not
mov
cmc
pushf
cmc
pushf
sub
jmp
movzbl
rcr
movb
add
lea
jg
neg
rcl
ror
movsbw
jmp
push
pushf
jmp
mov
call
call
push
jmp
jmp
aaa
btc
mov
rcr
xor
push
mov
jmp
stc
shl
and
movzbl
stc
cmp
pushf
cmc
add
clc
bt
stc
neg
mov
call
movw
movw
mov
mov
pushl
mov
jmp
mov
call
mov
movw
push
lea
jo
pushf
mov
pushf
push
pusha
lea
jmp
jmp
pushf
mov
pushf
lea
jo
push
pusha
call
mov
pushf
jmp
neg
sar
bsf
call
mov
pushf
lea
jmp
mov
call
pusha
mov
jmp
movzbw
cwtl
pushf
mov
jmp
call
movb
call
stc
jmp
pushf
pusha
mov
call
jmp
push
push
add
pushf
clc
mov
mov
jmp
pushf
mov
bswap
call
mov
rol
jmp
pushf
pusha
mov
pushf
pushf
pushf
mov
mov
pushf
jmp
lahf
sar
mov
mov
clc
call
pushf
mov
pushf
add
movl
pushf
popl
pushf
jmp
add
jbe
push
bts
shr
jmp
push
cmc
add
pusha
cmc
sub
jmp
xchg
movl
lea
jg
push
call
push
jmp
bswap
mov
jmp
or
movzbw
mov
stc
mov
pusha
call
mov
pusha
mov
pushl
movw
lea
jmp
pushf
popl
push
pushl
popl
movw
push
movw
push
lea
jmp
push
lea
mov
push
lea
cld
push
lea
movl
pusha
mov
mov
movsbw
cld
bswap
mov
pusha
cld
pushf
cld
movb
pushf
rep
shl
shl
mov
call
movw
mov
jmp
movb
mov
call
mov
pushf
mov
call
pushf
call
xchg
jmp
pushl
popl
push
lea
jmp
mov
pushl
movl
pushl
push
mov
push
pushf
movb
call
call
mov
call
movb
mov
pusha
pushf
pushf
push
lea
jmp
bswap
pushl
mov
lea
jmp
mov
pusha
mov
push
lea
jmp
call
mov
pushf
push
pusha
mov
pushl
ret
pushl
pushf
popl
cmp
movl
clc
push
xchg
pushl
cmc
mov
push
bsf
movsbl
neg
mov
shl
stc
pushl
popl
sbb
stc
lea
lea
movl
ror
and
or
mov
pushl
jmp
lea
js
pushf
inc
test
bt
bt
add
cmc
stc
test
mov
call
pushl
popl
movw
movw
lea
jmp
call
sub
movb
mov
cmc
rol
pushf
jmp
push
mov
movzbl
mov
pushf
push
pushl
pushl
ret
mov
pusha
jmp
pushf
pushf
pushl
popl
push
pusha
push
mov
lea
jmp
push
lea
je
pushf
call
mov
mov
pushf
popl
mov
call
mov
call
mov
mov
push
mov
jmp
jmp
stc
inc
mov
dec
clc
mov
cmc
cmc
call
mov
call
mov
mov
movw
mov
pushf
popl
call
test
stc
add
pushf
call
jmp
mov
add
adc
shld
shl
mov
inc
mov
bt
pushl
popl
shrd
movl
rcr
mov
stc
push
jmp
push
push
lea
jno
pushf
test
test
call
movl
shr
bsr
mov
call
pushf
pushl
bswap
pushf
push
mov
pushf
lea
jmp
mov
pushf
pushl
ret
jmp
pusha
jmp
rol
push
pushf
bswap
mov
push
push
push
lea
jmp
pushl
popl
mov
mov
lea
jmp
cmc
pushf
cmp
sub
movb
clc
cmc
stc
rol
jmp
xor
or
mov
test
test
sub
pushf
pushf
rol
pushl
bswap
pusha
lea
jmp
stc
pushl
bt
add
std
popf
pusha
mov
pusha
mov
lea
jmp
test
mov
ror
pushf
xor
sub
mov
clc
movw
movb
sub
stc
pusha
shl
movb
call
shrd
ror
btr
mov
adc
btc
sar
btr
mov
clc
push
mov
call
movw
lea
jg
push
pushf
mov
call
add
add
movb
mov
pushl
popl
push
lea
jmp
pushf
mov
mov
jmp
and
movl
call
lea
jne
test
pusha
sub
pushf
call
mov
inc
movsbl
mov
btc
or
pushl
popl
rol
movl
rol
mov
call
call
push
jmp
pushf
popl
pusha
bt
jmp
pushl
add
pusha
pushf
mov
push
lea
jmp
pushf
popl
call
sub
jmp
clc
pusha
ror
rdtsc
call
rol
sbb
mov
call
mov
pushl
lea
call
push
mov
pushf
pushf
pusha
pushf
lea
jmp
pushf
jmp
mov
pushf
mov
mov
pushl
pushf
mov
pushf
pushf
mov
push
pushf
push
call
xadd
rcr
rcr
mov
jmp
jmp
jmp
mov
pushl
pushf
mov
jmp
call
pusha
pushf
mov
pushf
push
pushf
popl
pushl
pushf
jmp
call
jmp
pushl
pushl
popl
movb
push
mov
movb
lea
jmp
mov
pusha
call
mov
pushf
call
pushf
pusha
push
bswap
pushf
push
pushf
lea
jmp
lea
jae
pusha
mov
movb
pusha
movb
lea
jmp
rcr
mov
mov
shld
seta
test
mov
pushf
stc
call
xchg
shr
btr
push
bsf
cmp
push
stc
pushl
call
jmp
call
shld
bt
adc
mov
je
rcr
xor
mov
adc
mov
pusha
call
add
pushl
shld
movl
pushf
mov
mov
pushf
popl
call
call
add
je
cmp
push
add
jmp
test
neg
mov
pushf
pushl
clc
cmc
sub
stc
bt
cmp
cmc
shr
call
push
pusha
mov
push
mov
mov
jmp
push
lea
ja
rdtsc
mov
cwtl
xchg
cwtl
lea
sar
ror
bswap
jmp
clc
pusha
movb
sub
pushf
pushf
mov
mov
mov
lea
jmp
call
jmp
movb
bswap
pushf
mov
pushf
push
lea
jmp
not
clc
pushf
not
pusha
stc
sub
pushf
pushf
stc
pushf
and
pushl
jmp
or
adc
bt
bsf
mov
cmp
push
call
pushf
push
push
mov
movb
pushf
pushf
push
mov
call
movb
pushl
popl
pushf
mov
push
lea
jmp
add
movb
pushl
call
push
pushf
popl
test
jmp
mov
pushf
popl
pushl
jmp
jmp
pushf
mov
call
inc
push
lea
ja
decl
pusha
pushf
call
movw
movl
pusha
jmp
sub
xchg
lea
test
bt
and
push
and
pop
sub
pushf
pop
push
mov
push
not
pushf
popl
jmp
mov
sub
test
cmp
call
jmp
and
push
pushf
mov
pushf
popl
push
call
call
movzbw
jmp
pushl
push
mov
lea
ja
pushf
mov
push
pushf
popl
pusha
xchg
ror
shl
mov
cmp
sub
add
mov
or
pushl
popl
inc
sbb
shl
movl
bt
shld
pop
lea
mov
jmp
pusha
mov
call
btc
bsr
stc
mov
mov
push
bsf
mov
pushf
stc
clc
bt
add
mov
pusha
pushf
push
mov
movb
lea
jmp
mov
neg
mov
clc
mov
bt
bt
bsr
pushl
popl
test
push
add
cmc
movl
inc
shld
mov
test
test
push
sub
push
pushf
stc
bt
rol
push
jmp
cmp
call
jmp
pusha
pushf
call
and
mov
inc
or
mov
push
pusha
clc
push
sub
pushf
jmp
call
adc
push
neg
shld
mov
push
rcl
movsbw
pushl
call
bts
rcr
cwtl
rol
mov
bt
clc
add
push
jmp
movw
pushf
popl
cmp
push
mov
sbb
btc
btr
add
push
shld
clc
stc
inc
push
lea
jmp
call
mov
bt
pusha
sub
cmp
pushf
test
shr
call
cmp
call
jmp
sub
movb
movb
movb
lea
jmp
mov
pushl
popl
mov
push
lea
jmp
clc
sbb
push
stc
movsb
jmp
sbb
jmp
sbb
decl
movsl
incl
and
clc
sbb
decl
std
movsb
ljmp
or
fdiv
movsb
clc
sbb
ljmp
movsl
ljmp
rep
lcall
movsl
in
cmc
movsb
jg
movsl
in
cld
movsb
lcall
movsl
ljmp
movsl
jmp
stc
movsb
push
stc
movsb
pushl
and
jmp
std
movsb
jmp
and
decl
sbb
ljmp
movsl
ljmp
sbb
movsb
lcall
or
ljmp
or
pushl
movsl
ljmp
movsl
ljmp
movsl
pushl
add
pushl
movsl
pushl
movsl
call
cli
movsb
push
stc
movsb
push
stc
movsb
in
cld
movsb
decl
add
movsl
sti
add
movsl
ljmp
movsl
jmp
or
movsl
ljmp
movsl
jmp
and
lcall
movsb
ljmp
ljmp
in
cmc
movsb
call
jmp
cltd
and
lcall
sbb
movsb
in
cmc
movsb
decl
sbb
ljmp
movsl
pushl
stc
movsb
push
stc
movsb
jg
movsl
pushl
and
fcomps
movsl
inc
add
jmp
and
inc
add
lcall
and
ljmp
ljmp
jmp
std
movsb
jmp
repnz
jp
movsb
ds
movsl
jmp
add
jp
movsb
jmp
cli
movsb
jmp
std
movsb
lcall
movsl
push
stc
movsb
push
stc
movsb
call
or
inc
add
lcall
or
clc
sbb
decl
sbb
movsl
jmp
std
movsb
ljmp
ljmp
ljmp
movsb
lcall
movsb
call
movsb
jmp
sbb
pushl
rep
jmp
and
in
cmc
movsb
incl
hlt
movsb
jmp
and
push
stc
movsb
push
stc
movsb
incl
and
ljmp
and
sti
add
movsl
jmp
cli
movsb
pushl
hlt
movsb
ds
movsl
ljmp
ljmp
pushl
and
call
movsl
lcall
and
incl
movsl
jmp
sbb
pushl
or
call
jmp
icebp
stc
movsb
push
stc
movsb
lcall
movsl
ljmp
sbb
out
adc
movsl
jg
movsl
decl
std
movsb
call
and
incl
movsl
call
add
movsl
ljmp
lcall
movsb
jmp
and
ljmp
movsb
pushl
std
movsb
call
cli
movsb
ljmp
movsl
jmp
and
push
stc
movsb
push
stc
movsb
dec
and
jp
movsb
call
and
call
sbb
in
cmc
movsb
mov
and
lcall
and
ljmp
lcall
jmp
clc
sbb
decl
mulb
xor
movsl
in
cmc
movsb
call
jmp
test
movsl
lcall
lea
jmp
stc
bswap
pushf
rol
jmp
pushl
inc
mov
xor
pushl
bsf
mov
rcr
cmc
btr
pushl
popl
or
bswap
movsbw
bsf
movl
movzbl
mov
pushf
sub
call
push
jmp
pusha
pushl
bswap
pushf
lea
jmp
call
mov
jmp
stc
mov
stc
and
adc
or
mov
add
neg
mov
sub
jmp
mov
pushf
call
test
movl
pushf
mov
adc
or
movzbl
shl
mov
cmp
pop
mov
rol
sub
ror
pushl
popl
btr
movl
inc
or
mov
cmc
sub
clc
rol
mov
lea
jbe
pushf
pushf
bswap
mov
pushl
pushl
mov
lea
jmp
jmp
mov
mov
call
test
add
pushf
call
jmp
stc
shl
xor
mov
rcl
inc
movzbw
mov
or
btr
pushl
popl
or
shr
add
pop
movl
shrd
push
shrd
mov
cmc
stc
sub
bt
rol
movb
bswap
pushf
push
pushf
lea
jmp
not
movsbl
mov
test
pushf
sub
cmc
jmp
bt
sub
movb
lea
jb
push
pusha
mov
movb
pusha
pushf
push
lea
jmp
push
mov
mov
pusha
pushf
pushl
ret
mov
movl
pushf
push
pushf
popl
cmc
push
mov
cmc
add
shl
sub
mov
pop
cmp
and
mov
test
shr
pushl
popl
add
dec
not
movl
adc
mov
cmp
pushf
stc
sub
movb
rol
pushl
push
pushf
bswap
pushl
movl
movw
mov
lea
jmp
lea
movsbw
mov
jmp
mov
mov
push
mov
mov
pushl
pushf
popl
test
mov
rcr
mov
bt
shrd
mov
bsr
shl
pushl
popl
jmp
pushf
movb
pusha
push
decl
movb
pushf
lea
jne
call
mov
movb
movb
pushf
lea
jmp
pushf
popl
call
push
pusha
movw
mov
call
pusha
movb
jmp
pusha
mov
jmp
ror
mov
rcl
cmc
add
dec
movsbw
inc
pushf
pushf
pusha
inc
sub
bsf
xor
and
bts
shl
bswap
add
rcr
sar
add
cmc
mov
inc
inc
mov
test
clc
call
mov
push
pushl
mov
movb
lea
jmp
stc
sub
pushf
test
pusha
cmp
add
call
sub
cmc
call
push
shrd
call
neg
mov
pusha
add
push
pusha
clc
bt
not
test
neg
cmc
rol
jmp
pushf
mov
movl
pusha
mov
pusha
pushf
mov
pushl
pushl
ret
pushl
mov
sub
cmc
bt
bt
rol
push
bswap
pushf
movb
pushf
movb
lea
jmp
push
mov
jmp
pushf
pushf
mov
call
mov
stc
test
jmp
xchg
sar
cmc
movw
mov
xor
stc
mov
bsf
adc
pushl
popl
rol
and
movl
call
pushf
push
mov
pushf
push
lea
jmp
movzbw
cmc
ror
movzbl
ror
pop
add
not
movzbl
pushf
movzbl
bswap
movsbw
dec
mov
call
call
mov
jmp
pusha
pushf
jmp
pusha
mov
pusha
mov
mov
mov
call
shr
mov
pushf
rcr
pushl
popl
inc
movl
not
pushf
lea
ror
mov
bt
sub
clc
rol
jmp
pushl
mov
pushf
call
mov
movsbw
mov
xchg
movsbl
call
jle
push
bswap
pushf
pusha
mov
lea
jmp
pusha
push
shld
call
cmp
mov
call
pushl
mov
jmp
call
mov
jmp
shr
bsf
adc
mov
neg
mov
stc
cmc
cmc
add
push
call
pusha
mov
mov
pusha
pushf
movb
lea
jmp
dec
rol
mov
ror
mov
stc
pusha
add
movb
movb
lea
jle
mov
pusha
pusha
lea
jmp
push
call
pushf
call
mov
clc
call
clc
xchg
stc
mov
cmp
mov
test
cmc
pushf
cmp
sub
pusha
lea
jle
pusha
pushf
lea
jne
bt
clc
xor
call
call
pusha
mov
pushl
pusha
jmp
xor
adc
inc
jmp
mov
pusha
pushf
movb
lea
jmp
adc
sub
mov
shr
pusha
shl
rcl
add
not
pushl
setg
pusha
mov
mov
mov
push
pushf
mov
lea
jmp
cmc
pusha
add
clc
jmp
and
neg
not
push
not
rol
mov
pushl
cmc
rol
add
or
mov
and
test
shrd
bswap
bsr
mov
cmp
add
call
call
mov
mov
push
pushf
mov
mov
pusha
mov
movb
call
pushf
mov
pusha
mov
pushf
mov
lea
jmp
pushf
popl
test
pushf
xchg
neg
and
sar
mov
btc
add
and
mov
shld
sub
pushl
popl
shl
rcl
movl
shld
mov
stc
bt
push
sub
cmc
call
pusha
mov
push
push
mov
mov
pusha
pushf
mov
call
mov
push
call
push
pusha
pushf
mov
call
pushl
push
push
bswap
pusha
pushf
pushf
lea
jmp
mov
push
push
pushl
lea
jmp
pusha
add
push
lea
jmp
pushf
mov
pushf
mov
lea
jmp
sub
cmc
rol
push
bswap
pushf
movl
pusha
push
lea
jmp
add
movw
mov
pushf
lea
jmp
push
clc
rol
jmp
test
xchg
bsr
sbb
movzbw
mov
shld
bsf
cmp
bswap
mov
btr
shrd
bsr
pushl
popl
add
movl
btr
mov
clc
pushf
test
sub
movw
rol
pushf
bswap
mov
pushl
movw
pushf
lea
jmp
call
cmc
pushl
popl
shld
movzbw
lea
push
test
shld
rcl
bts
mov
clc
push
sub
clc
call
call
pushl
popl
movb
pushf
pushf
mov
lea
jmp
clc
cmc
cbtw
pushl
cwtl
bt
cmp
movb
bt
sub
test
mov
test
pushf
call
push
movzbw
pushf
cmc
mov
and
push
bsf
push
cmp
sub
rol
push
btc
pushl
xor
sbb
push
movsbw
push
inc
clc
mov
setno
neg
sub
cmc
rol
shr
bt
xadd
bswap
lea
neg
mov
inc
sub
shr
xchg
mov
movsbw
add
mov
clc
clc
rcr
add
pushf
pushf
mov
shl
or
add
bsf
add
cmp
shld
btc
bswap
xor
pusha
jmp
jmp
push
rcl
bsr
mov
clc
cmc
sub
pusha
rol
push
bt
bt
xchg
bt
rol
bt
pushl
sub
sub
js
bt
sub
clc
cmc
cmp
pusha
add
pusha
push
jmp
jmp
lea
jne
shld
shld
mov
call
sar
pushf
xor
test
movzbl
cmp
add
pushf
call
pushf
pushf
mov
pushf
pushf
mov
push
mov
push
jmp
jmp
mov
jmp
shrd
shr
movl
sub
shld
mov
call
aaa
sbb
stc
btc
mov
dec
mov
stc
sub
call
pusha
test
mov
cmc
cmp
pushf
shl
pushl
clc
pushf
shr
pushl
bt
bt
or
mov
cmc
xor
pushf
call
call
test
shl
mov
mov
mov
call
pushf
pushf
popl
bt
push
mov
not
adc
mov
bsr
mov
ror
pushl
popl
shl
movl
bswap
mov
test
cmp
call
mov
call
call
clc
bt
pushf
rol
call
sub
bt
lea
jne
test
cmp
sub
push
pushf
pushf
mov
pusha
mov
pushf
lea
jmp
pusha
pushf
mov
pushl
lea
jae
pusha
mov
pusha
pushf
mov
call
stc
mov
cmc
test
test
jmp
mov
pushf
pushl
mov
lea
jmp
pushf
pusha
pusha
mov
push
lea
jmp
movl
pushl
popl
movb
lea
jmp
cmc
cmc
sub
pushf
mov
movw
lea
jmp
pushf
inc
mov
not
pushf
test
test
movl
neg
cmc
pushl
rol
cmp
clc
jmp
pushl
mov
pushf
pushf
call
pushf
mov
pushl
lea
jmp
call
pushf
bswap
pushf
pushf
movb
lea
jmp
jmp
jmp
bswap
pushl
mov
push
pushl
lea
jmp
pusha
call
jmp
call
movw
pushf
popl
sub
jbe
cmc
bt
bt
push
sub
push
adc
push
shrd
or
rol
clc
pushl
bswap
shld
push
btc
jnp
sar
cmc
mov
jmp
call
call
pusha
mov
mov
mov
pushf
pushf
popl
stc
mov
test
mov
shrd
pusha
mov
add
stc
sar
mov
dec
shl
rcl
bsr
pushl
popl
sub
movl
rcr
sub
mov
stc
sub
call
pushf
popl
movb
mov
pushf
clc
xchg
not
lea
call
clc
rol
push
mov
bswap
movl
pushf
mov
movw
lea
jmp
rol
jmp
mov
call
push
movb
mov
pusha
call
xorb
lea
bswap
jmp
pusha
mov
pushl
mov
jmp
mov
pusha
movb
lea
jmp
movl
pushl
popl
mov
push
lea
jmp
push
movb
call
bswap
movb
pushf
lea
jmp
push
push
mov
pushf
pusha
mov
lea
jmp
bswap
mov
lea
jmp
pushf
mov
push
lea
jmp
mov
mov
adc
shrd
mov
jmp
push
bswap
mov
pusha
lea
mov
call
pushf
mov
jmp
mov
pushf
pushf
lea
jmp
jmp
shr
sar
xchg
mov
mov
add
mov
call
call
dec
btc
das
adc
mov
call
add
test
cmc
jmp
lea
pusha
jmp
pushf
ror
pushf
jmp
daa
movzbw
xadd
mov
cmp
cmc
mov
mov
push
sub
bt
clc
call
sub
call
clc
mov
adc
rol
bts
bt
add
rol
stc
movsbw
sub
and
jmp
push
bt
sub
call
mov
jmp
not
stc
not
test
cmc
stc
test
and
movw
mov
jmp
pushf
popl
mov
push
jmp
mov
shrd
mov
neg
not
inc
bt
mov
neg
and
movzbw
and
pushl
popl
cmc
movl
neg
cmc
mov
cmc
call
aas
mov
bsf
pop
cld
rcl
cmc
ror
pop
cwtl
rdtsc
rcl
aaa
pop
setl
xor
cmp
pop
pushf
mov
mov
pushl
popf
cltd
seto
mov
rdtsc
setp
lahf
call
mov
pushf
push
pusha
lea
jmp
pushf
popl
jmp
pushl
mov
call
pusha
rol
call
dec
rol
mov
bt
sub
pusha
rol
pusha
mov
push
xchg
pushf
movb
bt
rol
stc
jmp
jmp
add
pusha
jmp
pusha
pusha
push
call
mov
call
sub
pusha
cmc
movb
bt
cmpl
jmp
clc
sub
pusha
pushf
rol
jmp
cmp
add
bt
push
sub
call
jmp
pushf
pusha
sub
jmp
mov
movw
movb
pushf
lea
jmp
mov
shrd
lea
jge
mov
jmp
call
pushf
push
jmp
push
mov
jmp
mov
call
call
push
test
sub
clc
jmp
pusha
jmp
push
mov
movw
pushf
pusha
lea
jmp
mov
mov
call
mov
call
jmp
mov
jmp
bswap
push
lea
jmp
pusha
mov
mov
pusha
pushf
mov
movb
pushl
lea
jmp
cmc
add
jmp
mov
pushf
push
pushf
mov
call
pusha
pusha
seto
mov
rcl
neg
rol
mov
cmc
call
push
pushl
pushf
mov
mov
pushf
pushf
jmp
cmp
add
cmc
cmp
cmp
bt
add
call
pushf
mov
push
push
jmp
pushf
mov
pushf
popl
jmp
shl
aam
mov
cmc
clc
test
call
push
mov
push
lea
jmp
bswap
pushf
movw
lea
jmp
neg
movzbl
shl
xor
add
bts
rcl
add
movsbw
neg
ror
not
pusha
neg
sete
rol
pushf
movzbw
rol
lea
add
mov
sbb
inc
movzbl
test
mov
cmp
or
call
mov
mov
mov
pushl
mov
pushf
pushf
pushf
lea
ja
push
pushf
jmp
mov
mov
mov
lea
jmp
sub
push
pushf
rol
pushf
jmp
movb
mov
push
call
pusha
movw
pushf
divl
mov
call
cmp
cwtl
push
aam
mov
bswap
neg
mov
stc
add
pushf
call
add
lea
jnp
pusha
mov
pushl
push
push
lea
jmp
pushl
popl
pushl
lea
jmp
pushf
jmp
cmp
call
pushf
popl
cmp
jmp
pushf
pusha
jmp
pushf
mov
pusha
movb
mov
jmp
pushf
popl
pushf
jmp
rol
pushf
bswap
pushf
pushl
movw
lea
jmp
sub
call
bt
rol
jmp
mov
call
and
aas
mov
neg
inc
shl
mov
bt
pusha
test
stc
sub
test
movb
pushf
stc
shr
jmp
mov
pushl
mov
mov
movl
pushl
call
mov
jmp
cmc
rol
push
movb
call
jmp
mov
pushl
popl
pushf
pushf
pushf
lea
jmp
mov
pusha
movl
call
sub
jmp
push
jmp
xor
rol
rcr
mov
call
mov
call
push
mov
pushl
mov
push
movb
mov
pushf
mov
call
pushl
popl
movw
pusha
movw
lea
jmp
rol
call
pushf
call
stc
add
pusha
jmp
pushf
sub
pushf
rol
pushf
movl
bswap
pushf
mov
pushl
lea
jmp
mov
pushl
jmp
clc
sub
jmp
test
mov
mov
pusha
stc
test
pushf
sub
mov
test
cmc
add
call
sar
or
setl
neg
rol
not
bt
setnp
rol
cmp
and
not
clc
dec
mov
jmp
pushf
popl
cmc
xchg
push
sar
neg
shrd
mov
pop
shl
mov
sar
shl
not
cmp
pushl
popl
pop
movl
shr
pop
sar
mov
bt
sub
jmp
pushf
mov
pushf
mov
push
pushf
popl
call
mov
pushf
pushf
popl
call
sub
call
mov
pusha
pushf
movl
call
push
jmp
or
mov
sar
stc
shrd
adc
mov
clc
sub
pushl
shld
push
neg
movsbl
mov
clc
stc
sub
jmp
bswap
pushf
movb
pushf
lea
jmp
pushf
popl
pushf
pushl
popl
pushf
movb
lea
jmp
pusha
call
test
shl
call
call
call
pushf
popl
call
lea
jne
sar
sub
sbb
bsf
mov
bt
pusha
and
mov
stc
cmp
push
movb
pushf
call
sub
call
add
cmp
sub
test
sub
mov
pushf
movw
mov
pushf
lea
jmp
call
add
push
lea
jmp
movb
mov
push
movb
mov
pushl
mov
pushl
jmp
mov
call
mov
movb
mov
pushl
lea
jmp
pusha
aam
lea
pushf
bt
pushf
cmc
cmp
mov
jmp
cmp
test
add
push
mov
movb
push
lea
jmp
pusha
mov
mov
pusha
mov
jmp
push
mov
push
call
call
pushl
popl
shld
btr
push
bt
rcl
clc
mov
pushf
call
push
pushf
pushf
popl
cmp
mov
clc
sbb
btc
not
mov
bts
rol
mov
shrd
clc
pushl
popl
neg
shl
movl
add
mov
clc
call
bt
rol
pushf
pushf
bswap
pusha
movb
push
pushf
lea
jmp
mov
mov
jmp
mov
push
pushf
lea
jmp
dec
sete
mov
test
shr
adc
mov
push
cmc
pushf
call
bsr
shld
neg
setl
rcr
stc
ror
not
push
inc
sub
sub
shl
add
ror
sub
and
stc
mov
pushf
test
pusha
call
xchg
jmp
mov
call
cmp
call
movb
mov
movb
jmp
pusha
call
push
push
mov
btc
rcl
call
lea
jne
push
mov
push
push
lea
jmp
shl
pushf
mov
call
mov
pushf
popl
pushf
mov
btc
bt
bsr
mov
shl
movsbw
sbb
btr
push
sbb
bt
adc
stc
pushl
cmp
push
shld
dec
cmp
sar
mov
cmc
test
cmp
sub
pushf
jmp
pop
cwtl
mov
call
cmp
rcl
mov
cmc
pushl
popf
mov
mov
movl
mov
lea
jmp
inc
movzbw
setge
btc
add
push
movsbw
movzbw
sub
bsr
or
mov
jmp
jmp
jmp
mov
movb
movb
mov
pushf
mov
pusha
lea
jmp
jmp
call
pusha
push
pushf
mov
mov
pushl
call
jmp
call
push
movb
mov
pushf
popl
push
cmp
mov
jmp
cmc
push
xchg
or
cmc
bts
mov
neg
lea
sub
mov
cmc
shl
movw
movw
pushl
popl
sub
movl
not
mov
clc
sub
clc
pushf
cmc
mov
rol
jmp
movl
bswap
pushf
pushf
lea
jmp
pushf
pusha
mov
movb
call
pushf
mov
push
lea
jmp
jmp
stc
test
mov
call
push
bswap
push
lea
jmp
lea
cpuid
cmc
jmp
pushl
popl
pushf
lea
jmp
pushf
push
movl
pushf
popl
jmp
push
mov
mov
pusha
call
mov
pushf
mov
jmp
push
pusha
mov
pushf
pushf
movb
pushf
popl
mov
mov
jmp
movsbw
das
mov
rcr
add
call
pushf
pushf
mov
push
jmp
pusha
sub
clc
stc
stc
add
jmp
jmp
mov
pushf
pusha
jmp
mov
pushf
popl
jmp
add
lea
jle
pusha
pusha
mov
lea
jo
pushf
mov
mov
pusha
pusha
pushf
movb
lea
jmp
test
cbtw
bt
cwtl
movb
cmc
sub
pusha
call
xor
cwtl
btr
mov
push
call
inc
pusha
bt
jmp
call
pusha
movb
bswap
push
pushf
lea
jmp
mov
movb
pusha
jmp
pushf
popl
call
not
pushf
call
pushl
popl
inc
movl
btc
sub
mov
call
lea
mov
pushf
mov
call
pushf
popl
pushf
pushl
popl
movb
push
lea
jmp
cmc
call
call
inc
push
pushl
call
call
pusha
call
bswap
pushf
lea
jmp
rol
jmp
push
push
call
movw
mov
movb
pushf
call
bswap
mov
mov
lea
jmp
jmp
inc
clc
mov
pusha
mov
xor
call
test
bt
pushf
sub
bt
mov
rol
jmp
call
sub
pushf
push
pushf
push
lea
jmp
jl
pusha
push
pushl
mov
jmp
