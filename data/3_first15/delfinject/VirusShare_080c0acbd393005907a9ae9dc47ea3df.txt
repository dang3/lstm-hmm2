pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fdivrp
mov
add
push
insl
dec
insb
imul
add
imul
shrl
pop
pop
dec
and
add
xor
mov
jns
test
push
outsl
jb
out
lea
add
lods
out
outsl
fcomip
mov
das
add
inc
outsl
jne
insb
xorl
push
dec
jne
jb
outsb
arpl
nop
rcrb
or
push
mov
outsl
fbstp
fcoml
push
imul
push
mov
sbb
jbe
adc
fidivl
sbb
add
jl
mov
mov
lret
cmpsb
imul
sti
pop
pop
push
dec
bound
arpl
pop
sbb
mov
loopne
and
in
jo
dec
in
nop
testl
arpl
add
pop
std
pop
xor
inc
add
int3
addl
jmp
mov
dec
cmpsb
adc
int3
popf
mov
fcmovbe
into
nop
xchg
mov
addl
cs
in
ds
clc
push
out
pusha
and
js
dec
xor
push
lea
loope
push
jle
or
arpl
jne
fs
sub
addl
xchg
mov
dec
add
push
inc
popa
pop
push
imul
jmp
jg
sarb
fsubs
push
mov
lods
nop
inc
push
sbb
sbb
xchg
push
sbb
mov
inc
rolb
push
js
in
inc
push
sbb
je
inc
push
sbb
lock
sbb
push
lock
push
add
mov
adc
enter
repz
je
movzwl
mov
aaa
inc
pop
ret
pop
and
push
orl
dec
dec
inc
inc
xchg
sti
and
mov
cmp
jne
push
out
pop
ds
pop
sub
add
jmp
mov
fstp
outsb
and
adc
mov
add
mov
sarl
lea
mov
push
or
inc
jbe
into
incb
mov
pushf
sub
jns
push
mov
mov
inc
add
xchg
jbe
fists
sbb
fdivr
cld
pusha
incb
outsb
pcmpgtd
cmp
inc
add
or
ss
int3
test
cmpsb
adc
and
xchg
int
push
fcmovnbe
mov
pop
pop
pop
mov
xorl
dec
cmp
sbb
mov
add
call
daa
mov
outsb
mov
mov
fnstsw
imul
push
repnz
mov
clc
adcl
mov
add
cmp
jne
xor
fldt
add
inc
inc
or
or
pop
jmp
add
incl
jne
cmp
aaa
jne
mov
js
sbb
xor
test
loopne
add
inc
and
fdiv
icebp
mov
daa
or
aad
movsbl
jb
sarl
mov
add
stc
add
fbstp
aaa
jl
push
push
and
push
add
push
push
sub
cmpl
mov
jmp
imul
or
xor
pop
mov
mov
add
sub
mov
enter
lea
push
add
pushw
pop
jmp
lret
jmp
jo
shlb
es
inc
cmp
test
rol
arpl
insl
adc
pop
xchg
mov
jge
mov
lock
add
mov
push
push
loope
push
add
mov
mov
test
je
hlt
mov
ds
adc
push
out
popa
dec
fists
aam
push
insb
sti
cmp
add
popf
shrb
sbb
rcr
fcoms
jne
icebp
push
add
fnsave
dec
popf
sbb
cmp
mov
call
mov
repnz
mov
push
push
adc
pop
loop
mov
ds
sbbb
stos
outsl
pop
cmp
fwait
repz
fsubrs
adc
inc
and
jae
or
or
push
xor
daa
or
mov
pop
mov
std
test
or
add
sub
mov
xchg
insl
cmp
jne
inc
pop
xchg
pushl
inc
stos
adc
inc
sub
inc
push
push
and
fisttps
fwait
dec
lea
out
push
and
mov
lock
and
lcall
adc
adc
pop
jmp
jecxz
and
or
mov
in
sahf
cmp
cs
jbe
jbe
jb
insl
cmp
jae
sbb
cmp
push
push
jnp
dec
jo
iret
int3
push
aam
setp
subb
mov
orl
jnp
ljmp
popa
in
insb
jnp
and
pop
add
dec
xor
add
ja
ja
loopne
adc
add
outsl
mov
add
inc
ret
inc
jne
idivl
mov
inc
aas
rolb
rorl
jg
mov
xor
mov
or
push
pop
mov
cmp
push
fiaddl
inc
fisttpll
jb
sbb
das
jne
push
fs
rorl
clc
jo
lea
and
add
xor
xchg
daa
push
add
out
mov
mov
enter
cli
or
pop
std
scas
mov
sbb
add
sbb
cmp
or
lahf
call
mov
sub
lcall
inc
or
or
enter
push
jae
xor
fimull
aas
roll
sub
xchg
adc
xor
mov
or
je
sub
test
xor
sbb
addb
adc
jmp
stc
cmp
jne
pop
jg
loope
cmpl
push
cmp
mov
scas
cs
inc
icebp
push
nop
imul
adc
sub
dec
leave
lea
gs
add
and
dec
js
push
dec
cmp
pop
shlb
insb
aam
sub
repnz
jo
sbb
test
je
sub
ret
mov
mov
aam
adc
pop
dec
cmp
ja
jmp
sub
std
loopne
scas
push
mov
push
dec
push
push
pushl
fidivrl
and
push
add
cmpb
and
in
sbbb
lock
jge
mov
or
adc
filds
inc
cmp
movl
insl
mov
cld
js
adc
mov
jle
rolb
pop
fs
push
and
in
ret
push
cs
in
pop
inc
jo
pop
pop
pop
xlat
scas
test
pushf
mov
call
sbb
xor
mov
roll
dec
mov
lea
adc
pop
xor
jmp
or
add
jnp,pt
lock
dec
mov
jge
fwait
sbb
fiadds
mov
lock
inc
jne
repz
pop
hlt
fistpl
jl
mov
clc
cmp
or
adc
push
or
clc
mov
jne
test
jns
ret
cli
add
pop
nop
hlt
jmp
sub
sbb
mov
and
fistl
or
mov
sbb
push
dec
lahf
push
mov
pop
adc
pop
cld
mov
test
ret
sbb
push
or
sbb
and
xor
jnp
out
jo
add
sub
xchg
lock
mov
cmp
jl
movl
mov
mov
or
mov
das
add
emms
ret
in
push
in
leave
add
inc
or
add
cmpsl
sti
rolb
cld
cmp
ljmp
push
or
jne
jl
or
call
add
push
lock
or
ret
inc
lock
xchg
xor
cmp
fwait
sub
add
and
xor
test
pop
lock
mov
sub
int3
clc
aad
jge
or
xor
jo
xchg
or
mov
out
fdivs
testb
and
arpl
add
sub
or
clc
dec
inc
xor
and
mov
pop
cmpsl
hlt
push
rolb
fldt
push
jo
js
divl
in
js
or
jg
rorb
xor
sti
filds
sub
imul
cmp
jge
push
aad
push
outsl
test
xchg
or
adc
or
and
lcall
mov
jp
ficomps
loopne
mov
shlb
lea
rclb
adc
fiadds
adc
aam
pop
mov
ret
aaa
inc
mov
or
push
mov
xorl
pop
mov
cmp
shll
jb
sti
jbe
test
jo
clc
or
mov
lret
and
testb
inc
adc
addl
mov
stos
lods
or
loope
insl
nop
or
cmp
or
leave
pmuludq
mov
ret
scas
or
outsb
cmpl
push
mov
adc
or
pop
daa
add
sub
add
fsubs
fmull
mov
sbb
dec
cmp
xchg
or
adc
mov
dec
adc
push
inc
mov
clc
or
fdivs
movsb
cmp
pop
add
jge
testb
or
add
jae
xor
cmp
jne
addl
pop
das
sbbb
add
add
mov
mov
enter
inc
pop
or
roll
mov
hlt
add
inc
push
enter
lea
ret
pusha
or
sub
fnstsw
pop
out
and
stos
cmp
dec
xor
test
out
add
rol
or
or
pop
loop
mov
jle
lcall
call
pop
cmp
sti
inc
cmp
jbe
pop
je
out
add
je
jbe
push
xchg
loopne
orl
mov
orb
mov
adc
cmp
mov
or
pusha
ja
adc
and
mov
dec
or
pusha
das
subb
jl
sub
or
jne
mov
push
sti
fistps
rorb
sti
rcrl
cli
adcb
jne
push
jmp
or
jne
in
dec
sbb
sbb
pop
popa
push
mov
push
pop
lock
or
add
adc
push
pop
clc
outsb
jle
inc
cld
inc
push
bound
or
ud0
pop
and
cmp
add
mov
lods
push
or
jo
jmp
stos
mov
testl
in
movaps
mov
sbb
adc
out
mov
and
jmp
xchg
sbb
popa
insl
adc
inc
xchg
or
sahf
insb
mov
pop
add
outsb
push
mov
and
test
add
stos
in
sbb
shld
xchg
sbb
out
add
mov
sbb
sbb
pop
pop
sbb
test
pop
mov
pop
lock
dec
mov
pop
loope
scas
xorl
lods
leave
lds
addr16
pop
fcmovbe
daa
or
ret
add
es
call
mov
test
jne
cltd
or
mov
scas
xor
lcall
xor
push
add
or
bound
test
inc
ljmp
lds
rcrb
push
daa
cmp
lock
sub
sub
cwtl
loope
add
fldl
xor
stos
jle
dec
lcall
lods
dec
push
lock
test
je
sub
sbbb
clc
add
or
out
mov
cmp
or
jmp
push
repz
testb
and
or
sub
into
pop
lds
mov
mov
nop
pop
fisubs
ret
lods
mov
push
jmp
mov
and
sbbb
cmp
or
adc
scas
nop
out
sub
les
adc
xchg
sub
outsl
scas
ja
jbe
add
sub
or
testb
adc
adc
push
mov
and
sub
xchg
cltd
cmpsl
mov
dec
jo
into
sub
jno
cmp
jg
sub
cmpsb
invlpg
and
pop
xchg
push
leave
movb
cld
clc
nop
rorl
add
imul
das
test
add
dec
nop
push
cli
push
loopne
cmp
popl
lds
std
push
rclb
test
mov
pop
add
fstpl
mov
cmp
push
and
sub
out
shrb
imul
adcb
sbb
nop
sub
insb
pop
adc
sub
in
add
and
movsl
sub
jp
scas
or
add
ficoml
mov
jl
idivl
lock
cmp
je
fmul
xchg
dec
je
insl
push
sbb
jle
scas
or
lods
sub
stos
xchg
test
jle
xchg
call
cmpsb
mov
xlat
or
outsb
sub
shlb
stos
scas
out
xor
loopne
push
adc
or
mov
std
ret
mov
xor
sti
je
push
mov
dec
inc
pop
or
mov
ret
push
jmp
aas
xor
add
xchg
push
bound
rorb
out
or
cmpl
adc
mov
test
push
inc
adc
bound
add
push
and
dec
and
push
or
cmp
jns
xor
ret
repz
mov
cmp
mov
test
jne
cwtl
fs
cmp
lahf
cmp
mov
mov
mov
sbb
push
and
out
push
call
aaa
adcb
ja
jne
xchg
pop
xor
aas
imul
clc
add
cltd
mov
jnp
mov
mov
ret
filds
sbb
push
je
cmpl
ret
sub
inc
rolb
jl
cmp
jg
add
mov
inc
rep
jmp
mov
hlt
jmp
xor
jmp
mov
jmp
mov
pop
xchg
pop
adc
pop
jl
cwtl
ds
mov
arpl
divl
je
sar
js
idivl
xchg
inc
je
cld
lea
xor
std
xor
cld
inc
cmp
outsb
sub
pop
out
adc
jmp
test
call
addr16
dec
and
sbb
jg
loope
cmp
jg
js
syscall
addl
jmp
xor
mov
jmp
cmp
jmp
outsl
mov
cmpsl
pop
pop
mov
sub
add
or
jbe
data16
and
and
lods
inc
pop
mov
or
or
or
jno
or
sub
nop
push
and
fistpll
fdivs
clc
push
pop
mov
incl
inc
es
mov
xor
inc
ja
insb
push
sub
adc
add
dec
sbb
push
stos
clc
divb
push
push
test
fisttps
js
mov
loop
xor
fdivrs
xchg
cs
lds
sbb
incb
adc
dec
jmp
stos
or
call
cmp
jb
cmp
ja
sub
jmp
and
jmp
mov
sub
gs
dec
or
in
or
adc
xchg
mov
fildl
fwait
orw
insb
fcomip
xchg
std
xchg
fldcw
pop
inc
jge
into
test
xor
jne
mov
jg
jnp
scas
mov
jae
mov
jmp
sub
push
rol
or
call
jmp
shr
pop
cmp
test
je
cmp
and
cmp
and
mov
xorl
jge
push
aam
inc
cmp
mov
ja
and
in
fnsave
jb
push
sbb
jbe
or
and
sbb
jmp
cmp
push
dec
fnstcw
jno
xchg
xchg
pop
mov
xor
mov
cltd
jle
incl
shlb
cmp
ja
mov
mov
roll
xlat
push
cld
add
mov
sub
jbe
mov
sti
insl
leave
mov
inc
xchg
clc
call
or
mov
cmp
jbe
mov
mov
inc
inc
and
xchg
xor
mov
xlat
cs
push
xchg
inc
inc
mov
mov
ret
ljmp
pop
cmp
jne
dec
je
mov
pop
add
inc
test
or
loop
push
adc
jg
pop
and
je
mov
cmp
jne
push
adc
add
adc
or
add
add
jmp
pop
cmp
cmp
jne
shr
mov
adc
add
sti
mov
shr
out
loopne
dec
inc
pop
jle
dec
pop
cmp
ror
std
push
test
mov
cmp
jne
dec
dec
xchg
movsl
mov
dec
dec
sbb
push
lods
or
mov
mul
das
ffree
mov
shl
or
scas
or
stos
adc
stos
pop
daa
outsb
cmp
push
or
mov
push
inc
sub
fistpll
add
sub
fidivrl
pop
pop
je
xor
dec
and
fisubrs
jmp
or
or
cmp
mov
and
fcoms
out
int
std
inc
mov
jmp
inc
mov
js
pop
sub
jmp
inc
cmpsl
cmp
mov
filds
mov
jbe
movups
or
leave
popf
add
aad
cmp
jg
pop
xor
mov
outsl
mov
ja
and
cmp
cmp
js
outsl
mov
dec
jne
pop
decl
out
fsubrs
xchg
dec
aas
cmp
je
jl
add
lea
jle
js
lea
fldt
and
sub
je
jle
dec
fisubrs
jno
add
popa
push
and
xor
jmp
pop
xchg
jge
mov
and
xchg
cmp
stc
sbb
sbb
push
fstp
fldt
fldz
lods
pop
pop
popa
mov
movsb
jg
in
rdmsr
aas
mov
cmp
cmpl
inc
pushf
or
ret
stc
leave
andl
adcb
sbb
in
sub
sbb
xchg
and
mov
mov
mov
lock
adc
out
cld
imul
mov
out
sub
pop
jecxz
jg
lahf
incl
leave
sbb
mov
cmp
fidivrs
das
jg
aaa
call
mov
bound
cmpb
lret
jg
mov
xlat
fadds
outsb
xor
xchg
push
or
push
push
lcall
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
ljmp
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
decl
dec
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
mov
cmpsb
iret
decl
js
inc
mov
stos
mov
cmp
or
mov
ljmp
jg
mov
imul
divl
jl
xor
cmp
call
decl
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
incl
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
incl
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
decl
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
and
push
movsl
mov
popa
movsl
mov
and
addr16
repz
mov
subb
lcall
push
pusha
les
outsb
bound
xor
jmp
xor
xor
mov
push
sbb
add
pop
pop
cmp
add
repnz
adc
fucomp
outsl
js
or
hlt
movzwl
lock
inc
imul
fcmovbe
inc
cmp
inc
pusha
dec
mov
movl
and
hlt
push
addr16
add
or
pusha
lds
mov
sub
sub
mov
loopne
and
pop
aas
or
out
push
mov
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
icebp
pushl
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fwait
lock
fninit
fwait
in
pushl
add
push
inc
cmp
xlat
mov
xor
mov
inc
out
lcall
jb
es
pop
mov
or
dec
cld
jne
cli
add
adc
cmp
xor
out
jne
mov
inc
mov
jno
lock
inc
fdivl
movsl
daa
cmp
nop
es
sbb
iret
sbb
inc
pop
aaa
daa
cwtl
or
insb
add
shrl
pop
icebp
imul
call
movups
mull
push
daa
jle
movsb
outsl
loopne
mov
or
push
cld
push
add
jmp
ret
jge
mov
xor
push
shr
dec
rep
pop
push
jl
std
lock
mov
sub
fdivr
call
jmp
cmp
je
pop
mov
add
jae
fneni(8087
std
push
push
push
mov
mov
pop
sbb
cmp
arpl
mov
mov
mov
jns
jecxz
aas
and
fcom
jmp
js
roll
paddd
cmpps
pop
filds
and
popa
ret
addl
adc
dec
test
mov
dec
or
pusha
jp
inc
outsb
pusha
and
sub
in
inc
sub
mov
aad
mov
or
stc
mov
sbb
lock
in
lea
inc
push
sbb
daa
mov
sbb
xchg
jne
adc
je
adc
nop
inc
xchg
or
pop
test
fisttps
mov
mov
jns
call
cmp
push
jb
cmp
cmc
invd
fsubl
popa
jns
jne
or
je
inc
mov
xor
lds
pop
push
and
mov
test
mov
and
mov
out
dec
jg
outsl
rclb
rorl
jg
pusha
ret
pop
hlt
jne
mov
and
add
jle
loop
cmpsl
inc
pop
or
movl
or
idivl
ret
pop
add
sub
mov
adc
out
lret
pop
add
out
mov
xor
mov
cmp
cmpsl
aaa
outsl
inc
mov
in
mov
inc
orb
pop
push
js
jle
aad
or
lds
or
pop
shl
pop
mov
jp
pop
in
lock
sub
decl
je
jno
mov
add
mov
push
add
dec
jne
add
jmp
push
jmp
add
hlt
xor
xor
jecxz
dec
cmp
xlat
mov
ficompl
push
lahf
mov
pop
repnz
decb
mov
call
add
test
ds
mov
jl
inc
hlt
xor
inc
decl
mov
mov
movl
or
ds
out
pop
or
dec
scas
sub
mov
or
or
dec
dec
stos
pop
rorl
cs
push
jp
cli
adc
push
clc
xchg
in
sbb
dec
stos
outsb
jg
add
call
cli
xchg
cmpb
fdivs
pop
cli
in
push
call
xchg
idivb
pop
push
popa
push
push
cmp
xor
repz
or
das
add
add
push
sbb
scas
or
jae
data16
gs
xlat
pop
push
push
and
sbb
cli
push
cmp
je
or
jne
movsbl
inc
inc
jmp
add
sbb
cltd
je
pop
addr16
jecxz
shrl
loope
adc
shll
aas
loop
fdivrl
and
jecxz
pop
movb
or
add
jne
gs
out
fiadds
dec
adc
outsb
xor
pop
adc
test
xchg
jns
shl
adc
mov
call
cmpl
je
or
or
jbe
test
out
sub
inc
notl
cmp
pop
ja
dec
sti
fstl
pop
hlt
leave
or
xor
adcl
push
mov
das
sbb
sti
push
jns
je
orl
sbb
pushf
mov
jmp
sbb
addl
push
push
mov
sbb
pushl
ljmp
movl
std
jo
ret
add
mov
mov
mov
daa
xor
dec
jb
mov
pop
sahf
sbb
sbb
push
add
mov
pop
cltd
push
or
jmp
push
call
jno
mov
rclb
roll
mov
out
sub
add
lock
loope
pop
fdivrs
dec
fdivs
lea
mov
mov
jg
cltd
hlt
subl
jne
pop
dec
jne
xor
mov
inc
incl
out
daa
mov
enter
lahf
adc
jno
lds
adc
pop
addl
bound
or
adc
pop
add
sub
arpl
jo
lds
pop
pushl
popf
rcr
movl
or
lock
call
inc
jg
and
inc
pop
pop
push
push
push
push
push
mov
pop
xchg
js
and
stc
es
mov
aas
xor
mov
or
pusha
add
ret
arpl
testl
int3
xor
push
xlat
test
cmc
lea
clc
pop
mov
jmp
mov
clc
lods
pop
insb
xchg
jmp
ret
xor
daa
js
xchg
xor
xchg
ret
or
ja
testl
std
jg
je
cmp
push
sub
and
cmp
pusha
add
sub
jb
je
jmp
cmp
neg
sub
adc
std
sbb
dec
cmp
es
enter
leave
jmp
mov
jmp
mov
jmp
push
sbb
call
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
insl
jne
pop
punpcklwd
nop
push
or
pop
data16
popf
filds
popf
sub
jecxz
lea
je
leave
cmpsl
push
push
outsl
jp
push
pop
dec
aam
pop
test
mov
je
push
push
sbbb
fistpll
push
inc
cli
sub
leave
je
loopne
or
sub
pushf
lock
jnp
xor
lock
cmp
and
pop
and
mov
mov
ljmp
dec
cmp
mov
add
or
cmp
jne
and
arpl
add
mov
pop
sub
or
mov
subb
push
popa
inc
push
ret
negl
dec
mov
cmc
inc
fdivr
adc
push
test
add
push
clc
xor
jg
in
adc
rorl
pushf
inc
xchg
xor
jo
xchg
xchg
imul
mov
xor
loope
cmp
jle
fcoms
rcrl
xor
rorl
fdivrs
ffreep
add
lcall
inc
xor
or
adc
add
jmp
xor
push
xor
movb
movd
aas
mov
sbb
pop
sbb
out
fadds
fisubrl
push
jbe
jne
pop
pop
pop
inc
push
pushf
sbbl
dec
mov
inc
fwait
sbb
xchg
jo
push
inc
mov
pushf
fstpt
inc
lock
mov
insb
or
and
mov
into
cltd
idiv
add
pop
rorl
clc
leave
mov
xchg
mov
hlt
push
shl
mov
push
out
inc
xchg
out
std
enter
add
rolb
jg
rcrb
adc
ja
add
or
jmp
pop
leave
jg
pop
dec
scas
mov
jg
push
cmpw
mov
dec
inc
sarb
mov
cmp
popa
push
push
je
cmc
jb
jg
xor
add
inc
inc
pop
ret
mov
push
pop
pop
xlat
adc
cmp
cmp
add
pop
push
mov
sbb
pop
cmpb
push
cmpl
push
or
push
jns
jbe
je
out
inc
sbb
mov
mov
mov
xor
es
jne
aas
add
mov
mov
test
mov
fmuls
adc
push
sahf
dec
sbb
dec
adc
mov
jne
je
cmpsb
push
cmp
pop
add
mov
xor
jne
xor
rcl
mov
sbb
mov
mov
add
daa
sti
shr
data16
inc
or
adc
ret
nop
popl
jg
inc
cmp
mov
dec
jl
lock
pop
sbb
cmpsl
sahf
ss
in
mov
push
sbb
add
or
lods
das
xor
dec
jne
cmpsb
add
icebp
sbb
xor
inc
mov
std
out
xor
pop
dec
sbb
pop
pop
jmp
ja
xchg
add
notb
xchg
jle
cli
jg
push
jle,pn
push
add
and
push
adcb
movl
pop
pop
mov
mov
hlt
loopne
imul
clc
add
sbb
ljmp
shll
loopne
fsubs
jg
xchg
push
push
push
xchg
push
push
adc
cs
push
les
and
int3
aaa
xor
pop
add
add
mov
clc
fnstcw
lock
jmp
lea
addl
incl
xlat
sub
mov
mov
clc
or
jl
xchg
mov
push
mov
mov
fldl
fistpl
push
jge
out
roll
sbb
add
cmp
clc
mov
mov
or
and
or
lea
shlb
or
je
fists
shlb
test
mov
mov
sub
jmp
push
cmp
jle
enter
pop
or
or
data16
in
jbe
testb
add
and
loopne
testb
push
ret
xadd
scas
sub
pop
add
pop
pop
xor
add
and
clc
jne
rcrb
sub
cmp
jl
in
inc
pop
or
or
xchg
and
cld
ret
push
aas
loope
cmp
push
je
mov
sbb
jmp
cld
add
cmp
pop
and
mov
push
fnstcw
mov
sub
and
out
popa
cmpb
cmpl
je
cmp
mov
loop
pusha
sub
mov
inc
cld
add
je
adc
dec
mov
cli
sub
lds
push
sbb
lret
mov
mov
jmp
push
jg
xor
xchg
adc
mov
cmp
mov
dec
jmp
ja
push
cmp
or
pop
cmp
gs
pusha
xchg
jo
dec
jne
mov
cld
mov
cmp
pushl
add
dec
jmp
and
orb
inc
pushf
ret
repnz
add
pop
or
jmp
add
or
cwtl
fisubrl
xchg
jmp
and
rclb
subl
mov
mov
fs
scas
inc
pop
pop
dec
shlb
inc
pop
and
cmp
and
outsb
and
and
add
aam
aas
test
push
clc
inc
lods
repz
movsl
lcall
lea
mov
icebp
je
push
push
mov
out
mov
dec
inc
aaa
add
daa
pop
mov
scas
cmp
mov
mov
adc
pop
push
es
jl
cmp
jge
sub
fistps
stos
aad
cmp
jg
pop
xor
cmp
jmp
inc
jmp
and
cs
int3
cmp
jg
dec
jl
sub
mov
loop
sub
mov
add
stc
add
lea
dec
sbb
mov
cli
mov
orb
cltd
mov
push
mov
fidivs
inc
dec
jge
cmp
adc
imul
add
or
xchg
pop
cmp
mov
lea
lock
cmp
sbb
in
rcll
leave
jmp
mov
xor
mov
push
insb
mulb
mov
inc
jae
adc
jae
cmp
cli
inc
lret
mov
lock
frstor
push
xorl
cmp
pushl
adc
cmpl
jne
xorl
ds
xor
pop
pop
pusha
add
sub
xchg
test
lock
arpl
mov
pop
cmp
pop
add
adc
icebp
in
shrl
jle
jmp
pop
in
fsts
loope
adc
lods
adc
add
in
mov
incb
push
jo,pn
inc
insl
and
push
push
sub
or
cmp
ljmp
adc
aaa
ror
dec
add
scas
mov
pop
into
repz
mov
push
roll
pop
pop
cmovs
cltd
pop
ss
cmp
jmp
nop
ja
sub
pop
jmp
lods
add
cmp
in
add
or
dec
push
loope
xor
pushl
mov
addl
push
sbb
add
xor
mov
add
dec
push
pop
xchg
sub
shr
out
je
or
out
push
inc
lea
inc
push
xor
shlb
xchg
sbb
push
cvtps2pd
or
mov
aam
add
stc
cmpsb
and
loope
ret
aam
dec
cmp
xchg
pushf
insb
mov
pop
lcall
sub
cmp
push
lods
add
rcll
jae
or
out
ljmp
adcl
fadds
cmp
xchg
add
cmpsb
push
in
push
mov
rolb
push
mov
adc
add
loopne
je
jmp
adc
mov
mov
xchg
ds
lods
fimull
cmpsb
mov
inc
dec
xchg
cs
mov
pop
std
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
xlat
cmp
je
push
add
or
iret
add
cltd
clc
jmp
adc
cli
scas
xchg
mov
and
repz
push
or
movsbl
dec
cs
adc
repnz
fwait
std
cmp
pop
jmp
cmp
add
add
roll
sub
pop
cmpl
aad
call
call
inc
shr
loopne
ret
mov
imul
pop
ret
test
jnp
out
inc
dec
test
int
or
push
frstor
out
outsl
lret
cmp
pop
ja
xor
xor
call
roll
mov
jmp
mov
das
xchg
inc
aas
and
sub
mov
jl
sbb
cmp
sub
jmp
or
adc
shll
nop
inc
push
push
push
pop
adc
xchg
xor
pop
inc
fistps
icebp
add
cld
gs
clc
push
pop
add
jne
hlt
vmovd
mov
jo
fisttps
adc
xor
divl
negl
or
or
or
ret
pop
jo
pusha
sbb
push
lret
bound
and
push
inc
jecxz
das
xor
bound
arpl
mov
jge
jecxz
repz
fisubs
insb
lea
mov
mov
mov
push
inc
dec
outsl
fstps
sub
pop
jmp
aas
add
shll
mov
and
mov
aas
and
js
push
in
dec
jne
inc
push
xor
sbb
jg
scas
or
mov
mov
xchg
out
cmpsb
in
inc
push
popa
jge
sub
nop
xchg
pushf
pop
fistpl
add
pop
rorb
sub
xchg
cmpsl
or
imulb
addr16
std
daa
adc
les
xor
add
daa
or
ja
sti
add
jmp
aaa
inc
ljmp
sti
mov
add
je
cmp
ja
jo
xor
or
adc
popa
jo
jo
adc
in
pop
xorb
ja
nop
xchg
xchg
sbb
push
mov
mov
add
mov
xchg
dec
sub
les
cltd
lock
xor
mov
xchg
pinsrw
mull
mov
loop
in
lods
fs
add
dec
adc
pop
pop
ret
push
loope
imul
lods
lock
dec
push
inc
scas
pusha
push
or
and
adcl
mov
and
jl
call
inc
pop
sti
jge
sti
cmp
jne
sbb
inc
jmp
cmp
jne
mov
inc
and
sub
loope
std
xorb
fdivrl
je
es
aam
pop
fadds
add
sub
mov
dec
adc
or
add
sub
jb
add
or
aad
inc
sbb
mov
and
jmp
sbb
mov
sbb
pushl
lods
jb
jmp
jl
andl
add
pushl
jmp
jg
mov
cltd
xor
sub
jno
shld
add
cmpb
or
or
xor
fsubp
fstpt
push
dec
int3
xor
scas
push
xor
xor
add
ficoml
cld
pusha
lock
jo
pop
movzbl
xor
pop
xor
mov
jne
adc
int3
and
jg
pop
mov
dec
pop
or
dec
adc
cmp
jmp
mov
rorl
je
pop
jmp
and
sbb
ret
lahf
iret
xchg
shr
setl
cmp
je
dec
out
bound
inc
mov
jne
or
rcll
dec
pop
ss
xor
sub
jmp
sub
in
test
mov
ss
in
dec
adc
mov
mov
addr16
fldl
pop
int
mov
and
dec
mov
mov
ficoml
jge
jns
subl
lods
popf
mov
cmp
clc
scas
inc
add
rclb
aas
xchg
lahf
jo
mov
push
adc
test
add
cmp
sbb
out
xor
or
fbld
fdiv
je
andl
mov
add
jp
cli
addr16
push
in
sti
jle
scas
sbb
rolb
scas
add
mov
sub
pop
push
out
mov
inc
in
stos
mov
jle
arpl
nop
in
data16
cwtl
fnstsw
jge
cmp
jge
mov
cltd
sub
arpl
leave
mov
fadd
sbb
adc
dec
mov
inc
mov
sub
inc
sbb
add
jnp
into
push
movsb
inc
add
xlat
mov
or
inc
out
movl
add
aas
or
or
das
cmp
inc
xor
mov
xadd
shl
fs
dec
jne
aad
pusha
subl
test
loop
push
sub
inc
iret
cmp
inc
mov
cmp
iret
ret
inc
cmp
mov
adc
mov
icebp
lods
rcll
pop
or
repnz
inc
mov
enter
mov
push
adc
inc
cmp
outsl
les
xor
sub
cmp
jle
fcmove
xchg
or
enter
lock
fidivrl
or
lcall
hlt
out
cli
xor
sbb
mov
dec
or
lock
inc
mov
jle
pusha
adc
cmpsb
xlat
cmp
or
pop
push
pop
cld
and
addl
xlat
lret
aas
iret
bound
or
pop
adc
or
or
xlat
es
aas
lock
jne
jg
mov
adc
push
or
xorl
sbb
xchg
sbb
clc
scas
lea
adc
dec
add
mov
incl
ss
pop
xlat
pop
jo
sbb
dec
and
pop
adc
fdivrl
mov
cmp
mov
xchg
mov
dec
scas
clc
insb
jnp
or
mov
daa
jno
movsl
les
ljmp
push
lahf
xchg
xor
ja
pop
mov
xchg
lahf
mov
hlt
mov
push
ljmp
sahf
mov
adc
hlt
rorb
xor
ljmp
orb
pop
call
lea
test
sub
scas
push
pop
add
dec
aam
inc
pop
jge
cld
add
add
mov
aad
sbbb
inc
call
mov
iret
test
or
scas
bound
jl
test
jmp
testl
popa
negb
daa
jle
movsl
add
mov
mov
pop
fstl
cmc
mov
addr16
sub
imul
in
lea
shr
loope
andl
in
sub
mov
js
ret
inc
cmp
inc
push
inc
sub
jbe
jno
jne
stos
cwtl
shll
andl
popf
aaa
sarb
push
sub
mov
pop
movb
ret
dec
push
push
lea
sarl
cwtl
hlt
or
dec
push
fsubs
aas
std
decl
outsb
gs
xor
cs
insb
push
inc
gs
mov
decl
addr16
popa
je
dec
popa
insl
gs
es
fmul
push
xor
adc
push
fucomip
adc
das
mov
push
daa
pop
pop
mov
pop
add
leave
roll
add
ja
pop
xchg
sbb
imul
pop
cmp
mov
push
xor
or
int3
dec
cmp
call
ret
pop
repnz
jae
inc
adc
fidivs
aas
rcrb
sti
sub
add
or
loopne
fildl
push
fmuls
outsl
or
push
lds
cltd
jmp
repz
pop
jg
test
add
dec
in
in
je
push
dec
sti
outsb
inc
cmp
jne
adc
push
incl
ss
rolb
add
ret
and
test
leave
adc
jne
or
insb
sbb
mov
ja
ss
in
je
pop
jae
ret
movb
push
outsl
data16
popa
jb
fisttps
arpl
gs
aaa
loopne
pusha
stos
pop
inc
ret
mov
sbb
inc
stos
push
adc
cmpb
mov
stos
sbb
lock
mov
int
je
fstpt
jne
in
add
gs
rolb
mov
sti
jmp
pop
ss
ret
dec
testl
cwtl
and
addr16
imul
imul
js
push
and
add
xchg
cmp
loope
inc
adc
add
and
ret
out
xor
loop
jno
out
data16
jb
xor
or
xlat
rorb
orb
mov
loopne
mov
mov
add
setl
bound
ret
and
cmp
roll
cmp
push
imul
sub
add
sub
sub
dec
clc
adc
or
mov
popl
fxch
xor
mov
push
inc
stos
adc
je
sbb
xchg
push
das
adc
adc
imul
pop
sbb
fcoml
dec
add
adc
imul
and
ss
pop
xchg
lock
movl
rcll
jg
push
or
pop
arpl
add
clc
test
scas
jnp
jmp
arpl
mov
insb
lea
xchg
mov
ret
mov
lret
lds
dec
xor
cli
add
cltd
mov
jg
dec
aad
xchg
mov
dec
inc
cmp
ja
jg
push
mov
inc
jmp
cmp
pop
add
pop
cld
ja
pop
push
fcmovb
jmp
or
mov
adc
and
sbb
std
ss
fiadds
xor
or
mov
popa
add
dec
popa
rolb
dec
add
dec
or
cmp
jb
or
dec
or
loopne
add
or
xor
out
adc
pop
add
cmp
lea
add
pushl
jle
dec
fldl
push
cmpsb
lock
mov
or
cmp
pop
add
dec
and
inc
test
and
loop
sbb
loope
and
je
cmp
adc
xor
clts
add
jne
decb
sub
inc
shl
or
mov
jle
fcmovbe
pop
lea
dec
dec
cld
mov
cmp
fildl
inc
inc
fwait
xlat
or
testl
adc
or
sbb
scas
loop
add
and
inc
inc
mov
ret
mov
xor
xor
pop
in
std
pop
sbb
push
sbb
or
push
clc
jb
inc
and
and
cmp
scas
lods
dec
pop
push
push
arpl
sub
pop
mov
test
addr16
adc
outsb
lea
shll
lcall
outsb
and
test
in
mov
xadd
or
jmp
adc
enter
les
mov
cmpsl
push
sti
test
or
shlb
divb
rolb
subb
pop
inc
cmp
sub
mov
adc
jl
inc
lods
sub
jns
inc
cmp
add
pushf
sub
inc
dec
fildl
ds
cmp
push
mov
push
enter
cli
aad
cs
sbb
lea
sub
iret
repnz
pusha
test
jnp
add
adcb
jno
out
mov
mov
jp
sub
dec
push
gs
pop
lea
push
push
enter
and
sbb
fstpl
push
and
xorl
test
jge
gs
pop
fcomi
out
outsb
incl
lock
dec
pop
mov
enter
ret
int3
mov
mov
mov
pop
mov
test
sbb
movb
pop
add
xor
call
add
push
and
insl
fsubrp
int3
and
cmp
adc
adc
shr
rcll
popa
mov
add
and
mov
sub
jmp
rcl
adc
jmp
push
jl
icebp
or
mov
sub
nopl
cli
xor
mov
jge
add
jno
sbb
cli
push
push
outsb
mov
push
and
cmpl
pop
adc
aas
adcl
or
mov
mov
mov
inc
and
push
loop
mov
lret
add
mov
push
cs
ret
mov
xchg
test
cld
outsb
repnz
in
mov
mov
test
cmp
mov
push
add
jbe
adc
jns
insb
jle
add
sbb
es
sub
loope
fbld
jge
sbb
mov
mov
push
int3
insb
inc
inc
add
add
sbb
out
icebp
je
cltd
xchg
add
je
push
das
add
cs
mov
add
or
push
gs
scas
gs
outsb
add
adc
inc
imul
mov
push
outsl
arpl
sti
std
in
pop
inc
gs
jne
je
dec
outsl
je
imul
lea
jbe
ds
outsl
inc
arpl
or
add
ficomps
sbb
xor
xor
pushl
bound
outsl
js
imul
ja
nop
mov
jle
andps
outsb
dec
inc
xor
je
jl
ds
add
sbb
jb
nop
popa
unpcklps
enter
cmp
xor
orl
sub
orl
and
sbb
or
enter
or
enter
add
nop
inc
dec
push
cld
loop
hlt
inc
push
sbb
call
in
sbb
aam
int3
enter
enter
and
mov
or
enter
movsb
or
enter
cwtl
xor
and
and
and
je
or
enter
fs
enter
pop
xor
and
and
and
xor
or
enter
and
sbb
fs
nop
inc
in
sub
and
push
sbb
adc
sbb
or
fdivs
pmuludq
in
call
in
faddl
sbb
aam
int3
sbb
enter
nop
inc
push
mov
push
sbb
sbb
pushf
push
sbb
xchg
nop
mov
fs
inc
mov
jl
je
inc
push
sbb
push
fs
pop
or
enter
pushf
nop
mov
enter
orb
jl
orl
je
orl
insb
push
enter
push
xor
and
and
and
xor
sub
or
enter
adc
enter
or
in
orl
cld
in
push
sbb
clc
hlt
lock
sbb
call
nop
inc
aam
mov
push
ror
mov
xor
sarb
mov
or
enter
mov
pushf
cwtl
xchg
enter
nop
mov
test
enter
clts
sbb
push
xchg
inc
pop
pop
push
sbb
push
dec
dec
fs
inc
push
inc
inc
cmp
inc
push
sbb
xor
inc
push
sbb
and
sbb
sbb
adc
fs
inc
adc
jb
inc
push
add
cld
in
orl
hlt
lock
in
call
enter
aam
enter
int3
enter
or
sarb
mov
or
enter
mov
pushf
cwtl
xchg
xor
and
and
and
jo
or
enter
pusha
or
enter
push
xor
and
and
mov
clc
in
movzwl
shl
or
xor
pop
orl
test
mulb
xor
and
and
or
cmp
xor
xor
mov
xor
adc
scas
push
pop
push
lcall
movswl
add
inc
and
mov
popf
cmc
dec
pop
push
mov
dec
and
pop
jo
or
cvtpi2ps
jl
aam
or
jb
cmp
and
xor
in
sbb
add
or
adc
sbb
and
rclb
bound
imul
mov
sahf
pop
ret
adc
and
nop
scas
cmpsb
loopne
mov
fists
stos
sbbb
repnz
cmp
pop
sbb
loopne
pop
mov
push
push
push
or
test
add
adc
adc
pop
addr16
and
sbb
or
pop
or
inc
xor
xor
add
addr16
pop
shlb
and
push
dec
inc
inc
dec
add
outsl
idiv
data16
and
and
dec
pop
inc
push
mov
pop
and
mov
push
push
pop
sub
fstpl
sti
outsl
push
inc
dec
pop
dec
dec
dec
inc
push
das
cmpsl
leave
add
dec
je
outsl
mov
jge
and
jl
and
push
icebp
fs
inc
push
repnz
nop
inc
push
sbb
div
inc
push
sbb
cli
push
sbb
cld
std
sbb
jmp
loope
nop
inc
push
loop
in
inc
push
sbb
out
inc
push
sbb
ljmp
in
out
sbb
out
rcl
fs
inc
push
rcl
aam
inc
push
sbb
xlat
inc
push
sbb
fiaddl
sbb
ficomps
fs
inc
ffreep
shll
ret
nop
inc
push
sbb
mov
push
sbb
lret
fs
lret
int3
int
sbb
iret
mov
fs
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
sbb
stos
push
sbb
lods
lods
scas
sbb
scas
nop
xchg
nop
dec
push
xchg
pop
ja
loopne
xchg
cmp
ja
and
mov
push
inc
iret
pop
daa
adcl
mov
int3
out
jmp
ret
inc
js
gs
imul
das
rolb
ds
fdivs
fidivrl
jns
rorb
dec
gs
jo
nop
push
xor
push
lock
js
mov
jne
dec
dec
gs
outsl
jb
loopne
dec
adc
mov
stos
outsl
pop
or
test
fisttpl
mov
pushf
scas
pushf
add
pop
inc
add
movl
pop
push
ds
push
jns
imul
xlat
push
jp
xchg
fsubrs
or
orl
scas
xchg
orl
or
imul
frstor
jnp
aas
scas
push
jg
jg
popa
outsb
addr16
scas
jl
or
pop
or
dec
jbe
sbbb
dec
insb
outsl
ja
push
xor
aas
dec
lock
pop
dec
mov
nop
movzwl
ds
insb
jnp
pop
pop
add
xor
dec
jo
push
push
push
push
insb
jle
shrb
xlat
shll
xlat
sbb
push
pop
les
push
outsb
fs
jo
mov
setp
cmp
mov
int3
lds
das
aam
ds
ja
jl
push
or
popa
jae
dec
and
sub
mov
xchg
push
or
scas
inc
je
jbe
mov
xchg
add
add
inc
sub
push
adc
sbb
insb
popa
sbb
mov
in
push
jb
inc
sti
enter
nop
cmp
scas
add
push
inc
mov
arpl
nop
cwtl
mov
xchg
je
lds
xlat
lock
aas
fsubs
pop
in
push
leave
mov
mov
push
mov
sub
push
addb
mov
lods
push
bound
jb
out
or
aas
ja
xchg
fldt
mov
cmpsb
loopne
test
aas
or
push
stos
push
mov
inc
mov
adc
mov
adc
aaa
xor
pop
dec
invd
mov
push
inc
insb
jae
clc
inc
mov
out
push
add
andb
cmp
ds
xchg
insb
aad
adc
andb
fs
push
add
test
loopne
leave
push
daa
xor
in
in
nop
out
imul
push
cmp
js
movsl
scas
push
dec
shll
popf
aam
decl
xchg
adc
sbb
push
loopne
sbb
or
inc
mov
inc
repnz
xor
in
adc
xlat
pop
and
dec
imull
mov
and
out
fstps
ds
lods
outsb
arpl
cmp
sbb
sub
fldenv
scas
cmp
adc
repz
mov
add
sub
mov
fdivrl
pop
scas
cs
idivl
push
aas
jo
or
add
xor
mov
cmc
popa
xor
xlat
dec
mov
add
add
repnz
add
adc
pop
or
pop
pop
dec
out
and
adc
das
xchg
fstpl
and
insb
out
cli
and
lods
les
stos
add
add
mov
pop
in
fisttpll
ljmp
ds
inc
mov
sbb
adc
pop
add
cwtl
or
or
pop
mov
cmp
jbe
jge
das
sti
cmp
repz
je
movzbl
pop
push
incl
lret
cmp
mov
test
add
or
cmpsl
jne
pop
push
out
mov
aas
push
mov
lods
shll
std
out
fwait
testb
and
sti
je
mov
ret
add
mov
mov
add
xchg
rclb
or
jne
xchg
inc
mov
loope
adc
lahf
push
aas
mov
in
or
cmpsl
sbb
sbb
data16
gs
arpl
push
or
shl
shr
insl
sbb
out
jo
jno
test
mov
xor
push
jecxz
jno
ror
in
inc
sbb
adc
push
out
ljmp
add
mov
repz
cmpb
out
test
fbstp
adc
sbb
cmp
xor
lret
inc
in
mov
pop
inc
or
add
mov
or
cs
sub
je
jae
cmp
jl
int
inc
mov
mov
jnp
lret
ljmp
or
adc
int
jae
inc
dec
jne
bound
or
jne
sarb
fdivl
test
cmp
sub
ret
mov
shl
icebp
dec
xchg
out
cmovg
sysret
mov
ljmp
icebp
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
dec
icebp
ja
mov
sub
xor
push
outsl
cwtl
push
mov
pop
mov
orl
xchg
ret
mov
mov
pushl
pushl
mov
divl
ljmp
sub
cmp
jge
mov
or
fldenv
or
sbb
out
adc
sub
mov
out
enter
mov
fs
std
arpl
push
and
fistps
ret
jecxz
out
pop
add
add
sub
add
rorl
fdivr
mov
cmpsl
roll
cmp
out
push
gs
jg
fcom
fstsw
sahf
jae
mov
incl
ret
ffree
pop
aad
add
fst
push
lret
add
mov
xchg
sbb
scas
or
shlb
mov
cmp
add
push
mov
mov
test
cmp
cmpsb
push
xrelease
add
sbb
jo
scas
mov
add
icebp
fldl
jbe
scas
fidivl
imul
cmp
pop
rcrb
aas
inc
adc
jp
mull
subb
pop
mov
push
mov
xor
mov
sbb
push
push
inc
sahf
nop
cld
aas
cltd
sub
cmp
xchg
or
pop
inc
push
or
rorb
out
mov
mov
inc
call
and
sub
or
mov
pop
shrb
fnsave
push
cmp
jmp
push
jecxz
ret
add
icebp
add
mov
fisubrl
lea
cmpsl
imul
insl
lock
setne
jmp
pop
inc
sub
call
pop
jp
pop
addr16
inc
nop
pop
in
push
nop
add
ret
or
sbb
lahf
or
out
push
fdivs
pop
pop
sub
js
mov
bound
xlat
adc
out
andl
jmp
and
add
xchg
nop
cmp
mov
xchg
cmp
add
or
mov
push
jl
jg
cmp
ja
mov
loop
pop
inc
ja
add
pop
dec
call
pop
jne
jle
test
mov
add
pop
push
lgs
cmpsb
cmp
mov
add
ror
test
orl
jnp
pop
mov
lret
or
int
adc
bound
insb
mov
fdivl
sbb
adc
das
inc
or
arpl
sahf
push
mov
lea
cs
cld
jbe
push
es
or
in
push
repz
loopne
pop
cltd
sbb
add
lock
add
repnz
ljmp
inc
and
or
or
adc
pop
notrack
iret
lahf
imulb
jg
xlat
scas
jne
dec
dec
dec
fsubrs
jg
int
adcl
mov
stc
jl
das
mov
sahf
mov
mov
in
jno
dec
pop
cmp
push
push
lock
add
push
adc
mov
xor
inc
scas
lret
jo
xchg
insb
mov
lea
in
jl
inc
aas
cld
imull
leave
push
mov
adc
hlt
call
or
cmpsb
in
fidivl
lock
ret
cli
mov
js
inc
cmp
mov
mov
sbb
lea
adc
out
les
and
mov
and
jg
ror
mov
test
inc
shl
ja
pop
pop
ret
je
add
and
lret
dec
xchg
add
lea
inc
sub
pop
lret
fldenv
add
loope
pusha
ja
mov
mov
sbb
and
xor
bound
cmp
sub
pop
or
pop
xor
and
shl
cmpsb
mov
mov
xchg
je
push
mov
je
dec
mov
pop
cmp
cli
ljmp
push
or
adc
or
push
push
push
xlat
das
rcr
xchg
xor
pusha
pop
pop
mov
dec
jmp
test
or
xor
aas
xor
mov
cmp
jne
pxor
and
popf
inc
inc
outsb
incb
pop
dec
je
mov
mov
ret
mov
rcrl
sub
jbe
sbb
lods
in
clc
add
push
sbb
shll
push
adc
add
sti
sbb
js
rolb
subl
add
adc
pop
inc
or
cmpsl
sbb
arpl
push
inc
idivl
test
mov
call
mov
adc
push
fcom
clc
cmpl
cld
sti
pop
jbe
mov
xor
push
stc
test
movb
les
and
and
and
loopne
or
fwait
sub
movsb
jg
mov
cmp
je
mov
rcrl
test
dec
pop
iret
add
xchg
push
nop
adc
lcall
into
pop
outsb
add
push
nop
xchg
rclb
pop
jg
sbb
or
and
ljmp
das
jns
pop
movsb
mov
jmp
mov
idivb
ja,pn
sub
lods
lret
cmp
jne
das
hlt
and
out
lods
jmp
adc
mov
inc
mov
sub
mov
add
jmp
pop
pop
addr16
fildl
sub
jae
pop
mov
movsb
xchg
pop
mov
rep
sbb
cmpl
push
cli
mov
pop
mov
cmp
push
loop
pop
jecxz
jb
cmp
ja
imul
add
push
lock
add
and
in
dec
repnz
add
decl
xlat
push
push
aas
incl
insb
std
add
je
xchg
ret
and
mov
std
iret
repnz
insb
cmp
pop
jne
lea
mov
xlat
mov
lcall
xchg
or
push
xlat
push
xlat
outsb
sarl
xchg
cs
sbb
push
lcall
push
test
cmpsl
sti
sar
pop
fsubrs
shl
cld
cmpsb
xor
aas
lods
fsubrl
sub
je
pop
loop
jb
sbb
sub
iret
or
jmp
imul
out
int3
cmpsl
pop
outsl
adc
hlt
sbbl
sbb
adc
orb
push
jne
inc
push
sbb
jns
xor
mov
lock
xor
inc
inc
jo
ret
xchg
cmc
lods
and
jmp
mov
adc
add
jne
scas
es
int3
aas
and
call
pop
or
jge
in
mov
ja
jecxz
aam
jno
insl
cmp
ja
repz
xor
scas
jmp
rclb
es
dec
mov
mov
pop
ds
leave
or
xor
adc
jno
das
movsl
testl
mov
add
bnd
mov
inc
je
mov
dec
je
dec
jge
or
pusha
outsl
mov
mov
ret
mov
mov
jne
xchg
adc
cld
and
fdivrl
pop
out
mov
call
loopne
mov
inc
iret
jo
aad
dec
test
sar
ret
xor
sahf
dec
les
pop
int
pop
sbb
test
out
mov
fsubrl
loope
inc
mov
xchg
xchg
push
push
es
dec
dec
mov
call
incb
xor
sub
fisubl
pop
in
sub
xlat
xchg
or
mov
adc
jle
test
push
call
xchg
ljmp
adc
cmp
out
clc
mov
test
out
jns
dec
dec
icebp
sar
loopne
sti
xor
clc
jl
jmp
add
xor
popf
jbe
orb
jne
pop
shr
cmp
xchg
fsubs
iret
clc
sub
mov
xor
stos
or
lcall
mov
push
mov
neg
jmp
or
or
mov
jg
sbbb
mov
movsl
lods
mov
inc
jmp
leave
jg
dec
mov
stos
cmp
jne
pop
pop
js
ret
aam
xor
loopne
mov
test
hlt
mov
repnz
adc
xor
mov
cmp
rorb
xchg
jge
fwait
call
add
daa
shlb
dec
dec
adc
jb
fmull
jbe
mov
mov
sub
insb
je
sbb
cs
lea
dec
add
std
imul
aad
xlat
sbb
je
add
or
mov
mov
or
pop
aaa
sbb
or
mov
std
jmp
repnz
xor
xchg
pop
mov
dec
dec
inc
dec
inc
add
or
dec
xlat
jge
clc
mov
pop
popa
jno
ret
std
mov
aam
loope
jne
push
or
sbb
sbb
dec
stos
fisttps
scas
test
stos
neg
sbb
stos
idiv
xlat
jmp
addl
pop
stos
loop
push
adc
neg
stos
push
pop
inc
clc
dec
lds
std
mov
xchg
push
mov
fimuls
sub
jbe
sub
xlat
add
jle
add
mov
mov
movsb
jo
mov
insl
jge
cli
adc
mov
pusha
ds
notb
scas
je
mov
dec
cmc
div
mov
inc
test
jne
shl
pop
sbb
inc
in
stos
xor
sahf
push
bound
sti
add
je
inc
fs
pop
dec
jne
ret
xchg
repz
xchg
and
sbb
mov
push
mov
pushf
fwait
push
cwtl
iret
scas
loope
mov
je
inc
cmp
vmovupd
xlat
sbb
sbb
add
or
mov
inc
loop
push
jo
int
mov
test
add
arpl
and
inc
add
and
and
adc
and
sti
mov
inc
sub
sub
scas
mov
and
sub
fs
sub
sub
cmp
sub
loopne
fadd
mov
add
pusha
mov
dec
cmp
adc
and
mov
and
adc
testw
cmp
cmpl
cmp
xor
inc
inc
push
in
fldt
jne
cmp
or
rclb
test
push
adc
xchg
loope
push
pop
std
or
and
cld
rcr
scas
push
std
fstps
mov
testb
je
fidivl
jne
aas
mov
add
inc
sub
xchg
shr
and
add
jle
push
push
cmp
add
jns
dec
jg
pop
fwait
cli
adc
jge
pushf
or
fnstcw
add
or
decb
and
ja
jmp
retw
push
mov
enter
cmp
mov
xor
push
or
shr
lcall
add
xchg
out
jb
dec
ret
jbe
adc
loopne
jg
and
aas
or
je
push
test
bswap
lahf
fiaddl
jge
adc
or
decl
ds
adc
push
inc
sub
mov
loopne
jae
dec
add
sbb
inc
loopne
push
in
insl
or
fcomip
mov
aam
or
mov
sti
cltd
loope
sbb
mov
sbb
sbb
sub
popf
and
jne
sbb
xlat
pop
dec
sub
cmp
pop
iret
into
and
inc
ljmp
enter
add
bswap
cmpb
divl
pop
jmp
sbb
or
mov
sbb
add
dec
scas
inc
pop
loope
mov
rol
add
mov
fyl2x
fwait
pop
mov
fwait
cmp
fldz
cmpsb
mov
lods
mov
or
mov
push
cmp
or
std
cmp
and
jne
inc
push
sub
pop
add
jg
adc
pop
cwtl
jne
mov
sahf
add
and
loopne
ror
cli
adc
aas
jmp
fstpt
dec
test
pop
add
test
scas
pop
pop
push
insl
and
push
int3
add
and
jg
sarb
add
jae
fimull
cmpsb
arpl
add
pushf
adc
push
negl
daa
push
sub
inc
imul
pop
cmp
int3
or
loopne
add
xchg
or
push
push
rol
mov
lcall
in
pop
filds
add
popa
in
in
pop
pop
popf
or
mov
xor
add
or
jl
and
inc
jge
sub
iret
aas
cwtl
adc
mov
inc
inc
jp
rcl
mov
fstpl
fwait
push
and
cmpsl
xchg
inc
fidivl
cmp
or
fldl
inc
jl
jno
push
movsb
imul
adc
mov
adc
adc
add
lods
pop
pop
clc
pop
or
sti
or
sbb
or
cmp
inc
stos
mov
gs
inc
in
pop
les
jge
sub
add
shlb
push
ret
rorb
mov
fildl
push
or
sbb
inc
aaa
pop
cmp
adc
add
fistps
adc
push
iret
lldt
js
insb
clc
mov
jo
cli
mov
cmp
jg
xchg
and
ja
jne
add
loope
or
mov
jo
lret
mov
pop
pop
fstps
cmp
jo
xlat
and
frstor
mov
push
lock
in
enter
add
and
pop
sbb
mov
test
jne
sbb
enter
cmc
add
dec
adc
das
jg
jno
jb
decb
add
jg
and
pop
scas
incb
jb
mov
xchg
ds
jb
or
ja
sti
jno
dec
testb
enter
ja
sbb
mov
adc
sub
pop
dec
incb
jne
xor
cmc
daa
clc
into
dec
mov
dec
cltd
idiv
imul
lea
inc
add
sub
aas
lret
icebp
mov
add
pop
ret
or
and
push
xor
out
leave
push
xchg
adc
ret
and
and
pop
outsb
in
lds
pop
lea
in
pop
rcrb
jg
xor
mov
or
hlt
loopne
push
das
or
mov
nop
stc
rolb
movsb
mov
sbb
mov
add
jl
addl
sbb
and
test
lahf
lods
jle
mov
data16
jnp
fistpll
sub
fcoms
pop
sub
sub
repnz
pop
fsubs
lods
shl
cmp
or
mov
loop
rorb
mov
test
dec
mov
jmp
insb
out
popf
cmp
jb
das
in
insb
jnp
sub
faddl
loope
sbb
dec
xor
push
add
sub
lock
push
or
movsb
sbb
push
cmpsb
pop
xchg
das
cmp
clc
cmc
cld
mov
mov
orb
push
into
cmc
and
data16
outsl
aam
ret
mov
add
test
in
sbb
jo
dec
lock
and
lea
daa
sub
cwtl
xor
inc
or
xchg
adc
sbb
aas
push
jnp
push
aam
pop
pop
fnstsw
int
pop
add
sub
daa
add
xchg
jbe
rorb
fwait
sbb
popf
popl
dec
imul
hlt
pop
jmp
mov
mov
inc
cmp
je
add
inc
and
das
loopne
jo
pop
cmpb
jne
outsb
in
mov
or
or
lea
or
lahf
jb
repnz
movb
jae
jecxz
in
or
xor
push
jge
lcall
sbb
nop
and
push
fidivs
ja
lea
sahf
in
cmpsl
xchg
or
ds
cmp
inc
jae
mov
out
mov
mov
push
mov
rolb
fcompl
dec
clc
movsl
sbb
xchg
push
fdivrp
and
mov
test
in
lds
divb
or
mov
clc
inc
mov
in
pusha
cmpl
pop
add
sub
fistps
inc
push
add
dec
add
lock
gs
xchg
dec
push
mov
add
arpl
ret
aaa
xor
rcll
xor
fdivs
imul
xchg
jo
inc
addr16
xlat
in
leave
adc
sbb
push
movsl
in
clc
or
bnd
bswap
xchg
jmp
repnz
in
in
je
push
inc
push
ljmp
xor
xchg
xchg
enter
sbb
insb
sbb
or
fsts
out
jns
add
add
lret
sbb
out
aam
vmovntps
aam
fsubr
jne
sbb
pop
lods
xchg
sub
pop
xor
mov
fimuls
jecxz
pop
incl
jbe
jns
popa
pop
jecxz
rcrb
and
aad
pop
dec
sbb
mov
daa
jmp
stos
fnstenv
push
and
nop
push
pop
and
mov
xchg
jge
mov
ret
sub
jle
and
adc
lahf
dec
jne
jge
dec
or
pop
push
scas
dec
mov
mov
jecxz
mov
ja
cld
movl
inc
daa
sub
or
add
call
add
add
imul
xchg
or
insb
lcall
test
test
pop
cmc
es
lahf
stos
lret
data16
and
push
movl
pop
sbb
rolb
mov
loop
mov
mov
inc
jl
sub
popf
dec
push
lea
dec
pop
addr16
and
cmp
dec
aam
and
dec
inc
loopne
hlt
dec
sub
jmp
sbb
test
adc
test
xchg
xchg
fidivrl
fidivl
fmul
mov
cmp
dec
add
sub
push
fstps
and
mov
mov
nop
sub
nop
mov
daa
xchg
sub
push
cmp
and
sub
ficompl
or
adc
or
ljmp
jns
test
je
or
push
jmp
or
popa
je
or
je
jmp
xchg
mov
popa
loopne
xchg
fs
fwait
jg
das
in
test
in
sub
push
mov
je
jne
clc
add
pop
in
xor
jo
fnstcw
cmp
dec
push
push
ja
pop
mov
sarl
cld
pop
add
loope
mov
jmp
addl
or
or
jle
lds
adc
adc
fsubrs
and
inc
mov
out
loop
mov
popa
push
movsb
movsb
or
add
mov
loop
andl
sub
mov
ljmp
shlb
add
jb
push
xchg
xchg
cmp
mov
lea
mov
xor
adc
pushf
jns
cmpsw
xchg
mov
xchg
add
inc
cs
xor
xor
dec
xchg
mov
xor
dec
push
and
add
rcrb
or
or
xchg
add
or
in
rorb
rolb
jb
cmp
push
pop
jbe
out
dec
cwtl
je
inc
pop
inc
stos
out
push
daa
jmp
leave
jmp
or
sbb
pop
addl
jg
dec
js
ja
repnz
enter
push
faddl
push
mov
adc
cmp
fcmovb
xor
inc
pop
xchg
xchg
fstl
jb
sahf
call
xchg
inc
inc
dec
das
push
dec
pop
or
mov
lar
test
mov
inc
out
testb
incb
ret
ja
or
mov
sbb
mov
and
cmp
outsb
insb
mov
and
and
pop
pop
inc
jl
xor
adc
add
fwait
push
xchg
in
mov
push
hlt
imul
ja
dec
pop
sbb
cwtl
je
aaa
sarb
mov
xor
xchg
ret
jns
pop
pop
repnz
iret
ljmp
adc
sbbb
pop
lret
notl
push
pop
jp
jle
pushf
ljmp
cmpsl
mov
ficomps
and
sbb
dec
testl
sbb
test
pop
pop
rcl
nop
inc
mov
js
or
push
mov
mov
adc
add
mov
pop
dec
repz
stos
mov
push
les
adc
fcompl
mov
cmp
incl
xor
out
mov
mov
jmp
sub
je
decb
je
sub
sub
je
adc
add
sbb
push
push
and
push
inc
mov
int3
inc
sti
clc
jle
fadd
out
out
addb
lea
sahf
or
jecxz
mov
xor
jl
pop
pop
or
test
pop
push
mov
insb
xlat
inc
pop
sub
mov
test
lods
sub
mov
scas
js
push
jo
test
mov
insb
mov
jne
data16
cmpl
jmp
jne
cmp
jg
pushf
dec
fs
incl
sub
add
arpl
cmp
adc
add
js
add
adc
mov
cld
jmp
in
cld
gs
fbstp
psubusb
pop
shl
push
push
and
or
inc
out
in
xor
ret
cwtl
test
cld
adc
negb
push
nop
sarl
xor
jmp
mov
jle
or
cld
push
xchg
and
push
in
mov
mov
add
jnp
adc
dec
mov
or
out
pop
jp
hlt
lods
popf
cwtl
test
outsb
jns
push
clc
and
mov
sahf
pop
ljmp
into
add
lock
lahf
add
xchg
sub
jb
and
jne
mov
lods
lock
xor
push
jmp
repnz
aaa
es
sbb
jae
dec
hlt
jmp
cmpl
js
pop
push
decl
pop
inc
sbb
jg
jo
jge
add
filds
mov
jnp
sub
push
fstps
mov
mov
dec
inc
cmp
cmp
enter
fs
jne
sub
testb
or
sbb
imul
adc
je
cmp
movsb
daa
inc
push
aaa
js
enter
sarb
push
add
adc
out
push
jne
imul
and
sarl
test
add
fdivr
mov
push
mov
das
add
scas
fidivs
fsubs
fsubrs
xor
add
sahf
adc
push
out
or
dec
sub
testl
xchg
cwtl
icebp
and
add
stc
jno
scas
or
add
pusha
adc
scas
test
add
or
iret
ljmp
jg
cmp
dec
fstpl
mov
aas
pop
imul
jmp
push
mov
insb
add
clc
add
push
mov
jo
jg
into
and
inc
add
xor
testl
xor
adc
or
pop
in
test
add
inc
dec
dec
enter
mov
push
test
jo
push
xor
js
in
mov
je
ja
jne
xchg
push
pop
jno
movsb
add
sbb
and
sub
xor
push
add
pop
sub
loope
dec
nop
outsb
mov
xchg
dec
mov
rclb
je
out
es
mov
les
outsl
xchg
cmp
cmp
mov
mov
inc
lahf
call
cmp
adc
sub
adc
lock
sbb
nop
jbe
cmp
ret
sbb
movsl
mov
fcomp
fisubrs
sbb
or
pop
fwait
jmp
dec
cmp
sbb
ljmp
les
add
push
dec
push
pop
mov
aaa
add
xor
add
push
mov
sub
jb
insl
and
cld
or
xchg
jecxz
mov
shlb
or
or
mov
adc
das
loop
ja
imul
jno
shrb
push
fstpl
add
loope
xor
pop
loop
jbe
cmpsl
call
fstl
adc
lods
add
or
sub
ja
adc
pop
dec
push
add
jae
lcall
mov
adc
push
jb
mov
fnstsw
cmp
dec
lea
dec
push
cmpsl
and
fs
or
adc
add
cmp
movsl
pop
js
cwtl
inc
inc
mov
sti
shlb
rorl
or
jns
and
xchg
push
inc
or
xchg
xchg
in
shlb
in
dec
call
fsubs
jne
add
sbbb
dec
pusha
inc
lea
cmp
xor
stos
push
jge
je
inc
testb
xchg
cmp
insb
jne
lea
in
add
aaa
sarb
jns
outsl
iret
les
xchg
sub
inc
cwtl
ret
inc
pop
sub
jle
sbb
sbb
movsl
in
cmp
int3
outsb
int
out
in
iret
fmuls
push
cmp
or
cmp
xor
ja
orl
sbb
cmp
add
mov
icebp
sbb
and
xor
or
hlt
push
push
and
in
push
xor
addr16
inc
das
in
mov
xor
repz
pop
sbb
pusha
mov
clc
enter
pop
rorb
clc
test
pop
adc
jb
sub
icebp
scas
add
xor
mov
inc
je
sub
je
scas
ret
mov
add
xor
xchg
das
cwtl
jno
test
sbb
cmp
cmc
mov
push
enter
lock
enter
add
jle
mov
jbe
add
mov
pusha
xor
jmp
mov
pop
rorb
in
add
jmp
mov
leave
and
mov
add
sbb
jne,pn
xor
jmp
in
add
leave
sub
mov
pop
push
cmp
mov
sub
stos
dec
mov
add
adc
and
push
sub
and
cmpl
pop
ret
ss
push
sti
sub
std
push
int3
cld
das
sbb
cld
cmpl
sbb
ljmp
rorb
pop
movsb
in
add
and
xchg
xor
out
or
or
mov
outsl
pop
loope
inc
dec
mov
xor
cmp
mov
and
sbb
mov
pcmpgtd
adc
inc
sub
loop
stos
das
and
jno
cmp
add
add
je,pn
mov
in
xorl
or
inc
add
and
orl
pusha
and
xchg
add
test
shrb
sbb
test
add
and
jns
xor
mov
hlt
pop
mov
sahf
mov
aas
mov
dec
clc
pop
enter
sarl
push
lea
sub
outsl
dec
adc
test
std
add
pushf
and
push
sub
pop
dec
mov
mov
adc
pop
mov
sbb
je
inc
mov
push
or
mov
mov
dec
mov
adc
hlt
adc
cmp
pop
adc
mov
pop
or
mov
pop
push
adc
inc
jo
sub
inc
pop
out
sub
or
lods
adc
push
std
ret
lea
stc
std
test
test
mov
sub
nop
pusha
sub
pop
and
and
dec
or
test
push
les
inc
jne
mov
adc
sub
inc
push
or
loopne
arpl
push
dec
test
mov
out
adc
mov
dec
fwait
insl
mov
inc
dec
sbb
xor
xchg
pop
orb
dec
cmc
xor
pusha
sbb
push
scas
push
or
inc
pop
add
or
xchg
xor
loope
pop
in
sbb
cmp
jg
cmp
jle
jne
sbb
jecxz
cli
repz
js
js
sbb
cmp
mov
sarb
jo
jo
pop
scas
loopne
or
enter
push
xchg
mov
loopne
dec
je
push
adc
ljmp
cmp
adc
setl
and
adc
repnz
or
or
pop
movsl
nop
rcll
mov
ret
loopne
out
das
loopne
cld
xchg
pop
adc
jno
in
roll
pop
out
push
or
push
cld
xchg
mov
ss
dec
or
jne
or
scas
in
cmp
dec
es
loopne
dec
ret
dec
loopne
sbb
fdivl
sub
mov
call
add
insl
add
and
adc
dec
roll
cmp
cmp
pusha
orb
xchg
xor
xor
enter
push
push
inc
nop
aas
cmp
je
jmp
xor
inc
fwait
xchg
lahf
xchg
xor
and
in
and
add
gs
xchg
or
or
push
lds
mov
cmp
pop
shlb
adc
xor
addr16
jae
dec
das
push
nop
cmpl
pop
cmp
xor
inc
adc
cmp
mov
sbb
into
test
movsl
fstl
or
sbb
lcall
xor
dec
sbb
adc
mov
movsb
popf
cltd
fs
out
popf
pusha
cmp
add
pop
mov
add
push
and
push
loopne
cmpl
pop
enter
sbb
int3
ror
jmp
in
mov
in
mov
jle
pop
xor
xchg
mov
and
dec
es
sub
mov
dec
push
aaa
mov
adc
sub
and
pop
call
and
in
inc
lds
ljmp
std
sub
out
dec
jae
mov
roll
aam
adc
xor
pop
xlat
hlt
sub
in
add
mov
test
cwtl
fs
xchg
lock
jns
and
mov
nop
lds
lods
mov
add
ss
addb
mov
pusha
enter
sub
add
movsl
sbb
mov
sarl
xchg
lods
cmp
xor
jmp
cmp
aaa
add
out
mov
mov
mov
sub
or
fisubrs
sbb
enter
hlt
enter
lods
pop
inc
cld
inc
pushf
rolb
adc
inc
fildl
movsl
aaa
nop
xor
inc
xorw
ret
push
adc
es
insb
lds
push
cmc
cmp
out
sbb
pop
hlt
jae
mov
add
add
enter
mov
or
sbb
add
mov
insb
mov
adc
mov
mov
cmp
int
fidivrs
add
out
mov
pcmpeqw
cmp
inc
fs
jnp
ds
mov
rolb
jle
mov
xchg
fld
inc
subb
jno
cmpsb
dec
jne
xor
test
arpl
push
xchg
mov
xor
sub
push
aaa
xor
dec
xor
cmp
fadd
inc
pusha
sbb
sub
mov
stc
jns
enter
pop
push
sub
loop
shll
pusha
inc
pop
xor
dec
or
decb
testl
mov
and
lahf
or
and
lock
dec
or
inc
pop
idivb
aas
add
add
adc
mov
outsb
add
sub
sbb
cmc
push
imul
xor
jbe
fs
cmp
daa
pop
shll
mov
add
jle
aaa
adc
movsl
inc
jge
inc
sbb
test
xchg
in
inc
or
inc
lea
mov
and
add
sti
jl
fisttps
jno
dec
xchg
rcr
dec
inc
adc
icebp
dec
jge
adcl
xchg
pop
mov
repnz
adc
inc
test
adc
cmp
jge
jl
jne
jo
dec
in
sbb
addr16
imul
aam
sbb
ret
aas
cmpsb
bound
mov
arpl
jle
in
push
inc
jmp
mov
cmp
adc
adc
or
or
add
movl
inc
bswap
es
fsubrs
int
jge
pop
mov
jns
push
push
sub
sub
fisttps
arpl
mov
inc
push
xchg
pop
ss
ja
mov
and
in
mov
mov
cmp
sbb
and
in
xchg
inc
jae
ret
fcoml
fmull
outsl
jl
xor
lock
inc
adc
pusha
and
pop
pop
inc
xor
negl
ret
adc
xchg
adc
and
sbb
mov
mov
and
imul
fs
jg
adc
or
mov
fdivp
retw
mov
je
int
fiadds
push
xchg
clc
xor
into
dec
xor
mov
mov
mov
and
lds
sarb
bnd
inc
inc
xor
pop
jnp
sub
add
fadds
scas
mov
loopne
dec
sbb
insl
movsb
in
inc
push
sbb
call
imul
jno
mov
sub
or
or
test
je
imul
pop
jne
sbb
hlt
ss
cmp
subb
pop
pushf
rolb
dec
and
test
push
mov
pop
dec
fcoms
lcall
and
and
jge
in
push
cmp
addr16
sbb
fbld
mov
aaa
pop
sub
jb
inc
mov
mov
incb
test
lret
jne
dec
mov
decb
pop
jne
mov
mov
pop
ja
or
mov
pop
and
out
repz
add
dec
pop
mulb
add
aam
lods
mov
leave
data16
std
xor
adc
pop
in
shr
mov
mov
lahf
or
test
jne
outsl
xchg
mov
add
ja
cmpsb
popa
sub
pop
mov
or
mov
and
xchg
ret
mov
jmp
or
popa
mov
aas
clc
push
test
add
cmp
test
mov
adc
push
inc
out
add
mov
ja
cmpw
xchg
rorl
add
ss
in
decb
jmp
jmp
inc
xchg
shlb
mov
and
push
fwait
add
sbb
out
xor
dec
jne
push
adcb
mov
lcall
pop
add
pop
movsl
push
xor
mov
sbb
or
or
mov
fadds
lock
shl
sbb
push
inc
pop
add
xor
and
xor
call
sub
clc
mov
add
cs
cld
push
cmp
das
mov
orb
rolb
in
repz
mov
and
lss
fcomp
mov
sti
mov
mov
jg
mov
sarb
inc
in
jne
iret
push
sub
popa
inc
shrl
and
xor
enter
pusha
sub
cmpl
and
pop
jb
les
ret
rorb
sbb
adc
hlt
mov
and
mov
loope
mov
push
pmuludq
add
cmp
nop
mov
xor
sbb
cmc
call
xor
xor
in
xchg
add
mov
das
fs
push
lods
add
scas
insl
add
fs
scas
pop
in
imul
cmpsb
mov
mov
inc
push
mov
and
pop
sbb
lahf
int3
out
lcall
jae
or
in
pop
repnz
add
shl
inc
or
inc
mov
jecxz
add
jmp
mov
das
push
pop
sub
adc
daa
dec
or
ret
aas
mov
adc
jle
jp
push
sub
sub
mov
js
jge
ss
mov
sbb
out
xor
dec
xorb
and
test
out
rolb
rorl
pop
sbb
add
mov
in
add
xor
rcrl
pop
andl
inc
add
in
add
sbb
sbb
std
out
jge
les
ret
in
ds
add
push
mov
addl
sub
gs
pop
mov
cmp
dec
repz
xchg
in
mov
sbb
icebp
push
mov
ja
sbb
mov
inc
clc
adc
inc
or
xor
pop
jbe
pop
mull
loope
mov
cmp
dec
add
ret
in
push
imul
xchg
fidivl
push
push
and
pop
inc
cwtl
popf
lock
aas
sbb
mov
imul
ds
icebp
gs
jo
inc
js
fldenv
lock
inc
ljmp
dec
ret
xchg
push
xor
xchg
mov
lea
mov
les
popf
inc
lahf
pop
inc
sbb
inc
push
imul
adc
push
adc
mov
xchg
mov
daa
adc
pop
mov
sub
sbb
insb
xor
inc
jmp
test
adc
lahf
out
xchg
lods
and
dec
adc
pop
adc
xor
les
jmp
loop
adc
push
inc
pushf
xor
nop
divl
mov
mov
mov
movl
js
pop
cmc
mov
fcom
mov
and
xor
mov
movsl
pushf
sbb
push
adc
dec
cmp
xchg
mov
sub
jo
neg
mov
sbb
push
sub
and
cmp
adc
xor
js
or
mov
movl
mov
mov
aad
push
cmpsb
pop
adc
sbb
fistpl
sub
xchg
push
cwtl
pop
out
fdivrs
in
insb
in
das
xor
add
adc
nop
mov
sbb
aas
inc
push
pop
mov
popa
pop
xor
lods
adc
sbb
mov
or
adc
adc
ret
imul
jge
adc
lea
movl
jo
or
nop
seta
push
in
ja
les
or
inc
jmp
adc
lock
sbb
test
xor
in
dec
pop
aaa
xor
mov
mov
sub
xor
mov
in
xchg
ret
incl
frstor
nop
out
lahf
adc
mov
sbb
jnp
xchg
pop
jnp
and
inc
jno
stc
ret
cmpsb
pop
jo
mov
or
rorl
movb
xor
cmp
inc
incl
mov
and
inc
and
inc
iret
cmp
roll
inc
jecxz
xchg
inc
sub
xchg
ficoms
fdivrs
daa
ret
fcoms
mov
jle
pop
jg
dec
or
mov
or
dec
in
inc
adcb
enter
mov
jno
sbb
cmp
sub
pop
xor
adc
in
rorb
andb
int
add
sub
out
adc
mov
outsl
sub
fidivrl
sti
dec
nop
push
or
push
adc
adc
cmp
inc
sub
leave
enter
xlat
mov
leave
insl
outsb
push
sbb
jl
insl
xchg
or
stos
push
xchg
jp
ja
push
jge
movsb
dec
ficoms
jge
and
sbb
push
pop
cmp
push
out
mov
leave
dec
jecxz
jmp
repz
fcmovnbe
ret
or
cmp
lds
test
adc
aam
lahf
pushf
add
mov
test
hlt
fnstenvs
cs
ret
fcoml
aam
nop
int3
fdivrs
jbe
mov
lods
dec
imul
insb
movsb
jle
pushf
push
push
xor
mov
test
push
xor
repz
jl
les
mov
das
shll
pop
cwtl
pop
shrl
push
mov
dec
je
jle
mov
dec
imul
xor
in
sub
or
dec
andb
sbb
fwait
xchg
in
cltd
add
push
sbb
adc
ret
insb
daa
adc
mov
movsb
or
xor
jns
sbb
je
cld
mov
xorl
hlt
cs
lock
sbb
in
add
fidivl
in
cmpsl
loopne
or
lcall
movsb
or
out
adc
ss
sbb
inc
fisubl
insl
nop
pop
les
cld
rclb
mov
lods
inc
mov
cs
pushf
mov
xlat
mov
dec
int
int
lods
inc
test
in
and
ret
into
leave
ss
cs
cwtl
pop
xchg
push
imul
push
imul
pushf
out
test
pusha
shrb
jb
ja
fists
test
mov
or
jo
lods
clc
mov
mov
dec
faddl
mov
mov
aas
jo
and
pop
nop
and
dec
cmp
rclb
sub
dec
cmp
mov
insb
push
xlat
cmpsb
jge
sub
and
or
or
or
cltd
fiaddl
pushf
fs
dec
es
nop
test
daa
xchg
mov
inc
pusha
pop
pop
and
nop
inc
subl
jae
stos
fildl
dec
mov
cmp
dec
gs
punpckldq
leave
into
lea
mov
enter
push
mov
in
mov
or
and
lods
decb
aam
ret
lea
aas
cmpl
xor
pop
mov
pop
data16
and
outsb
fs
pop
iret
adc
dec
enter
imul
cltd
das
enter
enter
push
adc
daa
mov
movsb
divl
dec
mov
cmp
pop
scas
dec
out
mov
test
mov
mov
movsb
add
pop
rclb
xlat
and
inc
push
push
loope
loopne
xchg
and
inc
cs
sbbb
js
xor
and
lea
loop
add
leave
jb
mov
cld
xchg
insb
jle
lea
jp
cmpb
cmc
sbb
xchg
xchg
imul
call
xchg
pop
ret
faddp
cmp
or
sub
or
sub
and
sbb
fninit
pop
jecxz
fcomps
mov
daa
inc
popf
pusha
lret
loope
sbb
adc
in
das
push
or
mov
cmp
icebp
inc
lea
jp
out
scas
sub
nop
cmpsl
or
insb
nop
int3
enter
inc
push
sbb
pop
mov
nop
mov
sbb
mov
jns
jecxz
bound
in
fstp
mov
arpl
repz
ret
xchg
movsl
out
push
push
mov
pop
or
add
mov
pop
mov
add
sub
test
enter
lods
inc
loopne
jb
and
leave
and
fs
xchg
pop
mov
dec
cs
cs
xchg
addr16
and
dec
sub
xchg
addr16
pop
xor
jae
xchg
les
xor
leave
xor
push
loopne
pusha
mov
or
jo
sbb
in
hlt
rcrb
in
lock
pop
repnz
mov
push
add
imul
pop
adc
pop
xchg
inc
sub
jp
jns
sbb
pushf
std
es
add
outsl
je
fs
mov
or
bound
iret
into
movb
dec
adc
outsl
fnstenv
outsb
dec
jb
pop
outsl
jb
leave
mov
jo
inc
jb
insl
push
je
push
push
add
inc
mov
aas
ja
pusha
es
aas
inc
jae
push
dec
mov
pop
mov
outsb
pushf
in
sbb
in
cld
xlat
xchg
xchg
xchg
in
out
add
sbb
dec
lfs
daa
mov
and
add
adc
fmuls
insb
jae
mov
or
mov
fadds
daa
sbb
jnp
add
out
dec
push
inc
add
shll
jl
pop
mov
inc
pop
ss
push
xor
inc
jo
and
jno
mov
push
adc
dec
dec
add
ret
nop
lock
fcoms
mov
or
icebp
sti
add
jae
and
pop
adc
pop
test
fdivs
fcoms
add
add
movsl
xor
xchg
and
ret
sbb
xchg
dec
div
add
adc
imul
push
arpl
repnz
jmp
cli
mov
lret
mov
jg
push
mov
nop
lret
mov
sub
pop
mov
pop
shrl
js
adc
push
call
clc
pop
xor
mov
enter
push
ret
jg
outsl
imul
pop
test
xchg
or
movsb
jg
add
push
inc
mov
and
and
mov
jmp
push
mov
aas
adc
or
fisubl
or
or
scas
pusha
mov
mov
push
dec
insb
pusha
pop
nop
or
inc
popa
fisubl
inc
leave
in
rcl
pop
cwtl
and
adc
frstor
cmp
xor
aas
jae
mov
dec
xor
or
pushf
iret
pushf
xchg
push
js
jb
add
add
jb
shrl
dec
sbb
insl
jo
push
push
nop
or
xchg
rcl
inc
loope
adc
push
outsb
divl
test
insb
jl
xor
out
lds
adc
or
jecxz
push
or
xchg
jno
loope
test
dec
int3
shl
ljmp
xor
xor
call
add
lock
stos
push
into
xlat
push
or
shlb
and
sbb
xchg
daa
in
loopne
loopne
or
in
lock
add
enter
filds
or
lock
push
pop
icebp
mov
adc
es
or
nop
pop
jbe
nop
mov
jge
lock
sub
es
adc
cmp
ja
mov
xor
mov
clc
sub
jne
pop
pop
test
or
je
dec
je
sbb
xchg
xchg
daa
loopne
or
lea
std
add
dec
nop
adc
loopne
cltd
mov
ret
and
clc
and
dec
pop
loopne
clc
mov
xchg
imul
mov
sbb
test
insl
xor
les
call
in
in
mov
add
mov
out
pop
inc
rorl
sarb
lods
mov
jae
loopne
and
test
xchg
cmpsl
push
call
enter
cmp
out
mov
or
movsl
shrl
adc
fmul
xchg
test
jns
fidivrl
inc
and
xor
pause
jl
movsb
scas
shrb
mov
rcr
xchg
scas
and
xor
jl
sub
xor
js
jmp
jnp
je
aas
add
pop
ret
pushf
jmp
divb
jmp
xchg
and
movsl
pusha
sub
adc
jne
cwtl
adc
mov
rcll
jecxz
je
sbb
inc
cs
xor
jge
xor
xchg
add
jb
insb
xchg
insl
mov
loop
sbbl
cmp
hlt
push
jp
add
out
stc
add
mov
roll
mov
inc
cli
roll
rol
xchg
add
mov
psraw
fwait
in
push
jecxz
jecxz
cmp
xlat
add
test
jp
iret
aaa
sti
pop
sbb
pushf
xchg
jne
pushf
xchg
dec
lods
test
fisttps
jmp
sti
insb
lods
aam
mov
sbb
sub
in
pop
mov
inc
popf
push
cmpsb
call
addr16
or
inc
add
das
push
add
pop
shrb
rcl
or
push
movq
and
mov
dec
mov
xchg
clc
neg
movsl
insl
jmp
and
mov
mov
sbb
or
inc
xor
lea
push
call
add
inc
add
xor
dec
pusha
push
test
and
push
mov
out
mov
adcl
fidivl
jmp
inc
lea
xchg
push
mov
or
lods
dec
and
repz
dec
xchg
xlat
icebp
adc
in
pop
subb
in
mov
pop
in
jl
ret
movsl
fldcw
inc
mov
pop
push
iret
loopne
dec
pop
inc
out
out
js
mov
jae
push
aas
jmp
daa
add
adc
jne
pusha
movsl
popf
rol
inc
daa
jmp
sub
das
arpl
lea
jle
fsub
sub
loop
div
and
mov
and
pop
dec
iret
xchg
dec
rorb
pop
adcl
or
dec
jae
mov
push
add
add
roll
ret
aas
sbb
out
fmull
test
mov
pop
cltd
or
aaa
add
je
popl
jmp
sbb
adc
fsubl
sbb
call
xchg
xchg
mov
lock
push
lock
jecxz
mov
jne
sub
inc
ds
adc
arpl
out
adc
push
mov
out
push
in
sbb
fs
sbb
in
jp
dec
call
dec
call
and
rcll
push
add
or
mov
adc
push
das
add
daa
cmp
decl
push
cmp
jns
pop
add
dec
xchg
ret
or
push
pop
aad
jbe
leave
mov
fimuls
mov
hlt
xor
outsl
xchg
cmpsl
pop
sbb
adc
xor
imul
jmp
in
dec
movb
inc
sbb
cmp
xlat
jbe
repz
and
pop
daa
pop
jne
imul
and
push
add
or
mov
or
hlt
cmpsl
add
cmp
ljmp
jbe
aad
int
inc
xchg
inc
in
or
and
aas
in
cmp
add
inc
pop
aam
push
add
adc
ficoms
sbb
mov
jmp
enter
mov
push
movzwl
sub
push
adc
xchg
or
inc
std
cld
cmpsb
imul
sbb
sub
movsb
or
repnz
jne
in
lcall
sar
adc
mov
mov
je
dec
in
pop
daa
mov
imul
cld
pop
fsts
sub
inc
fstp
sub
enter
popa
mov
pop
adc
cs
fbld
fidivrs
loope
ficompl
rolb
bound
setbe
xchg
cmpl
mov
cmp
dec
imul
and
pop
dec
ret
out
jge
mov
mov
aaa
and
sbb
mov
cmp
add
sub
outsl
xor
in
or
std
mov
testb
jne
jae
fs
mov
inc
adc
or
js
mov
pop
jne
xchg
add
lock
fcoms
mov
xor
push
mov
cmovl
xchg
xchg
lock
push
loopne
push
loop
vpaddusw
inc
lret
cs
dec
mov
iret
and
dec
stc
xor
pusha
notl
sbb
sub
les
cs
fs
xchg
in
movsb
int
cmp
incl
js
call
push
shlb
sub
movsl
test
pop
adc
sub
arpl
push
mov
outsl
push
call
into
mov
push
adc
pop
push
xlat
sub
enter
pop
cmp
sub
std
popf
je
in
addb
arpl
adc
adc
push
or
sbb
or
in
out
push
ss
xor
jmp
mov
sbb
pop
clc
add
cmp
jne
inc
push
and
push
cmp
adc
pusha
dec
xchg
in
repnz
cmpsb
std
leave
add
mov
movsl
push
rcrb
insb
lcall
push
push
and
cmpsb
imul
xor
xchg
cmpsb
push
mov
lret
cmp
sbb
add
or
xor
out
xchg
call
xlat
pop
sbb
in
xor
je
leave
inc
pop
sti
adc
int3
sub
fisttpl
pusha
cmp
or
and
pop
xor
in
mov
fstp
and
js
cmp
sub
in
adc
lock
in
dec
add
adc
sub
and
clc
sbb
dec
pop
jb
adc
in
jmp
dec
cli
insb
or
push
and
inc
sub
push
nop
cmp
ss
mov
sub
shr
mov
dec
pop
jl
inc
cmp
cmp
adc
mov
mov
add
iret
sub
cmpsb
push
sbb
iret
fistl
iret
push
fwait
clc
pop
and
dec
jp
mov
mov
adc
jg
sbb
psubq
std
jg
sub
xor
push
shl
ret
and
sbb
dec
or
mov
dec
push
data16
or
cli
mov
clc
pop
call
or
lock
pop
pushf
mov
mov
cmc
orb
adc
push
adc
dec
sub
xchg
in
mov
add
in
cmp
mov
aam
and
das
aaa
or
lea
in
mov
cmc
dec
fcompl
and
addb
push
push
jle
xor
push
sbb
icebp
xchg
jno
adc
or
mov
push
ss
int3
mov
cmpsb
sub
add
push
popa
fwait
cmpsb
imul
dec
shrl
mov
lcall
gs
xchg
subb
mov
jp
imul
rcrl
movswl
pop
mov
fldcw
pop
cwtl
add
clc
pop
cmp
pop
mov
inc
sarl
fstp
push
or
and
inc
mov
jl
xor
or
mov
add
push
adc
cmp
or
aad
adc
sub
stos
rcll
dec
int
cwtl
and
dec
je
rep
mov
and
xor
test
sbb
cmp
push
adc
adc
inc
mov
pop
pop
lcall
push
pushf
mov
pop
fldt
cs
inc
ds
mov
imul
addb
mov
outsl
inc
fisttpll
sub
adc
adcb
lods
and
or
sbb
mov
sub
adc
sbb
adc
mov
add
sbb
aaa
jmp
and
push
pop
and
in
lea
ret
mov
adc
neg
push
jg
in
addr16
jb
mov
or
subb
inc
mov
add
jge
adc
arpl
in
popl
inc
mov
jmp
andnps
sub
push
jno
sbbb
fadds
or
orb
nop
sub
adc
add
mov
pop
or
and
je
or
enter
dec
dec
add
stc
push
or
add
and
cmp
mov
scas
and
adc
mov
or
add
mov
or
int3
ret
fidivl
in
negb
or
and
cmp
arpl
es
mov
and
pop
adc
xchg
pop
enter
dec
or
addb
xchg
jmp
aas
add
or
and
adc
sbb
or
lcall
imulb
or
daa
push
fistl
inc
jo
test
mov
or
adc
and
mov
lret
push
lahf
adc
in
add
orb
loop
sahf
push
movsl
push
insb
lcall
mov
cld
and
adc
push
sub
mov
pusha
push
adc
dec
inc
or
mov
cltd
and
iret
adc
jmp
push
jbe
rolb
adc
inc
jmp
mov
es
mov
sub
lret
popf
dec
cmp
shlb
stc
xor
test
and
adc
sub
pop
das
inc
push
dec
iret
xchg
je
nop
push
in
push
in
js
push
lret
adc
lcall
jns
test
xchg
es
hlt
and
mov
xor
ja
dec
jb
pop
popa
dec
call
mov
mov
xchg
or
xor
lds
push
stos
push
inc
dec
lcall
and
into
les
inc
dec
repnz
call
adc
fs
rcrb
push
call
rorl
pop
jb
ja
adc
or
jb
and
adc
cmp
imul
mov
lcall
in
dec
repz
insb
push
bound
push
add
daa
xchg
pop
shll
dec
stc
lock
filds
xchg
adc
add
int3
shll
and
bound
xchg
inc
mov
push
or
andb
fsubrs
sbb
jns
and
sarl
daa
mov
arpl
pusha
and
mov
jmp
pop
sub
and
jge
pop
and
sub
pop
xor
test
sahf
imul
jns
adc
cwtl
es
fisubl
loope
push
fwait
xor
daa
testb
push
xor
jbe
lods
sbb
mov
add
adc
loop
add
popa
adc
xor
inc
sub
or
push
cltd
andb
push
adc
push
mov
inc
out
sub
loope
sbb
jns
incb
and
daa
adc
data16
mov
xchg
popf
mov
push
sub
enter
or
sahf
mov
testb
cmp
nop
or
lock
pop
mov
or
mov
xor
xchg
adc
inc
test
xor
adc
lods
or
jle
jo
adcl
fs
dec
xor
out
out
push
or
out
sub
add
push
sarb
adc
dec
xchg
sbb
loopne
mull
or
or
adcb
in
or
les
cld
xor
mov
push
pop
adc
pop
ss
shrl
xchg
push
push
sbb
movsb
push
incb
mov
roll
shlb
jnp
jb
or
jge
cmp
jnp
xchg
adc
fstps
mov
pop
inc
sub
sbb
push
and
imul
fcomps
add
mov
push
jo
and
incl
push
dec
xchg
add
add
jne,pn
xchg
lahf
nop
negb
pop
aad
add
sbb
pop
push
cs
faddl
arpl
inc
insb
add
mov
push
fcomip
or
scas
insl
push
cmp
inc
dec
push
sahf
shll
jno
mov
cmpsl
add
sbb
testb
sub
fildll
pop
adc
inc
ret
sbb
dec
inc
fisubrl
cmp
jne
adcb
sbb
mov
pop
dec
sbb
inc
aaa
sti
add
fnstenv
and
mov
pop
mov
aas
jmp
cmp
jne
push
xor
sbb
add
xor
mov
setns
or
arpl
andl
mov
call
out
int
fldt
fstpl
or
dec
jno
add
add
arpl
dec
fnstsw
push
pop
jo
fwait
roll
xchg
mov
or
sbb
add
adc
and
adc
mov
dec
push
xor
push
sbb
add
sbb
add
xchg
enter
sar
sbb
and
push
pop
push
pop
mov
lcall
push
sub
lcall
push
lock
push
pop
push
shlb
jb
pop
scas
or
ss
adc
sahf
aad
push
inc
push
fs
xchg
or
fimull
sbb
imul
mov
inc
mov
loopne
scas
pop
xchg
fildl
sub
icebp
push
subl
adc
inc
fildll
sahf
shlb
dec
push
add
push
or
ja
lock
add
fstl
popf
adc
sbb
icebp
push
incl
or
push
sbb
das
inc
push
sbb
cmpsb
jns
imul
xor
rol
or
sbb
xchg
inc
rclb
test
mov
or
fisubrl
add
sub
in
nop
ja
jg
mov
mov
icebp
push
cs
xchg
insl
andl
jmp
inc
adc
add
jmp
pop
jmp
orl
into
mov
add
dec
adc
add
push
popa
lods
cmpl
cmp
daa
adc
es
lcall
mov
jbe
insb
jge
or
orl
inc
pop
jno
sbb
push
mov
or
out
sub
cwtl
add
push
add
inc
push
lahf
rcl
inc
adc
sub
mov
push
adc
and
jg
in
lock
dec
inc
push
imul
push
orb
ret
lret
add
xchg
add
inc
test
aas
loopne
aad
enter
pop
rclb
xchg
push
mov
movsl
test
or
or
mov
or
leave
call
sub
test
es
cmpsb
iret
adc
jecxz
pop
pop
mov
mov
push
mov
push
insl
dec
mov
dec
stc
insl
data16
push
lock
mov
scas
filds
in
leave
adc
dec
enter
shlb
cs
cs
andl
push
xchg
mov
into
repz
xor
fdivp
lcall
mov
add
sub
adc
dec
inc
push
outsl
and
adc
or
xchg
push
pop
inc
inc
inc
pop
lcall
daa
dec
adc
lahf
xor
push
enter
and
mov
pop
push
mov
adc
mov
mov
popa
sub
adc
inc
push
mov
xchg
pop
pusha
xchg
and
mov
fildl
pop
dec
and
fidivl
and
push
daa
dec
imul
loope
or
adc
push
and
cmpsb
adc
daa
mov
sub
cmp
or
xchg
stos
jne
gs
pop
adc
sbb
ret
dec
xchg
adc
xor
push
pop
xor
and
cmpsl
popa
das
add
bound
lock
and
push
push
cmp
lcall
andl
push
addb
xchg
push
mov
in
push
fildll
dec
push
and
mov
jge
sub
mov
iret
push
pop
sbb
in
push
cli
xor
insb
push
daa
xor
lods
pop
ss
fs
sub
sub
ficoms
push
icebp
xchg
adc
adc
iret
sbb
push
inc
iret
fmuls
inc
sub
and
add
dec
in
jl
leave
pop
pusha
mov
inc
push
adc
das
mov
and
mov
dec
and
insl
push
adcl
and
inc
xor
push
loop
fsubs
pusha
inc
into
pop
xchg
add
jbe
xor
jle
adc
pop
icebp
push
insl
lcall
sub
shrb
daa
jp
mov
pop
xchg
push
mov
in
sub
sub
daa
fildl
lods
test
imul
in
mov
fimull
nop
mov
cmp
mov
pop
mov
push
pusha
scas
mov
pop
sbbl
divb
addb
mov
jae
insb
mov
adc
je
pop
fmuls
scas
outsl
sbb
or
loopne
sbb
lahf
cmpsl
outsb
sub
jle
adc
popf
push
mov
aad
adcb
cs
repnz
and
cs
clc
je
mov
popf
mov
lock
xchg
addr16
lock
pop
hlt
sub
mov
add
inc
and
xor
xor
mov
xchg
sbb
push
push
arpl
rol
or
inc
inc
and
sub
mov
add
or
mov
ss
int3
mov
mov
and
jno
lock
imul
cwtl
cmp
mov
sbb
sbbl
movb
adc
pop
or
pop
in
xor
inc
ljmp
inc
adc
test
sub
cmpsl
push
andl
or
xchg
in
lret
fildl
inc
mov
test
mov
mov
sub
jae
sti
pop
push
inc
push
sbb
std
pop
xor
aaa
add
mov
fnstenv
or
xor
mov
imul
mov
jo
es
push
sbb
sub
pusha
pop
xor
pusha
leave
and
bound
and
inc
xchg
and
imul
xor
add
clc
xchg
sbb
aam
adc
push
push
in
fimuls
lock
ds
inc
lock
add
xor
test
sub
les
call
add
xchg
sub
int3
adc
mov
dec
push
loopne
dec
mov
xor
sub
or
faddl
inc
cmpsb
aaa
fcom
mov
aam
inc
xchg
int
xor
sarb
rcrb
mov
int3
jne
sbb
pop
inc
out
enter
addl
sub
cmp
outsl
sbb
les
or
in
push
shlb
pop
inc
xor
out
xor
aas
push
adc
ret
xor
ret
dec
mov
and
xchg
sarb
mov
in
mov
pop
xor
mov
in
dec
and
mov
imul
mov
lods
shl
adc
lods
cmp
push
pusha
ss
test
pop
pop
xor
in
enter
cmp
mov
mov
cwtl
jno
add
push
cmp
sbb
arpl
inc
sub
mov
push
dec
xchg
sbb
adc
mov
js
adc
add
dec
push
mov
hlt
or
and
mov
test
mov
cmp
in
flds
in
jb
xor
xor
pop
push
popa
or
and
push
test
mov
test
addl
xor
cmp
dec
push
xorl
sbb
test
rcl
xor
sbbl
xchg
lods
jne
push
push
loopne
inc
push
pop
in
loopne
xor
cmpsb
movsl
add
inc
loopne
imul
push
cmp
lds
cmp
sbb
push
jmp
dec
mov
inc
mov
xchg
dec
ret
lods
ficompl
xorb
imul
push
inc
adc
fidivl
mov
in
sbb
cmp
jg
cmp
xor
xor
cmp
dec
cmp
in
add
or
cmp
cmp
pop
push
mov
in
add
test
pop
and
mov
and
aaa
popa
mov
ret
fdivs
and
aam
add
test
jg
sbb
push
int
xor
or
loopne
push
ss
and
pop
dec
sbb
enter
fisttpll
lea
mov
pop
pop
push
jbe
xchg
inc
pop
shll
int
lods
jns
daa
aam
push
inc
popa
xor
shll
fwait
mov
pop
ret
add
mov
and
aaa
and
xchg
mov
faddl
mov
adc
jo
mov
popa
or
jns
jl
mov
xchg
mov
dec
popa
lods
and
sbb
lods
popf
test
mov
test
and
cmp
mov
cmp
pushf
jno
adc
inc
pop
dec
pop
ss
mov
and
cmp
test
orb
nop
jmp
adc
popf
cmp
mov
or
mov
shlb
jno
pcmpeqw
decl
cmp
orb
xchg
or
fmull
adcb
test
push
dec
and
adc
lahf
cs
adc
loopne
adc
je
jmp
sub
aas
lahf
push
sub
ss
push
jl
dec
insl
dec
nop
jmp
fisttps
cmp
test
jecxz
fistpl
aas
rcrb
mov
and
adc
ja
fsubs
xchg
addb
xchg
popf
dec
lret
pop
or
adc
dec
insb
adcl
mov
sub
xchg
add
movsb
outsb
inc
insl
or
inc
add
inc
pop
test
or
or
daa
add
push
push
popf
inc
jmp
pop
xchg
dec
or
and
incl
ret
mov
es
clc
add
ja
xchg
sub
movsl
push
inc
fwait
add
fsub
fistps
dec
ds
adc
mov
sub
cmpb
adc
pop
in
test
add
fldt
aam
ja
dec
insb
and
bound
fistl
push
and
push
push
pop
dec
or
or
or
add
lods
mov
imul
xlat
cmp
pop
or
add
pop
sbb
mov
pusha
scas
sbb
inc
sub
xchg
addb
aaa
arpl
dec
aaa
sub
inc
ss
dec
jns
dec
xor
bound
insl
push
push
aas
dec
push
adcl
mov
mov
push
cld
inc
test
or
add
loop
dec
mov
loop
cld
jo
pop
daa
testl
lock
shl
mov
mov
mov
push
cltd
mov
push
aas
addr16
fs
insb
add
inc
xchg
adc
pop
mov
addr16
insb
mov
inc
cmpsb
push
addr16
pop
push
and
push
fisubrl
imul
lock
mov
push
outsb
imul
inc
arpl
pusha
inc
pushf
iret
and
inc
iret
push
and
mov
test
pop
or
testl
notb
xchg
and
clc
test
jno
cmp
jle
aam
mov
push
pavgw
push
lea
add
dec
pop
xor
inc
xor
ds
mov
insb
das
jmp
push
movsb
jmp
or
cmp
test
xchg
cld
clc
xchg
push
popf
pop
ret
and
xor
dec
push
iret
pushf
sub
clc
sub
sub
push
sub
js
mov
cs
adc
test
xlat
xor
fwait
sbb
mov
inc
sarb
and
mov
pusha
in
test
fistpl
repnz
inc
outsb
jns
push
mov
push
push
gs
insb
cmp
pop
xor
push
mov
out
or
inc
lods
dec
aam
cmp
lock
das
push
adc
clc
outsl
jmp
je
cmp
sub
xlat
or
enter
roll
or
cmpsb
outsl
dec
add
xor
pop
adc
pop
xor
xor
lods
push
add
add
adc
in
xor
inc
notb
into
popf
lret
les
pop
add
mov
pop
jle
es
lcall
pop
xor
addl
leave
inc
std
jno
add
xor
mov
and
xchg
push
push
jnp
jmp
add
or
adc
or
or
out
outsl
dec
call
je
cmp
jg
mov
es
jbe
sub
sar
insl
roll
sbb
and
mov
jp
mov
mov
bound
add
or
xor
mov
xor
into
push
sahf
orb
inc
hlt
insb
outsb
or
scas
mov
add
xchg
mov
pop
sbb
daa
xor
mov
int3
test
mov
ret
or
stos
fidivrl
lahf
movsb
xor
aam
lods
xor
or
mov
or
dec
out
pop
xor
dec
clc
das
leave
adc
fwait
xchg
inc
push
and
cwtl
or
fidivrl
inc
jmp
inc
aas
sub
jae
pop
pop
int
jecxz
sbb
cmp
das
lret
jo
and
out
and
pop
push
or
push
adc
dec
jmp
add
or
jmp
adc
testl
sbb
fnstcw
adc
sub
adcl
inc
pop
inc
mov
fucom
ret
arpl
gs
push
das
pop
jne
addb
push
mov
loopne
xor
inc
fisubs
clc
insb
rolb
fnstenv
push
iret
lcall
inc
scas
xchg
iret
push
adc
dec
inc
jle
pushl
dec
jns
push
mov
cld
xor
or
pop
faddl
loopne
bound
out
cmp
pop
aaa
jmp
xchg
xor
pop
int3
out
adc
jge
enter
mov
cmp
nop
xchg
je
faddl
adcl
in
lock
push
fstl
stos
inc
xchg
ret
mov
cmp
daa
and
lock
clc
adcl
xchg
sti
or
inc
push
lea
mov
je
cmp
inc
adcl
rolb
mov
sbb
cltd
dec
sbb
push
fdivl
adc
dec
arpl
aam
ljmp
shrb
inc
lcall
leave
jge
test
pop
insl
add
hlt
add
mull
jg
sub
or
cmp
jle
mov
imul
jbe
cmpl
adc
mov
iret
imul
mov
inc
iret
xchg
push
out
sbb
or
or
aaa
enter
sbb
adc
fisubrl
arpl
adc
fists
in
mov
dec
cmp
fisubrl
push
ja
sub
mov
aad
adc
inc
add
movsb
jle
addr16
or
sub
clc
or
push
pushf
pop
cmc
cli
fistpl
std
out
mov
jne
mov
loopne
arpl
pop
es
popa
fcoms
dec
inc
dec
pop
repnz
and
and
and
or
cmp
mov
test
movsl
xchg
fcmove
loopne
lahf
mov
mov
jecxz
mov
inc
jl
adc
clc
add
inc
dec
jne
fistpll
fldl
popa
inc
mov
sub
call
decl
adc
adc
arpl
orl
filds
dec
pop
pushl
cmp
and
cltd
xchg
and
rclb
pop
push
sbb
push
mov
cwtl
inc
xchg
dec
xchg
sbb
lcall
movl
fdivrs
inc
aaa
add
sbb
mov
pop
or
dec
or
adc
popf
cld
out
and
sub
je
or
xchg
jle
rclb
out
lock
ja
push
or
dec
cld
daa
pusha
stos
lock
in
mov
clc
adc
jns
xchg
dec
cmp
hlt
sub
cs
sub
rolb
loopne
adc
jle
je
mov
ss
jle
icebp
movsb
test
les
sbb
xor
daa
cmp
hlt
aas
xor
ficoms
mov
and
pop
sbb
loopne
add
jns
sbb
xor
lock
sbb
test
or
mov
sti
loop
movsl
or
sbb
das
rorl
xchg
aas
dec
and
dec
imul
push
in
or
cmpsb
pop
sbb
push
lea
jg
dec
call
pop
inc
pop
dec
pop
or
push
add
leave
repnz
rclb
enter
sub
pop
pavgb
mov
xchg
sub
xchg
sub
outsb
flds
xor
and
fstp
sub
sub
or
mov
insb
push
inc
and
daa
fbstp
mov
mov
cmp
sbb
pop
pusha
and
pop
xchg
mov
dec
and
cmp
dec
xchg
mov
and
mov
and
testl
xor
fistpll
sbb
fsubs
sbb
pop
fprem
in
xchg
adc
sub
std
adc
inc
jno
cld
mov
pusha
mov
push
inc
add
enter
sub
andb
pop
shlb
daa
fisttps
rolb
xor
rcll
rclb
inc
mov
xor
xor
pop
movsb
test
adc
scas
sub
xlat
push
cmp
mov
push
pop
dec
push
sub
inc
inc
inc
dec
jne
adc
imul
ljmp
fmuls
adc
xlat
outsl
call
in
shrb
dec
sbb
lock
sub
xor
fs
adc
imulb
into
dec
aas
push
pop
dec
dec
dec
shll
test
nop
test
dec
sbb
in
cmc
add
pop
add
inc
insl
adc
push
add
cwtl
xor
pusha
mov
and
ficoml
mov
sbb
fisttpl
push
js
fistpll
pop
sbb
rclb
shl
pop
sub
and
mov
sti
nop
pop
aam
imul
mov
and
mov
sbb
cmp
jmp
rcrl
dec
dec
in
leave
push
cmp
mov
push
call
add
and
imul
cmp
out
cwtl
popl
enter
fucom
pop
mov
xor
add
std
inc
outsl
inc
stos
or
mov
add
sub
mov
push
mov
push
push
xchg
inc
xor
jg
dec
cmp
jl
sbb
add
outsb
lahf
insb
daa
xor
pushl
inc
insb
jb
sbb
and
shll
mov
jmp
mov
lods
pop
inc
pop
adc
xor
jecxz
adc
lock
xor
cmp
cmp
int3
push
in
cmc
or
adc
ds
fwait
pop
in
flds
adcb
negl
cmp
push
inc
sbb
cltd
int
jnp
incl
ret
mov
subb
lods
fdivrs
mov
push
sub
push
or
adc
and
incl
daa
sti
adc
pushf
stc
adc
incl
test
xor
fs
push
push
popf
pusha
and
jno
sbb
and
mov
imul
inc
daa
add
pusha
xchg
out
leave
inc
lock
xor
and
rdtsc
pop
clc
sub
insl
loopne
aaa
clc
jne
xlat
mov
jno
push
addl
push
jo
leave
pop
push
inc
xor
in
faddp
inc
add
stos
jge
ja
or
daa
inc
mov
repnz
shl
sub
push
and
out
enter
js
mov
daa
test
xorl
adc
out
mov
mov
inc
dec
jne
aas
lcall
stos
jne
leave
and
mov
sbb
push
gs
rolb
in
lea
jbe
adc
aam
xchg
test
add
addr16
add
dec
cmc
lea
xchg
push
rorb
mov
or
adc
notl
adc
ja
ja
mov
faddl
mov
fneni(8087
lods
int3
adc
scas
xlat
mov
lret
xchg
rorb
test
jo
mov
or
adc
mov
push
xchg
mov
mul
and
xor
sbb
movsb
sbbb
scas
iret
lods
and
jb
rorl
sub
add
ror
fistpl
in
movsb
xchg
imul
inc
ss
inc
and
iret
pop
mov
push
insl
in
cmp
sbb
dec
and
out
movsb
or
mov
xor
out
adc
pushw
test
loope
ja
ljmp
push
or
and
and
sub
sub
imul
cld
push
mov
pop
popa
or
gs
scas
sbb
cmp
add
mov
ss
pusha
jbe
add
mov
ja
add
add
vmulpd
rorb
sbb
gs
repnz
aas
lret
test
ss
popf
ret
add
or
dec
lea
fs
dec
ret
aaa
dec
jne
cmp
cmp
xor
mov
aam
rcrb
movsl
pusha
xchg
cmp
inc
rcrb
inc
fistpll
add
mov
mov
push
mov
lahf
fbld
les
mov
sti
add
push
mov
mov
mov
cli
or
incl
adcl
sbb
mov
or
push
ja
jo
jae
sbb
into
add
xor
sbb
sbb
mov
int
mov
dec
jp
lock
arpl
nop
gs
ret
inc
or
mov
hlt
inc
sub
lea
movsl
add
or
js
js
adc
mov
add
outsb
mov
lar
mov
pop
lods
imulb
cmp
inc
mov
cmp
mov
fimull
or
stos
cmpsb
sub
sbb
daa
jne
dec
or
cs
pop
cmpsl
les
mov
outsb
mov
pop
ret
imul
in
xchg
xchg
pop
or
or
les
das
loopne
xor
push
or
xchg
push
mov
lea
in
into
cmp
aam
mov
loopne
rcrl
inc
dec
fisubs
push
mov
jne
or
subb
push
mov
pop
add
push
mov
dec
adc
sub
leave
les
dec
push
adc
and
add
rcl
mov
sbb
dec
mov
xor
push
and
inc
pop
xor
jge
dec
mov
std
push
jl
or
pusha
test
sbb
les
xlat
lahf
sub
addl
fsubs
inc
mov
rol
gs
dec
or
mov
cmp
cmp
int
push
push
sbb
push
pusha
mov
sbb
pop
push
dec
pushf
out
movsb
ds
add
ss
dec
push
adc
dec
js
dec
push
xlat
mov
dec
pop
xchg
fadds
mov
cltd
pop
pop
cmp
fwait
out
add
inc
popa
jne
jge
pop
sub
les
cmpsl
push
adc
in
insb
sbb
sbb
push
pop
fiaddl
fisttpl
lret
add
filds
and
jb
bound
mov
or
pop
jbe
lock
adc
movsb
adc
stos
push
test
add
adc
mov
mov
cs
int3
dec
cmp
setg
test
mov
pop
dec
mov
inc
test
cwtl
insl
fwait
xchg
lock
lock
shlb
bound
mov
inc
pop
or
and
incl
mov
add
sbb
enter
mov
and
rclb
les
and
jp
daa
inc
pop
mov
and
and
pop
imul
sbb
nop
fsubrp
jle
pop
jae
dec
incl
mov
mov
mov
jle
dec
mov
adc
xchg
loop
jo
cltd
add
xchg
pop
out
scas
in
out
sub
push
mov
bound
mov
mov
icebp
jns
mov
sbb
xor
ds
sbb
rol
out
repz
lods
xor
xor
pusha
sbb
push
pushf
adc
repnz
push
push
xchg
enter
xchg
xchg
xchg
and
cltd
orl
lcall
and
and
and
and
mov
mov
mov
ret
aaa
mov
insb
sbb
xor
cmp
ret
inc
push
jns
rclb
cmp
lock
xor
pop
pop
mov
lea
loop
inc
test
lahf
push
cmc
or
xchg
add
mov
popl
leave
daa
or
aam
adc
fsubr
loope
cmp
pop
or
or
pop
push
push
add
push
mov
sub
add
xlat
out
pop
rclb
push
cmpsl
outsl
movsl
jb
cmp
xchg
mov
leave
inc
enter
mov
add
ret
inc
addr16
mov
or
cmp
xor
dec
mov
fidivrl
sbb
or
and
sub
jbe
sub
inc
inc
push
pop
js
subl
in
lock
mov
mov
dec
sbb
or
sbb
and
test
add
outsl
add
cmp
in
addb
push
cmp
add
mov
push
outsb
std
arpl
pop
fs
aam
mov
popa
mov
adc
jp
lcall
shlb
repz
fistl
cmp
sbb
inc
pop
addb
xchg
pop
jl
dec
fstpt
aaa
pop
or
fwait
mov
sbb
add
inc
pop
das
aad
mov
cltd
hlt
lock
xchg
arpl
mov
in
jns
imul
xor
xchg
push
es
mov
std
fadds
data16
jmp
xchg
add
test
addb
or
cmp
icebp
fsubs
inc
dec
cmp
xor
xor
sbb
nop
and
dec
test
dec
repz
mov
loop
std
cmc
push
outsb
adc
not
inc
cld
or
dec
or
and
push
add
cmp
jne
mov
sbb
push
pop
jle
jbe
jle
and
nop
xlat
xchg
mov
xchg
pop
dec
cmpsl
inc
push
shrl
int3
push
xchg
fsubrl
movsb
xchg
je
pop
movsl
leave
mov
jge
lock
mov
add
xchg
or
jbe
mov
pop
pop
addr16
mov
mov
mov
sbb
inc
sbb
add
jge
aaa
cmp
hlt
push
lods
pop
adc
pop
and
xor
inc
or
into
xchg
leave
xor
cmp
in
cmp
and
std
xor
movsb
sbb
or
ds
cmp
push
andb
dec
mov
add
push
add
push
jbe
shrl
lock
xor
sbb
leave
and
shr
push
sbb
aaa
popa
call
pop
call
sbb
mov
or
gs
mov
or
or
inc
addr16
cmp
loope
xchg
rol
sub
clc
jne
sub
inc
popa
xchg
add
adc
push
or
in
pop
xchg
jmp
imul
in
sbb
hlt
push
mov
loope
inc
mov
sti
and
popa
jbe
push
mov
cmpsl
aas
push
fimull
and
push
add
adc
mov
sub
push
xor
lea
in
push
mov
rcrl
jl
cmpb
or
sbb
rolb
adc
mov
jo
xor
push
sete
pop
lahf
adcl
push
xchg
mov
mov
pop
lods
mov
push
and
push
pop
and
sub
jo
cmp
add
push
fadd
outsb
jmp
adc
dec
push
add
movsb
mov
inc
cmp
push
mov
lea
jl
pop
stos
push
xor
incl
adc
xor
test
jne
fdivrp
out
std
sub
das
inc
dec
xor
cmp
jle
adc
scas
mov
mov
in
or
or
add
fidivrs
inc
pop
adcl
sub
mov
add
jmp
dec
pop
mov
sbb
rol
and
jl
or
filds
arpl
sbb
scas
test
add
jl
or
sbb
and
aas
pop
sbb
sti
unpckhps
lret
je
mov
dec
and
sbb
adc
mov
xlat
jmp
jg
in
jne
jmp
cmp
insb
adc
insb
sbb
test
out
loope
or
lods
lock
or
mov
sub
scas
xor
mov
jno
sbb
sub
std
adc
jmp
push
dec
mov
push
cmp
mov
cmc
aas
pop
je
xchg
add
jmp
jp
decb
ja
adc
jge
dec
std
jmp
call
jmp
sbb
xlat
push
arpl
insl
push
add
or
mov
movsbl
ficompl
jg
jne
imul
sbb
mov
sarl
in
ds
pop
in
push
loopne
fistpll
data16
lret
or
or
imul
call
out
mov
lods
test
or
test
loopne
iret
imul
and
pop
movsl
jge
mov
add
pop
in
rcr
insb
cmp
pop
jl
push
cmp
jne
in
push
xlat
cmc
lret
push
pop
and
leave
dec
pop
lock
ja
cmp
jmp
or
fsubrs
lock
bound
or
mov
mov
jl
add
jae
push
inc
mov
pop
cmp
insb
mov
loopne
loope
sub
les
jne
dec
sbb
loopne
jno
pop
pushl
push
dec
leave
arpl
fildll
xor
add
xor
pop
adc
mov
das
add
es
insb
addr16
or
daa
sbb
xor
arpl
dec
sbb
inc
xchg
inc
cmp
repnz
xchg
je
add
scas
push
sbb
test
sbb
idivb
int
push
pop
pop
cmp
ds
and
add
clc
hlt
sub
je
jge
lods
sub
pop
movsl
fsubs
ret
adc
daa
mov
movsb
cmp
mov
cmp
and
jge
inc
mov
call
sbb
addl
dec
mov
and
and
lods
pop
imul
and
xlat
sbbb
movsl
jle
adc
cmp
push
ret
call
or
or
into
lret
and
cmp
mov
enter
stos
aaa
ret
fldcw
or
adc
pop
loopne
aam
mov
push
jge
das
test
out
xlat
mov
jo
sbb
xchg
mov
mov
ss
or
fisttps
enter
and
pop
push
mov
push
clc
jge
les
jno
pop
arpl
jae
in
xchg
sbb
pop
mov
push
mov
je
add
xchg
adc
dec
cmpsb
sbb
jnp
mov
stos
mov
cmpsl
std
or
or
dec
je
jmp
loopne
push
stc
or
adc
shr
mov
sbb
jmp
xchg
push
or
jmp
push
or
add
xchg
js
ret
addr16
add
xchg
imull
push
or
sub
add
push
jmp
mov
mov
jo
shlb
pop
xchg
daa
jecxz
fcom
loop
jecxz
in
cmp
pop
cs
gs
mov
pop
push
pop
mov
jne
jae
mov
call
adc
xchg
sbb
jl
xchg
push
sbb
jb
add
mov
hlt
addr16
data16
lea
adc
add
jmp
das
mov
mov
push
fs
push
or
loopne
les
clc
loopne
clc
push
aas
jne
xchg
cmp
mov
xor
iret
lods
pop
mov
out
mov
jns
out
in
push
add
jecxz
loopne
sbb
add
enter
push
hlt
adc
rolb
popa
leave
in
shll
pop
or
xor
lods
cmp
fldt
adc
gs
dec
xor
data16
out
fmuls
cs
psubusb
sbb
jmp
cmc
inc
fidivl
cs
jnp
lods
adc
adc
jmp
or
adc
inc
ljmp
lea
rcrb
jbe
lock
lea
out
jecxz
in
mov
fsubrs
mov
negl
ret
mov
lret
jno
jo
lds
imul
or
mov
ja
lods
or
mov
push
sub
dec
sarb
jl
pop
fldt
fstps
sub
adc
cs
or
add
fisubl
xchg
inc
adc
or
cmp
fdivrs
or
aaa
pop
je
or
imul
bound
or
jge
jecxz
jb
out
xchg
aaa
or
pop
mov
adc
add
xchg
and
popf
pop
ljmpw
fistpll
mov
mov
imul
pushf
jp
inc
dec
push
popa
jae
inc
shlb
cwtl
and
lock
jmp
sbb
sub
jmp
or
jne
out
add
xor
mov
in
mov
cld
push
pop
or
pushl
pushl
or
add
call
pop
xchg
adc
or
mov
faddl
je
add
ja
jb
lea
ret
ja
sbbb
ja
mov
ret
xchg
test
adc
mov
or
dec
fmul
sbb
in
test
fnstenv
xor
and
sub
push
sbb
inc
cmc
gs
pusha
or
inc
test
jp
add
jmp
into
xor
shlb
sub
adc
and
pop
outsb
or
popf
and
jbe
jb
sub
jg
jl
ret
mov
popa
addr16
pop
inc
inc
push
in
in
js
dec
and
hlt
or
or
push
cltd
cmp
in
call
cld
clc
test
adc
adc
jns
dec
cmp
jns
pop
aad
test
inc
imul
in
add
pop
cs
data16
outsl
push
fdivs
push
sbb
adc
in
jnp
xchg
pop
insb
sbb
sub
inc
dec
mov
imul
insb
popa
in
mov
bswap
fiadds
inc
jbe
and
aaa
push
push
out
mov
push
or
jb
or
xor
cmpsl
or
dec
imul
stc
jge
test
push
or
jnp
movb
xlat
cmp
add
dec
mov
mov
js
sub
loopne
add
leave
or
ss
imul
in
or
or
dec
gs
mov
jae
mov
ds
cmpsb
outsl
or
jne
test
mov
jg
addl
imul
add
dec
cmp
xchg
push
ret
push
sbb
dec
adc
pop
aas
faddp
sub
mov
testb
shrl
mov
dec
addl
int3
pop
or
mov
inc
cs
pop
in
cmp
sub
mov
jnp
push
pop
pop
xor
jb
mov
lods
xchg
mov
outsb
mov
scas
aas
daa
leave
insb
in
or
loopne
in
inc
loopne
jl
mov
inc
cmp
adc
pop
test
dec
dec
mov
scas
lret
fs
push
inc
and
data16
fiadds
nop
in
mov
adc
test
cmpsl
mov
pop
mov
dec
jle
ret
or
mov
dec
imul
mov
cwtl
or
jae
clc
stos
inc
enter
inc
or
cmc
imul
jo
fs
jg
pop
add
insl
jo
push
rol
push
mov
xchg
and
pushf
lgs
jb
gs
sbbb
aas
outsl
stos
ret
adc
xchg
xchg
sbb
mov
adcb
popf
jo
clc
adc
movsl
cltd
sub
lods
push
loopne
add
test
and
hlt
mov
push
in
mov
subl
sbb
sbb
push
pop
mov
lcall
push
add
dec
stos
in
and
add
call
sbb
sbb
mov
jae
test
movb
or
test
inc
or
lahf
pusha
or
jbe
inc
lea
int3
ror
add
filds
jmp
outsl
cmc
cs
scas
outsl
jo
dec
push
xlat
push
lods
jb
push
loopne
xchg
xorb
addb
jp
xor
and
or
fs
add
pop
sarl
pop
sbbl
nop
lahf
std
push
mov
sub
cmovns
jae
fs
jo
les
xor
testb
push
rclb
sahf
cmpsb
int
cmp
push
lock
iret
pop
xorl
xor
add
push
adc
test
cmp
iret
adc
xlat
dec
scas
outsb
cmpsl
adc
cmp
fsubrs
rep
xor
pop
push
out
mov
pop
cmp
lods
pop
insl
fdivp
mov
fsubrl
mov
in
mov
xor
push
sbb
pop
jo
sahf
mov
sbb
fwait
or
mov
fadds
push
xchg
or
scas
pop
sbb
ljmp
pop
addl
insl
sbb
ret
inc
int3
mov
mov
mov
and
pop
adc
js
and
cmpsb
pop
pop
mov
fimull
mov
push
aam
xchg
jnp
loopne
pop
jl
pop
mov
mov
repnz
mov
jbe
outsb
pusha
push
pop
inc
test
push
loopne
push
add
inc
cmc
js
add
dec
xadd
mov
rolb
mov
jne
push
rcrb
shll
pop
push
adc
dec
mov
pop
test
inc
les
pop
clc
ret
outsb
push
mov
in
ficomps
push
or
push
and
mov
test
sbb
mov
cmp
cmp
orl
adc
repnz
jo
mov
push
mov
movb
jno
push
sbb
or
jl
int3
inc
mov
adc
mov
mov
xchg
das
stc
notb
enter
inc
in
popa
in
repz
clc
notl
pop
inc
xchg
mov
nop
leave
or
leave
testl
test
adc
mov
sbb
xor
adc
adc
sbb
xor
adc
and
mov
push
add
cmp
or
in
dec
rcrl
dec
mov
mov
xor
xor
pop
adc
dec
shrl
xchg
pop
xor
cs
pop
loopne
iret
test
sub
outsl
mov
scas
scas
insb
or
push
or
je
pop
lcall
je
mov
lcall
pop
je
adc
je,pt
sub
or
push
movsb
push
add
dec
or
cmp
subb
aaa
lret
cmp
pop
push
sahf
jle
xor
push
mov
dec
sbb
call
mov
nop
aam
insb
rcrb
mov
push
loope
or
je
popa
call
fiadds
aas
es
sub
push
data16
fistpl
bound
xchg
push
mov
repz
decl
ds
call
rcll
stos
mov
dec
mov
mov
aas
mov
jp
cmc
cmp
cs
clc
fs
sahf
mov
inc
sbb
aam
adc
mov
pop
cmpsb
imul
and
mov
xchg
pop
inc
int
dec
addb
sub
and
arpl
aas
push
mov
pop
ret
fisubl
pop
lea
shrl
xor
mov
addr16
mov
idivl
add
add
dec
push
mov
test
sub
pushf
push
xchg
push
mov
imul
cmp
mov
mov
dec
cli
stc
clc
push
push
push
push
call
fidivrl
jecxz
push
jecxz
push
pushl
jle
push
cmp
shll
fs
imul
dec
into
pop
push
inc
push
sub
pop
inc
imul
nop
pop
pop
and
andl
xchg
xchg
xor
inc
lock
orl
mov
add
push
add
cmc
add
ss
and
adc
loope
push
aaa
mov
lcall
and
push
sbb
adc
imul
and
cmp
test
ret
cmpl
push
push
mov
pop
mov
in
push
xor
cwtl
pop
pop
cmp
dec
rcrl
push
add
aam
cmp
jmp
push
or
push
call
pop
sub
lea
mov
aad
data16
ss
dec
adc
jb
mov
xchg
jo
pusha
std
push
movsb
adc
add
push
bound
pop
loope
bswap
pop
mov
fisubl
dec
lods
or
mov
cmpl
fsts
or
aas
jmp
or
aas
pop
std
pop
sub
xchg
aaa
add
jb
jne
push
jmp
scas
aas
pop
mov
xchg
scas
or
add
sbb
dec
xchg
sub
data16
mov
clc
xor
push
fmul
mov
mov
dec
jno
and
ret
insb
xchg
mov
aam
add
or
je
push
mov
xor
and
jmp
mov
mov
jg
xchg
cmp
adc
xchg
xor
jmp
fwait
je
jns
mov
sti
jne
xor
jmp
sbb
jmp
sbb
and
xchg
mov
stos
rcrl
dec
mov
mov
inc
test
imul
jno
xchg
test
and
mov
daa
mov
or
rcrl
jns
add
xor
or
imul
and
mov
out
add
lds
insl
adc
or
push
es
rcll
and
push
dec
jmp
cmp
mov
ja
push
and
push
sbb
lcall
xchg
mov
pop
mov
movsb
mov
pop
fcompl
insb
push
sbb
push
xchg
aam
mov
push
fcoms
movsl
mov
ret
hlt
add
or
add
mov
sbb
sbb
xor
xchg
mov
in
sbbl
cmp
dec
mov
or
enter
dec
ljmp
gs
xchg
je
in
popf
cmp
das
cmp
push
add
adc
mov
xor
fdivs
dec
lret
sbb
dec
jne
adc
xchg
js
es
in
popa
add
test
mov
push
imul
bound
dec
imul
dec
sbb
ja
adc
sbb
and
sbb
imul
mov
inc
bound
hlt
jae
push
dec
lcall
push
rcr
fwait
lea
push
dec
aas
xlat
push
push
push
stos
andl
lock
cmp
inc
adc
xor
push
xor
stos
pop
adc
push
dec
hlt
jl
inc
push
dec
imul
mov
pop
push
pusha
xchg
xchg
adc
or
ret
nop
inc
sbb
shl
or
aam
rcr
nop
addl
mov
inc
pop
mov
enter
dec
popa
mov
xchg
dec
repnz
push
xchg
sub
jae
enter
aas
add
pop
or
incl
mov
mov
push
sub
cmp
lea
add
inc
test
das
call
sub
test
daa
pop
dec
lock
inc
sbb
sbb
shlb
push
movsb
pavgw
call
adc
test
out
add
cmp
dec
test
aaa
inc
push
imul
push
inc
push
pushf
popf
mov
cmp
push
xor
cmpsb
loop
mov
jecxz
dec
call
sbb
incl
es
push
adc
adc
movsb
iret
or
sbb
and
orl
imul
in
xlat
popf
mov
xorb
xor
rorl
sub
dec
shll
les
xorl
scas
test
sub
scas
pop
fs
repz
xchg
mov
hlt
xchg
or
int
push
sbb
mov
mov
das
movsb
xchg
cmp
outsb
or
rcll
adc
lds
xor
pop
call
mov
mov
in
cmp
sub
pop
sbb
or
fdivrl
test
inc
leave
out
inc
pop
mov
insb
test
test
xor
cltd
mov
mov
sub
jo
jae
js
add
pop
push
sub
push
ljmp
fdivrs
add
and
mov
orb
scas
adc
jo
jge
fs
inc
les
lds
sahf
leave
push
or
mov
ja
test
popf
in
adc
or
push
mov
xor
jnp
cmpsl
xchg
xchg
in
fwait
push
sbb
sbb
shrb
shrb
push
xor
inc
shll
insl
push
lahf
fistpll
mov
nop
pop
insb
xchg
or
adc
popf
pop
into
mov
enter
cmp
mov
ficoml
in
mov
sub
pop
xchg
push
scas
mov
and
popf
aas
dec
mov
les
or
or
jae
addr16
les
or
aad
add
or
dec
push
or
add
sbb
pop
outsb
lods
rorb
xchg
insb
fildll
xchg
jbe
mov
jns
ljmp
pop
or
sub
push
in
or
loope
fbld
js
xchg
pop
mov
pop
cmp
sub
aaa
lea
xor
sub
movsl
cmp
push
jo
lock
mov
jmp
add
je
arpl
mov
lods
inc
lret
inc
sub
cmc
dec
out
cmp
jne
sbb
sbb
push
mov
jns
xorl
pop
add
addr16
fs
cmp
fstl
es
mov
ret
mov
nop
ja
loope
sub
ja
xor
push
adc
loopne
xor
sbb
pop
fimull
rolb
das
aam
and
push
jecxz
and
adc
add
outsb
loope
aam
adc
jecxz
das
sub
movsb
mov
jl
or
ficompl
push
push
add
enter
xchg
dec
push
xor
lods
xchg
je
mov
push
mov
mov
xor
push
mov
sbbb
add
and
ret
pop
xor
cwtl
push
add
xlat
fdivrs
mov
aam
dec
nop
sahf
mov
push
xlat
xor
sbb
adc
int3
insb
mov
insl
xor
xchg
out
lcall
loop
add
xchg
jo
shll
push
or
js
add
sub
mov
sbb
arpl
mov
push
pop
mov
cmpsb
cmp
ljmp
cmp
je
mov
rol
mov
push
cmp
dec
stos
add
dec
hlt
es
mov
cld
adc
cmp
inc
mov
and
in
cmp
mov
hlt
push
cli
inc
loope
cmpsb
std
sbb
and
icebp
jge
adc
mov
lret
cmp
sahf
jmp
leave
orl
loopne
xchg
push
nop
adc
loop
aam
data16
inc
mov
add
sbb
adc
xor
push
xor
add
pop
roll
loop
inc
adc
ljmp
int3
or
leave
test
fstl
add
xchg
inc
frstor
or
xchg
sub
xchg
in
cs
jmp
inc
push
cltd
or
adc
shr
ljmp
or
jecxz
mov
sub
enter
loop
adc
or
fwait
shlb
cmp
roll
insl
dec
or
pop
rcr
push
mov
icebp
push
adc
fxch
aaa
cld
add
mov
mov
inc
jb
pusha
mov
xchg
mov
into
arpl
shlb
test
pop
enter
outsb
inc
inc
add
inc
xchg
ret
mov
or
lahf
add
popf
sub
scas
or
test
mov
aam
add
jmp
and
or
jmp
or
nop
xchg
rcl
mov
sub
dec
or
mov
mov
jne
sbb
leave
ss
gs
sub
bound
inc
push
sbb
movsb
sbb
pop
jg
xor
lods
cmc
jecxz
sbbb
mov
sbb
imul
add
dec
cltd
shlb
inc
push
pop
pop
inc
sub
push
dec
mov
or
lods
cmpsb
stos
incl
rorb
add
push
scas
dec
shl
push
aaa
cwtl
pop
pop
sbb
mov
push
jns
ror
fsubrs
jle
lock
jle
fnop
sbb
inc
aam
or
inc
ret
mov
dec
mov
sub
push
das
cmp
jg
dec
cmc
dec
dec
inc
lods
addl
cmp
ret
insb
pushf
inc
outsl
pusha
xchg
push
inc
subb
adc
mov
mov
mov
call
lods
add
or
xchg
rcrl
sub
sbb
cltd
mov
add
cmp
add
fisubl
jmp
jmp
or
xchg
inc
jne
sub
in
pop
jl
jne
add
adc
inc
repz
adc
push
mov
jo
pusha
aaa
dec
cmpsl
and
or
cmpsl
mov
add
and
mov
sub
push
ret
push
cmovp
enter
cmp
ja
mov
push
mov
fistps
add
cld
js
leave
mov
mov
in
ds
pop
sar
movsb
inc
outsb
dec
sbb
call
out
je
rolb
jle
push
jb
mov
call
push
mov
rclb
rcrl
push
mov
stos
xorl
in
cmp
mov
cld
push
mov
push
add
cmovnp
leave
je
pop
loopne
inc
stos
adc
btr
push
add
mov
add
jo
jle
push
inc
adc
jmp
pop
fadds
add
js
pop
dec
test
add
js
pop
xorl
add
jmp
pop
add
scas
jbe
push
std
jnp
ret
ret
adc
push
inc
cmp
jne
inc
decl
jne
sub
or
aaa
mov
dec
adc
mov
add
xchg
mov
add
lods
or
jle
nop
push
push
ss
cli
test
inc
sbb
add
cmp
rolb
into
leave
in
jae
test
adc
movsb
dec
pop
inc
rclb
xchg
sub
sbb
ret
push
add
call
push
mov
testl
cld
mov
mov
cmp
pop
xchg
out
ret
mov
sub
jns
lods
sbb
adc
and
cmpsb
incl
jns
mov
add
out
push
aam
push
popa
cs
or
inc
xor
inc
or
movsl
inc
adc
daa
daa
push
test
aaa
and
xlat
xor
add
ss
add
mov
js
sbb
outsb
jmp
cmp
sbb
aam
outsb
pusha
dec
orl
fistpll
mov
outsb
jle
push
dec
and
lods
sub
in
dec
xchg
lcall
xchg
or
pop
jns
out
in
adcb
lods
add
scas
add
je
popa
adc
int
je
pushf
jg
cltd
pop
movl
rorb
sub
inc
cmp
cmp
popf
fsubrs
push
movsl
sbb
jb
adc
sbb
sub
call
mov
and
mov
pop
and
cmp
call
aaa
dec
pushf
mov
sub
pop
inc
movsl
xchg
or
xor
andl
imul
or
inc
mov
mov
mov
pop
inc
fiadds
adc
pop
push
push
pop
dec
push
add
test
xor
je
xchg
cltd
sub
dec
subl
push
mov
pop
loopne
shll
mov
sbb
lock
and
es
dec
clc
shrb
inc
repz
adc
jecxz
test
sub
inc
sub
adc
inc
cmp
ret
xor
cmp
adc
ficoms
xchg
xorl
dec
shll
imul
add
in
cmp
in
aas
inc
scas
jecxz
or
mov
xor
cmp
jne
fnstcw
pop
and
xchg
lock
pop
in
gs
sbb
shlb
inc
shll
add
dec
add
sub
fucomi
daa
nop
inc
aaa
out
lahf
push
lods
jle
inc
sbb
fsubrs
cmc
iret
nop
inc
inc
popf
lds
lods
pop
cmp
dec
xchg
ss
cmp
sub
and
sub
mov
and
stos
and
loope
aad
xor
leave
repnz
clc
and
movsl
sub
cmp
xchg
jb
lock
andl
add
xchg
mov
dec
add
mov
sbb
mov
jg
adc
mov
int
push
shll
sbb
mov
and
or
or
fildl
push
adc
push
mov
jne
inc
pushf
add
inc
jg
pushf
push
push
xchg
ljmp
sar
clc
add
call
inc
lret
dec
pop
imul
add
cwtl
pop
xor
in
fwait
pop
call
stos
lcall
adc
sbb
cmp
out
nop
out
add
test
lea
xchg
popa
inc
rcll
rol
addr16
xor
ss
test
adc
loope
xor
mov
pop
jge
and
push
adc
push
xor
aas
test
insl
popa
das
andl
and
or
cmpsl
mov
addr16
sbb
dec
popa
cmp
mov
orb
cmovp
or
pop
in
dec
call
jmp
das
xor
sub
arpl
loopne
mov
rcll
inc
shll
scas
mov
xor
js
dec
lods
jecxz
push
or
pop
test
sarl
adc
lods
iret
xor
cmp
je
cmp
andl
dec
pop
or
pop
mov
cwtl
test
cmp
push
lret
xchg
dec
jb
push
xor
jl
fs
add
push
cs
imul
dec
pop
pop
jb
jo
pop
clc
add
add
ret
jmp
sbb
scas
enter
adc
push
jne
int3
push
inc
loopne
out
sub
pop
xchg
shll
movsl
push
test
dec
adc
icebp
pop
mov
icebp
imul
mov
push
push
cmp
bound
dec
push
add
jb
pop
cmpsl
mov
sub
push
pop
pop
and
call
movsb
rcr
stos
sbb
inc
out
or
pop
inc
pushf
mov
xorl
sub
push
ficomps
aam
mov
add
lds
and
and
add
dec
adc
pushl
js
mov
add
ficoms
adc
rcrb
push
repnz
mull
icebp
mov
pusha
mov
lret
mov
movb
je
xchg
jge
adc
push
loope
fcomps
cs
mov
push
or
inc
jb
mov
test
cmp
ljmp
movsb
mov
shrb
xchg
jne
pusha
adc
dec
inc
jmp
jmp
decl
jp
sbb
add
mov
sub
pop
mov
xchg
and
cmpb
jne
call
or
jne
int
mov
stos
mov
and
mov
mov
jecxz
inc
or
add
jecxz
adc
push
lods
xchg
pop
or
and
push
in
xor
pushl
iret
testb
inc
ret
cmp
pop
mov
cmp
jne
testb
orb
sbb
push
movl
and
aad
cmp
popf
pushf
adc
and
inc
or
out
aas
jo
mov
mov
pop
das
mov
ret
sub
cltd
orb
adc
cs
cmp
cmp
sahf
sub
imul
jmp
fcoms
cmpl
xchg
adc
xchg
mov
addr16
das
andb
fdivrs
inc
and
in
jns
and
sub
lods
push
sub
add
addb
add
inc
int
adc
mov
shrl
adc
mov
inc
jno
sahf
fadds
add
and
in
dec
inc
pop
inc
stos
sbbl
adc
or
shrl
sub
and
and
decl
iret
push
sbb
sub
dec
dec
out
pop
cld
icebp
inc
dec
mov
ud2
rorl
mov
mov
sbb
add
pop
add
inc
sub
push
addl
mov
js
ficoml
ret
std
std
lods
fidivrs
je
jg
mov
jmp
mov
add
imul
jge
lea
pop
orb
xlat
or
addb
add
xor
repz
and
test
jmp
xor
nop
sub
test
xchg
sbb
inc
adc
aas
aam
add
dec
push
sbb
jo
mov
mov
mov
sbb
push
scas
shrl
je
push
mov
push
mov
inc
push
dec
cmp
test
sub
das
int
je
mov
addb
pop
sub
pop
cmpsl
popf
or
inc
sbb
jg
orb
or
lea
push
push
xchg
sub
ret
jns
push
cmpb
fidivrs
mov
push
push
add
mov
fsub
shll
cmp
mov
lock
adc
add
shr
test
pushf
out
mov
imul
dec
sub
adc
jg
jl
add
adc
sti
aad
add
cmp
jne
cmc
sti
jbe
inc
dec
inc
jge
sbb
jle
mov
fucomi
jnp
pop
scas
push
inc
jmp
jl
das
inc
dec
pusha
mov
add
mov
sbb
jg
je
push
adc
push
daa
xchg
mov
push
add
sbb
or
shll
aad
test
stos
enter
mov
xchg
js
xchg
inc
jle
adc
push
jge
or
jle
or
orb
dec
out
fistps
adc
out
js
and
rorb
sub
into
ss
push
fstpt
and
mov
jb
adc
pop
mov
insl
ret
jno
pop
xlat
into
insb
sub
fwait
call
or
in
push
subb
pusha
js
fstpt
xchg
jbe
push
rol
movsl
cmpl
cmpl
xorb
adc
push
sub
and
jb
add
sub
add
pop
cwtl
cmp
adc
pop
mov
ret
push
mov
cmpsl
jl
mov
lea
add
adc
jmp
xchg
movsl
xor
and
inc
inc
shlb
jge
xchg
dec
or
cmp
cmpsb
jne
sbb
mov
pop
leave
enter
xor
dec
mov
xor
and
and
jg
das
add
push
das
or
or
adc
shlb
add
add
and
out
or
or
or
jl
insb
push
inc
pop
outsl
adc
ret
xchg
aaa
emms
shl
das
fcompl
dec
fcoml
cwtl
adc
or
and
orl
xchg
mov
push
add
jbe
add
sbb
es
add
adc
inc
ret
cmp
xchg
jae
ja
add
jno
jge
arpl
sbb
pop
lret
stc
mov
adc
mov
add
ds
sub
imul
mov
les
adc
xor
inc
pop
inc
cmpsb
popa
bound
pop
movsl
fwait
enter
mov
orb
and
push
xchg
lods
lahf
sub
mov
cs
dec
sub
dec
lods
outsb
orl
mov
jnp
pop
add
pop
les
fistpl
or
sbb
push
xchg
out
adc
inc
imul
jno
pop
mov
fistpl
pushf
or
jl
adc
push
pop
rcrb
or
rorl
movsb
dec
sbb
out
imul
push
out
pop
push
icebp
enter
push
in
lds
divb
push
fildll
loopne
mov
cmpl
fsubl
lods
push
jecxz
xchg
inc
push
push
dec
sub
in
pop
xchg
scas
mov
jae
frstor
inc
cs
in
add
mov
adc
jmp
ret
and
leave
loopne
in
or
fdivrl
in
fisttpl
repz
add
or
pop
popa
adc
push
and
aas
jecxz
gs
jnp
and
add
or
or
test
pop
cmp
jne
or
add
xor
jae
addl
out
sti
aas
pop
add
je
dec
or
adc
inc
xchg
sbb
outsl
test
sub
sbb
loop
push
or
lock
ljmp
lods
and
push
add
jo
sub
idivl
fcoms
or
and
adc
mov
pop
insb
scas
ret
cmp
add
sub
data16
add
and
scas
mov
mov
cmp
icebp
or
rorl
add
xchg
pop
or
jge
dec
mov
or
push
jne
mov
mov
adc
push
push
lods
orl
es
push
fimull
cld
adc
mov
adc
jno
adc
test
cmp
push
jle
arpl
inc
fucomi
xor
add
ret
xchg
insl
sub
jnp
jle
or
adc
mov
adc
jp
add
lds
test
and
add
adc
cmp
add
or
mov
and
sbb
ret
sbb
pop
leave
cmp
mov
adc
fadd
push
daa
nop
add
inc
sbb
mov
inc
push
add
dec
mov
mov
push
roll
mov
jae
icebp
xor
adc
inc
cmp
lea
push
test
enter
jg
or
xor
adc
call
sbb
dec
pop
add
jno
adc
js
xor
mov
filds
ja
mov
or
out
xor
sub
leave
or
or
push
mov
dec
sbb
mov
pop
fwait
movsb
pop
daa
mov
mov
int3
lret
fcmovnbe
rclb
add
adc
pop
add
dec
mov
fstl
cmc
imul
xor
out
push
lret
pop
out
mov
retw
nop
push
mov
outsl
popa
mov
adc
dec
push
or
adc
adc
sbbl
popa
fidivs
lods
jne,pn
gs
xchg
xor
sub
mov
lea
out
int3
mov
inc
sbb
and
add
and
fsubrl
inc
scas
lret
or
sub
add
iret
xor
cmp
int3
hlt
add
and
faddl
test
add
push
aaa
push
xchg
adcb
leave
in
push
sub
xchg
xchg
je
cmpsl
fisttps
jbe
sbb
pop
or
sbb
push
int
jg
enter
mov
jmp
push
mov
mov
fldl2e
add
xlat
call
inc
repnz
or
mov
sbb
fs
xchg
mull
imul
mov
cmove
sbb
pop
or
je
pusha
popa
adc
inc
lahf
enter
inc
inc
lahf
int
in
and
and
or
push
xchg
sub
outsl
fcmovb
add
mov
scas
xchg
out
jge
add
add
es
inc
iret
ja
movb
jne
xor
jg
mov
pop
push
xlat
into
push
dec
repnz
add
xchg
inc
xchg
imul
inc
sub
aas
adc
xchg
adc
movaps
lret
xlat
jne
mov
xor
inc
or
inc
movsl
mov
sti
push
dec
mov
jecxz
in
adc
jmp
aaa
pop
pop
inc
cmp
jl
inc
add
xor
mov
pop
jmp
jb
int
and
push
das
andw
and
flds
or
mov
inc
and
iret
push
lea
or
and
je
push
ja
add
xchg
add
xchg
lea
jno
iret
pop
das
xor
sbb
lock
jo
add
fnstcw
inc
pop
jb
or
adc
les
adc
adc
push
xor
or
and
push
lock
testl
mov
jae
sub
dec
cs
add
xlat
data16
jp
daa
lret
dec
mov
xchg
inc
mov
cmp
test
xchg
sbbl
pop
cmpl
orl
incl
adc
mov
das
fstp
clc
mov
pop
ret
jg
adc
loope
ret
xorl
jo
orb
leave
jge
add
pop
push
push
inc
call
push
movsl
inc
scas
jo
icebp
cmpsl
dec
fsubp
and
mov
ret
out
sub
jnp
cmpsl
jge
inc
data16
inc
sbb
fsubl
dec
adc
add
movb
adc
and
dec
jnp
push
jo
sarb
jo
and
sti
fmull
insl
imul
test
push
jo
inc
shlb
mov
mov
inc
rorl
inc
bound
decl
ficoms
cli
add
ficoml
in
int
inc
lret
call
nop
push
imul
in
lahf
jo
movsb
pop
rcl
xchg
cmp
jl,pt
aas
sub
rcll
cmp
add
mov
test
cmp
xorb
inc
or
pop
gs
clc
fsts
shrl
cmp
push
add
push
or
push
fs
xchg
add
out
loope
shrb
pushf
imul
fdivs
sub
pop
mov
jg
xor
dec
dec
push
xchg
int3
sub
push
mov
xor
xor
mov
xchg
rcr
fcomps
in
pop
lea
dec
sbb
clc
xor
test
arpl
lock
or
xor
ss
rolb
xor
divb
leave
xor
jecxz
movsb
inc
ljmp
push
adc
add
leave
les
xchg
push
outsl
lds
repnz
scas
mov
push
and
movsl
dec
mov
arpl
xlat
out
mov
dec
jne
and
out
pusha
icebp
jbe
clc
hlt
dec
add
xor
xchg
ret
call
sbb
xor
callw
push
lahf
shr
rcrl
pushw
inc
xchg
pop
fsubs
into
or
cmp
xor
mov
sarb
loope
fimull
jne,pn
jl
iret
shlb
push
sub
dec
rcrb
mov
sbb
sub
mov
add
ret
mov
nop
push
jecxz
shlb
hlt
add
das
pop
lret
mov
jmp
mov
xor
mov
subl
cmp
cmp
clc
fsts
lret
mov
cmp
mov
cld
test
pop
pop
test
jno
xchg
inc
adc
outsl
sbb
adc
sub
pop
and
nop
cmpsl
push
cmp
cmp
add
cmpsl
and
test
orl
dec
jle
push
mov
and
outsl
and
inc
test
dec
dec
cmpsl
jo
xlat
pop
push
pop
mov
fwait
pop
lock
lods
cwtl
mov
cmp
xchg
idivb
and
pop
mov
shlb
dec
leave
arpl
fwait
pop
xlat
xor
test
xlat
pushl
pop
in
add
icebp
dec
and
sbb
icebp
dec
mov
and
inc
ret
and
out
xor
xchg
sbb
repz
clc
push
push
js
shll
cmp
inc
push
and
stc
pusha
xlat
mov
fdivs
add
cmp
cmpsl
and
mov
add
cmp
pop
add
xadd
sarb
push
test
cmp
sti
mov
or
adc
xorl
not
and
aaa
int3
add
ret
xchg
or
test
into
aam
fnstsw
insl
ljmp
mov
lret
bound
adc
scas
enter
and
mov
pop
push
popf
and
cmp
std
sub
adc
xor
cwtl
int3
push
cltd
mov
fisubrl
xor
mov
lock
sub
icebp
je
ljmp
jo
imul
adc
mov
xchg
in
dec
jno
xor
mov
hlt
xchg
mov
push
pop
mov
dec
sbb
enter
adc
fcmovu
cmp
in
sbb
lret
sub
jb
xor
sub
and
xchg
and
pop
xchg
mov
pop
add
loope
pop
test
adc
mov
mov
clc
lds
jo
mov
sub
and
mov
sbb
je
in
dec
ret
sbb
in
push
adc
pop
xor
adc
sub
adcb
xor
fdivs
in
jo
leave
cltd
mov
loopne
sub
daa
cmpl
nop
push
mov
fstpl
add
push
inc
add
mov
push
test
sbb
jne
adc
xchg
cmp
sbb
fsubs
fdiv
push
ljmp
mov
xchg
je
sbb
int3
pop
jmp
leave
sbb
adc
gs
rcrl
mov
and
adc
adc
psubq
push
mov
mov
pop
pushf
jne
cmp
lret
sbb
add
shlb
sbb
adc
sbb
add
in
adc
pusha
sbb
push
jne
andb
fimuls
es
adc
or
sub
xor
mov
xor
imul
cmp
mov
dec
xor
adc
dec
and
fmull
sbb
and
int
add
cmp
fucom
cld
mov
xchg
mov
add
shrb
mov
jl
and
xor
pop
inc
add
loop
dec
inc
push
into
sbb
ret
insb
lods
movsl
in
push
sbb
pop
popf
and
out
or
ds
inc
mov
nop
mov
out
sub
out
enter
loop
jle
fidivrl
push
in
jno
fstps
jge
popa
sub
or
in
jo
jmp
stc
clc
adc
stc
sub
pop
jmp
test
add
loope
jl
dec
test
mov
aad
je
rcr
scas
mov
and
adc
jb
hlt
imul
add
sbb
add
inc
inc
cs
adc
insb
and
xchg
orl
adc
adc
push
jb
lahf
adc
loope
ret
pop
push
xchg
xchg
inc
fisubl
mov
or
xor
inc
pop
add
mov
add
lcall
mov
dec
lcall
push
shll
addb
xchg
shrb
inc
cmp
imul
sbb
and
daa
xchg
add
jns
fadds
xchg
sub
add
iret
shlb
sub
xchg
inc
sbb
dec
sub
shlb
notb
inc
inc
ss
sbbl
xor
pop
push
in
mov
inc
lea
sub
push
cmpsl
daa
cmp
sbb
jbe
in
insl
nopl
fwait
or
call
jl
ret
mov
ret
cs
push
mov
jne
mov
adc
das
testb
mov
pop
push
adc
cmp
jecxz
inc
std
xchg
push
mov
mov
or
cwtl
leave
adc
dec
add
or
push
lods
adc
inc
sbb
or
fcompl
mov
loopne
dec
lcall
inc
call
xor
mov
mov
push
aaa
push
cmpsl
xor
pop
inc
dec
dec
aad
mov
shl
lret
ret
add
in
mov
add
hlt
nop
clc
in
movsl
repz
sbb
pop
add
inc
xor
inc
jp
jnp
arpl
or
insl
add
js
sti
test
js
std
jl
ljmp
jne
xor
jmp
test
imul
push
jo
pop
or
data16
jno
xchg
or
test
scas
mov
in
xchg
cmpb
jbe
loopne
cwtl
jno
sub
test
adc
push
test
rorl
loop
inc
jmp
sbb
sub
dec
into
test
xor
ds
lock
mov
jb
push
roll
xor
sbb
sub
xor
rcl
test
sarb
adc
js
mov
imul
jno
and
mov
lret
mov
add
testl
inc
pusha
xchg
imul
and
mov
nop
mov
adc
sub
out
sarb
xor
cmpb
xchg
insb
push
push
push
or
mov
out
in
cmpsb
hlt
jns
adc
addr16
out
xchg
sub
testl
data16
out
scas
mov
or
push
dec
and
cmpsb
adc
jne
pop
mov
ret
jge
nop
xorb
xchg
mov
push
mov
movsl
out
or
mov
dec
jb
das
add
sub
cmpsl
jmp
hlt
lock
es
shrb
sub
clc
cltd
adc
sub
pop
loope
sahf
push
mov
subl
xchg
cmp
jge
int
imul
bound
xor
in
call
push
jmp
push
jo
mov
adc
push
ret
xor
aad
fstps
imul
cmp
shlb
pop
fwait
aaa
dec
inc
dec
repnz
in
ret
cmp
dec
js
test
in
inc
dec
inc
nop
rorl
in
mov
dec
pop
sahf
sbb
fists
mov
aam
testb
fnstsw
sti
sub
add
cmp
or
iret
xchg
push
or
mov
cmc
mov
jns,pn
inc
push
sbb
fmuls
into
sbb
cmp
push
addr16
jmp
mov
lea
pop
icebp
subb
out
push
sub
je
jb
bound
mov
lcall
aas
lods
jmp
xor
inc
mov
and
pop
pop
test
push
cwtl
idiv
inc
js
mov
and
jge
popa
adc
push
mov
xchg
mov
mov
push
pop
jae
add
adc
popa
les
pop
and
inc
rcl
add
or
les
das
in
imul
adc
xchg
repz
xchg
sbb
mov
or
in
xlat
adc
in
shrb
mov
add
push
sub
mov
loopne
aam
fwait
sbb
in
mov
fdivl
mov
mov
fsubr
xor
jns,pn
lea
shlb
mov
out
fnstenv
jo
sbb
dec
popf
add
mov
pop
xchg
addl
je
jae
push
mov
ljmp
cmp
jmp
xchg
nop
ja
gs
push
ficoml
xchg
sub
sub
pop
movsl
dec
pop
lds
or
fstpl
mov
inc
outsl
adc
inc
test
sub
add
int
xor
add
adc
push
orl
test
lret
aam
fidivl
sub
pop
jp
loopne
dec
je
in
inc
test
movsb
jmp
mov
shrl
ret
cld
mov
loop
pop
or
and
icebp
mov
adc
xchg
dec
outsb
push
adc
push
test
sar
ret
adc
mov
sub
and
inc
or
ret
iret
mov
and
icebp
sub
inc
pop
or
adc
and
int3
js
bts
jmp
mov
pusha
loopne
mov
icebp
orl
inc
jbe
rcrb
in
clc
pop
loope
push
or
push
adc
mov
dec
dec
mov
lods
xchg
mov
or
testl
add
fadds
stos
mov
or
inc
sbb
push
mov
and
adc
mov
cld
sbb
push
and
aad
jo
xchg
jecxz
adc
les
jae
negl
inc
push
adc
cmp
cmp
out
or
push
int
xor
out
or
jae
push
mov
sub
pop
push
inc
ds
adc
push
ds
dec
cmpl
adc
cmp
inc
add
cltd
cmpsl
dec
xor
or
pusha
out
cmp
imul
add
ja
add
add
test
lods
xchg
xchg
push
inc
mov
lcall
je
loop
cld
out
add
or
pop
dec
fsubrl
add
shrb
icebp
or
imul
mov
in
scas
cmp
leave
das
pusha
sub
popa
repz
pop
or
nop
mov
push
pop
fwait
bnd
mov
dec
inc
icebp
inc
test
pushf
push
test
mov
lcall
sbb
imul
push
or
insb
adcl
mov
pop
mov
fsubl
add
mov
mov
mov
xchg
jmp
das
lahf
fdiv
dec
pop
push
adc
or
cs
sbb
pusha
mov
pop
sbb
or
pop
lods
in
popa
mov
repnz
in
or
inc
dec
xchg
cld
xor
repnz
push
sbb
hlt
mov
mov
imull
push
jmp
pop
and
or
cmpsb
mov
ret
popf
sbb
xor
out
jmp
dec
loopne
fsubrs
xorl
xchg
repz
lods
push
pop
das
test
cmp
mov
sbb
or
inc
es
inc
aaa
mov
push
inc
push
push
outsb
test
movsb
sub
call
cmp
test
add
sarl
mov
inc
hlt
insl
shlb
push
pop
testl
lret
rorl
es
clc
pop
add
movsl
stc
inc
push
fxch
in
mov
mov
push
inc
call
pop
pop
mov
imul
inc
dec
arpl
call
sbb
adc
sbb
bound
dec
loope
push
add
or
add
adc
mov
sub
loopne
lea
leave
or
data16
jle
adc
fcompl
es
jne
add
mov
and
pop
jg
js
fidivs
call
shrb
popa
cmc
not
mov
sub
mov
pop
cld
pop
shrb
arpl
cli
inc
xor
test
dec
movsl
mov
inc
adc
rorb
outsb
inc
adc
repz
pop
jns
stos
in
jb
lret
in
push
pop
enter
clc
jno
outsb
popa
dec
lock
mov
lret
sbb
xchg
negl
mov
int3
and
add
daa
push
push
xor
mov
div
mov
bound
xlat
cmp
stc
dec
rorb
das
push
loope
mov
cmc
lcall
add
mov
sub
aas
sbb
xor
xchg
xlat
and
fs
add
hlt
push
popf
and
inc
push
hlt
stos
push
sar
shufps
fs
das
xchg
pop
pop
fwait
jbe
test
sub
push
cmp
movsb
imul
std
or
ret
aaa
dec
jo
lret
clc
nop
in
movsbl
pop
xor
fiaddl
cs
into
add
mov
imul
push
in
je
les
pop
or
fld
xchg
std
insl
mov
push
or
popa
iret
clc
push
daa
mov
cmc
pop
push
mov
push
mov
pop
lea
data16
sbb
dec
pop
ret
mov
imul
stc
in
test
jmp
pop
or
xchg
xchg
lahf
int3
xchg
movsl
mov
dec
or
dec
adc
fs
cmp
pusha
sbb
sub
push
int3
ret
mov
cmp
fwait
test
ret
adc
mov
je
pop
pusha
mov
and
ret
mov
bswap
xor
jl
or
sbb
cmp
jmp
aas
hlt
jl
adc
jg
mov
push
add
jb
ret
xor
jnp
testl
push
mov
and
mov
fwait
and
jge
mov
xchg
push
test
fisttps
adc
pop
add
pop
jb
or
or
pop
dec
mov
cli
cmpsl
xchg
ret
add
ljmp
cld
cli
fildl
add
shll
insb
xor
push
xor
mov
or
jno
fadds
jg
pop
adc
cmp
sub
test
xchg
sbb
cmp
mov
pop
cld
add
jmp
pop
push
add
sub
incl
sub
daa
cld
dec
movsb
push
loope
rcr
mov
and
xchg
insb
cwtl
andb
sbb
pop
mov
dec
sbb
and
shr
mov
inc
xor
cld
outsb
add
mov
dec
and
cmpsb
lcall
loopne
js
test
js
xchg
mov
lds
xchg
xchg
push
dec
mov
xchg
dec
cmp
rcrl
adc
adcb
or
lods
imul
pop
xor
std
adc
std
test
cmp
fists
je
mov
or
out
loopne
popa
pusha
pusha
pop
movsb
xchg
mov
outsb
or
mov
or
adc
rolb
pop
sarl
push
push
lret
jle
fisttps
test
jb
jp
add
add
out
cmp
xor
add
ret
fdivl
or
fdivrl
jnp
or
insl
xor
popf
sbb
push
push
fsubp
test
sbb
and
jg
sti
in
clc
orw
fldl
jbe
addr16
jnp
sbb
and
daa
sbb
cli
and
nop
scas
push
and
push
movups
xchg
aaa
adc
adc
cs
sub
xchg
int3
push
call
inc
out
stc
adc
push
cmp
cmc
xchg
inc
cmp
or
mov
and
jb
jnp
sbb
inc
xchg
jmp
repz
sub
adc
sub
xchg
lock
mov
outsb
and
and
dec
and
clc
aad
clc
mov
sbb
jmp
add
and
sub
pop
shll
cwtl
mov
js
les
sub
adc
shrb
orl
repnz
sbb
inc
push
adc
dec
in
add
jp
xchg
adc
sbb
pusha
dec
xchg
shrl
stos
lock
xchg
mov
dec
scas
sbb
adc
ljmp
lock
mov
es
jp
dec
xlat
adc
mov
xchg
clc
test
jge
adc
adc
lahf
scas
and
aam
and
or
push
jecxz
fsubp
push
js
rol
mov
setne
mov
lds
add
fs
in
lret
add
rcrb
push
test
inc
add
push
outsl
jo
cmpsl
push
je
or
xchg
ss
push
mov
push
inc
inc
add
movsl
mov
arpl
and
popf
decb
int
xchg
aam
pusha
or
movsb
enter
mov
lret
fdivr
dec
jne
cmp
jne
es
je
inc
call
dec
and
jo
dec
insb
or
fst
xchg
and
adc
je
mov
adc
mov
sahf
scas
mov
addr16
pop
movsl
ret
inc
or
cmp
cmpl
sub
push
mov
sbb
dec
aas
add
inc
dec
jne
or
and
test
mov
outsl
xorb
or
dec
push
lock
cmp
hlt
shll
fwait
sub
push
gs
cmp
or
and
xchg
or
add
test
add
and
add
and
dec
inc
dec
cmpsl
or
dec
mov
push
or
lret
sbb
inc
ret
push
xor
cmp
outsl
jge
and
decb
cmp
jg
push
dec
cmp
xlat
cltd
mov
xor
lret
jmp
add
xlat
clc
jnp
and
jmp
or
data16
andb
jmp
dec
add
ljmp
and
cmp
movsl
sub
lock
les
scas
fiaddl
mov
fs
mov
mov
pop
or
xor
gs
rclb
es
pop
xor
les
outsb
daa
or
or
adc
das
cli
mov
inc
jne
es
jne
add
psubb
jmp
adc
or
inc
and
test
insb
xchg
add
adc
or
mov
scas
aas
or
shll
das
add
inc
cmpsl
cwtl
push
pop
out
mov
cmp
or
cmp
test
inc
jl
push
jg
xor
pop
rcll
sti
sbb
int
out
push
sbb
or
sub
mov
fisttps
sub
add
add
sub
push
push
add
fimuls
je
call
sbb
jmp
scas
or
into
dec
sarb
sbb
push
or
cld
adc
out
inc
push
pop
sbb
lods
mov
xchg
lock
arpl
js
fmull
cmp
mov
iret
pop
push
sub
push
adc
arpl
adc
mov
xchg
pop
lahf
push
fwait
xchg
ret
aaa
dec
cmp
jle
rolb
or
inc
je
dec
push
fldl
out
sbb
subb
adc
out
cmp
inc
or
cmpsl
add
shll
inc
and
cmp
or
adc
dec
xlat
es
ret
cmp
jne
pop
adc
cwtl
popa
scas
frstor
wrmsr
adc
fnstcw
lea
sub
mov
shlb
mov
inc
adc
das
inc
jle
and
popf
and
rol
js
popa
iret
fbld
or
jno
or
add
xor
mov
cmpl
push
movsb
fiadds
inc
pushf
imul
and
and
stos
or
iret
ja
mov
pop
adc
clc
jmp
push
or
add
push
add
scas
add
lret
test
test
movsb
push
or
adc
test
mov
sbb
sti
inc
or
daa
add
xchg
loope
adc
push
adc
pop
test
arpl
lret
adc
lret
or
iret
flds
movsl
xor
dec
or
fisttpl
xchg
movl
fisubrs
or
mov
lret
mov
pop
aam
pop
or
sbb
adc
push
sub
mov
dec
sti
mov
stc
movsb
sarb
or
mov
push
adc
stos
xorl
mov
out
or
fwait
and
lret
inc
adc
sti
scas
cld
das
icebp
add
push
in
jns
fmull
pop
add
push
pop
addb
or
inc
pusha
daa
pusha
jns
sub
pop
loopne
decb
out
xchg
mov
and
imul
xchg
sub
addb
push
push
outsb
fadds
mov
ja
sarb
or
sbb
sbb
arpl
cltd
cld
incb
sbb
ds
jbe
in
fs
jnp
sub
in
inc
adc
ds
movsl
js
add
ret
cmp
mov
out
push
push
mov
dec
dec
daa
or
negb
jmp
ss
movl
sahf
inc
sub
repz
sbb
pop
arpl
adc
sub
push
pop
daa
or
rclb
push
jmp
mov
add
pusha
xor
xor
pop
outsb
dec
push
push
adc
andb
ljmp
sbb
inc
add
adc
or
dec
sub
adcb
ret
aaa
mov
adc
rorb
notb
pop
mov
adc
mov
pop
mov
aam
iret
push
mov
out
rorb
mov
pop
or
add
out
loopne
es
or
mov
add
sarb
and
fisttpl
mov
pop
or
cmp
or
sbb
mov
stos
adc
mov
mov
push
mov
sub
pusha
adc
mov
popf
mov
xchg
xor
xor
inc
xorb
xrelease
and
insl
push
adc
inc
pop
dec
lods
sbb
mov
push
mov
hlt
fistl
mov
mov
jp
pop
bound
sti
push
push
loope
adc
lock
fadds
test
sbb
push
outsb
cld
push
jo
fs
cmp
push
pop
pushf
cmp
push
popa
outsl
and
fimuls
lcall
pop
sbb
cmp
out
dec
inc
popa
bound
fisubrs
repnz
xor
xor
mov
lock
outsb
outsb
dec
mov
bound
cs
stos
push
add
aaa
pop
lea
sub
adc
lea
add
xchg
xorl
aam
pop
insl
rol
test
adc
sub
fistpl
adcb
sub
aam
xchg
clc
cmpl
jae
xor
and
xor
and
and
and
jg
or
enter
arpl
enter
data16
and
and
and
outsl
orl
push
push
push
push
or
enter
push
xor
and
and
and
pop
orl
inc
inc
inc
inc
or
enter
inc
xor
and
and
and
dec
orl
xor
xor
or
enter
ss
and
xor
fadds
leave
adc
xor
xchg
sub
cmp
ret
sub
add
cmpsl
insb
outsl
cltd
enter
sbb
mov
add
and
rol
add
sbb
pop
ja
dec
add
mov
or
sbb
sbb
xor
xchg
adc
or
jge
clc
sbb
out
lcall
or
rol
test
stos
adc
mov
in
dec
xor
or
xchg
in
and
add
fsubrl
je
scas
dec
mov
js
push
je
insb
sbb
je
push
data16
leave
adc
dec
je
arpl
adc
adc
add
cmc
imul
mov
inc
enter
jae
nop
das
loopne
push
fiaddl
daa
push
outsb
int
fdiv
scas
loope
cs
jo
outsl
sbb
cmove
push
mov
outsl
je
sbb
or
push
inc
jne
ja
jge
or
scas
inc
mov
fwait
testl
into
or
movups
fxch
inc
adc
out
in
out
imul
push
je
iret
insl
dec
outsl
jo
je
pop
inc
pop
mov
sbb
mov
aad
addr16
and
add
insb
insb
xor
insl
mov
fadds
xor
aas
cmp
gs
adc
mov
pop
lret
repnz
adc
push
add
mov
fisttpl
or
dec
mull
dec
bound
add
dec
jge
mov
shlb
or
push
out
jecxz
adc
addr16
pop
inc
enter
outsb
jb
jae
es
pusha
pop
mov
outsl
enter
pop
xor
push
faddl
sbb
xor
scas
add
stos
movsb
fisubrl
ja
push
aad
fcmove
or
sub
popa
or
xor
or
sbb
jle
dec
loope
inc
cs
imul
cmpsl
inc
xchg
fldenv
pop
imul
push
mov
test
int3
pop
mov
cmpsb
and
in
cmpsl
or
inc
adc
mov
push
push
cmpsl
inc
lods
loopne
sbb
xor
mov
in
aam
mov
lods
mov
xor
mov
adc
pop
aas
mov
adc
decl
cwtl
inc
add
and
das
loop
lds
dec
das
aas
push
push
dec
gs
mov
and
mov
cwtl
cwtl
ret
add
test
sub
jmp
xorl
add
aas
jecxz
les
addb
popa
and
mov
xor
and
mov
sbb
imull
xor
add
xchg
cmp
pop
sbb
les
jl
and
sarl
test
inc
add
jl
cmp
add
add
add
xor
cmp
adc
jl,pt
test
fimuls
push
add
push
inc
je
sbb
sbbb
pop
and
js
add
push
xor
xor
mov
nop
sahf
pop
sbb
jb
ret
add
add
or
xor
lock
jbe
mov
add
pop
xadd
cs
ds
daa
insb
aaa
inc
shl
and
mov
pusha
cmp
aaa
negb
sbb
pop
sbb
inc
fwait
sub
movsl
sub
adc
inc
xchg
add
sub
and
dec
pop
int3
repz
sub
push
or
or
aad
dec
add
rcrl
sbb
ss
imul
mov
fdivrl
and
pop
sarb
adc
mov
ret
shll
adc
das
or
int
jp
aam
sbb
pusha
mov
fisubrs
xchg
mov
sti
mulb
repnz
rcrl
pop
int3
push
sub
mov
add
mov
push
inc
decb
mov
mov
push
xchg
push
cwtl
push
pop
sbb
pop
imul
outsb
pushf
inc
and
add
pop
adc
or
or
and
leave
and
sub
nop
dec
sbb
push
shrb
paddsw
aas
loopne
push
push
xchg
gs
insl
popa
addr16
test
leave
sysenter
inc
lods
je
cld
sbb
pop
mov
push
or
sahf
sbb
mov
mov
inc
mov
mov
adc
mov
push
dec
jl
cld
push
dec
es
push
cmc
mov
dec
add
insl
jnp
pop
ds
jne
jbe
nop
ja
scas
mov
bound
insb
data16
inc
lods
mov
xor
adc
je
mov
push
push
push
push
xchg
popw
sbb
cmp
pop
lock
popl
pusha
push
dec
jnp
pushf
fimuls
push
or
cmc
mov
dec
pop
mov
pop
mov
inc
add
xchg
scas
xlat
sbb
mov
leave
jl
js
dec
es
jbe
xlat
clc
push
jl
push
push
das
jns
dec
xchg
cwtl
push
xchg
jnp
jle
xor
jns
mov
push
in
add
loopne
dec
pop
sbb
push
cmp
cld
adc
aam
cmp
popl
xchg
or
pop
pop
mov
dec
adc
popa
outsb
lcall
mov
mov
xor
rol
adc
incb
jne
mov
mov
ret
jne
or
mov
push
pop
adc
inc
mov
add
fistps
cmp
add
dec
cmp
mov
and
xor
bound
aaa
pop
test
push
je
sbb
jne
or
mov
adc
jne
or
into
mov
and
sbb
sbb
pop
test
lock
loop
or
xchg
dec
or
insl
ret
sbb
push
pop
and
decl
add
push
or
cmp
imul
enter
and
add
jns
or
lds
in
jmp
and
addb
in
lcall
cmp
sub
dec
jmp
inc
addb
addr16
cmp
hlt
mov
inc
gs
pushf
push
and
xor
into
add
add
push
sbb
fadd
inc
ss
mov
cmp
pop
xorl
je
scas
std
clc
add
add
sub
dec
or
pop
enter
and
sbb
inc
add
fisttpl
xor
xchg
mov
daa
dec
lea
xchg
sbb
sti
ret
pusha
fsubl
mov
je
and
push
jge
rolb
add
aas
fcomi
fmul
inc
and
repnz
jmp
imul
xchg
cmp
testl
sub
std
in
dec
sub
mov
pusha
mov
mov
pop
test
add
push
cmpsb
sub
jle
sub
sub
in
or
xlat
add
shrb
mull
data16
imul
insb
dec
jnp
inc
inc
add
rcrb
insb
fnsave
and
fwait
pop
push
xchg
jbe
add
pop
mov
xchg
gs
insb
pop
ficoms
cmp
addr16
imul
addr16
arpl
dec
test
pop
ret
gs
inc
iret
cld
and
push
lahf
jne
or
arpl
imul
jno
popa
mov
pop
pop
or
pusha
pop
jl
jns
add
popf
inc
or
ja
dec
int3
push
or
inc
dec
addr16
push
add
sbb
inc
pop
mov
addl
push
insl
mov
pop
imul
dec
lods
sbb
das
inc
push
addr16
jle
mov
outsb
inc
push
xchg
rcrb
dec
push
insb
pop
andb
fsubrl
or
pop
mov
je
bound
or
sub
xlat
sub
pop
xchg
push
mov
icebp
imul
xchg
in
mov
pop
or
jns
pop
rcll
lods
or
sub
jg
fbstp
aaa
adc
mov
push
pop
adc
jp
or
outsw
inc
imul
push
iret
push
outsb
jne
outsl
mov
jb
xchg
psrld
andb
das
clts
rcl
lahf
dec
cs
push
arpl
popf
push
sbb
mov
loope
mov
inc
das
jmp
popl
pop
add
or
add
or
out
pusha
and
or
pop
sub
lcall
fs
mov
sahf
pop
or
push
clc
clc
ret
or
or
sub
mov
and
pop
cmp
jnp
testl
dec
inc
push
push
inc
push
push
xchg
imulb
inc
push
dec
push
xor
notl
dec
inc
dec
dec
arpl
decl
inc
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
cld
imul
popa
out
inc
inc
xor
xor
pusha
loopne
test
and
dec
in
sub
inc
inc
dec
inc
xor
inc
dec
sub
clc
or
push
push
push
dec
sub
fisubrs
arpl
cs
idivb
inc
das
mov
push
push
test
ret
mov
pop
adc
push
leave
push
ret
xchg
push
push
dec
push
inc
scas
dec
inc
dec
dec
sbb
push
mov
cmp
inc
in
paddd
adc
inc
out
pop
or
ds
test
mov
jl
lds
jo
add
mov
jg
add
dec
or
sbbb
jne
add
add
or
xchg
jp
stos
pop
mov
lea
and
inc
dec
jne
and
mov
add
mov
dec
sbb
adc
pop
push
jo
inc
inc
loopne
imulb
jmp
add
loope
pusha
jg
dec
clc
push
dec
shlb
xor
andb
xchg
sbb
shlb
cwtl
es
int3
add
popa
je
adc
mov
aas
sbb
in
clc
xchg
or
push
adc
sub
push
test
inc
or
clc
push
sbb
test
jns
cwtl
in
ret
das
out
sub
out
push
subl
jno
mov
jmp
and
mov
jae
xchg
loop
dec
dec
dec
clc
sbb
sub
cmp
mov
mov
cmp
xor
psubd
fidivrl
cltd
add
pop
movsl
or
jae
jmp
and
sbb
push
cmp
je
mov
pop
push
fidivs
pop
cmpsl
mov
add
jno
fcoms
das
ss
add
fidivl
mov
aaa
xchg
shr
int
jne
cmp
enter
inc
sbb
inc
rol
jmp
adc
fnsave
add
inc
aam
add
inc
dec
inc
aad
pusha
add
pop
cmp
jns
mov
ret
mov
or
push
mov
dec
aas
push
cmp
icebp
jle
jmp
jno
xor
out
nop
mov
inc
fiaddl
pop
fcomp
add
out
push
lret
push
jb
jmp
sub
ss
dec
dec
or
pop
or
sbb
pop
in
jl
cmpsb
sbb
lcall
xor
enter
or
fimull
fistl
icebp
or
mov
repz
dec
push
movsb
test
add
inc
sbb
ss
lahf
mov
push
mov
and
je
stos
pop
mov
sbb
pop
xchg
testb
ret
cmc
dec
sarl
enter
subl
dec
or
inc
popf
in
cmpsl
push
cltd
dec
mov
push
push
xor
pop
push
addr16
pop
mov
inc
push
das
fcomip
ficoml
popa
or
jp
mov
mov
imul
mov
mov
lds
adc
and
xor
inc
xor
xchg
pop
push
sub
inc
ficomps
or
test
mov
loopne
add
xchg
movb
xchg
and
add
aaa
loopne
enter
int3
sbb
out
xor
xor
nop
inc
xchg
mov
xor
inc
jb
fnstenv
add
sub
in
and
add
xor
cmp
cmp
pop
roll
lock
xchg
rolb
sbb
add
push
xchg
push
cmpb
fidivrs
inc
sbb
movzwl
push
shrb
xchg
mov
dec
cmp
xchg
xchg
in
xchg
sub
hlt
ljmp
mov
das
sbb
dec
mov
lock
or
pop
add
pop
sbb
sbb
inc
dec
pop
or
inc
sub
mov
popf
and
je
xchg
add
xor
xor
nop
pushf
mov
lods
call
nop
outsl
inc
mov
push
xchg
test
xor
in
xor
push
cld
fimull
es
and
pop
mov
and
and
add
orb
test
mov
mov
mov
push
pop
xchg
fistpll
inc
test
sub
das
cmp
sub
scas
ss
sub
add
sti
enter
adc
lock
je
gs
ss
adc
or
jb
fucomi
add
hlt
lock
leave
push
pusha
ss
and
movsb
push
sbb
adc
nop
xchg
xchg
nop
mov
dec
jno
sbb
pop
adc
mov
mov
sub
std
or
inc
or
daa
inc
gs
iret
mov
inc
sbb
and
adc
xor
sbb
lods
adc
push
sahf
in
movl
lret
mov
sub
int3
mov
or
cmp
sub
xchg
inc
pop
cwtl
sbb
inc
and
lea
stc
inc
fs
mov
nop
inc
hlt
inc
jecxz,pn
or
pop
hlt
pop
dec
lcall
sbb
push
and
push
or
push
add
or
pop
or
or
sub
push
push
or
push
sub
test
or
mov
push
leave
mov
cmpsb
sbb
es
in
idiv
add
sbb
jecxz
dec
shll
mov
dec
lret
icebp
les
xor
fcmovnb
inc
test
int3
xchg
and
or
add
sub
mov
cmpsl
add
and
adcb
adc
mov
jo
xor
arpl
ds
cmp
test
or
jge
cs
inc
repz
push
imul
lea
repnz
rclb
xlat
pop
push
mov
cmpsl
pop
daa
dec
nop
push
sbb
popf
push
ret
orb
nop
in
shlb
into
inc
cmp
loop
inc
es
in
mov
and
fdivs
pop
adc
push
xor
jae
push
inc
cmpsb
pop
insl
aaa
cmp
xor
mov
js
int3
cmp
dec
mov
cwtl
inc
fldl
sub
shl
rorl
arpl
inc
pusha
popa
ljmp
cmp
dec
dec
and
adc
add
xchg
pop
repnz
in
pop
push
dec
cmp
shll
push
adc
inc
xchg
pop
dec
push
cwtl
lods
dec
inc
xchg
jno
jo
mov
mov
shlb
add
loopne
adc
das
jge
mov
iret
add
push
add
scas
sbb
jae
dec
mov
and
std
or
cmp
je
mov
test
fistl
aad
movsb
jne
dec
and
stc
shlb
faddl
ret
aas
es
or
sub
aaa
add
andb
add
dec
or
arpl
mov
out
push
dec
cld
jg
test
or
shll
sbb
mov
sub
loop
push
rolb
adc
jne
push
rol
mov
mov
push
add
notl
or
mov
and
xor
push
xor
add
mov
mov
or
pop
add
push
cwtl
nop
data16
adc
pusha
xor
andl
addb
and
push
lods
sbb
push
movsl
pushf
inc
dec
dec
push
mov
dec
add
pop
pop
notb
je
xor
dec
add
dec
mov
sti
jo
or
pop
push
push
jnp
aas
push
pushf
nop
sbb
enter
inc
mov
mov
fisubrl
mov
pop
pop
jb
movsb
jbe
aas
inc
rclb
jne
mov
ja
data16
mov
xor
pushf
ja
rol
pop
dec
add
push
lret
aam
push
rolb
xor
movsb
adc
pusha
dec
sub
das
lea
inc
jnp
pushf
or
aaa
jmp
mov
add
int3
adc
lret
xorl
add
scas
mov
mov
inc
repz
jge
fnstcw
cmp
adc
in
dec
push
nop
in
inc
lods
push
daa
addb
cld
test
sub
and
or
dec
insb
bound
pop
fs
cmc
lcall
imul
or
into
cmpsb
mov
bound
pusha
pushf
mov
popf
sub
push
int3
sub
dec
repz
fcomps
fstpl
xchg
sub
aam
jle
push
mov
mov
out
pop
push
in
or
lret
dec
fistl
adc
adc
movsb
cmp
adc
mov
jmp
jg
sub
or
add
jp
std
add
mov
mov
loopne
clc
mov
sbb
xor
not
and
lock
adc
and
data16
hlt
insl
adc
mov
inc
jecxz
cmp
bnd
mov
adc
sbb
push
push
xchg
test
cmp
orl
inc
inc
mov
xor
sub
sub
xchg
mov
xchg
or
sbb
sti
inc
rorl
andb
add
cmpsl
fdivrl
lock
cmp
hlt
inc
push
push
jge
out
pop
mov
push
mov
fsubl
and
shrw
pop
push
sub
dec
jmp
jns
cmp
dec
xchg
sbb
add
sbb
inc
in
sub
inc
das
and
lea
jb
popf
jo
js
xchg
loopne
movb
adc
mov
data16
arpl
stos
dec
out
push
inc
cmp
loopne
pop
movsb
leave
inc
pop
call
push
dec
cmp
push
mov
adc
add
lea
pop
or
lea
lea
xchg
ljmp
mov
mov
add
add
mov
mov
add
dec
ss
or
loopne
sbb
add
imul
dec
push
xchg
gs
adc
mov
pop
pop
sti
outsb
sar
add
jne
cmpl
or
push
dec
xchg
sub
add
popa
add
push
sub
imul
int3
jp
adc
mov
mov
adc
dec
js
and
cmp
mov
bswap
shr
adc
bnd
cltd
push
sti
mov
mov
sub
shl
mov
mov
jmp
pop
clc
adc
outsb
movw
popa
xorb
inc
fwait
and
ficomps
inc
add
xor
push
mov
sarb
mov
iret
ss
jle
cmp
or
sbb
rolb
aas
push
inc
or
aas
call
in
sahf
inc
mov
sub
insl
loopne
lahf
pop
push
cmp
leave
dec
imul
jmp
mov
insl
xlat
addr16
or
dec
repz
and
lea
orl
jecxz
ljmp
cmp
stc
or
mov
or
push
or
out
icebp
dec
or
inc
mov
and
or
cmpsb
inc
sar
jecxz
mov
daa
pop
mov
add
mov
data16
xor
and
pop
and
adc
push
addr16
mov
dec
xchg
test
push
aas
and
repnz
and
ret
adc
adc
lret
into
xchg
push
mov
add
adc
cmc
pop
adc
add
outsb
mov
xchg
mov
xor
xor
push
or
gs
daa
add
add
push
scas
jns
inc
jge
divl
push
push
in
sub
xor
xor
or
push
dec
jo
and
and
xor
mov
popf
fcmovnbe
push
adc
push
push
scas
jne
fisttps
sub
leave
faddl
jbe
sbb
test
jge
insb
add
aaa
call
sub
add
cmp
in
jl
cld
push
pop
js
bound
lock
dec
xchg
jl
hlt
jl
dec
push
push
cld
push
cmp
add
lcall
add
add
pop
inc
and
dec
lods
xchg
movsl
movl
or
push
dec
popf
test
xor
add
leave
add
push
test
pop
in
dec
mov
nop
push
mov
mov
cmpsb
add
pop
jmp
xor
sbb
add
mov
lods
sbbl
shrb
dec
pop
jns
pop
add
cld
mov
or
pop
add
movzbl
sbb
lock
inc
dec
adc
into
rol
or
out
imul
test
jle
cmp
jl
aaa
mov
cltd
and
cmp
jg
shlb
out
jl
pop
clc
jle
enter
mov
mov
fists
add
addr16
xchg
jge
jae
lock
or
scas
jle
enter
or
jne
jge
add
push
popf
pop
inc
push
and
inc
movsb
pop
fisttpl
cmp
push
xchg
mov
fcomp
mov
xchg
xchg
fs
in
ret
sbb
scas
fisttps
test
enter
arpl
and
mov
dec
fmuls
pop
outsb
aas
imul
push
push
test
cmc
mov
mov
inc
ret
xchg
inc
ljmp
jg
or
jl
push
cmp
ja
lea
lea
mov
mov
insl
jnp
cmp
jne
cmp
pop
add
or
fsubs
xor
stos
popa
push
cli
push
dec
inc
clc
add
in
add
sub
jp
or
pushf
mov
mov
imul
and
or
xor
enter
arpl
push
sarb
mov
or
xchg
pushf
sub
int
sahf
jne
sbb
mov
push
jb
adc
dec
jecxz
mov
lods
or
ret
pinsrw
mov
lret
into
mov
insl
leave
sbb
lods
aas
lods
cmpsb
adc
mov
mov
or
xor
sti
cmp
mov
push
js
and
adc
shll
push
cmp
sbb
fwait
jno
inc
aam
sub
ret
scas
xor
daa
mov
push
mov
push
push
outsl
nop
pop
pop
mov
adc
add
fcomps
sub
loope
clc
sub
popa
popa
popa
dec
mov
fldl
mov
add
add
cmovs
push
jg
dec
loopne
sub
jmp
int
jne
and
jae
jae
jmp
xchg
adc
or
and
and
or
xor
inc
and
cmp
lret
jae
pop
add
sbb
mov
inc
scas
jae
orl
lods
rorl
add
push
push
fisubrl
sub
imul
add
xor
add
sub
adc
fistpl
sti
xor
repnz
pop
cmp
je
mov
pause
inc
add
add
sbb
lahf
fs
pop
sbbb
rclb
imul
jmp
dec
pushl
imul
aam
das
pop
fs
xorl
push
push
xchg
cmp
push
inc
je
mov
popa
sub
clc
and
mov
and
add
test
ret
sbb
mov
and
mov
cmpsl
lods
mov
jne
aaa
movsb
in
sbb
lods
dec
mov
dec
pop
add
add
out
or
mov
pop
push
pop
in
hlt
cmp
and
in
push
dec
pop
add
sub
shll
call
aaa
cmpsb
add
xchg
pop
loope
xor
lret
repnz
test
rol
and
ds
add
mov
lods
sbb
add
repnz
or
xor
sti
pop
pop
lods
mov
mov
or
lods
pop
pop
inc
andb
push
mov
cld
in
cmp
mov
push
lods
mov
test
test
dec
hlt
xor
bnd
fsubr
in
movsl
mov
lock
sahf
push
hlt
jle
leave
fsubrl
clc
call
xor
inc
int3
orl
xor
outsl
repnz
dec
adc
movb
cmpsl
adc
jl
mulb
push
mov
aaa
pop
adc
icebp
mov
adc
mov
rcll
sbb
adc
adc
push
xor
push
xor
nop
add
and
fstpt
imul
xor
int
movsb
inc
push
inc
or
xchg
adc
or
cltd
or
adc
mov
or
jno
je
sub
lods
pop
xor
int
inc
xchg
gs
add
int3
cmpsb
adc
pop
clc
mov
inc
dec
hlt
and
push
in
hlt
rorb
jmp
pop
adc
out
addr16
xor
fsubl
in
pop
jne
cmp
cmp
add
sbb
nop
fsts
pop
aad
cmp
aas
mov
xchg
mov
ret
orl
shll
add
leave
push
shr
xor
mov
mov
push
pop
or
push
adcb
or
cwtl
sbb
pop
repnz
push
adc
pop
ret
fbld
shll
pop
or
jbe
jg
fcoms
fst
push
and
mov
rorb
out
pop
repnz
adc
cmpl
pop
nop
sbb
popf
inc
push
pushf
push
push
pushf
rorb
cmc
or
mov
pop
sub
cmp
movb
mov
dec
mov
dec
dec
or
test
bound
push
add
jl
xor
or
or
inc
in
mov
xor
xor
fdivrs
dec
sbbl
sbb
mov
ret
popf
xorl
int3
and
in
mov
xchg
es
ret
popa
mov
xchg
jns
sbb
pop
push
cmp
sbb
movsb
or
mov
aas
add
movsb
mov
push
pop
pop
xor
in
mov
out
inc
add
push
aaa
orb
mov
loope
cmpsl
iret
sub
pop
mov
sub
adc
das
sub
punpckhdq
xor
sub
outsl
pusha
aas
mov
xor
pop
arpl
adc
arpl
int
rclb
inc
pop
pop
xor
adc
ret
add
mov
mov
jo
dec
or
and
push
pusha
push
adc
pop
dec
faddl
xchg
pop
int
mov
jo
fwait
pop
fs
pusha
push
loope
dec
push
add
xchg
insb
dec
pop
adcb
addr16
and
xor
js
dec
add
jne
and
adc
adc
pop
mov
ret
inc
test
cmc
ret
xchg
lea
scas
add
das
cmpsb
cmp
je
mov
mov
mov
pop
fistl
paddq
sbb
mov
pop
xor
addl
repnz
push
sub
sahf
xor
or
pop
adc
pushf
mov
ds
stc
jp
movsw
pop
and
sbb
mov
jle
lock
push
ljmp
add
nop
inc
mov
cmp
push
sub
testb
je
cmp
pop
cli
adc
stc
lea
movl
pop
lahf
pop
mov
dec
pop
call
adc
cmp
or
stos
pop
loopne
or
loopne
mov
mov
adc
and
int
and
inc
jne
cmp
sbb
add
jae
nop
dec
addl
fidivs
mov
subb
mov
and
and
loop
pusha
xor
pop
loope
inc
mov
inc
adc
inc
test
scas
out
nop
inc
loopne
out
or
dec
arpl
cmpl
test
mov
neg
add
call
das
add
sub
and
xchg
inc
xchg
push
sbb
dec
mov
out
push
fmull
test
or
adc
inc
push
and
lods
ss
fistpl
stos
mull
int
cmpsl
push
or
enter
push
and
addb
out
call
aas
cmpsl
hlt
mov
xchg
cld
pusha
stos
aad
xchg
in
nop
add
or
mov
je
scas
ret
dec
rclb
or
cmp
and
or
jae
ficompl
mov
cmp
outsl
cmp
je
mov
sub
mov
pop
daa
sub
push
adc
push
shrb
imul
inc
mov
xchg
dec
cmp
fbstp
addl
sbb
subb
dec
dec
cmp
jne
mov
add
xchg
test
mov
or
adc
cmp
adc
dec
xor
add
and
dec
pop
nop
pusha
sbb
fsubrs
fldt
outsl
jg
add
in
mov
pop
or
imul
sub
xchg
loopne
add
das
xchg
add
add
arpl
mov
jg
sub
push
jo
call
int3
mov
xchg
adc
mov
notb
jnp
test
mov
add
lods
jmp
push
inc
add
and
sbb
xchg
push
or
pop
loopne
mov
push
mov
ror
sbb
mov
xor
je
std
loopne
add
mov
add
dec
and
inc
decl
inc
xor
push
push
stc
push
inc
and
repz
rcrl
movsb
mov
jbe
cmp
sub
int3
or
xor
xchg
and
and
outsl
sbb
daa
mov
pop
aad
test
scas
jge
jle
call
add
into
mov
jg
mov
push
dec
sbb
lock
sub
jg
sbb
andl
test
add
sub
xchg
outsb
push
shlb
repnz
xchg
stos
add
rolb
lds
or
clc
fsubrs
std
pop
out
dec
mov
bound
dec
shlb
ret
lret
sub
repnz
push
dec
inc
bswap
push
mov
cs
lods
loopne
ds
mul
add
pop
dec
inc
addr16
loopne
stc
pop
nop
push
cmpsb
leave
aam
scas
mov
mov
bound
movb
pop
test
or
movsl
jno
sti
dec
and
ds
push
psubsb
movsl
pop
lahf
pop
sub
inc
xchg
int
push
orl
cmpsb
lock
fwait
push
mov
or
lock
sub
sub
hlt
jns
popa
cmpsb
lods
popa
in
popa
repnz
inc
and
rorl
lret
enter
or
fdivrs
dec
movsb
pop
cmpsl
add
movl
and
pop
sbb
inc
ja
clc
dec
push
cmpb
jne
pop
fstpl
mov
mov
mov
in
icebp
in
sub
daa
xor
lcall
in
lea
rorl
les
scas
push
add
add
adc
insb
std
jmp
add
iret
add
inc
and
and
xor
cmp
dec
test
xchg
bound
ret
daa
push
adc
daa
mov
xchg
in
lods
popw
sbb
push
lods
and
jmp
adc
pop
and
movsb
stc
mov
jne
adc
push
test
loope
push
rolb
xor
and
clc
mov
push
mov
sub
ret
and
or
movl
push
movsb
add
js
test
ficomps
clc
inc
jl
cld
dec
test
sbb
inc
pop
dec
mov
or
push
add
pop
mov
clc
icebp
movb
fmuls
pop
mov
loopne
push
orb
adc
sahf
push
cmpsb
push
sbb
or
xor
pusha
sbb
lret
int
movsb
sbb
test
mov
or
push
inc
ret
rol
repnz
dec
xor
inc
or
push
cmp
inc
mov
or
decl
sbb
loopne
ljmp
out
push
sub
dec
sub
scas
rorl
xor
ss
es
les
ret
les
cwtl
cli
shr
push
dec
pop
movsb
jmp
fisttpl
outsb
push
cwtl
add
push
mov
loopne
out
nop
pop
inc
cmp
sub
leave
sub
add
arpl
inc
loope
mov
xchg
int
add
pop
inc
or
clc
popa
pusha
enter
pop
push
or
aas
dec
inc
or
inc
leave
out
insb
out
inc
sbb
pop
and
push
add
cs
pop
mov
sbb
adc
fildl
rclb
mov
int
add
andl
ret
mov
mov
adc
js
pop
mov
jmp
jb
jge
adc
popa
pop
aad
xchg
arpl
loope
push
loopne
jle
addl
push
sbb
and
mov
lcall
and
les
pand
sub
fidivs
cmp
daa
lea
sbb
insb
add
jnp
add
cmp
or
subl
adc
adc
xor
inc
xor
xor
add
cs
pushf
insl
outsl
adc
push
mov
mov
jo
popa
adcb
push
push
add
add
js
jmp
loopne
dec
push
loope
and
sub
bnd
jmp
into
clc
aaa
sbb
das
pop
push
xchg
push
add
aaa
push
and
pop
mov
xor
mov
or
sub
fwait
mov
nop
jmp
ja
dec
jecxz
add
sub
sbb
adc
push
int3
rclb
pop
mov
xchg
jge
mov
dec
pop
fists
mov
push
jbe
cmp
test
add
loop
sahf
dec
inc
or
jge
and
das
jnp
jmp
adc
push
ja
jae
add
adc
test
mov
push
sub
test
scas
cmp
jne
daa
sbb
outsl
imul
push
out
xchg
push
outsl
adc
hlt
mov
jbe
xchg
xchg
dec
into
push
es
inc
push
pop
sub
adc
test
faddl
add
jmp
mov
pop
bound
mov
or
xor
popf
pop
mov
fidivl
adc
cmp
adc
mov
mov
aaa
inc
adc
sub
jge
dec
movb
pop
xor
call
sarb
add
sub
xor
add
jge
adc
ds
adc
mov
fnstcw
jnp
fsubs
fldenv
mov
aad
bound
pop
cli
stos
sbb
push
push
fsts
add
loope
shll
pop
push
sub
ljmp
sti
mov
sub
cmpsb
and
inc
xchg
adc
cmp
adc
movb
or
xor
push
lea
xor
add
and
and
adc
ficomps
rcrb
lea
pop
and
movb
cmp
jbe
jg
inc
and
das
je
pop
mov
xchg
lret
sub
xchg
sub
lea
mov
icebp
leave
stos
addb
jae
nop
mov
lock
or
inc
call
jbe
insl
mov
jo
push
rolb
sub
fists
or
adc
jnp
lock
insb
imul
xchg
in
push
ja
shrl
inc
sub
cwtl
add
in
insl
dec
nop
inc
xchg
gs
stos
or
xchg
es
jecxz
and
dec
xor
push
jo
dec
mov
rorb
fs
imul
aad
or
ffreep
adc
lcall
pop
dec
or
add
outsl
enter
mov
jae
add
jl
and
dec
mov
or
mov
pop
les
outsl
mov
push
or
out
or
loope
fidivs
push
sub
pop
pop
lods
loope
or
imul
dec
and
xor
seta
inc
pushf
test
mov
push
mov
hlt
pop
rclb
and
inc
dec
enter
sub
data16
push
loope
cmp
imul
daa
xchg
xor
and
jl
mov
sub
ficompl
and
ret
pusha
popa
fldt
fmull
jecxz
call
enter
out
or
je
pop
dec
push
scas
or
jne
or
mov
cmp
sbb
and
cmp
push
in
lock
ret
sub
push
or
or
clc
dec
and
mov
loope
lock
popa
add
pop
test
loopne
jle
xchg
xor
lock
pop
dec
sub
jbe
push
dec
xor
mov
xchg
cmp
cwtl
jns
in
jg
sub
add
or
or
pop
push
out
test
stc
jo
jno
into
imul
sbb
pop
cmc
aam
mov
and
mov
daa
push
and
lods
xor
sahf
sarb
cld
mov
repz
inc
mov
test
dec
xchg
add
inc
jg
dec
repz
jno
dec
pop
shll
aam
xchg
movsb
and
or
push
outsb
sub
movsl
mov
add
or
insb
and
cmp
inc
cmp
popf
sbb
leave
dec
mov
sbb
xchg
xor
push
pop
mov
in
outsb
jbe
adc
sub
push
dec
and
fcmovbe
xorl
rcr
sahf
shl
insb
ficoml
sbb
and
mov
cmp
dec
cmp
mov
push
pusha
call
add
in
jb
adcl
sbb
and
test
dec
out
mov
gs
add
push
mov
adcb
or
cwtl
fadd
aas
data16
add
pop
or
pop
mov
push
push
pop
adc
fs
cmc
mov
sub
jle
inc
movsl
insl
cmpsl
gs
int
rcrl
mov
and
push
add
add
jle
data16
insl
fsts
sbb
loope
in
push
fisttpll
jmp
mov
inc
dec
xchg
jmp
mov
jae
pop
cld
add
lock
push
loope
lods
daa
pop
xor
fsubs
mov
pop
mov
xchg
jle
sbb
les
arpl
pop
pop
sbb
into
or
fs
pshufw
adc
xor
pop
or
jo
cmp
fadds
adc
sbb
loop
std
push
icebp
test
outsl
adc
adc
push
jo
xchg
int
test
loopne
xchg
mov
lea
out
adc
dec
adc
iret
or
pusha
mov
add
xchg
lea
xchg
dec
stos
orb
test
call
sete
add
sahf
loope
adc
add
mov
jmp
push
sbb
aas
fildl
dec
dec
inc
mov
pusha
lds
or
mov
push
and
mov
adc
pop
cmpsl
push
aam
xchg
add
push
add
insb
hlt
inc
and
inc
shll
repz
and
es
out
in
adc
xlat
adc
or
mov
push
sub
mov
stos
adc
pop
pop
arpl
daa
adcb
stc
jge
and
test
mov
lret
jp
xchg
xchg
push
ja
inc
add
push
pop
nop
cmp
dec
sbb
rorb
movb
leave
push
jno
rcll
pop
add
mov
addb
outsl
aam
jmp
cwtl
ret
adc
sub
cmpsl
and
imulb
test
hlt
shl
jnp
xlat
push
loopne
mov
dec
pop
insb
adc
xor
movsb
add
cmpl
jge
mov
mov
pop
dec
sbb
push
cli
push
push
push
add
push
adc
jb
jge
test
das
and
or
sbb
mov
mov
ja
test
imul
sbb
scas
fwait
imul
insb
repnz
jg
jp
decl
xor
sub
popf
and
ficoml
subb
int3
push
shrb
pop
in
imul
sbb
add
out
mov
bound
mov
adc
push
lods
sub
and
pop
inc
or
into
test
or
call
cmpsl
adc
and
inc
sbb
mov
xor
into
or
in
daa
and
sub
mov
pop
and
inc
mov
mov
xor
dec
ja
mov
push
add
loope
lds
adc
and
es
sahf
push
pop
inc
push
loopne
jle
test
add
add
cmp
xor
push
jnp
adc
je
aaa
pop
jns
push
sbb
jo
mov
test
mov
mov
sub
sbb
ret
cwtl
or
push
inc
xchg
dec
dec
imul
jg
dec
movsl
mov
fdivrs
movsb
and
xor
mov
or
mov
pop
push
inc
sub
mov
adc
jl
push
movb
mov
fs
movsl
sbb
inc
in
inc
stos
push
rorb
shll
dec
mov
mov
test
rolb
inc
and
sub
add
fistps
jmp
test
inc
cwtl
add
xor
jmp
adc
sti
mov
popf
pop
pop
test
ds
jmp
dec
or
pusha
daa
add
jge
xchg
push
sub
enter
movb
add
imul
ja
inc
sbb
cmp
add
or
mov
insl
or
fmuls
push
xor
or
test
push
pop
sbb
aam
adc
xor
xchg
aad
add
mov
adc
cld
and
js
push
popa
jge
adc
xchg
xor
cmc
adc
cmp
mov
cwtl
inc
xchg
lds
test
inc
ds
mull
in
or
ljmp
loopne
push
outsl
push
cmp
sbb
inc
test
popa
push
fldl
adc
adc
adc
in
pop
rolb
sbb
dec
adc
mov
pop
movsb
xchg
in
cltd
push
add
pop
mov
cmp
jnp
jo
or
stos
push
add
mov
sti
or
stos
and
mov
mov
mov
mov
xchg
outsl
sti
mov
mov
or
in
add
repz
push
popa
andl
or
les
xor
mov
and
jnp
jbe
sub
adc
push
les
or
fdivrs
push
and
cmp
aas
daa
push
or
cmc
lods
pop
pop
push
hlt
mov
dec
push
inc
mov
xchg
or
notb
or
enter
je
xor
cltd
lods
xchg
dec
mov
mov
mov
mov
jnp
dec
push
adc
cmp
lods
and
daa
test
jl
or
movzbl
jo
loopne
xorb
faddl
cmp
and
ja
mov
incl
insb
xorb
outsl
adcl
bound
push
test
and
mov
dec
mov
mov
mov
inc
sub
push
ffreep
inc
add
aad
add
out
mov
inc
push
mov
pushf
inc
sahf
andb
xor
fbld
push
lret
loop
jne
or
add
xchg
and
push
arpl
and
and
test
pop
js
xor
xchg
sub
out
lfs
out
and
outsb
das
imul
add
in
nop
test
cmpl
es
lcall
add
movsb
jo
inc
push
inc
add
push
inc
shrb
inc
movsl
mov
sbb
ficomps
and
jae
or
inc
inc
sarb
dec
sbb
inc
cmp
lods
xchg
lret
les
mov
jmp
lret
decb
ret
test
sbb
xchg
ret
sub
or
jae
pop
xchg
inc
lds
or
mov
cmc
push
dec
jo
insl
xorl
push
subb
aas
mov
in
and
mov
sbbb
icebp
inc
and
xor
shr
or
jle
test
jne
xchg
imul
xchg
daa
add
pop
xor
es
ss
call
in
and
out
xchg
cmp
inc
adc
adc
lea
es
mov
sub
jge
imul
repnz
xchg
sub
pop
in
mov
outsl
cld
rcrl
adc
ljmp
add
sahf
mov
inc
test
fsubrl
rcrl
jl
mov
ret
adc
mov
adc
test
xorb
in
inc
repnz
add
mov
sub
in
or
xor
es
sub
enter
ret
nop
cmp
jg
push
jl
jns
cmpl
inc
jb
cmp
cmp
ret
xchg
add
push
lcall
pop
and
push
jns
rolb
movsb
aad
fdivr
iret
add
xchg
xchg
out
jo
mov
jmp
sbb
fs
mov
fs
jo
arpl
or
push
iret
mov
push
ret
xchg
push
nop
mov
ja
movsb
sbb
cmp
mov
lea
dec
mov
lret
add
fisttpll
xchg
cwtl
pop
and
leave
xor
jo
push
add
rcrl
aaa
add
aad
inc
sub
fists
dec
or
adc
iret
jno
inc
lahf
jno
xor
outsl
stos
mov
rclb
pop
nop
lahf
outsl
in
mov
enter
mov
inc
in
iret
out
orl
push
dec
mov
enter
push
enter
or
jns
ret
ss
push
sbb
cmp
xor
push
sbb
sub
sbb
sbb
adc
nop
inc
push
adc
xchg
inc
adc
add
loope
outsl
and
in
call
es
inc
psubusb
je
mov
xchg
test
imulb
mov
pop
loopne
jbe
cmp
ja
add
cmpsb
sub
mov
xchg
ret
sbb
push
aas
inc
dec
adc
pop
and
mov
and
sti
fildll
je
movb
sub
into
int3
dec
xchg
sbb
jg
pop
add
aaa
dec
imul
out
inc
inc
sbb
and
adc
mov
jmp
mov
ret
adc
nop
test
dec
adc
adc
cmp
push
adc
or
jno
bound
push
push
cmp
pslld
adc
test
xor
dec
adc
xchg
cmc
adcb
or
jl
or
es
mov
adc
push
cmp
aas
pusha
xchg
xor
mov
inc
loopne
jle
or
push
popa
incl
jle
push
pop
cmp
dec
sub
add
add
lods
loope
das
sub
mov
pop
data16
and
sbb
and
and
push
addr16
es
dec
jmp
jmp
pop
ret
or
enter
push
cltd
sub
mov
pop
int3
ljmp
jmp
pop
lock
adc
mov
jnp
in
daa
adc
push
or
dec
sbb
in
adc
daa
adc
outsl
repnz
push
pop
sub
mov
lahf
ss
push
es
imul
xchg
jo
xlat
push
inc
or
push
xor
push
das
adc
ror
adc
and
jb
lock
sub
sub
std
dec
xor
loop
pushf
outsb
cmp
pusha
cmpl
jmp
popf
sub
xor
lcall
andb
pop
icebp
add
fists
push
lea
lea
call
mov
dec
jb
push
sub
and
fadds
not
scas
mov
push
dec
push
scas
andb
pop
cmpsl
sub
mov
add
andl
stos
inc
iret
cmpsl
sahf
out
push
sub
leave
rorl
adc
mov
push
pop
sub
scas
aam
jne
sub
mov
repnz
pop
push
xor
aaa
xor
pop
fsubrs
andb
test
sub
xchg
add
xchg
gs
pop
sbb
fcoml
push
add
push
fsubs
out
in
pusha
dec
pop
sbb
pop
lods
push
jo
sub
ss
sub
daa
pop
inc
test
lret
or
ds
add
adc
sub
jbe
mov
dec
lea
insl
jge
outsb
jne
dec
insb
popa
jns
push
jl
pop
jae
push
lods
mov
rol
stos
fdivrl
insb
inc
lcall
or
or
lea
clc
adc
loop
insb
int3
mov
push
inc
push
test
cwtl
add
inc
dec
dec
jns
dec
fdivrp
popa
xchg
sbb
push
and
sbbl
sub
nop
xor
sub
or
xor
xchg
testl
push
pop
rcll
mov
cmp
inc
push
dec
and
jl
mov
es
lock
or
push
imul
xchg
adc
std
lret
dec
adc
push
imul
outsl
or
pusha
jbe
dec
mov
andl
ficomps
xor
mov
hlt
lcall
pop
push
adc
addr16
into
jnp
andb
add
fmull
inc
sbb
in
int3
add
pop
xchg
cmpsl
mov
adc
sub
cmpsb
jbe
fcmovb
rclb
rclb
mov
add
push
inc
imul
fs
add
insb
xorb
xor
jl
adc
out
js
aam
cmp
lea
sbb
mov
sarb
or
std
cmpsb
mov
sub
adc
push
in
push
cmc
imul
and
xor
cmp
dec
leave
mov
ja
cs
pushw
push
aaa
subl
fnstcw
xor
push
add
dec
dec
mov
adc
inc
pop
mov
jno
cwtl
inc
or
and
push
movsb
push
ret
nop
out
cmp
or
in
cmp
jns
add
pop
mov
out
xchg
lahf
cmp
sbb
cmp
mov
jbe
subb
les
nop
rolb
xchg
imul
nop
push
push
test
adc
movsb
dec
out
push
in
adc
add
fdivrl
or
clc
mov
or
test
orl
pop
xchg
mov
aaa
adc
das
ja
pop
in
mov
adc
xor
inc
sbb
mov
push
call
or
cwtl
iret
es
fbld
push
movsb
push
push
sbb
adc
jne
xchg
in
push
lea
add
fnstcw
mov
leave
enter
inc
mov
adc
or
jnp
hlt
mov
xchg
or
jmp
inc
rcll
push
sbb
or
sub
sbb
icebp
xor
int
pop
loopne
mov
cwtl
push
popl
lods
jle
jg
push
push
out
shlb
rolb
adc
fidivrs
xchg
dec
loope
shrb
ljmp
pusha
lret
dec
repnz
es
les
pusha
sbbl
pop
adc
sbb
xor
scas
test
cmp
dec
repz
dec
dec
adc
dec
jmp
or
xorl
sbb
or
or
adc
je
adc
jne
push
xchg
mov
cs
popa
add
sbb
pop
sbb
adc
daa
mov
adc
std
push
xorb
push
mov
jo
mov
test
mov
dec
dec
nop
cmpsl
nop
pop
cmp
loope
or
test
xchg
inc
sbb
cmp
jle
dec
jne
mov
sbb
and
data16
into
into
add
xchg
xor
mov
mov
push
cmp
jb
lock
lret
push
add
inc
sub
or
outsl
xor
inc
popa
sub
push
shrb
mov
insb
push
xchg
test
push
daa
shll
fdivrs
mov
out
daa
xor
inc
mov
arpl
inc
mov
add
arpl
pop
loope
outsl
push
push
sbb
push
or
pusha
mov
frstor
add
sbb
push
dec
mov
push
mov
dec
add
dec
xor
pop
insl
jle
fwait
sbb
xor
adc
sub
das
fsubl
shr
cmpsb
imul
sbb
in
sbb
orb
mov
test
aam
dec
fcmovbe
push
arpl
sbb
dec
mov
arpl
outsl
lock
loopne
jle
movsb
xchg
addb
jmp
mov
cs
sbb
and
sub
popa
and
movsl
dec
dec
push
dec
mov
movsl
add
inc
test
adc
jle
inc
sahf
inc
jecxz
scas
adc
push
inc
adc
pop
push
lahf
sbb
mov
inc
rcrl
test
xchg
jl
mov
in
lock
inc
xchg
in
test
repnz
call
push
push
cld
loope
xchg
in
dec
push
dec
sahf
call
sbb
jnp
mov
mov
xor
outsl
fldcw
inc
loope
mov
rorl
nop
mov
mov
xlat
push
test
xchg
pop
lahf
inc
repnz
xor
sbb
push
and
pop
scas
in
leave
stos
dec
lahf
lock
dec
dec
test
sbb
mov
pop
mov
push
loope
sbb
ds
and
xchg
add
or
ljmp
sbb
mov
add
inc
hlt
sub
dec
je
or
sbb
pop
arpl
xchg
loope
and
lock
iret
adc
jmp
push
inc
adc
mov
mov
pusha
or
cmp
or
pop
and
and
cmpsl
and
push
scas
add
mov
inc
lcall
or
sbb
adc
push
adc
adc
xor
adc
sbb
add
and
jo
xchg
mov
dec
add
adc
xchg
dec
pop
iret
fwait
mov
je
mov
shl
mov
add
mov
out
pop
movsl
add
sarl
in
roll
adc
clc
jae
or
pusha
enter
mov
in
insb
sbb
fs
xor
push
ljmp
push
dec
std
lods
in
push
push
dec
imul
dec
push
fadds
inc
xchg
addr16
iret
outsb
pop
or
je
xchg
out
out
cmp
mov
inc
hlt
mul
mov
push
pop
mov
cmpsl
jns
dec
js
dec
xor
setns
dec
cwtl
cmp
and
push
adc
iret
jae
test
les
xor
pop
xor
sahf
inc
es
pop
sub
or
pusha
cmp
daa
and
jns
outsl
insl
arpl
mov
pop
or
adc
mov
inc
aam
sti
inc
out
inc
es
sub
add
xor
pop
scas
and
xchg
test
push
inc
outsb
dec
dec
dec
aaa
add
pop
push
pop
pusha
sub
adc
jnp
loopne
inc
pop
outsl
jae
push
jg
and
xchg
sub
dec
push
xor
fs
sbb
mov
xchg
add
fisubrs
xchg
adc
push
sbb
push
push
in
inc
ret
std
nop
clc
cmp
mov
insl
and
push
cwtl
adc
imul
dec
xchg
inc
push
imull
push
inc
loope
adcl
loopne
adc
add
sbb
sbb
lods
pop
out
inc
ret
push
pop
push
enter
fldenv
and
dec
cmp
es
fisubrl
cli
xchg
mov
xor
jns
sub
and
addr16
rclb
rolb
sbb
cmp
mov
sbb
flds
pushf
mov
pushf
cwtl
pushf
mov
pushf
test
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
fcomp
loopne
pushf
pushf
pushf
pushf
call
sahf
pushf
pushf
clc
cld
add
add
dec
dec
dec
or
adc
dec
dec
dec
sbb
and
dec
dec
dec
sub
xor
sbb
adc
push
test
mov
jo
push
mov
pop
pop
lods
adc
pop
arpl
ret
push
in
add
out
inc
add
xchg
mov
push
in
adc
je
mov
pushf
test
mov
mov
loopne
hlt
cmp
repnz
jae
iret
andl
pusha
lods
and
cmpl
enter
mov
pop
mov
enter
in
enter
repnz
int3
or
in
nop
shlb
aam
sahf
add
fadds
push
cmp
in
jns
in
call
sahf
in
pushf
lock
push
in
hlt
enter
inc
sahf
add
call
cmp
clc
add
scas
jns
in
or
sub
inc
sahf
add
cmp
in
nop
dec
sbb
sahf
add
and
and
sub
lahf
add
sub
xor
mov
ret
xor
xor
xchg
inc
pushl
xor
data16
xchg
aas
mov
ss
je
gs
gs
jo
cmpsb
nop
push
sbb
in
out
addl
cmp
fs
sbb
fisubl
jmp
adc
clc
mov
jo
sarb
push
popa
jb
jo
jne
mov
daa
test
je
jne
lock
or
sbb
xacquire
gs
addr16
mov
pop
dec
arpl
jae
and
add
ja
cmpsl
fs
sbb
out
dec
or
outsb
jae
sbb
or
inc
xchg
pop
and
insl
rcrl
sbb
xchg
push
rol
inc
pusha
pop
fists
push
adc
xchg
jo
xchg
imul
push
pop
push
sub
ret
mov
sbb
mov
xchg
cmpsl
mov
or
mov
push
out
cmp
sub
and
sbbl
add
daa
orl
pop
bound
xchg
aas
jno
insb
inc
pop
xchg
adc
das
xorl
and
inc
and
jns
mov
addr16
jne
insb
mov
xor
sub
inc
mov
ret
push
das
sub
popf
cmp
mov
inc
outsl
arpl
and
scas
loope
negl
pop
ljmp
outsl
pop
subb
fists
push
adc
cltd
cmp
push
insl
add
pmuludq
sbb
and
mov
repnz
mov
mov
sub
aaa
inc
xor
lods
xchg
jno
cmpsb
dec
adc
inc
repnz
cmp
xchg
pop
jb
add
mov
nop
add
dec
cmp
add
add
nop
jne
jl
nop
add
cltd
xchg
add
in
in
jb
add
add
xchg
pop
and
pusha
xchg
add
nop
push
fs
sbb
push
xchg
push
jnp
add
pop
sub
dec
push
pop
in
outsb
push
iret
mov
inc
adc
test
aaa
mov
jbe
pop
xor
sahf
push
xorb
add
mov
cmp
push
push
insb
push
mov
push
or
pusha
mov
roll
sbb
pushf
cli
push
xor
xchg
sub
push
fldenv
fdivr
push
mov
add
dec
gs
xor
pop
cmp
cmp
lcall
ficoml
mov
fimuls
mov
outsb
mov
push
push
lods
je
and
cmpsl
sub
inc
xor
cld
inc
ret
sbb
inc
sub
cmc
xlat
and
xchg
es
cld
dec
dec
pop
je
fucomip
je
jmp
rolb
cmp
js
cmpb
jp
test
push
sar
jle
inc
cmp
rol
jo
xchg
xchg
rcrb
cltd
xor
cli
mov
dec
sub
loopne
sbb
mov
sub
ss
add
sub
mov
hlt
add
negl
mov
dec
push
add
inc
push
xchg
adc
or
shl
xchg
pop
out
bound
sbb
sub
push
ja
add
je
pop
sub
mov
add
mov
sarl
call
nop
pop
aas
in
or
adc
aad
loop
dec
mov
roll
dec
leave
inc
pusha
sbbb
cltd
push
sub
mov
or
jbe
call
xchg
mov
pop
loopne
jno
add
push
adcb
push
push
sub
pop
mov
fcoms
ja
dec
pop
dec
dec
dec
add
mov
adc
arpl
addr16
les
pop
push
mov
pop
dec
outsb
inc
gs
pop
add
fbstp
pop
push
outsl
pop
or
and
lods
add
pushl
test
mov
mov
add
je
add
adc
aad
add
xchg
shrb
and
test
iret
cmp
cld
jg
sahf
loop
mov
aaa
insl
fs
addr16
fmuls
pop
inc
imul
xor
mov
mov
cmp
out
mov
inc
adc
test
fs
rcrb
xchg
sub
jl
imul
or
rorl
addb
ss
rorb
cmpsl
or
jbe
adc
mov
ret
mov
mov
adc
or
pop
mov
aas
or
mov
insb
xchg
mov
gs
xchg
cmpsl
sbb
js
sbb
fistpll
mov
mov
insb
inc
sub
pop
bound
or
inc
scas
and
shrb
xchg
jp
jg
mov
inc
sub
nop
testb
pop
push
popa
sbb
jo
pop
and
mov
pusha
push
add
jb
lods
push
jae
mov
or
imul
add
and
inc
pop
mov
jno
das
or
jmp
add
push
push
pop
incb
xor
jnp
leave
push
jle
stos
sbb
imul
sub
xor
xchg
lods
shlb
out
adc
cmpsl
xor
or
jmp
lods
or
cmp
push
cwtl
test
adc
aam
stos
and
jmp
sarl
xor
jnp
cmp
xor
inc
popa
cmp
nop
and
mov
xchg
or
mov
push
inc
or
out
fsts
xor
push
add
divb
jle
mov
sub
test
xchg
nop
popa
daa
inc
push
and
mov
push
sbb
and
es
sub
sbb
sub
sub
nop
inc
push
sub
push
sbb
adc
inc
push
sbb
adc
push
pop
sbb
sbb
sbb
sbb
nop
inc
push
sbb
push
sbb
add
inc
push
sbb
add
push
pop
or
sbb
or
or
lcall
add
push
push
push
dec
shll
push
add
fnstenvs
cld
mov
lcall
fsubl
aam
int3
adc
or
dec
shrl
lock
call
shl
xchg
fmuls
test
jl
je
xor
shll
mov
test
shll
dec
nop
dec
shll
xor
xor
shll
jo
push
shll
pop
or
cmpsb
pop
ss
add
cld
mov
imul
cmpsb
imul
cmpsb
imul
add
mov
aaa
adc
das
pop
mov
mov
and
jo
sub
test
mov
rolb
pop
and
int
test
mov
pop
or
cltd
aam
ds
test
push
mov
test
sub
andb
mov
fcoms
push
and
arpl
sub
es
inc
rolb
mov
divb
or
ret
dec
mov
repnz
or
out
aas
dec
push
push
lcall
xorl
cmp
dec
jae
ret
nop
xor
and
shrb
sbb
xchg
sbb
rcll
mov
pop
xor
nop
or
dec
sbb
jne
mov
mov
sub
and
cs
mov
in
pop
mov
rclb
xchg
and
push
in
mov
xchg
mov
mov
loopne
jg
iret
push
and
xchg
ret
das
xchg
dec
leave
pop
ret
dec
inc
sbbl
rol
movb
sahf
sbb
fstpt
pop
adc
enter
jnp
inc
int3
sbb
scas
shrb
cmp
fcomp
adc
aam
push
dec
leave
sub
roll
nop
subl
push
lock
ret
pop
fdivl
push
aaa
mov
out
cmp
push
push
push
or
fldt
jle
adc
inc
inc
mov
cld
outsl
jb
popa
je
fisttps
jb
data16
je
xchg
je
mov
fimull
jl
repz
xchg
mov
mov
and
xchg
inc
daa
loop
pop
xchg
je
and
cmp
daa
adc
enter
rol
loopne
or
xor
daa
repnz
outsb
test
cltd
fs
into
push
mov
aaa
push
aas
and
insb
add
cmp
xor
lds
jo,pt
push
mov
dec
enter
add
push
push
test
or
pop
add
xor
sub
insl
or
test
xor
daa
loopne
or
and
imul
arpl
add
mov
add
outsb
pop
arpl
lods
fnsave
push
adc
outsl
pop
js
ss
aas
arpl
pop
daa
jo
in
add
jb
popa
or
sbb
pop
jnp
dec
add
data16
daa
ja
leave
cmp
scas
imull
fnstenv
pop
jb
addr16
shrb
insb
push
mov
arpl
inc
pop
imul
into
sbb
in
sub
stos
outsb
insb
das
je
in
cmpsl
sbb
and
pop
ret
sub
mov
mov
jo
jb
insw
ficoml
outsl
dec
sbb
int3
push
das
add
ja
imul
pop
push
hlt
gs
ss
adc
idivl
adc
mov
cwtl
test
inc
pop
mov
cmp
mov
cmp
test
cmp
fistps
adc
xchg
push
sbb
negb
ret
int
daa
jl
xchg
inc
loop
add
add
lock
loopne
mov
scas
mov
js
xlat
mov
jl
or
sbb
das
aas
push
test
push
or
mov
nop
js
std
mulb
mov
rorl
pop
daa
cltd
sbb
call
jne
div
movsl
push
add
pop
jb
idivb
mov
adcl
mov
iret
sub
sbb
mov
lock
or
pop
add
nop
or
add
adc
mov
xchg
femms
into
in
bound
adc
adc
inc
int
push
stos
push
scas
add
dec
sbb
adc
sbb
mov
cmp
fildl
or
cmp
xor
test
mov
int
push
mov
loope
ja
int
repnz
leave
inc
push
lret
add
das
lret
mov
add
shll
or
or
or
or
shll
adc
xor
sbb
sbb
mov
jg
sbb
push
pop
and
and
and
or
fldcw
lcall
lret
adc
shll
imul
pushf
lods
mov
shl
icebp
add
adc
imul
imul
cmpsb
imul
ret
dec
arpl
addr16
sahf
andl
in
nop
or
add
pop
adc
sbb
sbb
sbb
sbb
nop
addr16
or
or
and
and
addr16
sahf
movaps
sub
push
in
adc
adc
inc
sahf
add
cmp
in
nop
cmp
inc
push
inc
sahf
add
pop
dec
in
nop
sbb
push
sahf
add
sbb
sbb
sbb
xor
sbb
popa
imul
bound
arpl
int
xor
fs
and
cmp
and
and
repnz
addr16
xorb
push
aam
xchg
cwtl
push
add
repnz
push
dec
outsl
bound
mov
dec
sub
cmp
fcomp
inc
pop
and
fwait
sub
into
rolb
mov
call
lret
push
fstl
je
or
pop
push
cmp
clc
push
adc
push
or
ljmp
sbb
lock
inc
aas
add
jg
int3
cwtl
test
addps
mov
lret
in
sbb
or
or
cld
mov
fmuls
mov
dec
int3
mov
dec
imul
in
and
sbb
inc
in
cwtl
dec
push
add
cwtl
jle
push
enter
out
jnp
lahf
adc
sbb
jecxz
inc
push
jg
into
jg
pop
mov
pushf
mov
mov
out
pop
xchg
sbb
xor
xchg
cmp
sbb
clc
je
mov
fcomps
enter
xchg
mov
in
aas
or
inc
fistpll
test
inc
fistps
lret
negl
add
pop
cwtl
lock
pop
cli
repz
pop
dec
pop
or
nop
push
mov
bound
pop
js
out
adcb
outsb
popa
xlat
clc
jae
sub
mov
mov
mov
frstor
pusha
cmpsl
nop
dec
ds
jge
cld
cmpb
sbb
gs
packuswb
dec
push
jns
leave
add
movb
and
inc
enter
mov
sbb
jle,pn
xor
cmp
sub
insb
fimull
lahf
js
or
jnp
sbb
dec
mov
rcr
loope
mov
xor
inc
mov
sbb
mov
push
jbe
push
and
aaa
fs
lods
jne
adc
aaa
push
pop
add
sub
and
mov
xchg
push
mov
push
jp
pop
fcoms
mov
xchg
add
add
adc
adc
lea
es
or
inc
sbb
lret
rclb
push
push
fnclex
ret
and
fadds
mov
and
clc
sbb
clc
push
cld
mov
xchg
cs
pop
dec
adc
clc
sbb
dec
add
iret
xor
cli
or
adc
arpl
pusha
adc
adc
paddb
movsb
cmp
aas
fisubl
jne
lcall
add
cmp
lea
call
cmp
pusha
inc
mov
lret
roll
cwtl
lea
mov
addr16
dec
aam
shr
adc
cmp
add
push
xchg
jo
mov
jl
lods
cmpsl
popa
mov
dec
aam
adc
and
xchg
dec
popf
ss
pop
test
push
jo
inc
and
xchg
adc
inc
clc
sub
pop
cltd
fs
dec
mov
jbe
addb
inc
inc
or
dec
aam
les
cltd
add
ljmp
inc
call
mov
or
inc
stos
add
and
dec
rolb
jne
inc
or
mov
sub
shr
and
or
leave
mov
test
ret
pop
gs
pushf
movsl
adc
das
cmp
aam
ret
pop
aam
and
add
sbb
or
add
push
out
aad
sbb
pop
push
in
jecxz
and
fisttps
fildll
inc
dec
sub
and
sub
push
pop
sbb
cmp
sub
sbb
and
xor
das
add
mov
sub
adc
add
adc
mov
xchg
or
daa
or
xchg
add
sbb
mov
mov
mov
sbb
adc
lods
pop
out
jmp
mov
popa
add
add
pop
or
jl
rcr
test
push
mov
fmulp
xor
inc
jno
repz
mov
inc
repz
ret
inc
stc
in
cmp
fwait
mov
jne
jo
inc
and
or
jmp
mov
mov
fcoms
rcll
and
jb
adc
jbe
sub
imull
clc
fldlg2
xlat
sbb
cwtl
sbb
xchg
imul
aam
adc
addl
movsl
lds
mov
inc
jge
mov
fld
ret
cmc
and
test
stos
pushl
add
dec
push
jge
mov
or
pop
pop
lcall
push
sbb
dec
ja
mov
pushf
mov
lods
inc
cli
inc
lock
adc
ret
xlat
or
in
sub
scas
jno
sbb
inc
dec
xrelease
cli
fldlg2
or
jp
das
sub
xchg
mov
aas
cs
mov
push
jle
das
push
and
xor
or
imul
aas
dec
push
pop
push
dec
dec
dec
inc
dec
push
add
test
or
dec
and
xor
aaa
in
sahf
mov
mov
push
or
add
loop
test
scas
pushw
lds
subl
aaa
mov
ret
in
call
hlt
adc
pop
adc
sub
jb
jne
mov
insl
pop
clc
dec
loope
cld
fs
jmp
shll
adc
inc
sbb
stos
push
fisttpl
xchg
cmpb
test
lods
dec
faddl
lds
pusha
cmpsb
cmp
xor
les
inc
add
or
les
out
dec
pop
adc
pop
fwait
aam
pop
outsb
cs
push
sbb
adc
mov
mov
mov
fldcw
aas
movsb
imul
movsl
lock
inc
aam
sub
cmp
roll
inc
loope
jb
pusha
fdivl
data16
pop
rolb
xlat
mov
loopne
loopne
push
call
insl
clc
jb
ss
or
dec
fisttpll
pusha
mov
adc
jne
mov
adc
clc
or
inc
xor
lods
or
daa
sbb
nop
fucomp
cmpsb
subl
jae
or
addb
fmulp
fs
rcr
add
aaa
jmp
add
imul
icebp
xchg
jae
jb
add
push
add
push
je
rcrb
je
xor
add
adc
je
jo
add
xlat
fiadds
or
inc
jae
outsb
adc
or
adc
imul
insl
mov
jg
test
add
fwait
mov
add
adc
add
add
fadds
sub
xor
cmp
xchg
imul
inc
arpl
movsb
mov
and
pop
mov
inc
adc
sub
in
jge
enter
and
int3
add
dec
clc
push
test
mov
gs
inc
mov
pop
cmp
or
ret
mov
movsb
pop
push
adc
enter
or
jo
jl
push
lock
daa
pushf
add
push
jg
in
loopne
loopne
nop
mov
in
nop
xchg
mov
or
sub
xchg
loopne
loope
mov
add
push
add
mov
rolb
push
mov
test
aas
shll
jbe
imul
out
pop
sub
pop
cwtl
inc
mov
nop
mov
test
mov
leave
push
leave
dec
adc
jns
or
aaa
push
loop
pop
cmp
insb
pop
enter
inc
lods
cs
push
aaa
addl
rol
mov
sub
xor
aaa
hlt
loop
mov
aam
jecxz
cmp
adc
add
push
adc
add
sbb
test
sbb
lods
rolb
inc
movsb
xlat
lcall
in
fdivrl
push
cmp
fisubs
insb
push
pop
dec
mov
xor
pusha
push
pushf
push
or
adc
add
and
fwait
nop
scas
or
orb
inc
jne
mov
add
jo
fdivl
insl
bound
push
xchg
inc
fs
cmp
jle
test
add
les
or
add
sub
sarb
add
imul
mov
repz
addr16
inc
std
and
dec
push
pop
adc
or
rcr
fcoms
sbb
push
cmovnp
imul
out
imul
fistl
push
test
pop
xchg
or
outsl
jb
jo
lahf
add
or
cltd
pop
or
ret
fiadds
test
jae
mov
mov
or
ltr
das
call
jno
rcrb
aas
pop
in
fisubl
lahf
pop
insb
pop
inc
mov
mov
jb
pop
fcoml
int3
sbb
aam
pusha
in
loopne
dec
movb
dec
arpl
adcl
or
add
or
sbb
adc
xor
lds
inc
pop
or
inc
or
mov
or
mov
cmp
enter
testl
pop
nop
inc
lea
out
or
fs
cwtl
xor
mov
mov
andb
pop
adc
adc
mov
add
inc
xchg
ja
cltd
push
out
cmpxchg
add
int3
add
lds
add
or
and
add
addr16
add
jo
jo
xchg
stos
and
ficoms
jb
fstps
mov
add
jnp
shld
sub
push
mov
or
push
andb
popf
add
adc
push
repnz
add
push
push
jecxz
xchg
or
adc
loopne
sub
sysret
testl
add
fst
add
push
aad
fimull
mov
mov
call
shl
cwtl
adcb
xchg
adc
pop
push
jmp
inc
mov
addr16
sub
adc
push
and
xor
repz
outsb
and
icebp
das
jmp
test
loop
add
inc
lods
push
cmp
xchg
ljmp
ljmp
jb
fmul
or
xor
test
push
push
fistps
adc
mov
or
jp
adc
pop
mov
push
or
or
mov
cmpb
scas
add
fistpll
xchg
jae
movsl
add
and
mov
addr16
lea
lea
cmp
jo
or
or
mov
test
xchg
dec
adc
xchg
ficoms
inc
gs
les
pop
leave
add
inc
mov
out
testb
lds
and
aas
mov
push
xlat
and
adc
gs
sbb
cltd
add
add
outsl
and
add
setg
les
sub
pop
in
sub
lods
push
push
push
jo
inc
adcl
repz
adc
and
out
pop
inc
push
jne
pop
or
cmp
lea
mov
pop
push
pop
add
nop
daa
mov
pop
pop
xbegin
pop
push
inc
inc
loopne
jmp
and
sbb
xchg
mov
in
aam
lods
push
ss
in
cmp
jmp
pop
xor
cwtl
daa
xor
cmp
lcall
fsubrl
clc
stc
pop
fstpt
into
jle,pn
pop
and
mov
jb
xor
or
mov
xchg
dec
std
lahf
ds
mov
add
push
add
lcall
les
add
pop
add
or
or
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lcall
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
xlat
call
call
ljmp
add
sar
sar
sar
sar
iret
repz
pushl
dec
dec
dec
icebp
dec
dec
popl
inc
outsl
fs
pop
inc
inc
xchg
push
push
lret
pop
mov
adc
cld
je
ss
mov
ss
or
dec
cld
and
sub
imul
push
or
xor
lcall
sarb
dec
mov
in
insb
push
nop
pop
inc
cmp
dec
jae
pop
cs
xor
ds
xor
cmp
je
imul
aaa
aam
xor
data16
push
pusha
or
pop
dec
scas
add
data16
sub
pop
jns
inc
dec
mov
js
jl
imul
and
enter
xor
outsl
imul
movsb
xor
inc
push
push
xor
shlb
xor
nop
pop
pop
sbb
lcall
pop
or
cmp
push
add
mov
test
jns
or
mov
inc
addb
inc
inc
rorb
sbb
das
and
lods
mov
pop
sub
incl
push
incl
je
and
push
adc
adc
sub
ljmp
jbe
inc
or
orl
stos
nop
push
inc
xlat
jl
dec
nop
or
adc
or
mov
cmp
repnz
xchg
push
sub
lods
or
leave
lock
adc
and
mov
insb
repnz
dec
and
dec
sub
pop
jl
movsl
enter
or
adc
xchg
add
daa
add
std
sbb
mov
mov
aad
insb
adc
rcrl
pop
push
xor
imulb
insl
mov
daa
cmp
fsubrs
push
xor
push
addr16
rclb
adc
push
aas
movsb
cltd
data16
sbb
xchg
pop
sub
lahf
jl
enter
xchg
push
xchg
cmovl
xor
push
pop
int3
pop
add
bound
sbb
push
push
push
push
cld
addr16
inc
jb
xchg
xchg
xchg
pop
xchg
mov
jl
push
mov
add
dec
pop
ret
add
inc
pop
mov
pop
cmovbe
add
add
add
add
add
add
pop
add
mov
add
add
sbb
lock
add
add
mov
mov
mov
mov
mov
incl
cmp
adc
sbb
add
es
mov
mov
mov
mov
push
mov
xor
cmp
add
ljmp
lret
inc
inc
inc
inc
inc
inc
inc
lock
loopne
arpl
mov
les
mov
mov
pushl
jne
ja
jo
xchg
dec
rcll
mov
lcall
cld
lods
insl
lcall
orl
test
dec
xor
enter
xchg
sub
xchg
push
mov
mov
dec
imul
push
mov
aam
imul
rol
mov
dec
shll
fsub
in
hlt
dec
mov
insb
int
push
mov
js
dec
imul
adc
mov
xchg
clc
imul
adc
insl
lcall
jo
sbb
aaa
je
xlat
movsb
xchg
andb
lret
in
mov
movsb
pop
dec
sahf
inc
xchg
insb
pop
fldt
int3
jg
push
or
jns
imul
xchg
pop
vmread
out
data16
push
xor
xchg
je
cmpsl
inc
test
mov
data16
ds
addr16
mov
pop
cmp
test
mov
add
mov
cs
outsl
lock
divl
push
les
or
enter
in
pop
scas
add
lods
scas
pop
scas
add
and
mov
ds
push
mov
push
or
test
add
xchg
pushf
pop
stc
push
inc
push
sbb
movsb
testb
movsl
mov
fisttps
pop
pusha
stos
hlt
cmpsl
fsubrl
pop
lock
adc
in
movsb
adc
inc
int3
stos
sti
push
jnp
in
and
pop
and
enter
enter
add
or
outsb
cmpsl
and
pop
pop
mov
cmp
notb
cmpsl
rorb
test
enter
xchg
or
or
enter
adc
fwait
sbb
andl
inc
loopne
and
mov
push
cli
cmpsl
pop
push
fs
stc
fucom
in
cli
dec
shll
and
cmp
pop
mov
hlt
add
jo
push
and
push
arpl
incl
sub
fwait
gs
pusha
mov
push
sub
out
or
das
and
int
int
add
les
sbb
push
push
jb
cwtl
movb
movsb
testl
scas
push
hlt
jae
dec
aad
lea
mov
adc
mov
mov
sbb
rclb
sbb
je
sbb
inc
fisubrl
and
dec
and
cmpsl
enter
add
adc
mov
add
popf
inc
movl
sub
pop
sbb
or
xchg
mov
sbb
inc
sbb
mov
popa
inc
mov
lret
mov
push
dec
jb
push
dec
jne
xor
sub
adc
cmp
adcb
jne
subl
lock
and
push
or
pop
fistps
sbb
push
push
adc
dec
inc
out
or
add
rcll
jb
daa
test
pop
popf
sti
fwait
pop
add
rolb
dec
inc
inc
add
pop
lods
jno
imulb
xchg
daa
push
mov
mov
inc
push
sub
daa
push
jo
clc
add
mov
inc
insb
popa
cwtl
pop
xchg
and
push
mov
xlat
dec
add
outsl
lock
daa
dec
xchg
nop
or
push
jo
imul
cmpsb
mov
btc
push
movb
add
das
loopne
movsl
aam
mov
or
mov
sbb
jg
lods
outsl
es
adc
mov
clc
loope
cmp
scas
mov
stos
dec
jnp
mov
idivl
lret
es
shl
mov
scas
xchg
loope
jl
push
insb
cmpsl
inc
mov
cli
sub
push
or
mov
cmpl
nop
mov
jmp
and
xchg
xchg
test
sub
and
aas
mov
mov
pop
pop
dec
mov
add
push
adc
push
xor
add
out
mov
imul
add
add
and
pop
mov
lds
loope
jno
mov
sub
push
or
or
push
imul
mov
pop
push
pop
les
mov
push
sarl
pop
pop
js
inc
xor
add
xlat
lock
rolb
movsl
lock
add
xchg
sub
sbb
jb
dec
sbb
and
jmp
sbb
mov
adc
mull
ds
or
jp
mov
jmp
jl
push
aam
es
and
ret
nop
push
or
adc
adc
je
and
add
rclb
das
xor
mov
lret
mov
adc
sbb
mov
lret
sbb
and
sub
shll
push
push
xchg
xor
movsl
rorb
cmp
fbld
xchg
xchg
cmpsl
stos
add
fidivrs
dec
or
pop
jecxz
xchg
xchg
xchg
jbe
mov
outsl
or
aam
push
dec
cmp
fiadds
inc
cmp
je
sub
mov
sbb
or
je
jns
lea
repnz
mov
ret
nop
cmp
ja
xchg
test
sbb
aam
ss
inc
cld
mov
call
add
xor
dec
mov
inc
jo
and
jg
jne
mov
sub
or
iret
lods
adc
or
xlat
xor
sbb
outsb
add
add
xchg
sub
xor
adc
fadds
cmp
push
mov
sbb
push
mov
jmp
or
ljmp
mov
push
fcoms
xchg
cmpsl
data16
in
mov
or
andb
sub
add
enter
addl
cmp
pop
xor
dec
mov
icebp
push
jbe
sub
xchg
fiadds
jmp
dec
inc
inc
cmp
jmp
ljmp
fnstsw
add
and
cmpb
sbbb
cmpsb
dec
jnp
dec
fbstp
imul
add
test
pop
jp
and
outsb
dec
pop
je
out
inc
fmul
aam
pop
dec
adc
fisubrl
pushf
push
aas
test
sbb
pusha
dec
cmp
add
movsb
mov
jae
mov
xchg
cmc
or
sub
jl
and
and
adc
enter
push
pop
fbstp
and
push
and
pop
pop
insb
insb
lahf
dec
pop
inc
lahf
sub
sub
pop
pop
cmpsb
jno
and
icebp
inc
test
xor
xlat
mov
sbb
mov
xor
pusha
lods
xchg
jmp
sbb
daa
test
cmpsb
sub
outsb
dec
ja
pop
or
outsl
add
sub
xor
adc
outsb
decb
jle
or
mov
addl
ficoms
inc
inc
std
adc
push
jae
leave
mov
pop
addr16
ficoml
sub
cmpsl
insb
leave
fiadds
jbe
or
cmp
ds
add
out
cmp
ja
add
or
add
mov
sarl
jb
jl
imul
cmpsl
dec
sbb
push
fs
imul
sub
les
imull
repz
sti
insb
in
push
rcll
adc
mov
inc
in
cli
pop
push
xchg
adcl
loop
sbb
lea
sub
or
fnstsw
cmp
xor
mov
inc
je
jbe
push
dec
pop
movsl
test
test
in
sub
xchg
dec
xchg
cmp
lods
test
and
mov
or
xchg
sarb
out
mov
inc
mov
aaa
fbstp
clc
mov
jae
adc
xor
cmp
test
cmp
les
mov
inc
in
sub
push
mov
mov
mov
aas
cmp
je
pop
adc
fmul
fiaddl
popf
add
sub
sbb
sub
inc
cs
add
mov
dec
in
test
mov
and
jle
lock
ret
jmp
push
xor
add
cs
adc
mov
iret
xor
sbb
pop
pop
fisubl
outsb
pop
jl
insb
dec
sub
cmp
and
adc
xchg
jae
cmpb
adcl
lret
adc
push
or
lahf
gs
xor
fstps
xor
mov
inc
inc
adc
inc
repz
ljmp
cmpsl
mov
add
dec
out
dec
mull
fdivrs
dec
in
mov
test
add
add
mov
enter
adc
adc
and
sbb
or
lock
insl
and
cmp
lds
dec
pushf
xor
xchg
inc
or
cmp
ds
jne
and
xor
pop
shlb
mov
subl
cmp
sbb
addb
pop
mov
mov
cli
add
inc
dec
mov
std
inc
push
push
push
gs
rol
dec
xchg
jp
push
push
sbb
inc
pop
inc
cmp
pop
dec
jne
aaa
sub
ret
add
rclb
sbb
push
roll
push
int3
arpl
hlt
pop
inc
sti
or
or
mov
fistpll
xor
jmp
test
dec
insb
mov
fst
rorl
push
mov
pop
push
inc
or
sub
outsb
int3
ds
clc
lods
or
inc
cmpsl
add
fisubrl
fdivs
test
test
push
mov
push
pop
or
insb
mov
pop
std
fldl
inc
jo
jl
mov
sbbl
sbb
js
push
outsb
clc
pop
pop
mov
dec
jne
adc
push
pop
hlt
add
je
out
aas
lods
mov
fcoms
push
test
out
push
mov
xchg
dec
or
adc
pop
xor
sub
cmpsl
mov
push
inc
xchg
ret
mov
fistps
dec
jge
mov
push
int
imul
mov
add
or
mov
ret
mov
cwtl
sbb
rcl
sar
xchg
loopne
roll
mov
mov
pushf
pop
lea
subl
and
fldenv
add
daa
inc
mov
nop
dec
ljmp
and
dec
sbb
mov
adc
pop
or
or
mov
sub
sub
or
push
mov
add
push
bound
in
sbb
adc
fldt
and
mov
subb
mov
fs
and
push
push
notb
and
inc
push
and
std
inc
ret
std
mov
jne
mov
loop
sbb
inc
jmp
jle
mov
pop
pop
mov
mov
fwait
ljmp
das
in
xchg
add
cltd
test
filds
add
push
push
dec
cmp
sarb
xlat
out
pop
imul
push
frndint
cltd
pop
pop
and
in
popa
xor
insl
sbb
xor
mov
dec
in
mov
xchg
dec
out
xor
movsl
push
pop
lret
xor
and
jge
out
decl
aam
xor
dec
inc
cmpsb
adc
fdivrl
and
les
in
mov
xor
push
mov
xor
push
aam
sub
rcr
fidivl
push
mov
mov
hlt
ss
fildll
inc
out
pop
xor
les
sub
mov
adc
cmp
addr16
daa
jg
xor
stc
fstpl
fwait
jmp
xlat
mov
inc
and
add
pop
lret
or
xchg
mov
imul
cmp
sub
shlb
rcll
cmp
adc
sbb
popa
xchg
pop
sub
inc
cmc
cmp
mov
push
nop
inc
je
daa
mov
add
addr16
movb
bound
mov
jae
loopne
rolb
loope
sub
adc
sbb
cmp
jl
sbb
fdivrl
dec
add
es
add
mov
jp
negb
mulb
dec
xchg
sub
lea
mov
clc
rol
mov
xchg
adc
adc
inc
push
das
sub
jns
cmpl
sbb
lret
xchg
mov
jmp
cltd
sub
and
in
test
adc
loopne
mov
int
in
sbb
push
call
push
dec
arpl
cmp
push
dec
mov
add
pop
jno
imul
dec
lcall
jmp
decl
jno
adc
in
add
inc
cwtl
nop
int3
mov
iret
push
push
jne
lods
inc
aam
ss
push
sbb
pop
mov
fisubrl
test
sbb
aas
sahf
ja
mov
push
pop
or
cmp
daa
subl
add
mov
adc
sbb
stc
popa
lcall
lods
cmpsb
mov
adc
or
loope
push
add
cmp
sbb
inc
cltd
cld
lahf
and
in
ret
sub
inc
mov
xchg
rorb
adc
xlat
cmp
les
sub
cwtl
xchg
popa
das
cli
jmp
and
in
pop
push
pop
mov
test
adc
insb
icebp
cs
jge
cmpsb
push
xchg
mov
jnp
arpl
push
pop
outsb
je
adc
cltd
test
nop
dec
cmp
test
or
sub
sub
inc
cmp
mov
and
or
jmp
cmp
rorb
sub
or
pop
pusha
pop
mov
pop
pop
push
mov
or
and
imul
or
mov
shl
push
jmp
cli
sub
adc
cmp
xchg
ss
xchg
rorl
mov
or
loop
dec
pop
and
mov
push
and
mov
mov
or
xor
arpl
mov
pop
jb
xor
imul
mov
rcrl
jmp
es
mov
jecxz
fwait
dec
popa
imul
and
push
imul
lds
or
pop
out
add
inc
pop
and
mov
test
lock
push
leave
add
sbb
xchg
lret
pop
dec
xor
ss
sbb
dec
cmp
add
test
mov
add
add
or
dec
adc
xor
add
xor
mov
cmp
or
push
or
enter
movsbl
mov
mov
enter
gs
xchg
cmp
cld
lods
test
sub
stos
add
cs
aas
jp
rorl
arpl
jmp
dec
add
jne
outsb
xchg
xor
mov
sahf
lahf
dec
iret
cmp
and
jecxz
hlt
push
sub
sub
inc
aaa
push
addb
lds
cs
aaa
adc
adcb
push
lret
push
addr16
mov
pop
loope
lods
mov
outsb
dec
sub
subl
sbb
jle
xor
pop
insb
xchg
jno
mov
push
pusha
and
cmp
adc
sub
cmp
cmp
jb
pop
add
add
pop
xor
pop
inc
pop
dec
jnp
or
roll
xor
adc
sbb
add
ret
lods
dec
pushw
mov
and
or
lahf
adc
add
movsb
cwtl
or
cmc
dec
aas
insb
andl
sbb
pop
sub
adc
mov
repnz
or
and
push
adc
or
or
or
or
sbb
add
outsl
out
adc
sub
fildll
out
pop
jmp
icebp
jbe
dec
or
or
adc
data16
xor
cmp
cmp
lret
je
or
adc
lret
stc
pop
je
loopne
pop
cmp
repnz
mov
cmp
pop
je
cmp
pop
or
sbb
sbb
sbb
sbb
push
dec
or
sbb
mov
pop
cli
sbb
lcall
pushf
inc
sbb
lods
add
sub
jecxz
fs
outsl
test
movl
push
inc
cmp
dec
mov
mov
pop
ja
fld
mov
inc
inc
jge
or
add
or
movsb
leave
loopne
into
sbb
xlat
shl
out
jae
cmpsb
iret
pop
and
pop
pop
adc
arpl
xchg
aam
and
bound
and
insl
sbb
cwtl
icebp
movsb
add
pop
gs
push
gs
movsl
sub
push
outsb
xchg
mov
xchg
sub
sbb
cmp
inc
or
and
jbe
in
or
loopne
mov
and
jmp
xor
mov
and
fcomp
pop
cmp
sbb
mov
add
cmp
mov
jmp
xor
mov
leave
push
enter
das
sbb
xlat
ret
movsl
sbb
cmp
aam
xor
pop
xchg
imul
bound
xchg
aaa
js
cmpsb
adc
and
and
lods
add
jne
jne
daa
je
sbb
xchg
jne
cmp
clc
inc
push
js
xchg
push
int3
lahf
fsubrs
cmp
pop
mov
in
pop
and
adc
adcb
mov
pop
aas
xlat
push
sar
sbb
js
leave
mov
mov
jae
mov
jge
addb
addb
xor
push
enter
sbb
imul
inc
jo
jo
inc
push
add
pop
pop
mov
sbbl
add
mov
cli
jp
jmp
mov
dec
aas
push
insl
test
lods
add
bound
jo
cmp
inc
xchg
mov
aas
je
loop
repnz
cmp
loope
sub
pop
aaa
sbb
nop
dec
mov
adc
dec
loopne
mov
xlat
into
sub
xor
and
adc
je
push
enter
mov
push
lds
popf
rol
pop
ret
push
orl
rclb
inc
movsb
addl
xorb
sub
dec
aas
mov
fisttpl
pop
push
dec
push
pop
mov
insl
xlat
ret
popa
mov
mov
add
btr
test
pop
mov
fs
popl
pop
lds
push
aaa
push
sub
push
cmpsb
lds
sub
adc
mov
inc
xchg
adc
ret
jle
je
push
and
adc
pop
sub
fstl
cmpsl
jge
das
or
adc
sub
cmp
jecxz
push
je
inc
push
sahf
subl
push
fchs
push
cli
mov
and
and
mov
mov
pop
adc
xor
inc
rolb
lcall
pop
sbb
xchg
in
push
xor
roll
clc
iret
ds
test
push
enter
lret
push
xor
push
dec
int3
mov
out
ret
cli
adc
xorl
xchg
clc
or
cmp
out
mov
mov
int
xlat
fistpll
inc
add
icebp
mov
push
arpl
idiv
icebp
leave
int3
jno
call
or
nop
or
xor
xchg
pop
cmpsl
mov
out
mov
aam
and
jle
jne
xlat
sbb
test
and
clc
jne
sub
sbb
es
jo
push
push
add
pop
je
orb
pop
into
xor
cld
fidivs
lods
dec
aam
loopne
cmpl
xlat
push
je
mov
sub
popa
or
dec
fistps
mov
std
sub
ret
jne
cs
xor
daa
aam
and
push
mov
scas
inc
dec
push
pop
dec
dec
inc
mov
ret
cmp
inc
cmp
rcl
mov
shrl
mov
popf
xor
js
jb
inc
ja
jnp
jne
std
push
cmc
aaa
test
or
popa
movsb
push
push
push
and
mov
mov
and
jbe
dec
or
jl
inc
add
xor
testb
iret
dec
mov
cmpb
jae
add
icebp
insl
test
mov
mov
insb
sarl
out
nop
es
xchg
or
push
push
mov
mov
dec
das
mov
push
adc
adcl
sar
jmp
repz
or
jns
and
dec
mov
dec
push
add
out
imul
imul
adc
orl
and
xchg
mov
pushf
loopne
inc
cmc
xchg
and
in
sbb
mov
adc
das
enter
push
dec
xor
sbb
push
or
loopne
mov
roll
inc
push
pop
insb
fwait
lret
inc
dec
add
mov
dec
add
adc
fcoms
or
into
cmp
in
in
outsb
pop
jbe
aad
cmp
dec
or
push
ret
dec
add
and
inc
fiaddl
mov
xorl
push
sub
xor
andb
and
cli
pop
mov
clc
dec
and
mov
push
bound
cmpsb
leave
mov
lds
divl
pop
push
cmp
mov
outsl
push
mov
pusha
push
sti
js
mov
imul
sub
pop
les
pusha
xlat
add
cli
jns
cmpsl
mull
roll
std
addb
sub
jbe
scas
mov
mov
pop
and
dec
lret
or
loope
call
adc
dec
dec
mov
sbb
dec
fldenv
mov
inc
sub
ljmp
or
sub
adc
and
pop
mov
in
outsb
mov
mov
inc
hlt
xor
lret
test
or
push
mov
iret
loopne
jo
mov
or
jno
call
sbb
lods
movsb
sbb
rorb
pop
lret
cmp
xchg
mov
and
or
icebp
adc
and
pmulhuw
ret
pop
sub
jb
pop
fiadds
push
or
add
mov
pop
sbb
movsb
ja
mov
mov
movsb
mov
decb
xchg
mov
mov
mov
inc
xchg
sub
or
and
jnp
and
mov
jne
testl
mov
outsl
pop
push
cmp
sub
and
mov
pop
leave
mov
shl
add
inc
push
and
mov
cwtl
inc
inc
jno
popa
sbb
loopne
push
cmpl
shlb
push
jnp
sahf
test
cmp
jmp
mov
adc
sbb
push
inc
pop
aaa
lahf
mov
xchg
movsl
pop
outsb
inc
adc
inc
or
data16
sbb
jns
scas
add
cmp
sbb
pop
jnp
ret
push
dec
loopne
xchg
sub
iret
or
jecxz
xor
add
pop
ret
push
in
inc
fwait
dec
in
or
cmp
dec
adc
sub
xor
mov
fs
inc
sub
pusha
fimuls
mov
inc
jns
ret
mov
xchg
pop
push
push
xchg
push
cmpb
or
adc
or
and
rcrb
sub
sbb
jne
pop
ljmp
dec
mov
fiaddl
addr16
xor
negl
mov
xor
loop
jne
xchg
rcrl
inc
push
and
jo
cmp
push
or
sub
push
xor
or
popf
add
mov
aaa
repnz
rcrb
add
xchg
punpckldq
mov
imul
jge
dec
push
jo
ficoml
dec
sbb
inc
adc
fdivs
dec
xor
inc
scas
rorl
cmp
cmp
ss
lcall
loop
push
mov
int
push
insb
out
scas
push
and
cmp
je
push
lea
mov
adc
stos
inc
in
orl
pop
mov
adc
or
mov
das
pop
push
add
mov
push
mov
lods
sahf
sarb
push
pop
or
aaa
xchg
test
jge
lock
aas
mov
jo
add
call
pop
in
sbb
xchg
sub
mov
dec
adc
mov
test
mov
pop
jl
orb
cmp
add
dec
leave
dec
popa
es
push
shll
mov
fnstenv
imul
cld
std
and
pop
je
mov
movb
dec
andb
sbb
pop
push
aaa
push
jl
xor
orb
mov
jecxz
and
xchg
cs
push
add
mov
mov
mov
es
pop
je
mov
mov
cmpsl
adc
cmp
or
nop
cltd
sbb
mov
mov
dec
and
push
jo
in
push
pop
mov
mov
nop
mov
pop
pop
pop
xchg
out
cltd
or
pusha
div
cs
cmp
data16
andl
sub
or
fcoms
lret
add
add
xchg
or
adc
inc
js
test
or
mov
dec
push
into
ljmp
and
popf
mov
jne
sbb
xor
sub
or
xor
inc
pusha
push
mov
std
loopne
sarb
push
add
or
imull
decl
sbb
cmp
mov
mov
push
adc
lahf
and
lcall
xchg
dec
cmp
es
sbb
cmpsl
xor
enter
sbb
and
mov
xor
xor
ficomps
mov
adc
jo
lea
push
rolb
repz
xor
popa
cmpb
rcrb
cmp
inc
push
inc
lock
outsl
inc
rorl
pop
in
fsub
aad
pop
lods
jo
mov
mov
push
push
dec
std
iret
add
jmp
test
cld
lock
int
add
call
push
dec
add
and
pop
out
cmpb
adc
imul
sub
inc
ficoml
int3
mov
mov
outsb
xchg
mov
out
fsubrs
xor
or
mov
bswap
cmp
jle
or
add
inc
add
add
pop
jo
add
jmp
je
fstpl
mov
mov
ret
in
shr
jne
sbb
xor
pop
pop
cmpsb
outsb
add
or
adc
incb
ret
pop
cld
add
push
addr16
or
pop
sbb
pop
pop
inc
push
cltd
xchg
cmp
mov
sub
fstps
mov
je
jecxz
nop
punpckldq
mov
es
jbe
scas
in
xchg
add
cmp
add
mov
out
add
adc
mov
and
daa
faddl
jecxz
and
mov
gs
dec
or
xchg
adc
jne
js
fbstp
testb
cmp
fisttps
mov
bound
in
dec
sbb
cmp
bound
mov
or
add
mov
sub
or
flds
jl
adc
ds
sbb
aas
inc
das
jbe
add
ret
dec
movb
mov
repnz
sbb
orl
mov
lods
data16
or
mov
add
mov
pop
lods
ljmp
hlt
dec
xor
call
mov
lret
sahf
xchg
adc
repz
jl
xchg
mov
outsl
xchg
sbb
fcmovu
xchg
sbb
sbb
xchg
mov
cmc
mov
xor
ds
mov
sbb
jbe
or
mov
xor
sub
sub
loopne
add
dec
and
inc
or
loope
mov
xchg
arpl
sub
sub
fwait
lea
fst
pop
mov
into
roll
fucomp
adc
and
jle
add
mov
lea
cltd
outsb
rcll
jb
adcl
imul
push
push
push
insb
push
mov
mov
sbb
add
inc
mov
sub
add
add
or
popw
xor
add
add
jno
hlt
sub
enter
sti
jne
cmp
push
jecxz
push
xor
push
jmp
roll
cmp
ret
aaa
push
movsb
push
das
sti
pushf
shlb
filds
cmp
jl
inc
aam
ficomps
lea
fisttps
push
mov
stc
shr
sbb
imul
mov
push
sub
mov
scas
mov
test
addl
daa
lahf
xor
mov
push
loopne
add
or
xorb
mov
adc
xchg
dec
mov
enter
or
lea
sbb
insl
scas
push
lea
out
jge
dec
jmp
loop
or
sbb
adc
les
insb
movl
cmp
stc
sub
mov
ds
sub
mov
in
testl
mov
addr16
pusha
sub
cmp
aaa
call
fldcw
sub
das
in
or
dec
adc
inc
in
push
xor
nop
and
sbb
adc
or
sub
shrb
call
stos
adc
add
cli
adcl
push
les
push
add
adc
mov
xlat
jo
add
rolb
jns
in
jne
ret
mov
sub
jb
je
sub
sub
mov
mov
sub
ss
adc
or
and
inc
jle
push
or
mov
mov
xor
xor
adc
cltd
inc
das
int3
adc
cmp
adcl
sub
push
cmp
enter
les
mov
test
dec
or
inc
or
add
cmp
mov
inc
iret
fmull
dec
push
fiadds
inc
shlb
sbb
sub
push
mov
push
das
inc
xchg
cmc
fnstsw
cli
jl
jne
stos
in
inc
sub
lea
pop
jnp
sti
jmp
mov
mov
inc
jecxz
insl
cmp
push
xchg
mov
and
or
mov
sbb
das
cmp
and
lret
sub
lret
stc
ljmp
push
jbe
xchg
push
add
js
or
adc
inc
push
adc
sti
xor
pop
adc
js
jne
in
je
sbbl
push
das
xchg
and
jnp
and
ss
pop
test
xorl
lock
mov
or
sbb
pop
out
or
les
in
shrl
cmp
lock
push
sbb
xor
add
add
sbb
movsb
and
push
mov
testb
mov
cmc
push
sub
mov
popf
les
adc
fildl
or
add
ss
sbb
adc
or
decb
mov
movsl
pop
pop
jg
or
shlb
jne
aas
cmc
mov
mov
ds
dec
jae
xchg
xchg
push
mov
add
mov
push
xchg
pop
xlat
cltd
xor
or
push
cs
sbb
xchg
lret
pushf
lock
jle
stos
add
enter
xor
push
mov
inc
or
int3
adc
add
jmp
jmp
push
mov
sub
xor
cltd
pop
je
syscall
adc
je
pushf
in
push
mov
inc
cmpsb
lock
je
push
add
andb
insb
push
push
or
adc
and
mov
jp
sub
sub
xor
enter
or
and
pop
adc
dec
ret
cmp
popa
or
les
mov
int3
cmp
jno
or
imul
push
push
or
imul
adc
sub
add
push
or
add
cmp
lods
add
jecxz
roll
mov
cmp
out
dec
mov
pusha
adc
lods
in
jle
push
inc
cmpb
push
rorl
or
int
inc
leave
mov
fiaddl
sub
dec
inc
nop
inc
sub
pop
sbb
sub
dec
dec
inc
and
add
push
sbb
or
cmp
imulb
mov
mov
sar
add
sbb
ret
and
aas
mov
add
aaa
cmp
inc
ja
mov
fisttpll
inc
dec
jle
xchg
ds
mov
pushf
je
arpl
bound
je
in
jle
jb
adc
cmpsb
jo
push
daa
push
pop
sub
add
xchg
cmp
or
repnz
sbb
cmp
push
jbe
ss
push
add
aaa
mov
pop
repz
sub
sti
subl
or
ja
xchg
mov
insb
adc
or
adc
or
cmp
jne
fwait
or
xor
and
adc
sub
hlt
or
notb
inc
inc
mov
test
lods
cmp
mov
push
cmp
loopne
mov
js
outsl
adc
ror
je
test
addr16
or
aad
clc
ja
cld
xor
insl
lret
xchg
xor
inc
jl
jle
cmc
inc
sub
aas
mov
incl
sbb
xchg
and
pop
popf
clc
xchg
xchg
adc
mov
push
sbb
push
sub
call
inc
pop
not
pop
mov
jl
shll
xor
adc
andb
add
cmp
pop
mov
sub
pop
mov
xchg
and
sbb
add
sbb
sub
push
or
pop
faddl
dec
adc
test
sub
adc
push
adc
dec
xor
cmpsb
and
movsl
mov
les
das
jnp
sarl
popf
or
sub
pop
cmp
arpl
decl
dec
jp
add
cmp
rolb
imul
push
clc
roll
inc
push
xor
jg
push
add
adc
mov
ret
or
sub
jnp
sbb
out
mov
push
in
fcom
aad
movswl
adc
stc
or
dec
push
iret
ss
mov
pop
clc
add
adc
push
rolb
mov
pop
movsb
sbb
mov
cmpsl
xor
dec
add
xchg
les
aaa
xor
xor
imul
mov
and
mov
lea
and
sbb
int3
mov
test
sub
mov
push
popa
adc
test
pop
cmp
js
adc
bound
or
and
push
jnp
pop
dec
lcall
adc
rorb
enter
inc
inc
or
xor
fisubl
sbbb
lahf
sbb
cmp
mov
push
sahf
outsl
and
xchg
inc
sti
fiaddl
sbb
andb
add
mov
dec
pop
dec
loope
nop
mov
jnp
sub
mov
pop
cmpsb
or
ret
pop
aam
jge
rcrl
push
rcrb
dec
or
add
or
mov
pop
in
mov
and
sub
inc
add
adc
dec
sub
ficoms
adc
aam
pop
pop
lcall
dec
sahf
addl
mov
popf
stos
sbb
inc
xchg
jmp
ss
adc
add
xchg
and
aas
add
xchg
jne
les
cmp
jb
lcall
lret
inc
mov
cmpsb
mov
sbb
push
test
lahf
sbb
and
xor
add
mov
into
lods
xchg
push
xor
push
movb
gs
or
adc
pop
ret
mov
inc
and
subb
hlt
dec
xlat
clc
push
loop
xchg
dec
jle
je
push
lock
mov
sarl
or
mov
daa
outsl
adc
or
push
ret
into
leave
adc
jmp
jno
sub
jne
testb
add
sbb
in
test
or
push
mov
imul
pop
push
fs
stos
push
jge
pushf
push
push
inc
loop
sbb
inc
dec
lock
pavgw
insl
and
fdivs
mov
popf
or
das
aaa
pushf
inc
bound
cmp
sbb
pop
daa
in
outsb
push
jo
pop
jb
mov
mov
mov
dec
push
mov
mov
ljmp
or
add
adc
and
mov
test
adc
lahf
mov
mov
imul
and
mov
mov
xchg
call
out
pop
push
mov
inc
fsubs
push
sbb
pop
push
in
lahf
mov
pop
dec
push
sahf
jne
xchg
pusha
movl
scas
cmpsb
ss
push
shll
js
push
addr16
xor
push
pop
pop
inc
pop
cmp
adc
adc
dec
daa
or
xchg
or
dec
jge
enter
adc
dec
mov
sbb
andl
sub
adc
jecxz
loopnew
add
sbb
cld
dec
mov
or
xchg
ljmp
mov
lea
jl
fnsave
dec
icebp
jb
push
add
inc
dec
pop
jl
mull
dec
dec
imul
push
inc
add
or
sub
or
push
sub
mov
insb
pop
xor
sub
paddb
add
or
dec
pop
and
leave
inc
sub
and
xchg
jbe
push
pop
inc
pop
test
xchg
pop
test
sbb
xchg
mov
mov
test
dec
sti
xor
adc
lods
pop
pop
pop
or
enter
fwait
or
and
in
mov
sub
cmpsl
pop
test
cmp
adc
inc
incb
ja
loope
xchg
imul
clc
mov
push
pop
or
sbb
mov
adc
clc
xor
and
push
inc
rorl
test
sbb
add
sub
iret
mov
push
out
insb
sarb
mov
ret
cmp
inc
leave
push
xor
lcall
xor
push
shl
outsl
add
test
aas
shlb
daa
outsl
and
pop
jecxz
jle
sbb
xchg
sbb
test
stc
jecxz
sbb
fidivs
mov
mov
repnz
cmpsb
and
mov
es
mov
aam
push
xchg
and
cs
dec
test
fldl
stos
fcompl
mov
mov
adc
lcall
enter
loope
xorb
dec
subl
call
mov
test
mov
sbb
cmc
mov
jmp
or
add
insl
cmp
xchg
sahf
dec
mov
xchg
inc
pop
xor
jle
inc
pop
cmpl
iret
fwait
xchg
inc
shrl
shrl
sub
adc
fwait
out
imul
xor
and
push
inc
xor
out
sub
idivl
hlt
rolb
or
repz
sbb
or
push
aam
int
and
mov
xlat
les
sbbb
rolb
arpl
cwtl
rclb
data16
jmp
dec
pop
push
mov
arpl
pop
mov
data16
mov
sub
aam
sahf
push
mov
arpl
cmp
js
ss
js
inc
mov
and
fistl
bound
test
xchg
ret
mov
repz
cmp
inc
ja
inc
mov
mov
movsb
mov
jmp
test
xor
inc
sub
push
or
and
or
test
leave
fists
test
sets
cmpb
xor
addr16
pushf
mov
test
inc
sbb
lods
xchg
mov
mov
shlb
xor
inc
loopne
inc
xchg
or
mov
cmpsl
sub
inc
or
pop
xor
loop
mov
mov
add
int
push
adc
inc
jecxz
or
out
mov
and
push
inc
push
push
out
xchg
push
inc
les
sbb
sbb
inc
rcll
add
mov
mov
push
movb
xor
push
jl
and
dec
das
adc
lea
aam
or
jecxz
push
push
pop
les
test
cmp
addr16
roll
add
mov
ja
or
ss
repnz
sbb
pop
subl
mov
adc
add
das
cli
lret
xchg
or
lea
xchg
icebp
daa
xor
call
sbb
dec
mov
rcll
cmp
push
push
out
pusha
fstpl
mov
jbe
mov
push
jne
shll
vpermilps
mov
insb
jge
jo
movsl
scas
or
pushf
cmc
cwtl
mov
hlt
idivb
test
fs
rcrb
xor
hlt
inc
dec
pop
lcall
xor
and
jl
cmp
jbe
hlt
pop
jge
addr16
jl
push
mov
shrl
inc
fs
inc
hlt
jmp
fiaddl
mov
lds
inc
test
pop
add
sub
dec
outsl
das
adc
test
lea
call
sbb
and
xor
push
mov
push
outsl
scas
sub
pop
push
das
pop
pushl
ja
jmp
imul
pushf
daa
scas
call
push
inc
cmp
setg
jmp
inc
add
ficomps
rcrl
rorl
setle
mov
iret
inc
es
dec
inc
dec
mov
daa
adc
cld
and
xor
ljmp
stc
cs
mov
push
mov
pop
jno
into
outsl
lea
sub
inc
popa
fsubrp
arpl
aad
or
xchg
xchg
inc
xchg
stos
enter
jne
jp
test
xor
lods
ljmp
and
in
mov
mov
xlat
and
and
loopne
pop
xor
adcb
jne
push
out
imulb
popa
add
inc
adc
adcl
subl
notb
lret
jmp
aaa
hlt
jmp
orl
idivb
lret
sbb
sar
xchg
nop
icebp
imul
imul
popf
addr16
xchg
mov
call
aaa
lock
add
mov
inc
add
movb
roll
inc
xchg
push
aam
inc
xchg
push
mov
or
push
jne
or
mov
add
scas
add
sub
aaa
jl
push
sub
out
add
or
pop
or
add
data16
leave
popa
or
pop
add
in
push
loope
add
bound
lds
scas
add
add
lcall
pop
pop
jp
int
imul
mov
jnp
addl
dec
sub
lods
or
xor
dec
sti
in
add
jmp
sbb
shll
adc
frstor
mov
mov
adc
cld
adc
xor
mov
add
gs
dec
leave
push
pop
lods
push
stos
pop
push
pcmpgtb
cs
xchg
push
mov
cli
add
xchg
xchg
stos
stos
popa
imul
sub
sub
lret
add
aam
push
ret
xor
jnp
and
sbb
dec
xchg
xorb
cmp
test
xchg
mov
inc
add
out
sbb
jge
sbb
cmp
pop
jne
and
insl
test
adc
repnz
clc
sub
push
sbb
add
mov
cmpb
add
loop
mov
mov
cmp
je
xchg
dec
or
jo
push
je
push
xor
pop
dec
add
or
mov
pop
jge
adc
sbb
inc
mov
dec
or
sarl
iret
mov
inc
jecxz
int3
clc
adc
inc
pop
xor
jo
push
hlt
testl
jle
add
jge
mov
les
jne
imul
sbb
pop
sub
ja
incb
ret
or
push
or
lock
mov
pop
idivb
push
popa
jne
push
les
test
adc
xchg
dec
mov
adc
pop
sub
test
and
sbb
adc
push
je
push
les
pop
and
xor
xchg
mov
stos
pop
jns
add
push
orb
adc
in
inc
push
add
push
mov
in
and
mov
jo
adc
cltd
sbb
adc
pop
and
jbe
adc
mull
jle
fs
pusha
loopne
shll
jae
jnp
cltd
or
pop
push
pop
pop
add
xchg
in
sbb
pop
pop
pusha
push
out
not
lds
sbb
js
mov
jne
adc
addl
mov
lcall
in
pop
jmp
inc
and
dec
add
xchg
xor
sub
cmp
and
xchg
lret
lret
dec
sub
fdivrp
shll
mov
add
mov
xchg
xor
add
dec
dec
inc
in
pusha
pop
xor
sbb
cmpsb
dec
sbb
jecxz
test
mov
add
or
dec
pop
mov
jl
inc
cli
shll
dec
ret
aas
adc
mov
add
aad
rorb
rolb
mov
je
shl
xlat
mov
adc
enter
cmp
popf
adc
js
xor
fcmovnb
and
inc
pop
push
sub
pop
xor
es
push
adc
adc
add
xor
cmc
jne
paddusb
dec
lods
daa
movsl
or
add
add
int3
outsl
and
and
jns
jns
inc
push
pushf
sbb
sub
aaa
fadd
scas
lods
jne
test
or
test
movsl
pop
jne
push
insl
cld
repz
mov
sub
flds
pop
mov
jne
xor
mov
inc
adc
mov
fnsave
imul
jb
push
sub
ss
es
cmp
sti
mov
aas
jmp
test
or
mov
jo
or
jecxz
shlb
lods
test
push
mov
pop
les
jne
mov
out
and
idivl
xor
iret
cs
and
mov
je
mov
jns
repz
pushf
ret
rclb
xchg
pop
and
es
call
xor
call
mov
outsb
loop
sbbb
sbb
mov
or
lret
push
movsl
insb
add
bound
faddl
push
orl
xchg
xchg
enterw
test
sub
jmp
inc
add
xorl
les
sub
add
adc
fs
mov
inc
and
xor
jp
popl
push
orl
cmp
add
cmp
mov
push
dec
cmp
or
lret
mov
dec
adc
popa
xor
subb
fdivrl
add
xor
sbb
xchg
je
add
adc
fdivl
js
jmp
adc
or
inc
add
aaa
fiaddl
push
lea
inc
add
pop
mov
or
rolb
out
test
out
decl
popf
xchg
adc
gs
pop
test
xchg
je
cmp
cwtl
mov
pop
std
jae
test
inc
sbb
pop
add
and
push
sbb
mov
xor
inc
xchg
dec
or
lea
ja
push
out
out
insl
lea
wrmsr
jne
jae
dec
xchg
arpl
pop
dec
cmp
loopne
repnz
test
fisttpl
mov
inc
je
jbe
jbe
and
mov
ds
cli
lods
dec
inc
cbtw
xchg
jl
loopne
xchg
sahf
addl
out
mov
mov
or
xchg
add
test
pop
xor
cmp
test
adc
push
mov
inc
push
or
add
or
xchg
popf
aam
decl
push
xchg
sub
jg
xor
sbb
sbb
cmp
and
adc
pop
das
add
je
add
add
shlb
sub
xchg
rclb
shlb
iret
and
or
imul
xchg
insb
xchg
in
ret
xchg
mov
les
incb
fs
cmp
adc
inc
cmp
fisttps
or
push
xor
add
dec
jb
or
insb
mov
mov
mov
das
push
or
mov
and
sub
xor
cmp
jg
cmp
mov
popa
jne
or
and
pushf
test
lret
imul
arpl
ja
mov
sub
out
xchg
pushaw
push
lock
sbb
sbb
in
loope
cwtl
adc
lock
and
scas
adc
mov
mov
cld
fwait
fs
cltd
sbb
push
scas
or
pop
lock
push
fadds
imul
jnp
movsl
xchg
pop
test
mov
mov
hlt
push
popa
adc
pop
pushf
shll
xchg
push
jmp
push
inc
popa
outsb
pop
out
inc
es
popl
or
inc
pop
repnz
or
mov
ret
fiadds
shl
fnstsw
movsb
xor
mov
rcrl
lahf
mov
mov
shl
aaa
andl
xchg
mull
sub
mov
and
add
ffree
pop
jge
mov
push
mov
shlb
and
mov
ljmp
adc
lods
lock
xchg
and
push
outsl
mov
xor
ret
aas
mov
loope
sub
or
mov
bound
nop
cmpl
add
mov
sbb
dec
inc
and
dec
xor
loopne
xchg
pusha
in
inc
stos
mov
pop
mov
or
push
or
inc
je
cs
es
xchg
push
dec
lds
sbb
shr
stc
mov
inc
scas
cltd
push
je
jno
cmpb
pop
cmp
je
sbb
mov
pop
jb
or
sbb
sbb
shlb
mov
dec
stos
ss
xor
mov
jmp
pushf
push
sub
mov
mov
in
lds
adcl
pop
data16
jbe
mov
mov
je
aad
arpl
cwtl
in
cmp
inc
mov
push
ret
test
mov
jl
inc
or
daa
xchg
jne
mov
stc
pop
lods
fs
sub
adc
add
jmp
adc
cltd
sbb
or
inc
sub
arpl
pop
sti
ss
adc
xor
and
out
sbb
dec
clc
sub
loopne
scas
push
add
push
inc
mov
dec
xchg
inc
imul
adc
aad
pushl
add
inc
imul
inc
sub
je
or
jne
pop
and
sbb
jg
daa
add
js
adc
hlt
rorl
mov
or
inc
mov
ret
ret
mov
push
mov
mov
cmpl
inc
inc
and
adc
push
mull
and
faddl
loopne
adc
xor
sub
xchg
inc
cs
jmp
push
and
add
xor
adc
js
pop
xor
mov
jnp
pop
xor
jmp
sbb
mov
pop
dec
dec
les
faddl
cs
imul
inc
mov
mov
push
mov
or
inc
xor
daa
push
cmp
mov
sbb
call
pop
setl
fcmovnbe
pop
and
sub
mov
pop
ret
add
adc
mov
cwtl
or
or
mov
jb
das
and
inc
mov
jne
shll
xor
inc
data16
loope
adc
cli
adc
add
test
test
popf
popa
mov
jo
push
dec
cmp
es
mov
push
adc
jmp
sbb
jmp
cmp
es
add
and
mov
xor
inc
aaa
jecxz
mov
jnp
jle
fistpl
stc
xchg
nop
cmp
or
in
pop
rcll
into
ret
fidivrs
jb
add
mov
imul
mov
stc
popa
fmull
mull
imul
sbb
xchg
test
movsl
jg
xor
sub
push
jecxz
fidivs
pop
cmp
pop
xor
or
and
jg
clc
or
sbb
addb
je
add
pop
push
jl
test
adc
ret
or
sub
mov
lcall
jl
jp
popf
mov
sub
pop
cmp
inc
xor
inc
js
xchg
sbbl
shl
sbb
inc
popa
sti
mov
lock
jl
fimuls
mov
or
push
popa
cmpsl
inc
push
inc
xchg
fucom
or
jb
insb
xor
pop
dec
cmp
sub
and
imul
cmp
pop
mov
aam
dec
sub
in
lret
scas
adc
and
pop
je
xor
cmp
add
out
stos
push
mov
loope
cwtl
movl
int
int
test
adc
cmp
add
pop
cmpb
pop
xchg
adcb
sbb
push
es
sbb
scas
mov
and
cmp
xor
fisttps
fistps
fcmovu
inc
pop
sub
mov
sub
add
sub
add
cmc
add
sbbb
inc
dec
out
inc
sub
dec
inc
popf
xchg
out
xlat
les
test
sahf
mov
xorb
int3
mov
cld
sub
movsl
inc
push
aam
push
in
jmp
cmp
lods
lret
mov
hlt
loopne
shlb
push
push
fdivr
pop
push
int3
push
and
in
cmp
fcoml
movsl
sbb
pop
mov
and
sbb
mov
rcrb
clc
pop
rsqrtps
or
dec
or
sbb
adc
and
js
pusha
adc
lods
mov
inc
dec
sub
cmc
inc
imul
pop
shrl
push
xchg
push
xchg
stos
movsl
aam
addr16
test
inc
loop
arpl
sub
scas
and
and
ret
test
mov
inc
dec
ror
lea
aam
push
negb
loopne
cli
in
lods
test
and
jmp
mov
push
into
mov
inc
loop
xchg
cmp
mov
push
scas
xor
adc
or
cwtl
lock
sbb
lds
int3
xor
cmpsl
xchg
sub
clc
jecxz
or
pusha
pop
mov
adc
inc
inc
xchg
jp
inc
push
inc
lret
popa
adc
repz
mov
jp
out
sbb
movsb
push
push
notl
sbb
cld
enter
pushf
test
dec
js
mov
or
pop
fs
lods
jns
or
gs
fmull
inc
sbb
sbbb
aaa
inc
aas
inc
fld
xor
sbb
and
jne
xchg
xchg
jmp
dec
outsl
sbb
xor
lea
inc
pop
mov
and
subl
mov
inc
aad
jmp
pop
test
or
and
and
shrb
call
and
jne
xchg
daa
or
adc
pusha
cmpsl
inc
add
nop
inc
mov
stos
inc
jg
loopne
cli
dec
mov
dec
adc
daa
imul
add
mov
mov
shll
rcrb
and
mov
push
mov
cltd
les
xchg
add
mov
lods
les
ffree
mov
adc
icebp
test
psubsw
sarb
int
or
ss
negl
add
fnstsw
pop
in
xchg
or
inc
add
flds
inc
or
mov
packsswb
fs
push
loop
movsl
les
pusha
nop
idivb
dec
push
sbb
rolb
inc
imul
inc
jp
dec
int
ret
jp
cmp
mov
cld
lea
lea
pop
pop
jp
ss
orl
xchg
or
orb
mov
dec
mov
daa
push
or
pop
repz
aas
cmp
lret
mov
bound
clc
mov
call
loope
adc
das
repnz
fcmovb
mov
cmp
jo
enter
push
mov
test
les
mov
adc
js
inc
sbb
out
jnp
pop
movswl
clc
xchg
adc
cmpw
mov
mov
pop
inc
push
fldt
sbb
cwtl
sbb
dec
roll
or
or
scas
daa
icebp
leave
test
daa
insb
int3
movb
xor
ret
cwtl
and
int
sahf
mov
or
and
insl
fsts
pop
dec
adc
inc
repz
shrb
andl
xor
shrb
shll
movsl
fmul
test
dec
xchg
test
pop
mov
cmp
mov
sub
push
jb
popa
insb
ja
jno
xchg
xchg
adc
fcoms
test
xlat
mov
or
pop
jge
mov
je
ret
or
adcb
and
and
xor
inc
int
or
mov
rclb
inc
mov
lds
addr16
rcrb
leave
xor
int3
enter
xor
adc
aam
dec
icebp
inc
push
mov
xor
out
inc
bound
popa
cmp
popf
mov
adc
and
das
inc
int3
es
push
inc
inc
lret
mov
enter
ret
mov
aaa
ret
das
movsl
add
addl
sub
mov
add
xor
push
hlt
jmp
or
adc
cmp
inc
mov
add
popa
ret
sub
stos
adc
dec
jl
pop
cmp
and
test
sbb
mov
divb
add
xchg
iret
shll
inc
or
clc
setl
fisubs
xchg
je
or
adc
xchg
ret
scas
and
sarb
mov
lds
inc
jo
das
sbb
sbb
sub
dec
or
mov
lcall
push
xor
sbb
lret
daa
adc
inc
sbb
rcrb
lock
mov
and
mov
mov
or
cmp
and
ds
andl
add
and
adc
jle
stc
fsubp
cmpb
in
je
mov
sbb
sub
jne
jle
pusha
sbb
test
mov
imul
rorb
dec
adc
mov
sub
dec
jno
rcrb
mov
test
jmp
pop
imul
xchg
aam
enter
adc
sub
aam
xor
xchg
mov
xorl
cmp
cld
cmpsb
orl
lock
and
push
pop
push
lea
push
or
cmp
or
test
adc
pop
int3
mov
mov
mov
push
add
push
enterw
rcrl
pop
mov
push
push
shlb
dec
outsb
push
inc
mov
lahf
add
and
cmp
dec
inc
adc
int3
mov
dec
mov
xorb
xchg
cmp
push
and
dec
je
aam
add
or
fcomps
sub
mov
mov
jg
pop
stc
mov
cmp
imul
mov
mov
add
cwtl
inc
adc
add
sbb
imul
mov
jg
ss
mov
xchg
adc
xor
jmp
xchg
sub
push
xchg
or
and
ljmp
jae
jo
nop
mov
xor
test
aas
loop
sub
iret
in
pop
aam
int
pusha
sub
cmp
movb
aam
mov
push
xor
or
inc
and
and
push
mov
inc
or
je
mov
sbb
stc
push
pop
je
roll
and
test
stc
dec
popa
loopne
adc
mov
addb
dec
and
imul
sbb
push
xor
xor
insb
jecxz
dec
and
pop
les
sub
or
xor
mov
sub
xchg
jecxz
int3
cmp
mov
fnstcw
pop
inc
pusha
mov
push
jbe
pop
cmp
sub
or
sub
push
add
xor
adc
cmpsl
pop
cmp
jae
daa
add
push
adc
or
inc
bswap
or
xor
and
push
pusha
lods
and
sub
push
mov
std
test
sbb
jae
aaa
nop
int3
jle
xor
lock
adcl
xchg
jne
cmp
or
mov
xor
jmp
imul
and
sbb
jnp
add
jne
and
add
cs
add
dec
xor
push
pop
cmp
cmp
sbb
push
movsb
cmpsl
lds
outsl
or
pop
pop
outsl
cmp
push
into
inc
and
jle
es
mov
ret
and
push
dec
inc
mov
cmp
into
cmp
std
sbb
pusha
sbb
and
cmp
nop
add
cmp
mov
jb
ret
shll
inc
sbb
xchg
or
mov
aaa
lock
icebp
jle
sbb
les
push
dec
sbb
lods
mov
pop
fisubl
repz
loope
xor
adc
xor
or
mov
push
mov
push
notb
jmp
ret
scas
adc
pop
inc
mov
pop
push
xor
push
in
stos
cmp
mov
popl
sbb
push
or
cwtl
push
push
or
test
dec
sub
les
push
jo
sbb
mov
xor
lods
nop
sbb
mov
mov
clc
or
outsl
mulb
push
jmp
sub
xor
pop
xchg
dec
xlat
ret
adc
sub
adcl
pop
cld
adc
and
pop
jg
jp
cmp
or
adc
xorb
mov
or
pop
insb
and
inc
rorl
jg
jnp
add
rolb
add
add
rolb
jmp
cmpl
ret
idiv
pop
sub
sub
push
mov
xorl
lods
adc
or
mov
cmp
adc
sbb
and
mov
scas
or
sbb
das
mov
jno
and
push
xor
pop
inc
shrl
mov
add
ret
mov
dec
jl
dec
sbb
loope
jg
mov
out
in
in
mov
push
out
xor
xchg
xchg
add
addl
jae
mov
shlb
hlt
out
lods
dec
add
jae,pn
test
pushl
inc
add
clc
sbb
je
aad
lock
clc
sub
push
and
adc
jmp
add
adc
or
jne
gs
mov
cwtl
add
dec
add
inc
push
sub
pop
mov
scas
jge
adc
add
clc
xor
add
gs
mov
add
add
repz
lock
lds
pop
dec
push
sbb
enter
jmp
add
and
iret
adc
test
jns
test
and
xchg
roll
fnstenv
and
into
push
mov
and
inc
lock
pop
and
movsb
mov
repz
xor
add
sbb
bound
mov
inc
jnp
jne
push
or
push
loop
sub
data16
xchg
cmp
xlat
inc
inc
loope
aam
push
cmpsl
insb
or
and
push
mov
ss
les
andl
dec
sub
ret
imul
sbb
xchg
mov
pop
fldln2
xchg
adc
cmp
sub
pop
sbb
sbb
das
jg
mov
mov
arpl
xchg
js
out
inc
adc
das
call
add
mov
sbb
sbb
push
repnz
sbb
inc
adc
mov
movsl
push
cmpsl
and
fs
or
mov
out
sbb
or
xor
or
jo
ret
xor
xor
bound
xlat
push
aas
rcrb
inc
jmp
sbb
addr16
jne
cmp
mov
and
rorb
inc
and
into
mov
dec
mov
add
sbb
scas
andb
rcl
insb
mov
push
hlt
pushf
jp
outsl
nop
cwtl
cmp
inc
pushf
pop
rcll
cmp
js
push
inc
sub
mov
popa
ja
jg
les
dec
dec
mov
jns
push
pop
cmp
sub
loope
cmp
test
dec
jecxz
cmp
mov
jge
dec
dec
gs
mov
sub
and
imul
aaa
pop
jle
xchg
scas
loopne
test
call
pop
popa
sub
cwtl
mov
sbb
sbbl
add
pushf
sub
lret
add
add
and
push
fstpt
and
adc
xor
idivb
test
loopne
push
sbbb
jle
sub
jp
jnp
push
dec
dec
stos
push
inc
add
pop
scas
pop
int3
mov
rorb
pop
add
roll
fdivl
xor
cli
and
sbb
jmp
push
sbb
jo
fcomip
pop
test
mov
shrb
xchg
pop
or
xchg
add
ss
adc
mov
push
jo
adcl
add
sub
rcrb
es
rorl
cltd
inc
das
aaa
push
or
inc
rcll
or
inc
mov
mov
outsb
mov
mov
mov
insl
imul
push
push
and
sbb
and
sbb
fidivrs
nop
mov
or
push
fs
test
mov
inc
fcmovnbe
jle
idivb
or
adc
pop
es
mov
std
push
or
adc
jmp
jns
or
daa
or
lahf
and
cmpsb
dec
fidivrl
sbb
pop
inc
mov
call
dec
outsl
pop
sbb
sub
mov
jo
pop
sub
pop
dec
imul
cmp
sti
lods
adc
femms
cmp
adcb
movb
add
mov
pop
lods
add
xchg
gs
enter
daa
mov
sub
xor
adc
enter
lahf
jle
add
sbb
cmp
push
add
add
aad
adc
call
test
pop
fstpt
loopne
xchg
and
lock
sub
rol
xchg
sbb
add
daa
or
aaa
pusha
stos
mov
arpl
lahf
testb
cs
pop
push
mov
xor
inc
dec
add
pop
sbb
je
orl
or
sub
adc
mov
adc
mov
sub
shll
rorb
sub
push
loope
mov
mov
daa
cmp
sub
xor
inc
or
mov
xor
dec
xorl
andb
icebp
add
jmp
scas
test
cltd
hlt
enter
in
lock
mov
bound
fxch
popa
sbb
push
pushl
pop
les
push
sub
add
nopl
or
dec
call
or
test
add
fnstcw
mov
mov
jg
mov
add
sub
or
loope
push
aaa
push
clc
pushf
pop
loope
in
push
movsl
test
hlt
lahf
push
jle
lods
xchg
std
xor
push
sbb
xchg
xchg
aad
add
sbb
imul
ret
and
push
push
fdivrp
dec
jne
or
push
lcall
push
add
test
mov
xchg
sub
pop
faddl
sub
push
loopne
sarb
je
jbe
push
or
fmuls
mov
sbb
enter
daa
adc
mov
adc
clc
mov
adc
scas
test
jl
in
sbb
or
nop
stos
mov
adc
mov
or
push
or
pop
mov
inc
std
in
add
xchg
dec
or
mov
mov
cmpsb
stos
xchg
mov
movsl
jnp
loope
inc
add
cmpsl
test
scas
sub
sub
adc
test
xchg
in
or
cmp
mov
fistpl
clc
cmpl
clc
lock
mov
repnz
or
call
movsb
repnz
pusha
ljmp
mov
int3
or
cltd
movb
dec
pop
inc
jl
imul
repnz
mov
ds
xor
arpl
or
movsl
xorl
sub
jmp
movb
or
xor
out
add
add
push
testl
xchg
mov
inc
jle
inc
sub
pop
pcmpeqw
popf
or
popf
sub
mov
shrl
mov
jnp
ja
or
stc
or
out
lods
xchg
mov
mov
mov
dec
sahf
mov
or
mov
lret
ret
rol
mov
dec
or
out
add
push
mov
sub
jecxz
jecxz
jmp
idivb
clc
popf
outsl
mov
jmp
inc
and
not
ret
xchg
sbb
jge
adc
sarl
mov
and
push
adc
outsl
mov
das
or
lahf
adc
cmp
into
mov
push
imul
add
xchg
add
test
int3
into
adc
fmul
adc
mov
das
das
or
push
mov
and
into
adc
fmul
inc
dec
add
add
sub
sbb
dec
jp
dec
rorb
dec
mov
sbb
fsubl
in
inc
cmp
xchg
fmull
fsubrp
movsl
popf
or
dec
fadds
pop
ficompl
sbb
mov
or
adc
lods
leave
stc
jle
xchg
bound
add
outsb
rolb
sbb
or
sub
add
pop
jne
pop
aad
and
mov
cmp
mov
pop
mov
xchg
add
dec
dec
pop
pop
pop
adc
divl
fisubl
inc
xchg
jl
pushf
les
dec
inc
enter
mov
sbb
xchg
dec
repz
push
add
sbb
mov
or
pop
mov
dec
insl
xor
dec
jmp
jbe
dec
or
mov
add
jns
pushf
adc
pop
nop
in
js
bound
push
arpl
add
dec
clc
popa
sub
jle
xchg
cmpsl
dec
fs
fmul
dec
mov
loope
outsb
scas
mov
dec
sbb
xlat
cmp
jmp
mov
in
or
lahf
pop
icebp
push
cmc
sub
aaa
loopne
mov
mov
inc
jle
idivl
dec
adc
or
mov
fadd
xstore-rng
cmpsl
add
jno
inc
cmp
push
clc
xchg
sub
xchg
gs
in
in
dec
aam
js
in
hlt
add
mov
test
or
and
xchg
dec
adc
cld
mov
adc
push
push
mov
das
ss
in
arpl
ret
lcall
ret
mov
mulb
or
push
aad
push
adc
outsb
testl
rcll
or
stos
jne
dec
les
jne
push
jno,pt
mov
mov
mov
enter
andb
adc
and
je
aam
inc
dec
push
fcomp
aam
sub
mov
fnstenv
lea
jbe
xchg
sbb
xorb
aam
fs
add
test
xor
cwtl
jno
addb
fs
inc
ss
dec
repnz
fistpl
sbb
lods
outsl
into
add
test
or
adc
cmp
imul
repz
or
adc
loopne
dec
ss
lcall
xchg
fsubl
and
mov
in
in
or
xor
out
add
mov
xchg
or
jg
cmc
cmpsb
adc
pusha
and
scas
lods
mov
pop
cmp
les
push
mov
aam
aad
jmp
xorl
jae
mov
adc
or
xor
push
inc
inc
sbb
insb
adcb
cvtps2pi
test
mov
and
shlb
push
adc
add
add
adcb
sbb
ss
fs
popf
shrb
les
out
ss
xor
out
or
or
add
adc
cmp
add
popa
aam
cmp
sbbl
or
lods
add
inc
clc
popa
jl
imul
adc
movsl
lea
adc
scas
add
and
push
fnstenv
mov
and
sbb
and
fistps
dec
mov
fwait
loop
push
in
sub
mov
push
stos
adc
push
cmp
addb
popf
add
cmp
sbb
sub
rorl
test
xor
nop
bound
mov
dec
push
dec
and
xchg
in
or
dec
inc
andb
cmp
fxch
shrl
inc
ss
inc
test
mov
and
adc
scas
sbb
pushf
dec
jo
sbb
ja
pop
add
hlt
add
mov
xorl
xchg
add
adc
ret
or
aas
lea
inc
mov
adcl
ret
xor
sbb
popa
call
fxch
inc
add
outsb
inc
add
pop
jbe
sub
sahf
mov
mov
invlpg
cmpl
push
adc
pop
sub
into
dec
loopne
addb
adc
inc
add
repz
or
dec
jmp
mov
pushf
into
out
addr16
testb
mov
nop
inc
add
mov
sub
push
xor
or
adc
sbb
leave
xor
pop
pop
and
pop
inc
les
push
xchg
loop
mov
cmp
insb
mov
xor
nop
int
and
enter
and
sbb
in
mov
dec
fildl
dec
cmp
jge
daa
enter
lea
lock
enter
call
ret
fdivrs
adc
pop
sub
test
push
lods
or
sub
or
push
dec
rolb
add
cmp
sbb
cld
push
adc
adc
jge
cmp
adc
fidivl
sub
push
jle
in
fcmovb
test
das
sbb
xchg
add
sbb
inc
add
neg
inc
lret
push
pop
repz
jle
mov
hlt
add
hlt
sbb
and
scas
mov
out
popa
adc
push
xor
nop
push
cmpl
and
cmp
stos
mov
pop
mov
gs
lock
push
popa
mov
sbb
sbb
or
mov
sbb
push
lds
out
add
xchg
dec
stos
add
call
add
rclb
lret
mov
jne
shlb
loopne
push
sub
jmp
cmp
std
mov
inc
add
and
mov
push
fwait
pop
jl
adc
rclb
xor
fmuls
movsl
dec
mull
scas
clc
nop
out
jmp
push
or
sub
mov
xor
jecxz
in
lods
jg
ds
hlt
sub
incl
add
push
mov
in
vpclmulqdq
pop
jns
xchg
stos
movswl
and
or
add
mov
scas
movsl
and
aaa
sbb
roll
loopne
nop
cmp
add
jmp
out
add
enter
inc
jns
and
mov
cmp
js
jnp
mov
into
push
or
call
mov
js
inc
push
jg
das
sbb
or
or
add
fwait
sub
xchg
fld
call
push
mov
cmp
or
aad
js
fwait
les
arpl
pushf
mov
adc
ret
fldt
push
add
fiaddl
ret
cmp
je
inc
fucom
lahf
pop
popf
sbb
fimuls
push
mov
xchg
pushf
lcall
pop
mov
jae
inc
sub
adc
pop
adc
ficoms
inc
jmp
adc
adc
test
push
fsts
or
sub
fildl
loop
dec
scas
testb
decl
das
add
pop
ret
add
and
cwtl
pusha
movb
data16
and
dec
nop
and
rclb
add
jmp
out
ret
or
movsb
dec
mov
or
andnps
pop
andl
sub
int
inc
add
xchg
add
jle
mov
arpl
stc
sub
dec
cmp
dec
scas
aaa
sarl
sub
or
sub
pop
adcl
push
dec
mov
push
dec
push
xchg
mov
sbb
adc
dec
mov
aas
jbe
sbb
pop
or
add
outsb
push
add
out
mov
push
push
sbb
inc
fs
push
push
out
js
pusha
sbbb
rolb
cmp
test
inc
rorl
mov
or
mov
or
imul
inc
repz
mov
jmp
mov
and
mov
push
xchg
daa
inc
ret
inc
in
jbe
cmp
and
and
loopne
pushf
outsl
mov
cmp
ja
arpl
ret
pop
add
inc
and
jbe
push
jmp
xor
mov
fdivs
popl
push
jb
sbb
cmc
sub
sbb
xchg
jbe
iret
xchg
cmp
inc
call
add
movsb
push
cwtl
mov
loope
ficompl
imul
push
sbb
lods
or
or
sbb
loopne
fnstenv
adc
cltd
pop
fs
push
mov
xor
jne
ds
sarb
inc
outsl
rorb
ss
inc
inc
inc
inc
pusha
and
push
les
xchg
push
mov
repz
mov
lcall
push
and
sub
cli
cmp
iret
adc
mov
mov
sbb
movsb
int3
xchg
or
push
mov
xor
mov
adc
push
dec
mov
xor
loop
shl
adc
pop
adcb
adc
xchg
shlb
jno
mov
fcompl
aaa
inc
dec
pusha
mov
mov
or
addr16
dec
or
or
xchg
mov
stos
test
dec
jne
pop
inc
rcrb
lods
mov
pand
push
and
mov
or
xor
data16
out
mov
pop
mov
rcll
xchg
sub
jbe
xchg
mov
loop
cmp
leave
sub
sub
out
add
pop
dec
push
push
cmp
ja
push
dec
mov
xor
shll
adc
sub
in
gs
pop
arpl
dec
push
add
ret
cmp
cmp
dec
dec
sbb
jp
dec
inc
mov
pop
push
adc
push
out
sbb
jp
lock
leave
xor
cmp
mov
jmp
sub
adc
jo
imul
sti
mov
popw
and
arpl
adc
push
ss
or
push
clc
loope
ror
fiadds
and
dec
xchg
add
or
out
movsb
sbb
mov
pop
mov
or
dec
in
jns
loopne
dec
les
enter
add
adc
mov
popf
xorl
adc
nop
int
adc
sbb
cmpl
imull
bound
cmpsb
pop
or
and
adc
push
es
loopne
ss
mov
stos
bound
jns
jge
out
jl
daa
push
jle
cmc
int3
jbe
jo
mov
scas
test
lret
pop
mov
add
or
sbb
pop
sbb
sbb
xchg
mov
adc
pop
xchg
add
and
jo
cmp
or
loop
hlt
add
cmp
cmp
cmp
sbb
arpl
or
jl
inc
xchg
outsb
lods
idivb
push
mov
ret
pop
movsl
mov
sub
enter
fldenv
adc
inc
dec
or
sub
mov
stos
adc
mov
add
pushl
test
mov
jle
cmpsb
cmp
mov
cmp
imul
jno
pushf
stos
jmp
push
mov
pushf
daa
call
cmp
push
xor
aad
inc
push
xor
sarb
mov
inc
mov
cmp
idiv
jg
pop
add
add
addl
incl
pop
or
rcl
insb
inc
jg
push
jo
ret
rolb
dec
push
mov
fprem
or
lods
lret
adc
loopne
in
in
or
pop
aaa
test
and
or
add
movsb
iret
add
pop
adc
nop
mov
lret
adc
fs
dec
xlat
fdiv
adcb
jo
push
call
aam
push
adcb
or
sub
mov
add
adc
xor
or
mov
js
xor
and
jmp
ja
mov
inc
pop
es
jle
xchg
scas
mov
mov
inc
loop
inc
scas
scas
xchg
hlt
or
push
dec
xor
mov
push
add
repnz
rcr
cmpb
pop
movsl
jp
cltd
cmp
fisubs
hlt
pop
stos
xor
fs
adc
loopne
jae
sub
jge
and
loopne
jp
imul
inc
inc
fstpl
sub
or
sbb
rorb
iret
stos
or
dec
loopne
jl
push
dec
pop
rclb
ljmp
popa
push
mov
xor
fsubl
das
inc
adc
test
adc
mov
xor
sub
jne
ret
xor
test
xchg
mov
push
mov
dec
and
and
cmp
xor
mull
fs
aaa
or
cmpb
push
mov
pop
sub
mov
dec
daa
add
pop
mov
jmp
push
add
cmp
cmpsl
xchg
inc
xchg
and
pop
jp
push
into
push
jl
adc
cmpsb
stos
mov
cmp
sub
push
mov
mov
das
notl
mov
sarl
inc
push
jecxz
xor
or
or
into
mov
and
and
push
push
sbb
or
inc
or
aas
dec
adc
inc
inc
dec
loopne
fiadds
sbb
or
sbb
add
or
addb
int
and
lret
push
les
push
lock
jmp
xor
or
enter
ja
or
cmc
add
push
enter
and
push
inc
mov
stc
ja
push
xchg
ja
and
inc
jecxz
or
sbb
imul
pop
and
sbb
xor
sbb
js
loopne
aas
pop
adc
push
mov
sbb
addr16
sub
or
das
add
push
mov
orb
or
int3
inc
sub
mov
test
flds
scas
xchg
punpckhdq
add
sti
pop
add
dec
sbb
jne
or
inc
rcrb
sub
pop
cmp
jno
sbb
inc
mov
sub
out
jmp
sub
sbb
sub
push
sbb
and
sbb
loopne
adc
inc
fmull
push
enter
push
add
icebp
call
xor
clc
sub
xor
jg
mov
add
mov
scas
inc
les
jne
add
addb
add
cmp
aaa
xchg
scas
rolb
es
out
push
jns
jbe
fimull
jg
lods
mov
sbb
xor
push
cmp
dec
cmp
notb
add
aaa
mov
mov
test
cmp
sub
aas
adc
ja
ret
add
and
mov
sti
and
xchg
jg
push
push
lock
jp
jg
pop
jg
in
rolb
jl
sti
lock
lods
pusha
loop
add
cmpl
jmp
cmc
inc
testb
dec
jne
movsl
in
push
jbe
repnz
push
sbb
dec
or
or
in
mov
add
stc
aas
inc
dec
movsb
or
dec
adc
xchg
pop
pop
rcr
in
push
cmp
cmp
faddp
rcr
jp
add
mov
mov
dec
out
mov
dec
pop
jne
test
or
adcl
clc
scas
push
sbb
loopne
pop
std
pop
sbb
xchg
rcrl
dec
loope
mov
inc
xchg
and
add
ljmp
sbb
lret
push
gs
add
mov
add
adc
push
outsb
insl
push
nop
pop
push
inc
fdivs
mov
das
sub
and
ret
sub
sbb
inc
mov
lret
in
daa
jbe
jbe
mov
pop
mov
and
mov
xchg
adc
push
lea
lods
call
jp
pop
xor
pop
inc
sbb
add
shr
outsb
or
lock
jne
push
add
sub
inc
push
es
push
cli
add
adc
push
add
pusha
xor
jae
push
and
xchg
loope
aam
pop
pop
mov
or
jg
andb
push
call
sbb
jecxz
pop
pop
aas
cmc
or
leave
jnp
jle
add
pop
cmp
mov
and
sub
sbbb
inc
inc
pop
inc
lea
sub
cld
mov
movsl
fisubl
inc
lcall
dec
or
addr16
add
aaa
dec
mov
ffreep
add
add
iret
add
fs
xor
mov
sub
xchg
shlb
popf
or
mov
popa
and
xor
mull
dec
pop
insb
test
adcb
in
dec
or
dec
and
cmpb
outsl
sub
pop
cmp
add
mov
push
sti
leave
outsb
jo
cld
pop
sbb
add
inc
xlat
xchg
pusha
pop
scas
sbb
ror
adc
push
or
jmp
push
in
jle
gs
sbb
mov
inc
pop
pusha
mov
imul
sbb
mov
dec
or
mov
cmpsl
ret
and
push
xchg
push
stos
xchg
xchg
xor
adc
ret
cmc
lds
pop
fsubrs
insl
adc
es
push
and
inc
push
inc
sbb
add
cmp
sub
pop
pop
jb
sbbb
adc
in
add
sub
adc
sub
call
xor
push
in
dec
lock
sub
jp
cmp
je
call
jns
test
jnp
add
mov
cmp
test
add
sbb
pop
push
add
jno
aaa
xchg
imul
sbb
loope
pop
repz
inc
arpl
inc
aam
or
or
mov
outsb
inc
pushf
sub
or
mov
cltd
and
inc
imull
cmpsb
push
dec
or
or
sbb
push
sub
or
cmp
or
das
adc
psubd
inc
lods
add
jb
xor
jge
xchg
pop
les
cmc
add
dec
clc
sar
jns
adc
inc
jae
sub
or
mov
pop
pop
jne
add
xorb
or
iret
or
inc
inc
popf
lock
jo
sarl
push
push
pop
je
sub
pop
movsl
outsl
dec
mov
push
push
faddl
icebp
cmp
add
fisttpll
push
lds
jnp
push
outsl
push
or
dec
adc
or
arpl
mov
sub
fs
les
sbb
inc
adc
and
sbb
shrb
and
mov
in
dec
xor
cmpsb
scas
adc
cmp
dec
xchg
adc
dec
inc
sbb
rorb
adc
cmp
push
pop
adc
dec
xchg
dec
leave
and
xor
aam
lahf
xor
pop
add
lods
das
add
sub
shl
add
addb
lea
jnp
dec
clc
push
cmp
push
dec
mov
and
push
mov
jmp
mov
add
push
pop
sub
das
pop
out
mov
adc
divl
or
push
pop
push
mov
jecxz
in
sub
je
mov
jl
cwtl
enter
enter
pop
and
push
pop
or
test
sbb
in
sbb
adc
ss
sbb
xorl
sub
enter
fcompl
or
insb
or
sahf
push
shrb
sbb
das
push
js
bound
lea
lock
mov
ja
loop
lea
add
cmp
popf
lods
and
sbb
mov
pop
dec
das
adc
xor
xor
lea
mov
sarl
jp
sbb
xchg
pop
mov
dec
dec
push
sbb
xchg
test
lods
arpl
cmc
inc
push
test
sbb
cmp
fdivrl
out
test
jle
fnstcw
and
movl
fldt
push
test
dec
sti
xchg
ss
fistps
mov
icebp
fmull
enter
or
das
test
push
int3
pop
dec
sbb
clc
push
pop
xor
cli
ret
mov
pusha
xchg
mov
xchg
cmc
data16
or
test
divl
sbb
cltd
adc
mov
xor
mov
pushf
jl
push
jbe
mov
lods
rcrb
push
mov
daa
ja
push
inc
orb
sbb
cmp
pop
in
in
popa
into
push
add
sbb
es
popf
lock
adc
xor
sub
nop
lods
loopne
adcb
adc
popa
cmp
outsb
and
cmp
sbb
xchg
fdiv
in
jae
mov
sahf
push
push
inc
push
test
jns
mov
in
and
inc
lcall
push
push
adc
mov
repz
loope
into
in
es
mov
push
dec
mov
cmpsb
adc
sub
or
xor
pop
or
xor
loope
adc
dec
mov
mov
mov
cmpsl
pusha
addb
pop
add
fs
push
sub
out
jb
push
and
outsb
decl
mov
cmp
mov
cmpsl
add
dec
pop
mov
xor
icebp
add
fwait
inc
xchg
cmp
daa
inc
jl
and
pop
push
sahf
jle
pushf
icebp
pop
out
sbb
or
add
lahf
mov
xchg
cmp
bound
adc
jmp
jae
jp
cmp
jl
cltd
add
andl
pop
push
arpl
and
and
pop
push
pusha
into
add
cmp
insb
mov
minps
push
sbb
jbe
js
pushw
push
ret
incl
arpl
push
ror
test
inc
cmc
dec
sbb
loop
test
or
pop
jmp
mov
xchg
jo
and
ss
sti
fs
addr16
adc
repnz
test
into
push
enter
pop
adc
and
mov
jb
fmull
mov
enter
xchg
pop
dec
cmp
enter
pop
push
arpl
movsb
adcl
jl
cld
je
popa
xor
in
mov
ret
arpl
cmpsb
add
and
js
and
leave
adc
pop
nop
gs
jne
mov
mov
call
lcall
nop
push
cmp
add
leave
xor
add
add
loopne
push
std
xchg
cmp
les
pop
pop
jg
push
pusha
adc
xor
dec
push
call
jg
loope
notb
add
es
xor
lock
mov
ss
es
pop
lahf
popf
and
xor
loope
add
mov
jae
cltd
adc
and
scas
jae
testl
sbb
sbb
rol
pop
push
enter
cwtl
jp
jle
out
and
and
xor
xor
lods
pop
sbb
mov
aam
and
popa
pop
aas
aad
or
mov
adc
sbb
adc
push
and
ljmp
push
cmp
xor
cmc
fcoms
push
cmp
cmp
mov
add
push
jle,pn
sub
cmp
mov
push
ja
push
sahf
and
lds
cltd
pop
jmp
pop
pop
add
popa
aad
dec
fisubrs
inc
lods
inc
pop
fadds
mov
mov
push
mov
sub
in
movsb
mov
aaa
lret
push
pop
pusha
jno
test
int
stos
push
aaa
mov
inc
or
add
or
inc
shl
loopne
cmp
jge
push
test
enter
pop
inc
or
and
jbe
xchg
or
pop
pop
movsb
cmpb
pop
cmp
push
jl
or
xor
clc
sub
xchg
daa
jg
jmp
push
in
in
push
push
xor
ss
ret
fcmovb
leave
mov
movsb
mov
and
inc
adc
test
adc
and
xor
push
sub
dec
aad
leave
inc
stc
out
xor
scas
or
lret
or
adc
test
xor
add
aaa
dec
dec
enter
jnp
jl
js
scas
cmp
xor
lret
mov
sub
or
rclb
jge
lds
push
test
arpl
test
int3
inc
mov
test
lock
inc
add
add
push
or
push
inc
add
fcomps
popa
popf
hlt
xchg
sbb
outsl
mov
jne
xlat
cwtl
pop
or
mov
popa
fwait
sub
movsl
jo
dec
movsl
adc
sarl
pusha
push
in
push
jmp
and
sub
adc
xlat
ds
lods
cld
push
pop
adc
cli
cmpb
leave
decl
or
cmpsl
and
mov
push
push
sub
out
addr16
and
leave
add
adc
inc
cmpb
arpl
cmc
test
es
pop
lret
mov
adc
sahf
xor
stos
xlat
inc
add
pop
inc
bound
dec
daa
sub
addl
sbb
adc
pushf
divl
cvttps2pi
jno
movswl
cmp
lods
ss
pop
das
and
clc
and
xor
push
xor
xchg
inc
jbe
add
inc
mov
mov
adc
pop
pop
cltd
leave
cmp
adc
cmpsb
jnp
cltd
xchg
inc
and
movsl
lea
lret
mov
loopne
inc
loopne
in
pop
shlb
sub
in
into
rclb
inc
dec
sub
inc
jecxz
mov
dec
clc
shll
jne
jmp
or
or
adc
pop
cld
aaa
or
mov
push
xchg
les
xor
xchg
or
add
jg
adc
ret
dec
test
test
inc
or
add
adc
or
adc
push
enter
sbb
or
mov
fisttpll
lahf
fsubrs
cmp
inc
mov
cmp
pop
or
push
rcrb
jmp
lea
lea
xchg
int3
sub
and
stos
nop
icebp
mov
pop
daa
push
das
je
rcrb
mov
sub
or
inc
mov
jmp
popa
push
cmpb
sbb
mov
cmp
jo
das
push
movsb
loopne
pop
sub
mov
nop
mov
insb
xchg
adc
scas
dec
inc
stos
xlat
rcrl
or
in
push
mov
xor
nop
fdivrl
int3
lret
fimuls
lret
adc
push
xor
dec
sbb
cltd
out
pop
repz
add
push
pop
push
mov
out
fwait
lock
and
lds
adc
or
xor
inc
iret
nop
cmp
jl
xorb
xor
mov
movsb
mov
nop
cltd
lds
xchg
dec
dec
imul
cmpsl
movsb
icebp
dec
dec
push
test
dec
jns
insl
insl
imul
inc
gs
pop
dec
mov
dec
dec
daa
ss
inc
popf
and
jae
push
sbb
lcall
cmpsb
pop
insl
jo
lods
dec
insl
mov
inc
out
sub
sub
fadds
xchg
or
dec
push
pop
jno
clc
xchg
sbb
push
cmp
data16
push
and
cmpsb
adc
push
add
mov
push
ret
mov
stos
mov
sbb
mov
push
stos
test
push
les
pop
jl
or
or
mov
rcrl
xor
sub
arpl
xor
cmp
adc
test
xor
loop
ret
cmp
cli
adc
mov
pop
xlat
adcb
cmp
fs
insl
sbbb
and
pop
sub
mov
sbb
cmp
fsubs
and
repz
in
sub
xor
and
inc
inc
xor
or
daa
and
imul
dec
ret
pop
fs
mov
orb
inc
and
dec
fdivl
flds
xor
or
cmp
into
outsl
sbb
jge
or
push
mov
dec
fimull
lea
push
sub
dec
add
pop
ret
outsl
dec
sti
leave
jl
mov
or
dec
add
xchg
mov
ret
sub
sti
test
pop
popa
daa
push
filds
xor
xchg
mov
lds
mov
pop
push
push
push
dec
adc
push
pusha
inc
fimuls
bound
sub
cwtl
inc
xchg
or
mov
lea
outsl
mov
data16
push
ja
outsb
pop
test
inc
dec
xor
adc
jg
insl
loopne
jo
sbb
mov
rcrl
jecxz
enter
mov
test
jg
insb
or
test
shlb
jns
inc
mov
pop
cmp
xchg
jp
setae
inc
pop
adc
adc
loop
jecxz
mov
add
adc
add
lock
mov
scas
insl
mov
mov
pop
xchg
pop
fisttps
add
mov
fidivrs
dec
push
outsl
pop
data16
out
mov
scas
or
push
pop
scas
insb
add
insb
test
adc
mov
xchg
push
rclb
bound
and
fs
mov
sar
xchg
pop
push
add
ja
inc
cmp
pop
lret
js
push
lock
rclb
push
push
pop
xchg
jmp
pop
mov
cmp
dec
xchg
dec
fiadds
std
psllq
in
sub
xor
mov
push
repz
push
adc
lods
jbe
pop
lret
lods
ds
sub
mov
add
imul
pop
in
adc
pop
cld
ds
inc
push
scas
inc
test
repz
dec
cmpb
or
xor
movb
xchg
mov
or
test
add
pop
aam
sbb
pop
xchg
dec
xor
testb
dec
add
test
push
push
and
or
vmread
lcall
dec
push
or
and
pop
inc
rol
in
pushf
add
mov
jo
mov
adc
jmp
jo
mov
dec
sub
push
call
xchg
daa
and
cmp
lcall
push
cmpsb
add
cmpsb
push
pop
in
addr16
fiaddl
or
or
movsl
iret
pop
sbb
fistpl
sub
xchg
les
xchg
and
fists
fs
aaa
mov
xor
pop
or
add
sbb
pop
xor
inc
and
rorb
adc
adcb
fsubs
sub
sub
cmp
and
mov
inc
inc
xor
faddl
inc
stos
jns
inc
sbb
je
mov
lods
cmp
sbb
shll
lret
add
cld
inc
or
adc
sbb
jnp
movsl
jnp
mov
xor
neg
test
add
push
int3
add
mov
and
add
pusha
mov
or
fs
dec
xchg
xchg
leave
notl
adc
push
xchg
in
xor
hlt
inc
rcrb
movsb
out
xor
aas
test
fisttps
xor
js
test
ja
sbb
jmp
xchg
mov
xchg
or
inc
xchg
clc
sbb
jne
pop
push
pop
sbb
sub
jo
xchg
loopne
ret
add
jo
inc
mov
inc
xlat
xor
pop
mov
rorl
cmpsl
movsb
ss
cmp
or
or
std
mov
push
cmp
inc
jecxz
sub
test
cmp
fisttpll
cmp
pop
adc
sub
jl
fisubrl
fs
pop
push
aas
call
int3
loopne
pop
inc
pop
rolb
push
inc
mov
and
or
adc
add
rorl
or
push
sub
inc
jle
adc
mov
clc
xchg
aad
mov
pop
inc
mov
add
rcrl
or
add
imul
push
and
sbb
daa
push
imul
sub
cmp
pusha
das
add
push
popf
add
pavgw
or
sub
pop
mov
push
cmc
dec
push
js
lcall
int3
test
add
mov
xor
aas
push
push
push
jo
fstps
int3
inc
sbb
daa
push
sbbl
shlb
divb
inc
add
test
mov
xor
ds
sbb
sub
xchg
pushf
add
push
cmp
mov
lea
jno
push
inc
mov
and
push
aas
mov
adc
push
fs
jnp
adc
xor
push
push
loop
lods
xchg
fwait
sub
jl
add
and
sbb
adc
mov
add
and
mov
dec
mov
cmp
cmp
or
movsb
jne
iret
popa
and
sbb
aaa
popa
mov
push
sti
repnz
cmp
push
and
dec
scas
mov
lea
sbb
fbstp
loopne
xchg
push
pop
xlat
loop
pop
jp
out
out
test
add
add
sbb
mov
pop
imul
push
jnp
or
loopne
inc
mov
pushf
mov
adc
jne
mov
mov
test
out
in
xchg
push
loope
jnp
repnz
mov
inc
mov
inc
sbb
cmp
pop
sub
je
lds
jno
loope
call
and
popa
rol
js
cmp
and
lea
push
pop
aas
out
xlat
fs
push
pop
cmp
mov
xchg
std
aam
pop
jecxz
or
dec
mov
add
cmp
pop
push
add
add
mov
lds
cmp
lods
xor
imul
pusha
inc
jno
add
sbb
jmp
jo
loop
cmp
je
test
shll
cmp
sbb
dec
adc
outsl
or
ss
sub
mov
gs
xchg
sbb
or
jo
mov
lods
fstpt
mov
jmp
loopne
and
mov
dec
mov
jae
adc
test
xor
es
jne
and
inc
pop
dec
adc
addr16
ficoms
lea
adc
adc
fidivrs
jns
jno
out
rorl
orl
mov
sbb
jmp
inc
cmpb
cmpb
sub
mov
push
sbb
sbb
mov
or
sub
xor
cmpsb
pop
sbb
aas
icebp
jne
rcrl
rcrl
xchg
loop
mov
fstpt
xchg
roll
mov
xlat
add
adc
dec
xchg
test
rcrl
sub
mov
sbb
call
dec
sbb
movsb
jmp
pop
push
add
xchg
jg
add
jl
notl
and
adc
clc
jbe
and
inc
dec
mov
jecxz
inc
push
or
test
vmovss
add
scas
jle
and
add
push
jbe
ss
mov
pop
mov
aam
cmc
xlat
mov
dec
faddl
inc
cmpb
sbb
lahf
fdivp
mov
inc
pop
adc
pop
clc
push
sbb
pop
movsb
movsl
jbe
fadds
sbb
jle
sub
adc
imul
pop
xor
out
subl
scas
fldl
add
jmp
out
or
and
je
mov
fistpll
jp
push
shlb
xor
pop
movl
mov
lods
lahf
xor
mov
out
xor
test
mov
jge
jmp
add
mov
sbb
and
div
test
pushl
cmp
cmpl
push
rolb
add
xchg
in
jl
adc
movl
dec
mov
test
insb
js
repz
pop
adcb
and
and
sbb
xchg
lods
negl
fdivs
test
push
add
add
lcall
xor
pop
icebp
rclb
mov
mov
arpl
dec
adc
inc
rclb
roll
jg
gs
jo
sbbb
insb
pop
xchg
es
lock
icebp
mov
or
sbb
pop
adc
or
out
fldenv
push
lcall
xor
xor
inc
loopne
sub
adc
stos
iret
call
cmpsb
cltd
dec
aam
xchg
mov
cmpsb
mov
movsl
out
add
sbb
icebp
mov
lods
pop
add
cmp
jl
jmp
icebp
or
mov
fnsave
test
add
sbb
mov
or
and
outsl
add
jae
push
dec
loopne
jp
inc
xchg
inc
leave
mov
push
les
xor
mov
popa
mov
jecxz
cmp
mov
push
xchg
xor
xchg
jmp
pushf
mov
sub
lock
xor
add
jnp
in
inc
jnp
hlt
push
push
lock
popa
popa
add
xor
fcompl
xchg
push
pop
adc
adc
jns
push
sar
cmpb
fdivrp
pop
adc
and
inc
or
xchg
test
out
out
pusha
adc
xchg
sti
cmp
jl
or
lret
push
and
std
or
or
ss
orl
ret
jae
mov
insb
push
cmp
dec
add
arpl
mov
fildl
dec
lea
inc
cmpsl
fcoms
imul
rol
cld
fimuls
xchg
rcr
out
xchg
sbb
test
push
incb
jbe
loope
shr
xlat
cmpl
xor
push
dec
push
jp
int
pop
data16
xchg
js
xchg
inc
lret
punpckldq
outsb
add
xor
push
dec
ret
pop
aaa
push
sbb
push
test
aaa
inc
or
push
adc
cltd
loopne
sub
mov
or
rcrl
push
in
mov
mov
mov
incb
loop
sub
rolb
adc
sub
dec
pop
inc
lcall
xchg
jns
and
pop
sahf
rorl
mov
push
inc
loope
test
loop
add
and
cmpsl
dec
pop
cs
cltd
scas
push
push
mov
sub
shrb
or
cmp
mov
adc
jge
sub
cmc
xchg
aad
fimull
in
cmp
in
push
cmp
loopne
enter
and
add
stos
jbe
or
divb
xor
jb
cmp
adc
das
test
mov
arpl
mov
sbb
jbe
lcall
call
adc
addr16
mov
shlb
pusha
xchg
scas
xchg
fcomi
out
cltd
or
or
pop
ficoml
insl
loope
and
ror
pushl
loope
repz
aas
jne
mov
cmp
cmc
pop
fidivrs
add
mov
or
mov
rclb
inc
inc
ret
ret
adc
sub
daa
jmp
sub
inc
pop
add
mov
push
insl
stos
lock
dec
loope
jecxz
out
clc
inc
cltd
sub
sub
orb
arpl
push
lods
cmpsl
inc
nop
and
dec
test
roll
inc
jge
ds
dec
add
cmp
or
mov
sbb
adc
aas
pop
adc
mov
adc
lret
sbb
out
fmuls
or
push
test
or
scas
outsl
sbb
daa
dec
in
ds
jmp
add
push
jmp
sub
pop
loope
dec
int
cs
dec
sbb
mov
popl
mov
call
xor
dec
mov
ds
rol
mov
push
iret
xchg
adc
fs
pop
daa
mov
arpl
sbb
xchg
sahf
orb
jae
lods
xor
out
scas
movl
les
cltd
repz
jmp
xchg
test
or
cs
hlt
add
frstor
mov
dec
hlt
mov
adc
pusha
shl
fiadds
aaa
lds
or
les
fimuls
dec
adc
add
push
repz
out
xor
adc
adc
add
lahf
rclb
add
mov
sti
cmp
out
aam
adc
xchg
push
cmpsl
or
test
cmp
xor
out
xlat
out
or
je
xchg
add
lea
sbb
ret
inc
pop
mov
aaa
jb
pop
adc
xor
pop
outsb
push
push
xor
imul
push
nop
mov
cs
mov
in
cmp
sub
sbb
xchg
arpl
xor
rolb
ss
rorb
add
call
dec
push
stos
in
pop
mov
sub
fimuls
data16
push
mov
xor
test
add
rolb
rol
cmpsb
scas
adc
dec
mov
clc
add
fistpl
jno
rcrb
daa
les
lock
dec
in
mov
out
inc
mov
push
dec
inc
pop
loopne
pop
inc
jmp
pop
cmp
nop
push
xor
pop
mov
lock
inc
pop
adcl
xchg
xchg
xlat
dec
adc
jb
sahf
bound
mov
clc
and
inc
hlt
nop
sub
push
sbb
or
in
mov
addl
nop
adc
or
xchg
mov
sub
push
sub
lahf
test
test
pop
lock
sarb
add
dec
cmp
xlat
nop
pop
out
es
or
xchg
add
mov
dec
fcomps
enter
lock
or
or
in
cmp
les
push
lods
in
ret
sub
leave
int
add
sub
mov
rcrb
sbb
and
repnz
xchg
adc
lcall
or
cld
cmp
jne
cmpsb
dec
xor
dec
add
fiadds
hlt
mov
bound
sub
cmp
sbb
mov
xor
mov
pop
push
push
push
push
insb
xchg
add
fsub
cmc
inc
call
dec
sbb
sub
cmp
jle
cmp
and
stos
mov
fucomip
xor
loope
les
in
add
movsl
adc
pop
call
push
adc
or
adc
inc
repnz
ret
push
jge
aad
jle
decl
cmpb
movb
add
or
xor
hlt
jb
add
mov
or
sbb
insb
shr
xchg
cmp
ret
fsubrl
add
cmp
or
lahf
or
or
lret
in
outsb
iret
and
cmc
inc
or
imul
mov
mov
jne
inc
pop
or
jb
mov
int
add
jg
cltd
or
adc
and
add
push
aam
mov
push
bound
insb
repz
mov
add
inc
push
scas
test
adc
aam
bound
pop
inc
test
xchg
xchg
inc
and
adc
movsl
rorl
int
jbe
fbstp
aam
lock
sbb
jns
arpl
xchg
pop
aam
aaa
adc
add
loopne
int
push
pop
adc
rcl
mov
xor
add
stos
adc
ficoml
fcomp
add
add
inc
insb
and
mov
or
shlb
or
in
adc
and
mov
xchg
xchg
push
neg
nop
dec
aaa
stc
stc
or
or
inc
test
inc
pushf
and
add
in
inc
enter
pop
xor
pusha
push
nop
push
add
xor
imul
push
and
inc
push
lcall
test
movsb
les
scas
pmullw
push
outsl
xchg
lcall
mov
mov
pop
dec
pop
pushf
sub
sub
test
sarb
insl
pop
mov
push
inc
mov
jg
daa
mov
inc
mov
xor
pop
xor
clc
xor
hlt
dec
pop
hlt
inc
pop
les
fs
stos
sub
cmp
imul
mov
mov
adc
and
dec
mov
cmp
inc
or
imul
dec
pop
cmp
test
xchg
or
inc
cmovbe
repz
jae
cmp
push
add
push
mov
fs
leave
aam
and
lds
inc
test
sub
inc
outsb
cmp
and
inc
bound
add
ss
cmp
or
popa
and
sti
inc
cmp
pop
lods
inc
cmp
aam
jl
icebp
inc
mov
and
or
add
flds
xchg
out
inc
push
push
sbb
or
lret
inc
cmp
xlat
js
adc
jl
fwait
jbe
xchg
mov
or
pusha
insl
iret
mov
push
mov
inc
push
inc
insl
das
inc
mov
or
repnz
stos
inc
mov
sub
lods
push
pusha
sbb
push
aas
pop
enter
cmp
inc
rorl
ds
mov
pusha
nop
xor
sbb
pop
pop
shll
sbb
adc
imul
push
cmp
inc
add
loop
add
jo
cmp
orl
pop
inc
test
in
dec
cwtl
cwtl
sarl
mov
fs
mov
xchg
and
add
scas
daa
enter
fisubrl
pop
pop
add
mov
pusha
xchg
pusha
inc
sbb
lcall
outsb
je
cmc
lret
aaa
cmp
push
stos
add
inc
fs
dec
pop
arpl
scas
push
fildl
pop
adc
mov
or
jo
xor
add
sub
pop
mov
pusha
mov
fs
mov
js
xor
outsb
mov
inc
cmp
push
pop
and
or
stos
sbb
imul
pop
add
add
int
dec
add
xchg
push
add
popa
add
adc
das
xor
fs
bound
dec
push
int
mov
pusha
in
mov
jnp
into
and
mov
pop
mov
inc
inc
mov
push
or
xor
sub
mov
or
pushf
mov
sbb
out
andps
sbb
mov
addb
popa
movsl
xor
arpl
in
cmovae
pop
jle
push
push
adc
cmp
or
je
imul
fistl
cmpsl
cltd
cmp
test
insb
or
sbb
lret
imul
adc
sub
sbb
pop
enter
pop
pop
iret
push
push
add
fs
xor
jbe
das
mov
push
addl
sbb
shll
mov
and
adc
inc
pusha
daa
pusha
mov
add
inc
es
add
popf
push
or
and
and
mov
aam
fsubrl
dec
orl
dec
ret
and
push
imul
sbb
jecxz
add
mov
imul
inc
adc
or
pop
jb
in
jo
jo
inc
test
paddsb
lcall
out
mov
add
aas
out
xchg
and
das
nop
data16
push
cmp
xchg
nop
je
fldcw
sbbb
xchg
cwtl
or
cmc
push
inc
popf
sub
test
pop
xor
xor
xor
inc
or
cli
jg
inc
dec
dec
dec
dec
dec
dec
dec
dec
rcl
inc
inc
call
push
push
push
pop
pop
pop
pmaddwd
lods
pop
ret
push
sub
push
mov
inc
inc
lds
and
inc
cmp
or
mov
add
pop
push
dec
add
push
push
sub
sarb
je
inc
std
and
call
and
add
aaa
and
add
dec
xor
and
jp
shrb
test
ret
xchg
pop
push
sub
sahf
cwtl
ret
sbb
adc
test
lea
mov
sbb
sub
clc
xchg
pop
orl
push
push
dec
mov
sti
cld
jle
push
xchg
inc
jge
xchg
xlat
cmp
shrl
xchg
dec
aas
or
sarb
sbb
cli
push
sbb
pop
pop
cmp
dec
mov
adc
fisubrl
fs
or
mov
add
jnp
imul
in
add
es
jmp
inc
inc
xor
inc
dec
pusha
sub
sbb
lods
pop
or
dec
mov
jmp
mov
enter
lock
aas
mov
sub
cmp
inc
pushf
addr16
dec
push
andb
addr16
pop
xchg
ds
loope
in
or
aad
adc
aaa
sbb
inc
iret
mov
lock
sub
sub
cmp
jbe
push
dec
push
bswap
or
orb
ljmp
cmpsl
sub
ret
clc
jno
cmp
sbb
and
pop
es
ss
pop
les
push
and
out
mov
rorl
testl
mov
add
leave
mov
xchg
xchg
jmp
mov
test
into
and
jne
or
jmp
inc
arpl
sub
loop
push
add
pop
adc
nop
add
imul
mov
inc
sub
mov
and
daa
lods
push
das
inc
and
push
inc
setno
scas
test
aas
push
cmp
ja
sbb
pushl
jmp
add
pop
incl
loop
fnstenv
clc
cmp
jg
mov
jno
and
cmp
rorl
xlat
pop
add
stc
lock
rorb
or
ljmp
or
push
fcomps
rol
es
ja
sub
push
in
outsb
sub
icebp
cmp
ja
jo
mov
lods
lock
sbb
ljmp
aaa
jmp
xor
push
xor
add
pop
enter
jbe
mov
in
adc
in
sbb
orb
je
out
hlt
dec
adc
das
dec
add
mov
or
pop
daa
xlat
xchg
push
jno
adcb
mov
adc
and
repz
inc
insb
and
xor
pusha
dec
xor
pusha
mov
shrb
hlt
sbb
imul
sbb
pop
xchg
pop
push
and
hlt
cmpsb
dec
xchg
add
and
dec
call
jae
mov
das
cmpb
fldcw
sbb
movzbl
cmp
jo
sbb
aad
push
push
hlt
fisttpll
lock
ficoms
imul
inc
pop
jmp
or
outsl
jbe
xchg
xchg
inc
adc
push
andl
call
mov
rclb
adc
xor
mov
popa
xchg
pop
or
sbbl
cmpsb
orb
inc
call
inc
dec
loope
jmp
jb
jb
dec
xchg
add
dec
lahf
sbb
add
cmp
add
add
xor
clc
add
mov
sbb
xchg
sub
push
loop
pop
int3
sub
out
test
pop
sub
sbb
add
push
add
mov
jg
lock
mov
jle
adc
movsb
jns
rcll
rclb
cltd
inc
push
vmread
push
data16
push
sbb
xor
add
adc
in
repnz
sub
rolb
ja
add
sbb
daa
cmpb
inc
xchg
and
xchg
inc
xor
pop
and
adc
dec
lods
lds
sahf
pop
pusha
dec
jae
pop
pop
sbb
push
popf
fs
popf
xor
adc
jno
daa
add
mov
mov
movsl
push
fidivl
and
movl
xchg
data16
aas
out
cmp
mov
adc
xor
inc
pop
test
adc
mov
and
adc
xor
add
adc
mov
pop
les
pop
push
pushl
in
push
leave
mov
or
movsl
mov
lea
push
xchg
testl
adc
xor
pop
out
mov
mov
dec
fdivrl
add
fcmovnu
jecxz
xor
movsl
or
and
popa
daa
xor
lock
adc
movsb
imul
inc
jge
imul
dec
push
andb
sti
cmp
push
xchg
lock
adc
jbe
mov
into
adc
rcl
ret
in
jmp
outsl
add
push
xor
mov
add
inc
les
mov
test
test
inc
sub
sti
dec
adc
pop
xchg
xor
adc
mov
pop
rolb
or
aas
push
sub
rclb
outsl
add
mov
or
or
add
movsl
call
icebp
inc
cmp
movsl
sub
sub
mov
inc
test
or
mov
rolb
mov
popa
add
mov
and
insl
lods
jb,pt
mov
mov
sub
or
rolb
pushf
mov
sbb
sub
push
push
adc
pop
push
je
or
xchg
pop
jp
daa
xchg
ss
call
mov
add
je
jmp
lret
out
xchg
insb
out
pop
and
pushl
adc
adc
or
sahf
jecxz
daa
push
inc
mov
dec
loope
test
xor
pusha
movsb
mov
jg
sub
test
mov
dec
mov
or
xor
rol
test
inc
pop
fsubl
lds
xchg
dec
movsb
add
fldenv
inc
cmp
ljmp
icebp
pusha
popf
aad
cmp
jae
mov
sti
add
hlt
jmp
jbe
sbb
push
and
mov
movsl
push
xor
jo
xchg
sbb
mov
or
mov
addr16
aaa
or
push
push
or
add
in
popw
adc
lds
iret
lock
sarl
push
xchg
adc
sti
shrb
inc
ja
adc
sub
jo
inc
mov
jb
ds
aaa
in
and
or
les
adc
jmp
xor
jnp
sbb
jecxz
or
and
jns
add
jne
and
xchg
xchg
js
or
push
jae
test
je
push
jl
mov
es
push
js
nop
push
call
ficomps
sbb
xor
cmp
outsl
jmp
xorb
push
out
push
je
fdivs
lods
sarb
stos
and
cmpb
jg
out
out
and
dec
add
dec
scas
or
mov
sbb
ret
cmp
sub
je
xchg
jno
or
sbb
sub
int
mov
or
movsb
cmp
out
das
test
sub
or
mov
popf
enter
adc
cwtl
out
and
mov
pushf
mov
dec
xchg
jo
cmp
push
pop
inc
xchg
imul
fcmovne
sub
notl
mov
ret
or
adc
leave
xor
test
and
loope
fstpt
inc
je
pop
inc
dec
cltd
adc
adc
jle
lret
jmp
insl
enter
or
insb
xchg
push
sbb
lcall
xchg
andl
cmpsb
mov
loopne
dec
outsb
packsswb
inc
cmpl
inc
pop
push
dec
movsb
iret
mov
rorb
adc
sub
sbb
xchg
pop
das
loopne
insb
push
out
lock
mov
enter
mov
addb
das
std
fdivl
dec
dec
xchg
cld
cs
adc
mov
push
cmp
enter
rcrl
js
mov
adc
and
out
sub
ja
aas
lds
push
sbb
xorb
push
arpl
and
mov
mov
jns
fdivs
pushf
retw
push
mov
add
add
adc
lds
mov
add
sbb
or
and
push
push
call
insb
mov
sbb
and
imul
push
sub
decl
dec
xor
cld
mov
int3
jns
scas
inc
cmp
inc
mov
lods
mov
xor
les
adc
jmp
jns
mov
push
push
addr16
jge
push
mov
or
push
roll
imul
dec
es
jge
pop
push
flds
jno
inc
adc
cmp
mov
mov
dec
icebp
push
fsubrs
loopne
and
cmp
xor
mov
pop
mov
ret
fucom
sbb
push
xor
movsl
imul
mov
xlat
mov
mov
sbb
insl
or
shl
jno
sub
sub
iret
enter
add
inc
push
sub
pop
push
outsb
daa
in
sub
roll
pop
movsb
dec
push
sub
or
movsl
stos
or
mov
xor
sbb
lea
arpl
loopne
movsb
pop
test
lds
sub
ret
cmp
push
mov
fisttpl
jnp
adc
into
hlt
cmp
hlt
hlt
pop
pop
sbb
xchg
inc
jo
add
shl
cmp
repz
add
cmc
xchg
or
pop
jns
inc
push
mov
sbb
lods
pusha
adc
xor
aad
leavew
lock
rorb
or
cld
add
sar
sbb
xor
pop
fildll
push
adc
adc
es
add
int3
mov
popa
rcll
lea
jo
dec
or
xchg
sub
roll
cmp
outsb
ja
outsb
aaa
fistps
scas
add
loopne
and
sub
and
or
insb
test
inc
cwtl
into
dec
mov
leave
and
loopne
pop
lods
xor
push
dec
iret
push
inc
or
adc
dec
push
mov
fwait
sbb
imul
orl
push
dec
loopne
pop
xchg
roll
push
push
jo
or
sbb
add
xchg
pushf
or
orb
aaa
pop
xor
in
xor
adc
mov
sub
jmp
aaa
pop
sub
push
repz
mov
or
push
mov
pop
pusha
pop
push
das
or
call
ss
add
adc
out
dec
dec
add
in
inc
sbb
adc
adc
aas
adc
sbb
out
call
cwtl
add
and
xor
or
and
test
jno
dec
or
xchg
test
fs
sub
enter
jno
lock
push
and
dec
lock
inc
repnz
sub
add
add
fstpt
dec
add
ret
arpl
rclb
push
pop
fs
cltd
pop
clc
lock
pushf
sub
dec
call
test
and
or
test
and
push
cltd
or
pop
push
inc
mov
loopne
in
test
fwait
cmp
loopne
and
and
mov
add
pop
fdivl
add
out
add
bound
and
xchg
xchg
or
daa
push
sub
test
or
enter
leave
fwait
jae
jl
and
add
xor
pop
rclb
cmp
ds
push
sbb
push
nop
into
popf
test
vorps
mov
mov
pop
rcr
sub
imul
mov
xor
or
pop
pop
inc
push
adc
cld
xchg
inc
or
adc
cs
sub
es
pop
sub
bound
cli
dec
push
bound
repnz
pop
jl
sbb
insl
mov
and
dec
rcr
movl
pop
sbb
sub
pop
sub
or
xchg
movsl
leave
dec
inc
es
call
sbb
inc
incb
inc
sbb
loop
inc
leave
loopne
or
or
repnz
add
orb
hlt
push
mov
push
ficomps
xor
adc
adcl
inc
gs
or
mov
inc
call
and
sub
push
and
and
push
insb
sbb
cli
push
xlat
shrb
es
aaa
int3
cmp
dec
and
xchg
pop
push
push
or
stc
cmpsb
ds
xor
insb
xor
add
sbb
and
les
mov
jmp
in
ja
dec
sbb
movb
imul
das
or
dec
xchg
xor
xchg
inc
fildl
and
push
add
and
loopne
xchg
pushf
xchg
mov
ret
pop
incb
add
mov
test
pop
sub
add
sbb
movsb
sbb
clc
fcoml
sub
cmp
loopne
add
inc
xchg
and
dec
cmpsb
add
iret
ja
inc
sbb
push
add
or
inc
ret
dec
xor
cmp
popa
arpl
mov
adc
pop
or
fdivp
adc
pop
outsl
xor
aas
cmp
jg
rolb
fstps
lahf
xchg
out
jmp
or
push
icebp
and
inc
and
movsb
jae
pop
mov
enter
mov
les
xchg
pop
cmp
cmpb
rcrb
lret
outsl
sbb
repnz
cmpsl
cmp
pop
pop
inc
mov
or
rcll
insb
cmp
dec
outsb
adc
adc
lods
insl
dec
insb
bound
pop
out
daa
add
pop
jo
or
in
mov
aam
js
imul
pop
out
mov
sbb
push
sbb
mov
out
or
loopne
sub
xor
data16
out
shll
mov
mov
pop
fistpll
ds
inc
pop
test
xor
inc
inc
add
addb
shll
push
fdivs
inc
loopne
mov
pop
xor
lock
jnp
mov
cmpl
aaa
add
test
add
outsb
adc
add
leave
sbb
or
sbb
das
out
pop
clc
inc
insl
mov
cmp
push
out
sbb
push
lret
fs
and
pusha
mov
das
adc
pop
loope
dec
in
inc
pop
fimuls
sbbb
adc
enter
loop
lcall
je
ret
pop
mov
and
mov
cmp
inc
add
push
mov
adc
jbe
and
pop
pop
cmpsb
dec
in
pushf
mov
insb
add
cmp
inc
add
fstl
xor
add
add
xor
or
push
push
inc
adc
test
aaa
mov
push
dec
mov
or
outsb
pop
sub
je
fs
imul
lods
jmp
out
cmp
sub
pop
fstps
pusha
dec
jmp
test
mov
movl
push
xor
je
cmp
int3
push
imul
xchg
rcrl
and
xchg
add
jmp
in
sbb
mov
in
xchg
popf
push
arpl
mov
pop
xchg
mov
movsb
icebp
push
mov
adcb
lret
mov
shlb
adc
sbb
mov
sbb
aaa
cmp
mov
xchg
inc
inc
movsb
add
push
or
aaa
mov
and
out
xchg
ljmp
fdivs
adc
push
adc
jecxz
cmp
rolb
cld
jmp
jle
js
mov
pop
hlt
adc
jno
sub
or
push
mov
mov
or
and
inc
dec
lcall
add
addr16
inc
dec
push
or
shlb
nop
test
pop
fcomp
jne
mov
sub
out
push
jl
push
scas
out
cmpl
loop
add
jo
iret
int
mov
cmp
nop
and
enter
sub
je
sbb
adc
jmp
cmp
xchg
xchg
pop
fdivl
lret
xlat
sar
xchg
std
inc
lret
fidivrs
push
cmp
cmp
adc
mov
pop
test
or
xchg
dec
sti
out
and
jns
mov
mov
fnsave
push
insb
xorl
ror
leave
iret
lock
mov
sarb
in
inc
test
dec
ja
xor
push
mov
xlat
dec
jg
mov
pop
pop
xor
adc
outsl
jbe
movsl
aas
daa
cmp
lea
inc
inc
or
adc
leave
sti
dec
inc
stc
jle
push
push
xor
add
ss
jp
sbb
aad
dec
test
ss
mov
shlb
push
push
cmp
cmp
xor
sbb
cs
sub
aas
xchg
cmp
dec
xor
xchg
add
sbb
xchg
sbbb
add
mov
xchg
addr16
pop
and
jne
adc
in
add
mov
mov
sbb
mov
das
xor
sbb
cmp
dec
ret
roll
sbb
icebp
jnp
pop
push
sub
jl
mov
js
js
dec
loop
adc
ds
and
inc
add
mov
into
xor
and
mov
sbbl
jge
push
mov
inc
rcrb
sbb
aas
int3
lcall
popa
fwait
and
cmp
movsl
dec
sbb
nop
push
mov
adc
or
mov
and
sub
mov
daa
das
popf
xor
loopne
ret
test
bnd
or
mov
out
xchg
inc
nop
sbb
mov
mov
jb
mov
mov
push
add
rcl
xor
loope
and
sti
mov
jne
add
push
push
cmpsl
fs
cmp
daa
jns
in
les
sbb
and
jmp
pushl
push
adc
cmp
sbb
push
pop
jmp
pushl
dec
inc
or
dec
adc
mull
and
or
and
daa
mov
add
xlat
mov
in
inc
add
xchg
cld
sbbl
pop
pop
push
arpl
les
or
add
cmp
cltd
fdivs
or
sbb
adc
call
and
push
imul
enter
sbb
les
jecxz
inc
add
enter
shlb
mov
popa
fwait
in
add
and
adc
mov
pop
inc
push
into
nop
icebp
cmp
les
add
dec
push
pop
lock
daa
icebp
dec
xor
loopne
fs
ljmp
cld
je
push
sbb
movsb
cs
repz
cmp
into
push
rcrb
push
lret
inc
pop
pop
lahf
enter
orl
int3
imul
sbb
mov
outsb
vcmppd
mov
addb
inc
xchg
push
aad
add
jecxz
adc
hlt
cmp
dec
loope
and
bound
jecxz
jmp
jle
mov
insb
rorl
mov
xor
jg
fisttpll
insl
xor
add
pop
jmp
push
sub
popa
mov
adc
xor
in
shll
jmp
inc
pop
xor
sub
scas
rol
movsb
lea
ds
xlat
adc
jmp
orb
xlat
ror
xor
fsub
adc
xchg
stc
fsubs
push
sub
jo
iret
add
add
aam
cltd
fmul
sub
test
faddl
and
mov
ret
clc
and
sbb
jl
push
ret
imul
jo
or
lock
sbb
inc
inc
xorb
and
cwtl
push
aam
mov
jecxz
bound
dec
repnz
cmpsb
push
xchg
movsl
push
or
bound
sub
outsl
push
adc
call
add
sbb
mov
xchg
sub
cmp
mov
arpl
add
iret
mov
dec
aas
loopne
enter
sbb
xchg
cmp
add
push
and
add
pop
mov
ja
sti
jl
imul
mov
add
nop
mov
inc
movb
movsl
add
pop
mov
mov
mov
insl
repnz
arpl
push
cmpb
inc
inc
inc
jo
sub
out
sbb
add
jo
mov
fsubl
dec
leave
test
aaa
dec
and
dec
inc
jne
iret
bswap
repz
cmp
mov
sbb
pop
cmpl
or
push
mov
push
push
cmp
or
sub
or
add
js
roll
or
push
lods
mov
xor
pop
and
pop
jo
inc
sbb
inc
rorb
push
inc
jge
cmp
inc
mov
rorb
push
insb
sbb
xor
inc
repz
fsubs
xchg
or
inc
xor
lods
outsl
and
jbe
sahf
scas
inc
stc
es
inc
repnz
pop
js
push
mov
mov
pop
push
push
and
pop
movsb
les
push
mov
cltd
ret
mov
sub
jbe
or
daa
and
ficompl
push
pusha
xchg
inc
xchg
out
hlt
xor
pusha
or
lock
out
mov
mov
mov
in
sbb
fisttps
lcall
jb
arpl
mov
scas
add
and
sbb
pushl
xor
sub
sbb
movsb
sbb
out
pop
addr16
call
aad
dec
dec
xchg
dec
mov
data16
js
push
or
and
insl
fbstp
daa
mov
add
es
hlt
mov
mov
cltd
add
xor
pop
addb
sbb
fnstenv
add
jo
pop
adc
or
sub
insl
mov
mov
inc
into
aas
mov
sbb
jae
das
dec
cmp
incl
cmp
dec
xor
pop
xor
adcl
push
mov
loop
xor
and
in
enter
jo
call
xchg
jp
push
and
add
xchg
xor
rclb
jo
rolb
push
inc
pop
repnz
xchg
mov
mov
ret
daa
adc
cmc
popa
inc
mov
hlt
pop
lds
sub
pushf
add
add
add
xchg
jbe
outsb
xor
pop
push
xor
je
loope
sbb
cli
or
push
cli
bound
mov
stos
mov
add
push
add
push
jge
loop
xchg
xchg
xchg
fsubs
or
xchg
or
cmp
rolb
mov
ja
cmp
jp
sbb
bound
in
dec
sbb
dec
sar
push
pop
mov
fidivs
xchg
inc
xchg
jae
pop
mov
movb
inc
sbb
lods
xchg
movsl
cli
cltd
inc
pop
xchg
in
add
pop
jge
push
sub
xor
mov
or
je
subb
and
fsubr
and
leave
push
add
cwtl
dec
pop
repz
mov
mov
and
sbb
inc
shrl
inc
mov
inc
cmp
inc
addr16
lea
adc
std
ret
repz
push
stos
or
popa
pop
rcl
add
inc
xor
filds
mov
movsl
shlb
cmp
mov
push
ss
inc
push
sub
ja
cmp
ljmp
dec
push
inc
and
test
and
sti
lahf
rcrl
inc
cmp
je
xor
fucomi
loopne
lea
lcall
rol
mov
inc
add
hlt
pop
fldl
repz
pop
lock
ss
sbb
mov
sti
add
mov
add
stos
dec
fidivrs
sti
mov
cwtl
andb
mov
arpl
mov
jae
push
stos
add
in
movb
arpl
fcom
pop
adc
sbb
inc
pop
nop
and
cmp
test
movsb
adc
adc
hlt
jb
jge
out
sbb
test
xchg
fucom
fwait
test
mov
lret
sbb
int3
dec
sub
add
cmp
sub
pop
mov
xchg
jl
dec
divl
je
stos
push
sarb
or
cmp
add
pushf
addb
and
rclb
les
mov
pop
inc
mov
rorb
pop
stos
repz
clc
loopne
jle
push
pushf
inc
adc
inc
pop
push
out
add
pop
mov
mov
inc
imul
mov
jbe
cmp
les
add
mov
xchg
push
dec
mov
data16
mov
jno
enter
sahf
in
adc
movsb
xor
inc
cs
mov
rep
adc
adc
loopne
shl
test
inc
or
lea
push
dec
sahf
sbb
bound
inc
xchg
inc
inc
push
dec
inc
dec
or
arpl
cs
cmp
push
lock
dec
les
jp
icebp
das
xor
test
je
push
movsb
and
aam
cltd
or
xchg
cwtl
cmp
pop
lods
push
fstps
cmp
cmp
loopne
sbb
mov
and
and
out
pop
scas
add
loop
xchg
call
imul
push
fsubr
sub
adcb
imul
pop
add
dec
or
cmp
push
jnp
pop
lods
adc
mov
add
ret
and
pop
call
add
gs
inc
xor
lock
push
fnsave
sbb
test
adc
push
inc
out
aad
or
lock
fisttps
ja,pn
sbb
insl
push
aas
insb
clc
push
mov
pop
xchg
lret
pop
push
xchg
push
hlt
rolb
add
xor
les
sbb
sbb
out
arpl
out
mov
adc
sub
pop
subb
jl
adc
add
xchg
decl
movb
mov
jno
jbe
or
or
add
xchg
mov
subl
sub
scas
or
xchg
sbb
insb
test
jo
in
aaa
mov
test
pusha
mov
pop
dec
rol
sbb
push
je
cltd
repnz
sbb
adc
jecxz
clc
popf
or
mov
cmp
cmp
mov
adc
or
dec
or
cmp
mov
adc
push
pop
movsl
in
sbb
mov
cmp
xor
lcall
dec
insb
inc
inc
inc
outsb
sub
adc
and
addr16
popa
in
push
mov
push
pushf
pop
mov
sarb
movsl
lds
inc
push
lock
cli
mov
mov
push
jge
sti
mov
cltd
push
xor
aas
cmp
xchg
mov
cmp
aam
adc
pop
or
enter
push
rolb
popa
mov
cltd
jns
or
nop
stc
in
fs
rcrl
in
arpl
adc
sub
add
cmc
cld
push
jo
rol
or
fmuls
stos
xchg
je
pop
sbb
mov
pusha
dec
push
adc
fidivl
xor
xchg
adc
cmp
addb
push
pop
add
sahf
push
ret
fs
sahf
cwtl
movd
adc
inc
and
daa
cmp
pop
test
js
mov
cmpsb
jg
test
sarb
insb
dec
or
push
push
sub
sub
fcoms
je
lret
pop
add
add
das
sub
sub
xchg
es
xorb
mov
pop
xchg
mov
mov
and
iret
fldt
or
mov
je
xor
inc
push
test
add
jl
jl
add
inc
or
test
mov
adc
cltd
sbb
add
and
mov
dec
repz
hlt
and
lea
sub
rol
xchg
and
mov
pop
cli
leave
andl
dec
or
sbb
push
pop
arpl
jmp
inc
fcompl
ret
and
push
inc
xor
xchg
mov
or
mov
jae
cwtl
sub
push
sarl
mov
sub
mov
sub
subb
push
mov
mov
enter
add
xchg
lock
fcoms
data16
and
nop
fcmovne
add
xor
and
jg
imul
xor
fsub
in
div
imul
cs
call
mov
mov
sub
or
push
fcoml
push
and
dec
sbb
pop
or
stos
loope
pop
mov
pop
jnp
adc
je
imul
and
mov
cltd
xchg
add
fdivs
inc
bound
cli
stc
pop
jb
mov
lods
in
cmp
adc
pushf
in
jo
dec
imull
in
adc
xor
sub
inc
fmuls
leave
imul
in
dec
xor
cmp
sbb
mov
pusha
push
cmc
sbb
push
dec
fmuls
push
mov
xchg
jge
mov
lds
xor
push
add
add
sbb
pop
aaa
movsb
stos
push
lds
push
lock
and
nop
daa
nop
sub
test
push
push
push
adc
test
nop
pop
insb
mov
sete
push
mov
or
icebp
cmpsl
sub
inc
pop
xor
push
ret
sti
mov
mov
inc
std
inc
or
imul
outsb
inc
cmp
movsb
pop
shlb
loope
add
aaa
push
repnz
dec
testl
push
je
outsl
adc
push
inc
add
shrb
push
into
add
cmpsb
xchg
aaa
xor
sahf
mov
mov
sub
add
push
mov
nop
sub
xchg
mov
dec
add
add
push
pop
adc
cwtl
ret
mov
imul
push
jg
ret
push
add
fldl
sub
sarl
inc
xor
cltd
mov
out
in
inc
sub
sbb
aam
or
mov
xlat
pusha
fwait
sub
mov
inc
xor
cld
mov
push
imul
mov
cmp
movb
and
sbb
es
or
lods
cmp
sub
sbb
and
sub
cmp
adc
mov
mov
sub
add
fs
add
dec
pop
call
testb
inc
pusha
testb
or
and
dec
sbb
adcl
jmp
jns
mov
and
je
add
pop
cmp
jecxz
dec
and
mov
xor
jmp
dec
xchg
inc
bound
pop
out
add
sbb
stos
mov
xchg
mov
mov
mov
incl
pop
inc
jmp
cmp
jne
push
test
and
ss
jle
shlb
push
rolb
in
loope
lret
sbb
sbb
add
jne
xchg
sub
mov
cmp
jmp
sbb
das
pop
inc
jg
les
adc
pop
inc
enter
lds
xor
shl
out
or
aaa
xor
adc
and
add
and
lock
jl
inc
xchg
nop
enter
push
xor
sub
ret
pop
dec
es
mov
dec
call
std
shlb
push
push
mov
cmp
xor
lcall
push
cwtl
push
add
nop
xor
mov
xor
mov
mov
imul
test
outsb
fdivl
popf
cmpsb
insb
jo
insb
scas
les
dec
imul
mov
mov
inc
dec
lods
jno
xorl
jmp
mov
mov
or
push
sub
scas
daa
cmpsl
add
jae
mov
adc
sbb
mov
dec
ljmp
adc
loopne
cmp
xlat
inc
cmp
cmp
movsb
sub
cmp
js
mov
aas
or
clc
and
or
arpl
lods
add
mov
pusha
add
xchg
movswl
fs
mov
cmp
or
addr16
aaa
push
adc
sub
pop
or
push
push
add
jbe
shll
sub
clc
ds
loop
mov
int3
xchg
adc
js
adc
in
popf
push
cmp
pop
xor
lods
stc
add
push
and
add
adc
pushf
add
xchg
mov
mov
lock
sbb
push
push
lahf
inc
lods
sbb
push
les
or
lods
sbb
xchg
mov
inc
adc
cmp
push
ss
push
sbb
add
adc
and
aad
mov
adc
dec
or
aad
add
cmp
sub
or
inc
inc
xlat
inc
adc
rcrb
dec
and
xor
pop
pop
sarb
outsl
gs
or
xor
mov
mov
dec
fisubl
dec
mov
inc
push
push
push
es
insb
push
push
or
add
arpl
xchg
xor
sahf
or
shlb
nop
fcmovb
ds
push
mov
xor
ja
dec
into
in
jnp
or
dec
inc
imul
jl
popa
js
pop
cmp
out
mov
jbe
pop
push
and
lods
push
addb
das
adc
inc
out
pop
test
inc
clc
cmpsl
mov
adc
out
push
call
pop
mov
icebp
bnd
in
dec
shld
inc
cmpb
loopne
mov
pop
mov
mov
aam
push
insl
lods
push
or
adc
jp
jmp
xchg
adc
mov
xor
inc
xchg
sbb
fwait
cmp
or
or
pop
stos
fimuls
jp
dec
or
sub
pop
and
or
nop
dec
sbb
adc
add
mov
adc
push
bound
or
stc
or
jp
push
insb
pusha
lcall
or
push
outsl
mov
mov
ret
adcb
fwait
pop
dec
aaa
imul
add
incl
ljmp
inc
std
das
mov
pop
cmpb
or
iret
sub
cmp
outsb
sub
add
jb
fs
in
or
ja
mov
adc
fnstenv
xor
pop
in
xlat
iret
add
popa
jns
aaa
outsl
jo
push
ss
mov
xor
or
insb
lcall
imul
jo
je
jge
jnp
adc
mov
aad
out
xorb
dec
cmc
ror
inc
cmpb
ret
jo
addr16
adc
sub
mov
and
lock
sub
push
push
gs
pop
jge
xorb
and
shlb
inc
or
loope
jns
mov
cmc
sysenter
cmp
fs
mov
pusha
or
push
jb
test
xor
mov
gs
sbb
outsb
or
xor
mov
push
adc
ja
js
addb
and
jo
testl
add
nop
aam
lahf
loopne
outsb
mov
nop
mov
adc
lock
imul
jl
iret
sbb
vpmadcswd
or
sarl
rolb
pusha
adc
jno
xchg
sub
dec
sti
push
xchg
nop
movsb
xchg
incb
adc
dec
jae
push
push
push
dec
pop
rclb
jne
add
jbe
sbb
cmp
pop
aam
pusha
sub
pop
jno
inc
push
lock
popa
xor
or
pop
xchg
mov
das
dec
dec
pop
loopne
loopne
jnp
js
iret
jle
mov
or
jl
jne
xchg
ja
push
pop
stos
cmp
divb
mov
fwait
popf
fwait
aaa
pusha
scas
pop
push
test
inc
fsub
jecxz
fbstp
mov
rolb
jae
inc
repnz
inc
clc
push
pop
cmpb
jo
adc
mov
fmul
iretw
hlt
int
popa
xchg
add
jo
outsl
mov
xlat
inc
sub
testl
scas
push
lock
lret
fs
rcrb
loopne
add
cmp
and
lcall
outsl
cli
lahf
pop
pop
testl
mov
add
aas
pop
jmp
adc
adc
sbb
and
sub
lahf
add
loop
push
adc
loopne
add
aas
mov
pop
xchg
mov
push
sub
or
testl
mov
mov
mov
lahf
inc
add
mov
mov
incl
aas
sbb
mov
scas
ljmp
pop
shl
fwait
shl
inc
xchg
fadds
in
imul
fisubl
fnstenv
cs
pusha
push
cwtl
inc
lcall
fistps
xor
int3
xchg
loopne
hlt
loope
lock
int
lods
xchg
push
repnz
dec
jecxz
cmpb
xchg
push
test
rorb
sub
in
xor
test
enter
in
xor
push
xchg
push
rcl
aam
imul
push
cs
lock
cwtl
mov
hlt
mov
sub
mov
push
mov
repz
in
rcll
adc
mov
inc
or
mov
adc
pop
and
cli
ret
xlat
nop
mov
fdivp
bound
mov
jl
pop
cmp
mov
xlat
inc
jnp
push
outsb
pop
sbb
pushf
or
push
incb
and
and
sub
std
push
and
sbb
inc
ret
inc
and
scas
cltd
or
push
add
pop
xchg
inc
and
push
and
sbb
bound
inc
cmc
add
aas
jo
popa
inc
insb
imul
loope
roll
scas
pop
adc
negl
add
push
push
xor
adc
sub
das
jno
loopne
xchg
sbb
push
or
or
and
inc
rolb
sub
or
pop
add
mov
pop
inc
jo
adc
mov
and
leave
adc
mov
sub
push
jmp
mov
lods
repz
dec
int3
clc
mov
int
pop
cmpb
or
adcb
sbbl
xchg
sub
mov
cwtl
hlt
daa
cmp
add
push
push
inc
mov
xchg
or
push
adc
fnstcw
fisttpll
shlb
adc
mov
insb
sub
dec
sbb
rorb
sbb
fcmovnb
push
xchg
in
push
lds
xchg
pop
push
add
cmp
inc
orl
mov
add
dec
xchg
push
leave
and
pop
mov
cmpsl
stos
push
xchg
and
push
push
jae
sbb
xor
push
mov
push
and
mov
loopne
pop
and
mov
pop
and
out
mov
pop
pusha
fisubs
and
cmp
push
and
loopne
dec
inc
ja
roll
mov
cs
dec
movsl
dec
or
mov
adcb
nop
mov
lea
push
and
push
xor
ret
shrb
loopne
xor
push
push
fwait
adc
loopne
mov
enter
test
xor
or
mov
pop
pop
inc
dec
mov
dec
sub
int3
sbb
fwait
sub
or
in
not
or
jbe
ja
adc
dec
adc
sahf
sbb
sub
clc
bound
pop
xor
aad
insb
lret
loop
test
out
pusha
les
push
push
pop
mov
test
mov
push
in
fwait
clc
xlat
xchg
imul
add
add
test
sub
xor
push
xor
mov
xor
push
inc
add
xorl
fstps
mov
add
pop
movl
cmp
rcll
jo
cltd
int3
in
mov
mov
add
sub
ficompl
mov
or
sbb
addb
gs
ljmp
push
test
int3
rorb
cmp
jb
cmp
push
aad
inc
ss
sub
enter
stos
aam
test
pop
call
cmp
adc
popf
mov
dec
in
add
cmpl
test
add
lea
add
fisttps
test
mov
outsl
sbb
das
sbb
nop
rolb
jbe
jae
inc
aas
fcompl
mov
mov
inc
loopne
lock
jl
add
pop
add
dec
sbb
in
testl
push
pop
sub
pop
push
push
or
xchg
adc
aaa
inc
sar
shlb
jo
leave
sub
inc
add
ret
ja
cmp
xchg
pop
inc
js
sbb
daa
stc
jns
mov
shlb
xor
xchg
in
ja
mov
and
jg
jmp
dec
mov
dec
add
sub
push
and
fisubs
dec
lock
imul
dec
xchg
mov
fmull
out
jnp
or
mov
ljmp
push
popa
dec
mov
adc
repz
push
loope
je
dec
add
fsubl
test
fadd
into
push
xchg
dec
inc
inc
loopne
ficomps
out
fadds
orl
jo
sbb
pushf
imul
and
orl
adc
push
jo
addr16
lcall
imul
dec
fadds
dec
xchg
sub
insl
maxps
push
dec
fbld
in
mov
add
inc
shlb
inc
inc
add
inc
push
add
popf
and
push
dec
adc
push
and
lds
mov
pop
fiaddl
inc
clc
js
pop
pop
cmp
scas
and
push
fisttpl
mov
adc
enter
daa
add
pop
add
pusha
mov
xor
xor
lock
rol
pop
sbb
or
inc
sbb
push
lea
sbb
inc
sbb
mov
or
repz
inc
aaa
or
add
mov
insb
xchg
int
push
push
clc
test
stc
xchg
adc
bound
ss
mov
mov
pop
sub
adc
mov
or
adc
push
pop
ds
and
and
push
xor
scas
test
mov
mov
test
lcall
xchg
lock
inc
xchg
icebp
inc
int3
xlat
cwtl
cli
inc
adc
pop
aam
cmp
mov
sbb
orb
inc
iret
je
js
or
xor
mov
push
lods
scas
push
fwait
mov
or
in
or
mov
inc
ret
in
dec
add
sbb
andps
or
mov
dec
nop
popw
and
stos
adc
inc
mov
add
ret
fdivrs
fidivrl
push
inc
jnp
mov
clc
sbb
jne
or
xchg
fidivrs
jmp
and
popa
inc
pusha
and
adc
and
mov
mov
cmp
xor
xchg
sbb
inc
mov
adc
sbb
jo
cmp
sub
je
adc
push
add
in
pop
push
mov
in
lea
shlb
adc
jg
push
lods
into
jae
push
idivb
hlt
mov
fcompl
dec
ficoml
or
mov
es
push
mov
test
and
and
ljmp
inc
idiv
fisubrl
fucomip
int
or
leave
lea
xchg
rol
ds
jp
sub
fstps
insb
and
mov
jmp
rcrb
push
mov
jno
or
test
lds
dec
cmpsb
popa
cmpsl
inc
je
mov
mov
pop
fs
mov
cmp
mov
dec
sbb
ret
xchg
push
adc
popl
cmp
inc
fdiv
mov
je
mov
pop
shlb
mov
push
and
adc
popa
popa
movsb
out
jmp
enter
xchg
lcall
jbe
mov
mov
add
jl
repz
mov
and
call
inc
dec
dec
cmp
sub
sub
fstl
push
inc
int3
add
jb
fsubs
int3
and
sbb
icebp
leave
addr16
sub
insl
xor
cmp
inc
mov
cwtl
xchg
inc
push
mov
lret
add
or
or
adc
arpl
pop
mov
sbb
add
push
aam
lods
or
outsl
mov
jmp
xchg
aas
test
and
pop
addb
xchg
gs
add
add
rolb
adc
xchg
add
xchg
in
insb
xchg
mov
lock
push
aam
sub
xchg
add
inc
sbb
lcall
popf
sbb
add
lahf
or
shrb
dec
fnsave
or
sub
dec
sbb
mov
in
adc
adc
dec
in
aas
pusha
sbb
push
das
mov
or
sarl
or
xchg
add
mov
cmp
clc
cmpsl
xor
push
aas
sub
pop
inc
add
mov
mov
jne
das
mov
mov
scas
popa
sub
mov
jl
js
adc
cltd
cmp
push
add
rcrl
sahf
scas
sbb
xchg
test
cmpsb
data16
add
mov
sub
int
arpl
and
mov
add
sub
cld
outsl
insb
loop
imul
mov
pop
inc
and
mov
out
ret
or
push
inc
add
sbb
cltd
cmp
xor
push
hlt
sbb
sub
add
fwait
adc
inc
lret
add
xchg
pop
cmpsb
in
and
inc
dec
adc
in
dec
inc
mov
das
push
xlat
dec
std
je
stos
pop
dec
mov
and
data16
mov
adc
hlt
mov
cmp
sbb
scas
testb
adc
mov
pop
out
add
add
add
adc
les
jns
mov
lds
cmpsb
scas
fadd
jp
notb
fistl
sbb
mov
add
sub
cmpsl
cmpl
imul
sbb
clc
pusha
outsl
fmuls
xchg
mov
dec
xor
int3
xchg
sti
pusha
adc
cmp
test
or
and
push
xor
out
adc
pop
hlt
test
jmp
arpl
je
movsb
add
or
cwtl
xlat
cli
test
push
push
test
mov
or
pop
repnz
push
mov
jbe
or
insl
pop
add
ret
jmp
loop
insl
and
ss
and
icebp
dec
mov
movsl
add
push
mov
jbe
popa
mov
lods
add
mov
jbe
push
lcall
shlb
dec
mov
mov
adc
cmpsl
cmpsb
adc
mov
push
mov
ret
les
xor
inc
insl
loope
fimull
mov
cmp
push
jmp
inc
inc
or
shlb
cmp
pop
dec
and
xchg
pop
lret
mov
mov
push
mov
loopne
repz
cmpb
and
mov
mov
and
xor
mov
in
xor
inc
ret
add
or
jmp
push
inc
sub
ret
aaa
pop
insl
inc
outsb
and
mov
mov
adc
repnz
inc
cmp
stos
js
movlps
adc
inc
or
mov
xchg
subl
popf
and
jmp
pop
ja
push
outsl
mov
lcall
sub
cmpsl
adc
cmp
push
jb
mov
std
aaa
add
call
dec
or
xor
loop
fldl
xchg
mov
xchg
push
mov
mov
test
push
sub
inc
sbb
sub
dec
pop
or
pop
pop
sbb
gs
adc
addr16
cmp
mov
push
and
inc
rcrl
mov
jmp
das
add
sbb
mov
add
add
mov
rolb
sbb
or
inc
sub
dec
inc
add
sbb
sub
test
gs
test
add
push
xchg
insb
mov
pushf
and
lret
and
xor
insl
or
push
add
add
jnp
arpl
or
adc
enter
cmp
inc
adc
or
jmp
sub
sbb
mov
lcall
mov
addl
pop
mov
roll
push
fs
jmp
push
cmp
ret
imul
enter
pop
xor
aas
fwait
sbb
mov
outsl
shlb
or
mov
and
sbb
test
adc
fcmovnb
orl
ret
cmp
jp
in
lds
into
enter
push
add
add
xchg
sbb
add
jne
shlb
fs
add
pop
sub
sub
and
push
cmp
insb
or
sbb
sub
and
cmp
shll
inc
out
jp
rclb
lea
push
mov
loopne
or
mov
jnp
push
out
mov
call
mov
mov
clc
jnp
mov
in
daa
jns
jae
pushf
or
movl
push
xchg
push
test
or
pop
ljmp
fwait
shr
ds
dec
test
notb
test
pop
sub
mov
out
pop
jecxz
mov
ret
cmp
add
int
ret
sbb
mov
mov
add
dec
push
bswap
inc
sub
or
je
xor
arpl
push
test
test
ja
hlt
mov
or
and
push
xor
hlt
int
mov
push
sub
mov
sbb
xchg
enter
adc
insb
movl
dec
adc
cld
andl
inc
dec
popl
cmp
jne
mov
pushf
ret
je
pop
sbb
mov
and
pop
jecxz
push
dec
enter
adc
adc
xor
sub
add
pop
out
lock
aaa
push
seto
out
inc
inc
xchg
add
pop
mov
popf
add
testl
gs
cwtl
and
cmp
movb
or
jb
fistpll
sarb
rolb
or
xor
add
sbb
sbb
leave
out
adc
jg
adcl
xchg
and
or
cmp
pop
je
mov
sbb
nopl
lods
push
xor
mov
add
in
pop
imul
gs
test
jns
add
leave
lret
push
inc
movsb
popa
or
add
sbbb
loope
inc
adc
mov
pop
movsl
jge
push
lods
inc
push
and
dec
outsl
or
orl
or
nop
icebp
xchg
pusha
push
enter
addr16
cpuid
mov
inc
loope
add
or
xchg
mov
dec
je
aaa
loopne
cld
xchg
mov
rolb
vmwrite
adc
sbb
imul
leave
out
mov
lea
jbe
push
inc
add
mov
push
push
lea
push
add
sbb
mov
push
outsl
adc
xor
jae
outsl
or
cmp
in
lds
sbb
out
sbb
pop
mov
icebp
mov
mov
pop
push
jg
mov
mov
ja
mov
inc
mov
cmp
or
sbb
ds
xchg
mov
and
in
jb
mov
mov
sbb
jnp
fwait
or
xchg
ss
and
push
je
xchg
jle
or
sbb
and
stos
push
lock
inc
fstpl
loope
or
or
insb
xchg
mov
in
xor
dec
jb
add
add
add
insl
inc
dec
jg
daa
mov
pop
cmp
cmpsl
fcmovb
jecxz
mov
dec
mov
dec
je
repnz
push
dec
cltd
rorb
add
sbb
xchg
jne
or
repnz
xlat
push
jge
cmp
add
fildl
cmp
nop
cmpsb
movq
mov
cmpsl
jp
push
aad
or
ds
mov
in
femms
loopnew
inc
or
pushf
mov
inc
push
call
push
adc
inc
rcrb
push
and
adc
enter
ret
sarb
jmp
sbb
les
add
push
sub
aaa
inc
lods
movsb
xor
rcrl
dec
inc
jecxz
pop
dec
les
adc
xchg
push
aad
fnstenv
gs
shlb
xchg
fcom
xchg
xor
stos
imul
cmpsb
adcb
addr16
cs
add
jg
push
repnz
mov
pop
stos
mov
xor
adc
xchg
mov
and
fs
test
and
jb
and
stos
orb
gs
mov
jge
xchg
push
dec
dec
inc
stos
imul
push
aas
shl
test
adc
iret
lea
shrl
inc
rcl
stos
or
andb
xchg
sbb
push
sbb
pusha
cmpsb
or
add
mov
lds
sbb
dec
adc
sub
aam
lock
cmpl
adc
cmp
fbstp
stos
daa
add
les
xor
aam
arpl
cmp
fcoml
fs
nop
add
ljmp
xor
rcrl
and
mov
cs
mov
pop
pop
fs
xor
cmp
subl
subl
aaa
and
sub
mov
rcrb
jecxz
mov
mov
pop
push
xor
mov
mov
push
xor
lea
dec
adc
pop
xor
inc
or
adc
add
in
mov
inc
aad
aam
bts
adc
mov
pop
adcl
jno
mov
mov
mov
sub
imul
pop
inc
fcompl
outsb
sub
ljmp
xchg
cs
sub
lcall
fmuls
lods
pop
rcll
jns
jns
cmp
fildl
aaa
sub
shl
add
cmp
jno
mov
adc
adc
ljmp
and
or
icebp
xor
or
cmp
out
dec
lods
sub
fwait
cmp
enter
cmp
neg
inc
inc
scas
pop
xor
pop
or
es
pusha
mov
or
inc
sarb
adc
outsb
hlt
clc
pop
sbb
xchg
fimuls
or
dec
jecxz
test
push
js
sub
ja
lahf
test
sub
fucomp
xor
orb
rcr
sbb
jns
and
insl
dec
jp
jle
jne
mov
xorb
xchg
out
dec
sti
scas
xchg
inc
or
cmp
sahf
jo
adc
in
rorb
push
add
cltd
les
aam
xor
pop
imul
lods
jae
adc
inc
push
jno
loop
fildl
xor
mov
xor
jp
sub
mov
xchg
sbb
test
mov
je
test
loope
cmp
jl
pusha
pop
test
das
daa
push
jg
push
push
cwtl
jo
insl
jnp
lods
dec
scas
mov
sbb
stos
insb
dec
inc
fistps
xchg
repnz
lods
push
je
inc
mov
cmpl
jl
add
jo
jg
and
in
sub
add
and
push
adc
ds
scas
or
xor
inc
adc
fisubrl
shrl
sbb
sub
or
sbb
mov
lret
or
loope
sub
sub
inc
mov
cmp
add
push
decl
aas
test
dec
pop
xor
or
nop
jp
lock
or
cmpb
push
inc
sub
xor
shrl
or
cmpsb
outsl
sahf
sbb
adc
xchg
fs
adc
sbb
and
adc
cwtl
pop
idivl
dec
push
push
add
out
sbb
shr
ss
das
mov
ss
xor
xchg
add
mov
mov
or
xor
sbb
rcrb
mov
push
mov
movsb
inc
sub
dec
test
add
pop
imul
cmpsb
cs
and
pop
and
hlt
or
je
mov
mov
nop
inc
ret
cld
mov
mov
repnz
movsb
and
dec
sarl
das
push
mov
sbb
mov
pop
out
xchg
movsb
push
xchg
xchg
cmpb
xchg
lcall
push
lcall
daa
fs
xchg
cld
pop
fmuls
ljmp
cmp
jnp
xchg
pop
nop
pop
cmpsb
push
xlat
xchg
add
test
xchg
sub
pop
inc
outsb
and
cmp
cmpsl
aas
int3
mov
xlat
cmp
mov
sbb
jno
push
cmpl
iret
jecxz
cmp
push
or
mov
outsl
dec
mov
dec
or
push
push
mov
push
adc
xor
or
cmp
sub
loop
lcall
xor
lea
xor
enter
xlat
add
add
bound
and
inc
xor
mov
dec
or
inc
das
adc
xor
xor
cmc
lds
pusha
jmp
pop
sub
ljmp
adc
aaa
mov
add
push
sbb
fstpt
fcomps
pop
add
ss
adc
dec
daa
sbb
or
fldl
push
jo
sub
jbe
cld
dec
dec
cld
fstps
mov
mov
mov
push
int3
repnz
push
fcomps
dec
jge
dec
repz
or
testb
fildl
pop
out
jmp
andb
or
idivb
pop
push
popa
mov
inc
stc
cmpsl
cmpsl
and
xor
popf
mov
cmc
sbb
daa
loopne
and
xchg
inc
mov
adc
xchg
jbe
mov
sub
lods
scas
cmp
jne
sbb
xchg
adc
fwait
sub
pop
dec
push
mov
dec
fwait
adc
das
xorl
push
cwtl
push
sub
aas
add
cli
inc
jg
jne
adc
or
cli
lea
fidivs
call
or
ret
lods
sbb
mov
dec
je
daa
cmpb
popa
xlat
movsb
pop
cld
cmp
jne
sbb
fbstp
pop
test
jne
add
push
popf
aas
mov
cmpsb
sub
sbb
or
ret
sbb
lods
mov
mov
inc
xor
pop
xchg
mov
repnz
rcl
dec
inc
push
fs
inc
out
enter
mov
mov
or
jb
out
jmp
mov
cmp
push
adc
push
pop
xor
call
adc
xor
sbb
inc
inc
fidivrs
sub
or
mov
lea
test
fs
inc
pop
xor
outsl
or
mov
or
jnp
cmp
or
cmpsl
mov
push
push
dec
enter
clc
cmp
mov
movsb
shr
hlt
loop
jb
mov
or
push
arpl
fwait
rcll
push
xchg
mov
jno
sbb
adc
sbbb
out
dec
xchg
mov
lock
add
enter
fwait
sbb
cmp
mov
add
lock
dec
or
mov
mov
adc
bound
icebp
xorb
fnsave
mov
mov
sbb
insb
leave
and
sbb
xchg
or
sub
mov
add
jo
adc
inc
sub
fbld
in
push
adc
adc
fcoms
jbe
sbb
outsl
pop
fs
adc
or
inc
pusha
aad
mov
cmpsb
push
sub
mov
mov
fs
add
js
add
cmovns
sbb
xor
iret
in
sub
jb
mov
pop
shll
xchg
push
decl
addr16
scas
or
xor
push
xchg
stc
jne
into
add
mov
and
test
roll
sub
or
pop
add
sub
dec
sub
mov
inc
lock
mov
jmp
pop
xchg
inc
pop
jb
sbb
and
add
dec
add
nop
mov
mov
jo
out
inc
or
neg
cmp
fidivrl
movsb
neg
in
add
popa
mov
leave
add
adc
sbb
sbb
adc
jo
adc
in
psubusb
add
subb
push
or
jle
inc
pop
testl
push
add
sub
cmc
push
push
push
iret
mov
fisttpl
mov
insb
mov
cmp
daa
pop
mov
int3
sbb
or
les
lds
xchg
decl
fistpll
aaa
shlb
add
xor
push
or
mov
es
das
xchg
or
xlat
add
aas
sbb
aaa
adc
inc
pop
jp
loopne
jno
push
add
xchg
fsqrt
xchg
rolb
adc
jns
adc
in
xchg
fnstcw
jo
or
pop
fadd
in
xor
insb
or
rolb
stos
adc
push
je
dec
push
pop
rclb
cmpl
pop
mov
inc
test
cmp
xchg
pop
pop
mov
fsubp
xchg
inc
testb
xor
rclb
shrb
mov
cwtl
rcl
xor
inc
sbb
xor
lea
mov
push
add
push
mov
and
pusha
mov
into
jmp
fidivs
nop
or
addb
jno
mov
push
mov
or
cmpl
inc
rolb
scas
push
rorb
ret
jecxz
xor
out
sbbb
movl
mov
and
enter
or
jno
in
xor
mov
int3
sbb
pop
or
cwtl
es
sbb
fs
das
std
movsb
test
mov
adc
mov
cltd
inc
fcompl
adc
daa
imul
adc
test
fldt
scas
pop
out
add
adc
sub
fists
ret
mov
pusha
mov
jbe
and
pop
lea
cltd
xchg
and
movsb
xor
add
out
shlb
pop
pop
mov
movswl
int3
push
inc
sbb
push
sahf
jp
orb
je
mov
cmpb
jno
icebp
mov
mov
ror
fimuls
pop
add
bound
jp
movsl
shll
push
mov
test
dec
leave
ja
fnstsw
cmpl
adc
mov
mov
and
or
xchg
mov
iret
xchg
leave
rorl
pop
out
xor
test
dec
sub
push
pop
int3
mov
mov
mov
shll
inc
ret
stos
xor
test
outsb
adc
add
inc
sbb
xchg
adc
lock
shll
jno
push
dec
mov
dec
in
add
cmp
je
xchg
xor
or
or
ds
xor
mov
cld
jne
sbb
sbbl
or
stc
jo
adc
add
mov
and
fldl
and
jo
sbb
xor
push
dec
je
add
push
mov
ret
dec
or
sbb
push
popa
add
sbb
jmp
loope
mov
int
sub
popf
fsubrs
imul
push
pop
jge
sahf
popf
push
and
sub
add
inc
rolb
push
cmp
adc
cmpsl
pop
push
push
js
adc
and
adc
testb
loope
mov
lcall
iret
add
daa
xor
add
add
ss
push
xchg
add
mov
cmp
cwtl
cmp
insl
and
orb
and
mov
nop
sarl
or
push
jo
add
or
pop
scas
add
shrb
pop
jp
pop
inc
cld
aad
nop
je
inc
jo
daa
jne
aad
mov
jnp
push
adc
lods
dec
mov
mov
punpckhbw
lods
pusha
or
loop
xchg
jmp
sbb
mov
mov
imul
dec
cwtl
lcall
jmp
aam
enter
jl
popa
test
cmpsl
in
lret
lock
dec
pop
divb
or
out
and
add
dec
adc
jecxz
dec
cwtl
pop
outsb
in
jbe
ja
add
outsl
mov
xor
push
mov
push
enter
xor
mov
mov
in
add
adc
movsl
mov
adc
jae
pop
and
scas
outsl
mov
jge
sbbl
fwait
push
or
mov
jns
jnp
test
jne
jl
imul
int3
rolb
or
andb
in
sarl
test
std
pop
add
push
cmp
mov
int3
dec
test
sub
sbb
fidivrl
mov
loopne
shll
insl
pusha
push
sub
push
sbb
push
shll
nop
add
and
xor
sub
xor
imul
push
xchg
or
adc
sbb
shrb
ja
addb
push
dec
fs
sub
sub
into
aam
push
outsl
add
push
push
or
push
mov
fimuls
xor
and
popa
das
adc
jne
js
pusha
mov
cmp
sbb
mov
std
std
push
sbb
data16
cld
mov
lock
sarl
pop
aaa
cli
iret
cmp
push
push
out
inc
push
orb
sbb
cmpb
punpcklwd
add
shlb
movzbl
int3
ret
lahf
push
mov
push
jmp
adc
rcrb
sbb
rclb
mulb
add
dec
xchg
pop
cmp
adc
jmp
ja
push
add
add
in
mov
add
les
inc
insl
push
out
cmp
int
push
mov
fdivs
sub
das
add
add
add
xchg
fsubrs
mov
loopne
push
sub
add
and
mov
or
outsb
sub
add
jo
fdivl
or
in
xor
adc
adc
ss
lret
or
aas
add
push
das
out
loop
or
add
sbb
push
sub
arpl
or
sub
mov
js
push
push
lahf
xchg
mov
cmp
or
les
cmp
test
add
stos
or
push
cmpsl
icebp
or
mov
incl
xorb
push
mov
es
adc
lods
jmp
xchg
mov
mov
pop
inc
lods
xchg
and
sub
je
xor
jae
pop
and
sbb
or
push
push
js
xor
in
fs
je
lods
mov
xor
shr
jns
imul
mov
inc
dec
dec
inc
dec
push
outsb
enter
dec
call
add
daa
push
popa
shl
int3
mov
rorb
test
push
push
sbb
lea
andb
push
add
add
sti
xchg
test
lea
lret
mov
lret
call
sbb
mov
inc
add
inc
and
mov
and
sti
pop
push
ret
imul
and
push
cli
mov
add
add
decl
adc
sbb
push
adcb
pop
stc
cld
sub
dec
add
jbe
or
lds
or
jo
jno
and
push
sub
inc
pop
push
mov
adc
inc
addl
lock
lods
sbb
cmp
inc
call
mov
pushf
pop
aam
sbb
aad
xchg
rcl
mov
mov
inc
cmp
pop
imul
xlat
push
mov
adc
gs
xor
and
int3
mov
mov
call
aam
test
rclb
sarl
mov
adc
clc
or
daa
xlat
sbb
dec
movsb
in
xor
xor
addr16
sub
push
lock
sahf
cs
lods
adc
dec
iret
inc
pop
mov
sub
lods
stos
incl
add
jne
cs
sub
daa
fs
sbb
adc
fs
mov
sbb
push
rcrb
xchg
pop
sub
gs
mov
or
sub
or
fmull
lock
call
add
popf
xchg
mov
cltd
js
pushf
rolb
cmpsb
in
sbb
adc
or
sbbb
mov
sarl
fcoms
mov
dec
add
cmp
in
fwait
sub
or
pop
fdivs
out
jmp
and
sbb
jns
or
cmc
sbb
mov
inc
mov
sub
mov
ss
add
not
cmp
jl
inc
shll
orl
fwait
pop
xchg
loope
mov
lret
mov
lret
iret
mov
cld
push
jecxz
mov
jl
add
jae
adc
lret
mov
inc
lds
cmp
and
push
mov
mov
es
jle
inc
mov
xchg
out
nop
fiaddl
test
and
scas
sbb
mov
leave
lock
fildl
sub
mov
xchg
mov
sub
shr
cmpl
xor
sarl
rcrl
cmp
xchg
xor
push
fisttpll
filds
cmp
push
mov
dec
rcll
js
adcl
inc
fmuls
adc
push
daa
inc
dec
inc
jmp
subb
and
pop
jg
std
mov
cmpl
inc
inc
je
addr16
sbb
cmpb
cmp
xor
repnz
cmp
xor
mov
aad
push
mov
sbb
push
int3
sbb
push
scas
adc
imull
inc
rclb
call
sbb
fiadds
xchg
cmc
out
push
popl
dec
xchg
adc
push
adc
iret
adc
sahf
mov
sub
add
addb
insb
repnz
pop
add
movsb
mov
mov
add
inc
or
loop
adc
or
and
inc
push
sbb
inc
cmp
xlat
ret
pusha
cmp
subb
jmp
push
int3
or
lods
pop
adc
movsl
lahf
inc
dec
push
and
dec
lahf
pushf
push
pop
lods
pop
add
push
insl
pop
mov
mov
mov
sub
enter
inc
inc
inc
dec
int3
ret
add
out
pop
push
cmpsb
inc
or
adc
sbb
mov
push
arpl
lret
popw
int3
dec
jne
arpl
cmp
ja
or
int
shlb
xor
or
movsl
xchg
aam
addl
xchg
sub
push
mov
add
lock
or
dec
pop
mov
aaa
hlt
loope
hlt
insl
mov
pop
pop
lahf
inc
adc
imul
add
aad
shrl
xchg
cmp
inc
inc
pop
inc
sub
mov
pop
xchg
push
daa
inc
dec
lret
and
dec
mov
add
rcll
xlat
pop
jge
cmpsl
dec
loop
fbld
xchg
movsl
and
int3
test
test
xchg
jne
aad
icebp
fsubrs
or
dec
jl
push
sbb
or
cmp
les
and
xor
jmp
dec
add
pop
outsl
fdivl
add
imul
fsubr
cmc
ret
push
nop
sahf
popa
cmpsl
xor
adc
inc
jmp
outsl
inc
imul
cmp
add
push
inc
inc
jmp
rcrl
mov
mov
rcrb
adc
pop
stos
push
sub
sub
adc
xor
xor
pop
outsl
mov
push
mov
sbb
or
cmpsl
jp
add
mov
inc
lds
fisttps
mov
lods
push
mov
pop
dec
in
cmp
mov
addr16
or
sahf
add
test
adc
roll
push
push
subl
jo
in
push
jl
or
add
fisubl
xchg
mov
dec
xor
add
cmp
cs
cmpl
sub
inc
add
inc
push
add
fstl
mov
jge
xchg
sbb
inc
sub
sub
ja
int3
cmpsl
shlb
sbb
in
fnsave
xchg
or
shl
pop
es
and
test
adc
mov
fiadds
add
xor
mov
cmpsb
inc
imul
inc
movsl
enter
leave
mov
gs
mov
test
roll
push
or
push
xchg
popa
adc
jp
mov
jae
push
push
pop
sub
mov
dec
fbstp
add
les
ja
lahf
jbe
fdivl
fildl
inc
add
add
and
inc
jns
adc
push
sbb
xchg
xchg
cmpsl
loope
mov
jmp
adc
dec
add
push
pop
or
das
push
pop
inc
out
dec
jmp
pop
iret
in
dec
les
hlt
jo
mov
jmp
cmp
loop
pop
mov
lea
popa
mov
or
add
push
mov
cmp
arpl
inc
or
inc
aaa
cmp
mov
sbb
pop
xchg
or
cltd
push
or
test
rol
push
dec
add
jno
mov
nop
and
sbb
mov
xlat
out
scas
inc
or
inc
out
add
imul
mov
pusha
inc
add
xor
or
xor
lods
mov
push
add
cmpl
rclb
inc
sbb
sub
popa
xchg
cmpsl
mov
movb
mov
mov
sbb
jo
pop
ret
aam
add
and
orb
sub
pop
or
or
xor
sar
out
sbb
leave
pusha
add
jbe
mov
fsubl
fcompl
or
les
mov
jl
dec
test
jp
push
sub
pop
sub
sbb
or
cltd
inc
js
add
testb
outsb
cmpsl
jne
dec
loopne
push
in
les
push
mov
jbe
sub
mov
out
jmp
add
lock
rorb
push
sbb
movsl
cmpl
and
push
jnp
out
aas
adc
les
inc
je
dec
ljmp
jnp
push
add
sbb
adc
mov
sub
and
and
inc
and
jmp
in
and
sbb
insl
shrb
xchg
adc
or
push
jne
add
sub
sub
cld
jge
sub
mov
mov
test
cmpb
sub
cmp
jns
or
loopne
popa
jb
sub
in
fs
and
sbb
scas
pushf
inc
dec
cmp
loopne
rclb
ss
gs
and
xchg
push
sbbl
loopne
push
xchg
mov
lcall
addb
jmp
xchg
inc
xchg
xchg
aam
xor
imul
add
shll
xor
das
pop
mov
push
sub
or
je
scas
and
jmp
movsl
dec
sbbl
inc
lods
cmp
cmp
dec
clc
sub
cmp
insl
sbb
and
leave
xor
clc
jg
popa
int3
rcrb
mov
aam
scas
jge
movsl
sub
js
mov
ja
adc
pushf
add
call
ret
mov
dec
shll
cwtl
lea
push
sub
or
xorl
push
and
push
cmp
pop
dec
push
pop
sub
aaa
xchg
in
cmp
add
sbb
mov
mov
sub
cmp
rorb
lea
or
imul
adcb
mov
xlat
push
xor
or
or
jo
jmp
fimull
jne
pop
out
sbb
push
call
daa
pop
dec
add
lret
push
pusha
pop
leave
add
push
push
mov
mov
add
mov
jb
sub
mov
dec
rcrb
sub
and
dec
xor
lods
adc
push
shrl
pop
mov
and
es
ja
mov
cmp
add
dec
cmp
mov
ret
sub
or
fldenv
dec
and
repnz
test
scas
mov
add
insb
hlt
scas
push
push
or
or
es
pop
sbb
jmp
push
cmp
sub
outsl
rcll
and
xor
cwtl
mov
mov
jl
sbbb
or
das
jl
test
ljmp
or
mov
cmpb
adc
mov
les
xchg
add
push
addl
push
xchg
sbb
push
ss
ja
cmpb
sub
out
pop
mov
pop
mov
jmp
add
popa
inc
fisubrs
xchg
push
repnz
add
or
lea
push
adc
sub
rcl
stos
cwtl
and
lods
adc
xor
jae
cmpsl
aad
orl
mov
insl
jb
pop
test
adc
add
iret
or
ja
mov
mov
int
sbb
or
aaa
mov
fmull
jmp
sbb
jne
xor
movsb
pop
dec
movsl
clc
pop
pop
mov
fiadds
and
sbb
sbbl
add
mov
sub
sbb
push
pushf
out
test
add
fdivrl
clc
xor
push
scas
adc
loopne
popa
out
sbb
loopne
popf
addb
inc
por
js
jmp
cwtl
test
inc
fmull
insb
ret
call
or
je
xchg
inc
out
shrb
addr16
add
add
fwait
jno
add
sbb
mov
in
jmp
mov
or
mov
jb
inc
loopne
loopne
aam
sbb
rorb
loopne
je
or
add
push
arpl
rorb
loopne
fadd
loopne
scas
push
or
sbb
or
hlt
enter
clc
ret
out
mov
and
cs
jne
push
cmp
into
or
jge
js
fmuls
daa
pop
mov
mov
call
mov
repnz
addb
adc
out
mov
sub
popf
add
dec
movsl
adc
or
and
test
mov
jmp
lret
nop
mov
jbe
ret
es
mov
cltd
add
mov
xchg
mov
mov
fbstp
push
xchg
shl
pop
out
jbe
pusha
test
or
adc
lods
inc
in
xor
sbb
popa
or
daa
cmpl
jl
and
or
dec
mov
inc
jno
cmc
pop
mov
sub
int3
js
test
add
add
lcall
negl
xchg
dec
lret
and
shll
loopne
xchg
push
inc
stc
fisttps
mov
pop
enter
push
arpl
add
stos
mov
mov
or
dec
in
pop
insb
rcrb
arpl
sub
outsb
loope
lea
xor
dec
xor
loope
ret
and
jnp
or
insb
inc
rolb
push
mov
xor
push
sub
adc
lods
xchg
das
jne
add
push
sbb
add
sub
inc
push
jo
jg
subb
fs
dec
adc
xchg
sahf
loope
pop
mov
sbb
inc
xor
and
pop
cmp
in
mov
jbe
or
sbb
mov
or
lods
mov
jmp
loop
pop
xchg
sbb
loop
nop
sbb
loop
xlat
adc
push
outsl
lock
and
cmp
arpl
add
movsl
lcall
push
aas
outsb
sbb
mov
xor
ret
ljmp
push
scas
jo
mov
hlt
insb
outsb
cwtl
cld
push
cmp
xchg
add
js
add
jecxz
movsb
rorl
shll
sbb
mov
push
aaa
adc
xor
xchg
mov
hlt
mov
mov
cs
xchg
sbb
push
lock
clc
lcall
mov
cmpsb
xchg
pop
cli
or
pop
or
push
cmp
dec
pusha
push
mov
inc
add
or
mov
mov
lret
mov
xchg
push
or
push
push
jecxz
movsl
lods
push
data16
int3
cs
cmp
add
les
mov
mov
roll
stc
in
call
out
cmp
push
sbb
imul
aam
or
sbb
es
nop
in
or
in
inc
mov
dec
call
xchg
bound
aas
je
xchg
les
mov
mov
mov
or
pop
rolb
stc
xchg
adc
jbe
cld
add
insl
into
xchg
loopne
shrl
add
jo
addb
fnstenv
lods
and
shr
pop
rorl
testb
mov
insb
sub
movb
out
cmp
ja
pop
addb
in
push
sbb
stos
daa
cld
sub
ljmp
xchg
mov
xchg
mov
jbe
cmpb
mov
and
insl
fs
stc
adc
and
add
add
imul
inc
sahf
mov
inc
lea
pop
jne
pop
sbb
mov
fisttps
cmp
sbbb
add
cmpsl
mov
pop
xor
filds
sahf
pop
cmp
pop
add
fsubr
addb
sub
mov
cmp
sub
mov
and
xor
outsb
or
push
cmp
pop
mov
inc
and
aaa
aad
sbb
lret
scas
insb
cmpsb
jo
and
jnp
or
or
mov
pusha
or
mov
cmp
lods
adc
xor
fwait
pop
hlt
pusha
nop
movsb
jg
stc
add
push
adc
fwait
pusha
loopne
mov
push
test
loop
in
in
jo
jmp
sbb
cld
mov
or
dec
add
xchg
and
cld
sbb
fs
cld
pusha
test
cmpsl
jne
pop
xchg
pushl
pop
xor
addr16
sub
addl
out
sbb
pop
sahf
rorb
pop
js
loopne
add
push
iret
sbb
xor
mov
mov
cmp
jnp
push
das
or
lahf
movsb
mov
fcmovb
and
cmp
inc
fbstp
and
push
inc
scas
ficompl
inc
js
or
mov
icebp
pop
inc
movl
sbb
xchg
xor
sti
sub
movsb
cmp
lods
sbb
jb
pop
jl
mov
loope
pop
mov
loop
jne
inc
mov
add
call
dec
xorl
in
xchg
xchg
es
lds
dec
in
in
insb
add
add
lods
test
add
pop
ljmp
and
dec
jb
inc
push
orl
dec
xor
je
and
mov
mov
sub
pop
lds
mov
mov
sub
mov
arpl
cmc
ret
fildll
mov
ret
pop
dec
add
nop
add
insb
rclb
and
in
inc
or
push
push
cmp
or
dec
cs
ss
int
dec
xchg
push
ret
inc
push
mov
sub
add
jo
arpl
jo
mov
push
xchg
sub
inc
fsubrp
xchg
xor
mov
adc
mov
outsl
pusha
imul
ss
fnstenv
mov
fs
imul
inc
in
inc
adc
add
adc
xchg
push
xchg
xlat
jge
add
dec
inc
pusha
mov
jl
int3
cmp
out
jl
nop
push
add
das
cmp
nop
lret
insb
dec
mov
incb
jg
out
and
mov
jno
leave
adc
inc
adc
adc
lcall
or
jae
lods
movl
popa
and
mov
xor
xorb
pusha
cmp
cmp
push
and
mov
loop
pop
pop
xlat
or
mov
jo
mov
pop
cpuid
adc
icebp
popf
mov
jns
add
or
ss
xor
pop
and
lret
or
out
cmp
add
shll
inc
out
notb
push
add
lock
das
es
mov
mov
adc
mov
adc
arpl
pop
xchg
or
dec
dec
or
mov
xchg
popf
pop
aam
sub
rorl
inc
or
pop
jp
repnz
push
in
push
incb
jne
out
jb
dec
and
jnp
cmp
lea
sub
adc
xchg
pushf
test
push
jl
imul
out
sub
shll
jno
les
orl
or
outsl
xchg
sbb
pop
jnp
push
scas
sbb
pop
addl
jmp
cmp
outsb
xlat
jne
mov
rcll
mov
or
pop
jmp
outsl
sub
outsl
jne
out
dec
aam
pop
ja
outsl
insb
sbb
imul
mov
adc
out
dec
mov
popa
fistpll
orl
or
or
das
inc
add
int
mov
mov
dec
jae
push
pop
lahf
push
fs
mov
pop
pop
xchg
push
cmp
cmovs
or
dec
or
or
sub
sbbb
mov
ja
add
sbb
inc
pusha
clc
rclb
pop
pop
out
rcrl
push
or
pop
cmp
add
sbb
iret
aaa
sbb
jne
fiadds
add
fs
and
cmp
call
cmp
jne
or
dec
insb
mov
cld
outsl
scas
fisubs
cmp
aam
push
sub
cmc
les
mov
or
incl
jg
adc
mov
je
push
push
int
inc
mull
jmp
fmuls
test
gs
add
cmp
mov
sbb
dec
mov
xlat
push
inc
jmp
sahf
fmuls
mov
inc
jb
xor
outsl
xor
push
push
jo
mov
and
js
insl
and
loopne
insb
insl
insl
pusha
out
dec
inc
pop
nop
ja
mov
xor
pop
andl
icebp
adc
fcomi
xchg
mov
lcall
ret
js
sub
testb
stos
add
add
add
xlat
sar
lret
or
xor
testl
cmp
test
das
pushf
and
add
adc
rol
lcall
xor
or
sub
mov
in
pop
add
xlat
push
add
and
subl
add
jl
dec
xchg
lea
cmp
mov
dec
push
jo
inc
mov
mov
mov
push
mov
sti
pop
movsl
add
adc
mov
inc
and
dec
cs
push
dec
sub
xor
adc
adc
je
loopne
les
jmp
sub
push
push
test
popa
movsb
fdivs
in
cmc
adc
push
or
jne
jo
ljmp
outsb
and
cmp
je
subl
push
cld
es
add
fmull
inc
mov
mov
push
push
or
push
mov
jmp
inc
sub
inc
and
shrb
lock
sub
pop
add
sbb
imul
jl
clc
hlt
mov
inc
hlt
sub
adc
imul
mov
pcmpeqd
xchg
jno
xchg
mov
or
adc
test
dec
stos
movsl
cmpsb
pop
sub
adc
insb
cmp
fnstenv
jnp
mov
pop
xor
mov
mov
jns
pop
hlt
je
clc
sbb
imul
xor
hlt
xlat
cmp
push
mov
addl
and
aas
sub
movsb
shr
push
outsb
nop
test
fucomip
xor
mov
roll
and
ret
or
sbb
lcall
or
push
stos
push
bound
lock
mov
inc
icebp
xor
andb
adc
xchg
clc
in
inc
outsb
push
or
divb
adc
xchg
inc
push
cmp
add
inc
dec
ss
cmc
pop
jle
xorl
mov
cmpsl
add
xor
and
and
sbb
mov
and
out
dec
cmp
fdiv
in
mov
out
xchg
cld
out
add
xchg
bound
mov
or
xor
mov
imul
push
mov
xor
les
push
addb
les
add
push
pop
cmp
orl
sbb
call
push
push
mov
mov
cmp
mov
les
jmp
add
inc
ljmp
pop
inc
xor
adc
sti
in
add
enter
cmp
jb
ret
cs
arpl
push
arpl
adc
int3
push
pop
inc
and
jl
mov
xchg
rorl
les
fs
push
sarl
bound
adc
push
bound
mov
mov
jns
sbbb
enter
pcmpgtd
mov
push
aad
loope
mov
add
jo
adc
pop
or
cmp
je
es
mov
popa
movsb
cli
adcl
adc
je
jmp
xchg
mov
popf
xchg
adc
ret
fcomp
xchg
or
and
lock
or
mov
adc
add
add
xlat
pop
cmp
inc
pop
in
into
jno
dec
and
scas
jb
ret
jnp
mov
inc
push
push
dec
and
cmpsb
and
add
mov
and
mov
jne
pop
sarb
sub
and
enter
movb
and
xchg
and
or
jge
lret
sti
movl
hlt
mov
xor
je
or
cmp
or
add
ljmp
sbb
or
cs
adc
sub
jle
pusha
mov
inc
push
ret
mov
push
das
sub
shlb
daa
or
sub
es
imul
and
adc
insb
imul
adc
or
repz
xchg
inc
mov
add
cwtl
add
dec
inc
pop
out
sahf
into
mov
lods
add
sub
mov
dec
inc
dec
and
sti
dec
dec
inc
dec
dec
xor
add
pop
add
cmp
dec
loope
lods
cli
rcll
push
push
dec
add
insl
xchg
inc
or
aam
popf
fldcw
sbb
ljmp
pop
ja
fs
xchg
cmp
add
cmp
push
push
adc
xor
sbb
ret
cmp
cmp
and
sbb
inc
or
cmpsb
dec
nop
push
and
test
adc
sbb
inc
repnz
ret
aam
fwait
imul
sbb
loope
mov
mov
sbb
pop
dec
adc
inc
inc
mov
mov
add
jns
mov
add
repz
xor
or
int3
aam
js
inc
xchg
dec
dec
aam
jno
pop
mov
pop
test
imul
rcrl
and
jae
test
mov
pop
and
loopne
ret
lret
pushf
push
sbb
mov
cmp
sub
sub
inc
test
cmpsb
das
repnz
jb
sub
fidivl
add
sub
mov
enter
ds
mov
nop
jo
scas
roll
jnp
xor
xchg
sbb
in
shrb
push
popa
ret
js
pusha
mov
push
or
jp
and
or
or
pushf
lret
sbbl
imul
je
mov
inc
mov
cmp
ret
xor
lods
dec
popa
test
jnp
pushf
add
pop
testl
outsl
enter
mov
push
mov
leave
stc
xchg
xchg
mov
mov
popa
sub
cmp
lods
add
stos
sbb
call
rclb
inc
ret
mov
or
pop
lret
les
popa
add
inc
sub
add
push
sub
pop
inc
xchg
nop
js
in
rcl
pop
aas
xor
decl
cltd
in
mov
xchg
pop
jge
xor
nop
loop
fs
ja
push
mov
ljmp
fucomi
pop
pop
add
comiss
xor
sub
jle
addb
lea
jne
test
inc
push
mov
fsubrs
xor
inc
xor
or
enter
mov
rorl
sbb
jne
enter
jb
push
js
mov
push
insl
maskmovq
mull
sbb
push
mov
adc
ret
sbb
adc
orb
mov
cmpsb
sub
or
or
sbbb
and
or
in
push
je
fs
mov
rorb
jo
adc
mov
mov
or
cmpsl
es
and
pop
shlb
sbb
and
stos
cmp
mov
mov
daa
and
fisubl
movsb
pop
mov
pop
lods
pop
jo
inc
shr
adc
push
clc
adc
add
sbb
gs
scas
sbb
mov
popf
sbbl
or
jbe
jns
int
sbb
out
mov
stos
mov
push
push
daa
out
repz
xchg
sbb
call
mov
and
jle
mov
ljmp
inc
sbbl
fdivrl
fwait
in
push
push
cmp
sub
sub
sbb
fwait
arpl
or
cltd
testb
or
and
jns
add
inc
in
stos
in
add
outsb
stos
and
dec
out
cmp
sub
add
and
repnz
das
xchg
inc
mov
adc
shlb
sbb
or
icebp
sbb
arpl
add
sbb
into
mov
mov
clc
pop
dec
and
add
or
cld
js
jnp
lock
cmp
mov
pop
add
dec
pop
test
push
dec
shlb
int3
stos
and
cmp
pop
and
outsl
inc
dec
add
xor
pop
xor
incl
inc
jo
inc
xlat
mov
lods
sti
mov
in
sub
sub
test
jbe
mov
mov
std
clc
test
mov
inc
mov
or
insl
dec
add
mov
jbe
push
inc
push
fimuls
test
add
dec
push
loopne
or
mov
inc
jnp
cmc
or
push
or
test
or
mov
mov
xor
icebp
xor
adc
mov
fdivrs
ret
add
call
arpl
popa
rorl
sbb
arpl
cmp
jnp
insb
sbb
dec
or
jp
lock
fucomi
add
mov
sbb
mov
es
and
leave
mov
sub
add
hlt
or
rcr
and
xchg
pop
in
fs
lahf
iret
mov
cmp
cmpsb
sbb
push
cmp
pop
add
nop
adc
mov
test
sbb
dec
or
pusha
pop
mov
gs
or
cmp
rcrb
xor
cwtl
mov
test
lods
cmpsb
cmpb
movsb
rcl
roll
mov
mov
adc
push
pusha
push
fwait
das
jl
sub
xchg
enter
int
inc
fucomi
je
fldcw
arpl
in
mov
enter
xor
gs
rcl
xor
and
adc
sbb
movsl
and
mov
pop
push
pop
in
or
adc
or
mov
pop
xchg
cmpsl
jbe
insb
je
inc
test
shlb
mov
or
shlb
or
jno
xor
cmp
mov
sbb
push
mov
pop
cwtl
adc
out
lods
pop
cmc
lret
adc
mov
inc
icebp
mov
scas
mov
adc
je
push
add
lea
lcall
inc
push
inc
push
dec
xchg
mov
xchg
push
lea
jmp
xchg
push
repnz
pop
ret
sbb
and
test
nop
mov
push
cmp
push
nop
subl
push
icebp
or
inc
inc
cwtl
add
movsl
and
add
sbb
out
push
or
push
fdivl
xor
clc
cmp
mov
pusha
repz
or
push
or
inc
sub
and
pop
sarb
jo
push
mov
push
imul
hlt
xchg
push
pop
xchg
adc
push
cltd
pop
and
and
adc
je
or
lods
sbb
std
mov
xor
push
jmp
lea
inc
lock
mov
jne
cmp
insb
add
xorb
and
dec
sbb
xchg
fwait
push
mov
pop
pop
xor
mov
jl
addb
mov
or
loop
jne
mov
sbb
test
mov
shll
sbb
adc
push
and
pusha
pop
adc
mov
push
inc
cwtl
pop
add
adc
push
pop
pop
movb
cmp
rorb
xor
mov
push
ljmp
fcoml
and
and
xchg
bound
ljmp
adc
mov
sbb
in
mov
iret
adc
rol
push
jecxz
push
shrb
dec
mov
scas
push
fldcw
int
jae
add
push
jne
loopne
add
mov
dec
lret
jg
jbe
pusha
add
mov
lcall
cmp
or
xor
xor
movsl
out
popa
pushf
or
cmc
faddl
cmp
outsb
pop
pop
in
rolb
sbb
or
pop
xchg
hlt
xor
mov
xchg
std
xor
cmp
enter
mov
testl
mov
dec
mov
insl
popf
adc
rolb
aam
outsb
dec
fists
cwtl
sbb
enter
sbb
mov
jecxz
xor
mov
ss
cmp
mov
mov
arpl
les
xor
icebp
push
mov
xchg
inc
pop
sbb
pop
mov
movb
pop
rolb
mov
ret
mov
pop
cld
add
dec
xor
push
das
adc
mov
or
mov
pop
xor
adc
jno
cmpsl
or
nop
push
or
xchg
popf
xchg
and
xchg
mov
ret
mov
sbb
mov
pop
sub
push
dec
sbb
fcmovnbe
cmc
inc
daa
popf
insb
and
rclb
cmp
pop
add
pop
jmp
sub
aam
xor
and
pop
scas
nop
or
lods
push
stc
hlt
jmp
hlt
cmp
jbe
jns
in
sbb
call
jmp
pusha
movl
jp
and
pusha
and
sahf
inc
mov
mov
ret
lret
and
adc
mov
shl
shlb
mov
dec
and
push
pop
lea
cltd
enter
or
lret
es
sbb
or
adc
pusha
add
test
enter
jno
and
pop
mov
jb
inc
sub
mov
mov
orb
sbb
fwait
call
clc
clc
xlat
and
test
sbb
mov
jl
sarb
add
dec
and
adc
xchg
jmp
sbb
aaa
mov
lods
stc
or
dec
mov
aaa
cltd
xchg
mov
ficoms
clc
sub
sbb
add
aaa
fcoms
xchg
sub
fldl
pop
sub
lea
dec
stos
bound
adc
xor
jmp
mov
outsl
test
shll
dec
mov
nop
cmp
xchg
lods
jl
xchg
dec
mov
jnp
add
data16
cmp
adc
in
out
push
push
mov
and
inc
movsl
jne
and
adc
aad
adc
mov
cmp
es
sbb
loopne
inc
cmc
and
add
jge
dec
inc
das
pop
mov
inc
dec
mov
push
cmc
les
repnz
xor
aam
cmp
mov
jns
mov
fs
movzwl
push
test
and
dec
test
add
mov
mov
push
and
into
xchg
xchg
shr
sub
adc
repnz
mov
es
rorb
ret
dec
shlb
lret
in
pop
inc
daa
jge
lock
pop
xchg
push
pop
jo
loopne
xchg
scas
cmp
dec
push
cmc
sbb
and
adc
in
and
mov
mov
pushf
and
add
adc
sub
adc
call
mov
or
cmp
xor
sbb
dec
imul
popa
movsb
cs
pusha
or
repnz
pop
sub
inc
mov
sbb
arpl
adc
pop
push
adc
sbb
xor
sub
nop
sbb
adc
xchg
pop
xchg
and
inc
mov
fdivs
or
ret
dec
clc
inc
xchg
cmp
jmp
bound
inc
ljmp
outsl
push
push
cmp
jne
adc
dec
add
dec
push
inc
dec
adc
sbb
add
incl
andl
or
sbb
push
scas
cmp
xchg
loopne
lret
mov
call
sbb
push
stc
adc
xchg
hlt
or
add
adc
add
mov
fistl
cli
sbb
push
sbb
mov
and
xchg
or
xchg
dec
repnz
mov
adc
mov
cmpsl
add
das
sub
lods
sub
xor
adc
pop
imul
and
repz
adc
aas
mov
mov
sub
push
lcall
fists
push
mov
scas
cli
mov
sbb
push
sbb
iret
push
add
rcrb
loope
sbb
mov
sub
jbe
jnp
cmp
inc
nop
sub
hlt
xor
mov
outsl
push
jmp
call
xor
sbb
ret
sub
in
dec
pop
cmpsl
in
hlt
int
xchg
push
pop
mov
mov
and
sbb
push
pop
or
adc
pop
ja
push
or
es
xor
stos
push
inc
mov
push
es
arpl
or
sbb
pop
and
push
call
clc
and
push
pop
int3
xor
out
add
mov
push
shr
and
mov
pop
mov
icebp
aaa
mov
push
xor
mov
in
into
cs
xchg
sub
xchg
das
inc
fmuls
loopne
or
or
lret
cltd
and
cmp
sub
cmpsl
pop
cltd
stc
pop
imul
fistpll
cmp
pusha
jne
xchg
sub
ret
push
add
daa
cld
jg
inc
pop
mov
push
add
inc
mov
mov
inc
js
sbb
das
sbb
stos
jno
inc
lcall
inc
sarl
mov
inc
adc
and
inc
dec
mov
add
insb
lods
fwait
ss
lret
out
sub
out
mov
and
pand
movsl
in
add
stos
inc
loopne
stos
xor
push
add
mov
xchg
ret
dec
xlat
add
and
cli
mov
inc
push
movsb
push
orb
pop
repz
xlat
or
pop
mov
mov
and
enter
and
sub
das
nop
or
xchg
add
fidivrl
jl
dec
sbb
or
push
add
icebp
push
inc
aaa
clc
pop
cwtl
adc
dec
cmp
xor
cmp
xlat
add
sbb
pop
xor
sbb
push
imul
and
test
xlat
movl
test
sub
test
sub
lcall
and
mov
aam
sbb
lock
lea
cmp
arpl
je
mov
fld
mov
adc
sub
jne
adc
and
pop
xor
inc
inc
insl
pusha
mov
call
push
ss
pop
faddp
out
inc
or
mov
inc
push
aad
fstpl
sbb
push
push
jnp
je
movb
movb
and
mov
out
and
cmpb
test
sub
inc
jle
scas
imul
add
inc
cld
fwait
xchg
icebp
mov
insl
xchg
mov
leave
mov
inc
cmp
adcb
and
or
stos
inc
jo
rcl
and
lods
xchg
sub
add
ret
inc
out
cmpsb
test
push
or
movsb
sub
adc
or
insl
sbb
add
movl
jo
or
cwtl
push
mov
and
mov
stos
xor
xor
fwait
sbb
mov
fimuls
jo
sbb
adc
aas
pop
lcall
mov
add
pop
mov
inc
aas
mov
push
add
jo
add
dec
aaa
jne
mov
mov
pop
inc
and
mov
andb
orl
les
lcall
dec
nop
nop
push
inc
pop
cs
fmul
aas
jmp
jo,pn
lds
lea
push
inc
xchg
jno
xchg
inc
pop
loop
icebp
push
adcb
lahf
dec
mov
push
fsts
int
test
push
xchg
div
enter
adc
popa
mov
inc
jp
push
xchg
pop
call
out
cmp
add
insb
shlb
push
icebp
ficomps
cwtl
shld
and
push
adc
loop
xor
dec
jecxz
jge
sub
inc
jb
sbb
pop
jecxz
xor
fcoml
cwtl
push
or
imul
cld
adc
dec
cmp
sbbb
fcoms
adc
push
stc
sbb
cld
pop
repz
fsubr
add
in
faddl
sub
inc
insb
sub
push
xor
fcoml
inc
pop
adc
pop
imul
and
dec
mov
push
add
mov
xchg
mov
adc
cmp
dec
shrb
xchg
jmp
push
push
add
push
dec
sub
cli
rolb
orb
or
mov
sbb
es
sbb
dec
shll
rcl
subl
mull
test
fisubrl
push
repz
pusha
es
insb
fildl
inc
repz
push
pop
push
bound
sbb
or
and
je
dec
add
pop
int
dec
inc
outsb
inc
cmp
je
test
aaa
push
or
lds
mov
push
sarb
sub
sbb
mov
pop
andb
cmovle
inc
adc
mov
jl
mov
lods
inc
dec
pop
daa
fs
cmpsb
dec
lret
xor
rorb
clc
xor
cmpb
enter
cmpsb
inc
push
push
push
lds
adc
mov
fs
inc
je
test
lock
out
mov
inc
inc
jecxz
insl
ffreep
inc
add
add
test
mov
dec
xchg
inc
xor
pusha
cmpb
or
mov
cltd
xor
popf
inc
cmp
loop
sbb
inc
scas
add
fildll
jae
mov
xlat
add
pop
sbb
rcrb
inc
bound
push
inc
es
sbb
jb
js
add
testb
aaa
jbe
movsb
imul
xchg
test
rclb
xor
int3
add
es
or
js
adc
pusha
mov
mov
jbe
mov
cmpl
jbe
pop
inc
or
movsb
dec
inc
mov
loope
and
or
cmp
jmp
cmp
cmp
jbe
mov
cmp
das
popa
adc
jb
add
cmpb
pop
and
dec
gs
inc
jge
data16
cmc
sbb
inc
test
sar
mov
mov
cmpl
sbb
mov
lahf
mov
ret
fiaddl
xor
mov
pop
dec
cmp
push
mov
xor
pop
stos
test
or
mov
mov
xchg
notl
add
or
xchg
adcl
movsb
popa
fsubrp
jno
iret
lea
mov
sub
shrb
mov
push
lock
dec
xchg
push
sub
and
inc
jge
outsl
push
mov
ret
cmp
jae
inc
loopne
nop
dec
mov
or
mov
adc
mov
and
add
add
enter
fldenv
cmp
sbb
and
daa
pop
add
je
dec
xor
xor
jbe
lock
sub
fldl
cmc
inc
dec
pop
push
arpl
add
sbb
aam
xchg
mov
repnz
not
push
daa
mov
mov
inc
adc
loopne
jmp
inc
jb
shlb
sbb
inc
cltd
dec
dec
stc
scas
fdivl
and
sarb
mov
add
sbb
and
mov
cmp
dec
or
shrb
aam
arpl
sub
cmpsb
inc
jmp
fcom
pop
je
xchg
std
sub
push
push
popf
jbe
cmp
sti
hlt
add
in
gs
movsl
inc
xor
pop
pop
fsubs
fwait
addr16
dec
jns
add
or
mov
inc
in
loopne
sar
inc
cli
fists
adc
cmp
jbe
sub
in
inc
push
test
ret
push
push
add
lds
add
jg
rolb
or
adc
fistpll
gs
inc
dec
imul
and
repnz
aam
push
sahf
subb
xor
icebp
inc
ret
push
push
insb
add
add
push
lods
pop
push
mov
jae
or
inc
push
in
push
mov
push
lds
insl
add
mov
adc
sub
jg
dec
pop
inc
pop
inc
pop
cs
cmp
ljmp
pusha
mov
pop
cmpsl
xchg
inc
push
inc
ljmp
fldt
dec
xor
fiadds
xor
fidivl
call
inc
sbb
or
movsb
add
xor
or
subb
sti
add
and
fiaddl
loope
and
add
cmpl
or
sahf
push
push
or
mov
inc
sbb
pop
bsf
push
cmp
sub
out
push
subb
sbb
push
jmp
mov
mov
dec
js
stos
add
lods
iret
add
out
pop
pop
ja
outsb
insl
popa
dec
sub
lds
call
adc
mov
lea
in
cmpsb
mov
gs
aaa
xor
mov
aam
jno
jbe
pop
add
arpl
or
int3
insl
add
test
lods
mov
mov
xor
add
adc
movl
lea
aaa
jmp
cltd
and
mov
test
ret
fdivrs
jge
add
pop
data16
xor
pop
pop
lret
add
loop
push
iret
xchg
repnz
notb
or
test
adc
es
dec
loopne
into
and
jmp
orb
inc
or
enter
jge
fsubs
hlt
popf
mov
insl
sub
stos
mov
and
push
jo
push
ja
lock
fnsave
inc
popf
in
loopne
cwtl
jne
sti
insb
lahf
or
not
arpl
sub
or
in
inc
push
adc
cs
test
xor
call
mov
sub
sub
inc
pop
or
dec
add
cmp
test
pop
andb
inc
inc
mov
sub
je
sbb
mov
loopne
mov
ds
pop
adc
mov
inc
or
in
sar
pop
jo
xor
or
inc
sub
jmp
psubusb
jbe
inc
enter
outsl
rcl
xchg
test
sub
or
mov
and
je
pusha
inc
jnp
dec
adc
xchg
test
cmpsb
mov
mov
inc
pop
gs
lock
push
sbb
cmp
adc
lret
push
in
jmp
and
inc
inc
mov
or
cs
mov
rol
fisttpll
in
pop
mov
dec
dec
inc
inc
pusha
lret
sbb
aas
or
mov
and
aam
in
arpl
aam
sbb
xor
add
ss
jmp
sbb
jns
je
push
add
xor
inc
push
fs
jmp
in
cmp
dec
arpl
outsl
add
mov
dec
sbb
ljmp
pandn
pop
fistps
in
pop
fsubl
mov
fcom
cmp
orl
jg
icebp
repnz
scas
mov
in
xchg
sbb
loopne
inc
add
add
mov
xor
inc
js
xchg
pop
inc
push
pop
push
inc
inc
mov
add
push
push
insb
addl
sbb
sbb
add
popa
xchg
jge
jo
sub
and
or
lock
fdivs
in
sub
pop
adc
mov
adc
into
pop
mov
xor
mov
and
jno
xor
adc
fdiv
aaa
mov
push
repz
lcall
mov
adc
movsb
pop
or
mov
inc
xchg
sub
ret
popf
xchg
cmpsb
jge
add
cmp
xor
adc
fstps
orb
inc
mov
sahf
inc
flds
and
hlt
cmp
dec
repz
mov
mov
imul
dec
push
daa
add
sarb
imul
lods
pop
inc
fs
add
daa
cmpsl
lea
sub
outsb
subl
pop
popf
sub
int
sub
push
adc
or
or
loope
shll
jmp
stos
jle
add
lret
lea
add
lret
pop
add
or
jo
push
push
adc
jmp
fimull
or
aam
aam
add
add
push
jg
xchg
push
out
addb
addr16
xchg
add
sbb
test
push
lret
repnz
mov
rolb
jmp
adc
insb
rcrb
push
lea
jbe
adc
jg
clc
pop
ja
xchg
dec
mov
xchg
orb
imul
out
xchg
out
mov
push
mov
xor
inc
or
shlb
cltd
inc
outsb
mov
dec
js
cmp
mov
adcl
push
dec
inc
cmpsb
xor
adc
loope
pop
and
sub
push
push
or
cmpsb
imul
push
or
cld
shlb
push
adc
push
mov
add
mov
jmp
cmp
sahf
lret
shlb
push
or
or
cltd
cmpsb
or
mov
pop
dec
sbb
clc
fimuls
mov
sub
cmp
sub
pop
pop
push
sbb
or
dec
lcall
popl
push
push
push
pop
adc
dec
adc
add
repnz
movd
bswap
push
fadd
into
lea
adc
cmp
mov
call
jp
pop
cmpsl
or
ds
je
jne
jnp
adc
pop
dec
pushf
addr16
or
outsl
test
push
mov
outsl
push
inc
mov
add
push
cmc
iret
xor
movsl
cwtl
lods
and
fwait
les
andb
jnp
aam
mov
pusha
and
or
xchg
popf
aas
jo
and
dec
decb
mov
push
inc
out
add
cmp
mov
mov
adc
and
push
or
and
xor
push
add
scas
xor
or
xchg
xchg
js
jp
add
testl
and
jnp
lret
xchg
movsb
imul
xor
shlb
aam
int3
or
adc
jmp
leave
cmpl
rcr
call
pop
jnp
loopne
cmp
movsb
xor
pop
add
xor
adc
pop
sbb
leave
enter
pop
and
push
xchg
call
inc
cmp
les
xchg
imul
inc
dec
pop
jle
cmp
dec
scas
sub
inc
dec
mov
xchg
jo
add
mov
addr16
das
xor
dec
loopne
push
sahf
in
loopne
jmp
jnp
jnp
push
pop
add
push
js
push
pop
jne
repnz
xchg
cwtl
dec
in
addr16
mov
mov
enter
and
sbb
mov
popf
sbb
inc
das
mov
cmp
pop
imul
arpl
push
pop
test
hlt
sbb
and
imul
fimull
mov
push
mov
sbb
jecxz
rolb
outsl
lea
aas
inc
lock
nop
mov
sub
insb
in
push
shlb
mov
sbbl
or
jae
js
xor
decb
and
or
fistl
pop
ja
and
cmp
or
jbe
add
xor
adc
movsl
aam
fcmovnbe
enter
pop
icebp
add
pusha
cmp
nop
ds
mov
sub
dec
subl
call
push
cmp
fdivrl
mov
push
push
loop
loopne
scas
dec
pop
push
add
dec
ljmp
push
pop
sub
or
inc
push
dec
jp
push
inc
push
sbb
push
rol
sub
jmp
bound
or
out
jmp
xchg
dec
cwtl
mov
add
mov
fcomps
popf
pusha
fimull
dec
or
push
mov
sahf
ret
inc
push
jmp
cmp
sbb
xchg
lahf
ret
popa
ja
push
movswl
fimull
or
rorb
dec
push
add
or
or
mov
test
add
or
mov
add
shr
mov
sbb
pop
ja
cwtl
dec
xor
pop
hlt
ret
rolb
pop
dec
shrl
into
jne
das
aad
lds
test
ds
xchg
clc
clc
stos
aam
add
ja
fistl
and
push
jl
es
mov
jo
pop
call
xchg
mov
mull
inc
js
outsb
aas
and
sub
mov
cld
adc
or
xchg
sbb
xorb
push
inc
pop
mov
imul
dec
xchg
mov
hlt
popf
adc
xchg
add
js
sbbl
lock
adc
push
je
sbb
inc
lock
cwtl
push
addr16
movsb
popa
push
adc
mov
cmpsb
pop
and
ss
inc
jp
sub
das
hlt
inc
popa
enter
inc
insl
dec
stos
ja
lods
mov
mov
dec
adc
push
ja
fimull
je
sub
inc
inc
dec
shr
add
mov
or
js
es
add
add
sub
dec
pop
and
imul
add
and
push
pop
lods
shll
addb
into
stc
out
jp
adc
or
ja
ret
das
xor
cmp
xchg
push
jbe
imul
pop
ret
add
faddl
dec
data16
cmp
jge
and
ret
and
insl
jl
push
xor
pop
fsubrs
shrl
jo
mov
dec
and
mov
dec
jmp
je
jecxz
or
iret
pop
push
dec
rcr
sub
push
pop
add
fs
push
or
and
mov
cmp
js
inc
addr16
inc
pop
push
cltd
inc
push
mov
fildll
cmp
inc
jb
outsb
fmull
or
push
xchg
and
mov
sub
xor
jnp
lea
xor
jne
mov
fisubrl
fbld
cmp
jecxz
push
inc
mov
mov
aad
test
mov
pushf
or
push
inc
outsb
addl
and
shrl
xlat
pop
and
mov
push
jnp
mov
mov
inc
lcall
inc
xchg
mov
iret
rcrb
out
fimuls
mov
cltd
pop
and
add
dec
mov
jmp
inc
enter
mov
mov
stos
js
mov
mov
cmp
arpl
or
addr16
push
cmpsb
stos
sbb
out
sbb
lahf
mov
lahf
aaa
ds
and
pop
sub
rolb
cmp
sbb
push
dec
adc
mov
pop
add
dec
scas
lea
mov
adc
pop
push
movsb
pop
enter
rorb
add
pop
scas
xchg
mov
dec
aas
dec
loopne
and
xchg
dec
imul
add
push
dec
add
movsb
xchg
push
inc
pop
je
cmpl
std
sub
push
dec
or
je
jle
cli
add
inc
dec
jmp
sbb
fimull
mov
mov
adc
and
cmpsl
and
cmp
lahf
mov
nop
push
fwait
add
sbb
xchg
pusha
lock
test
sbb
push
adc
push
popa
dec
inc
and
pop
lcall
adc
push
daa
mov
push
pop
sbb
mov
or
hlt
pop
and
arpl
fucom
mov
sbb
nop
jg
jmp
add
mov
cmp
mov
notl
loope
cmp
cmpsb
pop
cld
inc
lea
cmpb
jb
mov
inc
mov
add
sbb
add
dec
dec
adc
jg
jle
cmpb
ja
and
adc
inc
jnp
rorb
xchg
xorl
xchg
loopne
and
pop
and
mov
cmp
or
popa
jmp
imul
add
or
sub
pop
sub
pop
push
je
lahf
and
rorl
in
clc
mov
js
push
dec
and
inc
mov
pop
fstp
imul
fcmovnu
insl
sub
push
jns
and
mov
jecxz
xor
adc
inc
rorb
mov
test
add
add
sbb
sbb
pusha
xchg
push
sbb
loope
pusha
cmp
popf
xor
push
jmp
adc
cmp
and
jae
roll
cmp
add
inc
xor
mov
in
in
sbb
dec
dec
xchg
lods
jo
cmpsl
mov
push
mov
fdiv
add
mov
jns
fidivrs
insb
daa
sub
jno
sbb
movsb
aam
add
mov
push
decl
test
cwtl
movsb
mov
int
test
add
cld
pushf
mov
mov
fdivrl
xchg
jg
jo
aaa
outsb
movl
movsl
sahf
jne
stc
jmp
sar
xlat
add
xor
fadds
pop
inc
shrb
push
bound
movb
jmp
and
addr16
pop
mov
aam
sub
push
test
ja
adc
icebp
jge
mov
scas
imul
iret
push
out
fcmovu
mov
inc
insb
ficompl
mov
xchg
cs
add
adc
mov
jno
orl
shlb
cmp
sub
pop
push
inc
adcb
sbb
flds
test
mov
movb
push
popa
test
fsubp
nop
fwait
outsl
clc
mov
lret
xor
add
bound
lret
fistl
inc
lock
call
scas
es
add
fiadds
xor
pop
in
jg
and
ds
adc
in
jo
out
in
sbb
jmp
mov
cmp
inc
popa
jne
xor
ja
imul
or
add
adc
dec
push
pop
sub
xor
aad
dec
repnz
mov
mov
mov
inc
adcb
and
nop
arpl
clc
outsl
aam
inc
in
adc
fisubs
push
mov
in
sub
inc
inc
or
sub
sub
mov
and
jne
pop
bound
cltd
in
clc
push
lahf
ja
aam
mov
sbb
pop
hlt
xchg
or
aam
icebp
mov
adc
adc
adc
addr16
es
in
imul
sahf
xchg
in
loope
jecxz
pushf
insb
xchg
loope
push
sub
fsubl
add
dec
or
push
lds
push
sub
mov
xchg
inc
les
adc
push
mov
mov
rolb
mov
cwtl
mov
shufps
pop
mov
push
pop
out
dec
adc
in
add
dec
movsl
ljmp
inc
sub
and
movzbl
mov
ljmp
dec
test
jne
mov
push
loopne
dec
sbb
ficomps
add
ret
es
add
cltd
insl
inc
mov
packssdw
sub
mov
movb
mov
inc
ret
aam
mov
xor
clc
push
loopne
lock
bound
fmull
shl
mov
dec
lods
lret
lret
popa
faddp
dec
test
daa
ror
sbb
or
mul
sub
clc
dec
enter
ja
add
xor
lret
notb
les
shl
fidivl
rolb
movsl
or
movsl
sarb
push
imul
jecxz
sbb
add
enter
pop
pop
or
test
pop
mov
add
dec
mov
dec
lods
inc
mov
cmp
xor
push
xchg
shlb
hlt
xchg
dec
fisttps
clc
push
iret
push
stc
pop
mov
mulb
out
dec
lret
shrb
testl
add
or
jmp
push
iret
xor
add
mov
sub
fadds
or
sub
imul
dec
mov
or
push
sub
or
and
fdivrs
cmp
adc
mov
adcb
xor
je,pn
mov
adc
popa
xrelease
pop
pop
imul
testl
pop
push
lcall
or
adc
push
sbb
rcrb
xchg
push
or
pop
fnstcw
aam
or
jecxz
pushf
cmp
into
loop
cld
fisttpll
les
cld
jmp
mov
fldenv
lret
and
lret
xor
rol
shlb
cs
inc
inc
pop
rcll
xor
xchg
mov
mov
stos
add
pop
add
aaa
sub
mov
lods
lods
jae
sbb
subl
sbb
icebp
sbb
xchg
push
in
dec
dec
out
imul
push
and
aas
jecxz
and
outsl
into
inc
add
cmpsl
sar
push
push
push
cmp
fldl
add
add
add
push
rol
mov
cmp
sbb
push
je
add
in
jp
mov
or
sub
cmp
add
in
bound
or
insl
pop
pop
mov
mov
or
cwtl
add
mov
xorl
ljmp
loopne
or
scas
mov
xchg
or
pop
inc
mov
xor
inc
adc
push
add
or
iret
pop
push
loopne
mov
es
ret
push
das
cmp
or
lcall
rcll
mov
push
jno
nop
movsl
addr16
clc
mov
movb
mov
jp
push
fdivrl
xlat
mov
xchg
cmp
jge
inc
dec
repz
les
add
xchg
push
inc
sahf
mov
sbb
filds
pop
sbb
and
push
adc
jmp
pop
cmp
mov
cmpsl
insl
fdivp
push
fnsave
sub
hlt
clc
cmp
sub
dec
cmp
in
or
cmp
mov
dec
mov
cmp
jg
pop
sub
jnp
xchg
or
call
xchg
dec
pop
aad
cmp
fnstenv
xchg
in
mov
imul
xor
inc
sbb
rcr
cmp
adc
fsub
push
in
or
out
add
sbb
mov
sbb
pop
in
test
fldt
repz
or
xor
lock
setb
mov
mov
out
add
jnp
lds
cld
shrl
sbb
inc
pop
xorl
xchg
and
jmp
mov
sbb
sub
sbb
rorl
cmp
loop
pop
cmpsl
cmp
sub
dec
rorb
mov
adc
icebp
mov
adc
sbb
mov
pop
fadds
movsb
cmp
roll
xchg
mov
shll
dec
jmp
ja
enterw
xor
or
dec
push
push
pop
cmp
out
test
dec
cmp
mov
jmp
add
xchg
mov
testb
les
int3
js
lea
ret
pop
loop
adc
push
mov
push
and
fimuls
mov
add
xchg
adc
pop
jmp
jno
jg
dec
sub
push
hlt
pop
cmp
das
sbb
and
or
adc
xor
pop
ja
fs
add
cmp
adc
les
inc
push
xlat
push
xchg
shrb
sbb
dec
adc
add
movsb
pop
xchg
dec
mov
add
imul
add
addl
daa
push
movsl
dec
push
je
aaa
xor
dec
xchg
in
sbb
add
adc
hlt
jmp
push
mov
sub
or
pop
inc
xor
cmpsl
adc
ret
sbb
test
rorl
sbb
and
push
inc
pop
jg
push
decl
repnz
jb
mov
ret
mov
ret
sub
test
repz
jbe
cmc
jbe
lods
jg
ret
cmp
jae
mov
subb
fadd
add
pop
addr16
pop
pop
lods
mov
xlat
shl
sbb
les
jmp
outsb
dec
or
jbe
aas
stos
jb
repz
or
mov
repz
mov
mov
fstp
insl
or
dec
sbb
or
sbb
gs
les
add
inc
es
add
jbe
cwtl
fstp
cmp
jbe
jg
sub
mov
adc
in
divb
cwtl
sub
push
cld
jmp
add
les
popa
lcall
pop
mov
shlb
jmp
sub
addl
add
inc
pop
fldl
or
mov
adc
gs
mov
and
addb
jmp
mov
add
fdivs
jmp
fs
inc
sbb
add
rcll
cld
lods
cmp
je
sub
lret
sti
ret
sti
shl
mov
stos
or
shl
in
ret
adc
xchg
mov
ss
adc
adc
add
jmp
push
mov
inc
adc
into
cmp
dec
out
cmc
add
and
aam
imul
popa
sbb
add
sub
fisubrs
xchg
test
xchg
jbe
add
xor
ss
add
dec
add
bound
pop
cmpsl
or
xor
movb
add
mov
inc
add
arpl
ret
or
mov
mov
pop
daa
add
pop
dec
filds
insl
pop
inc
movsb
push
xor
arpl
dec
mov
and
jb
cmp
and
outsl
pop
sbb
testl
in
in
xchg
or
lea
lret
shll
mov
mov
and
jne
mov
pop
cli
movsb
add
mov
ja
jle
mov
adc
mov
mov
mov
jmp
imul
or
push
fwait
add
pop
or
shl
jl
pusha
rorb
mov
and
xlat
sub
mov
mov
sub
pop
push
mov
push
mov
dec
or
xchg
xchg
inc
or
jbe
pusha
popa
inc
mov
shrl
push
es
popa
cld
sbb
xchg
adc
push
sub
in
or
cmp
pop
pop
stos
pop
fiadds
push
cmc
test
or
xchg
mov
and
push
stos
mov
stc
add
test
add
lods
lods
and
or
lcall
push
pop
outsb
das
inc
mov
jmp
in
push
mov
and
fmull
sub
loopne
mov
cmp
shlb
shr
cmp
loop
loop
pop
imul
xchg
test
mov
sub
rorl
ja
inc
adc
out
outsl
ret
enter
sub
mov
push
or
adc
jbe
mov
mov
inc
cmp
jne
fucomip
out
mov
in
inc
sbb
fimull
loopne
in
sbb
cmp
dec
repnz
xchg
out
daa
ja
mov
and
or
in
xchg
sub
mov
mov
inc
sub
pop
inc
je
and
pop
mov
std
ds
and
ret
add
add
stos
xor
shll
mov
lcall
rcrl
cmp
or
mov
pop
pop
add
push
imul
stos
out
mov
cmp
inc
pop
cmp
jae
add
js
mov
jne
push
fisttps
fs
les
dec
lods
mov
mov
mov
mov
push
mov
add
pop
and
pop
cmp
jbe
mov
cwtl
data16
jmp
push
inc
stos
push
mov
cwtl
pop
sub
push
push
movsb
imull
aas
jae
or
push
push
cli
push
inc
cmpsb
ud2
jge
pushf
push
mov
or
loope
andl
and
mov
jae
push
pop
rcrb
dec
jg
sub
orl
xchg
xor
xchg
xchg
mov
or
adc
jle
adc
add
out
loope
in
xor
dec
sarb
cli
jl
sti
cmp
cmpsl
pop
jmp
mov
cld
mov
imul
or
fiadds
lea
lock
xchg
notl
scas
inc
into
add
jge
ds
outsb
imul
sbb
dec
adc
mov
sub
movsb
cmc
add
cmp
pop
sti
inc
dec
jmp
ret
or
and
cmp
in
mov
mov
jge
inc
mov
orl
ficoml
ss
sub
psadbw
xor
mov
or
xchg
adc
jns
test
adc
add
adc
rcr
sti
fisubl
ja
or
insb
and
rolb
push
pop
dec
pop
mov
fdivs
pop
mov
mov
cmp
push
sahf
sbb
pop
inc
cmp
cmp
ss
mov
dec
scas
cs
fistl
pop
or
data16
mov
jae
cmp
mov
sti
add
xlat
jg
mov
pusha
xchg
leave
sub
ret
mov
push
outsb
mov
jb
or
sbb
pop
dec
cmpsl
mov
andb
pusha
jns
xorb
aaa
jne
push
pop
xorl
je
push
adc
inc
aas
dec
push
jnp
add
xchg
insl
dec
cmc
hlt
pop
push
cmp
or
addr16
lret
dec
gs
push
cmp
aad
arpl
jmp
imul
lds
loopne
sbb
insb
push
es
push
insb
inc
jge
mov
push
jmp
jecxz
ja
out
jg
gs
or
add
test
push
sub
and
shr
lock
and
or
jle
push
sbb
sbb
pop
or
or
xor
and
test
sbb
rorl
es
cmpsl
and
stos
dec
or
inc
cmc
lret
sbb
lret
or
lcall
push
add
ja
icebp
test
lahf
adc
pop
jp
pop
inc
or
mov
aad
adc
dec
push
mov
sbb
orl
xchg
cmpsb
and
push
cmpb
push
push
adc
add
lock
mov
cltd
sub
jecxz
testl
in
cltd
add
test
popf
popa
mov
cwtl
fs
loope
pop
dec
in
enter
es
out
orl
inc
test
pop
cmp
mov
jo
add
ja
sbbb
daa
cmp
roll
inc
lods
inc
fcoms
mov
push
das
add
aad
pop
movzbl
or
sbb
loop
testb
adc
dec
mov
push
aam
mov
cmp
mov
mov
jae
iret
aas
jb
lret
daa
push
mov
daa
inc
sets
lea
cmp
adc
push
add
cmp
movsb
cmp
sub
movzwl
sbb
mov
rcrl
jbe
or
hlt
jmp
jge
push
or
inc
popf
imul
push
std
mov
add
imul
ret
js
add
or
movl
andl
negl
xchg
sti
cs
or
push
dec
fnstenv
fldl
mov
or
pop
push
push
mov
and
sti
xor
ja
push
jle
and
pop
sti
mov
push
div
pop
or
mov
data16
inc
enter
fwait
inc
cmp
jecxz
and
orb
lea
jno
fisttpl
and
lods
and
inc
pop
pop
fcomp
xor
mov
aaa
ja
mov
in
sub
jmp
jle
cmpb
insb
jl
jne
test
xchg
adcl
jle
stc
inc
fisubs
ljmp
cmp
sbb
add
push
mov
mov
push
cltd
ret
ret
inc
push
jge
mov
cld
adcl
repz
sub
mov
or
or
fcomi
inc
xor
push
cmpl
adc
test
add
inc
jbe
mov
popf
stos
es
lock
je
mov
movsl
mov
push
add
ret
mov
loope
inc
and
or
push
shlb
cmp
inc
xchg
cmp
fldl
push
stos
insl
insb
ret
jmp
dec
inc
add
iret
icebp
pop
xchg
inc
sbb
js
insl
pop
pop
sub
and
cltd
in
or
and
xor
mov
push
mov
test
sbb
cltd
cmp
xor
add
sub
sbb
add
aaa
mov
xchg
push
jp
orb
push
sbb
fistpll
rclb
jmp
aas
cs
loop
sub
sub
or
xor
fstpt
neg
inc
fucomi
jg
pop
xchg
mov
or
je
mov
out
or
shlb
add
push
sub
fdivs
sbb
adc
aas
dec
mov
enter
inc
push
add
out
mov
lahf
or
inc
ret
push
add
xchg
lods
add
sahf
jns
dec
add
ret
jp
jae
lgdtl
mov
sub
sub
inc
cmp
jne
fldz
jmp
mov
sbb
rol
test
sbb
sub
sbb
movsl
pop
jns
and
orl
sarb
clc
xor
mov
ds
arpl
ret
not
and
add
mov
jmp
call
xor
xchg
push
pop
outsb
not
hlt
daa
cmp
cmp
div
sbb
and
and
mov
add
jl
add
xchg
xchg
addb
inc
dec
dec
ja
inc
aam
or
arpl
xchg
pop
cmpsl
xor
imul
xor
mov
mov
mov
or
mov
rolb
je
mov
dec
xchg
aaa
sbb
out
push
jp
jge
les
jne
insb
icebp
adc
popf
out
jl
lock
adc
sbb
sub
test
add
shll
jb
add
jno
inc
loopne
pop
test
clc
sbb
cs
mov
xorb
nop
inc
mov
cmpsb
pusha
and
test
mov
pop
hlt
jbe
push
xor
add
jbe
imul
adc
xchg
push
fcmove
or
adc
jl
mov
lcall
dec
cmp
cmpsb
test
xchg
cwtl
lcall
fwait
xor
mov
ret
push
sbb
call
rolb
adc
inc
mov
aaa
and
ret
cwtl
adc
push
gs
pushf
xor
mov
imul
fabs
add
cld
mov
sbb
addr16
addl
jns,pn
xor
sub
jns,pn
jns
fcomps
pusha
jns,pn
loopne
sbb
xchg
xor
cmc
inc
outsl
and
jo
push
xchg
mov
adc
es
pop
inc
rol
mov
fs
data16
mov
push
call
jbe
ja
mov
jae,pn
stc
adc
into
xchg
fisubrs
pop
cs
jne
jo
loopne
mov
pushf
push
imul
mov
test
nop
sarl
pop
stc
xchg
mov
fs
lock
dec
ficomps
sbb
push
and
ja
adc
push
fs
add
dec
sbb
xchg
mov
mov
sarl
outsb
adc
insb
dec
aad
pusha
mov
sbb
les
mov
or
test
cmpsl
inc
data16
sbb
insb
or
mov
dec
fstps
lahf
adc
mov
int
cmpsl
add
sub
icebp
push
ficompl
ret
or
dec
inc
and
out
test
in
add
popf
dec
fldt
xor
das
and
push
sbb
lods
and
hlt
or
call
orb
xor
dec
js
jle
cmp
lret
popa
push
lea
xchg
and
pop
pop
cli
adc
outsl
push
insl
and
inc
add
or
fcoms
or
cmp
or
inc
cwtl
in
push
add
pop
in
repnz
movsl
mov
js
push
inc
push
xchg
rorb
sub
or
fisttpll
adc
push
xchg
cs
addb
inc
mov
sbb
loopne
testl
pop
sbb
dec
push
push
add
or
mov
or
dec
inc
lock
push
xor
hlt
gs
adcb
jl
or
jg
dec
add
adc
adc
data16
jne
cwtl
mov
outsl
shrb
jle
insb
adc
mov
inc
add
movsl
fwait
dec
sbb
out
or
data16
test
loope
sub
sbb
shrl
movl
in
aam
jmp
in
mov
dec
adc
call
push
mov
rclb
jmp
push
push
mov
cmpsb
sub
mov
subb
adc
and
out
fst
or
out
repnz
adc
sbb
adc
jo
adc
push
lcall
out
xchg
push
mov
cmp
pop
pop
sub
imul
adc
xor
sbb
and
popa
insb
sarl
dec
outsb
loop
gs
loopne
sub
fistpll
and
add
je
jmp
sti
inc
in
loopne
pop
call
in
or
sub
xchg
fdiv
or
sbb
test
das
mov
das
cmp
inc
movl
fiadds
add
insb
pop
pop
xchg
or
sbbb
in
push
or
push
rclb
add
sbbl
fdivs
pop
xor
or
push
push
loope
pop
and
add
jnp
rcrl
arpl
cmp
dec
in
jmp
mov
sarl
sbb
and
and
and
inc
mov
pusha
cli
add
sub
push
add
sub
cmp
aas
out
inc
mov
lea
inc
ljmp
add
fildl
mov
inc
push
or
xchg
cmp
xchg
ret
cltd
pop
subl
popa
push
insl
or
hlt
add
mov
jp
sub
add
adcb
hlt
stos
inc
xor
lock
jmp
push
jge
leave
aam
sbb
add
jmp
push
sub
mov
push
mov
jno
or
mov
out
mov
add
mov
dec
in
xlat
and
test
std
aas
lret
sub
adc
add
ja
inc
ljmp
dec
dec
das
jge
pop
sti
and
aas
cs
fisttps
and
fistl
xchg
std
mov
imul
mov
lock
lock
pusha
add
mov
cld
dec
jne
sub
stc
testb
add
push
or
filds
scas
or
push
cmp
push
push
enter
sbb
cmpsb
icebp
out
lock
jp
dec
repnz
push
std
mov
add
in
bound
mov
add
sbb
add
xor
push
pop
add
js
test
add
in
adc
inc
xchg
pop
ds
out
in
psllq
mov
push
outsl
fldcw
pop
fisttpll
push
fildll
mov
iret
gs
mov
cmp
daa
daa
mov
lods
add
push
dec
inc
cltd
lret
aam
xor
pop
and
dec
adc
fcmovnu
jbe
fistl
loop
in
mov
pop
sbb
aas
and
sar
adc
mov
cmp
push
testb
movsl
jns
imul
fwait
adc
loopne
call
sbb
jg
xchg
lock
mov
outsl
dec
movb
xchg
andb
push
mov
daa
xchg
rol
cmpb
mov
ret
add
cmp
xchg
push
lock
dec
lock
mov
push
mov
iret
movl
mov
xchg
pop
pop
out
jo
loopne
mov
aam
rcrl
fs
mov
aaa
jb
add
test
outsl
and
outsl
sbbb
int3
inc
insb
outsl
pop
mov
add
inc
imul
cmp
add
ds
add
xchg
jae
dec
rcr
outsl
and
inc
sahf
dec
out
das
pop
shlb
das
iret
push
ss
xor
pop
int
sahf
mov
pop
inc
insl
je
or
lsl
in
push
xor
sub
sub
and
or
xor
ret
das
lods
pop
jns
add
and
adc
dec
faddl
nop
jbe
cmp
mov
mov
test
jb
ss
inc
push
add
mov
gs
movsl
add
adc
xorb
in
daa
inc
adc
sbb
mov
add
shrl
ds
jne
xor
lret
ds
dec
icebp
inc
push
push
adc
fs
pop
mov
sets
and
and
and
pushf
pop
call
sub
dec
push
cmp
lcall
outsl
mov
jbe
mov
dec
xchg
push
sub
in
in
pop
or
or
mov
inc
mov
dec
push
mov
pop
cmpsl
or
push
cltd
jbe
cmp
leave
and
push
add
mov
adc
repnz
add
and
je
pop
inc
inc
mov
les
sub
lods
adc
push
lahf
inc
or
xchg
push
sub
adc
gs
adc
adc
and
pop
orb
sub
roll
adc
mov
and
xchg
outsb
xorb
dec
rolb
leave
cmp
adc
sub
sahf
or
lcall
and
sub
stos
dec
sub
mov
lds
test
int3
lcall
cmp
add
fwait
nop
dec
push
enter
sbb
nop
sub
cmp
insl
sub
nop
add
nop
add
nop
sbb
and
and
mov
push
and
add
rcll
addr16
add
dec
sti
rolb
dec
add
sbb
pop
sub
sub
pop
mov
cmp
jb
sysenter
pushf
inc
mov
pop
jb
pushf
and
mov
adc
rclb
mov
clc
cmp
lock
xchg
pushf
add
nop
and
outsl
xor
push
jb
lock
inc
jns,pn
popf
xor
popf
add
add
enter
push
or
sbb
mov
orl
pop
or
enter
cmp
aaa
int
andl
sbb
dec
push
jle
inc
push
pop
dec
mov
or
dec
or
push
xchg
dec
insl
push
add
push
pop
jae
mov
xor
icebp
xor
cmp
sbb
adc
dec
cwtl
mov
inc
repnz
sahf
cmovl
xor
rorb
push
enter
lcall
lcall
mov
mov
lcall
pop
cmpsb
imul
imul
stc
or
adc
in
adc
push
pop
ja
adc
inc
push
ret
adc
insb
xchg
cmp
lahf
dec
out
and
daa
push
js
and
push
int3
insb
data16
push
je
mov
push
jns
in
mov
pop
mov
divb
lret
lock
hlt
pop
aaa
jl
enter
mov
pusha
add
inc
mov
lret
data16
clc
mov
movsb
mov
ss
xchg
cmp
mov
adc
adc
or
pop
push
lods
inc
jl
in
mov
mov
int
pop
cmp
mov
mov
roll
mov
mov
pop
ret
mov
neg
imul
pusha
dec
xor
cwtl
outsl
repz
cmpsb
push
mov
imul
push
test
shll
into
push
cmp
add
nop
mov
out
push
rcrb
mov
xor
int3
push
jl
and
paddq
fs
fadd
push
push
call
insl
dec
cmpsb
adc
mov
mov
mov
addr16
xor
push
fstl
mov
ss
fisubs
sahf
push
addb
xchg
int
sub
cld
pushf
mov
dec
hlt
les
inc
push
mov
xor
or
xor
push
hlt
in
mov
sub
pop
rclb
mov
rolb
imul
dec
inc
add
mov
adc
call
push
shll
or
add
push
out
adc
xor
imul
adc
push
or
add
mov
dec
pop
dec
xchg
mov
jle
lea
repnz
enter
in
cmp
mov
xor
mov
and
dec
sbb
add
shlb
nop
jbe
xor
gs
out
gs
xor
mov
test
shll
ljmp
test
and
insb
add
add
adc
sub
xchg
out
mov
fs
adc
in
sub
int3
enter
dec
xlat
iret
enter
fcomp
fxch
loopne
jecxz
in
pop
sub
stos
or
enter
scas
and
and
popa
je
xor
add
xchg
add
inc
or
je
xor
fisubs
push
adc
sbb
and
iret
int3
fmuls
aaa
add
dec
adc
idivb
xor
xor
icebp
fildll
scas
add
cmpsb
imul
jo
xlat
push
orb
cwtl
mov
lcall
loopne
insb
lcall
or
xor
adc
and
xor
xor
shll
dec
push
pop
pusha
shll
orb
cwtl
mov
sbb
leave
push
add
fsubrs
int
pop
jnp
pop
adc
and
push
daa
pop
cmp
test
or
in
cwtl
jg
lock
dec
sahf
sbb
xor
or
and
push
pop
and
pop
nop
add
add
add
push
inc
xchg
add
ja
xchg
pop
add
adc
call
push
arpl
shrl
mov
jg
movsl
lods
mov
insl
stos
xor
je
fisttps
lret
fiaddl
push
cmpsl
or
insl
add
aas
inc
and
dec
shll
fs
dec
shll
cwtl
lods
mov
rcr
in
cld
or
fsubrl
cmpsb
sub
push
lmsw
add
mov
pop
adc
push
aam
inc
std
push
push
inc
xor
or
pop
jmp
loope
adc
push
inc
fildl
dec
push
and
or
add
imul
xor
pop
push
movsb
adc
scas
push
enter
push
add
aas
pop
cld
jo
pusha
cmp
or
popl
out
pop
add
aaa
push
sbb
push
adc
xchg
mov
xlat
push
push
push
and
je
pop
popf
mov
cwtl
jle
test
lret
je
ficoms
cs
paddq
or
dec
imul
add
es
cmpsb
imul
imul
fwait
imul
mov
sbb
or
cmpsb
push
inc
sbb
cmpsb
imul
cmpsb
imul
shll
mov
sbb
popf
pusha
sub
fistps
inc
push
and
adc
fs
jl
nop
jge
lcall
add
sub
add
push
lcall
imul
xor
cmpsb
mov
mov
shll
je
xor
shll
fisubs
sar
fdivr
add
sub
es
add
mov
cmp
or
or
push
punpckldq
ret
add
add
jno
jecxz
in
or
out
cmp
aad
sbb
xchg
test
xchg
mov
adc
jle
out
dec
shll
fsubrs
dec
shr
hlt
add
sbb
jle
divl
pop
or
ret
imul
or
adc
mov
xor
mov
jmp
pushl
dec
xchg
mov
out
fcoml
das
sti
setbe
xchg
inc
push
sbb
push
add
push
sbb
adc
adc
xor
cmp
or
and
and
popa
pop
shrl
rcll
nop
push
add
jbe
xor
push
xor
js
mov
cmpsb
nop
test
pop
lods
or
and
jo
mov
pop
hlt
ret
add
xchg
rolb
cmpsb
push
inc
xchg
lcall
mov
fdivl
cmpsb
imul
sub
xor
sarl
pusha
jo
dec
shll
shr
jnp
xor
add
pop
add
or
xor
sbb
mov
cmpsb
imul
cmpsb
imul
cmpsb
imul
hlt
aam
in
dec
mov
lcall
out
xor
shll
out
dec
in
pop
shll
jl
push
add
cmp
aaa
or
lds
add
inc
sarb
test
xchg
inc
jo
popf
mov
out
and
mov
or
or
add
scas
aas
dec
pop
sbb
adc
push
mov
setp
andl
inc
inc
or
xchg
mov
or
outsl
inc
add
sub
pusha
mov
jbe
dec
jno
ficoms
sbb
add
pop
xor
out
les
out
push
adc
mov
pop
mov
xchg
add
test
popw
pop
add
outsl
xchg
stc
mov
mov
sti
cld
std
imul
outsb
fwait
cmpsb
addb
add
and
pushf
or
rolb
cs
mov
shlb
xchg
hlt
push
or
mov
les
add
ror
inc
add
or
pop
enter
cmp
bound
sahf
pop
mull
xor
or
je
test
data16
aam
hlt
dec
shll
add
adc
xor
push
xor
shll
js
pushf
lods
fnstenv
lock
cmpsb
imul
imul
cmpsb
imul
push
dec
movsl
push
sub
bsr
aam
mov
clc
pop
inc
mov
push
dec
pop
mov
sahf
cmp
sti
rcl
inc
scas
test
rclb
sub
fstpl
sub
push
or
or
mulb
adc
dec
sub
loopne
jae
adc
dec
add
mov
xchg
in
xchg
call
dec
and
jo
imul
xchg
push
sbb
mov
scas
cmpsb
xor
shl
push
lock
fcomps
mov
push
pop
inc
xor
or
imulb
jl
mov
cs
adc
inc
adc
push
mov
dec
fsubs
sbb
pop
cmp
mov
lcall
push
mov
pop
imul
xchg
pusha
pop
xchg
imul
testb
es
sbb
cs
sub
test
pusha
jle
or
pop
imul
orb
fmul
mov
xlat
mov
mov
fidivrs
push
push
push
adc
add
jl
mov
cltd
insb
es
mov
jle
push
push
rcl
pop
jae
outsb
outsb
mov
fisubl
outsb
mov
and
xlat
xchg
imul
push
sbb
test
inc
mov
push
ds
mov
daa
dec
inc
jmp
sahf
xor
cmpsb
and
orb
outsb
sbb
je
or
lods
jbe
fsubp
xor
imul
test
mov
sub
jne
sub
pop
and
add
dec
shrb
cmp
adc
cwtl
push
mov
pop
sub
outsb
adc
sbb
cmp
fimuls
mov
mov
imul
pusha
push
jle
into
mov
stos
data16
call
insb
cmp
mov
clc
xlat
push
inc
imul
push
dec
movsb
es
xchg
mov
stos
mov
push
cmpsb
dec
aaa
push
mov
addr16
jno
sbb
add
scas
pusha
pop
enter
pop
inc
shll
iret
pusha
push
push
add
testb
lods
pop
rorl
movsb
jo
outsb
dec
dec
push
push
out
pop
push
cmpsl
in
ss
xchg
fsubs
push
or
pop
or
fsubs
data16
dec
dec
cmp
stos
jbe
pop
inc
inc
jle
push
sbb
or
xor
shl
sbb
lock
arpl
push
inc
push
jne
test
add
adc
or
add
fsubrs
pop
push
add
adc
adc
and
fs
push
adc
and
add
add
pop
in
enter
pop
push
inc
adc
movsl
fisubs
xor
xor
inc
push
dec
pop
sbb
xchg
aas
push
add
pop
lods
dec
sahf
mov
sbb
pop
dec
push
dec
pop
push
mov
imul
pop
dec
aaa
push
pop
ret
fstp
popf
pop
lcall
xchg
push
loop
push
inc
mov
sahf
mov
push
mov
push
xchg
dec
xor
or
in
leave
shlb
xchg
inc
sbb
cs
and
imul
dec
cmp
testb
data16
mov
inc
sbb
dec
push
add
push
lahf
xchg
outsl
jl
inc
ja
push
sbb
jae
adc
push
mov
mov
int
mov
nop
push
push
jb
addr16
mov
insl
fwait
and
push
and
outsb
and
and
clc
pop
adc
xor
add
subb
dec
add
pop
sub
mov
xchg
int
mov
pop
and
or
fcomps
add
or
insl
outsl
adc
aaa
add
jno
out
mov
push
adc
mov
sbb
fcoml
mov
lock
inc
inc
xchg
mov
scas
pop
dec
and
inc
xchg
fwait
in
push
inc
and
pop
test
test
shrb
and
xor
dec
fldt
add
and
jbe
gs
push
jae
arpl
push
punpckhwd
mov
shrb
fs
xchg
pusha
xor
pusha
pusha
jge
add
fcoms
and
add
pop
mov
orl
push
push
roll
xchg
ds
add
mov
ret
aam
imul
mov
mov
filds
xchg
scas
pop
jo
jg
jecxz
imul
jbe
decl
jae
jb
arpl
outsb
gs
inc
test
aad
jb
jae
arpl
jns
imul
xor
punpckhbw
sar
dec
add
mov
and
dec
clc
add
add
add
imul
or
adc
sbbb
call
ss
cmp
mov
or
testl
add
cmpl
inc
mov
add
in
cmc
aas
sbb
movzwl
mov
mov
movl
cmpb
dec
cwtl
popf
sbb
add
fistps
push
pushl
pusha
cld
mov
imul
ret
pusha
call
sti
add
popf
add
cmp
inc
mov
jmp
fisubs
enter
insl
pop
jns
and
push
cmpl
inc
mov
pop
mov
xor
adc
aas
pusha
push
xchg
rcrl
cltd
popa
iret
jbe
dec
xchg
jl
insl
shrl
cmp
adc
xchg
es
mov
std
iret
mov
fisubrs
or
push
jmp
jmp
fs
js
addb
nop
xchg
push
je
cwtl
pushf
xor
and
and
inc
inc
push
and
and
sbb
dec
adc
add
xor
and
mov
aaa
sbb
dec
sub
mov
and
je
sbb
aad
and
add
inc
and
and
push
jmp
cmc
pop
sbb
pop
dec
and
and
jbe
xor
int
arpl
cmp
imul
je
popa
sbb
and
nop
mov
ret
add
and
outsb
sbb
dec
and
push
add
mov
addr16
arpl
and
push
sbb
subb
sbbb
inc
and
mov
pop
dec
push
push
test
rolb
lcall
push
js
xchg
add
dec
mov
lcall
dec
jle
xor
jo
push
stos
pop
aad
push
cli
lret
dec
out
sti
mov
pop
mov
jl
and
movaps
lods
das
daa
popa
sbb
adc
pop
imul
fwait
push
gs
cwtl
lahf
or
dec
inc
dec
sbb
dec
cltd
popa
mov
dec
inc
js
movsl
rcl
imul
mov
and
mov
out
and
les
jb
es
or
xchg
insb
fistl
push
ja
pop
out
dec
loope
sbb
pop
jecxz
xchg
cmp
or
sub
add
adc
and
sub
pushl
push
xor
xor
xor
xor
xor
xor
xor
xor
pushl
dec
xor
pusha
xor
je
jnp
xorb
xor
xor
xor
xor
and
xor
xor
xor
xor
xor
sbb
push
inc
adc
jle
mov
bnd
pop
inc
mov
in
add
push
adc
out
in
add
das
jo
call
mov
das
or
enter
ss
clc
push
in
sbb
and
adc
hlt
movsb
jl
push
jns
out
add
cmp
stos
add
imul
or
mov
imul
adc
add
aaa
imul
adc
loopne
xor
or
mov
ja
mov
fisubl
sub
fstp
sbb
cmp
and
stos
pop
leave
fmul
fstpl
or
ds
imul
bound
and
lahf
lea
or
cltd
cltd
jo
pop
sahf
lods
insl
ss
ds
or
in
in
inc
mov
rcr
cwtl
add
lods
add
fists
stos
pusha
xchg
ja
cltd
jns
rcr
add
xchg
mov
mov
add
add
in
push
pushf
pop
mov
popf
jbe
outsb
mov
ds
jo
pop
cwtl
mov
jns
mov
and
pop
jg
fwait
xchg
sbb
ja
sbb
and
mov
pushf
ss
incl
adcb
and
neg
and
out
ret
inc
fnstcw
rcpps
add
cld
add
inc
bnd
jecxz
cmpb
rorb
xlat
fiadds
cmc
jle
lidtl
fisubs
cs
sbb
shll
and
bound
xor
xor
adc
or
push
jnp
adc
push
mov
divb
add
sbb
mov
adc
xchg
fidivs
dec
push
xchg
mov
adc
add
sbb
xchg
mulb
outsl
inc
mov
clts
cmp
arpl
push
addb
arpl
test
jo
and
mov
imul
inc
and
sub
mov
ret
ret
push
sbb
cmp
es
cmp
cmp
insl
xchg
out
rcrb
iret
jg
xlat
push
add
or
subb
scas
mov
mov
rolb
adc
cmpsb
sar
mov
mov
jmp
negl
xor
cli
adc
nop
cmpsl
push
orb
inc
inc
pop
ljmp
mov
shlw
fisttpl
out
or
jbe
xchg
adc
aaa
adc
xor
movsb
push
xor
sbb
enter
or
andl
movzbw
mov
or
add
iret
out
mov
cmp
ja
pop
pop
ret
xor
cli
scas
jge
pop
ljmp
sub
jnp
add
addb
add
xor
dec
adc
fsubp
test
add
cmp
lods
push
mov
add
sahf
push
jbe
xchg
push
or
xor
decw
dec
sarb
pop
jo
sbb
push
pop
movsb
and
pop
pop
rcrb
je
outsb
rcr
xor
and
data16
and
mov
jbe
or
shrl
mov
ret
ds
jo
ss
sbb
loopne
pop
mov
cmp
push
jbe
mov
test
mov
sub
push
dec
cmp
and
aas
out
mov
pop
call
mov
mov
repnz
jns
sub
xchg
push
add
loopne
cmp
dec
sbb
mov
mov
rep
mov
pop
sti
or
mov
mov
jo
xor
arpl
cmp
and
aas
sub
inc
repz
fistpll
lret
mov
icebp
sbb
rcr
shrw
push
fistps
sti
pop
jne
test
cmp
movhps
lcall
pop
dec
jl
out
xchg
and
inc
add
dec
jae
popa
shl
aam
or
out
cmpb
dec
call
and
rcrl
cmc
mov
mov
xor
push
call
loopne
imul
neg
out
mov
movb
mov
adc
sbbb
dec
movsb
jae
mov
and
pop
or
pop
sbb
adc
push
mov
sbb
call
rol
cmp
push
mov
call
notb
push
testb
stos
das
mov
add
mov
mov
arpl
rorb
xchg
icebp
pop
ret
xor
out
push
data16
leave
sahf
or
sahf
sbb
push
movsb
adc
aas
sub
xorb
and
cli
adc
push
pop
lods
call
jl
leave
mov
aaa
and
in
call
bound
or
jp
fcmovnbe
fisubrs
clc
sub
push
lods
or
movb
add
or
mov
adc
jnp
inc
sahf
and
mov
iret
push
mov
fs
or
inc
dec
inc
cmp
loop
push
push
repz
in
sub
std
cmp
dec
out
push
pop
out
pop
jae
fdivl
push
jno
pop
scas
xor
mov
xchg
subb
xor
xlat
addl
ja
enter
js
push
jge
decb
xchg
xchg
sbb
xlat
xchg
jne
jge
xchg
fidivs
dec
mov
stos
xor
mov
jo
dec
fdivr
and
add
call
movsl
fs
ret
shufps
jo
in
push
sbb
mov
cmp
mov
cmpb
jae
add
mov
rol
fildl
xor
push
pop
repz
into
xor
and
push
mov
cmp
cli
push
sbb
call
ja
popf
clc
loop
pop
inc
jb
cmp
mov
add
mov
imul
mov
xchg
xchg
test
stos
fbstp
adc
cmp
mov
sti
cltd
sahf
lcall
cmpsl
add
mov
clc
icebp
push
pushf
mov
sbb
jbe
aaa
incb
lret
incw
lea
adc
jne
data16
dec
add
jno
add
loope
adc
je
sub
out
test
add
or
sbbl
aas
add
and
add
es
and
rolb
test
mov
cmp
dec
cld
add
lea
mov
sti
xor
insb
xchg
dec
mov
jg
int3
shl
inc
dec
rcrl
loopne
leave
std
adc
mov
mov
inc
lds
int
in
sub
mov
out
dec
outsl
mov
sub
mov
adc
sahf
das
mov
jo
mov
dec
js
lea
mov
aaa
push
shr
loope
jmp
push
mov
or
sub
gs
nop
add
mov
and
xor
scas
fists
mov
adc
jmp
pushf
cmp
lods
shl
xchg
push
or
test
sbb
xchg
repnz
ja
or
add
jae
je
cmp
cwtl
in
push
lret
add
dec
inc
aaa
jmp
add
cli
and
or
cmp
lea
sub
pop
mov
sbb
cmp
sbbl
roll
lods
pop
mov
inc
in
and
ret
ret
mov
in
cmpsb
ret
or
pop
dec
sbb
push
mov
sahf
jne
sub
sub
xor
sub
inc
mov
inc
je
dec
jmp
jae
pusha
mov
jne
jl
imul
pusha
std
mov
and
sub
sbb
xor
cmp
aam
fmulp
adc
sub
pop
cld
pop
mov
push
rorb
mov
popa
mov
push
cmc
cli
push
pop
mov
outsl
fsubrp
jg
or
enter
cmp
sbb
adc
enter
add
cmp
mov
mov
or
test
jge
adc
mov
push
or
jnp
xor
push
pop
fiaddl
jno
fisttps
mov
mov
sub
jg
mov
pop
sarb
mov
xor
cld
cli
bound
or
or
push
push
push
call
nop
fisttpll
mov
sbb
xor
sbb
mov
mov
push
xor
cmp
push
or
or
jno
or
push
sbb
adc
movsb
cmp
cmc
mov
and
jge
pop
adc
inc
add
cmp
cmp
jne
push
imul
and
dec
xor
push
call
mov
test
imul
fsts
dec
sub
sub
adc
insl
push
es
pop
or
xor
cmp
int
ja
and
or
shrl
ret
jne
adc
add
mov
jle
inc
sub
cmp
jge
push
jle
in
push
push
aaa
dec
clc
enter
call
mov
ds
ja
push
or
ret
push
inc
push
aas
xchg
popa
lods
ret
lock
sub
out
ss
mov
cmp
cltd
jg
in
lods
or
lds
neg
aaa
inc
dec
sub
push
push
pop
or
push
or
xchg
inc
popa
fisubs
and
jnp
or
pop
je
lret
push
and
push
cmpsl
out
jo
add
add
cmp
out
or
loopne
sbb
ja
call
push
ret
out
push
add
lea
push
adc
mov
cmp
imul
add
push
xchg
push
push
clc
mov
jo
jg
movsl
sub
decl
push
or
xorb
sub
fistps
xor
incl
mov
mov
mov
adc
mov
sbb
movb
mov
mov
xchg
add
mov
insl
aad
xor
lock
cld
pop
pusha
stos
add
fdivr
rclb
xchg
dec
and
das
pop
mov
push
enter
and
outsb
add
mov
mov
pop
in
mov
sarl
ljmp
or
xchg
nop
pop
shll
push
add
test
adc
mov
adc
inc
push
jmp
sbb
dec
jo
adc
pop
gs
in
test
or
test
add
lea
dec
cli
push
pop
dec
iret
ds
mov
cmp
outsl
push
pop
rcll
adc
xchg
js
call
sbb
pop
roll
cmp
sub
push
nop
dec
sarl
cmp
cmp
push
xor
push
mov
movsl
fwait
mov
lahf
fstpl
call
push
push
push
imul
mov
js
test
adc
cmp
sub
xlat
xlat
adcl
sbb
std
jmp
add
sub
ds
rcr
lods
cmp
push
dec
jle
inc
adc
dec
lea
loop
pushw
lea
adc
pop
sti
fldenv
push
xchg
xchg
inc
xchg
out
into
shll
dec
push
or
loopne
jne
push
mov
sub
cmp
jl
push
sbb
hlt
jnp
sub
daa
jl
and
adcb
and
push
test
inc
jbe
pop
dec
sub
scas
sbb
ljmp
add
test
xor
imul
sub
fwait
sahf
mov
jecxz
filds
mov
daa
ret
push
loop
pop
call
iret
mov
adc
sti
sbb
lock
add
fsubrs
cmp
sub
sbb
sub
push
lods
sub
add
or
pop
push
mov
sti
stc
test
sbb
std
adc
je
or
jo
testl
cltd
push
in
or
leave
push
or
push
push
push
pop
push
lahf
mov
scas
ret
inc
pop
lock
mov
mov
out
ljmp
push
icebp
push
push
call
sbb
rclb
or
xchg
mov
gs
xchg
lea
imul
fsub
mul
pcmpeqb
mov
das
lcall
sti
dec
sbb
jge
mov
leavew
or
movsb
jbe
jbe
jae
mov
push
sub
pop
scas
sbb
lret
push
addb
push
pop
nop
jo
inc
inc
jmp
dec
mov
test
mov
lock
jg
pop
cmpb
je
inc
cmp
push
mov
pop
es
inc
rorl
push
mov
sub
jl
sbb
rorl
je
inc
add
rcr
cld
cmc
das
cmp
xor
or
xor
inc
jl
push
test
mov
mov
adc
out
and
fs
jge
adc
sbb
mov
std
jl
pop
pop
sbb
decb
sub
adc
call
adc
sti
fdivr
push
xor
cltd
pop
ljmp
enter
sbb
hlt
addr16
xchg
pusha
and
mov
faddl
jbe
fdivrs
add
and
pop
das
xor
sbb
sbb
or
push
dec
add
shrl
xlat
std
inc
mov
adc
pop
dec
push
push
push
jle
mov
lock
leave
rolb
cmp
pop
or
or
add
sub
or
je
aas
push
testb
hlt
sbb
push
std
adc
sub
mov
nop
and
dec
sbb
addb
popa
stos
inc
loope
jb
inc
inc
and
mov
adc
call
idivl
dec
cmp
jne
clc
dec
or
icebp
push
stos
fstpl
push
pop
push
and
adc
push
and
gs
les
cmc
mov
fnstcw
repz
in
cmp
jbe
sbb
mov
push
call
pushf
adc
cmp
xchg
and
add
dec
xchg
and
push
lods
adc
pop
add
sbb
les
inc
pusha
dec
cmpl
jl
shl
mov
xchg
inc
push
ret
jg
test
in
out
popa
icebp
push
jbe
push
sub
ret
fildl
cwtl
jns
cs
mov
imulb
add
js
int3
adc
pop
mov
loop
stos
or
sub
in
sbb
lahf
inc
fdivrs
pop
push
adc
jmp
push
imul
add
or
dec
sub
lds
adc
xor
ds
outsl
fidivl
incb
adc
fnsave
or
jecxz
lock
jecxz
lea
insl
add
cmp
and
icebp
mov
push
fs
dec
outsl
pop
lds
add
push
andb
pop
cld
xor
adc
cmp
jecxz
ret
cltd
call
int3
and
insb
mov
jns
jns
loop
shl
pop
xchg
cmp
xor
aam
cli
fwait
mov
cmp
mov
sub
scas
dec
pop
cmpl
out
les
push
jne
imul
jae
cmp
test
or
adc
shrl
jne
push
cmp
clc
inc
stos
push
in
push
mov
push
dec
and
std
rol
push
stos
push
outsl
adc
cmp
dec
xor
adc
sub
mov
cwtl
mov
jns
sbb
push
dec
mov
loopne
mov
loopne
test
mull
or
call
dec
adc
jle
push
sub
insb
and
in
fistps
push
add
pop
dec
inc
push
add
sarb
cmp
jne
aas
cmp
sti
fcomp
lahf
mov
mov
pop
push
adc
sub
and
or
imulb
add
push
shrb
pusha
pop
xchg
mov
dec
fsubrl
call
xchg
pushf
pusha
and
xchg
push
call
int3
sub
sub
push
notb
addr16
push
dec
mov
inc
push
cmp
inc
cmp
mov
fnstsw
inc
mov
outsl
cmpsb
mov
mov
sbb
clc
loop
jecxz
icebp
mov
imul
std
adc
and
pop
in
add
adc
jp
push
mulb
das
daa
or
dec
je
dec
xchg
mov
mov
inc
mov
pop
inc
push
cmp
push
dec
inc
stos
cmp
nop
cmp
sub
jmp
xchg
push
cmp
cmc
subb
push
push
bound
mov
sub
and
mov
or
or
add
add
add
adcb
cmp
test
pop
cmp
jl
push
push
inc
mov
mov
sbb
loope
lods
fdivs
xchg
push
out
sbb
fiadds
cmp
sti
or
inc
adc
cmpl
push
dec
fnstsw
in
cmp
mov
xor
es
push
aam
pop
or
je
out
xadd
clc
imul
cmp
mov
cwtl
mov
insl
cmp
cli
scas
sbb
adc
testb
loope
dec
or
ret
push
sbb
mov
push
ss
push
imul
out
testb
push
pop
shlb
jge
jae
pop
add
in
pop
xchg
cmp
test
leave
in
cmpsl
stc
loope
add
or
call
push
test
push
daa
js
xorb
push
mov
pop
cmp
and
add
sti
js
mov
or
movsb
jne
add
sbb
jmp
mov
xor
mov
push
mov
sub
call
pop
and
add
and
lea
js
sahf
out
or
lock
mov
std
mov
xchg
std
and
inc
sbb
xor
push
shrb
or
sub
call
scas
mov
pushf
lock
add
and
adc
pop
or
xor
aad
inc
push
out
mov
sbb
insl
mov
inc
xchg
cltd
xchg
out
notl
sbb
sub
ljmp
jl
dec
jbe
lock
and
push
push
nopl
cmp
cltd
pop
add
xchg
movsb
fstpt
and
mov
dec
xchg
inc
adc
clc
pop
setle
bound
fwait
in
mov
xor
adcb
mov
flds
outsb
inc
inc
push
dec
dec
dec
loopne
push
cwtl
js
jge
adc
nop
movsl
adc
rcrb
or
push
scas
push
push
gs
sti
inc
div
or
mov
lds
sarb
in
imul
sbb
jne
push
push
push
sub
push
and
lret
pop
dec
sub
pop
pop
push
enterw
inc
dec
mov
popa
sti
lods
jns
xor
jne
jmp
scas
das
shl
mov
je
inc
cmp
mov
jmp
pop
xor
imul
xchg
mov
fs
xchg
or
sub
sub
sbb
std
push
sbb
push
rorl
sub
push
inc
icebp
adc
addr16
hlt
lea
inc
sarb
xor
sahf
sub
add
aas
add
mov
ret
add
daa
and
mov
sarb
in
loope
inc
frstor
imul
cwtl
push
xchg
sbb
outsl
cmp
jbe
mov
into
repnz
mov
and
inc
mov
pop
scas
push
test
jmp
cmp
scas
and
fistpll
loope
movsb
jle
ja
loopne
call
sbbb
xor
or
mov
lret
mov
call
dec
movsb
addr16
mov
movb
and
popa
or
ds
jg
daa
lea
stos
cwtl
dec
xchg
add
loop
ljmp
and
fisubrl
ljmp
add
add
mov
adc
and
cmp
dec
cmpb
incw
outsl
movsl
pop
cmp
jg
push
adc
xchg
dec
rclb
outsb
xor
orl
push
mov
orb
subl
fsubrp
stos
sti
jb
add
fcoml
imul
sub
jg
xchg
sub
or
fcom
loopne
rcll
or
shll
jle
stc
imul
add
sbb
xchg
repnz
push
cltd
aam
jnp
pop
call
xor
dec
pop
popa
mov
mov
in
push
push
cmp
sarb
pop
out
stc
dec
jb
bound
les
sbb
push
adc
xchg
mov
scas
sbb
or
scas
inc
sub
mov
arpl
fs
inc
sub
ds
or
jle
dec
xchg
inc
mov
push
mull
cmp
add
push
cmpsb
clc
add
btr
push
outsb
push
mov
arpl
fsubs
ja
push
cmpsl
or
stc
jne
add
push
fwait
aam
insl
rol
add
push
jnp
pop
mov
lds
sbb
push
data16
in
sub
jge
push
mov
ljmp
test
ja
or
sbb
dec
out
push
cmp
jl
cmp
dec
jp
or
aaa
pop
push
js
add
jne
cmp
and
push
sub
mov
adc
cmp
clc
jg
add
jne
mov
cmp
inc
shrb
imul
dec
cli
mov
int
jne,pn
pop
out
cmp
in
sub
jno
cmp
andb
mov
test
insl
popa
sbb
cmp
dec
jns
popa
add
and
sub
aas
pop
push
into
fld
add
call
into
repz
fists
ret
push
out
push
xorl
mov
mov
push
test
test
in
or
shlb
call
push
dec
push
scas
cmp
aaa
fidivl
test
add
cmp
mov
or
and
sub
in
mov
insl
adc
outsl
in
add
int3
mov
lcall
popf
adc
or
rcl
popf
pop
adc
push
aas
sahf
xor
pop
fisubrl
pusha
jmp
mov
cmp
xchg
or
and
adc
enter
aaa
fcmovnbe
or
sbb
sbb
std
jl
cmp
jg
add
mov
mov
inc
daa
jne
ret
xchg
and
push
movsl
adc
loop
or
or
dec
lock
cmpb
jne
add
dec
add
daa
data16
test
ficoms
call
cmp
fdivs
movb
add
mov
cmp
sub
dec
sub
arpl
mov
and
cmp
imul
data16
inc
lret
or
ret
je
or
push
movswl
mov
xor
and
add
lods
sbb
sub
sti
arpl
add
cmp
add
fisubrs
inc
arpl
adc
or
cmc
mov
fwait
lock
mov
xchg
fsts
adc
sbb
adc
inc
push
sub
daa
push
sub
adc
add
dec
push
xor
nop
xor
lret
or
insl
push
jno
stos
aam
scas
and
sub
inc
cmp
jge
hlt
out
jae
sub
inc
les
jmp
adc
jl
mov
or
add
fistps
outsl
iret
cwtl
lea
loop
mov
in
ss
xchg
xchg
sbb
sbb
fildl
jmp
xchg
jg
mov
mov
cmp
popa
lea
mov
dec
mov
or
cmp
aad
roll
aaa
push
xor
nop
adc
div
fisubrs
add
call
jge
pusha
mov
scas
or
idivb
inc
xor
shlb
js
dec
cmp
wrmsr
clc
adc
inc
xor
scas
orl
sub
das
imul
pop
add
out
sub
repz
movl
inc
adc
xchg
loopne
je
xchg
mov
push
js
pusha
popa
inc
pop
mov
xor
jbe
aad
test
shll
adc
pushf
sbb
jge
sub
add
add
enter
add
punpcklbw
ficompl
jb
ret
or
test
push
scas
inc
pop
and
inc
and
pop
and
movsbl
imul
add
insl
mov
das
pop
repz
stc
sub
add
xor
incl
sarl
ja
icebp
std
sbb
out
add
dec
cmp
test
mov
loopne
inc
les
ljmp
daa
arpl
aad
sub
inc
and
nop
mov
push
inc
or
js
les
pop
push
dec
inc
test
inc
jo
mov
sbb
out
mov
dec
add
cs
and
add
fildll
in
push
xchg
aam
imul
loope
add
push
mov
retw
cmp
pop
pushf
icebp
push
push
push
loopne
in
sbb
or
jb
and
push
aam
push
loopne
jp
dec
and
out
mov
aaa
add
dec
aas
orl
and
test
add
ret
lea
mov
fs
pop
or
jecxz
daa
shll
mov
aam
ljmp
data16
sbb
or
or
bound
mov
mov
mov
cmp
jne
xchg
adc
push
add
push
dec
addr16
loopne
ss
daa
stos
mov
mov
jmp
sbb
sbb
or
movsb
call
mov
insb
jg
mov
loopne
push
mov
pop
test
or
adc
or
xchg
mov
movsl
jo
push
call
adc
push
shlb
add
xor
or
out
mov
ds
adc
mov
cmpsl
cmp
xlat
sbb
pop
mov
popf
dec
mov
sbb
lods
cmpxchg8b
and
mov
mov
mov
add
or
je
xlat
ss
jl
or
aas
icebp
clc
mov
je
cmp
jne
dec
sub
jmp
mov
roll
cmp
cltd
ffree
and
int
jle
jns
add
adc
jns
adc
adc
cmp
popa
mov
sbb
fimuls
jne
pushl
adc
in
inc
jo
pusha
jmp
into
jmp
fidivl
xlat
iret
shrl
sbb
pop
cmp
std
stc
pop
mov
push
out
pusha
movsl
inc
mov
or
mov
pop
stos
inc
lahf
int3
and
push
sti
and
push
cmpsl
lret
cs
scas
xchg
add
lea
cmp
enter
cvtps2pi
mov
enter
pop
mov
add
or
add
dec
mov
mov
arpl
js
pushf
imul
je
cmp
mov
and
popa
sbb
adc
and
mov
xchg
lret
push
mov
pop
jle
sbb
jl
or
inc
mov
sbb
fstl
pop
repnz
sub
js
cmp
clc
lea
in
or
and
sbb
js
and
pop
add
xor
push
loopne
sahf
mov
mov
mov
addr16
mov
sub
push
aas
mov
cmp
jmp
enter
jmp
shl
inc
push
mov
xchg
cmp
dec
push
push
dec
mov
push
out
push
mov
pop
sbb
push
lock
push
sahf
xor
mov
movsb
sbb
pop
mov
add
xor
add
popa
adc
shll
jns
fnstcw
sub
lret
add
cwtl
fimuls
adc
cmp
arpl
push
popa
xorl
es
inc
add
adc
das
or
mov
push
xor
jmp
sti
lahf
cmp
pushf
movsb
adc
push
jns
and
clc
xchg
ret
mov
and
popa
out
add
hlt
jecxz
test
mov
inc
adc
xchg
push
aas
cli
jp
or
adc
sub
push
mov
mov
mov
cmp
inc
adc
dec
pop
add
pop
aas
or
jnp
push
mov
insb
ja
and
xor
mov
cmc
sbb
sbb
xchg
and
cmp
pushf
repz
jb
out
out
call
or
call
int
cltd
jecxz
outsl
push
adc
pop
push
enter
inc
cwtl
pop
insl
ret
fsubr
mov
repz
or
pop
imulb
pop
out
lea
mov
mov
pop
ss
das
dec
rol
jecxz
fists
mov
xor
loop
test
mov
test
ljmp
pextrw
adc
xchg
test
cli
pop
jne
jg
push
ret
and
pop
xchg
inc
inc
rcll
roll
lods
or
push
insb
mov
pop
aad
outsl
je
add
xor
call
or
test
push
pushf
cmp
fisubs
mov
adc
icebp
call
cmpsb
mov
int
jne
jg
repz
int
xor
jb
mov
xchg
inc
cmp
jle
cmp
inc
sbb
adc
cs
dec
test
lock
inc
clc
jl
hlt
pop
sbb
sbb
in
and
or
mov
mov
pop
jne
push
call
rolb
or
insl
or
sub
inc
pop
hlt
and
or
push
dec
fstpl
sbb
push
aam
fisubs
mov
ret
and
mov
sbb
inc
rcll
cmp
xlat
jns
rorl
mov
push
xlat
pop
mov
loope
push
or
xor
clc
sub
sub
mov
mov
pop
adc
cmp
pusha
pop
pop
gs
xor
or
sbbl
push
ret
lock
adc
adc
insl
xor
mov
pop
icebp
push
lahf
mov
pop
cmpl
mov
sub
inc
push
sahf
mov
sbb
pop
cld
movsb
and
sub
push
idivl
adc
xchg
xor
insb
fstpl
cwtl
or
inc
xchg
mov
jbe
adc
pop
adc
cmp
cmpl
xor
shrb
push
aaa
dec
dec
inc
push
add
add
je
push
pop
stos
cwtl
movsb
or
push
ja
nop
popa
pop
add
push
add
cld
xor
inc
sahf
lock
call
mov
cs
pop
ret
shl
push
jmp
cld
cmp
sub
xchg
sahf
adc
jne
popl
ret
js
aam
mov
or
sub
xorps
mov
or
mov
jg
add
add
adc
add
cmpsb
iret
mov
test
push
fcompl
mov
inc
cmpsl
lea
adc
cld
add
call
jg
cmp
dec
jl
push
aas
push
or
rorb
inc
loope
pop
in
push
nop
sbb
in
sbb
sti
sub
shlb
fsts
cmp
push
pop
sbb
icebp
sbb
pop
mov
scas
mov
andb
stos
or
cmp
add
mov
sbbl
or
je
sarl
or
ja
mov
cmp
mov
add
pop
adcl
pop
hlt
xlat
add
cmp
imul
mov
jmp
test
mov
sbb
jns
or
stc
add
icebp
add
repnz
inc
pop
mov
and
ret
push
push
push
and
add
and
sbb
dec
inc
adc
or
mov
pop
sbb
pushf
fnstenv
jne
dec
flds
cmp
dec
cmp
sub
les
ljmp
mov
mov
dec
lods
jo
adc
sbb
orl
add
mov
call
pop
sar
xor
ja
jmp
dec
jl
mov
adc
mov
mov
pop
rorl
sub
jnp
dec
leave
dec
sbb
into
dec
xor
mov
inc
and
adc
add
les
adc
subl
push
push
arpl
pop
or
test
js
push
push
push
nop
jg
xor
cmp
push
xchg
pushf
subl
mov
xchg
pusha
pushf
adc
mov
xchg
out
fwait
cmpsl
add
cmp
and
add
mov
mull
pop
or
pop
incb
leave
adc
mov
fisubl
push
and
rcll
fdivs
jne
loopne
mov
lock
mov
inc
cmpl
inc
mov
jb
sub
cmpsl
pop
mov
rcrb
xchg
je
out
xchg
pushf
add
hlt
sub
add
adc
mov
lods
mov
mov
fisttpll
sbb
in
jb
call
cmpsl
rorb
push
popf
fdivrs
mov
jmp
xor
int
ja
icebp
adc
jmp
call
sbb
pop
cmp
and
or
adc
jmp
mov
pop
adc
pusha
test
adc
cs
int
mov
fbstp
xorb
xor
imul
push
std
mov
sub
mov
orb
mov
sbb
les
inc
fstl
inc
xlat
cmpl
adc
pop
cmc
aaa
fsubrl
or
mov
je
dec
mov
push
adc
mov
xor
push
mov
xchg
fstpt
cmp
ljmp
push
xlat
lods
sub
mov
testb
fwait
mov
push
pop
push
add
adc
or
add
cltd
mov
stos
xchg
add
add
sbbb
jns
add
or
sbb
or
mov
or
stc
pop
pextrw
and
push
mov
mov
or
cmp
mov
cs
or
push
imul
and
test
inc
subl
sahf
test
pop
pop
cmp
xor
enter
xor
outsb
je
clc
sub
xorb
sub
xchg
mov
outsb
xchg
rcl
loop
loop
scas
subl
dec
cltd
cmpsb
dec
jne
sub
js
pusha
data16
pusha
jno
push
sbb
rorb
je
loopne
cmp
or
jb
sti
push
sub
sar
xlat
push
push
push
leave
xor
fsts
lret
jg
add
mov
incb
sbb
es
push
out
sub
loop
aad
push
xor
or
mov
add
pop
and
sub
pop
pop
xor
add
adc
subb
xor
inc
addr16
rorb
movsl
gs
ret
je
orb
pusha
loopne
sbb
es
cmp
test
test
imul
pop
push
adc
inc
lahf
add
push
push
cmpsb
adc
stos
outsl
adc
outsl
cmp
xchg
out
nop
ret
sub
xor
enter
les
popa
fisubrs
cltd
add
ja
sub
mov
push
push
test
pop
xchg
sub
mov
add
xbegin
mov
mov
push
mov
sbb
bound
xchg
sbb
and
aaa
sbb
jecxz
push
push
pop
add
imul
push
in
inc
and
mov
sti
sub
sbb
imull
sbb
push
das
adc
inc
dec
mov
in
pop
adc
std
out
push
push
push
add
cmp
sahf
push
push
subl
pop
jbe
shl
xor
cmp
nop
dec
jp
add
in
js
jmp
mov
jo
pop
inc
sbb
xchg
push
pop
inc
inc
inc
mov
imul
test
repz
in
loope
test
mov
add
and
push
js
mov
or
adc
add
out
pop
sbb
adc
and
in
pop
pop
rorb
adcb
inc
mov
ret
xor
icebp
or
jl
push
or
iret
or
sub
push
adc
test
add
repz
fcoms
xchg
inc
cli
xchg
adc
pop
mov
fs
ret
das
psubb
aam
loopne
push
xorb
sbb
add
in
xor
in
mov
ss
es
loope
in
lock
push
or
xor
cmp
loopne
out
dec
loopne
push
and
lret
popa
xchg
and
xchg
and
and
sbb
cmp
into
out
sub
negl
sub
push
shrb
adc
sbb
sub
xchg
insl
add
imul
scas
or
jl
or
stc
sub
mov
adc
cmp
test
sub
je
sub
sub
adc
xchg
and
sub
test
dec
push
jmp
mov
jo
daa
push
mov
test
add
lea
adc
push
lret
inc
cmp
jl
cltd
add
loopne
xchg
xchg
add
add
xor
adc
outsb
adc
push
inc
fsubrs
push
and
xchg
sbb
inc
aam
mov
jmp
cmpsb
loope
sub
fstpl
pop
mov
jo
push
lahf
add
cmp
mov
mov
xchg
push
das
lods
push
jmp
mov
iret
and
les
jp
arpl
cmp
fcompl
leave
cmp
lret
es
sbb
adc
insb
sbb
lret
stos
adc
mov
push
fildl
xchg
call
in
inc
pop
inc
pushf
or
xchg
jo
sub
test
pushf
scas
ret
dec
mov
and
test
call
shlb
shl
mov
call
mov
call
fistpll
cmp
ret
scas
push
mov
outsl
xor
aam
pushw
and
shrl
cwtl
lcall
add
roll
je
je
cltd
cmp
xchg
cmp
add
mov
test
lock
cwtl
and
adc
cmp
mov
push
fnstenv
push
das
xchg
mov
cltd
mov
insb
hlt
and
mov
adc
cmp
icebp
int3
add
jno
push
push
add
mov
ret
out
or
adc
repnz
xchg
pop
andl
sub
jmp
mov
adc
mov
mov
push
inc
adc
loopne
psubsb
sbb
sbb
mov
sbb
xchg
lcall
add
jge
nop
in
inc
mov
mov
and
push
call
icebp
or
inc
jo
addr16
and
or
dec
aas
push
xchg
testl
jno
mov
push
mov
cmp
scas
push
lea
test
push
sbb
hlt
sbb
cmpb
repz
jmp
xchg
adc
les
outsb
or
fildll
insb
push
and
adc
add
sub
dec
adc
popa
negl
xlat
pop
push
inc
dec
inc
mov
inc
lret
mov
mov
lock
jne
jl
or
jg
jnp
jno
out
jmp
mov
es
xchg
dec
daa
push
xchg
incl
sbb
sbb
xor
xor
mov
jnp
mov
ds
mov
dec
inc
fidivs
daa
inc
cmp
clc
sub
xor
or
pop
cwtl
inc
pop
stos
sub
mov
sub
lock
mov
jb
jbe
push
icebp
push
jnp
jl
mov
call
data16
lock
add
or
mov
dec
sbb
call
sub
xor
sbb
lcall
inc
mov
mov
push
xor
jl
xchg
cmp
push
and
in
cld
cld
push
inc
test
aaa
mov
pop
bound
push
xor
dec
xlat
data16
adc
mov
inc
add
out
xchg
mov
mov
push
inc
mov
adc
ja
xor
or
sbb
into
add
addr16
sbb
stc
jge
inc
sub
inc
jg
aas
enter
pop
cmp
dec
pop
push
push
jecxz
sub
pusha
mov
and
push
pop
sbb
push
jne
pop
hlt
or
movsb
mov
cmp
or
push
pop
in
imul
add
adc
sbb
loopne
xor
or
or
cmpsl
push
jmp
lea
sub
sub
loope
int
inc
adc
in
scas
mov
mov
cwtl
nop
lods
imull
jo
push
or
aas
sub
mov
and
cmp
jns
ja
jl
jle,pn
jne
outsl
imul
xchg
addr16
pop
popa
xlat
gs
jge
mov
daa
adc
xor
dec
jmp
xchg
das
sub
jb
mov
cmp
or
loop
or
inc
shlb
je
outsl
push
insb
addr16
jbe
and
pop
cmpsb
dec
adc
shl
and
mov
rorb
pop
popf
sbbb
into
sub
cmpsl
or
bnd
push
cwtl
sub
jbe
cmpl
fbld
je
call
sbb
aam
mov
adc
cmp
pop
or
insb
xor
ja
fisttpll
sub
dec
mov
push
inc
ja
mov
adc
mov
or
sub
in
jg
mov
lods
aas
out
xchg
push
jae
cmp
test
leave
pushf
xor
add
test
es
and
push
cltd
hlt
adc
mov
shrb
jno
imul
out
dec
jle
movswl
lea
jg
dec
cmc
pop
dec
mov
jne
mov
jb
pop
push
leave
js
test
sbb
data16
ss
xchg
jnp
jl
mov
insb
adc
jns
lock
in
pop
mov
test
je
xchg
adc
push
jo
insl
sbb
push
lahf
mov
jge
ret
jne
pop
and
mov
inc
mov
bswap
cmp
adc
xorb
jb
testl
fstpl
out
gs
or
ss
sub
aad
push
stos
pop
movsl
mov
scas
push
int3
mov
ret
hlt
bound
sub
daa
shlb
mov
jle
in
push
jp
xchg
add
mov
xor
idivb
cmc
cmp
mov
inc
mov
test
adc
mov
xchg
popf
or
pop
xor
dec
loop
or
lcall
sbb
push
jl
stos
xor
adc
out
lock
inc
cwtl
push
lret
mov
add
push
mov
cs
cld
xor
inc
push
js
mov
shrb
sarl
pop
out
pop
aam
mov
adc
shlb
dec
mov
add
imul
int3
ss
cmp
xor
mov
xor
test
mov
rorb
mov
cmp
hlt
mov
pop
adc
push
push
add
push
aaa
xchg
xchg
mov
inc
add
dec
jne
fadds
adc
or
adc
sbb
mov
xor
mov
xchg
mov
leave
or
fistpll
sbb
les
int3
test
xchg
sbb
in
lds
fidivl
cmpsl
mov
call
mov
rorl
movsl
pusha
lcall
push
pop
inc
xor
ja
lahf
test
xorl
push
adc
pushw
sub
aas
test
adc
xor
mov
jno
fwait
xchg
popa
data16
inc
sahf
jle
or
xchg
push
sub
jecxz
add
mov
pop
mov
les
pop
mov
inc
xor
add
nop
sbb
push
jnp
shlb
add
xor
pop
sbb
xor
mov
fidivrs
add
fbld
sbb
es
out
outsb
mov
bound
shlb
push
adc
add
movsb
xor
dec
mov
push
aam
jo
push
call
out
xchg
outsb
push
xor
cmpb
outsb
loope
loopne
gs
cmp
arpl
out
aaa
adc
push
data16
sub
pop
loop
cmp
hlt
popa
nop
cmpsl
xchg
push
add
les
push
loopne
add
cmp
push
outsb
shlb
add
ror
inc
insl
dec
leave
cwtl
and
mov
cmc
add
cmp
sbb
and
push
lcall
dec
bound
sub
loopne
pop
jno
adc
sbb
push
adc
jmp
xor
sti
xor
xor
popa
pusha
mull
cli
add
add
inc
or
xchg
rorb
mov
mov
add
mov
mov
sbb
sub
inc
jae
sub
loope
mov
mov
call
je
jo
xor
aad
rcll
mov
imul
ljmp
push
lods
repz
ja
mov
arpl
popf
fidivs
cmp
cmp
fsubp
pop
in
cmp
je
push
sub
xlat
pop
inc
jecxz
filds
push
push
push
call
sbb
mov
adc
push
int3
dec
push
add
mov
cs
test
adc
movsl
setp
movl
add
cli
dec
push
add
push
xchg
or
mov
or
sbb
cmp
and
mov
adc
mov
mov
cmp
push
cmp
inc
scas
cmp
pop
data16
xchg
inc
push
mov
cmp
aas
push
pop
js
inc
popa
inc
sub
lock
imulb
add
push
push
pop
and
bound
cmp
jns
pop
push
cmp
xchg
dec
lods
mov
subb
add
push
lods
push
xor
or
adc
push
test
push
daa
sub
js
cmpsl
bound
out
and
adc
popa
dec
xlat
inc
aaa
and
mov
dec
sub
xchg
inc
ja
lock
push
inc
popa
lock
mov
jmp
leave
cs
add
jb
push
or
cmp
sub
dec
add
inc
mov
iret
dec
icebp
std
xor
repz
in
je
pop
jmp
stos
stos
mov
push
lret
movsb
push
movsb
sbb
scas
loopne
or
push
daa
add
imul
fbld
bound
addl
lods
in
add
ret
push
push
add
jb
decl
popl
push
pop
rolb
jmp
cs
roll
lret
push
xchg
dec
or
push
sbbl
jmp
push
mov
sbb
stos
add
jecxz
sbbl
call
repz
jne
shll
test
sub
in
dec
test
mov
cld
movsl
sub
add
xchg
push
mov
mov
sbb
pop
mov
pusha
push
dec
ret
es
sub
fcmovnb
gs
add
adc
xchg
mov
nop
mov
push
sub
rep
mov
push
push
sub
push
push
imul
shlb
cmpb
lock
popf
sub
ret
repnz
ljmp
xlat
test
add
push
push
dec
jnp
dec
adcl
pusha
xor
dec
sub
jle
and
mov
add
or
mov
pop
cmp
push
add
jo
lcall
in
or
sub
sarb
jecxz
outsl
adc
ja
out
xor
les
popa
addr16
or
arpl
sahf
flds
or
and
xchg
xchg
jns
add
cmp
pusha
scas
sub
lahf
push
popa
mov
push
imul
insl
pcmpeqb
scas
shlb
mov
jo
or
adc
jno
js,pt
mov
inc
cmp
add
sbb
and
inc
push
pop
cmpsl
arpl
mov
and
in
pop
push
nop
movsl
pop
jno
pop
fldenv
cli
push
mov
dec
mov
cmpsb
xor
je
clc
push
ret
inc
pop
les
mov
shlb
aaa
aam
pop
roll
loope
push
push
jns
hlt
loopne
les
dec
push
loop
cs
push
cld
dec
or
mov
int
dec
mov
inc
int3
ja
xchg
push
into
and
push
dec
sub
sbb
jg
push
inc
push
aas
movsb
fbstp
xchg
scas
call
pop
aad
xchg
lods
lret
sub
dec
push
push
and
rcll
adc
push
push
imul
les
popa
mov
and
jne
daa
push
mov
add
push
cmp
xchg
jbe
push
ror
sbb
addb
push
orl
push
adc
ud0
add
stos
mov
ds
je,pn
pop
cmp
sbb
or
jno
ret
xchg
push
jle
nop
xor
js
inc
loopne
jnp
movsb
cwtl
jno
mov
cmp
sub
mov
ds
push
int
and
or
sarb
jmp
cwtl
mov
and
call
add
cmp
mov
add
dec
sbbb
push
subb
xor
fildl
jo
sub
mov
daa
sbb
jno
call
adc
add
adc
inc
and
insl
les
xchg
adc
dec
adc
insb
mov
inc
jb
test
fiadds
imul
jmp
xchg
push
xchg
fists
iret
mov
xor
push
add
sbb
pop
sbb
push
push
lods
jmp
insl
pop
call
cs
cmpb
jne
ja
jnp
jge
test
push
jmp
iret
mov
data16
orb
or
inc
push
jmp
call
xchg
adc
pop
push
and
push
loopne
fwait
cltd
add
push
shl
pop
fcmovnb
out
add
loope
add
sbb
pop
push
loope
lea
sub
push
jg
and
fsincos
xor
into
jb
rcr
jge
push
std
outsb
push
push
js
sub
sub
in
add
push
xchg
dec
sub
imul
xor
push
jge
adc
xchg
mov
ss
jbe
add
imul
jne
movsl
rorl
pop
shrb
push
call
jno
rcrl
insl
xchg
push
in
push
dec
add
dec
mov
add
lret
pop
and
add
orb
push
cmp
or
inc
cmp
mov
loope
adc
mov
movzwl
and
js
hlt
xchg
jl
push
fsubrl
test
sbb
ss
ja
jge
dec
xor
sbb
lea
imul
roll
push
adc
add
mov
add
cmpsb
pop
jecxz
jge
push
push
fdivl
popa
or
dec
add
insl
xor
xchg
xor
xor
fsub
ss
sub
cld
and
imulb
sbb
xchg
jne
jne
daa
jg
cwtl
mov
ret
adc
je
push
push
push
pop
inc
imul
pusha
mov
cmpsb
mov
and
cwtl
mov
xlat
mov
hlt
popa
xchg
stc
sbb
cli
fdivrs
lods
sbb
add
push
sub
adc
jmp
cmpsl
call
jl
mov
out
ljmp
loope
inc
popa
xor
clc
inc
arpl
loop
add
xchg
in
dec
add
push
pop
xor
mov
lcall
cmp
popa
mov
gs
lods
add
mov
push
je
in
xchg
mov
cmpsb
inc
push
push
mov
and
mov
or
je
gs
mov
lret
sbb
xchg
dec
or
xchg
xchg
dec
mov
push
push
push
push
sub
lock
pop
adc
sub
jo
repnz
add
or
inc
mull
mov
inc
outsb
lods
adc
mov
das
in
or
adc
mov
cmp
push
outsl
loopne
jns
adc
call
xor
call
subl
neg
lea
lods
inc
or
cmp
jl
stc
sbb
mov
cld
jp
xor
movsb
aad
adc
ds
xlat
scas
sbb
fcomps
pusha
push
movsl
aad
out
add
test
fcoml
aad
mov
jb
fcomps
adc
test
mov
stc
test
test
subl
fwait
sub
jno
in
cwtl
xor
mov
sub
in
mov
xchg
movl
aad
add
dec
aad
icebp
imul
test
pop
fbstp
mov
or
dec
es
mov
lret
sbb
push
imul
xor
std
xchg
or
rcll
or
cwtl
jmp
leave
imul
and
adc
push
inc
lret
add
or
pushf
dec
push
arpl
jl
mov
loope
sahf
or
add
inc
push
gs
leave
pop
outsl
or
fisttpl
js
cmp
lret
pop
in
orb
or
arpl
loope
mov
push
or
mov
push
jne
popf
pushf
js
les
mov
jno
sbb
call
js
add
dec
and
and
daa
pop
fistpl
aad
push
xchg
xor
cli
pop
dec
and
or
inc
mov
and
dec
mov
adcl
nop
mov
sub
push
ret
xor
add
dec
add
sarl
clc
sub
dec
xchg
adc
push
cmp
mov
or
cmp
add
push
ret
dec
arpl
cwtl
push
jmp
repz
add
call
xchg
and
xchg
or
push
aas
leave
gs
jle
je
ret
xchg
add
sub
aaa
mov
pop
dec
and
je
lds
fisubl
loop
xor
inc
mov
test
aad
pop
xchg
jo
and
jo
xor
loope
movsl
adc
inc
pop
or
or
mov
dec
enter
sbb
push
mov
jge
mov
pop
sbb
test
movsb
push
inc
fsubs
mov
jne
mov
jno
pop
mov
push
add
lds
bound
inc
jnp
sbbl
pop
dec
cmpsl
stos
inc
inc
or
loopne
inc
nop
jl
mov
add
mov
adc
movsb
inc
inc
mov
fmulp
gs
push
in
dec
pop
clc
dec
rolb
push
xlat
decb
lock
xor
sub
imul
fistps
popa
sbb
rdtsc
sub
push
or
test
sub
push
mov
adc
or
or
xor
icebp
ret
sbb
cmpsl
sbb
outsl
jmp
pop
push
lret
inc
aam
repz
sub
test
push
mov
mov
or
mov
lret
jne
movsb
push
adc
fstpl
push
sub
jl
mov
mov
rol
mov
jle
xchg
ret
lock
pop
mov
cli
cmp
add
add
loop
mov
jmp
xchg
mov
xor
lods
jmp
dec
pusha
add
movsb
sahf
lods
pop
xor
call
adc
add
sti
mov
loope
fidivs
add
loope
mov
pavgw
out
cmp
orb
les
xchg
loopne
int
xor
test
or
add
pop
sub
or
push
xor
sbb
jb
sarb
inc
mov
aaa
std
scas
adc
aad
sbb
cmp
mul
shr
rolb
fnstenv
sub
push
pusha
lea
leave
cmpsb
cmp
data16
nop
adc
mov
ds
icebp
call
cwtl
mov
inc
pop
insb
adc
mov
jnp
xor
jae
push
add
ret
cmpsb
lock
insb
adc
sub
add
dec
xchg
mov
sbb
dec
imul
lds
pop
fdivrs
mov
add
movsb
adc
mov
nop
cs
push
fwait
imul
leave
shll
ss
dec
negb
xor
jne
inc
dec
loop
add
lds
jg
mov
jne
cmp
cmp
lahf
enter
dec
jl
adc
ret
ja
call
jne
or
call
ljmp
ljmp
outsl
adc
fisubrs
pop
mov
and
sahf
push
pop
mov
add
push
mov
xor
cmp
addl
dec
mov
push
inc
ficoml
dec
andb
push
cmp
xchg
push
sub
int3
mov
or
je
sub
mov
adc
mov
sbb
and
pusha
add
push
cs
mov
enter
insl
push
push
mov
pop
push
cwtl
cmp
add
inc
xchg
aaa
inc
inc
adc
lods
loopne
rcrl
mov
out
jne
adc
fisttpl
dec
in
cmpsb
fnstsw
add
fbld
lods
pop
fstps
jmp
cmc
add
movb
inc
loope
adc
div
arpl
fisttpll
sahf
and
jmp
lcall
cmc
sub
in
mov
cmp
fstpt
dec
xor
jmp
mov
pop
add
je
push
mov
jns
neg
cmp
add
sub
or
fwait
clc
clc
cmpb
pop
sbb
js
popf
mov
daa
dec
mov
and
mov
das
jnp
jp
sbb
jns
cmpb
sub
add
push
fisubl
sbb
adc
inc
adc
bound
dec
cmpb
or
add
cmp
ret
add
lea
icebp
mov
mov
mov
mov
inc
dec
test
movb
stos
loopne
pop
jnp
cwtl
push
dec
mov
mov
push
push
cmc
pop
mov
sbb
lret
push
add
or
sub
lods
xor
lods
or
add
cltd
test
mov
jle
jne
sbb
notl
stc
push
cltd
mov
scas
test
mov
add
add
js
inc
pop
nop
stc
add
inc
mov
xchg
mov
sbb
push
push
mov
shrb
les
or
fdivl
jmp
mov
jl
adc
cmc
icebp
shl
lods
out
cmp
ja
or
xchg
mov
cli
les
sub
and
mov
push
insl
ds
push
mov
addr16
dec
outsb
sarb
add
lds
je
les
jne
jno
insb
call
mov
xchg
imul
addr16
inc
out
adc
ret
aaa
jbe
jb
mov
mov
addr16
scas
rolb
sbb
fistps
ret
xor
cmp
lods
xchg
jle
jl
xor
adc
add
mov
mov
adc
mov
mov
mov
mov
fcompl
xlat
leave
shrl
or
add
pcmpgtb
mov
add
lods
je
inc
jl
addr16
les
cmp
push
push
mov
inc
dec
mov
mov
cltd
inc
dec
dec
sub
xchg
add
and
sub
orb
and
ret
push
add
add
and
rclb
inc
xor
cmp
jecxz
add
xor
cmpb
mov
xor
insl
movntq
xorb
outsl
adc
test
dec
mov
add
dec
sarb
mov
add
add
adc
mov
sub
mov
mov
xor
mov
enter
jmp
mov
lods
xlat
sahf
add
cltd
in
add
mov
or
shrl
cltd
sbb
andl
mov
add
outsb
and
rorb
filds
test
inc
inc
imul
add
sbb
ret
and
mov
dec
orb
and
mov
push
cmp
adc
loopne
dec
leave
push
dec
or
xchg
pop
aad
stos
mov
stos
bound
xchg
call
int3
push
add
shlb
aaa
sbb
test
push
jne
pusha
mov
or
adc
and
and
push
inc
shrb
pop
lret
int
dec
test
enter
pusha
or
dec
add
daa
aad
movsb
cltd
and
jmp
nop
std
in
loopne
and
sbbl
jne
adc
iret
int3
pop
leave
enter
dec
inc
and
xor
xor
loope
pop
inc
mov
sbb
loope,pt
add
or
mov
xchg
movsl
adc
scas
and
adc
cmp
add
test
mov
jb
xor
mov
and
sub
into
je
fdivrl
mov
jno
adc
or
mov
mov
adc
or
cmpsl
jne
cmpsb
add
arpl
xchg
sti
push
xchg
cmp
dec
sub
push
leave
push
cmp
inc
sub
jne
call
adc
mov
or
or
int3
pop
jmp
dec
ret
and
jns
push
mov
inc
jns
in
sbb
lock
adc
sbb
xlat
les
push
dec
cmc
call
dec
mov
fisubrs
andl
mov
mov
out
das
push
xchg
xor
sbb
enter
lea
inc
push
jbe
or
pop
add
es
lcall
mov
lahf
mov
xor
sbb
scas
sbb
and
mov
mov
adcb
dec
sbb
icebp
pop
pop
jl
cmp
loope
and
je
imul
pop
loop
or
sub
mov
pop
inc
mov
dec
jae
mov
ficoml
lahf
mov
out
mov
or
mov
fistpll
push
and
scas
adc
push
inc
add
mov
mov
lock
dec
rorb
mov
fcmovb
xor
push
or
or
and
fisubl
push
or
or
or
push
fisubrs
adc
pushf
jle
or
fcos
jle
cmp
lds
ficoms
dec
pop
jb
adc
or
pop
call
pop
fiaddl
push
cwtl
cli
mov
bound
loope
or
cmpsb
jne
or
insl
lret
sub
aas
adc
push
ret
test
test
idivb
or
sub
xlat
inc
adc
add
cmp
loop
ja
cmp
cmp
mov
xchg
and
pusha
popf
mov
mov
daa
scas
test
pop
popa
adc
mov
mov
movb
pop
cmp
push
fsts
pop
add
lea
ja
fldenv
adc
push
pop
add
pop
xchg
or
cmpsb
jae
in
pop
test
xor
pop
xor
xor
ljmp
add
cmp
js
negb
je
lods
loope
loope
mov
jmp
adc
lret
sbb
inc
in
add
and
adc
cltd
sub
mov
lock
je
add
lods
push
clc
mov
push
sar
sar
mov
inc
inc
push
cltd
xor
int
aaa
je
xlat
inc
sar
sub
sub
mov
inc
movsl
sbb
jle
adc
js
lock
into
cmp
jle
sub
xor
jo
xorl
mov
addr16
lock
fwait
adc
clc
cmp
daa
cmp
dec
push
imul
push
lods
dec
pop
loop
dec
call
scas
rcr
cmpsl
cmovge
xor
xchg
inc
test
xlat
sbb
cmp
or
pop
and
inc
popf
adc
cmp
negb
mov
inc
adc
fldt
roll
mov
sub
jle
or
sub
adc
mov
out
dec
mov
jp
add
fld
sti
add
loop
stos
mov
add
fimull
dec
adc
adc
mov
jle
mov
sar
shl
mov
push
add
iret
leave
jle
shl
or
mov
sbb
imul
add
rorl
mov
push
cmpl
and
xor
adc
test
and
sbb
or
dec
and
add
add
sub
gs
or
sub
adc
nop
insb
call
mov
js
dec
fcompl
cld
out
dec
adc
rolb
roll
sub
add
mov
add
mov
mov
inc
and
xchg
test
adc
pop
mov
xor
popf
iret
adc
mov
aaa
btc
mov
movsl
shl
js
jg
jecxz
or
mov
js
push
xor
lods
clc
pop
jl
loope
push
and
lret
and
mov
cs
enter
cld
mov
loopne
pop
rcll
jg
push
pop
and
xlat
mov
inc
inc
sub
pop
insl
cltd
je
mov
dec
jle
inc
jae
dec
adc
xchg
mov
xor
add
stos
aaa
cmc
cmp
push
lods
loopne
mov
ss
testl
sub
or
xchg
neg
sbb
pop
add
adc
adc
lret
xchg
mov
fdivrp
mov
aas
push
ret
add
cmp
jb
cmp
ja
cmp
shll
lods
in
ret
pop
mov
pop
push
xchg
sub
or
sub
dec
js
xchg
das
mov
mov
or
add
mov
aad
sbb
pusha
and
xor
add
shl
dec
jns
mov
cmp
sbb
sbb
movsl
rorb
pop
cmpsl
adc
dec
and
push
fs
dec
push
fdivr
sbb
and
add
ds
sbb
ja
jne
push
cmp
pop
jp
pop
ja
cmpsb
mov
adc
inc
inc
cmp
push
push
ja
and
dec
jp
arpl
icebp
push
lock
mov
or
or
pop
mov
repnz
rorb
test
sub
jno
dec
dec
divl
fildl
repz
mov
or
pop
hlt
movb
xorb
clc
jmp
cmpsl
shl
shr
sub
pop
loop
test
push
inc
fistps
outsb
xchg
rol
loop
clc
sub
push
jo
mov
jbe
and
or
inc
jne
dec
mov
jmp
add
in
jnp
mov
fidivrs
pop
pop
ret
xchg
jne
add
push
sub
and
mov
fs
xor
mov
push
push
jb
sub
push
dec
mov
rcrb
cmpb
jne
jmp
dec
add
lock
ret
out
leave
mov
cmp
jno
dec
sahf
xor
or
push
or
shl
adc
pop
xchg
cli
int3
lock
sub
push
inc
sbb
inc
add
pand
push
or
test
icebp
inc
add
xchg
jge
outsl
mov
shll
cmp
icebp
adc
cmpb
cwtl
jne
xchg
sbb
push
loop
stc
or
xchg
test
inc
add
xor
jb
pop
push
daa
mov
add
xor
fsubr
dec
imul
nop
push
insb
add
sub
push
and
add
rorl
inc
add
add
cmc
into
lods
adc
sub
insb
in
lea
dec
add
add
dec
repnz
nop
inc
inc
inc
inc
jle
cmpsb
imul
push
mov
clc
mov
xchg
mov
mov
imul
in
in
cmpsb
imul
push
clc
cld
cld
push
lea
fwait
jbe
or
jmp
lock
cld
adc
aas
sub
clc
pop
pop
leave
inc
fadds
repz
and
inc
inc
sbb
inc
or
mov
or
cltd
out
mov
jo
neg
adc
pop
stc
pushf
sbb
sub
pop
cmp
ficoml
rcr
add
fsubrs
mov
lods
mov
aas
nop
negl
inc
out
add
xchg
mov
nop
dec
dec
push
pop
xor
mov
shll
sub
xor
cmpsb
fdivs
das
sbb
lcall
adc
imul
imul
orb
push
cwtl
lods
das
bound
pop
lsl
pop
adc
pusha
mov
daa
outsl
sub
or
or
es
scas
or
add
movsl
adc
sub
fadds
sbb
pop
adc
lcall
push
jo
cmp
neg
jmp
sbb
mov
pop
notl
ficoml
jg
aas
test
ret
push
inc
or
mov
inc
test
ja
andb
dec
push
jmp
loopne
pop
mov
adc
inc
cmp
jb
xchg
dec
mov
adc
adc
pop
sysexit
jge
adc
or
repnz
daa
lds
arpl
call
int3
or
inc
lcall
movsb
mov
lea
or
test
adc
fistl
inc
cmp
je
pop
push
and
jne
or
dec
shl
push
adc
or
aam
lret
push
stc
xor
xor
jg
sbb
mov
jne
cmp
and
pop
and
ret
jne
rcrl
cmp
imul
push
out
cmp
je
test
je
shr
and
das
mov
aam
xchg
pop
arpl
sbb
cld
sahf
clc
inc
jne
inc
push
in
jp
outsl
cmp
test
sbb
push
jne
jmp
pop
inc
outsl
insl
sub
sub
jne
insl
jnp
ja
cmp
je
inc
cmp
or
jne
aam
sarb
adc
in
xor
and
xor
clc
inc
mov
mov
adc
loope
out
scas
mov
xor
ret
mov
pmaxub
test
je
lods
test
push
lahf
iret
adc
push
cmpsb
jae
sbb
dec
xor
adc
sub
orb
inc
mov
imul
jne
inc
fneni(8087
or
or
mov
loop
imul
xor
mov
inc
cmp
mov
or
adc
jne
xchg
and
bsf
xor
mov
fsubrs
and
cmp
fisubrs
outsb
pop
inc
mov
bound
mov
shll
fucomip
mov
fs
pop
push
mov
push
mov
inc
mov
add
sar
dec
add
lret
shlb
hlt
or
and
push
jle
call
add
std
mov
pop
jge
add
inc
adc
aam
or
loopne
push
int3
xchg
push
call
cmp
sbb
int3
add
loope
imul
mov
fdivs
roll
inc
nop
aas
enter
inc
inc
sub
shr
rcr
shr
rcr
or
jne
idiv
mov
div
mull
inc
nop
out
shll
cmp
daa
cmpl
jbe
dec
mov
push
inc
repnz
push
fcomip
mov
mov
ds
lods
pop
jmp
fdivl
inc
dec
mov
adc
mov
adc
or
push
jbe
sub
subb
sbb
push
or
fldt
xlat
clc
mov
inc
std
cmp
dec
loope
icebp
or
inc
cmp
push
jl
cmp
jb
or
sbb
add
shlb
push
mov
in
dec
mov
lret
out
add
ret
inc
aaa
das
or
push
je
out
and
lret
or
mov
iret
xor
pushf
scas
mov
call
cld
push
mov
imul
imul
adc
sahf
cmpsb
mov
adc
leave
cmpsb
imul
xor
js
pop
xor
adc
xor
shll
nop
pushf
mov
sub
data16
mov
pushf
push
mov
shll
ss
xor
push
push
push
fnstenv
push
mov
cmpsb
mov
clc
xchg
int3
push
jl
push
push
push
cmp
adc
xor
rcrl
xchg
push
fcmovb
mov
shll
insb
bound
inc
out
idivb
ljmp
mov
dec
rcll
xchg
xor
mov
pop
rcrl
test
js
mov
lcall
mov
fisubrl
dec
rcr
imul
push
mov
lret
insb
mov
leave
sbb
cmp
inc
ds
mov
sub
mov
mov
imul
rolb
lods
inc
lods
dec
cld
dec
and
add
sbb
rcll
test
pushf
and
inc
fldl
movsb
jo
inc
sti
and
jnp
sbb
xor
mov
mov
pusha
and
xchg
sbb
adc
notb
insb
push
mov
inc
mov
imul
cmp
pusha
jecxz
or
test
and
call
aas
xlat
stc
add
movsb
pop
movsl
cltd
push
testl
shrb
aaa
add
mov
outsb
sub
arpl
push
movsb
adc
and
loop
add
cmc
sub
sbb
shll
add
inc
imul
sbb
ljmp
arpl
roll
inc
fbld
adc
push
inc
clts
outsl
and
dec
inc
add
and
outsl
insb
jne
mov
in
das
jge
sbb
sbb
sbb
fdivrp
and
xchg
shlb
cmc
adc
adc
popa
pusha
and
js
roll
arpl
push
cmp
xor
add
mov
mov
and
fwait
add
in
push
outsl
dec
iret
pop
and
push
pop
jb
xchg
stos
mov
cmpsl
pop
add
sub
add
pop
sbb
dec
mov
repz
jo
sbb
mov
fstp
inc
xchg
adc
rcr
fmuls
adc
add
xchg
insb
loopne
imul
mov
sbb
mov
mov
in
add
jno
or
ja
and
sahf
add
jmp
mov
aad
push
pop
in
int3
sbb
pop
roll
loope
push
pop
jge
fs
aas
sbb
test
xchg
mov
xor
mov
and
std
jb
push
aas
dec
imul
or
arpl
lock
jo
lret
aam
jnp
sarb
out
adc
inc
mov
scas
aaa
gs
insb
arpl
cwtl
mov
jae
lock
push
fildl
adc
adc
sub
testl
mov
dec
xchg
add
sbb
jnp
insb
mov
addb
xor
cmpsl
cwtl
insb
xchg
sub
jae
dec
faddl
push
fistl
mov
mov
mov
pop
aas
dec
imul
ret
cli
jmp
pop
stos
in
cmp
insb
add
xchg
add
lahf
and
fisubs
dec
push
scas
addr16
add
fcomps
fs
add
inc
imul
ja
lcall
xchg
and
outsb
sbb
mov
imul
test
jno
outsb
add
push
andb
or
out
mov
inc
push
jne
insl
or
cmpsb
inc
pop
add
sub
cltd
xchg
mov
inc
add
pop
jmp
ja
push
lods
and
ss
out
mov
inc
dec
inc
out
xlat
add
lods
stc
push
jbe
test
es
or
ret
xchg
fabs
or
push
pushf
lahf
test
insb
cmpsb
and
add
or
je
sbb
dec
jp
ljmp
add
subb
inc
adc
pop
xor
outsl
sub
nop
cmpsl
js
cmp
dec
dec
pop
inc
adc
hlt
sbb
add
arpl
into
inc
imul
mov
mov
push
add
jge
dec
jne
incl
sub
and
rolb
repz
push
fistpl
push
mov
pop
xchg
lahf
jae
dec
push
sub
xor
mov
loopne
pop
ret
leave
pop
mov
xchg
add
jbe
arpl
and
loop
addr16
mov
adc
xchg
insb
mov
mov
and
addr16
shlb
inc
and
pop
jg
pop
mov
pop
sbb
dec
fwait
inc
inc
push
js
ret
mov
testl
dec
cmp
adc
jnp
cmp
mov
bound
pop
add
pop
push
pop
push
pusha
aad
and
inc
into
sbb
jae
mov
pop
mov
xor
or
pop
insb
inc
inc
pop
dec
pop
pop
pop
scas
mov
mov
and
pop
test
adc
je
push
dec
cmpsl
and
pushf
and
ljmp
dec
outsl
inc
dec
outsl
jne
push
loopne
xor
leave
xor
les
and
and
jg,pn
add
cmp
xor
add
das
dec
sub
mov
insb
jmp
imul
incl
cmc
push
pop
inc
inc
dec
push
push
inc
dec
inc
outsl
in
add
sbb
test
jae
and
dec
sbb
ret
push
pop
sub
push
pop
cltd
lods
sbb
or
add
fdivr
push
xor
xor
add
xor
aaa
ss
fidivs
outsb
jle
xor
push
fdiv
fistps
xor
pop
push
dec
sbb
loope
cmp
ss
movsl
sub
and
popf
loope
dec
xor
je
inc
dec
sub
and
imul
and
and
xchg
fs
mov
mov
push
in
sub
or
inc
add
jbe
mov
aaa
cmp
cmp
and
or
loopne
add
or
out
aad
shlb
push
pop
arpl
mov
enter
mov
add
add
in
lods
aam
dec
pop
pop
pushf
dec
dec
fsts
xor
movsl
lds
lret
arpl
mov
loope
push
scas
shlb
push
pop
fadds
pop
and
loope
and
push
insl
imul
push
es
lret
subb
and
dec
mov
dec
adcl
push
lods
jb
and
xchg
cmp
jl
data16
pop
mov
or
stos
pop
jne
inc
dec
cmp
xor
arpl
test
pop
mov
inc
ss
mov
je
xchg
insb
or
loop
out
lahf
rdpmc
or
icebp
scas
cmp
push
aaa
sub
add
outsb
mov
jns
pushw
iret
into
es
ja
mov
jmp
sub
push
notl
mov
and
pop
mov
pop
clc
push
add
mov
subb
imul
outsb
sbb
filds
and
outsb
mov
je
cs
jno
adc
les
push
xorl
xchg
mov
dec
push
dec
test
sbb
into
ja
and
xor
cmpb
push
in
jne
jae
mov
and
mov
in
sti
sub
je,pn
sub
lds
mov
sub
jl
hlt
and
or
add
push
rorl
movsb
push
add
sbb
xor
add
or
out
xorb
push
or
mov
pop
nop
or
mov
daa
adc
adc
and
xorl
or
das
push
xorps
mov
mov
insl
push
imul
ss
pop
andb
cmpb
add
or
test
xchg
ss
sahf
mov
push
sbb
inc
xor
xor
sbb
or
adc
and
xorb
cmp
lcall
add
int3
in
push
in
add
sbb
or
pusha
push
and
das
insl
adc
mov
add
push
add
or
add
jnp
push
mov
sbb
push
bound
fsubrs
cld
lods
cmp
pop
xor
adc
add
add
leave
mov
arpl
push
repnz
test
pop
jo
jb
stos
in
xchg
jae
jns
and
add
sub
dec
pop
push
jnp
add
add
leave
mov
push
sub
xchg
mov
insl
add
mov
jne
mov
push
ja
stos
jbe
leave
jns
add
xchg
mov
add
add
add
add
mov
add
mov
jbe
mov
add
add
dec
pop
xchg
incl
add
in
jb
pop
sbb
xchg
or
or
adc
sub
dec
xchg
sbb
xchg
mov
sub
dec
sub
dec
xchg
sub
cmp
dec
xchg
mov
sub
dec
xchg
xchg
mov
sub
dec
pop
pop
dec
xchg
sub
jnp
sbb
xchg
xchg
mov
sub
xchg
les
enter
dec
lret
xchg
sub
fsubrp
pop
and
xchg
sti
add
or
push
xor
mov
aas
inc
and
add
aam
jg
add
add
jmp
pusha
dec
push
rclb
add
pop
push
inc
addl
mov
dec
cli
popl
sub
adc
sub
ret
adc
push
add
pop
xor
jmp
cmp
ret
or
jge
and
clc
mov
mov
pushf
outsl
test
cmp
pop
add
daa
clc
mov
imul
xor
sub
nop
push
mov
add
adc
sub
adc
push
out
or
dec
add
xor
sbb
mov
inc
adcb
push
aas
sub
inc
fs
pop
xlat
shl
push
hlt
ret
out
inc
cmp
gs
pop
adcb
sub
adc
jnp
test
adc
rolb
daa
push
jae
or
mov
out
fidivl
mov
pop
insb
pop
pop
mov
cmovb
inc
fstpt
mov
psrad
pop
mov
cs
lret
sbbb
mov
jo
in
mov
xchg
pop
dec
fbstp
fcomip
ja
fcompl
mov
sbbl
stc
pop
fcmovnbe
pop
repnz
push
xchg
adc
jbe
xchg
out
filds
in
in
cld
notl
push
or
jl
mov
xchg
ja
fists
sbb
shll
pop
push
pop
pop
or
pop
sti
repnz
pop
mov
mov
fs
lds
pop
insl
lret
in
dec
mov
pop
dec
subl
pop
sub
lret
repnz
test
pop
sbb
cld
das
jp
mov
pop
cmp
test
aaa
push
push
pop
dec
adc
std
lea
sbbb
mov
cli
lret
ja
lods
and
pop
push
push
sub
push
mov
push
push
jl
daa
inc
cs
imull
decl
pushf
daa
int
mov
jg
stos
sbb
std
lahf
fistpll
cmp
popa
jge
adc
add
pop
shlb
or
mov
cs
pop
pushf
popl
jbe
pop
add
pop
inc
mov
repnz
pop
cs
imul
fldl
jp
jge
vpsrlq
inc
aas
sub
rcl
daa
pusha
leave
mov
testb
mov
pop
mov
or
das
js
pop
dec
ret
ja
lret
jecxz
into
aas
xchg
movl
shl
xchg
jnp
aaa
add
xor
inc
xor
fiaddl
push
in
addr16
add
push
call
push
sub
cmpsb
imul
imul
imul
fisubs
dec
and
cmp
cmpsb
imul
push
inc
pop
adc
adcb
mov
out
data16
pushf
push
push
imul
push
push
insb
lcall
push
mov
rcrl
clc
xchg
int3
push
jl
push
push
push
cmp
adc
lcall
push
fcmovb
mov
imul
sub
cmpsb
push
inc
out
idivb
ljmp
out
dec
shll
xchg
xor
rorl
imul
mov
mov
movsb
test
js
insb
lcall
clc
push
fisubrl
mov
pop
xchg
outsb
bound
push
iret
xor
mov
insb
ss
inc
subb
adc
sbb
idivb
sub
jl
mov
bound
insb
and
or
adc
lods
dec
ja
lcall
lahf
subl
ret
mov
push
mov
nop
cmp
add
sbb
mov
mov
adc
jnp
data16
call
sarl
add
or
push
das
dec
add
daa
push
pusha
pop
cs
xor
lcall
gs
or
add
enter
xchg
and
dec
add
les
sbb
jne
sbb
sbb
sbb
repz
imul
adc
jg
jns,pt
push
adc
out
cmp
xlat
dec
and
add
push
rolb
push
adc
add
fwait
xchg
mov
pushf
or
sti
xchg
mov
push
mov
test
std
aad
in
out
fucomp
fs
in
test
adc
mov
sub
roll
xchg
ja
sbb
push
out
popa
data16
cmpsl
loopne
insl
iret
pop
mov
mov
jb
mov
cmpsb
ss
scas
out
inc
sbb
jmp
pop
aaa
push
xchg
enter
outsb
adc
jg
enter
int
outsl
aaa
fwait
out
jae
iret
jae
decb
jg
mov
mov
mov
jae
fmuls
push
test
daa
mov
stc
cld
call
bound
jmp
ret
sahf
jp
mov
iret
imul
jp
dec
rcrl
int3
xchg
jae
notl
xchg
push
incb
mov
xchg
fwait
jge
shrb
mov
cmp
sahf
jmp
pop
adc
dec
push
sti
adc
xchg
sub
mov
xchg
xchg
mov
pop
mov
pop
out
lcall
enter
stc
fidivrs
mov
push
or
in
mov
mov
or
decl
pop
inc
scas
popf
pushf
mov
push
mov
sub
push
mov
movsb
lret
call
lea
roll
push
mov
imul
sub
arpl
push
sub
cmp
loop
iret
push
push
xor
inc
bound
ljmp
ss
dec
mov
adc
rcrb
lcall
lret
fnsave
and
xor
dec
mov
and
jecxz
imul
pushl
mov
div
ret
and
jae
and
es
push
push
inc
js
sahf
sar
inc
lcall
pushl
cmp
lock
inc
ds
lcall
aas
shl
out
ds
scas
divl
sub
loop
push
pop
push
mov
sub
or
xor
push
dec
adc
call
and
jmp
sti
es
xchg
sarb
cld
sbb
outsb
inc
pop
sarl
test
leave
adc
add
incl
jp
pop
mov
ja
imul
mov
jmp
stos
mov
sbb
shlb
test
call
and
sub
movsbl
dec
push
cmp
dec
sub
ljmp
aad
mov
shll
loop
push
xlat
icebp
push
fidivs
jge
clc
adc
and
pushl
inc
stc
aad
mov
cmpsl
xor
push
pop
pop
and
pusha
scas
dec
rorl
cli
orb
push
daa
dec
push
ja
xchg
fdivl
mov
loop
mov
mov
jge
add
mov
enter
out
push
aas
repz
xor
subb
xor
out
call
cmp
mov
mov
jmp
cltd
sbb
icebp
xor
mov
xchg
dec
cmp
sub
movsl
or
cs
mov
clc
lcall
ja
or
mov
std
movsb
repz
movsl
out
xor
or
leave
pop
or
sub
movsl
ror
out
lret
fstl
pusha
loopne
imul
sub
aad
sbb
add
out
dec
stos
dec
mov
add
shrb
stc
scas
xor
call
addr16
das
pop
pop
mov
daa
mov
sbb
shll
bound
scas
sub
aas
nop
xor
call
push
inc
loopne
mov
fsubrl
popa
cwtl
or
push
cltd
lods
in
cs
cmp
std
ljmp
aam
decl
lock
sub
xchg
dec
ret
push
pop
adc
pushl
aas
xor
pop
data16
add
out
fdivrp
add
testl
cmp
xchg
mov
decl
adc
cmp
mov
ds
mov
out
mov
jle
str
movsl
xchg
into
push
lds
push
push
and
mov
icebp
aas
adc
inc
xchg
insl
xchg
mov
jae
or
cwtl
jg
incl
cwtl
mov
and
sbb
inc
mov
or
pop
jge
jns
mov
sub
push
cli
pop
outsb
fidivl
pop
movsl
adc
add
hlt
les
in
jg
incl
test
pop
cmpb
dec
pop
out
and
dec
pop
dec
push
nop
rcl
mov
shl
ljmp
inc
push
or
push
sbb
lahf
adc
inc
movsb
sbb
jns
scas
sub
or
or
fbld
adc
hlt
stos
es
push
cmpsl
mov
roll
subl
mov
les
fdivs
daa
cld
cli
mov
test
cltd
aaa
ds
pop
push
sbb
daa
daa
ds
sti
rcrl
arpl
ficoml
mov
adc
arpl
orl
jne
aas
cli
das
dec
imul
xchg
xchg
mov
mov
mov
call
cld
adc
mov
xor
push
and
cmp
inc
imul
mov
call
mov
pop
ss
cli
dec
mov
loope
mov
fiadds
cld
int
icebp
sarl
mov
cmpl
pop
mov
in
push
cmp
enter
daa
pop
imul
pushl
add
les
jmp
cli
mov
or
fwait
inc
lds
movsb
cld
incl
insl
cmp
scas
test
clc
pop
stos
pop
dec
xchg
mov
ror
aas
loope
mov
aas
push
ja
mov
icebp
push
jmp
pop
enter
out
in
xchg
lods
cld
mov
jge
loop
cmp
movsl
imul
dec
cmp
push
xchg
mov
adc
dec
mov
adc
int
rclb
mov
ror
mov
jae
jnp
mov
lcall
clc
xchg
push
sti
adc
jmp
or
push
adc
xor
xchg
dec
sahf
mov
jns
mov
out
cmp
incl
decl
xchg
xor
movsl
pusha
xchg
pushf
mov
cmp
ljmp
mov
std
pop
pop
adc
mov
outsl
pop
out
rcl
pop
pop
imul
ud0
repnz
inc
mov
mov
mov
mov
das
fneni(8087
mov
xchg
push
or
imul
int
popf
pop
imul
or
cltd
filds
jbe
pushf
popa
cmp
cmp
shll
out
cmp
std
inc
insb
orb
mov
xorl
lds
fsubl
inc
inc
pop
mov
out
decl
dec
push
add
rcrb
or
adc
jns
mov
lods
inc
xor
loop
shll
push
subb
call
lods
pop
sbb
jns
das
repz
std
arpl
sub
mov
lods
ret
incl
jg
dec
xor
popa
decb
inc
add
inc
mov
std
or
mov
lcall
call
cmp
sub
gs
fucom
mov
cmpsl
jg
push
lret
je
mov
inc
or
add
or
xor
sub
pop
pop
fdivr
lcall
popf
movsl
mov
test
in
cmp
push
mull
outsl
cwtl
cmp
xor
pushl
addr16
je
sub
xchg
mov
cmp
push
jge
inc
pop
sbb
clc
jecxz
call
xor
mov
lods
shl
mov
push
fidivs
incl
out
mov
sahf
pop
jge
pop
notb
pusha
push
outsl
jnp
lds
adc
and
ret
jmp
mov
int
xor
add
imul
jle
imul
shrl
push
stos
shll
sub
mov
das
jnp
jo
mov
add
iret
lcall
nop
test
test
ds
adc
pop
loopne
mov
mov
dec
roll
repz
sbb
lods
idivb
jmp
fidivs
xor
sbb
mov
pop
out
xchg
cld
jmp
pushf
or
sbbl
jp
push
popa
lahf
xchg
mov
pop
jecxz
pop
cmp
ss
stos
or
add
cmp
jo
and
push
adc
jmp
xor
dec
popa
or
ss
dec
xor
ss
subb
ficoml
push
xchg
insb
pop
sar
jmp
mov
add
and
push
push
xchg
pusha
cmpsb
stos
cmpsl
es
lahf
jl
add
fwait
das
int3
aad
and
aas
adc
or
jne
inc
cltd
jmp
cmp
and
inc
cmpsb
mov
imul
std
roll
loop
in
ljmp
mov
lret
pop
ds
lcall
repz
adc
idivb
cmp
lods
xor
addl
aaa
arpl
ljmp
mov
mov
push
lds
or
stos
jmp
out
pop
sti
repz
clc
incl
sub
cmp
adc
dec
jmp
add
mov
mov
jg
inc
test
imul
jp
ret
mov
sub
push
pop
and
jmp
addr16
jb
lods
or
push
fdivs
arpl
dec
in
or
decl
jne
fs
addl
or
stc
std
paddusb
push
push
hlt
repz
iret
call
cmpb
sub
and
xchg
jmp
xchg
shll
in
mov
jmp
aam
sti
or
inc
or
mov
sbb
psubusb
mov
test
or
inc
ja
decl
push
popf
push
inc
fwait
and
mov
test
and
mov
adc
push
fldcw
lock
daa
jge
rol
and
shll
sti
test
mov
adc
push
insl
ret
jo
incl
push
daa
arpl
xchg
dec
mov
cmp
cli
aaa
mov
shlb
call
hlt
pop
hlt
addr16
and
ja
pop
cmp
out
push
jb
jmp
adc
mov
fucomip
add
cwtl
xchg
out
insl
inc
sub
outsb
hlt
add
dec
sbb
jmp
sahf
pop
fucom
sub
loop
push
roll
mov
pop
dec
loope
cmp
push
lock
test
pop
cmp
pop
xor
sbb
cmp
gs
cmpsb
sbb
call
dec
rcl
mov
movsb
mov
sbb
cmp
or
pop
cs
decl
sub
mov
inc
scas
es
xor
rcrb
push
ja
and
incl
fdivrs
and
ror
cmp
incl
fdivrl
mov
add
stos
insl
add
aaa
ja
xor
cmove
cmp
lds
iret
jmp
mov
call
sahf
dec
mov
rcrl
or
jno
mov
rolb
leave
push
in
cmp
sub
enter
pusha
add
incl
pop
mov
mov
inc
mov
xchg
inc
xor
test
sbb
clc
movsl
imul
adc
mov
pushl
push
int
xor
xchg
fs
jb
in
aaa
nop
sub
xor
jns
arpl
aas
test
in
inc
dec
push
out
push
enter
nop
dec
pop
daa
inc
stc
scas
jmp
or
add
out
sahf
xchg
stos
enter
mov
adc
sbb
bound
fs
repz
inc
lret
adc
jg
push
adcb
and
push
sub
sbb
aaa
adc
push
and
ret
cs
pushl
sti
into
lret
arpl
pop
push
or
aas
pop
cmpsl
arpl
xor
sbb
add
mov
bound
loope
fstpl
and
data16
ret
int
lcall
addr16
jl
xlat
pushf
dec
inc
inc
mov
lds
mov
ja
pop
adc
cmpl
sub
lds
adc
mov
lods
inc
aaa
mov
ja
pushl
xor
loop
loope
cmp
je
mov
outsl
lret
fiadds
cld
loope
adc
mov
mov
mov
sub
push
add
ljmp
sub
addr16
fmuls
cmp
push
loope
push
xor
stos
sub
sub
rcll
add
incl
cltd
sub
loop
inc
call
aad
lock
sti
sbb
sar
incl
cmc
dec
mov
shl
js
jg
xor
imull
jne
outsb
and
clc
or
adc
sbb
xchg
lea
or
mov
inc
pusha
imul
xor
fmull
xchg
jl
ds
sbb
xchg
repnz
mov
mov
pop
sub
pushl
js
faddl
dec
push
icebp
enter
adc
pop
lods
push
mov
sbb
push
sbb
bound
cmp
mov
arpl
mov
repnz
das
xrelease
jmp
sub
nop
cmpsb
fsubs
in
mov
lahf
test
outsl
jge
call
out
cmp
pop
push
fwait
std
pop
mov
jb
and
lods
cmc
sarl
decb
roll
mov
xchg
das
ret
xlat
sar
out
jb
mov
fldln2
les
insb
xor
cltd
fldl
jp
decl
arpl
adc
pop
sbb
xchg
loope
push
jo
jmp
ret
or
ljmp
inc
dec
insl
sahf
imul
mov
out
push
pushl
inc
ljmp
inc
sti
inc
or
paddd
dec
cs
aas
out
add
push
enter
sub
push
in
mov
shrl
dec
dec
jno
call
stc
sbbb
fs
sar
ljmp
rclb
xchg
outsl
out
and
pushf
push
negb
lcall
and
sbb
lahf
enter
out
mov
int
scas
and
pop
lock
lea
pop
or
push
bound
adc
sbb
cmp
aaa
and
jg
push
ljmp
ficoms
xor
lret
jbe
push
faddl
push
or
sbb
cmp
push
mov
call
pop
ds
push
xchg
insb
pushl
mov
fscale
push
test
lret
lahf
incl
in
lods
mov
test
adc
nop
mov
xlat
jle
pop
addl
cmp
jmp
fbstp
les
fsubl
inc
fsubrl
into
xor
mov
iret
mov
aas
rorl
popa
pop
sbb
push
adc
faddp
or
mov
jp
aas
in
loop
xlat
xor
rcll
call
xor
cwtl
push
rcrl
or
mov
into
cmp
popa
and
aaa
pushl
ret
push
sbb
nop
outsb
inc
xchg
insb
mov
jno
inc
fistps
adcb
adc
call
shrl
mov
and
inc
xchg
cmp
or
pop
mov
push
jecxz
mov
sbb
inc
or
and
pop
in
jo
aam
adc
call
adc
add
pop
pop
push
mov
or
cli
push
ret
outsl
jmp
aas
ds
fdivs
popa
xchg
inc
sti
xchg
loope
fucomi
enter
loopne
arpl
jge
repnz
inc
aaa
sbb
inc
jecxz
lret
aad
mov
sbb
add
jecxz
or
sti
or
and
loopne
cmp
cmp
cmp
inc
lret
outsb
cmpsb
es
not
mov
ss
or
and
cmp
inc
daa
es
call
incl
into
mov
mov
scas
sahf
jne
loopne
dec
stc
clc
aaa
ret
mov
call
pushl
add
sub
jg
pop
dec
cltd
sbb
dec
sub
xchg
inc
scas
adc
dec
lcall
out
jge
mov
mov
cltd
rclb
jmp
jne
mov
or
daa
movsb
sbb
sub
sbbl
decl
scas
inc
lods
repz
jp
pop
js
in
jnp
inc
inc
daa
or
outsb
les
mov
int3
pop
movsb
mov
xor
xor
icebp
insl
push
lods
mov
out
add
ljmp
outsb
jmp
les
subl
pop
hlt
in
sub
lret
clc
pushl
jne
inc
dec
pop
xchg
jae
cs
icebp
jnp
mov
push
fs
ja
inc
dec
dec
cmpb
fs
aas
scas
iret
dec
pop
in
mov
jg
lcall
mov
pop
xor
iret
push
pop
cmp
inc
jae
jmp
mov
int3
test
das
xchg
xlat
cli
dec
mov
jle
in
fnsave
subl
lcall
imul
mov
out
sbb
inc
mov
lds
out
mov
int
decl
ficoms
pop
loope
or
cmc
cmp
sbb
add
pop
icebp
pop
loop
sbb
leave
pop
hlt
call
arpl
sub
and
lcall
jnp
sub
mov
mov
arpl
outsb
fildll
pop
jge
addr16
xchg
cmc
mov
nop
mov
sahf
aas
sarb
leave
or
ljmp
and
jmp
sbb
pop
clc
decl
imul
mov
mov
push
bnd
xchg
jns
push
sar
ljmp
jl
pop
push
adc
fsubp
xchg
lret
enter
mov
test
incl
cwtl
shll
nop
lahf
mov
dec
int3
sub
inc
aas
sar
add
pop
inc
add
cs
fbld
pushl
lods
lods
mov
loope
mov
and
xor
sub
outsb
leave
dec
fwait
js
sbb
std
cmp
repnz
xchg
mov
nop
stc
ffree
jmp
pop
or
pushl
add
hlt
sahf
jg
inc
fisttpll
inc
mov
icebp
xor
out
or
pushl
adc
insb
push
jo
in
jmp
inc
insb
es
inc
and
jmp
pop
fcoms
jae
add
jmp
sub
shlb
loop
or
mov
add
ficoms
xor
mov
popf
jp
sub
jnp
mov
push
out
mov
cmp
pop
movsl
sti
test
add
ljmp
out
rorb
xor
sub
lods
psllw
lret
lods
out
shlb
mov
inc
fadd
sub
pop
adc
movsl
and
adc
jmp
int3
iret
xor
and
add
xchg
mov
cmpsb
or
add
or
incb
cld
mov
xor
aas
daa
add
dec
sbb
dec
test
xchg
cmp
sbb
or
adc
inc
mov
in
adc
pushl
pop
jp
jmp
inc
leave
cmp
and
mov
das
xor
adc
mov
mov
pushf
out
sahf
sub
adc
mov
jg
push
orb
pop
test
dec
cmp
call
add
aas
shlb
push
xlat
add
cmp
jg
call
add
inc
push
inc
in
daa
jp
popa
sub
and
fisttpl
out
dec
sbb
aas
jmp
jg
pop
daa
cmpl
xchg
xor
inc
mov
popa
and
lcall
mov
or
jecxz
ret
lcall
arpl
pop
cld
decl
cltd
xchg
pop
or
sub
or
lret
xchg
jmp
mov
ljmp
xor
es
dec
das
outsl
cmc
jbe
outsl
push
stos
mov
or
mov
mov
sarl
loopne
sbb
jnp
sub
jno
jmp
icebp
sarl
mov
loope
out
cld
ja
jp
pop
and
push
inc
pop
lcall
incl
and
push
push
pop
inc
ja
mov
pop
adc
ja
nop
pop
cmp
notb
inc
mov
aam
stos
jmp
mov
pusha
jns
sbbl
mov
loopne
call
scas
ret
push
xor
sarb
push
shl
stos
rorb
stos
dec
push
fstp
push
loope
lret
decl
mov
mov
test
sub
push
xchg
xor
push
cmp
sbb
loope
loopne
lods
lods
mov
xor
jmp
shlb
fdivr
push
jmp
out
fidivrl
sub
xchg
scas
mov
cld
out
push
inc
or
mov
push
mov
iret
mov
cltd
inc
cltd
lds
iret
mov
loope
lret
iret
pop
sbb
decl
push
or
lock
int3
sahf
adc
mov
mov
js
pusha
daa
adc
aas
data16
lock
loope
fldt
inc
insb
in
mov
incl
mov
push
pushf
enter
into
pop
dec
mov
mov
sbb
add
incl
adc
loopne
pop
and
iret
adc
ljmp
mov
xchg
adc
jp
or
pop
dec
into
jge
push
sbb
dec
cld
sub
call
jmp
sub
or
test
jmp
push
repnz
decl
icebp
lcall
popf
mov
xchg
mov
adc
pushl
cmc
push
mov
lods
xchg
cli
ja
xchg
and
dec
in
mov
sar
ud0
out
xchg
outsb
js
sbb
mov
lds
jg
inc
fs
mov
decl
clc
and
push
mov
jne
int3
cmpsb
mov
dec
loope
sahf
jb
push
mov
adc
call
push
movsb
dec
arpl
or
test
dec
fdiv
stc
fs
dec
xchg
es
cld
icebp
dec
pop
mov
push
test
add
pop
jl
xor
enter
adc
fnstenv
jg
adc
push
adc
mov
mov
push
mov
popf
jae
lds
lcall
cs
xchg
ja
sbb
mov
dec
ss
xor
lret
xchg
mov
pushl
std
jns
movsb
dec
imul
pop
sbb
test
pop
mov
pop
xor
inc
fs
adcb
out
adc
push
jecxz
lcall
push
out
cmp
popa
and
sar
call
aam
cltd
jmp
flds
iret
ds
adc
call
aas
mov
fs
enter
push
or
fists
cmp
into
inc
dec
lods
jg
pushl
aam
sahf
pop
mov
in
push
mov
call
data16
mov
bound
dec
rclb
cs
jge
jno
mov
cli
dec
sbb
push
repnz
lea
inc
adc
or
scas
jne
sub
sbb
xor
mov
dec
cwtl
push
dec
sub
jmp
stc
aam
sub
xor
xor
mov
mov
pop
sbb
aas
mov
mov
call
push
in
scas
pop
adc
inc
sbb
and
push
or
in
fidivs
push
popf
inc
xor
arpl
pop
jno
cmpsl
mov
fwait
adcb
test
mov
enter
test
scas
ret
cwtl
jmp
ss
pop
sbb
sti
gs
pop
xor
pushl
fistl
loopne
testl
cmp
ftst
mov
mov
idiv
push
jle
xor
or
mov
mov
popa
push
jnp
rcrb
sub
sahf
and
dec
adc
jae
fnsave
dec
data16
decl
lret
cmp
cmp
mov
push
lds
add
mov
mov
pop
stc
sbb
mov
jmp
pop
pushl
mov
cmp
and
sbb
ja
pop
insl
out
lcall
cld
add
loop
xchg
icebp
push
mov
mov
adc
lock
jmp
out
cmp
shlb
pop
add
mov
cmp
jne
in
push
mov
decl
and
loop
jmp
xor
outsl
in
insl
and
sbb
insb
iret
stos
xchg
fiaddl
js
rcll
cmp
aaa
mov
adc
clc
ret
dec
push
lcall
push
mov
imul
jg
ljmp
sub
int3
xchg
das
mov
nop
mov
inc
xchg
lods
xchg
loop
sbb
jmp
addr16
vmread
scas
sti
ret
les
cs
adc
xchg
push
decl
hlt
sbbl
xchg
xlat
xchg
sar
out
mov
pusha
outsl
and
pop
mov
roll
jmp
push
mov
cmp
int3
mov
lret
fdivrl
cmp
and
call
cli
cltd
cli
add
xchg
sub
and
aas
neg
incb
in
xor
and
jg
decl
dec
xor
fs
jno
in
mov
jmp
cmp
pop
sarb
gs
inc
push
cwtl
push
je,pn
adc
cmc
cmp
mov
icebp
or
lret
add
pop
mov
loop
cmp
add
mov
aad
xor
notl
test
cmp
add
fidivrs
lcall
and
rcll
push
and
and
imul
dec
ret
idivb
xchg
sub
call
push
out
lret
xlat
inc
scas
or
idiv
xchg
ljmp
cmpsl
xor
imul
and
loop
add
int
repnz
pop
lcall
jmp
add
push
test
out
stos
fcompl
out
mov
stos
repz
ret
ja
pop
inc
loopne
jge
push
iret
jne
push
inc
adcb
jmp
scas
dec
popa
test
insl
idivl
cld
maskmovq
idivl
in
fdivr
sub
aas
push
jmp
or
inc
mov
insl
jns
stos
push
lcall
push
cwtl
pushf
lahf
rcrl
mov
sub
in
jmp
mov
outsl
jg
inc
mov
mov
pop
dec
les
movzwl
test
or
add
jmp
mov
lock
dec
adc
test
inc
lret
add
lret
mov
mov
incl
mov
pop
inc
sub
mov
adc
fidivs
jl
stc
inc
call
lock
ud0
inc
and
mov
andb
inc
pop
xchg
lcall
imul
insb
mov
movsb
cwtl
mov
rol
test
mov
inc
stc
fdivp
mov
fsub
jnp
push
mov
xchg
cmp
cmp
push
inc
mov
arpl
fidivs
daa
dec
jnp
jbe
mov
mov
incl
clc
lods
arpl
lahf
into
lret
mov
jg
cltd
pop
out
divl
xchg
lahf
aas
pop
ds
aas
test
mov
mov
outsl
cli
jg
cmpsb
lods
out
lahf
inc
call
clc
jg
cld
jg
sti
out
mov
or
pushl
sbbl
xor
rol
add
pushf
mov
sti
pop
jae
sahf
jl
shr
sahf
sub
ret
push
js
decl
cmp
jns
sbb
jno
push
sbb
xor
repz
pop
iret
aas
mov
cmp
loop
cmp
out
cmp
cld
push
jns
in
std
call
icebp
inc
sahf
sbb
rcrl
inc
aas
xchg
stc
and
lock
lret
inc
push
out
sarl
jmp
mov
sbb
aas
pop
loopne
decl
sbb
pop
sti
addr16
fistpll
imul
mov
jge
mov
push
addr16
fdecstp
mov
dec
je
dec
or
ja
ds
arpl
push
and
jl
std
jg
maskmovq
negl
and
fdivrl
lds
lock
jns
mov
jecxz
adc
loope
adc
jns
jmp
fdivl
ror
fcmovne
cmp
sti
stc
xlat
movsl
sti
cli
lcall
mov
fucomip
ljmp
cmpsl
in
jg
lahf
fsubl
pop
decb
addr16
arpl
mov
xor
push
aas
push
mov
sub
jle
and
xor
jle
jg
ljmp
notb
fstpt
cli
fistps
clc
std
pushl
ljmp
repz
popa
lahf
push
ljmp
arpl
xor
sub
inc
ljmp
notb
adc
push
cmp
pusha
or
sbb
clc
cld
jmp
shrl
dec
lahf
dec
jmp
mov
jg
addr16
stc
fistpll
fimull
repz
xchg
jecxz
jno
and
cmpb
cld
call
mov
aas
pop
ja
jg
fimuls
cltd
mov
jmp
outsl
int
lods
stc
lahf
xor
xor
cld
mov
inc
dec
dec
stc
sub
das
loop
es
xchg
repnz
jns
gs
jnp
ret
dec
scas
shrl
mov
in
stos
mov
inc
jmp
stos
in
push
mov
mov
out
ficoml
mov
cmpsl
scas
std
xor
mov
out
enter
mov
pop
divb
pop
pop
cmc
xor
mov
pushl
stc
pop
ret
sarl
nop
jnp
loop
pop
hlt
fstp
test
push
repz
jmp
lcall
sbb
adc
mov
jl
rcrb
popa
fisttpll
je
cld
dec
pop
sarl
jecxz
out
icebp
mov
xchg
mov
inc
arpl
ja
cld
sbb
cmc
in
add
jg
pop
inc
lock
lret
ret
dec
std
dec
ror
shlb
daa
call
dec
mov
js
in
daa
xchg
push
cli
arpl
xchg
jl
pop
mov
es
adc
jmp
mov
cmp
icebp
in
bsf
out
lcall
shl
repnz
inc
sbb
dec
push
imul
loop
incl
mov
push
pop
subb
jbe
lahf
nop
xor
mov
mulb
or
lcall
js
fst
or
icebp
pop
cld
les
pop
ljmp
and
adc
decl
das
in
ja
hlt
mov
xchg
pop
sub
sbb
or
mov
mov
out
fwait
cvtps2pi
enter
clc
fwait
cld
cmp
push
enter
xchg
pop
fildll
ja
pop
repz
adc
js
push
js
jnp
sbb
inc
pushl
in
and
sbb
dec
jle
loop
lock
ja
or
ret
push
inc
mov
xor
out
inc
cli
shll
jbe
decl
jle
dec
mov
jo
ret
dec
add
dec
in
int3
jno
inc
out
incl
test
jno
push
decb
lret
mov
dec
fstl
loopne
lcall
fadds
ret
outsb
clc
push
add
test
repnz
sarl
arpl
inc
aaa
add
cmpsb
cwtl
jnp
xlat
dec
cmp
or
stc
mov
mov
and
xchg
cmp
dec
and
idiv
mov
adc
sbb
int
sbb
jmp
idivb
cmp
dec
aad
flds
aaa
add
shll
notb
icebp
lret
sub
icebp
mov
incl
dec
ficoml
mov
aam
dec
dec
inc
pop
xor
scas
sbb
out
loop
dec
push
cld
lcall
push
push
addl
pop
inc
cld
cmp
lcall
movsl
mov
cmp
sub
xchg
mov
adc
mov
sbb
daa
xchg
out
lds
xchg
insl
ljmp
lret
sar
jmp
inc
cwtl
arpl
nop
negl
push
ljmp
and
lods
xor
xchg
jle
jg
mov
jmp
mov
loopne
fisttps
std
xor
mov
imul
out
add
push
pop
mov
adc
sbb
pop
cld
ret
push
mov
jmp
inc
testl
aas
jae
or
mov
popa
std
fcomps
push
sbb
fs
inc
loopne
push
push
int
xor
std
leave
nop
or
pop
test
jno
les
dec
test
xchg
dec
dec
cmp
pop
daa
pop
add
loopne,pt
inc
xchg
add
push
sbbl
xchg
out
lds
js
pop
outsl
or
sar
pop
fadds
loopne
int3
stos
notb
fstl
inc
fs
loope
divb
dec
jmp
shl
cmc
cmp
jb
xchg
mov
mov
add
mov
xor
mov
dec
iret
sbb
jmp
pop
or
test
or
test
xchg
fldl
inc
call
call
inc
sub
dec
jns
rolb
mov
out
pop
inc
pop
je
mov
subb
stc
push
movsb
jne
inc
adc
push
es
add
test
mov
xor
lcall
out
loopne
cmc
aam
in
xchg
ljmp
cld
xchg
push
or
decl
or
mov
imul
inc
sbb
sub
ror
inc
repnz
xor
or
hlt
jb
push
sbb
data16
test
mov
inc
aas
jge
out
mov
inc
sub
shl
pushl
push
fsubrp
push
or
popl
clc
movsb
push
fs
pushw
aaa
subl
cmc
cltd
call
jg
jnp
sub
push
xor
lods
push
popf
in
sbb
xor
dec
mov
pop
or
int3
cld
decl
incl
pushf
data16
jecxz
lahf
add
fildll
fdivl
call
lods
aad
mov
pop
mov
pop
incl
insl
sub
push
pop
sub
add
aas
inc
rcrb
inc
out
addb
mov
aad
aaa
or
xor
jg
mov
xor
pop
mov
mov
and
mov
in
out
fisttpll
dec
xchg
xchg
push
add
mov
dec
push
lret
mov
int
xor
push
jb
pushf
jg
mov
insl
xor
imul
call
inc
cmp
inc
movsl
mov
or
outsb
std
jg
loopne
mov
cli
je
popa
mov
add
test
negl
incl
mov
cmpsl
add
mov
xor
inc
pop
gs
push
arpl
filds
jmp
pusha
outsl
cmp
cmp
sahf
scas
add
pop
out
xor
xchg
inc
repz
or
pop
inc
cmp
xchg
fs
call
ret
xchg
mov
adcb
call
or
or
cmp
stc
movsl
sarb
repnz
fstpt
xchg
push
outsb
push
pop
jg
fisttpl
jnp
outsb
call
incl
or
xor
mov
fcoml
lahf
js
stc
sbb
mov
mov
incl
jnp
es
mov
and
aad
sub
jmp
dec
loopne
movsb
or
cli
xor
push
adc
jb
adc
ja
mov
or
push
loopne
lcall
stc
lret
fucom
mov
nop
mov
aad
mov
data16
jg
dec
push
sub
jg
inc
push
or
push
or
xchg
decl
xchg
shl
fcoml
mov
cmp
pop
jbe
mov
aas
shll
sub
cmp
jnp
test
movsb
add
ds
arpl
fwait
jmp
ret
incb
sarl
and
xchg
test
vmread
movq
jle
pop
movsb
rolb
jecxz
clc
call
arpl
out
add
xchg
adc
xor
pop
jg
cmc
int
ret
pop
pop
fs
sub
incl
push
sbb
nop
dec
test
shrl
out
cmpsb
outsl
adc
add
inc
js
dec
int3
jmp
lcall
cmp
cmp
jecxz
push
inc
mov
cld
test
add
push
inc
hlt
ljmp
hlt
push
dec
push
jecxz
mov
mov
sub
aas
rcrb
arpl
sub
into
push
inc
stos
xor
pushl
dec
xchg
clc
cld
mov
mov
rcrb
cmpsl
call
lock
clc
pop
pop
sbb
push
cmp
jae
cmc
mov
and
in
pushf
inc
cmp
mov
cmp
loope
push
push
inc
mov
call
jg
mov
mov
and
mov
push
jno
pop
push
mov
decl
addb
jno
ss
xchg
bound
in
fcompl
sub
decl
inc
les
cld
lds
mov
inc
rorb
ljmp
dec
dec
cmpsb
cltd
rclb
push
mov
fistpll
mov
push
jno
add
addb
dec
mov
cmp
call
adc
ds
dec
fwait
test
data16
out
shll
sti
jge
sbb
jmp
lods
pop
adc
sub
mov
outsl
mulb
int
add
insb
jle
jg
mov
testb
nop
inc
adcb
mov
sbb
or
test
call
push
fisubs
aas
mov
pop
and
psadbw
and
xchg
pop
xor
decl
push
cli
lds
scas
inc
out
gs
rdpmc
sub
lcall
std
cmpsl
add
das
push
sbb
adc
xchg
inc
popf
jae
fwait
mov
ljmp
sti
push
arpl
fwait
stos
ret
jle
ja
adc
stos
mov
jmp
lret
pop
inc
add
cltd
icebp
cmpsl
or
inc
arpl
aaa
cli
ret
or
std
call
insb
daa
mov
ret
hlt
subl
mov
pushl
jb
or
stos
add
fildll
clc
fst
test
pushl
sbb
xor
jno
daa
xchg
sbb
lods
jo
test
fidivrl
sub
aaa
jge
nop
ljmp
pop
sub
adc
and
fs
add
mov
sti
subl
decl
pop
pop
mov
xchg
les
add
outsb
dec
ljmp
lcall
dec
out
xor
or
shl
lret
inc
xchg
dec
and
movsb
inc
xor
push
jg
push
xchg
mov
cmp
add
xor
loope
or
or
pop
test
push
clc
gs
test
sti
adc
sahf
xor
test
cmp
pusha
jp
adc
push
int
stc
mov
gs
movsb
sub
pop
dec
jmp
xlat
es
js
in
cmp
xor
push
push
inc
addr16
out
aaa
xor
pop
fwait
rcrb
lcall
cltd
in
xor
imulb
mov
mov
dec
sub
inc
imul
jg
outsl
in
clc
pushf
pop
nop
sarb
int3
ds
and
fnsave
xlat
outsb
nop
lcall
das
xchg
inc
mov
add
bnd
rorl
popf
and
sahf
xor
jmp
inc
into
mov
data16
inc
mov
add
dec
aas
xor
or
pop
addr16
push
test
call
hlt
lcall
sub
stc
mov
jg
imull
or
clc
or
decl
ljmp
sub
shl
push
pushf
cmpsb
cwtl
into
pop
cmp
jnp
lcall
dec
mov
jmp
cld
arpl
mov
cmp
ja
jle
cli
mov
mov
sti
loope
inc
imul
cmp
sbbl
icebp
rorb
pop
pop
addr16
xor
push
add
push
outsl
or
je
fisubs
das
decl
outsl
xor
xchg
loop
or
hlt
loop
add
inc
inc
fisubs
lds
ljmp
or
lds
leave
mov
incl
jae
xor
cmp
xchg
mov
sub
movsl
and
push
std
sub
cmp
adc
pop
push
push
out
or
decl
movsb
and
aam
pop
inc
and
repz
cmp
lret
adc
sarl
cld
roll
add
aaa
jbe
add
ljmp
or
jmp
push
popl
pushf
mov
rolb
int3
mov
mov
xchg
mov
scas
pop
ror
adc
bound
cwtl
push
add
ret
jge
add
sub
inc
pop
push
or
add
nop
push
or
hlt
stc
jb
repnz
pop
sub
adc
xor
xchg
shl
cli
ret
dec
push
dec
jns
in
push
rolb
lods
or
cmc
ret
rolb
push
lds
inc
sbb
mov
lods
divb
or
in
dec
nop
jg
push
dec
xchg
lret
lock
ljmp
sub
push
dec
sahf
mov
into
repnz
popa
fs
mov
xchg
pusha
ret
adc
xchg
data16
std
jns
fidivs
subps
sbb
jge
pusha
clc
shl
mov
pop
mov
inc
lcall
aaa
in
jbe
add
mov
fs
jns
xor
aas
ficoms
and
mov
adc
cwtl
jl
or
ja
in
data16
xor
sbb
outsl
gs
decl
push
xor
jbe
stos
mov
adc
movsb
daa
xchg
sbb
fstpt
shll
dec
loopne
arpl
or
jns
mov
mov
clc
in
jmp
xor
out
adc
add
call
pop
inc
cwtl
mov
nop
in
or
icebp
mov
pop
aas
fdivs
aam
sbb
cmc
jmp
pop
adc
push
loope
pop
fsubl
sbb
xor
std
jg
jne
adc
cmp
inc
or
bound
dec
or
inc
aas
pop
adc
jge
mov
mov
mov
scas
outsl
std
outsb
idiv
inc
or
sub
xchg
and
xchg
ret
inc
sti
mov
dec
sti
sti
out
popa
jge
shlb
and
lea
inc
mov
inc
insb
int
out
push
pushl
stc
cmove
inc
mov
add
mov
pushf
or
dec
loop
push
loopne
mov
out
sbb
adc
call
aas
out
out
or
and
xchg
and
std
mov
sub
notb
decl
sbb
shl
add
push
sub
inc
cmp
lock
cld
ficomps
dec
subl
dec
and
mov
or
sub
pushf
rcr
pop
test
aaa
mov
out
loop
call
test
icebp
in
jb
cmpsb
jno
add
jecxz
out
push
addr16
ret
aam
inc
js
add
es
arpl
test
ret
movsb
cs
add
pop
test
dec
mov
jne
bswap
pop
xor
cs
test
mov
and
jae
mov
repnz
xchg
dec
dec
pop
sbb
pop
mov
pop
ljmp
fiadds
mov
mov
pop
je
mov
ret
sti
hlt
test
test
xor
or
or
push
mov
jmp
fucomip
sbb
jl
push
clc
stos
xchg
inc
test
pavgb
rcl
addr16
mov
xchg
scas
pop
aas
cli
mov
nop
cmp
or
sub
cld
jg
xor
rorb
imul
inc
and
push
pmuludq
lcall
loopne
and
fisubrl
mov
dec
ret
sti
lcall
flds
lock
std
xor
cmpb
mov
push
xchg
es
aas
cld
decl
sub
in
inc
or
loopne
daa
dec
aas
ret
ja
aaa
cmp
loopne
jmp
inc
notl
decl
sbb
add
xchg
sub
cwtl
xchg
mov
aad
popa
or
pop
sti
push
shrl
insl
popa
pusha
lds
ds
and
bound
call
push
xor
adc
sbb
xor
push
jg
in
mov
out
inc
add
cmp
dec
pop
or
jecxz
adc
or
fs
fnsave
pop
clc
xchg
inc
sub
inc
pop
adc
pop
mov
rorl
cli
cs
jmp
sarl
sub
and
or
loope
clc
call
dec
jns
nop
dec
icebp
mov
lea
popf
outsl
xchg
nop
inc
adc
decl
mov
and
pushf
data16
add
inc
lret
arpl
jmp
jo
arpl
fwait
cmpsb
aaa
push
pop
jbe
call
push
sbb
decl
mov
or
fisubs
adc
pusha
int
cmpsb
and
push
ja
sub
dec
ud0
mov
daa
jp
xor
mov
mov
scas
sub
incl
decl
xor
sbb
scas
push
mov
adc
incl
out
mov
mov
jecxz
xchg
pop
inc
add
xchg
or
add
push
fs
decl
insb
xchg
cmp
jg
decl
push
cmpsb
icebp
pusha
fistps
pop
fwait
and
xchg
mov
and
je
mov
incl
dec
sub
mov
push
adc
add
fcmovnbe
fsubr
push
inc
jmp
scas
inc
cld
enter
adc
daa
loopne
xor
jg
mov
mov
hlt
adc
inc
jb
daa
mov
sub
mov
icebp
pushl
sub
lods
cmpsb
cmpsl
in
fwait
xchg
pop
in
xor
lcall
adc
add
test
out
mov
int
in
pop
xchg
pop
ficoms
fwait
push
jae
cmp
lock
lcall
pop
cmp
test
aaa
and
mov
ljmp
sub
pop
push
adc
pop
mov
push
and
xchg
jl
sbb
and
pushl
lods
repnz
cmp
shll
lcall
dec
lcall
or
sbb
enter
cli
pop
fs
sbb
movsl
aas
pop
mov
call
inc
push
sub
cmp
sub
clc
jecxz
push
divb
aas
cld
inc
push
negl
sbb
mov
lcall
orl
stos
aas
xor
add
sbb
les
sub
adc
lock
jmp
jae
shl
xor
insw
fcoml
data16
add
and
aaa
mov
xlat
jg
add
adc
addb
inc
xchg
aad
jae
loopne
ljmp
jg
ffreep
cltd
ficompl
ljmp
mov
movsl
mov
lock
addr16
ret
sbb
test
jmp
xchg
test
cmp
add
add
adc
dec
arpl
aaa
or
and
das
incl
in
test
push
in
int
pop
jo
mov
inc
jns
and
arpl
jg
out
mov
cld
in
or
popa
std
ds
push
sbb
adc
pop
cld
jno
mov
icebp
repnz
daa
lds
test
decl
std
mov
xchg
mov
nop
lds
sub
cmp
adc
std
pop
incl
sahf
aaa
lock
push
mov
dec
sbb
sub
std
out
decl
cmp
nop
ret
mov
adc
mov
xor
lcall
popf
sbb
outsb
incl
jmp
mov
or
jne
jecxz
cmp
push
bound
sbb
ret
xor
shll
sbb
inc
add
mov
pop
xor
and
jg
decl
pushf
pop
sub
xor
rclb
ljmp
adc
scas
dec
mov
pushl
adc
das
add
iret
sub
test
and
in
pop
sub
fwait
xor
dec
sbb
into
add
jl
mov
pop
dec
mov
push
aas
popa
xlat
or
cmp
or
xchg
jge
addl
rclb
mov
xor
aas
cmpsb
test
jns
ljmp
call
push
and
int3
cli
rorb
or
pop
xchg
xchg
sbb
mov
jmp
mov
lcall
pop
pop
daa
and
lcall
mov
sbb
inc
mov
cmp
repnz
lods
pop
out
fnstcw
incl
xchg
sbb
add
scas
outsl
fs
aas
push
inc
add
mov
fdivrl
dec
imul
dec
clc
sub
popf
mov
ficoms
rcll
out
cs
stc
mov
js
rolb
enter
fcmovne
pop
jp
add
jo
imul
jg
jne
nop
xor
inc
sub
or
out
jge
add
loopne
popa
movsl
sbb
add
pop
aaa
fs
in
inc
push
in
loopne
arpl
imul
decl
or
filds
add
in
xor
fs
loope
jg
call
push
xchg
push
js
sahf
or
dec
jecxz
mov
pop
ja
jmp
and
mov
jl
loop
adc
and
inc
push
adc
inc
add
fs
cld
jne
rcrb
pop
mov
jg
les
sbb
aas
leave
pushf
push
dec
xchg
daa
jg
scas
xor
pop
mov
clc
faddl
sub
incl
nop
sbb
pop
loope
cmp
and
mov
add
aaa
notb
push
out
repz
ljmp
dec
and
lcall
imul
out
lcall
push
jbe
pop
aaa
sbbb
push
and
and
mov
inc
dec
cmp
ret
or
push
rcr
aam
inc
test
pop
jae
and
roll
push
cwtl
push
and
clc
xchg
inc
loop
scas
push
mov
sbb
lret
dec
call
inc
repnz
imul
or
loope
aas
sar
dec
ficomps
fcompl
fnsave
mov
and
ret
and
pushl
sbb
repz
push
leave
test
xor
dec
int3
aaa
mov
addr16
lret
ljmp
scas
xor
push
lret
dec
mov
sti
test
xchg
nop
and
ret
call
aaa
fisubs
mov
lods
int3
cmp
pop
adc
xchg
incl
aaa
jb
enter
lahf
pop
aas
out
leave
inc
dec
pop
jle
sbb
into
loope
adc
cmp
sti
ljmp
rcrb
xchg
xor
data16
mov
jg
js
add
mov
dec
xor
xchg
enter
pusha
or
lcall
cld
adc
jno
lock
or
filds
inc
jo
lahf
xchg
jle
fcoml
aas
lds
pop
ja
jg
scas
call
clc
les
test
jecxz
call
inc
adc
fidivs
dec
mov
sub
test
cltd
mov
data16
jmp
aas
movsl
push
test
hlt
fdivr
incl
sti
push
adc
mov
sbbl
enter
divb
lods
stc
sbb
in
dec
icebp
cmp
icebp
orb
jg
rol
sbb
hlt
test
jg
leave
sub
sbb
mov
enter
scas
decl
ret
cld
jmp
cwtl
orl
push
pop
icebp
push
clc
fs
adc
pop
aas
filds
cltd
shll
das
xchg
push
ds
ss
aas
add
aaa
add
dec
sbb
xchg
psraw
out
ret
aad
dec
pop
sahf
cld
out
sar
and
adc
out
fwait
std
lcall
ja
sbb
fs
inc
incl
jecxz
loopne
inc
xchg
andb
out
test
icebp
shlb
cs
sahf
pop
cli
loope
into
mov
aas
std
xchg
decb
aas
mov
es
cwtl
dec
or
ret
mull
xchg
scas
dec
push
ljmp
sbb
loopne
sub
cmp
loop
lock
fmul
js
inc
lock
mov
lds
dec
pop
xchg
mov
or
fcos
pop
cld
jmp
xor
jmp
dec
stos
and
decl
jne
push
dec
mov
adcb
popa
jbe
test
rorb
lcall
or
cmp
ljmp
add
sub
sub
fcmovbe
sbb
aas
shl
test
idivl
hlt
sarb
in
add
push
out
add
sbb
addb
cmp
push
sbb
enter
add
call
adc
out
sbb
inc
pop
imul
cmc
jo
pop
fnsave
into
ja
xchg
push
cmpsb
lret
rolb
xchg
repnz
std
xchg
sahf
sbb
pop
rcll
leave
push
push
mov
mov
cltd
pop
push
cli
xor
mov
lahf
inc
inc
incl
and
test
decl
mov
mov
repnz
ds
aas
fildl
mov
jmp
into
loopne
xchg
xor
mov
inc
lret
push
dec
mov
jno
mov
jmp
ret
mov
xor
pushl
aas
xor
dec
jge
dec
call
mull
jne
push
aaa
jge
cmp
jae
pop
cmc
pop
cmp
inc
loope
dec
sub
daa
pop
jo
sub
pop
mov
jne
cmc
dec
cmp
push
orl
cmpsb
lahf
inc
or
mov
lods
xchg
pop
mov
mov
lcall
std
js
push
jle
dec
sub
or
jb
ret
sbb
mov
mov
cwtl
mov
icebp
jmp
pop
out
cltd
adcl
ljmp
mov
flds
mov
idiv
jg
fcmove
or
mov
enter
mov
out
adc
subl
cmp
or
mov
push
jmp
loopne
cli
xchg
int3
inc
fcompl
test
in
addr16
add
jno
loope
ljmp
push
loope
aaa
pop
pop
jecxz
lock
fwait
les
aaa
les
pop
enter
incl
scas
dec
sbb
daa
xchg
jp
lahf
fs
pop
sti
jp
inc
sub
add
nop
mov
ds
int3
mov
pop
xor
or
mov
nop
sbb
movl
addl
das
mov
fwait
mov
cltd
add
mov
xchg
mov
mov
cmp
pop
mov
data16
adc
fcomip
cmc
pop
sti
popa
mov
in
rcrb
call
and
leave
jo
pop
inc
pop
imul
les
daa
xor
pushf
std
fdivr
stos
cmc
cmpsb
cli
call
aas
loop
adc
lret
pop
lahf
mov
adcb
or
fists
push
push
mov
xor
pop
lcall
push
add
cltd
lea
inc
jl
loopne
xor
pop
popa
fprem
cld
jmp
jmp
push
dec
mov
ret
mov
das
mov
loope
popf
xor
scas
cli
lcall
mov
jnp
scas
into
pop
push
pop
mov
fwait
mov
movsb
xor
cwtl
cmp
pop
push
stos
pop
lahf
cmp
daa
test
adc
xor
inc
hlt
push
sbb
rclb
test
push
loopne
rcrl
leave
mov
outsb
daa
or
jmp
iret
cltd
lods
out
fcomps
mov
mov
lds
xchg
mov
in
fnstcw
sar
sahf
aas
out
leave
fsubrs
mov
mov
nop
adc
clc
call
or
es
je
aam
popf
icebp
faddl
mov
mov
mov
int
mov
xor
int3
loop
cmp
clc
mov
incl
loopne
inc
fs
mov
hlt
sti
shrl
add
cli
sbb
jg
cmp
stos
xchg
in
cmp
sbb
stos
mov
lret
aas
out
enter
popa
mov
loope
cmp
es
mov
dec
enter
jno
sub
imull
inc
mov
pop
push
mov
add
xchg
cmp
inc
mov
subl
lcall
and
mov
cmp
add
mov
mov
loopne
loope
ja
mov
flds
rol
rcl
push
fdivl
test
inc
sti
lcall
in
push
cld
into
sbb
mov
mov
sbb
out
push
pop
gs
jl
inc
ljmp
iret
sub
jbe
loope
stos
ret
add
xlat
add
nop
mov
sbb
cmp
out
cmp
in
pop
mov
call
inc
bound
call
into
fidivrl
outsl
fisttpll
call
out
adc
movsl
clc
add
call
cld
inc
jb
not
adc
or
dec
add
rorb
decl
imul
dec
outsb
pop
imul
dec
jecxz
xchg
ljmp
pop
sar
fucom
mov
lcall
mov
arpl
in
das
fildl
scas
xchg
pop
add
mov
dec
jg
sbb
data16
flds
mov
jg
add
lock
cmc
aam
imul
or
lcall
pop
inc
push
loopne
pop
or
aaa
jp
repnz
or
inc
decb
daa
rcrb
fimull
cli
ljmp
dec
add
jl
pmaxub
mov
icebp
xor
decl
mov
lds
sbb
inc
push
mov
cmpsl
fisubrl
push
pushl
scas
mov
stos
and
mov
cltd
add
xor
mov
data16
decl
cmp
jns
sub
outsb
xchg
cwtl
clc
jb
cmpsb
dec
xchg
in
negb
push
xor
mov
leave
cmp
xor
push
in
repz
adc
std
mov
ljmp
outsl
push
test
decb
jnp
mov
outsl
push
mov
pmuludq
incl
inc
loope
and
xchg
and
sti
mov
sbbb
add
xchg
cmp
lods
lcall
jbe
lahf
lock
out
call
hlt
jne
cmp
outsl
outsl
test
cmp
push
decl
xor
jg
xchg
movsl
mov
cmpsl
arpl
test
cmp
sub
aad
mov
add
incl
push
lods
sarl
sbb
scas
lcall
sub
rcll
jecxz
incb
inc
and
in
ror
cmpsb
pushf
test
jp
dec
add
jno
mov
jnp
dec
dec
mov
pop
lds
iret
imul
jbe
inc
fsubrs
mov
mov
push
stc
jno
icebp
xor
fwait
and
add
add
add
add
or
jmp
pushf
sbb
fsts
cmp
lods
pusha
pushf
inc
aaa
shlb
retw
jmp
lds
fidivrl
adc
lods
cmp
xchg
jg
ljmp
shl
adc
cmc
lock
jge
adc
fnstsw
addr16
mov
psllq
clc
cmp
mov
fdivrs
clc
ljmp
shl
or
jae
inc
cmp
adc
vucomisd
push
mov
inc
fnstcw
cld
sti
mov
rcrb
ja
jnp
cmp
jp
decl
sub
loopne
js
adc
push
sub
mov
xchg
xor
call
jp
sti
je
xchg
inc
sbb
in
fbstp
mov
push
aas
mov
addr16
cmpsb
aas
stos
negl
sub
xchg
aas
arpl
and
in
incl
inc
xor
repnz
out
test
clc
scas
lods
movsl
and
xor
mov
lret
lret
mov
aas
xor
mov
into
push
les
loop
test
inc
cmp
pop
loopne
cwtl
sbbl
ja
xchg
pop
pusha
adc
int
pop
jg
jecxz
mov
test
incl
or
call
dec
loop
nop
cmp
and
jo
pop
pushl
fwait
lret
decl
jnp
mov
mov
xor
dec
fisubs
arpl
xchg
std
mov
jg
js
add
and
popa
dec
aas
push
bound
fadd
mov
pop
jg
mov
and
mov
xor
fmuls
push
push
mov
xor
divb
fldt
ret
jbe
jmp
adcb
sub
insl
sbb
add
sub
sub
mov
out
mov
add
incl
xor
inc
into
and
ret
fdivs
mov
lods
xor
std
aad
out
insl
les
sbb
dec
sahf
and
arpl
lods
push
out
aas
popa
std
mov
xlat
leave
dec
sub
push
iret
call
and
sar
sub
sub
pop
idiv
sbbl
imul
dec
fcompl
loope
add
ljmp
pop
lea
nop
jns
stos
adc
js
add
incb
pushl
add
fisubl
adc
or
dec
mov
mov
push
leave
push
out
cmp
incl
dec
pop
loope
aas
hlt
xchg
nop
loope
ss
sub
out
mov
adc
daa
cld
lcall
nop
mov
mov
pushf
sahf
xor
je
sub
je
sbb
leave
and
cmp
into
mov
and
outsb
cmp
cli
bound
aas
cmpsb
cwtl
jne
lcall
add
outsl
addl
or
xor
xchg
jbe
sti
cmpsb
jg
cld
xorl
mov
xchg
loop
lock
cwtl
or
inc
clc
jmp
imull
xor
pushf
mov
js
aas
rcrb
test
sahf
fstps
iret
add
mov
mov
sbb
dec
sbb
adc
test
dec
adc
outsb
sbb
aas
cli
push
mov
pop
scas
xchg
and
rcll
loope
mov
aaa
push
scas
aas
mov
pop
loop
inc
cli
repz
ficompl
in
mov
or
adcl
cmp
or
mov
add
push
adc
sub
fnstsw
pop
pop
lret
decl
lock
cli
cmpsb
outsl
inc
pop
repnz
pop
add
nop
or
mov
lcall
or
aas
int3
push
ret
mov
outsl
sbb
sbb
and
push
cmpsl
inc
jle
aas
mov
jmp
cmpsb
adc
jg
cmp
sub
adcl
call
mov
fbld
jns
jmp
les
mov
adc
cmp
pop
in
pop
jp
imul
in
sahf
push
popa
cld
xchg
xor
mov
in
cli
hlt
enter
rolb
xchg
ret
cwtl
mov
mov
pusha
cmp
cld
arpl
popa
fistps
daa
call
jg
pop
std
or
pop
jg
mov
mov
movsb
bound
mov
enter
dec
xchg
add
xlat
ljmp
sti
mov
fisubrl
mov
push
or
test
arpl
in
pop
or
adc
sar
fs
jb
aas
cld
inc
dec
icebp
arpl
xchg
mov
clc
cmp
mov
maskmovq
sbb
dec
decl
decb
lret
cld
in
push
imul
dec
cmc
cmp
xchg
rolb
mov
xchg
in
inc
xor
push
mov
std
stos
or
pop
arpl
fwait
call
in
rolb
ss
out
lcall
in
fwait
pop
in
adc
push
mov
pushl
xlat
or
fisttpl
ret
jns
push
daa
mov
into
gs
js
out
cltd
mov
inc
call
repz
popa
jl
negb
adc
clc
into
aaa
outsb
lcall
decl
dec
cmpsl
or
sbb
mov
loop
sub
add
ss
decl
mov
cli
aad
sbb
sti
mov
fs
pop
gs
pop
sbb
pop
inc
pop
cmp
insl
xchg
cs
or
inc
jne
paddd
iret
pop
imul
mov
jg
or
ret
xchg
xchg
sarb
loope,pt
sbbb
and
inc
jno
push
sar
aas
fstl
xchg
mov
mov
pop
scas
mov
arpl
data16
push
xlat
push
inc
popf
incl
mov
adc
sbb
dec
mov
or
jg
push
testb
roll
mov
and
jbe
jno
dec
pop
mov
test
mov
fcos
decl
push
incb
mov
in
jb
xchg
pop
push
pop
fldenv
mov
lcall
into
out
mov
pop
mov
sub
nop
xor
nop
mov
pop
ss
sub
call
cmp
push
mov
lcall
fs
and
jle
jle
es
mov
loop
ja
jb
pop
cld
sti
inc
mov
lds
xlat
in
push
xor
jmp
mov
and
les
jg
aas
inc
jmp
nop
cmp
jmp
outsb
int
imul
pop
loop
das
call
and
fstpt
enter
ljmp
mov
jmp
jnp
mov
cmc
ja
cmpsl
rcrb
cmp
mov
inc
cmp
stc
insl
mov
dec
stc
outsl
jno
lret
dec
push
out
das
test
fists
cmc
lds
sbb
imul
ret
stc
clc
hlt
inc
jg
cmc
fnsave
mov
test
sbb
scas
push
fstpt
scas
xchg
decl
aaa
fs
daa
rcr
flds
cltd
dec
or
and
outsl
pop
xorl
mov
icebp
jmp
xor
sahf
mov
in
rcl
pop
jg
imul
call
mov
push
push
xor
cmpsl
or
mov
call
inc
jne
xor
sbb
mov
mov
aas
mov
xor
clc
in
or
in
lods
push
mov
jo
push
sti
jmp
ja
pop
xor
cs
inc
loop
in
arpl
and
ljmp
test
inc
pop
mov
pusha
into
pop
rcll
outsb
stos
push
fnstsw
ret
cli
jae
movsb
jle
setae
mov
daa
jne
jecxz
lods
mov
clc
inc
jmp
call
aaa
jae
cs
or
jbe
adc
cmp
jle
test
jno
fstpl
sub
add
or
outsl
imul
xlat
insl
mov
lds
shlb
cmc
out
mov
clc
mov
or
cmp
push
faddl
incl
adc
xchg
lods
mov
mov
xchg
add
jmp
cmpsl
xor
cmp
cmc
data16
sub
inc
jecxz
mov
psubsw
cmp
cmp
pushl
iret
bound
mov
rol
or
mov
sub
ss
cld
insb
jg
xchg
sub
sbb
jg
mov
adc
mov
dec
dec
dec
incl
mov
ret
jne
mov
in
fimuls
or
lret
std
incl
loope
cmc
arpl
hlt
andl
sbb
incl
int
xbegin
sub
js
jb
stc
fsubs
xchg
aas
out
jbe
jmp
cmc
negl
jns
adc
adc
adc
mov
pop
push
or
insb
stc
mov
mov
mov
push
xchg
xchg
scas
adc
mov
in
fst
decl
icebp
cld
xor
adc
lret
sub
loope
adc
pop
pop
mov
out
call
push
aaa
leave
mov
cmp
jecxz
cwtl
stc
mov
clc
icebp
outsb
es
scas
adc
mov
out
xchg
jne
and
cmpsl
clc
xlat
test
icebp
xchg
movsb
mov
ja
cld
repz
jns
or
icebp
aam
xor
pop
nop
sbb
mov
sbb
aas
incl
inc
xor
mov
sti
faddl
push
cmpsl
outsl
sbb
decl
mov
mov
fiadds
sub
outsl
loop
sbb
int
jns
add
std
call
incl
jg
movsl
lret
bound
inc
dec
fnstenv
jmp
pop
sub
push
orl
ret
mov
pop
cld
inc
stc
test
push
push
xchg
test
add
dec
and
xor
push
ljmp
xor
ds
imul
incl
cltd
cs
xchg
cmp
jb
rorl
fxch
ja
cmp
jmp
inc
mov
ds
xor
insb
icebp
decb
cwtl
orb
fnstsw
push
lahf
lcall
adc
or
outsb
ss
ja
icebp
loop
popf
jg
inc
cli
mov
add
nop
lcall
aaa
and
jg
lcall
xor
add
jae
jb
filds
sub
out
push
movsb
aam
clc
daa
ficoms
ljmp
scas
push
loopne
ja
aad
xchg
dec
and
lds
jmp
in
push
insb
insb
xchg
out
sub
xchg
adcb
jecxz
sub
daa
xchg
jecxz
pop
pop
js
aas
sar
int
jmp
push
push
ret
test
lahf
std
popf
or
out
mov
xor
ret
ficompl
sbb
dec
adc
enter
ret
inc
std
dec
or
lret
pop
aam
sbb
inc
add
or
sbb
cmp
pushl
push
jle
leave
and
aad
add
and
popa
dec
incl
adc
sbb
pop
xchg
lcall
std
jg
out
add
lea
xor
leave
mov
jmp
ljmp
adc
and
movsb
mov
and
pop
jbe
lcall
popa
jg
test
mov
fbstp
inc
inc
and
mov
cld
pop
clc
std
mov
js
mov
pop
cmpsl
push
xchg
sub
or
lock
call
in
int
ljmp
jg
data16
xor
push
add
jecxz
clc
xchg
decl
sbb
gs
popa
in
iret
pop
pop
out
or
push
ds
js
popa
mov
xchg
incl
rorl
and
xchg
lods
xchg
out
sbb
jnp
sub
inc
loopne
filds
loope
pop
insb
mov
sub
cmp
enter
mov
sbb
in
push
clc
idivb
movsl
jne
pop
mov
decl
fisubl
and
stc
mov
mov
das
ret
and
je
aam
andps
ljmp
sti
jle
stc
in
mov
xchg
stos
nop
jo
movb
fstl
push
ret
push
pushl
and
pop
xchg
sub
pop
out
insb
mov
add
push
jo
sub
int3
aas
fistl
movsl
popa
and
jmp
pop
push
xchg
pop
sarl
inc
je
mov
out
repz
sarb
enter
pushl
xchg
out
int
sbb
inc
pop
and
mulb
cmp
pushl
add
sub
mov
sbb
aas
repz
dec
pusha
jg
incl
cmp
aas
jge
and
in
enter
fmul
push
and
and
xchg
jmp
jo
dec
xchg
loope
in
loop
xor
cmp
xchg
or
cmp
inc
cmpsl
jecxz
call
std
lret
roll
pop
mov
idiv
in
cwtl
jg
sub
push
loopne
in
out
mov
inc
and
repz
loope
leave
out
dec
std
cmp
bnd
push
push
pop
pushl
arpl
lock
and
cli
loope
ljmp
clc
orl
cwtl
mov
mov
lea
xchg
push
stos
and
mov
lret
jle
subl
xchg
sbb
and
jg
incl
iret
and
in
adc
sarb
std
push
adc
in
psubw
inc
iret
sbb
aam
jmp
adc
xchg
push
mov
outsl
pop
push
lock
push
xchg
aas
cli
inc
or
mov
aaa
pop
aas
hlt
jne
push
pop
pop
and
icebp
cmc
gs
pushl
push
jmp
cmp
mov
pop
dec
mov
xor
adc
jae
sub
pop
je
xchg
jg
ljmp
pop
fnsave
push
movsl
jle
vpandn
repz
jge
inc
or
inc
add
call
out
lcall
mov
cltd
inc
dec
pop
jg
cld
mov
test
and
iret
fwait
ret
mov
inc
mov
dec
and
outsl
cld
adc
jo
loop
shl
inc
pop
mov
pop
xchg
ud0
jg
sahf
into
stc
adc
cmp
es
cmp
jns
push
jecxz
mov
aas
sub
out
dec
shl
bt
out
scas
inc
jmp
lock
jg
cmpsl
stc
pop
lahf
in
repnz
repnz
stc
sahf
repnz
cmp
xchg
dec
lahf
mov
aas
mov
dec
sbb
bound
ud0
sub
inc
or
stc
xchg
add
in
jg
push
aas
jmp
xor
sbb
psubsw
mov
hlt
xor
divb
jmp
outsl
jg
cmc
nop
mov
inc
mov
fcomi
inc
aas
dec
mov
cld
adc
mov
sarl
pushl
push
ret
and
cmp
xor
mov
rolb
sub
decl
lods
adc
aam
add
leave
fimuls
loope
rolb
mov
lcall
decl
bswap
lahf
in
sbb
pop
pop
cmpsl
insl
adc
dec
push
sbb
nop
or
push
lds
xchg
mov
push
dec
pop
sbb
xor
or
addb
fwait
mov
jg
lcall
and
push
stos
stos
mov
jl
and
jmp
sub
push
pushl
es
xchg
ds
jo
sbb
cltd
mov
loopne
insb
mov
call
ds
les
lret
lods
rclb
nop
std
mov
mov
cli
pushf
pop
out
or
popa
insb
js
stc
popa
mov
addb
pop
int3
xor
xchg
jle
push
push
mov
and
add
inc
out
sbb
popa
fsts
insb
sub
aas
pop
pushf
cs
xchg
cmp
aam
push
xchg
fs
add
cs
mov
pushf
les
sbb
imul
movsl
push
cmp
lcall
test
adc
push
pop
xchg
xchg
sbb
icebp
push
arpl
lock
incl
and
or
icebp
sbb
cmp
decl
jnp
xchg
or
fbld
push
aam
sahf
ds
test
add
push
push
pop
mov
fcoms
push
pop
imul
incl
xchg
xlat
fildll
push
sbb
pushf
push
sub
test
aas
pushl
jl
jno
out
icebp
scas
daa
xor
std
pop
or
fwait
jmp
mov
add
and
lret
outsl
xor
loopne
test
dec
fistl
push
incl
mov
and
inc
mov
outsb
shl
sbb
dec
mov
sub
cmp
jo
out
adc
xadd
add
push
push
sbb
xlat
mov
mov
sub
or
push
call
jle
add
jno
push
mov
rcrl
inc
xor
inc
dec
repz
mov
xchg
push
add
stc
dec
shl
jg
lret
inc
xchg
and
decl
hlt
pushl
outsl
in
xchg
push
aad
xlat
lcall
call
pop
shlb
and
jg
aas
aas
std
inc
push
ret
pop
hlt
xor
jb
aas
lret
mov
and
arpl
cli
incl
scas
iret
leave
mov
dec
ret
cmpsl
flds
and
sarl
cmc
icebp
add
push
cltd
fstpl
stc
push
loope
incl
cld
dec
push
sub
jmp
and
outsb
xchg
push
push
aad
incl
sub
xor
pop
lea
cmp
outsl
adc
mov
cltd
daa
jbe
add
adc
jo
repz
inc
out
imul
sub
jmp
adc
xor
adcl
adc
je
decl
stc
insb
cld
cmp
jo
scas
xor
outsb
inc
push
cld
xchg
or
mov
clc
decl
repz
sub
add
cmp
jo
ret
xor
inc
push
and
aas
jl
imul
pop
scas
orl
adc
scas
sbb
push
fcompl
mov
lods
push
jecxz
pop
enter
mov
inc
mov
inc
out
push
xor
dec
loope
cmc
aas
cld
repz
mov
cmpsl
jmp
dec
sub
test
stos
clc
call
pop
xor
sti
push
or
lcall
dec
push
into
xor
adc
idiv
mov
mov
inc
sub
xchg
sar
inc
test
lcall
jg
xchg
scas
cmc
xchg
aas
lea
mov
add
out
ret
jmp
in
adc
push
mov
adc
dec
add
outsl
cmp
aad
das
decb
dec
cmp
adc
out
ds
pop
inc
sub
push
mov
aam
dec
insl
incl
lcall
cmp
aam
xchg
add
lcall
out
pushf
xor
es
or
push
mov
stc
xlat
add
add
imul
call
pop
decb
mov
adc
mov
lods
rcll
es
call
shll
rcrl
jle
jecxz
mov
xchg
adc
shlb
ljmp
mov
or
pop
push
push
cltd
xor
aas
cld
aad
add
pop
pop
push
cld
movsl
ja
das
into
mov
xchg
or
hlt
call
jmp
test
dec
dec
out
in
daa
jecxz
movsb
and
jb
jg
push
xor
insl
in
pop
orl
nop
dec
jl
dec
test
or
decl
and
jbe
xor
xor
loope
repnz
xor
jecxz
mov
adc
sub
dec
fbld
jg
xor
pop
or
scas
or
mov
cmc
std
es
cld
xchg
and
jno
std
sub
inc
lahf
xor
adc
shl
cmpsb
aas
jne
mov
dec
test
mov
jo
mov
sub
jmp
popa
pop
dec
xchg
push
pop
ss
mov
subl
ret
loopne
adc
pop
pop
arpl
fdivrl
xchg
lahf
jne
mov
push
shll
clc
pushl
aam
ret
cmc
jb
or
cltd
push
sbb
in
insb
mov
loopne
xchg
setp
incl
jnp
lods
dec
nop
daa
test
push
aaa
and
fimull
lock
decl
enter
scas
aam
xor
mov
inc
mov
decl
sbb
outsb
sub
out
mov
sub
inc
imul
or
xchg
and
cmpsb
jnp
cmp
mov
jmp
pushl
xchg
fcoms
stos
loop
cs
xchg
or
outsl
dec
mov
xlat
jle
nop
gs
lret
and
repz
call
or
cmc
jae
pop
adc
dec
cli
mov
cltd
int3
mov
mov
xor
and
mov
lcall
cld
subb
jge
incl
lcall
sbb
jnp
movl
jmp
mov
jl
lahf
sarb
xchg
jae
jns
add
add
lea
aas
sub
jecxz
mov
mov
stos
mov
cmc
dec
addr16
cli
dec
dec
or
insb
subb
cs
cmpsl
lcall
fsts
js
stos
cltd
sub
mov
jg
and
or
std
ljmp
rcrb
cmpsl
fisttpll
adc
pusha
cmp
push
outsb
mov
add
test
sub
sbbl
inc
pop
loopne
incl
inc
repnz
stos
clc
arpl
push
or
dec
std
jp
mov
inc
hlt
ud0
xor
lods
fstps
push
or
clc
lcall
cmp
add
jle
cmp
daa
outsb
add
sub
cmp
add
aaa
xchg
sbb
lock
mov
stc
leave
loopne
ja
push
decb
push
loopne
shrb
add
inc
xchg
or
fidivrs
setae
push
std
xchg
lock
mov
cmpsl
dec
fbld
jmp
dec
xchg
fimuls
jg
xchg
into
aas
out
pop
std
pop
push
push
repnz
or
xchg
es
hlt
fdivr
sub
jmp
and
adc
cmp
lret
test
out
paddb
aas
clc
das
mov
adc
pop
gs
sub
sbb
or
ret
jmp
bound
xchg
sar
inc
mov
mov
decl
aam
stos
sbb
in
xchg
mov
xor
popa
icebp
cmp
loopne
incl
gs
mov
and
push
pushl
jge
nop
adc
dec
loop
push
scas
jne
cmc
push
push
and
fs
jg
aam
inc
pusha
lods
js
cld
adc
cwtl
xchg
jecxz
push
fs
cs
pop
adc
call
decl
xor
cltd
ret
rclb
insl
xor
adc
sub
mov
dec
call
cwtl
addl
popf
in
xor
mov
push
adc
mov
jmp
dec
std
lcall
nop
jne
jp
icebp
jb
jmp
pusha
movups
inc
xchg
outsl
cmc
lcall
cmc
sub
dec
xlat
mov
jg
jbe
outsl
call
pop
jg
and
add
or
push
lock
jmp
dec
xchg
inc
loope,pt
aas
clc
call
repz
and
mov
jne
fbstp
push
popf
outsl
call
incl
pop
push
jmp
xor
gs
push
inc
mov
xchg
mov
push
out
pushl
inc
pop
mov
mov
test
jne
mov
jmp
std
jae
sub
xor
lahf
cmc
mov
push
sbb
in
jnp
dec
dec
aas
les
lock
neg
dec
inc
xchg
lahf
clc
lahf
add
adc
sbb
cld
imul
jae
fs
jg
xor
inc
ret
lret
jecxz
push
xchg
lea
mov
mov
mov
and
add
inc
pop
pop
ljmp
xchg
cmp
mov
lea
cmp
add
lcall
std
loop
lcall
adc
orb
negl
fwait
js
xchg
jmp
xor
mov
push
aaa
ficompl
cld
popf
cld
repz
or
inc
jle
lcall
fwait
les
mov
test
icebp
decl
sti
sar
xchg
rcl
cmp
call
shrb
fimuls
lods
xchg
sti
and
xchg
sar
rcrl
outsb
nop
push
daa
jg
xchg
loope
mov
pushl
shlb
push
adc
testb
xchg
mov
fidivs
in
call
clc
mov
mov
pop
in
xchg
data16
fs
push
or
cmp
jg
lds
decl
fdiv
movsb
rcll
cmp
je
out
hlt
cmc
or
push
lock
pop
pop
call
ljmp
cmp
jmp
sub
ljmp
in
lock
out
dec
leave
in
inc
data16
fwait
test
mov
test
push
jmp
xor
pop
out
mov
push
jge
cmp
mov
pop
decl
hlt
lcall
cmpsl
out
cld
and
rcrl
incl
mov
lret
jecxz
push
jl
dec
sahf
cmp
xor
mov
add
lcall
xor
add
scas
push
stos
push
lcall
add
decl
inc
xchg
aad
mov
jg
loop
ljmp
or
pop
incl
sbb
ljmp
and
sbb
out
jns
xchg
mov
into
xlat
call
jecxz
jle
cmpl
imul
fucomi
fcmove
jae
mov
call
adc
dec
inc
add
jnp
inc
mov
cmpsb
xchg
mov
lcall
inc
jg
jg
cmpsb
ds
inc
imul
fdivrs
jo
lds
std
cmp
xor
push
inc
lods
jge
or
mov
es
out
or
jg
mov
sub
fsubl
sub
popa
mov
jle
jns
fs
lcall
pop
or
and
loopne
flds
pushf
jle
imul
outsb
ficomps
push
imul
std
sub
out
pop
and
add
scas
movsl
mov
outsl
xor
push
ret
cmpsl
std
in
xlat
push
ret
fsub
sub
cmpl
lahf
repnz
xchg
xchg
ljmp
adc
nop
jg
lods
pop
xor
lea
sub
mov
xchg
stc
hlt
pusha
dec
mov
mov
mov
jmp
jno
cmp
push
inc
fcoml
std
loope
in
or
mov
sti
div
add
pop
cmp
xchg
push
inc
loop
out
fnstenv
pop
or
incl
ret
fadds
scas
insl
frstors
push
dec
mov
and
jg
mov
lcall
sub
mov
xchg
inc
repnz
std
sar
ret
cmp
inc
jmp
stos
std
jb
les
call
das
xchg
and
and
jl
icebp
inc
clc
aas
clc
add
in
add
pop
int
dec
test
mov
sbb
mov
gs
int
daa
add
mov
cli
pusha
sbb
adc
shll
mov
adc
inc
inc
std
cs
orb
xchg
pop
sbb
jge
call
jne
cmp
sub
xor
test
and
push
lds
stc
cmpsl
cli
push
jmp
loop
or
xorb
out
out
repnz
lret
xchg
dec
jns
test
fisttpll
or
stos
xchg
aas
nop
pop
lods
push
mov
ljmp
punpckhdq
paddb
xlat
mov
and
sbb
pop
mov
xchg
subl
pop
mov
ret
stos
mov
aam
and
scas
cld
add
lcall
into
mov
xor
add
out
or
pop
les
test
xor
aas
xor
pop
mov
inc
sbb
jp
int
xchg
aaa
sub
inc
decl
std
cmpsb
testl
sbb
pushl
cmpsb
leave
add
arpl
jo
ja
jecxz
clc
loope
stos
mov
xchg
inc
adc
jmp
incb
leave
sbb
popf
aas
lea
dec
xlat
cmp
in
lods
ljmp
add
push
push
sbb
out
mov
fisttps
add
fcmovnb
inc
shrb
jg
mov
popa
ficompl
sarb
cltd
and
inc
jb
jl
pushl
push
jecxz
mov
aam
cld
jne
call
pop
orl
insl
jno
call
mov
pop
push
push
xchg
jg
idivb
sub
pop
xor
fsubrl
mov
lods
mov
dec
shlb
pop
xor
cmp
mov
repz
mov
das
ljmp
fwait
pushl
add
pop
xchg
call
clc
jmp
mov
jb
and
ljmp
jmp
sub
shlb
ror
shlb
orb
cmp
lcall
out
mov
addr16
add
es
jo
int3
pusha
dec
mov
mov
cmp
push
hlt
cmp
shr
aam
popf
mov
push
idivl
cli
lock
sbb
imul
pushl
daa
mov
inc
adc
gs
inc
cmp
lcall
mov
pop
cmp
outsb
lock
sub
enter
ljmp
incl
and
and
sub
and
sti
dec
adc
xor
mov
mov
cs
xchg
fcmovne
jne
push
mov
and
inc
loope
ret
std
xchg
divb
mov
lods
lahf
incl
push
jns
push
ss
arpl
mov
add
sub
and
jmp
or
leave
call
lcall
popa
mov
pushf
ja
add
add
iret
adc
cmc
hlt
pushl
pop
fdivrl
pop
or
cli
es
rcll
pushf
mov
xchg
sbb
jle
add
dec
mov
pop
fst
addl
cmpsb
and
out
jle
aas
push
ljmp
adcl
test
inc
xchg
incl
mov
mov
lea
fisttpl
popa
fisubs
aas
jp
std
sbb
decl
mov
inc
or
and
imul
shl
adc
push
enter
jmp
fisubl
outsb
movsb
push
or
mov
push
sub
leave
loope
arpl
popf
jb
cmpsl
aas
std
rcl
and
push
jmp
add
cmc
clc
sbb
aad
xor
inc
call
dec
pop
inc
and
call
adc
ret
scas
jp
in
testl
ljmp
xor
test
adc
outsb
and
sbb
inc
dec
loop
lods
in
std
decl
sub
jnp
pushf
iret
lea
inc
push
jg
jno
stc
mov
push
add
js
pop
divl
inc
mov
mov
xchg
mov
add
loope
cmp
fcompl
shlb
std
jo
shl
fs
mov
faddl
lds
mov
inc
dec
adc
call
jmp
xchg
and
cmp
lds
lret
setg
push
arpl
test
int
lock
aas
dec
sub
pop
adc
mov
test
mov
push
aam
ret
adc
pop
push
dec
cmp
adc
xchg
pop
out
roll
jb
cli
fists
jmp
cmc
mov
jecxz
inc
lcall
xor
mov
orl
pinsrw
rcll
jmp
filds
scas
jne
dec
cmp
fistpl
cmpb
mov
shrb
mov
xchg
rol
ss
xchg
pusha
arpl
mov
insl
je
push
add
mov
dec
inc
stos
mov
cmp
jge
or
inc
enter
push
aad
ret
and
sbb
push
ds
out
adc
adc
pop
or
incl
inc
mov
negb
jl
cmovle
xchg
jb
aad
data16
push
ljmp
movsb
xchg
add
nop
cmovbe
imul
lcall
std
pop
addr16
stc
push
push
jg
pop
sbb
test
mov
and
mov
mov
imul
outsl
push
lahf
cmc
mov
enter
aas
xchg
jo
jmp
cmp
aas
fstp
sub
or
mov
mov
pusha
mov
in
cli
cmpsl
mov
push
outsb
test
xor
loopne
cmc
imulb
sti
push
out
mov
incl
dec
pop
and
add
add
jo
add
push
stos
lcall
add
inc
pop
pop
outsb
std
xor
data16
fs
jb
inc
add
scas
cmp
mov
mov
rcll
sbb
mov
hlt
subb
mov
ds
fdivr
xchg
mov
push
mov
pop
negl
std
xchg
pop
cmpsb
pop
stos
push
js
pop
xor
jg
int
cmp
test
mov
inc
jno
mov
cld
popa
xchg
sar
lcall
test
repnz
push
inc
lret
shll
sub
adc
add
cmpsl
scas
jmp
cmp
xor
jnp
mov
cld
lcall
shll
add
or
punpcklbw
cmp
lcall
loope
daa
sub
pop
decl
add
out
inc
add
test
or
cmpsb
jg
jp
out
clc
inc
hlt
movsl
dec
fistl
cli
jbe
ljmp
andl
call
ljmp
mov
icebp
call
jmp
sub
pop
inc
dec
scas
addr16
mov
lcall
std
adc
adc
shlb
xchg
and
jo
bound
cli
sbb
or
fmull
clc
std
add
insl
fstpl
call
idivb
mov
loop
jnp
push
inc
pop
clc
jmp
pop
push
filds
dec
add
clc
daa
std
repz
out
push
inc
pop
dec
loop
stc
jmp
jne
and
and
lock
stos
lahf
pop
test
or
das
clc
pushf
test
icebp
cli
call
into
fnsave
mov
dec
mov
cmp
mov
mov
mov
int3
or
lcall
push
and
hlt
jb
jp
inc
add
aaa
pop
push
movsl
and
loope
decl
push
xlat
out
aaa
icebp
js
outsl
std
daa
orb
rorl
mov
add
inc
sub
xchg
sbbb
mov
mov
and
insb
add
pop
incl
in
ljmp
jg
pop
int
pop
jg
sub
pop
and
jle
add
xor
jp
xchg
arpl
in
shl
into
xchg
pop
out
add
pop
icebp
test
push
call
mov
xchg
add
popf
insl
jnp
int3
push
iret
pop
or
subb
inc
cld
pop
scas
or
push
pop
nop
push
xchg
inc
ss
pop
inc
jnp
adcl
mov
and
sti
cltd
inc
or
imul
ljmp
pop
push
sbb
mov
cs
mov
add
mov
add
iret
int3
das
in
or
or
jo
cmp
and
fnstenv
and
inc
jmp
imul
movb
outsl
mov
jmp
arpl
jmp
pop
fldcw
cmp
out
jle
pop
in
sub
lret
pop
adc
sub
lcall
movb
inc
aas
in
dec
call
ficompl
icebp
pop
aaa
ds
inc
mov
or
sub
test
mov
lcall
jmp
cmp
xor
mov
sbb
xchg
lea
fstps
sbb
pop
cld
cmp
jno
mov
pop
stc
inc
mov
addr16
sbb
pop
push
jno
sbb
sbb
cmp
outsb
adc
and
sub
jmp
dec
inc
dec
icebp
fbld
pop
ss
aam
sti
scas
pusha
repz
pop
jmp
sarb
ret
movsb
dec
aam
scas
loop
jmp
or
loope
outsl
ja
inc
lock
call
and
dec
dec
std
es
nop
pop
mov
movsb
push
xor
iret
and
cli
decl
push
ret
stos
loop
js
or
sub
sbb
adc
pop
cltd
ret
sub
mov
cmp
dec
mov
inc
or
fs
dec
xor
xchg
mov
adc
sbb
xchg
sub
jecxz
not
les
mov
pop
mov
add
fstl
ja
int
mov
fcompl
push
sub
das
lds
hlt
sub
jg
fs
inc
cld
dec
jl
jmp
gs
cmp
push
mov
add
add
push
jge
ret
mov
imull
jmp
dec
jmp
xor
or
xchg
shlb
and
sub
jno
out
inc
dec
std
cs
push
mov
int3
enter
out
out
arpl
jno
add
out
add
js
adc
movsl
add
lcall
xor
pop
add
test
jp
cwtl
divb
push
mov
or
ja
insb
mov
xchg
push
push
jg
mov
in
nop
movsb
sbb
inc
outsl
jne
push
inc
movsb
adc
push
popa
pusha
jecxz
in
mov
ja
push
aad
std
xlat
add
mov
cld
dec
rol
inc
insl
and
lods
inc
nop
rcrl
gs
lahf
ja
out
outsb
mov
adc
or
decl
hlt
enter
ror
aas
push
sahf
outsb
push
rcl
aas
aad
pusha
push
lods
stos
adcb
jg
icebp
out
aas
aas
mov
xor
jno
and
mov
ficomps
xchg
mov
push
xor
movq
nop
inc
mov
enter
cmp
jle
fdivr
jg
decl
mov
or
movzwl
push
pop
adc
inc
sbb
fsubrs
decl
xchg
sub
and
mov
adcb
out
adc
sarb
sbb
xor
xchg
add
mov
sbb
sbb
mov
lea
pop
sbb
call
xchg
push
mov
xor
lahf
pop
jbe
fucomip
loope
cli
lcall
loope
adc
aaa
ljmp
stc
cmpsl
es
inc
ds
movsb
in
mov
or
fstpl
repnz
mov
dec
es
push
into
mov
cmpsl
cmc
stc
add
imulb
shl
xchg
scas
into
subl
call
call
xchg
or
mov
cmpsb
fisttpl
mov
push
pushl
pop
adc
ja
mov
scas
aaa
jo
loope
jmp
incl
xor
xor
pop
iret
mov
add
sbb
xor
jg
xchg
pushf
add
sub
xchg
add
dec
out
pop
cmp
sar
push
xor
call
fisubs
jne
jl
hlt
inc
xor
xor
sbb
sbb
adc
sti
popa
xchg
cli
decl
mov
jo
test
adc
mov
push
inc
lcall
mov
cmp
and
in
push
stc
push
aad
aas
push
inc
lea
lods
or
inc
das
sbbb
pop
sub
mov
add
mov
imul
xchg
lret
adc
incl
push
popf
and
pop
xor
mov
fcomps
push
mov
das
add
push
in
fistpll
mov
lds
push
xchg
lock
adc
in
inc
lds
int3
mov
addr16
incl
std
adc
ret
cltd
mov
mov
push
push
pop
or
ljmp
lcall
fcom
push
cld
xchg
push
lcall
insb
jl
into
test
pushl
out
pop
inc
rcr
cld
faddl
js
fldenv
in
sbb
rol
negb
js
pop
mov
ds
aas
push
add
rcrl
iret
mov
out
adc
pop
jmp
incl
add
lcall
bound
stc
icebp
bound
mov
xchg
inc
inc
filds
mov
loopne
dec
jns
fadd
fmulp
pop
inc
loope
inc
xorb
jg
jg
adcl
imul
xchg
jmp
mov
test
jns
pop
mov
mov
mov
lcall
pop
in
push
sub
dec
ret
repnz
icebp
rclb
loopne
jns
repz
pop
jl
cwtl
pop
add
or
jge
dec
test
add
loopne
shrl
jg
and
mov
clc
pop
nop
popa
out
dec
pop
mov
nop
andb
jg
mov
jge
movsb
into
adc
insb
sub
xor
mov
or
dec
sbb
push
mov
sub
sbb
inc
cmp
jg
incl
pop
mov
out
push
rcrb
leave
inc
xchg
ljmp
call
mov
hlt
jb
push
ljmp
movsl
test
imul
cmovbe
call
cmp
cmpsb
xor
inc
adc
das
out
ja
fistps
incb
cmc
cmp
jmp
dec
ficompl
xchg
rcrb
push
pop
add
imul
js
inc
outsb
and
pushl
out
roll
sbb
aaa
hlt
mov
imul
jle
outsl
imul
decl
pop
mov
clc
popa
push
daa
fcoms
mov
popa
test
inc
inc
stos
pop
mov
test
lds
or
repz
cmc
mul
incl
and
or
bound
pop
or
imull
add
dec
adc
cli
push
loopne
adc
pop
cli
mov
dec
or
pop
or
cli
popa
pop
loopne
in
dec
fimuls
and
lret
ljmp
pop
xchg
sarl
aas
std
dec
jg
inc
push
push
sar
lock
cmp
fistpll
imul
fwait
push
sub
test
test
addb
dec
pop
adc
cmc
jmp
add
fwait
sbb
cli
xchg
push
test
push
inc
cli
inc
pop
push
fbld
in
jl
xchg
cmp
incl
mov
mov
loopne
push
loopne
std
loope
jge
or
fistps
xor
mov
xor
cmp
sti
imul
or
sbb
fstpt
pusha
xlat
or
ds
lcall
ss
lahf
cmpb
cmpsb
mov
loope
xor
pop
repnz
out
clc
incl
sbb
push
push
inc
stos
dec
jmp
jg
test
in
jle
push
stos
mov
in
cmp
mov
push
adc
and
cmc
outsb
ds
incl
subb
adc
cld
jp
sub
adc
dec
sbb
sub
push
mov
les
sub
pop
jl
pop
mov
aaa
push
ds
inc
lea
and
neg
call
fdivs
xchg
pop
push
popa
imul
or
ret
push
repz
mov
xchg
sahf
xchg
cltd
aam
test
jg
ljmp
adc
in
pop
imul
jge
lock
test
stos
incl
repz
rcrl
add
iret
arpl
push
mov
jno
mov
ljmp
ljmp
jmp
pop
jno
adc
jmp
pop
out
xlat
arpl
ret
fimull
jo
cs
mov
imul
faddp
xchg
xchg
cmp
popa
ret
sub
xor
mov
aas
lahf
pusha
jae
sub
and
push
cmp
add
test
and
adc
push
ds
pop
or
shlb
mov
add
call
mov
iret
and
push
jae
stos
rcr
ljmp
jmp
cmp
fadd
pop
adc
pop
sub
js
aad
in
pop
push
gs
icebp
incl
icebp
cld
jmp
lods
or
xchg
mov
outsl
add
jg
ja
fldcw
iret
and
leave
mov
es
and
ljmp
sbb
movsl
rolb
add
testl
jno
and
fcompl
adc
jecxz
stos
pop
xlat
jns
inc
mov
and
test
call
cmp
leave
loopne
and
pop
shll
notrack
mov
inc
es
aas
mov
test
inc
pop
jmp
adc
loop
cmp
incb
push
jle
xchg
pushf
cmpsb
pop
subl
fisubl
jne
ljmp
insl
insl
mov
xlat
xchg
cmp
clc
xchg
std
rep
cmp
stc
int
pop
lods
pop
fdivs
sti
decl
xchg
or
or
cmc
xchg
mov
or
pop
add
aas
xor
cli
cld
outsl
sbb
jo
outsl
test
insb
fiaddl
jmp
jmp
mov
lahf
dec
fildl
jmp
lods
add
imul
jg
cmp
dec
ds
sub
dec
aas
mov
lcall
cmp
inc
adc
dec
movb
push
jns
scas
push
inc
lret
push
mov
in
mov
cld
jg
push
mov
cmpsb
lahf
stc
pop
mov
out
arpl
repnz
mov
incl
aas
dec
xchg
mov
push
xchg
aaa
xchg
leave
cmpl
hlt
incl
xchg
xchg
sub
ret
add
push
add
cmp
incb
sub
inc
pop
mov
decl
push
outsl
movntps
cmp
mov
xor
divl
hlt
cmp
cmpsb
cmp
add
call
ds
push
test
movsb
imul
cmp
movsl
push
xchg
mov
xor
icebp
lcall
rcll
insl
sbb
pop
aaa
mov
leave
xchg
ret
call
hlt
inc
lret
inc
shrl
sti
pop
inc
pop
out
psadbw
or
jg
mov
push
mov
jbe
filds
jno
in
inc
arpl
cmp
ja
push
fcompl
incl
ja
sbb
jne
xor
outsl
aaa
jp
es
pop
inc
mov
cmp
hlt
popa
xchg
rcrb
push
loopne
in
in
mov
lds
push
push
add
notb
dec
ljmp
cmp
jae
xchg
inc
lahf
enter
mov
xchg
jg
ja
incl
movb
sub
push
pushf
rorb
cwtl
jno
outsl
add
lods
enter
dec
sti
lds
pushl
mov
push
imul
xor
or
std
jno
or
incl
mov
mov
push
lods
mov
faddl
sbb
push
jne
jmp
mov
push
lea
jecxz
add
clc
adc
addl
data16
mov
sub
mov
data16
subb
popa
pop
insb
jl
jo
lea
add
lret
add
fstpl
mov
inc
xchg
iret
fwait
inc
nop
adc
js
fbstp
outsl
sbb
dec
frstor
and
fistpl
pop
mov
leave
xchg
jge
cld
imul
pop
push
imul
mov
pusha
push
inc
jae
in
and
pop
mov
out
jns
lcallw
lcall
call
mov
cli
add
aam
pop
xchg
adc
repz
pop
jg
and
mov
adcb
adc
bound
ds
or
push
decl
mov
daa
shlb
xor
cltd
push
ret
hlt
imul
inc
incl
insb
xor
pop
jmp
clc
stc
cmpsl
decb
dec
fisubs
pop
sub
push
pop
xchg
loope
test
mov
into
std
xchg
mov
paddd
decl
cltd
pop
cmp
xor
daa
sbb
lret
push
out
mov
mov
call
cld
outsb
add
xor
cmp
stc
add
movsb
cmpsb
jg
pop
popa
add
jmp
sbb
repz
jne
jno
ljmp
aas
std
ret
ja
and
aas
loope
testb
or
popa
jecxz
call
nop
add
int
icebp
dec
arpl
sbb
mov
xchg
pop
adcb
push
idiv
mov
and
incl
cmpsb
mov
jbe
cmp
xor
call
or
icebp
enter
fildl
mov
dec
sbb
mov
lret
decl
stos
inc
cmpsb
cmpsl
loop
rorl
in
dec
mov
cmpl
add
pop
or
pop
xchg
xchg
push
dec
imul
std
and
rcrb
jle
pop
dec
call
aas
sbb
cld
mov
pop
jge
pop
jecxz
in
rclb
sbb
adc
add
sbb
mov
add
cmp
popa
mov
fisubl
ss
jae
inc
push
cwtl
mov
aas
jecxz
lea
mov
and
leave
aas
xchg
cmp
add
or
push
push
iret
pop
xchg
scas
and
into
cmp
adc
xchg
pop
cld
loopne
jg
and
std
imul
mulb
addr16
rcrb
orl
lcall
ljmp
push
cwtl
xor
and
mov
arpl
push
stos
aas
cli
mov
andb
lock
cld
mov
cmovo
hlt
aaa
or
inc
loopne
jbe
sbbb
sti
ljmp
loopne
cmp
decl
imul
lcall
cld
flds
sub
add
jg
lcall
leave
movsl
sti
jno
mov
add
loopne
test
loop
pop
test
cmp
sar
ljmp
hlt
dec
lret
dec
nop
sub
loop
sti
mov
andb
lcall
cld
std
pop
inc
xor
lods
fnstsw
lahf
push
sub
jge
call
cmp
xchg
ss
inc
push
and
les
nop
push
aad
out
out
xor
sarb
addr16
and
inc
dec
repnz
adc
inc
out
shl
cmpb
repnz
add
sti
jg
ljmp
jmp
das
js
jnp
mov
adc
lock
jmp
scas
dec
clc
cmpsl
jmp
jbe
test
leave
jmp
pop
test
pop
std
call
xlat
mov
ja
and
xlat
adc
add
rorb
cli
or
loopne
mov
cmpb
fsubrs
mov
ljmp
or
adc
push
mov
xchg
and
stos
and
decl
adcl
add
jl
sub
inc
adc
out
sahf
cs
ljmp
pop
cld
jmp
dec
cmp
xor
mov
icebp
pop
lret
jge
mov
nop
jp
dec
ret
pop
insb
das
idivl
xchg
pop
jo
pop
incb
arpl
mov
adc
mov
ret
fadd
call
incl
push
pop
push
std
andb
ret
jle
orl
nop
jl
mov
jmp
inc
and
test
and
fwait
add
or
ljmp
decl
lock
aas
fisubrl
in
xchg
aaa
pop
pusha
enter
pop
adc
rolb
aam
jmp
data16
dec
adc
lock
push
mov
inc
pop
out
mov
js
cli
pop
push
mov
sub
shr
xor
sbb
clc
jg
lock
and
xchg
stos
sub
inc
jmp
rcrb
lea
push
aas
and
inc
outsb
pusha
lock
jl
outsb
add
jp
xchg
lcall
loopne
add
add
inc
inc
push
push
sbb
call
mov
mov
in
add
jg
and
cmc
push
pushf
das
adc
fdivrl
dec
or
andb
loope
dec
int
cmpb
jecxz
jnp
jp
sar
cld
adc
add
jbe
xchg
clc
call
cld
pop
std
hlt
incl
ss
adc
mov
rcl
fistps
adc
jnp
sub
aas
mov
mov
pop
pusha
sbb
push
aaa
xchg
mov
orb
lret
dec
loope
inc
jo
or
push
pusha
pop
fcoms
xor
test
clc
sbb
dec
xchg
mov
cmp
sbb
mov
repz
push
or
push
or
imul
sbb
jg
inc
cmp
mov
enter
mov
inc
adc
inc
sbb
push
call
and
pop
dec
addb
inc
loope
xchg
jo
bound
incl
roll
inc
add
push
scas
sub
push
push
cmpsb
dec
jbe
xor
adc
jmp
addl
shlb
or
jg
xchg
in
and
mov
les
or
sbb
and
std
ljmp
pop
inc
or
jns
stc
pop
mov
add
adc
cmp
call
add
nop
add
sbb
cli
cmp
adc
sbb
jg
lock
xlat
mov
clc
adc
or
aam
xchg
mov
and
and
imul
out
ret
push
add
mov
movsb
xchg
test
dec
daa
jge
out
clc
loopne
dec
dec
and
scas
jo
outsb
lahf
cmp
and
fnstsw
jmp
jb
cmc
push
and
rcr
outsl
pop
lea
pushf
push
mov
mov
xor
ds
push
pop
incb
aaa
mov
mov
outsl
repnz
daa
incb
into
out
incl
lock
int3
mov
std
mov
lock
call
mov
out
or
cmp
test
push
cmp
cmp
jmp
daa
xchg
push
xchg
and
xor
out
fmul
lods
adc
inc
add
shlb
nop
push
ja
and
in
ss
xchg
xor
lcall
mov
fwait
test
cmp
push
xor
add
out
lea
ljmp
into
loopne
mov
repnz
sar
mov
xor
addr16
cmp
nop
inc
jb
leave
pop
cwtl
mov
mov
jmp
loope
sbb
ljmp
mov
push
pop
call
or
mov
rorb
push
lods
or
mov
pop
dec
repz
lcall
jmp
or
xor
sub
jnp
adc
cmp
jg
decl
or
mov
jnp
and
and
imul
push
add
sbb
aad
ret
stc
lahf
bound
pop
push
icebp
add
sbb
mov
in
xchg
pminsw
notb
add
push
and
pop
inc
iret
inc
add
pushl
and
das
jmp
outsl
mov
cs
inc
sar
xlat
add
arpl
js
leave
jge
scas
lcall
jge
lock
repz
fwait
mov
or
sbb
mov
call
pop
loopne
sub
xchg
jg
movsb
lahf
rolb
or
mov
decl
lahf
jno
xchg
icebp
mov
gs
mov
in
jbe
ja
shrb
iret
mov
aas
push
or
add
cmp
iret
mov
shll
and
inc
hlt
dec
mov
stos
mov
pop
jle
jmp
jmp
inc
push
xor
cld
dec
cmp
mov
cld
add
mov
jg
xchg
scas
pop
dec
enter
fstps
pop
add
cld
mov
outsl
jbe
jge
push
jmp
pop
clc
test
dec
add
push
imull
and
out
aaa
adcl
fcmovnb
fsts
loopne
fsubl
pop
xor
dec
cmp
iret
jns
test
ljmp
imulb
mov
sbb
cmp
daa
and
ljmp
arpl
adc
stos
insb
cli
jp
addr16
ljmp
mov
mov
mulb
cmp
mov
ljmp
rcr
ljmp
insb
add
push
add
outsb
lret
xchg
les
or
int3
pop
es
xor
movsb
xor
pop
jmp
xor
leave
shlb
inc
loope
pushf
add
push
dec
lock
in
sbbl
loope
cs
mov
sbb
out
pop
std
jmp
or
push
and
mov
mov
mov
xchg
inc
jmp
cmp
pop
push
iret
mov
and
or
pop
incl
inc
movups
fadds
cli
add
loop
pop
sub
pop
test
dec
lcall
push
lods
das
mov
mov
jne
decl
add
dec
pop
xor
decb
inc
pop
pop
loope
leave
bound
in
lds
add
fs
aas
rcrb
aas
pop
lock
and
lahf
ret
out
cmpl
ret
ficoms
xchg
mov
inc
lods
fiadds
movb
mov
inc
cmp
and
pop
into
aas
sti
cs
inc
lock
add
or
cmp
ret
inc
out
inc
xorb
aas
jg
sar
mov
std
jge
xchg
scas
int
adc
movsb
push
inc
or
pop
jns
and
std
jmp
in
rcll
add
cmp
jge
inc
mov
jle
pop
cld
jg
xor
mov
movsb
aas
sbb
push
sbb
add
push
dec
push
cltd
ret
incl
loop
sub
popa
rorb
ss
sbb
ret
cs
imul
jmp
mov
xor
add
mov
or
mov
xchg
decl
xlat
push
pop
mov
push
mov
iret
mov
clc
js
mov
jg
outsl
mov
push
mov
fisubrl
mov
push
cmp
jmp
pushl
or
sub
into
sbb
mov
dec
xor
incl
incl
aad
mov
add
jle
dec
add
or
mov
jb
push
incl
sub
xor
jno
fcomps
mov
mov
mov
pop
cli
mov
decl
add
push
arpl
arpl
or
cmp
iret
push
ret
jmp
jle
test
adc
or
or
mov
jmp
enter
pop
pop
std
push
lcall
shll
shlb
pusha
inc
xor
divl
sub
ds
call
in
clc
inc
pop
xchg
cmp
jl
test
pop
arpl
loopne
dec
and
inc
dec
lcall
sarb
stc
fs
in
ljmp
xchg
rorb
push
push
shlb
add
mov
xor
jg
pop
jmp
mov
aas
ret
jne
rclb
mov
xor
cs
incl
jo
scas
sub
jmp
in
sbb
test
icebp
mov
or
pop
decl
das
jge
xlat
sub
sti
sub
fdivl
pop
xor
jmp
cmpb
add
pop
arpl
mov
adc
push
out
ficoms
jle
loop
shll
jp
mov
cmpsb
in
iret
flds
loope
mov
out
sub
scas
or
subb
cmpsl
aam
jmp
add
xchg
getsec
js
inc
inc
inc
icebp
sarl
or
sahf
or
dec
clc
stos
scas
cs
and
jg
and
push
pushf
fdivs
popf
sub
jmp
dec
mov
sahf
aas
inc
cltd
cmp
int
mov
pop
daa
jge
dec
je
js
incl
inc
mov
or
add
fsubrl
xchg
iret
aas
or
lock
ja
and
sbb
dec
clc
and
lahf
pop
lods
scas
mov
sbb
call
adc
or
adc
loope
add
sub
std
cmp
test
fsincos
dec
ljmp
jmp
cmpb
mov
pop
ret
lcall
out
jmp
mov
jno
xor
sub
jl
decl
add
cmp
push
jno
repz
iret
and
pop
aam
addb
repnz
inc
or
into
ret
adc
ja
sub
incl
and
bound
sbb
insl
adc
subl
sbb
jb
jo
popa
sbb
cld
jg
add
jnp
gs
test
fnstcw
cli
stc
xchg
xchg
xchg
lret
adc
inc
rcll
std
pop
jecxz
or
mov
jecxz
jecxz
inc
loopne
repz
sub
cmpb
or
sbb
and
add
xor
movsl
add
or
ljmp
movsb
aad
mov
rolb
addr16
xorl
mov
jmp
and
mov
loope
cmpsl
rclb
push
sahf
push
sbb
push
aad
jmp
sbb
icebp
cli
sub
cmp
mov
rcr
out
push
mov
ljmp
lcall
sbb
gs
pop
jnp
ret
subb
xlat
pop
lret
cmc
push
or
or
jno
xor
pop
insb
sub
loopne
inc
outsl
adc
ds
mov
mov
clc
jmp
nop
test
pop
int
mov
jmp
ljmp
jg
cmc
mov
push
mov
jmp
idivb
inc
incl
arpl
movsb
and
sub
movb
sahf
add
std
push
scas
cltd
loop
ljmp
ret
sub
lret
addr16
push
inc
lods
sbb
test
fs
xchg
jmp
jae
mov
js
sub
das
call
out
xchg
xor
lret
mov
incl
loop
jmp
in
bound
mov
mov
decb
add
add
jle
mov
jl
lcall
cmp
jmp
inc
cmp
and
and
inc
mov
pop
cli
jg
clc
push
and
aaa
mov
adc
aas
xchg
daa
dec
mov
adc
mov
xchg
mov
decl
jge
xchg
rcrb
int3
xor
xchg
add
leave
repz
mov
or
add
inc
mov
xor
loopne
mov
ja
inc
push
push
pop
sbb
aas
int
mov
fiaddl
xor
fsub
decb
mov
movq
pop
mov
sub
out
aas
rclb
ljmp
icebp
pop
sbbl
loope
mov
sbb
scas
pop
in
jae
test
push
jmp
std
xor
sbb
jbe
xor
jmp
cmp
pushf
push
sti
mov
lock
clc
incl
aas
xchg
inc
imul
hlt
test
std
lret
pop
testb
jb
dec
fnstcw
insb
insb
mov
sub
mov
aas
sbb
jbe
pop
iret
pop
hlt
test
popa
jae
xchg
imul
ljmp
loopne
push
sarl
fcomps
jl
or
in
pop
cmpsl
xchg
cwtl
push
jg
ljmp
rol
adcb
or
and
jecxz
cmp
add
arpl
push
xchg
inc
decl
ret
push
jmp
pop
repnz
pop
cmp
adc
jp
icebp
insb
ljmp
ffree
sbbl
or
inc
xchg
ret
cmp
arpl
inc
decb
adc
outsl
fwait
mov
sub
ljmp
loop
or
inc
addr16
out
dec
inc
xchg
sbb
int3
push
loop
dec
jmp
pusha
and
sbb
fisubrs
inc
rcrb
das
in
and
ljmp
in
outsb
push
xor
stos
push
cld
outsl
ret
cli
sbb
insb
jg
add
iret
lcall
lahf
enter
mov
repz
mov
jg
add
pop
push
xchg
cmpsl
mov
sub
nop
sub
mov
push
ret
adc
decl
or
incl
mov
inc
mov
mov
pop
adc
xorl
clc
incl
or
fists
inc
aas
out
call
jno
push
pushl
lods
cmp
pop
es
in
lcall
mov
mov
pop
std
jmp
adc
jae
inc
xor
or
sub
jg
std
movsl
sbb
ret
jg
adc
mov
out
jp
decl
mov
pop
das
call
inc
mov
subl
icebp
aaa
mov
and
pop
adc
jmp
insl
cwtl
and
int3
or
pop
cmpsl
lods
push
xchg
add
out
add
daa
sbbl
xchg
jno
smsw
push
jle
sbb
mov
xor
pop
add
ret
test
xor
sbb
or
fwait
sarb
mov
mov
cmc
mov
add
mov
push
pop
jmp
push
nop
js
cwtl
enter
mov
xor
jmp
hlt
mov
jbe
mov
pop
repz
sub
sti
mov
jmp
mov
lds
decl
sub
imul
insb
add
push
test
mov
mov
in
bound
notl
jg
aas
cmovns
or
loop
out
orb
stos
pusha
sub
mov
sti
mov
fisttpll
and
lods
rclb
fwait
cli
ss
or
aas
cli
decl
rorl
arpl
dec
rclb
adc
popa
dec
out
out
divl
std
std
ljmp
in
call
jae
jmp
int3
js
ljmp
mov
mulb
pushf
ds
flds
push
inc
or
ja
jo
pop
sub
jmp
push
mov
cmc
lods
dec
cmp
mov
addr16
decl
sbb
push
leave
mov
ds
dec
hlt
shrl
inc
loop
call
and
add
adc
inc
xchg
sbb
or
add
aad
cli
mov
push
mov
das
xchg
out
in
iret
or
movsb
shrb
mov
arpl
rolb
mov
outsl
xlat
sbb
dec
loop
mov
jbe
daa
or
and
idivl
sub
xlat
xchg
dec
imul
push
incl
push
cli
out
xchg
lods
into
sub
xorb
call
inc
mov
rcl
cmp
call
sub
and
fdivl
xchg
cmp
stc
pop
subb
adc
lahf
decb
and
cmp
jmp
cli
mov
lds
mov
inc
add
and
cwtl
jge
pushl
sub
push
mov
addr16
xchg
outsl
test
pop
sbb
push
xor
or
aaa
add
xchg
loopne
pop
ret
loopne
arpl
nop
inc
arpl
loopne
outsl
jne
out
orb
insb
call
jmp
lret
sub
dec
ret
fwait
leave
jge
jmp
lcall
jmp
shll
cld
xchg
int
repz
mov
lcall
nop
lret
mov
pop
cs
flds
sub
std
scas
lea
xchg
sbbb
pop
xor
cmp
lds
adc
sbb
adc
sbbl
rol
repnz
in
in
or
nop
cs
push
sub
les
scas
cmp
loope
push
jecxz
or
repnz
incl
inc
jl
or
scas
mov
mov
daa
orl
loopne
mov
adc
aas
adc
add
movsb
das
cld
cmpsb
andl
push
rcl
insb
lahf
std
lahf
jle
ljmp
xor
and
pop
and
imul
push
ja
mov
inc
test
insl
sub
and
jge
xor
int3
or
xor
insl
add
sti
int3
stos
mov
loope
jmp
add
hlt
inc
loopne
pop
sub
cwtl
stos
imul
and
xchg
jb
dec
vphaddubw
enter
add
lock
testl
arpl
cli
decl
fdivrs
and
inc
inc
jl
jecxz
push
std
sub
adc
fidivrs
xor
daa
pop
cmpb
loopne
or
add
incl
je
and
mov
aaa
movsl
mov
decl
xchg
jg
cld
sub
cmp
in
aad
fucomip
stos
iret
xchg
aas
cli
push
fldcw
mov
cmp
sub
sub
push
stos
mov
std
jmp
lcall
mov
aas
loope
scas
fwait
push
mov
pop
push
jg
out
push
xor
call
xchg
mov
aam
pop
inc
add
dec
xchg
pop
lock
decl
int3
mov
mov
mov
lods
lret
shrl
jb
mov
decl
sti
mov
in
cld
das
daa
jle
mov
std
outsl
sub
les
push
inc
loope
mov
add
mov
testl
mov
fiaddl
loopne
gs
inc
sbb
or
xor
cmp
jecxz
jg
cmc
mov
rcll
cmp
inc
mov
jae
arpl
cltd
sub
push
pushl
cmc
filds
fcomp
and
fs
scas
cwtl
std
inc
pop
es
dec
sarl
mov
add
jp
inc
push
mov
pop
push
dec
inc
loop
lcall
adc
or
fs
enter
rorl
push
xchg
sbbb
shrl
inc
std
lahf
xchg
outsl
cli
imulb
test
sub
das
pushl
push
inc
add
mov
xchg
rol
jb
test
mov
add
std
call
inc
scas
popa
jns
pop
jmp
fwait
dec
clc
push
stos
ficoml
dec
aas
mov
push
pop
sbb
call
ljmp
icebp
mov
push
jle
fistps
sub
sbb
es
incl
push
out
cltd
jno
lods
mov
std
rol
mov
pop
mov
testb
popf
aam
aad
jge
adc
cld
fiaddl
xchg
jbe
push
ljmp
sub
push
rcrb
rolb
mov
das
insb
aas
mov
pop
int
jmp
cmp
out
or
fisttps
pusha
mov
mov
out
lcall
outsl
or
pop
cmpl
pop
out
adc
sbb
orb
sti
mov
incl
and
lret
lcall
call
subb
mov
xchg
icebp
jmp
clc
call
pop
fwait
sbb
xchg
mov
loop
jmp
imul
pushl
dec
sub
aaa
sub
inc
mov
and
pop
push
xchg
pop
inc
push
and
aad
rorb
jmp
cmp
lret
inc
or
sbb
sbb
imul
dec
jle,pn
dec
add
and
mov
xchg
lcall
decl
dec
das
sbb
mov
jo
lahf
xor
sub
popa
data16
sar
data16
int
cltd
jge
in
mov
cmp
jmp
ljmp
stc
call
cmp
in
mov
mov
or
scas
test
mov
call
inc
mov
scas
pop
notl
mov
scas
pushf
lret
out
std
sub
cli
mov
cmpsl
je
lahf
in
mov
call
ret
inc
lcall
cmpsb
inc
add
push
push
pop
lcall
les
push
int
das
cmp
jecxz
adc
adcb
xchg
in
loope
pusha
adc
lahf
push
scas
dec
lcall
sbb
sbb
add
or
pop
jne
testb
ljmp
mov
mov
repnz
fs
and
loop
das
add
mov
mov
nop
sbb
fwait
and
pop
incl
cld
loope
jbe
jno
mov
mov
loopne
mov
pushl
pop
push
sti
inc
mov
mov
aaa
hlt
arpl
cmpsb
and
dec
incb
jg
cld
dec
jecxz
push
shrl
mov
fcompl
ja
icebp
incl
mov
rol
clc
and
cld
or
ds
incb
push
xchg
ss
call
dec
or
aaa
push
lea
sahf
es
add
cld
jne
negb
lcall
loopne
loopne
call
out
inc
jp
mov
mov
ljmp
xor
lahf
jp
add
pop
hlt
lret
jae
dec
mov
test
jmp
mov
shll
xchg
fdivr
insl
mov
xchg
fwait
pop
test
je
ljmp
adc
mull
ficomps
out
hlt
cmpsl
std
jp
sbb
mov
mov
push
and
add
rcrb
push
mov
add
inc
jae
mov
inc
add
leave
mov
cld
xorb
mov
xchg
mov
jns
arpl
scas
ret
and
mov
jmp
fistpll
incl
jmp
incl
sti
test
enter
pop
roll
mov
sti
pop
idivb
push
mov
xchg
arpl
incl
pop
cli
pushf
xorb
xchg
pop
in
jno
fdivrs
in
fcomps
adc
cli
out
paddw
mov
jg
fimuls
pop
pusha
jo
pop
xor
jbe
loopne
sbb
cmpsl
push
xor
es
aad
jne
xor
data16
repnz
loopne
jg
push
and
fdivs
xchg
jg
fsubrl
mov
outsb
in
lds
ljmp
jno
clc
sbb
movsl
and
jg
std
mov
cmc
cmp
lods
aad
fcmovbe
add
jg
test
aam
and
pop
insb
jle
inc
gs
lcall
jecxz
sahf
aas
lret
lock
std
cltd
ret
es
cmc
inc
pop
pop
repz
call
jl
decl
imul
cld
arpl
div
jo
xor
cmp
cld
mov
jo
or
ja
add
inc
aas
in
clc
pop
mov
dec
js
incl
pop
sub
addr16
dec
jle
and
adc
add
xlat
sbb
cmpl
incl
loope
lock
or
testl
jge
adc
out
rol
std
xchg
push
sbb
or
pop
mov
scas
inc
add
mov
pop
int3
mov
idiv
jl
insb
mov
jmp
ljmp
add
push
push
dec
decl
mov
jg
jg
dec
enter
sbb
pop
add
scas
mov
pop
mov
sub
dec
add
out
incl
mov
negb
test
sahf
add
mov
or
call
clc
xchg
jge
fldt
jns
js
js
add
lds
leave
jecxz,pt
lcall
inc
rorb
inc
pop
jle
pop
add
loop
sti
cmp
cld
or
mov
mov
mov
sbb
ljmp
imul
in
rcrb
in
and
hlt
jmp
cli
adc
mov
jmp
mov
fucomip
lahf
xchg
icebp
jg
lock
fildll
mov
aaa
push
inc
incl
dec
jmp
xor
cmp
dec
bound
inc
pop
and
test
xor
pop
bound
pop
jmp
adc
das
pop
movsb
ret
add
mov
push
sar
pushl
xchg
or
xor
cld
inc
cld
ret
fwait
sti
push
xor
xlat
jmp
jg
sub
outsl
mull
lcall
jmp
scas
incl
add
jge
push
pop
or
into
notl
daa
sti
dec
aaa
xor
loopne
ljmp
mov
pop
sti
in
aaa
cld
jl
cli
data16
and
push
xlat
lcall
mov
cwtl
cltd
lds
je
dec
lret
or
cld
jmp
cmp
movsb
cli
mov
and
and
mov
sbb
call
add
ret
fst
mov
inc
push
test
icebp
lods
fdivr
ljmp
mov
aas
mov
mov
je
dec
fwait
pop
mov
leave
icebp
clc
pushl
sti
mov
xchg
and
pop
stc
mov
inc
dec
repz
push
cmpb
ljmp
inc
orl
aas
notl
ljmp
std
loopne
mov
rcr
out
lcall
adc
xor
ret
sub
push
mov
aad
jmp
nop
jnp
jle
push
test
pop
or
lahf
shlb
incl
jne
ret
lcall
pop
jnp
pop
shll
dec
push
psubb
mov
push
shl
stos
and
repnz
fwait
daa
lcall
pop
cmpsb
test
push
lcall
out
mov
mov
testb
xor
inc
stos
imul
pop
push
jmp
aas
inc
outsb
shll
xchg
in
adc
incl
ds
add
add
sti
movsl
fwait
enter
mov
in
xor
call
xor
fwait
ret
test
aaa
add
mov
pushl
add
and
aas
pop
jns
inc
shll
pop
stos
jg
lcall
sub
lock
adc
sbb
jg
lret
in
push
pop
out
ret
loope
fistpll
insl
mov
decl
sub
fyl2xp1
das
add
cmp
int
mov
sub
dec
jmp
add
mov
sti
aam
cmp
out
jmp
dec
sbb
mov
inc
push
jecxz
pop
or
push
rol
mov
inc
or
insb
adc
xchg
push
std
lcall
outsb
mov
in
sbb
stos
fwait
ret
loope
out
nop
int3
decl
into
push
mov
push
fs
add
nop
mov
xchg
or
xchg
mov
icebp
ret
into
scas
lock
stc
arpl
cmc
loop
mov
and
stos
mov
std
pop
jg
adc
int
outsl
stc
loop
jne
nop
and
or
clc
rclb
mov
xor
lods
push
push
cmpsl
jo
fs
pop
nop
mov
lcall
and
jg
xchg
fstl
xchg
cmp
sbb
hlt
pop
add
mov
rclb
xchg
jmp
push
dec
addr16
xlat
inc
cmp
cmpsb
in
jno
gs
jno
scas
mov
insl
jmp
call
leave
fstpt
and
pop
sub
dec
out
push
sbb
add
decl
sub
push
mov
inc
loopne
pop
sbb
out
repnz
cld
and
enter
cmc
stos
xchg
adc
gs
push
dec
xor
vpsubb
std
jmp
jmp
push
push
push
xchg
es
cld
cltd
push
inc
imul
xchg
ljmp
dec
pop
out
push
ficompl
sbb
push
add
rcll
and
std
decl
cmp
std
sbb
sub
mov
jo
std
incl
fwait
cld
jecxz
cmpsl
pop
push
mov
jbe
push
inc
cmpsl
jle
and
or
shll
xor
dec
loope
lahf
movsb
jg
aas
pop
add
xchg
or
adcl
divl
repz
ret
testb
or
add
mov
and
push
jg
cli
jecxz
add
xor
leave
sbb
ds
pop
xor
cli
arpl
push
and
xchg
dec
sti
imul
mov
jo
nop
movsl
nop
adcl
inc
adc
dec
ficoms
fxch
add
push
or
jbe
pop
inc
addr16
incl
push
enter
jle
in
mov
repnz
fnstenv
and
incl
loop
mov
test
pop
cli
jne
gs
decl
pop
xchg
stc
gs
pop
outsb
mov
push
imul
incl
shrb
repnz
rcrl
loop
in
pusha
mov
clc
mov
add
jae
dec
adc
add
call
incl
into
sbb
pop
mov
sti
add
fnstcw
std
jmp
popa
inc
pop
mov
into
imul
js
iret
inc
mov
jns
inc
cld
fdivr
mov
push
ljmp
jns
push
cld
je
sub
sti
fdivr
into
jne
push
sub
or
pushl
mov
mov
aam
or
inc
pop
dec
or
or
ret
sar
icebp
rorl
sub
fistl
daa
enter
xchg
aas
stc
pushf
lcall
std
jmp
push
arpl
jno
ja
inc
add
lahf
test
loope
and
lea
and
aas
loopne
and
ja
sbb
or
mov
sahf
jne
imul
jmp
lcall
bound
xor
dec
cwtl
adc
nop
jge
dec
xchg
sub
imul
mov
cld
sti
call
loopne
lds
cmc
jne
or
adc
add
jg
test
test
cmp
out
inc
pushf
loope
les
jg
pop
lcall
dec
std
stc
add
test
pusha
decl
das
out
ljmp
jecxz
cld
mov
daa
jmp
shll
or
pop
cli
jg
outsl
sbb
adc
mov
rclb
add
mov
aas
in
mov
lock
xchg
std
call
orb
jae
add
call
lods
mov
and
or
or
loopne
clc
aas
sub
pop
mov
rorl
sub
call
jecxz
sti
loope
shll
cmp
pop
xchg
into
push
jo
xchg
and
cmpsb
aas
mov
cld
incl
data16
pop
sub
fsts
mov
popa
push
mov
shl
popa
test
adc
lock
incl
xlat
mov
inc
or
push
xor
decl
inc
repnz
or
xchg
cmp
sbb
jo
mov
inc
cwtl
nop
add
jne
mov
xchg
and
mov
jnp
jmp
sbb
pop
dec
std
push
leave
fucomip
push
sti
push
nop
inc
enter
or
pushl
mov
pop
out
mov
out
shrb
push
out
aaa
xchg
cmp
mov
or
xor
clc
loop
std
sbb
jmp
icebp
add
sahf
push
pop
dec
mov
cmp
cli
dec
or
in
je
leave
push
pop
push
pop
fsubr
add
imul
adc
lock
jb
mov
jg
inc
pop
jecxz
push
pushf
jg
sbb
imul
xchg
dec
cld
lret
xchg
adc
lret
inc
shlb
fnstsw
std
call
inc
push
xchg
xor
jle
nop
decl
jl
into
xchg
mov
fnstenv
add
popa
xor
inc
cs
xchg
stc
in
adc
cld
dec
std
fs
in
js
mov
or
jb
xchg
push
je
std
lcall
ret
pslld
addb
xchg
test
mov
xlat
andb
inc
cmp
cltd
mov
xor
push
fsubrs
idivl
shll
and
xchg
push
mov
mov
sub
shlb
std
fsts
aas
cwtl
stc
lods
mov
jg
jg
pxor
inc
int
lret
cmp
mov
push
jecxz
cmpsb
jl
xchg
dec
icebp
in
xchg
ss
sbb
cwtl
arpl
mov
dec
mov
hlt
push
adc
mov
cmpsb
push
arpl
lea
push
incl
mov
fisttps
das
mov
push
mov
faddl
xor
sahf
or
sbb
push
fdivs
rcll
subb
sti
cli
jae
adc
or
jg
mov
push
and
ljmp
les
std
xchg
loope
inc
jle
xor
pop
ds
call
mov
mov
push
jno
sbb
test
arpl
je
in
decl
dec
orl
and
nop
mov
jg
mov
xchg
mov
inc
imul
push
loopne
hlt
pushl
sbb
push
dec
dec
pop
pop
in
fcompl
push
mov
mov
pop
ljmp
add
in
std
push
dec
inc
push
jle
jg
xor
in
cmp
sbb
sbb
and
rol
jle
or
mov
pop
push
lds
loope
fsts
inc
or
lret
cmpsb
mov
jl
xchg
gs
mov
hlt
or
js
mov
or
fisttpll
mov
add
lahf
fcoml
jmp
iret
sbb
lret
cmp
sahf
mov
lds
stos
aam
sub
mov
pop
add
sub
dec
add
call
add
ljmp
rclb
pushl
cmp
cmp
lock
leave
xchg
dec
lds
mov
push
sar
aad
mov
jae
outsb
icebp
jbe
mov
mov
lds
ja
bound
adcl
sar
cs
iret
stc
xor
jg
pop
xor
adc
and
jmp
dec
in
aam
jbe
push
add
dec
mov
aad
iret
jg
ret
jecxz
mov
popa
sti
push
pop
cmc
add
sbb
imul
xlat
and
lods
inc
jg
pop
or
pop
sub
sar
lcall
daa
insl
xchg
rcrl
and
xlat
sbb
mov
lcall
decl
mov
nop
and
pushf
outsl
pop
dec
or
ret
mov
push
mov
mov
cmp
fbld
adcb
stc
daa
cld
sub
lcall
jmp
fs
ss
pop
fsts
sbb
mov
mov
cli
inc
fmulp
sub
in
ljmp
ds
jo
test
popf
and
addb
mov
mov
xor
cmp
cwtl
xorb
decl
pop
pushf
insl
dec
pusha
jmp
adc
lret
nop
inc
xchg
arpl
cmp
icebp
pop
xor
ljmp
jl
ss
je
in
rorl
add
cmpsl
xchg
mov
decl
repz
lea
lods
in
ss
test
push
mov
adc
jmp
sahf
dec
ja
inc
cltd
pop
mov
ss
ljmp
inc
adc
mov
movsl
jae
inc
cmp
in
jns
mov
aas
rol
push
mov
lock
pop
pop
mov
icebp
mov
sub
cltd
push
je
pusha
repnz
push
popf
and
jns
enter
mov
jnp
pushl
jmp
test
mov
sbb
push
test
ja
movsl
mov
call
push
sbb
push
les
inc
lea
xchg
mov
xlat
pop
in
cmpsl
ljmp
xchg
push
and
je
arpl
mov
or
test
mov
and
adc
adc
daa
or
mov
out
add
andb
push
decl
sbb
jle
div
inc
hlt
adc
sti
push
jecxz
arpl
adc
or
dec
mov
mov
aaa
scas
and
ret
jecxz
scas
push
pop
inc
mov
and
outsb
or
cmpb
dec
push
es
sbb
int
daa
fs
mov
cld
jnp
or
push
cltd
lods
mov
cmp
ljmp
pop
lret
cmp
sub
out
rorb
pop
ljmp
dec
aas
clc
mov
sahf
hlt
jbe
xor
dec
hlt
in
sahf
push
inc
cmp
std
dec
mov
inc
enter
sbb
or
cmp
pop
xorb
mov
call
call
jle
and
xor
jb
jno
xlat
insl
mov
jne
fisubrs
mov
out
testl
mov
test
inc
ss
jmp
jle
enter
call
pop
lea
push
sub
jge
mov
lcall
add
adc
subl
dec
roll
cmpsb
lcall
jmp
jo
sbb
nop
test
and
push
clc
fdivr
sub
xchg
xor
call
sub
adc
jecxz
ret
mov
shl
aad
xor
mov
cmp
loopne
sub
ljmp
xor
ljmp
mov
mov
or
add
repz
dec
cs
xchg
mov
sbb
decl
in
mov
xor
sub
repnz
or
mov
sub
ljmp
push
pushf
xor
cld
dec
in
loope
push
dec
cmpsl
std
mov
inc
jle
js
and
push
inc
lcall
mov
stc
out
mov
arpl
ds
or
decl
hlt
nop
inc
fsubs
xchg
scas
pushf
jnp
xor
push
leave
cli
fs
sbb
decl
pop
dec
xorl
sub
mov
mov
movsl
jle
jmp
jnp
and
sbb
add
inc
dec
lret
mov
fwait
push
hlt
das
arpl
loopne
cli
and
lret
pop
test
pop
cld
insl
add
mov
decb
repnz
lods
call
sub
std
clc
loopne
jl
sar
shr
insb
in
cmp
mov
fldenv
js
lcall
rorl
xchg
js
scas
add
jbe
pusha
cld
cmpsb
mov
inc
test
decl
ret
jns
mov
jl
sbb
pop
pop
cld
call
stos
cmp
pop
pop
and
leave
in
push
cmp
xor
sub
inc
sbb
loopne
lcall
js
std
ret
sub
pushf
adcl
pop
inc
sbb
jmp
ret
mov
shlb
sub
js
fistpll
pop
mov
outsb
cltd
incl
popa
jecxz
test
in
in
xchg
nop
xchg
cmpsb
stc
add
jecxz
adc
aam
push
xor
loope
loop
push
mov
jb
xlat
jecxz
lret
and
inc
aas
pop
mov
add
jle
test
mov
rcrl
and
inc
sar
mov
push
incb
and
sub
shrl
push
jg
adc
and
push
adcb
or
cli
fldpi
decl
pop
cmovl
dec
idiv
jae
sbb
sbb
test
add
pop
addr16
lcall
mov
cmp
out
cwtl
je
xor
pop
jge
xchg
inc
decl
jle
js
push
decl
jno
jp
in
out
dec
mov
or
stos
mov
outsl
add
cli
stos
dec
fs
cmpsl
out
sahf
mov
lds
out
mov
or
jnp
clc
loop
repz
push
shl
fstpt
sub
leave
xchg
mov
decl
cmp
jge
mov
pop
lea
ret
xor
lcall
shlb
pop
jp
adc
nop
or
sbb
stos
cli
push
or
cmpsl
decb
lock
std
pushl
faddl
aas
clc
cmpsb
lock
andb
mov
jge
add
jns
mov
mov
out
aas
mov
push
mov
test
dec
jmp
and
sahf
jno
or
lods
xor
and
mov
fnsave
xor
movsl
sbb
pushl
stc
mov
cld
stc
or
jmp
jo
shrl
sbb
frstor
mov
dec
ljmp
jg
and
jecxz
lods
cmc
ret
aad
mov
sbb
popa
dec
adc
sar
xor
or
pop
pop
mov
mov
add
lds
int3
adc
ud1
jg
decl
mov
imul
ljmp
aaa
fsubs
mov
aas
dec
and
out
pushf
test
faddl
pushf
mov
xchg
and
push
addr16
stc
ljmp
dec
dec
aad
lahf
js
mov
add
pop
and
test
push
sub
jg
decl
push
lock
xchg
addl
mov
incl
adc
sbb
flds
stc
in
movsl
incl
cld
cltd
outsb
mov
cmp
push
fs
int
jo
jg
decl
lods
lods
iret
xor
dec
fistl
lcall
hlt
test
cmp
ret
outsl
jne
fcomip
aaa
cli
movsb
outsl
adc
mov
or
pop
arpl
aas
add
in
xchg
scas
sub
push
fcmovnbe
leave
push
mov
sar
mov
pop
fmuls
scas
aas
pusha
adc
sub
mov
call
sahf
mov
movsb
push
cmp
loop
out
sub
gs
stc
push
aas
pop
sbb
dec
bound
cltd
sbb
mov
jg
jle
mov
out
test
fwait
clc
inc
stc
or
mov
push
lea
in
pop
mov
xor
pop
icebp
jg
arpl
sbb
dec
adc
dec
xchg
mov
pop
loope
aas
in
sub
jp
ret
or
scas
sub
or
push
push
pop
adc
lock
jmp
es
testl
fiaddl
rol
repz
cmp
inc
sti
stos
adc
aad
xchg
jge
loopne
and
out
pushl
roll
push
into
fidivs
dec
rorb
cltd
movsl
sbb
or
xchg
cmp
cmp
int
decl
out
mov
add
repz
movsl
or
mov
cmp
ret
xor
ud0
add
ret
pop
pop
js
inc
int
repz
loope
js
fdivrl
mov
pop
cltd
adc
and
and
mov
sbb
addr16
aas
clc
cmp
lds
xor
std
mov
mov
call
mov
cltd
xchg
ds
stc
jge
cmp
aam
cmp
sti
sub
mov
or
decl
jg
hlt
in
cmpsl
sub
and
gs
sbb
leave
lahf
cltd
sub
fcompl
mov
sbb
mov
iret
idiv
push
loopne
mov
out
stos
jg
rorb
inc
pusha
js
pop
cmp
pop
clc
cmp
decl
lock
sbb
xor
cmp
aam
ret
sbb
faddl
cmpsb
inc
pop
sbb
jmp
imul
mov
stc
or
lret
jnp
hlt
mul
call
and
mov
psubw
jo
daa
pop
mov
pop
lcall
pxor
pusha
and
mov
and
mov
hlt
aaa
cmc
cli
repnz
xchg
test
incl
ljmp
pop
push
and
jns
cmp
les
fsubrs
incl
hlt
ja
sbb
mov
orl
mov
mov
arpl
jg
mov
les
and
arpl
fldenv
adc
sti
mov
repz
jae
mov
stc
cmp
movsb
pop
stos
dec
lahf
xor
sahf
and
frstor
bound
outsb
push
fsts
pop
mov
arpl
clc
insl
add
iret
jb
stos
mov
inc
push
jge
stc
in
test
jg
clc
sbb
mov
nop
inc
das
dec
sbb
data16
or
add
pop
pop
jno
test
xor
movsl
pop
icebp
cmp
out
iret
fbstp
hlt
lahf
jne
out
sbb
aad
movsb
pushl
jle
add
fs
adc
mov
nop
pushl
mull
orl
ss
adc
incl
int3
clc
test
stos
stos
mov
out
ljmp
fwait
out
dec
lea
stc
inc
iret
fwait
dec
mov
mov
cmp
daa
jae
nop
xor
push
lcall
popf
sbb
jmp
mov
shll
bound
cmp
pop
leave
out
nop
or
sbb
rol
loopne
ljmp
fistpll
jo
push
sbb
repnz
or
dec
iret
stc
mov
pop
jbe
xchg
dec
sub
jle
pop
jmp
adc
mov
push
mov
cmc
loopne
ljmp
lahf
jmp
pop
outsl
popf
mov
sbb
push
sahf
rcrl
or
or
clc
cmp
push
incl
stc
fwait
lcall
push
incl
ss
sti
adc
into
dec
add
or
pinsrw
inc
lret
fwait
sar
mov
repz
out
push
inc
aas
mov
xchg
ja
pop
pushl
push
jecxz
sbb
subb
inc
sti
je
pushl
fxch
mov
ljmp
xchg
cwtl
fpatan
popa
cmp
jmp
lcall
inc
rol
cld
int3
pop
cmc
sti
sbb
adc
out
adc
rcrl
mov
add
cmp
repnz
xchg
push
pusha
in
and
cld
rol
out
inc
mov
xchg
nop
xor
add
out
fstp
jb
fstl
sti
cmp
incl
popa
xlat
sti
jno
jo
sub
mov
add
fisubs
ret
mov
rcll
faddl
mov
loopne
decl
push
push
xor
dec
pushf
aas
push
pop
fsubr
mov
dec
fnsave
filds
mov
or
bound
lret
pushl
shr
push
ret
test
scas
hlt
jle
add
insl
in
jmp
ja
aas
sar
in
ljmp
sub
xchg
leave
push
dec
mov
and
cmpsb
adc
mov
inc
aas
sub
enter
mov
lret
mov
aas
int3
aas
cld
imul
int3
xchg
sbbb
inc
popa
iret
add
ret
lcall
inc
jmp
lret
mov
adc
xor
repz
pop
cld
aaa
add
lods
das
lcall
jecxz
mov
imul
inc
lods
aam
lods
sti
arpl
in
incl
in
aaa
in
xor
inc
or
fs
xchg
and
js
mov
sub
jge
popl
and
lcall
jp
das
in
cld
mov
enter
inc
and
push
shr
inc
scas
jne
and
repnz
mov
aas
out
and
mov
out
jne
incl
fucom
dec
cmp
mov
dec
pmulhw
jae
loope
loop
call
aas
cli
aas
rcll
xlat
ret
and
nop
sahf
xlat
fldt
leave
stos
mov
pushf
outsb
push
aas
mov
dec
jbe
mov
outsb
mov
xchg
pop
mov
addr16
clc
fwait
jg
pushl
jae
pop
aaa
test
sbb
mov
pop
fwait
jnp
in
decb
loopne
or
outsl
mov
cs
or
jbe
push
push
mov
fwait
cmc
push
xor
fstpt
clc
fiadds
call
sahf
stos
aas
mov
lret
movsl
lahf
jge
jb
mov
jmp
test
mov
addr16
fprem
out
es
stos
push
xor
pop
incl
xchg
mov
dec
clc
jb
and
cmpl
xor
nop
xor
pushl
mov
outsl
mov
jecxz
std
adc
gs
adc
lcall
jmp
and
inc
jmp
cs
mov
mov
push
jnp
or
sarl
std
call
push
mov
xchg
jl
ja
lock
fidivs
clc
movsl
cmp
or
ljmp
adcb
pop
inc
pop
cmp
mov
push
mov
fistl
inc
call
jnp
pushf
adc
std
xchg
xlat
pop
pop
into
mov
lret
loopne
push
je
into
inc
aas
push
aas
test
aad
imul
je
mov
test
mov
outsb
in
mov
add
jmp
cltd
mov
mov
fdivrl
repz
into
sbb
push
jl
sbb
call
lcall
mov
movsl
ficompl
and
mov
push
hlt
test
aas
sar
add
push
and
daa
mov
sub
sub
jmp
inc
fst
mov
xor
add
nop
sbb
pop
adc
xchg
sub
push
push
sbb
shl
call
jo
pop
ret
pushf
out
psrlw
lods
fistpl
inc
lods
fcmovnu
lret
ja
lcall
cltd
or
aas
clc
call
jmp
sub
cmpl
xor
cmp
adcl
aas
std
das
loopne
nop
xchg
cltd
cmp
iret
ljmp
inc
add
mov
xchg
jne
lret
in
dec
pop
xor
call
data16
fs
mov
movhps
sti
jmp
mulb
repnz
push
xchg
push
dec
std
jg
cmp
pushf
jb
aas
sub
std
mov
or
test
or
add
sti
or
push
cmp
cltd
loop
or
xchg
add
push
mov
sar
cli
ss
push
fildl
jno
sarl
jle
out
cld
call
jle
xor
jecxz
hlt
mov
pop
stc
xchg
lahf
jbe
je
lods
add
jg
add
mov
push
rclb
adc
fsubp
inc
or
and
jmp
jae
addb
test
inc
psubw
je
movsb
testb
xor
mov
xchg
test
and
cmc
ret
fstps
imul
arpl
push
nop
dec
mov
pop
xor
mov
pushl
rcll
outsl
outsb
out
xlat
jnp
add
jge
mull
in
out
dec
pop
js
fsubl
repnz
ret
lahf
jle
xchg
cld
xchg
jl
and
add
or
cld
sub
iret
in
aas
scas
mov
jge
sti
add
mov
sub
cld
incl
imul
stc
popf
xor
jl
data16
mov
mov
fcoms
shld
imul
cmp
scas
mov
in
int3
ljmp
stos
pop
stos
push
out
pop
xlat
in
adc
mov
sbb
jmp
add
ffree
pop
jg
inc
and
test
insl
out
cmp
jp
jle
adcb
mov
sbb
pop
mov
adc
cmp
loope
add
sar
std
sbb
jle
loop
push
xchg
aam
pop
aam
xchg
inc
and
push
pop
clc
incl
add
sub
out
mov
cmp
lcall
test
jecxz
into
xchg
sbb
mov
nop
decl
incb
test
ss
sti
inc
lcall
and
pop
js
lcall
sbb
popa
std
xor
jmp
jne
lock
decl
addr16
mov
sbb
das
sbb
and
in
out
inc
sti
jnp
call
movl
out
push
mov
decl
test
outsl
push
cmp
inc
or
or
push
mov
pop
inc
aas
inc
sbb
mov
std
push
pop
lcall
cmp
leave
or
out
lock
jle
push
insl
add
adc
or
jmp
ljmp
push
cmp
push
sub
mov
inc
aas
push
leave
pop
je
nop
jmp
bsr
incl
sub
push
rcr
sub
sbbb
xchg
and
arpl
int
or
fidivrs
movsl
insb
sbb
xchg
pop
xor
je
dec
cmpl
add
jl
js
test
js
cmc
jne
jnp
pop
rclb
repz
out
mov
jg
das
scas
inc
scas
cmc
dec
add
inc
stc
or
insl
cmc
mov
mov
jno
stos
outsb
pop
int
mov
rcrb
mov
cli
jno
dec
add
call
or
inc
inc
gs
jb
add
jg
cli
fstps
testb
mov
enter
aam
pushl
adc
jg
aaa
pusha
xchg
outsb
iret
dec
fisubrs
adc
aas
xorb
cmp
cmp
call
xor
sahf
dec
and
iret
push
nop
fisttpll
mov
dec
push
decl
jno
mov
jb
and
cmpb
movsl
pop
icebp
sub
in
jmp
jg
pushl
aad
test
call
pop
daa
xlat
and
ret
xchg
jp
mov
pop
cltd
aas
dec
jg
lcall
add
jb
jecxz
jnp
add
inc
in
xor
xchg
faddp
add
arpl
pushl
addr16
lds
aaa
pop
cmp
enter
ret
inc
or
ljmp
inc
mov
rorl
in
mov
push
mov
jg
cmc
loopne
sbb
lcall
lahf
inc
and
int
fidivrl
icebp
shrb
cmp
pop
out
and
inc
cwtl
or
repnz
jg
jge
lds
jae
and
lods
jge
cmp
lock
loop
mov
xor
ss
adc
cmp
inc
or
adc
cwtl
push
sbb
mov
pushl
mov
lcall
pop
pushf
or
mov
sub
lahf
push
addl
cmpl
std
dec
fldt
arpl
adc
aas
pop
jbe
dec
aas
cli
ret
dec
cmp
ds
jmp
push
cld
jns
cli
lcall
mov
nop
fisttps
test
incl
mul
iret
adc
mov
mov
aad
sti
dec
add
mull
ljmp
lret
mov
lcall
and
xorb
icebp
dec
cli
scas
mov
leave
cmp
inc
lcall
jmp
loop
inc
mov
xchg
test
cmp
inc
jl
jmp
decl
fimuls
sbb
sbb
and
push
xor
icebp
fwait
push
inc
mov
mov
pop
nop
loop
xor
and
cmpl
jae
fs
pop
inc
jle
dec
dec
push
repnz
clc
or
jg
add
cmp
mov
mov
jle
inc
add
popf
pop
jmp
iret
sbbl
scas
popl
mov
ljmp
test
lock
shl
and
xchg
xor
jg
push
pop
adc
jne
mov
clc
mov
inc
aad
pushl
pop
push
xchg
push
push
iret
cmp
dec
sub
int3
mov
test
enter
pop
int3
fnstsw
xchg
pop
lret
repnz
jg
pushl
sbb
test
loope
in
adc
cld
fnstcw
or
sbb
ljmp
jmp
ret
orb
test
cmp
cwtl
loop
jmp
jns
sbb
hlt
bound
andl
and
jnp
add
or
pushl
sbb
lock
sub
insb
cmpl
lods
jg
push
push
mov
cmp
lcall
and
dec
lret
push
and
adc
jl
push
jg
lret
ljmp
fwait
cmpsb
jb
dec
xchg
pop
ret
dec
mov
inc
movsl
lods
push
jmp
dec
xor
push
sarb
xchg
ficompl
mov
out
aaa
push
xor
pop
sbb
xchg
and
fcompl
daa
cmpl
and
and
incl
jmp
daa
dec
loope
sti
jmp
stos
bound
hlt
jmp
pop
idivl
nop
les
bound
lods
push
call
js
inc
sbb
stc
stos
test
inc
pop
xor
enter
mov
cmp
mov
hlt
push
sbb
cld
in
sti
aad
fs
add
decl
push
and
aas
sbb
jno
dec
jmp
dec
add
fwait
aaa
jae
aas
ds
lods
nop
cmp
out
out
rol
in
ret
and
inc
dec
rcll
jnp
sbb
popf
mov
mov
mov
fdivrl
pop
xchg
ret
adc
cmc
push
std
sub
xchg
fwait
pop
lcall
xlat
in
arpl
jae
mov
sub
repnz
rcrb
pop
ljmp
jns
cmpsl
loopne
data16
enter
in
ljmp
sub
mov
decl
icebp
aaa
adc
mov
data16
sub
stos
pop
lcall
add
aas
incl
cld
jmp
xor
jg
test
inc
loope
sbb
mov
inc
cli
cmp
mov
hlt
repz
and
aaa
out
pop
jle
push
mov
call
lcall
in
pop
mov
out
outsb
and
clc
push
mov
shll
adc
pop
decl
ret
push
jl
out
rcll
jecxz
jmp
outsl
stc
leave
sub
xchg
hlt
push
xor
in
inc
cld
jg
mov
aas
out
je
ss
jg
sarl
mov
lret
xchg
mov
or
pop
xchg
sar
cli
repnz
pop
dec
xor
jno
inc
jg
addr16
xchg
pop
fcoml
push
add
cmpsb
mov
lcall
movsl
add
shl
hlt
xchg
pop
add
ud0
pusha
or
cwtl
idivb
in
icebp
loopne
mov
jmp
xadd
push
cmp
pusha
enter
push
out
fidivrs
in
jp
mov
jnp
inc
add
decl
divps
or
push
mov
dec
lret
and
lods
inc
ds
andb
ds
call
mov
xchg
adc
jle
sbb
test
lods
sarl
repz
stc
mov
incl
lods
mov
mov
idivl
loop
mov
or
je
in
insl
jne
cltd
mov
das
dec
sbb
sbb
push
xlat
xchg
fnsave
daa
pop
stc
lahf
in
or
pop
inc
add
in
sbb
fsubs
clc
pusha
fwait
stos
adc
jg
out
movsb
shr
inc
inc
lcall
fimuls
in
sub
dec
call
out
dec
xchg
and
out
mov
mov
ret
mov
shlb
pop
mov
sub
lahf
inc
test
mov
sar
std
imul
add
push
cmp
push
frstor
jg
aas
aaa
pop
jnp
lahf
and
xor
push
jne
or
inc
inc
call
cmpsl
mov
cli
jle
pop
into
imull
sbb
mov
sarb
inc
rol
loop
test
push
adc
sbbl
mull
pushf
xorl
inc
enter
or
or
jecxz
xchg
call
aas
std
xchg
lock
or
lds
or
dec
mov
out
fbstp
rorb
jno
jl
jns
test
sar
call
fsts
fwait
test
and
and
cmp
jns
adc
lcall
enter
outsl
or
js
es
mov
and
or
ret
jmp
sbb
push
add
cmpsb
cmpb
repnz
hlt
enter
push
test
movsl
scas
inc
subb
xchg
dec
fs
cmp
cmp
stc
inc
adc
in
or
adc
jg
xor
lods
mov
jge
enter
cmp
ljmp
aas
jecxz
scas
pop
in
adc
cmp
jo
jle
cmp
call
or
icebp
pusha
and
cmp
dec
adc
cmp
pop
incl
test
dec
stos
lret
lcall
outsl
mov
xor
mov
lcall
add
cmp
sahf
dec
pop
push
push
and
gs
mov
cmp
cmpsl
xchg
push
sarb
repz
lea
sub
scas
sub
adc
mov
pop
bound
mov
int3
push
cltd
or
cmpsl
cld
push
cmp
push
stc
adc
mulb
pop
clc
das
fucomi
aam
add
daa
std
mov
cmp
lret
jmp
add
je
test
mov
cmp
inc
or
and
rorb
mov
jp
arpl
fisttps
lds
inc
cli
xor
mov
xor
mov
pop
insl
push
aad
pop
in
sbb
in
jnp
cmp
sbb
jl
adc
mov
inc
jp
nop
lock
std
lds
mov
xor
cs
lahf
or
out
cmp
inc
mov
xlat
cmp
je
sbb
decl
mov
lcall
mov
xchg
sar
cli
and
fnstsw
in
xor
push
incl
mov
stos
inc
and
add
push
inc
mov
xchg
or
inc
mov
int3
scas
call
aas
push
cmp
lea
push
aad
cli
mov
icebp
loope
mov
iret
lds
aas
pop
jbe
int3
mov
lahf
outsb
shrb
aaa
sub
outsl
push
dec
ret
scas
fcompl
enter
jmp
icebp
xor
incb
mov
daa
mov
pop
lods
push
clc
jmp
in
popf
shll
repnz
popa
xchg
push
lods
lcall
arpl
add
repnz
pop
pop
sub
lock
jmp
aaa
push
clc
mov
add
outsl
cmp
aaa
out
shr
shlb
clc
jg
jnp
in
jecxz
mov
xchg
cmp
mov
jg
jle
ret
mov
cs
and
mov
or
ljmp
jl
pop
fwait
lods
and
lods
int
jmp
mov
push
dec
push
jge
loop
jg
loopne
repz
xor
inc
lcall
mov
jns
xchg
mov
imul
ljmp
cmc
and
inc
add
es
xlat
rorb
cli
inc
stc
and
orl
jmp
jns
insb
test
mov
add
enter
add
das
add
mov
jmp
in
in
cld
pop
repz
mov
sahf
dec
es
std
in
mov
out
cmc
clc
ljmp
inc
mov
adc
dec
add
jecxz
fcmovnbe
adc
mov
std
hlt
jl
clc
jmp
push
xor
adc
fcom
flds
mov
sub
push
aas
ds
mov
daa
push
scas
dec
sbb
jg
rcl
stos
adc
jbe
mov
sub
add
inc
dec
add
push
cmpsb
sidtl
sti
in
pop
in
cli
sarl
outsl
add
lahf
add
cmp
sub
and
mov
enter
fld
mov
xlat
xchg
das
xchg
fwait
cld
jge
scas
sub
call
gs
push
inc
mov
xchg
rcrl
xlat
repz
cli
xor
inc
jl
adc
pop
ljmp
dec
aad
test
cld
lcall
std
xchg
sub
or
int
lret
ds
xchg
test
scas
leave
int3
loop
mov
adc
cmp
or
add
jb
add
push
shlb
add
mov
mov
sbb
outsb
or
stc
insl
adc
add
xor
arpl
or
xor
or
maxps
cld
mov
aas
aad
fsubr
outsl
xchg
mov
add
xchg
mov
sahf
aad
cmpsb
ja
ds
repnz
out
sbb
pushf
jnp
loopne
pop
add
dec
iret
imul
mov
cltd
test
loopne
out
subb
sbb
cmp
stc
jno
ja
and
aad
enter
push
lea
int3
sub
pop
cli
inc
incl
clc
decl
lcall
cs
adc
jge
or
and
add
std
loope
inc
pushl
or
push
ret
test
testl
sbb
sbb
sub
adc
xchg
xor
lock
fcompl
hlt
enter
xchg
nop
pop
leave
inc
xchg
jg
inc
pop
pop
lret
jnp
rcrl
adc
js
nop
ss
cmp
xor
cmc
pop
lcall
inc
dec
jo
outsl
adc
lock
data16
ljmp
int
adc
sti
sub
aas
hlt
test
xor
aas
cmc
adc
inc
lahf
sbb
data16
jg
lcall
xor
idivl
hlt
mov
add
jmp
out
pop
push
call
hlt
and
cmp
icebp
fdiv
test
js
push
data16
decl
or
mov
in
push
lret
sbb
pop
jg
sar
stc
movsl
cmc
in
jg
inc
aam
decb
out
dec
xchg
popf
cmp
jno
out
data16
dec
push
frstor
mov
sub
jl
fldenv
push
outsb
je
aas
rcrb
call
aas
xchg
js
int
sub
push
dec
clc
std
out
mov
sbb
test
sbb
jmp
xchg
sti
aaa
insb
jle
aaa
test
cmovns
jg
outsb
ljmp
fidivs
pop
cmp
ljmp
push
jo
or
test
mov
xor
iret
xchg
mov
sbb
sti
mov
sar
mov
mov
mov
sarb
and
cld
push
loope
decl
call
arpl
test
lock
jnp
push
lret
dec
dec
push
jp
and
mov
incl
in
jno
and
decl
mov
xor
fdivp
cmpsb
imul
cmp
aas
sar
or
mov
sbb
int
mov
xchg
lcall
pop
ret
scas
pop
test
pop
sbb
cmpsb
movsb
iret
inc
nop
pop
jnp
inc
and
xor
addl
cli
push
and
xchg
jp
repnz
outsl
inc
inc
sbbl
mov
test
jg
fidivs
jle
addb
dec
jecxz
mov
test
mov
push
lods
xchg
outsb
jmp
test
jbe
mov
mov
jae
sub
jns
ss
repz
cmp
mov
std
cmp
ljmp
dec
push
mov
xchg
pop
pushf
jge
repnz
ret
mov
hlt
jmp
in
loop
or
out
add
jmp
lds
enter
jmp
dec
or
fcom
xchg
dec
mov
inc
inc
mov
add
or
loop
jl
sti
je
jg
rcr
jmp
loopne
jg
push
stos
and
clc
sub
inc
xchg
inc
add
pop
xchg
loop
ja
cmp
xor
cmp
ljmp
test
mov
not
iret
push
mov
jg
mov
sub
aas
push
rcrl
dec
incl
jmp
pop
icebp
cltd
out
loop
dec
aad
cwtl
sbb
aas
clc
jmp
incl
jbe
dec
jle
pop
cmpb
sti
pop
clc
mov
call
negb
mov
fcmovnbe
cmc
sarb
adc
jae
jb
jo
and
xchg
jg
loopne
sbb
push
es
pop
adc
decl
aas
fwait
lret
mov
and
test
imul
jmp
in
repnz
lds
inc
daa
loop
fwait
push
xchg
aam
cmp
jo
aaa
fxch
lcall
std
aaa
pop
call
add
add
clc
add
cmp
test
incl
xor
add
jae
cmp
push
xchg
pop
push
data16
sahf
mov
std
ja
aas
cmovne
push
jno
add
jae
nop
add
decl
in
xor
or
iret
push
cmp
std
fs
iret
xor
scas
xor
jg
pop
add
xchg
ficomps
lret
xchg
out
pop
ljmp
call
test
dec
push
cli
jl
shlb
std
cmp
cmp
loope
aas
enter
out
jno
fldt
sarb
mov
clc
rcll
adc
sbb
ljmp
enter
in
in
es
sar
aas
mov
fcompl
mov
jmp
lods
inc
ds
cmc
sbb
lea
lret
xchg
dec
rcrb
das
or
sbb
loopne
pop
fdiv
jae
inc
adc
repz
leave
mov
mov
ret
jmp
cld
decl
mov
les
lahf
jmp
icebp
aas
pop
gs
lods
notb
ret
icebp
leave
lcall
mov
das
jle
jmp
into
aas
cmp
lcall
or
adc
mov
movsb
and
hlt
cltd
repnz
xchg
xor
dec
call
lahf
decl
or
xor
dec
jae
lahf
sarb
add
mov
imul
es
nop
fbld
test
jle
mov
jg
int
mov
xor
mov
mov
jbe
data16
or
mov
add
in
scas
lcall
ljmp
dec
lods
xlat
mov
fcomip
arpl
je
lret
and
mov
inc
sbb
adc
popa
dec
lods
filds
aad
pop
mov
mov
ljmp
mov
push
sbb
ljmp
mov
lcall
cwtl
fsubrs
fisubrs
xor
js
iret
mov
inc
call
enter
pop
loop
lret
incl
outsl
xchg
pushl
inc
incl
mul
inc
loop
int
jle
aas
mov
lock
cld
call
movsl
pop
divl
push
out
aaa
ljmp
sarb
loope
hlt
in
out
std
arpl
pop
clc
pop
pop
out
fwait
test
pop
les
sti
fcmovne
test
add
imul
incl
pop
pop
sbb
push
or
rol
add
cmp
pop
adc
ljmp
sti
inc
pop
pop
neg
inc
in
add
outsl
imulb
sub
jg
test
dec
pop
adc
call
std
loop
lea
cld
lahf
adc
mov
pop
stc
incl
inc
and
rorl
negl
loopne
jl
loopne
mov
aam
imul
mov
adc
outsl
call
les
stc
out
cltd
decb
aas
or
adc
pop
loopne
xchg
sbb
jp
sbb
inc
or
stc
jle
nop
insl
icebp
dec
decl
pop
adc
add
inc
sarb
int
pop
ja
cmp
pop
mov
cmp
cmp
cltd
add
rcrb
hlt
psubsw
cwtl
outsl
out
notb
idivl
and
movnti
mov
jg
movsl
iret
dec
inc
pop
lock
ljmp
sbb
cwtl
sbbl
popa
repz
and
sahf
pop
fadds
decl
mov
or
or
pop
decb
inc
jne
fwait
push
pushf
adc
arpl
lea
or
fs
scas
nopl
fnstsw
pop
repz
decb
mov
xchg
sti
data16
fs
scas
ja
push
fsts
cmp
jno
mov
adc
xchg
fists
gs
jp
cmp
decl
mov
jmp
insl
add
leave
cmp
popa
mov
add
cmp
dec
rol
aad
pop
xchg
addr16
lock
dec
pop
aas
ja
pushl
cmp
clc
push
or
xor
mov
xchg
pop
insb
bound
movsb
jecxz
pop
pop
sahf
and
add
jbe
inc
xorb
jg
xor
push
cli
rcr
jg
push
pop
pop
or
pop
xor
repnz
lcall
adc
movsb
jle
push
andb
push
add
repnz
stc
mov
test
jmp
repz
loop
inc
cmc
fs
aaa
cmp
test
jle
addr16
or
dec
pusha
add
js
mov
decl
inc
ffreep
sub
std
mov
outsb
inc
push
lret
jae
data16
pop
adc
and
inc
test
movsl
fmulp
enter
mov
mov
call
jg
call
hlt
lret
cmp
ret
xlat
icebp
int3
in
ljmp
sub
out
lods
in
stc
lods
cmp
mov
mov
xlat
fpatan
pop
clc
inc
fwait
dec
mov
jmp
push
xchg
push
imul
cmp
and
jg
add
andb
or
jmp
jecxz
stos
adc
or
fcmovne
in
push
pop
ret
int
xabort
es
mov
mov
in
loop
shl
out
std
cli
rol
mov
jbe
icebp
ret
pop
mov
decl
jns
mov
out
out
mov
out
pop
je
lahf
fnsave
lea
pop
add
mov
cli
cwtl
cli
scas
pop
push
pop
enter
lods
mov
mov
mov
or
fisttpll
adc
call
sub
mov
xchg
dec
sbb
in
cmp
pop
in
add
or
push
dec
or
sub
pop
jno
push
xchg
call
aam
sub
lret
enter
enter
jno
add
pop
decl
jne
imul
xor
push
dec
mov
lahf
js
inc
xchg
sub
pop
pushl
adc
loop
push
std
jae
aaa
xchg
sbb
call
push
dec
jnp
and
fmul
cltd
adc
push
lods
shrl
mov
jmp
jecxz
xchg
js
mov
bound
mov
sub
rep
lcall
xor
sub
pop
sti
movsl
nop
subb
cld
or
sahf
cmp
clc
popl
push
aas
jo
rcr
xlat
popa
jno
inc
pop
nop
enter
scas
adc
incl
mov
ds
inc
and
out
cmp
f2xm1
xchg
loope
outsb
jmp
pop
leave
dec
jmp
jb
or
inc
call
push
jecxz
test
cs
jg
ljmp
xor
inc
in
mov
iret
ljmp
int
or
xor
lock
cmc
adc
inc
ret
inc
repz
and
lcall
test
decl
push
call
cld
jle
pusha
bound
std
fnsave
push
pop
repz
sbb
aas
clc
notl
inc
call
loopne
mov
sarl
call
dec
mov
add
xchg
inc
icebp
adc
out
jecxz
mov
or
add
aad
jmp
mov
cmp
xor
hlt
mov
jno
adc
xor
pop
test
mov
mov
call
sub
mov
into
mov
fldcw
fidivrl
cmc
out
fs
repz
decl
test
mov
jno
icebp
loop
fs
fisubrs
into
mov
mov
lret
lret
jb
add
xor
decl
add
xor
lods
dec
cmp
dec
enter
cwtl
enter
lcall
xor
jbe
inc
or
inc
jno
pop
mov
jmp
sti
jmp
stos
xchg
stos
fld1
cld
fs
pop
jp
and
dec
int3
das
inc
xlat
aad
incl
fldcw
notb
cmpsl
nop
negb
pop
cltd
pushf
jge
fs
jmp
pop
lret
ljmp
mov
push
xor
std
lahf
enter
imul
adc
in
test
cmp
dec
sbb
dec
stos
das
dec
jmp
cld
icebp
flds
push
jmp
pop
icebp
lds
scas
fistl
repnz
or
incl
aaa
cmp
jo
aas
out
pandn
popa
insl
lods
test
sti
push
mov
sub
std
lcall
enter
or
daa
pop
cmovne
sbb
xchg
xor
or
out
pop
out
jo
hlt
fwait
cli
loopne
cli
cli
xchg
cltd
add
outsl
lahf
divl
std
add
xchg
cmp
xchg
clc
aas
mov
out
push
dec
xchg
mov
jg
jo
pop
in
enter
push
cltd
jbe
clc
cld
addb
aas
jecxz
pop
loop
sbb
roll
push
inc
xchg
push
inc
push
aaa
das
incl
cli
pushl
sub
pop
rol
adc
mov
and
jmp
rclb
nop
push
insl
xor
aaa
rorl
es
leave
and
movsb
jg
inc
js
jne
xchg
sub
and
jne
ret
ret
les
pop
movsb
inc
inc
and
lea
sub
loope
in
clc
or
out
bound
leave
aas
jns
push
mov
inc
push
cmp
xor
mov
jle
cwtl
push
xchg
cmp
xchg
ja
mov
sub
xlat
jae
sub
jl
es
clc
ret
dec
inc
and
or
call
out
cli
inc
add
out
pop
bnd
ljmp
stc
xor
adc
or
push
call
out
cmpsb
inc
aas
movl
jns
adc
pop
cmp
jns
inc
and
test
sbb
push
out
cmp
xlat
or
les
jo
push
mov
dec
cwtl
adc
jle
imul
jmp
push
lret
in
test
xchg
adc
pop
adc
jg
mov
xchg
jo
mov
call
jg
ja
ret
int
or
push
jg
mov
scas
pusha
subb
xor
in
xor
mov
push
stos
addr16
dec
xor
jbe
scas
lret
pop
repnz
push
lds
or
jge
and
jns
shl
xor
xchg
fmull
loopne
lcall
mov
adc
fstpt
lods
ret
cmpsb
mov
mov
popf
stos
cmp
jns
rcl
call
mov
mov
das
leave
fidivs
stc
lds
sarl
push
jecxz
xor
int3
movsl
data16
decl
mov
or
push
inc
js
sbb
es
jg
clc
cmpl
andb
pop
arpl
jg
ja
fadds
adc
pusha
add
or
lock
into
jmp
push
cmpsl
mulb
mov
add
xchg
cs
outsl
aaa
and
sub
loopne
push
incl
int
jge
orb
loopne
cmp
data16
arpl
lcall
lock
divb
aas
lret
add
insl
loopne
push
mov
nop
xchg
clc
jmp
pushf
pop
cmp
lret
xchg
sub
insl
es
dec
cmp
jg
test
inc
pop
movsl
and
repz
call
cmp
aaa
add
rcr
xchg
pmuludq
cmp
or
call
fdivp
ret
jle
popa
sarl
outsl
psllq
arpl
stos
dec
orl
pop
add
decl
xchg
inc
cmp
pop
fisubrl
pop
test
dec
or
rol
pop
decl
sub
ret
cltd
call
jle
in
add
jns
int
aas
rcl
sbb
les
stc
dec
int3
jl
lods
jp
add
aam
jmp
dec
pop
inc
lock
mov
dec
mov
mov
cmp
sti
sbb
push
mov
cmp
inc
roll
mov
add
xchg
dec
add
aas
orl
lock
or
mov
sbb
cmp
and
test
push
lret
inc
inc
jmp
mov
sbb
rcrl
mov
vfmsubsd
push
xchg
lock
jnp
mov
jg
aas
insl
ret
fucomip
pushf
iret
repnz
xchg
inc
inc
in
loope
push
fstpt
lock
pushf
mov
fbld
bound
jl
xor
fidivs
ljmp
lods
aas
icebp
arpl
cltd
jecxz
jne
dec
inc
loope
aad
lret
pop
icebp
mov
jmp
roll
xor
mov
arpl
shll
add
in
in
leave
loopne
add
sub
call
pushl
and
rorl
mov
add
mov
dec
int
roll
clc
mov
dec
mov
mov
incl
sarl
cmp
or
ret
mov
jmp
dec
jle
or
rclb
mov
cmp
lcall
mov
jbe
loopne
cld
inc
in
std
pushl
push
pop
push
or
lcall
jle
jg
cmpb
dec
in
xchg
dec
mov
jg
fimull
test
lock
ljmp
and
scas
cld
add
ss
push
pop
dec
and
push
loop
call
sahf
jo
icebp
scas
popf
iret
lcall
mov
aas
test
pop
mov
and
mov
decl
test
or
movsb
xor
mov
dec
add
or
inc
cli
sbb
jns
nop
mov
out
cli
xchg
pop
nop
fmull
mov
lret
dec
inc
cli
fdivs
outsl
mov
mov
clc
lcall
out
jl
call
dec
std
jge
lods
incl
mov
decb
push
cmpb
rcrb
aas
mov
dec
adc
mov
xor
add
popa
jmp
scas
xlat
and
jae
out
and
inc
add
fimuls
cltd
mov
loop
mov
incl
daa
cmpl
mov
stc
add
loop
add
adc
cmovae
in
das
or
std
incl
lea
add
dec
add
clc
dec
cs
pop
pop
mov
pop
cmp
fs
arpl
and
nop
js
sbb
pop
shlb
xor
cltd
std
icebp
cmp
fsubl
adc
lcall
js
mov
pushl
and
repnz
cld
xor
lcall
jg
dec
sti
fiadds
add
mov
lock
fmull
xor
int
cmpsb
push
int3
decl
ftst
cmp
cmpsb
or
xchg
out
xchg
dec
and
sub
pop
out
pop
and
incl
fxtract
subb
lods
sub
pop
imul
cmp
hlt
inc
or
sub
loop
dec
jg
shl
and
push
cmp
lea
bound
xlat
xor
ret
sahf
repz
outsb
loope
scas
dec
cld
xchg
xchg
pop
cmp
incb
xchg
jle
incl
cli
xchg
or
addr16
rcr
ds
cmc
xor
xor
xchg
sbb
lock
dec
jle
mov
xchg
std
pushl
clc
fs
sub
xor
inc
ret
hlt
ljmp
daa
cmpsl
std
rorb
jmp
daa
xchg
inc
inc
adc
jmp
lods
xchg
sub
adc
sub
xchg
lahf
movsb
lcall
movsb
inc
adc
pop
rcrl
xor
movsb
push
pop
mov
data16
fdivr
add
call
mov
rolb
dec
sub
sub
enter
mov
mov
mov
ljmp
mov
out
push
xchg
pop
repz
arpl
out
cmp
sar
xchg
jmp
nop
pop
inc
jg
push
and
push
jno
sub
sbb
push
cmp
lcall
xlat
imul
pop
js
out
sub
test
imulb
and
inc
cmp
sbb
jg
aaa
xor
xchg
add
aam
fcomip
mov
xor
xorb
jmp
inc
jg
cli
sbbl
sbb
fs
dec
lods
push
dec
insl
xor
ret
mov
mov
addr16
leave
mov
pop
loopne
aas
fpatan
lcall
out
ja
stos
adc
sub
push
cmpsl
testl
rolb
jmp
aas
mov
push
add
paddd
daa
sub
add
in
xlat
loope
loope
or
inc
adc
xor
sbb
pop
xchg
scas
and
incl
xor
dec
fcoms
hlt
ljmp
in
push
imul
fisttps
sti
pop
and
mov
mov
xchg
into
inc
enter
ljmp
push
cmp
addr16
or
push
incl
or
aam
sbb
pop
cltd
add
mov
aam
lea
orb
inc
movsb
fidivrl
pop
xlat
mov
cmp
es
mov
inc
leave
mov
ljmp
decl
std
adc
in
add
jmp
fdivr
hlt
scas
sbb
jg
icebp
jmp
jle
jge
clc
daa
lock
xor
stos
sub
pop
call
fisttps
adc
dec
push
aad
subb
popa
imul
call
add
js
jle
loop
out
repnz
xchg
adc
push
bound
ja
ret
rorl
inc
jae
xchg
insl
insl
mov
inc
enter
add
jno
or
xchg
adc
xchg
fistl
inc
in
inc
inc
loopne
sti
jg
enter
pop
lods
xchg
sbb
xchg
mov
sub
inc
inc
sub
stc
ds
nop
arpl
sbb
mov
addr16
mov
fisubrs
out
adc
dec
incl
adc
gs
jg
push
fimuls
js
mov
push
adc
sub
lods
jmp
popf
xorb
ja
cmp
cli
xchg
cmp
xchg
jb
mov
mov
push
push
out
dec
push
or
xor
mov
adc
hlt
lods
mov
push
movsl
lds
mov
jge
pop
sti
pop
lahf
push
push
aam
mov
push
lcall
sub
lock
xchg
inc
ds
adc
aas
test
mov
test
jae
pop
popf
add
add
call
mov
in
ja
mov
jno
mov
lcall
cmp
stos
pusha
and
lods
loopne
push
js
mov
xchg
sbb
dec
add
leave
jbe
ljmp
int3
add
loopne
mov
xchg
ja
cwtl
xchg
dec
es
mov
cmp
cld
pop
jmp
call
fstp
movsb
mov
cs
pushl
inc
rcll
sti
fwait
and
popf
and
fistpll
insl
shr
cmpb
pushf
stc
xor
stos
jl
scas
maskmovq
testl
popa
repnz
jmp
clc
push
ret
out
outsl
pop
int
hlt
ljmp
in
out
enter
adc
inc
nop
and
repnz
call
jle
jg
clc
mov
inc
push
xchg
inc
sbb
clc
or
loope
aas
std
fbstp
aas
int3
adc
adc
decl
aaa
lock
js
std
pop
dec
ffree
stc
sub
xor
mov
pmullw
test
or
scas
ljmp
push
sbb
add
push
jo
xchg
cmp
jecxz
popf
mov
inc
data16
lcall
jae
fcompl
stc
cwtl
in
mov
outsl
xor
pop
pop
loop
scas
xchg
xor
out
aaa
loope
jnp
aas
std
pop
sub
pop
jmp
arpl
ljmp
and
icebp
mov
jmp
mov
lret
cld
call
daa
sarl
icebp
and
je
mov
push
xor
and
decl
icebp
push
pop
in
adc
roll
lods
mov
fmuls
pop
xorl
add
pop
outsl
pop
pop
jecxz
filds
mov
pop
and
adc
mov
pop
movsb
mov
sub
inc
pop
cmp
mov
add
add
decl
andl
test
loop
dec
popl
daa
jg
clc
shrl
push
xchg
mov
in
das
jnp
lcall
sbb
int3
adc
lock
mov
jbe
adc
push
inc
sub
rclb
pop
push
in
inc
incl
enter
insb
xchg
xchg
dec
stc
loope
loopne
int3
and
cli
mov
lock
mov
mov
inc
hlt
and
cs
push
lods
pop
push
xchg
adc
inc
filds
jl,pt
ljmp
dec
loopne
cld
ret
mov
cmc
sbb
jno
icebp
std
inc
dec
outsb
aaa
jecxz
pop
cld
call
jo
cmp
orb
lock
call
mov
cmp
es
pop
mov
dec
cmpsb
cmp
pop
lret
mov
xchg
dec
xchg
stc
add
ret
pop
mov
mov
xlat
sbb
lock
out
mov
nop
jo
out
push
loop
call
adc
jle
add
sbb
or
fstps
pop
repnz
inc
fwait
test
pushl
loopne
leave
mov
insl
lret
dec
mov
cmp
cmp
dec
sbb
popa
paddb
stc
ljmp
or
lret
push
adc
or
mov
mov
ljmp
push
sarl
add
pushl
or
notb
call
sub
sbb
bound
stc
mov
inc
jg
sti
jecxz
je
mov
or
cltd
jp
outsl
insl
fadd
repnz
inc
ljmp
push
jno
insb
movsl
cltd
aaa
fdivr
outsb
fs
jmp
mov
push
sar
adc
test
cli
outsl
or
idivb
fdivr
adcl
xchg
adc
aas
sub
adc
ret
lcall
cmp
mov
pop
aam
add
pop
sar
jno
andl
or
repnz
std
test
movsl
scas
bound
cwtl
popl
aas
push
pop
cwtl
and
sub
outsl
or
sbb
pop
call
mov
or
fmul
fs
data16
jmp
mov
in
ljmp
clc
sbb
sar
ret
sbb
ficomps
mov
stc
call
mov
decl
clc
pushl
sbb
addr16
ret
sbb
xchg
das
popa
lcall
push
jno
aad
scas
addr16
and
adc
xchg
push
js
test
jecxz
xchg
ljmp
cld
adcb
and
repnz
js
mov
jo
pop
inc
dec
in
ljmp
ja
das
cld
fisubs
mov
dec
std
in
jl
and
in
push
in
mov
in
mov
xchg
gs
mov
dec
jmp
push
inc
mov
out
mov
adc
lods
lock
in
pushl
add
and
cmpl
movsl
loop
cltd
pop
out
mov
repnz
decl
sbb
add
push
xor
mov
scas
xor
mov
dec
outsl
push
mov
incl
dec
dec
aas
dec
dec
mov
loope
cmp
shl
cmp
cmpl
sti
addb
outsl
pop
mov
inc
sti
inc
addb
insb
and
sub
jg
mov
stc
fdivr
roll
xor
jl
outsl
mov
shll
imul
int3
loope
cld
push
add
fwait
jg
dec
sti
mov
or
sub
call
ret
icebp
fistl
adc
scas
cli
mov
test
cmp
jge
add
int3
stc
xor
out
test
jg
mov
xor
lret
lods
icebp
repz
sub
lock
adc
xchg
jb
xor
inc
add
stc
daa
call
incl
iret
fwait
jo
cmovae
lahf
fisttps
js
mov
xchg
fsub
cli
jmp
ljmp
cli
push
sbbl
clc
js
shld
rclb
mov
mov
mov
adc
lahf
xor
stos
cmpsb
out
jecxz
out
pop
fistps
inc
daa
dec
hlt
mov
icebp
fildll
incl
pop
cmp
cmpb
in
stc
add
call
pop
sbb
scas
cli
pop
lods
lods
out
psubw
add
inc
mov
mov
adc
xor
jl
rol
jmp
out
inc
andl
mov
push
push
jg
lcall
fwait
and
mov
ds
adc
test
das
loop
aas
sub
push
inc
repz
repz
popf
icebp
test
xor
ljmp
or
push
jb
sub
scas
inc
jge
ljmp
ljmp
sti
inc
push
sbb
mov
and
or
popf
aad
inc
fsubl
pop
sub
pop
hlt
call
and
cltd
aas
aas
in
inc
jg
xor
push
out
imul
sbbb
stc
cmp
repz
dec
ret
pop
dec
cmp
pushl
sahf
add
gs
jg
lret
add
test
out
ds
outsl
pop
mov
and
cmpsl
mov
cmp
aas
repnz
adc
mov
imul
adc
imul
pop
mov
decl
sbb
jns
out
lods
inc
fnstenv
adc
push
lret
mov
aad
sbb
cmp
jns
pushl
inc
mov
aam
dec
mov
rolb
jl
aaa
imul
sbb
lret
mov
cmp
frstor
and
mov
cmp
hlt
inc
or
scas
mov
ffreep
mov
inc
pop
cwtl
dec
sahf
lcall
in
jle
data16
icebp
out
out
loopne
sub
jo
outsl
ret
outsl
std
in
ror
fwait
sub
jmp
mov
cmp
xchg
subb
and
mov
sub
add
jno
insl
out
mov
test
out
call
jge
push
mov
push
ret
inc
jmp
pop
inc
pop
lods
jb
loopne
pop
fisubl
stc
dec
inc
cmp
incl
push
lods
and
inc
in
dec
fmull
push
mov
lahf
cs
das
lret
dec
bound
cld
call
mov
sti
loop
mov
shll
push
lret
push
pop
sti
add
or
std
jmp
sub
adcb
ja
mov
xchg
int
cmp
addb
push
dec
cmp
test
dec
fwait
pop
bound
cmpsb
push
in
mov
mov
enter
pop
or
lcall
mov
daa
sbb
pop
fwait
pop
clc
and
inc
sbb
jne
jmp
adc
jmpw
decl
cmpsb
cmc
sbb
jecxz
loope
ret
test
pusha
lahf
xchg
xor
loopne
mov
jmp
jb
jge
cs
or
jo
repnz
ret
push
out
cmp
adc
call
mov
mov
sub
cmp
inc
scas
les
xor
cmp
decl
jmp
aaa
xchg
sbb
das
inc
call
movsb
loope
cwtl
arpl
push
pop
es
in
sbb
push
pop
call
jmp
je
and
dec
cwtl
xchg
jbe
cmp
xor
stc
decb
loop
call
decl
daa
pop
inc
dec
decl
decb
icebp
pop
test
xorl
ret
xchg
jg
int
repz
sub
xchg
mov
testb
aaa
dec
loopne
call
sbb
sub
jae
or
in
ljmp
incl
test
mov
inc
ss
cli
mov
add
clc
into
or
push
ljmp
fcmovu
mov
mov
popa
push
or
cmp
lcall
ret
add
shl
into
es
sarl
lods
movsb
cli
push
gs
cmpsl
ljmp
add
sbb
in
outsl
add
out
jl
ret
pop
fwait
lock
fcomp
das
lcall
xchg
add
pop
add
xor
inc
jmp
lcall
insl
cli
sbb
icebp
iret
pop
jno
jne
cli
stos
mov
pop
fdivrs
pop
lcall
jmp
scas
pmuludq
aas
cmp
push
xchg
dec
jg
call
xchg
dec
and
out
dec
and
cld
pop
inc
movsl
stos
and
xor
inc
and
inc
inc
push
jns
jmp
jmp
jb
sbbl
xor
jno
mov
jg
xlat
incl
add
jnp
pop
pop
mov
cmp
enter
push
call
xor
xchg
rep
icebp
jae
leave
push
xchg
xchg
inc
scas
clc
pushl
jge
sbbb
or
test
ret
push
movl
nop
push
imul
incl
psubd
aad
and
fcoml
popa
dec
xor
or
leave
push
leave
lahf
adc
idivl
mov
sbb
fcomps
ljmp
push
sub
decl
nop
and
xor
or
jnp
outsl
adc
sbb
lret
in
adc
sub
fcomip
les
xchg
push
jmp
decl
stos
mov
pushf
push
scas
xor
cmpsb
mov
adc
jb
inc
dec
ret
push
inc
cs
popl
mov
xchg
jns
repz
fcomip
test
outsl
btr
shl
jmp
aaa
insb
iret
cmp
pushl
rclb
cltd
scas
loopne
jbe
cmc
xor
out
mov
sti
in
lcall
mov
iret
movsl
loope
popf
jbe
mov
mov
sarl
push
pop
int
icebp
scas
pop
cmp
or
xchg
xor
mov
push
cmc
incl
mov
jg
ss
outsb
adc
or
jmp
sub
and
cmp
cmp
dec
mov
xchg
push
frstor
insl
xor
sbb
aas
pause
push
sarb
jmp
aas
lea
repnz
mov
mov
xchg
repz
inc
fs
cmp
mov
inc
add
cmc
mov
and
dec
lds
and
clc
jg
insb
pop
jne
xchg
add
pop
notb
mov
filds
stc
test
out
in
and
int3
sti
lcall
cmp
or
push
cmp
scas
xchg
lcall
dec
sbb
fstl
pop
sub
ret
enter
js
fnsave
xorl
cmp
aam
push
dec
jecxz
mov
jo
scas
ds
dec
cmp
jg
inc
push
aas
push
cwtl
xorb
lds
and
pop
rolb
inc
dec
sub
decl
cwtl
pop
loopne
cli
lds
jp
call
add
fwait
jg
cli
testb
adc
es
add
mov
outsl
clc
repz
jg
lea
push
cmp
mov
adc
xchg
je
mov
sbb
lcall
inc
mov
mov
add
jle
ret
or
aas
adc
pop
popa
inc
adcl
das
xchg
jecxz
sahf
out
jg
clc
jmp
sub
and
fisubrs
call
pop
fldl
cli
cmc
pop
sbb
addb
and
inc
add
popf
mov
lea
pop
dec
fildl
jg
xor
mov
in
js
lods
imul
push
cmpsl
call
push
sub
popa
sbb
fcmovne
pop
std
add
xchg
fs
sti
call
ret
test
addl
dec
xchg
jbe
push
sar
add
sbb
mov
shr
lcall
mov
or
stc
fsubl
jno
push
mov
lock
decl
frstor
es
leave
fs
mov
jge
sub
cmp
mov
std
popa
sahf
int3
push
loope
js
inc
inc
mov
push
xor
mov
loope,pt
rcr
ja
add
ljmp
sbb
jecxz
mov
lret
and
in
jmp
ret
repnz
loopne
xchg
rcrb
mov
lcall
cld
rclb
push
push
sbb
mul
pop
fiadds
mov
jg
add
or
mov
lea
fiadds
cmp
fisttps
jne
adc
lcall
decl
jg
pop
sub
adcl
test
jmp
push
stos
mov
std
add
add
dec
mov
ljmp
push
leave
pop
mov
push
test
mov
stc
inc
mov
and
jl
mov
rorb
inc
cld
stos
sub
js
mulb
jnp
add
inc
jg
pop
test
push
add
fwait
rorl
subl
xchg
fimull
call
sbb
sub
lea
push
jecxz
or
divl
shrl
outsb
pop
stc
rcr
jp
jg
loop
add
sti
mov
rclb
and
in
push
and
stos
push
rsm
icebp
rorl
jmp
enter
call
or
push
xchg
test
push
enter
std
decl
stos
sarl
insb
add
or
sti
fcmovne
jecxz
in
out
lret
mov
ds
gs
and
xchg
jno
imul
fcoml
inc
jle
sbbl
and
xchg
aaa
lds
xchg
pminub
clc
fldt
or
loopne
fcoml
jmp
std
adc
xchg
add
dec
test
fs
fwait
inc
or
mov
lret
clc
lods
jo
clc
outsb
pop
or
stos
lock
cltd
das
add
aas
aas
cld
add
pop
cwtl
mov
jge
add
jnp
fdivl
and
inc
ljmp
je
or
jecxz
out
jge
mov
mov
pushl
mov
jns
pop
dec
mulb
ljmp
in
sbbl
bound
mov
inc
or
dec
loope
push
std
shl
jecxz
pop
pop
dec
pusha
jecxz
mov
inc
and
fldt
dec
push
push
scas
rcr
pop
mov
or
pop
jnp
arpl
fdivs
sub
sub
jb
sar
aas
incb
pop
repz
loop
in
mov
sbb
add
mov
pop
ljmp
mov
dec
sbb
xchg
jbe
jnp
out
aaa
std
gs
icebp
test
sub
add
stos
lock
call
orl
dec
out
pop
sub
jle
push
adc
jg
sub
andl
add
mov
dec
add
mov
loopnew
out
cld
in
or
sbb
lahf
lcall
inc
outsb
mov
push
xchg
int
scas
scas
loopne
ds
xlat
jne
sub
inc
xor
shr
lods
mov
lcall
push
adc
mov
shlb
or
lcall
xor
clc
js
cmp
shl
mov
cld
decl
and
xchg
pop
stc
push
mov
ret
sub
in
fxch
incl
stc
adc
mov
test
push
push
fists
adc
xor
inc
loop
cld
out
adc
incl
lock
pop
fs
sti
lods
or
xchg
pop
cmpsl
data16
push
outsl
aaa
ja
rclb
loopne
jg
aas
stc
test
ret
ja
psubq
sbb
lcall
and
mov
loop
jp
call
fldenv
aad
push
out
xor
cmpsl
sar
gs
adc
push
mov
jmp
iret
in
in
popa
dec
cmpsl
clc
sar
or
incl
mov
push
lahf
into
xor
outsb
icebp
add
call
lcall
imul
scas
mov
mov
cwtl
aam
push
iret
fisubrs
lcall
addr16
xor
pop
repz
inc
sarb
mov
aas
test
test
lret
or
mov
lods
sti
jmp
mov
or
xchg
addr16
mov
cld
jo
dec
ja
ds
mov
aam
add
push
incl
pushf
inc
fst
rorl
test
clc
dec
mov
xchg
and
or
addr16
pop
shlb
movsb
ljmp
xchg
sub
xchg
inc
push
nop
lods
sub
incb
mov
mov
stc
jnp
pop
push
xchg
cmp
lds
cld
pop
incl
es
testl
mov
mov
pop
pop
lea
and
mov
in
push
test
add
out
add
out
bound
call
jl
ljmp
in
das
mov
xchg
adc
les
mov
pop
clc
adc
in
cltd
iret
hlt
fs
pop
xchg
dec
stc
adc
mov
adc
cmp
rolb
stc
arpl
rcrb
fs
lcall
scas
fidivl
pop
inc
lods
test
fmul
sahf
loope
nop
imul
incl
jbe
pop
cmc
lock
push
push
lahf
pop
xchg
sbb
xchg
call
stc
pushl
xchg
push
sbb
addl
scas
sahf
sbb
cmp
pop
std
pop
nop
loop
sbb
pop
test
adc
push
lock
test
jg
cmpsb
popf
movsb
in
nop
fbstp
bound
call
cli
cmp
xor
scas
jg
loop
xchg
sahf
mov
mov
dec
imul
mov
clc
inc
imul
add
pop
loope
add
inc
or
sub
mov
add
faddl
xchg
jp
out
and
push
inc
mov
clc
inc
fadds
pop
sub
adcb
aaa
push
cltd
int3
outsl
xlat
cmp
out
push
shlb
outsl
inc
adc
fldcw
sub
outsl
jg
mov
push
repz
cld
xchg
inc
pop
mov
add
lock
pushl
or
in
mov
ret
fisubl
inc
jo
and
repnz
and
mov
pushl
cmp
outsl
push
push
movsl
lods
add
dec
jmp
mov
adc
sbb
rol
lock
push
or
call
jmp
push
push
scas
or
sbb
adc
lds
xor
lahf
inc
cld
call
in
mov
xchg
hlt
pop
ja
inc
aas
hlt
scas
push
mov
cmp
adc
daa
jmp
jle
jb
jg
sub
jbe
insb
in
loope
out
jo
mov
inc
add
xchg
jns
out
data16
test
pushl
jns
adc
popa
xchg
push
icebp
jmp
pop
movsl
inc
push
push
leave
lods
inc
pop
lock
and
adcb
and
out
push
cltd
dec
sbb
sbb
inc
icebp
call
fs
or
cmp
mov
imul
and
dec
in
inc
or
imul
and
jmp
jl
das
xor
cmp
push
mov
cld
aad
jg
fldenv
enter
adc
pop
imull
xor
std
aas
clc
mov
mov
xor
dec
xor
push
leave
sub
jmp
cmp
dec
jg
xor
adc
pop
imul
popa
xchg
js
push
mov
ds
cmp
inc
js
jle
into
loopne
xchg
sub
mov
aas
iret
inc
incl
ljmp
mov
mov
in
jno
ja
xor
mov
std
js
push
lods
dec
cmpl
and
daa
and
rcpps
mov
nop
aas
and
incl
test
lret
cwtl
xchg
je
les
int
dec
cs
inc
call
cmp
cmc
xchg
and
jl
cld
xor
xchg
dec
std
loope
inc
mov
mov
xor
adc
hlt
ds
mov
aas
cmp
cmp
fnstenv
xchg
push
enter
jecxz
lret
xchg
xchg
pop
dec
or
sti
push
xor
stc
mov
sbb
jge
das
xor
adc
mov
out
lds
inc
test
dec
pop
pop
add
call
and
or
mov
mov
lcall
lds
imul
xor
fs
pop
cld
ljmp
insb
jg
mov
mov
mov
mov
fldl
mov
push
sub
inc
fcmovu
sbb
xor
cmp
pushl
push
in
in
cmp
ljmp
rolb
cmpl
mov
fidivl
popl
decl
and
shll
popa
cmp
loope
fcoml
fsubs
insl
add
insb
inc
lret
data16
clc
decl
inc
daa
loope
in
sub
sbb
sahf
dec
inc
fiadds
jmp
sbbb
cli
mov
loop
fiaddl
pop
mov
xor
sub
dec
cmp
outsb
jbe
aas
std
aas
ret
jl
jne
xor
pop
or
xor
decl
xorl
or
cmc
mov
mov
jns
sar
pushl
fnsave
incb
cmp
adc
fiaddl
adc
mov
icebp
call
xchg
sub
add
pop
pop
pop
daa
repnz
clc
pushf
repz
dec
cld
xchg
mov
mov
jmp
inc
movsb
shlb
cmc
sbb
mov
iret
cmp
pop
dec
mov
decl
lock
push
add
xor
in
loope
dec
jp
jg
rcrl
mov
jg
sti
mov
pop
dec
xchg
inc
dec
dec
loopne
mov
lcall
dec
popa
int
test
or
pop
pusha
js
lret
jb
daa
dec
xchg
clc
clc
push
pusha
xor
mov
outsb
lret
and
or
pop
xchg
sub
cmp
push
mov
fsubrl
jg
cmpsl
fnsave
daa
iret
cmp
pop
dec
outsb
adc
sbb
add
fstpt
mov
mov
push
jmp
lcall
insl
mov
jmp
adc
mov
dec
xor
sbb
clc
lcall
xchg
sub
adc
daa
jle
pop
dec
mov
cmp
imulb
xchg
jno
dec
push
jl
fadds
jecxz
mov
mov
std
jecxz
enter
add
gs
pushl
mov
pop
dec
adc
ds
aad
sbb
lcall
dec
pop
ficoms
xchg
xchg
cltd
adc
jo
or
gs
xlat
loope
cld
and
add
in
pop
adc
les
xchg
sub
enter
jo
jecxz
bound
xchg
mov
push
icebp
psubsw
aam
int
cld
scas
mov
lock
pavgw
dec
popf
aam
adcl
sti
xchg
scas
das
inc
sti
or
int
jo
arpl
sbb
aaa
cld
incl
lahf
lret
mov
test
stos
cmp
cmpl
mov
lcall
call
pop
mov
sahf
xchg
cmp
aaa
mov
lcall
jmp
enter
jmp
adc
hlt
xor
repnz
cli
inc
sub
mov
adc
aam
movsl
sbb
enter
subl
std
jmp
add
jp
pop
dec
jg
xchg
enter
out
aaa
pushf
out
inc
xchg
daa
std
pop
inc
or
decl
test
push
sarb
cli
lahf
decb
mov
in
xchg
mov
sar
aas
pop
mov
fldenv
stos
sub
test
or
sub
rcrl
negl
dec
nop
sub
aaa
aad
in
popa
mov
mov
lcall
mov
sbb
jmp
frstor
orb
jns
push
dec
mov
inc
jg
inc
aas
fsubr
es
lock
jmp
jne
jb
cs
sbb
dec
add
and
decl
pop
mov
lds
inc
pop
jns
cmp
push
aas
js
mov
jmp
mov
stc
pushf
sahf
in
xor
sar
jmp
xchg
scas
sub
inc
cmpsl
leave
mov
std
jmpw
and
add
jp
jnp
call
ds
sbb
lods
sbbb
cmpsb
stc
jb
mov
cmp
or
negl
out
shll
cmp
lcall
adc
jle
cltd
fs
cli
inc
cwtl
xchg
ds
xchg
mov
sbb
add
cmp
jp
or
jmp
leave
leave
aas
test
iret
jae
sbb
orb
mov
scas
mov
lcall
in
movsb
and
cmc
xor
sbb
push
icebp
push
std
lods
outsl
mov
repz
mov
adc
enter
incl
cwtl
lret
push
fldenv
ja
cltd
push
jge
and
xor
xor
cmpsl
cld
mov
aad
dec
pop
aam
sub
xchg
pop
jecxz
leave
loop
lock
mov
pushf
jecxz
push
aaa
test
pop
jge
and
sub
jle
and
dec
loopne
adc
or
ret
insb
cmp
out
scas
sub
test
fildll
pop
repnz
inc
decl
and
fimuls
mov
ljmp
pushl
or
push
sub
mov
lret
sub
jp
jne
inc
mov
cmc
in
pushl
iret
pop
and
and
imul
out
in
and
push
dec
aas
cmc
push
adc
in
add
andps
decl
pusha
out
mull
movzwl
dec
fs
test
inc
out
mov
rolb
push
mov
and
stos
and
loop
pop
pop
pop
insl
dec
mov
stc
lcall
in
js
test
pop
fs
punpckhwd
jg
inc
xor
aad
or
pushl
dec
xchg
xchg
movsb
test
mov
inc
mov
jno
jmp
imul
shl
sbb
imul
sub
lcall
fxch
into
xor
mov
pop
jbe
ljmp
pushl
mov
xchg
aas
fcomp
popl
mov
jmp
aas
xchg
xchg
mov
xchg
lcall
aad
hlt
jnp
inc
or
ret
inc
js
repnz
cltd
cltd
aaa
aam
dec
dec
pop
pushl
insl
sarb
movsb
in
fadds
sbb
cmpsb
pop
sbb
cmp
imul
inc
lcall
icebp
test
mov
push
negl
arpl
imul
repnz
jg
movl
pop
dec
or
enter
call
stc
jmp
fwait
shrl
add
ficoml
sub
ret
popa
popf
inc
incl
cld
orb
ss
fnstsw
sub
das
out
enter
xchg
call
mov
arpl
jbe
out
adc
incl
in
cmp
push
add
sbbb
data16
rorb
leave
mov
les
jle
das
incl
daa
mov
and
mov
test
jmp
lahf
jmp
jo
mov
out
ja
sbb
vpunpcklwd
hlt
sbb
shll
add
mov
dec
push
fidivs
jmp
dec
mov
iret
xchg
les
pop
adc
jp
das
roll
les
cmp
jg
rcl
packssdw
bound
mov
jmp
push
sbb
hlt
mov
icebp
lods
decb
jnp
mov
lcall
scas
scas
mov
or
jle
dec
inc
and
and
xor
mov
cli
ljmp
testl
dec
jne
xor
mov
and
pop
out
jmp
jg
mov
lret
or
leave
dec
cld
sbb
scas
into
pop
ljmp
sub
cmp
xchg
jmp
or
inc
jg
inc
hlt
nop
dec
int3
pop
xchg
lret
out
jg
jmp
inc
cld
into
push
scas
push
gs
add
or
dec
lds
pop
mov
es
int3
add
xor
xchg
rorl
imul
xor
inc
mov
jne
mov
xor
cmpsb
mov
sti
cmp
lahf
push
push
loopne
sbb
call
mov
ffree
xlat
jmp
fnstsw
inc
push
sar
ds
aas
mov
sbb
fcmove
sbb
in
cmpsl
sbb
cli
std
incl
aam
xor
fstl
nop
xchg
pushf
cmpl
jmp
jle
lcall
and
loopne
in
cmp
cltd
mov
mov
jmp
inc
jo
add
inc
push
shlb
ret
push
mov
es
inc
push
jle
add
pop
cmpsl
cmp
ret
sub
mov
in
or
ds
adc
sub
fs
daa
nop
aas
adc
decl
pop
test
sub
jecxz
push
or
fwait
and
call
enter
js
aas
mulb
jp
pop
pusha
cmpsl
ja
push
ret
jg
jge
hlt
jecxz
out
gs
push
imul
mov
dec
loope
push
inc
xor
test
inc
and
daa
jg
jmp
data16
ret
lahf
iret
out
adc
daa
call
sbb
and
mov
mov
inc
ljmp
cmpsl
std
sbb
out
cmovns
and
add
jnp
not
or
dec
xor
lods
jmp
enter
mov
adcb
add
jge
pop
ds
xchg
jg
lock
ret
push
cld
jmp
sbb
jge
cmp
mov
es
add
pop
rclb
stc
fwait
push
rclb
sbb
stc
mov
and
inc
cld
ffreep
jl
addr16
xor
insb
jge
arpl
push
cmc
mov
out
push
call
movb
sub
xor
xsaveopt
andb
mov
imul
cmp
imul
insb
scas
mov
incl
setnp
mov
pop
int
add
mov
incl
ret
loope
scas
cmp
xchg
mov
dec
push
xchg
test
dec
cltd
sar
loopne
dec
add
call
mov
jge
int
leave
cli
aas
repz
push
ljmp
es
pop
decl
xchg
xor
outsl
mov
loope
push
lods
sahf
mov
outsl
mov
js
jns
out
pusha
jg
cmpb
jmp
ds
cmp
jmp
aaa
mov
jge
mov
out
and
rclb
addr16
je
ss
out
hlt
cmp
lock
call
cmp
mov
adc
loope
decl
mov
and
and
dec
sbb
lcall
and
mov
and
adc
push
mov
push
sbb
mov
flds
dec
mov
loope
dec
jg
push
leave
decl
cli
inc
jbe
in
mov
sbb
push
ja
int3
inc
aad
push
adc
adc
aaa
ja
aas
push
stos
xchg
jle
jns
incl
sub
dec
jb
pop
data16
dec
aas
adcl
call
stos
pop
popf
jl
jg
push
adc
dec
jge
jl
inc
push
repz
lcall
test
testl
jae
cmp
out
in
sbbb
fsub
ja
cltd
add
decb
adc
loop
add
shl
pop
lret
scas
sbb
repnz
decl
mov
pop
or
bnd
fnstsw
adcb
xor
incl
icebp
pushf
jae
mov
ret
xor
enter
sub
pop
push
xorl
push
daa
xor
push
popa
andl
mov
sbb
xor
cmpsl
cmp
adc
sub
mov
push
adc
popf
mov
sti
pop
testb
ja
add
rcrb
xlat
mov
inc
aas
inc
test
and
inc
and
jb
stc
inc
adc
paddd
decl
in
jno
in
sarb
xor
fs
mov
pop
jecxz
fmuls
pushl
or
out
lea
adc
xchg
fmull
adc
movsb
aas
cmp
ret
push
or
and
sarb
sti
mov
and
xchg
cltd
jb
dec
int
test
jbe
sti
sbbl
sub
incl
ss
insb
or
outsb
ds
adc
clc
shl
xchg
cld
loope
ret
push
dec
repz
test
movsl
jbe
dec
sbb
mov
dec
insl
mov
sbb
icebp
scas
add
push
adcl
mov
in
fcmovnb
scas
sub
jo
add
dec
xor
cmp
push
push
push
push
mov
call
loopne
sub
cmp
pop
xchg
mov
cmp
inc
or
add
mov
mov
mov
mov
inc
sahf
arpl
pop
outsl
push
mov
fs
jmp
stos
mov
jno
fsubl
dec
scas
call
xlat
push
xchg
nop
add
add
push
les
pop
pusha
subb
out
xchg
or
adc
pop
xchg
cltd
arpl
mov
push
sbb
aas
shrb
bnd
pop
inc
pushl
add
decl
cmp
inc
adc
pushf
sbb
push
loope
je
adc
add
add
sub
enter
sub
pop
add
adc
incl
filds
aaa
pop
and
rcll
xor
mov
decl
sti
popf
jo
cmp
es
imul
jb
scas
pop
cmc
ljmp
lea
test
cmp
mov
xor
clc
xor
adc
iret
sbb
fwait
jnp
jge
adc
or
fdivr
sar
pop
mov
adc
cmc
pop
aas
pop
int
in
jecxz
adc
pushl
js
mov
jb
sbb
xor
push
in
nop
add
leave
aas
stc
cmp
loopne
into
adc
lret
dec
inc
fnstenv
iret
aam
std
push
push
movsb
gs
add
add
inc
xchg
repz
xlat
sub
mov
ret
add
mov
mov
sub
clc
in
cmp
ss
sub
inc
xchg
imul
icebp
outsl
adc
ret
int
add
dec
in
lock
gs
test
jg
cld
js
in
out
jmp
jb
movsb
mov
stc
push
push
adc
mov
sbb
test
pop
rorl
inc
and
lds
jg
jg
push
xor
cs
popf
daa
mov
decl
decl
push
cli
jmp
insl
mov
pop
fs
addr16
shlb
js
jmp
or
test
jmp
in
inc
sbb
nop
addr16
and
mull
cli
das
movsl
sarl
cli
call
pop
mov
mov
ss
xorb
popf
test
std
sub
or
jg
nop
sub
and
dec
and
ja
test
lcall
push
pop
push
stos
loope
and
push
addb
insl
mov
lcall
mov
dec
push
clc
aaa
jmp
adc
mov
jp
xchg
idiv
decl
inc
mov
adc
sbb
mov
ficompl
outsl
out
xchg
incl
clc
test
in
cs
xor
jecxz
push
movnti
popa
xor
pushf
sbb
xor
dec
and
jmp
bound
push
mov
mov
lcall
sahf
sub
out
lods
mov
rol
sub
pop
std
lret
push
sbb
or
incl
fdiv
push
loope
xorl
stos
add
call
fnstenv
xchg
repnz
int
clc
stos
jge
imul
cld
fwait
loope
into
lock
jb
or
incl
aam
sbb
jecxz
nop
sti
add
sub
lret
jmp
lret
js
inc
mov
jne
xchg
cmp
fistps
xor
pushf
fisubrs
sbb
pushl
cmp
jl
pop
jmp
jg
pop
fisttps
pusha
sbb
dec
int
in
jbe
pushf
xor
hlt
out
cmp
dec
cmp
jle
inc
mov
inc
out
xor
incl
jmp
inc
mov
jg
nop
out
cmp
mov
daa
decl
popa
fs
mov
pop
and
arpl
xlat
sti
ret
or
mov
sbb
ret
incl
stos
push
das
push
ljmp
popf
fwait
mov
test
and
incl
stc
sbb
mov
leave
xchg
jg
decl
test
mov
call
sub
mov
push
dec
dec
pop
mov
in
jnp
call
sub
add
push
fwait
mov
fsubp
enter
incl
lahf
jns
xchg
mov
je
push
pop
sbb
push
jmp
decl
stos
shlb
leave
inc
or
in
test
pop
xor
clc
enter
jns
test
pop
adc
out
nop
test
js
jp
cmp
adc
sarb
jb
push
pop
push
cmp
mov
mov
popf
mov
and
sub
clc
jae
rcrb
into
popf
loope
imul
sub
adc
mov
jbe
decl
mov
jae
mov
inc
nop
cmp
sbb
test
data16
mov
cli
outsl
jecxz
jge
inc
mov
popa
out
inc
clc
lea
dec
scas
inc
jg
je
clc
jg
inc
mov
and
jb
add
mov
call
insl
and
pop
stc
dec
repnz
sti
inc
xchg
cmp
pop
hlt
js
push
mov
ljmp
sbb
jge
add
mov
adc
ret
call
ficomps
je
xor
fwait
rorb
bnd
fsubl
push
cmp
lods
fcompl
decl
mov
cmpsl
jno
addr16
ret
popa
mov
repz
aas
mov
jg
fwait
ret
pop
stc
sub
fisttps
enter
pushf
inc
sub
sub
repz
lcall
aas
sahf
aas
push
cmp
jecxz
mov
cmp
and
push
das
adc
incb
clc
adc
sbb
jo
test
pop
xchg
les
fistpl
xor
imul
xchg
mov
incl
sbb
jp
and
xor
cmc
div
int
ljmp
or
xchg
jg
mov
rorl
sti
pushl
dec
cmp
mov
inc
and
out
ftst
pop
pop
test
ret
rorl
xor
xchg
add
xor
aas
push
xchg
add
xchg
sub
icebp
popa
mov
mov
inc
idivb
cmpsl
cmc
xor
inc
enter
pushl
jbe
lcall
mov
xchg
xchg
inc
scas
std
arpl
shll
movsb
push
lcall
push
jg
sbb
inc
push
mov
and
ljmp
xchg
or
or
sbbb
and
mov
mov
dec
push
mov
jmp
lahf
mov
sti
xchg
jge
pop
mov
cld
ret
emms
pop
subb
aas
cld
ret
xchg
push
dec
icebp
sub
adc
xor
mov
stos
enter
sub
push
jecxz
push
dec
mov
cld
leave
fdivrl
les
in
and
jmp
mov
fsts
sub
jg
mov
jecxz
ud0
incl
test
jl
jl
dec
or
fmull
cld
repnz
jg
jecxz
jle
jo
pop
adc
xor
pop
rolb
inc
call
pushl
xchg
add
inc
hlt
ud0
xchg
xchg
dec
sbbl
aam
or
dec
mov
adc
int
xchg
mov
xor
nop
adcb
adc
loopne
jg
xchg
arpl
add
inc
or
and
iret
and
mov
std
lcall
out
enter
lods
jl
cmp
mov
lods
jmp
jno
xchg
imul
jecxz
and
sub
dec
fists
incl
inc
daa
inc
inc
inc
testl
or
mov
push
push
xchg
inc
jmp
mov
push
imul
fiadds
popl
jl
fcomip
enter
xor
aas
je
or
sbb
shlb
fwait
pop
pop
add
pop
into
jg
sub
add
and
dec
xchg
sbb
xchg
xchg
cmpsb
cmc
mov
pop
sar
dec
clc
inc
repz
mov
jle
add
decl
sbb
dec
xor
mov
pop
or
pop
jmp
aas
clc
call
jmp
mov
loopne
lcall
out
push
dec
int3
adcb
les
daa
incl
inc
adc
jo
mov
mov
clc
pushl
push
aas
jmp
mov
scas
stc
add
jo
nop
mov
inc
mov
cmc
jg
push
scas
mov
sbb
mov
pop
inc
sbb
add
and
decl
cmc
pop
inc
int3
aas
out
jg
adcl
stos
push
data16
add
rcrb
ljmp
add
out
loope
stc
sbb
clc
out
cmp
pop
sbb
repz
insl
xor
cli
out
in
mov
add
lcall
int3
fistpll
notl
idivb
cmpb
in
adc
mov
sub
xchg
inc
lcall
sub
stos
mov
dec
cmc
movsl
push
imul
fldt
mov
aaa
notb
push
cmc
push
add
mov
jmp
push
mov
insb
fwait
rcrl
mov
fstpt
push
cs
decl
pop
inc
decl
adc
push
xchg
xor
mov
and
add
leave
adcl
fsts
pop
cld
andl
mov
std
mov
mov
push
jbe
sbb
fs
aas
rolb
aaa
sbb
rorb
adc
jno
idiv
sti
enter
lcall
in
divl
mov
inc
add
lds
loop
cmp
mov
cld
pushl
sub
movsl
sbb
push
mov
add
arpl
and
adc
or
pushl
and
or
cmp
mov
mov
out
jnp
int3
int
jmp
ja
and
mov
call
ja
out
fsubrp
in
xchg
dec
adc
cld
or
mov
outsl
lcall
scas
decb
inc
enter
sahf
push
add
stos
jg
inc
ja
add
push
sub
cmp
inc
loopne
enter
jp
incl
push
ret
mov
cltd
or
cltd
aam
cmp
mov
mov
out
ret
out
divb
sbb
and
mov
das
or
jg
dec
pop
cld
decl
pushf
loope
sahf
push
test
cmp
push
int
dec
cmc
sahf
adc
incl
inc
sbb
leave
mov
mov
push
mov
loop
ljmp
shr
sti
cmp
aaa
push
ljmp
pop
jmp
call
mov
mov
fadds
add
ja
lcall
pop
mov
out
mov
mov
cmpsb
xor
sub
sbb
mov
or
pop
call
or
xchg
loop
daa
subl
mov
adc
stc
add
ss
mov
cmp
sbb
inc
dec
dec
adcl
inc
lock
inc
push
pop
popa
fistl
incl
jns
lahf
insl
outsb
mov
xor
jne
mov
jmp
mov
push
and
cltd
loop
mov
fwait
ret
dec
jg
or
jmp
je
into
jae
sub
movsb
jge
xor
incl
mov
or
push
add
addr16
std
lcall
mov
jmp
loope
aad
push
nop
inc
adc
and
ret
int
nop
pop
aas
and
pushf
jae
loopne
outsb
gs
adc
fxch
xchg
and
or
outsl
incl
sbb
sub
sub
aaa
cmp
mov
lock
js
adc
inc
jns
rorl
cli
fnstsw
push
dec
loope
stos
add
inc
std
sbb
aaa
adcb
pop
xor
pop
cmc
data16
pop
push
sar
aas
sar
and
xchg
xchg
lea
jb
adc
aad
sbb
add
fildl
adc
mov
cmp
pusha
jmp
call
xor
or
lcall
data16
xor
dec
and
sub
push
incl
xchg
push
es
rcll
sub
add
cltd
into
sbb
aam
xchg
hlt
aad
lcall
sub
push
jle
lcall
nop
jecxz
fsubl
ficomps
xor
daa
xor
cmp
inc
add
lock
aas
or
arpl
lods
lods
negb
in
adcb
decl
xor
sbb
clc
sti
scas
adc
bound
sbb
push
aas
mov
andb
call
call
rorl
mov
cmp
mov
movaps
daa
incl
js
popf
lods
inc
add
dec
aam
add
add
enter
push
push
mov
fldenv
pop
or
sub
mov
call
lods
xor
jle
decl
mov
enter
roll
js
fwait
and
push
cmp
sbbl
xlat
pop
jmp
es
dec
cmp
mov
pusha
aas
pop
clc
mov
or
inc
mov
mov
ljmp
hlt
pop
xchg
xchg
jmp
aaa
add
and
mov
dec
aas
mov
add
incl
dec
sbb
or
js
scas
adc
negb
insb
mov
mov
jg
std
rorb
inc
sti
cmp
sbb
jo
push
or
adc
das
adc
ljmp
icebp
idivl
sbb
leave
adc
mov
mov
or
jle
mov
adc
xor
jbe
icebp
das
inc
inc
movsl
popl
outsl
enter
outsl
mov
mov
aas
aas
clc
jmp
jp
ret
lods
cs
jp
ljmp
pop
and
mov
jmp
xchg
in
push
adc
je
in
or
sbb
addr16
jecxz
pop
clc
push
fsubrl
sar
push
jl
mov
lret
cmp
cmp
out
stos
inc
popa
pop
lahf
clc
aas
mov
popl
cmpsb
mov
adc
inc
movsb
adc
jnp
cmp
sub
fisttps
push
pop
cltd
mov
jo
data16
jg
jecxz
dec
add
scas
cli
xor
and
jns
mov
push
or
push
negb
popf
stos
test
sar
and
call
cli
repnz
ljmp
aaa
xor
cmp
lods
sbb
xor
jns
sub
lcall
mov
ss
cmp
repnz
hlt
sub
adc
add
jo
dec
or
pushl
fmulp
cmp
xchg
push
mov
dec
mov
fcomi
stos
xchg
add
ljmp
sar
pop
cmp
mov
adc
addr16
test
imul
mov
xor
sbb
push
xchg
call
and
mov
imul
mov
xor
mov
mov
cld
dec
mov
mov
pop
sub
dec
arpl
xor
add
sar
push
inc
mov
data16
loope
inc
mov
adc
xchg
xchg
in
xor
jno
cld
and
enter
jmp
ret
push
lock
movl
int3
js
fdivr
incl
lcall
mov
roll
rol
xor
and
ljmp
adc
in
fsubs
fnop
lahf
mov
repnz
xchg
push
cmp
or
test
enter
ret
adc
add
adc
test
pop
lret
xchg
rcrb
out
out
mov
gs
pop
jl
adc
mov
xor
ret
or
mov
adc
je
call
shrl
mov
testb
ja
outsb
or
call
jno
andb
jno
popf
or
inc
loopne
ja
mov
add
inc
mov
into
daa
jl
xchg
xor
insl
pop
lock
pop
ret
adc
jmp
dec
daa
dec
inc
pop
dec
dec
mov
xor
dec
pushf
jo
shlb
cmp
jg
sbb
xor
cmp
jne
sarb
jo
mov
gs
sub
call
push
push
dec
adc
out
enter
movsl
and
icebp
lock
mov
lds
aaa
negb
add
pavgw
inc
cli
in
cmpsb
fisubrl
and
incl
js
das
loopne
adc
jecxz
enter
pop
add
insl
push
sbb
lcall
fiaddl
xlat
sub
pop
notl
subb
lea
in
pop
xlat
aas
cli
lret
icebp
xchg
pop
or
in
les
in
aas
mov
jmp
xor
filds
mov
mov
jno
add
mov
xlat
arpl
xchg
sahf
or
push
push
push
lock
decl
push
xor
add
push
xsaves
mov
in
testl
insb
cwtl
mov
jb
loop
or
mov
ret
or
sbb
lods
xorl
xchg
into
loop
jae
jns
flds
jmp
sti
push
movsb
sbb
popa
sbb
xor
mov
and
push
cmpsl
jmp
and
push
pushl
or
test
and
pop
decl
cli
popf
adc
cmpl
cmc
int
into
sbbl
std
mov
cwtl
sti
push
inc
push
jo
xchg
inc
xchg
cltd
ljmp
sbb
pop
cmp
mov
dec
jno
and
mov
das
adc
pop
dec
inc
test
call
cld
xor
insb
pop
jno
fbld
in
faddl
pop
pushf
add
jmp
xchg
sub
test
xchg
in
adc
std
ljmp
xchg
aas
clc
call
fiaddl
sarl
imul
jg
and
ja
push
test
pushl
jg
aas
add
sti
rcr
push
scas
inc
out
int
jmp
cmp
cmc
dec
inc
jg
loope
mov
xor
incb
push
jns
jmp
mov
imul
fs
mov
lock
and
ljmp
inc
addr16
jne
loop
stc
in
mov
cmp
pop
and
loop
xor
decb
je
sub
inc
popa
mov
scas
or
inc
inc
sbb
decb
decl
lds
js
imul
lock
in
jae
and
and
xchg
add
ds
decl
mov
xchg
mov
inc
in
pushf
add
into
cmp
mov
gs
push
or
cwtl
aam
into
arpl
sarl
scas
pop
imul
movsl
ret
cli
sbb
or
aas
outsl
pop
ljmp
or
out
pushf
or
inc
fistps
decl
jnp
sbb
fnclex
leave
hlt
into
push
ret
cmp
in
adc
std
mov
jmp
lcall
cmp
pop
push
nop
xor
pop
push
xchg
js
je
and
incl
mov
cmp
sbb
lret
iret
daa
adcb
xchg
dec
jecxz
push
inc
incl
cld
mov
mov
andl
dec
inc
jge
jg
dec
fwait
sub
sbbb
shll
enter
jle
mov
push
mov
call
xor
adc
ja
inc
dec
ljmp
push
aaa
mov
jecxz
out
fs
mov
cmp
leave
xchg
incb
sbb
ljmp
jns
out
xor
push
incl
icebp
push
sbb
xchg
rorb
and
notb
xchg
mov
adc
stos
test
incl
aaa
jle
jge
inc
and
orb
incl
cmp
sbbl
adc
xchg
cs
mov
pop
std
jo
xchg
cli
mov
addr16
incl
incl
xor
cs
inc
add
add
incl
jg
ret
clc
sbb
leave
cltd
int
movsb
push
movsb
mov
cld
outsb
lcall
dec
imul
scas
and
xlat
or
ja
dec
inc
jl
push
inc
and
mov
lcall
mov
or
out
adc
lcall
test
jbe
test
push
out
mov
mov
cli
pop
ret
add
add
xlat
jmp
cli
inc
xor
mov
adcb
jp
or
lcall
add
jmp
inc
scas
sbb
ljmp
in
test
jb
xlat
pop
dec
imul
add
loope
lds
test
pop
push
fcomp
fisubrl
dec
jnp
cltd
sbb
pcmpgtw
lock
xchg
es
jg
inc
es
int
xchg
mov
and
scas
enter
xchg
idiv
decl
push
arpl
mov
mov
fistl
out
int
push
xchg
fstpl
rcll
add
ljmp
sti
js
int3
mov
cmp
sbb
pushl
inc
imull
scas
sbb
mov
inc
mov
dec
ljmp
test
stos
cwtl
ja
aas
cmpsl
xchg
dec
bound
rol
inc
loopne
sbbb
pop
inc
jl
incl
call
adc
inc
mov
shll
adc
push
xchg
or
mov
push
lcall
or
aas
dec
shrl
sahf
dec
loopne
fldpi
mov
adc
sub
mov
incl
pop
rcrl
mov
pushf
arpl
in
inc
out
fmull
xchg
mov
xor
jo
cmp
aaa
out
int
cli
nop
jbe
inc
lcall
call
cmp
mov
add
sbb
pop
loope
and
push
ljmp
sahf
cmp
ret
scas
dec
inc
sub
push
loope
sbb
arpl
push
mov
pop
or
xchg
pop
mov
or
lods
nop
pop
pop
jmp
icebp
icebp
pop
loope
cmc
enter
call
adc
cwtl
push
or
adc
in
pop
or
lret
incl
scas
sar
pushl
sub
xchg
fs
jmp
lea
mov
inc
mov
sarb
icebp
shrl
xchg
inc
pushl
mov
shlb
mov
pop
inc
incl
decl
jne
popf
pop
jge
lcall
in
scas
rorl
jge
push
call
arpl
xor
jle
movl
cmp
pop
push
mov
aas
mov
inc
daa
int3
enter
mov
cmp
push
push
pop
pop
sar
xchg
out
sbb
ret
push
cmp
add
movsb
call
mov
and
out
jecxz
xchg
add
js
sti
insl
jb
outsb
scas
jecxz
movsb
icebp
ljmp
pop
cmpsl
cmp
or
mov
cli
dec
lcall
jae
xor
adc
pushf
inc
imul
mov
pop
icebp
inc
clc
push
mov
imul
jmp
insb
adc
fimull
fistps
inc
pop
sbb
movsb
lock
ljmp
aaa
add
outsb
mov
push
adc
or
cmc
incl
ret
stc
stos
jp
fcomps
sbb
sbb
and
adc
scas
psubsb
decl
loop
push
or
mov
mov
xorb
push
pop
push
lret
movsb
jbe
or
mov
addr16
jo
cmp
lahf
add
push
dec
sar
fisttps
jb
xor
push
loop
decl
push
sub
cmp
mov
repnz
cltd
ret
in
mov
lahf
jno
jne
gs
ja
jmp
mov
mov
jecxz
loopnew
subl
mov
jg
cmpl
sbb
test
call
jae
in
or
in
dec
icebp
xchg
xor
mov
js
test
and
ljmp
pushf
mov
push
fs
mov
ss
xor
aas
and
cmp
sub
sub
sub
add
repnz
sbbl
adc
mov
sbb
jne
adc
lahf
jmp
jp
mull
sub
dec
push
out
jb
cmp
std
arpl
xlat
and
mov
jmp
jae
lock
dec
fisttpll
cld
nop
mov
adc
xchg
jle
imul
pop
in
xchg
je
push
fwait
inc
nop
mov
cmp
dec
out
flds
loopne
out
adc
xchg
and
clc
into
xor
jae
decl
lcall
jg
jp
pop
jge
aam
aas
in
outsb
jnp
cmpsl
cmp
and
jmp
jmp
xchg
mov
jmp
inc
ds
cltd
aaa
xchg
fxch
loop
repz
fs
std
in
jg
fucomi
jnp
mov
div
mov
loopne
loop
adc
xchg
mov
std
mov
xchg
hlt
outsl
push
outsl
cmpsl
xor
cli
test
cli
jb
fimuls
jmp
std
mov
add
pop
clc
repz
sub
mov
adc
ljmp
dec
cmc
jge
in
xlat
rcrl
sarl
or
aas
adc
idivl
lock
repz
js
shll
fsubrs
lahf
ss
pop
mov
xchg
in
jle
pop
fprem1
lahf
xchg
stc
mov
pushf
pushf
pop
fincstp
sub
or
pop
cli
lcall
repz
push
pop
mov
test
out
jecxz
repz
fwait
ret
pusha
cld
dec
cmc
es
in
fildll
jl
mov
jns
pop
clc
ljmp
xor
mov
jg
mov
pop
std
lcall
lahf
dec
lahf
mov
loopne
push
lock
sub
loop
shr
jle
das
movsl
in
out
ljmp
or
jno
iret
xchg
cmpsl
jne
ud0
cld
sbb
shrl
jle
xor
xchg
lret
pop
adc
cld
pop
mov
pop
push
inc
icebp
xor
pushf
pop
outsb
hlt
jb
jl
mov
int3
pop
fdivrl
lcall
repz
cmp
gs
scas
in
in
push
lahf
popf
jae
mov
xor
loope
jmp
xchg
aas
stos
dec
std
fbstp
loop
call
dec
push
psubd
lcall
mov
or
mov
cmp
aas
ror
mov
iret
pop
imul
mov
mov
xchg
rcrl
push
inc
add
or
mov
add
sbb
cmp
pop
addb
je
fs
movsb
mov
and
cld
ljmp
int3
movsl
pushf
inc
rcrl
ja
sbb
or
or
mov
decl
daa
pop
pop
jae
push
sbb
adc
xor
leave
sub
xchg
sbb
movsl
imul
ljmp
push
jno
pushf
jne
dec
mov
icebp
out
fisttps
cmp
inc
aaa
or
xlat
xor
jmp
test
mov
pop
arpl
mov
and
jmp
sub
and
jmp
lods
jg
jge
fistps
mov
jbe
mov
test
movsb
dec
pop
sbb
decl
iret
add
push
bound
mov
lock
mov
xor
nop
add
jle
add
add
inc
rolb
add
pop
repz
cmpsb
jo
xchg
push
jns
fimuls
inc
inc
insl
lret
cs
pop
mov
mov
add
jge
arpl
mov
add
pop
lcall
add
je
fdivl
enter
decl
sbb
and
jg
or
wrmsr
sbb
and
sub
lcall
pop
cmp
inc
xor
pop
xor
jb
jl
mov
nop
xor
mov
jge
cmp
dec
mov
or
pop
fwait
int
xor
xor
ljmp
xor
pop
xor
xchg
xor
ljmp
sti
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pushl
lret
xor
and
cmp
inc
ss
ss
ss
test
adc
sbb
mov
cmp
cmp
cmp
cmp
push
cmp
pop
cmp
jno
js
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
jns
test
mov
lahf
cmp
aaa
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
das
ds
mov
xchg
ds
ds
aas
pushf
aas
stos
aas
mov
aas
push
orb
sub
cmp
aas
xor
xor
jmp
xor
pop
xor
xorb
xor
xor
xor
pushl
adc
push
xor
jns
aad
fdivl
jmp
repnz
xor
xor
xor
xor
xor
xor
pushl
ret
xor
out
xor
xor
aas
ss
ss
ss
xchg
lahf
loopne
pushl
cmpsb
lods
ss
mov
ss
fidivl
fbstp
in
clc
adc
es
inc
lcall
fs
insl
aaa
ja
xorb
aaa
pushf
aaa
scas
aaa
ret
aaa
fistpll
aaa
adc
and
add
pop
cmp
jge
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
mov
cmp
jno
mov
xchg
cmp
cmp
cmp
cmp
incl
cmp
cmp
cmp
insl
cmp
jl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
insl
cmp
mov
mov
cmp
ljmp
jecxz
repnz
or
push
add
ds
ds
ds
sarl
pop
call
fstpt
loop
ds
aas
sub
aas
loop
nop
or
fildll
scas
xor
xor
xor
xor
das
xor
inc
jg
out
xor
xchg
cmpsl
xor
xor
xchg
pushl
fdivs
sbb
push
xor
add
decl
pop
xor
mov
ss
dec
ss
ss
ss
decl
mov
xchg
ss
lods
ss
ss
aaa
and
sti
aaa
sub
xor
add
dec
aaa
push
aaa
xchg
aaa
mov
aaa
jmp
icebp
aaa
clc
aaa
pushl
add
inc
cmp
cmp
cmp
dec
cmp
cmp
outsl
cmp
mov
cmp
cmp
aad
fnstsw
in
pop
mov
jl
out
stc
idivl
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
scas
cmp
hlt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
nop
cmp
inc
cmp
and
pushl
xchg
movsl
ds
sarb
ds
ljmp
jg
cmpl
mov
data16
jp
mov
xchg
aas
lcall
mov
sarl
fnstsw
out
aas
idivb
dec
je
xor
xor
xor
aad
pushl
jp
xor
bound
jb
sahf
xor
xor
notb
pop
je
xor
or
xor
xor
push
xor
loop
aas
cld
xor
xor
xor
xor
gs
shlb
sbb
add
ss
ss
ss
nop
ss
mov
pushl
loope
in
add
sub
inc
aaa
dec
aaa
pop
aaa
pusha
aaa
lea
cltd
aaa
mov
aaa
fcos
or
cmp
cmp
mov
ret
mov
fstpt
lock
jg
cmp
mov
cmp
cmp
xor
xor
dec
cli
popa
js
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
incl
mov
cmp
js
jg
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
xor
fdivrp
pushl
jl
cmp
cmp
out
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
pop
cmp
push
mov
mov
aas
pop
scas
mov
out
in
ds
ds
cmp
add
sbb
jg
mov
outsl
or
sarl
fstpt
out
idivl
std
out
aas
mov
mov
add
pop
cld
jg
pop
dec
xor
jp
xorl
cmp
das
cli
mov
mov
xor
xor
sub
inc
pop
add
push
push
mov
mov
int3
xchg
stc
xor
mov
sub
cmp
dec
xor
test
mov
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jmp
int3
xor
xor
xor
xor
xor
xor
xor
sub
ljmp
dec
xor
jg
xchg
xor
lret
xor
incl
ss
sub
cmp
push
mov
xchg
ss
mov
fidivs
jmp
ss
or
orb
aaa
outsb
inc
lcall
mov
aaa
out
push
cmp
cmp
cmp
cmp
mov
pusha
cmp
outsb
cmp
cmp
cmp
cmp
mov
icebp
cmp
cmp
ret
in
lock
cmp
into
mov
jmp
add
dec
cmp
pusha
jbe
cmpb
cmp
dec
cmpl
fistpll
in
add
cmp
cmp
mov
add
cmp
cmp
incl
or
sbb
cmp
cmp
or
mov
cmp
sub
scas
xchg
jbe
xchg
inc
mov
inc
ret
cmp
in
cmp
and
xor
ss
ds
ds
jg
ds
ds
ds
ds
ds
mov
mov
cmpsb
lods
ds
mov
sar
lret
fnstsw
jecxz
hlt
jp
aas
or
sbb
and
fcomip
mov
aas
pop
aas
outsb
aas
je
cmpl
aas
cltd
pop
cmp
aas
mov
mov
mov
add
and
cmp
ljmp
ret
xor
xor
xor
xor
adc
sbb
and
sub
jg
xor
inc
xor
xor
ja
jl
xorl
xchg
xor
add
xor
xor
scas
jecxz
ljmp
xor
xor
stos
decb
pushl
dec
xor
jne
jl
cwtl
xor
xor
pop
pop
loope
xor
outsl
loop
clc
cmpsl
xor
pop
xor
cld
mov
xor
xor
scas
mov
and
fnstenv
fisttps
pushl
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
push
xor
sbb
xor
scas
xor
repnz
std
mov
das
ss
loop
ss
lock
in
divl
adc
and
mov
jmp
lret
aaa
aad
in
out
aaa
mov
cmp
pop
cmpsl
pop
cmp
cmp
cmc
aas
lcall
sbb
popa
cmp
inc
cmp
adc
or
cmp
test
out
clc
mov
cmp
cmp
pop
add
pop
cmp
cmp
cs
out
add
scas
cmp
mov
push
cmp
cmp
repz
aaa
push
cmp
clc
jmp
pop
ljmp
lea
cltd
andb
clc
cmp
pop
add
dec
cmp
cmp
cmp
xlat
inc
clc
jo
lea
xlat
lods
cmp
push
cld
cmpsl
clc
mov
cmp
mov
mov
mov
sbb
cmp
adc
sbb
and
sub
xor
xlat
incl
test
fistpll
out
cs
cli
add
aas
add
pop
aas
jo
lds
int
sub
jmp
aas
fisubrs
lock
stc
aas
pop
add
mov
xor
xchg
add
adc
stos
dec
cld
mov
xor
cmc
and
mov
and
sub
xor
cld
sub
mov
cli
loop
xor
xor
xor
xor
jg
xor
jle
leave
xor
dec
sbb
xor
pushl
jno
xorl
xor
xor
xor
insl
xchg
jmp
xor
pushl
outsb
xor
mov
jmp
push
idivl
pushl
and
sub
popa
ss
fiadds
aaa
pop
mov
jb
aad
loope
cmp
cmp
push
jae
cmp
cmp
cmp
cmp
push
cmp
cmp
mov
sarb
fnstcw
in
pop
decb
call
cmp
inc
cmp
imul
xchg
cwtl
cmp
rolb
cmp
push
pop
and
cmp
cmp
mov
xchg
cmp
cmp
jno
mov
ret
cmp
cmp
cmp
dec
lcall
test
addb
mov
cmp
leave
cmp
cmp
stc
cmp
sbb
es
cmp
pop
cmc
mov
jae
xchg
mov
lahf
ds
adc
ds
adc
pop
push
cld
and
cmp
push
ss
dec
sub
dec
arpl
call
add
xor
imul
incl
xor
xor
xor
sbb
cs
es
xor
xor
pop
clc
stos
jo
xorb
xor
xor
xor
xor
jg
sub
xor
inc
pop
or
and
sub
xor
dec
daa
inc
xor
bound
xor
jae
xorl
inc
cltd
lahf
mov
fidivl
loope
lock
ss
xor
xor
decl
daa
xor
xor
insl
pop
ds
aad
push
nop
shll
lock
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
pcmpeqb
test
xor
and
inc
loope
pop
xor
push
xor
scas
jno
sti
test
shlb
in
pop
ja
ss
ss
xor
pop
cmc
call
push
aaa
pop
aaa
xchg
aaa
aaa
out
pop
cmp
push
les
cmp
mov
mov
xchg
xlat
jmp
cmp
cmp
cmp
inc
cmc
sbb
push
cmp
imul
cmp
mov
cmp
cmp
dec
sti
lcall
and
cmp
repnz
cmp
cmp
xlat
js
ja
les
cmp
cmp
cmp
daa
add
cmp
push
out
jecxz
cld
mov
fsubrp
cmp
jnp
push
shl
imul
shrl
add
fists
in
cmc
aas
data16
sub
js
xor
incl
xor
push
jo
jbe
jnp
xorb
xor
call
lods
xor
xor
xor
xor
xor
xor
imull
xor
xor
outsb
xor
xor
xor
aas
xor
pop
xor
push
xor
xor
mov
pop
lock
xor
xor
xor
pop
inc
xor
xor
xor
testl
aaa
pop
aaa
push
outsl
aaa
idivl
sbb
push
inc
mov
cmp
jmp
hlt
cmp
cmp
cmp
cmp
daa
ds
clc
adc
cmp
je
jl
test
mov
sarb
cmp
jecxz
cmp
inc
or
jl
xorb
add
add
sti
or
js
mov
push
and
push
jo
je
jl
push
mov
or
pop
sti
xor
cld
clc
orl
jg
adc
stc
nop
push
add
mov
add
add
les
lret
mov
into
add
mov
inc
cmpsl
pop
dec
and
jae
incl
addb
and
or
mov
sub
push
addb
pop
mov
fldl
cld
cmp
enter
clc
aas
push
pop
jmp
out
rorl
rol
add
pop
or
push
aas
jg
pop
roll
cmp
or
int
mov
jo
pusha
shrb
xchg
out
movsl
rcl
mov
psubb
outsl
add
pop
out
pop
cs
sbb
fwait
neg
out
fimull
pop
ret
out
mov
add
pop
sbb
pop
pop
aas
insb
insl
in
out
push
cs
xchg
rcrl
xchg
lock
inc
mov
pop
std
cmp
push
fnstsw
add
jl
imul
jbe
jg
test
pop
inc
add
jo
push
sbb
pop
push
push
or
aas
addr16
pop
xor
push
cwtl
pop
punpcklwd
int3
pusha
insb
xor
jg
dec
imul
add
cmp
iret
aas
mov
inc
outsb
push
add
es
or
cmp
roll
cmp
stos
inc
ja
dec
pop
outsb
shll
fwait
out
and
std
clc
lock
popf
pop
loopne,pn
rcrb
dec
add
jbe
pop
cs
pop
outsb
clc
insb
add
popa
rorl
or
das
xchg
out
mov
sbb
mov
xchg
add
push
cs
add
addr16
pusha
cmpsl
pop
in
and
adc
adc
aas
push
pop
jne
shr
cs
bound
aaa
addr16
cld
dec
cs
bound
cmp
fsubrl
mov
stos
jb
jb
add
and
push
mov
les
cmpsl
add
push
out
ja
inc
fwait
sub
add
inc
addl
inc
shll
xor
sbb
push
pop
rolb
loopne
loop
je
pop
fwait
xchg
out
ret
roll
lock
jb
pop
mov
push
sbb
or
test
mov
xchg
pop
shl
xchg
rolb
pcmpeqd
loop
add
fmull
dec
addb
add
out
add
daa
mov
mov
adc
daa
sbb
mov
fnstcw
repz
and
cs
clc
xor
and
or
push
adc
cmp
clc
dec
push
outsb
mov
movb
mov
lret
adc
jbe
shlb
push
sbb
mov
dec
addl
mov
add
es
mov
push
hlt
sbb
mov
add
mov
xor
inc
mov
adc
dec
adc
cmp
inc
and
mov
xor
and
lret
pop
daa
inc
push
fnstsw
dec
sub
aas
push
jbe
cmp
xor
mov
sub
mov
pop
aas
js
dec
and
imul
push
pop
push
lds
cmp
cmp
push
cmp
out
out
xchg
mov
pop
push
fwait
pusha
sub
cmp
push
ret
or
daa
popa
push
and
push
mov
fildl
or
int
add
daa
push
daa
push
xchg
xbegin
push
lea
fldt
push
adc
imul
cwtl
out
testl
mov
push
or
xor
testl
daa
inc
mov
mov
aad
push
pop
dec
dec
pop
xchg
sub
js
out
in
jb
nop
xchg
xchg
loopne
fs
add
add
clc
daa
add
daa
add
mov
daa
or
cmpsb
push
repz
pushf
daa
aas
and
xorw
inc
arpl
daa
into
arpl
cli
ds
rorl
out
pusha
pop
repnz
add
lahf
cmp
lahf
jns
divb
cmp
out
fildl
pop
add
daa
add
add
fisubs
insl
jbe
fstpt
lret
jo
insl
ret
lcall
mov
push
daa
dec
add
sub
int3
fwait
jle
xor
in
repz
sub
jecxz
test
inc
push
adc
filds
in
inc
xchg
pop
repz
sbb
or
stos
movsb
sub
out
scas
sbb
xor
mov
cmpsb
arpl
aas
cs
sbb
mov
in
push
inc
sub
out
and
push
xor
sahf
fisttpll
andb
sub
sbb
push
je
stos
inc
push
fisttpl
mov
jo
loopne
daa
and
inc
ds
xorb
pop
lock
cmp
jmp
dec
push
mov
dec
xchg
pop
jb
mov
mov
mov
xchg
xor
ja
and
and
xchg
ret
mov
fstps
addr16
inc
sub
and
jle
adc
cltd
xchg
pop
xor
push
xchg
sbb
sahf
js
subl
cwtl
daa
jl
fidivl
clc
or
sbb
daa
lods
insl
adc
daa
dec
xor
cwtl
insl
mov
dec
xor
dec
daa
dec
daa
outsb
or
pop
dec
daa
clc
dec
jne
ja
jbe
dec
sarb
dec
lret
dec
shlb
dec
out
aas
sbb
aad
cwtl
daa
mov
mov
xor
cltd
cltd
out
and
and
push
mov
inc
sbb
push
sub
push
aas
divl
and
shll
aaa
mov
xchg
movsl
aaa
mov
lret
jnp
or
push
bound
fmull
mov
inc
mov
gs
sbb
das
aaa
movb
mov
lahf
adc
pop
pushl
inc
popa
and
inc
out
adcl
ja
and
popa
cmp
add
or
pop
jne
xchg
jo
mov
and
lock
daa
cmpsb
shll
adc
lds
jbe
jecxz
lock
stos
sub
dec
sub
insb
imul
mov
sbb
and
sbb
cmp
clc
fdivl
or
mov
push
and
jno
jmp
xchg
add
mov
and
lods
pop
cmc
pushf
aas
lahf
push
mov
popf
cmp
add
ret
mov
xchg
movsb
dec
sti
fildl
popf
or
mov
xor
cld
lret
xor
pop
mov
lock
jmp
xchg
orl
pop
or
filds
das
adc
or
add
push
xchg
cmp
sub
andl
leave
push
or
push
lret
xchg
jno
imul
ret
push
add
add
add
mov
outsw
add
data16
push
ja
jbe
xchg
jg
xchg
mov
fiaddl
cmpb
fisubrl
mov
cs
jne
and
dec
mov
insb
outsl
jo
jb
lods
cmp
or
push
xchg
push
inc
ss
imul
jo
jae
inc
ss
fistpl
fistpl
fs
das
xchg
xchg
add
inc
sub
pop
mov
mov
sahf
add
add
dec
pusha
andl
jae
cs
daa
rorb
fnstenv
imul
mov
outsb
xor
sub
out
popa
ja
subl
mov
xorl
xor
mov
das
xchg
movsl
mov
push
push
das
mov
pop
sbb
pusha
mov
add
jbe
insl
lahf
into
fstpl
loopne
fwait
pop
adc
ret
add
popa
lahf
xchg
push
jae,pt
fucomi
test
xchg
insb
bswap
push
jle
push
movzbl
jp
or
or
inc
fs
adc
test
push
jo
adc
push
stos
imul
imul
and
aas
imul
push
push
sub
aas
aam
push
arpl
dec
sbb
pop
and
sub
lock
push
je
add
cs
sbb
jnp
rcl
push
lcall
hlt
xor
adc
push
ljmp
or
inc
push
or
sbb
push
push
insb
mov
call
dec
xlat
ss
arpl
mov
fisttpl
cmpsl
adc
and
ds
xchg
xchg
push
imul
adc
xchg
cmp
mov
lods
xor
popa
pop
or
push
cmp
ss
inc
scas
lcall
push
xchg
or
popa
dec
mov
sbb
test
mov
insl
push
test
inc
mov
sbb
or
cmpsb
jge
scas
xor
sbb
popa
outsb
insb
sub
inc
adc
test
arpl
aas
outsl
push
sub
enter
and
mov
fisubl
jns
push
lret
fsubr
cs
add
icebp
sbb
push
fwait
add
push
mov
add
push
ds
sbb
add
pop
cli
mov
dec
xorb
jbe
mov
jno
popa
adc
imul
mov
inc
scas
outsb
repnz
or
push
inc
fildll
mov
sub
flds
inc
xor
insb
push
shrb
sub
cmp
out
bound
andl
shll
fisubrl
push
jmp
xchg
test
shll
stos
insl
jno
pop
jae
xlat
jb
sbb
jle
mov
jb
out
je
cmpsb
shl
push
mov
es
imul
push
and
test
repnz
lahf
adc
out
out
js
push
push
push
sub
xchg
inc
jp
push
inc
mov
sbb
lock
xor
push
add
jb
jnp
jecxz
inc
pop
cs
cmp
sbb
outsb
nop
inc
or
push
xor
pop
inc
aaa
movsl
pusha
rclb
or
sub
xor
xor
pop
imul
and
ss
pop
jo
xchg
mov
ja
push
movsl
mov
adcl
jae
add
push
xor
xor
inc
jnp
push
es
stos
popa
push
or
sub
add
rol
sub
push
das
push
es
mov
pop
inc
jnp
mov
pop
jb
inc
jp
push
out
aad
mov
inc
out
push
loop
fs
dec
jae
dec
or
add
pusha
add
adcb
lret
sbb
push
mov
fidivrl
inc
push
ljmp
filds
imul
xchg
cmpsb
mov
push
dec
jb
add
push
or
mov
movsb
in
cwtl
pop
scas
xor
and
xchg
add
fiadds
mov
push
jecxz
mov
or
cmp
dec
fstpt
dec
xor
sbb
scas
lcall
dec
decb
xor
mov
mov
ja
imul
pop
mov
int3
cmp
popa
mov
add
out
dec
shlb
loop
jbe
inc
mov
mov
pusha
mov
inc
inc
gs
fiadds
ss
push
aaa
aad
je
out
scas
push
inc
push
xorl
imul
cs
mov
inc
mov
aaa
push
xchg
mov
jo
repnz
jo
jg
xor
dec
arpl
bound
pop
hlt
mov
fdivl
repz
jo
rcr
mov
mov
lds
mov
xlat
xor
push
outsl
jmp
fcoms
dec
sarl
data16
or
and
subb
test
sub
and
dec
sbb
aas
je
data16
and
iret
imul
inc
add
mov
sub
jo
dec
lret
cmp
sbb
sub
cmp
ljmp
pop
sti
pop
and
cmp
push
jb
mov
ret
popa
mov
rorb
es
arpl
add
test
mov
dec
scas
not
fstps
jae,pt
jb
push
out
mov
sbb
jae
popa
sbb
mov
xchg
shll
sbb
push
jg
lahf
sbb
dec
dec
jmp
rolb
dec
push
and
xor
and
xchg
dec
pusha
sub
sub
sti
ret
adc
mov
popa
out
fadd
jno
sub
mov
stos
pop
mov
and
imul
fs
ss
adc
cmp
xchg
jp
inc
and
add
pop
scas
inc
sub
push
add
dec
jb
mov
add
mov
movb
mov
xchg
insl
or
mov
push
stos
movsl
aas
jo
jo
or
pop
pusha
push
loop
mov
cmp
adc
add
sbb
push
add
cs
ljmp
pop
and
test
and
punpckldq
sub
adc
push
ficompl
pushf
adc
inc
xlat
adc
fwait
into
cwtl
sbb
dec
mov
call
scas
mov
xor
jbe
cmp
ret
mov
jecxz
mov
add
call
sub
aaa
ljmp
add
pusha
jo
sbb
fcompl
inc
add
adcl
lds
insb
fistl
stos
mov
xor
fwait
push
pusha
and
aaa
and
pop
fwait
js
push
arpl
sbb
inc
cmpsb
outsl
adc
inc
jecxz
outsl
inc
add
scas
and
sbb
sbbl
xlat
stos
add
fisubrl
mov
adc
sub
daa
fisubrl
nop
xlat
scas
ja
push
adc
mov
inc
inc
ljmp
push
jb
jmp
test
arpl
and
mov
sbb
movsl
test
cmpsl
dec
mov
mov
jnp
xchg
sub
mov
pop
jmp
xchg
push
lahf
imul
test
or
aas
xorl
sbbl
sub
inc
mov
pop
xor
cmp
pop
mov
mov
push
inc
sbb
mov
and
cs
cmpsb
rolb
outsb
cmp
adc
hlt
nop
sub
fldt
sbb
rorl
xchg
bound
xor
sti
jo
bound
pop
add
pop
or
jbe
and
add
mov
lcall
push
fildl
push
rcl
out
scas
mov
outsl
stos
push
jp
pop
data16
or
or
and
lret
fimull
push
dec
testl
insb
inc
addr16
add
add
push
jmp
inc
pop
fadds
pop
cli
jne
push
inc
adc
bound
and
stos
scas
mov
cs
testl
jne
xor
jne
adc
jbe
and
push
mov
imul
pusha
aaa
pop
popa
inc
out
fisubrl
mov
aas
lret
js
fdiv
xor
insb
mov
or
adc
jae
jno
xchg
divl
inc
rcr
data16
mov
test
xlat
add
pop
orb
jno
lcall
outsb
fidivs
popa
test
decl
push
mov
popa
cs
pop
arpl
ja
iret
push
or
insb
aam
jne
mull
push
out
jmp
dec
or
sbb
inc
xor
adc
enter
cmpl
das
cmp
sub
mov
arpl
pop
hlt
dec
bound
repz
aad
sub
or
testl
dec
stos
mov
aas
mov
xor
inc
pop
lret
adc
lcall
push
and
jg
and
pop
cmpsl
dec
insb
movsl
mov
addr16
sbb
dec
jbe
push
xor
outsl
shll
add
and
sbb
out
sub
inc
add
fsubp
xchg
mov
ficoml
push
add
stos
in
jb
lcall
mov
xor
fisubs
push
incb
lods
or
inc
jae
inc
aad
bound
push
or
mov
je
arpl
push
xor
mov
lds
adc
dec
inc
xor
fwait
movsb
mov
and
pusha
dec
add
adc
pop
adc
pop
bound
test
xchg
jg
push
mov
mov
shrl
dec
faddp
pop
mov
fimull
mov
pop
jg
or
jp
lods
scas
les
pop
push
test
rorl
inc
cmp
lea
orl
repz
sbb
roll
fiaddl
stos
imul
xchg
adc
push
dec
and
andl
inc
mov
ret
xorb
push
mov
jo
mov
adc
jno
push
test
adc
and
or
jmp
mov
push
jb
adc
movsl
xchg
popw
and
dec
push
push
stos
mov
add
add
and
mov
mov
test
sub
bt
fmuls
loope
lods
mov
pop
sbb
mov
cmp
jg
mov
or
and
push
lea
mov
lods
mov
push
test
rorb
push
movsb
jmp
adc
xor
cwtl
xor
fs
imul
pop
mov
mov
dec
les
dec
dec
jp
xor
lea
xchg
out
daa
jo
test
int
adc
dec
pop
and
arpl
sbb
shll
dec
iret
or
loope
jmp
mov
dec
cmp
xorb
repz
add
fwait
cmp
xchg
mov
dec
ds
ja
inc
mov
inc
inc
dec
inc
inc
punpcklwd
les
mov
push
loope
adc
add
dec
adcl
ret
es
jp
xlat
gs
inc
push
addb
push
popf
ss
push
mov
mov
sub
cmc
jb
adc
sub
in
pushf
bound
test
and
dec
push
inc
xor
mov
jle
add
fistpl
rclb
les
inc
ss
fwait
mov
jno
adc
roll
adc
adc
mov
or
insl
int3
gs
insl
sub
imulb
rorl
jmp
addr16
add
fwait
out
sahf
push
and
mov
pop
lods
or
in
inc
sbb
push
int
test
add
xor
or
adc
negl
push
sbb
je
jb
inc
subb
xor
and
sbb
xor
add
inc
sbb
push
jo
adc
jge
push
fiaddl
je
insl
adc
inc
push
adc
sub
xchg
cmp
sbb
xchg
or
and
mov
cmp
pop
jbe
sahf
and
adc
nop
adc
insb
cwtl
cltd
movsl
outsb
adc
int3
mov
xor
imul
push
xor
bswap
loop
sbb
mov
jo
dec
sub
les
iret
push
xor
sbb
adc
sub
mov
hlt
dec
mov
or
gs
push
addr16
cmp
add
xorl
adc
pop
into
jb
adc
ret
ss
js
inc
js
xchg
add
in
mov
xchg
push
cmp
and
or
sbb
dec
popf
jl
add
movsl
cmp
sbb
std
sbb
cmp
jne
adc
inc
push
cmp
adc
js
inc
lcall
stos
daa
add
add
add
push
pop
ret
sub
mov
fistpll
add
adc
rclb
popf
xchg
dec
xor
sbb
adc
push
shl
lods
es
movsl
andb
adc
add
daa
repnz
mov
inc
inc
enter
fildl
fwait
add
insl
js
mov
or
sbb
fcomps
mov
sbb
adc
inc
gs
xchg
sbb
mov
sub
inc
or
cmp
shlb
sub
icebp
fsubl
enter
adc
mov
inc
add
retw
or
imul
add
insl
data16
dec
push
outsl
dec
shlb
cli
test
dec
and
jmp
in
xor
mov
and
inc
push
mov
push
cs
push
pop
sbb
sub
sbb
clc
inc
fisubl
add
jg
int3
dec
adc
dec
popf
and
stos
test
daa
inc
fs
fimull
mov
sbb
dec
cmpsl
sbb
xchg
xchg
mov
and
push
arpl
cmp
xchg
dec
rcrl
movsl
bound
roll
xor
dec
test
mov
stos
sbb
push
sbb
inc
jnp
add
jo
and
sub
or
dec
adc
sbb
daa
xchg
push
adc
aad
pop
pmulhuw
mov
loope
add
test
fcomps
test
pop
testb
fstpl
aam
pop
shlb
cmpsb
xchg
push
sbb
out
lret
xchg
jbe
mov
pop
sbb
and
sub
mov
bound
inc
roll
xchg
pusha
jno
add
call
push
lds
pusha
xor
pop
jne
dec
insb
movsl
icebp
sub
orb
aas
push
imul
push
cwtl
cmp
adc
push
xchg
mov
es
leave
pusha
and
dec
aaa
mov
xor
adc
loop
imul
mov
cwtl
mov
xor
adcl
rclb
dec
cs
add
push
je
ja
adc
imul
cmp
ret
sub
sub
or
insl
loopne
push
add
nop
add
add
arpl
nop
orl
adc
clc
and
cmp
dec
fwait
dec
loop
sub
or
mov
cmp
outsl
push
cmp
stos
sub
pusha
cltd
test
jge
pusha
and
push
mov
ja
and
push
xor
inc
imul
sub
insb
xchg
and
add
cwtl
pop
fildl
fadds
lods
and
pop
mov
push
and
test
lods
xchg
cltd
cmc
inc
lcall
loopne
jb
stos
push
test
bound
insb
and
scas
xor
in
outsl
and
dec
push
xor
pop
insl
adc
add
gs
les
push
popa
bound
jbe
sbb
fisubl
das
pop
mov
add
inc
inc
or
pop
adc
insl
add
or
fwait
mov
inc
and
lret
dec
nop
cmp
pop
lods
cwtl
and
push
adc
insb
push
clc
in
xor
inc
cmpsl
ljmp
popf
loop
mov
mov
adc
les
xchg
mov
adc
mov
add
pop
push
cltd
sub
push
fadd
push
sbb
adc
lret
adc
mov
rcl
add
sbb
adc
dec
dec
jae
orb
adc
and
mov
ficompl
sub
sbb
jae
sbbl
push
pop
outsl
test
daa
mov
push
cmp
adc
in
inc
pushf
inc
dec
je
add
mov
adc
test
sbb
adc
mov
int
mov
push
or
add
jl
in
popa
aam
sub
insb
stos
pop
fisubl
jne
enter
es
imul
sub
adc
push
enter
mov
dec
aaa
add
mov
dec
and
outsl
jo
popw
sbb
and
push
dec
adc
cli
out
dec
in
jae
inc
fst
cmp
or
jbe
dec
jno
mov
sub
sbb
sbb
dec
pop
sub
jg
cmp
adc
adc
cmp
xor
inc
lea
push
jo
dec
pop
xchg
fs
pop
jo
inc
bound
imul
adc
adcl
and
cmovle
pop
gs
jmp
or
scas
lds
test
mov
add
sbb
mov
mov
rep
and
and
and
sbb
xchg
daa
loope
fmuls
hlt
pushf
adc
and
pop
sub
xchg
mov
std
or
bound
cwtl
mov
xchg
inc
fiaddl
and
xchg
adcb
lret
jmp
cs
dec
adc
or
add
scas
loop
cmp
sub
or
or
add
nop
push
outsl
jb
sub
imul
cmp
mov
arpl
push
sub
xor
je
loop
push
push
mov
mov
int
or
sbb
es
mov
dec
and
ret
scas
sbbl
add
jae
popf
and
sbb
jae
imul
pushf
jo
repz
mov
dec
lods
sbb
or
mov
sub
inc
pop
or
or
out
adc
mov
sub
imul
jge
xorb
adc
dec
fdiv
std
and
or
adc
mov
loopne
les
sub
mov
push
orl
pop
adc
rep
orw
sbb
push
outsb
sub
lahf
xchg
jne
inc
and
mov
jo
lock
or
inc
pop
xchg
adc
js
xor
out
mov
and
fisttpl
sbb
fsubs
sbb
push
test
popa
inc
inc
or
inc
push
rcl
jno
adc
push
aad
xor
and
xchg
fadds
and
xor
rcr
cmp
insl
xor
and
insl
cmp
xchg
add
jmp
leave
inc
adc
mov
push
sti
aaa
addr16
mov
stc
jns
movsb
je
fcmovbe
sbb
push
stos
rorl
dec
add
push
jne
out
out
inc
sbb
dec
sarl
fisttpl
or
loope
mov
jge
xchg
popa
xor
xor
outsb
adc
cmp
movsl
push
es
ret
gs
sbb
adc
scas
inc
cltd
sbb
test
leave
imul
jb
or
movsl
dec
shrb
push
push
dec
adc
adc
dec
and
sbb
pop
jmp
lea
push
aam
or
fs
lock
jg
repz
test
mov
ret
or
inc
adc
push
or
add
pop
sbbb
dec
inc
pop
loopne
cmp
ret
movsb
and
jb
inc
repz
fmul
pop
sub
movsl
sbb
add
dec
push
mov
aas
mov
stc
push
mov
inc
pushf
aas
xchg
sbb
add
pop
inc
sub
xchg
repnz
xchg
lret
data16
mov
and
pop
pop
and
ljmp
cmp
sbb
es
or
arpl
neg
dec
fstps
stos
fnstenv
mov
das
andb
aas
push
xor
rcrb
arpl
or
inc
nop
xchg
scas
add
and
inc
arpl
insl
or
cmp
push
push
cwtl
add
aaa
inc
pop
rolb
dec
or
rclb
nop
cs
dec
add
cs
dec
and
je,pn
jae
adc
lahf
shl
popf
or
jb
dec
and
xorb
sbb
xchg
xor
xor
aam
lds
daa
xor
dec
and
mov
out
mov
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
mov
dec
add
lahf
dec
add
