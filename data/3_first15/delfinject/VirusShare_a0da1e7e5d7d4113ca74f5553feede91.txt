push
add
adc
adc
ja
jl
adc
adc
adc
adc
adc
adc
pop
inc
jae
popa
gs
inc
pusha
jne
lahf
push
add
add
adc
push
push
jns
ja
add
adc
call
adc
nop
push
add
adc
adc
je
jnp
xchg
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xchg
adc
push
adc
add
adc
add
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
ja
je
aaa
pop
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rcll
add
rcll
add
rclb
add
rclb
add
rclb
add
rcll
add
rclb
add
rclb
add
rcll
add
rcll
add
mov
adc
sub
ss
sbb
mov
xchg
inc
dec
rcrl
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
hlt
test
xchg
sub
addr16
jp
adc
adc
cli
mov
in
in
fwait
inc
sbb
jne
and
mov
ss
push
cltd
push
or
add
or
and
mov
adc
mov
sbb
inc
ss
mov
push
mov
fwait
sbb
add
clc
jbe
into
mov
fwait
push
and
cltd
push
and
cltd
adc
push
fwait
push
and
push
ss
dec
ret
fwait
adc
rolb
ljmp
in
in
fwait
inc
ss
xchg
jl
push
adc
and
jmp
cltd
adc
inc
ss
mov
cltd
inc
push
cltd
inc
and
fwait
push
or
adc
and
cltd
push
and
add
pop
push
cltd
push
and
inc
ss
inc
push
mov
push
mov
mov
dec
ret
xchg
ljmp
cltd
add
push
ss
dec
ss
fwait
or
push
mov
cltd
adc
fwait
add
pop
dec
rcrl
push
xchg
ljmp
cltd
adc
adc
cltd
push
add
push
push
mov
ss
mov
fcomps
mov
sub
jne
cltd
adc
lcall
fwait
adc
adc
jmp
adc
sub
setns
cli
jno
in
in
mov
push
push
mov
push
mov
cltd
rorl
in
xchg
shlb
rcrb
dec
pop
rcrl
inc
push
xchg
loop
push
ss
hlt
cltd
adc
inc
ss
cltd
or
sub
seto
mov
dec
or
jmp
jp
sub
jb
sub
jne
cltd
push
add
sbb
inc
sbb
cmp
cltd
adc
push
adc
cltd
adc
loop
in
stc
pop
cltd
fcomps
cltd
jmp
push
sbb
sub
stc
xor
fwait
dec
and
cltd
sub
insl
sbb
sub
fwait
outsb
and
cmp
mov
pop
or
inc
ss
adc
dec
in
in
in
test
addr16
xor
stc
or
adc
adc
push
ss
seta
in
and
adc
dec
pop
dec
dec
rcll
enter
in
adc
adc
outsl
adc
add
push
xchg
in
in
adc
xchg
hlt
adc
in
in
fwait
jae
js
push
inc
js
call
cltd
ljmp
cltd
shrl
into
out
in
call
adc
mov
inc
cli
adc
rcrb
rcll
cltd
lret
cltd
repnz
cli
aad
push
adc
adc
js
push
jp
adc
adc
loope
in
in
mov
fwait
sub
aam
in
add
xchg
hlt
add
in
in
mov
js
jp
xor
adc
scas
out
in
lcall
xor
adc
cli
gs
in
in
test
add
xchg
adc
js
cltd
add
mov
in
in
and
fwait
adc
dec
dec
rcll
xchg
cli
mov
cltd
out
push
ss
in
in
in
xor
fwait
pop
and
fwait
push
and
adc
add
test
add
push
cltd
adc
push
cltd
dec
sbb
dec
add
cltd
rorl
sub
adc
push
sub
popa
add
dec
or
cltd
adc
jp
sub
fs
jle
or
adc
mov
push
or
add
in
in
xchg
shlb
add
adc
adc
cltd
adc
adc
in
in
mov
push
mov
test
add
push
addr16
and
fwait
adc
adc
push
and
fwait
adc
sub
sbb
or
pop
dec
rcrl
push
xchg
cli
mov
fwait
push
and
data16
jle
or
ret
xchg
repz
in
in
fwait
dec
add
adc
xchg
sar
sbb
adc
in
fwait
inc
and
cltd
push
and
fwait
adc
push
add
xlat
adc
mov
cltd
push
or
push
push
add
push
add
add
cltd
push
adc
sub
push
fs
mov
cltd
push
sub
jae
js
push
cltd
push
adc
adc
cltd
push
inc
cli
xor
in
in
xchg
shlb
rcrb
cltd
add
adc
cmp
or
dec
dec
rcll
xchg
cli
mov
ss
je
sbb
pop
ss
cltd
rcrb
sbb
adc
in
in
fwait
insb
add
adc
xchg
lock
in
in
mov
push
mov
add
push
cmp
add
xlat
add
fwait
adc
mov
fwait
push
cltd
adc
adc
adc
add
cltd
push
and
fwait
adc
adc
push
and
fs
push
ss
mov
cltd
adc
adc
push
cltd
adc
push
inc
cltd
adc
cli
gs
jne
aad
rcl
add
adc
adc
adc
add
pop
lea
dec
dec
pop
dec
rcrl
push
xchg
out
enter
out
scas
out
adc
xchg
in
sub
adc
in
in
cltd
inc
adc
adc
xor
fstps
mov
cli
pop
in
in
xchg
cmp
dec
mov
cltd
pop
adc
mov
cltd
pop
cmp
mov
addr16
mov
in
stc
ds
adc
sub
addr16
cli
insl
out
in
in
subl
data16
pop
ss
rcrl
in
xchg
outsb
and
adc
lahf
pop
ss
inc
push
mov
cli
xor
in
in
and
fwait
adc
pop
dec
rcrl
push
xchg
cli
mov
ss
cli
cltd
lret
ss
scas
hlt
xlat
adc
adc
xchg
cmc
add
in
in
mov
fwait
push
stc
adc
push
cltd
adc
pop
cltd
adc
pop
sbb
mov
dec
or
cltd
push
sub
setl
adc
lds
inc
or
adc
inc
sbb
lahf
dec
ss
xor
outsb
sbb
and
push
sbb
in
xchg
outsb
and
adc
lahf
pop
adc
push
ss
insl
out
in
cltd
push
and
rcrb
adc
lds
in
in
xchg
jl
sbb
je
lahf
pop
and
lahf
inc
and
cltd
xlat
call
xchg
outsb
adc
sbb
in
lea
add
push
ss
es
in
lcall
fwait
add
inc
cltd
adc
jp
sub
addr16
cltd
push
sub
jg
cltd
push
and
xlat
cltd
xlat
cli
in
cltd
push
and
sub
je
cltd
push
and
push
push
mov
push
or
push
cltd
push
cmp
mov
push
adc
mov
xchg
stc
in
in
stc
pop
cltd
push
ss
fwait
add
dec
dec
rcll
cltd
lret
lahf
mov
sub
adc
in
in
fwait
or
adc
xor
fwait
inc
and
cltd
push
and
sub
and
dec
cltd
lret
cltd
inc
ss
push
mov
ss
sbb
pop
sbb
adc
cli
pop
jmp
in
mov
sbb
pop
add
sar
jl
in
in
cltd
inc
add
inc
ss
fwait
inc
ss
xchg
jl
sbb
je
lahf
inc
and
stos
out
adc
cli
test
push
and
mov
xchg
sbb
cltd
rolb
push
and
inc
push
jbe
and
jp
xlat
adc
call
xchg
das
push
rclb
adc
lds
add
mov
in
in
mov
cli
push
ljmp
add
cmp
in
in
mov
cli
cmp
ljmp
dec
in
in
mov
adc
xchg
cmp
adc
mov
cltd
pop
push
adc
and
fwait
pop
nop
hlt
push
das
adc
adc
aad
out
add
adc
mov
cltd
push
out
fwait
inc
add
push
out
mov
fwait
adc
aam
adc
pop
scas
lds
add
xor
dec
dec
pop
jbe
add
or
adc
add
je
jp
lds
add
and
in
in
ret
sti
lods
or
adc
mull
dec
dec
rcll
ljmp
adc
adc
rolb
aam
adc
fs
and
xor
add
data16
xlat
adc
call
aam
scas
lds
add
mov
inc
cli
mov
in
in
and
mov
aam
add
fwait
inc
ljmp
add
cltd
inc
ljmp
imul
in
cltd
inc
ljmp
in
adc
cmp
fldt
add
cli
or
in
in
stos
hlt
xlat
adc
call
stos
xor
add
cli
sbb
in
in
mov
xlat
adc
mov
xchg
jge
adc
cltd
push
out
mov
mov
lds
add
sub
into
xlat
adc
fwait
push
out
subl
jne
and
pop
dec
dec
jbe
add
sbb
add
adc
data16
xlat
adc
cli
xor
lds
add
and
sti
test
leave
pop
dec
dec
rcll
sub
add
adc
or
mov
add
add
cltd
inc
add
push
mov
xchg
cli
adc
adc
insl
pop
sub
addr16
adc
sar
adc
and
fwait
pop
xor
pop
xchg
shrb
xchg
ret
call
adc
cltd
sbb
fwait
dec
xchg
out
adc
push
ss
push
ss
fwait
adc
push
mov
stc
sbb
push
cltd
add
cltd
inc
and
fwait
add
push
ss
push
push
dec
dec
pop
rcrl
cltd
int3
cltd
pop
xor
adc
fwait
adc
or
cmp
pusha
sbb
sub
pusha
sbb
fwait
add
cmp
addr16
pop
rcl
add
adc
add
and
mov
cltd
adc
rcrl
lret
push
lea
adc
adc
cltd
adc
aad
pop
adc
xchg
mov
cli
enter
dec
pop
rcll
cltd
lret
adc
adc
mov
dec
dec
ret
in
pop
mov
rclb
xchg
lock
in
in
insl
cmp
adc
cli
jmp
cltd
rclb
fadds
fwait
add
in
in
roll
cltd
fcoms
sbbb
in
ret
inc
inc
inc
mov
xchg
clc
add
add
add
xchg
xchg
stc
adc
adc
rcl
adc
push
adc
add
in
in
jg
rcrl
ret
in
jmp
aad
rcl
adc
pop
adc
add
adc
je
cltd
ret
push
cltd
jb
cmp
mov
ss
add
sub
data16
add
adc
adc
cltd
push
ss
adc
cltd
ret
dec
dec
dec
ret
inc
inc
inc
mov
and
mov
mov
or
out
in
ljmp
loop
lret
test
or
cltd
add
cli
in
std
in
in
cltd
add
cltd
push
or
loop
fcoms
dec
dec
pop
rcrl
inc
push
xchg
out
loopne
cli
xor
cltd
xlat
call
fwait
push
or
sbb
adc
push
cltd
cltd
inc
or
push
push
mov
lahf
push
cs
xchg
cli
push
insl
push
mov
cmp
mov
cmp
sub
outsl
push
cltd
push
or
adc
mov
cltd
aad
push
jmp
cltd
int3
cltd
les
add
sbb
in
cltd
cs
in
data16
xlat
cli
cmp
inc
sbb
sbb
push
push
cltd
aad
push
ss
cmp
sbb
cli
imul
mov
sbb
out
out
jmp
push
pop
dec
dec
dec
ret
inc
inc
xchg
out
enter
es
push
mov
cltd
add
adc
cmp
fwait
pop
sbb
adc
cltd
roll
rclb
sar
adc
add
inc
ss
subl
add
cltd
adc
cltd
push
mov
out
push
ss
adc
fwait
inc
add
push
mov
ss
adc
lcall
push
cltd
adc
push
ss
push
ss
fwait
push
push
cltd
push
and
inc
or
push
cltd
adc
fwait
add
push
ss
push
push
stc
inc
sub
outsb
pop
mov
cltd
aam
mov
in
call
add
add
fwait
push
and
cltd
push
and
add
add
cltd
push
and
cltd
adc
push
ss
push
ss
fwait
push
push
cltd
push
and
inc
or
push
cltd
adc
fwait
add
push
ss
push
push
xchg
or
dec
rcll
adc
adc
xchg
das
adc
adc
or
push
aad
rcl
adc
adc
cmp
sbb
cltd
adc
fwait
adc
adc
cli
or
shlb
and
mov
aam
add
cltd
rolb
adc
cltd
lock
cs
mov
out
call
lahf
pop
or
adc
call
cltd
dec
or
sar
push
cltd
adc
cli
or
adc
adc
loope
ss
cmp
popa
sbb
jle
in
call
push
push
mov
loop
adc
adc
add
inc
out
in
xchg
jge
push
cltd
adc
adc
aam
adc
dec
dec
pop
rcrl
clc
cltd
lret
lahf
push
push
call
xchg
cs
cltd
cli
inc
in
in
xchg
shlb
and
jmp
mov
rcll
ljmp
lea
ret
cli
jns
in
xchg
cs
sbb
in
in
xchg
shlb
sar
mov
pop
rcrl
xor
fwait
sbb
rclb
sar
adc
adc
adc
cltd
pop
push
adc
cltd
dec
xchg
out
or
push
das
add
adc
jne
cltd
adc
lahf
push
add
inc
push
xchg
out
lret
and
lods
add
adc
scas
adc
adc
mov
fwait
adc
push
sub
setl
adc
mov
sub
sbb
adc
mov
inc
add
add
push
sub
jg
cltd
add
push
sub
fwait
pop
stc
fs
sti
adc
adc
insl
sbb
ret
cli
dec
in
in
fwait
adc
sub
addr16
cltd
sar
in
in
in
in
test
sbb
rcrb
adc
adc
dec
add
cmp
xchg
outsl
add
outsl
sbb
dec
adc
rcrb
adc
fwait
push
ss
adc
cltd
ret
xchg
ficoml
mov
push
mov
cltd
push
and
xchg
rolb
push
call
mov
stc
add
cpuid
lds
add
imul
cltd
inc
or
ljmp
roll
jmp
cltd
enter
adc
mov
fwait
pop
cltd
adc
ret
fwait
push
ss
push
ss
xor
mov
push
and
cltd
roll
ss
fwait
add
rclb
mov
ss
add
xchg
stc
push
add
mov
push
and
push
pop
dec
dec
dec
ret
inc
cltd
incb
lret
mov
addr16
in
in
test
data16
insl
insb
sbb
rcrb
adc
adc
rclb
add
jbe
xor
xor
add
data16
xlat
add
cli
and
in
in
xchg
ret
adc
jmp
push
add
adc
add
adc
add
adc
adc
inc
ljmp
fwait
adc
adc
fwait
push
cltd
inc
in
xchg
xor
mov
cltd
push
push
fwait
inc
lock
inc
loop
inc
ljmp
adc
and
fwait
pop
nop
hlt
stc
xor
adc
cltd
pop
loop
pop
nop
out
push
ljmp
push
out
push
loop
inc
add
push
loop
inc
out
adc
cltd
inc
ljmp
mov
fwait
add
push
fwait
inc
out
in
pop
lods
xlat
adc
cmp
adc
cli
adc
add
sti
lahf
add
adc
sbb
insl
inc
cmp
xchg
das
push
adc
push
jge
adc
adc
adc
xor
mov
adc
mov
aam
add
or
adc
cltd
rcll
in
fwait
adc
add
push
out
call
mov
stc
add
cpuid
lds
add
movsl
add
adc
and
in
lcall
dec
dec
pop
jbe
add
adc
xchg
das
push
rclb
adc
lds
add
icebp
in
in
ret
sti
popf
add
adc
testl
inc
cltd
incb
lret
mov
xchg
das
scas
lds
add
jne
cli
enter
xchg
shlb
add
sbb
adc
aad
out
or
adc
jmp
and
inc
push
jbe
and
xchg
cmp
adc
push
cli
insl
in
fwait
dec
clc
cltd
push
ljmp
cltd
push
clc
cltd
or
ret
adc
pop
rcl
add
sbb
add
sti
xor
adc
in
or
cltd
shll
cld
in
in
insl
cmp
cmp
in
adc
push
clc
xchg
cli
push
mov
xchg
clc
push
outsb
adc
andb
add
sbb
adc
sti
repz
adc
fwait
push
loop
inc
lock
je
aad
rcl
add
adc
adc
rclb
adc
adc
cltd
inc
loop
push
clc
cltd
push
loop
mul
in
call
insl
cltd
inc
ljmp
inc
out
pop
sbb
adc
jne
cmp
sbb
adc
add
push
aam
add
add
adc
jle
cli
push
rcrb
adc
sti
adc
adc
mov
cld
in
in
insl
sub
outsl
or
pop
rol
adc
sbb
adc
stc
dec
cltd
push
out
sbb
stc
cmp
push
out
push
loop
inc
loop
push
adc
mov
xchg
cmp
sbb
sbb
outsl
or
pop
rol
adc
sbb
adc
stc
sbb
sbb
fcomps
in
lcall
cli
adc
in
in
mov
xlat
adc
mov
and
dec
dec
dec
fs
add
aaa
adc
subb
rolb
add
data16
xlat
add
cli
or
in
in
shr
stos
sbb
cltd
inc
out
dec
cltd
in
rcrl
push
xchg
out
enter
xchg
icebp
out
sub
outsl
add
adc
mov
ss
xor
insl
cltd
add
adc
mov
push
cmp
addr16
add
adc
repz
adc
push
ss
sub
cmp
or
adc
adc
push
adc
xchg
cmp
push
sbb
adc
aas
or
add
cmp
adc
adc
mov
sti
dec
add
adc
inc
ss
in
adc
mov
push
mov
sbb
jp
cltd
inc
ss
push
out
in
sub
outsb
and
fwait
push
and
xchg
filds
cltd
push
ss
cmp
rclb
push
imul
in
sti
movlps
adc
adc
cltd
sti
cmp
cltd
inc
ss
sub
addr16
cmp
insl
pop
cmp
adc
or
adc
xchg
cmp
push
outsl
or
adc
or
adc
adc
and
mov
aam
add
pop
mov
push
and
adc
add
adc
and
or
add
cli
nop
clc
in
in
cltd
add
adc
mov
push
mov
push
notb
adc
cltd
push
ss
push
or
js
cmp
insb
sbb
xlat
fwait
push
and
cmp
jmp
cltd
push
and
cli
insb
hlt
in
in
cmp
xchg
out
push
jl
cltd
push
and
rcrl
in
stc
pop
add
cltd
push
and
rcrl
inc
ss
xchg
and
stc
sub
adc
data16
out
in
ljmp
push
and
fwait
push
and
cltd
lds
adc
in
call
push
ss
fwait
push
and
sti
out
in
in
and
stc
setns
cmp
adc
cltd
push
mov
aaa
adc
adc
mov
mov
dec
pop
dec
dec
rcll
ljmp
xchg
das
scas
lds
add
jne
cli
adc
in
in
xchg
shlb
rcrb
adc
and
inc
push
jbe
and
xchg
cmp
adc
push
cli
mov
les
in
in
xchg
shlb
pop
out
stc
das
mov
cli
add
in
in
fwait
inc
ljmp
add
out
in
ljmp
cli
add
loop
add
adc
cltd
inc
ljmp
adc
mov
cli
cmp
in
cltd
inc
ljmp
pop
dec
jbe
adc
cmp
add
add
data16
xlat
adc
call
sar
clc
or
adc
in
push
out
pop
dec
dec
dec
pop
rcrl
cltd
fcoms
shr
adc
fwait
push
subl
adc
mov
adc
stc
pop
and
fwait
push
mov
ss
pop
rcrl
shlb
pop
cmp
xchg
leave
je
mov
adc
stc
adc
fistpl
sbb
shlb
inc
mov
in
pop
cmp
adc
pop
sbb
sbb
sti
xchg
add
adc
adc
sbb
addr16
mov
adc
xchg
shlb
fwait
ret
es
add
shlb
add
lahf
push
add
add
sbb
adc
ret
inc
inc
cltd
repnz
lret
insl
xchg
das
or
adc
add
cltd
cltd
shr
adc
xchg
leave
addr16
adc
adc
sbb
sbb
rcrb
adc
and
cwtl
ret
cltd
cli
lods
in
in
in
pop
dec
rcrl
mov
ss
test
inc
inc
inc
call
xchg
stos
push
add
adc
pop
dec
dec
addr16
and
jmp
rcrl
lret
cmp
add
adc
cli
add
in
cli
hlt
in
in
rcll
adc
cltd
cwtl
push
adc
add
inc
cmp
adc
rorb
cltd
rcrl
lahf
push
add
lret
inc
cli
mov
xchg
shlb
cli
lods
in
in
dec
rcll
fwait
lds
adc
sar
adc
repz
roll
dec
dec
rorl
outsb
sub
shr
push
out
loope
mov
xchg
repz
adc
movsb
out
dec
dec
ret
jae,pn
push
cs
rcll
cs
rcrl
rclb
adc
pop
sub
adc
mov
sti
cmc
add
adc
cltd
rolb
dec
push
je
jmp
pop
je
jmp
enter
lret
xor
stc
add
adc
das
loopne
adc
jne
and
jmp
test
xchg
cltd
ret
cli
in
in
cltd
rcrl
lahf
push
add
in
in
call
lahf
push
add
cltd
fsubs
in
mov
je
mov
das
mov
and
mov
shr
push
push
cltd
loop
in
adc
and
loop
mulb
cltd
cli
mov
in
stc
add
add
mov
cli
sub
pop
dec
rcrl
mov
sar
add
cltd
or
push
pop
je
cltd
pop
add
dec
push
cmp
sub
xchg
ret
loopw
adc
rclb
rolb
xchg
hlt
add
cwtl
or
sbb
pop
add
adc
dec
data16
add
and
dec
dec
rcrl
lret
adc
out
addr16
sti
add
stc
add
fldenv
sub
dec
dec
rcll
fistps
je
ficompl
push
loope
fwait
rcll
dec
rcll
sbbl
xchg
or
push
fwait
xchg
sbb
fwait
rorb
cltd
rolb
push
xchg
incb
mov
fwait
aam
and
cmp
stos
sbb
add
and
xor
in
adc
lcall
jecxz
imulb
aam
push
aas
push
mov
push
xchg
stc
in
adc
add
call
adc
sub
insb
adc
and
mov
lcall
or
dec
rcll
cli
test
in
rcrl
mov
inc
xchg
shlb
shlb
lods
int3
push
mov
xchg
sti
xor
mov
xchg
jmp
sti
cmp
sub
pop
xchg
jmp
jmp
sti
and
mov
xchg
sti
push
pop
sub
inc
xchg
leave
data16
push
xchg
xchg
jmp
xchg
jmp
clc
xor
add
cwtl
or
xchg
leave
addr16
fbld
xchg
shrb
stc
sbb
in
jle
push
pop
cmp
stc
inc
in
xlat
cwtl
push
push
stc
mov
cwtl
or
test
data16
jmp
stc
xor
sbb
stc
add
adc
sub
gs
loopne
adc
mov
xchg
in
int
adc
fmuls
in
and
pop
rcrl
fwait
fwait
lds
add
mov
pop
rcrl
adc
adc
cltd
rolb
test
outsb
pop
setbe
adc
adc
add
lahf
push
xchg
leave
mov
add
fcmovnbe
cli
add
xchg
lock
xchg
leave
mov
add
fcmovnbe
cli
add
jae
add
leave
mov
adc
push
in
das
add
adc
jge
fwait
rolb
or
push
sbb
adc
jmp
call
rclb
lahf
adc
leave
mov
adc
jmp
call
push
xchg
leave
lods
push
lds
jmp
iret
lret
adc
add
push
lret
cld
pop
rcll
adc
adc
adc
xchg
in
insl
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
call
adc
add
push
mov
adc
add
adc
push
rcrl
adc
adc
out
push
adc
add
adc
add
adc
add
scas
lods
sbb
adc
adc
cmp
push
push
add
adc
add
adc
add
push
movsl
inc
test
push
add
adc
adc
adc
add
cmp
test
adc
sub
mov
mov
add
adc
mov
push
adc
add
cmp
mov
adc
cmp
int3
cmp
adc
fwait
push
xor
cwtl
sub
add
jo
vpunpckhdq
jp
movsl
xor
lret
add
xchg
xchg
dec
push
adc
push
mov
fmulp
or
rorl
xchg
adc
jae
pop
xchg
inc
push
enter
mov
push
sub
lret
fmull
test
xchg
js
sub
sbb
mov
push
fistps
int
loopne
bound
xor
out
ja
sahf
cmpsl
bound
test
xlat
vphaddwq
rol
push
mov
mov
repnz
jmp
cmpl
movsb
adc
inc
daa
sub
push
xor
cs
incl
int3
stc
mov
js
sbb
xor
mov
loopne
cmp
rcrb
or
xor
add
icebp
push
pop
mov
loopne
push
loope
stc
repz
jp
fstl
mov
adc
cmp
push
mov
mov
icebp
mov
pop
push
addr16
xchg
fisttpl
divb
mov
dec
das
xlat
pop
sub
loop
xor
inc
movsl
sahf
and
lret
fwait
jmp
jne
loope
lods
mov
pop
iret
xchg
jl
test
cwtl
add
and
jl
add
in
aaa
inc
rclb
add
push
cli
cld
in
in
xchg
clc
adc
cli
lock
in
in
aaa
add
adc
cmp
adc
push
adc
jne
mov
rcll
out
mov
push
mov
add
out
push
js
js
jp
and
add
add
xchg
cli
leave
repnz
in
test
addr16
xor
inc
jp
and
add
jbe
xor
push
hlt
push
adc
add
push
ljmp
cmp
add
cltd
push
cld
inc
cli
mov
in
in
and
dec
dec
dec
fs
add
and
add
push
in
call
sti
mov
out
je
push
mov
shr
je
inc
ljmp
shlb
mov
add
inc
pop
push
push
inc
push
inc
inc
dec
push
jge
jle
jl
dec
push
ja
bound
pop
inc
inc
pop
add
dec
jae
jns
jae
adc
adc
leave
icebp
mov
aas
push
mov
add
cltd
rolb
mov
ss
add
dec
rcll
cltd
xor
cwtl
sbb
loope
dec
pop
rcrl
into
test
data16
inc
cltd
lret
cli
xor
adc
cli
cmp
in
in
mov
cltd
shr
dec
adc
add
cltd
rolb
mov
cli
mov
adc
cltd
ret
cli
pop
in
in
dec
rcll
adc
cltd
rclb
loop
pop
adc
add
mov
add
jbe
add
xchg
push
ret
cli
mov
add
xchg
sarb
push
nop
xchg
shlb
mov
inc
out
ret
inc
inc
inc
mov
fwait
lds
rolb
jmp
dec
xchg
repz
mov
cltd
dec
stos
xchg
cltd
pop
into
xchg
leave
je
cltd
or
ljmp
je
dec
cltd
or
add
jnp
fwait
es
xchg
rorl
dec
ljmp
aam
icebp
dec
pop
dec
rcrl
ret
fwait
aam
ss
inc
rorb
adc
add
adc
sti
dec
dec
ret
inc
inc
cltd
repnz
lret
popw
cltd
cltd
adc
inc
adc
adc
dec
dec
ret
mov
lahf
push
add
stc
add
xchg
in
je
sbb
aad
loopne
mov
jbe
xchg
in
icebp
dec
rcrl
sarb
enter
cld
dec
rcrl
add
ret
cltd
push
into
test
loopew
mov
in
in
add
lahf
push
add
lahf
push
add
lahf
push
add
xor
je
je
adc
popa
adc
adc
sub
decl
pop
mov
dec
in
loope
cltd
sbb
jae
rcll
shrb
inc
out
rcrb
cltd
or
aad
push
sub
adc
mov
jbe
sbb
pop
sar
sub
adc
cltd
inc
ss
inc
push
xchg
shlb
sbb
out
dec
cli
or
adc
call
rcrl
in
push
ljmp
mov
cltd
add
inc
negb
rclb
inc
mov
in
inc
call
xchg
das
xor
add
push
js
push
in
pop
push
rclb
rcll
adc
adc
inc
push
inc
js
push
jp
cli
lcall
adc
lahf
push
add
adc
jp
cli
lcall
adc
lahf
push
add
add
jbe
inc
inc
jmp
rcrl
sbb
sti
data16
sub
jne
sbb
stc
add
rcrl
mov
cmovb
cli
fucomp
in
inc
inc
push
js
push
in
pop
push
rclb
dec
pop
dec
dec
rcll
adc
adc
inc
inc
push
js
push
in
pop
push
rclb
dec
ret
inc
inc
xchg
cmp
adc
js
js
jp
call
adc
adc
pop
dec
rcrl
add
push
push
push
adc
adc
xchg
add
add
xchg
sub
call
or
cld
cli
mov
pop
adc
adc
test
sbb
adc
rclb
add
cltd
inc
and
cltd
pop
and
xchg
sub
call
cli
enter
xchg
cmp
adc
das
xor
and
inc
cli
in
in
sub
dec
setbe
rorb
pop
push
stc
xor
push
cltd
dec
push
xchg
das
and
adc
add
cmp
adc
push
lahf
push
or
inc
call
xchg
ljmp
xchg
pop
push
add
leave
push
inc
inc
jbe
or
push
inc
cltd
inc
and
js
push
jp
daa
add
inc
in
adc
cltd
outsb
ss
add
mov
mov
cltd
jge
cltd
dec
push
push
push
jle
adc
xchg
ret
pop
cli
je
in
in
in
jecxz
xor
add
cli
clc
push
adc
cltd
mov
adc
add
adc
add
out
in
ljmp
rcrl
add
inc
ss
push
push
push
adc
adc
pop
add
push
push
les
adc
push
inc
inc
inc
mov
xchg
rcll
push
in
in
in
rorl
dec
pop
stos
adc
add
rcrl
or
cli
mov
push
inc
inc
inc
push
inc
inc
inc
push
js
push
inc
in
aaa
adc
adc
ret
cltd
push
ss
push
push
aas
and
add
dec
or
add
adc
add
adc
add
xchg
sub
call
cltd
push
or
mov
pop
std
in
in
and
xchg
push
fs
add
add
dec
mov
rcrl
or
adc
adc
adc
adc
jmp
jbe
sub
rorb
fwait
sbb
cli
movsl
out
in
in
lock
and
cltd
dec
sbb
rcll
fwait
add
ret
rorb
rcrl
mov
cltd
add
adcb
shrb
je
das
pushf
add
shrb
inc
aas
add
dec
aas
xchg
add
adc
pop
pop
jmp
pop
arpl
in
sub
and
and
inc
cmp
insl
add
aas
adcl
dec
add
ss
sub
cmp
das
data16
mov
fucomi
xor
fucomip
xor
or
fsubr
add
enter
lret
jmp
mov
in
and
cltd
inc
push
call
dec
rclb
add
push
push
push
adc
adc
xchg
fwait
adc
adc
add
gs
inc
call
xchg
ljmp
push
out
cli
aad
in
in
mov
sbb
inc
jp
and
pop
or
adc
cltd
pop
ss
xchg
cmp
call
push
mov
sbb
add
adc
xchg
rcrb
in
fsubr
rclb
in
in
cltd
push
push
cli
mov
in
in
cltd
or
xchg
in
ret
cltd
dec
ss
stos
fsts
adc
mov
fwait
adc
sti
lods
add
adc
rcl
push
add
rcrb
jbe
adc
and
sbb
rcrl
mov
aam
add
cltd
sbb
enter
add
adc
cltd
sbb
cmp
addr16
adc
incb
inc
lods
and
adc
cltd
inc
sbb
dec
or
push
push
mov
and
inc
jp
cmp
add
and
and
fwait
dec
or
push
out
mov
push
mov
xchg
jge
adc
in
inc
ljmp
dec
dec
pop
jbe
add
push
sti
in
in
in
cli
mov
push
in
cli
aad
in
dec
dec
pop
dec
dec
dec
ret
inc
cltd
incb
inc
lods
and
adc
cltd
inc
sbb
and
leave
cltd
push
add
push
out
xor
inc
jp
sub
add
jbe
xor
loope
or
lret
ljmp
ljmp
cmp
insl
hlt
xor
dec
dec
pop
jbe
add
push
sti
xchg
sti
in
in
cli
xor
in
in
call
cli
inc
out
in
dec
dec
pop
dec
dec
dec
ret
aad
push
rclb
mov
adc
aad
or
adc
mov
sub
add
and
mov
fwait
pop
push
adc
cltd
inc
push
mov
rclb
cli
movsl
in
in
in
pop
rolb
add
cli
push
in
in
in
ret
inc
and
push
inc
cltd
sbb
push
push
mov
push
sbb
enter
adc
adc
pop
jne
dec
dec
pop
rcrl
leave
push
inc
cltd
sbb
push
push
mov
push
sbb
push
sbb
push
pop
addr16
dec
dec
dec
ret
inc
inc
inc
mov
mov
mov
adc
adc
cltd
in
xchg
ret
rorb
cltd
shrl
cltd
in
cltd
fcomps
leave
jne
mov
adc
cltd
ret
sbb
adc
xor
cwtl
lret
mov
or
call
addr16
dec
pop
dec
rcrl
add
in
or
push
lods
and
adc
cltd
pop
or
push
jmp
cltd
aaa
stos
sbb
add
loope
pop
dec
fcmovnbe
or
rcrl
inc
rclb
add
inc
je
das
or
add
mov
das
and
adc
add
adc
adc
incl
and
add
js
lea
push
push
js
jp
mov
add
cli
pop
in
in
inc
call
js
lahf
inc
ss
inc
push
jp
cmp
add
cli
and
in
inc
cli
dec
in
in
pop
rcll
add
add
jp
mov
add
mov
cli
push
in
dec
roll
in
in
in
call
adc
add
sbb
add
inc
push
inc
test
lods
inc
rclb
add
add
sub
add
xor
fwait
adc
push
ss
adc
subl
mov
add
adc
mov
and
in
in
and
mov
mov
add
sbb
das
adc
add
push
cli
or
in
in
xchg
jnp
adc
das
adc
xor
data16
aad
int
adc
mov
cltd
jne
sub
data16
call
cli
lods
out
in
xchg
imul
inc
ss
jnp
adc
cli
mov
in
xchg
sub
or
rclb
adc
data16
pop
rolb
add
inc
call
cltd
adc
or
adc
repz
jns
in
in
dec
pop
dec
dec
dec
ret
mov
mov
add
add
in
in
rcll
adc
sti
jmp
cltd
add
add
adc
add
add
lcall
or
push
clc
cli
and
in
dec
rcll
fwait
les
sbb
adc
add
adc
push
loop
pop
clc
sbb
cli
sbb
in
in
xchg
ret
push
pop
fimull
rcll
cltd
pop
ljmp
push
out
call
fwait
rorb
cltd
pop
out
call
dec
dec
stc
add
in
push
clc
xchg
add
dec
ljmp
clc
sbb
cli
lods
in
in
in
rcll
cltd
pop
ljmp
ljmp
cltd
pop
ljmp
ljmp
xchg
in
call
lahf
push
add
xchg
rorb
xchg
repnz
push
cli
pop
in
dec
je
push
adc
add
xchg
rorb
dec
fwait
inc
cld
aad
ljmp
rcl
nop
inc
inc
inc
mov
fwait
les
in
in
lcall
in
or
cltd
in
fwait
lret
in
in
lcall
rcrl
push
js
push
inc
cltd
push
or
js
mov
xlat
add
inc
cli
movsl
in
in
pop
rclb
adc
xchg
push
lock
in
inc
adc
cltd
icebp
fwait
push
ss
xchg
in
sbb
in
stc
dec
lahf
outsb
adc
adc
inc
lahf
inc
sbb
lcall
in
in
lcall
sbb
cltd
cltd
fsqrt
pop
in
in
in
jmp
cltd
iret
add
cltd
aad
sar
add
adc
cltd
pop
and
cltd
shr
in
in
lcall
adc
fistpl
pop
push
add
xchg
add
adc
pop
dec
dec
dec
ret
inc
fwait
lock
cli
add
rcll
xor
sbb
cmp
adc
pop
adc
pop
add
xchg
ret
cli
inc
push
push
fwait
rorl
ret
jmp
rcrl
xchg
shlb
inc
sub
data16
add
je
pop
push
pushw
je
pop
push
popw
xchg
ret
testb
xchg
rolb
fwait
ret
dec
sub
ret
sti
jmp
rcrl
cwtl
or
mov
in
in
rcll
lds
shl
mov
dec
adc
dec
dec
sti
test
in
in
ret
and
xchg
shlb
cltd
dec
out
ret
sti
jmp
rcrl
add
shlb
sbb
std
in
in
inc
push
inc
fwait
rorl
cltd
inc
out
add
sub
je
cli
dec
add
adc
mov
adc
call
dec
dec
dec
ret
cli
push
adc
adc
cli
ret
xchg
shlb
fistpl
ljmp
add
sub
pushw
inc
inc
cli
insl
out
in
in
pop
dec
sti
mov
in
in
inc
push
inc
fwait
rorl
adc
shr
in
fwait
aad
rcrb
cli
stc
in
in
mov
fwait
loop
pop
out
adc
cli
insb
jmp
in
dec
mov
xchg
in
je
in
pop
clc
cli
xor
dec
pop
rcrl
in
lcall
in
in
ret
inc
inc
inc
push
inc
fwait
shll
cltd
pop
xchg
push
xchg
sbb
fisttpll
adc
rorb
add
sub
adc
lcall
incb
rcrb
out
call
cltd
cs
sbb
xor
in
in
push
fwait
aam
inc
mov
fwait
repnz
shlb
cltd
pop
out
add
cli
loopne
in
in
pop
jne
dec
dec
test
addr16
test
adc
pop
ljmp
dec
dec
dec
pop
lahf
ss
repnz
mov
fwait
lds
ret
adc
adc
in
data16
push
out
cltd
push
out
cmp
ja
adc
push
sar
adc
sbb
or
pop
adc
push
mov
sub
addr16
xchg
sbb
lock
xchg
aam
xchg
aad
pop
xchg
lock
sbb
or
pop
popw
sub
cmp
add
adc
adc
lret
addr16
mov
cmp
stc
push
cltd
inc
out
cmp
jmp
dec
sub
add
std
addr16
shr
add
stc
adc
lret
add
out
dec
pop
dec
rcrl
or
push
loop
push
ljmp
rcll
stos
sbb
add
cltd
add
dec
ljmp
mov
cli
and
in
in
mov
cltd
adc
out
cli
clc
jmp
pop
ljmp
ljmp
cli
in
in
mov
dec
fwait
rcl
lahf
push
add
movsl
in
in
rcrl
in
rcrl
je
cltd
dec
cld
xchg
leave
es
outsb
or
enter
rcll
jg
adc
mov
sbb
cli
jmp
and
stc
negl
inc
ss
in
in
in
pop
rclb
adc
inc
inc
inc
mov
fwait
les
in
in
cltd
adc
pop
out
dec
outsb
cmp
into
outsl
xor
ljmp
icebp
sub
insb
add
loopne
add
cli
push
jmp
fwait
lret
out
cmp
call
dec
dec
dec
ret
xchg
shlb
inc
inc
inc
push
fwait
rcrl
adc
shlb
cld
pop
outsl
adc
in
sub
jle
fwait
lds
adc
cli
jne
adc
pop
sub
add
push
lahf
push
cmp
rcll
rclb
clc
cli
stc
cli
in
fwait
lret
fwait
sti
add
cli
int3
call
dec
dec
rcll
xchg
shlb
inc
inc
mov
fwait
lds
inc
out
pop
js
cwtl
adc
cmp
insb
adc
mov
inc
push
fwait
ret
loope
dec
dec
data16
lret
stc
in
dec
and
jmp
and
ret
dec
fwait
ljmp
lahf
push
add
inc
mov
fwait
les
in
xchg
sarb
adc
push
adc
xchg
cli
or
repnz
inc
cmc
in
in
pop
xchg
rcrb
mov
fwait
cld
aam
adc
stc
cmp
in
fwait
aad
adc
call
icebp
outsb
adc
in
fwait
lret
jmp
lcall
rcrl
movsl
cmc
in
in
ret
cltd
add
add
adc
add
cli
gs
in
pop
rcrl
fwait
ret
fwait
les
or
adc
add
adc
pop
fucomp
call
cli
dec
pop
rcrl
sbb
lcall
sbb
in
push
inc
inc
cli
sbb
in
in
test
sbb
in
ret
and
inc
mov
inc
push
fwait
rcrl
jl
adc
push
cltd
push
push
add
cltd
add
cli
xor
aam
pop
insl
cmc
mov
dec
dec
pop
rcrl
add
adc
adc
ret
mov
in
in
ret
xchg
jmp
setbe
adc
adc
push
inc
fwait
rorl
rcrb
or
or
cs
inc
cs
fs
adc
adc
xchg
adc
adc
insl
sbb
ljmp
add
in
in
jmp
xchg
jmp
mov
insl
adc
stc
gs
lret
in
in
stc
jl
lret
adc
jne
in
pop
insl
repz
dec
inc
mov
cltd
inc
sbb
adc
add
jo
in
in
pop
jg
dec
stc
inc
inc
fwait
mov
adc
adc
in
lcall
loop
stc
cmp
call
pop
insl
loope
push
fwait
lret
xchg
roll
jge
add
pop
insl
icebp
stc
sbb
dec
dec
mov
in
dec
dec
pop
dec
rcrl
mov
adc
adc
ret
mov
in
in
ret
inc
inc
inc
push
fwait
rcrl
inc
adc
jge
and
cltd
dec
ljmp
jle
fwait
rolb
loop
enter
in
lcall
cltd
add
and
sub
dec
xchg
jmp
je
xchg
jmp
bound
adcb
adc
lcall
pop
dec
dec
sti
mov
in
in
mov
and
fdivr
movsl
in
in
stos
push
add
adc
jge
push
and
lret
in
in
stos
add
adc
jmp
lahf
push
xor
lret
in
in
in
mov
stc
dec
and
cwtl
pop
adc
add
jmp
adc
pop
add
mov
lahf
push
xor
lret
adc
adc
sub
leave
cwtl
pop
adc
fwait
ret
lahf
adc
adc
call
dec
stc
xor
cli
icebp
push
add
stos
push
add
adc
adc
adc
call
stos
push
adc
adc
push
add
aad
dec
sbb
in
dec
sub
insb
sbb
cli
dec
idiv
in
dec
dec
pop
dec
rcrl
push
fwait
rcrl
insb
ss
cwtl
setb
sbb
jmp
push
xchg
stc
push
inc
sub
popaw
xchg
jmp
je
xchg
jmp
sbb
adc
pushf
adc
adc
dec
sti
and
in
fcomps
in
in
adc
xchg
push
pop
addr16
sti
pushf
adc
adc
sbb
in
in
xchg
ret
push
xchg
aam
pop
addr16
jmp
fwait
lret
cli
inc
in
in
xchg
ret
add
cld
jmp
and
mov
lahf
jl
adc
dec
sbb
gs
jno
in
adc
ljmp
fwait
stc
cli
and
in
and
mov
adc
adc
pop
jne
stc
cmp
into
sbb
add
push
pop
jne
stc
push
mov
cltd
add
jmp
insb
add
push
xchg
aam
pop
addr16
pop
dec
dec
dec
ret
rcll
icebp
in
in
ret
inc
inc
cltd
inc
ss
and
fwait
rorl
jbe
push
add
cltd
push
and
jbe
or
fmuls
rcrb
adc
inc
inc
inc
push
and
cltd
pop
ss
cltd
dec
or
leave
sbb
shlb
sbb
dec
sbb
imul
lret
adc
imul
lret
in
xchg
lret
adc
stos
push
adc
adc
jmp
in
loopne
rol
ret
lds
out
pusha
sbb
sub
pusha
add
push
lock
pop
in
adc
adc
popw
in
in
xchg
enter
dec
dec
ret
in
and
stc
repz
inc
push
and
cltd
pop
ss
cltd
dec
or
leave
sbb
shlb
sbb
dec
sbb
imul
lret
adc
imul
lret
in
xchg
lret
adc
adc
inc
xor
and
shl
ret
rcl
ret
lds
std
pusha
sbb
sub
jb
cmp
sbb
push
lock
loop
cli
dec
in
add
adc
je
in
test
dec
dec
pop
rcrb
adc
loope
and
stc
loopne
nop
inc
inc
inc
push
xchg
decb
scas
adc
add
and
push
sbb
adc
adc
push
ss
add
adc
test
sbb
fwait
sub
repz
adc
jl
in
xor
push
and
adc
sub
add
inc
stc
pop
sub
push
mov
xchg
outsb
cs
data16
or
in
cs
je
xchg
outsb
cs
and
add
icebp
in
ljmp
dec
sbb
add
adc
cwtl
pop
cs
cltd
roll
sbb
push
jmp
adc
pop
add
ds
push
stc
push
call
adc
cmp
stc
sbb
adc
add
cltd
jmp
cmc
in
adc
adc
ss
sbb
sbb
pusha
push
stc
add
xchg
jl
push
in
in
sbb
ss
fs
jmp
insl
cmp
aad
inc
push
cltd
push
adc
mov
add
repnz
add
add
xchg
les
fwait
push
and
fwait
inc
and
push
and
sti
jle
in
xchg
outsb
and
adc
add
inc
ss
lret
adc
enter
sbb
mov
push
cmp
push
ret
popa
dec
sbb
cmp
xchg
jl
push
adc
xchg
outsb
and
adc
stc
adc
xchg
outsb
ss
or
push
xchg
jl
sbb
int3
fs
cmp
js
cltd
push
adc
pop
out
in
inc
inc
mov
mov
add
add
push
xchg
or
inc
ss
and
jmp
xchg
outsb
and
adc
cltd
push
or
lret
adc
enter
sbb
outsb
ss
add
xchg
jl
sbb
je
xchg
outsb
and
adc
xchg
outsb
or
sbb
sbb
and
adc
outsb
cmp
adc
popw
cltd
push
mov
stc
adc
rcrb
sbb
les
dec
dec
pop
dec
rcrl
add
loope
in
pop
rcll
addr16
test
rclb
adc
in
rcrl
add
rcrl
adc
inc
push
inc
fwait
pop
hlt
fwait
inc
ljmp
cltd
adc
sbb
or
push
cli
sub
in
in
cltd
inc
out
cltd
inc
clc
cli
lods
in
in
sti
jno
adc
and
xchg
outsl
cli
add
xchg
insl
cli
push
cltd
inc
cli
cltd
sub
push
ljmp
ljmp
mov
xchg
shlb
cltd
add
and
mov
cltd
ret
in
fwait
inc
cltd
push
in
mov
jmp
mov
cli
int3
fucomip
in
xchg
inc
sbb
or
adc
cltd
push
cli
mov
sub
insb
or
sbb
sbb
add
cltd
fstps
in
in
lahf
push
in
inc
call
cltd
push
testb
push
cli
lcall
cltd
push
in
cli
cltd
int3
in
fwait
push
call
dec
loop
add
ljmp
sbb
cli
xchg
rcrb
fucomi
jle
in
lcall
inc
out
mov
cltd
push
call
pop
ljmp
add
pop
lock
cli
xchg
ret
push
cld
cltd
adc
lods
int
in
mov
aad
adc
adc
xchg
push
cli
add
push
cli
mov
xchg
push
call
lds
sbb
call
repz
in
subl
jle
xchg
push
or
in
pop
hlt
pop
xchg
leave
jl
push
and
cltd
push
sbb
push
cli
lea
mov
inc
clc
cli
jns
in
push
pop
jne
cltd
push
cld
cltd
inc
cli
mov
dec
dec
pop
cltd
testl
inc
xchg
push
and
cli
pop
in
in
rcll
and
add
adc
add
in
pop
clc
addr16
fisttpl
add
shlb
cltd
dec
out
xchg
add
sahf
in
call
iret
in
decl
cltd
rolb
test
pushw
lock
push
ljmp
pop
ljmp
in
push
clc
cli
mov
in
dec
dec
mov
dec
rcll
ljmp
jnp
adc
jp
adc
adc
cltd
inc
push
inc
cli
xchg
xlat
in
in
mov
mov
adc
cltd
loop
jae
xchg
in
adc
push
add
push
add
sbb
adc
dec
dec
rcll
cltd
lret
mov
mov
add
sub
data16
adc
dec
or
cltd
push
sub
jne
cltd
adc
lcall
or
fwait
adc
adc
mov
cltd
aad
dec
dec
dec
ret
inc
cltd
push
inc
inc
lahf
jne
fwait
adc
sbb
in
fwait
adc
adc
or
dec
addr16
dec
dec
rcll
mov
in
inc
inc
push
fwait
inc
ljmp
fwait
push
hlt
jp
pop
add
cli
int3
in
in
cltd
lock
in
inc
jp
pop
add
inc
cli
aad
in
in
mov
xchg
jge
adc
jp
adc
adc
in
push
cltd
push
out
push
in
inc
cli
test
or
xchg
mov
in
inc
cltd
inc
out
inc
cli
leave
in
in
jmp
cltd
push
out
subb
addr16
cltd
push
out
subb
seta
push
cld
xchg
rclb
call
fwait
push
loop
push
loop
cmp
sbb
adc
and
in
lcall
loop
cmp
sbb
adc
sbb
adc
loop
dec
cld
lahf
push
adc
push
out
push
lahf
xchg
mov
in
in
inc
call
sti
mov
push
lock
cli
cld
in
in
fwait
inc
cltd
outsl
in
cmp
mov
adc
inc
das
pop
adc
adc
adc
cltd
push
lock
lahf
xchg
movsl
out
in
in
add
inc
cli
sbb
xchg
mov
lahf
test
cli
mov
lock
in
in
je
inc
cli
xchg
shr
in
lea
inc
cli
stc
shr
in
lea
adc
push
das
pop
add
adc
aam
shld
in
in
pop
stos
pop
adc
adc
rorl
lahf
xchg
in
in
in
push
lahf
xchg
mov
in
in
adc
push
inc
cli
mov
xchg
in
in
inc
cli
mov
adc
cltd
inc
fwait
push
lock
push
loop
sub
sbb
lcall
xchg
mov
in
in
inc
mov
inc
call
cltd
push
out
dec
dec
cltd
in
rcll
add
pusha
outsb
ja
and
cmp
jle
adc
adc
push
ja
dec
jge
jne
jae
jp
jae
ja
adc
adc
inc
cltd
incb
in
inc
fwait
inc
out
jp
add
adc
incl
adc
adc
in
call
push
cld
add
or
movlps
push
jp
adc
xchg
cli
and
in
in
xchg
shlb
inc
ljmp
push
jp
push
adc
jp
adc
xchg
call
xchg
shlb
lahf
push
ljmp
js
push
jp
adc
xchg
cli
in
in
in
xchg
rcrb
and
inc
jp
dec
adc
jbe
and
and
push
cli
add
xchg
int
in
test
add
adc
sub
cli
inc
lea
inc
push
js
lea
inc
cltd
inc
ljmp
test
data16
push
cld
inc
push
js
push
cltd
push
ljmp
xchg
shlb
push
out
adc
push
repnz
rcrb
dec
jbe
add
dec
adc
cltd
inc
ljmp
ret
sti
test
in
stc
std
push
cltd
push
out
push
lahf
xchg
int
in
in
inc
call
js
lahf
inc
loope
js
cli
add
in
inc
cli
in
in
in
xor
xchg
scas
fucomip
in
in
add
adc
or
xchg
sti
add
adc
incl
adc
in
in
lahf
xchg
int
in
call
rcrb
lcall
cltd
inc
notb
lahf
test
in
in
ljmp
push
divb
lahf
xchg
fucomip
in
in
cmp
sbb
add
push
testb
cltd
inc
in
ret
adc
adc
rolb
inc
cld
inc
cltd
inc
testb
shr
in
push
js
lea
inc
cli
test
in
in
mov
xchg
leave
jne
xchg
outsl
repz
lea
cltd
inc
in
ret
adc
adc
rolb
inc
loope
cltd
inc
testb
shr
in
push
js
lea
inc
cli
dec
shr
in
mov
xchg
leave
jne
aam
cmc
adc
in
mov
cmp
stos
pop
adc
adc
rclb
push
loope
cltd
push
notb
cmp
adc
lahf
xchg
fucomip
in
in
push
cli
sbb
lret
dec
cltd
in
rcll
add
je
gs
gs
push
jge
jle
jl
dec
pop
jge
jae
ja
adc
adc
inc
jge
je
jae
gs
push
jge
jle
jl
dec
push
ja
bound
pop
pop
jge
popa
jle
popa
add
adc
add
incb
inc
fwait
push
cld
mov
mov
add
ljmp
jp
push
adc
jbe
and
and
out
in
push
push
and
pop
dec
dec
jbe
add
sbb
mov
cltd
idiv
in
cltd
push
clc
cltd
adc
clc
adc
pop
dec
dec
dec
pop
dec
rcrl
mov
mov
mov
add
cltd
rolb
adc
fwait
inc
out
and
push
jp
inc
add
jbe
xor
xor
push
cli
pusha
in
in
and
dec
dec
dec
fs
add
inc
adc
mov
sub
addr16
cltd
inc
out
cltd
adc
stc
and
mov
xchg
jge
adc
cltd
push
ljmp
push
cltd
inc
out
cltd
adc
stc
sbb
inc
ljmp
jge
adc
sar
and
in
in
stc
scas
dec
dec
dec
ret
cltd
add
add
adc
add
cltd
add
inc
sbb
lahf
push
add
inc
cltd
add
inc
add
cltd
sbb
adc
cltd
add
inc
or
cltd
sbb
adc
adc
inc
sbb
inc
cltd
push
cltd
push
sbb
pop
es
add
out
pop
dec
rcrl
mov
xchg
shlb
rorb
adc
dec
rcrl
les
loop
incl
loopne
lret
je
xchg
imul
cmp
add
adc
cltd
push
push
push
cltd
adc
in
inc
cli
xor
cltd
mov
cli
je
in
in
stc
or
cli
push
jmp
in
xchg
les
add
add
nop
inc
cltd
incb
rcrb
push
jbe
and
js
lahf
inc
out
jp
add
adc
lods
lods
in
in
lea
lahf
push
out
adc
jns
in
in
mov
lahf
push
out
cli
cld
fldln2
in
cltd
fcoms
adc
rorb
dec
jbe
adc
inc
add
lahf
push
lock
jmp
sti
cmc
lock
in
jmp
cltd
rcrl
testl
rolb
repnz
adc
fs
and
xor
pop
mov
adc
jne
stos
pop
rclb
cli
sub
push
rclb
adc
xor
in
stos
bnd
adc
cli
sbb
in
in
call
and
dec
pop
dec
jbe
adc
inc
add
sar
popf
lock
in
jmp
dec
rcll
adc
adc
xchg
xlat
adc
adc
pop
or
adc
add
pop
push
rclb
mov
adc
aad
or
adc
mov
pop
push
rclb
adc
pop
adc
add
ficoms
add
sbb
in
in
xchg
shlb
xor
in
in
call
je
pop
dec
rclb
add
or
adc
mov
not
add
mov
in
pushl
cli
cmp
rclb
add
or
add
xchg
sub
lods
in
aaa
in
add
adc
push
fs
pop
stos
lds
add
add
adc
and
cltd
scas
in
cli
xchg
in
in
mov
xlat
adc
jmp
cli
push
jne
in
in
mov
cli
shrl
rclb
rcll
adc
cltd
shr
lcall
aaa
xchg
rclb
add
rclb
add
fadds
push
call
fwait
push
mov
ss
pop
rcrl
adc
adc
cltd
rolb
icebp
in
in
in
mov
xchg
leave
je
xchg
das
xchg
mov
add
sbb
adc
call
cltd
sar
mov
push
ss
cmp
adc
stos
lock
adc
sub
in
in
stc
setns
ss
mov
mov
add
in
in
in
pop
dec
rcrl
adc
mov
mov
add
pop
add
adc
xchg
in
in
in
mov
inc
cli
inc
in
in
xchg
shlb
mov
roll
inc
in
in
in
test
leavew
ret
stos
mov
cld
in
in
rcll
shlb
js
cli
add
in
mov
adc
mov
aam
add
and
mov
mov
add
shlb
cli
shr
in
mov
cltd
sar
or
rcrl
xor
inc
jp
inc
adc
fs
and
xor
pop
fs
add
rorb
pop
jbe
add
inc
adc
sar
push
clc
dec
rcrl
adc
adc
inc
cltd
xor
inc
jp
inc
adc
fs
and
xor
pop
insb
aam
add
rorb
pop
jbe
add
inc
adc
sar
push
loopne
in
stc
clc
dec
rcrl
adc
adc
in
aaa
fcmovbe
adc
cltd
shr
fcmovbe
adc
cltd
shr
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
mov
inc
subl
sbb
push
xchg
loopne
inc
cltd
inc
sbb
fucomp
in
in
pop
rcrb
adc
adc
cltd
shr
ljmp
aaa
out
adc
cltd
shr
loop
adc
cltd
shr
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rcll
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
rclb
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
iret
in
in
rcll
ret
ret
inc
cltd
xor
inc
jp
dec
adc
fs
and
xor
pop
jo
adc
xor
dec
dec
pop
jbe
add
dec
adc
sar
mov
in
in
stc
clc
dec
rcrl
adc
adc
jb
adc
loop
adc
jb
adc
jecxz
adc
jb
adc
loopne
adc
jb
adc
loope
adc
jb
adc
out
adc
jb
adc
out
adc
jb
adc
in
adc
jb
adc
in
adc
jb
adc
ljmp
adc
in
adc
jb
adc
call
aam
adc
in
adc
jb
adc
out
in
adc
jb
adc
out
in
adc
jb
adc
in
in
adc
jb
adc
in
in
adc
jb
adc
repnz
adc
jb
adc
repz
adc
jb
adc
lock
adc
jb
adc
icebp
in
adc
jb
adc
imul
adc
jb
adc
imul
adc
jb
adc
hlt
in
adc
jb
adc
cmc
in
adc
jb
adc
cli
in
adc
jb
adc
sti
in
adc
jb
adc
clc
in
adc
jb
adc
stc
in
adc
jb
adc
in
adc
jb
adc
in
adc
jb
adc
cld
in
adc
jb
adc
std
in
adc
jb
adc
ret
add
adc
ret
in
adc
jb
adc
shr
add
adc
shr
add
adc
in
adc
jb
adc
in
adc
jb
adc
in
adc
jb
adc
add
adc
lret
add
adc
lret
in
adc
jb
adc
enter
jb
adc
leave
in
adc
jb
adc
into
in
adc
jb
adc
iret
in
adc
jb
adc
int3
in
adc
jb
adc
int
adc
jb
adc
shr
adc
jb
adc
shr
adc
jb
adc
shr
adc
jb
adc
shr
adc
jb
adc
in
adc
jb
adc
xlat
in
adc
jb
adc
aam
adc
jb
adc
aad
adc
jb
adc
adc
jb
adc
fucomi
adc
jb
adc
fsubr
adc
jb
adc
fldln2
adc
jb
adc
fsubrp
adc
jb
adc
fucomip
adc
jb
adc
fsubr
adc
jb
adc
fucomp
adc
jb
adc
mov
aam
adc
aam
adc
aam
adc
aam
adc
aam
adc
aam
adc
adc
movsl
in
adc
jb
adc
stos
in
adc
jb
adc
stos
in
adc
jb
adc
test
adc
jb
adc
test
aam
adc
aam
adc
aam
adc
adc
lods
in
adc
inc
cltd
xor
inc
jp
dec
adc
fs
and
xor
pop
je
adc
xor
dec
dec
pop
jbe
add
dec
adc
sar
clc
xlat
in
in
stc
clc
dec
rcrl
adc
adc
push
dec
adc
adc
adc
adc
adc
push
dec
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
push
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
adc
adc
adc
adc
adc
add
add
adc
inc
push
ja
data16
outsb
jle
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jle
adc
add
adc
stos
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
mov
adc
fisubl
adc
sbb
pop
gs
push
js
ja
je
jge
nop
fimull
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
fimull
add
adc
xor
and
adc
and
adc
and
adc
and
adc
and
adc
adc
mov
adc
fisubl
adc
push
push
pop
jne
pop
je
ja
jge
imul
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
dec
adc
add
adc
stos
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
pop
outsb
pop
addr16
pusha
pusha
jge
outsb
dec
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
outsb
dec
adc
add
adc
stos
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
push
js
ja
outsb
jae
cltd
rol
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
dec
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
push
js
ja
outsb
jae
push
js
ja
je
jge
nop
es
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jb
adc
adc
add
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
pop
outsb
push
pusha
jb
pusha
cltd
rcrb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sahf
jb
adc
adc
add
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
push
imul
nop
divb
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jb
adc
adc
add
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
inc
popa
jl
ja
pusha
pusha
jge
jae,pn
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jae
adc
adc
add
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
pop
outsb
pop
fs
je
outsl
gs
push
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
pop
popa
data16
jb
jge
nop
loop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
loop
adc
add
adc
pop
jae
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
pop
outsb
fs
imul
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pop
jo
adc
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
dec
gs
jge
imul
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
pop
jbe
pusha
je
jge
cltd
shr
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
ljmp
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
inc
outsb
jbe
pusha
data16
gs
inc
jno
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
xor
and
adc
and
adc
and
adc
and
adc
and
adc
adc
mov
adc
fisubl
adc
sbb
jae
imul
ja
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
pop
outsb
fs
imul
push
add
jbe
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jbe
adc
adc
add
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
push
outsl
jl
ja
push
pusha
jb
pusha
cltd
shlb
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
push
arpl
popa
jae
jnp
insb
jae
jnp
jl
push
add
jbe
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jbe
adc
adc
add
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
inc
jb
fs
ja
ja
push
ja
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ja
adc
adc
add
dec
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
inc
je
jno
dec
fs
data16
gs
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
push
outsl
jl
pusha
outsl
jle
cltd
rol
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
ret
adc
adc
add
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
inc
popa
pusha
jnp
outsb
push
pusha
jb
pusha
cltd
sarb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
je,pt
adc
adc
add
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
push
jae
ja
je
jge
inc
jae
jle
jbe
push
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
bound
pusha
popa
jno
push
jb
jge
nop
cli
je
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
je
adc
adc
add
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
pop
outsb
data16
popa
popa
push
jb
jge
nop
push
jne
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
push
adc
add
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
push
inc
popa
je
jno
jle
push
js
ja
je
jge
nop
dec
jne
adc
adc
es
adc
adc
add
add
add
add
add
inc
jns
inc
imul
xchg
jne
adc
adc
es
adc
adc
add
add
add
add
add
inc
jns
inc
imul
in
in
in
call
adc
add
adc
add
inc
mov
cltd
loopne
lret
mov
mov
adc
cli
pop
add
adc
adc
in
in
dec
pop
dec
rcrl
pop
sbb
imul
lret
adc
adc
adc
stos
or
adc
push
inc
and
mul
pop
xchg
ret
call
ret
add
shlb
pop
dec
cmp
sub
add
ret
mov
adc
call
stos
sbb
add
in
add
adc
andb
jo
in
and
xchg
inc
ss
in
and
cli
sbb
adc
aam
in
aas
pop
inc
xchg
sbb
inc
xchg
incb
outsb
ss
cs
push
add
fwait
push
and
cli
in
push
adc
add
push
in
xor
in
in
jg
in
in
ljmp
in
in
in
int
ss
sub
lret
rcll
int
int
ss
pop
lret
clc
int
ss
cwtl
push
and
and
cmp
push
pop
lcall
fcomip
mov
lret
jle
add
iret
rcr
ror
rcrb
jecxz
lret
cmp
mov
adc
cli
lcall
ficompl
in
in
subl
adc
rcrl
rcrl
call
adc
add
adc
add
in
in
call
adc
add
and
add
inc
push
cltd
loopne
fcomps
in
in
mov
cltd
shr
test
lcall
insb
cmp
leave
pushw
mov
cltd
push
and
adc
adc
lds
adc
add
pop
dec
xchg
in
insl
xlat
cltd
aad
pop
dec
dec
rcll
call
stos
mov
add
popf
in
in
in
mov
inc
lahf
push
adc
cltd
ret
cli
cmc
in
dec
dec
pop
rcll
adc
in
in
in
call
adc
add
adc
inc
cltd
incb
push
sbb
inc
idiv
pop
xor
fwait
push
in
push
loop
lahf
push
out
lahf
push
ljmp
push
notb
sbb
lret
out
in
ljmp
push
cltd
push
hlt
and
inc
push
cltd
push
cli
mov
cli
loope
in
in
mov
fwait
add
loop
rolb
cltd
inc
cli
cltd
inc
in
cli
aad
in
cltd
pop
adc
cltd
rcrl
testl
fwait
call
in
in
and
repnz
in
cmp
fwait
kmovb
push
and
cli
cld
mov
ss
rcll
aam
lds
repnz
fstps
cli
fwait
lret
shr
adc
mov
lret
xchg
repz
mov
mov
dec
dec
pop
rcrl
inc
mov
fwait
aam
fldenv
rorb
repnz
fwait
lds
shl
je
cwtl
push
ljmp
jae
push
cs
cwtl
push
in
xchg
call
cli
push
xor
shlb
dec
pop
dec
rcrl
mov
stc
push
test
addr16
rcrb
adc
ret
mov
dec
rcll
lret
cltd
loopne
clc
xchg
jmp
or
rcrl
aam
decb
adc
adc
pop
cltd
mov
cltd
call
aam
push
add
xor
inc
ss
inc
xor
adc
and
cli
imul
sub
dec
ret
inc
cltd
pop
inc
mov
adc
cltd
orps
in
rorl
add
pop
lods
in
in
pop
rcrl
lret
cli
cmp
in
in
dec
ret
inc
cltd
incb
leave
fwait
dec
in
inc
inc
inc
mov
fdivl
rcrb
add
fwait
push
out
push
loop
inc
sbb
je
sub
je
mov
mov
clc
cmp
jmp
sub
repnz
je
lahf
dec
fwait
dec
cli
mov
cs
data16
mov
add
sub
fwait
dec
out
fsubl
lods
stc
repz
pop
repnz
cs
into
data16
mov
add
lret
cli
xchg
add
dec
cltd
pop
repnz
jae
and
subb
jne
cmp
jae
adc
xor
loope
xchg
cmp
jae
adc
xor
mov
lret
sub
popa
push
add
and
repz
outsl
lock
push
lahf
push
loop
push
in
in
decl
cltd
jne
sti
push
in
in
and
cmp
and
sub
jnp
sbb
adc
xor
sub
je
mov
and
in
in
cltd
inc
out
push
or
in
inc
out
dec
or
outsb
roll
cltd
push
ret
data16
fldt
fsubl
mov
shrl
mov
sub
insl
dec
call
cltd
jne
lahf
ficomps
push
in
and
stos
jle
add
add
out
jle
add
jl
add
jl
add
jl
add
jle
add
jle
add
jle
add
jg
add
jg
add
add
jle
add
jg
add
jg
add
shr
test
inc
cli
mov
cmp
cltd
dec
out
call
lahf
movsl
mov
xchg
cli
xor
rcrb
test
call
adc
adc
lock
in
in
stos
or
adc
sub
sbb
stc
mov
inc
fcompl
adc
rclb
cli
in
in
stos
adc
adc
sub
sbb
ljmp
xchg
jmp
cli
in
in
sti
jp
in
in
sub
sbb
ljmp
rcll
in
in
in
xchg
sub
jbe
fwait
rorb
out
in
in
mov
stc
dec
and
roll
push
in
in
lcall
cmp
add
pop
mov
adc
sub
sbb
lcall
inc
cltd
pop
out
in
les
decb
sbb
pop
in
in
lcall
mov
pop
fsubl
rorl
jmp
sbb
lcall
and
mov
icebp
add
pop
fwait
jmp
jecxz
roll
fucomi
in
ljmp
stos
add
adc
lahf
jne
sti
cwtl
stc
in
in
movsl
add
adc
add
mov
data16
data16
sbb
mov
in
in
mov
stos
add
adc
cltd
push
into
sub
jbe
test
add
adc
shld
adc
stc
adc
adc
add
stos
sbb
push
inc
lahf
push
xchg
fwait
loopne
mov
cltd
dec
cld
cli
adcl
lea
rcll
lahf
push
in
cltd
dec
out
call
dec
dec
shr
stc
in
in
decl
dec
pop
cltd
testl
inc
cltd
push
inc
inc
inc
mov
cltd
call
je
xchg
in
ss
aam
ss
push
or
cltd
push
or
fmull
dec
out
in
call
push
adc
fwait
dec
out
jmp
and
mov
cltd
inc
out
dec
dec
pop
dec
dec
rorb
adc
push
cltd
pop
sbb
adc
adc
push
adc
push
loop
in
inc
xchg
ljmp
mov
cltd
lock
cltd
push
cld
cli
mov
adc
adc
cltd
push
out
call
inc
cltd
push
clc
inc
cltd
push
or
pop
cld
lahf
xchg
ljmp
adc
call
cltd
ljmp
push
in
lcall
rcrl
ljmp
mov
cli
lock
in
in
cltd
cltd
sar
ret
in
in
mov
cli
push
fsubr
in
push
cltd
push
ljmp
pop
out
mov
pop
cltd
push
cli
popf
jmp
mov
pop
sub
outsl
aad
cltd
ret
in
in
jmp
lahf
xchg
std
in
in
mov
cltd
fucomp
lcall
mov
dec
rolb
lahf
push
add
stos
sbb
addr16
sar
sbb
outsl
push
mov
adc
in
adc
mov
and
mull
shlb
lcall
in
sbb
insl
jmp
sub
addr16
dec
dec
rcll
movb
fwait
push
cld
mov
aam
add
aam
add
aam
add
aam
add
aam
add
incb
adc
adc
xchg
jmp
jne
cltd
push
or
ljmp
adc
xchg
clc
add
add
adc
fwait
push
push
push
stos
sbb
outsl
adc
pusha
adc
push
cli
pop
adc
adc
push
aas
ljmp
adc
fwait
sar
jo
adc
lea
add
jne
stos
adc
adc
loope
stc
aas
lahf
jne
sbb
jmp
sti
push
sbb
lods
push
cmp
insb
add
cmp
add
dec
in
cltd
or
pop
in
rorl
dec
dec
jmp
inc
arpl
adc
arpl
adc
arpl
adc
adc
pop
pop
push
dec
push
pop
mov
mov
pop
roll
adc
jecxz
in
in
sbb
shrb
pop
push
jg
xchg
jmp
outsb
or
leave
insl
or
add
cwtl
inc
jmp
and
stos
stc
or
inc
mov
mov
shlb
mov
je
mov
mov
loope
sbb
data16
sar
push
sar
xchg
in
in
cli
xchg
in
in
mov
je
cltd
pop
push
dec
cli
imul
in
mov
cltd
dec
sbb
and
mov
sbb
cli
and
in
in
ret
cli
dec
in
in
cltd
inc
or
test
add
adc
leave
insl
pop
mov
xor
xchg
outsl
adc
data16
in
lcall
in
mov
jne
cwtl
push
cli
xchg
shlb
mov
sbb
je
cwtl
push
sti
xchg
shlb
mov
mov
addr16
cli
out
in
mov
and
cwtl
dec
loope
adc
adc
xchg
outsl
les
data16
add
adc
lret
adc
pushf
mov
dec
in
stos
pop
adc
adc
or
inc
cs
cmp
stc
or
pop
adc
adc
pop
call
dec
dec
push
loop
roll
out
mulb
cltd
dec
out
loope
pop
shll
cmp
push
cmp
push
push
and
cmp
cmp
ss
push
cmp
sub
push
aas
and
push
push
and
cmp
cmp
inc
push
cmp
and
push
aas
sub
push
push
sub
ss
inc
cmp
aas
inc
push
aas
cmp
ss
aas
and
cmp
xor
aas
inc
xor
sub
cmp
sub
xor
sub
cmp
and
cltd
negl
push
adc
repnz
push
inc
fwait
rorl
adc
adc
xchg
jmp
je
cli
and
adc
sti
add
adc
call
sti
in
add
je
inc
sbb
adc
data16
ljmp
adc
je
inc
adc
xchg
je
xchg
sub
sbb
adc
add
rcl
adc
sti
int
adc
fstpt
in
aas
adc
jnp
add
add
ljmp
add
adc
cmp
fpatan
inc
cltd
pop
out
cli
mov
in
in
dec
fldz
cltd
outsl
cld
leave
mov
lret
iret
outsl
testb
push
je
enter
adc
call
int
cli
lahf
imul
adc
lcall
sbb
je
pop
addr16
xor
mov
outsl
or
and
sti
gs
in
sub
pusha
adc
adc
xchg
jl
adc
jb
aam
cmp
adc
pop
in
push
cmp
xchg
outsb
cmp
sub
stc
or
and
in
push
ljmp
adc
inc
sub
adc
or
je
je
push
sbb
clc
pcmpeqb
shll
sar
or
adc
adc
adc
adc
adc
xor
cltd
inc
add
rcrl
rcrl
adc
shrb
in
in
xchg
ficoml
and
mov
sbb
outsl
adc
call
lods
push
add
adc
adc
jbe
xchg
enter
pop
popa
repnz
pop
adc
jbe
xchg
shlb
push
repnz
int
repnz
call
add
ret
cltd
outsl
out
fisubl
add
jne
lahf
imul
or
cwtl
inc
cmp
lcall
lcall
addr16
stc
cmp
stos
sbb
adc
cwtl
inc
cmp
lcall
mov
push
xor
ljmp
aam
adc
sub
inc
add
clc
or
xor
lcall
inc
adc
pop
dec
dec
cltd
in
rcrb
add
incb
in
inc
inc
mov
cltd
dec
or
adc
adc
in
push
inc
inc
cli
cltd
repz
in
test
insb
add
adc
in
lcall
in
in
jmp
cltd
rorl
in
in
dec
pop
cltd
testl
inc
inc
inc
push
cltd
lret
cltd
repnz
ljmp
inc
inc
inc
call
xchg
shrb
push
ss
cltd
rcrl
dec
dec
ret
inc
cltd
push
inc
inc
inc
mov
cltd
cli
cltd
loop
pop
sbb
inc
add
cltd
cli
jns
in
xchg
sub
addr16
cltd
inc
out
cltd
push
mov
leave
in
in
pop
dec
dec
dec
pop
rcrb
adc
fildl
push
inc
inc
inc
push
inc
inc
and
inc
jp
ja
add
and
and
push
repz
in
fwait
push
cld
test
lods
mov
adc
lods
rcl
adc
push
js
lahf
inc
out
stos
adc
adc
mov
pop
lahf
inc
push
pop
cli
jns
in
in
pop
cltd
inc
out
aam
test
in
in
inc
push
lahf
push
lock
stos
push
mov
pop
lahf
push
cmp
inc
in
in
dec
mov
cltd
cli
popa
xlat
in
push
xchg
push
xchg
aam
xchg
jmp
adc
adc
lods
add
adc
mov
lahf
push
pop
mov
mov
jmp
inc
ljmp
inc
stos
mov
pop
cltd
push
clc
xchg
shlb
call
dec
cltd
inc
in
cltd
aam
and
js
lahf
inc
cli
inc
stos
nop
mov
add
ljmp
in
dec
cltd
push
cli
cltd
aad
adc
in
call
aad
xchg
aam
sub
addr16
and
dec
pop
dec
jbe
adc
add
lahf
push
call
adc
mov
jmp
stc
stc
dec
pop
dec
cltd
negl
lahf
push
add
push
inc
and
mov
stc
adc
sti
adc
popl
add
loopw
add
push
aad
add
aam
in
lods
adc
adc
cltd
dec
dec
dec
ret
cltd
rolb
push
inc
inc
xor
inc
jp
adc
fs
and
xor
in
adc
adc
stc
adc
sti
adc
cs
pusha
aad
add
loopw
inc
out
cltd
inc
or
leave
xlat
in
cltd
push
cld
and
cli
dec
jecxz
in
mov
jb
adc
lods
add
adc
xor
dec
dec
pop
jbe
add
adc
lahf
push
out
call
sar
fdivrl
cltd
aam
pop
dec
dec
rolb
lahf
push
add
push
inc
and
inc
jp
js
add
and
and
jge
in
stos
xchg
js
add
call
cltd
push
out
mov
cli
leave
loop
in
cltd
loop
aam
sar
xchg
cli
adc
js
push
cli
sub
jp
adc
call
test
adc
adc
aad
in
in
in
call
out
add
fucomip
in
inc
push
cli
sbb
in
and
pop
dec
dec
jbe
add
js
add
ret
in
in
shr
ss
in
stc
loop
pop
dec
rcll
add
in
in
call
adc
add
adc
add
xor
inc
inc
push
inc
inc
inc
push
inc
cltd
call
push
jp
push
xor
xor
cltd
aad
in
in
in
lea
inc
call
stos
jbe
add
test
adc
adc
test
in
in
mov
test
adc
adc
push
loop
call
adc
add
xchg
cli
add
push
xchg
shl
cli
add
and
stc
adc
xor
or
ds
data16
and
lahf
inc
out
inc
push
in
cli
pop
in
in
cltd
push
out
aad
out
in
call
aam
in
ljmp
lret
sti
adc
add
cltd
aad
cli
mov
hlt
adc
adc
in
adc
add
adc
jae
cltd
rorl
adc
lock
cltd
pop
cld
cltd
rcrl
in
cltd
inc
lock
aad
movsl
in
in
add
sti
movsl
adc
adc
lahf
push
or
stos
adc
add
cli
clc
lock
in
xchg
shlb
test
push
in
in
push
jmp
test
jp
add
add
adc
call
xchg
shlb
cltd
aad
mov
add
inc
in
call
test
jp
add
add
adc
call
xchg
shlb
cltd
aad
pushf
push
in
call
and
dec
pushw
sub
addr16
aad
mov
adc
in
in
jmp
lahf
push
in
cwtl
inc
or
cli
push
sar
in
cltd
inc
in
cltd
aad
stc
shr
in
inc
cltd
aam
jmp
lret
or
in
in
xor
dec
dec
pop
jbe
add
push
mov
cli
jns
in
sar
inc
test
dec
dec
pop
cltd
testl
adc
adc
and
adc
jne
adc
in
in
in
call
adc
add
jne
imul
adc
adc
in
in
in
call
adc
add
ja
adc
adc
imul
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
xchg
shlb
aas
adc
add
rcrl
adc
inc
inc
push
cltd
jmp
repnz
lret
lahf
xchg
fdivrp
in
in
inc
push
cli
xchg
iret
in
xchg
scas
fsubr
in
in
add
adc
jne
jp
add
adc
incl
xchg
shr
in
in
push
cli
add
in
xchg
shlb
jp
add
adc
incl
jb
adc
inc
call
cltd
aam
in
in
in
mov
stc
or
cmpsl
ret
in
fwait
jne
lahf
xchg
ljmp
xor
adc
cltd
rclb
xchg
out
in
in
in
mov
cli
jmp
pop
jl
add
jl
add
mov
stos
dec
add
cli
loopne
in
in
xchg
shlb
inc
push
cli
mov
in
in
fwait
inc
out
cltd
push
cld
cli
cld
in
xchg
shlb
inc
cld
xchg
outsb
adc
cmp
sbb
fwait
push
ljmp
xchg
clc
cld
in
in
inc
mov
cltd
push
push
push
mov
aam
add
loopne
in
in
inc
call
lahf
xchg
add
xchg
cmpsl
in
lahf
xchg
movsb
jmp
mov
in
aam
test
in
in
add
xchg
std
in
in
fwait
test
xchg
mov
mov
fwait
test
xchg
stos
cld
in
in
pop
mov
fwait
test
xchg
sar
in
in
adc
push
ljmp
aam
in
in
adc
xchg
mov
in
inc
js
lahf
lahf
clc
cld
in
in
cltd
push
sbb
in
lcall
in
in
pop
dec
dec
cltd
in
rclb
add
adc
add
adc
xchg
scas
sti
in
in
jp
push
adc
lea
pop
call
mov
mov
add
mov
mov
mov
mov
and
inc
lahf
inc
ss
inc
call
js
lahf
inc
ss
inc
lea
pop
call
inc
lahf
push
and
inc
js
cli
popf
enter
cli
leave
leave
in
in
push
lahf
push
and
inc
js
jp
outsl
add
js
call
inc
cli
mov
ss
lahf
inc
sbb
mov
push
push
mov
aam
add
ror
in
in
inc
call
jp
xor
adc
lahf
inc
ss
inc
push
cli
sub
in
in
xchg
les
adc
rcll
adc
in
in
in
call
adc
add
sbb
add
inc
test
data16
cmpsl
in
in
mov
cltd
enter
push
add
cli
mov
in
in
mov
xchg
leave
je
cli
add
in
in
jbe
pop
adc
add
xchg
or
aad
pop
dec
rcrl
push
inc
inc
push
xchg
shlb
loop
mov
cltd
ficompl
jp
jge
add
and
and
inc
push
mov
cltd
cli
jecxz
in
cltd
inc
cld
lahf
push
push
call
and
dec
pop
dec
jbe
adc
outsl
add
lahf
push
cld
cli
cmc
scas
in
sar
loope
in
in
jmp
cltd
aad
leave
sbb
cmpsl
in
pushl
pop
add
adc
adc
cltd
dec
dec
dec
pop
dec
rcrb
add
inc
test
data16
cmpsl
in
in
mov
cltd
enter
inc
add
aam
jmp
aad
leave
je
cli
dec
mov
in
jbe
pop
adc
add
xchg
or
aad
pop
dec
rcrl
push
js
push
inc
inc
xchg
shlb
xchg
mov
in
cltd
icebp
cltd
enter
rolb
outsb
insb
adc
jbe
and
lahf
inc
out
inc
lahf
push
ljmp
lcall
push
cltd
dec
sbb
lock
in
cltd
push
out
lahf
push
add
xchg
scas
in
and
pop
dec
dec
jbe
add
jle
add
add
adc
cmp
sti
add
mov
xchg
leave
je
cli
fdivs
adc
add
xchg
or
aad
pop
dec
dec
dec
pop
rcrb
adc
popw
cli
frstor
insb
adc
sbb
inc
inc
pusha
pusha
jge
inc
ja
or
adc
add
adc
cmp
adc
add
adc
nop
inc
inc
xchg
ljmp
lcall
xchg
jmp
xor
mov
jecxz
jmp
push
iret
mov
adc
mov
mov
pop
adc
cli
adc
in
in
jmp
fwait
es
push
ss
inc
js
cltd
pop
shrb
mov
dec
add
cli
clc
in
in
fwait
jo
dec
dec
pop
dec
rcrl
adc
inc
inc
push
ja
inc
ja
sbb
adc
adc
adc
add
adc
adc
add
enter
fdivs
fdivs
xchg
ljmp
pop
mov
adc
jmp
cltd
pop
nop
aad
add
xor
in
add
adc
add
cltd
pop
add
adc
in
cltd
ret
cli
sub
in
in
cltd
rolb
shr
movsb
in
decl
cltd
rolb
adc
inc
push
inc
and
mov
fwait
pop
out
cltd
jmp
loopne
lret
inc
jp
xchg
adc
fs
and
xor
push
cld
cltd
sar
scas
in
in
jmp
lahf
inc
cld
mov
mov
shr
in
cltd
inc
out
fwait
push
in
push
cli
or
loop
mov
aam
ljmp
add
mov
ret
in
cltd
pop
loopne
adc
call
cltd
lret
dec
dec
dec
fs
add
xchg
adc
lea
cli
pop
test
out
cli
push
test
pop
cmpsl
in
stc
cli
mov
dec
dec
pop
cltd
testl
ss
jg
sti
jge
in
rcrl
call
lahf
pop
sbb
sbb
enter
dec
ret
cltd
rcrb
mov
add
cli
push
std
in
in
cli
cmp
adc
xchg
adc
sarb
dec
cmp
insl
pop
push
aas
pop
adc
shlb
sub
cs
je
stc
inc
add
xchg
cli
adc
and
das
test
adc
insl
adc
aas
xchg
adc
shlb
adc
add
cmp
shlb
xchg
cli
das
je
stc
xor
shll
shll
shll
shll
shll
rcll
sar
fs
in
in
aaa
call
adc
mov
xlat
fisubs
inc
cltd
incb
in
inc
and
fwait
xchg
sahf
in
in
fwait
test
xchg
mov
test
push
out
xor
inc
jp
nop
adc
fs
and
xor
out
subl
jne
lahf
inc
cld
mov
mov
shr
in
stc
or
cmpsb
mov
ret
cltd
push
sbb
lahf
push
faddl
push
or
cli
rcl
in
in
xchg
jge
adc
add
sbb
adc
adc
add
in
inc
mov
inc
call
xchg
rcrb
add
cmpsb
in
in
aam
mov
lahf
xchg
mov
xchg
ljmp
cli
call
test
xchg
imul
mov
xchg
mov
xchg
shr
in
sbb
in
in
in
xchg
in
sbb
int3
in
in
in
xchg
ret
in
pop
lahf
test
js
lea
mov
scas
adc
cli
xchg
fucomp
in
mov
mov
adc
cli
in
in
cltd
lret
cltd
push
or
xchg
cmp
in
aam
xchg
in
call
cltd
push
cld
fwait
xchg
mov
in
in
aam
mov
in
lcall
cltd
push
clc
fwait
xchg
mov
in
in
aam
mov
in
call
lahf
xchg
nop
in
in
in
push
js
lahf
xchg
sahf
in
in
pushl
cli
and
in
in
cltd
lea
adc
call
cltd
lret
dec
dec
dec
fs
add
nop
adc
lea
cli
lods
mov
mov
adc
add
cli
sarb
cli
mov
in
in
shr
mov
in
stc
cltd
ret
dec
cltd
negl
lahf
push
add
incb
rcrb
xor
inc
jp
xchg
adc
fs
and
xor
out
in
aaa
in
add
adc
cmp
pusha
or
pop
cmp
popa
and
adc
mov
cltd
add
in
in
mov
stc
sub
shr
in
dec
cltd
fdivr
and
mov
aam
ljmp
add
mov
fdivr
in
cltd
pop
lock
adc
call
cltd
lret
cltd
pop
and
add
sarl
mov
fwait
inc
push
and
pop
dec
dec
jbe
add
adcl
lahf
inc
loop
enter
shr
mov
cltd
ret
dec
cltd
negl
lahf
push
add
insl
ljmp
adc
mov
cltd
pop
fisubrl
mov
dec
add
cli
hlt
stc
in
in
mov
aad
add
add
adc
cli
fucomp
in
mov
adc
mov
mov
inc
insl
add
mov
scas
adc
aad
ficoms
mov
mov
add
aad
push
xchg
adc
mov
mov
add
xchg
adc
cltd
pop
mov
adc
fwait
add
cltd
pop
mov
cltd
rclb
adc
sahf
adc
aam
push
adc
mov
in
inc
clc
and
mov
aad
add
add
data16
aam
or
mov
adc
cli
cmp
mov
adc
mov
mov
fwait
add
and
fwait
adc
and
mov
mov
scas
adc
and
fwait
add
xor
fwait
add
and
fwait
adc
lahf
push
add
in
aad
xchg
add
inc
cli
test
in
in
test
inc
mov
add
cltd
push
ss
scas
mov
add
shlb
stos
mov
adc
add
push
and
mov
mov
add
sbb
mov
adc
lahf
inc
and
stos
xchg
add
adc
mov
xchg
add
rcrl
cli
and
xchg
shlb
cmp
adc
xchg
in
addr16
adc
call
adc
cmpxchg
fisubs
mov
in
jmp
pop
xchg
imulb
cwtl
or
xchg
repz
adc
cmpxchg
fisubs
cltd
fnstsw
into
xchg
repz
adc
push
xchg
mov
push
cmp
in
adc
adc
adc
popa
adc
pop
rcrl
cltd
repnz
lret
xchg
das
push
adc
adc
shr
es
lcall
in
in
decl
nop
and
xchg
cmp
adc
call
cltd
ficompl
add
lret
push
aad
add
data16
pop
shr
in
cmp
dec
shrl
pop
rcrl
cltd
repnz
lret
adc
adc
add
data16
lock
add
adc
add
popa
sbb
mov
pop
cli
mov
pop
rcrl
xchg
ljmp
hlt
cltd
rcrl
adc
push
and
xchg
leave
je
xchg
sub
data16
add
adc
rcrl
adc
mov
sub
addr16
cltd
inc
ss
dec
pop
dec
dec
rcll
cltd
enter
out
cltd
rcrl
in
in
mov
xor
cltd
cli
or
adc
data16
adc
adc
mov
in
fwait
pop
xchg
sub
adc
ret
inc
cltd
incb
rcrb
push
jbe
and
js
lahf
inc
jmp
jp
add
adc
in
fucomp
in
lea
lahf
push
jmp
adc
mov
push
out
call
cltd
ret
mov
lret
dec
dec
dec
fs
add
xchg
adc
lea
cli
inc
cmpsb
in
in
ret
sti
sub
rorl
in
rcrl
push
inc
inc
inc
mov
xchg
incb
cmp
adc
call
inc
cli
and
in
in
and
stc
cmp
pop
and
or
push
in
cwtl
inc
in
aaa
in
add
adc
add
in
push
in
fldenv
xchg
aam
sub
outsl
or
push
and
pop
dec
dec
dec
ret
mov
aad
add
sbb
add
sbb
push
add
incb
in
inc
inc
push
aad
sub
adc
sbb
adc
add
sbb
adc
aad
push
adc
adc
adc
cli
push
fucomp
in
test
popw
mov
je
shlb
ret
lock
add
cs
add
sbb
lods
es
add
lods
fisubs
adc
adc
mov
das
mov
sbb
adc
insl
in
in
in
test
add
pop
push
aad
add
aam
push
aad
adc
sti
lods
add
adc
loop
in
decl
fisubs
fwait
adc
mov
cli
movsb
movsb
in
in
sbb
inc
aad
add
push
aad
add
sti
mov
adc
mov
lahf
xchg
in
in
lcall
adc
jne
lahf
xchg
push
push
cli
lahf
test
incl
xchg
add
adc
add
inc
cli
gs
in
mov
lahf
xchg
in
je
sub
sbb
inc
aad
add
adc
sti
stc
cmp
pop
cli
loopne
in
in
xchg
rcrb
adc
js
cli
loope
in
in
test
sbb
push
adc
xchg
inc
call
dec
dec
dec
pop
cltd
testl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
cltd
mov
js
js
pop
addr16
and
inc
push
jbe
and
cli
gs
in
in
call
xchg
das
push
adc
adc
pop
out
in
in
cli
rcr
in
in
mov
lahf
push
lock
and
mov
cltd
sar
test
inc
loop
js
adc
call
lahf
push
push
stos
es
add
test
add
adc
in
cltd
push
in
and
cli
sbb
in
in
mov
lahf
push
cli
push
stos
es
add
test
add
adc
in
cltd
push
call
int3
in
in
mov
mov
adc
mov
cli
sub
in
mov
aam
add
adc
cltd
ret
cli
insl
stc
in
mov
adc
lahf
inc
testb
sahf
adc
mov
cltd
sar
sbb
in
in
mov
and
cli
mov
xchg
adc
mov
add
cltd
shr
pop
stc
in
pushl
lahf
push
faddl
push
mov
add
mov
cli
lock
inc
loopne
sbb
inc
loopne
xchg
aam
add
je
in
in
lahf
inc
movb
sahf
adc
mov
cltd
sar
mov
in
in
mov
lahf
push
lret
in
in
in
cltd
push
lret
adc
cli
cmp
test
add
adc
in
mov
adc
lahf
inc
ret
push
cmp
adc
cltd
sar
jne
in
in
mov
stos
nop
aam
add
push
mov
ficoms
data16
add
test
add
adc
in
cltd
inc
int3
stos
xchg
add
cli
lock
in
lahf
inc
ljmp
inc
out
insb
mov
in
lahf
inc
fiaddl
xor
adc
mov
cltd
sar
and
in
in
mov
and
cli
mov
shlb
lahf
push
cld
test
sahf
add
cli
hlt
mov
in
stc
or
sahf
sahf
adc
cli
lds
les
mov
add
mov
cli
lock
and
call
xchg
shlb
lahf
push
rclb
es
add
test
adc
adc
in
cltd
push
shlb
cli
push
iret
in
in
test
addr16
cwtl
sahf
adc
call
stc
pop
lahf
inc
ljmp
jne
in
in
jmp
in
jne
jp
mov
add
jne
stos
mov
adc
test
adc
adc
adc
ljmp
adc
jmp
stos
pushf
aam
add
cli
icebp
mov
mov
cltd
sar
cltd
sti
in
in
mov
and
dec
pop
dec
jbe
adc
sahf
add
lahf
push
shrb
mov
bound
dec
mov
dec
roll
in
in
in
call
adc
add
adc
add
in
in
call
adc
jg
jbe
imul
in
in
in
lcall
adc
add
jg
xor
and
imul
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
push
pop
push
pop
adc
add
in
in
call
adc
add
inc
dec
xor
adc
in
in
in
call
adc
add
jg
add
in
in
call
adc
sub
cmp
adc
in
aaa
and
adc
cltd
rolb
mov
cltd
out
push
cltd
adc
add
adc
mov
loopne
in
in
xchg
cmp
negl
dec
rcll
adc
cli
or
lret
je
jp
lea
add
push
fsubr
pushl
xchg
das
lock
add
sbb
adc
mov
dec
rcll
add
pusha
outsb
ja
and
cmp
jle
adc
adc
push
ja
inc
jnp
jns
pusha
ja
push
bound
gs
push
add
sbb
in
rcrl
add
mov
adc
cs
adc
sahf
mov
adc
fidivrs
adc
mov
adc
repnz
adc
es
adc
jp
adc
inc
mov
adc
adc
pop
mov
adc
adc
push
mov
adc
mov
adc
push
mov
adc
push
mov
adc
or
adc
pop
mov
adc
xchg
adc
xchg
mov
adc
inc
mov
adc
sub
adc
ds
adc
xor
adc
cmp
adc
mov
adc
mov
mov
adc
mov
adc
mov
adc
jle
adc
stos
mov
adc
mov
adc
ss
adc
mov
mov
adc
mov
adc
cmpb
mov
adc
sarb
adc
mov
adc
adc
adc
mov
adc
adc
adc
xchg
adc
adc
adc
xorb
adc
adc
add
mov
adc
lcall
adc
adc
add
mov
adc
xchg
mov
adc
adc
adc
adc
outsb
mov
adc
mov
adc
push
adc
lret
adc
adc
add
adc
mov
adc
adc
adc
bound
adc
adc
adc
jle
adc
out
mov
adc
jp
adc
mov
adc
adc
jbe
adc
mov
adc
jb
adc
inc
mov
adc
dec
mov
adc
mov
adc
dec
mov
adc
adc
adc
adc
inc
mov
adc
adc
add
adc
pop
mov
adc
pop
mov
adc
mov
adc
pop
mov
adc
adc
adc
adc
push
mov
adc
mov
adc
push
mov
adc
mov
adc
cs
adc
mov
adc
sub
adc
adc
adc
es
adc
mov
adc
and
adc
adc
adc
ds
adc
mov
adc
cmp
adc
adc
adc
ss
adc
adc
add
mov
adc
adc
adc
adc
push
mov
adc
mov
adc
or
adc
adc
adc
push
mov
adc
adc
adc
adc
adc
adc
adc
adc
out
mov
adc
mov
adc
inc
cltd
xor
inc
jp
adcl
fs
and
xor
pop
mov
adc
seta
add
stos
xchg
adc
cli
stc
out
in
in
call
cli
loope
in
stos
mulb
adc
adc
add
and
in
in
stos
lods
mov
add
cltd
pop
mov
and
mov
adc
cltd
pop
cmp
adc
call
stos
mov
add
int3
stos
in
in
stos
test
adc
mov
outsb
jne
add
and
in
in
stos
adc
add
add
xor
in
in
stos
dec
aad
add
cltd
pop
adc
add
int
in
in
mov
stos
adc
pop
cmp
adc
call
stos
adc
add
stos
adc
adc
cli
mov
in
stos
ret
add
mov
add
add
pushf
mov
in
stos
mov
push
adc
add
add
jns
in
in
mov
cli
pop
mov
adc
cli
inc
mov
aam
adc
and
add
add
sub
lcall
in
stos
xchg
adc
cli
sbb
aam
adc
sbb
fisubl
mov
mov
adc
popa
mov
mov
mov
dec
dec
pop
jbe
add
adcl
sar
int3
mov
dec
rcrl
xor
inc
jp
adcb
fs
and
xor
add
popa
push
stos
insb
lahf
adc
call
stos
dec
pushf
add
cli
cmpsl
in
in
xchg
cmp
adc
mov
test
addb
cli
hlt
test
jecxz
in
call
cli
std
call
imul
in
and
dec
dec
dec
fs
add
adcb
ret
sti
jns
in
stc
ljmp
in
in
call
adc
add
push
add
aaa
cs
add
aad
add
xor
inc
jp
adcb
fs
and
xor
pop
cwtl
aad
add
rorb
pop
jbe
add
adcb
sar
or
in
in
stc
clc
dec
rcrl
adc
adc
ret
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adcb
add
adc
pop
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
xchg
adc
xchg
adc
inc
pop
imul
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
adc
pop
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
test
adc
inc
inc
push
pop
jnp
je
adcl
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
mov
adc
cmp
adc
mov
adc
adc
adc
ja
insl
out
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
xchg
adc
adc
add
adcl
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
mov
adc
mov
adc
mov
adc
adc
add
jne
data16
pop
ja
outsl
pusha
imul
ja
insl
jle
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
lcall
add
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
ret
adc
inc
pop
gs
pusha
jns
pushaw
gs
cltd
rolb
leave
mov
in
mov
cltd
loop
aam
add
inc
sbb
cli
mov
inc
inc
inc
mov
cltd
lret
sbb
jae
addr16
rcrl
push
add
mov
jmp
and
cltd
lds
push
push
cltd
aam
dec
dec
rcll
rcrb
add
rcrb
adc
nop
inc
inc
inc
mov
cltd
lret
outsb
push
cmp
outsl
inc
cltd
les
add
fwait
push
and
pop
sbb
outsl
or
cltd
fcmovbe
loope
cltd
push
add
push
mov
inc
mov
in
in
subl
adc
adc
cltd
or
push
push
dec
dec
pop
rcrl
fisttpl
outsb
sbb
push
sbb
mov
cltd
add
fwait
push
and
push
ss
rcrl
push
sub
insb
push
cltd
fcoms
rcll
jmp
stc
add
mov
stc
pop
stos
add
adc
add
cltd
ret
call
rcrl
fucomi
adc
dec
sbb
mov
sub
loopnew
pop
sbb
xchg
fucomi
mov
dec
rcll
cltd
sar
aad
in
in
mov
xchg
in
sbb
or
in
in
cltd
dec
dec
rcll
cltd
lret
sbb
sub
insl
pop
cmp
data16
lahf
push
add
loope
in
fwait
popa
or
dec
rcll
cltd
loopne
fcoms
in
in
in
adc
push
jle
cltd
les
in
in
cltd
inc
sbb
loop
or
nop
mov
cmp
mov
shl
add
fildl
stc
add
in
sub
insl
sbb
cltd
cltd
ret
cli
sub
jne
fwait
popa
or
dec
pop
rcrl
push
add
xchg
shlb
xchg
pushf
in
in
cltd
ficompl
aam
or
sbb
adc
in
jmp
adc
call
fwait
push
push
push
xor
mov
xchg
leave
je
cli
sbbb
adc
adc
dec
pop
rcrl
incb
mov
in
mov
fwait
inc
out
cltd
push
cld
cli
fsts
add
and
push
jp
test
add
xor
xor
push
cli
fcompl
jmp
push
out
call
and
dec
pop
dec
jbe
adc
test
add
adc
adc
sbb
sbb
sti
push
mov
in
jmp
xchg
outsl
sti
adc
push
out
cli
add
dec
rcll
inc
cltd
enter
cltd
inc
out
cli
inc
add
adc
rolb
xchg
adc
jbe
and
and
xor
je
cltd
push
cld
cltd
push
push
mov
cli
xor
in
in
push
jne
cltd
push
cld
cltd
push
push
mov
cli
or
in
in
and
dec
dec
dec
fs
add
test
add
adc
adc
sti
int
in
stc
loop
dec
dec
rcll
push
sbb
subb
rcrl
push
inc
cltd
enter
cltd
inc
out
cli
enter
and
inc
jp
cwtl
adc
jbe
and
and
push
cltd
sar
shr
in
and
pop
dec
dec
jbe
add
cwtl
adc
cltd
inc
out
cli
sbb
adc
shr
outsb
in
stc
loop
pop
dec
rcrl
push
cli
xchg
lods
in
rcrl
jmp
in
jne
and
mov
in
inc
adc
rcrb
add
lock
lret
js
mov
or
inc
push
mov
sbb
adc
mov
cltd
rorl
fwait
push
mov
push
jmp
push
jmp
push
xor
cltd
rorl
cltd
push
mov
push
adc
dec
ret
rcrl
decb
in
sbb
adc
adc
outsb
push
xchg
outsl
push
add
xchg
jge
in
in
ljmp
push
jmp
insl
sbb
cltd
rcrl
ret
cltd
rcl
push
add
incb
je
pop
ljmp
addr16
dec
out
mov
cltd
push
adc
push
ljmp
in
fwait
push
stc
sbb
in
fwait
adc
sub
data16
adcl
adc
call
fwait
addr16
adc
push
adc
push
loop
push
ljmp
mov
in
lcall
inc
cwtl
push
clc
cltd
rorl
dec
dec
cltd
in
rcrl
adc
inc
push
cltd
enter
push
ljmp
out
adc
adc
xchg
jge
in
or
add
adc
jl
xchg
outsl
or
sbb
in
in
insl
fs
or
cltd
push
sbb
fstps
inc
adc
inc
out
mov
cltd
push
out
dec
dec
pop
dec
dec
rorb
adc
inc
mov
cltd
call
je
cltd
lds
and
inc
or
lret
dec
rcrl
mov
rcll
lret
or
in
outsb
and
fldt
cltd
popa
sbb
in
in
add
cltd
jecxz
push
push
adc
cltd
fdivr
sub
push
stc
add
in
dec
dec
dec
ret
je
sti
add
data16
in
add
adc
jmp
adc
fwait
inc
push
mov
rcll
mov
in
mov
cltd
loop
aam
or
adc
cltd
rcll
cli
pusha
xchg
in
in
xchg
fldt
cli
std
mov
in
dec
dec
ret
inc
cltd
lret
cltd
shr
push
adc
add
rcrb
mov
dec
ret
inc
inc
fwait
adc
cltd
lret
cltd
rorl
cltd
ret
sbb
in
lcall
add
rcrl
inc
mov
cltd
lret
push
cltd
cltd
sar
vpaddsw
mov
sub
outsl
pop
je
adc
and
cltd
rcrl
pop
dec
dec
rcll
xchg
sub
jle
cltd
add
inc
sbb
cltd
add
add
in
fwait
adc
ss
or
data16
subl
setns
call
and
fwait
add
stc
or
adc
mov
ss
sbb
into
lahf
in
lcall
rcrl
push
cltd
jecxz
ljmp
sarb
in
es
ljmp
sub
insb
add
jnp
insb
sbb
or
in
lcall
push
adc
cltd
xlat
mov
cli
test
in
in
fwait
jnp
cltd
aam
adc
rcrb
dec
dec
ret
inc
cltd
xor
inc
jp
mov
add
jbe
xor
pop
pushf
aad
add
rorb
pop
jbe
add
mov
adc
sti
hlt
cltd
in
in
stc
clc
dec
rcrl
adc
adc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
adc
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
adc
pop
mov
adc
fs
jb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jb
adc
bound
adc
pop
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
inc
push
imul
jae
ja
push
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
adc
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
mov
adc
cmpb
data16
jo
shlb
sub
mov
adc
pushw
inc
cli
in
mov
inc
inc
xchg
shlb
xchg
xchg
in
in
cltd
ficompl
aam
test
push
push
inc
call
mov
popl
add
mov
aad
add
sub
in
lcall
sbb
in
fs
pop
adc
adc
xchg
les
cltd
aam
dec
rcll
add
adc
add
cli
and
enter
les
cli
jge
in
in
xor
cltd
aam
loop
adc
lahf
push
push
push
cli
icebp
stos
in
cltd
roll
inc
xchg
in
xchg
leave
jle
cltd
aam
movb
nop
inc
cltd
lret
aad
adc
fldcw
and
add
cli
add
in
in
lahf
inc
push
inc
cli
mov
in
in
pop
rcrl
lret
push
inc
call
jp
aad
add
mov
ss
adc
cli
in
in
in
pop
rcrl
lret
cli
popl
add
adc
cltd
push
push
pop
rcll
adc
sbb
inc
cltd
fcomps
pop
mov
in
xor
cwtl
inc
or
ret
mov
aad
add
call
mov
aad
add
inc
push
inc
cli
or
mov
cltd
push
add
cli
in
mov
mov
add
ret
or
rcll
add
adc
rcrl
cltd
repnz
lret
push
sub
je
xchg
shlb
shr
lcall
inc
push
xchg
jno
in
xchg
in
adc
fwait
popa
add
dec
rcll
push
ss
lock
dec
sbb
shll
and
mov
shll
roll
data16
cltd
add
adc
dec
sbb
dec
rcll
add
adc
add
clc
add
in
and
xchg
sarb
xchg
rolb
shr
adc
inc
cltd
incb
ljmp
push
cli
jge
in
cltd
inc
cld
cltd
pop
ljmp
je
js
adc
cltd
push
cwtl
pminub
cli
or
loopne
sbb
leave
mov
cwtl
lcall
shl
or
pop
imul
cltd
negl
lahf
push
add
inc
push
cltd
jmp
repnz
lret
fwait
push
ss
data16
js
inc
call
xchg
shlb
xchg
cs
lahf
inc
adc
push
and
adc
inc
ss
inc
push
inc
cli
mov
in
in
mov
cltd
push
and
dec
in
in
cltd
push
and
dec
dec
pop
rcrl
inc
adc
cltd
icebp
cltd
enter
inc
sbb
inc
push
cli
insl
stos
in
xchg
rorb
xchg
stos
adc
adc
xchg
jl
or
jb
inc
cltd
sti
lahf
data16
sbb
add
loope
pop
stc
xor
sub
adc
call
aad
cmp
adc
cltd
inc
ss
fwait
inc
push
cltd
push
and
fwait
push
or
sbb
cli
sbb
add
loop
adc
pusha
adc
push
sbb
add
ss
push
sbb
add
je
inc
sbb
adc
je
push
and
je
insb
add
sbb
push
push
adc
cltd
push
xor
push
ss
add
push
adc
sbb
push
add
xor
add
cli
fs
in
in
cltd
enter
cltd
and
cmp
sbb
push
xchg
les
dec
pop
rcrl
incb
cltd
jecxz
ficompl
sbb
add
cltd
push
hlt
xchg
ljmp
adc
adc
push
cli
adc
adc
ss
push
ljmp
mov
shl
loopne
xchg
shrb
fwait
adc
or
xchg
shrb
fwait
adc
pop
dec
cltd
negl
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
adc
scas
mov
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
mov
adc
inc
push
imul
jl
jae
cltd
rolb
push
inc
inc
fwait
inc
out
xchg
outsl
cld
adc
mov
cli
cltd
in
in
cltd
loop
fildl
mov
and
xor
jmp
rcrl
in
in
mov
xchg
shlb
cltd
push
push
cltd
inc
or
inc
out
jne
cli
addb
adc
jmp
rorb
dec
jbe
adc
mov
add
cli
cltd
in
in
ret
sti
adc
cld
pop
dec
dec
dec
ret
inc
inc
inc
test
data16
sub
mov
cltd
enter
rorb
in
fwait
ja
cltd
aad
leave
sbb
sub
jbe
pop
add
adc
adc
cltd
dec
dec
dec
ret
inc
inc
cli
xchg
sub
mov
cltd
loop
aam
or
adc
cltd
rcll
cli
pop
sti
in
in
xchg
fldt
cli
inc
cmp
dec
dec
ret
inc
cltd
push
inc
fwait
push
cld
cltd
push
out
subl
setbe
cld
cli
jne
in
and
push
jp
mov
add
xor
xor
ds
shlb
cltd
inc
out
cltd
push
add
cli
loopne
in
in
cltd
inc
out
cltd
push
xor
in
inc
mov
cltd
inc
push
inc
cli
loope
in
in
mov
cltd
pop
push
and
mov
cli
in
in
in
push
cli
jns
in
cltd
inc
cld
mov
mov
add
inc
cmc
in
in
and
dec
dec
dec
fs
add
mov
add
jmp
in
cmp
stc
loop
dec
dec
rcll
inc
inc
fwait
inc
out
cltd
push
cld
xchg
push
add
adc
cli
in
in
and
inc
jp
mov
and
and
cmp
sbbl
out
cltd
inc
cmp
sbb
es
in
js
cli
lds
cltd
push
cld
cltd
push
cmp
sbb
inc
call
cltd
inc
out
mov
stc
or
fwait
inc
sub
push
out
mov
cltd
inc
push
cltd
bound
xchg
in
pop
js
inc
push
cli
sbb
fwait
push
and
std
cmpsl
in
stc
sbb
fwait
inc
and
cli
in
call
cld
mov
mov
add
call
rorb
fs
add
mov
add
call
or
loop
dec
dec
dec
ret
in
push
push
ret
inc
cltd
lret
add
push
xchg
jnp
adc
cltd
sar
pop
adc
adc
in
in
dec
ret
inc
inc
cli
rcrl
loop
push
push
xchg
shlb
popa
out
in
in
mov
call
and
fwait
inc
push
cltd
aam
cmp
adc
cltd
push
jbe
shlb
push
cli
adc
roll
icebp
lahf
in
xchg
leave
jle
cltd
aam
jb
in
decl
nop
inc
cltd
lret
sbb
inc
push
data16
add
in
lcall
frstor
or
shlb
cli
jmp
push
or
cli
test
in
in
and
fwait
push
push
mov
cli
popf
ljmp
or
rcrb
nop
in
cmp
push
xchg
js
adc
je
inc
es
call
inc
push
adc
add
aad
inc
repnz
pop
pop
adc
adc
or
xor
push
push
adc
in
adc
inc
push
adc
add
aad
dec
in
adc
add
lahf
push
add
incb
in
inc
inc
push
fwait
pop
out
inc
ljmp
push
loop
inc
push
xchg
push
adc
mov
xchg
js
adc
add
xor
setbe
pop
add
cltd
push
or
push
add
cltd
inc
push
xchg
push
adc
adc
sbb
sbb
add
out
in
jmp
rcrb
cld
adc
lea
inc
js
cltd
push
out
push
cli
in
in
js
call
fwait
push
cli
mov
inc
call
fwait
push
divb
rolb
mov
and
xor
or
popa
inc
cltd
inc
push
je
inc
add
push
adc
add
js
js
js
cltd
push
push
mov
inc
mov
cltd
inc
push
inc
cli
xor
push
loop
dec
adc
adc
sbb
inc
push
cltd
push
add
cltd
push
call
in
in
fwait
inc
loop
cmp
adc
stos
sub
adc
call
fwait
push
into
xor
inc
jp
mov
add
jbe
xor
or
adc
adc
push
adc
cltd
push
push
xchg
push
add
js
cltd
push
cli
push
cli
cmp
push
cltd
push
call
in
in
je
mov
je
pop
xor
push
or
inc
into
lea
cltd
cli
stos
sbb
add
loope
mov
cltd
inc
push
cltd
inc
or
push
push
mov
cltd
inc
xor
sbb
push
sbb
xchg
aad
add
cltd
push
or
xchg
push
adc
subl
je
xchg
outsl
mov
addr16
mov
and
fwait
inc
cmp
cmp
in
in
adc
rclb
adc
subl
je
cltd
push
fcompl
adc
add
ljmp
adc
xchg
stos
adc
adc
push
testb
mov
incb
aaa
xchg
outsl
mov
or
into
xchg
sarb
jp
adc
adc
cltd
push
in
cli
sub
in
in
cltd
push
push
fwait
push
cmp
xor
cltd
push
into
push
js
cltd
inc
push
cltd
push
and
inc
js
cltd
push
out
push
cltd
push
notb
or
in
inc
cltd
push
in
cli
push
mov
in
stc
cmp
cltd
push
xor
xchg
ljmp
je
ljmp
in
sub
data16
push
push
cli
sub
push
into
lahf
push
cmp
push
mov
cli
adc
adc
lahf
push
fadds
adc
push
cli
inc
call
fwait
push
loop
outsl
out
adc
push
or
push
push
cmp
addr16
mov
cltd
inc
xor
push
andb
inc
push
je
js
sbb
adc
inc
lret
inc
push
cltd
push
and
inc
js
cltd
push
out
push
cltd
push
notb
jne
in
cli
lock
in
cli
fstpl
adc
and
dec
pop
dec
jbe
adc
mov
add
xchg
in
sar
fstps
cltd
push
lock
cltd
push
in
cli
je
in
in
fwait
inc
and
push
jp
mov
xor
xor
rolb
gs
and
xor
rorb
xchg
outsl
out
or
cltd
push
out
cltd
push
notb
and
int3
cltd
push
notb
add
rclb
push
mov
xor
xor
xor
push
or
xchg
push
adc
mov
xchg
js
adc
lahf
push
ret
adc
cltd
push
notb
in
mov
push
cltd
push
push
mov
inc
mov
cltd
inc
push
inc
js
js
cltd
inc
testb
mov
out
adc
xchg
mov
push
call
in
in
fwait
inc
repnz
push
jp
mov
xor
xor
push
repnz
call
cltd
loop
jge
adc
js
cltd
inc
ljmp
test
cltd
push
loopne
cli
js
in
in
jp
adc
adc
js
mov
inc
mov
cltd
inc
sbb
inc
push
cltd
push
add
js
push
cltd
push
in
cli
mov
jge
adc
js
inc
mov
inc
call
inc
cltd
push
loopne
cli
cmp
in
in
and
dec
dec
dec
fs
add
mov
repnz
call
sar
fs
in
stc
out
and
dec
pop
dec
jbe
adc
mov
hlt
adc
push
cltd
push
int3
inc
cltd
push
in
cli
in
in
in
shr
pop
sahf
in
stc
icebp
and
dec
dec
dec
fs
add
mov
incb
push
testb
mov
cmp
rorb
dec
jbe
adc
or
in
cwtl
in
in
mov
inc
call
cli
jns
in
cli
test
in
in
and
dec
dec
dec
fs
add
mov
testb
mov
cli
push
js
cli
mov
in
in
subl
je
cltd
push
or
js
mov
inc
call
sar
fmuls
cltd
push
loop
dec
dec
cltd
in
rcrb
add
xchg
ljmp
notb
rcrb
add
cli
add
es
cmp
adc
je
push
and
adc
cwtd
push
ss
push
ss
lahf
push
or
push
and
inc
js
inc
cli
cld
scas
in
in
lahf
inc
ss
inc
call
cltd
loop
xchg
sbb
adc
lahf
push
add
inc
test
data16
lcall
xor
cltd
aad
inc
xchg
in
jmp
adc
call
cltd
loop
ja
cltd
aam
push
jmp
lcall
sbb
in
fs
pop
adc
adc
xchg
les
cltd
aad
dec
dec
rcll
lcall
mov
cli
mov
adc
cltd
inc
sbb
and
push
cli
sar
in
cltd
rcll
cli
sbb
in
in
xchg
fldt
cli
cltd
lcall
cltd
incb
inc
cltd
or
push
stos
pop
adc
adc
mov
cltd
jecxz
cli
cltd
lret
cli
inc
adc
adc
rorb
fwait
push
ljmp
adc
fs
and
xor
daa
mov
pop
fwait
addr16
stc
sbb
in
fwait
push
clc
lahf
push
mov
cltd
push
sbb
pop
ljmp
jmp
lcall
mov
mov
cltd
push
out
cltd
shr
jp
adc
and
dec
pop
dec
jbe
adc
xor
adc
push
ljmp
outsl
out
adc
push
cld
inc
cli
lods
in
in
cli
test
cwtl
in
decl
dec
mov
dec
rolb
lahf
push
add
lret
sbb
jne
cltd
shr
adc
add
add
mov
loop
in
lcall
sbb
inc
cltd
lret
cli
pushf
add
adc
add
cltd
push
add
push
sbb
lahf
push
add
sbb
push
push
addr16
jne
xchg
push
adc
mov
stc
sbb
sar
pop
xor
shll
add
lret
cli
je
adc
cltd
inc
push
cltd
push
or
rcrl
lock
mov
adc
and
jmp
cltd
push
add
inc
or
pop
sbb
stc
add
je
pop
data16
xchg
sti
add
add
inc
xchg
sti
or
sti
or
stc
cmp
adc
xor
push
add
xchg
cli
adc
btr
stc
or
adc
adc
or
adc
or
adc
pop
rcrl
inc
push
cltd
loopne
push
push
xchg
rcrb
fwait
push
lea
cli
xor
push
mov
sbb
aam
cltd
lock
xor
add
cltd
push
add
stc
jecxz
in
in
mov
adc
fwait
aad
aad
dec
pop
dec
rcrl
pop
push
cltd
push
or
imul
jnp
adc
lahf
inc
or
inc
inc
call
lahf
push
or
aad
cmp
adc
cltd
dec
push
fwait
pop
add
pop
sbb
push
push
adc
je
pop
adc
dec
add
sbb
push
sbb
adc
cltd
les
imul
in
fwait
inc
push
dec
dec
ret
cltd
inc
sbb
sar
mov
nop
cltd
push
push
subl
jne
cltd
inc
adc
inc
sbb
inc
inc
cltd
fcoms
adc
jnp
adc
cltd
popa
push
mov
shlb
xchg
loope
in
mov
call
and
fwait
inc
push
cltd
shr
mov
sar
mov
in
in
push
pop
adc
push
push
adc
rcrl
adc
inc
push
inc
cltd
jecxz
enter
mov
adc
call
fwait
push
ljmp
adc
fs
and
xor
sbb
add
ljmp
pop
adc
adc
mov
push
ljmp
cltd
push
ljmp
fwait
push
adc
rorb
dec
jbe
adc
add
in
mov
cli
mov
in
in
call
cli
or
adc
cli
and
inc
jp
mov
and
xor
push
call
cltd
inc
out
mov
fwait
inc
push
cli
or
in
in
and
dec
dec
dec
fs
add
mov
aad
adc
sub
sbb
cltd
push
cld
aam
pop
add
dec
pop
dec
dec
rolb
lahf
push
add
inc
adc
cltd
ficompl
xor
lret
fcoml
add
cltd
insb
add
insl
sbb
xor
adc
xchg
jmp
rorb
adc
adc
push
and
add
adc
movsb
adc
adc
push
xchg
shlb
inc
sbb
adc
in
in
cltd
cli
icebp
out
in
lahf
push
sbb
pop
adc
cli
sar
in
in
stc
outsl
cltd
push
sbb
push
push
arpl
sub
in
in
push
inc
lahf
sbb
pop
adc
adc
mov
dec
and
mov
or
pop
cltd
dec
adc
sbb
cli
in
in
cltd
fcomps
js
mov
cltd
inc
adc
out
call
pop
fwait
inc
sbb
add
cltd
fstps
xor
dec
dec
pop
dec
rcrl
adc
cltd
cli
cltd
loop
pop
push
sub
cmp
cli
test
inc
lea
lahf
jl
sbb
repz
dec
mov
sbb
cltd
pop
add
cli
adc
push
dec
dec
dec
ret
inc
cltd
incb
inc
cltd
enter
aam
ds
in
ljmp
lret
sbb
adc
cltd
sarl
add
mov
or
inc
sbb
in
adc
lahf
push
mov
fldt
cli
mov
push
push
inc
lea
lahf
jge
stos
adc
adc
loope
dec
aam
sti
adc
rorb
cmp
add
cltd
inc
stos
fwait
inc
rorl
aad
aad
fsts
adc
rcrb
mov
inc
fistps
cld
xchg
stc
adc
fnstenv
stc
add
stc
inc
mov
aad
add
js
cli
jne
in
cltd
lret
pop
mov
cld
aam
jmp
call
stc
push
aad
fstl
adc
adc
push
out
ljmp
adc
std
or
rolb
mov
add
and
and
aam
adc
add
mov
cli
in
stc
in
in
and
dec
dec
dec
fs
add
mov
jmp
push
cld
inc
cli
call
jmp
stc
sti
dec
pop
dec
cltd
negl
lahf
push
add
inc
adc
cltd
cli
cltd
loop
pop
push
sub
cmp
cli
push
out
in
inc
inc
lea
lahf
jl
sbb
repz
dec
mov
push
mov
push
push
cltd
pop
add
cli
popf
jmp
in
xchg
push
dec
dec
dec
ret
inc
inc
inc
push
xchg
repnz
in
in
lcall
cltd
aam
xchg
jmp
push
xor
fwait
push
and
cltd
push
adc
rcrb
add
pop
or
in
cltd
push
and
xchg
rorb
adc
add
push
adc
fldt
call
je
push
and
push
pop
mov
cli
enter
cwtl
adc
cli
fsin
in
cltd
push
adc
cltd
push
or
jge
in
fwait
push
and
lahf
push
and
inc
jp
adc
adc
cltd
push
or
add
mov
push
push
cltd
push
sbb
push
mov
lcall
fs
ljmp
jne
xchg
imul
imul
and
stos
in
add
adc
in
in
in
cltd
clc
je
imul
aad
repnz
push
ss
push
or
push
adc
rcrb
push
or
add
push
add
adc
in
xchg
outsb
and
adc
lahf
push
or
jecxz
call
push
inc
test
pushw
cmp
adc
add
mov
cli
xor
in
in
lahf
push
and
cltd
cmc
in
je
jnp
sbb
push
push
add
lahf
push
dec
stos
push
add
adc
in
and
mov
mov
mov
push
cltd
xlat
cli
in
in
in
mov
cltd
dec
push
cltd
xlat
call
xchg
xor
adc
dec
dec
roll
adc
adc
and
cli
dec
in
in
in
ret
inc
cltd
xor
inc
jp
mov
and
xor
pop
movsb
aad
add
mov
mov
insb
in
in
mov
cli
movsl
insb
in
mov
adc
inc
call
jp
aad
add
add
aad
add
sbb
dec
pop
dec
jbe
adc
mov
inc
nop
in
in
jmp
dec
rcll
adc
adc
jp
adc
cli
cmp
adc
cli
and
call
mov
aad
add
call
mov
aad
add
call
mov
aad
add
adc
cli
int
in
mov
mov
mov
addb
cli
fsub
in
in
mov
aad
add
in
aaa
xchg
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
xor
inc
jp
cmpsb
adc
fs
and
xor
pop
call
rorb
pop
jbe
add
cmpsb
adc
sar
cmp
in
in
stc
clc
dec
rcrl
adc
adc
in
aaa
adc
add
aad
add
push
jp
mov
add
in
inc
js
cli
mov
in
dec
roll
adc
adc
inc
xchg
add
in
in
mov
jp
add
adc
push
cli
inc
mov
cltd
stos
add
adc
call
xchg
adc
adc
dec
ret
inc
inc
inc
mov
fwait
lds
repnz
fstps
cli
fwait
lret
shr
adc
mov
lret
xchg
repz
mov
mov
dec
dec
pop
rcrl
inc
mov
cltd
loop
sar
in
mov
in
inc
mov
cli
in
in
in
cltd
rcrb
in
in
lcall
ss
pop
dec
rcrl
pop
sbb
imul
lret
adc
adc
adc
stos
or
adc
push
inc
and
mul
pop
xchg
ret
call
ret
add
shlb
pop
dec
cmp
sub
add
ret
mov
adc
call
call
rclb
xchg
in
xor
adc
adc
call
fwait
loopne
call
xchg
xor
lahf
push
add
call
dec
rcrl
les
in
in
lcall
cltd
ret
cli
andl
cli
sbb
adc
adc
dec
dec
rcll
shl
lret
rcrl
add
rcrl
lea
sbb
loop
in
lcall
ss
mov
ss
push
ss
xchg
les
rcrl
add
ret
cltd
rcl
nop
inc
inc
inc
push
cltd
clc
cltd
clc
cltd
aad
loope
in
in
mov
test
stc
add
loope
adc
xor
loope
or
in
in
jmp
pop
xchg
jl
in
xor
inc
cltd
into
cmp
push
mov
cltd
aad
sbb
dec
pop
rcrl
cltd
repnz
lret
cltd
aam
xchg
fwait
in
in
push
js
cltd
ret
cli
xchg
fwait
in
inc
js
jp
push
add
cli
pop
lahf
in
in
xchg
clc
adc
or
dec
dec
rcll
cltd
loopne
clc
cltd
aam
fstl
js
mov
cli
inc
mov
in
cltd
call
in
in
cltd
fcoms
rcrl
cli
aam
in
in
inc
mov
and
cli
adc
dec
pop
dec
rcrl
adc
inc
push
inc
and
mov
cltd
repnz
push
out
xor
inc
jp
movsl
adc
fs
and
xor
in
lcall
xchg
in
call
push
out
call
cltd
lret
fs
adc
out
cwtl
inc
cmp
xchg
loopne
cli
add
inc
clc
cltd
sbb
cli
sbb
jne
and
pop
dec
dec
jbe
add
mov
add
test
in
shr
xor
stc
loop
pop
dec
dec
dec
pop
rcrl
incb
inc
cltd
jecxz
call
cli
in
sub
cltd
ret
cli
gs
in
in
mov
and
inc
jp
mov
and
and
cltd
cli
inc
lcall
inc
cli
rorl
and
inc
jp
mov
and
and
xor
inc
ljmp
mov
xchg
leave
je
inc
cli
rorl
cltd
aam
bound
dec
pop
dec
jbe
adc
stos
add
cltd
push
cld
inc
cli
sbbb
outsl
in
stc
std
and
dec
dec
dec
fs
add
stos
adc
mov
inc
call
sar
dec
jge
in
stc
out
dec
dec
dec
pop
dec
dec
rcll
js
cli
jns
in
in
push
cli
cmp
je
lahf
push
and
inc
jp
stos
adc
push
cli
sbb
in
in
aad
sbb
add
adc
inc
ss
adc
adc
lahf
inc
ss
inc
push
js
lea
push
push
js
cltd
inc
ss
inc
call
xchg
or
inc
ja
gs
jne
pusha
jnp
imul
adc
inc
cltd
incb
inc
and
mov
fwait
dec
repnz
pop
fcompl
fwait
dec
ret
lea
mov
cltd
enter
jp
mov
and
and
adc
call
lahf
push
ljmp
gs
in
xchg
rorb
xchg
adcb
adc
push
clc
inc
cli
js
in
in
xchg
shlb
push
negb
test
in
in
in
jne
jp
mov
repnz
nop
cld
in
in
in
jne
jp
mov
into
sbb
jl
in
in
in
jne
jp
mov
lret
inc
loop
dec
cld
in
in
in
jne
jp
mov
sbb
push
cld
in
in
in
jne
jp
mov
ret
inc
out
and
in
in
in
jne
cltd
sarl
cli
push
xchg
in
and
pop
dec
dec
jbe
add
mov
ret
add
adc
or
sti
icebp
imul
dec
dec
cltd
in
rcll
add
in
in
call
adc
add
adc
add
in
in
call
adc
add
adc
add
in
in
call
adc
add
adc
add
xor
inc
jp
test
add
jbe
xor
pop
in
aad
add
rorb
pop
jbe
add
test
adc
sti
cwtl
jnp
in
stc
clc
dec
rcrl
adc
adc
jbe
adc
adc
adc
adc
adc
jbe
adc
adc
adc
adc
adc
adc
adc
adc
adc
fs
adc
adc
pop
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
adc
add
adc
add
adc
adc
add
add
adc
push
pop
imul
push
jle
ja
xchg
aaa
in
adc
adc
repnz
adc
rcrl
push
cli
xchg
in
xchg
shlb
cli
jne
in
in
test
pushw
xor
dec
shll
inc
inc
inc
push
cltd
loop
add
in
in
mov
and
jmp
xchg
cs
sbb
in
in
in
mov
push
sub
insb
push
xchg
cltd
ret
dec
dec
dec
pop
rcrl
cltd
repnz
lret
cltd
fldcw
call
cltd
add
mov
adc
call
cltd
lret
xor
mov
cli
popf
xchg
in
cltd
add
mov
xor
lret
gs
add
scas
mov
xchg
in
in
mov
xchg
leave
jbe
lahf
pop
add
adc
call
cltd
add
mov
out
in
lcall
int
push
cli
mov
in
cltd
add
outsb
adc
cs
cltd
test
test
sub
cltd
stos
adc
add
test
add
adc
sbb
dec
rcll
add
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
add
push
inc
inc
fwait
dec
out
cltd
or
fistpl
push
inc
inc
cli
xor
lret
jmp
cli
cmp
in
in
mov
rcrl
dec
dec
ret
cltd
rclb
call
shll
rol
inc
inc
inc
mov
cltd
lret
sbb
adc
fwait
push
ss
mov
mov
ss
mov
push
ss
push
js
js
inc
cli
fdiv
in
in
cli
mov
adc
dec
pop
rcll
adc
and
and
and
and
inc
inc
inc
mov
cltd
lret
adc
fwait
push
and
adc
adc
adc
jle
push
xchg
push
cli
jns
in
cli
nop
in
in
fwait
push
dec
dec
dec
ret
inc
inc
inc
mov
fwait
push
and
lret
mov
add
push
ss
jp
adc
adc
in
adc
push
cli
jno
in
cli
inc
in
in
fwait
push
dec
dec
dec
ret
inc
inc
inc
mov
fwait
push
and
lret
mov
add
push
ss
jp
adc
adc
in
adc
push
cli
and
in
cli
xor
in
in
fwait
push
dec
dec
dec
ret
inc
xchg
clc
fwait
pop
ss
push
ss
mov
mov
push
ss
push
jp
add
adc
call
adc
adc
in
pushl
inc
lahf
inc
ss
inc
push
jp
in
add
inc
cli
in
in
in
mov
inc
lahf
push
and
inc
jp
add
adc
in
adc
inc
cli
fdiv
in
in
mov
mov
add
push
or
adc
adc
jp
in
adc
push
cli
mov
dec
pop
rcrl
push
inc
inc
cltd
repnz
lret
sbb
inc
out
adc
add
stc
pop
xor
fwait
push
cld
mov
mov
add
inc
out
inc
inc
push
inc
cli
fs
in
cli
gs
in
in
mov
fwait
add
pop
rclb
adc
sub
data16
cltd
add
dec
imul
in
cltd
add
call
add
in
in
decl
cltd
rolb
fcoms
je
inc
adc
add
aad
and
adc
lahf
push
ss
jp
add
adc
in
adc
mov
inc
cli
or
or
adc
push
lahf
push
and
inc
jp
adc
adc
in
adc
cltd
adc
out
lcall
in
in
pop
dec
rcrl
adc
inc
push
inc
and
mov
fwait
pop
loop
lret
mov
fwait
inc
out
cltd
or
mov
cli
mov
in
in
xor
inc
jp
lods
adc
fs
and
xor
push
hlt
in
in
in
call
xchg
jecxz
adc
lahf
push
loop
push
cld
cli
popa
out
in
cltd
inc
lock
push
out
call
cltd
aad
leave
test
adc
adc
cmp
in
je
adc
push
ljmp
je
inc
adc
out
in
xchg
shlb
push
cld
cli
inc
xchg
in
inc
cli
adc
in
in
mov
stc
cmp
adc
add
adc
add
out
cli
dec
outsl
in
in
subl
jne
aad
push
xor
cltd
push
cld
cli
or
aad
in
in
mov
inc
mov
test
adc
adc
cli
mov
in
in
mov
xchg
jge
in
data16
fcompl
call
xchg
outsl
out
data16
cltd
into
test
adc
adc
out
in
js
push
cltd
push
out
cli
popa
out
in
push
addr16
out
in
fwait
adc
push
out
inc
in
in
in
xor
dec
dec
pop
jbe
add
lods
adc
lahf
push
mov
cli
sub
in
lahf
push
cld
cli
sbb
sti
or
jmp
cltd
push
hlt
dec
dec
dec
mov
dec
rorb
adc
push
cltd
dec
push
push
inc
inc
inc
call
cltd
lret
cli
pop
out
in
cltd
inc
or
dec
rorb
adc
push
cltd
dec
push
push
inc
inc
inc
call
cltd
lret
cli
xor
in
cltd
inc
or
dec
rorb
adc
xchg
out
in
lcall
mov
push
sbb
adc
adc
shlb
js
js
lahf
push
ss
js
call
stc
add
adc
js
js
cli
int
in
in
adc
dec
dec
ret
inc
inc
inc
push
cltd
enter
in
push
inc
cli
test
in
in
cli
lods
jmp
xchg
sub
adc
cltd
aam
dec
dec
dec
ret
inc
cltd
incb
cltd
lret
cltd
repnz
push
ljmp
in
in
xor
inc
jp
rcll
add
jbe
xor
insl
in
inc
cli
loope
in
mov
xchg
jge
adc
cltd
push
out
lods
push
sbb
rclb
sar
adc
loop
and
shl
adc
push
cltd
add
out
stos
push
add
adc
pop
jnp
in
jmp
cli
add
in
in
mov
cltd
shr
sahf
outsb
in
stc
add
in
stc
adc
jp
in
and
dec
dec
dec
fs
add
rcll
add
push
xchg
data16
in
stc
loop
dec
cltd
negl
lahf
push
add
xchg
shlb
xchg
jno
in
cltd
ficompl
aam
jno
in
in
push
add
xor
mov
mov
jbe
in
decl
push
or
rcrb
mov
cli
aam
adc
aad
push
adc
add
aad
cmp
in
in
jmp
rcrb
and
or
push
sub
adc
add
sbb
in
fs
pop
adc
adc
xchg
les
cltd
aam
dec
rcrl
leave
arpl
in
mov
cltd
loop
push
sbb
call
dec
and
mov
inc
push
inc
cli
add
xchg
insb
jmp
cltd
cli
rcll
adc
cltd
cli
std
jge
in
xchg
leave
jle
cltd
aam
jle
in
decl
nop
inc
cltd
lret
pop
mov
ret
add
cli
hlt
cli
in
in
and
fwait
push
or
lahf
push
add
push
inc
inc
inc
mov
fwait
inc
cld
cltd
loop
inc
out
cli
hlt
jge
in
and
inc
jp
ret
adc
jbe
and
and
leave
lahf
inc
ds
lahf
inc
or
leave
cltd
lds
sti
in
in
fwait
inc
cs
insb
sbb
sbb
adc
push
cmp
cli
and
rcrb
cli
jne
in
in
mov
lahf
push
and
in
push
sbb
cli
stc
in
in
lahf
inc
or
add
cltd
push
cmp
shr
in
cltd
inc
cmp
aam
dec
in
in
in
lea
mov
mov
ret
adc
cli
in
in
xchg
jle
adc
lahf
pop
or
movsl
pop
mov
adc
cltd
push
cmp
cmc
jmp
in
xchg
insb
sbb
data16
pop
or
add
cltd
ret
cltd
push
cmp
fldpi
in
xchg
insb
sbb
data16
pop
mov
push
cmp
mov
adc
rorb
pop
jbe
add
rcll
adc
push
call
sti
fs
in
stc
lock
rorl
dec
dec
dec
ret
inc
inc
inc
push
xchg
ljmp
lret
xchg
imul
add
adc
mov
out
push
and
push
ss
rcrb
mov
cli
pushf
add
adc
inc
push
sub
jle
cltd
ljmp
cltd
inc
and
cltd
fisttpll
out
in
in
mov
xchg
clc
jmp
pop
je
stc
and
xor
xchg
shr
xchg
cli
adc
popw
cmp
addr16
or
xor
sar
clc
add
adc
sbb
adc
adc
push
xchg
sarb
cmp
test
insb
sbb
push
adc
push
xchg
in
add
sbb
xchg
in
in
cltd
xlat
sub
dec
dec
pop
dec
dec
dec
ret
inc
inc
inc
mov
aam
adc
and
mov
xchg
in
data16
js
lahf
inc
or
cli
mov
loop
in
adc
adc
sar
pop
adc
adc
rcrl
in
in
rcrl
in
rcrl
push
inc
cltd
jecxz
clc
cltd
ljmp
in
and
or
inc
inc
cltd
inc
cs
cli
test
in
in
mov
cmp
add
adc
and
in
loopne
push
ss
dec
dec
dec
pop
rcrl
cs
cli
sub
in
in
rcll
adc
cmp
in
in
rcll
sar
stc
in
in
rcll
xchg
insb
jmp
cltd
inc
or
pop
daa
adc
data16
and
cmp
pushw
and
stc
adc
or
adc
adc
adc
cltd
rolb
fcom
push
add
and
cltd
jae
xchg
in
jmp
stos
lock
add
rcrb
call
and
mov
dec
pop
rcrl
cltd
ficompl
xchg
shlb
cli
xchg
sahf
in
in
pop
and
fwait
inc
sbb
xchg
loopne
xchg
ljmp
pop
xlat
add
ja
add
jle
add
xlat
add
insb
xlat
add
xchg
xlat
add
adc
add
rorb
aad
push
adcb
adc
cmp
push
adc
adc
add
xor
inc
push
adc
add
stc
or
push
push
adc
adc
stc
adc
push
push
add
adc
jmp
aad
adc
push
adc
xchg
insb
add
popw
cltd
inc
push
inc
cli
std
cltd
in
in
pop
fwait
push
sbb
rcrl
lea
cltd
inc
cs
pusha
cli
in
in
xchg
jnp
adc
and
dec
ret
inc
cltd
xor
inc
jp
xlat
adc
fs
and
xor
pop
clc
aad
add
rorb
pop
jbe
add
xlat
adc
sar
mov
in
stc
clc
dec
rcrl
adc
adc
jp
adc
mov
insl
out
in
push
cli
add
sahf
leave
adc
xchg
cmp
adc
pop
sahf
fildl
add
adc
adc
shlb
aad
out
adc
out
adc
stc
or
pop
sahf
leave
adc
imul
in
aaa
mov
adc
cltd
rolb
xor
inc
jp
aam
add
jbe
xor
pop
nop
fistl
add
rorb
pop
jbe
add
aam
adc
sti
sbb
in
in
stc
clc
dec
rcrl
leave
adc
adc
jl
ja
xor
arpl
jge
jae
imul
pushaw
gs
xor
jbe
add
adc
add
xor
jb
pusha
adc
popa
pushaw
gs
xor
pusha
jge
adc
adc
jbe
popaw
xor
jb
pusha
adc
jnp
popa
jne
je
arpl
jl
xor
insl
jge
imul
addr16
ja
xor
pusha
jge
adc
adc
jnp
jno
jg
jae
jnp
jle
xor
popa
jnp
outsb
adc
adc
cltd
shl
jmp
in
rcrl
mov
inc
cltd
xor
cwtl
pop
or
push
sbb
jbe
in
pop
rcrl
decb
push
cltd
pop
adc
leave
jo
in
dec
rcll
aad
add
inc
push
adc
rcll
adc
and
and
adc
rcrl
inc
push
stos
add
add
xchg
add
in
in
push
pop
addr16
xchg
adc
adc
xchg
rcrb
push
and
data16
aam
leave
test
adc
adc
add
in
in
and
cwtl
rcrl
add
cltd
aam
mov
in
cli
mov
inc
and
stos
adc
ss
or
inc
sbb
jl
sbb
jle
lahf
push
and
fwait
adc
push
sbb
ss
xchg
add
fwait
push
or
push
add
xchg
adc
mov
and
call
cli
jne
in
test
cmp
lahf
xchg
xchg
adc
cltd
fstps
push
push
xchg
insb
add
roll
adc
lahf
inc
and
stos
adc
ss
or
inc
sbb
jl
sbb
jg
lahf
xchg
and
xchg
adc
fwait
push
push
push
add
adcb
cltd
test
adc
adc
sbb
adc
cli
add
push
ss
mov
cmp
xchg
push
adcb
cltd
lret
cltd
aad
sbb
inc
push
subl
add
xchg
jle
adc
aam
cltd
sbb
adc
ret
call
adc
dec
rcrl
fadds
jmp
mov
xchg
cmc
in
adc
xor
xchg
out
add
rcrb
sti
jecxz
adc
pusha
adc
jmp
in
adc
adc
xchg
jmp
in
adc
pusha
adc
out
jecxz
adc
cltd
aad
loopne
sbb
jmp
xchg
in
or
sti
call
std
add
jmp
and
mov
enter
cltd
int
xlat
in
test
addr16
sub
pusha
adc
stc
jecxz
add
stos
jecxz
adc
cltd
and
in
fwait
lds
or
sti
test
adc
xchg
std
mov
nop
fadds
adc
xchg
in
mov
dec
adc
adc
rorb
and
mov
fsts
jmp
adc
enter
fistpl
adc
and
cwtl
push
push
adc
add
and
mov
fsts
jmp
adc
enter
fistpl
adc
and
cwtl
push
sbb
enter
fisttpl
adc
and
cwtl
inc
sbb
enter
fistpl
adc
and
cwtl
push
push
adc
add
and
mov
fsts
jmp
sbb
enter
fistpl
adc
xchg
aam
dec
sbb
in
stos
icebp
in
adc
mov
and
mul
fwait
sarl
aad
shl
jecxz
xlat
xchg
out
mov
andl
test
adc
add
mov
call
and
cwtl
push
adc
adc
and
cwtl
push
adc
enter
fisttpl
adc
and
cwtl
push
adc
lret
xor
cwtl
inc
add
enter
fistpl
add
and
mov
fcoms
jmp
adc
xor
cwtl
pop
or
lret
adc
and
cwtl
inc
sbb
lret
and
mov
ficoml
jmp
sbb
lret
adc
xor
cwtl
push
or
lret
and
cwtl
push
pop
adc
add
and
mov
fsts
jmp
sbb
adc
xchg
std
add
in
jmp
and
mov
enter
cltd
int
xlat
in
test
addr16
mov
cltd
shll
shl
jecxz
shrl
cltd
aad
shl
mov
cltd
aad
repnz
ret
dec
dec
dec
pop
roll
inc
push
inc
cltd
cli
mov
ss
shll
stos
icebp
in
adc
mul
cltd
call
in
adc
mov
sbb
and
stos
jecxz
add
in
mov
cltd
push
and
clc
add
add
adc
adc
in
call
adc
ljmp
xlat
icebp
in
adc
dec
cmp
adc
adc
xchg
sti
jecxz
adc
fs
jmp
in
adc
xchg
jmp
fs
xchg
stc
jecxz
adc
xchg
lock
adc
fs
out
lock
adc
xchg
in
jecxz
adc
fs
xchg
cld
jecxz
adc
cltd
shl
add
rorl
pop
dec
dec
rcll
sbb
inc
cltd
dec
sbb
or
adc
call
dec
rclb
add
incb
fwait
pop
ljmp
push
push
push
out
add
adc
add
pop
dec
mov
xchg
outsl
sbb
data16
jmp
xchg
in
or
sti
roll
adc
rcrb
xor
jne
aad
and
aad
adc
fistpl
and
addr16
adc
xchg
jge
in
addr16
aad
out
push
adc
adc
sbb
rorb
or
and
cmp
subl
jl
xchg
outsl
sbb
out
adc
outsl
cld
sbb
subl
jl
xchg
outsl
adc
insb
sbb
sti
inc
adc
adc
adc
add
adc
mov
cltd
push
cmp
inc
xor
or
sti
xor
pop
push
fwait
and
or
cltd
inc
or
shl
inc
cmp
inc
and
cltd
push
push
adc
cltd
enter
shl
fwait
inc
dec
pop
fwait
inc
push
and
cltd
inc
pop
stos
adc
adc
xchg
rclb
in
fwait
push
inc
mov
cltd
push
cmp
xor
adc
adc
cmp
inc
xor
add
adc
sub
inc
xor
push
xchg
roll
stos
adc
add
shl
xchg
mov
adc
cltd
rcrb
xor
cwtl
add
adc
lock
xor
data16
push
xchg
imul
sbb
jne
aad
add
adc
add
fwait
push
sbb
adc
mov
stc
push
cltd
xchg
mov
add
clc
adc
adc
fwait
xorl
mov
adc
lahf
or
adc
fwait
cltd
xchg
adc
cltd
inc
out
fwait
xchg
adcb
adc
fwait
adcl
and
adc
add
dec
dec
mov
dec
rclb
addb
inc
fwait
push
and
clc
cltd
clc
cltd
es
data16
push
xchg
pushl
push
sbb
push
add
cltd
inc
push
xchg
push
adc
subl
je
stos
in
in
in
sti
mov
adc
mov
xchg
jnp
adc
cltd
push
and
cli
jno
in
fwait
push
xor
and
jmp
cltd
push
cmp
sub
or
cmp
add
inc
inc
mov
inc
call
fwait
popa
jp
popa
dec
cltd
dec
es
adc
cwtl
add
es
dec
inc
shl
movsb
inc
adc
shlb
push
push
fwait
push
push
xor
stc
and
pop
inc
cltd
push
push
shl
pop
es
xor
xor
fwait
inc
push
mov
je
push
inc
cltd
dec
and
fimull
push
pop
cltd
push
push
cltd
pop
inc
je
push
dec
push
cltd
les
shll
rorb
pop
dec
roll
lock
in
adc
push
xchg
jle
adc
xchg
insb
add
stos
in
in
in
pop
dec
shll
shlb
rcrb
or
aad
sub
adc
add
push
cltd
push
sbb
or
lret
sbb
adc
adc
pop
test
add
adc
xor
and
call
fwait
push
and
fistpl
cli
movsl
add
adc
adc
and
dec
dec
rcll
xchg
shlb
xchg
push
add
stos
in
in
in
pop
dec
rcrl
mov
je
add
je
loop
xchg
sar
in
je
and
je
andl
inc
push
inc
cltd
jmp
enter
shlb
subl
jne
stos
in
in
in
sti
mov
bound
xchg
sti
in
addr16
mov
xchg
leave
outsb
push
xchg
jmp
in
jl
xchg
in
add
adc
in
jmp
cltd
pushf
adcb
adc
pop
cltd
push
mov
adc
mov
sub
data16
push
test
add
adc
inc
adc
adc
adc
adc
mov
movsl
push
mov
mov
mov
mov
fwait
mov
movsl
push
lods
cli
mov
adc
adc
mov
push
lods
test
adc
mov
dec
dec
pop
dec
dec
rcll
shlb
subl
jne
stos
in
in
in
stc
sbb
sbbb
jl
inc
push
mov
cltd
pop
or
dec
rorb
adc
pop
pop
sar
adc
adc
fadds
fsts
pushw
xchg
push
add
cltd
rorl
inc
push
xchg
push
sbb
pop
sbb
pop
rcrl
adc
dec
roll
adc
push
push
mov
lahf
or
inc
cltd
lret
sbb
sbb
adc
push
sbb
sbb
nop
inc
cltd
lret
push
push
mov
cltd
jo
sub
jbe
cltd
loopne
in
and
push
cltd
inc
push
push
cli
adc
in
xchg
or
aam
inc
push
cltd
inc
sbb
push
add
popa
push
cmp
cltd
pop
sbb
arpl
mov
xchg
js
adc
cltd
inc
sbb
roll
inc
push
inc
cltd
call
je
xchg
insb
sbb
sbb
xchg
in
outsl
or
sti
xchg
adc
xchg
jle
adc
subl
push
xchg
insb
push
add
xchg
jnp
mov
add
addr16
adc
fwait
push
sbb
sti
jae
adc
xchg
jle
adc
cltd
pop
mov
in
in
in
mov
dec
adc
adc
fwait
imul
seta
pop
sub
sti
sbb
repz
xchg
rcrl
repz
adc
jge
xchg
test
add
and
stc
xor
add
stos
adc
adc
stc
adc
stos
adc
adc
stc
add
adc
repnz
sbb
xchg
jnp
adc
xchg
mov
inc
and
stos
or
jecxz
or
cmp
add
cltd
rol
push
push
arpl
adc
cltd
sar
xchg
in
in
xchg
imul
and
call
cltd
inc
and
in
adc
call
and
and
and
cli
or
push
and
sbb
in
in
in
subl
and
push
and
in
in
jmp
sar
push
xor
push
cmp
outsb
or
cltd
pop
mov
in
in
in
mov
inc
adc
adc
adc
sbb
add
cltd
adc
stos
jmp
inc
sbb
xor
add
xchg
insb
add
or
adc
xchg
in
setbe
imul
xchg
mov
xchg
xchg
adc
add
cltd
ds
mov
adc
push
subl
adc
cs
addr16
add
adc
push
xchg
cs
xchg
jle
adc
aad
ss
in
in
in
xor
sti
cmpsl
add
adc
pop
xchg
in
adc
cltd
shr
xchg
xor
add
es
and
and
cltd
sar
mov
in
adc
cltd
inc
push
mov
je
push
pop
in
add
cltd
push
dec
pop
adc
push
js
cltd
push
push
inc
cli
jno
in
in
adc
cltd
cli
inc
out
in
xchg
insb
adc
addr16
push
ss
in
in
and
stc
inc
xchg
call
pushw
xor
stc
pop
subl
jg
stos
adc
adc
stc
aas
cltd
inc
and
cli
jmp
inc
xor
in
adc
cli
stc
out
in
cltd
aam
push
out
in
lcall
insb
pop
test
imul
sar
stos
add
adc
pop
dec
dec
dec
pop
roll
cltd
fcoms
imul
in
in
in
pop
dec
rcrl
add
in
cmp
in
inc
ss
pop
or
dec
data16
xchg
in
jno
add
add
stos
in
in
in
pop
dec
rcrl
or
ret
cmp
inc
and
inc
push
mov
xchg
shlb
rcrb
ss
push
push
cltd
push
cmp
shlb
cltd
ret
cmp
inc
and
inc
push
mov
xchg
shlb
rcrb
ss
push
push
cltd
push
sub
inc
ss
xchg
in
jno
inc
push
jne
stos
out
in
in
stc
add
rorb
addb
inc
fwait
push
and
loop
cmp
adc
xchg
in
or
push
adc
stos
in
in
in
sti
push
push
ss
jp
js
mov
push
push
inc
cli
xor
in
in
xchg
les
stos
scas
push
adc
test
adc
adc
xor
sbb
sti
and
add
fwait
dec
sbb
scas
add
adc
call
xchg
push
mov
stos
adc
adc
cltd
push
cmp
xor
adc
adc
cmp
inc
and
adc
add
cmp
push
xor
adc
adc
adc
xor
xchg
jnp
adc
xchg
imul
jnp
adc
xchg
imul
cli
popa
in
in
stos
out
in
in
sti
lods
adc
adc
inc
cltd
pop
xor
cltd
push
xor
cli
je
in
in
xchg
les
cltd
inc
sub
rolb
cs
mov
inc
call
xchg
push
mov
adc
inc
cltd
pop
inc
inc
cltd
push
inc
inc
cli
sub
in
in
xchg
les
cltd
inc
or
cltd
pop
or
push
or
xor
in
in
cltd
push
add
sbb
inc
sbb
nop
adc
adc
adc
sti
add
adc
lea
fwait
mov
mov
lahf
push
inc
adc
mov
fwait
adcl
push
add
fwait
cltd
and
adc
mov
and
pop
dec
dec
dec
pop
roll
cltd
lock
cltd
call
lret
popa
adc
add
sar
das
cmp
inc
push
xchg
jp
adc
cltd
fstps
call
fwait
push
and
sbb
push
cli
xchg
loop
in
xchg
or
rcll
push
adc
dec
dec
rcll
push
cmp
rcrb
cltd
dec
pop
je
inc
pop
in
adc
cltd
push
pop
dec
adc
inc
push
cltd
inc
inc
inc
cli
and
in
in
cltd
mov
push
lea
pop
sbb
mov
outsb
cltd
addl
push
xchg
mov
lcall
add
adc
adc
cli
mov
add
adc
rcrb
lea
pop
sbb
mov
push
inc
push
fwait
pop
dec
mov
test
adc
adc
rcrb
dec
mov
and
fwait
pop
push
pop
roll
inc
adc
fwait
adc
cltd
inc
js
inc
ss
inc
jp
pop
es
js
cltd
mov
sbb
fcomps
adc
adc
sub
add
push
adc
adc
stc
adc
fistpl
inc
mov
add
ss
cltd
push
es
dec
cmp
adc
lcall
adc
lcall
sub
pusha
add
adc
or
fwait
pop
sbb
and
push
sub
dec
or
xchg
mov
add
cwtl
dec
ds
sub
or
adc
xchg
xchg
adc
adc
sub
jne
xchg
roll
push
push
push
mov
sub
or
or
es
push
mov
sub
or
or
ss
push
mov
sub
or
or
push
push
push
mov
sub
or
or
push
sub
ja
cltd
enter
test
pop
cmp
lahf
mov
in
in
ljmp
jmp
mov
cltd
sti
sub
or
cwtl
pop
sub
lcall
lcall
xor
adc
data16
push
cmp
push
jbe
in
pop
and
sbb
in
mov
cltd
iret
sub
pusha
add
sar
add
dec
dec
pop
roll
inc
mov
cltd
jo
adc
adc
cltd
lret
cltd
jmp
adc
adc
sub
sbb
sub
adc
adc
adc
jl
roll
xchg
aam
inc
push
cwtl
or
or
cs
push
cwtl
or
or
es
push
cwtl
or
or
ds
push
cwtl
or
or
ss
push
cwtl
or
or
push
inc
push
cwtl
or
or
push
inc
push
cwtl
or
or
push
inc
push
cwtl
or
or
push
cmp
gs
sub
stos
adc
adc
cmp
xchg
jmp
jge
stos
adc
adc
stc
setnp
mov
sub
popa
adc
pop
dec
dec
rcll
lret
mov
cltd
jnp
cmp
cmp
jmp
xchg
in
jne
xchg
imul
bound
jne
cltd
in
jmp
xchg
in
jmp
pop
mov
aas
push
adc
adc
aam
push
push
push
es
rcrb
inc
cli
gs
in
in
adc
cmp
cmp
cmp
mov
cltd
rclb
rclb
push
xchg
clc
add
sub
sbb
push
ss
stc
add
pop
loopew
aam
rclb
rclb
cs
clc
add
sub
sbb
push
ss
stc
add
pop
loopew
in
cltd
sub
inc
cltd
push
es
fldl
inc
jp
lds
inc
call
adc
subl
jb
cltd
push
xor
inc
jp
movsb
push
add
inc
shl
inc
es
dec
jp
movsb
push
sbb
and
xor
mov
xchg
jnp
adc
add
popa
push
mov
xchg
push
adc
in
pop
dec
dec
dec
pop
roll
lret
fwait
push
and
in
in
add
cltd
push
or
cli
pop
cmp
adc
adc
mov
cli
aam
in
in
cltd
inc
bound
cs
addr16
add
adc
add
adc
add
fwait
dec
bound
jp
aam
shlb
ja
cmp
mov
fwait
inc
jp
adc
dec
xchg
imul
adc
stc
adc
rcrb
add
dec
cltd
add
cmc
out
in
cltd
add
adc
adc
add
dec
cmp
cltd
pop
cmp
adc
ret
seto
in
js
mov
cmp
xchg
sarb
inc
xor
inc
dec
jmp
and
mov
cli
dec
sbb
adc
pop
cltd
adc
xchg
out
in
mov
xchg
push
sub
in
in
xor
stc
ja
xor
in
call
xchg
xor
inc
mov
cmp
xchg
imul
adc
stc
adc
rcrb
add
dec
cltd
add
pop
out
in
cltd
add
add
adc
add
add
sar
xchg
cmp
push
addr16
stos
adc
add
stc
pop
mov
dec
dec
dec
ret
inc
inc
inc
push
fwait
push
ss
and
subl
popa
es
sar
jne
in
in
mov
das
push
adc
adc
xchg
cs
addr16
add
adc
add
adc
inc
cltd
pop
inc
mov
shl
pop
jp
inc
es
xor
xor
fwait
push
push
mov
cltd
push
jp
inc
xor
inc
cltd
pop
cs
je
push
inc
je
pop
jp
inc
push
cltd
inc
inc
je
push
push
xchg
in
dec
cltd
push
jp
inc
cmp
add
aam
ret
cltd
adcl
adc
ljmp
sar
leave
call
dec
stc
pop
xchg
test
adc
cltd
inc
push
adc
mov
cltd
shr
xor
in
lcall
dec
adc
nop
adc
adc
jp
cltd
mov
cmp
mov
cwtl
inc
pop
je
push
jns
clc
adc
adc
orl
xchg
adc
lcall
adc
xor
cwtl
cwtl
add
ret
xchg
cltd
xchg
adc
add
sbb
add
sbb
adc
add
and
mov
je
test
cltd
cltd
cwtl
add
adc
cltd
mov
adc
sbb
add
bound
jl
dec
xchg
jnp
adc
in
pop
dec
call
cltd
dec
inc
cltd
inc
inc
shl
dec
es
popa
push
adc
ret
and
fwait
push
push
cltd
pop
inc
je
push
push
cltd
pop
jp
pop
and
adc
sbb
push
mov
je
imul
dec
dec
stos
call
sti
mov
adc
mov
and
adc
mov
cltd
dec
jp
inc
xor
movsb
push
or
inc
cltd
jnp
shl
pop
es
xor
xor
fwait
inc
push
jmp
cltd
push
xor
inc
jp
push
add
add
adc
pop
adc
cltd
orl
add
adc
add
adc
xchg
addb
adc
add
xchg
pushf
add
adc
xchg
xchg
loopne
in
pop
jo
push
jp
rcrb
in
push
cltd
pop
push
imul
xor
inc
dec
jmp
and
mov
cli
dec
sbb
adc
pop
cltd
adc
xchg
loopne
in
mov
xchg
push
je
in
in
xor
stc
ja
jns
in
call
xchg
xor
inc
mov
cmp
xchg
imul
adc
stc
adc
rcrb
add
dec
cltd
add
push
loopne
in
cltd
add
add
adc
add
add
sar
xchg
cmp
push
addr16
stos
adc
add
stc
pop
mov
dec
dec
dec
pop
roll
inc
adc
and
cltd
lret
ss
imul
xor
ret
cli
jns
in
cltd
push
jo
adc
add
popa
pop
subl
adc
and
jmp
xchg
rcrb
add
push
cltd
dec
inc
cltd
push
inc
shl
dec
jp
inc
xor
movsb
inc
or
and
and
fwait
inc
push
cltd
pop
inc
cltd
inc
jp
inc
and
push
cltd
dec
cs
push
push
je
pop
push
inc
push
je
push
inc
cltd
inc
dec
fwait
push
je
inc
jle
inc
jb
inc
dec
adc
add
xchg
in
xchg
xchg
adc
adc
outsb
jae
cltd
push
push
clc
adc
add
cmp
cmp
gs
xchg
xchg
adc
adc
xchg
clc
adc
mov
cltd
shr
mov
in
lcall
xchg
test
add
cltd
push
jp
les
cltd
les
in
fwait
push
pop
xchg
imul
xchg
adc
add
pushw
subl
jne
cltd
pop
push
jmp
add
adc
push
dec
adc
adc
cltd
inc
xchg
ljmp
adc
inc
dec
sbb
adc
bound
ss
cltd
push
push
adc
pop
mov
je
inc
jb
inc
je
fwait
push
jns
clc
adc
adc
orl
xchg
adc
lcall
adc
xor
cwtl
cwtl
add
ret
xchg
cltd
xchg
adc
add
sbb
add
sbb
adc
add
and
mov
je
test
cltd
cltd
cwtl
add
adc
cltd
mov
adc
sbb
add
inc
bound
push
jp
dec
jp
pop
and
gs
mov
cltd
jae
shl
inc
es
dec
jp
movsb
push
sbb
and
xor
mov
cltd
dec
push
je
adc
cltd
pop
push
popa
je,pn
push
pop
sbb
mov
cltd
dec
push
je
jnp
je
cmp
in
pop
je
mov
jbe
push
dec
adc
adc
in
inc
jp
rorb
xchg
fsubrp
in
js
mov
cmp
xchg
imul
adc
stc
adc
rcrb
add
dec
cltd
add
mov
in
cltd
add
xchg
xchg
in
and
jmp
sti
lcall
adc
adc
jp
push
or
cltd
andl
adc
pop
adc
mov
in
xchg
pushf
add
adc
adc
adc
adc
xchg
adcb
adc
adc
xchg
mov
adc
sbb
add
adc
pop
xchg
imul
adc
stc
adc
rcrb
adc
mov
fwait
dec
dec
cltd
adc
push
std
in
in
push
jp
pop
bound
add
in
and
sti
rcll
adc
int
in
in
aad
jbe
adc
adc
push
push
fucomip
in
call
inc
cltd
push
es
pop
push
cltd
xorl
add
dec
adc
cltd
xchg
mov
add
xchg
mov
adc
cltd
mov
push
add
je
xchg
addl
mov
adc
pop
cmp
sbb
adc
fistpl
ss
xchg
xor
inc
mov
cmp
xchg
imul
adc
stc
adc
rcrb
add
dec
cltd
add
push
cld
in
cltd
add
add
adc
add
add
sar
xchg
cmp
push
addr16
stos
adc
add
stc
pop
mov
dec
dec
dec
pop
dec
rcrl
nop
inc
cltd
lret
in
in
lcall
adc
add
adc
add
xchg
push
or
adc
xchg
xor
adc
and
aad
cmp
adc
fidivrl
or
adc
andl
adc
into
mov
xchg
mov
adc
add
fwait
xchg
mov
rcl
xchg
mov
adc
or
adc
call
dec
roll
mov
aad
add
push
xchg
rcll
call
jl
and
lea
je
add
adc
rcll
xchg
cli
or
loopne
rcrb
data16
adc
push
xchg
roll
call
aad
adcb
add
adc
shlb
fistpl
add
adc
add
adc
nop
inc
inc
inc
adc
fwait
or
cltd
push
and
sahf
lcall
ss
mov
push
mov
ss
lahf
sahf
sbb
adc
pop
ss
lea
cwtl
sti
pushf
adc
adc
mov
outsl
pop
mov
adc
add
je
sbb
je
sbb
pusha
and
mov
cltd
mov
adc
mov
test
or
or
adc
add
cwtl
mov
inc
push
adc
sub
adc
push
cltd
pushf
mov
je
sbb
je
sbb
cltd
mov
adc
test
sub
addr16
cwtl
sbb
mov
push
push
adc
jbe
cltd
push
and
scas
mov
mov
adc
cmp
sbb
in
mov
ss
dec
ss
fwait
mov
xchg
or
dec
dec
ret
inc
inc
inc
push
xchg
lret
ss
inc
push
cltd
and
push
sbb
rcrb
sbb
and
cltd
pop
or
push
add
rcrb
or
adc
adc
inc
xchg
rcll
sub
insb
repnz
push
mov
ss
xchg
inc
push
adc
cltd
xchg
data16
test
adc
cltd
or
cltd
adcl
adc
inc
ss
outsb
ss
adc
add
push
lea
adc
add
mov
shld
add
sarb
cltd
ret
xor
inc
mov
sub
add
jle
cmp
je
test
sbb
adc
in
mov
or
dec
add
jmp
mov
push
mov
adc
cltd
mov
outsb
ss
movsl
outsb
and
adc
or
add
xchg
outsb
and
adc
cltd
inc
or
adc
or
sbb
and
cmpl
rcll
outsb
and
das
adc
adc
in
subl
add
adc
and
sahf
inc
cmp
adc
jmp
pop
xchg
shr
xchg
cmp
data16
push
ss
sahf
inc
sub
adc
cltd
or
je
test
sbb
adc
cltd
adc
je
mov
sbb
adc
xchg
jl
xor
jg
cltd
ret
ss
rcrb
adc
mov
ss
cltd
push
and
sbb
mov
push
lea
adc
dec
ss
xchg
shr
sbb
pop
ss
jg
sbb
sub
data16
mov
pushf
adc
movsl
cs
bsr
cltd
cmp
adc
data16
inc
pushf
add
leave
jne
pop
xchg
inc
ss
test
addr16
cmp
dec
dec
rcll
lret
ss
fwait
adc
and
mov
lahf
dec
or
cltd
sub
in
adc
cltd
in
mov
push
xchg
ret
adc
sbb
lea
sub
insl
cmp
movsl
and
mov
sbb
push
data16
cli
nop
sbb
adc
in
push
adc
sub
insb
lret
cmp
dec
roll
push
xchg
loop
lret
mov
ss
add
cltd
cmp
sbb
push
lea
cltd
pop
or
rcrb
inc
ss
in
in
in
fwait
sbbl
add
push
adc
das
adc
add
data16
adc
adc
fwait
data16
xchg
pop
adc
adc
add
adc
adc
stc
push
je
push
add
adc
rclb
cmp
sbb
inc
subl
add
in
inc
ss
cltd
inc
ss
stc
add
shr
sbbl
add
push
adc
fwait
xchg
sbbl
push
scas
add
adc
test
inc
push
add
adc
mov
outsb
ss
sbb
ss
shld
add
cmpl
add
outsb
mov
push
ss
inc
ss
fwait
inc
push
cltd
mov
shr
imul
les
xchg
adc
mov
cltd
mov
cli
cmp
in
pop
sub
outsl
out
cltd
outsb
or
adc
add
adc
mov
adc
or
adc
add
cli
dec
sti
in
in
cltd
orl
add
cltd
inc
adc
adc
add
adc
lcall
cltd
cltd
push
push
adc
mov
adc
xchg
adc
inc
cmpsl
add
je
pop
scas
adc
adc
sub
sbb
adc
stc
pop
cwtl
sahf
adc
adc
lcall
stos
adc
adc
je
outsb
xchg
adc
cmpsl
adc
add
cli
in
in
xchg
mov
adc
in
lcall
cltd
xchg
push
push
adc
mov
fwait
xchg
cltd
rcrl
sti
in
in
lahf
mov
sbb
add
xlat
cli
mov
in
in
adc
dec
pop
dec
dec
rcll
fwait
dec
ss
fwait
add
aad
and
in
in
in
sbb
in
adc
push
adc
adc
cwtl
add
adc
mov
push
data16
test
in
in
and
xchg
rclb
outsb
sbb
inc
sbb
inc
ss
setge
rorl
movsl
or
fsubrl
enter
insl
stc
pop
cmp
insb
pop
mov
ss
cmpsb
subb
adc
cmp
shlb
inc
ss
sbb
test
cltd
push
and
in
xchg
mov
or
cltd
or
je
subl
je
adc
adc
and
fwait
push
ss
xchg
stos
mov
adc
mov
stc
or
fisubl
stos
push
adc
adc
stc
sbb
mov
in
push
or
cltd
inc
and
sub
push
sbb
in
adc
dec
pop
dec
roll
push
xchg
lret
lods
push
add
adc
adc
stos
adc
inc
ss
in
in
in
cltd
adc
sbb
in
sbb
lods
add
adc
xor
fwait
inc
and
cltd
push
and
rclb
inc
ss
sbb
inc
ss
setge
adc
adc
ss
sbb
insb
sbb
loopne
sbb
out
pop
adc
sti
aad
add
sub
setl
adc
adc
sbb
adc
cmp
sub
sbb
add
sbb
add
cltd
jle
add
adc
divl
cmpsb
add
adc
push
mov
lahf
dec
pop
adc
cwtl
lcall
in
lcall
push
push
cltd
push
adc
mov
cmpsb
add
adc
jmp
dec
lcall
adc
lcall
jle
adc
out
je
mov
xchg
std
adc
stos
stos
push
adc
fwait
mov
stc
or
mov
adc
add
sbb
adc
pop
sbb
in
jmp
xchg
rcrb
sub
or
xchg
scas
add
adc
or
adc
sub
sub
setg
movsl
mov
fwait
pop
and
je
insb
ss
cltd
mov
shl
sbb
cltd
dec
push
in
push
adc
jp
lea
adc
cwtl
lcall
in
lcall
push
push
mov
lahf
dec
pop
adc
movsl
lcall
sbb
dec
adc
cmp
sbb
shr
fwait
mov
xchg
out
add
stos
mov
stos
stos
add
adc
or
cltd
mov
adc
adc
je
mov
add
pop
sbb
add
stos
add
adc
cmp
sub
sbb
add
adc
mov
or
jle
sbb
adc
je
test
add
add
push
cltd
push
adc
mov
xchg
repz
push
in
inc
push
cltd
jp
lahf
pop
pop
add
movsl
mov
jmp
pop
lcall
add
lcall
jle
or
out
je
test
add
add
stos
add
adc
adc
pcmpeqb
add
adc
je
test
add
add
stos
stos
push
adc
lods
add
adc
mov
cmp
sub
outsl
gs
ret
out
cltd
lcall
je
in
sbb
mov
in
inc
push
cltd
jp
lahf
pop
pop
add
cwtl
mov
repz
mov
cltd
dec
push
in
push
adc
jp
lea
adc
movsl
lcall
sbb
pop
adc
sub
sbb
je
mov
std
adc
stos
stos
push
adc
fwait
mov
sti
cmc
adc
adc
out
in
cltd
mov
shl
sbb
adc
sti
aad
add
xchg
jmp
add
adc
add
stos
add
adc
cmp
sub
sbb
add
adc
mov
push
cwtd
jle
sbb
lcall
divl
cmpsb
add
add
push
cltd
push
adc
mov
xchg
repz
push
in
inc
push
cltd
jp
lahf
pop
pop
add
movsl
mov
jmp
pop
lcall
add
lcall
jle
push
shr
je
test
add
add
stos
add
adc
adc
pcmpeqb
add
adc
je
test
add
add
stos
stos
push
adc
lods
add
adc
mov
cmp
sub
outsl
gs
ret
out
cltd
lcall
je
in
sbb
mov
in
inc
push
cltd
jp
lahf
pop
pop
add
cwtl
mov
repz
mov
cltd
dec
push
in
push
adc
jp
lea
adc
movsl
lcall
sbb
pop
adc
sub
sbb
je
mov
std
adc
stos
stos
push
adc
fwait
mov
sti
imul
ret
out
in
cltd
mov
shl
sbb
adc
sti
dec
adc
adc
adc
stos
add
add
cmp
cmp
sbb
adc
movsl
lcall
xor
xor
adc
je
mov
mov
in
inc
push
cltd
jp
lahf
pop
pop
add
cwtl
mov
repz
mov
cltd
dec
push
in
push
adc
jp
lea
adc
movsl
lcall
sbb
pop
adc
sub
sbb
sar
fwait
mov
cmp
adc
fwait
stos
stos
push
adc
stc
sbb
sbb
adc
adc
je
mov
add
lods
adc
adc
adc
sub
sub
jge
xchg
shl
cltd
lcall
je
mull
mov
cltd
dec
push
in
push
adc
jp
lea
adc
cwtl
lcall
in
lcall
push
push
mov
lahf
dec
pop
adc
movsl
lcall
sbb
dec
adc
cmp
sbb
je
cwtl
cmpsb
add
add
stos
add
adc
adc
or
out
cltd
mov
shl
sbb
adc
and
fwait
push
ss
xchg
mulb
stos
mov
adc
mov
stc
or
repnz
stos
push
adc
adc
stc
sbb
mov
in
push
or
cltd
inc
and
sub
push
sbb
in
adc
dec
pop
dec
dec
rcll
addl
adc
in
in
lahf
xchg
xchg
sbb
add
adc
in
lahf
subl
cli
xor
in
in
stos
adc
adc
mov
and
cwtl
or
mov
adc
adc
dec
pop
xchg
ljmp
xchg
rclb
adc
dec
ret
inc
cltd
incb
inc
fwait
pop
clc
fwait
inc
out
mov
stos
pop
add
adc
sub
cltd
mov
cmp
outsl
pusha
mov
xchg
ret
in
lcall
shl
sbb
cltd
dec
push
in
push
adc
popa
sbb
cwtl
cltd
cmpsb
push
adc
xchg
loope
lcall
push
cltd
popa
or
movsl
cltd
mov
adc
shr
dec
mov
add
adc
cmp
sbb
je
xchg
cmpsb
add
add
stos
add
adc
adc
or
cltd
cltd
mov
xchg
shr
je
lock
adc
stos
pop
adc
adc
cmp
cltd
mov
sub
outsl
jg
push
ljmp
shl
je
mov
add
add
push
cltd
jae
lahf
push
push
inc
dec
cwtl
mov
repz
mov
pop
adc
push
push
mov
lahf
or
inc
sbb
add
shr
or
mov
cmp
sbb
data16
andl
mov
xchg
stos
add
adc
or
mov
je
ret
je
lock
xchg
cmpsb
add
add
xchg
stos
push
adc
stos
add
adc
mov
cmp
cltd
mov
add
add
les
cltd
inc
sbb
cltd
loopne
shl
je
mov
add
add
push
cltd
jae
lahf
push
push
inc
dec
cwtl
mov
repz
mov
pop
adc
push
push
mov
lahf
or
inc
sbb
add
shr
or
mov
cmp
sbb
data16
andl
mov
xchg
stos
add
adc
or
mov
je
ret
je
lock
xchg
cmpsb
add
add
xchg
stos
push
adc
and
stos
loop
add
sub
sbb
adc
add
adc
cmp
sub
outsl
insl
and
cwtl
sbb
or
adc
jge
cltd
cltd
mov
shl
or
cltd
pop
adc
push
push
mov
lahf
or
inc
dec
mov
xchg
repz
in
push
adc
imul
shld
sar
sbb
bts
adc
adc
cltd
mov
movsl
outsl
out
in
je
mov
xchg
cld
add
mov
fwait
mov
jmp
sbb
stos
push
adc
je
scas
test
je
cmc
je
mov
adc
push
inc
sub
setle
in
cltd
pop
cld
pop
lahf
adcl
in
in
cltd
dec
ljmp
add
in
in
pop
dec
dec
cltd
in
rclb
add
incb
fwait
pop
ljmp
test
stos
adc
adc
sub
cltd
cmpb
outsl
jnp
fcomps
je
andb
adc
push
push
mov
lahf
adc
inc
dec
mov
xchg
repz
in
push
adc
inc
sbb
movsl
andb
sbb
adc
cmp
shld
sar
fwait
xorb
adc
fwait
mov
push
cltd
lcall
hlt
je
mov
add
add
mov
add
out
cli
mov
adc
pop
dec
dec
dec
pop
rclb
adc
lret
add
adc
sub
cltd
mov
cmp
outsl
bound
cltd
fcompl
shl
je
mov
add
add
push
cltd
jae
lahf
push
push
inc
dec
cwtl
mov
repz
mov
pop
adc
push
push
mov
lahf
or
inc
sbb
add
shr
or
mov
cmp
sbb
data16
andl
mov
xchg
stos
add
adc
or
adc
mov
je
loop
sbb
add
stos
shrb
adc
mov
sbb
sub
outsl
popa
test
mov
add
divl
sbb
cltd
dec
push
in
push
adc
popa
sbb
cwtl
cltd
cmpsb
push
adc
xchg
loope
lcall
push
cltd
popa
or
movsl
cltd
mov
adc
shr
dec
mov
add
adc
cmp
sbb
je
xchg
cmpsb
add
add
stos
add
adc
adc
or
cltd
mov
ret
adc
shl
or
adc
mov
cli
or
adc
add
stos
add
adc
fadds
pop
adc
add
stos
add
adc
cmp
sub
insb
jo
adc
add
cltd
fmuls
shl
or
cltd
pop
adc
push
push
mov
lahf
or
inc
cwtl
xchg
cmpsb
add
add
lock
in
push
adc
pop
sbb
movsl
cltd
cmpsb
push
adc
sar
sbb
or
cmp
shld
sar
fwait
xorl
add
add
adc
sbb
add
adc
je
xchg
cmpsb
add
add
xchg
stos
push
adc
stos
sarb
adc
add
adc
cmp
outsl
popa
mov
sbb
cltd
call
out
sbb
mov
in
inc
push
cltd
popa
or
cwtl
cltd
mov
adc
xor
lcall
push
cltd
jae
lahf
push
push
inc
sbb
adc
shr
sbb
sbb
adc
adc
sub
sbb
je
andl
stos
push
adc
fwait
subl
cltd
mov
ret
add
je
lock
adc
cltd
sar
adc
adc
xchg
mov
adc
adc
pop
roll
incb
inc
cltd
lret
out
and
cltd
sbb
xchg
mov
adc
in
jbe
cltd
add
adc
adc
push
or
adc
in
lahf
andl
sar
cmp
in
in
cltd
ret
cli
aad
in
fwait
push
clc
cltd
xchg
mov
adc
cltd
xchg
mov
rcrb
adc
shr
adc
clc
add
shlb
cltd
sar
add
rcrb
pusha
sbb
add
cltd
inc
cld
cltd
sar
loope
in
in
jmp
xchg
test
push
je
sub
seta
add
adc
sub
sub
jge
lahf
inc
add
adc
sbb
cltd
dec
push
in
push
adc
imul
pop
cwtl
cltd
cmpsb
push
adc
xchg
loope
lcall
push
cltd
imul
sbb
adc
shr
dec
mov
adc
mov
movsl
rcl
je
xchg
cmpsb
add
add
stos
add
adc
adc
push
cltd
cltd
mov
les
adc
je
xorl
stos
inc
test
mov
add
adc
sti
int
adc
mov
test
adc
adc
ret
stos
add
adc
lea
mov
call
sbb
cltd
pop
push
call
cltd
jnp
lahf
push
cmovae
mov
repz
mov
push
push
mov
lahf
or
inc
sbb
add
shr
or
sbb
add
cltd
stos
push
adc
sbb
data16
andl
mov
xchg
stos
add
adc
push
mov
cltd
les
rclb
shl
or
adc
mov
push
push
cltd
rcrl
add
adc
cli
jno
in
lahf
cltd
test
adc
lea
cltd
shr
mov
sar
jno
in
in
test
adc
cli
and
adc
dec
pop
dec
dec
dec
pop
rclb
adc
mov
add
adc
popa
cltd
cwtl
mov
add
xchg
mov
adc
cltd
mov
add
add
inc
dec
mov
sbb
xchg
lcall
in
xchg
lods
add
adc
movsb
fwait
add
xchg
lcall
adc
add
popa
sbb
add
sbb
clc
adc
adc
and
cwtl
shll
nop
xchg
sbb
add
adc
orb
rclb
adcb
decb
fwait
pop
ss
stos
mov
adc
adc
xchg
cli
adc
adc
adc
movsl
es
mov
cltd
dec
and
sbb
push
and
xchg
in
xchg
mov
movsl
pop
test
stos
adc
adc
sub
sub
jge
sbb
lcall
cltd
std
shl
or
cltd
pop
adc
push
push
mov
lahf
dec
pop
adc
cwtl
lcall
in
lcall
push
push
cltd
push
adc
mov
cmpsb
add
adc
jmp
dec
lcall
adc
lcall
in
je
mov
cmp
adc
fwait
mov
and
adc
cwtd
es
lcall
out
sbb
add
sti
adc
adc
and
cwtl
lea
lods
adc
sbb
add
adc
adc
adc
sub
sbb
lcall
xchg
adc
shld
adc
cltd
jle
or
lcall
divl
cmpsb
add
add
push
cltd
push
adc
mov
xchg
repz
push
in
inc
push
cltd
jp
lahf
pop
pop
add
movsl
mov
jmp
pop
lcall
add
lcall
jle
push
shr
je
test
add
add
sti
add
lcall
mov
xor
mov
push
add
cltd
lcall
divl
cmpsb
add
adc
lcall
add
add
adc
cmp
fidivrl
mov
cmp
sub
outsl
arpl
add
je
test
add
add
push
cltd
push
adc
mov
xchg
repz
push
in
inc
push
cltd
jp
lahf
pop
pop
add
movsl
mov
jmp
pop
lcall
add
lcall
in
shr
fwait
stos
cmpsb
push
adc
xchg
jmp
adc
mov
stc
add
lcall
out
sbb
add
pop
xchg
adc
adc
popa
sbb
adc
sbb
mov
xchg
icebp
call
adc
mov
ss
mov
cmp
sub
sbb
adc
or
fwait
pop
and
je
insb
add
add
sbb
cltd
dec
push
in
push
adc
jp
lea
adc
cwtl
lcall
in
lcall
push
push
mov
lahf
dec
pop
adc
movsl
lcall
sbb
dec
adc
cmp
sbb
shr
fwait
mov
xchg
out
add
stos
mov
stos
stos
add
adc
or
lcall
and
cltd
jle
adc
je
mov
add
cltd
push
popf
push
mov
adc
adc
add
es
cmp
adc
mov
stos
add
adc
cmp
cltd
stos
stos
push
adc
sub
outsl
jnp
iret
cltd
in
je
cmc
je
mov
cltd
pop
push
call
cltd
js
lahf
push
cmovae
mov
repz
mov
push
push
mov
lahf
or
inc
sbb
add
shr
or
sbb
add
lcall
in
in
data16
mov
xchg
jmp
adc
mov
stc
add
lcall
out
sbb
add
cltd
pop
and
sub
seto
out
in
sbb
adc
stos
add
add
cmp
mov
sub
jge
sbb
adc
cltd
fstpl
sbb
cltd
dec
push
in
push
adc
push
lea
sbb
cmpsb
push
adc
xchg
loope
lcall
push
cltd
push
lahf
push
sbb
mov
adc
shr
dec
mov
adc
mov
movsl
in
in
je
mov
add
add
stos
add
adc
adc
pcmpeqb
add
adc
je
mov
add
add
mov
mov
adc
add
fwait
xorb
push
dec
pop
dec
dec
rcll
adcb
add
add
push
adc
xchg
cli
sbb
sub
sbb
add
lahf
lcall
sub
jne
push
xchg
rcll
call
cli
xor
mov
stc
adc
rcrb
roll
mov
xchg
icebp
add
cli
sbb
adc
pop
test
insl
loop
rol
cli
pop
roll
stos
mov
addr16
push
push
in
push
adc
pop
sbb
adc
add
push
cltd
pop
or
adc
shr
lcall
add
add
adc
rcrb
adc
xchg
stos
stos
push
adc
sbb
pop
adc
push
push
mov
cwtl
cwtl
cmpsb
add
add
mov
sbb
adc
dec
ret
inc
xchg
stos
mov
insb
aas
cltd
push
push
in
push
adc
pop
sbb
adc
add
push
cltd
pop
or
adc
shr
lcall
stos
add
adc
insb
adc
push
cltd
dec
sbb
adc
xchg
cmpsb
add
adc
adc
rcrb
pop
roll
push
inc
inc
cltd
stc
cltd
loopne
fcomps
in
in
xchg
mov
adc
adc
jnp
inc
push
in
inc
push
cltd
pop
or
aad
enter
pop
lcall
adc
inc
sbb
movsl
sbb
adc
push
cltd
dec
sbb
ret
add
incl
lcall
push
cltd
push
sbb
sbb
or
cltd
push
adc
push
push
mov
cwtl
push
lcall
in
xchg
shlb
dec
dec
pop
dec
rclb
add
incb
fwait
pop
out
mov
cltd
inc
cld
fwait
inc
mov
fwait
dec
ficompl
cltd
ret
cmp
adc
in
in
stc
jne
rcrb
fwait
pop
call
js
mov
lahf
push
mov
cli
adc
lret
je
cltd
shr
cs
push
les
cli
test
in
in
cltd
fcoms
lahf
push
cli
jge
in
xchg
leave
jne
stos
jmp
adc
cltd
inc
lret
fwait
push
cli
inc
sar
cltd
lret
dec
dec
mov
dec
rorb
adc
push
cltd
dec
sbb
in
cli
push
in
in
in
pop
dec
rclb
add
adc
sar
adc
xchg
rcrb
mov
rcrl
xor
inc
jp
adc
add
jbe
xor
pop
xchg
fistl
add
rorb
pop
jbe
add
adc
adc
sti
inc
xor
in
stc
clc
dec
rcrl
leave
adc
adc
in
in
in
lcall
adc
add
and
xor
inc
inc
xor
adc
add
in
in
call
adc
inc
jge
je
jae
gs
pop
jnp
pusha
jge
outsl
je
dec
push
jnp
jbe
gs
dec
inc
addr16
pusha
gs
inc
gs
popa
jnp
jl
push
js
jle
jb
pusha
dec
push
jp
jle
xor
jbe
pusha
jae
adc
add
in
in
decl
adc
add
inc
imul
jg
jge
and
imul
jg
and
dec
push
cmp
pop
push
adc
add
in
in
decl
adc
inc
pop
push
push
inc
push
inc
inc
dec
pop
jnp
pusha
jge
outsl
je
dec
inc
jno
jnp
ja
inc
bound
jl
je
jle
gs
push
outsl
jg
jge
ja
data16
imul
xor
push
push
push
sub
aas
push
and
push
aas
and
push
push
and
push
es
xor
push
outsl
add
in
in
lcall
adc
add
bound
pushw
adc
in
in
in
incl
adc
inc
pop
push
push
inc
push
inc
inc
dec
pop
jnp
pusha
jge
outsl
je
dec
inc
push
inc
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
inc
cltd
xor
inc
jp
push
adc
fs
and
xor
pop
lock
add
xchg
hlt
adc
adc
cli
int
in
in
mov
cli
shll
scas
adc
cli
mov
and
in
stos
ds
adc
cli
movsl
and
mov
and
scas
adc
cli
xchg
and
mov
and
scas
adc
cli
jge
in
in
mov
cli
popa
and
leave
adc
cli
imul
dec
and
leave
adc
cli
push
and
fistl
adc
pop
and
leave
adc
cli
inc
and
fistl
adc
and
cmpsb
leave
adc
cli
sub
mov
xor
leave
adc
cli
sbb
mov
and
leave
adc
cli
add
mov
adc
cli
jmp
mov
adc
cli
icebp
and
in
xor
dec
dec
pop
jbe
add
push
adc
sar
int3
xor
in
stc
clc
dec
rcrl
leave
adc
adc
in
aaa
mov
rolb
fs
in
in
mov
cltd
sarl
cli
adc
push
and
adc
add
inc
in
call
adc
add
sbb
adc
ljmp
jne
cltd
sarl
cli
fldenv
in
sti
mov
adc
xchg
clc
pop
addr16
mov
sbb
data16
je
sti
xchg
add
adc
add
cli
mov
in
in
stc
js
shrl
call
stc
js
ret
test
adc
add
xchg
ss
in
stc
pop
xchg
ljmp
sbb
scas
and
adc
add
addr16
shrl
cli
popa
and
in
jmp
cltd
sarl
cli
inc
and
in
stc
cmp
xchg
scas
ss
cltd
ret
test
adc
add
and
in
in
stc
or
shrl
call
xchg
mov
adc
dec
ret
in
in
in
call
adc
add
adc
add
in
in
call
adc
add
jl
inc
adc
add
in
in
call
adc
add
jl
pop
adc
add
in
in
call
adc
add
jl
inc
adc
add
in
in
call
adc
add
jl
and
adc
in
in
in
lcall
adc
add
jl
jnp
popaw
adc
adc
in
in
in
call
adc
add
jl
sub
adc
in
in
in
call
adc
add
jl
adc
adc
in
in
in
lcall
adc
add
jl
sub
xor
adc
add
sub
in
cltd
push
and
sar
adc
xor
inc
cltd
incb
out
inc
clc
fwait
push
out
push
inc
cltd
push
cld
cltd
pop
ljmp
adc
outsl
or
or
mov
dec
dec
mov
dec
rorb
lahf
push
add
incb
lret
add
cmp
inc
loop
lahf
inc
incb
dec
ljmp
add
in
in
cltd
push
clc
aaa
adc
add
sar
sbb
push
ds
push
out
lahf
push
loop
lahf
push
push
lahf
pop
out
xor
stos
adc
adc
in
subl
pusha
sbb
push
add
lahf
push
or
pop
sbb
shrb
push
in
in
in
subl
pusha
sbb
push
xor
lahf
push
cmp
pop
or
shrb
sub
outsl
out
push
add
xchg
pusha
sbb
push
and
lahf
push
sub
pop
cmp
shrb
or
in
in
pop
cltd
testl
incb
lret
hlt
inc
lahf
push
lock
lahf
push
in
inc
lahf
pop
cld
and
stos
add
adc
call
adc
adc
push
push
inc
lahf
push
sbb
pop
push
and
stos
add
adc
call
adc
and
push
es
lahf
push
sub
pop
push
and
stos
add
adc
call
adc
xor
push
ss
lahf
push
cmp
pop
cs
stos
add
adc
call
adc
hlt
inc
lahf
push
lock
lahf
push
in
inc
lahf
pop
clc
and
stos
or
adc
lcall
push
lcall
rcrl
adc
inc
push
cli
cltd
pop
in
inc
cli
fstpl
mov
cli
xchg
dec
in
in
inc
call
cltd
loop
add
adc
call
inc
cli
aam
in
in
js
cli
jne
in
inc
cli
leave
pop
in
in
mov
push
cld
fwait
inc
ljmp
lods
pop
in
sbb
or
fwait
push
cld
fwait
inc
ljmp
inc
cli
popf
pop
in
in
push
cli
xor
cli
sbbl
fwait
inc
loop
rorb
loop
daa
enter
call
dec
dec
cltd
in
rcll
add
ss
inc
inc
cltd
fcomps
sub
lock
in
aam
sub
inc
lea
inc
lea
inc
lea
push
xor
and
call
cltd
shrl
mov
cli
push
xor
in
addr16
mov
cltd
push
and
sub
mov
test
scas
adc
stos
or
adc
call
sbb
push
ss
cli
in
in
je
inc
push
dec
dec
ret
in
aaa
mov
adc
cltd
rolb
fdivrs
lahf
inc
ss
inc
call
cltd
push
ss
xchg
clc
adc
mov
test
or
add
jns
in
in
pop
dec
rcrl
add
cltd
sarl
cli
dec
and
in
stc
aaa
mov
ss
loopne
xchg
ljmp
into
sbb
add
push
xor
in
stc
or
shrl
call
dec
dec
roll
in
in
in
call
adc
add
lock
adc
adc
in
in
in
call
adc
add
enter
adc
add
in
in
call
adc
add
adc
add
in
in
call
adc
add
cmpsb
les
inc
cltd
push
inc
inc
inc
mov
fwait
inc
cld
cltd
ljmp
in
cltd
lret
inc
cli
sub
lcall
add
js
jp
adc
adc
push
js
push
js
push
cltd
aam
cltd
aam
rolb
dec
in
in
cltd
lock
inc
cli
jmp
push
out
inc
push
cli
in
pop
in
cltd
aad
scas
and
incl
aad
cmpsb
daa
in
incl
push
or
push
or
inc
cli
jmp
cli
jns
in
inc
js
cli
icebp
pop
in
dec
dec
pop
dec
dec
rorb
adc
adc
lods
mov
push
xor
and
add
cltd
lock
cli
test
adc
xor
in
cltd
fadds
clc
dec
in
in
cltd
rcrb
in
in
call
dec
dec
rcll
fildl
push
inc
inc
inc
push
fwait
push
out
xor
inc
jp
sbb
add
jbe
xor
pushf
dec
in
in
cltd
enter
add
pop
xor
in
mov
jnp
add
pop
sub
cltd
sarl
and
in
cltd
loop
xchg
cld
and
cmp
cltd
shrl
shl
cltd
ljmp
popf
mov
clc
jp
sbb
add
cli
jge
in
in
jmp
jp
sbb
add
cli
jns
in
in
addr16
sbb
add
adc
adc
fs
in
and
dec
dec
dec
fs
add
sbb
add
adc
adc
push
and
call
sti
add
in
in
stc
jmp
dec
dec
mov
dec
roll
in
in
in
call
adc
add
xor
in
in
in
call
adc
add
mov
mov
adc
add
in
in
call
adc
add
xchg
cwtl
cltd
lret
ss
add
inc
lahf
inc
sbb
ljmp
push
ss
stos
adc
adc
add
in
call
lahf
push
add
cwtl
cltd
lret
ss
add
inc
lahf
inc
sbb
push
in
lcall
push
stos
adc
adc
repnz
call
lahf
push
add
push
cltd
dec
sbb
cltd
push
push
mov
fwait
dec
sbb
ret
cltd
rolb
cli
xchg
shlb
cli
xchg
pop
in
in
mov
push
mov
push
inc
lea
push
push
cltd
dec
or
cltd
shr
stos
in
in
lcall
cli
sbb
in
in
stc
pop
js
cli
add
or
lahf
push
add
jp
push
adc
call
rcll
adc
inc
jp
insb
jle
inc
jb
imul
adc
add
push
cltd
dec
sbb
js
mov
inc
mov
inc
js
cli
fnsave
or
addr16
adc
push
cltd
push
add
jp
or
add
cli
imul
add
ja
adc
adc
inc
inc
inc
push
cltd
lret
cltd
cli
cltd
loop
or
adc
call
cltd
cli
cltd
cli
or
push
add
in
in
mov
lcall
add
inc
jp
or
add
js
cli
and
dec
dec
dec
ret
inc
cltd
incb
inc
and
push
jp
pop
add
jbe
xor
xor
cmp
xchg
dec
in
in
inc
call
lahf
push
loop
jp
pop
add
js
call
aad
ret
adc
push
into
adc
adc
cltd
inc
loop
push
aam
push
out
push
lret
ljmp
adc
adc
aad
in
in
xor
dec
dec
pop
jbe
add
sbb
fsubl
in
in
cli
test
dec
dec
cltd
in
rcll
add
inc
push
gs
jb
fs
ja
ja
inc
cltd
lret
in
in
call
js
push
cli
int3
dec
in
in
dec
ret
js
js
cli
rcrl
dec
rcll
push
sbb
adc
push
add
js
call
dec
rclb
add
inc
push
cltd
sti
cltd
cli
cltd
loop
or
adc
call
cltd
lret
cli
jmp
adc
in
in
fwait
inc
push
fwait
jns
jp
fadds
add
push
jp
pop
add
js
push
cli
adc
in
dec
pop
dec
dec
rcll
xchg
in
inc
inc
xor
fwait
xchg
mov
in
fwait
xchg
mov
in
fwait
xchg
xchg
xchg
xchg
xchg
and
push
jp
add
add
xor
xor
in
in
lahf
test
add
add
add
mov
xchg
cmpsb
in
in
cli
push
and
in
mov
lahf
test
lahf
xchg
mov
in
in
mov
cli
cltd
cmp
in
lea
test
adc
add
xor
xchg
mov
xor
in
in
inc
call
fwait
push
out
subl
setbe
rclb
lcall
jbe
xor
xchg
stos
in
in
add
add
in
cltd
push
ljmp
test
lahf
xchg
test
in
in
lea
stos
push
add
adc
popf
cmp
in
mov
dec
cli
lds
in
in
cli
mov
call
cltd
lret
addr16
lahf
test
inc
ljmp
xchg
mov
in
in
inc
lea
lahf
xchg
in
in
in
mov
cli
pop
cmp
in
cltd
xchg
cli
gs
in
cltd
xchg
movsb
in
in
in
call
inc
cli
adc
in
cltd
fcoms
adc
add
add
add
pop
push
in
in
mov
jp
add
add
dec
push
in
in
mov
xchg
das
out
adc
adc
and
xchg
mov
in
lahf
xchg
in
in
in
mov
cli
cmc
aas
in
in
cmpsl
pushf
in
in
in
push
in
pop
ljmp
in
in
mov
lahf
xchg
cwtl
in
in
in
call
in
cmpsl
mov
in
in
jp
add
add
pop
out
add
cltd
ret
xchg
in
cli
cmp
in
in
in
mov
in
in
jp
add
add
adc
cli
imul
in
in
in
push
cltd
push
out
push
cli
xor
rorb
xchg
mov
in
and
pop
dec
dec
jbe
add
adc
add
stc
push
in
in
ret
sti
adc
std
xor
dec
dec
pop
jbe
add
add
adc
in
test
adc
adc
push
cmp
call
sti
lock
in
stc
call
dec
rcll
add
in
in
lcall
adc
add
inc
pop
inc
jle
addr16
dec
adc
in
in
in
call
adc
add
cmp
add
dec
pop
pop
jl
outsl
adc
adc
push
push
dec
pop
inc
data16
data16
adc
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
sbb
add
xor
inc
jp
add
add
jbe
xor
pop
or
adc
jne
stos
push
lret
cli
popa
cmp
in
mov
cli
inc
cmp
in
and
pop
dec
dec
jbe
add
adc
add
jmp
stc
ljmp
adc
adc
in
aaa
mov
rolb
adc
inc
push
inc
cltd
jmp
loopne
lret
cli
test
in
je
push
call
mov
jmp
jbe
and
inc
push
inc
cli
aam
in
in
fwait
inc
out
and
pop
dec
dec
jbe
add
adc
add
call
sar
int3
and
in
stc
out
cltd
push
out
pop
dec
dec
dec
pop
dec
rcrl
mov
js
js
pop
addr16
inc
inc
inc
mov
lahf
outsl
std
and
inc
push
jbe
and
and
inc
jp
adc
add
and
and
in
in
mov
lcall
push
adc
lea
lahf
push
cli
cltd
aad
pop
in
in
call
adc
add
and
push
inc
cltd
push
call
and
lcall
xchg
jge
adc
xchg
outsl
loop
data16
xor
inc
inc
mov
cltd
push
out
mov
in
in
fwait
inc
loop
inc
hlt
inc
cli
nop
inc
in
in
xchg
call
data16
call
adc
adc
lret
adc
add
and
inc
negb
in
in
imulb
add
adc
loop
sbb
bnd
add
add
cli
cli
adc
in
in
in
jne
jp
adc
add
add
cli
add
adc
jmp
push
fcomps
in
in
jmp
jp
add
add
loop
fsubl
jp
adc
add
call
in
in
sarb
add
add
adc
cli
aad
in
stc
push
jmp
push
int3
cltd
sar
cmp
in
jmp
jp
add
add
loop
xchg
mov
fidivrl
adc
add
call
in
in
les
add
add
adc
cli
insl
cmp
in
push
xchg
sti
dec
sbb
in
xor
dec
dec
pop
jbe
add
sbb
call
aad
in
in
xor
dec
dec
pop
jbe
add
add
adc
adc
add
cmp
in
sar
add
in
in
jmp
dec
dec
pop
cltd
testl
adc
adc
and
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
add
in
in
call
adc
add
adc
add
in
in
call
adc
add
adc
add
mov
js
js
pop
addr16
inc
inc
cltd
ficompl
in
in
jmp
rolb
sub
adc
and
cltd
ret
cli
cltd
xor
clc
test
add
add
add
in
in
and
inc
jp
push
adc
jbe
and
and
xchg
mov
in
in
mov
cltd
cli
sub
in
in
mov
cli
shrb
in
inc
call
fwait
push
out
subl
setbe
rclb
call
in
xor
xor
adc
sbb
adc
xchg
xor
add
lahf
xchg
mov
in
in
lea
stos
add
adc
call
cltd
xchg
mov
insb
add
add
cmp
lcall
adc
lcall
adc
add
and
in
xchg
scas
lods
in
in
in
add
adc
xor
in
lahf
push
ds
push
add
adc
adc
in
in
jmp
jp
push
adc
lahf
xchg
mov
in
lcall
in
in
jmp
jp
push
adc
lahf
xchg
mov
in
lcall
mov
in
cmpsl
mov
in
in
jp
add
add
adc
cli
mov
in
in
jmp
in
addr16
lahf
xchg
mov
in
in
lahf
push
ds
push
add
adc
mov
in
in
jmp
jp
push
adc
lahf
xchg
mov
in
lcall
mov
in
cmpsl
mov
in
in
jp
add
add
in
cltd
adc
in
cmpsl
xchg
in
in
jp
add
add
in
lahf
push
adc
cmp
nop
in
in
in
push
lahf
push
ljmp
sub
in
inc
cltd
inc
out
inc
cli
in
push
in
in
test
sbb
in
subl
addr16
inc
add
adc
mov
in
addr16
shrl
cli
sbb
add
and
add
adc
addr16
adc
icebp
cmp
in
xor
dec
dec
pop
jbe
add
add
adc
xchg
push
in
sar
xchg
or
and
pop
dec
dec
jbe
add
sbb
dec
or
cli
and
in
and
pop
dec
dec
jbe
add
push
adc
lahf
test
sbb
add
cli
xchg
and
ljmp
jmp
stc
repnz
pop
dec
cltd
negl
adc
add
in
in
call
adc
add
adc
add
in
in
call
adc
add
cmp
add
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
inc
cltd
incb
rcrb
rolb
push
adc
jbe
and
and
push
hlt
add
adc
lea
stos
add
cli
mov
inc
into
cli
dec
sub
in
fwait
inc
clc
je
inc
loopne
adc
imul
rcrb
sbb
and
pop
dec
dec
jbe
add
push
adc
lahf
inc
into
cli
mov
jmp
stc
loop
ret
dec
cltd
negl
adc
add
in
in
call
adc
add
adc
add
incb
and
fwait
dec
into
cltd
loopne
lret
push
jp
add
xor
xor
push
hlt
adc
adc
lahf
inc
into
stos
xchg
adc
cltd
sar
xor
push
fdivr
sarl
in
fwait
push
ljmp
in
mov
je
push
loopne
add
int
in
xchg
rorb
xchg
in
or
and
dec
dec
dec
fs
add
add
into
cli
sbb
in
in
ret
sti
add
in
stc
loop
rorl
testl
call
adc
add
adc
add
xor
inc
jp
add
and
xor
pop
or
adc
xor
dec
dec
pop
jbe
add
add
rcrb
rcrl
lret
adc
in
aaa
rcl
adc
cltd
shr
scas
aad
add
aad
add
mov
lahf
push
and
inc
lahf
inc
ss
inc
lea
add
push
ss
inc
js
jp
push
add
cli
fdivrl
in
in
inc
call
xchg
shlb
cltd
rcrl
in
stc
push
mov
test
sbb
add
mov
in
in
adc
dec
pop
rcll
adc
in
in
in
call
adc
add
adc
add
incb
in
inc
inc
push
and
fwait
xchg
sub
lcall
in
fwait
xchg
mov
xchg
xchg
mov
in
lcall
in
fwait
xchg
mov
in
lcall
in
cltd
fcomps
in
and
inc
jp
sbb
add
and
and
in
in
push
js
call
fwait
push
out
xor
inc
jp
or
add
jbe
xor
adc
push
cltd
push
out
push
cli
sbb
in
cltd
push
or
sbb
ljmp
test
adc
add
in
inc
push
cli
std
in
in
inc
cli
jmp
and
in
lea
stos
add
adc
call
in
cmpsl
mov
push
xchg
push
or
popf
mov
in
in
cmpsl
test
in
in
push
lahf
xchg
inc
or
fs
in
in
in
mov
out
in
jp
or
add
in
mov
cli
pop
mov
in
jmp
jp
sbb
add
lcall
mov
in
cmpsl
mov
in
in
jp
or
add
in
cltd
push
or
dec
in
in
in
cmpsl
cwtl
out
in
in
push
cltd
shrl
call
xchg
insl
sbb
and
xor
in
lahf
xchg
ret
ljmp
cli
cmp
out
in
jp
or
add
adc
cli
in
ss
in
stc
notrack
lahf
xchg
nop
out
in
in
lea
stos
add
adc
call
in
cmpsl
cmp
in
jp
or
add
adc
cli
shll
in
in
push
cltd
push
out
push
cli
in
xchg
rorb
xchg
stos
in
in
and
pop
dec
dec
jbe
add
sbb
add
mov
in
in
ret
sti
jno
in
stc
std
xor
dec
dec
pop
jbe
add
or
adc
in
test
adc
adc
jp
in
call
sti
sub
in
in
stc
call
testl
call
adc
add
adc
in
in
in
call
adc
add
adc
add
lret
cltd
shr
ss
incl
adc
cli
inc
cmp
cmpsb
das
in
call
push
dec
ret
inc
cltd
xor
inc
jp
or
add
jbe
xor
pop
adc
adc
xor
dec
dec
pop
jbe
add
or
adc
sti
fcompl
in
in
stc
clc
dec
rcrl
lret
adc
inc
cltd
incb
in
inc
inc
xor
fwait
xchg
hlt
in
in
in
mov
fwait
xchg
in
in
in
in
mov
fwait
xchg
clc
in
in
in
mov
and
inc
jp
sbb
add
and
and
adc
add
in
inc
push
cli
stc
sub
in
inc
cli
add
rcrb
adc
in
lahf
xchg
in
in
in
mov
cli
lea
in
xchg
scas
clc
in
in
in
add
adc
call
in
daa
or
adc
lahf
test
in
in
lcall
in
stos
add
adc
call
in
cmpsl
out
in
in
jp
push
adc
lea
cltd
shr
xor
loop
in
in
jp
push
adc
lea
cltd
push
cld
cli
sub
in
in
cmpsl
in
in
in
in
push
lahf
xchg
in
in
cltd
inc
out
cli
cld
cltd
in
in
in
mov
in
in
jp
push
add
stos
or
adc
test
adc
adc
out
in
jmp
rorb
dec
jbe
adc
push
add
lahf
xchg
call
pop
adc
add
test
sti
xchg
or
in
jmp
cltd
aam
dec
cltd
negl
sbb
add
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
add
lret
fcoms
adc
dec
or
push
cli
jne
in
cltd
rorl
add
mov
in
in
dec
ret
js
js
js
inc
call
rcrl
js
js
inc
call
rcrl
inc
call
rcrl
inc
call
rcrl
inc
call
rcrl
inc
call
rcrl
inc
call
rcrl
js
js
js
cli
std
das
in
js
push
js
push
cli
lock
js
js
js
cli
aad
in
in
push
js
push
js
call
rcrl
enter
cli
add
in
in
test
sbb
jp
lock
inc
call
dec
sarl
jp
loop
adc
mov
in
in
pop
rcrl
xor
inc
jp
movlps
fs
and
xor
pop
adc
adc
jne
stos
or
adc
cli
pop
or
in
xor
dec
dec
pop
jbe
add
movlps
sar
pop
sbb
in
stc
clc
dec
rcrl
lret
adc
in
aaa
out
adc
cltd
shr
loop
adc
cltd
shr
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
xor
inc
jp
movlps
fs
and
xor
pop
sbb
adc
xor
dec
dec
pop
jbe
add
movlps
sar
mov
clc
dec
rcrl
lret
adc
inc
cltd
mov
js
js
pop
addr16
fwait
push
out
xor
inc
jp
xor
add
jbe
xor
ud0
js
push
js
call
fwait
push
out
outsl
out
setbe
adc
adc
rclb
xor
add
xor
xor
and
fwait
inc
lahf
xchg
loopne
in
in
mov
js
lahf
push
push
lahf
push
ljmp
lahf
xchg
loopne
in
in
push
js
js
js
cltd
inc
out
cli
icebp
in
in
in
test
sbb
adc
push
ljmp
jno
add
push
je
push
hlt
lahf
test
mov
lcall
out
in
xor
in
cltd
push
repnz
add
rorb
mov
xor
add
in
cltd
inc
loopne
inc
push
call
in
cmpsl
mov
xor
add
in
cltd
push
loopne
push
push
call
in
cmpsl
ret
in
jp
xor
add
adc
adc
or
adc
adc
inc
mov
inc
call
fwait
push
loop
rolb
lret
xor
add
jbe
xor
leave
lea
inc
push
cltd
push
cli
push
cltd
push
loop
cli
jns
in
xchg
shlb
outsl
in
adc
adc
gs
jge
adc
add
popa
sbb
pop
repnz
in
adc
test
push
out
jmp
lahf
xchg
mov
in
mov
cltd
inc
push
cli
and
in
in
in
mov
mov
jp
xor
add
in
mov
cltd
push
push
cli
les
fidivl
xor
add
in
mov
cltd
inc
ss
and
in
in
in
mov
mov
jp
xor
add
in
mov
cltd
inc
ss
lock
in
in
in
mov
mov
jp
xor
add
in
mov
cltd
push
push
cli
nop
sbb
scas
mov
jp
xor
add
adc
adc
fcompl
in
in
stc
push
and
and
add
xor
add
xor
adc
xor
add
in
mov
cltd
inc
ss
movsb
imul
in
in
mov
mov
jp
xor
add
in
mov
cltd
inc
ss
je
in
in
in
mov
mov
jp
xor
add
and
add
xor
add
adc
adc
jbe
in
call
xchg
repnz
push
incb
push
adc
add
in
inc
push
cltd
push
lock
cli
fdivr
in
in
lahf
test
xchg
mov
push
in
in
mov
cltd
push
cld
cli
jns
in
cltd
push
cld
and
dec
pop
dec
jbe
adc
xor
add
mov
jmp
stc
std
cltd
inc
out
test
and
add
cmp
push
out
xchg
inc
bnd
pop
hlt
sbb
jmp
rorb
dec
jbe
adc
xor
add
pusha
cld
in
in
shr
lcall
rorb
fs
add
xor
add
in
test
add
adc
lea
in
in
ret
sti
jno
in
stc
cli
pop
cltd
testl
adc
adc
outsb
xor
in
in
in
call
adc
add
outsb
xor
adc
in
in
in
call
adc
add
outsb
and
adc
add
in
in
call
adc
add
adc
add
in
in
call
adc
add
in
in
call
adc
add
adc
add
incb
lcall
xor
fwait
push
clc
jp
adc
adc
push
cli
cld
sti
in
in
fwait
inc
out
outsl
hlt
adc
adc
adc
push
or
in
push
cltd
push
out
cli
shr
in
fwait
push
lock
outsl
loop
sbb
adc
rolb
and
add
and
and
xchg
fldl
adc
xchg
jge
adc
add
rcrb
setne
test
xor
adc
xor
adc
adc
inc
xor
adc
xor
adc
rcrb
in
inc
js
mov
inc
call
fwait
push
ljmp
push
ret
adc
xor
in
in
mov
stc
insl
lahf
push
ret
adc
sbb
shlb
mov
inc
call
cltd
push
out
cli
in
call
lea
inc
push
cltd
push
lock
cli
xor
in
in
fwait
inc
ljmp
call
fwait
push
ljmp
js
push
js
push
js
push
and
mov
inc
push
cltd
push
lock
cli
mov
inc
ljmp
mov
jp
and
add
mov
push
out
call
sar
mov
out
push
ljmp
lahf
push
add
incb
inc
cltd
jmp
loopne
lret
fwait
push
cld
jp
adc
adc
push
cli
nop
cli
in
in
fwait
inc
ljmp
popf
adc
adc
rolb
mov
in
and
xor
push
js
push
js
push
js
js
jp
adc
adc
add
push
ljmp
fwait
push
hlt
xchg
outsl
out
push
and
inc
jp
and
add
and
and
loop
inc
loop
js
cltd
push
out
cli
in
fwait
push
cld
and
dec
pop
dec
jbe
adc
xor
add
int3
stc
in
in
shr
out
in
stc
std
and
dec
dec
dec
fs
add
xor
add
shr
in
call
sti
les
in
in
stc
out
cltd
push
out
pop
dec
dec
cltd
in
rclb
add
xor
inc
jp
xor
add
jbe
xor
pop
and
adc
xor
dec
dec
pop
jbe
add
xor
adc
sti
mov
in
in
stc
clc
dec
rcrl
lret
adc
adc
data16
enter
enter
sbb
shrl
ret
stos
adc
add
adc
add
cltd
incb
in
inc
inc
push
and
fwait
popf
ljmp
cli
cltd
loop
rolb
and
and
and
in
in
lea
inc
mov
cli
mov
in
in
inc
push
cli
pop
and
in
xchg
rorb
xchg
xchg
adc
adc
rclb
in
add
jbe
xor
xor
in
lods
adc
adc
stc
xor
ljmp
in
in
stos
add
adc
call
in
cmpsl
ljmp
adc
mov
test
add
adc
adc
in
in
mov
push
inc
lahf
test
in
in
incl
cltd
inc
out
inc
cli
int
in
in
test
cmpsw
xor
dec
dec
pop
jbe
add
adc
cltd
push
out
push
cli
andl
cltd
add
in
jmp
and
pop
dec
dec
jbe
add
and
ljmp
in
sar
jns
in
in
jmp
dec
dec
pop
cltd
testl
adc
adc
pop
sbb
add
incb
inc
and
mov
fwait
pop
fwait
dec
int3
fwait
dec
fimull
fwait
pop
cld
cltd
loopne
fsubs
rolb
aas
cmp
adc
and
cltd
inc
out
cli
cmp
in
in
lahf
inc
ljmp
in
inc
inc
call
xchg
rcrb
add
rolb
in
xor
and
and
fwait
push
ret
fwait
push
in
stos
in
sub
add
in
fwait
inc
out
rclb
repnz
xor
xor
adc
adc
push
out
mov
inc
mov
inc
call
cltd
push
imul
lret
lcall
inc
jp
xor
and
xor
push
call
lahf
push
notb
push
loop
lahf
push
repnz
js
lahf
inc
cli
inc
cltd
inc
out
cltd
inc
incb
inc
ljmp
test
sbb
adc
pop
in
in
mov
xchg
call
data16
call
adc
adc
into
adc
add
into
jp
cmp
add
into
cltd
adc
cli
or
addr16
jp
cmp
add
into
mov
cli
sub
in
in
in
jne
jp
sub
add
add
adc
dec
or
in
jmp
xchg
outsl
testb
add
sub
add
mov
in
in
jmp
cltd
testb
outsb
jnp
and
jmp
cltd
inc
loop
movsb
add
lahf
pop
les
cli
movsb
mov
in
in
jne
jp
sub
add
add
adc
cmc
add
addr16
cltd
addr16
xchg
in
xor
and
cltd
push
loop
push
sub
inc
loop
push
cmp
stc
push
sub
addr16
cltd
push
loop
push
sub
inc
pop
addr16
lea
cltd
push
loop
inc
push
in
in
stc
or
loop
inc
add
in
mov
xchg
cmp
addr16
push
lret
cmp
add
incb
in
call
push
ret
in
in
jmp
lahf
push
fcomps
add
lcall
in
fdivrs
cmp
add
bnd
in
shrb
cmp
adc
addr16
push
cltd
push
out
mov
cli
pop
add
in
stc
adc
in
jmp
and
pop
dec
dec
jbe
add
and
loop
sub
in
in
shr
negb
in
stc
loop
jge
adc
cltd
pop
out
mov
cltd
push
cld
test
cmp
add
test
in
in
and
dec
dec
dec
fs
add
xor
out
or
in
in
ret
sti
mov
loop
rorb
pop
jbe
add
cmp
adc
cltd
aas
in
sar
xchg
pop
in
in
jmp
and
pop
dec
dec
jbe
add
sub
add
add
adc
cltd
add
in
lea
test
adc
adc
sahf
add
call
sti
jo
in
in
stc
fimuls
dec
mov
dec
roll
in
in
in
call
adc
add
push
add
in
in
call
adc
add
cmp
add
in
in
call
adc
add
adc
add
in
in
incl
adc
add
mov
mov
mov
scas
ljmp
adc
add
in
in
call
adc
add
adc
add
in
in
call
adc
cmp
mov
add
in
in
call
adc
add
adc
in
in
in
call
adc
add
sbb
add
in
in
incl
mov
xor
fdivr
les
movsb
test
pop
sbb
lret
adc
adc
adc
adc
adc
adc
add
adc
cmp
adc
sbb
push
ja
jnp
pushaw
imul
js
push
js
push
js
push
inc
inc
push
cltd
jmp
repnz
lret
inc
jp
sub
add
and
and
rcrb
clc
inc
js
push
cltd
aam
repnz
incl
cli
lea
in
in
test
sbb
adc
rolb
pop
cmp
add
jbe
xor
rorb
adc
adc
pushl
xchg
je
adc
push
sub
add
adc
lods
sub
add
adc
push
sub
add
sub
add
adc
in
inc
mov
cli
jge
in
in
push
js
js
cltd
aad
jno
in
in
push
cltd
push
ljmp
xchg
rorb
xchg
in
or
fwait
inc
out
sti
xchg
add
adc
adc
in
cltd
push
push
xchg
outsb
add
xor
lahf
push
out
mov
inc
push
call
and
fwait
inc
cltd
push
hlt
cli
xor
adc
adc
mov
jmp
lahf
inc
loop
adc
adc
cltd
adc
cli
cmc
xor
in
xchg
add
dec
lahf
inc
testb
out
mov
cmp
pop
and
cltd
push
out
pop
add
lcall
cli
test
cmp
add
ss
in
lcall
cltd
in
lcall
lcall
mov
in
push
in
in
cltd
enter
hlt
test
adc
adc
pop
push
in
in
in
inc
xchg
outsl
hlt
adc
mov
cli
cltd
or
in
push
cltd
push
loop
js
js
cltd
aad
mov
in
in
push
cltd
push
ljmp
xchg
rorb
xchg
in
or
fwait
inc
out
sti
mov
adc
cltd
inc
push
cli
call
inc
js
lea
inc
push
js
mov
cli
inc
adc
push
ljmp
xchg
rcrb
sbb
fwait
push
cld
stc
jp
inc
push
cli
and
in
in
inc
mov
cli
sub
in
in
push
js
js
cltd
aad
sbb
cltd
push
ljmp
xchg
rorb
xchg
in
or
fwait
inc
out
stc
and
add
in
push
cltd
push
push
call
inc
js
push
cltd
aad
cli
push
in
incl
push
clc
inc
cli
mov
in
in
xchg
rcrb
rorb
dec
dec
dec
fs
add
cmp
add
and
in
call
sti
and
in
in
stc
out
and
dec
pop
dec
jbe
adc
cmp
add
adc
adc
sub
in
in
lahf
inc
loop
pop
aam
adc
call
lahf
push
out
push
add
call
sti
in
or
in
stc
aad
push
out
pop
dec
dec
cltd
in
rcrb
add
in
in
call
adc
add
adc
add
in
in
call
adc
add
adc
add
incb
inc
cltd
jmp
loopne
lret
fwait
push
cld
lahf
push
ljmp
js
mov
cli
and
int
in
xchg
rorb
xchg
mov
rclb
add
jbe
xor
xor
adc
adc
in
in
cltd
lock
cltd
push
clc
inc
cli
mov
shlb
inc
loop
pushf
cld
in
in
cltd
fcomps
lahf
push
hlt
inc
js
push
cltd
push
ljmp
xchg
shlb
cltd
push
lock
inc
cltd
inc
out
js
cltd
push
sbb
scas
add
incl
push
clc
inc
cli
fs
in
xchg
shlb
mov
inc
call
xchg
rcrb
sbb
fwait
push
cld
cltd
inc
loop
sar
jo
in
in
and
dec
dec
dec
fs
add
adc
mov
inc
call
sar
loopne
in
in
stc
out
cltd
push
out
pop
dec
dec
cltd
in
rclb
add
inc
mov
cltd
lret
aam
push
add
in
push
inc
cli
fsubrs
in
in
xchg
rcrb
rorb
inc
cli
mov
ret
dec
dec
dec
ret
inc
inc
cltd
repnz
lret
cli
xor
inc
call
xchg
rcrb
sbb
dec
dec
ret
inc
inc
inc
push
cltd
jmp
repnz
lret
aam
adc
in
in
inc
push
cli
lea
in
xchg
shlb
cltd
aad
loop
in
incl
push
and
inc
cli
jno
in
in
test
sbb
or
stc
adc
rorb
pop
rcrl
incb
in
inc
inc
mov
fwait
push
out
cltd
loop
dec
sbb
adc
in
cltd
inc
ljmp
rolb
adc
jbe
and
and
in
in
lea
inc
mov
cli
mov
in
in
push
inc
cli
xor
in
in
xchg
shlb
rolb
adc
jbe
and
and
push
loop
adc
adc
push
adc
adc
lahf
inc
loop
lahf
test
in
in
incl
push
in
inc
js
mov
cli
dec
add
in
push
cltd
push
out
cli
jmp
shlb
cltd
rorl
in
stos
adc
adc
cli
std
sbb
dec
dec
pop
jbe
add
cmp
adc
xchg
xor
lea
and
pop
dec
dec
jbe
add
adc
lahf
inc
ljmp
xchg
pop
in
in
ret
sti
jns
in
stc
stc
pop
dec
cltd
negl
push
adc
rolb
pop
cmp
add
jbe
xor
pop
and
adc
xor
dec
dec
pop
jbe
add
cmp
adc
sti
and
in
in
stc
clc
dec
rcrl
lret
adc
inc
cltd
push
stos
sbb
add
xchg
add
in
in
push
pop
addr16
push
out
xchg
out
in
incl
and
fwait
jl
in
fwait
popf
cli
outsb
in
lcall
in
cltd
icebp
cltd
enter
jp
xor
add
and
and
in
in
xchg
out
in
xchg
add
lahf
xchg
hlt
outsb
in
in
push
cli
mov
scas
add
in
in
add
aad
sahf
push
adc
adc
rorb
xchg
in
in
js
lea
inc
lea
inc
lea
inc
call
stc
push
jp
push
adc
push
lahf
push
clc
inc
lahf
push
cld
inc
cli
or
in
in
and
inc
jp
xor
add
and
and
test
add
adc
xchg
out
in
in
push
mov
je
push
lret
aad
movb
adc
sbbl
cltd
inc
ljmp
mov
lahf
test
outsb
in
lcall
adc
call
cltd
xchg
jl
in
lahf
test
popf
xchg
in
lahf
push
cwtl
inc
lahf
push
test
js
push
js
push
js
push
lahf
xchg
mov
in
push
js
cli
popf
xor
in
test
sbb
adc
rcrb
incb
sbb
adc
adc
adc
mov
lret
js
lahf
inc
loop
jp
xchg
adc
lea
inc
cltd
inc
out
inc
cli
or
in
in
test
data16
outsl
loop
jbe
lahf
xchg
mov
in
xor
test
adcb
cli
vpaddsb
push
lahf
push
hlt
inc
cltd
push
lock
lahf
xchg
mov
in
push
cltd
push
out
push
cli
leave
xor
in
outsb
in
in
push
lahf
xchg
cli
jl
in
lahf
xchg
sahf
insl
in
ljmp
cli
movsb
or
cli
outsb
in
lcall
cli
and
in
in
cltd
xchg
outsb
in
lcall
in
in
sub
adc
adc
adc
xchg
jge
adc
lcall
push
mov
xchg
xor
in
cltd
push
cwtl
inc
cli
jo
in
in
cltd
inc
mov
pop
aaa
in
in
xor
dec
dec
pop
jbe
add
and
adc
push
aaa
in
cltd
push
clc
inc
cli
sub
cli
push
in
stc
hlt
and
dec
dec
dec
fs
add
and
add
in
test
add
adc
in
sbb
in
ret
sti
rcll
in
stc
cli
pop
dec
cltd
negl
adc
add
in
in
call
jg
and
cltd
xor
inc
jp
and
add
jbe
xor
pop
sub
adc
xor
dec
dec
pop
jbe
add
and
adc
sti
insb
add
in
stc
clc
dec
rcrl
lret
adc
cmp
adc
add
cmp
push
adc
add
adc
add
in
in
call
adc
add
addr16
push
jno
ja
jl
bound
and
adc
adc
adc
adc
adc
adc
in
in
in
call
add
adc
addr16
push
jno
ja
jl
bound
and
adc
adc
adc
adc
adc
adc
in
in
in
call
add
adc
addr16
push
jno
ja
jl
bound
and
adc
adc
add
adc
add
and
adc
adc
add
adc
add
adc
add
adc
add
adc
push
adc
pop
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
adc
sbb
adc
adc
push
add
adc
xor
add
add
adc
adc
and
adc
jle
adc
add
adc
adc
add
adc
sbb
pusha
gs
inc
jo
lahf
push
add
incb
in
adc
adc
push
push
js
call
fwait
push
ljmp
and
push
jp
and
add
xor
xor
es
call
push
lcall
dec
jbe
add
xor
add
adc
sti
xor
in
stc
std
mov
dec
pop
dec
rcrl
adc
inc
aam
in
adc
dec
ss
in
push
cli
jns
in
cltd
lret
adc
add
js
cli
mov
push
clc
xchg
outsl
ljmp
adc
rolb
xor
add
and
and
adc
add
lahf
xchg
hlt
in
in
in
push
js
inc
call
xchg
shlb
lahf
push
out
jp
adc
adc
in
push
js
cltd
inc
ljmp
test
or
in
inc
lahf
test
in
in
incl
push
rcrb
dec
pop
dec
jbe
adc
and
add
inc
es
in
shr
jbe
in
stc
std
cwtl
inc
in
dec
cltd
in
rcrl
fwait
lds
loop
shr
add
loope
addr16
add
dec
ret
inc
cltd
incb
inc
xchg
shlb
lock
popf
in
in
cltd
lret
mov
fwait
inc
out
and
push
jp
and
add
xor
xor
fwait
inc
jle
push
out
xchg
rclb
call
cltd
push
out
cwtd
inc
push
data16
inc
pop
mov
cltd
push
sbb
out
push
jp
add
adc
adc
dec
push
js
cltd
inc
out
inc
jp
adc
push
js
call
cltd
inc
out
mov
and
dec
dec
dec
fs
add
or
gs
in
cli
inc
add
in
cltd
inc
out
xchg
outsl
sti
adc
call
jbe
pop
add
adc
adc
cltd
inc
out
dec
dec
pop
dec
dec
dec
ret
cltd
rolb
inc
in
in
in
mov
cltd
loop
rcll
xchg
out
in
in
test
insb
adc
in
in
dec
pop
rcrl
decb
adc
adc
push
adc
push
sbb
inc
sbb
adc
push
adc
cltd
cli
and
js
cli
test
in
in
mov
js
call
cltd
ljmp
outsl
add
cltd
push
cmp
push
in
ljmp
push
cs
adc
adc
add
rcrb
push
adc
pop
test
imul
shrb
push
sbb
push
add
shrb
adc
sar
adc
push
and
ret
ss
inc
cmp
push
cmp
cli
push
cwtl
inc
cs
ljmp
adc
and
out
add
shll
add
pop
daa
add
es
add
inc
daa
add
shll
add
jge
add
cltd
daa
add
mov
add
stos
xor
adc
test
adc
adc
cli
xchg
jnp
in
shl
push
fwait
push
push
jmp
stos
xor
add
test
add
adc
call
shl
adc
push
push
sti
mov
adc
mov
test
adc
adc
cli
dec
jnp
in
shl
fwait
inc
push
stc
jl
xor
adc
test
adc
adc
cli
sub
repnz
inc
push
stc
inc
mov
test
adc
adc
cli
adc
in
shl
fwait
inc
push
stc
and
xor
adc
test
adc
adc
cli
cmc
jp
in
shl
fwait
inc
push
stc
or
test
adc
adc
cli
fnstcw
in
shl
fwait
inc
push
cltd
push
sub
and
data16
add
lcall
add
cltd
push
sub
push
stos
call
push
pop
addr16
cltd
push
ss
lahf
push
ds
cltd
pop
xor
add
roll
in
in
adc
cltd
inc
ds
loopne
in
in
cltd
lock
in
adc
push
push
cli
sub
in
in
mov
fwait
add
push
pop
jne
cltd
push
and
lahf
push
xor
cltd
pop
dec
and
add
xchg
in
call
ss
lea
stos
add
adc
mov
jle
add
cli
push
les
mov
dec
pop
dec
rcrl
push
xchg
loop
lret
call
fwait
push
sub
adc
cli
cltd
popa
in
in
mov
cltd
inc
or
aad
dec
push
add
in
cwtl
inc
cmp
aad
add
push
jp
push
js
mov
inc
mov
inc
mov
inc
push
js
mov
cli
mov
cli
jmp
cli
mov
push
add
jge
in
cltd
push
adc
push
or
js
push
lahf
push
and
inc
cli
insl
xor
in
mov
stos
add
adc
cltd
inc
push
cli
mov
in
cltd
push
push
cltd
aad
fisubrl
jmp
cmp
add
cltd
push
sub
cmc
add
in
cltd
cli
test
outsb
jbe
and
cltd
inc
jp
cltd
mov
imul
aam
imull
cltd
ret
adc
cltd
aad
and
in
call
inc
js
push
js
push
cltd
push
sub
sbb
in
cli
inc
in
in
inc
call
test
adc
adc
data16
in
cltd
inc
sub
push
mov
xchg
loopne
in
inc
pop
lea
and
in
in
cltd
inc
sub
add
mov
adc
dec
pop
rcrl
inc
push
xchg
cli
mov
cltd
push
add
test
in
cltd
push
xor
push
add
in
cltd
fiaddl
and
cltd
inc
and
sbb
jnp
sub
pushw
and
stc
adc
mov
and
xor
push
pop
jne
inc
cli
shll
in
mov
ss
shrb
shrb
ss
shrb
shrb
scas
inc
push
adc
cltd
inc
and
push
adc
mov
push
cltd
in
xor
cli
popf
xor
in
cltd
loop
popa
sub
add
adc
idiv
lods
adc
adc
and
sbb
adc
xor
sbb
adc
and
cltd
mov
imul
cltd
aam
in
push
mov
shl
push
cltd
push
cmp
mulb
cli
int
in
cltd
push
push
push
sub
push
js
push
js
mov
cli
lds
in
call
inc
cli
rcrb
in
cltd
inc
cmp
mov
aad
in
in
mov
cltd
push
cmp
mov
inc
mov
mov
pop
cli
in
in
xchg
shlb
inc
and
push
xor
sti
push
add
adc
mov
cli
andl
cltd
adc
cltd
pop
adc
add
push
xor
push
and
lahf
push
push
push
lahf
push
push
push
inc
inc
lahf
inc
or
push
xor
lcall
add
add
cltd
push
add
jge
in
cltd
inc
add
push
cmp
mov
lcall
pop
push
cltd
aam
inc
push
cltd
inc
xor
push
adc
adc
xchg
shrb
cmp
mov
aam
adc
cltd
inc
push
adc
mov
pop
cmp
insl
push
mov
adc
cltd
inc
and
push
adc
mov
adc
push
cltd
inc
and
sub
jg
cltd
push
sbb
aam
push
and
push
add
adc
sbb
insb
sbb
and
adc
push
xchg
sarb
push
xor
push
and
adc
push
mov
pop
cmp
outsl
sbb
and
adc
push
cltd
push
sbb
cli
adc
ret
mov
aam
and
adc
cltd
aam
inc
push
pop
cli
or
sar
jnp
in
cltd
lock
adc
ss
lcall
adc
xor
in
in
mov
cli
or
sub
addr16
xchg
ljmp
sbb
sbb
adc
xchg
les
dec
dec
pop
dec
rcrl
push
inc
inc
cltd
ficompl
jp
cmp
add
and
and
dec
in
js
js
cltd
push
push
call
cltd
inc
sbb
cli
icebp
sahf
in
js
push
cltd
push
or
popf
dec
in
lcall
mov
lcall
inc
cltd
inc
push
stos
pop
add
adc
jge
in
in
mov
cltd
cli
imul
inc
push
cltd
inc
push
cli
je
in
in
and
dec
dec
dec
fs
add
or
xchg
jmp
in
cli
jo
in
in
dec
pop
dec
dec
rcll
xchg
das
ds
adc
ds
xchg
js
adc
mov
fadds
add
push
insb
in
in
in
jp
adc
adc
xor
in
in
mov
add
cltd
sbb
inc
out
and
mov
fadds
add
cltd
rolb
adc
inc
push
inc
fwait
push
cld
sti
pop
adc
adc
rclb
xchg
add
jbe
xor
xor
out
cltd
push
inc
stos
sbb
add
cli
orb
sbb
adc
push
in
call
mov
in
cwtl
dec
sti
xchg
jmp
adc
adc
pop
fisubl
fisubl
jmp
js
js
js
js
cli
adc
push
js
push
cli
in
in
in
js
js
js
js
cli
jmp
adc
push
js
call
sti
mov
add
js
push
js
push
cli
fcomps
in
in
js
js
js
js
cli
mov
adc
push
js
call
js
js
js
js
cli
mov
in
stc
bound
js
push
js
call
js
js
js
js
cli
xchg
or
in
js
push
js
push
cli
push
add
js
js
cli
insl
or
in
jmp
js
xor
cwtl
rcll
adc
pop
or
in
jmp
cltd
push
testb
repnz
cli
add
in
in
xchg
jge
push
adc
js
js
js
and
cwtl
inc
call
in
in
xor
dec
dec
pop
jbe
add
sbb
lock
in
cli
mov
push
out
xchg
js
adc
decl
dec
mov
dec
rcll
inc
inc
inc
mov
and
inc
jp
aas
adc
jbe
and
and
adc
call
cltd
lret
out
fwait
dec
inc
and
inc
push
jbe
and
cltd
inc
out
sbb
push
cld
cltd
inc
push
mov
cli
or
out
cltd
push
inc
cli
mov
rorb
xchg
sti
adc
adc
adc
cli
mov
in
cltd
inc
cld
fwait
push
push
mov
mov
xchg
adc
cli
mov
in
in
mov
fwait
inc
sbb
adc
cli
sbb
in
cltd
lret
out
fwait
pop
cmp
adc
cli
mov
push
cld
cltd
push
cmp
cli
cmp
in
cltd
push
cld
and
fwait
push
push
cltd
push
cld
and
fwait
push
add
rclb
repnz
add
xor
xor
inc
adc
push
push
adc
inc
fistps
pop
cltd
push
out
fwait
push
push
cltd
push
out
lea
cltd
inc
out
cltd
push
inc
stos
adc
pushf
xchg
in
cltd
inc
out
xchg
shlb
js
mov
inc
push
js
js
cli
imul
cld
fwait
push
data16
cli
mov
shlb
cmp
in
in
test
push
xor
inc
jp
sub
add
jbe
xor
in
in
xchg
shlb
push
cld
cli
xchg
ljmp
out
cli
mov
in
in
push
cli
cmp
in
in
and
dec
dec
dec
fs
add
or
push
in
in
cli
xor
in
in
cltd
inc
out
xchg
push
adc
xor
dec
dec
pop
jbe
add
sub
adc
push
cli
xchg
loope
in
mov
cltd
inc
sbb
xchg
repz
in
cltd
inc
out
cltd
push
sub
imul
cld
cltd
push
ds
cltd
lret
pusha
pop
push
xor
cltd
push
cld
cltd
push
mov
mov
in
inc
pop
addr16
push
cltd
push
cld
xchg
sarb
mov
cltd
pop
xor
add
push
push
in
in
adc
js
cltd
push
out
adc
stos
add
adc
mov
pop
and
add
sub
js
mov
xchg
shlb
adc
adc
cltd
adc
cli
or
add
push
out
mov
cli
mov
in
in
ret
sti
mov
inc
in
in
and
dec
dec
dec
fs
add
sub
out
cltd
inc
push
mov
inc
cld
sar
cwtl
imul
in
stc
jmp
rorb
dec
jbe
adc
sbb
dec
out
in
call
dec
dec
dec
pop
dec
rcrl
xor
inc
jp
sub
and
xor
pop
xor
adc
xor
dec
dec
pop
jbe
add
sub
push
imul
in
stc
clc
dec
rcrl
lret
adc
in
aaa
xor
adc
cltd
shr
push
adc
cltd
rolb
push
inc
cli
clc
sbb
in
rcll
adc
adc
inc
cli
enter
rcll
cltd
lret
sbb
sbb
add
inc
cli
rorl
in
pop
dec
rcrl
push
js
push
inc
cli
mov
ret
inc
inc
inc
mov
cltd
loopne
lret
mov
inc
jp
push
adc
push
cli
popf
or
in
dec
dec
pop
rcrl
lret
js
push
inc
cli
fs
in
dec
ret
inc
inc
inc
mov
cltd
loopne
lret
mov
inc
jp
push
adc
push
cli
dec
or
in
dec
dec
pop
rcrl
lret
js
push
inc
cli
push
sbb
in
dec
ret
inc
cltd
lret
js
push
inc
cli
cmp
in
in
dec
ret
inc
cltd
lret
js
push
inc
cli
or
in
in
dec
ret
inc
inc
inc
mov
cltd
loopne
lret
mov
inc
jp
push
adc
push
cli
in
or
in
dec
dec
pop
rcrl
inc
mov
cltd
loopne
lret
mov
inc
jp
push
adc
push
cli
int
in
dec
dec
pop
rcrl
jp
push
adc
push
cli
add
add
rcrl
adc
cltd
shr
add
adc
cltd
shr
push
adc
cltd
shr
sbb
adc
cltd
shr
push
adc
cltd
shr
adc
adc
cltd
shr
out
aad
add
xor
inc
jp
push
adc
fs
and
xor
pop
xor
adc
xor
dec
dec
pop
jbe
add
push
adc
sar
xor
in
stc
clc
dec
rcrl
lret
adc
dec
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
dec
push
adc
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
push
adc
sbb
imul
cltd
rolb
adc
inc
inc
xor
fwait
xchg
in
mov
cltd
loop
rolb
and
add
jbe
xor
in
jmp
leave
js
lahf
push
xchg
push
js
lahf
inc
rolb
rcrb
in
call
and
test
in
lcall
adc
add
or
cmpsl
jl
in
in
push
lahf
xchg
push
in
in
lahf
push
xchg
stos
push
add
adc
add
in
in
jmp
jp
inc
adc
cltd
test
adc
adc
cld
in
in
push
sub
addr16
and
dec
pop
dec
jbe
adc
push
add
lahf
xchg
js
in
in
mov
cli
test
in
sar
insl
loope
in
jmp
dec
dec
mov
dec
roll
in
in
in
call
adc
add
aas
xor
in
in
in
call
adc
add
adc
add
push
inc
inc
and
inc
jp
inc
adc
jbe
and
and
add
je
mov
adc
cltd
sbb
push
out
and
mov
and
dec
pop
dec
jbe
adc
sbb
loope
in
in
call
dec
dec
dec
pop
rcrl
outsl
add
rcl
cmp
insb
push
je
adc
rcll
lret
inc
fwait
pop
clc
fwait
inc
out
shld
test
sbb
adc
cli
adc
add
sbb
push
call
in
lahf
add
adc
fwait
push
repnz
and
shld
sar
pop
xchg
rcrb
push
mov
cltd
push
out
adc
mov
cwtl
or
xchg
rclb
mov
lcall
cltd
fcom
loop
cmp
xor
cwtl
pop
out
fistpl
cmp
fwait
inc
hlt
and
cwtl
sarb
outsl
mov
cmp
and
cwtl
inc
cmc
imul
cmp
mov
and
cwtl
inc
cmc
imul
xchg
clc
or
adc
and
cmp
fwait
push
and
mov
shl
or
push
out
push
in
in
lcall
sbb
mov
and
mov
shl
or
push
loop
adc
in
lcall
sbb
inc
lcall
loopne
adc
cli
icebp
in
in
sbb
sbb
xchg
rclb
mov
cltd
push
cld
adc
xchg
rclb
or
rcrb
adc
cli
test
in
in
sbb
or
xchg
rolb
lcall
loopne
adc
cli
mov
in
sbb
sbb
xchg
rclb
mov
and
mov
shl
or
push
call
sbb
sbb
adc
lcall
adc
dec
lret
ret
in
in
in
shld
add
adc
fwait
push
out
call
in
dec
into
sbb
in
pop
dec
dec
cltd
in
rcrb
add
cltd
fstps
and
mov
cli
inc
cmc
in
lahf
push
pop
and
fwait
push
add
sbb
adc
push
push
add
aad
sub
adc
shld
dec
scas
adc
and
cwtl
rcll
fcomps
or
sbb
sbb
scas
inc
push
xchg
ret
sarb
rcrb
shr
pop
shl
sbb
adc
dec
rcll
out
push
inc
cltd
dec
or
rolb
pop
push
adc
jbe
and
mov
fcoms
add
adc
data16
leave
addr16
dec
jbe
adc
jle
add
cltd
push
or
sbb
in
in
xchg
shlb
rcrb
adc
add
rorb
dec
jbe
adc
push
adc
adc
stos
add
adc
jne
cltd
push
adc
repnz
adc
inc
add
in
mov
and
inc
jp
inc
adc
jbe
and
and
push
dec
push
cltd
push
sbb
push
jb
cltd
pop
out
rcrl
in
cltd
push
or
cmpsb
adc
adc
inc
jmp
inc
js
cltd
push
sbb
es
out
xor
dec
dec
pop
jbe
add
push
adc
cltd
push
out
cli
icebp
add
in
sar
loope
in
in
jmp
cltd
push
or
cmpsb
adc
adc
inc
jmp
cltd
push
or
in
in
fwait
push
cld
xchg
outsl
out
add
and
dec
dec
dec
fs
add
xchg
adc
subb
cmc
or
cltd
push
sbb
sbb
adc
add
rorb
pop
jbe
add
add
inc
out
in
in
cli
xor
in
in
jmp
cli
cmp
in
in
and
inc
jp
inc
adc
jbe
and
and
sbb
push
add
sbb
add
cli
in
in
in
cltd
inc
sbb
adc
sbb
outsl
in
and
pop
dec
dec
jbe
add
sbb
adc
in
cli
leave
std
in
dec
dec
pop
cltd
testl
inc
cltd
decb
push
inc
cltd
add
sub
adc
inc
call
stos
adc
add
dec
rorb
adc
mov
dec
rcrb
add
xchg
shlb
xchg
in
in
in
cltd
ficompl
aam
in
in
in
xor
fwait
xchg
mov
rcrb
fwait
xchg
push
sbb
cltd
aam
cli
jno
in
in
fs
pop
adc
adc
xchg
les
cltd
aam
dec
rcrl
adc
inc
push
inc
cli
jo
in
in
lcall
rolb
ds
adc
jbe
and
cltd
inc
out
cli
mov
adc
and
dec
dec
dec
fs
add
or
and
add
in
in
and
inc
jp
inc
adc
jbe
and
and
adc
add
rorb
dec
jbe
adc
sbb
or
cli
cld
in
lcall
push
xchg
shlb
and
push
out
cltd
inc
push
mov
inc
cld
cltd
push
out
xor
fwait
inc
add
inc
jmp
inc
out
cli
and
in
in
xchg
jge
adc
push
out
call
dec
dec
dec
pop
dec
dec
rcll
enter
adc
push
js
push
js
push
js
cli
mov
loop
movsl
mov
adc
test
xor
cli
adc
in
in
inc
push
js
push
js
push
js
cli
jns
in
in
mov
cltd
xchg
mov
adc
test
sbb
rcrb
stc
adc
rorb
ret
inc
inc
inc
adc
cltd
repnz
ljmp
push
adc
mov
cli
inc
imul
in
stc
or
mov
push
in
in
cltd
les
adc
xor
in
in
xchg
mulb
cltd
aam
stos
jb
cltd
xchg
mov
icebp
in
in
test
data16
push
ss
adc
and
fwait
push
and
rcrb
inc
ss
in
in
in
and
fwait
push
ss
rcrb
aam
stos
jb
cltd
xchg
mov
aad
in
in
mov
cltd
xchg
mov
adc
call
cltd
rcll
pop
rcrl
fisubl
fisubl
jmp
cltd
push
or
cmp
and
dec
ret
cltd
push
sbb
cmp
xor
push
sbb
sub
and
dec
rcrl
adc
inc
push
inc
fwait
pop
hlt
fwait
inc
ljmp
lahf
outsl
cld
aam
loope
cltd
adc
fstpt
cli
mov
in
cltd
adc
add
adc
inc
adc
adc
fs
arpl
adc
add
cltd
adc
add
adc
adc
jo
in
in
dec
mov
and
jb
in
fidivl
push
mov
pop
stc
adc
adc
xor
mov
in
in
js
cltd
pop
cltd
push
cmp
adc
cli
or
in
in
mov
cltd
adc
negb
adc
mov
adc
sbb
fisubl
jmp
aam
add
sbb
add
stc
adc
adc
inc
mov
cli
hlt
in
in
dec
push
cltd
adc
mov
cli
lods
imul
in
cltd
lock
adc
in
push
cwtl
adc
adc
cwtl
adc
inc
loopne
push
sub
jne
aam
add
pushw
cmp
addr16
adc
inc
mov
cli
mov
in
in
dec
push
cltd
adc
mov
cli
fs
in
cltd
pop
fwait
push
xor
adc
mov
and
test
adc
adc
push
dec
out
inc
clc
cltd
adc
sub
in
in
jp
mov
mov
idivl
jb
adc
inc
call
cltd
push
ljmp
inc
cli
cmp
in
in
sub
or
push
lcall
dec
dec
cltd
in
rcrb
add
lret
xor
je
lahf
push
sbb
or
in
in
cltd
inc
xor
stc
out
in
lea
inc
call
dec
rcrl
subl
inc
and
cltd
ret
cli
sub
xchg
mov
adc
call
cltd
xchg
mov
push
out
in
push
cli
pop
pop
in
cltd
xchg
mov
adc
call
cltd
xchg
mov
call
dec
rcrl
push
xchg
mov
cltd
cli
mov
cltd
aam
scas
out
lcall
aam
xchg
out
in
subl
and
and
mov
sub
pop
fwait
push
ss
push
sbb
movsl
inc
ss
sbb
xchg
rcrb
xchg
shrb
rorb
loop
sbb
ss
push
sub
adc
data16
ss
adc
or
stos
sbb
add
loope
mov
cltd
stos
adc
adc
inc
hlt
in
in
cltd
ret
xchg
ds
dec
dec
dec
ret
inc
cltd
incb
inc
je
dec
in
cltd
call
push
jp
pop
add
jbe
xor
xor
rcrb
rolb
adc
cltd
ret
cli
fucomp
in
xchg
rorb
xchg
fcoms
add
cwtl
cltd
rcll
adc
cli
jne
in
lahf
inc
pop
cltd
sar
adc
in
in
test
rorb
adc
adc
xchg
roll
adc
inc
lea
lahf
inc
pop
cltd
sar
int
in
in
test
sbb
adc
adc
cli
in
in
in
mov
fwait
popa
add
movsl
pop
cltd
aam
xlat
cli
lods
addr16
in
xchg
shlb
push
or
aam
or
cltd
push
or
sbb
add
adc
int
in
in
lea
cltd
push
add
adc
adc
test
in
in
lahf
push
or
adc
adc
mov
js
adc
mov
cli
fs
in
in
aad
ljmp
mov
in
in
in
xor
dec
dec
pop
jbe
add
sbb
mov
mov
in
in
mov
dec
pop
dec
dec
dec
pop
rclb
adc
rolb
icebp
pop
adc
fs
and
xor
pop
cmp
adc
xor
dec
dec
pop
jbe
add
pop
adc
sar
mov
in
in
stc
clc
dec
rcrl
lret
adc
inc
pop
adc
adc
adc
adc
adc
inc
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
js
adc
dec
cmp
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
pop
adc
sbb
adc
adc
adc
adc
adc
add
add
adc
adc
add
adc
sbb
push
inc
jnp
ja
inc
cltd
push
inc
inc
xchg
shlb
xchg
in
in
cltd
icebp
cltd
enter
rcrb
add
pop
and
fwait
xchg
inc
sub
adc
call
je
push
or
fwait
push
or
push
sbb
aam
add
cltd
aad
cli
xchg
imul
in
fs
pop
adc
adc
xchg
les
cltd
aad
dec
dec
dec
ret
cltd
rolb
test
in
in
mov
cltd
loop
rcll
aad
in
in
test
insb
adc
in
in
dec
pop
rcrl
push
inc
inc
and
inc
jp
dec
adc
jbe
and
and
adc
call
cltd
lret
sbb
inc
push
jbe
and
cltd
inc
sbb
push
or
cli
test
in
in
cltd
inc
sbb
fs
in
xchg
shlb
rclb
test
in
xor
xor
pop
inc
adc
mov
cltd
push
or
imul
mov
cltd
nop
pop
cmp
add
adc
add
rorb
dec
jbe
adc
pop
add
jp
add
sbb
in
mov
cltd
inc
push
cli
enter
shr
hlt
in
stc
icebp
and
dec
dec
dec
fs
add
pop
adc
mov
cltd
inc
push
cli
in
loop
in
shr
cmpsb
hlt
in
stc
jmp
rorb
fs
add
or
gs
in
cli
inc
out
in
dec
pop
dec
dec
rolb
lahf
push
add
push
inc
inc
cltd
repnz
push
out
push
cltd
push
cld
sbb
adc
push
js
js
js
jp
adc
push
mov
cli
clc
lock
in
inc
call
cltd
lret
out
fwait
dec
sbb
adc
add
rolb
mov
adc
jbe
and
cltd
inc
out
aam
movlps
pop
sub
adc
adc
sbb
inc
out
cltd
push
add
adc
lods
je
in
cltd
inc
out
aad
and
adc
add
push
add
adc
mov
xchg
mov
adc
subl
sbb
adc
adc
pushf
jle
adc
push
jp
sub
adc
inc
cmp
adc
adc
mov
dec
out
fwait
xchg
sub
adc
mov
cltd
push
cld
lahf
inc
cmp
push
stos
adc
adc
cli
pop
in
in
test
insl
add
inc
cmp
add
in
in
sti
pushf
adc
adc
push
cltd
push
cld
cltd
push
xor
push
out
mov
inc
call
js
cltd
inc
out
pop
and
adc
inc
push
cltd
push
out
adc
inc
mov
cltd
inc
or
cmp
in
in
mov
xchg
inc
xor
cmp
adc
adc
adc
out
mov
cltd
xchg
inc
cmp
adc
cmp
adc
or
cltd
dec
out
sub
addr16
push
jmp
insb
add
inc
cmp
add
sbb
in
mov
xchg
mov
adc
subl
sbb
add
adc
mov
adc
add
inc
cmp
adc
sbb
add
cmp
add
cltd
push
cld
lahf
inc
cmp
push
cli
js
in
in
xchg
shrb
xchg
imul
in
jmp
js
js
cltd
push
out
mov
inc
mov
cltd
inc
or
sbb
adc
cmp
adc
inc
out
cltd
xchg
sub
adc
push
cltd
push
out
adc
inc
mov
cltd
inc
or
dec
adc
cltd
push
cld
cltd
lcall
out
lahf
inc
sub
push
cli
add
in
test
insl
adc
stc
dec
js
js
js
cltd
push
out
mov
inc
call
js
cltd
inc
out
pop
and
adc
inc
mov
cltd
adcb
add
push
cld
xchg
sarb
push
cltd
push
out
mov
inc
call
and
dec
pop
dec
jbe
adc
inc
add
cltd
push
cld
cltd
push
or
sub
in
sar
jmp
decb
dec
rcrl
push
inc
inc
cltd
repnz
push
out
push
jp
add
adc
js
js
jp
adc
xchg
cltd
aam
cs
in
incl
xor
push
out
mov
xchg
cltd
inc
out
cltd
push
add
lea
in
sti
inc
add
adc
rolb
push
adc
jbe
and
and
cltd
inc
out
cltd
push
sbb
clc
add
in
and
cltd
pop
out
mov
fwait
cmpl
adc
jp
sub
adc
cmp
adc
mov
cli
and
in
in
cltd
dec
out
fwait
xchg
sub
adc
mov
cltd
push
cld
aam
sbb
mov
cltd
inc
cld
fwait
push
add
sbb
push
cld
cltd
push
push
mov
cli
test
push
cld
xchg
stos
sub
adc
jne
xchg
stos
cmp
adc
add
adc
sete
adc
adc
jg
pushf
xor
add
stc
ja
adc
mov
cltd
inc
xor
inc
out
cltd
push
sbb
je
in
in
js
cltd
push
out
add
inc
jp
sub
adc
sub
push
cld
cltd
push
or
add
in
cltd
push
cld
lahf
inc
cmp
push
stos
adc
adc
cli
inc
arpl
in
mov
xchg
inc
xor
cmp
adc
adc
sub
in
lcall
cmp
adc
adc
cmp
adc
or
cltd
dec
out
sub
addr16
push
jmp
insb
add
inc
cmp
add
sbb
in
mov
xchg
mov
adc
subl
sbb
add
adc
mov
adc
add
js
cltd
push
out
mov
inc
mov
cltd
inc
or
mov
adc
cmp
adc
inc
out
cltd
xchg
sub
adc
push
cltd
push
out
adc
inc
mov
cltd
inc
or
dec
push
in
in
mov
cltd
mov
cmp
add
cmp
add
gs
in
stc
jle
adc
push
cltd
push
cld
cltd
push
or
pop
push
in
cltd
push
cld
cltd
xchg
sub
adc
cltd
rcrb
cmp
leave
cli
rol
in
js
mov
pop
xor
adc
push
cltd
push
out
mov
inc
cltd
inc
out
xchg
shrb
inc
cltd
push
cld
cltd
push
or
leave
adc
in
cltd
push
cld
cltd
lcall
out
lahf
inc
sub
push
cli
or
in
xor
dec
dec
pop
jbe
add
inc
adc
cltd
push
out
mov
inc
call
sar
push
loope
in
stc
in
dec
dec
dec
pop
rcrl
push
lret
adc
push
lret
xchg
mov
adc
mov
aad
inc
sub
adc
in
in
jp
adc
adc
stos
adc
jmp
adc
mov
in
inc
cld
and
mov
fcoms
add
inc
cltd
xor
inc
jp
inc
adc
fs
and
xor
pop
inc
fcoms
add
rorb
pop
jbe
add
inc
adc
sar
fsub
in
in
stc
clc
dec
rcrl
lret
adc
xor
adc
adc
add
adc
add
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
add
adc
and
adc
and
adc
and
adc
and
adc
and
adc
adc
sahf
and
adc
and
adc
adc
adc
sbb
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
adc
adc
add
adc
adc
add
adc
adc
add
adc
sbb
jnp
inc
imul
cltd
incb
lret
lock
pop
out
push
sbb
push
lahf
push
cld
inc
js
push
js
lea
inc
push
inc
cli
mov
in
push
pop
cltd
testl
inc
cltd
xor
inc
inc
push
inc
inc
inc
push
inc
and
push
jp
inc
add
jbe
xor
xor
rolb
aad
adc
fs
and
xor
inc
add
cli
mov
push
ljmp
add
cli
dec
call
stc
adc
addr16
jp
inc
adc
lea
sbb
pop
in
in
in
jne
jp
push
adc
lahf
inc
out
push
add
adc
mov
push
out
call
xchg
shlb
in
addr16
push
lahf
inc
decb
movsl
sar
popa
dec
in
in
jmp
jp
inc
adc
lea
test
adc
adc
jle
in
js
js
cltd
push
out
call
cltd
lret
push
sbb
jmp
adc
loopne
in
in
cltd
inc
out
inc
cli
loope
in
in
test
mov
cltd
adc
cs
in
pushl
cltd
adc
pop
adc
in
js
push
js
push
jp
inc
add
js
call
js
cli
popf
in
in
in
xor
dec
dec
pop
jbe
add
sbb
pushf
fucomp
in
cli
imul
dec
dec
pop
jbe
add
inc
adc
lahf
push
mov
cli
lods
idiv
in
sar
xchg
int3
in
in
jmp
dec
dec
pop
cltd
testl
in
in
in
call
adc
add
jg
adc
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
push
adc
adc
jge
ja
adc
adc
js
jp
jecxz
adc
adc
add
in
add
cli
add
in
in
jp
adc
adc
repnz
stc
int3
rcll
push
sbb
ss
adc
dec
rclb
add
push
inc
inc
xchg
shlb
xchg
fucomi
in
cltd
icebp
cltd
enter
push
push
mov
cli
inc
in
in
lahf
inc
xor
idiv
in
je
inc
push
je
inc
ss
push
or
mov
mov
jnp
in
mov
lahf
inc
cmp
add
jbe
adc
js
js
cli
insl
in
in
in
mov
xchg
leave
je
cli
push
pop
adc
add
xchg
or
aad
pop
dec
dec
rorb
lahf
push
add
xor
inc
inc
push
inc
inc
inc
mov
cltd
fcomps
cmc
in
jmp
rolb
adc
adc
and
cltd
push
out
stos
or
add
xor
in
in
mov
fwait
popa
sub
fcompl
adc
adc
cltd
push
out
call
cltd
push
ljmp
push
sbb
cmp
cli
pop
cli
in
in
mov
stos
sbb
add
loop
in
lcall
lahf
push
hlt
inc
cltd
fmull
adc
add
cltd
push
cld
cli
loope
in
cltd
push
hlt
cli
or
push
or
push
out
mov
test
adc
adc
or
in
lcall
dec
adc
cli
mov
loop
popa
cmp
into
pop
test
add
adc
out
in
cltd
inc
loop
int3
pop
in
in
fwait
inc
add
cmp
cli
vpaddd
lahf
push
adc
inc
out
call
and
dec
pop
dec
jbe
adc
dec
add
lahf
push
lock
adc
adc
movsb
loop
in
shr
sahf
into
in
stc
stc
dec
pop
cltd
testl
adc
adc
outsb
adc
add
incb
inc
cltd
dec
sbb
push
push
mov
cwtl
dec
push
lcall
pop
add
or
dec
mov
cltd
push
or
inc
push
jbe
and
cltd
inc
sbb
sbb
adc
adc
js
jmp
rorb
dec
jbe
adc
push
adc
adc
lock
in
cltd
inc
sbb
jns
in
cltd
push
or
lret
cli
mov
in
sti
or
add
cli
in
in
in
fwait
inc
out
and
push
jp
dec
add
jbe
xor
xor
in
in
inc
mov
cli
push
out
in
cltd
rcrb
or
push
push
js
push
cltd
push
cld
cli
push
sub
in
mov
adc
cli
mov
push
clc
and
inc
push
jbe
and
mov
mov
cli
popa
jg
in
push
js
mov
cli
or
push
ljmp
inc
sbb
push
jp
dec
add
jbe
xor
xor
push
cltd
push
or
adc
add
cmc
jnp
in
cltd
push
clc
cli
cmc
das
in
cltd
fimull
push
cltd
push
or
jnp
jmp
rorb
dec
jbe
adc
pop
sti
in
lret
in
in
mov
cltd
inc
or
sbb
in
in
cli
mov
rorb
pop
jbe
add
dec
adc
cltd
push
ljmp
sti
cld
in
stc
lock
dec
pop
dec
jbe
adc
dec
add
cltd
push
cld
cli
or
in
sar
ror
in
in
jmp
dec
dec
pop
dec
dec
dec
ret
cltd
rolb
adc
inc
push
and
fwait
push
stos
fwait
inc
mov
inc
mov
push
mov
inc
mov
inc
mov
mov
inc
jp
pop
adc
jbe
and
and
hlt
in
lcall
push
cli
int
in
in
subl
push
and
jmp
mov
cli
popf
mov
cmpsb
cli
xchg
mov
cmpsb
jp
dec
adc
call
lahf
inc
mov
in
addr16
dec
adc
lahf
push
mov
xor
adc
call
cltd
push
mov
mov
in
in
jmp
jp
dec
adc
lea
sbb
xor
in
jmp
jp
dec
adc
push
lahf
inc
mov
rcrb
dec
in
in
addr16
dec
add
jp
pop
adc
lahf
inc
mov
test
mov
pop
adc
mov
mov
jp
pop
adc
mov
mov
jp
pop
adc
lahf
inc
mov
adc
cltd
add
mov
stos
lcall
in
in
jmp
jp
dec
adc
mov
in
and
add
adc
leave
lock
in
mov
inc
push
js
push
js
inc
call
and
dec
pop
dec
jbe
adc
dec
add
lahf
push
cwtl
test
adc
adc
nop
fucomip
in
shr
dec
lret
in
stc
stc
dec
pop
cltd
testl
adc
adc
outsb
adc
add
in
in
call
adc
add
adc
in
in
in
call
adc
add
push
call
adc
add
adc
add
in
in
call
adc
add
adc
in
in
in
lcall
adc
add
popa
je
jle
push
jnp
ja
inc
cltd
mov
js
js
pop
addr16
inc
inc
and
inc
jp
jge
add
and
and
rolb
cld
outsb
adc
jbe
and
cltd
inc
sbb
jne
in
xchg
rorb
xchg
stc
adc
adc
add
in
in
cli
jns
in
in
call
cltd
push
sbb
movsl
pop
mov
cltd
push
push
cltd
push
or
ja
call
push
sbb
sbb
int3
in
jp
jne
adc
sbb
adc
test
adc
adc
inc
clc
in
in
cltd
inc
sbb
mov
in
in
sti
cmpsb
or
sbb
loop
in
inc
call
xchg
ljmp
sbb
push
sbb
sbb
jbe
in
xchg
shlb
push
or
sbb
fsubrp
in
jp
adc
mov
cltd
inc
or
add
test
add
adc
jmp
push
sbb
sub
sub
sbb
movsb
push
xor
sar
adc
adc
test
in
in
jmp
cltd
push
sbb
sbb
adc
adc
js
in
in
cltd
push
sbb
sbb
sbb
push
or
scas
je
call
push
sbb
movsb
push
xor
sar
adc
adc
enter
inc
call
and
dec
pop
dec
jbe
adc
mov
in
cltd
push
or
push
sbb
icebp
in
in
mov
xchg
rcrb
loop
in
cltd
rcrb
pop
pop
mov
cltd
inc
or
in
in
in
cltd
push
sbb
sbb
sbb
push
or
pop
je
call
push
sbb
movsb
push
xor
sar
adc
adc
je
in
in
inc
call
and
dec
pop
dec
jbe
adc
xor
push
or
xchg
push
push
adc
and
inc
jp
jl
add
and
and
pop
cltd
inc
sbb
sub
in
in
cltd
inc
sbb
ljmp
adc
and
fisttps
fildll
add
dec
add
shlb
add
je
add
add
mov
add
popf
jg
add
jg
add
bound
add
outsb
add
sti
pusha
add
shlb
add
add
xchg
add
push
or
ljmp
adc
test
dec
adc
inc
dec
adc
fs
adc
mov
adc
adc
and
adc
jae
adc
adc
mov
adc
jbe
adc
jbe
adc
ja
adc
mov
out
push
js
js
js
js
cltd
push
sbb
mov
inc
sbb
ljmp
call
cltd
push
ljmp
adc
cltd
push
sbb
xchg
jmp
in
sti
cmp
inc
sbb
outsl
add
cli
mov
push
sbb
sbb
sub
and
push
sbb
adc
push
mov
cli
test
in
cltd
push
or
push
sbb
adc
adc
shl
in
stc
sbb
xor
or
hlt
cltd
inc
sbb
cli
pop
iret
in
cltd
push
hlt
cli
popf
inc
in
inc
js
cltd
push
sbb
int
in
push
lahf
push
loop
cltd
push
sbb
iret
in
in
mov
pop
cltd
inc
sbb
adc
adc
cmp
in
in
cltd
inc
loop
rcr
in
in
inc
push
js
cli
in
in
in
jmp
cltd
push
sbb
outsl
adc
call
cltd
inc
sbb
sbb
sub
and
inc
sbb
adc
push
test
add
adc
ror
in
in
mov
cltd
dec
cmp
inc
sbb
adc
adc
call
or
and
int
in
in
lea
cltd
push
sbb
cli
mov
in
in
mov
cli
leave
inc
in
in
push
lahf
push
notb
push
sbb
iret
in
in
mov
pop
cltd
inc
sbb
adc
adc
pusha
fucomip
in
in
jne
jp
jge
add
xor
adc
add
movsl
iret
in
cltd
push
call
in
inc
cli
inc
in
in
jmp
cltd
push
sbb
into
in
in
mov
fwait
inc
cmp
jge
add
pusha
outsl
adc
mov
stos
adc
add
in
in
jne
jp
jge
add
inc
sbb
push
or
adc
add
loope
in
in
fcompl
adc
test
adc
adc
push
iret
in
lcall
sbb
or
add
call
cltd
push
lret
inc
in
incl
push
or
int3
in
incl
mov
add
adc
mov
cltd
inc
push
cli
sub
in
in
cli
cmp
into
aad
lcall
push
inc
call
xchg
shlb
js
js
jp
adc
adc
push
cltd
push
or
add
in
in
sti
ret
adc
js
push
js
js
cltd
push
sbb
jmp
mov
adc
js
jp
adc
adc
push
js
push
cltd
push
sbb
iret
in
in
push
cli
movsl
loope
in
cltd
inc
or
sbb
daa
cltd
push
sbb
outsb
loope
js
js
jp
adc
adc
push
cltd
push
or
mov
in
in
sti
dec
or
adc
js
push
js
js
cltd
push
sbb
xchg
in
in
sti
and
adc
cltd
inc
sbb
outsl
add
cli
mov
push
sbb
sbb
leave
in
in
mov
fwait
inc
ds
push
or
push
sbb
adc
push
mov
cli
or
or
push
sbb
sbb
pop
sub
cmp
push
sbb
fucomp
in
cltd
inc
sbb
xchg
scas
adc
adc
push
xchg
sub
dec
js
cltd
push
sbb
into
in
in
push
cltd
push
sbb
into
in
in
push
cli
mov
shlb
adc
jp
add
adc
js
cltd
inc
sbb
in
jmp
js
js
jp
adc
adc
push
cltd
push
or
mov
push
or
adc
es
push
or
mov
sbb
js
jp
adc
adc
push
cltd
push
or
push
or
adc
js
push
js
js
cltd
push
sbb
dec
out
in
sti
sbb
adc
cltd
inc
sbb
push
jne
cltd
push
or
into
in
incl
push
or
into
in
incl
hlt
repz
in
xchg
shlb
add
jp
adc
adc
js
mov
inc
call
sti
or
adc
push
jp
add
adc
js
cltd
inc
sbb
std
out
in
jmp
cltd
push
sbb
sbb
mov
je
cltd
push
or
mov
sbb
js
jp
adc
adc
push
cltd
push
or
lods
hlt
in
in
sti
push
adc
push
js
push
js
js
cltd
push
sbb
mov
in
sti
pop
sbb
adc
cltd
push
sbb
leave
in
in
push
cli
xchg
loope
in
cltd
push
or
leave
in
incl
mov
shlb
add
jp
adc
adc
js
mov
inc
call
sti
push
or
adc
push
jp
add
adc
js
cltd
inc
sbb
inc
out
in
jmp
cltd
push
sbb
mov
or
js
push
js
js
cltd
push
sbb
or
in
sti
aad
adc
js
js
jp
adc
adc
js
mov
inc
call
sti
mov
push
or
outsl
adc
cli
xor
inc
or
sbb
inc
sbb
push
or
adc
add
or
push
or
sbb
add
adc
dec
leave
in
in
mov
cltd
inc
push
cli
mov
in
in
inc
mov
cltd
inc
and
sbb
in
inc
call
xchg
shlb
js
js
jp
adc
adc
push
cltd
push
or
push
es
js
push
js
js
cltd
push
sbb
dec
loope
in
sti
sbb
adc
cltd
inc
sbb
ljmp
adc
and
lret
ja
add
je
add
je
add
je
add
add
inc
je
add
add
addr16
add
je
add
je
add
je
add
movsb
in
cltd
push
aam
js
push
js
push
cltd
push
or
in
in
in
sti
mov
push
sbb
mov
in
sti
xchg
add
adc
add
and
in
in
sti
addb
call
sti
push
add
cltd
push
or
movsb
in
sti
jp
add
cltd
push
or
movsb
in
sti
dec
add
adc
add
xor
add
cltd
push
or
cli
inc
mov
in
sti
ss
adc
add
movsb
in
sti
xor
adc
cltd
inc
sbb
cmpsl
in
sti
add
adc
cltd
inc
sbb
cmpsl
in
sti
adc
adc
cltd
inc
sbb
lret
in
inc
cltd
inc
sbb
mov
in
in
sti
out
adc
mov
cwtl
inc
push
adc
xor
pop
adc
lahf
push
ret
mov
ret
adc
js
js
cltd
push
sbb
adc
mov
inc
sbb
mov
je
js
push
jp
add
adc
js
cltd
inc
sbb
fucom
in
in
jmp
js
js
jp
adc
adc
push
cltd
push
or
shl
in
in
sti
outsb
pop
adc
mov
cwtl
inc
push
adc
cmp
sbb
adc
inc
pop
adc
lahf
push
fsubrp
bound
push
js
js
js
js
cltd
push
sbb
xchg
jecxz
in
sti
and
sbb
outsl
add
cli
mov
clc
cltd
push
sbb
sbb
fisttpll
push
sbb
adc
adc
mov
push
sbb
sbb
adc
adc
rcr
in
lahf
inc
ficompl
push
mov
cli
insl
in
in
mov
cli
lods
pop
in
in
push
lahf
push
mov
cltd
push
push
cwtl
add
inc
in
lcall
pop
in
lcall
cltd
push
xor
je
in
in
xchg
shlb
add
jp
adc
adc
js
mov
inc
call
sti
sahf
push
add
js
push
jp
add
adc
js
cltd
inc
sbb
in
jmp
cltd
push
sbb
mov
or
js
push
js
js
cltd
push
sbb
mov
in
sti
push
adc
adc
js
jp
adc
adc
js
mov
inc
call
sti
ds
add
cltd
push
or
ljmp
adc
test
jp
adc
js
adc
jns
adc
adc
push
jg
adc
sbb
call
cltd
push
shr
rcrb
cli
add
inc
or
sbb
aad
in
pop
je
cltd
push
or
adc
add
cli
mov
in
in
stc
or
push
cli
jno
in
in
lea
cltd
inc
sbb
sbb
test
in
jmp
jp
outsl
adc
push
jp
outsl
add
lahf
pop
mov
push
sbb
sbb
test
mov
push
scas
mov
cli
jne
in
cltd
push
mov
adc
push
cltd
push
or
mov
in
in
sti
inc
add
adc
push
sbb
aam
in
cltd
enter
or
adc
add
fld
in
cltd
push
mov
lahf
push
lods
cltd
inc
sbb
cli
mov
in
cltd
push
lods
cli
icebp
pop
in
cli
sub
repnz
call
adc
jp
adc
adc
push
cltd
push
or
and
in
in
sti
fiadds
adc
push
js
push
js
js
cltd
push
sbb
add
rcll
adc
cltd
inc
sbb
sbb
ret
in
in
mov
cltd
push
push
stos
es
add
sub
inc
sbb
or
push
sbb
adc
push
mov
cli
xor
in
cltd
push
or
sbb
add
adc
dec
in
in
mov
cltd
push
push
stos
es
add
loope
in
in
mov
fwait
inc
cmp
sub
push
sbb
push
sbb
add
adc
fld
in
in
mov
cltd
dec
cmp
push
mov
cli
adc
in
cltd
push
or
push
mov
push
and
sar
cltd
push
test
lds
in
inc
lahf
inc
mov
inc
or
cli
insb
shr
in
cltd
inc
mov
lods
dec
in
in
cli
adc
inc
sbb
or
scas
in
call
push
sbb
push
adc
adc
stc
or
adc
adc
js
cltd
push
sbb
repz
add
js
cltd
push
sbb
cmc
in
sti
adcl
sbb
sbb
ret
mov
cltd
push
and
cli
std
in
in
mov
fwait
inc
cmp
es
cltd
push
sbb
adc
and
cli
loope
in
cltd
push
or
sbb
add
adc
sbb
push
sbb
jge
add
mov
in
in
mov
fwait
inc
cmp
sub
push
sbb
push
sbb
add
adc
test
push
sbb
or
adc
add
rol
in
cltd
push
or
push
mov
inc
sbb
call
cltd
push
mov
mov
in
movsl
in
cltd
inc
or
sbb
mov
pushw
cltd
inc
sbb
push
cmp
adc
add
sbb
cmp
adc
add
cltd
inc
sbb
repz
adc
js
cltd
inc
sbb
sar
in
in
jmp
cltd
push
sbb
outsl
adc
call
cltd
inc
sbb
mov
inc
sbb
ret
in
cltd
fimull
cmp
inc
sbb
sar
cltd
push
pushf
inc
lahf
push
cwtl
inc
cltd
push
or
adc
adc
adc
add
cli
fcom
in
in
cltd
inc
mov
inc
xchg
push
mov
cli
mov
in
in
cltd
inc
xchg
lock
in
in
cli
cmp
cli
cmp
in
in
xchg
shlb
inc
sbb
push
cmp
adc
add
sbb
cmp
adc
add
cltd
inc
sbb
repz
adc
js
cltd
inc
sbb
adc
rcrl
adcb
sbb
ret
mov
pop
cltd
inc
sbb
adc
adc
push
shr
in
cltd
inc
addb
sahf
cltd
inc
or
cli
or
in
in
cltd
inc
sahf
cli
dec
dec
in
in
cli
mov
in
in
pop
cli
cltd
lods
in
xchg
shlb
push
or
push
add
adc
jmp
cltd
push
or
push
add
adc
push
cltd
push
or
repz
adc
push
cltd
push
or
sub
in
sti
ds
sbb
jge
add
rol
in
jne
cltd
push
or
cli
mov
call
mov
mov
push
jp
outsl
add
lahf
push
test
cli
adc
in
in
cltd
inc
xchg
lahf
pop
mov
push
cli
mov
in
in
mov
inc
push
js
push
js
mov
inc
call
sti
ret
adc
push
or
ljmp
adc
test
jl
adc
outsb
adc
pop
jl
adc
jl
adc
outsb
adc
fildll
adc
outsb
adc
fildll
adc
jl
adc
jl
adc
jge
adc
adc
jns
adc
cli
mov
in
cltd
push
or
and
cltd
push
or
push
in
incl
push
or
mov
xor
add
jmp
pop
inc
mov
mov
cwtl
push
add
cltd
add
dec
fdivrp
in
mov
scas
adc
cltd
add
jns
in
sti
cmp
adc
cli
dec
fsubrp
in
jmp
mov
mov
add
adc
adc
cltd
adc
xor
in
sti
out
pop
add
js
push
jp
adc
adc
call
adc
jno
in
in
jmp
cltd
push
sbb
adc
push
js
js
cli
sub
in
cltd
inc
or
pop
adc
cltd
push
sbb
add
adc
inc
inc
cli
sub
in
in
mov
and
fwait
inc
inc
push
jp
icebp
adc
jp
adc
adc
in
adc
cli
add
in
sti
xchg
or
mov
adc
add
cltd
adc
push
jp
add
push
sti
bound
adc
mov
xchg
sub
setbe
add
mov
scas
adc
cltd
add
push
jp
adc
adc
push
pop
adc
cltd
push
sbb
pusha
sbb
sbb
add
cmp
add
cltd
push
or
adc
js
js
cltd
push
sbb
dec
sti
in
sti
sbb
shr
mov
mov
inc
adc
cli
aad
in
in
mov
idivb
push
xchg
cltd
push
sbb
cli
jne
in
in
mov
cli
mov
in
in
mov
idivb
nop
rclb
add
lahf
xchg
jl
in
in
mov
cltd
push
push
cwtl
inc
add
pop
in
cltd
xchg
jl
in
in
call
cltd
pop
imulb
lcall
test
in
lcall
push
cwtl
push
adc
or
in
in
cltd
test
in
cli
dec
push
in
cltd
pop
in
adc
mov
lcall
xchg
in
in
cltd
inc
or
adc
icebp
fsubrp
in
mov
cli
cmp
in
in
cltd
adc
cltd
add
add
add
push
sbb
ss
inc
sbb
mov
call
xchg
rcrb
add
add
mov
cltd
inc
add
hlt
adc
adc
js
mov
inc
call
sti
ljmp
in
in
sti
out
sbb
adc
push
adc
sbb
adc
lret
sbb
add
xchg
sub
popw
cli
push
icebp
in
in
mov
je
push
ss
push
cltd
push
or
mov
dec
adc
cli
push
into
in
in
mov
mov
mov
cltd
inc
add
add
cmp
adc
push
stos
es
add
or
lret
or
in
in
inc
cltd
lret
pop
cltd
push
or
adc
add
adc
xchg
jo
in
in
call
cltd
pop
es
add
sub
adc
add
cmp
adc
adc
add
cli
add
in
in
cltd
inc
sbb
outsl
add
cli
mov
in
in
cltd
lock
push
sbb
jle
in
incl
fmull
push
sbb
adc
adc
mov
in
lcall
in
cli
leave
push
in
in
mov
mov
data16
nop
inc
sub
adc
sub
push
test
adc
adc
mov
mov
add
cltd
inc
sbb
fucomi
in
mov
cltd
adc
pop
cmp
adc
adc
mov
inc
jp
pop
adc
push
js
call
cltd
pop
es
add
sub
adc
jp
adc
mov
xchg
sub
je
cli
in
in
in
cltd
inc
sbb
ss
js
cltd
push
sbb
mov
pop
add
cli
in
in
in
cltd
adc
fwait
adc
adc
add
sub
adc
mov
pop
pop
sub
adc
adc
and
es
add
add
inc
js
mov
mov
push
jp
pop
add
js
push
cli
js
in
in
cltd
adc
cltd
add
add
negb
add
cltd
push
or
pusha
sbb
xchg
and
add
sti
fisttpll
adc
lahf
test
in
cli
mov
in
in
cmpsl
fs
in
in
push
lahf
xchg
jb
in
in
cli
rorl
in
in
jp
jge
add
cli
cltd
test
in
in
cmpsl
pop
in
in
in
push
js
cli
mov
in
in
lea
cli
jo
in
in
in
mov
in
in
jp
insb
add
js
call
lahf
xchg
in
in
cli
inc
push
in
in
jmp
jp
jge
add
jmp
jp
jge
add
incl
pop
cmpb
scas
adc
cltd
add
cli
mov
inc
in
in
jp
outsl
add
lahf
xchg
dec
in
in
in
push
cltd
pop
xchg
scas
adc
cltd
adc
cltd
adc
cli
popa
stos
in
in
cmpsl
dec
in
in
in
push
lahf
xchg
pop
in
in
inc
mov
xchg
mov
mov
cltd
adc
call
in
cmpsl
pop
in
in
lahf
test
in
ljmp
cli
ror
in
in
cltd
test
in
incl
adc
js
push
cltd
push
or
loopne
in
in
sti
sahf
sbb
adc
in
and
outsl
adc
mov
in
jo
jp
jge
add
lcall
push
ss
in
cmpsl
push
in
in
jp
outsl
adc
lea
cltd
push
or
sub
cmpsl
cmp
in
in
push
mov
mov
push
mov
mov
lea
test
add
adc
xor
in
in
mov
inc
js
js
js
js
cltd
inc
sbb
popa
imul
in
jmp
cltd
push
sbb
movsb
push
push
sub
sbb
add
ss
xlat
adc
or
add
adc
inc
adc
dec
adc
pop
adc
adc
jo
adc
jl
adc
xchg
adc
scas
adc
shlb
shlb
add
adc
lea
cli
insb
xchg
in
in
cltd
test
in
in
incl
adc
js
push
cltd
push
or
cld
jecxz
in
sti
lcall
cli
icebp
test
in
jmp
and
cli
in
in
in
jmp
js
cli
jno
in
in
jmp
js
cli
gs
in
in
jmp
js
cli
sub
dec
adc
cli
and
in
in
jmp
js
js
jp
insb
add
cli
cmp
in
in
inc
call
sti
sub
push
jp
jle
add
adc
cli
cmc
idiv
in
sti
or
add
lods
test
in
inc
cli
aad
in
in
jmp
js
cli
lods
test
in
push
cli
shl
in
sti
jmp
add
jp
insb
adc
push
cli
adcb
icebp
in
incl
mov
ficoml
adc
js
push
js
cli
jno
in
in
push
cli
movsl
icebp
in
inc
cli
xchg
icebp
in
in
jmp
cltd
push
sbb
movsb
push
push
sub
sbb
add
ss
sub
push
adc
or
add
add
adc
out
adc
sti
adc
jg
adc
les
add
imul
arpl
add
push
stos
es
add
icebp
fsubr
in
mov
fwait
inc
cmp
and
push
sbb
push
sbb
add
adc
jmp
push
sbb
or
adc
add
add
in
cltd
push
or
outsl
adc
cli
mov
in
cltd
inc
or
sbb
inc
sbb
push
or
adc
add
in
cltd
push
or
sbb
add
adc
leave
fucomi
in
mov
cltd
inc
push
cwtl
sbb
es
push
or
xchg
sti
pop
add
js
lea
inc
mov
mov
stos
adc
adc
test
adc
adc
pop
fucomi
in
cmpsl
and
in
in
jp
insb
adc
push
cltd
push
sbb
bound
lahf
test
in
in
ljmp
cli
xchg
in
in
cltd
test
in
in
cli
test
cli
adc
in
in
jmp
js
lahf
test
in
in
incl
jb
adc
cltd
add
test
add
adc
icebp
in
jmp
jp
jle
add
outsl
adc
mov
in
jo
lahf
xchg
sub
in
in
mov
cli
cmp
in
cltd
xchg
sub
in
in
call
inc
cli
movsb
loopne
in
sti
push
pop
adc
push
js
stos
mov
scas
insb
adc
stos
adc
add
in
sti
out
push
adc
mov
cwtl
inc
add
rclb
adc
push
cli
pusha
fsubrp
in
sti
rclb
adc
xor
inc
jp
push
add
jbe
xor
xchg
cmp
data16
pop
fidivrs
push
mov
cli
mov
add
cltd
add
pop
mov
hlt
mov
mov
mov
add
in
mov
mov
add
in
inc
cli
icebp
iret
in
in
xor
dec
dec
pop
jbe
add
sbb
call
aad
in
in
push
cli
cld
fucomp
in
sti
dec
push
adc
mov
cltd
adc
inc
iret
in
pushl
cltd
adc
jne
in
js
push
js
mov
cltd
adc
imul
sub
add
call
js
cli
test
sbb
adc
cltd
push
sbb
outsl
adc
call
cltd
inc
sbb
sbb
push
or
push
sbb
adc
adc
outsb
aad
lcall
cmp
adc
adc
add
cli
mov
in
in
cltd
inc
sbb
sbb
sbb
xchg
in
sti
mov
adc
cltd
inc
sbb
outsl
add
cli
or
in
in
cltd
push
sbb
sbb
push
sbb
inc
sbb
adc
adc
add
in
in
cltd
inc
sbb
sbb
adc
adc
push
aad
lcall
push
stos
xor
adc
call
cltd
inc
sbb
ss
in
incl
push
or
push
sbb
adc
adc
in
lcall
in
cli
cmc
sub
in
mov
fwait
inc
ds
push
or
sbb
add
adc
in
in
in
mov
cltd
push
push
stos
es
add
jns
in
in
mov
fwait
inc
cmp
in
push
cltd
push
sbb
push
sbb
add
adc
jno
in
in
mov
cli
mov
in
in
cltd
push
sbb
sbb
sbb
adc
adc
cwtl
in
in
cltd
inc
sbb
sub
in
cltd
inc
or
sbb
jl
adc
mov
cltd
dec
ds
push
or
sbb
in
in
sti
push
adc
mov
xchg
rorb
or
shr
lcall
cmp
adc
rclb
add
js
cli
mov
in
in
jmp
cltd
pop
out
adc
cltd
adc
cltd
adc
sbb
push
in
in
cltd
inc
sbb
cs
in
cltd
xchg
sbb
shr
cltd
inc
sbb
pusha
adc
in
enter
enter
add
adc
out
adc
mov
cltd
inc
push
inc
js
cltd
pop
mov
cltd
pop
out
adc
cltd
adc
cltd
adc
mov
adc
adc
push
push
js
cltd
or
cltd
sbb
adc
adc
mov
cli
shrb
adc
adc
push
inc
js
cltd
pop
outsb
scas
adc
cltd
or
add
add
cltd
adc
mov
adc
adc
push
push
js
cltd
or
cltd
sbb
adc
adc
mov
cli
jl
in
in
sti
adc
adc
push
in
fidivl
fidivl
fimull
xchg
mov
xor
adc
lahf
test
in
in
cli
popf
cmp
cltd
xchg
sbb
in
in
push
js
js
js
js
cltd
push
sbb
pop
iret
in
sti
jmp
lock
adc
mov
in
and
insl
adc
mov
in
jo
lahf
xchg
adc
in
in
mov
cli
leave
sar
in
cltd
xchg
adc
in
in
call
inc
cli
sbb
in
in
inc
call
cltd
pop
dec
mov
add
add
cltd
adc
ret
je
js
push
js
push
js
mov
inc
call
sti
adcb
adc
push
js
push
js
mov
inc
call
stc
imul
mov
jp
insl
adc
mov
in
jo
lahf
xchg
adc
in
in
mov
cli
dec
sar
in
cltd
xchg
adc
in
in
call
inc
cli
pushf
in
inc
call
cltd
pop
dec
mov
add
add
cltd
adc
ret
je
js
push
js
push
js
mov
inc
call
stc
add
js
js
js
js
cltd
push
sbb
pop
into
in
and
pop
dec
dec
jbe
add
sbb
sahf
movsl
in
cli
jne
in
and
pop
dec
dec
jbe
add
aam
in
in
sti
jne
in
in
call
sti
movsl
int
in
and
pop
dec
dec
jbe
add
jge
add
ljmp
cli
mov
data16
in
stc
cli
dec
pop
dec
cltd
negl
push
adc
in
in
in
call
adc
add
adc
jge
ja
adc
adc
in
in
in
call
adc
add
adc
add
in
in
call
adc
add
adc
add
in
in
call
adc
add
adc
add
in
in
ljmp
adc
inc
pop
push
push
inc
push
inc
inc
dec
pop
jnp
pusha
jge
outsl
je
dec
push
jnp
jbe
gs
dec
inc
addr16
pusha
gs
inc
gs
popa
jnp
jl
push
jo
xor
data16
pop
inc
jnp
push
push
inc
cmp
push
adc
in
in
in
call
adc
add
xor
add
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
add
in
in
call
adc
add
push
add
in
in
lcall
adc
add
inc
push
push
pop
and
dec
adc
add
in
in
call
jg
ja,pn
ja
in
in
in
call
adc
add
adc
in
in
in
call
ja
imul
add
in
in
lcall
adc
add
pusha
jae
jl
insb
adc
adc
in
in
in
lcall
adc
add
outsl
pusha
jnp
gs
adc
add
jge
jg
jl
push
addr16
jl
add
in
in
adc
add
jge
pusha
jae
and
gs
dec
pop
outsb
data16
outsb
ja
xor
bound
pusha
ja
pop
jnp
push
jle
pusha
gs
push
adc
adc
in
in
in
call
adc
add
adc
add
in
in
incl
adc
add
outsb
imul
jge
jl
jno
jnp
jl
adc
in
in
in
jmp
adc
add
inc
push
push
pop
dec
inc
addr16
pusha
gs
push
outsl
jl
pusha
outsl
jle
ja
dec
push
jge
pushaw
jge
dec
inc
ja
jg
jl
jle
inc
gs
fs
adc
adc
push
push
dec
pop
inc
data16
data16
add
in
in
lcall
adc
add
inc
pop
inc
jle
addr16
dec
adc
push
push
dec
pop
inc
data16
adc
adc
inc
cltd
xor
inc
jp
insl
adc
fs
and
xor
pop
dec
fcoms
add
rorb
pop
jbe
add
insl
adc
sar
pop
mov
in
stc
clc
dec
rcrl
lret
adc
inc
cltd
enter
shll
shl
test
addr16
mov
dec
rorl
loope
in
dec
rcrl
push
xchg
ljmp
push
mov
ss
jo
cltd
push
and
pop
inc
mov
and
mul
xchg
shlb
sti
jmp
cltd
shll
shl
mov
push
sbb
and
rorb
mov
ss
ret
ss
push
shld
dec
xchg
leave
pusha
das
push
and
lea
fwait
cltd
push
ss
cltd
jl
sbb
and
in
xchg
shlb
std
stc
or
in
idiv
adc
inc
pop
addr16
mov
dec
dec
pop
dec
dec
dec
ret
inc
cltd
incb
in
inc
inc
push
fwait
inc
ljmp
push
out
push
out
cltd
inc
adc
fwait
push
repnz
cli
dec
in
in
in
mov
cltd
inc
cli
cli
nop
test
in
fwait
inc
into
and
push
jp
nop
add
jbe
xor
xor
negb
inc
mov
xchg
ret
pop
loopne
movsl
pop
adc
ret
fwait
push
lret
loopne
movsl
pusha
push
pop
xchg
in
add
push
mov
ret
push
sub
adc
in
cltd
ficompl
in
xor
in
cltd
push
loopne
inc
sub
inc
cli
mov
inc
negb
repnz
dec
xchg
in
jnp
and
lea
mov
clc
add
inc
fsubrs
push
call
add
cltd
inc
fcomps
inc
lret
call
cltd
enter
call
cltd
push
lret
ljmp
sub
inc
in
in
adc
fwait
push
in
aaa
cltd
inc
lret
clc
sbb
sbb
lret
rcrb
cltd
push
repnz
inc
cmp
cmp
in
adc
fwait
push
testb
lcall
test
add
adc
jge
in
in
lea
test
add
adc
insl
lret
in
in
lea
inc
lahf
test
js
push
js
push
js
push
cltd
push
clc
cli
lea
cli
test
rorb
xchg
ficoms
add
aad
or
in
in
pop
adc
adc
in
inc
cltd
test
in
in
incl
movsb
aad
in
lahf
inc
incb
add
push
loop
cltd
push
mov
mov
inc
cli
cmp
in
in
push
jp
xor
adc
inc
repnz
push
xor
cltd
xchg
cld
in
in
in
push
cli
imul
in
inc
cltd
push
call
inc
cltd
push
loopne
push
es
cltd
xchg
out
in
in
inc
call
lahf
push
push
js
cltd
inc
repnz
shlb
cltd
push
mov
rcrb
push
cltd
xchg
out
in
in
inc
call
cltd
push
repnz
cltd
push
repnz
fwait
push
scas
lea
inc
cltd
test
in
in
incl
loopne
in
in
cltd
test
in
in
incl
lods
aad
in
aad
out
in
in
and
pop
dec
dec
jbe
add
adcb
cltd
inc
into
inc
cli
pop
fucomp
in
pop
sar
xor
in
in
stc
out
cltd
push
out
dec
dec
cltd
in
rcrl
adc
inc
push
cltd
loopne
fsubs
rcrb
push
js
js
js
jp
adc
xchg
mov
cli
jl
in
in
inc
call
fwait
push
out
outsl
out
setbe
rclb
push
xchg
add
jbe
xor
xor
cltd
push
hlt
inc
cli
cmp
in
in
cltd
fcomps
in
in
mov
and
inc
jp
adcl
jbe
and
and
lahf
inc
ljmp
mov
inc
call
cltd
les
cld
in
in
fwait
inc
out
and
pop
dec
dec
jbe
add
adcl
cltd
inc
loop
aam
in
in
shr
jle
in
stc
loop
rorb
fs
add
xchg
adc
mov
inc
call
sar
pop
mov
in
stc
out
cltd
push
out
pop
dec
cltd
negl
lahf
push
add
xor
inc
jp
xchg
adc
fs
and
xor
pop
dec
fcoms
add
rorb
pop
jbe
add
xchg
adc
sar
add
in
in
stc
clc
dec
rcrl
lret
adc
inc
inc
inc
mov
cltd
loop
add
into
adcl
cli
mov
lret
je
inc
cltd
lret
pop
cltd
adc
adc
adc
cli
lods
scas
in
cltd
aam
fldcw
cli
icebp
scas
in
in
jmp
cltd
aad
add
or
dec
rcll
add
in
in
call
adc
add
adc
inc
cltd
push
inc
cltd
fisubl
rolb
xchg
adc
jbe
and
add
data16
xor
adc
cltd
add
add
cli
pop
mov
cltd
rcrl
adc
in
in
jmp
lahf
push
cld
inc
mov
scas
adc
cltd
add
test
add
adc
xor
inc
out
cltd
ret
stos
sahf
xchg
add
cli
add
dec
dec
dec
fs
add
xchg
adc
lea
cli
xor
cmp
pop
dec
dec
roll
in
in
in
lcall
adc
add
inc
push
push
pop
and
dec
adc
add
in
in
lcall
adc
inc
pusha
jge
pusha
jae
and
gs
dec
adc
inc
cltd
push
inc
cltd
fisubl
rolb
xchg
adc
jbe
and
add
and
inc
stc
jnp
pusha
mov
jp
test
add
xchg
adc
mov
test
add
adc
stc
stos
in
in
jmp
mov
scas
adc
in
xor
xchg
add
jp
test
add
add
cli
enter
stc
aas
lahf
push
out
push
mov
mov
mov
test
adc
adc
dec
mov
out
cltd
sarl
cli
sub
mov
jb
add
cltd
add
adc
cli
and
rorb
pop
jbe
add
xchg
adc
lahf
push
out
call
sar
sub
in
in
stc
lock
dec
dec
ret
in
in
in
lcall
adc
add
inc
push
push
pop
and
dec
adc
add
in
in
lcall
adc
add
ja
jnp
jnp
cmp
push
adc
adc
in
in
in
lcall
adc
add
jno
jl
jnp
cmp
push
adc
adc
in
in
in
adc
add
jge
pusha
jae
and
gs
dec
pop
outsb
data16
outsb
ja
xor
bound
pusha
ja
pop
jnp
push
jle
pusha
gs
push
adc
adc
in
in
in
lcall
adc
add
bound
ja
cmp
push
adc
adc
inc
cltd
mov
js
js
pop
addr16
inc
inc
inc
mov
and
push
jp
fwait
add
jbe
xor
xor
fwait
adc
call
cltd
inc
out
mov
stos
mov
add
cli
cmp
out
je
in
in
cltd
inc
out
pop
clc
test
fwait
add
cli
and
in
in
cltd
push
ljmp
lcall
cli
pushf
xor
in
cltd
push
loop
shr
outsb
cmpsl
in
lcall
cli
add
in
in
cltd
push
mov
scas
adc
cli
cmpsl
in
in
lea
cltd
ret
cli
in
out
in
cltd
inc
call
add
pop
mov
in
lahf
push
negb
in
lcall
cmp
lcall
add
lahf
inc
loopne
sar
int
in
in
mov
mov
mov
cmpsl
in
lcall
cli
movsb
cld
in
in
cltd
inc
into
cli
fsubrs
in
in
cltd
adc
lcall
call
cltd
push
call
lahf
inc
lret
out
in
lcall
mov
cmpsb
in
lahf
inc
rcrb
in
in
mov
mov
mov
movsb
in
pushl
lahf
inc
enter
pop
out
in
in
mov
cli
insl
cmp
in
lea
cli
pop
out
in
in
mov
mov
mov
cmpsb
in
lcall
cli
and
in
in
cltd
push
mov
scas
adc
cli
andl
or
in
cltd
inc
shlb
js
in
in
lahf
push
scas
cltd
shr
push
out
in
lcall
mov
cmpsb
in
cltd
adc
in
in
cltd
adc
fwait
adc
call
cltd
pop
loop
adc
fwait
add
cli
or
in
in
cltd
adc
fwait
adc
call
cltd
pop
dec
scas
adc
fwait
add
cli
in
in
in
cltd
adc
fwait
adc
call
cltd
pop
inc
mov
add
push
jbe
and
lahf
inc
stos
inc
cltd
or
cltd
sbb
adc
adc
mov
cli
add
in
in
cltd
push
stos
cltd
shr
mov
sub
je
lahf
inc
mov
adc
test
inc
cmpsb
cltd
ret
cli
test
scas
adc
cltd
adc
cltd
mov
mov
cltd
pop
mov
adc
mov
cltd
pop
hlt
mov
mov
mov
add
in
cltd
inc
mov
sar
popa
mov
mov
cmp
in
cltd
inc
lods
cltd
sar
dec
mov
adc
mov
mov
call
lahf
push
mov
scas
adc
cltd
or
add
add
cltd
adc
push
in
lcall
cli
add
mov
adc
add
mov
cli
in
mov
in
xchg
cmp
data16
in
in
cltd
adc
je
adc
pop
cmp
mov
out
add
cltd
add
cltd
adc
and
inc
mov
ret
cli
lods
mov
pushf
cltd
adc
mov
inc
mov
in
xchg
sub
pushw
mov
mov
cli
mov
dec
dec
dec
fs
add
or
sbb
lods
in
in
and
dec
dec
dec
fs
add
fwait
adc
lea
test
adc
adc
mov
add
dec
dec
mov
dec
roll
in
in
in
call
adc
inc
pop
pop
inc
pop
inc
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
adc
inc
cltd
push
inc
inc
and
inc
jp
mov
add
and
and
add
add
in
jp
sbb
adc
cli
adc
jmp
rorb
dec
jbe
adc
fdivrp
jne
in
in
call
stc
rorb
dec
dec
rcll
cltd
clc
cltd
lock
aam
add
ljmp
pop
adc
test
in
in
xchg
rcrb
leave
test
addr16
jmp
push
js
js
cli
vpaddd
cltd
pop
cld
mov
cltd
rcrl
dec
dec
ret
rcrl
xor
inc
jp
cwtl
adc
fs
and
xor
rcrb
dec
jbe
add
mov
add
jmp
stc
ljmp
outsb
cwtl
adc
xor
adc
inc
adc
out
inc
adc
mov
inc
adc
cmp
adc
dec
adc
fimull
adc
dec
adc
scas
adcl
adcb
outsb
adcb
pop
adcb
cmpsb
mov
adc
mov
adc
jle
adc
cmpsb
adc
add
adc
adc
adc
ret
adc
aam
adc
adc
or
adc
scas
push
adc
mov
adc
inc
add
adc
add
adc
add
adc
fimuls
adc
mov
adc
inc
movlps
push
movlps
cli
movlps
stos
movlps
out
xor
adc
xor
adc
adc
es
adc
and
adc
and
adc
adc
cmp
adc
lret
adc
pop
adc
ficomps
adc
inc
adc
mov
adc
adc
push
insl
adc
xchg
xchg
adc
inc
xchg
adc
adc
adc
pop
cwtl
adc
inc
cltd
mov
js
js
pop
addr16
stos
cbtw
add
cli
xor
in
in
test
xor
inc
jp
adcb
fs
and
xor
in
in
lahf
push
call
in
lahf
push
in
test
in
lahf
push
loopne
popf
in
in
lahf
push
fdivr
xchg
in
in
lahf
push
fdivr
insl
in
in
lahf
push
aam
gs
in
lahf
push
sar
jge
in
lahf
push
int3
cli
jne
in
lahf
push
enter
in
lahf
push
cli
inc
in
in
lahf
push
sar
in
in
lahf
push
mov
in
lahf
push
mov
in
lahf
push
mov
and
push
mov
cmp
push
lods
cli
xor
push
test
or
push
movsb
cli
add
push
mov
in
lahf
push
pushf
cli
adc
push
cwtl
cli
in
out
in
lahf
push
xchg
cli
in
in
lahf
push
nop
cli
std
out
in
lahf
push
mov
cmc
out
in
lahf
push
mov
int
in
lahf
push
test
in
lahf
push
cmp
out
in
lahf
xchg
jl
in
in
call
lahf
xchg
push
in
in
cli
mov
xchg
in
in
cli
mov
test
in
cli
mov
in
lahf
xchg
insb
in
in
in
call
lahf
xchg
jp
in
in
cli
out
in
in
lea
cli
nop
std
in
in
lahf
test
in
cli
gs
in
lahf
xchg
pop
in
in
in
call
lahf
xchg
dec
in
in
cli
popa
out
in
in
lea
cli
inc
std
in
in
lahf
test
in
cli
pop
out
in
lahf
xchg
dec
in
in
in
call
lahf
xchg
pop
in
in
cli
xor
xchg
push
in
in
cli
cmp
in
in
lahf
test
in
cli
or
xchg
cmp
in
in
call
lahf
xchg
sub
in
in
cli
or
in
in
lea
cli
in
cld
in
in
lahf
test
in
in
cli
loope
in
lahf
xchg
sub
in
in
call
lahf
xchg
cmp
in
in
cli
fucomp
in
in
lea
cli
sar
in
lahf
test
in
in
cli
aad
in
lahf
xchg
sbb
in
in
call
lahf
xchg
or
in
in
cli
mov
in
in
lea
cli
mov
in
in
lahf
test
in
in
cli
mov
in
lahf
xchg
or
in
in
call
lahf
xchg
sbb
in
in
cli
test
in
in
lea
cli
push
test
in
in
cli
jge
in
lahf
xchg
cld
in
in
in
call
lahf
xchg
ljmp
in
in
lea
cli
pop
cld
in
in
lahf
test
in
in
cli
push
out
in
lahf
xchg
in
in
in
in
call
lahf
xchg
cli
in
in
cli
sub
xchg
imul
in
cli
xor
in
in
lahf
test
in
in
cli
add
xchg
fsubr
in
in
call
lahf
xchg
lret
in
cli
add
in
in
lea
cli
in
in
in
lahf
test
in
in
cli
stc
jmp
int3
in
in
in
call
lahf
xchg
in
in
cli
aad
in
in
lea
cli
fdivr
in
in
lahf
test
in
in
cli
lods
jmp
mov
cmpsb
jmp
stos
in
in
cli
test
xchg
cmpsb
in
in
cli
mov
in
in
lahf
test
sub
lods
in
in
in
mov
cli
icebp
xor
lods
in
in
in
mov
stos
addb
cli
xchg
scas
in
in
and
stos
push
addb
cli
or
in
in
xchg
rcrb
lahf
test
mov
xchg
out
adc
cli
int
in
cli
lock
in
mov
mov
adc
add
add
add
cltd
adc
push
xor
cs
fsubr
mov
cli
lods
call
seta
pop
insb
mov
mov
scas
adc
cltd
add
or
sahf
add
adc
adc
adc
mov
cli
in
es
in
xchg
rcrb
xchg
lret
dec
xchg
adc
cli
jne
in
in
test
sbb
adc
mov
mov
add
in
inc
cli
jno
in
in
push
mov
mov
add
in
inc
mov
mov
cli
inc
mov
in
inc
call
mov
mov
add
js
mov
mov
call
inc
cli
and
in
in
jp
fcoms
add
jb
in
lcall
in
stos
insb
fcoms
add
mov
xchg
je
adc
call
cltd
pop
out
adc
cltd
adc
cltd
adc
sahf
mov
pushl
inc
js
cltd
pop
out
adc
cltd
adc
cltd
adc
cli
mov
adc
cltd
adc
sarl
in
mov
scas
adc
xchg
cmp
mov
fidivrs
push
mov
cli
cmp
mov
inc
push
cltd
pop
cwtl
mov
cltd
pop
int3
mov
mov
scas
adc
cltd
add
dec
mov
in
stc
push
mov
cltd
adc
flds
mov
cli
pop
mov
adc
call
inc
mov
scas
adc
cltd
add
sub
lret
cli
mov
pop
dec
cli
sbb
in
in
mov
mov
adc
stos
push
add
cli
cwtl
and
in
mov
mov
adc
add
jp
adcb
mov
in
and
adcb
lea
test
add
adc
test
xchg
mov
in
cli
int3
scas
in
in
inc
call
sti
mov
push
xchg
adc
xchg
lret
mov
rcrb
mov
mov
adc
mov
mov
add
mov
mov
adc
jp
fwait
add
js
push
cli
lods
in
in
mov
mov
adc
mov
mov
hlt
mov
cli
pop
stos
in
in
cli
mov
mov
mov
je
adc
mov
push
cltd
pop
xchg
scas
adc
cltd
or
adc
call
js
js
js
inc
call
xchg
shlb
inc
cli
test
in
in
inc
call
stc
lock
dec
dec
dec
fs
add
adcb
lea
test
add
adc
lods
mov
xchg
mov
in
stc
cli
pop
cli
xchg
mov
add
in
in
call
adc
inc
pop
pop
inc
pop
inc
adc
in
in
in
call
adc
add
adc
in
in
in
call
adc
add
pop
pop
add
in
in
call
adc
add
dec
inc
add
in
in
call
adc
add
push
dec
add
in
in
lcall
adc
add
popa
je
jle
push
jnp
ja
in
in
in
pushl
adc
cmpsb
loope
xlat
in
mov
faddp
lods
call
mov
leave
stos
mov
mov
fsubrs
adc
in
in
in
lcall
adc
add
jbe
cmp
jle
and
adc
add
in
in
call
adc
add
adc
add
adc
add
adc
add
add
add
pusha
call
pop
sub
push
mov
mov
add
mov
xor
mov
add
loop
pop
popa
nop
nop
nop
nop
nop
nop
nop
nop
pusha
call
pop
sub
push
mov
mov
add
mov
xor
mov
add
loop
pop
popa
mov
jmp
nop
nop
nop
