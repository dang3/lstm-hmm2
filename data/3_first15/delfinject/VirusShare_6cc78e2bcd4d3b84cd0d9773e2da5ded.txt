xchg
add
add
add
add
add
xchg
inc
add
or
mov
and
divb
mov
push
fadds
daa
sub
mov
pop
insl
add
in
sahf
and
mov
push
add
jns
sbb
mov
cmp
ret
or
dec
in
mov
xor
outsb
add
xchg
adc
pop
or
in
cmp
push
ljmp
loope
call
popa
sub
mov
xor
sub
inc
cli
es
or
mov
push
push
xorl
int
push
lods
push
pop
pusha
js
jne
iret
popf
bound
jmp
mov
dec
loop
rclb
and
jg
lds
sbb
add
pop
add
iret
js
shrb
lret
gs
and
jns
int3
mov
mov
loopne
cmp
add
iret
ss
xor
cmp
sahf
or
pusha
pop
push
inc
shll
pop
sub
inc
mov
outsl
push
jg
jne
push
in
arpl
orl
mov
popf
outsb
add
flds
icebp
or
movl
les
cmp
mov
xchg
testl
test
ljmp
jmp
push
mov
sub
inc
sbb
popa
mov
jmp
mov
xor
jg
push
pop
jbe
movsb
aam
nop
sbb
cmp
adc
inc
jne
fsubl
roll
push
ret
into
js
xchg
mov
aad
sbb
jp
cmpl
mov
bound
pop
ret
ds
xor
sti
fwait
mov
add
andl
mov
sub
fdivrs
inc
out
sub
ja
xor
add
pop
aad
inc
jle
or
test
movsl
shlb
inc
aaa
adc
fimuls
mov
mov
jg
into
dec
shll
mulb
mov
hlt
mov
adc
pop
or
aas
xchg
xor
cmp
xlat
xor
mov
jb
cmp
shufps
push
lods
dec
andb
jecxz
jns
les
bound
pop
call
add
out
aas
loop
pop
arpl
or
sbb
leave
mov
adc
xchg
lds
pop
pop
cmp
pop
adc
sbb
in
insb
lds
loopne
xabort
aad
pop
dec
sub
fiaddl
imul
mov
inc
jnp
lahf
mov
mov
xchg
sbb
out
pop
lds
cld
pusha
jb
sub
jecxz
hlt
lock
and
fidivrs
aam
lcall
incl
add
mov
jg
in
jmp
sbb
sbb
jmp
adc
rcrb
cmc
lock
in
xchg
sub
repnz
ljmp
xchg
pop
inc
adc
xor
dec
hlt
lret
in
inc
push
mov
jnp
mov
js
xchg
daa
js
ret
xchg
out
cmp
pop
and
or
lret
idivl
mov
adc
push
jecxz
in
add
xlat
fcoml
mov
dec
mov
mov
clc
and
mov
jns
fistpll
xchg
push
cltd
pop
sbb
mov
lds
jns
mov
shl
and
inc
jno
add
push
scas
out
test
mov
das
xchg
out
xchg
xchg
xchg
int
and
xor
push
stc
lret
mov
insl
pop
inc
popa
testb
pop
mov
pop
movsl
mov
pop
xchg
std
int
loop
jg
aas
cmp
dec
dec
mov
es
fbld
in
fisttpl
outsl
lahf
mov
xchg
fiadds
xor
mov
enter
sbb
dec
ficomps
das
ja
cli
andl
jnp
dec
fsubr
sbb
popf
pusha
jecxz
inc
ljmp
jne,pn
sbbl
cltd
mov
fdivp
jb
inc
xor
jl
jns
pop
mov
xchg
lcall
pop
test
add
icebp
xlat
out
jle
add
sub
bound
push
bound
int
xchg
pop
jnp
mov
push
sti
push
or
fstpt
ret
sahf
mov
ss
dec
cmc
scas
out
imul
sub
aas
mov
add
fidivl
lret
jae
cmpsl
call
or
mov
cli
sbbb
cltd
pop
dec
imul
sub
cmpsb
mov
jnp
into
repz
xchg
fucom
mov
sbb
lea
lock
push
mov
sub
add
fiaddl
repnz
pop
popa
inc
mov
in
cmpsl
cli
jle
ljmp
cmp
fsubr
xchg
inc
jmp
faddl
addr16
int
adc
xor
lret
mov
jge
shlb
sbbb
lea
add
clc
xchg
mov
sub
fildl
mov
test
test
jno
xor
js
ljmp
lea
stos
add
sti
inc
aaa
jne
or
xorb
repnz
loope
int3
fistps
or
cli
mov
faddl
pop
dec
pop
pop
cmp
imul
lods
sub
jnp
dec
sub
cmp
test
inc
xchg
into
scas
repz
lock
fists
stos
jg
pop
or
xlat
scas
or
daa
out
sub
mov
popf
aam
xor
ret
and
mov
jbe
mov
ficoms
cmp
cs
xchg
scas
inc
and
pop
sub
pop
bound
push
push
push
std
call
call
sub
adc
jg
adc
stos
mov
jge
sbb
jl
sbb
cmp
dec
xor
push
jnp
scas
pop
and
int3
imull
mov
mov
shl
and
std
and
loopne
fs
mov
mov
adc
mov
sub
jg
es
das
in
xor
xchg
pusha
int
or
imul
fcmove
stc
jo
cmp
ljmp
imul
lcall
or
mov
xchg
push
bound
and
je
xor
jbe
mov
lretw
adc
lods
adc
inc
std
gs
nop
cmp
std
xor
adcb
lods
ss
subb
pop
mov
scas
std
mov
mov
lods
mov
int3
push
inc
mov
daa
push
outsl
pop
mov
sub
cmp
rcrb
icebp
adc
xchg
bound
mov
push
rcrl
pop
pop
push
push
push
push
fstl
push
or
mov
adc
scas
rol
mov
fsubl
mov
vmovshdup
mov
mov
adc
mov
pop
out
push
or
xchg
sub
and
jmp
xchg
test
fldt
mov
cmp
push
pusha
test
rcrl
jns
andl
clc
xor
fmul
jl
imul
test
inc
inc
jnp
mov
test
or
pop
xchg
in
stos
cmpsl
xor
cmp
pop
das
push
nop
ss
mov
fdivrl
mov
aaa
and
mov
or
fcompl
andb
jmp
add
mov
dec
sub
xchg
pop
lret
int3
insb
dec
and
leave
dec
imul
out
imul
arpl
mov
les
lds
out
mov
jl
out
in
mov
aas
frstor
mov
aad
stc
mov
loopne
push
mov
pusha
jbe
pop
repnz
pushf
fcoml
mov
lret
cmp
or
xor
cmp
adc
loopne
ret
popf
insb
cld
addl
rcl
xchg
in
jmp
daa
pop
xlat
je
sbb
jb
stos
idivl
push
mov
push
jbe
test
arpl
push
je
jge
adc
cltd
dec
in
fwait
xor
ds
pop
test
add
push
es
sarb
pop
pop
arpl
mov
jnp
fdivl
jg
fadds
shlb
sbb
cmp
push
and
popa
insb
cmc
dec
sub
cmp
inc
mov
repz
adc
aad
repnz
stos
push
out
pop
mov
dec
repnz
cld
adc
fld
xor
dec
std
sub
ret
fdivs
or
adc
mov
call
xchg
jecxz
fmuls
lret
mov
cmp
arpl
ja
push
mov
push
or
sbb
push
jns
mov
add
push
xchg
ljmp
inc
mov
stc
sub
pop
fwait
sahf
xchg
in
jecxz
out
sbb
pusha
mov
lock
or
xchg
xor
arpl
loopne
vshufpd
fsubp
loope
mov
sub
pop
xchg
cwtl
or
rcr
add
mov
adcb
aam
xchg
pop
dec
mov
or
insb
lahf
popa
xor
das
dec
fnstenv
std
outsl
cmp
jp
rclb
sub
in
cmp
xor
xchg
repz
mov
out
rcrb
dec
jl
aad
lcall
sbb
adc
loop
inc
fnstcw
loop
stc
in
movsb
dec
sbb
cs
xorl
add
lahf
add
in
jnp
rcr
mov
sahf
pop
lret
mov
outsb
mov
mov
adc
sub
out
mov
sbb
lret
cltd
xchg
shrb
dec
fisttpll
movsb
cmpsb
arpl
push
push
jmp
ljmp
fidivrs
lds
push
in
jb
std
repz
xchg
stos
push
test
pop
sbb
mov
and
cmpsl
push
leave
fcoml
aam
or
daa
mov
repz
mov
lds
sub
cmp
xor
iret
sub
mov
hlt
and
and
daa
mov
cmp
cmp
das
popa
push
jo
push
mov
mov
lret
cld
gs
fs
adc
inc
inc
sbb
and
mov
out
in
xchg
inc
adc
or
fcmovnb
and
inc
les
push
loop
or
cmp
rclb
ret
cmp
aas
sbb
pusha
add
cli
mov
adc
fisubrl
xor
clc
nop
loopne
add
movsb
cmpsl
repz
jbe
rcll
cmp
jp
xchg
into
pop
out
loopne
cld
and
pop
iret
sub
inc
inc
sahf
int
sti
pusha
sub
inc
in
mov
mov
pop
cld
lahf
dec
xorl
icebp
sbb
aas
and
adc
andb
aaa
imul
insb
mov
sub
mov
int
cmp
aas
lcall
add
xor
cmp
test
jl
jns
cmc
into
rclb
mov
xlat
pop
push
test
cld
loope
scas
add
mov
in
xchg
and
dec
movsb
ficoml
add
mov
fdivrs
lock
scas
dec
fiaddl
dec
push
dec
ss
push
jns
dec
cmp
sub
xchg
sub
aad
fsubrs
sti
xor
mov
jp
jnp
xchg
ficoms
in
sbb
loopne
add
lret
push
mov
inc
sub
js
scas
imulb
insl
fdivs
in
arpl
and
inc
add
dec
mov
mov
push
mov
adc
push
cli
ds
or
mov
pop
add
mov
or
inc
mov
adc
push
out
ja
popf
insl
mov
aam
sbb
jmp
cld
mov
aad
cld
adc
lret
repnz
in
daa
mov
dec
push
xor
sbb
loopne
in
ret
cmp
inc
xlat
xor
gs
xor
cmp
les
aad
push
jne
lret
sub
adc
stos
mov
fiadds
pop
movsb
push
dec
pop
test
out
repnz
pop
popa
cmp
and
inc
sbbl
shrl
cltd
fwait
in
enter
leave
lea
add
pop
adc
mov
rcll
dec
cmp
xor
es
sbb
sbb
adc
adc
jg
aas
cltd
mov
mov
jae
mov
xchg
outsb
xchg
cld
adcb
es
pop
and
int3
leave
mov
dec
or
shl
sub
cmp
inc
ljmp
rolb
add
pop
push
je
dec
mov
iret
rorb
push
lea
lret
pop
mov
int3
bound
mov
jae
int
cmpsl
mov
jbe
es
pop
mov
daa
addr16
push
xor
insl
xor
cmpsb
cwtl
cmp
inc
sbb
ja,pt
fwait
popf
mov
loope
cmp
scas
sub
push
je
cmp
mov
cs
push
lcall
jb
adc
add
negl
or
icebp
cmp
pushf
test
dec
xor
xor
repnz
test
fcoms
add
ficoms
enter
cmp
idivl
push
cs
and
push
xorb
roll
push
fwait
movsb
cmp
add
fidivl
imul
inc
inc
ret
adc
es
inc
paddw
dec
insb
scas
dec
push
out
pop
lcall
pop
in
ret
call
inc
sbb
push
mov
jl
ret
and
js
in
ljmp
or
mov
inc
add
imul
mov
or
arpl
jbe
sbb
pop
jb
ss
js
sbb
lahf
dec
pop
or
stos
into
outsl
lret
loopne
and
sbb
fdivl
je
mov
in
mov
push
outsb
ljmp
xor
ss
lods
jmp
shll
shl
xchg
jae
jbe
dec
dec
or
mov
stc
lahf
sahf
cmpsl
mov
dec
push
fs
and
daa
cmp
fmuls
sub
and
adc
and
xchg
adc
push
adc
mov
pop
sbb
enter
fnstenv
icebp
scas
xchg
pop
enter
push
in
ljmp
js
add
add
enter
scas
loop
js
mov
pop
xlat
pusha
xlat
sub
xchg
mov
cs
bswap
arpl
sub
pop
ja
shlb
adc
inc
fisubl
enter
cmpsl
fwait
lods
loop
test
push
fwait
insl
jno
cld
stc
int3
xor
or
out
jne
push
pop
popf
in
repnz
lods
adc
sbb
jb
ret
sbb
popf
out
mov
and
mov
mov
adc
or
out
clc
or
data16
push
jns
adc
mov
aas
cwtl
popf
addl
cwtl
mov
cmpsl
jbe
mov
shlb
mov
pop
fdivrs
call
cmc
fsubs
bound
test
iret
inc
mov
inc
frstor
lock
adc
imul
cs
les
cmovne
sbbb
pop
sub
inc
scas
inc
pop
imul
lret
cltd
clc
pop
je
mov
sbb
insb
push
out
fldcw
lea
cmp
mov
into
jne
push
loop
jg
jg
cmpsl
push
cs
sbb
leave
sub
mov
mov
cmpb
inc
mov
adc
cwtl
jnp
bound
cmp
jecxz
mov
inc
mov
sub
cmp
movsb
fiaddl
call
call
xor
cwtl
lret
imul
xlat
adc
and
mov
leave
mov
call
nop
cli
mov
cld
jmp
cmp
dec
xor
popa
lods
jmp
mov
scas
jl
mov
out
arpl
std
add
jecxz
cmp
ret
mov
lods
cmc
push
xchg
rorb
aaa
lret
sbb
inc
ja
enter
xchg
jle
aam
adc
hlt
shlb
lret
popa
stos
pushf
cmpsb
sub
xor
bnd
pop
in
imul
jmp
sbb
cmp
xchg
mov
mov
aaa
mov
test
icebp
or
test
outsb
cltd
gs
loope
fiadds
push
dec
pusha
sbb
movsb
lea
push
add
pop
jne
or
and
sahf
xchg
aas
cld
adcl
pop
cmpsb
sbb
loop
add
pop
push
fildl
lret
pop
xchg
lcall
xchg
stc
dec
fs
jle
pop
xor
or
insb
xadd
mov
rcr
pop
test
mov
fcomi
cld
enter
popa
and
fchs
or
lcall
popa
int3
sti
out
pop
das
adc
lcall
decb
sbb
cwtl
sbb
push
adc
rcr
out
xchg
insb
mov
int
inc
push
mov
sbb
sbb
and
neg
adc
dec
add
jmp
or
imul
push
sub
sub
inc
sahf
push
loopne
ljmp
mov
out
daa
negl
shr
xor
adc
inc
xchg
shrl
cmp
fsubs
inc
push
cld
fdiv
rorl
loopne
ja
call
pop
xchg
add
jp
or
popf
or
jno
add
or
push
fcmovnu
jns
iret
mov
cmp
adc
lcall
sub
or
je
popf
xlat
bound
and
pop
push
adc
push
fcmovnu
inc
xchg
pop
sbb
lods
dec
out
mov
mov
cld
addr16
popl
fistl
out
sub
lds
or
movsl
fmul
fwait
std
adcb
adc
mov
in
dec
pop
int
cmp
scas
push
sarb
in
mov
jecxz
or
aam
daa
sbb
mov
inc
cmpsl
mov
jle
sub
sahf
mov
aaa
in
icebp
mov
insb
sbb
enter
mulb
scas
fnstsw
and
jb
imul
jecxz
adc
iret
mov
xchg
jl
das
jg
icebp
imulb
icebp
call
aaa
lcall
popf
insb
clc
lods
mov
and
orl
loop
xchg
add
and
or
or
jne
std
lds
and
xchg
push
scas
jl
call
out
push
pop
cmp
push
fisubrs
stos
sti
fst
test
add
mov
pop
icebp
add
cmpsl
cmp
mov
push
int3
xchg
sub
rcrl
sarl
testl
repnz
leave
mov
push
movsb
mov
rcr
lods
test
push
adc
cmp
insb
aaa
ljmp
or
mov
aam
cmp
arpl
dec
imul
movsb
std
xchg
popf
mov
xor
cmp
lods
ret
mov
iret
enter
fwait
in
pop
sahf
das
inc
xchg
xchg
imul
pop
inc
ror
jmp
out
inc
and
jmp
fiadds
xlat
imul
or
mov
popf
shlb
pop
das
nop
add
adc
lret
push
push
sub
push
in
xor
flds
or
jno
mov
xchg
lock
cmp
scas
sub
add
pop
cltd
lock
cmp
andl
xor
xchg
mov
inc
lds
fsubrs
adc
jecxz
sti
dec
into
pusha
sbb
mov
add
push
dec
lahf
out
sbb
loop
cmp
in
leave
push
fucomi
inc
xchg
imul
pushf
or
push
mov
clc
mov
xchg
ja
aaa
outsl
addr16
jmp
adc
out
xlat
mov
rolb
sbb
push
adc
mov
idivb
inc
out
outsb
sti
inc
inc
inc
cli
push
jo
rolb
jae
jnp
or
je
xchg
addb
add
leave
pop
in
fdecstp
int
lds
dec
xchg
jg
xchg
insl
std
loope
inc
stc
ljmp
push
inc
pop
aad
mov
fistpl
pop
stos
lcall
and
das
mov
add
mov
test
movsb
imul
out
add
out
int3
std
jae
ret
sarb
hlt
xchg
pushf
mov
adc
inc
or
xchg
pusha
iret
popf
cmp
bound
lret
jl
mov
jle
mov
or
orb
xchg
es
je
or
repnz
es
andl
xchg
inc
add
testl
dec
inc
jnp
leave
fmull
insb
pop
clc
out
or
daa
mov
push
xchg
pop
mov
pop
mov
xchg
stos
orb
xchg
mov
outsl
mov
sub
sub
roll
lcall
movb
sarb
mov
push
and
enter
shrl
xlat
sub
pop
xchg
push
or
orb
pop
ret
xchg
or
in
inc
jno
mov
aad
lds
dec
imul
inc
repnz
sub
es
xor
pop
mov
or
popf
mov
mov
movsl
jns
push
cmpsl
add
mov
and
inc
int3
pop
gs
mov
and
movsl
lds
add
mov
add
jae
push
clc
les
and
into
ds
xor
inc
movsb
pop
mov
xchg
aam
push
push
fidivl
xchg
pop
inc
addr16
loopne
test
pop
mov
sub
test
sbb
add
out
scas
int
sqrtps
divb
rcr
or
push
mov
xor
outsl
cmp
cmp
mov
mov
xchg
push
stc
inc
test
xchg
pop
or
jge
pop
push
add
inc
out
push
push
lcall
sub
push
jl
rcrb
or
sahf
cmp
add
in
mov
pop
add
je
aad
adcl
mov
cmp
leave
jge
adc
and
add
insb
lret
cld
dec
or
fldl
mov
and
xchg
cs
fs
ljmp
jg
lods
adc
rcll
in
pop
mov
insl
jge
jl
adc
adc
das
jo
outsl
jg
lock
lock
jge
sarl
xchg
lcall
inc
repz
insl
jo
fldcw
pop
xchg
out
mov
notl
int
push
mov
push
xchg
jns
out
sbb
fwait
adc
sub
das
lods
jbe
xor
rorb
xchg
pop
subb
sahf
repnz
fwait
scas
pop
cmpsb
cwtl
test
sbb
aaa
test
jg
pop
cmp
ljmp
das
jge
lods
call
call
test
outsl
adc
mov
punpcklbw
loop
imul
pop
inc
dec
cltd
inc
nop
lcall
push
mov
jnp
mov
mulb
sbb
and
jecxz
push
xorl
cltd
addr16
sbb
or
xchg
mov
movsl
mov
sub
test
lea
jmp
aam
fiadds
lret
pop
cwtl
jae
add
clc
adc
sbb
loop
shrl
fisubrl
outsb
pop
inc
push
xchg
jg
fimuls
cmp
cwtl
or
test
and
add
jmp
fisttpll
sbb
xor
in
pop
pop
es
rorl
push
add
adc
jb
into
lcall
stos
mov
out
mov
dec
stc
cmc
and
mov
in
xor
xor
adc
out
push
or
in
loope
imul
mov
popa
jne
lock
loop
mov
add
mov
movsb
xchg
xchg
hlt
jge
xchg
imul
xchg
push
jnp
rclb
cmp
and
cmc
sbb
xlat
je
inc
inc
inc
lock
bound
pop
test
repnz
sub
xor
ss
dec
pop
jg
fwait
sbb
sub
and
mov
xchg
add
popf
jno
and
push
scas
sub
and
dec
push
mov
push
imul
test
rcll
xor
lret
ljmp
jns
popf
setbe
adc
cmpsl
subb
cmpb
mov
orb
lock
mov
jecxz
lcall
cmp
add
mov
idiv
ja
or
ss
in
sbbb
mov
out
dec
repz
inc
jl
adc
jl
cmp
add
cld
in
je
add
and
test
insb
inc
daa
xchg
mov
cmp
push
lret
bound
push
cmpb
sbb
xor
fistps
mov
fistps
aam
adc
into
call
sub
dec
mov
nop
ds
jmp
xor
or
dec
pop
std
lahf
adc
incb
in
mov
mov
enter
mov
subb
ss
push
enter
lahf
sbb
mov
push
in
insl
ljmp
sub
jbe
sub
fmul
mov
cmp
insl
jb
les
sti
arpl
out
insl
imul
add
pop
xchg
fsubl
xorb
jg,pn
enter
cli
mov
call
ffree
cmp
mov
and
inc
mov
clc
pop
lret
lcall
in
shrl
mov
rorb
dec
aad
lret
adc
xor
xchg
ficomps
sub
jo
xchg
addr16
adcl
cmpsl
dec
sbb
mul
adc
js
cmpsl
stos
push
loope
out
jno
mov
xchg
sbb
push
pop
mov
in
pop
mov
leave
adcl
cwtl
aaa
push
jae
cltd
repz
outsl
loopne
popf
ds
stos
inc
push
push
aaa
adc
cmp
add
dec
les
pop
fnstenv
popa
push
leave
jb
ss
mov
pop
pop
add
pop
xchg
add
inc
in
mov
ret
lods
cwtl
xor
popa
in
notl
lock
pop
scas
sub
insb
insb
dec
sub
inc
mov
xor
loop
outsb
push
sub
popf
push
stos
inc
popf
push
fadds
jp
sbb
jae
mov
int
sti
mov
push
es
cltd
out
sbb
test
pop
jg
mov
sbb
bound
stos
jns
jne
xchg
fisttps
fisttpll
arpl
dec
or
xor
js
out
cmp
lea
add
icebp
rorb
add
imul
pop
xor
pop
les
jge
sbb
mov
mov
mov
pop
or
dec
inc
popa
lahf
in
orb
in
int
mov
decb
enter
sarb
js
dec
and
sub
sub
mov
fs
movsl
adc
scas
xor
adc
sahf
mov
push
insl
cmp
add
xchg
loope
jns
pop
jp
aas
and
dec
repz
ret
std
into
pop
leave
sub
jmp
mov
ss
fs
lahf
inc
mov
cmp
mov
loop
nop
mov
push
sub
mov
lea
dec
dec
mov
and
cmp
fmul
dec
xchg
inc
push
aas
jno
fisubs
dec
adc
and
xchg
xor
xor
jg
pop
push
adc
leave
or
sub
xor
pop
jmp
push
vpsubq
add
fisubs
add
pusha
ja
outsl
sbb
cmc
call
mov
adc
mov
sbb
setno
ret
leave
cwtl
sbb
mov
cwtl
xchg
add
mov
or
daa
xor
push
ljmp
mov
inc
stos
mov
negl
adc
aas
mov
sub
inc
and
xor
push
test
lret
push
pop
xchg
jecxz
in
shufps
cmp
out
out
sub
fmull
inc
push
add
cmp
sub
mov
dec
loop
adc
scas
lcall
jnp
sub
cmpsl
fnstenv
adc
lods
faddl
jns
into
lea
or
xlat
mov
js
into
fwait
dec
stos
shlb
and
imull
gs
xor
jnp
jp
mov
stos
out
fildll
data16
cld
scas
dec
jnp
jb
sarb
fcoml
xchg
sub
adc
movsb
shrl
pop
sub
sub
jno
lret
aas
jp
mov
outsb
sub
loope
cmc
pop
test
pop
lds
or
pop
lcall
mov
jns
mov
pushf
mov
push
push
xchg
xchg
push
sbb
shll
test
insl
mov
cmp
data16
stos
stos
rolb
mov
adc
lret
add
or
in
dec
pop
jne
mov
insb
inc
es
cmp
scas
inc
ret
rol
imul
aas
pushf
shrl
aam
push
pop
adc
push
mov
jmp
in
jecxz
stc
in
mov
cmp
xchg
push
mov
in
mov
fsubl
cld
enter
icebp
inc
in
jle
add
mov
xchg
add
pop
lret
mov
jge
sub
pop
fwait
push
adc
sub
aam
and
xor
inc
int3
push
xchg
inc
add
shrb
push
fstpt
into
or
push
cmc
aaa
lret
or
sahf
repz
rorb
or
mov
pop
dec
jae
stos
adc
insl
xor
ja
icebp
ret
lds
inc
sarl
arpl
lods
inc
shll
jmp
sub
sub
les
and
mov
in
in
dec
push
xchg
xchg
pop
mov
mov
je
pop
sub
inc
int3
jle
movsl
popa
inc
mov
mov
das
insl
loope
fsts
cmpsl
pop
and
loope
mov
lods
pop
inc
psubusb
mov
iret
or
stos
call
sbb
aas
out
and
jmp
mov
inc
call
fwait
sub
into
xchg
adc
lret
add
hlt
test
mov
insl
mov
xlat
cmpl
mov
or
push
lock
jbe
add
sbb
mov
std
xlat
lahf
mov
out
sub
jo
jb
mov
ficompl
xor
out
dec
scas
shr
std
sbb
and
mov
push
cmp
pusha
bound
jns
jg
mov
xchg
jno
fnstsw
adc
mov
subl
push
add
ds
rclb
push
or
and
lcall
ja
rcl
mov
shrb
or
mov
dec
lods
addr16
mov
cmc
jge
xchg
pop
js
cmp
and
test
ds
ret
add
xchg
loop
xchg
mov
imulb
lods
cmp
dec
iret
xchg
ljmp
pop
cmpsb
and
and
fdivs
lds
inc
push
adc
pusha
inc
icebp
rclb
mov
jl
jne
or
lcall
jge
cmp
jg
jp
push
mov
and
jmp
or
pop
mov
out
pop
xchg
inc
xor
adc
scas
sub
out
out
in
dec
pop
mov
fwait
add
pop
arpl
js
adc
or
fs
hlt
push
iret
pop
jbe
push
push
int3
sbb
aam
fisttpl
ficoml
jl
cli
xchg
popf
in
jb
ljmp
mov
outsl
cmp
push
sbb
outsb
outsb
sbb
push
imul
pop
bnd
push
data16
inc
or
push
push
lea
push
clc
pop
cwtl
jge
pop
into
add
loopne
sahf
or
dec
and
fstps
pop
ljmp
sbb
inc
lcall
sbb
shll
loopne
lret
addl
push
jge
repnz
fsubrl
fnstenv
sub
add
xchg
int3
scas
addb
mov
fimuls
out
adc
outsb
mov
jp
iret
into
pop
add
mov
mov
add
or
rclb
push
out
jne
and
xor
fiaddl
jo
stc
push
rol
dec
mov
in
inc
loope
mov
outsl
sub
mov
ja
insb
pushw
mov
push
je
stc
es
push
sbb
test
jae
xor
or
int3
stos
mov
cmp
xor
iret
sahf
sti
xor
cmc
inc
pop
push
hlt
cmp
push
dec
clc
aaa
mov
push
addr16
js
sbb
into
out
out
repz
lret
sbb
sub
bound
push
xor
loope
jne
inc
inc
push
dec
jo
repz
jecxz
or
dec
sbb
mov
sti
pop
xor
imul
or
cmp
xor
pushl
out
ja
cmpsb
pop
fs
xor
add
out
cmpsl
clc
cli
sbb
icebp
xorb
sbb
negl
sub
mov
pop
and
icebp
or
sbbl
add
mov
test
add
cmpsb
mov
jg
scas
sub
rorl
xor
mov
rol
push
mov
push
xor
pop
shl
dec
or
xchg
jg
or
mov
adc
popa
mov
pop
mov
outsb
ficoml
mov
shll
and
lock
popf
imull
std
push
adc
es
push
lock
dec
mov
xchg
mov
aad
lret
cs
and
mov
pop
pop
sbb
stos
outsb
popa
dec
rorl
xor
sub
test
pop
inc
push
out
pop
inc
neg
imul
lret
negl
out
das
adc
sbb
jbe
fadds
stc
into
inc
popf
iret
aam
pop
jae
xchg
jle
mov
or
cwtl
sub
xor
add
mov
repz
adc
push
movsl
mov
out
inc
jnp
push
add
or
xchg
adc
mov
mov
sahf
test
inc
repnz
fildll
ficompl
sub
inc
fwait
cld
aaa
lret
sub
mov
push
push
mov
bound
push
push
lret
add
loope
or
pop
fadds
stmxcsr
pushf
inc
aas
out
mov
mov
dec
xchg
xlat
pushf
shrl
std
clc
sbb
mov
pop
mov
lcall
popf
shll
mov
out
insb
nop
in
mov
push
jecxz
jg
stos
xlat
fnsave
repnz
outsb
out
insl
inc
je
imul
sbb
xor
les
and
dec
iret
popf
push
daa
dec
outsl
xchg
scas
push
adc
jecxz
cmp
dec
xchg
inc
leave
mov
aam
js
push
sbb
mov
lret
js
sbb
aaa
add
adc
and
lret
icebp
fidivrl
cmp
xor
mov
xchg
cmp
dec
call
out
jnp
inc
incl
mov
bound
push
lods
fcmovnbe
inc
pop
lcall
xor
xor
adc
in
mov
nop
push
rcll
jle
jno
cmp
push
pop
call
add
pop
fwait
mov
dec
mov
movq
ljmp
stos
scas
stos
rorb
dec
sub
shrl
and
mov
sar
aad
dec
aas
stos
mov
shll
jge
push
loop
scas
inc
scas
inc
test
das
push
mov
int3
pop
push
cmp
aam
ljmp
xchg
test
mov
xchg
lahf
or
idivb
int3
aaa
lret
jmp
xorb
mov
push
lahf
imul
cmp
xor
fwait
dec
push
lock
push
lock
je
scas
xor
pop
js
xor
pop
fistpll
dec
jnp
les
xor
jne
mov
and
xlat
in
addr16
cmpsl
jae
push
call
jbe
fld1
xchg
jle
aam
inc
ja
cmp
filds
scas
sti
jns
pop
cmpsl
sbb
mov
push
cmp
jns
and
arpl
fidivrs
mov
cltd
repnz
jnp
insb
ret
clc
jecxz
cmp
test
or
push
sbb
cmp
movsb
aaa
cmp
lds
div
mov
movsb
mov
mov
pop
les
xor
or
out
mov
inc
jg
mov
cltd
adc
in
mov
stos
mov
in
xor
mov
lret
das
in
and
popa
aam
push
iret
xor
clc
pop
sub
push
movsb
xor
add
mov
lret
mov
fdivrs
aam
push
push
aaa
std
mov
fstl
sahf
jo
sbb
sti
mov
push
pop
shr
bound
dec
gs
xor
lock
adc
inc
inc
test
adc
jbe
mov
add
mov
jmp
push
add
movsb
sub
xchg
push
jae
pop
and
int3
push
sarb
popf
aad
push
mov
into
jg
dec
mov
addr16
lock
mov
shlb
pop
cmp
xor
mov
stos
lar
scas
xchg
call
or
fsts
cmpl
ds
cld
nop
addl
and
in
pop
sub
add
std
int3
in
sub
cs
mov
and
popf
js
push
mov
mov
xchg
aad
pusha
lds
jbe
cmp
aam
add
iret
mov
loop
jo
adcb
mov
and
jbe
test
mov
xor
jae
clc
faddl
xchg
mov
int3
call
xchg
sbb
adc
inc
jne
dec
out
int
sub
and
notl
jle
repnz
mov
stos
test
lea
dec
fnstenv
mov
mov
scas
sub
bndstx
cmp
popf
stos
mov
xchg
inc
mov
sbb
push
add
cmp
jle
in
jns
cli
lahf
dec
lods
enter
cmpl
movsl
in
mov
push
leave
xchg
mov
inc
arpl
lcall
sub
aad
dec
jle
xlat
mov
pop
push
pop
sbb
mov
mov
enter
adc
aas
enter
jle
mov
ret
push
insl
leave
jno
dec
stc
fcoms
jle
imul
sub
jne
imul
lock
xchg
xchg
test
divl
mov
cwtl
cli
int
cmp
int
mov
cmpsl
int
sub
enter
xor
imul
mov
orb
sbb
add
cmpsb
adc
je
lock
aaa
mov
mov
rcrb
xchg
aad
xchg
test
push
sbb
clc
in
lret
ss
aad
mov
lea
insb
mov
leave
das
mov
shl
std
dec
scas
sub
lcall
aam
push
mov
and
xor
jp
dec
ss
or
mov
sbbb
jge
jnp
mov
pand
movb
jle
decb
aas
jbe
mov
movsl
iret
adc
add
and
jnp,pn
dec
fdiv
jle
xchg
repnz
mov
jno
loope
mov
push
jle
mov
sbb
add
and
cltd
in
push
push
scas
push
fildl
movsb
movsl
ret
cmp
mov
out
cmpb
inc
push
cwtl
or
les
les
inc
outsl
fadd
loopne
pop
inc
outsl
adc
jb,pt
pop
dec
mov
int3
mov
jge
out
lcall
pmovmskb
and
add
push
xchg
sahf
leave
frstor
les
les
cwtl
or
stc
and
sub
jne
iret
rorb
jl
mov
outsl
cmp
adc
cli
enter
jg
dec
mov
push
jb
sbbb
jbe
mov
lock
sbb
pop
jo
ds
inc
icebp
jmp
clc
addr16
out
aad
mov
out
mov
outsb
cmp
mov
cmp
add
or
pusha
bound
xlat
test
add
enter
jle
gs
dec
in
pop
pop
stc
and
scas
cmp
mov
fs
mov
ljmp
leave
jg
stc
mov
and
add
sbb
pop
nop
aam
add
aas
idivb
test
and
call
lahf
movsl
mov
sbb
jecxz
push
pusha
pop
mov
rolb
jb
jmp
js
lods
je
cld
aad
notb
loopne
iret
xor
xchg
cmp
cs
jmp
cli
fisubs
jge
inc
push
arpl
neg
mov
inc
xchg
xlat
adc
sub
pop
push
mov
adc
in
mov
je
stos
roll
push
in
xor
jne
orb
xchg
cwtl
fldcw
loop
pop
mov
pop
pop
ffree
xor
stos
mov
cmpsb
sub
mov
test
mov
fmull
data16
mov
fxch
rol
jnp
add
cld
negb
mov
int
xor
xor
jo
js
inc
mov
sub
mov
push
sub
pop
shlb
push
stos
mov
test
in
ror
mov
sub
adcl
imul
rcrb
sbb
sahf
mov
testb
mov
cli
or
lcall
sbb
mov
xchg
push
scas
les
add
out
hlt
adc
push
mov
loop
mov
mov
sub
xor
popa
inc
mov
xor
add
sub
int3
adc
pusha
xlat
aaa
cs
jg
std
addb
xlat
push
std
cwtl
jge
movsb
std
aad
call
dec
jno
jns
push
xor
pusha
sahf
mov
jb
sbb
lods
xchg
mov
push
pushf
stos
loopne
and
loope
push
mov
add
sbb
and
leave
sbb
lock
lcall
mov
int
and
or
dec
sarb
xor
dec
cmpsl
sub
cmp
ja
mov
xchg
inc
addl
stos
orl
imul
cwtl
fisttpll
mov
pop
add
mov
mov
dec
int3
mov
pop
dec
sahf
loop
sub
mov
xchg
dec
mov
incl
insl
pop
int
add
push
push
inc
fs
pop
notl
insl
pushf
hlt
or
outsl
rcrl
xor
push
test
fwait
jae
jp
push
out
sub
dec
add
lea
push
mov
and
lods
inc
mov
jno
mov
clc
into
xchg
mov
mov
mov
mov
test
cmp
int
add
sbb
sub
out
add
jge
mov
ret
lds
adc
test
mov
and
fisttps
fwait
aam
cmp
xchg
shrb
sarl
cmp
sub
in
push
lock
fwait
sub
das
outsl
das
xchg
sub
mov
jo
pop
cmp
mov
call
in
xchg
nop
ljmp
inc
sub
adc
xchg
sbb
sbb
and
jo
mov
add
sar
sbb
hlt
out
gs
mov
ss
push
push
repz
xchg
jp
lea
or
add
or
addr16
repnz
mov
jb
dec
mov
xchg
test
pop
insb
fldl
cmpl
fldcw
mov
sub
ret
sub
push
push
inc
pop
test
inc
and
and
cmp
add
icebp
popa
add
inc
pop
lods
or
lret
je
xor
repz
cmpb
push
push
jo
lods
stos
jo
icebp
inc
insl
mov
fs
shll
lcall
rcrb
inc
sub
mov
jns
cmp
jnp
adc
dec
in
stc
in
inc
enter
jb
fwait
jae
cwtl
cmp
in
xchg
mov
push
jmp
xchg
mov
clc
addr16
inc
sti
into
sarl
pop
cmp
cmp
jb
shll
xchg
sub
mov
addr16
jb
mov
pop
lods
jne
lea
rcrl
movsb
lahf
fsubr
lahf
mov
repnz
dec
jne
mov
outsl
xchg
aas
sub
inc
rorl
xor
lret
inc
test
mov
fdivl
mov
mov
push
into
mov
jbe
push
mov
les
sbb
in
test
sahf
mov
lret
js
jnp
lret
in
adc
cltd
and
sbb
xor
mov
orb
lods
push
cmp
fldcw
imul
aas
or
les
push
repnz
sbbl
daa
mov
rclb
dec
add
nop
fisubrl
and
mov
fnstcw
pop
mov
sbb
inc
cmpb
test
inc
es
mov
jmp
sti
xchg
out
dec
jp
pop
and
cmc
adc
pop
rcl
fnstcw
jne
sbb
mov
cmp
inc
shlb
push
xor
cmp
pop
mov
addl
test
icebp
lock
xchg
sbb
ret
das
sahf
popa
sub
push
push
fsubs
mov
push
sbb
or
xor
or
punpckhdq
jmp
xchg
dec
cmp
inc
xchg
data16
xchg
mov
frstor
out
mov
bound
mov
int
faddl
mov
andb
mov
imul
sahf
mov
leave
cltd
add
xchg
hlt
and
xor
adc
mov
nop
pop
push
repnz
jge
adc
fsubrl
test
mov
pop
aas
jbe
and
std
inc
inc
sub
call
or
cmp
pop
mov
rolb
jae
addr16
fdivrl
pop
stos
adc
sub
out
mov
ror
push
daa
lock
pushf
repz
mov
outsb
xor
roll
and
xchg
cmc
xor
inc
fists
movb
lret
mov
dec
mov
shrb
jle
sbb
add
into
dec
dec
dec
inc
sbb
jnp
push
push
mov
iret
pop
data16
sahf
out
mov
jbe
add
xor
loopne
roll
xchg
andl
pop
pop
test
je
cmp
and
xchg
aas
xchg
fs
mov
mov
leave
test
fstl
imul
jnp
push
fsubrl
aas
call
mov
jno
test
scas
cmp
jp
ja
or
icebp
lret
rcrb
or
push
cmp
ds
inc
jg
and
xchg
or
cltd
dec
cli
sub
popf
cltd
xlat
xchg
sub
dec
push
xor
cli
out
insl
add
mov
dec
sbb
push
dec
mov
imul
les
lods
mov
dec
in
inc
mov
out
mov
sub
jmp
jno
xor
sarl
cli
test
test
mov
fsubp
ret
in
mov
dec
inc
xor
dec
cmp
stc
sbb
dec
ljmp
jae
out
add
das
rcrl
jbe
aas
js
scas
push
cmp
test
mov
xor
fdivrs
into
adc
popf
jb
imul
adc
sbb
jo
iret
cmpsb
mov
mov
mov
rclb
sub
lea
mov
into
adc
pop
push
xchg
inc
addr16
mov
xchg
ds
stc
sar
aad
push
xchg
je
faddl
sub
mov
xlat
sub
arpl
push
imull
cmp
or
fidivl
xor
scas
hlt
pushl
out
hlt
repnz
lcall
cwtl
sbb
mov
xchg
or
mov
mov
gs
fildll
adc
aas
jge
and
xchg
mov
mov
add
jecxz
push
xchg
das
lcall
xlat
int3
inc
mov
mov
sub
data16
out
ja
cmpsb
sbb
xchg
lret
jne
sub
jle
test
insb
push
add
push
mov
mov
subl
inc
and
pop
dec
orb
inc
mov
iret
lods
mov
jbe
cltd
movsl
sub
or
sbb
bnd
cmpsl
jmp
xchg
xchg
xchg
cmp
lea
enter
mov
sub
loopne
sub
pop
inc
aaa
mov
jge
aad
mov
insl
icebp
insb
daa
jl
cmpsl
mov
aas
pushf
sbb
and
jne
inc
push
in
jno
push
xchg
stc
pop
xchg
js
addr16
inc
and
fimuls
mov
sbb
sahf
loopne
jge
mov
xor
jnp
push
rorl
mov
insb
dec
xlat
adc
mov
cli
mov
xor
lock
loope
adc
jge
in
sub
scas
cwtl
add
jl
mov
rcr
fiaddl
jge
push
lods
sbb
pusha
mov
pop
mov
add
mov
mov
jns
stos
enter
push
pop
pushf
mov
push
add
sbb
pop
mov
add
jno
jns
mov
push
in
lds
sub
outsl
add
push
in
mov
pop
int3
scas
je
inc
sti
inc
mov
cli
mov
int3
inc
lcall
out
push
cs
sti
dec
ljmp
push
addr16
xchg
aam
int3
mov
or
mov
fs
fcomps
jne
mov
dec
outsl
sti
repnz
cmpl
and
mov
enter
bound
aam
mov
xchg
test
cmp
and
and
std
clc
mov
imull
or
pop
lods
addl
cmp
sbb
cmp
xor
inc
imul
addl
or
mov
push
inc
mov
sahf
sbb
sbb
cmp
sbb
and
shlb
mov
xchg
sahf
sbb
mov
sbb
add
adc
xlat
pusha
pop
mov
fsubrl
nop
mov
mov
pop
loop
cld
fdivr
jge
jbe
jae
jae
arpl
inc
leave
push
insl
push
in
sahf
mov
stc
scas
popa
imul
xor
sub
sbb
cmp
lock
mov
mov
cmp
add
push
cltd
mov
cld
fildl
dec
inc
into
rorb
pop
dec
mov
mov
pop
ficoms
jae
icebp
pop
xor
subb
pop
and
shrb
dec
inc
ja
lret
scas
jl
lret
jp
rorb
std
cs
xor
push
or
shrl
adc
xchg
pop
cwtl
pop
lret
push
loopne
sub
pop
mov
or
movups
jge
in
pop
and
stos
mov
aam
jbe
mov
sub
leave
rol
add
mov
adc
sbbl
lock
sub
mov
ret
dec
mov
xor
pop
adc
xor
clc
nop
cmp
rcl
sbb
out
mov
mov
sbb
xchg
xchg
mov
sbb
mov
lods
lret
jb
inc
fisttpll
leave
scas
bound
mov
cmc
pop
mov
dec
stc
rcll
sub
jb
add
or
sbb
test
cmp
mov
sahf
inc
rclb
daa
andb
test
mov
sub
popa
mov
jl
mov
xor
mov
inc
xchg
insl
xchg
sub
roll
scas
adc
dec
fisttpl
xor
loope
and
push
lahf
jb
and
adc
xor
inc
cwtl
inc
pop
cmp
rclb
mov
fsubl
fcmove
xchg
mov
pop
xor
mov
pand
xchg
dec
and
sahf
mov
cmc
xorb
push
dec
cmp
push
in
sbb
imul
dec
cld
aam
push
enter
or
jns
cmp
push
and
jg
stos
test
xor
stc
lret
nop
test
sahf
iret
lret
cld
cs
sub
out
cmpsl
into
pop
push
int
sbb
jge
and
stc
sbb
sbb
mov
cltd
loopne
mov
push
call
dec
sub
sub
fdivrl
jns
cmp
sbb
mov
adc
adc
pushf
cmc
arpl
stos
dec
lods
adc
xchg
gs
nop
mov
jae
outsl
addr16
aaa
inc
pop
loop
andl
xchg
fiaddl
push
fstps
fs
pusha
seto
sbb
xor
stos
inc
jno
cwtl
and
or
les
insl
lahf
fstpl
outsb
xchg
xchg
stos
and
jp
es
sbb
mov
push
rorl
xchg
js
or
xor
push
stc
add
dec
and
sarb
rcl
es
cmp
add
mov
fdivs
pop
es
sub
dec
mov
clc
into
mov
movsb
mov
pop
lods
add
movsb
call
gs
rorl
pushf
fsubs
jg
inc
fs
enter
sub
add
mov
mull
sub
or
sbb
push
mov
pop
sub
cltd
sbb
mov
xchg
gs
push
into
jecxz
lea
popa
mov
jmp
and
or
sbb
mov
clc
mov
popa
popa
fmuls
ds
adc
out
sti
dec
sbb
adc
push
addr16
outsb
inc
dec
je
push
out
mov
mov
dec
lds
std
mov
je
cli
and
clc
mov
mov
pop
imul
inc
cmpsb
xor
and
lea
pop
lods
adc
lret
sbb
imul
nop
xchg
mov
pop
pop
pop
popa
mov
or
popf
jge
icebp
cmpsl
inc
movsb
sub
stos
insl
jnp
fwait
sub
shlb
jge
push
lret
push
push
iret
inc
ret
cmp
mov
adc
sub
bound
inc
rorb
xchg
stos
or
lret
leave
imul
mov
pop
stos
addr16
mov
cmp
ficoml
nop
fidivrl
jno
xchg
cld
test
popa
daa
lret
ja
push
call
dec
pop
popf
cmp
xor
cmp
inc
je
in
mov
jo
ljmp
fwait
shl
sbbb
mov
mov
cwtl
xchg
outsb
aaa
das
pop
cmc
loopne
cmp
lods
jmp
or
in
push
es
xchg
leave
mull
aas
into
dec
std
sbb
iret
xchg
push
mov
pop
adc
aaa
enter
lds
sbb
stos
adc
aad
mov
pop
jns
mov
cmp
push
xlat
push
repz
inc
mov
mov
sbb
fs
add
inc
stc
and
pusha
in
daa
scas
insl
push
popa
aam
jbe
jne
mov
lods
add
sahf
cwtl
pop
nop
fidivl
dec
mov
sbb
pop
add
jns
mov
or
dec
xchg
es
sbbl
dec
xchg
adc
sbb
adc
dec
inc
lret
mov
pop
xor
ret
inc
mov
add
in
ljmp
pop
scas
add
push
fstl
fwait
cmp
mov
loopne
add
rolb
inc
push
pop
adc
xchg
roll
sbb
mov
pop
outsb
or
add
xor
inc
inc
cmp
idivb
fidivl
cltd
push
mov
xchg
dec
xchg
push
pop
jecxz
loopne
arpl
movl
repz
sbb
shlb
lea
or
repz
fwait
xchg
cwtl
inc
gs
adc
aas
xor
adc
jecxz
xor
test
xchg
xchg
jl
mov
fildll
int3
cmp
sbb
int
mov
sahf
repz
test
mov
xchg
add
dec
jge
xorb
aad
movsl
mov
adc
or
cmp
jnp
lret
ret
aaa
sbb
pop
ja
xlat
mov
movsb
mov
and
cwtl
fstl
push
ss
into
dec
cmp
mov
add
dec
popa
jae
out
loop
test
mov
icebp
imul
mov
ljmp
inc
gs
inc
ds
mov
aas
and
add
sbb
lea
mov
add
iret
popf
cmp
shlb
inc
das
cwtl
or
and
out
insl
iret
mov
pusha
mov
sbb
adc
mov
jl
push
adc
sbb
lahf
xor
fldcw
dec
lods
aaa
jnp
test
jmp
or
push
jns
jecxz
fistpll
adc
dec
pop
test
mov
dec
outsb
pop
mov
xchg
les
inc
push
pop
movsb
popa
loope
out
pop
and
mov
fucomip
xor
adc
dec
xor
loope
rcrb
cmpsb
xor
scas
dec
nop
jl
shl
imul
xchg
in
push
pop
push
and
shll
pop
or
stc
add
adc
and
and
fs
repnz
xlat
arpl
inc
mov
xchg
mov
mov
add
rcr
push
in
cmp
out
call
and
pop
xorb
in
fildl
test
lea
or
inc
cmp
cmpsl
ret
jle
jnp
cs
push
pop
ljmp
xchg
pushf
mov
out
jnp
and
inc
ja
push
rcrb
cmp
jp
xlat
add
adc
jle
std
lock
lret
jne
test
stc
mov
push
sbb
lahf
xchg
mov
inc
fmull
nop
pop
es
cmp
pusha
push
pop
mov
push
inc
clc
lds
mov
mov
into
das
enter
mov
mov
loope
out
add
clc
cli
jo
rorb
enter
mov
notb
mov
pop
mov
lods
add
cs
jns
ret
ds
cmp
loope
mov
popf
xchg
repz
sbb
enter
sub
push
pop
lods
and
mov
dec
stc
idiv
fcmovnb
adc
imul
or
mov
mov
cmp
mov
sbb
xor
cmp
in
fwait
mov
cli
mov
daa
inc
pop
cmp
sub
xchg
dec
sub
and
fidivrl
cmpsb
push
or
jg
push
test
lods
ljmp
mov
lret
shrl
in
pop
push
inc
int
xchg
test
sbb
cmpsl
call
mov
rcll
popf
aaa
cltd
lods
stos
jae
jg
pop
loopne
xchg
lcall
xchg
scas
lods
mov
xchg
xchg
cmp
jmp
jl
out
push
jno
in
imul
sub
sbb
leave
or
pushw
aam
cmpsb
test
dec
inc
fs
lret
push
ret
jo
jbe
rol
add
data16
inc
adc
std
sahf
jae
push
insb
mov
in
inc
or
cmp
ja
icebp
shr
aaa
mov
jp
cli
out
in
insl
sbb
adc
mov
div
cmp
lret
add
js
fdivr
cmp
je
lds
in
xchg
xor
hlt
mov
xchg
shll
jae
fmul
stos
cmp
inc
sbb
pop
fwait
mov
mov
mov
xchg
imul
fisttps
push
mov
or
jmp
jo
lock
daa
mov
dec
cmp
sub
movsb
jg
mov
out
xor
fcomps
pop
in
xor
push
lds
pop
je
lods
addb
lret
lcall
push
in
mov
inc
push
adc
test
insl
or
adc
push
adcb
daa
cs
fisttpl
imul
jle
add
cmp
sbb
push
mov
das
inc
in
pop
jno
adc
xor
mov
dec
pop
lahf
scas
test
xchg
cli
xchg
lds
cli
sbb
rcr
mov
push
nop
rol
stos
xor
jno
daa
fs
rcrl
mov
icebp
xor
fs
insb
xor
ljmp
cmp
push
mov
mov
mov
insl
xchg
inc
fwait
xchg
lret
push
gs
and
ss
les
inc
jle
pop
insl
cwtl
sbb
dec
shrl
in
jl
dec
insb
xchg
pop
jo
jp
cmpsl
push
pop
pop
xor
inc
lret
adc
cmpsl
and
pop
push
clc
push
jne
sbb
pop
sbb
add
call
pop
cs
loopne
mov
xchg
jle
aad
add
and
test
jl
jge
mov
les
in
addr16
ss
hlt
or
test
rorl
xlat
sbb
push
mov
cmpsl
stc
and
and
push
in
mov
pusha
sbb
flds
xchg
sub
inc
adc
mov
stc
mov
push
rcrb
sub
xchg
or
sub
lahf
dec
dec
roll
xchg
cmpsl
xchg
xchg
dec
sub
add
leave
rcrl
mov
cmp
movsl
pusha
shlb
jne
shr
pop
sbb
psubusw
int3
pop
jmp
arpl
adc
and
mov
loope
xchg
xor
inc
jl
cmp
sbb
fcomps
into
dec
outsb
jl
sbb
fwait
cmp
add
jl
cwtl
lds
sahf
pop
cld
rclb
xor
xor
sbb
imul
add
mov
jnp
and
sub
push
call
sbb
sbb
jae
jo
fdivs
aad
mov
inc
push
pusha
dec
jbe
xchg
stos
aad
mov
jne
sbb
sub
movb
push
iret
sub
jno
and
xchg
shll
inc
pusha
adc
sti
ja
ljmp
or
iret
dec
or
fildll
cmpb
test
pop
imul
jns
popw
and
and
push
outsb
push
andb
lds
insb
cmp
test
scas
or
cs
int
pop
cli
stc
xchg
or
test
adc
push
leave
dec
mov
shr
xchg
inc
stos
ret
mov
inc
or
out
mov
imul
inc
push
nop
rcl
sub
pusha
jb
outsb
into
and
jp
pop
cmpsb
sub
gs
fcoml
inc
lea
mov
cmc
out
adc
out
sbb
xchg
add
pop
xor
cmp
mov
fwait
dec
int
mov
mov
out
int3
loopne
test
out
aaa
xor
ret
jbe
out
push
xor
inc
sbb
lret
shlb
jle
sbb
push
cmp
loop
jbe
iret
out
mov
daa
sub
sbb
push
sbb
ja
lret
xor
jle
sub
iret
or
lret
iret
movsb
cmp
clc
int
sbbb
mov
inc
cmp
in
inc
push
mov
adc
int
and
cmp
fstps
xor
das
out
pop
addb
outsb
lds
movsl
cmp
xor
pop
movsl
pop
fwait
cmpsb
fwait
mov
push
mov
jbe
out
adc
jns
std
scas
fnop
popf
out
test
cmova
es
lock
movsl
nop
mov
into
inc
in
jecxz
out
int3
stos
out
jg
insl
je
lret
test
dec
ljmp
mov
mov
inc
stos
push
mov
insb
mov
flds
popa
dec
test
inc
dec
or
cmpl
xchg
and
shlb
sbb
mov
dec
sub
nop
arpl
mov
sub
push
outsb
into
rcll
mov
pop
or
andl
jo
add
aas
inc
clc
lcall
xor
sub
xchg
iret
out
cli
dec
mov
adc
lcall
inc
mov
es
adc
inc
xor
sbb
pop
pop
popa
ja
lret
jge
out
inc
cmp
aad
jne
icebp
sarb
test
jne
add
inc
sub
dec
push
and
out
ret
and
aas
dec
xlat
xchg
push
mov
lahf
cmpsl
arpl
bswap
enter
cmp
mov
int
loop
push
ljmp
repnz
xchg
adc
pushf
sbb
call
dec
mov
imul
adc
mov
cmp
int
pop
cltd
xlat
stc
div
xor
cmpsl
shlb
vpunpckldq
pop
xor
mov
and
test
xchg
and
dec
cmp
mov
xchg
inc
push
or
ja
cmp
loope
push
dec
cmp
inc
scas
dec
cmp
xchg
sarl
dec
enter
aaa
popf
and
loopne
scas
rclb
shld
inc
sub
movsb
gs
inc
and
mov
pop
sahf
cmp
mov
dec
push
jo
dec
dec
les
scas
jb
lds
mov
fisubs
loop
mov
popf
pusha
xchg
icebp
les
loopne
scas
fs
or
por
stc
dec
out
xchg
jg
mov
cmp
mov
imul
xchg
enter
je
mov
addr16
mov
stos
and
dec
xchg
fisubl
pushf
mov
xchg
cmp
jecxz
mov
push
gs
mov
sbb
scas
cmpl
sahf
sub
push
stc
pop
pop
dec
popf
bound
sbb
sbb
cmp
sbb
xchg
sub
jge
repnz
pop
out
sarl
pop
call
fs
xor
addr16
pop
cmpsb
push
repnz
ror
mov
jmp
or
aaa
lret
and
mov
push
cmc
cwtl
loope
sbb
in
ret
sbb
xchg
cmpsl
mov
or
xchg
mov
mov
jl
scas
or
sahf
jg
cwtl
dec
data16
pop
cli
lds
inc
aad
cmpsl
negl
addl
push
sbb
testb
mov
push
ret
cli
aam
nop
cmp
fbstp
out
ret
adc
jecxz
mull
movswl
push
outsb
fcomip
jmp
cld
jp
pop
pop
mov
iret
push
aad
rolb
and
xor
outsb
rcl
sbb
cld
call
dec
xchg
sub
push
outsl
xchg
addr16
sub
repz
mov
xchg
lea
cmp
pop
shll
lahf
in
outsb
push
adcb
jnp
push
sub
ficompl
or
nop
sbb
mov
and
hlt
sbb
jb
jg
xor
sbb
add
mov
and
mov
cmp
movsl
outsl
sbb
sbb
outsb
clc
cmc
les
imul
push
out
cmp
dec
jae
or
mov
xchg
or
xor
sub
mov
daa
lcall
imul
xor
scas
push
and
movsl
mov
sub
and
mov
jecxz
data16
jl
pop
loop
mov
inc
mov
sbb
adc
mov
out
mov
cmp
pop
iret
int
cld
cmp
rolb
add
out
ds
rcrl
pop
inc
inc
mov
cmp
sti
fcomi
out
arpl
icebp
out
xchg
inc
xchg
movsb
mov
cltd
cmp
pop
pusha
sbb
int
in
and
lds
mov
fwait
and
repz
cmp
sub
popw
pop
mov
xor
dec
xor
out
daa
cmp
lret
adc
clc
dec
fnsave
shll
add
sahf
cmc
repnz
jge
ret
je
iret
pop
mov
ret
fs
aam
adc
stos
inc
xchg
test
sbb
xor
jnp
fiaddl
inc
out
jo
mov
mov
in
mov
mov
aaa
add
jne
inc
mov
lods
fisttpl
mov
insb
arpl
mov
add
arpl
ret
push
and
xor
sti
mov
inc
movl
jecxz
jmp
lahf
sub
scas
inc
mov
xchg
mov
ret
jle
mov
xchg
push
xchg
inc
add
mov
push
and
or
jmp
sub
xchg
jge
test
pop
mov
loopne
cmp
lret
lds
loop
movsb
mov
mov
insb
sbb
ja
jge
cltd
rorl
inc
enter
sub
push
je
xchg
mov
mov
jbe
xor
loope
mov
ds
cmpl
mov
aas
pop
lds
call
addr16
stc
jmp
int3
les
push
mov
xor
jo
lods
and
hlt
ja
inc
adc
sub
lahf
std
loop
test
popa
mov
pop
lret
lahf
lds
or
movsl
clc
jg
fwait
adc
jp
jae
repnz
push
out
xchg
xchg
leave
push
lea
cmp
mul
movsl
int
sub
loop
cmp
fwait
or
mov
std
arpl
daa
cmp
mov
f2xm1
mov
orl
adc
mov
push
dec
std
add
outsb
in
nop
iret
lret
aaa
adcb
ret
clc
pop
lea
sahf
xchg
test
pop
adc
xor
mov
jmp
js
add
dec
mov
shlb
ljmp
push
aad
sub
aas
rcrb
cltd
lods
loop
push
mov
scas
call
into
xor
pop
mov
int
lds
aaa
lcall
popf
int3
sbb
ss
mov
sbb
pusha
int
test
std
add
jle
adc
insl
pushf
dec
or
and
repnz
mov
ds
mov
ljmp
popf
mov
mov
nop
dec
lds
or
xchg
lahf
xor
mov
dec
lret
scas
ret
pop
stos
movsl
inc
xor
lahf
mov
push
fimull
fptan
mov
cld
pop
rol
jnp
in
sub
push
mov
sbb
scas
lock
sub
ljmp
push
notl
or
mov
mov
jns
fsubr
jle
out
inc
scas
cld
jnp
lahf
sbb
mov
or
fldt
jnp
dec
ucomiss
pop
sub
add
in
insb
jmp
aas
in
and
popf
xchg
push
mov
cwtl
adc
ficoml
mov
hlt
or
xlat
fs
or
repz
ss
xchg
pop
mov
pushf
mov
sub
push
pusha
stos
add
fcomi
les
cmp
imul
inc
xlat
push
popf
pop
cmp
adc
mov
leave
mov
aam
adcl
adc
out
sub
push
push
loope
push
outsb
aaa
dec
mov
iret
cli
mov
pop
dec
std
or
incb
mov
aas
arpl
rcrb
or
shrb
adc
nop
lock
loope
mov
lret
dec
adc
dec
lock
mov
popa
cmp
push
aad
xor
imul
push
rcl
imul
add
pop
leave
xchg
fidivrs
adc
aad
test
iret
clc
sbb
add
mov
in
and
scas
or
push
nop
dec
subb
clc
mov
cmp
xor
nop
lods
pop
xchg
mov
lds
jecxz
push
or
pop
fisttps
adc
xor
out
lods
pop
xchg
in
dec
daa
imull
shll
test
je
out
or
hlt
xor
fistl
enter
mov
scas
sbb
add
iret
loope
adc
sbb
xor
cmp
enter
dec
jbe
cmp
in
or
mov
andl
out
imul
cltd
es
outsl
add
mov
mov
xor
dec
inc
rcrl
ss
xchg
cld
rclb
out
insl
sbb
and
aam
popf
out
test
fnsetpm(287
nop
cmpsl
mov
in
int3
push
orl
xchg
cltd
scas
push
adc
cmp
rol
cmp
push
inc
fsubrl
mov
add
jmp
mov
sub
out
lock
outsb
xor
push
ficoms
sub
test
xor
enter
xchg
mov
int3
es
lcall
or
int3
pop
jae
pop
mulb
pushf
fs
add
icebp
and
rcl
roll
mov
jbe
call
adc
and
fdivrs
add
push
sub
add
adc
cmpsl
es
push
adc
sub
sti
aam
mov
push
adc
push
lret
mov
pop
stos
cmpsb
adcb
dec
movsl
pop
sub
xchg
aad
fimuls
lods
dec
sub
stos
test
push
xor
fs
lret
aad
insl
imull
mov
mov
inc
mov
adc
in
inc
das
jnp
cld
jb
dec
in
and
rorb
cmp
xlat
mov
mov
push
mov
jge
dec
mov
cltd
sarl
inc
enter
push
push
add
pushf
scas
dec
pop
push
inc
sub
pop
arpl
xlat
fisttps
sub
push
jae
dec
lret
enter
lods
in
dec
pop
cmp
push
dec
xchg
mov
pop
push
inc
push
int3
es
push
dec
pushf
sahf
cmovne
repnz
mov
mov
push
test
cmp
sub
pop
mov
xchg
insl
ds
adc
jb
dec
in
arpl
adc
data16
insb
sahf
std
sti
sbb
jmp
pop
push
mov
test
or
jo
incl
loop
cmpsl
mov
cmc
inc
cmp
jo
mov
mov
ja
shll
adc
out
insl
sub
jecxz
je
or
imul
std
out
sbb
bound
movsb
xchg
das
xchg
notb
inc
push
dec
movsl
xchg
cltd
jl
sbb
clc
dec
sbb
xor
fidivl
fdivl
test
popf
push
adc
cltd
test
sub
lret
repz
sub
out
or
cmp
outsb
stc
inc
ljmp
sub
sarl
xchg
insb
stc
sbb
ficomps
filds
cmp
inc
hlt
subl
dec
cwtl
mov
jmp
dec
mov
jp
xor
pop
loop
push
rclb
push
jecxz
rcrb
bound
mov
xchg
dec
cs
dec
int
pushf
mov
imul
inc
push
test
scas
clc
and
lcall
adc
mov
repz
inc
xchg
and
es
dec
sub
dec
mov
test
pop
mov
cmpsb
mov
stos
dec
jl
push
rcrb
mov
out
int3
xor
mov
insl
fidivs
pop
dec
subb
data16
ret
cmp
mov
sbb
push
movsb
int
test
fnstenv
push
test
mov
and
add
jle
jo
pop
inc
cmp
xor
push
dec
push
xchg
rcl
out
jge,pt
cltd
dec
loop
push
jno
addr16
mov
adc
insb
jns
push
cld
and
ret
in
xchg
fstl
jns
das
insl
jb
lret
lods
movsb
dec
jg
xor
or
jo
add
mov
aad
sub
test
sub
dec
pop
xor
adc
push
push
xchg
add
std
cltd
jmp
pop
scas
imul
lret
push
es
mov
fsubl
aaa
js
movsl
jmp
mov
xchg
repnz
in
dec
out
add
push
in
jl
and
cmp
imul
add
mov
rcrl
push
out
push
leave
pop
cmpsl
jl
loop
push
sarb
or
in
test
dec
sub
pusha
inc
mov
pop
sub
push
fmulp
push
inc
mov
adc
jns
bound
leave
fiaddl
jmp
sbb
shll
loopne
xlat
mov
lock
cmp
mov
mov
adc
popa
mov
fsub
subb
inc
out
test
push
repnz
mov
adc
mov
push
loopne
rcrb
jmp
mov
js
aam
scas
sub
cs
mov
and
push
pop
cmp
jnp
mov
jmp
popf
andl
pop
and
add
cmpsb
xlat
xor
icebp
sbb
inc
imul
pop
xor
pop
lock
mov
xchg
testb
mov
cmpsb
xchg
adc
bound
mov
xchg
lods
ds
ret
or
clc
cmp
xchg
call
icebp
inc
pop
and
adc
cwtl
xor
or
xorl
rcl
mov
adc
add
jle
mov
push
loopne
sbb
test
shl
out
sbb
imull
jnp
and
dec
cmp
dec
cmp
jne
mov
mov
mov
mov
sarb
lcall
add
and
mov
xchg
jecxz
data16
movsb
mov
pushf
pop
push
icebp
jge
xchg
into
pop
popf
add
mov
adc
push
inc
push
pop
mov
loope
mov
add
stc
mov
fistps
scas
into
mov
pop
loop
lock
mov
imul
mov
inc
or
std
and
imul
sub
push
insb
stos
cmp
dec
cmpsb
lahf
into
mov
jns
nop
mov
leave
les
sbb
lods
dec
pop
adc
mov
xchg
std
mov
int3
out
dec
int3
sbb
cmp
shrb
out
and
fidivl
gs
enter
add
add
or
repz
lret
sub
pop
lods
test
pop
and
jnp
and
fidivl
leave
mov
mov
push
and
cmp
rol
nop
test
outsl
js
inc
leave
mov
lret
or
sub
aam
std
icebp
bound
das
lahf
add
jecxz,pn
cltd
jge
pop
pusha
mov
ja
popa
adc
push
hlt
push
sbb
mov
push
popa
jae
hlt
inc
bswap
or
add
mov
mov
rorl
fcomps
test
sub
adc
dec
mov
dec
xor
popf
aad
mov
movsb
mov
add
insb
outsl
popf
movsl
loop
je
mov
mov
dec
sub
sub
test
and
adc
push
and
in
and
push
dec
xlat
add
psubsb
enter
push
pop
das
jno
cld
mov
fsubrl
mov
push
rcl
pop
shrb
cmp
rcrl
or
leave
add
xchg
adc
adc
push
adc
and
push
les
mov
sub
aad
lock
imul
lcall
sbb
iret
mov
xor
lds
daa
mov
movsb
and
add
ret
fcmovnbe
dec
cmc
lds
adcl
pop
aas
add
mov
stc
sbb
add
cmp
loope
cmp
add
pop
movsl
call
cmpsb
stos
fldl
hlt
jb
ja
dec
aaa
adc
ja
idivb
je
loopne
sbb
repnz
bound
lret
insl
pop
mov
mov
xlat
lock
push
lcall
mov
ret
add
cld
je
or
les
aaa
cmc
sahf
outsl
aas
push
leave
sbb
sbb
inc
xchg
lahf
icebp
pop
rcrl
aaa
sbb
sbb
push
movsl
clc
out
inc
jl
rcrl
loope
dec
mov
dec
dec
pop
ret
pop
mov
popf
pushf
inc
mov
sarb
out
jp
cli
dec
add
int3
or
rclb
and
ucomiss
mov
push
stos
jae
pop
leave
lret
sub
xchg
hlt
scas
cli
mov
pop
stc
xchg
repz
push
lcall
movsl
sub
add
mov
inc
and
push
jp
sub
into
or
imul
mov
mov
orb
mov
addb
ds
ljmp
es
inc
mov
out
outsl
jnp
aam
out
dec
in
mov
cltd
add
pop
mov
sub
or
pop
push
aas
test
lahf
mov
xor
stos
popa
ja
sarb
push
inc
mov
mov
sbb
mov
enter
out
jb
push
mov
xor
movsl
jge
fbstp
psadbw
push
and
jno
outsl
push
pop
cltd
call
lods
or
into
fwait
mov
pop
mov
insb
jmp
faddl
cmp
sub
inc
add
cmp
int
in
lods
shll
inc
arpl
inc
and
dec
aaa
mov
adc
cmpsb
shl
cld
lret
out
movsb
stos
daa
addr16
xchg
inc
loope
movsb
and
lret
rorl
pop
dec
dec
mov
jnp
in
adc
fsubrl
inc
insb
addr16
push
add
mov
cmp
test
lods
pop
sbb
test
in
add
xchg
das
ja
xchg
xchg
popf
pop
and
jne
jg
fldt
in
movsb
loope
sbb
fisubs
xchg
ljmp
mov
or
std
sub
into
mov
roll
jp
aad
outsb
pop
xor
adc
xchg
ljmp
aaa
lcall
pop
rclb
jo
jno
and
enter
push
dec
pop
mov
aam
jge
cmp
push
leave
aad
lods
les
test
sarb
movsb
das
adc
mov
leave
jg
cmc
inc
mov
push
jo
icebp
mov
fucom
lds
in
pop
aam
clc
add
cmpsb
in
jae
mov
cmpsb
fbld
popa
loope
in
jp
out
test
in
ds
imul
jp
add
cmp
ds
dec
sub
pop
or
push
punpckldq
or
repz
push
xchg
or
in
sahf
push
inc
sahf
xor
pusha
or
gs
inc
add
mov
out
popa
js
scas
jns
pop
push
scas
push
and
maxps
dec
inc
xor
sbb
jo
sti
jo
stc
fs
shl
arpl
test
fcompl
hlt
pop
or
test
cld
iret
in
and
stos
cmp
adc
call
inc
in
cwtl
stos
shll
int
or
inc
fists
mov
popa
mov
cmp
cltd
dec
jle
aam
adc
lea
jbe
or
mov
repnz
xchg
fstpl
inc
and
jecxz
ljmp
rorl
mov
stos
lods
pop
out
sarl
repz
in
scas
fisubl
stos
xor
out
lods
add
sbb
scas
sub
fidivrs
rorb
mov
lahf
and
cmpl
jnp
hlt
addr16
neg
cwtl
mov
cmp
or
or
insb
cmp
cmp
cltd
cwtl
xchg
push
jb
and
add
cli
inc
stos
jb
nop
jp
adc
adc
adc
dec
push
filds
jne
sbb
cli
and
rol
and
cltd
stos
stos
ja
jecxz
aas
sub
test
aas
popf
sti
mov
or
loopne
inc
daa
mov
fstpl
xchg
push
arpl
xlat
out
addl
inc
sbb
dec
mov
push
xor
add
mov
in
cltd
rol
into
lahf
ljmp
movsl
mov
and
out
push
rcll
xor
cwtl
cmpsl
push
stos
mov
dec
rorl
in
fstpt
cltd
fwait
xchg
inc
add
mov
std
jmp
mov
dec
push
mov
adc
dec
and
sub
jns
pop
mov
js
or
test
push
pop
nop
sahf
sub
into
mov
inc
push
dec
outsl
xor
adc
cmp
pusha
push
insb
fisttps
out
xchg
pop
xchg
inc
and
loope
mov
in
push
mov
mov
pop
fwait
popf
mov
test
or
mov
jecxz
push
sarl
outsb
cmpsb
add
mov
cmp
and
jmp
cmovns
pop
into
jecxz
jns
dec
mov
mov
mov
inc
js
jg
out
dec
sbb
mov
dec
push
xchg
push
nop
data16
jecxz
popa
insl
mov
dec
and
ss
test
aam
popa
add
iret
mov
gs
fimull
or
push
movsl
xor
mov
xlat
push
dec
lret
fsubs
xchg
int
pop
pushf
mov
dec
cmp
lods
cltd
lds
dec
add
pop
cs
mov
mov
data16
aas
jae
shll
pop
jmp
mov
add
xor
push
mov
adc
loopne
les
movsl
cmp
pushf
inc
aaa
lock
push
jae
add
arpl
jg
lods
cmp
inc
out
and
dec
aad
push
and
and
pop
jg
fisttpll
dec
mov
mov
inc
out
jg
outsl
stos
scas
cmp
in
aam
jne
subb
lret
daa
inc
iret
pop
enter
mov
sub
rorb
insb
dec
stos
scas
sbb
pop
push
push
call
cmp
mov
cltd
push
inc
pop
xchg
adc
je
xor
and
push
outsl
std
jge
mull
xor
add
cld
fistl
dec
movsb
flds
xor
adc
cmpsl
out
bound
xchg
mov
lcall
mull
imul
pop
ljmp
sti
enter
and
fistpll
xor
inc
pop
movsb
xorb
mov
jg
jo
mov
xor
or
jae
imul
lret
adc
mov
lcall
scas
push
push
mov
ret
cmc
stos
inc
cmp
daa
inc
xor
fistl
xchg
imulb
mov
adc
mov
outsl
push
adcb
inc
test
lret
out
adc
sahf
mov
inc
rcr
aaa
lahf
mov
push
lods
cltd
das
adc
mov
pop
or
shr
sbb
orl
andb
pop
repz
jne
ficoml
adc
mov
stos
test
fisttps
dec
sbb
dec
mov
adc
xor
int
lret
xchg
mov
int
dec
mov
sahf
push
pop
dec
loop,pn
pop
repnz
scas
ss
out
out
jnp
aas
mov
mov
movsb
add
out
dec
fmull
ficomps
cmp
into
mov
or
imul
sti
push
insl
daa
cmp
adc
pop
and
jle
mov
aad
xlat
inc
cmp
mov
lods
in
mov
adcb
negb
mov
mov
inc
les
leave
loope
les
loopne
xlat
lea
je
mov
sub
mov
jl
rcll
sub
fists
or
shll
mov
xchg
push
dec
dec
pop
dec
arpl
pop
fidivl
mov
cmp
popa
and
ja
mov
jmp
rcl
std
jnp
cmpsl
in
add
stc
lods
ret
or
push
sbb
loop
dec
int
dec
imul
faddl
xor
ret
sub
mov
mov
insl
inc
ret
xchg
arpl
mov
xchg
loope
das
jge
cmp
and
cmc
popa
pop
mov
insb
mov
data16
sub
das
sub
pop
mov
add
xchg
and
je
loope
std
jg
repnz
mov
das
inc
dec
push
mov
mov
mov
mov
cmp
cwtl
out
push
andl
inc
andl
mov
xor
jb
push
push
inc
mov
movsb
dec
adc
mov
pop
push
arpl
jns
mov
inc
cld
jbe
ja
cmp
mov
fnstsw
cmp
cs
bound
sub
call
aad
jle
xchg
jb
xchg
lods
adc
sahf
mov
scas
dec
aas
sbb
icebp
loopne
cmc
bound
mov
jecxz
popa
xor
or
popa
mov
dec
pusha
popa
ds
jg
jle
sbb
int
pop
fbstp
sti
or
sbb
xchg
fcmovnb
inc
in
mov
rcr
out
adc
cld
arpl
shrl
jle
int
push
test
cmp
subl
ret
lret
mov
and
pop
call
fadds
std
fdivrl
lret
mov
test
int
push
inc
xor
and
dec
lds
xorl
pop
aam
mov
inc
add
inc
push
jg
movsb
adc
test
xchg
es
inc
in
xchg
out
movsl
cmc
ljmp
in
push
sub
pop
std
mov
xor
dec
pop
gs
inc
loope
push
test
dec
or
jno
outsl
je
lods
jbe
sahf
mov
mov
rcrl
sub
sub
sbb
fs
jmp
data16
ficoms
lock
xchg
pushf
orb
pop
dec
jnp
inc
ss
cmp
push
cmp
sbb
cmp
mov
mov
hlt
stc
sbb
dec
fldl
mov
dec
outsl
shll
int3
xlat
and
in
out
out
push
mov
push
cmp
or
mov
cli
xchg
fwait
cmpsb
gs
inc
mov
ret
cwtl
icebp
call
popf
lret
push
jl
pop
push
push
leave
out
inc
cmp
mov
mov
jnp
mov
pop
push
add
jnp
and
push
dec
cli
cmpsb
xchg
jo
lock
in
cmp
iret
jae
xchg
fsubr
adc
adc
or
ljmp
dec
adc
sbb
mov
mov
fnstsw
loopne
popf
test
add
jp
inc
ss
add
cmp
sbb
cmp
mov
ds
mov
push
jg
bound
sbb
stos
xor
xorl
jge
mov
mov
mov
jne
mov
sbb
aad
in
cwtl
enter
cmp
int3
outsl
inc
mov
sar
mov
cmp
call
dec
add
stc
cmp
pop
inc
inc
outsb
imul
jmp
cli
or
stos
lods
jne
test
mov
adc
inc
idivb
and
fstpl
adc
ret
lds
cltd
icebp
cmp
mov
imul
mov
and
pop
mov
or
test
mov
mov
lods
push
add
pop
roll
movsl
fneni(8087
xchg
bound
loope
pop
mov
cmpsb
out
rcrb
xchg
in
inc
out
mov
dec
pop
dec
push
pop
fildl
xor
sarl
fistl
fidivrs
mov
idivb
mov
pop
mov
mov
test
or
xor
jl
jp
cmp
pusha
sub
jg
sti
fadds
jg
scas
rorb
mov
nop
lea
add
jns
fadds
shll
pop
pop
adc
sbbl
mov
jecxz
add
imul
pop
leave
mov
inc
pop
pop
mov
pop
fnstenv
lcall
cmp
jmp
cmp
inc
lods
sarl
out
pop
jno
push
push
insb
inc
mov
cmpsl
and
ret
xchg
adc
xchg
or
inc
mov
arpl
dec
lods
pop
xchg
push
pusha
jg
pushf
jae
cmp
mov
dec
mov
jmp
adc
xor
mov
or
jno
movsb
xor
aaa
imul
sahf
sub
or
addr16
xor
bound
out
or
jle
cmp
into
mov
xlat
mov
xchg
jns
ljmp
mov
je
inc
ljmp
fsubrs
cltd
sbb
dec
shrb
cmp
jnp
xor
pop
sbb
aam
push
jecxz
jo
add
rcll
push
and
scas
cmp
push
sbbb
dec
dec
mov
adc
cmp
div
mov
jp
jp
decb
mov
aam
call
bnd
xchg
js
or
lret
mov
adc
lods
xchg
jmp
xor
lahf
adc
lods
das
aas
pop
js
xchg
ljmp
jne
arpl
mov
repz
imul
mov
mov
cmp
mov
scas
mov
ljmp
mov
or
adc
or
insl
sti
stos
shrl
sub
inc
jge
adc
imul
lret
data16
movsb
mov
mov
push
xor
sbb
push
int
in
mov
stos
decl
jnp
je
xchg
scas
or
mov
pop
daa
lret
out
pop
dec
mov
imul
push
ret
rcl
and
xchg
mov
divl
xchg
pop
jo
push
cli
mov
or
lock
sti
lock
pop
jecxz
mov
aad
xchg
enter
mov
mov
sub
sub
inc
rorb
sbb
cli
sbb
insl
mov
push
sti
pusha
and
inc
sub
test
xor
sbb
push
add
int3
and
jg
jp
lcall
add
push
adc
xor
js
inc
sbb
in
sbb
aad
inc
mov
or
adc
sbb
test
sti
dec
mov
fldenv
inc
xor
in
loopne
xchg
mov
pop
jp
and
mov
movsb
and
cwtl
or
ret
mov
outsb
out
fsub
or
push
jle
xor
or
pop
insb
dec
testl
in
mov
std
mov
mov
jne
push
xchg
jge
ljmp
inc
cmpsb
imul
ss
jl
mov
divl
jl
cmovnp
lret
jg
out
scas
mov
fucomip
inc
out
in
jecxz
aad
push
push
xchg
jge
dec
xchg
sub
and
inc
sub
call
or
xchg
sahf
or
mov
pop
fsubl
xor
jb
or
mov
lahf
shr
arpl
cmpsb
lods
loopne
inc
int3
mov
jge
inc
jecxz
and
and
lahf
or
mov
lods
inc
stos
sbb
lods
arpl
mov
pop
lods
xchg
cwtl
fidivs
xor
pop
dec
sbb
mov
mov
and
cmp
adc
jmp
vmwrite
pop
andb
dec
pop
pop
lret
push
inc
loop
in
negl
repnz
ss
push
lea
and
inc
sub
dec
rcrb
rcrl
fldcw
sub
stc
sbb
sub
jg
addr16
adc
stos
mov
das
xor
punpckhbw
stc
movsl
inc
jns
leave
dec
jns
bnd
xchg
xor
mov
add
les
int
aam
push
ljmp
insb
and
push
pop
xor
dec
xlat
adc
pop
cmp
adc
push
mov
pusha
mov
mov
pop
popa
sarl
mov
lahf
cmpsl
test
cltd
or
cmc
rolb
adc
mov
cmc
pop
popf
outsl
out
loopne
jno
or
rorb
test
and
mov
push
sbb
push
pop
sarl
jge
xchg
xchg
pop
pop
or
push
mov
lods
cld
sub
mov
dec
lods
mov
jno
mov
sbbl
repz
movsl
dec
or
xlat
pop
push
mov
into
mov
insl
fdivr
inc
adc
mov
mov
jle
movsb
data16
add
pop
insl
mov
lret
dec
sub
jae
into
lock
xlat
sub
ret
push
movsl
push
jmp
and
adc
jmp
push
ja
mov
push
insb
sbb
lea
in
xor
je
imul
and
xchg
imul
mov
adc
dec
jmp
jp
jge
mov
lods
xlat
add
sbb
jnp
mov
fistpl
xchg
mov
or
or
call
and
ret
mov
jno
orb
dec
repnz
stos
jmp
orl
or
add
scas
jle
adc
neg
sbb
rcrl
fidivrl
pop
xor
xchg
mov
jge
in
add
je
out
mov
mov
lahf
movsb
or
push
pop
jne
add
fcoms
mov
cs
addr16
add
add
test
adc
lret
xchg
mov
cmpsb
je
mov
shll
mov
push
or
xor
leave
stos
loopne
xlat
aad
fldenv
inc
cmp
pop
mov
mov
subb
adc
out
stc
jnp
adc
jo
add
sub
adc
les
xor
mov
fstpt
cmp
aas
mov
adcb
daa
dec
and
xchg
adc
rclb
das
lea
mov
addr16
aas
or
stc
push
mov
sub
dec
or
sbb
push
or
sar
push
jb
push
jecxz
cmp
inc
lods
xchg
fcmovne
das
push
cmp
lods
stos
lods
add
push
dec
aad
andb
outsb
jno
mov
and
insb
cmpsb
cld
sub
ret
mov
xorb
push
or
pop
fdivrs
imul
or
or
sti
fs
jge
jg
andb
jp
icebp
ss
add
inc
and
inc
fstl
pusha
std
bswap
pop
sub
or
mov
and
sub
add
sub
scas
seto
fwait
shr
mov
sub
add
repz
std
clc
and
cmp
mov
jl
imul
lahf
dec
jecxz
xchg
popf
fisttps
mov
push
cwtl
in
pop
dec
or
pop
push
jno
dec
movsl
adc
inc
mov
lret
iret
fsub
dec
and
icebp
mov
sub
xor
mov
lods
mov
sbb
cmc
fsubs
nop
sete
in
dec
cltd
loope
push
mov
push
pop
push
nop
mov
add
popf
xchg
sub
mov
imul
adc
xor
out
ja
mov
push
jb
cmp
movsb
jge
sub
jp
ss
enter
rcll
xorl
fstpl
ss
shlb
in
popf
and
stos
xchg
xchg
jmp
jnp
fistpll
push
sbb
push
scas
xchg
inc
mov
or
xchg
add
addl
xchg
adc
cmp
scas
or
movsl
xchg
or
imul
dec
sub
mov
xor
sub
add
scas
imul
out
sub
jno
fstl
outsb
xlat
hlt
lods
mov
or
pop
adc
fdivrl
lods
pop
sbb
test
orb
std
in
movl
jo
mov
pop
test
lcall
add
mov
jo
mov
jl
add
das
mov
jnp
inc
inc
popa
movaps
jg
loope
in
mov
cs
inc
add
inc
repz
iret
jmp
push
enter
cmpsb
lea
xlat
push
repz
cmpb
inc
mov
ret
pop
or
and
nop
xchg
dec
xor
mov
dec
adc
jno
ss
adc
sub
nop
inc
ret
daa
jno
and
adc
and
pushf
ss
mov
mov
dec
sahf
loop
fmull
sar
aaa
repz
sbb
cli
outsl
in
mov
inc
out
mov
cld
sub
inc
push
fs
push
fldl
test
das
fst
imul
mov
cmpsb
movsl
xchg
dec
jp
incl
cmp
mov
loop
inc
sub
sahf
lcall
push
push
cmc
sbb
jp
test
xor
dec
fmuls
dec
xor
push
cmc
shl
popl
mov
imul
arpl
xchg
cmp
mov
mov
cmpsb
shr
push
shrl
cmp
mov
jnp
pop
lods
mov
subb
aam
add
mov
cmc
daa
pop
insl
fidivl
in
bound
icebp
pop
stos
adc
adc
pop
mov
mov
mov
mov
lds
push
arpl
or
push
pop
and
lahf
shll
add
jge
pop
js
push
out
ret
xor
lret
sub
out
dec
fbld
in
xchg
pop
pop
arpl
addr16
shlb
adc
test
xor
cmp
dec
sub
sbb
jl
sbb
cld
stos
and
faddl
xor
adc
lods
jae
jno
mov
push
or
add
test
xor
popf
ja
jecxz
scas
leave
xchg
movsl
imulb
pop
jecxz
adc
jbe
call
lcall
push
push
popa
push
pop
cli
stos
pushaw
cmpb
adc
push
lods
or
loop
jp
orl
aas
out
push
inc
inc
repz
inc
push
stos
jg
pop
leave
fadd
pop
ja
ret
xchg
insl
scas
mov
ret
adc
insl
xor
push
mov
out
nop
push
xchg
jmp
fwait
repnz
sbb
sbb
in
mov
popf
dec
mov
int3
sahf
pop
aad
repz
lock
cmp
fdivr
es
loopne
xor
xchg
in
push
arpl
lahf
pop
xchg
insl
rorb
mov
cmpl
in
test
xchg
rolb
adc
mov
ss
and
stc
insl
fnstcw
je
inc
hlt
or
nop
mov
xorl
test
insb
or
jmp
fcoml
movsl
push
pop
xchg
cli
out
dec
sbb
mov
out
sbb
leave
jb
in
jb
dec
mov
inc
push
push
sahf
outsl
jnp
in
mov
adc
imul
enter
sbb
jnp
xor
das
mov
ja
adc
adc
jle
out
repnz
rcrb
add
sub
popa
aam
andl
in
fsubl
xlat
repnz
or
popa
stos
xchg
sbb
add
lods
int3
imul
and
xchg
or
movsl
mov
inc
mov
inc
arpl
xchg
fwait
add
mov
subl
pop
xor
fldl
dec
adc
popf
mov
push
test
scas
cmp
mov
jne
adc
dec
or
xor
stc
shlb
jbe
stos
xor
xlat
icebp
xor
inc
data16
cld
adc
lock
sub
movsl
loope
dec
jo
xor
dec
xchg
test
dec
or
push
mov
in
dec
sub
jo
xor
cwtl
push
mov
push
jp
mov
and
loope
pop
push
jp
test
sbb
int
or
push
sbb
stos
sbb
lret
mov
loop
or
mov
cwtl
and
jne
popa
adc
pop
jg
dec
filds
dec
loop
aas
mov
cmpsb
dec
loop
into
test
sbb
loope
addb
repnz
mov
mov
cmp
push
bound
arpl
jmp
pop
jb
loope
inc
xchg
subl
mov
inc
and
sub
aam
cmp
cld
insl
add
outsb
ret
fcoms
fildl
and
in
ror
and
jo
pop
dec
test
pop
jo
xchg
xchg
in
ss
mov
call
jns
dec
movsb
iret
xlat
addr16
mov
imul
xor
scas
scas
pop
std
jmp
xor
mov
xor
and
sbb
icebp
insb
jecxz
lods
mov
jl
or
pop
lret
jne
xlat
mov
frstor
enter
call
push
or
mov
repnz
enter
adc
fistpl
testb
jne
filds
movsl
inc
xor
dec
xchg
adc
insb
lret
cmp
mov
add
or
icebp
bound
mov
jae
aas
cmc
sub
pop
je
mov
insb
pop
dec
pushf
inc
out
mov
ljmp
int3
push
xchg
mov
xchg
rolb
push
insl
inc
ret
lods
lret
adc
sub
dec
aam
mov
or
hlt
and
int3
movsb
xchg
addl
test
mov
cwtl
out
sub
xchg
cli
jp
or
or
jg
cltd
xlat
fadd
ret
add
mov
pop
push
ja
pop
das
mov
add
cltd
add
ljmp
pop
mov
pop
adc
cs
and
mov
push
sbbb
lahf
pop
adc
call
inc
cltd
ss
pushl
and
fs
les
inc
jmp
cli
popf
mov
pop
sahf
pop
movsl
in
inc
dec
inc
xor
sub
insl
xor
stos
dec
imul
mov
test
xchg
add
shlb
dec
sbb
pushf
cmp
pop
out
hlt
sbbl
shr
mov
stc
les
icebp
mov
inc
mov
addr16
testl
mov
mov
xchg
insl
roll
push
push
test
mulb
pop
mov
sbb
push
sbb
dec
data16
sub
jmp
sub
pop
loopne
mov
roll
cmpsl
test
test
mov
sarb
xor
adc
xchg
jo
sbb
sbb
adc
cmp
movsl
xchg
idiv
les
into
xchg
mov
ss
adc
mov
test
je
mov
clc
lcall
and
cld
jbe
sbb
jle
in
repnz
and
lds
into
cwtl
jecxz
test
out
dec
incl
pop
dec
loopne
cmpsl
ficoms
js
fcoms
push
pop
cmpsb
mov
xor
jo
insb
jnp
call
cmp
xchg
mov
pop
outsl
lock
push
popa
pop
inc
mov
lret
adc
dec
push
xor
enter
add
out
cmpsb
add
outsl
add
push
clc
dec
xchg
and
pop
mov
adc
pop
xchg
scas
jns
cmc
cmc
divl
test
das
call
and
std
mov
cmp
outsl
push
mov
outsl
insb
pop
add
or
sbb
int
xor
movsl
jg
sbb
jne,pt
int3
inc
push
xor
cli
mulb
aas
lret
or
pop
push
add
aad
stos
sbb
and
push
pop
add
outsl
inc
arpl
sbb
inc
int3
sub
outsl
enter
in
mov
std
leave
and
and
nop
call
sub
cmp
pop
jae
je
sti
add
mov
cltd
pop
pop
push
lahf
leave
sbb
test
jecxz
rclb
mov
andl
xchg
iret
fstpl
sub
into
dec
or
push
xchg
xor
ljmp
mov
push
cli
sarb
mov
in
adc
add
iret
fstpl
adc
and
mov
int3
pop
sti
call
cs
jmp
lahf
pop
mov
mov
push
dec
or
pop
add
sbb
sub
and
aas
inc
mov
mov
popf
dec
jno
adc
mov
push
dec
subps
push
or
ljmp
push
and
xor
gs
mov
or
xor
cmpsl
push
icebp
shl
or
pop
out
cmpsl
inc
xorl
mov
cmp
mov
add
jne
and
mov
ret
lods
shrb
push
jbe
loope
push
push
out
loop
mov
push
int3
popa
dec
jge
xchg
jno
mov
mov
rorb
sbb
dec
cmp
jmp
mov
mov
jnp
mov
mov
push
jg,pt
rolb
bound
test
bound
cmp
cltd
fwait
xor
jne
pop
sbb
das
mov
es
imulb
ja
rcll
or
xchg
and
stos
mov
stos
sti
daa
jns
iret
es
clc
out
out
mov
fsubrl
add
mov
popf
fwait
cmc
and
xlat
repnz
lds
sub
out
cmc
fnstsw
jae
add
sbb
ret
push
outsb
pusha
int3
rcrl
jae
lock
bound
sub
jp
jb
adc
inc
jecxz
cs
cmp
leave
ret
mov
call
call
adc
imul
mov
fwait
in
dec
or
dec
icebp
jb
add
aas
mov
gs
pop
lret
das
and
stos
inc
cmpsl
pop
movsl
jne
aaa
dec
cmp
scas
outsl
xchg
xor
jne
sub
gs
mov
jb
out
aam
or
adc
notl
dec
dec
sbb
xor
push
mov
cmpsl
clc
dec
xchg
inc
ficomps
mov
adc
jecxz
fstps
sti
test
pop
rcl
sbb
xor
xor
and
jmp
xor
aas
out
hlt
mov
mov
or
adc
cwtl
out
andb
jle
test
lods
xor
and
add
int
jl
cmp
jle
dec
sti
push
pop
push
mov
lahf
repz
aas
mov
jge
fisttpl
xchg
ljmp
push
jmp
es
dec
lds
imul
and
out
nop
sti
jbe
cli
jecxz
scas
lea
out
cld
sbb
loop
bound
stos
in
out
adcb
mov
dec
and
or
mov
movsl
mov
popf
imul
sbb
ja
in
ds
pop
xchg
lahf
sub
loopne
mov
imul
pop
add
stos
sbb
inc
movsl
ss
lcall
fcmovbe
cmp
mov
cmp
adc
mov
mov
daa
mov
xchg
lahf
pop
dec
adc
scas
negl
pop
shl
pushf
test
mov
out
movsl
out
pusha
test
and
fmuls
inc
mov
gs
jae
in
inc
xchg
jb
cmpsb
cmpsl
cmp
xchg
cld
lds
lcall
insb
imul
icebp
add
in
std
mov
iret
adc
out
ret
mov
add
cmc
data16
testl
fldt
xor
fidivl
orb
scas
pop
shll
push
mov
mov
fbld
psubsw
mov
adc
mov
and
scas
lds
mov
mov
shll
mov
ljmp
fcomps
lahf
sbb
out
or
sub
mov
xchg
roll
pop
hlt
fcmovu
cwtl
jl
roll
sub
cltd
or
scas
std
add
loopne
cmpsb
repnz
sti
loopne
sub
mov
fwait
push
add
fisttpll
adc
bound
dec
pop
cmp
insl
inc
jnp
jle
adc
xor
bound
pop
out
rcrb
xchg
mov
mov
dec
mov
jmp
in
mov
imul
es
sub
cltd
dec
roll
out
mov
ja
gs
mov
popa
or
arpl
int3
adc
mov
jp
sub
adc
lock
jns
pop
hlt
push
add
mov
popf
shll
fildll
mov
fnsave
pop
sub
lods
mov
mov
lret
leave
xchg
or
pop
xor
xchg
cmp
cmp
push
jns
scas
pop
cmova
mov
enter
sbbl
scas
sbb
leave
jecxz
xchg
mov
push
aaa
insl
pop
mov
xchg
popf
pop
mov
sub
pop
add
inc
imul
push
aaa
divb
lcall
movsb
cwtl
mov
mov
in
sahf
push
jle
push
push
sub
test
xor
jmp
mov
lcall
lcall
push
sub
mov
add
lods
jp
mov
cs
inc
cmp
mov
fiaddl
jb
repz
dec
adc
roll
push
hlt
aad
aaa
pop
cmc
dec
mov
or
cli
into
push
ror
test
push
xor
insb
xor
cltd
jb
lcall
test
mov
push
xor
and
jne
sub
sbb
pushl
test
cmp
mov
ja
inc
sbb
jg
clc
lea
sbb
and
push
mov
xchg
mov
push
loop
add
mov
das
mov
rcll
mov
adc
push
test
cld
sub
loopne
pop
dec
xchg
cmpsb
ret
icebp
fwait
jne
pop
inc
xor
ficomps
add
test
out
ret
and
xchg
cld
add
and
in
mov
ja
pushf
ljmp
pop
sbb
cmp
out
dec
outsl
les
dec
mov
outsb
jno
xor
decl
adc
test
jge
mov
inc
adc
rcrb
jmp
lret
cmp
lcall
pop
test
dec
je
mov
cmp
js
xor
xor
jb
fsubl
call
shld
out
loope
jecxz
and
and
pop
loop
add
jecxz
dec
or
insb
adc
adc
and
iret
mov
sbb
ds
movsb
pop
pop
subb
enter
and
icebp
ret
cmp
imul
gs
stc
xor
sub
mov
loopne
clc
push
cmp
pop
outsb
cmpsb
repz
pushf
sub
jae
sbb
push
jp
dec
jl
jnp
orl
lods
fcmovnu
mov
add
adc
dec
sahf
mov
insl
icebp
pop
xchg
and
hlt
cmp
or
cmp
out
fwait
adc
leave
mov
mov
icebp
or
ja
sbbb
mov
loop
xor
jae
jnp
test
add
cs
pusha
xchg
sub
jle
add
out
cmp
inc
jp
push
jmp
shrl
rorl
mov
imul
add
jne
das
shl
push
call
mov
pop
subl
or
pop
cmc
cwtl
jmp
addl
fdivrl
mov
adc
ljmp
xchg
sbb
dec
ret
adc
pop
and
inc
sub
push
in
adc
mov
mov
lret
push
and
push
xchg
pop
mov
sbb
jp
rep
sbb
fstpl
std
and
pop
sub
inc
mov
and
out
or
aam
adc
jmp
and
push
aaa
add
jecxz
repz
ja
lock
pusha
ljmp
xchg
leave
pop
or
daa
imulb
or
push
xchg
cmpsb
mov
push
out
fsts
mov
jl
or
xlat
push
or
sbb
mov
je
lret
aam
sbb
sub
xchg
add
fldcw
mov
sub
xchg
mov
jle
and
jbe
jne
mov
or
fidivrl
or
fldt
call
mov
dec
xchg
sarl
pop
sbb
mov
xlat
dec
fstpl
xchg
pop
jg
test
lcall
loope
orl
inc
jge
roll
pusha
sub
jbe
fistpll
and
mov
shll
cmp
loop
aad
and
adc
mov
std
aas
or
incl
cmp
add
fwait
cmp
mov
addl
mov
sbb
bound
and
ljmp
pop
shl
dec
cmpsb
repz
std
adc
pop
jns
jbe
rolb
fadds
dec
lea
add
xchg
dec
cmp
jo
or
ret
int3
inc
push
shlb
pushf
lods
push
pop
addr16
mov
xlat
stos
in
fadds
mov
cmp
test
mov
rorb
push
dec
cld
xlat
lea
ret
lods
push
pop
enter
or
sub
mov
cmpsb
or
push
mov
cli
mov
jnp
rcrl
cltd
push
test
mov
or
movl
stos
sarb
xchg
std
ret
out
mov
inc
imul
or
dec
mov
cmp
out
fldl
out
arpl
pop
jle
dec
mov
out
int
sbb
xchg
mov
xchg
clc
cld
jnp
add
pop
xor
jo
xchg
xor
sub
add
ja
jge
int3
idivb
repnz
sub
mov
mov
movsl
mov
sbb
xorb
or
ret
fmull
iret
dec
push
lock
and
stos
aam
in
out
repz
insl
sbb
push
dec
imul
push
outsb
cmpsb
sbb
scas
in
jp
adc
scas
call
popa
leave
mov
out
xchg
cli
lods
nop
add
xor
out
xchg
or
int
in
sbb
bound
cmp
pop
xchg
in
int
stc
pop
sbb
push
lods
mov
push
mov
test
cmp
subb
mov
ret
push
mov
inc
push
cmpsb
mov
cmp
imul
jecxz
clc
xor
fld
inc
mov
xchg
sub
cs
mov
popf
add
xor
je
lcall
fwait
xchg
sub
or
and
and
in
mov
dec
pushf
pusha
mov
out
adc
add
push
lret
movsl
testb
mov
pop
pop
mov
xchg
ret
mov
stos
dec
pop
mov
jg
fsubs
sbb
or
iret
sub
lock
movb
pop
fnstsw
cltd
xor
push
fldl
loop
icebp
fiadds
jb
xchg
add
push
lds
add
insb
or
loopne
in
lret
lds
call
orl
cmp
dec
mov
pop
add
loopne
or
sbb
fdivs
mov
enter
pusha
xor
or
test
inc
test
loope
dec
test
push
mov
push
fld
call
xchg
add
mov
in
or
pop
daa
aam
dec
loopne
pop
push
cmc
aas
cmpsl
jnp
inc
mov
mov
sbb
inc
adc
outsb
sub
jae
lds
sbb
jo
cli
or
adc
and
dec
out
lods
push
xchg
shll
mov
aad
jnp
jecxz
fs
dec
adc
pop
dec
sub
scas
call
push
mov
loope
int
decb
dec
cmp
je
mov
imul
jns
push
adc
lods
sub
sub
int3
fisubs
sub
mov
mov
fs
cmp
call
adc
nop
and
in
insb
repz
jl
int
cmpsl
xor
fwait
dec
repnz
xor
inc
and
in
adc
sub
out
pop
lret
xor
sub
mov
popf
enter
daa
dec
out
adc
enter
mov
jl
fmul
push
inc
sub
inc
imul
cmp
lods
mov
ror
inc
pop
int3
adc
je
adc
mov
xchg
dec
mul
outsl
jp
xlat
dec
push
call
xor
dec
enter
adc
stos
cli
xor
aas
mov
fdivl
es
push
sbb
push
aas
jb
push
out
xor
stos
and
das
rorb
jle
gs
ljmp
mov
pushl
lods
jbe
xchg
enter
in
inc
addr16
inc
cmpl
add
adc
adc
pusha
or
pop
mov
pusha
sbb
adc
insl
dec
adc
sbb
push
push
lcall
cmp
xor
test
push
xor
mov
lahf
mov
jno
add
pop
pop
pop
pop
pop
mov
stos
fwait
or
sub
pushf
mov
pop
mov
fwait
ljmp
sbb
add
jns
lods
shlb
inc
test
add
sbb
or
iret
shlb
xchg
mov
jge
repz
pop
imul
add
leave
add
movsb
dec
pop
xchg
mov
xchg
mov
scas
stc
adc
enter
mov
and
add
cmc
or
jo
pusha
adc
je,pt
jmp
mov
je
shrl
jne
jae
rdtsc
mov
jge
pop
or
ja
jp
xchg
aad
js
test
cmp
add
lds
xor
stos
dec
and
push
xchg
jl
stc
ret
xor
xchg
jb
insl
mov
mov
adc
pusha
insb
lods
push
out
es
push
jnp
adc
inc
call
daa
enter
rolb
jge
testb
push
bound
clc
push
dec
inc
xchg
imulb
test
jae
bound
pop
vmovd
push
mov
repnz
inc
mov
push
mov
or
cmp
pop
mov
xlat
sub
mov
jae
inc
xchg
adcb
xchg
and
cmp
imul
clc
pop
dec
sarl
pop
or
xor
cmpsb
jge
mov
sbb
xor
pusha
lahf
in
xor
int
dec
xor
push
adc
cmc
inc
out
dec
ror
leave
ljmp
test
repz
gs
jb
icebp
ret
shll
or
jmp
add
jae
outsb
stos
mov
fiadds
pop
fs
popf
jb
rorl
icebp
sahf
stc
dec
idivb
aad
cmp
dec
xor
pop
xchg
push
mov
adc
mov
sub
mov
jecxz
hlt
xchg
push
imul
or
sub
mov
ds
mov
jb
cmp
mov
push
mov
and
pop
pop
pop
mov
pop
dec
arpl
or
das
add
xor
cmpsb
push
mov
dec
and
xchg
jbe
arpl
shll
movsb
fdivr
jl
jnp
std
cmp
xchg
ja
cltd
add
ret
jge
insb
inc
clc
in
mov
push
mov
jl
xchg
test
mov
lods
mov
push
xor
lahf
mov
xchg
cmp
inc
mov
inc
xchg
popf
jmp
jecxz
xorb
imul
stos
xor
mov
adc
or
xor
mov
mov
aad
xor
shlb
sarl
insb
clc
popf
aaa
loope
rorl
adc
mov
sbb
mov
dec
and
push
enter
sub
in
aaa
xchg
jl
jnp
pop
pushf
push
xor
push
xchg
mov
push
xchg
xchg
test
pop
jle
jb
xchg
mov
lock
imulb
mov
add
cmpl
test
sti
outsl
push
cmp
xor
mov
ds
add
pop
add
pop
pop
or
jo
lret
mov
mov
cmp
mov
aas
add
add
lock
out
mov
data16
lock
sub
inc
cmp
addl
inc
dec
fadds
pop
cmp
jb
cmpsl
xor
push
ljmp
jmp
or
add
stos
adc
jae
loop
shll
pop
mov
mov
out
aas
push
decl
int3
es
fdivrs
adc
xor
into
xchg
dec
jle
cld
jle
inc
add
out
ds
inc
aaa
test
jnp
and
gs
pop
subl
fildl
mov
cmp
cmp
loopne
cmp
lret
pop
cli
mov
push
xlat
mov
xchg
xchg
dec
pop
mov
nop
fildll
mov
loopne
js
mov
cld
je
sub
mov
lods
xor
clc
adc
jno
xchg
sub
movsb
outsb
outsl
xchg
fcomps
ds
data16
in
adc
out
mov
int
xor
test
pushf
add
cli
xchg
push
xor
in
call
out
fldenv
jge
add
cmp
fdivrs
dec
loopne
push
stc
or
mov
out
dec
shll
jp
sqrtps
mov
adc
ss
loopne
cwtl
sub
lods
cmpsl
aaa
xor
subl
arpl
mull
into
rclb
inc
or
xchg
loop
pop
pop
lds
mov
cmp
lret
xchg
and
and
repz
push
cmp
mov
loope
add
and
push
mov
cltd
mov
mov
add
jae
lret
and
push
mov
jg
test
sub
insb
fcmovnb
hlt
das
adc
hlt
imul
int
insl
pushf
mov
cmp
push
test
or
lock
fstpt
fsubrl
sub
sbb
jl
and
pop
les
shlb
mov
nop
sub
xchg
fs
dec
leave
cltd
and
mov
fwait
push
mov
sbb
loop
sub
mov
jecxz
mov
sub
xor
lock
xchg
push
or
dec
out
shlb
insb
incl
xchg
addr16
lods
dec
roll
and
dec
add
add
cld
pop
lods
jno
emms
int
sbb
sub
stos
push
mov
lahf
dec
movl
xor
sub
pop
test
push
dec
pop
push
mov
les
jge
stc
add
stos
add
ja
jp
mov
ret
gs
mov
scas
mov
mov
push
mov
cmc
mov
ret
adc
roll
shrl
aas
rclb
sub
imul
js
testb
lret
xor
adc
xor
adc
leave
push
adc
inc
pop
xchg
imul
pop
xchg
or
adcl
cmc
fs
out
and
aam
mov
sbb
repnz
inc
pop
or
xchg
loope
and
movsl
mov
repnz
cmpsl
in
xor
and
movsb
mov
xor
mov
mov
stos
xor
add
push
pushf
jb
std
jmp
jnp
leave
outsl
add
or
push
add
bound
adc
mov
insb
out
rcrb
add
push
fldl
ljmp
loopne
sub
mov
scas
fstpl
adc
fimull
add
jmp
xor
pop
mov
fstps
lock
addl
sti
sub
nop
mov
rclb
adc
cmpsl
or
lret
js
push
mov
add
test
int
stos
movsl
xchg
rolb
inc
bound
packuswb
out
pop
adc
imul
sub
jge
arpl
ret
inc
xor
cmp
aas
add
movb
pop
jne
roll
add
daa
sub
or
sbb
call
ljmp
scas
sahf
repz
cmpsl
aad
test
jecxz
aas
jno
pop
aam
mov
outsb
mov
lock
jl
pop
aad
pusha
cmovg
loope
fs
dec
inc
in
mov
xchg
jb
enter
in
sbb
pop
call
sub
repnz
lds
faddp
andb
std
iret
fcomps
dec
addr16
adc
mov
sub
daa
push
cwtl
hlt
gs
gs
std
mov
xchg
rclb
repz
call
test
sbb
inc
mov
sub
out
add
shrl
mov
out
inc
arpl
int
mov
stos
stc
out
mov
loope
push
or
pop
jecxz
bound
and
sbb
dec
inc
je
jmp
les
fdivl
xchg
push
adc
scas
xor
lds
nop
std
jge
into
xor
loopne
xlat
push
jae
adc
mov
loope
icebp
sbb
lcall
imul
je
jnp
fsubrs
lret
sub
lock
jp
jecxz
push
adc
out
jnp
push
xchg
test
in
arpl
bound
xor
push
jno
sub
pushf
pusha
mov
dec
xor
test
lret
jb
cltd
mull
lods
add
cmp
push
loop
clc
test
adc
dec
icebp
cmp
push
mov
popa
stos
sbb
dec
in
cmc
aad
jns
xchg
push
push
cmpsl
jb
sahf
jns
lods
xor
test
and
mov
arpl
gs
addr16
sbb
ds
or
out
ret
xchg
mov
cs
aam
and
jecxz
xchg
or
into
out
sbb
sbb
les
jg
jmp
jbe
scas
shlb
loopne
jp
add
ja
cld
out
jecxz
push
adc
pop
sbb
push
inc
push
sahf
dec
jno
stos
sub
sti
mov
loope
mov
or
jnp
adc
pop
xchg
int
ret
mov
outsl
pop
jb
cli
aaa
les
iret
add
push
ljmp
fdivrs
roll
pop
insb
sbb
ljmp
test
pop
cltd
inc
lcall
xchg
in
mov
shlb
cmp
gs
fsubrl
fadd
sub
out
push
loope
jp
loop
clc
aam
and
add
adc
lods
stos
dec
dec
mov
dec
and
xor
jbe
imul
daa
mov
inc
mov
stos
jle
ljmp
push
cmpsl
sahf
cli
jb
pop
and
fwait
js
dec
test
xor
mov
push
inc
or
ja
jnp
mov
lock
jne
fstl
stos
insb
sub
orl
mov
push
in
addl
lods
push
out
leave
and
cmp
cs
sub
mov
ljmp
and
in
mov
mov
in
push
and
pop
xchg
cmpsl
pop
and
xchg
inc
mov
push
outsl
imul
iret
or
sbb
stc
mov
xchg
loope
sub
and
js
jne
je
hlt
sub
pop
jno
jns
outsb
push
mov
cmpsb
push
sbb
in
push
aas
adc
sbb
inc
jns
xchg
cmp
flds
arpl
lods
jnp
jmp
pop
fiaddl
adc
cmpsl
cmp
out
pop
sub
addr16
cli
mov
fcmovb
lret
lahf
add
movsl
daa
xor
xchg
bound
xor
ret
jmp
stos
pusha
mov
lds
mov
rorl
loope
mov
cld
mov
push
xchg
out
pop
and
ret
repnz
sub
add
arpl
fs
das
dec
imul
or
push
mov
cld
xchg
in
dec
add
mov
imul
cmp
sub
inc
push
inc
xorl
test
int3
push
inc
ja
push
fmulp
test
cmp
dec
fs
repnz
std
mov
inc
cwtl
mov
ror
and
adc
inc
mov
into
scas
rol
popa
push
push
fisubrs
out
in
addr16
sbb
sbb
in
xchg
fnstcw
xor
movl
pop
dec
sbb
xor
std
call
clc
add
push
loop
rcr
mov
adc
jbe
push
les
push
lahf
dec
mov
test
adc
mov
sbb
sbbb
lock
xchg
pop
lahf
loopne
mov
ret
inc
sbb
out
stos
dec
push
in
sbb
mulb
test
xorl
dec
cmp
dec
adc
push
movsb
xchg
stos
jno
dec
xor
mov
cmc
xchg
fbstp
mov
mov
pushf
int3
xor
daa
es
sti
je
xchg
ljmp
out
mov
in
push
cwtd
orb
xchg
sub
in
popa
sbb
rorl
mov
fs
adc
push
inc
jmp
mov
cmp
cmpsl
cs
cwtl
jmp
int3
in
std
outsl
loop
push
faddl
sub
xchg
and
mov
xlat
push
popa
mov
out
mov
lods
or
mov
pop
adc
xchg
mov
adc
icebp
push
mov
mov
pushf
push
call
cli
icebp
cltd
shrl
in
cmpl
loop
xchg
test
outsb
xor
mov
pop
dec
inc
aam
xor
clc
pusha
into
jp
negb
aam
out
sti
or
int3
jbe
je
mov
pop
add
pop
shl
mov
fldcw
pop
jecxz
mov
pop
add
xor
popw
test
enter
lds
mov
fwait
lods
adc
mov
jb
mov
dec
sbb
icebp
or
mov
xchg
lds
cmc
outsb
jae
inc
clts
and
pop
in
inc
jmp
lcall
imulb
mov
or
insb
jg
ret
push
jbe
jb
shrb
fbld
cmp
pop
lret
lds
adc
sub
push
jl
and
into
out
arpl
icebp
cmp
incb
push
jno
in
jno
movsl
mov
pop
xor
mov
aaa
inc
std
out
out
aad
push
cmp
xchg
mov
sub
hlt
loop
and
mov
stos
jmp
pop
inc
mov
js
or
bound
pop
mov
mov
xchg
mov
pop
xchg
xchg
jo
rcrl
aaa
push
and
push
bound
xchg
or
stos
out
or
test
push
ljmp
or
cs
rclb
push
test
inc
ds
mov
sahf
in
stc
push
inc
jne
inc
movsb
mov
xchg
inc
lods
sahf
push
push
arpl
dec
dec
int
or
xor
mov
stos
scas
push
ja
subb
inc
movsb
or
push
adc
sahf
jnp
sbb
jge
sbb
push
test
test
mov
fdivrl
mov
in
pop
nop
xor
fimuls
lods
inc
sbbb
bound
and
xor
cmpsb
cmp
inc
mov
cmpsl
and
insl
and
dec
stos
sub
and
lods
push
sbb
lcall
adc
and
pop
jle
rcrl
jno
xchg
adc
mov
ficoms
psraw
mov
das
push
dec
lea
into
pop
loopne
ret
mov
inc
fcmovb
pop
xchg
rcrb
fists
mov
or
lods
sub
sbb
sub
pushf
out
xchg
popa
jge
jmp
jmp
into
repnz
gs
inc
pushf
sbb
sti
enter
sbb
pop
ljmp
cmpb
les
jnp
xchg
rolb
js
incb
mov
and
mov
jae
mov
dec
ss
sbb
mov
lods
movsl
mov
mov
sbb
in
and
ds
loop
mov
jp
aaa
adc
cltd
add
fwait
inc
xchg
faddl
sti
call
and
push
jg
mov
aas
add
adc
xchg
and
mov
dec
out
clc
sub
movsl
xchg
sub
xor
and
jb
jg
int3
push
sub
mov
loope
xchg
jo
xchg
lcall
jp
cmc
xor
adc
or
push
xchg
inc
stos
es
movsl
adc
cltd
shrb
xchg
sti
lods
stos
mov
or
call
repz
xor
xchg
xchg
stc
mov
testl
pop
call
test
sub
xchg
jno
insb
ret
sahf
je
loop
jns
cmp
sbb
repz
jp
cmpsb
lock
xor
adc
in
out
mov
adc
xchg
sbb
push
and
mov
rcll
or
outsl
jno
jo
cmpsl
stos
jle
scas
xchg
nop
xor
push
je
add
jns
sbb
sub
stos
cmp
jns
imul
insb
test
and
lods
pop
xchg
jno
int
das
fdivrp
xchg
adc
add
jno
sub
lret
xor
inc
outsl
jecxz
mov
fidivl
jne
clc
iret
arpl
mov
add
aad
out
push
xor
dec
jle
test
testl
push
sbb
lahf
push
fisttps
pop
adc
stc
imul
jo
mov
inc
ss
daa
iret
or
add
das
and
test
xor
push
jmp
dec
repz
in
jecxz
sti
sub
dec
jle
sahf
sub
push
jl
or
jno
out
ljmp
stos
loop
mov
or
and
sarb
jnp
jae
ret
test
and
test
mov
std
std
push
add
mov
cld
dec
pop
adc
jb
adc
je
dec
js
nop
pop
mov
stos
sub
xor
mov
out
lret
pop
aad
push
xchg
cli
int3
ds
fldl
ljmp
aaa
inc
lods
inc
xor
mov
jne
push
idivl
sbb
mov
adc
out
imul
adc
rorb
pop
in
jl
into
sub
ds
mov
rorb
bound
stc
mov
or
xchg
ja
cmpb
imul
push
inc
mov
loopne
dec
cmp
es
ret
in
mov
pusha
mov
aam
mov
mov
and
stos
add
xchg
repnz
pop
xor
sbb
pmaddwd
ljmp
pop
in
dec
cli
fmuls
scas
mov
inc
lcall
fidivrl
inc
mov
gs
aad
test
xchg
mov
lret
and
jnp
xchg
mov
push
jno
adc
lret
aam
jp
inc
int3
cmp
mov
dec
test
imul
xor
mov
and
das
add
or
ljmp
push
lahf
inc
nop
add
bound
ret
pop
xlat
sub
or
adc
push
jb
push
sarl
mov
out
sbb
gs
adc
pop
aaa
inc
into
cmp
out
out
sub
push
dec
or
fistpl
or
pop
iret
cmp
push
mov
or
mov
sub
iret
and
add
jae
mov
jae
mov
sbb
insb
sarl
mov
cltd
jb
pop
push
sub
push
jecxz
jmp
scas
or
lock
cmp
outsl
inc
sahf
mov
adc
mov
jno
cmp
cwtl
je
enter
mov
mov
outsl
pop
sbbb
je
in
ds
sub
pop
push
push
scas
bnd
mov
push
and
xchg
and
push
subl
or
jae
push
insl
jbe
lea
mov
and
lret
repz
pop
sarl
in
in
scas
sarl
add
bound
jle
loope
dec
pop
mov
and
ficompl
out
das
add
or
push
repz
std
xchg
gs
repz
bound
insb
pop
test
xor
mov
jo
xchg
lret
cli
andb
pop
mov
push
cmp
int3
jnp
fistl
in
xlat
rclb
xchg
jb
mov
mov
push
pusha
fdivrl
cmp
mov
xchg
mov
outsb
sub
pop
mov
or
and
inc
pop
pop
cwtl
adc
ret
cmp
mov
pop
push
fdivr
orb
mov
das
inc
lods
dec
mov
mov
lods
adcl
push
cmpsb
js
sti
fstpl
cmp
fs
shlb
aad
insb
mov
stos
call
xchg
bound
inc
xor
bound
out
cmpl
popa
or
sahf
cmp
xor
movsl
xchg
fcomps
leave
xchg
and
sbb
lahf
in
xchg
dec
mov
jbe
mov
mull
iret
testl
push
inc
or
test
mov
mov
cld
adc
pop
or
fstpl
fsub
lods
cmp
ljmp
mov
inc
icebp
mov
std
negb
dec
xor
sub
pop
jb
pop
cmp
cli
cmpl
cld
mov
jnp
xchg
sub
lods
in
push
xor
fs
or
mov
xchg
mov
dec
lcall
mov
jns
pop
cmpsb
push
ss
xor
sbb
mov
out
adc
mov
xor
push
mov
and
cmp
jecxz
imul
xchg
mov
hlt
into
test
je
push
sub
hlt
mov
mov
xlat
mov
shl
dec
dec
mov
les
sbb
add
testb
xchg
xor
mov
imul
sbb
adc
jne
out
lret
iret
adc
popf
test
lods
in
sub
jo
push
sarb
pusha
and
scas
mov
mul
bound
std
pop
pop
sarb
movsl
loopne
add
push
in
add
mov
loop
sub
pop
movsb
ficoml
or
je
xchg
mov
int
ret
pop
mov
or
pop
ja
fdivs
jno
test
fisttpl
loope
stos
jae
dec
fsubrp
jge
xlat
cmp
pop
enter
jns,pt
inc
cmpsl
daa
mov
faddl
nop
out
sahf
xor
test
dec
movsl
xchg
rcll
das
sub
push
and
push
push
mov
dec
pop
mov
iret
jo
sub
pop
test
jne
testb
mov
xor
pushf
cmp
dec
testl
cmp
testl
in
mov
outsl
xchg
ret
insb
daa
cltd
jmp
cmp
pop
sbb
cmp
push
xchg
push
sub
push
iret
fxch
ljmp
lret
pop
in
mov
jne
imul
push
push
adc
add
mov
rcrb
inc
pop
push
and
pop
xchg
rolb
test
or
add
add
clc
push
sbbl
stos
sbb
jl
cmp
popa
pop
adc
jecxz
popa
test
ficompl
lods
cmp
scas
adc
pop
divl
sbb
push
insl
repz
push
loop
lods
lods
pop
pop
cmp
adc
jecxz
jo
rcll
mov
pop
adc
cmc
add
rolb
add
jno
mov
insb
pop
dec
gs
add
pushf
or
aam
ss
loopne
popf
push
or
sbb
adc
jb
addl
hlt
cmp
addr16
push
js
cmp
leave
clc
cmc
pusha
mov
pop
xchg
subb
inc
xorl
lcall
mov
and
and
pop
int
cwtl
bound
cmp
addr16
call
cmpsb
push
dec
test
xor
add
mov
insl
push
xchg
fmuls
xchg
insb
mulb
lock
xor
icebp
push
adc
push
adc
sbb
cmp
pop
roll
xorb
dec
xchg
fcoml
leave
lods
add
outsb
push
lods
icebp
mov
dec
jmp
pop
jbe
and
popf
repz
mov
ss
jns
or
or
and
mov
lcall
cs
cmp
loop
adc
adc
sti
out
dec
push
jmp
or
clc
orl
add
in
jo
clc
out
loop
movsb
inc
popa
pop
insl
sbb
pushf
add
push
adc
mov
adcl
fwait
xchg
xor
cmpsl
loop
in
xor
adc
stos
rclb
mov
hlt
mov
mov
leave
inc
sub
outsl
pushf
in
lret
jne
lcall
push
movsb
inc
movsb
inc
addr16
add
loop
inc
mov
aaa
xor
jno
mov
out
fs
shl
push
lds
inc
xchg
xor
pop
inc
rorb
shll
pop
pop
adc
shl
mov
movsb
stos
in
lcall
mov
cmp
sub
int3
xchg
fwait
jb
dec
outsl
dec
dec
push
fldenv
pop
std
sbb
sahf
test
ret
divl
mov
sbb
inc
or
loop
xchg
xchg
jmp
jmp
mov
jmp
jge
xor
xchg
aaa
addr16
and
mov
cmp
and
push
orl
mov
pusha
test
push
aas
fldl
test
imul
sti
mov
sti
in
pusha
or
pushf
xor
out
inc
jecxz
add
stc
cmp
push
pusha
sbb
lods
jl
inc
shlb
test
insl
ficompl
dec
ja
pop
xor
cmp
add
out
mul
add
or
dec
lds
cmc
add
inc
ja
mov
orb
fwait
les
dec
mov
jle
push
push
mov
add
fiadds
sbb
or
ret
decb
sahf
xorl
mov
mov
repnz
repz
sub
mov
sub
movsl
jg
cmc
push
dec
pop
jno
loopne
cmp
jnp
mov
mov
ja
jge
cmc
lret
adc
push
out
mov
add
das
push
jb
xlat
pop
dec
pop
cmp
cmp
fnstcw
dec
jmp
lret
add
lds
jnp
jb
andb
pop
scas
and
mov
mov
and
iret
fbld
xor
push
jl
mov
mov
jge
adc
jge
repnz
sub
les
inc
pop
iret
and
push
jo
xchg
sub
daa
and
clc
outsl
adc
mov
sahf
xchg
pop
xlat
xor
outsb
and
hlt
outsl
std
in
fwait
jmp
mov
mov
loopew
fadd
and
pop
dec
daa
jb
pop
pusha
sub
add
jo
sbb
loope
pop
jne
xor
mov
enter
sub
jns
jp
sbb
mov
sub
inc
subl
jo
fadds
push
sub
xlat
inc
mov
xor
fdivp
imul
push
rcrl
inc
push
sbb
mov
or
test
mov
pop
jae
in
aad
sub
dec
repnz
adc
cld
into
mov
xor
sbb
arpl
ret
repz
xchg
in
lds
mov
and
adcb
mov
pop
lcall
int
shll
xlat
adc
and
cld
pop
subl
cmp
mov
repz
ss
or
mov
out
lea
into
je
into
mov
push
stos
jb
inc
mov
dec
insb
cmpsb
outsl
fcompl
aaa
xchg
inc
sbb
test
fdivrl
lods
pop
cmpsl
mov
inc
add
xor
sti
xchg
jnp
outsb
adc
mov
movsb
xchg
lcall
sub
pop
mov
fisttps
lods
adc
xlat
ds
mov
and
cmc
adc
mov
mov
add
xchg
hlt
stos
in
sub
mov
hlt
push
lods
and
and
xor
vpmacssww
pop
mov
aam
mov
clc
cltd
das
adc
repnz
jecxz
rcrb
dec
loop
mov
pop
sbb
out
jb
push
xchg
push
or
mov
mov
mov
and
test
dec
mov
aad
inc
outsl
and
or
pop
out
mov
pop
pop
sbb
lock
je
in
aaa
jbe
mov
pop
fcom
xchg
inc
and
or
fwait
dec
adc
jle
mov
mov
andb
pushf
mov
push
xor
pop
out
cmp
sbb
test
add
and
lahf
mov
cmp
fcompl
in
mov
push
or
add
ja
dec
sbb
jecxz
jbe
int
inc
lods
jne
cmpsb
data16
dec
dec
scas
popf
loopne
or
adc
add
pop
inc
cmp
cld
xchg
sarl
add
sarl
pop
pop
jne
mov
icebp
jmp
cmpsl
jno
dec
outsb
arpl
sahf
scas
adc
jne
jb
fists
inc
jae
push
or
sbb
pusha
sarb
sub
dec
test
adc
sub
sbb
mov
sbb
push
mov
inc
xchg
jno
push
xchg
test
outsb
pop
inc
orb
dec
push
adc
lahf
dec
ds
jl
bound
mov
adc
fs
mov
daa
cmp
or
leave
mov
cmp
aaa
inc
sbb
mov
mov
mov
sbb
cmp
insl
mov
movsb
add
test
fmull
xchg
mov
sti
ret
lods
push
or
push
stc
xor
es
sarl
mov
cmpsb
ljmp
stos
adc
outsl
aaa
sub
xchg
jae
or
ljmp
mov
inc
jp
lcall
aad
jns
jno
es
mov
loopne
pop
push
add
mov
outsl
enter
adc
push
inc
jo
or
out
fsub
les
and
jno
icebp
in
mov
cs
pop
jns
fldl
and
mov
movsl
xor
add
mov
sub
pop
mov
nop
mov
xchg
and
sub
test
or
idiv
sahf
and
lock
bound
and
int
insl
roll
out
ffreep
ja
aad
jle
xor
sar
ret
ds
arpl
and
aaa
or
push
mov
jno
cmp
frstor
aam
adcl
push
rcl
or
lret
ret
xchg
cli
ficoms
sbb
and
loope
push
cld
out
orl
adc
mov
xor
inc
cmp
das
std
iret
mov
cmp
pushf
and
mov
dec
and
push
stc
mov
jl
cmp
xor
neg
jnp
sbb
idivl
jl
call
push
or
sbb
or
ja
scas
cmpsl
jbe
push
in
rorl
das
mov
sbb
adc
xchg
pop
cmp
ror
fstps
xor
xchg
ret
out
mov
out
je
iret
lret
std
test
out
ja
mov
pop
cmp
leave
mov
pop
and
fcompl
int3
cmpb
cmp
insl
ljmp
fs
rcr
or
in
sti
lods
negl
jno
addr16
gs
and
addr16
rclb
inc
xor
fs
dec
aas
insb
aas
xchg
xchg
lock
fidivs
xchg
mov
sbb
xchg
xor
sbb
aam
inc
in
sahf
dec
insl
add
mov
ljmp
jns
and
repz
add
sbb
mov
push
jae
push
jae
daa
xchg
push
loope
shl
pop
sarl
shll
xchg
or
fstps
sbb
and
popa
sbb
jg
aas
pushf
lock
push
shll
pop
leave
imul
sbb
stos
and
dec
cld
pop
popa
repz
xor
dec
clc
addr16
movsl
cli
notl
nop
cmc
ficompl
imul
adc
sti
xorb
movsb
lahf
cmp
fsubl
jle
adc
addr16
pushf
xor
pop
cmpsb
mov
sub
mov
out
jnp
shrb
push
in
arpl
and
mov
mov
mov
add
repz
sub
in
adc
bound
inc
int
add
cmc
jp
lcall
aam
aaa
test
xchg
push
lock
imul
cmp
shrl
ja
lds
add
jnp
xchg
jge
sbb
test
pop
jecxz
pop
addr16
xchg
aas
or
adcl
mov
pop
mov
bound
inc
scas
xor
adc
and
lea
sub
test
add
pop
repz
cwtl
in
jge
mov
test
mov
shll
std
dec
out
adc
xchg
popf
in
xchg
pusha
add
xchg
mov
mov
push
icebp
cmpsl
xchg
movsb
adc
pop
rclb
pop
test
rol
aaa
xchg
adc
sbb
jl
fucom
decl
add
dec
xchg
jp
fstpt
int
mov
adc
into
lock
pop
inc
dec
inc
orl
adc
shr
sub
xchg
aad
push
hlt
mov
scas
or
xchg
jno
mov
and
lds
in
xchg
lret
ss
dec
push
sub
imul
subl
or
clc
repz
mov
rcrb
lahf
mov
mov
dec
leave
test
mov
rcr
mov
out
mov
xchg
jb
mov
mov
jmp
mov
subl
dec
pop
out
das
mov
push
setns
pop
das
in
mov
or
inc
lods
jecxz
das
cwtl
or
inc
sarl
add
xor
mov
cltd
orl
xchg
into
stos
in
push
vmovlps
data16
sbb
test
jmp
sbb
mov
mov
in
jle
adc
sbb
mov
shlb
rclb
mov
out
cmp
xor
ret
dec
ror
mov
mov
fnsave
xchg
lahf
call
adc
js
lcall
sub
ds
and
das
jecxz
sti
adc
ret
fcomps
dec
fs
sarl
inc
lods
push
mov
and
jge
xchg
rsqrtps
fistpl
mov
cmp
cmp
mov
pop
jns
enter
inc
insl
dec
sub
pushf
mov
in
out
xor
xchg
or
jb
adc
mov
pop
fmuls
xchg
imul
aaa
repnz
push
jno
mov
sbb
mov
push
pusha
inc
lret
fnstenv
jmp
adc
leave
rcll
or
jo
sub
cmp
xorl
jg
cmpsb
lret
cmp
or
pop
xchg
push
mov
mov
addb
gs
call
mov
add
lock
dec
andb
mov
cmp
repz
daa
in
cmpsl
enter
adc
cmpsb
out
sbb
sub
lock
insb
scas
cmp
mov
in
mov
sbb
fsubs
push
ds
push
add
jle
je
out
push
cmp
push
into
add
jl
jnp
push
pop
outsb
mov
inc
cmpsb
fldl
lods
loope
nop
popa
mov
push
dec
mov
cld
dec
mov
sbb
jmp
cmp
scas
out
inc
mov
xor
mov
test
std
push
dec
shlb
movsb
cmp
push
stc
push
xchg
add
add
xor
jle
or
push
xor
and
mov
insl
xor
xchg
test
adc
dec
mov
les
xchg
cld
xor
stos
lds
and
sbb
lds
mov
in
jg
or
das
mov
dec
inc
dec
jle
test
ret
sar
xchg
ljmp
jle
xchg
test
int
nop
aaa
idiv
ja
xchg
insl
push
mull
adcl
xchg
mov
call
jg
ss
fs
cmc
mov
jecxz
adc
cltd
sub
and
inc
movsl
cmpsl
add
mov
sti
cmp
push
fwait
inc
pop
ret
cwtl
push
or
mov
iret
xchg
xchg
lcall
dec
xchg
shll
lock
inc
aam
pop
cld
sub
sub
dec
cmp
mov
out
cli
xor
sbb
clc
adc
inc
mov
idiv
in
jns
stc
jmp
mov
aad
fstl
hlt
movsb
call
stc
in
push
jecxz
pushf
mov
iret
cmc
scas
dec
add
bound
lds
cli
sub
ljmp
pop
cmp
insb
mov
add
add
enter
dec
pusha
insb
aad
mov
sub
cs
loope
js
gs
shl
lahf
addr16
icebp
in
cwtl
jmp
sahf
sub
pop
cmc
push
int3
ss
xchg
lret
xor
cmp
sbb
loop,pt
sub
mov
mov
aad
mov
mov
push
sub
jnp
test
out
repnz
aaa
out
cmp
ficomps
inc
sbb
pop
loope
je
popa
jns
rcrl
jne
add
pop
test
mov
mov
mov
push
stos
push
loop
jl
and
pop
inc
fistl
xchg
mulb
ja
mov
sbb
cltd
and
jnp
pushf
pop
jns
add
fbld
cmpsb
sbb
or
sub
xor
xchg
daa
in
xchg
mov
addl
sbb
cmp
or
ret
jmp
sub
in
das
data16
sbb
fs
push
adc
sbb
pop
pop
gs
fwait
arpl
ljmp
movsb
jp
xor
daa
jnp
jb
or
push
or
add
std
push
std
jp
faddl
jae
add
sub
flds
dec
stos
xchg
inc
sbb
sub
notl
sub
sbbb
stos
push
push
mov
xor
xor
repnz
je
subb
fiadds
ljmp
fidivrl
das
lcall
or
arpl
inc
inc
jo
test
mov
lret
movsl
ss
pusha
js
mov
nop
into
rol
and
mov
pop
int
vmovupd
xchg
fwait
int
imul
call
sbb
pcmpgtd
or
inc
fs
sub
sbb
popa
mov
jno
sarl
cs
sbb
lods
inc
ja
arpl
inc
jg
decb
popa
jp
push
cmp
xchg
jb
or
xchg
pop
mov
ds
dec
fisubrl
sub
shll
popa
bound
xchg
fstps
and
lods
pop
jb
nop
scas
pop
add
iret
aas
lcall
rorb
hlt
mov
arpl
ja
popa
cmp
push
fs
mov
add
lret
pop
in
into
mov
push
jle
out
mov
mov
fwait
sahf
push
xchg
aas
mov
mov
dec
insl
xchg
cli
adc
movb
mov
push
pop
mov
mov
outsb
push
loopne
add
or
inc
cmp
mov
mov
fsubp
pop
push
mov
mov
fsubrs
xchg
sbb
subl
out
rol
int3
adc
xor
pop
mov
vorps
lock
sbb
mov
jnp
mov
adc
sub
pop
mov
xor
mov
rorl
lret
xor
lret
mov
in
xor
pop
negb
lea
sub
lret
dec
inc
fstpt
inc
jb
mov
jnp
adc
leave
das
add
adc
pusha
inc
push
addr16
lods
xchg
popf
andb
out
fistps
cld
jnp
shl
jnp
mov
sarl
andb
icebp
jecxz
push
xchg
insl
push
fisubl
and
loop
cmpb
sbb
js
or
das
inc
cwtl
test
jle
sbb
fwait
xchg
js
imul
popa
and
push
imull
iret
js
and
fidivrl
xchg
mov
insl
popa
push
mov
pop
jge
sub
mov
lods
xorb
sbb
aam
ljmp
loopne
dec
lods
sbb
sub
pop
inc
ret
jno
daa
icebp
fimuls
push
pop
mov
int3
xchg
mov
inc
and
adc
push
insb
rcrl
mov
test
std
dec
adc
insb
dec
mov
inc
ret
or
and
push
pushf
dec
mov
adc
mov
repz
cmc
int3
xchg
out
mov
rol
xor
nop
cmpsb
mov
pop
pop
xorb
xchg
inc
pop
imul
sbb
pop
push
outsb
and
addl
fdiv
test
sub
hlt
or
bound
mov
leave
cmp
stos
jl
lea
daa
fidivrl
add
xchg
roll
add
scas
pop
ret
js
jo
jg
cmp
jbe
repz
jp
call
mov
mov
pop
in
stc
jmp
sbb
insb
push
push
and
call
ja
push
lods
cmc
inc
push
push
inc
mov
cld
mov
imul
sti
fistps
ljmp
icebp
sbb
mov
push
mov
or
pushf
mov
shl
mov
push
jo
xor
lret
arpl
outsl
repz
test
jg
push
jl
arpl
addr16
mov
mov
lods
bound
inc
sbb
and
jns
je
sbb
adc
je
ja
mov
daa
mov
std
adc
xchg
std
les
leave
sahf
aad
dec
adc
jb
cmp
push
imul
pop
scas
pop
and
push
sbb
insb
lods
inc
repz
sub
mov
ljmp
push
push
cmp
jo
movsl
mov
fsts
inc
pushl
sahf
ljmp
or
icebp
add
pop
xor
mov
cld
cmp
inc
cmp
fnstcw
and
cmovge
xchg
sbb
rolb
jae
incl
lds
sub
jecxz
mov
gs
orb
call
mov
push
inc
addr16
fisttps
pop
sbb
add
sub
sub
push
pushf
inc
xor
sub
daa
inc
roll
adc
xor
push
pushf
xor
fs
mov
fdivs
xchg
hlt
cmp
in
fcomip
pop
je
shlb
sbb
pop
add
push
add
xchg
pop
fiaddl
subb
cltd
fs
stc
lcall
xor
jno
add
sub
mov
jecxz
mov
pop
mov
pop
sarb
cmp
call
arpl
xor
cmp
loop,pn
inc
mov
add
inc
mov
in
push
sub
inc
clc
xor
lds
mov
pop
mov
inc
subb
mov
sub
xchg
loop
scas
pop
repnz
push
ljmp
add
sbb
mov
mov
out
cmp
pop
lods
push
insb
lock
sbb
mov
and
mov
cs
xor
sub
ja
sbbb
insl
xchg
xchg
fcompl
push
int3
loop
cltd
daa
ss
pop
sbb
inc
xorb
push
jmp
test
int3
outsl
cmp
pop
mov
lds
mov
pop
or
pop
mov
xchg
mov
nop
repnz
lret
cmc
out
cmpsb
jne
sbb
lret
push
mov
mov
and
xor
decl
cmpl
lds
inc
push
mov
mov
gs
push
daa
hlt
aas
pusha
dec
xchg
mov
nop
jne
insl
stos
fsubs
xchg
mov
xchg
sbb
into
pop
cmp
xor
aam
push
fidivl
popa
aam
sarb
iret
pop
sub
outsb
xlat
mov
push
dec
xchg
divb
pushl
and
mov
add
cmc
sbb
shlb
inc
mov
xchg
jns
les
pusha
mov
cmp
sbb
xchg
xchg
adc
and
sti
scas
push
mov
mov
cs
or
mov
lahf
popa
mov
mov
xor
std
jle
or
inc
xchg
lea
sbb
ret
sub
dec
mov
mov
xlat
lahf
insb
push
xchg
mov
lea
sbb
fcmovnb
popf
add
imul
int3
scas
loop
jl
fisttpl
sub
jg
push
add
test
int3
int3
pextrw
insl
dec
mov
fisubrl
ja
std
lds
sbb
adc
fmul
imul
fldenv
pop
hlt
fistpll
jno
fldt
and
cmp
in
rcll
repnz
pop
add
mov
loopne
test
repz
popf
or
push
xlat
in
fldcw
data16
mov
imull
push
out
icebp
lea
movl
ficomps
inc
std
xchg
xlat
pop
scas
push
pop
test
cmpsb
xor
lds
adc
lret
jnp
movsb
test
or
mov
daa
imul
jl
push
mov
das
roll
stc
test
xchg
or
in
xchg
popa
cmp
int3
cwtl
lods
fdivrs
jge
inc
ret
sbb
andb
adc
cwtl
je
or
xchg
xor
dec
jmp
jno
xchg
push
adc
mov
mov
xor
dec
jmp
les
xlat
mov
push
xchg
es
dec
outsb
dec
xor
in
aam
inc
lret
push
push
and
xchg
outsb
xchg
adcb
inc
cmp
lret
enter
imulb
xchg
xchg
mov
out
pusha
mov
pop
sysret
mov
adc
jns
in
sti
ja
stos
jne
in
loope
cli
dec
push
sub
aaa
sbb
fldl
or
flds
test
xchg
icebp
out
outsb
and
dec
fimuls
idiv
or
mov
ret
pop
cmpsl
sti
iret
stc
leave
stos
mov
test
mov
cmp
mov
and
inc
jo
subl
das
jl
scas
out
test
cltd
out
inc
dec
sahf
xor
stc
js
pop
sbb
je
push
lret
pop
add
icebp
clc
jmp
inc
or
pop
push
and
pop
or
xor
cld
jecxz
jns
incl
outsl
sahf
inc
rcrb
mov
test
sti
lret
fmuls
push
add
jle
xchg
mov
cmpsb
jae
dec
loopne
add
outsl
cmpsb
xchg
mov
insl
and
addb
cmp
push
in
int3
int
dec
cmp
inc
popa
jle
in
mov
popf
pop
push
adc
mov
es
hlt
jae
out
or
adc
stos
jns
jl
jns
xor
mov
cmc
mov
adc
sub
adcl
out
mov
sub
sbb
sti
pop
sahf
movsl
cwtl
adc
jle
push
inc
aaa
dec
push
sarl
enter
xor
ss
das
stos
ret
movsl
les
and
out
mov
xchg
test
and
test
js
adc
test
sub
mov
and
mov
insl
sub
ljmp
or
in
iret
ljmp
sbb
push
cmp
and
xor
cmp
lahf
pop
mov
outsl
jno
dec
push
shl
jg
xchg
addr16
sub
or
jle
pusha
xchg
push
push
andl
data16
push
mov
dec
or
adc
xchg
wbinvd
mov
test
lods
jno
pop
adc
xor
add
xor
mov
mov
in
cwtl
popl
sbb
dec
jle
jl
insb
mov
mov
cmp
jb
jp
test
add
insl
and
xchg
push
or
idiv
mov
mov
and
push
cmp
lahf
jp
rorb
gs
repz
xchg
adc
je
mov
dec
xor
cmp
je
mov
adc
pop
xor
mov
cld
mov
pusha
movsb
and
jne
pop
rcrb
and
xchg
add
add
repnz
ret
sbbb
sub
sub
movsl
imul
ficoml
ficoml
xchg
mov
and
setne
jnp
fldenv
mov
out
jo
pusha
push
stos
orl
mov
stc
enter
fxch
sub
mov
adc
rcr
dec
jns
cmp
into
cli
cli
add
or
push
aad
loop
out
mov
add
inc
and
sub
mov
mov
lahf
pop
lock
or
cmpsl
pop
mov
and
ja
cs
jmp
cld
cmpsb
aad
mov
mov
mov
cmpsl
shlb
inc
pop
mov
cwtl
std
call
movb
push
int
adc
or
jne
jle
test
xor
push
std
sub
lret
xchg
ret
sti
push
loop
sbb
push
nop
inc
lea
cld
insb
inc
push
addb
mov
jo
cmpsl
cmpsl
push
testl
ja
jae
out
dec
in
das
mov
test
sub
mov
out
icebp
sbb
mov
mov
mov
testb
jecxz
imul
scas
mov
fbstp
sbb
xchg
jbe
sbb
lds
cmp
dec
sub
xchg
lahf
stos
mov
sarl
sub
jmp
jbe
arpl
xor
cltd
adcb
in
cmpsb
loop
cmp
ret
ljmp
and
js
and
outsb
pop
ffreep
arpl
xor
iret
decl
daa
dec
mov
ss
lret
xor
repnz
cmpl
or
push
in
test
and
movsl
daa
adc
aam
repnz
gs
fnstenv
push
adc
xchg
js
mov
imul
clc
xor
mov
inc
shlb
and
inc
jo
popf
je
femms
fidivs
cs
in
inc
std
or
inc
pushf
fwait
pop
out
mov
shlb
test
clc
pop
lea
push
dec
sub
pop
aaa
push
addr16
lret
inc
shll
loopne
jnp
cmp
or
sub
adc
xchg
rcl
mov
or
xor
or
cmp
and
out
push
pop
mov
test
and
gs
cmc
aad
adc
cld
aas
into
push
cld
jge
jp
imul
aas
adc
lcall
xchg
fwait
stc
mov
pop
mov
jmp
sbb
bound
xchg
jns
shl
mov
lcall
mov
xor
std
lds
dec
jmp
mov
jl
xchg
stc
and
or
ret
pusha
sub
inc
call
inc
dec
jb
icebp
and
xorb
xlat
dec
in
aam
in
sub
pop
and
pop
adc
mov
add
mov
outsl
aam
and
sub
push
imul
mov
adc
je
push
mov
pop
insl
enter
mul
outsb
jle
push
dec
das
addr16
dec
sub
insl
outsl
jmp
and
shrb
adc
push
enter
jo
add
sbb
mov
inc
sub
cmpsb
sbb
rcll
cwtl
push
sbb
pop
test
xor
inc
sbb
jo
mov
mov
addr16
mov
stc
mov
xchg
enter
mov
mov
popf
shl
or
imul
jle
pop
insl
add
mov
pop
and
ficoms
push
dec
sti
call
mov
decb
xor
add
popf
xchg
insl
jmp
pop
stos
cmp
cmp
icebp
adc
outsb
add
add
add
lea
stos
dec
ret
in
mov
and
push
xchg
push
icebp
negb
dec
jmp
dec
dec
mov
xchg
dec
dec
clc
and
dec
xchg
ss
movsb
inc
inc
push
jnp
loopne
push
pop
out
mov
enter
pusha
mov
daa
xor
repz
daa
lea
mov
fiadds
shl
je
mov
dec
mov
push
out
cltd
adc
movsl
mov
in
dec
inc
sub
fisubrl
pop
fcompl
adc
lcall
jb
daa
cmp
jo
mov
movsl
inc
out
or
bound
sbbl
or
sub
push
xchg
mov
sbb
movsb
ds
daa
lahf
fdivs
jo
adcl
dec
xor
pop
adc
push
push
cmovg
or
in
sub
rorb
stc
andl
test
movb
or
js
mov
test
mov
inc
or
pop
pop
jle
or
movsl
jmp
and
dec
sub
pop
das
ss
add
mov
cld
sub
adc
iret
clc
gs
xor
loope
mov
and
iret
push
sub
mov
outsb
js
movsl
add
xor
pop
push
sub
loopne
ja
mov
adc
or
outsb
or
xchg
ja
adc
shrl
rorb
xor
insb
pop
leave
fwait
imulb
cs
cmp
ret
or
insb
mov
aad
fnstsw
xor
and
push
cmpsl
dec
ds
and
and
int3
movsb
lahf
subl
mov
pop
cmp
add
out
sub
lock
cmp
mov
daa
ror
push
sbb
cmp
jp
cmp
repz
xor
insb
jb
arpl
leave
xor
addr16
mov
mov
xchg
pop
cmp
iret
insl
leave
mov
pop
xchg
push
lods
stos
add
push
notb
pushf
mov
popa
pop
hlt
sbb
idiv
pop
es
movsb
shlb
mov
icebp
pop
xchg
add
enter
rclb
xchg
push
outsl
popa
stos
xchg
lock
pop
adc
aam
lock
hlt
adc
fcoml
push
pop
dec
push
cmpsb
rcrl
xor
push
cmp
out
insl
aam
ljmp
dec
sbb
mov
dec
in
inc
mov
fdivl
cld
arpl
ret
adc
rcl
fdivrl
jb
cmpsl
lods
pop
push
fmuls
pop
push
mov
mov
pop
in
jae
andb
fdivrp
mov
mov
xor
dec
or
aad
sbb
dec
sbb
sti
lahf
call
cmp
dec
push
or
jl
in
out
add
je
fisttps
mov
out
xchg
repnz
mov
ret
jle
hlt
ja
cmp
and
hlt
jnp
or
loopne
icebp
cmp
mov
mov
jl
push
dec
sbb
sbb
leave
rcrl
xchg
jle
sub
into
xchg
jae
arpl
jle
andl
add
mov
dec
jns
cmp
push
jmp
roll
test
insl
es
mov
in
pushf
inc
pop
in
stos
int
cmc
push
mov
ficoms
jno
into
fcom
pop
in
pop
stc
repnz
mov
jecxz
jmp
mov
dec
pushf
and
jmp
fwait
cmp
jle
cmp
fstl
xor
aas
xor
mov
jp
mov
mov
cmpl
mov
cmpsl
jb
jnp
dec
and
push
ss
mov
fisttpll
fnstsw
jg
jo
fs
imul
adc
sub
mov
dec
pusha
and
iret
dec
bound
cmpsb
adc
push
xchg
pop
mov
ja
and
cmpl
jns
arpl
cmp
es
repz
lock
repz
jmp
add
sbb
ds
jae
scas
lea
dec
ljmp
mov
xor
pop
adc
xchg
cli
out
cwtl
cmp
popa
js
shr
pop
mov
lret
aas
sub
sub
cmpsb
pop
or
lret
cmp
mov
aaa
bound
scas
int
sbb
aaa
dec
mov
push
inc
mov
rclb
out
aas
fcom
inc
pop
xlat
add
sbb
push
cmp
and
hlt
out
sub
pusha
movsl
sbb
gs
popf
scas
or
stos
movsb
je
cmp
rorb
lock
push
jo
insl
inc
pop
pop
sbb
cmp
bound
sbb
and
insb
cmpsb
je
stc
jbe
mov
repz
xchg
fidivrl
outsl
ret
int
stos
push
push
adc
or
stos
pop
push
lret
loope
push
loop
adc
mov
dec
xor
repnz
fisubl
adc
sbb
push
je
popf
add
mov
mov
fisubrl
fdivrl
ret
dec
fisubs
sbb
mov
push
repnz
pop
fmul
shl
mov
jns
push
sbb
pusha
add
and
mov
scas
inc
repnz
js
andl
nop
and
sub
or
out
mov
imul
pop
dec
or
nop
jno
and
pop
and
dec
aas
jp
sbb
insb
aam
mov
pop
rcrb
hlt
repnz
sub
mov
ror
xchg
gs
push
adc
loope
sub
fiaddl
ret
push
jnp
sbb
fs
jle
adc
and
pusha
arpl
in
bound
cmc
xchg
pop
push
cli
mov
sub
push
xchg
pop
sub
push
jae
je
sbb
mov
push
pop
jg
fsubr
test
and
ds
cwtl
sbb
sbb
xchg
sub
sbb
mov
mov
xchg
movsl
push
push
mov
pop
ffreep
insl
outsl
mov
cltd
cmpsl
mov
dec
dec
cwtl
fs
mov
cmp
sti
xchg
mov
xor
or
lret
mov
into
mov
adc
ds
ret
push
iret
fsub
cmpsb
insl
mov
imul
xor
cmp
jge
and
outsl
aaa
push
ret
and
pusha
jo
mov
mov
push
mov
lcall
andb
out
mov
repz
loop
pop
arpl
lret
test
mov
sbb
mov
xorb
insb
cmp
pop
adc
inc
or
notb
and
cwtl
nop
ror
pusha
push
loopne
lret
test
in
push
adc
subb
mov
dec
and
imul
jl
jns
xchg
int3
adc
ja
sbb
imul
sub
lods
lcall
pop
sub
arpl
pop
xlat
adc
xor
addr16
xchg
adc
in
scas
cmc
vpavgb
or
xor
dec
movsb
push
das
mov
aas
sbb
mov
fcoml
lods
mov
and
push
stos
lret
jl
and
movsl
adc
cld
xor
dec
adcl
xor
cmpsb
enter
sti
mov
pop
aas
sub
and
loopne
jmp
data16
xor
aas
dec
jae
mov
ret
xchg
sbb
jmp
jge
rol
push
in
jnp
sbb
clc
adc
sahf
cmp
pushf
jge
or
dec
arpl
add
jo
sub
push
pusha
inc
pop
sub
popf
mov
fdivp
sub
jmp
addr16
loop
dec
das
stos
jmp
mov
insb
and
mov
fidivl
lcall
and
push
aaa
mov
dec
xchg
out
out
push
adcl
mov
scas
test
imul
xchg
xchg
aas
cli
jmp
xlat
jge
test
in
ja
mov
int3
int
stos
test
popa
mov
xor
outsb
iret
fidivl
push
push
cmp
or
sbb
inc
cmpsl
pop
pushf
lds
lret
adc
dec
loop
xchg
aas
outsb
jns
ret
adc
push
fidivrl
movaps
mov
aam
dec
pop
or
out
xlat
mov
mov
adc
add
mov
push
push
sbb
push
out
mov
aaa
out
mov
pop
cmovnp
xchg
mov
mov
xor
jno
inc
enter
push
insb
xchg
cmc
cmp
mov
xor
or
sub
push
dec
sub
xor
popa
ds
mov
push
cwtl
outsl
xchg
bound
stc
push
ljmp
int
and
movsl
ret
addl
inc
adc
roll
ret
or
ja
mov
mov
fistpl
insb
push
in
push
push
mov
xchg
aaa
arpl
das
icebp
inc
in
mov
sub
jno
inc
jae
loopne
fists
repnz
cmc
addr16
shr
sarl
jg
fsubs
xchg
fidivl
addr16
pop
stos
mov
in
cmp
sti
add
push
push
cmp
xchg
add
dec
lea
push
xchg
es
lret
cmpsl
repnz
cmp
mov
jno
mov
js
add
in
pop
mov
and
je
shrb
xchg
push
mov
push
cmp
fimuls
gs
push
cli
pusha
or
xchg
mov
int
sub
lods
xor
in
shl
add
lcall
jo
mov
rorb
and
inc
test
sbb
add
mov
add
rorl
mov
pop
outsb
movsb
jmp
pop
push
xchg
addb
push
push
rcrl
cmp
repnz
mov
mov
je
into
or
jns
dec
mov
sbb
dec
pusha
xchg
sti
dec
fs
xor
cmp
clc
outsb
mov
lret
xchg
or
and
orl
xor
scas
add
fldcw
fs
lret
fldt
xchg
push
xchg
mov
sbb
cmp
push
pop
push
xchg
jb
sub
inc
push
push
inc
into
aas
call
add
mov
xchg
daa
dec
adcl
add
mov
or
inc
mov
cmp
into
and
movsb
mov
sar
leave
jnp
outsb
sub
jmp
scas
std
cmp
scas
or
mov
xchg
add
xchg
inc
xor
and
push
cwtl
jne
rclb
popa
and
push
dec
mov
nop
fnsave
data16
popf
xor
aad
mov
test
and
pop
lahf
movsl
or
pop
jb
inc
les
das
incb
addr16
in
or
inc
jo
sbb
lcall
pop
sbb
insl
enter
jo
repz
lock
push
lcall
sbb
mov
rorl
pop
addr16
shl
jp
mov
pop
sar
test
adc
shl
cli
cmpsb
xchg
in
fcmove
mov
or
add
xchg
sbb
dec
xchg
dec
lret
call
test
cmp
sbb
call
xchg
mov
add
pop
cltd
btr
push
inc
repz
push
or
mov
push
in
cmp
sbb
adc
int3
aaa
cmp
shr
xor
cmp
cmp
test
xor
mov
inc
mov
and
mov
enter
iret
cmp
push
jge
sub
fsubs
dec
pop
add
sub
les
mov
mov
js
mov
clc
add
stos
dec
cwtl
mov
fdivrl
sahf
xchg
scas
xor
outsl
repz
cltd
stc
andl
xchg
hlt
or
sub
inc
jmp
fisttpll
sub
stos
jp
xchg
sahf
mov
push
es
lds
adc
adc
push
inc
xorl
push
mov
mov
mov
mov
out
fsts
mov
xchg
call
pop
test
cmp
push
shl
scas
pushf
pusha
or
je
mov
or
aam
pop
mov
mov
mov
cmp
jno
cld
pop
xchg
incb
xor
jle
popa
sub
xchg
inc
jno
ret
mov
lods
jae
inc
fnstsw
ljmp
fildl
jecxz
sub
xchg
fstp
xchg
les
mov
xchg
popf
add
std
inc
and
push
loop
jns
hlt
mov
popa
mov
cmp
out
or
jge
outsl
cmp
xlat
cmpsl
push
test
test
sub
xor
dec
and
xor
mov
xor
push
int
das
push
mov
fdivrs
mov
inc
aaa
cmc
jo
scas
pop
and
aas
cmp
add
jge
ja
mov
sub
xor
popa
xchg
push
jno
add
mov
test
or
lret
iret
cmp
and
movsl
xor
enter
movsb
mov
repnz
sub
shlb
mov
lret
fsubrs
sbb
pop
sub
mov
in
mov
xchg
movl
mov
lret
stos
call
movsl
mov
pop
ss
push
hlt
divb
imulb
jle
dec
sahf
fsubr
pop
mov
push
xchg
iret
mov
lods
loopne
pop
test
test
push
enter
adc
cmpsb
int3
sahf
stos
lock
or
and
jl
or
push
xchg
addl
push
fstps
jmp
mov
loopne
repnz
mov
push
jne
cltd
xor
sbb
outsl
mov
jge
idivb
loope
and
push
pusha
mov
mov
ljmp
aaa
sahf
pop
dec
je
sbb
gs
lcall
or
pop
popa
test
aad
lret
and
inc
int3
int3
xchg
xchg
cltd
dec
inc
xchg
ss
stos
fnsave
cmpb
ss
push
leave
fildl
jmp
fcoms
dec
cmpl
push
mov
fcoml
sbb
jmp
fimuls
mov
sti
cmpsb
outsl
mov
push
mov
jns
cli
add
in
push
sbb
in
jnp
in
mov
mov
cli
mov
jnp
lret
pop
mov
sub
or
cmp
iret
and
adc
add
imul
out
lock
lea
pop
pop
add
test
fwait
cmp
popf
push
or
push
xor
shlb
insb
xor
add
loopne
andb
call
movsb
lods
and
popf
add
mov
cmp
sub
cmc
jne
pop
adc
arpl
jp
sarl
sub
push
mov
scas
dec
xchg
dec
ljmp
mov
cmp
imul
adc
mov
fdivrl
insl
out
jg
push
mov
aad
dec
sub
clc
enter
data16
xchg
incb
push
lea
mov
cwtl
mov
jl
inc
pop
decl
js
cli
xchg
and
dec
mov
lcall
push
jns
sub
cld
fsub
andb
cld
hlt
pop
and
or
out
fadd
jmp
pop
clc
cmpsb
cmp
es
cmp
icebp
push
addr16
jp
movl
or
sbb
fsubr
imul
pop
fsubs
jnp
ret
push
out
add
mov
adcb
xchg
mov
mov
push
or
mov
push
push
fimuls
call
mov
pop
or
or
pushf
dec
xor
mov
dec
mov
out
mov
xchg
or
xor
adc
icebp
fcoml
sbb
mov
dec
fldt
in
hlt
xor
inc
loopne
pop
mov
call
in
sub
rorl
jne
out
inc
jne
mov
outsl
ss
add
insl
loopne
scas
loope
dec
dec
aaa
push
xor
cmp
mov
jbe
js
test
aam
nop
sub
add
sti
ret
pop
lcall
andl
push
daa
jne
roll
dec
dec
mov
adc
adc
push
fnstsw
cmp
popf
mov
out
cmpsl
lds
mov
iret
or
bound
scas
or
mov
dec
sbb
inc
xor
xor
and
xchg
jle
push
enter
out
mov
push
mov
movsb
push
ds
add
in
cmp
xor
sub
add
mov
repnz
add
leave
sbb
fidivl
sbb
scas
out
popa
sub
aam
outsl
negl
je
dec
arpl
xchg
mov
int
pop
sub
rcrl
mov
int
sub
xchg
jle
imul
xchg
adc
pop
mov
pop
push
mov
adc
aam
mov
shll
mov
arpl
inc
jns
push
push
pop
sarb
out
adc
movsb
or
push
inc
jb
adc
int
cltd
lret
push
daa
fistl
leave
jo
fcomp
push
shlb
test
sub
filds
push
mov
add
cmp
add
sar
or
sahf
dec
sub
fbstp
or
test
pusha
inc
ljmp
lock
sbb
int
lret
sbb
repz
movhps
mov
pop
in
stos
xchg
inc
aam
xor
cmp
mov
cltd
or
mov
mov
xor
xor
mov
mov
mov
push
jbe
jl
mov
test
xchg
movl
pop
mov
or
mov
jmp
inc
jg
mov
xchg
inc
push
scas
jmp
jne
mov
lahf
fisubrs
jne
push
popf
pop
mov
inc
bsr
sub
scas
xor
fsub
test
ret
jmp
cmp
shll
fimuls
scas
push
mov
or
cmp
test
das
rclb
fsubrp
sub
shlb
gs
lret
loope
push
mov
jge
test
sbb
jne
add
mov
pop
xlat
lock
mov
orb
shlb
inc
popa
mov
loopne
pop
stc
adc
clc
jge
shrl
xchg
xchg
cmp
jne
adc
out
add
hlt
je
jo
push
sbb
adc
mov
pop
mov
loopne
adcb
and
xchg
je
add
jmp
push
insb
inc
xchg
cltd
fsubs
add
inc
mov
popf
test
xor
push
pop
jp
lock
fsts
sub
or
in
mov
and
or
and
jae
insl
inc
mov
cs
stc
pop
inc
jecxz
sbb
pop
pop
leave
xchg
push
loope
mov
hlt
adc
mov
xchg
lret
cmp
fcmovb
je
es
call
or
jmp
push
mov
adc
pop
pop
ss
sbb
add
cmpsl
mov
filds
add
mov
aaa
sub
mov
jo
lods
repnz
pop
jg
and
pop
aas
aad
push
push
in
rcll
imul
inc
xchg
loop
xchg
pop
xor
mov
push
hlt
daa
lret
out
js
xchg
mov
sub
pushf
cs
sbb
addl
jg
fisubrs
sbb
lret
out
inc
pop
test
or
jns
push
movsl
push
mov
sub
dec
repnz
sub
xor
ret
mov
je
push
mov
dec
arpl
test
mov
aaa
in
xchg
movsl
inc
roll
test
sub
lods
loope
jo
dec
popf
jge
in
jbe
push
pop
je
test
jo
mov
inc
xchg
pop
push
dec
xor
mov
int3
pop
mov
incl
pop
faddl
push
xchg
push
or
bound
mov
outsb
les
int
jae
add
or
cmp
in
push
popf
mov
mov
aad
call
mov
or
fimull
push
rclb
gs
mov
ror
popl
std
jp
test
xchg
pop
mov
arpl
lret
jmp
xor
xor
in
mov
push
test
hlt
or
icebp
lods
mov
pop
and
inc
adc
push
sbb
xchg
mov
lock
rcll
ljmp
mov
dec
inc
movsb
cmp
jge
inc
cld
adc
shl
pop
sbb
sbb
mov
or
lods
inc
gs
repz
sahf
push
dec
cmc
add
sub
insb
icebp
pop
aad
ret
movsb
imul
cltd
cmp
push
mov
mov
out
and
mov
jp
xchg
in
mov
dec
push
adc
pushf
mov
cmp
jbe
sbbl
push
push
cli
lahf
mov
or
stc
js
pop
mov
fcompl
inc
jb
das
or
adc
mov
adc
enter
daa
sbbl
cld
add
stc
cmp
mov
sub
dec
push
shll
int3
repz
hlt
inc
insl
inc
mov
mov
popf
cli
push
mov
scas
pop
fdivs
cld
mov
shrb
dec
mov
and
out
outsl
lret
push
xorl
data16
sub
mov
jne
pop
sbb
into
jp
dec
bound
adc
pop
xchg
into
sbb
add
test
fisubl
jp
outsb
adc
fsts
xor
and
test
xor
mov
fsubrl
or
arpl
and
popa
fwait
aas
mov
sahf
pop
call
xchg
out
push
mov
icebp
pop
lds
adc
cltd
dec
lar
cmpsb
pop
daa
jmp
xchg
nop
adcb
cmc
insb
rcrl
sbb
jns
imul
mov
jne
pop
mov
clc
adc
sub
inc
cwtl
std
lret
loop
into
jmp
roll
add
das
xchg
lea
xor
push
mull
jo,pt
pop
sub
fsubp
xor
lret
push
ret
mov
push
fs
xchg
fnsave
faddl
jb
push
jae
dec
adc
outsl
inc
imul
sbb
cmpsb
cwtl
cmp
arpl
push
iret
jp
shlb
and
scas
pop
lret
and
sbb
rclb
arpl
sti
jno
xchg
int3
xchg
in
in
xor
cmpb
data16
sbb
lock
pop
add
cmpsb
mov
ret
push
int
rclb
dec
setl
imul
cld
push
pop
add
or
jecxz
mov
push
pop
cmp
jecxz
movsb
pop
xor
mov
mov
hlt
mov
rcrb
enter
and
arpl
sbb
insb
mov
xchg
pop
add
stos
add
pusha
push
mov
jg,pt
add
dec
xor
jmp
stos
pop
lret
inc
xchg
jmp
sbb
jge
push
fs
cmc
push
les
ds
rolb
xor
cmpsl
inc
out
je
dec
cmpl
jae
dec
pandn
or
mov
adc
loop
mov
sarl
dec
insl
pop
in
aas
ja
xor
xor
jg
mov
pushf
mov
inc
adc
aas
pop
jb
repz
jmp
sbb
xorb
addr16
lock
jb
fistps
xor
mov
push
xor
loopne
ljmp
dec
jp
fxch
sbb
and
inc
mov
movsl
fs
popf
test
movsl
js
arpl
popf
pop
cmpsl
pop
cmp
xchg
les
xchg
xor
and
sarl
push
cmpsb
push
mov
pop
cli
notl
add
dec
jo
shr
addr16
scas
mov
sahf
insl
mov
mov
mov
cmp
mov
movsl
jp
ficoms
mov
ret
imulb
dec
jl
jbe
xor
lret
and
xor
mov
pop
pop
or
push
or
mov
xor
xor
mov
sub
mov
jbe
dec
mov
inc
imul
out
out
dec
cmpsl
popl
lods
int
lret
test
inc
das
cli
popa
pop
rcrb
sbb
filds
sbbl
cmp
fstl
mov
mov
mov
mov
comiss
add
adc
aad
ret
xor
jnp,pt
test
rclb
fs
mov
pop
dec
femms
bnd
and
lret
stos
frstor
inc
pop
xor
xor
ret
jne
lock
movsb
cmpsl
jo
cmc
popf
sbb
dec
mov
sbb
pop
lods
xchg
adc
fiadds
sub
xchg
jecxz
xor
dec
or
push
jne
xchg
movsb
pop
add
popf
or
ror
jns
inc
test
cmp
test
xchg
ds
sbb
mov
mov
and
pop
and
adc
xchg
inc
jo
add
cli
ljmp
jns
add
push
push
push
aas
sti
in
xlat
dec
sbb
adc
cltd
mov
mov
cmc
push
add
push
negb
mov
xor
icebp
pop
add
sbb
cmpsb
sub
lds
add
pusha
iret
popf
mov
stos
xor
dec
or
mov
dec
ss
leave
cmp
jbe
int
filds
adc
rorb
cs
aad
add
cli
lods
mov
and
lods
fst
or
addr16
dec
pop
dec
xchg
es
cmp
icebp
push
and
js
ljmp
and
push
cmp
jecxz
mov
pushf
dec
es
sbb
mul
clc
jmp
mov
cltd
movsb
jo
or
int
fiadds
mov
xorl
xchg
loop
jg
mov
xchg
iret
xor
fdivrp
test
xchg
adc
rclb
pop
mov
sbb
mov
insb
sbb
sbb
rclb
div
fidivl
cmp
jnp
jne
fcmovb
into
lahf
push
pop
sbb
in
xchg
inc
mov
stos
wbinvd
loop
ret
xlat
push
mov
rorb
xchg
xchg
add
scas
iret
decb
dec
or
sub
jb
sub
dec
pop
daa
mov
mov
mov
pop
dec
rcl
push
bound
jl
cmp
movb
mov
dec
rorl
sub
jne
int
inc
cwtl
lds
adc
lcall
inc
mov
sbb
add
mov
je
mov
pop
aam
dec
punpcklbw
mov
mov
cmp
jge
push
mov
scas
push
aas
repnz
cmpsb
xor
je
sbb
jg
inc
ret
inc
sub
mov
insl
mov
inc
test
mov
adc
testb
push
jo
sbb
sbb
inc
js
jmp
sub
xor
jnp
xor
jge
add
aaa
mov
aas
jno
mov
adc
xlat
dec
imul
cmp
arpl
jge
daa
jmp
ds
jns
or
pop
sarb
test
cmpsl
fistps
test
mov
push
mov
iret
ret
insb
loope
in
ljmp
js
push
shll
cltd
loopne
int
cli
repnz
and
inc
mov
gs
and
daa
call
xor
loop
cwtl
sbb
adc
cmpsl
stc
pxor
ljmp
jo
mov
add
sub
into
mov
in
sbb
out
pop
fidivl
push
push
jmp
imul
rorl
mov
movsb
lock
movsl
shll
mov
xor
rolb
insb
sub
cmpsl
mov
cmpsb
mov
fistl
in
xor
je
adc
inc
mov
pop
sti
sub
mov
inc
push
out
movsb
out
in
fisttps
scas
mov
or
mov
insb
lret
mov
adcl
addr16
pusha
repz
xor
dec
mov
test
std
adc
js
mov
movsb
sub
and
jle
push
int
arpl
xchg
or
adc
loopne
fldcw
or
rolb
sub
inc
scas
enter
mov
fdivrp
lcall
mov
in
xor
mov
mov
and
ret
movsb
daa
pop
jno
jge
cltd
aas
in
push
add
cmp
pop
sub
add
inc
add
nop
mov
jne
int
and
xchg
sbb
in
sbb
xor
xchg
stc
out
or
mov
adc
and
inc
int
shlb
jne
fsubp
cltd
fldcw
fists
mov
std
sub
pop
dec
mov
cmc
test
sbb
mov
and
and
cld
xor
or
add
dec
push
sbb
inc
movsb
jle
jg
mov
cmp
cmp
inc
ret
jno
addb
es
leave
pop
loopne
jns
jge
pop
clc
daa
repnz
sbb
mov
xchg
shll
jo
push
sbb
cld
mov
cmc
inc
push
xchg
sbb
movsb
sub
sarl
push
addb
xchg
aas
adc
add
out
push
fnstcw
fidivrs
add
xchg
xchg
jmp
cmp
xor
inc
lods
std
stos
add
outsb
push
and
jmp
pop
mov
fldenv
pop
jae
loope
xchg
sbb
test
loope
pop
push
pop
adc
push
sub
pop
cmc
sbb
jecxz
sbb
xchg
add
ret
dec
cmp
jp
nop
mov
mov
mov
cmp
add
daa
sub
adc
shl
test
lcall
xor
add
inc
inc
xlat
addl
mov
pop
jbe
and
stos
pop
mov
out
fmuls
mov
mov
popa
xor
ds
cmp
out
pop
test
or
shl
inc
or
push
les
dec
inc
testl
fistpll
les
mov
out
mov
xor
cmpb
mov
fsubl
sub
sbb
pushf
adc
and
pop
add
jnp
mov
js
sub
stos
arpl
and
pop
cmp
xor
stc
mov
mov
sahf
mov
outsb
ja
mov
aam
lock
stos
dec
adc
fsubr
addb
sbb
cs
mov
jle
pushf
int
or
xchg
push
sub
pusha
bound
push
mov
or
adc
out
test
mov
mov
cmp
leave
shrl
mov
xchg
rcr
shlb
sbb
push
push
cs
xor
sbb
lahf
xchg
sahf
mov
xchg
push
into
sbb
leave
popa
in
mov
aad
add
xchg
lea
xor
inc
sub
subl
adc
sbb
std
xchg
cmp
jns
lret
out
mov
cmp
mov
fwait
outsl
jb
loop
aas
test
mov
out
loopne
daa
pop
data16
inc
fldt
aas
mov
arpl
ja
cmp
in
mov
cmp
jno
testb
loopne
or
dec
out
xor
mov
mov
cmp
and
pop
aad
adc
imul
mov
lods
add
clc
outsb
xchg
aad
cmp
add
in
sbbl
imul
lahf
insl
std
int3
test
popf
xchg
jo
xchg
push
fst
or
inc
mull
push
inc
aaa
fnstsw
fldcw
scas
enter
aam
repnz
mov
lds
cmp
mov
sbb
fstl
int
lcall
adc
pop
mov
cmpsb
mov
sbb
insl
ljmp
pop
shr
movlps
out
fsubs
or
dec
popf
daa
mov
or
pusha
add
sub
sub
std
call
push
mov
mulb
and
push
bnd
iret
pop
push
inc
lret
add
into
cmpsl
into
outsl
int
ret
stos
push
pusha
les
ret
push
cmp
cld
shll
mov
mov
lods
mov
push
adc
movsl
push
es
jp
cmc
jmp
clc
cmp
sti
mov
cmp
imul
push
gs
inc
es
jmp
data16
jo
cmp
popf
lret
pop
popf
push
jno
dec
movsl
mov
daa
inc
jne
in
icebp
icebp
clc
inc
fldcw
out
push
jne
inc
test
sbb
inc
add
fisubrl
add
push
or
outsb
and
push
push
dec
jns
ja
test
in
repz
adc
pushf
pop
js
outsb
sbb
subl
idiv
add
loopne
ss
lret
xor
jne
mov
push
fdivrp
out
dec
mov
rcrb
int3
insb
pop
inc
lret
mov
xchg
fcmovu
jno
or
aam
push
push
int
shl
lcall
jge
cwtl
popa
jbe
or
les
out
mov
push
pusha
dec
mov
jl
popf
sbb
pop
mov
adc
adc
stos
jecxz
les
pop
test
push
inc
into
rorl
aad
mov
dec
mov
popa
ret
xchg
clc
jmp
push
mov
inc
pop
pushl
dec
or
addl
adc
leave
jb
xor
xor
fstps
imul
aad
int
dec
or
mov
adc
dec
cmp
frstor
in
outsl
push
mov
add
ljmp
movsb
jmp
mov
imull
outsl
test
push
mov
dec
into
aaa
mov
push
mov
sahf
jnp
mov
les
es
in
push
jno
cmp
dec
fstpt
sub
push
ds
in
push
push
shlb
cmp
add
adc
bound
add
pop
pop
or
pop
inc
jae
mov
fstpl
cs
or
mov
jp
adc
stos
mov
push
jb
jecxz
and
jl
pop
aad
mov
mov
jb
outsl
mov
iret
inc
cmp
mov
les
dec
outsl
data16
xlat
sahf
dec
ja
cwtl
fcomp
fwait
jge
add
jecxz
fadds
ficoms
or
cli
xchg
dec
movsb
icebp
lods
sbb
adc
aad
stos
mov
or
lods
dec
mov
add
mov
pop
sub
xor
fildl
sahf
jecxz
loope
sbb
cmpsb
aas
mov
or
push
int3
in
or
out
cmpl
push
push
ja
dec
inc
loop
mov
rorb
cmp
sbb
daa
cmp
jmp
lds
cmpsb
adc
ficoml
xlat
push
addr16
bound
sbb
les
adc
or
adc
sub
movsl
cmp
pop
push
pusha
lret
aam
cmc
outsl
inc
jle
adc
inc
jmp
iret
shlb
insb
int
adc
test
insl
mov
mov
test
inc
leave
loop
aam
nop
sub
push
and
cmp
nop
fsubs
mov
rcl
inc
fldl
jne
xchg
sbb
cmp
shlb
aaa
push
arpl
jp
jmp
mov
push
inc
js
sarl
jecxz
mov
adc
leave
pop
adc
sarl
incl
mov
ja
pop
sbb
pop
out
pop
out
stos
add
cmp
enter
pushf
lock
enter
std
int3
mov
cmp
fldl
mov
ss
scas
fdivrs
adc
mov
clc
dec
ret
push
xchg
push
arpl
outsb
jns
inc
stc
cmp
pop
and
push
mov
filds
mov
insb
and
arpl
in
push
xchg
xchg
pop
sbb
aaa
out
pusha
or
jae
mov
pop
pop
mov
mov
mov
and
sbb
or
lret
loope
leave
mov
xorl
mov
cli
mov
shlb
jge
sbb
dec
sub
sti
adc
jae
stos
lret
pushf
lcall
and
mov
push
loope
aaa
fists
pusha
xor
pop
ret
cltd
dec
cmp
and
xchg
mov
push
lret
mov
std
jmp
icebp
push
cmp
icebp
mov
push
fdivrs
jnp
adc
jne
pop
in
xor
lret
push
ret
jmp
jns
insl
jbe
pusha
mov
imul
pop
lock
loope
push
xchg
pushf
jle
mov
pop
loopne
addl
sbb
clc
mov
push
or
pop
stos
dec
mov
push
cmpsl
ficoml
adc
rcrb
arpl
es
jnp
jle
lahf
or
incb
faddl
xchg
xchg
mov
dec
xchg
jg
push
push
in
hlt
xor
jmp
jecxz
cmpsl
adc
gs
cmp
jle
lahf
jecxz
pop
adc
test
jecxz
fidivl
aas
scas
leave
fisttps
fdivl
jl
dec
jecxz
mov
mov
pmuludq
push
outsb
int3
push
mov
xor
push
call
lea
push
sbb
stos
pop
movsb
aad
mov
aaa
mov
xchg
call
dec
movl
mov
lds
cmpsb
cld
das
push
jns
lock
pop
decl
mov
or
cld
test
aad
scas
decb
lret
subl
aaa
in
push
shrb
mov
add
dec
cmp
and
lret
ds
in
fs
in
popf
push
or
mul
dec
repz
dec
out
ljmp
pushf
jo
dec
sub
imul
xor
jae
pop
loopne
dec
mov
jp
sbb
xor
cmp
push
scas
into
mov
sti
xchg
std
outsb
fstps
loopne
icebp
mov
sub
fists
scas
int3
test
mov
mov
pextrw
xor
cmp
cmc
adc
imul
or
mov
pop
test
repz
outsb
jo
sub
fmull
jl
in
jecxz
pop
pop
lods
icebp
jo
pusha
push
cwtl
xchg
les
mov
lods
add
pop
daa
cmp
repz
xchg
mov
mov
icebp
mov
and
icebp
pop
jne
push
push
sbb
in
and
add
addr16
push
push
sbb
adc
fs
push
filds
add
and
xchg
sub
loop
xchg
shlb
lcall
add
dec
add
fwait
gs
and
push
jbe
loope
inc
fistl
xchg
push
dec
lret
pmullw
scas
leave
cld
fsubrl
popa
cltd
push
fidivs
jmp
mov
mov
inc
lods
push
repz
out
cltd
add
or
or
inc
ret
pop
popa
sub
inc
out
mov
pop
mov
mov
in
jns
xor
shrb
ret
repnz
jo
icebp
testl
xchg
sub
imul
pop
push
xchg
jg
xor
mov
ss
dec
rcrl
cmp
rol
inc
or
neg
pop
dec
mov
and
out
and
scas
mov
xor
out
fimuls
sub
mov
sbb
cwtl
fwait
ret
inc
sub
int
xchg
xchg
inc
pop
lcall
sub
dec
rclb
loopne
movsl
push
sub
pop
pusha
pop
cmp
jno
inc
adc
rorl
add
add
jge
or
das
ret
push
iret
fcmovnu
aas
cmp
cmp
lds
out
push
mov
add
lods
jp
ret
ror
mov
mov
jne
xchg
cmc
adc
inc
mov
mov
inc
aaa
fs
add
or
xchg
xchg
sbb
push
cmpsb
sti
aaa
add
aad
push
test
lahf
push
ss
pop
imul
pop
inc
inc
xor
rorl
fmuls
icebp
in
icebp
jo
mov
jp
jne
push
pop
mov
inc
in
popa
scas
aam
out
add
shll
jns
and
in
lret
lahf
xchg
jnp
aad
popa
or
adc
out
sbb
cmp
insl
movsb
push
fistps
hlt
dec
insl
imul
cld
fcmovnu
mov
sbb
int
mov
adc
jae,pn
mov
clc
lock
mov
and
roll
xchg
cwtl
popf
or
lret
or
pusha
dec
push
and
sub
lock
add
std
enter
aam
pop
xor
jmp
xchg
mov
cmp
outsb
cmp
pop
mov
shl
sti
pop
mov
gs
dec
fcmovnu
jle
or
jne
addb
pop
sti
push
por
dec
loope
daa
sub
mov
xchg
in
not
jp
sub
std
dec
or
int
lcall
jp
ret
add
arpl
loope
pop
cmpsb
fsts
cmp
leave
pop
fnsave
or
push
inc
aas
movsl
icebp
icebp
push
jp
out
jge
add
sub
mov
push
pushl
xchg
xor
jb
and
nop
loop
adc
dec
mov
fadd
cmpsb
imul
lds
cmp
fwait
cs
fadd
call
mov
in
push
out
xor
int3
mov
adc
push
stos
dec
or
and
push
ja
movsl
cltd
add
push
inc
mov
fisubrs
pop
fisubs
dec
pop
aaa
inc
jmp
sub
sub
adc
fnstsw
sub
test
jo
lock
push
aad
mov
and
ss
mov
fimull
xor
push
add
xchg
lea
xchg
notl
clc
repnz
push
pop
xchg
xchg
es
or
popa
jp
cwtl
inc
cltd
pop
xchg
mov
ja
stc
push
sub
cmp
out
mov
jp
inc
lret
fabs
mov
mov
mov
xlat
push
dec
test
lds
ljmp
xlat
stos
lcall
dec
ljmp
mov
xor
mov
movsl
lret
cmp
ljmp
enter
ds
hlt
pop
cltd
push
rolb
pop
inc
jge
pop
fnstsw
in
insb
shrb
cmp
mov
scas
dec
aas
in
or
cld
pop
jb
xlat
cmp
xchg
pop
js
dec
lds
cmpsb
add
or
loope
arpl
divl
in
adc
jnp
push
and
xchg
push
sub
mov
jb
mov
mov
mov
outsb
hlt
pop
lahf
adc
cmpsb
sbb
js
mov
pop
sbb
les
orl
orl
jb
push
add
rcrl
xchg
lea
adc
add
pop
int3
xchg
cmp
mov
jnp
xchg
mov
cli
stos
cmpl
jbe
decl
or
mov
xlat
mov
dec
jl
jns
mov
xchg
movsl
sbb
out
jmp
cld
sub
or
or
jno
popa
sbb
in
pop
add
cli
out
jne
dec
xchg
push
lds
jmp
add
out
pusha
loop
dec
adc
pushf
jae
ljmp
or
or
or
mulb
int3
outsb
sub
mov
add
lea
out
cltd
and
xchg
stos
xchg
lret
and
mov
inc
fidivrs
loope
clc
xchg
push
jno
xor
dec
dec
mov
sub
shlb
fwait
in
jmp
mov
adc
mov
mov
mov
mov
mov
fs
rcrl
inc
xchg
andb
cmpsl
and
push
std
daa
test
sub
and
loopne
lea
add
js
jo
and
mov
inc
push
add
sbb
in
in
enter
push
dec
xchg
mov
ljmp
mov
jns
add
inc
jnp
dec
mov
xchg
pop
arpl
and
dec
movsl
aaa
rdmsr
orb
jae
dec
mov
xor
mov
lods
xchg
push
mov
aaa
sbb
insw
fs
fdivrs
out
jl
adc
adc
xchg
cmpb
daa
filds
cmp
mov
pop
push
add
ret
fdivrs
push
aad
mov
sbb
xor
fs
pop
les
sbb
xor
dec
dec
call
adc
nop
dec
fstpt
and
jo
rorl
fcomi
or
es
xor
dec
rolb
fisubs
sub
push
clc
arpl
jne
add
xchg
sbb
outsl
sbb
adc
mov
adcl
das
push
les
xor
and
add
sbb
loopne
cmpsl
fiadds
pop
and
adc
loopne
add
inc
xor
add
mov
jmp
sbb
flds
subl
int3
sbb
xor
jns
aaa
loope
shll
movsl
shrl
movb
xchg
sub
xchg
arpl
movl
fwait
sahf
fwait
inc
cmp
dec
and
movsl
leave
push
call
fiaddl
sub
dec
cmp
push
jmp
je
popf
test
loop
xor
push
stos
mov
push
cltd
mov
faddl
enter
lcall
sbb
pop
xrelease
inc
xchg
sub
or
out
xchg
sub
mov
sub
or
push
test
jle
in
xchg
lods
jl
push
cmovl
xchg
dec
xor
xor
lock
ret
sti
sbb
dec
rolb
sub
les
int3
repz
push
popa
repz
daa
mov
data16
imul
bound
or
inc
dec
cmpsl
cmpsb
xchg
std
adc
mov
jnp
jnp
add
sbb
push
mov
stc
push
adc
mov
jnp
xchg
std
dec
dec
cmp
enter
movsl
adc
adc
add
int3
addb
inc
push
nop
xor
cmp
outsl
cli
push
cmova
or
scas
jnp
lret
aas
lods
sub
popf
add
or
sub
iret
mov
fwait
loope
or
pop
popl
std
mov
rorl
lods
les
mov
js
xor
loopne
pop
jbe
and
jmp
sub
das
xor
icebp
daa
ret
mov
loopne
lds
stc
stos
dec
dec
inc
sbb
and
arpl
sub
xor
inc
mov
fidivrs
cmp
hlt
aas
movsb
cmp
jge
sub
lock
subb
sahf
lock
mov
pop
xlat
ss
das
in
push
cmpsb
in
int
insl
into
and
push
xorb
in
mov
fs
and
pushf
or
mov
incl
push
jmp
ret
xrelease
lods
sub
sbb
insl
xor
and
sub
and
ret
bound
popl
aad
inc
pop
pop
dec
movsl
stos
lock
mov
aaa
cmpsl
pop
mov
aad
pop
add
cmp
mov
popf
push
aaa
and
das
dec
test
ficoml
dec
xchg
push
add
popf
pushf
push
fs
pusha
xchg
js
pop
ss
les
mov
or
mov
push
scas
mov
movsl
incb
adc
gs
or
jnp
incb
xor
movsl
xor
clc
popa
xchg
andb
inc
sti
sahf
push
shr
inc
inc
sbb
xchg
call
jge
in
in
cltd
je
call
add
fmull
fdivr
xor
lods
add
pop
pop
pop
cmpb
sub
leave
ret
push
and
push
or
sbb
lcall
cmovp
pushf
cmp
cmc
sub
mov
xor
dec
inc
xchg
add
xchg
jae,pn
pop
outsb
ljmp
lret
aaa
fcompl
or
mov
mov
imul
out
sbb
ret
wbinvd
fists
hlt
xchg
dec
addr16
inc
shrb
std
mov
mov
cmp
sub
or
aaa
ret
icebp
sbb
popf
int3
add
rorb
ficoms
xchg
arpl
fisubs
xor
cmp
mov
pop
cmp
push
adc
aaa
cld
nop
dec
cmp
adc
pop
std
sub
shl
sbb
lcall
mov
lods
fsubrl
pushl
rorb
orl
lret
push
jae
push
adc
pop
ret
jns
cmpl
xchg
add
aad
pusha
pushf
sbb
je
aas
or
aaa
pushf
cmpb
or
test
mov
adc
cwtl
adc
mov
in
roll
js
mov
mov
pop
jge
loope
outsl
imul
adc
ja
jns
jbe
inc
rcrb
cwtl
dec
inc
xor
mov
loopne
dec
loope
pop
ret
int
nop
cmpsl
in
in
sti
rol
es
rolb
pop
pusha
adc
pop
xchg
sbb
xchg
adc
xchg
jno
cmp
sub
int
jb
push
cwtl
cld
jo
mov
stos
add
pop
mov
mov
pushf
dec
and
testl
and
out
shll
imul
nop
mov
clc
ljmpw
sub
or
jl
lahf
popf
fstps
in
push
jb
nop
out
xor
push
ljmp
pop
jle
mov
jno
and
fmuls
dec
and
or
push
ljmp
cmp
add
outsl
pop
into
mov
je
adc
fsubrs
aaa
fdivrs
ret
lods
cmp
mov
aas
xchg
inc
xor
jp
sti
cmp
and
mov
xor
mov
xchg
mov
pop
sahf
aas
nop
xlat
mov
sub
std
mov
xchg
arpl
xchg
or
xchg
mov
xchg
sbbb
fsubr
test
or
je
cmp
pop
jge
dec
data16
jo
and
sbb
jmp
jns
add
notb
dec
test
xor
mov
dec
arpl
sbb
xchg
rcrb
out
repz
mov
ret
aas
cmp
leave
sub
into
add
shrl
mov
and
cwtl
fs
jno
mov
jp
aas
push
push
cmp
cmp
inc
adc
shll
cmp
test
dec
sub
jecxz
outsl
rcrl
jae
dec
adc
aaa
and
bound
lods
xchg
xor
testl
mov
sbb
push
je
sub
and
mov
jb
loope
sub
stos
loopne
scas
gs
popa
leave
push
dec
inc
mov
adc
xor
sbbb
or
outsb
sahf
adc
addr16
or
sar
and
loopne
add
pop
leave
add
pusha
mov
push
pusha
les
xor
outsb
test
or
and
push
insb
push
fmul
cmp
push
data16
mov
pop
sub
fcompl
shrb
repz
xchg
ret
dec
cmp
aas
push
jno
adc
mov
lock
cmp
lea
sub
mov
adc
outsl
ret
jnp
lea
xor
imul
adc
dec
pop
cmp
out
jno
mov
repz
adc
mov
mov
mov
inc
sbb
dec
cwtl
pop
pop
jo
dec
loope
mov
aas
insb
cmp
inc
jecxz
xor
adc
js
mov
push
inc
dec
dec
je
jo
mov
ficomps
pop
inc
xor
xchg
movsb
and
stc
jp
push
and
lcall
lods
repz
ret
xor
cltd
jmp
imul
mov
push
sbb
pusha
sahf
outsl
shrl
xchg
mov
loop
lcall
daa
in
push
loope
push
int3
push
popa
popf
ja
repz
in
xchg
das
cmc
mov
sahf
je
and
mov
pop
outsb
sub
xlat
dec
mov
add
jmp
mov
mov
imul
jge
push
jge
fsubrl
xor
jl
inc
int3
sbb
xchg
loope
dec
inc
pcmpgtb
ss
or
test
dec
cltd
sub
sbb
mov
jecxz
rsqrtps
mov
push
loope
stc
push
adc
out
aaa
cmp
test
cmp
and
fidivs
push
push
cmpsl
in
pop
movsl
ljmp
inc
ja
mov
cmp
mov
loope
loope
xchg
xor
std
push
push
sahf
mov
subb
inc
js
mov
sti
mov
inc
popa
in
cs
mov
mov
idivb
sub
or
cmp
adc
inc
jl
add
rorb
subb
mov
jmp
jecxz
jp
cmp
add
lret
push
jle
dec
adc
cmp
inc
filds
imul
pop
les
mov
repnz
fistpl
dec
mov
imul
loope
lea
sbb
push
imul
stc
adc
cmc
mov
icebp
cmp
pop
jns
imul
sahf
lret
insb
add
mov
out
inc
int3
das
adc
adc
das
test
dec
push
popf
mov
arpl
add
repz
sub
fimuls
outsl
lret
sbb
xchg
scas
adc
rol
mov
inc
cmp
mov
adc
scas
sub
popf
loopne
rcl
loopne
jg
dec
jl
dec
cmp
fwait
mov
xchg
inc
xchg
enter
repnz
mov
jge
inc
cmp
loop
lods
jae
jbe
jmp
mov
lahf
idivb
push
fiaddl
push
adc
ret
dec
add
inc
fiadds
xchg
aam
inc
lea
mov
and
mov
jge
inc
or
mov
shr
mov
cmp
cmp
pop
jmp
loopne
xor
std
jae
cmpsb
mov
xchg
repz
jle
test
fidivl
or
and
or
mov
stc
adc
in
adc
dec
add
pop
scas
sbb
inc
in
lahf
xchg
aam
dec
xchg
cld
mov
push
jne
dec
push
inc
in
insb
and
cltd
rorb
xchg
and
jle
std
xchg
aad
out
rcll
inc
fnstcw
cltd
jle
fnstenv
mov
fists
mov
in
mov
loope
test
mov
mov
std
clc
setns
loope
das
mov
mov
or
mov
or
addl
jmp
dec
pop
sub
into
andl
cwtl
mov
popf
cld
insb
loopne
mov
cmp
mov
dec
push
loope
mov
cmpsb
pop
add
xlat
test
inc
lods
iret
subl
xor
push
xchg
cmc
es
inc
sub
xor
sti
cmpb
popa
ss
addr16
and
add
aas
imul
idivl
inc
repz
xor
xchg
mov
rcrb
xchg
icebp
outsb
adcb
mov
in
iret
inc
xor
pop
cmpb
insl
and
jle
shrl
movsb
dec
imul
cmc
insb
mov
test
cmpsb
aas
sbbb
cwtl
cmpsl
xor
cmp
addr16
cmpsl
pusha
pop
cli
in
inc
cmp
jb
sbb
xchg
cwtl
frstor
cmp
and
insl
adc
lods
in
mov
pop
and
test
mov
mov
xor
scas
stc
sub
sti
xchg
xor
xchg
inc
jle
psubsw
push
add
lods
pop
aaa
xchg
mov
loopne
push
or
aam
push
je
mov
or
pop
sbb
lds
je
inc
add
aad
inc
jno
sbb
test
adc
pop
adc
mov
outsl
stos
ret
pushf
sti
jbe
jge
rcrl
rol
call
and
fcoml
sbb
fucomip
aad
cmp
dec
movsb
and
cld
sbb
sub
mov
arpl
push
mov
sub
pop
insb
lahf
scas
int
mov
insb
pusha
pop
add
lods
lock
sbb
jg
enter
iret
fwait
mov
sub
ret
cli
jne
xchg
cmp
mov
fs
lds
shlb
jae
insb
jne
xor
out
jbe
or
repz
cld
pcmpgtw
dec
push
aas
shr
mov
pop
or
sbb
test
xor
fwait
les
and
mov
mov
sub
adc
jns
aas
add
sub
out
cwtl
lret
push
cmp
mov
shrb
cmpsl
jae
bound
cwtl
mov
imul
add
pop
lods
hlt
dec
and
cmp
push
out
adc
rol
leave
in
mov
push
cmp
das
cmp
mov
mov
add
cmp
out
mov
pusha
xchg
xor
jbe
fs
ret
in
iret
dec
std
outsb
subl
pop
out
data16
int
pop
test
fcomip
pop
push
mov
std
mov
inc
stos
mov
mov
decb
cld
imul
test
in
mov
inc
and
je
fstp
rep
xor
or
negl
stos
push
into
add
and
sbb
inc
mov
aaa
dec
cmp
xchg
mov
mov
lds
push
push
in
fcomps
mov
fs
call
mov
or
daa
in
test
mov
xchg
mov
mov
xchg
cmovo
jae
andb
popf
mov
loopne
adcb
shll
xlat
cmp
cmp
outsb
push
jp
lahf
cmp
push
xchg
aad
in
fwait
in
and
sbb
loop
push
testb
cmpsb
call
popa
je
addl
imull
cmpsl
push
imul
sti
add
cmp
xchg
mov
repz
xchg
mov
out
mov
xchg
sti
jbe
into
pop
or
lret
sub
adcb
mov
sub
sbb
lar
cs
cmpb
mov
xchg
bound
mov
xchg
sub
mov
xchg
push
lret
lret
push
cwtl
push
adc
daa
mov
std
and
push
ljmp
or
data16
and
mov
add
jns
hlt
inc
jb
pushf
push
cmc
outsl
jns
pop
xlat
add
xor
sbb
ret
or
dec
mov
lahf
push
lds
bound
out
inc
adcl
imul
mov
xchg
pop
clc
adc
mov
sub
jnp
pop
mov
xlat
xor
lods
in
cmp
aas
mov
je
pop
imul
test
mov
enter
push
mov
jno
movsb
sub
push
mov
mov
sub
insb
pop
xchg
outsl
jmp
jge
xchg
mov
add
sahf
jbe
int
bound
jne
shrb
aad
push
pop
xchg
scas
push
fldt
add
jmp
push
and
popf
cmpxchg
sti
dec
xchg
inc
test
in
mov
or
ret
sub
lds
sub
pop
inc
call
aaa
xor
scas
xchg
xchg
jne
imul
pop
sub
push
mov
and
sarb
cli
cmpsl
cmp
imul
scas
sbb
jle
sbb
xor
pop
repnz
add
jae
inc
repz
xchg
imull
movsb
gs
mov
sbb
xchg
xchg
and
enter
fs
aaa
cld
hlt
inc
mov
mov
in
xor
mov
fsubrl
dec
ss
ja
test
mov
insl
push
jmp
and
mov
mov
mov
in
xor
or
out
sub
fwait
imul
jmp
fstps
xor
xor
lahf
out
add
xor
jns
inc
scas
adc
mov
pop
mov
loope
popa
and
mov
add
test
into
xchg
addb
pop
test
shr
pop
mov
adc
xchg
cmp
xchg
das
jp
scas
stos
mov
insl
adc
ret
inc
and
jno
orb
xor
lock
test
imul
mov
xchg
mov
sbb
dec
cmpsb
pop
pop
and
imul
push
xorl
lods
jb
pop
fisttpll
cmp
imul
fidivs
and
mov
cmpb
test
ret
adc
mov
pop
pop
lret
jl
adc
xor
xchg
enter
lret
cs
inc
and
ss
xor
data16
push
das
rcrl
loop
mov
mov
mov
cmp
mov
jb
negb
idiv
jle
dec
inc
aas
pop
aas
notl
fildl
and
jne
push
pop
shr
xor
in
lea
rol
xor
cld
pop
jl
pop
iret
inc
daa
mov
xchg
mov
out
push
mov
xchg
xorb
adc
daa
ret
imul
mov
ja
pop
mov
ror
neg
pop
inc
ret
xchg
es
push
adc
pusha
popf
fistps
pusha
test
add
add
mov
js
lds
fisttps
xor
lret
dec
sub
mov
mov
mov
in
xor
jp
nop
adc
imul
cmp
out
pop
mov
flds
in
jne
andl
dec
stc
bswap
xor
mov
out
fwait
jne
scas
add
mov
test
pop
xor
or
push
lods
mov
jnp
mov
sub
daa
dec
mov
sbb
dec
xlat
cmpl
sar
adcl
aam
push
or
loop
movsb
int3
sbb
aam
ror
inc
scas
jnp,pn
push
dec
pop
sub
xor
fnstsw
inc
inc
cld
push
enter
xor
je
xor
pusha
jge
insb
dec
aaa
jno
push
movsl
push
or
mov
adc
test
mov
aas
cmpsb
sub
pop
daa
jbe
pop
mov
xchg
je
push
fldcw
dec
data16
inc
mov
add
push
lahf
xor
adc
mov
lods
mov
mov
xor
xor
jp
add
mov
into
adcb
pop
cmc
fisttps
aas
outsb
cld
mov
mov
push
push
and
ficoml
sub
ret
inc
adc
ret
push
mov
jmp
sbb
in
push
movsl
in
jae
pop
addr16
daa
in
or
sbb
test
or
xor
std
aam
hlt
push
std
lock
lods
leave
test
cmp
sbb
ss
shlb
jp
into
or
faddl
fucom
std
push
xchg
mov
addb
mov
in
mov
hlt
dec
cld
mov
fwait
stos
adc
xchg
lcall
jnp
push
insb
jnp
loope
push
cmp
outsb
jp
xor
lods
pop
out
and
add
xor
insl
lods
outsl
test
push
pop
sub
and
inc
add
xlat
imul
idivb
fwait
dec
mov
push
fimuls
bnd
mov
mov
cwtl
lods
xor
cmpl
mov
les
mov
or
mov
lds
out
push
mov
push
mov
xchg
fwait
xchg
dec
test
addr16
stc
fsubs
push
mov
jae
repz
mov
testl
jg
mov
cltd
xchg
cltd
push
and
imul
xchg
sbb
mov
leave
pop
jnp
test
sub
jge
out
fs
daa
pop
mov
sub
cmc
dec
sub
loopne
jmp
in
in
mov
xchg
inc
mov
ficompl
shr
cld
xchg
rorl
test
push
int3
lods
movsb
mov
leave
popf
mov
test
mov
jg
outsb
es
js
shlb
lea
rorb
inc
sarb
fdiv
test
cld
rorl
das
rorl
int3
pushl
lret
mov
roll
push
push
and
xchg
mov
movsl
sbb
cmp
mov
aaa
push
jb
imul
sbb
out
inc
mov
dec
imul
jns
outsl
mov
cmp
movsl
gs
cmc
and
call
stc
xor
and
add
pop
mov
jnp
int
lea
cmp
jecxz
imul
pop
adc
scas
push
xor
mov
out
or
mov
pop
pop
mov
icebp
out
ss
cmpsl
in
jne
cwtl
or
in
xchg
mov
std
xor
push
aam
adcb
loope
je
inc
cmp
mov
pop
test
in
lret
xchg
mov
adc
loope
sbb
out
aas
push
push
xor
andl
mov
orl
push
fwait
pop
mov
inc
sti
jnp
lret
out
jbe
xchg
pop
out
out
mov
imull
push
xor
aas
push
mov
dec
lahf
sar
xchg
aam
xchg
out
cmp
sbb
fists
dec
jb
and
cli
and
cltd
sbb
xchg
cmpsb
mov
mov
adc
lret
repnz
and
sub
jle
dec
insl
rcll
or
movsb
inc
push
sbb
in
mov
addr16
pop
push
adc
imul
xor
xchg
inc
dec
jmp
into
es
cmp
mov
mov
cmp
aam
ja
xor
mov
mov
fdivs
mov
test
pop
lds
add
inc
pop
fcomi
push
lds
rolb
inc
mov
repz
push
sub
shrb
inc
sub
push
cld
ljmp
add
jg
mov
mov
inc
test
push
daa
inc
sar
iret
les
inc
cmp
mov
rolb
adc
fcmovnb
cmp
cwtl
sub
xor
arpl
jecxz
push
lods
cld
pop
xchg
add
sub
into
out
dec
jno
lock
push
aam
fucomi
xchg
cmp
xor
rol
stc
test
inc
mov
sub
add
rcrb
dec
rcrb
sbb
inc
inc
orl
in
sbb
mov
das
outsb
or
test
adc
mov
lea
pop
jb
and
cmp
rcr
pop
out
cltd
push
mov
hlt
xchg
rolb
mov
add
mov
pop
mov
jno
stos
in
mov
pop
sbb
pusha
mov
lods
movsl
dec
pop
cmp
push
in
iret
insb
sub
out
cmpsl
jae
mov
mov
in
mov
xor
out
arpl
sbb
lret
ss
jecxz
pusha
xchg
sbb
push
push
adc
popa
popa
and
lods
test
pop
sbb
xor
nop
and
fs
add
in
push
jnp
jns
lea
pop
cmpsb
and
sbb
repnz
test
or
xchg
in
adc
mov
stos
loop
dec
andb
imul
add
out
fs
sub
fists
add
mov
in
popf
xor
fdivrs
out
mov
cmpsb
inc
xlat
xlat
out
mov
les
lock
lods
out
ja
clc
popa
lcall
test
pop
jp
jae
ret
insl
xchg
lods
das
push
gs
or
loope
rclb
das
push
xchg
fistps
or
and
lret
fdivr
or
vmovmskps
mov
repz
nop
jae
stc
subb
lea
aad
mov
stos
js
sbb
sti
pop
hlt
cmp
xchg
inc
push
lods
xchg
dec
mov
mov
add
mov
fnstsw
out
ds
outsl
repnz
dec
clc
ret
hlt
xchg
sbb
ret
dec
inc
mov
mov
sbb
xor
xor
rclb
repz
ljmp
icebp
push
xchg
pop
mov
imul
lods
pop
decl
fucomi
push
out
cmp
nop
inc
loop
push
push
adc
mov
dec
aaa
push
xor
in
mov
movsl
lahf
push
mov
pop
arpl
pop
mov
into
mov
adc
das
push
das
mov
outsb
cmp
scas
jbe
popf
loop
mov
sbb
jp
mov
adc
repz
aad
rorb
xor
push
mov
mov
inc
out
mov
xchg
loope
repnz
ss
push
xchg
hlt
lahf
sbbl
lods
in
in
jecxz
fisubs
in
push
daa
xchg
js
sbb
bound
fstl
jecxz
fsubrs
jne
mov
xchg
cmp
pop
push
inc
jno
xchg
addr16
cmp
mov
movsl
xchg
cmpl
idivb
in
xor
adc
std
or
pop
bound
jns,pn
in
mov
cwtl
loop
sub
xchg
mov
aas
fimuls
and
inc
pop
movb
mov
mov
nop
cwtl
jae,pn
mov
js
aad
ljmp
js
push
sbb
pop
bound
loopne
mov
pop
sahf
mov
popa
lea
adc
cmpsl
xor
lcall
jo
or
add
sub
rcl
in
lahf
xchg
in
ret
adc
sub
movsl
sub
js
rcpps
xchg
pop
lock
addr16
push
push
dec
lahf
outsl
sub
gs
fildl
push
mov
pop
push
push
adc
lds
sbb
bound
in
mov
mov
pop
inc
sbb
test
cmp
push
push
sbb
sarb
es
stos
out
inc
ret
jo
ret
lret
xchg
mov
lds
xor
out
fwait
pop
sbb
insl
mov
mov
sarl
sub
pop
cmpl
scas
cwtl
lds
xor
fnstenv
int3
jle
mov
dec
push
adc
mov
inc
ds
mov
arpl
pop
lret
jl
and
dec
lock
cmp
pop
mov
clc
push
or
push
lea
sbb
fisubs
mov
push
and
nop
dec
loope
je
sbb
dec
push
dec
sub
or
lahf
neg
lods
dec
sbb
jle
icebp
lock
lret
jg
std
xor
lahf
inc
inc
jmp
inc
scas
xchg
dec
push
pop
mov
mov
or
mov
jno
rep
pop
add
mov
and
cld
int3
addr16
test
inc
sbb
or
adc
mov
xchg
sub
mov
lods
stos
pop
add
cmc
dec
mov
enter
lahf
inc
addr16
inc
pop
in
and
pop
add
jle
insl
neg
pop
jnp
inc
pop
xchg
test
or
pusha
xor
mov
imul
rol
movsl
in
xchg
sbb
mov
mov
push
in
push
shlb
fistps
jno
mov
sbb
push
jle
es
dec
lret
mov
push
aaa
xor
pusha
fmul
sbb
es
xor
sub
xchg
adc
insb
in
mov
push
push
ret
lods
cwtl
lock
test
sub
stc
repz
stos
ja
sbb
es
je
sbb
mov
xchg
inc
daa
and
push
push
or
jo
lods
cmpsl
mov
jae
inc
mov
lcall
cmp
fildl
shrb
or
or
mov
arpl
out
repnz
push
fwait
xor
sarl
add
add
or
push
xchg
loopne
leave
and
mov
push
add
shll
ja
imul
add
int3
fs
push
fimuls
jo
jp
pusha
popa
mov
imul
lahf
cmp
xchg
xchg
aaa
adc
mov
xor
mov
or
rcll
mov
mov
mov
je
cmp
jp
push
sub
in
or
fists
xor
out
int3
fsub
clc
stos
push
insl
in
pop
push
rol
iret
mov
add
je
sbb
repnz
popa
push
jl
ljmp
pop
or
push
call
repnz
mov
es
out
xor
ds
adc
mov
das
je
cmp
cs
fsubrp
popa
jmp
mov
pushf
into
cwtl
adc
lret
cltd
jno
adc
cmpsb
lret
add
lds
inc
mov
pop
imul
fstl
cmc
shrb
mov
movsb
dec
mov
sub
push
imul
sbb
inc
sub
ficoml
iret
popf
lcall
leave
pusha
sub
ja
add
in
dec
rcr
jl
addr16
add
cmp
hlt
not
sarb
push
das
in
inc
ffreep
adc
mov
sbb
mov
icebp
dec
gs
pop
mov
repz
pop
ljmp
push
dec
add
cmp
cli
sti
loope
cmc
push
imul
mov
call
xor
cmp
pushf
leave
je
outsb
jp
push
sbb
sbb
cmp
push
cwtl
add
or
in
out
sbb
outsl
loopne
dec
lcall
dec
cwtl
cmpsb
test
inc
jp
cmp
mov
test
sahf
xchg
in
ljmp
inc
fcmovnb
jb
mov
mov
aaa
push
lods
xor
pop
es
cmp
cmp
lods
subb
dec
pop
scas
loope
cltd
sbb
pop
sub
dec
and
sub
inc
ljmp
push
nop
fucomip
in
sbb
in
and
scas
imul
ds
jmp
repnz
data16
das
and
mov
js
add
fidivrs
jnp
jg
pushf
inc
inc
popa
dec
pop
add
push
clc
rolb
inc
rclb
clc
or
pusha
push
xor
sbb
out
fsubl
push
sarl
sarl
ljmp
in
push
inc
push
sub
push
cmp
getsec
sbb
sub
dec
xor
and
adc
shlb
test
imul
das
test
and
or
scas
pop
fnstenv
orb
out
adc
cltd
jns
js
cmc
inc
outsl
add
icebp
imul
popa
sbbb
in
int3
xchg
loop
fstl
fmull
pushf
add
rorb
xor
xor
fdiv
cmp
ja
mov
dec
aad
mov
jae
stc
xchg
jns
pop
les
dec
cmpsl
pop
push
shll
xchg
mov
je
in
scas
push
adc
or
sbb
jg
sti
scas
rcrl
loopne
cmpsb
mov
outsb
fwait
stos
jae
lock
or
in
mov
jg
into
shlb
scas
dec
std
pop
test
cwtl
es
ljmp
xchg
dec
cmp
cmpsl
push
sub
sub
rcrb
mov
test
fsubr
lods
in
mov
lods
in
adc
out
in
loop
jbe
mov
jecxz
inc
jmp
aaa
adc
cmp
and
out
push
lahf
pop
sub
mov
jno
inc
insl
or
push
not
int3
ds
add
mov
lcall
lock
add
lret
and
stc
addr16
ss
in
mov
push
das
leave
push
aam
int
xchg
mov
push
xchg
adc
scas
sbb
mov
sub
call
xchg
icebp
repnz
adc
push
fdivrl
cli
mov
hlt
cwtl
aam
lods
insl
inc
adcl
sub
jnp
xchg
pushf
or
fcompl
jp
or
mov
cmc
int
lods
js
test
pop
pop
push
inc
jp
imul
subb
fs
movsb
or
jnp
dec
jge
pop
sbb
lock
inc
cmp
leave
shrb
and
cs
sbb
in
out
add
cli
imul
push
xor
push
testl
sbb
or
shrb
inc
inc
repnz
sub
sarl
cmp
cli
loopne
divl
inc
cli
mov
cld
mov
in
mov
xor
xchg
ljmp
adc
sbb
and
xor
inc
add
add
jg
and
jmp
fldenv
inc
sub
pushf
dec
arpl
jo
jecxz
xor
test
inc
aam
mov
xor
into
test
cltd
mov
ror
cltd
insl
adc
push
dec
mov
les
loop
daa
repz
mov
xorl
mov
cmp
fdivrl
push
fwait
and
push
add
xchg
jmp
repz
xor
push
shrl
sub
shr
in
and
iret
jo
mov
mov
insb
dec
jg,pn
mov
and
sub
mov
and
and
mov
cld
in
test
lods
pop
das
jb
pop
ljmp
movb
addr16
mov
lods
sub
lahf
lods
dec
jmp
or
jns
push
insb
or
aam
push
pop
int3
mov
shr
aas
dec
mov
lea
mov
xchg
in
outsb
test
sbb
sti
and
pop
arpl
pop
sti
iret
std
sbbb
or
mov
test
lahf
adc
orl
inc
jge
or
mov
sub
cli
aaa
mov
mov
mov
insl
mov
mov
mov
mov
cli
lea
icebp
jb
pusha
jecxz
pusha
stos
nop
mov
es
xchg
mov
pop
in
jmp
jg
and
mov
in
jmp
sbb
outsl
out
shrl
outsb
test
adc
fistpll
sub
cmpl
cmp
mov
jno
or
ret
adc
push
xchg
sbb
cwtl
sub
inc
aaa
jmp
xchg
lds
out
stos
mov
mov
mov
jbe
sbb
push
das
cltd
cmp
add
outsl
arpl
jne
xchg
movsb
out
mov
push
shlb
repz
clc
mov
imul
mov
xlat
jne
mov
shr
movsl
gs
into
sbb
xchg
hlt
mov
sub
aad
add
insl
pop
es
push
xchg
out
or
stos
into
stc
pusha
in
mov
insb
sarb
aam
lret
sub
fdivrl
cmp
jmp
pusha
mov
sahf
pop
daa
les
jle
lods
std
push
cwtl
jae
pop
popf
push
ljmp
add
push
push
lahf
mov
sahf
mov
adc
push
pop
arpl
xor
dec
lods
and
pop
lcall
lods
lret
pop
jne
xorb
jb
push
dec
movsl
sbb
adc
pushf
test
pop
xchg
aaa
fwait
loopne
mov
xchg
mov
jg
dec
lcall
adc
fsub
jge
fcmovb
xchg
imul
add
push
jmp
in
push
rcll
add
dec
push
sub
push
jb
ljmp
insb
adc
js
fmull
lods
jns
daa
jnp
push
xor
push
pop
jecxz
leave
leave
jae
adc
ss
lret
mov
mov
stos
push
scas
movsb
repnz
fmull
sti
mov
push
out
jns
ret
es
jo
sbb
jmp
sahf
into
mov
lret
into
jns
mov
or
das
or
push
jbe
add
jo
lods
sbb
adc
push
sbb
cld
dec
pop
shll
orl
push
sub
jae
mov
aas
adc
std
add
adc
cwtl
dec
call
sbb
pop
jmp
pop
push
das
mov
mov
test
push
xor
cli
cmp
push
xchg
cmp
sub
adc
iret
out
jns
jb
push
ja
cmpsb
data16
into
inc
fisubl
or
pop
mov
mov
sbb
inc
fisttpll
sub
mov
push
pop
cltd
stc
xor
mov
sbb
shrb
sbb
in
dec
xchg
fwait
out
add
cltd
lcall
lods
inc
mov
jns
jle
sahf
push
and
arpl
shl
mov
leave
xor
mov
jb
sub
jle
jne
pop
or
stc
mov
dec
lcall
loopne
ds
add
mov
cwtl
sbb
out
and
xor
xchg
jae
repnz
fcmovnb
mov
jl
adc
hlt
push
xchg
add
xor
push
lret
bound
ss
cmpsl
or
leave
pop
mov
sub
movsb
sbb
sub
adcb
ja
outsl
andb
mov
out
rcl
test
mov
gs
js
jecxz
xchg
in
cmp
pusha
daa
fcoml
daa
gs
pop
pop
out
cmp
mov
adcb
rcrb
push
in
inc
nop
jbe
pop
adc
insl
mov
mov
jge
rclb
jnp
cmp
and
mov
inc
subb
lods
je
out
mov
pop
dec
mov
xor
xchg
ret
mov
pop
pop
daa
jecxz
aad
dec
mov
xchg
pushf
and
stos
test
icebp
ss
push
rorb
dec
add
bound
scas
adc
push
loope
aaa
or
cmpl
mov
les
mov
addl
pop
pop
jns
push
cwtl
mov
scas
ja
ja
mov
xchg
punpckhbw
ja
sbb
scas
subl
xchg
and
lds
sbb
outsb
and
in
lret
aas
push
inc
mov
sub
sub
mov
cmp
mov
jl,pn
into
jle
mov
fadds
in
enter
cld
push
daa
outsl
adc
sbb
push
push
int
adcb
xchg
cmp
pop
addl
pop
dec
cltd
outsb
fnsave
xor
outsl
or
loop
cli
push
or
pop
pop
mov
mov
sarl
dec
das
cmp
les
or
ret
or
lods
mov
or
jnp
ret
mov
ss
push
cmp
jns
cld
push
lcall
addl
rclb
cwtl
cmp
dec
adc
incl
xchg
and
push
cwtl
sub
mov
into
lock
loopne
out
jge
sbb
lahf
jns
pop
sti
cltd
in
mul
repz
jb
test
jecxz
mov
and
cmc
pushf
and
push
cmp
cwtl
xor
sub
aad
cmp
out
stc
imul
pop
call
jge
jbe
mov
xchg
bound
jbe
test
push
dec
in
mov
cs
in
in
dec
and
imul
pusha
test
dec
popf
lahf
incl
push
fcomp
in
movsl
dec
xlat
cvtps2pi
adcl
mov
sbb
add
adc
cwtl
add
mov
add
stc
addr16
fwait
sbb
and
lret
mov
jne
or
mov
aad
orb
adc
or
adc
aas
dec
mov
stos
add
xchg
and
dec
xorl
shll
cmp
inc
dec
lea
xchg
ljmp
icebp
stc
cmpsl
test
lcall
pop
mov
dec
push
cmc
xchg
pop
fidivrl
push
xor
in
out
pop
cld
rcl
jg
aam
daa
stc
jp
adc
cli
testb
mov
add
mov
fiadds
xlat
pop
loop
pop
jecxz
out
jecxz
mov
xchg
push
nop
dec
daa
aam
pop
outsl
das
pusha
pushf
sbb
fisttpll
cmp
shl
ja
jl
pop
loope
das
rcll
stos
sti
jbe
jmp
and
iret
xchg
mov
inc
test
xor
mov
lahf
adc
push
jno
inc
sub
and
bound
int
inc
jp
icebp
stos
sbb
fisttpll
cmpl
add
fdivrs
mov
xchg
imul
int3
or
or
cld
popa
call
lods
push
lods
gs
fs
xor
xor
xchg
iret
fidivs
in
enter
jp
mov
push
lret
or
enter
cmpsl
add
add
ljmp
and
mov
sti
push
fstps
mov
mov
push
ljmp
xlat
dec
je
js
js
and
add
cmova
xlat
push
cmp
add
stc
sbb
xchg
sub
pop
and
int3
cmp
fs
cmp
and
fs
lods
sbb
das
push
jb
dec
idivb
lret
fstpl
fnsave
push
aad
out
ljmp
and
add
mov
outsb
fcoml
adc
cltd
pop
ja
addb
test
and
jg
bound
fsubrl
popa
in
xor
push
inc
lret
femms
shrb
adc
ss
and
push
add
mov
imul
sub
pop
add
lods
fistl
xchg
pop
aad
out
iret
dec
inc
lahf
xor
add
fwait
mov
lods
repz
imul
pop
test
mov
icebp
inc
sbb
inc
shll
cmp
adc
pop
add
xor
inc
mov
fidivrs
stc
or
xchg
insl
xchg
ljmp
mov
dec
adc
sbb
inc
rcrl
pop
das
out
mov
mov
enter
cmp
cld
test
adc
sti
pusha
repz
jno
push
jbe
aad
fimull
mov
adc
mov
push
scas
mov
dec
inc
xchg
inc
sub
test
dec
fcompl
leave
aaa
sete
stos
xchg
fldcw
jns
mov
and
cmp
add
test
add
sub
inc
adc
push
stos
aas
or
int
insb
adc
cmp
inc
and
jb
mov
jo
mov
imul
jge
xchg
mov
js
xor
loopne
and
stos
mov
mov
fwait
mov
stos
out
ds
dec
inc
inc
sbb
push
shrb
mov
sbb
rep
loope
mov
add
enter
cld
rcl
sub
mov
mov
add
lahf
xchg
lahf
pop
sub
imul
incl
fiadds
lahf
cmp
inc
xor
jae
mov
cwtl
les
mov
pop
inc
aas
sub
daa
fcmovb
mov
cwtl
pop
imul
push
popa
or
mov
ja
scas
fstpt
add
outsl
fisttpll
jmp
loop
dec
mov
and
jne
mov
cmp
faddl
pop
and
insb
cmp
idivb
je
sbb
push
push
or
sbb
push
cmp
xor
je
sbb
std
pandn
popa
adc
fdiv
mov
xchg
aad
adc
xchg
jg
int
in
inc
add
adc
into
push
mov
push
inc
sbb
cli
mov
adc
xchg
push
call
or
cmpsb
push
pop
xor
pop
aas
fistpll
mov
or
and
movntq
rolb
push
repnz
inc
int
jns
pop
aaa
mov
fbstp
out
jg
mov
hlt
mov
outsb
ret
jns
mov
popa
pop
jnp
xor
mov
mov
push
out
cwtl
cld
rcr
imulb
dec
xor
loop
cs
jno
bound
loopew
test
sahf
cli
repnz
in
inc
mov
sbb
imul
addr16
ss
push
roll
xchg
or
or
jmp
jle
adc
aam
pop
sub
cli
dec
pop
mov
repnz
push
xchg
aam
bound
das
lahf
push
inc
imul
fwait
mov
loope
adc
inc
cmc
cmp
add
addr16
mov
and
pop
test
sbb
inc
jbe
fsubrl
ljmp
mov
mov
std
cmp
lea
cltd
mov
xor
fisubs
cld
cmpsl
cltd
mov
lods
out
stc
pop
jle
or
inc
sbb
dec
pop
sbb
sbb
sbb
in
scas
dec
repz
sub
inc
xchg
ljmp
fidivl
pop
and
movsb
loopne
and
lds
lods
jecxz
out
incb
push
testb
cld
shrl
out
in
imul
sbbb
out
stos
xchg
mov
ljmp
push
and
imul
mov
jmp
inc
negl
fisubrs
adc
xchg
jnp
sbb
push
pop
loop
sub
pop
sbb
lret
in
mov
push
push
loop
pop
out
cwtl
enter
mov
outsb
sbb
shr
ret
imul
imul
imul
jmp
sahf
xchg
gs
pushf
scas
adc
std
in
clc
cmp
mov
pop
cmc
jnp
adc
sub
mov
sbb
in
xor
mov
mov
inc
fadd
in
lret
rclb
mov
cmp
or
xor
cmpsb
inc
popa
dec
gs
dec
aad
mov
loopne
or
jns
orl
jo
nop
cs
nop
rclb
popa
call
imul
mul
test
xchg
push
das
or
leave
test
pop
dec
in
iret
sti
or
cld
mov
out
cmp
fistl
dec
cltd
data16
sub
imul
pop
mov
test
xchg
popa
test
mov
mov
mov
inc
movsl
sub
std
push
stos
pop
mov
push
pop
out
push
scas
mov
ljmp
faddl
pop
jp
cmc
or
dec
adc
out
orl
dec
movsl
push
fidivl
aas
jecxz
pop
stc
push
cmp
test
cmp
orb
mov
ss
lods
push
inc
cmp
rcl
inc
push
sbb
xchg
pop
pop
loop
test
loopne
scas
fnstenv
das
jge
insb
cmp
fs
hlt
dec
push
push
cmp
mov
sub
rcrb
pop
sbb
mov
outsl
mov
mov
dec
mov
pop
mov
rcr
outsb
xchg
dec
xorl
jae
or
sub
sti
enter
push
jnp
or
sarl
mov
hlt
fisttpll
stc
inc
dec
cli
outsb
xchg
stos
shlb
xor
sub
inc
ret
jb
lock
xorl
mov
mov
cmpl
cli
cmc
into
hlt
fidivrs
xchg
sti
icebp
dec
cmpl
pop
rorl
dec
js
or
lret
and
push
adc
stos
dec
xor
pop
sub
xchg
cs
lcall
scas
insl
mov
pop
ljmp
add
jnp
in
jnp
pop
jo
in
dec
ret
inc
shl
je
or
push
out
jp
jl
das
adc
xchg
mov
test
xor
sbbb
xchg
inc
subb
sub
in
stc
popf
out
out
and
pop
sbb
subb
pop
loope
sti
pop
cltd
cmc
in
push
icebp
pop
dec
les
insl
or
cli
push
mov
gs
lahf
adc
in
mov
push
xchg
cmc
mov
std
inc
je
or
mov
aam
push
dec
aaa
fists
mov
xor
add
inc
inc
loopne
iret
call
cmp
sub
xchg
mov
and
scas
xor
test
and
lea
shrl
aaa
push
outsb
xor
xor
insl
dec
adc
pop
dec
ss
ret
pusha
jb
pop
mov
ss
and
mov
lock
ss
and
xchg
lahf
sahf
fwait
xor
mov
xor
test
jl
aas
lret
xor
outsb
mov
je
add
xor
jl
popa
mov
xor
imul
ja
sahf
lds
pop
sub
jbe
cld
sub
cmp
inc
sti
ret
mov
ds
mov
sarl
add
add
dec
loope
dec
adc
in
dec
test
xchg
mov
xchg
pop
shr
pop
jns
sub
pop
test
cltd
add
jae
xchg
loop
testl
inc
mov
add
sbb
lds
sub
into
add
and
push
and
xlat
mov
lret
shll
sub
scas
loope
lods
stos
add
clc
ja
loop
stos
inc
inc
test
dec
nop
sub
push
leave
clc
mov
adc
mov
add
fs
jnp
mov
sbb
or
cmp
fnstenv
fsubrl
xchg
dec
pop
push
int
dec
pop
add
lds
aas
cmp
call
xchg
add
enter
insb
sub
loopne
imul
and
daa
std
insl
or
mov
outsl
sub
movsl
outsb
and
aad
fistpl
cmp
stc
and
mov
add
pop
hlt
rclb
and
add
mov
jnp
fdivrs
pop
and
cmpsl
dec
ljmp
ret
xlat
and
lret
push
jne
mov
mov
sub
inc
mov
or
dec
dec
icebp
into
nop
xchg
jg
inc
cmc
cltd
mov
fdivl
daa
pop
mov
lds
mov
pop
pop
add
call
sbb
add
lcall
dec
and
push
dec
xchg
insl
mov
sub
lea
insb
repnz
push
les
sub
xlat
ljmp
mov
stos
rolb
popa
movsb
or
or
imul
test
add
push
xor
aas
mov
push
jne
imul
jle
add
and
or
rcll
xchg
jg
int
jbe
ja
adc
cmp
cs
mov
sub
jp
push
scas
mov
imul
xchg
dec
and
sub
and
outsb
loop
iret
test
rcrl
ljmp
push
mov
leave
xor
ss
mov
jno
cmp
movl
mov
shl
cltd
cmpsl
cmp
stos
xchg
add
mov
test
mov
addb
gs
push
or
dec
fistl
ret
push
jb
dec
mov
add
pusha
mov
sti
pop
testl
sub
mov
insb
pushf
in
stos
pushf
aas
inc
in
int
sbb
xor
movsb
andb
ss
jb
test
sbb
hlt
mov
into
add
push
loope
dec
xchg
mov
cli
outsb
imul
mov
addr16
jge
push
or
jb
or
clc
jnp
loope
rclb
or
scas
lcall
push
cmp
jnp
sbb
js
cwtl
ljmp
dec
nop
jmp
mov
push
popf
sub
cmp
xchg
push
dec
test
test
movsb
sbb
repnz
push
mov
pop
mov
icebp
mov
jle
or
pop
orb
xchg
flds
in
loopne
mov
cmc
shl
jmp
mov
jnp
cli
sub
inc
nop
mov
mov
shrb
jb
dec
shlb
xchg
mov
and
insl
icebp
inc
dec
xchg
daa
outsl
xor
mov
add
dec
aas
inc
in
xor
sbb
mov
out
add
jl
mov
mov
add
mov
add
sub
add
insb
repz
xor
clc
push
stos
pop
cmp
push
sub
dec
adc
test
push
je
and
mov
mov
cmc
test
pop
in
add
dec
sti
outsb
mov
pop
and
or
repz
lods
add
pop
popf
loope
out
iret
push
adc
js
sbb
mov
jbe
and
mov
mov
shl
xchg
movsb
call
mov
divb
sub
insl
loope
movb
enter
jecxz
fildll
and
stos
jbe
ret
fcoms
mov
pop
mov
pusha
cmp
cmc
pop
mov
sbb
leave
mov
fs
inc
or
lcall
pop
sbb
lds
lret
cmp
inc
insl
pop
jg
outsl
jmp
push
mov
push
loope
mov
sbb
movsl
xor
mov
int
inc
jns
sub
cmp
inc
movb
popa
adc
pop
mov
xchg
ds
jl
push
int
lret
adc
adc
pop
pop
fsubrs
xor
add
repz
xchg
cltd
loop
std
imul
push
pop
loop
std
dec
sbb
test
addr16
ja
fidivl
sub
push
add
xchg
lock
dec
in
dec
shl
lds
sub
push
orl
and
mov
pusha
aaa
add
xchg
jmp
sbb
in
les
inc
xor
jne
jmp
aas
dec
roll
lret
insl
lret
adc
fstpl
outsb
add
jno
lret
mov
out
cltd
sbb
repz
and
test
jnp
mov
push
pop
repz
and
sbb
imul
mov
loopne
jle
sub
xor
ljmp
add
fstpt
shrb
xor
mov
bound
push
fwait
lret
push
nop
aas
jbe
xor
pop
add
push
inc
lea
dec
out
dec
adc
sbbb
dec
call
mov
mov
dec
sbb
cmp
out
inc
clc
shll
hlt
scas
mov
cmc
imulb
xchg
fadd
xchg
pop
lds
dec
icebp
int3
fwait
addr16
inc
inc
and
insl
lds
adc
nop
in
fwait
repz
jns
sti
jecxz
xchg
push
adc
movsb
xchg
scas
aas
test
xor
lods
shrl
adc
scas
mulb
call
popf
and
cwtl
mov
sub
std
push
leave
push
mov
cmc
jb
jecxz
mov
add
aad
stos
lcall
xlat
fstpt
stos
lock
repnz
lock
addr16
movsl
pop
dec
js
mov
sarl
ret
rcrb
inc
push
bnd
xor
addr16
or
add
mov
enter
fwait
enter
jb
pop
aaa
mov
xor
sti
icebp
xchg
lods
test
cltd
or
cwtl
mov
dec
jae
inc
imul
inc
and
pop
jg
ljmp
gs
mov
mov
fsubrs
jb
adc
xchg
pop
mov
inc
or
aam
pop
nop
jmp
and
sahf
test
nop
cmp
push
sbb
pop
hlt
jge
pop
movsl
sbb
inc
jmp
jecxz
mov
das
push
fwait
lods
dec
mov
js
arpl
sub
jl
arpl
clc
lcall
mov
rcrb
ret
mov
mov
js
xor
xor
mov
mov
xchg
and
pop
dec
fistpl
hlt
xchg
gs
jl
cltd
fwait
gs
inc
push
stos
push
out
mov
and
push
in
inc
xor
in
leave
scas
jle
cmp
sub
out
test
or
jae
cld
pushw
out
stos
sbb
cmp
repnz
xchg
rolb
into
and
jp
jl
xor
lahf
xor
or
stos
add
mov
daa
mov
push
adc
pop
bound
lea
jmp
in
scas
addb
scas
jno
xchg
addr16
bound
and
cmp
jle
add
mov
xlat
dec
popa
and
push
mov
mov
shlb
leave
aas
repz
mov
sbb
dec
xlat
in
sbb
add
aad
push
lret
push
fwait
out
mov
and
xlat
sbb
push
cwtl
mov
in
je
les
ret
mov
and
or
aad
movsl
cli
sub
andl
dec
adc
push
insb
xchg
jecxz
pop
mov
lret
in
add
and
int3
outsb
int
inc
push
xor
pop
xchg
cmp
insl
cld
push
pop
cmp
jb
mov
jl
ret
in
loopne
mov
push
mov
fnsetpm(287
xchg
lods
lret
add
mov
push
aaa
mov
roll
xchg
sub
sbb
jl
jmp
jne
push
add
pop
repnz
imul
sbb
outsl
jg
jnp
pop
push
push
pop
mov
incb
std
out
and
pop
aas
jl
outsl
inc
push
fsts
mov
sub
pop
push
sub
cmp
push
arpl
jmp
rcl
jns
pop
jnp
enter
inc
adc
imul
mov
rcll
push
sbb
scas
mov
xlat
dec
out
inc
out
imul
rorb
sub
sbb
es
xchg
or
xchg
loop
test
mov
adc
xlat
aaa
scas
dec
gs
insb
les
xor
pop
cs
xchg
icebp
xor
jbe
mov
mov
sar
mov
notl
pop
mov
jecxz
fdivrs
pop
cli
idivl
mov
push
cmp
fs
cli
jge
add
mov
inc
cmpsb
cmc
scas
mov
mov
adc
mull
in
mov
push
push
iret
pop
repnz
cs
cmpb
fimuls
xlat
pop
xchg
les
das
or
push
sbb
lds
cmp
xchg
xchg
arpl
pop
call
pop
adc
or
sarb
cmp
sub
mov
test
rcrb
sub
setnp
stos
cltd
fmul
roll
fsubl
aad
cmc
inc
cmp
pop
pop
xchg
mov
inc
or
mov
aad
pop
add
or
mov
in
jg
filds
inc
mov
inc
aad
adc
dec
cmc
mov
add
aaa
sub
mov
ja
outsl
mov
sbb
adc
add
mov
mov
lea
add
es
ljmp
xchg
daa
jnp
cltd
mov
sbb
sbb
pop
mov
icebp
ret
div
push
in
repz
mov
and
mov
push
out
call
mov
dec
test
and
xor
mov
push
mov
xor
outsb
pop
scas
and
xor
jo
pop
push
fwait
aad
ror
add
cmp
gs
add
xchg
sub
ss
sarb
add
and
or
fcoms
jl
xchg
xchg
in
fldl
leave
or
jo
xchg
je
xor
or
sbb
add
dec
push
add
mov
inc
and
addr16
sub
mov
dec
jmp
lret
mov
xchg
push
arpl
xchg
loope
lods
fcmovnb
inc
fisttpll
push
pop
into
in
imul
stc
xchg
pop
mov
and
test
pop
sub
push
push
cmp
stos
popa
ja
mov
jno
mov
pop
xchg
movsl
lcall
pop
shr
orb
mov
push
clc
pushf
dec
push
sub
orl
mov
arpl
dec
mov
nop
in
xchg
sbb
into
adc
daa
nop
dec
dec
sub
fidivl
mov
ljmp
pop
popa
add
mov
mov
loope
pop
push
loop
hlt
inc
rcll
adc
mov
andb
mov
cwtl
lcall
movb
mov
mov
sti
sbb
inc
add
fistpll
push
sti
std
jbe
jbe
test
push
inc
fmulp
icebp
or
sbb
xchg
xchg
mov
cmpsb
mov
adc
mov
jb
or
add
jno
jo
and
jnp
sub
lods
fisttps
fcomps
lcall
hlt
xlat
push
mov
nop
rcr
repz
xchg
jbe
xor
xchg
push
add
pushf
xchg
pop
push
adc
jns
mov
rcrl
dec
pop
mov
sub
adc
push
mov
push
cltd
add
jg
cmp
movsb
mov
cmp
ret
fcomps
out
mov
sbb
dec
rolb
into
dec
xchg
lret
push
push
jb
frndint
xor
and
pop
repz
push
ds
add
pop
icebp
cli
call
inc
sbb
rcl
fwait
jo
xchg
jno
dec
je
cwtl
out
shll
adc
rdmsr
or
jl
mov
mov
iret
adcl
mov
div
popa
sbbl
mov
jp
sub
pop
std
inc
mov
push
cli
fcmovnu
call
push
xchg
adc
cmpsl
xor
js
inc
in
out
out
pop
mov
rcll
adc
or
dec
dec
sbb
dec
sarl
sbb
movsb
out
push
es
xorb
idivl
add
adcb
xlat
mov
sbbl
roll
dec
jge
xorb
dec
insl
je
cmp
addr16
sbb
aas
jae
push
stc
stos
ja
push
in
pop
sbbb
out
adc
aas
sbb
cltd
enter
and
adcl
pop
xchg
arpl
push
fidivl
pop
stos
ja
je
lods
inc
movsl
mov
xchg
test
lret
push
cmp
aad
imul
idivl
inc
aad
std
fs
mov
and
mov
in
addr16
adc
mov
movsb
jo
push
loope
lahf
imul
cld
movsl
xchg
ret
leave
and
aad
lcall
sub
xchg
das
int
nop
out
in
clc
or
je
cmp
mov
fimuls
jge
movsb
cmpsb
dec
jle
xchg
sarb
inc
and
movsl
cmpsl
nop
inc
shlb
mov
test
fldl
shlb
mov
sbb
pop
dec
repnz
sub
push
repnz
imul
push
je
jae
pop
movsb
insl
out
dec
leave
push
aas
pop
loop
mov
xchg
jecxz
imul
and
cmc
adc
out
das
fs
ret
lret
jnp
lds
xor
push
cld
cmpsb
mov
add
xor
cmp
pop
dec
sub
and
in
loopne
gs
jbe
add
sub
movsb
mov
ljmp
mov
cmovae
pop
in
mov
repnz
mov
pop
cmp
lret
adc
pop
ret
and
cmp
dec
adc
add
push
insb
sub
test
iret
pop
fsts
out
cmp
jns
xor
pop
lahf
push
jns
xor
push
js
push
in
mov
and
jo
lret
inc
fs
inc
ljmp
xchg
aam
cmp
in
add
push
xor
dec
ss
xchg
mov
xchg
add
mov
cmp
andb
dec
in
gs
lcall
add
or
xchg
imul
fsubr
ss
outsb
xor
popf
cltd
mov
mov
mov
mov
test
cltd
mov
cmp
sarl
jle
xor
xor
test
push
sahf
pop
aaa
xor
adc
add
out
and
std
rclb
cmpsl
lods
and
ss
pop
movsl
xchg
jp
xchg
adc
mov
into
sahf
cmp
xlat
lret
inc
dec
das
pushf
stc
xchg
mov
gs
sti
inc
or
and
cwtl
lcall
mov
push
sbb
stc
pop
fmulp
pop
inc
and
mov
jge
shr
mov
and
outsb
imul
cmp
jb
dec
add
pop
sub
and
ds
pushf
loop
scas
and
jnp
jg
mov
les
jbe
xor
pop
xchg
and
xor
cmp
popf
pshufw
in
push
and
out
or
repz
nop
aam
xor
mov
lahf
inc
aad
sbb
sarl
sahf
hlt
sub
cmpsb
or
sti
and
xchg
dec
fbld
fsubrl
mov
mov
cmp
fcoms
cmc
push
push
mov
xor
mov
fwait
addr16
aam
jge
aaa
mov
jno
xor
rorl
sub
pop
fstpt
push
mov
ss
fbstp
scas
xchg
fiadds
mov
pushf
mov
int3
jnp
mov
mov
add
sub
lods
and
jmp
fucomp
sbbb
cmpb
aad
pusha
or
int3
cmp
cltd
sbb
test
negl
pop
popf
dec
fidivl
movsl
push
bound
lret
or
imul
aad
inc
orb
cmp
mov
jmp
jg
mov
adc
pusha
push
lret
cli
pop
xchg
fs
dec
push
rcrb
repnz
mov
pop
cmp
push
xchg
fmull
pop
push
push
adc
hlt
roll
jae
lods
sub
or
push
xchg
cmp
loopne
pop
mov
clflush
xor
jbe
add
cli
cmpl
add
loopne
rcrb
jecxz
aas
dec
mov
ror
mov
jle
cli
cli
push
pushf
sub
call
pop
pop
pop
shll
adc
int3
and
jge
sbb
insb
movsl
mov
pop
or
and
add
mov
arpl
pop
insl
test
repnz
sbb
push
pop
inc
xchg
xchg
inc
fwait
cmp
ss
and
mov
test
sbb
inc
out
sbb
lods
cmp
xor
add
aam
mov
push
inc
lret
inc
in
clc
mov
into
loope
mov
mov
arpl
push
sbb
sbb
fiadds
insl
cmpsb
test
rclb
sub
outsb
aad
popf
and
and
les
dec
jp
add
pop
xor
pop
test
adc
test
or
mov
shlb
mov
ret
push
mov
sbb
repnz
fidivs
add
insl
add
es
mov
pop
xchg
insl
sub
cmpsb
add
seta
mov
xchg
push
mov
push
gs
pop
cmp
lret
pop
sub
or
mov
cld
xchg
ret
cmc
xchg
jecxz
cmp
testb
inc
repz
hlt
mov
add
sbb
push
xor
inc
movsb
sub
jo
or
sub
jg
mov
xor
jle
push
movsl
repz
mov
jle
decb
popl
push
arpl
mov
mov
pop
sbbb
sub
ja
rorl
push
and
mov
mov
jb
flds
faddp
rcrb
cwtl
out
xor
inc
mov
mov
hlt
xor
dec
sbb
in
mov
mov
mov
repnz
rorb
jb
add
sbb
loope
popa
cmp
lahf
adc
aam
in
dec
or
push
mov
and
xor
mov
mov
fdiv
aam
mov
icebp
fcomp
dec
lcall
gs
xorb
fwait
nop
in
outsl
fwait
mov
lea
mov
push
mov
das
push
addr16
fs
xchg
push
test
mov
mov
out
mov
int
xchg
das
sbb
mov
mov
sbb
add
ret
sbb
mov
mov
flds
shrb
lcall
mov
lcall
loope
iret
dec
xchg
cs
sbb
xor
addr16
mov
jne
xchg
imul
cmpl
bound
inc
mov
fnstcw
aad
imul
loop
lret
pop
test
iret
inc
test
cmpsl
add
and
out
push
loop
adc
mov
dec
mov
cmp
pop
mov
sti
or
clc
mov
sarl
jb
fsubrs
mov
leave
fists
sub
pop
or
dec
addr16
add
out
pop
push
jae
bsr
dec
xor
add
jp
jns
mov
out
std
aaa
xchg
test
push
sub
mov
inc
jbe
enter
cld
rcrl
add
mov
sub
mov
cld
adc
sbb
test
cmp
or
dec
xchg
mov
mov
mov
stos
popf
test
insl
push
ds
mov
jnp
outsl
inc
xor
and
out
push
leave
ficoms
add
xchg
lea
pusha
cli
andb
rclb
nop
lret
cmp
lahf
js
add
es
out
push
sub
scas
pop
sub
sbb
xchg
icebp
sub
pop
mov
cmp
sub
ja
stos
mov
add
lret
dec
mov
rolb
push
dec
movups
fsubr
loopne
sbb
or
dec
in
pop
pop
mov
jo
aad
and
xor
fldcw
pop
xchg
aam
ss
pop
nop
fisttpl
fidivrs
dec
pop
mov
cmp
adc
cmc
movsl
scas
pop
sub
insb
mov
xchg
cmp
lds
lds
inc
sbb
bound
into
daa
ljmp
or
cmp
or
or
mov
sub
dec
movsb
scas
decb
in
lret
sub
cmp
mov
sub
movsl
outsl
pop
cmp
aas
es
sub
out
mov
xorb
sbb
xchg
js
repnz
jge
push
movsl
in
mov
sbb
pop
jmp
cmpsb
xor
fildl
roll
sub
mov
addr16
sub
sub
fcoms
lcall
jns
inc
sub
push
push
inc
sahf
fistpl
xlat
stc
mov
data16
movsl
sahf
hlt
adc
lret
push
cmp
add
push
adc
jo
fcomps
lahf
pop
icebp
xchg
xchg
fsts
jns
cmp
xor
sbb
mov
push
push
dec
pop
shlb
pop
adcl
xchg
out
cmpsb
repnz
push
cmp
cmp
jecxz
movsl
dec
inc
fsubrs
sub
mov
jg
cmp
outsl
jnp
mov
xchg
ljmp
jecxz
inc
cmp
add
jp
outsb
call
fists
inc
ret
push
insl
inc
or
shll
cld
mov
daa
ljmp
or
lds
fwait
mov
ret
inc
push
loope
ss
sub
dec
push
adc
pushf
fs
pushf
jo
cltd
ds
stos
add
int3
pop
mov
xchg
xchg
jle
stc
add
jmp
call
inc
xchg
mov
sub
or
cli
add
mov
sbb
das
nop
ljmp
and
cwtl
jg
fsubrp
ss
out
mov
adc
sub
xor
add
pop
mov
shll
inc
je
leave
testb
cmpsl
outsb
or
jne
sub
jnp
ret
xor
aam
pop
movsl
popa
xor
pop
add
cltd
inc
mov
cmpsl
push
jnp
pop
mov
bound
jp
add
aad
ds
and
dec
and
jb
in
and
inc
push
sub
xchg
pop
jmp
lret
add
mov
push
loop
or
cltd
movsl
sub
push
push
fisubrl
xor
push
or
mov
int
inc
outsb
in
xchg
inc
pop
cmpsl
sub
shlb
xor
mov
adc
fistps
or
icebp
sbb
mov
add
jae
push
ret
out
add
cmp
imull
dec
xchg
push
add
adc
mov
test
sbb
lock
inc
dec
fbstp
xor
ret
pop
cs
sub
pop
mov
fs
in
jb
fmull
sbb
dec
and
loop
pop
xchg
mov
hlt
and
dec
and
lret
stc
sbb
iret
dec
xchg
mov
cmp
in
loop
jns
xchg
lret
out
mov
mov
sbb
sbb
fsubs
adc
outsb
movsl
arpl
sbb
and
cmp
inc
inc
or
fsts
mov
cmp
xor
loope
sti
sarl
loop
jmp
je
xor
mov
int
outsb
pop
xor
cmp
shrb
nop
push
pop
flds
mov
filds
orl
stc
das
andl
jo
xchg
pop
test
xchg
loop
lock
lcall
ret
xor
mov
insb
fisubrs
pop
pop
add
sub
add
sub
sbb
xchg
fsubrp
mov
mov
lods
call
inc
dec
repz
or
adcb
dec
lea
xchg
out
adc
ds
and
or
test
aad
add
loopne
xor
mov
pop
push
loop
ja
dec
push
into
jb
std
mov
adcb
stos
orl
jnp
rcrl
test
movsl
jno
pop
xchg
xchg
inc
rcrl
xor
fsub
push
dec
mov
outsl
or
dec
lds
add
and
push
add
lret
jecxz
movsb
or
jle
mov
xchg
test
mov
xchg
push
sbb
pushl
mov
push
pusha
stc
xor
inc
pop
ja
mov
inc
inc
cmc
sarb
inc
sub
mov
mov
sbb
outsl
mov
hlt
inc
lret
push
xlat
sub
xchg
mov
jg
aam
inc
clc
jp
mov
test
xor
sbb
movsb
xchg
adc
repz
aam
jbe
arpl
and
pop
in
repz
pop
and
lret
mov
jmp
inc
push
inc
dec
fcoms
or
push
out
aad
mov
outsl
in
sub
rol
out
out
gs
dec
push
aam
aas
mov
je
icebp
dec
mov
nop
repz
sarl
sub
mov
movsl
and
dec
inc
mov
add
jmp
jl
mov
push
aam
inc
mov
lea
lock
insb
rcll
mov
and
ss
add
fdivl
mov
push
ret
enter
test
or
jno
xchg
out
mov
sbb
ljmp
lss
popa
out
adc
lds
xor
addr16
mov
xchg
pop
jmp
mov
push
stc
frstor
cmp
int
jno
xchg
xlat
ret
mov
data16
add
rcl
mov
jbe
sbb
push
jge
jae
xchg
xlat
inc
cmp
stos
xlat
out
push
incl
js
pop
in
mov
mov
mov
mov
pop
adc
add
cmp
xor
call
lret
test
outsl
add
lret
lcall
jne
aaa
cmp
add
loopew,pn
repz
popf
in
lret
xchg
xor
insl
dec
pop
daa
inc
inc
fnstenv
test
mov
mov
dec
inc
out
insl
xchg
adc
mov
scas
mov
add
pop
inc
iret
jp
repnz
shrb
and
mov
push
cmp
mov
adcl
sub
je
std
daa
push
int3
jmp
ds
jne
rorb
cmp
push
sarb
push
push
sub
shll
or
mov
nop
ja
ffreep
push
fstps
subb
fcmovnu
pop
daa
jmp
xchg
push
negb
aas
cmp
enter
mov
inc
mov
roll
pop
rcrl
adc
andl
ja
test
pop
or
sub
mov
mov
push
fdivs
push
cmc
sbb
add
hlt
push
pushf
in
cmpsb
sbb
roll
adc
or
push
loop
fistps
incb
mov
sbb
push
jo
xchg
mov
jl
mov
mov
jae
jge
cwtl
mov
cmpsl
xchg
dec
xchg
flds
sbb
aam
ret
sbb
fdivrs
repz
and
dec
dec
push
mov
pop
aaa
ret
push
dec
mov
mov
inc
fsubp
in
outsb
sbb
ja
cltd
push
mov
pop
push
cmc
popf
aas
sbb
dec
enter
jb
outsb
xlat
call
xchg
in
add
or
hlt
or
shrl
mov
rcll
xchg
mov
pop
mov
in
ret
jl
in
movsl
sub
in
or
add
mov
xchg
leave
dec
stos
inc
or
pushf
in
inc
mov
pop
mov
iret
push
imul
sbb
enter
mov
ja
sub
sahf
xor
mov
sbb
cwtl
pushf
jnp
les
jmp
or
jns
subl
add
mov
xchg
and
add
pop
popa
fisttpll
xchg
xchg
xor
stos
push
insl
ret
or
adc
js
push
mov
shll
ljmp
repz
add
int3
clc
push
mov
test
enter
testb
or
inc
out
cmp
clc
cwtl
imul
add
adc
pop
mov
mov
sbbb
pop
dec
mov
pop
cvtdq2ps
jge
test
lds
and
lds
hlt
fistps
jmp
test
pop
mov
or
pop
xchg
cmp
push
pop
push
cs
cmpb
sbb
sbb
shrl
imul
gs
dec
ret
int3
mov
fisubl
test
jno
adc
push
xor
mov
cmp
inc
pop
push
cmc
sub
fldenv
add
inc
dec
sub
leave
and
test
loopne
cli
or
enter
and
popa
js
jo
sarl
adcb
clc
lods
idivl
sbb
ds
and
inc
adc
shrl
icebp
test
pop
sti
test
dec
je
nop
xchg
xchg
test
mov
test
mov
or
ja
shrl
aad
mov
sub
nop
mov
pop
jo
iret
and
divl
lcall
mov
xor
int3
out
pop
je
into
sar
mov
loop
push
push
push
and
addl
cmp
loop
sub
jp
add
cmp
inc
lock
lods
sar
xchg
imul
mov
in
push
dec
pop
jle
mov
xor
mov
adc
pop
mov
jmp
mov
jg
ret
and
push
push
xor
sahf
jmp
xlat
mov
loop
jmp
in
and
sub
mov
pop
outsl
mov
js
sar
mov
jle
fcoms
push
and
jecxz
out
inc
jl
pop
dec
or
mov
mov
out
xchg
adc
js
lahf
les
cmp
addr16
sti
sub
mov
sub
xchg
mov
les
daa
dec
mov
add
sub
adc
in
aam
dec
adc
aaa
add
inc
dec
aas
and
pop
pop
pop
in
clc
jne
xchg
cmpsl
dec
xchg
mov
or
loop
sar
enter
pop
sti
xchg
xor
shll
mov
dec
test
adc
jo
rol
pop
cmpsb
test
je
mov
push
mov
pop
stos
or
stc
addr16
loop
or
shl
cmp
add
sarb
sbb
xlat
out
xorb
or
xor
in
jmp
cmc
inc
in
mov
or
sti
mov
xchg
xchg
cmp
lret
sub
add
btl
sar
xlat
cmc
mov
loop
test
mov
aas
pop
shrb
inc
sub
jo
and
cmp
ret
sub
mov
sti
cmp
and
ret
and
add
mov
jecxz
stc
mov
imul
popf
add
add
arpl
or
dec
shrd
mov
imull
sbb
inc
jne
lcall
arpl
xchg
mov
pop
clc
mov
lods
pushf
mov
jp
inc
adc
push
outsl
stos
inc
shlb
pop
push
sbbl
stos
popa
call
dec
lret
mov
mov
inc
arpl
test
cwtl
pop
jbe
xlat
ret
insb
push
jns
pop
jge
pop
pop
mov
sub
movsb
push
jecxz
cmp
dec
cld
jecxz
cmp
pop
inc
sub
leave
mov
int
inc
jge
insb
and
mov
aas
out
insl
lahf
push
and
ds
inc
in
mov
outsb
sarl
fnstsw
fisttps
jo
js
xor
adc
add
addl
xor
mov
shl
mov
mov
inc
in
js
cmp
or
mov
and
mov
pop
outsb
dec
ret
lock
mov
cltd
inc
dec
dec
mov
jle
rcr
or
dec
arpl
fcomps
and
dec
mov
aaa
shll
int3
or
add
int3
leave
dec
xor
jle
int3
notl
mov
sbb
fildll
push
cmc
push
in
out
dec
jecxz
sti
dec
movsl
push
inc
and
jle
movlps
loopne
sti
sub
cmpsb
popa
jne
loopne
or
adc
fisttpll
mov
adc
push
xor
or
sarl
or
push
ret
add
xor
sbb
popa
pushf
push
xlat
fcom
add
fistps
movsl
xor
sahf
adc
mov
jnp
pop
insl
rorb
testb
and
add
sahf
movsl
add
or
xchg
ljmp
add
mov
in
cmp
mov
divl
push
fs
mov
in
mov
sbb
je
adc
xchg
lahf
dec
inc
call
enter
push
les
scas
jne
mov
fnstenv
ja
test
jb
jb
push
ds
out
sbb
addb
out
or
jecxz
lods
leave
sub
pop
push
lock
xchg
dec
push
lods
mov
sbb
mov
xchg
mov
cs
sub
jno
es
out
inc
js
fnstsw
xchg
jno
lcall
adc
scas
lret
push
inc
push
aas
mov
jno
fcoml
mov
stc
jle
out
add
fldl
jae
loopne
ficompl
mov
ss
clc
xrelease
mov
inc
test
mov
je
outsb
mov
adc
xchg
adc
mov
rorb
test
xchg
and
cmp
inc
sub
call
xor
dec
mov
pushf
xor
inc
jno
adc
mov
or
sbb
cli
ljmp
cmp
stos
sbb
les
insl
repnz
lret
mov
jmp
jnp
sbb
lods
ss
data16
ret
or
jae
add
arpl
cli
xchg
ja
in
inc
cmp
xchg
lcall
mov
push
es
fstl
xlat
mov
dec
sub
sbb
jne
fsubp
fisubl
xchg
jl
ss
jl
fsts
xor
mov
xor
stc
test
sub
rorb
xor
sub
pop
mov
mov
mov
jp
outsl
mov
sahf
fnsave
jl
sub
cmp
cmc
xchg
adc
or
fadd
sbb
jmp
scas
or
cmpsl
cli
inc
adc
lods
push
in
iret
stos
pop
in
mov
cmp
sub
xor
inc
dec
jle
jae
pushf
mov
cmp
sbb
push
inc
jmp
add
lds
mov
daa
cmpsl
dec
clc
and
jns
adc
das
mov
aad
sbb
imul
out
inc
pop
push
and
out
lods
sbb
addr16
daa
inc
ljmp
decl
push
cmp
insb
jg
loop
sub
push
add
xchg
lods
push
push
xchg
imul
imul
jmp
hlt
pusha
jb
pop
mov
sahf
test
jp
data16
movsb
repz
xchg
jmp
addr16
pop
add
mov
lds
mov
mov
xor
mov
je
and
jecxz
dec
lahf
push
insl
add
mov
push
loope
add
sub
lcall
jl
ret
fs
pop
jl
and
popa
mov
cmp
mov
loope
dec
jp
fsubs
inc
sbb
pop
arpl
loopne
cmp
pop
out
xor
adc
xor
add
pop
and
pop
repnz
and
test
data16
arpl
jno
lahf
mov
jne
push
iret
pop
hlt
mov
les
push
shll
adc
pop
adc
scas
test
sub
mov
cmp
jno
fdivrs
adc
ja
hlt
les
lcall
push
cmp
mov
mov
inc
test
sbb
sub
dec
mov
adcb
cmp
nop
enter
mov
sub
pop
mov
lret
lahf
adc
outsl
sbb
push
push
rcrl
outsl
cmp
mov
and
jb
mov
pop
jns
ljmp
inc
rclb
push
lock
push
jge
mov
lahf
mov
adc
inc
loop
mov
loop
xchg
aad
mov
mov
pusha
jge
push
and
fsubr
sbb
pop
test
clc
out
leave
inc
xor
shrl
es
pop
test
pop
and
pop
loopne
shlb
lahf
jmp
out
pushf
in
int3
xchg
jg
ja
and
or
mov
addr16
mov
jecxz
test
pop
sahf
mov
pop
pusha
loope
lods
icebp
jbe
xor
push
xchg
inc
or
std
aaa
pop
mov
out
xchg
fsubrp
push
imul
pop
jb
in
mov
iret
fnstenv
sbb
push
nop
and
repnz
jnp
cmpsl
adc
je
inc
mov
rorb
loope
pusha
test
test
pop
jle
xchg
inc
outsb
out
inc
insl
hlt
xor
inc
out
adc
shrl
xchg
arpl
fdivr
xchg
push
and
xor
xchg
sub
dec
sub
ss
xchg
out
sbb
mov
mov
ucomiss
mov
rclb
rol
stos
ljmp
scas
jmp
mov
dec
pusha
lods
in
les
add
push
cmp
push
outsb
add
pusha
test
sub
ss
sub
iret
cmp
stos
subl
adc
xchg
inc
sbbl
bound
inc
rcrb
outsb
jno
pop
push
ret
lds
inc
xchg
scas
scas
fsub
push
jno
jnp
jne
adc
nop
pop
fwait
cmp
pop
ret
outsl
lcall
push
mov
in
ss
inc
das
leave
sahf
stc
pop
pop
bound
fwait
out
jns
mov
mov
and
scas
xor
push
mov
gs
mov
int
cmp
cmc
aaa
pop
dec
adc
inc
mov
jmp
mov
fsubs
push
pop
std
daa
aaa
ficoml
jmp
ljmp
mov
hlt
sbb
orl
mov
mov
loopne
mov
cwtl
jle
nop
fcoml
cmp
sbb
test
adc
test
jp
sub
add
test
cs
stos
clc
inc
inc
aad
and
mov
inc
xor
lcall
in
jecxz
jnp
mov
insb
daa
and
dec
ret
cmp
pop
cmp
dec
xchg
cwtl
sbb
inc
pop
xchg
add
aas
aas
push
and
jo
cmp
daa
cli
lea
mov
pop
jbe
cs
add
xor
aam
adc
jns
sub
add
test
hlt
sti
add
stos
decb
pop
pop
xlat
push
xor
pop
jnp
dec
shll
lcall
sbb
inc
in
sbbl
ret
push
mov
push
jmp
mov
pop
jecxz
and
je
pushf
cmp
lcall
jg
jg
fistpll
mov
pop
dec
ljmp
push
ficoms
cli
arpl
jle
leave
pop
lock
out
inc
es
inc
ss
and
and
xchg
clc
sbb
in
cmovo
adc
rcrl
inc
pop
lock
das
lock
push
outsb
mov
cmpsb
sub
jnp
xchg
xchg
pop
iret
sbb
sub
jne
in
out
and
sbb
in
ret
cmp
aam
and
notl
mov
jns
dec
in
and
nop
inc
aam
pop
mov
sub
rolb
xor
and
or
loopne
cmpsl
add
cltd
sub
mov
dec
int3
mov
in
movsb
pop
sbb
dec
adc
in
sbb
subb
gs
dec
sbb
ljmp
mov
ljmp
scas
fs
fsts
jo
jnp
xchg
pop
cld
insl
push
sbb
in
setl
inc
jg
lds
loopne
fs
sbbl
aam
scas
cs
addr16
adc
sbb
dec
push
and
fiaddl
lods
fiaddl
lret
adc
adc
out
adc
inc
push
mov
addr16
push
jle
push
jae
xor
and
fsin
mov
or
push
loope
inc
out
mov
adc
cmp
into
cmpsl
jbe
rcrb
cmp
loop
das
dec
notb
outsl
ror
inc
cmc
idiv
int3
push
stos
nop
mov
or
jecxz
mov
subb
das
test
sub
les
imull
movsl
or
daa
fisubl
jns
into
dec
lret
daa
mov
jns
jecxz
sub
or
jo,pn
and
ja
sub
cmp
xorb
pop
in
adc
dec
cmp
jb
movsl
add
mov
cmp
shlb
arpl
xchg
jmp
add
ljmp
and
dec
scas
sub
mov
sahf
fiadds
mov
and
cmp
or
fistps
test
mov
in
sbbb
mov
sahf
push
mov
xlat
fmul
or
fildl
xchg
mov
cmp
and
xchg
lret
aas
sbb
push
xor
jmp
insl
cmp
push
jmp
lock
xchg
mov
jns
cld
mov
lock
cmc
or
call
inc
push
ret
xchg
decl
jnp
aam
shlb
pushf
mov
xor
test
adc
pop
push
stos
mov
or
push
xor
ret
in
mov
dec
or
mov
adc
cmp
sub
jno
testb
test
lcall
aas
mov
aam
je
sbb
and
inc
push
mov
mov
insb
pop
fwait
popa
push
pop
mull
aad
pop
pop
pop
inc
in
repz
dec
adc
sbb
jmp
xchg
sti
clc
mov
gs
imul
jl
cli
lcall
pusha
data16
movsl
clc
cmp
and
push
pusha
in
lods
add
dec
jb
orl
mov
sbb
jo
push
lret
lret
add
mov
sahf
pop
mov
aad
popl
leave
clc
or
imul
je
int3
cmc
arpl
loope
pop
stos
xchg
inc
in
jecxz
imul
inc
scas
fiaddl
xor
or
aad
aam
or
pop
pop
movsl
push
in
clc
pop
loope
jmp
lret
adc
mov
pop
lret
call
je
jl
aam
shlb
mov
pop
cmp
rcrb
test
adc
jecxz
sub
sbb
ds
add
mov
xchg
pop
pop
fldcw
mov
xor
mov
sub
addr16
xchg
adc
xchg
pop
rorb
add
adc
gs
sbb
das
lds
gs
push
or
dec
push
out
inc
loopne
out
add
jno
movsb
xchg
xchg
sub
imul
into
out
insb
sti
xchg
add
pop
call
fidivl
xchg
jbe
insb
push
pop
addl
add
push
add
mov
fbstp
xchg
ret
movsl
outsl
xchg
jno
xchg
push
loopne,pt
leave
aam
imul
push
fucomip
push
andl
clc
jne
sbb
pop
rolb
mov
mov
cmc
call
sarl
xor
inc
push
movsl
xor
mov
les
jle
mov
clc
negb
sbb
pop
push
shrb
jle
sbb
iret
pop
flds
std
cmpsl
repnz
inc
xchg
psubd
pop
ds
test
xchg
pop
add
stc
mov
loope
shrl
xor
xlat
imul
iret
pop
sub
lds
xor
hlt
push
xor
pop
sahf
into
xor
pop
xchg
ja
dec
push
stos
dec
dec
or
insb
xor
push
jmp
add
and
adc
popa
mov
into
stc
sub
test
adc
cmp
adc
mov
inc
sub
push
imul
sub
mov
push
repnz
bound
sbb
ffreep
imul
and
sub
dec
stos
jne
xlat
in
ja
push
sarl
es
xchg
sub
jmp
mov
mov
cmp
sub
in
or
push
sbb
jns
sub
ror
bound
adc
push
jmp
jp
push
cmp
add
xchg
shlb
sub
mov
inc
dec
arpl
jl
add
xchg
mov
xorb
mov
or
fs
mov
outsb
or
aaa
test
pop
scas
loope
push
fcoms
cmpsb
add
inc
mov
or
push
add
andb
aad
jge
lcall
inc
scas
mov
cmp
js
cmp
loope
dec
loop
cmp
lahf
lret
frstor
sbb
and
pusha
cmp
pop
jl
mov
xchg
cmp
lret
addr16
subl
inc
fcoml
imul
inc
cmp
pop
xchg
out
pop
pushf
and
mov
xchg
rcrl
mov
push
movb
push
arpl
cmpsl
pop
insb
add
push
repnz
inc
sbb
es
push
inc
dec
xchg
arpl
cmpsl
cmp
jb,pn
sub
inc
inc
pop
rolb
stos
xor
xchg
ret
stc
lds
xor
jge
xchg
test
mov
hlt
movb
cmp
jo
leave
dec
sarl
movsl
jae
shlb
inc
sbb
adc
in
mov
repnz
fs
inc
jae
popa
fnsave
pop
ret
gs
incb
mov
lret
ret
cld
lret
ss
iret
ljmp
fwait
rclb
cld
aad
jnp
shlb
sti
ret
xchg
jg
popf
dec
sbb
pop
jmp
or
adc
cmp
ss
jle
jo
fdivrs
mov
popa
mov
push
lret
add
lock
ja
xchg
dec
inc
xor
jne
adc
pop
xchg
pop
and
sbb
adc
jmp
pop
sub
pop
test
sti
xchg
in
sti
repnz
mov
mov
add
cmp
outsl
scas
loopne
or
mov
imul
fsubs
arpl
cmp
scas
test
shrb
hlt
sub
fnsave
fstps
sti
mov
push
daa
repnz
lea
inc
sub
addb
lods
loope
aad
in
push
sahf
out
adc
fidivs
shlb
aad
inc
arpl
cli
nop
imulb
sub
push
incl
xchg
fistl
insb
mov
jle
xchg
or
filds
jnp
fimull
push
hlt
aaa
shrb
shlb
inc
icebp
outsl
push
cmp
xor
rcr
jp
mov
adc
adc
repnz
fwait
push
mov
and
xor
pop
xchg
xchg
mov
neg
popa
inc
pop
jbe
lock
into
fiaddl
mov
pushf
pushl
push
ret
dec
stos
int
push
js
mov
iret
inc
aas
sub
mov
and
mov
repnz
stos
jg
pop
jnp
xchg
dec
aas
push
cmp
sbb
ds
dec
out
add
mov
xor
push
mov
mov
adc
pop
jb
cwtl
rclb
or
in
sbb
arpl
or
inc
xor
mov
dec
mov
or
pop
aas
mov
mov
lods
insb
mov
mov
adc
pop
mov
pop
pop
adc
enter
mov
xor
adc
jae
mov
xchg
or
imul
lock
or
dec
pop
fbstp
mov
mov
fnop
jo
add
pop
xchg
rorb
lret
cs
mov
mov
fs
and
aad
pop
push
mov
stc
jmp
je
jge
in
push
inc
loopne
add
lods
out
inc
add
sub
mov
fwait
repnz
adc
push
fwait
js
rolb
jle
cmpsb
loope
sub
sahf
push
or
cltd
adc
push
mov
dec
fidivs
ljmp
add
test
dec
inc
pop
rcrb
push
rclb
push
in
cmp
mov
jle
pop
int3
out
dec
pop
push
out
shrl
idivl
cmp
cld
stc
in
push
xlat
mov
sahf
xor
ljmp
pop
mov
repnz
inc
cmpsb
inc
dec
rclb
loopne
ret
xor
fidivl
jnp
lods
dec
push
js
add
mov
je
push
add
mov
test
shrl
adc
test
xchg
into
repz
adc
bound
pop
orl
xchg
aad
push
push
add
nop
mov
push
sub
jge
jle
xchg
jb
fimull
push
ds
imul
mov
je
movsb
sub
in
or
pop
ret
imull
pop
cmc
addl
cmp
in
xchg
insb
and
subl
aad
lahf
test
xor
cmp
and
sub
gs
dec
jne
fisubs
je
jmp
mov
popa
mov
stos
fcomps
cmpsl
rcll
subb
test
pop
ds
aad
cmp
pop
mov
lock
movsb
pushf
pop
test
jno
ds
push
movsl
outsl
sti
mov
push
fmull
daa
jp
test
ds
pushf
repz
mov
jp
sbbl
sbb
jecxz
lock
sahf
lahf
push
adc
add
cmp
xchg
add
adc
inc
scas
push
pusha
jecxz
call
nop
lret
mov
inc
test
insb
sub
clc
xchg
mov
and
cmp
movsb
sub
jne
adc
jle
or
add
jne
sbb
movsl
shlb
mov
jp
sbb
sub
and
add
aam
xor
je
lret
lods
bound
adc
icebp
adc
push
dec
mov
stos
ljmp
add
pop
cmp
dec
outsl
add
in
out
add
or
popa
je
ss
adc
sahf
mov
pop
push
mov
iret
and
cmp
cmp
mov
or
sbb
loopne
dec
or
in
das
push
push
ja
pop
gs
and
and
insb
jl
test
data16
lret
mov
dec
call
mov
mov
pop
out
jge
jmp
xorb
imul
xchg
popa
cmp
in
mov
mov
add
mov
dec
or
ret
push
loopne
pop
ret
js
fidivl
ja
fcomp
cmc
pop
dec
call
popa
jge
into
out
xchg
sbb
pop
push
or
rolb
cltd
jp
xchg
les
ds
popf
and
ret
dec
popa
scas
ds
out
jl
ja
stos
jle
xchg
jp
ds
rolb
fidivs
lcall
lods
adc
imul
roll
scas
fstpt
xchg
jecxz
subl
add
dec
push
push
loopne
push
shll
xor
pop
shll
lcall
flds
arpl
pop
or
jno
or
cmpl
fdiv
xchg
lea
mov
jbe
xorl
pusha
mov
cmp
mov
xor
lods
lret
shl
sub
sarl
xchg
sbb
daa
in
fisttpl
lea
push
mov
std
push
xchg
iret
cmpsl
lret
mov
dec
hlt
push
dec
std
sbb
shrl
out
enter
test
inc
sti
mov
scas
jl
stos
push
mov
sbb
stos
mov
pop
mov
negb
movsb
jnp
push
push
jnp
imul
inc
aam
inc
in
jnp
pop
inc
loopne
stos
mov
jge
test
movsl
pop
jle
icebp
jae
inc
mov
dec
neg
loop
popf
mov
mov
fs
sbbb
mov
inc
leave
jo
pop
mov
ficomps
pop
mov
mov
sbb
mov
jp
jae
or
or
or
push
cmc
stos
pop
dec
inc
mov
lcall
cltd
and
adc
pop
push
xchg
push
pop
pop
jae
dec
ret
dec
mov
xchg
dec
fwait
push
and
mov
sub
sub
data16
mov
iret
ret
clc
dec
jg
fisttpll
enter
and
mov
dec
mov
repnz
push
aaa
orl
outsl
fstpt
jp
xchg
adc
cmp
out
daa
sbbb
stos
or
gs
add
pop
in
xchg
shlb
insl
lahf
adcb
jbe
mov
jg
mov
scas
mov
sbb
sar
and
sub
xchg
dec
cmp
insb
bound
fdivs
fistpll
int3
xor
jg
xor
mov
stos
insl
ss
xor
pop
cmp
jbe
jp
mov
inc
adc
scas
cmp
inc
mov
in
cmpsb
hlt
pop
xor
push
adc
jmp
mov
scas
pop
or
dec
fildll
js
roll
shll
seto
sub
sub
mov
shl
mov
lahf
mov
push
subb
divl
xor
xor
daa
inc
push
mov
cli
ror
pop
mov
repz
into
mov
addr16
inc
movsl
je
scas
fimull
mov
mov
or
jb
test
fnstsw
pop
sar
ret
mov
int3
mov
sbbb
xor
inc
loop
bound
sub
mov
jg
xchg
mov
dec
fisttpl
fwait
mov
lret
inc
cmp
test
mov
push
inc
and
movsl
mov
inc
xor
inc
out
das
ds
push
aam
js
pushf
ds
mov
jbe
mov
call
or
jae
xor
lods
mov
dec
lds
popf
imul
mov
jno
xchg
stos
mov
loope
xor
cmp
and
shl
inc
fidivs
xchg
push
jno
jns
pop
xor
gs
loopne
xor
add
jno
push
out
jne
fldcw
lds
sahf
icebp
mov
outsb
negb
mov
mov
stc
mov
arpl
and
mov
out
jl
mov
xchg
mov
fwait
ret
sbb
mov
dec
dec
lea
das
nop
fucomi
add
inc
lods
sub
push
ljmp
mov
cltd
leave
xlat
clc
mov
test
mov
cld
aas
out
push
sbb
out
movsl
fwait
cmpsl
fs
cs
shll
lret
jecxz
jecxz
iret
add
popl
mov
push
lea
fs
call
push
aam
cltd
xorb
mov
mov
imul
ret
stc
inc
test
fxch
call
sub
pusha
repz
pop
mov
push
inc
add
out
scas
xor
add
mov
movsl
int
mov
add
ss
loop
ljmp
ficomps
ss
cmp
iret
adcb
inc
gs
jno
lret
clc
movsl
dec
lods
and
out
daa
dec
data16
stos
inc
in
in
add
inc
pop
mov
div
sub
mov
dec
xchg
inc
scas
pop
clc
icebp
push
xchg
negl
and
std
jns
pop
mov
and
mov
xor
sub
push
psllw
pop
int
lds
out
pop
shl
add
test
lret
fidivl
les
xchg
addr16
mov
or
shlb
bound
scas
sbb
sub
in
pop
inc
mov
inc
push
sub
scas
fisttpll
pop
sub
fwait
lret
inc
shll
cmp
ds
mov
push
insb
pop
aad
movsb
jle
dec
cld
orl
pop
jp
dec
rol
push
push
bound
clc
jmp
test
in
xchg
iret
mov
cmpsb
or
sub
fsub
inc
rcll
inc
pop
cmp
push
out
jge
cmovae
jo
loop
insl
fmull
push
in
enter
loop
xlat
add
loopne
mov
jle
movsl
aaa
push
movsl
js
notb
lea
shl
dec
lahf
jecxz
add
loope
dec
sub
repnz
mov
mov
xor
push
pop
frstor
xor
jo
push
fisubrs
out
xchg
out
loopne
out
out
fcoms
dec
inc
adc
xchg
movsl
dec
je
add
push
out
inc
or
push
les
xor
dec
and
mov
loopne
pop
add
mov
sbb
out
fdiv
pop
and
add
insl
hlt
jno
inc
cltd
cmpsl
popa
and
mov
aaa
or
iret
aam
and
jecxz
std
das
push
add
pop
rclb
xchg
icebp
adc
pop
es
jno
leave
and
xor
mov
dec
adcl
push
xor
and
dec
test
test
or
mov
pop
outsb
push
dec
es
idivl
lahf
jge
inc
scas
bound
jb
inc
fld
sbb
pusha
sub
pop
cs
jb
xor
outsl
pop
in
in
rcrl
xchg
bswap
in
stos
pop
enter
call
jbe
bound
push
out
jg
negb
push
mov
in
ss
xor
mov
pop
add
adc
jno
ret
shlb
shlb
ljmp
inc
xor
mul
and
stos
mov
rcrl
subb
ss
loope
subb
mov
mov
mov
bound
mov
xchg
dec
test
lds
push
jne
aas
mov
push
dec
cmpsb
hlt
sbb
and
xor
call
mov
or
and
fcomps
rorl
scas
aam
inc
aam
stos
sub
jg
stc
dec
xchg
mov
es
adc
fimuls
mov
stos
cmp
mov
std
cmp
xor
out
mov
cmpsl
push
mov
cmp
shll
or
imulb
loop
test
lock
aam
pop
stos
movb
loopne
inc
iret
pop
ds
aas
pop
test
lret
repz
jmp
or
cli
daa
in
push
hlt
push
out
xor
push
into
mov
add
inc
xor
inc
and
clc
push
mov
xchg
mov
inc
push
mov
mov
test
aaa
add
popl
xchg
arpl
lret
push
and
adc
js
and
inc
dec
imul
and
sub
sahf
push
lret
mov
jne
jl
add
xor
inc
xor
mov
push
add
or
or
cmc
enter
adc
inc
cmp
js
ret
push
cmp
roll
in
fcmovbe
in
out
mov
sbb
fwait
jno,pt
lret
mov
add
lods
sarl
cwtl
push
sub
cmp
adc
push
sub
ficoms
test
repz
loop
add
out
lret
icebp
jo
imul
pop
or
gs
adc
in
test
pop
aas
je
mov
xor
ds
test
adc
push
mov
ljmp
cmp
cmp
jecxz
scas
adc
js
cli
lret
sbb
sarb
inc
adc
adc
mov
gs
inc
loopne
shl
lods
lods
repnz
hlt
sarl
jo
mov
push
shll
push
cli
lea
sub
push
dec
out
cmpsl
xchg
mov
push
push
pop
jnp
sbb
inc
repnz
inc
fwait
ss
or
xor
sub
mov
adc
lods
jbe
mov
sarb
inc
xorb
es
xchg
mov
ljmp
or
rcl
jae
inc
pop
inc
pop
int
daa
mov
jle
and
sbb
mov
andb
divb
push
jmp
mov
pusha
popf
xor
xchg
std
jmp
popa
push
cltd
xor
jmp
dec
leave
hlt
xorb
psadbw
xor
xor
jmp
lods
push
jl
aam
push
add
mov
pop
dec
pop
inc
dec
mov
mov
in
xchg
pushl
sysret
repnz
mov
cltd
mov
pop
mov
cld
and
sbb
adc
ljmp
and
enter
push
jge
sbb
adc
out
or
scas
sarb
xchg
mov
add
inc
out
das
jl
test
pop
scas
sti
rorl
out
ljmp
xor
jbe
add
xchg
push
inc
and
test
pop
or
dec
es
mul
cmp
mov
shl
lahf
mul
jnp
xchg
out
insb
lods
lret
pusha
mov
dec
aas
clc
popf
pop
loopne
addr16
ljmp
mov
adc
mov
xor
daa
xchg
das
outsl
add
test
repz
cmpb
enter
mov
and
lea
sub
lock
roll
push
mov
push
popf
sub
push
mov
push
shr
imul
incb
idivl
ja
pop
mov
movsb
int
fnstcw
movsl
into
jbe
dec
fistpll
xor
and
clc
jp
mov
inc
dec
pop
ljmp
fdivr
insb
cmp
inc
stc
ljmp
cmp
fs
adc
aas
jb
aam
shrl
pop
fwait
add
mov
dec
dec
inc
je
pop
sbb
xor
clc
push
pop
mov
imul
ret
jb
sub
in
lahf
into
mov
movsl
inc
xchg
xchg
cmp
enter
rolb
iret
imul
and
test
ret
pop
popf
mov
ss
xchg
push
jg
mov
movb
dec
ret
or
and
pop
lcall
iret
jno
xchg
hlt
out
sbb
out
jge
pop
sbb
sbb
int3
popa
fsubs
mov
push
stos
aas
inc
out
push
lret
popf
dec
fldenv
fdivrs
fmull
jl
pusha
push
or
fiadds
mov
or
arpl
pop
outsl
push
incl
mov
faddl
jno
jge
fdivs
cmp
mov
or
dec
subl
sbb
mov
add
jl
out
sbb
bound
or
sub
int
repz
das
shr
pushw
and
mov
sarb
insl
ljmp
mov
xor
inc
xchg
cwtl
jae
lds
sti
mov
jge
and
push
mov
cmpl
in
xorl
or
sar
pop
dec
push
dec
and
lods
fldenv
push
and
data16
mov
mov
xchg
lock
ret
pusha
hlt
cmpsl
cld
test
xor
inc
imul
pop
jb
xor
pushf
or
insb
push
out
outsl
cli
mov
icebp
pusha
jno
sub
push
repnz
or
rol
les
mov
push
lods
add
test
pop
jbe
sub
ja
jae
invd
or
add
inc
push
sbb
jg
arpl
popa
daa
sbb
stc
dec
std
and
sti
loope
sti
nop
sbb
push
add
mov
xor
xchg
movsl
pop
add
push
and
or
into
adc
sbb
sbb
inc
pop
jl
flds
stos
xchg
insb
in
outsl
dec
loope
adc
cmpsl
mov
sahf
clc
adc
or
adc
dec
js
xor
mov
insl
mov
pop
adc
repz
sub
mov
std
mov
push
add
aaa
sub
stos
adc
ss
test
js
daa
jg
pop
pop
into
shlb
adc
push
imul
cmp
lcall
call
mov
movsb
stos
imul
or
pop
andb
adc
out
pop
push
push
pusha
xor
add
shll
ds
mov
or
xor
push
roll
sub
mov
adc
dec
pop
out
sbb
dec
add
adcb
subb
dec
xchg
movsb
cmp
and
clc
in
push
inc
dec
and
pop
lcall
jge
dec
add
inc
test
sbb
mov
mov
in
movsb
adc
push
les
sub
jmp
cmc
scas
inc
clc
adc
dec
fidivrl
pop
shrl
repz
adcl
sbb
lds
or
mov
insb
and
jne
movsb
or
push
push
xor
jbe
sti
sub
dec
mov
mov
sub
mov
repnz
sub
hlt
in
in
ret
pushf
push
lea
add
hlt
popl
inc
and
jg
push
push
or
ja
pop
js
pop
jns
push
push
aad
fbld
push
lcall
jno
clc
notl
cmc
sti
pop
jae
add
dec
lods
cwtl
mov
ret
imul
ja
stc
das
pushf
inc
pusha
xchg
sahf
stos
ds
dec
movsl
push
cmp
xor
pop
icebp
pop
xchg
aad
pop
jbe
sub
das
out
mov
mov
imulb
das
insb
xchg
je
or
push
mov
lret
and
popf
push
cmc
lea
jecxz
adc
in
cmpsl
shrl
ja
lods
mov
int
or
add
pusha
push
test
loope
loope
cmp
test
mov
ret
clc
jno
rcrl
mov
and
pop
test
add
adc
ss
inc
sub
popa
pop
push
cmp
cs
lret
sbb
or
mov
dec
lahf
ret
into
pop
insb
push
leave
mov
mov
shlb
call
push
cmc
aam
sub
mov
xchg
xchg
mov
mov
xor
out
gs
jno
fsubr
sbb
aaa
inc
mov
loop
mov
adc
xchg
call
loope
loopew
jecxz
jge
sahf
sub
ss
ret
fidivs
mov
xchg
xchg
cmp
and
pop
pcmpeqb
popf
js
xor
jbe
jl
push
jmp
mov
adc
daa
int3
ss
lret
pop
or
lcall
lds
or
cltd
inc
and
or
pusha
ret
cmp
xchg
fcomi
fimuls
mov
fisubl
push
xchg
cmpsl
or
incl
cltd
in
mov
sbb
jecxz
outsl
scas
mov
popf
adc
cmp
push
mov
pop
cmp
sub
cltd
test
clc
xchg
and
scas
inc
ds
fisubrl
popf
add
sub
push
lcall
add
aaa
je
stos
push
pop
les
ficoms
cmpsb
jg
or
cmpsb
mov
aam
cmp
and
cld
pop
hlt
in
mov
mov
dec
sti
fwait
mov
aas
mov
aas
jbe
stos
fisubs
incl
pop
or
test
scas
xchg
lea
sbb
addb
mov
sti
sbb
arpl
pop
push
xchg
cmc
xorb
jg
movsl
pop
lret
jp
int
andl
movsb
mov
fisttpll
mov
push
sbb
push
aam
lods
jnp
jns
ss
adc
jmp
mov
inc
leave
ret
call
pop
push
push
adc
sbb
neg
movsb
xchg
fnstcw
jmp
roll
mov
xchg
cli
divb
add
pop
mov
lods
add
daa
shrb
jmp
pop
je
push
pop
insb
sbb
mov
inc
cmp
xlat
mov
stc
fcoml
mov
adcb
das
xchg
push
orl
test
mov
xor
gs
add
and
lds
mov
mov
cmp
xor
push
lahf
dec
test
xchg
lds
repnz
lahf
mov
mov
pop
push
call
sbbb
lock
jmp
lds
dec
add
xchg
mov
inc
test
pusha
push
roll
xchg
test
lds
rcrb
pop
ja
mull
mov
cmp
pop
lahf
bound
out
adc
testb
adc
push
and
sbb
pop
sbbl
inc
sti
cltd
jno
daa
adc
sbb
sub
push
lret
js
sub
stc
pop
out
cs
sbb
test
mov
sarl
mov
cmp
inc
bound
jp,pt
push
out
ja
in
pop
insl
and
test
or
sub
jle
std
addr16
stos
add
mov
jb
cmpsl
mov
jnp
jne
pop
rolb
je
stc
jge
ret
push
insb
fnstenv
lock
fnstcw
scas
mov
mov
mov
loop
out
iret
popf
inc
cs
dec
dec
cmp
jb
push
aam
sti
jge
cld
cmp
jo
inc
fdivrp
nop
mov
xor
mov
add
adc
pop
pusha
sti
mov
daa
pop
add
popa
xorb
stos
pop
mov
sbb
mov
pop
in
nop
mov
outsb
adc
rclb
xor
shll
insl
xchg
out
das
or
frstor
pop
into
add
jb
dec
xor
repnz
pusha
fdivl
sub
cld
sub
iret
push
xor
lret
jp
xor
dec
mov
or
dec
enter
addb
mov
out
cli
into
popa
movsl
shrl
jp
daa
scas
aas
call
pop
stc
rcr
pop
inc
das
es
in
mov
test
outsb
test
iret
jnp
fmull
pusha
mov
mov
mov
pusha
xlat
test
cmpsl
out
jmp
mov
xor
inc
or
fs
sahf
enter
mov
mov
leave
pusha
scas
inc
rcrb
sub
sbb
xchg
inc
ja
out
adc
cmp
jle
leave
push
mov
fs
xor
xchg
dec
xchg
lret
lea
mov
mov
testb
aaa
cwtl
fwait
mov
aad
sbb
and
in
dec
xor
jmp
rcl
pop
cltd
lret
adc
lahf
pusha
adc
test
jmp
adc
inc
cmpsb
add
sub
xor
bound
jp
adc
dec
fsubrp
push
mov
fisttpl
data16
inc
mov
add
pusha
int3
jl
dec
mov
scas
push
xchg
mulb
mov
std
out
add
imul
es
pop
and
std
mov
jo
xor
jmp
adc
leave
dec
push
call
pop
cltd
cwtl
arpl
jge
mov
es
sbb
mov
mov
cmp
push
jmp
or
mov
test
jnp
mov
xor
or
mov
sub
xchg
push
test
xor
sub
clc
cli
dec
adc
or
sub
idiv
mov
ljmp
or
movsl
pop
adc
imulb
add
and
dec
ja
arpl
dec
lret
rorl
sbb
add
adc
mov
push
js
pop
and
daa
lock
xchg
xor
ljmp
stc
js
jae
cmpsb
ret
mov
cmp
fcmovnbe
jno
stos
xor
lods
addb
cmp
adc
mov
mov
add
xor
pop
and
out
int
dec
pop
jecxz
and
xchg
pop
dec
jle
xchg
mov
mov
xchg
out
addb
cmc
dec
fwait
stc
out
or
icebp
int
xor
xor
test
ret
sahf
leave
inc
or
call
cltd
mov
add
xchg
inc
lock
pop
xchg
int
push
dec
stos
sub
stos
jmp
pop
fldl
xchg
bound
mov
and
xorl
push
add
mov
imul
pop
addr16
out
movsb
mov
sub
shrl
movl
cmp
push
pop
loopne
ret
cmpsl
mov
mov
nop
cli
sbb
jno
lds
fimull
pop
add
mov
add
cmp
and
dec
negl
rorb
mov
adc
or
stc
mov
adc
lods
jb
cmpsb
js
mov
shll
hlt
mov
mov
shr
addr16
sbb
loope
jb
mov
leave
fdivrs
mov
add
cmp
imul
and
mov
inc
adc
fcoml
fimull
push
and
sub
subl
push
xor
pop
jo
cli
xor
mov
push
cltd
add
add
lahf
fcoms
sub
ret
pop
jl
jns
out
dec
loop
sar
cmpsl
aad
or
fwait
rolb
or
hlt
jmp
sti
inc
xchg
push
mov
int3
pop
xchg
clc
dec
pushf
cmc
xor
in
or
pop
imul
icebp
pop
insl
addr16
fld
popa
mov
cwtl
or
hlt
movsb
lods
frstor
clc
mov
mov
and
ss
add
es
test
push
aam
daa
dec
push
fs
sti
lds
shll
adc
push
cmp
cli
mov
fcmovne
fs
inc
push
push
jno
sti
imul
stos
sti
add
test
hlt
lret
xlat
or
cmpsl
mov
xchg
testb
pop
lcall
int
mov
pop
lcall
std
in
lret
or
outsl
jle
sub
dec
test
cmp
rol
inc
and
leave
push
icebp
popa
negb
dec
or
out
and
add
sarb
fsubp
sbb
mov
jmp
out
fcmovbe
pop
sti
xchg
xor
out
mov
data16
pop
lods
push
add
pop
cmc
jp
ljmp
inc
divl
clc
dec
ljmp
std
inc
jl
loopne
sti
pop
aam
jg
inc
fldln2
xchg
mov
lahf
add
fisttpl
push
jae
and
sbb
sbb
xchg
pop
dec
xchg
hlt
and
dec
cmpsl
jbe
xor
jb
data16
add
mov
jge
pop
push
insb
jb
loope
int3
jp
out
fsts
sahf
aad
push
jnp
add
lret
outsl
popf
outsb
mov
shll
adc
add
sub
test
mov
lock
mov
add
outsb
iret
loop
mov
and
lds
dec
outsb
sbb
stc
fcoms
mov
or
jp
or
in
sub
pop
inc
stc
jp
mov
ss
xchg
mov
dec
shll
addr16
mov
jne
dec
js
lahf
mov
push
mov
dec
mov
ret
pusha
roll
jb
es
cli
mov
cli
dec
lcallw
dec
jecxz
pop
add
sbb
adc
call
jne
mov
test
xlat
frstor
out
jge
or
cmp
mov
push
jmp
xchg
mov
aas
mov
or
or
inc
aas
ficoml
ds
or
fscale
outsb
mov
je
enter
sbb
jle
add
decb
repnz
push
push
test
mov
arpl
xchg
mov
std
repz
jb
add
pusha
and
xchg
ret
mov
dec
jno
mov
scas
sti
add
imul
xchg
push
mov
sbb
xchg
xchg
imul
ret
xlat
lds
xor
xchg
xchg
xor
pop
push
push
lock
pop
sbb
push
mov
lock
movsl
outsb
inc
dec
cs
pop
insl
les
mov
push
inc
mov
mov
adc
jmp
aad
add
scas
push
jns
sahf
stc
fdivl
hlt
sub
cli
cs
pop
fadd
xor
dec
and
jnp
mov
adc
lahf
sub
fistl
loope
push
sub
dec
pop
pusha
pop
scas
pop
mov
mov
shrl
insb
into
leave
inc
and
sub
jg
sbb
fsubr
fwait
ret
adc
dec
add
test
mov
pop
ret
stos
std
mov
lock
les
bound
adc
sbb
aaa
rolb
je
add
jle
iret
iret
pop
pusha
adc
or
inc
sub
xor
jmp
xor
inc
repnz
enter
ja
and
dec
pop
xchg
je
add
cmp
push
ljmp
in
fldcw
and
cld
ljmp
push
loope
xor
inc
repnz
stos
mov
sbb
mov
mov
add
jno
jbe
add
test
rorb
dec
movsb
sub
adc
inc
insl
sub
xor
mov
sub
and
cmp
adc
in
mov
mov
fsubrs
jne
aas
hlt
fisttps
mov
and
push
inc
rcl
fimull
rorb
jae
aaa
add
adc
fwait
scas
cltd
inc
or
imul
imul
push
mov
pop
js
mov
orb
xor
mov
xor
add
je
jp
or
push
mov
outsl
inc
loop
in
sbb
cltd
out
ret
mov
add
mov
jle
out
inc
dec
or
into
sbb
outsl
xchg
add
shrb
in
and
jno
in
lods
mov
imul
loop
adc
xchg
insb
jecxz
js
and
mov
jne
sbb
rorl
adc
adc
ret
xor
sbb
mov
lea
imul
pop
mov
add
mov
mov
cmc
pop
lock
sub
sbb
dec
scas
xchg
and
cld
xor
test
jbe
xchg
jne
andb
fwait
xor
jg
pop
lods
xlat
test
xor
int
push
cmpsb
and
mov
add
mov
inc
sbb
xor
push
mov
push
lahf
mov
xlat
lods
fisubrl
sar
shll
je
mov
adc
outsb
xlat
lahf
add
stos
mov
cmp
sub
xchg
sar
lods
sub
xchg
out
inc
mov
popa
jb
mov
jb
clc
lock
mov
push
fstp
or
popf
sbb
or
dec
sti
sbb
aas
rcll
mov
out
inc
lock
inc
add
gs
lock
andl
and
sar
and
lods
sbb
icebp
lret
adc
push
les
inc
in
inc
inc
jno
cmpsl
mov
mov
xchg
push
es
movsb
sbb
and
jge
stos
push
sbb
push
inc
jno
fidivrl
inc
nop
xorl
stos
xor
lds
lret
or
sbb
cltd
adc
shrb
push
gs
mov
ret
push
xor
push
xlat
pusha
xlat
and
pop
push
pop
scas
fldt
cmp
push
or
loope
sahf
pop
xchg
in
aaa
push
sbb
stos
sub
movsl
and
cmp
jns
cli
jg
lods
cmp
mov
pusha
mov
in
add
fcom
jg
ljmp
and
adc
scas
pop
mov
je
mov
or
shrl
iret
lcall
bound
test
in
cmp
pop
adc
rclb
xchg
fbld
inc
pop
or
fisubl
loop
mov
push
jp
mov
pop
push
stos
push
movsb
push
mov
dec
ds
mov
outsb
aas
push
ret
int
and
sahf
aad
and
out
pop
sub
push
add
xorb
pop
xchg
cmp
ss
leave
insb
rorl
les
pop
push
call
repz
enter
fwait
popa
pop
xor
loope
xchg
arpl
cltd
mulb
inc
dec
dec
adcl
pop
movsb
pop
popf
jg
and
xor
repnz
mov
sarl
movsl
jl
xor
out
or
rcll
and
iret
mov
xchg
cmpsl
jo
add
pop
xorb
xlat
mov
and
aaa
and
loopne
pusha
fstpt
sub
push
xorl
addr16
push
pop
outsl
jnp
inc
jb
sub
repz
mov
or
or
jb
xorb
jl
lods
and
cmp
iret
or
jno
inc
add
loop
add
sbb
lret
inc
std
push
xchg
pop
jle
sarl
xchg
cmp
mov
xchg
shrl
dec
test
jb
xlat
pop
sub
mov
xor
fisttps
dec
ficoms
mov
popa
mov
and
sub
jle
les
ds
popf
xor
xchg
out
add
gs
mov
sub
aam
std
psubq
mov
inc
xor
ds
cli
mov
gs
adc
xchg
sbb
dec
pop
adc
sbb
in
adc
fcomps
insl
push
and
ficoml
fisttpl
xchg
movsb
jle
dec
mov
lea
and
mov
jmp
xor
loopne
mov
jnp
mov
fidivrl
dec
mov
fmul
or
inc
pop
pand
movsl
movsl
sbb
rolb
fs
mov
mov
lds
jae
push
sbb
dec
jecxz
xchg
ds
xor
loop
xchg
xchg
and
sarl
aas
mov
cmpsb
cmp
mov
scas
sbb
pop
jns
xchg
repz
std
and
cs
fsubs
fidivl
and
subb
push
jne
jge
enter
jb
test
es
pop
jnp
add
rcrl
fsts
negl
test
push
fisubs
in
ja
add
jnp
dec
dec
sub
rcrl
jge
add
xor
sub
lods
inc
call
enter
imul
dec
in
stos
mov
ds
sub
test
or
out
pushf
push
mov
inc
mov
push
jne
pop
pushf
cmc
cltd
in
std
push
popa
into
nop
std
cmp
xor
jmp
mov
pop
sub
jb
dec
in
adc
icebp
out
dec
in
mul
mov
lods
xor
cld
pop
cmp
push
xor
jo
sbb
int3
ja
jge
testl
mov
imulb
aam
fcompl
xchg
inc
inc
mov
jbe
push
scas
push
and
cmc
inc
pop
mov
fcomps
ret
out
stc
jnp
pop
insb
pushf
pushf
loope
dec
mov
fcoml
mov
pop
and
mov
mov
sub
mov
push
sbbb
pop
cmp
xor
fcmovnb
fnstsw
xchg
loope
xchg
pushf
dec
mov
bound
aad
pop
aad
lret
cmpsl
inc
mov
xchg
jg
jp
int
push
addr16
push
std
pop
cs
mov
and
push
pop
imul
icebp
cmp
negb
inc
mov
int
ljmp
pop
dec
mov
mov
mov
pop
adc
aas
adc
roll
dec
loopne
or
fsubs
in
icebp
xchg
jae
xchg
mov
in
scas
leave
cmp
jecxz
xor
cmpsb
sar
sbb
push
jg
repnz
xorb
mov
pushf
jl
and
cmpsl
andl
dec
mov
jnp
sbb
and
jnp
ficoms
ficoml
sbb
jb
adc
mov
cmp
lahf
adc
into
sahf
fisttpll
adc
xor
mov
pop
jnp
popa
push
pop
aaa
xchg
cld
popa
popf
pop
pop
sbb
cmc
repz
scas
dec
test
mov
add
pop
fidivrl
jg
sbb
test
mov
mov
xchg
mov
mov
push
scas
adc
outsl
cmp
loop
dec
jecxz
clc
pop
in
call
mov
imul
xor
adc
pop
test
mov
scas
hlt
and
loope
xchg
in
xor
push
test
sub
sqrtps
jno
test
pop
add
jbe
cld
adc
stos
xorb
pushf
xchg
fstl
push
sar
pop
mov
sbb
push
leave
or
mov
cld
xchg
push
xor
vpsraw
divl
mov
arpl
cmp
adc
mov
xor
pop
sub
mulb
test
mov
and
pop
dec
add
cwtl
pop
mov
cmpsb
in
pop
das
aam
les
push
bound
jp
insl
fbstp
jle
push
and
fadds
in
push
sub
mov
in
or
add
scas
cltd
cwtl
hlt
xchg
add
sbb
lock
add
les
shrb
mov
fucom
rclb
pushf
xor
pop
popf
cmpsl
dec
mov
mov
enter
repnz
xor
inc
lods
cltd
push
pop
lret
loope
mov
and
add
jmp
test
rcl
loopne
daa
mov
cmc
sbb
jb
sti
mov
dec
inc
add
add
test
movsb
jno
and
xchg
std
flds
jmp
popf
loopne
pop
repz
idivb
jecxz
mov
sub
loopne
jne
push
stos
sub
pop
lods
iret
jnp
outsl
adc
lea
insb
mov
mov
mov
push
out
dec
movsbl
lcall
sub
test
icebp
lret
add
push
adc
enter
inc
aad
or
hlt
xchg
sbb
jno
adcb
ja
mov
sahf
loopne
push
mov
inc
int
dec
mov
jb
xchg
sub
ja
jae
xchg
lcall
add
xchg
lds
push
sbb
jo
push
dec
mov
arpl
iret
inc
iret
jl
hlt
add
imul
iret
divl
push
sti
in
mov
js
inc
cmpb
cmpsl
dec
fimull
jns
xor
or
fcoms
inc
in
cmp
or
dec
inc
inc
call
pop
aaa
lea
es
gs
xchg
mov
addr16
lds
xor
daa
cmp
outsb
inc
mov
mov
das
sub
mov
enter
jle
fmull
gs
insb
or
loope
add
dec
and
mov
add
repz
test
mov
fdivs
mov
or
push
stos
dec
pop
jno
scas
daa
xchg
clc
inc
ds
fisubs
iret
test
cltd
mov
enter
dec
mov
or
loop
or
sahf
inc
mov
test
mov
dec
rorl
cltd
outsl
lret
outsl
pusha
cltd
jns
cmp
adc
mov
insl
les
xchg
adc
adc
les
inc
ret
pusha
jno
add
jae
push
arpl
loopne
cmp
push
js
adc
or
inc
sbb
icebp
cmp
inc
add
aam
pop
xchg
push
rorl
push
push
sub
into
inc
sub
int
scas
jg
add
sub
inc
outsl
fcoml
int3
pop
negb
xchg
popfw
cmp
in
pusha
pop
aam
les
dec
xchg
in
std
xor
loop
nop
push
leave
and
jmp
repnz
in
repnz
push
outsl
movsl
hlt
roll
cmc
mov
cld
mov
push
fisubs
stos
insb
add
dec
das
enter
sub
fistpll
jne
movsl
mov
and
xor
in
stos
sbb
fists
enter
push
ss
adc
das
out
rorl
adc
sahf
call
xchg
sub
pop
fidivl
and
xor
inc
mov
pop
sub
inc
es
jg
inc
je
imull
hlt
jae
dec
or
cld
das
inc
mov
jo
jl
add
fs
int3
out
daa
add
xlat
aaa
and
loope
addl
or
fs
jb
push
pusha
popa
push
inc
int
bnd
adc
jne
pop
push
lcall
cli
mov
scas
lahf
dec
mov
and
xchg
and
xor
aaa
or
push
fnsave
xor
repnz
leave
mov
xchg
and
data16
outsb
pop
pop
xor
rorb
mov
jecxz
and
or
push
pop
in
test
cmp
in
add
rcr
fwait
ucomiss
or
imul
xchg
inc
xchg
lcall
shrb
dec
and
out
push
xchg
out
int3
shlb
test
insb
or
mov
push
cmp
scas
xor
in
dec
out
cs
mov
mov
xlat
or
into
adc
push
jge
push
mov
jno
inc
jne
ret
pop
movl
loop
call
loope
insl
idivb
aad
mov
mov
push
mov
into
jbe
mov
pusha
cmp
jle
test
and
pusha
jnp
sub
fmull
dec
popa
sub
sbb
frstor
push
mov
jae
sahf
popl
or
cmp
mov
inc
loopne
jmp
mov
mov
out
gs
lret
mov
test
outsb
mov
cmp
cld
movsb
jle
sub
mov
jae
lret
pop
neg
mov
xor
dec
mov
and
or
jge
mov
es
push
std
and
sbb
jp
dec
sbb
sub
rolb
sarb
dec
mov
addr16
test
push
ljmp
pusha
push
xor
or
pop
mov
in
xchg
pusha
jbe
xchg
icebp
and
in
add
dec
fsubrl
shlb
cs
aam
out
push
pusha
cmp
push
xchg
int
rol
xchg
inc
xor
xlat
pop
daa
pop
mov
out
icebp
push
jne
movsl
pusha
sbb
push
fcom
dec
outsl
ds
je
fistpl
or
sbb
stos
ret
jle
nop
scas
test
in
aam
adc
shl
js
push
or
sub
out
jg
sbb
aam
mov
xor
mov
repz
pop
aam
stos
sarb
mov
mov
outsb
lds
mov
mov
dec
leave
cmp
sub
pop
lahf
xchg
adc
and
xor
addr16
clc
xor
and
mov
lea
adc
inc
mov
dec
jae
pop
jnp
mov
test
inc
sbb
adcl
push
movsb
inc
hlt
cmpl
jbe
inc
sub
xchg
adc
dec
inc
clc
mov
lcall
push
dec
mov
cmpsl
ds
gs
cmp
hlt
push
nop
cmpsl
cmpsb
adc
test
repnz
fstpl
sarb
ret
mov
pop
mov
mov
dec
movsb
dec
mov
repz
cmp
loop
fildl
in
outsl
cmc
rcll
dec
or
aad
cmp
fdivl
sbb
xchg
stos
add
cli
dec
sbb
test
aad
xor
fs
add
mov
int
sub
inc
std
push
lods
xchg
mov
ds
jbe
jmp
cmp
inc
xchg
dec
mov
sbb
mov
or
ljmp
movsl
stc
dec
scas
js
push
fsubrp
lods
punpckldq
cltd
inc
pushf
and
in
jmp
pop
mov
cs
dec
fstps
lods
xchg
mov
mov
fwait
dec
pop
addl
dec
sbbb
xchg
pop
mov
xlat
dec
out
icebp
jl
or
clc
mov
adc
sbb
cld
dec
in
stos
inc
add
jl
pop
filds
sbb
iret
jp
pushf
cmp
jno
jb
pop
add
mov
sbb
test
ljmp
sub
xchg
xor
sti
int3
dec
sahf
add
clc
inc
jle
gs
lea
dec
lcall
and
faddp
xchg
pop
or
sub
sar
pop
xchg
out
cwtl
outsb
gs
test
je
sub
dec
mov
jmp
loop
or
xlat
leave
push
fdivrs
mov
sbb
call
cmp
and
addl
mov
sbb
imul
out
sbb
ficomps
lcall
mov
or
jns
cltd
dec
scas
xor
pusha
mov
xlat
add
into
mov
pop
mov
pop
sub
notl
dec
dec
lods
aaa
gs
movsl
jp
sbb
adc
fdivs
push
fwait
xor
in
pop
xor
fstl
inc
loope
pop
std
stos
xchg
cmpsb
push
mov
jo
add
repz
call
push
and
sub
and
xlat
fwait
test
adc
sbb
imul
insl
movsl
out
adc
jecxz
push
adc
jb
push
mov
movsb
pop
sbb
add
mov
adc
or
test
mov
mov
lods
rclb
sub
mov
popa
mov
aam
add
push
push
lock
cli
or
sbb
push
lea
xchg
stc
pop
inc
daa
call
testb
arpl
or
mov
leave
mov
pop
xor
test
outsl
add
dec
dec
push
cmp
xchg
dec
aas
in
scas
cmpsl
mov
fnstcw
push
lods
scas
sbb
jge
push
shll
xchg
push
jecxz
shl
sub
lcall
cmp
dec
jmp
cmp
inc
dec
adc
lods
and
ss
fsubl
bound
sub
xchg
mov
mov
push
ljmp
xchg
cltd
les
jle
inc
mov
jl
lock
sar
je
sbb
inc
addl
mov
push
aam
outsb
repz
inc
scas
pushf
jmp
push
ljmp
sbb
mov
adcb
cmp
pop
inc
repz
add
inc
sbb
movsl
push
jp
sbb
mov
shrb
xchg
xchg
test
sti
push
and
cmp
pop
into
jns
fdivl
ret
push
push
out
cmpsl
pop
add
jns
adc
repz
and
mov
cmpsl
int3
es
sub
xchg
sub
mov
or
arpl
int3
cmc
lods
cwtl
aad
cwtl
and
push
push
cmp
xchg
dec
stc
jecxz
inc
fidivrs
mov
mov
add
jne
inc
add
pop
mov
dec
incl
inc
pop
xor
fdivs
push
jns
nop
mov
cmp
rclb
mov
leave
xor
jo
cs
arpl
mov
inc
sub
jle
cmc
inc
ret
mov
mov
shll
push
push
popa
mov
cmc
in
fimull
ret
nop
scas
xchg
cmpsl
fidivrs
push
incl
mov
dec
int3
inc
jecxz
popf
test
hlt
cmp
je
jo
add
inc
mov
mov
sahf
push
aaa
jne
dec
fsubrp
repz
push
pop
and
lahf
adc
je
fwait
in
lods
rcr
jecxz
pop
ficoms
cmp
mov
lods
jge
in
sbb
adc
add
sbb
mov
sbb
je
mov
daa
outsl
and
test
adc
lock
rorb
xor
dec
sub
aaa
cmp
iret
shlb
in
mov
adc
das
mov
pop
jl
sarl
and
xor
lock
xchg
ja
fdivp
dec
cld
inc
popf
xor
shr
pop
jmp
rcr
pop
xchg
pop
jae
and
iret
jno
outsb
fisubrl
out
add
push
push
cmp
lret
mov
ds
iret
jle
mov
push
loop
neg
jmp
addr16
mov
adc
jge
xor
add
mov
xor
mov
jnp
sbb
aam
arpl
jl
test
in
dec
add
test
in
mov
hlt
std
push
dec
mov
ljmp
cmp
xchg
das
pusha
pop
test
addr16
sub
push
cs
subl
xchg
stos
or
fildll
ss
pop
lret
les
inc
xchg
or
mov
inc
or
insb
sub
pushf
mov
mov
mov
sbb
stos
lret
push
imulb
jle
mov
pop
jle
or
mov
or
icebp
xchg
inc
dec
cs
mov
fsts
out
std
outsl
mov
push
pop
or
hlt
popa
fnstsw
movsb
in
inc
dec
fwait
loop
js
mov
in
sbb
xchg
dec
fistpl
add
push
lcall
fucomp
pop
stos
xor
push
test
aam
lods
pop
sti
xchg
add
loope,pn
xchg
shrb
fisubrl
sub
out
add
jb
cmc
sub
jp
popa
jg
jbe
jae
xor
iret
data16
ret
shll
and
sub
gs
push
mov
nop
dec
mov
call
in
xchg
pop
inc
inc
or
jg
imul
fldcw
sub
cmp
inc
xor
les
ss
pop
mov
stc
mov
ja
or
xor
outsl
cmpsb
xor
out
lcall
test
dec
jge
repz
movsl
push
sub
jb
out
inc
lods
ljmp
cld
xchg
cmp
xor
mov
out
dec
bound
rcll
loop
pop
call
sahf
sbb
hlt
mov
cmc
and
iret
push
add
and
mov
enter
jge
jb
dec
and
jae
std
mov
pop
in
lods
les
addb
add
mov
mov
setnp
fdivrs
les
loope
xchg
and
movntq
pop
or
jne
les
clc
sahf
jns
mull
jecxz
or
push
push
inc
lret
dec
xchg
pop
cmc
out
data16
lret
sub
rclb
adc
sub
bound
or
cmp
nop
icebp
mov
shll
fistpll
sbb
fisubrs
fdivrp
adc
and
into
push
fnsave
push
bound
lea
cmc
xlat
add
jo
or
jns
mov
call
push
and
subl
sub
out
or
scas
add
push
or
adc
and
sbb
ror
imul
xchg
cmp
dec
mov
arpl
jl
lods
and
and
sub
ljmp
cli
push
or
insl
inc
nop
or
pop
int3
jns
cmp
pusha
sbbb
jmp
xchg
inc
fildl
push
repz
cltd
pop
mov
push
push
push
sub
sub
out
mov
mov
in
popa
mov
or
xchg
and
jge
insb
lahf
les
push
lods
xchg
xchg
dec
sarl
fwait
xchg
leave
cltd
test
adc
clc
cmp
rcrl
in
inc
jbe
cmp
stc
or
cwtl
inc
pop
ja
mov
or
cld
mov
xor
mov
jecxz
push
xlat
and
cmp
cmp
jmp
sub
fdivrp
ficompl
notb
and
mov
jecxz
clc
int3
pop
push
mov
pop
add
inc
jecxz
sub
cmp
dec
add
shll
shl
scas
add
sbb
add
or
and
scas
mov
or
cmpsb
xchg
pop
sub
xor
jnp
xor
or
mov
loopne
inc
or
xchg
ds
in
scas
rolb
cmp
and
jae
and
dec
or
mov
ret
cltd
mov
sarb
inc
scas
imul
insl
cmp
leave
scas
rcrb
aas
xlat
push
xor
and
shrb
mov
fisubrl
jno
into
cmp
pop
lds
roll
bnd
lret
out
dec
pop
adc
push
push
push
mov
outsb
das
fcoms
jp
mov
imul
stos
iret
aam
or
stos
and
test
mov
xchg
in
dec
fimuls
xor
lock
ffreep
cltd
aam
pushf
rcll
ja
and
adc
xorb
and
pop
sahf
or
push
dec
mov
popa
fs
and
add
push
push
push
jnp
inc
sub
sub
enter
mov
jne
je
jecxz
sub
mov
sub
xchg
lcall
scas
ret
add
fmuls
sbb
rcl
mov
out
jl
and
sbb
dec
insl
push
mov
lahf
fadds
sahf
sub
push
mov
xor
cmpsl
dec
imul
xor
dec
xchg
int3
fstps
mov
fs
fidivrl
inc
xchg
fsts
shrl
bound
mov
out
mov
push
popa
stc
cltd
push
mov
push
pop
mov
insl
aaa
loop
aas
or
inc
ja
and
idivb
xchg
push
fst
sbb
adc
mov
test
add
call
ret
test
or
xchg
mov
rolb
stos
gs
out
iret
cmp
icebp
fmuls
nop
push
jae
add
cmp
cmpl
mov
add
cltd
cmp
imul
dec
fbstp
orb
rorl
mov
mov
aad
iret
ds
cmp
cwtl
sar
mov
dec
jle
pop
out
xchg
aaa
out
add
stc
sub
rcll
push
dec
call
adc
sbb
adc
ljmp
fucom
dec
sbb
dec
fildll
mov
mov
jge
popf
bndstx
into
push
shl
push
cmp
icebp
pop
xchg
mov
scas
pop
and
cmc
idivl
xchg
cld
cmc
pop
rolb
rcrb
mov
stos
add
inc
test
adc
mov
dec
mov
dec
fnstenv
adc
leave
sbb
je
pop
in
lea
sub
cmp
mov
lret
mov
adc
orb
cmpsb
fsubp
outsl
sub
or
push
sub
pusha
jb
aaa
cmp
or
xlat
outsb
imul
hlt
push
push
mov
mov
or
mov
push
dec
lock
into
lret
add
push
popf
dec
xor
lahf
in
aas
add
cs
out
push
data16
daa
pusha
scas
and
orb
mov
xor
fwait
cmp
div
rcl
popa
jge
fcoms
ret
inc
bound
test
je
add
ret
pop
leave
rcr
push
lret
jg
push
jo
fisubrl
dec
xor
and
xlat
jmp
sbb
inc
in
call
in
ds
inc
test
sahf
ljmp
push
sub
jg
add
jg
enter
and
bound
or
inc
ljmp
jae
arpl
js
and
dec
cwtl
xchg
xchg
int3
cmp
inc
sub
lcall
mov
adc
incb
xchg
nop
in
test
add
mov
test
push
xchg
in
insb
jge
mov
mov
pop
xchg
adc
shr
int
les
je
mov
int3
es
pushf
cli
rcll
icebp
cmpl
mov
or
mov
inc
pusha
das
pop
push
into
fisttpll
pop
xchg
jno
lret
or
and
or
scas
or
fisttps
or
sbb
jb
movb
mov
mov
cmp
add
push
pop
aas
xor
in
xor
dec
push
test
loop
push
adc
push
inc
xchg
insb
add
mov
xchg
push
insl
movsl
cld
rclb
push
push
out
loop
jecxz
inc
sbb
mov
clc
rcl
jmp
or
jo
sbb
and
jl
dec
pop
decb
lahf
popf
mov
mov
inc
imul
insb
adc
dec
push
and
mov
in
inc
clc
test
lock
lcall
cmp
mov
pop
cbtw
movsl
test
les
fmulp
mov
push
dec
add
push
out
imul
inc
stc
inc
sbbl
xchg
pop
push
adc
and
ficoml
sub
dec
lret
movsb
mov
jmp
int
fcmovb
pusha
and
das
ficomps
out
enter
mov
mov
pop
aad
adc
cmpsl
cli
sti
lretw
push
inc
push
and
mov
cmpsl
js
aam
aad
cmp
jns
in
cmp
adc
ds
fidivs
gs
scas
popa
dec
idivb
sub
popa
xor
mov
or
push
shlb
out
imul
es
pusha
add
add
test
push
jno
inc
xor
cmp
addr16
and
xor
push
ret
lcall
out
into
dec
pop
cmc
hlt
iret
subl
lret
mov
sub
stc
ficoms
pop
fadd
cmp
dec
xor
xorl
iret
and
sbb
or
jnp
sub
fwait
dec
pop
arpl
sbb
push
pop
bound
shll
or
and
cmpb
sub
mov
xlat
inc
cmp
fisubrs
lcall
insb
repz
push
push
jbe
xor
dec
in
xor
bound
inc
ret
sbb
call
lods
ficompl
cmp
dec
xchg
mov
push
sub
call
pop
shl
dec
pop
mov
dec
and
clc
mov
push
outsb
push
cmp
dec
add
cwtl
sbb
lds
add
dec
ret
sub
xchg
aam
into
jnp
repnz
cmp
adc
mov
or
out
push
ja
mov
pop
mov
jmp
sub
std
sbb
mov
scas
or
mov
xchg
mov
xchg
addr16
or
fwait
cmp
and
push
push
xor
sub
mov
pop
inc
into
popf
repnz
add
xor
mov
mov
f2xm1
hlt
lret
repnz
mov
mov
lahf
mov
fisttps
test
jl
mov
test
cltd
adc
cmp
hlt
bound
lock
push
dec
xor
cmp
js
inc
pop
test
aad
or
out
mov
shrb
mov
mov
ret
ss
movsl
in
jg
sub
sbb
in
test
mov
inc
cmp
add
mov
ret
mov
mov
cmp
push
and
sbb
cli
out
add
inc
mov
push
popa
jecxz
ljmp
and
es
jns
int3
out
add
lods
aas
mov
pop
push
iret
xor
xchg
cmp
cmp
jmp
fcmovbe
js
sub
popl
pushl
mov
enter
shrl
pop
jbe
push
xor
adc
jo
lds
add
stos
cmp
dec
pusha
into
notl
dec
dec
leave
scas
dec
xchg
cmpsl
lahf
push
xor
mov
jae
sbb
mov
sar
repz
test
cwtl
aad
jmp
adc
sbb
cmc
packssdw
testb
pop
cmp
adc
jmp
test
cmpsb
es
add
add
test
pop
cwtl
mov
cmp
pop
addr16
push
jb
test
jne
pushf
pop
das
cmp
inc
adc
rclb
mov
and
loopne
int3
pusha
and
in
mov
adc
orb
adc
dec
out
and
jbe
push
shl
cwtl
inc
push
repz
gs
arpl
dec
sbb
push
faddl
inc
push
mov
mov
jno
jns
out
mov
loop
shl
and
call
clc
ja
add
xchg
enter
nop
ficoml
sub
push
neg
add
inc
loop
mov
lea
stos
add
addl
dec
push
mov
mov
xor
jg
mov
ljmp
insb
bound
pop
jo
loop
or
jnp
cwtl
xchg
add
out
add
mov
movsl
mov
addl
rorl
lods
loope
test
stc
dec
loop
push
inc
xlat
add
jae
xor
sbb
add
mov
fsubl
pop
jnp
xchg
xor
pop
ljmp
adc
and
mov
nop
cmp
add
push
push
dec
add
scas
ret
fs
xor
pushf
pop
sub
out
jmp
repz
xor
gs
xor
loop
jne
dec
lods
xor
inc
outsb
xor
mov
xchg
add
mov
jmp
cmp
sbbl
nop
adc
daa
rolb
out
sbb
add
clc
push
jnp
push
lods
sub
and
lcall
and
adc
data16
shll
iret
xor
and
and
jmp
xchg
call
imul
inc
das
lahf
cmp
pop
lret
pop
mov
dec
loop
aam
sub
in
mov
xor
shlb
xchg
cmp
jns
fs
sahf
mov
call
push
dec
out
movaps
aaa
flds
xchg
jnp
fisttpl
int
cmp
das
and
mov
shll
or
sub
pop
dec
jnp
jno
mov
add
xadd
in
pop
in
mov
cmp
mov
add
popf
loopne
inc
cmp
mov
jl
or
scas
sbb
les
lcall
mov
xchg
lahf
jg
cltd
imul
inc
movsl
es
pushf
fistl
aaa
movsl
ficoms
clc
scas
or
insl
loopne
mov
push
mov
cltd
insb
cld
dec
mov
sbb
mov
ds
scas
insl
insl
pop
mov
ja
test
sbb
jg
fisubrl
add
jmp
ja
jae
push
lods
push
add
add
xor
xchg
push
in
decb
fldt
mov
jecxz
push
lahf
sub
ret
add
inc
and
fs
sub
mov
stc
frstor
mov
pop
loope
imul
and
push
xor
push
mov
xchg
test
pop
ss
in
fisttpll
incl
mov
jg
mov
adc
mov
lcall
jp
aad
sti
push
pop
fildll
sbb
cmp
or
fld
aaa
lret
jge
mov
test
test
ss
lods
push
or
adc
ret
test
out
pop
aaa
lods
leave
jg
jns
jns
adc
cmp
mov
push
jns
dec
push
inc
lock
xor
mov
in
cltd
lret
aam
in
cwtl
cmp
data16
ja
cmp
pop
xchg
sti
or
repz
stos
xor
stos
jo
and
sbb
mov
xor
imul
mov
mov
rolb
cmp
and
jle
out
add
jne
les
movsb
inc
pushf
mov
xlat
push
cmp
test
xor
pop
cwtl
cmp
sbb
sbb
adc
jecxz
insl
in
int3
and
pause
dec
fldlg2
add
push
mov
les
loop
or
cwtl
imul
pop
aas
outsl
push
inc
push
xchg
xchg
pusha
lock
lea
add
arpl
jg
jge
cmp
or
sbb
dec
cmp
cwtl
xchg
scas
or
cmp
out
mov
mov
scas
or
adc
out
or
pop
stos
dec
mov
loopne
jno
xor
jecxz
inc
adcb
jl
fstpt
cmpsb
pop
mov
out
pop
dec
push
xchg
push
mov
jae
scas
mov
test
js
push
loop
inc
push
pop
repz
xor
inc
and
imul
pusha
sahf
inc
sbbb
repz
dec
pop
mov
sub
adc
add
xor
jbe
pushf
daa
jle
pop
lock
cmc
repnz
gs
scas
push
sbb
jae
cli
mov
pop
ljmp
mov
mov
shll
and
in
cmc
sbbb
pop
xchg
mov
outsb
or
pop
xchg
push
sub
mov
jmp
push
and
scas
lods
mov
sub
adc
push
pop
push
jmp
dec
cld
iret
pavgb
pop
mov
ret
add
bndstx
call
ret
and
cwtl
ffreep
xchg
push
dec
repnz
xchg
xlat
fidivl
mov
push
pop
lods
xor
aaa
sbb
adc
arpl
test
psllq
add
add
lcall
cmc
mov
lret
mov
sahf
fidivs
push
fidivrs
repnz
push
out
pop
bound
pop
fbstp
push
add
adc
push
orl
mov
sbb
into
pop
stos
mov
xchg
and
lahf
or
lcall
je
inc
arpl
or
cmp
xchg
xor
int3
add
addb
jge
inc
sub
mov
out
lds
shrb
add
decb
xor
dec
adc
pop
out
bound
icebp
jo
jp
cmp
adcb
inc
out
jnp
push
insl
movsb
out
arpl
inc
je
andl
pop
in
add
push
pop
popa
cmc
lcall
push
inc
cmpsw
mov
ja
xlat
loope
adc
mov
out
adcl
jecxz,pt
mov
pop
push
pusha
outsb
int
mov
jecxz
cli
aam
xchg
lock
pop
sub
push
orb
and
and
mov
sub
enter
jne
dec
sbb
mov
pushl
popa
cmp
jmp
repnz
icebp
scas
fnstenv
mov
adc
mov
adc
dec
sahf
jp
je
shrl
cmpsb
sarl
outsl
aad
cs
cltd
pop
gs
sub
push
xchg
aaa
cmc
mov
inc
jo
jl
xor
push
inc
sub
and
inc
ret
dec
sbb
cmc
jge
pop
clc
inc
pop
addr16
xlat
jl
lcall
xorb
adc
out
adcb
jnp
and
sti
mov
push
fisttpll
ss
xchg
fimull
data16
aad
push
cmpsb
lcall
daa
xchg
pop
adc
push
xor
scas
xchg
lea
mov
mov
sbb
push
sbbb
adc
cwtl
mov
mov
xchg
fs
rcrl
orb
pop
xchg
sbb
jno
stos
mov
xor
inc
mov
fwait
xor
sti
dec
push
dec
stc
xchg
mov
push
sbb
xor
sbb
jmp
cld
sub
push
dec
insb
and
in
jmp
mov
insl
adc
mov
mov
sub
sub
std
in
je
jmp
mov
xor
es
xchg
xchg
sbb
mov
pop
adc
lahf
cmp
push
jbe
addl
sbb
scas
rclb
inc
sub
xchg
test
sub
ljmp
into
imul
jnp
out
jns
or
fists
cld
xor
leave
sbb
cmc
jnp,pn
lea
les
xor
popa
cwtl
cmp
std
pushf
mov
inc
repz
fst
inc
xchg
mov
lahf
sbb
xchg
xor
pop
out
mov
push
dec
cmc
data16
pop
dec
fistpll
test
jge
lret
or
rcr
dec
jae
sti
addr16
add
leave
repnz
jl
mov
je
fiadds
xor
push
xor
mov
clc
xcrypt-ofb
cmpsl
lods
icebp
rcl
nop
mov
insl
sub
movsl
jecxz
in
test
fdivrp
sub
jnp
jns
jecxz
mov
inc
xchg
sub
cmp
imul
ja
ret
in
in
pop
imul
xchg
inc
movsb
mov
inc
popf
repnz
or
ret
adc
cltd
lcall
test
inc
in
add
sub
out
push
stc
mov
add
fsin
aaa
ret
push
sub
imul
xchg
adc
int
stos
or
xchg
xchg
xor
es
sbbl
outsb
lock
jbe
mov
jnp
cmp
mov
lods
xchg
in
outsl
add
xor
cmpsl
push
sbb
pop
push
inc
aaa
test
std
or
cmpb
or
in
gs
imul
sub
inc
enter
jnp
popa
add
cltd
add
test
mov
push
sbb
xlat
jo
in
and
movsb
mov
lds
and
stos
mov
adc
pop
cmp
sub
adc
test
jno
or
mov
lcall
jecxz
xchg
lds
mov
sub
adc
or
dec
jne
adc
mov
and
push
fstp
nop
repz
jmp
enter
inc
out
mov
es
jae
push
xor
mov
push
mov
dec
and
sub
aam
lret
mov
movsb
fnsave
adc
pusha
sub
jnp
lret
jge
push
mov
fisubrl
outsl
pcmpgtd
faddl
mov
addl
leave
jns
in
rorb
cmp
dec
loop
jb
pusha
je
pop
xlat
jns
movsl
scas
jp
stos
dec
sarl
pop
xor
push
insb
and
push
fwait
or
mov
mov
mov
adc
in
jne
xor
jge
push
fisubl
jbe
sub
int
and
adc
add
inc
inc
jns
je
jns
xchg
das
es
ja
cmc
and
aaa
in
mov
xchg
jae
test
sahf
frstor
sub
jle
inc
mov
mov
jecxz
sahf
loop
aam
cltd
inc
es
ljmp
pop
adc
sbb
mov
shlb
aam
pop
popa
jae
call
sub
bound
dec
push
push
clc
mov
mov
xchg
sarl
jecxz
xchg
cmp
ret
aaa
sbb
enter
hlt
mov
jns
cbtw
inc
addr16
insl
cmp
fisubs
loopne
mov
lcall
stc
inc
sarl
cmpsb
cli
inc
and
jb
mov
ret
push
jnp
xchg
pop
xchg
push
jmp
fcomps
xchg
add
xor
inc
lods
sbb
xchg
dec
adc
rcll
sub
mov
insb
divl
and
icebp
out
pop
popf
ljmp
in
jl
cwtl
xchg
push
xchg
addb
aad
xor
push
sarl
inc
clc
sahf
and
fwait
out
subb
jns
dec
and
jnp,pt
jae
roll
push
loope
divl
jnp
cmp
pushf
jb
pop
or
not
inc
or
je
insb
cs
ja
push
xor
std
xlat
es
sbb
dec
mov
arpl
or
push
pop
push
sbb
aam
sbb
shl
mov
pop
pop
adc
repz
sbb
repnz
testb
cmp
cltd
or
push
dec
popf
jnp
add
and
decb
vstmxcsr
jge
jl
push
into
dec
mov
mov
flds
sbb
ja
mov
jmp
sub
mov
icebp
mov
repz
jo
pushf
xchg
mov
mov
shrl
adc
mov
fstpt
or
pop
in
jb
and
fcoms
into
fs
sahf
andl
imull
mov
addr16
pop
mov
and
rcrb
mov
push
rorl
mov
mov
rcll
push
aas
cmp
xor
adc
or
std
inc
sti
sbbb
clc
outsb
pop
das
movswl
testl
sahf
iret
arpl
aad
inc
das
in
jge
lods
inc
jo
mov
das
jmp
sarl
jge
addb
lock
inc
or
mov
in
push
les
push
xor
cmp
fs
or
xor
jle
aam
mov
xor
insl
xorb
gs
add
sbb
movsb
sahf
dec
cli
add
dec
adc
mov
or
test
popaw
cli
push
cmp
add
xlat
push
sbb
sub
ret
and
mov
mov
xchg
rorb
stos
dec
ret
mov
imul
pop
jbe
enter
rclb
sti
adc
inc
leave
outsb
sbb
pop
xchg
inc
push
xchg
cmpsl
xchg
jl
scas
mov
loopne
bound
call
sbb
push
pop
imul
mov
xor
jecxz
insb
push
dec
bswap
push
jp
inc
mov
xlat
xchg
jmp
or
cltd
enter
cld
in
lock
fistpl
cli
out
jno
xchg
push
sbb
mov
ret
cmp
call
cmc
push
es
xor
mov
or
imul
out
lret
repz
dec
cmp
cmp
je
out
cmpsl
imul
pop
cs
std
or
xor
dec
xor
mov
cmp
lods
popf
mov
cmp
clc
lock
ljmp
sub
dec
cmp
or
push
add
mov
xchg
jmp
aas
xor
out
subl
ret
pop
outsb
pop
mov
outsl
pusha
ja
pushf
outsl
xor
push
leave
mov
das
ret
adc
test
sbb
cmp
repnz
and
xor
cmp
out
mov
xchg
pop
sbb
jmp
xchg
and
ss
outsb
scas
add
sub
jnp
jno
mov
mov
xchg
pop
add
xor
and
inc
and
inc
jg
cld
xor
jp
or
lds
rcrb
or
adc
xor
filds
les
cli
roll
test
fwait
ja
and
movsl
pop
fidivrs
pusha
or
in
xchg
aas
pushf
mov
bound
adc
sbb
cmp
add
jns
shll
inc
fimull
push
aam
or
sti
subb
in
xchg
popf
in
fdivl
in
stc
out
out
test
dec
sti
imul
or
xorb
sbb
je
js
mov
pushw
dec
xchg
loop
fsub
stos
fcmovbe
out
sub
mov
loope
inc
out
xchg
inc
add
add
jnp
xchg
and
es
les
fstps
sub
leave
and
mov
popa
inc
ljmp
test
lea
xchg
or
and
xchg
xchg
pop
xchg
lret
fs
pushf
mov
push
ljmp
aaa
inc
sahf
pop
or
adc
out
pop
sub
jge
pop
lahf
stos
out
inc
stc
icebp
push
fcomi
mov
in
fcomip
sub
idiv
mov
fnstenv
mov
jl
fimull
test
sahf
movsl
mov
rol
shll
xchg
or
pop
or
sbb
push
movsb
fcoml
scas
addr16
fists
out
adc
mov
cmp
push
inc
xchg
inc
fiaddl
shrb
fildll
jae
shrb
roll
out
ret
sbb
mov
inc
pop
jecxz
pop
cmp
push
jle
fsubrp
push
mov
and
ss
cmp
mov
pop
mov
cmp
ret
loopne
mov
mov
cmpsl
loope
dec
pop
outsl
mov
cmp
lret
push
imul
movl
mov
inc
mov
dec
dec
repz
sti
lods
xchg
xor
mov
inc
outsb
fldl
adc
dec
cmp
and
inc
andb
sbb
fcomi
cmp
sbb
fmulp
out
decb
xchg
push
cmc
inc
fildl
dec
ds
call
fs
xlat
jecxz
mov
push
icebp
fs
push
mov
jnp
cmp
xor
movsb
or
jge
iret
jp
inc
push
jmp
sbb
pop
sub
sbb
in
popf
mov
mov
dec
dec
rolb
mov
pop
lret
pop
push
sbb
fs
hlt
hlt
jecxz
jecxz
mov
shll
push
push
xlat
xchg
cmp
cmp
flds
mov
xor
stos
out
stos
sub
jno
outsl
dec
inc
add
cli
or
pop
insb
movsl
dec
mov
sbb
mov
push
jl
lock
ja
mov
ja
enter
outsb
bound
negl
mov
adc
jp
sub
dec
fildll
cmova
lock
sub
mov
lock
mov
and
adcl
and
sbb
lock
js
cli
adc
push
lds
push
mov
shr
jno
xorb
mov
mov
xchg
xchg
in
mov
int
call
inc
lock
lock
dec
aad
popf
js
adc
xchg
or
xchg
xor
ja
add
adc
lods
daa
leave
popa
xchg
add
inc
pop
mov
insl
fmull
jno
aaa
fistps
jno
aaa
mov
xchg
cmpsl
enter
or
rol
or
das
push
push
aaa
lock
aaa
xlat
jle
push
test
fiaddl
fcmovnbe
enter
leave
cmp
mov
mov
subb
bound
cmpsl
daa
and
push
dec
pop
and
mov
jecxz
xlat
clc
imul
movsb
loopne
scas
das
scas
or
pushf
das
dec
iret
rorl
pop
mov
ds
sahf
push
popf
sub
sub
decb
inc
dec
sub
inc
aaa
imul
ljmp
daa
inc
pop
pop
lcall
cli
nop
inc
pop
orb
xchg
mov
lods
xlat
cltd
and
lods
ret
jns
add
sub
enter
cli
jbe
loopne
cmp
mov
pop
dec
mov
aad
mov
sbb
loope
adc
aas
in
push
mov
jmp
daa
test
jg
sahf
test
jo
loopne
adc
cli
imul
xchg
mov
cmp
lret
fistl
inc
mov
cwtl
mov
test
mov
int3
inc
repz
cmpl
enter
stos
negb
icebp
jno
fsubrs
add
push
mov
test
mov
lea
stos
lock
ret
dec
insl
or
jle
out
sarl
lds
pusha
loopne
jb
adc
sarb
out
or
inc
push
adc
add
push
dec
out
imul
and
call
cmp
mov
loop
mov
xchg
lea
or
int3
out
pop
nop
jge
popf
cmp
scas
imul
stos
out
fwait
add
movsb
push
daa
mov
sahf
lds
cmpsl
ds
mov
jns
jae
pop
mov
imul
pop
popf
popf
mov
push
or
mov
leave
cmp
sub
imul
lock
mov
cmpl
jns
or
cmp
ficoml
xor
sub
xchg
in
mov
into
jno
pop
jnp
out
aad
jmp
fwait
sbb
ljmp
fistl
push
add
lret
ficompl
repz
push
xchg
mov
mov
xor
pop
popa
xchg
dec
lds
std
xor
pop
jo
pop
test
sbb
mov
fldenv
fisttpl
mov
fwait
mov
xchg
in
data16
stc
inc
and
sub
fisttpll
mov
sbb
or
imul
es
ret
dec
test
sub
and
cmp
or
in
add
insl
cwtl
rclb
mov
sub
or
pop
test
mov
jbe
pop
lret
popf
cmpsb
fwait
push
mov
scas
jmp
loopne
lock
lock
push
std
subl
jne
adc
orb
pop
into
shll
add
mov
cwtl
add
iret
or
push
cmc
jns
int3
jecxz
movsb
cmp
mov
and
mov
ds
and
xchg
icebp
xchg
add
xchg
push
and
movsb
aaa
mov
fldl
add
int3
cmp
xchg
rorb
push
sbb
fisttpl
adc
mov
dec
mov
mov
sub
pop
imul
cs
jecxz
or
fistpll
shll
enter
nop
test
lea
xor
add
inc
cmc
mov
sbb
test
jnp
shrl
and
pop
test
lret
jp
ds
pushf
push
jge
repnz
sahf
jne
lret
icebp
mov
adc
pop
adc
scas
and
xchg
jb
stc
addr16
pop
dec
jle
rorl
das
jecxz
cltd
lahf
mov
push
das
ret
pop
sbb
or
push
xor
ljmp
mov
xlat
mov
testl
adc
cld
mov
push
mov
in
push
test
inc
cmp
shll
fistpll
pop
mov
or
mov
dec
pushf
sbb
aas
dec
xchg
loop
mov
lret
mov
dec
pop
cmpsl
mov
and
cmp
jnp
add
lds
jge
fildll
xchg
jb
sbb
jl
jbe
adc
sti
loop
mov
pop
in
sub
push
fisubrl
pop
sbb
and
dec
push
add
fstpt
adc
and
or
inc
stos
add
mov
sarl
dec
push
inc
mov
arpl
mov
sub
ficompl
push
mov
xchg
sbb
xchg
cmp
and
std
loopne
fildll
call
or
inc
ja
sub
daa
jno
shlb
jmp
mov
or
cmp
sbb
cmp
pop
xlat
jg
stos
cmp
fmul
and
lret
ficompl
mov
aaa
mov
push
outsb
pop
stos
orb
jg
lds
fcoml
addl
jno
inc
mov
mov
call
std
cmp
call
and
xchg
shll
xchg
xchg
in
mov
ret
aas
in
mov
flds
adc
push
in
lods
addr16
mov
aas
rcr
mov
sub
adc
xchg
int
cmp
push
mov
lods
jp
jp
xchg
cmp
add
icebp
pop
jecxz
ja
ret
loopw
or
mov
cmp
movsl
gs
nop
loope
ret
pop
rcrl
sarl
jle
adc
mov
lret
cmp
stos
stos
add
rcr
sbb
loope
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
test
jecxz
inc
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
add
add
add
add
cmp
add
dec
add
add
add
call
add
adcb
add
add
add
add
add
add
add
add
add
mov
add
add
add
adc
add
in
add
add
add
add
add
add
add
fadds
add
adc
add
test
add
in
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
sub
add
mov
xchg
add
add
add
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
inc
add
add
dec
add
add
add
add
add
andb
add
add
add
mov
movsb
add
adc
add
add
xor
add
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
add
add
or
incl
ja
jo
add
add
incl
ja
add
add
add
incl
jo
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
out
mov
out
out
out
out
add
add
inc
cld
add
addb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
incl
add
add
add
and
add
add
call
add
add
add
add
inc
movsl
add
push
movsl
add
add
add
shlb
add
decl
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
sub
rcl
sub
dec
loop
loope
sbb
add
loope
out
out
mov
add
lret
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
mov
xchg
das
and
mov
movsb
push
adc
and
mov
or
addl
push
movsl
and
xor
ljmp
adc
insb
xor
sub
add
nop
push
fstpl
pop
test
add
adc
add
hlt
outsb
mov
sbb
jno
lidtl
fadd
and
push
loop
add
pop
sub
lea
inc
cld
add
cmp
lock
fimuls
aaa
adc
add
lea
lods
stos
add
nop
cmpl
je
es
jae
test
jecxz
mov
sbb
rep
jle
pop
sbb
add
push
popa
jg
ljmp
sbb
call
dec
add
lea
dec
scas
dec
push
jnp
xchg
aaa
and
push
call
jb
sub
ss
ror
inc
mov
push
movsl
sti
nop
cmp
test
ret
xchg
test
or
inc
inc
push
xor
jnp
aaa
xchg
pushf
andl
addb
movsb
mov
dec
jmp
test
push
push
and
push
lea
push
aas
das
sub
sbb
enter
aas
rolb
cmpsb
xchg
orl
lcall
or
aaa
ficoms
inc
or
orb
test
rcrl
mov
and
adc
pop
mov
sbb
into
cmpsb
cmp
add
add
pop
pop
pop
sub
ret
adc
mov
sub
loopne
orl
xchg
and
pusha
push
mov
popa
dec
fadds
je
push
push
jne
ret
dec
push
loop
xchg
xor
stos
pop
add
jmp
popa
pop
xchg
leave
push
andl
xlat
mov
shll
adc
sahf
lods
and
pop
aas
add
add
xor
push
call
aam
jb
leave
pop
or
or
or
and
push
and
pop
loopne,pn
push
clc
ud2
mov
adc
out
sti
dec
xchg
insb
push
xchg
cld
inc
ds
adc
add
cmp
jge
xor
push
inc
mov
rolb
push
cld
sub
not
jge
add
enter
sbb
sub
ret
shr
int3
rclb
xchg
push
mov
add
add
out
cwtl
inc
jmp
and
pop
mov
xor
xor
popw
pop
jmp
pop
push
test
cmp
xor
sub
data16
jbe
push
jo
cmpsl
inc
pop
lds
push
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
je
loopne
xor
lds
dec
or
add
pop
movsl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
mov
xor
dec
push
push
hlt
push
dec
dec
or
das
int
push
push
sti
cmp
in
aas
rorb
enter
pop
mov
mov
xor
ljmp
fsubr
lret
sbb
cli
cmp
jne
push
stc
jmp
push
fisubl
movl
loopne
sub
pushf
movsl
dec
pop
push
jb
fimull
sub
sub
lret
mov
add
bound
cmpb
pop
mov
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
sbb
mov
and
add
jmp
lret
mov
mov
adc
mov
jo
out
mov
aas
dec
inc
dec
test
ret
and
jmp
dec
push
and
fdivl
mov
add
test
roll
jmp
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
mov
or
inc
cmpsl
data16
pop
push
inc
sbb
inc
pop
pop
shrl
pop
outsl
dec
popa
stos
leave
add
lods
popf
inc
pushf
lods
jb
mov
stos
pusha
div
mov
icebp
mov
movsl
call
dec
or
push
adc
hlt
ret
dec
pop
xchg
or
sbb
cmpsl
or
mov
jl
add
add
mov
push
loope
push
lea
divl
iret
sti
inc
mov
pop
test
cmp
cmp
sub
mov
sbb
mov
enter
adc
mov
inc
and
cwtl
sbb
and
scas
mov
dec
dec
cmp
lea
subb
xor
pop
cmpsb
ficomps
add
jae
bound
subl
je
outsl
outsb
and
gs
out
adc
and
std
mov
gs
ljmp
outsl
jae
das
insb
sahf
pop
outsb
lahf
je
bound
mov
imulb
out
mov
dec
cmp
xor
popa
insb
mov
sub
jne
inc
xchg
xor
dec
fcomi
repz
fadds
js
inc
jnp
fdiv
push
je
int
imul
fwait
insb
add
inc
js
je
xchg
nop
jo
insb
inc
cwtl
push
fs
jo
dec
jo
lods
sbb
cmp
insb
cmpsb
sbb
jl
imul
sahf
hlt
arpl
call
fwait
scas
xor
xchg
or
jp
mov
rcll
inc
mov
imul
lea
or
test
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
test
add
or
add
add
fsubs
add
add
shlb
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
and
inc
add
mov
add
inc
add
jmp
pop
clc
push
inc
dec
pop
je
push
push
mov
pop
pop
jg
jo
shl
push
and
pop
push
jne
add
pop
cmp
jne
add
je
jne
add
rol
push
push
pop
pop
sub
jbe
push
add
pop
push
mov
pop
test
js
and
push
dec
pop
xchg
jbe
cmp
or
jo
jbe
add
push
add
inc
dec
xor
xor
stc
cld
push
jbe
rol
pop
cmp
clc
and
push
jo
xor
pop
push
cmp
pop
or
push
push
pop
pop
js
jb
or
cmc
jnp
push
push
inc
pop
pop
or
jbe
push
mov
pop
stc
cld
push
and
pop
push
or
pop
sub
jo
jno
jp
cmp
and
xor
ror
je
cmp
and
sub
push
jle
rol
pop
nop
je
push
push
stc
pop
pop
push
xor
pop
cld
jl
jno
jge
push
add
test
rol
push
mov
pop
push
je
shl
pop
test
cmp
inc
dec
jae
rol
xchg
stc
jns
push
push
clc
pop
pop
ror
cmc
and
jp
push
add
pop
xchg
xchg
rol
push
sub
pop
js
rol
jb
jp
push
or
pop
nop
push
std
cld
pop
ja
jl
push
mov
pop
lea
or
mov
jnp
push
and
pop
xchg
push
ja
push
ror
pop
pop
or
jbe
push
dec
pop
jge
push
cmp
pop
and
cld
clc
jbe
ja
xor
push
push
ja
cmc
pop
pop
push
push
push
test
pop
pop
pop
jnp
xor
jb
push
push
add
pop
jo
jae
jns
or
push
push
test
pop
pop
cmp
je
push
jg
rol
pop
jo
js
cmp
cld
and
clc
push
push
xor
pop
pop
cld
and
add
add
jp
push
push
add
pop
jno
jge
or
push
push
sub
pop
pop
je
test
push
push
push
cmp
pop
pop
pop
push
jae
jae
push
and
pop
pop
push
push
add
pop
xor
and
cld
test
test
jns
jae
ror
cld
jb
test
clc
cld
jle
push
dec
inc
pop
test
push
add
pop
rol
test
cmc
and
je
cmpl
jne
call
pop
add
cmc
xor
xor
test
and
xor
jne
push
push
and
pop
pop
jae
jle
push
push
pop
pop
jns
js
xor
jae
push
mov
pop
cmp
push
mov
pop
test
cmc
nop
stc
call
pop
add
mov
push
push
push
and
cmc
push
jl
sub
pop
push
push
push
push
mov
pop
pop
pop
pop
jge
ja
cmp
jns
rol
mov
jae
shr
jnp
and
jno
push
mov
pop
cmp
sub
jl
push
push
add
pop
push
jno
xor
pop
and
push
inc
pop
jge
push
jg
push
add
pop
je
push
and
pop
cld
push
push
push
call
pop
sub
add
movl
mov
call
mov
xor
pop
pop
pop
call
pop
pop
pop
pop
shll
mov
mov
loope
les
addb
push
jae
popa
or
sti
faddl
inc
out
mov
push
mov
frstor
aam
and
hlt
add
nop
ds
dec
mov
jl
mov
inc
ljmp
leave
outsb
les
lea
fldenv
and
jp
adc
nop
sti
and
outsl
inc
sub
into
mov
movsb
pop
sbb
dec
cli
je
mov
stos
dec
add
xchg
mov
shlb
dec
addr16
jmp
jb
addr16
test
cs
into
xor
jecxz
sbb
or
mov
out
sbb
iret
lods
sti
ret
jno
loop
insl
test
leave
pop
inc
out
xorb
jnp
dec
repnz
and
call
pop
shl
mov
cltd
mov
or
xchg
jno
fidivs
add
adc
dec
icebp
jo
cmp
mov
test
nop
push
inc
sbbb
movsl
aaa
popa
and
test
jnp
rcrb
pop
add
inc
or
std
push
loop
cmp
loop,pn
push
or
pop
popa
push
cmp
out
mov
mov
mov
lds
lahf
mov
jl
popa
arpl
into
ror
dec
jle
cmp
shrb
inc
clc
rcrb
sub
sysenter
and
out
inc
xor
out
adc
push
ud2
push
and
jge,pn
loopne
aaa
sti
std
push
loop
cmp
loop,pn
or
push
outsl
aaa
mov
mov
addb
pushf
lods
mov
dec
hlt
mov
test
mov
jb
and
aam
mov
imul
push
hlt
iret
mov
cmp
lcall
inc
aaa
out
add
sub
and
test
cmp
scas
adc
pop
repz
fcoml
jle
daa
movsb
dec
xor
add
sub
jge
shrb
push
popa
sub
and
pop
inc
dec
testl
mov
jge
and
daa
xchg
bt
and
das
mov
popf
std
jmp
sbb
leave
and
cmp
mov
jg
lods
xor
or
mov
fldt
push
or
xchg
je
mov
cwtl
pop
or
out
or
lret
inc
clc
push
ret
add
in
popl
leave
pop
imul
sub
fcmovu
sahf
xor
orps
dec
cmp
inc
push
repnz
stc
ds
dec
cmp
push
lret
sahf
pop
sahf
daa
dec
arpl
mov
les
xchg
vandnps
pop
push
stc
and
leave
daa
sahf
fcmovnb
test
daa
mov
push
in
jae
and
add
fucomi
lods
mov
cmp
mov
ja
test
sub
sti
or
test
cld
and
int3
mov
or
inc
jmp
add
push
cmp
mov
adc
pop
push
in
inc
jb
dec
or
scas
jb
pop
mov
mov
or
iret
xchg
push
jmp
mov
data16
adc
xchg
add
push
sbb
les
arpl
fnstenv
test
aad
imul
fdivrp
pop
xchg
fcoms
dec
push
adc
fisttpll
xchg
negl
xchg
subl
fdivrl
add
loope
mov
mov
das
loopne
les
cmpsb
inc
cmp
ror
fucom
pop
aam
mov
jmp
inc
xchg
dec
adc
mov
popf
daa
in
cwtl
mov
jmp
mov
sbb
push
or
and
std
jmp
out
add
cmc
arpl
lods
ja
shl
fisttpll
jl
pop
enter
mov
adc
or
jne
pop
or
jae
sub
arpl
mov
dec
fcmovnu
outsb
ja
dec
mov
mov
cmpb
mov
imul
mov
dec
add
in
mov
push
mov
xchg
add
dec
aam
push
scas
push
xor
decb
pushf
mov
stos
shrl
xor
shlb
pop
jo
mov
xor
jg
sub
sbb
fstpl
and
ljmp
std
adc
lret
push
and
mov
jne
dec
fldl
aas
jge
insl
call
push
push
inc
xor
clc
cmp
scas
push
mov
scas
into
cmpsb
popf
sub
iret
sahf
bound
mov
or
in
adc
into
mov
xor
add
repz
adc
jo
pop
mov
sar
stc
icebp
test
adc
sbb
push
pop
mov
aaa
idiv
mov
push
pusha
jle
sub
arpl
inc
lret
mov
test
rcrl
rcr
fldenv
mov
nop
fisubrl
jg
loopne
mov
cmc
xor
sub
icebp
pop
pop
call
xor
pop
inc
xchg
ds
test
push
lcall
js
stos
xor
dec
scas
imul
int3
addb
sub
loope
inc
andl
push
sub
xchg
roll
jl
mov
outsl
mov
mov
and
loope
inc
jno
sti
lret
push
mov
xchg
pop
push
scas
mov
jp,pn
nop
out
popf
std
mov
fptan
outsl
mov
cltd
mov
push
fcmovnbe
mov
int
mov
or
or
pop
scas
cmp
scas
je
push
insb
dec
xor
aad
mov
cltd
add
sbb
push
jo
test
icebp
nop
rolb
pop
and
icebp
add
mov
ja
cmp
daa
push
in
add
aas
scas
push
jg
enter
bound
xrstors
add
arpl
push
stos
and
bound
in
jns
jne
and
xchg
push
xor
cmp
in
cwtl
dec
test
mov
cmp
dec
dec
clc
addr16
jb
adc
inc
mov
stos
call
ret
jge
jo
adc
mov
sub
dec
jecxz
inc
or
aad
pop
jg
sbb
sbb
sub
jne
dec
push
xchg
and
sub
inc
jbe
fnstsw
repz
je
fldl
lock
inc
pop
es
aas
pop
jbe
sti
lods
fadds
enter
test
mov
fwait
xchg
jae
add
push
mov
jb
or
ds
adc
bound
test
pop
adc
push
lea
ljmp
ja
inc
cmp
jnp
repnz
inc
xchg
mov
dec
cwtl
jle
inc
into
add
push
xor
dec
scas
jae
sub
and
repz
out
dec
inc
vpminsd
hlt
adc
fnsave
xor
bound
pop
dec
rcr
add
or
pop
mov
stc
sub
and
cmp
mov
sub
pop
mov
out
outsl
mov
fsubr
lea
ficoms
movd
mov
fwait
pusha
clc
cwtl
bnd
inc
lcall
lret
daa
pusha
imul
xlat
mov
or
mov
inc
push
mulb
inc
ja
into
jle
jmp
int3
lret
jo
pop
andl
adc
or
xchg
addr16
adc
mov
push
dec
jne
insb
add
jne
adc
cmpsb
int3
push
or
cli
or
and
push
xlat
mov
inc
outsb
aad
lods
das
call
mov
stos
mov
sti
test
jnp
es
sbb
sahf
xchg
pop
push
fsubrs
repnz
loope
jb
pop
cwtl
mov
lret
outsb
inc
rol
mov
pushf
mov
aaa
leave
mov
fcmovnb
mov
sarb
daa
jae
inc
jl
lcall
cmp
je
sub
aad
mov
xchg
lds
jecxz
fs
add
lea
push
cmpsl
icebp
mov
cmp
add
lret
shr
push
aad
dec
ror
test
push
stos
lods
pop
dec
sbb
stc
and
push
mov
and
pushf
xchg
cwtl
lods
enter
push
ljmp
dec
xor
xor
inc
movsb
imul
mov
outsl
and
pushf
mov
in
cmp
fwait
push
push
daa
es
scas
pushf
sub
or
sbb
rorl
scas
mov
jnp
test
loop
push
es
xor
pop
int3
fsubp
adcb
inc
and
test
sub
add
sub
loopne
push
scas
xchg
scas
lret
es
or
iret
clc
movsl
xor
lods
mov
dec
fiaddl
addr16
mov
xor
mov
inc
fwait
not
ljmp
mov
push
adc
jmp
in
sahf
test
jle
dec
adc
and
insl
iret
jge
insl
mov
push
xlat
div
or
fnstcw
or
mov
aaa
push
ret
clc
add
cmp
lcall
nop
lahf
std
ss
mov
gs
adc
pop
ss
and
mov
ds
and
mov
xor
lds
mov
xor
orl
xchg
inc
ljmp
or
mov
inc
fistl
loopne
fucomp
fwait
add
adc
loop
ret
bound
sub
inc
int
ret
movsb
mov
mov
jbe
negl
loope
or
mov
add
jle
add
int3
mov
sbb
xchg
lret
or
mov
sti
xor
push
add
mov
sub
or
andb
aam
jns
lahf
inc
ja
cmpl
push
sub
stos
ljmp
insl
xchg
jl
mov
push
inc
fistl
jle
jmp
lret
pop
or
in
sbb
roll
sbb
jl
mov
cwtl
mov
jl
cmp
icebp
sub
cmpsl
lret
push
jecxz
push
jmp
repnz
adc
mov
inc
jb
mov
jnp
or
mov
in
loope
dec
push
dec
jbe
repnz
adc
push
insb
imul
pop
in
xchg
mov
sub
dec
jp
lcall
sbb
outsb
jmp
inc
std
and
cwtl
out
jb
rcrb
dec
je
stos
xor
movsl
arpl
aam
fcomi
arpl
into
or
mull
adc
lea
ds
arpl
adc
mov
aaa
lret
ds
cmpsb
es
xor
push
sbb
repz
jne
inc
jns
mov
roll
add
call
js
push
hlt
inc
jo
mov
loopne
lock
fscale
push
inc
ljmp
xor
lret
sarb
test
cmp
sub
addr16
lahf
push
jno
push
sarb
addl
stc
and
pop
dec
inc
adc
pop
outsb
jle
or
gs
dec
cmc
das
push
fbld
stc
add
outsb
mov
xchg
fimuls
add
pusha
add
jo
sub
pop
push
aad
mov
mov
lcall
hlt
dec
adc
mov
sbb
fcoms
mov
rcrl
in
int3
add
or
pop
mov
and
xchg
out
das
mov
cmp
test
inc
cmp
lahf
shl
adc
mov
insl
cmc
or
fwait
cmp
jo
clc
cmc
ljmp
push
in
push
outsl
out
mov
and
ljmp
gs
jle
in
pop
fs
repnz
xor
sbb
sbb
xor
pop
cmp
outsb
outsl
ss
mov
dec
dec
cltd
dec
pop
cmpsl
cli
loopne
popa
mov
xor
popf
imul
loopne
push
jecxz
pusha
mov
addr16
pop
data16
jecxz
mov
inc
mov
insl
fisubrs
lret
sub
jae
add
lcall
rorl
mov
pop
push
xor
mov
addr16
mov
fdivrl
mov
in
mov
lds
je
or
sbb
sbb
sub
sahf
lock
mov
cwtl
jmp
pop
outsb
jno
aaa
dec
pop
xchg
andb
sub
lret
pop
mov
xlat
shl
sub
jle
mov
inc
call
jne
outsl
dec
pop
adc
ret
adc
rclb
jle
or
pop
add
fsubs
push
pop
inc
xor
cld
data16
sbb
sbb
cs
inc
mov
pop
add
push
sbb
aaa
or
pop
pop
pusha
lock
xor
adc
mov
cmp
js
xlat
xchg
ss
push
das
pop
cmpsb
mov
out
loope
insb
out
pop
aas
daa
jl
xorl
dec
xchg
dec
pop
jns
mov
loop
push
mov
imul
lods
ljmp
cmpsl
push
mov
icebp
xchg
stc
adc
aaa
xchg
sbb
imul
jb
into
sub
xor
test
popf
push
imul
ror
and
loopne
fistpll
imul
stos
out
shll
out
sbb
dec
das
adc
inc
test
aam
add
sub
les
out
inc
adcl
push
fimull
inc
lret
leave
push
adc
test
jb
out
push
js
fistpl
cs
ja
inc
shlb
or
fs
mov
insb
rclb
mov
aad
gs
out
outsl
rcr
mov
adc
test
sub
mov
ret
sahf
jno
cmp
sub
popf
mov
cli
stos
mov
dec
push
cwtl
lea
jp
xchg
adc
data16
cmpsb
xchg
add
add
divl
rcll
ficompl
add
test
loope
add
sub
repz
repnz
mov
and
push
cmp
mov
scas
inc
pop
xor
dec
lods
repnz
stc
pop
outsb
jecxz
mov
sbb
sbb
adc
pop
mov
in
cs
jmp
popa
cwtl
test
push
jp
add
in
mov
jge
les
ficoms
ja
bound
ror
cwtl
jg
xchg
add
adc
push
scas
jnp
inc
inc
lods
sbb
imul
mov
pop
decl
push
out
mov
xor
or
xor
jns
mov
pusha
popa
inc
xor
std
testb
ret
in
sbb
pop
in
ds
adc
push
adc
rol
lods
fs
and
jmp
or
aad
sbb
scas
ljmp
arpl
pop
rolb
cmp
dec
and
xor
cmc
popa
mov
adc
jo
in
movsb
loop
cli
fs
cmp
scas
mov
mov
and
cmp
mov
ja
pusha
lds
ss
jge
loopne
les
inc
fs
sbb
stc
pop
leave
fwait
sbb
insb
adc
xor
aad
pop
xchg
jae
lock
or
ret
or
out
dec
scas
push
xchg
or
enter
mov
add
or
in
xor
xor
xor
xlat
in
dec
js
xchg
in
xor
or
xor
rcrl
sub
fbstp
xchg
xchg
cmp
out
adc
cmp
add
test
and
test
out
movq
xor
lcall
pop
popf
movsb
mov
pop
push
pusha
push
dec
rorl
xor
lea
out
leave
test
mov
cmp
and
inc
test
jno
xchg
xor
adc
scas
mul
sar
hlt
imul
adc
js
xor
jne
mov
mov
pop
cmp
test
test
jne
in
mov
in
mov
loopne
jg
mov
out
inc
xchg
in
out
add
lret
popf
stc
inc
mov
mov
divl
fcompl
push
aad
arpl
pop
ljmp
push
clc
xchg
mov
insl
aaa
or
add
pop
or
es
fwait
xchg
dec
add
pop
push
fstpt
rol
mov
sbb
or
les
sbb
push
xchg
adc
data16
jnp
inc
lock
mov
or
cmc
push
sti
cmpsl
ret
xchg
pop
sti
jae
mov
or
jno
dec
inc
cmpb
daa
std
add
pop
xchg
sbb
adcl
push
jb
and
je
ss
dec
pop
push
push
test
pop
cmp
push
sub
pop
push
rol
pop
jb
lea
xchg
xchg
not
not
add
sub
cmp
jno
inc
dec
ror
mov
cmp
test
push
cltd
pop
cmc
test
and
rol
jge
push
and
pop
and
cmc
push
jl
add
pop
push
push
mov
pop
pop
push
push
add
pop
push
push
or
pop
pop
test
lea
add
push
ja
test
pop
rol
clc
clc
push
push
push
mov
mov
shr
shl
shr
xor
jecxz
mov
add
cmp
jl
sub
add
cmp
jl
sub
inc
loop
pop
shl
add
mov
pop
pop
ret
test
add
jbe
add
jle
jnp
test
jge
push
cmp
pop
push
jg
jae
sub
pop
jnp
jl
test
inc
dec
stc
jne
push
jne
shl
pop
cmc
xor
push
sub
pop
push
ja
add
pop
jbe
push
and
pop
jbe
sub
jb
push
add
xor
push
pop
shr
jecxz
call
add
loop
ret
jge
cmp
cmp
sub
test
js
ja
add
push
push
push
test
pop
pop
pop
push
add
push
sub
pop
ja
push
dec
inc
pop
push
mov
pop
jbe
and
jo
or
jne
js
push
add
jl
push
rol
pop
push
push
add
pop
pop
push
lea
pop
je
test
nop
xor
nop
ror
push
ja
sub
pop
or
push
push
sub
pop
pop
jns
jb
jo
stc
jns
jb
push
inc
pop
stc
je
push
sub
pop
push
jge
push
or
pop
pop
push
inc
pop
push
inc
pop
push
push
pop
pop
stc
jns
je
xor
test
jge
push
cmp
pop
cld
sub
push
jp
and
pop
nop
push
push
push
mov
mov
bswap
mov
mov
bswap
mov
mov
ror
push
sub
pop
nop
push
push
mov
pop
pop
jg
jl
cmp
push
push
add
pop
pop
jo
push
add
pop
jb
push
add
pop
test
push
push
mov
pop
pop
push
push
sub
pop
pop
push
shl
pop
xor
xor
push
push
ja
jnp
inc
dec
pop
pop
push
add
sub
ror
add
mov
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
sub
push
push
cmp
pop
pop
mov
cmp
xor
and
jg
jns
ror
jb
ror
add
cmc
sub
loop
pop
mov
bswap
mov
mov
bswap
mov
pop
pop
cmc
rol
jl
jle
push
inc
pop
ja
push
and
pop
push
jle
sub
pop
push
rol
pop
jp
push
jnp
or
pop
push
push
jbe
cmp
pop
pop
push
push
push
jge
inc
dec
pop
pop
pop
stc
jns
jns
jge
push
inc
pop
ja
jae
test
or
jbe
jg
add
clc
jne
lea
ret
push
push
fnop
pop
pop
push
jp
push
or
pop
pop
push
add
xor
push
push
cmp
pop
pop
push
push
sub
pop
pop
push
je
jl
shl
pop
jbe
jge
push
shr
pop
jns
stc
jg
sub
push
push
add
pop
pop
je
xor
cld
or
push
push
pop
pop
push
jne
test
pop
push
mov
pop
jns
je
push
jle
test
pop
push
jl
sub
pop
ror
jne
push
test
pop
push
mov
pop
jb
push
push
add
pop
jl
push
mov
pop
push
push
jbe
jno
test
pop
pop
jbe
push
push
push
pop
pop
pop
test
jbe
push
push
pop
pop
mov
sub
add
jl
inc
dec
nop
add
jns
je
push
addr16
addr16
pop
cmp
cld
lea
shl
push
xor
pop
push
jne
push
xor
pop
pop
sub
push
push
push
add
pop
pop
sub
jne
js
and
ror
push
and
pop
push
and
pop
push
and
pop
jne
jbe
xor
xchg
or
js
push
jp
push
pop
pop
or
cmp
jbe
test
push
push
jae
xor
xor
pop
pop
push
or
pop
test
or
push
jle
sub
pop
lea
and
push
cmp
pop
push
jnp
sub
pop
and
push
jle
cmp
pop
rol
or
push
push
push
push
add
pop
pop
pop
test
test
jl
push
sub
pop
push
ror
pop
sar
jae
jo
xor
jnp
sub
add
push
push
push
ror
pop
pop
pop
jb
push
push
or
pop
pop
push
sub
pop
push
jne
ror
pop
clc
ror
jg
push
add
pop
push
jge
add
pop
sub
clc
jge
push
or
pop
ja
xor
cmc
xor
stc
stc
cltd
jns
pop
mov
and
mov
mov
.byte
